
f09868fb2cfec46b04ce8b85d17edebb9b0b79eed663e02d82889a09da24834e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42e9c3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42e98b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x4026aa
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42e9cf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42e98b
  4010d9:	jmp    0x4026a9
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42e99b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42e98b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x4026a8
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401768
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401768
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401768
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42e9c3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401768
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401768
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401768
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401768
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401768
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42e9c3
  40130c:	test   eax,eax
  40130e:	jne    0x401768
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401768
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401768
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401768
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401768
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42e9c3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401768
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401768
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401768
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401768
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401768
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42e9c3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401768
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401768
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401768
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401768
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401768
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42e9c3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401768
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401768
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401768
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401768
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401768
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42e9c3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401768
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401768
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	je     0x401783
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	xor    eax,eax
  401774:	mov    DWORD PTR ds:0x42c00c,0x1740
  40177e:	jmp    0x4026a8
  401783:	sub    DWORD PTR ds:0x42c01c,0x74ec
  40178d:	mov    DWORD PTR [ebp-0x10],0x0
  401794:	sub    edx,ecx
  401796:	mov    eax,DWORD PTR [ebp-0x34]
  401799:	adc    edx,DWORD PTR ds:0x42b004
  40179f:	mov    DWORD PTR [ebp-0x34],eax
  4017a2:	sub    edx,DWORD PTR ds:0x429024
  4017a8:	mov    ecx,0xf89c85b9
  4017ad:	xor    esi,esi
  4017af:	or     esi,DWORD PTR ds:0x42b018
  4017b5:	adc    DWORD PTR ds:0x429020,esi
  4017bb:	mov    DWORD PTR [ebp-0x8],ecx
  4017be:	mov    edx,DWORD PTR ds:0x42d004
  4017c4:	sbb    edx,DWORD PTR ds:0x42901c
  4017ca:	mov    DWORD PTR ds:0x42d004,edx
  4017d0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4017d7:	add    esi,edx
  4017d9:	lea    eax,[ebp-0x3c]
  4017dc:	xor    edx,edx
  4017de:	mov    DWORD PTR [ebp-0x30],eax
  4017e1:	lea    eax,[ebp-0x44]
  4017e4:	mov    DWORD PTR ds:0x42b00c,0x18
  4017ee:	cmp    DWORD PTR ds:0x42b00c,0x0
  4017f5:	je     0x40184f
  4017fb:	cmp    DWORD PTR ds:0x42b00c,0x7
  401802:	jne    0x40181d
  401808:	push   0x42b010
  40180d:	push   0x42c014
  401812:	push   0x42d004
  401817:	call   DWORD PTR ds:0x42e993
  40181d:	cmp    DWORD PTR ds:0x42b00c,0x8
  401824:	jne    0x401837
  40182a:	mov    esi,DWORD PTR ds:0x42b00c
  401830:	dec    esi
  401831:	mov    DWORD PTR ds:0x42b00c,esi
  401837:	mov    esi,DWORD PTR ds:0x42b00c
  40183d:	dec    esi
  40183e:	mov    DWORD PTR ds:0x42b00c,esi
  401844:	jmp    0x4017ee
  401849:	adc    DWORD PTR ds:0x429000,ebx
  40184f:	mov    DWORD PTR [ebp-0x18],eax
  401852:	mov    eax,ds:0x42e313
  401857:	and    DWORD PTR ds:0x429004,0x0
  401861:	jmp    0x401873
  401866:	mov    edi,DWORD PTR ds:0x429004
  40186c:	inc    edi
  40186d:	mov    DWORD PTR ds:0x429004,edi
  401873:	cmp    DWORD PTR ds:0x429004,0x1c
  40187a:	jae    0x4018a6
  401880:	cmp    DWORD PTR ds:0x429004,0x22
  401887:	jne    0x40189b
  40188d:	push   0x0
  40188f:	push   DWORD PTR [ebp-0x20]
  401892:	push   DWORD PTR [ebp-0x10]
  401895:	call   DWORD PTR ds:0x42e997
  40189b:	jmp    0x401866
  4018a0:	adc    DWORD PTR ds:0x42c018,ebx
  4018a6:	mov    eax,DWORD PTR [eax+0x1c8]
  4018ac:	mov    DWORD PTR ds:0x42a010,0x15
  4018b6:	cmp    DWORD PTR ds:0x42a010,0x0
  4018bd:	je     0x401923
  4018c3:	cmp    DWORD PTR ds:0x42a010,0xa
  4018ca:	jne    0x4018f1
  4018d0:	push   DWORD PTR [ebp-0x10]
  4018d3:	push   0x85d6
  4018d8:	push   0x42c01c
  4018dd:	push   DWORD PTR [ebp-0x24]
  4018e0:	push   DWORD PTR [ebp-0x18]
  4018e3:	push   0x61a0
  4018e8:	push   DWORD PTR [ebp-0x18]
  4018eb:	call   DWORD PTR ds:0x42e99f
  4018f1:	cmp    DWORD PTR ds:0x42a010,0xb
  4018f8:	jne    0x40190b
  4018fe:	mov    esi,DWORD PTR ds:0x42a010
  401904:	dec    esi
  401905:	mov    DWORD PTR ds:0x42a010,esi
  40190b:	mov    esi,DWORD PTR ds:0x42a010
  401911:	dec    esi
  401912:	mov    DWORD PTR ds:0x42a010,esi
  401918:	jmp    0x4018b6
  40191d:	and    DWORD PTR ds:0x42b000,edx
  401923:	mov    eax,DWORD PTR [eax]
  401925:	xor    DWORD PTR ds:0x42c01c,0x42d014
  40192f:	mov    edx,DWORD PTR [ebp-0x18]
  401932:	or     esi,DWORD PTR ds:0x42d014
  401938:	mov    esi,0x7510899
  40193d:	xor    eax,esi
  40193f:	mov    edi,0x3272e0
  401944:	add    eax,edi
  401946:	mov    DWORD PTR [edx],eax
  401948:	mov    DWORD PTR ds:0x42900c,0x4148
  401952:	mov    eax,ds:0x42e7c3
  401957:	cmp    eax,0x312bc9f6
  40195c:	mov    DWORD PTR ds:0x429010,0x7018
  401966:	jne    0x401abf
  40196c:	adc    DWORD PTR ds:0x42a018,0x1f6
  401976:	mov    eax,DWORD PTR [ebp-0x8]
  401979:	and    DWORD PTR ds:0x42d010,0x0
  401983:	jmp    0x401995
  401988:	mov    ebx,DWORD PTR ds:0x42d010
  40198e:	inc    ebx
  40198f:	mov    DWORD PTR ds:0x42d010,ebx
  401995:	cmp    DWORD PTR ds:0x42d010,0x1a
  40199c:	jae    0x4019d3
  4019a2:	cmp    DWORD PTR ds:0x42d010,0x1f
  4019a9:	jne    0x4019c8
  4019af:	push   0x42b018
  4019b4:	push   DWORD PTR [ebp-0x18]
  4019b7:	push   0x42e127
  4019bc:	push   DWORD PTR [ebp-0x24]
  4019bf:	push   DWORD PTR [ebp-0x14]
  4019c2:	call   DWORD PTR ds:0x42e9a3
  4019c8:	jmp    0x401988
  4019cd:	and    ebx,DWORD PTR ds:0x429020
  4019d3:	mov    edx,DWORD PTR ds:0x42e313
  4019d9:	sbb    DWORD PTR ds:0x42b000,edi
  4019df:	mov    edx,DWORD PTR [edx+0x198]
  4019e5:	inc    ebx
  4019e6:	xor    eax,esi
  4019e8:	movzx  ebx,WORD PTR ds:0x42b01c
  4019ef:	or     DWORD PTR ds:0x429014,ebx
  4019f5:	add    eax,edi
  4019f7:	sub    DWORD PTR ds:0x42b008,edx
  4019fd:	mov    DWORD PTR [edx],eax
  4019ff:	add    ebx,0x6ca
  401a05:	mov    eax,DWORD PTR [ebp-0x8]
  401a08:	mov    DWORD PTR ds:0x429008,0x1c
  401a12:	cmp    DWORD PTR ds:0x429008,0x0
  401a19:	je     0x401a65
  401a1f:	cmp    DWORD PTR ds:0x429008,0x9
  401a26:	jne    0x401a37
  401a2c:	push   0x42d004
  401a31:	call   DWORD PTR ds:0x42e9ab
  401a37:	cmp    DWORD PTR ds:0x429008,0xa
  401a3e:	jne    0x401a51
  401a44:	mov    ebx,DWORD PTR ds:0x429008
  401a4a:	dec    ebx
  401a4b:	mov    DWORD PTR ds:0x429008,ebx
  401a51:	xor    ebx,ebx
  401a53:	add    ebx,DWORD PTR ds:0x429008
  401a59:	dec    ebx
  401a5a:	mov    DWORD PTR ds:0x429008,ebx
  401a60:	jmp    0x401a12
  401a65:	xor    eax,esi
  401a67:	mov    DWORD PTR ds:0x42a010,0x13
  401a71:	cmp    DWORD PTR ds:0x42a010,0x0
  401a78:	je     0x401ab2
  401a7e:	cmp    DWORD PTR ds:0x42a010,0x23
  401a85:	jne    0x401a9e
  401a8b:	push   DWORD PTR [ebp-0xc]
  401a8e:	push   0x0
  401a90:	push   0x429028
  401a95:	push   DWORD PTR [ebp-0x1c]
  401a98:	call   DWORD PTR ds:0x42e9af
  401a9e:	mov    ebx,DWORD PTR ds:0x42a010
  401aa4:	dec    ebx
  401aa5:	mov    DWORD PTR ds:0x42a010,ebx
  401aab:	jmp    0x401a71
  401ab0:	not    ebx
  401ab2:	add    eax,edi
  401ab4:	xor    DWORD PTR ds:0x42900c,ecx
  401aba:	mov    ds:0x42e7c3,eax
  401abf:	xor    DWORD PTR ds:0x42c010,0x7580
  401ac9:	mov    eax,ds:0x42e313
  401ace:	and    DWORD PTR ds:0x42d018,0x0
  401ad8:	mov    ebx,DWORD PTR ds:0x42d018
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x42d018,ebx
  401ae5:	cmp    DWORD PTR ds:0x42d018,0x4
  401aec:	jne    0x401af8
  401af2:	call   DWORD PTR ds:0x42e9b3
  401af8:	cmp    DWORD PTR ds:0x42d018,0x3
  401aff:	jne    0x401b12
  401b05:	mov    ebx,DWORD PTR ds:0x42d018
  401b0b:	inc    ebx
  401b0c:	mov    DWORD PTR ds:0x42d018,ebx
  401b12:	cmp    DWORD PTR ds:0x42d018,0x1f
  401b19:	jb     0x401ad8
  401b1f:	add    DWORD PTR ds:0x42a000,0x4980
  401b29:	mov    eax,DWORD PTR [eax+0x18c]
  401b2f:	mov    eax,DWORD PTR [eax]
  401b31:	mov    DWORD PTR [ebp-0x7c],eax
  401b34:	or     DWORD PTR ds:0x42c014,ebx
  401b3a:	mov    ebx,0xf89c85bd
  401b3f:	mov    DWORD PTR [ebp-0x10],ebx
  401b42:	mov    DWORD PTR [ebp-0x10],ebx
  401b45:	add    eax,0x7960
  401b4a:	mov    DWORD PTR [ebp-0x10],ebx
  401b4d:	or     eax,DWORD PTR ds:0x42c000
  401b53:	mov    DWORD PTR [ebp-0x18],ecx
  401b56:	mov    DWORD PTR ds:0x429000,0x1d
  401b60:	cmp    DWORD PTR ds:0x429000,0x0
  401b67:	je     0x401c18
  401b6d:	cmp    DWORD PTR ds:0x429000,0xf
  401b74:	jne    0x401b9a
  401b7a:	push   DWORD PTR [ebp-0x18]
  401b7d:	push   0x429020
  401b82:	push   0x22ca
  401b87:	push   0x6383
  401b8c:	push   DWORD PTR [ebp-0x18]
  401b8f:	push   0x7f4f
  401b94:	call   DWORD PTR ds:0x42e9b7
  401b9a:	cmp    DWORD PTR ds:0x429000,0x10
  401ba1:	jne    0x401bb2
  401ba7:	mov    eax,ds:0x429000
  401bac:	dec    eax
  401bad:	mov    ds:0x429000,eax
  401bb2:	mov    eax,ds:0x429000
  401bb7:	dec    eax
  401bb8:	mov    ds:0x429000,eax
  401bbd:	jmp    0x401b60
  401bc2:	and    DWORD PTR ds:0x42a000,0x0
  401bcc:	xor    eax,eax
  401bce:	add    eax,DWORD PTR ds:0x42a000
  401bd4:	inc    eax
  401bd5:	mov    ds:0x42a000,eax
  401bda:	cmp    DWORD PTR ds:0x42a000,0xd
  401be1:	jne    0x401bed
  401be7:	call   DWORD PTR ds:0x42e9bb
  401bed:	cmp    DWORD PTR ds:0x42a000,0xc
  401bf4:	jne    0x401c05
  401bfa:	mov    eax,ds:0x42a000
  401bff:	inc    eax
  401c00:	mov    ds:0x42a000,eax
  401c05:	cmp    DWORD PTR ds:0x42a000,0x18
  401c0c:	jb     0x401bcc
  401c12:	or     DWORD PTR ds:0x42c008,ebx
  401c18:	mov    DWORD PTR [ebp-0x10],ebx
  401c1b:	xor    DWORD PTR ds:0x42c000,edx
  401c21:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401c28:	mov    eax,DWORD PTR [ebp-0x8]
  401c2b:	xor    eax,esi
  401c2d:	or     DWORD PTR ds:0x42d000,0x4414
  401c37:	add    eax,edi
  401c39:	mov    DWORD PTR ds:0x429018,0x61ad
  401c43:	jmp    0x401d03
  401c48:	and    DWORD PTR ds:0x42b018,0x0
  401c52:	xor    ecx,ecx
  401c54:	add    ecx,DWORD PTR ds:0x42b018
  401c5a:	inc    ecx
  401c5b:	mov    DWORD PTR ds:0x42b018,ecx
  401c61:	cmp    DWORD PTR ds:0x42b018,0x29
  401c68:	jne    0x401c81
  401c6e:	push   DWORD PTR [ebp-0x24]
  401c71:	push   0x42c018
  401c76:	push   0x8c2e
  401c7b:	call   DWORD PTR ds:0x42e9bf
  401c81:	cmp    DWORD PTR ds:0x42b018,0x19
  401c88:	jb     0x401c52
  401c8e:	mov    eax,DWORD PTR [ebp-0xc]
  401c91:	adc    ecx,DWORD PTR ds:0x42b000
  401c97:	mov    ecx,DWORD PTR [ebp-0x1c]
  401c9a:	xor    eax,esi
  401c9c:	lea    eax,[eax+ecx*1+0x3272e0]
  401ca3:	push   eax
  401ca4:	mov    eax,DWORD PTR [ebp-0x18]
  401ca7:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401cb1:	xor    eax,esi
  401cb3:	add    DWORD PTR ds:0x42d014,0x21f
  401cbd:	lea    eax,[ebp+eax*1+0x3272e8]
  401cc4:	or     DWORD PTR ds:0x42d004,0x505e
  401cce:	push   eax
  401ccf:	adc    DWORD PTR ds:0x42c01c,ecx
  401cd5:	mov    eax,ds:0x42e313
  401cda:	push   DWORD PTR [eax+0x1bc]
  401ce0:	sbb    DWORD PTR ds:0x42d004,0x7640
  401cea:	call   0x4026bd
  401cef:	xor    eax,0x743a
  401cf4:	mov    eax,DWORD PTR [ebp-0xc]
  401cf7:	mov    ecx,DWORD PTR [ebp-0x1c]
  401cfa:	xor    eax,esi
  401cfc:	lea    eax,[ecx+eax*1+0x3272e0]
  401d03:	mov    ecx,DWORD PTR [ebp-0xc]
  401d06:	not    edx
  401d08:	mov    edx,DWORD PTR [ebp-0xc]
  401d0b:	sbb    DWORD PTR ds:0x42c008,0x6696
  401d15:	xor    edx,esi
  401d17:	xor    ecx,esi
  401d19:	sub    DWORD PTR ds:0x42c014,0x5039
  401d23:	add    ecx,edx
  401d25:	mov    edx,DWORD PTR [ebp-0xc]
  401d28:	xor    edx,esi
  401d2a:	mov    DWORD PTR ds:0x42d004,0x46d7
  401d34:	lea    ecx,[ecx+edx*1+0x9758a0]
  401d3b:	mov    DWORD PTR [ebp-0x1c],eax
  401d3e:	cmp    eax,ecx
  401d40:	mov    DWORD PTR ds:0x42c01c,0x3624
  401d4a:	jbe    0x401c48
  401d50:	mov    DWORD PTR ds:0x42a018,0x1f
  401d5a:	cmp    DWORD PTR ds:0x42a018,0x0
  401d61:	je     0x401db7
  401d67:	cmp    DWORD PTR ds:0x42a018,0xc
  401d6e:	jne    0x401d89
  401d74:	push   0x42e127
  401d79:	push   0x42e139
  401d7e:	push   0x400000
  401d83:	call   DWORD PTR ds:0x42e9c7
  401d89:	cmp    DWORD PTR ds:0x42a018,0xd
  401d90:	jne    0x401da1
  401d96:	mov    eax,ds:0x42a018
  401d9b:	dec    eax
  401d9c:	mov    ds:0x42a018,eax
  401da1:	mov    eax,ds:0x42a018
  401da6:	dec    eax
  401da7:	mov    ds:0x42a018,eax
  401dac:	jmp    0x401d5a
  401db1:	sbb    ecx,0x5e3
  401db7:	mov    eax,DWORD PTR [ebp+0xc]
  401dba:	dec    ecx
  401dbb:	mov    ds:0x42e197,eax
  401dc0:	mov    DWORD PTR ds:0x42c010,0x5070
  401dca:	mov    eax,DWORD PTR [ebp+0x10]
  401dcd:	and    DWORD PTR ds:0x42b000,0x0
  401dd7:	mov    ecx,DWORD PTR ds:0x42b000
  401ddd:	inc    ecx
  401dde:	mov    DWORD PTR ds:0x42b000,ecx
  401de4:	cmp    DWORD PTR ds:0x42b000,0x22
  401deb:	jne    0x401dfc
  401df1:	push   0x42e000
  401df6:	call   DWORD PTR ds:0x42e9cb
  401dfc:	cmp    DWORD PTR ds:0x42b000,0x18
  401e03:	jb     0x401dd7
  401e09:	mov    ds:0x42e3eb,eax
  401e0e:	mov    eax,ds:0x42e197
  401e13:	add    DWORD PTR ds:0x42a010,ebx
  401e19:	mov    ecx,DWORD PTR [ebp-0x30]
  401e1c:	and    DWORD PTR ds:0x42900c,0x4f3f
  401e26:	sub    eax,edi
  401e28:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401e32:	xor    eax,esi
  401e34:	mov    DWORD PTR [ecx],eax
  401e36:	movzx  eax,BYTE PTR ds:0x42900c
  401e3d:	mov    eax,DWORD PTR [ebp-0x34]
  401e40:	cmp    eax,0xf89c85b9
  401e45:	mov    DWORD PTR ds:0x42901c,0x22d7
  401e4f:	jne    0x402106
  401e55:	lea    eax,[ebp-0x40]
  401e58:	mov    DWORD PTR [ebp-0x9c],eax
  401e5e:	or     DWORD PTR ds:0x429028,0x42a008
  401e68:	lea    eax,[ebp+0x4]
  401e6b:	add    DWORD PTR ds:0x42a014,0x42c008
  401e75:	mov    DWORD PTR [ebp-0x40],eax
  401e78:	mov    eax,DWORD PTR [ebp-0x40]
  401e7b:	test   eax,eax
  401e7d:	mov    DWORD PTR ds:0x42b000,0x1a3e
  401e87:	je     0x40268d
  401e8d:	xor    ecx,0x3b66
  401e93:	mov    eax,DWORD PTR [ebp-0x24]
  401e96:	and    DWORD PTR ds:0x429028,0x0
  401ea0:	jmp    0x401eb2
  401ea5:	mov    ecx,DWORD PTR ds:0x429028
  401eab:	inc    ecx
  401eac:	mov    DWORD PTR ds:0x429028,ecx
  401eb2:	cmp    DWORD PTR ds:0x429028,0x14
  401eb9:	jae    0x401ef8
  401ebf:	cmp    DWORD PTR ds:0x429028,0x7
  401ec6:	jne    0x401ed7
  401ecc:	push   0x42a018
  401ed1:	call   DWORD PTR ds:0x42e9d3
  401ed7:	cmp    DWORD PTR ds:0x429028,0x6
  401ede:	jne    0x401ef3
  401ee4:	xor    ecx,ecx
  401ee6:	add    ecx,DWORD PTR ds:0x429028
  401eec:	inc    ecx
  401eed:	mov    DWORD PTR ds:0x429028,ecx
  401ef3:	jmp    0x401ea5
  401ef8:	mov    eax,DWORD PTR [ebp-0xc]
  401efb:	mov    DWORD PTR ds:0x42c018,0x16
  401f05:	cmp    DWORD PTR ds:0x42c018,0x0
  401f0c:	je     0x401f44
  401f12:	cmp    DWORD PTR ds:0x42c018,0x20
  401f19:	jne    0x401f34
  401f1f:	push   0x42a010
  401f24:	push   0x42b014
  401f29:	push   0x42d004
  401f2e:	call   DWORD PTR ds:0x42e993
  401f34:	mov    eax,ds:0x42c018
  401f39:	dec    eax
  401f3a:	mov    ds:0x42c018,eax
  401f3f:	jmp    0x401f05
  401f44:	mov    eax,DWORD PTR [ebp-0x8]
  401f47:	add    DWORD PTR ds:0x42d014,0x2c68
  401f51:	mov    DWORD PTR [ebp+0xc],eax
  401f54:	mov    eax,eax
  401f56:	mov    eax,ds:0x42e313
  401f5b:	movzx  ecx,BYTE PTR ds:0x42900c
  401f62:	and    DWORD PTR ds:0x42d014,ecx
  401f68:	mov    eax,DWORD PTR [eax+0x1c8]
  401f6e:	not    DWORD PTR ds:0x429024
  401f74:	mov    eax,DWORD PTR [eax]
  401f76:	cdq    
  401f77:	and    DWORD PTR ds:0x42a00c,0x0
  401f81:	jmp    0x401f95
  401f86:	xor    ebx,ebx
  401f88:	xor    ebx,DWORD PTR ds:0x42a00c
  401f8e:	inc    ebx
  401f8f:	mov    DWORD PTR ds:0x42a00c,ebx
  401f95:	cmp    DWORD PTR ds:0x42a00c,0x10
  401f9c:	jae    0x401fe4
  401fa2:	cmp    DWORD PTR ds:0x42a00c,0x8
  401fa9:	jne    0x401fbf
  401faf:	push   0x0
  401fb1:	push   DWORD PTR [ebp-0x18]
  401fb4:	push   0x4e1d
  401fb9:	call   DWORD PTR ds:0x42e997
  401fbf:	cmp    DWORD PTR ds:0x42a00c,0x7
  401fc6:	jne    0x401fd9
  401fcc:	mov    ebx,DWORD PTR ds:0x42a00c
  401fd2:	inc    ebx
  401fd3:	mov    DWORD PTR ds:0x42a00c,ebx
  401fd9:	jmp    0x401f86
  401fde:	and    ecx,0x6703
  401fe4:	mov    ebx,eax
  401fe6:	add    eax,DWORD PTR ds:0x429000
  401fec:	mov    eax,0xfabdbee9
  401ff1:	sbb    ecx,DWORD PTR ds:0x42c000
  401ff7:	add    ebx,eax
  401ff9:	adc    edx,0xffffffff
  401ffc:	mov    ecx,DWORD PTR ds:0x42d004
  402002:	adc    DWORD PTR ds:0x42a008,ecx
  402008:	and    DWORD PTR [ebp-0x10],0x0
  40200c:	add    ecx,0x4d2b
  402012:	xor    edx,0x0
  402015:	mov    DWORD PTR [ebp-0x6c],edx
  402018:	mov    edx,DWORD PTR [ebp+0xc]
  40201b:	mov    DWORD PTR ds:0x42c004,0x11
  402025:	cmp    DWORD PTR ds:0x42c004,0x0
  40202c:	je     0x40207c
  402032:	cmp    DWORD PTR ds:0x42c004,0x1d
  402039:	jne    0x40205c
  40203f:	push   DWORD PTR [ebp-0x10]
  402042:	push   DWORD PTR [ebp-0x24]
  402045:	push   0x429014
  40204a:	push   DWORD PTR [ebp-0x24]
  40204d:	push   DWORD PTR [ebp-0x28]
  402050:	push   DWORD PTR [ebp-0x24]
  402053:	push   DWORD PTR [ebp-0x1c]
  402056:	call   DWORD PTR ds:0x42e99f
  40205c:	mov    ecx,DWORD PTR ds:0x42c004
  402062:	dec    ecx
  402063:	mov    DWORD PTR ds:0x42c004,ecx
  402069:	jmp    0x402025
  40206e:	xor    ecx,ecx
  402070:	add    ecx,DWORD PTR ds:0x42c014
  402076:	and    DWORD PTR ds:0x42b004,ecx
  40207c:	mov    DWORD PTR [ebp-0x14],edx
  40207f:	mov    ecx,0x8a29a12b
  402084:	xor    ebx,ecx
  402086:	add    DWORD PTR [ebp-0x14],eax
  402089:	mov    edx,DWORD PTR [ebp-0x14]
  40208c:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402090:	xor    edx,ecx
  402092:	mov    DWORD PTR [ebp-0x58],edx
  402095:	mov    edx,DWORD PTR [ebp-0x10]
  402098:	xor    edx,0x0
  40209b:	mov    DWORD PTR [ebp-0x54],edx
  40209e:	cmp    DWORD PTR [ebp-0x58],ebx
  4020a1:	jne    0x4020b3
  4020a7:	mov    edx,DWORD PTR [ebp-0x6c]
  4020aa:	cmp    DWORD PTR [ebp-0x54],edx
  4020ad:	je     0x4020e2
  4020b3:	mov    edx,DWORD PTR ds:0x42e313
  4020b9:	mov    edx,DWORD PTR [edx+0x1c0]
  4020bf:	mov    edx,DWORD PTR [edx]
  4020c1:	xor    ebx,ebx
  4020c3:	add    edx,eax
  4020c5:	adc    ebx,0xffffffff
  4020c8:	xor    edx,ecx
  4020ca:	xor    ebx,0x0
  4020cd:	cmp    edx,0x70941fc1
  4020d3:	jne    0x40268d
  4020d9:	cmp    ebx,0xffffffff
  4020dc:	jne    0x40268d
  4020e2:	mov    edx,DWORD PTR ds:0x42e38f
  4020e8:	mov    ebx,DWORD PTR ds:0x42e397
  4020ee:	xor    edx,ebx
  4020f0:	mov    DWORD PTR ds:0x42e38f,edx
  4020f6:	mov    ebx,DWORD PTR ds:0x42e38f
  4020fc:	mov    edx,DWORD PTR [ebp-0x40]
  4020ff:	add    DWORD PTR [edx],ebx
  402101:	jmp    0x40264e
  402106:	mov    eax,DWORD PTR [ebp-0x3c]
  402109:	cmp    eax,0xf89c85b8
  40210e:	je     0x40216b
  402114:	mov    eax,DWORD PTR [ebp-0x8]
  402117:	mov    ecx,DWORD PTR [ebp-0x44]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	cmp    eax,ecx
  402120:	je     0x40216b
  402126:	mov    eax,ds:0x42e313
  40212b:	mov    eax,DWORD PTR [eax+0x194]
  402131:	mov    ecx,DWORD PTR [eax]
  402133:	mov    eax,DWORD PTR [ecx+0x3c]
  402136:	push   DWORD PTR ds:0x42e3eb
  40213c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402140:	push   DWORD PTR ds:0x42e197
  402146:	add    eax,ecx
  402148:	mov    ecx,DWORD PTR ds:0x42e313
  40214e:	mov    ecx,DWORD PTR [ecx+0x194]
  402154:	push   DWORD PTR [ecx]
  402156:	call   eax
  402158:	mov    ecx,DWORD PTR ds:0x42e313
  40215e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402164:	mov    DWORD PTR [ecx],eax
  402166:	jmp    0x40268d
  40216b:	mov    eax,DWORD PTR [ebp-0x8]
  40216e:	mov    ecx,DWORD PTR [ebp-0x7c]
  402171:	xor    eax,esi
  402173:	add    eax,edi
  402175:	cmp    eax,ecx
  402177:	jne    0x402548
  40217d:	mov    eax,DWORD PTR [ebp-0x8]
  402180:	mov    ecx,DWORD PTR ds:0x42e313
  402186:	mov    ecx,DWORD PTR [ecx+0x198]
  40218c:	xor    eax,esi
  40218e:	add    eax,edi
  402190:	cmp    eax,DWORD PTR [ecx]
  402192:	jne    0x4021b1
  402198:	mov    eax,DWORD PTR [ebp-0x8]
  40219b:	push   0xf89c85b9
  4021a0:	xor    eax,esi
  4021a2:	add    eax,edi
  4021a4:	push   eax
  4021a5:	push   ebx
  4021a6:	push   DWORD PTR [ebp-0xc]
  4021a9:	push   DWORD PTR [ebp-0x8]
  4021ac:	call   0x409ed5
  4021b1:	mov    eax,DWORD PTR [ebp-0xc]
  4021b4:	mov    DWORD PTR [ebp-0x48],eax
  4021b7:	mov    eax,DWORD PTR [ebp-0x8]
  4021ba:	mov    DWORD PTR [ebp-0x1c],eax
  4021bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4021c0:	xor    eax,esi
  4021c2:	add    eax,edi
  4021c4:	mov    DWORD PTR [ebp+0x10],eax
  4021c7:	mov    eax,ds:0x42e193
  4021cc:	mov    eax,DWORD PTR [eax]
  4021ce:	mov    DWORD PTR [ebp+0x10],eax
  4021d1:	mov    eax,ds:0x42e39b
  4021d6:	mov    eax,DWORD PTR [eax]
  4021d8:	mov    DWORD PTR [ebp-0x18],eax
  4021db:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4021e2:	mov    eax,DWORD PTR [ebp+0xc]
  4021e5:	xor    eax,esi
  4021e7:	add    eax,edi
  4021e9:	mov    DWORD PTR [ebp+0xc],eax
  4021ec:	mov    eax,ds:0x42e313
  4021f1:	mov    DWORD PTR [ebp+0xc],eax
  4021f4:	mov    eax,DWORD PTR [ebp+0x10]
  4021f7:	mov    DWORD PTR [ebp+0xc],eax
  4021fa:	mov    eax,DWORD PTR [ebp+0xc]
  4021fd:	push   0x4
  4021ff:	pop    ecx
  402200:	sub    ecx,eax
  402202:	add    ecx,DWORD PTR [ebp-0x18]
  402205:	mov    DWORD PTR [ebp-0x30],0xf89c85f9
  40220c:	mov    DWORD PTR [ebp+0x10],ecx
  40220f:	mov    DWORD PTR [ebp-0xe4],ebx
  402215:	mov    eax,DWORD PTR [ebp+0xc]
  402218:	mov    DWORD PTR [ebp-0xe0],eax
  40221e:	mov    eax,DWORD PTR [ebp+0x10]
  402221:	mov    DWORD PTR [ebp-0xdc],eax
  402227:	mov    eax,DWORD PTR [ebp-0x30]
  40222a:	xor    eax,esi
  40222c:	add    eax,edi
  40222e:	mov    DWORD PTR [ebp-0xd8],eax
  402234:	lea    eax,[ebp-0x88]
  40223a:	mov    DWORD PTR [ebp-0xd4],eax
  402240:	mov    eax,DWORD PTR [ebp-0xe4]
  402246:	xor    eax,esi
  402248:	add    eax,edi
  40224a:	mov    DWORD PTR [ebp-0xe4],eax
  402250:	lea    eax,[ebp-0xe4]
  402256:	push   eax
  402257:	mov    eax,DWORD PTR [ebp-0x48]
  40225a:	xor    eax,esi
  40225c:	add    eax,edi
  40225e:	push   eax
  40225f:	mov    eax,ds:0x42e333
  402264:	push   0x42e289
  402269:	push   DWORD PTR [eax]
  40226b:	call   0x402992
  402270:	mov    eax,DWORD PTR [ebp+0xc]
  402273:	mov    ecx,DWORD PTR [ebp+0x10]
  402276:	mov    DWORD PTR [ebp-0x84],ecx
  40227c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40227f:	xor    ecx,esi
  402281:	mov    DWORD PTR [ebp-0x18],eax
  402284:	add    ecx,edi
  402286:	jmp    0x4024e9
  40228b:	lea    edx,[ecx+eax*1]
  40228e:	mov    DWORD PTR [ebp+0x10],edx
  402291:	mov    edx,DWORD PTR [ebp-0x84]
  402297:	sub    edx,ecx
  402299:	mov    DWORD PTR [ebp+0xc],edx
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	mov    DWORD PTR [ebp-0x4c],edx
  4022a2:	mov    edx,DWORD PTR [ebp+0x10]
  4022a5:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4022ac:	mov    DWORD PTR [ebp-0x6c],edx
  4022af:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4022b6:	mov    edx,DWORD PTR [ebp-0x50]
  4022b9:	xor    edx,esi
  4022bb:	add    edx,edi
  4022bd:	mov    DWORD PTR [ebp+0x10],edx
  4022c0:	mov    edx,DWORD PTR [ebp-0x50]
  4022c3:	xor    edx,esi
  4022c5:	add    edx,edi
  4022c7:	mov    DWORD PTR [ebp+0xc],edx
  4022ca:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4022d1:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4022d8:	mov    edx,DWORD PTR [ebp-0x50]
  4022db:	mov    ebx,DWORD PTR [ebp-0x4c]
  4022de:	xor    edx,esi
  4022e0:	add    edx,edi
  4022e2:	cmp    ebx,edx
  4022e4:	je     0x4024dd
  4022ea:	mov    eax,DWORD PTR [ebp-0x20]
  4022ed:	xor    eax,esi
  4022ef:	mov    edx,0xffcd8d20
  4022f4:	sub    edx,eax
  4022f6:	add    edx,DWORD PTR [ebp-0x4c]
  4022f9:	mov    eax,DWORD PTR [ebp-0x20]
  4022fc:	mov    ebx,DWORD PTR [ebp+0x10]
  4022ff:	xor    eax,esi
  402301:	add    eax,edi
  402303:	imul   eax,ebx
  402306:	cmp    eax,edx
  402308:	ja     0x4024da
  40230e:	mov    edx,DWORD PTR [ebp+0x10]
  402311:	mov    eax,DWORD PTR [ebp-0x4c]
  402314:	mov    ebx,DWORD PTR [ebp-0x68]
  402317:	sub    eax,edx
  402319:	xor    ebx,esi
  40231b:	xor    edx,edx
  40231d:	add    ebx,edi
  40231f:	div    ebx
  402321:	mov    DWORD PTR [ebp+0xc],eax
  402324:	mov    eax,DWORD PTR [ebp-0x74]
  402327:	mov    edx,DWORD PTR [ebp+0xc]
  40232a:	xor    eax,esi
  40232c:	add    eax,edi
  40232e:	cmp    edx,eax
  402330:	jbe    0x402340
  402336:	mov    eax,DWORD PTR [ebp-0x74]
  402339:	xor    eax,esi
  40233b:	add    eax,edi
  40233d:	mov    DWORD PTR [ebp+0xc],eax
  402340:	mov    eax,DWORD PTR [ebp-0x68]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    DWORD PTR [ebp+0xc],eax
  402350:	mov    eax,DWORD PTR [ebp-0x50]
  402353:	mov    edx,DWORD PTR [ebp+0xc]
  402356:	xor    eax,esi
  402358:	add    eax,edi
  40235a:	cmp    edx,eax
  40235c:	je     0x4024c3
  402362:	mov    eax,DWORD PTR [ebp+0xc]
  402365:	mov    DWORD PTR [ebp-0x34],eax
  402368:	mov    eax,DWORD PTR [ebp+0x10]
  40236b:	add    eax,DWORD PTR [ebp-0x6c]
  40236e:	mov    DWORD PTR [ebp-0x30],0xf89c85b9
  402375:	mov    DWORD PTR [ebp-0x28],eax
  402378:	mov    eax,0xf89c85b8
  40237d:	mov    DWORD PTR [ebp-0x5c],eax
  402380:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  402387:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40238e:	mov    DWORD PTR [ebp-0x38],eax
  402391:	mov    eax,DWORD PTR [ebp-0x30]
  402394:	xor    eax,esi
  402396:	add    eax,edi
  402398:	jmp    0x40247f
  40239d:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4023a4:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4023ab:	mov    eax,DWORD PTR [ebp-0x38]
  4023ae:	mov    edx,DWORD PTR [ebp+0xc]
  4023b1:	xor    eax,esi
  4023b3:	add    eax,edi
  4023b5:	imul   eax,edx
  4023b8:	mov    edx,DWORD PTR [ebp-0x28]
  4023bb:	mov    al,BYTE PTR [eax+edx*1]
  4023be:	mov    BYTE PTR [ebp-0x1],al
  4023c1:	mov    eax,DWORD PTR [ebp-0x38]
  4023c4:	mov    edx,DWORD PTR [ebp+0xc]
  4023c7:	xor    eax,esi
  4023c9:	add    eax,edi
  4023cb:	imul   eax,edx
  4023ce:	mov    edx,DWORD PTR [ebp-0x54]
  4023d1:	xor    edx,esi
  4023d3:	add    eax,edx
  4023d5:	mov    edx,DWORD PTR [ebp-0x28]
  4023d8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4023e0:	mov    edx,DWORD PTR [ebp-0x78]
  4023e3:	xor    edx,esi
  4023e5:	lea    eax,[edx+eax*1+0x3272e0]
  4023ec:	movzx  edx,BYTE PTR [ebp-0x1]
  4023f0:	xor    edx,eax
  4023f2:	mov    BYTE PTR [ebp-0x1],dl
  4023f5:	mov    al,BYTE PTR [ebp-0x1]
  4023f8:	mov    edx,DWORD PTR [ebp-0x38]
  4023fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4023fe:	xor    edx,esi
  402400:	add    edx,edi
  402402:	imul   edx,ebx
  402405:	mov    ebx,DWORD PTR [ebp-0x28]
  402408:	mov    BYTE PTR [edx+ebx*1],al
  40240b:	mov    eax,DWORD PTR [ebp-0x38]
  40240e:	mov    edx,DWORD PTR [ebp+0xc]
  402411:	xor    eax,esi
  402413:	add    eax,edi
  402415:	imul   eax,edx
  402418:	mov    edx,DWORD PTR [ebp-0x28]
  40241b:	mov    al,BYTE PTR [eax+edx*1]
  40241e:	mov    BYTE PTR [ebp-0x1],al
  402421:	mov    eax,DWORD PTR [ebp-0x38]
  402424:	mov    edx,DWORD PTR [ebp+0xc]
  402427:	xor    eax,esi
  402429:	add    eax,edi
  40242b:	imul   eax,edx
  40242e:	mov    edx,DWORD PTR [ebp-0x5c]
  402431:	xor    edx,esi
  402433:	add    eax,edx
  402435:	mov    edx,DWORD PTR [ebp-0x28]
  402438:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402440:	mov    edx,DWORD PTR [ebp-0x80]
  402443:	xor    edx,esi
  402445:	lea    eax,[edx+eax*1+0x3272e0]
  40244c:	movzx  edx,BYTE PTR [ebp-0x1]
  402450:	xor    edx,eax
  402452:	mov    BYTE PTR [ebp-0x1],dl
  402455:	mov    al,BYTE PTR [ebp-0x1]
  402458:	mov    edx,DWORD PTR [ebp-0x38]
  40245b:	mov    ebx,DWORD PTR [ebp+0xc]
  40245e:	xor    edx,esi
  402460:	add    edx,edi
  402462:	imul   edx,ebx
  402465:	mov    ebx,DWORD PTR [ebp-0x28]
  402468:	mov    BYTE PTR [edx+ebx*1],al
  40246b:	mov    eax,DWORD PTR [ebp-0x10]
  40246e:	mov    edx,DWORD PTR [ebp-0x5c]
  402471:	xor    eax,esi
  402473:	xor    edx,esi
  402475:	add    eax,edi
  402477:	add    edx,edi
  402479:	imul   eax,edx
  40247c:	add    eax,DWORD PTR [ebp+0xc]
  40247f:	mov    DWORD PTR [ebp+0xc],eax
  402482:	mov    eax,DWORD PTR [ebp+0xc]
  402485:	mov    edx,DWORD PTR [ebp-0x34]
  402488:	cmp    edx,eax
  40248a:	jb     0x40239d
  402490:	mov    eax,DWORD PTR [ebp-0x5c]
  402493:	mov    edx,DWORD PTR [ebp-0x34]
  402496:	xor    eax,esi
  402498:	add    eax,edi
  40249a:	imul   eax,edx
  40249d:	mov    edx,DWORD PTR [ebp-0x30]
  4024a0:	xor    edx,esi
  4024a2:	add    edx,edi
  4024a4:	or     eax,edx
  4024a6:	mov    edx,DWORD PTR [ebp-0x20]
  4024a9:	xor    edx,esi
  4024ab:	add    eax,edx
  4024ad:	mov    edx,DWORD PTR [ebp-0x20]
  4024b0:	xor    edx,esi
  4024b2:	add    eax,edx
  4024b4:	mov    edx,DWORD PTR [ebp+0x10]
  4024b7:	lea    eax,[eax+edx*1+0x64e5c0]
  4024be:	jmp    0x4024d2
  4024c3:	mov    eax,DWORD PTR [ebp-0x20]
  4024c6:	mov    edx,DWORD PTR [ebp+0x10]
  4024c9:	xor    eax,esi
  4024cb:	lea    eax,[eax+edx*1+0x3272e0]
  4024d2:	mov    DWORD PTR [ebp+0x10],eax
  4024d5:	jmp    0x4022ea
  4024da:	mov    eax,DWORD PTR [ebp-0x18]
  4024dd:	mov    edx,DWORD PTR [ebp-0x48]
  4024e0:	xor    edx,esi
  4024e2:	lea    ecx,[ecx+edx*1+0x3272e0]
  4024e9:	lea    edx,[ecx-0x3272e0]
  4024ef:	xor    edx,esi
  4024f1:	cmp    edx,0xf89c95b9
  4024f7:	jne    0x40228b
  4024fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402500:	mov    edx,DWORD PTR [ebp-0x48]
  402503:	mov    ebx,DWORD PTR [ebp-0x1c]
  402506:	xor    edx,esi
  402508:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  40250f:	xor    ecx,esi
  402511:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402518:	xor    ebx,esi
  40251a:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402521:	mov    edx,DWORD PTR [ebp-0x48]
  402524:	xor    edx,esi
  402526:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  40252d:	mov    eax,DWORD PTR [ebp-0x48]
  402530:	mov    eax,DWORD PTR [ebp-0x8]
  402533:	xor    eax,esi
  402535:	add    eax,edi
  402537:	mov    ds:0x42e397,eax
  40253c:	mov    eax,DWORD PTR [ebp-0x8]
  40253f:	xor    eax,esi
  402541:	add    eax,edi
  402543:	mov    ds:0x42e38f,eax
  402548:	lea    eax,[ebp-0x2c]
  40254b:	mov    DWORD PTR [ebp-0x90],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x2c],eax
  402557:	mov    eax,DWORD PTR [ebp-0x2c]
  40255a:	test   eax,eax
  40255c:	je     0x40268d
  402562:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  40256c:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402576:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402580:	mov    DWORD PTR [ebp-0x94],0x72670a11
  40258a:	call   0x4053bb
  40258f:	mov    eax,DWORD PTR [ebp-0x24]
  402592:	mov    eax,DWORD PTR [ebp-0xc]
  402595:	mov    eax,DWORD PTR [ebp-0x8]
  402598:	mov    DWORD PTR [ebp+0xc],eax
  40259b:	mov    eax,eax
  40259d:	mov    eax,ds:0x42e313
  4025a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025a8:	mov    eax,DWORD PTR [eax]
  4025aa:	cdq    
  4025ab:	mov    ebx,eax
  4025ad:	mov    eax,0xfabdbee9
  4025b2:	add    ebx,eax
  4025b4:	adc    edx,0xffffffff
  4025b7:	and    DWORD PTR [ebp-0x10],0x0
  4025bb:	xor    edx,0x0
  4025be:	mov    DWORD PTR [ebp-0x6c],edx
  4025c1:	mov    edx,DWORD PTR [ebp+0xc]
  4025c4:	mov    DWORD PTR [ebp-0x14],edx
  4025c7:	mov    ecx,0x8a29a12b
  4025cc:	xor    ebx,ecx
  4025ce:	add    DWORD PTR [ebp-0x14],eax
  4025d1:	mov    edx,DWORD PTR [ebp-0x14]
  4025d4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025d8:	xor    edx,ecx
  4025da:	mov    DWORD PTR [ebp-0x58],edx
  4025dd:	mov    edx,DWORD PTR [ebp-0x10]
  4025e0:	xor    edx,0x0
  4025e3:	mov    DWORD PTR [ebp-0x54],edx
  4025e6:	cmp    DWORD PTR [ebp-0x58],ebx
  4025e9:	jne    0x4025fb
  4025ef:	mov    edx,DWORD PTR [ebp-0x6c]
  4025f2:	cmp    DWORD PTR [ebp-0x54],edx
  4025f5:	je     0x40262a
  4025fb:	mov    edx,DWORD PTR ds:0x42e313
  402601:	mov    edx,DWORD PTR [edx+0x1c0]
  402607:	mov    edx,DWORD PTR [edx]
  402609:	xor    ebx,ebx
  40260b:	add    edx,eax
  40260d:	adc    ebx,0xffffffff
  402610:	xor    edx,ecx
  402612:	xor    ebx,0x0
  402615:	cmp    edx,0x70941fc1
  40261b:	jne    0x40268d
  402621:	cmp    ebx,0xffffffff
  402624:	jne    0x40268d
  40262a:	mov    edx,DWORD PTR ds:0x42e38f
  402630:	mov    ebx,DWORD PTR ds:0x42e397
  402636:	xor    edx,ebx
  402638:	mov    DWORD PTR ds:0x42e38f,edx
  40263e:	mov    edx,DWORD PTR [ebp-0x2c]
  402641:	mov    ebx,DWORD PTR ds:0x42e38f
  402647:	add    ebx,DWORD PTR [edx]
  402649:	mov    edx,DWORD PTR [ebp-0x2c]
  40264c:	mov    DWORD PTR [edx],ebx
  40264e:	mov    edx,DWORD PTR [ebp+0xc]
  402651:	xor    esi,edx
  402653:	mov    edx,DWORD PTR ds:0x42e38f
  402659:	add    esi,edi
  40265b:	xor    ebx,ebx
  40265d:	add    esi,eax
  40265f:	adc    ebx,0xffffffff
  402662:	xor    edi,edi
  402664:	xor    esi,ecx
  402666:	xor    ebx,0x0
  402669:	add    edx,eax
  40266b:	adc    edi,0xffffffff
  40266e:	xor    edx,ecx
  402670:	xor    edi,0x0
  402673:	cmp    edx,esi
  402675:	jne    0x40268d
  40267b:	cmp    edi,ebx
  40267d:	jne    0x40268d
  402683:	mov    eax,ds:0x42e38f
  402688:	mov    ds:0x42e397,eax
  40268d:	mov    eax,ds:0x42e313
  402692:	push   0x4
  402694:	add    eax,0x1cc
  402699:	push   eax
  40269a:	lea    eax,[ebp-0x24]
  40269d:	push   eax
  40269e:	call   0x4026bd
  4026a3:	mov    eax,DWORD PTR [ebp-0x24]
  4026a6:	mov    eax,DWORD PTR [eax]
  4026a8:	pop    ebx
  4026a9:	pop    esi
  4026aa:	pop    edi
  4026ab:	leave  
  4026ac:	ret    0xc
  4026af:	xor    eax,eax
  4026b1:	sub    DWORD PTR ds:0x429010,0x42b004
  4026bb:	inc    eax
  4026bc:	ret    
  4026bd:	push   ebp
  4026be:	mov    ebp,esp
  4026c0:	sub    esp,0x10
  4026c3:	mov    eax,0xf89c85b9
  4026c8:	and    DWORD PTR ds:0x42b01c,0x0
  4026d2:	jmp    0x4026e4
  4026d7:	mov    edx,DWORD PTR ds:0x42b01c
  4026dd:	inc    edx
  4026de:	mov    DWORD PTR ds:0x42b01c,edx
  4026e4:	cmp    DWORD PTR ds:0x42b01c,0x17
  4026eb:	jae    0x402746
  4026f1:	cmp    DWORD PTR ds:0x42b01c,0x9
  4026f8:	jne    0x40271b
  4026fe:	push   0x42a010
  402703:	push   DWORD PTR [ebp-0x20]
  402706:	push   0x42e111
  40270b:	push   0x54f4
  402710:	push   0x3b26
  402715:	call   DWORD PTR ds:0x42e9a3
  40271b:	cmp    DWORD PTR ds:0x42b01c,0x8
  402722:	jne    0x402735
  402728:	mov    edx,DWORD PTR ds:0x42b01c
  40272e:	inc    edx
  40272f:	mov    DWORD PTR ds:0x42b01c,edx
  402735:	jmp    0x4026d7
  40273a:	mov    edx,DWORD PTR ds:0x42c000
  402740:	or     DWORD PTR ds:0x429018,edx
  402746:	mov    DWORD PTR [ebp-0x4],eax
  402749:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402750:	mov    ecx,DWORD PTR [ebp-0x4]
  402753:	xor    edx,0x6f97
  402759:	push   esi
  40275a:	adc    esi,esi
  40275c:	mov    edx,0x7510899
  402761:	sbb    DWORD PTR ds:0x429008,0x3023
  40276b:	xor    ecx,edx
  40276d:	and    DWORD PTR ds:0x42900c,ebx
  402773:	mov    esi,0x3272e0
  402778:	push   edi
  402779:	mov    DWORD PTR ds:0x42d01c,0xa60
  402783:	mov    edi,DWORD PTR [ebp+0x10]
  402786:	sub    DWORD PTR ds:0x42c00c,0x3e85
  402790:	add    ecx,esi
  402792:	cmp    ecx,edi
  402794:	mov    DWORD PTR ds:0x42b010,0x6d5c
  40279e:	je     0x4028b7
  4027a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4027a7:	mov    edi,DWORD PTR ds:0x42b000
  4027ad:	sbb    DWORD PTR ds:0x429000,edi
  4027b3:	mov    edi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,eax
  4027b8:	xor    ecx,edx
  4027ba:	xor    DWORD PTR ds:0x42900c,0x42a014
  4027c4:	add    ecx,esi
  4027c6:	xor    DWORD PTR ds:0x42d004,0x5916
  4027d0:	add    edi,0xfabdbee9
  4027d6:	adc    eax,0xffffffff
  4027d9:	not    DWORD PTR ds:0x42c004
  4027df:	xor    eax,0x0
  4027e2:	add    DWORD PTR ds:0x42c010,0x42c014
  4027ec:	mov    DWORD PTR [ebp-0xc],eax
  4027ef:	inc    eax
  4027f0:	push   ebx
  4027f1:	add    eax,0x103f
  4027f6:	xor    ebx,ebx
  4027f8:	xor    edi,0x8a29a12b
  4027fe:	mov    eax,ecx
  402800:	add    eax,0xfabdbee9
  402805:	adc    ebx,0xffffffff
  402808:	mov    DWORD PTR ds:0x42c00c,0x588f
  402812:	xor    eax,0x8a29a12b
  402817:	xor    ebx,0x0
  40281a:	mov    DWORD PTR ds:0x42d01c,0x82d
  402824:	cmp    eax,edi
  402826:	mov    DWORD PTR ds:0x42c01c,0x36f6
  402830:	jne    0x402849
  402836:	cmp    ebx,DWORD PTR [ebp-0xc]
  402839:	je     0x4028b1
  40283f:	jmp    0x402849
  402844:	mov    esi,0x3272e0
  402849:	mov    eax,DWORD PTR [ebp-0x4]
  40284c:	mov    edi,DWORD PTR [ebp-0x8]
  40284f:	xor    edi,edx
  402851:	add    edi,esi
  402853:	mov    esi,DWORD PTR [ebp+0x8]
  402856:	imul   edi,ecx
  402859:	mov    ebx,DWORD PTR [ebp+0xc]
  40285c:	xor    eax,edx
  40285e:	add    eax,ecx
  402860:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  402867:	mov    BYTE PTR [edi+esi*1],al
  40286a:	mov    eax,DWORD PTR [ebp-0x8]
  40286d:	mov    esi,DWORD PTR [ebp+0x10]
  402870:	xor    eax,edx
  402872:	xor    ebx,ebx
  402874:	add    esi,0xfabdbee9
  40287a:	adc    ebx,0xffffffff
  40287d:	lea    ecx,[ecx+eax*1+0x3272e0]
  402884:	xor    edi,edi
  402886:	xor    esi,0x8a29a12b
  40288c:	xor    ebx,0x0
  40288f:	mov    eax,ecx
  402891:	add    eax,0xfabdbee9
  402896:	adc    edi,0xffffffff
  402899:	xor    eax,0x8a29a12b
  40289e:	xor    edi,0x0
  4028a1:	cmp    eax,esi
  4028a3:	jne    0x402844
  4028a9:	cmp    edi,ebx
  4028ab:	jne    0x402844
  4028b1:	mov    eax,0xf89c85b8
  4028b6:	pop    ebx
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	leave  
  4028ba:	ret    0xc
  4028bd:	push   ebp
  4028be:	mov    ebp,esp
  4028c0:	push   ecx
  4028c1:	and    DWORD PTR ds:0x42d010,0x0
  4028cb:	jmp    0x4028de
  4028d0:	xor    eax,eax
  4028d2:	add    eax,DWORD PTR ds:0x42d010
  4028d8:	inc    eax
  4028d9:	mov    ds:0x42d010,eax
  4028de:	cmp    DWORD PTR ds:0x42d010,0x1c
  4028e5:	jae    0x402908
  4028eb:	cmp    DWORD PTR ds:0x42d010,0x24
  4028f2:	jne    0x402903
  4028f8:	push   0x42c010
  4028fd:	call   DWORD PTR ds:0x42e9ab
  402903:	jmp    0x4028d0
  402908:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40290f:	add    edx,0x297b
  402915:	mov    eax,DWORD PTR [ebp+0x8]
  402918:	movsx  eax,BYTE PTR [eax]
  40291b:	add    edx,edx
  40291d:	mov    edx,0x3272e0
  402922:	sbb    DWORD PTR ds:0x429014,0x3776
  40292c:	sub    eax,edx
  40292e:	mov    ecx,0x7510899
  402933:	xor    DWORD PTR ds:0x429014,0x42b000
  40293d:	xor    eax,ecx
  40293f:	mov    DWORD PTR ds:0x429008,0x73b1
  402949:	cmp    eax,0xf89c85f4
  40294e:	mov    DWORD PTR ds:0x42c014,0x53e4
  402958:	jne    0x402987
  40295e:	mov    eax,DWORD PTR [ebp+0x8]
  402961:	push   esi
  402962:	mov    esi,DWORD PTR [ebp+0x8]
  402965:	add    esi,DWORD PTR [eax+0x3c]
  402968:	mov    DWORD PTR [ebp+0x8],esi
  40296b:	mov    eax,DWORD PTR [ebp-0x4]
  40296e:	mov    esi,DWORD PTR [ebp+0x8]
  402971:	xor    eax,ecx
  402973:	add    eax,edx
  402975:	cmp    DWORD PTR [esi+0x54],eax
  402978:	pop    esi
  402979:	je     0x402987
  40297f:	mov    eax,DWORD PTR [ebp+0x8]
  402982:	jmp    0x40298e
  402987:	mov    eax,DWORD PTR [ebp-0x4]
  40298a:	xor    eax,ecx
  40298c:	add    eax,edx
  40298e:	leave  
  40298f:	ret    0x4
  402992:	push   ebp
  402993:	mov    ebp,esp
  402995:	sub    esp,0x40
  402998:	push   ebx
  402999:	adc    DWORD PTR ds:0x42d000,0x42b014
  4029a3:	push   esi
  4029a4:	push   edi
  4029a5:	lea    eax,[ebp-0x24]
  4029a8:	push   eax
  4029a9:	add    DWORD PTR ds:0x429028,0x429004
  4029b3:	lea    eax,[ebp-0x20]
  4029b6:	push   eax
  4029b7:	xor    DWORD PTR ds:0x42c00c,0x5e29
  4029c1:	call   DWORD PTR ds:0x42e9a7
  4029c7:	sub    DWORD PTR ds:0x42a018,0x7df1
  4029d1:	push   0x21
  4029d3:	push   0x434
  4029d8:	sbb    DWORD PTR ds:0x429000,0x54d2
  4029e2:	push   0x98678765
  4029e7:	sub    DWORD PTR ds:0x42d014,0x42c00c
  4029f1:	call   DWORD PTR ds:0x42e983
  4029f7:	xor    DWORD PTR ds:0x429000,edx
  4029fd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  402a04:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  402a0b:	mov    eax,DWORD PTR [ebp-0x4]
  402a0e:	mov    esi,0x7510899
  402a13:	xor    eax,esi
  402a15:	mov    edi,DWORD PTR ds:0x42b01c
  402a1b:	adc    DWORD PTR ds:0x429010,edi
  402a21:	mov    edi,0x3272e0
  402a26:	add    eax,edi
  402a28:	dec    DWORD PTR ds:0x429000
  402a2e:	mov    DWORD PTR [ebp-0x1c],eax
  402a31:	mov    eax,DWORD PTR [ebp+0x14]
  402a34:	adc    DWORD PTR ds:0x42c000,0x42b014
  402a3e:	test   eax,eax
  402a40:	je     0x402a4e
  402a46:	mov    eax,DWORD PTR [ebp+0x14]
  402a49:	mov    eax,DWORD PTR [eax]
  402a4b:	mov    DWORD PTR [ebp-0x1c],eax
  402a4e:	xor    eax,eax
  402a50:	xor    eax,DWORD PTR ds:0x42901c
  402a56:	and    eax,DWORD PTR ds:0x42b000
  402a5c:	mov    ds:0x42901c,eax
  402a61:	mov    eax,DWORD PTR [ebp-0x4]
  402a64:	xor    eax,esi
  402a66:	adc    ebx,DWORD PTR ds:0x429024
  402a6c:	add    eax,edi
  402a6e:	mov    DWORD PTR [ebp-0x8],eax
  402a71:	sbb    ebx,DWORD PTR ds:0x42c008
  402a77:	mov    eax,DWORD PTR [ebp-0xc]
  402a7a:	mov    DWORD PTR ds:0x42b014,0x1d
  402a84:	cmp    DWORD PTR ds:0x42b014,0x0
  402a8b:	je     0x402aca
  402a91:	cmp    DWORD PTR ds:0x42b014,0x20
  402a98:	jne    0x402ab6
  402a9e:	push   0x3b9b
  402aa3:	push   DWORD PTR [ebp-0x24]
  402aa6:	push   0x42d018
  402aab:	push   0x5e20
  402ab0:	call   DWORD PTR ds:0x42e9af
  402ab6:	xor    ebx,ebx
  402ab8:	or     ebx,DWORD PTR ds:0x42b014
  402abe:	dec    ebx
  402abf:	mov    DWORD PTR ds:0x42b014,ebx
  402ac5:	jmp    0x402a84
  402aca:	xor    eax,esi
  402acc:	and    DWORD PTR ds:0x42a01c,0x0
  402ad6:	mov    ebx,DWORD PTR ds:0x42a01c
  402adc:	inc    ebx
  402add:	mov    DWORD PTR ds:0x42a01c,ebx
  402ae3:	cmp    DWORD PTR ds:0x42a01c,0xd
  402aea:	jne    0x402af6
  402af0:	call   DWORD PTR ds:0x42e9b3
  402af6:	cmp    DWORD PTR ds:0x42a01c,0xc
  402afd:	jne    0x402b10
  402b03:	mov    ebx,DWORD PTR ds:0x42a01c
  402b09:	inc    ebx
  402b0a:	mov    DWORD PTR ds:0x42a01c,ebx
  402b10:	cmp    DWORD PTR ds:0x42a01c,0x15
  402b17:	jb     0x402ad6
  402b1d:	or     DWORD PTR ds:0x42c004,edx
  402b23:	add    eax,edi
  402b25:	sub    DWORD PTR ds:0x42b008,ebx
  402b2b:	mov    DWORD PTR [ebp-0x2c],eax
  402b2e:	mov    eax,DWORD PTR [ebp-0x4]
  402b31:	xor    eax,esi
  402b33:	add    eax,edi
  402b35:	dec    ebx
  402b36:	mov    DWORD PTR [ebp-0x38],eax
  402b39:	mov    DWORD PTR ds:0x42a00c,0x11
  402b43:	cmp    DWORD PTR ds:0x42a00c,0x0
  402b4a:	je     0x402bcf
  402b50:	cmp    DWORD PTR ds:0x42a00c,0x1b
  402b57:	jne    0x402b7d
  402b5d:	push   DWORD PTR [ebp-0x28]
  402b60:	push   0x42a000
  402b65:	push   DWORD PTR [ebp-0x24]
  402b68:	push   0x6762
  402b6d:	push   0x632b
  402b72:	push   0x871c
  402b77:	call   DWORD PTR ds:0x42e9b7
  402b7d:	xor    ebx,ebx
  402b7f:	xor    ebx,DWORD PTR ds:0x42a00c
  402b85:	dec    ebx
  402b86:	mov    DWORD PTR ds:0x42a00c,ebx
  402b8c:	jmp    0x402b43
  402b91:	and    DWORD PTR ds:0x42d018,0x0
  402b9b:	xor    eax,eax
  402b9d:	xor    eax,DWORD PTR ds:0x42d018
  402ba3:	inc    eax
  402ba4:	mov    ds:0x42d018,eax
  402ba9:	cmp    DWORD PTR ds:0x42d018,0x2a
  402bb0:	jne    0x402bbc
  402bb6:	call   DWORD PTR ds:0x42e9bb
  402bbc:	cmp    DWORD PTR ds:0x42d018,0x1c
  402bc3:	jb     0x402b9b
  402bc9:	and    ebx,0x7bf
  402bcf:	mov    ebx,DWORD PTR [ebp-0x4]
  402bd2:	xor    ebx,esi
  402bd4:	adc    DWORD PTR ds:0x42d01c,0x429024
  402bde:	add    ebx,edi
  402be0:	xor    DWORD PTR ds:0x42d008,0x22f2
  402bea:	mov    eax,DWORD PTR [ebp-0x2c]
  402bed:	xor    DWORD PTR ds:0x42a008,0x42d00c
  402bf7:	sub    eax,edi
  402bf9:	lea    ecx,[ebx-0x3272e0]
  402bff:	adc    DWORD PTR ds:0x42c01c,0x429010
  402c09:	xor    eax,esi
  402c0b:	xor    ecx,esi
  402c0d:	cmp    ecx,eax
  402c0f:	mov    DWORD PTR ds:0x42a014,0x880
  402c19:	je     0x405220
  402c1f:	and    DWORD PTR ds:0x42d018,0x0
  402c29:	jmp    0x402c3c
  402c2e:	xor    eax,eax
  402c30:	or     eax,DWORD PTR ds:0x42d018
  402c36:	inc    eax
  402c37:	mov    ds:0x42d018,eax
  402c3c:	cmp    DWORD PTR ds:0x42d018,0x1f
  402c43:	jae    0x402c7e
  402c49:	cmp    DWORD PTR ds:0x42d018,0x26
  402c50:	jne    0x402c69
  402c56:	push   0x847e
  402c5b:	push   0x42901c
  402c60:	push   DWORD PTR [ebp-0x20]
  402c63:	call   DWORD PTR ds:0x42e9bf
  402c69:	jmp    0x402c2e
  402c6e:	mov    eax,ds:0x42b010
  402c73:	and    eax,DWORD PTR ds:0x429010
  402c79:	mov    ds:0x42b010,eax
  402c7e:	mov    eax,DWORD PTR [ebp-0x4]
  402c81:	xor    eax,esi
  402c83:	mov    DWORD PTR ds:0x42c008,0x7a4b
  402c8d:	add    eax,edi
  402c8f:	cmp    ebx,eax
  402c91:	mov    DWORD PTR ds:0x42b000,0x3723
  402c9b:	jne    0x405184
  402ca1:	push   DWORD PTR [ebp+0x8]
  402ca4:	neg    DWORD PTR ds:0x42d018
  402caa:	call   0x4028bd
  402caf:	movzx  ecx,BYTE PTR ds:0x42c000
  402cb6:	xor    DWORD PTR ds:0x429000,ecx
  402cbc:	mov    DWORD PTR [ebp-0x14],eax
  402cbf:	sbb    eax,0x7bdb
  402cc4:	mov    eax,DWORD PTR [ebp-0x4]
  402cc7:	mov    ecx,DWORD PTR [ebp-0x14]
  402cca:	sbb    DWORD PTR ds:0x42b00c,0x398d
  402cd4:	xor    eax,esi
  402cd6:	add    eax,edi
  402cd8:	mov    DWORD PTR ds:0x42a018,0x3718
  402ce2:	jmp    0x405039
  402ce7:	dec    ecx
  402ce8:	je     0x402ca4
  402cea:	dec    ebp
  402ceb:	stos   DWORD PTR es:[edi],eax
  402cec:	cmp    ecx,DWORD PTR [ebp+0x6a681074]
  402cf2:	adc    eax,0x21d8dea0
  402cf7:	jp     0x402d73
  402cf9:	jp     0x402d75
  402cfb:	xor    BYTE PTR [edi+0x7a],bl
  402cfe:	jp     0x402d11
  402d00:	sub    BYTE PTR [edi],dl
  402d02:	cmp    eax,0x2f1b2115
  402d07:	popa   
  402d08:	ss gs data16 and al,0x63
  402d0d:	push   0x6a
  402d0f:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402d15:	inc    esp
  402d16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402d1a:	jl     0x402d85
  402d1c:	push   ebp
  402d1d:	iret   
  402d1e:	pop    ecx
  402d1f:	dec    edx
  402d20:	cmp    al,0x88
  402d22:	cli    
  402d23:	xchg   DWORD PTR [esi+0x57],esi
  402d26:	dec    ecx
  402d27:	jg     0x402d60
  402d29:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402d2f:	sub    bh,bh
  402d31:	data16 fdivr st,st(2)
  402d34:	push   ebx
  402d35:	jg     0x402d55
  402d37:	jmp    0xe9faf671
  402d3c:	xchg   DWORD PTR [ebx],edx
  402d3e:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d44:	mov    al,al
  402d46:	imul   DWORD PTR [ecx-0x27]
  402d49:	add    al,dl
  402d4b:	push   cs
  402d4c:	cli    
  402d4d:	es adc al,0x44
  402d50:	or     BYTE PTR [esi],ah
  402d52:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d57:	pop    ebp
  402d58:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d5e:	jo     0x402d92
  402d60:	les    ebx,FWORD PTR [ebx-0xb]
  402d63:	sbb    bh,dl
  402d65:	je     0x402d24
  402d67:	arpl   cx,bx
  402d69:	xchg   esp,eax
  402d6a:	pop    edi
  402d6b:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d71:	repz sahf 
  402d73:	cmp    BYTE PTR [edx+0x73],dh
  402d76:	or     ebx,edx
  402d78:	sub    DWORD PTR [edx-0x77],edx
  402d7b:	xor    BYTE PTR [ebx],dh
  402d7d:	push   eax
  402d7e:	jecxz  0x402d4f
  402d80:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d86:	test   BYTE PTR [ebp-0x20],ch
  402d89:	inc    ecx
  402d8a:	push   edx
  402d8b:	dec    eax
  402d8c:	or     BYTE PTR [esi],bh
  402d8e:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d96:	fadd   QWORD PTR [eax]
  402d98:	push   esi
  402d99:	stc    
  402d9a:	push   edx
  402d9b:	push   esi
  402d9c:	mov    eax,ds:0xf4bf64f5
  402da1:	inc    edx
  402da2:	adc    al,0xcc
  402da4:	retf   0x781e
  402da7:	push   ebx
  402da8:	mov    ds:0x9178eab6,al
  402dad:	ficom  DWORD PTR [ecx+0x6d15ec60]
  402db3:	sbb    DWORD PTR [edi+edi*8],ebp
  402db6:	sub    al,0x7b
  402db8:	push   ebx
  402db9:	add    DWORD PTR [edx-0x1d14cfea],esi
  402dbf:	pop    esi
  402dc0:	lock push esp
  402dc2:	or     al,0x39
  402dc4:	jo     0x402e05
  402dc6:	pop    es
  402dc7:	cmp    eax,0xd3d4b6e0
  402dcc:	push   esi
  402dcd:	leave  
  402dce:	xchg   esi,eax
  402dcf:	fdivr  QWORD PTR [ebx+ebp*2]
  402dd2:	sub    ecx,eax
  402dd4:	fcomp  DWORD PTR [ecx-0x2ad449ce]
  402dda:	push   esp
  402ddb:	add    cl,BYTE PTR [eax-0x10]
  402dde:	ror    DWORD PTR [esi+eax*4-0x23],cl
  402de2:	jnp    0x402e59
  402de4:	in     eax,0x7e
  402de6:	int3   
  402de7:	xchg   BYTE PTR [ecx-0x3],al
  402dea:	in     eax,0xa6
  402dec:	mov    bl,0x75
  402dee:	or     al,BYTE PTR [edx+0x5216d7ea]
  402df4:	not    DWORD PTR [edx+0x3c]
  402df7:	enter  0xdcc1,0xaa
  402dfb:	sahf   
  402dfc:	add    eax,DWORD PTR [ebp-0x60c6e45c]
  402e02:	(bad)  
  402e03:	and    DWORD PTR [ebx],edi
  402e05:	or     BYTE PTR [edx],dl
  402e07:	sbb    ecx,DWORD PTR [edx]
  402e09:	retf   
  402e0a:	mov    cl,0x72
  402e0c:	mov    esi,0x4d4be9d7
  402e11:	push   ecx
  402e12:	jo     0x402dfe
  402e14:	retf   
  402e15:	cld    
  402e16:	mov    bh,0xca
  402e18:	nop
  402e19:	int3   
  402e1a:	mov    eax,0xb485b297
  402e1f:	sbb    eax,0x22d12167
  402e24:	repnz scas al,BYTE PTR es:[edi]
  402e26:	ins    DWORD PTR es:[edi],dx
  402e27:	mov    dh,0x6
  402e29:	and    DWORD PTR [esi],0x60
  402e2c:	push   eax
  402e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e2e:	dec    ebx
  402e2f:	aad    0x0
  402e31:	sub    DWORD PTR [esi+ebx*4-0x327e9434],eax
  402e38:	mov    WORD PTR [ecx],cs
  402e3a:	mov    al,ds:0xacb2f88
  402e3f:	jecxz  0x402e44
  402e41:	test   DWORD PTR [ebx+eax*2-0x1],0x6bf1857d
  402e49:	scas   eax,DWORD PTR es:[edi]
  402e4a:	jno    0x402eb7
  402e4c:	dec    eax
  402e4d:	popa   
  402e4e:	dec    edx
  402e4f:	mov    BYTE PTR ss:[ebx],dh
  402e52:	mov    BYTE PTR [ebp-0x3d],dh
  402e55:	push   DWORD PTR [eax]
  402e57:	scas   eax,DWORD PTR es:[edi]
  402e58:	push   0xe
  402e5a:	xor    DWORD PTR [eax+0x4c],esi
  402e5d:	sahf   
  402e5e:	outs   dx,DWORD PTR ds:[esi]
  402e5f:	push   es
  402e60:	nop
  402e61:	das    
  402e62:	leave  
  402e63:	fidiv  DWORD PTR [edi+0x9]
  402e66:	lds    ecx,FWORD PTR [ebp-0x6e]
  402e69:	fld    st(4)
  402e6b:	cld    
  402e6c:	jecxz  0x402ed6
  402e6e:	ins    DWORD PTR es:[edi],dx
  402e6f:	je     0x402e2d
  402e71:	adc    edi,DWORD PTR [edx+0x75]
  402e74:	data16 xchg BYTE PTR [edi-0xa],ah
  402e78:	pushf  
  402e79:	cmp    al,0xa7
  402e7b:	inc    esi
  402e7c:	cwde   
  402e7d:	loope  0x402e7e
  402e7f:	adc    BYTE PTR [ecx+0x6c98a5cb],ch
  402e85:	jp     0x402f02
  402e87:	sbb    cl,bl
  402e89:	test   DWORD PTR [edi],0xf5718cbe
  402e8f:	mov    ebp,0x1a8b30d8
  402e94:	std    
  402e95:	xchg   edi,eax
  402e96:	push   ebp
  402e97:	nop
  402e98:	sub    BYTE PTR [eax+eax*2-0x37],cl
  402e9c:	fchs   
  402e9e:	xor    al,cl
  402ea0:	inc    ebp
  402ea1:	fdiv   DWORD PTR [esi]
  402ea3:	or     dl,cl
  402ea5:	icebp  
  402ea6:	sahf   
  402ea7:	scas   eax,DWORD PTR es:[edi]
  402ea8:	lock dec esi
  402eaa:	dec    eax
  402eab:	jg     0x402f23
  402ead:	dec    ebp
  402eae:	inc    ecx
  402eaf:	adc    eax,0x5d1c5999
  402eb4:	and    al,0xed
  402eb6:	adc    esi,0x7421a7b7
  402ebc:	adc    ah,BYTE PTR [eax+0x1d]
  402ebf:	inc    edx
  402ec0:	inc    ebx
  402ec1:	retf   
  402ec2:	stos   BYTE PTR es:[edi],al
  402ec3:	or     dh,ch
  402ec5:	sub    edx,ebp
  402ec7:	or     eax,0xa7a6a0dc
  402ecc:	and    al,0xff
  402ece:	dec    eax
  402ecf:	js     0x402ed3
  402ed1:	push   ebx
  402ed2:	pop    edx
  402ed3:	push   ebx
  402ed4:	or     al,0x78
  402ed6:	nop
  402ed7:	and    DWORD PTR ds:0x62895a3f,0xfbf4d276
  402ee1:	daa    
  402ee2:	aas    
  402ee3:	xchg   ebx,eax
  402ee4:	sbb    DWORD PTR [esi+0x6],ecx
  402ee7:	sbb    edx,0x444855d1
  402eed:	ss out 0x66,eax
  402ef0:	mov    BYTE PTR [edx+0x25f4fb7f],bl
  402ef6:	jmp    0x1cbb928
  402efb:	sub    dh,BYTE PTR [ecx+0x22db570d]
  402f01:	popa   
  402f02:	adc    ah,BYTE PTR ds:[ecx]
  402f05:	inc    ecx
  402f06:	enter  0x43ff,0x82
  402f0a:	inc    edi
  402f0b:	dec    edx
  402f0c:	retf   0x100e
  402f0f:	leave  
  402f10:	sub    eax,0x4c280ef0
  402f15:	mov    esi,0x9960adf9
  402f1a:	sbb    esi,DWORD PTR [ecx]
  402f1c:	pusha  
  402f1d:	sahf   
  402f1e:	xor    eax,0x1cfa0f9e
  402f23:	icebp  
  402f24:	pop    esi
  402f25:	jae    0x402ed4
  402f27:	fld    TBYTE PTR [eax-0x62]
  402f2a:	xchg   DWORD PTR [ebx],ebx
  402f2c:	and    esp,DWORD PTR [eax]
  402f2e:	jnp    0x402f3f
  402f30:	pop    ecx
  402f31:	adc    BYTE PTR [ecx+0x4c77a86a],bl
  402f37:	jo     0x402edf
  402f39:	(bad)  
  402f3a:	pop    ebx
  402f3b:	jmp    0x402f44
  402f3d:	xor    DWORD PTR [edx+0x18],eax
  402f40:	jmp    0xaabd20dd
  402f45:	dec    ebx
  402f46:	into   
  402f47:	mov    ds:0x97c6f0bb,al
  402f4c:	mov    bl,0xa6
  402f4e:	iret   
  402f4f:	call   0xe273373e
  402f54:	dec    esp
  402f55:	mov    ds:0x2139dc93,al
  402f5a:	lds    edx,FWORD PTR [ebp-0x71cd5ad1]
  402f60:	daa    
  402f61:	mul    BYTE PTR [ecx-0x430d67d5]
  402f67:	xor    edi,DWORD PTR [edx]
  402f69:	cmp    eax,0x6a9a6e26
  402f6e:	or     al,0x4c
  402f70:	repz pop ss
  402f72:	leave  
  402f73:	mov    eax,ds:0xa2cfef66
  402f78:	adc    al,0xa1
  402f7a:	mov    bh,0x78
  402f7c:	xchg   esi,eax
  402f7d:	ds dec eax
  402f7f:	daa    
  402f80:	leave  
  402f81:	outs   dx,BYTE PTR ds:[esi]
  402f82:	ret    
  402f83:	mov    ch,0x85
  402f85:	out    dx,eax
  402f86:	xor    al,0x13
  402f88:	mov    al,0x68
  402f8a:	retf   0x6bf3
  402f8d:	retf   
  402f8e:	xchg   esi,eax
  402f8f:	shr    edi,cl
  402f91:	and    DWORD PTR [esi-0x58207d42],edx
  402f97:	lea    esp,[edx-0x4d70faf8]
  402f9d:	push   0xffffff89
  402f9f:	lds    edx,FWORD PTR [ebp-0x310b3ed3]
  402fa5:	mov    ebx,0xae3388b5
  402faa:	pop    esp
  402fab:	mov    cl,0xca
  402fad:	outs   dx,DWORD PTR ds:[esi]
  402fae:	mov    ds:0xc828f8fd,al
  402fb3:	fistp  QWORD PTR [ebp-0x60]
  402fb6:	shl    DWORD PTR [edx],0xd7
  402fb9:	ret    
  402fba:	retf   
  402fbb:	loopne 0x402fab
  402fbd:	jmp    0xdf4929df
  402fc2:	push   esi
  402fc3:	clc    
  402fc4:	jl     0x402f6b
  402fc6:	add    ah,ah
  402fc8:	sub    bh,BYTE PTR [esi+0x58]
  402fcb:	(bad)  
  402fcd:	sbb    edx,edi
  402fcf:	shl    BYTE PTR [ebp-0x23],1
  402fd2:	jge    0x402feb
  402fd4:	inc    ecx
  402fd5:	std    
  402fd6:	dec    ecx
  402fd7:	xchg   edi,eax
  402fd8:	and    al,0xcf
  402fda:	out    0x1b,eax
  402fdc:	sub    DWORD PTR [ecx+0x4c],eax
  402fdf:	mov    ebp,DWORD PTR [ecx]
  402fe1:	stos   BYTE PTR es:[edi],al
  402fe2:	adc    BYTE PTR [edi],0xb1
  402fe5:	cmp    ebp,DWORD PTR [ebx-0xb]
  402fe8:	push   0xae4e1616
  402fed:	mov    WORD PTR [ecx+0x28b63b46],ds
  402ff3:	sub    esp,eax
  402ff5:	test   DWORD PTR [eax+0x6f6d6939],eax
  402ffb:	pop    edx
  402ffc:	retf   0xa2d7
  402fff:	sub    BYTE PTR [ebx],al
  403001:	ds dec edx
  403003:	mov    dl,0x1c
  403005:	int3   
  403006:	lea    ecx,[ebx+0x18]
  403009:	jle    0x40306f
  40300b:	and    ebp,ebp
  40300d:	fld    TBYTE PTR ss:[edi-0x290570aa]
  403014:	xchg   ecx,eax
  403015:	inc    ecx
  403016:	les    ebp,FWORD PTR [ebp+eax*4+0x35]
  40301a:	popa   
  40301b:	inc    ebp
  40301c:	rol    dh,1
  40301e:	scas   eax,DWORD PTR es:[edi]
  40301f:	mov    bl,0x4
  403021:	jbe    0x402faf
  403023:	adc    DWORD PTR [edx+0x7888c54c],esp
  403029:	imul   ecx,DWORD PTR [edx-0x27],0x5556a14
  403030:	push   cx
  403032:	stc    
  403033:	push   0x4d
  403035:	push   ds
  403036:	pop    ecx
  403037:	fist   WORD PTR [esi+0x2120c915]
  40303d:	loop   0x402fc8
  40303f:	aad    0xf0
  403041:	pop    edx
  403042:	cdq    
  403043:	movups xmm6,xmm1
  403046:	ror    BYTE PTR [edx-0x16cb7779],cl
  40304c:	pop    esp
  40304d:	push   esp
  40304e:	inc    eax
  40304f:	dec    ecx
  403050:	pop    es
  403051:	lods   eax,DWORD PTR ds:[esi]
  403052:	lock jo 0x403056
  403055:	loope  0x4030cd
  403057:	addr16 adc ebx,edi
  40305a:	mov    eax,ds:0xf7ca82d7
  40305f:	and    eax,0x1a9a79bb
  403064:	mov    BYTE PTR [ebx],cl
  403066:	xchg   ebp,eax
  403067:	inc    ebx
  403068:	add    bl,BYTE PTR [eax]
  40306a:	(bad)  
  40306b:	lds    ebp,FWORD PTR [ebx+0x6]
  40306e:	push   esi
  40306f:	shl    DWORD PTR [ecx-0x3b],1
  403072:	retf   
  403073:	sub    eax,0xc9508236
  403078:	sub    eax,0x4fbb8de7
  40307d:	or     esi,edi
  40307f:	imul   esi,DWORD PTR [ecx+0x5a],0x49
  403083:	adc    eax,DWORD PTR [esi-0x52]
  403086:	dec    eax
  403087:	aam    0xd2
  403089:	lods   eax,DWORD PTR ds:[esi]
  40308a:	push   0x3aa45752
  40308f:	inc    edx
  403090:	mov    esp,0xf9713d85
  403095:	fcomp  st(0)
  403097:	int3   
  403098:	loope  0x403046
  40309a:	enter  0x6621,0x5e
  40309e:	dec    ecx
  40309f:	xor    al,BYTE PTR [edx-0x10291751]
  4030a5:	dec    esi
  4030a6:	mov    cl,0x79
  4030a8:	adc    eax,0xb39be93f
  4030ad:	ins    DWORD PTR es:[edi],dx
  4030ae:	imul   ebx,DWORD PTR [ecx-0x37d97ff],0x1acbf81d
  4030b8:	dec    ebx
  4030b9:	and    eax,0x5ee31e5a
  4030be:	and    esi,DWORD PTR [edx-0x48d904e0]
  4030c4:	(bad)  
  4030c6:	mov    ebx,0x45e95ccb
  4030cb:	inc    edx
  4030cc:	add    eax,0xb16ddc14
  4030d1:	loope  0x4030fd
  4030d3:	cwde   
  4030d4:	add    al,0x4
  4030d6:	jmp    DWORD PTR [ebx-0x2d8ba8a4]
  4030dc:	pusha  
  4030dd:	in     eax,0xb0
  4030df:	mov    dh,0xcd
  4030e1:	clc    
  4030e2:	pop    ds
  4030e3:	push   ss
  4030e4:	mov    eax,0xee4f0008
  4030e9:	int    0xb4
  4030eb:	mov    eax,ds:0xe03317bf
  4030f0:	add    al,0xc
  4030f2:	cld    
  4030f3:	adc    ch,dh
  4030f5:	in     eax,dx
  4030f6:	stc    
  4030f7:	test   BYTE PTR [ebx-0x67e4b82f],dh
  4030fd:	push   es
  4030fe:	sti    
  4030ff:	xor    esp,ecx
  403101:	aad    0x42
  403103:	pop    ss
  403104:	jp     0x4030d8
  403106:	mov    ah,0x7e
  403108:	adc    al,0xfd
  40310a:	gs aaa 
  40310c:	scas   eax,DWORD PTR es:[edi]
  40310d:	cmc    
  40310e:	inc    ebp
  40310f:	sbb    BYTE PTR [ebp-0x64f6b152],cl
  403115:	pop    ebx
  403116:	lock pushf 
  403118:	(bad)  
  40311a:	or     ebx,esp
  40311c:	add    eax,0x91f5368d
  403121:	mov    edi,0x14968b69
  403126:	sub    eax,0xbda964d9
  40312b:	jmp    0x2eb4:0x86272586
  403132:	scas   al,BYTE PTR es:[edi]
  403133:	cmp    esp,DWORD PTR [ebx]
  403135:	pop    esp
  403136:	mov    bh,0x1c
  403138:	or     DWORD PTR [edx-0x2158fb02],0xbd74a92d
  403142:	pop    esi
  403143:	push   cs
  403144:	sbb    eax,0xaeafc04c
  403149:	outs   dx,DWORD PTR ds:[esi]
  40314a:	and    ah,BYTE PTR [ebp+ecx*2-0x4d55b42b]
  403151:	(bad)  
  403152:	aaa    
  403153:	xor    esi,DWORD PTR [edx-0x18]
  403156:	jg     0x403147
  403158:	mov    DWORD PTR [esi+edx*1+0x20c209d3],edx
  40315f:	or     al,0xbd
  403161:	repnz fisttp DWORD PTR [edx+edx*8]
  403165:	lea    ecx,[eax-0x1223cd4]
  40316b:	vcvtps2pd xmm4,xmm7
  40316f:	stc    
  403170:	test   BYTE PTR [eax],ah
  403172:	mov    WORD PTR [ebp+edi*1-0x5518cdd0],cs
  403179:	icebp  
  40317a:	sbb    ah,BYTE PTR [edi+eax*8-0x54]
  40317e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40317f:	pop    edi
  403180:	jle    0x403190
  403182:	in     al,0xd8
  403184:	pop    esi
  403185:	inc    esi
  403186:	fincstp 
  403188:	and    eax,0x822ba0f3
  40318d:	daa    
  40318e:	aas    
  40318f:	sbb    eax,0x293ddc27
  403194:	xchg   edi,eax
  403195:	and    edi,DWORD PTR [ebx]
  403197:	sti    
  403198:	(bad)  
  403199:	jmp    0x9270:0x8ed7f75e
  4031a0:	xchg   ebx,eax
  4031a1:	imul   esp,DWORD PTR [edx-0x69],0xfffffffa
  4031a5:	pop    ss
  4031a6:	test   al,0xc0
  4031a8:	icebp  
  4031a9:	or     DWORD PTR [ecx+0x7522a3d7],esi
  4031af:	mov    ch,BYTE PTR [ecx-0x24]
  4031b2:	in     eax,0xf2
  4031b4:	sub    dl,cl
  4031b6:	adc    al,BYTE PTR [esi+0x7acad374]
  4031bc:	nop
  4031bd:	aad    0xe2
  4031bf:	(bad)  
  4031c0:	xor    BYTE PTR [eax],al
  4031c2:	xchg   ebp,eax
  4031c3:	push   ebp
  4031c4:	jns    0x4031bf
  4031c6:	jmp    0xd673:0x136e396d
  4031cd:	pop    eax
  4031ce:	mov    ah,0x34
  4031d0:	(bad)  
  4031d1:	scas   eax,DWORD PTR es:[edi]
  4031d2:	out    dx,eax
  4031d3:	push   ds
  4031d4:	or     DWORD PTR [ebx+0x7fe36440],esi
  4031da:	add    eax,0x11543025
  4031df:	lahf   
  4031e0:	and    DWORD PTR [edx],ecx
  4031e2:	gs sahf 
  4031e4:	xor    al,0x8c
  4031e6:	jo     0x4031eb
  4031e8:	sub    edx,DWORD PTR [edi]
  4031ea:	in     al,0x4c
  4031ec:	adc    BYTE PTR [edi],bh
  4031ee:	xchg   BYTE PTR [esi],dl
  4031f0:	adc    cl,BYTE PTR [ecx]
  4031f2:	call   0xe4e735f0
  4031f7:	sub    BYTE PTR [esi-0x35a51ee6],al
  4031fd:	push   ds
  4031fe:	jmp    0x7ff9:0x1d80555c
  403205:	mul    DWORD PTR [eax]
  403207:	dec    eax
  403208:	dec    ebp
  403209:	jl     0x4031d1
  40320b:	xor    al,0x35
  40320d:	fcmovne st,st(5)
  40320f:	scas   al,BYTE PTR es:[edi]
  403210:	dec    edi
  403211:	xor    al,0x7a
  403213:	pop    ss
  403214:	lock mov ebx,DWORD PTR [esi+0x5d37b184]
  40321b:	push   edi
  40321c:	adc    edi,ebx
  40321e:	into   
  40321f:	sub    DWORD PTR [ecx-0x40],ebx
  403222:	jl     0x4031f7
  403224:	out    dx,al
  403225:	pusha  
  403226:	lds    edi,FWORD PTR [edi]
  403228:	adc    edi,DWORD PTR [edx]
  40322a:	iret   
  40322b:	pop    DWORD PTR ds:0x24e52b45
  403231:	retf   0xdc2f
  403234:	fst    st(7)
  403236:	jo     0x40322e
  403238:	popf   
  403239:	xchg   ecx,eax
  40323a:	push   cs
  40323b:	jae    0x4031fa
  40323d:	inc    ebx
  40323e:	das    
  40323f:	or     BYTE PTR ds:0x7e62a02d,ch
  403245:	or     ebx,ebp
  403247:	mov    eax,0x89bc2189
  40324c:	mov    eax,0x6fe36a4d
  403251:	test   eax,0x4bd58b3f
  403256:	out    0x7c,al
  403258:	sub    DWORD PTR [eax+0x1c],esi
  40325b:	aaa    
  40325c:	mov    ch,0xbd
  40325e:	or     eax,0xd58f3dad
  403263:	imul   edx,DWORD PTR [esi-0x22],0xacfc9513
  40326a:	sbb    BYTE PTR [eax+0x14a1a2e4],ah
  403270:	mov    ch,0xb8
  403272:	jg     0x4032bd
  403274:	hlt    
  403275:	outs   dx,BYTE PTR ds:[esi]
  403276:	enter  0x839c,0x91
  40327a:	push   edx
  40327b:	sar    dh,cl
  40327d:	dec    eax
  40327e:	mov    bl,0x8d
  403280:	(bad)  
  403281:	retf   0x3f6f
  403284:	ror    eax,1
  403286:	test   BYTE PTR [edi+0x4d],al
  403289:	in     eax,0x65
  40328b:	lods   eax,DWORD PTR ds:[esi]
  40328c:	fs sub eax,0xd9297f5a
  403292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403293:	test   DWORD PTR [esp+eax*8+0x7c136a24],esi
  40329a:	xchg   ebx,eax
  40329b:	shl    DWORD PTR ds:0xfa88b4e6,0x4b
  4032a2:	outs   dx,BYTE PTR ds:[esi]
  4032a3:	mov    edi,0x994417d3
  4032a8:	iret   
  4032a9:	fistp  QWORD PTR [ebp+0x6c804fa2]
  4032af:	addr16 pop esp
  4032b1:	xor    eax,0x13414ab8
  4032b6:	sti    
  4032b7:	int3   
  4032b8:	jle    0x403304
  4032ba:	fsubrp st(7),st
  4032bc:	(bad)  
  4032bd:	fstp   DWORD PTR [ebx+0x2817b3eb]
  4032c3:	dec    esp
  4032c4:	dec    edx
  4032c5:	inc    esi
  4032c6:	ds (bad) 
  4032c8:	fstp   st(5)
  4032ca:	xchg   esi,eax
  4032cb:	jae    0x403342
  4032cd:	xor    al,BYTE PTR [edi-0x3850097f]
  4032d3:	(bad)  
  4032d4:	mov    al,ds:0x35ee6395
  4032d9:	push   ds
  4032da:	call   0x2cca:0xc10efd74
  4032e1:	pop    esi
  4032e2:	pop    esi
  4032e3:	xchg   ebp,eax
  4032e4:	pop    ebp
  4032e5:	rep outs dx,DWORD PTR ds:[esi]
  4032e7:	mov    esp,0x8ab2e6b
  4032ec:	cmp    al,0xdd
  4032ee:	test   BYTE PTR [esi],0xfe
  4032f1:	jmp    0x122c4f7a
  4032f6:	in     eax,dx
  4032f7:	add    ah,dl
  4032f9:	dec    ecx
  4032fa:	ret    
  4032fb:	in     al,dx
  4032fc:	ret    0x6ff0
  4032ff:	pop    es
  403300:	test   DWORD PTR [eax-0x2f],ecx
  403303:	inc    ebx
  403304:	jecxz  0x40330e
  403306:	test   al,0x44
  403308:	fst    DWORD PTR [ecx]
  40330a:	loopne 0x40330b
  40330c:	repz (bad) 
  40330e:	mov    ecx,0x8e5a6424
  403313:	mov    edx,0x7d0fcd56
  403318:	call   0xd3970fbb
  40331d:	ja     0x4032ff
  40331f:	iret   
  403320:	addr16 dec esp
  403322:	cmp    BYTE PTR [ecx],bh
  403324:	xor    DWORD PTR [esi],eax
  403326:	out    0xe2,al
  403328:	dec    esp
  403329:	or     ch,ch
  40332b:	push   edi
  40332c:	mov    bh,0xf0
  40332e:	mov    dl,0x73
  403330:	test   DWORD PTR [eax],ecx
  403332:	push   ds
  403333:	mov    ah,0x45
  403335:	mov    ecx,0x4e38bd9e
  40333a:	aaa    
  40333b:	push   ecx
  40333c:	jnp    0x40335c
  40333e:	sbb    ah,BYTE PTR [ecx]
  403340:	outs   dx,BYTE PTR ds:[esi]
  403341:	js     0x4032d3
  403343:	shr    al,1
  403345:	or     ebx,DWORD PTR [eax-0x6c]
  403348:	mov    esp,0xf4d5abb7
  40334d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40334e:	(bad)  
  40334f:	dec    edx
  403350:	loope  0x4032e2
  403352:	les    esi,FWORD PTR [esi+0x517e0293]
  403358:	sti    
  403359:	or     bl,BYTE PTR [edi-0x80]
  40335c:	popf   
  40335d:	mov    DWORD PTR [eax+0x6e07c7d8],eax
  403363:	jmp    0x2cc505d4
  403368:	pop    esi
  403369:	mov    dh,0xc
  40336b:	sbb    al,0x1a
  40336d:	cld    
  40336e:	mov    dl,0xd8
  403370:	jae    0x40336c
  403372:	(bad)  
  403373:	sahf   
  403374:	scas   al,BYTE PTR es:[edi]
  403375:	cdq    
  403376:	aas    
  403377:	sbb    BYTE PTR [edx-0x31f681ba],al
  40337d:	add    dh,al
  40337f:	lock dec ebp
  403381:	arpl   di,dx
  403383:	out    0xa3,eax
  403385:	mov    al,ds:0x4f8e9657
  40338a:	std    
  40338b:	mov    WORD PTR [esi+eax*4],cs
  40338e:	add    edi,DWORD PTR [ebx]
  403390:	pushf  
  403391:	push   ecx
  403392:	call   0xdcf1:0xffc5b1ae
  403399:	sbb    ecx,ebp
  40339b:	ins    DWORD PTR es:[edi],dx
  40339c:	mov    edi,0xb80fec9e
  4033a1:	xor    al,0x4
  4033a3:	leave  
  4033a4:	sbb    al,ah
  4033a6:	or     esi,DWORD PTR [edx]
  4033a8:	mov    cl,0xc6
  4033aa:	xchg   ebx,eax
  4033ab:	push   edx
  4033ac:	test   DWORD PTR [ecx],0x8c34170c
  4033b2:	cli    
  4033b3:	push   esp
  4033b4:	(bad)  
  4033b5:	sub    al,0xf9
  4033b7:	and    BYTE PTR [ebp+0x207c3e0e],cl
  4033bd:	mov    bl,0x98
  4033bf:	mov    ah,0xcd
  4033c1:	fsub   QWORD PTR [eax]
  4033c3:	out    0x60,eax
  4033c5:	and    BYTE PTR [eax+0x518128be],bh
  4033cb:	dec    ebp
  4033cc:	mov    ebp,0xd22f65f9
  4033d1:	push   ss
  4033d2:	ds mov cl,0x8e
  4033d5:	leave  
  4033d6:	push   edx
  4033d7:	(bad)  
  4033d8:	dec    BYTE PTR [edi+0x67cd0d76]
  4033de:	and    eax,0xa04344a1
  4033e3:	mov    eax,0x22fcf269
  4033e8:	ret    
  4033e9:	sbb    BYTE PTR [eax],bh
  4033eb:	push   eax
  4033ec:	stos   BYTE PTR es:[edi],al
  4033ed:	aam    0x5c
  4033ef:	xor    BYTE PTR [eax+0x2a],dl
  4033f2:	dec    ebp
  4033f3:	or     DWORD PTR [ebp-0x4c570e89],ecx
  4033f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033fa:	mov    DWORD PTR [ebx+edi*8+0x4d],esp
  4033fe:	ins    DWORD PTR es:[edi],dx
  4033ff:	cmp    al,0x8b
  403401:	mov    eax,0xf39400d0
  403406:	mov    ah,0x44
  403408:	scas   al,BYTE PTR es:[edi]
  403409:	jbe    0x4033b8
  40340b:	and    bl,BYTE PTR [edx-0x3e]
  40340e:	mov    edi,0xe7a40fbd
  403413:	dec    eax
  403414:	lock mov dh,0xcc
  403417:	jp     0x4033e6
  403419:	out    dx,al
  40341a:	fnstcw WORD PTR [eax+0x4a]
  40341d:	jge    0x403429
  40341f:	fcomp  st(4)
  403421:	lock dec ecx
  403423:	aas    
  403424:	inc    ecx
  403425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403426:	push   cs
  403427:	xor    dh,cl
  403429:	push   0x14157547
  40342e:	jbe    0x4033f6
  403430:	pusha  
  403431:	aam    0x44
  403433:	xor    DWORD PTR [esi+0x15],esp
  403436:	jae    0x40347a
  403438:	retf   
  403439:	dec    ebx
  40343a:	sub    eax,0x27082444
  40343f:	mov    dh,0xfc
  403441:	out    dx,eax
  403442:	mov    ch,0xe5
  403444:	xor    BYTE PTR [eax-0x15],dl
  403447:	sub    esp,DWORD PTR [esi-0x69]
  40344a:	xor    cl,dl
  40344c:	in     eax,dx
  40344d:	sub    DWORD PTR [ebx-0x241aa591],ebp
  403453:	aas    
  403454:	out    dx,al
  403455:	fnstcw WORD PTR [ebp-0x615d432a]
  40345b:	leave  
  40345c:	cld    
  40345d:	xchg   edi,eax
  40345e:	or     BYTE PTR [eax],cl
  403460:	sub    al,0x5f
  403462:	and    al,0x22
  403464:	into   
  403465:	ret    
  403466:	pop    esi
  403467:	pop    ebp
  403468:	jle    0x403403
  40346a:	pop    esi
  40346b:	lods   eax,DWORD PTR ds:[esi]
  40346c:	sbb    BYTE PTR [edi+ebp*8],dl
  40346f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403470:	(bad)  
  403471:	rcr    BYTE PTR [edi],cl
  403473:	jne    0x403492
  403475:	push   es
  403476:	mov    dl,0x46
  403478:	sub    esp,DWORD PTR [esi-0x55]
  40347b:	jle    0x40346e
  40347d:	jecxz  0x403472
  40347f:	add    DWORD PTR [ebx-0xe184ee6],eax
  403485:	lahf   
  403486:	cmp    edi,DWORD PTR [esi]
  403488:	dec    esi
  403489:	(bad)  
  40348a:	rcr    bh,0xd6
  40348d:	iret   
  40348e:	push   ss
  40348f:	(bad)  
  403490:	xor    eax,0xc68da250
  403495:	out    dx,eax
  403496:	pop    ss
  403497:	fucom  st(4)
  403499:	inc    edi
  40349a:	sahf   
  40349b:	ror    DWORD PTR cs:[ebp-0x14],0x40
  4034a0:	inc    eax
  4034a1:	ror    BYTE PTR [edi+edi*1+0x12215537],1
  4034a8:	popa   
  4034a9:	add    eax,0x12a33c06
  4034ae:	aaa    
  4034af:	mov    ch,0xd5
  4034b1:	fnstenv [edx-0x27]
  4034b4:	pop    ss
  4034b5:	mov    bl,0xb9
  4034b7:	mov    esp,DWORD PTR [ebp-0x862a23a]
  4034bd:	jge    0x40353d
  4034bf:	inc    ebp
  4034c0:	shr    BYTE PTR [esi+0x4b],0xe4
  4034c4:	fisttp QWORD PTR [ebp-0x9]
  4034c7:	fmul   st(3),st
  4034c9:	fisubr WORD PTR [eax-0x4c]
  4034cc:	fstp   DWORD PTR [ebx+ecx*2-0x4f565e64]
  4034d3:	ds sub ah,bl
  4034d6:	lock mov edx,0x2cfb79de
  4034dc:	arpl   WORD PTR [esi],di
  4034de:	or     DWORD PTR [esi+0x45a0178],esi
  4034e4:	into   
  4034e5:	cmp    esi,DWORD PTR [edx-0x10]
  4034e8:	icebp  
  4034e9:	mov    edi,0x215ed506
  4034ee:	fcomp  QWORD PTR [ebx-0x43]
  4034f1:	mov    DWORD PTR [ecx-0x2a055fbf],0x6f8cfce7
  4034fb:	jne    0x403512
  4034fd:	mov    edx,0xa6601736
  403502:	(bad)  
  403503:	shl    DWORD PTR [esi],cl
  403505:	jbe    0x40357a
  403507:	and    eax,0x18ad5cdc
  40350c:	mov    dh,al
  40350e:	xchg   edi,eax
  40350f:	and    eax,0xab38858a
  403514:	pop    ss
  403515:	adc    al,0xa1
  403517:	daa    
  403518:	arpl   WORD PTR [esi+0x53b8cef0],sp
  40351e:	push   0x90866530
  403523:	imul   edi,DWORD PTR [eax],0xf43278
  403529:	enter  0x62c6,0xb3
  40352d:	and    eax,0x407a164c
  403532:	mov    edx,0x5ec88271
  403537:	push   ecx
  403538:	retf   
  403539:	jnp    0x4035b8
  40353b:	test   ebx,ecx
  40353d:	cmc    
  40353e:	in     eax,0xa2
  403540:	test   edi,ebx
  403542:	jp     0x403588
  403544:	and    eax,0x4cd78ba
  403549:	rcl    BYTE PTR [edx-0x68387603],0xf5
  403550:	out    dx,eax
  403551:	out    0xf5,eax
  403553:	fmul   QWORD PTR [eax+0x73ed7b79]
  403559:	addr16 jmp 0x4034ef
  40355c:	mov    ebx,0x39632e54
  403561:	fimul  DWORD PTR [esi]
  403563:	fnstsw WORD PTR [esi-0x30892b51]
  403569:	fs retf 0x27b
  40356d:	push   es
  40356e:	and    al,0x37
  403570:	pop    edx
  403571:	repz dec ebp
  403573:	vandpd xmm0,xmm5,xmm4
  403577:	shl    bh,cl
  403579:	bound  eax,QWORD PTR [esi+0x2c37fc41]
  40357f:	adc    al,0xbc
  403581:	push   ebp
  403582:	fxch   st(6)
  403584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403585:	mov    DWORD PTR [edx-0x2a],ecx
  403588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403589:	jno    0x403583
  40358b:	pop    ss
  40358c:	mov    bl,0xa
  40358e:	cmp    al,0xf1
  403590:	push   eax
  403591:	jg     0x40352d
  403593:	xor    al,0x78
  403595:	pop    ds
  403596:	add    bl,BYTE PTR [esi-0x64]
  403599:	inc    esi
  40359a:	sbb    al,0x5e
  40359c:	cs inc edi
  40359e:	js     0x4035e3
  4035a0:	loop   0x4035b4
  4035a2:	push   ebp
  4035a3:	xor    dl,BYTE PTR [ecx+0x36]
  4035a6:	jmp    0x6518:0xbe6d7aa3
  4035ad:	xchg   esi,eax
  4035ae:	adc    bh,BYTE PTR [ebp-0x2d7a7c0e]
  4035b4:	and    edx,DWORD PTR [edi]
  4035b6:	sbb    al,0xc2
  4035b8:	aad    0xe3
  4035ba:	fs rcl BYTE PTR cs:[ebp+0x59],0x5a
  4035c0:	jecxz  0x403601
  4035c2:	je     0x403604
  4035c4:	test   BYTE PTR [eax],bh
  4035c6:	add    al,bh
  4035c8:	das    
  4035c9:	mov    ebx,0x2c479826
  4035ce:	lea    esp,[eax+0x6d]
  4035d1:	xchg   ebx,eax
  4035d2:	retf   
  4035d3:	stos   BYTE PTR es:[edi],al
  4035d4:	out    dx,eax
  4035d5:	push   ecx
  4035d6:	dec    edx
  4035d7:	push   ds
  4035d8:	test   BYTE PTR [edi],0x89
  4035db:	lds    esi,FWORD PTR [esi]
  4035dd:	dec    ecx
  4035de:	xor    ah,BYTE PTR [ebp+0x7e85806b]
  4035e4:	out    dx,al
  4035e5:	les    eax,FWORD PTR [eax+0x28]
  4035e8:	cli    
  4035e9:	pop    eax
  4035ea:	and    ch,BYTE PTR [edi-0x3a]
  4035ed:	cdq    
  4035ee:	inc    edx
  4035ef:	and    dl,BYTE PTR [edx]
  4035f1:	lds    ecx,FWORD PTR [edx+0x13]
  4035f4:	mov    DWORD PTR [edx-0x3],edi
  4035f7:	frstor [edi+0x6a]
  4035fa:	and    DWORD PTR [edx+0x55],0xffffff83
  4035fe:	add    al,0x5c
  403600:	mov    edx,0x1a37f414
  403605:	pop    ss
  403606:	(bad)  
  403607:	xor    al,0xe3
  403609:	int3   
  40360a:	(bad)
  40360d:	dec    eax
  40360e:	or     dl,BYTE PTR [ebx+0x6637d619]
  403614:	xor    al,0x83
  403616:	add    BYTE PTR [esi+esi*4-0x20431b80],dl
  40361d:	dec    eax
  40361e:	mov    ds:0x48e221d4,eax
  403623:	test   WORD PTR [ebx],0x42bc
  403628:	xchg   esp,eax
  403629:	ds jp  0x4036a1
  40362c:	add    DWORD PTR [edx+0x6],ebx
  40362f:	mov    ecx,0x1782be41
  403634:	sti    
  403635:	jp     0x4035c3
  403637:	sar    ebp,0xce
  40363a:	xor    BYTE PTR [ebx+0x1566f625],0xb6
  403641:	pop    ecx
  403642:	lea    esi,[edi-0x69]
  403645:	repz ds or dl,bl
  403649:	fs push ecx
  40364b:	sbb    BYTE PTR [esi-0x22],dl
  40364e:	pop    esi
  40364f:	sub    eax,0xe90d2f5a
  403654:	dec    esp
  403655:	cli    
  403656:	je     0x4036cb
  403658:	and    edx,DWORD PTR [eax-0x6f12988a]
  40365e:	test   eax,0x213c5bd8
  403663:	mov    edi,0x9ab6bdc
  403668:	or     bh,BYTE PTR [edi+0x43f34fab]
  40366e:	call   FWORD PTR [esi]
  403670:	fmul   QWORD PTR [eax+0x11]
  403673:	dec    ecx
  403674:	jmp    esp
  403676:	xor    ebx,DWORD PTR [ebx]
  403678:	inc    ebp
  403679:	popf   
  40367a:	xor    BYTE PTR [esi+0x1f8f7139],0xef
  403681:	gs in  eax,0x45
  403684:	jnp    0x4036c0
  403686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403687:	cwde   
  403688:	jl     0x4036ec
  40368a:	(bad)  
  40368b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40368c:	mov    BYTE PTR [edi],bh
  40368e:	ret    0x393c
  403691:	cmp    al,0xc3
  403693:	sub    DWORD PTR [edx],ebp
  403695:	mov    esp,0xd4cb4964
  40369a:	and    DWORD PTR [edx+esi*4-0x2ebd07bc],edx
  4036a1:	dec    esp
  4036a2:	mov    BYTE PTR [ebp-0xeb47303],ch
  4036a8:	stos   DWORD PTR es:[edi],eax
  4036a9:	or     ebx,edi
  4036ab:	les    esp,FWORD PTR [ebp+0x388cb486]
  4036b1:	add    edx,DWORD PTR [ebx+edx*1]
  4036b4:	sub    al,0x7f
  4036b6:	loope  0x40372d
  4036b8:	pop    ebp
  4036b9:	xchg   esi,eax
  4036ba:	fucomip st,st(4)
  4036bc:	popa   
  4036bd:	jge    0x403734
  4036bf:	int    0xc5
  4036c1:	lds    eax,FWORD PTR [ecx]
  4036c3:	aas    
  4036c4:	sahf   
  4036c5:	clc    
  4036c6:	adc    DWORD PTR [ecx],edi
  4036c8:	or     ebp,DWORD PTR [esi-0xe]
  4036cb:	adc    edx,edx
  4036cd:	dec    edx
  4036ce:	into   
  4036cf:	sub    eax,0xd1ff9659
  4036d4:	mov    edi,0x53af987d
  4036d9:	mov    bh,0x6f
  4036db:	mov    ecx,0xe972ed71
  4036e0:	inc    edi
  4036e1:	test   dh,cl
  4036e3:	jecxz  0x4036a9
  4036e5:	out    dx,eax
  4036e6:	and    al,0x79
  4036e8:	or     DWORD PTR [edx],0x3a
  4036eb:	sbb    eax,0x2cece873
  4036f0:	stos   BYTE PTR es:[edi],al
  4036f1:	dec    edi
  4036f2:	test   al,0x9f
  4036f4:	rcl    edx,0x92
  4036f7:	mov    WORD PTR [esi],?
  4036f9:	jae    0x403698
  4036fb:	push   ecx
  4036fc:	leave  
  4036fd:	adc    cl,BYTE PTR [ebp+0x6e413060]
  403703:	jmp    FWORD PTR [esi]
  403705:	sbb    bh,BYTE PTR [ecx+0x24]
  403708:	scas   eax,DWORD PTR es:[edi]
  403709:	inc    esi
  40370a:	test   DWORD PTR [esi],ebp
  40370c:	cmp    BYTE PTR ds:0xbc195393,cl
  403712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403713:	cmp    esi,DWORD PTR [edx+ebx*1]
  403716:	sub    bh,BYTE PTR [ebp-0x6c]
  403719:	dec    ebp
  40371a:	ss sti 
  40371c:	stos   DWORD PTR es:[edi],eax
  40371d:	lods   eax,DWORD PTR ds:[esi]
  40371e:	mov    ds:0x3ba1d6c4,al
  403723:	out    0xe8,al
  403725:	mov    fs,WORD PTR [eax]
  403727:	cmp    eax,0x3938aff2
  40372c:	adc    ch,BYTE PTR [ebp+ecx*4+0x1fcb0a71]
  403733:	cld    
  403734:	jne    0x40376f
  403736:	test   DWORD PTR ds:0xfc739435,ebx
  40373c:	sti    
  40373d:	mov    WORD PTR [ebx+0x40a2745e],?
  403743:	sub    al,0xd3
  403745:	mov    esp,0x260803a
  40374a:	jb     0x40376a
  40374c:	jae    0x403765
  40374e:	nop
  40374f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403750:	jno    0x4036f4
  403752:	sbb    al,BYTE PTR [ebp-0x51d927c1]
  403758:	nop
  403759:	dec    esi
  40375a:	sbb    dl,dl
  40375c:	add    dl,BYTE PTR [eax+edi*4]
  40375f:	rcr    BYTE PTR [ebp+0x4f477fce],1
  403765:	adc    eax,0xada89a7d
  40376a:	add    dh,BYTE PTR [edi+0x12]
  40376d:	mov    ds:0x33108daa,eax
  403772:	fdiv   QWORD PTR [eax]
  403774:	(bad)  
  403776:	icebp  
  403777:	ins    BYTE PTR es:[edi],dx
  403778:	cs add ebp,ecx
  40377b:	mov    ds:0xa6f7ccb2,al
  403780:	fistp  WORD PTR [ebp+edx*4+0x4eb9bf21]
  403787:	pop    edi
  403788:	mov    eax,0x6126833f
  40378d:	fmul   DWORD PTR [edi-0x7e]
  403790:	xchg   ebp,eax
  403791:	cmp    dh,bh
  403793:	aad    0x41
  403795:	je     0x4037e1
  403797:	add    al,0x15
  403799:	gs aas 
  40379b:	hlt    
  40379c:	fldenv [ebx+0x65]
  40379f:	sub    DWORD PTR [ecx+0x6f6d022b],ecx
  4037a5:	es sahf 
  4037a7:	call   FWORD PTR ds:0x35f3f0bb
  4037ad:	mov    esi,0xec4dbdf7
  4037b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037b3:	in     eax,dx
  4037b4:	fucomip st,st(7)
  4037b6:	ret    0x6529
  4037b9:	adc    edx,DWORD PTR [eax-0x35]
  4037bc:	xchg   BYTE PTR [ebx-0x478d2e6c],bl
  4037c2:	adc    ch,BYTE PTR [edi-0x6c677f5a]
  4037c8:	cmp    al,0xc0
  4037ca:	pop    ebp
  4037cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037cc:	into   
  4037cd:	test   DWORD PTR [ecx-0x12],esp
  4037d0:	lea    esp,[esi-0x6]
  4037d3:	clc    
  4037d4:	adc    DWORD PTR [ebp+esi*2+0x2950e432],esi
  4037db:	adc    esi,ebx
  4037dd:	xchg   ebp,eax
  4037de:	xchg   esi,eax
  4037df:	mov    cl,BYTE PTR [esi+edx*1]
  4037e2:	bound  edx,QWORD PTR ds:0xbe3e6d3e
  4037e8:	push   ebp
  4037e9:	xlat   BYTE PTR ds:[ebx]
  4037ea:	push   ds
  4037eb:	dec    eax
  4037ec:	sub    eax,0x786a6d93
  4037f1:	imul   esp,DWORD PTR [esi+0x49],0x19
  4037f5:	sti    
  4037f6:	jae    0x4037ba
  4037f8:	cmp    cl,BYTE PTR ds:0x98e17887
  4037fe:	cmp    DWORD PTR [edi-0x4c],esp
  403801:	jp     0x403808
  403803:	xlat   BYTE PTR ds:[ebx]
  403804:	xor    bl,BYTE PTR ds:0xab056d0f
  40380a:	lea    ebx,[esi]
  40380c:	cmp    ecx,esp
  40380e:	jg     0x4037ec
  403810:	or     BYTE PTR [ebp+0x14c7791f],dl
  403816:	gs dec ebp
  403818:	rcl    BYTE PTR [edi+edx*8+0x3b1d2b99],0xd0
  403820:	adc    DWORD PTR [ecx+0x56],ebx
  403823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403824:	inc    ecx
  403825:	dec    ecx
  403826:	pusha  
  403827:	sbb    DWORD PTR [edi],ebp
  403829:	and    al,0xe1
  40382b:	ja     0x403876
  40382d:	or     al,0xa0
  40382f:	stos   DWORD PTR es:[edi],eax
  403830:	cmp    BYTE PTR [edx-0x7bb1e8c1],dl
  403836:	dec    eax
  403837:	test   al,0x6d
  403839:	mov    DWORD PTR [edi+0x6b581513],ecx
  40383f:	xchg   ebp,eax
  403840:	adc    bh,BYTE PTR [edi-0x79]
  403843:	xor    DWORD PTR [esi-0x70],0xffffffad
  403847:	aad    0x46
  403849:	mov    bh,0x57
  40384b:	inc    edi
  40384c:	xor    al,BYTE PTR [eax]
  40384e:	mov    fs,WORD PTR [ebp-0x25d63811]
  403854:	lock inc esp
  403856:	sub    BYTE PTR [eax],bl
  403858:	mov    bh,0xa8
  40385a:	sti    
  40385b:	pop    edi
  40385c:	adc    cl,BYTE PTR [esi]
  40385e:	cs pop eax
  403860:	jge    0x403867
  403862:	into   
  403863:	or     BYTE PTR [ebp+esi*1+0x72],bl
  403867:	add    ch,BYTE PTR [eax]
  403869:	lahf   
  40386a:	add    dl,dl
  40386c:	xor    cl,al
  40386e:	push   cs
  40386f:	or     eax,0xa6c5ad61
  403874:	or     ebx,DWORD PTR [ebx+0x61]
  403877:	in     eax,0xc4
  403879:	mov    DWORD PTR [si-0x4a80],ebx
  40387e:	push   DWORD PTR [edx]
  403880:	fistp  WORD PTR [edx-0x3f6aa998]
  403886:	mov    ds:0x9909d0d4,eax
  40388b:	js     0x40388f
  40388d:	clc    
  40388e:	xchg   esi,eax
  40388f:	push   0x91d3fbd9
  403894:	retf   
  403895:	lds    ebx,FWORD PTR [esi]
  403897:	lods   eax,DWORD PTR ds:[esi]
  403898:	mov    dl,0x6
  40389a:	xchg   esi,eax
  40389b:	jno    0x4038d7
  40389d:	jns    0x4038cf
  40389f:	sub    DWORD PTR [ebp-0x45],edx
  4038a2:	call   0xae28:0x15f653c
  4038a9:	and    ch,cl
  4038ab:	mov    eax,ds:0xba5e0232
  4038b0:	or     BYTE PTR [ebx],bl
  4038b2:	xchg   DWORD PTR [ebx+0x5e6fc1],esp
  4038b8:	in     al,0x4d
  4038ba:	fs push cs
  4038bc:	loopne 0x403870
  4038be:	sub    BYTE PTR [esi+edx*8],dh
  4038c1:	sbb    BYTE PTR [ebp-0x52],0x66
  4038c5:	test   BYTE PTR [ebp+0x2d],bh
  4038c8:	pop    edx
  4038c9:	out    0x83,al
  4038cb:	dec    esi
  4038cc:	addr16 and al,0x81
  4038cf:	aam    0xeb
  4038d1:	cmp    al,0xc4
  4038d3:	mov    ebp,0xc3e7f223
  4038d8:	jp     0x403923
  4038da:	sbb    DWORD PTR [ebp+0x28812073],ebp
  4038e0:	bound  eax,QWORD PTR [edx+0x44]
  4038e3:	aam    0x3d
  4038e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038e6:	sti    
  4038e7:	test   BYTE PTR [edx-0x39f2e9ab],dl
  4038ed:	cmp    al,0x2b
  4038ef:	cmp    ecx,ebx
  4038f1:	imul   eax,DWORD PTR [ecx+0x35],0xa5d75eb7
  4038f8:	inc    edx
  4038f9:	add    esi,DWORD PTR [ebx-0x54]
  4038fc:	xchg   DWORD PTR [ebx-0xe],ebp
  4038ff:	int    0x38
  403901:	sub    al,0x8
  403903:	mov    BYTE PTR [ebx],cl
  403905:	jne    0x1f285722
  40390b:	(bad)  
  40390c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40390d:	mov    ebx,0x6514b203
  403912:	mov    ?,WORD PTR [edi+0x68127408]
  403918:	sub    eax,0xc6274e0b
  40391d:	jmp    0x403963
  40391f:	ret    
  403920:	xchg   esi,eax
  403921:	sub    BYTE PTR [ecx],ah
  403923:	jmp    0x403961
  403925:	pushf  
  403926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403927:	xor    DWORD PTR [ebx],0x1d
  40392a:	out    0x41,al
  40392c:	mov    eax,0xff8bbc8d
  403931:	mov    al,ds:0xf0b1bc6d
  403936:	jne    0x4039a7
  403938:	cwde   
  403939:	xor    al,0xef
  40393b:	(bad)  
  40393c:	or     eax,DWORD PTR [edx+0xd]
  40393f:	arpl   WORD PTR [ebx],ax
  403941:	dec    ecx
  403942:	jp     0x403921
  403944:	rcr    DWORD PTR [eax-0x3dfd915b],cl
  40394a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40394b:	push   ebx
  40394c:	xlat   BYTE PTR ds:[ebx]
  40394d:	(bad)  
  40394e:	mov    esp,0xbb4bc7ae
  403953:	(bad)  
  403954:	mov    esp,0xa79a62d9
  403959:	xchg   esi,eax
  40395a:	mov    esi,0xb87204e9
  40395f:	lds    ebx,FWORD PTR [ebx+0x12]
  403962:	(bad)  
  403963:	mov    bh,0xc4
  403965:	add    eax,0x8a826a77
  40396a:	mov    dl,0x4d
  40396c:	loop   0x403926
  40396e:	push   esp
  40396f:	jge    0x4038f8
  403971:	push   0xfffffff7
  403973:	call   0x7d43:0x1a85b5e5
  40397a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40397b:	mov    ah,dl
  40397d:	ins    BYTE PTR es:[edi],dx
  40397e:	mov    ch,0xf1
  403980:	retf   0xc86f
  403983:	push   ebx
  403984:	mov    ds:0xbb177674,al
  403989:	xchg   ecx,eax
  40398a:	or     eax,0x9bc37839
  40398f:	les    eax,FWORD PTR [eax]
  403991:	inc    ebx
  403992:	and    cl,BYTE PTR [ebx+0x1ce4b8b8]
  403998:	js     0x40399a
  40399a:	or     BYTE PTR [ebx-0x56],bl
  40399d:	and    bh,BYTE PTR [ebx+0x4d]
  4039a0:	dec    edx
  4039a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039a2:	mov    bl,0x15
  4039a4:	adc    DWORD PTR [edi-0x6ca50d03],0x2c312169
  4039ae:	repz push ecx
  4039b0:	je     0x403943
  4039b2:	mov    esp,0x3e58430a
  4039b7:	repz dec eax
  4039b9:	jle    0x4039eb
  4039bb:	add    al,0x5d
  4039bd:	add    edx,edx
  4039bf:	std    
  4039c0:	add    eax,0xaaf6dc32
  4039c5:	lock adc BYTE PTR ds:0x6479d3fa,bh
  4039cc:	imul   esi,DWORD PTR ds:0xb36e4087,0x59
  4039d3:	xchg   ebx,eax
  4039d4:	sar    BYTE PTR [ebx-0xd4727ac],1
  4039da:	push   ebp
  4039db:	dec    edx
  4039dc:	iret   
  4039dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039de:	push   es
  4039df:	dec    eax
  4039e0:	sub    ecx,edx
  4039e2:	dec    DWORD PTR [edi+0x6a]
  4039e5:	(bad)  
  4039e6:	arpl   bx,dx
  4039e8:	hlt    
  4039e9:	(bad)  
  4039ea:	fistp  QWORD PTR [ebx+0x3e]
  4039ed:	rcl    ebp,0x51
  4039f0:	idiv   BYTE PTR [ebx-0x7d3fadc9]
  4039f6:	jnp    0x403a44
  4039f8:	xor    esi,DWORD PTR [ebp-0x76]
  4039fb:	data16 jo 0x4039b7
  4039fe:	pusha  
  4039ff:	dec    edx
  403a00:	push   0x1064687d
  403a05:	push   es
  403a06:	adc    esp,0x75d415a8
  403a0c:	scas   eax,DWORD PTR es:[edi]
  403a0d:	cli    
  403a0e:	push   es
  403a0f:	frstor [esi+0x40]
  403a12:	es iret 
  403a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a15:	cwde   
  403a16:	ret    
  403a17:	mov    ds:0x4633a331,al
  403a1c:	ins    BYTE PTR es:[edi],dx
  403a1d:	call   0xa196:0x7297b3a7
  403a24:	jo     0x4039f3
  403a26:	mov    ecx,0x4b478523
  403a2b:	or     eax,0x85867a56
  403a30:	popf   
  403a31:	push   0x32
  403a33:	mov    dh,ah
  403a35:	mov    ebp,0x76dbd69b
  403a3a:	mov    edx,0x47862b05
  403a3f:	push   ecx
  403a40:	imul   ecx,DWORD PTR [ecx],0x2b
  403a43:	pop    ebx
  403a44:	jg     0x403aba
  403a46:	ins    BYTE PTR es:[edi],dx
  403a47:	shl    BYTE PTR [ecx],0x16
  403a4a:	mov    al,cs:0xc741e7a7
  403a50:	test   BYTE PTR [edi+ebx*1],0x13
  403a54:	cmp    eax,0xa8ee2b25
  403a59:	jae    0x403abc
  403a5b:	fisub  WORD PTR [eax+0x515c6c42]
  403a61:	mov    bl,0x44
  403a63:	test   esi,ebp
  403a65:	out    0x39,eax
  403a67:	adc    edx,DWORD PTR [ecx-0x7072a5b6]
  403a6d:	jp     0x403a56
  403a6f:	push   esi
  403a70:	scas   eax,DWORD PTR es:[edi]
  403a71:	call   0xf15ab39a
  403a76:	xchg   ecx,eax
  403a77:	sbb    dh,bl
  403a79:	inc    esp
  403a7a:	jecxz  0x403a7b
  403a7c:	dec    edi
  403a7d:	sub    esi,eax
  403a7f:	xchg   ebp,eax
  403a80:	stos   DWORD PTR es:[edi],eax
  403a81:	repnz lahf 
  403a83:	es out 0x45,al
  403a86:	mov    edi,0xec25a992
  403a8b:	outs   dx,BYTE PTR ds:[esi]
  403a8c:	mov    esi,0xb3cea8d1
  403a91:	fst    DWORD PTR [esi-0x5113b0d2]
  403a97:	adc    al,0x43
  403a99:	pop    ebp
  403a9a:	fistp  QWORD PTR [esi-0x6f]
  403a9d:	jne    0x403a71
  403a9f:	dec    ecx
  403aa0:	adc    ah,0x9e
  403aa3:	arpl   WORD PTR [eax-0x73187df0],di
  403aa9:	adc    BYTE PTR [ecx-0x2ebc0a05],dl
  403aaf:	test   bh,dh
  403ab1:	sub    BYTE PTR [ebx-0x7ea18a2c],cl
  403ab7:	stos   DWORD PTR es:[edi],eax
  403ab8:	xor    eax,0xa4ca5469
  403abd:	xchg   ebp,eax
  403abe:	retf   
  403abf:	fistp  WORD PTR [esi+0xd]
  403ac2:	push   edx
  403ac3:	xchg   esp,eax
  403ac4:	and    edi,DWORD PTR [edi+0x5]
  403ac7:	ret    
  403ac8:	retf   
  403ac9:	xchg   edx,eax
  403aca:	fisubr DWORD PTR ds:0x27bee1d
  403ad0:	fimul  WORD PTR es:[esi]
  403ad3:	leave  
  403ad4:	mov    bh,0xb4
  403ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ad7:	daa    
  403ad8:	rcr    DWORD PTR [ebx+0x6036f6f7],cl
  403ade:	fistp  WORD PTR ds:0xa51ef892
  403ae4:	xor    eax,0x44faa690
  403ae9:	test   al,0xa1
  403aeb:	and    BYTE PTR [edi],bh
  403aed:	inc    ebp
  403aee:	xchg   edi,eax
  403aef:	shl    BYTE PTR [ecx+ecx*2-0x7b640ba2],0xeb
  403af7:	mov    ch,0x3
  403af9:	mov    WORD PTR ds:0x4b22bc31,ds
  403aff:	adc    eax,0x887c60e3
  403b04:	ds out dx,al
  403b06:	xlat   BYTE PTR ds:[ebx]
  403b07:	loopne 0x403b7b
  403b09:	inc    edx
  403b0a:	add    eax,0xb2399526
  403b0f:	(bad)  
  403b10:	shr    bh,1
  403b12:	mov    eax,ds:0x46cb8934
  403b17:	rcr    BYTE PTR ds:0x3386365e,1
  403b1d:	imul   edx,ebp,0xffffff90
  403b20:	or     DWORD PTR [eax],ebp
  403b22:	rcl    DWORD PTR [ecx+ebp*8+0x4987c3da],1
  403b29:	(bad)
  403b2d:	ja     0x403ba8
  403b2f:	frstor [edx]
  403b31:	stos   DWORD PTR es:[edi],eax
  403b32:	out    dx,eax
  403b33:	adc    al,0x6c
  403b35:	sbb    eax,0xbf88305d
  403b3a:	repz out 0x5d,al
  403b3d:	fs dec ecx
  403b3f:	clc    
  403b40:	pop    sp
  403b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b43:	push   ss
  403b44:	test   bl,dl
  403b46:	lock call 0xde14:0xd7efe4af
  403b4e:	dec    ebx
  403b4f:	sbb    BYTE PTR [esi],0x31
  403b52:	inc    ebx
  403b53:	or     edi,eax
  403b55:	sar    BYTE PTR [ebx+0x6d],cl
  403b58:	dec    ebp
  403b59:	rcl    DWORD PTR [edx+0x55],cl
  403b5c:	and    al,0x10
  403b5e:	mov    eax,0x18a03139
  403b63:	or     bh,dh
  403b65:	add    edi,DWORD PTR [ecx+0x6e]
  403b68:	adc    cl,BYTE PTR [ecx]
  403b6a:	lahf   
  403b6b:	les    edx,FWORD PTR [esi-0x6b0234]
  403b71:	and    edx,0xffffff97
  403b74:	jae    0x403b44
  403b76:	rol    BYTE PTR [esi-0x31],0xf3
  403b7a:	inc    ecx
  403b7b:	jns    0x403b8a
  403b7d:	js     0x403b3d
  403b7f:	cmp    al,0x11
  403b81:	test   al,0xe4
  403b83:	jmp    0x403b6f
  403b85:	dec    eax
  403b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b87:	fistp  WORD PTR cs:[edi+esi*2]
  403b8b:	inc    esi
  403b8c:	mov    ebp,0x76dccc04
  403b91:	add    cl,BYTE PTR [ebp-0x72]
  403b94:	cmp    edi,ebx
  403b96:	sti    
  403b97:	icebp  
  403b98:	pop    ebp
  403b99:	retf   0x3fd0
  403b9c:	sar    ecx,cl
  403b9e:	sti    
  403b9f:	pop    es
  403ba0:	mov    esi,0x99b745e2
  403ba5:	ins    BYTE PTR es:[edi],dx
  403ba6:	add    bh,dh
  403ba8:	mov    ecx,0xbcef2da8
  403bad:	mov    ah,0x9f
  403baf:	outs   dx,BYTE PTR ds:[esi]
  403bb0:	xor    DWORD PTR [ebx-0x59],eax
  403bb3:	inc    esp
  403bb4:	jmp    0x403bf8
  403bb6:	or     al,0x1f
  403bb8:	aaa    
  403bb9:	jno    0x403b95
  403bbb:	sub    dl,dl
  403bbd:	pop    ebx
  403bbe:	dec    edi
  403bbf:	aam    0x95
  403bc1:	leave  
  403bc2:	call   0x1ec:0x27022d2a
  403bc9:	and    cl,cl
  403bcb:	inc    ebx
  403bcc:	inc    ebx
  403bcd:	ins    DWORD PTR es:[edi],dx
  403bce:	das    
  403bcf:	addr16 push ds
  403bd1:	jns    0x403ba3
  403bd3:	cs dec esi
  403bd5:	shl    DWORD PTR [eax+0x2d],1
  403bd8:	dec    edx
  403bd9:	inc    esi
  403bda:	sub    esi,DWORD PTR [ebx-0x312eb82e]
  403be0:	imul   ebp,edi,0x862330f3
  403be6:	mov    ebx,?
  403be8:	rol    BYTE PTR [edx-0x9],0x9c
  403bec:	adc    ecx,ebx
  403bee:	cdq    
  403bef:	out    dx,al
  403bf0:	ins    DWORD PTR es:[edi],dx
  403bf1:	pmaxsw mm6,QWORD PTR [edi+ebp*2-0x39a85983]
  403bf9:	pop    ebp
  403bfa:	movsx  ebp,BYTE PTR [eax]
  403bfd:	stos   BYTE PTR es:[edi],al
  403bfe:	leave  
  403bff:	mov    WORD PTR [edx-0x65],ds
  403c02:	jl     0x403c52
  403c04:	arpl   WORD PTR [edx],sp
  403c06:	add    al,0xb2
  403c08:	add    ch,dl
  403c0a:	aas    
  403c0b:	aas    
  403c0c:	nop
  403c0d:	mov    ebp,0x1e20c76b
  403c12:	test   al,0x83
  403c14:	mul    dl
  403c16:	mov    DWORD PTR [ecx+0x1c48f29a],eax
  403c1c:	sbb    eax,0x74bc33b5
  403c21:	mov    al,0xe1
  403c23:	loop   0x403bf1
  403c25:	cmc    
  403c26:	sbb    eax,0x42f99bab
  403c2b:	(bad)  
  403c2c:	int3   
  403c2d:	dec    esi
  403c2e:	mov    esp,DWORD PTR [edx-0x7c]
  403c31:	dec    esp
  403c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c34:	imul   ecx,DWORD PTR [eax],0x27b291b0
  403c3a:	lods   eax,DWORD PTR ds:[esi]
  403c3b:	inc    ebp
  403c3c:	pop    esi
  403c3d:	mov    al,ds:0xee0a933b
  403c42:	retf   0xc213
  403c45:	lods   al,BYTE PTR ds:[esi]
  403c46:	lods   eax,DWORD PTR ds:[esi]
  403c47:	mov    db4,ecx
  403c4a:	lods   al,BYTE PTR ds:[esi]
  403c4b:	xchg   edx,ebp
  403c4d:	test   BYTE PTR [eax-0x71a35d01],ah
  403c53:	inc    ecx
  403c54:	mov    al,0x29
  403c56:	mov    esp,0xe4946a0e
  403c5b:	test   eax,0xffe01a5a
  403c60:	xchg   edi,eax
  403c61:	jge    0x403c06
  403c63:	add    dh,BYTE PTR [edi-0x60]
  403c66:	imul   esi,DWORD PTR [ebx-0x7e],0x8daf12f5
  403c6d:	jbe    0x403c69
  403c6f:	dec    eax
  403c70:	mov    ds:0xb24b554d,al
  403c75:	ret    0xdaa4
  403c78:	loop   0x403c23
  403c7a:	aad    0x8b
  403c7c:	xchg   BYTE PTR [edi-0x7],bl
  403c7f:	stc    
  403c80:	xor    edi,DWORD PTR [ecx-0x6d2da8f1]
  403c86:	or     BYTE PTR ds:0xac27e86d,ah
  403c8c:	ret    0x8d6c
  403c8f:	addr16 jmp 0x9470:0x49cae1bc
  403c97:	mov    cl,0x44
  403c99:	(bad)  
  403c9a:	or     eax,0xa025801
  403c9f:	stos   BYTE PTR es:[edi],al
  403ca0:	push   0xdad47720
  403ca5:	dec    ecx
  403ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ca7:	mov    bl,0x70
  403ca9:	rcr    cl,1
  403cab:	jp     0x403d28
  403cad:	shr    DWORD PTR [ecx+0x5aa5266e],cl
  403cb3:	popa   
  403cb4:	jl     0x403c66
  403cb6:	(bad)  
  403cb7:	repnz icebp 
  403cb9:	pop    ds
  403cba:	scas   eax,DWORD PTR es:[edi]
  403cbb:	inc    edx
  403cbc:	cmp    ebx,DWORD PTR [edx*4+0x7e53f7a0]
  403cc3:	mov    DWORD PTR [ebp-0x6593e50],edi
  403cc9:	jno    0x403cd2
  403ccb:	jl     0x403ca0
  403ccd:	jne    0x403d00
  403ccf:	adc    eax,eax
  403cd1:	xchg   ebx,esp
  403cd3:	sbb    DWORD PTR [edi+0x49c414eb],esp
  403cd9:	dec    ebx
  403cda:	(bad)  
  403cdb:	and    al,0x69
  403cdd:	inc    di
  403cdf:	rcr    DWORD PTR [eax+ebx*4-0x6d],1
  403ce3:	and    DWORD PTR [edx],edi
  403ce5:	cmp    BYTE PTR [esi-0x12],0x40
  403ce9:	mov    dh,0xb7
  403ceb:	ret    0x8372
  403cee:	outs   dx,BYTE PTR ds:[esi]
  403cef:	in     eax,dx
  403cf0:	mov    dl,BYTE PTR [ecx]
  403cf2:	div    BYTE PTR [ebp+edi*4+0x3a]
  403cf6:	lods   al,BYTE PTR ds:[esi]
  403cf7:	mov    ebp,0x36484831
  403cfc:	stc    
  403cfd:	ja     0x403ce5
  403cff:	or     eax,0x5516d67b
  403d04:	mov    ds:0xbcf17337,al
  403d09:	adc    al,0x77
  403d0b:	dec    edi
  403d0c:	jg     0x403cd5
  403d0e:	inc    esp
  403d0f:	shl    DWORD PTR [esp+ebx*8-0x24],cl
  403d13:	mov    WORD PTR [ebx],es
  403d15:	daa    
  403d16:	xlat   BYTE PTR ds:[ebx]
  403d17:	fs mov edi,0x61ee85e3
  403d1d:	dec    esp
  403d1e:	aaa    
  403d1f:	retf   
  403d20:	es jne 0x403d1e
  403d23:	mov    ah,0x5a
  403d25:	pop    ecx
  403d26:	sar    BYTE PTR [ebp-0x4e],1
  403d29:	pop    ecx
  403d2a:	cdq    
  403d2b:	jecxz  0x403d8d
  403d2d:	sub    eax,0xdf311e81
  403d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d33:	cld    
  403d34:	ror    esi,1
  403d36:	pop    ss
  403d37:	push   0x9
  403d39:	push   0x64
  403d3b:	mov    bl,0x5
  403d3d:	cmp    DWORD PTR [edx+0x5f],0xfffffff7
  403d41:	xor    ecx,esi
  403d43:	push   ebx
  403d44:	mov    ds:0x4d9dcb6e,al
  403d49:	add    edx,esp
  403d4b:	mov    ch,0x52
  403d4d:	pop    edx
  403d4e:	repz loopne 0x403d81
  403d51:	mov    BYTE PTR [eax],dh
  403d53:	sbb    dl,BYTE PTR [esi]
  403d55:	pop    eax
  403d56:	aam    0x26
  403d58:	or     al,0x32
  403d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d5b:	lahf   
  403d5c:	mov    bl,0x12
  403d5e:	xlat   BYTE PTR ds:[ebx]
  403d5f:	(bad)  
  403d60:	mov    ds:0x3e1543ea,al
  403d65:	xor    eax,0xa31ffafe
  403d6a:	or     dh,BYTE PTR [esi+0x98cc393]
  403d70:	push   0x38
  403d72:	mov    edi,0x7db15326
  403d77:	add    DWORD PTR [esi],0xa9f8e9f2
  403d7d:	les    esi,FWORD PTR [edx+0xc]
  403d80:	lea    esi,[eax-0x4dfc646]
  403d86:	cmc    
  403d87:	inc    esp
  403d88:	push   eax
  403d89:	je     0x403d99
  403d8b:	gs in  al,0x37
  403d8e:	or     ecx,DWORD PTR [ebp-0x2]
  403d91:	mov    ds:0x7bac21f,eax
  403d96:	dec    edx
  403d97:	sub    DWORD PTR [ecx-0xb6a2076],esp
  403d9d:	mov    DWORD PTR [edx-0x14968470],esi
  403da3:	in     eax,dx
  403da4:	jge    0x403d34
  403da6:	(bad)
  403da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403daa:	dec    eax
  403dab:	dec    edi
  403dac:	dec    ebx
  403dad:	jmp    0x403d73
  403daf:	inc    esi
  403db0:	aas    
  403db1:	mov    ecx,0x189ea791
  403db6:	or     al,0x8
  403db8:	push   fs
  403dba:	shl    BYTE PTR [edi-0x8],cl
  403dbd:	pop    ds
  403dbe:	stc    
  403dbf:	jbe    0x403e1a
  403dc1:	push   esi
  403dc2:	push   es
  403dc3:	inc    ecx
  403dc4:	adc    dh,BYTE PTR [ebx+0x4a]
  403dc7:	sub    eax,0xe8cc7d49
  403dcc:	pop    ecx
  403dcd:	xor    dh,BYTE PTR [ebp-0x41]
  403dd0:	fwait
  403dd1:	stos   BYTE PTR es:[edi],al
  403dd2:	in     al,0x4
  403dd4:	dec    ebx
  403dd5:	fist   DWORD PTR [edx+0x1608db55]
  403ddb:	ret    
  403ddc:	adc    eax,0x8c852903
  403de1:	mov    ecx,0xdf44d156
  403de6:	and    al,0xdd
  403de8:	jbe    0x403dbc
  403dea:	mov    ds:0x31e9d74,al
  403def:	sub    ch,dh
  403df1:	pop    eax
  403df2:	dec    BYTE PTR [edi]
  403df4:	rol    BYTE PTR [ebx+0x41],0x37
  403df8:	fiadd  WORD PTR [eax]
  403dfa:	(bad)  
  403dfb:	sbb    BYTE PTR [edx],ah
  403dfd:	rcr    BYTE PTR ds:0xdeeba018,0x6c
  403e04:	push   edx
  403e05:	fnsave [edi]
  403e07:	sti    
  403e08:	xor    al,0x2a
  403e0a:	sahf   
  403e0b:	inc    esp
  403e0c:	add    DWORD PTR [ecx],ebp
  403e0e:	jg     0x403e15
  403e10:	out    dx,ax
  403e12:	push   ebp
  403e13:	not    BYTE PTR [esi-0x783c5efb]
  403e19:	jg     0x403e4d
  403e1b:	sbb    esi,DWORD PTR [edi+0x21]
  403e1e:	push   edx
  403e1f:	and    eax,0x37a7d0a3
  403e24:	ins    DWORD PTR es:[edi],dx
  403e25:	sbb    DWORD PTR ds:0x96ca719,eax
  403e2b:	repnz xchg ebp,eax
  403e2d:	dec    ebp
  403e2e:	or     edi,eax
  403e30:	xchg   ebx,eax
  403e31:	dec    eax
  403e32:	sub    esi,DWORD PTR [esi+0x72]
  403e35:	repz cmp dl,BYTE PTR [eax-0x1bc08ede]
  403e3c:	cmp    al,0x11
  403e3e:	retf   
  403e3f:	push   esi
  403e40:	jecxz  0x403eb0
  403e42:	push   cs
  403e43:	push   ebx
  403e44:	adc    ecx,eax
  403e46:	std    
  403e47:	pop    ebp
  403e48:	fsubr  DWORD PTR [ebp+0x16406d69]
  403e4e:	int3   
  403e4f:	xchg   edx,eax
  403e50:	push   edi
  403e51:	pop    esi
  403e52:	mov    ecx,0xcdce457d
  403e57:	dec    edi
  403e58:	adc    esi,eax
  403e5a:	call   0x42ba:0x734d
  403e60:	or     al,0x9d
  403e62:	mov    edi,0xf87e53ef
  403e67:	add    ah,BYTE PTR [ebx+0x0]
  403e6a:	pop    ds
  403e6b:	dec    esp
  403e6c:	je     0x403e9f
  403e6e:	into   
  403e6f:	leave  
  403e70:	xor    BYTE PTR ds:0x530c20c,dh
  403e76:	out    0xd8,eax
  403e78:	pop    ebp
  403e79:	ret    
  403e7a:	imul   eax,esi,0xcaa831a3
  403e80:	mov    ds:0xd384ff51,eax
  403e85:	mov    esi,0x361e5e91
  403e8a:	test   eax,0xd668b802
  403e8f:	(bad)  [eax-0x70]
  403e92:	pop    ebp
  403e93:	jmp    0x26d7:0x7e5b08c8
  403e9a:	outs   dx,BYTE PTR ds:[esi]
  403e9b:	retf   
  403e9c:	inc    ecx
  403e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e9e:	and    DWORD PTR [esi-0x5a],edx
  403ea1:	ja     0x403ed3
  403ea3:	fst    QWORD PTR [eax+esi*8-0x25]
  403ea7:	inc    ecx
  403ea8:	ins    DWORD PTR es:[edi],dx
  403ea9:	sub    dl,BYTE PTR [ebx-0x3ccc725d]
  403eaf:	push   edi
  403eb0:	mov    ds:0x77e07951,eax
  403eb5:	enter  0xbeae,0x6b
  403eb9:	sub    eax,0x7b686e19
  403ebe:	test   al,0xd8
  403ec0:	fisubr DWORD PTR [ecx-0x7f]
  403ec3:	dec    eax
  403ec4:	cmp    BYTE PTR ds:0x8addc27a,0x75
  403ecb:	(bad)  
  403ecd:	jl     0x403f33
  403ecf:	inc    esp
  403ed0:	dec    esp
  403ed1:	adc    eax,0x26417a66
  403ed6:	dec    edi
  403ed7:	fnstcw WORD PTR [eax]
  403ed9:	sbb    BYTE PTR [edx+0x1bb81bcd],bl
  403edf:	jno    0x403ec7
  403ee1:	xchg   ebx,eax
  403ee2:	icebp  
  403ee3:	xor    DWORD PTR [bx+di+0x2687],ebp
  403ee8:	lock dec esp
  403eea:	dec    edx
  403eeb:	adc    dl,bh
  403eed:	push   ebp
  403eee:	dec    ecx
  403eef:	xchg   esi,eax
  403ef0:	jmp    0xd7f1f7e5
  403ef5:	inc    edx
  403ef6:	pop    es
  403ef7:	jb     0x403f26
  403ef9:	(bad)  
  403efa:	ret    
  403efb:	sti    
  403efc:	inc    cx
  403efe:	dec    eax
  403eff:	push   0xffffff8f
  403f01:	pop    ebx
  403f02:	mov    esp,0x91cc779
  403f07:	inc    esi
  403f08:	inc    edi
  403f09:	pop    ss
  403f0a:	ret    0xf2c6
  403f0d:	clc    
  403f0e:	pop    ebx
  403f0f:	outs   dx,DWORD PTR ds:[esi]
  403f10:	and    eax,0xb78bcd6e
  403f15:	test   al,0x27
  403f17:	icebp  
  403f18:	mov    ah,0x4d
  403f1a:	call   0x97b58544
  403f1f:	out    0x65,eax
  403f21:	adc    DWORD PTR [esp+eax*1-0x6e3537b9],0x5ef4770b
  403f2c:	mov    ecx,0xc04cdc0d
  403f31:	adc    DWORD PTR [edi-0x11],0x21
  403f35:	out    dx,eax
  403f36:	inc    edi
  403f37:	das    
  403f38:	iret   
  403f39:	ja     0x403f89
  403f3b:	pop    ecx
  403f3c:	dec    ebx
  403f3d:	dec    edi
  403f3e:	or     dh,BYTE PTR ds:0x89faf888
  403f44:	div    DWORD PTR [edx+0x4b]
  403f47:	cmp    bh,BYTE PTR [ebx-0x34]
  403f4a:	or     al,0xff
  403f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f4d:	fist   WORD PTR [edx-0x59]
  403f50:	xchg   BYTE PTR [ebp-0x72e19e86],cl
  403f56:	repnz std 
  403f58:	cmp    eax,0xcfc9ebc7
  403f5d:	mov    al,0xc0
  403f5f:	mov    ebp,0x5ab73c16
  403f64:	rol    BYTE PTR [edx],cl
  403f66:	daa    
  403f67:	lahf   
  403f68:	jns    0x403fbb
  403f6a:	add    DWORD PTR [edx],0x25
  403f6d:	sar    DWORD PTR ds:0x695586b9,0xdf
  403f74:	inc    edi
  403f75:	leave  
  403f76:	pop    eax
  403f77:	cwde   
  403f78:	ror    DWORD PTR [edi-0x3d],1
  403f7b:	xchg   ebx,eax
  403f7c:	cmp    dh,BYTE PTR [eax-0x2227bc21]
  403f82:	iret   
  403f83:	mov    fs,WORD PTR [eax]
  403f85:	lods   al,BYTE PTR ds:[esi]
  403f86:	les    esi,FWORD PTR ds:0xc80d000a
  403f8c:	push   ss
  403f8d:	and    dl,ah
  403f8f:	pop    es
  403f90:	scas   al,BYTE PTR es:[edi]
  403f91:	shl    DWORD PTR [esi+0x14],0x3d
  403f95:	sahf   
  403f96:	cmp    BYTE PTR [edi],bh
  403f98:	xchg   BYTE PTR [ebx-0x2c7668b],ah
  403f9e:	push   ebx
  403f9f:	and    bl,bh
  403fa1:	(bad)  ds:0x74cdd7f8
  403fa7:	leave  
  403fa8:	jmp    0xb7c4:0xb3946224
  403faf:	loop   0x403f47
  403fb1:	mov    al,ds:0xc7eb7050
  403fb6:	inc    ebx
  403fb7:	lock jmp 0xd6b2cdf7
  403fbd:	ins    BYTE PTR es:[edi],dx
  403fbe:	icebp  
  403fbf:	test   BYTE PTR [esi+0x76],bh
  403fc2:	call   0xb51a97eb
  403fc7:	shl    DWORD PTR es:[esi+0x10],0x32
  403fcc:	cdq    
  403fcd:	mov    ds:0x99ae2ea1,eax
  403fd2:	xchg   BYTE PTR [ebp-0x14e0416b],ch
  403fd8:	push   ebp
  403fd9:	or     eax,0x9772ef72
  403fde:	jno    0x404049
  403fe0:	mov    ds:0x3feaf70b,eax
  403fe5:	xor    ebx,DWORD PTR [ebx]
  403fe7:	(bad)  
  403fe8:	add    ah,0x21
  403feb:	cmc    
  403fec:	push   ecx
  403fed:	int    0x3d
  403fef:	and    ch,ah
  403ff1:	jmp    0x40404c
  403ff3:	cli    
  403ff4:	inc    esi
  403ff5:	xor    edi,DWORD PTR ds:0x478ff720
  403ffb:	popa   
  403ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ffd:	cmp    edx,DWORD PTR fs:[ebx-0x20]
  404001:	mov    BYTE PTR [esp+ecx*4+0x1566f81d],bl
  404008:	rol    eax,cl
  40400a:	aad    0x4d
  40400c:	jns    0x40401e
  40400e:	call   0x4642d12c
  404013:	icebp  
  404014:	jo     0x40408e
  404016:	clc    
  404017:	test   eax,0x75a6b0e0
  40401c:	push   ecx
  40401d:	std    
  40401e:	pop    ss
  40401f:	fstp   st(2)
  404021:	(bad)  
  404022:	jge    0x404032
  404024:	mov    ah,0x8c
  404026:	fs jne 0x404020
  404029:	jns    0x40403f
  40402b:	xchg   ebp,eax
  40402c:	bound  edi,QWORD PTR [edi-0x286e919c]
  404032:	add    BYTE PTR [edx+0x39],ch
  404035:	adc    BYTE PTR [ebp+0x16],dl
  404038:	sub    ebx,DWORD PTR [eax]
  40403a:	push   edi
  40403b:	arpl   di,sp
  40403d:	adc    al,BYTE PTR [ebx]
  40403f:	icebp  
  404040:	ret    0xaf55
  404043:	push   0x2c
  404045:	js     0x40409a
  404047:	test   esp,esi
  404049:	and    eax,0x14b29fc9
  40404e:	mov    edi,DWORD PTR [edx-0x5295b3c7]
  404054:	retf   
  404055:	dec    esi
  404056:	aaa    
  404057:	jne    0x4040b8
  404059:	out    dx,al
  40405a:	adc    ecx,DWORD PTR [edx+ebx*8-0x15f2039f]
  404061:	cld    
  404062:	or     ebx,esi
  404064:	(bad)  
  404065:	ds mov edi,0x4d8902fa
  40406b:	cwde   
  40406c:	ficom  DWORD PTR [ebx+ebp*4]
  40406f:	ins    DWORD PTR es:[edi],dx
  404070:	enter  0x4103,0xb
  404074:	mov    ?,WORD PTR [eax]
  404076:	mov    BYTE PTR [edx*8-0x4e89d0bb],dl
  40407d:	das    
  40407e:	cmp    BYTE PTR ds:0x1d2d3a02,bh
  404084:	adc    DWORD PTR [ecx],ebx
  404086:	test   BYTE PTR [ebx+0x0],0xcf
  40408a:	sbb    esp,edx
  40408c:	test   al,0x31
  40408e:	xor    ebp,0x214945b5
  404094:	inc    esi
  404095:	(bad)  
  404096:	std    
  404097:	and    esi,ecx
  404099:	sbb    DWORD PTR [edi+0x17],0x92da5ad
  4040a0:	pusha  
  4040a1:	outs   dx,BYTE PTR ds:[esi]
  4040a2:	jno    0x404035
  4040a4:	idiv   BYTE PTR [esi]
  4040a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040a7:	and    al,0x75
  4040a9:	ja     0x4040f2
  4040ab:	jo     0x404099
  4040ad:	add    BYTE PTR [ebx],al
  4040af:	add    BYTE PTR [esi],bh
  4040b1:	and    cl,bl
  4040b3:	(bad)  
  4040b4:	ficom  DWORD PTR [ebp+0xa]
  4040b7:	mov    edi,0x9a5906f6
  4040bc:	sub    al,0xc7
  4040be:	retf   
  4040bf:	(bad)  
  4040c0:	int    0xa2
  4040c2:	sbb    ebx,ecx
  4040c4:	pop    ds
  4040c5:	xchg   ebp,eax
  4040c6:	or     al,0x21
  4040c8:	mov    dl,0x6e
  4040ca:	mov    edx,0x6e2cf729
  4040cf:	mov    bh,0xd1
  4040d1:	inc    esp
  4040d2:	clc    
  4040d3:	mov    esi,ebx
  4040d5:	cdq    
  4040d6:	gs das 
  4040d8:	sbb    eax,0x975300a9
  4040dd:	add    ah,al
  4040df:	dec    esp
  4040e0:	inc    ebx
  4040e1:	or     DWORD PTR [edx+0x2eadadd4],esp
  4040e7:	cli    
  4040e8:	jg     0x404135
  4040ea:	and    BYTE PTR [esi+0x54],cl
  4040ed:	mov    BYTE PTR [eax+0x7a8bae52],dl
  4040f3:	mov    ch,0xd3
  4040f5:	xor    eax,0xaee35271
  4040fa:	pop    DWORD PTR [ebx-0x6f8d1eeb]
  404100:	add    ch,BYTE PTR [esi-0x54903235]
  404106:	cmp    edx,DWORD PTR [ecx]
  404108:	dec    edi
  404109:	mov    ds:0x8ddbf664,al
  40410e:	xor    DWORD PTR [ecx-0x2b],0xa7a2d14d
  404115:	lea    edi,[esi+0x641b3757]
  40411b:	(bad)  
  40411c:	push   0x806ba6b
  404121:	mov    bl,0x50
  404123:	xchg   esp,eax
  404124:	test   eax,0x9f452981
  404129:	sub    dl,BYTE PTR [ecx-0x755a49d0]
  40412f:	mov    edx,0xee38431f
  404134:	add    al,0xb
  404136:	mov    al,0x52
  404138:	pop    esp
  404139:	push   ecx
  40413a:	cmp    ah,BYTE PTR [ecx]
  40413c:	and    BYTE PTR [ebp+0x24],dl
  40413f:	(bad)  
  404140:	mov    ecx,0xed4912e3
  404145:	cdq    
  404146:	mov    ss,eax
  404148:	push   es
  404149:	or     BYTE PTR [edx+0x63],dh
  40414c:	addr16 inc esp
  40414e:	and    eax,0xd384032e
  404153:	and    al,0x23
  404155:	fcom   DWORD PTR [ebx]
  404157:	pop    ebx
  404158:	mov    edx,0xbea9358a
  40415d:	add    BYTE PTR [ebx+0x2f3957e9],0x32
  404164:	fmul   QWORD PTR [edi+0x7f]
  404167:	or     DWORD PTR [ebx+0x25425097],edx
  40416d:	out    dx,eax
  40416e:	les    ebp,FWORD PTR [esi-0x2c0a62d6]
  404174:	jo     0x40412a
  404176:	cs adc ch,bh
  404179:	cmp    ebx,ecx
  40417b:	mov    ebx,0x10c4c1b6
  404180:	adc    cl,BYTE PTR [eax]
  404182:	cmp    al,ch
  404184:	push   es
  404185:	mov    BYTE PTR [edx-0x3b],0x19
  404189:	icebp  
  40418a:	call   0xf5f9efae
  40418f:	xchg   esi,eax
  404190:	xor    BYTE PTR [ecx+0x337f4af8],0xea
  404197:	add    ebx,DWORD PTR [edi+edi*4-0x782de51e]
  40419e:	inc    esi
  40419f:	mov    dh,0x92
  4041a1:	pop    ebx
  4041a2:	mov    bh,0x7c
  4041a4:	(bad)  
  4041a5:	xlat   BYTE PTR ds:[ebx]
  4041a6:	mov    edi,0x9f32b89e
  4041ab:	sbb    dl,BYTE PTR [eax-0x72300be4]
  4041b1:	aaa    
  4041b2:	adc    eax,0xfd981489
  4041b7:	iret   
  4041b8:	or     ebx,DWORD PTR [ecx]
  4041ba:	das    
  4041bb:	xor    ch,BYTE PTR [esi+0x630ce14b]
  4041c1:	ficom  WORD PTR [ecx]
  4041c4:	cmp    al,0x53
  4041c6:	sub    BYTE PTR [ebp+0x42],dh
  4041c9:	shr    BYTE PTR [esi+0x4c4803ff],cl
  4041cf:	sbb    al,0x60
  4041d1:	dec    edi
  4041d2:	push   ss
  4041d3:	das    
  4041d4:	shr    BYTE PTR [ebx+0x1360fc09],0x6a
  4041db:	mov    ds:0xcf124e2,eax
  4041e0:	cld    
  4041e1:	test   ch,cl
  4041e3:	inc    ebx
  4041e4:	shl    edx,0xdd
  4041e7:	jo     0x40416b
  4041e9:	aas    
  4041ea:	or     dh,bh
  4041ec:	inc    BYTE PTR [esi-0x1f]
  4041ef:	push   0x7402a9c5
  4041f4:	mov    DWORD PTR [ebp-0x6a],ebx
  4041f7:	and    al,0x59
  4041f9:	cmc    
  4041fa:	leave  
  4041fb:	jp     0x4041c2
  4041fd:	push   ss
  4041fe:	pop    ebx
  4041ff:	pop    ebp
  404200:	mov    ch,0xa1
  404202:	outs   dx,BYTE PTR ds:[esi]
  404203:	sahf   
  404204:	mov    edx,0x6a10530c
  404209:	mov    bh,0xc2
  40420b:	mov    cl,0x58
  40420d:	iret   
  40420e:	stos   BYTE PTR es:[edi],al
  40420f:	out    dx,al
  404210:	shl    DWORD PTR [edi],1
  404212:	sbb    BYTE PTR [edi],cl
  404214:	mov    cs,WORD PTR [esi-0xe]
  404217:	mov    ah,0xfa
  404219:	add    eax,0x91267e4
  40421e:	iret   
  40421f:	popa   
  404220:	jge    0x40422d
  404222:	shr    DWORD PTR [ecx-0x60778074],1
  404228:	shr    DWORD PTR [ecx],0xe8
  40422b:	cld    
  40422c:	mov    edx,?
  40422e:	adc    ebp,ecx
  404230:	jae    0x40423e
  404232:	sbb    DWORD PTR [ecx+ebp*2-0x80],0xfd210b60
  40423a:	cmp    ah,BYTE PTR [ecx-0x59]
  40423d:	sub    DWORD PTR [ebx],edx
  40423f:	xor    eax,0xd919d7ac
  404244:	cmc    
  404245:	div    ebp
  404247:	fld    QWORD PTR [ebp+ebx*4-0x77]
  40424b:	retf   0x296
  40424e:	adc    bl,BYTE PTR [edx+ebx*8+0x54e8f90e]
  404255:	xchg   bh,ah
  404257:	jmp    0x4042b2
  404259:	daa    
  40425a:	xchg   esi,eax
  40425b:	stos   DWORD PTR es:[edi],eax
  40425c:	loopne 0x4042d4
  40425e:	push   ebp
  40425f:	xchg   DWORD PTR [esi],ebx
  404261:	sahf   
  404262:	cli    
  404263:	cmp    al,al
  404265:	add    eax,0x2e4cd9c2
  40426a:	jnp    0x4042a0
  40426c:	jmp    0xc0cf:0x2fde7bf6
  404273:	ror    DWORD PTR [esi],cl
  404275:	mov    ds:0x86c73bfa,eax
  40427a:	pop    ecx
  40427b:	andps  xmm4,xmm2
  40427e:	ds int 0x66
  404281:	stos   BYTE PTR es:[edi],al
  404282:	data16 and al,0x75
  404285:	mov    esi,0xc709fa65
  40428a:	jp     0x4042c9
  40428c:	test   dh,cl
  40428e:	rol    ecx,0xf4
  404291:	pop    bp
  404293:	mov    ?,WORD PTR [ecx+0x6f]
  404296:	pop    edx
  404297:	mul    BYTE PTR [esi+0x7e2d46d1]
  40429d:	mov    cl,dl
  40429f:	test   eax,0x42673203
  4042a4:	(bad)  
  4042a5:	in     eax,0x50
  4042a7:	sbb    BYTE PTR [eax],0xb7
  4042aa:	pop    es
  4042ab:	cld    
  4042ac:	or     eax,0xf787c09
  4042b1:	les    eax,FWORD PTR [edi+0x6a749cab]
  4042b7:	ins    BYTE PTR es:[edi],dx
  4042b8:	xor    ch,ah
  4042ba:	push   ecx
  4042bb:	adc    DWORD PTR [edx+0x2f666fc],ebx
  4042c1:	hlt    
  4042c2:	sbb    ebx,edi
  4042c4:	sbb    BYTE PTR [esp+edi*2+0x38378808],ah
  4042cb:	xor    eax,0x4d7d3bb7
  4042d0:	jnp    0x4042b3
  4042d2:	clc    
  4042d3:	cmp    BYTE PTR [eax+0x501a58a3],al
  4042d9:	inc    ebp
  4042da:	xor    BYTE PTR ds:0x8c97ecfd,dh
  4042e0:	mov    edx,0xd66250de
  4042e5:	jmp    0x4ed5:0xe093005e
  4042ec:	test   BYTE PTR [eax+0x1a],ch
  4042ef:	jmp    0x404356
  4042f1:	ss repz sti 
  4042f4:	mov    dl,0x9b
  4042f6:	push   ecx
  4042f7:	add    eax,0x8277a0d3
  4042fc:	loop   0x404284
  4042fe:	xchg   ecx,eax
  4042ff:	sahf   
  404300:	das    
  404301:	out    dx,eax
  404302:	and    dl,0x17
  404305:	cld    
  404306:	aaa    
  404307:	rol    DWORD PTR [ebx-0x61ad7f05],cl
  40430d:	imul   eax,ecx,0x7
  404310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404311:	mov    BYTE PTR [ecx],cl
  404313:	mov    eax,0x54d5b64d
  404318:	push   esp
  404319:	push   edx
  40431a:	dec    esi
  40431b:	or     BYTE PTR [edi+ecx*2+0x59],dl
  40431f:	xlat   BYTE PTR ds:[bx]
  404321:	push   eax
  404322:	or     bl,BYTE PTR [edi-0x77794f3b]
  404328:	mov    ebp,0x8a61f25e
  40432d:	aaa    
  40432e:	in     eax,0xcb
  404330:	inc    ecx
  404331:	out    0xbf,al
  404333:	call   0x51e5:0xcd55a3b
  40433a:	leave  
  40433b:	push   0xf942d6d5
  404340:	leave  
  404341:	lods   eax,DWORD PTR ds:[esi]
  404342:	cli    
  404343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404344:	mov    esi,0x7a4d24cb
  404349:	popa   
  40434a:	in     eax,dx
  40434b:	pop    edi
  40434c:	ins    BYTE PTR es:[edi],dx
  40434d:	out    0x4d,al
  40434f:	mov    eax,0x22fee28
  404354:	push   0x4b928747
  404359:	sub    al,0xe
  40435b:	(bad)  
  40435c:	ds inc esi
  40435e:	or     eax,0x2cb7c64b
  404363:	pushf  
  404364:	outs   dx,DWORD PTR ds:[esi]
  404365:	iret   
  404366:	ins    DWORD PTR es:[edi],dx
  404367:	iret   
  404368:	inc    ebp
  404369:	bound  edi,QWORD PTR [edx]
  40436b:	mov    edx,0xb3a1e84b
  404370:	mov    cl,0x91
  404372:	retf   0xfffb
  404375:	xor    al,BYTE PTR [ebx]
  404377:	and    al,0x89
  404379:	hlt    
  40437a:	xor    esp,DWORD PTR [edx+ebp*2+0x34]
  40437e:	xchg   ebp,eax
  40437f:	sahf   
  404380:	push   edi
  404381:	cld    
  404382:	fsubr  QWORD PTR [edx+0x25]
  404385:	mov    edi,0x1aaa3b47
  40438a:	ds and al,0xc9
  40438d:	loop   0x404357
  40438f:	cs add eax,0x2435db44
  404395:	(bad)  
  404396:	in     eax,0x11
  404398:	mov    BYTE PTR [eax-0x60],bl
  40439b:	xor    ecx,ecx
  40439d:	jg     0x4043bc
  40439f:	or     esp,DWORD PTR [ebp+esi*4+0xa539c15]
  4043a6:	inc    BYTE PTR [ecx+0x27]
  4043a9:	scas   al,BYTE PTR es:[edi]
  4043aa:	sub    DWORD PTR [eax+0x41],0x9acfc4c
  4043b1:	mov    ds:0x7759a50e,al
  4043b6:	jecxz  0x4043f7
  4043b8:	xor    BYTE PTR [ebp+0x72762caa],ah
  4043be:	retf   
  4043bf:	stos   BYTE PTR es:[edi],al
  4043c0:	je     0x404418
  4043c2:	push   cs
  4043c3:	inc    edi
  4043c4:	sbb    DWORD PTR [esp+edx*4-0x283a2475],0xffffffcb
  4043cc:	dec    edx
  4043cd:	iret   
  4043ce:	sbb    BYTE PTR [ebp+0x4ba06faa],dh
  4043d4:	cmp    al,0x64
  4043d6:	mov    edi,0x87e7912b
  4043db:	cmp    esp,DWORD PTR [ebp+0x414d9665]
  4043e1:	push   esi
  4043e2:	dec    esp
  4043e3:	mov    ecx,0xc5e95b5f
  4043e8:	xor    al,0xfc
  4043ea:	cwde   
  4043eb:	push   edx
  4043ec:	push   edi
  4043ed:	mov    dl,0x44
  4043ef:	jbe    0x404452
  4043f1:	cdq    
  4043f2:	lea    edx,[esi+0x41]
  4043f5:	imul   esi
  4043f7:	pop    esi
  4043f8:	push   0x9da13b53
  4043fd:	xor    eax,DWORD PTR [ebx]
  4043ff:	push   ds
  404400:	mov    bh,0x16
  404402:	add    edi,edx
  404404:	pop    ss
  404405:	xor    al,0x19
  404407:	retf   
  404408:	nop
  404409:	pop    ss
  40440a:	loop   0x404473
  40440c:	adc    DWORD PTR [ecx],edi
  40440e:	scas   al,BYTE PTR es:[edi]
  40440f:	pop    esp
  404410:	jne    0x4043cf
  404412:	cmp    DWORD PTR [eax],0xffffff9a
  404415:	mov    esi,0xd3539676
  40441a:	jmp    0x1dc2:0x655d659a
  404421:	push   ebp
  404422:	addr16 lock dec ecx
  404425:	jne    0x404484
  404427:	clc    
  404428:	cmp    cl,cl
  40442a:	not    BYTE PTR [ebx+0x3a838a29]
  404430:	icebp  
  404431:	leave  
  404432:	sub    eax,DWORD PTR [ebx-0x7e]
  404435:	jae    0x4043c0
  404437:	xchg   DWORD PTR [ebp-0x37],esp
  40443a:	daa    
  40443b:	jmp    0xb8f3:0xf0e477a8
  404442:	sub    edi,eax
  404444:	(bad)  
  404445:	sar    BYTE PTR [esp+edi*8],cl
  404448:	popa   
  404449:	or     edx,DWORD PTR [ecx+0x8616750]
  40444f:	repnz stc 
  404451:	or     al,0x5a
  404453:	iret   
  404454:	sub    eax,0x86d81b49
  404459:	push   eax
  40445a:	push   0x2f54cfa4
  40445f:	add    eax,0x5b91ea58
  404464:	pop    es
  404465:	cs push esi
  404467:	pusha  
  404468:	xor    eax,0x43676d1e
  40446d:	lock loope 0x40444b
  404470:	add    eax,0xcac7819b
  404475:	repz into 
  404477:	add    cl,cl
  404479:	jo     0x4044ca
  40447b:	push   edi
  40447c:	jg     0x404411
  40447e:	xor    ah,0xf5
  404481:	pop    ebx
  404482:	mov    ds:0x254b69b3,eax
  404487:	cmp    al,al
  404489:	or     esp,ebp
  40448b:	xchg   edi,eax
  40448c:	fbstp  TBYTE PTR [edi]
  40448e:	les    eax,FWORD PTR [ecx+ebx*2-0x531e5095]
  404495:	and    eax,0x95d8e8bd
  40449a:	sar    ah,0x33
  40449d:	test   al,0x6c
  40449f:	xor    ah,BYTE PTR [ecx+0x37]
  4044a2:	xchg   edi,eax
  4044a3:	lea    ebx,[ebx+0x73d546b4]
  4044a9:	push   eax
  4044aa:	and    eax,0xaa4e91a7
  4044af:	and    DWORD PTR [ecx],edi
  4044b1:	pop    ds
  4044b2:	inc    edi
  4044b3:	ins    BYTE PTR es:[edi],dx
  4044b4:	ss retf 
  4044b6:	add    bl,BYTE PTR gs:[ebx-0x7c29cfd1]
  4044bd:	push   es
  4044be:	push   ds
  4044bf:	xchg   ebx,eax
  4044c0:	pop    esi
  4044c1:	dec    ebp
  4044c2:	(bad)  
  4044c3:	jecxz  0x4044f6
  4044c5:	pop    edi
  4044c6:	mov    dh,0x82
  4044c8:	ss out 0x5b,al
  4044cb:	or     DWORD PTR [ebp+eax*4+0xff3fd2b],edx
  4044d2:	push   es
  4044d3:	sahf   
  4044d4:	pop    edi
  4044d5:	in     eax,dx
  4044d6:	or     al,0x28
  4044d8:	in     eax,dx
  4044d9:	jle    0x404474
  4044db:	mov    dh,0xd6
  4044dd:	mov    edx,0xf0e76a1a
  4044e2:	(bad)  
  4044e3:	into   
  4044e4:	dec    ebp
  4044e5:	popa   
  4044e6:	out    0x96,eax
  4044e8:	pop    ebp
  4044e9:	sbb    bh,cl
  4044eb:	out    0xbe,eax
  4044ed:	lods   al,BYTE PTR ds:[esi]
  4044ee:	sub    BYTE PTR [ebp-0x50fb512c],cl
  4044f4:	das    
  4044f5:	xchg   ebp,esp
  4044f7:	xchg   ebx,eax
  4044f8:	inc    ebx
  4044f9:	dec    ebx
  4044fa:	push   0xa100ead3
  4044ff:	sub    al,0xae
  404501:	inc    ecx
  404502:	lods   al,BYTE PTR ds:[esi]
  404503:	loopne 0x40452c
  404505:	stos   BYTE PTR es:[edi],al
  404506:	lds    esp,FWORD PTR [ecx+edx*2+0x20]
  40450a:	mov    WORD PTR [esi+0x18e273da],ss
  404510:	out    dx,eax
  404511:	int3   
  404512:	mov    al,ds:0x4755a554
  404518:	out    0xba,eax
  40451a:	dec    edx
  40451b:	out    dx,al
  40451c:	(bad)  [ebx-0x2d866706]
  404522:	rcl    BYTE PTR [ebp+0x74],1
  404525:	sub    DWORD PTR [ebp-0x10],ebx
  404528:	inc    ebp
  404529:	jecxz  0x4044e3
  40452b:	and    al,0x5c
  40452d:	mov    ebp,0xca01be07
  404532:	aas    
  404533:	call   0x1271324a
  404538:	xor    eax,0x494445ef
  40453d:	jle    0x4044cc
  40453f:	sub    DWORD PTR [eax+0x3bb5bb64],ebx
  404545:	fucomip st,st(6)
  404547:	fs add edx,eax
  40454a:	test   eax,0x22681ebc
  40454f:	mov    es,WORD PTR [ebx+0x64]
  404552:	div    DWORD PTR [edx+edx*8]
  404555:	inc    esi
  404556:	rol    DWORD PTR [edx+0x31],1
  404559:	push   0xffffff9c
  40455b:	js     0x404549
  40455d:	sub    BYTE PTR [edx+0x3b],dh
  404560:	das    
  404561:	push   esp
  404562:	mov    eax,0x5d77aad2
  404567:	dec    esi
  404568:	repz rcr DWORD PTR [edx-0x62],1
  40456c:	mov    bl,0xd6
  40456e:	aam    0x8
  404570:	shl    BYTE PTR [eax+0x4f],1
  404573:	popf   
  404574:	mov    ebx,0xf86affe0
  404579:	xchg   ebx,eax
  40457a:	or     ch,BYTE PTR [ecx-0x1467449a]
  404580:	or     DWORD PTR [ebp+0x35],eax
  404583:	sbb    eax,0x43bfd136
  404588:	mov    WORD PTR es:[ecx],ss
  40458b:	test   eax,0x18707dd5
  404590:	mov    ds:0xc82737d7,eax
  404595:	inc    eax
  404596:	outs   dx,DWORD PTR ds:[esi]
  404597:	cs loop 0x40453b
  40459a:	mov    eax,0x59ecc1aa
  40459f:	cmp    DWORD PTR [ebx+0x29531441],0xffffff8e
  4045a6:	inc    cl
  4045a8:	int    0xf
  4045aa:	sbb    ch,BYTE PTR [edi-0x11]
  4045ad:	(bad)  
  4045ae:	(bad)  
  4045af:	pop    ebx
  4045b0:	clc    
  4045b1:	or     esi,DWORD PTR [esi]
  4045b3:	jmp    0x7d870b7a
  4045b8:	jmp    FWORD PTR [eax+0x7d]
  4045bb:	fist   WORD PTR [edx+0x3fd590b4]
  4045c1:	jnp    0x40455d
  4045c3:	outs   dx,DWORD PTR ds:[esi]
  4045c4:	(bad)  
  4045c6:	xchg   ebx,eax
  4045c8:	pop    esp
  4045c9:	mov    bl,0x4e
  4045cb:	loope  0x404591
  4045cd:	loopne 0x404604
  4045cf:	xchg   ebp,eax
  4045d0:	fcom   QWORD PTR [ebx-0x30633a28]
  4045d6:	mov    ch,0xab
  4045d8:	sub    edx,DWORD PTR [esi-0x1e4c3a32]
  4045de:	(bad)  
  4045df:	push   eax
  4045e0:	call   0xf66a:0x3f0e70d7
  4045e7:	mov    esi,0xee5739cd
  4045ec:	aad    0xe8
  4045ee:	jb     0x404605
  4045f0:	out    dx,eax
  4045f1:	xor    eax,0x66a78ef2
  4045f6:	ret    0x34eb
  4045f9:	retf   0x478a
  4045fc:	enter  0xcaf9,0x96
  404600:	rol    ch,1
  404602:	loope  0x4045b5
  404604:	lds    eax,FWORD PTR [ebx+ecx*8+0x476ee33]
  40460b:	mov    ecx,0x64b6284c
  404610:	and    DWORD PTR [edi],0xe
  404613:	jo     0x404617
  404615:	inc    ecx
  404616:	pop    esp
  404617:	pusha  
  404618:	pop    ss
  404619:	das    
  40461a:	fdivr  st(5),st
  40461c:	lods   al,BYTE PTR ds:[esi]
  40461d:	call   0xc7336520
  404622:	xor    al,0x85
  404624:	fmul   DWORD PTR [ebx-0x28]
  404627:	in     al,dx
  404628:	pop    ecx
  404629:	dec    eax
  40462a:	sbb    dh,BYTE PTR [edx+0x7f]
  40462d:	adc    al,0x6d
  40462f:	aaa    
  404630:	push   0x10
  404632:	cmp    al,0x7a
  404634:	out    0xfd,eax
  404636:	rcr    DWORD PTR [ebp+0x246b0e2e],0xc5
  40463d:	sbb    eax,0xe6e05609
  404642:	pop    esp
  404643:	(bad)  
  404644:	stc    
  404645:	and    DWORD PTR [ebx+0x1ecf54a5],esp
  40464b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40464c:	lods   al,BYTE PTR ds:[esi]
  40464d:	push   ebp
  40464e:	or     al,0xee
  404650:	stos   BYTE PTR es:[edi],al
  404651:	xchg   ebx,eax
  404652:	stc    
  404653:	cmp    al,0x9
  404655:	jmp    0xa24c:0xe8222338
  40465c:	fwait
  40465d:	ins    BYTE PTR es:[edi],dx
  40465e:	adc    al,0x59
  404660:	fidiv  DWORD PTR [ecx-0x1b9ad1ae]
  404666:	loope  0x404672
  404668:	mov    edx,0x2f6c6802
  40466d:	push   0x5d
  40466f:	and    esp,DWORD PTR [esi]
  404671:	dec    edi
  404672:	inc    edx
  404673:	mov    al,ds:0x2e548aeb
  404678:	xor    cl,BYTE PTR [esi+ecx*2]
  40467b:	(bad)  
  40467c:	xor    al,0x8c
  40467e:	mov    ah,0x79
  404680:	xchg   ebp,eax
  404681:	push   0x34
  404683:	mov    ?,WORD PTR [ebx]
  404685:	pop    ebp
  404686:	mov    ah,0x5c
  404688:	mov    ds:0xb3c22ea1,eax
  40468d:	adc    DWORD PTR [ebx],0x12e2db39
  404693:	mov    bl,0x92
  404695:	popf   
  404696:	ds data16 cmc 
  404699:	out    dx,eax
  40469a:	mov    ebp,0x9fb56d01
  40469f:	sbb    eax,0x7faa87a1
  4046a4:	je     0x40466c
  4046a6:	repnz (bad) 
  4046a8:	jae    0x404633
  4046aa:	adc    eax,0xdb79bebc
  4046af:	call   0x83081b7e
  4046b4:	mov    esp,0x930dc96b
  4046b9:	adc    DWORD PTR [ecx+0x5dc2bc2],0xe9792802
  4046c3:	mov    ah,0x75
  4046c5:	vpmacsswd xmm2,xmm2,XMMWORD PTR [esi-0x73d731bf],xmm1
  4046cf:	(bad)  
  4046d0:	jge    0x404675
  4046d2:	inc    ebp
  4046d3:	dec    ebp
  4046d4:	int    0xa7
  4046d6:	(bad)  
  4046d7:	jg     0x43f037b8
  4046dd:	fidivr DWORD PTR [ebx+ebp*1+0x7a]
  4046e1:	(bad)  
  4046e2:	int    0x61
  4046e4:	pop    edx
  4046e5:	pop    edx
  4046e6:	das    
  4046e7:	push   ebx
  4046e8:	lods   eax,DWORD PTR ds:[esi]
  4046e9:	wrmsr  
  4046eb:	sbb    BYTE PTR [edx],dh
  4046ed:	lahf   
  4046ee:	arpl   WORD PTR [ebx-0x25],si
  4046f1:	xchg   edi,eax
  4046f2:	adc    esi,esi
  4046f4:	push   eax
  4046f5:	sbb    ch,BYTE PTR [ecx+0xd]
  4046f8:	pop    es
  4046f9:	sbb    bh,al
  4046fb:	push   0x15
  4046fd:	adc    eax,0x7def089e
  404702:	leave  
  404703:	pushf  
  404704:	scas   eax,DWORD PTR es:[edi]
  404705:	aas    
  404706:	push   eax
  404707:	(bad)  
  404708:	mov    bl,0x4c
  40470a:	xchg   ebx,eax
  40470b:	add    ch,BYTE PTR [edx-0x75]
  40470e:	xor    eax,0x21d7a4f
  404713:	cwde   
  404714:	into   
  404715:	adc    bl,BYTE PTR [edx]
  404717:	aam    0x1f
  404719:	and    DWORD PTR [edx+0x1722dd60],ecx
  40471f:	sub    eax,0xd12744d3
  404724:	dec    eax
  404725:	je     0x404721
  404727:	dec    ebp
  404728:	or     al,0xa7
  40472a:	jbe    0x4046bb
  40472c:	pop    ecx
  40472d:	and    eax,0x98e14b44
  404732:	inc    esp
  404733:	push   ds
  404734:	mov    eax,ds:0xefb2f1a7
  404739:	scas   al,BYTE PTR es:[edi]
  40473a:	lods   al,BYTE PTR ds:[esi]
  40473b:	aaa    
  40473c:	push   edx
  40473d:	pop    es
  40473e:	in     eax,0xca
  404740:	adc    ch,BYTE PTR [esi]
  404742:	clc    
  404743:	cdq    
  404744:	xchg   esp,eax
  404745:	dec    esi
  404746:	mov    esp,0xc8dcdd8b
  40474b:	popf   
  40474c:	call   0xc2facdf9
  404751:	arpl   WORD PTR [esi+0xc0d8fd9],dx
  404757:	jge    0x4046e4
  404759:	or     bh,al
  40475b:	rol    DWORD PTR [eax],1
  40475d:	test   eax,0x2be88ce1
  404762:	push   ecx
  404763:	xlat   BYTE PTR ds:[ebx]
  404764:	dec    ecx
  404765:	push   es
  404766:	fcmovnu st,st(3)
  404768:	dec    ebp
  404769:	bound  esi,QWORD PTR [eax+0x60bf7697]
  40476f:	cmc    
  404770:	cmp    al,0xae
  404772:	addr16 (bad) 
  404774:	lahf   
  404775:	xchg   ebp,eax
  404776:	out    0x87,eax
  404778:	sub    BYTE PTR [eax+eax*1-0x7aee0ab1],ch
  40477f:	aam    0xe4
  404781:	aam    0xff
  404783:	sbb    eax,0xbdef8ab5
  404788:	jp     0x404755
  40478a:	pop    edx
  40478b:	lock sbb eax,0x548e3a14
  404791:	mov    ds,WORD PTR gs:[ebx]
  404794:	in     eax,0x7b
  404796:	push   ss
  404797:	std    
  404798:	test   DWORD PTR [edi+edi*1],ebx
  40479b:	jbe    0x4047d8
  40479d:	adc    eax,0x150b1101
  4047a2:	daa    
  4047a3:	(bad)  
  4047a4:	sub    dh,BYTE PTR [ecx-0xa]
  4047a7:	sub    dl,BYTE PTR [ebx+edx*2-0x34cbbe3f]
  4047ae:	sub    ebx,edx
  4047b0:	cdq    
  4047b1:	xchg   esp,eax
  4047b2:	(bad)  
  4047b4:	xchg   edi,eax
  4047b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047b6:	cli    
  4047b7:	syscall 
  4047b9:	xchg   edx,eax
  4047ba:	mov    edx,0xa7407a49
  4047bf:	fild   WORD PTR [ecx-0x75001658]
  4047c5:	and    al,0xeb
  4047c7:	mov    edi,?
  4047c9:	mov    ah,0x53
  4047cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047cc:	in     al,dx
  4047cd:	add    bl,0xd8
  4047d0:	push   ss
  4047d1:	mov    al,0xef
  4047d3:	test   DWORD PTR [ebx+ebx*4],eax
  4047d6:	fdivr  DWORD PTR [edi-0x63]
  4047d9:	pusha  
  4047da:	nop
  4047db:	pop    edi
  4047dc:	mov    edi,0xa5b91f4a
  4047e1:	cmp    al,0x17
  4047e3:	je     0x404804
  4047e5:	fwait
  4047e6:	inc    esi
  4047e7:	ja     0x404838
  4047e9:	gs pop ss
  4047eb:	out    0x1a,eax
  4047ed:	out    dx,al
  4047ee:	(bad)  
  4047ef:	mov    BYTE PTR [edi-0x3d8a96bf],al
  4047f5:	push   ecx
  4047f6:	fidivr WORD PTR [edx-0x6f8cae57]
  4047fc:	mov    ds:0x46eb7fff,al
  404801:	pop    edi
  404802:	xor    esp,ebp
  404804:	dec    edi
  404805:	(bad)  
  404806:	scas   eax,DWORD PTR es:[edi]
  404807:	mov    eax,0x7f6db807
  40480c:	cmc    
  40480d:	and    eax,0x3f088643
  404812:	ds cdq 
  404814:	div    BYTE PTR [ecx-0x23aa5158]
  40481a:	sub    eax,0xd77e20f7
  40481f:	cmp    bh,BYTE PTR ds:0x450ede75
  404825:	(bad)  
  404827:	psubsw mm7,QWORD PTR [edi+0xe]
  40482b:	cmp    ah,BYTE PTR [edi]
  40482d:	cs cli 
  40482f:	call   0xc206e538
  404834:	pushf  
  404835:	test   al,0x69
  404837:	mov    esi,0x3232536b
  40483c:	pop    edi
  40483d:	mov    ds:0xa67c8fd4,eax
  404842:	sub    al,0xb9
  404844:	aad    0x38
  404846:	ins    BYTE PTR es:[edi],dx
  404847:	cld    
  404848:	jns    0x404878
  40484a:	jl     0x404850
  40484c:	sub    DWORD PTR [edi],esp
  40484e:	stos   DWORD PTR es:[edi],eax
  40484f:	stc    
  404850:	popa   
  404851:	rcl    DWORD PTR [ebx-0x1d],cl
  404854:	and    al,0x4d
  404856:	addr16 xchg edi,eax
  404858:	add    BYTE PTR [ebx+ebp*2],bh
  40485b:	loope  0x4048a8
  40485d:	in     al,dx
  40485e:	lock jmp 0x54c9924d
  404864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404865:	dec    ebp
  404866:	loope  0x40484f
  404868:	cld    
  404869:	les    ebp,FWORD PTR [ecx+0x5]
  40486c:	in     eax,dx
  40486d:	pop    eax
  40486e:	mov    al,0x54
  404870:	mov    ecx,DWORD PTR [edx+0x67799415]
  404876:	inc    ecx
  404877:	popa   
  404878:	and    DWORD PTR [edx+0x3c],esp
  40487b:	lahf   
  40487c:	cmp    eax,0xa444115
  404881:	mov    ebx,0x5f24318d
  404886:	jl     0x4048ae
  404888:	fcomi  st,st(2)
  40488a:	test   DWORD PTR [edx+edx*2],eax
  40488d:	sbb    al,0x66
  40488f:	cmp    ch,0x67
  404892:	shr    BYTE PTR [edi-0x1],1
  404895:	pop    edx
  404896:	adc    bl,BYTE PTR [esi-0x78a5407]
  40489c:	inc    edx
  40489d:	jae    0x40487c
  40489f:	mov    ebp,0x6aa93291
  4048a4:	test   al,0x73
  4048a6:	jge    0x404850
  4048a8:	xchg   esi,ebp
  4048aa:	retf   
  4048ab:	and    DWORD PTR [ecx+esi*4+0x5],ebx
  4048af:	in     eax,dx
  4048b0:	nop
  4048b1:	xchg   ecx,eax
  4048b2:	(bad)  
  4048b3:	or     esp,DWORD PTR [ebp-0x6494aca7]
  4048b9:	dec    edx
  4048ba:	xlat   BYTE PTR ds:[ebx]
  4048bb:	daa    
  4048bc:	sbb    BYTE PTR [eax],0x61
  4048bf:	into   
  4048c0:	outs   dx,DWORD PTR ds:[esi]
  4048c1:	push   esi
  4048c2:	mov    esi,0x31f9fedd
  4048c7:	rcr    esp,cl
  4048c9:	jne    0x4048aa
  4048cb:	(bad)  
  4048cd:	sbb    dl,BYTE PTR [eax]
  4048cf:	inc    edx
  4048d0:	push   cs
  4048d1:	mov    esi,0xead1533c
  4048d6:	adc    al,0x92
  4048d8:	rcl    ebx,cl
  4048da:	sbb    al,0x68
  4048dc:	scas   al,BYTE PTR es:[edi]
  4048dd:	aaa    
  4048de:	cmp    BYTE PTR [esi-0x4a],al
  4048e1:	pop    ecx
  4048e2:	test   eax,0x98f61180
  4048e7:	mov    edx,0x5ab70787
  4048ec:	mov    dh,0x4e
  4048ee:	mov    BYTE PTR [esi+0x7c],dl
  4048f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048f2:	mov    dl,0xb3
  4048f4:	mov    ds:0x8784c0f2,al
  4048f9:	(bad)  
  4048fa:	sbb    DWORD PTR [eax],ebx
  4048fc:	(bad)  
  4048fe:	inc    eax
  4048ff:	pop    edi
  404900:	dec    edx
  404901:	fs es ins BYTE PTR es:[edi],dx
  404904:	mov    esp,0xf6239bd8
  404909:	in     al,0x84
  40490b:	xchg   dh,ah
  40490d:	mov    esp,DWORD PTR [edi-0x5a]
  404910:	jp     0x404954
  404912:	pop    ss
  404913:	sub    al,0x5f
  404915:	test   eax,0xa24fd0ad
  40491a:	xchg   ebx,eax
  40491b:	or     eax,0xac06ace4
  404920:	dec    esp
  404921:	or     al,0x29
  404923:	push   ebx
  404924:	popa   
  404925:	ds aas 
  404927:	js     0x404933
  404929:	add    dh,BYTE PTR [ebp-0x2ed00247]
  40492f:	stc    
  404930:	dec    ebp
  404931:	aaa    
  404932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404933:	sub    eax,0x84e7491a
  404938:	(bad)  
  404939:	call   DWORD PTR [edx-0x4]
  40493c:	inc    edx
  40493d:	add    BYTE PTR [edx+0x61],cl
  404940:	fnstsw WORD PTR [ecx+0x2524a7e7]
  404946:	inc    edx
  404947:	push   edx
  404948:	in     eax,dx
  404949:	mov    BYTE PTR [ecx+0x77534969],cl
  40494f:	mov    eax,fs:0x2256760a
  404955:	pushf  
  404956:	jle    0x404986
  404958:	pop    edx
  404959:	mov    WORD PTR [ecx-0x1a3b0c80],cs
  40495f:	xchg   ebp,eax
  404960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404961:	mov    DWORD PTR [edx-0x124d10f9],0x543cd886
  40496b:	jl     0x4048f0
  40496d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40496e:	cmp    DWORD PTR [edi+0x7f],ebx
  404971:	mov    DWORD PTR [eax-0x6a],ecx
  404974:	mov    al,ds:0xbdf24028
  404979:	jo     0x404980
  40497b:	mov    bh,0x3
  40497d:	and    ch,BYTE PTR [edi+0x578a8ee2]
  404983:	adc    DWORD PTR [edi-0x76b4cd52],esp
  404989:	mov    ch,0xb2
  40498b:	xlat   BYTE PTR ds:[ebx]
  40498c:	pop    edx
  40498d:	or     ch,BYTE PTR [ebx+0x5b]
  404990:	leave  
  404991:	sti    
  404992:	outs   dx,DWORD PTR ds:[esi]
  404993:	test   DWORD PTR [ecx+0x20b9a86f],esi
  404999:	jg     0x404a0d
  40499b:	in     al,dx
  40499c:	xchg   esp,eax
  40499d:	push   eax
  40499e:	or     al,0xca
  4049a0:	or     bl,BYTE PTR [ecx]
  4049a2:	push   eax
  4049a3:	outs   dx,DWORD PTR ds:[esi]
  4049a4:	fs ret 0xafa
  4049a8:	adc    al,0x16
  4049aa:	in     al,0x3b
  4049ac:	cld    
  4049ad:	xchg   edx,eax
  4049ae:	xor    eax,DWORD PTR [edx]
  4049b0:	pop    edi
  4049b1:	fistp  QWORD PTR [eax]
  4049b3:	xchg   BYTE PTR [ebx-0x72081cec],cl
  4049b9:	or     ch,BYTE PTR [ebx+0x476d62d5]
  4049bf:	out    0xb9,al
  4049c1:	adc    al,0xb5
  4049c3:	in     al,0xb4
  4049c5:	xor    edx,DWORD PTR [edi+ebx*8]
  4049c8:	push   eax
  4049c9:	test   ebp,0xb9909fc0
  4049cf:	add    ebx,eax
  4049d1:	add    al,0xd
  4049d3:	xor    DWORD PTR [edi-0x4f82fb4],ebp
  4049d9:	sar    esp,cl
  4049db:	jle    0x404a07
  4049dd:	dec    edx
  4049de:	push   esp
  4049df:	fmul   QWORD PTR [ecx+0x39fffea7]
  4049e5:	(bad)  
  4049e7:	pop    edi
  4049e8:	scas   eax,DWORD PTR es:[edi]
  4049e9:	add    BYTE PTR [ebx],0x14
  4049ec:	mov    esi,ds
  4049ee:	sub    al,0xc2
  4049f0:	add    eax,esi
  4049f2:	mov    BYTE PTR [edx+0x6c6251ff],ch
  4049f8:	mov    ch,0x13
  4049fa:	mov    cl,0xd6
  4049fc:	pop    edi
  4049fd:	daa    
  4049fe:	or     eax,0x37e0b4e7
  404a03:	xor    DWORD PTR [edi+0x55],edx
  404a06:	or     BYTE PTR [ecx+ebp*8],al
  404a09:	mov    ds:0x64d43060,al
  404a0e:	cdq    
  404a0f:	sub    al,0x8b
  404a11:	mov    edi,DWORD PTR [edi+0x20]
  404a14:	mov    ebp,0x53af2a05
  404a19:	mov    dl,0x47
  404a1b:	dec    eax
  404a1c:	cmp    al,0x47
  404a1e:	scas   eax,DWORD PTR es:[edi]
  404a1f:	sbb    eax,0x181f6d70
  404a24:	push   edi
  404a25:	mov    al,0x5b
  404a27:	adc    BYTE PTR [ecx+edi*4+0x3444f682],ah
  404a2e:	icebp  
  404a2f:	mov    ebx,0x4a92d6c
  404a34:	sbb    ebx,DWORD PTR [eax-0x216bef4f]
  404a3a:	out    dx,al
  404a3b:	push   ss
  404a3c:	jo     0x404ab8
  404a3e:	push   eax
  404a3f:	push   0x3c
  404a41:	stos   DWORD PTR es:[edi],eax
  404a42:	and    ah,BYTE PTR [ebx+eiz*2-0x1a]
  404a46:	jl     0x404a84
  404a48:	mov    ?,WORD PTR [eax-0x76]
  404a4b:	(bad)  
  404a4c:	nop
  404a4d:	dec    ebx
  404a4e:	test   BYTE PTR [eax-0x70],0xd0
  404a52:	mov    eax,ds:0x1a3445b0
  404a57:	icebp  
  404a58:	push   ebx
  404a59:	jle    0x404ad1
  404a5b:	xchg   ecx,eax
  404a5c:	inc    esi
  404a5d:	xor    dh,BYTE PTR [esi-0x2d]
  404a60:	mov    eax,ds:0x3b894494
  404a65:	dec    ecx
  404a66:	mov    dl,0xc8
  404a68:	or     ecx,DWORD PTR [ebp+0x2dd4316e]
  404a6e:	lock test esp,ebx
  404a71:	adc    BYTE PTR [esp+eax*1-0x1],cl
  404a75:	je     0x404a4e
  404a77:	lock ins BYTE PTR es:[edi],dx
  404a79:	je     0x404a14
  404a7b:	ins    DWORD PTR es:[edi],dx
  404a7c:	(bad)  
  404a7d:	les    esi,FWORD PTR [esi]
  404a7f:	out    dx,al
  404a80:	les    edi,FWORD PTR [edx+0x24de3db2]
  404a86:	cmp    BYTE PTR [esi-0xcdd164e],bh
  404a8c:	in     al,0xf3
  404a8e:	adc    eax,0x995181c7
  404a93:	or     eax,0x4e035f17
  404a98:	mov    eax,ds:0x9d168eaa
  404a9d:	call   0x4d79:0x3630341
  404aa4:	mov    esp,0x4e8f6371
  404aa9:	loopne 0x404afc
  404aab:	jb     0x404aae
  404aad:	dec    ebp
  404aae:	inc    edx
  404aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ab0:	(bad)  
  404ab1:	outs   dx,BYTE PTR ds:[esi]
  404ab2:	and    dh,BYTE PTR [edi-0x19a33dab]
  404ab8:	mov    dh,0x34
  404aba:	pusha  
  404abb:	cmp    ebp,eax
  404abd:	enter  0xdfc9,0xd1
  404ac1:	inc    esi
  404ac2:	cs push eax
  404ac4:	mov    ds:0x69e7efbc,al
  404ac9:	cmc    
  404aca:	rcr    DWORD PTR [edx],0x83
  404acd:	xchg   edi,eax
  404ace:	out    0xa9,al
  404ad0:	(bad)  
  404ad1:	push   edi
  404ad2:	fsubr  DWORD PTR [esi-0x6a]
  404ad5:	cld    
  404ad6:	(bad)
  404ad9:	leave  
  404ada:	xor    BYTE PTR [edi+0x75],ch
  404add:	or     ah,ah
  404adf:	(bad)  
  404ae0:	jne    0x404b3e
  404ae2:	inc    edx
  404ae3:	ss mov cl,0x93
  404ae6:	xor    al,0x72
  404ae8:	dec    edi
  404ae9:	repz adc dl,BYTE PTR [edi]
  404aec:	mov    ebx,DWORD PTR [eax]
  404aee:	cmp    al,0x7f
  404af0:	jmp    0xe82cbc80
  404af5:	cli    
  404af6:	xchg   edi,eax
  404af7:	cmc    
  404af8:	fisttp QWORD PTR [ecx-0x4a14ba43]
  404afe:	into   
  404aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b00:	or     al,0xe
  404b02:	test   edi,ecx
  404b04:	xchg   BYTE PTR [ebp-0x80],dh
  404b07:	mov    ds:0x144f2cda,eax
  404b0c:	adc    ch,al
  404b0e:	adc    edx,DWORD PTR [ecx]
  404b10:	push   esp
  404b11:	fnstcw WORD PTR [edx]
  404b13:	std    
  404b14:	enter  0x2ee9,0x41
  404b18:	dec    ebp
  404b19:	xchg   edi,eax
  404b1a:	cld    
  404b1b:	ja     0x404ae8
  404b1d:	jmp    0xd33dbc
  404b22:	out    dx,eax
  404b23:	in     eax,0xde
  404b25:	idiv   BYTE PTR [edi-0x2b0ebf99]
  404b2b:	cmp    DWORD PTR [eax-0x10],esi
  404b2e:	inc    edx
  404b2f:	pop    es
  404b30:	scas   eax,DWORD PTR es:[edi]
  404b31:	xlat   BYTE PTR ds:[ebx]
  404b32:	mov    ds:0x83888013,al
  404b37:	mov    al,ds:0x7a8e294a
  404b3c:	imul   edx,DWORD PTR [ecx+0x22e983e7],0xffffffbc
  404b43:	dec    ebx
  404b44:	xor    ch,BYTE PTR [eax-0x65b7c676]
  404b4a:	mov    edi,0x3f0bfc5a
  404b4f:	or     DWORD PTR [esi-0x7caceb3f],ecx
  404b55:	not    BYTE PTR [edi+eiz*1-0x501bfdce]
  404b5c:	mov    dl,0x64
  404b5e:	enter  0x59b8,0x94
  404b62:	enter  0x56e6,0xf4
  404b66:	js     0x404b6e
  404b68:	mov    dl,dl
  404b6a:	lods   eax,DWORD PTR ds:[esi]
  404b6b:	fist   WORD PTR [edi]
  404b6d:	in     al,0xc8
  404b6f:	ja     0x404be4
  404b71:	mov    cl,0x95
  404b73:	mov    ebx,0x6dfe87a1
  404b78:	mov    eax,0xe7360cd7
  404b7d:	bsf    edi,ebx
  404b80:	xchg   edi,eax
  404b81:	pusha  
  404b82:	in     al,0xa8
  404b84:	imul   BYTE PTR [esi-0x2e]
  404b87:	aas    
  404b88:	bound  ebp,QWORD PTR [edi]
  404b8a:	xlat   BYTE PTR ds:[ebx]
  404b8b:	clc    
  404b8c:	jne    0x404b39
  404b8e:	es out 0x7f,al
  404b91:	mov    esi,ss
  404b93:	xlat   BYTE PTR ds:[ebx]
  404b94:	push   ss
  404b95:	and    bl,BYTE PTR [ebp+0x1df42618]
  404b9b:	inc    edi
  404b9c:	(bad)  
  404b9d:	adc    eax,0xf7845728
  404ba2:	aas    
  404ba3:	stos   DWORD PTR es:[edi],eax
  404ba4:	fstp   DWORD PTR [edx]
  404ba6:	inc    edi
  404ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ba8:	or     BYTE PTR [eax*4-0x1d98219b],dl
  404baf:	clc    
  404bb0:	int    0x1
  404bb2:	jmp    0xec76f3ef
  404bb7:	pushf  
  404bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bb9:	or     ebp,esi
  404bbb:	pop    eax
  404bbc:	jp     0x404bba
  404bbe:	sub    BYTE PTR [ecx-0x2b7237a7],ch
  404bc4:	and    edi,eax
  404bc6:	push   edx
  404bc7:	xchg   ebp,eax
  404bc8:	fadd   QWORD PTR [eax+eiz*4+0x3ac0790e]
  404bcf:	call   0xf22c40a2
  404bd4:	cs out 0xaf,eax
  404bd7:	cs and esi,ebp
  404bda:	mov    edx,0x2270993c
  404bdf:	push   eax
  404be0:	ins    DWORD PTR es:[edi],dx
  404be1:	lods   eax,DWORD PTR ds:[esi]
  404be2:	and    eax,0x93449e55
  404be7:	ins    BYTE PTR es:[edi],dx
  404be8:	rol    DWORD PTR ss:[ebx-0x1a6efebe],cl
  404bef:	fcmove st,st(5)
  404bf1:	loop   0x404c29
  404bf3:	ins    DWORD PTR es:[edi],dx
  404bf4:	inc    ebx
  404bf5:	clc    
  404bf6:	xchg   cl,ah
  404bf8:	std    
  404bf9:	pop    edi
  404bfa:	mov    BYTE PTR [ebx+0x44],bl
  404bfd:	add    eax,0xe038b6c2
  404c02:	jle    0x404bc7
  404c04:	sub    al,0x55
  404c06:	iret   
  404c07:	cmp    BYTE PTR [eax-0x1],bl
  404c0a:	outs   dx,BYTE PTR ds:[esi]
  404c0b:	bound  edx,QWORD PTR ds:0x5cd5bd65
  404c11:	or     cl,ch
  404c13:	push   ds
  404c14:	lds    esi,FWORD PTR [esi-0x1c45ffc6]
  404c1a:	aas    
  404c1b:	(bad)
  404c1f:	pop    edx
  404c20:	(bad)  
  404c21:	test   WORD PTR [ebx],di
  404c24:	mov    al,ds:0x7295521a
  404c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c2a:	mov    ebx,ebx
  404c2c:	push   ecx
  404c2d:	cmp    al,BYTE PTR [ecx+0x532d641c]
  404c33:	jo     0x404bdf
  404c35:	or     DWORD PTR ds:0xa5f15c59,edi
  404c3b:	aad    0x50
  404c3d:	push   edx
  404c3e:	in     al,dx
  404c3f:	jo     0x404c64
  404c41:	sbb    bl,ah
  404c43:	in     al,dx
  404c44:	xchg   ebp,eax
  404c45:	jb     0x404c9d
  404c47:	out    0x73,eax
  404c49:	add    ecx,ebp
  404c4b:	inc    ebp
  404c4c:	inc    edi
  404c4d:	div    BYTE PTR [eax]
  404c4f:	das    
  404c50:	les    ebp,FWORD PTR [edi+0x52]
  404c53:	ins    DWORD PTR es:[edi],dx
  404c54:	xchg   DWORD PTR [edi],ecx
  404c56:	pop    ebx
  404c57:	or     esp,DWORD PTR [ecx]
  404c59:	ja     0x404c1b
  404c5b:	js     0x404c67
  404c5d:	xchg   BYTE PTR [edx+ebx*4],ch
  404c60:	es jge 0x404caf
  404c63:	in     al,dx
  404c64:	sahf   
  404c65:	inc    ebx
  404c66:	sub    al,BYTE PTR [edx-0x3d301364]
  404c6c:	jecxz  0x404c5b
  404c6e:	and    eax,eax
  404c70:	pop    edi
  404c71:	out    dx,al
  404c72:	(bad)  
  404c73:	pop    esp
  404c74:	call   0x92ea2ea1
  404c79:	add    eax,DWORD PTR [edx+0x3d498e0]
  404c7f:	out    0x69,eax
  404c81:	jno    0x404ca7
  404c83:	mov    al,ds:0xe20d11b9
  404c88:	scas   al,BYTE PTR es:[edi]
  404c89:	in     al,dx
  404c8a:	xor    ecx,DWORD PTR [ebx-0x2d]
  404c8d:	and    eax,0x261e3916
  404c92:	adc    DWORD PTR [ebp-0x496c0e00],esp
  404c98:	jae    0x404cf7
  404c9a:	not    DWORD PTR [edx]
  404c9c:	xchg   esi,eax
  404c9d:	dec    ebp
  404c9e:	mov    al,BYTE PTR [eax+ebp*1]
  404ca1:	scas   eax,DWORD PTR es:[edi]
  404ca2:	and    dh,BYTE PTR [esi]
  404ca4:	ins    DWORD PTR es:[edi],dx
  404ca5:	jl     0x404c4d
  404ca7:	adc    edi,esp
  404ca9:	sbb    ebp,ebx
  404cab:	add    eax,0x75c822a2
  404cb0:	inc    esi
  404cb1:	(bad)  
  404cb2:	lods   eax,DWORD PTR ds:[esi]
  404cb3:	enter  0x49a,0x57
  404cb7:	rol    BYTE PTR [eax+0xb3d9415],0x24
  404cbe:	test   BYTE PTR [ebx-0x70],ah
  404cc1:	outs   dx,BYTE PTR ds:[esi]
  404cc2:	xor    dh,BYTE PTR [ebx-0x34893228]
  404cc8:	sahf   
  404cc9:	push   ecx
  404cca:	push   edx
  404ccb:	sub    esi,ecx
  404ccd:	cld    
  404cce:	adc    eax,0xd6ba2640
  404cd3:	repz and ebp,DWORD PTR [edi-0x41]
  404cd7:	cdq    
  404cd8:	adc    DWORD PTR [ebx],0x8a58be01
  404cde:	xchg   DWORD PTR [ebx+0x7e],ebp
  404ce1:	adc    eax,0x39ed39da
  404ce6:	dec    esp
  404ce7:	shl    DWORD PTR [ecx],0xec
  404cea:	imul   edi,eax,0x73
  404ced:	push   edi
  404cee:	add    al,0xe1
  404cf0:	neg    esp
  404cf2:	stos   BYTE PTR es:[edi],al
  404cf3:	fmul   DWORD PTR [eax+0xc8f5153]
  404cf9:	frstor [ebp+0x1a424fdf]
  404cff:	add    BYTE PTR [edi],ch
  404d01:	mov    edi,0x2473bc31
  404d06:	out    0xa2,al
  404d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d09:	xchg   BYTE PTR [ebx+0x6868881e],ah
  404d0f:	xchg   edx,eax
  404d10:	cmp    eax,0x32a10c47
  404d15:	xchg   BYTE PTR [edi+0x40b0d135],dh
  404d1b:	or     dh,ah
  404d1d:	fidivr DWORD PTR [esi]
  404d1f:	adc    al,0xb9
  404d21:	test   al,0x27
  404d23:	iret   
  404d24:	jge    0x404cbb
  404d26:	ret    
  404d27:	(bad)  
  404d28:	mov    edx,0x638851c5
  404d2d:	sbb    ah,ah
  404d2f:	loopne 0x404ce4
  404d31:	add    eax,0x50dcc020
  404d36:	mov    ebp,esi
  404d38:	in     al,dx
  404d39:	test   BYTE PTR [edi+esi*2],bl
  404d3c:	mov    ebx,0xd51fe665
  404d41:	call   0x5b18:0x760c8025
  404d48:	out    0xb0,eax
  404d4a:	xchg   ecx,eax
  404d4b:	ror    DWORD PTR [eax-0x16b67460],cl
  404d51:	leavew 
  404d53:	mov    bh,0xe5
  404d55:	aas    
  404d56:	stc    
  404d57:	popf   
  404d58:	stos   DWORD PTR es:[edi],eax
  404d59:	js     0x404d07
  404d5b:	mov    esi,0x6b79f0e3
  404d60:	outs   dx,DWORD PTR ds:[esi]
  404d61:	mov    cl,0xf
  404d63:	and    eax,0x5fb736e6
  404d68:	test   ah,0x62
  404d6b:	sbb    ch,BYTE PTR [ecx+ebp*8]
  404d6e:	out    0xd6,al
  404d70:	jmp    0x404d58
  404d72:	and    DWORD PTR [eax+eiz*1],0xffffffbd
  404d76:	xor    ch,BYTE PTR [edi-0x2f]
  404d79:	and    DWORD PTR [edi],ebp
  404d7b:	or     cl,BYTE PTR ds:0x1b5b6e3d
  404d81:	pop    eax
  404d82:	xor    eax,0x39cc7180
  404d87:	jmp    0x404d17
  404d89:	into   
  404d8a:	mov    esi,0x7d0b38f6
  404d8f:	out    dx,al
  404d90:	jnp    0x404d47
  404d92:	cdq    
  404d93:	and    eax,0xde31da5e
  404d98:	scas   al,BYTE PTR es:[edi]
  404d99:	jnp    0x404d8e
  404d9b:	fistp  QWORD PTR [edi+edi*2-0x361f80f]
  404da2:	push   ds
  404da3:	iret   
  404da4:	mov    esi,0xfe89c6f3
  404da9:	xchg   esp,eax
  404daa:	dec    ebx
  404dab:	push   ebp
  404dac:	pop    esp
  404dad:	(bad)  [edi+0x6e74a32b]
  404db3:	xor    cl,BYTE PTR [ecx+0x1c]
  404db6:	xchg   esi,eax
  404db7:	lea    edx,[ecx-0x5e980c8b]
  404dbd:	xchg   edx,eax
  404dbe:	lods   al,BYTE PTR ds:[esi]
  404dbf:	hlt    
  404dc0:	lods   eax,DWORD PTR ds:[esi]
  404dc1:	jmp    DWORD PTR ds:0x5ed8be37
  404dc7:	and    BYTE PTR ds:0x2a2c3420,0xb
  404dce:	cmp    al,0x67
  404dd0:	and    DWORD PTR [edx+0x7df9dcbd],ebp
  404dd6:	call   FWORD PTR [esi-0x78]
  404dd9:	les    edx,FWORD PTR [esi-0x56ba1800]
  404ddf:	js     0x404e08
  404de1:	push   ss
  404de2:	lea    ebx,ds:0xfdaf9e1a
  404de8:	imul   edi,DWORD PTR [ecx-0x2deabf65],0xffffff9f
  404def:	iret   
  404df0:	icebp  
  404df1:	(bad)  [edx+0x51376b01]
  404df7:	or     al,0xe7
  404df9:	stos   BYTE PTR es:[edi],al
  404dfa:	mov    bh,0x2a
  404dfc:	scas   al,BYTE PTR es:[edi]
  404dfd:	iret   
  404dfe:	sub    BYTE PTR [ebp-0x5d],cl
  404e01:	dec    esp
  404e02:	(bad)  [ecx+0x3249f13c]
  404e08:	inc    edx
  404e09:	adc    al,0xe7
  404e0b:	clc    
  404e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e0d:	add    esi,DWORD PTR [ecx+edx*2-0x26]
  404e11:	rcr    edi,1
  404e13:	pop    ds
  404e14:	cmp    eax,DWORD PTR [eax-0x5d]
  404e17:	mov    ah,0xf1
  404e19:	in     eax,0x57
  404e1b:	sti    
  404e1c:	pop    ebx
  404e1d:	jne    0x404e40
  404e1f:	into   
  404e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e21:	xor    eax,0x8e35f3fd
  404e27:	mov    gs,eax
  404e29:	mov    esp,0xca589a53
  404e2e:	js     0x404e04
  404e30:	call   esp
  404e32:	jnp    0x404e15
  404e34:	pop    ebx
  404e35:	push   es
  404e36:	push   edi
  404e37:	imul   edi,DWORD PTR [ecx],0x1e
  404e3a:	repnz test eax,0xcec2a36f
  404e40:	mov    ch,0xbe
  404e42:	lahf   
  404e43:	sbb    dh,BYTE PTR [esi+eiz*1]
  404e46:	out    0x27,eax
  404e48:	or     ebx,DWORD PTR [edi]
  404e4a:	mov    ch,0xd8
  404e4c:	push   esi
  404e4d:	xchg   BYTE PTR [ecx+0x3f],bl
  404e50:	in     eax,0x9
  404e52:	inc    ebx
  404e53:	inc    edi
  404e54:	jmp    0x404e44
  404e56:	lods   al,BYTE PTR ds:[esi]
  404e57:	jbe    0x404df7
  404e59:	add    eax,0x55432015
  404e5e:	push   ss
  404e5f:	dec    eax
  404e60:	fs jo  0x404e73
  404e63:	popf   
  404e64:	pop    ebp
  404e65:	pop    ss
  404e66:	cdq    
  404e67:	mov    ch,0x1d
  404e69:	cwde   
  404e6a:	iret   
  404e6b:	ror    DWORD PTR [ecx-0x2a864dcd],0xdc
  404e72:	arpl   WORD PTR [edi-0x430c3931],cx
  404e78:	adc    al,0xff
  404e7a:	data16 xor ch,dl
  404e7d:	in     eax,dx
  404e7e:	jmp    0x31e1616f
  404e83:	in     eax,dx
  404e84:	jnp    0x404e16
  404e86:	xor    esp,DWORD PTR [edi]
  404e88:	or     ecx,DWORD PTR [edi+0x7e]
  404e8b:	cmp    BYTE PTR [esi-0x2c],ch
  404e8e:	imul   ecx,DWORD PTR [edi-0x3],0x5b
  404e92:	push   edi
  404e93:	jmp    0x404e96
  404e95:	push   0x41
  404e97:	sub    al,0x5b
  404e99:	dec    ebx
  404e9a:	dec    esp
  404e9b:	sbb    esi,DWORD PTR [esi+0x56]
  404e9e:	xor    eax,0xe20d6811
  404ea3:	dec    esp
  404ea4:	push   ebp
  404ea5:	icebp  
  404ea6:	jbe    0x404eb1
  404ea8:	ins    BYTE PTR es:[edi],dx
  404ea9:	prefetch BYTE PTR [esi-0x7cc8b206]
  404eb0:	sahf   
  404eb1:	call   eax
  404eb3:	add    DWORD PTR [esi-0x7696ba8d],0x75
  404eba:	(bad)  
  404ebb:	ja     0x404e7f
  404ebd:	mov    bh,0xb0
  404ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ec0:	stc    
  404ec1:	mov    eax,ds:0x1810ea12
  404ec6:	mov    DWORD PTR [ecx-0x51],esp
  404ec9:	push   edi
  404eca:	or     dh,BYTE PTR [eax+0x19]
  404ecd:	add    ch,BYTE PTR [eax-0x726eaf85]
  404ed3:	stos   BYTE PTR es:[edi],al
  404ed4:	gs jne 0x404e6d
  404ed7:	mov    ds:0x990a9a92,al
  404edc:	mov    DWORD PTR [ebx],ebp
  404ede:	xlat   BYTE PTR ds:[ebx]
  404edf:	jns    0x404ed8
  404ee1:	xchg   esp,eax
  404ee2:	int3   
  404ee3:	push   esi
  404ee4:	lahf   
  404ee5:	sahf   
  404ee6:	cwde   
  404ee7:	xlat   BYTE PTR ds:[ebx]
  404ee8:	out    dx,al
  404ee9:	lea    esi,[eax+0x78]
  404eec:	cmc    
  404eed:	or     BYTE PTR [ecx+0x7f],0xdc
  404ef1:	lods   eax,DWORD PTR ds:[esi]
  404ef2:	mov    ah,0x5d
  404ef4:	cs fwait
  404ef6:	test   BYTE PTR [edi],ch
  404ef8:	int3   
  404ef9:	sbb    ch,BYTE PTR [eax-0x2b]
  404efc:	loope  0x404f41
  404efe:	mov    esp,0xcce830d5
  404f03:	arpl   bp,sp
  404f05:	unpckhps xmm3,XMMWORD PTR [ecx]
  404f08:	lahf   
  404f09:	int    0x70
  404f0b:	fwait
  404f0c:	rcr    BYTE PTR [ebp+0x4c],cl
  404f0f:	mov    ch,0xbb
  404f11:	std    
  404f12:	shr    BYTE PTR [ecx+eiz*8-0x5a],1
  404f16:	sbb    al,0x31
  404f18:	sub    al,0x89
  404f1a:	(bad)
  404f1d:	or     bh,BYTE PTR [ebp+0x2120cfd6]
  404f23:	lea    esp,[ecx+0x5ee6a07]
  404f29:	mov    ds:0x842d5a51,eax
  404f2e:	stos   BYTE PTR es:[edi],al
  404f2f:	add    BYTE PTR ds:0x36b4c0c8,bh
  404f35:	cmc    
  404f36:	or     al,0xee
  404f38:	aam    0xa0
  404f3a:	xor    al,0x76
  404f3c:	loop   0x404f3f
  404f3e:	fnsave [bp+di]
  404f41:	pop    ecx
  404f42:	sub    ah,BYTE PTR [ebx+0x3]
  404f45:	aas    
  404f46:	xor    al,0xf9
  404f48:	pop    eax
  404f49:	ja     0x404f1d
  404f4b:	scas   eax,DWORD PTR es:[edi]
  404f4c:	jg     0x404f61
  404f4e:	retf   
  404f4f:	sbb    DWORD PTR [ebx-0x594c9c19],edi
  404f55:	add    DWORD PTR [edx-0x32f1b36a],eax
  404f5b:	lds    eax,FWORD PTR [edi-0x3c]
  404f5e:	jbe    0x404efc
  404f60:	dec    ebx
  404f61:	pop    ss
  404f62:	in     eax,dx
  404f63:	xor    esp,ecx
  404f65:	popf   
  404f66:	es jns 0x404fba
  404f69:	jg     0x404fd0
  404f6b:	int3   
  404f6c:	scas   eax,DWORD PTR es:[edi]
  404f6d:	ja     0x404fb7
  404f6f:	daa    
  404f70:	dec    edi
  404f71:	mov    ch,0xae
  404f73:	mov    ?,ebp
  404f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f76:	stc    
  404f77:	sbb    ebp,DWORD PTR [ecx-0x4b7f4275]
  404f7d:	fwait
  404f7e:	test   BYTE PTR [ebx],bh
  404f80:	mov    eax,0x5d9359c8
  404f85:	loop   0x404fb5
  404f87:	mov    esi,0x8a79d163
  404f8c:	cmp    eax,0xa229ff8a
  404f91:	cmp    al,0x6a
  404f93:	cwde   
  404f94:	xor    esi,DWORD PTR [ecx-0x3]
  404f97:	inc    ecx
  404f98:	jl     0x405002
  404f9a:	rcl    BYTE PTR [esp+eax*4],0x46
  404f9e:	test   esi,0x1c43dd9e
  404fa4:	xchg   ebx,eax
  404fa5:	and    esi,DWORD PTR [edi+0x458ffcc]
  404fab:	cld    
  404fac:	jb     0x404f5b
  404fae:	jnp    0x404f69
  404fb0:	mov    ecx,ebx
  404fb2:	xor    cl,al
  404fb4:	shl    BYTE PTR [eax-0x7af56a2d],0x5a
  404fbb:	mov    dl,0x42
  404fbd:	sti    
  404fbe:	call   0x338866ce
  404fc3:	test   DWORD PTR [esi+edi*1-0x41],0x73c59b2c
  404fcb:	out    dx,al
  404fcc:	icebp  
  404fcd:	pop    ebx
  404fce:	mov    DWORD PTR ds:0x9a6724a3,eax
  404fd4:	mov    eax,0x76d4c691
  404fd9:	sbb    al,0x43
  404fdb:	adc    BYTE PTR [eax-0x5a],dl
  404fde:	pop    es
  404fdf:	adc    BYTE PTR ds:0x33772d30,dh
  404fe5:	pop    esp
  404fe6:	call   0x14b6:0xb1a9820a
  404fed:	jno    0x404fbf
  404fef:	xchg   DWORD PTR [edi+eax*4-0x1916b64a],esp
  404ff6:	(bad)  
  404ff7:	jge    0x404fda
  404ff9:	xchg   edx,eax
  404ffa:	aaa    
  404ffb:	es cmp al,0xe4
  404ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fff:	add    eax,esp
  405001:	ret    0x57f
  405004:	(bad)  
  405005:	out    dx,al
  405006:	out    0xc3,eax
  405008:	(bad)  
  405009:	call   0xff197f07
  40500e:	scas   al,BYTE PTR es:[edi]
  40500f:	adc    si,WORD PTR [edx]
  405012:	adc    eax,ecx
  405014:	cld    
  405015:	inc    edx
  405016:	arpl   dx,cx
  405018:	iret   
  405019:	sbb    al,0x4a
  40501b:	in     al,0x2d
  40501d:	rcl    DWORD PTR [esi-0x51],cl
  405020:	fs inc edx
  405022:	xchg   DWORD PTR [ecx+0x572737eb],edx
  405028:	dec    ebx
  405029:	mov    al,ds:0x101809a
  40502e:	call   0xdd103e83
  405033:	inc    ecx
  405034:	jmp    0xc83b:0x25d93b33
  40503b:	je     0x40528b
  405041:	add    DWORD PTR ds:0x42b018,0x42c008
  40504b:	push   DWORD PTR [ebp-0x14]
  40504e:	xor    DWORD PTR ds:0x42b00c,0x3dbe
  405058:	push   DWORD PTR [ebp+0x8]
  40505b:	call   0x40c78f
  405060:	sbb    ecx,0x6495
  405066:	mov    DWORD PTR [ebp-0x14],eax
  405069:	or     DWORD PTR ds:0x42901c,ebx
  40506f:	mov    eax,DWORD PTR [ebp-0x4]
  405072:	mov    ecx,DWORD PTR [ebp-0x14]
  405075:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40507f:	xor    eax,esi
  405081:	add    eax,edi
  405083:	mov    DWORD PTR ds:0x42b004,0x7edf
  40508d:	cmp    ecx,eax
  40508f:	mov    DWORD PTR ds:0x42d014,0x1e10
  405099:	je     0x40528b
  40509f:	mov    eax,DWORD PTR [ebp-0x14]
  4050a2:	mov    ecx,DWORD PTR ds:0x429010
  4050a8:	sbb    DWORD PTR ds:0x42c00c,ecx
  4050ae:	mov    eax,DWORD PTR [eax+0x18]
  4050b1:	mov    DWORD PTR [ebp-0x2c],eax
  4050b4:	add    ecx,ecx
  4050b6:	mov    eax,DWORD PTR [ebp-0x14]
  4050b9:	sbb    DWORD PTR ds:0x42c01c,0x4c1
  4050c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4050c6:	xor    DWORD PTR ds:0x42b000,0x3fa3
  4050d0:	add    ecx,DWORD PTR [eax+0x20]
  4050d3:	xor    eax,0x40df
  4050d8:	mov    DWORD PTR [ebp-0x34],ecx
  4050db:	or     ecx,eax
  4050dd:	mov    eax,DWORD PTR [ebp-0x14]
  4050e0:	xor    DWORD PTR ds:0x429008,ecx
  4050e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4050e9:	and    DWORD PTR ds:0x42a008,0x42d014
  4050f3:	add    ecx,DWORD PTR [eax+0x24]
  4050f6:	mov    DWORD PTR [ebp-0x3c],ecx
  4050f9:	movzx  eax,BYTE PTR ds:0x42c000
  405100:	sbb    DWORD PTR ds:0x429010,eax
  405106:	mov    eax,DWORD PTR [ebp-0x14]
  405109:	mov    DWORD PTR ds:0x42d004,0x14
  405113:	cmp    DWORD PTR ds:0x42d004,0x0
  40511a:	je     0x405176
  405120:	cmp    DWORD PTR ds:0x42d004,0x9
  405127:	jne    0x405142
  40512d:	push   0x42e0f9
  405132:	push   0x42e0c7
  405137:	push   0x400000
  40513c:	call   DWORD PTR ds:0x42e9c7
  405142:	cmp    DWORD PTR ds:0x42d004,0xa
  405149:	jne    0x40515c
  40514f:	mov    ecx,DWORD PTR ds:0x42d004
  405155:	dec    ecx
  405156:	mov    DWORD PTR ds:0x42d004,ecx
  40515c:	xor    ecx,ecx
  40515e:	or     ecx,DWORD PTR ds:0x42d004
  405164:	dec    ecx
  405165:	mov    DWORD PTR ds:0x42d004,ecx
  40516b:	jmp    0x405113
  405170:	inc    DWORD PTR ds:0x42b00c
  405176:	mov    ecx,DWORD PTR [ebp+0x8]
  405179:	add    ecx,DWORD PTR [eax+0x1c]
  40517c:	mov    DWORD PTR [ebp-0x14],ecx
  40517f:	jmp    0x405253
  405184:	sub    DWORD PTR ds:0x42c018,ebx
  40518a:	mov    eax,DWORD PTR [ebp-0x34]
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	sbb    DWORD PTR ds:0x42a014,0x429000
  40519a:	add    ecx,DWORD PTR [eax+ebx*4]
  40519d:	and    DWORD PTR ds:0x42d00c,0x0
  4051a7:	jmp    0x4051b7
  4051ac:	mov    eax,ds:0x42d00c
  4051b1:	inc    eax
  4051b2:	mov    ds:0x42d00c,eax
  4051b7:	cmp    DWORD PTR ds:0x42d00c,0x1b
  4051be:	jae    0x405206
  4051c4:	cmp    DWORD PTR ds:0x42d00c,0xd
  4051cb:	jne    0x4051dc
  4051d1:	push   0x42e0b3
  4051d6:	call   DWORD PTR ds:0x42e9cb
  4051dc:	cmp    DWORD PTR ds:0x42d00c,0xc
  4051e3:	jne    0x4051f7
  4051e9:	xor    eax,eax
  4051eb:	xor    eax,DWORD PTR ds:0x42d00c
  4051f1:	inc    eax
  4051f2:	mov    ds:0x42d00c,eax
  4051f7:	jmp    0x4051ac
  4051fc:	xor    DWORD PTR ds:0x42b010,0x429024
  405206:	mov    DWORD PTR [ebp-0x30],ecx
  405209:	mov    eax,DWORD PTR [ebp-0x4]
  40520c:	mov    ecx,DWORD PTR [ebp-0x30]
  40520f:	xor    eax,esi
  405211:	add    eax,edi
  405213:	cmp    ecx,eax
  405215:	je     0x405253
  40521b:	jmp    0x405244
  405220:	mov    eax,DWORD PTR [ebp-0x4]
  405223:	mov    ecx,DWORD PTR [ebp-0x8]
  405226:	xor    eax,esi
  405228:	add    eax,edi
  40522a:	cmp    ecx,eax
  40522c:	mov    eax,DWORD PTR [ebp-0x4]
  40522f:	je     0x40528e
  405235:	mov    ecx,DWORD PTR [ebp-0x38]
  405238:	xor    eax,esi
  40523a:	add    eax,edi
  40523c:	cmp    ecx,eax
  40523e:	je     0x405297
  405244:	lea    eax,[ebp-0x8]
  405247:	push   eax
  405248:	push   DWORD PTR [ebp-0x30]
  40524b:	push   DWORD PTR [ebp+0xc]
  40524e:	call   0x40ca0a
  405253:	mov    eax,DWORD PTR [ebp-0x4]
  405256:	mov    ecx,DWORD PTR [ebp-0x8]
  405259:	xor    eax,esi
  40525b:	add    eax,edi
  40525d:	cmp    ecx,eax
  40525f:	je     0x40527a
  405265:	mov    eax,DWORD PTR [ebp-0x3c]
  405268:	movzx  eax,WORD PTR [eax+ebx*2]
  40526c:	mov    ecx,DWORD PTR [ebp-0x14]
  40526f:	mov    eax,DWORD PTR [ecx+eax*4]
  405272:	mov    DWORD PTR [ebp-0x40],eax
  405275:	jmp    0x405220
  40527a:	mov    eax,DWORD PTR [ebp-0xc]
  40527d:	xor    eax,esi
  40527f:	lea    ebx,[ebx+eax*1+0x3272e0]
  405286:	jmp    0x402be0
  40528b:	mov    eax,DWORD PTR [ebp-0x4]
  40528e:	xor    eax,esi
  405290:	add    eax,edi
  405292:	jmp    0x4053b4
  405297:	mov    eax,DWORD PTR [ebp-0x40]
  40529a:	add    eax,DWORD PTR [ebp+0x8]
  40529d:	mov    DWORD PTR [ebp-0x18],eax
  4052a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4052a3:	test   eax,eax
  4052a5:	je     0x40533f
  4052ab:	mov    DWORD PTR [ebp-0x28],0x0
  4052b2:	push   0x3
  4052b4:	xor    edx,edx
  4052b6:	pop    edx
  4052b7:	add    edx,0x8
  4052ba:	push   edx
  4052bb:	pop    ecx
  4052bc:	push   0x6
  4052be:	dec    ecx
  4052bf:	pop    ebx
  4052c0:	dec    ebx
  4052c1:	xchg   ebx,ecx
  4052c3:	sub    ebx,ecx
  4052c5:	xchg   ebx,ecx
  4052c7:	dec    ecx
  4052c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052cb:	imul   eax,ecx
  4052ce:	sub    esp,eax
  4052d0:	mov    DWORD PTR [ebp-0x28],esp
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x405318
  4052df:	mov    ecx,DWORD PTR [ebp-0xc]
  4052e2:	mov    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    edx,DWORD PTR [ebp+0x14]
  4052e8:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052ec:	xor    ecx,esi
  4052ee:	add    ecx,edi
  4052f0:	xor    edx,edx
  4052f2:	div    ecx
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	xor    ecx,esi
  4052f9:	lea    eax,[ecx+eax*1+0x3272e0]
  405300:	mov    ecx,DWORD PTR [ebp+0x8]
  405303:	mov    edx,DWORD PTR [ebp-0x28]
  405306:	mov    DWORD PTR [edx+ecx*4],eax
  405309:	mov    eax,DWORD PTR [ebp-0xc]
  40530c:	mov    ecx,DWORD PTR [ebp+0x8]
  40530f:	xor    eax,esi
  405311:	lea    eax,[eax+ecx*1+0x3272e0]
  405318:	mov    DWORD PTR [ebp+0x8],eax
  40531b:	mov    eax,DWORD PTR [ebp-0xc]
  40531e:	mov    ecx,DWORD PTR [ebp+0x14]
  405321:	xor    eax,esi
  405323:	add    eax,edi
  405325:	imul   eax,DWORD PTR [ecx]
  405328:	mov    ecx,DWORD PTR [ebp-0x4]
  40532b:	mov    edx,DWORD PTR [ebp+0x8]
  40532e:	xor    ecx,esi
  405330:	lea    ecx,[ecx+edx*1+0x3272e0]
  405337:	cmp    ecx,eax
  405339:	jne    0x4052df
  40533f:	mov    eax,DWORD PTR [ebp-0x4]
  405342:	xor    eax,esi
  405344:	add    eax,edi
  405346:	mov    DWORD PTR [ebp-0x10],eax
  405349:	mov    ebx,0x65655
  40534e:	add    ebx,0x3234
  405354:	xchg   ebx,esi
  405356:	xor    ebx,ebx
  405358:	push   esi
  405359:	mov    esi,ebx
  40535b:	pop    ebx
  40535c:	mov    edx,esi
  40535e:	add    ebx,0x1002
  405364:	lea    eax,[ebp-0x18]
  405367:	add    edx,eax
  405369:	add    edx,0x5
  40536c:	push   edx
  40536d:	inc    esi
  40536e:	pop    ecx
  40536f:	dec    ecx
  405370:	xchg   ecx,eax
  405371:	dec    eax
  405372:	xchg   ecx,eax
  405373:	dec    ecx
  405374:	xchg   ecx,edx
  405376:	dec    edx
  405377:	push   edx
  405378:	mov    edx,ebx
  40537a:	pop    ebx
  40537b:	dec    ebx
  40537c:	call   DWORD PTR [ebx]
  40537e:	cmp    DWORD PTR [ebp+0x10],esi
  405381:	je     0x4053a0
  405387:	xchg   edx,eax
  405388:	push   0xb
  40538a:	pop    ecx
  40538b:	push   0x4
  40538d:	pop    ebx
  40538e:	inc    ebx
  40538f:	xchg   ebx,ecx
  405391:	sub    ebx,ecx
  405393:	xchg   ebx,ecx
  405395:	dec    ecx
  405396:	dec    ecx
  405397:	mov    eax,DWORD PTR [ebp-0x1c]
  40539a:	imul   eax,ecx
  40539d:	add    esp,eax
  40539f:	xchg   edx,eax
  4053a0:	push   eax
  4053a1:	xor    ebx,ebx
  4053a3:	mov    edx,esp
  4053a5:	dec    edx
  4053a6:	inc    ebx
  4053a7:	add    ebx,DWORD PTR [edx+ebx*1]
  4053aa:	dec    ebx
  4053ab:	xor    edx,edx
  4053ad:	add    DWORD PTR [ebp-0x10],ebx
  4053b0:	pop    ebx
  4053b1:	mov    eax,DWORD PTR [ebp-0x10]
  4053b4:	pop    edi
  4053b5:	pop    esi
  4053b6:	pop    ebx
  4053b7:	leave  
  4053b8:	ret    0x10
  4053bb:	push   ebp
  4053bc:	mov    ebp,esp
  4053be:	sub    esp,0x7c
  4053c1:	mov    eax,ds:0x42a000
  4053c6:	xor    eax,DWORD PTR ds:0x42c014
  4053cc:	mov    ds:0x42a000,eax
  4053d1:	push   esi
  4053d2:	and    DWORD PTR ds:0x42a004,0x0
  4053dc:	jmp    0x4053f0
  4053e1:	xor    esi,esi
  4053e3:	or     esi,DWORD PTR ds:0x42a004
  4053e9:	inc    esi
  4053ea:	mov    DWORD PTR ds:0x42a004,esi
  4053f0:	cmp    DWORD PTR ds:0x42a004,0x18
  4053f7:	jae    0x4054e8
  4053fd:	cmp    DWORD PTR ds:0x42a004,0x6
  405404:	jne    0x405415
  40540a:	push   0x429028
  40540f:	call   DWORD PTR ds:0x42e9d3
  405415:	cmp    DWORD PTR ds:0x42a004,0x5
  40541c:	jne    0x405431
  405422:	xor    esi,esi
  405424:	or     esi,DWORD PTR ds:0x42a004
  40542a:	inc    esi
  40542b:	mov    DWORD PTR ds:0x42a004,esi
  405431:	jmp    0x4053e1
  405436:	and    DWORD PTR ds:0x42a014,0x0
  405440:	jmp    0x405454
  405445:	xor    esi,esi
  405447:	or     esi,DWORD PTR ds:0x42a014
  40544d:	inc    esi
  40544e:	mov    DWORD PTR ds:0x42a014,esi
  405454:	cmp    DWORD PTR ds:0x42a014,0x19
  40545b:	jae    0x4054e8
  405461:	cmp    DWORD PTR ds:0x42a014,0xf
  405468:	jne    0x405483
  40546e:	push   0x42d01c
  405473:	push   0x42a00c
  405478:	push   0x42d010
  40547d:	call   DWORD PTR ds:0x42e993
  405483:	cmp    DWORD PTR ds:0x42a014,0xe
  40548a:	jne    0x40549d
  405490:	mov    esi,DWORD PTR ds:0x42a014
  405496:	inc    esi
  405497:	mov    DWORD PTR ds:0x42a014,esi
  40549d:	jmp    0x405445
  4054a2:	mov    DWORD PTR ds:0x42c010,0x19
  4054ac:	cmp    DWORD PTR ds:0x42c010,0x0
  4054b3:	je     0x4054e8
  4054b9:	cmp    DWORD PTR ds:0x42c010,0x1e
  4054c0:	jne    0x4054d6
  4054c6:	push   0x0
  4054c8:	push   0x13e0
  4054cd:	push   DWORD PTR [ebp-0x14]
  4054d0:	call   DWORD PTR ds:0x42e997
  4054d6:	mov    esi,DWORD PTR ds:0x42c010
  4054dc:	dec    esi
  4054dd:	mov    DWORD PTR ds:0x42c010,esi
  4054e3:	jmp    0x4054ac
  4054e8:	push   edi
  4054e9:	adc    DWORD PTR ds:0x42901c,edx
  4054ef:	mov    eax,ds:0x42e313
  4054f4:	mov    esi,DWORD PTR ds:0x42c01c
  4054fa:	and    DWORD PTR ds:0x42a00c,esi
  405500:	mov    DWORD PTR [ebp-0x24],eax
  405503:	mov    eax,ds:0x42e41f
  405508:	mov    DWORD PTR [ebp-0x34],eax
  40550b:	mov    DWORD PTR ds:0x42b008,0x1b
  405515:	cmp    DWORD PTR ds:0x42b008,0x0
  40551c:	je     0x405564
  405522:	cmp    DWORD PTR ds:0x42b008,0x26
  405529:	jne    0x405554
  40552f:	push   0x5039
  405534:	push   DWORD PTR [ebp-0x20]
  405537:	push   0x42d010
  40553c:	push   0x88e6
  405541:	push   DWORD PTR [ebp-0x10]
  405544:	push   0x8f04
  405549:	push   0x8b34
  40554e:	call   DWORD PTR ds:0x42e99f
  405554:	mov    eax,ds:0x42b008
  405559:	dec    eax
  40555a:	mov    ds:0x42b008,eax
  40555f:	jmp    0x405515
  405564:	and    DWORD PTR [ebp-0x30],0x0
  405568:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40556f:	add    eax,eax
  405571:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  405578:	add    DWORD PTR ds:0x42c014,edi
  40557e:	mov    eax,DWORD PTR [ebp-0x10]
  405581:	and    DWORD PTR ds:0x42d014,0x0
  40558b:	mov    esi,DWORD PTR ds:0x42d014
  405591:	inc    esi
  405592:	mov    DWORD PTR ds:0x42d014,esi
  405598:	cmp    DWORD PTR ds:0x42d014,0x5
  40559f:	jne    0x4055c0
  4055a5:	push   0x42c004
  4055aa:	push   DWORD PTR [ebp-0x20]
  4055ad:	push   0x42e0c7
  4055b2:	push   DWORD PTR [ebp-0x24]
  4055b5:	push   0x31c8
  4055ba:	call   DWORD PTR ds:0x42e9a3
  4055c0:	cmp    DWORD PTR ds:0x42d014,0x4
  4055c7:	jne    0x4055dc
  4055cd:	xor    esi,esi
  4055cf:	xor    esi,DWORD PTR ds:0x42d014
  4055d5:	inc    esi
  4055d6:	mov    DWORD PTR ds:0x42d014,esi
  4055dc:	cmp    DWORD PTR ds:0x42d014,0x1c
  4055e3:	jb     0x40558b
  4055e9:	and    DWORD PTR ds:0x42c004,0x0
  4055f3:	xor    ecx,ecx
  4055f5:	xor    ecx,DWORD PTR ds:0x42c004
  4055fb:	inc    ecx
  4055fc:	mov    DWORD PTR ds:0x42c004,ecx
  405602:	cmp    DWORD PTR ds:0x42c004,0x28
  405609:	jne    0x40561a
  40560f:	push   0x42d010
  405614:	call   DWORD PTR ds:0x42e9ab
  40561a:	cmp    DWORD PTR ds:0x42c004,0x18
  405621:	jb     0x4055f3
  405627:	and    DWORD PTR ds:0x42c018,edx
  40562d:	mov    ecx,DWORD PTR [ebp-0x10]
  405630:	sub    eax,ecx
  405632:	mov    DWORD PTR [ebp-0x10],eax
  405635:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40563c:	mov    eax,DWORD PTR [ebp-0x18]
  40563f:	mov    ecx,DWORD PTR [ebp-0x18]
  405642:	sub    eax,ecx
  405644:	mov    DWORD PTR [ebp-0x18],eax
  405647:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40564e:	jmp    0x4079f8
  405653:	neg    DWORD PTR [edi+0x51]
  405656:	pop    ds
  405657:	adc    edi,esi
  405659:	div    DWORD PTR [edi]
  40565b:	jge    0x40560a
  40565d:	aam    0xe9
  40565f:	lds    eax,FWORD PTR [eax+ebp*1-0x1f]
  405663:	xor    BYTE PTR [edi+0x7a],bl
  405666:	jp     0x40564d
  405668:	pop    edi
  405669:	jp     0x4056e5
  40566b:	shr    BYTE PTR [ecx],1
  40566d:	in     eax,0xfb
  40566f:	jb     0x40568c
  405671:	sbb    DWORD PTR [eax-0x4c],edi
  405674:	pop    ecx
  405675:	cmp    esi,esi
  405677:	inc    ebp
  405678:	inc    esi
  405679:	lods   eax,DWORD PTR ds:[esi]
  40567a:	add    DWORD PTR [edx+0x7edef7c7],eax
  405680:	fild   DWORD PTR [ebp+0x54]
  405683:	pop    edi
  405684:	cdq    
  405685:	arpl   WORD PTR [esi-0x53],cx
  405688:	cdq    
  405689:	mov    dh,0x30
  40568b:	call   0x903662e3
  405690:	jmp    0x19cc41e4
  405695:	or     DWORD PTR [eax+0x4ab9b28b],eax
  40569b:	push   ecx
  40569c:	pop    eax
  40569d:	or     ecx,DWORD PTR [edi+edi*4+0x32fe8474]
  4056a4:	sub    DWORD PTR [ebx-0x24428080],ebx
  4056aa:	mov    ch,0xff
  4056ac:	dec    eax
  4056ad:	and    esp,DWORD PTR [ecx]
  4056af:	add    ah,BYTE PTR [eax]
  4056b1:	loope  0x405721
  4056b3:	aaa    
  4056b4:	icebp  
  4056b5:	xor    eax,0x561c8d65
  4056ba:	mov    ds:0xe2e8443d,al
  4056bf:	repz (bad) [esi+0x7c]
  4056c3:	(bad)  
  4056c4:	mov    bh,0x8c
  4056c6:	xchg   ebx,eax
  4056c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056c8:	xor    ebp,DWORD PTR [esi+0xae4bc82]
  4056ce:	mov    al,ds:0x39104872
  4056d3:	in     eax,0x8b
  4056d5:	sbb    esi,DWORD PTR [edi]
  4056d7:	movhps QWORD PTR [esp+esi*8-0x5],xmm5
  4056dc:	cmp    al,0x70
  4056de:	test   BYTE PTR [ebp+0x29c845eb],cl
  4056e4:	pop    esp
  4056e5:	sub    DWORD PTR [eax+0x56918a36],edi
  4056eb:	jmp    0x4056df
  4056ed:	out    dx,al
  4056ee:	mov    bl,0xc7
  4056f0:	(bad)  
  4056f1:	fidiv  DWORD PTR [eax+0x5d1e8df7]
  4056f7:	cmp    esp,DWORD PTR [ecx-0x7ab9c87b]
  4056fd:	cs ss ss sub esi,eax
  405702:	pop    edx
  405703:	in     eax,dx
  405704:	sbb    esp,DWORD PTR [eax-0x5a]
  405707:	adc    BYTE PTR [eax+eax*1+0x6f],bl
  40570b:	arpl   ax,ax
  40570d:	repnz push ss
  40570f:	jmp    0x4056a3
  405711:	inc    esp
  405712:	aam    0x5c
  405714:	xchg   DWORD PTR ds:0xd791e5e8,edi
  40571a:	dec    edx
  40571b:	cmp    eax,0x8cda8781
  405720:	mov    edi,0x613dd8c
  405725:	mov    ch,BYTE PTR [eax+0x1b77560d]
  40572b:	adc    DWORD PTR [esp+edx*4-0x58],edi
  40572f:	sbb    BYTE PTR [ebp+0x3b],0xff
  405733:	enter  0x73ea,0x16
  405737:	add    al,bl
  405739:	stos   DWORD PTR es:[edi],eax
  40573a:	fistp  QWORD PTR ds:0x29f4b8d5
  405740:	or     BYTE PTR [edx+0x44860b84],al
  405746:	fnstcw WORD PTR [ecx-0x5b9f5229]
  40574c:	shr    BYTE PTR [eax+0x45],cl
  40574f:	mov    esp,0x91b72a86
  405754:	imul   ebx,DWORD PTR [ebx],0xffffffdc
  405757:	mov    ds:0xdd6aeaad,eax
  40575c:	out    dx,eax
  40575d:	dec    edi
  40575e:	inc    ecx
  40575f:	cmp    al,0xc8
  405761:	cmp    eax,0x2bfb1b7b
  405766:	inc    eax
  405767:	sbb    eax,0x525c0716
  40576c:	xchg   ecx,eax
  40576d:	scas   al,BYTE PTR es:[edi]
  40576e:	xchg   esp,eax
  40576f:	inc    edi
  405770:	xchg   esp,eax
  405771:	or     dh,BYTE PTR [edx-0x60d184fc]
  405777:	fild   QWORD PTR [edi+0x24]
  40577a:	(bad)  
  40577b:	sti    
  40577c:	sbb    esi,DWORD PTR [edx+0x79a022fd]
  405782:	xor    BYTE PTR [esi+eiz*2-0x71449ce5],bl
  405789:	xchg   ebx,eax
  40578a:	imul   ebx
  40578c:	mov    WORD PTR [edi],gs
  40578e:	aas    
  40578f:	jmp    0x4057de
  405791:	sbb    ecx,0x5
  405794:	or     eax,DWORD PTR [esi-0x13]
  405797:	in     eax,dx
  405798:	pusha  
  405799:	pop    edx
  40579a:	or     BYTE PTR [eax-0x1e],ah
  40579d:	mov    dh,0x57
  40579f:	jmp    0x2fcb4d99
  4057a4:	xlat   BYTE PTR ds:[ebx]
  4057a5:	or     ebp,DWORD PTR [esi+0x3b5b5757]
  4057ab:	pop    ecx
  4057ac:	outs   dx,DWORD PTR ds:[esi]
  4057ad:	std    
  4057ae:	mov    eax,0xebc32484
  4057b3:	push   esp
  4057b4:	aad    0xdb
  4057b6:	data16 xchg BYTE PTR [ebx+0x34],dl
  4057ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057bb:	mov    ebp,0xf75387e0
  4057c0:	pop    ss
  4057c1:	cwde   
  4057c2:	ins    BYTE PTR es:[edi],dx
  4057c3:	in     al,0xe2
  4057c5:	inc    esp
  4057c6:	in     eax,dx
  4057c7:	test   al,0x6
  4057c9:	jecxz  0x4057d6
  4057cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057cc:	je     0x4057d6
  4057ce:	imul   edx,DWORD PTR [esp+ebp*4-0x5627373e],0xe81525cb
  4057d9:	(bad)
  4057dc:	xchg   ecx,eax
  4057dd:	ficomp DWORD PTR [edi+edx*2+0x1081aef7]
  4057e4:	adc    eax,0xc92579d0
  4057e9:	pop    ebx
  4057ea:	icebp  
  4057eb:	mov    eax,0xfdf59cf4
  4057f0:	pop    esi
  4057f1:	cmp    DWORD PTR [ebp+0x6321ad99],esi
  4057f7:	push   esi
  4057f8:	adc    esi,0xffffffc8
  4057fb:	out    dx,eax
  4057fc:	iret   
  4057fd:	xchg   esi,eax
  4057fe:	and    eax,edi
  405800:	std    
  405801:	mov    dh,0xec
  405803:	test   ch,ch
  405805:	push   ds
  405806:	mov    ch,0xfa
  405808:	cmp    ebp,esp
  40580a:	loope  0x405846
  40580c:	push   0xa195b289
  405811:	pop    ebp
  405812:	pop    esp
  405813:	mov    ah,0x5f
  405815:	push   edi
  405816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405817:	loope  0x4057ee
  405819:	inc    ebp
  40581a:	sbb    al,0x95
  40581c:	clc    
  40581d:	daa    
  40581e:	test   ch,0x14
  405821:	(bad)  
  405822:	adc    eax,0xd2488391
  405827:	jle    0x405848
  405829:	jecxz  0x405800
  40582b:	pop    ds
  40582c:	jmp    0x6842:0x464b5a0b
  405833:	gs jb  0x40589b
  405836:	mov    ecx,0xff96c10
  40583b:	ror    DWORD PTR [ebx+0xe2f49b0],0x98
  405842:	(bad)  
  405843:	sbb    esi,DWORD PTR [esi]
  405845:	and    DWORD PTR [eax-0x66],ebx
  405848:	push   0x7c
  40584a:	loop   0x4058b2
  40584c:	mov    dl,0xa2
  40584e:	inc    esp
  40584f:	lods   eax,DWORD PTR ds:[esi]
  405850:	outs   dx,BYTE PTR ds:[esi]
  405851:	push   ds
  405852:	jo     0x405876
  405854:	shl    edi,cl
  405856:	inc    DWORD PTR ds:0x75ba834a
  40585c:	inc    ecx
  40585d:	pop    ecx
  40585e:	dec    ecx
  40585f:	dec    edx
  405860:	cs pop eax
  405862:	fsub   st,st(5)
  405864:	(bad)  
  405865:	js     0x40588b
  405867:	fwait
  405868:	dec    ebx
  405869:	arpl   WORD PTR [eax],dx
  40586b:	mov    ds:0x35e8f795,eax
  405870:	or     ebx,DWORD PTR [ebp-0x75]
  405873:	pop    edx
  405874:	cmp    DWORD PTR [eax],ecx
  405876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405878:	in     al,dx
  405879:	arpl   WORD PTR [esi-0x3c87a8e4],si
  40587f:	push   ecx
  405880:	dec    esp
  405881:	sbb    ecx,esi
  405883:	sbb    bh,dh
  405885:	adc    edi,ebx
  405887:	pop    esp
  405888:	pop    DWORD PTR [eax]
  40588a:	cmp    bh,BYTE PTR [ecx-0x44]
  40588d:	pop    ebx
  40588e:	cvtps2pi mm5,QWORD PTR [edi+ecx*4+0x1b]
  405893:	shl    ah,0xd3
  405896:	add    eax,DWORD PTR [edx-0x3e8f4fa3]
  40589c:	or     DWORD PTR [ebx],esp
  40589e:	mov    ds:0x940ca8b0,eax
  4058a3:	jmp    0xd96b:0x71c26413
  4058aa:	adc    BYTE PTR [ebp-0x6d13c4c],al
  4058b0:	push   ebx
  4058b1:	push   edi
  4058b2:	adc    DWORD PTR [esi-0x7f9f1509],esi
  4058b8:	mov    ds:0xcb35d5c7,eax
  4058bd:	xchg   esi,eax
  4058be:	xchg   ebx,eax
  4058bf:	test   al,0x1
  4058c1:	push   0x44dba461
  4058c6:	sub    al,0x7d
  4058c8:	aad    0xbc
  4058ca:	icebp  
  4058cb:	shr    DWORD PTR [ecx+0x37],1
  4058ce:	std    
  4058cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d0:	fwait
  4058d1:	xchg   BYTE PTR [esi+0x6a],al
  4058d4:	pop    ds
  4058d5:	cmp    dl,BYTE PTR [eax-0x72]
  4058d8:	jge    0x40588b
  4058da:	pushf  
  4058db:	add    BYTE PTR [ecx-0x74],cl
  4058de:	ds push esi
  4058e0:	aas    
  4058e1:	adc    ebx,DWORD PTR [edx+0x44]
  4058e4:	adc    DWORD PTR [ebx],0x62f777b5
  4058ea:	je     0x4058da
  4058ec:	add    DWORD PTR [ebx+0x3ceccff0],ecx
  4058f2:	nop
  4058f3:	cs jg  0x405921
  4058f6:	loop   0x4058ab
  4058f8:	mov    eax,0xb6da453b
  4058fd:	cmp    al,0xa9
  4058ff:	jae    0x405921
  405901:	xchg   edx,eax
  405902:	pop    ebx
  405903:	jb     0x4058ce
  405905:	std    
  405906:	aam    0x1e
  405908:	xchg   ebx,eax
  405909:	je     0x405913
  40590b:	mov    eax,0xa86c2abb
  405910:	cdq    
  405911:	dec    eax
  405912:	pop    ss
  405913:	aas    
  405914:	jmp    0x405907
  405916:	or     DWORD PTR [edi-0x6aa97671],ebx
  40591c:	add    dh,ch
  40591e:	ror    DWORD PTR [edi+eiz*4+0x7e],1
  405922:	and    DWORD PTR [eax-0x4e],esi
  405925:	stc    
  405926:	fst    DWORD PTR [ebx+0x6d14df2]
  40592c:	adc    eax,0x1010a2cc
  405931:	xor    bl,BYTE PTR [edi]
  405933:	jl     0x405957
  405935:	adc    dl,dl
  405937:	sub    eax,0x64ef0520
  40593c:	call   0xdc0:0xde312e6e
  405943:	add    DWORD PTR [ebx+edi*1+0x189372f8],ebp
  40594a:	jne    0x405967
  40594c:	loopne 0x4059b6
  40594e:	std    
  40594f:	int3   
  405950:	jle    0x40591f
  405952:	dec    ebx
  405953:	retf   
  405954:	mov    dl,BYTE PTR [esi]
  405956:	xor    eax,esp
  405958:	(bad)  
  405959:	hlt    
  40595a:	sub    BYTE PTR [edi-0x44],0x10
  40595e:	add    eax,0xfb2a0a78
  405963:	cs cmp esp,ebx
  405966:	(bad)  
  405967:	call   0xec7fca8d
  40596c:	outs   dx,BYTE PTR ds:[esi]
  40596d:	and    BYTE PTR [edi],cl
  40596f:	fstp   DWORD PTR [ebx-0x57]
  405972:	xchg   esp,eax
  405973:	enter  0xc398,0x8f
  405977:	repz (bad) 
  405979:	sbb    al,0x59
  40597b:	sub    BYTE PTR [ebx-0x2124788e],ah
  405981:	aas    
  405982:	aam    0xa0
  405984:	cmp    bh,BYTE PTR [esi]
  405986:	push   esp
  405987:	push   esi
  405988:	push   ebx
  405989:	leave  
  40598a:	in     al,0xcc
  40598c:	stos   DWORD PTR es:[edi],eax
  40598d:	outs   dx,BYTE PTR ds:[esi]
  40598e:	mov    cl,0x6b
  405990:	sbb    ebx,DWORD PTR [eax-0x1f36fa9e]
  405996:	or     bl,BYTE PTR [ebx]
  405998:	cmp    dl,cl
  40599a:	adc    ebx,DWORD PTR [eax-0x2a]
  40599d:	iret   
  40599e:	jns    0x405a04
  4059a0:	push   esp
  4059a1:	repnz stos DWORD PTR es:[edi],eax
  4059a3:	rcl    BYTE PTR [eax-0x7a244012],0x13
  4059aa:	daa    
  4059ab:	xchg   ebp,eax
  4059ac:	imul   ecx,DWORD PTR [edx],0xffffffb2
  4059af:	xchg   edx,eax
  4059b0:	ins    BYTE PTR es:[edi],dx
  4059b1:	ins    DWORD PTR es:[edi],dx
  4059b2:	std    
  4059b3:	ror    esi,1
  4059b5:	add    dh,bl
  4059b7:	pop    ss
  4059b8:	adc    BYTE PTR [edx],al
  4059ba:	stos   DWORD PTR es:[edi],eax
  4059bb:	cmp    al,0x66
  4059bd:	xor    DWORD PTR [eax+0x48],ebp
  4059c0:	call   0xb7894441
  4059c5:	sbb    BYTE PTR [eax+0x34],al
  4059c8:	push   eax
  4059c9:	pop    ebp
  4059ca:	pop    eax
  4059cb:	dec    ebp
  4059cc:	leave  
  4059cd:	push   edi
  4059ce:	mov    ds:0xfd530c30,eax
  4059d3:	lods   al,BYTE PTR ds:[esi]
  4059d4:	out    0xf9,al
  4059d6:	nop
  4059d7:	sub    edx,DWORD PTR [edx*2+0x393c31c0]
  4059de:	mov    WORD PTR [eax+0xb376cd5],gs
  4059e4:	mov    esp,0x851a0c20
  4059e9:	dec    eax
  4059ea:	inc    ecx
  4059eb:	fistp  QWORD PTR [esi-0x859cd22]
  4059f1:	mov    ebx,0x5922e6ac
  4059f6:	sbb    eax,0x930cd109
  4059fb:	and    al,0x1a
  4059fd:	mov    cl,0x8
  4059ff:	stos   BYTE PTR es:[edi],al
  405a00:	loopne 0x4059a1
  405a02:	mov    ah,0xfc
  405a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a05:	ds das 
  405a07:	inc    DWORD PTR [eax+0x334ef9a8]
  405a0d:	data16 ins BYTE PTR es:[edi],dx
  405a0f:	and    bl,BYTE PTR [esi+0x22]
  405a12:	cli    
  405a13:	fild   DWORD PTR [edi+eax*4+0x6a]
  405a17:	adc    eax,0x93cf3eaf
  405a1c:	cld    
  405a1d:	mov    ecx,0x9b1c9ac7
  405a22:	cld    
  405a23:	inc    edx
  405a24:	clc    
  405a25:	addr16 pop es
  405a27:	aas    
  405a28:	js     0x4059d9
  405a2a:	call   0xbfa9c490
  405a2f:	mov    dl,0x2f
  405a31:	mov    ds:0xe701103,al
  405a36:	add    esp,DWORD PTR [ebx]
  405a38:	mov    ch,0xdf
  405a3a:	push   ds
  405a3b:	xchg   ebx,eax
  405a3c:	rcl    BYTE PTR [edi],cl
  405a3e:	call   DWORD PTR [ebx+0x13ec31dd]
  405a44:	or     BYTE PTR [eax+0x3c610ad],bh
  405a4a:	arpl   WORD PTR [ebx+0x1589abfb],sp
  405a50:	mov    ds:0x55323623,al
  405a55:	loopne 0x405a37
  405a57:	dec    ebp
  405a58:	push   es
  405a59:	mov    dh,0x38
  405a5b:	adc    al,0x44
  405a5d:	stos   DWORD PTR es:[edi],eax
  405a5e:	daa    
  405a5f:	test   BYTE PTR [ebx],cl
  405a61:	je     0x405a6b
  405a63:	inc    esi
  405a64:	in     eax,0x0
  405a66:	ins    BYTE PTR es:[edi],dx
  405a67:	mov    edi,0xd316a208
  405a6c:	add    BYTE PTR [esi+0x28f518f6],dh
  405a72:	ds jb  0x4059f8
  405a75:	scas   al,BYTE PTR es:[edi]
  405a76:	pop    esp
  405a77:	xor    BYTE PTR [ebp+0x23aeda68],dl
  405a7d:	inc    edi
  405a7e:	jns    0x405aaf
  405a80:	stc    
  405a81:	pop    eax
  405a82:	adc    DWORD PTR [edx-0x7bc640d8],edx
  405a88:	ins    DWORD PTR es:[edi],dx
  405a89:	shl    BYTE PTR [esi],cl
  405a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a8c:	inc    ebx
  405a8d:	sar    cl,1
  405a8f:	xchg   edi,eax
  405a90:	cmp    DWORD PTR [esi-0x2b],ecx
  405a93:	and    eax,0x7bbc3e99
  405a98:	pop    ecx
  405a99:	fxch   st(0)
  405a9b:	loope  0x405ad1
  405a9d:	clc    
  405a9e:	mov    edi,0xa9884bce
  405aa3:	xor    ecx,DWORD PTR [edx-0x70]
  405aa6:	ret    0x4e6d
  405aa9:	xor    esi,DWORD PTR [edx-0x3a]
  405aac:	mov    ebx,0x9c1f7fb6
  405ab1:	mov    DWORD PTR [edx-0x41],edi
  405ab4:	test   bl,ch
  405ab6:	nop
  405ab7:	inc    esp
  405ab8:	les    edx,FWORD PTR [edi]
  405aba:	imul   eax,DWORD PTR [ebp+edi*4+0x28c7f47b],0x19
  405ac2:	jge    0x405a92
  405ac4:	jmp    0x405a85
  405ac6:	call   0x9028:0x814dd786
  405acd:	push   DWORD PTR [esi]
  405acf:	sbb    edx,DWORD PTR [eax-0x46]
  405ad2:	push   ss
  405ad3:	sub    dh,BYTE PTR [ecx+0x15]
  405ad6:	or     eax,0xf0f4f204
  405adb:	shl    DWORD PTR [edx-0x36],1
  405ade:	pop    ss
  405adf:	pusha  
  405ae0:	addr16 mov dl,0x44
  405ae3:	cdq    
  405ae4:	scas   eax,DWORD PTR es:[edi]
  405ae5:	in     al,0x96
  405ae7:	mov    bh,0xa5
  405ae9:	mov    esp,0xed6e5183
  405aee:	sub    DWORD PTR [ecx+0x9],ebp
  405af1:	mov    ch,0xf7
  405af3:	shl    BYTE PTR [ebp+0x54ef3d44],cl
  405af9:	xchg   edx,eax
  405afa:	xlat   BYTE PTR ds:[ebx]
  405afb:	or     edi,DWORD PTR [esi+0x1d]
  405afe:	enter  0xb03,0x7e
  405b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b03:	js     0x405b7f
  405b05:	pop    ebx
  405b06:	jnp    0x405ace
  405b08:	mov    cl,0x70
  405b0a:	aam    0xbf
  405b0c:	das    
  405b0d:	clc    
  405b0e:	cmp    eax,0xf7916445
  405b13:	jp     0x405b2f
  405b15:	mov    cl,0xab
  405b17:	push   edi
  405b18:	mov    eax,ds:0x825ced95
  405b1d:	and    eax,0x88aeb799
  405b22:	lahf   
  405b23:	jbe    0x405ade
  405b25:	push   ds
  405b26:	repz push ss
  405b28:	lea    sp,[edi+0x43d9507c]
  405b2f:	and    al,0x1c
  405b31:	pop    es
  405b32:	sub    bh,0xe5
  405b35:	and    edx,esp
  405b37:	cmp    DWORD PTR ds:0x806e0004,esi
  405b3d:	(bad)  
  405b3e:	ins    DWORD PTR es:[edi],dx
  405b3f:	into   
  405b40:	xchg   edx,eax
  405b41:	in     eax,dx
  405b42:	movsx  ebp,WORD PTR [ebp+ebx*2+0x1ae11363]
  405b4a:	or     BYTE PTR [eax],dl
  405b4c:	shl    BYTE PTR [eax+edi*2],1
  405b4f:	icebp  
  405b50:	jo     0x405b7d
  405b52:	mov    WORD PTR [esi+ebx*8],cs
  405b55:	jb     0x405b8e
  405b57:	(bad)  
  405b58:	into   
  405b59:	xor    ah,al
  405b5b:	pop    edx
  405b5c:	add    eax,0xf093700c
  405b61:	jbe    0x405b9e
  405b63:	stc    
  405b64:	add    ch,BYTE PTR [ebx]
  405b66:	add    DWORD PTR [ebx],edx
  405b68:	out    dx,al
  405b69:	and    al,0x6f
  405b6b:	mul    BYTE PTR [ebp-0x67]
  405b6e:	jp     0x405be2
  405b70:	dec    ebx
  405b71:	push   ebx
  405b72:	jp     0x405b52
  405b74:	sub    al,BYTE PTR [esi-0x4aef3ffe]
  405b7a:	out    0x13,al
  405b7c:	sbb    eax,0xbe134583
  405b81:	xchg   edi,eax
  405b82:	add    esi,DWORD PTR [edx+0x6c]
  405b85:	test   dl,dh
  405b87:	and    eax,0x6265d34e
  405b8c:	cmp    DWORD PTR [esi+0x67fbcc71],edi
  405b92:	mov    bl,0x97
  405b94:	sahf   
  405b95:	add    al,0x2
  405b97:	jb     0x405baf
  405b99:	in     eax,0x22
  405b9b:	cmp    edi,DWORD PTR [ebx]
  405b9d:	push   edx
  405b9e:	dec    edx
  405b9f:	fisub  WORD PTR [esi+0x3391d49]
  405ba5:	dec    eax
  405ba6:	pop    edi
  405ba7:	cmp    eax,edx
  405ba9:	enter  0xd37,0x47
  405bad:	mov    esi,DWORD PTR [ecx+0x66]
  405bb0:	call   0x18b5314d
  405bb5:	inc    ebp
  405bb6:	(bad)  
  405bb8:	outs   dx,BYTE PTR ds:[esi]
  405bb9:	inc    ecx
  405bba:	sbb    DWORD PTR [esi],0xffffff86
  405bbd:	shl    BYTE PTR [edx-0x20cbb257],0x6a
  405bc4:	sub    esp,DWORD PTR [ecx-0x1d]
  405bc7:	mov    cl,0x18
  405bc9:	rol    DWORD PTR [esi-0x5b881bc6],0x97
  405bd0:	sbb    eax,0xf5d28f33
  405bd5:	popf   
  405bd6:	mov    DWORD PTR [ebp+0x61],edx
  405bd9:	push   cs
  405bda:	loop   0x405bb2
  405bdc:	xlat   BYTE PTR ds:[ebx]
  405bdd:	loop   0x405c55
  405bdf:	into   
  405be0:	imul   DWORD PTR ds:0x5471e1bc
  405be6:	arpl   WORD PTR [eax],ax
  405be8:	jmp    0x405c4e
  405bea:	push   esp
  405beb:	mov    eax,0x8edd1e15
  405bf0:	and    bh,BYTE PTR [eax]
  405bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bf3:	imul   esi,DWORD PTR [ebp+0x20636261],0x43eb6a0f
  405bfd:	fisubr DWORD PTR [ecx-0x45]
  405c00:	adc    al,al
  405c02:	jne    0x405c1c
  405c04:	out    0x2a,eax
  405c06:	lock sbb ebx,DWORD PTR [ecx-0x49]
  405c0a:	sbb    al,0x5d
  405c0c:	hlt    
  405c0d:	aas    
  405c0e:	pop    ds
  405c0f:	iret   
  405c10:	je     0x405c62
  405c12:	fistp  WORD PTR [esi+0x11]
  405c15:	test   bh,0xd3
  405c18:	in     eax,0xa3
  405c1a:	iret   
  405c1b:	ins    DWORD PTR es:[edi],dx
  405c1c:	test   DWORD PTR [ebx],edi
  405c1e:	xlat   BYTE PTR ds:[ebx]
  405c1f:	retf   
  405c20:	retf   
  405c21:	sub    BYTE PTR [ebx-0x6c70a7d3],bl
  405c27:	in     al,0xac
  405c29:	cli    
  405c2a:	mov    bh,0xa3
  405c2c:	push   es
  405c2d:	mov    bl,0x34
  405c2f:	stc    
  405c30:	mov    cl,0xee
  405c32:	outs   dx,BYTE PTR ds:[esi]
  405c33:	call   0x9798:0x9516c2db
  405c3a:	jmp    0xae16:0xa501fa35
  405c41:	push   es
  405c42:	fist   WORD PTR [ebp-0x35]
  405c45:	mov    esi,0x33f4b940
  405c4a:	iret   
  405c4b:	mov    bh,0x1e
  405c4d:	dec    edx
  405c4e:	sub    ebp,DWORD PTR [esi]
  405c50:	loop   0x405ccd
  405c52:	int3   
  405c53:	jecxz  0x405c34
  405c55:	loopne 0x405c30
  405c57:	in     eax,dx
  405c58:	fs gs aaa 
  405c5b:	loopne 0x405c5a
  405c5d:	inc    ebp
  405c5e:	cli    
  405c5f:	mov    ah,0x2c
  405c61:	jmp    0x405c10
  405c63:	out    dx,al
  405c64:	and    eax,0x276a673d
  405c69:	jecxz  0x405c3b
  405c6b:	mov    ?,WORD PTR [ebx-0x48]
  405c6e:	adc    ch,ch
  405c70:	or     eax,0x12778881
  405c75:	push   esp
  405c76:	xor    al,dl
  405c78:	add    dl,BYTE PTR [edi]
  405c7a:	fscale 
  405c7c:	cmp    dh,BYTE PTR [ebx]
  405c7e:	fisttp DWORD PTR [esi+edi*8-0x1d]
  405c82:	neg    eax
  405c84:	or     eax,0x9735152c
  405c89:	rol    DWORD PTR [ecx],1
  405c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c8c:	jbe    0x405c27
  405c8e:	and    eax,0x15b65d7b
  405c93:	sub    BYTE PTR [esi-0x3f0bce77],dh
  405c99:	aaa    
  405c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c9b:	scas   eax,DWORD PTR es:[edi]
  405c9c:	(bad)  
  405c9d:	jmp    0x591a:0x6bb831be
  405ca4:	ins    DWORD PTR es:[edi],dx
  405ca5:	xchg   ecx,eax
  405ca6:	dec    ecx
  405ca7:	pop    esp
  405ca8:	sub    eax,0x40851828
  405cad:	push   ds
  405cae:	mov    ch,0x56
  405cb0:	int3   
  405cb1:	dec    ebp
  405cb2:	icebp  
  405cb3:	out    dx,al
  405cb4:	ja     0x405c72
  405cb6:	mov    al,0x55
  405cb8:	ficomp DWORD PTR [ebp+edx*1-0x40]
  405cbc:	pop    es
  405cbd:	mov    cl,0xb1
  405cbf:	stos   BYTE PTR es:[edi],al
  405cc0:	pop    esi
  405cc1:	jb     0x405c77
  405cc3:	sar    DWORD PTR ss:[edi+esi*4],1
  405cc7:	push   ecx
  405cc8:	aaa    
  405cc9:	shr    DWORD PTR [esi+ebp*1],0xa4
  405ccd:	lahf   
  405cce:	imul   ebx,edi,0xe6cc1964
  405cd4:	out    0x42,al
  405cd6:	or     al,0x12
  405cd8:	jno    0x405cb3
  405cda:	into   
  405cdb:	sahf   
  405cdc:	pop    ebx
  405cdd:	cdq    
  405cde:	push   edx
  405cdf:	mov    dl,0x31
  405ce1:	inc    ebp
  405ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ce3:	imul   eax,edi,0xbc798adf
  405ce9:	cmp    BYTE PTR [ebx],0x8b
  405cec:	retf   0x581e
  405cef:	stos   DWORD PTR es:[edi],eax
  405cf0:	mov    dh,0x9d
  405cf2:	sub    BYTE PTR [edi],ah
  405cf4:	xor    al,0xc8
  405cf6:	popf   
  405cf7:	mov    ah,0xd0
  405cf9:	adc    dh,al
  405cfb:	and    BYTE PTR [ecx-0x3ef245eb],0x8d
  405d02:	jle    0x405d47
  405d04:	jecxz  0x405d4d
  405d06:	inc    ebx
  405d07:	fs ds pop es
  405d0a:	mov    edi,0x65d3c636
  405d0f:	xor    al,0xc1
  405d11:	(bad)  
  405d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d13:	adc    DWORD PTR [eax-0x13],ecx
  405d16:	or     ebx,edi
  405d18:	inc    ebx
  405d19:	outs   dx,DWORD PTR ds:[esi]
  405d1a:	sbb    ebx,DWORD PTR [esi+0x40]
  405d1d:	aam    0xd2
  405d1f:	js     0x405ccc
  405d21:	sbb    eax,0x73
  405d24:	mov    cl,0xdc
  405d26:	imul   esi,DWORD PTR [edi],0x2644936b
  405d2c:	sbb    edi,DWORD PTR [ebx]
  405d2e:	jnp    0x405d4b
  405d30:	xchg   ecx,eax
  405d31:	sub    eax,0x9d955dac
  405d36:	xchg   DWORD PTR [esi-0x93a3822],ebp
  405d3c:	or     DWORD PTR [ebx+0xd],esp
  405d3f:	xlat   BYTE PTR ds:[ebx]
  405d40:	sahf   
  405d41:	enter  0x3574,0xc9
  405d45:	mov    dl,0x38
  405d47:	cli    
  405d48:	repz and BYTE PTR [ebp-0x487da60f],dl
  405d4f:	inc    esi
  405d50:	fdivrp st(6),st
  405d52:	mov    DWORD PTR [esi-0x4],0xbc10f542
  405d59:	les    ebx,FWORD PTR [edx+0xe55481]
  405d5f:	dec    ebp
  405d60:	aam    0x7c
  405d62:	test   DWORD PTR [ecx],esp
  405d64:	enter  0xb792,0x2b
  405d68:	repnz sub DWORD PTR ds:0xc013bbf2,edx
  405d6f:	sbb    al,BYTE PTR [ebx]
  405d71:	retf   
  405d72:	or     DWORD PTR [ebx],eax
  405d74:	rol    DWORD PTR [edi+eiz*1-0x80],cl
  405d78:	pop    esp
  405d79:	mov    eax,ds:0xbad8dd48
  405d7e:	ss into 
  405d80:	repnz and dh,BYTE PTR [ecx-0x6408a17d]
  405d87:	lahf   
  405d88:	adc    BYTE PTR [ebx-0x48c4a26b],dh
  405d8e:	call   0x3522:0xa3ba0c0f
  405d95:	sbb    DWORD PTR [eax-0x47989345],eax
  405d9b:	gs dec ecx
  405d9d:	bnd jmp DWORD PTR [esi+0x7d]
  405da1:	shl    BYTE PTR [ebx+0x5a],cl
  405da4:	(bad)  
  405da5:	inc    esi
  405da6:	mov    eax,0x79a7e6e8
  405dab:	xchg   ebx,eax
  405dac:	out    0xfa,eax
  405dae:	sbb    ecx,edx
  405db0:	mov    ebx,0x9bcdc780
  405db5:	js     0x405db6
  405db7:	xchg   edi,eax
  405db8:	repz sub eax,0xcc2a485c
  405dbe:	leave  
  405dbf:	sbb    eax,DWORD PTR [edx+eiz*1-0x290c075d]
  405dc6:	lds    eax,FWORD PTR [ebx-0x4f]
  405dc9:	xor    ch,BYTE PTR ds:0x7a58ae4
  405dcf:	call   0xa757:0x94f4fdd2
  405dd6:	inc    eax
  405dd7:	mov    ds:0xfc80e2c1,eax
  405ddc:	xor    ebx,edx
  405dde:	lods   al,BYTE PTR ds:[esi]
  405ddf:	pop    ebp
  405de0:	outs   dx,DWORD PTR ds:[esi]
  405de1:	pop    ss
  405de2:	pushf  
  405de3:	cli    
  405de4:	ror    BYTE PTR ds:0x50483dd3,0x9b
  405deb:	shr    BYTE PTR [esi-0x43d18ab3],cl
  405df1:	imul   esp,DWORD PTR [ecx+0x42],0x1db0680
  405df8:	gs or  ecx,esp
  405dfb:	adc    ebx,edx
  405dfd:	ds xchg edi,eax
  405dff:	fild   DWORD PTR [edx+0x69]
  405e02:	pop    eax
  405e03:	inc    esp
  405e04:	jne    0x405dc4
  405e06:	mov    cl,0xe2
  405e08:	xchg   esp,eax
  405e09:	mov    ds:0x74bb84e3,al
  405e0e:	cmp    BYTE PTR [eax-0x4283c061],cl
  405e14:	adc    eax,0xc6c5ea74
  405e19:	cmp    ah,BYTE PTR [ecx+0x183fa482]
  405e1f:	sbb    DWORD PTR [edi-0x3327d329],edx
  405e25:	adc    eax,0x83e619fd
  405e2a:	xor    DWORD PTR [ebx-0x37],edi
  405e2d:	pop    edx
  405e2e:	jns    0x405e08
  405e30:	push   0x1a
  405e32:	mov    esp,0x98942ac1
  405e37:	push   ebp
  405e38:	add    BYTE PTR [ecx],bl
  405e3a:	js     0x405e27
  405e3c:	pusha  
  405e3d:	mov    dl,BYTE PTR [ecx+eax*8-0x4f]
  405e41:	mov    eax,0xc4cdb8a4
  405e46:	leave  
  405e47:	pop    ebp
  405e48:	jle    0x405dde
  405e4a:	jne    0x405e86
  405e4c:	test   al,0xb9
  405e4e:	or     al,0x35
  405e50:	stc    
  405e51:	dec    esp
  405e52:	jo     0x405e9a
  405e54:	sti    
  405e55:	mov    BYTE PTR [edx-0x12aad7ac],bl
  405e5b:	fdivr  QWORD PTR [esi+edi*8]
  405e5e:	mov    DWORD PTR [ebp+0x55bf3365],ebp
  405e64:	xchg   edx,eax
  405e65:	xor    DWORD PTR [ebp+0x7e],ecx
  405e68:	pop    ss
  405e69:	push   ebp
  405e6a:	jnp    0x405e71
  405e6c:	aaa    
  405e6d:	out    dx,eax
  405e6e:	push   0x1a72ec67
  405e73:	push   edx
  405e74:	out    dx,al
  405e75:	out    0x87,al
  405e77:	push   0x60
  405e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e7a:	xchg   esp,eax
  405e7b:	pop    esp
  405e7c:	lock xchg esp,eax
  405e7e:	in     al,dx
  405e7f:	ret    
  405e80:	mov    eax,0xd3c55651
  405e85:	pop    ecx
  405e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e87:	cmp    al,0x28
  405e89:	fist   WORD PTR [esi-0x41fc37c5]
  405e8f:	cwde   
  405e90:	cs cmp al,0x93
  405e93:	xchg   BYTE PTR [ecx-0x7f8e73d4],bl
  405e99:	xor    edi,DWORD PTR [edi-0x48eecc05]
  405e9f:	jl     0x405e78
  405ea1:	fsub   QWORD PTR [edi]
  405ea3:	leave  
  405ea4:	dec    eax
  405ea5:	fcmovbe st,st(6)
  405ea7:	(bad)  
  405ea9:	and    DWORD PTR [ebp-0x74c4a7b9],edi
  405eaf:	push   edx
  405eb0:	out    0xa0,al
  405eb2:	in     eax,0x88
  405eb4:	(bad)  
  405eb5:	and    DWORD PTR [edi+0x1f8fe641],ebp
  405ebb:	stos   DWORD PTR es:[edi],eax
  405ebc:	icebp  
  405ebd:	mov    bh,0x1d
  405ebf:	call   0x569a:0xa8142170
  405ec6:	sub    al,0x1e
  405ec8:	xchg   esi,eax
  405ec9:	btc    DWORD PTR [edx-0x2b],ebp
  405ecd:	sahf   
  405ece:	push   es
  405ecf:	das    
  405ed0:	outs   dx,BYTE PTR ds:[esi]
  405ed1:	jecxz  0x405e92
  405ed3:	mov    esp,ebx
  405ed5:	and    al,0x2a
  405ed7:	ds (bad) 
  405ed9:	dec    esi
  405eda:	xchg   esp,eax
  405edb:	scas   eax,DWORD PTR es:[edi]
  405edc:	push   ebx
  405edd:	stos   BYTE PTR es:[edi],al
  405ede:	imul   esi,ebp,0x3
  405ee1:	test   al,0x91
  405ee3:	push   eax
  405ee4:	sbb    DWORD PTR [ebx+0x62],ecx
  405ee7:	test   ah,0xbc
  405eea:	add    ebx,DWORD PTR [ebp-0x21cec87]
  405ef0:	dec    esp
  405ef1:	pop    esp
  405ef2:	jmp    0x2e71:0x6336de5c
  405ef9:	adc    dl,bh
  405efb:	iret   
  405efc:	ins    BYTE PTR es:[edi],dx
  405efd:	adc    ebp,eax
  405eff:	inc    eax
  405f00:	or     eax,0x5e31d486
  405f05:	stos   DWORD PTR es:[edi],eax
  405f06:	jmp    0x405f67
  405f08:	outs   dx,DWORD PTR ds:[esi]
  405f09:	jl     0x405f10
  405f0b:	and    al,0xe6
  405f0d:	and    esi,DWORD PTR [ebx-0x42]
  405f10:	and    eax,0xea2babdc
  405f15:	mov    dl,0xae
  405f17:	fstp   DWORD PTR [ebp-0x21]
  405f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f1b:	xor    DWORD PTR [eax-0x6e],ecx
  405f1e:	pop    ecx
  405f1f:	mov    eax,esp
  405f21:	cmp    DWORD PTR [eax+ecx*1+0x6b],ecx
  405f25:	arpl   WORD PTR [eax+ebx*2-0x1e9495be],bx
  405f2c:	repz retf 0x4b7f
  405f30:	pop    eax
  405f31:	xchg   edi,eax
  405f32:	pusha  
  405f33:	aaa    
  405f34:	into   
  405f35:	mov    eax,ds:0x3ffce567
  405f3a:	inc    esp
  405f3b:	mov    fs,WORD PTR [edi*4-0x109dd127]
  405f42:	cdq    
  405f43:	inc    edi
  405f44:	lods   al,BYTE PTR ds:[esi]
  405f45:	inc    ebx
  405f46:	inc    edx
  405f47:	mov    ebx,0x61e25d30
  405f4c:	sub    eax,0xeaaf2eb0
  405f51:	in     eax,0xf0
  405f53:	dec    ecx
  405f54:	sub    al,0x24
  405f56:	jae    0x405f4b
  405f58:	icebp  
  405f59:	je     0x405f17
  405f5b:	or     dh,dh
  405f5d:	xchg   esi,eax
  405f5e:	sub    bl,BYTE PTR [ebp+0x7065250e]
  405f64:	ds inc edx
  405f66:	dec    edx
  405f67:	imul   edx,DWORD PTR [ecx],0xc9f30c8b
  405f6d:	or     al,0xe
  405f6f:	or     al,0x94
  405f71:	push   0xb4cb2b6c
  405f76:	jbe    0x405f95
  405f78:	out    0xd9,eax
  405f7a:	jne    0x405f19
  405f7c:	push   0x1b0ca32e
  405f81:	push   eax
  405f82:	adc    al,BYTE PTR [edi+0x3d7a7d75]
  405f88:	pop    edx
  405f89:	inc    esp
  405f8a:	imul   sp,sp,0x1a
  405f8e:	jnp    0x405f5b
  405f90:	je     0x405f61
  405f92:	and    DWORD PTR [edx+0x4],0xffffff83
  405f96:	cmp    BYTE PTR [esi-0x51683a9],dh
  405f9c:	nop
  405f9d:	add    ebp,edx
  405f9f:	out    0x76,eax
  405fa1:	push   esi
  405fa2:	jns    0x405fea
  405fa4:	cmp    al,0x2e
  405fa6:	stos   DWORD PTR es:[edi],eax
  405fa7:	imul   esi,DWORD PTR [eax-0x79],0x81c488cc
  405fae:	test   DWORD PTR [eax],esp
  405fb0:	out    dx,eax
  405fb1:	push   ss
  405fb2:	shl    BYTE PTR [esi+0x6e],cl
  405fb5:	adc    eax,DWORD PTR [ebp+0x211c340]
  405fbb:	pop    ebp
  405fbc:	inc    ebp
  405fbd:	stos   BYTE PTR es:[edi],al
  405fbe:	cmp    dl,BYTE PTR [edx]
  405fc0:	out    dx,al
  405fc1:	or     eax,0x630cf1be
  405fc6:	mov    esp,0x3b3a57e0
  405fcb:	mov    ?,esi
  405fcd:	sub    esi,DWORD PTR [ecx]
  405fcf:	mov    ebp,0x5fde27ad
  405fd4:	out    0xbc,eax
  405fd6:	push   0xf3af066
  405fdb:	jne    0x405f79
  405fdd:	cwde   
  405fde:	jl     0x405fb6
  405fe0:	out    dx,al
  405fe1:	sti    
  405fe2:	icebp  
  405fe3:	jnp    0x405fb3
  405fe5:	mov    dh,0x83
  405fe7:	jp     0x405fe5
  405fe9:	aaa    
  405fea:	mov    ebp,0x791cd362
  405fef:	popa   
  405ff0:	xchg   ebx,eax
  405ff1:	adc    al,0x7a
  405ff3:	pop    ds
  405ff4:	or     DWORD PTR [edx+0x628b6d26],edi
  405ffa:	sub    eax,0xc460fba4
  405fff:	push   0xffffff9a
  406001:	cld    
  406002:	mov    dl,BYTE PTR [ebx+0x5a]
  406005:	push   0xd3032547
  40600a:	pop    esi
  40600b:	xchg   ebp,eax
  40600c:	into   
  40600d:	dec    esp
  40600e:	cmc    
  40600f:	shr    al,1
  406011:	shl    BYTE PTR [edx],cl
  406013:	add    eax,0xc89c0173
  406018:	out    0x7d,eax
  40601a:	sub    esi,DWORD PTR [eax]
  40601c:	adc    DWORD PTR [esi],edi
  40601e:	lds    ebp,FWORD PTR [eax+0x730ffce0]
  406024:	add    DWORD PTR [esi+0x7e3f3c68],ecx
  40602a:	imul   eax,DWORD PTR [ecx-0x3a],0x7c
  40602e:	sbb    bh,ch
  406030:	int    0x74
  406032:	sub    DWORD PTR [ebp*2-0x374438d7],0xfd86f31d
  40603d:	inc    ebp
  40603e:	inc    eax
  40603f:	jecxz  0x406054
  406041:	lods   eax,DWORD PTR ds:[esi]
  406042:	das    
  406043:	in     eax,0xd
  406045:	cmc    
  406046:	fldenv [eax]
  406048:	pop    esp
  406049:	mov    ?,WORD PTR [ecx]
  40604b:	sahf   
  40604c:	scas   al,BYTE PTR es:[edi]
  40604d:	(bad)  [edx+0x4e]
  406050:	repnz scas al,BYTE PTR es:[edi]
  406052:	(bad)  
  406054:	sahf   
  406055:	dec    edi
  406056:	jge    0x40602d
  406058:	(bad)  
  406059:	and    dh,cl
  40605b:	(bad)  
  40605c:	fstp   QWORD PTR [edx+0x10]
  40605f:	mov    al,ds:0xe83e3ad1
  406064:	rcl    DWORD PTR [esi-0x11],cl
  406067:	sbb    al,0x78
  406069:	mov    ebp,esp
  40606b:	adc    DWORD PTR [ebx-0x27cc0359],edi
  406071:	adc    DWORD PTR [edx+esi*8],ecx
  406074:	(bad)  
  406075:	cli    
  406076:	dec    esi
  406077:	addr16 aaa 
  406079:	mov    ebx,0x3e138752
  40607e:	pop    ebx
  40607f:	stos   DWORD PTR es:[edi],eax
  406080:	inc    ecx
  406081:	fimul  DWORD PTR ds:0x176a8dd4
  406087:	push   ecx
  406088:	sbb    ebp,ebp
  40608a:	push   edi
  40608b:	mov    ss,WORD PTR [ecx]
  40608d:	jge    0x406021
  40608f:	xchg   ebx,eax
  406090:	push   0xf4f2bb1e
  406095:	jns    0x40610d
  406097:	popf   
  406098:	jno    0x406064
  40609a:	cli    
  40609b:	mov    dl,0xca
  40609d:	jmp    0x4060cc
  40609f:	(bad)  
  4060a0:	push   ds
  4060a1:	cmp    bl,bl
  4060a3:	jg     0x406112
  4060a5:	lahf   
  4060a6:	enter  0xeeff,0xf9
  4060aa:	loope  0x4060a1
  4060ac:	mov    al,0xac
  4060ae:	or     al,0xc3
  4060b0:	ins    BYTE PTR es:[edi],dx
  4060b1:	xchg   eax,edx
  4060b3:	and    al,0x6e
  4060b5:	and    eax,0xded5b739
  4060ba:	int3   
  4060bb:	mov    eax,ds:0xcc6bf268
  4060c0:	jmp    0x6f6890ef
  4060c5:	lds    eax,FWORD PTR [edi]
  4060c7:	clc    
  4060c8:	or     eax,ebx
  4060ca:	sbb    al,0x5b
  4060cc:	inc    ecx
  4060cd:	inc    edx
  4060ce:	popf   
  4060cf:	xor    DWORD PTR [esi],0x337d650f
  4060d5:	xchg   DWORD PTR [ecx-0x4ad3d88a],edx
  4060db:	test   BYTE PTR [esp+ecx*4+0x642cb630],ch
  4060e2:	add    eax,0xa63009a9
  4060e7:	mov    BYTE PTR [edx+0x59],cl
  4060ea:	cmp    ebx,eax
  4060ec:	cmp    eax,0x3b95d7a1
  4060f1:	pop    ecx
  4060f2:	jg     0x40614d
  4060f4:	jge    0x406108
  4060f6:	int3   
  4060f7:	vpaddsb ymm0,ymm3,ymm7
  4060fb:	aad    0xe7
  4060fd:	mov    BYTE PTR [ebp+0x2ab1fbd6],bl
  406103:	(bad)  
  406104:	mov    edx,ecx
  406106:	stos   DWORD PTR es:[edi],eax
  406107:	test   al,0xab
  406109:	sub    al,BYTE PTR [esi-0x8]
  40610c:	inc    eax
  40610d:	add    al,0x33
  40610f:	(bad)  
  406110:	in     al,0xec
  406112:	mov    ebx,0xa7eb8547
  406117:	or     eax,0xfb3754d5
  40611c:	out    0x9d,al
  40611e:	pop    ebp
  40611f:	xchg   DWORD PTR [ebx],edi
  406121:	scas   eax,DWORD PTR es:[edi]
  406122:	dec    esp
  406123:	sub    edi,DWORD PTR [esi+0x25e1e9bc]
  406129:	lea    esi,[eax-0x74030b1c]
  40612f:	fmul   QWORD PTR [esp+edx*4-0x229e197e]
  406136:	not    BYTE PTR [edi]
  406138:	pop    edi
  406139:	clc    
  40613a:	sub    edx,ebx
  40613c:	test   BYTE PTR [esp+ecx*1+0x16275746],0xad
  406144:	adc    DWORD PTR [edi-0x3d8da2b],0xb412d988
  40614e:	repnz inc ebx
  406150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406152:	(bad)  
  406153:	(bad)  [edx+0x2c89755a]
  406159:	adc    al,BYTE PTR [ecx+0xec219cc]
  40615f:	out    0xda,eax
  406161:	inc    ecx
  406162:	pop    ds
  406163:	dec    esi
  406164:	out    dx,eax
  406165:	mov    ds,WORD PTR [eax+0x5e]
  406168:	iret   
  406169:	mov    ds:0xf2fc6b48,eax
  40616e:	xchg   esp,eax
  40616f:	push   eax
  406170:	mov    edx,0xa4471d1
  406175:	hlt    
  406176:	ja     0x40615b
  406178:	mov    esp,0xa8bb1c34
  40617d:	rcl    bl,cl
  40617f:	adc    DWORD PTR [eax],edi
  406181:	loopne 0x40615f
  406183:	and    dl,dl
  406185:	mov    edi,DWORD PTR [esi+0x56c15eb8]
  40618b:	mov    WORD PTR ds:0x1c083c3b,gs
  406191:	or     DWORD PTR [eax],eax
  406193:	mov    edi,0x976f4073
  406198:	add    DWORD PTR [eax-0x22],ecx
  40619b:	retf   
  40619c:	mov    esi,0xaf3e6f82
  4061a1:	mov    ds:0x3f61ac89,al
  4061a6:	dec    ebx
  4061a8:	push   ss
  4061a9:	xchg   esi,eax
  4061aa:	jbe    0x4061c9
  4061ac:	push   es
  4061ad:	mov    WORD PTR [ecx+0x28],ss
  4061b0:	push   esp
  4061b1:	pop    ecx
  4061b2:	jg     0x406177
  4061b4:	pop    ecx
  4061b5:	push   ebp
  4061b6:	pop    ebp
  4061b7:	or     esp,DWORD PTR [eax-0x825ab08]
  4061bd:	fidivr DWORD PTR [ecx+0x31]
  4061c0:	out    0xfd,al
  4061c2:	rcr    BYTE PTR [edx],cl
  4061c4:	icebp  
  4061c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c6:	cmp    BYTE PTR [esi+0x4],cl
  4061c9:	jb     0x4061ed
  4061cb:	das    
  4061cc:	(bad)  
  4061cd:	dec    ecx
  4061ce:	push   esp
  4061cf:	sub    edx,esi
  4061d1:	inc    ecx
  4061d2:	jl     0x406234
  4061d4:	ds push esi
  4061d6:	scas   eax,DWORD PTR es:[edi]
  4061d7:	jnp    0x406193
  4061d9:	sub    al,BYTE PTR ds:0x1deb2620
  4061df:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4061e1:	scas   al,BYTE PTR es:[edi]
  4061e2:	mov    cl,BYTE PTR [edi-0x71cb4519]
  4061e8:	popa   
  4061e9:	xchg   esi,eax
  4061ea:	dec    eax
  4061eb:	add    ebp,edx
  4061ed:	gs mov edx,0xf29d378e
  4061f3:	loop   0x406191
  4061f5:	mov    ebx,?
  4061f7:	dec    eax
  4061f8:	adc    al,0x9f
  4061fa:	or     al,0x8
  4061fc:	xchg   ecx,eax
  4061fd:	dec    esp
  4061fe:	wrmsr  
  406200:	fst    DWORD PTR [ebx-0x57995cc3]
  406206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406207:	xchg   ebx,eax
  406208:	fisub  DWORD PTR [ebp-0x1a3654e]
  40620e:	jle    0x40626e
  406210:	(bad)  
  406211:	test   eax,0x990df633
  406216:	ret    
  406217:	scas   eax,DWORD PTR es:[edi]
  406218:	out    dx,al
  406219:	retf   
  40621a:	sub    BYTE PTR [edx-0x30],al
  40621d:	jne    0x406244
  40621f:	push   esi
  406220:	ins    DWORD PTR es:[edi],dx
  406221:	adc    dl,BYTE PTR [ecx+0x7277c12e]
  406227:	std    
  406228:	inc    ecx
  406229:	fmul   DWORD PTR [ebp-0x3616d19a]
  40622f:	aam    0xbc
  406231:	mov    DWORD PTR [ebx+0x6e],eax
  406234:	std    
  406235:	(bad)  
  406236:	mov    ds:0x83527ee4,eax
  40623b:	mov    cl,0x29
  40623d:	inc    ecx
  40623e:	leave  
  40623f:	inc    ebp
  406240:	push   0x5f987f3f
  406245:	in     al,0x62
  406247:	lods   al,BYTE PTR ds:[esi]
  406248:	shl    DWORD PTR [ebp-0x2ba25c79],0xce
  40624f:	jmp    0x40629b
  406251:	mov    bh,0xb6
  406253:	daa    
  406254:	jnp    0x406228
  406256:	pop    esi
  406257:	out    0xa0,eax
  406259:	mov    dl,0x36
  40625b:	cmp    al,0xd2
  40625d:	shr    dh,0xad
  406260:	xchg   DWORD PTR [edi],esi
  406262:	inc    esp
  406263:	jle    0x4061ed
  406265:	add    al,0xde
  406267:	mov    eax,ds:0x88af69eb
  40626c:	frstor [ebx-0x62587948]
  406272:	add    eax,DWORD PTR [esi+0x3de5c02f]
  406278:	paddd  mm5,QWORD PTR [eax-0x14]
  40627c:	and    DWORD PTR [esi-0x6e],edx
  40627f:	es adc al,0x1f
  406282:	xor    BYTE PTR [edx+eiz*1+0x4c],bl
  406286:	cmp    cl,dl
  406288:	inc    esp
  406289:	inc    edx
  40628a:	mov    DWORD PTR [ebx+0xa],ecx
  40628d:	jl     0x4062da
  40628f:	les    edx,FWORD PTR [edx]
  406291:	or     BYTE PTR [ecx],dl
  406293:	mov    ss,WORD PTR [edx-0x66]
  406296:	(bad)  
  406297:	xchg   esi,eax
  406298:	cld    
  406299:	inc    ecx
  40629a:	jo     0x40625a
  40629c:	int3   
  40629d:	imul   eax,DWORD PTR [ecx],0x25
  4062a0:	xor    BYTE PTR [ecx+0x29],ch
  4062a3:	push   edx
  4062a4:	xchg   BYTE PTR [ecx+edx*1+0x75],dh
  4062a8:	xor    DWORD PTR [edi+edi*4-0x2a],edx
  4062ac:	xor    al,0x26
  4062ae:	mov    ecx,0x6b457a65
  4062b3:	test   al,0x96
  4062b5:	or     BYTE PTR [eax+0x2b766458],al
  4062bb:	ficomp DWORD PTR [edx-0x223d177]
  4062c1:	jmp    0x5cb69abe
  4062c6:	ins    BYTE PTR es:[edi],dx
  4062c7:	jg     0x4062f8
  4062c9:	rol    BYTE PTR [eax],1
  4062cb:	push   ss
  4062cc:	and    DWORD PTR [bx+di],edx
  4062cf:	je     0x40628c
  4062d1:	inc    edi
  4062d2:	add    DWORD PTR [esi+0x4dd3135a],0x58
  4062d9:	jb     0x4062a1
  4062db:	and    ah,0xab
  4062de:	jmp    0x5a2bbcb1
  4062e3:	cmp    eax,0x522add8b
  4062e8:	pop    ds
  4062e9:	test   DWORD PTR [esi-0x43],edi
  4062ec:	mov    ah,0x2f
  4062ee:	out    0xdd,eax
  4062f0:	jp     0x406338
  4062f2:	bound  edx,QWORD PTR [ecx]
  4062f4:	and    bh,BYTE PTR [edi-0x12]
  4062f7:	loop   0x4062f1
  4062f9:	fs fwait
  4062fb:	mov    ds:0x2fda06e8,al
  406300:	adc    eax,0xe9a77091
  406305:	inc    edi
  406306:	add    al,0xaa
  406309:	xor    dl,BYTE PTR [edi]
  40630b:	js     0x4062e8
  40630d:	loop   0x406308
  40630f:	stos   DWORD PTR es:[edi],eax
  406310:	jecxz  0x406314
  406312:	pop    ebp
  406313:	pop    esp
  406314:	add    al,0xb9
  406316:	inc    esp
  406317:	pop    esp
  406318:	test   DWORD PTR [esi],0xfdd9435b
  40631e:	sub    eax,0x3adf3df6
  406323:	stos   DWORD PTR es:[edi],eax
  406324:	pop    edx
  406325:	aaa    
  406326:	stos   BYTE PTR es:[edi],al
  406327:	cmp    DWORD PTR [ebx-0x1c083bd5],ebp
  40632d:	dec    ecx
  40632e:	jmp    0x7bff851b
  406333:	je     0x406349
  406335:	call   0x3752:0xa5b1c1ac
  40633c:	aam    0xfc
  40633e:	fst    DWORD PTR [edi]
  406340:	push   ss
  406341:	(bad)  
  406342:	adc    al,bh
  406344:	ror    DWORD PTR [ebx+0x544ed452],1
  40634a:	(bad)  
  40634b:	test   eax,0xe502643a
  406350:	xor    al,0xbb
  406352:	addr16 call 0x8f22:0x9aee2a4f
  40635a:	add    al,ah
  40635c:	or     DWORD PTR [ebp-0x7a],edi
  40635f:	pop    edx
  406360:	and    DWORD PTR ds:0x9a32bcb8,edi
  406366:	imul   edi,DWORD PTR [eax+0x3723dab4],0x51d4210e
  406370:	inc    ebx
  406371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406372:	jg     0x406313
  406374:	mov    eax,0x667792
  406379:	clc    
  40637a:	pinsrw mm5,WORD PTR [ebx+0x539d5c6f],0xc2
  406382:	pop    eax
  406383:	into   
  406384:	add    eax,0x16b8ac9b
  406389:	jo     0x4063c9
  40638b:	sti    
  40638c:	stos   BYTE PTR es:[edi],al
  40638d:	je     0x4063f5
  40638f:	fdivr  QWORD PTR [eax+0x77]
  406392:	ins    BYTE PTR es:[edi],dx
  406393:	retf   
  406394:	mov    al,ds:0x3217891
  406399:	xchg   esi,eax
  40639a:	mov    cl,0x82
  40639c:	call   0xb7dc:0x59ae3334
  4063a3:	ret    
  4063a4:	pusha  
  4063a5:	call   0x33a858c1
  4063aa:	enter  0xa145,0x16
  4063ae:	cwde   
  4063af:	int3   
  4063b0:	cs es ret 0x396
  4063b5:	or     ch,0x45
  4063b8:	ja     0x406387
  4063ba:	mov    ds:0x3879c821,eax
  4063bf:	push   esi
  4063c0:	cmc    
  4063c1:	mov    al,ds:0xa51ce2df
  4063c6:	enter  0xfc80,0xa3
  4063ca:	push   0x17
  4063cc:	dec    edx
  4063cd:	mov    dh,0xe2
  4063cf:	retf   0x4af1
  4063d2:	inc    esp
  4063d3:	mov    WORD PTR [edi-0x32e41abe],cs
  4063d9:	mov    dl,0xe5
  4063db:	xchg   BYTE PTR [ebx-0x60],dl
  4063de:	push   esp
  4063df:	add    BYTE PTR [esi],ch
  4063e1:	xchg   esi,eax
  4063e2:	sbb    ecx,edx
  4063e4:	sub    al,0x24
  4063e6:	int    0xc1
  4063e8:	push   es
  4063e9:	es adc ebp,esp
  4063ec:	mov    edx,0x30fca6ef
  4063f1:	test   BYTE PTR [ecx],dl
  4063f3:	into   
  4063f4:	lds    edi,FWORD PTR [esi+0x73]
  4063f7:	arpl   WORD PTR [ebp-0x72],bp
  4063fa:	jb     0x406398
  4063fc:	lahf   
  4063fd:	popa   
  4063fe:	test   al,0x6e
  406400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406401:	hlt    
  406402:	or     ch,dl
  406404:	mov    ebp,0x13745df0
  406409:	sbb    BYTE PTR [ecx-0x68ead40e],dh
  40640f:	ret    
  406410:	lods   eax,DWORD PTR ds:[esi]
  406411:	test   BYTE PTR [edx+0x31],ch
  406414:	(bad)  
  406415:	cmp    ecx,DWORD PTR [edi+0x4d]
  406418:	out    0x32,eax
  40641a:	xor    edx,esi
  40641c:	add    DWORD PTR [ecx],esp
  40641e:	mov    bh,0x58
  406420:	test   BYTE PTR [edi],al
  406422:	sub    bh,ch
  406424:	xchg   esi,eax
  406425:	(bad)  
  406426:	sub    al,0xd1
  406428:	xor    eax,DWORD PTR [eax]
  40642a:	aas    
  40642b:	cdq    
  40642c:	ret    0x66bb
  40642f:	xchg   esi,eax
  406430:	test   eax,0xe1da72ae
  406435:	push   0xffffffb7
  406437:	push   ds
  406438:	and    ebp,eax
  40643a:	cmp    eax,0xf19c6aa4
  40643f:	sub    esi,DWORD PTR [ecx]
  406441:	adc    al,BYTE PTR [ebp+0xd]
  406444:	loop   0x406469
  406446:	dec    ebx
  406447:	out    0xe1,eax
  406449:	and    ecx,DWORD PTR [eax+0x6bf75581]
  40644f:	repz aaa 
  406451:	lods   al,BYTE PTR ds:[esi]
  406452:	mov    al,0x6b
  406454:	mov    dl,0x35
  406456:	mov    BYTE PTR [eax+0x5381de65],dl
  40645c:	push   0xaa5b82b5
  406461:	add    al,0x4d
  406463:	cmp    ah,BYTE PTR [ecx+ecx*2+0x5a]
  406467:	in     al,0xf9
  406469:	sub    dh,dl
  40646b:	pop    ss
  40646c:	mov    dh,0x92
  40646e:	enter  0xed28,0xfc
  406472:	pcmpeqb mm3,QWORD PTR [edi-0x66852af2]
  406479:	jbe    0x4063fd
  40647b:	ss mov dl,0xf6
  40647e:	push   0xe658f9ea
  406483:	aas    
  406484:	idiv   DWORD PTR [esi+ecx*8]
  406487:	cmp    al,0xf7
  406489:	test   DWORD PTR [ebp-0x62],edx
  40648c:	sbb    eax,0x877ae4cc
  406491:	push   0xca4ceb5f
  406496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406497:	jno    0x4064c7
  406499:	xor    al,BYTE PTR [esi-0x6b66db92]
  40649f:	cmp    ecx,DWORD PTR [eax+0x136d89e9]
  4064a5:	and    al,BYTE PTR [edi]
  4064a7:	and    edi,ecx
  4064a9:	mov    ds:0xe68f9838,eax
  4064ae:	dec    edx
  4064af:	fwait
  4064b0:	into   
  4064b1:	jmp    0x406501
  4064b3:	inc    esp
  4064b4:	add    edx,DWORD PTR [ecx-0x73]
  4064b7:	mov    dh,0x41
  4064b9:	std    
  4064ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064bb:	xchg   ecx,eax
  4064bc:	push   eax
  4064bd:	and    ch,al
  4064bf:	and    DWORD PTR [ebp-0x1b961310],ebx
  4064c5:	xchg   ebp,eax
  4064c6:	mov    esp,0xe916bb20
  4064cb:	es and eax,0xe7151b79
  4064d1:	xchg   esi,eax
  4064d2:	or     BYTE PTR [ebp-0x6b],dl
  4064d5:	push   ebp
  4064d6:	inc    edx
  4064d7:	jle    0x406542
  4064d9:	nop
  4064da:	push   ds
  4064db:	dec    esi
  4064dc:	mov    bh,BYTE PTR [ebx-0x59826c7a]
  4064e2:	ins    DWORD PTR es:[edi],dx
  4064e3:	sti    
  4064e4:	pop    ds
  4064e5:	sub    BYTE PTR [ebx+0x4337a0e0],bh
  4064eb:	xor    ch,BYTE PTR [ecx-0x4c0751dd]
  4064f1:	xor    DWORD PTR [ebp+0x2b0db25d],esi
  4064f7:	jmp    0x92f44d40
  4064fc:	ror    DWORD PTR [esi+0x7d],0x9a
  406500:	lea    ebp,[eax+0x1e8300aa]
  406506:	ss aam 0xe9
  406509:	xor    DWORD PTR [edi-0x2c0f93ab],0xffffffcc
  406510:	daa    
  406511:	in     al,dx
  406512:	sbb    bl,ah
  406514:	fisttp DWORD PTR [ecx]
  406516:	bound  eax,QWORD PTR [ecx-0x41aa2a5b]
  40651c:	fcmovb st,st(0)
  40651e:	(bad)  [ebx]
  406520:	xor    BYTE PTR [esi],ah
  406522:	scas   eax,DWORD PTR es:[edi]
  406523:	jecxz  0x4064f5
  406525:	ja     0x406596
  406527:	xchg   esp,eax
  406528:	jo     0x4064d3
  40652a:	xor    DWORD PTR ds:0xeb1864a8,ebp
  406530:	add    dl,BYTE PTR [esi-0x49]
  406533:	jg     0x406573
  406535:	mov    bl,0xaa
  406537:	inc    ebp
  406538:	imul   ecx,eax,0xf33bfb58
  40653e:	fisub  DWORD PTR [esi-0x50e9b925]
  406544:	scas   al,BYTE PTR es:[edi]
  406545:	test   DWORD PTR [ebx-0x6f21e104],0xdc0ea62e
  40654f:	test   al,0x48
  406551:	(bad)  
  406552:	iret   
  406553:	in     eax,dx
  406554:	mov    esp,0xba30f605
  406559:	inc    esp
  40655a:	sti    
  40655b:	mov    edx,0xec9d66a0
  406560:	pop    edi
  406561:	arpl   WORD PTR cs:[edi],di
  406564:	int3   
  406565:	jmp    0x9b5e:0xb23b2632
  40656c:	sbb    edx,DWORD PTR [esi+0x77]
  40656f:	shr    esi,cl
  406571:	ss hlt 
  406573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406574:	lock icebp 
  406576:	cmp    bh,BYTE PTR [ebx-0x26a26b8]
  40657c:	mov    cl,0x45
  40657e:	push   cs
  40657f:	repz cwde 
  406581:	jbe    0x406508
  406583:	imul   ecx,DWORD PTR [eax],0x4b
  406586:	jnp    0x4065a6
  406588:	adc    al,0x1e
  40658a:	xchg   edx,eax
  40658b:	inc    esp
  40658c:	sub    eax,0x26ec5f8a
  406591:	scas   al,BYTE PTR es:[edi]
  406592:	mov    edi,0x9117db9d
  406597:	js     0x4065fe
  406599:	ins    BYTE PTR es:[edi],dx
  40659a:	adc    dl,BYTE PTR [eax+0x70e536c]
  4065a0:	js     0x406541
  4065a2:	out    0x21,al
  4065a4:	mov    cl,0x22
  4065a6:	imul   eax,DWORD PTR [ebx+0x2b],0xd70c751a
  4065ad:	pop    ds
  4065ae:	hlt    
  4065af:	das    
  4065b0:	out    dx,eax
  4065b1:	test   cl,dl
  4065b3:	jp     0x4065f5
  4065b5:	add    DWORD PTR [edx],edx
  4065b7:	fstp   DWORD PTR [edx]
  4065b9:	dec    edx
  4065ba:	xor    ebx,0xe55f9994
  4065c0:	push   es
  4065c1:	dec    ebp
  4065c2:	jmp    0xbeab:0x9035f4ee
  4065c9:	lods   al,BYTE PTR es:[esi]
  4065cb:	nop
  4065cc:	cli    
  4065cd:	ror    bh,cl
  4065cf:	sub    ebp,esi
  4065d1:	push   esi
  4065d2:	mov    al,BYTE PTR [edx]
  4065d4:	int3   
  4065d5:	sub    DWORD PTR [edi-0x79],ebx
  4065d8:	push   ss
  4065d9:	lock cld 
  4065db:	xchg   ebx,eax
  4065dc:	dec    esp
  4065dd:	push   edx
  4065de:	mov    al,ds:0x91ce1474
  4065e3:	cmp    eax,0xfe41d9b5
  4065e8:	pop    di
  4065ea:	ins    DWORD PTR es:[edi],dx
  4065eb:	mov    ebx,DWORD PTR [eax-0x5b201ffe]
  4065f1:	jae    0x40665e
  4065f3:	mov    WORD PTR [ebx],ss
  4065f5:	mul    ecx
  4065f7:	dec    ebx
  4065f8:	mov    esp,0xa207d3a6
  4065fd:	xchg   ebx,eax
  4065fe:	call   0xca4a71f
  406603:	imul   ebx,DWORD PTR [esi],0xffffff95
  406606:	(bad)  
  406607:	jnp    0x406615
  406609:	jnp    0x406673
  40660b:	cs test eax,0xe2bdc10b
  406611:	scas   al,BYTE PTR es:[edi]
  406612:	call   FWORD PTR [ebp-0x1c2ab7e7]
  406618:	sahf   
  406619:	lods   al,BYTE PTR ds:[esi]
  40661a:	test   eax,0xb5da8ef6
  40661f:	jns    0x406628
  406621:	shl    BYTE PTR [edx+0x4d],0xb3
  406625:	mov    dh,0xac
  406627:	call   FWORD PTR [eax+0x2cff1ebe]
  40662d:	addr16 (bad) 
  40662f:	and    bl,BYTE PTR [ecx+esi*2+0x1312c247]
  406636:	inc    ebp
  406637:	shl    DWORD PTR [esi+0x34],cl
  40663a:	add    esp,DWORD PTR [eax+0x42fa712f]
  406640:	lods   al,BYTE PTR ds:[esi]
  406641:	mov    ebp,0xacc5dde2
  406646:	mov    esp,DWORD PTR [edi+0x56]
  406649:	mov    esp,0x64d7052f
  40664e:	daa    
  40664f:	je     0x406635
  406651:	jge    0x4066c2
  406653:	outs   dx,BYTE PTR ds:[esi]
  406654:	cmp    ebx,DWORD PTR [edi]
  406656:	out    0x2e,eax
  406658:	xchg   edi,eax
  406659:	adc    bh,BYTE PTR [esi+0x6d2cc525]
  40665f:	(bad)  
  406660:	fcom   QWORD PTR cs:[eax+ebp*8+0x5ca8c69b]
  406668:	std    
  406669:	add    ebx,esi
  40666b:	lods   al,BYTE PTR ds:[esi]
  40666c:	jmp    0xe46c6f42
  406671:	mov    dh,0x1c
  406673:	push   eax
  406674:	sbb    al,0x8d
  406676:	add    BYTE PTR [eax*2-0x65288a01],ch
  40667d:	push   es
  40667e:	sub    DWORD PTR [ebx],ebx
  406680:	bound  esi,QWORD PTR es:[ecx]
  406683:	test   DWORD PTR [edx+0x7c0e5abd],esp
  406689:	dec    ebp
  40668a:	jnp    0x4066b0
  40668c:	(bad)  
  40668d:	(bad)  
  40668e:	sbb    dh,BYTE PTR [eax-0x152bbd1b]
  406694:	xor    DWORD PTR [eax+0x1d9df010],eax
  40669a:	push   esi
  40669b:	daa    
  40669c:	add    BYTE PTR [ecx-0x79666758],0x3c
  4066a3:	cld    
  4066a4:	cmp    DWORD PTR [ebx-0x8],0x980597e8
  4066ab:	rol    ch,cl
  4066ad:	add    DWORD PTR [ecx],esi
  4066af:	inc    esi
  4066b0:	imul   eax,DWORD PTR [eax-0x28349968],0x6452ca71
  4066ba:	xor    eax,0xc9af2a1c
  4066bf:	mov    ecx,0x7c454827
  4066c4:	test   eax,0x52d049ae
  4066c9:	bound  ecx,QWORD PTR [ecx+0x17]
  4066cc:	mov    bh,0xa6
  4066ce:	cmp    DWORD PTR [ecx+0x735383a1],0x32
  4066d5:	repz clc 
  4066d7:	push   edx
  4066d8:	inc    edx
  4066d9:	mov    BYTE PTR ds:[edx-0x19],ch
  4066dd:	std    
  4066de:	out    dx,al
  4066df:	repnz in al,dx
  4066e1:	push   ebx
  4066e2:	mov    WORD PTR [eax+0x34],?
  4066e5:	sti    
  4066e6:	in     al,dx
  4066e7:	leave  
  4066e8:	xchg   ebp,eax
  4066e9:	in     al,dx
  4066ea:	sbb    bh,BYTE PTR [eax]
  4066ec:	inc    edi
  4066ed:	sub    al,BYTE PTR [ebx-0x259ecaee]
  4066f3:	je     0x4066f2
  4066f5:	cmc    
  4066f6:	(bad)  
  4066f7:	push   ebp
  4066f8:	gs aaa 
  4066fa:	xor    DWORD PTR [ebx+0x75cd4f63],esi
  406700:	cmp    DWORD PTR [esi-0x49],edx
  406703:	cmovne esi,DWORD PTR [ecx-0x5d8c3a38]
  40670a:	or     al,0x0
  40670c:	ins    DWORD PTR es:[edi],dx
  40670d:	sbb    DWORD PTR [esi+0x449416a8],ebp
  406713:	jns    0x40672f
  406715:	ss loop 0x406797
  406718:	stos   BYTE PTR es:[edi],al
  406719:	xor    al,0x84
  40671b:	pop    ecx
  40671c:	fidiv  DWORD PTR [eax-0x6b]
  40671f:	pop    esi
  406720:	and    dl,BYTE PTR [eax]
  406722:	mov    dl,0x8d
  406724:	mov    edx,0xcd0d96cd
  406729:	mov    dh,0xfe
  40672b:	mov    ebp,ebp
  40672d:	call   0x36c7b3e1
  406732:	jae    0x4067ae
  406734:	idiv   BYTE PTR [edx+0x4c]
  406737:	mov    al,ds:0x627035dd
  40673c:	adc    al,0x3e
  40673e:	lahf   
  40673f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406740:	jb     0x406746
  406742:	xchg   edx,eax
  406743:	xchg   DWORD PTR [edi+0x4],eax
  406746:	pop    ebx
  406747:	add    BYTE PTR [ecx],0x4b
  40674a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40674b:	ficom  WORD PTR [ebx-0x278d90db]
  406751:	into   
  406752:	pushf  
  406753:	xor    eax,0xaad7b183
  406758:	loop   0x4066f6
  40675a:	mov    ds:0xe31d4e08,eax
  40675f:	dec    esi
  406760:	push   es
  406761:	push   es
  406762:	pop    ss
  406763:	jo     0x406707
  406765:	cmp    bl,BYTE PTR [eax-0x7dbd6509]
  40676b:	pop    es
  40676c:	stc    
  40676d:	pop    esi
  40676e:	fild   DWORD PTR [ebx+0x6650d57c]
  406774:	call   0x269b:0x106fd497
  40677b:	xlat   BYTE PTR ds:[ebx]
  40677c:	mov    dh,0xa5
  40677e:	out    0x70,al
  406780:	sub    dl,BYTE PTR [edi+0x428aed6e]
  406786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406787:	(bad)  
  406788:	mov    dl,0xb9
  40678a:	retf   
  40678b:	ss inc ecx
  40678d:	fild   WORD PTR [ebp+0x2a]
  406790:	jae    0x406787
  406792:	jg     0x406775
  406794:	repnz out 0x1b,al
  406797:	shl    BYTE PTR [ebp+esi*4-0x1a],1
  40679b:	out    dx,al
  40679c:	out    0xe7,eax
  40679e:	cmp    DWORD PTR [edi+0x157f7db6],ecx
  4067a4:	xor    edx,DWORD PTR ss:[edx+0x6f]
  4067a8:	ret    0x2b21
  4067ab:	fisttp QWORD PTR [ecx]
  4067ad:	mov    edx,0xfec87bbf
  4067b2:	daa    
  4067b3:	mov    dh,0x8c
  4067b5:	adc    al,0x15
  4067b7:	pop    ecx
  4067b8:	push   es
  4067b9:	jl     0x4067fa
  4067bb:	idiv   esp
  4067bd:	mov    ebx,0x742d14a4
  4067c2:	push   edx
  4067c3:	lds    ebx,FWORD PTR [ebx+0x69]
  4067c6:	pop    edi
  4067c7:	stos   DWORD PTR es:[edi],eax
  4067c8:	sbb    ah,0x87
  4067cb:	jno    0x406847
  4067cd:	mov    edi,0x99996e0
  4067d2:	cwde   
  4067d3:	pop    edi
  4067d4:	jle    0x406832
  4067d6:	rep ins DWORD PTR es:[edi],dx
  4067d8:	pop    ss
  4067d9:	call   0x2f9c1c12
  4067de:	pop    ss
  4067df:	or     al,0x62
  4067e1:	jge    0x406773
  4067e3:	out    0x88,al
  4067e5:	add    ah,bh
  4067e7:	inc    ecx
  4067e8:	xor    BYTE PTR [eax-0x2dd77255],0x59
  4067ef:	inc    ebx
  4067f0:	(bad)  
  4067f1:	fstp   DWORD PTR [eax-0x5a7b338b]
  4067f7:	shl    BYTE PTR [ebx+edx*1],1
  4067fa:	mov    dh,0x81
  4067fc:	adc    al,0xce
  4067fe:	lods   al,BYTE PTR ds:[esi]
  4067ff:	cmc    
  406800:	push   0xffffffb2
  406802:	sbb    al,0x84
  406804:	mov    al,0x6
  406806:	mov    bl,0xe7
  406808:	dec    ebx
  406809:	neg    BYTE PTR ds:0xc9d9082b
  40680f:	ja     0x4067f4
  406811:	inc    bx
  406813:	fisttp DWORD PTR ds:0x5933b8da
  406819:	adc    DWORD PTR [ebx+0x15],0xffffff96
  40681d:	sahf   
  40681e:	pushf  
  40681f:	fs call 0xfa058783
  406825:	lods   al,BYTE PTR ds:[esi]
  406826:	aam    0x20
  406828:	xlat   BYTE PTR ds:[ebx]
  406829:	loopne 0x4068a1
  40682b:	cmp    al,dl
  40682d:	inc    ecx
  40682e:	outs   dx,BYTE PTR ds:[esi]
  40682f:	pusha  
  406830:	xchg   ebp,eax
  406831:	xchg   esp,esp
  406833:	stos   DWORD PTR es:[edi],eax
  406834:	clc    
  406835:	jae    0x4067ba
  406837:	test   BYTE PTR [edi-0x63],al
  40683a:	aam    0x2f
  40683c:	ins    BYTE PTR es:[edi],dx
  40683d:	inc    esp
  40683e:	mov    eax,ds:0x5459c626
  406843:	js     0x4067ef
  406845:	sub    eax,0x5d6eb4f
  40684a:	push   edx
  40684b:	or     DWORD PTR gs:[edi],edx
  40684e:	js     0x4068a7
  406850:	ins    DWORD PTR es:[edi],dx
  406851:	or     DWORD PTR [ebx-0x8ef919f],0xfd67c081
  40685b:	xlat   BYTE PTR ds:[ebx]
  40685c:	xchg   ebp,eax
  40685d:	sub    esp,DWORD PTR [edi-0x16137bca]
  406863:	xchg   esi,eax
  406864:	idiv   dl
  406866:	addr16 xor eax,0x92dc64a5
  40686c:	jg     0x4068c9
  40686e:	rcl    DWORD PTR [ebx],1
  406870:	rcr    DWORD PTR [ecx+0x2782da68],1
  406876:	inc    ebp
  406877:	cmp    BYTE PTR [ebp-0x36ef6ed6],bh
  40687d:	aaa    
  40687e:	adc    DWORD PTR [ecx-0x3f],ebx
  406881:	xchg   edi,ebp
  406883:	mov    ebp,DWORD PTR [ebp-0x19c352cc]
  406889:	or     eax,0xa928fd63
  40688e:	leave  
  40688f:	mov    cl,0xdb
  406891:	(bad)  
  406892:	dec    esp
  406893:	and    al,al
  406895:	mov    edx,0x1899fb7e
  40689a:	push   ds
  40689b:	inc    edx
  40689c:	jge    0x40691b
  40689e:	push   ecx
  40689f:	push   esi
  4068a0:	sbb    ebx,edx
  4068a2:	retf   0x8e97
  4068a5:	(bad)  
  4068a6:	dec    eax
  4068a7:	cmp    DWORD PTR [ebx],0x7008791e
  4068ad:	leave  
  4068ae:	jle    0x406880
  4068b0:	fmulp  st(5),st
  4068b2:	aam    0x21
  4068b4:	sar    DWORD PTR [esi],0xee
  4068b7:	stc    
  4068b8:	jns    0x406883
  4068ba:	nop
  4068bb:	or     al,0xc1
  4068bd:	loopne 0x40693e
  4068bf:	ficomp DWORD PTR [edi-0x46dcec83]
  4068c5:	or     DWORD PTR [esp+edx*1-0x58a4422e],eax
  4068cc:	push   ss
  4068cd:	dec    edi
  4068ce:	lods   al,BYTE PTR ds:[esi]
  4068cf:	pop    edi
  4068d0:	ret    
  4068d1:	scas   al,BYTE PTR es:[edi]
  4068d2:	sbb    al,BYTE PTR [ecx-0x1975100]
  4068d8:	push   esp
  4068d9:	or     DWORD PTR [eax-0x7aec6f30],0xffffff88
  4068e0:	(bad)  
  4068e1:	mov    dl,0x65
  4068e3:	(bad)  
  4068e4:	push   es
  4068e5:	lds    ebp,FWORD PTR [eax]
  4068e7:	out    dx,al
  4068e8:	adc    DWORD PTR [ecx+ebx*4+0x5f],ebx
  4068ec:	mov    esi,0x8431626d
  4068f1:	xor    DWORD PTR [edx-0x53030cba],eax
  4068f7:	xor    ah,0xa6
  4068fa:	lahf   
  4068fb:	test   eax,0x8a31cd66
  406900:	cs stc 
  406902:	pop    eax
  406903:	sub    esp,eax
  406905:	icebp  
  406906:	xor    dl,BYTE PTR [edi-0x690c658a]
  40690c:	xor    BYTE PTR [ebx-0x2e45c300],al
  406912:	or     ebx,DWORD PTR [esi-0x4c]
  406915:	in     eax,dx
  406916:	fsub   QWORD PTR [esi]
  406918:	fcmovbe st,st(0)
  40691a:	lods   al,BYTE PTR ds:[esi]
  40691b:	jmp    0xcd3b3a1f
  406920:	mov    dl,dl
  406922:	popf   
  406923:	cmp    bl,cl
  406925:	jp     0x4068a8
  406927:	and    edi,DWORD PTR [ecx-0x35]
  40692a:	add    DWORD PTR [ebx+0x677c84bc],edx
  406930:	and    bh,BYTE PTR [esi+0x621b451d]
  406936:	stos   BYTE PTR es:[edi],al
  406937:	adc    edi,ecx
  406939:	daa    
  40693a:	cs dec esi
  40693c:	sbb    ecx,0xafffa5e
  406942:	call   0xa2c1:0xf7ad51f0
  406949:	or     eax,0x7dfa55be
  40694e:	mov    eax,0xff3f949
  406953:	mov    eax,ds:0x611f1dbd
  406958:	mov    ecx,0x26a23d03
  40695d:	push   0x68bca5b8
  406962:	test   BYTE PTR [edi+0x4b531a8b],dh
  406968:	cmp    eax,0x97a08e98
  40696d:	je     0x406974
  40696f:	out    dx,eax
  406970:	mov    edi,0xc910d622
  406975:	push   eax
  406976:	jo     0x4069f3
  406978:	xor    DWORD PTR [eax+0x6cd77d43],edi
  40697e:	ret    
  40697f:	sbb    eax,0x40eb6fba
  406984:	es and ebx,esp
  406987:	inc    eax
  406988:	ds push ecx
  40698a:	ficomp DWORD PTR [esi]
  40698c:	or     al,0x87
  40698e:	sub    al,0xc5
  406990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406991:	inc    eax
  406992:	call   0xc0c235a8
  406997:	jnp    0x40698e
  406999:	jle    0x4069ba
  40699b:	(bad)  
  40699c:	fild   DWORD PTR [edi-0x132709c4]
  4069a2:	pop    edx
  4069a3:	adc    ebp,DWORD PTR [edx]
  4069a5:	pusha  
  4069a6:	test   DWORD PTR [esi+0x6a],0x2caff50c
  4069ad:	pop    edi
  4069ae:	xor    BYTE PTR [ecx],ah
  4069b0:	fistp  DWORD PTR [ebp-0x35]
  4069b3:	inc    cl
  4069b5:	mov    eax,ds:0xc500eaf
  4069ba:	aaa    
  4069bb:	push   ecx
  4069bc:	pop    ds
  4069bd:	mov    ds:0x113690ee,al
  4069c2:	pop    esi
  4069c3:	mov    bl,0xfb
  4069c5:	stc    
  4069c6:	dec    ebx
  4069c7:	popf   
  4069c8:	xor    BYTE PTR [esi-0x63901170],dh
  4069ce:	mov    bl,0x38
  4069d0:	jmp    0xab4c:0x13f1faaf
  4069d7:	dec    ebx
  4069d8:	mov    dl,0xea
  4069da:	out    0xcb,al
  4069dc:	fadd   DWORD PTR [ebx+0x6c]
  4069df:	mov    al,BYTE PTR [ecx-0xc]
  4069e2:	mov    esi,0xb24cca9c
  4069e7:	fst    DWORD PTR [edi-0x1c]
  4069ea:	jmp    0x2080:0xa8cd6f16
  4069f1:	retf   0xcd0d
  4069f4:	call   0x8e5c02bf
  4069f9:	cmp    bl,BYTE PTR [esi]
  4069fb:	dec    esp
  4069fc:	ja     0x406a54
  4069fe:	mov    eax,ds:0xf3fb4e60
  406a03:	jns    0x4069ed
  406a05:	aaa    
  406a06:	cmc    
  406a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a08:	pushf  
  406a09:	xchg   ebp,eax
  406a0a:	and    dh,BYTE PTR [ebp-0x3a]
  406a0d:	clc    
  406a0e:	fwait
  406a0f:	xchg   BYTE PTR [ecx],bh
  406a11:	fs cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  406a14:	mov    esi,DWORD PTR [ecx+0x25]
  406a17:	shl    ebx,cl
  406a19:	stc    
  406a1a:	retf   0xb825
  406a1d:	imul   edi,DWORD PTR [edx+0x5d],0x67485134
  406a24:	jl     0x4069da
  406a26:	ins    DWORD PTR es:[edi],dx
  406a27:	add    al,dl
  406a29:	lds    ebx,FWORD PTR fs:[edi-0x4f]
  406a2d:	jno    0x406a3c
  406a2f:	cmc    
  406a30:	int    0x15
  406a32:	mov    esp,0x3733c75c
  406a37:	pop    ss
  406a38:	dec    esp
  406a39:	xchg   edx,eax
  406a3a:	push   ebx
  406a3b:	xor    eax,0x58c752da
  406a40:	inc    ebp
  406a41:	call   0x68908258
  406a46:	pop    ecx
  406a47:	xchg   edi,eax
  406a48:	lahf   
  406a49:	pop    eax
  406a4a:	outs   dx,DWORD PTR ds:[esi]
  406a4b:	jnp    0x406ac5
  406a4d:	addr16 (bad) 
  406a50:	lea    ecx,[esi+0x14]
  406a53:	pop    es
  406a54:	mov    ds:0x44dfcd5,eax
  406a59:	dec    ebx
  406a5a:	test   ebx,esp
  406a5c:	push   ss
  406a5d:	dec    edi
  406a5e:	test   DWORD PTR [esi],esp
  406a60:	or     BYTE PTR [edx+ecx*1+0x61a38123],bh
  406a67:	jl     0x4069fe
  406a69:	into   
  406a6a:	xor    DWORD PTR [esi+ebp*2+0x2d],ebx
  406a6e:	arpl   WORD PTR [eax+ecx*8],cx
  406a71:	pop    ebp
  406a72:	test   al,0xf7
  406a74:	or     eax,edi
  406a76:	rcl    BYTE PTR [edi-0x66b7ea6f],1
  406a7c:	mov    dl,0x24
  406a7e:	ror    BYTE PTR [eax],1
  406a80:	xor    dl,BYTE PTR ds:0xabc9776e
  406a86:	ficomp WORD PTR [eax+0xf1e2eef]
  406a8c:	adc    al,al
  406a8e:	stos   DWORD PTR es:[edi],eax
  406a8f:	retf   
  406a90:	daa    
  406a91:	jb     0x406ad2
  406a93:	call   0xf7044636
  406a98:	jne    0x406a4d
  406a9a:	dec    ebx
  406a9b:	test   DWORD PTR [esi+0x54],0xcf106b91
  406aa2:	or     ebx,DWORD PTR [edi-0x56]
  406aa5:	imul   ebx,DWORD PTR [edx-0x6f],0xcba35334
  406aac:	in     al,dx
  406aad:	jl     0x406aec
  406aaf:	daa    
  406ab0:	dec    esi
  406ab1:	mov    ds:0x71024c2b,al
  406ab6:	lods   eax,DWORD PTR ds:[esi]
  406ab7:	cs inc ecx
  406ab9:	ror    ah,cl
  406abb:	into   
  406abc:	fwait
  406abd:	jne    0x406aec
  406abf:	fbld   TBYTE PTR [ecx+0x68fbec0]
  406ac5:	ret    
  406ac6:	lods   al,BYTE PTR ds:[esi]
  406ac7:	jmp    0x641c:0x5ee11e93
  406ace:	mov    al,ds:0x53182efd
  406ad3:	dec    eax
  406ad4:	sub    edx,DWORD PTR [ebp-0x28]
  406ad7:	pusha  
  406ad8:	xchg   esp,eax
  406ad9:	ja     0x406b31
  406adb:	jl     0x406a69
  406add:	or     eax,0x6d5382e3
  406ae2:	xchg   edi,eax
  406ae3:	lds    esi,FWORD PTR [ebp-0x60]
  406ae6:	fild   QWORD PTR [eax+0x1bdf6131]
  406aec:	or     BYTE PTR [ebx],bl
  406aee:	lods   eax,DWORD PTR ds:[esi]
  406aef:	cmp    ebp,esp
  406af1:	or     BYTE PTR [ecx-0x1c],ah
  406af4:	mov    dl,BYTE PTR ds:0x766c0de6
  406afa:	lock fcom DWORD PTR [edx+0x4b01597f]
  406b01:	xor    eax,0x3567cb3d
  406b06:	add    al,0x31
  406b08:	ja     0x406ade
  406b0a:	mov    edi,0xdce59eb5
  406b0f:	je     0x406b50
  406b11:	add    cl,bh
  406b13:	mov    ebx,0xdeb08c01
  406b18:	adc    esp,DWORD PTR [ebp+ecx*1+0x76]
  406b1c:	(bad)  
  406b1d:	shl    edi,1
  406b1f:	gs cli 
  406b21:	xchg   BYTE PTR [esi+0x4306f50e],bh
  406b27:	mov    eax,ds:0xa436400f
  406b2c:	adc    cl,BYTE PTR [esi-0x3c]
  406b2f:	or     bh,bh
  406b31:	jmp    0x80af9c4e
  406b36:	sub    ebx,esi
  406b38:	mov    ebp,0xfd07469d
  406b3d:	jmp    0x116c42b
  406b42:	nop
  406b43:	jmp    0x5e0d:0x93d8fb3d
  406b4a:	test   ecx,0xd9ce22ed
  406b50:	lock pop esp
  406b52:	mov    ecx,edi
  406b54:	push   edi
  406b55:	add    cl,BYTE PTR [ebx+0x175ce628]
  406b5b:	xor    ebx,eax
  406b5d:	push   esp
  406b5e:	mov    dl,0x29
  406b60:	mov    bh,0x77
  406b62:	jae    0x406bc0
  406b64:	mov    al,0xe
  406b66:	mov    edx,eax
  406b68:	add    al,0x72
  406b6a:	jns    0x406b9d
  406b6c:	mov    eax,0xe6141da4
  406b71:	pop    ss
  406b72:	popa   
  406b73:	push   es
  406b74:	cmp    eax,0x884a777e
  406b79:	sub    ah,BYTE PTR [esi]
  406b7b:	jle    0x406bd7
  406b7d:	pop    esp
  406b7e:	push   cs
  406b7f:	in     al,dx
  406b80:	test   al,0xa0
  406b82:	jp     0x406b5e
  406b84:	sbb    al,0xc0
  406b86:	inc    eax
  406b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b88:	sbb    bl,BYTE PTR [ecx-0x5]
  406b8b:	scas   eax,DWORD PTR es:[edi]
  406b8c:	out    dx,al
  406b8d:	or     cl,BYTE PTR [eax+0x4a]
  406b90:	mov    ah,0x1e
  406b92:	arpl   sp,bp
  406b94:	dec    edi
  406b95:	sbb    DWORD PTR [edi-0x64],esp
  406b98:	inc    ebp
  406b99:	pop    edx
  406b9a:	into   
  406b9b:	jae    0x406b7a
  406b9d:	cdq    
  406b9e:	call   0xb86f:0x87c60b7f
  406ba5:	lea    esp,[ebp-0x18]
  406ba8:	out    0x93,al
  406baa:	mov    bl,0x48
  406bac:	xor    al,0x51
  406bae:	cmc    
  406baf:	imul   esp,DWORD PTR [edx+0x5cda5b56],0xffffff86
  406bb6:	xor    DWORD PTR [ebx],eax
  406bb8:	or     ebp,DWORD PTR [ecx+0x58]
  406bbb:	inc    esi
  406bbc:	lods   eax,DWORD PTR ds:[esi]
  406bbd:	jo     0x406b47
  406bbf:	ret    
  406bc0:	add    bl,bl
  406bc2:	xor    eax,0x9c3c77b8
  406bc7:	mov    ?,WORD PTR [ebx-0x4]
  406bca:	and    ecx,esp
  406bcc:	mov    ch,0x18
  406bce:	ror    DWORD PTR [esi-0x5],cl
  406bd1:	xchg   esp,eax
  406bd2:	inc    ecx
  406bd3:	push   esp
  406bd4:	lods   eax,DWORD PTR ds:[esi]
  406bd5:	cli    
  406bd6:	push   0x4a334e4f
  406bdb:	jecxz  0x406c34
  406bdd:	pop    edi
  406bde:	or     al,0xab
  406be0:	jge    0x406bf7
  406be2:	jne    0x406bf0
  406be4:	cdq    
  406be5:	ret    0xe591
  406be8:	adc    eax,0x13094a99
  406bed:	or     eax,DWORD PTR [edx+0x5f938dea]
  406bf3:	cmp    BYTE PTR [eax+0x55],cl
  406bf6:	cmp    BYTE PTR [edx-0x4f],dh
  406bf9:	add    bl,BYTE PTR [esi]
  406bfb:	adc    al,0x7a
  406bfd:	or     edx,ebp
  406bff:	mov    ebx,0xd79b3ffe
  406c04:	nop
  406c05:	add    al,0xa2
  406c07:	push   ds
  406c08:	pop    es
  406c09:	cmp    BYTE PTR [esp+edi*2-0x6105cc2c],0xec
  406c11:	jmp    0x406ba3
  406c13:	xchg   edx,eax
  406c14:	jnp    0x406c64
  406c16:	mov    bh,0x0
  406c18:	adc    eax,0x55c2a32
  406c1d:	xchg   ebp,eax
  406c1e:	sbb    DWORD PTR es:0x4c41d82b,ebx
  406c25:	imul   esp,DWORD PTR [edi+0x5c],0xcac8b28b
  406c2c:	je     0x406c4b
  406c2e:	call   0x92895502
  406c33:	pop    eax
  406c34:	shr    DWORD PTR [ecx-0xa],1
  406c37:	add    eax,0x350b0d45
  406c3c:	adc    al,0x9e
  406c3e:	rol    BYTE PTR [ebx+0x2e],0x5b
  406c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c43:	gs push ss
  406c45:	cmc    
  406c46:	or     DWORD PTR [ecx+0x802b4ff],ebx
  406c4c:	push   ds
  406c4d:	jp     0x406c17
  406c4f:	push   edx
  406c50:	ds in  al,0x57
  406c53:	cvttps2pi mm2,QWORD PTR [esi-0x1a]
  406c57:	test   BYTE PTR [ebp+0x50],al
  406c5a:	nop
  406c5b:	mov    eax,0xa14c110a
  406c60:	mov    ebx,0x2b13c9e4
  406c65:	or     al,0x11
  406c67:	call   0x8805f82a
  406c6c:	jecxz  0x406c16
  406c6e:	call   0x8985ccfa
  406c73:	fnstsw WORD PTR [edx-0x5a]
  406c76:	adc    DWORD PTR [eax-0x783bda42],0x3d
  406c7d:	call   0x63cc:0x39110d1b
  406c84:	or     ecx,DWORD PTR [eax+eax*2-0x5f595653]
  406c8b:	lods   eax,DWORD PTR ds:[si]
  406c8d:	or     bl,0xc1
  406c90:	mov    cl,0x65
  406c92:	icebp  
  406c93:	mov    edx,0x891ed751
  406c98:	dec    edi
  406c99:	mov    WORD PTR [ecx-0x4e],?
  406c9c:	xchg   ecx,eax
  406c9d:	ja     0x406c61
  406c9f:	clc    
  406ca0:	pop    ds
  406ca1:	int    0x6
  406ca3:	mov    BYTE PTR [edx],ch
  406ca5:	add    BYTE PTR [ebp+0x1c2d3d62],bl
  406cab:	cmp    bl,BYTE PTR [ecx+0x49ce509f]
  406cb1:	jb     0x406cd9
  406cb3:	adc    al,0x20
  406cb5:	jl     0x406c86
  406cb7:	adc    eax,DWORD PTR [edx+0x17e28af4]
  406cbd:	into   
  406cbe:	mov    DWORD PTR [ebx-0x65],ebp
  406cc1:	adc    eax,edx
  406cc3:	mov    esi,0xb50f46b4
  406cc8:	mov    WORD PTR [ecx-0x6f],ss
  406ccb:	daa    
  406ccc:	mov    eax,ds:0x27bf829b
  406cd1:	retf   0x6ded
  406cd4:	and    ebp,DWORD PTR [esi-0x2e]
  406cd7:	fxch   st(0)
  406cd9:	fmul   DWORD PTR [esi-0x6c]
  406cdc:	mov    ah,0xee
  406cde:	or     eax,0x790f2ba3
  406ce3:	test   BYTE PTR [edx-0x7f986ac6],dh
  406ce9:	ja     0x406c79
  406ceb:	jecxz  0x406cfb
  406ced:	call   0x31d5:0xe2c56d6c
  406cf4:	inc    eax
  406cf5:	sti    
  406cf6:	pusha  
  406cf7:	mov    esi,0x359e2262
  406cfc:	rcr    ecx,cl
  406cfe:	dec    esp
  406cff:	hlt    
  406d00:	outs   dx,BYTE PTR ds:[esi]
  406d01:	icebp  
  406d02:	mov    dl,0xbd
  406d04:	cld    
  406d05:	rcl    DWORD PTR [edx],1
  406d07:	iret   
  406d08:	dec    eax
  406d09:	iret   
  406d0a:	pop    edi
  406d0b:	xor    ch,ah
  406d0d:	inc    ebp
  406d0e:	mov    dh,0xa4
  406d10:	mov    ds:0x9d807437,eax
  406d15:	add    eax,esi
  406d17:	adc    ch,BYTE PTR [esi+ebp*1]
  406d1a:	push   edx
  406d1b:	mov    edx,0x20e7f51d
  406d20:	out    0x50,al
  406d22:	add    DWORD PTR [edi+0xf1d21a8],edx
  406d28:	push   eax
  406d29:	out    dx,al
  406d2a:	je     0x406d79
  406d2c:	mov    ecx,0x96db277c
  406d31:	inc    ebx
  406d32:	mov    BYTE PTR [eax],ch
  406d34:	mov    dl,BYTE PTR [ebx-0x25]
  406d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d38:	cmp    ebx,DWORD PTR [ecx+0x14414f50]
  406d3e:	in     eax,dx
  406d3f:	mov    ah,0x3d
  406d41:	push   ebx
  406d42:	mov    ah,0xe7
  406d44:	(bad)  
  406d46:	adc    al,0xec
  406d48:	or     BYTE PTR [esi],0xe5
  406d4b:	js     0x406d4e
  406d4d:	inc    edi
  406d4e:	fdiv   QWORD PTR [edi-0x5]
  406d51:	xor    al,0x2b
  406d53:	lock aam 0x56
  406d56:	fld    QWORD PTR [esi]
  406d58:	push   0x34dd819a
  406d5d:	arpl   WORD PTR [ebp+0x32],bx
  406d60:	(bad)  [ebp-0x15]
  406d63:	out    0xf1,eax
  406d65:	push   edx
  406d66:	xadd   ah,dl
  406d69:	clc    
  406d6a:	lods   eax,DWORD PTR ds:[esi]
  406d6b:	call   FWORD PTR [eax+0x60dd5ade]
  406d71:	dec    ecx
  406d72:	mov    DWORD PTR [eax+0x46],ecx
  406d75:	ja     0x406d82
  406d77:	xchg   esi,eax
  406d78:	sub    ch,BYTE PTR [edx-0x6f0464ed]
  406d7e:	enter  0x1bee,0xfe
  406d82:	clc    
  406d83:	aam    0xab
  406d85:	stos   DWORD PTR es:[edi],eax
  406d86:	int    0xf1
  406d88:	sub    BYTE PTR [eax+eiz*8-0x20b1936d],al
  406d8f:	call   0xcf82:0x46ca440f
  406d96:	into   
  406d97:	std    
  406d98:	aad    0x3
  406d9a:	push   edi
  406d9b:	or     ecx,DWORD PTR [esi-0x148bd879]
  406da1:	pop    ebp
  406da2:	push   ss
  406da3:	fiadd  WORD PTR [eax+0x42]
  406da6:	adc    al,0x43
  406da8:	imul   eax,DWORD PTR [esi-0x31],0x91928b25
  406daf:	es (bad) 
  406db1:	int3   
  406db2:	push   0x47
  406db4:	lock xor ecx,edx
  406db7:	inc    ebx
  406db8:	jmp    0x844a:0xde8d6dab
  406dbf:	jmp    0xaa03:0x648aeb21
  406dc6:	adc    bh,dh
  406dc8:	and    cl,al
  406dca:	lds    eax,FWORD PTR [ecx+esi*8-0x49]
  406dce:	jmp    0x406d56
  406dd0:	js     0x406d81
  406dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dd3:	mov    ecx,0xd59630c1
  406dd8:	jnp    0x406e2a
  406dda:	jecxz  0x406e0d
  406ddc:	add    al,0x29
  406dde:	out    dx,eax
  406ddf:	and    eax,0x8c618d38
  406de4:	dec    eax
  406de5:	daa    
  406de6:	pop    DWORD PTR [esi+0x4a]
  406de9:	lock into 
  406deb:	test   eax,0x37739a57
  406df0:	outs   dx,DWORD PTR ds:[esi]
  406df1:	aam    0x2e
  406df3:	pop    ecx
  406df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406df5:	lods   al,BYTE PTR ds:[esi]
  406df6:	mov    WORD PTR [edi+ebx*2+0x6ab45296],?
  406dfd:	stos   BYTE PTR es:[edi],al
  406dfe:	xor    BYTE PTR [edx-0x7ebcb812],al
  406e04:	les    edi,FWORD PTR ds:[edx]
  406e07:	repnz sub DWORD PTR [ebx],ecx
  406e0a:	sbb    BYTE PTR [ecx+0x51],dl
  406e0d:	add    BYTE PTR [eax-0x62],dh
  406e10:	push   ecx
  406e11:	pop    ecx
  406e12:	adc    ecx,edx
  406e14:	repz or ah,BYTE PTR [edi]
  406e17:	jp     0x406e94
  406e19:	jle    0x406dfe
  406e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e1d:	out    0xd8,eax
  406e1f:	push   0xfffffff9
  406e21:	sahf   
  406e22:	inc    edi
  406e23:	inc    ebp
  406e24:	mov    ah,0x55
  406e26:	test   BYTE PTR [esi-0x7a],cl
  406e29:	aam    0x28
  406e2b:	fdiv   DWORD PTR [ebx+0x7f]
  406e2e:	jl     0x406e6b
  406e30:	sbb    eax,0x2ec3897e
  406e35:	mov    eax,0x2910df55
  406e3a:	(bad)  
  406e3d:	dec    eax
  406e3e:	out    0x6b,al
  406e40:	sbb    eax,0xaff61f42
  406e45:	adc    eax,0x9267a91a
  406e4a:	dec    ebx
  406e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e4c:	pop    es
  406e4d:	xor    BYTE PTR [ebx+ebx*1+0x62],0xd7
  406e52:	lods   eax,DWORD PTR gs:[esi]
  406e54:	into   
  406e55:	sub    DWORD PTR [edx-0x20],edi
  406e58:	mov    bl,0xab
  406e5a:	pop    ss
  406e5b:	icebp  
  406e5c:	aas    
  406e5d:	pop    ebx
  406e5e:	cmp    DWORD PTR [ebp-0x38],edx
  406e61:	inc    esi
  406e62:	sub    eax,0x54581509
  406e67:	push   0xa16df981
  406e6c:	mov    ds:0xc1de54a1,eax
  406e71:	dec    ebp
  406e72:	push   ebx
  406e73:	out    dx,eax
  406e74:	and    eax,0xa451b4ef
  406e79:	and    DWORD PTR [ecx+0x3764f258],esp
  406e7f:	cmp    edx,edi
  406e81:	jnp    0x406e04
  406e83:	stos   BYTE PTR es:[edi],al
  406e84:	cwde   
  406e85:	pop    ebx
  406e86:	and    eax,0xf6e64c4c
  406e8b:	arpl   WORD PTR [eax],dx
  406e8d:	pop    edx
  406e8e:	inc    esi
  406e8f:	jns    0x406e61
  406e91:	add    eax,0xe62d4a15
  406e96:	lock adc al,0x69
  406e99:	ret    
  406e9a:	and    ecx,DWORD PTR ds:0xa1d18ec5
  406ea0:	popf   
  406ea1:	sahf   
  406ea2:	ds das 
  406ea4:	jecxz  0x406ed0
  406ea6:	xor    al,0x39
  406ea8:	push   edx
  406ea9:	mov    dh,0x75
  406eab:	push   ecx
  406eac:	sub    ah,BYTE PTR [edi+ecx*4]
  406eaf:	jl     0x406e4e
  406eb1:	frstor [edi]
  406eb3:	mov    ds:0xf50ecc25,eax
  406eb8:	aad    0x86
  406eba:	push   0xffffff9a
  406ebc:	loope  0x406f12
  406ebe:	sahf   
  406ebf:	xchg   ecx,eax
  406ec0:	ds rcl dh,cl
  406ec3:	shl    BYTE PTR [ebp-0x3b2157b4],0x7f
  406eca:	lahf   
  406ecb:	push   esp
  406ecc:	leave  
  406ecd:	pushf  
  406ece:	jae    0x406ebb
  406ed0:	(bad)  
  406ed1:	in     al,0xd9
  406ed3:	cmp    edi,DWORD PTR [edx-0x256b81c8]
  406ed9:	enter  0x8229,0xb1
  406edd:	int3   
  406ede:	repnz retf 
  406ee0:	and    BYTE PTR [ecx],ah
  406ee2:	push   edx
  406ee3:	sbb    al,BYTE PTR [edi-0x40b51804]
  406ee9:	lock pop edx
  406eeb:	dec    esi
  406eec:	fild   DWORD PTR [ecx-0x63]
  406eef:	sub    eax,esp
  406ef1:	mov    eax,ecx
  406ef3:	pop    ebx
  406ef4:	fst    DWORD PTR [ebp+0x10]
  406ef7:	mov    ds:0xa66ba99e,al
  406efc:	xchg   ebx,eax
  406efd:	xchg   edx,eax
  406efe:	stos   BYTE PTR es:[edi],al
  406eff:	lea    ecx,[ebx-0x61]
  406f02:	mov    ecx,0x8f0691de
  406f07:	mov    edi,0xb90571cf
  406f0c:	xchg   edx,eax
  406f0d:	cli    
  406f0e:	ds mov esi,0x2811c32f
  406f14:	mov    bl,0xcc
  406f16:	mov    ?,WORD PTR [edx-0x4f]
  406f19:	jno    0x406ed9
  406f1b:	mov    bh,BYTE PTR [ecx-0x6dceab4]
  406f21:	mov    esp,0xc083f85e
  406f26:	cmp    ecx,DWORD PTR [ecx]
  406f28:	xchg   ecx,eax
  406f29:	adc    ebx,DWORD PTR [eax+0x7d616e20]
  406f2f:	jne    0x406f4a
  406f31:	fimul  WORD PTR [ebx]
  406f33:	cmp    ebx,DWORD PTR [edx]
  406f35:	or     esp,ebx
  406f37:	cmp    eax,0x3ac55c35
  406f3c:	cdq    
  406f3d:	imul   edx,DWORD PTR [ecx],0xffffffb4
  406f40:	in     eax,0x6b
  406f42:	clc    
  406f43:	pop    ebp
  406f44:	ins    BYTE PTR es:[edi],dx
  406f45:	jb     0x406f10
  406f47:	(bad)
  406f4c:	out    dx,eax
  406f4d:	adc    DWORD PTR [ecx-0x3d],edx
  406f50:	sub    BYTE PTR [eax+0x60793889],al
  406f56:	(bad)  
  406f57:	fcmove st,st(0)
  406f59:	ins    DWORD PTR es:[edi],dx
  406f5a:	fisttp WORD PTR [eax+0x35]
  406f5d:	jnp    0x406f67
  406f5f:	mov    ah,0x54
  406f61:	(bad)  
  406f62:	cmp    bl,dh
  406f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f65:	xlat   BYTE PTR ds:[ebx]
  406f66:	or     esi,DWORD PTR [edx]
  406f68:	(bad)  
  406f69:	in     al,dx
  406f6a:	jae    0x406f52
  406f6c:	sbb    BYTE PTR [ebx+0x59],0xa3
  406f70:	daa    
  406f71:	loope  0x406f62
  406f73:	mov    esi,eax
  406f75:	push   ebx
  406f76:	dec    edi
  406f77:	dec    esi
  406f78:	arpl   WORD PTR ss:0x12f41977,bp
  406f7f:	test   eax,0x5987efe
  406f84:	push   esp
  406f85:	ins    BYTE PTR es:[edi],dx
  406f86:	aam    0x21
  406f88:	mov    BYTE PTR [ebx+eiz*2+0x7fcb50d0],bh
  406f8f:	mov    WORD PTR [ebx+edx*1+0xe],?
  406f93:	js     0x406fe9
  406f95:	or     eax,0x57a8874f
  406f9a:	jne    0x406f48
  406f9c:	lds    esp,FWORD PTR [eax-0x32]
  406f9f:	cmp    eax,0x4d98e504
  406fa4:	adc    dl,cl
  406fa6:	inc    ebx
  406fa7:	jmp    0xa570:0xed68572d
  406fae:	(bad)  
  406faf:	jne    0x407001
  406fb1:	jp     0x406f87
  406fb3:	jbe    0x406fbd
  406fb5:	and    eax,esi
  406fb7:	es je  0x407019
  406fba:	aaa    
  406fbb:	inc    esp
  406fbc:	fld    QWORD PTR [esi]
  406fbe:	retf   0x8c2b
  406fc1:	cmp    dl,bh
  406fc3:	inc    ecx
  406fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fc5:	mov    esi,0xaa778960
  406fca:	push   0x7f396972
  406fcf:	or     BYTE PTR [edi+0x37],cl
  406fd2:	or     BYTE PTR gs:[edx+0x44],bl
  406fd6:	rcl    DWORD PTR [edi+esi*1],cl
  406fd9:	mov    esp,0x754cd7e
  406fde:	stos   DWORD PTR es:[edi],eax
  406fdf:	(bad)  
  406fe0:	jmp    0xf331:0x6fc194ed
  406fe7:	cmp    ecx,ebp
  406fe9:	pop    es
  406fea:	push   edx
  406feb:	sub    DWORD PTR [esi+ecx*4-0x3b],eax
  406fef:	fucom  st(6)
  406ff1:	push   esp
  406ff2:	fwait
  406ff3:	cdq    
  406ff4:	out    dx,eax
  406ff5:	ins    BYTE PTR es:[edi],dx
  406ff6:	aad    0x7a
  406ff8:	aaa    
  406ff9:	jns    0x40702a
  406ffb:	clc    
  406ffc:	dec    edx
  406ffd:	popa   
  406ffe:	clc    
  406fff:	add    edi,esp
  407001:	push   cs
  407002:	aam    0x8d
  407004:	nop
  407005:	mov    esp,0x7751263b
  40700a:	retf   0x67b4
  40700d:	scas   eax,DWORD PTR es:[edi]
  40700e:	out    0x25,eax
  407010:	sbb    ebp,edi
  407012:	(bad)  
  407015:	sub    esp,ebx
  407017:	xor    BYTE PTR [ecx+0x5c],bl
  40701a:	sub    DWORD PTR [ebp+0x63419343],ebx
  407020:	pop    ebp
  407021:	nop
  407022:	pop    edx
  407023:	or     esi,DWORD PTR [ebx+0x7a265b50]
  407029:	jns    0x406ffd
  40702b:	or     al,0xc2
  40702d:	hlt    
  40702e:	mov    ds:0x3e083e7,al
  407033:	jnp    0x407051
  407035:	out    dx,al
  407036:	in     eax,0xad
  407038:	imul   ebx,ecx,0x55
  40703b:	shl    BYTE PTR [edi+0x5e],1
  40703e:	push   cs
  40703f:	inc    eax
  407040:	adc    DWORD PTR [esi-0x2],edx
  407043:	cmp    al,0xb1
  407045:	out    dx,al
  407046:	mov    ebp,0x137e87de
  40704b:	xor    al,0x1e
  40704d:	dec    ecx
  40704e:	in     eax,dx
  40704f:	sub    BYTE PTR [edi+0x21],bl
  407052:	imul   esp,DWORD PTR [esi-0xc42c1a0],0xffffffd6
  407059:	gs pop esi
  40705b:	cmp    BYTE PTR [eax+0x15],al
  40705e:	push   edx
  40705f:	mov    ecx,0x3ee7dee9
  407064:	push   eax
  407065:	push   esp
  407066:	jno    0x40702a
  407068:	lods   eax,DWORD PTR ds:[esi]
  407069:	mov    BYTE PTR [eax+0x562344ee],cl
  40706f:	sub    eax,0x1a93c4c9
  407074:	jl     0x406ff6
  407076:	imul   esi,ebx,0x1c
  407079:	sahf   
  40707a:	sub    ecx,esp
  40707c:	xlat   BYTE PTR ds:[ebx]
  40707d:	xor    eax,0x3e0e8b27
  407082:	or     al,bh
  407084:	rcl    BYTE PTR [edx+0x2b],0x4c
  407088:	add    ah,BYTE PTR [edi+ebp*8+0xf]
  40708c:	push   es
  40708d:	and    DWORD PTR [edx-0xa],ecx
  407090:	mov    edi,0x8137b56
  407095:	jbe    0x40701d
  407097:	jg     0x407073
  407099:	loope  0x407045
  40709b:	push   ebp
  40709c:	lods   eax,DWORD PTR ds:[esi]
  40709d:	jae    0x40706c
  40709f:	pop    es
  4070a0:	loope  0x407052
  4070a2:	jp     0x40704b
  4070a4:	mov    ah,0x89
  4070a6:	imul   ecx,DWORD PTR [ecx+esi*2+0x35],0x1c15bc0d
  4070ae:	shl    DWORD PTR [edx],0xf0
  4070b1:	and    al,0xef
  4070b3:	or     esi,DWORD PTR cs:[esi+0x4e]
  4070b7:	and    cl,BYTE PTR [eax-0x32]
  4070ba:	pop    ebx
  4070bb:	xor    BYTE PTR [esi],cl
  4070bd:	iret   
  4070be:	mov    esi,esp
  4070c0:	div    edx
  4070c2:	xchg   esi,eax
  4070c3:	pop    ds
  4070c4:	arpl   WORD PTR [esi-0x4d1202de],ax
  4070ca:	sub    BYTE PTR [ebp-0x7bc9b54],bl
  4070d0:	sahf   
  4070d1:	retf   0x6230
  4070d4:	(bad)  
  4070d5:	call   0xdfea7227
  4070da:	daa    
  4070db:	iret   
  4070dc:	outs   dx,DWORD PTR ds:[esi]
  4070dd:	xchg   BYTE PTR [esi-0x27],dl
  4070e0:	cmc    
  4070e1:	in     eax,0x3d
  4070e3:	cdq    
  4070e4:	adc    BYTE PTR [ecx+0x49aa95a8],cl
  4070ea:	push   ds
  4070eb:	fs fwait
  4070ed:	int3   
  4070ee:	sub    eax,0xdca35afb
  4070f3:	push   esi
  4070f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070f5:	inc    eax
  4070f6:	mov    cl,0x4b
  4070f8:	cli    
  4070f9:	inc    edi
  4070fa:	mov    WORD PTR [edi+0x6d077b],ss
  407100:	lea    esp,[ecx-0x3f9209d4]
  407106:	into   
  407107:	sub    edi,0x8cb44206
  40710d:	xchg   DWORD PTR [edx-0x2e5fcc2a],eax
  407113:	mov    ds:0xaf3d01f9,al
  407118:	push   ds
  407119:	inc    edx
  40711a:	or     eax,0x1b810075
  40711f:	jmp    0x4070b8
  407121:	daa    
  407122:	aaa    
  407123:	loop   0x40714b
  407125:	aaa    
  407126:	in     al,0x6f
  407128:	fwait
  407129:	mov    ds:0x760a87af,al
  40712e:	or     al,0xe8
  407130:	fsub   DWORD PTR [ebx+edi*8+0x45d4cc42]
  407137:	mov    WORD PTR [edx+0x52d139c2],es
  40713d:	outs   dx,BYTE PTR ds:[esi]
  40713e:	xchg   edx,eax
  40713f:	mov    ds:0x7bcfc812,eax
  407144:	(bad)
  407148:	(bad)  
  407149:	mov    esp,0x226931d7
  40714e:	pop    eax
  40714f:	pop    es
  407150:	les    eax,FWORD PTR [eax*4-0x2683d8b3]
  407157:	pop    ds
  407158:	imul   esi,DWORD PTR [edx+0x10],0x9b874fbb
  40715f:	es sub ecx,edi
  407162:	(bad)  
  407163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407164:	xchg   BYTE PTR [edi-0x392335d7],dl
  40716a:	cmp    edi,DWORD PTR [ebx-0x43]
  40716d:	fist   WORD PTR [esi]
  40716f:	aas    
  407170:	shl    DWORD PTR [eax+ebx*8+0x3f],1
  407174:	stos   DWORD PTR es:[edi],eax
  407175:	jae    0x407191
  407177:	(bad)  
  407178:	imul   edi,DWORD PTR [ebp-0x1e1b307b],0xffffffd3
  40717f:	sbb    DWORD PTR [edi-0x2983df07],ebx
  407185:	pop    ds
  407186:	popa   
  407187:	in     al,0x9b
  407189:	mov    ch,BYTE PTR [eax-0x5b74c0bd]
  40718f:	jmp    0xf58b:0x5829adf
  407196:	inc    esp
  407197:	add    eax,0x962908ec
  40719c:	outs   dx,DWORD PTR ds:[esi]
  40719d:	scas   eax,DWORD PTR es:[edi]
  40719e:	test   eax,esp
  4071a0:	inc    ebp
  4071a1:	icebp  
  4071a2:	out    0x70,al
  4071a4:	hlt    
  4071a5:	retf   0x3dc2
  4071a8:	bound  eax,QWORD PTR [edi]
  4071aa:	xchg   BYTE PTR ds:[ebp+0x5a],cl
  4071ae:	je     0x40721c
  4071b0:	leave  
  4071b1:	enter  0xcdbe,0xdc
  4071b5:	inc    ebp
  4071b6:	fstp   TBYTE PTR [edi]
  4071b8:	sahf   
  4071b9:	inc    esi
  4071ba:	adc    ecx,DWORD PTR [edx+0x19]
  4071bd:	loope  0x407225
  4071bf:	sahf   
  4071c0:	out    0xd2,al
  4071c2:	jmp    DWORD PTR [esi]
  4071c4:	fucomi st,st(4)
  4071c6:	lgs    edi,FWORD PTR [edx+0x7e4e5612]
  4071cd:	sti    
  4071ce:	push   es
  4071cf:	test   eax,0xb8c044bd
  4071d4:	jecxz  0x407190
  4071d6:	pop    ebp
  4071d7:	xchg   ebx,eax
  4071d8:	cmp    BYTE PTR [edx],cl
  4071da:	push   0xffffffcf
  4071dc:	test   BYTE PTR [edx+eiz*1],ah
  4071df:	inc    eax
  4071e0:	add    DWORD PTR [eax+0x66],eax
  4071e3:	mov    ds:0x5289fd1b,eax
  4071e8:	enter  0x4fdf,0xdb
  4071ec:	fistp  QWORD PTR [esi-0x2b8ef166]
  4071f2:	cwde   
  4071f3:	imul   ebx,DWORD PTR [ecx+edx*2+0x14d08fcb],0xffffff93
  4071fb:	jne    0x4071fa
  4071fd:	mov    cs,WORD PTR [eax-0x665a81f3]
  407203:	fwait
  407204:	mov    esp,0x4264fe81
  407209:	mov    ecx,0x3197ad4b
  40720e:	adc    DWORD PTR [bp-0x1e],ebp
  407212:	arpl   WORD PTR [ebx+0xf],dx
  407215:	jle    0x407238
  407217:	daa    
  407218:	jns    0x40724c
  40721a:	iret   
  40721b:	ret    
  40721c:	add    al,dh
  40721e:	push   esi
  40721f:	mov    esp,0x7651fe08
  407224:	outs   dx,DWORD PTR ds:[esi]
  407225:	push   edi
  407226:	lea    esi,[edi]
  407228:	shl    BYTE PTR [ebx+eiz*4],cl
  40722b:	popa   
  40722c:	sub    eax,0xfacd2b40
  407231:	stos   BYTE PTR es:[edi],al
  407232:	add    al,0x34
  407234:	lahf   
  407235:	xor    eax,0xc7fa8fdc
  40723a:	das    
  40723b:	mov    DWORD PTR [esp+ebp*4+0x25],ebx
  40723f:	and    ch,ch
  407241:	xchg   ebx,eax
  407242:	fisubr WORD PTR [ecx+0x35757027]
  407248:	retfw  
  40724a:	cmp    al,0x5d
  40724c:	imul   ecx,DWORD PTR [ebx+0x18b2954e],0x63cf3d93
  407256:	shl    esi,cl
  407258:	inc    ecx
  407259:	dec    ebx
  40725a:	fisubr WORD PTR [ebp-0x2496c266]
  407260:	fucom  st(1)
  407262:	es stos DWORD PTR es:[edi],eax
  407264:	mov    ecx,0xa423cab1
  407269:	sbb    eax,eax
  40726b:	inc    ecx
  40726c:	jle    0x4071fc
  40726e:	daa    
  40726f:	loopne 0x407244
  407271:	jle    0x4072d3
  407273:	pop    ecx
  407274:	jnp    0x407215
  407276:	push   esp
  407277:	push   ebp
  407278:	xchg   dl,bl
  40727a:	xchg   edi,eax
  40727b:	or     BYTE PTR [esi+0x36],cl
  40727e:	sbb    DWORD PTR ds:[edx-0x9c77307],esi
  407285:	add    BYTE PTR [edx-0x47],0xa4
  407289:	ror    DWORD PTR [eax+eax*1-0x2e68e2b2],cl
  407290:	in     eax,dx
  407291:	mov    ebx,0xead86fea
  407296:	sbb    BYTE PTR [esi-0xa25929e],dl
  40729c:	iret   
  40729d:	pop    eax
  40729e:	sbb    esi,DWORD PTR [ebp+0x7bacbe60]
  4072a4:	jmp    0x2b53d226
  4072a9:	outs   dx,DWORD PTR ds:[esi]
  4072aa:	std    
  4072ab:	pop    edi
  4072ac:	icebp  
  4072ad:	and    dh,dh
  4072af:	dec    ebp
  4072b0:	cmp    al,0xc7
  4072b2:	add    ah,BYTE PTR [ecx+0x4]
  4072b5:	push   0x67b9b313
  4072ba:	cmp    eax,0xea42e3a0
  4072bf:	es (bad) 
  4072c1:	jmp    0x554b:0x99d44230
  4072c8:	or     DWORD PTR [ebx+ebx*1],edi
  4072cb:	jmp    FWORD PTR [esi+0x68]
  4072ce:	xchg   esi,eax
  4072cf:	fwait
  4072d0:	add    eax,0x4e51c6b1
  4072d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072d6:	adc    bl,ch
  4072d8:	imul   ebp,DWORD PTR [edx],0xbfd085cc
  4072de:	adc    esp,DWORD PTR [edi-0x6c202b56]
  4072e4:	cmc    
  4072e5:	ret    0xf63
  4072e8:	mov    WORD PTR [ebp+0x6e896f49],?
  4072ee:	shl    eax,0xa1
  4072f1:	push   0x599b9003
  4072f6:	jno    0x5426e03d
  4072fc:	loope  0x4072cd
  4072fe:	add    eax,0x87389092
  407303:	in     eax,0x44
  407305:	pop    ecx
  407306:	test   eax,0x6b400a25
  40730b:	iret   
  40730c:	inc    ebx
  40730d:	outs   dx,DWORD PTR ds:[esi]
  40730e:	adc    BYTE PTR [ecx+0x7b],dl
  407311:	mov    ebp,0xe556f5eb
  407316:	push   ebx
  407317:	into   
  407318:	cmp    BYTE PTR [eax+0x46],al
  40731b:	sub    eax,0x718ba27f
  407320:	jg     0x4072b5
  407322:	pop    ss
  407323:	jo     0x407326
  407325:	bound  ebp,QWORD PTR [ebp-0x631b7b3e]
  40732b:	push   esp
  40732c:	xchg   BYTE PTR [ebp+0x5ca1597e],dl
  407332:	das    
  407333:	shl    BYTE PTR [ebx],cl
  407335:	hlt    
  407336:	nop
  407337:	xchg   ecx,eax
  407338:	push   ds
  407339:	jle    0x407327
  40733b:	add    ch,BYTE PTR [esi+eiz*2-0x700a6d3d]
  407342:	and    eax,0x8338d812
  407347:	imul   BYTE PTR [esi+ebx*4+0x3264462a]
  40734e:	daa    
  40734f:	out    dx,eax
  407350:	cmp    al,0xd3
  407352:	loop   0x40730e
  407354:	cdq    
  407355:	lock stos DWORD PTR es:[edi],eax
  407357:	jns    0x407383
  407359:	jne    0x4072e1
  40735b:	push   esp
  40735c:	cmp    BYTE PTR [edi+0x4f],al
  40735f:	das    
  407360:	nop
  407361:	pop    es
  407362:	pop    ss
  407363:	(bad)  
  407364:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  407366:	inc    edx
  407367:	or     edx,edx
  407369:	push   cs
  40736a:	imul   ecx,DWORD PTR [ecx],0x843cb9d1
  407370:	lea    edx,[eax]
  407372:	sub    BYTE PTR [edx+0x56],dl
  407375:	xchg   ebp,eax
  407376:	mov    ds:0xc140d179,eax
  40737b:	push   esp
  40737c:	lahf   
  40737d:	cli    
  40737e:	adc    al,0xfb
  407380:	pop    esp
  407381:	cmp    bh,BYTE PTR [edx+0x23485723]
  407387:	ins    BYTE PTR es:[edi],dx
  407388:	cwde   
  407389:	(bad)  
  40738b:	sbb    dl,ch
  40738d:	in     eax,dx
  40738e:	addr16 out dx,eax
  407390:	ss jo  0x4073e3
  407393:	fimul  WORD PTR [edx]
  407395:	mov    ecx,es
  407397:	icebp  
  407398:	ret    0x4d20
  40739b:	mov    dl,0xca
  40739d:	mov    dl,0x29
  40739f:	es pop eax
  4073a1:	mov    ebx,0xaba1d1bd
  4073a6:	out    dx,eax
  4073a7:	jno    0x4073fd
  4073a9:	lods   eax,DWORD PTR ds:[esi]
  4073aa:	pop    eax
  4073ab:	sub    bl,0x53
  4073ae:	loop   0x407355
  4073b0:	push   0x9e520628
  4073b5:	loop   0x4073e7
  4073b7:	adc    eax,0x6c115f06
  4073bc:	add    al,0xeb
  4073be:	or     ch,BYTE PTR [esi-0x5b]
  4073c1:	mov    bl,BYTE PTR [eax]
  4073c3:	jo     0x4073ea
  4073c5:	sub    eax,0x5dd1cbb4
  4073ca:	dec    ecx
  4073cb:	jecxz  0x40736b
  4073cd:	inc    ecx
  4073ce:	out    dx,eax
  4073cf:	xchg   esp,eax
  4073d0:	mov    eax,0x7468b7e3
  4073d5:	int    0xb6
  4073d7:	mov    esp,0xf80329ff
  4073dc:	push   ebp
  4073dd:	pop    ecx
  4073de:	aam    0xef
  4073e0:	sub    al,0xe8
  4073e2:	mov    dh,0xb
  4073e4:	cwde   
  4073e5:	imul   edx,DWORD PTR [edi],0xaa35c7df
  4073eb:	das    
  4073ec:	push   ebp
  4073ed:	xchg   edx,eax
  4073ee:	xor    DWORD PTR [esi+0x3c825c1e],esp
  4073f4:	je     0x407401
  4073f6:	in     eax,0x59
  4073f8:	xchg   esp,eax
  4073f9:	mov    ch,0x14
  4073fb:	xor    eax,0xe5388608
  407400:	mov    bh,0xb9
  407402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407403:	xchg   esi,eax
  407404:	push   0xffffffe8
  407406:	mov    eax,ds:0xe7b44505
  40740b:	cmp    BYTE PTR [esi-0x19],dh
  40740e:	jp     0x40740b
  407410:	or     BYTE PTR [eax+0x9d6d6ad],dl
  407416:	push   cs
  407417:	and    BYTE PTR [eax+0x1fd65b4],ah
  40741d:	loope  0x40747e
  40741f:	xor    ch,dl
  407421:	cmp    BYTE PTR [ebx+0x1f],ah
  407424:	add    eax,0x58de3816
  407429:	jle    0x407409
  40742b:	cmpxchg edi,ecx
  40742e:	and    dl,dh
  407430:	fiadd  WORD PTR [ecx]
  407432:	imul   eax,DWORD PTR [ebx-0x2c20fbd5],0xe9b4ea0
  40743c:	jno    0x407423
  40743e:	xor    dl,ch
  407440:	dec    esi
  407441:	jle    0x40746b
  407443:	push   ds
  407444:	lock out 0xe9,eax
  407447:	lea    edx,[esi]
  407449:	fstp   QWORD PTR [eax]
  40744b:	imul   eax,edi,0x325a3b43
  407451:	adc    al,0x89
  407453:	imul   edi,ebx,0xffffffc8
  407456:	aaa    
  407457:	add    al,0x1a
  407459:	frstor [ebx+0xe8dd70c]
  40745f:	push   ebp
  407460:	(bad)  
  407461:	jp     0x407458
  407463:	ins    BYTE PTR es:[edi],dx
  407464:	push   cs
  407465:	int    0x56
  407467:	test   al,0x77
  407469:	in     eax,0xf1
  40746b:	push   ecx
  40746c:	cmc    
  40746d:	push   edi
  40746e:	je     0x407409
  407470:	data16 xor ch,BYTE PTR [edi]
  407473:	shr    DWORD PTR [edx],0x4e
  407476:	sti    
  407477:	cmp    al,0x1a
  407479:	dec    esi
  40747a:	mov    dl,0xbf
  40747c:	rol    BYTE PTR [esi-0x2bdcabc1],1
  407482:	das    
  407483:	stc    
  407484:	out    dx,eax
  407485:	sub    eax,0x124713a1
  40748a:	leave  
  40748b:	fsub   QWORD PTR ds:0x8dad4b81
  407491:	stc    
  407492:	dec    ebp
  407493:	and    BYTE PTR [ebx-0x4b],ah
  407496:	add    al,0x1a
  407498:	cli    
  407499:	jle    0x7180b436
  40749f:	popa   
  4074a0:	mov    edi,0xdd1664
  4074a5:	cmp    dh,BYTE PTR [ecx-0x7d]
  4074a8:	mov    edi,?
  4074aa:	adc    al,0xa4
  4074ac:	xchg   edi,eax
  4074ad:	ret    0x2b51
  4074b0:	adc    al,0xdf
  4074b2:	pop    edi
  4074b3:	mov    DWORD PTR [ebp+0x5],ebx
  4074b6:	(bad)  
  4074b7:	and    ebx,DWORD PTR [esi-0x4a220a9e]
  4074bd:	(bad)
  4074c2:	mov    cl,BYTE PTR [edi+ecx*4+0x238bbb6]
  4074c9:	mov    ds:0x93c2a766,al
  4074ce:	jne    0x40753c
  4074d0:	xchg   edi,eax
  4074d1:	(bad)  
  4074d3:	push   0x19406d8f
  4074d8:	cmp    al,0x9d
  4074da:	and    edx,ebx
  4074dc:	pop    edx
  4074dd:	mov    esp,0xffb3ee16
  4074e2:	xchg   BYTE PTR [esi-0x16],dh
  4074e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074e6:	aad    0x6e
  4074e8:	inc    edx
  4074e9:	pop    esp
  4074ea:	call   0xc7be:0xc7c6ad44
  4074f1:	fs ror DWORD PTR gs:[edx-0x188d14f8],cl
  4074f9:	daa    
  4074fa:	inc    ebp
  4074fb:	lods   eax,DWORD PTR ds:[esi]
  4074fc:	push   ebx
  4074fd:	cmp    eax,0x323803cf
  407502:	clc    
  407503:	dec    edi
  407504:	loopne 0x40749d
  407506:	fimul  WORD PTR [edx]
  407508:	mov    edx,DWORD PTR [ebx+0x46]
  40750b:	fsubr  st(1),st
  40750d:	mov    eax,ds:0x802f7337
  407512:	popf   
  407513:	jo     0x40750e
  407515:	dec    edx
  407516:	inc    eax
  407517:	sbb    DWORD PTR [edx+0x26922a18],ebx
  40751d:	dec    esi
  40751e:	stc    
  40751f:	jge    0x4074d0
  407521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407522:	push   ebp
  407523:	mov    eax,0x30740bdc
  407528:	fwait
  407529:	xchg   edx,eax
  40752a:	inc    esp
  40752b:	lods   al,BYTE PTR ds:[esi]
  40752c:	iret   
  40752d:	pushf  
  40752e:	mov    ?,ebp
  407530:	cmp    eax,0x62de6c02
  407535:	out    0x4a,al
  407537:	mov    ds:0x90dd1be0,eax
  40753c:	mov    ecx,0xbe041cf0
  407541:	call   0x9d32:0x6d77c40e
  407548:	cwde   
  407549:	imul   ebp,DWORD PTR [eax],0xffffff8b
  40754c:	imul   esi,DWORD PTR [eax+esi*1+0x9],0xffffff92
  407551:	pop    esp
  407552:	mov    DWORD PTR [eax],0xa53134ea
  407558:	leave  
  407559:	out    dx,eax
  40755a:	sub    BYTE PTR ds:0x8cefe64c,dl
  407560:	aam    0x7b
  407562:	imul   ebp,ebx,0xc7af9b1c
  407568:	daa    
  407569:	adc    esi,DWORD PTR [edx+0x614fff96]
  40756f:	inc    edx
  407570:	mov    eax,0x9390f4f5
  407575:	aaa    
  407576:	jecxz  0x40754a
  407578:	jbe    0x4075d3
  40757a:	cmp    ah,BYTE PTR [edx]
  40757c:	mov    ah,0x25
  40757e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40757f:	push   edx
  407580:	adc    al,BYTE PTR [eax+0x31de6e8]
  407586:	cmp    BYTE PTR [edx-0x3f],cl
  407589:	daa    
  40758a:	push   eax
  40758b:	adc    al,0xbb
  40758d:	jnp    0x40755a
  40758f:	push   ecx
  407590:	and    BYTE PTR [edi+0x34],0x76
  407594:	popf   
  407595:	in     al,0x7a
  407597:	cmp    al,0x19
  407599:	jge    0x407613
  40759b:	mov    dh,0x5b
  40759d:	dec    edi
  40759e:	nop
  40759f:	sub    dl,BYTE PTR [esi+0x1d62a749]
  4075a5:	pop    eax
  4075a6:	sbb    al,0x55
  4075a8:	hlt    
  4075a9:	dec    edi
  4075aa:	cmp    DWORD PTR [ebx-0x6b],0x39b71df3
  4075b1:	sbb    eax,0xdfc98b7b
  4075b6:	ss into 
  4075b8:	sbb    BYTE PTR [ebp-0x44b8a520],ch
  4075be:	in     eax,0xab
  4075c0:	test   al,0x9
  4075c2:	adc    BYTE PTR [ebp+0x5fa5940],dh
  4075c8:	xchg   esp,eax
  4075c9:	add    esi,DWORD PTR [eax]
  4075cb:	jbe    0x4075eb
  4075cd:	pushf  
  4075ce:	xor    eax,0x7eea3466
  4075d3:	xchg   esi,eax
  4075d4:	mov    BYTE PTR [esi],ah
  4075d6:	jae    0x407559
  4075d8:	fimul  WORD PTR ds:0x9b38df68
  4075de:	leave  
  4075df:	sub    dl,BYTE PTR [edx+eax*2+0x5f]
  4075e3:	fmul   st,st(3)
  4075e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075e6:	ror    ah,0x85
  4075e9:	pop    ds
  4075ea:	retf   0xfc1
  4075ed:	stos   BYTE PTR es:[edi],al
  4075ee:	push   edi
  4075ef:	mov    dh,0x0
  4075f1:	cdq    
  4075f2:	in     al,0x13
  4075f4:	xor    DWORD PTR [ebx+0x6da459f5],ebp
  4075fa:	jp     0x4075bb
  4075fc:	mov    cl,0xef
  4075fe:	fcmovnbe st,st(3)
  407600:	popf   
  407601:	mov    dh,BYTE PTR [esi+edi*2+0x186ab762]
  407608:	ret    0x9b5c
  40760b:	mov    eax,0x65567019
  407610:	pop    ds
  407611:	push   ebx
  407612:	(bad)  
  407613:	idiv   BYTE PTR [eax+ebp*8+0x17]
  407617:	push   0x74
  407619:	mov    edx,0xa1162f1
  40761e:	daa    
  40761f:	call   0xe1cd:0xa32d4a82
  407626:	and    esi,DWORD PTR [edi]
  407628:	ret    
  407629:	cmp    ah,BYTE PTR [edi-0x21]
  40762c:	mov    ds:0xa9a85cf7,eax
  407631:	and    BYTE PTR [ebx+0x729c7b60],ah
  407637:	nop
  407638:	xor    esp,DWORD PTR [edi+0x7b360276]
  40763e:	in     al,0x8
  407640:	mov    WORD PTR [edx-0x3c],fs
  407643:	ins    BYTE PTR es:[edi],dx
  407644:	adc    bh,dl
  407646:	pop    DWORD PTR [edx+ecx*1-0x19]
  40764a:	cmp    al,0xe6
  40764c:	xchg   edi,eax
  40764d:	retf   
  40764e:	je     0x4076ab
  407650:	push   esi
  407651:	enter  0xfa8c,0x16
  407655:	test   DWORD PTR [edx+0x21ce533d],ebx
  40765b:	lock stc 
  40765d:	mov    ah,0x55
  40765f:	dec    ebp
  407660:	clc    
  407661:	sar    edx,1
  407663:	out    0xa5,eax
  407665:	ds pop edx
  407667:	popa   
  407668:	mov    bh,BYTE PTR [ecx]
  40766a:	jg     0x4076b8
  40766c:	pop    esi
  40766d:	dec    eax
  40766e:	add    BYTE PTR [eax+ebp*8+0x64],ah
  407672:	xchg   esp,eax
  407673:	sbb    bl,bl
  407675:	or     DWORD PTR [eax-0x5a456852],0x522290a6
  40767f:	and    eax,0x3be8e03c
  407684:	scas   eax,DWORD PTR es:[edi]
  407685:	cmp    DWORD PTR [esi],ebp
  407687:	fldcw  WORD PTR [edx+0x18c5b78]
  40768d:	data16 stos BYTE PTR es:[edi],al
  40768f:	cmc    
  407690:	ins    BYTE PTR es:[edi],dx
  407691:	popf   
  407692:	mov    ebp,0x6b467a7
  407697:	les    edi,FWORD PTR [esi]
  407699:	popa   
  40769a:	sub    DWORD PTR [edi],esi
  40769c:	sbb    ch,cl
  40769e:	adc    BYTE PTR [edi-0x54],bl
  4076a1:	adc    esp,0xffffffb7
  4076a4:	jb     0x40768b
  4076a6:	mov    eax,ds:0x422f7e99
  4076ab:	inc    edi
  4076ac:	sub    eax,edx
  4076ae:	adc    DWORD PTR ds:0xa460ae97,edx
  4076b4:	xlat   BYTE PTR ds:[ebx]
  4076b5:	pushf  
  4076b6:	hlt    
  4076b7:	icebp  
  4076b8:	dec    edx
  4076b9:	xchg   edx,eax
  4076ba:	adc    ebx,DWORD PTR [ebx+0x71]
  4076bd:	dec    ecx
  4076be:	cmp    al,0x9b
  4076c0:	xchg   esi,eax
  4076c1:	out    0xa4,al
  4076c3:	out    0xb8,al
  4076c5:	in     al,0x6e
  4076c7:	or     eax,0xea0c1fcd
  4076cc:	fldcw  WORD PTR [eax+0x21]
  4076cf:	inc    ebp
  4076d0:	loope  0x407696
  4076d2:	(bad)  
  4076d4:	mov    dl,0xc4
  4076d6:	in     al,0xa3
  4076d8:	mov    DWORD PTR [ebx-0x12845b24],edi
  4076de:	push   eax
  4076df:	inc    edi
  4076e0:	mov    ah,0x28
  4076e2:	inc    edi
  4076e3:	adc    eax,0x65f020ed
  4076e8:	cmp    eax,0xb8970c95
  4076ed:	lea    eax,[edx-0x50]
  4076f0:	push   ebx
  4076f1:	xchg   esp,eax
  4076f2:	push   esi
  4076f3:	push   cs
  4076f4:	int    0xdc
  4076f6:	jmp    DWORD PTR [ebx+0x302d966a]
  4076fc:	rcl    ecx,0x94
  4076ff:	and    BYTE PTR [ebp+0x33],dh
  407702:	jge    0x407735
  407704:	pop    ebp
  407705:	out    0xe1,eax
  407707:	adc    cl,BYTE PTR [esi+0x63f3d78b]
  40770d:	lock push cs
  40770f:	ss mov al,0x71
  407712:	ret    
  407713:	ror    dl,0x44
  407716:	fwait
  407717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407718:	xor    BYTE PTR [edi+0x4a],dl
  40771b:	test   al,0x12
  40771d:	cmp    BYTE PTR [esp+edi*8-0x34],0x26
  407722:	push   esp
  407723:	cmp    eax,0x5d9d4475
  407728:	push   ebx
  407729:	xor    DWORD PTR [eax+0x3],esp
  40772c:	ror    BYTE PTR [edx-0x3ffaa4fa],0xdf
  407733:	out    dx,al
  407734:	add    DWORD PTR [edx],ecx
  407736:	(bad)  
  407737:	pop    ss
  407738:	dec    edx
  407739:	enter  0x9e99,0xea
  40773d:	das    
  40773e:	cmp    al,0x93
  407740:	sub    ch,ch
  407742:	fbstp  TBYTE PTR [edi]
  407744:	sbb    BYTE PTR [eax+0x52],bh
  407747:	js     0x407713
  407749:	inc    edi
  40774a:	push   ds
  40774b:	push   edx
  40774c:	in     eax,dx
  40774d:	pop    edx
  40774e:	pop    ss
  40774f:	retf   
  407750:	push   0x59
  407752:	imul   ecx,DWORD PTR [ecx+0x5ca5289a],0x6be9ea0
  40775c:	xor    dl,BYTE PTR [edi-0x50]
  40775f:	clc    
  407760:	test   al,0xa1
  407762:	pop    esi
  407763:	cmp    edi,DWORD PTR [ecx+0x7c209566]
  407769:	xor    eax,0x51f52e71
  40776e:	inc    edx
  40776f:	jno    0x4077cc
  407771:	xor    eax,0xad67f61
  407776:	mov    ebx,ebx
  407778:	and    eax,0x6695f87b
  40777d:	push   esp
  40777e:	inc    edi
  40777f:	mov    cl,0x7d
  407781:	xor    eax,0x76bd18a1
  407786:	cwde   
  407787:	jmp    0x9f8a069e
  40778c:	icebp  
  40778d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40778e:	scas   eax,DWORD PTR es:[edi]
  40778f:	and    eax,esi
  407791:	rcr    DWORD PTR [ebp+ebx*4-0x36],0xf5
  407796:	popa   
  407797:	push   edx
  407798:	mov    eax,0x2de30268
  40779d:	lea    edi,es:[eax+eiz*4]
  4077a1:	xchg   ebp,eax
  4077a2:	mov    al,ds:0xf706e1da
  4077a7:	mov    ebp,0x7def5274
  4077ad:	sbb    cl,BYTE PTR [ecx]
  4077af:	ins    BYTE PTR es:[edi],dx
  4077b0:	(bad)  
  4077b2:	ficomp DWORD PTR [edi]
  4077b4:	push   esi
  4077b5:	adc    esp,esi
  4077b7:	lds    esi,FWORD PTR [eax+0x13]
  4077ba:	fwait
  4077bb:	lods   eax,DWORD PTR ds:[esi]
  4077bc:	ss mov dl,0x23
  4077bf:	push   ecx
  4077c0:	xchg   DWORD PTR [eax],ebx
  4077c2:	call   0x8975:0xc4dc2220
  4077c9:	in     al,0xc1
  4077cb:	adc    BYTE PTR ds:0x8bebcd13,ch
  4077d1:	in     eax,dx
  4077d2:	xor    ecx,DWORD PTR [ecx]
  4077d4:	repz sub edx,esi
  4077d7:	and    ch,BYTE PTR [esi]
  4077d9:	stos   DWORD PTR es:[edi],eax
  4077da:	fs pop es
  4077dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077dd:	add    eax,0xd2399cf8
  4077e2:	push   ebx
  4077e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077e4:	inc    esp
  4077e5:	jb     0x4077db
  4077e7:	inc    ecx
  4077e8:	or     ch,BYTE PTR [ebp+0x2e]
  4077eb:	sub    dh,bl
  4077ed:	xchg   ecx,eax
  4077ee:	jbe    0x407783
  4077f0:	add    dl,BYTE PTR [esi]
  4077f2:	mov    edx,0xcb9aeef6
  4077f7:	jmp    0x7831cc9d
  4077fc:	sti    
  4077fd:	and    ecx,DWORD PTR [ebx]
  4077ff:	stos   BYTE PTR es:[edi],al
  407800:	stos   DWORD PTR es:[edi],eax
  407801:	mov    ah,0x6c
  407803:	push   esp
  407804:	mov    dl,BYTE PTR [eax]
  407806:	pop    esi
  407807:	xor    edi,DWORD PTR [ebp+0x72]
  40780a:	mov    edi,0x194c41c9
  40780f:	fs push eax
  407811:	sub    DWORD PTR [esi+0x4387044],edx
  407817:	jg     0x40785a
  407819:	sti    
  40781a:	cmp    eax,0xd3d5d23d
  40781f:	sbb    bl,al
  407821:	sub    al,0xdc
  407823:	stc    
  407824:	push   ebp
  407825:	add    BYTE PTR [ebx-0x3d],ah
  407828:	mov    edi,0x13f39a27
  40782d:	mov    ebx,0xe1bfb258
  407832:	push   cs
  407833:	scas   al,BYTE PTR es:[edi]
  407834:	sbb    ah,bl
  407836:	jle    0x4077de
  407838:	outs   dx,DWORD PTR ds:[esi]
  407839:	xor    cl,BYTE PTR [ecx-0x3539896b]
  40783f:	test   BYTE PTR [esi],0xac
  407842:	add    al,0x6a
  407844:	in     eax,dx
  407845:	icebp  
  407846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407847:	or     al,0xe7
  407849:	test   al,0x5
  40784b:	pop    ds
  40784c:	ss dec esp
  40784e:	iret   
  40784f:	arpl   WORD PTR [eax+0x63a5cd39],si
  407855:	and    cl,ah
  407857:	mov    esi,DWORD PTR [esi-0x58]
  40785a:	push   0x33ea98d1
  40785f:	je     0x407814
  407861:	dec    esi
  407862:	cmp    DWORD PTR [edi],edi
  407864:	int3   
  407865:	pop    esi
  407866:	pop    ebp
  407867:	std    
  407868:	mov    edi,0xbbec6b02
  40786d:	or     al,0xb9
  40786f:	cmp    eax,0x61cece15
  407874:	lock mov esp,0x10e19cb2
  40787a:	mov    bl,0xa6
  40787c:	loop   0x407824
  40787e:	push   cs
  40787f:	les    ecx,FWORD PTR [ebx]
  407881:	xchg   esp,eax
  407882:	mov    esp,0x99a0d35
  407887:	(bad)  
  407888:	retf   
  407889:	inc    esi
  40788a:	fcmovnbe st,st(6)
  40788c:	aaa    
  40788d:	mov    ecx,0xd2a29633
  407892:	lsl    ecx,bp
  407895:	mov    ebx,ds
  407897:	shl    ebp,cl
  407899:	mov    al,ds:0x28c3e801
  40789e:	sub    eax,0xe36e5675
  4078a3:	inc    esi
  4078a4:	daa    
  4078a5:	leave  
  4078a6:	push   esp
  4078a7:	stos   DWORD PTR es:[edi],eax
  4078a8:	cmp    bh,bl
  4078aa:	add    edi,edx
  4078ac:	dec    ebx
  4078ad:	repnz adc eax,0x2217f9e
  4078b3:	sbb    eax,edx
  4078b5:	stc    
  4078b6:	jae    0x4078df
  4078b8:	ins    DWORD PTR es:[edi],dx
  4078b9:	int    0x14
  4078bb:	pop    edx
  4078bc:	push   esi
  4078bd:	je     0x40788a
  4078bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078c1:	mov    esi,0x6e976b59
  4078c6:	mov    cl,0xb2
  4078c8:	lds    ebx,FWORD PTR [esi-0x6b]
  4078cb:	bound  ecx,QWORD PTR [ebx+esi*1-0x5903bb45]
  4078d2:	jns    0x407917
  4078d4:	cmp    DWORD PTR [ebx-0x7a],0x130cc85e
  4078db:	cdq    
  4078dc:	std    
  4078dd:	mov    ds:0x81a179c4,al
  4078e2:	add    bl,BYTE PTR [ebp-0x26]
  4078e5:	mov    bl,BYTE PTR [edi+0x2b]
  4078e8:	or     esp,DWORD PTR [ebx]
  4078ea:	dec    edi
  4078eb:	mov    al,ds:0x292d1f8c
  4078f0:	inc    ecx
  4078f1:	mov    cl,0x90
  4078f3:	fadd   st,st(7)
  4078f5:	dec    eax
  4078f6:	out    0x39,al
  4078f8:	mov    al,0xed
  4078fa:	mov    ecx,0x11c93fb0
  4078ff:	fadd   QWORD PTR [esi-0x32]
  407902:	sti    
  407903:	dec    edi
  407904:	sub    esp,esp
  407906:	nop
  407907:	xlat   BYTE PTR ds:[ebx]
  407908:	push   ss
  407909:	popf   
  40790a:	mov    ebp,DWORD PTR [edi+ecx*1+0x134c5e9c]
  407911:	pop    ecx
  407912:	mov    ch,0x52
  407914:	adc    eax,0x45e9055a
  407919:	into   
  40791a:	rcl    DWORD PTR [edi+0x330fe3e9],1
  407920:	fwait
  407921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407922:	push   ds
  407923:	dec    ebp
  407924:	test   BYTE PTR [edx-0x5b],0x9
  407928:	jne    0x40799d
  40792a:	addr16 sub ebx,edi
  40792d:	mov    eax,0x2325b2f6
  407932:	push   ss
  407933:	inc    eax
  407934:	pop    esp
  407935:	sbb    ch,bl
  407937:	mov    al,ds:0x1c60d72e
  40793c:	cmp    DWORD PTR [esi+edx*4-0x58],ebp
  407940:	adc    BYTE PTR [edi-0x2782ad36],cl
  407946:	jne    0x4078c8
  407948:	and    edi,DWORD PTR [ebp-0x48]
  40794b:	adc    dh,BYTE PTR [edi+0x14]
  40794e:	or     BYTE PTR [esi-0x6753710a],bl
  407954:	push   eax
  407955:	or     eax,0xbe38477a
  40795a:	or     edi,ecx
  40795c:	fwait
  40795d:	mov    ds:0xa3f13d29,al
  407962:	jb     0x4079af
  407964:	test   DWORD PTR [eax],esi
  407966:	inc    esp
  407967:	pop    es
  407968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407969:	xchg   eax,ebp
  40796b:	outs   dx,DWORD PTR ds:[esi]
  40796c:	push   0xffffffdc
  40796e:	mov    edx,0xd19626ea
  407973:	cmpxchg DWORD PTR [eax-0x157e011c],esp
  40797a:	xlat   BYTE PTR ds:[ebx]
  40797b:	dec    esi
  40797c:	test   al,0xb5
  40797e:	inc    edi
  40797f:	rcl    DWORD PTR [eax],0x83
  407982:	popf   
  407983:	fisub  DWORD PTR ss:[ebp+ecx*4+0xf]
  407988:	inc    edx
  407989:	sbb    BYTE PTR es:[edi],bl
  40798c:	or     eax,0xbf578585
  407991:	test   DWORD PTR [edi-0x3d],esi
  407994:	push   cs
  407995:	mov    al,ds:0x36ecacee
  40799a:	pusha  
  40799b:	out    0x2f,eax
  40799d:	in     al,0x3c
  40799f:	js     0x4079e2
  4079a1:	(bad)  
  4079a3:	mov    ebp,DWORD PTR [ebx-0x14]
  4079a6:	jno    0x407985
  4079a8:	enter  0x9849,0xff
  4079ac:	je     0x407a26
  4079ae:	loopne 0x407a27
  4079b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079b1:	rcl    DWORD PTR [ebx+ecx*4],0xce
  4079b5:	aas    
  4079b6:	test   eax,0x11cad0a8
  4079bb:	outs   dx,BYTE PTR ds:[esi]
  4079bc:	cli    
  4079bd:	imul   edx,DWORD PTR [edx+0x183b085c],0x21
  4079c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079c5:	pop    es
  4079c6:	lahf   
  4079c7:	adc    DWORD PTR [esi],eax
  4079c9:	xchg   ebx,eax
  4079ca:	outs   dx,BYTE PTR ds:[esi]
  4079cb:	bound  ebp,QWORD PTR [edi+0x15eed330]
  4079d1:	ss push edi
  4079d3:	mov    BYTE PTR [edi-0x6f],al
  4079d6:	dec    ebx
  4079d7:	mov    ds:0x3eb4177a,eax
  4079dc:	out    dx,eax
  4079dd:	fsubr  DWORD PTR [esi+0x17b24181]
  4079e3:	dec    eax
  4079e4:	xlat   BYTE PTR ss:[ebx]
  4079e6:	or     ebp,DWORD PTR [esp+ecx*1]
  4079e9:	addr16 ret 0xdb68
  4079ed:	push   ds
  4079ee:	jae    0x407a0a
  4079f0:	loopne 0x407a4d
  4079f2:	ret    
  4079f3:	add    al,0x2e
  4079f5:	sbb    ebx,DWORD PTR [ecx-0xbba74bc]
  4079fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4079fe:	sub    eax,ecx
  407a00:	mov    DWORD PTR [ebp-0xc],eax
  407a03:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  407a0a:	mov    eax,DWORD PTR [ebp-0x1c]
  407a0d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407a10:	sub    eax,ecx
  407a12:	mov    DWORD PTR [ebp-0x1c],eax
  407a15:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  407a1c:	mov    eax,DWORD PTR [ebp-0x20]
  407a1f:	mov    ecx,DWORD PTR [ebp-0x20]
  407a22:	sub    eax,ecx
  407a24:	mov    DWORD PTR [ebp-0x20],eax
  407a27:	mov    eax,DWORD PTR [ebp-0x2c]
  407a2a:	mov    ecx,DWORD PTR [ebp-0x20]
  407a2d:	mov    esi,0x7510899
  407a32:	xor    eax,esi
  407a34:	mov    edi,0x3272e0
  407a39:	add    eax,edi
  407a3b:	or     eax,ecx
  407a3d:	mov    DWORD PTR [ebp-0x20],eax
  407a40:	mov    eax,DWORD PTR [ebp-0x4]
  407a43:	mov    ecx,DWORD PTR [ebp-0x4]
  407a46:	jmp    0x409df0
  407a4b:	clc    
  407a4c:	mov    dh,0xeb
  407a4e:	cmp    DWORD PTR [ebx+0x707b9c77],0xad37e350
  407a58:	mov    dh,0x2e
  407a5a:	xchg   BYTE PTR [ebx-0x1a8585c4],ah
  407a60:	pop    edi
  407a61:	jp     0x407add
  407a63:	adc    edi,edi
  407a65:	pop    eax
  407a66:	test   eax,0xd775cb9
  407a6b:	xchg   ebx,eax
  407a6c:	pushf  
  407a6d:	xchg   ebx,eax
  407a6e:	out    dx,eax
  407a6f:	outs   dx,BYTE PTR ds:[esi]
  407a70:	mov    dh,0x69
  407a72:	in     eax,0x82
  407a74:	rcl    DWORD PTR [ecx+ebp*4-0x13fb0444],cl
  407a7b:	in     al,0x64
  407a7d:	out    0x90,eax
  407a7f:	fbld   TBYTE PTR [esi-0x38b25c0d]
  407a85:	pop    ecx
  407a86:	test   al,0x3d
  407a88:	div    BYTE PTR [eax+0x2e78207]
  407a8e:	jno    0x407adf
  407a90:	shl    BYTE PTR ds:0x3133458f,0x6e
  407a97:	inc    ecx
  407a98:	sub    edx,ebp
  407a9a:	sti    
  407a9b:	mov    edx,0x73b1ddf4
  407aa0:	int    0x93
  407aa2:	cs in  eax,0xe6
  407aa5:	jae    0x407a8a
  407aa7:	push   edx
  407aa8:	push   esi
  407aa9:	xchg   edx,eax
  407aaa:	(bad)  
  407aab:	pop    ss
  407aac:	sbb    ch,ah
  407aae:	ret    
  407aaf:	mov    dh,0xf7
  407ab1:	pop    ebx
  407ab2:	adc    bl,bh
  407ab4:	fcmove st,st(0)
  407ab6:	jmp    0xb0949aa1
  407abb:	xor    esp,DWORD PTR [esp+eax*2-0x6f9ca13c]
  407ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ac3:	adc    eax,0xe6e53e3c
  407ac8:	fild   WORD PTR [edx-0x73]
  407acb:	test   al,0xe3
  407acd:	daa    
  407ace:	adc    al,0x0
  407ad0:	xor    al,0x90
  407ad2:	neg    DWORD PTR [ebp-0x57]
  407ad5:	add    al,ah
  407ad7:	push   ss
  407ad8:	out    dx,al
  407ad9:	sti    
  407ada:	shl    al,1
  407adc:	loop   0x407b55
  407ade:	out    0x1a,al
  407ae0:	or     bh,bh
  407ae2:	cld    
  407ae3:	add    BYTE PTR [edi],ah
  407ae5:	xor    edx,esp
  407ae7:	fwait
  407ae8:	xchg   ebx,eax
  407ae9:	repz mov dl,dh
  407aec:	jg     0x407aa0
  407aee:	and    DWORD PTR [eax-0x7],ecx
  407af1:	fsubr  DWORD PTR [ebx-0x315ba406]
  407af7:	cli    
  407af8:	hlt    
  407af9:	(bad)  
  407afa:	js     0x407ad1
  407afc:	inc    ebx
  407afd:	sbb    BYTE PTR [edx-0xb],0x3c
  407b01:	pop    ebx
  407b02:	push   edx
  407b03:	push   ebx
  407b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b05:	in     eax,0xb3
  407b07:	adc    BYTE PTR [esi],bl
  407b09:	add    eax,0xcdb29d12
  407b0e:	dec    esp
  407b0f:	cmc    
  407b10:	frstor [ecx+0x69851198]
  407b16:	jno    0x407ae0
  407b18:	arpl   WORD PTR [eax],di
  407b1a:	and    BYTE PTR [ecx+0x3f61237],cl
  407b20:	sub    bh,dh
  407b22:	ins    BYTE PTR es:[edi],dx
  407b23:	and    ecx,DWORD PTR [ecx+0x24d9d685]
  407b29:	idiv   BYTE PTR [ecx+0x7ab9eb17]
  407b2f:	aam    0xcb
  407b31:	dec    eax
  407b32:	ins    DWORD PTR es:[edi],dx
  407b33:	test   BYTE PTR [eax-0x1fbafc08],cl
  407b39:	dec    esp
  407b3a:	clc    
  407b3b:	out    dx,al
  407b3c:	pop    es
  407b3d:	add    edx,esp
  407b3f:	jnp    0x407b7c
  407b41:	adc    DWORD PTR [eax-0x50],0x9069252f
  407b48:	mov    ebx,0xd5405f29
  407b4d:	xchg   edx,eax
  407b4e:	scas   eax,DWORD PTR es:[edi]
  407b4f:	pop    ss
  407b50:	shl    BYTE PTR [ecx+0x21f60a68],1
  407b56:	clc    
  407b57:	pusha  
  407b58:	repz xor DWORD PTR [edi-0x45],edx
  407b5c:	push   esp
  407b5d:	sub    al,0xa
  407b5f:	inc    ebx
  407b60:	test   eax,0xe7bd15e2
  407b65:	fstp   TBYTE PTR [ecx-0x33]
  407b68:	mov    ah,0x9e
  407b6a:	fs xchg edx,eax
  407b6c:	imul   edx,DWORD PTR [ebp-0x5b],0xffffff87
  407b70:	ret    0x301c
  407b73:	je     0x407ba3
  407b75:	dec    ebp
  407b76:	sub    al,0x7
  407b78:	fwait
  407b79:	test   eax,0x8d472dfe
  407b7e:	adc    ebp,DWORD PTR [ebx+0x33]
  407b81:	ds daa 
  407b83:	xor    dl,BYTE PTR [ebx]
  407b85:	shl    DWORD PTR [ecx+0x49],0xbb
  407b89:	or     BYTE PTR [edi],ch
  407b8b:	inc    ebx
  407b8c:	inc    esi
  407b8d:	ins    DWORD PTR es:[edi],dx
  407b8e:	pop    ds
  407b8f:	mov    bl,0x16
  407b91:	sbb    DWORD PTR [eax-0xd],ebp
  407b94:	and    al,0x34
  407b96:	jecxz  0x407b77
  407b98:	adc    eax,0xb9cf7009
  407b9d:	call   0x5a49:0x931a1c54
  407ba4:	xor    dl,BYTE PTR [edx+0x4976ff8]
  407baa:	cld    
  407bab:	imul   eax,DWORD PTR [edx-0x62],0xf209220
  407bb2:	pusha  
  407bb3:	adc    bl,BYTE PTR [esi-0x6e]
  407bb6:	push   ecx
  407bb7:	xchg   ebp,eax
  407bb8:	and    al,0x2f
  407bba:	pop    ecx
  407bbb:	repnz or edx,esi
  407bbe:	ds push 0xa
  407bc1:	bound  edx,QWORD PTR [esi+0x357d1a90]
  407bc7:	fnstcw WORD PTR [ecx]
  407bc9:	jnp    0x407bf4
  407bcb:	mov    DWORD PTR [ebp+0x72],ecx
  407bce:	je     0x407b6d
  407bd0:	lds    ebx,FWORD PTR [ebp+0xf]
  407bd3:	daa    
  407bd4:	daa    
  407bd5:	rol    BYTE PTR [ecx+0x66],0x9c
  407bd9:	fs ss xor bl,al
  407bdd:	xchg   ecx,eax
  407bde:	sub    eax,esp
  407be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407be1:	mov    eax,ds:0xef60ea
  407be6:	clc    
  407be7:	adc    BYTE PTR [eax+0x23],bh
  407bea:	inc    ebp
  407beb:	shl    BYTE PTR [ebx],cl
  407bed:	push   ecx
  407bee:	test   BYTE PTR [edi-0x69],dl
  407bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bf2:	mov    DWORD PTR [edx+0x105e806b],edx
  407bf8:	adc    DWORD PTR [ecx+0x62],0x71
  407bfc:	push   0xffffffdb
  407bfe:	add    al,0xe
  407c00:	push   cs
  407c01:	jmp    0x407bb2
  407c03:	inc    esi
  407c04:	fdiv   st,st(7)
  407c06:	xor    bh,bh
  407c08:	or     al,0xa0
  407c0a:	sbb    al,0x14
  407c0c:	cwde   
  407c0d:	inc    ebx
  407c0e:	pop    ecx
  407c0f:	adc    BYTE PTR [ecx],cl
  407c11:	fmul   QWORD PTR [ecx+0x18d0d217]
  407c17:	xchg   ebx,eax
  407c18:	lds    ecx,FWORD PTR [esi-0x3fcb9aa9]
  407c1e:	cmp    cl,ch
  407c20:	lds    edx,FWORD PTR [edx-0x1704f91]
  407c26:	jle    0x407c48
  407c28:	(bad)  
  407c29:	std    
  407c2a:	jecxz  0x407c3c
  407c2c:	mov    ds:0xec50636c,eax
  407c31:	cmp    bh,BYTE PTR [edx+0x48fe1a72]
  407c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c38:	pop    ecx
  407c39:	not    bh
  407c3b:	sub    eax,0x38f11519
  407c40:	rcl    ebp,1
  407c42:	sub    BYTE PTR [edx],0x4d
  407c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c46:	or     DWORD PTR [ecx],ebx
  407c48:	loopne 0x407c71
  407c4a:	inc    ebx
  407c4b:	mov    bl,0x8a
  407c4d:	and    DWORD PTR [ecx-0x37],0xffffffd8
  407c51:	fcmovbe st,st(7)
  407c53:	sub    eax,0x557b728f
  407c58:	jp     0x407ca2
  407c5a:	jns    0x407c17
  407c5c:	ins    BYTE PTR es:[edi],dx
  407c5d:	add    eax,0xe971e886
  407c62:	jne    0x407be4
  407c64:	mov    esi,ebx
  407c66:	hlt    
  407c67:	jl     0x407cc3
  407c69:	jo     0x407ccf
  407c6b:	out    0x8c,eax
  407c6d:	fcomp  QWORD PTR [ebx-0x72]
  407c70:	xchg   esp,edx
  407c72:	or     edx,0x825d44b6
  407c78:	hlt    
  407c79:	xor    dh,BYTE PTR [ecx+0x653ce78b]
  407c7f:	dec    esi
  407c80:	xor    bl,BYTE PTR [eax-0x3f5f82ea]
  407c86:	pop    ds
  407c87:	cli    
  407c88:	(bad)  
  407c89:	xor    ebp,0x8868c956
  407c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c90:	hlt    
  407c91:	mov    ebx,DWORD PTR [esi-0x5c]
  407c94:	add    DWORD PTR [edx],esi
  407c96:	in     al,0xc5
  407c98:	jo     0x407c67
  407c9a:	jae    0x407cb7
  407c9c:	into   
  407c9d:	loope  0x407cb9
  407c9f:	pand   mm6,QWORD PTR ds:0xb347a3ec
  407ca6:	(bad)  
  407ca7:	or     ah,BYTE PTR [edi-0x27]
  407caa:	daa    
  407cab:	mov    dl,0x38
  407cad:	pusha  
  407cae:	sub    eax,0x84ad11be
  407cb3:	out    dx,eax
  407cb4:	mov    al,0x61
  407cb6:	fs ds jbe 0x407c9b
  407cba:	xchg   edi,eax
  407cbb:	gs inc ebx
  407cbd:	jne    0x407ce9
  407cbf:	fisubr WORD PTR [eax+eax*8]
  407cc2:	dec    edx
  407cc3:	xchg   ebx,eax
  407cc4:	inc    ecx
  407cc5:	cmp    edi,DWORD PTR [ecx+eax*8-0x3f]
  407cc9:	jbe    0x407cbf
  407ccb:	and    esp,edx
  407ccd:	mov    bh,0xc8
  407ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd0:	div    eax
  407cd2:	popa   
  407cd3:	mov    eax,ds:0xa12c5073
  407cd8:	stc    
  407cd9:	xor    DWORD PTR [esi],0xffffffc0
  407cdc:	adc    eax,0x7505a13c
  407ce1:	sub    eax,0x981423f2
  407ce6:	sbb    DWORD PTR [edi],eax
  407ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce9:	mov    ecx,0xf0f9cfe6
  407cee:	mov    dl,dh
  407cf0:	scas   eax,DWORD PTR es:[edi]
  407cf1:	jmp    0x407ceb
  407cf3:	repnz das 
  407cf5:	inc    edi
  407cf6:	pushf  
  407cf7:	pushf  
  407cf8:	and    DWORD PTR [ebx+0x401ecb3f],0x52fbcb20
  407d02:	mul    BYTE PTR [esi-0x18]
  407d05:	in     al,0xc0
  407d07:	lahf   
  407d08:	out    0x1c,al
  407d0a:	cdq    
  407d0b:	cdq    
  407d0c:	and    DWORD PTR [ebx],edi
  407d0e:	dec    edx
  407d0f:	stos   BYTE PTR es:[edi],al
  407d10:	(bad)
  407d14:	shl    al,1
  407d16:	lock xchg edi,eax
  407d18:	cmc    
  407d19:	jmp    0x9589:0x43eeecd
  407d20:	(bad)  
  407d21:	popa   
  407d22:	retf   0x4963
  407d25:	popa   
  407d26:	nop
  407d27:	icebp  
  407d28:	inc    ecx
  407d29:	mov    dl,0x56
  407d2b:	je     0x407da9
  407d2d:	sbb    BYTE PTR ds:0xb1b19f6a,al
  407d33:	mov    al,ds:0x6d96faad
  407d38:	adc    eax,0x644ce4a1
  407d3d:	ins    BYTE PTR es:[edi],dx
  407d3e:	iret   
  407d3f:	sar    DWORD PTR [ebx],0x88
  407d42:	ins    DWORD PTR es:[edi],dx
  407d43:	and    al,0x9b
  407d45:	xchg   esi,eax
  407d46:	xor    DWORD PTR [ecx],0x19
  407d49:	mov    eax,0x209a278b
  407d4e:	imul   ebp,DWORD PTR [esi+0x33],0xffffff82
  407d52:	nop
  407d53:	push   edi
  407d54:	xchg   ebp,eax
  407d55:	fwait
  407d56:	ret    0x4a56
  407d59:	pop    ss
  407d5a:	enter  0x9c2c,0x23
  407d5e:	stos   BYTE PTR es:[edi],al
  407d5f:	fimul  WORD PTR [ebp-0x4429cf9f]
  407d65:	xchg   ecx,eax
  407d66:	pop    ecx
  407d67:	mov    al,0xff
  407d69:	ins    BYTE PTR es:[edi],dx
  407d6a:	xchg   esi,eax
  407d6b:	cli    
  407d6c:	adc    dh,dh
  407d6e:	mov    WORD PTR [ebp-0x127382ad],es
  407d74:	inc    ebx
  407d75:	div    DWORD PTR [edi+esi*8+0x3f5e7761]
  407d7c:	lods   al,BYTE PTR ds:[esi]
  407d7d:	mov    ah,BYTE PTR [ebx]
  407d7f:	add    eax,0x22be4929
  407d84:	add    eax,0x3195958c
  407d89:	cmp    DWORD PTR [edx+0x5d3fcc3e],ecx
  407d8f:	dec    edx
  407d90:	add    ch,BYTE PTR [ecx]
  407d92:	mov    eax,ds:0xef1e4931
  407d97:	in     eax,dx
  407d98:	into   
  407d99:	mov    eax,0xecc95da5
  407d9e:	pop    esi
  407d9f:	imul   eax,DWORD PTR [ebx],0x65
  407da2:	add    BYTE PTR [esi],dh
  407da4:	pop    esp
  407da5:	xor    DWORD PTR [esi+0x50c6c027],edi
  407dab:	dec    edx
  407dac:	dec    ebp
  407dad:	push   ebp
  407dae:	fld    TBYTE PTR [ecx+ebx*2]
  407db1:	xchg   ebp,eax
  407db2:	cmp    ch,BYTE PTR [eax+0x6c]
  407db5:	xor    al,BYTE PTR [ebx]
  407db7:	pop    edi
  407db8:	sahf   
  407db9:	dec    ebx
  407dba:	xchg   edi,eax
  407dbb:	sbb    al,0xa0
  407dbd:	pushaw 
  407dbf:	jbe    0x407d9e
  407dc1:	scas   al,BYTE PTR es:[edi]
  407dc2:	mov    bh,0x91
  407dc4:	jmp    0x48093cb2
  407dc9:	and    eax,0xacfb0c2
  407dce:	test   al,0xa3
  407dd0:	sti    
  407dd1:	jbe    0x407dc6
  407dd3:	outs   dx,BYTE PTR ds:[esi]
  407dd4:	jae    0x407dbc
  407dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd7:	(bad)  
  407dd8:	fwait
  407dd9:	cmc    
  407dda:	fsub   st,st(5)
  407ddc:	rol    DWORD PTR [ebx],cl
  407dde:	xchg   edx,eax
  407ddf:	and    eax,0xed6365ae
  407de4:	ret    0x57fa
  407de7:	ins    DWORD PTR es:[edi],dx
  407de8:	inc    esi
  407de9:	rcl    ch,1
  407deb:	inc    DWORD PTR [eax-0x6e]
  407dee:	xor    DWORD PTR [ebx+0x18],edi
  407df1:	sub    ch,ch
  407df3:	mov    ebx,0x19cdaa4c
  407df8:	pop    esp
  407df9:	loop   0x407dd0
  407dfb:	xchg   esp,eax
  407dfc:	ret    0x957
  407dff:	dec    ebx
  407e00:	in     al,0x11
  407e02:	shl    DWORD PTR [ecx],1
  407e04:	pop    ds
  407e05:	add    eax,0x5a247e3
  407e0a:	loope  0x407dae
  407e0c:	aaa    
  407e0d:	xor    ch,BYTE PTR cs:[edi+esi*4+0x7dfe383a]
  407e15:	stos   BYTE PTR es:[edi],al
  407e16:	ficom  WORD PTR [ecx+ebx*8-0x6488bb11]
  407e1d:	mov    ds:0x6f79ac84,al
  407e22:	(bad)  
  407e24:	jbe    0x407de7
  407e26:	ret    0x71fa
  407e29:	mov    ch,0xe7
  407e2b:	add    BYTE PTR [ebx-0x17],bh
  407e2e:	ret    
  407e2f:	scas   eax,DWORD PTR es:[edi]
  407e30:	cmp    eax,0x2e4707ba
  407e35:	sbb    BYTE PTR cs:[ebp-0x191bfc07],cl
  407e3c:	xor    ebp,DWORD PTR [edi+eax*8-0x67]
  407e40:	ins    BYTE PTR es:[edi],dx
  407e41:	sbb    al,0xaf
  407e43:	pop    es
  407e44:	(bad)  
  407e45:	mov    dh,0xc7
  407e47:	jl     0x407dd0
  407e49:	out    0xbb,eax
  407e4b:	sti    
  407e4c:	repz int3 
  407e4e:	xchg   edi,eax
  407e4f:	push   edi
  407e50:	mov    eax,0xa2065711
  407e55:	pop    ds
  407e56:	mov    BYTE PTR [ecx+0x366e867],ah
  407e5c:	lods   eax,DWORD PTR ds:[esi]
  407e5d:	call   0x28c3d106
  407e62:	mov    edx,0x342771ce
  407e67:	rcl    BYTE PTR [ebx+eiz*2],0xa8
  407e6b:	pop    edi
  407e6c:	add    ebx,DWORD PTR [edx-0x22e30889]
  407e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e73:	xor    al,0xd4
  407e76:	jne    0x407ed1
  407e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e79:	add    al,0x21
  407e7b:	xor    BYTE PTR [ecx+esi*8],ch
  407e7e:	icebp  
  407e7f:	repz in al,dx
  407e81:	push   0x5c
  407e83:	jbe    0x407e75
  407e85:	dec    ebx
  407e86:	addr16 jbe 0x407e74
  407e89:	iret   
  407e8a:	sbb    eax,0x92816bf2
  407e8f:	imul   ecx,DWORD PTR [edi-0x5],0xffffff83
  407e93:	mov    esp,0xb0d0b751
  407e98:	sbb    eax,0xeef403cb
  407e9d:	or     ebp,esp
  407e9f:	clc    
  407ea0:	aas    
  407ea1:	repnz aam 0x2
  407ea4:	pusha  
  407ea5:	add    BYTE PTR [eax],ch
  407ea7:	shl    al,0x31
  407eaa:	cmp    dl,bl
  407eac:	pop    ds
  407ead:	(bad)  
  407eaf:	sbb    DWORD PTR [edi+0x79],edi
  407eb2:	mov    cl,0x45
  407eb4:	dec    eax
  407eb5:	and    BYTE PTR [esi],bh
  407eb7:	cmp    eax,0x8d0b2b47
  407ebc:	lahf   
  407ebd:	xchg   DWORD PTR [esi-0x58],edi
  407ec0:	sbb    al,0x81
  407ec2:	push   0x55
  407ec4:	jg     0x407ed4
  407ec6:	jbe    0x407e67
  407ec8:	fdivr  QWORD PTR cs:[eax-0x725cc4d0]
  407ecf:	mov    dl,0x62
  407ed1:	into   
  407ed2:	fbld   TBYTE PTR [ecx+ecx*2-0x46]
  407ed6:	jns    0x407f46
  407ed8:	enter  0x1134,0xfb
  407edc:	clc    
  407edd:	xchg   ebp,eax
  407ede:	mov    al,ds:0x40c42c81
  407ee3:	repz ja 0x407f51
  407ee6:	out    0x77,eax
  407ee8:	fisubr WORD PTR [ecx]
  407eea:	pop    ss
  407eeb:	cmp    cl,BYTE PTR [esi-0x22b26b17]
  407ef1:	lea    ecx,[eax+edx*4-0x7c]
  407ef5:	inc    esi
  407ef6:	adc    DWORD PTR [esi-0x45b3299b],esi
  407efc:	pusha  
  407efd:	pop    edx
  407efe:	pop    ebp
  407eff:	dec    edi
  407f00:	lahf   
  407f01:	mov    BYTE PTR [edx],dh
  407f03:	mov    edi,0xbfe25a80
  407f08:	push   0x4ef73648
  407f0d:	cmp    BYTE PTR [ebp+0x50],ch
  407f10:	ins    BYTE PTR es:[edi],dx
  407f11:	cmp    ebx,DWORD PTR [ecx+eax*2]
  407f14:	mov    ecx,0x77ef4a9
  407f19:	pop    ss
  407f1a:	pop    edx
  407f1b:	sbb    edx,esi
  407f1d:	mov    bl,BYTE PTR ds:0x3f23cba
  407f23:	inc    esi
  407f24:	xchg   esi,eax
  407f25:	mov    esi,0x1393be06
  407f2a:	inc    ebx
  407f2b:	test   bl,dl
  407f2d:	adc    eax,esp
  407f2f:	fiadd  WORD PTR [ecx]
  407f31:	nop
  407f32:	inc    esp
  407f33:	sub    al,0x79
  407f35:	sbb    DWORD PTR [edx-0x26541ea3],esi
  407f3b:	inc    edi
  407f3c:	aaa    
  407f3d:	pop    esi
  407f3e:	and    al,cl
  407f40:	popa   
  407f41:	mov    dl,0x36
  407f43:	bound  edi,QWORD PTR [edi+0x54cff54]
  407f49:	out    0x7b,al
  407f4b:	xchg   esp,eax
  407f4c:	xor    al,0x5
  407f4e:	sub    al,0xac
  407f50:	(bad)  
  407f51:	adc    esi,DWORD PTR [eax]
  407f53:	pop    es
  407f54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f55:	sbb    dh,BYTE PTR [ebx-0x55]
  407f58:	and    DWORD PTR [ebx],esp
  407f5a:	and    ebx,DWORD PTR [ebp+0x1e83df91]
  407f60:	rcl    edx,0xdb
  407f63:	test   edx,0xa521243c
  407f69:	mov    al,0xef
  407f6b:	xor    ecx,0xdbbb19a2
  407f71:	lock and esp,DWORD PTR [esi-0x78d93c6c]
  407f78:	dec    edi
  407f79:	ret    0x1657
  407f7c:	push   edi
  407f7d:	inc    ebp
  407f7e:	ret    
  407f7f:	in     eax,0xc
  407f81:	xchg   ebp,eax
  407f82:	out    0x40,eax
  407f84:	pop    esp
  407f85:	sub    al,0x1e
  407f87:	jo     0x407fc6
  407f89:	clc    
  407f8a:	scas   eax,DWORD PTR es:[edi]
  407f8b:	mov    al,0x1c
  407f8d:	test   BYTE PTR [edi-0x182f4fe0],al
  407f93:	retf   
  407f94:	gs push eax
  407f96:	sub    DWORD PTR [ebx+0x374c1181],edi
  407f9c:	inc    ecx
  407f9d:	test   al,0xf
  407f9f:	(bad)  
  407fa0:	stos   BYTE PTR es:[edi],al
  407fa1:	sbb    DWORD PTR ds:0xf04df215,ecx
  407fa7:	or     edx,DWORD PTR [eax+0x7a]
  407faa:	mov    ch,0xbc
  407fac:	aaa    
  407fad:	and    bh,bl
  407faf:	shl    BYTE PTR [esi],cl
  407fb1:	ret    
  407fb2:	push   ds
  407fb3:	ins    DWORD PTR es:[edi],dx
  407fb4:	pop    es
  407fb5:	imul   eax,esp,0xffffffce
  407fb8:	bound  esi,QWORD PTR [edx+0x730c3d7e]
  407fbe:	dec    edx
  407fbf:	adc    BYTE PTR [ecx+ebx*2-0x40],0xeb
  407fc4:	and    ebx,DWORD PTR [eax]
  407fc6:	sbb    DWORD PTR [eax-0x4c80053a],ebx
  407fcc:	and    eax,0x9d68aa46
  407fd1:	push   0x42
  407fd3:	inc    edx
  407fd4:	push   edi
  407fd5:	stos   BYTE PTR es:[edi],al
  407fd6:	call   0x8d626f3a
  407fdb:	jne    0x407f7e
  407fdd:	sub    BYTE PTR [ebx-0x1de2cdbd],0xd1
  407fe4:	or     BYTE PTR [ebx],ah
  407fe6:	push   es
  407fe7:	mov    ebx,0x90b7d37
  407fec:	jbe    0x407f79
  407fee:	dec    eax
  407fef:	add    eax,0x8a9de7db
  407ff4:	push   ss
  407ff5:	inc    esi
  407ff6:	mov    al,ds:0x1c49bfe8
  407ffb:	daa    
  407ffc:	adc    bh,cl
  407ffe:	mov    eax,ds:0x83bd8cb0
  408003:	cmp    al,0x69
  408005:	mov    esi,0x6f090c61
  40800a:	lock and dl,BYTE PTR [edi+edi*4+0x76]
  40800f:	pop    ss
  408010:	(bad)  [ecx+0x14]
  408013:	and    BYTE PTR [ebx+ecx*8],ch
  408016:	retf   0x6e33
  408019:	je     0x407fc0
  40801b:	jmp    0xf3d8ca0d
  408020:	packsswb mm3,mm7
  408023:	jnp    0x408035
  408025:	(bad)  
  408026:	push   esi
  408027:	lods   eax,DWORD PTR ds:[esi]
  408028:	add    eax,0x54062f09
  40802d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40802e:	push   ebp
  40802f:	lea    ebp,[ebp+0x6e0b1f24]
  408035:	pop    esp
  408037:	fcomi  st,st(2)
  408039:	iret   
  40803a:	and    BYTE PTR gs:[ebp-0x69],cl
  40803e:	sbb    eax,0xc054b401
  408043:	js     0x408064
  408045:	xor    eax,0xa0fce711
  40804a:	dec    ecx
  40804b:	ds cmp eax,0x8d77f30b
  408051:	mov    BYTE PTR [ebp+0x41],0xb1
  408055:	xchg   DWORD PTR fs:[esi+edi*2-0x63a1cbef],ebx
  40805d:	retf   0x2161
  408060:	jo     0x408015
  408062:	cli    
  408063:	cmp    bl,cl
  408065:	mov    BYTE PTR [edx-0x71707f6f],dl
  40806b:	in     eax,0x5b
  40806d:	sub    DWORD PTR ds:0x9755,0xf6d75ad9
  408076:	popa   
  408077:	in     eax,0x85
  408079:	xor    bh,BYTE PTR [edx-0x4c121308]
  40807f:	fwait
  408080:	cmc    
  408081:	sub    BYTE PTR [edi+0x4d],cl
  408084:	retf   
  408085:	stos   DWORD PTR es:[edi],eax
  408086:	ret    
  408087:	icebp  
  408088:	inc    BYTE PTR [ecx-0x3c]
  40808b:	mov    edi,0x872496a1
  408090:	sbb    al,0x86
  408092:	adc    eax,0x7ddeab6d
  408097:	jmp    0xef91:0xca679c08
  40809e:	call   0x74daf564
  4080a3:	mov    edx,DWORD PTR [edi+0x65]
  4080a6:	loop   0x4080a9
  4080a8:	nop
  4080a9:	and    dh,BYTE PTR [esi+0x3d9cca53]
  4080af:	xchg   esp,eax
  4080b0:	mov    ebx,0x5153d69b
  4080b5:	imul   edx,DWORD PTR [ebp+0x6d],0xffffffa2
  4080b9:	adc    eax,0xf20dfa67
  4080be:	push   cs
  4080bf:	xor    eax,0xbd0eac73
  4080c4:	imul   esi,DWORD PTR [edx+0x2c],0x22d62844
  4080cb:	scas   al,BYTE PTR es:[edi]
  4080cc:	test   DWORD PTR [ecx+0x578dbcad],esi
  4080d2:	or     cl,BYTE PTR [ebx-0x3ee54f46]
  4080d8:	in     al,0xef
  4080da:	push   esp
  4080db:	repnz ror BYTE PTR [edi],0x13
  4080df:	scas   al,BYTE PTR es:[edi]
  4080e0:	sub    ch,BYTE PTR [ecx]
  4080e2:	jecxz  0x408107
  4080e4:	push   esi
  4080e5:	(bad)  
  4080e6:	nop
  4080e7:	js     0x408087
  4080e9:	imul   edi,DWORD PTR [edx],0x667598e3
  4080ef:	sub    BYTE PTR [esi-0x4274b205],bh
  4080f5:	jge    0x4080d7
  4080f7:	mov    dl,0xfa
  4080f9:	das    
  4080fa:	in     al,dx
  4080fb:	pop    ecx
  4080fc:	in     eax,0x5c
  4080fe:	mov    esp,0xb543fe03
  408103:	pop    edi
  408104:	jmp    0xa7812fb9
  408109:	fsub   DWORD PTR [esp+ecx*1-0x78bc2707]
  408110:	cld    
  408111:	enter  0x564e,0x49
  408115:	push   0x9c6eebc1
  40811a:	xor    eax,0x759e19d0
  40811f:	mov    ah,0x5a
  408121:	inc    esp
  408122:	mov    dh,0x7a
  408124:	xchg   ebx,eax
  408125:	pop    esi
  408126:	jb     0x4080f6
  408128:	cmp    BYTE PTR [edx],0x78
  40812b:	or     edi,DWORD PTR [edi-0x7]
  40812e:	xlat   BYTE PTR ds:[ebx]
  40812f:	adc    eax,0x900c34f3
  408134:	(bad)  
  408135:	mov    ebx,0x3a6dcaa8
  40813a:	ror    DWORD PTR [eax],cl
  40813c:	push   es
  40813d:	fdivp  st(0),st
  40813f:	xor    al,0x26
  408141:	arpl   WORD PTR [edx-0x117b2088],bx
  408147:	mov    BYTE PTR [ebx],ch
  408149:	mov    bh,cl
  40814b:	dec    esp
  40814c:	mov    eax,ds:0x1b51c00a
  408151:	mov    dl,BYTE PTR [ecx]
  408153:	aam    0x25
  408155:	ja     0x40811e
  408157:	push   eax
  408158:	repz and BYTE PTR [eax+0x24811184],dh
  40815f:	in     al,0xf9
  408161:	xor    eax,0x7292d723
  408166:	cmp    ch,BYTE PTR [ebp+0x14]
  408169:	sbb    ebx,DWORD PTR [ebx+0x69]
  40816c:	ja     0x4081c6
  40816e:	push   ss
  40816f:	scas   eax,DWORD PTR es:[edi]
  408170:	xchg   DWORD PTR [ecx],ebp
  408172:	mov    cl,0x48
  408174:	sub    BYTE PTR [edi],al
  408176:	enterw 0xd23a,0x52
  40817b:	push   edi
  40817c:	out    dx,al
  40817d:	sub    BYTE PTR [edx],0x5b
  408180:	in     eax,0x33
  408182:	push   ds
  408183:	sbb    al,0xb0
  408185:	sahf   
  408186:	cmp    BYTE PTR [esi-0x21],ch
  408189:	and    ah,BYTE PTR [eax+0x3d]
  40818c:	das    
  40818d:	mov    DWORD PTR [eax],eax
  40818f:	test   DWORD PTR [ecx+0x32c40f12],ecx
  408195:	ficomp WORD PTR [edx+ebp*1+0x6041018c]
  40819c:	adc    al,BYTE PTR [ebx]
  40819e:	clc    
  40819f:	jge    0x4081db
  4081a1:	dec    ebp
  4081a2:	neg    DWORD PTR [eax+0x3e]
  4081a5:	int3   
  4081a6:	fcomi  st,st(7)
  4081a8:	mov    al,ds:0xb8e975fc
  4081ad:	addr16 sub edi,eax
  4081b0:	and    DWORD PTR [edi-0x67],ecx
  4081b3:	in     eax,0x9a
  4081b5:	fs sub al,0xe5
  4081b8:	jle    0x408232
  4081ba:	das    
  4081bb:	cmc    
  4081bc:	dec    edi
  4081bd:	std    
  4081be:	xchg   ebx,eax
  4081bf:	jle    0x408174
  4081c1:	jg     0x408147
  4081c3:	int    0x27
  4081c5:	sbb    esi,DWORD PTR [eax+0x6dc8af37]
  4081cb:	and    bl,BYTE PTR [esi+0x50]
  4081ce:	data16 int 0x3
  4081d1:	push   ecx
  4081d2:	push   ebp
  4081d3:	pop    ss
  4081d4:	dec    edi
  4081d5:	in     eax,dx
  4081d6:	repz cmp al,0xae
  4081d9:	push   ss
  4081da:	outs   dx,BYTE PTR ds:[esi]
  4081db:	out    0x17,eax
  4081dd:	out    dx,eax
  4081de:	inc    edx
  4081df:	retf   0x8cd8
  4081e2:	rcl    BYTE PTR [ebx-0x5],0x8b
  4081e6:	leave  
  4081e7:	lods   eax,DWORD PTR ds:[esi]
  4081e8:	loop   0x408258
  4081ea:	mov    dh,BYTE PTR fs:[edi]
  4081ed:	les    esp,FWORD PTR [edi+0x5c]
  4081f0:	fistp  DWORD PTR [esi+edi*1]
  4081f3:	gs push 0xffffffcd
  4081f6:	sti    
  4081f7:	sbb    dl,BYTE PTR [esi-0x5a]
  4081fa:	int3   
  4081fb:	jmp    0x3a6c:0x920db971
  408202:	xchg   ebx,eax
  408203:	adc    cl,bl
  408205:	lods   eax,DWORD PTR ds:[esi]
  408206:	or     ah,ah
  408208:	leave  
  408209:	pop    esi
  40820a:	ret    
  40820b:	xor    al,0x15
  40820d:	fisub  WORD PTR [edx]
  40820f:	xchg   ecx,eax
  408210:	mov    cl,0xba
  408212:	push   0xffffff94
  408214:	cld    
  408215:	jl     0x408203
  408217:	leave  
  408218:	push   esp
  408219:	nop
  40821a:	iret   
  40821b:	fwait
  40821c:	dec    esi
  40821d:	dec    ebx
  40821e:	addr16 push eax
  408220:	or     al,0x20
  408222:	retf   
  408223:	and    al,0x62
  408225:	or     eax,0xb86a56ff
  40822a:	mov    ebp,0xf0b1f5c0
  40822f:	mov    ebp,0x7b630e48
  408234:	inc    ebp
  408235:	mov    ds,WORD PTR [edi+0x2]
  408238:	test   BYTE PTR [edx],0x65
  40823b:	aas    
  40823c:	sbb    al,BYTE PTR [ebp+0x2c]
  40823f:	aaa    
  408240:	jbe    0x408223
  408242:	scas   al,BYTE PTR es:[edi]
  408243:	adc    eax,0xb90fd04
  408248:	pop    edx
  408249:	xchg   ebx,eax
  40824a:	(bad)  
  40824b:	ficom  DWORD PTR [edx]
  40824d:	imul   esp,ebx,0xffffffd0
  408250:	outs   dx,BYTE PTR ds:[esi]
  408251:	or     dh,BYTE PTR [ebp-0x2eeab185]
  408257:	popa   
  408258:	test   al,0xd9
  40825a:	pop    ebp
  40825b:	push   ss
  40825c:	jp     0x4082ac
  40825e:	push   es
  40825f:	les    ebx,FWORD PTR ds:0x959b1279
  408265:	outs   dx,BYTE PTR ds:[esi]
  408266:	icebp  
  408267:	sub    ecx,edx
  408269:	push   esi
  40826a:	cmp    BYTE PTR [edi],0x1c
  40826d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40826e:	mov    dl,0xd7
  408270:	add    esi,esi
  408272:	adc    ch,BYTE PTR [edx]
  408274:	xor    cl,BYTE PTR [ebx+0x21]
  408277:	ret    
  408278:	rol    DWORD PTR [ecx+0x31],1
  40827b:	mov    ah,0x9
  40827d:	pop    ebp
  40827e:	nop
  40827f:	idiv   DWORD PTR [esp+edx*8]
  408282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408283:	sbb    esi,esi
  408285:	out    0x9,al
  408287:	sbb    eax,0xbd4dde5
  40828c:	in     eax,0x44
  40828e:	jl     0x408251
  408290:	pop    esp
  408291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408292:	mov    ch,0x7f
  408294:	adc    eax,0x6cd899e8
  408299:	and    BYTE PTR [edi+0x4f],dh
  40829c:	push   0x6f03f2ed
  4082a1:	pop    ds
  4082a2:	not    ecx
  4082a4:	xchg   ecx,eax
  4082a5:	jp     0x40826a
  4082a7:	or     eax,0x5267efa
  4082ac:	and    BYTE PTR [edi-0x6938f3b6],cl
  4082b2:	aas    
  4082b3:	mov    dl,0xc1
  4082b5:	ds cs in eax,0xc2
  4082b9:	outs   dx,DWORD PTR ds:[esi]
  4082ba:	fwait
  4082bb:	(bad)  
  4082bc:	scas   eax,DWORD PTR es:[edi]
  4082bd:	das    
  4082be:	xchg   ebx,eax
  4082bf:	das    
  4082c0:	and    DWORD PTR [esi],edx
  4082c2:	inc    esp
  4082c3:	in     al,dx
  4082c4:	xchg   edx,eax
  4082c5:	and    BYTE PTR [esi-0x157853d2],bl
  4082cb:	(bad)  [eax-0x565ace6]
  4082d1:	data16 int3 
  4082d3:	and    eax,0x1fe90feb
  4082d8:	xchg   edx,eax
  4082d9:	pop    ecx
  4082da:	adc    ecx,DWORD PTR [edi+0x3e219079]
  4082e0:	push   eax
  4082e1:	arpl   si,bp
  4082e3:	pop    ecx
  4082e4:	stos   BYTE PTR es:[edi],al
  4082e5:	pop    eax
  4082e6:	lods   eax,DWORD PTR ds:[esi]
  4082e7:	repnz mov edi,0x1478c858
  4082ed:	cmp    DWORD PTR [esp+esi*4+0x5c],0x5e71507f
  4082f5:	sub    al,0xbd
  4082f7:	retf   0xd4df
  4082fa:	ds jae 0x408308
  4082fd:	inc    edi
  4082fe:	iret   
  4082ff:	push   cs
  408300:	mov    al,ds:0x4de6d576
  408305:	les    esp,FWORD PTR [ebx]
  408307:	mov    BYTE PTR [ebp-0x7128f1cf],0x8d
  40830e:	pop    edx
  40830f:	aas    
  408310:	jmp    0x408308
  408312:	dec    ebx
  408313:	imul   ebp,DWORD PTR [edx+0x16],0x43
  408317:	mov    bh,0x52
  408319:	fwait
  40831a:	dec    eax
  40831b:	fld1   
  40831d:	(bad)  
  40831e:	rol    BYTE PTR [edi+ebp*8+0x36],1
  408322:	mov    edx,?
  408324:	lea    esp,[edx+esi*4-0x69b70f9a]
  40832b:	sub    eax,DWORD PTR [eax-0x3c7f9a16]
  408331:	leave  
  408332:	adc    esp,DWORD PTR [ebx+0x49]
  408335:	(bad)  
  408336:	(bad)  
  408337:	fdivr  QWORD PTR [ecx-0x544d627d]
  40833d:	inc    esi
  40833e:	popa   
  40833f:	jp     0x4082f8
  408341:	nop
  408342:	sub    DWORD PTR [edx],edi
  408344:	in     eax,0xfb
  408346:	mov    ah,0xeb
  408348:	jb     0x408369
  40834a:	pop    ebx
  40834b:	inc    DWORD PTR [eax]
  40834d:	mov    eax,0x66b789d3
  408352:	jbe    0x408348
  408354:	cmp    DWORD PTR [edi+0x7383773b],ebp
  40835a:	mov    ebx,0x8e1de243
  40835f:	outs   dx,DWORD PTR ds:[esi]
  408360:	cdq    
  408361:	popa   
  408362:	repz rcr BYTE PTR [edx],0xd5
  408366:	mov    eax,ds:0x81ae0a18
  40836b:	stos   BYTE PTR es:[edi],al
  40836c:	and    al,0xb3
  40836e:	retf   0xed58
  408371:	xor    al,ch
  408373:	sbb    DWORD PTR [esi-0x75],ebp
  408376:	jae    0x4083bf
  408378:	dec    ecx
  408379:	sbb    BYTE PTR [ecx+eax*1],ah
  40837c:	cmp    bl,BYTE PTR [esi+0x76]
  40837f:	push   edx
  408380:	lods   eax,DWORD PTR ds:[esi]
  408381:	inc    ebp
  408382:	pusha  
  408383:	jle    0x4083f3
  408385:	out    dx,al
  408386:	push   ecx
  408387:	dec    edi
  408388:	xchg   esp,eax
  408389:	cmp    edi,DWORD PTR [eax+0x28]
  40838c:	push   0x446d089b
  408391:	push   edx
  408392:	call   0x95a8:0xfc3c5697
  408399:	inc    edi
  40839a:	cmp    DWORD PTR [esi],ecx
  40839c:	dec    edx
  40839d:	push   ecx
  40839e:	test   al,0x9c
  4083a0:	cmp    ebp,edi
  4083a2:	ja     0x408359
  4083a4:	cli    
  4083a5:	mov    al,0xc
  4083a7:	inc    ebp
  4083a8:	stos   BYTE PTR es:[edi],al
  4083a9:	and    bl,0xc9
  4083ac:	aad    0x13
  4083ae:	xor    DWORD PTR [eax+ebp*8],esi
  4083b1:	sub    BYTE PTR [edi+0x61],bl
  4083b4:	mov    ds:0x1dd68232,eax
  4083b9:	or     eax,0x12a6c4f8
  4083be:	vpunpcklwd xmm4,xmm4,XMMWORD PTR [edi-0x4af84531]
  4083c6:	fisubr DWORD PTR [ebx]
  4083c8:	int    0xf4
  4083ca:	mov    DWORD PTR [esi],ebp
  4083cc:	fcomip st,st(3)
  4083ce:	aaa    
  4083cf:	jne    0x4083a5
  4083d1:	mov    es,WORD PTR [ecx]
  4083d3:	jl     0x408366
  4083d5:	mov    al,0x15
  4083d7:	out    dx,eax
  4083d8:	out    dx,eax
  4083d9:	bound  edx,QWORD PTR [esi-0x20]
  4083dc:	(bad)  
  4083dd:	mov    ebx,DWORD PTR [ecx-0x793e1bad]
  4083e3:	cmp    al,0x76
  4083e5:	imul   ecx,DWORD PTR [edx+ebp*2+0x3b871dec],0x28048836
  4083f0:	out    dx,eax
  4083f1:	mov    edx,0x13915218
  4083f6:	mov    esi,0x46abf6d1
  4083fb:	inc    ecx
  4083fc:	ffree  st(1)
  4083fe:	cld    
  4083ff:	ja     0x4083b8
  408401:	test   dl,0x2b
  408404:	fisubr WORD PTR [ebx-0x7cf93482]
  40840a:	mov    dl,0xae
  40840c:	dec    esp
  40840d:	cld    
  40840e:	mov    ebp,0x530d344
  408413:	pop    ecx
  408414:	mov    ecx,0x82da25d5
  408419:	dec    edi
  40841a:	sbb    ebp,DWORD PTR [eax]
  40841c:	mov    WORD PTR [esi-0x133339bb],ds
  408422:	stos   DWORD PTR es:[edi],eax
  408423:	push   ds
  408424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408425:	dec    edi
  408426:	sbb    DWORD PTR [ecx+esi*2+0x75],edi
  40842a:	inc    DWORD PTR [ebx+0x2f]
  40842d:	mov    cl,0xe6
  40842f:	gs jle 0x408470
  408432:	out    dx,eax
  408433:	adc    BYTE PTR [ebp-0x3e],dl
  408436:	push   esi
  408437:	(bad)  
  408438:	rcl    al,0x32
  40843b:	les    edx,FWORD PTR [esi+esi*8]
  40843e:	gs arpl dx,di
  408441:	inc    esp
  408442:	xchg   esi,eax
  408443:	adc    BYTE PTR [edx],bh
  408445:	mov    DWORD PTR [ecx],ebx
  408447:	pop    esp
  408448:	and    al,0x32
  40844a:	xchg   esi,eax
  40844b:	or     ecx,edx
  40844d:	rol    BYTE PTR [ebp-0x4],cl
  408450:	ins    BYTE PTR es:[edi],dx
  408451:	scas   eax,DWORD PTR es:[edi]
  408452:	mov    BYTE PTR [edi],ch
  408454:	(bad)  
  408455:	js     0x408457
  408457:	mov    ds:0x75d5c651,al
  40845c:	mov    cs,WORD PTR [edx+0x13bf5e7f]
  408462:	and    esi,DWORD PTR [esi+0x10]
  408465:	lds    ecx,FWORD PTR [esi]
  408467:	sub    bh,al
  408469:	pextrw edi,(bad),0xc5
  40846b:	add    eax,DWORD PTR ds:[eax-0x6f]
  40846f:	fst    DWORD PTR [eax]
  408471:	jb     0x408428
  408473:	jmp    0x567b6274
  408478:	sub    BYTE PTR [ebx],bl
  40847a:	fst    QWORD PTR [edx-0x5268fdf1]
  408480:	lock mov bh,0x29
  408483:	inc    edi
  408484:	pop    ss
  408485:	es xchg ebx,eax
  408487:	fild   DWORD PTR [esi+eiz*4-0x689fef30]
  40848e:	adc    al,0xca
  408490:	dec    ebx
  408491:	pop    ds
  408492:	mov    dh,0xe9
  408494:	(bad)  
  408495:	gs dec ecx
  408497:	enter  0x8a3e,0xae
  40849b:	xchg   edx,eax
  40849c:	mov    esi,0x2158fc
  4084a1:	aam    0xdb
  4084a3:	clc    
  4084a4:	sub    ax,0xfbc6
  4084a8:	inc    esp
  4084a9:	ror    DWORD PTR [eax],1
  4084ab:	out    dx,al
  4084ac:	pop    edi
  4084ad:	inc    edx
  4084ae:	mov    BYTE PTR [ecx-0x6e],bh
  4084b1:	and    ah,BYTE PTR ds:0x69a99e
  4084b7:	sahf   
  4084b8:	int3   
  4084b9:	ds sbb eax,0x8fd9fe25
  4084bf:	call   0x89c18889
  4084c4:	pop    ebp
  4084c5:	scas   al,BYTE PTR es:[edi]
  4084c6:	ret    0xd23e
  4084c9:	imul   esp,DWORD PTR [ecx-0x5057b894],0xffffffe0
  4084d0:	dec    esp
  4084d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084d2:	push   es
  4084d3:	jne    0x40853b
  4084d5:	adc    BYTE PTR [esi-0x3c],0xbb
  4084d9:	sar    DWORD PTR [esi+0x797c9608],cl
  4084df:	and    BYTE PTR [ecx+esi*8],ah
  4084e2:	and    bh,BYTE PTR [edx+edi*2]
  4084e5:	xor    BYTE PTR [esi-0x1ae4a9a8],ah
  4084eb:	add    BYTE PTR [edi+0x75],al
  4084ee:	scas   al,BYTE PTR es:[edi]
  4084ef:	imul   DWORD PTR [ecx-0x4a]
  4084f2:	out    dx,eax
  4084f3:	fs adc cl,BYTE PTR ss:[ebp-0x58957d38]
  4084fb:	jmp    0x4084b0
  4084fd:	stos   DWORD PTR es:[edi],eax
  4084fe:	aaa    
  4084ff:	push   edx
  408500:	mov    esp,0x14c9838b
  408505:	and    eax,0x1069ae1f
  40850a:	jg     0x408561
  40850c:	mov    dl,0x5b
  40850e:	sbb    bh,BYTE PTR [ecx]
  408510:	pop    esp
  408511:	xor    eax,0xa2e50230
  408516:	jmp    0x4084c0
  408518:	or     DWORD PTR [ecx+0x70],eax
  40851b:	pop    esi
  40851c:	inc    ebx
  40851d:	cli    
  40851e:	out    dx,eax
  40851f:	adc    dl,BYTE PTR [ecx]
  408521:	and    al,0x34
  408523:	mov    ebx,0x49dcb384
  408528:	imul   DWORD PTR [ebx-0x503b89b1]
  40852e:	fcomp  QWORD PTR [eax+0x50]
  408531:	(bad)  
  408532:	retf   0x5830
  408535:	fcomp  st(5)
  408537:	jg     0x40857d
  408539:	xchg   esi,eax
  40853a:	cmp    bl,BYTE PTR [ebx+0x7a]
  40853d:	popf   
  40853e:	lock je 0x408586
  408541:	push   cs
  408542:	pop    eax
  408543:	hlt    
  408544:	test   al,0x34
  408546:	(bad)  
  408547:	xlat   BYTE PTR ds:[ebx]
  408548:	push   0x20
  40854a:	cmp    eax,0xb5f09228
  40854f:	sub    ecx,DWORD PTR [ebx+edi*1]
  408552:	xor    esi,0xd1d9e2b9
  408558:	jae    0x4084dd
  40855a:	xchg   DWORD PTR fs:[ebx-0x17],esi
  40855e:	xchg   edx,eax
  40855f:	adc    bh,BYTE PTR [edi-0x7b]
  408562:	data16 int 0xaf
  408565:	mov    ?,ecx
  408567:	sub    DWORD PTR ds:0x8a28d3c3,ebp
  40856d:	mov    esp,esi
  40856f:	scas   eax,DWORD PTR es:[edi]
  408570:	push   ss
  408571:	push   ds
  408572:	addr16 ror al,cl
  408575:	mov    eax,ds:0xbcfde886
  40857a:	faddp  st(1),st
  40857c:	(bad)  
  40857d:	icebp  
  40857e:	push   esp
  40857f:	mov    esi,0x7db61cad
  408584:	nop
  408585:	dec    esi
  408586:	mul    DWORD PTR [ebx-0x64]
  408589:	lds    edx,FWORD PTR [ecx-0x4e3e3946]
  40858f:	mov    dh,0x37
  408591:	mov    bh,0x48
  408593:	add    bh,BYTE PTR [ebp+0x6]
  408596:	mov    cl,0x7b
  408598:	stos   DWORD PTR es:[edi],eax
  408599:	dec    edx
  40859a:	xor    DWORD PTR [eax+0x32],eax
  40859d:	push   es
  40859e:	or     al,0xc7
  4085a0:	jl     0x408613
  4085a2:	inc    edx
  4085a3:	inc    esp
  4085a4:	mov    ch,0x83
  4085a6:	sub    BYTE PTR [eax-0x68],bh
  4085a9:	sbb    esi,edx
  4085ab:	add    DWORD PTR [ebx-0x25],edi
  4085ae:	cli    
  4085af:	add    eax,0xda714711
  4085b4:	test   eax,0xf70f1c3e
  4085b9:	push   eax
  4085ba:	adc    DWORD PTR [ecx],0xffffff9c
  4085bd:	cmp    dh,0x7f
  4085c0:	ss pop ds
  4085c2:	inc    edx
  4085c3:	in     eax,dx
  4085c4:	fisub  DWORD PTR [edi-0x46]
  4085c7:	pop    edi
  4085c8:	add    eax,0x48150628
  4085cd:	add    al,0xbd
  4085cf:	mov    ds:0x6f059936,al
  4085d4:	out    0x8d,eax
  4085d6:	cmp    al,0x55
  4085d8:	hlt    
  4085d9:	mov    bh,0x86
  4085db:	jne    0x4085f0
  4085dd:	fimul  WORD PTR [esp+edi*4+0x35fcff13]
  4085e4:	sbb    eax,DWORD PTR [eax-0x660f370b]
  4085ea:	inc    edi
  4085eb:	iret   
  4085ec:	add    al,0x95
  4085ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085ef:	jecxz  0x4085be
  4085f1:	inc    ebp
  4085f2:	arpl   bx,cx
  4085f4:	jb     0x40860e
  4085f6:	es ret 0x657a
  4085fa:	mov    cl,bh
  4085fc:	dec    ebx
  4085fd:	xchg   ebx,eax
  4085fe:	push   ss
  4085ff:	jmp    0x40862e
  408601:	mov    eax,ds:0xaaf86fca
  408606:	call   0xe0a52c82
  40860b:	push   ebx
  40860c:	aaa    
  40860d:	push   ebp
  40860e:	jg     0x408685
  408610:	ret    
  408611:	and    ch,BYTE PTR [edi-0x4d]
  408614:	mov    edx,0xe0a05e71
  408619:	jge    0x4085af
  40861b:	outs   dx,DWORD PTR ds:[esi]
  40861c:	loopne 0x4085f8
  40861e:	loopne 0x408629
  408620:	hlt    
  408621:	cmp    bh,BYTE PTR [edx+edx*1]
  408624:	push   dx
  408626:	ror    eax,0x65
  408629:	(bad)  
  40862a:	cmp    al,0x11
  40862c:	mov    ecx,0x8fb4793e
  408631:	loope  0x408655
  408633:	xor    eax,0x1267ee16
  408638:	mov    al,BYTE PTR [edi+0x5af272d2]
  40863e:	cld    
  40863f:	adc    esp,DWORD PTR [edx-0x330cf772]
  408645:	nop
  408646:	cmp    bl,dh
  408648:	sbb    eax,edi
  40864a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40864c:	sbb    ch,BYTE PTR [ebx]
  40864e:	xchg   al,cl
  408650:	je     0x4085e4
  408652:	lahf   
  408653:	jl     0x40865b
  408655:	lods   al,BYTE PTR ds:[esi]
  408656:	pop    ecx
  408657:	add    BYTE PTR [esi-0x39],ch
  40865a:	test   BYTE PTR [edx+ebx*2],0x70
  40865e:	hlt    
  40865f:	sub    al,0x2f
  408661:	adc    al,0x9d
  408663:	or     edi,0xc0245c90
  408669:	lods   al,BYTE PTR ds:[esi]
  40866a:	jp     0x40864f
  40866c:	inc    ecx
  40866d:	jb     0x4086cf
  40866f:	cmp    ch,BYTE PTR [edx]
  408671:	push   es
  408672:	leave  
  408673:	leave  
  408674:	mov    ebx,0xe31c819f
  408679:	fmul   DWORD PTR [ebp+0x5e677625]
  40867f:	jb     0x408616
  408681:	push   ecx
  408682:	mov    ebp,0xf5a80f51
  408687:	in     al,0x0
  408689:	aam    0xc7
  40868b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40868c:	(bad)  
  40868d:	xchg   edx,eax
  40868e:	loop   0x408691
  408690:	inc    esi
  408691:	push   0x6b
  408693:	retf   0xa871
  408696:	mov    dl,0x9e
  408698:	jae    0x408704
  40869a:	sub    DWORD PTR ds:0xe6187240,ebx
  4086a0:	in     eax,0x48
  4086a2:	aas    
  4086a3:	clc    
  4086a4:	add    bl,BYTE PTR [ecx-0x49]
  4086a7:	sub    eax,0xa710023
  4086ac:	pop    esi
  4086ad:	add    BYTE PTR [eax],0xe5
  4086b0:	imul   ebp,ebp,0x213fb84c
  4086b6:	sub    al,0x58
  4086b8:	arpl   sp,di
  4086ba:	leave  
  4086bb:	cld    
  4086bc:	adc    esp,0xfbfabbc4
  4086c2:	jns    0x40867c
  4086c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086c5:	cwde   
  4086c6:	cld    
  4086c7:	or     eax,0x9c832142
  4086cc:	adc    eax,0x4623df8b
  4086d1:	outs   dx,BYTE PTR ds:[esi]
  4086d2:	int    0x66
  4086d4:	addr16 aas 
  4086d6:	mov    BYTE PTR ss:[ebx],ah
  4086d9:	mov    ah,0x57
  4086db:	xchg   BYTE PTR [eax+0x631dc301],bh
  4086e1:	shl    DWORD PTR [edx-0x5fc440e4],1
  4086e7:	jmp    0x408748
  4086e9:	push   ecx
  4086ea:	pushf  
  4086eb:	push   es
  4086ec:	mov    dl,0x78
  4086ee:	push   0x49
  4086f0:	retf   0xaf8a
  4086f3:	jmp    0xf4395adb
  4086f8:	xchg   ebp,eax
  4086f9:	mov    edi,0x40aee8fb
  4086fe:	push   ecx
  4086ff:	mov    ds,eax
  408701:	inc    edi
  408702:	out    0x24,al
  408704:	or     bh,BYTE PTR [esi-0x22ec838e]
  40870a:	sahf   
  40870b:	cmp    sp,dx
  40870e:	adc    al,0x8
  408710:	aas    
  408711:	add    al,0xe2
  408713:	or     cl,dl
  408715:	int3   
  408716:	pop    ds
  408717:	inc    eax
  408718:	mov    ds:0x248c82f8,eax
  40871d:	in     eax,0x97
  40871f:	adc    BYTE PTR ds:0x8af868f1,al
  408725:	xor    al,0xc0
  408727:	push   eax
  408728:	pop    esi
  408729:	(bad)  
  40872a:	cli    
  40872b:	and    eax,DWORD PTR [ecx]
  40872d:	dec    ecx
  40872e:	mov    esi,0xbeb2978
  408733:	(bad)  
  408734:	pop    esp
  408735:	pop    ss
  408736:	and    BYTE PTR [ebp+0x7f],cl
  408739:	xor    DWORD PTR [eax+0x78],0x3363d396
  408740:	ss dec edi
  408742:	jle    0x4087b8
  408744:	fcomp  DWORD PTR [ecx]
  408746:	iret   
  408747:	sub    BYTE PTR [edx+0x59],bh
  40874a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40874b:	stos   DWORD PTR es:[edi],eax
  40874c:	ficomp WORD PTR [esi]
  40874e:	fidiv  DWORD PTR [edx+0x43]
  408751:	retf   
  408752:	mov    gs,WORD PTR [ebp+0x6bc3edcf]
  408758:	sar    BYTE PTR [edx],0xd
  40875b:	mov    ch,BYTE PTR [eax+0x5fbe460e]
  408761:	adc    eax,0x4f0d9022
  408766:	pop    ss
  408767:	lahf   
  408768:	mov    esp,DWORD PTR [eax+0x14]
  40876b:	fdivr  DWORD PTR [ecx+0x68d306e0]
  408771:	aam    0x7b
  408773:	xchg   ebp,eax
  408774:	xchg   ebx,eax
  408775:	push   0x94f855e7
  40877a:	pop    edx
  40877b:	add    DWORD PTR [ecx],ecx
  40877d:	or     esp,ebx
  40877f:	popf   
  408780:	(bad)  
  408781:	push   esi
  408782:	mov    cl,0x57
  408784:	mov    ds:0x9b21aba7,eax
  408789:	pop    eax
  40878a:	test   BYTE PTR [eax+0x4fa1b3e2],bl
  408790:	aaa    
  408791:	add    BYTE PTR [esi],ch
  408793:	pop    DWORD PTR [ecx-0x787fa80d]
  408799:	jns    0x408807
  40879b:	out    0x4c,al
  40879d:	push   0x8
  40879f:	je     0x408790
  4087a1:	imul   edi,ebp,0x5c1e2dde
  4087a7:	lds    ecx,FWORD PTR [edi+0x37]
  4087aa:	add    eax,0x1236bc2d
  4087af:	xchg   bl,al
  4087b1:	sbb    eax,ebx
  4087b3:	mov    ah,0x30
  4087b5:	jbe    0x4087d7
  4087b7:	inc    si
  4087b9:	mov    eax,DWORD PTR [eax-0x60]
  4087bc:	pushf  
  4087bd:	dec    edx
  4087be:	jmp    0xe4c355ca
  4087c3:	fs and ecx,edi
  4087c6:	mov    ah,0x50
  4087c8:	cmp    BYTE PTR [ebx],0x75
  4087cb:	inc    esp
  4087cc:	and    eax,0x197cfe01
  4087d1:	and    bl,BYTE PTR [esi]
  4087d3:	out    dx,eax
  4087d4:	inc    ebp
  4087d5:	xchg   ebx,eax
  4087d6:	jl     0x408780
  4087d8:	and    cl,BYTE PTR [edi+0x6a]
  4087db:	shl    DWORD PTR [edx+0x64],cl
  4087de:	scas   eax,DWORD PTR es:[edi]
  4087df:	in     al,dx
  4087e0:	mov    eax,ds:0x45685540
  4087e5:	pop    es
  4087e6:	dec    ebx
  4087e7:	shr    DWORD PTR [esi+0x23],cl
  4087ea:	inc    ecx
  4087eb:	mov    ebp,0x4a96811e
  4087f0:	or     ch,BYTE PTR [ebx+0xa8a2089]
  4087f6:	inc    bp
  4087f8:	icebp  
  4087f9:	dec    esp
  4087fa:	loope  0x408851
  4087fc:	sbb    bh,cl
  4087fe:	cmp    eax,0x75ab7cb1
  408803:	mov    ecx,0x84c31c1b
  408808:	fsubp  st(3),st
  40880a:	lock mov bh,0x5b
  40880d:	bound  edi,QWORD PTR [ecx+0xece214d]
  408813:	or     eax,0xde2067a5
  408818:	sbb    al,al
  40881a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40881b:	jb     0x408866
  40881d:	or     ebp,ebx
  40881f:	lock dec esp
  408821:	xchg   ecx,eax
  408822:	mov    dh,0xfb
  408824:	mov    bh,bh
  408826:	xor    ecx,ebx
  408828:	mov    bl,0x99
  40882a:	mov    edx,0x34ca8f40
  40882f:	leave  
  408830:	push   ss
  408831:	ins    DWORD PTR es:[edi],dx
  408832:	xchg   BYTE PTR [eax],dh
  408834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408835:	add    al,0xf9
  408837:	push   ss
  408838:	xchg   edx,eax
  408839:	test   BYTE PTR [edi],cl
  40883b:	sbb    al,0x6
  40883d:	rcr    BYTE PTR [edx-0x26beaf0],1
  408843:	jge    0x408870
  408845:	sbb    eax,0xaaf937ff
  40884a:	jno    0x4088c4
  40884c:	out    dx,eax
  40884d:	call   0x95f79893
  408852:	fld    TBYTE PTR [edi-0xcb56eb3]
  408858:	(bad)  
  408859:	jg     0x4087fa
  40885b:	push   es
  40885c:	mov    dl,0x88
  40885e:	loope  0x4088d6
  408860:	pop    ebp
  408861:	out    dx,eax
  408862:	or     al,0x5f
  408864:	and    al,0x9e
  408866:	mov    eax,0x4d0d4bab
  40886b:	sahf   
  40886c:	stos   BYTE PTR es:[edi],al
  40886d:	div    esi
  40886f:	lahf   
  408870:	std    
  408871:	mov    DWORD PTR [ebx+0xaf4179],esi
  408877:	inc    eax
  408878:	xor    DWORD PTR [esi-0x73],ecx
  40887b:	pop    ecx
  40887c:	icebp  
  40887d:	imul   ebp,ebx,0x13
  408880:	das    
  408881:	sub    eax,eax
  408883:	mov    ebp,0x48c7830
  408888:	stos   BYTE PTR es:[edi],al
  408889:	popa   
  40888a:	ja     0x408849
  40888c:	loope  0x408810
  40888e:	leave  
  40888f:	in     eax,0x47
  408891:	and    eax,0x5f9c6f35
  408896:	retf   
  408897:	push   esp
  408898:	mov    edi,0x82a9501c
  40889d:	xor    dl,dh
  40889f:	sub    cl,BYTE PTR [edi+eiz*1+0x59]
  4088a3:	fld    TBYTE PTR [esi]
  4088a5:	lahf   
  4088a6:	nop
  4088a7:	push   esi
  4088a8:	dec    edx
  4088a9:	inc    eax
  4088aa:	xlat   BYTE PTR ds:[ebx]
  4088ab:	add    ch,bh
  4088ad:	dec    eax
  4088ae:	xlat   BYTE PTR ds:[ebx]
  4088af:	scas   al,BYTE PTR es:[edi]
  4088b0:	inc    esi
  4088b1:	pop    edi
  4088b2:	ss or  edx,0x3f
  4088b6:	jne    0x408865
  4088b8:	mov    ecx,0x5aa4377a
  4088bd:	into   
  4088be:	xor    BYTE PTR [edx+0x3d],ch
  4088c1:	pop    edi
  4088c2:	jns    0x4088de
  4088c4:	imul   edx,esp,0x69
  4088c7:	jmp    0x430:0x29538abf
  4088ce:	mov    eax,cs
  4088d0:	mov    eax,0xa1f9736a
  4088d5:	jb     0x4088bd
  4088d7:	out    dx,eax
  4088d8:	add    eax,0xc655c60f
  4088dd:	cld    
  4088de:	sar    edi,1
  4088e0:	push   0x43d9be9c
  4088e5:	loopne 0x40888b
  4088e7:	mov    eax,0xe430d554
  4088ec:	jl     0x4088a3
  4088ee:	inc    ebp
  4088ef:	inc    esp
  4088f0:	pop    ss
  4088f1:	jmp    0x51eee678
  4088f6:	mov    eax,0x55bf2dec
  4088fb:	inc    esi
  4088fc:	xor    eax,0xf48b5fa1
  408901:	and    eax,0xdb22785d
  408906:	call   0xfa42:0xdba6b271
  40890d:	push   edi
  40890e:	push   ebp
  40890f:	(bad)  
  408910:	retf   0x3ae7
  408913:	and    al,0xda
  408915:	mov    ecx,0xb6452cad
  40891a:	scas   eax,DWORD PTR es:[edi]
  40891b:	push   0x96822722
  408920:	lock gs test ebp,ebx
  408924:	sub    al,BYTE PTR [edi-0x2a]
  408927:	and    eax,DWORD PTR ds:0x4fff2c6
  40892d:	xchg   esi,eax
  40892e:	pushf  
  40892f:	mov    ss,WORD PTR [ebx-0x62]
  408932:	lds    edi,FWORD PTR [edx+0x53dfc4cc]
  408938:	lods   al,BYTE PTR ds:[esi]
  408939:	inc    ebp
  40893a:	pop    ss
  40893b:	(bad)  
  40893c:	scas   eax,DWORD PTR es:[edi]
  40893d:	pop    eax
  40893e:	or     BYTE PTR [ebp+0x61],dh
  408941:	pop    esi
  408942:	not    BYTE PTR [esi+edx*8]
  408945:	mov    ebp,0x363caaae
  40894a:	and    al,0x5e
  40894c:	test   BYTE PTR [ebp-0x7],bl
  40894f:	pop    ebp
  408950:	test   eax,0xd3978ddb
  408955:	xor    BYTE PTR [eax],dl
  408957:	aam    0x10
  408959:	aaa    
  40895a:	mov    al,ds:0x29e46ea8
  40895f:	inc    eax
  408960:	out    0xe2,eax
  408962:	jl     0x40894d
  408964:	mov    dh,0xef
  408966:	cld    
  408967:	or     BYTE PTR [ebx+0x1042798e],0xe8
  40896e:	add    ch,cl
  408970:	(bad)  
  408971:	into   
  408972:	push   esp
  408973:	std    
  408974:	bound  eax,QWORD PTR [ebx+0x39d64b23]
  40897a:	push   ebx
  40897b:	sub    bh,al
  40897d:	push   ebp
  40897e:	mov    esi,0x8e66e0ba
  408983:	stos   BYTE PTR es:[edi],al
  408984:	aam    0xb5
  408986:	mov    ecx,0xf49c97b9
  40898b:	adc    al,BYTE PTR [edx+0x28]
  40898e:	xor    edi,DWORD PTR [esi+0xa]
  408991:	add    edx,DWORD PTR [esi-0x4a]
  408994:	dec    edx
  408995:	rol    dh,0x4a
  408998:	cmp    BYTE PTR [ecx+eiz*1+0x51],0x4
  40899d:	sub    edi,DWORD PTR [edx]
  40899f:	xchg   edx,eax
  4089a0:	repz cmp eax,0x18cd3512
  4089a6:	mov    bl,0xb7
  4089a8:	jle    0x408953
  4089aa:	mov    esp,0x27b638a0
  4089af:	push   es
  4089b0:	pop    ebp
  4089b1:	les    ebx,FWORD PTR [ecx+esi*2]
  4089b4:	mov    ebx,DWORD PTR [esi+0x3e]
  4089b7:	push   es
  4089b8:	inc    esi
  4089b9:	mov    cl,0xf
  4089bb:	mov    al,0x21
  4089bd:	jmp    0x4089be
  4089bf:	mov    BYTE PTR [ecx-0x37],dh
  4089c2:	das    
  4089c3:	lock sbb esi,DWORD PTR [ecx]
  4089c6:	mov    ebp,0x836d5b59
  4089cb:	mov    edi,0x9c069251
  4089d0:	inc    edi
  4089d1:	push   esp
  4089d2:	call   0x5fee:0x6d53d14
  4089d9:	mov    BYTE PTR [eax],dl
  4089db:	pop    esi
  4089dc:	jle    0x408a1d
  4089de:	fbstp  TBYTE PTR [edi+0x64]
  4089e1:	sbb    ebp,eax
  4089e3:	int3   
  4089e4:	lahf   
  4089e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089e6:	or     BYTE PTR [ecx+0x46],0x73
  4089ea:	adc    BYTE PTR [ecx+edx*8-0x2f],dh
  4089ee:	(bad)  
  4089f0:	mov    dl,0x98
  4089f2:	dec    eax
  4089f3:	push   ebp
  4089f4:	push   es
  4089f5:	fidivr WORD PTR [esi]
  4089f7:	sar    DWORD PTR ds:0x8bfb6d75,cl
  4089fd:	bnd jbe 0x408a1b
  408a00:	inc    esi
  408a01:	inc    esp
  408a02:	mov    dl,0x1b
  408a04:	xor    dh,dl
  408a06:	nop
  408a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a08:	mov    cl,0x3a
  408a0a:	fsub   QWORD PTR [eax-0x47]
  408a0d:	popf   
  408a0e:	sbb    BYTE PTR [esi-0x705a15be],cl
  408a14:	mov    dh,0x38
  408a16:	lahf   
  408a17:	ja     0x4089d3
  408a19:	adc    BYTE PTR [eax-0x2b],al
  408a1c:	loopne 0x408a07
  408a1e:	iret   
  408a1f:	aad    0xe0
  408a21:	jl     0x408a86
  408a23:	push   0xffffffda
  408a25:	das    
  408a26:	call   0xa0f4:0x78e538e6
  408a2d:	push   eax
  408a2e:	or     DWORD PTR [esi-0x22893c95],edi
  408a34:	mov    ds:0x55527a31,eax
  408a39:	pop    ebx
  408a3a:	push   ebx
  408a3b:	dec    ecx
  408a3c:	shr    DWORD PTR [ebx],1
  408a3e:	dec    edx
  408a3f:	jmp    0x4089c5
  408a41:	cmp    DWORD PTR [eax+ecx*1+0x44a70d21],ebp
  408a48:	or     al,0x3c
  408a4a:	sub    DWORD PTR [eax+0x4d],edi
  408a4d:	xor    DWORD PTR [edx-0x6a0f72d8],0x4f
  408a54:	dec    ebx
  408a55:	add    al,ah
  408a57:	gs out 0xfb,al
  408a5a:	adc    DWORD PTR cs:[ebx],esp
  408a5d:	mov    edi,0x19b6611b
  408a62:	sub    BYTE PTR [ebp-0x5],bl
  408a65:	adc    eax,0xd96fec3c
  408a6a:	cmp    dl,cl
  408a6c:	pop    ebx
  408a6e:	fdivr  QWORD PTR [esi-0x6a1b3cca]
  408a74:	add    ecx,DWORD PTR [eax]
  408a76:	jmp    0xd07393a8
  408a7b:	loopne 0x408a8e
  408a7d:	pop    esp
  408a7e:	jne    0x408ab2
  408a80:	jg     0x408a8a
  408a82:	cmp    BYTE PTR [edx],bh
  408a84:	fild   QWORD PTR [edx+0xea9e601]
  408a8a:	lahf   
  408a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a8c:	lea    ecx,gs:[esi+ecx*2+0x4726df79]
  408a94:	sbb    eax,0xef501c49
  408a99:	ds jo  0x408a3b
  408a9c:	cmp    BYTE PTR ds:0x6152874d,0xea
  408aa3:	icebp  
  408aa4:	ds out 0x9,eax
  408aa7:	dec    ecx
  408aa8:	call   0x97af8ebc
  408aad:	mov    ds:0x234e21ee,eax
  408ab2:	add    BYTE PTR [edx+0x6],dl
  408ab5:	dec    edi
  408ab6:	(bad)  
  408ab7:	or     edx,DWORD PTR fs:[ecx-0x4d]
  408abb:	jl     0x408b0a
  408abd:	adc    al,BYTE PTR [esi-0x30]
  408ac0:	or     BYTE PTR [edx+0x58],dl
  408ac3:	retf   0xbc96
  408ac6:	cmp    al,0xd3
  408ac8:	cs mov ebx,0x990e3360
  408ace:	test   BYTE PTR [ebp-0x4],dh
  408ad1:	push   ebp
  408ad2:	es and eax,0xffffffc7
  408ad6:	imul   edx,DWORD PTR [edx+0x5f2c1902],0xb77be9f5
  408ae0:	xchg   edi,eax
  408ae1:	cmp    BYTE PTR [edi-0x318fb4fa],bl
  408ae7:	scas   al,BYTE PTR es:[edi]
  408ae8:	lds    edx,FWORD PTR [esi]
  408aea:	xlat   BYTE PTR ds:[ebx]
  408aeb:	jle    0x408afb
  408aed:	push   ds
  408aee:	aad    0x49
  408af0:	pop    ebx
  408af1:	nop
  408af2:	jmp    0x2ec4:0xb6c881e4
  408af9:	js     0x408b60
  408afb:	aam    0x37
  408afd:	push   ebp
  408afe:	ds mov esp,0x9f780e0e
  408b04:	inc    edx
  408b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b06:	into   
  408b07:	stos   BYTE PTR es:[edi],al
  408b08:	stos   BYTE PTR es:[edi],al
  408b09:	xchg   DWORD PTR [edi+ebp*4],edi
  408b0c:	inc    edx
  408b0d:	inc    ebx
  408b0e:	(bad)  
  408b0f:	fldpi  
  408b11:	pop    ds
  408b12:	sbb    cl,ch
  408b14:	popa   
  408b15:	jp     0x408ab5
  408b17:	cwde   
  408b18:	xor    eax,0x8c84b16b
  408b1d:	xor    al,0x5f
  408b1f:	fdivr  DWORD PTR [esi-0x79fc4896]
  408b25:	stos   BYTE PTR es:[edi],al
  408b26:	aam    0x80
  408b28:	call   0x149ae229
  408b2d:	push   esp
  408b2e:	mov    ?,WORD PTR [esi-0x2d]
  408b31:	pop    esp
  408b32:	sbb    ah,BYTE PTR [edx]
  408b34:	ret    0x7376
  408b37:	(bad)  
  408b38:	pop    ds
  408b39:	push   ebx
  408b3a:	mov    bh,0x3
  408b3c:	jo     0x408b8b
  408b3e:	mov    eax,0xc15c5d07
  408b43:	cli    
  408b44:	pop    edx
  408b45:	test   eax,0x4f5d2373
  408b4a:	sbb    ebx,ebx
  408b4c:	dec    esp
  408b4d:	xchg   BYTE PTR [edx],dl
  408b4f:	and    DWORD PTR [esi+0x13],ebx
  408b52:	cdq    
  408b53:	sbb    BYTE PTR [esp+ebx*4+0xd],dl
  408b57:	inc    esp
  408b58:	cmp    al,0xd8
  408b5a:	outs   dx,DWORD PTR ds:[esi]
  408b5b:	scas   eax,DWORD PTR es:[edi]
  408b5c:	retf   
  408b5d:	cmc    
  408b5e:	cmp    al,0xbe
  408b60:	inc    edx
  408b61:	sub    eax,0x4dd21
  408b66:	inc    edx
  408b67:	cmp    esp,DWORD PTR [edx+ebx*2]
  408b6a:	inc    esi
  408b6b:	or     eax,0xfc0167fe
  408b70:	xchg   ebx,eax
  408b71:	push   ebp
  408b72:	jecxz  0x408b2f
  408b74:	int    0xcc
  408b76:	sbb    ah,0x8d
  408b79:	adc    al,0xce
  408b7b:	or     eax,0xa9935d75
  408b80:	pop    ebx
  408b81:	sub    eax,0x26556b1d
  408b86:	test   al,0xf2
  408b88:	adc    BYTE PTR [eax-0x7e],0xcc
  408b8c:	dec    ebx
  408b8d:	stc    
  408b8e:	daa    
  408b8f:	mov    ebx,0x1b67266a
  408b94:	in     al,0x9c
  408b96:	inc    esp
  408b97:	inc    ebp
  408b98:	sub    edx,DWORD PTR [edx]
  408b9a:	inc    edx
  408b9b:	ret    
  408b9c:	sbb    ebp,DWORD PTR [edx-0x39]
  408b9f:	mov    dl,0xfc
  408ba1:	jno    0x408b8f
  408ba3:	mov    ch,0x6c
  408ba5:	ds or  al,0x66
  408ba8:	ret    
  408ba9:	sbb    eax,0x87da3ad8
  408bae:	xor    cl,dh
  408bb0:	mov    ecx,0x235f2b5f
  408bb5:	hlt    
  408bb6:	test   eax,0x29ff483a
  408bbb:	xchg   ecx,eax
  408bbc:	adc    ecx,ebp
  408bbe:	arpl   WORD PTR [edx-0x3c0bfcd2],ax
  408bc4:	stos   DWORD PTR es:[edi],eax
  408bc5:	inc    esp
  408bc6:	das    
  408bc7:	ss rol DWORD PTR fs:[eax],1
  408bcb:	in     al,dx
  408bcc:	pop    esi
  408bcd:	cld    
  408bce:	xchg   ebx,eax
  408bcf:	dec    esi
  408bd0:	and    BYTE PTR [edi+edi*8],al
  408bd3:	xor    DWORD PTR [esi+0x747efb23],ecx
  408bd9:	mul    DWORD PTR [edx+0x76]
  408bdc:	out    0xf8,al
  408bde:	inc    ecx
  408bdf:	mov    esi,0xc30a8d97
  408be4:	sahf   
  408be5:	jmp    0x5e5b:0x2225554f
  408bec:	push   edi
  408bed:	ds sub al,0x29
  408bf0:	and    eax,0x21ce94f7
  408bf5:	xchg   BYTE PTR [edx+eax*1-0x46],bh
  408bf9:	test   eax,0xdb44364
  408bfe:	ins    DWORD PTR es:[edi],dx
  408bff:	xchg   DWORD PTR [edi],ecx
  408c01:	fwait
  408c02:	stos   BYTE PTR es:[edi],al
  408c03:	lock lods eax,DWORD PTR ds:[esi]
  408c05:	mov    ebx,0xd8813362
  408c0a:	inc    edx
  408c0b:	repnz mov ds:0xeb2ee6e4,eax
  408c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c12:	pop    edi
  408c13:	jno    0x408c8f
  408c15:	fcmovb st,st(0)
  408c17:	icebp  
  408c18:	outs   dx,DWORD PTR ds:[esi]
  408c19:	mov    ebx,0xa4ca8e5d
  408c1e:	loop   0x408c9b
  408c20:	retf   
  408c21:	mov    dl,BYTE PTR [esi+ecx*2-0x6f]
  408c25:	mov    edi,0x8019e2c0
  408c2a:	adc    al,0xef
  408c2c:	add    eax,0xec746fa6
  408c31:	fld    QWORD PTR [eax-0x3630a20a]
  408c37:	dec    ebp
  408c38:	or     eax,0xe8ff064f
  408c3d:	in     eax,0x8
  408c3f:	(bad)  
  408c40:	outs   dx,BYTE PTR ds:[esi]
  408c41:	inc    ebx
  408c42:	mov    dh,BYTE PTR [edi-0x6b]
  408c45:	push   esi
  408c46:	mov    eax,0x5972a8f6
  408c4b:	pop    esi
  408c4c:	or     DWORD PTR [ecx-0x27bc7f8],0xffffffb6
  408c53:	nop
  408c54:	cmp    eax,0x99663ffe
  408c59:	or     dh,dh
  408c5b:	jg     0x408cb5
  408c5d:	mov    edi,0x7252c94c
  408c62:	leave  
  408c63:	mov    ds:0xbea9df5c,al
  408c68:	xor    DWORD PTR [eax-0x75],ebp
  408c6b:	mov    al,ds:0x934b99e1
  408c70:	int3   
  408c71:	sub    BYTE PTR [eax-0x73],0x7f
  408c75:	mov    esi,0x7c2488ce
  408c7a:	(bad)  
  408c7b:	out    0x2e,eax
  408c7d:	nop
  408c7e:	sahf   
  408c7f:	mov    al,0xf5
  408c81:	loope  0x408cf8
  408c83:	and    eax,0xe08881a9
  408c88:	sbb    al,0x8e
  408c8a:	sar    ah,1
  408c8c:	std    
  408c8d:	repnz idiv ebx
  408c90:	inc    ecx
  408c91:	sti    
  408c92:	pop    ss
  408c93:	dec    eax
  408c94:	adc    al,0x4d
  408c96:	push   ds
  408c97:	rcl    dl,0x6f
  408c9a:	bound  esi,QWORD PTR [esp+ebx*1-0x27]
  408c9e:	jbe    0x408cee
  408ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ca1:	aaa    
  408ca2:	push   esi
  408ca4:	adc    eax,0xd2aee6e5
  408ca9:	pop    ebp
  408caa:	adc    BYTE PTR [ecx-0x36],0x58
  408cae:	repz sbb al,0xaa
  408cb1:	sbb    al,0x16
  408cb3:	ss test al,0x5f
  408cb6:	add    ch,cl
  408cb8:	std    
  408cb9:	mov    ds,WORD PTR [edi]
  408cbb:	xlat   BYTE PTR ds:[ebx]
  408cbc:	and    BYTE PTR [esi],dl
  408cbe:	mov    eax,0xf2ef19a3
  408cc3:	mov    ds:0xb9027fcc,al
  408cc8:	ins    BYTE PTR es:[edi],dx
  408cc9:	fild   QWORD PTR [ebx]
  408ccb:	retf   0xdd1c
  408cce:	or     al,0xd3
  408cd0:	mov    ebp,0x40c7a068
  408cd5:	inc    edi
  408cd6:	pop    esi
  408cd7:	push   cs
  408cd8:	adc    dh,bh
  408cda:	mov    eax,0x5cbf39bd
  408cdf:	stos   BYTE PTR es:[edi],al
  408ce0:	and    bl,BYTE PTR [ebx+0x5cf04ee8]
  408ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce7:	inc    eax
  408ce8:	aam    0xcf
  408cea:	shl    ch,cl
  408cec:	es push ss
  408cee:	call   FWORD PTR [esi+esi*8+0x2c]
  408cf2:	rcl    eax,0xe4
  408cf5:	int    0x87
  408cf7:	cmp    edx,DWORD PTR [ecx+0x4a6b1b65]
  408cfd:	add    eax,0x71767b67
  408d02:	jnp    0x408d3d
  408d04:	(bad)  
  408d05:	jge    0x408d5f
  408d07:	xchg   esi,eax
  408d08:	pop    edi
  408d09:	aaa    
  408d0a:	(bad)  
  408d0b:	fidivr WORD PTR [ebp-0x1f813f83]
  408d11:	scas   al,BYTE PTR es:[edi]
  408d12:	dec    ebp
  408d13:	jl     0x408d51
  408d15:	adc    eax,0x25905bc7
  408d1a:	xor    eax,0x46f314dc
  408d1f:	bswap  ecx
  408d21:	es mov dh,0x8a
  408d24:	mov    ds:0xe9fd82f4,eax
  408d29:	(bad)  
  408d2a:	pop    eax
  408d2b:	jb     0x408cca
  408d2d:	sysret 
  408d2f:	push   esp
  408d30:	and    ch,dh
  408d32:	xchg   esp,eax
  408d33:	mov    DWORD PTR [esi-0x33],ecx
  408d36:	xor    ch,BYTE PTR [ecx-0x76]
  408d39:	int3   
  408d3a:	dec    esp
  408d3b:	outs   dx,DWORD PTR ds:[esi]
  408d3c:	xchg   edx,eax
  408d3d:	out    0x8f,al
  408d3f:	and    esi,DWORD PTR [ebx+esi*8+0x7e]
  408d43:	mov    ah,ch
  408d45:	mov    ebx,0x78047a23
  408d4a:	push   ecx
  408d4b:	je     0x408d49
  408d4d:	in     al,dx
  408d4e:	sub    BYTE PTR [edx+0x10aa3f51],bh
  408d54:	pushf  
  408d55:	push   ebp
  408d56:	mov    al,ds:0x34ae41a8
  408d5b:	sub    BYTE PTR gs:[ebp+eiz*4+0x3b],dh
  408d60:	cmp    bl,BYTE PTR [ebx+0x77]
  408d63:	inc    ecx
  408d64:	jecxz  0x408d2c
  408d66:	fisttp QWORD PTR [eax+0x17]
  408d69:	sub    cl,dh
  408d6b:	fs (bad) 
  408d6d:	imul   ebx,DWORD PTR [ecx],0x4cd7da9f
  408d73:	mov    ds:0x75766af3,eax
  408d78:	(bad)  
  408d79:	sbb    eax,0x3c205965
  408d7e:	cli    
  408d7f:	cmp    BYTE PTR [edx+0x2aa433bf],dh
  408d85:	test   edi,ebx
  408d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d88:	jmp    FWORD PTR [edx+0x3ea2b6e0]
  408d8e:	fcmovb st,st(1)
  408d90:	ds leave 
  408d92:	push   esp
  408d93:	ficomp WORD PTR ds:0x10e76292
  408d99:	or     DWORD PTR [ecx+0xfa03412],ecx
  408d9f:	rcl    DWORD PTR [esi+0x6a18ae97],1
  408da5:	dec    eax
  408da6:	out    0xe2,al
  408da8:	sti    
  408da9:	or     esp,ebp
  408dab:	inc    edx
  408dac:	cmp    DWORD PTR [ebx],edx
  408dae:	out    0x6a,eax
  408db0:	je     0x408d75
  408db2:	fstp   DWORD PTR ds:0x64699645
  408db8:	shr    BYTE PTR [esp+esi*8-0x2ab41ac1],1
  408dbf:	push   ds
  408dc0:	jmp    0xc960:0xac5ffc1
  408dc7:	adc    al,0xf1
  408dc9:	mov    esi,0xcb51dc92
  408dce:	into   
  408dcf:	and    eax,0x3a343220
  408dd4:	outs   dx,DWORD PTR ds:[esi]
  408dd5:	sbb    DWORD PTR [ebp+0x68],esp
  408dd8:	xchg   edx,eax
  408dd9:	nop
  408dda:	sub    eax,0x62d7d6eb
  408ddf:	or     eax,0xc3ba0d6
  408de4:	add    DWORD PTR [ecx-0x4b],edx
  408de7:	in     eax,0xe4
  408de9:	push   ds
  408dea:	jo     0x408dba
  408dec:	stos   BYTE PTR es:[edi],al
  408ded:	jnp    0x408d80
  408def:	and    esi,DWORD PTR [esi+eax*1]
  408df2:	ds adc ebp,ebp
  408df5:	mov    WORD PTR [edi+0x768e2165],?
  408dfb:	jne    0x408dab
  408dfd:	(bad)  
  408dfe:	cmp    edx,edi
  408e00:	cdq    
  408e01:	cmp    bh,bh
  408e03:	xor    DWORD PTR [edx+0x2c4f9f96],eax
  408e09:	push   0x6f
  408e0b:	shr    DWORD PTR [esi],cl
  408e0d:	sub    BYTE PTR [esi+eax*8-0x50e9c117],al
  408e14:	cmp    DWORD PTR [edi+0x5a56e410],esi
  408e1a:	in     al,0xe9
  408e1c:	sbb    DWORD PTR [ebx],ebp
  408e1e:	jecxz  0x408e6d
  408e20:	iret   
  408e21:	pop    eax
  408e22:	sar    DWORD PTR [esi],0xdd
  408e25:	jns    0x408e40
  408e27:	stos   BYTE PTR es:[edi],al
  408e28:	pop    esp
  408e29:	pop    ecx
  408e2a:	fs jecxz 0x408e5b
  408e2d:	imul   esp,edx,0x78
  408e30:	pmaxsw mm3,mm4
  408e33:	and    BYTE PTR [ecx+0x3178a1d6],ah
  408e39:	aam    0x36
  408e3b:	push   ss
  408e3c:	sub    eax,0x794c4305
  408e41:	cmp    al,0x4f
  408e43:	xor    dl,BYTE PTR [edx]
  408e45:	pop    dx
  408e47:	loop   0x408e6a
  408e49:	or     dh,BYTE PTR [ebp-0xbae5ce]
  408e4f:	into   
  408e50:	sar    esp,1
  408e52:	mov    ss,edx
  408e54:	dec    edi
  408e55:	mov    esi,0x5fff8d54
  408e5a:	int3   
  408e5b:	push   ds
  408e5c:	add    eax,0x85889224
  408e61:	fnsave [edi+ebp*4+0x61]
  408e65:	mov    ebx,DWORD PTR [eax]
  408e67:	pop    ebp
  408e68:	adc    eax,0xe714673f
  408e6d:	sti    
  408e6e:	mov    esi,0x80e2c160
  408e73:	fadd   DWORD PTR [edx+0x25]
  408e76:	retf   
  408e77:	adc    eax,0xd637ee2f
  408e7c:	push   ebp
  408e7d:	imul   ecx,DWORD PTR [ebp+0x39],0xffffff82
  408e81:	adc    al,0x4a
  408e83:	jmp    0x408e60
  408e85:	aas    
  408e86:	fs (bad) 
  408e88:	mov    es,WORD PTR [edx]
  408e8a:	mov    cl,0xef
  408e8c:	cmp    edi,DWORD PTR [ebx]
  408e8e:	adc    dh,BYTE PTR [esi+0x3be1d3fd]
  408e94:	sub    eax,0x1e3fdda
  408e99:	hlt    
  408e9a:	jmp    0xba003bd9
  408e9f:	fidivr WORD PTR [ecx-0x37346bc0]
  408ea5:	sub    al,dh
  408ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ea8:	out    dx,eax
  408ea9:	fs mov dh,0x75
  408eac:	sub    edx,esi
  408eae:	cmp    DWORD PTR [ebx],ecx
  408eb0:	fidiv  DWORD PTR [ebp+0x92ca4eb]
  408eb6:	pop    ecx
  408eb7:	inc    edx
  408eb8:	pop    ss
  408eb9:	test   BYTE PTR [edx-0x158af849],cl
  408ebf:	xchg   ebp,eax
  408ec0:	inc    ecx
  408ec1:	mov    eax,ds:0x8db26adf
  408ec6:	mov    eax,ds:0xe3e3de7d
  408ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ecc:	aam    0xed
  408ece:	sbb    eax,0x49d8eb09
  408ed3:	int3   
  408ed4:	mov    bh,0x82
  408ed6:	sub    BYTE PTR [edx-0x41060ef2],dh
  408edc:	mov    ds:0x4c406946,eax
  408ee1:	int3   
  408ee2:	push   esp
  408ee3:	inc    edx
  408ee5:	xchg   edx,eax
  408ee6:	push   esp
  408ee7:	fisttp DWORD PTR ds:0xdef20ad4
  408eed:	fs push ebx
  408eef:	js     0x408f47
  408ef1:	sbb    eax,esp
  408ef3:	loopne 0x408f5e
  408ef5:	and    dh,al
  408ef7:	dec    eax
  408ef8:	mov    esi,0x58162902
  408efd:	jp     0x408f39
  408eff:	push   ebp
  408f00:	fldenv [ecx]
  408f02:	ja     0x408f47
  408f04:	dec    ebx
  408f05:	xchg   esp,eax
  408f06:	rol    ebp,cl
  408f08:	sub    al,0x20
  408f0a:	ret    
  408f0b:	or     BYTE PTR [esi+ebx*8-0x7d],ah
  408f0f:	lahf   
  408f10:	ins    BYTE PTR es:[edi],dx
  408f11:	jnp    0x408eb7
  408f13:	in     eax,0x63
  408f15:	jle    0x408ee1
  408f17:	inc    eax
  408f18:	inc    edx
  408f19:	sahf   
  408f1a:	(bad)  
  408f1b:	cld    
  408f1c:	dec    ebx
  408f1d:	xchg   esi,eax
  408f1e:	adc    dl,BYTE PTR [ebx+0x61]
  408f21:	jbe    0x408eb6
  408f23:	push   edx
  408f24:	gs adc eax,ebp
  408f27:	dec    edi
  408f28:	mov    dh,0x41
  408f2a:	icebp  
  408f2b:	(bad)  
  408f2c:	call   0x6be4:0x5f05f4c9
  408f33:	ret    0x152e
  408f36:	cmp    DWORD PTR [edi+ecx*2],0xffffffe4
  408f3a:	push   esp
  408f3b:	mov    ecx,0x26bfd0e2
  408f40:	adc    al,0x0
  408f42:	ja     0x408fc1
  408f44:	or     esp,DWORD PTR [ebx+edi*2+0x3d]
  408f48:	add    eax,0x9fbd381f
  408f4d:	shl    BYTE PTR [edi-0x7],cl
  408f50:	xchg   BYTE PTR [ebx],bh
  408f52:	div    DWORD PTR [esi+0x30fcb4cf]
  408f58:	outs   dx,BYTE PTR ds:[esi]
  408f59:	cwde   
  408f5a:	jns    0x408f93
  408f5c:	add    ecx,DWORD PTR [eax]
  408f5e:	gs ds mov dh,0x1
  408f62:	lods   eax,DWORD PTR ds:[esi]
  408f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f64:	push   esi
  408f65:	(bad)  
  408f66:	cmp    BYTE PTR [eax+0x63],dh
  408f69:	ja     0x408fce
  408f6b:	sub    al,0xf7
  408f6d:	push   edi
  408f6e:	pop    es
  408f6f:	cwde   
  408f70:	mov    esi,0xf3979834
  408f75:	jo     0x408fdc
  408f77:	jecxz  0x408f2d
  408f79:	imul   edx,DWORD PTR ds:0xd981507e,0x7d3413cc
  408f83:	or     ah,BYTE PTR [ebx+0x2c0a496f]
  408f89:	shl    DWORD PTR [ebp+0x17a400ad],1
  408f8f:	and    ebx,esi
  408f91:	(bad)  
  408f92:	xchg   ecx,eax
  408f93:	iret   
  408f94:	iret   
  408f95:	dec    ecx
  408f96:	cs inc edi
  408f98:	add    ah,BYTE PTR [ebx+0x55]
  408f9b:	and    al,0xa6
  408f9d:	push   esp
  408f9e:	dec    ecx
  408f9f:	adc    eax,eax
  408fa1:	mov    bl,bl
  408fa3:	push   esp
  408fa4:	sbb    edx,DWORD PTR [ebp-0x45]
  408fa7:	sub    edx,DWORD PTR fs:[ebx]
  408faa:	in     al,dx
  408fab:	adc    BYTE PTR ds:0x4d2326be,cl
  408fb1:	ja     0x409028
  408fb3:	pop    ecx
  408fb4:	sub    eax,0xe6af0ccf
  408fb9:	scas   eax,DWORD PTR es:[edi]
  408fba:	jnp    0x408fd4
  408fbc:	(bad)  
  408fbd:	sbb    edi,DWORD PTR [edx-0x1e]
  408fc0:	mov    ecx,0x65ba7123
  408fc5:	and    edx,DWORD PTR [edx]
  408fc7:	fsubr  QWORD PTR [eax+0x68]
  408fca:	inc    edx
  408fcb:	mov    ebp,0x8406b8c3
  408fd0:	test   BYTE PTR [esi+0x6d6b6aae],ah
  408fd6:	dec    edi
  408fd7:	push   edx
  408fd8:	retf   
  408fd9:	inc    eax
  408fda:	(bad)  
  408fdb:	out    0x70,al
  408fdd:	cmp    eax,0x625c3c7e
  408fe2:	push   ebx
  408fe3:	xchg   ebx,eax
  408fe4:	test   BYTE PTR [esi+eiz*4],bl
  408fe7:	mov    esi,0xb264eb8e
  408fec:	add    DWORD PTR [eax-0x51e66390],0x4b
  408ff3:	or     BYTE PTR [eax],0x9
  408ff6:	mov    dh,0xba
  408ff8:	cmp    eax,0x87b7623
  408ffd:	sub    DWORD PTR [ecx],0xffffffbc
  409000:	ja     0x409034
  409002:	mov    ?,edx
  409004:	sub    DWORD PTR [esi],edx
  409006:	daa    
  409007:	cmp    dh,al
  409009:	add    al,BYTE PTR [edi]
  40900b:	add    BYTE PTR [esi+0x7b8ec968],dh
  409011:	mov    dh,0xcc
  409013:	in     al,0x16
  409015:	xor    DWORD PTR ss:[eax],esp
  409018:	mov    eax,0x7dca4a50
  40901d:	hlt    
  40901e:	cmp    al,0x20
  409020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409021:	leave  
  409022:	popf   
  409023:	(bad)  
  409025:	test   BYTE PTR [eax+0x59d1b6a3],ah
  40902b:	inc    ebx
  40902c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40902e:	in     al,dx
  40902f:	cmp    DWORD PTR [ebp+0x2de6afdf],esp
  409035:	mov    bl,0x8
  409037:	jb     0x4090a3
  409039:	and    dh,ah
  40903b:	xor    eax,0xfbef0bec
  409040:	fwait
  409041:	adc    DWORD PTR [eax+edx*2],edx
  409044:	push   edx
  409045:	sub    al,0xa6
  409047:	mov    ecx,0x28137617
  40904c:	mov    dl,0xae
  40904e:	loope  0x409043
  409050:	fs push 0xdf2f986f
  409056:	test   dh,al
  409058:	dec    eax
  409059:	loopne 0x408fe5
  40905b:	pop    ecx
  40905c:	push   0x7b
  40905e:	dec    edi
  40905f:	adc    ebp,DWORD PTR [esi]
  409061:	(bad)  
  409062:	sbb    DWORD PTR [ecx+0x60],edi
  409065:	out    0x46,eax
  409067:	sbb    al,BYTE PTR [esi+edx*1-0x3d]
  40906b:	ds jno 0x4090c5
  40906e:	daa    
  40906f:	cmp    ah,0x19
  409072:	dec    edi
  409073:	jle    0x4090a1
  409075:	mov    ds:0x96d3a17,eax
  40907a:	cmp    eax,0x7277f022
  40907f:	xchg   ebx,eax
  409080:	cs in  eax,0x92
  409083:	lock or BYTE PTR [eax],0x6e
  409087:	scas   al,BYTE PTR es:[edi]
  409088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409089:	jp     0x4090af
  40908b:	mov    edi,0x70c6750e
  409090:	retf   0xa732
  409093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409094:	mov    BYTE PTR [ecx],dl
  409096:	inc    ebx
  409097:	push   ss
  409098:	out    0x41,al
  40909a:	or     BYTE PTR [eax],0xa1
  40909d:	stos   BYTE PTR es:[edi],al
  40909e:	or     al,0x35
  4090a0:	test   ah,dh
  4090a2:	mov    dh,0xb1
  4090a4:	push   esi
  4090a5:	out    0x1f,al
  4090a7:	ins    BYTE PTR es:[edi],dx
  4090a8:	cmp    eax,0xbf0add93
  4090ad:	std    
  4090ae:	sub    BYTE PTR ds:0xed24b80e,bl
  4090b4:	push   edx
  4090b5:	gs and esp,0x57a481e6
  4090bc:	nop
  4090bd:	cmp    al,0xab
  4090bf:	push   es
  4090c0:	cmc    
  4090c1:	dec    esp
  4090c2:	xor    dh,BYTE PTR [ebx]
  4090c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090c5:	cmc    
  4090c6:	mov    eax,DWORD PTR [edx+0x259d9694]
  4090cc:	and    al,0x45
  4090ce:	xor    ebx,DWORD PTR [ecx+edx*1-0x80]
  4090d2:	cmp    al,0x22
  4090d4:	xor    dl,dh
  4090d6:	stos   DWORD PTR es:[edi],eax
  4090d7:	scas   al,BYTE PTR es:[edi]
  4090d8:	sub    eax,0x63bd3b3f
  4090dd:	push   es
  4090de:	es xchg esp,eax
  4090e0:	dec    ebx
  4090e1:	(bad)
  4090e4:	dec    ecx
  4090e5:	rol    DWORD PTR [ebp-0x45],1
  4090e8:	adc    eax,0xdf638d74
  4090ed:	mov    ebp,0xc6430df2
  4090f2:	lds    esp,FWORD PTR [eax]
  4090f4:	mov    eax,ds:0x86f82f77
  4090f9:	ficomp DWORD PTR [edi]
  4090fb:	add    al,0xe2
  4090fd:	sahf   
  4090fe:	sub    edx,DWORD PTR [ecx+0x68]
  409101:	(bad)  
  409102:	dec    ecx
  409103:	or     esp,DWORD PTR [esi-0x15969724]
  409109:	mov    ebp,0x3e45b6ea
  40910e:	push   eax
  40910f:	add    esp,DWORD PTR [ebx+0xb619f38]
  409115:	or     DWORD PTR cs:[edx-0x59],edi
  409119:	out    0xd1,eax
  40911b:	and    al,0x11
  40911d:	add    ebp,DWORD PTR [esi-0x5c]
  409120:	ja     0x4090cb
  409122:	dec    ecx
  409123:	stc    
  409124:	neg    ah
  409126:	push   ecx
  409127:	(bad)  
  409128:	std    
  409129:	sahf   
  40912a:	in     al,dx
  40912b:	push   ebp
  40912c:	adc    al,0x23
  40912e:	scas   al,BYTE PTR es:[edi]
  40912f:	jecxz  0x4090b4
  409131:	mov    ebp,DWORD PTR [esi]
  409133:	sbb    bh,BYTE PTR [ebx+ecx*2]
  409136:	retf   
  409137:	aas    
  409138:	add    dl,cl
  40913a:	jno    0x4090ee
  40913c:	int3   
  40913d:	or     BYTE PTR [ecx-0x2bbc8026],bh
  409143:	adc    ecx,DWORD PTR [edx+0x10]
  409146:	or     DWORD PTR ds:0xdc631462,esi
  40914c:	cld    
  40914d:	cmp    bl,BYTE PTR [edi]
  40914f:	stos   DWORD PTR es:[edi],eax
  409150:	mov    bh,0x15
  409152:	repnz sti 
  409154:	mov    es,WORD PTR [esi-0x25]
  409157:	imul   edi,esp,0x45
  40915a:	fdivr  st(4),st
  40915c:	jecxz  0x4090df
  40915e:	fidiv  DWORD PTR [ebx-0x20]
  409161:	int3   
  409162:	dec    ebx
  409163:	sub    DWORD PTR [ecx-0x3c1b6453],0x51
  40916a:	sbb    al,0xf4
  40916c:	out    0x9f,al
  40916e:	dec    edx
  40916f:	scas   eax,DWORD PTR es:[edi]
  409170:	das    
  409171:	xchg   ecx,eax
  409172:	es pushf 
  409174:	push   edx
  409175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409176:	xor    eax,0x933ad1fb
  40917b:	cdq    
  40917c:	daa    
  40917d:	fs iretw 
  409180:	jmp    FWORD PTR [edx]
  409182:	(bad)  
  409183:	cli    
  409184:	out    dx,al
  409185:	push   edx
  409186:	mov    dh,0x3c
  409188:	stc    
  409189:	inc    ebp
  40918a:	push   0x9fe5f0b4
  40918f:	or     al,0x81
  409191:	xchg   esp,eax
  409192:	xor    BYTE PTR [ebp-0xb],dl
  409195:	stos   BYTE PTR es:[edi],al
  409196:	dec    edx
  409197:	push   esi
  409198:	pusha  
  409199:	(bad)  
  40919a:	aas    
  40919b:	cs dec ebp
  40919d:	xor    ecx,DWORD PTR [ebx-0x3d28f718]
  4091a3:	imul   edi,edi,0x15
  4091a6:	push   esp
  4091a7:	push   esp
  4091a8:	cmc    
  4091a9:	mov    ?,WORD PTR [ecx+0x7b]
  4091ac:	add    ch,BYTE PTR [edx+0x3de69543]
  4091b2:	jecxz  0x409173
  4091b4:	xlat   BYTE PTR ds:[ebx]
  4091b5:	xchg   DWORD PTR [ebx],ebp
  4091b7:	or     eax,0x4659c80d
  4091bc:	jns    0x409208
  4091be:	mov    edx,0xfd55df77
  4091c3:	cdq    
  4091c4:	jmp    0x6ee2794d
  4091c9:	test   DWORD PTR [esi-0x9],0x6400e0ee
  4091d0:	xchg   esp,eax
  4091d1:	mov    ebx,0xa28a70f8
  4091d6:	inc    eax
  4091d7:	add    eax,0x9352100d
  4091dc:	push   esi
  4091dd:	in     al,dx
  4091de:	push   ecx
  4091df:	xchg   ebx,eax
  4091e0:	pop    ebx
  4091e1:	dec    eax
  4091e2:	xor    eax,0xe959d3d7
  4091e7:	ins    DWORD PTR es:[edi],dx
  4091e8:	mov    dh,0xed
  4091ea:	pop    edx
  4091eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ec:	pop    ds
  4091ed:	jbe    0x409173
  4091ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091f0:	jl     0x4091f8
  4091f2:	xchg   ecx,eax
  4091f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f4:	xchg   esi,edx
  4091f6:	push   esi
  4091f7:	mov    fs,WORD PTR [edx]
  4091f9:	jge    0x409198
  4091fb:	jp     0x4091bd
  4091fd:	inc    eax
  4091fe:	mov    ch,0xed
  409200:	fisubr WORD PTR [edx-0x79]
  409203:	and    eax,0xb0c45ec2
  409208:	cld    
  409209:	gs loopne 0x409265
  40920c:	add    edi,DWORD PTR [ebp+0x78]
  40920f:	cld    
  409210:	sahf   
  409211:	cmp    eax,0x1b7faae8
  409216:	out    0xe6,eax
  409218:	bound  eax,QWORD PTR [esi+0x718d48b8]
  40921e:	adc    eax,0xf5f93634
  409223:	addr16 dec edx
  409225:	inc    edx
  409226:	inc    eax
  409227:	pop    edi
  409228:	jle    0x40927e
  40922a:	repz cmp eax,0x71fb0ea6
  409230:	inc    ebx
  409231:	mov    ebp,0xffd74776
  409236:	ficom  DWORD PTR [edx+0x22ddcfe4]
  40923c:	std    
  40923d:	pop    ss
  40923e:	pop    esi
  40923f:	mov    ds:0x6a33d550,al
  409244:	push   eax
  409245:	mov    bl,BYTE PTR ds:0x243d9b11
  40924b:	sbb    esi,ecx
  40924d:	loope  0x4092aa
  40924f:	push   edx
  409250:	jl     0x409263
  409252:	jmp    FWORD PTR [ebx-0x425b8aab]
  409258:	mov    dl,0x3a
  40925a:	pop    ebp
  40925b:	xchg   ebx,eax
  40925c:	gs pop ecx
  40925e:	outs   dx,BYTE PTR ds:[esi]
  40925f:	xor    eax,0xda9c2ca2
  409264:	mov    ds,edx
  409266:	mov    ebx,0xdeaddda3
  40926b:	sbb    esp,DWORD PTR [ecx]
  40926d:	sub    BYTE PTR [ecx-0x78c254f9],al
  409273:	sbb    al,0x91
  409275:	jp     0x4092bf
  409277:	into   
  409278:	fnstsw WORD PTR [eax-0x1e2075df]
  40927e:	xor    ecx,DWORD PTR [ecx+edi*8+0x2c0be50c]
  409285:	mov    ecx,0x347f54b3
  40928a:	fcmovbe st,st(3)
  40928c:	lock in eax,0x45
  40928f:	das    
  409290:	call   0x453b:0xb5b98ed1
  409297:	clc    
  409298:	pop    ds
  409299:	outs   dx,BYTE PTR ds:[esi]
  40929a:	xor    bh,bh
  40929c:	fmul   DWORD PTR [eax-0x4b]
  40929f:	cmp    ecx,DWORD PTR [edi+0x2c]
  4092a2:	and    cl,BYTE PTR [ebx+esi*8+0x71]
  4092a6:	jle    0x4092ec
  4092a8:	jge    0x409288
  4092aa:	adc    BYTE PTR [edi],ah
  4092ac:	or     BYTE PTR [ebx-0x407e15ea],bh
  4092b2:	sub    eax,0x7f96cc11
  4092b7:	lea    eax,[edi-0x6dc81c52]
  4092bd:	frstor [edi]
  4092bf:	and    ebx,esp
  4092c1:	nop
  4092c2:	mov    dh,0x75
  4092c4:	sub    BYTE PTR [edx+0x776c1557],0x63
  4092cb:	xor    eax,0xdf29cf1b
  4092d0:	call   0xdf6b:0x9f22bed4
  4092d7:	repz inc esi
  4092d9:	lahf   
  4092da:	outs   dx,DWORD PTR ds:[esi]
  4092db:	mov    ecx,0x2b3f6ec2
  4092e0:	mov    esi,0x4d311603
  4092e5:	in     eax,dx
  4092e6:	push   esi
  4092e7:	sub    edx,DWORD PTR [edi+0x53]
  4092ea:	pop    eax
  4092eb:	les    ecx,FWORD PTR [edi]
  4092ed:	and    BYTE PTR [eax],cl
  4092ef:	jo     0x40928e
  4092f1:	mov    dl,0xe4
  4092f3:	inc    ebp
  4092f4:	ret    
  4092f5:	stos   BYTE PTR es:[edi],al
  4092f6:	add    eax,edx
  4092f8:	mov    ch,0xbb
  4092fa:	inc    esp
  4092fb:	jle    0x40937c
  4092fd:	mov    ebp,0x6cdd0588
  409302:	and    al,0xcb
  409304:	mov    al,0x96
  409306:	and    al,0x74
  409308:	dec    esp
  409309:	addr16 lahf 
  40930b:	cmp    BYTE PTR [edi],dl
  40930d:	dec    eax
  40930e:	xor    eax,0x8f16d885
  409313:	out    dx,al
  409314:	int3   
  409315:	rol    BYTE PTR [ecx+0x794a99ed],cl
  40931b:	jae    0x409342
  40931d:	xchg   esi,eax
  40931e:	mov    DWORD PTR [ebx],esp
  409320:	es jmp 0xbfd8c5b6
  409326:	sbb    BYTE PTR [ebp-0x5f],cl
  409329:	mov    cl,0x82
  40932b:	pop    ebp
  40932c:	mov    ch,0xd2
  40932e:	push   0xa0170669
  409333:	in     al,0xa2
  409335:	loopne 0x4092d7
  409337:	outs   dx,DWORD PTR ds:[esi]
  409338:	mov    bl,dh
  40933a:	jmp    0x409371
  40933c:	dec    ecx
  40933d:	xlat   BYTE PTR ds:[ebx]
  40933e:	jmp    0x4093a4
  409340:	xchg   BYTE PTR [ebx],ah
  409342:	(bad)  [eax-0x7f5ba1f7]
  409348:	nop
  409349:	cmp    al,0x9e
  40934b:	lea    eax,[edx+ecx*2+0x2]
  40934f:	scas   al,BYTE PTR es:[edi]
  409350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409351:	repnz shl dl,cl
  409354:	in     eax,0x2c
  409356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409357:	test   BYTE PTR [eax-0xd59d13c],ah
  40935d:	jnp    0x4093c8
  40935f:	inc    ebp
  409360:	add    ch,BYTE PTR [edx-0x103148fc]
  409366:	test   eax,0x7aefdd89
  40936b:	sub    eax,0xd5b49f16
  409370:	inc    eax
  409371:	or     DWORD PTR [edi*2+0x7a396c51],0x60
  409379:	or     BYTE PTR [edi],dl
  40937b:	cld    
  40937c:	mov    ebp,0x6032a48e
  409381:	and    al,0x39
  409383:	mov    esp,0x6b0df80e
  409388:	mov    cl,0xfa
  40938a:	jmp    0x40934c
  40938c:	pop    esp
  40938d:	pusha  
  40938e:	pop    eax
  40938f:	xchg   ebp,eax
  409390:	mov    ah,0x88
  409392:	push   ecx
  409393:	fbld   TBYTE PTR [eax+0x6677032d]
  409399:	ficom  WORD PTR [ebp+0x48]
  40939c:	addr16 (bad) 
  40939e:	mov    ch,0x28
  4093a0:	clc    
  4093a1:	scas   al,BYTE PTR es:[edi]
  4093a2:	mov    ebx,0x2d938f25
  4093a7:	outs   dx,BYTE PTR ds:[esi]
  4093a8:	push   esi
  4093a9:	cmp    eax,0x203fb78e
  4093ae:	and    DWORD PTR [ebx],ecx
  4093b0:	dec    bh
  4093b2:	mov    cl,0x6c
  4093b4:	mov    bh,0xdd
  4093b6:	js     0x40937e
  4093b8:	repz fwait
  4093ba:	xchg   esi,eax
  4093bb:	pop    es
  4093bc:	lods   eax,DWORD PTR ds:[esi]
  4093bd:	cmp    DWORD PTR [ecx],ebx
  4093bf:	xor    cl,bh
  4093c1:	ins    BYTE PTR es:[edi],dx
  4093c2:	cdq    
  4093c3:	adc    BYTE PTR [edi+0x77],dl
  4093c6:	pop    es
  4093c7:	sub    bl,BYTE PTR [ebx]
  4093c9:	test   BYTE PTR [esi+0xc],cl
  4093cc:	sbb    ebp,DWORD PTR [edx]
  4093ce:	sub    ecx,DWORD PTR [esi]
  4093d0:	jge    0x4093df
  4093d2:	push   ds
  4093d3:	mov    al,ds:0x2a7a3885
  4093d8:	pop    es
  4093d9:	stos   BYTE PTR es:[edi],al
  4093da:	bnd ret 
  4093dc:	inc    ebp
  4093dd:	dec    ebp
  4093de:	icebp  
  4093df:	mov    al,0x4a
  4093e1:	sub    eax,0xd88a3bac
  4093e6:	xchg   BYTE PTR [bx+si-0xa],bl
  4093ea:	jmp    0x6e09:0x234a4168
  4093f1:	pop    esi
  4093f2:	dec    edx
  4093f3:	test   dh,0x46
  4093f6:	cmp    ch,bh
  4093f8:	daa    
  4093f9:	fcom   DWORD PTR [edx+0x30032f5e]
  4093ff:	ds or  al,0x9
  409402:	sti    
  409403:	and    al,0x4a
  409405:	and    ah,BYTE PTR [ebx]
  409407:	sbb    esi,DWORD PTR [ebx+ebx*4+0x56]
  40940b:	pop    esi
  40940c:	add    BYTE PTR [edx+0x54],ch
  40940f:	or     al,0xc6
  409411:	ins    DWORD PTR es:[edi],dx
  409412:	xchg   ax,ax
  409414:	sbb    dl,BYTE PTR [ebx+0x15b47fe4]
  40941a:	repz pop edi
  40941c:	xor    al,0x4b
  40941e:	xchg   BYTE PTR cs:[edi-0x47],dl
  409422:	stos   BYTE PTR es:[edi],al
  409423:	retf   
  409424:	loope  0x4093f5
  409426:	rol    DWORD PTR [ebp-0x5f],cl
  409429:	dec    esp
  40942a:	nop
  40942b:	xchg   esi,eax
  40942c:	push   ds
  40942d:	sbb    dh,BYTE PTR [ebx+0x58]
  409430:	xchg   ebx,eax
  409431:	loope  0x4094aa
  409433:	push   0x84737abe
  409438:	imul   DWORD PTR [edi-0x69613d06]
  40943e:	(bad)  
  40943f:	xchg   esi,eax
  409440:	jp     0x409458
  409442:	mov    BYTE PTR [eax],ah
  409444:	imul   eax,DWORD PTR [esi],0x95217482
  40944a:	shl    BYTE PTR [ebx-0xd],cl
  40944d:	imul   esi,DWORD PTR [esi+ebx*2],0x7ffcd512
  409454:	mov    dh,0x22
  409456:	ret    
  409457:	je     0x4094ad
  409459:	xor    ebx,esi
  40945b:	dec    ebp
  40945c:	into   
  40945d:	push   eax
  40945e:	pop    ebp
  40945f:	push   ds
  409460:	mov    dh,0xc8
  409462:	cmp    ebp,ecx
  409464:	shl    BYTE PTR [eax-0x44022e47],0x42
  40946b:	sbb    DWORD PTR [ebx+0x2c765acd],edx
  409471:	int    0x82
  409473:	stos   BYTE PTR es:[edi],al
  409474:	bound  ebx,QWORD PTR [ecx+edi*4+0x28235de2]
  40947b:	cmp    BYTE PTR ds:[ebx+0x6d],ah
  40947f:	sub    DWORD PTR [esi-0x522fec02],ebx
  409485:	out    0x19,eax
  409487:	mov    eax,0x8f601c9b
  40948c:	fcom   DWORD PTR [esi-0x44]
  40948f:	mov    esp,0xbacb2161
  409494:	jge    0x409498
  409496:	pop    ecx
  409497:	fisub  WORD PTR [ebp+0x5fdfe92e]
  40949d:	test   eax,0xd608f82f
  4094a2:	mov    ds,edi
  4094a4:	xchg   DWORD PTR [ebx+0x998b7ca],ecx
  4094aa:	sub    DWORD PTR [esp+ebx*8-0x20cc0f90],ecx
  4094b1:	xor    eax,0xea8ddfc2
  4094b6:	mov    WORD PTR [eax],?
  4094b8:	add    esi,DWORD PTR [ebp+edx*8-0x1c]
  4094bc:	mov    dh,0xfa
  4094be:	sbb    eax,0xb86d84f1
  4094c3:	xchg   esp,eax
  4094c4:	pop    esp
  4094c5:	retf   0x7009
  4094c8:	push   cs
  4094c9:	out    0x2c,al
  4094cb:	push   0x26ead9c1
  4094d0:	mov    bh,BYTE PTR [edi-0x3]
  4094d3:	mov    bh,0x48
  4094d5:	xchg   edi,eax
  4094d6:	out    0x2d,eax
  4094d8:	jecxz  0x4094f9
  4094da:	ds (bad) 
  4094dc:	jg     0x409558
  4094de:	xor    DWORD PTR [eax+0x57896fe5],0xffffff82
  4094e5:	pushf  
  4094e6:	popa   
  4094e7:	les    edx,FWORD PTR [ecx]
  4094e9:	cli    
  4094ea:	loope  0x4094f2
  4094ec:	inc    eax
  4094ed:	dec    esi
  4094ee:	xchg   edi,eax
  4094ef:	dec    edi
  4094f0:	lods   al,BYTE PTR ds:[esi]
  4094f1:	scas   eax,DWORD PTR es:[edi]
  4094f2:	call   0xd04aa9ce
  4094f7:	in     al,0x2f
  4094f9:	ror    al,0xf2
  4094fc:	sbb    ah,ch
  4094fe:	ret    0x5d66
  409501:	cmp    DWORD PTR [esi+0x2fbea856],edx
  409507:	xlat   BYTE PTR ds:[ebx]
  409508:	mov    dl,dl
  40950a:	fs out dx,al
  40950c:	jb     0x409561
  40950e:	sbb    eax,0x54e0f0f3
  409513:	sbb    DWORD PTR [eax-0x66469fa9],0xffffffcd
  40951a:	stos   BYTE PTR es:[edi],al
  40951b:	outs   dx,BYTE PTR ds:[esi]
  40951c:	xchg   esi,eax
  40951d:	cwde   
  40951e:	inc    ecx
  40951f:	add    al,BYTE PTR [ebp+0x3b]
  409522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409523:	xor    BYTE PTR [ebx+0x4b],0x92
  409527:	ret    
  409528:	arpl   cx,bp
  40952a:	mov    ss,WORD PTR [ebx+0x12]
  40952d:	mov    dl,0x59
  40952f:	push   esi
  409530:	shl    DWORD PTR [edx-0x366cff75],0xe0
  409537:	mov    esp,0xbedb5a9d
  40953c:	leave  
  40953d:	ins    DWORD PTR es:[edi],dx
  40953e:	mov    al,BYTE PTR [edi]
  409540:	inc    eax
  409541:	retf   
  409542:	adc    edx,DWORD PTR [ebp+0x6dd6b697]
  409548:	cmp    bl,bl
  40954a:	push   cs
  40954b:	out    dx,eax
  40954c:	mov    ax,ds:0xc9e46bba
  409552:	cmp    eax,0xd0509ee7
  409557:	xor    DWORD PTR [ecx-0x314bbfd2],ecx
  40955d:	inc    BYTE PTR [ebx]
  40955f:	js     0x409545
  409561:	(bad)
  409565:	xor    DWORD PTR [edx-0xc],esp
  409568:	out    dx,al
  409569:	cmp    BYTE PTR [ebx+0x6d],dl
  40956c:	mov    eax,0x3b6120e
  409571:	xor    cl,dh
  409573:	scas   eax,DWORD PTR es:[edi]
  409574:	lea    esp,[ebx-0x71]
  409577:	mov    ch,0xff
  409579:	add    ch,BYTE PTR [eax]
  40957b:	mov    al,ds:0x25d74053
  409580:	int    0x87
  409582:	dec    edx
  409583:	out    dx,eax
  409584:	xchg   BYTE PTR [di+0x1c],dh
  409588:	jmp    0x1113f066
  40958d:	sub    al,0x2e
  40958f:	shl    BYTE PTR [ecx+0x55],cl
  409592:	shr    BYTE PTR [ecx+0x6],cl
  409595:	mov    cl,0x7d
  409597:	icebp  
  409598:	mul    DWORD PTR [edx+0x29ffa314]
  40959e:	stc    
  40959f:	inc    edi
  4095a0:	ret    
  4095a1:	xor    ecx,DWORD PTR [eax]
  4095a3:	cmp    eax,0xc9e38207
  4095a8:	call   0x46b68e7d
  4095ad:	xchg   edx,eax
  4095ae:	gs mov dh,0xa
  4095b1:	dec    ebp
  4095b2:	cmp    al,BYTE PTR [eax]
  4095b4:	loope  0x409547
  4095b6:	jle    0x409556
  4095b8:	enter  0x6b86,0xb4
  4095bc:	and    al,0xf1
  4095be:	push   edx
  4095bf:	cmp    eax,0x2bd9f3aa
  4095c4:	(bad)  
  4095c5:	dec    eax
  4095c6:	dec    esp
  4095c7:	adc    bl,BYTE PTR [edx-0x53]
  4095ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095cb:	adc    al,0xc9
  4095cd:	dec    esi
  4095ce:	and    DWORD PTR [ebx-0x476c588b],0xee8a5e9c
  4095d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095d9:	jo     0x4095e8
  4095db:	xor    DWORD PTR [ebp+0x6efaeffc],ebx
  4095e1:	inc    esi
  4095e2:	and    DWORD PTR [ecx+0x38083e84],esp
  4095e8:	sub    al,BYTE PTR [esi]
  4095ea:	and    bl,bh
  4095ec:	inc    esp
  4095ed:	and    BYTE PTR [esp+eiz*4+0x2ef8c774],bh
  4095f4:	scas   eax,DWORD PTR es:[edi]
  4095f5:	push   esp
  4095f6:	sub    DWORD PTR [ebx-0x8],0x307a0ad1
  4095fd:	jo     0x40958e
  4095ff:	test   BYTE PTR [ebx-0x138cf703],0x3a
  409606:	dec    edx
  409607:	or     dh,cl
  409609:	mov    ch,0x40
  40960b:	sbb    dh,BYTE PTR [eax+0x45]
  40960e:	sub    DWORD PTR [ecx+0x2d],ebx
  409611:	scas   eax,DWORD PTR es:[edi]
  409612:	and    eax,0x558f7c56
  409617:	rcr    BYTE PTR [ebp+0x19138bc1],cl
  40961d:	scas   eax,DWORD PTR es:[edi]
  40961e:	out    0xb5,eax
  409620:	cli    
  409621:	jle    0x40964f
  409623:	pop    edx
  409624:	scas   al,BYTE PTR es:[edi]
  409625:	cwde   
  409626:	mov    cl,0x61
  409628:	pop    esp
  409629:	xchg   ebx,eax
  40962a:	int    0x5f
  40962c:	sub    ah,bl
  40962e:	pop    edx
  40962f:	push   ss
  409630:	scas   eax,DWORD PTR es:[edi]
  409631:	in     eax,0x91
  409633:	mov    ds:0x1a251e6d,al
  409638:	jne    0x40966e
  40963a:	sahf   
  40963b:	adc    al,0xe6
  40963d:	pop    ebp
  40963e:	mov    dh,0xbd
  409640:	xor    ch,bh
  409642:	jo     0x40969c
  409644:	adc    BYTE PTR [ebp+0x67],cl
  409647:	or     BYTE PTR [esi+0x15],ch
  40964a:	fcmovne st,st(5)
  40964c:	mov    bh,0x8f
  40964e:	jb     0x4095f5
  409650:	ret    0x1fa7
  409653:	ror    BYTE PTR fs:[edx],1
  409656:	das    
  409657:	(bad)  
  409658:	lock xor DWORD PTR [esi-0x400160ad],0x7dd644ff
  409663:	adc    DWORD PTR [edi],0xffffff97
  409666:	push   esp
  409667:	retf   0x68e8
  40966a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40966b:	push   esp
  40966c:	imul   ecx,DWORD PTR [edi-0x61],0x54
  409670:	cmp    al,BYTE PTR [edi+0x206d784e]
  409676:	xor    al,0xa8
  409678:	mov    eax,ds:0xcaf24b38
  40967d:	test   DWORD PTR [esp+ecx*8],eax
  409680:	push   ebx
  409681:	fiadd  WORD PTR [eax-0x5ef5911c]
  409687:	push   ebp
  409688:	ins    BYTE PTR es:[edi],dx
  409689:	pop    ebx
  40968a:	rcl    dh,cl
  40968c:	pop    edx
  40968d:	mov    eax,ds:0x7e5de659
  409692:	jnp    0x4096d4
  409694:	jnp    0x409705
  409696:	popf   
  409697:	shl    ebx,0xa9
  40969a:	or     esp,DWORD PTR [ebx]
  40969c:	xchg   esp,eax
  40969d:	push   ds
  40969e:	ds mov edi,0x5fb4e3cf
  4096a4:	stos   DWORD PTR es:[edi],eax
  4096a5:	and    eax,0x3db6fe6f
  4096aa:	je     0x4096ec
  4096ac:	pop    edx
  4096ad:	hlt    
  4096ae:	adc    al,0xf9
  4096b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096b1:	prefetchw BYTE PTR [eax-0x76]
  4096b5:	dec    ebx
  4096b6:	cmp    al,BYTE PTR [esi+edx*4]
  4096b9:	loop   0x409654
  4096bb:	popf   
  4096bc:	mov    ebx,0x239a08b
  4096c1:	pusha  
  4096c2:	test   al,0xa6
  4096c4:	adc    ch,dl
  4096c6:	jns    0x409731
  4096c8:	rcl    DWORD PTR [edi+edx*4+0x61],0x55
  4096cd:	pop    ebp
  4096ce:	das    
  4096cf:	(bad)  
  4096d0:	inc    edx
  4096d1:	pop    ebp
  4096d2:	inc    edx
  4096d3:	jl     0x4096bd
  4096d5:	push   ss
  4096d6:	les    esp,FWORD PTR [edi-0x2c7b6390]
  4096dc:	mov    ch,0xf5
  4096de:	or     eax,0xcbab3aea
  4096e3:	mov    al,0xb
  4096e5:	fs push ds
  4096e7:	jl     0x4096f2
  4096e9:	scas   al,BYTE PTR es:[edi]
  4096ea:	aaa    
  4096eb:	shl    esp,0xda
  4096ee:	ja     0x4096bb
  4096f0:	and    BYTE PTR [edi+0x42],cl
  4096f3:	mov    bl,BYTE PTR [ecx+0x52092a38]
  4096f9:	mov    cl,0xe7
  4096fb:	dec    ebx
  4096fc:	sahf   
  4096fd:	leave  
  4096fe:	sub    DWORD PTR [esi],eax
  409700:	pop    ds
  409701:	cmp    DWORD PTR [edi+0x1e],edi
  409704:	bound  esi,QWORD PTR [eax-0x4431816c]
  40970a:	mov    al,ds:0x9d0e86dc
  40970f:	dec    edi
  409710:	stc    
  409711:	jecxz  0x4096a3
  409713:	inc    ebp
  409714:	or     al,0xb9
  409716:	push   esi
  409717:	inc    ecx
  409718:	je     0x40977a
  40971a:	es jae 0x40975d
  40971d:	dec    ecx
  40971e:	inc    esi
  40971f:	gs ret 
  409721:	xchg   esi,eax
  409722:	(bad)
  409726:	pop    edx
  409727:	xchg   BYTE PTR [ebx+0x6],cl
  40972a:	jmp    0x81a55b8
  40972f:	dec    ecx
  409730:	data16 mov dh,0x3d
  409733:	mov    BYTE PTR [ecx],dl
  409735:	ror    DWORD PTR [eax],1
  409737:	arpl   sp,cx
  409739:	jnp    0x40977f
  40973b:	mov    ebp,DWORD PTR [esi-0x13]
  40973e:	data16 int3 
  409740:	mov    dh,0xee
  409742:	enter  0x1512,0x81
  409746:	stc    
  409747:	pop    es
  409748:	sbb    cl,BYTE PTR [edi+0x46]
  40974b:	push   eax
  40974c:	add    al,0x6b
  40974e:	cmp    al,0x9f
  409750:	and    al,0x91
  409752:	xor    al,0xe6
  409754:	xchg   ch,ah
  409756:	jb     0x40974d
  409758:	pusha  
  409759:	add    DWORD PTR [esi-0x1f6960d2],ebx
  40975f:	push   ecx
  409760:	add    eax,0x62815a08
  409765:	les    edi,FWORD PTR [ebp+edi*4-0xf]
  409769:	pop    esp
  40976a:	jmp    0x15e56ebc
  40976f:	shl    ecx,cl
  409771:	add    bl,BYTE PTR [ecx-0x4e]
  409774:	(bad)  
  409775:	mov    ds:0xa5103e4a,eax
  40977a:	sbb    ecx,DWORD PTR [edi-0x6e]
  40977d:	mov    ds:0x5ad28f1e,eax
  409782:	add    eax,0xb59dfafc
  409787:	xor    cl,al
  409789:	cli    
  40978a:	into   
  40978b:	out    0xcd,eax
  40978d:	aas    
  40978e:	dec    ebp
  40978f:	daa    
  409790:	xchg   ecx,eax
  409791:	es sbb ah,al
  409794:	aad    0xd1
  409796:	cmp    bh,BYTE PTR [ecx-0x43a59272]
  40979c:	and    edi,DWORD PTR [ebx+eiz*2-0x265d9fb6]
  4097a3:	pop    esi
  4097a4:	test   eax,0x810ebe11
  4097a9:	fstp   TBYTE PTR [edx+0x25]
  4097ac:	enter  0x1f0,0x53
  4097b0:	adc    esi,DWORD PTR [eax-0x56b3f3ea]
  4097b6:	(bad)  
  4097b7:	lods   al,BYTE PTR ds:[esi]
  4097b8:	xor    al,0x4e
  4097ba:	pop    ecx
  4097bb:	xsha256 (bad)
  4097bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097bd:	pop    ss
  4097be:	es aam 0xd0
  4097c1:	(bad)  
  4097c2:	push   0x2
  4097c4:	(bad)  
  4097c5:	aad    0x18
  4097c7:	pop    ss
  4097c8:	add    ebp,DWORD PTR ds:0x8a4487d7
  4097ce:	scas   al,BYTE PTR es:[edi]
  4097cf:	aam    0x31
  4097d1:	cmp    BYTE PTR [esp+eiz*8+0x20],al
  4097d5:	leave  
  4097d6:	je     0x638b8bc8
  4097dc:	or     al,0x7f
  4097de:	push   edi
  4097df:	jae    0x409849
  4097e1:	mov    ecx,0x2d9d0175
  4097e6:	or     eax,0x8748b1ad
  4097eb:	push   esp
  4097ec:	test   DWORD PTR [edi-0x67e68aaf],0xac4dbd96
  4097f6:	sbb    ch,bh
  4097f8:	outs   dx,BYTE PTR ds:[esi]
  4097f9:	ins    BYTE PTR es:[edi],dx
  4097fa:	call   0x7bf3da9e
  4097ff:	cmp    DWORD PTR [esi],0x1b
  409802:	xor    al,0x48
  409804:	xchg   esi,eax
  409805:	push   ds
  409806:	fucom  st(5)
  409808:	shr    DWORD PTR [eax-0x37],cl
  40980b:	add    ebp,DWORD PTR [edi]
  40980d:	add    al,0x9a
  40980f:	xchg   ah,bl
  409811:	push   es
  409812:	fcomp  st(2)
  409814:	adc    BYTE PTR [eax-0x5f],bl
  409817:	int    0xb0
  409819:	cmp    al,0x67
  40981b:	retf   
  40981c:	rcr    DWORD PTR [eax+0x49],cl
  40981f:	inc    ebp
  409820:	jmp    0x4097ae
  409822:	std    
  409823:	repz les ebx,FWORD PTR [ebx+0x83f5acb]
  40982a:	loopne 0x4097f4
  40982c:	jp     0x409894
  40982e:	mov    ebx,0xf8ec51
  409833:	xor    BYTE PTR [eax-0x6d],ch
  409836:	mov    ch,0xe4
  409838:	inc    eax
  409839:	mov    edi,0x58158686
  40983e:	xchg   DWORD PTR [edi],ecx
  409840:	popf   
  409841:	mov    ebp,es
  409843:	sub    BYTE PTR ds:[edx+0x64c4d678],0x92
  40984b:	pop    ds
  40984c:	cmc    
  40984d:	dec    esi
  40984e:	and    ecx,edx
  409850:	bound  edx,QWORD PTR ds:0x45f46b54
  409856:	jno    0x409819
  409858:	cmp    bl,BYTE PTR [ecx+0x1f1c629]
  40985e:	arpl   cx,bx
  409860:	or     edx,DWORD PTR [edx-0xebf368b]
  409866:	jne    0x409817
  409868:	in     eax,dx
  409869:	jns    0x4098cb
  40986b:	pop    ss
  40986c:	int3   
  40986d:	adc    eax,DWORD PTR [ebp-0x6658157f]
  409873:	retf   
  409874:	bound  ebp,QWORD PTR [eax]
  409876:	pop    edi
  409877:	out    dx,eax
  409878:	(bad)  
  409879:	sbb    BYTE PTR [edx],bh
  40987b:	daa    
  40987c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40987d:	xor    eax,0xb2b2bd27
  409882:	and    esi,ebp
  409884:	stos   BYTE PTR es:[edi],al
  409885:	(bad)  
  409887:	outs   dx,BYTE PTR ds:[esi]
  409888:	adc    DWORD PTR [esi-0x3ce9b910],eax
  40988e:	stc    
  40988f:	in     eax,dx
  409890:	inc    ebp
  409891:	mov    al,ds:0x743162ed
  409896:	clc    
  409897:	sbb    DWORD PTR [ecx+eax*2+0x3ac2e14d],ecx
  40989e:	loopne 0x40984d
  4098a0:	or     eax,DWORD PTR [ecx+0x2c]
  4098a3:	shl    DWORD PTR [edi-0x6ffa1387],0xd9
  4098aa:	jae    0x4098a6
  4098ac:	aas    
  4098ad:	sub    eax,edx
  4098af:	js     0x4098d9
  4098b1:	cmp    DWORD PTR [edx-0x72],ecx
  4098b4:	dec    esi
  4098b5:	outs   dx,BYTE PTR ds:[esi]
  4098b6:	test   dl,dl
  4098b8:	outs   dx,BYTE PTR ds:[esi]
  4098b9:	iret   
  4098ba:	dec    esp
  4098bb:	jnp    0x4098d3
  4098bd:	sub    DWORD PTR [esi+esi*8],ecx
  4098c0:	cmp    al,0x16
  4098c2:	dec    esi
  4098c3:	jl     0x409937
  4098c5:	(bad)  
  4098c6:	jle    0x4098ed
  4098c8:	adc    BYTE PTR [edx],ch
  4098ca:	ss pop esp
  4098cc:	inc    ebp
  4098cd:	add    DWORD PTR [edi],edx
  4098cf:	jbe    0x4098db
  4098d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098d2:	push   0xffffffbc
  4098d4:	mov    dh,0x4c
  4098d6:	leave  
  4098d7:	mov    bh,0xd8
  4098d9:	xor    eax,0x21f2c0c3
  4098de:	cld    
  4098df:	and    cl,bh
  4098e1:	imul   BYTE PTR [ecx-0x1e8ce362]
  4098e7:	mov    bh,0x40
  4098e9:	xchg   edi,eax
  4098ea:	dec    esp
  4098eb:	cmp    al,0xad
  4098ed:	xor    BYTE PTR [edx-0x7374ea7],dl
  4098f3:	dec    edx
  4098f4:	push   esp
  4098f5:	dec    ecx
  4098f6:	push   edi
  4098f7:	fist   WORD PTR [edi-0x3e]
  4098fa:	xchg   ah,cl
  4098fc:	cs inc edi
  4098fe:	inc    edx
  4098ff:	or     al,0x50
  409901:	sub    BYTE PTR [edi],dl
  409903:	std    
  409904:	or     al,0xdc
  409906:	inc    ebx
  409907:	pop    esi
  409908:	pop    edx
  409909:	stos   DWORD PTR es:[edi],eax
  40990a:	pop    ds
  40990b:	mov    ds:0x447c708c,eax
  409910:	sbb    DWORD PTR [eax],ebx
  409912:	push   ss
  409913:	cmp    eax,0x73a3368d
  409918:	push   es
  409919:	or     BYTE PTR [eax+0x70],cl
  40991c:	sti    
  40991d:	xor    ah,BYTE PTR [si-0x23]
  409921:	or     bh,bh
  409923:	fldcw  WORD PTR [ecx-0x7]
  409926:	std    
  409927:	jp     0x40998d
  409929:	adc    edi,eax
  40992b:	mov    esi,0xb1cf5638
  409930:	mov    esi,0xe2ca83b7
  409935:	aad    0x9c
  409937:	sub    eax,0xe541d6da
  40993c:	call   FWORD PTR [ebp-0x4c]
  40993f:	leave  
  409940:	sti    
  409941:	adc    BYTE PTR [esi+0x7d4fc116],al
  409947:	cmp    DWORD PTR [ebp-0x4a601010],ebp
  40994d:	cmc    
  40994e:	xor    BYTE PTR [edx],0xd8
  409951:	(bad)  
  409952:	pop    ebx
  409953:	jg     0x409943
  409955:	push   eax
  409956:	add    BYTE PTR [esi+0x49],0x4f
  40995a:	cld    
  40995b:	dec    edx
  40995c:	jbe    0x4099ae
  40995e:	xor    al,0x14
  409960:	loop   0x40999b
  409962:	xor    eax,edi
  409964:	mov    ds:0x8a79d4bd,al
  409969:	sub    ecx,esi
  40996b:	fist   WORD PTR [edx]
  40996d:	sbb    al,al
  40996f:	into   
  409970:	aam    0xb7
  409972:	mov    ch,0xb
  409974:	sbb    DWORD PTR [ebx+0x13d8a023],edi
  40997a:	icebp  
  40997b:	mov    ch,0x40
  40997d:	shr    DWORD PTR [edx],0xba
  409980:	sbb    DWORD PTR [edi],edx
  409982:	mov    ebx,0xab1de410
  409987:	jbe    0x409924
  409989:	pop    ss
  40998a:	es mov ah,0xce
  40998d:	jl     0x4099c5
  40998f:	add    dl,BYTE PTR [edx+0x45]
  409992:	(bad)  
  409993:	push   eax
  409994:	dec    ebx
  409995:	inc    ecx
  409996:	dec    edx
  409997:	and    edi,ebp
  409999:	xchg   esi,eax
  40999a:	xchg   edx,eax
  40999b:	jmp    0x5ac5efb3
  4099a0:	loope  0x409a21
  4099a2:	push   ebp
  4099a3:	pop    edx
  4099a4:	addr16 mov al,ds:0xa5fe
  4099a8:	or     DWORD PTR [ebx+0x2633eebe],eax
  4099ae:	inc    ebp
  4099af:	les    edx,FWORD PTR [ebp-0x5e]
  4099b2:	ss xchg ebp,eax
  4099b4:	cwde   
  4099b5:	dec    esi
  4099b6:	mov    ds:0xcc68c1f0,al
  4099bb:	add    BYTE PTR [edx],dh
  4099bd:	(bad)  
  4099be:	cmp    DWORD PTR [edx+ebx*1],eax
  4099c1:	outs   dx,DWORD PTR ds:[esi]
  4099c2:	out    0x82,eax
  4099c4:	lea    eax,[esi+0x4af99ffb]
  4099ca:	pop    ebx
  4099cb:	mov    bh,BYTE PTR [eax-0x480a77b3]
  4099d1:	mov    fs,WORD PTR [ebp+0x4d]
  4099d4:	int3   
  4099d5:	jb     0x4099d0
  4099d7:	add    al,cl
  4099d9:	add    bh,ah
  4099db:	sbb    DWORD PTR [ebx+esi*8-0xfc0fe81],esi
  4099e2:	jbe    0x4099b4
  4099e4:	ret    
  4099e5:	pop    ss
  4099e6:	lea    esi,ds:0x700accaa
  4099ec:	lods   eax,DWORD PTR ds:[esi]
  4099ed:	pop    ebp
  4099ee:	fdivr  QWORD PTR [ebp-0x60be59bf]
  4099f4:	push   ebx
  4099f5:	pop    edx
  4099f6:	lds    ecx,FWORD PTR [ebp-0x7e]
  4099f9:	mov    WORD PTR [eax+0x2539c247],fs
  4099ff:	leave  
  409a00:	inc    eax
  409a01:	and    al,0xcb
  409a03:	aad    0x2f
  409a05:	sbb    bl,BYTE PTR [esi-0x3]
  409a08:	mov    ecx,ecx
  409a0a:	test   DWORD PTR [eax],esi
  409a0c:	cmp    ah,BYTE PTR [edi]
  409a0e:	pop    ebx
  409a0f:	mov    ebp,ss
  409a11:	leave  
  409a12:	xchg   edx,eax
  409a13:	test   edi,esi
  409a15:	mov    ebx,0x591d0581
  409a1a:	(bad)  
  409a1c:	loope  0x409a5c
  409a1e:	xor    eax,0xbb1a066f
  409a23:	jnp    0x4099c6
  409a25:	sub    DWORD PTR [ebp-0x2d],esp
  409a28:	sbb    esp,DWORD PTR [edi-0x52d1b988]
  409a2e:	stos   BYTE PTR es:[edi],al
  409a2f:	(bad)  
  409a30:	cld    
  409a31:	xchg   BYTE PTR [ecx],dh
  409a33:	outs   dx,DWORD PTR ds:[esi]
  409a34:	pusha  
  409a35:	push   cs
  409a36:	inc    edx
  409a37:	jnp    0x4099f7
  409a39:	rcl    BYTE PTR [ebx-0x1016af07],1
  409a3f:	push   edi
  409a40:	shl    DWORD PTR [ebx+0x39],1
  409a43:	ins    BYTE PTR es:[edi],dx
  409a44:	inc    esp
  409a45:	cmc    
  409a46:	push   ds
  409a47:	pop    ebx
  409a48:	fdiv   QWORD PTR [ecx-0x74165613]
  409a4e:	push   esp
  409a4f:	inc    ecx
  409a50:	pop    edi
  409a51:	test   eax,0xfed1132c
  409a56:	jmp    0x448:0x76f6f1b
  409a5d:	shl    BYTE PTR [ebx],cl
  409a5f:	pop    eax
  409a60:	out    0xa8,al
  409a62:	jecxz  0x409a70
  409a64:	inc    edi
  409a65:	pop    ebx
  409a66:	out    0x1e,eax
  409a68:	mov    bh,0xae
  409a6a:	inc    DWORD PTR [edx+ebx*2]
  409a6d:	test   eax,0x6a16176a
  409a72:	lods   al,BYTE PTR ds:[esi]
  409a73:	je     0x409ae9
  409a75:	dec    ebx
  409a76:	les    esp,FWORD PTR [ecx]
  409a78:	ins    BYTE PTR es:[edi],dx
  409a79:	cmp    esp,DWORD PTR [edx-0x70c3f68a]
  409a7f:	(bad)  
  409a80:	icebp  
  409a81:	jge    0x409ad0
  409a83:	je     0x409af8
  409a85:	xor    eax,0x19b4442c
  409a8a:	cs fwait
  409a8c:	(bad)  
  409a8d:	jg     0x409a54
  409a8f:	add    al,0x79
  409a91:	mov    al,ds:0x23eb2554
  409a96:	jo     0x409a83
  409a98:	pop    ebx
  409a99:	in     al,0xa6
  409a9b:	lods   al,BYTE PTR ds:[esi]
  409a9c:	fwait
  409a9d:	mov    ah,0x9
  409a9f:	xor    al,ch
  409aa1:	dec    ebx
  409aa2:	sti    
  409aa3:	push   es
  409aa4:	jmp    0x409a40
  409aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aa7:	les    ebp,FWORD PTR [eax-0x48c3e98a]
  409aad:	push   edi
  409aae:	imul   esi,DWORD PTR [ebx],0x9e6e81dd
  409ab4:	sub    BYTE PTR [edi-0x5a],ah
  409ab7:	addr16 sbb al,0x49
  409aba:	add    al,0xc4
  409abc:	cwde   
  409abd:	neg    edx
  409abf:	lods   al,BYTE PTR ds:[esi]
  409ac0:	lds    ecx,FWORD PTR [ecx+0x77473b2b]
  409ac6:	cmp    BYTE PTR ds:0x3cc12e4c,0xe2
  409acd:	test   DWORD PTR [esi+edi*2],esp
  409ad0:	cmp    BYTE PTR ds:0x691d7b20,ch
  409ad6:	repz jmp 0x994f:0xda089181
  409ade:	xor    BYTE PTR [ebx-0x57],ah
  409ae1:	push   es
  409ae2:	jno    0x409a6a
  409ae4:	sbb    ebx,DWORD PTR [esi+0x16e5e281]
  409aea:	push   esp
  409aeb:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  409aed:	adc    esi,DWORD PTR [ebx-0x2e]
  409af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409af1:	sub    al,0xcd
  409af3:	sbb    cl,BYTE PTR [ecx-0x1a]
  409af6:	dec    ecx
  409af7:	loop   0x409af6
  409af9:	test   DWORD PTR [ebx],esi
  409afb:	shr    bh,cl
  409afd:	mov    cl,BYTE PTR [edx-0x513d09b5]
  409b03:	dec    edi
  409b04:	push   ebp
  409b05:	pop    edi
  409b06:	mov    esp,0x7b7ec34d
  409b0b:	mov    edx,0x1417b268
  409b10:	add    ecx,esp
  409b12:	cmp    esi,ebp
  409b14:	inc    esi
  409b15:	aas    
  409b16:	ret    0xbd67
  409b19:	dec    edx
  409b1a:	cli    
  409b1b:	arpl   WORD PTR [eax-0x1c75760e],bx
  409b21:	loopne 0x409b73
  409b23:	jae    0x409b12
  409b25:	test   eax,0xb677b10c
  409b2a:	mov    ebx,0x42c3293a
  409b2f:	mov    ss,WORD PTR [ebx-0x654dc620]
  409b35:	ja     0x409b9a
  409b37:	dec    ebx
  409b38:	jo     0x409b4e
  409b3a:	loop   0x409b9d
  409b3c:	inc    ebp
  409b3d:	or     bl,dh
  409b3f:	mov    dl,0xdc
  409b41:	ja     0x409ad8
  409b43:	lea    esp,[edx]
  409b45:	mov    dl,0x24
  409b47:	fadd   QWORD PTR [ebx+ecx*8-0x76385f9b]
  409b4e:	cmp    DWORD PTR [edi],esi
  409b50:	out    0x17,eax
  409b52:	push   ds
  409b53:	jcxz   0x409b64
  409b56:	sbb    eax,DWORD PTR [ecx+0x6d19f327]
  409b5c:	adc    DWORD PTR [esi-0x3548ae6e],0xfffffff2
  409b63:	jmp    0x409af2
  409b65:	mov    ecx,0x3d2dad87
  409b6a:	pop    esi
  409b6b:	or     BYTE PTR [edx-0x11],ch
  409b6e:	daa    
  409b6f:	data16 sbb ah,BYTE PTR [esi]
  409b72:	jnp    0x409b92
  409b74:	push   eax
  409b75:	lods   al,BYTE PTR ds:[esi]
  409b76:	or     BYTE PTR ds:0xb4a6377d,0x89
  409b7d:	and    esi,ebx
  409b7f:	add    DWORD PTR [edx-0x6bd43f2b],esp
  409b85:	les    ecx,FWORD PTR [ecx+eax*8]
  409b88:	push   esi
  409b89:	test   BYTE PTR [edx-0x3aa30629],0x86
  409b90:	cld    
  409b91:	sar    BYTE PTR cs:[edi+0x3c],0xe8
  409b96:	mov    ecx,0x7659609e
  409b9b:	mov    DWORD PTR ds:0x98f84d93,edi
  409ba1:	jae    0x409b87
  409ba3:	and    eax,0xc38529d1
  409ba8:	adc    edi,DWORD PTR [ebp-0x51]
  409bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bac:	(bad)  
  409bad:	outs   dx,DWORD PTR ds:[esi]
  409bae:	cmp    BYTE PTR ds:0x590245d0,ah
  409bb4:	repz int 0x3d
  409bb7:	push   ecx
  409bb8:	icebp  
  409bb9:	out    0x59,eax
  409bbb:	sub    DWORD PTR [eax+0x9],0xffffffae
  409bbf:	cwde   
  409bc0:	dec    ebx
  409bc1:	inc    esp
  409bc2:	into   
  409bc3:	mov    eax,ds:0x98bd404
  409bc8:	fadd   QWORD PTR [edx-0x14354978]
  409bce:	inc    esi
  409bcf:	sbb    BYTE PTR [ecx-0x6677ac23],bh
  409bd5:	arpl   WORD PTR [ebp+edi*2+0x3b],bp
  409bd9:	fnsave [ebx-0x6c]
  409bdc:	xchg   esi,eax
  409bdd:	jge    0x409c29
  409bdf:	les    ecx,FWORD PTR [eax]
  409be1:	repnz xor eax,DWORD PTR [ebp-0x250e8573]
  409be8:	mov    edx,0xf121b6a3
  409bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bee:	lahf   
  409bef:	mov    al,0xf0
  409bf1:	pop    eax
  409bf2:	shl    ebp,cl
  409bf4:	retf   
  409bf5:	dec    esi
  409bf6:	in     eax,dx
  409bf7:	retf   0x5a3
  409bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bfb:	jge    0x409c55
  409bfd:	xchg   esp,eax
  409bfe:	jmp    0x6825:0x4556567b
  409c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c06:	push   ss
  409c07:	stc    
  409c08:	adc    bh,BYTE PTR [ebp-0x6d]
  409c0b:	dec    eax
  409c0c:	mov    bl,0xd
  409c0e:	sub    DWORD PTR [eax-0x74d0d388],ebp
  409c14:	sbb    al,0xe8
  409c16:	repnz adc al,0x88
  409c19:	mov    eax,ds:0xe1508774
  409c1e:	and    DWORD PTR [eax+0xd6649e4],0xcc57bbf8
  409c28:	or     eax,0x505a6f9e
  409c2d:	adc    BYTE PTR [ebp+0x6c90d73a],bh
  409c33:	xor    BYTE PTR [esi+0x11ce7b55],al
  409c39:	fcomip st,st(6)
  409c3b:	xlat   BYTE PTR ds:[ebx]
  409c3c:	(bad)  
  409c3d:	push   0x2241b776
  409c42:	mov    eax,ds:0x58f32c3b
  409c47:	adc    esp,ebx
  409c49:	push   ebp
  409c4a:	and    dh,BYTE PTR [ebx-0x2195a5c]
  409c50:	jno    0x409bf8
  409c52:	push   ds
  409c53:	lods   eax,DWORD PTR ds:[esi]
  409c54:	xor    edi,DWORD PTR [edi]
  409c56:	mov    ah,0x51
  409c58:	push   ebx
  409c59:	pop    edi
  409c5a:	ja     0x409bdf
  409c5c:	add    eax,0xd3eed947
  409c61:	pop    ebp
  409c62:	pop    esi
  409c63:	xor    DWORD PTR [edi-0x4ae9020f],edx
  409c69:	mov    ch,0xa9
  409c6b:	mov    edx,0x5fba98ea
  409c70:	inc    edi
  409c71:	fwait
  409c72:	or     al,0x51
  409c74:	pop    ebx
  409c75:	aaa    
  409c76:	xlat   BYTE PTR ds:[ebx]
  409c77:	adc    edi,eax
  409c79:	retf   
  409c7a:	or     esi,esi
  409c7c:	fsubr  QWORD PTR [edi+0x1a]
  409c7f:	jae    0x409c5d
  409c81:	adc    eax,DWORD PTR [edi+ebp*2-0x6c931dc2]
  409c88:	cmc    
  409c89:	add    ah,BYTE PTR [ebx-0x68f5e405]
  409c8f:	xor    al,BYTE PTR [eax+0x7eabd0ef]
  409c95:	inc    eax
  409c96:	out    dx,eax
  409c97:	arpl   WORD PTR [ecx-0x208a21bd],di
  409c9d:	xchg   ebx,eax
  409c9e:	mov    ch,0xd6
  409ca0:	imul   esi,DWORD PTR [edx+0x73],0x6e
  409ca4:	sub    ebp,esi
  409ca6:	ror    DWORD PTR [esi+0x21],cl
  409ca9:	sti    
  409caa:	inc    esi
  409cab:	fstp   DWORD PTR [esi-0x51382db1]
  409cb1:	push   esi
  409cb2:	imul   edi,DWORD PTR [edx+0x697bc4b0],0xde262ef8
  409cbc:	out    0x13,eax
  409cbe:	mov    ch,0x76
  409cc0:	jne    0x409cbe
  409cc2:	jne    0x409d24
  409cc4:	cdq    
  409cc5:	gs and edx,esi
  409cc8:	leave  
  409cc9:	adc    esi,DWORD PTR [eax]
  409ccb:	push   cs
  409ccc:	mov    cl,0x74
  409cce:	test   cl,ch
  409cd0:	push   eax
  409cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cd2:	sub    al,0x3d
  409cd4:	pusha  
  409cd5:	jno    0x409cf8
  409cd7:	sub    DWORD PTR [eax-0x71],0xabf268c6
  409cde:	div    BYTE PTR [eax]
  409ce0:	pop    es
  409ce1:	xor    edi,DWORD PTR [edi]
  409ce3:	inc    esp
  409ce4:	mov    ah,ch
  409ce6:	psllq  mm6,mm2
  409ce9:	inc    ebx
  409cea:	add    eax,0xd99dd5b4
  409cef:	inc    ebp
  409cf0:	data16 in al,dx
  409cf2:	fistp  QWORD PTR [ecx]
  409cf4:	sub    eax,0x490c1851
  409cf9:	jb     0xec0622a7
  409cff:	inc    ebx
  409d00:	cdq    
  409d01:	mov    ebx,0xd6e84de2
  409d06:	fisub  DWORD PTR [esi+0x76]
  409d09:	in     al,dx
  409d0a:	xor    DWORD PTR [edx+0x18],0x775c44e
  409d11:	lahf   
  409d12:	adc    eax,0x3ec7ffc9
  409d17:	repnz push ss
  409d19:	push   esi
  409d1a:	push   es
  409d1b:	cdq    
  409d1c:	(bad)  
  409d1e:	sbb    DWORD PTR [ecx+0x3f],0xffffff97
  409d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d23:	jae    0x409d18
  409d25:	dec    edx
  409d26:	mov    al,0x3d
  409d28:	not    BYTE PTR [ebp-0x4e]
  409d2b:	frstor ds:0x2f89b039
  409d31:	bound  esi,QWORD PTR [eax-0x72]
  409d34:	pop    es
  409d35:	loopne 0x409da8
  409d37:	add    ecx,DWORD PTR [ebp-0x70]
  409d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d3b:	xchg   esi,eax
  409d3c:	ret    0x45d5
  409d3f:	ins    BYTE PTR es:[edi],dx
  409d40:	lods   eax,DWORD PTR ds:[esi]
  409d41:	push   esi
  409d42:	hlt    
  409d43:	push   es
  409d44:	mov    DWORD PTR [esi],0x78bf80ea
  409d4a:	add    esp,ebp
  409d4c:	jmp    0x9315:0x8110f51
  409d53:	dec    ecx
  409d54:	aam    0x6f
  409d56:	push   0x57
  409d58:	loop   0x409dc2
  409d5a:	sub    dx,bp
  409d5d:	pusha  
  409d5e:	and    edx,esp
  409d60:	push   edx
  409d61:	into   
  409d62:	ja     0x409d04
  409d64:	(bad)  
  409d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d66:	jmp    0x5efb:0xb03130bd
  409d6d:	adc    BYTE PTR [esi+0x476fbfe7],bh
  409d73:	push   cs
  409d74:	int    0xcc
  409d76:	int3   
  409d77:	mov    edi,0xfc1f87ec
  409d7c:	add    esi,ebx
  409d7e:	xor    al,0xca
  409d80:	mov    esp,0xbecb5d86
  409d85:	push   ds
  409d86:	inc    esi
  409d87:	xor    bl,bl
  409d89:	xchg   ebx,eax
  409d8a:	je     0x409d5e
  409d8c:	jae    0x409d3c
  409d8e:	mov    edi,0x44045c47
  409d93:	and    BYTE PTR [ebp+eax*4+0x368b3c61],bh
  409d9a:	aam    0xea
  409d9c:	add    eax,0x1dc73816
  409da1:	add    al,0xbc
  409da3:	adc    eax,esi
  409da5:	mov    ah,0x41
  409da7:	outs   dx,DWORD PTR ds:[esi]
  409da8:	or     eax,0xac706f99
  409dad:	repnz push esi
  409daf:	mov    bl,cl
  409db1:	jmp    0x409db9
  409db3:	mov    cl,0xef
  409db5:	inc    edi
  409db6:	imul   ecx,edx,0x47
  409db9:	bnd jbe 0x409de7
  409dbc:	sti    
  409dbd:	popf   
  409dbe:	dec    ebp
  409dbf:	jns    0x409e1d
  409dc1:	pop    edi
  409dc2:	xor    al,0x63
  409dc4:	sub    eax,0x742047db
  409dc9:	(bad)  
  409dca:	jnp    0x409d5e
  409dcc:	repz arpl di,sp
  409dcf:	dec    edx
  409dd0:	inc    ecx
  409dd1:	xchg   esp,eax
  409dd2:	jb     0x409e19
  409dd4:	clc    
  409dd5:	xor    al,0x9c
  409dd7:	inc    ebx
  409dd8:	icebp  
  409dd9:	test   al,0x95
  409ddb:	fs dec edi
  409ddd:	add    eax,0x58635570
  409de2:	outs   dx,DWORD PTR cs:[esi]
  409de4:	mov    fs,WORD PTR [esi+ebx*8-0x7]
  409de8:	icebp  
  409de9:	clc    
  409dea:	mov    ds:0x5d64bf49,eax
  409def:	mov    bl,0x2b
  409df1:	ror    DWORD PTR [ecx+0x4d81fc45],0xfc
  409df8:	mov    esp,0x8bf89c85
  409dfd:	inc    ebp
  409dfe:	hlt    
  409dff:	xor    eax,esi
  409e01:	add    eax,edi
  409e03:	push   eax
  409e04:	mov    eax,DWORD PTR [ebp-0x10]
  409e07:	xor    eax,esi
  409e09:	add    eax,edi
  409e0b:	push   eax
  409e0c:	mov    eax,DWORD PTR [ebp-0x4]
  409e0f:	xor    eax,esi
  409e11:	add    eax,edi
  409e13:	push   eax
  409e14:	lea    eax,[ebp-0x7c]
  409e17:	push   eax
  409e18:	push   DWORD PTR [ebp-0x2c]
  409e1b:	push   DWORD PTR [ebp-0x28]
  409e1e:	call   0x40c8dd
  409e23:	test   eax,eax
  409e25:	je     0x409e53
  409e2b:	lea    eax,[ebp-0x7c]
  409e2e:	push   eax
  409e2f:	mov    eax,DWORD PTR [ebp-0x28]
  409e32:	xor    eax,esi
  409e34:	add    eax,edi
  409e36:	push   eax
  409e37:	mov    eax,DWORD PTR [ebp-0x24]
  409e3a:	add    eax,0xaa
  409e3f:	push   eax
  409e40:	mov    eax,DWORD PTR [ebp-0x24]
  409e43:	mov    eax,DWORD PTR [eax+0x198]
  409e49:	push   DWORD PTR [eax]
  409e4b:	call   0x402992
  409e50:	mov    DWORD PTR [ebp-0x14],eax
  409e53:	lea    eax,[ebp+0x4]
  409e56:	mov    DWORD PTR [ebp-0x30],eax
  409e59:	mov    eax,DWORD PTR [ebp-0x14]
  409e5c:	test   eax,eax
  409e5e:	je     0x409ec6
  409e64:	lea    eax,[ebp-0x8]
  409e67:	mov    DWORD PTR [ebp-0x38],eax
  409e6a:	mov    eax,DWORD PTR [ebp-0x34]
  409e6d:	mov    DWORD PTR [ebp-0x8],eax
  409e70:	mov    eax,DWORD PTR [ebp-0x8]
  409e73:	mov    ecx,DWORD PTR [ebp-0x14]
  409e76:	sub    eax,ecx
  409e78:	mov    DWORD PTR [ebp-0x8],eax
  409e7b:	mov    ecx,DWORD PTR [ebp-0x4]
  409e7e:	xor    ecx,esi
  409e80:	mov    eax,0xffcd8d20
  409e85:	sub    eax,ecx
  409e87:	add    DWORD PTR [ebp-0x8],eax
  409e8a:	mov    eax,DWORD PTR [ebp-0x8]
  409e8d:	mov    ecx,DWORD PTR [ebp-0x14]
  409e90:	mov    DWORD PTR [ecx+0x1],eax
  409e93:	mov    eax,DWORD PTR [ebp-0x14]
  409e96:	push   DWORD PTR [ebp-0x24]
  409e99:	mov    BYTE PTR [eax],0xe9
  409e9c:	mov    eax,ds:0x42e18f
  409ea1:	push   DWORD PTR [eax]
  409ea3:	push   DWORD PTR ds:0x42e3eb
  409ea9:	push   DWORD PTR ds:0x42e197
  409eaf:	push   DWORD PTR ds:0x42e3cb
  409eb5:	push   DWORD PTR ds:0x42e6f3
  409ebb:	push   DWORD PTR [ebp-0x28]
  409ebe:	push   DWORD PTR [ebp-0x2c]
  409ec1:	mov    eax,DWORD PTR [ebp-0x14]
  409ec4:	call   eax
  409ec6:	mov    eax,DWORD PTR [ebp-0x30]
  409ec9:	mov    ecx,DWORD PTR ds:0x42e38f
  409ecf:	add    DWORD PTR [eax],ecx
  409ed1:	pop    edi
  409ed2:	pop    esi
  409ed3:	leave  
  409ed4:	ret    
  409ed5:	push   ebp
  409ed6:	mov    ebp,esp
  409ed8:	sub    esp,0x18
  409edb:	add    edx,DWORD PTR ds:0x42c004
  409ee1:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  409ee8:	xor    DWORD PTR ds:0x42d018,0x529f
  409ef2:	lea    eax,[ebp+0x14]
  409ef5:	sbb    ecx,edx
  409ef7:	mov    DWORD PTR [ebp-0x4],eax
  409efa:	add    DWORD PTR ds:0x429010,edx
  409f00:	push   esi
  409f01:	mov    DWORD PTR ds:0x429000,0x1b
  409f0b:	cmp    DWORD PTR ds:0x429000,0x0
  409f12:	je     0x409f77
  409f18:	cmp    DWORD PTR ds:0x429000,0xb
  409f1f:	jne    0x409f38
  409f25:	push   DWORD PTR [ebp-0x28]
  409f28:	push   0x0
  409f2a:	push   0x42d010
  409f2f:	push   DWORD PTR [ebp-0x1c]
  409f32:	call   DWORD PTR ds:0x42e9af
  409f38:	cmp    DWORD PTR ds:0x429000,0xc
  409f3f:	jne    0x409f54
  409f45:	xor    esi,esi
  409f47:	or     esi,DWORD PTR ds:0x429000
  409f4d:	dec    esi
  409f4e:	mov    DWORD PTR ds:0x429000,esi
  409f54:	mov    esi,DWORD PTR ds:0x429000
  409f5a:	dec    esi
  409f5b:	mov    DWORD PTR ds:0x429000,esi
  409f61:	jmp    0x409f0b
  409f66:	mov    ecx,DWORD PTR ds:0x41ac60
  409f6c:	mov    edx,DWORD PTR ds:0x41ac64
  409f72:	sub    ecx,edx
  409f74:	xor    ecx,DWORD PTR [ecx+edx*1]
  409f77:	mov    esi,0xf89c85b9
  409f7c:	xor    DWORD PTR ds:0x429028,edx
  409f82:	mov    DWORD PTR [ebp-0xc],esi
  409f85:	sub    DWORD PTR ds:0x42a014,edi
  409f8b:	lea    eax,[ebp-0xc]
  409f8e:	movzx  edx,BYTE PTR ds:0x42c014
  409f95:	adc    edx,DWORD PTR ds:0x42a004
  409f9b:	mov    DWORD PTR ds:0x42c014,edx
  409fa1:	mov    DWORD PTR [ebp-0x14],eax
  409fa4:	or     DWORD PTR ds:0x42d010,0xdad
  409fae:	mov    eax,DWORD PTR [ebp-0xc]
  409fb1:	and    DWORD PTR ds:0x429008,0x0
  409fbb:	jmp    0x409fcd
  409fc0:	mov    ecx,DWORD PTR ds:0x429008
  409fc6:	inc    ecx
  409fc7:	mov    DWORD PTR ds:0x429008,ecx
  409fcd:	cmp    DWORD PTR ds:0x429008,0x15
  409fd4:	jae    0x40a012
  409fda:	cmp    DWORD PTR ds:0x429008,0x9
  409fe1:	jne    0x409fed
  409fe7:	call   DWORD PTR ds:0x42e9b3
  409fed:	cmp    DWORD PTR ds:0x429008,0x8
  409ff4:	jne    0x40a007
  409ffa:	mov    ecx,DWORD PTR ds:0x429008
  40a000:	inc    ecx
  40a001:	mov    DWORD PTR ds:0x429008,ecx
  40a007:	jmp    0x409fc0
  40a00c:	sub    DWORD PTR ds:0x42901c,edx
  40a012:	mov    edx,DWORD PTR [ebp-0x14]
  40a015:	and    DWORD PTR ds:0x42b010,0x0
  40a01f:	jmp    0x40a031
  40a024:	mov    ecx,DWORD PTR ds:0x42b010
  40a02a:	inc    ecx
  40a02b:	mov    DWORD PTR ds:0x42b010,ecx
  40a031:	cmp    DWORD PTR ds:0x42b010,0x17
  40a038:	jae    0x40a06e
  40a03e:	cmp    DWORD PTR ds:0x42b010,0x19
  40a045:	jne    0x40a069
  40a04b:	push   DWORD PTR [ebp-0x10]
  40a04e:	push   0x429008
  40a053:	push   0x87b9
  40a058:	push   DWORD PTR [ebp-0x1c]
  40a05b:	push   DWORD PTR [ebp-0x24]
  40a05e:	push   0x8ec6
  40a063:	call   DWORD PTR ds:0x42e9b7
  40a069:	jmp    0x40a024
  40a06e:	mov    ecx,0x7510899
  40a073:	xor    eax,ecx
  40a075:	add    eax,0x3272e0
  40a07a:	mov    DWORD PTR [edx],eax
  40a07c:	mov    eax,ds:0x42e18b
  40a081:	add    DWORD PTR ds:0x429020,ebx
  40a087:	mov    edx,DWORD PTR [ebp-0x4]
  40a08a:	mov    eax,DWORD PTR [eax]
  40a08c:	add    DWORD PTR ds:0x42d010,0x42b008
  40a096:	add    eax,DWORD PTR [edx]
  40a098:	sbb    edx,DWORD PTR ds:0x42c00c
  40a09e:	push   edi
  40a09f:	mov    DWORD PTR [ebp-0x8],eax
  40a0a2:	and    DWORD PTR ds:0x42c014,0x0
  40a0ac:	jmp    0x40a0bf
  40a0b1:	xor    eax,eax
  40a0b3:	add    eax,DWORD PTR ds:0x42c014
  40a0b9:	inc    eax
  40a0ba:	mov    ds:0x42c014,eax
  40a0bf:	cmp    DWORD PTR ds:0x42c014,0x1d
  40a0c6:	jae    0x40a159
  40a0cc:	cmp    DWORD PTR ds:0x42c014,0x8
  40a0d3:	jne    0x40a0df
  40a0d9:	call   DWORD PTR ds:0x42e9bb
  40a0df:	cmp    DWORD PTR ds:0x42c014,0x7
  40a0e6:	jne    0x40a0fa
  40a0ec:	xor    eax,eax
  40a0ee:	xor    eax,DWORD PTR ds:0x42c014
  40a0f4:	inc    eax
  40a0f5:	mov    ds:0x42c014,eax
  40a0fa:	jmp    0x40a0b1
  40a0ff:	and    DWORD PTR ds:0x42d004,0x0
  40a109:	jmp    0x40a11c
  40a10e:	xor    eax,eax
  40a110:	or     eax,DWORD PTR ds:0x42d004
  40a116:	inc    eax
  40a117:	mov    ds:0x42d004,eax
  40a11c:	cmp    DWORD PTR ds:0x42d004,0x1c
  40a123:	jae    0x40a159
  40a129:	cmp    DWORD PTR ds:0x42d004,0x2b
  40a130:	jne    0x40a147
  40a136:	push   DWORD PTR [ebp-0x20]
  40a139:	push   0x429018
  40a13e:	push   DWORD PTR [ebp-0x1c]
  40a141:	call   DWORD PTR ds:0x42e9bf
  40a147:	jmp    0x40a10e
  40a14c:	movzx  edi,BYTE PTR ds:0x42c014
  40a153:	sbb    DWORD PTR ds:0x42a004,edi
  40a159:	mov    edi,DWORD PTR [ebp+0x8]
  40a15c:	adc    edx,edx
  40a15e:	mov    eax,ds:0x42e313
  40a163:	mov    eax,DWORD PTR [eax+0x198]
  40a169:	xor    edi,ecx
  40a16b:	mov    DWORD PTR ds:0x42a008,0x1f
  40a175:	cmp    DWORD PTR ds:0x42a008,0x0
  40a17c:	je     0x40a1b8
  40a182:	cmp    DWORD PTR ds:0x42a008,0x2d
  40a189:	jne    0x40a1a4
  40a18f:	push   0x42e000
  40a194:	push   0x42e139
  40a199:	push   0x400000
  40a19e:	call   DWORD PTR ds:0x42e9c7
  40a1a4:	xor    edx,edx
  40a1a6:	add    edx,DWORD PTR ds:0x42a008
  40a1ac:	dec    edx
  40a1ad:	mov    DWORD PTR ds:0x42a008,edx
  40a1b3:	jmp    0x40a175
  40a1b8:	mov    edx,0x3272e0
  40a1bd:	xor    DWORD PTR ds:0x429010,0x6770
  40a1c7:	add    edi,edx
  40a1c9:	cmp    DWORD PTR [eax],edi
  40a1cb:	mov    DWORD PTR ds:0x42900c,0x1dd7
  40a1d5:	je     0x40a1f6
  40a1db:	mov    DWORD PTR ds:0x429014,0x4354
  40a1e5:	mov    eax,DWORD PTR [eax]
  40a1e7:	mov    DWORD PTR ds:0x42900c,0x7b1e
  40a1f1:	jmp    0x40c789
  40a1f6:	mov    eax,ds:0x42a008
  40a1fb:	mov    eax,DWORD PTR [ebp+0x18]
  40a1fe:	cmp    eax,esi
  40a200:	jne    0x40a224
  40a206:	mov    DWORD PTR ds:0x429010,0x2813
  40a210:	push   0xf89c85b8
  40a215:	mov    DWORD PTR ds:0x429020,0x131a
  40a21f:	jmp    0x40c778
  40a224:	mov    esi,0x74b
  40a229:	mov    esi,DWORD PTR [ebp+0x18]
  40a22c:	mov    eax,0xf89c85bb
  40a231:	cmp    esi,eax
  40a233:	mov    DWORD PTR ds:0x42c010,0x1f83
  40a23d:	jne    0x40c768
  40a243:	add    esi,eax
  40a245:	mov    eax,DWORD PTR [ebp+0x10]
  40a248:	add    esi,0x4b50
  40a24e:	xor    eax,ecx
  40a250:	or     DWORD PTR ds:0x42c01c,edx
  40a256:	add    eax,edx
  40a258:	mov    DWORD PTR [ebp-0x18],eax
  40a25b:	sbb    DWORD PTR ds:0x42d01c,edx
  40a261:	mov    eax,DWORD PTR [ebp+0xc]
  40a264:	add    esi,0x5e8f
  40a26a:	mov    esi,DWORD PTR [ebp-0x8]
  40a26d:	xor    eax,ecx
  40a26f:	mov    DWORD PTR ds:0x42d004,0x61c0
  40a279:	add    eax,edx
  40a27b:	add    DWORD PTR ds:0x42a004,0x42d004
  40a285:	imul   eax,DWORD PTR [esi]
  40a288:	add    DWORD PTR ds:0x42d004,0x19e2
  40a292:	mov    esi,DWORD PTR [ebp+0x8]
  40a295:	xor    esi,ecx
  40a297:	add    esi,edx
  40a299:	cmp    esi,eax
  40a29b:	mov    eax,DWORD PTR [ebp-0x4]
  40a29e:	push   ebx
  40a29f:	je     0x40a2be
  40a2a5:	mov    esi,DWORD PTR [ebp-0x18]
  40a2a8:	add    DWORD PTR [eax],esi
  40a2aa:	mov    eax,DWORD PTR [ebp-0x4]
  40a2ad:	mov    esi,DWORD PTR [ebp+0xc]
  40a2b0:	xor    esi,ecx
  40a2b2:	add    esi,edx
  40a2b4:	imul   esi,DWORD PTR [eax]
  40a2b7:	mov    DWORD PTR [eax],esi
  40a2b9:	jmp    0x40a2c3
  40a2be:	mov    esi,DWORD PTR [ebp+0x14]
  40a2c1:	xor    DWORD PTR [eax],esi
  40a2c3:	mov    eax,DWORD PTR [ebp-0x4]
  40a2c6:	mov    edi,DWORD PTR [ebp+0x10]
  40a2c9:	xor    edi,ecx
  40a2cb:	mov    esi,0xffcd8d20
  40a2d0:	mov    ebx,esi
  40a2d2:	sub    ebx,edi
  40a2d4:	add    DWORD PTR [eax],ebx
  40a2d6:	mov    eax,DWORD PTR [ebp-0x4]
  40a2d9:	mov    edi,DWORD PTR [ebp-0x8]
  40a2dc:	add    edi,DWORD PTR [eax]
  40a2de:	mov    DWORD PTR [ebp-0x8],edi
  40a2e1:	mov    eax,DWORD PTR [ebp+0xc]
  40a2e4:	mov    edi,DWORD PTR [ebp+0xc]
  40a2e7:	xor    edi,ecx
  40a2e9:	jmp    0x40c634
  40a2ee:	neg    ch
  40a2f0:	jns    0x40a2c7
  40a2f2:	xchg   ecx,eax
  40a2f3:	mov    ch,0x76
  40a2f5:	popf   
  40a2f6:	outs   dx,BYTE PTR ds:[esi]
  40a2f7:	mov    ah,0x10
  40a2f9:	inc    esi
  40a2fa:	out    dx,eax
  40a2fb:	jno    0x40a2d9
  40a2fd:	cmc    
  40a2fe:	add    BYTE PTR cs:[edx+0x7a],bh
  40a302:	inc    esp
  40a303:	pop    edi
  40a304:	jp     0x40a380
  40a306:	mov    ds:0x9e962e30,al
  40a30b:	or     BYTE PTR [ebp-0x1483c0d4],0xdc
  40a312:	outs   dx,BYTE PTR ds:[esi]
  40a313:	fidiv  WORD PTR [edi]
  40a315:	sub    eax,ecx
  40a317:	dec    edx
  40a318:	or     cl,cl
  40a31a:	and    al,0x62
  40a31c:	bound  ebp,QWORD PTR [esi+0x69d41b6]
  40a322:	jb     0x40a2d1
  40a324:	lock push eax
  40a326:	and    BYTE PTR [ecx+0x684e1e92],dl
  40a32c:	jno    0x40a341
  40a32e:	iret   
  40a32f:	imul   ebp,DWORD PTR [eax+0xa91d8c6],0x8bef04f9
  40a339:	cmp    eax,0x94a3a93f
  40a33e:	enter  0x6542,0x4b
  40a342:	loopne 0x40a330
  40a344:	push   edi
  40a345:	push   0xffffffa7
  40a347:	iret   
  40a348:	ss pop esi
  40a34a:	jl     0x40a32a
  40a34c:	retf   
  40a34d:	fs or  al,0x1b
  40a351:	sub    esp,esi
  40a353:	outs   dx,DWORD PTR ds:[esi]
  40a354:	das    
  40a355:	or     ecx,esi
  40a357:	push   eax
  40a358:	arpl   ax,bx
  40a35a:	jmp    0x38cf6bbd
  40a35f:	ret    
  40a360:	cmpps  xmm0,xmm0,0x73
  40a364:	out    0xbc,al
  40a366:	daa    
  40a367:	jecxz  0x40a374
  40a369:	mov    dl,0x73
  40a36b:	div    BYTE PTR [ebx]
  40a36d:	inc    ecx
  40a36e:	mov    bh,0xd7
  40a370:	lahf   
  40a371:	push   esi
  40a372:	jp     0x40a316
  40a374:	or     BYTE PTR [ebx+eax*1-0x6f],ah
  40a378:	(bad)  
  40a379:	and    eax,0x471ea966
  40a37e:	lods   al,BYTE PTR ds:[esi]
  40a37f:	sahf   
  40a380:	xchg   DWORD PTR [ebp+0x7a],ebp
  40a383:	xlat   BYTE PTR ds:[ebx]
  40a384:	ds push eax
  40a386:	jl     0x40a343
  40a388:	inc    esi
  40a389:	mov    esp,0x590a31c1
  40a38e:	mov    bh,0xd9
  40a390:	data16 (bad) 
  40a393:	je     0x40a3fa
  40a395:	pop    ds
  40a396:	outs   dx,DWORD PTR ds:[esi]
  40a397:	je     0x40a35c
  40a399:	inc    edi
  40a39a:	loopne 0x40a3e4
  40a39c:	sbb    eax,0xbb2740de
  40a3a1:	add    BYTE PTR [edx+0x16],dh
  40a3a4:	(bad)  
  40a3a6:	scas   eax,DWORD PTR es:[edi]
  40a3a7:	lahf   
  40a3a8:	push   es
  40a3a9:	mov    ah,0xd8
  40a3ab:	retf   
  40a3ac:	rol    DWORD PTR [esi+0x6d],cl
  40a3af:	fsub   st,st(2)
  40a3b1:	push   ebp
  40a3b2:	inc    ebx
  40a3b3:	lods   al,BYTE PTR ds:[esi]
  40a3b4:	jmp    0x7909:0x682261bd
  40a3bb:	push   ebx
  40a3bc:	cmp    ch,BYTE PTR ds:0xb23cb5f9
  40a3c2:	(bad)  [ecx-0x3]
  40a3c5:	jmp    0x178ccc5
  40a3ca:	dec    esi
  40a3cb:	sbb    ebp,DWORD PTR [ecx]
  40a3cd:	call   0x30bf39e2
  40a3d2:	dec    eax
  40a3d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3d4:	or     DWORD PTR [ebx],eax
  40a3d6:	loope  0x40a44c
  40a3d8:	adc    esi,DWORD PTR [ecx+0x5b]
  40a3db:	scas   eax,DWORD PTR es:[edi]
  40a3dc:	push   ds
  40a3dd:	inc    esp
  40a3de:	call   0xe3c1b60a
  40a3e3:	shl    DWORD PTR [eax+ecx*8+0x3b783eb6],0x23
  40a3eb:	or     esp,DWORD PTR [edi]
  40a3ed:	enter  0xe313,0xd4
  40a3f1:	arpl   WORD PTR [ebx-0x2aed77b8],di
  40a3f7:	jo     0x40a451
  40a3f9:	pop    eax
  40a3fa:	xchg   edi,eax
  40a3fb:	push   cs
  40a3fc:	loop   0x40a3c3
  40a3fe:	sub    eax,0xef63ef52
  40a403:	call   0x3211:0x57c21186
  40a40a:	js     0x40a38d
  40a40c:	inc    ecx
  40a40d:	imul   ebx,DWORD PTR [ebx],0x6bed35f
  40a413:	sbb    bl,BYTE PTR [edx+0x2ec23076]
  40a419:	mov    al,0xf
  40a41b:	add    esp,DWORD PTR [ebp+0x1b]
  40a41e:	adc    eax,eax
  40a420:	jl     0x40a401
  40a422:	jo     0x40a440
  40a424:	push   ebx
  40a425:	stc    
  40a426:	pop    ss
  40a427:	int    0x9d
  40a429:	repnz jmp 0x588a:0x4dde0005
  40a431:	mov    ch,0x1d
  40a433:	lock in eax,0xea
  40a436:	and    BYTE PTR [eax+0x3f68e547],bh
  40a43c:	mov    WORD PTR [eax-0x55],?
  40a43f:	pop    esi
  40a440:	mov    BYTE PTR [eax+ebx*2-0xa93249e],ah
  40a447:	lods   al,BYTE PTR ds:[esi]
  40a448:	jno    0x40a48f
  40a44a:	arpl   WORD PTR [esi+0x20],bp
  40a44d:	jnp    0x40a3e1
  40a44f:	push   ss
  40a450:	loope  0x40a4cd
  40a452:	test   al,0x19
  40a454:	adc    eax,0x89e41a41
  40a459:	enter  0xfa29,0x85
  40a45d:	(bad)  
  40a45e:	adc    ebp,DWORD PTR ds:[ebx+0x5a]
  40a462:	sub    edi,DWORD PTR [ecx-0x15b929d3]
  40a468:	rol    DWORD PTR [ebx+0x71ce9c8d],0xc8
  40a46f:	add    eax,0x5baa5715
  40a474:	pop    esp
  40a475:	jecxz  0x40a4b2
  40a477:	icebp  
  40a478:	pop    edi
  40a479:	out    dx,al
  40a47a:	jl     0x40a40e
  40a47c:	sub    al,0xf0
  40a47e:	(bad)  
  40a47f:	dec    ebp
  40a480:	arpl   ax,bx
  40a482:	mov    esp,0xe0c460d6
  40a487:	xchg   edx,eax
  40a488:	call   0x466e:0xbcd6529d
  40a48f:	cmp    bl,al
  40a491:	test   al,0x15
  40a493:	inc    esi
  40a494:	pusha  
  40a495:	inc    eax
  40a496:	cdq    
  40a497:	int3   
  40a498:	adc    BYTE PTR [ecx-0x56bae0cd],ah
  40a49e:	mov    al,ds:0x7aff40c4
  40a4a3:	addr16 mov edx,0xa2fa5f9b
  40a4a9:	adc    edi,ecx
  40a4ab:	sahf   
  40a4ac:	bound  eax,QWORD PTR [ebx-0x7a]
  40a4af:	xchg   ebp,eax
  40a4b0:	iret   
  40a4b1:	nop
  40a4b2:	sub    al,0xc6
  40a4b4:	jns    0x40a43f
  40a4b6:	xchg   edi,eax
  40a4b7:	loopne 0x40a4d1
  40a4b9:	mov    ch,0x9c
  40a4bb:	in     eax,dx
  40a4bc:	stc    
  40a4bd:	or     DWORD PTR [ebx-0x6a],ebp
  40a4c0:	loop   0x40a45d
  40a4c2:	mov    ch,0xa3
  40a4c4:	adc    BYTE PTR [edx],ah
  40a4c6:	push   0xcd27acaa
  40a4cb:	adc    eax,0x2ff1a39b
  40a4d0:	add    cl,BYTE PTR [ecx-0x1c631e30]
  40a4d6:	xor    al,0x1d
  40a4d8:	jp     0x40a4f0
  40a4da:	jb     0x40a554
  40a4dc:	adc    DWORD PTR [ecx+ebp*4+0x24],edi
  40a4e0:	pop    ds
  40a4e1:	popa   
  40a4e2:	pop    edx
  40a4e3:	mov    WORD PTR [esi+edi*1],cs
  40a4e6:	or     DWORD PTR [ebp+0x1c0fce4c],0x65
  40a4ed:	jmp    0x40a476
  40a4ef:	icebp  
  40a4f0:	push   ebx
  40a4f1:	xor    BYTE PTR [edi],cl
  40a4f3:	sub    eax,0x614bce88
  40a4f8:	mov    ecx,0xff2240f
  40a4fd:	(bad)  
  40a4fe:	int3   
  40a4ff:	daa    
  40a500:	add    al,dh
  40a502:	adc    DWORD PTR [eax-0x46],0xbf965c88
  40a509:	xchg   ecx,eax
  40a50a:	sbb    al,BYTE PTR [edx-0x4c]
  40a50d:	std    
  40a50e:	popf   
  40a50f:	je     0x40a4f4
  40a511:	mov    esp,0x1a46c265
  40a516:	jmp    0x40a545
  40a518:	in     al,dx
  40a519:	mov    bh,0xec
  40a51b:	lock ja 0x40a569
  40a51e:	dec    eax
  40a51f:	fsubr  QWORD PTR [ecx+ecx*8+0x79]
  40a523:	jno    0x40a531
  40a525:	dec    ebx
  40a526:	loop   0x40a594
  40a528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a529:	repz push es
  40a52b:	inc    ecx
  40a52c:	ret    
  40a52d:	cmp    al,BYTE PTR [eax+0x78bc7fc5]
  40a533:	xor    DWORD PTR [edi],edi
  40a535:	scas   al,BYTE PTR es:[edi]
  40a536:	xchg   ebx,eax
  40a537:	pusha  
  40a538:	popf   
  40a539:	inc    esi
  40a53a:	inc    esp
  40a53b:	mov    cl,0xd1
  40a53d:	inc    edi
  40a53e:	es int3 
  40a540:	leave  
  40a541:	mov    ebp,0xa0c4d75b
  40a546:	or     al,0x3f
  40a548:	cmp    bl,al
  40a54a:	push   eax
  40a54b:	jne    0x40a5b5
  40a54d:	sahf   
  40a54e:	in     eax,dx
  40a54f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a550:	adc    eax,DWORD PTR [eax]
  40a552:	enter  0x766e,0xaa
  40a556:	fsubr  QWORD PTR [ebx-0xb64fa00]
  40a55c:	push   cx
  40a55e:	popf   
  40a55f:	jg     0x40a5c1
  40a561:	sbb    eax,0xd19928d0
  40a566:	inc    ecx
  40a567:	arpl   WORD PTR ds:0x6d2b041a,ax
  40a56d:	push   es
  40a56e:	adc    DWORD PTR [ebx-0x4e],esi
  40a571:	mov    ds:0xc56994d6,eax
  40a576:	in     eax,dx
  40a577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a578:	sar    DWORD PTR [esi],cl
  40a57a:	push   ebp
  40a57b:	dec    ebx
  40a57c:	sub    dh,dh
  40a57e:	mov    esi,DWORD PTR [ebx+ebp*1]
  40a581:	xor    BYTE PTR [edx+0x2977a6cc],bl
  40a587:	or     DWORD PTR [edi],edx
  40a589:	(bad)  
  40a58a:	adc    eax,0x163fb178
  40a58f:	inc    esi
  40a590:	sbb    dh,BYTE PTR [ebp+0x53fe2ec3]
  40a596:	xlat   BYTE PTR ds:[ebx]
  40a597:	ret    
  40a598:	mov    al,ds:0x99dbfe9f
  40a59d:	jmp    0x40a59c
  40a59f:	dec    ebx
  40a5a0:	or     al,0x44
  40a5a2:	cmp    al,BYTE PTR ds:0xb6bd434a
  40a5a8:	cwde   
  40a5a9:	aad    0xbd
  40a5ab:	test   eax,0x9ace62c3
  40a5b0:	test   DWORD PTR [ebp-0x27],0x831606b4
  40a5b7:	sub    bh,BYTE PTR [ebx+0x7e7b9af0]
  40a5bd:	mov    esp,0x7bdb6e64
  40a5c2:	pop    edi
  40a5c3:	sbb    cl,BYTE PTR [edx-0x50]
  40a5c6:	ss mov ah,0xd0
  40a5c9:	mov    DWORD PTR ds:0x1e3b191a,ecx
  40a5cf:	cmp    DWORD PTR [eax],0xffffffa7
  40a5d2:	mov    ebp,0x87e1fcf6
  40a5d7:	pop    ecx
  40a5d8:	pop    esi
  40a5d9:	mov    ds:0xfa699ae2,al
  40a5de:	outs   dx,BYTE PTR ds:[esi]
  40a5df:	or     DWORD PTR [edx],ebp
  40a5e1:	pop    edx
  40a5e2:	test   DWORD PTR [ebp+0x5e86a35c],ebx
  40a5e8:	or     DWORD PTR [ebx+eiz*2-0x75],ebp
  40a5ec:	fdiv   DWORD PTR [esi+eax*4+0x5c5dc0c3]
  40a5f3:	jnp    0x40a5f4
  40a5f5:	jae    0x40a62d
  40a5f7:	mov    ds:0xe73155f8,eax
  40a5fc:	repz xor esp,DWORD PTR ds:0x9c397eaa
  40a603:	adc    bl,BYTE PTR [ebp+0x1b]
  40a606:	dec    edx
  40a607:	shl    bh,1
  40a609:	shr    BYTE PTR [edx+0x629e0539],cl
  40a60f:	jbe    0x40a61d
  40a611:	rcr    bh,0x8a
  40a614:	cmp    al,0xa1
  40a616:	or     eax,0x9c2d5c9
  40a61b:	jp     0x40a67d
  40a61d:	retf   
  40a61e:	sbb    al,0xfb
  40a620:	scas   eax,DWORD PTR es:[edi]
  40a621:	sar    BYTE PTR [edi-0x6c3749b],0x13
  40a628:	enter  0x2a19,0xe4
  40a62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a62d:	cmp    al,0x19
  40a62f:	fdivr  QWORD PTR [edx-0x43]
  40a632:	stos   DWORD PTR es:[edi],eax
  40a633:	out    dx,eax
  40a634:	aas    
  40a635:	sbb    BYTE PTR [edx-0xf],al
  40a638:	jmp    0x91d0:0x5a0d62d9
  40a63f:	cmp    ecx,DWORD PTR [esi-0x28]
  40a642:	loopne 0x40a6a0
  40a644:	retf   
  40a645:	mov    ecx,0x9a009d28
  40a64a:	jecxz  0x40a6c1
  40a64c:	leave  
  40a64d:	or     esi,esi
  40a64f:	div    BYTE PTR [ebp-0x2927fbba]
  40a655:	or     cl,ah
  40a657:	ss jbe 0x40a655
  40a65a:	sub    eax,0x7dcd1c3b
  40a65f:	mov    ch,0x8b
  40a661:	mov    DWORD PTR [edx+0x57],edx
  40a664:	call   FWORD PTR [edi-0x1d]
  40a667:	xchg   ebp,eax
  40a668:	jle    0x40a66b
  40a66a:	push   ds
  40a66b:	fnstenv [esi+0x604653a7]
  40a671:	fild   QWORD PTR gs:[esi+ecx*4-0x6d]
  40a676:	adc    DWORD PTR ds:0xdb298e39,eax
  40a67c:	ret    0x2950
  40a67f:	icebp  
  40a680:	lods   eax,DWORD PTR ds:[esi]
  40a681:	pop    edi
  40a682:	adc    dh,BYTE PTR [ebx-0x83a5a18]
  40a688:	leave  
  40a689:	and    al,0xfb
  40a68b:	pop    ds
  40a68c:	jecxz  0x40a6d0
  40a68e:	mov    eax,0xeb2d3048
  40a693:	add    al,0x8f
  40a695:	add    BYTE PTR [ebx],al
  40a697:	push   0xffffff8f
  40a699:	pop    esp
  40a69a:	ins    BYTE PTR es:[edi],dx
  40a69b:	inc    esp
  40a69c:	jle    0x40a6b6
  40a69e:	arpl   WORD PTR [edx-0x71],cx
  40a6a1:	xor    BYTE PTR [esi+0x3702017c],ah
  40a6a7:	jb     0x40a67d
  40a6a9:	push   ds
  40a6aa:	out    dx,al
  40a6ab:	jno    0x40a6e5
  40a6ad:	outs   dx,DWORD PTR ds:[esi]
  40a6ae:	das    
  40a6af:	in     eax,dx
  40a6b0:	mov    gs,ebp
  40a6b2:	xor    esp,DWORD PTR [ebp-0xbb713e5]
  40a6b8:	iret   
  40a6b9:	mov    ds:0x15f3bde,al
  40a6be:	push   edi
  40a6bf:	ret    
  40a6c0:	xchg   BYTE PTR [ebp+0x2c8e6808],cl
  40a6c6:	lds    esi,FWORD PTR [ecx+edi*2+0x3c]
  40a6ca:	mov    ebp,0x7aa15963
  40a6cf:	xor    dh,ah
  40a6d1:	and    DWORD PTR [ecx],edi
  40a6d3:	cmc    
  40a6d4:	aaa    
  40a6d5:	fsub   DWORD PTR [edx]
  40a6d7:	push   ds
  40a6d8:	xchg   esp,eax
  40a6d9:	ror    BYTE PTR [edx],1
  40a6db:	lahf   
  40a6dc:	adc    cl,BYTE PTR [di+0x311e]
  40a6e1:	mov    al,ds:0xd79f44b8
  40a6e6:	mov    esp,0x3f5c433c
  40a6eb:	mov    eax,ds:0x45508f61
  40a6f0:	inc    edi
  40a6f1:	dec    ebx
  40a6f2:	lods   al,BYTE PTR ds:[esi]
  40a6f3:	adc    esi,esp
  40a6f5:	jno    0x40a710
  40a6f7:	(bad)  
  40a6f8:	ja     0x40a680
  40a6fa:	mov    ?,WORD PTR [edi+0x3ea79d4f]
  40a700:	push   edx
  40a701:	cli    
  40a702:	dec    eax
  40a703:	cmp    al,0xe5
  40a705:	std    
  40a706:	dec    esi
  40a707:	out    dx,al
  40a708:	jbe    0x40a705
  40a70a:	(bad)  
  40a70b:	push   ebx
  40a70c:	aam    0x56
  40a70e:	(bad)  ds:0xf6d61ef3
  40a714:	mov    bh,0x5
  40a716:	shl    DWORD PTR [edx+esi*2+0x4d87c4cb],cl
  40a71d:	arpl   WORD PTR [esi],sp
  40a71f:	push   cs
  40a720:	inc    ecx
  40a721:	mov    bh,0xc3
  40a723:	push   es
  40a724:	cs inc esi
  40a726:	mul    ah
  40a728:	push   0xc6bc7d62
  40a72d:	(bad)
  40a730:	mov    ds:0x91d917c3,eax
  40a735:	js     0x40a755
  40a737:	fsub   st,st(0)
  40a739:	in     al,dx
  40a73a:	sub    eax,0xd10c7019
  40a73f:	mov    bh,0x5d
  40a741:	imul   eax,esp,0x8e9b9184
  40a747:	mov    esp,0xa4dc10b6
  40a74c:	and    DWORD PTR [edi+0x30],eax
  40a74f:	dec    ebp
  40a750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a751:	xchg   BYTE PTR [edx-0x2a],ah
  40a754:	mov    ebp,0x218d244c
  40a759:	mov    ds:0xc66777f,eax
  40a75e:	cmp    BYTE PTR [ebx+0x1d],al
  40a761:	inc    edi
  40a762:	inc    ebp
  40a763:	inc    ecx
  40a764:	rol    BYTE PTR [ecx-0x15],1
  40a767:	add    dl,0xdd
  40a76a:	pop    ecx
  40a76b:	sahf   
  40a76c:	stos   BYTE PTR es:[edi],al
  40a76d:	xor    al,0xa2
  40a76f:	xor    DWORD PTR [eax-0x71a5a097],ecx
  40a775:	inc    edx
  40a776:	push   esi
  40a777:	add    BYTE PTR [ecx+0x6bff8f83],cl
  40a77d:	jmp    0x71d2a460
  40a782:	jnp    0x40a784
  40a784:	inc    esi
  40a785:	mov    esi,0xf9db173b
  40a78a:	dec    edi
  40a78b:	mov    al,ds:0xaab1db9f
  40a790:	push   ss
  40a791:	stos   BYTE PTR es:[edi],al
  40a792:	addr16 dec ebp
  40a794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a795:	(bad)  
  40a796:	pop    ss
  40a797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a798:	scas   al,BYTE PTR es:[edi]
  40a799:	pop    ds
  40a79a:	push   edi
  40a79b:	into   
  40a79c:	bound  edx,QWORD PTR ds:0xc352bfe7
  40a7a2:	push   ecx
  40a7a3:	(bad)  
  40a7a4:	in     eax,dx
  40a7a5:	mov    ecx,0xf9ed7ec4
  40a7aa:	bound  esp,QWORD PTR [eax-0x76f1d16]
  40a7b0:	ficom  WORD PTR [ecx]
  40a7b2:	jmp    0x2f1feb00
  40a7b7:	(bad)  
  40a7b9:	mov    eax,ds:0x4712b388
  40a7be:	adc    eax,0xbd3c0c94
  40a7c3:	pop    edx
  40a7c4:	sbb    BYTE PTR [ecx],dh
  40a7c6:	mov    al,ds:0xc8f07623
  40a7cb:	jnp    0x40a809
  40a7cd:	stos   BYTE PTR es:[edi],al
  40a7ce:	(bad)  
  40a7cf:	lods   al,BYTE PTR ds:[esi]
  40a7d0:	jnp    0x40a7db
  40a7d2:	mov    ds:0x8d131d27,al
  40a7d7:	xchg   ebp,eax
  40a7d8:	cmp    eax,0x777998a3
  40a7dd:	rcr    DWORD PTR [ebp+0x77c6f144],0xac
  40a7e4:	jge    0x40a819
  40a7e6:	lods   al,BYTE PTR ds:[esi]
  40a7e7:	das    
  40a7e8:	outs   dx,BYTE PTR ds:[esi]
  40a7e9:	xor    ecx,edi
  40a7eb:	stc    
  40a7ec:	lods   eax,DWORD PTR ds:[esi]
  40a7ed:	jbe    0x40a784
  40a7ef:	ret    
  40a7f0:	dec    edi
  40a7f1:	fs call 0xa273:0x2a9b081e
  40a7f9:	out    dx,eax
  40a7fa:	std    
  40a7fb:	xchg   ebp,eax
  40a7fc:	mov    cl,ah
  40a7fe:	mov    ebx,0x366fa164
  40a803:	(bad)  
  40a804:	cmp    eax,0x5aabe305
  40a809:	sahf   
  40a80a:	ds inc eax
  40a80c:	cmp    al,0xf9
  40a80e:	fidivr DWORD PTR [ecx]
  40a810:	pop    esp
  40a811:	fisttp QWORD PTR [esi]
  40a813:	aas    
  40a814:	mov    bh,0xaa
  40a816:	(bad)  
  40a817:	pop    esi
  40a818:	mov    ah,0xb0
  40a81a:	push   ds
  40a81b:	and    al,0xcf
  40a81d:	add    BYTE PTR [edi-0x62bb5ab8],al
  40a823:	aaa    
  40a824:	imul   ecx,DWORD PTR [ebp-0xa8b696e],0x72
  40a82b:	and    ch,BYTE PTR [ebx+0x42]
  40a82e:	fist   DWORD PTR [eax+ebp*8+0x5d]
  40a832:	and    eax,0x4138f084
  40a837:	push   0xfffffffa
  40a839:	data16 sahf 
  40a83b:	mov    dl,BYTE PTR [edi]
  40a83d:	dec    edx
  40a83e:	dec    eax
  40a83f:	pop    esi
  40a840:	sbb    esp,0x20db9bc8
  40a846:	jg     0x40a7d4
  40a848:	fistp  WORD PTR [esp+edi*2]
  40a84b:	jl     0x40a8a0
  40a84d:	add    ebp,eax
  40a84f:	fdiv   QWORD PTR [edi+ebx*4+0x2a]
  40a853:	(bad)  
  40a854:	mov    al,ds:0x488a8262
  40a859:	push   ss
  40a85a:	rcr    bl,1
  40a85c:	sub    al,0x45
  40a85e:	dec    edi
  40a85f:	mov    al,ds:0x77604c9c
  40a864:	mov    bh,bl
  40a866:	mov    dh,0xb3
  40a868:	test   eax,0xe2281a4
  40a86d:	ret    0x39d7
  40a870:	(bad)  
  40a871:	in     eax,0x1
  40a873:	add    ebx,DWORD PTR [eax+ebx*8-0x29]
  40a877:	jle    0x40a816
  40a879:	dec    edx
  40a87a:	iret   
  40a87b:	mov    dl,0x7c
  40a87d:	retf   
  40a87e:	popf   
  40a87f:	adc    edx,DWORD PTR [edi]
  40a881:	cmp    ebp,DWORD PTR [esi-0x3e]
  40a884:	inc    edi
  40a885:	rol    DWORD PTR [ebx+0x26ec8bec],cl
  40a88b:	std    
  40a88c:	test   al,0x17
  40a88e:	fs mov ss,ecx
  40a891:	out    dx,al
  40a892:	xchg   esp,eax
  40a893:	adc    al,0x0
  40a895:	jbe    0x40a844
  40a897:	jo     0x40a90d
  40a899:	cmp    DWORD PTR [ecx-0x2d],ecx
  40a89c:	push   eax
  40a89d:	mov    al,0xff
  40a89f:	pop    esp
  40a8a0:	ret    0xae28
  40a8a3:	adc    DWORD PTR [ebx-0x3e42c42d],0xeb09a6f6
  40a8ad:	push   ecx
  40a8ae:	dec    eax
  40a8af:	mov    ah,0xe5
  40a8b1:	ins    BYTE PTR es:[edi],dx
  40a8b2:	fdivrp st(2),st
  40a8b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8b5:	jg     0x40a8f7
  40a8b7:	stc    
  40a8b8:	in     eax,dx
  40a8b9:	les    ebx,FWORD PTR [esi-0x5e43098b]
  40a8bf:	aam    0xdc
  40a8c1:	and    eax,0xe1a2e8b1
  40a8c6:	xor    BYTE PTR [ebx-0x7269213d],ah
  40a8cc:	call   0xcc5b:0xe66644a6
  40a8d3:	mov    bh,0x8
  40a8d5:	xchg   ebx,eax
  40a8d6:	and    ebp,DWORD PTR [ecx+ecx*2-0x4aa2ef0a]
  40a8dd:	call   0x5e52ebbc
  40a8e2:	mov    cl,0xd5
  40a8e4:	pop    edi
  40a8e5:	pop    edx
  40a8e6:	push   edi
  40a8e7:	lds    esp,FWORD PTR [eax+0x1d]
  40a8ea:	mov    esi,0x6932f332
  40a8ef:	or     ch,BYTE PTR [eax+0x4cd15dd8]
  40a8f5:	dec    BYTE PTR [eax]
  40a8f7:	pop    edx
  40a8f8:	cli    
  40a8f9:	scas   eax,DWORD PTR es:[edi]
  40a8fa:	loop   0x40a93c
  40a8fc:	rcr    BYTE PTR [eax-0x7d],1
  40a8ff:	push   edi
  40a900:	imul   DWORD PTR [ebp-0x70e73448]
  40a906:	cmp    dl,BYTE PTR [esi+eiz*2+0x5a13053]
  40a90d:	dec    esi
  40a90e:	cmc    
  40a90f:	mov    bh,0xad
  40a911:	push   ecx
  40a912:	(bad)  
  40a913:	shl    bl,0x4a
  40a916:	inc    edx
  40a917:	(bad)  [edi+0x4bcc2b57]
  40a91d:	mov    dl,0xe6
  40a91f:	dec    esi
  40a920:	inc    edi
  40a921:	pop    esi
  40a922:	sub    eax,0x7c2f9f93
  40a927:	push   0x7f695f6c
  40a92c:	pop    esi
  40a92d:	push   esp
  40a92e:	mov    ecx,0x143423c4
  40a933:	idiv   ecx
  40a935:	ds or  al,0x2b
  40a939:	aaa    
  40a93a:	inc    eax
  40a93b:	outs   dx,DWORD PTR ds:[esi]
  40a93c:	int3   
  40a93d:	outs   dx,DWORD PTR ds:[esi]
  40a93e:	cmp    ebx,DWORD PTR [esi+0x47]
  40a941:	(bad)  
  40a942:	pop    ecx
  40a943:	(bad)  
  40a944:	fdiv   DWORD PTR [ebx]
  40a946:	aad    0x89
  40a948:	test   DWORD PTR [esi-0x6320e2c0],esi
  40a94e:	gs retf 0x363c
  40a952:	call   0xb00d0672
  40a957:	mov    dl,0xa2
  40a959:	or     edi,DWORD PTR [esi+0x16]
  40a95c:	mov    ch,0x9f
  40a95e:	gs push ebp
  40a960:	aad    0x72
  40a962:	add    eax,0x924d2eec
  40a967:	lock dec esp
  40a969:	pop    edx
  40a96a:	ins    BYTE PTR es:[edi],dx
  40a96b:	arpl   WORD PTR [esi+0x22f3ac9a],ax
  40a971:	imul   esi,DWORD PTR [edi],0x51e94a84
  40a977:	lea    edi,[eax]
  40a979:	jnp    0x40a9f5
  40a97b:	stc    
  40a97c:	je     0x40a90c
  40a97e:	ds cwde 
  40a980:	or     eax,0x1a1cb8fd
  40a985:	adc    al,0x39
  40a987:	das    
  40a988:	xor    ecx,ebx
  40a98a:	add    al,0xfd
  40a98c:	dec    dx
  40a98e:	jecxz  0x40a960
  40a990:	call   0xbc55:0xa509fe13
  40a997:	adc    BYTE PTR [edx],ch
  40a999:	push   cs
  40a99a:	sbb    al,0xb6
  40a99c:	dec    eax
  40a99d:	mov    edi,DWORD PTR [eax+0x542f125d]
  40a9a3:	cmc    
  40a9a4:	les    edi,FWORD PTR [eax+0x42fba758]
  40a9aa:	out    0x7e,eax
  40a9ac:	dec    edx
  40a9ad:	dec    ebp
  40a9ae:	inc    ebx
  40a9af:	add    eax,0x594964ce
  40a9b4:	fsubp  st(7),st
  40a9b6:	shl    BYTE PTR [eax],1
  40a9b8:	shr    BYTE PTR [edi+0x67],0x69
  40a9bc:	in     al,0xe8
  40a9be:	xchg   esp,eax
  40a9bf:	jmp    0x40aa12
  40a9c1:	and    bh,ah
  40a9c3:	jg     0x40a996
  40a9c5:	aam    0xf3
  40a9c7:	mov    eax,0x806f2c86
  40a9cc:	cmp    BYTE PTR [edx-0x17],ch
  40a9cf:	hlt    
  40a9d0:	stc    
  40a9d1:	mov    esi,0x36afc805
  40a9d6:	repnz in eax,dx
  40a9d8:	inc    edi
  40a9d9:	pop    edi
  40a9da:	xchg   esp,eax
  40a9db:	mov    dh,0xc4
  40a9dd:	icebp  
  40a9de:	(bad)  
  40a9df:	aam    0x7c
  40a9e1:	push   eax
  40a9e2:	cmc    
  40a9e3:	jno    0x40aa1f
  40a9e5:	stos   DWORD PTR es:[edi],eax
  40a9e6:	xor    esi,DWORD PTR ds:0xc3c8c7e5
  40a9ec:	mov    ebx,0x9b98eb02
  40a9f1:	imul   edx,DWORD PTR [ecx-0x3c],0x77
  40a9f5:	adc    dh,BYTE PTR [edx-0x56]
  40a9f8:	jnp    0x40a9f9
  40a9fa:	and    eax,0x695e3c16
  40a9ff:	adc    BYTE PTR [esp+edx*2-0x6d],0x1d
  40aa04:	imul   eax,DWORD PTR [ecx+0x27],0x72fbbbb4
  40aa0b:	or     eax,0x4c3f89f
  40aa10:	(bad)  
  40aa12:	jg     0x40a9fc
  40aa14:	dec    ecx
  40aa15:	and    ebp,DWORD PTR [ecx]
  40aa17:	dec    eax
  40aa18:	std    
  40aa19:	and    edx,DWORD PTR ds:0x686a3a54
  40aa1f:	or     ebp,DWORD PTR [eax]
  40aa21:	out    dx,al
  40aa22:	outs   dx,BYTE PTR ds:[esi]
  40aa23:	scas   al,BYTE PTR es:[edi]
  40aa24:	retf   0xf165
  40aa27:	mov    bl,BYTE PTR [edi-0x58d2400d]
  40aa2d:	lods   al,BYTE PTR ds:[esi]
  40aa2e:	jle    0x40aa91
  40aa30:	cli    
  40aa31:	ficom  DWORD PTR [eax-0x38]
  40aa34:	push   0xffffffb2
  40aa36:	add    DWORD PTR [ebx],0x62a9708
  40aa3c:	or     ebx,DWORD PTR [ebx-0x3]
  40aa3f:	xchg   BYTE PTR [edi+0x2c17ef61],dh
  40aa45:	dec    ecx
  40aa46:	jno    0x40a9d8
  40aa48:	call   0x31baa01a
  40aa4d:	and    esi,DWORD PTR [ebx+0x39]
  40aa50:	mov    DWORD PTR [ebx+0x50],ebp
  40aa53:	ds out dx,eax
  40aa55:	and    esp,esi
  40aa57:	enter  0xa2ee,0xe2
  40aa5b:	scas   eax,DWORD PTR es:[edi]
  40aa5c:	xor    al,0xd1
  40aa5e:	mov    bh,BYTE PTR [ebx-0x2f]
  40aa61:	repz fld st(4)
  40aa64:	xor    BYTE PTR [eax+0x3a],ch
  40aa67:	xchg   DWORD PTR [edi-0x4e3d2958],esp
  40aa6d:	arpl   WORD PTR [ebp+0x5e52230b],si
  40aa73:	test   al,0x98
  40aa75:	pop    ds
  40aa76:	pop    ebx
  40aa77:	pop    ds
  40aa78:	and    BYTE PTR [edi],cl
  40aa7a:	push   esp
  40aa7b:	add    eax,0x38a0d6f
  40aa80:	ss das 
  40aa82:	in     al,dx
  40aa83:	xchg   ebp,eax
  40aa84:	mov    ah,0x80
  40aa86:	sahf   
  40aa87:	cmp    DWORD PTR [eax-0x5d97c145],edx
  40aa8d:	inc    esi
  40aa8e:	and    bl,BYTE PTR [eax-0x301aaa]
  40aa94:	dec    ecx
  40aa95:	cmp    BYTE PTR [edi+0x6f6d3fe1],dl
  40aa9b:	lahf   
  40aa9c:	leave  
  40aa9d:	sbb    eax,0x4e625702
  40aaa2:	jmp    0xac85ea7a
  40aaa7:	ret    0x46b7
  40aaaa:	push   DWORD PTR [ebx-0x64]
  40aaad:	loopne 0x40aa75
  40aaaf:	push   ebx
  40aab0:	shl    BYTE PTR [edi+0x5a09995c],0xc7
  40aab7:	stos   DWORD PTR es:[edi],eax
  40aab8:	ss icebp 
  40aaba:	aam    0x95
  40aabc:	hlt    
  40aabd:	jge    0x40aa8c
  40aabf:	adc    al,bl
  40aac1:	xor    eax,0x943c3c34
  40aac6:	push   es
  40aac7:	shl    DWORD PTR [ecx-0x7b],1
  40aaca:	xchg   esi,eax
  40aacb:	adc    cl,BYTE PTR [ebp+0xb444878]
  40aad1:	(bad)  
  40aad2:	fcomip st,st(7)
  40aad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aad5:	inc    esp
  40aad6:	pop    esi
  40aad7:	cmp    eax,DWORD PTR [edi+0x9bd602b]
  40aadd:	rol    DWORD PTR [esi+edx*4-0x51],1
  40aae1:	jle    0x40aabd
  40aae3:	cdq    
  40aae4:	xchg   edi,eax
  40aae5:	mov    edi,0xec2484bf
  40aaea:	inc    ebp
  40aaeb:	outs   dx,BYTE PTR ds:[esi]
  40aaec:	push   0x99e87817
  40aaf1:	ret    0x52f5
  40aaf4:	mov    BYTE PTR [ebx-0x7d0514e5],ah
  40aafa:	dec    edi
  40aafb:	cmc    
  40aafc:	fsin   
  40aafe:	push   0xfffffff2
  40ab00:	fimul  WORD PTR [eax+eax*8]
  40ab04:	dec    BYTE PTR [ecx-0x55bdd02e]
  40ab0a:	xchg   ebx,eax
  40ab0b:	mov    esp,DWORD PTR cs:[esi]
  40ab0e:	add    al,0xfd
  40ab10:	xor    BYTE PTR [ebp+0x2c871ed3],dh
  40ab16:	adc    edx,DWORD PTR [ecx+0x27]
  40ab19:	xor    DWORD PTR [ebp+0x3a4c9734],ebx
  40ab1f:	mov    cl,0x53
  40ab21:	sub    ecx,DWORD PTR [edi+ebp*2-0x3fb583dc]
  40ab28:	ss cdq 
  40ab2a:	mov    eax,0x9d8d1507
  40ab2f:	in     eax,dx
  40ab30:	jg     0x40ab4e
  40ab32:	repnz mov DWORD PTR [eax+0x72],0x41650680
  40ab3a:	sahf   
  40ab3b:	movd   mm7,DWORD PTR [eax]
  40ab3e:	std    
  40ab3f:	test   BYTE PTR [eax+0x18],ch
  40ab42:	or     dl,bl
  40ab44:	dec    eax
  40ab45:	retf   0xbb1a
  40ab48:	sub    edx,edi
  40ab4a:	jle    0x40ab75
  40ab4c:	lea    esp,[ebx+0x4a382485]
  40ab52:	xchg   esp,eax
  40ab53:	mov    ebp,0xa182e2f
  40ab58:	mov    bh,0x6b
  40ab5a:	pop    ss
  40ab5b:	jl     0x40ab48
  40ab5d:	push   ebx
  40ab5e:	loopne 0x40ab82
  40ab60:	sbb    BYTE PTR [ebx-0x280d7cca],0x53
  40ab67:	div    BYTE PTR [ebx]
  40ab69:	pop    ebp
  40ab6a:	call   0x53d5:0x144a34b
  40ab71:	nop
  40ab72:	neg    BYTE PTR ds:0x9c2d14a7
  40ab78:	repnz mov ebx,0xcc990dc0
  40ab7e:	and    al,BYTE PTR [ebx+0x1a]
  40ab81:	popa   
  40ab82:	(bad)  
  40ab83:	mov    ecx,0xf864e109
  40ab88:	dec    eax
  40ab89:	fistp  WORD PTR [ebp-0x73dca627]
  40ab8f:	and    BYTE PTR [ebx],bl
  40ab91:	jmp    0x957:0x9943dc51
  40ab98:	sbb    DWORD PTR [edx+0x38f64d9d],0xffffffff
  40ab9f:	pop    ecx
  40aba0:	cmp    BYTE PTR [ebp+ebp*4+0x7b],ah
  40aba4:	xchg   ecx,eax
  40aba5:	pop    ebx
  40aba6:	mov    edx,0xb9f35464
  40abab:	loope  0x40abdd
  40abad:	mov    bl,0xfc
  40abaf:	mov    ah,0xc1
  40abb1:	inc    esi
  40abb2:	jnp    0x40abda
  40abb4:	call   0xfb82:0x2fe44890
  40abbb:	cmp    al,0xa6
  40abbd:	(bad)  
  40abbe:	loop   0x40ab57
  40abc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abc1:	fcom   QWORD PTR [eax+0x1be7426f]
  40abc7:	fnstcw WORD PTR [ecx-0x6d]
  40abca:	xor    BYTE PTR [esi],ah
  40abcc:	arpl   WORD PTR [edx],bp
  40abce:	sub    ebx,DWORD PTR [ebp-0x11f7b8be]
  40abd4:	dec    ebp
  40abd5:	call   0x23c3c347
  40abda:	sub    ebx,ebx
  40abdc:	aad    0xb9
  40abde:	xor    al,0xef
  40abe0:	push   esi
  40abe1:	pop    ebx
  40abe2:	stos   BYTE PTR es:[edi],al
  40abe3:	loop   0x40abb8
  40abe5:	mov    al,ds:0xf6e56054
  40abea:	mov    ds,WORD PTR [eax+0x58]
  40abed:	push   eax
  40abee:	lds    esp,FWORD PTR [ebx+0x5ace184d]
  40abf4:	hlt    
  40abf5:	iret   
  40abf6:	sub    esi,edi
  40abf8:	or     ah,ah
  40abfa:	shr    DWORD PTR [esi+ebp*4],0x4e
  40abfe:	xor    BYTE PTR [edi],0xaa
  40ac01:	or     al,BYTE PTR [edx+eax*1-0x3f3a7ac2]
  40ac08:	mov    al,ds:0x8839ba1f
  40ac0d:	mov    edi,0xc7310c24
  40ac12:	xchg   edi,eax
  40ac13:	push   0xffffff83
  40ac15:	int3   
  40ac16:	pusha  
  40ac17:	rcl    DWORD PTR [ecx+0xc],1
  40ac1a:	daa    
  40ac1b:	nop
  40ac1c:	pop    ds
  40ac1d:	sub    ebx,DWORD PTR [esi]
  40ac1f:	mov    ds:0x1528d757,al
  40ac24:	fsub   QWORD PTR [edi+eax*1-0xf]
  40ac28:	imul   ebp,DWORD PTR [ecx-0x29],0x27
  40ac2c:	sar    DWORD PTR [ecx+0xbf9cdf2],cl
  40ac32:	mov    ah,0xef
  40ac34:	mov    WORD PTR [ebx+edx*1],?
  40ac37:	retf   0xf4f3
  40ac3a:	jp     0x40ac5a
  40ac3c:	push   0x79
  40ac3e:	test   DWORD PTR [edx],0xc413066
  40ac44:	bound  edi,QWORD PTR [esi-0x7d]
  40ac47:	xchg   esi,eax
  40ac48:	inc    ecx
  40ac49:	cmp    esi,esi
  40ac4b:	cmp    BYTE PTR [ebx-0xca00867],dh
  40ac51:	js     0x40ac9c
  40ac53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac54:	int3   
  40ac55:	dec    ebp
  40ac56:	pop    es
  40ac57:	movhps QWORD PTR [eax-0x2e56e027],xmm5
  40ac5e:	jmp    0x40ac2a
  40ac60:	push   eax
  40ac61:	mov    dl,0xea
  40ac63:	mov    dh,0x9b
  40ac65:	jecxz  0x40abee
  40ac67:	xor    eax,0x3d9f6dd2
  40ac6c:	data16 sub ah,al
  40ac6f:	or     DWORD PTR [esi+0x12],ecx
  40ac72:	jb     0x40acf3
  40ac74:	loopne 0x40ac05
  40ac76:	xchg   BYTE PTR [edi],dh
  40ac78:	sbb    ch,BYTE PTR [edx+0x0]
  40ac7b:	lods   al,BYTE PTR ds:[esi]
  40ac7c:	add    dh,BYTE PTR [eax+edi*8-0x58]
  40ac80:	bound  ebp,QWORD PTR [edi+0x25749eef]
  40ac86:	sar    DWORD PTR [edx+edi*4+0x19],0x7b
  40ac8b:	inc    ebp
  40ac8c:	jle    0x40ac67
  40ac8e:	loop   0x40acf7
  40ac90:	imul   eax,DWORD PTR [ebp+0x18],0xffffffb5
  40ac94:	jmp    0x40ac59
  40ac96:	lods   eax,DWORD PTR ds:[esi]
  40ac97:	jne    0x40ac33
  40ac99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac9a:	sub    al,0xbf
  40ac9c:	scas   al,BYTE PTR es:[edi]
  40ac9d:	mov    al,ds:0xdaf32fb0
  40aca2:	adc    al,0xde
  40aca4:	(bad)  
  40aca5:	(bad)  
  40aca6:	sbb    BYTE PTR [ebx-0x7b],dl
  40aca9:	in     al,0xdf
  40acab:	pop    ecx
  40acac:	sub    eax,0xedb63c1d
  40acb1:	jns    0x40ac5f
  40acb3:	or     ebp,DWORD PTR [ecx]
  40acb5:	mov    cl,0xe
  40acb7:	lods   eax,DWORD PTR ds:[esi]
  40acb8:	jmp    0x40acee
  40acba:	jo     0x40ac6e
  40acbc:	clc    
  40acbd:	cmc    
  40acbe:	xchg   edi,eax
  40acbf:	and    edx,0x6bb3f766
  40acc5:	jg     0x40ace1
  40acc7:	dec    edx
  40acc8:	cld    
  40acc9:	popf   
  40acca:	cmp    ebp,edi
  40accc:	pop    ds
  40accd:	xor    DWORD PTR [edx+ebx*2-0x4e],0x476dd028
  40acd5:	add    bh,BYTE PTR [ecx-0x71]
  40acd8:	push   ebx
  40acd9:	je     0x40ad1e
  40acdb:	js     0x40ad28
  40acdd:	test   eax,0xa392b178
  40ace2:	(bad)  
  40ace3:	jp     0x40acfd
  40ace5:	xchg   esp,eax
  40ace6:	scas   eax,DWORD PTR es:[edi]
  40ace7:	div    dh
  40ace9:	sbb    bh,BYTE PTR [edx+0x330009fe]
  40acef:	mov    ch,0x40
  40acf1:	lahf   
  40acf2:	pop    ss
  40acf3:	dec    ebp
  40acf4:	fimul  WORD PTR [edi+0x2cd47d57]
  40acfa:	mov    ebx,0xf2539fae
  40acff:	push   cs
  40ad00:	or     eax,0xd9e8f043
  40ad05:	push   ebp
  40ad06:	outs   dx,BYTE PTR ds:[esi]
  40ad07:	imul   edx,DWORD PTR [esi],0x67
  40ad0a:	dec    edx
  40ad0b:	imul   esp,DWORD PTR [ebx-0x18],0x3e168bba
  40ad12:	mov    eax,0x9b0f95b9
  40ad17:	pop    bx
  40ad19:	and    eax,0xa20d31be
  40ad1e:	sbb    DWORD PTR [edx+0x8],esp
  40ad21:	and    ecx,0xffffffc0
  40ad24:	mov    ebx,0x97dd89ff
  40ad29:	adc    al,0x6d
  40ad2b:	mov    al,ds:0x7567d5c6
  40ad30:	and    eax,0x4918d979
  40ad35:	xchg   ebx,eax
  40ad36:	ficom  WORD PTR [eax+ebx*8-0x11]
  40ad3a:	sbb    eax,0xd2098099
  40ad3f:	je     0x40adb9
  40ad41:	(bad)  
  40ad43:	not    BYTE PTR ds:0xb1df694f
  40ad49:	out    0xcb,eax
  40ad4b:	icebp  
  40ad4c:	(bad)  
  40ad4d:	into   
  40ad4e:	sbb    BYTE PTR [ebx],ah
  40ad50:	ret    0x8968
  40ad53:	int3   
  40ad54:	lea    ebx,ds:0xd6579ff9
  40ad5a:	xchg   esi,eax
  40ad5b:	ffree  st(7)
  40ad5d:	lahf   
  40ad5e:	ss xchg ebp,eax
  40ad60:	cmp    dh,BYTE PTR [edx+0x6d]
  40ad63:	adc    ch,BYTE PTR [esp+eax*8-0x2c37f3da]
  40ad6a:	cdq    
  40ad6b:	adc    DWORD PTR [ebp-0x8200fae],esp
  40ad71:	mov    bh,0xd5
  40ad73:	jo     0x40ad3e
  40ad75:	xor    DWORD PTR [ebx-0x750e9e8b],ebx
  40ad7b:	sub    esp,DWORD PTR [ebx+0x5326272b]
  40ad81:	inc    eax
  40ad82:	shr    DWORD PTR [ebx],1
  40ad84:	rol    DWORD PTR [esi],0x21
  40ad87:	xchg   esp,eax
  40ad88:	cmp    al,0x19
  40ad8a:	pop    ebx
  40ad8b:	cmc    
  40ad8c:	ret    
  40ad8d:	inc    edi
  40ad8e:	nop
  40ad8f:	sub    BYTE PTR [ecx+ebp*1+0xb],0x1d
  40ad94:	dec    eax
  40ad95:	imul   ebx,DWORD PTR [ecx+0x8],0xfffffff1
  40ad99:	pushf  
  40ad9a:	aam    0x3d
  40ad9c:	mov    dl,0xc8
  40ad9e:	imul   eax,DWORD PTR [edx],0xffffffce
  40ada1:	push   ecx
  40ada2:	or     DWORD PTR ds:0xb190957f,0x240fa48b
  40adac:	jmp    0x40adc7
  40adae:	fimul  WORD PTR [ebp+0x14]
  40adb1:	dec    esp
  40adb3:	add    al,0x43
  40adb5:	fimul  DWORD PTR ss:[eax+0x6e]
  40adb9:	add    BYTE PTR [eax-0x2883c7b9],ah
  40adbf:	inc    esp
  40adc0:	jle    0x40adb2
  40adc2:	int3   
  40adc3:	add    BYTE PTR ds:0x7a9ab8e8,al
  40adc9:	div    BYTE PTR [ebp-0x2d66ce31]
  40adcf:	add    BYTE PTR [esi+0x50],dl
  40add2:	mov    BYTE PTR [edi],cl
  40add4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add5:	call   0x985d:0x9d44bdd3
  40addc:	gs mov esp,0x31fde841
  40ade2:	inc    edi
  40ade3:	(bad)
  40ade6:	cmc    
  40ade7:	add    ebp,edi
  40ade9:	push   ebp
  40adea:	adc    DWORD PTR [esi],eax
  40adec:	in     al,dx
  40aded:	test   DWORD PTR [ecx-0x5bac0a22],ebp
  40adf3:	mov    ebx,DWORD PTR [edx]
  40adf5:	pop    ebp
  40adf6:	test   DWORD PTR [ecx-0x59f9519c],edi
  40adfc:	mov    esp,0x5764f695
  40ae01:	out    dx,al
  40ae02:	push   ebx
  40ae03:	adc    BYTE PTR [ebp-0x5e],ch
  40ae06:	shl    BYTE PTR [eax],1
  40ae08:	mov    eax,ds:0x7e3fc28c
  40ae0d:	sub    eax,0x99c69af7
  40ae12:	cmp    edx,edx
  40ae14:	out    dx,al
  40ae15:	mov    gs,edi
  40ae17:	shl    DWORD PTR [ebp-0x50],0x6f
  40ae1b:	push   edi
  40ae1c:	outs   dx,DWORD PTR ds:[esi]
  40ae1d:	into   
  40ae1e:	in     al,dx
  40ae1f:	fadd   QWORD PTR [di-0x1a30]
  40ae24:	jns    0x40ae5d
  40ae26:	pop    ebx
  40ae27:	sub    cl,BYTE PTR [edx+0x2d6cbec0]
  40ae2d:	mov    esp,0x800bb0
  40ae32:	dec    esp
  40ae33:	inc    edi
  40ae34:	adc    BYTE PTR [eax],0xed
  40ae37:	xchg   edx,eax
  40ae38:	in     al,dx
  40ae39:	and    bh,bh
  40ae3b:	test   DWORD PTR [ebp+0x19],ebx
  40ae3e:	mov    cl,0x9d
  40ae40:	push   0x636612ba
  40ae45:	push   ebx
  40ae46:	jae    0x40ae69
  40ae48:	rcl    DWORD PTR [ebp+0x4d],0x97
  40ae4c:	or     esp,DWORD PTR [ebx-0x22]
  40ae4f:	popf   
  40ae50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae51:	inc    edi
  40ae52:	adc    eax,0x5e434d27
  40ae57:	je     0x40ae8d
  40ae59:	mov    ebx,0x9520e83c
  40ae5e:	sub    al,BYTE PTR ss:[eax+0x1e]
  40ae62:	sbb    al,0x24
  40ae64:	mov    ecx,0xf09b503
  40ae69:	sbb    al,0x1a
  40ae6b:	sbb    DWORD PTR [eax],0x6c111f04
  40ae71:	pop    es
  40ae72:	lods   al,BYTE PTR fs:[esi]
  40ae74:	push   ebp
  40ae75:	jbe    0x40ae56
  40ae77:	cmp    edx,0xffffff94
  40ae7a:	or     cl,BYTE PTR [eax]
  40ae7c:	ficom  DWORD PTR [esi]
  40ae7e:	fist   DWORD PTR ds:[ebx]
  40ae81:	mov    ds:0x36616b56,eax
  40ae86:	inc    esi
  40ae87:	sbb    BYTE PTR [esi+0xb],ah
  40ae8a:	int3   
  40ae8b:	xchg   ebp,eax
  40ae8c:	dec    esp
  40ae8d:	dec    ebx
  40ae8e:	cmp    al,ah
  40ae90:	int3   
  40ae91:	test   eax,0xc995c082
  40ae96:	push   0x7d
  40ae98:	pushf  
  40ae99:	mov    WORD PTR ds:0x852563d9,?
  40ae9f:	adc    al,0xb5
  40aea1:	jmp    0xb1e9d93b
  40aea6:	or     cl,BYTE PTR [ebx]
  40aea8:	ficomp DWORD PTR [esi+0x56f9756f]
  40aeae:	retf   0xda4c
  40aeb1:	or     dl,BYTE PTR [edi+0x52f6b6d6]
  40aeb7:	sbb    bh,bl
  40aeb9:	mov    al,ds:0xfe1dd318
  40aebe:	(bad)  
  40aebf:	mov    ebp,0xf4dbec23
  40aec4:	jecxz  0x40af2e
  40aec6:	sbb    eax,0xdf5bf51e
  40aecb:	daa    
  40aecc:	repz mov ecx,0xeec2f6a8
  40aed2:	adc    BYTE PTR [edi],0xc6
  40aed5:	mov    al,ds:0xbf1126c7
  40aeda:	cmp    dh,0xdf
  40aedd:	push   ebx
  40aede:	mov    dh,0xd3
  40aee0:	pop    edx
  40aee1:	cdq    
  40aee2:	(bad)  
  40aee3:	test   BYTE PTR [edi],cl
  40aee5:	iret   
  40aee6:	sub    bh,BYTE PTR [ebp+0x5f97257f]
  40aeec:	sbb    BYTE PTR [eax+ecx*1],al
  40aeef:	test   BYTE PTR gs:[esi],bh
  40aef2:	xor    BYTE PTR [ecx-0x10],cl
  40aef5:	outs   dx,DWORD PTR gs:[esi]
  40aef7:	jg     0x40af1d
  40aef9:	call   0xfcd0:0x7f00f019
  40af00:	cli    
  40af01:	daa    
  40af02:	mov    bh,0xa
  40af04:	sahf   
  40af05:	dec    ecx
  40af06:	nop
  40af07:	xor    eax,0xd575f559
  40af0c:	icebp  
  40af0d:	dec    edx
  40af0e:	xor    eax,0x63396edf
  40af13:	pop    ss
  40af14:	jmp    0xd2f1:0xc344fbe9
  40af1b:	xchg   esp,eax
  40af1c:	lea    ebp,[edi+0x3707253d]
  40af22:	sbb    DWORD PTR [ecx-0x67d11f2],0xfffffff4
  40af29:	in     al,0x85
  40af2b:	(bad)  
  40af2c:	jp     0x40af48
  40af2e:	mov    edx,0x3b567046
  40af33:	or     BYTE PTR [edi],0xf5
  40af36:	repnz fidivr DWORD PTR es:[edx-0xa60e090]
  40af3e:	mov    bl,0xfa
  40af40:	stos   DWORD PTR es:[edi],eax
  40af41:	mov    ebp,0x7bbd485d
  40af46:	test   eax,0x7cda3c85
  40af4b:	fwait
  40af4c:	add    BYTE PTR [ebp-0x6f],cl
  40af4f:	mov    DWORD PTR [esi-0x69],ebx
  40af52:	cli    
  40af53:	sbb    eax,DWORD PTR [esi-0x7]
  40af56:	dec    edi
  40af57:	sub    al,0xa7
  40af59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af5a:	and    ch,ah
  40af5c:	xor    ecx,DWORD PTR [ebp+0x75]
  40af5f:	fwait
  40af60:	cmc    
  40af61:	cmp    al,0x7
  40af63:	mov    edi,0x23dc050d
  40af68:	sub    esi,eax
  40af6a:	jg     0x40af5d
  40af6c:	mov    edx,0xb3f8d505
  40af71:	sub    bl,BYTE PTR [edi]
  40af73:	int    0xdf
  40af75:	xchg   esi,eax
  40af76:	add    ecx,DWORD PTR [ecx-0x3a4310b0]
  40af7c:	push   ecx
  40af7d:	in     al,dx
  40af7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af7f:	sub    DWORD PTR [esi-0x4],esp
  40af82:	pop    ecx
  40af83:	mov    esp,0x95c26d68
  40af88:	les    esp,FWORD PTR [ecx-0x27]
  40af8b:	cmp    ah,ch
  40af8d:	iret   
  40af8e:	mov    ecx,DWORD PTR [ecx-0x32]
  40af91:	mov    edx,0xbc4237ed
  40af96:	push   ds
  40af97:	retf   
  40af98:	cld    
  40af99:	jmp    0x2a88:0xeb27a9c6
  40afa0:	(bad)  
  40afa1:	loopne 0x40afa1
  40afa3:	ss push ecx
  40afa5:	icebp  
  40afa6:	dec    ecx
  40afa7:	inc    edx
  40afa8:	mov    dl,0x84
  40afaa:	sahf   
  40afab:	mov    al,0x21
  40afad:	pop    esi
  40afae:	mov    esi,0x22fcc471
  40afb4:	pop    edx
  40afb5:	mov    ah,BYTE PTR [edx]
  40afb7:	lahf   
  40afb8:	push   edi
  40afb9:	xor    edx,DWORD PTR [ebx-0x38182d3e]
  40afbf:	int    0x24
  40afc1:	xor    edx,DWORD PTR [ebp-0x5b]
  40afc4:	dec    BYTE PTR [ebp+0x60]
  40afc7:	pop    es
  40afc8:	outs   dx,BYTE PTR ds:[esi]
  40afc9:	inc    ebx
  40afca:	xchg   DWORD PTR [edx+0x32e648e4],ecx
  40afd0:	or     eax,0xbefb2897
  40afd5:	dec    esi
  40afd6:	jae    0x40affb
  40afd8:	je     0x40b01b
  40afda:	shl    DWORD PTR [ecx-0x2c0b3d1d],0x6b
  40afe1:	push   ds
  40afe2:	sub    BYTE PTR [edi+0x41544c8],0x2d
  40afe9:	fsubr  DWORD PTR [ebx]
  40afeb:	and    al,0x37
  40afed:	cld    
  40afee:	cli    
  40afef:	push   esi
  40aff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aff1:	repnz dec ebx
  40aff3:	enter  0x966,0x89
  40aff7:	sbb    BYTE PTR [eax],ah
  40aff9:	ins    BYTE PTR es:[edi],dx
  40affa:	scas   al,BYTE PTR es:[edi]
  40affb:	inc    edi
  40affc:	cdq    
  40affd:	push   eax
  40affe:	ins    DWORD PTR es:[edi],dx
  40afff:	sahf   
  40b000:	ja     0x40afad
  40b002:	aas    
  40b003:	lock mov ds:0xf7614a79,al
  40b009:	iret   
  40b00a:	pushf  
  40b00b:	sbb    al,0x7e
  40b00d:	les    ebx,FWORD PTR [edx-0x31]
  40b010:	xor    DWORD PTR [ecx+0x18],0x1b9105a2
  40b017:	retf   0xde13
  40b01a:	add    dl,BYTE PTR [esi*2-0x5f35d9c1]
  40b021:	sbb    eax,DWORD PTR [edx+0x18408e9c]
  40b027:	jne    0x40afc1
  40b029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b02a:	xchg   esi,eax
  40b02b:	jmp    0xa41f:0xb2903d7
  40b032:	push   es
  40b033:	sbb    al,0x87
  40b035:	int    0x73
  40b037:	hlt    
  40b038:	jns    0x40b0a0
  40b03a:	test   al,0xe2
  40b03c:	aaa    
  40b03d:	enter  0x239b,0xc2
  40b041:	jle    0x40b01b
  40b043:	mov    edi,0xd9afad2f
  40b048:	mov    ds:0x4efa62c1,al
  40b04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b04e:	out    0x8c,eax
  40b050:	loop   0x40b0b1
  40b052:	popa   
  40b053:	test   eax,0xde131243
  40b058:	bound  edx,QWORD PTR [eax-0x35]
  40b05b:	shr    ebp,1
  40b05d:	es mov ebp,0x1239cf92
  40b063:	mov    bh,0xeb
  40b065:	mov    BYTE PTR [esi],dh
  40b067:	sahf   
  40b068:	std    
  40b069:	pop    ds
  40b06a:	ficom  WORD PTR [eax]
  40b06c:	imul   eax,DWORD PTR [ecx+0x3fd986de],0xffffffcb
  40b073:	adc    ah,BYTE PTR [eax+0x621efaa1]
  40b079:	sti    
  40b07a:	out    0x97,eax
  40b07c:	test   DWORD PTR [edi-0x6983c402],ecx
  40b082:	cdq    
  40b083:	test   BYTE PTR [edi+0x59],0x17
  40b087:	sahf   
  40b088:	sub    DWORD PTR [edi],ecx
  40b08a:	jae    0x40b0e6
  40b08c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b08d:	sub    bh,dl
  40b08f:	cli    
  40b090:	adc    DWORD PTR [edi+0x482ede4e],edi
  40b096:	ret    0xdb5c
  40b099:	ret    
  40b09a:	sar    ch,0xa8
  40b09d:	push   edx
  40b09e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b09f:	jecxz  0x40b049
  40b0a1:	addr16 clc 
  40b0a3:	fisub  WORD PTR fs:[ebp-0x6fe81c5c]
  40b0aa:	lock jl 0x40b077
  40b0ad:	or     eax,0x6ef350f1
  40b0b2:	stc    
  40b0b3:	loope  0x40b123
  40b0b5:	popf   
  40b0b6:	mov    bl,0x4d
  40b0b8:	lods   al,BYTE PTR ds:[esi]
  40b0b9:	imul   esp,DWORD PTR ds:[ecx+0x6d],0x75a246f
  40b0c1:	mov    edx,0xfc6d5e7
  40b0c6:	out    dx,al
  40b0c7:	(bad)
  40b0cc:	sbb    ah,al
  40b0ce:	xchg   DWORD PTR [edi],ebx
  40b0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0d1:	push   esp
  40b0d2:	jle    0x40b054
  40b0d4:	in     al,0x8e
  40b0d6:	or     ch,bh
  40b0d8:	jg     0x40b0e7
  40b0da:	fild   WORD PTR ds:0x4ec64a5
  40b0e0:	mul    edi
  40b0e2:	jb     0x40b0d1
  40b0e4:	loopne 0x40b105
  40b0e6:	jg     0x40b11a
  40b0e8:	mov    edx,0x85b29cfd
  40b0ed:	sbb    al,0xe0
  40b0ef:	or     esi,ebx
  40b0f1:	popa   
  40b0f2:	test   BYTE PTR [ebp-0x13],dh
  40b0f5:	imul   esi,ebx,0x19082a54
  40b0fb:	sub    al,0xff
  40b0fd:	iret   
  40b0fe:	dec    esp
  40b0ff:	mov    bh,0xcf
  40b101:	aad    0x2a
  40b103:	mov    ebx,0x9a2f123f
  40b108:	add    eax,0x51f39eae
  40b10d:	fld    DWORD PTR [ebx]
  40b10f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b110:	jge    0x40b159
  40b112:	pop    eax
  40b113:	add    al,0x6a
  40b115:	imul   eax,DWORD PTR [esi+0x55],0x4508e425
  40b11c:	mov    eax,0x81e41882
  40b121:	es fsubp st(3),st
  40b124:	nop
  40b125:	in     al,dx
  40b126:	add    al,0xd5
  40b128:	lock not DWORD PTR [edx+0x1f]
  40b12c:	pop    ds
  40b12d:	(bad)  
  40b12e:	mov    dl,0xe
  40b130:	push   cs
  40b131:	pop    edx
  40b132:	push   eax
  40b133:	pusha  
  40b134:	(bad)  
  40b135:	xchg   edx,eax
  40b136:	cli    
  40b137:	(bad)  
  40b138:	jb     0x40b176
  40b13a:	ss test al,0x91
  40b13d:	xchg   edi,eax
  40b13e:	mov    al,gs:0xf669df5e
  40b144:	cmp    BYTE PTR [ebp-0x23d683cb],bl
  40b14a:	lods   al,BYTE PTR ds:[esi]
  40b14b:	cmp    DWORD PTR [edx-0x5b],edi
  40b14e:	mov    eax,ds:0xd0a494a
  40b153:	out    dx,al
  40b154:	lods   al,BYTE PTR ds:[esi]
  40b155:	mov    al,0x52
  40b157:	js     0x40b0ef
  40b159:	jge    0x40b19b
  40b15b:	cmp    al,0xe1
  40b15d:	sub    al,0xb3
  40b15f:	sbb    BYTE PTR [edx-0x32],ah
  40b162:	lahf   
  40b163:	ja     0x40b142
  40b165:	xor    BYTE PTR [edx-0x35],al
  40b168:	mov    al,0x3b
  40b16a:	stc    
  40b16b:	add    BYTE PTR [ebp-0x22e4267d],0xc8
  40b172:	mov    al,ds:0xd42b0c04
  40b177:	jnp    0x40b121
  40b179:	clc    
  40b17a:	sub    al,BYTE PTR [ecx+0x58]
  40b17d:	xchg   ebx,eax
  40b17e:	dec    edi
  40b17f:	dec    edx
  40b180:	pop    edi
  40b181:	adc    eax,0x34555f57
  40b186:	sub    DWORD PTR [edi],0xf6c0efbc
  40b18c:	pop    ebp
  40b18d:	xor    eax,0xc9dcacb8
  40b192:	pusha  
  40b193:	fwait
  40b194:	xchg   BYTE PTR [eax+0x77],bl
  40b197:	fdivr  DWORD PTR [eax-0x6f987ced]
  40b19d:	in     al,0x52
  40b19f:	sub    DWORD PTR [edi+0xc],esp
  40b1a2:	lahf   
  40b1a3:	and    al,0x60
  40b1a5:	call   0x9953:0xea87e7a8
  40b1ac:	mov    al,ds:0xae0fbea5
  40b1b1:	mov    ds,ebx
  40b1b3:	sub    ah,BYTE PTR [eax]
  40b1b5:	mov    dh,BYTE PTR [edx-0x70afba44]
  40b1bb:	or     al,0x4b
  40b1bd:	jge    0x40b1e4
  40b1bf:	xchg   esi,eax
  40b1c0:	lds    edx,FWORD PTR [ebx+ebx*4-0x266a810]
  40b1c7:	lods   eax,DWORD PTR ds:[esi]
  40b1c8:	jo     0x40b1c7
  40b1ca:	aad    0x4
  40b1cc:	xor    edi,ecx
  40b1ce:	sub    al,0xe0
  40b1d0:	or     bh,ch
  40b1d2:	(bad)  
  40b1d3:	jp     0x40b20c
  40b1d5:	call   0x62e47d3e
  40b1da:	out    dx,eax
  40b1db:	xchg   ebx,eax
  40b1dc:	retf   
  40b1dd:	(bad)  
  40b1de:	adc    eax,0xbd8c691a
  40b1e3:	sbb    cl,cl
  40b1e5:	stos   BYTE PTR es:[edi],al
  40b1e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1e7:	cwde   
  40b1e8:	xor    eax,0x23
  40b1eb:	cmp    esp,edi
  40b1ed:	mov    WORD PTR ds:0x14a140ea,?
  40b1f3:	add    edx,edi
  40b1f5:	push   0x9f664fa7
  40b1fa:	pusha  
  40b1fb:	pusha  
  40b1fc:	retf   0xcfb2
  40b1ff:	not    edx
  40b201:	out    dx,eax
  40b202:	or     cl,0xc7
  40b205:	icebp  
  40b206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b207:	arpl   ax,cx
  40b209:	std    
  40b20a:	in     al,0x4b
  40b20c:	inc    edi
  40b20d:	mov    bh,0xbc
  40b20f:	mov    esp,0x32a6ff57
  40b214:	cli    
  40b215:	jb     0x40b22b
  40b217:	cdq    
  40b218:	loop   0x40b25c
  40b21a:	mov    BYTE PTR [edi-0x48],bl
  40b21d:	mov    ebp,0x42700633
  40b222:	pop    ecx
  40b223:	add    eax,0xf03a2851
  40b228:	mov    DWORD PTR [edx+0x7d93b515],ebx
  40b22e:	sub    al,0x52
  40b230:	rcl    BYTE PTR [ecx],1
  40b232:	stos   DWORD PTR es:[edi],eax
  40b233:	fninit 
  40b235:	iret   
  40b236:	stc    
  40b237:	add    BYTE PTR [edi+0x21],0x62
  40b23b:	jg     0x40b1db
  40b23d:	cs ret 0xb8b0
  40b241:	dec    ebp
  40b242:	ror    BYTE PTR [edx+0x5f],0x85
  40b246:	(bad)  
  40b247:	daa    
  40b248:	mov    bh,0xc0
  40b24a:	ror    DWORD PTR [esi+0x68541a4f],1
  40b250:	imul   eax,DWORD PTR [edx-0x20663d54],0xffffff90
  40b257:	cmp    al,BYTE PTR [eax]
  40b259:	and    ebx,DWORD PTR [eax-0x76]
  40b25c:	and    al,0x85
  40b25e:	cdq    
  40b25f:	ss push 0xffffff9b
  40b262:	out    dx,al
  40b263:	xchg   ecx,eax
  40b264:	inc    esp
  40b265:	imul   esi,ecx,0xaf7715a4
  40b26b:	imul   esi,DWORD PTR [edx-0x13],0x4b240230
  40b272:	pop    ds
  40b273:	add    BYTE PTR [ecx+0x13],ah
  40b276:	push   ebx
  40b277:	sbb    dl,BYTE PTR [ecx-0x16]
  40b27a:	push   edx
  40b27b:	add    BYTE PTR [edi-0x48a73a21],cl
  40b281:	adc    ecx,DWORD PTR [edx-0x7d]
  40b284:	mov    al,0x4e
  40b286:	sbb    al,0x28
  40b288:	aas    
  40b289:	mov    al,ds:0x2a3f7374
  40b28e:	out    dx,al
  40b28f:	add    BYTE PTR [eax+edx*4-0x1b067cd1],cl
  40b296:	sbb    eax,0x7f31e626
  40b29b:	mov    cl,0xfa
  40b29d:	sbb    BYTE PTR [eax+0x74],dl
  40b2a0:	dec    ebx
  40b2a1:	xor    eax,0x9c0bf280
  40b2a6:	in     al,dx
  40b2a7:	pop    ss
  40b2a8:	in     eax,0xb6
  40b2aa:	xor    BYTE PTR [ecx+edi*2-0x50b0e426],0xf
  40b2b2:	or     DWORD PTR [edi-0x66],ebx
  40b2b5:	cmc    
  40b2b6:	ror    BYTE PTR ds:0xff55a9ec,cl
  40b2bc:	sbb    eax,0x2c5c42fd
  40b2c1:	dec    ebx
  40b2c2:	rol    DWORD PTR [esp+edx*1+0x7b],cl
  40b2c6:	test   eax,0x3d3fa649
  40b2cb:	repz rcr BYTE PTR [edx],1
  40b2ce:	repz cmp eax,0x1181bd59
  40b2d4:	out    dx,al
  40b2d5:	fist   WORD PTR [ebx-0x61]
  40b2d8:	test   al,0x9f
  40b2da:	add    edx,DWORD PTR [esi+eiz*2]
  40b2dd:	jp     0x40b2a5
  40b2df:	sub    al,0x6c
  40b2e1:	test   eax,0x2b57ed69
  40b2e6:	xchg   ecx,eax
  40b2e7:	xor    DWORD PTR [ebp-0x256a51bc],esi
  40b2ed:	fmul   st(5),st
  40b2ef:	(bad)  
  40b2f0:	cmc    
  40b2f1:	cmp    al,0x89
  40b2f3:	sub    BYTE PTR [ebp+edi*8+0x5],ah
  40b2f7:	call   0x106aca25
  40b2fc:	rcl    BYTE PTR [esi],cl
  40b2fe:	add    cl,BYTE PTR [ecx-0x7eca3b5c]
  40b304:	pusha  
  40b305:	xchg   edi,eax
  40b306:	cmp    eax,0x587c0d9a
  40b30b:	jb     0x40b358
  40b30d:	outs   dx,DWORD PTR ds:[esi]
  40b30f:	rcr    edx,1
  40b311:	fisttp DWORD PTR [ebx-0x423bf17d]
  40b317:	mov    eax,0x9f97edf9
  40b31c:	cdq    
  40b31d:	bound  ecx,QWORD PTR [ecx+0x4611c5cc]
  40b323:	loopne 0x40b320
  40b325:	data16 sbb BYTE PTR [edx],al
  40b328:	pop    ds
  40b329:	sbb    BYTE PTR [ebp-0x357eed63],ch
  40b32f:	(bad)  
  40b330:	pushf  
  40b331:	dec    esi
  40b333:	sahf   
  40b334:	daa    
  40b335:	sub    edi,DWORD PTR [esi+esi*8+0x60]
  40b339:	fidiv  DWORD PTR [edx+0x4d]
  40b33c:	test   al,0xb1
  40b33e:	(bad)  [eax-0x1fea5f2]
  40b344:	in     al,dx
  40b345:	es out dx,al
  40b347:	sub    al,0xe0
  40b349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b34a:	jno    0x40b325
  40b34c:	push   edx
  40b34d:	enter  0x2113,0x8e
  40b351:	sub    dh,al
  40b353:	test   BYTE PTR [ecx],bh
  40b355:	jle    0x40b356
  40b357:	add    al,0xb0
  40b359:	sar    BYTE PTR [eax+0x15],1
  40b35c:	xor    cl,ah
  40b35e:	jnp    0x40b2fd
  40b360:	dec    ebx
  40b361:	xor    dl,bh
  40b363:	dec    eax
  40b364:	nop
  40b365:	and    eax,eax
  40b367:	ficom  WORD PTR [ebx+0x15ee510b]
  40b36d:	(bad)  
  40b36f:	clc    
  40b370:	sub    eax,0xb9550d60
  40b375:	sub    al,0xde
  40b377:	and    esi,DWORD PTR [ebx+0x75]
  40b37a:	pop    eax
  40b37b:	stos   BYTE PTR es:[edi],al
  40b37c:	mov    dh,0xc6
  40b37e:	mov    cl,0x23
  40b380:	leave  
  40b381:	push   edi
  40b382:	(bad)  [si+0x3c]
  40b386:	sbb    esi,esi
  40b388:	push   cs
  40b389:	inc    eax
  40b38a:	ja     0x40b311
  40b38c:	jge    0x40b356
  40b38e:	mov    BYTE PTR [edi],ch
  40b390:	mov    ebp,0xeb4ec9f4
  40b395:	ja     0x40b31e
  40b397:	dec    ecx
  40b398:	pushf  
  40b399:	sub    dl,BYTE PTR [eax+0x10]
  40b39c:	rol    DWORD PTR [ebx],1
  40b39e:	jns    0x40b3f2
  40b3a0:	mov    ds:0x3afc3b2,eax
  40b3a5:	xor    ebx,DWORD PTR [ebp-0x4eb5db44]
  40b3ab:	mov    ecx,DWORD PTR [ebp-0x2360e894]
  40b3b1:	xor    DWORD PTR [ebp-0x596b5357],edx
  40b3b7:	retf   
  40b3b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3b9:	or     ebx,DWORD PTR [esi+0x254b6bb1]
  40b3bf:	cs pop eax
  40b3c1:	jns    0x40b39b
  40b3c3:	cli    
  40b3c4:	mov    ah,0xa2
  40b3c6:	pop    eax
  40b3c7:	rcl    BYTE PTR [edx+ebx*8+0x6c],1
  40b3cb:	aas    
  40b3cc:	xchg   DWORD PTR [ecx-0x1d],ecx
  40b3cf:	jo     0x40b3c1
  40b3d1:	and    edi,DWORD PTR [ebp+0x7808dcf1]
  40b3d7:	mov    ebp,0x53a6cb56
  40b3dc:	fisub  DWORD PTR [eax-0x32571271]
  40b3e2:	xor    bh,cl
  40b3e4:	lods   al,BYTE PTR ds:[esi]
  40b3e5:	mov    WORD PTR [ecx-0xd],ds
  40b3e8:	(bad)  
  40b3e9:	js     0x40b3f5
  40b3eb:	cmp    al,0x45
  40b3ed:	outs   dx,DWORD PTR ds:[esi]
  40b3ee:	aam    0x63
  40b3f0:	or     BYTE PTR [ebx],dh
  40b3f2:	xor    edi,DWORD PTR ds:0xc1dcae70
  40b3f8:	into   
  40b3f9:	mov    al,ds:0x40ea66d7
  40b3fe:	ds es popa 
  40b401:	or     dl,bl
  40b403:	nop
  40b404:	call   0xcb278a03
  40b409:	ror    DWORD PTR [ebp+0x5b4521c0],1
  40b40f:	retf   0xd281
  40b412:	cmp    DWORD PTR [esi+0x31],0x5ba1d629
  40b419:	popf   
  40b41a:	or     DWORD PTR ds:0x2d452124,esp
  40b420:	and    al,0xb4
  40b422:	int    0x53
  40b424:	cmp    DWORD PTR [esi+0x0],edx
  40b427:	push   cs
  40b428:	xchg   esp,eax
  40b429:	sub    dh,BYTE PTR [eax+0x442053bc]
  40b42f:	rcr    BYTE PTR [ecx],1
  40b431:	add    eax,0x57443571
  40b436:	js     0x40b41b
  40b438:	push   es
  40b439:	pop    edx
  40b43a:	dec    eax
  40b43b:	mov    bh,0xc4
  40b43d:	ins    BYTE PTR es:[edi],dx
  40b43e:	(bad)  
  40b43f:	xor    eax,DWORD PTR [esi+0x1b]
  40b442:	fimul  DWORD PTR [edi-0x125029ac]
  40b448:	adc    ebp,ebx
  40b44a:	jp     0x40b46e
  40b44c:	jmp    0x40b489
  40b44e:	loop   0x40b48c
  40b450:	outs   dx,DWORD PTR ds:[esi]
  40b451:	push   0x51
  40b453:	retf   
  40b454:	enter  0xf5e8,0xa6
  40b458:	mov    ebp,0x35c65820
  40b45d:	popf   
  40b45e:	in     eax,0xe6
  40b460:	out    0x9f,eax
  40b462:	mov    cl,0x41
  40b464:	(bad)  
  40b465:	mov    esi,0x9daaf3ec
  40b46a:	in     al,0xce
  40b46c:	mov    cs,WORD PTR [ecx]
  40b46e:	mov    eax,0x4331671c
  40b473:	ds ds scas al,BYTE PTR es:[edi]
  40b476:	test   eax,0x26c813ed
  40b47b:	into   
  40b47c:	imul   ecx,DWORD PTR [ecx-0x3f725bf5],0xd9d991c5
  40b486:	push   cs
  40b487:	sub    eax,DWORD PTR [edx]
  40b489:	pop    esp
  40b48a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b48b:	inc    edx
  40b48c:	sub    eax,0xd4edfb01
  40b491:	imul   ebp,ebp,0x9d8de7c1
  40b497:	out    0xdc,eax
  40b499:	call   0x319a1051
  40b49e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b49f:	push   ebx
  40b4a0:	in     eax,0xe5
  40b4a2:	pop    ebx
  40b4a3:	cmp    eax,0xacd29716
  40b4a8:	jmp    0xbc61338a
  40b4ad:	sti    
  40b4ae:	pop    esi
  40b4af:	hlt    
  40b4b0:	sub    eax,0xc33b224
  40b4b5:	fld    DWORD PTR [ecx+ebp*4-0x15b80d72]
  40b4bc:	lods   al,BYTE PTR ds:[esi]
  40b4bd:	inc    esp
  40b4be:	sbb    BYTE PTR [ebx],bh
  40b4c0:	pushf  
  40b4c1:	jno    0x40b4ce
  40b4c3:	mul    DWORD PTR [ecx+0x4f]
  40b4c6:	xor    BYTE PTR [edi],bh
  40b4c8:	pop    ebx
  40b4c9:	ret    
  40b4ca:	and    dl,cl
  40b4cc:	out    dx,al
  40b4cd:	in     al,0xae
  40b4cf:	sbb    esi,ebp
  40b4d1:	xchg   DWORD PTR [eax],ecx
  40b4d3:	(bad)  
  40b4d4:	scas   eax,DWORD PTR es:[edi]
  40b4d5:	enter  0x27a9,0x48
  40b4d9:	(bad)  [edi+0x6ec104c0]
  40b4df:	ss repz cdq 
  40b4e2:	es jmp 0x37678ebd
  40b4e8:	fsub   QWORD PTR [edi+esi*2+0x77]
  40b4ec:	fidiv  DWORD PTR [esi]
  40b4ee:	jmp    0x180d:0x4676c21e
  40b4f5:	ins    DWORD PTR es:[edi],dx
  40b4f6:	pop    eax
  40b4f7:	inc    edi
  40b4f8:	dec    edx
  40b4f9:	push   esp
  40b4fa:	mov    ebp,0xf8366aca
  40b4ff:	xchg   esi,eax
  40b500:	sub    cl,BYTE PTR [edx-0x434c0c54]
  40b506:	and    eax,0x8f4d2b47
  40b50b:	adc    dh,BYTE PTR [ecx+eax*2+0x1c276ba2]
  40b512:	jnp    0x40b4e7
  40b514:	rep outs dx,BYTE PTR ds:[esi]
  40b516:	xor    DWORD PTR [edx-0x2b7df2f1],esi
  40b51c:	fadd   DWORD PTR [edi]
  40b51e:	adc    al,BYTE PTR [eax+0x63ac2b63]
  40b524:	dec    ebx
  40b525:	dec    esi
  40b526:	and    ecx,edx
  40b528:	hlt    
  40b529:	pop    ebp
  40b52a:	and    al,0x26
  40b52c:	aad    0x15
  40b52e:	cli    
  40b52f:	cwde   
  40b530:	mov    ebx,0x4b23dcf7
  40b535:	push   ecx
  40b536:	sub    eax,0xd4257659
  40b53b:	stc    
  40b53c:	mov    eax,ds:0x1669d63d
  40b541:	cs pop eax
  40b543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b544:	js     0x40b5b0
  40b546:	(bad)  
  40b547:	fcmovnu st,st(4)
  40b549:	sub    DWORD PTR [ecx-0x1108851f],edx
  40b54f:	pop    ecx
  40b550:	cli    
  40b551:	nop
  40b552:	(bad)  
  40b553:	mov    dh,0x19
  40b555:	jb     0x40b5af
  40b557:	scas   al,BYTE PTR es:[edi]
  40b558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b559:	add    bl,BYTE PTR [esi+0x6c466744]
  40b55f:	imul   DWORD PTR [esi]
  40b561:	pop    eax
  40b562:	ror    ch,0xa6
  40b565:	adc    DWORD PTR ds:0xf223cb66,edi
  40b56b:	rol    edi,cl
  40b56d:	mov    bl,0x25
  40b56f:	jge    0x40b52d
  40b571:	fs or  esp,eax
  40b574:	adc    ebx,edi
  40b576:	sti    
  40b577:	xor    ebp,DWORD PTR [edx+0x54]
  40b57a:	test   DWORD PTR [ebp+0x218de6fc],0xa0ea90d8
  40b584:	pop    ds
  40b585:	icebp  
  40b586:	mov    eax,DWORD PTR [ebp-0x42]
  40b589:	cli    
  40b58a:	mov    ds:0x8679b9bb,eax
  40b58f:	mov    BYTE PTR [esi-0x627fc6c3],bl
  40b595:	jecxz  0x40b5d3
  40b597:	adc    dl,ah
  40b599:	pop    esp
  40b59a:	mov    esi,0x377417f4
  40b59f:	cld    
  40b5a0:	repnz fmul st(0),st
  40b5a3:	outs   dx,DWORD PTR ds:[esi]
  40b5a4:	push   0xfd581c4b
  40b5a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5aa:	test   al,0x2d
  40b5ac:	mov    ecx,0x851e471a
  40b5b1:	aam    0xca
  40b5b3:	xlat   BYTE PTR ds:[ebx]
  40b5b4:	scas   eax,DWORD PTR es:[edi]
  40b5b5:	je     0x40b61a
  40b5b7:	jnp    0x40b637
  40b5b9:	imul   DWORD PTR ss:[ecx+eiz*8]
  40b5bd:	pop    edx
  40b5be:	sub    bl,dl
  40b5c0:	mov    edi,esp
  40b5c2:	sub    eax,esp
  40b5c4:	mov    bl,0xe4
  40b5c6:	dec    esi
  40b5c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5c8:	mov    ebx,0x48926a2d
  40b5cd:	push   eax
  40b5ce:	add    bh,BYTE PTR [ebp+ebp*8-0x14]
  40b5d2:	xchg   edx,eax
  40b5d3:	sar    BYTE PTR [esp+ecx*4],cl
  40b5d6:	mov    ebx,0x99069e85
  40b5db:	xchg   DWORD PTR [edi+0x46],esp
  40b5de:	(bad)  
  40b5df:	retf   
  40b5e0:	push   ss
  40b5e1:	loopne 0x40b565
  40b5e3:	pop    ds
  40b5e4:	scas   al,BYTE PTR es:[edi]
  40b5e5:	mov    al,0x30
  40b5e7:	inc    eax
  40b5e8:	sub    eax,0x429aa2b5
  40b5ed:	scas   al,BYTE PTR es:[edi]
  40b5ee:	jno    0x40b5a6
  40b5f0:	adc    BYTE PTR [ebp-0x1877fd16],0xcc
  40b5f7:	inc    edi
  40b5f8:	aad    0x6f
  40b5fa:	adc    al,0xe6
  40b5fc:	jo     0x40b66b
  40b5fe:	mov    eax,0x380d176
  40b603:	cdq    
  40b604:	and    BYTE PTR [ecx+0x13dc18c1],ch
  40b60a:	push   esi
  40b60b:	jle    0x40b641
  40b60d:	adc    eax,0x904a6a4c
  40b612:	pop    edi
  40b613:	dec    ecx
  40b614:	fsubr  st(5),st
  40b616:	mov    al,ds:0xbf8fc167
  40b61b:	in     eax,0xb0
  40b61d:	sub    esi,eax
  40b61f:	outs   dx,BYTE PTR ds:[esi]
  40b620:	data16 xlat BYTE PTR ds:[ebx]
  40b622:	pop    ecx
  40b623:	jns    0x40b64c
  40b625:	cmp    al,0x1f
  40b627:	aaa    
  40b628:	test   BYTE PTR [esi-0x27690e28],bl
  40b62e:	sub    esi,DWORD PTR [ebp-0x47]
  40b631:	mov    dl,0x66
  40b633:	js     0x40b608
  40b635:	cmc    
  40b636:	adc    edi,ecx
  40b638:	mov    ds:0xf1698901,eax
  40b63e:	in     eax,0x3
  40b640:	and    eax,0x6d1a7645
  40b645:	retf   0x4994
  40b648:	cs pop ebx
  40b64a:	std    
  40b64b:	stc    
  40b64c:	mov    al,ds:0xb4015d62
  40b651:	mov    ah,0x18
  40b653:	in     al,0x3
  40b655:	sub    edx,ebx
  40b657:	inc    esi
  40b658:	xor    ah,al
  40b65a:	jne    0x40b5f9
  40b65c:	out    0xa2,eax
  40b65e:	cmp    al,0x0
  40b660:	inc    edi
  40b661:	clc    
  40b662:	jno    0x40b6d8
  40b664:	xor    esp,eax
  40b666:	hlt    
  40b667:	inc    edi
  40b668:	fadd   st,st(5)
  40b66a:	jmp    0x40b66a
  40b66c:	xor    al,0xde
  40b66e:	sub    BYTE PTR [edi],bl
  40b670:	jne    0x40b6ed
  40b672:	add    eax,0xae46d57c
  40b677:	cmp    eax,0xa4046d9b
  40b67c:	mov    ebx,0xdb55e8f3
  40b681:	bound  esi,QWORD PTR [esp+ebp*8-0x32]
  40b685:	pop    ebp
  40b686:	ret    0xe2c6
  40b689:	and    esp,edi
  40b68b:	fcmove st,st(5)
  40b68d:	sbb    ah,0xc5
  40b690:	ins    BYTE PTR es:[edi],dx
  40b691:	fild   DWORD PTR [ebx+0x4e]
  40b694:	loope  0x40b67f
  40b696:	or     al,0x7a
  40b698:	pop    esi
  40b699:	out    0xb0,al
  40b69b:	add    ah,BYTE PTR [esi-0x82c03d6]
  40b6a1:	mov    ebp,0xa7fc8eb2
  40b6a6:	dec    edi
  40b6a7:	jmp    0x139230aa
  40b6ac:	pop    es
  40b6ad:	jmp    0x6997e052
  40b6b2:	fistp  DWORD PTR [eax-0x24deb4aa]
  40b6b8:	sub    DWORD PTR [esi-0x7b],esp
  40b6bb:	pop    es
  40b6bc:	or     ebx,esi
  40b6be:	lock add DWORD PTR [ebp+0x5d],esp
  40b6c2:	imul   ecx,DWORD PTR [ecx+0x1251ff94],0xffffffd7
  40b6c9:	sub    ebx,eax
  40b6cb:	int    0x50
  40b6cd:	retf   
  40b6ce:	in     al,dx
  40b6cf:	fnstcw WORD PTR [edi-0x59165087]
  40b6d5:	mov    ebp,0x542a842c
  40b6da:	lods   eax,DWORD PTR ds:[esi]
  40b6db:	ins    BYTE PTR es:[di],dx
  40b6dd:	lock xchg ebx,eax
  40b6df:	cmp    dh,BYTE PTR [eax]
  40b6e1:	push   esp
  40b6e2:	arpl   WORD PTR [ebx+0x4069d866],ax
  40b6e8:	xor    dh,bl
  40b6ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6eb:	cmp    esp,eax
  40b6ed:	ret    0xc02e
  40b6f0:	mov    esi,0x180e4543
  40b6f5:	sbb    ah,BYTE PTR [ebx-0x9]
  40b6f8:	mov    BYTE PTR [eax+0x4741efcd],ah
  40b6fe:	adc    BYTE PTR [edx-0x4edfa193],cl
  40b704:	fidivr WORD PTR [edi-0x79a8d739]
  40b70a:	jae    0x40b69b
  40b70c:	loop   0x40b6b2
  40b70e:	pop    ebp
  40b70f:	fidivr DWORD PTR [ecx-0x1d]
  40b712:	inc    esi
  40b713:	into   
  40b714:	pop    es
  40b715:	mov    ds:0xb6cf1df,eax
  40b71a:	sar    DWORD PTR es:[ebx+0x199deb53],1
  40b721:	fldln2 
  40b723:	and    al,0x4b
  40b725:	xor    edi,edx
  40b727:	jae    0x40b7a3
  40b729:	push   0x34deb065
  40b72e:	int    0xde
  40b730:	hlt    
  40b731:	ds adc edx,esp
  40b734:	fsub   DWORD PTR [ebx+eiz*8+0x2662177b]
  40b73b:	jecxz  0x40b71d
  40b73d:	popa   
  40b73e:	outs   dx,DWORD PTR ds:[esi]
  40b73f:	cli    
  40b740:	scas   al,BYTE PTR es:[edi]
  40b741:	(bad)  
  40b742:	leave  
  40b743:	pop    ebp
  40b744:	(bad)  cs:[esi]
  40b747:	xchg   ebp,eax
  40b748:	cmc    
  40b749:	or     ch,BYTE PTR [ebx+0xa0b7988]
  40b74f:	jns    0x40b6f4
  40b751:	mov    DWORD PTR [ebp+0x65aee264],ebp
  40b757:	adc    BYTE PTR [ecx+0x75],bh
  40b75a:	pop    esp
  40b75b:	(bad)  
  40b75c:	into   
  40b75d:	dec    edx
  40b75e:	sbb    eax,0x8101c68a
  40b763:	xchg   ecx,eax
  40b764:	xchg   BYTE PTR [ecx+0xbf6231c],al
  40b76a:	sub    BYTE PTR [ecx+edx*2+0x29],bl
  40b76e:	mov    bh,0x5a
  40b770:	in     eax,dx
  40b771:	dec    ebp
  40b772:	scas   eax,DWORD PTR es:[edi]
  40b773:	cdq    
  40b774:	bound  eax,QWORD PTR [edi]
  40b776:	mov    eax,ds:0xf73a63
  40b77b:	pushf  
  40b77c:	addr16 mov dh,0xe6
  40b77f:	xor    edx,ebp
  40b781:	mov    al,ds:0xef73549d
  40b786:	mov    ecx,0x222c88c8
  40b78b:	neg    DWORD PTR [ecx+edi*2]
  40b78e:	int    0x5b
  40b790:	fs mov edi,0x2d32852
  40b796:	mov    WORD PTR [ecx],es
  40b798:	shl    esp,1
  40b79a:	pushf  
  40b79b:	addr16 popa 
  40b79d:	out    0xaf,eax
  40b79f:	dec    ebp
  40b7a0:	xor    al,cl
  40b7a2:	add    bh,BYTE PTR [esi+0x1d35f343]
  40b7a8:	test   DWORD PTR [esi+eax*2-0x76aa16b0],ebp
  40b7af:	int    0xb5
  40b7b1:	or     esp,DWORD PTR [edi]
  40b7b3:	test   BYTE PTR [esi+ebp*1+0x17],cl
  40b7b7:	ret    0x1c2
  40b7ba:	jno    0x40b77f
  40b7bc:	pop    es
  40b7bd:	pop    ds
  40b7be:	inc    ebx
  40b7bf:	dec    edx
  40b7c0:	mov    dl,0xee
  40b7c2:	imul   esp,DWORD PTR [esi+esi*1-0x2aa2f34e],0x45
  40b7ca:	test   cl,al
  40b7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7cd:	repnz aaa 
  40b7cf:	cdq    
  40b7d0:	(bad)  
  40b7d1:	fnsave [edx]
  40b7d3:	mov    dl,0x3c
  40b7d5:	hlt    
  40b7d6:	mov    DWORD PTR [edi-0x37],edx
  40b7d9:	xchg   ecx,eax
  40b7da:	pop    ebx
  40b7db:	fisttp DWORD PTR [edi]
  40b7dd:	imul   ebp,eax,0xb89494a7
  40b7e3:	lods   al,BYTE PTR ds:[esi]
  40b7e4:	xor    edx,ebx
  40b7e6:	or     eax,0x48f15459
  40b7eb:	daa    
  40b7ec:	lea    ebp,[eax+0x7a8b58b6]
  40b7f2:	(bad)  
  40b7f4:	pop    ss
  40b7f5:	(bad)  
  40b7f6:	jne    0x40b86f
  40b7f8:	mov    eax,ds:0xf71275a0
  40b7fd:	mov    DWORD PTR [edx+0x4b05e68c],edi
  40b803:	jnp    0x40b7de
  40b805:	push   edx
  40b806:	or     dh,BYTE PTR [esp+eax*8]
  40b809:	add    BYTE PTR ds:0x8d633a4b,0x6d
  40b810:	jo     0x40b7b0
  40b812:	mov    esi,0x6bc7cce2
  40b817:	sbb    esi,DWORD PTR [edi+edi*8-0x60]
  40b81b:	(bad)  
  40b81c:	jns    0x40b7a0
  40b81e:	inc    ebp
  40b81f:	xor    DWORD PTR [edx+0x4b0c7abb],esi
  40b825:	xchg   esp,ebp
  40b827:	adc    edi,DWORD PTR [eax]
  40b829:	mov    bl,0x78
  40b82b:	ins    BYTE PTR es:[edi],dx
  40b82c:	pop    esi
  40b82d:	pop    ebp
  40b82e:	arpl   bx,sp
  40b830:	sub    DWORD PTR [edi-0x2efbf5b5],ebx
  40b836:	dec    esi
  40b837:	pushf  
  40b838:	call   0x28d3:0xd216a280
  40b83f:	adc    al,0xb7
  40b841:	inc    esi
  40b842:	lea    edx,[ebx-0x1cf68a83]
  40b848:	xchg   edi,eax
  40b849:	fadd   st(7),st
  40b84b:	sbb    eax,0xfbbbc2d7
  40b850:	push   ebp
  40b851:	pushf  
  40b852:	pop    edi
  40b853:	push   ds
  40b854:	push   ecx
  40b855:	add    edx,DWORD PTR [ecx+esi*2+0x71cc0959]
  40b85c:	mov    cl,0xde
  40b85e:	cmp    ebp,ebx
  40b860:	popf   
  40b861:	sub    al,0x5
  40b863:	pop    es
  40b864:	int3   
  40b865:	lea    ecx,[ecx+0x49]
  40b868:	or     al,0xa2
  40b86a:	fldenv [ecx+0x52]
  40b86d:	or     bh,BYTE PTR [eax+0x2b]
  40b870:	mov    eax,ds:0x45ce50c8
  40b875:	imul   eax,DWORD PTR [ecx-0x265bdaf9],0x43
  40b87c:	mov    BYTE PTR [ecx],dh
  40b87e:	or     BYTE PTR [edx+ecx*1],dh
  40b881:	pop    edx
  40b882:	stos   BYTE PTR es:[edi],al
  40b883:	cmp    BYTE PTR [edx+ebx*2],0xc7
  40b887:	pop    DWORD PTR [eax]
  40b889:	inc    esp
  40b88a:	xor    ah,BYTE PTR [ecx+0x21d8c343]
  40b890:	icebp  
  40b891:	imul   edx
  40b893:	sbb    al,bl
  40b895:	je     0x40b8ea
  40b897:	xor    eax,0x7ff38e35
  40b89c:	pop    ebx
  40b89d:	add    al,0xfc
  40b89f:	cdq    
  40b8a0:	popa   
  40b8a1:	add    BYTE PTR [ecx],dh
  40b8a3:	pop    ecx
  40b8a4:	es xchg esi,eax
  40b8a6:	aam    0xde
  40b8a8:	mov    edx,0xd2174bc0
  40b8ad:	or     cl,BYTE PTR [edx+0xe3820b6]
  40b8b3:	arpl   WORD PTR [edx-0x22],di
  40b8b6:	lods   eax,DWORD PTR ds:[esi]
  40b8b7:	adc    DWORD PTR [edx+ecx*4+0x5c3c6023],ecx
  40b8be:	jns    0x40b88e
  40b8c0:	or     ah,al
  40b8c2:	test   ecx,ecx
  40b8c4:	adc    esi,DWORD PTR [eax-0xf9e3243]
  40b8ca:	(bad)  
  40b8cb:	into   
  40b8cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8cd:	add    dl,dh
  40b8cf:	sbb    ebx,DWORD PTR [ebp-0x5d8b154c]
  40b8d5:	push   eax
  40b8d6:	fcmovnu st,st(2)
  40b8d8:	fcmovnb st,st(0)
  40b8da:	dec    ecx
  40b8db:	dec    ebp
  40b8dc:	sub    BYTE PTR [ebx+0x2e],0xe3
  40b8e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8e1:	jmp    0xf2d0b935
  40b8e6:	(bad)  
  40b8e7:	not    DWORD PTR [ebx]
  40b8e9:	xchg   esi,eax
  40b8ea:	sbb    al,0x9b
  40b8ec:	fisub  WORD PTR [eax+eax*2]
  40b8ef:	outs   dx,BYTE PTR ds:[esi]
  40b8f0:	sar    esp,1
  40b8f2:	or     al,BYTE PTR [eax+0x2]
  40b8f5:	add    al,0xed
  40b8f7:	ds cmp ch,cl
  40b8fa:	xchg   ebp,eax
  40b8fb:	(bad)  
  40b8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8fd:	inc    ecx
  40b8fe:	xchg   edx,eax
  40b8ff:	ret    
  40b900:	fsub   QWORD PTR [eax]
  40b902:	jo     0x40b899
  40b904:	and    eax,0xd56e5311
  40b909:	aad    0x15
  40b90b:	sbb    eax,DWORD PTR [ecx-0x14]
  40b90e:	sbb    al,BYTE PTR [edi]
  40b910:	sub    eax,0x3903fd3
  40b915:	and    al,0xc4
  40b917:	inc    eax
  40b918:	xor    BYTE PTR [edx],0xe5
  40b91b:	js     0x40b991
  40b91d:	pushf  
  40b91e:	sar    DWORD PTR [edx-0x2f],0xbb
  40b922:	out    dx,eax
  40b923:	inc    ecx
  40b924:	inc    BYTE PTR [edx]
  40b926:	rol    BYTE PTR [ebx],cl
  40b928:	and    al,cl
  40b92a:	int    0x10
  40b92c:	ja     0x40b8ae
  40b92e:	dec    edx
  40b92f:	mov    ch,0x1f
  40b931:	jno    0x40b8ce
  40b933:	jo     0x40b8e2
  40b935:	aas    
  40b936:	push   ebx
  40b937:	loope  0x40b94f
  40b939:	or     DWORD PTR [ebx],0xfffffff2
  40b93c:	je     0x40b8ce
  40b93e:	cmp    BYTE PTR [ecx-0x3c],cl
  40b941:	idiv   BYTE PTR [ebx]
  40b943:	and    eax,0xb423137
  40b948:	mov    ch,BYTE PTR [eax-0x64]
  40b94b:	mov    BYTE PTR [ebx+ebp*8+0x4e03ae63],bh
  40b952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b953:	ins    BYTE PTR es:[edi],dx
  40b954:	jmp    0x40b8e6
  40b956:	or     esi,edx
  40b958:	jge    0x40b9b2
  40b95a:	nop
  40b95b:	pop    ebx
  40b95c:	outs   dx,BYTE PTR ds:[esi]
  40b95d:	js     0x40b919
  40b95f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b961:	xor    al,0x2
  40b963:	pop    es
  40b964:	scas   eax,DWORD PTR es:[edi]
  40b965:	sub    BYTE PTR [eax],bh
  40b967:	cmp    cl,bl
  40b969:	popf   
  40b96a:	out    dx,al
  40b96b:	stos   BYTE PTR es:[edi],al
  40b96c:	mov    dh,BYTE PTR [ebx-0x49]
  40b96f:	je     0x40b9dd
  40b971:	out    0x48,eax
  40b973:	jp     0x40b975
  40b975:	lods   al,BYTE PTR cs:[esi]
  40b977:	ror    edx,1
  40b979:	xchg   esp,eax
  40b97a:	fsub   QWORD PTR [ecx]
  40b97c:	in     al,0x3
  40b97e:	fucomp st(1)
  40b980:	addr16 pop ss
  40b982:	mov    ebp,0xe7c8f347
  40b987:	sar    cl,0xa5
  40b98a:	outs   dx,BYTE PTR ds:[esi]
  40b98b:	rcl    dh,cl
  40b98d:	rcr    DWORD PTR [eax-0x2d],1
  40b990:	push   ss
  40b991:	jle    0x40b95b
  40b993:	xchg   esi,eax
  40b994:	cmp    BYTE PTR [ebx],al
  40b996:	add    BYTE PTR [eax+0x37],0x87
  40b99a:	inc    ebx
  40b99b:	in     eax,dx
  40b99c:	cld    
  40b99d:	adc    BYTE PTR [ecx],ah
  40b99f:	mov    bh,0x2c
  40b9a1:	mov    fs,WORD PTR [edi-0xc]
  40b9a4:	mov    al,ds:0x9abb5b5d
  40b9a9:	adc    DWORD PTR [edi-0x880adca],esp
  40b9af:	aam    0x18
  40b9b1:	std    
  40b9b2:	cmp    DWORD PTR [ebp+0x42],ebx
  40b9b5:	(bad)  
  40b9b6:	adc    eax,0x9fff3a91
  40b9bb:	pop    eax
  40b9bc:	and    DWORD PTR [ebp-0x69],esi
  40b9bf:	jle    0x40ba1f
  40b9c1:	rcl    BYTE PTR [ecx+ebx*4],cl
  40b9c4:	nop
  40b9c5:	loope  0x40b9b1
  40b9c7:	lahf   
  40b9c8:	call   0x2d58a660
  40b9cd:	cmp    BYTE PTR [ebx-0x7b1d4d63],0x66
  40b9d4:	fldenv [eax-0x71196b78]
  40b9da:	aad    0xbf
  40b9dc:	in     eax,dx
  40b9dd:	dec    esp
  40b9de:	stc    
  40b9df:	outs   dx,DWORD PTR ds:[esi]
  40b9e0:	mov    eax,ds:0x3cbaa319
  40b9e5:	sahf   
  40b9e6:	inc    eax
  40b9e7:	pop    eax
  40b9e8:	add    DWORD PTR [ebp-0x4a],0xfffffffb
  40b9ec:	push   ecx
  40b9ed:	(bad)  
  40b9ee:	sahf   
  40b9ef:	mov    eax,ds:0x516df071
  40b9f4:	sub    bl,BYTE PTR [ecx+0x25]
  40b9f7:	adc    cl,BYTE PTR [eax+ebx*8+0x58cc4f8d]
  40b9fe:	stc    
  40b9ff:	icebp  
  40ba00:	or     bh,ch
  40ba02:	test   eax,0xb57fedc9
  40ba07:	inc    esi
  40ba08:	std    
  40ba09:	into   
  40ba0a:	jge    0x40ba59
  40ba0c:	adc    al,cl
  40ba0e:	xchg   DWORD PTR [ebx-0x3e6a93fd],edx
  40ba14:	push   ebx
  40ba15:	inc    esi
  40ba16:	(bad)  
  40ba17:	xlat   BYTE PTR ds:[ebx]
  40ba18:	dec    edx
  40ba19:	sahf   
  40ba1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba1b:	stc    
  40ba1c:	lahf   
  40ba1d:	adc    BYTE PTR [ecx-0x38],dh
  40ba20:	adc    BYTE PTR [edi+0xf0b910e],dh
  40ba26:	mov    ah,0xed
  40ba28:	push   0xc5f025a8
  40ba2d:	test   eax,edx
  40ba2f:	jge    0x40bab0
  40ba31:	dec    ecx
  40ba32:	popf   
  40ba33:	sbb    al,0x85
  40ba35:	sub    DWORD PTR [edi+0x2a394111],ebp
  40ba3b:	cdq    
  40ba3c:	mov    cl,0xe3
  40ba3e:	jg     0x40b9e8
  40ba40:	mov    ch,0x31
  40ba42:	data16 cmc 
  40ba44:	dec    ebp
  40ba45:	cmp    al,dh
  40ba47:	sbb    ch,cl
  40ba49:	push   eax
  40ba4a:	and    al,0xde
  40ba4c:	(bad)  
  40ba4d:	mov    edx,0xc3c9f386
  40ba52:	push   0x3c49df88
  40ba57:	mov    ch,0xe
  40ba59:	imul   edx,DWORD PTR [ebx+esi*2-0x38],0x4f493894
  40ba61:	sub    ecx,edi
  40ba63:	(bad)
  40ba66:	test   al,0x58
  40ba68:	repz sub BYTE PTR [esi+0x62d7137],bl
  40ba6f:	push   ebp
  40ba70:	lds    eax,FWORD PTR [edi]
  40ba72:	cdq    
  40ba73:	sbb    dh,bl
  40ba75:	jne    0x40ba66
  40ba77:	mov    ecx,0x96e1e818
  40ba7c:	mov    ecx,DWORD PTR [eax+0xdeb2994]
  40ba82:	jp     0x40baf4
  40ba84:	mov    cs,WORD PTR [edx+0x50106791]
  40ba8a:	es jecxz 0x40ba45
  40ba8d:	dec    ebp
  40ba8e:	stc    
  40ba8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba90:	aam    0x8b
  40ba92:	js     0x40bb05
  40ba94:	inc    edi
  40ba95:	cmp    edi,ecx
  40ba97:	das    
  40ba98:	mov    edx,0xc0adac9d
  40ba9d:	mov    bh,0xf2
  40ba9f:	ret    
  40baa0:	scas   al,BYTE PTR es:[edi]
  40baa1:	in     eax,dx
  40baa2:	clc    
  40baa3:	ret    0x7577
  40baa6:	mov    dh,0x8a
  40baa8:	xor    BYTE PTR [ebx],ah
  40baaa:	inc    esp
  40baab:	and    edx,edx
  40baad:	adc    bl,BYTE PTR [ebx-0x38406c3d]
  40bab3:	fwait
  40bab4:	xor    BYTE PTR [edi+0x50],bh
  40bab7:	mov    dl,0x55
  40bab9:	je     0x40ba6d
  40babb:	adc    eax,edi
  40babd:	pop    ebp
  40babe:	and    BYTE PTR [eax+ecx*2],dl
  40bac1:	sbb    eax,0x819d483c
  40bac6:	loopne 0x40ba9b
  40bac8:	dec    edi
  40bac9:	mov    cl,0x39
  40bacb:	in     eax,dx
  40bacc:	cmp    eax,0xdd2e8009
  40bad1:	cmp    al,0x62
  40bad3:	loope  0x40bb08
  40bad5:	fimul  WORD PTR [esi]
  40bad7:	(bad)  
  40bad8:	mov    esi,0xf17ac4df
  40badd:	cli    
  40bade:	addr16 call 0xd55a8560
  40bae4:	mov    ch,0xde
  40bae6:	cli    
  40bae7:	ins    DWORD PTR es:[edi],dx
  40bae8:	std    
  40bae9:	cmp    bh,BYTE PTR [edx-0x72550ce8]
  40baef:	pusha  
  40baf0:	cs out 0x1c,eax
  40baf3:	aad    0x7
  40baf5:	add    al,0xea
  40baf7:	repz push edi
  40baf9:	xor    eax,0x38f9c238
  40bafe:	and    al,0x39
  40bb00:	call   0xa6c4:0xcd0bbe11
  40bb07:	jle    0x40bb28
  40bb09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb0a:	mov    ebp,0xc65e3c96
  40bb0f:	loopne 0x40baa9
  40bb11:	mov    esi,0x61d8ce25
  40bb16:	cmp    BYTE PTR [ebp+0x30bcce41],0x29
  40bb1d:	mov    al,ds:0xcf5f6565
  40bb22:	loope  0x40bba1
  40bb24:	xchg   DWORD PTR [eax-0x2c24b0ef],edx
  40bb2a:	pop    eax
  40bb2b:	jge    0x40bab5
  40bb2d:	inc    eax
  40bb2e:	lods   eax,DWORD PTR ds:[esi]
  40bb2f:	mov    DWORD PTR [eax+0x46d2fadd],0xe313d28f
  40bb39:	call   0xe4a442f5
  40bb3e:	dec    ecx
  40bb3f:	ret    
  40bb40:	dec    edi
  40bb41:	push   cs
  40bb42:	sbb    dl,BYTE PTR [eax+0x56]
  40bb45:	es loope 0x40bb00
  40bb48:	mov    eax,es:0x452b8a92
  40bb4e:	fistp  DWORD PTR [eax-0x6d]
  40bb51:	push   ds
  40bb52:	sar    BYTE PTR [esi],0xfa
  40bb55:	jne    0x40bba6
  40bb57:	xchg   esi,eax
  40bb58:	jbe    0x40baff
  40bb5a:	sub    eax,0x32f90fb0
  40bb5f:	xchg   ecx,eax
  40bb60:	into   
  40bb61:	nop
  40bb62:	sbb    dh,BYTE PTR [eax+0x560e4cec]
  40bb68:	mov    ecx,esp
  40bb6a:	fadd   QWORD PTR [edi-0x41]
  40bb6d:	add    eax,0xa73ccd93
  40bb72:	test   al,0x17
  40bb74:	in     eax,0x8b
  40bb76:	push   ecx
  40bb77:	je     0x40bb0b
  40bb79:	imul   ecx,DWORD PTR [edi+0x5564e16b],0x9cfb2020
  40bb83:	(bad)  
  40bb84:	je     0x40bbe4
  40bb86:	mov    edx,?
  40bb88:	sub    BYTE PTR [edi-0x43],bl
  40bb8b:	cmp    DWORD PTR [ebp+esi*8-0x50],0x3172b678
  40bb93:	(bad)  
  40bb94:	sbb    al,0x0
  40bb96:	dec    ebp
  40bb97:	add    esi,DWORD PTR [ebx+0x11]
  40bb9a:	stos   DWORD PTR es:[edi],eax
  40bb9b:	dec    edi
  40bb9c:	repnz aam 0xb8
  40bb9f:	add    ah,BYTE PTR [ebp+0x6431ffb7]
  40bba5:	xor    dh,cl
  40bba7:	xor    eax,0x99da6cff
  40bbac:	fs pop ds
  40bbae:	je     0x40bb8d
  40bbb0:	out    0xc6,al
  40bbb2:	gs sub al,0x77
  40bbb5:	jmp    0x37478365
  40bbba:	mov    ch,0x1a
  40bbbc:	cmp    ch,BYTE PTR [ebx-0x1d]
  40bbbf:	sahf   
  40bbc0:	shl    BYTE PTR [edi-0x40],cl
  40bbc3:	or     eax,DWORD PTR [ebp+0x6babc0e2]
  40bbc9:	(bad)  
  40bbca:	cmc    
  40bbcb:	pop    ss
  40bbcc:	jae    0x40bbe7
  40bbce:	scas   al,BYTE PTR es:[edi]
  40bbcf:	daa    
  40bbd0:	clc    
  40bbd1:	out    0xa2,al
  40bbd3:	mov    al,ds:0xc77892a7
  40bbd8:	mov    al,ds:0xff955a19
  40bbdd:	and    DWORD PTR [ebx],edi
  40bbdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe0:	push   edx
  40bbe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbe2:	cmp    esp,DWORD PTR [edi-0x7aa0bf77]
  40bbe8:	push   esp
  40bbe9:	jns    0x40bbbb
  40bbeb:	xchg   ebx,eax
  40bbec:	ins    BYTE PTR es:[edi],dx
  40bbed:	pop    edx
  40bbee:	test   DWORD PTR [ebp+eiz*4+0x25b0cbe5],0x1b82a644
  40bbf9:	fld    DWORD PTR [ebx]
  40bbfb:	dec    ebx
  40bbfc:	dec    BYTE PTR [eax*8+0x4b1fa494]
  40bc03:	mov    cl,0x83
  40bc05:	cmp    al,0xbe
  40bc07:	out    dx,eax
  40bc08:	sbb    cl,BYTE PTR [ebx+0x69]
  40bc0b:	inc    ecx
  40bc0c:	in     al,0x93
  40bc0e:	mov    ds,WORD PTR [ebx]
  40bc10:	lds    ebx,FWORD PTR ds:0x610b90e8
  40bc16:	(bad)  
  40bc17:	dec    ebx
  40bc18:	jb     0x40bbd8
  40bc1a:	inc    esp
  40bc1b:	ja     0x40bc8c
  40bc1d:	push   eax
  40bc1e:	jmp    0x59be:0xa38ffa90
  40bc25:	aam    0xb5
  40bc27:	inc    edi
  40bc28:	jge    0x40bc99
  40bc2a:	cmp    esi,eax
  40bc2c:	xchg   BYTE PTR [esi-0xb],dl
  40bc2f:	sahf   
  40bc30:	dec    edx
  40bc31:	mov    bh,0x43
  40bc33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc34:	sub    cl,BYTE PTR ds:0x6a07be2b
  40bc3a:	and    ah,bl
  40bc3c:	mov    ch,0x2f
  40bc3e:	lock xchg edx,eax
  40bc40:	int3   
  40bc41:	stos   BYTE PTR es:[edi],al
  40bc42:	sub    BYTE PTR [ebx-0x1cca0e2d],ah
  40bc48:	inc    ecx
  40bc49:	mov    ds:0xadf492ff,al
  40bc4e:	sub    al,BYTE PTR [edi-0x49]
  40bc51:	es ins DWORD PTR es:[edi],dx
  40bc53:	xchg   DWORD PTR [ecx+esi*8],ebp
  40bc56:	and    BYTE PTR [edx+ebp*2],ch
  40bc59:	retf   0xfa8a
  40bc5c:	sbb    DWORD PTR [eax-0x70a78ef0],ebx
  40bc62:	leave  
  40bc63:	or     al,0x0
  40bc65:	push   esi
  40bc66:	xor    al,0xb2
  40bc68:	cwde   
  40bc69:	or     ah,BYTE PTR [esi]
  40bc6b:	xchg   ecx,eax
  40bc6c:	in     ax,0x86
  40bc6f:	(bad)  
  40bc70:	xchg   esp,eax
  40bc71:	enter  0x2f07,0xa7
  40bc75:	cs sbb al,0x97
  40bc78:	rcr    BYTE PTR [edi-0x195725fe],0xa9
  40bc7f:	ins    BYTE PTR es:[edi],dx
  40bc80:	mov    ch,0x7d
  40bc82:	or     BYTE PTR [esi],0xe1
  40bc85:	sbb    esi,0xffffffdd
  40bc88:	sbb    DWORD PTR [ebx-0x5b],ebx
  40bc8b:	lds    edx,FWORD PTR [edi-0x55]
  40bc8e:	xchg   DWORD PTR [ebx],edi
  40bc90:	mov    al,ds:0xf1834a19
  40bc95:	and    BYTE PTR [ebp+0x4d],dh
  40bc98:	jnp    0x40bd12
  40bc9a:	aad    0x9f
  40bc9c:	mov    ss,WORD PTR [esi+0x2f]
  40bc9f:	stos   BYTE PTR es:[edi],al
  40bca0:	rcr    esi,1
  40bca2:	retf   0x2514
  40bca5:	hlt    
  40bca6:	push   ds
  40bca7:	xchg   esp,eax
  40bca8:	fld    QWORD PTR [ebx-0x5b7e8e3f]
  40bcae:	push   cs
  40bcaf:	mov    esi,DWORD PTR [edx+esi*1+0x3b3bb7bb]
  40bcb6:	lods   eax,DWORD PTR ds:[esi]
  40bcb7:	xor    dl,BYTE PTR [esi]
  40bcb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcba:	popa   
  40bcbb:	ror    DWORD PTR [edx],0x14
  40bcbe:	adc    DWORD PTR [edx-0x269272e2],esi
  40bcc4:	xchg   edi,eax
  40bcc5:	mov    WORD PTR [ecx+0x16eee347],cs
  40bccb:	(bad)  
  40bccc:	pop    esi
  40bccd:	inc    edi
  40bcce:	arpl   WORD PTR [ebx+0xfd4e518],dx
  40bcd4:	rol    BYTE PTR [edi+0x6ce889a9],0x4d
  40bcdb:	xchg   esi,eax
  40bcdc:	popf   
  40bcdd:	lock lea ebx,es:[ecx-0x15]
  40bce2:	sub    eax,0x95c1be5
  40bce7:	neg    ecx
  40bce9:	lahf   
  40bcea:	sti    
  40bceb:	mov    cl,0xab
  40bced:	inc    eax
  40bcee:	jmp    edx
  40bcf0:	rcl    DWORD PTR [esi],cl
  40bcf2:	ja     0x40bcd3
  40bcf4:	das    
  40bcf5:	stc    
  40bcf6:	imul   ebp,DWORD PTR [ecx+0x21],0x771f3538
  40bcfd:	lods   al,BYTE PTR ds:[esi]
  40bcfe:	into   
  40bcff:	xchg   ebp,eax
  40bd01:	inc    eax
  40bd02:	popf   
  40bd03:	mov    bh,BYTE PTR [esi+0x6a11bef6]
  40bd09:	pop    esi
  40bd0a:	stos   BYTE PTR es:[edi],al
  40bd0b:	in     eax,dx
  40bd0c:	xchg   ecx,eax
  40bd0d:	imul   ebx,DWORD PTR [esi+0x4],0xffffff80
  40bd11:	cmp    ebx,DWORD PTR [ebp-0x3321d50a]
  40bd17:	push   esp
  40bd18:	sub    al,bh
  40bd1a:	fadd   DWORD PTR [edx+0x79675369]
  40bd20:	scas   eax,DWORD PTR es:[edi]
  40bd21:	sbb    bl,BYTE PTR [eax-0xb]
  40bd24:	les    ebx,FWORD PTR [esi]
  40bd26:	scas   eax,DWORD PTR es:[edi]
  40bd27:	stos   BYTE PTR es:[edi],al
  40bd28:	mov    edi,0xc58e48a2
  40bd2d:	sahf   
  40bd2e:	xchg   esp,eax
  40bd2f:	push   0xa1d5a0b9
  40bd34:	jns    0x40bcdd
  40bd36:	sahf   
  40bd37:	mov    ch,0x4a
  40bd39:	repnz int3 
  40bd3b:	(bad)  
  40bd3c:	mov    DWORD PTR [ecx-0x36d85812],esp
  40bd42:	push   es
  40bd43:	(bad)  
  40bd44:	in     eax,dx
  40bd45:	(bad)  
  40bd46:	xor    dh,bl
  40bd48:	mov    ds:0x54df13b8,eax
  40bd4d:	daa    
  40bd4e:	sti    
  40bd4f:	dec    ecx
  40bd50:	push   0x1d
  40bd52:	sbb    al,0x3f
  40bd54:	xchg   ebx,edx
  40bd56:	adc    al,0xa3
  40bd58:	pop    es
  40bd59:	mov    cl,0x49
  40bd5b:	jmp    0x574ed669
  40bd60:	out    0x6e,eax
  40bd62:	inc    ebx
  40bd63:	aas    
  40bd64:	sti    
  40bd65:	fs mov bh,0x3c
  40bd68:	sbb    BYTE PTR [eax+0x42],bh
  40bd6b:	mov    bl,0xe3
  40bd6d:	ds cwde 
  40bd6f:	sti    
  40bd70:	out    0x22,eax
  40bd72:	loopne 0x40bde4
  40bd74:	dec    ebx
  40bd75:	scas   eax,DWORD PTR es:[edi]
  40bd76:	icebp  
  40bd77:	mov    ecx,0xdba2da0b
  40bd7c:	push   esp
  40bd7d:	test   eax,0xcb797f86
  40bd82:	int    0x70
  40bd84:	stc    
  40bd85:	pop    edi
  40bd86:	pop    edi
  40bd87:	in     eax,dx
  40bd88:	gs mov ebp,0xa96a34ff
  40bd8e:	inc    esp
  40bd8f:	ret    0x17c2
  40bd92:	loope  0x40bda3
  40bd94:	retf   
  40bd95:	mov    dl,0xb0
  40bd97:	pushf  
  40bd98:	imul   esp,DWORD PTR [ebp+0x55fb2d3],0xf
  40bd9f:	arpl   WORD PTR [edi+0x7f],ax
  40bda2:	lock int 0x9c
  40bda5:	fmul   st(0),st
  40bda7:	jle    0x40bd91
  40bda9:	cmp    BYTE PTR [ebx],al
  40bdab:	push   cs
  40bdac:	jns    0x40bd9f
  40bdae:	push   0xf89513e0
  40bdb3:	gs sub al,0x1b
  40bdb6:	pop    ebx
  40bdb7:	xchg   edi,eax
  40bdb8:	mov    al,ds:0x15be11a4
  40bdbd:	and    al,0x7a
  40bdbf:	adc    ebp,DWORD PTR [esi+0x62]
  40bdc2:	xchg   esp,eax
  40bdc3:	(bad)  
  40bdc4:	dec    ecx
  40bdc5:	mov    esp,0x2f1c3ae6
  40bdca:	in     al,dx
  40bdcb:	xor    edi,DWORD PTR ds:0x4b178b04
  40bdd1:	mov    ds:0x5d184bf1,al
  40bdd6:	sub    DWORD PTR [ebx],ebx
  40bdd8:	fst    QWORD PTR [ecx+edx*2+0x22c82e05]
  40bddf:	dec    esi
  40bde0:	cmp    al,0x3a
  40bde2:	mov    eax,ds:0x6a05c213
  40bde7:	int3   
  40bde8:	jmp    0x40bd8d
  40bdea:	(bad)  
  40bdeb:	mov    edx,0xfedeaff6
  40bdf0:	cld    
  40bdf1:	pop    edi
  40bdf2:	in     al,dx
  40bdf3:	pop    edx
  40bdf4:	and    eax,0xda300023
  40bdf9:	cmc    
  40bdfa:	adc    esi,DWORD PTR ds:[esi-0x4f6cb7d9]
  40be01:	cdq    
  40be02:	xor    eax,0xfde6a2e1
  40be07:	pop    ds
  40be08:	std    
  40be09:	adc    BYTE PTR [ecx+0x67],0xcf
  40be0d:	rol    DWORD PTR [eax],1
  40be0f:	mov    fs,WORD PTR [esi-0x5]
  40be12:	push   esp
  40be13:	loopne 0x40bddd
  40be15:	daa    
  40be16:	rol    dh,cl
  40be18:	push   edx
  40be19:	iret   
  40be1a:	fwait
  40be1b:	loop   0x40be1d
  40be1d:	add    bl,BYTE PTR [ecx]
  40be1f:	mov    al,ds:0x46b2c9a6
  40be24:	daa    
  40be25:	jp     0x40be2a
  40be27:	dec    esi
  40be28:	mov    ebx,0xb6998bde
  40be2d:	inc    ebp
  40be2e:	push   ecx
  40be2f:	outs   dx,BYTE PTR ds:[esi]
  40be30:	jp     0x40be4c
  40be32:	loop   0x40beaa
  40be34:	mov    edx,0x7094294d
  40be39:	mov    DWORD PTR [ebx-0x1c956084],edi
  40be3f:	fnsave ds:0x3564e3f4
  40be45:	fwait
  40be46:	sbb    al,0xfc
  40be48:	dec    edx
  40be49:	or     DWORD PTR [ebp+0x75],ebp
  40be4c:	leave  
  40be4d:	aas    
  40be4e:	imul   ebx,DWORD PTR [edx-0x41],0x30
  40be52:	pop    ds
  40be53:	ins    BYTE PTR es:[edi],dx
  40be54:	jl     0x40be60
  40be56:	div    DWORD PTR [esi+0x48]
  40be59:	cwde   
  40be5a:	jp     0x40bebe
  40be5c:	fst    DWORD PTR [ecx+0x79]
  40be5f:	adc    al,0x7b
  40be61:	jge    0x40be74
  40be63:	push   ebx
  40be64:	inc    eax
  40be65:	fstp   DWORD PTR [eax-0x39736c39]
  40be6b:	fild   QWORD PTR [edi-0x17]
  40be6e:	xchg   BYTE PTR [edi+eiz*1-0x20],ah
  40be72:	mov    ebp,0xf3d94f58
  40be77:	pop    edx
  40be78:	jo     0x40be4c
  40be7a:	shl    DWORD PTR [ebp-0x682b15d],1
  40be80:	xor    eax,0x85332a05
  40be85:	sahf   
  40be86:	fdiv   QWORD PTR [ebx+eiz*8+0x17]
  40be8a:	retf   
  40be8b:	sbb    eax,0x7037005b
  40be90:	mov    bl,0xdc
  40be92:	push   ebp
  40be93:	jle    0x40bef6
  40be95:	aad    0x22
  40be97:	js     0x40be47
  40be99:	mov    esp,0x65dd9d67
  40be9e:	das    
  40be9f:	int3   
  40bea0:	stc    
  40bea1:	xchg   BYTE PTR [edi-0x79683a6d],bh
  40bea7:	push   ecx
  40bea8:	xchg   edi,eax
  40bea9:	push   ebx
  40beaa:	mov    edx,0xab0efc9
  40beaf:	and    al,0xa4
  40beb1:	int3   
  40beb2:	ja     0x40bf2d
  40beb4:	ret    
  40beb5:	retf   
  40beb6:	adc    esp,DWORD PTR [edx]
  40beb8:	outs   dx,BYTE PTR ds:[esi]
  40beb9:	cwde   
  40beba:	fmul   DWORD PTR [edi]
  40bebc:	ret    0x49bd
  40bebf:	pop    ecx
  40bec0:	out    dx,al
  40bec1:	sub    ebx,edi
  40bec3:	mov    ds:0x2763b658,eax
  40bec8:	pop    ecx
  40bec9:	mov    ah,0x9c
  40becb:	stos   BYTE PTR es:[edi],al
  40becc:	das    
  40becd:	xor    esi,edi
  40becf:	add    al,0x1d
  40bed1:	inc    esi
  40bed2:	xor    ch,BYTE PTR [edi-0x49e0479a]
  40bed8:	push   ss
  40bed9:	sub    eax,0xea8289d6
  40bede:	add    DWORD PTR [eax],eax
  40bee0:	xchg   ebx,eax
  40bee1:	pop    ebx
  40bee2:	ja     0x40bf4f
  40bee4:	dec    edx
  40bee5:	ret    
  40bee6:	adc    al,0x60
  40bee8:	cmp    al,0xe0
  40beea:	call   0x9e87:0xcefddc6b
  40bef1:	cmp    eax,0x610276fa
  40bef6:	cmp    eax,0x6accebbd
  40befb:	fnsave [edi+0x31]
  40befe:	push   esp
  40beff:	cs mov ch,0x91
  40bf02:	rol    DWORD PTR [ecx+0x6539ba8c],1
  40bf08:	push   edx
  40bf09:	inc    edi
  40bf0a:	cmp    al,0x8a
  40bf0c:	sbb    bl,dh
  40bf0e:	cmp    DWORD PTR [esi+0x17],ebp
  40bf11:	fwait
  40bf12:	inc    ebp
  40bf13:	outs   dx,DWORD PTR ds:[esi]
  40bf14:	in     eax,dx
  40bf15:	fmul   DWORD PTR [esi-0x28]
  40bf18:	test   BYTE PTR [ebp-0x401569d2],dl
  40bf1e:	pop    ebp
  40bf1f:	out    0x4a,eax
  40bf21:	out    0x28,al
  40bf23:	mov    ch,0x7a
  40bf25:	dec    esi
  40bf26:	xor    BYTE PTR [eax+0x62],dh
  40bf29:	jno    0x40bf5e
  40bf2b:	adc    edx,DWORD PTR [edi]
  40bf2d:	(bad)  
  40bf2e:	mov    edx,0x9d67cdb9
  40bf33:	shl    ebx,1
  40bf35:	outs   dx,DWORD PTR ds:[esi]
  40bf36:	mov    edi,0x7f8407c3
  40bf3b:	mov    cl,0x17
  40bf3d:	jle    0x40bf02
  40bf3f:	shr    BYTE PTR [ebp-0x7a],cl
  40bf42:	ins    DWORD PTR es:[edi],dx
  40bf43:	push   cs
  40bf44:	test   ah,bh
  40bf46:	sub    eax,0x86b9a2ce
  40bf4b:	aam    0xb
  40bf4d:	inc    edi
  40bf4e:	mov    ebp,0x34414bc2
  40bf53:	adc    DWORD PTR [edx],ecx
  40bf55:	push   edx
  40bf56:	mov    ch,0xd4
  40bf58:	es sti 
  40bf5a:	ins    BYTE PTR es:[edi],dx
  40bf5b:	bound  edi,QWORD PTR [edx-0x10]
  40bf5e:	ds mov esi,0xe605759e
  40bf64:	mov    DWORD PTR ds:0xc340fcca,ebp
  40bf6a:	cmp    esp,DWORD PTR [edi+0x4dbb405d]
  40bf70:	mov    ecx,0xc41cc708
  40bf75:	adc    bl,BYTE PTR [esi+ebx*2]
  40bf78:	ja     0x40bf3a
  40bf7a:	push   eax
  40bf7b:	or     eax,0x7649c251
  40bf80:	xor    ebp,ebx
  40bf82:	in     al,0xec
  40bf84:	call   0xc137:0x1c0813fc
  40bf8b:	or     esp,edi
  40bf8d:	mov    esp,DWORD PTR [ecx-0x19c3277c]
  40bf93:	add    eax,0x806a22e3
  40bf98:	mov    dl,0x3c
  40bf9a:	popa   
  40bf9b:	mov    ch,0xf6
  40bf9d:	add    DWORD PTR [eax-0x6c],ecx
  40bfa0:	mov    ds:0x258bea61,al
  40bfa5:	sbb    DWORD PTR [edi-0x2c621557],ecx
  40bfab:	frstor [ebx]
  40bfad:	data16 stos BYTE PTR es:[edi],al
  40bfaf:	das    
  40bfb0:	or     eax,0xf48e9393
  40bfb5:	adc    DWORD PTR [eax+ebx*2],ebx
  40bfb8:	(bad)  
  40bfb9:	pop    edx
  40bfba:	mov    eax,0x2a861af6
  40bfbf:	sti    
  40bfc0:	in     eax,0x1
  40bfc2:	ds scas eax,DWORD PTR es:[edi]
  40bfc4:	adc    al,0xdf
  40bfc6:	and    BYTE PTR [edx+0x536a690],bh
  40bfcc:	cmp    DWORD PTR [ebx-0x16],0x72
  40bfd0:	adc    BYTE PTR [esp+ebx*1+0x75bc3c0a],dl
  40bfd7:	add    eax,0x7f0f724c
  40bfdc:	mov    ah,0x4a
  40bfde:	ja     0x40bf60
  40bfe0:	add    al,0x29
  40bfe2:	mov    cr7,edx
  40bfe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfe6:	inc    esi
  40bfe7:	push   es
  40bfe8:	mov    edi,0xf85cc30f
  40bfed:	and    edi,DWORD PTR [ebx+0x1f]
  40bff0:	mov    dh,0xbb
  40bff2:	and    al,BYTE PTR [edi-0x422250c8]
  40bff8:	sub    eax,0xc1137cea
  40bffd:	sahf   
  40bffe:	jo     0x40bff1
  40c000:	aam    0x1
  40c002:	imul   ecx,DWORD PTR [esi],0xcd420870
  40c008:	shr    ah,1
  40c00a:	adc    dh,0xde
  40c00d:	mov    esi,0xa490d98f
  40c012:	add    DWORD PTR [esi+0x3360b39e],esi
  40c018:	into   
  40c019:	inc    ecx
  40c01a:	test   BYTE PTR [ebx],0x9a
  40c01d:	jo     0x40bff2
  40c01f:	dec    ebp
  40c020:	push   ecx
  40c021:	pop    ds
  40c022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c023:	jb     0x40bfe3
  40c025:	iret   
  40c026:	dec    ebp
  40c027:	retf   
  40c028:	mov    eax,0xa7e251e0
  40c02d:	nop
  40c02e:	aaa    
  40c02f:	neg    BYTE PTR [ecx-0x4a1a801a]
  40c035:	add    esp,DWORD PTR [edx]
  40c037:	mov    ds:0x693ed95,eax
  40c03c:	shl    DWORD PTR [ebx-0x403a6fda],1
  40c042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c043:	arpl   WORD PTR [eax+ecx*2+0x66dadf69],si
  40c04a:	outs   dx,DWORD PTR ds:[esi]
  40c04b:	call   0x3fe2:0x49130576
  40c052:	mov    edx,0x122c5400
  40c057:	fbstp  TBYTE PTR [edi]
  40c059:	xor    BYTE PTR ds:0x92525240,dh
  40c05f:	(bad)  
  40c060:	lds    ebx,FWORD PTR [edx+0x4570fe83]
  40c066:	(bad)  
  40c067:	cmp    al,0x48
  40c069:	cmp    al,0xf9
  40c06b:	popf   
  40c06c:	fcomp  QWORD PTR [edi+ebp*4+0x243c25ea]
  40c073:	cmc    
  40c074:	jle    0x40c0cc
  40c076:	cmp    bl,bh
  40c078:	dec    eax
  40c079:	sbb    al,0xcc
  40c07b:	hlt    
  40c07c:	jle    0x40c0e8
  40c07e:	(bad)  
  40c07f:	xor    ebx,DWORD PTR [edi]
  40c081:	stos   BYTE PTR es:[edi],al
  40c082:	cmp    al,0xa3
  40c084:	lods   eax,DWORD PTR ds:[esi]
  40c085:	retf   
  40c086:	or     BYTE PTR [eax+0x63af2005],dh
  40c08c:	sbb    al,0xd0
  40c08e:	test   DWORD PTR [ebx],eax
  40c090:	mov    ch,0xae
  40c092:	ror    BYTE PTR ds:0x31fdaa97,cl
  40c098:	mov    ah,0x50
  40c09a:	rcr    BYTE PTR [ebx],cl
  40c09c:	fstp   DWORD PTR [esi+ebx*8+0x50]
  40c0a0:	sbb    DWORD PTR [ebp-0x71],eax
  40c0a3:	pop    ecx
  40c0a4:	pop    edx
  40c0a5:	in     al,dx
  40c0a6:	rcr    DWORD PTR [esi],cl
  40c0a8:	call   0x3737:0xc45d1df9
  40c0af:	push   edi
  40c0b0:	sub    ebx,edi
  40c0b2:	jo     0x40c097
  40c0b4:	shl    DWORD PTR [eax],0x9
  40c0b7:	stc    
  40c0b8:	mov    cl,BYTE PTR [eax]
  40c0ba:	xchg   ecx,eax
  40c0bb:	push   ebx
  40c0bc:	add    BYTE PTR [ebx],0xcc
  40c0bf:	sub    bh,BYTE PTR [eax-0x37910185]
  40c0c5:	push   cs
  40c0c6:	sbb    eax,0x86507048
  40c0cb:	and    eax,0x6938c058
  40c0d0:	sbb    eax,0x2fb4a7e9
  40c0d5:	push   DWORD PTR [ebx]
  40c0d7:	shl    esp,0x41
  40c0da:	das    
  40c0db:	lods   al,BYTE PTR ds:[esi]
  40c0dc:	fdiv   QWORD PTR [esi+0x44]
  40c0df:	dec    edi
  40c0e0:	shl    ebx,1
  40c0e2:	les    esp,FWORD PTR [ebp-0x4]
  40c0e5:	stos   DWORD PTR es:[edi],eax
  40c0e6:	in     eax,0xe6
  40c0e8:	fld    QWORD PTR [ecx]
  40c0ea:	xor    al,0x52
  40c0ec:	xor    BYTE PTR [ecx],0x1d
  40c0ef:	jle    0x40c128
  40c0f1:	xor    bh,ch
  40c0f3:	sbb    eax,DWORD PTR [edi-0x9a228d1]
  40c0f9:	add    DWORD PTR [ebp+0x6fa41804],ecx
  40c0ff:	or     edi,DWORD PTR [esi+0x7d7325fd]
  40c105:	mov    eax,0xd24a4781
  40c10a:	in     al,0x70
  40c10c:	jmp    0x5484:0x4e68b403
  40c113:	jp     0x40c0ec
  40c115:	add    ebp,DWORD PTR [eax]
  40c117:	push   esi
  40c118:	(bad)  
  40c119:	lds    esi,FWORD PTR [edi+edx*2]
  40c11c:	xchg   DWORD PTR [edx+ecx*4+0x427ba79],esp
  40c123:	and    esp,DWORD PTR [edx+0x55]
  40c126:	dec    ebp
  40c127:	dec    eax
  40c128:	popf   
  40c129:	sub    al,0x62
  40c12b:	in     al,dx
  40c12c:	add    DWORD PTR [ebp-0x61a6aa2c],eax
  40c132:	inc    ebx
  40c133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c134:	push   ecx
  40c135:	out    0xf6,al
  40c137:	les    esi,FWORD PTR [esp+esi*8-0x20]
  40c13b:	and    al,0x9b
  40c13d:	cli    
  40c13e:	fistp  WORD PTR [edi]
  40c140:	cmp    DWORD PTR [eax-0x3b],0xdb26ffe2
  40c147:	call   0x29343d62
  40c14c:	jo     0x40c1af
  40c14e:	test   al,0x77
  40c150:	mov    esi,esp
  40c152:	xor    dh,ch
  40c154:	dec    ebx
  40c155:	and    al,0x56
  40c157:	mov    dl,0x28
  40c159:	rcr    BYTE PTR [edi+0x25],cl
  40c15c:	ins    BYTE PTR es:[di],dx
  40c15e:	imul   edi,DWORD PTR [ebx+eax*8],0x5171cfc0
  40c165:	enter  0x3e1,0x81
  40c169:	adc    DWORD PTR [ebp+edi*1+0x2e],edi
  40c16d:	sbb    DWORD PTR [ecx+0x414dc5c6],esp
  40c173:	sbb    eax,0x9539d4ba
  40c178:	dec    esi
  40c179:	lock inc eax
  40c17b:	ja     0x40c1bd
  40c17d:	nop    edi
  40c180:	push   es
  40c181:	xor    BYTE PTR [ebx+0x7842df9d],ah
  40c187:	nop
  40c188:	mov    cl,0x78
  40c18a:	inc    eax
  40c18b:	push   ecx
  40c18c:	xor    BYTE PTR [edi+0x66],dh
  40c18f:	mov    DWORD PTR [ecx+0x59ca5f8],edi
  40c195:	fisub  WORD PTR [ebp+0x51]
  40c198:	sbb    ah,BYTE PTR [ebx+0x0]
  40c19b:	dec    ecx
  40c19c:	push   es
  40c19d:	adc    ebx,DWORD PTR [ebp-0x51]
  40c1a0:	mov    esp,0x37f36762
  40c1a5:	cmp    eax,0x62339249
  40c1aa:	add    DWORD PTR [ecx-0x3e5335e8],0xffffffe6
  40c1b1:	pop    eax
  40c1b2:	xchg   ebp,eax
  40c1b3:	push   ss
  40c1b4:	sbb    BYTE PTR [edi+0x35],al
  40c1b7:	scas   al,BYTE PTR es:[edi]
  40c1b8:	mov    esi,0xbfb82ff3
  40c1bd:	scas   al,BYTE PTR es:[edi]
  40c1be:	push   0x4b960bf2
  40c1c3:	inc    ebp
  40c1c4:	js     0x40c166
  40c1c6:	rcl    edx,cl
  40c1c8:	je     0x40c214
  40c1ca:	mov    cl,0x78
  40c1cc:	sub    al,0xf0
  40c1ce:	mov    ?,WORD PTR [ebx]
  40c1d0:	mov    ebp,0x33983dd7
  40c1d5:	jb     0x40c210
  40c1d7:	fs retf 
  40c1d9:	pop    eax
  40c1da:	lea    esp,[esi+0x1a4f763a]
  40c1e0:	add    cl,BYTE PTR [ebx+esi*2+0x26]
  40c1e4:	arpl   ax,cx
  40c1e6:	pandn  mm0,QWORD PTR [edx+0x5e]
  40c1ea:	in     al,0x93
  40c1ec:	jns    0x40c1f8
  40c1ee:	mov    dh,0xed
  40c1f0:	mov    dl,0x0
  40c1f2:	cdq    
  40c1f3:	(bad)  
  40c1f4:	sar    DWORD PTR [edx-0x1b],1
  40c1f7:	js     0x40c1cc
  40c1f9:	dec    ebp
  40c1fa:	lds    edi,FWORD PTR [ebx+0x699f34f3]
  40c200:	scas   eax,DWORD PTR es:[edi]
  40c201:	and    DWORD PTR [eax+0x1b],esi
  40c204:	mov    BYTE PTR [ebx+0x3a],dl
  40c207:	dec    edx
  40c208:	test   DWORD PTR [edx+eax*4-0x50],ebp
  40c20c:	pop    ebp
  40c20d:	aad    0xbf
  40c20f:	lock mov al,ds:0xddffac0
  40c215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c216:	rcl    BYTE PTR ds:0x78ad45b,0x15
  40c21d:	jle    0x40c1fa
  40c21f:	cmp    al,0xdd
  40c221:	mov    BYTE PTR [eax+edx*8-0x22],dl
  40c225:	xchg   esi,eax
  40c226:	ss popf 
  40c228:	or     DWORD PTR [edx],edx
  40c22a:	dec    eax
  40c22b:	int3   
  40c22c:	mov    edx,0x51a777d3
  40c231:	outs   dx,DWORD PTR ds:[esi]
  40c232:	mov    BYTE PTR [eax-0x66],ah
  40c235:	and    al,0x71
  40c237:	adc    DWORD PTR [edx-0x30],esi
  40c23a:	dec    ebp
  40c23b:	sbb    eax,0x614219fb
  40c240:	jae    0x40c1cd
  40c242:	leave  
  40c243:	jmp    FWORD PTR [esi-0xe5f93c3]
  40c249:	sbb    ah,ch
  40c24b:	popf   
  40c24c:	xchg   ebp,eax
  40c24d:	addr16 addr16 dec ebx
  40c250:	add    ebp,DWORD PTR [ebx+edx*8]
  40c253:	or     DWORD PTR [eax-0x685610b4],ecx
  40c259:	mov    eax,ds:0x71a0ded2
  40c25e:	pop    ds
  40c25f:	loop   0x40c2c7
  40c261:	sub    ecx,DWORD PTR [edi+eax*2+0x59bb63f0]
  40c268:	stc    
  40c269:	sbb    DWORD PTR fs:[ebx-0x2e65fdb7],0xffffff87
  40c271:	int3   
  40c272:	xor    esi,DWORD PTR [ecx+0x1ccee084]
  40c278:	xor    al,0x3c
  40c27a:	cs fadd st,st(2)
  40c27d:	cmp    esi,DWORD PTR [ecx+0x145d4573]
  40c283:	and    eax,0xfcf27163
  40c288:	adc    BYTE PTR [edx],ch
  40c28a:	rcl    BYTE PTR [ecx+0x16e4c04f],1
  40c290:	shr    BYTE PTR [eax+0x4582a2ec],cl
  40c296:	iret   
  40c297:	jne    0x40c286
  40c299:	rol    cl,cl
  40c29b:	push   edx
  40c29c:	mov    fs,WORD PTR [eax-0xeeba999]
  40c2a2:	iret   
  40c2a3:	repnz aas 
  40c2a5:	push   0x1b14c9d4
  40c2aa:	lahf   
  40c2ab:	ins    DWORD PTR es:[edi],dx
  40c2ac:	lea    edi,[ecx-0x7]
  40c2af:	test   eax,0xee574e6f
  40c2b4:	dec    esi
  40c2b5:	pushf  
  40c2b6:	xchg   ecx,eax
  40c2b7:	mov    eax,0xc87024e7
  40c2bc:	(bad)  
  40c2bd:	mov    DWORD PTR [esi+edi*8+0x61],ebx
  40c2c1:	jae    0x40c265
  40c2c3:	shr    DWORD PTR [esi-0x36],0xc
  40c2c7:	mov    esp,0x81005804
  40c2cc:	add    BYTE PTR [ebx],cl
  40c2ce:	mov    WORD PTR [edi],gs
  40c2d0:	jbe    0x40c33e
  40c2d2:	mov    ss,WORD PTR [ecx+ecx*1-0x22]
  40c2d6:	adc    eax,0x8ba1eb7e
  40c2db:	push   esp
  40c2dc:	fdivr  DWORD PTR [ebx]
  40c2de:	sub    al,0x95
  40c2e0:	or     DWORD PTR [ecx+eiz*1],esp
  40c2e3:	mov    WORD PTR [ebx-0x1],cs
  40c2e6:	fist   WORD PTR [edx]
  40c2e8:	and    esp,0x307f8c29
  40c2ee:	mov    dh,0xe5
  40c2f0:	mov    al,ds:0x5a692720
  40c2f5:	out    dx,al
  40c2f6:	in     al,0xd5
  40c2f8:	push   ebp
  40c2f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2fa:	pushf  
  40c2fb:	jnp    0x40c362
  40c2fd:	and    ebp,DWORD PTR [ebx+0x15]
  40c300:	lds    ebp,FWORD PTR [ebp-0x57]
  40c303:	inc    esp
  40c304:	int    0x28
  40c306:	js     0x40c2e2
  40c308:	pop    eax
  40c309:	xchg   esp,eax
  40c30a:	adc    BYTE PTR [eax+0x650529d1],ah
  40c310:	push   cs
  40c311:	js     0x40c37b
  40c313:	jne    0x40c325
  40c315:	pusha  
  40c316:	mov    ds:0x875415e,eax
  40c31b:	rol    edi,0xf
  40c31e:	ret    0xcb98
  40c321:	loopne 0x40c2d2
  40c323:	dec    ecx
  40c324:	xchg   BYTE PTR [edi],ch
  40c326:	jl     0x40c315
  40c328:	or     ah,dl
  40c32a:	ret    
  40c32b:	pop    ss
  40c32c:	pop    esi
  40c32d:	jecxz  0x40c2f4
  40c32f:	dec    ecx
  40c330:	shl    DWORD PTR [esi+ecx*1],cl
  40c333:	sub    al,0xf6
  40c335:	daa    
  40c336:	mov    ds:0x22d7685b,al
  40c33b:	cdq    
  40c33c:	int    0x74
  40c33e:	xlat   BYTE PTR ds:[ebx]
  40c33f:	and    BYTE PTR [edi+0xe],dh
  40c342:	fisub  DWORD PTR [edx]
  40c344:	mov    ebp,0x4139836d
  40c349:	push   eax
  40c34a:	lahf   
  40c34b:	pop    ebx
  40c34c:	mov    edx,0xe8ab68b4
  40c351:	jbe    0x40c389
  40c353:	and    BYTE PTR [edx+0x58],0x2e
  40c357:	fisubr DWORD PTR ds:0x5a0e44ca
  40c35d:	lods   al,BYTE PTR ds:[esi]
  40c35e:	sub    DWORD PTR [esi+0x16],ecx
  40c361:	bound  ebx,QWORD PTR [ebp-0x650095dc]
  40c367:	and    eax,0xa0b592c8
  40c36c:	add    cl,BYTE PTR [edi+0x416eae61]
  40c372:	mov    al,ds:0x51e3b8ed
  40c377:	es xchg al,ch
  40c37a:	cmp    al,0x57
  40c37c:	imul   esp,ecx,0xffffffd3
  40c37f:	mov    esi,0xff27a0dc
  40c384:	lods   al,BYTE PTR ds:[esi]
  40c385:	sub    edi,DWORD PTR [ecx-0x1d]
  40c388:	jno    0x40c3b1
  40c38a:	push   ds
  40c38b:	cli    
  40c38c:	adc    BYTE PTR [esi-0x46c0d9dc],bh
  40c392:	sbb    al,0x47
  40c394:	push   edi
  40c395:	and    dl,BYTE PTR [esp+esi*1]
  40c398:	ret    
  40c399:	outs   dx,BYTE PTR ds:[esi]
  40c39a:	daa    
  40c39b:	cmc    
  40c39c:	mov    ds:0xca706056,eax
  40c3a1:	mov    al,0xb7
  40c3a3:	jne    0x40c362
  40c3a5:	xchg   edi,eax
  40c3a6:	xor    eax,0x3493cc8d
  40c3ab:	pop    ss
  40c3ac:	mov    eax,ds:0x2b28ab8f
  40c3b1:	sub    DWORD PTR [ebx+0x6f],ecx
  40c3b4:	inc    esi
  40c3b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3b6:	add    eax,0xd0eadf76
  40c3bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3bc:	repz (bad) 
  40c3be:	adc    al,0x11
  40c3c0:	add    DWORD PTR [edi-0x7a3b0343],0xc7c46480
  40c3ca:	lahf   
  40c3cb:	imul   eax,DWORD PTR [edx-0x10],0xb8054c2c
  40c3d2:	cmp    ch,ch
  40c3d4:	inc    ebx
  40c3d5:	sbb    BYTE PTR [ebp-0x42],0x55
  40c3d9:	adc    DWORD PTR gs:[edi],esi
  40c3dc:	ins    BYTE PTR es:[edi],dx
  40c3dd:	push   0xffffff9c
  40c3df:	add    al,0x83
  40c3e1:	sub    eax,0x7d3cb9b6
  40c3e6:	imul   ebx,DWORD PTR [esi-0x1f9abde4],0x33
  40c3ed:	pop    ebp
  40c3ee:	sub    dl,BYTE PTR [edx-0x55547940]
  40c3f4:	mov    ah,0xf6
  40c3f6:	fstp   TBYTE PTR [esi]
  40c3f8:	(bad)  
  40c3f9:	jmp    0x2fec6ae6
  40c3fe:	pop    ecx
  40c3ff:	xchg   esp,eax
  40c400:	xchg   esi,eax
  40c401:	cmp    BYTE PTR [ebx+eax*1],ch
  40c404:	mov    ecx,0x43acaa76
  40c409:	push   es
  40c40a:	rcr    ebp,cl
  40c40c:	push   ebx
  40c40d:	inc    edi
  40c40e:	jb     0x40c3ae
  40c410:	scas   al,BYTE PTR es:[edi]
  40c411:	les    esp,FWORD PTR [edi+0x120bf3ad]
  40c417:	mov    ds:0x41f479f9,al
  40c41c:	mov    edi,0x7e9284fe
  40c421:	jmp    0x40c483
  40c423:	pushf  
  40c424:	mov    al,0xb0
  40c426:	das    
  40c427:	fnstsw WORD PTR [ebx]
  40c429:	push   ebx
  40c42a:	das    
  40c42b:	ins    BYTE PTR es:[edi],dx
  40c42c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c42d:	out    0xc8,al
  40c42f:	dec    edx
  40c430:	inc    ebx
  40c431:	mov    esi,0x5c72314f
  40c436:	xchg   esi,eax
  40c437:	mov    ecx,DWORD PTR [edx+0x6f]
  40c43a:	mov    dl,0xc
  40c43c:	mov    bl,0xe4
  40c43e:	ror    DWORD PTR [ecx],0x8
  40c441:	jmp    0x40c480
  40c443:	pop    eax
  40c444:	in     al,dx
  40c445:	adc    al,0x80
  40c447:	shl    DWORD PTR [esi+0x2e81511d],1
  40c44d:	shl    DWORD PTR [ebx+0x2d67b48c],cl
  40c453:	mov    al,0xe9
  40c455:	das    
  40c456:	hlt    
  40c457:	cmp    bh,ch
  40c459:	jo     0x40c458
  40c45b:	loopne 0x40c48b
  40c45d:	push   ebx
  40c45e:	popf   
  40c45f:	out    0xc0,al
  40c461:	je     0x40c409
  40c463:	xor    BYTE PTR [edi+0x34c690ab],cl
  40c469:	cmp    dl,BYTE PTR [ecx]
  40c46b:	xchg   ebp,eax
  40c46c:	cmp    eax,DWORD PTR [esi-0x3c]
  40c46f:	pusha  
  40c470:	jg     0x40c48a
  40c472:	or     eax,DWORD PTR [edi]
  40c474:	cmp    eax,0x49d45a3f
  40c479:	cmp    eax,DWORD PTR [eax+0x18]
  40c47c:	gs jp  0x40c460
  40c47f:	div    bl
  40c481:	mov    DWORD PTR [eax],esi
  40c483:	sbb    cl,BYTE PTR [ebp+edx*8-0x3305abd1]
  40c48a:	jmp    0x40c446
  40c48c:	fisttp WORD PTR ds:[ebx-0x646a3acc]
  40c493:	retf   
  40c494:	pop    edx
  40c495:	jb     0x40c511
  40c497:	shr    DWORD PTR [eax-0x6],1
  40c49a:	rcr    BYTE PTR [esi],1
  40c49c:	mov    ah,0xa0
  40c49e:	out    0x6c,eax
  40c4a0:	lock int 0xd
  40c4a3:	ret    0x55d3
  40c4a6:	push   ds
  40c4a7:	idiv   BYTE PTR [ecx+0x37]
  40c4aa:	scas   al,BYTE PTR es:[edi]
  40c4ab:	sbb    al,0xf8
  40c4ad:	dec    ebx
  40c4ae:	jnp    0x40c483
  40c4b0:	out    0xf9,al
  40c4b2:	xchg   ebx,eax
  40c4b3:	enter  0x6072,0x8c
  40c4b7:	idiv   BYTE PTR [edi]
  40c4b9:	mov    bh,0x25
  40c4bb:	adc    eax,0x912bd198
  40c4c0:	pop    ecx
  40c4c1:	pop    esp
  40c4c2:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40c4c4:	xor    eax,0xb478e5b0
  40c4c9:	pop    ebx
  40c4ca:	hlt    
  40c4cb:	in     al,dx
  40c4cc:	hlt    
  40c4cd:	push   ebx
  40c4ce:	hlt    
  40c4cf:	push   ebp
  40c4d0:	shr    DWORD PTR [eax+0x7e],0x6
  40c4d4:	je     0x40c485
  40c4d6:	sub    BYTE PTR [ecx+eax*2-0x28b6c207],al
  40c4dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4de:	popf   
  40c4df:	call   0xd491fb12
  40c4e4:	adc    DWORD PTR [edi+0x32],edx
  40c4e7:	or     DWORD PTR [ecx],edx
  40c4e9:	rcl    DWORD PTR [edi+0x6d40c5ae],cl
  40c4ef:	arpl   WORD PTR [ebx+0x51],bx
  40c4f2:	out    0x39,al
  40c4f4:	adc    esi,DWORD PTR [ecx+0x7d]
  40c4f7:	jge    0x40c4e7
  40c4f9:	fcmovnu st,st(1)
  40c4fb:	mov    ebx,0xd140e157
  40c500:	and    esi,ebp
  40c502:	or     al,0xec
  40c504:	inc    ebx
  40c505:	(bad)
  40c509:	out    0xf5,eax
  40c50b:	enter  0x7fa5,0x8b
  40c50f:	mov    WORD PTR [edx-0x16],ds
  40c512:	mov    edi,0xf6ee7f63
  40c517:	loope  0x40c55c
  40c519:	add    eax,0xaa1fb635
  40c51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c51f:	lea    ebp,[ebx-0xe40ffe3]
  40c525:	test   eax,0x8fab6b12
  40c52a:	addr16 jns 0x40c5a4
  40c52d:	fld    DWORD PTR ds:0xd6f1509d
  40c533:	ror    edi,1
  40c535:	push   0x5d
  40c537:	stos   WORD PTR es:[edi],ax
  40c539:	jmp    0x40c5ad
  40c53b:	ret    
  40c53c:	js     0x40c53e
  40c53e:	add    bl,BYTE PTR ds:0x8545717e
  40c544:	push   esi
  40c545:	cwde   
  40c546:	cmp    eax,0xe9b6692
  40c54b:	lods   eax,DWORD PTR ds:[esi]
  40c54c:	popa   
  40c54d:	mov    ecx,DWORD PTR [edx-0x86ddf87]
  40c553:	mov    ch,BYTE PTR [edi]
  40c555:	mov    bl,0xbc
  40c557:	repnz (bad) 
  40c559:	enter  0x1244,0xbf
  40c55d:	cli    
  40c55e:	cmc    
  40c55f:	popa   
  40c560:	dec    BYTE PTR [edi]
  40c562:	mov    eax,0x1bd565fe
  40c567:	jno    0x40c595
  40c569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c56a:	or     BYTE PTR [ecx-0x8cd73ef],dh
  40c570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c571:	sbb    cl,BYTE PTR [esi]
  40c573:	inc    esi
  40c574:	nop
  40c575:	out    dx,al
  40c576:	stc    
  40c577:	cmp    ah,BYTE PTR [eax+0x65]
  40c57a:	add    al,0xe1
  40c57c:	mov    eax,0xec88b6c2
  40c581:	sbb    al,0x93
  40c583:	mov    ch,0xe6
  40c585:	lods   al,BYTE PTR ds:[esi]
  40c586:	test   BYTE PTR [ebp+0x2308c70],cl
  40c58c:	in     al,dx
  40c58d:	add    DWORD PTR ds:0x21daec15,ecx
  40c593:	xchg   edi,eax
  40c594:	in     eax,0x58
  40c596:	and    cl,BYTE PTR [edx-0x50]
  40c599:	loopne 0x40c525
  40c59b:	clc    
  40c59c:	push   ebp
  40c59d:	dec    ebp
  40c59e:	inc    edi
  40c59f:	cld    
  40c5a0:	dec    BYTE PTR [esi+0xf]
  40c5a3:	in     eax,0x80
  40c5a5:	sub    al,BYTE PTR [eax]
  40c5a7:	jbe    0x40c5e1
  40c5a9:	sub    DWORD PTR [edi+ecx*8-0x4b],ebx
  40c5ad:	jno    0x40c62d
  40c5af:	aam    0xab
  40c5b1:	jae    0x40c571
  40c5b3:	sbb    edi,DWORD PTR [ebx-0x2d]
  40c5b6:	adc    esp,ebx
  40c5b8:	cdq    
  40c5b9:	sub    DWORD PTR [eax+0x3f1582dd],ebx
  40c5bf:	in     eax,0x98
  40c5c1:	hlt    
  40c5c2:	adc    bh,BYTE PTR [esi+0x43228172]
  40c5c8:	and    eax,0x365e0272
  40c5cd:	mov    ecx,0xd8b4850e
  40c5d2:	xor    ebp,DWORD PTR [ebp+0x67137199]
  40c5d8:	loop   0x40c5c0
  40c5da:	xor    BYTE PTR [ebp+0x77545197],ch
  40c5e0:	mov    ds:0xeaabf396,eax
  40c5e5:	ja     0x40c632
  40c5e7:	jmp    FWORD PTR [eax-0x3f]
  40c5ea:	mov    BYTE PTR [esp+ebp*2],ah
  40c5ed:	sub    bh,BYTE PTR [edi+0x1a0a5b69]
  40c5f3:	sub    al,0x99
  40c5f5:	ins    DWORD PTR es:[edi],dx
  40c5f6:	stos   DWORD PTR es:[edi],eax
  40c5f7:	mov    eax,ds:0x408d90f2
  40c5fc:	stos   BYTE PTR es:[edi],al
  40c5fd:	mov    edx,0x7b47ed96
  40c602:	and    ebp,0x52d81774
  40c608:	(bad)  
  40c609:	xlat   BYTE PTR ds:[ebx]
  40c60a:	lahf   
  40c60b:	cli    
  40c60c:	fsubp  st(1),st
  40c60e:	popa   
  40c60f:	imul   edi,edi,0x27af54e4
  40c615:	loop   0x40c610
  40c617:	loop   0x40c5a1
  40c619:	repnz xchg ebp,eax
  40c61b:	push   esp
  40c61c:	idiv   bh
  40c61e:	cmc    
  40c61f:	mov    ch,0x35
  40c621:	repz dec edx
  40c623:	pop    es
  40c624:	mov    eax,ds:0xa3093734
  40c629:	ds xchg edx,eax
  40c62b:	nop
  40c62c:	add    DWORD PTR ds:[ebx+edi*1],edx
  40c630:	inc    BYTE PTR [ecx*1-0x723ecc35]
  40c637:	test   BYTE PTR [eax],bh
  40c639:	shl    ch,0x64
  40c63c:	add    BYTE PTR [ebx-0x6ccf383],cl
  40c642:	add    edi,edx
  40c644:	imul   eax,edi
  40c647:	mov    edi,DWORD PTR [ebp+0xc]
  40c64a:	xor    edi,ecx
  40c64c:	sub    edi,eax
  40c64e:	mov    eax,DWORD PTR [ebp-0x4]
  40c651:	add    edi,edx
  40c653:	cmp    DWORD PTR [eax],edi
  40c655:	mov    eax,DWORD PTR [ebp-0x4]
  40c658:	mov    edi,DWORD PTR [ebp+0x10]
  40c65b:	jg     0x40c66e
  40c661:	xor    edi,ecx
  40c663:	mov    ebx,esi
  40c665:	sub    ebx,edi
  40c667:	add    DWORD PTR [eax],ebx
  40c669:	jmp    0x40c674
  40c66e:	xor    edi,ecx
  40c670:	add    edi,edx
  40c672:	add    DWORD PTR [eax],edi
  40c674:	mov    eax,DWORD PTR [ebp-0x8]
  40c677:	mov    edi,DWORD PTR [ebp-0x10]
  40c67a:	mov    eax,DWORD PTR [eax]
  40c67c:	xor    edi,ecx
  40c67e:	add    edi,0x3272df
  40c684:	not    edi
  40c686:	and    eax,edi
  40c688:	movsx  di,BYTE PTR [eax+0x1]
  40c68d:	mov    ebx,0x3b50
  40c692:	sub    di,bx
  40c695:	mov    ebx,0x8a8c
  40c69a:	xor    di,bx
  40c69d:	mov    ebx,0x4f86
  40c6a2:	cmp    di,bx
  40c6a5:	jne    0x40c6cd
  40c6ab:	movsx  di,BYTE PTR [eax]
  40c6af:	mov    ebx,0x3b50
  40c6b4:	sub    di,bx
  40c6b7:	mov    ebx,0x8a8c
  40c6bc:	xor    di,bx
  40c6bf:	mov    ebx,0x4e71
  40c6c4:	cmp    di,bx
  40c6c7:	je     0x40c6dd
  40c6cd:	mov    edi,DWORD PTR [ebp-0x10]
  40c6d0:	xor    edi,ecx
  40c6d2:	mov    ebx,esi
  40c6d4:	sub    ebx,edi
  40c6d6:	add    eax,ebx
  40c6d8:	jmp    0x40c688
  40c6dd:	mov    esi,DWORD PTR [ebp-0x14]
  40c6e0:	mov    esi,DWORD PTR [esi]
  40c6e2:	mov    edi,DWORD PTR [eax+0x3c]
  40c6e5:	lea    esi,[edi+esi*8+0x78]
  40c6e9:	mov    esi,DWORD PTR [esi+eax*1]
  40c6ec:	mov    DWORD PTR [ebp-0x8],esi
  40c6ef:	mov    esi,DWORD PTR [ebp+0x8]
  40c6f2:	xor    esi,ecx
  40c6f4:	add    esi,edx
  40c6f6:	mov    DWORD PTR [ebp-0x14],esi
  40c6f9:	mov    esi,DWORD PTR [ebp+0x8]
  40c6fc:	mov    edi,DWORD PTR [ebp-0x8]
  40c6ff:	xor    esi,ecx
  40c701:	add    esi,edx
  40c703:	pop    ebx
  40c704:	cmp    edi,esi
  40c706:	jne    0x40c724
  40c70c:	mov    eax,DWORD PTR [ebp+0xc]
  40c70f:	xor    eax,ecx
  40c711:	mov    ecx,DWORD PTR [ebp-0x8]
  40c714:	add    eax,edx
  40c716:	imul   eax,ecx
  40c719:	mov    DWORD PTR [ebp-0x8],eax
  40c71c:	push   DWORD PTR [ebp+0x18]
  40c71f:	jmp    0x40c778
  40c724:	mov    ecx,DWORD PTR [ebp-0x8]
  40c727:	add    ecx,eax
  40c729:	mov    DWORD PTR [ebp-0x14],ecx
  40c72c:	mov    ecx,DWORD PTR [ebp-0x14]
  40c72f:	mov    ecx,DWORD PTR [ecx+0xc]
  40c732:	movsx  cx,BYTE PTR [ecx+eax*1]
  40c737:	mov    edx,0x3b50
  40c73c:	sub    cx,dx
  40c73f:	mov    edx,0x8a8c
  40c744:	xor    cx,dx
  40c747:	mov    edx,0x4e77
  40c74c:	cmp    cx,dx
  40c74f:	jne    0x40c71c
  40c755:	mov    ecx,DWORD PTR ds:0x42e313
  40c75b:	mov    ecx,DWORD PTR [ecx+0x198]
  40c761:	mov    DWORD PTR [ecx],eax
  40c763:	jmp    0x40c789
  40c768:	mov    ecx,DWORD PTR [ebp+0x18]
  40c76b:	cmp    ecx,0xf89c85b8
  40c771:	jne    0x40c789
  40c777:	push   eax
  40c778:	push   DWORD PTR [ebp+0x14]
  40c77b:	push   DWORD PTR [ebp+0x10]
  40c77e:	push   DWORD PTR [ebp+0xc]
  40c781:	push   DWORD PTR [ebp+0x8]
  40c784:	call   0x409ed5
  40c789:	pop    edi
  40c78a:	pop    esi
  40c78b:	leave  
  40c78c:	ret    0x14
  40c78f:	push   ebp
  40c790:	mov    ebp,esp
  40c792:	sub    esp,0xc
  40c795:	push   esi
  40c796:	mov    esi,DWORD PTR ds:0x41ac40
  40c79c:	mov    ecx,DWORD PTR ds:0x41abdd
  40c7a2:	sub    esi,ecx
  40c7a4:	xor    esi,DWORD PTR [esi+ecx*1]
  40c7a7:	mov    esi,0xf89c85b9
  40c7ac:	sub    ecx,edx
  40c7ae:	mov    DWORD PTR [ebp-0x8],esi
  40c7b1:	sub    DWORD PTR ds:0x42b010,edi
  40c7b7:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40c7be:	and    DWORD PTR ds:0x42901c,0x0
  40c7c8:	mov    edx,DWORD PTR ds:0x42901c
  40c7ce:	inc    edx
  40c7cf:	mov    DWORD PTR ds:0x42901c,edx
  40c7d5:	cmp    DWORD PTR ds:0x42901c,0x24
  40c7dc:	jne    0x40c7ed
  40c7e2:	push   0x42e127
  40c7e7:	call   DWORD PTR ds:0x42e9cb
  40c7ed:	cmp    DWORD PTR ds:0x42901c,0x18
  40c7f4:	jb     0x40c7c8
  40c7fa:	push   edi
  40c7fb:	mov    eax,eax
  40c7fd:	mov    eax,DWORD PTR [ebp-0x4]
  40c800:	mov    edi,DWORD PTR [ebp-0x8]
  40c803:	mov    ecx,0x7510899
  40c808:	xor    eax,ecx
  40c80a:	sub    edx,0x2378
  40c810:	xor    edi,ecx
  40c812:	adc    DWORD PTR ds:0x429020,0x74b2
  40c81c:	mov    edx,0x3272e0
  40c821:	mov    DWORD PTR ds:0x42901c,0x186b
  40c82b:	add    edi,edx
  40c82d:	add    eax,edx
  40c82f:	imul   eax,edi
  40c832:	mov    DWORD PTR ds:0x42b000,edi
  40c838:	mov    edi,DWORD PTR [ebp+0xc]
  40c83b:	cmp    edi,eax
  40c83d:	je     0x40c8c6
  40c843:	mov    DWORD PTR [ebp-0xc],esi
  40c846:	mov    eax,DWORD PTR [ebp-0xc]
  40c849:	sbb    DWORD PTR ds:0x42b008,0x2a28
  40c853:	mov    esi,DWORD PTR [ebp+0xc]
  40c856:	sub    DWORD PTR ds:0x42b010,0xd18
  40c860:	xor    eax,ecx
  40c862:	lea    eax,[eax*8+0x1939778]
  40c869:	add    DWORD PTR ds:0x42c00c,0x2208
  40c873:	mov    eax,DWORD PTR [esi+eax*1]
  40c876:	mov    DWORD PTR [ebp+0xc],eax
  40c879:	not    esi
  40c87b:	mov    eax,DWORD PTR [ebp-0x4]
  40c87e:	mov    esi,DWORD PTR [ebp-0x8]
  40c881:	or     DWORD PTR ds:0x42d008,0x42c01c
  40c88b:	xor    eax,ecx
  40c88d:	xor    esi,ecx
  40c88f:	sbb    DWORD PTR ds:0x42a008,0x42d00c
  40c899:	add    esi,edx
  40c89b:	add    eax,edx
  40c89d:	imul   eax,esi
  40c8a0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8a3:	cmp    esi,eax
  40c8a5:	je     0x40c8c6
  40c8ab:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ae:	xor    eax,ecx
  40c8b0:	mov    ecx,DWORD PTR [ebp+0xc]
  40c8b3:	add    eax,edx
  40c8b5:	imul   eax,ecx
  40c8b8:	add    eax,DWORD PTR [ebp+0x8]
  40c8bb:	mov    DWORD PTR [ebp+0xc],eax
  40c8be:	mov    eax,DWORD PTR [ebp+0xc]
  40c8c1:	jmp    0x40c8d7
  40c8c6:	mov    eax,DWORD PTR [ebp-0x4]
  40c8c9:	mov    esi,DWORD PTR [ebp-0x8]
  40c8cc:	xor    esi,ecx
  40c8ce:	xor    eax,ecx
  40c8d0:	add    esi,edx
  40c8d2:	add    eax,edx
  40c8d4:	imul   eax,esi
  40c8d7:	pop    edi
  40c8d8:	pop    esi
  40c8d9:	leave  
  40c8da:	ret    0x8
  40c8dd:	push   ebp
  40c8de:	mov    ebp,esp
  40c8e0:	push   ecx
  40c8e1:	add    edx,edx
  40c8e3:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40c8ea:	adc    ecx,eax
  40c8ec:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ef:	mov    edx,DWORD PTR [ebp+0x10]
  40c8f2:	mov    DWORD PTR ds:0x42b000,0x1c
  40c8fc:	cmp    DWORD PTR ds:0x42b000,0x0
  40c903:	je     0x40c957
  40c909:	cmp    DWORD PTR ds:0x42b000,0x8
  40c910:	jne    0x40c921
  40c916:	push   0x42c000
  40c91b:	call   DWORD PTR ds:0x42e9d3
  40c921:	cmp    DWORD PTR ds:0x42b000,0x9
  40c928:	jne    0x40c93b
  40c92e:	mov    ecx,DWORD PTR ds:0x42b000
  40c934:	dec    ecx
  40c935:	mov    DWORD PTR ds:0x42b000,ecx
  40c93b:	mov    ecx,DWORD PTR ds:0x42b000
  40c941:	dec    ecx
  40c942:	mov    DWORD PTR ds:0x42b000,ecx
  40c948:	jmp    0x40c8fc
  40c94d:	and    DWORD PTR ds:0x42c000,0x7708
  40c957:	mov    ecx,0x7510899
  40c95c:	xor    eax,ecx
  40c95e:	xor    DWORD PTR ds:0x42a018,0x429008
  40c968:	add    eax,0x3272e0
  40c96d:	mov    DWORD PTR [edx],eax
  40c96f:	mov    DWORD PTR ds:0x429018,0x10
  40c979:	cmp    DWORD PTR ds:0x429018,0x0
  40c980:	je     0x40c9d0
  40c986:	cmp    DWORD PTR ds:0x429018,0x4
  40c98d:	jne    0x40c9a8
  40c993:	push   0x42b008
  40c998:	push   0x429024
  40c99d:	push   0x42d000
  40c9a2:	call   DWORD PTR ds:0x42e993
  40c9a8:	cmp    DWORD PTR ds:0x429018,0x5
  40c9af:	jne    0x40c9c0
  40c9b5:	mov    eax,ds:0x429018
  40c9ba:	dec    eax
  40c9bb:	mov    ds:0x429018,eax
  40c9c0:	mov    eax,ds:0x429018
  40c9c5:	dec    eax
  40c9c6:	mov    ds:0x429018,eax
  40c9cb:	jmp    0x40c979
  40c9d0:	mov    eax,DWORD PTR [ebp+0xc]
  40c9d3:	xor    eax,ecx
  40c9d5:	push   esi
  40c9d6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9d9:	mov    edx,0x3272e0
  40c9de:	add    eax,edx
  40c9e0:	mov    DWORD PTR [esi+0x4],eax
  40c9e3:	mov    eax,DWORD PTR [ebp+0x14]
  40c9e6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9e9:	mov    DWORD PTR [esi+0x8],eax
  40c9ec:	mov    eax,DWORD PTR [ebp+0x18]
  40c9ef:	mov    esi,DWORD PTR [ebp+0x10]
  40c9f2:	mov    DWORD PTR [esi+0xc],eax
  40c9f5:	mov    eax,DWORD PTR [ebp+0x1c]
  40c9f8:	mov    esi,DWORD PTR [ebp+0x10]
  40c9fb:	mov    DWORD PTR [esi+0x10],eax
  40c9fe:	mov    eax,DWORD PTR [ebp+0x8]
  40ca01:	xor    eax,ecx
  40ca03:	add    eax,edx
  40ca05:	pop    esi
  40ca06:	leave  
  40ca07:	ret    0x18
  40ca0a:	push   ebp
  40ca0b:	mov    ebp,esp
  40ca0d:	sub    esp,0x9c
  40ca13:	mov    ecx,DWORD PTR [ebp+0x8]
  40ca16:	mov    DWORD PTR ds:0x429004,0x1d
  40ca20:	cmp    DWORD PTR ds:0x429004,0x0
  40ca27:	je     0x40cae1
  40ca2d:	cmp    DWORD PTR ds:0x429004,0x2
  40ca34:	jne    0x40ca4b
  40ca3a:	push   DWORD PTR [ebp-0x10]
  40ca3d:	push   DWORD PTR [ebp-0x24]
  40ca40:	push   0x1cdf
  40ca45:	call   DWORD PTR ds:0x42e997
  40ca4b:	cmp    DWORD PTR ds:0x429004,0x3
  40ca52:	jne    0x40ca66
  40ca58:	xor    eax,eax
  40ca5a:	add    eax,DWORD PTR ds:0x429004
  40ca60:	dec    eax
  40ca61:	mov    ds:0x429004,eax
  40ca66:	xor    eax,eax
  40ca68:	add    eax,DWORD PTR ds:0x429004
  40ca6e:	dec    eax
  40ca6f:	mov    ds:0x429004,eax
  40ca74:	jmp    0x40ca20
  40ca79:	and    DWORD PTR ds:0x42b00c,0x0
  40ca83:	mov    eax,ds:0x42b00c
  40ca88:	inc    eax
  40ca89:	mov    ds:0x42b00c,eax
  40ca8e:	cmp    DWORD PTR ds:0x42b00c,0x6
  40ca95:	jne    0x40cabc
  40ca9b:	push   DWORD PTR [ebp-0x28]
  40ca9e:	push   DWORD PTR [ebp-0xc]
  40caa1:	push   0x42b000
  40caa6:	push   DWORD PTR [ebp-0x20]
  40caa9:	push   0x567e
  40caae:	push   0x641c
  40cab3:	push   DWORD PTR [ebp-0x24]
  40cab6:	call   DWORD PTR ds:0x42e99f
  40cabc:	cmp    DWORD PTR ds:0x42b00c,0x5
  40cac3:	jne    0x40cad4
  40cac9:	mov    eax,ds:0x42b00c
  40cace:	inc    eax
  40cacf:	mov    ds:0x42b00c,eax
  40cad4:	cmp    DWORD PTR ds:0x42b00c,0x15
  40cadb:	jb     0x40ca83
  40cae1:	mov    eax,0x8a8c
  40cae6:	xor    ax,WORD PTR [ecx+0x20]
  40caea:	and    DWORD PTR ds:0x42c008,0x0
  40caf4:	jmp    0x40cb08
  40caf9:	xor    ecx,ecx
  40cafb:	or     ecx,DWORD PTR ds:0x42c008
  40cb01:	inc    ecx
  40cb02:	mov    DWORD PTR ds:0x42c008,ecx
  40cb08:	cmp    DWORD PTR ds:0x42c008,0x14
  40cb0f:	jae    0x40cb9f
  40cb15:	cmp    DWORD PTR ds:0x42c008,0x18
  40cb1c:	jne    0x40cb3d
  40cb22:	push   0x42d00c
  40cb27:	push   DWORD PTR [ebp-0x24]
  40cb2a:	push   0x42e0d9
  40cb2f:	push   0x627f
  40cb34:	push   DWORD PTR [ebp-0x1c]
  40cb37:	call   DWORD PTR ds:0x42e9a3
  40cb3d:	jmp    0x40caf9
  40cb42:	mov    DWORD PTR ds:0x42c010,0x15
  40cb4c:	cmp    DWORD PTR ds:0x42c010,0x0
  40cb53:	je     0x40cb9f
  40cb59:	cmp    DWORD PTR ds:0x42c010,0xa
  40cb60:	jne    0x40cb71
  40cb66:	push   0x42a000
  40cb6b:	call   DWORD PTR ds:0x42e9ab
  40cb71:	cmp    DWORD PTR ds:0x42c010,0xb
  40cb78:	jne    0x40cb8d
  40cb7e:	xor    ecx,ecx
  40cb80:	xor    ecx,DWORD PTR ds:0x42c010
  40cb86:	dec    ecx
  40cb87:	mov    DWORD PTR ds:0x42c010,ecx
  40cb8d:	mov    ecx,DWORD PTR ds:0x42c010
  40cb93:	dec    ecx
  40cb94:	mov    DWORD PTR ds:0x42c010,ecx
  40cb9a:	jmp    0x40cb4c
  40cb9f:	mov    ecx,0x3b50
  40cba4:	sub    DWORD PTR ds:0x42900c,0x429000
  40cbae:	add    ax,cx
  40cbb1:	movzx  eax,ax
  40cbb4:	mov    DWORD PTR ds:0x42b000,0x10
  40cbbe:	cmp    DWORD PTR ds:0x42b000,0x0
  40cbc5:	je     0x40cc00
  40cbcb:	cmp    DWORD PTR ds:0x42b000,0x17
  40cbd2:	jne    0x40cbee
  40cbd8:	push   0x898b
  40cbdd:	push   DWORD PTR [ebp-0x10]
  40cbe0:	push   0x429018
  40cbe5:	push   DWORD PTR [ebp-0xc]
  40cbe8:	call   DWORD PTR ds:0x42e9af
  40cbee:	mov    ecx,DWORD PTR ds:0x42b000
  40cbf4:	dec    ecx
  40cbf5:	mov    DWORD PTR ds:0x42b000,ecx
  40cbfb:	jmp    0x40cbbe
  40cc00:	mov    DWORD PTR [ebp-0x10],eax
  40cc03:	movzx  ecx,BYTE PTR ds:0x42d010
  40cc0a:	or     ecx,DWORD PTR ds:0x42a014
  40cc10:	mov    DWORD PTR ds:0x42d010,ecx
  40cc16:	mov    BYTE PTR [ebp-0x1],0x79
  40cc1a:	lea    eax,[ebp-0x1]
  40cc1d:	and    ecx,DWORD PTR ds:0x42b014
  40cc23:	mov    DWORD PTR [ebp-0xc],eax
  40cc26:	xor    DWORD PTR ds:0x42a00c,edx
  40cc2c:	jmp    0x40efb2
  40cc31:	mov    esp,0xfb9ef6c5
  40cc36:	lea    edx,[ebx+ecx*8+0x3e7be512]
  40cc3d:	in     al,dx
  40cc3e:	not    WORD PTR [ebp-0x8]
  40cc42:	in     eax,0x7a
  40cc44:	jp     0x40cc47
  40cc46:	pop    edi
  40cc47:	jp     0x40ccc3
  40cc49:	push   0xfffffff0
  40cc4b:	jne    0x40cc02
  40cc4d:	mov    al,ds:0x943a921d
  40cc52:	or     ecx,DWORD PTR [eax]
  40cc54:	adc    BYTE PTR [ebp-0x305ddfca],dh
  40cc5a:	xchg   DWORD PTR [edi-0x1f248441],eax
  40cc60:	xchg   BYTE PTR [esi*1+0x32acee16],cl
  40cc67:	push   0xc
  40cc69:	lods   al,BYTE PTR ds:[si]
  40cc6b:	loop   0x40cc5c
  40cc6d:	lds    edi,FWORD PTR [eax+0x4cb266e7]
  40cc73:	jne    0x40cc6c
  40cc75:	sbb    BYTE PTR [edx],0x68
  40cc78:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40cc7a:	(bad)  
  40cc7c:	xchg   esp,ebp
  40cc7e:	sahf   
  40cc7f:	ins    DWORD PTR es:[edi],dx
  40cc80:	out    dx,al
  40cc81:	adc    DWORD PTR [edx-0x6407b9ca],ecx
  40cc87:	dec    esi
  40cc88:	add    eax,0x68250489
  40cc8d:	mov    al,ds:0x7ba2905e
  40cc92:	jne    0x40ccf1
  40cc94:	jmp    0xe81c:0x1b944c88
  40cc9b:	push   ds
  40cc9c:	cli    
  40cc9d:	xor    eax,0x148905cb
  40cca2:	xor    edi,edx
  40cca4:	stos   DWORD PTR es:[edi],eax
  40cca5:	imul   ecx,DWORD PTR [ebx+0x5],0xfffffffa
  40cca9:	jmp    FWORD PTR [edi-0x15]
  40ccac:	inc    ebp
  40ccad:	cs test ebp,edi
  40ccb0:	mov    ds:0x8c213129,eax
  40ccb5:	adc    al,0x53
  40ccb7:	or     eax,0xe91da5a7
  40ccbc:	add    esp,DWORD PTR [edi]
  40ccbe:	imul   eax,DWORD PTR [ecx-0x38],0x1d
  40ccc2:	adc    bh,cl
  40ccc4:	lock popf 
  40ccc6:	sbb    ecx,esi
  40ccc8:	aaa    
  40ccc9:	mov    cl,0xb9
  40cccb:	lds    esi,FWORD PTR [esi+0x4d58b9e6]
  40ccd1:	fstp   QWORD PTR [esi-0x1aa86fef]
  40ccd7:	mov    bh,0x35
  40ccd9:	mov    esi,0x784eb95e
  40ccde:	out    0x37,eax
  40cce0:	mov    ecx,DWORD PTR [ecx+0x18]
  40cce3:	mov    ebx,0xcb5f12dc
  40cce8:	retf   0x2bc
  40cceb:	dec    ebp
  40ccec:	ds daa 
  40ccee:	dec    ebp
  40ccef:	mov    al,0xd2
  40ccf1:	outs   dx,DWORD PTR ds:[esi]
  40ccf2:	and    BYTE PTR [ebx-0x79],bh
  40ccf5:	jo     0x40ccc9
  40ccf7:	dec    ebx
  40ccf8:	mov    ds:0x4ead0ecf,al
  40ccfd:	fisttp DWORD PTR [edx]
  40ccff:	xchg   esi,eax
  40cd00:	mov    bl,0x1b
  40cd02:	mov    BYTE PTR [eax+0x22b82cce],ah
  40cd08:	adc    eax,0x61535532
  40cd0d:	cmp    DWORD PTR [ecx+0x5d81abe0],eax
  40cd13:	mov    ebp,0x5fa08e12
  40cd18:	ret    0x6722
  40cd1b:	xchg   ecx,eax
  40cd1c:	test   BYTE PTR [edi+0x3b],dl
  40cd1f:	imul   ah
  40cd21:	dec    ecx
  40cd22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd23:	ss xchg esp,eax
  40cd25:	aas    
  40cd26:	jae    0x40cd00
  40cd28:	fdivr  DWORD PTR [edi-0x1d]
  40cd2b:	std    
  40cd2c:	sub    al,0x3c
  40cd2e:	and    DWORD PTR ds:0xfff8a612,0x919c119f
  40cd38:	add    esi,DWORD PTR [ecx+0x18]
  40cd3b:	ret    0x640a
  40cd3e:	int    0x23
  40cd40:	or     eax,0x143e75c8
  40cd45:	inc    edi
  40cd46:	mov    ds:0xe07308a,eax
  40cd4b:	dec    edi
  40cd4c:	adc    DWORD PTR [eax-0xf31c2dd],ebx
  40cd52:	inc    edx
  40cd53:	push   ss
  40cd54:	outs   dx,DWORD PTR ds:[esi]
  40cd55:	stos   BYTE PTR es:[edi],al
  40cd56:	ds lock or eax,0x2028431e
  40cd5d:	mov    al,0x6c
  40cd5f:	inc    esi
  40cd60:	test   bl,0x69
  40cd63:	mov    al,ds:0x3d5457ca
  40cd68:	pop    eax
  40cd69:	popa   
  40cd6a:	repnz fsub QWORD PTR [edx]
  40cd6d:	outs   dx,BYTE PTR ds:[esi]
  40cd6e:	(bad)  
  40cd6f:	lock inc eax
  40cd71:	xchg   DWORD PTR [eax-0x7ba065a6],esp
  40cd77:	cld    
  40cd78:	jae    0x40cd7e
  40cd7a:	test   al,0x4e
  40cd7c:	lahf   
  40cd7d:	test   eax,0xafd4e9d3
  40cd82:	hlt    
  40cd83:	call   0x4bbd:0x1d994d54
  40cd8a:	mov    ch,0x99
  40cd8c:	fld1   
  40cd8e:	sub    al,0xa5
  40cd90:	ret    0x446a
  40cd93:	add    eax,0x91bf35aa
  40cd98:	inc    esi
  40cd99:	(bad)
  40cd9d:	pop    ecx
  40cd9e:	and    BYTE PTR ds:0xdcfdd2d4,0xe7
  40cda5:	jbe    0x40ce06
  40cda7:	mov    ecx,0xe9d9b195
  40cdac:	das    
  40cdad:	push   esp
  40cdae:	xor    eax,0x9258b439
  40cdb3:	sbb    DWORD PTR [ebx],esp
  40cdb5:	and    DWORD PTR [edi-0x3a],ebp
  40cdb8:	push   ecx
  40cdb9:	add    BYTE PTR [esi+0x2c],0xed
  40cdbd:	fwait
  40cdbe:	cmc    
  40cdbf:	shl    DWORD PTR [ebp+0x307f7c26],1
  40cdc5:	push   esp
  40cdc6:	adc    edx,DWORD PTR [ecx+ecx*1]
  40cdc9:	nop
  40cdca:	xchg   ecx,eax
  40cdcb:	out    0x75,al
  40cdcd:	aam    0x6d
  40cdcf:	in     eax,dx
  40cdd0:	loopne 0x40cd59
  40cdd2:	sub    al,0x64
  40cdd4:	loopne 0x40cdc9
  40cdd6:	std    
  40cdd7:	xchg   esi,eax
  40cdd8:	adc    ah,BYTE PTR [esi+0x15]
  40cddb:	xchg   ebx,eax
  40cddc:	xchg   DWORD PTR [ebx],esp
  40cdde:	dec    esp
  40cddf:	jnp    0x40ce2d
  40cde1:	dec    edx
  40cde2:	jbe    0x40cdf0
  40cde4:	es xchg edx,eax
  40cde6:	dec    ebp
  40cde7:	dec    edi
  40cde8:	test   al,0xc9
  40cdea:	ret    
  40cdeb:	mov    esp,0xd1c52c3d
  40cdf0:	repnz sub eax,0xdb2a4748
  40cdf6:	pop    ebp
  40cdf7:	cmp    al,0xcc
  40cdf9:	mov    ah,0x7a
  40cdfb:	bound  edx,QWORD PTR [eax]
  40cdfd:	sbb    DWORD PTR ds:0x88e427a2,ebx
  40ce03:	sub    ah,ch
  40ce05:	mov    cl,0x26
  40ce07:	adc    bh,BYTE PTR [ecx]
  40ce09:	fucom  st(6)
  40ce0b:	scas   al,BYTE PTR es:[edi]
  40ce0c:	mul    BYTE PTR [eax]
  40ce0e:	popa   
  40ce0f:	in     eax,0x52
  40ce11:	std    
  40ce12:	add    BYTE PTR [ecx-0x5],al
  40ce15:	lods   al,BYTE PTR ds:[esi]
  40ce16:	retf   
  40ce17:	dec    esp
  40ce18:	(bad)  
  40ce19:	lahf   
  40ce1a:	mov    al,ds:0x530d5a23
  40ce1f:	sti    
  40ce20:	cwde   
  40ce21:	mov    ah,BYTE PTR [ecx+ebp*1-0x48]
  40ce25:	fnstsw WORD PTR [eax]
  40ce27:	add    edx,DWORD PTR [eax+0x11]
  40ce2a:	mov    ah,0x2a
  40ce2c:	(bad)  
  40ce2d:	(bad)  
  40ce2e:	retf   0x2fba
  40ce31:	inc    ecx
  40ce32:	out    0x80,eax
  40ce34:	cmp    dl,BYTE PTR [eax]
  40ce36:	cmp    edi,ebx
  40ce38:	mov    eax,0x7d65af59
  40ce3d:	jo     0x40ceb8
  40ce3f:	pop    eax
  40ce40:	mov    ds:0xb095d369,al
  40ce45:	iret   
  40ce46:	and    ah,BYTE PTR [esp+eax*2-0x4277b55f]
  40ce4d:	mov    BYTE PTR [eax],ah
  40ce4f:	adc    edx,DWORD PTR [edi]
  40ce51:	dec    ebp
  40ce52:	jp     0x40cea4
  40ce54:	sbb    al,0xac
  40ce56:	ja     0x40ce1f
  40ce58:	outs   dx,BYTE PTR ds:[esi]
  40ce59:	mov    edi,0xa8973bcc
  40ce5e:	cmp    edx,DWORD PTR [ecx]
  40ce60:	pushf  
  40ce61:	cmp    BYTE PTR [ecx],al
  40ce63:	nop
  40ce64:	cwde   
  40ce65:	test   BYTE PTR [edi+0x5f94a73c],bh
  40ce6b:	xchg   ebp,eax
  40ce6c:	push   edx
  40ce6d:	jp     0x40ce4d
  40ce6f:	mov    ch,0x97
  40ce71:	mov    BYTE PTR [edi-0x7bfce4a6],al
  40ce77:	iret   
  40ce78:	pop    ds
  40ce79:	adc    DWORD PTR [edi-0x1eb8c514],esi
  40ce7f:	loope  0x40cefd
  40ce81:	mov    ds:0x661d1937,eax
  40ce86:	enter  0xd399,0x2a
  40ce8a:	in     eax,0x8
  40ce8c:	cmp    eax,0x21369fda
  40ce91:	jg     0x40cec9
  40ce93:	es push ecx
  40ce95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce96:	cmc    
  40ce97:	add    ah,BYTE PTR [ebx]
  40ce99:	aaa    
  40ce9a:	pop    es
  40ce9b:	mov    eax,ds:0xd4118147
  40cea0:	scas   eax,DWORD PTR es:[edi]
  40cea1:	sbb    dh,BYTE PTR [esi]
  40cea3:	test   al,0x89
  40cea5:	pop    eax
  40cea6:	xchg   dl,dh
  40cea8:	xor    ecx,eax
  40ceaa:	adc    eax,0xbbdc8562
  40ceaf:	and    BYTE PTR [edi+0x3e5ecb1a],bh
  40ceb5:	adc    BYTE PTR [edx],0x5e
  40ceb8:	xor    al,BYTE PTR [ebx]
  40ceba:	gs dec esi
  40cebc:	shl    ebp,1
  40cebe:	or     DWORD PTR [ecx],0x5c
  40cec1:	mov    ch,0x2b
  40cec3:	xchg   DWORD PTR [ecx+0x11],esi
  40cec6:	fdiv   QWORD PTR [ecx]
  40cec8:	xlat   BYTE PTR ds:[ebx]
  40cec9:	shl    BYTE PTR [eax],0x2e
  40cecc:	fs mov ebx,0x8c491346
  40ced2:	sub    bl,BYTE PTR [edi]
  40ced4:	rol    DWORD PTR gs:[ebx-0x31],0x7f
  40ced9:	hlt    
  40ceda:	xor    eax,0x43faa5c7
  40cedf:	je     0x40cf0a
  40cee1:	(bad)  
  40cee2:	out    dx,al
  40cee3:	mov    ds:0x11f33491,eax
  40cee8:	xchg   DWORD PTR [ecx+0x38],edx
  40ceeb:	cmp    edi,DWORD PTR [eax+0x4c]
  40ceee:	arpl   ax,dx
  40cef0:	cmp    esp,DWORD PTR [ebp+0xd4e2217]
  40cef6:	and    DWORD PTR [ebx+0x35],eax
  40cef9:	call   0x53f9:0x4ae1122f
  40cf00:	push   edx
  40cf01:	repz xchg edx,eax
  40cf03:	mov    esp,DWORD PTR [edi]
  40cf05:	fcom   DWORD PTR [eax-0x7ec2e83a]
  40cf0b:	dec    ecx
  40cf0c:	mov    eax,0xe78c5c9e
  40cf11:	rol    BYTE PTR [esp+ebp*4-0x4d8a8fa4],1
  40cf18:	pop    esi
  40cf19:	test   eax,0x932bff94
  40cf1e:	xor    BYTE PTR [esi],ch
  40cf20:	and    DWORD PTR [ebx],edx
  40cf22:	dec    esi
  40cf23:	cld    
  40cf24:	(bad)  
  40cf25:	outs   dx,DWORD PTR ds:[esi]
  40cf26:	push   cs
  40cf27:	xor    eax,0x72aa9c2a
  40cf2c:	dec    ebx
  40cf2d:	adc    al,0xf4
  40cf2f:	lods   eax,DWORD PTR ds:[esi]
  40cf30:	inc    edi
  40cf31:	mov    ebp,0x5b0cba38
  40cf36:	(bad)  
  40cf37:	pop    edx
  40cf38:	jge    0x40cf8b
  40cf3a:	outs   dx,BYTE PTR ds:[esi]
  40cf3b:	push   edx
  40cf3c:	and    DWORD PTR [esp+eax*8-0x5de6c70f],ecx
  40cf43:	or     edi,ecx
  40cf45:	sub    DWORD PTR [eax],0x14e13068
  40cf4b:	and    al,0xa3
  40cf4d:	fisttp WORD PTR [ecx*2+0x5364de11]
  40cf54:	xor    al,0xf3
  40cf56:	dec    ecx
  40cf57:	call   0xbc84:0xe1567d31
  40cf5e:	pop    ds
  40cf5f:	rcl    ebp,1
  40cf61:	adc    al,0xa0
  40cf63:	ret    
  40cf64:	sub    eax,DWORD PTR [esi]
  40cf66:	or     al,0x50
  40cf68:	sub    cl,BYTE PTR [edi]
  40cf6a:	retfw  0xbe47
  40cf6e:	sub    edi,DWORD PTR [eax]
  40cf70:	inc    esi
  40cf71:	sbb    bh,bl
  40cf73:	dec    edx
  40cf74:	add    edx,DWORD PTR [ebx]
  40cf76:	dec    edx
  40cf77:	xchg   esp,eax
  40cf78:	mov    ebp,eax
  40cf7a:	out    dx,eax
  40cf7b:	jmp    0x40cf09
  40cf7d:	xor    DWORD PTR [esi],edx
  40cf7f:	les    ebx,FWORD PTR [ebx+0x2f]
  40cf82:	int3   
  40cf83:	mov    bl,0xee
  40cf85:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf87:	xchg   esi,eax
  40cf88:	les    esp,FWORD PTR [edi+eiz*8]
  40cf8b:	es (bad) 
  40cf8d:	rcr    DWORD PTR [ebx-0x652de68a],cl
  40cf93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf94:	ffreep st(3)
  40cf96:	clc    
  40cf97:	and    ah,BYTE PTR [edi+ebx*4]
  40cf9a:	pop    esi
  40cf9b:	icebp  
  40cf9c:	loopne 0x40cffd
  40cf9e:	push   0xffffffa1
  40cfa0:	ins    DWORD PTR es:[edi],dx
  40cfa1:	int3   
  40cfa2:	adc    eax,0xa81d6fea
  40cfa7:	popf   
  40cfa8:	mov    ah,0x37
  40cfaa:	dec    edi
  40cfab:	mov    eax,0x56d134fb
  40cfb0:	icebp  
  40cfb1:	jae    0x40cfe5
  40cfb3:	fwait
  40cfb4:	mov    esi,0x25176e65
  40cfb9:	cdq    
  40cfba:	fldcw  WORD PTR [ecx+0x2a631821]
  40cfc0:	xor    BYTE PTR [edx+0x3b501b9b],dh
  40cfc6:	dec    esp
  40cfc7:	pop    es
  40cfc8:	xor    esp,ebp
  40cfca:	fsubr  DWORD PTR [eax-0x274a415a]
  40cfd0:	add    al,0x37
  40cfd2:	mov    ah,0xfa
  40cfd4:	mov    edx,0x7334893a
  40cfd9:	dec    edx
  40cfda:	fs inc si
  40cfdd:	pop    ss
  40cfde:	(bad)  
  40cfdf:	xor    ebx,ebx
  40cfe1:	push   ds
  40cfe2:	inc    ebx
  40cfe3:	test   dh,ch
  40cfe5:	adc    al,0x7e
  40cfe7:	pop    ebx
  40cfe8:	fidivr WORD PTR [edi+0x7a62afc0]
  40cfee:	dec    esp
  40cfef:	les    edi,FWORD PTR [edi+0x70]
  40cff2:	jb     0x40d072
  40cff4:	dec    ecx
  40cff5:	adc    BYTE PTR [eax+0x4611db45],0xf4
  40cffc:	rcr    BYTE PTR [ebx+0x2c28cf37],cl
  40d002:	lods   eax,DWORD PTR ds:[esi]
  40d003:	int    0x41
  40d005:	mov    ah,0xc0
  40d007:	lds    ebx,FWORD PTR [ebx]
  40d009:	push   ss
  40d00a:	mov    bh,0x78
  40d00c:	sar    BYTE PTR [edx-0x5eab31b8],cl
  40d012:	cdq    
  40d013:	jo     0x40cfa2
  40d015:	mov    ds:0xd95a7597,al
  40d01a:	xchg   edx,eax
  40d01b:	push   edx
  40d01c:	outs   dx,BYTE PTR ds:[esi]
  40d01d:	mov    esp,0x7974553d
  40d022:	dec    ebx
  40d023:	sbb    eax,0x30e350d8
  40d028:	pop    edx
  40d029:	test   BYTE PTR fs:[edi],ah
  40d02c:	cmp    DWORD PTR [edx-0x2670bd34],edx
  40d032:	cmp    DWORD PTR [ebx+0x65],0x7612ddff
  40d039:	mov    cl,0xa3
  40d03b:	fbld   TBYTE PTR [esi+0x7eb61274]
  40d041:	call   0x32cf4b41
  40d046:	pop    es
  40d047:	sub    eax,DWORD PTR [esi+ebx*4+0x65a1fcfa]
  40d04e:	(bad)  
  40d050:	jge    0x40d0a8
  40d052:	dec    ebx
  40d053:	push   ss
  40d054:	and    ecx,ecx
  40d056:	fisubr WORD PTR [ebx+esi*4+0x7a]
  40d05a:	jae    0x40d064
  40d05c:	or     DWORD PTR [ebx],esi
  40d05e:	ja     0x40d0d3
  40d060:	adc    BYTE PTR [esp+eax*2],cl
  40d063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d064:	(bad)  
  40d065:	mov    al,ds:0xb91b53d5
  40d06a:	xor    BYTE PTR [ecx-0x5cbed4ec],0x85
  40d071:	adc    BYTE PTR [edx],0xe1
  40d074:	sahf   
  40d075:	push   esi
  40d076:	xor    al,0xec
  40d078:	mov    ds:0x479b233b,eax
  40d07d:	dec    eax
  40d07e:	inc    eax
  40d07f:	out    dx,eax
  40d080:	adc    eax,0xf77228a1
  40d085:	sub    al,0xf4
  40d087:	test   eax,0xfce277d3
  40d08c:	inc    edx
  40d08d:	jno    0x40d03a
  40d08f:	sar    DWORD PTR [ebx+0x57912c51],cl
  40d095:	mul    BYTE PTR [edx+esi*1+0x6]
  40d099:	daa    
  40d09a:	xchg   ebx,eax
  40d09b:	pushf  
  40d09c:	add    eax,DWORD PTR [edx-0x75]
  40d09f:	xchg   esp,eax
  40d0a0:	mov    bh,0xe9
  40d0a2:	pop    edi
  40d0a3:	mov    ecx,DWORD PTR [eax-0x38]
  40d0a6:	cld    
  40d0a7:	ins    DWORD PTR es:[edi],dx
  40d0a8:	loop   0x40d0dc
  40d0aa:	adc    esi,DWORD PTR [esi+0x12]
  40d0ad:	shr    BYTE PTR [eax-0x647849f7],cl
  40d0b3:	push   0x14
  40d0b5:	ret    
  40d0b6:	leave  
  40d0b7:	and    edi,DWORD PTR [edi+eax*2]
  40d0ba:	mov    ds:0x9c32a972,al
  40d0bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0c0:	jmp    0x40d13c
  40d0c2:	and    dl,BYTE PTR [ebx-0x393516d1]
  40d0c8:	dec    ebp
  40d0c9:	push   ebx
  40d0ca:	pop    eax
  40d0cb:	sbb    al,0x70
  40d0cd:	pop    ebp
  40d0ce:	dec    edi
  40d0cf:	pop    ss
  40d0d0:	xor    DWORD PTR [ecx-0x62ad3ed3],edi
  40d0d6:	jmp    0x40d0f4
  40d0d8:	inc    esp
  40d0d9:	xchg   edx,eax
  40d0da:	es ins DWORD PTR es:[edi],dx
  40d0dc:	and    DWORD PTR [esi],esi
  40d0de:	sub    esi,0x228a2299
  40d0e4:	imul   ebx,DWORD PTR [ebx+0x7],0x2e
  40d0e8:	dec    ebx
  40d0e9:	int    0xed
  40d0eb:	popa   
  40d0ec:	clc    
  40d0ed:	jo     0x40d12e
  40d0ef:	sub    eax,0xee1860fb
  40d0f4:	sahf   
  40d0f5:	scas   eax,DWORD PTR es:[edi]
  40d0f6:	fst    QWORD PTR [edi+0x1f8eb6b4]
  40d0fc:	push   ecx
  40d0fd:	mov    bl,0x83
  40d0ff:	(bad)  
  40d100:	jb     0x40d153
  40d102:	push   esp
  40d103:	mov    esp,0x5c795756
  40d108:	outs   dx,BYTE PTR ds:[esi]
  40d109:	mov    ebp,DWORD PTR [eax-0x43]
  40d10c:	dec    edi
  40d10d:	scas   al,BYTE PTR es:[edi]
  40d10e:	jge    0x40d12a
  40d110:	ins    DWORD PTR es:[edi],dx
  40d111:	ret    0x30c6
  40d114:	test   eax,0x5a4d9623
  40d119:	ja     0x40d194
  40d11b:	and    ebx,0x1cf7b925
  40d121:	jns    0x40d169
  40d123:	cdq    
  40d124:	push   esi
  40d125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d126:	and    DWORD PTR [edx+esi*8-0x61c8f981],ebp
  40d12d:	stos   DWORD PTR es:[edi],eax
  40d12e:	ins    DWORD PTR es:[edi],dx
  40d12f:	ficom  WORD PTR [edx-0x23]
  40d132:	popf   
  40d133:	cli    
  40d134:	inc    eax
  40d135:	jnp    0x40d1b1
  40d137:	mov    esp,DWORD PTR [ebx+ebp*8-0x23ab8386]
  40d13e:	pop    esi
  40d13f:	xchg   ebp,eax
  40d140:	mov    ?,WORD PTR [ecx]
  40d142:	jbe    0x40d14d
  40d144:	and    esp,DWORD PTR [ecx]
  40d146:	lahf   
  40d147:	dec    ecx
  40d148:	push   ebp
  40d149:	inc    esi
  40d14a:	adc    al,0xb1
  40d14c:	lock sti 
  40d14e:	cmp    eax,0xb6096631
  40d153:	(bad)  
  40d154:	sub    DWORD PTR fs:[ecx],eax
  40d157:	out    0x89,al
  40d159:	adc    ch,ch
  40d15b:	in     al,dx
  40d15c:	lds    ecx,FWORD PTR [ecx]
  40d15e:	stos   BYTE PTR es:[edi],al
  40d15f:	xlat   BYTE PTR ds:[ebx]
  40d160:	inc    edi
  40d161:	outs   dx,BYTE PTR ds:[esi]
  40d162:	jle    0x40d19c
  40d164:	not    cl
  40d166:	sub    bl,BYTE PTR [eax+eiz*4+0x7d3bb22]
  40d16d:	push   edx
  40d16e:	cmp    edi,edx
  40d170:	dec    ecx
  40d171:	push   ebx
  40d172:	and    dh,dh
  40d174:	jae    0x40d194
  40d176:	or     ebx,DWORD PTR [ecx+0x63]
  40d179:	jmp    0x626c:0x4f783321
  40d180:	dec    BYTE PTR [ebp+0x2895303d]
  40d186:	lahf   
  40d187:	in     eax,dx
  40d188:	in     al,0xb3
  40d18a:	adc    al,0xd4
  40d18c:	imul   ebp,DWORD PTR [ebx+edx*1-0x600b359a],0x24
  40d194:	mov    bl,0x14
  40d196:	jnp    0x40d1fd
  40d198:	pop    ebp
  40d199:	push   esi
  40d19a:	push   edi
  40d19b:	or     al,0xc5
  40d19d:	imul   ah
  40d19f:	add    al,0x22
  40d1a1:	sbb    ebx,DWORD PTR [ecx-0x54]
  40d1a4:	mov    eax,ds:0xbe6ed339
  40d1a9:	inc    ebp
  40d1aa:	xor    eax,0x135c9b99
  40d1af:	sub    BYTE PTR [ecx+0x2b8a8eb],ah
  40d1b5:	xor    DWORD PTR [edi-0x50],ebp
  40d1b8:	ret    0xc4fb
  40d1bb:	out    0xa3,al
  40d1bd:	dec    edi
  40d1be:	lahf   
  40d1bf:	cmp    eax,0xa1bb4814
  40d1c4:	pop    edi
  40d1c5:	addr16 inc ebx
  40d1c7:	mov    edx,0xf19b4a60
  40d1cc:	mov    bh,0x6
  40d1ce:	les    esi,FWORD PTR [ebp-0x1ecab874]
  40d1d4:	test   DWORD PTR [esi-0x50b2673c],esp
  40d1da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1db:	aaa    
  40d1dc:	pushf  
  40d1dd:	cwde   
  40d1de:	pop    ecx
  40d1df:	fidivr DWORD PTR [ebp-0x7f]
  40d1e2:	jns    0x40d1d2
  40d1e4:	cmp    dl,BYTE PTR [ebp+eax*4-0x80]
  40d1e8:	mov    ?,WORD PTR [eax-0x44]
  40d1eb:	cli    
  40d1ec:	popa   
  40d1ed:	jnp    0x40d268
  40d1ef:	inc    esi
  40d1f0:	xor    al,0xf6
  40d1f2:	daa    
  40d1f3:	xchg   BYTE PTR ds:0xf44e06d5,bl
  40d1f9:	imul   BYTE PTR [esi-0x2eb060b4]
  40d1ff:	inc    eax
  40d200:	xchg   esi,eax
  40d201:	cmp    edi,eax
  40d203:	dec    eax
  40d204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d205:	adc    al,0xb4
  40d207:	push   ds
  40d208:	cwde   
  40d209:	retf   
  40d20a:	mov    eax,ds:0xc9c3020d
  40d20f:	and    al,0xff
  40d211:	and    DWORD PTR [ebx+0x3a],edi
  40d214:	push   ebx
  40d215:	or     DWORD PTR ds:0x68eb9a5b,ebx
  40d21b:	mov    ebx,0x33aca6b2
  40d220:	loope  0x40d1d2
  40d222:	pop    es
  40d223:	outs   dx,BYTE PTR ds:[esi]
  40d224:	call   0xc508ab38
  40d229:	jge    0x40d201
  40d22b:	adc    al,0xe3
  40d22d:	jp     0x40d1ca
  40d22f:	xor    al,0x25
  40d231:	mov    ebx,0x5826b12
  40d236:	jge    0x40d1b8
  40d238:	jno    0x40d20c
  40d23a:	xchg   ebp,eax
  40d23b:	push   esp
  40d23c:	cmp    DWORD PTR [edx-0x60e873aa],edi
  40d242:	jmp    0xfaf0:0x6c1285f3
  40d249:	iret   
  40d24a:	rcr    BYTE PTR [edi-0x1d113e89],1
  40d250:	pop    ds
  40d251:	xor    ebp,DWORD PTR [eax+0x37ad208f]
  40d257:	ss dec esp
  40d259:	sbb    esi,edi
  40d25b:	in     eax,0x2a
  40d25d:	push   ebx
  40d25e:	or     DWORD PTR [edi],ecx
  40d260:	xchg   ecx,eax
  40d261:	mov    eax,0xf1716bd
  40d266:	sbb    BYTE PTR [edx-0x33],dl
  40d269:	jge    0x40d2d7
  40d26b:	sbb    al,0x9d
  40d26d:	addr16 jbe 0x40d28a
  40d270:	aas    
  40d271:	dec    esp
  40d272:	or     BYTE PTR [esi+0x69e94952],dl
  40d278:	loope  0x40d290
  40d27a:	push   0x95316a6c
  40d27f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d280:	sar    BYTE PTR [esi+0x59ccc166],1
  40d286:	popf   
  40d287:	mov    ?,WORD PTR [esi]
  40d289:	lods   al,BYTE PTR ds:[esi]
  40d28a:	sub    DWORD PTR [ebp+0x6],edi
  40d28d:	push   eax
  40d28e:	xchg   dh,ah
  40d290:	repnz mov bh,cl
  40d293:	sbb    eax,0x48ba8476
  40d298:	sbb    al,0x1e
  40d29a:	ja     0x40d308
  40d29c:	add    esi,DWORD PTR [ecx+esi*4]
  40d29f:	mov    ebp,0x2305838b
  40d2a4:	sub    esp,0x5fa0099f
  40d2aa:	xor    eax,0x3890cb9f
  40d2af:	sar    BYTE PTR [ecx+0x6689e3],cl
  40d2b5:	lds    ebp,FWORD PTR [edi-0x2d97dffe]
  40d2bb:	lock maskmovq mm2,(bad)
  40d2bd:	not    DWORD PTR [edx+ebx*8-0xf]
  40d2c1:	icebp  
  40d2c2:	mov    cl,0xed
  40d2c4:	inc    ecx
  40d2c5:	out    0xf1,al
  40d2c7:	aas    
  40d2c8:	not    BYTE PTR [ebx+eiz*2+0x41]
  40d2cc:	push   esi
  40d2cd:	or     al,0x7d
  40d2cf:	imul   BYTE PTR [eax+0x54]
  40d2d2:	xchg   esi,eax
  40d2d3:	nop
  40d2d4:	sbb    ah,bl
  40d2d6:	out    0xe6,al
  40d2d8:	pushf  
  40d2d9:	and    al,0xb0
  40d2db:	div    BYTE PTR [eax]
  40d2dd:	je     0x40d2e4
  40d2df:	pop    eax
  40d2e0:	imul   esp,ecx,0x5682c7d2
  40d2e6:	jae    0x40d2d3
  40d2e8:	sbb    DWORD PTR [ebx],esp
  40d2ea:	loope  0x40d316
  40d2ec:	ins    DWORD PTR es:[edi],dx
  40d2ed:	(bad)  
  40d2ee:	xor    DWORD PTR [eax],esi
  40d2f0:	retf   0x5215
  40d2f3:	xor    eax,DWORD PTR [edx-0x21f8b798]
  40d2f9:	ins    DWORD PTR es:[edi],dx
  40d2fa:	dec    ecx
  40d2fb:	stc    
  40d2fc:	mov    ebp,0x40e736aa
  40d301:	les    ecx,FWORD PTR [ecx+0x55ff2d8e]
  40d307:	into   
  40d308:	mov    ds:0xf9c3d68e,al
  40d30d:	icebp  
  40d30e:	ins    BYTE PTR es:[edi],dx
  40d30f:	dec    ebp
  40d310:	nop
  40d311:	mov    WORD PTR [ebp+0x3a],cs
  40d314:	lds    ebx,FWORD PTR [eax-0x31a0c61e]
  40d31a:	or     ecx,DWORD PTR [ecx+eiz*1+0x437f260c]
  40d321:	retf   
  40d322:	push   esi
  40d323:	lahf   
  40d324:	mov    DWORD PTR [esi],ecx
  40d326:	or     DWORD PTR [edi-0x3ca108],edx
  40d32c:	leave  
  40d32d:	push   edx
  40d32e:	mov    ecx,0x99b7e118
  40d333:	dec    ebx
  40d334:	and    ch,BYTE PTR [eax+ebx*1]
  40d337:	lds    ebp,FWORD PTR [edi-0x77417393]
  40d33d:	rol    DWORD PTR [ebx+ebx*2+0x47ca272],1
  40d344:	cmp    BYTE PTR [esi+ebx*8-0x64],ah
  40d348:	sti    
  40d349:	pushf  
  40d34a:	inc    edi
  40d34b:	in     al,0xc8
  40d34d:	xor    al,0x3f
  40d34f:	(bad)  
  40d351:	pop    ecx
  40d352:	mov    ch,ch
  40d354:	popa   
  40d355:	add    eax,0x77e9b64f
  40d35a:	mov    ds:0xf9587af3,al
  40d35f:	xchg   ebx,eax
  40d360:	mov    DWORD PTR [edi],0xda072f96
  40d366:	or     al,0xc2
  40d368:	and    eax,0x7bc8250
  40d36d:	pop    esi
  40d36e:	fwait
  40d36f:	mov    esi,0xe34948ff
  40d374:	lds    ebp,FWORD PTR [esi+edi*4]
  40d377:	push   edi
  40d378:	dec    edi
  40d379:	mov    esp,0xb23c5f85
  40d37e:	and    bl,BYTE PTR [ebx]
  40d380:	pop    ebp
  40d381:	push   esi
  40d382:	jg     0x40d320
  40d384:	pop    ecx
  40d385:	out    0x52,al
  40d387:	mov    DWORD PTR [edx],ecx
  40d389:	xchg   esi,eax
  40d38a:	push   0x26
  40d38c:	fstp   DWORD PTR [ebx+0x3b8c4d3e]
  40d392:	inc    ebp
  40d393:	push   esp
  40d394:	push   edx
  40d395:	or     al,0xbf
  40d397:	add    bh,BYTE PTR [ebx]
  40d399:	mov    ecx,0x76d50fd8
  40d39e:	es push 0x31834d44
  40d3a4:	or     BYTE PTR [edx],bl
  40d3a6:	in     eax,0x46
  40d3a8:	dec    ebx
  40d3a9:	das    
  40d3aa:	lock cmp bl,cl
  40d3ad:	dec    esi
  40d3ae:	clc    
  40d3af:	pop    ebp
  40d3b0:	dec    edi
  40d3b1:	retf   0xf452
  40d3b4:	xchg   BYTE PTR [edx-0x5a7c2414],ah
  40d3ba:	aad    0x77
  40d3bc:	call   0x22e6:0xb7fff0e4
  40d3c3:	fcomp  DWORD PTR [esi]
  40d3c5:	mov    edi,0xa60c6cee
  40d3ca:	aam    0x12
  40d3cc:	or     dh,BYTE PTR [ebp-0x1108d629]
  40d3d2:	mov    ch,0x24
  40d3d4:	iret   
  40d3d5:	cmp    eax,0xe26127d7
  40d3da:	fnsave [esi-0x6a]
  40d3dd:	out    dx,eax
  40d3de:	inc    ebp
  40d3df:	int    0x5
  40d3e1:	push   es
  40d3e2:	push   edi
  40d3e3:	mov    esi,0xdd5bc885
  40d3e8:	daa    
  40d3e9:	xchg   DWORD PTR [ecx-0x41858412],esp
  40d3ef:	mov    ah,0xd1
  40d3f1:	jo     0x40d3f6
  40d3f3:	mov    bl,0x32
  40d3f5:	cli    
  40d3f6:	cmp    ah,dl
  40d3f8:	xor    edi,DWORD PTR [ebx+esi*4]
  40d3fb:	sar    DWORD PTR [ebx-0x1e],0x31
  40d3ff:	xchg   ebp,eax
  40d400:	push   ss
  40d401:	mov    ah,0x20
  40d403:	inc    edi
  40d404:	in     eax,0xdc
  40d406:	enter  0xed9,0x67
  40d40a:	pop    edi
  40d40b:	daa    
  40d40c:	dec    esi
  40d40d:	(bad)  
  40d40e:	jp     0x40d46d
  40d410:	ins    DWORD PTR es:[edi],dx
  40d411:	je     0x40d3af
  40d413:	int    0xa3
  40d415:	xor    eax,DWORD PTR [ecx-0x4eaf9b5e]
  40d41b:	and    al,BYTE PTR [eax-0x4a6f49d5]
  40d421:	mov    ds:0x617f4528,eax
  40d426:	mov    ebp,0xed7fdffd
  40d42b:	mov    dh,0xac
  40d42d:	sub    bl,BYTE PTR [edx-0x34c79323]
  40d433:	retf   0x13b4
  40d436:	dec    edi
  40d437:	adc    DWORD PTR [ecx-0x19d3d274],esi
  40d43d:	retf   0x12bf
  40d440:	(bad)  
  40d441:	bound  ebp,QWORD PTR [edx+0x3af80233]
  40d447:	lock pop es
  40d449:	icebp  
  40d44a:	pop    ss
  40d44b:	clc    
  40d44c:	xchg   ecx,eax
  40d44d:	outs   dx,BYTE PTR ds:[esi]
  40d44e:	jg     0x40d41e
  40d450:	cld    
  40d451:	scas   eax,DWORD PTR es:[edi]
  40d452:	push   esi
  40d453:	or     edi,DWORD PTR [ebp+0x4]
  40d456:	push   esp
  40d457:	sar    BYTE PTR [ebp+0x36f7df2e],0xba
  40d45e:	xchg   ecx,eax
  40d45f:	jbe    0x40d482
  40d461:	test   al,0x28
  40d463:	test   eax,0xbfaf1b5d
  40d468:	lock mov bh,0x9
  40d46b:	sub    ah,ah
  40d46d:	out    dx,eax
  40d46e:	sbb    eax,0x4544c741
  40d473:	mov    dh,0x7d
  40d475:	inc    edx
  40d476:	or     eax,0x37cf0da7
  40d47b:	xchg   ebx,eax
  40d47c:	ins    DWORD PTR es:[edi],dx
  40d47d:	in     eax,0xd5
  40d47f:	and    eax,0xc6b2472a
  40d484:	out    dx,eax
  40d485:	sub    ch,ch
  40d487:	pusha  
  40d488:	pop    ebx
  40d489:	add    DWORD PTR [esi+0x5f8d30f6],esi
  40d48f:	cdq    
  40d490:	ror    esi,0x39
  40d493:	inc    ebp
  40d494:	jnp    0x40d4ff
  40d496:	xchg   DWORD PTR [ecx+0x1b],eax
  40d499:	fwait
  40d49a:	gs test eax,0x52c3ffaa
  40d4a0:	sub    eax,DWORD PTR [edx-0x16]
  40d4a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4a4:	add    DWORD PTR [ebx-0x291de314],ecx
  40d4aa:	xor    ebp,DWORD PTR [esi]
  40d4ac:	iret   
  40d4ad:	or     dl,BYTE PTR [ebx]
  40d4af:	pushf  
  40d4b0:	(bad)  
  40d4b1:	jl     0x40d447
  40d4b3:	ret    0x1467
  40d4b6:	xchg   ebp,eax
  40d4b7:	dec    ebx
  40d4b8:	dec    esp
  40d4b9:	or     DWORD PTR [ebx-0x4b6d94b4],ebx
  40d4bf:	or     al,0x1d
  40d4c1:	cmp    eax,0xaf84059f
  40d4c6:	lahf   
  40d4c7:	adc    al,0x26
  40d4c9:	push   0xfcbf10f3
  40d4ce:	mov    ah,0xbd
  40d4d0:	jnp    0x40d484
  40d4d2:	cmp    ecx,esi
  40d4d4:	mov    bl,0xe
  40d4d6:	jmp    FWORD PTR [eax]
  40d4d8:	and    BYTE PTR [ecx-0x68564288],al
  40d4de:	mov    ds:0x65fa1c6a,eax
  40d4e3:	mov    DWORD PTR [ebx],eax
  40d4e5:	pushf  
  40d4e6:	imul   ecx,DWORD PTR [ebp-0x8],0x73
  40d4ea:	push   ds
  40d4eb:	(bad)  
  40d4ec:	pop    ss
  40d4ed:	mov    esp,0x582378f3
  40d4f2:	jge    0x40d55a
  40d4f4:	sub    al,0x24
  40d4f6:	mov    WORD PTR [edx+0x69],fs
  40d4f9:	out    dx,eax
  40d4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4fb:	cmp    ebx,edx
  40d4fd:	out    dx,al
  40d4fe:	popf   
  40d4ff:	out    dx,eax
  40d500:	pop    ebx
  40d501:	fstp   DWORD PTR [ecx]
  40d503:	add    esi,esi
  40d505:	enter  0xc5d1,0x63
  40d509:	mov    bh,0xf0
  40d50b:	cwde   
  40d50c:	outs   dx,BYTE PTR ds:[esi]
  40d50d:	mov    WORD PTR [ebx-0x62d7b70a],ds
  40d513:	sbb    al,0x9e
  40d515:	jmp    0xaf09e821
  40d51a:	jns    0x40d4af
  40d51c:	outs   dx,BYTE PTR ds:[esi]
  40d51d:	in     eax,0xbe
  40d51f:	adc    eax,ecx
  40d521:	xor    BYTE PTR [ecx],dh
  40d523:	adc    eax,0x13927a48
  40d528:	popf   
  40d529:	retf   0xca3d
  40d52c:	jl     0x40d558
  40d52e:	popf   
  40d52f:	(bad)  
  40d530:	in     eax,dx
  40d531:	js     0x40d58b
  40d533:	mov    ds:0x5572e94c,al
  40d538:	aam    0x1e
  40d53a:	mov    al,0x1a
  40d53c:	lds    ebp,FWORD PTR [esi-0x32]
  40d53f:	inc    esp
  40d540:	popf   
  40d541:	cmc    
  40d542:	mov    eax,ds:0x2401ee7d
  40d547:	retf   0x227e
  40d54a:	lods   al,BYTE PTR ds:[esi]
  40d54b:	mov    dl,0xe
  40d54d:	xchg   edx,eax
  40d54e:	test   cl,bh
  40d550:	into   
  40d551:	shl    DWORD PTR [ebp+0x299a1aa1],0x4b
  40d558:	sbb    BYTE PTR [ebx-0x15],cl
  40d55b:	ins    DWORD PTR es:[edi],dx
  40d55c:	loop   0x40d5c5
  40d55e:	mov    ch,0x86
  40d560:	and    bl,BYTE PTR [ebx+0x75]
  40d563:	std    
  40d564:	xor    cl,bh
  40d566:	dec    esi
  40d567:	dec    edx
  40d568:	cmp    BYTE PTR [eax],dl
  40d56a:	bound  ebx,QWORD PTR [edi+0x5c8d284b]
  40d570:	inc    esi
  40d571:	pop    ebp
  40d572:	and    dh,BYTE PTR [ecx+0x52a33c1f]
  40d578:	mov    BYTE PTR [esi-0x63],dl
  40d57b:	aam    0x12
  40d57d:	call   0xb062:0x7ecd1048
  40d584:	xor    al,dl
  40d586:	and    BYTE PTR [ebp+0x40dbc57d],ah
  40d58c:	mov    bl,0x66
  40d58e:	scas   al,BYTE PTR es:[edi]
  40d58f:	pop    ss
  40d590:	aam    0xb4
  40d592:	sbb    dh,BYTE PTR [ecx-0x1508111d]
  40d598:	mov    ds,WORD PTR ds:0xd964b359
  40d59e:	mov    ds:0x7b9652ba,eax
  40d5a3:	jnp    0x40d5bd
  40d5a5:	dec    ecx
  40d5a6:	mov    ds:0xecee71b3,al
  40d5ab:	pop    ebx
  40d5ac:	adc    dh,BYTE PTR [edi-0x1b08063d]
  40d5b2:	dec    ecx
  40d5b3:	sub    eax,0xfb9ee071
  40d5b8:	out    dx,al
  40d5b9:	cmc    
  40d5ba:	cmc    
  40d5bb:	mov    eax,0x12ba88ee
  40d5c0:	mov    WORD PTR [ebx+0x53],gs
  40d5c3:	jge    0x40d554
  40d5c5:	outs   dx,BYTE PTR ds:[esi]
  40d5c6:	hlt    
  40d5c7:	xlat   BYTE PTR ds:[ebx]
  40d5c8:	pop    esp
  40d5c9:	int3   
  40d5ca:	imul   eax,DWORD PTR [edi-0x5e],0xa00816d4
  40d5d1:	idiv   DWORD PTR ss:[edx]
  40d5d4:	sub    eax,0xf4651a54
  40d5d9:	adc    cl,dl
  40d5db:	sub    DWORD PTR [ebx+0x6d86e4ef],eax
  40d5e1:	lods   eax,DWORD PTR ds:[esi]
  40d5e2:	mov    esp,0xba41c761
  40d5e7:	push   ss
  40d5e8:	push   0x68e0107
  40d5ed:	add    dh,bh
  40d5ef:	mov    dl,0xd4
  40d5f1:	jg     0x40d667
  40d5f3:	pop    eax
  40d5f4:	dec    di
  40d5f6:	loopne 0x40d62b
  40d5f8:	les    edi,FWORD PTR [eax-0x1f]
  40d5fb:	xchg   ebx,eax
  40d5fc:	aaa    
  40d5fd:	sti    
  40d5fe:	sbb    bh,bl
  40d600:	inc    edi
  40d601:	icebp  
  40d602:	xchg   ebx,eax
  40d603:	adc    DWORD PTR [edi+0x54454f1d],edi
  40d609:	xchg   ebp,eax
  40d60a:	xchg   ebx,eax
  40d60b:	(bad)  [edi+0x788114c0]
  40d611:	ret    
  40d612:	outs   dx,BYTE PTR ds:[esi]
  40d613:	push   0x62
  40d615:	mov    eax,ds:0x56930f6a
  40d61a:	cdq    
  40d61b:	ja     0x40d5fe
  40d61d:	enter  0xfb1f,0x49
  40d621:	ja     0x40d68a
  40d623:	push   esi
  40d624:	sbb    eax,0x6ea1d7a7
  40d629:	mov    dh,0xb1
  40d62b:	scas   al,BYTE PTR es:[edi]
  40d62c:	fcomp  QWORD PTR [ebp+esi*2-0x7f984685]
  40d633:	idiv   ecx
  40d635:	pop    ebp
  40d636:	ins    BYTE PTR es:[edi],dx
  40d637:	lock add esi,esp
  40d63a:	inc    esi
  40d63b:	pop    ds
  40d63c:	nop
  40d63d:	push   ss
  40d63e:	in     eax,0x63
  40d640:	xor    BYTE PTR ds:0x680cd73f,al
  40d646:	add    ebp,DWORD PTR [esp+ecx*2]
  40d649:	xchg   ebx,eax
  40d64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d64b:	rcl    BYTE PTR ds:[ebp+0x68852b8e],1
  40d652:	lock and al,0xad
  40d655:	add    al,0x90
  40d657:	dec    ebx
  40d658:	(bad)  
  40d659:	jne    0x40d62f
  40d65b:	popa   
  40d65c:	pop    ebp
  40d65d:	add    bl,BYTE PTR [edi+0x65]
  40d660:	imul   edi,DWORD PTR [ebx+0x4ced60de],0x756cf24d
  40d66a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d66b:	not    ecx
  40d66d:	and    edi,0xd34ddd29
  40d673:	mov    al,ds:0xadb04af2
  40d678:	mov    BYTE PTR [ecx-0x2bd644d],bh
  40d67e:	and    al,0xec
  40d680:	mov    al,0xe3
  40d682:	sbb    al,BYTE PTR ds:[edx-0x1fd2724d]
  40d689:	inc    esp
  40d68a:	jp     0x40d65e
  40d68c:	mov    WORD PTR [edx+0x78],cs
  40d68f:	dec    ecx
  40d690:	inc    edi
  40d691:	ror    DWORD PTR [bp-0x143a],1
  40d696:	out    0xe6,al
  40d698:	psubusb mm7,QWORD PTR [edx]
  40d69b:	mov    WORD PTR es:0x4bdaa3cd,?
  40d6a2:	lds    edx,FWORD PTR [edi+ebp*1+0x60538e5c]
  40d6a9:	out    0xfd,eax
  40d6ab:	jo     0x40d682
  40d6ad:	into   
  40d6ae:	add    DWORD PTR [edi+0x29eca3d8],0x1a
  40d6b5:	pop    es
  40d6b6:	in     al,0x6c
  40d6b8:	adc    DWORD PTR [edx+0x2e],edx
  40d6bb:	out    0xcd,al
  40d6bd:	sub    al,0xdb
  40d6bf:	dec    eax
  40d6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6c1:	out    dx,al
  40d6c2:	rcl    DWORD PTR [edi-0x6df1bf71],0x0
  40d6c9:	(bad)  
  40d6cb:	fmul   DWORD PTR [ebx-0x20c1649b]
  40d6d1:	cmp    al,0x4f
  40d6d3:	cmp    esi,ebp
  40d6d5:	cmc    
  40d6d6:	cmp    dl,BYTE PTR [edx]
  40d6d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6d9:	es xchg ebx,eax
  40d6db:	push   ecx
  40d6dc:	(bad)  
  40d6dd:	aaa    
  40d6de:	adc    eax,0x7602d39f
  40d6e3:	int    0xa6
  40d6e5:	adc    eax,0xb379c1a7
  40d6ea:	int3   
  40d6eb:	jp     0x40d6e5
  40d6ed:	add    ah,BYTE PTR [edi]
  40d6ef:	loop   0x40d6db
  40d6f1:	sbb    bl,BYTE PTR [edx]
  40d6f3:	adc    eax,0x7030dba3
  40d6f8:	es mov ebx,0xd67ca472
  40d6fe:	jle    0x40d6b7
  40d700:	dec    edx
  40d701:	outs   dx,DWORD PTR ds:[esi]
  40d702:	push   ebx
  40d703:	pop    esi
  40d704:	mov    dh,0x62
  40d706:	stos   BYTE PTR es:[edi],al
  40d707:	or     ecx,esp
  40d709:	xchg   esi,eax
  40d70a:	push   ebx
  40d70b:	xor    eax,0xbdb047db
  40d710:	xchg   DWORD PTR [eax+ebx*8],edi
  40d713:	pop    ebx
  40d714:	jle    0x40d728
  40d716:	push   cs
  40d717:	mov    ebp,0xabfda5ab
  40d71c:	inc    eax
  40d71d:	fwait
  40d71e:	mov    eax,DWORD PTR [ebp+0x78]
  40d721:	push   esp
  40d722:	adc    eax,0x5f40bd38
  40d727:	dec    eax
  40d728:	adc    BYTE PTR [ecx],dl
  40d72a:	(bad)  [esi]
  40d72c:	popa   
  40d72d:	pop    edx
  40d72e:	and    BYTE PTR [edi+0x44],bl
  40d731:	push   ecx
  40d732:	mov    eax,0x11798141
  40d737:	xor    DWORD PTR [ecx],ecx
  40d739:	fistp  DWORD PTR [ecx]
  40d73b:	clc    
  40d73c:	jo     0x40d6f9
  40d73e:	repz fld DWORD PTR [ecx-0x1eeecd75]
  40d745:	popf   
  40d746:	lds    ebp,FWORD PTR [esi+edi*2-0x251f225]
  40d74d:	arpl   WORD PTR [edx-0x4ea0b330],dx
  40d753:	pop    es
  40d754:	push   0xc9d2cc6c
  40d759:	cwde   
  40d75a:	test   al,0x2a
  40d75c:	mov    ebx,DWORD PTR [ebx+0x5e]
  40d75f:	imul   ebx,DWORD PTR [edx+0x24],0x18
  40d763:	dec    edi
  40d764:	shl    DWORD PTR [esi],1
  40d766:	xchg   DWORD PTR [ecx],edi
  40d768:	out    0x49,eax
  40d76a:	fld    QWORD PTR [ebx]
  40d76c:	pop    edx
  40d76d:	daa    
  40d76e:	cdq    
  40d76f:	fst    DWORD PTR [edx+0x1a26a988]
  40d775:	int    0x7c
  40d777:	test   al,0x87
  40d779:	cmc    
  40d77a:	or     al,0xa0
  40d77c:	(bad)  
  40d77d:	cs std 
  40d77f:	push   ss
  40d780:	mov    al,0x7d
  40d782:	add    DWORD PTR [ebp+0x7c],edx
  40d785:	dec    ebp
  40d786:	push   edi
  40d787:	dec    edi
  40d788:	xchg   esi,eax
  40d789:	mov    al,ds:0x434cd650
  40d78e:	mov    eax,esp
  40d790:	and    DWORD PTR [esi*8+0x2dc8af81],ebp
  40d797:	jecxz  0x40d71e
  40d799:	xchg   edi,eax
  40d79a:	lods   eax,DWORD PTR ds:[esi]
  40d79b:	cld    
  40d79c:	cdq    
  40d79d:	out    dx,al
  40d79e:	xchg   ecx,eax
  40d79f:	dec    ebp
  40d7a0:	jns    0x40d804
  40d7a2:	jg     0x40d72b
  40d7a4:	xchg   ebx,eax
  40d7a5:	sub    eax,edx
  40d7a7:	pop    esp
  40d7a8:	in     al,dx
  40d7a9:	ffreep st(4)
  40d7ab:	fwait
  40d7ac:	jnp    0x40d750
  40d7ae:	je     0x40d81e
  40d7b0:	stos   BYTE PTR es:[edi],al
  40d7b1:	pop    ss
  40d7b2:	inc    eax
  40d7b3:	jecxz  0x40d762
  40d7b5:	loopne 0x40d81d
  40d7b7:	jge    0x40d807
  40d7b9:	and    dl,bl
  40d7bb:	add    DWORD PTR [edi-0x7f],ebx
  40d7be:	sbb    al,al
  40d7c0:	add    ecx,DWORD PTR [esi-0x7a65da0c]
  40d7c6:	out    dx,eax
  40d7c7:	xchg   ebp,eax
  40d7c8:	dec    esi
  40d7c9:	in     eax,0xd1
  40d7cb:	lock ins DWORD PTR es:[edi],dx
  40d7cd:	pop    ebp
  40d7ce:	push   esi
  40d7cf:	or     eax,0x77995691
  40d7d4:	fnstenv [ebp+0x4b]
  40d7d7:	mov    DWORD PTR fs:[edi+0x6d],ebx
  40d7db:	mov    BYTE PTR [ebx-0x78],bl
  40d7de:	fstp   DWORD PTR [ebx+0x2345e3ef]
  40d7e4:	sbb    edx,edx
  40d7e6:	inc    edi
  40d7e7:	mov    dl,0x2a
  40d7e9:	xor    eax,0xa66d2d5f
  40d7ee:	bound  edx,QWORD PTR [ebx-0x7]
  40d7f1:	das    
  40d7f2:	mov    ebx,0x53aa16fc
  40d7f7:	mov    edx,0xbc4fb845
  40d7fc:	push   esp
  40d7fd:	in     eax,dx
  40d7fe:	scas   al,BYTE PTR es:[edi]
  40d7ff:	sbb    al,0x65
  40d801:	xchg   DWORD PTR [esi-0x4955661f],edx
  40d807:	aaa    
  40d808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d809:	sbb    dl,BYTE PTR [esp+edi*4+0x305ac10]
  40d810:	(bad)  
  40d811:	fwait
  40d812:	pop    ds
  40d813:	and    BYTE PTR ds:0x1d01aec9,dl
  40d819:	ss cwde 
  40d81b:	in     eax,0x81
  40d81d:	mov    esi,0x5a6d635a
  40d822:	dec    eax
  40d823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d824:	call   DWORD PTR [edx-0x11]
  40d827:	lods   eax,DWORD PTR ds:[esi]
  40d828:	pushf  
  40d829:	sbb    BYTE PTR [ebx+0x18],ah
  40d82c:	pop    ss
  40d82d:	ins    DWORD PTR es:[edi],dx
  40d82e:	mov    ds:0x5e26b95e,eax
  40d833:	fst    QWORD PTR [ecx-0x4f]
  40d836:	(bad)  
  40d837:	pop    edi
  40d838:	ins    BYTE PTR es:[edi],dx
  40d839:	aaa    
  40d83a:	lods   al,BYTE PTR ds:[esi]
  40d83b:	gs in  eax,dx
  40d83d:	ret    0x627a
  40d840:	adc    cl,BYTE PTR [edx]
  40d842:	pop    ecx
  40d843:	mov    edx,0x28b321fd
  40d848:	mov    ecx,0x845184f2
  40d84d:	retf   0x3460
  40d850:	inc    BYTE PTR [esi-0x10]
  40d853:	hlt    
  40d854:	(bad)  
  40d855:	fiadd  DWORD PTR [ecx+0xd369ff2]
  40d85b:	repz data16 aaa 
  40d85e:	cmp    BYTE PTR [edx+0x2a],ch
  40d861:	lea    edi,[edi]
  40d863:	xchg   ebp,eax
  40d864:	retf   0xbcb
  40d867:	bound  edi,QWORD PTR [ebx-0x595142a8]
  40d86d:	xchg   ebx,eax
  40d86e:	retf   
  40d86f:	xchg   edi,eax
  40d870:	sbb    BYTE PTR [esp+ecx*1],cl
  40d873:	xchg   BYTE PTR [ebp+eiz*2+0x1d],cl
  40d877:	jl     0x40d8dd
  40d879:	dec    edi
  40d87a:	jns    0x40d8ed
  40d87c:	adc    BYTE PTR ds:0x7261058e,ch
  40d882:	push   esp
  40d883:	stc    
  40d884:	test   BYTE PTR [eax],0xd8
  40d887:	mov    dl,0xe1
  40d889:	scas   eax,DWORD PTR es:[edi]
  40d88a:	mov    eax,ds:0x9bcc2178
  40d88f:	jne    0x40d8de
  40d891:	mov    cl,0xf8
  40d893:	arpl   WORD PTR [edi-0x2adf6981],ax
  40d899:	retf   0x8458
  40d89c:	jmp    DWORD PTR [eax]
  40d89e:	out    dx,al
  40d89f:	jge    0x40d8b4
  40d8a1:	adc    ebx,edx
  40d8a3:	pop    ss
  40d8a4:	adc    dh,dl
  40d8a6:	add    DWORD PTR [ebx+0x1e],0xd032c6bb
  40d8ad:	inc    ecx
  40d8ae:	nop
  40d8af:	lods   eax,DWORD PTR ds:[esi]
  40d8b0:	inc    ecx
  40d8b1:	cmp    ch,BYTE PTR [edi-0x59]
  40d8b4:	inc    ebx
  40d8b5:	xor    edi,DWORD PTR [eax-0x80]
  40d8b8:	sbb    al,0xa3
  40d8ba:	scas   al,BYTE PTR es:[edi]
  40d8bb:	xlat   BYTE PTR ds:[ebx]
  40d8bc:	and    BYTE PTR [ebx],dh
  40d8be:	sbb    bl,ah
  40d8c0:	js     0x40d856
  40d8c2:	xor    ebp,DWORD PTR [eax+0x5fa6f72a]
  40d8c8:	ja     0x40d85e
  40d8ca:	add    DWORD PTR [edx],eax
  40d8cc:	add    ch,BYTE PTR [eax+0x47]
  40d8cf:	popa   
  40d8d0:	and    BYTE PTR [ebx+ecx*8-0x3ee26935],bh
  40d8d7:	sahf   
  40d8d8:	inc    ebx
  40d8d9:	adc    esp,esi
  40d8db:	dec    esi
  40d8dc:	pop    esp
  40d8dd:	dec    edi
  40d8de:	call   DWORD PTR [ebx]
  40d8e0:	cmp    BYTE PTR [edx-0x2befe4db],dh
  40d8e6:	xlat   BYTE PTR ds:[ebx]
  40d8e7:	jno    0x40d8e4
  40d8e9:	xchg   esp,eax
  40d8ea:	mov    eax,ds:0x80fde619
  40d8ef:	pop    es
  40d8f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8f1:	out    0xd3,al
  40d8f3:	jno    0x40d954
  40d8f5:	popa   
  40d8f6:	inc    ebx
  40d8f7:	ss call 0x5cb9:0x7218bf0
  40d8ff:	pop    ds
  40d900:	stos   BYTE PTR es:[edi],al
  40d901:	fs leave 
  40d903:	sahf   
  40d904:	push   edx
  40d905:	aad    0xd0
  40d907:	mov    bh,0xb8
  40d909:	push   0xffffffd5
  40d90b:	ret    0xcdc3
  40d90e:	mov    ebx,0xc5c422f7
  40d913:	or     al,0xd0
  40d915:	les    esp,FWORD PTR ds:0xf7d74499
  40d91b:	mov    edi,0x7263c859
  40d920:	push   edi
  40d921:	xchg   DWORD PTR [edx-0x7a81851a],edi
  40d927:	push   ss
  40d928:	mulps  xmm0,XMMWORD PTR [ecx-0x4974f848]
  40d92f:	push   ds
  40d930:	cmp    ebx,DWORD PTR [eax+0x4dd77b28]
  40d936:	dec    ebp
  40d937:	or     eax,0x597c24e1
  40d93c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d93d:	(bad)  
  40d93e:	in     al,0x8e
  40d940:	xor    BYTE PTR [edx+ebp*8-0x79],cl
  40d944:	sti    
  40d945:	cdq    
  40d946:	std    
  40d947:	xchg   edi,eax
  40d948:	xchg   DWORD PTR [eax],edi
  40d94a:	mov    eax,0x3f8a2781
  40d94f:	or     DWORD PTR [esi-0x39],edx
  40d952:	jmp    0x92e4:0x393f01ab
  40d959:	lahf   
  40d95a:	das    
  40d95b:	pop    ds
  40d95c:	ss cmp eax,0x35f004c1
  40d962:	inc    ebp
  40d963:	or     eax,0xe3ee3379
  40d968:	in     al,dx
  40d969:	scas   eax,DWORD PTR es:[edi]
  40d96a:	pop    es
  40d96b:	push   esp
  40d96c:	sub    ah,BYTE PTR [edi-0x4e]
  40d96f:	cmc    
  40d970:	cld    
  40d971:	cs and eax,0x3e27fd4d
  40d977:	and    eax,0xffffff82
  40d97a:	and    al,0x5b
  40d97c:	sbb    al,0xf2
  40d97e:	in     eax,0x3e
  40d980:	sub    DWORD PTR [ebp-0x14],edx
  40d983:	add    ebp,DWORD PTR [edx]
  40d985:	in     eax,dx
  40d986:	and    BYTE PTR [edx+0x1b],0x11
  40d98a:	xchg   ecx,edx
  40d98c:	pusha  
  40d98d:	pop    edi
  40d98e:	je     0x40d97c
  40d990:	inc    esp
  40d991:	cmp    eax,0x8f9ca9b9
  40d996:	es mov dl,dh
  40d999:	and    ebx,0x840c395c
  40d99f:	(bad)  
  40d9a0:	xchg   esi,eax
  40d9a1:	shr    DWORD PTR [ebx],cl
  40d9a3:	inc    edi
  40d9a4:	lods   eax,DWORD PTR ds:[esi]
  40d9a5:	sbb    al,0x3b
  40d9a7:	adc    al,0x8c
  40d9a9:	jbe    0x40d94a
  40d9ab:	push   eax
  40d9ac:	daa    
  40d9ad:	loope  0x40d960
  40d9af:	movups xmm3,xmm7
  40d9b2:	or     ecx,DWORD PTR [ecx+0x0]
  40d9b5:	aas    
  40d9b6:	mov    ecx,0xebcabffb
  40d9bb:	cmp    dl,bl
  40d9bd:	cli    
  40d9be:	sahf   
  40d9bf:	mov    ecx,eax
  40d9c1:	pop    ebx
  40d9c2:	lock pop esp
  40d9c4:	adc    edx,DWORD PTR [ebp+0xb83356]
  40d9ca:	xor    BYTE PTR [edx-0x17],0x42
  40d9ce:	lea    ebp,[ebx-0x27f34b5f]
  40d9d4:	xor    ah,dl
  40d9d6:	dec    ecx
  40d9d7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9d9:	repz mov esp,0xa45584aa
  40d9df:	dec    esp
  40d9e0:	xchg   ebp,eax
  40d9e1:	mov    ss,WORD PTR [ecx-0x35]
  40d9e4:	adc    al,0x52
  40d9e6:	mov    ah,0x3b
  40d9e8:	sub    ebx,DWORD PTR [eax+0x53]
  40d9eb:	pop    ds
  40d9ec:	xor    eax,0x743c7a2
  40d9f1:	push   ss
  40d9f2:	out    dx,al
  40d9f3:	xchg   DWORD PTR [edx+0x22],ecx
  40d9f6:	cmp    esp,DWORD PTR [ecx]
  40d9f8:	sub    al,0xbb
  40d9fa:	jns    0x40d9b4
  40d9fc:	and    eax,DWORD PTR [edi-0x1d]
  40d9ff:	mov    bl,0xe2
  40da01:	adc    ebp,DWORD PTR [eax-0x56]
  40da04:	lock add BYTE PTR [ecx],ah
  40da07:	je     0x40d99e
  40da09:	xchg   edi,eax
  40da0a:	mov    edi,0xbf9e88d0
  40da0f:	sbb    esp,esi
  40da11:	retf   
  40da12:	je     0x40da38
  40da14:	fs ss pop edx
  40da17:	das    
  40da18:	out    dx,al
  40da19:	inc    eax
  40da1a:	xor    edi,0x70
  40da1d:	dec    ebx
  40da1e:	imul   DWORD PTR [ecx]
  40da20:	and    edi,DWORD PTR [eax*8+0x54c6e1c0]
  40da27:	xor    DWORD PTR [edi+edx*1-0x7845dee4],edx
  40da2e:	mov    ss,esi
  40da30:	cmp    al,0x95
  40da32:	mov    ch,0x81
  40da34:	fisttp DWORD PTR [edi]
  40da36:	pop    eax
  40da38:	mov    DWORD PTR [edx],esp
  40da3a:	scas   eax,DWORD PTR es:[edi]
  40da3b:	inc    esp
  40da3c:	mov    BYTE PTR ds:0x6c2cfe11,bh
  40da42:	out    0xa7,eax
  40da44:	push   0xba2fa04
  40da49:	int    0xe4
  40da4b:	adc    cl,BYTE PTR [edi-0x48fd8a5]
  40da51:	lods   eax,DWORD PTR ds:[esi]
  40da52:	pop    ebp
  40da53:	ss sahf 
  40da55:	fs ja  0x40d9f1
  40da58:	unpcklps xmm2,XMMWORD PTR [ebx]
  40da5b:	xor    BYTE PTR [ebx+0x5fd3b32d],ah
  40da61:	sahf   
  40da62:	icebp  
  40da63:	sbb    bh,bl
  40da65:	pop    ss
  40da66:	aas    
  40da67:	push   ds
  40da68:	mov    ch,0xc8
  40da6a:	cwde   
  40da6b:	cmp    BYTE PTR [esi-0x45c8d11c],0xdb
  40da72:	aaa    
  40da73:	bound  eax,QWORD PTR [edi+0x66c318ab]
  40da79:	fisubr DWORD PTR [ecx+edi*4]
  40da7c:	xchg   edx,eax
  40da7d:	lock das 
  40da7f:	loopne 0x40da59
  40da81:	and    DWORD PTR [eax+0x4bb1e3ce],esp
  40da87:	pusha  
  40da88:	test   DWORD PTR [ebx+0x4c80a761],edi
  40da8e:	dec    edx
  40da8f:	mov    bl,0xac
  40da91:	adc    al,0xdd
  40da93:	cmc    
  40da94:	jbe    0x40dafa
  40da96:	fs push ecx
  40da98:	bound  esp,QWORD PTR [edi]
  40da9a:	push   ebx
  40da9b:	cld    
  40da9c:	popa   
  40da9d:	xchg   ebp,eax
  40da9e:	(bad)  
  40da9f:	ficomp WORD PTR [ebx]
  40daa1:	xor    DWORD PTR [ebp-0x3da573e9],edi
  40daa7:	(bad)  
  40daa8:	scas   eax,DWORD PTR es:[edi]
  40daa9:	sbb    al,0x25
  40daab:	daa    
  40daac:	sbb    DWORD PTR ds:0xe287cd0e,ebx
  40dab2:	shl    cl,1
  40dab4:	add    edx,DWORD PTR ds:0xb075c2f0
  40daba:	fidivr WORD PTR [eax]
  40dabc:	mov    al,ds:0x6a74074a
  40dac1:	ffree  st(1)
  40dac3:	dec    ebx
  40dac4:	cli    
  40dac5:	sbb    dl,ch
  40dac7:	push   ecx
  40dac8:	inc    ecx
  40dac9:	sub    ecx,esp
  40dacb:	jle    0x40db26
  40dacd:	cs jle 0x40da82
  40dad0:	push   ecx
  40dad1:	push   ds
  40dad2:	push   esi
  40dad3:	adc    BYTE PTR [ecx+0x69],0xbb
  40dad7:	mov    ah,0xd0
  40dad9:	dec    esp
  40dada:	addr16 push ecx
  40dadc:	jmp    0x487ab816
  40dae1:	arpl   cx,dx
  40dae3:	notrack jmp DWORD PTR [edx-0x9]
  40dae7:	and    DWORD PTR [edx+0x3b084212],eax
  40daed:	adc    eax,0x1bb5bfdf
  40daf2:	pop    ds
  40daf3:	retf   
  40daf4:	hlt    
  40daf5:	arpl   WORD PTR [esi+0x1e],di
  40daf8:	fadd   QWORD PTR [edi]
  40dafa:	mov    esp,0x954ecc07
  40daff:	pushf  
  40db00:	sti    
  40db01:	pusha  
  40db02:	xor    al,0x20
  40db04:	jbe    0x40db08
  40db06:	sbb    al,0x9a
  40db08:	xchg   esi,eax
  40db09:	xchg   edx,eax
  40db0a:	cmc    
  40db0b:	xor    DWORD PTR [ebx+0x39],edx
  40db0e:	ds jg  0x40db75
  40db11:	push   edx
  40db12:	jge    0x40db2f
  40db14:	stc    
  40db15:	sbb    BYTE PTR [ebx+ebx*8+0x6d],bl
  40db19:	test   eax,0x53013654
  40db1e:	(bad)  [esi+0x1a]
  40db21:	and    DWORD PTR [eax],ebx
  40db23:	(bad)  
  40db24:	pusha  
  40db25:	add    edx,DWORD PTR [eax-0x3e7629eb]
  40db2b:	sub    edi,DWORD PTR [ebx+0x3c]
  40db2e:	(bad)  [ebx-0x66]
  40db31:	(bad)  [eax-0x5b]
  40db34:	sbb    BYTE PTR [ecx],dl
  40db36:	aad    0x5d
  40db38:	add    BYTE PTR [ecx-0x67b59df2],dh
  40db3e:	jne    0x40dacc
  40db40:	ds clc 
  40db42:	xchg   esi,eax
  40db43:	pop    ds
  40db44:	push   ss
  40db45:	ins    BYTE PTR es:[edi],dx
  40db46:	gs add ah,0x76
  40db4a:	lahf   
  40db4b:	sahf   
  40db4c:	push   ds
  40db4d:	xor    dl,BYTE PTR [ecx+0x755f3d68]
  40db53:	pop    ecx
  40db54:	aam    0x2f
  40db56:	ss jp  0x40db52
  40db59:	xchg   edi,eax
  40db5a:	sbb    edx,DWORD PTR [ebx-0x4f]
  40db5d:	xchg   edx,eax
  40db5e:	test   DWORD PTR [ebx+ecx*1],0xd15120ae
  40db65:	sti    
  40db66:	lods   al,BYTE PTR ds:[esi]
  40db67:	in     al,0x71
  40db69:	gs aaa 
  40db6b:	xchg   edx,eax
  40db6c:	fs dec edx
  40db6e:	popa   
  40db6f:	jns    0x40dbd3
  40db71:	and    bh,BYTE PTR [ecx-0x25]
  40db74:	push   ecx
  40db75:	xchg   edx,eax
  40db76:	pushf  
  40db77:	(bad)  
  40db79:	inc    esp
  40db7a:	inc    esp
  40db7b:	(bad)  
  40db7c:	sti    
  40db7d:	dec    eax
  40db7e:	lfs    esp,FWORD PTR [edx+eax*2-0x13]
  40db83:	nop
  40db84:	jp     0x40db94
  40db86:	int    0x61
  40db88:	outs   dx,DWORD PTR ds:[esi]
  40db89:	cld    
  40db8a:	std    
  40db8b:	and    ah,0x9b
  40db8e:	dec    edx
  40db8f:	and    ah,BYTE PTR [eax]
  40db91:	pop    ecx
  40db92:	jp     0x40dbf3
  40db94:	retf   
  40db95:	repnz adc eax,0x5cb40f28
  40db9b:	div    BYTE PTR [eax+0x6c]
  40db9e:	add    edi,esi
  40dba0:	pop    esp
  40dba1:	pop    ebp
  40dba2:	sahf   
  40dba3:	sub    BYTE PTR [edi-0x62],bh
  40dba6:	(bad)  
  40dba7:	xchg   ebp,eax
  40dba8:	mov    ch,0x5
  40dbaa:	int    0xe0
  40dbac:	sub    eax,0x777f6aa
  40dbb1:	jmp    0x130d:0xa1cb4533
  40dbb8:	out    dx,al
  40dbb9:	test   BYTE PTR [edx+0x3a9841a2],cl
  40dbbf:	sub    al,0x57
  40dbc1:	jge    0x40dc1b
  40dbc3:	je     0x40dc43
  40dbc5:	mov    ebx,DWORD PTR [edx*4+0x41aa48a4]
  40dbcc:	jle    0x40db57
  40dbce:	pop    edi
  40dbcf:	(bad)  
  40dbd0:	je     0x40dbd1
  40dbd2:	and    DWORD PTR [ebx],ebp
  40dbd4:	inc    esi
  40dbd5:	sbb    edi,DWORD PTR [esp+eiz*8+0x6e]
  40dbd9:	je     0x40db86
  40dbdb:	mov    DWORD PTR [ebx],ecx
  40dbdd:	idiv   BYTE PTR [ebx-0x60580049]
  40dbe3:	jl     0x40dc47
  40dbe5:	sbb    BYTE PTR [edi-0x6d],dl
  40dbe8:	imul   ebx,DWORD PTR [ecx+0xb],0x26
  40dbec:	inc    ecx
  40dbed:	and    al,0xb0
  40dbef:	daa    
  40dbf0:	inc    edi
  40dbf1:	fidiv  DWORD PTR [ecx]
  40dbf3:	and    bh,BYTE PTR [edx+0x22]
  40dbf6:	push   0x32307e64
  40dbfb:	or     bh,ch
  40dbfd:	xchg   ebx,eax
  40dbfe:	push   esp
  40dbff:	hlt    
  40dc00:	iret   
  40dc01:	test   edx,0xa7b893aa
  40dc07:	mov    dl,0x20
  40dc09:	lock pop ebp
  40dc0b:	shl    BYTE PTR [eax+0x14],1
  40dc0e:	push   edx
  40dc0f:	ficom  DWORD PTR ds:0x33404233
  40dc15:	push   ds
  40dc16:	pusha  
  40dc17:	xlat   BYTE PTR ds:[ebx]
  40dc18:	pop    es
  40dc19:	(bad)  
  40dc1a:	fcmovu st,st(2)
  40dc1c:	clc    
  40dc1d:	cmp    al,0xb2
  40dc1f:	int    0x7c
  40dc21:	cmp    eax,0x9a1cfb75
  40dc26:	stos   DWORD PTR es:[edi],eax
  40dc27:	sub    eax,0xb111927a
  40dc2c:	test   BYTE PTR [esi+0x37],0xed
  40dc30:	call   0x917680d3
  40dc35:	adc    BYTE PTR [ebp+0x7c9a3baa],ch
  40dc3b:	(bad)  
  40dc3c:	or     dl,dh
  40dc3e:	mov    ecx,0x7ca21758
  40dc43:	aas    
  40dc44:	int    0xe8
  40dc46:	jl     0x40dc5f
  40dc48:	not    BYTE PTR [ecx-0x9]
  40dc4b:	xchg   ecx,eax
  40dc4c:	arpl   WORD PTR [edx+0x48],di
  40dc4f:	in     al,0xec
  40dc51:	jb     0x40dcd0
  40dc53:	cmp    edx,ebp
  40dc55:	pop    ds
  40dc56:	fnstsw WORD PTR [esi+0x26]
  40dc59:	pop    eax
  40dc5a:	cli    
  40dc5b:	sub    BYTE PTR [ebp-0x77],ch
  40dc5e:	iret   
  40dc5f:	cmc    
  40dc60:	mov    al,0x8e
  40dc62:	pushf  
  40dc63:	add    bh,BYTE PTR [edx-0x2dea0c9f]
  40dc69:	ror    DWORD PTR [eax-0x69],cl
  40dc6c:	or     BYTE PTR [esi],0x9b
  40dc6f:	xor    eax,0xf3444d9f
  40dc74:	bound  esi,QWORD PTR ds:0x8ee80968
  40dc7a:	or     DWORD PTR [edi+0x8],ecx
  40dc7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc7e:	inc    eax
  40dc7f:	cmp    BYTE PTR [ebx-0x33],dh
  40dc82:	sbb    al,0x98
  40dc84:	ins    BYTE PTR es:[edi],dx
  40dc85:	outs   dx,DWORD PTR ds:[esi]
  40dc86:	gs (bad) 
  40dc88:	std    
  40dc89:	xor    al,0x12
  40dc8b:	mov    ecx,0x26f67c0e
  40dc90:	gs scas eax,DWORD PTR es:[edi]
  40dc92:	jne    0x40dd0b
  40dc94:	cmp    eax,0x5fd715fe
  40dc99:	(bad)  
  40dc9a:	jns    0x40dcaf
  40dc9c:	and    al,0x81
  40dc9e:	mov    cl,0x61
  40dca0:	bnd je 0x40dcab
  40dca3:	imul   DWORD PTR ds:0x5d772c41
  40dca9:	sbb    bh,ah
  40dcab:	aas    
  40dcac:	les    ebx,FWORD PTR [esi-0x71058ad4]
  40dcb2:	jg     0x40dd09
  40dcb4:	fldcw  WORD PTR [esi-0x436704c8]
  40dcba:	pop    ebp
  40dcbb:	ret    
  40dcbc:	pop    ss
  40dcbd:	mov    eax,ds:0x17fc30e8
  40dcc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcc3:	(bad)  
  40dcc4:	sbb    dl,ch
  40dcc6:	test   bl,cl
  40dcc8:	(bad)  
  40dcc9:	outs   dx,DWORD PTR ds:[esi]
  40dcca:	nop
  40dccb:	xchg   ebp,eax
  40dccc:	adc    cl,bl
  40dcce:	push   0x37
  40dcd0:	mov    al,ds:0x98821065
  40dcd5:	mov    eax,0x957319fa
  40dcda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcdb:	pop    ss
  40dcdc:	sub    BYTE PTR [ecx],dh
  40dcde:	lods   al,BYTE PTR ds:[esi]
  40dcdf:	les    eax,FWORD PTR [ecx+0x41]
  40dce2:	xchg   esp,edi
  40dce4:	dec    edi
  40dce5:	ins    BYTE PTR es:[edi],dx
  40dce6:	push   esp
  40dce7:	int    0x83
  40dce9:	ins    DWORD PTR es:[edi],dx
  40dcea:	add    al,0xbe
  40dcec:	adc    BYTE PTR [ebx+edi*2],bl
  40dcef:	jg     0x40dd32
  40dcf1:	popa   
  40dcf2:	cld    
  40dcf3:	xchg   BYTE PTR [ebp-0x45ba1988],ah
  40dcf9:	inc    ecx
  40dcfa:	mov    edx,0xc0d77884
  40dcff:	scas   eax,DWORD PTR es:[edi]
  40dd00:	scas   al,BYTE PTR es:[edi]
  40dd01:	ret    
  40dd02:	adc    eax,esi
  40dd04:	dec    DWORD PTR ss:[ebp+0x44af4f37]
  40dd0b:	or     bl,BYTE PTR [ebp+0x3e]
  40dd0e:	call   0x13b73734
  40dd13:	sub    cl,BYTE PTR [ebp+0x70cbac39]
  40dd19:	pop    ecx
  40dd1a:	std    
  40dd1b:	xchg   ebp,eax
  40dd1c:	(bad)  
  40dd1d:	dec    ebx
  40dd1e:	arpl   WORD PTR [ebx+0x38],dx
  40dd21:	pop    eax
  40dd22:	lds    edx,FWORD PTR ds:0x4d82bed9
  40dd28:	push   eax
  40dd29:	lods   eax,DWORD PTR ds:[esi]
  40dd2a:	or     BYTE PTR [esi],dl
  40dd2c:	iret   
  40dd2d:	xchg   ecx,eax
  40dd2e:	lods   al,BYTE PTR ds:[esi]
  40dd2f:	sub    al,0x74
  40dd31:	imul   esi,DWORD PTR es:[edi-0x4c5bfb57],0xffffffe1
  40dd39:	xchg   ebp,eax
  40dd3a:	(bad)  
  40dd3b:	into   
  40dd3c:	lods   eax,DWORD PTR ds:[esi]
  40dd3d:	and    bl,BYTE PTR [ebx+0x40]
  40dd40:	(bad)  
  40dd41:	xor    ch,al
  40dd43:	and    ah,BYTE PTR [eax]
  40dd45:	addr16 ja 0x40dccc
  40dd48:	outs   dx,DWORD PTR ss:[esi]
  40dd4a:	cmp    eax,0x36e09b01
  40dd4f:	dec    eax
  40dd50:	retf   
  40dd51:	test   BYTE PTR [ebp+0x64],ch
  40dd54:	jno    0x40ddd2
  40dd56:	sbb    BYTE PTR [esp+ecx*8-0x27],ch
  40dd5a:	(bad)  
  40dd5b:	jmp    0x40dd18
  40dd5d:	pop    ebp
  40dd5e:	fs popa 
  40dd60:	dec    edi
  40dd61:	dec    esp
  40dd62:	in     al,dx
  40dd63:	mov    bl,0xbe
  40dd65:	mov    BYTE PTR [edi],ch
  40dd67:	dec    edi
  40dd68:	es iret 
  40dd6a:	cld    
  40dd6b:	(bad)  
  40dd6d:	sbb    ecx,DWORD PTR [ebp*8-0x2aae93a6]
  40dd74:	aad    0xa1
  40dd76:	jle    0x40dd4a
  40dd78:	inc    BYTE PTR ds:0xd4bcef89
  40dd7e:	push   edx
  40dd7f:	sbb    al,0x26
  40dd81:	(bad)  
  40dd83:	lea    edi,[esi+0x47]
  40dd86:	mov    al,0x19
  40dd88:	pop    ds
  40dd89:	mov    BYTE PTR [bp+di-0x47ff],dl
  40dd8e:	mov    edx,0xb7229650
  40dd93:	adc    esp,DWORD PTR [eax+0x2672e75]
  40dd99:	loope  0x40ddc2
  40dd9b:	or     BYTE PTR [ebp+0x12],cl
  40dd9e:	mov    ah,0x11
  40dda0:	xchg   ebp,eax
  40dda1:	push   ebp
  40dda2:	xchg   esp,eax
  40dda3:	add    BYTE PTR ds:0xddd66358,al
  40dda9:	loop   0x40de21
  40ddab:	jno    0x40dd6b
  40ddad:	jmp    0xd84d:0xacf153db
  40ddb4:	dec    ebp
  40ddb5:	push   edx
  40ddb6:	test   al,0x98
  40ddb8:	ficomp WORD PTR [esi+0xb671b22]
  40ddbf:	jno    0x40de26
  40ddc1:	fidiv  WORD PTR [ebp+0x6047d377]
  40ddc7:	mov    bl,0x10
  40ddc9:	(bad)  
  40ddca:	call   0x1b89:0xd516bf56
  40ddd1:	sbb    al,0xb9
  40ddd3:	inc    edx
  40ddd4:	jl     0x40ddb7
  40ddd6:	mov    edx,0xb48db4a9
  40dddb:	and    eax,0x2c47dc18
  40dde0:	dec    ebx
  40dde1:	push   ecx
  40dde2:	inc    ecx
  40dde3:	jmp    0x40dded
  40dde5:	xchg   esi,eax
  40dde6:	push   ecx
  40dde7:	mov    eax,ds:0xeadca76b
  40ddec:	cmp    eax,0x28b595ef
  40ddf1:	xchg   esi,eax
  40ddf2:	jno    0x40dd77
  40ddf4:	cmp    al,0x28
  40ddf6:	xchg   ebx,eax
  40ddf7:	call   0x43722a02
  40ddfc:	mov    al,0x2e
  40ddfe:	cmp    dh,BYTE PTR [eax+0x21]
  40de01:	repz fst QWORD PTR [esp+ebx*8-0x3c]
  40de06:	fisub  DWORD PTR [edx]
  40de08:	out    0x7c,al
  40de0a:	lods   eax,DWORD PTR ds:[esi]
  40de0b:	mov    ah,0xd1
  40de0d:	cmp    al,0xcb
  40de0f:	(bad)  
  40de10:	mov    dl,0xb6
  40de12:	rcl    BYTE PTR [edx],cl
  40de14:	or     BYTE PTR [ebp+edx*8-0x7e5e645c],dh
  40de1b:	push   ss
  40de1c:	addr16 jb 0x40de8f
  40de1f:	aam    0x34
  40de21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de22:	test   BYTE PTR [eax],0x78
  40de25:	inc    edx
  40de26:	test   al,0x5a
  40de28:	inc    eax
  40de29:	mov    dh,0xc8
  40de2b:	(bad)  
  40de2c:	out    0xe0,al
  40de2e:	mov    ebp,0xef600e6d
  40de33:	mov    ch,0xdd
  40de35:	add    DWORD PTR [eax-0x3f],0x1e0b7039
  40de3c:	jae    0x40de70
  40de3e:	sbb    al,0x6b
  40de40:	xchg   DWORD PTR [edi-0x53],eax
  40de43:	mov    ds:0x7e4d1a4f,eax
  40de48:	jecxz  0x40de2c
  40de4a:	xchg   esp,eax
  40de4b:	and    DWORD PTR [ebp-0x367cfa61],ebp
  40de51:	pop    es
  40de52:	cmp    BYTE PTR [ecx],bh
  40de54:	repz mov edi,0x4b6813a5
  40de5a:	pushf  
  40de5b:	and    DWORD PTR [ebx+0x414229e],ebp
  40de61:	mov    eax,ds:0xa294ae62
  40de66:	inc    edi
  40de67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de68:	pop    ebp
  40de69:	adc    BYTE PTR [ebx],0x8d
  40de6c:	retf   
  40de6d:	fcomp  DWORD PTR [ecx-0xc46cc19]
  40de73:	sbb    dl,BYTE PTR [eax-0x7b]
  40de76:	stos   DWORD PTR es:[edi],eax
  40de77:	lods   al,BYTE PTR ds:[esi]
  40de78:	push   esp
  40de79:	(bad)  
  40de7a:	jp     0x40de94
  40de7c:	jecxz  0x40dea6
  40de7e:	stc    
  40de7f:	push   ebp
  40de80:	in     al,0x41
  40de82:	fcom   QWORD PTR [eax-0x12e72629]
  40de88:	cmp    bl,BYTE PTR [edx]
  40de8a:	mov    bl,BYTE PTR [ecx]
  40de8c:	sbb    BYTE PTR [ebx+edi*2+0x27596ae],dh
  40de93:	sub    al,0xf
  40de95:	je     0x40de4d
  40de97:	cli    
  40de98:	jecxz  0x40de42
  40de9a:	push   es
  40de9b:	dec    ecx
  40de9c:	pop    esi
  40de9d:	(bad)  
  40de9e:	mov    ah,0x52
  40dea0:	daa    
  40dea1:	ds sti 
  40dea3:	inc    esi
  40dea4:	sub    ch,BYTE PTR [ebp+0x2a0da29]
  40deaa:	js     0x40df23
  40deac:	sahf   
  40dead:	aam    0x32
  40deaf:	mov    cl,0x21
  40deb1:	sbb    DWORD PTR [ebx-0x1c],esp
  40deb4:	fdiv   st(2),st
  40deb6:	sbb    eax,0x4f0399ee
  40debb:	sub    ebx,DWORD PTR [esi+eiz*1-0x64ea7910]
  40dec2:	aaa    
  40dec3:	cmp    eax,0xa398498b
  40dec8:	add    dh,dh
  40deca:	clc    
  40decb:	inc    eax
  40decc:	stos   BYTE PTR es:[edi],al
  40decd:	dec    edi
  40dece:	xchg   BYTE PTR [edi],bh
  40ded0:	into   
  40ded1:	mov    edx,0x30d707a4
  40ded6:	retf   0x733f
  40ded9:	mov    ebx,DWORD PTR [esi]
  40dedb:	pusha  
  40dedc:	and    edx,DWORD PTR [edi-0x30]
  40dedf:	jp     0x40dee8
  40dee1:	inc    ebx
  40dee2:	sahf   
  40dee3:	popf   
  40dee4:	data16 mov dh,0x30
  40dee7:	pop    esi
  40dee8:	mov    cl,0xde
  40deea:	jnp    0x40dea9
  40deec:	sbb    DWORD PTR [edi+0x631abfb0],0xffffffe9
  40def3:	inc    edi
  40def4:	xchg   ebx,eax
  40def5:	mov    ch,0x12
  40def7:	lods   eax,DWORD PTR ds:[esi]
  40def8:	out    dx,al
  40def9:	jmp    0x40dec2
  40defb:	je     0x40df3c
  40defd:	ror    ebx,cl
  40deff:	or     ch,dl
  40df01:	jg     0x40df3e
  40df03:	call   0xca948adf
  40df08:	retf   
  40df09:	imul   ecx,esp,0xffffffbf
  40df0c:	mov    cl,0x7e
  40df0e:	cmc    
  40df0f:	jmp    DWORD PTR [ecx-0x12]
  40df12:	jno    0x40df49
  40df14:	ret    0x9817
  40df17:	jns    0x40df62
  40df19:	outs   dx,BYTE PTR ds:[esi]
  40df1a:	fs (bad) 
  40df1d:	imul   ecx,DWORD PTR [ebp+0x6b96fd1a],0x605b0cd8
  40df27:	add    eax,0x75a2ea0c
  40df2c:	adc    BYTE PTR [ebx-0x7c],al
  40df2f:	fnstsw WORD PTR [ebx-0x63]
  40df32:	xchg   cx,ax
  40df34:	call   0x84a44aa6
  40df39:	nop
  40df3a:	push   edi
  40df3b:	stos   BYTE PTR es:[edi],al
  40df3c:	fcmovnu st,st(4)
  40df3e:	rcr    BYTE PTR [ebp-0x25],cl
  40df41:	jge    0x40dfa7
  40df43:	mov    dh,0xb0
  40df45:	push   ebp
  40df46:	add    dh,BYTE PTR [eax+0xf]
  40df49:	mov    edx,0x11916127
  40df4e:	sub    DWORD PTR [edi+0x7f735449],edi
  40df54:	or     DWORD PTR [edi+0x31],0xffffffa8
  40df58:	cmp    ebp,ebx
  40df5a:	test   DWORD PTR [ebp+0x9],ebx
  40df5d:	pop    ebx
  40df5e:	outs   dx,DWORD PTR ds:[esi]
  40df5f:	sub    DWORD PTR [eax-0xc6ed033],0xa
  40df66:	pop    ss
  40df67:	inc    eax
  40df68:	inc    eax
  40df69:	loope  0x40dfa1
  40df6b:	ds adc esp,esp
  40df6e:	outs   dx,BYTE PTR ds:[esi]
  40df6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df70:	inc    ebp
  40df71:	mov    edx,0x97640451
  40df76:	test   bh,cl
  40df78:	aam    0x75
  40df7a:	sub    DWORD PTR [ebp-0x708e04b0],ebx
  40df80:	das    
  40df81:	jge    0x40df79
  40df83:	(bad)  
  40df85:	and    al,0xd4
  40df87:	stc    
  40df88:	loope  0x40df66
  40df8a:	sahf   
  40df8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df8c:	pop    esp
  40df8d:	jmp    0x82d122a2
  40df92:	pushf  
  40df93:	bound  esi,QWORD PTR [esi+0x4]
  40df96:	jmp    0x97ae8aa5
  40df9b:	jbe    0x40dfeb
  40df9d:	inc    ebx
  40df9e:	xchg   ebx,eax
  40df9f:	xor    esp,DWORD PTR [edx-0x7288b7af]
  40dfa5:	(bad)  
  40dfa6:	sbb    DWORD PTR [ebx-0x47da4aa0],edx
  40dfac:	pushf  
  40dfad:	xor    DWORD PTR [eax],ebp
  40dfaf:	xor    bh,BYTE PTR [ebx]
  40dfb1:	cmp    eax,0xe949d8bc
  40dfb6:	sub    al,0xd6
  40dfb8:	lock int3 
  40dfba:	mov    al,BYTE PTR [ebp-0x40237467]
  40dfc0:	leave  
  40dfc1:	push   ss
  40dfc2:	data16 stc 
  40dfc4:	mov    al,0x6c
  40dfc6:	test   eax,0xb7d27dda
  40dfcb:	mov    dl,0x49
  40dfcd:	outs   dx,BYTE PTR ds:[esi]
  40dfce:	inc    ecx
  40dfcf:	std    
  40dfd0:	xchg   esp,eax
  40dfd1:	fisttp DWORD PTR [edx-0x7f2960]
  40dfd7:	pop    ss
  40dfd8:	jno    0x40dfb2
  40dfda:	fld    QWORD PTR [ebp+0x3d017413]
  40dfe0:	stos   BYTE PTR es:[edi],al
  40dfe1:	push   es
  40dfe2:	scas   al,BYTE PTR es:[edi]
  40dfe3:	test   BYTE PTR [eax-0x3faf8a65],bl
  40dfe9:	bound  edx,QWORD PTR [eax+0x25]
  40dfec:	outs   dx,BYTE PTR ds:[esi]
  40dfee:	test   cl,al
  40dff0:	push   ss
  40dff1:	xlat   BYTE PTR ds:[ebx]
  40dff2:	das    
  40dff3:	jnp    0x40e05b
  40dff5:	jno    0x40e076
  40dff7:	jb     0x40e006
  40dff9:	jb     0x40e011
  40dffb:	ror    DWORD PTR [eax],cl
  40dffd:	jmp    0xe651:0x695e6abb
  40e004:	shl    BYTE PTR [ebx],1
  40e006:	js     0x40dfdf
  40e008:	mov    dl,0x77
  40e00a:	sub    al,0x10
  40e00c:	adc    al,0x70
  40e00e:	not    BYTE PTR [ebx-0x321c1362]
  40e014:	in     eax,0x85
  40e016:	xor    eax,0x377994fe
  40e01b:	cmp    eax,0xd4ebff47
  40e020:	mov    cl,0xf2
  40e022:	retf   0x6872
  40e025:	es xchg ebp,eax
  40e027:	addr16 adc al,0xc5
  40e02a:	jp     0x40dfb8
  40e02c:	adc    esi,DWORD PTR [ebx]
  40e02e:	adc    BYTE PTR [ecx+0x5eb586bc],dl
  40e034:	ds push cs
  40e036:	fwait
  40e037:	push   0xca366823
  40e03c:	sub    edx,DWORD PTR [eax-0x5aa1a067]
  40e042:	fcmovnu st,st(3)
  40e044:	pop    DWORD PTR [eax]
  40e046:	mov    dl,0x98
  40e048:	scas   eax,DWORD PTR es:[edi]
  40e049:	xchg   edi,eax
  40e04a:	cmc    
  40e04b:	rcl    BYTE PTR [eax-0x9],cl
  40e04e:	lods   eax,DWORD PTR ds:[esi]
  40e04f:	loopne 0x40e0a0
  40e051:	sbb    ebp,DWORD PTR [eax]
  40e053:	xor    al,0xb2
  40e055:	outs   dx,DWORD PTR ds:[esi]
  40e056:	xchg   DWORD PTR [ebx],edi
  40e058:	rcl    DWORD PTR [edi-0x72dfe9a3],0x13
  40e05f:	lods   eax,DWORD PTR ds:[esi]
  40e060:	mov    ch,0xd1
  40e062:	jb     0x40e0b6
  40e064:	add    eax,DWORD PTR [ecx]
  40e066:	imul   edi,DWORD PTR [edi-0x46],0x13
  40e06a:	mov    ebp,0xa6750f39
  40e06f:	ins    DWORD PTR es:[edi],dx
  40e070:	adc    al,0x8
  40e072:	sar    ebp,0x52
  40e075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e076:	imul   ebp,DWORD PTR [ecx],0xfffffffb
  40e079:	icebp  
  40e07a:	lods   al,BYTE PTR ds:[esi]
  40e07b:	push   edx
  40e07c:	mov    dl,BYTE PTR [edi]
  40e07e:	xor    eax,0xca04125c
  40e083:	mov    ds:0x14e70e1d,al
  40e088:	mov    ch,0x84
  40e08a:	or     esp,ebx
  40e08c:	imul   ebp,DWORD PTR [ebp-0x5c],0xffffffee
  40e090:	jns    0x40e0f3
  40e092:	xchg   ebx,eax
  40e093:	or     bl,al
  40e095:	fwait
  40e096:	mov    eax,DWORD PTR [eax-0x5d]
  40e099:	adc    dx,WORD PTR [ecx-0x9]
  40e09d:	mov    ds:0xf5165924,eax
  40e0a2:	enter  0x328a,0x20
  40e0a6:	cli    
  40e0a7:	rcr    BYTE PTR ss:[edx],0x2f
  40e0ab:	adc    ch,BYTE PTR ds:0xfaeeb38b
  40e0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0b2:	sbb    ebp,DWORD PTR [eax+esi*1+0x5689083e]
  40e0b9:	jl     0x40e0e4
  40e0bb:	in     al,0xf6
  40e0bd:	adc    dl,BYTE PTR [ecx-0x615ddc8b]
  40e0c3:	mov    ebp,0x938aed74
  40e0c8:	cld    
  40e0c9:	pop    esi
  40e0ca:	push   ebx
  40e0cb:	imul   di,WORD PTR [eax+esi*2],0x67e3
  40e0d1:	dec    ecx
  40e0d2:	repnz gs loopne 0x40e107
  40e0d6:	mov    DWORD PTR [edx+esi*8],ebx
  40e0d9:	add    BYTE PTR [ecx+0x4c],bl
  40e0dc:	xor    eax,0x7c0c785f
  40e0e1:	add    dl,BYTE PTR [esi+0x43]
  40e0e4:	and    dh,BYTE PTR cs:[ebx]
  40e0e7:	mov    ah,0xd5
  40e0e9:	(bad)
  40e0ec:	fs in  eax,dx
  40e0ee:	push   esp
  40e0ef:	or     eax,DWORD PTR [ecx]
  40e0f1:	pop    esi
  40e0f2:	outs   dx,BYTE PTR ds:[esi]
  40e0f3:	loope  0x40e09a
  40e0f5:	mov    bh,0x9b
  40e0f7:	cli    
  40e0f8:	aam    0x3e
  40e0fa:	jne    0x40e172
  40e0fc:	jg     0x40e16c
  40e0fe:	inc    ecx
  40e0ff:	dec    ebp
  40e100:	inc    edx
  40e101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e102:	lods   eax,DWORD PTR ds:[esi]
  40e103:	(bad)  
  40e104:	clc    
  40e105:	ret    
  40e106:	cmp    DWORD PTR [eax],edx
  40e108:	test   DWORD PTR [edx-0x357e6983],edx
  40e10e:	in     eax,0xf2
  40e110:	mov    DWORD PTR [eax-0x68],ecx
  40e113:	les    ebp,FWORD PTR [edi+ebp*8-0x79]
  40e117:	daa    
  40e118:	inc    esi
  40e119:	not    BYTE PTR [esi]
  40e11b:	push   cs
  40e11c:	mov    ds:0xbdd4645f,eax
  40e122:	adc    BYTE PTR ds:0xeb1b48a3,bl
  40e128:	cmc    
  40e129:	je     0x40e128
  40e12b:	out    0xea,al
  40e12d:	xchg   esi,eax
  40e12e:	stos   DWORD PTR es:[edi],eax
  40e12f:	sub    eax,0x3825c104
  40e134:	test   DWORD PTR [ebp+0xa],ebp
  40e137:	lods   eax,DWORD PTR ds:[esi]
  40e138:	or     eax,0xbed92447
  40e13d:	xchg   esi,eax
  40e13e:	cmp    ch,dl
  40e140:	jecxz  0x40e13f
  40e142:	das    
  40e143:	sub    al,0x93
  40e145:	ins    DWORD PTR es:[edi],dx
  40e146:	in     eax,0x53
  40e148:	push   ebp
  40e149:	daa    
  40e14a:	cs sub bh,ch
  40e14d:	test   BYTE PTR [edi-0x6940bbd8],ah
  40e153:	mov    ch,0x1f
  40e155:	cdq    
  40e156:	mov    dl,0xfb
  40e158:	adc    eax,0x6fdda0ee
  40e15d:	ins    DWORD PTR es:[edi],dx
  40e15e:	push   eax
  40e15f:	sbb    DWORD PTR ss:[esi+ecx*4],ecx
  40e163:	xor    ch,ah
  40e165:	je     0x40e13b
  40e167:	cmc    
  40e168:	push   esp
  40e169:	dec    ecx
  40e16a:	sub    DWORD PTR [eax+0x42],ebp
  40e16d:	sbb    ch,ah
  40e16f:	mov    edx,0xdaf8cb85
  40e174:	lea    edi,[ecx]
  40e176:	inc    ebx
  40e177:	pop    esp
  40e178:	cmp    eax,0x2539c246
  40e17d:	push   esi
  40e17e:	mov    esp,edi
  40e180:	sub    DWORD PTR [edi-0x26],ebx
  40e183:	and    BYTE PTR ss:[eax-0x8],bl
  40e187:	pop    edi
  40e188:	and    al,0xb5
  40e18a:	iret   
  40e18b:	adc    al,0xe3
  40e18d:	retf   
  40e18e:	scas   eax,DWORD PTR es:[edi]
  40e18f:	add    ch,dh
  40e191:	push   edx
  40e192:	sub    bl,cl
  40e194:	test   eax,0x7fd8aa10
  40e199:	pop    es
  40e19a:	cmc    
  40e19b:	outs   dx,DWORD PTR ds:[esi]
  40e19c:	mov    eax,0x668658b7
  40e1a1:	sahf   
  40e1a2:	test   DWORD PTR [ebx-0x52],ebp
  40e1a5:	jo     0x40e17a
  40e1a7:	jmp    0x40e159
  40e1a9:	sbb    ecx,DWORD PTR [ebx+ecx*1+0x5635fcc]
  40e1b0:	daa    
  40e1b1:	and    al,0x51
  40e1b3:	jmp    0x40e176
  40e1b5:	push   ecx
  40e1b6:	fcom   DWORD PTR [edi-0x38]
  40e1b9:	mov    ebp,0x214a18f8
  40e1be:	jno    0x40e149
  40e1c0:	sbb    ebx,eax
  40e1c2:	fisttp DWORD PTR [edx+0x15286cd1]
  40e1c8:	call   0xa3a0:0x61bd97e
  40e1cf:	and    DWORD PTR [esi-0x33],esp
  40e1d2:	xchg   edx,eax
  40e1d3:	jp     0x40e178
  40e1d5:	call   0x1a7b6e5
  40e1da:	imul   eax,ebp,0x34f93d9b
  40e1e0:	mov    esp,eax
  40e1e2:	sbb    DWORD PTR [esi],esi
  40e1e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1e5:	xlat   BYTE PTR ds:[ebx]
  40e1e6:	pop    ss
  40e1e7:	cmp    cl,al
  40e1e9:	pop    edi
  40e1ea:	call   0x2785:0x9aa35a80
  40e1f1:	fcom   st(3)
  40e1f3:	(bad)  
  40e1f4:	fcomip st,st(6)
  40e1f6:	rcl    bl,1
  40e1f8:	sub    al,0x1
  40e1fa:	loop   0x40e263
  40e1fc:	mov    ebx,0xbb2969eb
  40e201:	sub    al,0xb3
  40e203:	push   esi
  40e204:	enter  0xbf76,0xbb
  40e208:	mov    eax,ds:0xb3de76b
  40e20d:	in     al,dx
  40e20e:	test   DWORD PTR [edi],eax
  40e210:	addr16 xchg bh,bl
  40e213:	cmc    
  40e214:	sub    eax,0x7cd57099
  40e219:	inc    edx
  40e21a:	sbb    ch,BYTE PTR [ebx]
  40e21c:	inc    edx
  40e21d:	scas   al,BYTE PTR es:[edi]
  40e21e:	mov    dl,0xf
  40e220:	cmp    ebp,ecx
  40e222:	pop    esp
  40e223:	adc    bh,ch
  40e225:	pop    ds
  40e226:	pop    esp
  40e227:	push   esp
  40e228:	shl    DWORD PTR [edi-0x318bdcce],1
  40e22e:	cmp    al,0x3d
  40e230:	int    0xb6
  40e232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e233:	inc    edi
  40e234:	inc    esp
  40e235:	clc    
  40e236:	shr    BYTE PTR [ebx+0x55],1
  40e239:	rcl    DWORD PTR [ecx-0x21e24316],cl
  40e23f:	mov    bl,0x43
  40e241:	cli    
  40e242:	loop   0x40e271
  40e244:	cdq    
  40e245:	mov    eax,ds:0xcbf1f16b
  40e24a:	sub    esp,DWORD PTR [ebp-0x51669226]
  40e250:	jge    0x40e23f
  40e252:	mov    bh,BYTE PTR [ebx+edi*8]
  40e255:	jp     0x40e28b
  40e257:	ins    DWORD PTR es:[edi],dx
  40e258:	cmp    DWORD PTR [ecx+esi*2],edx
  40e25b:	inc    edx
  40e25c:	jo     0x40e1e3
  40e25e:	pop    eax
  40e25f:	loop   0x40e29c
  40e261:	cs xchg edx,eax
  40e263:	scas   al,BYTE PTR es:[edi]
  40e264:	mov    ah,0xb7
  40e266:	pop    esi
  40e267:	outs   dx,BYTE PTR ds:[esi]
  40e268:	add    BYTE PTR [esi],cl
  40e26a:	dec    ebp
  40e26b:	ret    
  40e26c:	mov    dh,0x13
  40e26e:	pop    edx
  40e26f:	mov    ebp,0xd7424ee
  40e274:	stc    
  40e275:	sub    BYTE PTR [ecx-0x16],ch
  40e278:	test   DWORD PTR [eax-0x78],ecx
  40e27b:	inc    edx
  40e27c:	mov    es,WORD PTR [edx]
  40e27e:	adc    dl,BYTE PTR [esi]
  40e280:	mov    bh,0x39
  40e282:	pushf  
  40e283:	ins    DWORD PTR es:[edi],dx
  40e284:	lds    esi,FWORD PTR [ecx+eiz*4]
  40e287:	inc    ebp
  40e288:	ins    BYTE PTR es:[edi],dx
  40e289:	dec    esp
  40e28a:	push   0x16d37f9d
  40e28f:	jp     0x40e2f4
  40e291:	daa    
  40e292:	xchg   ecx,eax
  40e293:	push   esp
  40e294:	cs adc ecx,ecx
  40e297:	out    dx,eax
  40e298:	dec    edx
  40e299:	dec    ecx
  40e29a:	fs loopne 0x40e2b9
  40e29d:	imul   ebx,DWORD PTR [edi-0x31],0xf37dbfe1
  40e2a4:	or     eax,0xede89f95
  40e2a9:	repnz out dx,eax
  40e2ab:	fmul   st,st(7)
  40e2ad:	sub    eax,0x5503323
  40e2b2:	and    DWORD PTR [esi+eax*1-0x63],ecx
  40e2b6:	inc    eax
  40e2b7:	push   cs
  40e2b8:	pop    esp
  40e2b9:	ja     0x40e2d3
  40e2bb:	xlat   BYTE PTR ds:[ebx]
  40e2bc:	jmp    0xc462:0x83f13ad1
  40e2c3:	cld    
  40e2c4:	out    dx,eax
  40e2c5:	sub    BYTE PTR es:[eax],bl
  40e2c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2c9:	push   edx
  40e2ca:	cmp    BYTE PTR [edx],cl
  40e2cc:	sub    BYTE PTR [eax],ah
  40e2ce:	cmp    bl,BYTE PTR [eax-0x6c]
  40e2d1:	pushf  
  40e2d2:	imul   edx,DWORD PTR ds:0xd13cfdba,0xed9dc09f
  40e2dc:	popf   
  40e2dd:	xor    eax,0x2f57517d
  40e2e2:	and    al,0x8b
  40e2e4:	(bad)  
  40e2e6:	mov    al,ds:0x90d13c0f
  40e2eb:	repnz retf 
  40e2ed:	dec    esi
  40e2ee:	push   ss
  40e2ef:	cmc    
  40e2f0:	and    BYTE PTR [edx+0x5c9a3a0a],cl
  40e2f6:	call   0x5b02f9f3
  40e2fb:	cli    
  40e2fc:	sar    DWORD PTR [esi+0x3e],1
  40e2ff:	mov    ch,0xda
  40e301:	shr    edx,1
  40e303:	xor    eax,0xfda4387f
  40e308:	pop    es
  40e309:	and    al,0x73
  40e30b:	ds test al,0x40
  40e30e:	stc    
  40e30f:	dec    ecx
  40e310:	hlt    
  40e311:	scas   al,BYTE PTR es:[edi]
  40e312:	jl     0x40e387
  40e314:	repz je 0x40e32f
  40e317:	iret   
  40e318:	rcl    eax,cl
  40e31a:	fs push cs
  40e31c:	and    eax,0x200fe454
  40e321:	in     al,dx
  40e322:	push   esi
  40e323:	mov    eax,tr5
  40e326:	mov    edi,0xd56cbd65
  40e32b:	push   edx
  40e32c:	or     bl,ch
  40e32e:	int3   
  40e32f:	(bad)  
  40e330:	lock pop edi
  40e332:	mov    al,0x49
  40e334:	out    0x3b,al
  40e336:	add    dl,cl
  40e338:	dec    esi
  40e339:	es mov al,0x6d
  40e33c:	in     al,dx
  40e33d:	push   0x18
  40e33f:	ret    0xa276
  40e342:	call   0x1c86:0x64b9b204
  40e349:	add    BYTE PTR [ebp-0x7c],dh
  40e34c:	mov    ds:0xd6321b13,al
  40e351:	ret    
  40e352:	sub    esi,esi
  40e354:	popf   
  40e355:	in     eax,0xec
  40e357:	in     al,dx
  40e358:	jmp    0x3fb23cf5
  40e35d:	out    dx,eax
  40e35e:	in     al,dx
  40e35f:	mov    bh,0xc8
  40e361:	sbb    eax,0x56f2949d
  40e366:	sub    al,0x2c
  40e368:	or     al,0x88
  40e36a:	ds xchg edx,eax
  40e36c:	or     ebx,esp
  40e36e:	cs jmp 0x40e36c
  40e371:	xchg   ecx,eax
  40e372:	add    BYTE PTR [ecx-0x883ef9c],bl
  40e378:	or     al,BYTE PTR [esi+esi*4]
  40e37b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e37c:	dec    esp
  40e37d:	shr    DWORD PTR [edi+0x7c],cl
  40e380:	mul    BYTE PTR [ebx+0x1d806266]
  40e386:	add    edx,DWORD PTR [eax]
  40e388:	sub    al,0x7d
  40e38a:	lds    eax,FWORD PTR [ebx-0x4180c73e]
  40e390:	arpl   WORD PTR [edi+0x33],si
  40e393:	and    cl,bh
  40e395:	jmp    0x7039:0x9ab532bf
  40e39c:	fwait
  40e39d:	mov    esi,0x2fb24867
  40e3a2:	(bad)  
  40e3a3:	push   esi
  40e3a4:	cmp    al,0x8
  40e3a6:	cmp    al,bh
  40e3a8:	inc    eax
  40e3a9:	repnz or ecx,DWORD PTR [edi+edi*8-0x60cd241a]
  40e3b1:	repnz and DWORD PTR [edx],esp
  40e3b4:	or     esi,edx
  40e3b6:	mov    eax,0xd43547b7
  40e3bb:	ret    0xfe96
  40e3be:	(bad)  
  40e3bf:	push   esp
  40e3c0:	mov    DWORD PTR [ebx],edx
  40e3c2:	je     0x40e414
  40e3c4:	cmp    bh,BYTE PTR [ecx]
  40e3c6:	out    dx,al
  40e3c7:	mov    ebp,0xb003124d
  40e3cc:	ins    DWORD PTR es:[edi],dx
  40e3cd:	dec    DWORD PTR [edx+eax*2-0x4b367379]
  40e3d4:	cmp    ebx,esi
  40e3d6:	iret   
  40e3d7:	test   BYTE PTR [esi+0x65],bl
  40e3da:	popa   
  40e3db:	(bad)  
  40e3dc:	loopne 0x40e3dc
  40e3de:	sub    DWORD PTR [ebx+ebp*8],ebp
  40e3e1:	scas   eax,DWORD PTR es:[edi]
  40e3e2:	push   ds
  40e3e3:	push   0xf8973e3d
  40e3e8:	inc    ebp
  40e3e9:	ret    0xc665
  40e3ec:	aam    0xf8
  40e3ee:	sub    eax,0xeb046096
  40e3f3:	shr    BYTE PTR [esi-0x23],1
  40e3f6:	jl     0x40e3b0
  40e3f8:	test   BYTE PTR [ebx-0x29],cl
  40e3fb:	mov    ebp,0x4add9c5f
  40e400:	test   al,0x4e
  40e402:	mov    al,0x55
  40e404:	ins    DWORD PTR es:[edi],dx
  40e405:	bswap  esp
  40e407:	popa   
  40e408:	repz stc 
  40e40a:	jle    0x40e3dc
  40e40c:	adc    eax,0xf4999e9
  40e411:	adc    eax,0x26aebdb
  40e417:	mov    DWORD PTR [eax],esi
  40e419:	outs   dx,BYTE PTR ds:[esi]
  40e41a:	mov    eax,0xca8093c1
  40e41f:	in     eax,0xd
  40e421:	push   esi
  40e422:	or     al,0x2c
  40e424:	adc    al,0x23
  40e426:	inc    eax
  40e427:	(bad)  
  40e428:	stos   DWORD PTR es:[edi],eax
  40e429:	arpl   WORD PTR [edx-0x9],bp
  40e42c:	fcom   QWORD PTR [eax-0x7f]
  40e42f:	mov    esp,0x584a5d47
  40e434:	adc    BYTE PTR [edi+0x4fb95885],dh
  40e43a:	jmp    0x31cd:0x7d0b046a
  40e441:	pop    ebx
  40e442:	mov    edi,0xb9f5abc0
  40e447:	pop    ss
  40e448:	xlat   BYTE PTR ds:[ebx]
  40e449:	mov    esp,0x7af5812d
  40e44e:	cmc    
  40e44f:	lds    ebx,FWORD PTR [edi+0x68]
  40e452:	in     al,dx
  40e453:	inc    eax
  40e454:	push   es
  40e455:	mul    DWORD PTR [ebx-0x7b]
  40e458:	call   0xb5be:0x8802f327
  40e45f:	push   ebp
  40e460:	xchg   ebp,eax
  40e461:	sbb    BYTE PTR [eax+0x2d7eb089],ch
  40e467:	out    0xbd,al
  40e469:	imul   esi,DWORD PTR [edi-0x67],0xb08a05b5
  40e470:	mov    edi,edx
  40e472:	cmp    al,0x1d
  40e474:	xchg   ebp,eax
  40e475:	jne    0x40e4e7
  40e477:	sub    ebx,DWORD PTR [esi]
  40e479:	mov    WORD PTR [esi+ecx*4],ds
  40e47c:	adc    eax,0x56e9e311
  40e481:	or     BYTE PTR [eax+0x10],al
  40e484:	(bad)  
  40e485:	or     edx,esi
  40e487:	or     esp,DWORD PTR [ecx+0x4a]
  40e48a:	retf   
  40e48b:	mov    eax,ds:0x26e750ee
  40e490:	int    0xc9
  40e492:	js     0x40e46e
  40e494:	cwde   
  40e495:	and    BYTE PTR [bx+di-0x1831],cl
  40e49a:	out    dx,al
  40e49b:	pop    ebp
  40e49c:	loope  0x40e4b1
  40e49e:	jg     0x40e4a3
  40e4a0:	push   esi
  40e4a1:	in     eax,0x3d
  40e4a3:	(bad)  
  40e4a4:	loopne 0x40e4cf
  40e4a6:	cdq    
  40e4a7:	aaa    
  40e4a8:	push   ss
  40e4a9:	pop    esp
  40e4aa:	jne    0x40e46d
  40e4ac:	(bad)  
  40e4ad:	or     eax,edx
  40e4af:	and    esp,DWORD PTR ds:0x5f0da959
  40e4b5:	das    
  40e4b6:	ror    BYTE PTR [eax+0xf60de3b],1
  40e4bc:	mov    DWORD PTR [eax+0x22],esi
  40e4bf:	xchg   esp,eax
  40e4c0:	ret    0xc7ff
  40e4c3:	dec    edi
  40e4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4c5:	in     eax,dx
  40e4c6:	inc    DWORD PTR [edi]
  40e4c8:	rcr    BYTE PTR [edx+0x212799ce],1
  40e4ce:	js     0x40e456
  40e4d0:	out    0xfd,eax
  40e4d2:	int3   
  40e4d3:	push   0x32c2d387
  40e4d8:	pop    esi
  40e4d9:	jno    0x40e49c
  40e4db:	jg     0x40e549
  40e4dd:	push   edx
  40e4de:	popa   
  40e4df:	pop    edx
  40e4e0:	adc    bh,al
  40e4e2:	xchg   edx,eax
  40e4e3:	dec    ebp
  40e4e4:	jo     0x40e492
  40e4e6:	and    dl,bl
  40e4e8:	adc    dl,BYTE PTR [esi-0x416430b7]
  40e4ee:	xchg   edx,eax
  40e4ef:	pop    edi
  40e4f0:	nop
  40e4f1:	rcl    DWORD PTR [eax+eiz*2-0x248a3392],0x99
  40e4f9:	inc    ecx
  40e4fa:	test   BYTE PTR fs:[eax-0x2a71164a],al
  40e501:	cli    
  40e502:	mov    bh,cl
  40e504:	add    esp,DWORD PTR [esi+ecx*2-0x2a]
  40e508:	xor    ah,BYTE PTR [edi+0x17b5c4fe]
  40e50e:	jb     0x40e4dd
  40e510:	cmp    DWORD PTR [eax+0x51cbb27e],0x63b138c9
  40e51a:	arpl   WORD PTR [ebp-0x35b35e5c],cx
  40e520:	xchg   ecx,eax
  40e521:	push   0xffffff8e
  40e523:	fimul  DWORD PTR [ecx-0x67e19891]
  40e529:	icebp  
  40e52a:	lea    ecx,[eax+0x77]
  40e52d:	pushf  
  40e52e:	adc    eax,0x600020be
  40e533:	cdq    
  40e534:	dec    esp
  40e535:	fnstcw WORD PTR [edx+0x50]
  40e538:	(bad)  
  40e539:	xor    al,0xa5
  40e53b:	repz cmp bl,bl
  40e53e:	jo     0x40e51c
  40e540:	subps  xmm3,XMMWORD PTR [ebx+0x3b]
  40e544:	jg     0x40e548
  40e546:	into   
  40e547:	ja     0x40e4f3
  40e549:	fistp  QWORD PTR [esi-0x22026734]
  40e54f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e550:	loope  0x40e513
  40e552:	push   cs
  40e553:	imul   ebx,DWORD PTR [edx+ebx*4+0x3b],0xa59d5811
  40e55b:	stc    
  40e55c:	sahf   
  40e55d:	push   0x53
  40e55f:	inc    ebp
  40e560:	dec    ebp
  40e561:	sub    bl,BYTE PTR [eax-0x4]
  40e564:	mov    edi,0xe8dd3cb
  40e569:	mov    ds:0xaf20b8a0,al
  40e56e:	jp     0x40e5df
  40e570:	sbb    DWORD PTR [edi],edx
  40e572:	jnp    0x40e599
  40e574:	or     al,0x19
  40e576:	gs xchg esp,eax
  40e578:	mov    ds:0xed7b623e,eax
  40e57d:	scas   eax,DWORD PTR es:[edi]
  40e57e:	inc    esi
  40e57f:	(bad)  
  40e580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e581:	mov    al,0x41
  40e583:	shl    DWORD PTR [esi-0x7d0f6257],cl
  40e589:	jg     0x40e59e
  40e58b:	cmp    al,al
  40e58d:	or     eax,0x69c122bb
  40e592:	xor    eax,0x2faf896e
  40e597:	shl    BYTE PTR [esi+0x68fd1393],0xb4
  40e59e:	add    DWORD PTR [eax-0x79],edx
  40e5a1:	sbb    esp,esp
  40e5a3:	mov    bh,ah
  40e5a5:	ds add eax,0xf2aa79d3
  40e5ab:	adc    bl,dl
  40e5ad:	and    BYTE PTR [edi+0x35],al
  40e5b0:	into   
  40e5b1:	or     dh,BYTE PTR [edi+0x20c382b8]
  40e5b7:	xchg   DWORD PTR [edx],edi
  40e5b9:	or     BYTE PTR [edx+0x6f0cb4ac],ah
  40e5bf:	or     esp,edi
  40e5c1:	mov    ebp,0x2cb541a0
  40e5c6:	leave  
  40e5c7:	pop    ecx
  40e5c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5c9:	mov    DWORD PTR [edi-0x78f5d397],ebp
  40e5cf:	addr16 mov esp,0xb6291339
  40e5d5:	retfw  
  40e5d7:	mov    ecx,0x66dde2b5
  40e5dc:	inc    esi
  40e5dd:	or     eax,0xa72a88fe
  40e5e2:	scas   eax,DWORD PTR es:[edi]
  40e5e3:	inc    edx
  40e5e4:	xchg   bh,bh
  40e5e6:	jno    0x40e5c5
  40e5e8:	push   esi
  40e5e9:	pop    edi
  40e5ea:	mov    edi,0xa367c29c
  40e5ef:	sbb    ah,BYTE PTR [ecx]
  40e5f1:	mov    esi,0xf5ca7069
  40e5f6:	rcl    DWORD PTR [edx+0x3c535aee],0x47
  40e5fd:	mov    edx,0x56ccea1f
  40e602:	mov    eax,ds:0xd8585983
  40e607:	sbb    DWORD PTR [edx-0x17c203eb],edi
  40e60d:	sub    ebp,DWORD PTR [edi+edi*4-0xe920358]
  40e614:	push   esi
  40e615:	mov    esp,0x9da38fcd
  40e61a:	(bad)  
  40e61b:	(bad)  
  40e61c:	jl     0x40e5e7
  40e61e:	pop    ebp
  40e61f:	mov    al,ds:0xee816cdd
  40e624:	inc    esi
  40e625:	adc    eax,0xccad8b79
  40e62a:	(bad)  
  40e62c:	push   0x3b03643a
  40e631:	rcr    DWORD PTR [ebp-0x42],cl
  40e634:	sbb    dh,0xc4
  40e637:	or     al,0x73
  40e639:	fild   WORD PTR ds:0xe52c96f0
  40e63f:	xchg   edi,eax
  40e640:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40e642:	inc    edx
  40e643:	lods   al,BYTE PTR ds:[esi]
  40e644:	js     0x40e5e0
  40e646:	jmp    0xf1a8:0x9b88a756
  40e64d:	jae    0x40e696
  40e64f:	xor    BYTE PTR [edi+ebp*1],0xd3
  40e653:	cmc    
  40e654:	loope  0x40e5dd
  40e656:	sub    BYTE PTR [ecx-0x7a0ac05e],0x16
  40e65d:	mov    eax,0x81204c3b
  40e662:	shl    BYTE PTR ss:[edx+ecx*1-0x26],1
  40e667:	add    al,0x46
  40e669:	sbb    ch,BYTE PTR [ebx-0x1a]
  40e66c:	data16 out dx,al
  40e66e:	and    edx,ecx
  40e670:	outs   dx,BYTE PTR ds:[esi]
  40e671:	push   eax
  40e672:	je     0x40e64a
  40e674:	jp     0x40e623
  40e676:	inc    ebx
  40e677:	mov    DWORD PTR [edi-0xe97ce0],ebx
  40e67d:	adc    dh,BYTE PTR [ebp-0x64]
  40e680:	cdq    
  40e681:	jbe    0x40e6f6
  40e683:	out    dx,eax
  40e684:	inc    ecx
  40e685:	(bad)  
  40e686:	jbe    0x40e623
  40e688:	or     ch,BYTE PTR ds:0x213000fb
  40e68e:	neg    BYTE PTR [edi+0x1c71eca3]
  40e694:	mov    al,0x82
  40e696:	dec    eax
  40e697:	ucomiss xmm2,xmm3
  40e69a:	cs aam 0xf7
  40e69d:	div    DWORD PTR [edx]
  40e69f:	sbb    DWORD PTR [ecx+0x8cd8076],edi
  40e6a5:	fcmove st,st(4)
  40e6a7:	repnz fwait
  40e6a9:	rcl    BYTE PTR [eax-0x6e401176],0x57
  40e6b0:	aaa    
  40e6b1:	lahf   
  40e6b2:	inc    edx
  40e6b3:	iret   
  40e6b4:	ds jmp 0x7c4a:0x87016bf3
  40e6bc:	xor    esi,DWORD PTR [ecx+0x5b37dcff]
  40e6c2:	inc    ebp
  40e6c3:	mov    ds:0x119d2ba5,al
  40e6c8:	pop    esi
  40e6c9:	ds push es
  40e6cb:	fbstp  TBYTE PTR ds:0x8c6a956c
  40e6d1:	fmul   QWORD PTR [ecx-0x1]
  40e6d4:	mov    bl,0xb5
  40e6d6:	scas   eax,DWORD PTR es:[edi]
  40e6d7:	out    dx,al
  40e6d8:	jae    0x40e661
  40e6da:	fcmove st,st(5)
  40e6dc:	neg    BYTE PTR [ebx+0x66087c0e]
  40e6e2:	pop    ebx
  40e6e3:	cmp    esp,edi
  40e6e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6e6:	pop    edx
  40e6e7:	sub    al,0x32
  40e6e9:	mov    eax,DWORD PTR [edx+0x64]
  40e6ec:	outs   dx,DWORD PTR ds:[esi]
  40e6ed:	ins    DWORD PTR es:[edi],dx
  40e6ee:	and    ah,cl
  40e6f0:	loope  0x40e6da
  40e6f2:	cmp    DWORD PTR [edx-0x313b32f],0x45
  40e6f9:	sub    DWORD PTR [esp+edi*1],edx
  40e6fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6fd:	push   ecx
  40e6fe:	xor    al,0x10
  40e700:	adc    eax,DWORD PTR [esi+0x7920906e]
  40e706:	cmc    
  40e707:	xor    eax,0x67eab269
  40e70c:	stos   DWORD PTR es:[edi],eax
  40e70d:	adc    eax,0x814c8976
  40e712:	push   esi
  40e713:	hlt    
  40e714:	stos   BYTE PTR es:[edi],al
  40e715:	fld    TBYTE PTR [esp+ecx*1+0x6a3e6fda]
  40e71c:	js     0x40e735
  40e71e:	inc    eax
  40e71f:	popa   
  40e720:	mov    dh,0xd6
  40e722:	adc    eax,0xda5b8bec
  40e727:	push   0x4dcec847
  40e72c:	jne    0x40e721
  40e72e:	mul    edx
  40e730:	not    edx
  40e732:	std    
  40e733:	les    ebp,FWORD PTR [esp+eax*1+0x2f]
  40e737:	std    
  40e738:	mov    ds:0x2b95443,al
  40e73d:	and    BYTE PTR ds:0xa9f51c87,al
  40e743:	xor    edx,DWORD PTR [esi]
  40e745:	ficomp WORD PTR [ebx+edi*4+0x70d52cc2]
  40e74c:	inc    esp
  40e74d:	in     eax,dx
  40e74e:	push   es
  40e74f:	push   DWORD PTR [edi+0x7234f64c]
  40e755:	arpl   di,bx
  40e757:	adc    BYTE PTR [ecx-0x3a1de908],bh
  40e75d:	mul    BYTE PTR [esi+0x67c1abf5]
  40e763:	call   0xff27:0xef9da743
  40e76a:	rcr    DWORD PTR [esp+edi*4-0x41a7c15a],0x49
  40e772:	jmp    0xf426db30
  40e777:	das    
  40e778:	retf   0x5ba9
  40e77b:	push   ebp
  40e77c:	push   ecx
  40e77d:	sub    BYTE PTR [edi],ch
  40e77f:	bound  ebx,QWORD PTR ds:0x3129ad4c
  40e785:	pop    eax
  40e786:	in     eax,dx
  40e787:	jl     0x40e7bf
  40e789:	cmp    DWORD PTR [ebx],ebx
  40e78b:	and    al,0x9f
  40e78d:	xchg   edx,eax
  40e78e:	jl     0x40e7c9
  40e790:	mov    dl,0x2c
  40e792:	test   DWORD PTR [ebp-0x3aefe996],ebp
  40e798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e799:	jecxz  0x40e7e3
  40e79b:	mov    ds:0x51ca2f42,al
  40e7a0:	fst    DWORD PTR [eax-0x7a]
  40e7a3:	mov    eax,DWORD PTR [eax]
  40e7a5:	push   edx
  40e7a6:	jae    0x40e729
  40e7a8:	mov    ebx,0x71e7af6f
  40e7ad:	out    0xff,al
  40e7af:	enter  0x18e7,0xf4
  40e7b3:	push   ecx
  40e7b4:	mov    esi,0x10dc316b
  40e7b9:	data16 mov ah,BYTE PTR [eax-0x2]
  40e7bd:	lds    ebp,FWORD PTR [ebx+esi*2-0x7ded5c69]
  40e7c4:	stos   DWORD PTR es:[edi],eax
  40e7c5:	jmp    0x40e815
  40e7c7:	in     eax,0x11
  40e7c9:	sbb    DWORD PTR [esi+0x489f0f34],esp
  40e7cf:	in     eax,dx
  40e7d0:	and    al,0x8a
  40e7d2:	add    al,0xd
  40e7d4:	xchg   edx,eax
  40e7d5:	jecxz  0x40e7fb
  40e7d7:	push   0x38
  40e7d9:	dec    esp
  40e7da:	cmp    esi,ebx
  40e7dc:	in     eax,dx
  40e7dd:	and    BYTE PTR [ebp-0x557a0f07],bh
  40e7e3:	mov    ah,0x8
  40e7e5:	sbb    esp,edi
  40e7e7:	out    dx,eax
  40e7e8:	shr    DWORD PTR [eax+0x1d],cl
  40e7eb:	inc    esi
  40e7ec:	aad    0xcf
  40e7ee:	sbb    edi,DWORD PTR [ecx-0x15]
  40e7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7f2:	xor    eax,0x767fa24a
  40e7f7:	ret    
  40e7f8:	and    DWORD PTR [edx-0x423fa1ad],esi
  40e7fe:	sub    eax,0xfb3c219f
  40e803:	test   BYTE PTR [ebx-0x1e],ch
  40e806:	fstp   QWORD PTR [ebp-0x22b3d638]
  40e80c:	ds inc eax
  40e80e:	and    DWORD PTR [ebx+0x6d],edi
  40e811:	ins    DWORD PTR es:[edi],dx
  40e812:	sar    BYTE PTR [ebx+0x79],0x26
  40e816:	ja     0x40e832
  40e818:	pop    ss
  40e819:	fwait
  40e81a:	and    dh,ch
  40e81c:	adc    esp,ebp
  40e81e:	xor    esp,DWORD PTR [esi]
  40e820:	mov    esp,0x1a491fbd
  40e825:	push   0xffffffc9
  40e827:	jne    0x40e89f
  40e829:	sbb    eax,0x9dee6fea
  40e82e:	adc    eax,0x7456175a
  40e833:	adc    eax,0x84051bb3
  40e838:	aaa    
  40e839:	jae    0x40e85a
  40e83b:	lock scas eax,DWORD PTR es:[edi]
  40e83d:	xor    ah,BYTE PTR [edi+0x13]
  40e840:	inc    esp
  40e841:	jg     0x40e858
  40e843:	add    eax,DWORD PTR [ebp+0x4e]
  40e846:	and    dh,BYTE PTR [edx]
  40e848:	fwait
  40e849:	xor    ecx,DWORD PTR [edi-0x4f]
  40e84c:	add    bl,BYTE PTR ds:0xa193d7f7
  40e852:	loop   0x40e8b5
  40e854:	test   eax,0xf32be921
  40e859:	or     esi,DWORD PTR [ebx]
  40e85b:	leave  
  40e85c:	mov    ch,0xd1
  40e85e:	std    
  40e85f:	(bad)  
  40e860:	shl    BYTE PTR [esi+0x1d8dee39],cl
  40e866:	fidivr DWORD PTR [edx-0x60]
  40e869:	addr16 (bad) 
  40e86b:	inc    eax
  40e86c:	ret    
  40e86d:	shl    DWORD PTR [esi+0x5b],cl
  40e870:	mov    ah,0xa7
  40e872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e873:	data16 adc BYTE PTR [ecx],al
  40e876:	cmp    eax,0x47dbd7e1
  40e87b:	mov    ebx,DWORD PTR [edi-0x1d0993c8]
  40e881:	ins    BYTE PTR es:[edi],dx
  40e882:	xchg   ebp,eax
  40e883:	inc    eax
  40e884:	shr    DWORD PTR [ecx+0x65],cl
  40e887:	push   ss
  40e888:	loopne 0x40e83c
  40e88a:	sbb    BYTE PTR [esi],bh
  40e88c:	dec    edi
  40e88d:	daa    
  40e88e:	js     0x40e88a
  40e890:	sub    al,0x76
  40e892:	out    dx,al
  40e893:	ficom  DWORD PTR [ecx+0x3d]
  40e896:	ins    DWORD PTR es:[edi],dx
  40e897:	call   0x430d7810
  40e89c:	xchg   DWORD PTR [esi-0x3],esp
  40e89f:	add    ch,cl
  40e8a1:	mov    ecx,0xa3d1f312
  40e8a6:	std    
  40e8a7:	push   eax
  40e8a8:	sbb    BYTE PTR [edi-0x47d023dc],0xb7
  40e8af:	mov    ss:0xc57d26c1,eax
  40e8b5:	and    esi,DWORD PTR [edi-0x46]
  40e8b8:	in     al,dx
  40e8b9:	lock sub BYTE PTR [eax],bh
  40e8bc:	lds    ebp,FWORD PTR [ebp-0x2a]
  40e8bf:	adc    al,cl
  40e8c1:	adc    BYTE PTR [eax-0x248d47cf],0x5d
  40e8c8:	mov    esi,0xa94d6fbb
  40e8cd:	mov    al,0xe3
  40e8cf:	mov    BYTE PTR [ecx],al
  40e8d1:	mov    edi,0xfa3993d3
  40e8d6:	adc    ebx,DWORD PTR [edi]
  40e8d8:	xor    al,0xaa
  40e8da:	call   0x8dda059e
  40e8df:	pop    eax
  40e8e0:	mov    edi,0x400362b7
  40e8e5:	pop    esp
  40e8e6:	push   edx
  40e8e7:	jno    0x40e889
  40e8e9:	fnstsw WORD PTR [ecx-0x68]
  40e8ec:	out    0xe9,al
  40e8ee:	mov    edi,edx
  40e8f0:	dec    edi
  40e8f1:	pop    ebx
  40e8f2:	dec    ebp
  40e8f3:	jo     0x40e909
  40e8f5:	popa   
  40e8f6:	inc    edi
  40e8f7:	cmp    esp,DWORD PTR ds:0xe4ba3e61
  40e8fd:	pop    edi
  40e8fe:	gs test al,0x5d
  40e901:	out    dx,al
  40e902:	leave  
  40e903:	ror    DWORD PTR [ecx-0x7e],cl
  40e906:	mov    al,0x30
  40e908:	int    0x6f
  40e90a:	sahf   
  40e90b:	(bad)  
  40e90c:	out    dx,eax
  40e90d:	pusha  
  40e90e:	cwde   
  40e90f:	lods   al,BYTE PTR ds:[esi]
  40e910:	add    ebx,DWORD PTR ds:0x6eec32ee
  40e916:	cdq    
  40e917:	mov    ebx,0xd3c7f81d
  40e91c:	cmp    eax,0x3e3989aa
  40e921:	sbb    al,0x40
  40e923:	dec    ebx
  40e924:	stos   DWORD PTR es:[edi],eax
  40e925:	dec    edi
  40e926:	add    eax,0xd9fb377b
  40e92b:	call   0x1e5a:0x4b92c33f
  40e932:	aaa    
  40e933:	in     eax,dx
  40e934:	add    ebx,DWORD PTR [esi+ebx*8+0x1a]
  40e938:	arpl   WORD PTR [edi+0xf],dx
  40e93b:	pop    ecx
  40e93c:	and    eax,0x3af19775
  40e941:	stos   DWORD PTR es:[edi],eax
  40e942:	push   cs
  40e943:	clc    
  40e944:	enter  0xefbd,0xb6
  40e948:	rcr    edi,cl
  40e94a:	test   DWORD PTR [ebx+0x1c2601a8],edx
  40e950:	pop    esi
  40e951:	pop    eax
  40e952:	ins    BYTE PTR es:[edi],dx
  40e953:	or     al,0x12
  40e955:	imul   DWORD PTR [ebx-0x1]
  40e958:	mul    DWORD PTR [ebx+0x2d]
  40e95b:	or     eax,0x8fd8ace4
  40e960:	xchg   cl,dl
  40e962:	jnp    0x40e953
  40e964:	stos   BYTE PTR es:[edi],al
  40e965:	add    DWORD PTR [ecx-0x51c2aafd],esp
  40e96b:	sti    
  40e96c:	(bad)  
  40e96d:	lock pushf 
  40e96f:	and    dh,BYTE PTR [ebp-0x541aaf28]
  40e975:	out    dx,al
  40e976:	xor    BYTE PTR [ecx-0x7b],0xf6
  40e97a:	jecxz  0x40e9b2
  40e97c:	stos   BYTE PTR es:[edi],al
  40e97d:	jl     0x40e976
  40e97f:	mov    al,0x6e
  40e981:	repnz mov eax,ds:0xb7ff0d4d
  40e987:	imul   ebx,DWORD PTR [edx+eiz*8+0x79],0x74
  40e98c:	test   DWORD PTR [edi-0x3c],esi
  40e98f:	dec    edx
  40e990:	push   cs
  40e991:	aam    0x20
  40e993:	push   0x9426e7c
  40e998:	xchg   al,bl
  40e99a:	sbb    esp,ebx
  40e99c:	aas    
  40e99d:	test   eax,0x2457b694
  40e9a2:	cld    
  40e9a3:	xor    al,0xc6
  40e9a5:	cdq    
  40e9a6:	sti    
  40e9a7:	cs scas eax,DWORD PTR es:[edi]
  40e9a9:	add    dh,BYTE PTR [edx-0x34]
  40e9ac:	sbb    edx,DWORD PTR [ebp+0x57b08a34]
  40e9b2:	popa   
  40e9b3:	(bad)  
  40e9b4:	dec    esp
  40e9b5:	mov    cl,0xd3
  40e9b7:	and    esp,edx
  40e9b9:	push   ss
  40e9ba:	(bad)  
  40e9bb:	sti    
  40e9bc:	pushf  
  40e9bd:	jge    0x40e9e8
  40e9bf:	pop    ecx
  40e9c0:	mov    bh,0xc6
  40e9c2:	add    bl,BYTE PTR [ebp+0x224cc110]
  40e9c8:	push   0xfffffff1
  40e9ca:	ror    ah,0xbb
  40e9cd:	outs   dx,WORD PTR ds:[esi]
  40e9cf:	jnp    0x40e9fa
  40e9d1:	sbb    BYTE PTR [eax+0x41],cl
  40e9d4:	xlat   BYTE PTR ds:[ebx]
  40e9d5:	mov    cl,0xb3
  40e9d7:	rcl    esp,0xa7
  40e9da:	test   BYTE PTR [eax+0x760cdd8f],bh
  40e9e0:	iret   
  40e9e1:	scas   al,BYTE PTR es:[edi]
  40e9e2:	xor    eax,0xebc275cc
  40e9e7:	push   0xc86d23ab
  40e9ec:	test   DWORD PTR [ecx+0x1ade779f],ebp
  40e9f2:	fnstsw WORD PTR [ebp+0x6d3cbee7]
  40e9f8:	mov    eax,0xf9d76095
  40e9fd:	jmp    0xfe9c66a1
  40ea02:	call   0x9e26:0xc8053935
  40ea09:	lds    ebp,FWORD PTR [edi]
  40ea0b:	xchg   DWORD PTR [esp+edi*2-0x42d2f33a],esp
  40ea12:	pop    esp
  40ea13:	sub    DWORD PTR [ebx-0x48],esp
  40ea16:	push   cs
  40ea17:	fucom  st(4)
  40ea19:	mul    esi
  40ea1b:	pop    edi
  40ea1c:	dec    edi
  40ea1d:	sub    ebx,edx
  40ea1f:	es adc eax,0xa4141008
  40ea25:	daa    
  40ea26:	xlat   BYTE PTR ds:[ebx]
  40ea27:	clc    
  40ea28:	push   esi
  40ea29:	or     BYTE PTR [ebx-0x7a9f7eaa],bl
  40ea2f:	js     0x40ea89
  40ea31:	mov    cl,0x4
  40ea33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea34:	sub    DWORD PTR [eax-0x3cf99a5d],ecx
  40ea3a:	out    dx,al
  40ea3b:	push   edx
  40ea3c:	shl    BYTE PTR [esi+0x7b],0xd2
  40ea40:	inc    ebx
  40ea41:	(bad)  
  40ea42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea43:	jbe    0x40e9f7
  40ea45:	ja     0x40ea63
  40ea47:	stc    
  40ea48:	dec    eax
  40ea49:	xor    eax,DWORD PTR [ebx+ecx*8]
  40ea4c:	inc    esp
  40ea4d:	push   0x4dbda1f9
  40ea52:	xor    eax,0xdaccdc13
  40ea57:	je     0x40ea36
  40ea59:	xor    BYTE PTR [eax],cl
  40ea5b:	out    dx,al
  40ea5c:	sub    DWORD PTR [eax+edx*2-0x70e52ba5],ecx
  40ea63:	or     BYTE PTR [ebx],ch
  40ea65:	push   0x309df2d0
  40ea6a:	aad    0x39
  40ea6c:	push   es
  40ea6d:	cmp    al,0x6a
  40ea6f:	in     al,dx
  40ea70:	enter  0x3341,0xe3
  40ea74:	daa    
  40ea75:	mov    edi,0xe81aa8d8
  40ea7a:	(bad)  
  40ea7b:	fist   WORD PTR [ecx]
  40ea7d:	js     0x40eab5
  40ea7f:	ret    
  40ea80:	les    ebp,FWORD PTR [ebp+0x78bb6530]
  40ea86:	jno    0x40eab3
  40ea88:	cmp    ch,BYTE PTR [edx-0xb1171cd]
  40ea8e:	loope  0x40ea2f
  40ea90:	or     al,0xa4
  40ea92:	sub    eax,0x362f21df
  40ea97:	retf   
  40ea98:	in     eax,dx
  40ea99:	cwde   
  40ea9a:	nop
  40ea9b:	add    BYTE PTR [esi+ebp*2+0x17],0x5e
  40eaa0:	cwde   
  40eaa1:	xchg   edx,eax
  40eaa2:	cmp    bh,BYTE PTR [ebx-0x4dbbcbaf]
  40eaa8:	addr16 and edi,ebp
  40eaab:	fwait
  40eaac:	pop    ds
  40eaad:	push   cs
  40eaae:	fs fdivrp st(2),st
  40eab1:	xlat   BYTE PTR ds:[ebx]
  40eab2:	(bad)
  40eab7:	push   ecx
  40eab8:	jmp    0x40eadb
  40eaba:	(bad)  
  40eabb:	push   edi
  40eabc:	std    
  40eabd:	and    al,0x40
  40eabf:	sub    BYTE PTR [ebx+0x7274dc47],ch
  40eac5:	add    DWORD PTR [ecx-0x6e],eax
  40eac8:	adc    al,0x6b
  40eaca:	retf   
  40eacb:	test   eax,0xa12076dd
  40ead0:	js     0x40ea53
  40ead2:	adc    eax,0x21134357
  40ead7:	scas   al,BYTE PTR es:[edi]
  40ead8:	dec    edi
  40ead9:	jmp    esp
  40eadb:	(bad)  
  40eadc:	std    
  40eadd:	dec    ebx
  40eade:	ret    
  40eadf:	mov    DWORD PTR [ecx],edx
  40eae1:	popf   
  40eae2:	std    
  40eae3:	fldenv [esi+ebp*4-0x48]
  40eae7:	or     DWORD PTR [edx],edi
  40eae9:	mov    dh,0x28
  40eaeb:	mov    edx,0x4b3a85fc
  40eaf0:	jl     0x40ea77
  40eaf2:	mov    al,ds:0x279598b0
  40eaf7:	ret    
  40eaf8:	mov    dl,0x89
  40eafa:	imul   ebx,DWORD PTR [edx],0xa2a060b2
  40eb00:	mov    ds:0xe095c59f,eax
  40eb05:	loope  0x40eaa2
  40eb07:	repnz sub DWORD PTR [ebx],ecx
  40eb0a:	fwait
  40eb0b:	or     dl,BYTE PTR [ebx-0x46]
  40eb0e:	dec    esp
  40eb0f:	aad    0xbe
  40eb11:	js     0x40eaea
  40eb13:	cwde   
  40eb14:	outs   dx,BYTE PTR ds:[esi]
  40eb15:	shl    ebp,cl
  40eb17:	fisub  DWORD PTR [edi+ebx*8+0x11]
  40eb1b:	out    0x27,al
  40eb1d:	push   ds
  40eb1e:	mov    ebx,0xd70d3ba0
  40eb23:	bound  ebp,QWORD PTR [esp+edx*4-0x7c]
  40eb27:	loop   0x40eb7b
  40eb29:	push   ds
  40eb2a:	(bad)  
  40eb2b:	mov    ah,0xfc
  40eb2d:	jne    0x40eb6b
  40eb2f:	(bad)  [edx+0x48]
  40eb32:	dec    DWORD PTR [eax-0x2367a530]
  40eb38:	fcmovnu st,st(1)
  40eb3a:	xor    al,0x5
  40eb3c:	mov    eax,0x5eb69e6e
  40eb41:	cdq    
  40eb42:	daa    
  40eb43:	js     0x40eb0f
  40eb45:	cmp    BYTE PTR [ecx-0x52],cl
  40eb48:	fcomi  st,st(7)
  40eb4a:	(bad)  
  40eb4b:	jp     0x40eb8b
  40eb4d:	mov    al,ds:0xae9d31b
  40eb52:	mov    dl,0xdd
  40eb54:	mov    edx,0xb65affae
  40eb59:	leave  
  40eb5a:	pop    ds
  40eb5b:	out    0x93,eax
  40eb5d:	in     eax,0xd9
  40eb5f:	mov    cl,0x54
  40eb61:	ja     0x40eb04
  40eb63:	add    esi,DWORD PTR [eax+eiz*4+0x65]
  40eb67:	ins    BYTE PTR es:[edi],dx
  40eb68:	adc    edx,DWORD PTR [ebp-0x19e12516]
  40eb6e:	out    dx,al
  40eb6f:	push   ebx
  40eb70:	fld    QWORD PTR [ecx]
  40eb72:	and    ebx,DWORD PTR [esi]
  40eb74:	sbb    BYTE PTR [esi],cl
  40eb76:	jae    0x40eb38
  40eb78:	scas   eax,DWORD PTR es:[edi]
  40eb79:	dec    edx
  40eb7a:	mov    al,0x3f
  40eb7c:	lock aad 0x53
  40eb7f:	dec    ecx
  40eb80:	sub    dl,BYTE PTR [edx+0x3b63ff1]
  40eb86:	push   cs
  40eb87:	scas   al,BYTE PTR es:[edi]
  40eb88:	inc    esp
  40eb89:	pop    ss
  40eb8a:	add    bh,ah
  40eb8c:	sbb    al,0x57
  40eb8e:	fs int3 
  40eb90:	dec    ebx
  40eb91:	test   esp,esi
  40eb93:	imul   esi,edx,0xffffffc5
  40eb96:	jns    0x40eb9f
  40eb98:	lock int 0xdc
  40eb9b:	or     eax,0x3818e7e7
  40eba0:	pop    ss
  40eba1:	jae    0x40ec0b
  40eba3:	sahf   
  40eba4:	sti    
  40eba5:	(bad)  
  40eba6:	idiv   edi
  40eba8:	cmp    al,0x8e
  40ebaa:	scas   eax,DWORD PTR es:[edi]
  40ebab:	and    al,0x25
  40ebad:	mov    ds:0x38b1482d,eax
  40ebb2:	inc    eax
  40ebb3:	jge    0x40eb9a
  40ebb5:	pop    ss
  40ebb6:	xor    DWORD PTR [esi+0x10543bb6],edi
  40ebbc:	test   al,0x92
  40ebbe:	cwde   
  40ebbf:	dec    esi
  40ebc0:	imul   ecx,ebp,0xb7bd9b56
  40ebc6:	cmp    DWORD PTR [edx+edi*2],0x46
  40ebca:	push   es
  40ebcb:	inc    esp
  40ebcc:	scas   eax,DWORD PTR es:[edi]
  40ebcd:	out    0x85,al
  40ebcf:	je     0x40eb99
  40ebd1:	jns    0x40ebf2
  40ebd3:	hlt    
  40ebd4:	leave  
  40ebd5:	repz add eax,0x3e9f4f17
  40ebdb:	cmp    BYTE PTR [ebp+0x58],bl
  40ebde:	or     esp,esp
  40ebe0:	sbb    al,0x1c
  40ebe2:	fdiv   QWORD PTR [esi]
  40ebe4:	(bad)  
  40ebe5:	out    dx,eax
  40ebe6:	sbb    eax,0xa8ccefc7
  40ebeb:	sbb    WORD PTR [ecx-0x62],0xe68f
  40ebf1:	mov    al,ds:0x9d0e184b
  40ebf6:	or     BYTE PTR [eax],dh
  40ebf8:	jne    0x40eba6
  40ebfa:	(bad)  
  40ebfb:	xchg   ecx,eax
  40ebfc:	sub    BYTE PTR [edx+0x6b],cl
  40ebff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec00:	mov    dl,0xcb
  40ec02:	in     eax,dx
  40ec03:	xchg   esp,eax
  40ec04:	fidivr DWORD PTR [edi]
  40ec06:	outs   dx,DWORD PTR ds:[esi]
  40ec07:	aaa    
  40ec08:	pop    eax
  40ec09:	mov    ds:0xbc2980a1,eax
  40ec0e:	nop
  40ec0f:	add    BYTE PTR [eax-0x7a],bh
  40ec12:	jecxz  0x40ec73
  40ec14:	in     eax,dx
  40ec15:	inc    ecx
  40ec16:	jmp    0x87e:0x48b842fc
  40ec1d:	mov    WORD PTR [esi-0x42],fs
  40ec20:	test   BYTE PTR [edi-0x1ca89808],cl
  40ec26:	mov    eax,ds:0x981a8623
  40ec2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec2c:	sbb    edx,DWORD PTR [eax-0x4efeaef6]
  40ec32:	dec    edi
  40ec33:	in     eax,0x3a
  40ec35:	outs   dx,BYTE PTR ds:[esi]
  40ec36:	sbb    eax,ebx
  40ec38:	jle    0x40ec91
  40ec3a:	xor    edx,DWORD PTR [edx-0x39]
  40ec3d:	mov    dl,al
  40ec3f:	mov    WORD PTR [edi-0x3d],cs
  40ec42:	jmp    0x40ec12
  40ec44:	leave  
  40ec45:	and    al,0xfc
  40ec47:	(bad)  
  40ec48:	jg     0x40ecc3
  40ec4a:	retf   
  40ec4b:	out    dx,eax
  40ec4c:	xchg   ebp,eax
  40ec4d:	pop    es
  40ec4e:	lods   al,BYTE PTR ds:[esi]
  40ec4f:	jmp    0x1df41a3e
  40ec54:	gs jmp 0x3f40c363
  40ec5a:	jmp    0x40ecc7
  40ec5c:	ins    BYTE PTR es:[edi],dx
  40ec5d:	xchg   ebp,eax
  40ec5e:	mov    ebp,0x7bc10f62
  40ec63:	into   
  40ec64:	mov    WORD PTR [eax],ss
  40ec66:	xchg   esi,eax
  40ec67:	cmp    dh,BYTE PTR [ecx-0x73cd0b52]
  40ec6d:	ss mov cl,0xbc
  40ec70:	mov    ebx,0x7c62a4fd
  40ec75:	adc    edx,DWORD PTR [edx]
  40ec77:	xchg   esp,eax
  40ec78:	sbb    DWORD PTR [ebp-0x1e0fdcb3],eax
  40ec7e:	imul   ebx,DWORD PTR [eax+eax*2-0x38],0x435acf4a
  40ec86:	ss gs pusha 
  40ec89:	bnd jbe 0x40ec80
  40ec8c:	imul   edi,DWORD PTR [ebp+0x4f4ee21d],0x4a19a039
  40ec96:	sub    BYTE PTR [eax+0x59],bl
  40ec99:	ja     0x40ecd3
  40ec9b:	xchg   ebp,eax
  40ec9c:	stos   BYTE PTR es:[edi],al
  40ec9d:	fstp   DWORD PTR [di-0xa1]
  40eca2:	push   ds
  40eca3:	js     0x40ec6f
  40eca5:	shr    DWORD PTR gs:[esi-0x46],cl
  40eca9:	out    dx,eax
  40ecaa:	push   ss
  40ecab:	hlt    
  40ecac:	sti    
  40ecad:	inc    eax
  40ecae:	dec    ebp
  40ecaf:	inc    ebp
  40ecb0:	xor    al,0x4a
  40ecb2:	in     eax,0xf4
  40ecb4:	into   
  40ecb5:	dec    eax
  40ecb6:	(bad)  
  40ecb7:	and    eax,DWORD PTR [eax]
  40ecb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecba:	dec    ecx
  40ecbb:	pop    ecx
  40ecbc:	inc    ecx
  40ecbd:	out    dx,al
  40ecbe:	lds    esi,FWORD PTR [edi+0x6]
  40ecc1:	in     eax,0xd5
  40ecc3:	out    0x39,al
  40ecc5:	xchg   ecx,eax
  40ecc6:	outs   dx,DWORD PTR ds:[esi]
  40ecc7:	xchg   esp,eax
  40ecc8:	shl    DWORD PTR [edx],0xef
  40eccb:	aam    0x39
  40eccd:	dec    eax
  40ecce:	and    ebp,0x7ed5a1c8
  40ecd4:	retf   0x900d
  40ecd7:	pop    esi
  40ecd8:	push   esp
  40ecd9:	xchg   ebx,ebp
  40ecdb:	inc    ecx
  40ecdc:	inc    esi
  40ecdd:	jne    0x40ec77
  40ecdf:	push   ebp
  40ece0:	add    DWORD PTR [eax],edx
  40ece2:	out    dx,al
  40ece3:	and    al,0xe
  40ece5:	ret    0xe5ec
  40ece8:	fs imul eax,edi,0xffffff97
  40ecec:	sar    BYTE PTR [ebx-0x2f],1
  40ecef:	ds icebp 
  40ecf1:	xor    BYTE PTR [ebx-0x62],cl
  40ecf4:	jno    0x40ecb5
  40ecf6:	hlt    
  40ecf7:	fscale 
  40ecf9:	fdivr  st(5),st
  40ecfb:	lahf   
  40ecfc:	fistp  QWORD PTR [ebp+eax*8-0x74]
  40ed00:	or     ah,dh
  40ed02:	out    0x7e,eax
  40ed04:	nop
  40ed05:	adc    ebp,edi
  40ed07:	add    eax,0xb16a08b5
  40ed0c:	and    eax,0x283a1883
  40ed11:	jmp    0x40ece5
  40ed13:	dec    sp
  40ed15:	adc    ah,BYTE PTR [eax]
  40ed17:	nop
  40ed18:	aad    0x38
  40ed1a:	or     ebx,DWORD PTR [ecx-0x59]
  40ed1d:	xchg   ecx,eax
  40ed1e:	cmp    BYTE PTR [ebp+eiz*8+0x1d0fd4d8],0x85
  40ed26:	pop    ss
  40ed27:	rcl    edi,cl
  40ed29:	push   ebp
  40ed2a:	dec    esp
  40ed2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed2c:	arpl   WORD PTR [edi-0x61f5f875],sp
  40ed32:	imul   ebx,DWORD PTR [ecx],0x4a50b59b
  40ed38:	xor    BYTE PTR [esi+0x4c],al
  40ed3b:	cwde   
  40ed3c:	retf   
  40ed3d:	test   eax,0x1996e4a3
  40ed42:	push   esp
  40ed43:	repnz imul edx,DWORD PTR [eax],0xffffff8e
  40ed47:	push   ebx
  40ed48:	idiv   BYTE PTR [ebp+0xf]
  40ed4b:	int    0x32
  40ed4d:	icebp  
  40ed4e:	shr    BYTE PTR ss:[ebp+edi*8+0x5e],0x6c
  40ed54:	cmp    ch,ch
  40ed56:	sub    DWORD PTR [esi+0x31dc4e9e],esp
  40ed5c:	out    0x9c,al
  40ed5e:	dec    edi
  40ed5f:	int3   
  40ed60:	inc    esi
  40ed61:	adc    eax,0x7560eab3
  40ed66:	xor    al,BYTE PTR [ecx]
  40ed68:	clc    
  40ed69:	add    edx,edx
  40ed6b:	leave  
  40ed6c:	cmp    edx,DWORD PTR [ebx-0x4e]
  40ed6f:	xchg   esi,eax
  40ed70:	or     cl,ch
  40ed72:	popa   
  40ed73:	repz loopne 0x40ede2
  40ed76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed77:	sbb    BYTE PTR [edx-0x60b6d3b9],ch
  40ed7d:	pushf  
  40ed7e:	or     al,0x9f
  40ed80:	ret    
  40ed81:	jg     0x40edce
  40ed83:	nop
  40ed84:	ret    
  40ed85:	aam    0x3b
  40ed87:	retf   0x16dc
  40ed8a:	nop
  40ed8b:	retf   
  40ed8c:	xor    dl,BYTE PTR [ebx-0xb]
  40ed8f:	xor    DWORD PTR [ecx+0x3e],0xffffff93
  40ed93:	mov    al,ds:0xc443d513
  40ed98:	inc    edx
  40ed99:	in     eax,dx
  40ed9a:	aaa    
  40ed9b:	add    esp,DWORD PTR ds:0xfdbb9604
  40eda1:	add    BYTE PTR [eax+eiz*2],0x24
  40eda5:	push   ecx
  40eda6:	mov    cl,0x17
  40eda8:	cmp    al,0x38
  40edaa:	dec    ebx
  40edab:	fst    DWORD PTR [ebx+0x64]
  40edae:	sbb    BYTE PTR [ecx+0x2af397f],cl
  40edb4:	retf   0x85a9
  40edb7:	mov    ds:0xf09b3d36,eax
  40edbc:	sub    esp,DWORD PTR ds:0xb91144a
  40edc2:	test   eax,0x5fb2e798
  40edc7:	in     eax,0xe8
  40edc9:	daa    
  40edca:	aaa    
  40edcb:	or     al,0x3b
  40edcd:	test   eax,0xcb19564a
  40edd2:	test   eax,0xf55a4d18
  40edd7:	inc    eax
  40edd8:	sbb    BYTE PTR [edx+0x31],bl
  40eddb:	cmp    al,0x62
  40eddd:	dec    ebp
  40edde:	cmp    DWORD PTR [edx+eiz*2-0x68],0xffffffed
  40ede3:	mov    dl,0xe8
  40ede5:	mov    edx,0x44cca999
  40edea:	test   edi,ebp
  40edec:	xor    edx,DWORD PTR [edx]
  40edee:	je     0x40ed7f
  40edf0:	ja     0x40ee1c
  40edf2:	sbb    eax,0xdaf2e387
  40edf7:	xor    edi,edx
  40edf9:	cmp    al,0x43
  40edfb:	fucomip st,st(0)
  40edfd:	shl    BYTE PTR [ecx+0x14],1
  40ee00:	and    eax,0x1722f51c
  40ee05:	push   0x46
  40ee07:	jecxz  0x40edd2
  40ee09:	out    dx,al
  40ee0a:	inc    ebx
  40ee0b:	xor    al,0x78
  40ee0d:	sbb    cl,BYTE PTR [esi]
  40ee0f:	mov    ebp,0xb8dccc5
  40ee14:	imul   DWORD PTR [ebp-0x41483836]
  40ee1a:	push   esi
  40ee1b:	sbb    al,0x4d
  40ee1d:	les    edx,FWORD PTR [edx+0x80102f3]
  40ee23:	dec    ebp
  40ee24:	xchg   ecx,eax
  40ee25:	jp     0x40ee29
  40ee27:	and    DWORD PTR [edi-0x46],esi
  40ee2a:	loope  0x40ee02
  40ee2c:	and    eax,0xe326e527
  40ee31:	jnp    0x40edd4
  40ee33:	out    dx,eax
  40ee34:	push   ss
  40ee35:	loope  0x40ee81
  40ee37:	loope  0x40edfd
  40ee39:	jns    0x40eeaf
  40ee3b:	repz xchg ebp,eax
  40ee3d:	sub    DWORD PTR [edx+0x646e1a20],edx
  40ee43:	jbe    0x40ee50
  40ee45:	inc    esp
  40ee46:	or     bl,ah
  40ee48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee49:	push   ebp
  40ee4a:	lea    edx,[edi+0x42]
  40ee4d:	(bad)  
  40ee4f:	pop    DWORD PTR [eax-0x66]
  40ee52:	and    eax,0x59972b1c
  40ee57:	add    al,0x26
  40ee59:	xchg   esi,eax
  40ee5a:	in     al,dx
  40ee5b:	icebp  
  40ee5c:	sub    al,0x17
  40ee5e:	adc    eax,0xb667361d
  40ee63:	pop    esi
  40ee64:	dec    esi
  40ee65:	sar    BYTE PTR [edx-0xcf6cc1b],0xbd
  40ee6c:	push   edx
  40ee6d:	popf   
  40ee6e:	fs dec esi
  40ee70:	jg     0x40ee6a
  40ee72:	retf   0x3b44
  40ee75:	in     eax,0xf3
  40ee77:	mov    BYTE PTR [ecx+eiz*4-0x1f],dl
  40ee7b:	add    DWORD PTR [eiz*2+0xbc82230],edx
  40ee82:	push   edi
  40ee83:	repz pop gs
  40ee86:	mov    DWORD PTR [ebp-0x546ead46],ebp
  40ee8c:	fld    TBYTE PTR [ecx-0x27]
  40ee8f:	(bad)  
  40ee90:	cmp    BYTE PTR [ebp+0x14],dl
  40ee93:	aas    
  40ee94:	cmp    BYTE PTR [edi+eax*8],ah
  40ee97:	das    
  40ee98:	inc    esi
  40ee99:	adc    eax,DWORD PTR [eax-0x3ad54f4d]
  40ee9f:	clc    
  40eea0:	mov    bh,BYTE PTR [edx+0x71]
  40eea3:	sub    BYTE PTR [edi+0xa],bh
  40eea6:	mov    BYTE PTR [ebp+0x740d36be],ch
  40eeac:	mul    dh
  40eeae:	or     BYTE PTR [eax+0x3693eaa],al
  40eeb4:	ror    DWORD PTR [eax+0x3f],1
  40eeb7:	leave  
  40eeb8:	std    
  40eeb9:	test   al,0xa
  40eebb:	test   DWORD PTR [ebx-0x6],ecx
  40eebe:	ret    0xf3aa
  40eec1:	ja     0x40ef2c
  40eec3:	test   eax,0x64e4f54c
  40eec8:	out    0x69,al
  40eeca:	mov    dh,BYTE PTR [edi+ebx*4+0x33b75292]
  40eed1:	sar    edi,1
  40eed3:	mov    ds:0x538824a3,eax
  40eed8:	les    ebx,FWORD PTR [edi-0x3e1440f]
  40eede:	cli    
  40eedf:	in     al,dx
  40eee0:	jecxz  0x40ef17
  40eee2:	add    BYTE PTR [ecx+0x3d],dh
  40eee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eee6:	mov    ss,edx
  40eee8:	mov    ds:0xbe43ed43,eax
  40eeed:	inc    ebp
  40eeee:	stos   DWORD PTR es:[edi],eax
  40eeef:	add    eax,DWORD PTR [edi+esi*1]
  40eef2:	add    edi,DWORD PTR [esi-0x39ab278e]
  40eef8:	or     esp,DWORD PTR ds:0x430e19ae
  40eefe:	sub    eax,0xbf9013f7
  40ef03:	loop   0x40eebf
  40ef05:	call   0x36aabc12
  40ef0a:	mov    ds:0x7a17ffa0,al
  40ef0f:	and    BYTE PTR [edx],0xd2
  40ef12:	aad    0x48
  40ef14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef15:	lahf   
  40ef16:	enter  0x99a8,0x36
  40ef1a:	(bad)  
  40ef1b:	in     al,0x16
  40ef1d:	dec    ecx
  40ef1e:	xor    esi,esi
  40ef20:	(bad)  
  40ef21:	xchg   BYTE PTR [esi],al
  40ef23:	scas   eax,DWORD PTR es:[edi]
  40ef24:	int3   
  40ef25:	hlt    
  40ef26:	push   es
  40ef27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef28:	sub    al,0x7c
  40ef2a:	addr16 jmp 0xffe79ca0
  40ef30:	rcl    ebp,cl
  40ef32:	or     DWORD PTR [eax],esi
  40ef34:	addr16 out 0xef,al
  40ef37:	fisttp DWORD PTR ss:[ebx+ebx*2]
  40ef3b:	div    edx
  40ef3d:	mov    edx,0xce887d60
  40ef42:	xlat   BYTE PTR ds:[ebx]
  40ef43:	test   BYTE PTR [edx],0x5b
  40ef46:	bound  ecx,QWORD PTR [eax]
  40ef48:	icebp  
  40ef49:	popa   
  40ef4a:	push   esp
  40ef4b:	pop    ebp
  40ef4c:	not    eax
  40ef4e:	mov    edi,0xa4931f2d
  40ef53:	ss sbb al,0x2a
  40ef56:	xchg   ebx,eax
  40ef57:	push   edx
  40ef58:	data16 jnp 0x40ef49
  40ef5b:	xchg   BYTE PTR [edx-0x2],bh
  40ef5e:	sub    eax,0xf43b440d
  40ef63:	xchg   edx,eax
  40ef64:	cmp    eax,0xf836c85b
  40ef69:	jle    0x40ef5f
  40ef6b:	xchg   DWORD PTR [edx],ebp
  40ef6d:	cmp    BYTE PTR ds:0x290a7b6c,al
  40ef73:	sub    BYTE PTR ds:0x25bd926e,dl
  40ef79:	jl     0x40ef63
  40ef7b:	test   ax,0x868a
  40ef7f:	sbb    BYTE PTR [edx],ah
  40ef81:	cmp    ecx,esi
  40ef83:	rcr    BYTE PTR [esi-0x64],1
  40ef86:	cdq    
  40ef87:	lea    ebx,[edx+esi*4]
  40ef8a:	inc    ebx
  40ef8b:	mov    dh,0xc4
  40ef8d:	or     eax,0x3597c5f
  40ef92:	loop   0x40f005
  40ef94:	(bad)  [ecx-0x89eff7c]
  40ef9a:	pop    ebp
  40ef9b:	pshufw mm0,QWORD PTR [edi],0xd4
  40ef9f:	jo     0x40f017
  40efa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efa2:	cmp    BYTE PTR [eax],bl
  40efa4:	pop    edx
  40efa5:	aaa    
  40efa6:	cmp    eax,edi
  40efa8:	xchg   edi,eax
  40efa9:	mov    bh,0x12
  40efab:	push   ecx
  40efac:	in     eax,0xc3
  40efae:	popa   
  40efaf:	inc    esi
  40efb0:	clc    
  40efb1:	mov    ecx,DWORD PTR [edx+0x2581ff45]
  40efb7:	sbb    BYTE PTR [eax+0x42],dl
  40efbd:	add    BYTE PTR [eax],al
  40efbf:	xor    ecx,ecx
  40efc1:	or     ecx,DWORD PTR ds:0x429018
  40efc7:	inc    ecx
  40efc8:	mov    DWORD PTR ds:0x429018,ecx
  40efce:	cmp    DWORD PTR ds:0x429018,0xa
  40efd5:	jne    0x40efe1
  40efdb:	call   DWORD PTR ds:0x42e9b3
  40efe1:	cmp    DWORD PTR ds:0x429018,0x9
  40efe8:	jne    0x40effb
  40efee:	mov    ecx,DWORD PTR ds:0x429018
  40eff4:	inc    ecx
  40eff5:	mov    DWORD PTR ds:0x429018,ecx
  40effb:	cmp    DWORD PTR ds:0x429018,0x1e
  40f002:	jb     0x40efbf
  40f008:	sub    DWORD PTR ds:0x42c014,ecx
  40f00e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f011:	xor    al,0x73
  40f013:	sub    al,0x9
  40f015:	mov    DWORD PTR ds:0x42b000,0xef4
  40f01f:	mov    BYTE PTR [ecx],al
  40f021:	and    DWORD PTR ds:0x42b01c,0x42a004
  40f02b:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f032:	sbb    DWORD PTR ds:0x429024,0xfd3
  40f03c:	push   ebx
  40f03d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f044:	mov    ecx,DWORD PTR [ebp-0x18]
  40f047:	xor    eax,0x6376
  40f04c:	push   esi
  40f04d:	and    DWORD PTR ds:0x42c01c,0x0
  40f057:	jmp    0x40f06a
  40f05c:	xor    eax,eax
  40f05e:	add    eax,DWORD PTR ds:0x42c01c
  40f064:	inc    eax
  40f065:	mov    ds:0x42c01c,eax
  40f06a:	cmp    DWORD PTR ds:0x42c01c,0x16
  40f071:	jae    0x40f0bd
  40f077:	cmp    DWORD PTR ds:0x42c01c,0x4
  40f07e:	jne    0x40f0a0
  40f084:	push   DWORD PTR [ebp-0x24]
  40f087:	push   0x42901c
  40f08c:	push   DWORD PTR [ebp-0x18]
  40f08f:	push   DWORD PTR [ebp-0x14]
  40f092:	push   DWORD PTR [ebp-0x24]
  40f095:	push   0x236f
  40f09a:	call   DWORD PTR ds:0x42e9b7
  40f0a0:	cmp    DWORD PTR ds:0x42c01c,0x3
  40f0a7:	jne    0x40f0b8
  40f0ad:	mov    eax,ds:0x42c01c
  40f0b2:	inc    eax
  40f0b3:	mov    ds:0x42c01c,eax
  40f0b8:	jmp    0x40f05c
  40f0bd:	mov    eax,0x7510899
  40f0c2:	xor    ecx,eax
  40f0c4:	mov    esi,0x3272e0
  40f0c9:	adc    DWORD PTR ds:0x42a014,0x429010
  40f0d3:	push   edi
  40f0d4:	add    ecx,esi
  40f0d6:	jmp    0x40f0fa
  40f0db:	mov    DWORD PTR ds:0x42c014,0x1850
  40f0e5:	mov    dl,BYTE PTR [ebp-0x1]
  40f0e8:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f0ef:	mov    DWORD PTR ds:0x42a00c,0x213a
  40f0f9:	inc    ecx
  40f0fa:	mov    DWORD PTR ds:0x42b000,0x51ce
  40f104:	cmp    ecx,0x40
  40f107:	jb     0x40f0db
  40f10d:	mov    edx,DWORD PTR [ebp-0x18]
  40f110:	xor    edx,eax
  40f112:	add    edx,esi
  40f114:	mov    DWORD PTR ds:0x42c00c,0x7eb4
  40f11e:	jmp    0x40f1de
  40f123:	sub    DWORD PTR ds:0x42d018,edi
  40f129:	mov    edi,DWORD PTR [ebp+0x8]
  40f12c:	and    DWORD PTR ds:0x42d008,0x0
  40f136:	jmp    0x40f14a
  40f13b:	xor    ecx,ecx
  40f13d:	or     ecx,DWORD PTR ds:0x42d008
  40f143:	inc    ecx
  40f144:	mov    DWORD PTR ds:0x42d008,ecx
  40f14a:	cmp    DWORD PTR ds:0x42d008,0x18
  40f151:	jae    0x40f175
  40f157:	cmp    DWORD PTR ds:0x42d008,0x26
  40f15e:	jne    0x40f16a
  40f164:	call   DWORD PTR ds:0x42e9bb
  40f16a:	jmp    0x40f13b
  40f16f:	xor    DWORD PTR ds:0x42a00c,edx
  40f175:	mov    ecx,0x8a8c
  40f17a:	xor    DWORD PTR ds:0x42a004,0x50dc
  40f184:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f189:	mov    edi,0x3b50
  40f18e:	add    DWORD PTR ds:0x429008,0x42b008
  40f198:	add    cx,di
  40f19b:	xor    DWORD PTR ds:0x429018,0x2fa9
  40f1a5:	movzx  ecx,cx
  40f1a8:	mov    DWORD PTR [ebp-0xc],ecx
  40f1ab:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1ae:	add    DWORD PTR ds:0x42b000,0x4595
  40f1b8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f1bc:	mov    DWORD PTR ds:0x42c010,0x3cf8
  40f1c6:	xor    ecx,0x8a8c
  40f1cc:	add    ecx,edi
  40f1ce:	mov    edi,0x13c
  40f1d3:	mov    edi,DWORD PTR [ebp-0xc]
  40f1d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40f1dd:	inc    edx
  40f1de:	mov    DWORD PTR ds:0x42c008,0x3284
  40f1e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1eb:	mov    DWORD PTR ds:0x42d00c,0x2d6d
  40f1f5:	cmp    edx,ecx
  40f1f7:	jne    0x40f123
  40f1fd:	xor    edi,DWORD PTR ds:0x42900c
  40f203:	mov    ecx,DWORD PTR [ebp-0x18]
  40f206:	and    DWORD PTR ds:0x429024,0x0
  40f210:	jmp    0x40f224
  40f215:	xor    edx,edx
  40f217:	or     edx,DWORD PTR ds:0x429024
  40f21d:	inc    edx
  40f21e:	mov    DWORD PTR ds:0x429024,edx
  40f224:	cmp    DWORD PTR ds:0x429024,0x10
  40f22b:	jae    0x40f27a
  40f231:	cmp    DWORD PTR ds:0x429024,0xa
  40f238:	jne    0x40f24f
  40f23e:	push   DWORD PTR [ebp-0x14]
  40f241:	push   0x42b018
  40f246:	push   DWORD PTR [ebp-0x14]
  40f249:	call   DWORD PTR ds:0x42e9bf
  40f24f:	cmp    DWORD PTR ds:0x429024,0x9
  40f256:	jne    0x40f26b
  40f25c:	xor    edx,edx
  40f25e:	xor    edx,DWORD PTR ds:0x429024
  40f264:	inc    edx
  40f265:	mov    DWORD PTR ds:0x429024,edx
  40f26b:	jmp    0x40f215
  40f270:	adc    DWORD PTR ds:0x42d00c,0x5b30
  40f27a:	mov    edx,DWORD PTR [ebp+0x10]
  40f27d:	xor    edi,0x523a
  40f283:	xor    ecx,eax
  40f285:	dec    DWORD PTR ds:0x42b010
  40f28b:	add    ecx,esi
  40f28d:	mov    DWORD PTR [edx],ecx
  40f28f:	sbb    DWORD PTR ds:0x42d004,0x42a008
  40f299:	mov    ecx,DWORD PTR [ebp-0x18]
  40f29c:	inc    edi
  40f29d:	xor    ecx,eax
  40f29f:	mov    edi,DWORD PTR ds:0x42a000
  40f2a5:	xor    DWORD PTR ds:0x42a004,edi
  40f2ab:	add    ecx,esi
  40f2ad:	mov    DWORD PTR ds:0x42d000,0x15
  40f2b7:	cmp    DWORD PTR ds:0x42d000,0x0
  40f2be:	je     0x40f2f6
  40f2c4:	cmp    DWORD PTR ds:0x42d000,0x1a
  40f2cb:	jne    0x40f2e4
  40f2d1:	push   0x42e111
  40f2d6:	push   0x42e0c7
  40f2db:	push   DWORD PTR [ebp-0x20]
  40f2de:	call   DWORD PTR ds:0x42e9c7
  40f2e4:	mov    edi,DWORD PTR ds:0x42d000
  40f2ea:	dec    edi
  40f2eb:	mov    DWORD PTR ds:0x42d000,edi
  40f2f1:	jmp    0x40f2b7
  40f2f6:	mov    DWORD PTR [ebp-0xc],ecx
  40f2f9:	not    edi
  40f2fb:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40f302:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40f309:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40f310:	and    DWORD PTR ds:0x42b010,ecx
  40f316:	mov    ecx,DWORD PTR [ebp-0x14]
  40f319:	mov    DWORD PTR ds:0x42b018,0x1d
  40f323:	cmp    DWORD PTR ds:0x42b018,0x0
  40f32a:	je     0x40f37c
  40f330:	cmp    DWORD PTR ds:0x42b018,0xc
  40f337:	jne    0x40f348
  40f33d:	push   0x42e0d9
  40f342:	call   DWORD PTR ds:0x42e9cb
  40f348:	cmp    DWORD PTR ds:0x42b018,0xd
  40f34f:	jne    0x40f362
  40f355:	mov    edi,DWORD PTR ds:0x42b018
  40f35b:	dec    edi
  40f35c:	mov    DWORD PTR ds:0x42b018,edi
  40f362:	xor    edi,edi
  40f364:	xor    edi,DWORD PTR ds:0x42b018
  40f36a:	dec    edi
  40f36b:	mov    DWORD PTR ds:0x42b018,edi
  40f371:	jmp    0x40f323
  40f376:	not    DWORD PTR ds:0x42d018
  40f37c:	mov    DWORD PTR [ebp+0x8],ecx
  40f37f:	sub    edi,ecx
  40f381:	mov    ecx,DWORD PTR [ebp+0x8]
  40f384:	and    DWORD PTR ds:0x42a010,0x408f
  40f38e:	xor    ecx,eax
  40f390:	add    ecx,esi
  40f392:	mov    ecx,0x242ebed
  40f397:	not    edi
  40f399:	mov    edi,0xf641bea
  40f39e:	je     0x418714
  40f3a4:	mov    edx,DWORD PTR [ebp+0x8]
  40f3a7:	or     DWORD PTR ds:0x429008,0x3119
  40f3b1:	mov    ebx,DWORD PTR [ebp-0x8]
  40f3b4:	adc    DWORD PTR ds:0x42a018,0x42c014
  40f3be:	xor    edx,eax
  40f3c0:	xor    ebx,eax
  40f3c2:	sub    DWORD PTR ds:0x42c004,0x429010
  40f3cc:	sub    edx,ebx
  40f3ce:	sub    edx,esi
  40f3d0:	xor    edx,eax
  40f3d2:	mov    DWORD PTR [ebp+0x8],edx
  40f3d5:	inc    DWORD PTR ds:0x42b010
  40f3db:	mov    edx,DWORD PTR [ebp+0x8]
  40f3de:	mov    ebx,DWORD PTR [ebp-0x58]
  40f3e1:	add    edx,0x5708f8
  40f3e7:	sub    DWORD PTR ds:0x42c01c,0x72ca
  40f3f1:	imul   edx,ebx
  40f3f4:	xor    DWORD PTR ds:0x429024,edi
  40f3fa:	mov    DWORD PTR [ebp-0x58],edx
  40f3fd:	and    DWORD PTR ds:0x42d004,0x0
  40f407:	mov    ebx,DWORD PTR ds:0x42d004
  40f40d:	inc    ebx
  40f40e:	mov    DWORD PTR ds:0x42d004,ebx
  40f414:	cmp    DWORD PTR ds:0x42d004,0x1e
  40f41b:	jne    0x40f42c
  40f421:	push   0x42a004
  40f426:	call   DWORD PTR ds:0x42e9d3
  40f42c:	cmp    DWORD PTR ds:0x42d004,0x17
  40f433:	jb     0x40f407
  40f439:	mov    edx,DWORD PTR [ebp+0x8]
  40f43c:	mov    ebx,DWORD PTR [ebp-0x54]
  40f43f:	add    edx,0x64f8da
  40f445:	xor    DWORD PTR ds:0x42b004,0x42b000
  40f44f:	or     edx,ebx
  40f451:	adc    DWORD PTR ds:0x42c014,0x3307
  40f45b:	mov    DWORD PTR [ebp-0x54],edx
  40f45e:	add    DWORD PTR ds:0x42d004,0x3241
  40f468:	mov    edx,DWORD PTR [ebp+0x8]
  40f46b:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40f475:	mov    ebx,DWORD PTR [ebp-0x50]
  40f478:	xor    DWORD PTR ds:0x42b014,0x42c01c
  40f482:	add    edx,ecx
  40f484:	adc    DWORD PTR ds:0x42c000,0x429028
  40f48e:	xor    edx,ebx
  40f490:	mov    DWORD PTR [ebp-0x50],edx
  40f493:	and    DWORD PTR ds:0x429018,0x0
  40f49d:	mov    ebx,DWORD PTR ds:0x429018
  40f4a3:	inc    ebx
  40f4a4:	mov    DWORD PTR ds:0x429018,ebx
  40f4aa:	cmp    DWORD PTR ds:0x429018,0x1f
  40f4b1:	jne    0x40f4cc
  40f4b7:	push   0x42c010
  40f4bc:	push   0x42c018
  40f4c1:	push   0x42a008
  40f4c6:	call   DWORD PTR ds:0x42e993
  40f4cc:	cmp    DWORD PTR ds:0x429018,0x1e
  40f4d3:	jb     0x40f49d
  40f4d9:	inc    edx
  40f4da:	mov    edx,DWORD PTR [ebp+0x8]
  40f4dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f4e0:	add    DWORD PTR ds:0x42d010,0x42d01c
  40f4ea:	add    edx,edi
  40f4ec:	adc    DWORD PTR ds:0x42d018,0x42b01c
  40f4f6:	and    edx,ebx
  40f4f8:	mov    DWORD PTR [ebp-0x4c],edx
  40f4fb:	or     edx,DWORD PTR ds:0x42b000
  40f501:	mov    edx,DWORD PTR [ebp+0x8]
  40f504:	mov    ebx,DWORD PTR ds:0x42d000
  40f50a:	sub    DWORD PTR ds:0x42a000,ebx
  40f510:	mov    ebx,DWORD PTR [ebp-0x48]
  40f513:	or     DWORD PTR ds:0x42c000,0x42c010
  40f51d:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f524:	mov    DWORD PTR [ebp-0x48],edx
  40f527:	mov    edx,DWORD PTR [ebp+0x8]
  40f52a:	mov    ebx,0xfa5e15e2
  40f52f:	inc    DWORD PTR ds:0x42d018
  40f535:	sub    ebx,edx
  40f537:	movzx  edx,WORD PTR ds:0x42c018
  40f53e:	adc    edx,DWORD PTR ds:0x429028
  40f544:	mov    DWORD PTR ds:0x42c018,edx
  40f54a:	add    ebx,DWORD PTR [ebp-0x44]
  40f54d:	mov    DWORD PTR [ebp-0x44],ebx
  40f550:	and    DWORD PTR ds:0x42b018,0x0
  40f55a:	jmp    0x40f56c
  40f55f:	mov    edx,DWORD PTR ds:0x42b018
  40f565:	inc    edx
  40f566:	mov    DWORD PTR ds:0x42b018,edx
  40f56c:	cmp    DWORD PTR ds:0x42b018,0x19
  40f573:	jae    0x40f616
  40f579:	cmp    DWORD PTR ds:0x42b018,0x6
  40f580:	jne    0x40f594
  40f586:	push   0x0
  40f588:	push   DWORD PTR [ebp-0x10]
  40f58b:	push   DWORD PTR [ebp-0x28]
  40f58e:	call   DWORD PTR ds:0x42e997
  40f594:	cmp    DWORD PTR ds:0x42b018,0x5
  40f59b:	jne    0x40f5ae
  40f5a1:	mov    edx,DWORD PTR ds:0x42b018
  40f5a7:	inc    edx
  40f5a8:	mov    DWORD PTR ds:0x42b018,edx
  40f5ae:	jmp    0x40f55f
  40f5b3:	mov    DWORD PTR ds:0x42b00c,0x18
  40f5bd:	cmp    DWORD PTR ds:0x42b00c,0x0
  40f5c4:	je     0x40f616
  40f5ca:	cmp    DWORD PTR ds:0x42b00c,0x1e
  40f5d1:	jne    0x40f5fa
  40f5d7:	push   0x3551
  40f5dc:	push   DWORD PTR [ebp-0x28]
  40f5df:	push   0x42c000
  40f5e4:	push   DWORD PTR [ebp-0x10]
  40f5e7:	push   0x1896
  40f5ec:	push   0x8105
  40f5f1:	push   DWORD PTR [ebp-0xc]
  40f5f4:	call   DWORD PTR ds:0x42e99f
  40f5fa:	mov    edx,DWORD PTR ds:0x42b00c
  40f600:	dec    edx
  40f601:	mov    DWORD PTR ds:0x42b00c,edx
  40f607:	jmp    0x40f5bd
  40f60c:	add    DWORD PTR ds:0x42d00c,0x25c6
  40f616:	mov    edx,DWORD PTR [ebp+0x8]
  40f619:	adc    DWORD PTR ds:0x42d018,0x42a00c
  40f623:	xor    edx,eax
  40f625:	adc    DWORD PTR ds:0x42b010,0x4589
  40f62f:	add    edx,esi
  40f631:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f63b:	jne    0x40f3a4
  40f641:	jmp    0x418714
  40f646:	adc    edx,edx
  40f648:	mov    edx,DWORD PTR [ebp-0xc]
  40f64b:	sub    edx,esi
  40f64d:	xor    edx,eax
  40f64f:	mov    DWORD PTR [ebp-0x5c],edx
  40f652:	mov    edx,DWORD PTR [ebp-0x10]
  40f655:	mov    ebx,DWORD PTR [ebp-0x8]
  40f658:	xor    edx,eax
  40f65a:	xor    ebx,eax
  40f65c:	sub    edx,ebx
  40f65e:	sub    edx,esi
  40f660:	xor    edx,eax
  40f662:	mov    DWORD PTR [ebp-0x10],edx
  40f665:	mov    edx,DWORD PTR [ebp-0x14]
  40f668:	mov    DWORD PTR [ebp+0x8],edx
  40f66b:	jmp    0x411a66
  40f670:	mov    edx,DWORD PTR [ebp+0x8]
  40f673:	mov    ebx,DWORD PTR [ebp-0x8]
  40f676:	xor    edx,eax
  40f678:	xor    ebx,eax
  40f67a:	sub    edx,ebx
  40f67c:	sub    edx,esi
  40f67e:	xor    edx,eax
  40f680:	mov    DWORD PTR [ebp+0x8],edx
  40f683:	jmp    0x411a09
  40f688:	aaa    
  40f689:	xchg   BYTE PTR [edi-0x3a],cl
  40f68c:	jae    0x40f709
  40f68e:	mov    ebx,0xae43537b
  40f693:	xor    al,0x52
  40f695:	pop    ebx
  40f696:	stos   DWORD PTR es:[edi],eax
  40f697:	test   BYTE PTR [edi+0x17a7aca],al
  40f69d:	pop    edi
  40f69e:	jp     0x40f71a
  40f6a0:	fistp  QWORD PTR ds:0x409f554e
  40f6a6:	loop   0x40f69f
  40f6a8:	ret    0xa79c
  40f6ab:	int3   
  40f6ac:	and    eax,0x5d796d5f
  40f6b1:	mov    esi,edi
  40f6b3:	pushf  
  40f6b4:	adc    BYTE PTR [esi],0x33
  40f6b7:	inc    edx
  40f6b8:	mov    cl,0x7
  40f6ba:	bound  edx,QWORD PTR [ebp-0x241b4ebf]
  40f6c0:	lea    edx,[ebx]
  40f6c2:	arpl   di,sp
  40f6c4:	sub    edx,eax
  40f6c6:	pop    ebx
  40f6c7:	scas   eax,DWORD PTR es:[edi]
  40f6c8:	push   esp
  40f6c9:	mov    edi,0x491f6cce
  40f6ce:	sub    eax,0x8c2cdee1
  40f6d3:	pop    ecx
  40f6d4:	pop    esp
  40f6d5:	and    DWORD PTR [ebp-0x1aeca5fd],esp
  40f6db:	lods   al,BYTE PTR ds:[esi]
  40f6dc:	inc    ecx
  40f6dd:	js     0x40f66e
  40f6df:	jl     0x40f68d
  40f6e1:	fld    TBYTE PTR [edi+ecx*4+0xb]
  40f6e5:	jno    0x40f683
  40f6e7:	xchg   ebx,eax
  40f6e8:	push   ss
  40f6e9:	jle    0x40f727
  40f6eb:	mov    BYTE PTR [esp+eax*4-0xb],ch
  40f6ef:	repz sub BYTE PTR gs:[edx],dl
  40f6f3:	xchg   esi,eax
  40f6f4:	sub    BYTE PTR [edx-0x7a],dh
  40f6f7:	push   esi
  40f6f8:	pop    es
  40f6f9:	outs   dx,DWORD PTR ds:[esi]
  40f6fa:	fist   DWORD PTR [ecx+0x5a541e19]
  40f700:	fcmove st,st(3)
  40f702:	or     eax,0x6ae88668
  40f707:	mov    cl,0xa3
  40f709:	into   
  40f70a:	jle    0x40f6cf
  40f70c:	dec    esp
  40f70d:	ja     0x40f6c7
  40f70f:	dec    ecx
  40f710:	cmp    DWORD PTR [edi+0x758caadd],0xdc206b6b
  40f71a:	call   0x598efc15
  40f71f:	stos   BYTE PTR es:[edi],al
  40f720:	sub    eax,0x9b6dd2e8
  40f725:	mov    ecx,0xa8c0bb60
  40f72a:	in     al,dx
  40f72b:	pusha  
  40f72c:	jl     0x40f730
  40f72e:	ins    BYTE PTR es:[edi],dx
  40f72f:	iret   
  40f730:	ret    0xc45
  40f733:	jg     0x40f7a8
  40f735:	das    
  40f736:	call   0xd57888bf
  40f73b:	stc    
  40f73c:	and    BYTE PTR [ebp+0x1d],al
  40f73f:	pop    eax
  40f740:	pusha  
  40f741:	out    dx,eax
  40f742:	mov    cl,0x8a
  40f744:	mov    ebp,0xdab1e41d
  40f749:	xchg   esp,eax
  40f74a:	(bad)  
  40f74b:	call   0x69f1abd0
  40f750:	test   DWORD PTR [edi+0x3f820394],ebx
  40f756:	lods   eax,DWORD PTR ds:[esi]
  40f757:	ins    BYTE PTR es:[edi],dx
  40f758:	lods   eax,DWORD PTR ds:[esi]
  40f759:	call   DWORD PTR [eax+0x44]
  40f75c:	pop    es
  40f75d:	push   esi
  40f75e:	push   edx
  40f75f:	dec    ebx
  40f760:	add    ch,BYTE PTR [esi+0x58]
  40f763:	das    
  40f764:	dec    ebp
  40f765:	sub    DWORD PTR [edi-0xd786fce],0xca3e762a
  40f76f:	(bad)  
  40f770:	loopne 0x40f7ba
  40f772:	jno    0x40f785
  40f774:	dec    ecx
  40f775:	xor    DWORD PTR [edi+0x5a03ae0d],0xd4b502e7
  40f77f:	int    0x34
  40f781:	sahf   
  40f782:	sahf   
  40f783:	mov    esp,0x9a3ac05b
  40f788:	out    0xf6,eax
  40f78a:	cs add eax,0x10ad2644
  40f790:	(bad)  
  40f791:	jge    0x40f74e
  40f793:	repnz shr DWORD PTR [ecx-0x1f],cl
  40f797:	jmp    0x27e9:0x864d2f24
  40f79e:	pop    eax
  40f79f:	mov    cl,0xea
  40f7a1:	dec    ecx
  40f7a2:	mov    edi,0x89738682
  40f7a7:	shr    BYTE PTR [eax],1
  40f7a9:	add    al,BYTE PTR [ecx]
  40f7ab:	shr    cl,0xf2
  40f7ae:	xchg   edi,eax
  40f7af:	sahf   
  40f7b0:	xor    eax,esi
  40f7b2:	jnp    0x40f82a
  40f7b4:	jecxz  0x40f7d3
  40f7b6:	mov    ebx,0x80aec0c
  40f7bb:	fimul  DWORD PTR [esi+0x35]
  40f7be:	test   DWORD PTR [edi+0x69],ecx
  40f7c1:	lods   al,BYTE PTR ds:[esi]
  40f7c2:	lods   eax,DWORD PTR ds:[esi]
  40f7c3:	inc    ecx
  40f7c4:	add    DWORD PTR [ebx],esi
  40f7c6:	mov    ebp,0xe1d74231
  40f7cb:	dec    esi
  40f7cc:	push   cs
  40f7cd:	nop
  40f7ce:	(bad)  
  40f7d0:	outs   dx,DWORD PTR ds:[esi]
  40f7d1:	mov    ecx,0xfd712970
  40f7d6:	pop    es
  40f7d7:	push   es
  40f7d8:	push   esp
  40f7d9:	fistp  WORD PTR [edx]
  40f7db:	push   edi
  40f7dc:	xchg   edi,eax
  40f7dd:	or     BYTE PTR [ebx],ch
  40f7df:	int3   
  40f7e0:	lds    ecx,FWORD PTR [ecx]
  40f7e2:	popa   
  40f7e3:	ds das 
  40f7e5:	inc    ebp
  40f7e6:	mov    edx,0x4e544c7d
  40f7eb:	sbb    BYTE PTR [esi],bl
  40f7ed:	and    ecx,edi
  40f7ef:	xchg   ebx,eax
  40f7f0:	ds nop
  40f7f2:	das    
  40f7f3:	js     0x40f816
  40f7f5:	sbb    ebp,DWORD PTR [esi-0x25e9a18c]
  40f7fb:	jb     0xa923bcaa
  40f801:	mov    ecx,0x8648c550
  40f806:	adc    ah,dh
  40f808:	mov    esp,0xf6fea07b
  40f80d:	cmp    al,0xd6
  40f80f:	int    0xa6
  40f811:	jge    0x40f850
  40f813:	xchg   ebx,eax
  40f814:	inc    ecx
  40f815:	call   0x19ae:0x263a748c
  40f81c:	jnp    0x40f825
  40f81e:	outs   dx,BYTE PTR ds:[esi]
  40f81f:	stc    
  40f820:	pusha  
  40f821:	xor    DWORD PTR [ecx-0x24],eax
  40f824:	daa    
  40f825:	(bad)  
  40f826:	adc    ebx,DWORD PTR [eax]
  40f828:	lahf   
  40f829:	cmp    BYTE PTR [ebx-0x5d],dh
  40f82c:	add    esi,eax
  40f82e:	xchg   DWORD PTR [esi-0x5c],edi
  40f831:	fisttp WORD PTR [edi]
  40f834:	int    0xc9
  40f836:	sbb    BYTE PTR [ebp+0x62],dl
  40f839:	shl    BYTE PTR [edi-0x6d55dd0c],1
  40f83f:	fwait
  40f840:	cld    
  40f841:	cdq    
  40f842:	mov    ebp,0x197807d
  40f847:	ss popf 
  40f849:	adc    dl,bl
  40f84b:	mov    ecx,0x5aa57cdd
  40f850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f851:	and    eax,0x753731ea
  40f856:	dec    ecx
  40f857:	rcl    DWORD PTR [esp+eiz*4+0x777cfd63],0x6b
  40f85f:	rcr    DWORD PTR [esi-0x50d35b41],cl
  40f865:	and    BYTE PTR [edx+edi*2],ch
  40f868:	test   ah,dh
  40f86a:	add    DWORD PTR [edi+ebp*8],esi
  40f86d:	mov    ds:0x23eb9ee7,eax
  40f872:	sbb    DWORD PTR [esi-0x31f52ba8],esp
  40f878:	out    0x9,eax
  40f87a:	sbb    BYTE PTR [ecx-0x4180e51c],bl
  40f880:	and    BYTE PTR ds:0x26bc1a16,dl
  40f886:	aam    0xf2
  40f888:	push   ss
  40f889:	add    ecx,edi
  40f88b:	inc    edx
  40f88c:	push   ecx
  40f88d:	aas    
  40f88e:	stos   BYTE PTR es:[edi],al
  40f88f:	sar    BYTE PTR [edx+0x2f],0x8a
  40f893:	jl     0x40f825
  40f895:	adc    eax,0x46958c67
  40f89a:	sbb    eax,0xe327eb7e
  40f89f:	pop    es
  40f8a0:	cmp    BYTE PTR [edx+0x76],al
  40f8a3:	jle    0x40f82c
  40f8a5:	jo     0x40f8ff
  40f8a7:	xchg   ebx,eax
  40f8a8:	imul   eax,DWORD PTR es:[edi-0x50],0x3436a341
  40f8b0:	dec    eax
  40f8b1:	sub    al,0xb1
  40f8b3:	sbb    eax,0xab1fe25f
  40f8b8:	call   0xbd1d3433
  40f8bd:	mov    ?,WORD PTR [ebx-0x7]
  40f8c0:	pop    ebx
  40f8c1:	and    ecx,DWORD PTR [ebp*2-0x54d032df]
  40f8c8:	repz inc edx
  40f8ca:	ret    
  40f8cb:	inc    ebp
  40f8cc:	sbb    BYTE PTR cs:[ebp+0x62],0x3f
  40f8d1:	lds    ebp,FWORD PTR [edx-0x5f]
  40f8d4:	pushf  
  40f8d5:	sub    DWORD PTR [esp+eiz*2],edx
  40f8d8:	out    0xd4,al
  40f8da:	pop    es
  40f8db:	push   edx
  40f8dc:	or     edx,DWORD PTR ds:0xfc04427c
  40f8e2:	int    0xff
  40f8e4:	pop    ecx
  40f8e5:	sub    ecx,edi
  40f8e7:	jmp    0x40f915
  40f8e9:	aam    0x4f
  40f8eb:	cmp    eax,0xb3230ae1
  40f8f0:	dec    esi
  40f8f1:	xchg   ebp,eax
  40f8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8f3:	scas   eax,DWORD PTR es:[edi]
  40f8f4:	repz jp 0x40f8b3
  40f8f7:	xor    eax,0xac6c2fce
  40f8fc:	pop    edi
  40f8fd:	cmp    al,0xb7
  40f8ff:	sbb    ebp,DWORD PTR [si-0x57d7]
  40f904:	xchg   DWORD PTR [ebp+0x3da26c69],esp
  40f90a:	das    
  40f90b:	stos   DWORD PTR es:[edi],eax
  40f90c:	shl    DWORD PTR [edi-0xa],cl
  40f90f:	(bad)  
  40f910:	sti    
  40f911:	cmp    cl,BYTE PTR [ecx-0x35e69b75]
  40f917:	mov    eax,0x4169ea5e
  40f91c:	test   al,0x9e
  40f91e:	sub    DWORD PTR [eax+ebp*2],esi
  40f921:	dec    esi
  40f922:	cld    
  40f923:	sbb    eax,0xc53b4b29
  40f928:	xchg   esp,eax
  40f929:	pusha  
  40f92a:	iret   
  40f92b:	les    eax,FWORD PTR [edx]
  40f92d:	or     DWORD PTR [ecx+0x56],0x42
  40f931:	adc    al,0x8d
  40f933:	ret    0xc253
  40f936:	(bad)  
  40f937:	mov    edi,0x6bcbfa71
  40f93c:	mov    bl,0x6d
  40f93e:	ret    
  40f93f:	hlt    
  40f940:	sbb    BYTE PTR [eax],bh
  40f942:	mov    bh,BYTE PTR [eax+ecx*1]
  40f945:	pop    edx
  40f946:	add    bh,al
  40f948:	adc    DWORD PTR [edi-0x3a],eax
  40f94b:	out    0x87,eax
  40f94d:	mov    ch,0x1e
  40f94f:	ja     0x40f961
  40f951:	loope  0x40f8f2
  40f953:	push   esp
  40f954:	jbe    0x40f9bd
  40f956:	mov    ch,0x5a
  40f958:	outs   dx,BYTE PTR ds:[esi]
  40f959:	jnp    0x40f8e6
  40f95b:	jnp    0x40f91e
  40f95d:	pop    esp
  40f95e:	lahf   
  40f95f:	outs   dx,DWORD PTR ds:[esi]
  40f960:	mov    bh,0x64
  40f962:	mov    dl,ah
  40f964:	jecxz  0x40f8f8
  40f966:	mov    ch,BYTE PTR [eax+0x6fb53077]
  40f96c:	(bad)  
  40f96d:	xor    ebp,DWORD PTR [edi]
  40f96f:	mov    bh,0x5f
  40f971:	in     al,0xa6
  40f973:	sub    ecx,DWORD PTR [ecx+0xb]
  40f976:	das    
  40f977:	pop    ebp
  40f978:	pop    eax
  40f979:	push   edi
  40f97a:	and    al,0xb2
  40f97c:	or     esp,esi
  40f97e:	sar    BYTE PTR [ecx],0x25
  40f981:	sbb    DWORD PTR [esi-0x7d495a17],ecx
  40f987:	aas    
  40f988:	sbb    eax,edx
  40f98a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f98b:	pop    edx
  40f98c:	cs sbb eax,0x763a2006
  40f992:	sbb    edi,edi
  40f994:	add    BYTE PTR [edx],cl
  40f996:	and    bh,BYTE PTR [ebx]
  40f998:	mov    eax,ds:0xd01632e2
  40f99d:	xchg   edx,eax
  40f99e:	clc    
  40f99f:	push   ds
  40f9a0:	ret    0xc03f
  40f9a3:	pop    edi
  40f9a4:	mov    cl,0xe0
  40f9a6:	call   0x726118cb
  40f9ab:	jmp    0xfad94cd1
  40f9b0:	not    bl
  40f9b2:	jmp    0x74a9:0x42e2735b
  40f9b9:	in     al,dx
  40f9ba:	push   ebp
  40f9bb:	push   edx
  40f9bc:	mov    ds:0xdf7a2cfe,al
  40f9c1:	test   BYTE PTR [edi],ch
  40f9c3:	out    0xfd,eax
  40f9c5:	imul   DWORD PTR [edi+0x465e8697]
  40f9cb:	inc    BYTE PTR [edi+0x4b6a29c0]
  40f9d1:	ins    BYTE PTR es:[edi],dx
  40f9d2:	xchg   edi,eax
  40f9d3:	cwde   
  40f9d4:	push   esi
  40f9d5:	into   
  40f9d6:	fild   QWORD PTR [esi+0x30]
  40f9d9:	das    
  40f9da:	inc    eax
  40f9db:	cli    
  40f9dc:	add    esi,ebx
  40f9de:	popf   
  40f9df:	(bad)  
  40f9e0:	or     al,BYTE PTR [ecx-0x791a448a]
  40f9e6:	sbb    eax,0x47e9bca8
  40f9eb:	mov    edi,0x6b05252f
  40f9f0:	xor    DWORD PTR [esi+edx*4],ecx
  40f9f3:	pop    edi
  40f9f4:	dec    esp
  40f9f5:	or     al,0x0
  40f9f7:	mov    ecx,0xe1c1f395
  40f9fc:	fadd   st(2),st
  40f9fe:	sbb    eax,0xacc9c9bb
  40fa03:	and    BYTE PTR [edi+0x66ec256f],al
  40fa09:	sahf   
  40fa0a:	add    ebx,DWORD PTR [esi+0x6a33c80]
  40fa10:	adc    eax,0xffffffb2
  40fa13:	sub    cl,ch
  40fa15:	es (bad) 
  40fa17:	psubd  mm3,QWORD PTR [ebx]
  40fa1a:	mov    BYTE PTR [ebp+0x39],cl
  40fa1d:	push   ds
  40fa1e:	adc    edi,edx
  40fa20:	mov    fs,WORD PTR [esi]
  40fa22:	jge    0x40fa25
  40fa24:	inc    eax
  40fa25:	bound  ecx,QWORD PTR [eax+eiz*8+0x5e9a87a5]
  40fa2c:	pop    es
  40fa2d:	push   0x886dc6bf
  40fa32:	xchg   ebx,eax
  40fa33:	push   es
  40fa34:	xchg   esi,eax
  40fa35:	aad    0x4f
  40fa37:	mov    gs,WORD PTR [ebx-0x3fa1cb03]
  40fa3d:	mov    BYTE PTR [eax+0x41b179ed],ch
  40fa43:	lahf   
  40fa44:	jno    0x40fa12
  40fa46:	sbb    eax,DWORD PTR [edi-0x1ef2bbd0]
  40fa4c:	in     al,dx
  40fa4d:	mov    bh,0x3d
  40fa4f:	mov    eax,DWORD PTR [edi+0x21]
  40fa52:	or     ah,bh
  40fa54:	mov    eax,0xb026a24
  40fa59:	jmp    0x5f500c04
  40fa5e:	xchg   ebx,eax
  40fa5f:	push   es
  40fa60:	mov    dh,0x55
  40fa62:	xor    esi,DWORD PTR [edx]
  40fa64:	mov    bh,0xc1
  40fa66:	xchg   ecx,eax
  40fa67:	xchg   esp,eax
  40fa68:	mov    ch,0xe1
  40fa6a:	xchg   ebx,eax
  40fa6b:	scas   al,BYTE PTR es:[edi]
  40fa6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa6d:	mov    edx,0x4c26c0c
  40fa72:	loop   0x40fa11
  40fa74:	jns    0x40fa79
  40fa76:	xchg   esi,eax
  40fa77:	and    eax,0x2637cc69
  40fa7c:	addr16 call 0xd564:0xfe3778ec
  40fa84:	nop
  40fa85:	mov    WORD PTR [ebx],ds
  40fa87:	sub    ebp,DWORD PTR [ecx+ebx*1-0x789a8e5d]
  40fa8e:	mov    ecx,0x718c0190
  40fa93:	fs add al,0xc2
  40fa96:	inc    ebp
  40fa97:	inc    ebx
  40fa98:	add    eax,0x3778914b
  40fa9d:	stc    
  40fa9e:	sbb    al,0x1e
  40faa0:	add    BYTE PTR es:[esi+0xa],ah
  40faa4:	cs fsubrp st(2),st
  40faa7:	inc    ecx
  40faa8:	std    
  40faa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faaa:	loopne 0x40faa5
  40faac:	pop    ss
  40faad:	jl     0x40faa8
  40faaf:	dec    ebp
  40fab0:	cmp    DWORD PTR [ecx+eiz*8+0x3e2fe651],edx
  40fab7:	icebp  
  40fab8:	fld    TBYTE PTR [edi]
  40faba:	sar    BYTE PTR [ebx],1
  40fabc:	cmp    al,0x58
  40fabe:	pop    edi
  40fabf:	fs std 
  40fac1:	lods   eax,DWORD PTR ds:[esi]
  40fac2:	inc    edi
  40fac3:	scas   eax,DWORD PTR es:[edi]
  40fac4:	repnz shr BYTE PTR [esi+0x18782267],1
  40facb:	pop    edi
  40facc:	jmp    0x2f513639
  40fad1:	fs pop ds
  40fad3:	cmp    eax,0xda1bcb6f
  40fad8:	push   eax
  40fad9:	cmp    dh,bl
  40fadb:	and    bl,dl
  40fadd:	mov    WORD PTR [eax],?
  40fadf:	and    al,cl
  40fae1:	jnp    0x2391f7ee
  40fae7:	(bad)  
  40fae9:	std    
  40faea:	neg    eax
  40faec:	retf   0x5606
  40faef:	add    BYTE PTR [edx+0x44d4e8d0],ch
  40faf5:	repz clc 
  40faf7:	int    0x2e
  40faf9:	sbb    al,0xde
  40fafb:	adc    al,0x35
  40fafd:	jg     0x40fac9
  40faff:	in     al,dx
  40fb00:	pop    eax
  40fb01:	inc    edx
  40fb02:	jle    0x40faf2
  40fb04:	repz mov ebx,0xdade217e
  40fb0a:	jae    0x40fb81
  40fb0c:	js     0x40fad5
  40fb0e:	adc    ecx,DWORD PTR [edx]
  40fb10:	jmp    0x50fa0a19
  40fb15:	lods   al,BYTE PTR ds:[esi]
  40fb16:	mov    ecx,0x84013422
  40fb1b:	xlat   BYTE PTR ds:[ebx]
  40fb1c:	inc    esi
  40fb1d:	jne    0x40facc
  40fb1f:	inc    esi
  40fb20:	xchg   edx,eax
  40fb21:	mov    ebp,0xea3ce47c
  40fb26:	(bad)  
  40fb27:	jl     0x40fae8
  40fb29:	xchg   ebx,eax
  40fb2a:	nop
  40fb2b:	enter  0x7cab,0xf7
  40fb2f:	xlat   BYTE PTR ds:[ebx]
  40fb30:	inc    edi
  40fb31:	sbb    al,0xe1
  40fb33:	sub    BYTE PTR [eax],bl
  40fb35:	or     eax,0x38009683
  40fb3a:	jmp    0x7ee5:0xde1847ea
  40fb41:	adc    eax,0xc3c94ebe
  40fb46:	dec    edx
  40fb47:	popa   
  40fb48:	xor    edi,DWORD PTR [esi-0x4e]
  40fb4b:	and    eax,0x931c546c
  40fb50:	sbb    DWORD PTR [esi],0x63
  40fb53:	inc    ebp
  40fb54:	repz jno 0x40fb47
  40fb57:	jp     0x40fb4d
  40fb59:	or     BYTE PTR [ebp-0x3a],cl
  40fb5c:	fld    DWORD PTR [edi-0x77]
  40fb5f:	mov    ecx,0xf0f65f6a
  40fb64:	imul   ebx,DWORD PTR [edi+0x58f50f11],0x714b36
  40fb6e:	inc    BYTE PTR [ebp+0x1a]
  40fb71:	dec    ebx
  40fb72:	shr    eax,1
  40fb74:	mov    esi,0x686981b7
  40fb79:	jmp    0xc5930d12
  40fb7e:	jb     0x40fb2c
  40fb80:	(bad)  
  40fb81:	jmp    0x40fb62
  40fb83:	scas   al,BYTE PTR es:[edi]
  40fb84:	fmul   DWORD PTR [eax+0x22a60adc]
  40fb8a:	mov    ah,0x5d
  40fb8c:	push   0xffffffd7
  40fb8e:	fcmovnbe st,st(6)
  40fb90:	dec    edx
  40fb91:	pusha  
  40fb92:	jno    0x40fbe6
  40fb94:	je     0x40fbe4
  40fb96:	and    eax,0x660988f4
  40fb9b:	inc    ebx
  40fb9c:	mov    ecx,0x5685fd22
  40fba1:	mov    dl,0x1e
  40fba3:	cwde   
  40fba4:	jae    0x40fbd4
  40fba6:	mov    al,ds:0x933abe90
  40fbab:	push   esp
  40fbac:	into   
  40fbad:	or     DWORD PTR [edx],esp
  40fbaf:	add    DWORD PTR [ebp+0xde0ee13],eax
  40fbb5:	sbb    edi,DWORD PTR [edi+0x5f9de92e]
  40fbbb:	pop    ebx
  40fbbc:	sahf   
  40fbbd:	sbb    edx,ebp
  40fbbf:	std    
  40fbc0:	test   edi,esp
  40fbc2:	inc    edx
  40fbc3:	sbb    al,0xe9
  40fbc5:	fidivr DWORD PTR [edx]
  40fbc7:	xchg   ebp,eax
  40fbc8:	sub    BYTE PTR [esi-0x61],dl
  40fbcb:	enter  0x1196,0xc7
  40fbcf:	jb     0x40fbef
  40fbd1:	add    esp,edi
  40fbd3:	mov    eax,ds:0x32d94404
  40fbd8:	pop    ecx
  40fbd9:	cmp    eax,0x35da5be8
  40fbde:	pop    ebx
  40fbdf:	out    0x55,eax
  40fbe1:	mov    eax,ds:0xca6438b6
  40fbe6:	xchg   edi,eax
  40fbe7:	ror    DWORD PTR [eax],1
  40fbe9:	cmovb  ebx,edi
  40fbec:	add    al,0x3d
  40fbee:	es int 0x52
  40fbf1:	lds    ebp,FWORD PTR [esp+esi*1+0x618d974b]
  40fbf8:	mov    esp,0x903d89c8
  40fbfd:	sbb    al,dl
  40fbff:	mov    cl,0x59
  40fc01:	das    
  40fc02:	jbe    0x40fc63
  40fc04:	add    ah,dh
  40fc06:	inc    eax
  40fc07:	gs ror ebp,0x10
  40fc0b:	loopne 0x40fbf1
  40fc0d:	mov    ebx,0xcf05bdb9
  40fc12:	popa   
  40fc13:	fld    QWORD PTR [esp+esi*2]
  40fc16:	jmp    0x26d6:0xfda5879f
  40fc1d:	add    ecx,DWORD PTR [ebp-0x41]
  40fc20:	sbb    al,0xec
  40fc22:	add    al,0xa1
  40fc24:	ins    DWORD PTR es:[edi],dx
  40fc25:	xor    al,0x70
  40fc27:	and    bh,BYTE PTR [edi-0x24e6a46b]
  40fc2d:	lock mov edx,0xdffacdf4
  40fc33:	push   0x442e2de3
  40fc38:	mov    BYTE PTR [eax-0x38],dl
  40fc3b:	dec    edi
  40fc3c:	inc    ebp
  40fc3d:	mov    ebp,0x2249c619
  40fc42:	leave  
  40fc43:	ds add eax,0x6726da8c
  40fc49:	xor    ebp,DWORD PTR [ebx]
  40fc4b:	sahf   
  40fc4c:	daa    
  40fc4d:	mov    ds:0xee676755,eax
  40fc52:	jmp    0x6cb8c37a
  40fc57:	cmc    
  40fc58:	loope  0x40fbf1
  40fc5a:	rcl    DWORD PTR [ecx+0x56],cl
  40fc5d:	aad    0xbd
  40fc5f:	stos   BYTE PTR es:[edi],al
  40fc60:	xor    BYTE PTR [ecx+edi*2-0x2873eddf],bh
  40fc67:	(bad)  
  40fc68:	cli    
  40fc69:	jmp    0x2181a411
  40fc6e:	cwde   
  40fc6f:	fist   WORD PTR [ecx]
  40fc71:	popa   
  40fc72:	push   edi
  40fc73:	jmp    0x40fc67
  40fc75:	sub    eax,DWORD PTR [esi]
  40fc77:	arpl   WORD PTR [ecx],bp
  40fc79:	or     cl,BYTE PTR [edx-0x56]
  40fc7c:	mov    dh,0xa9
  40fc7e:	pop    ss
  40fc7f:	jae    0x40fc65
  40fc81:	xchg   ebx,eax
  40fc82:	inc    edi
  40fc83:	push   0xeb06a697
  40fc88:	sahf   
  40fc89:	jb     0x40fc50
  40fc8b:	(bad)  
  40fc8c:	jmp    0x6742:0xc6256700
  40fc93:	pop    esp
  40fc94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc95:	mov    es,esi
  40fc97:	pushf  
  40fc98:	push   esi
  40fc99:	retf   
  40fc9a:	pop    esp
  40fc9b:	repz jg 0x40fcd5
  40fc9e:	arpl   WORD PTR [ebp+0x2f74e331],bx
  40fca4:	jb     0x40fc2d
  40fca6:	daa    
  40fca7:	fucomp st(2)
  40fca9:	pop    ebx
  40fcaa:	cli    
  40fcab:	cmp    al,0x33
  40fcad:	sbb    BYTE PTR [edx],bl
  40fcaf:	add    al,0x90
  40fcb1:	adc    edx,DWORD PTR [edx+0x73]
  40fcb4:	sahf   
  40fcb5:	inc    esi
  40fcb6:	push   esi
  40fcb7:	mul    BYTE PTR [eax-0x9]
  40fcba:	add    BYTE PTR [eax-0x4b4988bb],bh
  40fcc0:	xor    BYTE PTR ds:0x896842b6,dh
  40fcc6:	xchg   DWORD PTR [ebp+0x2f],eax
  40fcc9:	push   eax
  40fcca:	xchg   edx,eax
  40fccb:	or     al,0x14
  40fccd:	mov    dl,0xff
  40fccf:	jae    0x40fca0
  40fcd1:	mov    cl,0x8a
  40fcd3:	lahf   
  40fcd4:	rcr    DWORD PTR cs:[edi],cl
  40fcd7:	push   esi
  40fcd8:	arpl   WORD PTR [ebx],ax
  40fcda:	dec    ecx
  40fcdb:	int3   
  40fcdc:	fisubr WORD PTR [ebx-0x3ccccd18]
  40fce2:	stc    
  40fce3:	pop    edi
  40fce4:	add    al,0x97
  40fce6:	nop
  40fce7:	push   cs
  40fce8:	shr    DWORD PTR [ecx-0x14bed512],1
  40fcee:	pusha  
  40fcef:	ss xchg esi,eax
  40fcf1:	aad    0xc6
  40fcf3:	mov    edx,0x9b33c987
  40fcf8:	cmp    eax,0x766ee5af
  40fcfd:	add    esi,DWORD PTR ds:0xd4198d11
  40fd03:	icebp  
  40fd04:	stc    
  40fd05:	(bad)  [ecx+eax*8+0x75928231]
  40fd0c:	jb     0x40fd7c
  40fd0e:	adc    edx,eax
  40fd10:	sub    DWORD PTR [edi+0x7895a588],ebp
  40fd16:	add    al,0x60
  40fd18:	ins    DWORD PTR es:[edi],dx
  40fd19:	push   ebx
  40fd1a:	mov    BYTE PTR [ebp+0x45],dh
  40fd1d:	imul   ebp,DWORD PTR [edi-0x5b],0xffffffa2
  40fd21:	in     eax,dx
  40fd22:	inc    DWORD PTR [edx+0x6c]
  40fd25:	sub    al,0xb5
  40fd27:	add    eax,0x73e8ba99
  40fd2c:	sbb    DWORD PTR [ebp+0x5a91ed2c],0x4e
  40fd33:	dec    esi
  40fd34:	(bad)  
  40fd35:	lock xchg ebx,eax
  40fd37:	out    dx,al
  40fd38:	frndint 
  40fd3a:	ret    0xeb77
  40fd3d:	dec    esp
  40fd3e:	or     cl,BYTE PTR ds:0xa32913f6
  40fd44:	inc    ebx
  40fd45:	lahf   
  40fd46:	sub    bl,dl
  40fd48:	scas   eax,DWORD PTR es:[edi]
  40fd49:	dec    ecx
  40fd4a:	daa    
  40fd4b:	jge    0x40fd68
  40fd4d:	inc    eax
  40fd4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd4f:	mov    BYTE PTR [esi+0x60b3ee83],dl
  40fd55:	mov    al,ds:0x4580d59e
  40fd5a:	xchg   edi,eax
  40fd5b:	(bad)  
  40fd5c:	pop    edi
  40fd5d:	fdiv   QWORD PTR [eax-0x75b69c24]
  40fd63:	sub    eax,0x51b2a204
  40fd68:	popf   
  40fd69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd6a:	popf   
  40fd6b:	mov    bl,0x5f
  40fd6d:	mov    edi,0xc9c31045
  40fd72:	adc    al,al
  40fd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd75:	fnstcw WORD PTR [ecx-0x452d29b2]
  40fd7b:	leave  
  40fd7c:	mov    edx,0x1a34ebdd
  40fd81:	stos   BYTE PTR es:[edi],al
  40fd82:	and    ch,0x59
  40fd85:	or     BYTE PTR [esi-0x28],dh
  40fd88:	or     ax,0x11db
  40fd8c:	imul   esi,edx,0xbbbd694d
  40fd92:	xchg   esi,eax
  40fd93:	lahf   
  40fd94:	push   cs
  40fd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd96:	cmp    edi,esp
  40fd98:	stc    
  40fd99:	xlat   BYTE PTR ds:[ebx]
  40fd9a:	xchg   ebx,eax
  40fd9b:	adc    dh,BYTE PTR [edx*4+0x3ab62f8a]
  40fda2:	xchg   DWORD PTR [esi+eax*8-0x59],ebp
  40fda6:	pop    ebp
  40fda7:	jns    0x40fd78
  40fda9:	test   BYTE PTR [ebx+0x7d],cl
  40fdac:	xchg   edx,eax
  40fdad:	shr    eax,0xe3
  40fdb0:	std    
  40fdb1:	dec    edi
  40fdb2:	add    DWORD PTR [eax],ebx
  40fdb4:	mov    BYTE PTR [esi],ch
  40fdb6:	adc    esi,DWORD PTR [esi-0x6e0931be]
  40fdbc:	mov    ds:0x3f4fea5b,al
  40fdc1:	icebp  
  40fdc2:	add    bl,BYTE PTR [esi+0x56428d3c]
  40fdc8:	jg     0x40fde7
  40fdca:	(bad)  
  40fdcb:	cld    
  40fdcc:	rcl    BYTE PTR [esi],cl
  40fdce:	push   cs
  40fdcf:	add    ebx,edi
  40fdd1:	mov    al,ds:0xf5428eeb
  40fdd6:	cmp    dl,BYTE PTR [edx-0x3e]
  40fdd9:	and    edi,edx
  40fddb:	ins    BYTE PTR es:[edi],dx
  40fddc:	clc    
  40fddd:	push   ebx
  40fdde:	and    BYTE PTR [ecx-0x4],0xf1
  40fde2:	push   0x64
  40fde4:	mov    ebx,0xd53ad5a3
  40fde9:	xchg   dl,cl
  40fdeb:	mov    edx,0x34b4f047
  40fdf0:	adc    al,0xeb
  40fdf2:	pop    ds
  40fdf3:	dec    edi
  40fdf4:	out    0x88,eax
  40fdf6:	and    ebp,edi
  40fdf8:	xchg   edx,eax
  40fdf9:	add    eax,esi
  40fdfb:	call   DWORD PTR [esi]
  40fdfd:	and    bh,BYTE PTR [esi]
  40fdff:	pop    edi
  40fe00:	jl     0x40fe6b
  40fe02:	sbb    eax,0xd1e11048
  40fe07:	lods   al,BYTE PTR ds:[esi]
  40fe08:	in     al,dx
  40fe09:	loop   0x40fe15
  40fe0b:	mov    ch,0x36
  40fe0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe0e:	pop    ss
  40fe0f:	mov    ecx,0xeb7a59a2
  40fe14:	mov    ah,0x65
  40fe16:	pop    edi
  40fe17:	adc    ebx,DWORD PTR [edi+ecx*8-0x7b]
  40fe1b:	and    ebx,edx
  40fe1d:	jo     0x40fdc2
  40fe1f:	cmp    BYTE PTR [ebp-0x71],ch
  40fe22:	inc    edi
  40fe23:	xchg   edi,eax
  40fe24:	iret   
  40fe25:	std    
  40fe26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe27:	xchg   ecx,eax
  40fe28:	push   ebx
  40fe29:	test   eax,0x88d507a9
  40fe2e:	sahf   
  40fe2f:	push   ebp
  40fe30:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40fe32:	sbb    DWORD PTR [ebx+0x1bc3fa1a],eax
  40fe38:	xor    BYTE PTR [edx],dh
  40fe3a:	repz and DWORD PTR [edi+ebx*8+0x6a6916b0],esi
  40fe42:	rcl    BYTE PTR ds:0xbaf826c4,1
  40fe48:	inc    edx
  40fe49:	inc    edx
  40fe4a:	pushf  
  40fe4b:	shl    BYTE PTR [ecx],1
  40fe4d:	fnstenv [ecx+eax*4-0x4af19319]
  40fe54:	or     edx,DWORD PTR [edx+0x4504c8e4]
  40fe5a:	xor    BYTE PTR [ecx+0x26eea41a],al
  40fe60:	xchg   ebp,eax
  40fe61:	or     al,0x9b
  40fe63:	in     eax,0xb1
  40fe65:	jecxz  0x40fe89
  40fe67:	xchg   ebp,eax
  40fe68:	dec    ebx
  40fe69:	pop    eax
  40fe6a:	in     al,dx
  40fe6b:	int3   
  40fe6c:	jp     0x40fe79
  40fe6e:	adc    al,0xd6
  40fe70:	dec    di
  40fe72:	pushf  
  40fe73:	imul   ecx,DWORD PTR [esi+ecx*1-0x66],0x3c
  40fe78:	out    0xd2,eax
  40fe7a:	cmp    DWORD PTR [edx-0x25],eax
  40fe7d:	stos   BYTE PTR es:[edi],al
  40fe7e:	and    ebp,edi
  40fe80:	cmp    ch,BYTE PTR ds:0x7680847f
  40fe86:	adc    al,0xfb
  40fe88:	sbb    dh,cl
  40fe8a:	les    eax,FWORD PTR [esi-0x6650cfd]
  40fe90:	pusha  
  40fe91:	call   0x4f3d:0xb517041c
  40fe98:	ret    
  40fe99:	inc    edx
  40fe9a:	xchg   esp,eax
  40fe9b:	das    
  40fe9c:	(bad)  
  40fe9d:	mov    ch,0xce
  40fe9f:	aad    0x5c
  40fea1:	dec    esp
  40fea2:	pop    ecx
  40fea3:	loopne 0x40ff10
  40fea5:	enter  0x73bc,0x1e
  40fea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feaa:	pop    ecx
  40feab:	popf   
  40feac:	lea    esi,[ebx+0x1c]
  40feaf:	shr    DWORD PTR [ebp-0x7757134b],0xd8
  40feb6:	xlat   BYTE PTR ds:[ebx]
  40feb7:	cs pushf 
  40feb9:	push   cs
  40feba:	and    eax,0xbb795a07
  40febf:	add    ebp,DWORD PTR [esi]
  40fec1:	call   0x764c6fe3
  40fec6:	cld    
  40fec7:	mul    DWORD PTR [ebx]
  40fec9:	pop    ecx
  40feca:	xor    al,0x82
  40fecc:	fcomi  st,st(2)
  40fece:	mov    ebx,0x50a2cb6d
  40fed3:	sub    edi,esi
  40fed5:	test   al,0xeb
  40fed7:	push   cs
  40fed8:	sbb    al,dh
  40feda:	mov    ebp,0x1f1a392b
  40fedf:	ins    BYTE PTR es:[edi],dx
  40fee0:	cli    
  40fee1:	jne    0x40fea8
  40fee3:	cmc    
  40fee4:	xchg   edi,eax
  40fee5:	mov    eax,ds:0xbe407ac6
  40feea:	or     DWORD PTR [edi-0x1b],eax
  40feed:	or     BYTE PTR [ebx-0x704192d8],0x10
  40fef4:	mov    esp,0xc4bccdc8
  40fef9:	data16 imul BYTE PTR [esi-0xa]
  40fefd:	mov    dl,0xa0
  40feff:	xchg   ebx,eax
  40ff00:	inc    ecx
  40ff01:	xchg   esp,eax
  40ff02:	fldenv [edi+0x2a]
  40ff05:	xchg   esp,eax
  40ff06:	mov    DWORD PTR gs:0xd14537,ebx
  40ff0d:	test   DWORD PTR ds:0xff787059,0x78ac9312
  40ff17:	push   es
  40ff18:	mov    ss,WORD PTR [ebp-0x56]
  40ff1b:	inc    ebx
  40ff1c:	pop    ebp
  40ff1d:	dec    edi
  40ff1e:	out    0xef,al
  40ff20:	and    DWORD PTR [ebx-0x76],0xffffff97
  40ff24:	sbb    eax,0x207d3413
  40ff29:	or     eax,0x5ab25ced
  40ff2e:	lods   eax,DWORD PTR ds:[esi]
  40ff2f:	adc    al,0x3e
  40ff31:	daa    
  40ff32:	cs out 0xe7,al
  40ff35:	adc    al,0xbc
  40ff37:	push   ebx
  40ff38:	aas    
  40ff39:	aad    0x70
  40ff3b:	xor    BYTE PTR [esi+0x31d9c0d0],al
  40ff41:	retf   
  40ff42:	lahf   
  40ff43:	ds inc ebx
  40ff45:	iret   
  40ff46:	push   ebx
  40ff47:	mov    ds:0xe4b467a,eax
  40ff4c:	pop    ecx
  40ff4d:	xor    eax,0x8894e1aa
  40ff52:	call   0xd5e72e22
  40ff57:	xchg   ebx,eax
  40ff58:	aad    0x6b
  40ff5a:	fld    TBYTE PTR ds:0xa8fac4b9
  40ff60:	jbe    0x40ffd7
  40ff62:	jmp    0x85329199
  40ff67:	or     al,0x51
  40ff69:	and    al,0xf
  40ff6b:	sub    ah,al
  40ff6d:	aam    0x52
  40ff6f:	mov    esi,0xa5111ec0
  40ff74:	div    BYTE PTR [eax-0x19b58f36]
  40ff7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff7b:	wrmsr  
  40ff7d:	stos   BYTE PTR es:[edi],al
  40ff7e:	fst    QWORD PTR [ebx-0x31b91ffc]
  40ff84:	adc    DWORD PTR [ebp-0x3e],0xffffff84
  40ff88:	arpl   WORD PTR [eax],si
  40ff8a:	stc    
  40ff8b:	sbb    BYTE PTR [ecx+edx*4],al
  40ff8e:	mov    bh,0xda
  40ff90:	sbb    BYTE PTR [ebp+eax*2-0x44],ch
  40ff94:	add    ebp,DWORD PTR ds:0x9057bc10
  40ff9a:	xor    DWORD PTR fs:[edi+0x61],esp
  40ff9e:	dec    esi
  40ff9f:	mov    ecx,0x9ba0abb0
  40ffa4:	xor    al,0x11
  40ffa6:	sbb    edi,edi
  40ffa8:	push   esp
  40ffa9:	mov    bl,0x8f
  40ffab:	or     BYTE PTR [esi+0x5e],0x8c
  40ffaf:	into   
  40ffb0:	lods   al,BYTE PTR ds:[esi]
  40ffb1:	jns    0x40ff87
  40ffb3:	ds push ecx
  40ffb5:	adc    eax,0xaf5ca7
  40ffba:	jl     0x410023
  40ffbc:	and    eax,DWORD PTR [esi]
  40ffbe:	pushf  
  40ffbf:	pop    ebp
  40ffc0:	cmp    DWORD PTR [eax+0x7b],eax
  40ffc3:	popf   
  40ffc4:	mov    edx,DWORD PTR [ebx+0x48]
  40ffc7:	data16 bnd je 0x40ffa1
  40ffcb:	mov    cl,0x27
  40ffcd:	cdq    
  40ffce:	mov    eax,ds:0x51625eab
  40ffd3:	push   ss
  40ffd4:	pop    ss
  40ffd5:	and    ebp,esi
  40ffd7:	cmp    ebp,esp
  40ffd9:	test   eax,0xe4c77c7c
  40ffde:	stos   DWORD PTR es:[edi],eax
  40ffdf:	lds    edi,FWORD PTR [edx+0x7bbdb6c3]
  40ffe5:	cmc    
  40ffe6:	mov    ecx,0xa4d46b0c
  40ffeb:	add    ebp,DWORD PTR [ebp+0x25678b51]
  40fff1:	out    0x74,eax
  40fff3:	mov    DWORD PTR [ebx-0x5c],ebx
  40fff6:	test   al,0x33
  40fff8:	adc    DWORD PTR [ebx],edi
  40fffa:	jne    0x40ffe2
  40fffc:	call   0x1a29:0xa8ed3b70
  410003:	fs xchg ebp,eax
  410005:	add    eax,0xce8ac342
  41000a:	adc    ebp,0xcd07901
  410010:	bound  edx,QWORD PTR [edx+eiz*4-0x1a]
  410014:	cmp    ah,bh
  410016:	mov    ds:0x2b567051,al
  41001b:	pop    esi
  41001c:	adc    ah,BYTE PTR [esi+0x6a]
  41001f:	jo     0x41005e
  410021:	push   es
  410022:	lea    esp,[esp+ebx*4]
  410025:	jno    0x410028
  410027:	shl    bl,cl
  410029:	xchg   esp,eax
  41002a:	mov    DWORD PTR [esi-0x28763f06],esp
  410030:	fdivr  st(3),st
  410032:	in     eax,0xfa
  410034:	fcmovb st,st(4)
  410036:	mov    edx,0x2f08e82c
  41003b:	iret   
  41003c:	mov    DWORD PTR [eax-0x6c9665d8],edi
  410042:	pop    eax
  410043:	push   ds
  410044:	cmp    dh,BYTE PTR [edx-0x4b]
  410047:	sar    BYTE PTR [edi+0x5c],cl
  41004a:	rcl    esi,cl
  41004c:	push   ds
  41004d:	leave  
  41004e:	(bad)  
  41004f:	fs inc ebp
  410051:	jmp    0x80d050
  410056:	aaa    
  410057:	in     eax,dx
  410058:	inc    edi
  410059:	mov    edx,0x5d0e8840
  41005e:	mov    bh,0xdf
  410060:	jge    0x410040
  410062:	repz ds mov ecx,0xd8b0fbd5
  410069:	out    dx,al
  41006a:	adc    esi,edi
  41006c:	pop    edx
  41006d:	dec    edi
  41006e:	mov    cl,0xaa
  410070:	jb     0x410080
  410072:	push   edi
  410073:	retf   
  410074:	push   ds
  410075:	nop
  410076:	push   edi
  410077:	int    0xbb
  410079:	mov    ebx,ebx
  41007b:	xor    eax,0x72f1c753
  410080:	std    
  410081:	cmp    dh,BYTE PTR [ebx-0x32]
  410084:	fistp  WORD PTR [edx]
  410086:	jbe    0x41009e
  410088:	ficomp DWORD PTR [ebp+ebx*4+0x2]
  41008c:	dec    eax
  41008d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41008e:	dec    esi
  41008f:	mul    BYTE PTR [ecx-0x28]
  410092:	stos   BYTE PTR es:[edi],al
  410093:	inc    ebx
  410094:	fdiv   DWORD PTR [esp+edi*8]
  410097:	push   esi
  410098:	jmp    0xc93964c2
  41009d:	dec    eax
  41009e:	pop    es
  41009f:	inc    edi
  4100a0:	loopne 0x4100b4
  4100a2:	jne    0x4100ed
  4100a4:	es aad 0xc6
  4100a7:	je     0x41002a
  4100a9:	mov    eax,0xf6dbe680
  4100ae:	leave  
  4100af:	dec    edx
  4100b0:	xor    ebp,edi
  4100b2:	cmp    esi,DWORD PTR [eax+ecx*4-0x322df20c]
  4100b9:	push   eax
  4100ba:	repnz ficomp DWORD PTR [esi-0x3b604427]
  4100c1:	shl    DWORD PTR [esi+esi*4-0x2f504db8],1
  4100c8:	fabs   
  4100ca:	mov    al,BYTE PTR [ebp-0x3d4d8bf1]
  4100d0:	cdq    
  4100d1:	jns    0x410129
  4100d3:	mov    esi,0x48dcf52e
  4100d8:	adc    al,0x9c
  4100da:	in     eax,0x84
  4100dc:	mov    bh,0xdd
  4100de:	loope  0x4100bd
  4100e0:	in     al,0x41
  4100e2:	xlat   BYTE PTR ds:[ebx]
  4100e3:	jno    0x410148
  4100e5:	fwait
  4100e6:	xchg   esp,eax
  4100e7:	xor    edx,DWORD PTR [ecx]
  4100e9:	scas   eax,DWORD PTR es:[edi]
  4100ea:	xor    DWORD PTR [edx+0x36b3a774],ecx
  4100f0:	pop    esp
  4100f1:	dec    ah
  4100f3:	xchg   ebp,eax
  4100f4:	push   ecx
  4100f5:	mov    DWORD PTR [ebp+0x5a48c91d],edx
  4100fb:	dec    esp
  4100fc:	or     ebx,DWORD PTR [eax-0x6e13fc3d]
  410102:	in     eax,0x55
  410104:	into   
  410105:	(bad)  
  410106:	ror    BYTE PTR [ecx],cl
  410108:	xor    ebx,DWORD PTR [eax-0x6fb721c6]
  41010e:	(bad)  
  410110:	daa    
  410111:	jo     0x41018e
  410113:	mov    ebp,0xaec060a2
  410118:	pop    edx
  410119:	call   0x1de8:0xfc81b407
  410120:	and    eax,0xd98010d4
  410125:	(bad)  
  410126:	fisttp QWORD PTR [ebp-0x242b93f4]
  41012c:	imul   edi,DWORD PTR [ebx],0x7c4bec53
  410132:	lods   eax,DWORD PTR ds:[esi]
  410133:	leave  
  410134:	sti    
  410135:	ds dec ebp
  410137:	fadd   QWORD PTR ds:0xf0207156
  41013d:	out    dx,eax
  41013e:	(bad)  
  410140:	xchg   eax,edi
  410142:	adc    ebx,ebp
  410144:	pusha  
  410145:	loop   0x410190
  410147:	gs mov ah,0x7a
  41014a:	jnp    0x410171
  41014c:	gs retf 0xe5a5
  410150:	popa   
  410151:	(bad)  
  410152:	mov    esi,0x819f22cc
  410157:	mov    dl,0xa9
  410159:	cmc    
  41015a:	mov    dh,0x23
  41015c:	ss push esi
  41015e:	scas   al,BYTE PTR es:[edi]
  41015f:	hlt    
  410160:	sbb    BYTE PTR ss:[edi],bh
  410163:	add    ebp,esi
  410165:	push   edi
  410166:	out    dx,eax
  410167:	sub    ecx,eax
  410169:	sbb    eax,0x3aea880
  41016e:	fdiv   st(6),st
  410170:	dec    edx
  410171:	push   esi
  410172:	inc    edx
  410173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410174:	(bad)  
  410175:	enter  0x4c09,0x8e
  410179:	xor    ch,cl
  41017b:	push   ebp
  41017c:	push   cs
  41017d:	and    BYTE PTR [ebx],0x37
  410180:	sbb    al,0x18
  410182:	dec    ecx
  410183:	or     eax,0x30ca340d
  410188:	out    dx,al
  410189:	or     al,0x33
  41018b:	imul   ebp,DWORD PTR [ebp-0x53],0xd688d801
  410192:	out    0xb9,eax
  410194:	loop   0x4101d1
  410196:	add    edx,DWORD PTR [edi-0x2e7aeef6]
  41019c:	clc    
  41019d:	jecxz  0x410181
  41019f:	arpl   WORD PTR [ecx+eiz*4+0x19],di
  4101a3:	push   ebx
  4101a4:	call   0xa5244fcb
  4101a9:	or     esi,DWORD PTR [ecx]
  4101ab:	sub    eax,0x7c30b1ed
  4101b0:	pop    edi
  4101b1:	gs pop eax
  4101b3:	add    bl,ah
  4101b5:	add    al,0xc
  4101b7:	or     al,0x5a
  4101b9:	sub    bl,BYTE PTR [ebp-0x181e601d]
  4101bf:	mov    BYTE PTR [edx],cl
  4101c1:	lahf   
  4101c2:	sub    edx,0x2fa05870
  4101c8:	cmp    esi,DWORD PTR ds:0x5997abe1
  4101ce:	sahf   
  4101cf:	push   ebp
  4101d0:	std    
  4101d1:	mov    ecx,edi
  4101d3:	aad    0x6d
  4101d5:	mov    dh,0xb0
  4101d7:	rcr    BYTE PTR [ebp-0x5e],cl
  4101da:	cdq    
  4101db:	pop    edi
  4101dc:	loopne 0x410179
  4101de:	cmp    dl,BYTE PTR [ebx-0xcefd977]
  4101e4:	push   cs
  4101e5:	lock dec ecx
  4101e7:	stos   DWORD PTR es:[edi],eax
  4101e8:	aam    0xa
  4101ea:	pop    es
  4101eb:	push   es
  4101ec:	ja     0x410221
  4101ee:	push   edx
  4101ef:	mov    ds:0x3cf84dac,eax
  4101f4:	mov    ebp,0x2b030bf8
  4101f9:	idiv   DWORD PTR [esi+0x4dbdb907]
  4101ff:	fsubr  QWORD PTR [esi-0x1f]
  410202:	push   ebx
  410203:	mov    ch,0x4d
  410205:	inc    esp
  410206:	xor    al,0x90
  410208:	imul   eax,DWORD PTR [esi-0x5],0xffffffd2
  41020c:	ins    DWORD PTR es:[edi],dx
  41020d:	mov    ds:0x656057e0,al
  410212:	cdq    
  410213:	cmp    al,0xda
  410215:	or     eax,0xa84e932b
  41021a:	mov    dh,0x95
  41021c:	add    eax,eax
  41021e:	or     cl,BYTE PTR [edx+0x77]
  410221:	jp     0x4101dc
  410223:	test   al,0xb9
  410225:	call   0x61c0cb80
  41022a:	mov    esp,0xdb63f368
  41022f:	(bad)  
  410230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410231:	cwde   
  410232:	jb     0x4101e9
  410234:	jne    0x410233
  410236:	sub    BYTE PTR [edx+0x22],ah
  410239:	push   DWORD PTR [eax+ecx*8-0x41]
  41023d:	ret    0x78ba
  410240:	nop
  410241:	hlt    
  410242:	out    dx,eax
  410243:	jnp    0x41025c
  410245:	popa   
  410246:	stos   BYTE PTR es:[edi],al
  410247:	sub    al,0xb4
  410249:	icebp  
  41024a:	pop    es
  41024b:	(bad)  
  41024c:	test   al,0x20
  41024e:	pop    ds
  41024f:	mov    cl,0x95
  410251:	jge    0x41024f
  410253:	cli    
  410254:	mov    DWORD PTR [ebx+0x2029d970],ebp
  41025a:	out    dx,al
  41025b:	jnp    0x410216
  41025d:	or     eax,DWORD PTR [eax-0x6aef8135]
  410263:	sbb    dl,BYTE PTR [edi-0x509bca3b]
  410269:	imul   ecx,DWORD PTR [esi-0x38756907],0x8bde9ee9
  410273:	mov    esp,0xf6832b74
  410278:	sub    ch,BYTE PTR [edx]
  41027a:	mov    edi,0xebdd1b3b
  41027f:	or     al,0x8b
  410281:	(bad)  
  410282:	push   ebx
  410283:	rcl    BYTE PTR [eax-0x3d845a08],0x89
  41028a:	push   ds
  41028b:	pop    ebx
  41028c:	xor    BYTE PTR [esi+ecx*8-0x5fe6b0a4],bl
  410293:	push   ecx
  410294:	cmp    ah,bl
  410296:	add    DWORD PTR [ebp-0x44],0x2d
  41029a:	ds cli 
  41029c:	je     0x41029c
  41029e:	jmp    0x4102b5
  4102a0:	shl    ebp,0x91
  4102a3:	mov    al,0xa
  4102a5:	adc    eax,0x75dcb4c5
  4102aa:	pop    es
  4102ab:	dec    edi
  4102ac:	mov    ah,0x60
  4102ae:	stos   BYTE PTR es:[edi],al
  4102af:	test   al,dh
  4102b1:	adc    eax,0x686759dc
  4102b6:	inc    ebp
  4102b7:	int    0xe5
  4102b9:	jge    0x410336
  4102bb:	sub    al,0xed
  4102bd:	loopne 0x4102c8
  4102bf:	dec    ebp
  4102c0:	dec    ebp
  4102c1:	mov    al,ds:0x14d01584
  4102c6:	xor    eax,0x2d591216
  4102cb:	adc    eax,0x2fbac2dd
  4102d0:	test   cl,cl
  4102d2:	outs   dx,BYTE PTR ds:[esi]
  4102d3:	repz ss lahf 
  4102d6:	dec    eax
  4102d7:	push   ecx
  4102d8:	pop    ss
  4102d9:	jnp    0x4102df
  4102db:	cmp    DWORD PTR ds:0xee9eed7,esi
  4102e1:	jbe    0x4102d3
  4102e3:	cmc    
  4102e4:	inc    edx
  4102e5:	mov    esp,0x4720a2f3
  4102ea:	fcom   QWORD PTR [edx]
  4102ec:	jmp    0x4102b5
  4102ee:	mov    ch,0x73
  4102f0:	xor    edx,DWORD PTR [esi+edi*1]
  4102f3:	xor    BYTE PTR [edx+0xcd6aac2],0xfe
  4102fa:	mov    ch,0x2d
  4102fc:	push   ds
  4102fd:	push   esp
  4102fe:	je     0x410330
  410300:	(bad)  
  410301:	or     BYTE PTR [esi],ah
  410303:	mov    BYTE PTR [ebp+0x6bb659a1],bl
  410309:	jmp    0x84390b48
  41030e:	aam    0x9e
  410310:	xchg   ebx,eax
  410311:	sbb    dh,BYTE PTR [ecx+0x74e5816f]
  410317:	push   es
  410318:	sbb    BYTE PTR [ecx],dl
  41031a:	mov    al,0xaf
  41031c:	sub    eax,0x6aace456
  410321:	cld    
  410322:	add    eax,0xe0bd8feb
  410327:	ins    DWORD PTR es:[edi],dx
  410328:	cmp    DWORD PTR [eax],ecx
  41032a:	sbb    DWORD PTR [eax+edx*8-0x7925c1db],eax
  410331:	push   ds
  410332:	or     al,0xc1
  410334:	out    0x1b,al
  410336:	add    cl,cl
  410338:	cmp    eax,0xd0bfc5a
  41033d:	cdq    
  41033e:	jmp    0x1cefaff9
  410343:	dec    edx
  410344:	ficomp DWORD PTR [ebx]
  410346:	pushf  
  410347:	rol    BYTE PTR [ecx+0x2699d299],0xe7
  41034e:	mov    ecx,0xc167d91e
  410353:	lock cld 
  410355:	aad    0x30
  410357:	jmp    0x410383
  410359:	stos   BYTE PTR es:[edi],al
  41035a:	lods   eax,DWORD PTR ds:[esi]
  41035b:	ret    
  41035c:	daa    
  41035d:	push   cs
  41035e:	pop    esp
  41035f:	mov    WORD PTR [ebx+0x73],fs
  410362:	dec    edx
  410363:	cmp    esi,edx
  410365:	in     eax,dx
  410366:	sub    BYTE PTR [eax+0x2b],bh
  410369:	cld    
  41036a:	mov    dh,cl
  41036c:	cmp    al,0xee
  41036e:	fdiv   st,st(0)
  410370:	fld    DWORD PTR [ebp-0x7e]
  410373:	and    DWORD PTR [ebx+0x43],esi
  410376:	add    al,0x5
  410378:	xchg   BYTE PTR [ecx+0x2f61e456],ch
  41037e:	xor    esi,DWORD PTR [ecx+0x48]
  410381:	lds    ecx,FWORD PTR [ebp+0x3e]
  410384:	xlat   BYTE PTR ds:[ebx]
  410385:	mov    ebx,0xd49d205f
  41038a:	pusha  
  41038b:	cwde   
  41038c:	cs and al,0x9b
  41038f:	cmp    bl,bl
  410391:	adc    BYTE PTR [ebp-0x67],bh
  410394:	fild   WORD PTR [esi+0x38d1f6a7]
  41039a:	and    eax,0x7bb797a6
  41039f:	mov    eax,ecx
  4103a1:	loop   0x410335
  4103a3:	ins    DWORD PTR es:[edi],dx
  4103a4:	retf   0x843f
  4103a7:	inc    edx
  4103a8:	mov    bh,0xca
  4103aa:	pop    esp
  4103ab:	repnz sub al,0xe4
  4103ae:	pop    esp
  4103af:	in     al,dx
  4103b0:	jl     0x4103b9
  4103b2:	pop    es
  4103b3:	ss jb  0x4103df
  4103b6:	mov    dl,0x4a
  4103b8:	mov    dl,0xa3
  4103ba:	inc    esi
  4103bb:	mov    dh,0xe4
  4103bd:	adc    esi,0x4d
  4103c0:	xchg   BYTE PTR [esi-0x517aaac6],dl
  4103c6:	xor    BYTE PTR [ebp-0x7a],bh
  4103c9:	cmp    ch,bl
  4103cb:	mov    esi,0xbe5fc3a5
  4103d0:	(bad)  
  4103d1:	push   ebp
  4103d2:	das    
  4103d3:	push   edx
  4103d4:	add    al,0x68
  4103d6:	xchg   ebp,eax
  4103d7:	xchg   DWORD PTR [edi],esi
  4103d9:	add    al,0xda
  4103db:	lods   eax,DWORD PTR ds:[esi]
  4103dc:	sahf   
  4103dd:	and    BYTE PTR [ebx],0x8a
  4103e0:	stc    
  4103e1:	push   esi
  4103e2:	push   0x88fbbfdd
  4103e7:	aas    
  4103e8:	xor    BYTE PTR fs:[eax-0x277c3222],cl
  4103ef:	cmp    edi,edi
  4103f1:	cwde   
  4103f2:	lods   al,BYTE PTR ds:[esi]
  4103f3:	xchg   ecx,eax
  4103f4:	hlt    
  4103f5:	adc    eax,eax
  4103f7:	ss or  edi,esp
  4103fa:	sar    DWORD PTR [edx],0x85
  4103fd:	mov    DWORD PTR [edx-0x68],ecx
  410400:	lds    ebx,FWORD PTR ds:0xbaf753f1
  410406:	ins    DWORD PTR es:[edi],dx
  410407:	aam    0x27
  410409:	cmp    edx,ebp
  41040b:	stos   BYTE PTR es:[edi],al
  41040c:	inc    eax
  41040d:	es dec ecx
  41040f:	imul   eax,DWORD PTR [ebp+eax*4+0xd],0x7c
  410414:	jns    0x4103dc
  410416:	js     0x4103f0
  410418:	enter  0x5a45,0x68
  41041c:	add    DWORD PTR [eax-0x112efbbf],esi
  410422:	ret    
  410423:	xchg   esi,eax
  410424:	dec    ebx
  410425:	inc    esp
  410426:	std    
  410427:	into   
  410428:	add    eax,0x71b8dd0
  41042d:	cli    
  41042e:	and    eax,0x5ac19698
  410433:	jbe    0x410496
  410435:	jb     0x4103c7
  410437:	sbb    DWORD PTR [edi+edx*4+0x7],ebp
  41043b:	das    
  41043c:	rol    BYTE PTR [ebx+0x7295cdbe],0xa3
  410443:	ss retf 0x6bc6
  410447:	and    BYTE PTR [edx],0xf
  41044a:	ja     0x410416
  41044c:	nop
  41044d:	cld    
  41044e:	cmp    esp,edx
  410450:	inc    esi
  410451:	xor    ah,BYTE PTR [ecx]
  410453:	ds pop ss
  410455:	jmp    0x51d1f682
  41045a:	inc    edi
  41045b:	sahf   
  41045c:	repnz daa 
  41045e:	xchg   ebp,eax
  41045f:	sbb    eax,0xcc30bae1
  410464:	les    eax,FWORD PTR [edx+0x6730d8bb]
  41046a:	adc    BYTE PTR [esi-0x3d],bh
  41046d:	daa    
  41046e:	std    
  41046f:	pushf  
  410470:	fcom   DWORD PTR [edi-0x14]
  410473:	adc    DWORD PTR [edi-0x47444b7d],ebp
  410479:	iret   
  41047a:	js     0x410489
  41047c:	ds xor eax,0xba156403
  410482:	gs loop 0x41049a
  410485:	pusha  
  410486:	cmp    esi,DWORD PTR [ebx-0x6c6c5269]
  41048c:	mov    al,ds:0xd6f22b90
  410491:	jns    0x41045f
  410493:	xor    al,0xc6
  410495:	lahf   
  410496:	pop    ebx
  410497:	mov    ebx,0xfae270fd
  41049c:	ror    BYTE PTR [edx-0x13],1
  41049f:	jle    0x41050f
  4104a1:	pusha  
  4104a2:	add    esi,DWORD PTR ss:[edi-0x148cd559]
  4104a9:	neg    DWORD PTR [edi-0x78d92660]
  4104af:	adc    eax,0xe0341bfc
  4104b4:	or     eax,0xe3e30c44
  4104b9:	bound  edx,QWORD PTR [eax-0x77]
  4104bc:	out    0x3e,eax
  4104be:	cmp    dh,BYTE PTR [eax-0x627a6c20]
  4104c4:	rcl    BYTE PTR [edx+0x5811ab2f],cl
  4104ca:	addr16 mov eax,ds:0x482a
  4104ce:	xor    BYTE PTR ds:0xabac5b6,dh
  4104d4:	or     al,0x9
  4104d6:	push   cs
  4104d7:	adc    eax,0xea277e22
  4104dc:	(bad)  
  4104dd:	stc    
  4104de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104df:	lods   eax,DWORD PTR ds:[esi]
  4104e0:	bound  edx,QWORD PTR [edi-0x78]
  4104e3:	hlt    
  4104e4:	loopne 0x41051b
  4104e6:	out    0x74,al
  4104e8:	jmp    0x399e:0x2eba2a8d
  4104ef:	mov    ds,WORD PTR [edx-0x6b598c3]
  4104f5:	imul   ecx,DWORD PTR es:[edi+edx*1],0xd946c60d
  4104fd:	jns    0x410549
  4104ff:	frstor [ebx-0x58]
  410502:	popa   
  410503:	pusha  
  410504:	and    dh,BYTE PTR [eax-0x40]
  410507:	adc    DWORD PTR [eax+edx*1],ebp
  41050a:	xor    BYTE PTR [ecx+0x58],dl
  41050d:	fs loop 0x4104be
  410510:	ret    0x53f5
  410513:	xchg   ebx,eax
  410514:	xor    eax,0x615cc210
  410519:	and    BYTE PTR [ecx],0x9c
  41051c:	popa   
  41051d:	stc    
  41051e:	call   0x8dae:0xb2205323
  410525:	sub    al,0x34
  410527:	mov    ds:0x8a147bb3,eax
  41052c:	out    0x56,al
  41052e:	xlat   BYTE PTR ds:[ebx]
  41052f:	jne    0x4104ed
  410531:	cmp    al,0x51
  410533:	call   0x673cbe03
  410538:	ud2    
  41053a:	mov    esi,0x470cc936
  41053f:	int3   
  410540:	pop    edi
  410541:	aaa    
  410542:	shl    ecx,1
  410544:	push   esi
  410545:	sub    esi,DWORD PTR [esi+0x1]
  410548:	imul   eax,DWORD PTR ds:0x332eae07,0xffffff9a
  41054f:	dec    edx
  410550:	std    
  410551:	(bad)  
  410552:	cmc    
  410553:	aas    
  410554:	xor    BYTE PTR [eax+0xf],dh
  410557:	push   0xffffff98
  410559:	jns    0x410517
  41055b:	les    edi,FWORD PTR [edi+ecx*1]
  41055e:	inc    edi
  41055f:	(bad)  
  410560:	retf   
  410561:	inc    edx
  410562:	adc    ch,BYTE PTR [ebx+edx*2]
  410565:	sahf   
  410566:	bound  ebx,QWORD PTR ds:0xab9bf76
  41056c:	and    al,0x78
  41056e:	cmp    BYTE PTR [edi],ah
  410570:	ret    
  410571:	add    esi,edx
  410573:	xchg   ebp,eax
  410574:	inc    edx
  410575:	xor    BYTE PTR [ecx+esi*2-0x3ce7901e],cl
  41057c:	dec    ebp
  41057d:	mov    dh,0x70
  41057f:	jl     0x41052e
  410581:	inc    esp
  410582:	js     0x410571
  410584:	leave  
  410585:	mov    eax,0x26ee33f5
  41058a:	or     al,0x4
  41058c:	and    dl,ch
  41058e:	fiadd  DWORD PTR [ebp-0x63]
  410591:	(bad)  
  410592:	pop    edi
  410593:	jo     0x4105ee
  410595:	repz jge 0x4105b7
  410598:	fild   QWORD PTR [edi+0x56]
  41059b:	jae    0x410561
  41059d:	push   ebx
  41059e:	or     DWORD PTR [ebp-0x25],ecx
  4105a1:	pop    ebp
  4105a2:	outs   dx,BYTE PTR ds:[esi]
  4105a3:	sub    esi,ecx
  4105a5:	int    0x9f
  4105a7:	jl     0x410620
  4105a9:	(bad)  
  4105aa:	fisub  WORD PTR [ebp+0x4d56fc11]
  4105b0:	xor    eax,DWORD PTR [esi-0x6b23862f]
  4105b6:	mov    ds:0xb1a92ae5,eax
  4105bb:	icebp  
  4105bc:	stos   DWORD PTR es:[edi],eax
  4105bd:	in     al,dx
  4105be:	cwde   
  4105bf:	dec    ebp
  4105c0:	addr16 dec ebx
  4105c2:	push   eax
  4105c3:	mov    ds:0xac502ec3,eax
  4105c8:	push   ds
  4105c9:	mov    cl,0x1b
  4105cb:	int3   
  4105cc:	retf   0xb680
  4105cf:	xchg   ecx,eax
  4105d0:	inc    eax
  4105d1:	mov    gs,WORD PTR [esi+0xee22c6f]
  4105d7:	dec    edx
  4105d8:	call   0xca5c:0xb80f87b0
  4105df:	push   edi
  4105e0:	jnp    0x4105f2
  4105e2:	arpl   WORD PTR [edx],sp
  4105e4:	add    al,0xdf
  4105e6:	fstp   QWORD PTR [esi+edx*1]
  4105e9:	dec    eax
  4105ea:	inc    esi
  4105eb:	or     al,BYTE PTR [ebx-0x64]
  4105ee:	push   edx
  4105ef:	arpl   WORD PTR [edx+0x56a87261],si
  4105f5:	pop    ebx
  4105f6:	das    
  4105f7:	xor    DWORD PTR [esi],ebx
  4105f9:	sub    eax,0x96438145
  4105fe:	int3   
  4105ff:	jmp    0x6bd1:0x8ad0f8c3
  410606:	ds mov ecx,esp
  410609:	ror    BYTE PTR [edx+0x5f0ff9ae],cl
  41060f:	push   esp
  410610:	lock test dl,ah
  410613:	popf   
  410614:	push   ss
  410615:	mov    ebp,0x9d336f52
  41061a:	cmp    bl,ch
  41061c:	xor    BYTE PTR [edx],0xe3
  41061f:	arpl   WORD PTR [edx-0x6b],ax
  410622:	stos   DWORD PTR es:[edi],eax
  410623:	aas    
  410624:	jle    0x410660
  410626:	mov    al,0xd0
  410628:	(bad)  
  410629:	push   esi
  41062a:	mov    edi,0x1ed161f4
  41062f:	sti    
  410630:	sub    eax,0x291b4b23
  410635:	ret    
  410636:	pushf  
  410637:	fld    DWORD PTR [edx+0x16]
  41063a:	adc    DWORD PTR [edx-0x53],eax
  41063d:	test   al,0x93
  41063f:	cmp    DWORD PTR [edi],0xffffffc2
  410642:	xor    DWORD PTR [edi-0x42],edx
  410645:	fld    TBYTE PTR [eax+0x197aa9b8]
  41064b:	mov    ebp,0xd0a62af0
  410650:	stos   BYTE PTR es:[edi],al
  410651:	inc    edx
  410652:	mov    esi,0x96b3f393
  410657:	xchg   esp,eax
  410658:	arpl   ax,sp
  41065a:	aas    
  41065b:	jge    0x41064c
  41065d:	cld    
  41065e:	pop    edi
  41065f:	jb     0x410681
  410661:	xor    al,BYTE PTR [edx+0x4c]
  410664:	aas    
  410665:	popf   
  410666:	ficom  WORD PTR [edi-0x7ccf29a6]
  41066c:	sbb    dl,BYTE PTR [esi-0x71]
  41066f:	dec    ecx
  410670:	scas   al,BYTE PTR es:[edi]
  410671:	outs   dx,BYTE PTR ds:[esi]
  410672:	out    0x75,eax
  410674:	imul   ecx,ebp,0xffffff97
  410677:	xor    eax,0x3e03b502
  41067c:	mov    esp,0x1913ccd7
  410681:	retf   0xcc29
  410684:	mov    al,0x5f
  410686:	ja     0x4106b2
  410688:	int    0x2e
  41068a:	ret    0x954
  41068d:	add    esi,edi
  41068f:	je     0x4106eb
  410691:	jnp    0x4106e3
  410693:	es sti 
  410695:	mov    esp,0x93962134
  41069a:	es sbb eax,0x20
  41069e:	or     ebp,edi
  4106a0:	sbb    BYTE PTR [eax+eax*1+0x53],0x1c
  4106a5:	jns    0x4106c3
  4106a7:	jmp    0xa927251a
  4106ac:	gs loop 0x410651
  4106af:	push   esi
  4106b0:	scas   al,BYTE PTR es:[edi]
  4106b1:	sbb    DWORD PTR [edx+0x78c2391b],eax
  4106b7:	mov    al,ds:0xbd81d591
  4106bc:	inc    esp
  4106bd:	stc    
  4106be:	xor    BYTE PTR [esi+0x191e0296],ch
  4106c4:	je     0x41070c
  4106c6:	inc    esi
  4106c7:	sub    eax,0x9b00b586
  4106cc:	adc    BYTE PTR gs:[ecx+esi*1+0x1e5e1824],0x2c
  4106d5:	fimul  WORD PTR [edx+0x54201f99]
  4106db:	stos   BYTE PTR es:[edi],al
  4106dc:	pusha  
  4106dd:	in     al,dx
  4106de:	sub    bh,BYTE PTR [ebp+ebx*8+0x9]
  4106e2:	loopne 0x4106a3
  4106e4:	ret    
  4106e5:	adc    esi,edi
  4106e7:	push   eax
  4106e8:	inc    esi
  4106e9:	mov    eax,0x71c39c92
  4106ee:	and    esp,edx
  4106f0:	imul   ecx,DWORD PTR [edx],0x1180f87d
  4106f6:	shl    DWORD PTR [ebx],0x2f
  4106f9:	xchg   ebx,eax
  4106fa:	jae    0x41070a
  4106fc:	sar    BYTE PTR [ecx-0x22905fbc],0x63
  410703:	pop    eax
  410704:	int    0xd2
  410706:	push   0x39
  410708:	fisub  DWORD PTR [edi]
  41070a:	pop    ebx
  41070b:	push   ss
  41070c:	jbe    0x41070f
  41070e:	std    
  41070f:	add    BYTE PTR [ecx],al
  410711:	mov    al,0x11
  410713:	pop    ebx
  410714:	mov    al,ds:0x514e778d
  410719:	sbb    eax,0x9b7eb13
  41071e:	adc    BYTE PTR [edx+0x599a9616],cl
  410724:	mul    BYTE PTR [ebx+0x69f07b50]
  41072a:	xor    BYTE PTR [edx-0x35],bl
  41072d:	fiadd  WORD PTR [edx]
  41072f:	mov    ebx,0x4e63d45a
  410734:	adc    eax,0xb22d23d9
  410739:	push   esi
  41073a:	lahf   
  41073b:	pop    ss
  41073c:	cmp    eax,0xb7840ef6
  410741:	pop    ecx
  410742:	or     cl,BYTE PTR [edi]
  410744:	xlat   BYTE PTR ds:[ebx]
  410745:	retf   
  410746:	jne    0x410757
  410748:	add    eax,0x337213c6
  41074d:	cmp    al,0x72
  41074f:	mov    ch,0x52
  410751:	nop
  410752:	push   0xe9588feb
  410757:	xor    eax,0x17ef19ba
  41075c:	iret   
  41075d:	inc    ebp
  41075e:	outs   dx,DWORD PTR ds:[esi]
  41075f:	mov    ah,al
  410761:	xchg   DWORD PTR [ecx+0x5211c57],edi
  410767:	gs dec eax
  410769:	pushf  
  41076a:	mov    al,ds:0x61449919
  41076f:	repz or BYTE PTR [eax-0x64],bh
  410773:	sub    ebx,esi
  410775:	lods   eax,DWORD PTR ds:[esi]
  410776:	sub    eax,0x6bc3757f
  41077b:	retf   0xc430
  41077e:	retf   
  41077f:	or     eax,0x8d7b115d
  410784:	lahf   
  410785:	mov    ebp,0xa74b4a10
  41078a:	add    bl,BYTE PTR [esp+esi*2+0x2f]
  41078e:	mov    ch,0xca
  410790:	stc    
  410791:	and    esi,DWORD PTR [edx+0x36e23472]
  410797:	lds    edi,FWORD PTR [ebx-0x2f782243]
  41079d:	fsubr  DWORD PTR [ecx-0x7a]
  4107a0:	cmp    bl,ch
  4107a2:	adc    ebx,edx
  4107a4:	scas   al,BYTE PTR es:[edi]
  4107a5:	sbb    DWORD PTR [ecx],edx
  4107a7:	imul   ebp,DWORD PTR [edx-0x1e],0xa7704a01
  4107ae:	aam    0x14
  4107b0:	and    ah,bl
  4107b2:	hlt    
  4107b3:	add    DWORD PTR [ebx],esp
  4107b5:	xor    eax,0xdb91b386
  4107ba:	inc    DWORD PTR ds:0xae460bb5
  4107c0:	in     eax,dx
  4107c1:	jnp    0x410800
  4107c3:	or     BYTE PTR [ecx+0x41],dh
  4107c6:	stos   DWORD PTR es:[edi],eax
  4107c7:	test   DWORD PTR [eax+edx*1-0x4899eba3],eax
  4107ce:	(bad)  
  4107cf:	repz adc DWORD PTR [edi-0x57402340],ebp
  4107d6:	loopne 0x4107ed
  4107d8:	and    ebx,ebp
  4107da:	push   ebx
  4107db:	xor    ah,bl
  4107dd:	mov    bh,0x63
  4107df:	cmp    al,0x3a
  4107e1:	outs   dx,DWORD PTR ds:[esi]
  4107e2:	iret   
  4107e3:	icebp  
  4107e4:	sbb    cl,BYTE PTR [eax-0x17]
  4107e7:	jb     0x4107a4
  4107e9:	push   eax
  4107ea:	adc    ah,BYTE PTR [ecx-0x55]
  4107ed:	bound  ecx,QWORD PTR [esi+0x5]
  4107f0:	pop    esi
  4107f1:	adc    BYTE PTR [esp+edi*4+0x54],bh
  4107f5:	inc    eax
  4107f6:	repnz out 0x27,al
  4107f9:	add    al,0xe7
  4107fb:	sbb    eax,0x35689c17
  410800:	inc    ecx
  410801:	xor    al,0x1f
  410803:	jle    0x410818
  410805:	pop    edi
  410806:	cli    
  410807:	ss jb  0x410883
  41080a:	repz cdq 
  41080c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41080d:	mov    ah,0xd6
  41080f:	ds ins DWORD PTR es:[edi],dx
  410811:	lds    eax,FWORD PTR [edi+0x641f5fbd]
  410817:	adc    ebp,DWORD PTR [ebx]
  410819:	pushf  
  41081a:	mov    WORD PTR [esi],?
  41081c:	hlt    
  41081d:	mov    dl,0x97
  41081f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410820:	inc    ebx
  410821:	fsubr  DWORD PTR [edx+0x49]
  410824:	push   eax
  410825:	mov    eax,ds:0xe4ee2cf5
  41082a:	icebp  
  41082b:	and    BYTE PTR [ebx+edx*4+0x35],cl
  41082f:	into   
  410830:	jnp    0x4108ae
  410832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410833:	push   0xffffffce
  410835:	xchg   esp,eax
  410836:	adc    DWORD PTR [ebp-0x41c61975],esp
  41083c:	inc    eax
  41083d:	jmp    0x41082c
  41083f:	adc    eax,0xfe471a35
  410844:	xor    DWORD PTR [esp+edx*8-0x3a87a722],edi
  41084b:	inc    eax
  41084c:	add    dl,BYTE PTR [eax]
  41084e:	jae    0x4108a0
  410850:	push   ebp
  410851:	adc    eax,0x4c6d47a1
  410856:	inc    edi
  410857:	in     al,dx
  410858:	sub    eax,0x2491fc67
  41085d:	pop    edi
  41085e:	mov    bh,0x77
  410860:	jnp    0x41080d
  410862:	shr    BYTE PTR [edx-0xe],cl
  410865:	sti    
  410866:	mov    dl,0x3d
  410868:	adc    ecx,eax
  41086a:	je     0x410885
  41086c:	mov    cl,0x6e
  41086e:	aam    0x52
  410870:	cmp    bh,ah
  410872:	imul   ebp,DWORD PTR [eax],0xd9a4ea4
  410878:	gs cmp eax,0x1ee12a59
  41087e:	xchg   esi,eax
  41087f:	gs scas eax,DWORD PTR es:[edi]
  410881:	or     dh,BYTE PTR [edx-0x71c49a64]
  410887:	xchg   esp,eax
  410888:	push   ds
  410889:	gs xchg esi,eax
  41088b:	mov    ebx,cs
  41088d:	(bad)  
  41088e:	js     0x4108fa
  410890:	add    edx,DWORD PTR [edx-0x45]
  410893:	into   
  410894:	dec    edx
  410895:	cld    
  410896:	inc    cl
  410898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410899:	fidiv  WORD PTR [edx-0x40ebbdba]
  41089f:	jp     0x410890
  4108a1:	jo     0x41082e
  4108a3:	test   BYTE PTR [ecx],ah
  4108a5:	and    bh,bl
  4108a7:	inc    eax
  4108a8:	(bad)  
  4108a9:	sbb    BYTE PTR ds:0x5d814687,cl
  4108af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108b0:	ficom  WORD PTR [ebp+0x14]
  4108b3:	or     al,0x93
  4108b5:	daa    
  4108b6:	shr    esp,1
  4108b8:	sbb    ecx,DWORD PTR [edx+0x40a9b355]
  4108be:	pop    ebx
  4108bf:	xor    cl,BYTE PTR [ebx-0x29]
  4108c2:	out    0xd,eax
  4108c4:	adc    edi,ebx
  4108c6:	enter  0x3cdb,0x65
  4108ca:	jnp    0x410891
  4108cc:	test   eax,0x84f1f155
  4108d1:	and    BYTE PTR [edi-0x29695633],dl
  4108d7:	bound  esi,QWORD PTR [esi+0x23]
  4108da:	std    
  4108db:	jge    0x4108fa
  4108dd:	xchg   ebp,eax
  4108de:	test   al,0xd5
  4108e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108e1:	mov    ch,0xc
  4108e3:	out    0x28,eax
  4108e5:	or     bl,BYTE PTR [ebp+eax*2-0x5f749b89]
  4108ec:	ror    DWORD PTR [edx-0x1f89e6b3],0x4c
  4108f3:	(bad)  
  4108f4:	int3   
  4108f5:	sbb    esi,ecx
  4108f7:	ja     0x410921
  4108f9:	(bad)  
  4108fa:	and    DWORD PTR [ebp-0x7f],esi
  4108fd:	(bad)  
  4108fe:	xchg   edi,eax
  4108ff:	in     al,dx
  410900:	mov    ah,0x82
  410902:	pusha  
  410903:	jecxz  0x410969
  410905:	cdq    
  410906:	inc    eax
  410907:	adc    ecx,DWORD PTR [eax]
  410909:	fsubr  st(4),st
  41090b:	xlat   BYTE PTR ds:[ebx]
  41090c:	sahf   
  41090d:	out    0xa8,eax
  41090f:	in     al,dx
  410910:	adc    eax,0x6ae8c196
  410915:	xchg   ebp,eax
  410916:	shr    ah,cl
  410918:	enter  0x8700,0xfa
  41091c:	xor    al,0x65
  41091e:	in     eax,dx
  41091f:	or     dh,bl
  410921:	push   0x6d34135d
  410926:	pop    ebx
  410927:	test   BYTE PTR [ebx+0xd],cl
  41092a:	push   ds
  41092b:	mov    dh,0x4f
  41092d:	test   DWORD PTR [edi+edi*8],0xc46cec2f
  410934:	(bad)  
  410935:	int3   
  410936:	je     0x41099a
  410938:	dec    esi
  410939:	shr    BYTE PTR [eax+eiz*1-0x4fb071a],cl
  410940:	sbb    BYTE PTR [ebx+esi*4-0x26],ch
  410944:	pop    ss
  410945:	out    0x8e,eax
  410947:	dec    ebx
  410948:	adc    DWORD PTR [esi+0x1be26e78],esp
  41094e:	sub    BYTE PTR [ecx-0x4d],dl
  410951:	sbb    BYTE PTR [edi-0x175b5295],ah
  410957:	daa    
  410958:	cli    
  410959:	mov    dl,0xa2
  41095b:	mov    BYTE PTR ds:0x663f63b4,bh
  410961:	inc    ebp
  410962:	loop   0x41090d
  410964:	in     al,0xd
  410966:	cmp    al,0x18
  410968:	stos   BYTE PTR es:[edi],al
  410969:	push   esi
  41096a:	or     BYTE PTR [edx],0x6
  41096d:	iret   
  41096e:	adc    cl,bh
  410970:	sub    edi,DWORD PTR [esi]
  410972:	es and esp,esi
  410975:	rol    DWORD PTR [esi],1
  410977:	and    DWORD PTR [edx-0x6dc1801f],esp
  41097d:	mov    al,0x75
  41097f:	fistp  DWORD PTR [esi-0x5b828e01]
  410985:	xchg   esi,eax
  410986:	sub    DWORD PTR [eax+edi*1-0x106d6990],eax
  41098d:	mov    ds:0x3f7c566e,al
  410992:	(bad)
  410995:	dec    ebx
  410996:	cdq    
  410997:	scas   eax,DWORD PTR es:[edi]
  410998:	loopne 0x4109ab
  41099a:	fisubr DWORD PTR [ecx-0x3752e6af]
  4109a0:	add    al,0xee
  4109a2:	jge    0x4109ff
  4109a4:	jg     0x4109ee
  4109a6:	ror    BYTE PTR [edi],cl
  4109a8:	out    dx,al
  4109a9:	add    BYTE PTR [eax-0x16],bl
  4109ac:	mov    al,0x16
  4109ae:	daa    
  4109af:	mov    bl,0x4c
  4109b1:	call   FWORD PTR [ecx+0x56]
  4109b4:	or     eax,ecx
  4109b6:	push   ebx
  4109b7:	sbb    eax,0x7ec81cd1
  4109bc:	pop    ebp
  4109bd:	out    0xc7,eax
  4109bf:	mov    edi,0x7bb9c409
  4109c4:	cmp    ecx,0x25484fd4
  4109ca:	cmp    edx,ebx
  4109cc:	jp     0x410955
  4109ce:	pusha  
  4109cf:	outs   dx,BYTE PTR ds:[esi]
  4109d0:	inc    ebx
  4109d1:	push   es
  4109d2:	inc    eax
  4109d3:	int    0x9e
  4109d5:	mov    eax,0xd0d1399f
  4109da:	int    0x60
  4109dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109de:	call   0xd6d5:0x393a0095
  4109e5:	in     eax,dx
  4109e6:	fild   QWORD PTR ds:0xb978c1b5
  4109ec:	das    
  4109ed:	cwd    
  4109ef:	pop    esp
  4109f0:	sbb    cl,dh
  4109f2:	bound  edi,QWORD PTR [ebx*1+0x4549fe5]
  4109f9:	mov    bl,BYTE PTR [eax]
  4109fb:	mov    ah,0x3e
  4109fd:	mov    esp,0x9ff711ab
  410a02:	or     bl,dl
  410a04:	clc    
  410a05:	lods   al,BYTE PTR ds:[esi]
  410a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a07:	retf   
  410a08:	inc    eax
  410a09:	lea    ebp,[esp+edi*1-0x67]
  410a0d:	xchg   cl,dh
  410a0f:	push   eax
  410a10:	mov    bh,0x98
  410a12:	jno    0x410a62
  410a14:	or     eax,0xb7fda048
  410a19:	jge    0x410a13
  410a1b:	aad    0x80
  410a1d:	dec    ecx
  410a1e:	adc    eax,0x30634d82
  410a23:	and    BYTE PTR ds:0x13c7e451,0x5a
  410a2a:	into   
  410a2b:	mov    edi,0x4fe9db8e
  410a30:	sbb    BYTE PTR [ecx+eax*2+0x2a8c6c69],dl
  410a37:	stos   BYTE PTR es:[edi],al
  410a38:	mov    ds:0xd50ab65f,al
  410a3d:	pop    ecx
  410a3e:	dec    ebp
  410a3f:	xor    eax,ebx
  410a41:	fucom  st(7)
  410a43:	mov    ch,BYTE PTR [ecx]
  410a45:	ficomp WORD PTR [ebx-0x22]
  410a48:	jae    0x4109fa
  410a4a:	xor    al,0x8e
  410a4c:	out    0x21,al
  410a4e:	jg     0x410a64
  410a50:	sahf   
  410a51:	icebp  
  410a52:	std    
  410a53:	std    
  410a54:	iret   
  410a55:	mov    DWORD PTR [esi+eiz*4-0xe5032dd],ebx
  410a5c:	xchg   ebp,eax
  410a5d:	ins    BYTE PTR es:[edi],dx
  410a5e:	and    DWORD PTR [ebp-0x14],edi
  410a61:	and    ebp,DWORD PTR [ecx]
  410a63:	push   ds
  410a64:	shl    DWORD PTR [eax+0x26],cl
  410a67:	popa   
  410a68:	les    ebx,FWORD PTR [ebx-0x33]
  410a6b:	or     ebp,DWORD PTR [eax-0x260913b6]
  410a71:	push   eax
  410a72:	cmp    bl,BYTE PTR [ebx+0x72bf7f27]
  410a78:	aam    0x99
  410a7a:	jecxz  0x410a24
  410a7c:	jo     0x410a5a
  410a7e:	mov    eax,0x6c5b0477
  410a83:	(bad)  
  410a84:	fild   QWORD PTR [ecx-0x4b]
  410a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a88:	out    0x59,eax
  410a8a:	into   
  410a8b:	ds push ss
  410a8d:	mov    ds:0xc78f6acd,al
  410a92:	jp     0x410a65
  410a94:	mov    ch,0xa6
  410a96:	je     0x410add
  410a98:	xor    al,0x0
  410a9a:	(bad)
  410a9e:	test   DWORD PTR [esi-0x502204f0],eax
  410aa4:	or     ch,ah
  410aa6:	(bad)
  410aaa:	xchg   ecx,eax
  410aab:	pop    es
  410aac:	jns    0x410a6f
  410aae:	aad    0x2e
  410ab0:	push   0xffffffd1
  410ab2:	xchg   ebx,eax
  410ab3:	jmp    0x731c:0x4a285d6b
  410aba:	in     al,0x10
  410abc:	rcl    DWORD PTR [edi+edx*1],0x4a
  410ac0:	test   BYTE PTR gs:[ecx-0x7e],0xc0
  410ac5:	jp     0x410ae0
  410ac7:	les    eax,FWORD PTR [edi]
  410ac9:	xchg   edi,eax
  410aca:	jnp    0x410af6
  410acc:	mov    esi,0x124a39f6
  410ad1:	pop    edi
  410ad2:	hlt    
  410ad3:	out    dx,al
  410ad4:	mov    ds:0x13aeb819,eax
  410ad9:	xor    al,0x6a
  410adb:	lds    esp,FWORD PTR [edi-0x7437bcec]
  410ae1:	out    dx,al
  410ae2:	push   edx
  410ae3:	jl     0x410a7c
  410ae5:	xor    ebx,DWORD PTR [edi]
  410ae7:	jle    0x410b03
  410ae9:	sub    eax,0xeab1f84e
  410aee:	ret    
  410aef:	pop    ebp
  410af0:	cmp    BYTE PTR [edi-0x78],0x80
  410af4:	fist   DWORD PTR [ecx-0x5b]
  410af7:	push   ecx
  410af8:	lods   eax,DWORD PTR ds:[esi]
  410af9:	cwde   
  410afa:	std    
  410afb:	add    ebp,DWORD PTR fs:[edx]
  410afe:	ret    
  410aff:	jbe    0x410af2
  410b01:	les    esi,FWORD PTR [ecx]
  410b03:	inc    edx
  410b04:	cmp    eax,0x12500adf
  410b09:	cmp    bl,BYTE PTR [eax+0x2d]
  410b0c:	int    0x85
  410b0e:	test   al,0x1f
  410b10:	(bad)  
  410b11:	daa    
  410b12:	mov    al,0x1b
  410b14:	leave  
  410b15:	adc    ecx,esi
  410b17:	icebp  
  410b18:	inc    ebp
  410b19:	xchg   DWORD PTR [esi-0x28da9045],eax
  410b1f:	sbb    DWORD PTR [ebp-0x7b],0xfffffffa
  410b23:	out    dx,al
  410b24:	bound  esi,QWORD PTR [edi-0x79]
  410b27:	js     0x410b4f
  410b29:	iret   
  410b2a:	cmp    ebx,ecx
  410b2c:	pop    edi
  410b2d:	adc    bl,dh
  410b2f:	dec    ebx
  410b30:	shl    edx,0xb3
  410b33:	dec    ebx
  410b34:	xor    eax,0xafad019c
  410b39:	xchg   edx,eax
  410b3a:	bsf    esp,DWORD PTR [ebx+0x6dae1655]
  410b41:	sub    BYTE PTR [eax+0x363c95a7],bh
  410b47:	call   DWORD PTR [esi+0x4c]
  410b4a:	jmp    0x61ab:0x22fff24
  410b51:	and    eax,0xdde31e27
  410b56:	mov    eax,0x8beec758
  410b5b:	push   esi
  410b5c:	or     esi,ebp
  410b5e:	daa    
  410b5f:	xor    BYTE PTR [esi-0x36752c63],dh
  410b65:	inc    esi
  410b66:	push   0xffffffbd
  410b68:	pop    ecx
  410b69:	mov    bl,0x15
  410b6b:	jmp    0xd3aa30dd
  410b70:	adc    DWORD PTR [edx+0x65322e7a],0xf1871334
  410b7a:	les    esp,FWORD PTR [ecx]
  410b7c:	push   ecx
  410b7d:	mov    edi,0x69ba69fc
  410b82:	inc    ebp
  410b83:	jecxz  0x410bcc
  410b85:	cdq    
  410b86:	stos   DWORD PTR es:[edi],eax
  410b87:	aam    0x2e
  410b89:	lds    ecx,FWORD PTR [ecx+0x50]
  410b8c:	mov    BYTE PTR [ebp-0x6b],bl
  410b8f:	test   bl,dh
  410b91:	popa   
  410b92:	sub    eax,0x2b41cb8d
  410b97:	inc    esp
  410b98:	adc    cl,BYTE PTR [ecx-0x35a51f01]
  410b9e:	outs   dx,BYTE PTR ds:[esi]
  410b9f:	push   eax
  410ba0:	mov    ch,0x2a
  410ba2:	(bad)  
  410ba3:	loope  0x410c19
  410ba5:	adc    al,0x2f
  410ba7:	leave  
  410ba8:	xor    BYTE PTR [ebx-0x653f2f44],bl
  410bae:	jg     0x410b56
  410bb0:	mov    eax,ds:0x40c71a95
  410bb5:	sub    BYTE PTR [ecx+0x538cfd7],dh
  410bbb:	mov    eax,ds:0xd63bc31b
  410bc0:	jp     0x410bf0
  410bc2:	push   ecx
  410bc3:	dec    edx
  410bc4:	sub    ch,dh
  410bc6:	fistp  WORD PTR [ebp-0x5da9e6a1]
  410bcc:	xor    ch,dh
  410bce:	lea    eax,[ecx-0x5a318ed7]
  410bd4:	dec    ebx
  410bd5:	xor    eax,0x160a99bb
  410bda:	push   ebx
  410bdb:	pop    edx
  410bdc:	push   edx
  410bdd:	into   
  410bde:	cmp    BYTE PTR [edi-0x25],0xc2
  410be2:	sbb    ah,ah
  410be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410be5:	(bad)  
  410be6:	cmc    
  410be7:	jmp    0x410bbe
  410be9:	mov    dl,0xf3
  410beb:	adc    al,0x15
  410bed:	das    
  410bee:	shl    BYTE PTR [eax],1
  410bf0:	or     ecx,DWORD PTR [ecx+0x49dc40a5]
  410bf6:	or     eax,0xf432edc4
  410bfb:	stc    
  410bfc:	xchg   edi,eax
  410bfd:	stos   DWORD PTR es:[edi],eax
  410bfe:	inc    edi
  410bff:	pop    esi
  410c00:	jb     0x410b8b
  410c02:	dec    ebx
  410c03:	sbb    DWORD PTR [ecx+0xf],edx
  410c06:	aaa    
  410c07:	cmp    BYTE PTR [ebp-0x59afe64b],0xa3
  410c0e:	and    dh,cl
  410c10:	xor    eax,0x3edb1f61
  410c15:	lahf   
  410c16:	sbb    ah,ch
  410c18:	inc    edi
  410c19:	sub    BYTE PTR [edx-0x1f36a220],cl
  410c1f:	clc    
  410c20:	jmp    0x410c7c
  410c22:	out    0x3a,eax
  410c24:	(bad)  
  410c25:	inc    DWORD PTR ds:0x596d7d33
  410c2b:	js     0x410c7e
  410c2d:	and    bl,BYTE PTR [edi+0x62]
  410c30:	out    dx,eax
  410c31:	and    ebp,DWORD PTR [eax]
  410c33:	ja     0x410c1e
  410c35:	aaa    
  410c36:	jmp    0x410c28
  410c38:	sar    BYTE PTR [bp+si+0x0],cl
  410c3c:	loopne 0x410cba
  410c3e:	retf   
  410c3f:	hlt    
  410c40:	xor    eax,0xb92eff38
  410c45:	sbb    DWORD PTR [eax+edx*8],ebp
  410c48:	repz das 
  410c4a:	or     edx,ebx
  410c4c:	push   edi
  410c4d:	jg     0x410bef
  410c4f:	fnstcw WORD PTR [ecx+esi*8]
  410c52:	xor    ecx,edi
  410c54:	not    DWORD PTR [eax]
  410c56:	jp     0x410be9
  410c58:	or     DWORD PTR [ecx-0x35],esp
  410c5b:	test   ebp,ebp
  410c5d:	lods   eax,DWORD PTR ds:[esi]
  410c5e:	xchg   ebp,eax
  410c5f:	jae    0x410c83
  410c61:	cs lock mov dh,0xdf
  410c65:	push   0xffffffe1
  410c67:	add    eax,0xa33d59a1
  410c6c:	mov    al,ds:0x7818d120
  410c71:	sti    
  410c72:	add    BYTE PTR [esi+0x18f0e6e4],al
  410c78:	or     BYTE PTR [ebp+0x65],dl
  410c7b:	push   ss
  410c7c:	xor    eax,0x718eca99
  410c81:	mov    esp,0xe258150f
  410c86:	int3   
  410c87:	sar    al,1
  410c89:	sbb    DWORD PTR [edx+0x50b9b3bb],0xaa07bb26
  410c93:	inc    ecx
  410c94:	loopne 0x410c1c
  410c96:	or     DWORD PTR [edx+edx*1],ebx
  410c99:	sahf   
  410c9a:	add    BYTE PTR [edi+0x3],dh
  410c9d:	xor    al,0x7c
  410c9f:	stc    
  410ca0:	fnsave [esi+ecx*4-0x7b8b53c8]
  410ca7:	push   ecx
  410ca8:	js     0x410cc6
  410caa:	add    BYTE PTR [ecx+0x3652274],dh
  410cb0:	call   0x754f2508
  410cb5:	pop    esp
  410cb6:	les    eax,FWORD PTR [ebp-0x5205ba03]
  410cbc:	push   esi
  410cbd:	lods   al,BYTE PTR ds:[esi]
  410cbe:	out    dx,al
  410cbf:	jp     0x410d10
  410cc1:	add    DWORD PTR [edi-0x744ec9e],edx
  410cc7:	and    BYTE PTR [edi+0x75],ch
  410cca:	xchg   edi,eax
  410ccb:	fldenv [esi+0x5b]
  410cce:	mov    bh,0x3e
  410cd0:	nop
  410cd1:	or     DWORD PTR [esi-0x29],eax
  410cd4:	xchg   BYTE PTR [edi-0x3],dh
  410cd7:	jmp    0x40a11a1c
  410cdc:	into   
  410cdd:	fsub   QWORD PTR [esi-0x2b]
  410ce0:	in     al,0x6d
  410ce2:	sub    al,0xc0
  410ce4:	out    0x47,al
  410ce6:	mov    edx,0x84015be4
  410ceb:	sahf   
  410cec:	push   ebx
  410ced:	add    edi,ebp
  410cef:	ss jl  0x410ce1
  410cf2:	retf   0x8ed3
  410cf5:	add    edi,DWORD PTR [esi-0x4b]
  410cf8:	mov    esi,0xc4496061
  410cfd:	les    edx,FWORD PTR [ecx]
  410cff:	pop    ds
  410d00:	out    dx,al
  410d01:	test   ecx,ecx
  410d03:	lahf   
  410d04:	call   0x95a7495a
  410d09:	push   0xb3580273
  410d0e:	sbb    cl,BYTE PTR [eax-0x3a]
  410d11:	inc    ebx
  410d12:	mov    al,ds:0x1da5d715
  410d17:	dec    ebp
  410d18:	push   esp
  410d19:	and    eax,0x8cf6665d
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	mov    WORD PTR [esi+0x2a9559da],si
  410d26:	ret    
  410d27:	cmp    ebx,esi
  410d29:	test   esi,0xd9612f7b
  410d2f:	popf   
  410d30:	xor    DWORD PTR [edx+0x1d],ecx
  410d33:	and    esp,DWORD PTR [ecx]
  410d35:	sbb    edi,esp
  410d37:	sub    bl,BYTE PTR [esi+0x3d74a07b]
  410d3d:	jb     0x410d6a
  410d3f:	sub    eax,0x2a878c43
  410d44:	rcl    DWORD PTR [edx+0x0],cl
  410d47:	mov    dl,0x72
  410d49:	(bad)  
  410d4a:	gs ja  0x410dc7
  410d4d:	icebp  
  410d4e:	mov    DWORD PTR [eax+edi*8+0x39315f5c],esp
  410d55:	xor    BYTE PTR [ebx],0xde
  410d58:	data16 cmp BYTE PTR [ecx-0x68],cl
  410d5c:	push   es
  410d5d:	jmp    0x410d4f
  410d5f:	sbb    DWORD PTR [ebp+0x23e239b6],edx
  410d65:	ror    BYTE PTR [edi-0x6469cfff],cl
  410d6b:	bound  ebx,QWORD PTR [esi+ecx*1+0x37d3ba63]
  410d72:	lods   eax,DWORD PTR ds:[esi]
  410d73:	out    0xe8,al
  410d75:	push   edi
  410d76:	push   edx
  410d77:	daa    
  410d78:	(bad)  
  410d79:	mov    al,0x87
  410d7b:	mov    ?,ebx
  410d7d:	sub    DWORD PTR [ebx],edi
  410d7f:	fs pushf 
  410d81:	sub    DWORD PTR [edx-0x31],ecx
  410d84:	out    dx,eax
  410d85:	jo     0x410d91
  410d87:	push   0xfffffff0
  410d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d8a:	and    DWORD PTR [edx+0x6f],edx
  410d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d8e:	fwait
  410d8f:	loopne 0x410d74
  410d91:	xchg   edi,eax
  410d92:	sbb    DWORD PTR [ecx],ecx
  410d94:	ret    
  410d95:	arpl   ax,bx
  410d97:	push   0x47
  410d99:	(bad)  
  410d9a:	push   esp
  410d9b:	push   ebx
  410d9c:	mov    dl,0x80
  410d9e:	inc    esi
  410d9f:	pop    ebx
  410da0:	in     al,0xc8
  410da2:	jno    0x410d2d
  410da4:	mov    dh,0x75
  410da6:	adc    dh,BYTE PTR [edi-0x2b]
  410da9:	js     0x410d9e
  410dab:	in     al,0x6c
  410dad:	loope  0x410d8f
  410daf:	aam    0x5d
  410db1:	pop    eax
  410db2:	pop    ecx
  410db3:	sub    al,0x5d
  410db5:	jle    0x410d9e
  410db7:	mov    ds,ecx
  410db9:	addr16 (bad) 
  410dbc:	cld    
  410dbd:	mov    ah,0x5e
  410dbf:	das    
  410dc0:	mov    edi,0x8328857d
  410dc5:	push   ecx
  410dc6:	in     eax,dx
  410dc7:	test   DWORD PTR [ebx-0x56],0xeaef0496
  410dce:	jp     0x410d59
  410dd0:	adc    ebx,DWORD PTR [ebx-0x3f]
  410dd3:	inc    esp
  410dd4:	mov    ebx,esi
  410dd6:	sub    dl,BYTE PTR [edx+0x15]
  410dd9:	cmp    cl,BYTE PTR [ecx-0x2bff8755]
  410ddf:	pop    esi
  410de0:	sub    al,0xb8
  410de2:	sub    bl,bh
  410de4:	mov    ds:0x410f9aea,eax
  410de9:	dec    edi
  410dea:	or     al,0x9a
  410dec:	jl     0x410df9
  410dee:	pop    ebp
  410def:	xlat   BYTE PTR ds:[ebx]
  410df0:	pop    ds
  410df1:	enter  0x19dd,0xda
  410df5:	add    bh,BYTE PTR [ebp+0x37]
  410df8:	sbb    BYTE PTR [edx-0x21],dh
  410dfb:	push   ebp
  410dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dfd:	mov    dl,0x97
  410dff:	popa   
  410e00:	mov    ebp,0xb186f9e0
  410e05:	idiv   esp
  410e07:	xor    al,0xc1
  410e09:	adc    al,0x5c
  410e0b:	xchg   DWORD PTR [edi-0x1631ee16],edx
  410e11:	ja     0x410d98
  410e13:	or     al,0x0
  410e15:	mov    ah,0x91
  410e17:	mov    bl,0xe3
  410e19:	inc    DWORD PTR [eax*2-0xe9f73ea]
  410e20:	push   ecx
  410e21:	adc    al,0x98
  410e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e24:	sti    
  410e25:	mov    dh,0x1f
  410e27:	mov    esi,0x6db77620
  410e2c:	fld    QWORD PTR [ecx-0x34]
  410e2f:	mov    ecx,0xc2476cdd
  410e34:	ins    DWORD PTR es:[edi],dx
  410e35:	cld    
  410e36:	sbb    bl,BYTE PTR [eax-0x3ffa52b4]
  410e3c:	jge    0x410e37
  410e3e:	call   0xce74:0xd041e848
  410e45:	jae    0x410dfb
  410e47:	loope  0x410dc9
  410e49:	push   ebp
  410e4a:	retf   
  410e4b:	inc    ebx
  410e4c:	or     DWORD PTR [esi+0x13],ebx
  410e4f:	mov    ebp,DWORD PTR [edi-0x5b43c078]
  410e55:	(bad)  
  410e56:	fstp   TBYTE PTR [esi]
  410e58:	test   al,0xc8
  410e5a:	ss ins BYTE PTR es:[edi],dx
  410e5c:	add    eax,0x53addd83
  410e61:	iret   
  410e62:	sub    ecx,DWORD PTR [ebx-0x10]
  410e65:	mov    dl,0xe7
  410e67:	out    dx,al
  410e68:	sub    dh,bh
  410e6a:	jnp    0x410e71
  410e6c:	jbe    0x410e9a
  410e6e:	push   0xd21137fd
  410e73:	inc    eax
  410e74:	mov    cl,0x9d
  410e76:	hlt    
  410e77:	adc    eax,0x5cc767b
  410e7c:	or     eax,0xa0d5c31b
  410e81:	fistp  QWORD PTR [ecx]
  410e83:	arpl   WORD PTR [edi-0x7e2d03e9],cx
  410e89:	repz and al,0x56
  410e8c:	call   0x37e428c9
  410e91:	jae    0x410eb2
  410e93:	(bad)  
  410e95:	inc    esi
  410e96:	bound  edx,QWORD PTR [ecx]
  410e98:	sub    DWORD PTR ds:0x9e1a0d94,edi
  410e9e:	cmp    eax,0x4b8f3f9c
  410ea3:	enter  0xa23d,0x32
  410ea7:	add    dh,BYTE PTR ds:0x72f88489
  410ead:	mov    ch,0x90
  410eaf:	fwait
  410eb0:	inc    esi
  410eb1:	and    ecx,DWORD PTR [ebx]
  410eb3:	jp     0x410e5f
  410eb5:	ss loopne 0x410eea
  410eb8:	inc    esi
  410eb9:	push   ebp
  410eba:	and    ebx,DWORD PTR [ecx+0x7b]
  410ebd:	cli    
  410ebe:	pop    esi
  410ebf:	fucomp st(0)
  410ec1:	inc    eax
  410ec2:	out    dx,eax
  410ec3:	nop
  410ec4:	(bad)  
  410ec5:	dec    ebx
  410ec6:	ds adc al,0xca
  410ec9:	jl     0x410f0b
  410ecb:	or     eax,0x6b7f67f4
  410ed0:	arpl   ax,cx
  410ed2:	es add eax,0x2275f665
  410ed8:	ds ja  0x410e60
  410edb:	xchg   ebp,eax
  410edc:	inc    edx
  410edd:	(bad)  
  410edf:	cmp    BYTE PTR [edi+edx*4+0x14],cl
  410ee3:	mov    eax,0x24e599c9
  410ee8:	fnstcw WORD PTR [ebx-0x4a261b4]
  410eee:	sub    eax,0xed993ae5
  410ef3:	mov    al,ds:0x8ecadaa4
  410ef8:	xchg   ecx,eax
  410ef9:	lods   eax,DWORD PTR ds:[esi]
  410efa:	push   ecx
  410efb:	jl     0x410e7f
  410efd:	inc    esi
  410efe:	xchg   esi,eax
  410eff:	inc    eax
  410f00:	dec    eax
  410f01:	lahf   
  410f02:	retf   0xc6d2
  410f05:	(bad)  
  410f06:	jne    0x410ebc
  410f08:	cmp    esi,DWORD PTR [ecx+ecx*2-0x7a]
  410f0c:	iret   
  410f0d:	enter  0xce03,0x2a
  410f11:	or     esp,DWORD PTR [edx]
  410f13:	xchg   ecx,eax
  410f14:	xor    dl,bl
  410f16:	cmp    bh,BYTE PTR [edx+0x2a]
  410f19:	push   cs
  410f1a:	int3   
  410f1b:	adc    al,0x98
  410f1d:	imul   esi,DWORD PTR [ebx-0x48ef546d],0xffbb8d85
  410f27:	out    0x45,al
  410f29:	sbb    eax,0x2f09fb9d
  410f2e:	ja     0x410f32
  410f30:	shr    ebx,0x7
  410f33:	test   DWORD PTR [edx-0x3388cedb],0x293612e7
  410f3d:	rep lods eax,DWORD PTR ds:[esi]
  410f3f:	(bad)  
  410f40:	sbb    BYTE PTR [edi-0x40cc471f],bl
  410f46:	or     BYTE PTR [edx],al
  410f48:	aad    0x32
  410f4a:	sbb    eax,0x3c2da82c
  410f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f50:	mov    dl,0x93
  410f52:	shl    edi,1
  410f54:	int3   
  410f55:	or     esi,DWORD PTR [edx-0x54]
  410f58:	ds mov eax,0x8e4c6def
  410f5e:	jg     0x410f06
  410f60:	iret   
  410f61:	fwait
  410f62:	inc    eax
  410f63:	push   0xffffff9d
  410f65:	inc    ecx
  410f66:	out    dx,al
  410f67:	adc    ebp,DWORD PTR [ecx]
  410f69:	repnz or esp,DWORD PTR ds:0x30b2518b
  410f70:	xchg   edx,eax
  410f71:	sahf   
  410f72:	adc    al,0x63
  410f74:	push   ds
  410f75:	push   cs
  410f76:	mov    ebx,0xc68f8803
  410f7b:	jmp    0x410f7d
  410f7d:	xchg   esi,eax
  410f7e:	push   eax
  410f7f:	xor    eax,0x6a791213
  410f84:	sbb    BYTE PTR [eax],0xbb
  410f87:	mov    ah,0xe3
  410f89:	dec    esi
  410f8a:	data16 shl BYTE PTR [eax],cl
  410f8d:	scas   al,BYTE PTR es:[edi]
  410f8e:	ret    
  410f8f:	mov    cl,ch
  410f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f92:	xchg   esi,eax
  410f93:	(bad)  
  410f94:	sbb    al,0x71
  410f96:	stos   BYTE PTR es:[edi],al
  410f97:	mov    dh,0x2d
  410f99:	pushf  
  410f9a:	repz lds esp,FWORD PTR [ebp+0x1c9cd59]
  410fa1:	test   al,0x2
  410fa4:	sub    DWORD PTR [esi+eax*4-0xa],0x18553479
  410fac:	mov    ch,0x76
  410fae:	data16 (bad) 
  410fb0:	(bad)  
  410fb1:	push   esi
  410fb2:	xchg   ebp,eax
  410fb3:	stos   BYTE PTR es:[edi],al
  410fb4:	in     al,0x40
  410fb6:	ins    DWORD PTR es:[edi],dx
  410fb7:	dec    ecx
  410fb8:	mov    ch,0xf4
  410fba:	jecxz  0x410fe6
  410fbc:	adc    DWORD PTR [esi-0x12],ebx
  410fbf:	(bad)  
  410fc1:	jb     0x410f60
  410fc3:	(bad)  
  410fc4:	jae    0x410f50
  410fc6:	add    eax,0xd9738895
  410fcb:	imul   ebp,DWORD PTR [edi+0x1],0x443bd64c
  410fd2:	inc    ebp
  410fd3:	inc    esi
  410fd4:	fcmovnbe st,st(6)
  410fd6:	in     al,0x8
  410fd8:	add    eax,0x656be1bd
  410fdd:	ins    DWORD PTR es:[edi],dx
  410fde:	sbb    eax,0xa0172c63
  410fe3:	stc    
  410fe4:	mov    ch,0xd1
  410fe6:	retf   
  410fe7:	mov    ds:0x9f2f15af,al
  410fec:	inc    esp
  410fed:	jb     0x410f74
  410fef:	and    eax,0x8a1b6a2e
  410ff4:	call   0xef2952fb
  410ff9:	sub    al,0x3f
  410ffb:	inc    edx
  410ffc:	jmp    0x8f47:0xdc6938a
  411003:	std    
  411004:	jb     0x411055
  411006:	mov    BYTE PTR [ebx],dh
  411008:	push   ebx
  411009:	cmp    BYTE PTR [ecx],cl
  41100b:	ror    ch,1
  41100d:	push   ecx
  41100e:	ja     0x41101e
  411010:	pop    esi
  411011:	dec    eax
  411012:	jo     0x410ff5
  411014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411015:	inc    ecx
  411016:	mov    bh,0xc2
  411018:	pusha  
  411019:	daa    
  41101a:	xchg   edx,eax
  41101b:	and    BYTE PTR [edx],al
  41101d:	push   DWORD PTR [ebx+0x7a]
  411020:	mov    BYTE PTR ds:0x94def160,ch
  411026:	je     0x41106e
  411028:	mov    ch,BYTE PTR [edx]
  41102a:	push   DWORD PTR [esi]
  41102c:	rcl    BYTE PTR [eax-0x7e3542db],1
  411032:	push   ss
  411033:	dec    esp
  411034:	inc    esp
  411035:	daa    
  411036:	aam    0xdd
  411038:	je     0x410fc7
  41103a:	cmp    ch,BYTE PTR [ecx-0x645dd5a5]
  411040:	imul   ebp,DWORD PTR [edi-0x33],0x7aa5c164
  411047:	sbb    bl,BYTE PTR [bp+0x4887]
  41104c:	mov    al,0xee
  41104e:	or     eax,0xeb092b13
  411053:	cdq    
  411054:	push   eax
  411055:	aas    
  411056:	mov    dh,0x71
  411058:	outs   dx,DWORD PTR ds:[esi]
  411059:	add    cl,BYTE PTR [edx+esi*2-0x7bac65d8]
  411060:	xchg   BYTE PTR [esi+ebp*2-0xa7a2a4e],ah
  411067:	jle    0x41101b
  411069:	mov    cl,BYTE PTR [eax+ebx*4+0x4d]
  41106d:	push   ebp
  41106e:	push   es
  41106f:	cmp    DWORD PTR [edi+0x3c390432],0xffffffe7
  411076:	mov    DWORD PTR [ebx+ebx*8],edi
  411079:	sbb    al,0x85
  41107b:	jae    0x411049
  41107d:	xchg   esi,eax
  41107e:	(bad)  
  41107f:	mov    cl,0x2b
  411081:	jmp    0x4110a0
  411083:	imul   ebx,DWORD PTR [ebp-0x7],0xa1da8c85
  41108a:	or     eax,0x95ca8e40
  41108f:	push   ebp
  411090:	shl    BYTE PTR [ebx+0x42eb73f1],1
  411096:	jmp    0x7ead5882
  41109b:	xchg   edi,eax
  41109c:	int3   
  41109d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41109e:	cs push 0x5b
  4110a1:	in     al,dx
  4110a2:	pop    ss
  4110a3:	ret    
  4110a4:	mov    ecx,0x128b3f9e
  4110a9:	adc    ecx,DWORD PTR ds:0x29141c57
  4110af:	stos   BYTE PTR es:[edi],al
  4110b0:	and    eax,0x6226371c
  4110b5:	in     eax,0x30
  4110b7:	lea    edi,[ebp+edi*1-0x2]
  4110bb:	mov    DWORD PTR [ebx],esi
  4110bd:	mov    dh,0xb2
  4110bf:	mov    ecx,0x9fe9e467
  4110c4:	imul   ebp
  4110c6:	cs mov dl,0x6a
  4110c9:	not    BYTE PTR [eax-0x56e5e8d0]
  4110cf:	dec    edi
  4110d0:	pushf  
  4110d1:	and    dh,cl
  4110d3:	in     al,0x6
  4110d5:	es and eax,0xaad856e6
  4110db:	jmp    0xd8612165
  4110e0:	push   ss
  4110e1:	fs cmc 
  4110e3:	and    cl,bl
  4110e5:	adc    ah,BYTE PTR [ebx+0x69]
  4110e8:	mov    ecx,0x4328d414
  4110ed:	xor    esp,edx
  4110ef:	xchg   esp,eax
  4110f0:	fiadd  DWORD PTR [esi+0x3c]
  4110f3:	xlat   BYTE PTR ds:[ebx]
  4110f4:	in     eax,0xd3
  4110f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110f7:	je     0x41110f
  4110f9:	sbb    eax,0x330b7b61
  4110fe:	sti    
  4110ff:	cmp    dl,BYTE PTR [ecx]
  411101:	push   esi
  411102:	jecxz  0x4110a4
  411104:	mov    ch,0x58
  411106:	mov    si,0xb1fb
  41110a:	push   ebp
  41110b:	lea    ebx,[edx+0x623bbec7]
  411111:	and    bh,0xab
  411114:	jae    0x411165
  411116:	dec    edx
  411117:	pop    edi
  411118:	je     0x4110b7
  41111a:	test   DWORD PTR [esp+eiz*8-0x6f1abc3a],esp
  411121:	fwait
  411122:	jo     0x41111f
  411124:	sbb    bl,ah
  411126:	in     eax,0x3a
  411128:	psubsb mm7,QWORD PTR [ebx-0x26]
  41112c:	mov    edx,DWORD PTR [ecx+0x2d]
  41112f:	inc    ecx
  411130:	popa   
  411131:	xor    BYTE PTR [ebp-0x36],bh
  411134:	out    0x67,al
  411136:	call   0xb1f4d5ce
  41113b:	call   0xf2ffb8b
  411140:	mov    dh,0xf6
  411142:	in     al,dx
  411143:	call   0x24962fcf
  411148:	cmp    DWORD PTR [ebx+esi*8+0x76],eax
  41114c:	add    DWORD PTR [edx+0x55],ecx
  41114f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411150:	(bad)  
  411151:	daa    
  411152:	test   BYTE PTR ss:[ebx-0x6f0d6e80],cl
  411159:	jne    0x4111af
  41115b:	ds into 
  41115d:	(bad)  
  41115e:	fidivr WORD PTR [eax+eax*2]
  411161:	jmp    0x1f4da9d8
  411166:	clc    
  411167:	dec    edi
  411168:	xlat   BYTE PTR ds:[ebx]
  411169:	fwait
  41116a:	jmp    0x411185
  41116c:	pop    ds
  41116d:	repz out 0xdd,eax
  411170:	out    0xcf,al
  411172:	outs   dx,BYTE PTR ds:[esi]
  411173:	dec    ebx
  411174:	and    eax,0x93be48ed
  411179:	jb     0x4111e9
  41117b:	pop    edx
  41117c:	stos   DWORD PTR es:[edi],eax
  41117d:	imul   ebp,DWORD PTR [ebx-0x682ca340],0xffffffeb
  411184:	(bad)  
  411185:	mov    ds:0xae67915a,eax
  41118a:	xchg   esi,eax
  41118b:	(bad)  
  41118c:	(bad)  
  41118d:	push   0x7f
  41118f:	in     ax,0x8f
  411192:	jmp    0x6e23:0x6a15daa2
  411199:	out    0x17,al
  41119b:	adc    esi,edx
  41119d:	xchg   DWORD PTR [ebx+0x77],ebx
  4111a0:	jecxz  0x411165
  4111a2:	retf   
  4111a3:	popf   
  4111a4:	push   esi
  4111a5:	inc    eax
  4111a6:	mov    dh,0x7c
  4111a8:	xor    BYTE PTR [ecx],ch
  4111aa:	std    
  4111ab:	or     eax,eax
  4111ad:	or     dh,bl
  4111af:	popa   
  4111b0:	nop
  4111b1:	add    DWORD PTR [esp+ecx*1+0x4b96e96],esp
  4111b8:	inc    edx
  4111b9:	push   ss
  4111ba:	add    eax,0xe0983188
  4111bf:	pop    ebx
  4111c0:	mov    WORD PTR [eax+0x501b6587],?
  4111c6:	mov    ah,0xc
  4111c8:	iret   
  4111c9:	cmp    eax,0x3d077c99
  4111ce:	mov    ?,ecx
  4111d0:	mov    ebx,0xdabb9e95
  4111d5:	imul   esp,eax,0x4e
  4111d8:	cmp    edi,DWORD PTR [ecx+esi*2-0x2]
  4111dc:	leave  
  4111dd:	retf   0xf75b
  4111e0:	rol    DWORD PTR [ebx+eiz*8],0x7d
  4111e4:	stos   DWORD PTR es:[edi],eax
  4111e5:	enter  0xc8b8,0xb2
  4111e9:	xor    esp,DWORD PTR ds:0xbbc2110a
  4111ef:	je     0x4111fe
  4111f1:	je     0x411253
  4111f3:	mov    dl,0xf6
  4111f5:	cmp    BYTE PTR [ebp+0x78],bl
  4111f8:	xor    DWORD PTR [ecx],0x47
  4111fb:	inc    ebx
  4111fc:	test   al,0xf4
  4111fe:	mov    ds:0x16ff9ff7,al
  411203:	and    al,0x35
  411205:	or     bh,BYTE PTR [edx]
  411207:	pop    esi
  411208:	(bad)  
  411209:	mov    ebx,0x390549f1
  41120e:	ror    BYTE PTR [esi],1
  411210:	or     eax,0xcf1753aa
  411215:	clc    
  411216:	rcl    BYTE PTR [ebp-0x76b4a651],0xc6
  41121d:	pop    ds
  41121e:	stos   BYTE PTR es:[edi],al
  41121f:	mov    edi,0xb021572a
  411224:	push   0xb24f1dc6
  411229:	shl    BYTE PTR gs:[ebx],1
  41122c:	jmp    0x41121c
  41122e:	in     eax,0xf5
  411230:	mov    DWORD PTR [ebx+eiz*2],ecx
  411233:	sub    cl,ah
  411235:	xlat   BYTE PTR ds:[ebx]
  411236:	lods   al,BYTE PTR ds:[esi]
  411237:	mov    eax,ds:0x747a4d92
  41123c:	cwde   
  41123d:	and    DWORD PTR [esi],ebx
  41123f:	(bad)  
  411240:	enter  0x59e7,0xcf
  411244:	aam    0x63
  411246:	xor    al,0x7d
  411248:	pop    ebx
  41124a:	inc    DWORD PTR [esi-0x1b6430f5]
  411250:	mov    al,ds:0x9c071c28
  411255:	push   esi
  411256:	lahf   
  411257:	pop    es
  411258:	out    0x83,al
  41125a:	(bad)  
  41125b:	dec    esi
  41125c:	add    al,0x3a
  41125e:	xor    eax,0x55e936fe
  411263:	inc    esi
  411264:	push   ecx
  411265:	pop    es
  411266:	clc    
  411267:	push   ds
  411268:	add    ecx,edx
  41126a:	sahf   
  41126b:	jns    0x4112d0
  41126d:	(bad)  
  41126e:	sub    eax,0x153685f4
  411273:	jge    0x41122b
  411275:	aas    
  411276:	out    dx,eax
  411277:	stos   DWORD PTR es:[edi],eax
  411278:	sub    DWORD PTR [ebx],ecx
  41127a:	stos   BYTE PTR es:[edi],al
  41127b:	sahf   
  41127c:	jno    0x411281
  41127e:	adc    DWORD PTR ss:[edx-0x7b],0xd8871052
  411286:	push   ebp
  411287:	mov    eax,ds:0xbe57dec6
  41128c:	in     eax,dx
  41128d:	dec    edi
  41128e:	das    
  41128f:	mov    BYTE PTR [edi+ebx*8-0x35],bh
  411293:	(bad)  
  411294:	aas    
  411295:	pop    ebx
  411296:	mov    ebx,0x8fa63264
  41129b:	bswap  ebx
  41129d:	(bad)  
  41129e:	das    
  41129f:	sahf   
  4112a0:	test   DWORD PTR [ecx-0x3],esp
  4112a3:	loopne 0x4112fd
  4112a5:	xor    BYTE PTR [ecx+0x132b3499],ch
  4112ab:	pop    edi
  4112ac:	and    ecx,DWORD PTR gs:[ecx]
  4112af:	xchg   esp,eax
  4112b0:	les    ecx,FWORD PTR ds:0x8cdac1d1
  4112b6:	ins    BYTE PTR es:[edi],dx
  4112b7:	jnp    0x4112cd
  4112b9:	cmp    ah,BYTE PTR [ebp-0x5c7d82de]
  4112bf:	mov    bl,BYTE PTR [eax-0x219fa89f]
  4112c5:	into   
  4112c6:	aas    
  4112c7:	fcmovbe st,st(3)
  4112c9:	inc    eax
  4112ca:	xor    DWORD PTR [ebx-0x4e2f280d],edx
  4112d0:	pop    ebx
  4112d1:	pop    ss
  4112d2:	push   cs
  4112d3:	rol    BYTE PTR [ebx-0x1a004ff3],cl
  4112d9:	adc    al,0x76
  4112db:	jge    0x4112e4
  4112dd:	out    0xcd,al
  4112df:	jg     0x4112cb
  4112e1:	out    dx,al
  4112e2:	jle    0x41134b
  4112e4:	addr16 pop ds
  4112e6:	cwde   
  4112e7:	(bad)  
  4112e8:	clc    
  4112e9:	not    BYTE PTR [ebx+0xfc97ebd]
  4112ef:	js     0x41130c
  4112f1:	inc    ebp
  4112f2:	jecxz  0x411318
  4112f4:	stc    
  4112f5:	pushf  
  4112f6:	test   DWORD PTR [edi+0x1b93d3e1],0xed82571d
  411300:	xor    al,0xfa
  411302:	js     0x4112c6
  411304:	and    edi,ecx
  411306:	les    edi,FWORD PTR [edi+ebx*4+0x1edbb95]
  41130d:	retf   0xcdab
  411310:	and    BYTE PTR [edx],ch
  411312:	mov    edx,0xc85545c6
  411317:	fstp   TBYTE PTR ds:0x335b7849
  41131d:	jl     0x41138e
  41131f:	push   cs
  411320:	add    DWORD PTR [esi+0x41],0xbe348f52
  411327:	aaa    
  411328:	sub    eax,0x1ea30f52
  41132d:	add    BYTE PTR [esi+esi*4-0x3952592b],0x19
  411335:	shl    DWORD PTR [edi],1
  411337:	push   ds
  411338:	pop    edx
  411339:	jb     0x4112d6
  41133b:	xor    bh,bh
  41133d:	mov    ebx,0x734dfecc
  411342:	call   FWORD PTR ds:[edx-0xc]
  411346:	fucomi st,st(3)
  411348:	and    edi,eax
  41134a:	aas    
  41134b:	and    dl,BYTE PTR [edx-0x5123533c]
  411351:	and    ebx,DWORD PTR [edi+edx*1-0x73f7fd77]
  411358:	xchg   esi,eax
  411359:	imul   ebp,DWORD PTR [ecx],0xb0fb7a37
  41135f:	cmp    ah,BYTE PTR [esi]
  411361:	aad    0xf1
  411363:	pop    esp
  411364:	push   cs
  411365:	jne    0x411320
  411367:	in     al,0xe
  411369:	and    DWORD PTR [esi+0x3d],esi
  41136c:	and    bl,dh
  41136e:	fnstenv [edx]
  411370:	mov    ebp,0x2d9d4ce3
  411375:	push   edx
  411376:	imul   ebx,DWORD PTR [edx-0x18b9ddb1],0xe3878d70
  411380:	mov    dl,0xb1
  411382:	sbb    DWORD PTR [ecx-0x59],ebx
  411385:	sub    eax,0x660f0c2f
  41138a:	or     al,0xf6
  41138c:	cmp    dl,BYTE PTR [ebx+0x64]
  41138f:	push   es
  411390:	sub    DWORD PTR [esi+ebp*2],esi
  411393:	(bad)
  411396:	push   ecx
  411397:	test   BYTE PTR [eax+0x3e],ch
  41139a:	or     BYTE PTR [ebx+0x6b],dh
  41139d:	lea    edx,ds:0xeec516cd
  4113a3:	push   esp
  4113a4:	mov    edi,0x47cd31da
  4113a9:	nop    DWORD PTR [edx-0x7c77f87b]
  4113b0:	stc    
  4113b1:	lock (bad) 
  4113b3:	jb     0x411351
  4113b5:	mov    eax,ds:0x37016125
  4113ba:	mov    BYTE PTR [edi-0xf83c1f3],0xdb
  4113c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113c2:	inc    ecx
  4113c3:	or     eax,0xd12d918d
  4113c8:	sbb    dl,0xca
  4113cb:	out    dx,al
  4113cc:	loop   0x4113e9
  4113ce:	test   DWORD PTR [ebx+0x72],ecx
  4113d1:	ja     0x41135d
  4113d3:	shr    bh,cl
  4113d5:	cmp    ebp,esi
  4113d7:	fcom   QWORD PTR [edx]
  4113d9:	and    ch,BYTE PTR [ecx-0x6b64057f]
  4113df:	sbb    al,0x60
  4113e1:	pop    ebx
  4113e2:	push   esi
  4113e3:	(bad)  [esi-0x733df89d]
  4113e9:	add    esi,ebx
  4113eb:	repz out dx,eax
  4113ed:	add    al,0xce
  4113ef:	sbb    BYTE PTR [esi+edx*4-0x63],dl
  4113f3:	mov    esp,0x36421e2a
  4113f8:	xchg   esi,eax
  4113f9:	xor    eax,0xa825ade5
  4113fe:	in     eax,0x8a
  411400:	ins    BYTE PTR es:[edi],dx
  411401:	in     eax,0xd4
  411403:	jne    0x41145c
  411405:	mov    bh,0xf8
  411407:	or     eax,0xdc46dc08
  41140c:	jno    0x411487
  41140e:	rol    DWORD PTR [edi+0x5c2c9695],0xf3
  411415:	ret    
  411416:	dec    ebp
  411417:	adc    ecx,DWORD PTR [eax-0x38]
  41141a:	pusha  
  41141b:	test   DWORD PTR [eax],edi
  41141d:	mov    ds:0x834cb5cc,eax
  411422:	imul   ebx,DWORD PTR [edi-0xa9e977a],0x9fd3058c
  41142c:	leave  
  41142d:	ss scas eax,DWORD PTR es:[edi]
  41142f:	rol    BYTE PTR [ecx],1
  411431:	je     0x411493
  411433:	add    ch,BYTE PTR [ebp+edi*2-0x77]
  411437:	push   ebp
  411438:	(bad)  
  411439:	jmp    0x1c4e0b8a
  41143e:	stc    
  41143f:	test   eax,0xca2aba89
  411444:	jno    0x411433
  411446:	add    al,0xd0
  411448:	pop    ecx
  411449:	xchg   ecx,eax
  41144a:	aad    0x78
  41144c:	int3   
  41144d:	(bad)  
  41144e:	daa    
  41144f:	mov    ch,0xf4
  411451:	jae    0x411433
  411453:	enter  0x30e7,0x73
  411457:	ficom  WORD PTR [ecx-0x69]
  41145a:	jmp    0x411449
  41145c:	or     al,0xfc
  41145e:	jns    0x41144f
  411460:	xor    eax,DWORD PTR [ecx+0x6b31f56f]
  411466:	repnz inc esp
  411468:	xor    dh,BYTE PTR [ebx-0x4]
  41146b:	retf   
  41146c:	jmp    0x4114da
  41146e:	mov    cs,esp
  411470:	pop    ebp
  411471:	xor    DWORD PTR [ebx],edx
  411473:	or     BYTE PTR [edi-0x7c521627],0x78
  41147a:	sbb    eax,0x51
  41147d:	dec    ecx
  41147e:	adc    DWORD PTR [ebp+0x3],ebp
  411481:	cmc    
  411482:	in     al,dx
  411483:	add    BYTE PTR [ebx],0xb4
  411486:	call   0x55e:0xe8711ad7
  41148d:	arpl   WORD PTR [eax-0x78060079],bp
  411493:	cmp    bh,BYTE PTR [ecx+0x5c303c38]
  411499:	in     eax,0x4b
  41149b:	je     0x4114be
  41149d:	adc    dl,bl
  41149f:	adc    esp,edi
  4114a1:	repz (bad) 
  4114a3:	mov    esp,0xe16594cd
  4114a8:	cmp    dh,BYTE PTR [edi-0x38cd9af8]
  4114ae:	sub    DWORD PTR ds:0xf2cbaabc,0x8
  4114b5:	add    bl,BYTE PTR [eax-0x7bfdf3e7]
  4114bb:	mov    DWORD PTR ds:0x3a3b2e21,eax
  4114c1:	or     DWORD PTR [edx],edx
  4114c3:	in     al,0xfd
  4114c5:	rcr    ecx,cl
  4114c7:	sti    
  4114c8:	xor    BYTE PTR [ebx+ebx*2],0xdf
  4114cc:	or     eax,0x13839403
  4114d1:	mov    cl,0x81
  4114d3:	call   0x562:0xbb7b8828
  4114da:	lds    esi,FWORD PTR [ebx]
  4114dc:	out    dx,eax
  4114dd:	test   al,0x4f
  4114df:	scas   eax,DWORD PTR es:[edi]
  4114e0:	rcl    BYTE PTR [eax+0x4d],1
  4114e3:	xchg   ebp,esi
  4114e5:	jg     0x41147e
  4114e7:	and    DWORD PTR [ecx+0x4e3c4636],edi
  4114ed:	in     eax,dx
  4114ee:	xchg   esi,eax
  4114ef:	xor    DWORD PTR [ebp+edx*4+0x5e3c2ea5],ebp
  4114f6:	out    0x35,al
  4114f8:	dec    ebp
  4114f9:	adc    esp,DWORD PTR [edi+0x4be1c9bc]
  4114ff:	les    ecx,FWORD PTR [esi-0x26d9bb4]
  411505:	sub    al,0x47
  411507:	dec    ecx
  411508:	int3   
  411509:	stos   BYTE PTR es:[edi],al
  41150a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41150b:	mov    BYTE PTR [ebp+0x3fe85387],al
  411511:	add    DWORD PTR [edx+0x28],0xffffffcc
  411515:	and    BYTE PTR [edx+0x3f],dh
  411518:	ins    DWORD PTR es:[edi],dx
  411519:	jns    0x411584
  41151b:	jae    0x4114f9
  41151d:	dec    ebx
  41151e:	ror    DWORD PTR [edi+eax*1],1
  411521:	fs dec eax
  411523:	jno    0x4114ab
  411525:	mov    ds:0xbc90ad77,al
  41152a:	dec    esp
  41152b:	cmc    
  41152c:	or     al,0x13
  41152e:	and    cl,BYTE PTR [edx+0x78]
  411531:	mov    DWORD PTR [ecx+0x1],edx
  411534:	mov    ch,0xcf
  411536:	push   ebx
  411537:	enter  0x7116,0xbe
  41153b:	fisttp QWORD PTR [edi]
  41153d:	call   0xf9f3cea1
  411542:	add    eax,0x9a45c0ae
  411547:	sti    
  411548:	and    dh,dl
  41154a:	pop    ds
  41154b:	repz mov WORD PTR [edi+ecx*1],?
  41154f:	ret    0x3e05
  411552:	pop    ebx
  411553:	dec    edx
  411554:	test   BYTE PTR [ecx+0x54],0xfc
  411558:	or     eax,0xf012360b
  41155d:	adc    ah,0x8
  411560:	adc    eax,0x7f5ed37b
  411565:	ror    esp,0x43
  411568:	push   ebx
  411569:	push   esi
  41156a:	lea    ax,[ebp-0x38]
  41156e:	mov    ch,0xce
  411570:	aas    
  411571:	test   eax,0xf29a4222
  411576:	push   edx
  411577:	fwait
  411578:	(bad)  
  411579:	sbb    eax,0x8b9ff6ae
  41157e:	cmp    dl,ah
  411580:	jb     0x411588
  411582:	fsqrt  
  411584:	cvtps2pi mm0,QWORD PTR [edi-0x9]
  411588:	ret    0xa236
  41158b:	and    esp,0x82c02010
  411591:	xlat   BYTE PTR ds:[ebx]
  411592:	in     eax,0xe2
  411594:	fwait
  411595:	inc    ebp
  411596:	inc    ecx
  411597:	inc    eax
  411598:	fistp  DWORD PTR ss:[ebx+0x2c]
  41159c:	sbb    DWORD PTR [ebp+0x4a],ecx
  41159f:	dec    esi
  4115a0:	cmp    BYTE PTR [edi+0x5],ah
  4115a3:	ror    DWORD PTR [ecx],cl
  4115a5:	out    dx,al
  4115a6:	out    dx,eax
  4115a7:	lahf   
  4115a8:	addr16 fsub st,st(7)
  4115ab:	loope  0x41155c
  4115ad:	arpl   WORD PTR [eax+0x1f],dx
  4115b0:	dec    ebx
  4115b1:	push   cs
  4115b2:	push   edx
  4115b3:	adc    DWORD PTR [esi+0x2c39de7f],eax
  4115b9:	jle    0x41156f
  4115bb:	arpl   bx,sp
  4115bd:	jo     0x4115eb
  4115bf:	popf   
  4115c0:	dec    esi
  4115c1:	data16 rol BYTE PTR [esi+0x4a2ba3ce],1
  4115c8:	ins    DWORD PTR es:[edi],dx
  4115c9:	inc    esp
  4115ca:	loopne 0x411632
  4115cc:	push   cs
  4115cd:	adc    al,0xf1
  4115cf:	adc    cl,BYTE PTR [ebp-0x4e7c96c5]
  4115d5:	mov    edi,0x62ef5d5a
  4115da:	ins    BYTE PTR es:[edi],dx
  4115db:	mov    DWORD PTR [edi-0x47e1420c],ebp
  4115e1:	dec    ecx
  4115e2:	test   DWORD PTR [esi],esp
  4115e4:	mov    ch,0xd9
  4115e6:	call   0x439d:0x802e8fe7
  4115ed:	aam    0xdf
  4115ef:	sbb    ch,bl
  4115f1:	loopne 0x411644
  4115f3:	mov    dh,0x1c
  4115f5:	shr    BYTE PTR [esi+edi*8-0x20bf9bfa],0xf
  4115fd:	xchg   ebx,eax
  4115fe:	push   esi
  4115ff:	xor    al,0x45
  411601:	mov    ah,0x44
  411603:	sub    eax,0xab635790
  411608:	pushf  
  411609:	add    cl,ah
  41160b:	shr    bh,cl
  41160d:	mov    ds:0xa59e59b7,eax
  411612:	xchg   esp,eax
  411613:	mov    ah,0x78
  411615:	sub    ah,BYTE PTR [edi+edi*2+0x55]
  411619:	dec    eax
  41161a:	sbb    DWORD PTR [ecx+0x29],esi
  41161d:	imul   ebp,DWORD PTR [esp+ebp*1+0x6181552d],0x3c
  411625:	hlt    
  411626:	pop    edx
  411627:	inc    esi
  411628:	sub    BYTE PTR [edx-0x9],ch
  41162b:	(bad)  
  41162c:	arpl   WORD PTR [ecx+0x3daa6829],si
  411632:	mov    edi,0x8f215d6c
  411637:	leave  
  411638:	push   0xffffff91
  41163a:	push   0xfffffffd
  41163c:	cmp    ecx,DWORD PTR [ebx]
  41163e:	xchg   esp,eax
  41163f:	out    dx,al
  411640:	mov    ah,0xd7
  411642:	outs   dx,DWORD PTR ds:[esi]
  411643:	ret    
  411644:	mul    DWORD PTR ds:[ecx+0x37]
  411648:	test   DWORD PTR [edx],0xc4e4f8ee
  41164e:	pop    ebx
  41164f:	pop    eax
  411650:	popa   
  411651:	pop    ds
  411652:	es fcmovbe st,st(0)
  411655:	xor    DWORD PTR [ebx-0x64b56115],esi
  41165b:	cmp    esi,DWORD PTR [esi]
  41165d:	pop    ebx
  41165e:	cmp    eax,0xfd64e294
  411663:	aas    
  411664:	push   0xfffffff9
  411666:	push   edi
  411667:	add    al,0x5c
  411669:	(bad)  
  41166a:	xor    eax,0x9b2d49db
  41166f:	or     eax,0x33cd124e
  411674:	shl    DWORD PTR [ebx+0x11],cl
  411677:	pop    ss
  411678:	and    dh,BYTE PTR [ecx-0x32]
  41167b:	loopne 0x411679
  41167d:	push   0xdd6a87e7
  411682:	in     al,dx
  411683:	cs scas eax,DWORD PTR es:[edi]
  411685:	(bad)  
  411686:	push   ebp
  411687:	sti    
  411688:	in     al,0xc3
  41168a:	leave  
  41168b:	(bad)  
  41168c:	adc    edi,ebx
  41168e:	das    
  41168f:	dec    ebp
  411690:	pop    eax
  411691:	ins    BYTE PTR es:[edi],dx
  411692:	mov    ds:0x568c5c02,eax
  411697:	and    BYTE PTR [eax-0x70e5a467],bh
  41169d:	sahf   
  41169e:	cmp    eax,0x56643a2d
  4116a3:	jge    0x41167d
  4116a5:	leave  
  4116a6:	lahf   
  4116a7:	sub    DWORD PTR [edx-0x1c4aab35],eax
  4116ad:	add    DWORD PTR [edx],edx
  4116af:	sahf   
  4116b0:	cwde   
  4116b1:	leave  
  4116b2:	and    ecx,edx
  4116b4:	xor    cl,BYTE PTR ds:0x96e5415f
  4116ba:	ins    DWORD PTR es:[edi],dx
  4116bb:	or     DWORD PTR [esi],eax
  4116bd:	stc    
  4116be:	popa   
  4116bf:	and    ebx,edi
  4116c1:	fs ret 
  4116c3:	(bad)  
  4116c4:	cmp    dl,BYTE PTR [edx-0x130ac379]
  4116ca:	sbb    al,0x7a
  4116cc:	or     bl,BYTE PTR [edi+eiz*4]
  4116cf:	ss int3 
  4116d1:	push   ecx
  4116d2:	fcom   DWORD PTR [edx+0x21]
  4116d5:	push   ss
  4116d6:	jmp    0xad84fbb6
  4116db:	mov    BYTE PTR [eax-0x1a],bh
  4116de:	and    esp,eax
  4116e0:	mov    eax,ds:0x6da338fe
  4116e5:	pop    edi
  4116e6:	sub    DWORD PTR [edi-0x13f1b42],edi
  4116ec:	mov    edi,0xff19e1b0
  4116f1:	int3   
  4116f2:	imul   esi,DWORD PTR [ebx+eax*4-0xd],0x6b8dfd89
  4116fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116fb:	add    cl,BYTE PTR [esi]
  4116fd:	sar    BYTE PTR [esi+0x2376cc5d],1
  411703:	loope  0x411692
  411705:	nop
  411706:	outs   dx,BYTE PTR ds:[esi]
  411707:	mov    bl,0xb0
  411709:	jge    0x411774
  41170b:	dec    dx
  41170d:	jo     0x411752
  41170f:	int3   
  411710:	sar    BYTE PTR [ecx+0x48],1
  411713:	loop   0x41169b
  411715:	inc    edi
  411716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411717:	jp     0x411712
  411719:	sub    ch,BYTE PTR [ebp-0x32]
  41171c:	loop   0x411789
  41171e:	sbb    esi,DWORD PTR [ecx-0x21]
  411721:	pop    es
  411722:	push   esi
  411723:	loopne 0x4116fc
  411725:	cmp    ecx,DWORD PTR [eax-0x3467e73d]
  41172b:	mov    bh,BYTE PTR [ecx-0x26]
  41172e:	cmp    eax,0xfed5b218
  411733:	cli    
  411734:	enter  0xa462,0xdb
  411738:	fdivrp st(6),st
  41173a:	cmp    DWORD PTR [edi],esi
  41173c:	out    0x8e,al
  41173e:	sahf   
  41173f:	cmp    esp,DWORD PTR [edx-0xd]
  411742:	addr16 jle 0x41176b
  411745:	fdivr  QWORD PTR [edi-0x2b5bb7b9]
  41174b:	xchg   edi,eax
  41174c:	add    ebp,esi
  41174e:	or     dl,BYTE PTR [eax+esi*8-0x3b]
  411752:	jo     0x41177f
  411754:	dec    ecx
  411755:	xor    DWORD PTR [edi-0x3c],edx
  411758:	cmc    
  411759:	mov    ebx,0xe6b4acee
  41175e:	(bad)  
  41175f:	cli    
  411760:	fwait
  411761:	ss rcl esi,1
  411764:	adc    bl,BYTE PTR [eax+0x50]
  411767:	pmaxub mm3,QWORD PTR [eax+0x365a4dce]
  41176e:	sti    
  41176f:	out    0xd,eax
  411771:	mov    ds:0xee43065f,al
  411776:	or     DWORD PTR [eax+0x6f],0x1a153fde
  41177d:	fidivr DWORD PTR [ebx]
  41177f:	push   0xffffffbc
  411781:	int    0xa0
  411783:	je     0x4117d8
  411785:	jns    0x411760
  411787:	loopne 0x411745
  411789:	lahf   
  41178a:	jecxz  0x411806
  41178c:	add    BYTE PTR [esp+eiz*8],cl
  41178f:	fbld   TBYTE PTR [eax-0xc5099c9]
  411795:	dec    eax
  411796:	sbb    DWORD PTR [edi],0xd7b0345a
  41179c:	push   esp
  41179d:	mov    esi,DWORD PTR [esi+eiz*8+0x3ff212d7]
  4117a4:	pop    ds
  4117a5:	cmc    
  4117a6:	fstp   st(5)
  4117a8:	mov    bh,0xfa
  4117aa:	hlt    
  4117ab:	aad    0x94
  4117ad:	pop    eax
  4117ae:	enter  0x200f,0x3f
  4117b2:	fldenv [ecx+0x3b07a3ee]
  4117b8:	mov    dl,0x16
  4117ba:	push   ds
  4117bb:	das    
  4117bc:	retf   0xcf8c
  4117bf:	ret    
  4117c0:	mov    ds:0x5a39073b,eax
  4117c5:	out    dx,al
  4117c6:	cwde   
  4117c7:	pusha  
  4117c8:	out    0xb4,eax
  4117ca:	mov    BYTE PTR [ebx+0x1112e263],ah
  4117d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117d1:	aam    0xdb
  4117d3:	xor    esi,DWORD PTR [esi-0x6d7fc373]
  4117d9:	push   edx
  4117da:	jbe    0x4117d5
  4117dc:	jnp    0x411786
  4117de:	jg     0x4117e2
  4117e0:	ror    BYTE PTR [ecx],1
  4117e2:	xchg   BYTE PTR [esi+edx*1-0x7c],dh
  4117e6:	ja     0x41176f
  4117e8:	mov    dh,0xd8
  4117ea:	je     0x4117ee
  4117ec:	adc    esp,0xfbb140bf
  4117f2:	pop    ebx
  4117f3:	push   esp
  4117f4:	mov    ah,0xed
  4117f6:	jle    0x41178f
  4117f8:	cmp    ecx,DWORD PTR [ebx-0x59d8617f]
  4117fe:	mov    ch,0x9f
  411800:	mov    DWORD PTR [edx],ecx
  411802:	pop    esi
  411803:	mov    cl,0xb7
  411805:	mov    edi,0xfe36f027
  41180a:	ret    
  41180b:	out    dx,al
  41180c:	xchg   ebx,eax
  41180d:	adc    bl,BYTE PTR [edi-0x42]
  411810:	aaa    
  411811:	mov    dl,0x5e
  411813:	clc    
  411814:	dec    ebx
  411815:	pop    ss
  411816:	push   es
  411817:	pop    ds
  411818:	or     al,0x6c
  41181a:	ror    DWORD PTR [ecx+ebp*1+0x28],cl
  41181e:	adc    BYTE PTR ss:[edi],al
  411821:	lods   eax,DWORD PTR ds:[esi]
  411822:	mov    al,ds:0xb64b39c7
  411827:	mov    bl,0x31
  411829:	stos   BYTE PTR es:[edi],al
  41182a:	push   0x3111167d
  41182f:	dec    esi
  411830:	push   ecx
  411831:	dec    ebp
  411832:	cld    
  411833:	retf   0x4c8d
  411836:	or     dh,al
  411838:	(bad)  [edx+0x5a]
  41183b:	out    dx,al
  41183c:	and    BYTE PTR ds:0x8f83d005,dl
  411842:	push   ebx
  411843:	(bad)  
  411844:	out    0x75,eax
  411846:	or     edx,esp
  411848:	(bad)  
  411849:	out    0x38,eax
  41184b:	mov    DWORD PTR [edx-0x62f5acad],edx
  411851:	sbb    eax,0x7d4c90f0
  411856:	repz push ecx
  411858:	dec    eax
  411859:	xor    DWORD PTR [ecx],ebx
  41185b:	mov    WORD PTR [ecx],fs
  41185d:	mov    dl,0x57
  41185f:	js     0x41188f
  411861:	mov    ds:0xf796ffaf,al
  411866:	and    al,0x87
  411868:	in     al,0xc8
  41186a:	cmp    al,0xa4
  41186c:	fcomp  DWORD PTR [ebx]
  41186e:	add    al,0xc3
  411870:	mov    es,WORD PTR [ebp+0x57]
  411873:	lods   eax,DWORD PTR ds:[esi]
  411874:	jge    0x411846
  411876:	pusha  
  411877:	les    ebx,FWORD PTR [ecx+0xd]
  41187a:	cmp    al,0x5e
  41187c:	and    edx,ebx
  41187e:	or     bl,BYTE PTR [eax]
  411880:	jle    0x411815
  411882:	and    eax,DWORD PTR [edx]
  411884:	lods   al,BYTE PTR ds:[esi]
  411885:	jno    0x4118e4
  411887:	lea    ebp,[edi+0x10]
  41188a:	or     al,0x9d
  41188c:	call   0x5008624d
  411891:	inc    edi
  411892:	xchg   ebp,eax
  411893:	retf   
  411894:	lods   al,BYTE PTR ds:[esi]
  411895:	lods   eax,DWORD PTR ds:[esi]
  411896:	dec    esi
  411897:	test   eax,0x585b740f
  41189c:	shr    BYTE PTR ss:[ebx+0x46bd0b81],1
  4118a3:	(bad)  
  4118a4:	out    0xd6,eax
  4118a6:	mov    bh,0x12
  4118a8:	sub    al,0x6c
  4118aa:	pop    edx
  4118ab:	push   0x57
  4118ad:	add    eax,0x41b297ea
  4118b2:	cmp    bl,BYTE PTR [eax]
  4118b4:	gs scas al,BYTE PTR es:[edi]
  4118b6:	inc    edi
  4118b7:	retf   0x4060
  4118ba:	fnstenv [edx-0x5f63037b]
  4118c0:	add    BYTE PTR [edi-0x50],bl
  4118c3:	push   ebp
  4118c4:	inc    ebx
  4118c5:	and    eax,0x3a4f0671
  4118ca:	ss mov ch,0x88
  4118cd:	pop    edi
  4118ce:	xor    edi,DWORD PTR [ebp-0x7e]
  4118d1:	mov    bh,0x54
  4118d3:	adc    esp,ebx
  4118d5:	sub    BYTE PTR [edi-0xa615796],dl
  4118db:	mov    cl,0x5e
  4118dd:	adc    BYTE PTR [ebp-0x522d0c0f],0x2b
  4118e4:	ss data16 adc al,0x8c
  4118e8:	push   ds
  4118e9:	sahf   
  4118ea:	das    
  4118eb:	popf   
  4118ec:	das    
  4118ed:	jo     0x41191d
  4118ef:	jae    0x4118ac
  4118f1:	add    DWORD PTR [ebx+0x7dd8f1bb],ebx
  4118f7:	int    0xbe
  4118f9:	jbe    0x41195f
  4118fb:	or     ch,0xdb
  4118fe:	inc    edx
  4118ff:	mov    edx,0x1bae841e
  411904:	xchg   ecx,eax
  411905:	out    0x1b,eax
  411907:	clc    
  411908:	xor    eax,0x666d0fbb
  41190d:	mov    esi,0xb982d22b
  411912:	push   cs
  411913:	gs dec esi
  411915:	mov    ebp,0x4be19d46
  41191a:	adc    BYTE PTR [eax],ah
  41191c:	xor    eax,0xf69ee942
  411921:	jl     0x4118ef
  411923:	aas    
  411924:	cmp    eax,DWORD PTR [eax-0x3f]
  411927:	cwde   
  411928:	mov    DWORD PTR [eax+0x1728a314],ebx
  41192e:	bnd js 0x411972
  411931:	add    BYTE PTR [ebx],0x3f
  411934:	xchg   edx,eax
  411935:	scas   eax,DWORD PTR es:[edi]
  411936:	mov    bl,0xdf
  411938:	lods   al,BYTE PTR ds:[esi]
  411939:	xchg   edx,eax
  41193a:	bound  ebx,QWORD PTR [edi+esi*1-0xce8a6e]
  411941:	pop    edi
  411942:	mov    ebx,0xb871e9aa
  411947:	adc    DWORD PTR [ecx],esp
  411949:	cmp    DWORD PTR [eax-0x294ca454],ebp
  41194f:	pop    ss
  411950:	into   
  411951:	and    al,0x6c
  411953:	push   esp
  411954:	or     BYTE PTR [edx-0x61],bh
  411957:	test   eax,0x2b802e40
  41195c:	or     DWORD PTR [ebx+eiz*4+0x4d1857df],eax
  411963:	pop    ecx
  411964:	call   0x34f7:0xc38550c6
  41196b:	push   edx
  41196c:	mov    ah,0xdd
  41196e:	outs   dx,BYTE PTR es:[esi]
  411970:	cli    
  411971:	je     0x4119cd
  411973:	cmp    ebp,esi
  411975:	lahf   
  411976:	pusha  
  411977:	arpl   WORD PTR [ebp+0x68],dx
  41197a:	pop    ds
  41197b:	sub    ch,bh
  41197d:	rcr    BYTE PTR [edi-0x2b],0x1c
  411981:	add    ch,ch
  411983:	pop    ebx
  411984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411985:	or     edi,DWORD PTR [ebx+0x4505217e]
  41198b:	rcr    BYTE PTR [esi],0x98
  41198e:	mov    ebx,0x1c18d4c5
  411993:	inc    ecx
  411994:	in     eax,0xe9
  411996:	neg    edi
  411998:	cli    
  411999:	push   edi
  41199a:	inc    eax
  41199b:	inc    ecx
  41199c:	rol    esp,0xaa
  41199f:	pop    eax
  4119a0:	inc    ebp
  4119a1:	ret    
  4119a2:	and    edi,DWORD PTR [ebp+esi*8-0x51cd038a]
  4119a9:	jl     0x41199d
  4119ab:	adc    DWORD PTR [ecx+0x48],esp
  4119ae:	fs out dx,eax
  4119b0:	mov    edi,0x9a10ba81
  4119b5:	(bad)  
  4119b6:	mov    dl,BYTE PTR [ecx-0x2cd61ab3]
  4119bc:	add    ch,al
  4119be:	jle    0x41197c
  4119c0:	sbb    ch,BYTE PTR [ecx]
  4119c2:	les    edi,FWORD PTR [ecx-0x3c20ba37]
  4119c8:	mov    cl,BYTE PTR [ecx+ebp*4+0x1]
  4119cc:	mov    esi,DWORD PTR [edx-0xa]
  4119cf:	jmp    0x4119f8
  4119d1:	inc    esp
  4119d2:	xor    esi,edi
  4119d4:	adc    bh,BYTE PTR [esi+0x25]
  4119d7:	(bad)
  4119db:	push   esi
  4119dc:	inc    edi
  4119dd:	fdivrp st(2),st
  4119df:	inc    esi
  4119e0:	xor    DWORD PTR [eax+ecx*2-0x2c533877],esi
  4119e7:	test   BYTE PTR [esi-0x22],ch
  4119ea:	scas   eax,DWORD PTR es:[edi]
  4119eb:	fdivr  QWORD PTR [esi]
  4119ed:	call   0x71b87ba9
  4119f2:	fild   WORD PTR [edi-0x5b]
  4119f5:	sub    eax,0x84bb1b6c
  4119fa:	and    BYTE PTR [edi],bh
  4119fc:	adc    eax,0xcbffad99
  411a01:	mov    eax,ds:0x22ee8eb9
  411a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a07:	in     al,0x1e
  411a09:	mov    edx,DWORD PTR [ebp+0x8]
  411a0c:	mov    ebx,DWORD PTR [ebp-0x58]
  411a0f:	add    edx,0x5708f8
  411a15:	imul   edx,ebx
  411a18:	mov    DWORD PTR [ebp-0x58],edx
  411a1b:	mov    edx,DWORD PTR [ebp+0x8]
  411a1e:	mov    ebx,DWORD PTR [ebp-0x54]
  411a21:	add    edx,0x64f8da
  411a27:	or     edx,ebx
  411a29:	mov    DWORD PTR [ebp-0x54],edx
  411a2c:	mov    edx,DWORD PTR [ebp+0x8]
  411a2f:	mov    ebx,DWORD PTR [ebp-0x50]
  411a32:	add    edx,ecx
  411a34:	xor    edx,ebx
  411a36:	mov    DWORD PTR [ebp-0x50],edx
  411a39:	mov    edx,DWORD PTR [ebp+0x8]
  411a3c:	mov    ebx,DWORD PTR [ebp-0x4c]
  411a3f:	add    edx,edi
  411a41:	and    edx,ebx
  411a43:	mov    DWORD PTR [ebp-0x4c],edx
  411a46:	mov    edx,DWORD PTR [ebp+0x8]
  411a49:	mov    ebx,DWORD PTR [ebp-0x48]
  411a4c:	lea    edx,[ebx+edx*1+0x241fc1f]
  411a53:	mov    DWORD PTR [ebp-0x48],edx
  411a56:	mov    edx,DWORD PTR [ebp+0x8]
  411a59:	mov    ebx,0xfa5e15e2
  411a5e:	sub    ebx,edx
  411a60:	add    ebx,DWORD PTR [ebp-0x44]
  411a63:	mov    DWORD PTR [ebp-0x44],ebx
  411a66:	mov    edx,DWORD PTR [ebp+0x8]
  411a69:	xor    edx,eax
  411a6b:	add    edx,esi
  411a6d:	jne    0x40f670
  411a73:	mov    edx,DWORD PTR [ebp-0xc]
  411a76:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a7d:	mov    bl,BYTE PTR [ebp-0x1]
  411a80:	cmp    dl,bl
  411a82:	je     0x413ee6
  411a88:	mov    ecx,DWORD PTR [ebp-0x5c]
  411a8b:	mov    edx,DWORD PTR [ebp-0xc]
  411a8e:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a95:	mov    ebx,DWORD PTR [ebp+0xc]
  411a98:	xor    ecx,eax
  411a9a:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  411aa1:	jne    0x418726
  411aa7:	mov    ecx,DWORD PTR [ebp-0x5c]
  411aaa:	mov    edx,DWORD PTR [ebp+0xc]
  411aad:	xor    ecx,eax
  411aaf:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  411ab7:	mov    edx,DWORD PTR [ebp-0x18]
  411aba:	xor    edx,eax
  411abc:	add    edx,esi
  411abe:	cmp    ecx,edx
  411ac0:	mov    ecx,DWORD PTR [ebp-0x14]
  411ac3:	mov    DWORD PTR [ebp+0x8],ecx
  411ac6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac9:	je     0x41abb4
  411acf:	xor    ecx,eax
  411ad1:	add    ecx,esi
  411ad3:	mov    ecx,0x242ebed
  411ad8:	je     0x4162f4
  411ade:	mov    edx,DWORD PTR [ebp+0x8]
  411ae1:	mov    ebx,DWORD PTR [ebp-0x8]
  411ae4:	xor    edx,eax
  411ae6:	xor    ebx,eax
  411ae8:	sub    edx,ebx
  411aea:	sub    edx,esi
  411aec:	xor    edx,eax
  411aee:	mov    DWORD PTR [ebp+0x8],edx
  411af1:	mov    edx,DWORD PTR [ebp+0x8]
  411af4:	mov    ebx,DWORD PTR [ebp-0x58]
  411af7:	add    edx,0x5708f8
  411afd:	imul   edx,ebx
  411b00:	mov    DWORD PTR [ebp-0x58],edx
  411b03:	mov    edx,DWORD PTR [ebp+0x8]
  411b06:	mov    ebx,DWORD PTR [ebp-0x54]
  411b09:	add    edx,0x64f8da
  411b0f:	or     edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x54],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x50]
  411b1a:	add    edx,ecx
  411b1c:	xor    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x50],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b27:	add    edx,edi
  411b29:	and    edx,ebx
  411b2b:	mov    DWORD PTR [ebp-0x4c],edx
  411b2e:	mov    edx,DWORD PTR [ebp+0x8]
  411b31:	mov    ebx,DWORD PTR [ebp-0x48]
  411b34:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b3b:	mov    DWORD PTR [ebp-0x48],edx
  411b3e:	mov    edx,DWORD PTR [ebp+0x8]
  411b41:	mov    ebx,0xfa5e15e2
  411b46:	sub    ebx,edx
  411b48:	add    ebx,DWORD PTR [ebp-0x44]
  411b4b:	mov    DWORD PTR [ebp-0x44],ebx
  411b4e:	mov    edx,DWORD PTR [ebp+0x8]
  411b51:	xor    edx,eax
  411b53:	add    edx,esi
  411b55:	jne    0x411ade
  411b5b:	jmp    0x4162f4
  411b60:	jmp    0x413ee6
  411b65:	out    0x82,al
  411b67:	push   es
  411b68:	and    eax,0x81c5a506
  411b6d:	outs   dx,BYTE PTR ds:[esi]
  411b6e:	fs sub eax,0x220444ed
  411b74:	loopne 0x411ba4
  411b76:	scas   al,BYTE PTR es:[edi]
  411b77:	jp     0x411bf3
  411b79:	add    DWORD PTR [edi+0x7a],ebx
  411b7c:	jp     0x411b96
  411b7e:	and    al,0x13
  411b80:	and    dl,BYTE PTR [eax]
  411b82:	test   DWORD PTR [ebp+0x54dd4b31],eax
  411b88:	test   BYTE PTR [ebx],0x7d
  411b8b:	jo     0x411bc2
  411b8d:	fs push edx
  411b8f:	rcl    BYTE PTR [ecx],0x74
  411b92:	loope  0x411bdc
  411b94:	mov    cl,0xb1
  411b96:	dec    esi
  411b97:	das    
  411b98:	scas   al,BYTE PTR es:[edi]
  411b99:	sahf   
  411b9a:	mov    ecx,DWORD PTR [esp+eax*1]
  411b9d:	es xor dl,al
  411ba0:	mov    edi,0x64ac4339
  411ba5:	addr16 js 0x411b88
  411ba8:	xor    eax,0x98aa85f9
  411bad:	loope  0x411b4d
  411baf:	dec    ebp
  411bb0:	push   esp
  411bb1:	aaa    
  411bb2:	int    0x4
  411bb4:	dec    esp
  411bb5:	xor    al,0x39
  411bb7:	adc    cl,BYTE PTR [ebx-0x13]
  411bba:	test   bh,bh
  411bbc:	push   esi
  411bbd:	and    edi,ecx
  411bbf:	(bad)  
  411bc0:	jecxz  0x411b56
  411bc2:	push   ebp
  411bc3:	aam    0x71
  411bc5:	adc    al,0xff
  411bc7:	cwde   
  411bc8:	in     al,dx
  411bc9:	out    dx,al
  411bca:	test   DWORD PTR [ebp-0x2c],ebx
  411bcd:	or     BYTE PTR [edi-0x66ada085],ah
  411bd3:	pushf  
  411bd4:	inc    ecx
  411bd5:	call   0xe6f91abc
  411bda:	push   0xac21ec2a
  411bdf:	sbb    esi,DWORD PTR ds:0xae7724f6
  411be5:	fwait
  411be6:	adc    BYTE PTR [eax],0xda
  411be9:	sub    ebx,DWORD PTR [ebx+0x15878fef]
  411bef:	das    
  411bf0:	mov    ah,0x38
  411bf2:	ins    BYTE PTR es:[edi],dx
  411bf3:	and    al,0xc8
  411bf5:	das    
  411bf6:	fwait
  411bf7:	pop    ebx
  411bf8:	push   ebx
  411bf9:	leave  
  411bfa:	outs   dx,BYTE PTR ds:[esi]
  411bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bfc:	sub    ch,bh
  411bfe:	dec    eax
  411bff:	(bad)  
  411c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c02:	stc    
  411c03:	xor    eax,0xdeddffb0
  411c08:	loope  0x411c05
  411c0a:	popf   
  411c0b:	mov    ds:0x544a3559,eax
  411c10:	push   esp
  411c11:	aas    
  411c12:	test   DWORD PTR [eax+0x1f],0x80ab896a
  411c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c1a:	cmp    bl,dl
  411c1c:	mov    eax,ds:0x474c034d
  411c21:	test   DWORD PTR [edi-0x2248b3a6],edi
  411c27:	leave  
  411c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c29:	sbb    edi,DWORD PTR [esp+eax*2+0x15]
  411c2d:	sar    dh,0x85
  411c30:	cs (bad) 
  411c32:	std    
  411c33:	test   ecx,0xac401113
  411c39:	mov    al,ds:0x1a123751
  411c3e:	xor    eax,0x6a1f12e3
  411c43:	aam    0x5e
  411c45:	sbb    BYTE PTR [ebx+0x3d],ah
  411c48:	sahf   
  411c49:	stos   DWORD PTR es:[edi],eax
  411c4a:	mov    edi,DWORD PTR [esi-0x56]
  411c4d:	mov    ebx,0x727cef5b
  411c52:	mov    ecx,0xc577cf20
  411c57:	(bad)
  411c5a:	sahf   
  411c5b:	jp     0x411c37
  411c5d:	xor    esi,ebp
  411c5f:	push   ecx
  411c60:	jnp    0x411c39
  411c62:	push   ecx
  411c63:	xchg   ebp,ecx
  411c65:	jg     0x411c47
  411c67:	cwde   
  411c68:	test   DWORD PTR [ebp+0x28],ebx
  411c6b:	cs test al,0x71
  411c6e:	daa    
  411c6f:	in     al,0x12
  411c71:	cld    
  411c72:	and    al,0xad
  411c74:	ret    
  411c75:	nop
  411c76:	ds dec ebx
  411c78:	adc    ebp,DWORD PTR [ebx]
  411c7a:	fistp  DWORD PTR ss:[ebp-0x75e42289]
  411c81:	push   edx
  411c82:	and    al,0x16
  411c84:	daa    
  411c85:	shl    DWORD PTR [ebp+ecx*2+0x66ade236],cl
  411c8c:	jno    0x411c87
  411c8e:	test   al,0xde
  411c90:	mov    dl,0x9f
  411c92:	dec    ebp
  411c93:	adc    ebp,DWORD PTR [ebp+0x0]
  411c96:	adc    eax,0x826cb72e
  411c9b:	mov    cl,0xee
  411c9d:	xor    al,0x7d
  411c9f:	aam    0x81
  411ca1:	repz xor BYTE PTR [ecx],cl
  411ca4:	aam    0x82
  411ca6:	(bad)  
  411ca7:	mov    ebp,0xab1639ff
  411cac:	ins    BYTE PTR es:[edi],dx
  411cad:	stos   DWORD PTR es:[edi],eax
  411cae:	int3   
  411caf:	addr16 loop 0x411c4b
  411cb2:	jmp    0x411ca5
  411cb4:	pop    esp
  411cb5:	xchg   ebp,eax
  411cb6:	retf   
  411cb7:	shl    DWORD PTR [edx-0x36],1
  411cba:	jb     0x411ce9
  411cbc:	lods   eax,DWORD PTR ds:[esi]
  411cbd:	xor    eax,esp
  411cbf:	outs   dx,BYTE PTR ds:[esi]
  411cc0:	ret    
  411cc1:	and    eax,DWORD PTR [esi]
  411cc3:	add    al,0xc5
  411cc5:	clc    
  411cc6:	jae    0x411d04
  411cc8:	nop
  411cc9:	mov    bh,0xcf
  411ccb:	outs   dx,DWORD PTR ds:[esi]
  411ccc:	sbb    al,BYTE PTR [edi+0x23]
  411ccf:	js     0x411c9c
  411cd1:	push   ds
  411cd2:	popa   
  411cd3:	xchg   esi,eax
  411cd4:	nop
  411cd5:	xlat   BYTE PTR ds:[ebx]
  411cd6:	cs test bh,dh
  411cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cda:	aad    0x9e
  411cdc:	in     al,0x44
  411cde:	push   ebp
  411cdf:	dec    ebx
  411ce0:	scas   eax,DWORD PTR es:[edi]
  411ce1:	pop    edi
  411ce2:	mov    bh,0x1e
  411ce4:	mov    edx,DWORD PTR [edi+0x516e3cd2]
  411cea:	push   ds
  411ceb:	push   edx
  411cec:	xchg   BYTE PTR [eax+0x50ae32ad],bl
  411cf2:	(bad)  [edi]
  411cf4:	les    ecx,FWORD PTR [ebx]
  411cf6:	outs   dx,BYTE PTR ds:[esi]
  411cf7:	adc    bl,BYTE PTR [ecx]
  411cf9:	xor    BYTE PTR [ecx],ah
  411cfb:	mov    gs,WORD PTR ds:0x6cca35bf
  411d01:	push   ecx
  411d02:	cmp    al,0x2c
  411d04:	dec    esi
  411d05:	add    al,0xa3
  411d07:	cmp    DWORD PTR [eax],ecx
  411d09:	loope  0x411ce9
  411d0b:	mov    bh,al
  411d0d:	sub    DWORD PTR [edx+0x1d080b3d],ebx
  411d13:	mov    al,0x11
  411d15:	add    bh,bh
  411d17:	call   0x8a21cd49
  411d1c:	aam    0xdf
  411d1e:	lock mov bh,0xf2
  411d21:	mov    ebp,0x69121d94
  411d26:	iret   
  411d27:	sub    cl,BYTE PTR [ebx+edi*8-0x75]
  411d2b:	mov    ecx,0x2e8f8e05
  411d30:	ds mov dh,0xcb
  411d33:	call   0xd362ba29
  411d38:	adc    al,0x45
  411d3a:	mov    DWORD PTR [edx+0x16dfd211],esi
  411d40:	mov    al,0xe1
  411d42:	push   ebx
  411d43:	cmp    al,0x4d
  411d45:	ja     0x411d2f
  411d47:	xchg   edx,eax
  411d48:	jbe    0x411cdc
  411d4a:	(bad)
  411d4e:	or     al,0xe8
  411d50:	sub    eax,0x788d545f
  411d55:	stc    
  411d56:	and    DWORD PTR [edi+0x46],esp
  411d59:	jmp    0x411d76
  411d5b:	div    DWORD PTR [esi+0x3954e63d]
  411d61:	xchg   esp,eax
  411d62:	mov    eax,ds:0x11403f50
  411d67:	push   ds
  411d68:	outs   dx,BYTE PTR ds:[esi]
  411d69:	es cmc 
  411d6b:	std    
  411d6c:	addr16 pop edx
  411d6e:	mov    esp,0xd2542b8c
  411d73:	out    dx,al
  411d74:	leave  
  411d75:	pop    ss
  411d76:	adc    al,BYTE PTR [ebp-0x1f]
  411d79:	and    DWORD PTR [edx-0x62040fae],0xffffffea
  411d80:	imul   esi,DWORD PTR [esi-0x5a],0x14
  411d84:	cmc    
  411d85:	xor    ecx,eax
  411d87:	sub    al,BYTE PTR [esi-0x30]
  411d8a:	sub    BYTE PTR [esp+edx*2+0x30],dh
  411d8e:	pop    esp
  411d8f:	jp     0x411d36
  411d91:	leave  
  411d92:	shr    DWORD PTR [edi],0x61
  411d95:	sbb    ebp,ebp
  411d97:	mov    ah,0x92
  411d99:	jns    0x411d97
  411d9b:	or     DWORD PTR [ebx+0x5f],ecx
  411d9e:	nop
  411d9f:	retf   0xbea1
  411da2:	pop    edi
  411da3:	outs   dx,DWORD PTR ds:[esi]
  411da4:	lods   al,BYTE PTR ds:[esi]
  411da5:	adc    DWORD PTR [edx+edi*8],ebp
  411da8:	xor    BYTE PTR [eax],ch
  411daa:	vminpd xmm5,xmm6,XMMWORD PTR [esi-0x31bc7b41]
  411db2:	mov    esp,0xeff3dcbd
  411db7:	adc    BYTE PTR [ebp+0x64],ch
  411dba:	or     al,0x39
  411dbc:	rol    BYTE PTR [ecx],cl
  411dbe:	sub    eax,0x4094e823
  411dc3:	mov    ah,0x90
  411dc5:	xor    bh,BYTE PTR ds:0xd5558333
  411dcb:	fist   DWORD PTR [edi+0x31195b16]
  411dd1:	add    DWORD PTR [esi-0x488ecb26],0x4f541be8
  411ddb:	sahf   
  411ddc:	je     0x411e22
  411dde:	sub    eax,0x500ce0af
  411de3:	test   eax,0x4f1f76c7
  411de8:	xor    eax,0x8a916a61
  411ded:	and    BYTE PTR [edx+0x6f],ah
  411df0:	mov    esp,0x281a6947
  411df5:	pop    eax
  411df6:	push   es
  411df7:	mov    al,ds:0x637367dc
  411dfc:	jmp    0xf35168e3
  411e01:	adc    DWORD PTR [esi-0x39fcf04a],0xffffff82
  411e08:	sbb    DWORD PTR [ebp-0x1f],0x63
  411e0c:	push   es
  411e0d:	adc    bh,BYTE PTR [esi]
  411e0f:	inc    edi
  411e10:	cmp    bl,BYTE PTR [ecx+0x72]
  411e13:	xchg   esi,eax
  411e14:	int    0xcf
  411e16:	mov    edi,0x70a125cc
  411e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e1c:	add    ebx,DWORD PTR [ebx+0x3c676130]
  411e22:	sub    al,0xec
  411e24:	adc    DWORD PTR [ecx+0x29],0x6180ba33
  411e2b:	jnp    0x411e01
  411e2d:	jl     0x411df7
  411e2f:	retf   
  411e30:	(bad)  
  411e31:	mov    ch,0xc0
  411e33:	cwde   
  411e34:	ret    0xfbaf
  411e37:	xchg   esi,eax
  411e38:	ror    dh,cl
  411e3a:	add    eax,0xc8563cad
  411e3f:	dec    ebx
  411e40:	shl    BYTE PTR [ebx],cl
  411e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e44:	push   cs
  411e45:	mov    eax,ds:0xc72245f
  411e4a:	cdq    
  411e4b:	je     0x411ddc
  411e4d:	retf   
  411e4e:	sub    BYTE PTR [edi-0x22],al
  411e51:	dec    eax
  411e52:	das    
  411e53:	test   eax,0x8bd8f629
  411e58:	(bad)  
  411e59:	lahf   
  411e5a:	fidivr WORD PTR [ecx+0x39]
  411e5d:	pop    edi
  411e5e:	cli    
  411e5f:	jmp    0x8d5d:0xc9552fb6
  411e66:	pop    ds
  411e67:	xchg   esp,eax
  411e68:	mov    eax,ds:0x30a2aa65
  411e6d:	xor    esi,0x4e
  411e70:	pop    es
  411e71:	dec    edx
  411e72:	mov    ebx,0x96045ae0
  411e77:	clc    
  411e78:	popf   
  411e79:	int3   
  411e7a:	cdq    
  411e7b:	mov    al,ds:0x3d3d2d22
  411e80:	ins    BYTE PTR es:[edi],dx
  411e81:	sbb    al,0xca
  411e83:	ret    0xbe7f
  411e86:	mov    esp,edi
  411e88:	jl     0x411ec4
  411e8a:	data16 (bad) 
  411e8c:	xchg   edi,eax
  411e8d:	sub    eax,0x7dcc7a73
  411e92:	aam    0x47
  411e94:	adc    BYTE PTR [edx-0x788c37b2],al
  411e9a:	shr    BYTE PTR [edx],cl
  411e9c:	pop    ss
  411e9d:	pop    ecx
  411e9e:	jnp    0x411ec6
  411ea0:	push   cs
  411ea1:	imul   ecx,DWORD PTR [edx-0x3e],0x77
  411ea5:	mov    dh,al
  411ea7:	jecxz  0x411ed2
  411ea9:	int3   
  411eaa:	leave  
  411eab:	dec    esp
  411eac:	data16 fdivr QWORD PTR [ebx]
  411eaf:	cmp    al,0xbe
  411eb1:	aaa    
  411eb2:	inc    ebx
  411eb3:	mov    bl,0x3c
  411eb5:	pop    ebp
  411eb6:	repz retf 0x677c
  411eba:	jge    0x411e3f
  411ebc:	retf   
  411ebd:	jae    0x411f30
  411ebf:	and    al,0xb4
  411ec1:	in     eax,dx
  411ec2:	out    dx,eax
  411ec3:	sysenter 
  411ec5:	loopne 0x411f08
  411ec7:	jge    0x411f30
  411ec9:	imul   esi,DWORD PTR [esi],0xc39646f0
  411ecf:	out    dx,al
  411ed0:	clc    
  411ed1:	xchg   edx,eax
  411ed2:	pop    es
  411ed3:	mov    dh,0xf9
  411ed5:	ret    0xca37
  411ed8:	cmp    eax,0x6e6945b3
  411edd:	fwait
  411ede:	sub    eax,DWORD PTR [ecx]
  411ee0:	xor    bl,BYTE PTR [ecx+0x4d8e6943]
  411ee6:	test   edx,0x4e29c5a8
  411eec:	or     eax,esp
  411eee:	jo     0x411e88
  411ef0:	mov    cl,0xf5
  411ef2:	sbb    esi,DWORD PTR [edx]
  411ef4:	pusha  
  411ef5:	pop    esi
  411ef6:	xchg   BYTE PTR [ecx+0x44],dl
  411ef9:	loop   0x411eed
  411efb:	pop    esi
  411efc:	lsl    edx,WORD PTR [ecx+esi*4+0x20c1b24a]
  411f04:	into   
  411f05:	add    DWORD PTR [ebx-0x4a31c275],ebp
  411f0b:	(bad)  
  411f0c:	outs   dx,BYTE PTR ds:[esi]
  411f0d:	out    dx,eax
  411f0e:	dec    WORD PTR [ebp-0x45c53f54]
  411f15:	jmp    0x4a4a4e0e
  411f1a:	or     bh,dh
  411f1c:	jmp    0x411eda
  411f1e:	add    bh,ah
  411f20:	xchg   ecx,eax
  411f21:	mov    cl,0x2c
  411f23:	inc    ebp
  411f24:	das    
  411f25:	fcom   DWORD PTR [eax]
  411f27:	aaa    
  411f28:	push   ss
  411f29:	adc    ecx,DWORD PTR [eax-0x3e7eccf2]
  411f2f:	inc    ecx
  411f30:	push   ss
  411f31:	punpcklwd mm3,DWORD PTR [eax+0x9]
  411f35:	loope  0x411ebd
  411f37:	jmp    0x411f2c
  411f39:	push   edi
  411f3a:	sbb    ebx,DWORD PTR [ebp+eiz*2+0x4827afc4]
  411f41:	xchg   ebp,eax
  411f42:	push   cs
  411f43:	jle    0x411f28
  411f45:	and    eax,0x2e9823c6
  411f4a:	push   0x1c
  411f4c:	imul   edx,edx,0xffffffb2
  411f4f:	dec    ebp
  411f50:	fcomp  QWORD PTR [eax]
  411f52:	pop    edi
  411f53:	jle    0x411f50
  411f55:	pop    ecx
  411f56:	xor    esi,DWORD PTR [ebx]
  411f58:	(bad)  
  411f59:	jno    0x411f6f
  411f5b:	pop    ebp
  411f5c:	or     edi,DWORD PTR [ebx-0x47]
  411f5f:	push   edi
  411f60:	loope  0x411fd8
  411f62:	push   esi
  411f63:	addr16 jbe 0x411fd5
  411f66:	jae    0x411f6e
  411f68:	push   esi
  411f69:	(bad)  
  411f6a:	push   ss
  411f6b:	ret    0xda01
  411f6e:	fwait
  411f6f:	retf   
  411f70:	ss inc ebp
  411f72:	pop    esi
  411f73:	mov    eax,0x91305bb0
  411f78:	xchg   esp,eax
  411f79:	ins    DWORD PTR es:[edi],dx
  411f7a:	loopne 0x411f32
  411f7c:	mov    ch,0x16
  411f7e:	in     al,dx
  411f7f:	and    esp,ebp
  411f81:	popf   
  411f82:	fs imul eax,ecx,0xffffffa1
  411f86:	and    al,BYTE PTR [esi-0x17]
  411f89:	dec    esi
  411f8a:	push   ebp
  411f8b:	mov    dl,0x5e
  411f8d:	xor    DWORD PTR [esi-0x6a],ebx
  411f90:	dec    esp
  411f91:	push   ds
  411f92:	cmp    eax,DWORD PTR [ebx]
  411f94:	fmul   DWORD PTR ds:0xf62d26ec
  411f9a:	inc    ebp
  411f9b:	cmp    al,0x94
  411f9d:	mov    ah,0x6c
  411f9f:	stc    
  411fa0:	mov    BYTE PTR [eax+0x25305a9b],bl
  411fa6:	pop    ebp
  411fa7:	(bad)  
  411fa9:	sub    eax,0x83477b0d
  411fae:	mov    al,0x41
  411fb0:	dec    ebx
  411fb1:	stc    
  411fb2:	pop    ecx
  411fb3:	icebp  
  411fb4:	xlat   BYTE PTR ds:[ebx]
  411fb5:	or     edx,ebp
  411fb7:	test   edi,esi
  411fb9:	iret   
  411fba:	ins    DWORD PTR es:[edi],dx
  411fbb:	jae    0x411fef
  411fbd:	inc    edi
  411fbe:	inc    esp
  411fbf:	pop    edi
  411fc0:	xor    al,0x3
  411fc2:	lods   al,BYTE PTR ds:[esi]
  411fc3:	pop    eax
  411fc4:	inc    eax
  411fc5:	jecxz  0x411fb6
  411fc7:	mov    dh,0xa4
  411fc9:	xchg   edi,eax
  411fca:	nop
  411fcb:	cmp    BYTE PTR [edi+0x4f],dl
  411fce:	hlt    
  411fcf:	lahf   
  411fd0:	mov    edx,0x476c425f
  411fd5:	inc    ecx
  411fd6:	add    ah,dh
  411fd8:	jl     0x411ffc
  411fda:	ins    BYTE PTR es:[edi],dx
  411fdb:	xor    edi,DWORD PTR [eax-0x10b2bbab]
  411fe1:	les    ebx,FWORD PTR [esi+0x4b3aa554]
  411fe7:	mov    ebx,0xe8b33e53
  411fec:	mov    eax,ds:0x49f5d2fb
  411ff1:	lods   eax,DWORD PTR ds:[esi]
  411ff2:	(bad)  
  411ff3:	out    0x71,al
  411ff5:	(bad)  
  411ff6:	scas   eax,DWORD PTR es:[edi]
  411ff7:	inc    esi
  411ff8:	mov    edi,0x9ffd99a6
  411ffd:	repnz dec edx
  411fff:	out    0xf6,eax
  412001:	add    ebp,edi
  412003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412004:	loope  0x412036
  412006:	xchg   ecx,eax
  412007:	xchg   edi,eax
  412008:	cmp    DWORD PTR [edi+0x5d],ecx
  41200b:	in     al,dx
  41200c:	cmp    BYTE PTR [edx-0x65],0xf
  412010:	retf   0x1936
  412013:	adc    ah,cl
  412015:	xor    ecx,DWORD PTR [edx-0x57d71a90]
  41201b:	dec    esp
  41201c:	test   BYTE PTR [ebx+0x7f],bl
  41201f:	push   ecx
  412020:	fdivr  st,st(2)
  412022:	(bad)  [edi+0xbd09919]
  412028:	test   DWORD PTR [ebx+0xb],0x206b2759
  41202f:	cmp    eax,0xaacdac55
  412034:	lock sbb dh,ah
  412037:	cmp    ah,0xaa
  41203a:	repnz or al,BYTE PTR cs:[ecx]
  41203e:	sbb    al,BYTE PTR [esi]
  412040:	daa    
  412041:	hlt    
  412042:	cld    
  412043:	lods   eax,DWORD PTR ds:[esi]
  412044:	mov    gs,WORD PTR [eax+0x52]
  412047:	dec    esi
  412048:	pop    ebp
  412049:	jb     0x412018
  41204b:	ret    
  41204c:	jae    0x41201e
  41204e:	(bad)  
  41204f:	push   cs
  412050:	ja     0x411fe0
  412052:	mov    ds:0x70ef3be2,al
  412057:	xchg   ebp,eax
  412058:	cs xchg ebx,eax
  41205a:	jmp    0x228b:0x26c59ed3
  412061:	mov    ebx,0xa8b8f465
  412066:	inc    ebx
  412067:	push   edx
  412068:	es pop eax
  41206a:	ja     0x412061
  41206c:	stc    
  41206d:	loop   0x4120d9
  41206f:	xor    DWORD PTR [ebp-0x74ed4660],esp
  412075:	push   ds
  412076:	add    eax,0xf7e58d06
  41207b:	aaa    
  41207c:	jno    0x412058
  41207e:	mov    ah,0x13
  412080:	cmp    cl,BYTE PTR [esi-0x80]
  412083:	ins    BYTE PTR es:[edi],dx
  412084:	daa    
  412085:	push   esi
  412086:	push   0x79daf23c
  41208b:	adc    al,0x3c
  41208d:	outs   dx,BYTE PTR ds:[esi]
  41208e:	or     cl,0x11
  412091:	and    ebp,ebp
  412093:	and    bh,ah
  412095:	mov    ch,bh
  412097:	xchg   DWORD PTR [ebp+0x5],ecx
  41209a:	mov    al,ds:0x67074a5a
  41209f:	mov    eax,cs:0xe6124879
  4120a5:	aas    
  4120a6:	and    ebx,DWORD PTR [edx*4-0x3be6d5a1]
  4120ad:	cmp    dh,bh
  4120af:	sbb    ah,BYTE PTR [esi-0x30]
  4120b2:	xchg   esp,eax
  4120b3:	xchg   ecx,eax
  4120b4:	cmp    eax,DWORD PTR [edi+0x2f30c367]
  4120ba:	dec    ebx
  4120bb:	adc    ecx,DWORD PTR [ecx+0x9]
  4120be:	adc    ebp,ecx
  4120c0:	mov    ah,0x89
  4120c2:	into   
  4120c3:	(bad)  
  4120c5:	jge    0x41207e
  4120c7:	in     al,dx
  4120c8:	xchg   ebx,eax
  4120c9:	mov    al,0x70
  4120cb:	cmp    ah,BYTE PTR [ecx]
  4120cd:	ret    0x45c0
  4120d0:	dec    edi
  4120d1:	mov    esi,0x2be56a2c
  4120d6:	lock xchg ecx,eax
  4120d8:	call   0x229d:0x43d8e154
  4120df:	jae    0x41211a
  4120e1:	add    DWORD PTR [esp+ecx*4-0x4c],ebp
  4120e5:	mov    al,BYTE PTR [ecx-0x3d]
  4120e8:	into   
  4120e9:	fmul   DWORD PTR [ebp-0x1]
  4120ec:	shl    DWORD PTR [edi],cl
  4120ee:	int    0x80
  4120f0:	xchg   edx,eax
  4120f1:	inc    esi
  4120f2:	xor    BYTE PTR [edi-0x31],bh
  4120f5:	sub    bl,BYTE PTR [edx]
  4120f7:	pop    es
  4120f8:	or     eax,0x9492a1aa
  4120fd:	pushf  
  4120fe:	out    0x77,al
  412100:	jns    0x412138
  412102:	int3   
  412103:	fild   DWORD PTR [edi]
  412105:	cmc    
  412106:	cs push 0x86edcde8
  41210c:	jne    0x41211c
  41210e:	in     al,0x73
  412110:	daa    
  412111:	mov    bl,0xf7
  412113:	sub    al,0xbd
  412115:	fdiv   st(5),st
  412117:	dec    esi
  412118:	inc    esi
  412119:	cld    
  41211a:	dec    ebp
  41211b:	add    BYTE PTR [esi],al
  41211d:	push   ebp
  41211e:	bound  edi,QWORD PTR [edi]
  412120:	scas   al,BYTE PTR es:[edi]
  412121:	mov    cl,0x3c
  412123:	jnp    0x41210d
  412125:	int3   
  412126:	fs inc ebp
  412128:	add    eax,0xa89f0a56
  41212d:	js     0x412133
  41212f:	add    eax,0x4007860d
  412134:	mov    ds:0x7d192e34,al
  412139:	pusha  
  41213a:	out    dx,eax
  41213b:	test   dh,bl
  41213d:	inc    edx
  41213e:	lods   eax,DWORD PTR ds:[esi]
  41213f:	stos   BYTE PTR es:[edi],al
  412140:	imul   edx,DWORD PTR [esi],0x5c360d49
  412146:	sub    edi,DWORD PTR [edi-0x41]
  412149:	inc    ebx
  41214a:	mov    al,0xe6
  41214c:	test   DWORD PTR [eax+0x7fb7cc30],esp
  412152:	bnd je 0x412141
  412155:	inc    ecx
  412156:	outs   dx,DWORD PTR ds:[esi]
  412157:	loop   0x4121cc
  412159:	mov    edi,0x2f413f65
  41215e:	sbb    DWORD PTR [ecx],edi
  412160:	pop    ebx
  412161:	retf   
  412162:	jne    0x4120e9
  412164:	adc    al,0x2b
  412166:	mov    cl,0xdb
  412168:	fild   QWORD PTR [eax+0x73774de9]
  41216e:	pcmpeqd mm1,QWORD PTR [ebx+0xeca4ea6]
  412175:	mov    edi,0xf52521f6
  41217a:	nop
  41217b:	cmp    dh,BYTE PTR [ebp-0x60f8c6ec]
  412181:	sub    ebx,ebp
  412183:	push   edi
  412184:	imul   edx,DWORD PTR ds:0xf41827dd,0x4f
  41218b:	out    dx,eax
  41218c:	lea    eax,[edx+0x3707bc7b]
  412192:	dec    ecx
  412193:	fbld   TBYTE PTR [esi+0x3c]
  412196:	call   0xdd9:0x88420d71
  41219d:	pop    es
  41219e:	mov    dh,0xcf
  4121a0:	dec    edx
  4121a1:	pushf  
  4121a2:	dec    edx
  4121a3:	jo     0x4121ea
  4121a5:	pop    ebx
  4121a6:	lahf   
  4121a7:	das    
  4121a8:	jp     0x412171
  4121aa:	scas   eax,DWORD PTR es:[edi]
  4121ab:	idiv   DWORD PTR [edx]
  4121ad:	jp     0x412156
  4121af:	add    dh,BYTE PTR [ecx]
  4121b1:	(bad)  
  4121b2:	ror    BYTE PTR [edx-0x7b],1
  4121b5:	jle    0x412189
  4121b7:	lods   al,BYTE PTR ds:[esi]
  4121b8:	add    DWORD PTR [eax+ebp*1+0x5ce12d64],ebp
  4121bf:	ror    dh,1
  4121c1:	mov    ebp,ebx
  4121c3:	cmc    
  4121c4:	int3   
  4121c5:	sub    eax,0x96d1dbab
  4121ca:	sub    dh,0x6d
  4121cd:	push   0x61
  4121cf:	inc    eax
  4121d0:	(bad)  
  4121d1:	fistp  QWORD PTR [edi-0x6535c52f]
  4121d7:	pushf  
  4121d8:	sbb    DWORD PTR [ebx],edx
  4121da:	xor    bh,dl
  4121dc:	imul   edi,DWORD PTR [ebx+0x2a7123e7],0xffffffba
  4121e3:	loop   0x412216
  4121e5:	adc    BYTE PTR [edx-0x76094aa6],0x3e
  4121ec:	dec    ebp
  4121ed:	fidiv  WORD PTR [ecx]
  4121ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121f0:	scas   eax,DWORD PTR es:[edi]
  4121f1:	data16 mov BYTE PTR [ecx-0x78],bl
  4121f5:	outs   dx,BYTE PTR ds:[esi]
  4121f6:	adc    al,0xa7
  4121f8:	cmp    cl,dh
  4121fa:	adc    ah,0x98
  4121fd:	cld    
  4121fe:	mov    cl,0xe2
  412200:	sub    DWORD PTR [eax],ebp
  412202:	add    eax,0x206a583b
  412207:	jmp    0x4c01:0x294028f8
  41220e:	cmp    ebp,DWORD PTR [esi]
  412210:	stos   BYTE PTR es:[edi],al
  412211:	pusha  
  412212:	xor    BYTE PTR [edx+0x22],0x97
  412216:	out    dx,al
  412217:	mov    bh,0x3c
  412219:	mov    ecx,0xb11047c9
  41221e:	in     eax,dx
  41221f:	ds retf 0x3102
  412223:	inc    eax
  412224:	das    
  412225:	add    BYTE PTR [eax+0x28],bl
  412228:	inc    ebp
  412229:	test   eax,0x42bb2cac
  41222e:	push   ebp
  41222f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412230:	xor    BYTE PTR [edi],ch
  412232:	push   ecx
  412233:	jmp    FWORD PTR [eax-0x78211e51]
  412239:	fcom   QWORD PTR [edx+edx*2+0x6f610609]
  412240:	jmp    0x412272
  412242:	sbb    eax,0x89ac97f2
  412247:	call   0xe8470ff1
  41224c:	push   edi
  41224d:	(bad)  
  41224e:	and    edx,DWORD PTR [ebx+0x19]
  412251:	jg     0x4121e3
  412253:	out    dx,al
  412254:	loope  0x41222f
  412256:	push   0xffffffad
  412258:	call   FWORD PTR [eax+0x20]
  41225b:	inc    ebx
  41225c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41225d:	and    ebx,DWORD PTR [ecx]
  41225f:	sahf   
  412260:	cdq    
  412261:	mov    ds:0x28e9d0b3,al
  412266:	xor    bh,BYTE PTR [esi-0x5a]
  412269:	jmp    0x3e68:0x8cb561a3
  412270:	aam    0xfc
  412272:	cmp    DWORD PTR [edi-0x50ce07f0],ebx
  412278:	mov    al,ds:0x4d29e1fb
  41227d:	add    ebx,DWORD PTR [edx]
  41227f:	test   al,0x1b
  412281:	inc    esp
  412282:	sub    DWORD PTR [ebx+0x62b1f068],edi
  412288:	jmp    0xcec6:0xec9ae502
  41228f:	dec    edx
  412290:	popf   
  412291:	pop    es
  412292:	mov    cs,WORD PTR [edx]
  412294:	outs   dx,DWORD PTR ds:[esi]
  412295:	(bad)  
  412297:	or     edx,DWORD PTR ds:[ecx+0x6f9556b3]
  41229e:	aad    0x7a
  4122a0:	mov    eax,0x6cb234f3
  4122a5:	(bad)  
  4122a6:	sahf   
  4122a7:	inc    edi
  4122a8:	cmp    al,0x8f
  4122aa:	call   0x5baecad1
  4122af:	int    0xc6
  4122b1:	sbb    eax,edx
  4122b3:	or     bl,BYTE PTR [ebx-0x5d]
  4122b6:	push   esi
  4122b7:	sbb    BYTE PTR [esp+edi*2+0x18a7a44e],al
  4122be:	leave  
  4122bf:	and    DWORD PTR [esi-0x279b0a98],edx
  4122c5:	fadd   st(0),st
  4122c7:	xchg   esi,eax
  4122c8:	mov    ds:0xeda3d087,al
  4122cd:	fdiv   st,st(0)
  4122cf:	add    edi,edx
  4122d1:	sub    eax,0x3352d073
  4122d6:	sbb    eax,0x7cf5a96e
  4122db:	retf   0xe824
  4122de:	sbb    eax,0x6e012934
  4122e3:	loop   0x412311
  4122e5:	xchg   edx,eax
  4122e6:	dec    ebp
  4122e7:	sbb    al,0x92
  4122e9:	sti    
  4122ea:	adc    al,0x47
  4122ec:	in     eax,0x9b
  4122ee:	or     al,0x66
  4122f0:	pop    eax
  4122f1:	sti    
  4122f2:	mov    ds:0x8c1380fe,al
  4122f7:	cmp    eax,0x54db2843
  4122fc:	xor    DWORD PTR [edx-0x34dc54d1],ebx
  412302:	ins    DWORD PTR es:[edi],dx
  412303:	fsubr  QWORD PTR ds:0x4e076c22
  412309:	push   ebp
  41230a:	mov    eax,0x2b017e97
  41230f:	sbb    eax,DWORD PTR [edx-0x16]
  412312:	mov    ch,0x1c
  412314:	rcr    DWORD PTR ds:0xead8c2f7,cl
  41231a:	adc    BYTE PTR [ecx-0x5d7973db],bh
  412320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412321:	mov    esi,DWORD PTR [ecx+0x185e6ca8]
  412327:	popa   
  412328:	ins    BYTE PTR es:[edi],dx
  412329:	outs   dx,DWORD PTR ds:[esi]
  41232a:	sub    eax,0x5dc030dd
  41232f:	jmp    0x88330357
  412334:	ret    0xadf4
  412337:	sbb    bl,BYTE PTR [edi-0x39]
  41233a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41233b:	adc    al,BYTE PTR [ebx+0x4c3d5c5f]
  412341:	jo     0x412301
  412343:	fidiv  WORD PTR [ebx]
  412345:	push   ss
  412346:	enter  0xb1,0x34
  41234a:	(bad)  [ecx]
  41234c:	mov    eax,0xa924ab70
  412351:	iret   
  412352:	in     al,dx
  412353:	xchg   edx,eax
  412354:	mov    cl,0x78
  412356:	sub    DWORD PTR [edx-0x20fdfc6f],esi
  41235c:	xor    al,0x66
  41235e:	add    bl,ch
  412360:	push   0x30
  412362:	adc    eax,0xf9cb5ea0
  412367:	sbb    edx,ebp
  412369:	daa    
  41236a:	sahf   
  41236b:	add    eax,0x487056da
  412370:	test   DWORD PTR [eax+0x18108ada],ecx
  412376:	out    0xa8,eax
  412378:	adc    DWORD PTR [ebx+ebx*8-0x2fefe6f8],edx
  41237f:	sub    eax,0xffe73715
  412384:	repz xchg esp,eax
  412386:	mov    bh,BYTE PTR [edi+eiz*4+0x2f]
  41238a:	cli    
  41238b:	mov    edi,0xbd8b4c7b
  412390:	or     BYTE PTR [ecx+0x3b],al
  412393:	loope  0x412345
  412395:	xchg   edi,eax
  412396:	enter  0xe126,0xe3
  41239a:	je     0x412342
  41239c:	in     al,0x8f
  41239e:	icebp  
  41239f:	data16 mov gs,WORD PTR [eax]
  4123a2:	cli    
  4123a3:	(bad)  
  4123a4:	xadd   esp,esi
  4123a7:	sar    DWORD PTR [esi+eax*2],1
  4123aa:	jmpw   0xe6de
  4123ae:	or     eax,0x8bb8a6bd
  4123b3:	xchg   BYTE PTR [edi+0x45e73bce],cl
  4123b9:	cmp    eax,edx
  4123bb:	sbb    cl,BYTE PTR [ebx]
  4123bd:	loopne 0x412431
  4123bf:	mov    ebx,0x572ad1b6
  4123c4:	into   
  4123c5:	add    ch,dh
  4123c7:	cmc    
  4123c8:	repnz popf 
  4123ca:	mov    bl,BYTE PTR [ebx]
  4123cc:	mov    DWORD PTR [eax-0x4],ebx
  4123cf:	jg     0x41244d
  4123d1:	cmp    dl,BYTE PTR [ecx-0x66d58467]
  4123d7:	imul   ebp,DWORD PTR [ecx],0xd0353bb5
  4123dd:	push   0x1f
  4123df:	icebp  
  4123e0:	push   eax
  4123e1:	imul   ebp,DWORD PTR [ebp-0x82b1065],0x8d73595a
  4123eb:	sbb    DWORD PTR [ecx],esp
  4123ed:	mov    ebp,0x57a63a38
  4123f2:	jecxz  0x412429
  4123f4:	mov    eax,ds:0xa1acba60
  4123f9:	ficomp DWORD PTR [edi-0x46]
  4123fc:	pop    ebp
  4123fd:	xor    ebp,DWORD PTR [ebp-0x4b43395]
  412403:	cmp    ebp,edx
  412405:	test   BYTE PTR [ecx],ch
  412407:	arpl   WORD PTR [ebx+0x49563eee],dx
  41240d:	and    bl,BYTE PTR [edi-0x5cdc0df8]
  412413:	xchg   esi,eax
  412414:	dec    ebx
  412415:	adc    DWORD PTR [edx],0xffffffc9
  412418:	mov    esi,esp
  41241a:	icebp  
  41241b:	and    BYTE PTR [eax],bl
  41241d:	dec    esp
  41241e:	push   ebx
  41241f:	pop    esi
  412420:	arpl   WORD PTR [edi+0x3089c9f7],bp
  412426:	leave  
  412427:	and    DWORD PTR [esp+edi*8-0x1d6c4e1a],esp
  41242e:	push   es
  41242f:	pop    ebp
  412430:	das    
  412431:	jns    0x412415
  412433:	cmp    al,0x6b
  412435:	fidiv  WORD PTR [edi+0x16]
  412438:	or     eax,0xc0a27f84
  41243d:	push   edx
  41243e:	jbe    0x41247d
  412440:	mov    bl,0x57
  412442:	xor    eax,0xdfb20d36
  412447:	sub    esi,DWORD PTR ds:0x63960855
  41244d:	lock mov edi,0x655ae7b2
  412453:	pop    ss
  412454:	jmp    FWORD PTR [edx+0x10]
  412457:	loop   0x4124d5
  412459:	rcr    DWORD PTR [edi-0x3c],1
  41245c:	fwait
  41245d:	sub    DWORD PTR [esi-0x4],ecx
  412460:	lods   al,BYTE PTR ds:[esi]
  412461:	fld    TBYTE PTR [edi+0x14]
  412464:	outs   dx,BYTE PTR ds:[esi]
  412465:	xor    ch,dh
  412467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412468:	cdq    
  412469:	mov    ah,0x82
  41246b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41246c:	inc    esi
  41246d:	ins    DWORD PTR es:[edi],dx
  41246e:	sbb    BYTE PTR [edx+0x36a58a4e],dl
  412474:	jne    0x41247f
  412476:	sub    esp,edx
  412478:	and    BYTE PTR [ecx-0x3f927230],dh
  41247e:	mov    eax,0xab36eaac
  412483:	cmp    BYTE PTR ds:0x1b8eed13,al
  412489:	sbb    DWORD PTR [ecx],0x5fa78c2e
  41248f:	in     eax,0xf3
  412491:	cs dec edx
  412493:	arpl   WORD PTR [esi-0x19],cx
  412496:	xor    bl,BYTE PTR [ebx]
  412498:	mov    eax,0xd4e32bb8
  41249d:	inc    esi
  41249e:	xchg   esi,eax
  41249f:	stos   DWORD PTR es:[edi],eax
  4124a0:	xor    edx,DWORD PTR [ebx+0x7b]
  4124a3:	sub    dh,BYTE PTR [ecx-0x1d06f703]
  4124a9:	pop    edx
  4124aa:	pop    ecx
  4124ab:	imul   edx,DWORD PTR [ebx+0x4863f110],0x31
  4124b2:	xor    DWORD PTR [ebx+0x154bbbe1],eax
  4124b8:	cmp    esp,DWORD PTR fs:[ebx-0x1d7a23c3]
  4124bf:	gs ins BYTE PTR es:[edi],dx
  4124c1:	mov    ah,0x3f
  4124c3:	out    dx,al
  4124c4:	imul   ebp,DWORD PTR [edx],0x1fe0a5ec
  4124ca:	push   0x518d0d45
  4124cf:	imul   eax,DWORD PTR [edx+ecx*4+0x48],0x41
  4124d4:	or     al,0x8
  4124d6:	or     eax,0xb6626df5
  4124db:	aam    0x34
  4124dd:	pushf  
  4124de:	ret    0xa80d
  4124e1:	loop   0x4124b2
  4124e3:	sub    ebp,0x31f7c914
  4124e9:	sar    DWORD PTR ds:0x89ee3307,0xd1
  4124f0:	hlt    
  4124f1:	mov    ch,0x38
  4124f3:	xor    esp,DWORD PTR gs:[eax-0x5d]
  4124f7:	stc    
  4124f8:	icebp  
  4124f9:	scas   eax,DWORD PTR es:[edi]
  4124fa:	mov    al,ds:0xb6ef30fc
  4124ff:	push   ds
  412500:	xlat   BYTE PTR ds:[ebx]
  412501:	adc    cl,ah
  412503:	push   ebx
  412504:	or     al,0xb5
  412506:	in     al,dx
  412507:	jb     0x4124b1
  412509:	call   0x26deb9fa
  41250e:	scas   al,BYTE PTR es:[edi]
  41250f:	int    0x9c
  412511:	dec    eax
  412512:	cmp    DWORD PTR [esi],esi
  412514:	shl    DWORD PTR [edx],0x1a
  412517:	jb     0x41250c
  412519:	or     ebx,DWORD PTR [edi+esi*1-0x59]
  41251d:	cmp    BYTE PTR [esi],0xf7
  412520:	pusha  
  412521:	lds    esi,FWORD PTR [ecx+0x5ef939a4]
  412527:	dec    ecx
  412528:	leave  
  412529:	and    al,0x7f
  41252b:	(bad)  
  41252c:	sti    
  41252d:	pushw  es
  41252f:	stos   BYTE PTR es:[edi],al
  412530:	xchg   ecx,eax
  412531:	xor    ecx,DWORD PTR [esi+0x870f65c]
  412537:	mov    ecx,0x92346b14
  41253c:	ror    ah,cl
  41253e:	aad    0x44
  412540:	sub    eax,0x88a762bd
  412545:	ins    DWORD PTR es:[edi],dx
  412546:	stos   DWORD PTR es:[edi],eax
  412547:	xor    ch,ch
  412549:	pushf  
  41254a:	dec    ebx
  41254b:	(bad)  
  41254c:	adc    al,dh
  41254e:	ja     0x4124e6
  412550:	sub    DWORD PTR [edx-0x67634eaa],esp
  412556:	lods   al,BYTE PTR ds:[esi]
  412557:	das    
  412558:	jne    0x412581
  41255a:	call   0x184a5121
  41255f:	mov    cl,0x4d
  412561:	ins    BYTE PTR es:[edi],dx
  412562:	dec    esp
  412563:	imul   esi,esp,0xee37c90c
  412569:	inc    eax
  41256a:	xor    ah,BYTE PTR [ebx-0x43]
  41256d:	test   ecx,ebx
  41256f:	sub    dh,al
  412571:	aad    0xa0
  412573:	inc    ebp
  412574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412575:	rcr    DWORD PTR [esi+edx*4],1
  412578:	std    
  412579:	sbb    al,0x90
  41257b:	xor    DWORD PTR [edx-0x279e9297],edi
  412581:	fmul   QWORD PTR [edx+eax*8]
  412584:	retw   
  412586:	push   0xd3681399
  41258b:	pop    ebp
  41258d:	or     BYTE PTR [eax-0x56],al
  412590:	push   ebp
  412591:	retf   0x5a96
  412594:	dec    esi
  412595:	mov    WORD PTR [ebp+0x7a1a7f0a],?
  41259b:	add    BYTE PTR [esi-0x1672b1ff],ah
  4125a1:	jns    0x412531
  4125a3:	jmp    0x412531
  4125a5:	jne    0x4125ff
  4125a7:	aad    0x3b
  4125a9:	add    ch,BYTE PTR [ebp+0x65]
  4125ac:	xor    ecx,DWORD PTR [ebx+edi*2-0x61cb723b]
  4125b3:	aas    
  4125b4:	inc    edx
  4125b5:	retf   0xbbed
  4125b8:	cli    
  4125b9:	clc    
  4125ba:	ret    
  4125bb:	mov    eax,ds:0x79aa9af6
  4125c0:	inc    ebx
  4125c1:	push   edi
  4125c2:	xlat   BYTE PTR ds:[ebx]
  4125c3:	sub    DWORD PTR [ebp+0x10],ecx
  4125c6:	mov    esp,esp
  4125c8:	rol    BYTE PTR [edx-0x6272ec60],1
  4125ce:	aam    0xa2
  4125d0:	into   
  4125d1:	push   0x7f705303
  4125d6:	scas   eax,DWORD PTR es:[edi]
  4125d7:	or     al,0x9
  4125d9:	pop    ecx
  4125da:	inc    ecx
  4125db:	cmp    DWORD PTR [ecx],esp
  4125dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125de:	(bad)  
  4125df:	push   0x46088d5d
  4125e4:	loop   0x412642
  4125e6:	rcr    DWORD PTR [esi+eax*4-0x4a],1
  4125ea:	ror    DWORD PTR [edi],1
  4125ec:	adc    esp,DWORD PTR [ecx+0x18]
  4125ef:	inc    edx
  4125f0:	mov    ecx,0x25a639d9
  4125f5:	and    DWORD PTR [esi+0x70],ecx
  4125f8:	xor    al,0x2e
  4125fa:	loopne 0x4125a8
  4125fc:	mov    cl,0x96
  4125fe:	test   DWORD PTR [edi+0x7c8475b9],edx
  412604:	daa    
  412605:	addr16 cs inc ecx
  412608:	inc    edx
  412609:	call   0x8c9a:0xee0d3ba1
  412610:	adc    BYTE PTR [esi-0x3ac8cac5],dl
  412616:	sbb    DWORD PTR [ebx],esp
  412618:	mov    ds:0xf6a0a98c,al
  41261d:	mov    BYTE PTR [ecx+edi*2-0x17],ah
  412621:	loop   0x4126a0
  412623:	hlt    
  412624:	push   0xfffffffd
  412626:	sbb    dh,bl
  412628:	xor    esp,DWORD PTR ds:[eax+0x6e]
  41262c:	loope  0x41260e
  41262e:	addr16 ss dec esi
  412631:	arpl   si,sp
  412633:	push   eax
  412634:	sti    
  412635:	(bad)  
  412636:	pop    edi
  412637:	push   edi
  412638:	mov    ds:0xdf2ea73d,eax
  41263d:	hlt    
  41263e:	test   eax,0x80d4f764
  412643:	mov    DWORD PTR [ecx+0x41abef7f],edi
  412649:	fstp   DWORD PTR [edx-0x7f4b86e8]
  41264f:	fdiv   QWORD PTR [edx]
  412651:	add    esp,edx
  412653:	sbb    eax,0x6335dd51
  412658:	fs lock xor al,0xe0
  41265c:	adc    eax,0xa4422137
  412661:	fld    QWORD PTR [eax-0x19302638]
  412667:	mov    edx,0x34ce191f
  41266c:	mov    eax,DWORD PTR [ebp-0x46]
  41266f:	mov    bl,0x8
  412671:	shl    esi,cl
  412673:	jne    0x4126f1
  412675:	add    esi,DWORD PTR [ebx-0x1f]
  412678:	gs into 
  41267a:	bound  eax,QWORD PTR [ebp-0x14]
  41267d:	xchg   edx,eax
  41267e:	cmp    edx,DWORD PTR [ecx]
  412680:	out    dx,al
  412681:	lea    ecx,[ebx-0x4d]
  412684:	inc    edx
  412685:	mov    eax,0x79085063
  41268a:	xchg   esp,eax
  41268b:	in     eax,0xa
  41268d:	lea    edi,[eax+0x4b]
  412690:	dec    eax
  412691:	inc    esi
  412692:	arpl   di,dx
  412694:	mov    dl,0x40
  412696:	stc    
  412697:	mov    eax,0x24d75acd
  41269c:	fs adc eax,0x95a4617
  4126a2:	adc    DWORD PTR [eax+0x3f739e2],eax
  4126a8:	add    BYTE PTR [esi-0xc],0xe7
  4126ac:	les    ebx,FWORD PTR [edx+0x17d79e07]
  4126b2:	imul   ebx,DWORD PTR [edi],0xfffffffa
  4126b5:	mov    esp,DWORD PTR ds:0x7af6a05a
  4126bb:	push   ebx
  4126bc:	pop    ebp
  4126bd:	arpl   WORD PTR ds:0x4602880f,dx
  4126c3:	fcom   QWORD PTR [edx]
  4126c5:	aam    0xf5
  4126c7:	das    
  4126c8:	jmp    0x412681
  4126ca:	(bad)  
  4126cb:	xchg   ecx,eax
  4126cc:	(bad)  
  4126ce:	in     eax,dx
  4126cf:	repnz xchg edi,eax
  4126d1:	stos   BYTE PTR es:[edi],al
  4126d2:	ss aad 0xa1
  4126d5:	push   cs
  4126d6:	sahf   
  4126d7:	or     eax,0x9e8f1294
  4126dc:	sub    edx,DWORD PTR [edi]
  4126de:	inc    ebp
  4126df:	add    BYTE PTR [edi+ebx*8+0x5781d878],ch
  4126e6:	mov    ch,0xe0
  4126e8:	xor    al,0xae
  4126ea:	fmul   QWORD PTR [eax-0x3c2e60f9]
  4126f0:	ja     0x4126f6
  4126f2:	pusha  
  4126f3:	jns    0x4126a9
  4126f5:	push   ebp
  4126f6:	push   esi
  4126f7:	out    0xa9,al
  4126f9:	adc    edx,eax
  4126fb:	sar    BYTE PTR [edx+0x13d65f72],1
  412701:	add    BYTE PTR ds:[ebx+edi*4],cl
  412705:	cmc    
  412706:	sub    dh,BYTE PTR [edi+0x3a]
  412709:	enter  0x86b1,0x72
  41270d:	mov    edi,DWORD PTR [eax-0x1ff44582]
  412713:	je     0x41272c
  412715:	retf   
  412716:	pop    ecx
  412717:	test   al,0x51
  412719:	mov    al,0x2
  41271b:	repnz adc edx,DWORD PTR [ebp-0x651bf6f7]
  412722:	mov    esp,0xbf35ff53
  412727:	lea    ebp,ds:0x4b58211d
  41272d:	aas    
  41272e:	mov    bl,0x7e
  412730:	mov    cl,0x46
  412732:	jmp    0xbe61:0xc370c595
  412739:	scas   eax,DWORD PTR es:[edi]
  41273a:	inc    ebp
  41273b:	jp     0x4126fc
  41273d:	test   al,0xac
  41273f:	adc    ah,BYTE PTR [edi+0x16]
  412742:	ins    DWORD PTR es:[edi],dx
  412743:	(bad)  
  412744:	push   ss
  412745:	std    
  412746:	cmp    esi,DWORD PTR [edi-0x2d]
  412749:	mov    ebp,0x4f46efc3
  41274e:	inc    eax
  41274f:	rcr    al,cl
  412751:	(bad)  
  412752:	pusha  
  412753:	mov    edx,0x243be366
  412758:	add    BYTE PTR [esi-0x4f7ff69d],ch
  41275e:	inc    ebp
  41275f:	jg     0x4127b1
  412761:	loope  0x41279b
  412763:	(bad)  
  412764:	push   ss
  412765:	mov    ds:0x98146098,eax
  41276a:	mov    edx,0x49e96696
  41276f:	mov    eax,0x7d69c37c
  412774:	retf   
  412775:	mov    ds:0x8bf926e,eax
  41277a:	dec    ebx
  41277b:	rcl    BYTE PTR [ecx+ebp*4+0x5aa16521],0xa8
  412783:	es pop edx
  412785:	push   esi
  412786:	ins    DWORD PTR es:[edi],dx
  412787:	jp     0x41272b
  412789:	ret    0xd88c
  41278c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41278d:	in     eax,0xc9
  41278f:	int3   
  412790:	jno    0x412754
  412792:	fdivr  QWORD PTR [ecx-0x66]
  412795:	nop
  412796:	sahf   
  412797:	scas   al,BYTE PTR es:[edi]
  412798:	mov    eax,0xa2fc2d38
  41279d:	and    eax,0x914f5610
  4127a2:	adc    DWORD PTR [edx+0x1],esi
  4127a5:	pop    edx
  4127a6:	clc    
  4127a7:	arpl   si,si
  4127a9:	pop    es
  4127aa:	iret   
  4127ab:	inc    BYTE PTR [edi]
  4127ad:	das    
  4127ae:	imul   edi,DWORD PTR [ecx-0xb],0x3e
  4127b2:	(bad)  
  4127b4:	out    dx,al
  4127b5:	push   0x732c92cb
  4127ba:	jge    0x41282a
  4127bc:	retf   
  4127bd:	mov    esp,DWORD PTR [eax-0x5994e1]
  4127c3:	xchg   DWORD PTR [eax-0x18e251dc],esp
  4127c9:	jmp    0x4127fc
  4127cb:	cli    
  4127cc:	jae    0x412754
  4127ce:	push   edi
  4127cf:	dec    esp
  4127d0:	jecxz  0x4127af
  4127d2:	not    eax
  4127d4:	mov    cl,0x2a
  4127d6:	das    
  4127d7:	out    dx,al
  4127d8:	(bad)  
  4127d9:	std    
  4127da:	jno    0x41277d
  4127dc:	pop    edx
  4127dd:	popa   
  4127de:	int    0x57
  4127e0:	aad    0xd7
  4127e2:	xor    DWORD PTR [ebx-0x2b],ebp
  4127e5:	popa   
  4127e6:	(bad)  
  4127e7:	or     eax,0x12f375d2
  4127ec:	rcl    BYTE PTR [ebp+edi*2-0xf3eb9e2],cl
  4127f3:	daa    
  4127f4:	mov    cl,0x9a
  4127f6:	and    DWORD PTR [esi],edi
  4127f8:	jmp    0x485048fe
  4127fd:	mov    gs,WORD PTR [ebp+0x7ddb1a9e]
  412803:	mov    ds:0xabafeca7,eax
  412808:	adc    BYTE PTR [ecx-0x5a],0x5
  41280c:	ja     0x412820
  41280e:	or     al,bh
  412810:	pop    edx
  412811:	and    ebx,DWORD PTR [edi+0x36]
  412814:	div    DWORD PTR [eax+0x6c80a3ec]
  41281a:	out    0x2e,al
  41281c:	sahf   
  41281d:	xor    DWORD PTR [edx-0x7bd55221],edi
  412823:	or     DWORD PTR [edi+0x46],eax
  412826:	cmp    BYTE PTR [edi+0x3a9fd19a],bl
  41282c:	inc    DWORD PTR [esi+0x6a]
  41282f:	xchg   esp,eax
  412830:	pushf  
  412831:	bound  eax,QWORD PTR [ebp+0x67c66ca]
  412837:	fs stc 
  412839:	shr    DWORD PTR [ebx-0x56f9e9c3],1
  41283f:	outs   dx,BYTE PTR ds:[esi]
  412840:	daa    
  412841:	(bad)  
  412842:	dec    eax
  412843:	dec    esi
  412844:	or     al,0x37
  412846:	or     al,0xef
  412848:	sahf   
  412849:	dec    esi
  41284a:	pop    esp
  41284b:	jmp    0x4127ee
  41284d:	std    
  41284e:	and    ebp,DWORD PTR ds:0xf60ccdfb
  412854:	sub    bh,BYTE PTR [edx+0x6b]
  412857:	iret   
  412858:	xor    al,0x4e
  41285a:	xchg   edi,eax
  41285b:	ins    BYTE PTR es:[edi],dx
  41285c:	cmp    cl,BYTE PTR [eax-0x2b]
  41285f:	sbb    BYTE PTR gs:[ecx+0x90d3589],ah
  412866:	mov    ds:0xd59fe231,al
  41286b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41286c:	jle    0x41285d
  41286e:	pop    edi
  41286f:	lods   eax,DWORD PTR ds:[esi]
  412870:	lahf   
  412871:	cmp    eax,0xed0bde48
  412876:	cwde   
  412877:	ins    DWORD PTR es:[edi],dx
  412878:	mov    ecx,ebx
  41287a:	pushf  
  41287b:	inc    eax
  41287c:	jecxz  0x4128e1
  41287e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41287f:	sub    BYTE PTR [ecx],dh
  412881:	inc    edi
  412882:	loop   0x4128ed
  412884:	xchg   BYTE PTR [edx],al
  412886:	mov    dl,0xa6
  412888:	sar    BYTE PTR [ebx-0x5e],0xf8
  41288c:	jp     0x41282e
  41288e:	inc    ebx
  41288f:	or     cl,al
  412891:	lods   al,BYTE PTR ds:[esi]
  412892:	fs mov ch,0x70
  412895:	push   cs
  412896:	cwde   
  412897:	sbb    eax,0x52480729
  41289c:	shr    DWORD PTR [ebx],0x16
  41289f:	mov    ebx,0xca1cffdc
  4128a4:	fs ror ebx,1
  4128a7:	test   al,0xb3
  4128a9:	imul   ebx,DWORD PTR [esi+ecx*4],0x2edddb14
  4128b0:	xchg   esi,eax
  4128b1:	punpckhbw mm3,QWORD PTR [ebp-0x2db96029]
  4128b8:	in     al,dx
  4128b9:	jns    0x412858
  4128bb:	rsqrtps xmm7,XMMWORD PTR [esi]
  4128be:	psubsb mm2,QWORD PTR [ecx-0x65]
  4128c2:	push   ds
  4128c3:	cmc    
  4128c4:	dec    edi
  4128c5:	sub    al,0xa0
  4128c7:	adc    eax,0x10dd8fe8
  4128cc:	out    0xa1,al
  4128ce:	in     eax,0xf8
  4128d0:	ins    BYTE PTR es:[edi],dx
  4128d1:	cmp    dh,BYTE PTR [esi+0x46]
  4128d4:	inc    edx
  4128d5:	jo     0x41293d
  4128d7:	dec    eax
  4128d8:	loop   0x4128c1
  4128da:	cld    
  4128db:	scas   al,BYTE PTR es:[edi]
  4128dc:	into   
  4128dd:	xor    al,ch
  4128df:	lock into 
  4128e1:	adc    DWORD PTR [ebx],0x7cf2e826
  4128e7:	lods   eax,DWORD PTR ds:[esi]
  4128e8:	mov    ds:0x5c8e8a6a,eax
  4128ed:	(bad)
  4128f2:	test   eax,0x1fbc2eda
  4128f7:	sub    dh,BYTE PTR ds:0x41699b7b
  4128fd:	xlat   BYTE PTR ds:[ebx]
  4128fe:	sbb    dh,BYTE PTR [edi+0x410bc707]
  412904:	dec    esi
  412905:	imul   esp,DWORD PTR ds:0xfd0eb09d,0xbc5c28ca
  41290f:	mov    DWORD PTR [ebx],ecx
  412911:	xor    DWORD PTR [edi-0x64],ebp
  412914:	jns    0x4128fa
  412916:	test   DWORD PTR [ebp-0x12808b49],esi
  41291c:	(bad)
  412920:	fwait
  412921:	popa   
  412922:	sbb    BYTE PTR [esi+ebp*8+0x74],0xba
  412927:	or     edi,DWORD PTR [edi+0x7a]
  41292a:	clc    
  41292b:	lods   eax,DWORD PTR ds:[esi]
  41292c:	and    al,al
  41292e:	dec    edi
  41292f:	xor    ebx,DWORD PTR gs:[edx+ebx*1-0x7b]
  412934:	ins    BYTE PTR es:[edi],dx
  412935:	aas    
  412936:	mov    ecx,0x91a845a9
  41293b:	mov    BYTE PTR [edi-0x4383df5],ah
  412941:	in     eax,0xf5
  412943:	and    al,0x84
  412945:	shl    BYTE PTR [ecx-0x68c3c0af],1
  41294b:	imul   esi,ecx,0xac4f3612
  412951:	mov    ah,0x34
  412953:	test   eax,0xe69e95cf
  412958:	jmp    0x4128f7
  41295a:	or     al,0x41
  41295c:	pop    ss
  41295d:	mov    ecx,0x23902c63
  412962:	xor    dl,BYTE PTR [edi+eiz*4+0x6e640407]
  412969:	shr    BYTE PTR ds:0x734a277d,0x7c
  412970:	dec    edi
  412971:	mov    cl,0xf6
  412973:	jp     0x412924
  412975:	add    ebp,eax
  412977:	xchg   ebx,eax
  412978:	sbb    eax,0x60b50fa9
  41297d:	push   ecx
  41297e:	add    ecx,ebx
  412980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412981:	(bad)  
  412982:	jmp    0x4129f1
  412984:	or     dh,BYTE PTR [edi+0x4baf04f1]
  41298a:	xor    eax,DWORD PTR [ebp+0x421e4a13]
  412990:	jge    0x412944
  412992:	loope  0x4129d5
  412994:	sub    eax,0xea8e62de
  412999:	arpl   WORD PTR [edx+ecx*1+0x2],si
  41299d:	sub    cl,al
  41299f:	push   esp
  4129a0:	mov    DWORD PTR [edi+eiz*4],ebx
  4129a3:	push   esi
  4129a4:	mov    dl,0xab
  4129a6:	int    0xbe
  4129a8:	xchg   esi,eax
  4129a9:	addr16 cld 
  4129ab:	(bad)  
  4129ac:	test   BYTE PTR [ecx],0xf0
  4129af:	inc    eax
  4129b0:	sbb    BYTE PTR [esi+0x7f],0x70
  4129b4:	add    BYTE PTR [esi+eiz*1],cl
  4129b7:	adc    eax,0x8290e9c
  4129bc:	jp     0x412953
  4129be:	call   0x233a52d9
  4129c3:	jp     0x412990
  4129c5:	pop    esp
  4129c6:	(bad)  
  4129c7:	les    edi,FWORD PTR [edi+0x4f2d0700]
  4129cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ce:	jnp    0x41297f
  4129d0:	test   edx,edx
  4129d2:	sti    
  4129d3:	xchg   esp,eax
  4129d4:	add    DWORD PTR [esi],esi
  4129d6:	retf   0x51da
  4129d9:	ja     0x4129e8
  4129db:	and    eax,DWORD PTR ds:0x875b0ce8
  4129e1:	dec    ebp
  4129e2:	dec    ecx
  4129e3:	lea    eax,[esi+0x62]
  4129e6:	fadd   QWORD PTR [eax]
  4129e8:	jae    0x412981
  4129ea:	in     al,0xc4
  4129ec:	(bad)  
  4129ed:	in     eax,0x52
  4129ef:	not    BYTE PTR [ebp+ebp*8-0xc]
  4129f3:	mov    ah,0x66
  4129f5:	jb     0x412a13
  4129f7:	xchg   ebx,eax
  4129f8:	stc    
  4129f9:	bound  esi,QWORD PTR [edi]
  4129fb:	pop    eax
  4129fc:	mov    BYTE PTR [edx+0x492d281d],dh
  412a02:	adc    BYTE PTR [eax+0x774e6839],dl
  412a08:	mov    dl,0xd5
  412a0a:	sub    BYTE PTR [ecx+0x7e],0x62
  412a0e:	daa    
  412a0f:	pop    esp
  412a10:	or     al,0x1f
  412a12:	scas   al,BYTE PTR es:[edi]
  412a13:	ins    DWORD PTR es:[edi],dx
  412a14:	and    al,0xf5
  412a16:	mov    ebp,0xba02f394
  412a1b:	(bad)  
  412a1c:	dec    ebp
  412a1d:	mov    eax,0xbe0732aa
  412a22:	hlt    
  412a23:	rcl    DWORD PTR [ecx-0x6eddbcb4],1
  412a29:	mov    bl,0x45
  412a2b:	call   FWORD PTR [edx+0x34899799]
  412a31:	add    BYTE PTR [ebp-0xa],0x2c
  412a35:	pop    es
  412a36:	and    eax,0xcf6530
  412a3b:	pop    eax
  412a3c:	push   esp
  412a3d:	mov    eax,0xf77dd7f2
  412a42:	or     al,0x17
  412a44:	mov    ds:0xcb812b93,eax
  412a49:	jae    0x4129df
  412a4b:	push   ebx
  412a4c:	(bad)  
  412a4d:	mov    dl,0x25
  412a4f:	or     al,bh
  412a51:	sub    al,0x8c
  412a53:	jecxz  0x412a73
  412a55:	push   edi
  412a56:	(bad)  
  412a57:	(bad)  
  412a58:	fucomip st,st(0)
  412a5a:	mov    bl,0x4b
  412a5c:	aam    0x29
  412a5e:	imul   eax,DWORD PTR [esi-0x2],0x51ce5744
  412a65:	jno    0x412a41
  412a67:	aas    
  412a68:	pushf  
  412a69:	add    DWORD PTR [edi],0x5b
  412a6c:	xchg   ecx,eax
  412a6d:	gs add eax,0x114e11c9
  412a73:	push   ds
  412a74:	inc    edx
  412a75:	dec    eax
  412a76:	or     ebp,DWORD PTR [ebx]
  412a78:	push   ss
  412a79:	jo     0x412aab
  412a7b:	loope  0x412a2f
  412a7d:	add    edx,edi
  412a7f:	sub    esp,DWORD PTR [eax]
  412a81:	jne    0x412aae
  412a83:	push   ebp
  412a84:	mov    BYTE PTR [edi-0x79f7b523],cl
  412a8a:	sub    eax,DWORD PTR [ecx-0x3b]
  412a8d:	jmp    FWORD PTR [ecx]
  412a8f:	loope  0x412a1d
  412a91:	out    0x12,eax
  412a93:	int3   
  412a94:	mov    ds:0x8abb36a,al
  412a99:	mov    bl,0xca
  412a9b:	jnp    0x412ac8
  412a9d:	lea    ebx,ds:0x41ec4c63
  412aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412aa4:	inc    edx
  412aa5:	and    BYTE PTR [edx-0x1a4225],bl
  412aab:	adc    ah,BYTE PTR [esp+edx*4+0x79e4216e]
  412ab2:	sbb    al,0x5a
  412ab4:	mov    eax,ss
  412ab6:	(bad)  
  412ab7:	ins    DWORD PTR es:[edi],dx
  412ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ab9:	cdq    
  412aba:	xor    esi,DWORD PTR [ecx]
  412abc:	stos   DWORD PTR es:[edi],eax
  412abd:	retf   
  412abe:	mov    bh,0x29
  412ac0:	cmp    DWORD PTR [ebx+0x22f73fb3],esp
  412ac6:	adc    edx,DWORD PTR [eax]
  412ac8:	fmul   DWORD PTR [ecx]
  412aca:	mov    bh,0xff
  412acc:	xchg   ecx,eax
  412acd:	cli    
  412ace:	mov    cl,0xa0
  412ad0:	not    ch
  412ad2:	or     esp,edi
  412ad4:	(bad)  
  412ad5:	pop    esp
  412ad6:	imul   edx,DWORD PTR [esi+0x4e],0x2cc3b507
  412add:	inc    esp
  412ade:	push   es
  412adf:	jge    0x412a69
  412ae1:	and    al,0xae
  412ae3:	pop    ds
  412ae4:	mov    BYTE PTR [edx+ebx*2+0x1dadfec2],al
  412aeb:	(bad)  
  412aec:	iret   
  412aed:	push   ebx
  412aee:	and    DWORD PTR [edx],ecx
  412af0:	jae    0x412b5b
  412af2:	inc    eax
  412af3:	(bad)  
  412af4:	and    BYTE PTR [eax-0x5f849106],ch
  412afa:	push   cs
  412afb:	lahf   
  412afc:	push   0x37d4783d
  412b01:	in     eax,0x65
  412b03:	fisttp DWORD PTR [eax-0x28]
  412b06:	inc    eax
  412b07:	mov    ds:0x841eca2,al
  412b0c:	mov    ds:0x9934efbe,eax
  412b11:	pop    edi
  412b12:	pop    esi
  412b13:	lea    esp,[edx-0x2e]
  412b16:	mov    dl,0x71
  412b18:	aam    0xea
  412b1a:	fwait
  412b1b:	xor    BYTE PTR [ebx],0x1b
  412b1e:	(bad)  
  412b1f:	cmc    
  412b20:	push   0x26
  412b22:	xor    bl,0xd7
  412b25:	cmp    DWORD PTR [esi],ecx
  412b27:	cmp    BYTE PTR ds:0x49d866a4,al
  412b2d:	sbb    DWORD PTR [ecx-0xd78d5d8],ebx
  412b33:	inc    esp
  412b34:	mov    dh,0x7
  412b36:	mov    al,0x1e
  412b38:	lahf   
  412b39:	ins    BYTE PTR es:[edi],dx
  412b3a:	out    0xd0,al
  412b3c:	sar    al,1
  412b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b3f:	rcr    BYTE PTR [ebx-0x46],cl
  412b42:	mov    ds:0xdc2797e7,eax
  412b47:	daa    
  412b48:	pop    eax
  412b49:	out    0x5a,eax
  412b4b:	mov    ah,0xfc
  412b4d:	nop
  412b4e:	cld    
  412b4f:	xor    ecx,DWORD PTR ds:0x7c8ac0da
  412b55:	fs inc ebx
  412b57:	adc    BYTE PTR [edx+0x1],0x9e
  412b5b:	fbstp  TBYTE PTR ds:0xa61b21c9
  412b61:	fist   DWORD PTR [ebx-0x1bb1fc97]
  412b67:	add    BYTE PTR [esi],dh
  412b69:	fs test al,0x6d
  412b6c:	add    al,0xfc
  412b6e:	data16 (bad) 
  412b71:	imul   edi,DWORD PTR [esp+edi*1],0xaed2e5b6
  412b78:	je     0x412bdb
  412b7a:	add    BYTE PTR [ecx],bh
  412b7c:	retf   
  412b7d:	out    dx,al
  412b7e:	xchg   ebp,eax
  412b7f:	int3   
  412b80:	sub    eax,0xb3d48d28
  412b85:	and    DWORD PTR [ecx+eiz*1-0x625af216],ebx
  412b8c:	jno    0x412b26
  412b8e:	xor    eax,0xc2c676ce
  412b93:	cs pop edx
  412b95:	jbe    0x412bba
  412b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b98:	ins    BYTE PTR es:[edi],dx
  412b99:	out    dx,ax
  412b9b:	pop    eax
  412b9c:	stos   BYTE PTR es:[edi],al
  412b9d:	lea    ebp,[edi+0x58c34286]
  412ba3:	or     BYTE PTR [ebx+esi*8+0x57],ch
  412ba7:	and    DWORD PTR [edi+0xa],edi
  412baa:	(bad)
  412bad:	loop   0x412b77
  412baf:	push   0x83c22810
  412bb4:	fsub   QWORD PTR ds:0xd941da89
  412bba:	sbb    al,0xa3
  412bbc:	dec    edx
  412bbd:	in     eax,0x83
  412bbf:	ss sub eax,0x1213854b
  412bc5:	pop    ebx
  412bc6:	push   esp
  412bc7:	stos   DWORD PTR es:[edi],eax
  412bc8:	mov    eax,0xacc585cb
  412bcd:	or     DWORD PTR [esi-0x5a3902e4],0x1c189c20
  412bd7:	sub    BYTE PTR [ecx+0x5da09ba9],ch
  412bdd:	call   FWORD PTR [ebx-0x48]
  412be0:	lea    edx,[edi-0xb]
  412be3:	inc    esi
  412be4:	mov    dl,0xa3
  412be6:	mov    ebp,0xfa9f24d6
  412beb:	push   ss
  412bec:	sub    al,0xc1
  412bee:	arpl   WORD PTR [esp+eax*8],di
  412bf1:	arpl   di,cx
  412bf3:	and    DWORD PTR [esp+ecx*2],esp
  412bf6:	inc    ecx
  412bf7:	mov    bh,0x8c
  412bf9:	adc    BYTE PTR [ecx-0x32],dh
  412bfc:	sbb    al,0x17
  412bfe:	stc    
  412bff:	push   eax
  412c00:	shl    DWORD PTR [edx+0x7b0c58de],cl
  412c06:	add    bl,ch
  412c08:	test   BYTE PTR [ebx-0x53],0xa1
  412c0c:	jno    0x412c0c
  412c0e:	or     eax,0xdd011582
  412c13:	push   0x7288122c
  412c18:	inc    ecx
  412c19:	cmp    edx,DWORD PTR fs:[ebx]
  412c1c:	int3   
  412c1d:	inc    eax
  412c1e:	mov    edi,0xd8a490b7
  412c23:	fbstp  TBYTE PTR [edx-0x7a]
  412c26:	clc    
  412c27:	sti    
  412c28:	dec    ecx
  412c29:	sub    dl,bl
  412c2b:	(bad)  
  412c2c:	test   DWORD PTR [ebp-0x61fd9b37],0x6295aaa3
  412c36:	cli    
  412c37:	stos   BYTE PTR es:[edi],al
  412c38:	out    dx,al
  412c39:	inc    ecx
  412c3a:	lahf   
  412c3b:	add    al,0x45
  412c3d:	out    0x62,eax
  412c3f:	mov    edi,0xfcc3cdce
  412c44:	xor    BYTE PTR [edx+0x77],bh
  412c47:	dec    ebx
  412c48:	jmp    0x412c35
  412c4a:	sub    eax,0xd1d0e1e
  412c4f:	cs leave 
  412c51:	dec    ebx
  412c52:	fild   DWORD PTR [eax]
  412c54:	nop
  412c55:	or     ah,bh
  412c57:	xor    al,0x50
  412c59:	or     ebp,DWORD PTR [edx+0x4b]
  412c5c:	jge    0x412c9f
  412c5e:	pop    ebp
  412c5f:	and    al,0xbc
  412c61:	call   0x92dff318
  412c66:	loope  0x412ca5
  412c68:	mov    al,0x85
  412c6a:	test   DWORD PTR ds:0x8eaf646a,ebp
  412c70:	popa   
  412c71:	dec    edx
  412c72:	out    dx,al
  412c73:	mov    DWORD PTR [esi+0x10c6a0c5],ebp
  412c79:	rep outs dx,DWORD PTR ds:[esi]
  412c7b:	xor    DWORD PTR [ebp+0x16],eax
  412c7e:	pop    esp
  412c7f:	pop    edi
  412c80:	or     esp,DWORD PTR [ebx+0x7f7d73ba]
  412c86:	jmp    0x429ebe7a
  412c8b:	jnp    0x412c14
  412c8d:	push   edi
  412c8e:	xor    edx,DWORD PTR [esi+0x71abeb52]
  412c94:	and    ah,BYTE PTR ds:0x2460fa2b
  412c9a:	cld    
  412c9b:	or     cl,BYTE PTR [eax+0x4a]
  412c9e:	ret    0x7493
  412ca1:	adc    al,0xba
  412ca3:	push   0x21ad6a7f
  412ca8:	pop    ds
  412ca9:	(bad)  
  412caa:	mov    ds:0xd15c88c,eax
  412caf:	into   
  412cb0:	out    0x3a,al
  412cb2:	cmp    edi,DWORD PTR [edx]
  412cb4:	into   
  412cb5:	into   
  412cb6:	sti    
  412cb7:	pop    ss
  412cb8:	cmc    
  412cb9:	pushf  
  412cba:	adc    ebx,DWORD PTR [esi+0x44]
  412cbd:	mov    dh,0x91
  412cbf:	sbb    DWORD PTR [edx+0x501dec4d],esp
  412cc5:	push   ss
  412cc6:	fadd   QWORD PTR [ecx]
  412cc8:	in     eax,0x1e
  412cca:	and    eax,0x5ac508ac
  412ccf:	js     0x412d32
  412cd1:	rcr    DWORD PTR [ebp-0x5834aa2e],1
  412cd7:	jecxz  0x412cab
  412cd9:	inc    esi
  412cda:	adc    eax,0x939defa4
  412cdf:	dec    edx
  412ce0:	dec    edi
  412ce1:	sbb    ecx,eax
  412ce3:	jl     0x412d35
  412ce5:	mov    al,ds:0xcb9e1cf7
  412cea:	xor    al,0x10
  412cec:	push   ss
  412ced:	xor    esi,0x1fc391b2
  412cf3:	test   al,0xa7
  412cf5:	mov    ebp,0x2a70108
  412cfa:	and    eax,0x7c1ed12d
  412cff:	sub    al,BYTE PTR [ecx+0x525ff20]
  412d05:	or     al,ah
  412d07:	dec    esi
  412d08:	xor    ah,BYTE PTR ds:0xbd1dd0fe
  412d0e:	pop    ds
  412d0f:	or     BYTE PTR [esp+esi*1],dl
  412d12:	push   ecx
  412d13:	push   ss
  412d14:	es mov dh,0x65
  412d17:	adc    cl,BYTE PTR [edi-0xa726697]
  412d1d:	jmp    0x4b1d778f
  412d22:	or     ah,BYTE PTR [eax]
  412d24:	(bad)  
  412d25:	push   es
  412d26:	adc    edx,DWORD PTR [edx]
  412d28:	aam    0x82
  412d2a:	pop    ss
  412d2b:	in     eax,dx
  412d2c:	cmc    
  412d2d:	cmp    BYTE PTR [edx-0x2d554334],ch
  412d33:	push   cs
  412d34:	add    esi,edx
  412d36:	into   
  412d37:	mov    esp,0x3451c9bd
  412d3c:	and    edi,esp
  412d3e:	ja     0x412cd8
  412d40:	xchg   BYTE PTR [ecx+0x23dd051d],bl
  412d46:	adc    al,0x7e
  412d48:	pop    edx
  412d49:	xchg   ebx,eax
  412d4a:	out    dx,al
  412d4b:	lds    ebx,FWORD PTR [ebp+ebx*4+0x72]
  412d4f:	loop   0x412d38
  412d51:	imul   ebp,eax,0xffffffbf
  412d54:	daa    
  412d55:	jmp    0xe35d:0x9b95f6b2
  412d5c:	xor    edx,DWORD PTR [edi]
  412d5e:	push   0x1c
  412d60:	sub    BYTE PTR [edi],cl
  412d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d63:	test   BYTE PTR [ebp+edx*1+0x51],dl
  412d67:	jo     0x412d12
  412d69:	nop
  412d6a:	call   0xf769:0x20046743
  412d71:	aas    
  412d72:	stos   DWORD PTR es:[edi],eax
  412d73:	xchg   edx,eax
  412d74:	ret    0xe430
  412d77:	vmaxpd xmm0,xmm1,XMMWORD PTR [edx+eiz*8-0x64528c05]
  412d80:	std    
  412d81:	push   edx
  412d82:	jae    0x412d75
  412d84:	jno    0x412db3
  412d86:	in     al,dx
  412d87:	test   BYTE PTR cs:[eax],dl
  412d8a:	cmp    bl,BYTE PTR [edi-0x53cd314f]
  412d90:	cmp    DWORD PTR [edx+ecx*2+0x3da1299f],0xd5bc40a3
  412d9b:	fcom   QWORD PTR [ebx-0x6e74b2b1]
  412da1:	xchg   ebx,eax
  412da2:	fild   QWORD PTR [eax]
  412da4:	lock ret 
  412da6:	outs   dx,DWORD PTR ds:[esi]
  412da7:	xor    DWORD PTR [edx-0x41ffca04],edi
  412dad:	imul   BYTE PTR [edx+0x2b]
  412db0:	lahf   
  412db1:	adc    esi,DWORD PTR [edx+0x2784146f]
  412db7:	ins    DWORD PTR es:[edi],dx
  412db8:	ja     0x412e39
  412dba:	ficomp DWORD PTR [ebx]
  412dbc:	aas    
  412dbd:	push   ecx
  412dbe:	outs   dx,BYTE PTR ds:[esi]
  412dbf:	push   0x4f
  412dc1:	jnp    0x412e25
  412dc3:	not    BYTE PTR [eax+0x39]
  412dc6:	cmp    dl,dh
  412dc8:	dec    eax
  412dc9:	jmp    0xddf8:0xcffd1ad1
  412dd0:	int3   
  412dd1:	adc    eax,0x3eb15657
  412dd6:	cmp    DWORD PTR [ecx],ebp
  412dd8:	ret    0xc301
  412ddb:	repz ficom WORD PTR ds:0xdc4606f4
  412de2:	mov    dh,BYTE PTR [ebp+0x35]
  412de5:	ins    BYTE PTR es:[edi],dx
  412de6:	call   0xa853:0xbfe7c161
  412ded:	mov    ebx,0x2e6ee758
  412df2:	shl    BYTE PTR [esi+0xc6c0468],1
  412df8:	cmp    BYTE PTR [edi+0x3d255675],ah
  412dfe:	pusha  
  412dff:	addr16 cs dec ebx
  412e02:	clc    
  412e03:	js     0x412e79
  412e05:	fidiv  DWORD PTR [ebx+0x4d]
  412e08:	sbb    dl,BYTE PTR es:[edi-0x3f9a7bf9]
  412e0f:	(bad)  
  412e10:	mov    esp,0xf94e62d4
  412e15:	pop    ebp
  412e16:	add    dh,BYTE PTR [edi]
  412e18:	jmp    0x412e67
  412e1a:	xor    eax,0xb5681a26
  412e1f:	xchg   ebp,eax
  412e20:	inc    eax
  412e21:	lods   eax,DWORD PTR ds:[esi]
  412e22:	inc    esi
  412e23:	cmp    DWORD PTR [esi],edx
  412e25:	add    edx,DWORD PTR [edx-0x35]
  412e28:	shl    ecx,cl
  412e2a:	sbb    al,0x7d
  412e2c:	packsswb xmm1,xmm0
  412e30:	leave  
  412e31:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e33:	nop
  412e34:	adc    eax,0xc5dbd217
  412e39:	cmp    BYTE PTR [edi+0x16],dh
  412e3c:	das    
  412e3d:	xchg   ebx,eax
  412e3e:	mov    eax,ds:0x7bdee8e0
  412e43:	cmp    DWORD PTR [edx+0x78],eax
  412e46:	imul   BYTE PTR [edi+0x28]
  412e49:	xor    BYTE PTR ds:0x5b37140d,0x77
  412e50:	pop    edi
  412e51:	push   0x757dc651
  412e56:	lods   eax,DWORD PTR ds:[esi]
  412e57:	add    ch,ah
  412e59:	test   eax,0x96089bd4
  412e5e:	cmp    ebp,ebp
  412e60:	rol    BYTE PTR [edi+0x10d3186a],cl
  412e66:	lahf   
  412e67:	ja     0x412ece
  412e69:	jbe    0x412e88
  412e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e6c:	outs   dx,DWORD PTR ds:[esi]
  412e6d:	jp     0x412e7a
  412e6f:	mov    edi,0xd994f8ee
  412e74:	rcr    BYTE PTR [edx+0x25cc9fe7],cl
  412e7a:	jmp    0x412efb
  412e7c:	es std 
  412e7e:	cld    
  412e7f:	pop    edx
  412e80:	jo     0x412e28
  412e82:	mov    esi,0xd509646c
  412e87:	fs add eax,0xeb9a6b2c
  412e8d:	outs   dx,BYTE PTR ds:[esi]
  412e8e:	cwd    
  412e90:	test   eax,0x825627ca
  412e95:	pushf  
  412e96:	lock xor BYTE PTR [ecx],dh
  412e99:	xlat   BYTE PTR ds:[ebx]
  412e9a:	fbstp  TBYTE PTR [edi+0x2a]
  412e9d:	out    0xc5,eax
  412e9f:	sbb    eax,DWORD PTR [eax-0x54]
  412ea2:	popf   
  412ea3:	sub    eax,DWORD PTR [ebx+0x60]
  412ea6:	mov    dl,BYTE PTR [esp+ebp*8+0x53]
  412eaa:	inc    ebp
  412eab:	cmp    ebp,edi
  412ead:	sti    
  412eae:	shl    BYTE PTR [ecx-0x470bbd0c],cl
  412eb4:	inc    ebx
  412eb5:	sub    BYTE PTR [eax+0x1d037b7c],dh
  412ebb:	xor    esi,DWORD PTR [edi+0x60]
  412ebe:	(bad)  
  412ebf:	xchg   esp,eax
  412ec0:	push   edx
  412ec1:	repnz push esi
  412ec3:	mov    esp,DWORD PTR [edx]
  412ec5:	aas    
  412ec6:	mov    ah,0xce
  412ec8:	mov    dl,0x45
  412eca:	dec    edx
  412ecb:	imul   edi,DWORD PTR [ebx],0x60f1633f
  412ed1:	cwde   
  412ed2:	push   edx
  412ed3:	cmp    ch,al
  412ed5:	fisttp QWORD PTR [edx]
  412ed7:	mov    ebx,0x753404d7
  412edc:	test   al,0x2
  412ede:	das    
  412edf:	call   0x55a8:0x3b4a565e
  412ee6:	in     eax,dx
  412ee7:	fcmovnbe st,st(0)
  412ee9:	fwait
  412eea:	imul   esp,DWORD PTR [esi-0x1ee3ddd3],0xffffff89
  412ef1:	ins    DWORD PTR es:[edi],dx
  412ef2:	sahf   
  412ef3:	popa   
  412ef4:	or     BYTE PTR ds:[edx],0xb1
  412ef8:	mov    cl,0xe
  412efa:	sbb    BYTE PTR [esi-0x4f5bbb66],bl
  412f00:	hlt    
  412f01:	sbb    BYTE PTR [eax],cl
  412f03:	sub    DWORD PTR [esi+esi*8],ebp
  412f06:	jmp    0xa172:0x5be032bc
  412f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f0e:	cmp    eax,0xb10a3b2c
  412f13:	and    al,BYTE PTR [edi]
  412f15:	iret   
  412f16:	xor    BYTE PTR [esi+edx*1-0x11],dl
  412f1a:	jl     0x412f5a
  412f1c:	and    BYTE PTR ds:0x8d7df503,dh
  412f22:	gs adc eax,0xa3c0e40f
  412f28:	sub    eax,0xf24d3b00
  412f2d:	sub    ah,BYTE PTR [edi-0x1e7c1f16]
  412f33:	mov    cs,WORD PTR [edi-0x1d]
  412f36:	cwde   
  412f37:	add    al,0xa1
  412f39:	leave  
  412f3a:	mov    BYTE PTR [edx+eiz*2-0x33],bl
  412f3e:	xchg   edx,eax
  412f3f:	pop    esp
  412f40:	out    dx,al
  412f41:	sbb    BYTE PTR [eax-0x6d],dh
  412f44:	inc    ecx
  412f45:	push   ecx
  412f46:	inc    esi
  412f47:	lods   eax,DWORD PTR ds:[esi]
  412f48:	idiv   dl
  412f4a:	ret    
  412f4b:	add    DWORD PTR [eax-0x1c988cfa],0xffffffc5
  412f52:	leave  
  412f53:	mov    cl,0xeb
  412f55:	mov    edi,db1
  412f58:	mov    ecx,0xe74a01ed
  412f5d:	add    cl,BYTE PTR [ebx]
  412f5f:	mov    WORD PTR fs:[ebx],?
  412f62:	push   ss
  412f63:	mov    ebx,DWORD PTR ds:0xf31e5ba3
  412f69:	mov    ebx,0xd447bcd4
  412f6e:	out    dx,eax
  412f6f:	mov    es:0x2d4dbb05,eax
  412f75:	sbb    BYTE PTR [edi+0x63],ch
  412f78:	scas   al,BYTE PTR es:[edi]
  412f79:	dec    ebp
  412f7a:	popf   
  412f7b:	jp     0x412fa5
  412f7d:	and    ch,BYTE PTR [edx+0x7465f951]
  412f83:	cmp    BYTE PTR [eax+0x72519e6b],bh
  412f89:	xchg   edi,eax
  412f8a:	retf   0xbce4
  412f8d:	mov    dl,0xd2
  412f8f:	ds mov bl,0x35
  412f92:	(bad)  
  412f93:	leave  
  412f94:	jo     0x412f91
  412f96:	jmp    0x3012:0x240bc125
  412f9d:	sbb    BYTE PTR [ecx-0x46],ch
  412fa0:	or     al,0x48
  412fa2:	jb     0x41301b
  412fa4:	pop    ds
  412fa5:	in     al,dx
  412fa6:	pop    ss
  412fa7:	ja     0x412f9f
  412fa9:	or     BYTE PTR [ebx],0x54
  412fac:	mov    dl,0x8b
  412fae:	fld    DWORD PTR fs:[esi]
  412fb1:	xlat   BYTE PTR ds:[ebx]
  412fb2:	sub    al,0x5e
  412fb4:	xor    dh,cl
  412fb6:	in     al,dx
  412fb7:	mov    ch,0x1b
  412fb9:	(bad)  
  412fba:	adc    eax,0x3b235941
  412fbf:	iret   
  412fc0:	test   eax,0xea25a0cc
  412fc5:	(bad)  
  412fc6:	push   ecx
  412fc7:	jne    0x412fed
  412fc9:	add    BYTE PTR [edi],0x76
  412fcc:	les    ebp,FWORD PTR [esi-0x72aad7a6]
  412fd2:	inc    edi
  412fd3:	es cdq 
  412fd5:	pop    eax
  412fd6:	push   ecx
  412fd7:	mov    BYTE PTR [ebp+0x1989ab01],ch
  412fdd:	lods   eax,DWORD PTR ds:[esi]
  412fde:	add    esi,ebx
  412fe0:	lahf   
  412fe1:	data16 (bad) 
  412fe3:	imul   ecx,ebx,0xffffffcb
  412fe6:	das    
  412fe7:	arpl   WORD PTR [eax+0x53232b06],sp
  412fed:	out    0x75,eax
  412fef:	lods   eax,DWORD PTR ds:[esi]
  412ff0:	jmp    0x412f8e
  412ff2:	xor    al,0x77
  412ff4:	int    0x7f
  412ff6:	out    0xf,eax
  412ff8:	mov    eax,ds:0xcc3c4b38
  412ffd:	retf   0x4ce8
  413000:	scas   eax,DWORD PTR es:[edi]
  413001:	pushf  
  413002:	add    eax,0x71484d19
  413007:	pusha  
  413008:	stos   DWORD PTR es:[edi],eax
  413009:	xchg   ebx,eax
  41300a:	out    0xcb,eax
  41300c:	adc    al,0xd2
  41300e:	jge    0x412ffa
  413010:	int    0x29
  413012:	and    eax,esi
  413014:	mov    dh,0x30
  413016:	pop    edi
  413017:	pop    ebp
  413018:	dec    esp
  413019:	xlat   BYTE PTR ds:[ebx]
  41301a:	xchg   esp,eax
  41301b:	inc    esp
  41301c:	cmp    BYTE PTR [edi-0x2c477508],bl
  413022:	push   cs
  413023:	or     al,0x77
  413025:	and    bh,BYTE PTR [ebx-0x6dafc86c]
  41302b:	and    al,0xf3
  41302d:	pop    es
  41302e:	sbb    esi,DWORD PTR [eax-0x34]
  413031:	xchg   DWORD PTR [ebx],ecx
  413033:	lods   al,BYTE PTR ds:[esi]
  413034:	fwait
  413035:	push   es
  413036:	mov    WORD PTR [edi],cs
  413038:	adc    eax,0x5e1cc5e3
  41303d:	in     al,0x33
  41303f:	fistp  QWORD PTR [ebx-0x7e58c8c]
  413045:	add    al,0x51
  413047:	push   ecx
  413048:	xor    al,0x55
  41304a:	mov    ebx,0x5f912742
  41304f:	jae    0x413012
  413051:	test   eax,0xfe9afab5
  413056:	test   esi,ebx
  413058:	inc    ecx
  413059:	rol    DWORD PTR [ebx+ebp*1+0x43],1
  41305d:	neg    BYTE PTR [edx-0x38]
  413060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413061:	pop    ebx
  413062:	shr    ebp,cl
  413064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413065:	dec    ecx
  413066:	xchg   BYTE PTR [ebx+ebp*1+0x54],cl
  41306a:	or     eax,0x47f19365
  41306f:	inc    edx
  413070:	imul   ebp,DWORD PTR [edx+0x729f0d3d],0xe91393f
  41307a:	push   edi
  41307b:	mov    ds:0xb93b3a6f,eax
  413080:	xchg   esi,eax
  413081:	add    eax,0xa2890f92
  413086:	fst    st(7)
  413088:	stos   BYTE PTR es:[edi],al
  413089:	les    edx,FWORD PTR [ebp+eiz*2-0x613210be]
  413090:	lods   eax,DWORD PTR ds:[esi]
  413091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413092:	ja     0x41304d
  413094:	or     BYTE PTR [edi-0xa],ah
  413097:	(bad)  
  413098:	mov    edi,0x74529601
  41309d:	xchg   edx,eax
  41309e:	rol    BYTE PTR ds:0x512135d4,1
  4130a4:	mov    ecx,0x9eb33a8d
  4130a9:	sbb    BYTE PTR ds:0x44f19eb1,dl
  4130af:	out    0x63,eax
  4130b1:	add    edx,DWORD PTR [eax-0x5e]
  4130b4:	add    al,0xe9
  4130b6:	adc    cl,BYTE PTR [edi]
  4130b8:	int    0x8e
  4130ba:	mov    WORD PTR ds:0xc00ad5d3,gs
  4130c0:	and    BYTE PTR [edi-0x7cdccb40],cl
  4130c6:	ss in  eax,0xe3
  4130c9:	add    DWORD PTR [esi],0x76
  4130cc:	shl    BYTE PTR ds:0x71d1f1e0,1
  4130d2:	or     ebp,DWORD PTR ds:0x4aa0a99f
  4130d8:	scas   eax,DWORD PTR es:[edi]
  4130d9:	xor    esi,DWORD PTR [edx-0x5d]
  4130dc:	stos   BYTE PTR es:[edi],al
  4130dd:	adc    ah,BYTE PTR [eax-0x56bc06a0]
  4130e3:	mov    al,0xa7
  4130e5:	sbb    dh,BYTE PTR [edi]
  4130e7:	jg     0x4130a3
  4130e9:	(bad)  
  4130ea:	int    0xac
  4130ec:	lahf   
  4130ed:	fistp  QWORD PTR [esi+0x2a]
  4130f0:	and    eax,0x612bcd0b
  4130f5:	fld    DWORD PTR [edx]
  4130f7:	inc    eax
  4130f8:	arpl   WORD PTR [eax],cx
  4130fa:	sub    al,0x96
  4130fc:	jp     0x41308b
  4130fe:	out    dx,al
  4130ff:	or     al,0xea
  413101:	mov    edx,0x39b13388
  413106:	sbb    DWORD PTR [edi+0x2a],ecx
  413109:	out    dx,al
  41310a:	sbb    al,0xeb
  41310c:	mov    dl,dh
  41310e:	dec    edx
  41310f:	clc    
  413110:	sbb    eax,0x4857a3f1
  413115:	mov    edx,0x8644e240
  41311a:	dec    edx
  41311b:	bnd jmp 0x10a6af8b
  413121:	rcl    DWORD PTR [eax+0x12927284],0x80
  413128:	push   esp
  413129:	je     0x413183
  41312b:	push   0x8
  41312d:	mov    ah,0x62
  41312f:	push   es
  413130:	int3   
  413131:	xchg   al,al
  413133:	push   esi
  413134:	cmp    ecx,DWORD PTR [ebp-0x23]
  413137:	jnp    0x41310b
  413139:	mov    al,0x6f
  41313b:	lahf   
  41313c:	cs dec eax
  41313e:	pop    ebp
  41313f:	push   esp
  413140:	call   0xd0ad:0xad6b553c
  413147:	xor    al,0xdf
  413149:	or     edi,DWORD PTR [esi+0x35]
  41314c:	dec    esi
  41314d:	adc    DWORD PTR [esi+ebx*1+0x4e9791dc],esp
  413154:	jge    0x41318a
  413156:	rcr    BYTE PTR [esi+0x48],cl
  413159:	hlt    
  41315a:	xchg   ebp,eax
  41315b:	fs mov ebx,0x44a533b6
  413161:	into   
  413162:	js     0x413123
  413164:	fwait
  413165:	jmp    0x7992:0x11f1c8c8
  41316c:	add    DWORD PTR [ebx],0x4c381ce1
  413172:	pop    ebx
  413173:	retf   0x27bb
  413176:	xor    BYTE PTR [ebx],0xcf
  413179:	int3   
  41317a:	nop
  41317b:	cs hlt 
  41317d:	xor    DWORD PTR [esi+edx*8-0x28],eax
  413181:	jmp    0xce9fbc5e
  413186:	test   DWORD PTR [eax-0x711d9bd2],edi
  41318c:	lds    ebx,FWORD PTR [edx-0x4]
  41318f:	scas   eax,DWORD PTR es:[edi]
  413190:	sub    ch,BYTE PTR [esi+0x1664bad9]
  413196:	je     0x4131c3
  413198:	gs (bad) 
  41319a:	lahf   
  41319b:	fcomi  st,st(5)
  41319d:	ret    
  41319e:	sub    edi,DWORD PTR [ecx]
  4131a0:	xchg   edx,eax
  4131a1:	repz dec esp
  4131a3:	jno    0x413138
  4131a5:	fsub   QWORD PTR [eax+ecx*1]
  4131a8:	add    al,0xb1
  4131aa:	pop    eax
  4131ab:	aaa    
  4131ac:	xor    al,0xf
  4131ae:	jns    0x413163
  4131b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131b1:	sbb    edx,esp
  4131b3:	lahf   
  4131b4:	mov    cl,0x81
  4131b6:	xchg   edi,eax
  4131b7:	adc    ch,bl
  4131b9:	aam    0x49
  4131bb:	pop    ebp
  4131bc:	fucomp st(4)
  4131be:	inc    edx
  4131bf:	sub    esi,edi
  4131c1:	mov    edx,0x70815bff
  4131c6:	jne    0x413236
  4131c8:	push   edi
  4131c9:	jne    0x4131dc
  4131cb:	mov    ecx,DWORD PTR [ecx-0x478f272a]
  4131d1:	mov    eax,0xe674804e
  4131d6:	jge    0x4131dd
  4131d8:	out    0x63,eax
  4131da:	mov    edx,0x2e89db49
  4131df:	push   esp
  4131e0:	cmp    ebx,edi
  4131e2:	sbb    BYTE PTR [edi-0x5b],0x51
  4131e6:	das    
  4131e7:	dec    ebp
  4131e8:	imul   DWORD PTR [ebp-0x48]
  4131eb:	shl    DWORD PTR [edi],cl
  4131ed:	mov    esi,ecx
  4131ef:	stc    
  4131f0:	mov    dh,0xc9
  4131f2:	cmp    BYTE PTR [edi+0x39adb0cc],al
  4131f8:	cdq    
  4131f9:	push   ds
  4131fa:	mov    BYTE PTR [eax],dl
  4131fc:	push   edx
  4131fd:	(bad)  
  4131ff:	outs   dx,BYTE PTR ds:[esi]
  413200:	hlt    
  413201:	pushf  
  413202:	mov    ebx,0xafae9cbb
  413207:	and    al,0x6b
  413209:	dec    edx
  41320a:	mov    esi,0x6cb2f03
  41320f:	bound  edi,QWORD PTR [esi+0x2c]
  413212:	pop    edi
  413213:	push   ebp
  413214:	adc    eax,0x73cd52a4
  413219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41321a:	jg     0x413206
  41321c:	cli    
  41321d:	push   esp
  41321e:	xlat   BYTE PTR ds:[ebx]
  41321f:	les    ebp,FWORD PTR [edx]
  413221:	jb     0x413298
  413223:	shr    BYTE PTR [ecx],1
  413225:	pop    es
  413226:	sbb    bl,dh
  413228:	and    eax,0xda66fee4
  41322d:	pop    ss
  41322e:	pop    edi
  41322f:	pcmpgtb mm6,QWORD PTR [edi-0x63]
  413233:	or     ebp,esp
  413235:	enter  0x20fd,0x53
  413239:	repnz and dh,BYTE PTR [eax-0x5f24ac01]
  413240:	cmp    ax,0x7028
  413244:	in     al,0xf2
  413246:	add    bh,0xdd
  413249:	mov    WORD PTR [edx-0x45],cs
  41324c:	in     al,dx
  41324d:	in     eax,dx
  41324e:	jo     0x413215
  413250:	lock es add eax,0xdfb2e5f5
  413257:	xchg   esp,eax
  413258:	sub    edx,0x71cbb0f2
  41325e:	clc    
  41325f:	push   esi
  413260:	inc    esi
  413261:	retf   0x9422
  413264:	mov    ds:0xf9079005,eax
  413269:	adc    BYTE PTR [ebp-0x6f],bh
  41326c:	mov    al,ds:0xd9543d12
  413271:	xor    al,bl
  413273:	xor    eax,0x9ef88b18
  413278:	in     eax,dx
  413279:	push   0xd5e0f7c3
  41327e:	test   BYTE PTR [ebx+ebp*1+0x48],ch
  413282:	std    
  413283:	retf   0x5fa4
  413286:	jbe    0x4132c8
  413288:	bound  eax,QWORD PTR [ecx+0x11]
  41328b:	xchg   ecx,eax
  41328c:	sub    bh,dl
  41328e:	xor    DWORD PTR [edx-0x3e],ebp
  413291:	push   eax
  413292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413293:	push   ecx
  413294:	sti    
  413295:	adc    eax,DWORD PTR [esi]
  413297:	jmp    0x413243
  413299:	int3   
  41329a:	inc    ebx
  41329b:	aam    0xd0
  41329d:	hlt    
  41329e:	push   edx
  41329f:	mov    edx,0x3fec2222
  4132a4:	inc    eax
  4132a5:	sbb    BYTE PTR [edi-0x48],0x2e
  4132a9:	xchg   BYTE PTR [ecx-0x11],bl
  4132ac:	in     al,0x9b
  4132ae:	mov    ah,0xe2
  4132b0:	fwait
  4132b1:	add    al,0x96
  4132b3:	ja     0x413294
  4132b5:	les    esi,FWORD PTR [esi+0x48]
  4132b8:	stos   DWORD PTR es:[edi],eax
  4132b9:	std    
  4132ba:	fwait
  4132bb:	pop    esp
  4132bc:	lock inc ebx
  4132be:	inc    esi
  4132bf:	out    dx,al
  4132c0:	scas   eax,DWORD PTR es:[edi]
  4132c1:	and    eax,0x23d4e6a8
  4132c6:	xchg   edx,eax
  4132c7:	call   0xcb7c4e29
  4132cc:	pop    esp
  4132cd:	mov    ah,BYTE PTR [eax]
  4132cf:	pop    ds
  4132d0:	inc    edx
  4132d1:	sbb    esi,0xfffffffd
  4132d4:	inc    edi
  4132d5:	std    
  4132d6:	add    DWORD PTR [edi-0x30],ecx
  4132d9:	daa    
  4132da:	sbb    ah,ah
  4132dc:	pop    es
  4132dd:	mov    al,0x52
  4132df:	jno    0x4132d4
  4132e1:	ds iret 
  4132e3:	dec    edx
  4132e4:	daa    
  4132e5:	int3   
  4132e6:	fld    QWORD PTR [edx-0x4f]
  4132e9:	iret   
  4132ea:	int3   
  4132eb:	add    al,0xa8
  4132ed:	(bad)  
  4132ee:	adc    al,BYTE PTR [eax+0x2253ee2d]
  4132f4:	mov    ah,0x1a
  4132f6:	mov    ds:0x2ecf1050,eax
  4132fb:	dec    esi
  4132fc:	xor    esi,DWORD PTR [ecx+edi*8]
  4132ff:	push   0xfd1d8ca5
  413304:	jmp    FWORD PTR [eax]
  413306:	push   ebp
  413307:	mov    dh,0x46
  413309:	mov    esp,0xa1addd6
  41330e:	data16 test BYTE PTR [ecx+ecx*1],bh
  413312:	sbb    BYTE PTR [ecx-0x21],0x1
  413316:	sub    eax,0xdb7c162f
  41331b:	repz mov ebx,0x17a54d69
  413321:	mov    esp,0xcba080a1
  413326:	dec    ecx
  413327:	jns    0x4133a8
  413329:	inc    esi
  41332a:	cmp    al,0xae
  41332c:	mov    bh,0x13
  41332e:	and    al,0x47
  413330:	push   ecx
  413331:	xchg   ebx,eax
  413332:	push   esp
  413333:	call   0x9b85:0x8e8f133e
  41333a:	jno    0x413345
  41333c:	jb     0x41330d
  41333e:	mov    bh,0x97
  413340:	out    dx,eax
  413341:	inc    edx
  413342:	and    dl,BYTE PTR [edi]
  413344:	(bad)  
  413345:	jns    0x4133b9
  413347:	and    edi,DWORD PTR [edi+eax*1+0x7ee96fa]
  41334e:	sbb    eax,0xc0e5bf73
  413353:	lea    ecx,[ecx]
  413355:	and    BYTE PTR [ebp+0xe],0xc
  413359:	jmp    0x4132fa
  41335b:	sbb    al,0x87
  41335d:	(bad)  
  41335e:	pop    esp
  41335f:	cmp    DWORD PTR [eax-0x5174f454],ebp
  413365:	stc    
  413366:	cmp    eax,0xf7c5ef00
  41336b:	mov    BYTE PTR [ecx],al
  41336d:	lods   eax,DWORD PTR ds:[esi]
  41336e:	jae    0x4133e9
  413370:	fstp   QWORD PTR [ecx-0x52eaeaf7]
  413376:	add    DWORD PTR [edi],ebp
  413378:	scas   al,BYTE PTR es:[edi]
  413379:	mov    bh,0x5d
  41337b:	cmp    edx,DWORD PTR [ecx-0x49]
  41337e:	mov    ebx,0xd5f15605
  413383:	cmp    al,0xe2
  413385:	call   0x34a6d73
  41338a:	je     0x413359
  41338c:	(bad)  
  41338d:	sub    BYTE PTR [esi],dl
  41338f:	aam    0xa8
  413391:	mov    edx,0x7674e68
  413396:	jns    0x413357
  413398:	loope  0x413367
  41339a:	dec    esi
  41339b:	inc    esi
  41339c:	mov    eax,0x47cc8a13
  4133a1:	jno    0x4133ad
  4133a3:	mov    ecx,0x5594ecae
  4133a8:	cs jae 0x4133fc
  4133ab:	cmc    
  4133ac:	mov    ecx,0x373b5786
  4133b1:	sbb    eax,0x1020192d
  4133b6:	push   0x4e
  4133b8:	xchg   edi,eax
  4133b9:	in     eax,dx
  4133ba:	mov    esi,0x7fccb7d7
  4133bf:	inc    eax
  4133c0:	neg    BYTE PTR [ebx-0x44]
  4133c3:	lods   al,BYTE PTR ds:[esi]
  4133c4:	mov    edi,0xad8e7e84
  4133c9:	lea    esp,[edi+0xf]
  4133cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133cd:	das    
  4133ce:	pop    edi
  4133cf:	mov    al,ds:0xf520326a
  4133d4:	cs cli 
  4133d6:	sub    ebp,esi
  4133d8:	mov    edx,0xa531eaed
  4133dd:	or     BYTE PTR [edi-0x65],0x63
  4133e1:	push   ecx
  4133e2:	scas   al,BYTE PTR es:[edi]
  4133e3:	xchg   esi,eax
  4133e4:	cmp    al,0x9e
  4133e6:	cli    
  4133e7:	sbb    esi,DWORD PTR [ecx]
  4133e9:	push   eax
  4133ea:	popa   
  4133eb:	jmp    0x4133e9
  4133ed:	push   edi
  4133ee:	push   0x1d71b49b
  4133f3:	(bad)  
  4133f4:	mov    esp,0x417d1661
  4133f9:	mov    WORD PTR [esi+0x9],gs
  4133fc:	scas   eax,DWORD PTR es:[edi]
  4133fd:	push   eax
  4133fe:	aas    
  4133ff:	xlat   BYTE PTR ds:[ebx]
  413400:	mov    esi,0x8b495c58
  413405:	(bad)  
  413406:	xor    eax,0xbe0650f5
  41340b:	fstp   DWORD PTR [esi]
  41340d:	fcmovbe st,st(6)
  41340f:	pop    ss
  413410:	sub    ecx,DWORD PTR [eax+0x5df5e037]
  413416:	jle    0x413464
  413418:	lods   al,BYTE PTR ds:[si]
  41341a:	ins    BYTE PTR es:[edi],dx
  41341b:	jbe    0x413499
  41341d:	stos   BYTE PTR es:[edi],al
  41341e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41341f:	lods   eax,DWORD PTR ds:[esi]
  413420:	jae    0x4133b7
  413422:	xlat   BYTE PTR ds:[ebx]
  413423:	mov    edi,0xa84805b3
  413428:	sub    cl,bl
  41342a:	cmp    bl,BYTE PTR [eax+ebx*1-0x31a72059]
  413431:	inc    ebx
  413432:	cmp    eax,0xb023bbd2
  413437:	mov    esp,?
  413439:	repz daa 
  41343b:	jle    0x413482
  41343d:	test   dl,ch
  41343f:	jecxz  0x4133e7
  413441:	repnz push eax
  413443:	xchg   esp,eax
  413444:	adc    cl,BYTE PTR [ecx+0x3e]
  413447:	enter  0x6221,0xc1
  41344b:	test   eax,0xed069969
  413450:	dec    eax
  413451:	xor    al,ah
  413453:	inc    edx
  413454:	loopne 0x41344b
  413456:	xchg   DWORD PTR [ecx],ebp
  413458:	or     ah,cl
  41345a:	lea    ecx,[ebp-0x18c25d71]
  413460:	dec    esp
  413461:	add    dl,BYTE PTR [edx+edi*2-0x5b]
  413465:	and    dl,BYTE PTR [ecx]
  413467:	loopne 0x413425
  413469:	ins    DWORD PTR es:[edi],dx
  41346a:	sub    dh,cl
  41346c:	add    eax,0x6606d599
  413471:	xchg   esp,eax
  413472:	cmp    ecx,ecx
  413474:	std    
  413475:	mov    WORD PTR [eax+0x3fba029d],es
  41347b:	test   DWORD PTR [ebp+0x73],ebp
  41347e:	in     eax,0x9d
  413480:	and    BYTE PTR [ebp+esi*2-0x58],bl
  413484:	mov    ah,0x68
  413486:	push   eax
  413487:	retf   0xe104
  41348a:	mov    ebp,?
  41348c:	and    edi,DWORD PTR [edx+0x55]
  41348f:	aam    0x15
  413491:	dec    edx
  413492:	jne    0x4134d6
  413494:	or     DWORD PTR [ebx+0x3ebbf058],ebp
  41349a:	mov    ah,0x60
  41349c:	fiadd  WORD PTR [eax-0x3e]
  41349f:	and    BYTE PTR [ebx-0x6ad8fcf0],al
  4134a5:	test   eax,0xc15f3d2
  4134aa:	inc    ebp
  4134ab:	in     eax,0x3f
  4134ad:	sbb    al,BYTE PTR [eax-0x17]
  4134b0:	cli    
  4134b1:	mov    ds:0xef763499,al
  4134b6:	xchg   ebx,eax
  4134b7:	enter  0x1776,0xbb
  4134bb:	push   ss
  4134bc:	mov    es,WORD PTR [ebp+0x38626efe]
  4134c2:	mov    eax,0xeb73b253
  4134c7:	cwde   
  4134c8:	jge    0x413451
  4134ca:	fcom   QWORD PTR [esi+edi*8]
  4134cd:	and    eax,0x776d8add
  4134d2:	pop    esp
  4134d3:	jo     0x4134b6
  4134d5:	aas    
  4134d6:	push   ss
  4134d7:	int3   
  4134d8:	cmp    esi,DWORD PTR [ebp-0x4e]
  4134db:	test   DWORD PTR [ebx+0x55],edi
  4134de:	in     al,dx
  4134df:	pop    esi
  4134e0:	fmul   QWORD PTR [edx-0x29]
  4134e3:	push   ebx
  4134e4:	imul   ecx,DWORD PTR [ebp+0x46430976],0x8c93c5e
  4134ee:	stos   BYTE PTR es:[edi],al
  4134ef:	sbb    dl,BYTE PTR [eax]
  4134f1:	xor    eax,0xd331ffb9
  4134f6:	mov    ah,BYTE PTR [esi-0x16]
  4134f9:	jg     0x4134d7
  4134fb:	inc    esi
  4134fc:	push   ebx
  4134fd:	bound  edi,QWORD PTR [edi-0x243675aa]
  413503:	jmp    0x5960:0xe2f5c062
  41350a:	mov    ch,0x8b
  41350c:	in     al,0xfc
  41350e:	adc    ah,ah
  413510:	mov    eax,ds:0xa74fbb3f
  413515:	mov    ecx,0xd3605f12
  41351a:	fistp  WORD PTR [ecx-0x70aeca9f]
  413520:	int    0x7c
  413522:	push   esi
  413523:	(bad)  [esi]
  413525:	xor    DWORD PTR [edi-0x1b],0x83b10982
  41352c:	(bad)  
  41352e:	inc    ecx
  41352f:	mov    esp,ebp
  413531:	ins    DWORD PTR es:[edi],dx
  413532:	xchg   BYTE PTR ss:[ebp+edi*2+0x22fb5458],bl
  41353a:	aaa    
  41353b:	sub    cl,BYTE PTR [ebx+0x60232c66]
  413541:	dec    esi
  413542:	add    eax,0x98522aae
  413547:	cmp    BYTE PTR [edi+eax*4-0x7fbec8a2],bh
  41354e:	jge    0x4134f9
  413550:	jge    0x4134e3
  413552:	or     al,0x4f
  413554:	cli    
  413555:	pop    ds
  413556:	adc    DWORD PTR [edi+0x7c],ecx
  413559:	cmp    eax,0x52dcfe02
  41355e:	scas   al,BYTE PTR es:[edi]
  41355f:	scas   eax,DWORD PTR es:[edi]
  413560:	xor    DWORD PTR [ebp-0x48],0x2ec57c59
  413567:	fcomp  QWORD PTR [ecx+0x53d827ed]
  41356d:	mov    WORD PTR gs:[ebp+0x7],gs
  413571:	mov    eax,ds:0xd732c636
  413576:	ja     0x413535
  413578:	inc    edi
  413579:	xchg   DWORD PTR [edx-0x449f8aab],ebx
  41357f:	sub    eax,0xa67b638c
  413584:	test   DWORD PTR [ecx-0x3edaff3c],esp
  41358a:	inc    ecx
  41358b:	mov    eax,ebp
  41358d:	shl    DWORD PTR [edi],cl
  41358f:	dec    esi
  413590:	mov    ebx,0x1337a359
  413595:	jb     0x413536
  413597:	push   ebp
  413598:	mov    ah,0x49
  41359a:	xchg   esi,eax
  41359b:	shl    DWORD PTR [esi-0x7d9b2b50],0xc1
  4135a2:	rcl    BYTE PTR [edi+0x50],0x72
  4135a6:	dec    esp
  4135a7:	xchg   DWORD PTR [ecx+0x646689cf],esi
  4135ad:	loope  0x4135eb
  4135af:	jno    0x413615
  4135b1:	or     DWORD PTR [edi+0x9],edx
  4135b4:	cwde   
  4135b5:	xchg   ebx,eax
  4135b6:	sub    al,0x28
  4135b8:	pushf  
  4135b9:	add    BYTE PTR [ebp-0x4329b7ce],al
  4135bf:	sti    
  4135c0:	test   BYTE PTR [ecx],dh
  4135c2:	call   0x4da3a35e
  4135c7:	pop    esp
  4135c8:	lods   al,BYTE PTR ds:[esi]
  4135c9:	and    dh,BYTE PTR [ebx]
  4135cb:	fwait
  4135cc:	xchg   edi,eax
  4135cd:	mov    eax,ds:0x2caef0d7
  4135d2:	fs mov ebp,0x2c693bf1
  4135d8:	cmp    esi,DWORD PTR [esp+edx*8-0x43]
  4135dc:	jmp    0x2d33:0xbedc41f1
  4135e3:	popf   
  4135e4:	add    bh,BYTE PTR [ebx]
  4135e6:	inc    ebp
  4135e7:	sti    
  4135e8:	mov    dl,0x2f
  4135ea:	inc    esp
  4135eb:	cmp    DWORD PTR [eax-0x7d7dbca4],eax
  4135f1:	enter  0x9d77,0xb5
  4135f5:	imul   edx,DWORD PTR [ecx+0x6eb28602],0x7d7f73ee
  4135ff:	call   0x831def05
  413604:	pop    ss
  413605:	pop    ebx
  413606:	add    eax,ebp
  413608:	mov    ebx,0x39a0156e
  41360d:	inc    esp
  41360e:	fcomp  QWORD PTR [edx+0xe469dbc]
  413614:	cmp    BYTE PTR [esi+0x71],dl
  413617:	jmp    0xca291388
  41361c:	sub    al,0xb
  41361e:	add    BYTE PTR [ebx-0x21],bh
  413621:	call   0xca2b20ef
  413626:	and    al,0x6b
  413628:	(bad)  
  413629:	jae    0x413671
  41362b:	xlat   BYTE PTR ds:[ebx]
  41362c:	fcomp  DWORD PTR [eax+0x16]
  41362f:	jp     0x4135cc
  413631:	outs   dx,DWORD PTR ds:[esi]
  413632:	not    BYTE PTR [ecx]
  413634:	dec    ecx
  413635:	push   0x3b
  413637:	test   eax,0x9bce0eac
  41363c:	(bad)  [esi-0x1f]
  41363f:	loop   0x4135e2
  413641:	mov    al,ds:0x200572b2
  413646:	or     BYTE PTR [edi],ch
  413648:	dec    ecx
  413649:	adc    esp,edi
  41364b:	xchg   bh,ah
  41364d:	mov    ebp,gs
  41364f:	iret   
  413650:	les    eax,FWORD PTR [edi+0x5cf5b624]
  413656:	push   cs
  413657:	xchg   ah,dh
  413659:	xor    DWORD PTR [edi],esi
  41365b:	repz mov ecx,0xc1f7b102
  413661:	push   ss
  413662:	inc    esp
  413663:	pushf  
  413664:	inc    esi
  413665:	sbb    DWORD PTR [ebp+0xb8580fd],edi
  41366b:	add    al,0x24
  41366d:	inc    esp
  41366e:	iret   
  41366f:	fisttp DWORD PTR [ebx-0x39e4c11d]
  413675:	pop    esi
  413676:	xor    DWORD PTR [eax-0x10ce4923],edx
  41367c:	in     al,dx
  41367d:	mov    dl,0x13
  41367f:	pop    esi
  413680:	mov    edx,0xf8c6a606
  413685:	cmc    
  413686:	adc    al,0x14
  413688:	inc    ebp
  413689:	repz sub BYTE PTR [edi+0x36],al
  41368d:	cmp    edi,DWORD PTR [ebp+0x34f3dcd]
  413693:	add    al,0xb6
  413695:	dec    cx
  413697:	arpl   WORD PTR [edx-0x5de96d86],dx
  41369d:	xor    ah,ch
  41369f:	das    
  4136a0:	cmp    BYTE PTR [eax+0x42],al
  4136a3:	in     eax,0x6f
  4136a5:	adc    DWORD PTR [ebp+0x198807fd],edx
  4136ab:	mov    ebp,0xe645731b
  4136b0:	dec    esp
  4136b1:	mov    WORD PTR ds:0x42567d4e,?
  4136b7:	jo     0x413688
  4136b9:	dec    eax
  4136ba:	and    ah,al
  4136bc:	ins    DWORD PTR es:[edi],dx
  4136bd:	cld    
  4136be:	cld    
  4136bf:	mov    bh,BYTE PTR [edx+0xb60dfcc]
  4136c5:	jne    0x413721
  4136c7:	xor    al,0x85
  4136c9:	jns    0x413743
  4136cb:	dec    ecx
  4136cc:	dec    esp
  4136cd:	adc    DWORD PTR [ecx+0x4f],esp
  4136d0:	add    BYTE PTR [edx-0x34],0xfa
  4136d4:	or     eax,0xc2130a59
  4136d9:	pop    ds
  4136da:	or     dh,BYTE PTR [ecx]
  4136dc:	jb     0x413694
  4136de:	mov    bh,BYTE PTR [ecx-0x43]
  4136e1:	pop    edx
  4136e2:	push   ecx
  4136e3:	loopne 0x413665
  4136e5:	jne    0x4136f0
  4136e7:	arpl   WORD PTR [edx+0x33c4e583],di
  4136ed:	mov    esp,0xfca43d7a
  4136f2:	pop    edi
  4136f3:	xor    DWORD PTR [edx-0x73],edx
  4136f6:	or     ah,BYTE PTR [esi+0x16d6940e]
  4136fc:	mov    ds:0xe91d8a7f,al
  413701:	call   0xe413:0x9fb46838
  413708:	inc    eax
  413709:	adc    eax,DWORD PTR [esi+ebx*8-0x5e30356]
  413710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413711:	cs (bad) 
  413713:	fsub   st,st(7)
  413715:	out    dx,eax
  413716:	out    dx,eax
  413717:	fs in  eax,dx
  413719:	(bad)  
  41371b:	mov    al,0x89
  41371d:	mov    al,BYTE PTR [ebx-0x775902b5]
  413723:	xor    eax,esi
  413725:	icebp  
  413726:	cmc    
  413727:	push   es
  413728:	dec    edi
  413729:	xchg   esp,eax
  41372a:	call   0x68cd:0x2a50ad96
  413731:	std    
  413732:	(bad)  
  413733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413734:	in     al,dx
  413735:	dec    edx
  413736:	pop    esp
  413737:	(bad)  
  413738:	scas   al,BYTE PTR es:[edi]
  413739:	xlat   BYTE PTR ds:[ebx]
  41373a:	sub    BYTE PTR [ebx+0x146cc6da],dl
  413740:	sub    eax,0xe5ec70fd
  413745:	mov    BYTE PTR [edx+0x3d],dh
  413748:	push   ss
  413749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41374a:	fsub   DWORD PTR [ecx-0xf]
  41374d:	aaa    
  41374e:	xchg   ecx,eax
  41374f:	int3   
  413750:	das    
  413751:	or     ch,dh
  413753:	sbb    ch,BYTE PTR [ebp+edi*2-0x2e]
  413757:	pop    ss
  413758:	icebp  
  413759:	jmp    0x41bf6338
  41375e:	mov    ch,0x84
  413760:	add    cl,al
  413762:	pop    esp
  413763:	add    esi,DWORD PTR [ebx-0x68]
  413766:	xor    bh,BYTE PTR [edx+esi*4+0x67d1a99]
  41376d:	test   eax,0x3d47415
  413772:	dec    ebp
  413773:	(bad)  
  413774:	shl    DWORD PTR [edx],cl
  413776:	pop    es
  413777:	ret    
  413778:	mov    cs,WORD PTR [eax]
  41377a:	aad    0x7c
  41377c:	mov    dh,al
  41377e:	repz jmp 0x4137a4
  413781:	mov    edi,0x10e2f07
  413786:	pop    edi
  413787:	cmp    BYTE PTR [esi+0x3d],ch
  41378a:	push   0x92e579b0
  41378f:	mov    gs,WORD PTR ds:0x3472427d
  413795:	fs mov eax,0x8f09f192
  41379b:	and    cl,bh
  41379d:	clc    
  41379e:	and    DWORD PTR [ecx+0x2e8ebecb],ebx
  4137a4:	adc    al,0x5e
  4137a6:	mov    al,bh
  4137a8:	popf   
  4137a9:	mov    edx,DWORD PTR [edx-0x55]
  4137ac:	enter  0x81ea,0x74
  4137b0:	and    BYTE PTR [ebx],bh
  4137b2:	push   ds
  4137b3:	lock enter 0xf49a,0x42
  4137b8:	(bad)  
  4137b9:	sub    esp,DWORD PTR [ebx]
  4137bb:	repz je 0x413789
  4137be:	add    bh,BYTE PTR [esi]
  4137c0:	ss or  ecx,esp
  4137c3:	xchg   DWORD PTR [ebx+0x25c26e0e],esp
  4137c9:	data16 adc BYTE PTR [eax+0x59],0x78
  4137ce:	mov    ah,BYTE PTR [edi-0x12]
  4137d1:	fs ins BYTE PTR es:[edi],dx
  4137d3:	out    0x68,al
  4137d5:	imul   edi,DWORD PTR [ebx+0x37],0x9f6837c2
  4137dc:	mov    ds:0x44b58c79,al
  4137e1:	fst    st(7)
  4137e3:	or     DWORD PTR [edx+0x3b6e144e],ecx
  4137e9:	scas   eax,DWORD PTR es:[edi]
  4137ea:	push   esp
  4137eb:	test   esp,edx
  4137ed:	ret    0xc795
  4137f0:	xchg   ebx,eax
  4137f1:	in     eax,0xfc
  4137f3:	into   
  4137f4:	add    DWORD PTR [edi+edi*4],edx
  4137f7:	ins    DWORD PTR es:[edi],dx
  4137f8:	fisttp WORD PTR [edx+eax*4+0x57c91a37]
  4137ff:	mov    al,BYTE PTR [edx]
  413801:	into   
  413802:	fisttp QWORD PTR [ecx-0x74f51e7a]
  413808:	std    
  413809:	xchg   ebx,eax
  41380a:	sti    
  41380b:	pushf  
  41380c:	out    0xb6,eax
  41380e:	retf   
  41380f:	ret    
  413810:	push   ebx
  413811:	xchg   edx,eax
  413812:	pop    esi
  413813:	sub    eax,0x5f7f6651
  413818:	call   0xf34c0c0f
  41381d:	or     DWORD PTR ds:0x13b0b768,edi
  413823:	pminub mm0,QWORD PTR [esp+edi*4-0x41ae7c9d]
  41382b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41382c:	pop    ecx
  41382d:	inc    esi
  41382e:	jp     0x4137ee
  413830:	xchg   esp,eax
  413831:	pop    ebp
  413832:	ja     0x4138ae
  413834:	imul   edi,DWORD PTR [edi-0x261fd5ce],0xffffff81
  41383b:	out    dx,al
  41383c:	dec    ecx
  41383d:	int3   
  41383e:	jo     0x413883
  413840:	inc    esp
  413841:	nop
  413842:	loop   0x413882
  413844:	add    esp,esp
  413846:	add    eax,0xfb776e4
  41384b:	pop    ebp
  41384c:	xor    eax,0x4508e3d
  413851:	push   0xffffffc4
  413853:	pop    ebx
  413854:	fwait
  413855:	sbb    ah,BYTE PTR [esi]
  413857:	(bad)  
  413858:	ret    0x1753
  41385b:	inc    edx
  41385c:	adc    BYTE PTR [ecx],al
  41385e:	lods   eax,DWORD PTR ds:[esi]
  41385f:	adc    al,0xfa
  413861:	sahf   
  413862:	cld    
  413863:	mov    ebx,0xb7a66785
  413868:	push   es
  413869:	add    BYTE PTR [eax+0x1],cl
  41386c:	scas   eax,DWORD PTR es:[edi]
  41386d:	int3   
  41386e:	cmp    eax,0x37b00a06
  413873:	dec    eax
  413874:	dec    ebp
  413875:	mov    ch,0x5d
  413877:	jg     0x413818
  413879:	xchg   ebp,eax
  41387a:	mov    bh,0x64
  41387c:	cmp    DWORD PTR [edx+0xe],eax
  41387f:	xor    BYTE PTR [edx-0x513e6a94],ch
  413885:	or     BYTE PTR [edi+0x1203fe53],ah
  41388b:	pop    ebp
  41388c:	repz pop eax
  41388e:	adc    al,bl
  413890:	sub    DWORD PTR [esi],ebp
  413892:	xchg   edx,eax
  413893:	lods   eax,DWORD PTR ds:[esi]
  413894:	enter  0xf43b,0x63
  413898:	mov    bl,BYTE PTR [ebx-0x5b]
  41389b:	cs xor ebp,esi
  41389e:	ins    DWORD PTR es:[edi],dx
  41389f:	pusha  
  4138a0:	push   cs
  4138a1:	add    BYTE PTR [ebx-0x3832bdd9],cl
  4138a7:	retf   
  4138a8:	jl     0x413864
  4138aa:	in     eax,0x3
  4138ac:	and    ch,BYTE PTR [eax]
  4138ae:	pop    ecx
  4138af:	and    BYTE PTR [ebx-0x229c4368],cl
  4138b5:	sbb    eax,0x231d924d
  4138ba:	inc    eax
  4138bb:	lea    esp,[esi-0x60]
  4138be:	pop    eax
  4138bf:	pop    eax
  4138c0:	mov    edx,0x1e6eb64c
  4138c5:	(bad)  
  4138c6:	jge    0x413893
  4138c8:	mov    ah,0x13
  4138ca:	mov    eax,ds:0x406f1b3
  4138cf:	call   0xb0d5f3da
  4138d4:	mov    ecx,0xb8935baa
  4138d9:	jnp    0x41388b
  4138db:	add    eax,0x971f74d0
  4138e0:	push   es
  4138e1:	int    0xc2
  4138e3:	push   edx
  4138e4:	stos   BYTE PTR es:[edi],al
  4138e5:	adc    al,0x85
  4138e7:	cwde   
  4138e8:	jmp    0x4138aa
  4138ea:	jno    0x413928
  4138ec:	fs adc eax,0x6a871610
  4138f2:	fcmovnb st,st(0)
  4138f4:	test   eax,0x983d8e01
  4138f9:	pop    ebp
  4138fa:	jmp    0x35608629
  4138ff:	adc    BYTE PTR [edi+0x281e054e],bl
  413905:	jmp    0xb65:0xbb497fcf
  41390c:	nop
  41390d:	std    
  41390e:	inc    ecx
  41390f:	popf   
  413910:	popa   
  413911:	sbb    dh,BYTE PTR [edi*8+0x214eb7ec]
  413918:	add    ah,BYTE PTR [ebx]
  41391a:	cmp    al,0x80
  41391c:	push   ecx
  41391d:	push   ss
  41391e:	cmp    dh,BYTE PTR [ebp+0x60]
  413921:	in     eax,0x23
  413923:	int    0x8f
  413925:	xor    DWORD PTR [ebp+0x5],0x775b35a7
  41392c:	adc    DWORD PTR [ebx],eax
  41392e:	pop    ds
  41392f:	imul   ecx,DWORD PTR [ecx-0x53e24392],0xffffff8c
  413936:	pop    ebp
  413937:	inc    ecx
  413938:	inc    esi
  413939:	in     al,0xcc
  41393b:	xchg   ebx,eax
  41393c:	pop    es
  41393d:	call   0x14ce:0xa0b13f6e
  413944:	cmp    al,0x9e
  413946:	and    al,0xf0
  413948:	jg     0x413929
  41394a:	inc    edi
  41394b:	and    ebp,ebp
  41394d:	call   0xa5f6ff84
  413952:	outs   dx,BYTE PTR ds:[esi]
  413953:	sbb    edi,DWORD PTR [ebp+0x75]
  413956:	not    ch
  413958:	mov    edi,0x25c293a1
  41395d:	or     dl,ch
  41395f:	cmp    al,0xdb
  413961:	fcmove st,st(5)
  413963:	xor    eax,0x2e6ae50a
  413968:	cli    
  413969:	sub    esp,ebx
  41396b:	test   al,0xe9
  41396d:	clc    
  41396e:	es out 0x84,eax
  413971:	stos   BYTE PTR es:[edi],al
  413972:	mov    bh,BYTE PTR [esi+0x60fd532e]
  413978:	mov    ds:0xbdc35363,eax
  41397d:	mov    al,ds:0xfafc236e
  413982:	push   esp
  413983:	mov    cl,0x54
  413985:	sbb    ebx,DWORD PTR [ebp-0x79f11dab]
  41398b:	mov    al,ds:0x5da7356b
  413990:	test   eax,0xdfa4278b
  413995:	daa    
  413996:	ins    BYTE PTR es:[edi],dx
  413997:	das    
  413998:	ins    DWORD PTR es:[edi],dx
  413999:	push   ebp
  41399a:	into   
  41399b:	out    0x3,eax
  41399d:	xor    ebx,DWORD PTR [esi-0x60]
  4139a0:	js     0x4139b6
  4139a2:	adc    ebp,DWORD PTR [eax]
  4139a4:	add    ecx,DWORD PTR [ebx-0x2d]
  4139a7:	in     eax,dx
  4139a8:	mov    eax,0x758ec57c
  4139ad:	int3   
  4139ae:	xor    BYTE PTR [ebx],cl
  4139b0:	jns    0x413a07
  4139b2:	and    BYTE PTR [edx+0x2bb6a668],cl
  4139b8:	int    0x1
  4139ba:	jmp    FWORD PTR [eax+0x48bad6c1]
  4139c0:	cld    
  4139c1:	sti    
  4139c2:	cmp    BYTE PTR [ebx+ebp*1+0x30],bh
  4139c6:	push   cs
  4139c7:	in     al,dx
  4139c8:	and    al,0xc1
  4139ca:	jae    0x413a11
  4139cc:	fldenv [edx-0x274d4360]
  4139d2:	lea    edi,[eax-0x32c91d60]
  4139d8:	das    
  4139d9:	dec    esp
  4139da:	repz mov ds:0xaf42caee,eax
  4139e0:	jle    0x413979
  4139e2:	mov    eax,DWORD PTR [edi]
  4139e4:	js     0x4139c0
  4139e6:	jp     0x413a07
  4139e8:	jge    0x4139a1
  4139ea:	cdq    
  4139eb:	cmp    al,0x2
  4139ed:	ja     0x4139c1
  4139ef:	dec    dl
  4139f1:	mov    ah,0x7c
  4139f3:	mov    ds:0x47164aa2,eax
  4139f8:	std    
  4139f9:	test   al,0x77
  4139fb:	pushf  
  4139fc:	nop
  4139fd:	xchg   edi,eax
  4139fe:	aas    
  4139ff:	add    bl,BYTE PTR [edi]
  413a01:	inc    esp
  413a02:	shr    BYTE PTR [ecx],0xdf
  413a05:	adc    BYTE PTR [ecx-0xce08d11],bh
  413a0b:	mov    edx,0xd5deba03
  413a10:	jle    0x4139ec
  413a12:	and    edi,DWORD PTR [edi]
  413a14:	out    dx,al
  413a15:	stos   DWORD PTR es:[edi],eax
  413a16:	and    eax,0xc45ae213
  413a1b:	iret   
  413a1c:	adc    ah,BYTE PTR [edx]
  413a1e:	mov    bh,0x2e
  413a20:	fcom   DWORD PTR [edi+eax*4]
  413a23:	mov    edi,0xe44f87bb
  413a28:	mov    ?,WORD PTR [eax-0x3bfab91a]
  413a2e:	dec    ecx
  413a2f:	dec    esi
  413a30:	push   ds
  413a31:	and    al,0xa0
  413a33:	jl     0x413a37
  413a35:	mov    edi,0x6a4e8d0f
  413a3a:	pop    ds
  413a3b:	jno    0x413aa5
  413a3d:	rcl    ebp,cl
  413a3f:	addr16 push 0xaff0267d
  413a45:	mov    al,ds:0x1faec42d
  413a4a:	pop    ss
  413a4b:	push   ebx
  413a4c:	push   ebp
  413a4d:	dec    edx
  413a4e:	jne    0x413a1c
  413a50:	in     eax,0xe3
  413a52:	(bad)  
  413a54:	cmc    
  413a55:	lahf   
  413a56:	call   0xe98d2661
  413a5b:	hlt    
  413a5c:	nop
  413a5d:	xor    al,0xca
  413a5f:	arpl   WORD PTR [esi],dx
  413a61:	loop   0x413a77
  413a63:	inc    esp
  413a64:	add    ch,dl
  413a66:	dec    eax
  413a67:	fnstsw WORD PTR [ecx-0x48]
  413a6a:	daa    
  413a6b:	push   0xffffffe6
  413a6d:	mov    dh,0xe4
  413a6f:	mov    esp,0x65077ec
  413a74:	popa   
  413a75:	mov    cl,0x8b
  413a77:	shr    BYTE PTR [esi],1
  413a79:	push   0x6c
  413a7b:	mov    dl,0x50
  413a7d:	inc    esi
  413a7e:	ret    
  413a7f:	mov    ds:0xa2a8a9d4,al
  413a84:	popa   
  413a85:	shl    esi,0xb6
  413a88:	mov    ds:0xbccc233,al
  413a8d:	sub    edi,0xffffffa1
  413a90:	and    DWORD PTR [eax+edi*8-0x25ad2ba1],edx
  413a97:	aam    0x44
  413a99:	addr16 jmp 0xa4942d89
  413a9f:	daa    
  413aa0:	(bad)  
  413aa1:	jmp    0x9e63:0x4415b718
  413aa8:	bound  esp,QWORD PTR [edi-0x19]
  413aab:	das    
  413aac:	add    eax,0xad2af319
  413ab1:	es leave 
  413ab3:	jmp    0x5a579794
  413ab8:	test   edx,esi
  413aba:	popf   
  413abb:	add    eax,0x1ce809fb
  413ac0:	hlt    
  413ac1:	push   es
  413ac2:	jl     0x413aac
  413ac4:	jnp    0x413ada
  413ac6:	push   edi
  413ac7:	aad    0x5e
  413ac9:	loopne 0x413a95
  413acb:	push   ebx
  413acc:	mov    ebp,0x69c94141
  413ad1:	aas    
  413ad2:	xchg   esi,eax
  413ad3:	xor    ecx,DWORD PTR ds:0xc0b6d732
  413ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ada:	xchg   ebx,eax
  413adb:	mov    ecx,0xb008f457
  413ae0:	jnp    0x413aeb
  413ae2:	mov    ds:0x4dccf73c,al
  413ae7:	int3   
  413ae8:	inc    eax
  413ae9:	adc    edx,esi
  413aeb:	push   0x2c
  413aed:	and    BYTE PTR ds:0x83e15b42,dl
  413af3:	and    DWORD PTR [ecx],esi
  413af5:	sub    eax,0x21198642
  413afa:	or     ebp,ebx
  413afc:	fnstenv [edx-0x642ad421]
  413b02:	mov    ds:0x1ccafd,al
  413b07:	mov    bh,0xa7
  413b09:	cmp    al,0x4a
  413b0b:	jne    0x413b32
  413b0d:	jp     0x413aa7
  413b0f:	shl    DWORD PTR [ebx],cl
  413b11:	call   0x7d17a189
  413b16:	pusha  
  413b17:	and    DWORD PTR [esi+0x6f054cb3],edx
  413b1d:	sahf   
  413b1e:	(bad)  
  413b1f:	jl     0x413b42
  413b21:	retf   0x5373
  413b24:	push   edx
  413b25:	sub    al,0xb3
  413b27:	lock jmp 0x2898490d
  413b2d:	sar    BYTE PTR [ebp+0x5b246d74],1
  413b33:	loopne 0x413af0
  413b35:	ja     0x413b91
  413b37:	aam    0x5c
  413b39:	inc    ecx
  413b3a:	add    al,0xcb
  413b3c:	push   ebx
  413b3d:	(bad)  [ebx+0x668edbfe]
  413b43:	mov    ah,BYTE PTR [edx+0x1e]
  413b46:	jae    0x413b93
  413b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b49:	loope  0x413b24
  413b4b:	inc    ebp
  413b4c:	pop    esi
  413b4d:	movq   QWORD PTR [esi+0x1fdfe067],mm7
  413b54:	es in  eax,dx
  413b56:	pop    eax
  413b57:	add    bh,BYTE PTR [ecx]
  413b59:	stc    
  413b5a:	js     0x413b52
  413b5c:	(bad)  
  413b5d:	rol    BYTE PTR [edi],1
  413b5f:	(bad)  
  413b60:	mov    BYTE PTR [edx*2+0x3a2ff35f],ch
  413b67:	aam    0xa7
  413b69:	nop
  413b6a:	adc    DWORD PTR [ebx-0x2638a464],ebx
  413b70:	mov    al,0xcf
  413b72:	cmp    ecx,DWORD PTR [ecx]
  413b74:	test   BYTE PTR [edx],bl
  413b76:	test   al,0x8f
  413b78:	fadd   QWORD PTR fs:[ebp+edi*4+0x7c]
  413b7d:	cmp    al,0x98
  413b7f:	sbb    al,0x12
  413b81:	mov    fs,ebx
  413b83:	cdq    
  413b84:	sti    
  413b85:	xor    cl,bl
  413b87:	inc    esp
  413b88:	mov    ebx,0x46775a3e
  413b8d:	sub    eax,0x14e00c08
  413b92:	dec    BYTE PTR [edx+0x512d0e0e]
  413b98:	and    esi,ebx
  413b9a:	call   DWORD PTR [edi+0x12282702]
  413ba0:	push   edi
  413ba1:	xchg   ebx,eax
  413ba2:	inc    ecx
  413ba3:	das    
  413ba4:	pop    ebp
  413ba5:	jmp    0xa411:0xd9b43f00
  413bac:	out    0x4b,eax
  413bae:	loop   0x413bbb
  413bb0:	fst    QWORD PTR ss:[eax]
  413bb3:	rcl    DWORD PTR [ecx+0x4807f9d4],0x20
  413bba:	sbb    eax,DWORD PTR ds:0xce64f483
  413bc0:	dec    esp
  413bc1:	mov    dh,0xe
  413bc3:	jle    0x413bb4
  413bc5:	or     al,0x2d
  413bc7:	cmp    edx,DWORD PTR [ebp+edi*8-0x80]
  413bcb:	jnp    0x413beb
  413bcd:	cmp    DWORD PTR [ebx-0x29067c49],0xffffffb3
  413bd4:	out    0xb1,eax
  413bd6:	add    al,0xff
  413bd8:	xchg   BYTE PTR [ebx-0x34],ah
  413bdb:	sahf   
  413bdc:	ret    0x906
  413bdf:	(bad)  
  413be0:	cs in  al,0x54
  413be3:	xor    al,0xba
  413be5:	inc    ebp
  413be6:	push   gs
  413be8:	and    BYTE PTR [eax+ebp*4+0x60413ccf],al
  413bef:	push   edx
  413bf0:	ret    
  413bf1:	aaa    
  413bf2:	inc    edi
  413bf3:	not    al
  413bf5:	and    BYTE PTR [esi],ah
  413bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bf8:	not    ch
  413bfa:	mov    esi,0xbf6a39ad
  413bff:	gs mov bh,0xe8
  413c02:	push   esi
  413c03:	ja     0x413c26
  413c05:	je     0x413baf
  413c07:	cmp    DWORD PTR [ebp-0x641d6de9],esp
  413c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c0e:	gs add al,0x69
  413c11:	xchg   ecx,eax
  413c12:	js     0x413c72
  413c14:	push   ds
  413c15:	mov    ?,eax
  413c17:	pop    es
  413c18:	add    ch,ch
  413c1a:	cwde   
  413c1b:	mov    esi,0xd6d5d2ef
  413c20:	outs   dx,BYTE PTR ds:[esi]
  413c21:	push   ds
  413c22:	pop    eax
  413c23:	ja     0x413c12
  413c25:	repnz sub al,0x33
  413c28:	push   eax
  413c29:	int3   
  413c2a:	enter  0xa092,0xff
  413c2e:	sbb    edi,edi
  413c30:	xor    BYTE PTR [esi+0x7a],ah
  413c33:	cld    
  413c34:	(bad)  
  413c35:	fcomp  DWORD PTR [ecx+0x7d6775e6]
  413c3b:	pop    es
  413c3c:	test   DWORD PTR [ecx],edi
  413c3e:	mov    ecx,DWORD PTR [edx]
  413c40:	cdq    
  413c41:	(bad)  
  413c43:	push   ds
  413c44:	inc    edi
  413c45:	lods   al,BYTE PTR ds:[esi]
  413c46:	retf   0x2014
  413c49:	xchg   ebx,eax
  413c4a:	ret    
  413c4b:	shl    al,cl
  413c4d:	inc    eax
  413c4e:	call   0x19bce48a
  413c53:	inc    ebp
  413c54:	cmc    
  413c55:	pop    ds
  413c56:	cmp    eax,0x3bc80847
  413c5b:	call   0x2936:0x81f6b64f
  413c62:	rcr    DWORD PTR [ebx],0x8d
  413c65:	mov    ds:0x8113865c,eax
  413c6a:	dec    edx
  413c6b:	mov    al,ds:0xd8449658
  413c70:	scas   al,BYTE PTR es:[edi]
  413c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c72:	out    dx,al
  413c73:	sbb    edx,DWORD PTR [eax+esi*1-0x14]
  413c77:	dec    edx
  413c78:	pop    esi
  413c79:	mov    ebp,ebx
  413c7b:	stc    
  413c7c:	jle    0x413cb3
  413c7e:	enter  0x2ed2,0x4f
  413c82:	xlat   BYTE PTR ds:[ebx]
  413c83:	ds push ds
  413c85:	jl     0x413d02
  413c87:	add    DWORD PTR [eax-0x48e89bd8],0xffffff8c
  413c8e:	add    al,0x39
  413c90:	mov    edx,0xe0de196d
  413c95:	test   eax,0x2e5e905f
  413c9a:	stos   DWORD PTR es:[edi],eax
  413c9b:	mov    dl,0x40
  413c9d:	jle    0x413cdf
  413c9f:	add    eax,0x9065f32c
  413ca4:	(bad)  
  413ca5:	xchg   ebx,eax
  413ca6:	aas    
  413ca7:	or     DWORD PTR [edi],0xe31707b9
  413cad:	or     DWORD PTR [ebp-0x3cf93e23],esi
  413cb3:	mov    dl,0xf0
  413cb5:	mov    ch,0x50
  413cb7:	pop    esp
  413cb8:	and    BYTE PTR [eax],ah
  413cba:	mov    bh,bh
  413cbc:	cmp    ch,BYTE PTR [esi]
  413cbe:	fistp  DWORD PTR [eax-0x11a44a3d]
  413cc4:	or     eax,0xbc2a924
  413cc9:	lea    edx,[ebx+0x263bd462]
  413ccf:	test   ebx,0xf267223c
  413cd5:	push   ecx
  413cd6:	call   0xf542d1dc
  413cdb:	mov    bl,0xe6
  413cdd:	xor    ecx,DWORD PTR [eax-0x39]
  413ce0:	(bad)  
  413ce1:	adc    eax,0x3da03f1e
  413ce6:	push   ecx
  413ce7:	adc    edx,DWORD PTR [ebx+0x72]
  413cea:	or     BYTE PTR [esi-0x12a5e5cb],dl
  413cf0:	jno    0x413d6b
  413cf2:	cld    
  413cf3:	data16 ins BYTE PTR es:[edi],dx
  413cf5:	dec    ecx
  413cf6:	mov    ch,0x53
  413cf8:	ins    DWORD PTR es:[edi],dx
  413cf9:	shl    DWORD PTR [esi],1
  413cfb:	call   0xdbaea11
  413d00:	cmp    eax,0xe5016325
  413d05:	pop    es
  413d06:	leave  
  413d07:	shr    DWORD PTR [ebx+ebx*1+0x381d0bf2],cl
  413d0e:	fstp   TBYTE PTR [edi+0x58a9966e]
  413d14:	dec    edi
  413d15:	sbb    esi,0x63fc767b
  413d1b:	pop    ds
  413d1c:	test   BYTE PTR [ebp+0x19],cl
  413d1f:	sub    BYTE PTR [ecx-0x5981f156],0x86
  413d26:	enter  0x207d,0x80
  413d2a:	stos   DWORD PTR es:[edi],eax
  413d2b:	xor    al,0xee
  413d2d:	outs   dx,BYTE PTR ds:[esi]
  413d2e:	jge    0x413d1e
  413d30:	scas   al,BYTE PTR es:[edi]
  413d31:	lock mov eax,0x80f9ed1e
  413d37:	add    DWORD PTR [ebp-0x62ebd538],eax
  413d3d:	jbe    0x413cd0
  413d3f:	xchg   edx,eax
  413d40:	fcmovb st,st(2)
  413d42:	xchg   esi,eax
  413d43:	sbb    edx,ebp
  413d45:	fcmovnbe st,st(4)
  413d47:	fisubr WORD PTR [edx]
  413d49:	and    BYTE PTR [ebp-0x239689ce],ah
  413d4f:	adc    eax,0xb32ebd9a
  413d54:	mov    ebx,0xf2683ddf
  413d59:	or     ebp,DWORD PTR [esi+0x7d]
  413d5c:	fs scas al,BYTE PTR es:[edi]
  413d5e:	icebp  
  413d5f:	and    esp,DWORD PTR [ecx-0x1102a50c]
  413d65:	push   ss
  413d66:	mov    esi,0xdf12a580
  413d6b:	mov    gs,WORD PTR ds:0x49d3f3e7
  413d71:	(bad)  
  413d72:	pop    edx
  413d73:	jo     0x413d95
  413d75:	cmp    edx,ebx
  413d77:	pop    ebp
  413d78:	shr    DWORD PTR [ebp-0x5f],0x26
  413d7c:	sahf   
  413d7d:	and    bl,BYTE PTR [eax-0x4c]
  413d80:	cdq    
  413d81:	xchg   edx,eax
  413d82:	cmp    eax,0x25da67c7
  413d87:	add    al,0x6f
  413d89:	jne    0x413d93
  413d8b:	rcl    BYTE PTR [edx+0x5e],cl
  413d8e:	pop    ebx
  413d8f:	mov    edi,0x3d537367
  413d94:	cmp    ah,BYTE PTR [ecx-0x30]
  413d97:	rcl    edx,1
  413d99:	sar    BYTE PTR [esi],1
  413d9b:	xchg   DWORD PTR [ebp-0x1c73099],eax
  413da1:	jecxz  0x413de2
  413da3:	fstp   DWORD PTR [esp+eiz*8-0x1c]
  413da7:	into   
  413da8:	inc    ebx
  413da9:	dec    edx
  413daa:	mov    al,ds:0xbc0fbbcd
  413daf:	int3   
  413db0:	int    0x9b
  413db2:	cmp    al,0x5
  413db4:	dec    edx
  413db5:	jnp    0x413d4e
  413db7:	xor    al,0x91
  413dba:	push   ebp
  413dbb:	fs inc edi
  413dbd:	test   DWORD PTR [eax+eiz*8-0x5c],edi
  413dc1:	xlat   BYTE PTR ds:[ebx]
  413dc2:	jecxz  0x413db4
  413dc4:	push   ebx
  413dc5:	les    eax,FWORD PTR [ebx+0x3c]
  413dc8:	je     0x413dab
  413dca:	cwde   
  413dcb:	xor    BYTE PTR [edx],ah
  413dcd:	test   al,0x59
  413dcf:	sub    DWORD PTR [esi],ebx
  413dd1:	cmp    al,0x32
  413dd3:	mov    ds:0x8c1f57d7,eax
  413dd8:	out    dx,eax
  413dd9:	mov    ah,BYTE PTR [ebx+0xa]
  413ddc:	xor    ebx,edx
  413dde:	cmp    BYTE PTR [ebp+0x35],ah
  413de1:	retf   
  413de2:	sub    eax,0xd587ac8e
  413de7:	mov    esi,DWORD PTR [ebp+ebp*8+0x1b03d322]
  413dee:	sub    DWORD PTR [ebp+eiz*2-0x7a62a5a4],ebx
  413df5:	xchg   DWORD PTR [eax+0x2ec012ab],edx
  413dfb:	outs   dx,BYTE PTR ds:[esi]
  413dfc:	push   cs
  413dfd:	or     eax,0xffd443a8
  413e02:	stos   BYTE PTR es:[edi],al
  413e03:	jge    0x413dee
  413e05:	ror    al,1
  413e07:	sbb    eax,DWORD PTR [esi+0x58]
  413e0a:	loopne 0x413e10
  413e0c:	out    dx,al
  413e0d:	mov    DWORD PTR [ebx-0x4fd36876],eax
  413e13:	xchg   esi,eax
  413e14:	das    
  413e15:	xor    eax,0x686e918f
  413e1a:	aad    0x72
  413e1c:	jle    0x413dae
  413e1e:	shl    BYTE PTR [ecx],0x35
  413e21:	push   ss
  413e22:	mov    edx,0xa2930a48
  413e27:	lock cld 
  413e29:	xor    esi,DWORD PTR [eax-0x44]
  413e2c:	jl     0x413ea9
  413e2e:	adc    cl,BYTE PTR [esi]
  413e30:	call   0x1537:0x235e5ce9
  413e37:	aam    0x17
  413e39:	xchg   edx,eax
  413e3a:	in     eax,dx
  413e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e3c:	jp     0x413e95
  413e3e:	push   ecx
  413e3f:	ffreep st(2)
  413e41:	add    eax,0x8fc4e9ae
  413e46:	enter  0x1e7e,0xa1
  413e4a:	test   al,0x9f
  413e4c:	jmp    0x413e96
  413e4e:	rcl    BYTE PTR [esi],cl
  413e50:	out    0x9a,eax
  413e52:	xchg   DWORD PTR [ebp+0x10],edx
  413e55:	xchg   edx,eax
  413e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e57:	cmp    DWORD PTR [esi],ebp
  413e59:	sub    eax,0x426450d9
  413e5e:	dec    esp
  413e5f:	push   esi
  413e60:	sahf   
  413e61:	(bad)  
  413e62:	mov    ds:0x64f54a62,al
  413e67:	and    al,0x18
  413e69:	in     al,dx
  413e6a:	xor    esp,DWORD PTR [edi]
  413e6c:	adc    ebp,DWORD PTR [eax]
  413e6e:	cmp    bl,bh
  413e70:	add    BYTE PTR [edx+0x6f307b9c],dl
  413e76:	hlt    
  413e77:	call   0x6a08:0x4a08f105
  413e7e:	out    0xda,al
  413e80:	and    BYTE PTR [ecx+edi*2+0x7f],ah
  413e84:	idiv   BYTE PTR [edx+0x2c4fbf17]
  413e8a:	push   edi
  413e8b:	addr16 ja 0x413e2e
  413e8e:	or     DWORD PTR [edx],esp
  413e90:	dec    eax
  413e91:	push   0x25e6d9fa
  413e96:	aad    0x3
  413e98:	ror    DWORD PTR [ebx+0x64],0x42
  413e9c:	push   edi
  413e9d:	adc    bl,BYTE PTR [esi+0x690b0710]
  413ea3:	adc    eax,0xc4545180
  413ea8:	xchg   ecx,eax
  413ea9:	push   ebp
  413eaa:	hlt    
  413eab:	or     al,0xb9
  413ead:	or     ah,ch
  413eaf:	rcr    DWORD PTR fs:[edx+0x5f331e6f],cl
  413eb6:	fs sahf 
  413eb8:	or     DWORD PTR [eax+0x17],eax
  413ebb:	and    eax,0xcbc189f7
  413ec0:	lea    edi,[edx+ecx*2]
  413ec3:	xor    al,0xfe
  413ec5:	into   
  413ec6:	mov    bl,0x6e
  413ec8:	fdivr  st(4),st
  413eca:	into   
  413ecb:	(bad)  
  413ecc:	call   0x709113bf
  413ed1:	std    
  413ed2:	sbb    ecx,ebx
  413ed4:	rol    esi,cl
  413ed6:	push   ebp
  413ed7:	fiadd  WORD PTR [ebx]
  413ed9:	loopne 0x413edc
  413edb:	or     al,0xbc
  413edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ede:	mov    ds:0xa680fbec,eax
  413ee3:	test   esi,0xec558bad
  413ee9:	mov    DWORD PTR [ebp+0x8],edx
  413eec:	jmp    0x4162e7
  413ef1:	mov    edx,DWORD PTR [ebp+0x8]
  413ef4:	mov    ebx,DWORD PTR [ebp-0x8]
  413ef7:	xor    edx,eax
  413ef9:	xor    ebx,eax
  413efb:	sub    edx,ebx
  413efd:	sub    edx,esi
  413eff:	xor    edx,eax
  413f01:	mov    DWORD PTR [ebp+0x8],edx
  413f04:	mov    edx,DWORD PTR [ebp+0x8]
  413f07:	mov    ebx,DWORD PTR [ebp-0x58]
  413f0a:	add    edx,0x5708f8
  413f10:	imul   edx,ebx
  413f13:	jmp    0x416299
  413f18:	push   eax
  413f19:	pusha  
  413f1a:	clc    
  413f1b:	push   es
  413f1c:	call   0x5435b3a7
  413f21:	add    dh,bh
  413f23:	or     BYTE PTR ds:0xb5d9cb10,dl
  413f29:	jae    0x413fa5
  413f2b:	jp     0x413f2e
  413f2d:	pop    edi
  413f2e:	jp     0x413faa
  413f30:	sti    
  413f31:	cmp    al,0x7a
  413f33:	ror    ecx,0x45
  413f36:	shl    BYTE PTR [edi],1
  413f38:	mov    bl,0x18
  413f3a:	rcl    eax,cl
  413f3c:	jge    0x413f2b
  413f3e:	js     0x413f15
  413f40:	push   ecx
  413f41:	rcl    DWORD PTR [ebx+0x6682a08],0x1a
  413f48:	rol    DWORD PTR [ecx-0x173fddcb],cl
  413f4e:	push   ecx
  413f4f:	outs   dx,DWORD PTR ds:[esi]
  413f50:	rdtsc  
  413f52:	int    0xd4
  413f54:	cwde   
  413f55:	add    ah,dl
  413f57:	sub    al,0x7d
  413f59:	jecxz  0x413f5f
  413f5b:	mov    al,ds:0x5568a8cc
  413f60:	mov    ecx,0x7c084ab7
  413f65:	scas   al,BYTE PTR es:[edi]
  413f66:	fs xchg ebp,eax
  413f68:	inc    ebp
  413f69:	xor    DWORD PTR [edi+eiz*1-0x3e],esp
  413f6d:	add    al,0x84
  413f6f:	mov    ds:0x5b9713cc,eax
  413f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f75:	mov    al,0x34
  413f77:	pop    ebx
  413f78:	sub    BYTE PTR [edx-0x75],cl
  413f7b:	xchg   edx,eax
  413f7c:	sbb    BYTE PTR ds:0x622a0d11,0xd0
  413f83:	mov    ecx,0xa07336bd
  413f88:	mov    cs,ebx
  413f8a:	leave  
  413f8b:	js     0x413f63
  413f8d:	ror    BYTE PTR [ebx-0x366609be],cl
  413f93:	dec    edx
  413f94:	fbld   TBYTE PTR [eax]
  413f96:	push   ss
  413f97:	push   eax
  413f98:	and    esi,ebp
  413f9a:	ja     0x413f84
  413f9c:	add    al,ch
  413f9e:	jb     0x413f5d
  413fa0:	es sub ah,cl
  413fa3:	inc    ebp
  413fa4:	jmp    DWORD PTR ds:0x7e0cc665
  413faa:	cwde   
  413fab:	add    eax,0x66afbe72
  413fb0:	stc    
  413fb1:	mov    esi,0x22b1aa26
  413fb6:	in     al,0x9
  413fb8:	add    al,0x79
  413fba:	mov    ds:0x9d7bf78d,eax
  413fbf:	out    dx,eax
  413fc0:	data16 mov al,0x2
  413fc3:	inc    ecx
  413fc4:	fwait
  413fc5:	ja     0x413f75
  413fc7:	rol    BYTE PTR [esi],0xcd
  413fca:	sar    cl,1
  413fcc:	mov    bl,0xbd
  413fce:	xor    ch,ch
  413fd0:	test   eax,0x642d7455
  413fd5:	pop    edi
  413fd6:	fistp  QWORD PTR [edx+0x4403b1aa]
  413fdc:	push   ebx
  413fdd:	and    eax,DWORD PTR [esi]
  413fdf:	mov    esi,0x9c66546b
  413fe4:	or     eax,0x45bc957a
  413fe9:	call   0x88c1491c
  413fee:	or     ebp,ebp
  413ff0:	retf   0x2a72
  413ff3:	and    edi,DWORD PTR [edx-0xd]
  413ff6:	dec    edi
  413ff7:	and    DWORD PTR [edx+ebp*8+0x346c95a9],ebx
  413ffe:	sbb    DWORD PTR [eax+0x3bbddf40],edi
  414004:	sbb    esi,ebp
  414006:	sbb    eax,0x34201cec
  41400b:	out    0xac,eax
  41400d:	es loop 0x41403b
  414010:	outs   dx,DWORD PTR ds:[esi]
  414011:	adc    al,0x1
  414013:	xor    al,0x5e
  414015:	push   eax
  414016:	arpl   WORD PTR [eax-0x80],dx
  414019:	sbb    edi,ebp
  41401b:	cmp    BYTE PTR [ebp+0x78],cl
  41401e:	call   0xd79fb5f0
  414023:	fchs   
  414025:	imul   ebp,DWORD PTR [ecx-0x3c],0x7c
  414029:	sbb    al,0x4f
  41402b:	std    
  41402c:	addr16 dec esi
  41402e:	mov    ds:0x3a65da00,eax
  414033:	les    ecx,FWORD PTR [edx-0x269833d5]
  414039:	test   al,0xfc
  41403b:	or     ebx,eax
  41403d:	adc    BYTE PTR [eax+0x5c279eb5],0x1f
  414044:	mov    eax,0x2379fd5c
  414049:	pop    esi
  41404a:	mov    ds:0x18ed7d94,eax
  41404f:	push   DWORD PTR [edi+0x52]
  414052:	call   0x87b0:0x5d672bb5
  414059:	pop    esp
  41405a:	add    BYTE PTR [ecx+ebx*8],bl
  41405d:	add    ah,BYTE PTR [ebx+ebx*8-0x27]
  414061:	or     cl,ch
  414063:	push   eax
  414064:	sar    DWORD PTR [edx],1
  414066:	ficom  DWORD PTR [edi*4-0x75ed2ddd]
  41406d:	push   esp
  41406e:	sbb    BYTE PTR [edx-0x3513724],cl
  414074:	sbb    eax,0x21261871
  414079:	or     al,0xf5
  41407b:	mov    esi,0xbd8932b3
  414080:	push   DWORD PTR ds:0xc8cbd32b
  414086:	adc    DWORD PTR ds:0x14fa3f5f,0x3
  41408d:	lea    edx,[ebx+ebp*8-0x29]
  414091:	sar    DWORD PTR [ecx-0x75],1
  414094:	pop    ds
  414095:	cs ja  0x41410d
  414098:	leave  
  414099:	or     ecx,edi
  41409b:	or     al,BYTE PTR [ecx+0x53]
  41409e:	inc    ecx
  41409f:	fidiv  DWORD PTR [esi+0x5683b320]
  4140a5:	adc    DWORD PTR [esi+0x22],ebx
  4140a8:	xor    dl,bl
  4140aa:	sub    BYTE PTR [ebx],al
  4140ac:	ins    BYTE PTR es:[edi],dx
  4140ad:	ins    BYTE PTR es:[edi],dx
  4140ae:	in     al,dx
  4140af:	push   0x52
  4140b1:	jo     0x414112
  4140b3:	mov    DWORD PTR [edi+ebp*4+0x733b75bb],edx
  4140ba:	inc    ecx
  4140bb:	push   0x1e78268e
  4140c0:	iret   
  4140c1:	or     ebx,DWORD PTR [edi+eiz*4+0x1b]
  4140c5:	clc    
  4140c6:	(bad)  
  4140c8:	sbb    BYTE PTR [edi-0x3],0xf8
  4140cc:	sub    esp,DWORD PTR [ecx-0x38]
  4140cf:	in     eax,dx
  4140d0:	scas   eax,DWORD PTR es:[edi]
  4140d1:	cmp    al,0x6
  4140d3:	cmovl  edi,DWORD PTR [ebx-0x4e]
  4140d7:	dec    edx
  4140d8:	jge    0x41411c
  4140da:	das    
  4140db:	lahf   
  4140dc:	fcom   QWORD PTR [edi-0x29]
  4140df:	mov    esi,0x3c45d75c
  4140e4:	mov    ch,0xac
  4140e6:	cwde   
  4140e7:	ins    DWORD PTR es:[edi],dx
  4140e8:	dec    ebx
  4140e9:	pop    edx
  4140ea:	and    BYTE PTR [edi],dl
  4140ec:	mov    eax,0xb0698e59
  4140f1:	outs   dx,BYTE PTR ds:[esi]
  4140f2:	sub    al,BYTE PTR [eax]
  4140f4:	push   cs
  4140f5:	dec    esi
  4140f6:	scas   eax,DWORD PTR es:[edi]
  4140f7:	lock or DWORD PTR [edi+edx*4],edx
  4140fb:	mov    ebx,0x57b3557b
  414100:	dec    edi
  414101:	inc    ebp
  414102:	shl    BYTE PTR [eax+0x5e8baa54],cl
  414108:	clc    
  414109:	cmp    DWORD PTR [esi-0x1a],edx
  41410c:	adc    DWORD PTR [eax+0x5],eax
  41410f:	js     0x41414f
  414111:	add    BYTE PTR [ebp+0x4f],bl
  414114:	push   edx
  414115:	mov    al,0x98
  414117:	sub    BYTE PTR [ebp-0x3],bl
  41411a:	dec    ebp
  41411b:	imul   esp,ebp,0x52
  41411e:	push   esi
  41411f:	je     0x414110
  414121:	or     eax,0xc1b2f516
  414126:	cmp    BYTE PTR [esi+0x1535e240],dh
  41412c:	dec    edi
  41412d:	(bad)  
  41412e:	ss clc 
  414130:	in     al,0x2a
  414132:	out    0xf1,eax
  414134:	xchg   edx,eax
  414135:	mov    ecx,DWORD PTR [eax]
  414137:	mov    dh,0xd0
  414139:	push   eax
  41413a:	jnp    0x4140f2
  41413c:	mov    ss,WORD PTR [edx]
  41413e:	xchg   esi,eax
  41413f:	cmp    BYTE PTR [esi],0x64
  414142:	data16 or al,0x27
  414145:	(bad)  
  414146:	fdiv   QWORD PTR [esp+eiz*8-0x467499b5]
  41414d:	pop    ecx
  41414e:	iret   
  41414f:	sub    eax,0x3970882e
  414154:	add    al,0x43
  414156:	mov    al,0x61
  414158:	fsubr  QWORD PTR [edx+eax*1]
  41415b:	and    eax,0x1e0e954
  414160:	int3   
  414161:	daa    
  414162:	inc    eax
  414163:	jno    0x414188
  414165:	cdq    
  414166:	loop   0x414171
  414168:	in     eax,0x4e
  41416a:	arpl   WORD PTR [eax],si
  41416c:	xor    al,0xc8
  41416e:	xor    cl,0x5f
  414171:	jae    0x414180
  414173:	fldcw  WORD PTR [esi+0x17e72f89]
  414179:	push   ss
  41417a:	sbb    ch,ch
  41417c:	jg     0x414126
  41417e:	ds push eax
  414180:	jg     0x41417b
  414182:	mul    cl
  414184:	cmp    BYTE PTR [eax-0xc],dl
  414187:	shr    DWORD PTR [edx],cl
  414189:	push   ebx
  41418a:	cs push edi
  41418c:	sbb    DWORD PTR [eax-0x35b932d4],esp
  414192:	popa   
  414193:	dec    BYTE PTR [esp+eiz*8-0x43ecacae]
  41419a:	jbe    0x41418f
  41419c:	cmp    al,0xe
  41419e:	mov    es,esi
  4141a0:	int    0x8e
  4141a2:	retf   0xa84b
  4141a5:	test   DWORD PTR [eax+0x29f724dc],0xd6f5fb6
  4141af:	sub    DWORD PTR [esi+ebx*4],0xcf18e1dd
  4141b6:	fcom   QWORD PTR [edx+ebp*2+0x6a]
  4141ba:	out    0x47,eax
  4141bc:	int3   
  4141bd:	fwait
  4141be:	mov    eax,ds:0xad3cd6b6
  4141c3:	nop
  4141c4:	jb     0x41416a
  4141c6:	sbb    al,0x8d
  4141c8:	add    BYTE PTR [ebx-0x53],al
  4141cb:	dec    edi
  4141cc:	add    BYTE PTR [ebx-0x30],bh
  4141cf:	repnz adc eax,DWORD PTR [edi+0x7aa1005c]
  4141d6:	cdq    
  4141d7:	jo     0x4141d1
  4141d9:	outs   dx,BYTE PTR ds:[esi]
  4141da:	sub    edi,DWORD PTR [ecx+ecx*4]
  4141dd:	les    ebp,FWORD PTR [edx-0x75]
  4141e0:	cs int 0x1
  4141e3:	inc    esi
  4141e4:	rcr    BYTE PTR ds:0x9cb8e6b9,0xd4
  4141eb:	jp     0x414242
  4141ed:	popf   
  4141ee:	pop    ecx
  4141ef:	dec    eax
  4141f0:	cmp    al,0x9e
  4141f2:	ds popa 
  4141f4:	nop
  4141f5:	stos   DWORD PTR es:[edi],eax
  4141f6:	xor    BYTE PTR [esp+eiz*4],ah
  4141f9:	and    eax,0x86d18fe8
  4141fe:	in     eax,dx
  4141ff:	jmp    0xe6da:0x5328b87d
  414206:	mov    al,0xed
  414208:	jb     0x4141b9
  41420a:	jne    0x4141a9
  41420c:	and    DWORD PTR [ecx],esp
  41420e:	rol    DWORD PTR [edx-0x2a],cl
  414211:	fistp  QWORD PTR [edx]
  414213:	rcr    eax,0x19
  414216:	xor    ebx,DWORD PTR [edx+0x12]
  414219:	and    DWORD PTR [edx-0x29],ebx
  41421c:	lea    ebx,[ebp-0x2c3eace4]
  414222:	or     ch,ch
  414224:	sbb    DWORD PTR [ecx+0x2],0x5e33e05e
  41422b:	aam    0xef
  41422d:	repz shl ebp,cl
  414230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414231:	push   ds
  414232:	inc    edx
  414233:	loopne 0x4141f0
  414235:	lea    ebx,[eax+0x2d098a5b]
  41423b:	and    al,0x44
  41423d:	div    bl
  41423f:	and    BYTE PTR [edi+0x2eb9d4a4],al
  414245:	adc    eax,0x7e15cc20
  41424a:	mov    ds:0x448203cd,al
  41424f:	inc    edx
  414250:	push   0x2ea5a598
  414255:	loopne 0x4142ab
  414257:	xor    DWORD PTR [edi],eax
  414259:	xlat   BYTE PTR ds:[ebx]
  41425a:	jno    0x41428e
  41425c:	jb     0x41422a
  41425e:	sbb    ecx,DWORD PTR [edi-0x6ec4ce34]
  414264:	sub    al,ch
  414266:	stc    
  414267:	jne    0x41429e
  414269:	mov    gs,WORD PTR [ebx+0x21cac74f]
  41426f:	jo     0x414260
  414271:	xlat   BYTE PTR ds:[ebx]
  414272:	sar    BYTE PTR [edi],1
  414274:	es int3 
  414276:	push   es
  414277:	mov    ch,0x5c
  414279:	lods   al,BYTE PTR ds:[esi]
  41427a:	pushf  
  41427b:	mov    dl,al
  41427d:	inc    ebx
  41427e:	add    bl,BYTE PTR [ebx+edx*1]
  414281:	sbb    al,0x71
  414283:	idiv   BYTE PTR [ebp-0xf66651d]
  414289:	in     al,dx
  41428a:	jmp    0x85a8:0x874476e
  414291:	fs imul ebx,edx,0xffffffd2
  414295:	(bad)  [ebp-0x8]
  414298:	daa    
  414299:	(bad)  
  41429a:	pop    esp
  41429b:	jne    0x4142d9
  41429d:	mov    dl,0x23
  41429f:	push   ebp
  4142a0:	call   0x394ce1db
  4142a5:	push   es
  4142a6:	(bad)  
  4142a8:	sti    
  4142a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142aa:	sub    al,0x82
  4142ac:	test   dl,ch
  4142ae:	fs mov ch,0x4d
  4142b1:	xor    ebx,ebp
  4142b3:	pop    esp
  4142b4:	push   ecx
  4142b5:	fs inc esi
  4142b7:	cli    
  4142b8:	inc    ecx
  4142b9:	jecxz  0x414253
  4142bb:	xchg   DWORD PTR [ebx+0x7fef598a],eax
  4142c1:	or     al,BYTE PTR [eax]
  4142c3:	mov    esi,0x420b6b4f
  4142c8:	inc    ebp
  4142c9:	or     bh,ch
  4142cb:	in     eax,dx
  4142cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142cd:	lahf   
  4142ce:	(bad)  
  4142cf:	jecxz  0x414253
  4142d1:	out    0xf7,eax
  4142d3:	push   fs
  4142d5:	jae    0x4142c2
  4142d7:	xor    bh,BYTE PTR [ecx-0x57a5b85f]
  4142dd:	inc    esi
  4142de:	repnz push ecx
  4142e0:	icebp  
  4142e1:	(bad)  
  4142e2:	adc    ebx,DWORD PTR [esi]
  4142e4:	aam    0x80
  4142e6:	pminsw mm3,QWORD PTR ds:0x641ac336
  4142ed:	je     0x414285
  4142ef:	push   0xed524158
  4142f4:	scas   al,BYTE PTR es:[edi]
  4142f5:	data16 or ah,BYTE PTR [eax-0x45]
  4142f9:	fld    QWORD PTR [esi-0x22f55ce8]
  4142ff:	xor    ebp,0x6c
  414302:	sbb    ebx,DWORD PTR [eax]
  414304:	xchg   ebx,eax
  414305:	hlt    
  414306:	je     0x4142b4
  414308:	mov    edi,0x39b2cdfd
  41430d:	or     eax,0x3e74b125
  414312:	(bad)  
  414313:	mov    ebx,0xd2802503
  414318:	stos   DWORD PTR es:[edi],eax
  414319:	test   eax,0xe704e5d8
  41431e:	sar    BYTE PTR [ecx+0x39],1
  414321:	or     edi,esi
  414323:	inc    edx
  414324:	push   esp
  414325:	jl     0x41436b
  414327:	or     eax,0x6702d4ed
  41432c:	push   esi
  41432d:	jbe    0x414349
  41432f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414330:	jns    0x414300
  414332:	dec    esi
  414333:	test   eax,0x3ff5525a
  414338:	mov    eax,ds:0x46d0bdca
  41433d:	xchg   ebp,eax
  41433e:	rcl    DWORD PTR ds:0x2c1807dc,cl
  414344:	xor    al,BYTE PTR [ebx]
  414346:	mov    ch,0xc6
  414348:	sub    DWORD PTR [bx+si-0x38],esp
  41434c:	mov    edx,0x5ef7504b
  414351:	aad    0x1a
  414353:	push   es
  414354:	sar    DWORD PTR [edx+edx*2-0x74835622],cl
  41435b:	add    edi,DWORD PTR [eax+0xe5b0875]
  414361:	pusha  
  414362:	pop    edi
  414363:	xor    ebx,esi
  414365:	inc    ebx
  414366:	xchg   ecx,eax
  414367:	inc    eax
  414368:	addr16 push es
  41436a:	(bad)  
  41436b:	fisttp DWORD PTR [esi+0x6d]
  41436e:	adc    ecx,DWORD PTR [edi-0x35]
  414371:	pop    ebx
  414372:	mov    ds:0xa26c90a9,al
  414377:	out    dx,eax
  414378:	lahf   
  414379:	mov    BYTE PTR [eax-0x12],bl
  41437c:	push   ds
  41437d:	pop    eax
  41437e:	adc    ah,BYTE PTR [esp+ebx*8-0x55c4b5ad]
  414385:	dec    ebp
  414386:	sbb    BYTE PTR ss:[esi-0x123f367c],0xe2
  41438e:	mov    esp,0xdbc983a0
  414393:	outs   dx,BYTE PTR ds:[esi]
  414394:	call   0xf360455
  414399:	stos   DWORD PTR es:[edi],eax
  41439a:	mov    ah,0xcc
  41439c:	inc    ebp
  41439d:	add    BYTE PTR [edi+0x23],ah
  4143a0:	xchg   ebp,eax
  4143a1:	es pushf 
  4143a3:	test   DWORD PTR [ecx-0x66c27ccf],0xa8c156f7
  4143ad:	sbb    eax,0x36c98a25
  4143b2:	push   cs
  4143b3:	stc    
  4143b4:	cmp    DWORD PTR [ebp-0x32],ecx
  4143b7:	aas    
  4143b8:	cmp    al,BYTE PTR [bx-0x6772]
  4143bd:	inc    ecx
  4143be:	jb     0x4143e8
  4143c0:	not    DWORD PTR [esi+edx*4+0x63]
  4143c4:	jno    0x414445
  4143c6:	mov    ch,0xee
  4143c8:	xchg   edi,eax
  4143c9:	cmp    DWORD PTR [eax+0x77],edx
  4143cc:	push   esi
  4143cd:	test   DWORD PTR [ecx-0x3e0ca7a6],ecx
  4143d3:	sbb    eax,0x4b373d85
  4143d8:	and    eax,0x618aebc
  4143dd:	mov    bl,0xab
  4143df:	or     cl,BYTE PTR [edi-0x18]
  4143e2:	retf   0x4980
  4143e5:	pop    edx
  4143e6:	cdq    
  4143e7:	iret   
  4143e8:	dec    DWORD PTR [ebx]
  4143ea:	fs push eax
  4143ec:	rcr    DWORD PTR [ecx],cl
  4143ee:	cmp    ebp,ebp
  4143f0:	add    BYTE PTR [ebx-0x60],bl
  4143f3:	mov    cl,0x87
  4143f5:	pop    esi
  4143f6:	pop    edi
  4143f7:	ins    DWORD PTR es:[edi],dx
  4143f8:	out    0x57,eax
  4143fa:	dec    ebx
  4143fb:	dec    esp
  4143fc:	push   ebp
  4143fd:	pop    es
  4143fe:	aad    0x4e
  414400:	clc    
  414401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414402:	jo     0x4143b7
  414404:	(bad)
  414407:	shl    DWORD PTR ss:[ebx-0x6a],cl
  41440b:	test   eax,0xddaa16e3
  414410:	pop    DWORD PTR [edi-0x26]
  414413:	cmp    BYTE PTR [edx-0x11],ah
  414416:	lds    esi,FWORD PTR [edx]
  414418:	cmc    
  414419:	mov    ds:0x28b499f1,eax
  41441e:	shl    dl,0x85
  414421:	lock shl DWORD PTR [edi-0x7fde940],1
  414428:	jno    0x414455
  41442a:	shl    DWORD PTR [edx+0x5de3e876],0x35
  414431:	adc    cl,BYTE PTR [esi+0xa]
  414434:	lods   eax,DWORD PTR ds:[esi]
  414435:	jmp    0x4144b4
  414437:	mov    dl,ah
  414439:	pop    ss
  41443a:	(bad)  
  41443b:	fcmovb st,st(1)
  41443d:	xchg   edi,eax
  41443e:	inc    ecx
  41443f:	je     0x414477
  414441:	jl     0x4143e5
  414443:	(bad)  
  414444:	pminub mm2,QWORD PTR [edx]
  414447:	arpl   WORD PTR ds:0x245c4c7a,bx
  41444d:	and    edi,ebp
  41444f:	lock cli 
  414451:	lds    ebx,FWORD PTR ds:0xccb392ad
  414457:	into   
  414458:	mov    ebp,0x18c937c5
  41445d:	(bad)  
  41445e:	mov    eax,0x93a1d5de
  414463:	and    eax,0x1547c63f
  414468:	cmp    al,0x2d
  41446a:	mov    esi,0x5b51d978
  41446f:	outs   dx,BYTE PTR ds:[esi]
  414470:	xchg   ebp,eax
  414471:	outs   dx,BYTE PTR ss:[esi]
  414473:	mov    ecx,0x6f9fac11
  414478:	mov    ebx,0x615f4e6a
  41447d:	loopne 0x4144ce
  41447f:	sti    
  414480:	push   ds
  414481:	xchg   edi,eax
  414482:	sub    DWORD PTR [ebx+0x65],esp
  414485:	lods   al,BYTE PTR ds:[esi]
  414486:	sub    ah,BYTE PTR [edi-0x7eda37cb]
  41448c:	in     eax,0xd5
  41448e:	and    al,0x5b
  414490:	dec    esi
  414491:	mov    ch,0x94
  414493:	mov    DWORD PTR [eax],ebp
  414495:	xlat   BYTE PTR ds:[ebx]
  414496:	add    eax,0x436e6e3b
  41449b:	stc    
  41449c:	pop    ss
  41449d:	jnp    0x414462
  41449f:	ja     0x4144b8
  4144a1:	adc    al,0x7d
  4144a3:	or     BYTE PTR [ecx-0x14],bl
  4144a6:	inc    edx
  4144a7:	xor    eax,0xe652b059
  4144ac:	stc    
  4144ad:	aaa    
  4144ae:	nop
  4144af:	mov    al,ds:0xe87cc581
  4144b4:	xor    bh,cl
  4144b6:	cmc    
  4144b7:	inc    esi
  4144b8:	inc    eax
  4144b9:	(bad)  
  4144ba:	mov    al,ds:0xc865bfec
  4144bf:	cmp    ebp,DWORD PTR [esi-0x78]
  4144c2:	xchg   DWORD PTR [esi-0xbb6e654],eax
  4144c8:	adc    eax,0x91022304
  4144cd:	xchg   ebx,eax
  4144ce:	pop    edx
  4144cf:	lahf   
  4144d0:	pop    ax
  4144d2:	mov    eax,ds:0x4c2c20fc
  4144d7:	xlat   BYTE PTR ds:[ebx]
  4144d8:	cmp    bl,BYTE PTR ds:0xc2a0cef4
  4144de:	inc    eax
  4144df:	dec    esp
  4144e0:	sub    al,BYTE PTR ds:0x7bdfd957
  4144e6:	push   eax
  4144e7:	lods   al,BYTE PTR ds:[esi]
  4144e8:	xchg   ecx,eax
  4144e9:	outs   dx,BYTE PTR ds:[esi]
  4144ea:	ds push ebx
  4144ec:	lods   eax,DWORD PTR ds:[esi]
  4144ed:	shl    BYTE PTR [esp+ecx*8-0x1775b23a],cl
  4144f4:	ins    DWORD PTR es:[edi],dx
  4144f5:	push   edi
  4144f6:	add    cl,BYTE PTR [eax]
  4144f8:	cld    
  4144f9:	pop    ss
  4144fa:	(bad)  
  4144fb:	cmp    DWORD PTR [esi+0xb7096a5],edx
  414501:	stos   BYTE PTR es:[edi],al
  414502:	inc    eax
  414503:	popa   
  414504:	mov    al,0x88
  414506:	pop    ebp
  414507:	into   
  414508:	(bad)  
  414509:	mov    al,0x1
  41450b:	xor    BYTE PTR [edi+0x63],dl
  41450e:	mov    BYTE PTR ds:0xa584473b,ah
  414514:	aad    0x30
  414516:	xchg   ecx,eax
  414517:	cs jmp 0x77d1:0xb996cb43
  41451f:	shr    BYTE PTR [ebx-0x6b],0x6
  414523:	xchg   ecx,eax
  414524:	sub    dh,BYTE PTR [esi+0x15474e9d]
  41452a:	sub    ecx,0xffffffc2
  41452d:	pushf  
  41452e:	fst    QWORD PTR [edx+edi*4+0x32]
  414532:	retf   0x236d
  414535:	xor    al,0x32
  414537:	int3   
  414538:	ss idiv bl
  41453b:	fst    QWORD PTR [esi-0x39b3d775]
  414541:	imul   edi,DWORD PTR [ecx],0xffffffb9
  414544:	repnz push 0x15aae09a
  41454a:	aaa    
  41454b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41454c:	mov    ah,0x39
  41454e:	sahf   
  41454f:	adc    ebp,DWORD PTR [eax+0x6a5a3f6a]
  414555:	push   ecx
  414556:	mov    bl,0xd2
  414558:	mov    ebp,DWORD PTR [edx+ebp*1-0x73a8035e]
  41455f:	jg     0x414551
  414561:	(bad)  
  414562:	js     0x414561
  414564:	sbb    DWORD PTR [ecx-0x3b],esi
  414567:	add    DWORD PTR [edi+0x53],eax
  41456a:	add    al,0x82
  41456c:	jge    0x41451e
  41456e:	hlt    
  41456f:	adc    DWORD PTR [edx],eax
  414571:	es dec edx
  414573:	pop    edx
  414574:	sub    BYTE PTR [ecx-0x668d7d2c],cl
  41457a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41457b:	push   0xffffff8f
  41457d:	popa   
  41457e:	sbb    edx,esi
  414580:	and    DWORD PTR [esi-0x4f3d5f1c],0xc90e1fb9
  41458a:	inc    edx
  41458b:	test   al,0xb5
  41458d:	dec    ebx
  41458e:	mov    dh,0x35
  414590:	inc    edx
  414591:	leave  
  414592:	(bad)  
  414593:	aam    0x13
  414595:	xchg   edx,eax
  414596:	mov    ecx,0xc2ad968c
  41459b:	cmp    al,0xe1
  41459d:	cmp    bl,BYTE PTR [ebx-0x37186bfa]
  4145a3:	into   
  4145a4:	fcmovbe st,st(5)
  4145a6:	loope  0x4145d6
  4145a8:	push   edx
  4145a9:	xor    BYTE PTR [esi+0x75],ah
  4145ac:	fs mov ch,0xf8
  4145af:	mov    dh,0x91
  4145b1:	jnp    0x41461c
  4145b3:	sub    al,0x2d
  4145b5:	inc    ebp
  4145b6:	or     BYTE PTR ds:0x5ad4a40a,al
  4145bc:	jmp    ebp
  4145be:	push   ebx
  4145bf:	ss iret 
  4145c1:	enter  0x2d68,0x77
  4145c5:	or     eax,0xd6ab122a
  4145ca:	jl     0x41458e
  4145cc:	cmp    eax,0xe235e650
  4145d1:	(bad)  
  4145d2:	jo     0x41459c
  4145d4:	cwde   
  4145d5:	retf   
  4145d6:	stos   BYTE PTR es:[edi],al
  4145d7:	dec    edx
  4145d8:	mov    ds:0xb9d45f53,al
  4145dd:	jae    0x414582
  4145df:	push   es
  4145e0:	xlat   BYTE PTR ds:[ebx]
  4145e1:	fisub  DWORD PTR [edi]
  4145e3:	sbb    BYTE PTR [ebp-0x72],dh
  4145e6:	int3   
  4145e7:	mov    al,ds:0x308a7ad3
  4145ec:	out    0xcf,eax
  4145ee:	mov    dl,0x81
  4145f0:	mov    esp,0xd500a1b4
  4145f5:	jecxz  0x414629
  4145f7:	xchg   ebx,eax
  4145f8:	sbb    esp,DWORD PTR [ecx-0x6e1f7ed1]
  4145fe:	xchg   ecx,eax
  4145ff:	pop    ecx
  414600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414601:	sbb    DWORD PTR [edi],0xfffffff9
  414604:	add    ebx,DWORD PTR [esi]
  414606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414607:	fist   DWORD PTR [edx+0x156bfa29]
  41460d:	daa    
  41460e:	jmp    FWORD PTR [esp+edi*2-0x8473fba]
  414615:	push   ebx
  414616:	call   DWORD PTR [edx-0x1e]
  414619:	or     al,0x9c
  41461b:	jno    0x4145a8
  41461d:	lods   eax,DWORD PTR ds:[esi]
  41461e:	imul   edi,DWORD PTR [edi],0xffffffd7
  414621:	test   eax,0x1c419087
  414626:	cmp    eax,0x4f7030b4
  41462b:	xchg   ebp,eax
  41462c:	int3   
  41462d:	rcl    BYTE PTR [eax+0x65],cl
  414630:	and    BYTE PTR [ecx-0x3d],bl
  414633:	not    DWORD PTR [ebx+0x7a997510]
  414639:	jo     0x41462c
  41463b:	lea    edi,[eax-0x462f8763]
  414641:	enter  0xfe08,0x2a
  414645:	sbb    ecx,ebp
  414647:	cmp    al,0x16
  414649:	adc    DWORD PTR [esi],esi
  41464b:	dec    edx
  41464c:	xchg   DWORD PTR [ecx-0x75],edi
  41464f:	adc    eax,DWORD PTR [ebx+0x759c7324]
  414655:	mov    al,ds:0x63460e45
  41465a:	(bad)  
  41465b:	retf   
  41465c:	loopne 0x414627
  41465e:	mov    bh,0x9a
  414660:	or     al,0x51
  414662:	call   0x9a39:0x8572d269
  414669:	mov    al,0xa1
  41466b:	push   ecx
  41466c:	add    al,0x3
  41466e:	(bad)  
  41466f:	cmp    DWORD PTR [eax],ebx
  414671:	fisttp WORD PTR [esi+0x19]
  414674:	mov    edi,0x9430818c
  414679:	fwait
  41467a:	add    ecx,DWORD PTR [ecx+0x24]
  41467d:	lea    esi,[edx]
  41467f:	mov    WORD PTR [esi+0x57],es
  414682:	add    al,0x7c
  414684:	in     eax,dx
  414685:	xor    al,bl
  414687:	fwait
  414688:	sbb    eax,0xa9637512
  41468d:	xchg   BYTE PTR [ecx],bh
  41468f:	inc    ebp
  414690:	outs   dx,BYTE PTR ds:[esi]
  414691:	jp     0x41464f
  414693:	adc    bh,BYTE PTR [eax+0x59]
  414696:	cmp    ebx,DWORD PTR [ecx-0x1f1986ac]
  41469c:	mov    dh,0xc
  41469e:	sbb    BYTE PTR ds:0x267c51a9,ch
  4146a4:	xchg   ecx,eax
  4146a5:	mov    edx,0x62f9f821
  4146aa:	pop    ebp
  4146ab:	mov    eax,0x9b1a543b
  4146b0:	(bad)  
  4146b1:	rcr    BYTE PTR [esi],cl
  4146b3:	enter  0xd830,0xbc
  4146b7:	adc    dh,BYTE PTR [eax+0x16]
  4146ba:	inc    edi
  4146bb:	ret    0xe44e
  4146be:	out    0x7e,al
  4146c0:	sub    ebx,0x2e26ae7f
  4146c6:	xor    al,0x62
  4146c8:	rep stos BYTE PTR es:[edi],al
  4146ca:	in     al,dx
  4146cb:	jne    0x4146c7
  4146cd:	mov    edi,0x98f954e7
  4146d2:	fcmovnu st,st(7)
  4146d4:	push   edi
  4146d5:	adc    BYTE PTR [esp+edx*4+0x335bdce7],dh
  4146dc:	push   edi
  4146dd:	bound  esi,QWORD PTR [ecx]
  4146df:	sbb    ecx,eax
  4146e1:	inc    ebp
  4146e2:	or     al,0x58
  4146e4:	popf   
  4146e5:	lods   al,BYTE PTR ds:[esi]
  4146e6:	jmp    0xfcd6:0xa68eaad0
  4146ed:	test   bx,0x2ff3
  4146f2:	mov    ds,WORD PTR [edx-0x75992b62]
  4146f8:	push   ds
  4146f9:	add    eax,0xecc326a4
  4146fe:	mov    dh,0xf
  414700:	mov    al,ds:0x80030111
  414705:	add    al,0x4a
  414707:	dec    edx
  414708:	das    
  414709:	mov    ebp,0xd9f61501
  41470e:	sub    dh,BYTE PTR [eax-0x8]
  414711:	dec    ecx
  414712:	jle    0x4146f8
  414714:	popa   
  414715:	es xor eax,0x24c64b8a
  41471b:	(bad)  
  41471d:	mov    dh,0x4
  41471f:	cwde   
  414720:	xor    eax,0xaaec3d4e
  414725:	nop
  414726:	outs   dx,DWORD PTR ds:[esi]
  414727:	imul   eax,DWORD PTR [ebx-0x202d4514],0x91fd69af
  414731:	xchg   edi,eax
  414732:	and    eax,esi
  414734:	jl     0x414761
  414736:	fcomp  DWORD PTR [esi+0x1a]
  414739:	dec    eax
  41473a:	add    ebx,DWORD PTR ds:0x67e0b1a2
  414740:	sbb    BYTE PTR [edx],bl
  414742:	fiadd  WORD PTR [edi]
  414744:	arpl   WORD PTR [eax-0x10a45033],bx
  41474a:	fstp   DWORD PTR [ebx-0x2f]
  41474d:	xchg   ebx,eax
  41474e:	pusha  
  41474f:	push   edi
  414750:	dec    eax
  414751:	add    BYTE PTR [esi-0x52f35f87],bh
  414757:	scas   al,BYTE PTR es:[edi]
  414758:	dec    ecx
  414759:	mov    bl,0x5d
  41475b:	ficom  DWORD PTR [edi+0x6dffce5a]
  414761:	pop    ecx
  414762:	cvtps2pi mm2,xmm2
  414765:	cwde   
  414766:	shl    DWORD PTR [edx-0x7912e4fd],cl
  41476c:	je     0x41474c
  41476e:	ret    0xa8b9
  414771:	(bad)  
  414772:	cwde   
  414773:	loop   0x4147c8
  414775:	mov    ds,WORD PTR [esi-0x51]
  414778:	add    eax,0xdbdbfd9b
  41477d:	adc    ecx,DWORD PTR [ebx+eax*1]
  414780:	pop    ebx
  414781:	xchg   DWORD PTR [eax],esi
  414783:	adc    eax,0x282f8bba
  414788:	jns    0x414731
  41478a:	ins    DWORD PTR es:[edi],dx
  41478b:	into   
  41478c:	vpaddusb xmm7,xmm3,XMMWORD PTR [edx-0x2d752601]
  414794:	mov    edx,0x9955d96e
  414799:	test   eax,0x6ad88a2f
  41479e:	aas    
  41479f:	jo     0x414775
  4147a1:	lahf   
  4147a2:	shr    esp,1
  4147a4:	jmp    0xf6167bbf
  4147a9:	fwait
  4147aa:	stc    
  4147ab:	cmp    esi,DWORD PTR [ebx]
  4147ad:	dec    edi
  4147ae:	xor    dh,BYTE PTR [edi+ebx*4+0xa]
  4147b2:	jb     0x414797
  4147b4:	or     eax,0x42851487
  4147b9:	jno    0x414813
  4147bb:	mov    edi,edi
  4147bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147be:	mov    esp,0x10f3d442
  4147c3:	hlt    
  4147c4:	xor    ah,BYTE PTR [ecx+ecx*2]
  4147c7:	mov    edi,0x6b933141
  4147cc:	int    0x86
  4147ce:	pop    ds
  4147cf:	or     BYTE PTR [eax],dl
  4147d1:	adc    al,BYTE PTR ds:0xfb89ba3f
  4147d7:	fld    DWORD PTR [ebx+0x21265aa5]
  4147dd:	mov    ecx,ebx
  4147df:	jp     0x414779
  4147e1:	call   DWORD PTR [eax]
  4147e3:	mov    cl,BYTE PTR [ecx-0x30076e76]
  4147e9:	in     eax,0xbf
  4147eb:	repnz mov DWORD PTR [esi+0x55deac46],ebp
  4147f2:	push   ss
  4147f3:	aam    0x76
  4147f5:	mov    esp,DWORD PTR [eax+0x1d]
  4147f8:	lds    edx,FWORD PTR [edx-0x60]
  4147fb:	mov    ebx,0xc6bd7414
  414800:	sub    BYTE PTR [edx-0x63],ah
  414803:	cld    
  414804:	xor    al,0xd3
  414806:	xchg   ecx,eax
  414807:	or     esp,DWORD PTR [ecx-0x51]
  41480a:	jb     0x4147a1
  41480c:	(bad)  
  41480d:	jecxz  0x41485a
  41480f:	js     0x4147a9
  414811:	push   edi
  414812:	add    ch,BYTE PTR [edi-0x6a]
  414815:	ficomp WORD PTR [ebx-0x75]
  414818:	clc    
  414819:	and    bl,bh
  41481b:	dec    esp
  41481c:	dec    esi
  41481d:	xchg   ecx,eax
  41481e:	ins    DWORD PTR es:[edi],dx
  41481f:	xchg   esp,eax
  414820:	fstp   QWORD PTR [edi+eax*2]
  414823:	xor    ch,BYTE PTR [edx+0xbcf4110]
  414829:	mov    ah,BYTE PTR [ebx+0x7c]
  41482c:	or     ebx,DWORD PTR [esi]
  41482e:	movsx  ebx,WORD PTR [edx-0x3c]
  414832:	ins    DWORD PTR es:[edi],dx
  414833:	add    al,BYTE PTR [esi-0xf6e1456]
  414839:	and    DWORD PTR [eax-0x3a],ebp
  41483c:	xor    BYTE PTR [esi+0x51e1f7d9],cl
  414842:	pushf  
  414843:	push   ss
  414844:	icebp  
  414845:	or     esp,edx
  414847:	in     eax,0xf
  414849:	mov    dl,ch
  41484b:	aad    0x40
  41484d:	mov    ebp,0xf75557a7
  414852:	call   0x5141:0x61aa8215
  414859:	retf   
  41485a:	lea    ebp,ds:0x4fa334db
  414860:	data16 cmc 
  414862:	int3   
  414863:	mov    esp,0xecb55346
  414868:	mov    dh,BYTE PTR [edx+ebp*8]
  41486b:	push   cs
  41486c:	and    eax,0x6fd7ab6b
  414871:	adc    DWORD PTR [ecx+ecx*8-0x4a],edi
  414875:	jecxz  0x41482d
  414877:	pop    ds
  414878:	std    
  414879:	or     al,0x95
  41487b:	inc    ebx
  41487c:	retf   0x23c8
  41487f:	shr    DWORD PTR [ecx],1
  414881:	mov    edx,0xfc843611
  414886:	pmuludq mm2,QWORD PTR [edi]
  414889:	cs adc eax,0x51bc7efa
  41488f:	(bad)  
  414890:	int    0xc5
  414892:	loope  0x4148b2
  414894:	fstp   DWORD PTR [eax]
  414896:	jl     0x414899
  414898:	pop    ds
  414899:	out    0xd7,al
  41489b:	cmp    esi,DWORD PTR [eax+0x704e6846]
  4148a1:	xchg   esi,eax
  4148a2:	xchg   edi,eax
  4148a3:	push   edi
  4148a4:	mov    ah,0x9e
  4148a6:	(bad)  
  4148a7:	popf   
  4148a8:	pop    eax
  4148a9:	in     al,dx
  4148aa:	loop   0x414890
  4148ac:	jno    0x4148fa
  4148ae:	sub    DWORD PTR [ebx-0x3c],0xffffffaa
  4148b2:	jge    0x414914
  4148b4:	imul   esi,DWORD PTR [esp+edi*8+0x3d],0x8bf7bc48
  4148bc:	(bad)  
  4148bd:	ret    
  4148be:	mov    BYTE PTR [ebp-0x75],dl
  4148c1:	inc    ebp
  4148c2:	out    0xd3,al
  4148c4:	jp     0x4148ee
  4148c6:	je     0x4148df
  4148c8:	sub    BYTE PTR [esi+0x1c],0x90
  4148cc:	xor    eax,0xbb2fc6da
  4148d1:	push   ss
  4148d2:	test   DWORD PTR [esi+eax*8+0x12],esi
  4148d6:	outs   dx,DWORD PTR ds:[esi]
  4148d7:	xchg   DWORD PTR [ebx-0x77],edx
  4148da:	push   esp
  4148db:	push   ecx
  4148dc:	jbe    0x414878
  4148de:	mov    ah,0xb8
  4148e0:	or     esp,DWORD PTR [edi]
  4148e2:	mov    ebx,0xd25dc6a
  4148e7:	mul    BYTE PTR [ebp-0x53]
  4148ea:	inc    esp
  4148eb:	adc    BYTE PTR [eax-0x12],al
  4148ee:	mov    ds:0x8618adeb,al
  4148f3:	jno    0x41493f
  4148f5:	loopne 0x41491f
  4148f7:	ret    0xb91f
  4148fa:	mov    ebx,0x282e653d
  4148ff:	adc    al,0x2d
  414901:	pop    es
  414902:	or     eax,eax
  414904:	int3   
  414905:	push   ds
  414906:	cmp    dl,bl
  414908:	dec    ecx
  414909:	in     al,0xfa
  41490b:	aas    
  41490c:	cli    
  41490d:	jge    0x414930
  41490f:	call   0x598a:0x74c127b8
  414916:	adc    eax,0xd60f2cae
  41491b:	mov    edx,DWORD PTR [ecx+edi*8+0x1d]
  41491f:	xchg   BYTE PTR [bx+si-0x5f],ch
  414923:	mov    ds:0xf8677335,eax
  414928:	add    eax,0x300c2ba0
  41492d:	inc    ecx
  41492e:	and    eax,0x43883312
  414933:	mov    edi,gs
  414935:	enter  0x9f2b,0x66
  414939:	push   edx
  41493a:	push   esp
  41493b:	sbb    BYTE PTR [edi-0x51f934c6],al
  414941:	cmp    ch,BYTE PTR [ebp-0x37]
  414944:	pop    ds
  414945:	daa    
  414946:	lahf   
  414947:	out    dx,eax
  414948:	ret    
  414949:	lea    eax,[ecx-0x6a]
  41494c:	mov    eax,0x2a2272ed
  414951:	cmc    
  414952:	pop    es
  414953:	daa    
  414954:	push   ebx
  414955:	test   eax,0x2e69d26e
  41495a:	retf   0x4cb5
  41495d:	lods   eax,DWORD PTR ds:[esi]
  41495e:	ins    DWORD PTR es:[edi],dx
  41495f:	clc    
  414960:	in     eax,dx
  414961:	jecxz  0x41490d
  414963:	sub    bl,BYTE PTR [edi+0x2]
  414966:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414968:	pop    es
  414969:	retf   0x580
  41496c:	mov    edx,0x640e2e70
  414971:	mov    fs,WORD PTR [ebx]
  414973:	and    BYTE PTR [ebp-0x13],cl
  414976:	cli    
  414977:	and    al,0xfa
  414979:	or     BYTE PTR [ebx],al
  41497b:	pushf  
  41497c:	xor    edi,DWORD PTR [esi-0x5f3556fd]
  414982:	mov    ds:0xc82dfe9e,eax
  414987:	jne    0x414915
  414989:	adc    al,0x2f
  41498b:	aaa    
  41498c:	sub    DWORD PTR [edi+0x59],esi
  41498f:	scas   eax,DWORD PTR es:[edi]
  414990:	jno    0x414971
  414992:	mov    eax,ds:0xc65d5d1
  414997:	add    DWORD PTR [edi+edx*4],ecx
  41499a:	sti    
  41499b:	fiadd  WORD PTR [esi+0x457cd826]
  4149a1:	inc    eax
  4149a2:	and    BYTE PTR [eax],bl
  4149a4:	mov    bh,0x16
  4149a6:	dec    eax
  4149a7:	test   BYTE PTR [ebx],dl
  4149a9:	lea    ebx,[esi-0x54b505d3]
  4149af:	dec    edi
  4149b0:	idiv   BYTE PTR [esi]
  4149b2:	jne    0x414984
  4149b4:	icebp  
  4149b5:	pop    edx
  4149b6:	call   0xa83b:0xdc45a96
  4149bd:	mov    cl,dl
  4149bf:	shr    DWORD PTR [edx-0x5b752bbb],0x8e
  4149c6:	sar    DWORD PTR [edi+0x61],cl
  4149c9:	cmp    BYTE PTR [edx-0x26],0xed
  4149cd:	lods   al,BYTE PTR ds:[esi]
  4149ce:	aas    
  4149cf:	mov    cl,0x7d
  4149d1:	in     al,0xa
  4149d3:	and    BYTE PTR [esi+eiz*1-0x1f],ch
  4149d7:	retf   
  4149d8:	stos   BYTE PTR es:[edi],al
  4149d9:	pop    ebx
  4149da:	aaa    
  4149db:	and    DWORD PTR ds:0x4cce0e09,0x6e
  4149e2:	lods   al,BYTE PTR ds:[esi]
  4149e3:	stos   BYTE PTR es:[edi],al
  4149e4:	ror    BYTE PTR [ebx],0xe6
  4149e7:	inc    eax
  4149e8:	nop
  4149e9:	adc    eax,DWORD PTR [eax]
  4149eb:	sti    
  4149ec:	adc    esi,DWORD PTR [edi-0x7b]
  4149ef:	pop    esp
  4149f0:	addr16 cmp eax,0xf8ad9b36
  4149f6:	das    
  4149f7:	mov    ss,WORD PTR [eax+0x2b0ae525]
  4149fd:	mov    edx,0xe5fa6b82
  414a02:	stc    
  414a03:	ins    BYTE PTR es:[edi],dx
  414a04:	(bad)  
  414a06:	adc    al,0x71
  414a08:	jecxz  0x4149a4
  414a0a:	push   eax
  414a0b:	adc    al,0xa1
  414a0d:	cdq    
  414a0e:	(bad)
  414a11:	cs mov esi,0x26e7f017
  414a17:	and    BYTE PTR [esi-0x6c],ah
  414a1a:	cmp    BYTE PTR [ebx+ebx*2-0x6a684310],cl
  414a21:	imul   eax,DWORD PTR [eax-0x33],0x9164a9ce
  414a28:	loope  0x414a41
  414a2a:	mov    ah,0x8f
  414a2c:	loopne 0x4149be
  414a2e:	sub    ah,BYTE PTR [edx]
  414a30:	push   ebx
  414a31:	cmp    ebp,DWORD PTR [eax-0x3a]
  414a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a35:	sub    al,0x30
  414a37:	je     0x4149c9
  414a39:	mov    eax,DWORD PTR [ecx]
  414a3b:	add    ch,BYTE PTR [ebx+0x1e0fe307]
  414a41:	sub    al,0x48
  414a43:	sbb    ebx,eax
  414a45:	xlat   BYTE PTR ds:[ebx]
  414a46:	pop    eax
  414a47:	push   ebx
  414a48:	retf   
  414a49:	lock lea esi,[ecx+ecx*4+0x29453e8f]
  414a51:	or     al,0x9d
  414a53:	xor    ebx,DWORD PTR [eax]
  414a55:	push   edx
  414a56:	into   
  414a57:	sete   BYTE PTR [edi+ebx*1-0xf]
  414a5c:	lods   al,BYTE PTR ds:[esi]
  414a5d:	das    
  414a5e:	jmp    0x414a6e
  414a60:	lds    ebx,FWORD PTR [esi+0x18]
  414a63:	lea    esp,[edx]
  414a65:	mov    edx,0xf2fea05f
  414a6a:	adc    DWORD PTR [esi-0x6c],ecx
  414a6d:	inc    eax
  414a6e:	dec    edi
  414a6f:	mov    dl,0x61
  414a71:	ins    BYTE PTR es:[edi],dx
  414a72:	and    al,0x8b
  414a74:	mov    esp,0x6dbc249f
  414a79:	push   ds
  414a7a:	pop    ebp
  414a7b:	jae    0x414a3e
  414a7d:	inc    esi
  414a7e:	or     dh,BYTE PTR [ebp-0x38]
  414a81:	xor    eax,0x2251122a
  414a86:	inc    edx
  414a87:	in     eax,0x2b
  414a89:	fistp  DWORD PTR [ebx+0x42]
  414a8c:	retf   
  414a8d:	lods   eax,DWORD PTR ds:[esi]
  414a8e:	sbb    esp,edi
  414a90:	dec    ebx
  414a91:	push   cs
  414a92:	nop
  414a93:	push   cs
  414a94:	jo     0x414a6b
  414a96:	iret   
  414a97:	xchg   esi,eax
  414a98:	mov    dl,0xb7
  414a9a:	out    dx,eax
  414a9b:	ret    0x7a7e
  414a9e:	ret    
  414a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aa0:	xor    al,0x7d
  414aa2:	(bad)  
  414aa3:	cld    
  414aa4:	xlat   BYTE PTR ds:[ebx]
  414aa5:	test   eax,0x7afbd166
  414aaa:	das    
  414aab:	jg     0x414b1f
  414aad:	nop
  414aae:	cwde   
  414aaf:	cdq    
  414ab0:	in     eax,dx
  414ab1:	mov    ebp,0xb7a5f520
  414ab6:	inc    eax
  414ab7:	jmp    0xcab0:0xabb46cd4
  414abe:	ins    DWORD PTR es:[edi],dx
  414abf:	mov    edi,0x5f7447a8
  414ac4:	xchg   edi,eax
  414ac5:	int    0xa1
  414ac7:	out    dx,al
  414ac8:	lahf   
  414ac9:	add    bh,BYTE PTR [esi-0x19]
  414acc:	mov    ecx,0xea075685
  414ad1:	les    eax,FWORD PTR ds:0x67ddcb70
  414ad7:	test   BYTE PTR [eax],bh
  414ad9:	mov    ebx,DWORD PTR [edx+0x6d]
  414adc:	pop    ebp
  414add:	sbb    eax,0x3f95fc07
  414ae2:	div    ecx
  414ae4:	mov    ds:0x36fc307e,al
  414ae9:	stos   DWORD PTR es:[edi],eax
  414aea:	sar    edi,1
  414aec:	jmp    0x414b43
  414aee:	mov    ecx,0x99800244
  414af3:	int3   
  414af4:	adc    eax,0xc5295a0
  414af9:	ffreep st(0)
  414afb:	jp     0x414aba
  414afd:	inc    eax
  414afe:	inc    edi
  414aff:	add    DWORD PTR [ecx+0x40],esp
  414b02:	xchg   bl,al
  414b04:	int3   
  414b05:	jo     0x414ab4
  414b07:	adc    eax,0x32554450
  414b0c:	mov    fs,ebp
  414b0e:	(bad)  
  414b0f:	shl    eax,cl
  414b11:	xor    eax,0x25f3cd7a
  414b16:	mov    ah,0xde
  414b18:	imul   edx,DWORD PTR [edx+0x56],0x7c
  414b1c:	sbb    al,0xe5
  414b1e:	jae    0x414aae
  414b20:	adc    ebx,esi
  414b22:	aad    0xf7
  414b24:	sbb    eax,0x98ac6acb
  414b29:	jle    0x414aca
  414b2b:	xchg   edx,eax
  414b2c:	jmp    0x414b70
  414b2e:	mov    cl,0x3a
  414b30:	or     BYTE PTR [esi+0x2a],0xbf
  414b34:	cwde   
  414b35:	(bad)  
  414b36:	cmc    
  414b37:	fsubp  st(2),st
  414b39:	xlat   BYTE PTR cs:[ebx]
  414b3b:	pushf  
  414b3c:	mov    ds:0x9f0ecd0a,al
  414b41:	(bad)  
  414b43:	imul   edx,edx,0xffffffa7
  414b46:	pop    es
  414b47:	out    0x2d,eax
  414b49:	sbb    eax,edi
  414b4b:	aad    0x98
  414b4d:	add    cl,bh
  414b4f:	mov    al,ds:0x1a8a86a9
  414b54:	or     BYTE PTR [eax],0x60
  414b57:	xor    DWORD PTR [eax+0x5d],esi
  414b5a:	daa    
  414b5b:	adc    bl,BYTE PTR [esi+eiz*1-0x51]
  414b5f:	sub    eax,esi
  414b61:	(bad)  
  414b62:	jnp    0x414b29
  414b64:	cmp    cl,BYTE PTR [esi-0x62]
  414b67:	stc    
  414b68:	(bad)  [esi]
  414b6a:	outs   dx,DWORD PTR ds:[esi]
  414b6b:	push   ecx
  414b6c:	test   BYTE PTR [edi-0x51],cl
  414b6f:	arpl   WORD PTR [ecx],dx
  414b71:	pop    edx
  414b72:	mov    ebx,0xe8b8f97a
  414b77:	dec    eax
  414b78:	mov    dl,0x74
  414b7a:	pop    esi
  414b7b:	fcomp  QWORD PTR [eax+0x78ea5170]
  414b81:	pop    esi
  414b82:	sub    DWORD PTR [edx-0x3b47c21d],eax
  414b88:	jb     0x414b94
  414b8a:	adc    eax,DWORD PTR [eax+0x61]
  414b8d:	add    DWORD PTR [edi],ecx
  414b8f:	shr    DWORD PTR [edx+0x2be507c5],cl
  414b95:	dec    edi
  414b96:	pop    ds
  414b97:	(bad)  
  414b98:	push   ecx
  414b99:	int3   
  414b9a:	push   esp
  414b9b:	data16 jg 0x414b8e
  414b9e:	stc    
  414b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ba0:	sub    DWORD PTR [ebx+0x2ccdeefe],ebx
  414ba6:	lods   eax,DWORD PTR ss:[esi]
  414ba8:	cli    
  414ba9:	dec    ebx
  414baa:	stc    
  414bab:	mov    ds:0x31a8b6be,eax
  414bb0:	ds push esi
  414bb2:	rol    DWORD PTR [ecx+edx*4+0x47],cl
  414bb6:	mov    al,ds:0x87b3807e
  414bbb:	lock sub edi,DWORD PTR [ecx+0x6529a7b7]
  414bc2:	xchg   ebp,ebp
  414bc4:	jnp    0x414b8f
  414bc6:	xchg   DWORD PTR [edi-0x6a00ce73],edi
  414bcc:	les    ebx,FWORD PTR [ecx+ecx*2-0x4]
  414bd0:	add    DWORD PTR [ecx],ecx
  414bd2:	mov    ds:0xd2c7aa59,al
  414bd7:	enter  0x879a,0x4f
  414bdb:	mov    WORD PTR [eax-0x56d5893d],fs
  414be1:	cmp    eax,0x65b4d67a
  414be6:	jmp    0x414bf6
  414be8:	inc    esp
  414be9:	sbb    cl,bh
  414beb:	sbb    al,0x34
  414bed:	enter  0xae87,0x6
  414bf1:	popf   
  414bf2:	pop    ebp
  414bf3:	and    ebx,DWORD PTR [edi-0x15]
  414bf6:	pusha  
  414bf7:	rcl    dl,0x68
  414bfa:	mov    bh,BYTE PTR [edi+edi*8+0xd63b1dd]
  414c01:	imul   edx,ecx,0xfffffff9
  414c04:	pop    eax
  414c05:	add    eax,0x69f65d41
  414c0a:	fwait
  414c0b:	mov    DWORD PTR [ecx-0x665006b9],esi
  414c11:	std    
  414c12:	push   edi
  414c13:	pop    ebp
  414c14:	gs jp  0x414b98
  414c17:	lahf   
  414c18:	jmp    0x414bc2
  414c1a:	ins    DWORD PTR es:[edi],dx
  414c1b:	xchg   edx,eax
  414c1c:	leave  
  414c1d:	dec    esp
  414c1e:	jle    0x414bb0
  414c20:	stc    
  414c21:	xlat   BYTE PTR ds:[ebx]
  414c22:	jnp    0x414c6a
  414c24:	inc    edx
  414c25:	arpl   WORD PTR [ebx],ax
  414c27:	cli    
  414c28:	push   ss
  414c29:	pop    edx
  414c2a:	scas   al,BYTE PTR es:[edi]
  414c2b:	call   0xb2bd:0x7f02324b
  414c32:	inc    ecx
  414c33:	ret    
  414c34:	call   0x9c78:0x3df9d131
  414c3b:	into   
  414c3c:	inc    ecx
  414c3d:	sub    eax,0xcf0a171f
  414c42:	mov    ch,dl
  414c44:	aad    0x81
  414c46:	fst    st(3)
  414c48:	popf   
  414c49:	std    
  414c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c4b:	ror    BYTE PTR [ebx+0x291a6704],cl
  414c51:	ficomp DWORD PTR ds:0xc9c2a61
  414c57:	inc    esp
  414c58:	mov    ah,0x22
  414c5a:	out    0x1c,al
  414c5c:	mov    ebx,DWORD PTR [eax]
  414c5e:	pop    ss
  414c5f:	xor    al,BYTE PTR [ebx+eiz*8+0x75a11345]
  414c66:	dec    ebp
  414c67:	test   eax,0x18bea54
  414c6c:	cdq    
  414c6d:	jno    0x414c79
  414c6f:	fcmovnu st,st(0)
  414c71:	sub    DWORD PTR [edi],edx
  414c73:	sbb    al,0xa
  414c75:	test   BYTE PTR [ebx+0x29],0x6c
  414c79:	cmp    al,0x16
  414c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c7c:	jno    0x414ca2
  414c7e:	mov    dh,0x8e
  414c80:	lock mov ds:0x735c2c28,eax
  414c86:	pop    ss
  414c87:	xchg   BYTE PTR [ecx+0x69],dl
  414c8a:	sub    ebp,DWORD PTR [eax+0x20e8fdc5]
  414c90:	jg     0x414cac
  414c92:	jp     0x414cfd
  414c94:	and    al,0x8f
  414c96:	out    0xa3,eax
  414c98:	mov    edx,0x79267fe1
  414c9d:	xchg   edi,eax
  414c9e:	or     edi,esp
  414ca0:	outs   dx,BYTE PTR ds:[esi]
  414ca1:	push   edx
  414ca2:	sbb    dh,BYTE PTR [edi-0x33]
  414ca5:	loop   0x414c72
  414ca7:	adc    ah,bl
  414ca9:	fld    DWORD PTR [edi+0x72]
  414cac:	arpl   di,bp
  414cae:	sar    BYTE PTR [ebx-0x5b76572b],1
  414cb4:	inc    ebx
  414cb5:	mov    ebx,0x70e1f490
  414cba:	test   BYTE PTR [esi],0x7c
  414cbd:	icebp  
  414cbe:	jmp    0x414cd1
  414cc0:	adc    bl,BYTE PTR [eax]
  414cc2:	dec    esi
  414cc3:	sub    DWORD PTR [eax],ebx
  414cc5:	enter  0x7ab6,0xdc
  414cc9:	pushf  
  414cca:	ror    DWORD PTR [ebx],cl
  414ccc:	mov    eax,ds:0xed32bbe3
  414cd1:	xchg   esp,eax
  414cd2:	jno    0x414c80
  414cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd5:	pop    edi
  414cd6:	push   ecx
  414cd7:	sub    DWORD PTR [edx+0x5fcb8a7],ebp
  414cdd:	and    DWORD PTR [esi],esi
  414cdf:	imul   esp,ecx,0x28b70ff6
  414ce5:	or     DWORD PTR [edx+ebx*8-0x15b6f2c5],ebx
  414cec:	add    eax,0x2c022e9f
  414cf1:	rol    BYTE PTR [edx],cl
  414cf3:	icebp  
  414cf4:	add    al,0x36
  414cf6:	sub    DWORD PTR [edi+0x4],esi
  414cf9:	xchg   dh,bl
  414cfb:	out    dx,eax
  414cfc:	inc    eax
  414cfd:	fistp  WORD PTR [eax-0x67]
  414d00:	jne    0x414ca5
  414d02:	retf   
  414d03:	xor    eax,0xd3d407b4
  414d08:	and    esi,esi
  414d0a:	(bad)  
  414d0b:	mov    eax,0xce941ffe
  414d10:	test   DWORD PTR [edi],edi
  414d12:	dec    eax
  414d14:	sub    al,bl
  414d16:	jnp    0x414ca8
  414d18:	rol    BYTE PTR [ecx+0x3a],cl
  414d1b:	pop    ds
  414d1c:	pusha  
  414d1d:	fwait
  414d1e:	sar    bl,0xe0
  414d21:	jp     0x414d08
  414d23:	cmp    al,0xa8
  414d25:	sbb    DWORD PTR [ecx-0x7],esp
  414d28:	jb     0x414d78
  414d2a:	mov    esp,0xa82e4e87
  414d2f:	test   BYTE PTR [esi-0x2c9d7cce],0x22
  414d36:	into   
  414d37:	adc    al,0xba
  414d39:	cmp    cl,al
  414d3b:	mov    ds:0x2ed6aa53,al
  414d40:	mov    ebx,0x2f71eff8
  414d45:	jnp    0x414d17
  414d47:	in     eax,dx
  414d48:	xor    ebx,DWORD PTR [eax]
  414d4a:	adc    cl,cl
  414d4c:	sbb    ecx,ebx
  414d4e:	xchg   edx,eax
  414d4f:	mov    ebx,DWORD PTR [ebp-0xd5edf4b]
  414d55:	(bad)  
  414d56:	fcom   DWORD PTR [edx]
  414d58:	fild   QWORD PTR [ecx+edi*2-0x48]
  414d5c:	xor    DWORD PTR [edx],edi
  414d5e:	dec    ebp
  414d5f:	xchg   esi,eax
  414d60:	jne    0x414d25
  414d62:	jns    0x414da5
  414d64:	inc    edx
  414d65:	pop    edx
  414d66:	xchg   al,ah
  414d68:	jmp    0xe50b0129
  414d6d:	sar    ah,1
  414d6f:	mov    dl,0xe0
  414d71:	popf   
  414d72:	and    al,0x41
  414d74:	shr    al,0x7b
  414d77:	xor    ebp,0x1c
  414d7a:	and    cl,ch
  414d7c:	mov    al,ds:0xa5443814
  414d81:	xor    eax,0x4396b8f
  414d86:	enter  0x5aeb,0xbf
  414d8a:	dec    edx
  414d8b:	popa   
  414d8c:	fdiv   DWORD PTR [edi+0x291a2666]
  414d92:	fist   WORD PTR [esi+0x362c7bfd]
  414d98:	or     al,0xf6
  414d9a:	pusha  
  414d9b:	(bad)  
  414d9c:	mov    edi,0x410abb29
  414da1:	or     dl,BYTE PTR [edi-0x525546a1]
  414da7:	adc    ecx,DWORD PTR [edi]
  414da9:	push   ds
  414daa:	jo     0x414dda
  414dac:	add    DWORD PTR [ebx+eiz*1+0x6a71ec4d],0xa51a12c5
  414db7:	call   0xde766e41
  414dbc:	fld    TBYTE PTR [esi]
  414dbe:	inc    eax
  414dbf:	push   ds
  414dc0:	sbb    DWORD PTR [ebx+0x2b5fd2ad],0x1ee8d84f
  414dca:	stos   BYTE PTR es:[edi],al
  414dcb:	aam    0x75
  414dcd:	rcl    DWORD PTR [ebx+edx*2],cl
  414dd0:	fs test ecx,0x9028e670
  414dd7:	mov    al,ds:0x76c75a45
  414ddc:	ins    BYTE PTR es:[edi],dx
  414ddd:	scas   eax,DWORD PTR es:[edi]
  414dde:	and    eax,0xa26286a
  414de3:	push   ds
  414de4:	adc    eax,DWORD PTR ds:0xd8bec49b
  414dea:	sub    al,0x55
  414dec:	(bad)  
  414ded:	shl    ch,1
  414def:	ss ret 
  414df1:	in     al,dx
  414df2:	lea    edx,[esi]
  414df4:	push   ss
  414df5:	fsubr  st(2),st
  414df7:	mov    eax,0x75a19bd5
  414dfc:	pusha  
  414dfd:	test   BYTE PTR [ecx-0x44],ch
  414e00:	pop    eax
  414e01:	icebp  
  414e02:	sub    dl,BYTE PTR [eax-0x66]
  414e05:	xor    edi,DWORD PTR [edx]
  414e07:	mov    eax,ds:0x72de76a1
  414e0c:	or     al,al
  414e0e:	addr16 pushf 
  414e10:	(bad)  
  414e11:	loop   0x414e6b
  414e13:	addr16 ret 0xf73f
  414e17:	mov    ah,0x6c
  414e19:	pop    es
  414e1a:	pop    edx
  414e1b:	ins    BYTE PTR es:[edi],dx
  414e1c:	xor    DWORD PTR [edx+ebp*4+0x1e627fe2],esi
  414e23:	pop    ecx
  414e24:	inc    esi
  414e25:	add    BYTE PTR [esi],cl
  414e27:	pop    edx
  414e28:	xor    edi,DWORD PTR [eax+0x2133e778]
  414e2e:	rcr    DWORD PTR [edi],cl
  414e30:	cwde   
  414e31:	inc    edi
  414e32:	jns    0x414ead
  414e34:	and    DWORD PTR [edx-0x32],esp
  414e37:	(bad)  
  414e38:	inc    BYTE PTR [ecx-0x7e45b087]
  414e3e:	mov    eax,0x3074a084
  414e43:	pop    eax
  414e44:	inc    esp
  414e45:	xor    DWORD PTR [ebx],esi
  414e47:	ret    
  414e48:	icebp  
  414e49:	mov    DWORD PTR [eax-0x5a],esi
  414e4c:	int3   
  414e4d:	scas   eax,DWORD PTR es:[edi]
  414e4e:	jle    0x414ecd
  414e50:	or     DWORD PTR [edx+ebp*4-0x2d],ebx
  414e54:	xor    eax,0x60169902
  414e59:	loope  0x414e6f
  414e5b:	inc    esp
  414e5c:	xchg   edx,eax
  414e5d:	dec    esi
  414e5e:	stos   DWORD PTR es:[edi],eax
  414e5f:	push   ebx
  414e60:	and    cl,BYTE PTR [ebp+0x6a]
  414e63:	lods   al,BYTE PTR ds:[esi]
  414e64:	pop    edi
  414e65:	jle    0x414e9a
  414e67:	mov    esp,DWORD PTR [edi-0x54]
  414e6a:	inc    ecx
  414e6b:	dec    BYTE PTR [eax]
  414e6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e6e:	scas   eax,DWORD PTR es:[edi]
  414e6f:	xchg   edx,eax
  414e70:	sub    edx,DWORD PTR [ecx+0x3157111c]
  414e76:	int    0x76
  414e78:	cmp    ah,bl
  414e7a:	ins    DWORD PTR es:[edi],dx
  414e7b:	add    cl,BYTE PTR [ecx+0x42]
  414e7e:	mov    ah,0x84
  414e80:	inc    edi
  414e81:	leave  
  414e82:	(bad)  
  414e84:	(bad)  
  414e86:	lds    esp,FWORD PTR ds:0x7fbdd658
  414e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e8d:	fxch   st(7)
  414e8f:	mov    al,ds:0xbbcd58d1
  414e94:	sub    cl,bl
  414e96:	rcl    BYTE PTR [edi-0x3cb4e9b8],1
  414e9c:	dec    ecx
  414e9d:	call   0x8c922c59
  414ea2:	sub    BYTE PTR [edx],dl
  414ea4:	loop   0x414e81
  414ea6:	sar    BYTE PTR [ebp-0x21a0ec],0x60
  414ead:	xor    bl,cl
  414eaf:	test   dh,ch
  414eb1:	stos   DWORD PTR es:[edi],eax
  414eb2:	sti    
  414eb3:	and    bh,BYTE PTR [ecx+0x4f]
  414eb6:	ret    
  414eb7:	mov    bh,0x8f
  414eb9:	popf   
  414eba:	mov    eax,ds:0xd33bb804
  414ebf:	stos   BYTE PTR es:[edi],al
  414ec0:	push   ecx
  414ec1:	cmp    edi,esp
  414ec3:	mov    cl,0x21
  414ec5:	push   ss
  414ec6:	mov    esp,gs
  414ec8:	jmp    0xc6279fc6
  414ecd:	imul   eax,DWORD PTR [ebp+0x6ea8fda2],0x6c724ef9
  414ed7:	ja     0x414f4d
  414ed9:	retf   0x3f6d
  414edc:	out    dx,al
  414edd:	mov    bl,0xaf
  414edf:	leave  
  414ee0:	iret   
  414ee1:	retf   
  414ee2:	mov    eax,0xd3a9fc87
  414ee7:	pop    esp
  414ee8:	mov    edx,0xed9592ee
  414eed:	dec    ebx
  414eee:	nop
  414eef:	cmp    eax,edx
  414ef1:	cs jmp 0x414efb
  414ef4:	scas   al,BYTE PTR es:[edi]
  414ef5:	mov    edi,0x5c0b57fb
  414efa:	or     al,0xa6
  414efc:	sahf   
  414efd:	retf   
  414efe:	xor    eax,0x4242846c
  414f03:	push   esi
  414f04:	sub    al,0x5
  414f06:	push   sp
  414f08:	outs   dx,DWORD PTR ds:[esi]
  414f09:	pop    esi
  414f0a:	push   0x35260b7f
  414f0f:	adc    eax,0xbc2489f0
  414f14:	lds    esp,FWORD PTR ds:0x23367a9c
  414f1a:	aaa    
  414f1b:	jne    0x414f39
  414f1d:	loope  0x414f81
  414f1f:	std    
  414f20:	add    bl,ah
  414f22:	or     esp,DWORD PTR [eax]
  414f24:	xor    eax,0x16698bb5
  414f29:	fstp   TBYTE PTR [esi]
  414f2b:	arpl   WORD PTR [edx+0x3d],cx
  414f2e:	sub    eax,0xf60887ee
  414f33:	pop    esi
  414f34:	and    cl,bh
  414f36:	xchg   BYTE PTR [eax-0x62],bl
  414f39:	hlt    
  414f3a:	xchg   BYTE PTR ds:0x295e1ac7,al
  414f40:	push   esi
  414f41:	sub    al,0xc4
  414f44:	jae    0x414f97
  414f46:	jecxz  0x414ecc
  414f48:	mov    esp,0xeb1dc6ac
  414f4d:	sub    eax,0xef85af85
  414f52:	mov    esp,ss
  414f54:	inc    ebp
  414f55:	sub    edx,DWORD PTR [edx]
  414f57:	cmp    al,BYTE PTR [edx-0x6d]
  414f5a:	int    0x20
  414f5c:	adc    DWORD PTR [ebp-0x54fcfef1],eax
  414f62:	inc    edx
  414f63:	and    BYTE PTR [eax+0x4f6b1c88],al
  414f69:	mov    esp,0x83b42d86
  414f6e:	push   eax
  414f6f:	sar    DWORD PTR [ebp-0x4e037ad4],1
  414f75:	mov    ds:0x3ed196ac,eax
  414f7a:	out    dx,al
  414f7b:	rcl    BYTE PTR [edi],cl
  414f7d:	test   BYTE PTR [eax+ecx*1],bh
  414f80:	test   BYTE PTR [edi],dh
  414f82:	adc    eax,0x53cb9386
  414f87:	push   ecx
  414f88:	popf   
  414f89:	out    dx,eax
  414f8a:	sub    eax,0x53d796d1
  414f8f:	mov    eax,ds:0x16ed17ef
  414f94:	dec    eax
  414f95:	pop    es
  414f96:	sbb    al,0xf2
  414f98:	(bad)  
  414f99:	jne    0x414f27
  414f9b:	sub    DWORD PTR [ecx+edx*2-0xc0e8817],edx
  414fa2:	ins    BYTE PTR es:[edi],dx
  414fa3:	pop    ebx
  414fa4:	jns    0x414f2f
  414fa6:	push   ebx
  414fa7:	mov    ecx,0xed0b0e20
  414fac:	dec    edi
  414fad:	popf   
  414fae:	cmp    eax,0xe61a0972
  414fb3:	adc    al,0x26
  414fb5:	and    al,0x39
  414fb7:	sahf   
  414fb8:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414fba:	loopne 0x414fbe
  414fbc:	dec    esi
  414fbd:	nop
  414fbe:	gs jbe 0x414f5a
  414fc1:	jae    0x41502f
  414fc3:	add    eax,0xde1882a7
  414fc8:	pop    eax
  414fc9:	add    eax,0x7701779c
  414fce:	repnz and eax,0xae508edb
  414fd4:	mov    cl,0x48
  414fd6:	and    ebp,eax
  414fd8:	xchg   ebx,eax
  414fd9:	mov    ah,0xc
  414fdb:	pop    esp
  414fdc:	adc    al,0x90
  414fde:	mov    ecx,0x97f41571
  414fe3:	push   ds
  414fe4:	sahf   
  414fe5:	out    0xff,al
  414fe7:	cli    
  414fe8:	jl     0x414ffc
  414fea:	mov    edx,0x19478cf2
  414fef:	adc    al,BYTE PTR [edx+0x75ad52a1]
  414ff5:	sbb    edx,DWORD PTR ds:0x6fb4822a
  414ffb:	icebp  
  414ffc:	fist   DWORD PTR [esi+eax*1+0x3a8912ac]
  415003:	push   edx
  415004:	enter  0x2453,0xc4
  415008:	mov    edx,0x6f67ed6c
  41500d:	mov    ch,BYTE PTR [ecx+ebx*8]
  415010:	dec    esp
  415011:	mov    BYTE PTR [ebx+0x231fef98],al
  415017:	aad    0xaf
  415019:	jo     0x414f9b
  41501b:	cmp    esp,DWORD PTR [eax-0x3c]
  41501e:	ret    0xe4c0
  415021:	pushf  
  415022:	int3   
  415023:	out    dx,al
  415024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415025:	push   0xffffffea
  415027:	cld    
  415028:	push   cs
  415029:	cmc    
  41502a:	jl     0x415014
  41502c:	fist   WORD PTR [esi+ecx*1]
  41502f:	fwait
  415030:	jmp    0x4150aa
  415032:	dec    edi
  415033:	lods   al,BYTE PTR ds:[esi]
  415034:	cwde   
  415035:	mov    ebx,0x28e9aa2d
  41503a:	out    dx,al
  41503b:	test   al,0xe9
  41503d:	pop    edi
  41503e:	shl    bl,1
  415040:	dec    esi
  415041:	inc    ebp
  415042:	rol    BYTE PTR [esi+0x52],cl
  415045:	inc    ebx
  415046:	mov    bl,0x66
  415048:	std    
  415049:	bound  ecx,QWORD PTR [edi+0x2f]
  41504c:	fcmovu st,st(3)
  41504e:	daa    
  41504f:	fdivr  st(0),st
  415051:	shl    edi,cl
  415053:	cmp    DWORD PTR ds:0xa6f9be06,0x58
  41505a:	sbb    DWORD PTR [ebx+edx*1-0x4414bcf],edi
  415061:	jns    0x41504e
  415063:	xchg   ebp,eax
  415064:	fdiv   DWORD PTR [ecx+edi*2]
  415067:	rcl    BYTE PTR [ebp-0x49],1
  41506a:	pop    edi
  41506b:	jl     0x415086
  41506d:	cmp    dh,dh
  41506f:	fimul  DWORD PTR [ecx+edx*8+0x3e]
  415073:	(bad)  
  415074:	int    0x69
  415076:	rcl    BYTE PTR [ebx+0x178ca65a],0x5f
  41507d:	pop    edx
  41507e:	fldcw  WORD PTR [ebx+0x5da0825]
  415084:	push   ebx
  415085:	pop    ecx
  415086:	dec    edi
  415087:	xchg   ebx,eax
  415088:	sbb    eax,0x45d2c169
  41508d:	mov    ch,0x1e
  41508f:	emms   
  415091:	xchg   edi,eax
  415092:	push   edx
  415093:	jns    0x4150e6
  415095:	push   0xe2e15cb4
  41509a:	(bad)  
  41509b:	sbb    al,0x23
  41509d:	mov    ebx,0x249d3fd1
  4150a2:	lock aas 
  4150a4:	movsx  ebx,WORD PTR [ebx]
  4150a7:	pop    ds
  4150a8:	repnz inc ebx
  4150aa:	adc    al,0xbf
  4150ac:	adc    DWORD PTR [ebp-0x6792396f],eax
  4150b2:	lahf   
  4150b3:	push   cs
  4150b4:	jmp    0xc097:0x585dfde0
  4150bb:	jge    0x415049
  4150bd:	call   0x9ba8:0x1128fb27
  4150c4:	add    DWORD PTR [edi+eax*4],edi
  4150c7:	jne    0x4150e4
  4150c9:	in     al,0xef
  4150cb:	push   cs
  4150cc:	sar    BYTE PTR [edx+0x491aeb73],cl
  4150d2:	jns    0x415144
  4150d4:	push   eax
  4150d5:	outs   dx,DWORD PTR ds:[esi]
  4150d6:	add    eax,0xc89ef6e9
  4150db:	xchg   esp,eax
  4150dc:	xchg   edx,eax
  4150dd:	inc    esp
  4150de:	cmp    eax,0xf1d0552a
  4150e3:	cmp    eax,0x8951c4a4
  4150e8:	(bad)  
  4150e9:	repnz adc BYTE PTR [ecx+0x3b],ch
  4150ed:	nop
  4150ee:	dec    esi
  4150ef:	ret    0x431b
  4150f2:	dec    edx
  4150f3:	jp     0x41516d
  4150f5:	mov    esi,0xc241b9a7
  4150fa:	adc    eax,0x82267e8f
  4150ff:	fistp  DWORD PTR [edx-0x66c97785]
  415105:	push   es
  415106:	add    eax,DWORD PTR [edi-0x6dd0aad8]
  41510c:	jecxz  0x4150d5
  41510e:	addr16 mov ebp,ss
  415111:	test   BYTE PTR [ecx],0xa6
  415114:	test   al,0x1
  415116:	jno    0x415173
  415118:	add    eax,0xae1cd48
  41511d:	mov    WORD PTR [esi],gs
  41511f:	les    ebx,FWORD PTR [esi+0x4b]
  415122:	jmp    0x13332094
  415127:	mov    ebx,0xf0545e25
  41512c:	dec    ebp
  41512d:	xor    edi,DWORD PTR [esi-0x59775433]
  415133:	lods   eax,DWORD PTR ds:[esi]
  415134:	and    ch,BYTE PTR [edi-0x67f37f21]
  41513a:	pop    esp
  41513b:	or     bh,al
  41513d:	ja     0x4151a5
  41513f:	stc    
  415140:	jecxz  0x4151b0
  415142:	in     al,dx
  415143:	adc    DWORD PTR [ecx+0x64],edx
  415146:	add    dl,bl
  415148:	stos   BYTE PTR es:[edi],al
  415149:	std    
  41514a:	pop    ss
  41514b:	mov    ch,0xa5
  41514d:	push   esi
  41514e:	or     al,0xd6
  415150:	adc    DWORD PTR [eax-0x5b],0xd0b9640b
  415157:	aas    
  415158:	je     0x41519b
  41515a:	fdiv   DWORD PTR [edi]
  41515c:	test   eax,0x1dc8623a
  415161:	rcr    BYTE PTR [esi-0x6c],cl
  415164:	lock adc DWORD PTR [eax+0x4caee855],0x4aeeabb6
  41516f:	into   
  415170:	push   eax
  415171:	out    0x80,eax
  415173:	rcl    esi,cl
  415175:	std    
  415176:	adc    al,0x8a
  415178:	pop    esi
  415179:	adc    BYTE PTR [ecx],0x9b
  41517c:	inc    ebp
  41517d:	scas   eax,DWORD PTR es:[edi]
  41517e:	fsub   QWORD PTR [eax]
  415180:	inc    edx
  415181:	xchg   DWORD PTR [eax+eiz*1],edx
  415184:	add    cl,BYTE PTR [ebp-0x58]
  415187:	(bad)  
  415188:	dec    eax
  415189:	pop    ds
  41518a:	jno    0x415162
  41518c:	mov    WORD PTR [ebp+0x15],ds
  41518f:	hlt    
  415190:	jo     0x4151ca
  415192:	xor    ebx,DWORD PTR [ecx]
  415194:	(bad)  
  415195:	cmp    eax,0x4b30b996
  41519a:	pop    ds
  41519b:	daa    
  41519c:	mov    dh,BYTE PTR ds:0x2bb821b7
  4151a2:	cmp    al,0x54
  4151a4:	test   DWORD PTR [edx+0x3bbc696f],esp
  4151aa:	fiadd  WORD PTR [ecx-0x42c63478]
  4151b0:	mov    DWORD PTR [edi-0x1],0xe479e71
  4151b7:	test   BYTE PTR [edi-0x6a],0x63
  4151bb:	gs mov ebp,0xb75730c5
  4151c1:	xchg   esi,eax
  4151c2:	int3   
  4151c3:	xchg   esi,eax
  4151c4:	icebp  
  4151c5:	hlt    
  4151c6:	lock inc edi
  4151c8:	dec    eax
  4151c9:	inc    ecx
  4151ca:	adc    ah,ch
  4151cc:	retf   
  4151cd:	dec    esp
  4151ce:	mov    bl,0xca
  4151d0:	ficom  WORD PTR [ebx]
  4151d2:	xor    DWORD PTR [ecx-0xb],ebp
  4151d5:	gs pop edi
  4151d7:	dec    esi
  4151d8:	xchg   edi,eax
  4151d9:	mov    bh,bh
  4151db:	mov    dh,0xc5
  4151dd:	push   cs
  4151de:	mov    ch,0x6a
  4151e0:	addr16 loop 0x41516d
  4151e3:	in     al,0xe4
  4151e5:	in     al,dx
  4151e6:	enter  0xc0a8,0x28
  4151ea:	mov    esi,0x1aebf9f6
  4151ef:	(bad)  
  4151f0:	fisub  WORD PTR [ecx+0xe]
  4151f3:	push   esi
  4151f4:	imul   ebx,edi,0x7f
  4151f7:	sub    cl,BYTE PTR [ecx+0x3e]
  4151fa:	xor    edx,DWORD PTR gs:[edx-0x2d]
  4151fe:	(bad)  
  415200:	cmp    BYTE PTR [esi+0x7a],dl
  415203:	cmp    al,0xe5
  415205:	pop    eax
  415206:	nop
  415207:	loope  0x4151b3
  415209:	sti    
  41520a:	sub    dl,BYTE PTR [eax-0x6]
  41520d:	arpl   ax,dx
  41520f:	leave  
  415210:	or     esp,ecx
  415212:	mov    gs,esi
  415214:	popa   
  415215:	and    eax,0x1d4c5415
  41521a:	test   al,0xba
  41521c:	imul   ecx,DWORD PTR [ebx+0x6aaaba69],0x25
  415223:	pusha  
  415224:	pop    edx
  415225:	addr16 loopne 0x415262
  415228:	int    0x7b
  41522a:	ja     0x415285
  41522c:	dec    ebx
  41522d:	shl    dl,cl
  41522f:	inc    ebp
  415230:	ret    0x5650
  415233:	shl    BYTE PTR [esi-0x5a0e5824],cl
  415239:	adc    al,0x14
  41523b:	mov    ebp,0x27152f07
  415240:	or     esi,DWORD PTR ds:0x780840e3
  415246:	scas   al,BYTE PTR es:[edi]
  415247:	xor    cl,bl
  415249:	sbb    edx,DWORD PTR [eax]
  41524b:	stc    
  41524c:	inc    ecx
  41524d:	add    BYTE PTR [esi-0x531f2a04],ah
  415253:	adc    edx,DWORD PTR [ecx]
  415255:	sub    dh,BYTE PTR [edi]
  415257:	loope  0x415276
  415259:	add    eax,0x417953ec
  41525e:	adc    ecx,edx
  415260:	loopne 0x4152cc
  415262:	into   
  415263:	mov    al,ds:0x21daa750
  415268:	jo     0x415242
  41526a:	inc    ebx
  41526b:	push   ebp
  41526c:	fstp   QWORD PTR [ebp-0x7a9bad7d]
  415272:	and    eax,0x2cccffc
  415277:	popf   
  415278:	add    BYTE PTR ds:0x8e8f7e0b,0x76
  41527f:	fisub  DWORD PTR ds:0x343aa8f3
  415285:	add    DWORD PTR [edx+0x24],0xdf82321f
  41528c:	and    bl,BYTE PTR [edx+0x14d7c019]
  415292:	out    0x74,eax
  415294:	rol    DWORD PTR [esi-0x58],0xd5
  415298:	test   al,0x30
  41529a:	add    cl,BYTE PTR [ebx+0x18da704a]
  4152a0:	idiv   DWORD PTR [ecx]
  4152a2:	and    DWORD PTR [ebp+eax*4+0x733bab6d],esp
  4152a9:	loop   0x415272
  4152ab:	es sti 
  4152ad:	sbb    cl,BYTE PTR [edi-0x35]
  4152b0:	lds    eax,FWORD PTR [esi+esi*1-0x75f2bd43]
  4152b7:	adc    DWORD PTR [edi],esp
  4152b9:	cwde   
  4152ba:	jg     0x4152fd
  4152bc:	int3   
  4152bd:	aam    0x47
  4152bf:	je     0x415264
  4152c1:	push   ss
  4152c2:	or     bl,BYTE PTR [ecx-0x468b0f11]
  4152c8:	cmp    al,0x79
  4152ca:	clc    
  4152cb:	sbb    DWORD PTR [ebx],eax
  4152cd:	cmp    bl,BYTE PTR [ebx]
  4152cf:	inc    esp
  4152d0:	push   0x2
  4152d2:	xor    al,0x79
  4152d4:	cmp    BYTE PTR [esp+ecx*2-0x1f324ced],ah
  4152db:	dec    esp
  4152dc:	adc    bl,BYTE PTR ss:[edx]
  4152df:	add    BYTE PTR [esi],bl
  4152e1:	loope  0x4152d6
  4152e3:	push   cs
  4152e4:	mov    ds:0x1e5fbb6e,al
  4152e9:	add    al,BYTE PTR [ebp-0x35]
  4152ec:	retf   
  4152ed:	adc    esi,DWORD PTR [ebx]
  4152ef:	jge    0x415310
  4152f1:	ss pop ecx
  4152f3:	adc    cl,BYTE PTR [eax]
  4152f5:	dec    esp
  4152f6:	dec    edx
  4152f7:	cld    
  4152f8:	retf   
  4152f9:	push   ecx
  4152fa:	sub    ah,BYTE PTR [ecx-0x6ce8ee7]
  415300:	aad    0x83
  415302:	push   ss
  415303:	idiv   BYTE PTR [edi]
  415305:	test   BYTE PTR [edx],dl
  415307:	jge    0x21b46ffa
  41530d:	fldcw  WORD PTR [edi]
  41530f:	sbb    bl,BYTE PTR [eax-0x13]
  415312:	pushf  
  415313:	popa   
  415314:	mov    ecx,?
  415316:	imul   ecx,DWORD PTR [ebp+0x50],0xbe5cd099
  41531d:	xlat   BYTE PTR ds:[ebx]
  41531e:	fucom  st(6)
  415320:	cli    
  415321:	jle    0x41539e
  415323:	fild   QWORD PTR ds:0xb95b3c31
  415329:	mov    ds:0x6824576d,eax
  41532e:	add    cl,BYTE PTR [eax]
  415330:	aas    
  415331:	imul   esi,DWORD PTR [esi+0x2],0x59e9cb96
  415338:	push   esp
  415339:	push   ebx
  41533a:	mov    DWORD PTR ds:0x3fd8b73c,ecx
  415340:	adc    eax,0x97ba4ef0
  415345:	ror    DWORD PTR fs:[eax-0x3f],0x51
  41534a:	xchg   esp,eax
  41534b:	mov    WORD PTR [esi],?
  41534d:	stos   DWORD PTR es:[edi],eax
  41534e:	stc    
  41534f:	dec    esp
  415350:	xchg   edi,eax
  415351:	mov    esp,0xf36874d4
  415356:	mov    esp,0x67c05b21
  41535b:	mov    DWORD PTR ds:0xbb6a4c54,esp
  415361:	aas    
  415362:	mov    al,0xa4
  415364:	sti    
  415365:	adc    al,0xbd
  415367:	pop    eax
  415368:	inc    ecx
  415369:	and    edi,DWORD PTR [ecx+0x44]
  41536c:	mov    ds:0x5bc8f3de,eax
  415371:	mov    cl,0xb3
  415373:	cmc    
  415374:	retf   
  415375:	test   al,0xf5
  415377:	adc    eax,esi
  415379:	xchg   edx,eax
  41537a:	iret   
  41537b:	or     DWORD PTR [ecx+0x1c],ecx
  41537e:	jns    0x415340
  415380:	sub    al,0x7a
  415382:	mov    edi,ebx
  415384:	inc    ecx
  415385:	add    eax,DWORD PTR [eax]
  415387:	add    BYTE PTR [eax],ch
  415389:	push   edx
  41538a:	jns    0x415391
  41538c:	pop    ds
  41538d:	mov    cl,0x5a
  41538f:	hlt    
  415390:	sub    edx,0xffffff81
  415393:	daa    
  415394:	in     eax,0xae
  415396:	push   edx
  415397:	jne    0x41531f
  415399:	inc    esi
  41539a:	push   esp
  41539b:	mov    esp,0x8c8a1d66
  4153a0:	cld    
  4153a1:	jecxz  0x415396
  4153a3:	call   0x7d3165d6
  4153a8:	scas   al,BYTE PTR es:[edi]
  4153a9:	aas    
  4153aa:	xchg   esi,eax
  4153ab:	sbb    ah,BYTE PTR [esi]
  4153ad:	mov    esp,0xf167d9c3
  4153b2:	push   edi
  4153b3:	cmp    dl,ah
  4153b5:	lods   eax,DWORD PTR ds:[esi]
  4153b6:	imul   ecx,DWORD PTR [ebx-0x790780b1],0xffffffbb
  4153bd:	cdq    
  4153be:	call   0x99185b42
  4153c3:	into   
  4153c4:	jl     0x4153f4
  4153c6:	pusha  
  4153c7:	mov    bh,0x6d
  4153c9:	mov    BYTE PTR [esi-0x5f],ch
  4153cc:	mul    DWORD PTR [eax+eiz*8+0x153e61cd]
  4153d3:	fsubr  DWORD PTR [eax+0x57]
  4153d6:	call   0x2053:0xb57e0646
  4153dd:	mov    WORD PTR [edi+0x5d],cs
  4153e0:	sub    eax,0x359afe08
  4153e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153e6:	in     eax,0x65
  4153e8:	test   bl,ch
  4153ea:	jbe    0x4153da
  4153ec:	sbb    eax,0x96242a29
  4153f1:	jle    0x415396
  4153f3:	mov    ebp,0x72ab0f08
  4153f8:	dec    eax
  4153f9:	outs   dx,BYTE PTR ds:[esi]
  4153fa:	push   edx
  4153fb:	or     al,0xca
  4153fd:	pop    ss
  4153fe:	xor    edx,DWORD PTR [eax-0x5de1b3d5]
  415404:	mov    ah,0x7b
  415406:	stos   DWORD PTR es:[edi],eax
  415407:	mov    al,0xbc
  415409:	enter  0x3211,0x6a
  41540d:	adc    BYTE PTR [esi+0x59],bh
  415410:	jae    0x41540a
  415412:	mov    ecx,0x202a0262
  415417:	adc    DWORD PTR [eax],edx
  415419:	aas    
  41541a:	xchg   DWORD PTR [ebx],esp
  41541c:	popa   
  41541d:	fnsave [eax-0x54a124f0]
  415423:	cli    
  415424:	inc    edi
  415425:	ss lock retf 
  415428:	push   0xffffff87
  41542a:	es mov esp,ecx
  41542d:	shl    DWORD PTR [ebx+0x5967179],cl
  415433:	push   ds
  415434:	inc    ebx
  415435:	push   ebx
  415436:	cld    
  415437:	push   es
  415438:	add    al,0xc1
  41543a:	test   al,0x9b
  41543c:	xchg   DWORD PTR [ebx],ecx
  41543e:	(bad)  
  415440:	and    bh,ch
  415442:	call   0x4592:0x5be7b4ce
  415449:	jae    0x4154bf
  41544b:	retf   
  41544c:	mov    esp,0xe0477255
  415451:	add    al,0xbf
  415453:	inc    ebp
  415454:	xor    dh,cl
  415456:	lods   al,BYTE PTR ds:[esi]
  415457:	xchg   ecx,eax
  415458:	xchg   ebx,eax
  415459:	add    al,BYTE PTR ds:0x51b73230
  41545f:	push   ecx
  415460:	pop    es
  415461:	sub    al,BYTE PTR [ebx-0x7c]
  415464:	push   0xce18b910
  415469:	cdq    
  41546a:	add    eax,DWORD PTR [edx]
  41546c:	mov    cs,WORD PTR [edx+0x13b774c]
  415472:	iret   
  415473:	push   ds
  415474:	add    eax,0xd9335b8b
  415479:	add    ecx,DWORD PTR [ecx-0x23]
  41547c:	nop
  41547d:	mov    bh,0xb1
  41547f:	and    dl,BYTE PTR [esi+0x5ef01340]
  415485:	pop    ecx
  415486:	xor    eax,0x7476ec2e
  41548b:	int    0x66
  41548d:	dec    ebp
  41548e:	fdiv   DWORD PTR ds:0xd35e0a91
  415494:	adc    al,0x6e
  415496:	mov    bh,0x39
  415498:	add    BYTE PTR [eax+0xd],dl
  41549b:	es dec ebx
  41549d:	mov    eax,0xdf4d36a5
  4154a2:	fwait
  4154a3:	outs   dx,BYTE PTR ds:[esi]
  4154a4:	iret   
  4154a5:	add    eax,0x77e19c16
  4154aa:	int    0x7f
  4154ac:	sahf   
  4154ad:	xor    DWORD PTR ss:[edi-0x34e0ab96],eax
  4154b4:	repnz daa 
  4154b6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4154b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154b9:	add    al,0x1e
  4154bb:	push   ss
  4154bc:	pop    edi
  4154bd:	mov    ch,0x87
  4154bf:	leave  
  4154c0:	add    al,0xde
  4154c2:	imul   esi,DWORD PTR [esi+0x27bd7d30],0x44327f37
  4154cc:	jb     0x415453
  4154ce:	mov    ebp,0xae726d86
  4154d3:	jb     0x41551b
  4154d5:	mov    eax,ds:0x9674be28
  4154da:	mov    BYTE PTR [eax+edi*2-0x51],bl
  4154de:	sub    edx,ecx
  4154e0:	fldenv [esi]
  4154e2:	shr    DWORD PTR [edx+0x47],0xef
  4154e6:	pop    ds
  4154e7:	aas    
  4154e8:	pop    ebp
  4154e9:	xchg   edx,eax
  4154ea:	hlt    
  4154eb:	push   edx
  4154ec:	rol    DWORD PTR [ecx+0x21867c],1
  4154f2:	scas   eax,DWORD PTR es:[edi]
  4154f3:	mov    ecx,0x40a4d50
  4154f8:	dec    edx
  4154f9:	ins    BYTE PTR es:[edi],dx
  4154fa:	ds and al,0x3
  4154fd:	pusha  
  4154fe:	mov    ebp,0x5f4685de
  415503:	popf   
  415504:	rcl    DWORD PTR [eax-0x6b4bc56c],0x8f
  41550b:	mov    ebx,0x7af84c0d
  415510:	ds out 0xd3,eax
  415513:	sub    dh,BYTE PTR [ebp-0x662e8074]
  415519:	pop    es
  41551a:	clc    
  41551b:	lds    edx,FWORD PTR [edx+0x7beb232d]
  415521:	mov    edi,0x9b843a39
  415526:	adc    edi,DWORD PTR [eax]
  415528:	mov    esi,0x15fce5c8
  41552d:	push   esp
  41552e:	xlat   BYTE PTR ds:[ebx]
  41552f:	mov    ecx,0xaf9847e2
  415534:	xchg   DWORD PTR [edi],esi
  415536:	and    bh,BYTE PTR [ebx]
  415538:	push   ebx
  415539:	fsub   DWORD PTR [ebx+edi*1+0x68]
  41553d:	cmp    ecx,edi
  41553f:	fs xchg ebp,esi
  415542:	lods   al,BYTE PTR ds:[esi]
  415543:	shl    BYTE PTR [edx],cl
  415545:	cdq    
  415546:	add    al,0x54
  415548:	arpl   di,bp
  41554a:	adc    bh,al
  41554c:	jecxz  0x41550c
  41554e:	retw   
  415550:	and    dh,dh
  415552:	int    0x31
  415554:	xlat   BYTE PTR ds:[ebx]
  415555:	push   ebp
  415556:	scas   al,BYTE PTR es:[edi]
  415557:	loope  0x4154fb
  415559:	nop    DWORD PTR [ecx+ebp*4]
  41555d:	cli    
  41555e:	sahf   
  41555f:	retf   0xe99
  415562:	inc    edi
  415563:	mov    cl,0x9a
  415565:	test   BYTE PTR [edx],bl
  415567:	mov    cl,0x76
  415569:	mov    esp,0x2d87ed0
  41556e:	mov    dh,0xac
  415570:	add    al,0xce
  415572:	adc    bl,ch
  415574:	ret    
  415575:	imul   DWORD PTR [edx-0x71]
  415578:	test   eax,0xf9d864e7
  41557d:	jo     0x4155f9
  41557f:	fidiv  DWORD PTR [eax]
  415581:	lods   al,BYTE PTR ds:[esi]
  415582:	push   ebp
  415583:	aas    
  415584:	retf   
  415585:	inc    esp
  415586:	pop    edx
  415587:	jmp    0x415537
  415589:	adc    BYTE PTR [esi+0x3297a8a2],ch
  41558f:	call   0x2a36:0xe7b0b1e4
  415596:	cdq    
  415597:	sub    DWORD PTR [edi-0x15],edx
  41559a:	mov    al,0x7e
  41559c:	jle    0x415618
  41559e:	mov    esp,0xabf969d1
  4155a3:	adc    esi,ebp
  4155a5:	(bad)  
  4155a6:	retf   
  4155a7:	(bad)  
  4155a8:	or     al,0xfb
  4155aa:	aam    0x7a
  4155ac:	mov    esi,0xe5e3c63b
  4155b1:	dec    esp
  4155b2:	jno    0x4155a6
  4155b4:	fiadd  DWORD PTR [ecx-0x1e]
  4155b7:	fnsave [esi+0x56a01a26]
  4155bd:	(bad)  
  4155be:	sub    BYTE PTR [esi],ah
  4155c0:	aad    0x33
  4155c2:	xchg   ebx,eax
  4155c3:	rcl    BYTE PTR [edx],cl
  4155c5:	pop    edx
  4155c6:	push   ebp
  4155c7:	cmp    ah,BYTE PTR [eax+0x5e89752e]
  4155cd:	or     DWORD PTR [edi+eiz*4],0xffffffc2
  4155d1:	sub    dl,cl
  4155d3:	jno    0x4155ae
  4155d5:	push   ebx
  4155d6:	xchg   edx,eax
  4155d7:	bnd ret 
  4155d9:	mov    esp,0xc29d62fb
  4155de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155df:	rcl    BYTE PTR [edi],cl
  4155e1:	pop    esp
  4155e2:	stc    
  4155e3:	or     al,0xaf
  4155e5:	mov    esp,0x3a3c2db9
  4155ea:	(bad)  
  4155eb:	jp     0x41561a
  4155ed:	int3   
  4155ee:	mov    eax,ds:0x6ddb44f0
  4155f3:	aam    0x35
  4155f5:	jmp    0xaf1d:0x60a936ab
  4155fc:	push   edi
  4155fd:	push   ebx
  4155fe:	mov    fs,edi
  415600:	dec    ecx
  415601:	sbb    cl,ch
  415603:	sbb    ah,dl
  415605:	or     al,0xe0
  415607:	xchg   edi,eax
  415608:	add    DWORD PTR [edx+0x3b],esi
  41560b:	sub    BYTE PTR [edi],ch
  41560d:	and    DWORD PTR [ebx],esi
  41560f:	xchg   DWORD PTR [edi-0x6c9c3736],ecx
  415615:	ret    
  415616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415618:	push   ss
  415619:	push   ecx
  41561a:	add    cl,ah
  41561c:	ja     0x41560a
  41561e:	dec    edx
  41561f:	and    eax,0x69f91c53
  415624:	sub    ebx,DWORD PTR [esi+0x3f93611c]
  41562a:	fs xchg ebp,eax
  41562c:	leave  
  41562d:	sbb    BYTE PTR [esp+esi*2+0x10],ch
  415631:	js     0x415695
  415633:	icebp  
  415634:	ffreep st(0)
  415636:	pusha  
  415637:	jmp    0x7712989f
  41563c:	popa   
  41563d:	test   al,bl
  41563f:	mov    ecx,0x83cf9a7f
  415644:	mov    ebp,0x7d7893ec
  415649:	or     edi,DWORD PTR [ebp-0x4e464bee]
  41564f:	sub    DWORD PTR [esi-0x5aa67c3c],0xb9979342
  415659:	mov    al,ds:0x840112da
  41565e:	pop    ecx
  41565f:	fnstenv [edi-0x3]
  415662:	pop    ebp
  415663:	arpl   WORD PTR [esi+edi*2-0x12],si
  415667:	fld    DWORD PTR [eax+esi*1-0x13d10a0d]
  41566e:	xor    eax,0x7e0a2dc4
  415673:	jl     0x4156b4
  415675:	stc    
  415676:	pop    DWORD PTR gs:[esp+edi*1-0x4308b97e]
  41567e:	adc    BYTE PTR [eax],al
  415680:	push   0xb52d6f04
  415685:	adc    eax,0x1d05a7e1
  41568a:	mov    ah,BYTE PTR [ebp+0x5c]
  41568d:	jo     0x4156bd
  41568f:	mov    ds:0x76fda3b6,eax
  415694:	popa   
  415695:	not    esi
  415697:	sub    edx,DWORD PTR [ebx-0x1d65fd8]
  41569d:	loopne 0x4156a4
  41569f:	popa   
  4156a0:	aam    0x7f
  4156a2:	inc    eax
  4156a3:	nop
  4156a4:	pop    ss
  4156a5:	(bad)  
  4156a6:	fldln2 
  4156a8:	jmp    0xf7c1:0xf4e27d14
  4156af:	or     esp,0xffffff81
  4156b2:	aam    0xde
  4156b4:	mov    esp,0x11272079
  4156b9:	xchg   ecx,eax
  4156ba:	imul   edi,DWORD PTR [edx],0x2320c219
  4156c0:	fdivr  st,st(7)
  4156c2:	jne    0x4156dd
  4156c4:	arpl   WORD PTR [edx+0x39f95d8f],ax
  4156ca:	adc    edx,DWORD PTR [ebx]
  4156cc:	pshufw mm2,mm2,0xbe
  4156d0:	fs xchg ebp,eax
  4156d2:	pop    esp
  4156d3:	pop    ebp
  4156d4:	push   edx
  4156d5:	push   ss
  4156d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156d7:	pop    edx
  4156d8:	cmp    DWORD PTR [edi+ebx*8],esp
  4156db:	popf   
  4156dc:	adc    BYTE PTR fs:[ebp-0x194390cd],ch
  4156e3:	fs xchg ecx,eax
  4156e5:	fimul  WORD PTR [eax+ebx*2]
  4156e8:	sub    esp,eax
  4156ea:	sha256msg1 xmm0,XMMWORD PTR [edi+0xa2f2d94]
  4156f2:	jmp    0x58f:0x808c36fe
  4156f9:	hlt    
  4156fa:	cwde   
  4156fb:	dec    ecx
  4156fc:	pop    ebp
  4156fd:	sbb    edi,edi
  4156ff:	mov    dh,0x3
  415701:	mov    ch,0xf7
  415703:	push   edi
  415704:	push   ds
  415705:	pop    ecx
  415706:	cmp    DWORD PTR [ebx+0x3797b2e5],edx
  41570c:	icebp  
  41570d:	pop    ebx
  41570e:	ss and eax,0x47aa6925
  415714:	pushf  
  415715:	add    al,0x42
  415717:	sbb    ch,0x83
  41571a:	arpl   bp,si
  41571c:	outs   dx,BYTE PTR ds:[esi]
  41571d:	pop    ds
  41571e:	rcr    DWORD PTR [ecx],0xab
  415721:	pop    edi
  415722:	sub    BYTE PTR [eax],al
  415724:	daa    
  415725:	test   BYTE PTR [edx+0x40],al
  415728:	dec    edi
  415729:	ja     0x41579c
  41572b:	fdiv   DWORD PTR [ecx]
  41572d:	dec    esi
  41572e:	adc    al,BYTE PTR [ecx-0x1794f4d4]
  415734:	jmp    0x4157a0
  415736:	cwde   
  415737:	retf   
  415738:	loopne 0x415783
  41573a:	bound  eax,QWORD PTR [edx+0x0]
  41573d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41573e:	test   DWORD PTR [edx],esp
  415740:	sub    eax,0x26b98952
  415745:	add    esp,eax
  415747:	dec    edx
  415748:	and    esi,edi
  41574a:	stos   DWORD PTR es:[edi],eax
  41574b:	pop    edi
  41574c:	cli    
  41574d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41574e:	push   ebp
  41574f:	out    dx,eax
  415750:	xchg   DWORD PTR [eax-0x17],edi
  415753:	in     eax,dx
  415754:	pop    ebp
  415755:	mov    ah,BYTE PTR [edi+0x2b]
  415758:	pop    esi
  415759:	mov    fs:0x75eca582,al
  41575f:	mov    al,ds:0x30137af3
  415764:	mov    DWORD PTR [esi-0x3b],esp
  415767:	scas   eax,DWORD PTR es:[edi]
  415768:	adc    BYTE PTR [ecx+0x5e],bh
  41576b:	pushf  
  41576c:	stos   DWORD PTR es:[edi],eax
  41576d:	mov    ah,0xab
  41576f:	pop    es
  415770:	push   ebp
  415771:	xchg   bl,dl
  415773:	scas   al,BYTE PTR es:[edi]
  415774:	xor    eax,0x6d465ab2
  415779:	loop   0x415734
  41577b:	cwde   
  41577c:	xor    BYTE PTR ds:0xdefcbf14,ch
  415782:	nop
  415783:	mov    eax,ds:0xd943eed
  415788:	jb     0x4157ae
  41578a:	je     0x41574a
  41578c:	loopne 0x415763
  41578e:	loopne 0x415770
  415790:	mov    bh,0xdf
  415792:	scas   eax,DWORD PTR es:[edi]
  415793:	pop    ebp
  415794:	cmp    DWORD PTR [eax+0x1ea01886],esp
  41579a:	std    
  41579b:	xor    ecx,ebx
  41579d:	and    eax,0x232aa6c5
  4157a2:	cmp    edx,DWORD PTR [ecx-0x1164be37]
  4157a8:	mov    ah,0x3f
  4157aa:	das    
  4157ab:	cmp    esp,DWORD PTR [ebp+edi*2-0x61]
  4157af:	leave  
  4157b0:	push   es
  4157b1:	aad    0xfd
  4157b3:	jmp    0x9bf9:0x811c006c
  4157ba:	call   0xcd4b435c
  4157bf:	cmp    al,0x26
  4157c1:	stos   DWORD PTR es:[edi],eax
  4157c2:	and    eax,DWORD PTR [ebp+0x6f]
  4157c5:	or     esp,DWORD PTR [ebp+0x25348ec0]
  4157cb:	mov    DWORD PTR [ebx-0x43],0x89d93ee
  4157d2:	push   ebx
  4157d3:	add    al,0x68
  4157d5:	into   
  4157d6:	out    dx,eax
  4157d7:	lods   al,BYTE PTR ds:[esi]
  4157d8:	daa    
  4157d9:	enter  0xdda5,0x6e
  4157dd:	in     al,dx
  4157de:	leave  
  4157df:	outs   dx,BYTE PTR ds:[esi]
  4157e0:	mov    esi,0xa1ddc7ed
  4157e5:	sub    eax,0xa6ea4921
  4157ea:	(bad)  
  4157eb:	push   ecx
  4157ec:	leave  
  4157ed:	xor    DWORD PTR [ebx+0x38],0xffffff88
  4157f1:	mov    dl,0x57
  4157f3:	pop    ebx
  4157f4:	outs   dx,BYTE PTR ds:[esi]
  4157f5:	xchg   edx,eax
  4157f6:	mov    esi,0x6a43f378
  4157fb:	mov    ebx,0x666047ec
  415800:	fs call 0x516:0x78cd16b3
  415808:	fistp  DWORD PTR [edx]
  41580a:	jne    0x415796
  41580c:	loope  0x415875
  41580e:	inc    ebx
  41580f:	scas   al,BYTE PTR es:[edi]
  415810:	lds    esp,FWORD PTR [eax-0x3e09e9db]
  415816:	cdq    
  415817:	push   cs
  415818:	cs mov edx,ecx
  41581b:	fiadd  DWORD PTR [ecx+0x23a87f5f]
  415821:	adc    ebx,ebx
  415823:	hlt    
  415824:	cwde   
  415825:	in     eax,dx
  415826:	call   0xbd6b:0xdae00a4f
  41582d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41582e:	cs js  0x4157f4
  415831:	lock popa 
  415833:	mov    DWORD PTR [eax+0x56cf87a],ebx
  415839:	pop    ds
  41583a:	fisubr WORD PTR [edx+edx*4-0x196d2cbb]
  415841:	adc    BYTE PTR [eax-0x6aa48f5e],bh
  415847:	mov    BYTE PTR [edi],al
  415849:	xor    DWORD PTR [edx-0x66],esi
  41584c:	repz sub DWORD PTR [esi+0x2eaaa97f],ebx
  415853:	push   ecx
  415854:	xor    al,0x38
  415856:	leave  
  415857:	popa   
  415858:	lods   al,BYTE PTR ds:[esi]
  415859:	jae    0x415894
  41585b:	jns    0x4158d8
  41585d:	inc    esi
  41585e:	add    bl,al
  415860:	mov    BYTE PTR [eax-0x29],bh
  415863:	dec    eax
  415864:	inc    eax
  415865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415866:	scas   al,BYTE PTR es:[edi]
  415867:	add    DWORD PTR [edx],ebp
  415869:	ror    edi,cl
  41586b:	jne    0x4157f4
  41586d:	call   0x9142:0x1d1325e4
  415874:	test   DWORD PTR [eax],ecx
  415876:	imul   ebp,DWORD PTR [edi+0x5e5186f5],0x40f9a75c
  415880:	sti    
  415881:	retf   
  415882:	mov    DWORD PTR [ecx+esi*8+0x10bd4d2c],ebx
  415889:	pop    edi
  41588a:	ror    BYTE PTR [ecx-0x7c],0xa3
  41588e:	mov    cl,0xd7
  415890:	loope  0x415826
  415892:	lahf   
  415893:	and    DWORD PTR [ecx-0x3bb4ac93],0xffffffa8
  41589a:	cli    
  41589b:	js     0x4158ab
  41589d:	outs   dx,DWORD PTR ds:[esi]
  41589e:	or     DWORD PTR [edx+0x4e64bbb7],esi
  4158a4:	lahf   
  4158a5:	mov    ebp,0x5e74f639
  4158aa:	xchg   esp,eax
  4158ab:	sbb    BYTE PTR [edi],dl
  4158ad:	pop    esp
  4158ae:	lea    edi,[ecx+0x74d6a5d2]
  4158b4:	mov    es:0x463a5275,eax
  4158ba:	repz mov bl,0x6c
  4158bd:	data16 aas 
  4158bf:	pop    ss
  4158c0:	add    DWORD PTR [ebx-0x11],eax
  4158c3:	sub    DWORD PTR [edi],ebp
  4158c5:	sub    edx,DWORD PTR [eax-0xc]
  4158c8:	sar    BYTE PTR [ecx+0x52a8abc6],cl
  4158ce:	add    esi,DWORD PTR [ebp+0x36]
  4158d1:	cs xchg dl,al
  4158d4:	je     0x4158fb
  4158d6:	xchg   ebx,eax
  4158d7:	push   esi
  4158d8:	das    
  4158d9:	mov    dh,0x84
  4158db:	leave  
  4158dc:	icebp  
  4158dd:	cmp    al,0xb3
  4158df:	xor    eax,0xb222efb3
  4158e4:	sar    ch,cl
  4158e6:	mov    ah,0xaf
  4158e8:	(bad)  
  4158e9:	jge    0x4158f0
  4158eb:	mov    al,0x6
  4158ed:	fld    DWORD PTR [eax-0x21]
  4158f0:	push   edx
  4158f1:	je     0x41589a
  4158f3:	rcl    BYTE PTR [edx+0x58],0xb2
  4158f7:	xor    al,0x18
  4158f9:	or     esp,DWORD PTR ds:0x1178aa1
  4158ff:	jp     0x415968
  415901:	and    dl,BYTE PTR [esi-0x72]
  415904:	sub    al,0x4e
  415906:	bound  edx,QWORD PTR [esp+ebx*1]
  415909:	scas   al,BYTE PTR es:[edi]
  41590a:	iret   
  41590b:	shl    DWORD PTR [esi-0x5328a4f0],cl
  415911:	lea    esi,[eax+ebp*2-0x10]
  415915:	inc    esp
  415916:	mov    DWORD PTR [eax+ebx*8+0x57605aa4],esi
  41591d:	adc    eax,0xe1e1975e
  415922:	stos   DWORD PTR es:[edi],eax
  415923:	std    
  415924:	js     0x415971
  415926:	mov    BYTE PTR [eax-0x2a],ah
  415929:	(bad)  
  41592b:	test   BYTE PTR [esi+0xa09b870],bl
  415931:	(bad)  
  415932:	popa   
  415933:	ss mov cl,0x80
  415936:	pop    ebp
  415937:	gs cld 
  415939:	or     DWORD PTR [ecx-0x9085d8],ecx
  41593f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415940:	shr    DWORD PTR [esi],0xdf
  415943:	xchg   ebp,eax
  415944:	fs mov cl,0x50
  415947:	icebp  
  415948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415949:	sti    
  41594a:	in     al,0xf0
  41594c:	or     al,0x4
  41594e:	test   DWORD PTR [ecx+0xd041c0d],ebp
  415954:	in     al,0xb6
  415956:	xor    dl,BYTE PTR [edi]
  415958:	bound  edx,QWORD PTR [ebp+ebx*2+0x61]
  41595c:	mov    ch,0xe8
  41595e:	adc    al,BYTE PTR [edx]
  415960:	inc    edx
  415961:	jae    0x4158f1
  415963:	sub    al,BYTE PTR [ebx]
  415965:	cmp    DWORD PTR [edi+0x557f31c4],edx
  41596b:	out    dx,eax
  41596c:	sbb    cl,BYTE PTR [ebx]
  41596e:	cmp    dl,dh
  415970:	xchg   esi,eax
  415971:	jo     0x41592e
  415973:	stc    
  415974:	push   ebx
  415975:	pop    edi
  415976:	in     al,0x26
  415978:	mov    ebx,0x4c1f277c
  41597d:	push   ds
  41597e:	stc    
  41597f:	rcl    BYTE PTR [edx],cl
  415981:	loopne 0x41595d
  415983:	es pop eax
  415985:	aad    0x2b
  415987:	push   eax
  415988:	popa   
  415989:	dec    ebx
  41598a:	retf   0x2442
  41598d:	xor    esi,DWORD PTR [esi-0x4efcef28]
  415993:	jp     0x41591e
  415995:	jecxz  0x415922
  415997:	add    al,BYTE PTR [esi-0x56f4cc2d]
  41599d:	lds    esp,FWORD PTR [eax-0x62426201]
  4159a3:	dec    ecx
  4159a4:	sar    ebp,0xcb
  4159a7:	mov    ecx,0x2f4d1a79
  4159ac:	sbb    bh,BYTE PTR [edx]
  4159ae:	inc    ecx
  4159af:	fbld   TBYTE PTR [edi+esi*4]
  4159b2:	mov    ebx,0xc9a9b071
  4159b7:	or     esi,ecx
  4159b9:	imul   ebx,DWORD PTR [ebp-0x2b],0xe195efb0
  4159c0:	add    BYTE PTR [ebp-0xdb16785],al
  4159c6:	xor    ch,dh
  4159c8:	sbb    al,0x59
  4159ca:	mov    ebx,0x34306748
  4159cf:	rcr    ecx,0xd9
  4159d2:	jmp    0x29fe:0x7066a2f
  4159d9:	mov    ds:0xf9ecaba,al
  4159de:	sbb    BYTE PTR [ebx-0x14],dl
  4159e1:	push   esi
  4159e2:	jp     0x415a1e
  4159e4:	mov    edi,0x230bfd12
  4159e9:	(bad)  
  4159ea:	pop    edi
  4159eb:	sub    BYTE PTR [eax-0xf],dl
  4159ee:	push   esp
  4159ef:	bound  eax,QWORD PTR [edx-0x58]
  4159f2:	retf   
  4159f3:	or     BYTE PTR [edi+0x63],bh
  4159f6:	mov    ebp,0x2f4607d1
  4159fb:	and    dh,BYTE PTR [edi+0x42759b0c]
  415a01:	dec    edx
  415a02:	inc    ebx
  415a03:	cmp    dh,BYTE PTR [ecx+0x266361a8]
  415a09:	mov    esp,0x4127924e
  415a0e:	push   ecx
  415a0f:	repz out dx,eax
  415a11:	setl   BYTE PTR [edi-0x29]
  415a15:	sbb    ebp,ebx
  415a17:	(bad)  
  415a18:	(bad)  
  415a19:	mov    cl,0x1e
  415a1b:	xchg   ebx,eax
  415a1c:	cmp    al,0x30
  415a1e:	fldenv [esi+0x34]
  415a21:	add    ecx,ecx
  415a23:	mov    ds:0x4db93c93,eax
  415a28:	dec    eax
  415a29:	and    ebp,DWORD PTR [ebp+0x32]
  415a2c:	jns    0x415a9d
  415a2e:	mov    ?,ebp
  415a30:	hlt    
  415a31:	in     eax,0x10
  415a33:	xor    ah,BYTE PTR [ebp-0x8]
  415a36:	or     eax,DWORD PTR [ecx+0x45]
  415a39:	(bad)  
  415a3a:	jl     0x415a8f
  415a3c:	pop    ebp
  415a3d:	les    ebx,FWORD PTR [eax]
  415a3f:	xor    edx,DWORD PTR [ecx+0x4]
  415a42:	ins    DWORD PTR es:[edi],dx
  415a43:	and    eax,0xda6de00
  415a48:	bound  esp,QWORD PTR [esp+ecx*2+0x3b]
  415a4c:	pop    ecx
  415a4d:	scas   al,BYTE PTR es:[edi]
  415a4e:	rcl    DWORD PTR [esi-0x2b110cb5],0xb7
  415a55:	xor    al,0x16
  415a57:	xor    bh,BYTE PTR [esp+ecx*8+0x35]
  415a5b:	rcr    esi,1
  415a5d:	xor    edx,ebx
  415a5f:	add    eax,0x290ecc9e
  415a64:	cmp    al,0xa5
  415a66:	stos   BYTE PTR es:[edi],al
  415a67:	clc    
  415a68:	push   es
  415a69:	sub    BYTE PTR [ebp-0xc],ch
  415a6c:	lods   al,BYTE PTR ds:[esi]
  415a6d:	test   eax,0xf83c39f2
  415a72:	pop    ebp
  415a73:	adc    esi,DWORD PTR [ecx+ebp*2]
  415a76:	mov    eax,0xf657fd5c
  415a7b:	jae    0x415a83
  415a7d:	and    al,0x88
  415a7f:	out    dx,eax
  415a80:	loopne 0x415ad0
  415a82:	jmp    0x767a:0x2e2d88f2
  415a89:	fadd   DWORD PTR [ebx]
  415a8b:	dec    ebp
  415a8c:	pop    ebx
  415a8d:	push   eax
  415a8e:	pusha  
  415a8f:	push   edx
  415a90:	xor    BYTE PTR [esi-0x623cc139],bh
  415a96:	jae    0x415abb
  415a98:	xor    DWORD PTR [edx],esp
  415a9a:	mov    al,ds:0x1e73ce09
  415a9f:	mov    WORD PTR [esi+ebx*4+0xa55a7b9],ds
  415aa6:	sbb    esp,ebp
  415aa8:	mov    WORD PTR [edx+edi*4-0x35d1f588],cs
  415aaf:	jmp    0xb1530cb3
  415ab4:	idiv   BYTE PTR [eax-0x32520475]
  415aba:	pop    ds
  415abb:	repz aad 0x9a
  415abe:	pop    edx
  415abf:	mov    ch,0xff
  415ac1:	xchg   ebx,eax
  415ac2:	mov    ch,0x3f
  415ac4:	imul   ebp,esi,0x11988bae
  415aca:	in     eax,0xa1
  415acc:	sub    eax,DWORD PTR [eax+0x66]
  415acf:	ins    BYTE PTR es:[edi],dx
  415ad0:	xchg   ecx,eax
  415ad1:	nop
  415ad2:	ss cs pop es
  415ad5:	test   al,0xd5
  415ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ad8:	xchg   BYTE PTR [ebp+0x74091f5b],bh
  415ade:	and    DWORD PTR [eax+0x2db67ba5],ecx
  415ae4:	and    al,BYTE PTR [edx+0x3fa0b7a1]
  415aea:	loopne 0x415ab7
  415aec:	mov    esi,0xf55c6a08
  415af1:	nop
  415af2:	stc    
  415af3:	je     0x415b35
  415af5:	xchg   edx,eax
  415af6:	pop    ecx
  415af7:	test   eax,0x6c96e1ab
  415afc:	mov    ecx,0xee36ceb4
  415b01:	mov    BYTE PTR [ebp-0x47bd1451],al
  415b07:	into   
  415b08:	das    
  415b09:	outs   dx,BYTE PTR ds:[esi]
  415b0a:	test   BYTE PTR [edi],ch
  415b0c:	popa   
  415b0d:	lods   eax,DWORD PTR ds:[esi]
  415b0e:	inc    ebx
  415b0f:	mov    esp,0x39dd0462
  415b14:	and    ebp,DWORD PTR [ecx]
  415b16:	push   eax
  415b17:	iret   
  415b18:	sub    bh,cl
  415b1a:	call   0xc63b1359
  415b1f:	xchg   esi,eax
  415b20:	sbb    ebx,DWORD PTR [edi-0x5b]
  415b23:	into   
  415b24:	scas   al,BYTE PTR es:[edi]
  415b25:	data16 mov al,ds:0xe6cf6dbb
  415b2b:	outs   dx,DWORD PTR ds:[esi]
  415b2c:	(bad)  
  415b2d:	mov    WORD PTR [ebp-0xb],fs
  415b30:	(bad)
  415b35:	hlt    
  415b36:	icebp  
  415b37:	pop    edi
  415b38:	test   BYTE PTR [ecx-0xe],ah
  415b3b:	push   cs
  415b3c:	inc    esi
  415b3d:	idiv   BYTE PTR [ebx]
  415b3f:	inc    ecx
  415b40:	mov    ah,0x35
  415b42:	adc    cl,BYTE PTR [ebp-0x3c748d80]
  415b48:	add    eax,0x54e7d070
  415b4d:	jp     0x415b9d
  415b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b50:	inc    esi
  415b51:	ins    DWORD PTR es:[edi],dx
  415b52:	sub    eax,0x8f27b65b
  415b57:	mov    bh,0xcb
  415b59:	mov    ebp,0xf49a1733
  415b5e:	and    ebp,DWORD PTR [edx+ebx*8+0x70]
  415b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b63:	in     al,dx
  415b64:	rol    cl,cl
  415b66:	aad    0xf6
  415b68:	ror    BYTE PTR [bp-0x576],1
  415b6d:	aas    
  415b6e:	jmp    0x415bc6
  415b70:	shr    DWORD PTR [ebp+ecx*2+0x6a3e1f25],cl
  415b77:	add    BYTE PTR [edi+0x518be122],ch
  415b7d:	cmp    BYTE PTR [ebx-0x2b],ch
  415b80:	adc    edi,DWORD PTR [esp+eiz*8]
  415b83:	jmp    0x415b35
  415b85:	sti    
  415b86:	adc    BYTE PTR [ecx+0x6bb0ebbd],bl
  415b8c:	and    BYTE PTR [ebx+0x34],cl
  415b8f:	aas    
  415b90:	sahf   
  415b91:	daa    
  415b92:	mov    BYTE PTR [eax+0x4cc65a93],dh
  415b98:	sub    eax,0x3865c171
  415b9d:	pop    es
  415b9e:	xchg   ebp,eax
  415b9f:	xchg   ebx,eax
  415ba0:	sub    eax,0x430ad323
  415ba5:	sbb    bh,BYTE PTR [eax+0x4c]
  415ba8:	fwait
  415ba9:	mov    dh,0x2c
  415bab:	cmp    BYTE PTR [ebx-0x59a6365c],dl
  415bb1:	retf   0xf6a8
  415bb4:	mov    fs,WORD PTR [esi]
  415bb6:	adc    BYTE PTR [ebp+0x595de09e],0x90
  415bbd:	xor    eax,0x6d810e26
  415bc2:	push   eax
  415bc3:	pop    esi
  415bc4:	add    BYTE PTR [ebx],al
  415bc6:	inc    esi
  415bc7:	push   esi
  415bc8:	in     eax,0x63
  415bca:	mov    al,0xd6
  415bcc:	lds    ebx,FWORD PTR [edx+ebp*1-0x357fb1f6]
  415bd3:	loope  0x415b80
  415bd5:	nop
  415bd6:	sbb    BYTE PTR [ebp-0x71],al
  415bd9:	xchg   BYTE PTR [edi-0x11],dh
  415bdc:	jmp    0x587796f8
  415be1:	xor    bl,BYTE PTR [eax-0x71db48f1]
  415be7:	adc    ebx,eax
  415be9:	sbb    BYTE PTR [ebx-0x10],bh
  415bec:	adc    BYTE PTR [edi+ecx*8+0x20ab0109],ah
  415bf3:	jecxz  0x415c04
  415bf5:	mov    cl,0x59
  415bf7:	mov    ch,0x6c
  415bf9:	inc    esi
  415bfa:	sbb    ebx,DWORD PTR [ecx]
  415bfc:	pop    es
  415bfd:	imul   ecx,edi,0x429f1b0d
  415c03:	retf   0xbf19
  415c06:	aaa    
  415c07:	mov    cs,WORD PTR [ebp-0x2a3d80b2]
  415c0d:	pop    ebx
  415c0e:	test   DWORD PTR [edx-0x693bbe00],ecx
  415c14:	adc    edi,0xffffff90
  415c17:	xchg   esp,eax
  415c18:	fstp   QWORD PTR [edi+0x7c]
  415c1b:	fiadd  WORD PTR [esi+0x3e34b159]
  415c21:	xlat   BYTE PTR ds:[ebx]
  415c22:	lods   eax,DWORD PTR ds:[esi]
  415c23:	shl    esp,1
  415c25:	call   0x615fb7ff
  415c2a:	or     BYTE PTR [esi],dh
  415c2c:	sub    BYTE PTR [ebx+0x16],dh
  415c2f:	mov    al,0xe4
  415c31:	pop    ebp
  415c32:	les    edx,FWORD PTR [eax-0x7201d6d]
  415c38:	in     al,0x1c
  415c3a:	or     esp,DWORD PTR [eax-0x8]
  415c3d:	add    dl,BYTE PTR [ebp-0x72]
  415c40:	push   es
  415c41:	out    0x8a,al
  415c43:	add    eax,0x48fd3ed6
  415c48:	jg     0x415c29
  415c4a:	mov    al,cl
  415c4c:	mov    al,ds:0x1193a674
  415c51:	adc    ebx,DWORD PTR [ebx+0x120047ff]
  415c57:	mov    bl,0xb0
  415c59:	outs   dx,DWORD PTR ds:[esi]
  415c5a:	int3   
  415c5b:	test   eax,0xb147714d
  415c60:	retf   0xd1ab
  415c63:	push   es
  415c64:	pop    edx
  415c65:	leave  
  415c66:	xchg   edx,eax
  415c67:	jle    0x415c22
  415c69:	xchg   esi,eax
  415c6a:	xor    DWORD PTR [edi+0x3b521b68],esi
  415c70:	out    dx,eax
  415c71:	xchg   esi,eax
  415c72:	mov    al,0x40
  415c74:	xor    eax,esi
  415c76:	jl     0x415c57
  415c78:	lds    esp,FWORD PTR [ebp-0x40]
  415c7b:	jp     0x415c6d
  415c7d:	mov    ch,0x43
  415c7f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c81:	dec    ecx
  415c82:	aad    0xc
  415c84:	retf   0xbcf8
  415c87:	mov    eax,0x7e08cd85
  415c8c:	lahf   
  415c8d:	fiadd  WORD PTR [ecx+0x55f94c05]
  415c93:	stos   BYTE PTR es:[edi],al
  415c94:	mov    dl,0x4b
  415c96:	cwde   
  415c97:	dec    edx
  415c98:	shr    BYTE PTR [ecx+0xbac3ae1],0x69
  415c9f:	scas   eax,DWORD PTR es:[edi]
  415ca0:	das    
  415ca1:	retf   
  415ca2:	push   ebx
  415ca3:	fsincos 
  415ca5:	cmp    ch,cl
  415ca7:	arpl   di,sp
  415ca9:	mov    ebx,0xefc79345
  415cae:	jnp    0x415c45
  415cb0:	stc    
  415cb1:	mov    dh,0xcf
  415cb3:	mov    cl,0x2
  415cb5:	sar    dl,cl
  415cb7:	cli    
  415cb8:	push   cs
  415cb9:	mov    BYTE PTR [eax+esi*1+0x143e3537],ch
  415cc0:	or     eax,DWORD PTR [ebx+0x3d0d5dcf]
  415cc6:	push   edx
  415cc7:	mov    ds:0x78a5088a,al
  415ccc:	test   DWORD PTR [edi+0x47],edx
  415ccf:	and    al,0x35
  415cd1:	xor    BYTE PTR [eax],dl
  415cd3:	mov    ebp,0xfdf3d5e2
  415cd8:	cmp    esp,DWORD PTR [ecx+eax*4+0x3b]
  415cdc:	(bad)  
  415cdd:	push   edi
  415cde:	jmp    FWORD PTR ds:0x2a479847
  415ce4:	scas   eax,DWORD PTR es:[edi]
  415ce5:	and    BYTE PTR [edx],ch
  415ce7:	or     esp,ebp
  415ce9:	outs   dx,DWORD PTR ds:[esi]
  415cea:	sub    DWORD PTR [ebp+0x9209cbe],ebp
  415cf0:	bound  edi,QWORD PTR [ebx-0x42bd4c18]
  415cf6:	xor    bh,BYTE PTR [ebp+0x4fd9bfe]
  415cfc:	adc    bl,bh
  415cfe:	ficom  WORD PTR [edi]
  415d00:	loope  0x415cbe
  415d02:	retf   
  415d03:	sbb    edi,DWORD PTR [ecx]
  415d05:	gs js  0x415d0b
  415d08:	icebp  
  415d09:	xor    BYTE PTR es:[edx-0x1a],0x86
  415d0e:	int    0xbd
  415d10:	in     eax,0x1c
  415d12:	jnp    0x415d2d
  415d14:	rcr    DWORD PTR [esi+0x60],0x19
  415d18:	std    
  415d19:	js     0x415cc4
  415d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d1c:	test   al,0xee
  415d1e:	jae    0x415d1d
  415d20:	out    0xe1,eax
  415d22:	mov    edx,0xeedbf87a
  415d27:	aas    
  415d28:	addr16 mov ebp,0x3b6eea07
  415d2e:	gs sahf 
  415d30:	pop    es
  415d31:	push   ss
  415d32:	repnz nop
  415d34:	push   esi
  415d35:	aam    0xbd
  415d37:	in     al,dx
  415d38:	jmp    0xa1553bd3
  415d3d:	iret   
  415d3e:	cmp    eax,DWORD PTR ds:0x63e1d6cd
  415d44:	lods   eax,DWORD PTR ds:[esi]
  415d45:	xchg   BYTE PTR [edi+eax*2],cl
  415d48:	repz std 
  415d4a:	pushf  
  415d4b:	jb     0x415cd5
  415d4d:	cmp    ebx,DWORD PTR [eax]
  415d4f:	dec    ecx
  415d50:	sub    BYTE PTR [ecx-0x42],dl
  415d53:	arpl   sp,dx
  415d55:	sub    BYTE PTR [edx],dh
  415d57:	mov    ds:0xe4c4ca00,eax
  415d5c:	adc    cl,BYTE PTR [ebx+0x15]
  415d5f:	stos   BYTE PTR es:[edi],al
  415d60:	mov    edi,0x2e84fe54
  415d65:	mov    ah,0xa4
  415d67:	cmp    DWORD PTR [ecx+0x42],esp
  415d6a:	mov    cl,0x2d
  415d6c:	bound  edi,QWORD PTR [ebx+0x57]
  415d6f:	cmp    eax,ebx
  415d71:	sub    al,0x87
  415d73:	lea    edi,[edi+0x3a]
  415d76:	scas   eax,DWORD PTR es:[edi]
  415d77:	pop    edi
  415d78:	add    BYTE PTR [edx],dl
  415d7a:	mov    edx,0xa100277
  415d7f:	(bad)
  415d83:	jmp    0x49bbb1c5
  415d88:	push   edx
  415d89:	mov    esi,0x6f5dc80e
  415d8e:	push   edx
  415d8f:	dec    esp
  415d90:	and    cl,bl
  415d92:	gs (bad) 
  415d95:	popf   
  415d96:	pop    ebp
  415d97:	xchg   edi,eax
  415d98:	sub    eax,0x16
  415d9b:	xlat   BYTE PTR ds:[ebx]
  415d9d:	pop    DWORD PTR [esi]
  415d9f:	cmp    DWORD PTR [esi],ebx
  415da1:	js     0x415d64
  415da3:	les    esi,FWORD PTR [esi-0x7c]
  415da6:	add    BYTE PTR ds:0x12cb6c84,dh
  415dac:	sbb    al,0xbf
  415dae:	mov    ebp,0x985ce98d
  415db3:	or     bl,al
  415db5:	mov    edx,0xcb4a013
  415dba:	xchg   ecx,eax
  415dbb:	mov    ch,0x6
  415dbd:	xchg   esi,eax
  415dbe:	repz mov al,ds:0xf466f147
  415dc4:	lods   eax,DWORD PTR ds:[esi]
  415dc5:	std    
  415dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dc7:	sub    al,0x87
  415dc9:	sub    ebp,esp
  415dcb:	push   ebp
  415dcc:	lds    edi,FWORD PTR [edx+0x61982f06]
  415dd2:	inc    esp
  415dd3:	sahf   
  415dd4:	cmp    cl,bh
  415dd6:	xchg   ecx,eax
  415dd7:	in     al,0x5e
  415dd9:	jne    0x415e36
  415ddb:	fwait
  415ddc:	inc    edx
  415ddd:	scas   al,BYTE PTR es:[edi]
  415dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ddf:	aas    
  415de0:	mov    esi,0x9113413a
  415de5:	mov    ah,0x2d
  415de7:	xchg   esp,eax
  415de8:	adc    eax,0x51226aa9
  415ded:	int    0xf7
  415def:	push   eax
  415df0:	mov    dh,0x5a
  415df2:	mov    al,0xae
  415df4:	adc    BYTE PTR [ecx+ebx*2],ah
  415df7:	fnstenv [edi-0x5d382337]
  415dfd:	std    
  415dfe:	dec    esp
  415dff:	adc    al,0x32
  415e01:	add    ch,BYTE PTR [edx+0x71]
  415e04:	cld    
  415e05:	imul   ebx,esp,0x64b4277f
  415e0b:	cmc    
  415e0c:	imul   edi,edx,0x55
  415e0f:	jno    0x415e51
  415e11:	ins    BYTE PTR es:[edi],dx
  415e12:	sub    esi,edi
  415e14:	out    dx,eax
  415e15:	inc    ecx
  415e16:	mov    dl,0x3c
  415e18:	in     al,dx
  415e19:	add    al,0x29
  415e1b:	outs   dx,DWORD PTR ds:[esi]
  415e1c:	fs jb  0x415dff
  415e1f:	xor    al,0xd4
  415e21:	in     eax,0x99
  415e23:	imul   ebx,DWORD PTR [ecx],0xcf016047
  415e29:	xchg   esi,eax
  415e2a:	mov    ebx,0x8a695a52
  415e2f:	cwde   
  415e30:	inc    BYTE PTR [ebx+edi*8]
  415e33:	dec    edx
  415e34:	mov    eax,DWORD PTR [esi-0x31625e42]
  415e3a:	push   ss
  415e3b:	or     ebx,edi
  415e3d:	inc    edx
  415e3e:	pop    ecx
  415e3f:	add    ebx,DWORD PTR [edi-0x31f355b]
  415e45:	ror    BYTE PTR [ebx-0x40],1
  415e48:	dec    edi
  415e49:	add    DWORD PTR [edx+0xb0a2064],eax
  415e4f:	pop    edi
  415e50:	mov    bl,0xce
  415e52:	loopne 0x415de3
  415e54:	pop    esp
  415e55:	inc    esp
  415e56:	scas   eax,DWORD PTR es:[edi]
  415e57:	mov    eax,0x1f500b59
  415e5c:	and    al,dh
  415e5e:	fstp   TBYTE PTR fs:[ebx]
  415e61:	jl     0x415e0a
  415e63:	push   eax
  415e64:	arpl   WORD PTR [edi],cx
  415e66:	cmp    al,0x5a
  415e68:	add    eax,0xf3eec6f2
  415e6d:	or     edi,DWORD PTR [ebx+0x68e1eaad]
  415e73:	jnp    0x415e05
  415e75:	sbb    eax,0xfccfb87b
  415e7a:	mov    DWORD PTR [esi+0x73],eax
  415e7d:	or     eax,0x9ac9a631
  415e82:	repnz mov eax,0xcf302ebe
  415e88:	js     0x415e1d
  415e8a:	pusha  
  415e8b:	pop    ebp
  415e8c:	pushf  
  415e8d:	cmp    DWORD PTR [edx+0x57],eax
  415e90:	fidiv  DWORD PTR [ebx-0x7dbb45ac]
  415e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e97:	add    al,0xe5
  415e99:	add    BYTE PTR [edx+eiz*8],al
  415e9c:	mov    cl,BYTE PTR [ebp-0x64a470fe]
  415ea2:	inc    ebx
  415ea3:	arpl   dx,di
  415ea5:	pop    ecx
  415ea6:	ss cmp eax,0x5e141adf
  415eac:	xor    DWORD PTR [edx-0x79],eax
  415eaf:	ja     0x415e75
  415eb1:	xchg   edi,eax
  415eb2:	hlt    
  415eb3:	or     eax,0xe1715032
  415eb8:	push   0xa464b027
  415ebd:	lods   al,BYTE PTR ds:[esi]
  415ebe:	cmp    al,0x8e
  415ec0:	ror    BYTE PTR [esi+0x40ebb0b4],1
  415ec6:	mov    ch,0xd2
  415ec8:	pop    ss
  415ec9:	cmc    
  415eca:	icebp  
  415ecb:	jge    0x415ee2
  415ecd:	dec    ebp
  415ece:	push   fs
  415ed0:	or     ebp,DWORD PTR [esi-0x2]
  415ed3:	arpl   WORD PTR [ebx-0x694b3fdd],dx
  415ed9:	icebp  
  415eda:	jmp    0x415f27
  415edc:	enter  0x84ca,0x7b
  415ee0:	sub    dl,BYTE PTR [esi-0x25]
  415ee3:	push   edi
  415ee4:	cdq    
  415ee5:	call   0xad16:0x72c614e7
  415eec:	jp     0x415e8d
  415eee:	gs push esi
  415ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ef1:	loope  0x415f51
  415ef3:	and    BYTE PTR [edx-0x40aa68b1],bh
  415ef9:	ja     0x415f3b
  415efb:	aad    0x2d
  415efd:	fstp   st(5)
  415eff:	cmc    
  415f00:	je     0x415f73
  415f02:	stc    
  415f03:	sub    edx,DWORD PTR [edx*4+0x6b99e0e0]
  415f0a:	inc    edx
  415f0b:	adc    al,0x4d
  415f0d:	add    eax,0x3fb9efce
  415f12:	add    al,0x9f
  415f14:	scas   al,BYTE PTR es:[edi]
  415f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f17:	xor    eax,0x93a378d9
  415f1c:	scas   al,BYTE PTR es:[edi]
  415f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f1e:	jge    0x415f42
  415f20:	or     DWORD PTR [edi-0x2eb3e080],esi
  415f26:	arpl   ax,dx
  415f28:	mov    dh,0xcd
  415f2a:	lods   eax,DWORD PTR ds:[esi]
  415f2b:	cmp    esp,DWORD PTR [ecx+0x26bce3a6]
  415f31:	lea    ecx,[eax]
  415f33:	sar    DWORD PTR [esp+edi*4+0x48965a61],cl
  415f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f3b:	or     eax,0x900ccd58
  415f40:	mov    bl,0x7f
  415f42:	fs mov ebx,0xb2bcbee1
  415f48:	and    DWORD PTR [ebp+edi*4+0x33],ebp
  415f4c:	hlt    
  415f4d:	dec    eax
  415f4e:	and    BYTE PTR [edi],dh
  415f50:	in     eax,0xf
  415f52:	or     eax,0x6465fdd7
  415f57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f58:	jae    0x415f07
  415f5a:	psraw  mm5,QWORD PTR [ebp+0x50]
  415f5e:	cmp    BYTE PTR [esi-0x3efc292b],0x5b
  415f65:	or     ebp,esp
  415f67:	sbb    DWORD PTR [esi+0x69],esp
  415f6a:	mov    eax,ds:0x47de2444
  415f6f:	fnstsw WORD PTR [ebx]
  415f71:	shl    DWORD PTR [edx+0x3a132e6b],0xdd
  415f78:	(bad)  
  415f79:	xor    al,0xa2
  415f7b:	cmp    eax,0xb171e8f5
  415f80:	add    al,0xa
  415f82:	ja     0x415f33
  415f84:	pushf  
  415f85:	push   0x5eb3983e
  415f8a:	push   0x874a40d8
  415f8f:	mov    ecx,0x33700559
  415f94:	fisttp QWORD PTR fs:[esi+esi*4+0x58]
  415f99:	int    0x18
  415f9b:	outs   dx,BYTE PTR ds:[esi]
  415f9c:	aam    0x31
  415f9e:	loop   0x415f33
  415fa0:	sub    eax,0xfffffff1
  415fa3:	pop    edx
  415fa4:	adc    bh,dh
  415fa6:	popf   
  415fa7:	dec    esp
  415fa8:	mov    ds:0x288cbfa8,eax
  415fad:	cmp    ah,cl
  415faf:	sar    DWORD PTR [edx+ebp*1+0x2238ad],1
  415fb6:	fiadd  WORD PTR [ebx]
  415fb8:	or     ebp,DWORD PTR [edi+0x17]
  415fbb:	call   0xcf4c:0xb446242e
  415fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fc3:	add    eax,0x8178652d
  415fc8:	dec    eax
  415fc9:	(bad)  
  415fca:	adc    ebx,DWORD PTR [esi]
  415fcc:	scas   eax,DWORD PTR es:[edi]
  415fcd:	xor    eax,0xaea85b1b
  415fd2:	sbb    eax,0xe3d43fc8
  415fd7:	retf   
  415fd8:	mov    esi,0x570cdd32
  415fdd:	(bad)  
  415fde:	and    al,0x4b
  415fe0:	add    ebx,DWORD PTR [edi-0x252afdf6]
  415fe6:	mov    edi,0x56013a4b
  415feb:	sub    edx,DWORD PTR [esi+0x37]
  415fee:	dec    DWORD PTR [edi+0x406c778f]
  415ff4:	in     al,0x2c
  415ff6:	sbb    DWORD PTR [ebx+0x2b],esi
  415ff9:	push   ss
  415ffa:	add    esi,0xf8eb46d4
  416000:	push   esi
  416001:	out    dx,al
  416002:	(bad)  
  416003:	dec    esi
  416004:	sub    ecx,ebp
  416006:	push   esp
  416007:	aas    
  416008:	xchg   edi,eax
  416009:	mov    ebx,0x35aae71b
  41600e:	popa   
  41600f:	je     0x416079
  416011:	mov    gs,WORD PTR [edx+0x6c]
  416014:	mov    BYTE PTR [ecx+edi*8],bh
  416017:	loope  0x41605e
  416019:	dec    esp
  41601a:	push   0x5e
  41601c:	jecxz  0x416037
  41601e:	repz cdq 
  416020:	jle    0x416015
  416022:	and    DWORD PTR [esi+0x67],ebp
  416025:	or     BYTE PTR [esp+edi*2+0x31],0x29
  41602a:	cli    
  41602b:	pop    es
  41602c:	ja     0x4160a9
  41602e:	aas    
  41602f:	pop    edx
  416030:	dec    ecx
  416031:	ins    BYTE PTR es:[edi],dx
  416032:	push   cs
  416033:	outs   dx,BYTE PTR ds:[esi]
  416034:	test   al,0xde
  416036:	fisttp WORD PTR [edi]
  416038:	jg     0x416006
  41603a:	sbb    al,0x48
  41603c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41603d:	sbb    eax,0xc4101e53
  416042:	inc    ebp
  416043:	mov    WORD PTR [eax+0x70],ss
  416046:	inc    ecx
  416047:	mov    ebx,0xcea52a4
  41604c:	sub    al,BYTE PTR ds:0xe108bdee
  416052:	(bad)  
  416053:	sbb    DWORD PTR [edi],ecx
  416055:	inc    ebx
  416056:	(bad)  
  416057:	fiadd  WORD PTR [ebp+0x74]
  41605a:	fmul   st,st(1)
  41605c:	retf   
  41605d:	stos   DWORD PTR es:[edi],eax
  41605e:	mov    ss,WORD PTR [ebx]
  416060:	in     eax,dx
  416061:	inc    ecx
  416062:	and    esp,edx
  416064:	cmp    cl,BYTE PTR es:[esi-0x27d3ebaa]
  41606b:	leave  
  41606c:	lea    esp,[edx]
  41606e:	adc    esi,DWORD PTR [ebx+0x330b958c]
  416074:	pop    eax
  416075:	add    DWORD PTR [ecx+0x61],ebp
  416078:	cmp    al,0x76
  41607a:	xchg   edi,eax
  41607b:	jnp    0x416013
  41607d:	xchg   ebp,eax
  41607e:	aas    
  41607f:	inc    esi
  416080:	jmp    0x416094
  416082:	stc    
  416083:	(bad)  
  416084:	icebp  
  416085:	jae    0x4160f0
  416087:	or     BYTE PTR [esi+ebx*1],bl
  41608a:	retf   
  41608b:	pusha  
  41608c:	mov    ds:0x5e5f7387,al
  416091:	add    esp,DWORD PTR [ebp+ecx*2+0x5444ebb2]
  416098:	sub    BYTE PTR [edi+eiz*4+0x37],0xb9
  41609d:	jns    0x416073
  41609f:	push   esp
  4160a0:	sub    al,0x34
  4160a2:	and    dl,ah
  4160a4:	push   ecx
  4160a5:	mov    al,ds:0x6dfcb32c
  4160aa:	test   al,0x14
  4160ac:	sbb    DWORD PTR [ebx-0x51c6f837],ebx
  4160b2:	stc    
  4160b3:	retf   
  4160b4:	sbb    eax,0x321b730d
  4160b9:	popa   
  4160ba:	and    DWORD PTR [ebx],ebp
  4160bc:	pop    ebx
  4160bd:	adc    al,0x66
  4160bf:	xor    esp,esp
  4160c1:	sub    ch,cl
  4160c3:	and    bh,BYTE PTR [eax]
  4160c5:	out    dx,al
  4160c6:	xlat   BYTE PTR ds:[ebx]
  4160c7:	xchg   edx,eax
  4160c8:	out    dx,eax
  4160c9:	iret   
  4160ca:	scas   al,BYTE PTR es:[edi]
  4160cb:	or     cl,0x7a
  4160ce:	push   ds
  4160cf:	and    bh,0x74
  4160d2:	jmp    0xe041961d
  4160d7:	jo     0x416112
  4160d9:	fadd   QWORD PTR [eax-0x80]
  4160dc:	cwde   
  4160dd:	pop    edi
  4160de:	jb     0x4160f2
  4160e0:	dec    esi
  4160e1:	js     0x4160c5
  4160e3:	adc    al,0x95
  4160e5:	pop    ecx
  4160e6:	push   0xfffffffa
  4160e8:	xchg   esp,eax
  4160e9:	jbe    0x41609f
  4160eb:	lock dec eax
  4160ed:	add    DWORD PTR [edi+0x70],0xffffffa5
  4160f1:	mov    cl,BYTE PTR ds:0x9e729794
  4160f7:	jmp    0xd0838539
  4160fc:	xchg   ecx,eax
  4160fd:	lahf   
  4160fe:	jmp    0xa10d4bfb
  416103:	mov    es,WORD PTR [ebx+edi*4+0x50]
  416107:	cmc    
  416108:	sub    ebp,DWORD PTR [edi-0x710b0ca4]
  41610e:	cli    
  41610f:	rcl    BYTE PTR [edi],cl
  416111:	jnp    0x4160dd
  416113:	push   cs
  416114:	cmp    al,0xaa
  416116:	popa   
  416117:	fisub  DWORD PTR [edi]
  416119:	les    eax,FWORD PTR [ecx]
  41611b:	test   DWORD PTR [edx-0x1e56dd85],eax
  416121:	sti    
  416122:	pop    edx
  416123:	int    0x54
  416125:	inc    ebp
  416126:	(bad)  
  416127:	inc    esi
  416128:	cs stos DWORD PTR es:[edi],eax
  41612a:	call   0xefd55fa6
  41612f:	pushf  
  416130:	inc    dh
  416132:	les    eax,FWORD PTR [esi+0x3]
  416135:	imul   ebx,DWORD PTR ss:[ebx],0x80ae7146
  41613c:	scas   al,BYTE PTR es:[edi]
  41613d:	ins    BYTE PTR es:[edi],dx
  41613e:	je     0x416124
  416140:	xor    eax,0xd2aa4ded
  416145:	and    eax,0xe849f754
  41614a:	loope  0x4161a6
  41614c:	pushf  
  41614d:	rcr    DWORD PTR [ecx],0x11
  416150:	sub    DWORD PTR [edx+0x378a00e2],edx
  416156:	ficomp DWORD PTR [edx]
  416158:	sbb    al,0x66
  41615a:	in     eax,dx
  41615b:	mov    ebp,0x94c3f8ba
  416160:	fbstp  TBYTE PTR ds:0x65522c66
  416166:	icebp  
  416167:	jmp    0xfab7:0x844fdb66
  41616e:	sbb    BYTE PTR [edx],ch
  416170:	xchg   ebp,eax
  416171:	pop    ebp
  416172:	cmp    dh,BYTE PTR [edi+0x3e]
  416175:	imul   ecx,esp,0xe72a67ac
  41617b:	sbb    eax,0xdc48ce08
  416180:	inc    esi
  416181:	push   ecx
  416182:	xor    ecx,esp
  416184:	js     0x4161a9
  416186:	outs   dx,BYTE PTR ds:[esi]
  416187:	xchg   BYTE PTR [edx-0x5],dl
  41618a:	jne    0x41619d
  41618c:	retf   
  41618d:	mov    dl,0x7
  41618f:	loope  0x41615e
  416191:	adc    ebx,0x8d1c16ea
  416197:	stos   DWORD PTR es:[edi],eax
  416198:	fcomp  QWORD PTR [edx]
  41619a:	or     ebx,DWORD PTR [ecx+0x5184a038]
  4161a0:	jo     0x4161e3
  4161a2:	fstp   st(3)
  4161a4:	xchg   edi,eax
  4161a5:	dec    ebp
  4161a6:	test   dl,0x42
  4161a9:	mov    ch,0x4f
  4161ab:	inc    esp
  4161ac:	push   ebp
  4161ad:	xor    al,0x1
  4161af:	push   ecx
  4161b0:	xor    BYTE PTR [ecx],bh
  4161b2:	xchg   DWORD PTR [ebx+0x7b],esi
  4161b5:	pushf  
  4161b6:	pop    ebx
  4161b7:	je     0x41614f
  4161b9:	leave  
  4161ba:	or     al,0x41
  4161bc:	call   0xe0c22384
  4161c1:	mov    dh,0x57
  4161c3:	enter  0x2b93,0xe1
  4161c7:	jb     0x4161ad
  4161c9:	int3   
  4161ca:	sub    eax,0x774e1ef1
  4161cf:	das    
  4161d0:	sbb    al,0x40
  4161d2:	clc    
  4161d3:	repnz or ebp,DWORD PTR ds:0x28cce35b
  4161da:	cs fmul st(6),st
  4161dd:	sub    eax,0xbd002fbd
  4161e2:	jge    0x4161a4
  4161e4:	pop    es
  4161e5:	mov    al,ds:0x41efc3ec
  4161ea:	jb     0x4161a8
  4161ec:	pop    ss
  4161ed:	adc    ebp,ebx
  4161ef:	in     eax,0xc6
  4161f1:	clc    
  4161f2:	rcl    BYTE PTR [esi+0x1ca1679d],0x72
  4161f9:	ror    DWORD PTR [ebx],1
  4161fb:	sahf   
  4161fc:	xchg   esi,eax
  4161fd:	ins    DWORD PTR es:[edi],dx
  4161fe:	fidiv  WORD PTR [edi]
  416200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416201:	add    BYTE PTR [ecx],dh
  416203:	dec    edi
  416204:	sub    eax,DWORD PTR [ebx]
  416206:	je     0x416278
  416208:	in     eax,0x94
  41620a:	sub    dh,BYTE PTR [ebx+0x3bfd2dda]
  416210:	sbb    al,0x35
  416212:	sar    DWORD PTR [edi],0x50
  416215:	adc    al,0xb4
  416217:	sti    
  416218:	into   
  416219:	aaa    
  41621a:	mov    dl,0xb6
  41621c:	stc    
  41621d:	pop    edi
  41621e:	ret    
  41621f:	js     0x4161f2
  416221:	jecxz  0x4161d6
  416223:	inc    ebx
  416224:	stos   DWORD PTR es:[edi],eax
  416225:	mov    ebp,0xf3e31a4a
  41622a:	jnp    0x4161d5
  41622c:	ret    0x5b75
  41622f:	and    eax,0x3aec6643
  416234:	mov    ebp,0x9847dd69
  416239:	and    BYTE PTR [ebp+ebx*2-0x6],dl
  41623d:	idiv   BYTE PTR [edx-0x41c0ee2c]
  416243:	and    eax,0x23fbfd75
  416248:	jnp    0x4161cf
  41624a:	fst    QWORD PTR [ebx+edi*2+0x3e720888]
  416251:	ins    DWORD PTR es:[edi],dx
  416252:	(bad)  
  416253:	lods   eax,DWORD PTR ds:[esi]
  416254:	jno    0x4162cf
  416256:	dec    ebx
  416257:	mov    eax,0xf634d55c
  41625c:	data16 jno 0x4162a3
  41625f:	mov    ecx,0x4636c6ab
  416264:	xor    DWORD PTR [ebx+0x74733857],eax
  41626a:	clc    
  41626b:	out    0xec,al
  41626d:	sti    
  41626e:	jge    0x4162d6
  416270:	push   ebx
  416271:	xor    DWORD PTR [edx+eax*1-0x38b4e2ea],edx
  416278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416279:	mov    ?,WORD PTR [esi-0x51c7c440]
  41627f:	add    eax,0xd7fdf58d
  416284:	cmp    eax,0x673b608f
  416289:	or     al,BYTE PTR [ebx+0x766b8853]
  41628f:	mov    ds:0x14507afd,al
  416294:	add    eax,DWORD PTR [ecx-0x764b667e]
  41629a:	push   ebp
  41629b:	test   al,0x8b
  41629d:	push   ebp
  41629e:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  4162a4:	(bad)  
  4162a6:	add    BYTE PTR fs:[ebx],cl
  4162a9:	ror    DWORD PTR [ecx+0x558bac55],cl
  4162af:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  4162b5:	xor    edx,ebx
  4162b7:	mov    DWORD PTR [ebp-0x50],edx
  4162ba:	mov    edx,DWORD PTR [ebp+0x8]
  4162bd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4162c0:	add    edx,edi
  4162c2:	and    edx,ebx
  4162c4:	mov    DWORD PTR [ebp-0x4c],edx
  4162c7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ca:	mov    ebx,DWORD PTR [ebp-0x48]
  4162cd:	lea    edx,[ebx+edx*1+0x241fc1f]
  4162d4:	mov    DWORD PTR [ebp-0x48],edx
  4162d7:	mov    edx,DWORD PTR [ebp+0x8]
  4162da:	mov    ebx,0xfa5e15e2
  4162df:	sub    ebx,edx
  4162e1:	add    ebx,DWORD PTR [ebp-0x44]
  4162e4:	mov    DWORD PTR [ebp-0x44],ebx
  4162e7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ea:	xor    edx,eax
  4162ec:	add    edx,esi
  4162ee:	jne    0x413ef1
  4162f4:	mov    edx,DWORD PTR [ebp-0x14]
  4162f7:	mov    DWORD PTR [ebp+0x8],edx
  4162fa:	jmp    0x41636f
  4162ff:	mov    edx,DWORD PTR [ebp+0x8]
  416302:	mov    ebx,DWORD PTR [ebp-0x8]
  416305:	xor    edx,eax
  416307:	xor    ebx,eax
  416309:	sub    edx,ebx
  41630b:	sub    edx,esi
  41630d:	xor    edx,eax
  41630f:	mov    DWORD PTR [ebp+0x8],edx
  416312:	mov    edx,DWORD PTR [ebp+0x8]
  416315:	mov    ebx,DWORD PTR [ebp-0x58]
  416318:	add    edx,0x5708f8
  41631e:	imul   edx,ebx
  416321:	mov    DWORD PTR [ebp-0x58],edx
  416324:	mov    edx,DWORD PTR [ebp+0x8]
  416327:	mov    ebx,DWORD PTR [ebp-0x54]
  41632a:	add    edx,0x64f8da
  416330:	or     edx,ebx
  416332:	mov    DWORD PTR [ebp-0x54],edx
  416335:	mov    edx,DWORD PTR [ebp+0x8]
  416338:	mov    ebx,DWORD PTR [ebp-0x50]
  41633b:	add    edx,ecx
  41633d:	xor    edx,ebx
  41633f:	mov    DWORD PTR [ebp-0x50],edx
  416342:	mov    edx,DWORD PTR [ebp+0x8]
  416345:	mov    ebx,DWORD PTR [ebp-0x4c]
  416348:	add    edx,edi
  41634a:	and    edx,ebx
  41634c:	mov    DWORD PTR [ebp-0x4c],edx
  41634f:	mov    edx,DWORD PTR [ebp+0x8]
  416352:	mov    ebx,DWORD PTR [ebp-0x48]
  416355:	lea    edx,[ebx+edx*1+0x241fc1f]
  41635c:	mov    DWORD PTR [ebp-0x48],edx
  41635f:	mov    edx,DWORD PTR [ebp+0x8]
  416362:	mov    ebx,0xfa5e15e2
  416367:	sub    ebx,edx
  416369:	add    ebx,DWORD PTR [ebp-0x44]
  41636c:	mov    DWORD PTR [ebp-0x44],ebx
  41636f:	mov    edx,DWORD PTR [ebp+0x8]
  416372:	xor    edx,eax
  416374:	add    edx,esi
  416376:	jne    0x4162ff
  41637c:	mov    edx,DWORD PTR [ebp-0x8]
  41637f:	mov    ebx,DWORD PTR [ebp-0xc]
  416382:	jmp    0x418708
  416387:	nop
  416388:	test   BYTE PTR [ebp-0x643e8c3e],0xf4
  41638f:	add    DWORD PTR [ebp-0x5d],esp
  416392:	out    0x8f,eax
  416394:	and    BYTE PTR [edx],dl
  416396:	ins    DWORD PTR es:[edi],dx
  416397:	pop    esp
  416398:	push   edi
  416399:	jns    0x416415
  41639b:	add    DWORD PTR [edi+0x7a],ebx
  41639e:	jp     0x416354
  4163a0:	jmp    0x416376
  4163a2:	sbb    BYTE PTR [esp+ecx*4],ah
  4163a5:	jle    0x4163bb
  4163a7:	mov    DWORD PTR [eax+0x535f8ba1],ecx
  4163ad:	or     eax,0x911dbd84
  4163b2:	mov    bl,0x24
  4163b4:	fcomp  QWORD PTR [ebp+0x4b88859d]
  4163ba:	iret   
  4163bb:	retf   
  4163bc:	xchg   edi,eax
  4163bd:	and    bh,BYTE PTR ss:[edi+0x33]
  4163c1:	mov    bh,0xd4
  4163c3:	dec    ebp
  4163c4:	sahf   
  4163c5:	dec    ebx
  4163c6:	enter  0x5485,0xd9
  4163ca:	rcl    eax,0x28
  4163cd:	and    eax,0x9ca22efe
  4163d2:	sub    al,0x65
  4163d4:	stc    
  4163d5:	mov    eax,0x8345531d
  4163da:	xchg   BYTE PTR [edi+0x581fc88f],ah
  4163e0:	enter  0x35b6,0xf3
  4163e4:	mov    al,ds:0xb6e47bbd
  4163e9:	pusha  
  4163ea:	pop    edx
  4163eb:	iret   
  4163ec:	das    
  4163ed:	cmp    ch,al
  4163ef:	cld    
  4163f0:	dec    esi
  4163f1:	or     BYTE PTR [esi-0x66cd937f],ah
  4163f7:	sub    al,0x7a
  4163f9:	adc    DWORD PTR [esi+0x41],esp
  4163fc:	ja     0x416451
  4163fe:	push   ebx
  4163ff:	mov    bl,0x17
  416401:	sub    DWORD PTR [ebx+0x61],esi
  416404:	mov    edi,esi
  416406:	sbb    al,BYTE PTR [ebx-0x9]
  416409:	add    eax,0x7d295a4c
  41640e:	jbe    0x4163fe
  416410:	fist   WORD PTR [esi-0x21]
  416413:	sub    dh,BYTE PTR [ebp+0xf]
  416416:	lea    esi,[edi+0x37]
  416419:	xor    al,dh
  41641b:	loopne 0x41647a
  41641d:	rcl    edx,1
  41641f:	neg    DWORD PTR [edi+0x21b842df]
  416425:	mov    bh,0xd7
  416427:	ret    
  416428:	jmp    0x416454
  41642a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41642b:	push   ebx
  41642c:	fs popa 
  41642e:	iret   
  41642f:	(bad)  
  416431:	push   0x58
  416433:	jae    0x41640e
  416435:	test   BYTE PTR [edi+0x4a],cl
  416438:	jge    0x4163cd
  41643a:	movaps XMMWORD PTR [eax-0x14],xmm5
  41643e:	and    DWORD PTR [ebp+0x34],edx
  416441:	popf   
  416442:	xchg   edi,eax
  416443:	ret    0x69d
  416446:	inc    esp
  416447:	jne    0x4163e2
  416449:	call   0x201bb0b2
  41644e:	pop    es
  41644f:	or     eax,0x746130fd
  416454:	pop    ds
  416455:	xchg   ebx,eax
  416456:	jmp    0x4ae4f9be
  41645b:	into   
  41645c:	sub    eax,0x66cc4511
  416461:	les    edi,FWORD PTR [eax+ecx*2-0xc2a2e0e]
  416468:	sbb    ebp,DWORD PTR [eax+0x74]
  41646b:	mov    esp,DWORD PTR [esi-0x66]
  41646e:	mov    ds:0x7f12bc5b,eax
  416473:	mov    edx,0x2397b81
  416478:	test   eax,0x9fb9dc74
  41647d:	mov    ah,BYTE PTR [ecx+0x78]
  416480:	mov    dh,bl
  416482:	iret   
  416483:	cmp    eax,0x4cd1c8da
  416488:	nop
  416489:	pop    esi
  41648a:	cmp    edx,edi
  41648c:	cmp    DWORD PTR [ebx+edx*1],0xffffffdc
  416490:	or     al,0xdd
  416492:	adc    DWORD PTR [ecx+0x6dcbd6df],ebp
  416498:	dec    edi
  416499:	fs inc ecx
  41649b:	mov    edi,0x9eadae6b
  4164a0:	xchg   DWORD PTR [edx+eax*1],eax
  4164a3:	jle    0x4164c3
  4164a5:	mov    eax,ds:0xaff131ea
  4164aa:	sub    BYTE PTR [edi],dl
  4164ac:	xor    dl,cl
  4164ae:	outs   dx,WORD PTR ds:[esi]
  4164b0:	mov    cl,0xe1
  4164b2:	sbb    bh,BYTE PTR [ebx]
  4164b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164b5:	in     al,0x84
  4164b7:	hlt    
  4164b8:	js     0x416456
  4164ba:	pusha  
  4164bb:	in     eax,dx
  4164bc:	mov    cl,0x4c
  4164be:	repz sub BYTE PTR [ebx+0x733d559f],ch
  4164c5:	mov    dl,0xc5
  4164c7:	rol    BYTE PTR [edx-0x73a4c54e],1
  4164cd:	cmp    BYTE PTR [ebx+0xa1ed91],cl
  4164d3:	ror    DWORD PTR [edi+0x4c],cl
  4164d6:	repnz mov WORD PTR [edi+eax*8+0x3e],es
  4164db:	jmp    0x15b8122a
  4164e0:	jmp    0xb245ad34
  4164e5:	dec    ebp
  4164e6:	cmp    ch,bh
  4164e8:	push   edx
  4164e9:	adc    DWORD PTR [bp-0x45],ebp
  4164ed:	fwait
  4164ee:	or     eax,0x7ea7fa5c
  4164f3:	mov    ah,0x89
  4164f5:	jno    0x416477
  4164f7:	sub    eax,0xa04003d5
  4164fc:	sbb    eax,0x740e178e
  416501:	inc    edx
  416502:	call   DWORD PTR [esi-0x7f0e1fe4]
  416508:	xchg   esp,eax
  416509:	or     ebx,esp
  41650b:	or     bh,BYTE PTR [edx-0x3f]
  41650e:	mov    ebp,0xd9071c96
  416513:	fcomp  QWORD PTR [ebp+0x13066a62]
  416519:	push   edx
  41651a:	pusha  
  41651b:	out    0x3f,eax
  41651d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41651f:	inc    esi
  416520:	add    al,BYTE PTR [edi-0x73]
  416523:	sar    DWORD PTR [edi*4-0x10348db],0x98
  41652b:	iret   
  41652c:	sub    BYTE PTR [ecx+0x22],ch
  41652f:	cmc    
  416530:	imul   edi,esp,0xffffff85
  416533:	mov    eax,ds:0x560ff137
  416538:	std    
  416539:	rol    edx,0xb0
  41653c:	movd   mm0,ebx
  41653f:	adc    al,BYTE PTR [ebp+0x6fdbbe53]
  416545:	dec    edx
  416546:	hlt    
  416547:	mov    dl,0x26
  416549:	mov    ?,WORD PTR ds:0x545d400d
  41654f:	inc    ecx
  416550:	int3   
  416551:	adc    eax,0xdb9d9a74
  416556:	mov    ecx,0x944c98db
  41655b:	inc    ecx
  41655c:	daa    
  41655d:	rcl    BYTE PTR [ebp-0x5a],cl
  416560:	jae    0x416550
  416562:	mov    ah,BYTE PTR [ebx]
  416564:	je     0x4165a6
  416566:	imul   eax,edi,0xffffff9d
  416569:	jno    0x4165c3
  41656b:	and    al,0xac
  41656d:	imul   edx,DWORD PTR [edx+0x45],0xdef52d89
  416574:	mov    bl,0x5f
  416576:	cmp    eax,0x782ab76d
  41657b:	and    ebp,DWORD PTR [ecx-0x5e]
  41657e:	jmp    0x4165a8
  416580:	mov    edi,0x5be4f33
  416585:	xchg   esp,eax
  416586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416587:	dec    ecx
  416588:	in     al,0x51
  41658a:	add    bh,BYTE PTR fs:[edx+0x590447d6]
  416591:	lea    ebx,[edx-0x7e]
  416594:	mov    ebx,0x12aaac9b
  416599:	mov    cl,0xdb
  41659b:	mov    esi,0x97697768
  4165a0:	push   esi
  4165a1:	lds    ecx,FWORD PTR [ebx]
  4165a3:	add    dl,ch
  4165a5:	lea    ecx,[edi]
  4165a7:	fs mov ah,0x95
  4165aa:	mov    eax,ds:0xf5a5b93c
  4165af:	and    BYTE PTR [esp+ebx*1+0x67],cl
  4165b3:	xchg   ecx,eax
  4165b4:	dec    edi
  4165b5:	fiadd  DWORD PTR [ebp-0x4115e120]
  4165bb:	and    ah,ah
  4165bd:	mov    ebp,0xb53f2ac
  4165c2:	mov    eax,ds:0x1c27e774
  4165c7:	dec    esp
  4165c8:	sub    ecx,eax
  4165ca:	jmp    DWORD PTR [edi+ebx*2-0x38]
  4165ce:	push   0x4e
  4165d0:	push   es
  4165d1:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4165d3:	or     BYTE PTR [ebx-0x3f],0x30
  4165d7:	popf   
  4165d8:	js     0x416628
  4165da:	leave  
  4165db:	and    eax,0x1a2e58a
  4165e0:	hlt    
  4165e1:	sahf   
  4165e2:	lahf   
  4165e3:	sub    DWORD PTR [ebx+0x1a],ecx
  4165e6:	sub    al,BYTE PTR [esi]
  4165e8:	data16 sub bl,bh
  4165eb:	cdq    
  4165ec:	ret    0x3939
  4165ef:	aas    
  4165f0:	fdiv   DWORD PTR [eax]
  4165f2:	nop
  4165f3:	loope  0x416649
  4165f5:	xor    BYTE PTR [esi+0x40],0xd4
  4165f9:	dec    ebp
  4165fa:	fdivr  QWORD PTR [esp+ebp*4+0x970f7b9]
  416601:	pusha  
  416602:	add    edi,DWORD PTR [edi]
  416604:	call   0xade0:0x33561924
  41660b:	xlat   BYTE PTR ds:[ebx]
  41660c:	mov    ch,0x6b
  41660e:	repnz pop edx
  416610:	xor    dl,dh
  416612:	rcr    cl,cl
  416614:	out    dx,eax
  416615:	push   esi
  416616:	add    al,0x19
  416618:	pop    eax
  416619:	dec    esi
  41661a:	stos   BYTE PTR es:[edi],al
  41661b:	xchg   esi,eax
  41661c:	fisttp DWORD PTR [ebx+0x7a]
  41661f:	out    dx,eax
  416620:	out    0x7,eax
  416622:	and    eax,0xc9ff82b1
  416627:	dec    edi
  416628:	out    dx,eax
  416629:	bound  esp,QWORD PTR [eax+0x387f9771]
  41662f:	jmp    0x3a40:0xbe4cd621
  416636:	pusha  
  416637:	addr16 popa 
  416639:	mov    ch,0x74
  41663b:	in     al,dx
  41663c:	stos   BYTE PTR es:[edi],al
  41663d:	mov    edx,esi
  41663f:	jns    0x416658
  416641:	(bad)
  416645:	dec    esi
  416646:	xor    al,0xc9
  416648:	adc    edi,DWORD PTR [ebp-0x38793ca0]
  41664e:	test   eax,0xce3d0bcb
  416653:	test   ebx,0x7092dc38
  416659:	das    
  41665a:	xchg   DWORD PTR [esp+eax*4+0x283592bc],esp
  416661:	int    0x93
  416663:	(bad)  [edi]
  416665:	loopne 0x416686
  416667:	cmp    al,0xf9
  416669:	jnp    0x4165ec
  41666b:	push   edx
  41666c:	das    
  41666d:	xchg   WORD PTR [esi+0x24],dx
  416671:	setns  BYTE PTR [esi]
  416674:	cmp    edx,DWORD PTR [esi]
  416676:	xchg   ecx,eax
  416677:	outs   dx,BYTE PTR ds:[esi]
  416678:	retf   0x335a
  41667b:	add    DWORD PTR [bp+di-0x1a],esi
  41667f:	mov    eax,0x4328205b
  416684:	popf   
  416685:	cmp    WORD PTR [edx],0xff94
  416689:	mov    ds:0x3122e61d,al
  41668e:	or     BYTE PTR [eax-0x1a883221],bl
  416694:	jne    0x416627
  416696:	and    al,0x67
  416698:	fwait
  416699:	pop    edx
  41669a:	test   DWORD PTR [eax],esp
  41669c:	and    ah,BYTE PTR ds:0x8fa4db9
  4166a2:	lock mov ebp,0x9e3369c5
  4166a8:	push   edi
  4166a9:	jp     0x416699
  4166ab:	add    DWORD PTR [ecx-0x6f23f536],ecx
  4166b1:	mov    BYTE PTR [ebp+0x61d1a8bb],cl
  4166b7:	bnd ret 
  4166b9:	adc    bl,BYTE PTR [ebp-0x75]
  4166bc:	pop    esp
  4166bd:	and    eax,ebp
  4166bf:	adc    ebx,DWORD PTR [eax-0x1d]
  4166c2:	shr    ebp,0xeb
  4166c5:	mov    ds:0x8cea49e6,eax
  4166ca:	lock jmp 0x4166d6
  4166cd:	xlat   BYTE PTR ds:[ebx]
  4166ce:	jmp    0x4166c4
  4166d0:	imul   esi,DWORD PTR [edi],0xf27ec6a3
  4166d6:	in     eax,0x75
  4166d8:	mov    ch,bh
  4166da:	push   es
  4166db:	mov    edi,0x4bd8e8fb
  4166e0:	(bad)  
  4166e1:	jne    0x416732
  4166e3:	ja     0x4166b7
  4166e5:	push   ebx
  4166e6:	sub    bh,BYTE PTR [ebx-0x15]
  4166e9:	retf   
  4166ea:	add    al,0xb7
  4166ec:	fs push eax
  4166ee:	xor    edi,DWORD PTR [edi]
  4166f0:	mov    edx,DWORD PTR [ebp-0x16]
  4166f3:	pop    DWORD PTR [eax+0x11]
  4166f6:	pop    ds
  4166f7:	fist   DWORD PTR [ecx+0x26]
  4166fa:	jg     0x416727
  4166fc:	jle    0x416680
  4166fe:	fist   DWORD PTR [edi]
  416700:	bound  esi,QWORD PTR [edi-0x11]
  416703:	test   al,0xdd
  416705:	or     BYTE PTR [edx+0x120f10cd],cl
  41670b:	sbb    DWORD PTR [edx+0x59],ebp
  41670e:	ss mov al,dh
  416711:	cdq    
  416712:	adc    DWORD PTR [edx+0x52],0x2c
  416716:	bound  ecx,QWORD PTR [eax-0x89f0b73]
  41671c:	arpl   ax,si
  41671e:	fwait
  41671f:	imul   ecx,DWORD PTR [edx],0xfffffff3
  416722:	dec    ecx
  416723:	aad    0x53
  416725:	adc    al,0x37
  416727:	call   0x9d896ee5
  41672c:	push   eax
  41672d:	dec    ebx
  41672e:	add    eax,0x946f8a3d
  416733:	cmp    BYTE PTR [esi],0xe0
  416736:	cmp    ch,dh
  416738:	ret    0x7266
  41673b:	sub    DWORD PTR [ecx-0x391d3c3d],0x81ca57a9
  416745:	sub    DWORD PTR [edi+ecx*2+0x640e4ae5],0x715c6124
  416750:	daa    
  416751:	std    
  416752:	add    al,BYTE PTR [edi-0x44]
  416755:	test   BYTE PTR [esi+0x74],bl
  416758:	in     al,dx
  416759:	sub    al,0x8a
  41675b:	in     al,dx
  41675c:	arpl   ax,dx
  41675e:	outs   dx,DWORD PTR ds:[esi]
  41675f:	fwait
  416760:	sbb    al,0x70
  416762:	fstp   QWORD PTR [esi+0x48]
  416765:	scas   al,BYTE PTR es:[edi]
  416766:	hlt    
  416767:	add    eax,0x7c7d5e5e
  41676c:	inc    BYTE PTR [ecx]
  41676e:	aas    
  41676f:	cmp    DWORD PTR [edi],0x5db5a798
  416775:	jg     0x41671c
  416777:	cmp    BYTE PTR [esi],dl
  416779:	push   ecx
  41677a:	fmulp  st(1),st
  41677c:	jecxz  0x416781
  41677e:	jns    0x4167f3
  416780:	cmp    al,0xf7
  416782:	jge    0x4167f1
  416784:	xor    eax,0x2a1f11a1
  416789:	xlat   BYTE PTR ds:[ebx]
  41678a:	sub    dh,BYTE PTR [ebp+edi*4-0x3de6640a]
  416791:	out    0x53,eax
  416793:	les    edi,FWORD PTR [esi+esi*2-0x30]
  416797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416798:	sub    DWORD PTR [ecx+0x5639e8ef],esp
  41679e:	(bad)  
  41679f:	std    
  4167a0:	mov    ecx,edi
  4167a2:	mov    ch,0x51
  4167a4:	or     dh,0x98
  4167a7:	jbe    0x416783
  4167a9:	inc    eax
  4167aa:	pop    eax
  4167ab:	dec    ebx
  4167ac:	std    
  4167ad:	pop    eax
  4167ae:	mov    al,0x6e
  4167b0:	jbe    0x41680c
  4167b2:	ret    
  4167b3:	xchg   DWORD PTR [edi+0x6663d8c0],ebp
  4167b9:	mov    cl,0x27
  4167bb:	xor    DWORD PTR [eax],edx
  4167bd:	sub    bl,BYTE PTR [esi-0x20]
  4167c0:	in     al,0xf6
  4167c2:	mov    eax,0x7d7c9380
  4167c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c8:	(bad)  
  4167c9:	not    DWORD PTR [esi]
  4167cb:	(bad)  
  4167cc:	sub    DWORD PTR [edi+0x343ceb6f],ecx
  4167d2:	retf   0xada3
  4167d5:	js     0x416832
  4167d7:	out    dx,eax
  4167d8:	or     eax,0xadb573df
  4167dd:	leave  
  4167de:	push   ds
  4167df:	(bad)  
  4167e0:	and    DWORD PTR [ebp-0x269be640],ebx
  4167e6:	jbe    0x4167d1
  4167e8:	fnsave [edx]
  4167ea:	lea    edx,[edi-0x7e]
  4167ed:	mov    ds:0xa2cc418d,eax
  4167f2:	ss mov edi,0x1f42da96
  4167f8:	adc    al,0x11
  4167fa:	pop    edi
  4167fb:	sub    al,0xb5
  4167fd:	or     eax,0xdd5dc8bd
  416802:	jg     0x416849
  416804:	inc    ebx
  416805:	mov    ebx,0x9362f1ea
  41680a:	(bad)  
  41680b:	dec    esi
  41680c:	sbb    bl,BYTE PTR [edx-0x529f079c]
  416812:	adc    eax,ecx
  416814:	out    0x79,eax
  416816:	stos   DWORD PTR es:[edi],eax
  416817:	shl    BYTE PTR [eax+0x2956cf8b],cl
  41681d:	xchg   dl,al
  41681f:	pop    esp
  416820:	(bad)  
  416821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416822:	(bad)
  416825:	fsub   DWORD PTR [edi+0x75]
  416828:	(bad)  
  416829:	pushf  
  41682a:	test   eax,0x4e26b20f
  41682f:	scas   al,BYTE PTR es:[edi]
  416830:	aas    
  416831:	sub    esi,DWORD PTR [esi]
  416833:	or     BYTE PTR [eax],dl
  416835:	xor    al,cl
  416837:	out    0x1,al
  416839:	je     0x416886
  41683b:	repnz cwde 
  41683d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41683e:	jb     0x41684c
  416840:	and    al,0x28
  416842:	(bad)  
  416843:	xchg   esi,eax
  416844:	mov    dh,0x80
  416846:	jge    0x4167e8
  416848:	fcmove st,st(2)
  41684a:	fcomp  QWORD PTR [eax+0x53e345ae]
  416850:	loop   0x4167f9
  416852:	and    al,0x90
  416854:	or     al,0xbb
  416856:	push   ecx
  416857:	and    eax,DWORD PTR [edi+0x18]
  41685a:	push   0xed6afe8e
  41685f:	xchg   DWORD PTR [edi],esi
  416861:	mov    ecx,0xf2904578
  416866:	mov    eax,ds:0xc3a051e7
  41686b:	sub    esp,DWORD PTR [edx+0x10]
  41686e:	in     eax,dx
  41686f:	cmp    ebx,DWORD PTR [edx+0x7]
  416872:	hlt    
  416873:	pop    ds
  416874:	pop    esi
  416875:	and    DWORD PTR [ecx+0x20],esp
  416878:	hlt    
  416879:	add    ecx,DWORD PTR [ecx+0x616c08e4]
  41687f:	mov    ebx,0x55c7deac
  416884:	mov    edx,0x695530af
  416889:	cmp    BYTE PTR [eax+edx*8-0x60],cl
  41688d:	jb     0x41689e
  41688f:	ja     0x4168e0
  416891:	mov    edi,0xf8689ec8
  416896:	sbb    ebx,DWORD PTR [edi+0x99bb4a]
  41689c:	dec    edi
  41689d:	or     ch,ch
  41689f:	(bad)  
  4168a0:	sahf   
  4168a1:	push   edi
  4168a2:	adc    bl,BYTE PTR [ebx-0x154ea4f]
  4168a8:	xchg   esp,eax
  4168a9:	pop    ebx
  4168aa:	cmp    cl,bl
  4168ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168ad:	mov    ebx,0x68ade21f
  4168b2:	mov    dl,0x2c
  4168b4:	xchg   BYTE PTR [edi+0x17b7d266],dh
  4168ba:	mov    ah,0x1e
  4168bc:	out    0x8,al
  4168be:	xor    ah,BYTE PTR [edx]
  4168c0:	scas   al,BYTE PTR es:[edi]
  4168c1:	push   eax
  4168c2:	out    0x10,al
  4168c4:	and    ch,BYTE PTR [ebx+ebx*8+0x3e1657a1]
  4168cb:	ficom  DWORD PTR [ebx-0x5beb3e2c]
  4168d1:	cmp    al,0xd9
  4168d3:	or     ch,BYTE PTR [ebp-0x29be9917]
  4168d9:	mov    bh,0x1e
  4168db:	jmp    0x131:0x28f0ee2d
  4168e2:	addr16 cli 
  4168e4:	sub    edx,DWORD PTR ds:0x11447118
  4168ea:	ss cs out dx,al
  4168ed:	adc    al,0x52
  4168ef:	sbb    esp,ebp
  4168f1:	xchg   al,bl
  4168f3:	jmp    0x6af7114d
  4168f8:	jno    0x416920
  4168fa:	sbb    eax,0xe6ad28f2
  4168ff:	pop    ecx
  416900:	xchg   esi,eax
  416901:	mov    cl,0xf4
  416903:	mov    bh,0x1b
  416905:	ret    0x5a27
  416908:	adc    BYTE PTR [edi-0x6662eab1],bl
  41690e:	outs   dx,BYTE PTR ds:[esi]
  41690f:	popf   
  416910:	mov    edx,0xa3f00b4
  416915:	xchg   BYTE PTR [ebx+0x7058fda3],cl
  41691b:	lock es adc eax,0x2bf7d9ad
  416922:	jmp    0x3f7f:0x35d65b2c
  416929:	stc    
  41692a:	jnp    0x4168e9
  41692c:	stc    
  41692d:	fist   DWORD PTR [ebp-0xe40fca7]
  416933:	in     al,0x1e
  416935:	mov    eax,0xaea8a9c1
  41693a:	icebp  
  41693b:	(bad)  
  41693c:	(bad)  
  41693d:	das    
  41693e:	cmp    al,0xbb
  416940:	jecxz  0x4169be
  416942:	mov    ds,WORD PTR [edx+0x3e010154]
  416948:	mov    ds:0x77b496e1,al
  41694d:	jle    0x416931
  41694f:	out    dx,al
  416950:	mov    esp,0x30cbbcdf
  416955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416956:	add    BYTE PTR [ecx+ebx*2+0x72],al
  41695a:	enter  0xb479,0xa1
  41695e:	les    edi,FWORD PTR [eax+0x71143dd6]
  416964:	xchg   BYTE PTR [esi*4+0x555820ad],bh
  41696b:	outs   dx,DWORD PTR ds:[esi]
  41696c:	fild   DWORD PTR [ecx-0x2198b1dc]
  416972:	mov    dh,BYTE PTR [esi-0xab12bd6]
  416978:	and    eax,0x8ffe49e5
  41697d:	mov    ecx,0xaf3ced76
  416982:	jns    0x4169ff
  416984:	sub    BYTE PTR [ebx],ah
  416986:	xchg   edi,eax
  416987:	rcl    eax,1
  416989:	jo     0x4169e8
  41698b:	xor    DWORD PTR [edi],0x525a7b9c
  416991:	aad    0x7c
  416993:	fdiv   QWORD PTR [ecx]
  416995:	xchg   ecx,eax
  416996:	push   es
  416997:	in     al,dx
  416998:	imul   edi,DWORD PTR [edx+0x36031a49],0xda5b5a8
  4169a2:	cdq    
  4169a3:	ja     0x416992
  4169a5:	pop    es
  4169a6:	push   0xfffffffd
  4169a8:	push   0xfffffffb
  4169aa:	and    DWORD PTR [ecx+0x66a63794],0xffffffe5
  4169b1:	leave  
  4169b2:	jge    0x416a23
  4169b4:	in     al,dx
  4169b5:	adc    edi,DWORD PTR [esi+ebp*8]
  4169b8:	jns    0x416979
  4169ba:	mov    eax,0xdcaab3b4
  4169bf:	ret    
  4169c0:	aad    0xd6
  4169c2:	sub    al,0x31
  4169c4:	test   al,0x74
  4169c6:	push   0xffffffe6
  4169c8:	pop    es
  4169c9:	sbb    DWORD PTR [esi+0x4d1fc43b],ebp
  4169cf:	push   0xf5ffee54
  4169d4:	xchg   esi,eax
  4169d5:	jns    0x416a2c
  4169d7:	and    eax,0x8ee99487
  4169dc:	into   
  4169dd:	and    al,0xf6
  4169df:	mov    bh,0x3d
  4169e1:	adc    al,0x95
  4169e3:	pop    eax
  4169e4:	(bad)  
  4169e6:	xor    ch,BYTE PTR ds:0xe9fd4985
  4169ec:	push   ebx
  4169ed:	addr16 jp 0x4169d4
  4169f0:	sbb    al,0x74
  4169f2:	ror    DWORD PTR [eax-0x6ad4a122],0xb6
  4169f9:	jge    0x416a66
  4169fb:	dec    edx
  4169fc:	cwde   
  4169fd:	jecxz  0x416a1a
  4169ff:	xchg   edi,eax
  416a00:	xor    al,0xa4
  416a02:	loopne 0x416a22
  416a04:	call   0xa8fd:0xc57bb2ca
  416a0b:	nop
  416a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a0d:	sahf   
  416a0e:	dec    ebx
  416a0f:	push   ecx
  416a10:	push   cs
  416a11:	xchg   DWORD PTR [ebp+0x70],esp
  416a14:	pop    edi
  416a15:	mov    ch,0xfa
  416a17:	stc    
  416a18:	cdq    
  416a19:	rol    BYTE PTR [edi],cl
  416a1b:	fistp  DWORD PTR ds:0xddac4b2b
  416a21:	xor    eax,0x1f426b73
  416a26:	mov    ds:0xf3de5cf2,eax
  416a2b:	mov    BYTE PTR [ebp+0x538360ac],bl
  416a31:	bound  esi,QWORD PTR gs:[ecx-0x1e]
  416a35:	sbb    al,0x13
  416a37:	inc    ebx
  416a38:	xor    BYTE PTR [ecx-0x1c],ah
  416a3b:	add    bh,bh
  416a3d:	and    ebp,edx
  416a3f:	cmp    BYTE PTR [eax-0x44],ah
  416a42:	add    eax,0x250d4eef
  416a47:	popf   
  416a48:	sub    DWORD PTR [ecx-0x48],esp
  416a4b:	jns    0x4169ff
  416a4d:	jnp    0x4169df
  416a4f:	imul   ebx,ebx,0x7e
  416a52:	and    DWORD PTR [esi+0x1c9c94b2],eax
  416a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a5a:	xor    bh,0x81
  416a5d:	pop    ecx
  416a5e:	sbb    DWORD PTR [edi-0x48],edi
  416a61:	(bad)  
  416a62:	addr16 pushf 
  416a64:	jg     0x416a69
  416a66:	jae    0x416adb
  416a68:	xor    eax,0xf37ed6a4
  416a6d:	and    DWORD PTR [esi-0x27dc399a],esp
  416a73:	pop    esi
  416a74:	inc    edx
  416a75:	std    
  416a76:	mov    eax,0x7b73e9fe
  416a7b:	mov    ebp,0x9fbab905
  416a80:	sbb    BYTE PTR ss:0xf1e484ae,cl
  416a87:	xchg   BYTE PTR [eiz*8+0x52ef1151],ch
  416a8e:	stos   BYTE PTR es:[edi],al
  416a8f:	push   es
  416a90:	ss jmp 0x416a53
  416a93:	aaa    
  416a94:	xor    ebp,DWORD PTR [edi]
  416a96:	jl     0x416a5d
  416a98:	mov    WORD PTR [edx-0x80],?
  416a9b:	rcr    bh,0xdc
  416a9e:	jl     0x416a52
  416aa0:	pop    esp
  416aa1:	aas    
  416aa2:	sar    esp,1
  416aa4:	fld    DWORD PTR ds:0xb418b037
  416aaa:	iret   
  416aab:	stos   BYTE PTR es:[edi],al
  416aac:	mov    dh,0x47
  416aae:	je     0x416b18
  416ab0:	push   esi
  416ab1:	dec    edx
  416ab2:	jo     0x416ac8
  416ab4:	pop    ss
  416ab5:	retf   0x556a
  416ab8:	js     0x416a3d
  416aba:	stc    
  416abb:	push   0xac67d373
  416ac0:	in     eax,dx
  416ac1:	push   edi
  416ac2:	pusha  
  416ac3:	retf   0xb201
  416ac6:	or     eax,DWORD PTR [edx+ecx*1]
  416ac9:	fstp   TBYTE PTR [ebp-0x19]
  416acc:	popa   
  416acd:	repz jge 0x416a5b
  416ad0:	pushf  
  416ad1:	pop    ss
  416ad2:	or     ecx,DWORD PTR [esi-0x19]
  416ad5:	shl    DWORD PTR [eax],0xd9
  416ad8:	(bad)  
  416ad9:	into   
  416ada:	aas    
  416adb:	out    0x9,al
  416add:	xchg   ecx,eax
  416ade:	cdq    
  416adf:	(bad)  
  416ae0:	loopne 0x416b51
  416ae2:	pop    eax
  416ae3:	(bad)  
  416ae4:	mov    edi,0x2f7fc22e
  416ae9:	lods   eax,DWORD PTR ds:[esi]
  416aea:	jno    0x416aa1
  416aec:	and    DWORD PTR [ebx],esp
  416aee:	and    ebx,DWORD PTR [esi]
  416af0:	xchg   esi,eax
  416af1:	imul   edx,DWORD PTR ds:0x1fab39e5,0xcaea25d7
  416afb:	or     al,0x61
  416afd:	shr    BYTE PTR ds:0x34c91c08,1
  416b03:	mov    cl,0xca
  416b05:	cmp    al,0x72
  416b07:	pop    edi
  416b08:	fwait
  416b09:	sbb    al,0x23
  416b0b:	add    eax,0x5d895380
  416b10:	mov    al,ds:0x2bbfc20d
  416b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b16:	mov    dl,0x7d
  416b18:	out    dx,al
  416b19:	mov    ds:0xe6a5c51f,al
  416b1e:	adc    bh,0x95
  416b21:	cmp    esp,eax
  416b23:	push   0x1350bda5
  416b28:	call   FWORD PTR [ecx+edx*4-0x79]
  416b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b2d:	cwde   
  416b2e:	out    0xd6,eax
  416b30:	xchg   DWORD PTR [ecx+ecx*4+0x47],edx
  416b34:	mov    eax,ds:0xd01b2190
  416b39:	mov    ds:0xc7c1cd6f,eax
  416b3e:	in     eax,0x3
  416b40:	jae    0x416af3
  416b42:	sbb    al,0x9f
  416b44:	sahf   
  416b45:	cmc    
  416b46:	les    ebp,FWORD PTR [esi]
  416b48:	inc    esp
  416b49:	jbe    0x416ba5
  416b4b:	sub    ebp,esp
  416b4d:	or     al,0xe
  416b4f:	je     0x416b07
  416b51:	or     dh,BYTE PTR ds:0x50471356
  416b57:	jns    0x416ada
  416b59:	mov    bl,0xe0
  416b5b:	out    0x62,eax
  416b5d:	and    esp,0x71169a39
  416b63:	mov    ecx,0x535adad3
  416b68:	ror    DWORD PTR ds:0xfada22e5,1
  416b6e:	sbb    edi,DWORD PTR [ebx-0x7e4fa8ff]
  416b74:	in     eax,0x65
  416b76:	cli    
  416b77:	aam    0x28
  416b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b7a:	fcomp  QWORD PTR [edx]
  416b7c:	push   ss
  416b7d:	mov    eax,ds:0x45d3fb4a
  416b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b83:	sbb    esp,DWORD PTR [ecx-0x6300a9bf]
  416b89:	dec    ecx
  416b8a:	icebp  
  416b8b:	fnstenv [edx-0x56964a1f]
  416b91:	aam    0x70
  416b93:	dec    ecx
  416b94:	mov    esi,0x3b7b9aa4
  416b99:	mov    ecx,0x66e75985
  416b9e:	test   DWORD PTR [esi-0x34a9ad63],edi
  416ba4:	lds    esi,FWORD PTR [eax+0x13b3eaa9]
  416baa:	shr    bl,0x34
  416bad:	scas   eax,DWORD PTR es:[edi]
  416bae:	dec    ebp
  416baf:	mov    eax,ds:0xd7b43e82
  416bb4:	leave  
  416bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb6:	mov    al,0x11
  416bb8:	test   eax,0x8f919442
  416bbd:	mov    dh,0xe8
  416bbf:	mov    al,0x51
  416bc1:	aad    0x68
  416bc3:	jl     0x416bcd
  416bc5:	push   esi
  416bc6:	xchg   ebp,eax
  416bc7:	xlat   BYTE PTR ds:[ebx]
  416bc8:	push   edi
  416bc9:	lods   eax,DWORD PTR ds:[esi]
  416bca:	sub    BYTE PTR [ebp-0x5601ebb9],cl
  416bd0:	jmp    0x416b7f
  416bd2:	pop    es
  416bd3:	xchg   esi,eax
  416bd4:	sbb    cl,cl
  416bd6:	mov    ecx,0x1304bde7
  416bdb:	inc    ebp
  416bdc:	shr    DWORD PTR [ebp+0x1d9a1373],0x7f
  416be3:	xor    cl,BYTE PTR [edi+0x24]
  416be6:	aad    0xa5
  416be8:	cmp    DWORD PTR [eax],0xdb2af533
  416bee:	mov    ch,0x6e
  416bf0:	aas    
  416bf1:	inc    edi
  416bf2:	sbb    ebp,DWORD PTR [ecx+eiz*4]
  416bf5:	and    BYTE PTR [edi-0x4b],dl
  416bf8:	leave  
  416bf9:	mov    ds:0xbd67c97d,eax
  416bff:	outs   dx,BYTE PTR ds:[esi]
  416c00:	mov    edi,0x5322b80e
  416c05:	or     edi,DWORD PTR [eax]
  416c07:	inc    DWORD PTR [esi-0x7edd53ca]
  416c0d:	mov    ecx,0x9d7b7d51
  416c12:	pusha  
  416c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c14:	push   0xee19f83c
  416c19:	sub    eax,0x3eb76cc9
  416c1e:	inc    ebx
  416c1f:	retf   0xd643
  416c22:	arpl   WORD PTR ds:0xf1ab5afc,cx
  416c28:	mov    ah,0xa7
  416c2a:	out    0x5c,eax
  416c2c:	repz inc edi
  416c2e:	xor    DWORD PTR [ecx],edx
  416c30:	imul   ebp,DWORD PTR [ecx+0x445b1e79],0x3f83d9eb
  416c3a:	cdq    
  416c3b:	dec    edx
  416c3c:	fcmovnbe st,st(6)
  416c3e:	inc    ecx
  416c3f:	mov    edi,DWORD PTR [ebp+0x3b7e8990]
  416c45:	pop    edx
  416c46:	cld    
  416c47:	pop    eax
  416c48:	adc    al,0xe7
  416c4a:	mov    cl,BYTE PTR [ecx+0x2500b2bb]
  416c50:	add    cl,BYTE PTR [eax]
  416c52:	daa    
  416c53:	iret   
  416c54:	mov    DWORD PTR [ebp+0x344c55f1],ebx
  416c5a:	sbb    eax,0xc590033e
  416c5f:	lea    edx,ds:0x20ad2866
  416c65:	test   DWORD PTR [eax-0x57e16302],eax
  416c6b:	inc    ecx
  416c6c:	push   edx
  416c6d:	push   eax
  416c6e:	scas   al,BYTE PTR es:[edi]
  416c6f:	jbe    0x416c09
  416c71:	cdq    
  416c72:	shl    esp,0xb4
  416c75:	sub    al,0xc9
  416c77:	aaa    
  416c78:	ret    0x6db4
  416c7b:	mov    esi,0x8a82227
  416c80:	mov    ah,0x46
  416c82:	jge    0x416c84
  416c84:	fst    QWORD PTR ds:0x4c91371f
  416c8a:	adc    al,0x98
  416c8c:	inc    ebx
  416c8d:	es ss gs or eax,0xac800831
  416c95:	sub    esp,DWORD PTR [esi+0x58efc59d]
  416c9b:	repz fwait
  416c9d:	mov    ch,0xe3
  416c9f:	inc    ebx
  416ca0:	jne    0x416cfd
  416ca2:	mov    esp,0xdb72dec5
  416ca7:	ins    BYTE PTR es:[edi],dx
  416ca8:	inc    esi
  416ca9:	cmp    esi,0xb5ba44fb
  416caf:	pop    edi
  416cb0:	jle    0x416c4e
  416cb2:	stos   BYTE PTR es:[edi],al
  416cb3:	jmp    0x3a39:0x51423f3e
  416cba:	pop    edx
  416cbb:	(bad)  
  416cbc:	jns    0x416d3d
  416cbe:	inc    ebx
  416cbf:	ja     0x416d2d
  416cc1:	mov    al,ds:0x3c042f74
  416cc6:	sub    esi,DWORD PTR [edi-0x9c6e79d]
  416ccc:	cmp    dl,0x38
  416ccf:	popf   
  416cd0:	mov    edi,?
  416cd2:	or     DWORD PTR [esi+0x29],0x4a65e71a
  416cd9:	lods   eax,DWORD PTR ds:[esi]
  416cda:	dec    edx
  416cdb:	call   0xc01:0xabaae2a
  416ce2:	lds    esp,FWORD PTR [esi-0xbae65a4]
  416ce8:	pushf  
  416ce9:	cmp    edx,edi
  416ceb:	(bad)  
  416cec:	and    bl,BYTE PTR cs:[ecx]
  416cef:	cmp    ch,BYTE PTR [edx-0x48]
  416cf2:	xor    bl,BYTE PTR [edx-0x7388403f]
  416cf8:	shl    ebp,0x50
  416cfb:	imul   esi,DWORD PTR [edi+0x35],0xfc764782
  416d02:	adc    DWORD PTR [edi-0xf35f912],0x59
  416d09:	mov    edx,0x7ab51337
  416d0e:	mov    cl,0xdc
  416d10:	std    
  416d11:	ficomp DWORD PTR [edx+0x4c2957bc]
  416d17:	sbb    esp,DWORD PTR [eax-0x3334c0a7]
  416d1d:	ret    
  416d1e:	pop    esp
  416d1f:	jns    0x416d04
  416d21:	or     DWORD PTR [esi],ebx
  416d23:	mov    ?,esp
  416d25:	cmp    BYTE PTR [di-0x16],cl
  416d29:	pop    ecx
  416d2a:	and    eax,0x48497d6
  416d2f:	test   DWORD PTR [ebx-0x24],edx
  416d32:	mov    ebp,0x71f67f8e
  416d37:	jge    0x416d15
  416d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d3a:	mov    WORD PTR [ebp-0x25d534a0],cs
  416d40:	aad    0x24
  416d42:	push   ds
  416d43:	dec    eax
  416d44:	adc    dh,cl
  416d46:	dec    ebp
  416d47:	and    BYTE PTR [ecx],0x74
  416d4a:	test   BYTE PTR [esi],0xfb
  416d4d:	pop    edi
  416d4e:	popf   
  416d4f:	out    0x1c,eax
  416d51:	scas   al,BYTE PTR es:[edi]
  416d52:	ins    BYTE PTR es:[edi],dx
  416d53:	or     ah,ah
  416d55:	test   eax,0x2f01ff07
  416d5a:	daa    
  416d5b:	and    al,0xa7
  416d5d:	mov    dl,0x95
  416d5f:	ss inc ebx
  416d61:	repnz adc eax,0x30da99e
  416d67:	iret   
  416d68:	dec    ecx
  416d69:	jae    0x416de3
  416d6b:	jmp    0x1ecd:0xb6e83085
  416d72:	xchg   BYTE PTR [ebx-0x7cc9351],bl
  416d78:	push   esp
  416d79:	add    dl,dl
  416d7b:	pop    edi
  416d7c:	je     0x416d7c
  416d7e:	pop    edi
  416d7f:	jecxz  0x416dc5
  416d81:	pushf  
  416d82:	fs repz call 0xf1d3:0x1a835915
  416d8b:	popa   
  416d8c:	add    al,0xb2
  416d8e:	dec    ebp
  416d8f:	adc    DWORD PTR gs:0xa226698c,edi
  416d96:	hlt    
  416d97:	mov    dl,0x82
  416d99:	jb     0x416dc9
  416d9b:	and    BYTE PTR [ebx-0xf],0xd
  416d9f:	mov    al,0xc2
  416da1:	add    DWORD PTR [esi+0x78],ebx
  416da4:	xchg   ebp,eax
  416da5:	dec    edx
  416da6:	daa    
  416da7:	adc    BYTE PTR [ecx-0x134d9b5],dh
  416dad:	cmp    edx,ebx
  416daf:	sub    al,0x4c
  416db1:	ror    BYTE PTR [ebp-0x71a854fc],0xbb
  416db8:	push   eax
  416db9:	or     ch,BYTE PTR [ebx-0x6a842cfa]
  416dbf:	inc    eax
  416dc0:	mov    DWORD PTR [ebp+0x3],eax
  416dc3:	mov    ah,0x34
  416dc5:	sbb    DWORD PTR ss:[esi-0x38031b7c],edi
  416dcc:	leave  
  416dcd:	retf   
  416dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dcf:	or     DWORD PTR [edi],ecx
  416dd1:	xor    ecx,DWORD PTR [esi+0x68]
  416dd4:	mov    ebp,DWORD PTR [bp+si+0x26]
  416dd8:	test   DWORD PTR [edx+0x48],0xf7112f90
  416ddf:	scas   al,BYTE PTR es:[edi]
  416de0:	sbb    eax,0xf80284e1
  416de5:	rcr    BYTE PTR [ecx-0x642f361f],1
  416deb:	add    BYTE PTR [ecx],ah
  416ded:	aam    0xea
  416def:	int    0xd0
  416df1:	leave  
  416df2:	dec    ebp
  416df3:	cwde   
  416df4:	retf   0x2c7f
  416df7:	cmp    DWORD PTR [ecx+0x4e072c6c],0xba63bd49
  416e01:	cs popf 
  416e03:	mov    BYTE PTR [esi+0x7e],al
  416e06:	out    0x97,al
  416e08:	mov    al,cs:0x38e123fb
  416e0e:	aam    0x1
  416e10:	pop    ss
  416e11:	adc    eax,0xacf8cb12
  416e16:	jae    0x416dd6
  416e18:	fisttp QWORD PTR [ebx-0x7af407c6]
  416e1e:	sub    BYTE PTR [ebx+ecx*4+0x26],dh
  416e22:	push   edi
  416e23:	pop    eax
  416e24:	mov    esi,0x979852d5
  416e29:	jae    0x416ded
  416e2b:	mov    esp,0xdaf3e344
  416e30:	jp     0x416e89
  416e32:	pop    esi
  416e33:	cs scas eax,DWORD PTR es:[edi]
  416e35:	in     al,dx
  416e36:	cdq    
  416e37:	scas   eax,DWORD PTR es:[edi]
  416e38:	sbb    BYTE PTR [ebx],bl
  416e3a:	daa    
  416e3b:	and    eax,0x56a43291
  416e40:	or     ah,cl
  416e42:	push   ss
  416e43:	adc    al,BYTE PTR [edi-0x54]
  416e46:	jmp    0x6657:0x4fa529a4
  416e4d:	sar    DWORD PTR [ecx],1
  416e4f:	xchg   esp,eax
  416e50:	gs dec esi
  416e52:	sbb    ebp,DWORD PTR ds:0xd48a6d85
  416e58:	push   es
  416e59:	dec    ecx
  416e5a:	ret    0x2190
  416e5d:	pop    ds
  416e5e:	adc    dl,BYTE PTR [edi-0x18c1f3e]
  416e64:	jb     0x416e9e
  416e66:	fdiv   QWORD PTR [ecx-0x77846fe2]
  416e6c:	push   cs
  416e6d:	adc    al,bl
  416e6f:	jmp    0xe1c76da2
  416e74:	xor    ebp,DWORD PTR [ebx-0xf]
  416e77:	pop    edx
  416e78:	test   eax,0x16a922a9
  416e7d:	stos   BYTE PTR es:[edi],al
  416e7e:	xchg   edx,eax
  416e7f:	or     bl,0x28
  416e82:	push   bx
  416e84:	pop    esi
  416e85:	je     0x416e9d
  416e87:	call   0x4f73:0x4d9b3c45
  416e8e:	jecxz  0x416e72
  416e90:	xor    DWORD PTR [ebp-0x6],eax
  416e93:	int3   
  416e94:	sbb    eax,DWORD PTR [edi]
  416e96:	mov    ah,0x58
  416e98:	jmp    FWORD PTR cs:[edx-0x55fa1e56]
  416e9f:	sbb    ch,al
  416ea1:	mov    esp,0xce6890b1
  416ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ea7:	leave  
  416ea8:	dec    esp
  416ea9:	sbb    eax,0x610a8eb6
  416eae:	adc    al,0x8a
  416eb0:	aam    0xad
  416eb2:	arpl   WORD PTR [esi+0x63],ax
  416eb5:	xlat   BYTE PTR ds:[bx]
  416eb7:	push   ecx
  416eb8:	leave  
  416eb9:	jmp    0xa385759c
  416ebe:	lock popf 
  416ec0:	push   0xb9dcba89
  416ec5:	push   ss
  416ec6:	sub    ebp,edx
  416ec8:	xchg   ebp,eax
  416ec9:	cld    
  416eca:	mov    ecx,0x2648627
  416ecf:	xchg   ecx,eax
  416ed0:	ja     0x416e6f
  416ed2:	daa    
  416ed3:	test   ecx,0xc3dafa26
  416ed9:	inc    ebx
  416eda:	icebp  
  416edb:	in     al,0xd9
  416edd:	lock clc 
  416edf:	or     BYTE PTR [esi+0x72],0x64
  416ee3:	sbb    BYTE PTR [ecx-0x40],dl
  416ee6:	add    ecx,DWORD PTR [ebx+0x71]
  416ee9:	or     eax,0x456068c2
  416eee:	mov    dl,0x7e
  416ef0:	push   esp
  416ef1:	push   ecx
  416ef2:	cmp    edx,DWORD PTR gs:[eax-0x54]
  416ef6:	xchg   edx,eax
  416ef7:	ret    0x2e0
  416efa:	mov    ds:0xf8b64e13,al
  416eff:	dec    esi
  416f00:	(bad)  
  416f01:	ds jnp 0x416ead
  416f04:	cmc    
  416f05:	addr16 mov edx,0x507081c4
  416f0b:	ja     0x416f16
  416f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f0e:	mov    esp,edi
  416f10:	(bad)  
  416f11:	jmp    0x416f5d
  416f13:	int3   
  416f14:	icebp  
  416f15:	mov    eax,0xa3335d14
  416f1a:	mov    ah,BYTE PTR ds:0xe101e779
  416f20:	adc    edx,DWORD PTR [edi+ebp*8-0x6b0f2f09]
  416f27:	add    eax,0xb9eb94be
  416f2c:	retf   
  416f2d:	push   ebp
  416f2e:	push   ecx
  416f2f:	xchg   ebx,eax
  416f30:	mov    ebx,0xe239740b
  416f35:	sub    dh,BYTE PTR [esi-0x31]
  416f38:	aaa    
  416f39:	jb     0x416ec0
  416f3b:	push   ds
  416f3c:	inc    ecx
  416f3d:	sbb    dl,BYTE PTR [edx-0x3f44a616]
  416f43:	add    ah,bl
  416f45:	push   0x4bd8cd47
  416f4a:	sahf   
  416f4b:	push   eax
  416f4c:	or     ch,dh
  416f4e:	mov    BYTE PTR ds:0xe8442ef3,dh
  416f54:	push   eax
  416f55:	xchg   edi,eax
  416f56:	jmp    0x416f95
  416f58:	jg     0x416f78
  416f5a:	adc    edi,esi
  416f5c:	fucomi st,st(1)
  416f5e:	scas   eax,DWORD PTR es:[edi]
  416f5f:	xchg   edx,eax
  416f60:	and    al,BYTE PTR [edi-0x1f]
  416f63:	and    cl,BYTE PTR [esi-0x65]
  416f66:	sar    dl,cl
  416f68:	pop    edx
  416f69:	cwde   
  416f6a:	sub    al,0x56
  416f6c:	adc    DWORD PTR ds:0xb4fbe4eb,esi
  416f72:	mov    ebx,ebp
  416f74:	ja     0x416f25
  416f76:	das    
  416f77:	jno    0x416f42
  416f79:	inc    eax
  416f7a:	fldcw  WORD PTR [ebx]
  416f7c:	push   ecx
  416f7d:	repz ficomp WORD PTR es:[eax-0x22a273d5]
  416f85:	call   0x60a8:0x57af5556
  416f8c:	fmul   QWORD PTR [edx+0x44]
  416f8f:	fstp   TBYTE PTR [esi+0x5f]
  416f92:	pop    ebp
  416f93:	ret    0x848e
  416f96:	loope  0x416fa3
  416f98:	sub    esp,0xc6725807
  416f9e:	into   
  416f9f:	popa   
  416fa0:	mov    esp,0x88596af1
  416fa5:	jg     0x416f80
  416fa7:	adc    ebp,ecx
  416fa9:	loopne 0x417002
  416fab:	adc    BYTE PTR [edx],0x55
  416fae:	pop    ebp
  416faf:	mov    edx,0x6d2ce7c7
  416fb4:	call   0x6b54:0xa61494a7
  416fbb:	pusha  
  416fbc:	cmp    DWORD PTR [ebx-0x6f6551d2],0x77
  416fc3:	test   DWORD PTR [ebx+0x57],edi
  416fc6:	pop    esi
  416fc7:	xor    al,0xef
  416fc9:	cmp    eax,0x46deb5f8
  416fce:	int    0x7a
  416fd0:	push   edi
  416fd1:	pop    edx
  416fd2:	sbb    ch,dl
  416fd4:	and    cl,BYTE PTR [ecx-0x38]
  416fd7:	sub    al,0x89
  416fd9:	and    al,0xc
  416fdb:	mov    ebp,0xff7a16f3
  416fe0:	test   al,0xcc
  416fe2:	fcmovnbe st,st(0)
  416fe4:	call   0xe8964e5e
  416fe9:	int3   
  416fea:	xchg   ebx,eax
  416feb:	enter  0x83e9,0x7b
  416fef:	adc    eax,0xec51ab7f
  416ff4:	xlat   BYTE PTR ds:[ebx]
  416ff5:	aas    
  416ff6:	sbb    BYTE PTR [eax+0x44],cl
  416ff9:	(bad)  
  416ffa:	sbb    al,0x9e
  416ffc:	repnz shl esp,cl
  416fff:	loop   0x416fce
  417001:	xchg   esp,eax
  417002:	aad    0x4a
  417004:	in     eax,dx
  417005:	in     eax,0xd8
  417007:	xlat   BYTE PTR ds:[ebx]
  417008:	scas   eax,DWORD PTR es:[edi]
  417009:	data16 out dx,al
  41700b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41700c:	lahf   
  41700d:	pop    es
  41700e:	push   0xffffff9b
  417010:	mov    esp,0x815d7a18
  417015:	add    bl,cl
  417017:	cmp    al,0x27
  417019:	and    BYTE PTR [edx+0x21],ah
  41701c:	xor    al,0x94
  41701e:	dec    esp
  41701f:	rcr    bl,0x26
  417022:	and    eax,0xfe6962f7
  417027:	arpl   bp,si
  417029:	sbb    cl,dl
  41702b:	adc    ch,BYTE PTR [edx]
  41702d:	pop    ebp
  41702e:	fisubr DWORD PTR [ebx-0x27]
  417031:	and    eax,0x3a63aff8
  417036:	inc    ebp
  417037:	jae    0x4170ad
  417039:	dec    edx
  41703a:	push   cs
  41703b:	aas    
  41703c:	ror    BYTE PTR [esi],0xe
  41703f:	leave  
  417040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417041:	repnz lahf 
  417043:	mov    esp,0x258b221
  417048:	call   0xff32c141
  41704d:	data16 je 0x4170a4
  417050:	cs pop ss
  417052:	sbb    ch,dh
  417054:	mov    BYTE PTR [ebx+0x2a70e13d],bh
  41705a:	inc    edi
  41705b:	fcomp  DWORD PTR [ebx]
  41705d:	clc    
  41705e:	fimul  DWORD PTR [esi]
  417060:	in     eax,0xb
  417062:	cmp    dl,BYTE PTR [edx]
  417064:	loopne 0x4170cf
  417066:	(bad)  
  417068:	or     BYTE PTR [esi+0x32a070f4],0x3c
  41706f:	ja     0x4170d8
  417071:	mov    DWORD PTR [ebx+0x4e],ebp
  417074:	sbb    al,0x82
  417076:	lods   eax,DWORD PTR ds:[esi]
  417077:	mov    ebp,edx
  417079:	pop    edi
  41707a:	sbb    BYTE PTR [ebx+0x357ba198],cl
  417080:	imul   ecx,DWORD PTR [ebx-0x1f4c8cb0],0xffffffec
  417087:	and    DWORD PTR [ecx-0x4b],eax
  41708a:	push   esp
  41708b:	pop    ss
  41708c:	sbb    DWORD PTR [edi],edi
  41708e:	jne    0x4170ea
  417090:	dec    ecx
  417091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417092:	aaa    
  417093:	sub    BYTE PTR [ecx+eiz*4+0x66],0xc7
  417098:	dec    esp
  417099:	loope  0x4170fd
  41709b:	loope  0x417047
  41709d:	sub    al,0xaf
  41709f:	sbb    DWORD PTR [edi-0x8],esp
  4170a2:	int3   
  4170a3:	mov    esi,0x3ac481d6
  4170a8:	inc    esp
  4170a9:	clc    
  4170aa:	in     eax,0x73
  4170ac:	pop    eax
  4170ad:	mul    ch
  4170af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170b0:	lods   eax,DWORD PTR ds:[esi]
  4170b1:	or     ecx,DWORD PTR [ebx]
  4170b3:	fsub   st(6),st
  4170b5:	mov    al,ds:0x3c17f5fb
  4170ba:	int3   
  4170bb:	cdq    
  4170bc:	push   eax
  4170bd:	es ja  0x4170ae
  4170c0:	pop    ecx
  4170c1:	mov    ds:0xcf60ed36,eax
  4170c6:	outs   dx,DWORD PTR ds:[esi]
  4170c7:	std    
  4170c8:	dec    ebx
  4170c9:	adc    ebp,DWORD PTR [ebx-0x22]
  4170cc:	inc    esi
  4170cd:	imul   DWORD PTR [ebx-0x3fffebde]
  4170d3:	and    BYTE PTR [edx],bl
  4170d5:	in     al,0xcb
  4170d7:	mov    bh,0x9f
  4170d9:	call   0xdb7ec0bf
  4170de:	inc    ecx
  4170df:	xor    cl,al
  4170e1:	mov    dl,0x5
  4170e3:	mov    cl,0x85
  4170e5:	xor    DWORD PTR [eax+0x13cb8c75],edx
  4170eb:	push   ecx
  4170ec:	cmp    al,0xa0
  4170ee:	sbb    DWORD PTR [esi*2+0x3de0d862],0x40
  4170f6:	ins    DWORD PTR es:[edi],dx
  4170f7:	stos   BYTE PTR es:[edi],al
  4170f8:	fwait
  4170f9:	or     DWORD PTR [ebx-0x49883a67],ebx
  4170ff:	iret   
  417100:	or     BYTE PTR [esi],dh
  417102:	mov    ecx,0xf9ab7845
  417107:	adc    al,0x8d
  417109:	int    0x1b
  41710b:	xor    bh,ah
  41710d:	adc    BYTE PTR [ecx-0x281d38a2],ch
  417113:	cwde   
  417114:	out    dx,al
  417115:	ja     0x417118
  417117:	mov    al,0xf6
  417119:	cdq    
  41711a:	xchg   esp,eax
  41711b:	push   ds
  41711c:	mov    al,0x3d
  41711e:	inc    edi
  41711f:	xor    eax,0x686024cd
  417124:	call   0x52d8864f
  417129:	mov    esp,0x778b067d
  41712e:	into   
  41712f:	dec    ebx
  417130:	push   0x3c
  417132:	xchg   edi,eax
  417133:	shl    ah,0x51
  417136:	inc    edx
  417137:	lahf   
  417138:	inc    edx
  417139:	loopne 0x4171aa
  41713b:	dec    edx
  41713c:	shl    dh,1
  41713e:	fnsave [eax]
  417140:	(bad)  
  417142:	pop    ss
  417143:	outs   dx,DWORD PTR ds:[esi]
  417144:	cmp    eax,0xa41b10c4
  417149:	mov    ?,esi
  41714b:	mov    dh,0x7
  41714d:	pop    edx
  41714e:	popf   
  41714f:	inc    ecx
  417150:	xchg   ebx,eax
  417151:	push   es
  417152:	jl     0x4170fc
  417154:	das    
  417155:	mov    eax,0x514d941c
  41715a:	push   0xf9082c15
  41715f:	xchg   ebp,eax
  417160:	test   eax,0xc52a3c6a
  417165:	push   esp
  417166:	aaa    
  417167:	out    0xa8,al
  417169:	loope  0x417150
  41716b:	inc    ecx
  41716c:	xor    BYTE PTR [edi+0x36],ah
  41716f:	mov    esp,0x29f0ab5a
  417174:	adc    BYTE PTR [eax],dh
  417176:	pop    esi
  417177:	xor    eax,edx
  417179:	cmc    
  41717a:	jmp    0xe2eb:0x1a269887
  417181:	out    dx,eax
  417182:	and    ecx,DWORD PTR [esi-0x5f]
  417185:	into   
  417186:	rol    BYTE PTR [edi],1
  417188:	mov    ah,0xab
  41718a:	sbb    ebp,DWORD PTR [ebp+eax*1+0x18c28bfd]
  417191:	(bad)  
  417192:	dec    edx
  417193:	xchg   ebx,eax
  417194:	pop    ss
  417195:	mov    ch,0xfb
  417197:	jbe    0x417200
  417199:	retf   0x3c31
  41719c:	stos   BYTE PTR es:[edi],al
  41719d:	jbe    0x417197
  41719f:	dec    ebp
  4171a0:	in     al,dx
  4171a1:	or     cl,0x7b
  4171a4:	mov    ah,0x6e
  4171a6:	adc    esi,DWORD PTR [ecx]
  4171a8:	xchg   ebp,eax
  4171a9:	push   ebx
  4171aa:	jp     0x41720a
  4171ac:	mov    esp,0xc4aeefe4
  4171b1:	mov    ecx,0xf2db1557
  4171b6:	and    DWORD PTR ds:0x91d70eb0,ecx
  4171bc:	or     al,BYTE PTR [eax*1-0x9ddd10]
  4171c3:	sub    eax,0x5dc99f88
  4171c8:	icebp  
  4171c9:	loopne 0x417194
  4171cb:	dec    ebp
  4171cc:	lods   al,BYTE PTR ds:[esi]
  4171cd:	inc    edx
  4171ce:	loopne 0x4171ea
  4171d0:	xchg   ecx,eax
  4171d1:	cwde   
  4171d2:	push   edi
  4171d3:	mov    ecx,0x213424bc
  4171d8:	mov    al,ds:0x9af0366a
  4171dd:	out    dx,al
  4171de:	xor    al,0x5f
  4171e0:	loopne 0x417222
  4171e2:	sbb    eax,0x5c50aff4
  4171e7:	dec    ecx
  4171e8:	or     DWORD PTR [edx+0x1f876e40],ebp
  4171ee:	popf   
  4171ef:	dec    esi
  4171f0:	xchg   esp,eax
  4171f1:	scas   eax,DWORD PTR es:[edi]
  4171f2:	pop    es
  4171f3:	or     eax,DWORD PTR [ebx-0x6e]
  4171f6:	xchg   ebx,eax
  4171f7:	cli    
  4171f8:	cwde   
  4171f9:	cmp    BYTE PTR [eax-0x6],al
  4171fc:	(bad)  
  4171fe:	in     al,dx
  4171ff:	test   eax,0x89fb39df
  417204:	ror    DWORD PTR [edi],0x97
  417207:	pop    es
  417208:	jle    0x4171c0
  41720a:	pop    ss
  41720b:	inc    esp
  41720c:	cmc    
  41720d:	push   cs
  41720e:	xor    al,0x8b
  417210:	cmc    
  417211:	in     eax,0x6f
  417213:	sub    al,0x95
  417215:	je     0x4171f1
  417217:	or     eax,0xa35535e
  41721c:	call   0x3aabd00e
  417221:	pop    edx
  417222:	pushaw 
  417224:	jmp    0xa57f0c29
  417229:	in     al,dx
  41722a:	jno    0x41721f
  41722c:	jnp    0x417245
  41722e:	mov    ebx,DWORD PTR [edi+eax*8-0x178e7fd1]
  417235:	out    dx,al
  417236:	push   ss
  417237:	jmp    0x53b871dc
  41723c:	(bad)  
  41723d:	ins    BYTE PTR es:[edi],dx
  41723e:	loopne 0x41722e
  417240:	jo     0x417214
  417242:	sub    DWORD PTR [edx+edi*2+0x26],ecx
  417246:	test   eax,0xe06d0bcd
  41724b:	adc    al,0xbc
  41724d:	cli    
  41724e:	fdivr  DWORD PTR [esi+0x3ccedd46]
  417254:	call   0xcf52b6a8
  417259:	bnd jmp 0x4171eb
  41725c:	push   ss
  41725d:	mov    BYTE PTR [esi+0x560192c0],bl
  417263:	add    DWORD PTR [ecx],esi
  417265:	jg     0x417264
  417267:	xchg   ebp,eax
  417268:	jo     0x41722d
  41726a:	sbb    bl,BYTE PTR [ebp+0x6221cb74]
  417270:	adc    al,0x36
  417272:	adc    DWORD PTR [ebp-0x8],esi
  417275:	jmp    0x417260
  417277:	push   0xffffff85
  417279:	xchg   ecx,eax
  41727a:	std    
  41727b:	popf   
  41727c:	mov    edx,0x607a0cfc
  417281:	rcl    ebp,0xcc
  417284:	test   DWORD PTR ds:0xcaa1489b,eax
  41728a:	dec    esp
  41728b:	mov    BYTE PTR [ebx-0x2f],bl
  41728e:	mov    bl,0x9a
  417290:	jg     0x417225
  417292:	cmp    bl,BYTE PTR [ebp-0x3b]
  417295:	nop
  417296:	pop    es
  417297:	push   esp
  417298:	jb     0x4172cf
  41729a:	je     0x41730e
  41729c:	add    al,0x14
  41729e:	sub    BYTE PTR [esi],ch
  4172a0:	or     al,0xda
  4172a2:	js     0x417248
  4172a4:	pop    ss
  4172a5:	bound  edi,QWORD PTR [ecx+0x7]
  4172a8:	icebp  
  4172a9:	mov    ebp,0x859536e5
  4172ae:	shr    dh,1
  4172b0:	sar    BYTE PTR [edx+ebx*2],cl
  4172b3:	push   0xffffffe9
  4172b5:	push   ebx
  4172b6:	shl    BYTE PTR [ebp+0x1d],cl
  4172b9:	(bad)  
  4172ba:	sub    cl,al
  4172bc:	imul   ecx,DWORD PTR [esi+edx*8+0x4f71348d],0xffffff8d
  4172c4:	aaa    
  4172c5:	int    0xd
  4172c7:	(bad)  
  4172c8:	dec    eax
  4172c9:	cld    
  4172ca:	mov    ecx,0xb4463c1
  4172cf:	fistp  WORD PTR [eax+edx*4+0x4c]
  4172d3:	clc    
  4172d4:	bound  edi,QWORD PTR [esi]
  4172d6:	test   al,0xd
  4172d8:	ins    DWORD PTR es:[edi],dx
  4172d9:	xor    BYTE PTR [esi-0x3100c55e],0x42
  4172e0:	aas    
  4172e1:	and    DWORD PTR ds:[edx+0x731223aa],edi
  4172e8:	out    0xac,al
  4172ea:	cmp    al,0x2e
  4172ec:	xchg   edi,eax
  4172ed:	clc    
  4172ee:	sbb    DWORD PTR [edi+0x38141b02],ebx
  4172f4:	and    DWORD PTR [eax],ecx
  4172f6:	lea    edx,[eax]
  4172f8:	add    al,ah
  4172fa:	hlt    
  4172fb:	jg     0x417308
  4172fd:	fldenv [ecx-0x80]
  417300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417301:	outs   dx,DWORD PTR ds:[esi]
  417302:	cmp    BYTE PTR [ebp+0xf522925],0x7e
  417309:	loopne 0x4172d4
  41730b:	lahf   
  41730c:	shr    BYTE PTR [ebx-0x49a75eca],0x8a
  417313:	add    BYTE PTR [edx-0x43],ah
  417316:	jmp    0x199885cd
  41731b:	icebp  
  41731c:	jae    0x4172d0
  41731e:	call   0x81dd54c2
  417323:	sbb    al,0x3c
  417325:	out    dx,eax
  417326:	popf   
  417327:	push   ebp
  417328:	jge    0x41731c
  41732a:	rcl    DWORD PTR [esi-0x80],1
  41732d:	popf   
  41732e:	dec    esi
  41732f:	dec    eax
  417330:	js     0x41730a
  417332:	push   0x3d3b9582
  417337:	jb     0x417325
  417339:	ret    
  41733a:	enter  0x7576,0x65
  41733e:	jb     0x417345
  417340:	fist   WORD PTR [esi-0x1bdf3e2f]
  417346:	dec    eax
  417347:	sbb    eax,0x67efe3e
  41734c:	imul   esi,DWORD PTR [ebx-0x5989c609],0x26
  417353:	sbb    DWORD PTR [eax+eax*8+0x4b0731ca],esp
  41735a:	inc    ecx
  41735b:	fmul   DWORD PTR [ebx-0x2c571ec6]
  417361:	push   eax
  417362:	mov    eax,ds:0x29f5ac
  417367:	xchg   esp,eax
  417368:	loop   0x41734d
  41736a:	push   0xe741c6ba
  41736f:	inc    edi
  417370:	and    ch,bl
  417372:	jecxz  0x4173e0
  417374:	sub    esp,DWORD PTR [ecx-0x3a708c2]
  41737a:	jne    0x417340
  41737c:	push   ss
  41737d:	cmp    al,0xee
  41737f:	xchg   bl,bh
  417381:	push   esp
  417382:	das    
  417383:	dec    ebx
  417384:	cmp    BYTE PTR [ebx-0x3],cl
  417387:	xchg   esi,eax
  417388:	dec    edx
  417389:	pop    eax
  41738a:	mov    bh,0xb6
  41738c:	cdq    
  41738d:	fadd   DWORD PTR [ebx+0x59]
  417390:	scas   eax,DWORD PTR es:[edi]
  417391:	pop    ss
  417392:	sub    BYTE PTR [esi+0x9],cl
  417395:	(bad)  
  417396:	xor    edi,DWORD PTR [esi+0x15c32652]
  41739c:	inc    ecx
  41739d:	div    dh
  41739f:	pop    edi
  4173a0:	fist   WORD PTR [ecx]
  4173a2:	sbb    DWORD PTR [edx+eax*2+0x6d5af5a6],esp
  4173a9:	push   ecx
  4173aa:	adc    BYTE PTR [eax],0x5f
  4173ad:	into   
  4173ae:	inc    ecx
  4173af:	outs   dx,DWORD PTR ds:[esi]
  4173b0:	or     DWORD PTR [eax+0x29],ebp
  4173b3:	xor    cl,cl
  4173b5:	and    eax,0x97ca0349
  4173ba:	dec    eax
  4173bb:	mov    WORD PTR [edx-0x35968d83],ds
  4173c1:	cmp    eax,0x86b7376
  4173c6:	sub    ah,BYTE PTR [ecx-0x24]
  4173c9:	fstp   TBYTE PTR [ebx+0x37ef2af]
  4173cf:	out    dx,eax
  4173d0:	pmuludq mm0,QWORD PTR [esi-0x3fb56451]
  4173d7:	or     al,0x40
  4173d9:	push   ebx
  4173da:	out    0x37,eax
  4173dc:	inc    eax
  4173dd:	in     eax,0x2d
  4173df:	pop    ss
  4173e0:	jb     0x417410
  4173e2:	jb     0x417367
  4173e4:	fcomp  DWORD PTR [ecx]
  4173e6:	adc    eax,0x1fe5ab18
  4173eb:	int    0x18
  4173ed:	lods   eax,DWORD PTR ds:[si]
  4173ef:	cld    
  4173f0:	shl    BYTE PTR [ecx-0x2439994],1
  4173f6:	in     eax,dx
  4173f7:	push   es
  4173f8:	sub    dh,BYTE PTR [ecx+0x63]
  4173fb:	iret   
  4173fc:	imul   ecx,esp,0xb
  4173ff:	hlt    
  417400:	cmp    bh,BYTE PTR [eax]
  417402:	push   ebp
  417403:	mov    ebp,0x83937272
  417408:	pop    esi
  417409:	inc    eax
  41740a:	sub    ah,BYTE PTR [eax]
  41740c:	jmp    0x417462
  41740e:	ret    
  41740f:	stos   BYTE PTR es:[edi],al
  417410:	and    BYTE PTR [ebp+0x31600bb2],0xe2
  417417:	mov    ecx,0x9b03604
  41741c:	das    
  41741d:	jbe    0x4173f0
  41741f:	xchg   ebp,eax
  417420:	icebp  
  417421:	ins    DWORD PTR es:[edi],dx
  417422:	sub    dh,BYTE PTR [ecx]
  417424:	fs jo  0x4173bd
  417427:	scas   eax,DWORD PTR es:[edi]
  417428:	push   ebp
  417429:	(bad)  
  41742a:	in     al,dx
  41742b:	or     ebp,DWORD PTR [ebp-0x31098297]
  417431:	cli    
  417432:	pop    edi
  417433:	ret    
  417434:	imul   edi,DWORD PTR [ebp-0x2f8faef],0x45
  41743b:	out    0xde,al
  41743d:	cmp    al,0xf1
  41743f:	adc    al,BYTE PTR [eax-0x87ca00d]
  417445:	mov    ds:0x28d4a066,eax
  41744a:	(bad)  
  41744b:	loop   0x41748e
  41744d:	add    dl,BYTE PTR [edi-0x53]
  417450:	je     0x4174b1
  417452:	aas    
  417453:	inc    ebx
  417454:	mov    cl,0x2
  417456:	sub    eax,0x20aec33e
  41745b:	test   eax,0xbbfd4e10
  417460:	adc    DWORD PTR [edx],ebx
  417462:	(bad)  
  417465:	push   0xfefd4d5e
  41746a:	and    DWORD PTR [edi+0x1bcd698a],eax
  417470:	retf   
  417471:	add    DWORD PTR [edi],ebp
  417473:	push   ebp
  417474:	fwait
  417475:	mov    ch,0x16
  417477:	pop    ecx
  417478:	push   ds
  417479:	jl     0x4173fd
  41747b:	sbb    ecx,eax
  41747d:	push   edx
  41747e:	cdq    
  41747f:	into   
  417480:	xchg   BYTE PTR [edi-0x80],bh
  417483:	mov    al,0x7f
  417485:	mov    edx,0xeee06355
  41748a:	ret    
  41748b:	mov    al,dl
  41748d:	ja     0x417485
  41748f:	bound  ebp,QWORD PTR [eax]
  417491:	cdq    
  417492:	and    bl,bl
  417494:	pop    es
  417495:	sub    eax,0x8dda253c
  41749a:	retf   
  41749b:	cmp    bl,al
  41749d:	inc    ebx
  41749e:	retf   
  41749f:	jo     0x417448
  4174a1:	sub    ecx,eax
  4174a3:	shl    BYTE PTR [edi-0x4a551097],1
  4174a9:	pop    edx
  4174aa:	cdq    
  4174ab:	fcom   DWORD PTR [edi]
  4174ad:	imul   DWORD PTR [ebx]
  4174af:	or     eax,0x1308ba78
  4174b4:	iret   
  4174b5:	leave  
  4174b6:	sbb    ah,ah
  4174b8:	jnp    0x417461
  4174ba:	xchg   edi,eax
  4174bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174bc:	adc    al,0xdb
  4174be:	mov    ah,BYTE PTR [esi-0x6f]
  4174c1:	out    0x87,al
  4174c3:	push   es
  4174c4:	aaa    
  4174c5:	add    eax,0x3604ab8e
  4174ca:	pop    ds
  4174cb:	mov    esi,0x80e3fc6d
  4174d0:	xchg   esi,eax
  4174d1:	xchg   ebx,eax
  4174d2:	and    DWORD PTR [edx+0x7569a096],eax
  4174d8:	in     eax,0x3c
  4174da:	or     bl,BYTE PTR [edi+0x37]
  4174dd:	adc    eax,0xe4ba18de
  4174e2:	fistp  QWORD PTR gs:0xb3793436
  4174e9:	jb     0x41755c
  4174eb:	mov    edi,0x70227571
  4174f0:	scas   al,BYTE PTR es:[edi]
  4174f1:	or     eax,0xed400b30
  4174f6:	mov    esi,0x61760124
  4174fb:	dec    ebp
  4174fc:	pop    edi
  4174fd:	lea    eax,[edi]
  4174ff:	in     al,dx
  417500:	rcl    DWORD PTR [ebx],cl
  417502:	pop    edx
  417503:	into   
  417504:	xchg   DWORD PTR [ebx-0x7d3c4d7a],edi
  41750a:	add    ebx,DWORD PTR [edi+ecx*1]
  41750d:	add    BYTE PTR [eax+0x78b32738],cl
  417513:	int3   
  417514:	rcl    bl,1
  417516:	loop   0x4174a6
  417518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417519:	ja     0x4174ef
  41751b:	mov    DWORD PTR [eax+0x77bf933e],0xc0fced3e
  417525:	test   BYTE PTR [ecx-0x7b],al
  417528:	sub    dh,BYTE PTR [esi+0x44]
  41752b:	into   
  41752c:	jbe    0x4174fe
  41752e:	inc    esp
  41752f:	scas   eax,DWORD PTR es:[edi]
  417530:	das    
  417531:	fnstcw WORD PTR [ebx-0x1c8494c2]
  417537:	sbb    al,BYTE PTR [esi]
  417539:	(bad)  
  41753a:	call   DWORD PTR [ebp+esi*1-0x44]
  41753e:	call   FWORD PTR [esi+eax*1]
  417541:	pop    es
  417542:	dec    edx
  417543:	mov    edx,0xe791cd2b
  417548:	pop    ss
  417549:	repz dec ecx
  41754b:	xor    BYTE PTR [edx+eiz*4-0x30],dh
  41754f:	aam    0x32
  417551:	(bad)  
  417552:	and    dl,dh
  417554:	push   edx
  417555:	jecxz  0x41752f
  417557:	ja     0x4175c1
  417559:	inc    ebx
  41755a:	pop    ebx
  41755b:	imul   edi,ebx,0x35
  41755e:	lock dec ebp
  417560:	scas   eax,DWORD PTR es:[edi]
  417561:	out    0x1f,al
  417563:	fld    QWORD PTR [edx+0x2]
  417566:	rol    DWORD PTR [eax+ebp*2],cl
  417569:	xchg   esi,eax
  41756a:	popa   
  41756b:	mov    esi,0xc6413146
  417570:	push   eax
  417571:	fist   DWORD PTR [ecx+0x35]
  417574:	lock rol BYTE PTR [edi+0x3981b7e],0x2c
  41757c:	out    0xe6,eax
  41757e:	repz push cs
  417580:	out    0x60,eax
  417582:	push   ecx
  417583:	test   al,0x9c
  417585:	leave  
  417586:	or     al,0x18
  417588:	add    DWORD PTR [ebx+edi*2-0x23],edi
  41758c:	push   cs
  41758d:	aad    0xf7
  41758f:	mov    cl,0xca
  417591:	in     al,dx
  417592:	lods   eax,DWORD PTR ds:[esi]
  417593:	sub    dl,ah
  417595:	add    eax,0x2fe13a1d
  41759a:	js     0x417540
  41759c:	fnop   
  41759e:	xchg   esi,eax
  41759f:	pop    esp
  4175a0:	loop   0x4175b9
  4175a2:	aaa    
  4175a3:	popf   
  4175a4:	or     BYTE PTR ds:0x61ce717f,ah
  4175aa:	ds (bad) 
  4175ac:	int3   
  4175ad:	xchg   esi,eax
  4175ae:	inc    edx
  4175af:	sbb    al,0xd5
  4175b1:	and    DWORD PTR [esi+0x7b],esi
  4175b4:	call   0x7dcc:0x7b5d513a
  4175bb:	test   eax,0x94642b2b
  4175c0:	dec    esi
  4175c1:	stc    
  4175c2:	bound  esp,QWORD PTR [esi+ecx*8-0x492c03a3]
  4175c9:	stos   BYTE PTR es:[edi],al
  4175ca:	rol    DWORD PTR [edi+0x41],cl
  4175cd:	mov    ebp,0x5d21f5d4
  4175d2:	mov    ch,0xc7
  4175d4:	sbb    BYTE PTR [eax],dh
  4175d6:	cmp    bh,ah
  4175d8:	inc    eax
  4175d9:	push   es
  4175da:	xor    BYTE PTR [eax+0x50],dh
  4175dd:	sahf   
  4175de:	bound  edx,QWORD PTR [esi+0x43692c6b]
  4175e4:	push   edi
  4175e5:	icebp  
  4175e6:	or     esi,DWORD PTR [ebp-0x49]
  4175e9:	mov    ebp,0xa20a1c37
  4175ee:	mov    dh,0xd5
  4175f0:	adc    BYTE PTR [ebp+0x45],cl
  4175f3:	xor    al,0x5f
  4175f5:	out    0x32,al
  4175f7:	cs in  al,0xf1
  4175fa:	int    0x6b
  4175fc:	repz xchg ebx,eax
  4175fe:	pop    eax
  4175ff:	mov    eax,ds:0x78a920c3
  417604:	push   eax
  417605:	fld    TBYTE PTR [ecx-0x4867c672]
  41760b:	lock and al,0x6d
  41760e:	push   esi
  41760f:	daa    
  417610:	push   eax
  417611:	mov    DWORD PTR [edx],esp
  417613:	inc    edx
  417614:	push   edi
  417615:	jb     0x417629
  417617:	push   cs
  417618:	ins    DWORD PTR es:[edi],dx
  417619:	popf   
  41761a:	mov    ah,0xda
  41761c:	cli    
  41761d:	sti    
  41761e:	jl     0x417622
  417620:	dec    edx
  417621:	ins    DWORD PTR es:[edi],dx
  417622:	jae    0x417694
  417624:	jp     0x417696
  417626:	gs mov ecx,ss
  417629:	push   edx
  41762a:	push   ebx
  41762b:	cdq    
  41762c:	and    DWORD PTR [eax+ebp*2-0x5004c6fb],edx
  417633:	sub    eax,0x94c39eaa
  417638:	push   es
  417639:	sbb    al,0xc
  41763b:	sub    al,0x5d
  41763d:	or     edi,0x32b092ec
  417643:	aas    
  417644:	inc    ebx
  417645:	cli    
  417646:	and    edi,esp
  417648:	cmc    
  417649:	xchg   edx,eax
  41764a:	mov    DWORD PTR [eax],edx
  41764c:	scas   eax,DWORD PTR es:[edi]
  41764d:	jbe    0x4175d6
  41764f:	and    esp,DWORD PTR [edx+0x52]
  417652:	cmovbe eax,DWORD PTR [ebp-0x40]
  417656:	mov    eax,0x54931843
  41765b:	inc    ebx
  41765c:	cmp    ecx,DWORD PTR [ecx-0x25713d44]
  417662:	or     al,0xd8
  417664:	xchg   ecx,eax
  417665:	sbb    BYTE PTR [edi-0x5ba46c09],dl
  41766b:	push   esp
  41766c:	pop    es
  41766d:	sub    ah,bh
  41766f:	sub    eax,0x43333293
  417674:	jnp    0x417619
  417676:	jle    0x4176cf
  417678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417679:	cmp    DWORD PTR [edx+0x1931e51f],edx
  41767f:	lods   eax,DWORD PTR ds:[esi]
  417680:	pop    eax
  417681:	fbld   TBYTE PTR [edi+0xae8d34e]
  417687:	ins    DWORD PTR es:[edi],dx
  417688:	add    al,0x49
  41768a:	jle    0x417636
  41768c:	adc    dh,BYTE PTR [ebx+0x26]
  41768f:	shld   DWORD PTR ds:0x1072381c,esi,0x4
  417697:	push   es
  417698:	or     edx,DWORD PTR [esi+0x5c]
  41769b:	loop   0x4176f5
  41769d:	inc    ebp
  41769e:	clc    
  41769f:	addr16 call 0x79e7:0x22046bdc
  4176a7:	ficom  DWORD PTR [ecx-0x37]
  4176aa:	dec    ecx
  4176ab:	out    dx,eax
  4176ac:	mov    ecx,0xcd2dc287
  4176b1:	xor    cl,BYTE PTR [edi-0x4f]
  4176b4:	jmp    0xeb01663
  4176b9:	inc    edi
  4176ba:	jp     0x4176b3
  4176bc:	push   eax
  4176bd:	jne    0x417653
  4176bf:	or     eax,DWORD PTR ds:0x509df53d
  4176c5:	mov    BYTE PTR [edx-0x4f],bh
  4176c8:	daa    
  4176c9:	repnz adc eax,0x3d2da1be
  4176cf:	push   0xffffffce
  4176d1:	and    ebx,DWORD PTR [edi+edx*2]
  4176d4:	stos   DWORD PTR es:[edi],eax
  4176d5:	ror    ebp,1
  4176d7:	and    BYTE PTR [eax],cl
  4176d9:	cmp    edi,ebx
  4176db:	jmp    0x4176a1
  4176dd:	mov    ebx,0xe2c4db41
  4176e2:	inc    esi
  4176e3:	jns    0x417701
  4176e5:	pop    edi
  4176e6:	adc    cl,BYTE PTR [esi+0xe4197ab]
  4176ec:	and    ch,bh
  4176ee:	mov    ecx,DWORD PTR [edx]
  4176f0:	xchg   esp,eax
  4176f1:	push   esi
  4176f2:	pop    ecx
  4176f3:	rol    BYTE PTR [edx+0x359eb5d8],cl
  4176f9:	xor    esp,edx
  4176fb:	xor    al,0x18
  4176fd:	cmp    cl,al
  4176ff:	arpl   ax,bx
  417701:	mov    ds:0xb1499c9,al
  417706:	les    edx,FWORD PTR [ecx-0x27e654c8]
  41770c:	add    bl,BYTE PTR [ebp+0x8]
  41770f:	cmp    eax,0x4395dee1
  417714:	(bad)  
  417715:	je     0x4176b1
  417717:	inc    ebp
  417718:	setno  BYTE PTR [esi+0x37]
  41771c:	out    0xa3,al
  41771e:	xchg   esp,eax
  41771f:	stc    
  417720:	sub    al,0x66
  417722:	mov    edx,0xf6918ea3
  417727:	push   eax
  417728:	ror    BYTE PTR [esp+eiz*4],cl
  41772b:	inc    eax
  41772c:	fcomp  QWORD PTR [eax+0xc]
  41772f:	inc    ebx
  417730:	(bad)  
  417731:	repz adc al,0x6a
  417734:	loopne 0x41774a
  417736:	stos   DWORD PTR es:[edi],eax
  417737:	jmp    0x9be5:0x7636f312
  41773e:	dec    esi
  41773f:	pop    edi
  417740:	fadd   DWORD PTR [edx-0x73ed2a2d]
  417746:	cs push esp
  417748:	ret    
  417749:	xchg   ebx,eax
  41774a:	mov    WORD PTR [edx-0x27],gs
  41774d:	inc    edx
  41774e:	mov    ebx,0x670480e9
  417753:	ins    DWORD PTR es:[edi],dx
  417754:	jmp    0x12217315
  417759:	adc    BYTE PTR [ebp+0x7d],dl
  41775c:	jmp    0xc003d1a4
  417761:	mov    edi,0x42af06c5
  417766:	or     al,0x6e
  417768:	test   DWORD PTR [esi+0x6be7556a],ebp
  41776e:	pop    ds
  41776f:	fimul  DWORD PTR [esi-0x41]
  417772:	xchg   ecx,eax
  417773:	sbb    DWORD PTR [ebp-0x58738eb8],0xffffffbe
  41777a:	std    
  41777b:	inc    ebx
  41777c:	(bad)  
  41777d:	cmp    al,0x4e
  41777f:	jp     0x4177f2
  417781:	dec    ebx
  417782:	xlat   BYTE PTR ds:[ebx]
  417783:	push   eax
  417784:	cmp    DWORD PTR [edi-0x24],edx
  417787:	cli    
  417788:	adc    DWORD PTR [edx+0x177930ba],0xffffff89
  41778f:	jg     0x417784
  417791:	pop    ds
  417792:	push   0x1e
  417794:	push   ebp
  417795:	lods   al,BYTE PTR ds:[esi]
  417796:	mov    esp,0xfeaa5fb9
  41779b:	mov    ah,0x55
  41779d:	(bad)  
  41779f:	(bad)  
  4177a1:	daa    
  4177a2:	inc    ebp
  4177a3:	pop    ebp
  4177a4:	or     DWORD PTR [ebx],0xffffffc0
  4177a7:	fstp   QWORD PTR [esi+esi*1]
  4177aa:	outs   dx,BYTE PTR ds:[esi]
  4177ab:	push   ebp
  4177ac:	inc    di
  4177ae:	cdq    
  4177af:	jnp    0x417773
  4177b1:	clc    
  4177b2:	rol    BYTE PTR [esi+0x7c],0x7d
  4177b6:	adc    DWORD PTR [ecx],esp
  4177b8:	pminub mm0,mm4
  4177bb:	clc    
  4177bc:	jl     0x4177a6
  4177be:	lods   al,BYTE PTR ds:[esi]
  4177bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177c0:	push   0xffffff97
  4177c2:	out    dx,al
  4177c3:	adc    DWORD PTR [edi],ecx
  4177c5:	addr16 es das 
  4177c8:	cdq    
  4177c9:	fcmove st,st(4)
  4177cb:	jmp    0x41777f
  4177cd:	dec    edx
  4177ce:	cmp    ah,ch
  4177d0:	add    ch,ah
  4177d2:	xor    al,0x2a
  4177d4:	(bad)  
  4177d5:	cli    
  4177d6:	xchg   edx,eax
  4177d7:	push   ss
  4177d8:	mov    edx,0x19026975
  4177dd:	(bad)  
  4177de:	lds    ebx,FWORD PTR [edi]
  4177e0:	dec    esp
  4177e1:	(bad)  
  4177e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177e3:	and    al,0xd8
  4177e5:	jnp    0x417853
  4177e7:	cld    
  4177e8:	retf   
  4177e9:	inc    edi
  4177ea:	pusha  
  4177eb:	push   esi
  4177ec:	cdq    
  4177ed:	dec    ebx
  4177ee:	hlt    
  4177ef:	jle    0x417832
  4177f1:	xor    al,0xcc
  4177f3:	jmp    0x8709:0xf59a4a1f
  4177fa:	inc    ebx
  4177fb:	mov    edi,0x8cb0f2b3
  417800:	mov    BYTE PTR [ebx+0x27],dl
  417803:	mov    ebp,0x5e992ca5
  417808:	mov    DWORD PTR ds:0xee951b4e,esi
  41780e:	leave  
  41780f:	sub    BYTE PTR [eax],cl
  417811:	pop    edi
  417812:	leave  
  417813:	outs   dx,BYTE PTR ds:[esi]
  417814:	int    0x4f
  417816:	cmp    dl,al
  417818:	imul   esi,DWORD PTR [edx],0x16
  41781b:	(bad)
  41781e:	cmp    ebp,DWORD PTR [ecx]
  417820:	fnstcw WORD PTR [edx+0x4c]
  417823:	scas   eax,DWORD PTR es:[edi]
  417824:	dec    ebp
  417825:	ja     0x417862
  417827:	pop    ebx
  417828:	in     eax,0x1e
  41782a:	and    al,0xa6
  41782c:	fimul  DWORD PTR ds:0x86b43b45
  417832:	mov    al,ds:0x58fbcea5
  417837:	and    edx,DWORD PTR [ecx+0x7758536d]
  41783d:	xchg   edx,eax
  41783e:	jne    0x4177c5
  417840:	cwde   
  417841:	sub    al,0x8e
  417843:	std    
  417844:	mov    eax,ds:0x8324351b
  417849:	mov    esp,0xdd910354
  41784e:	test   BYTE PTR [esi+0xf],0x30
  417852:	pusha  
  417853:	out    dx,al
  417854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417855:	mov    dh,0xef
  417857:	inc    edx
  417858:	bound  ecx,QWORD PTR [esi+ebx*2+0x20b293fb]
  41785f:	shl    DWORD PTR [ecx-0x6a6003c3],0x4
  417866:	mov    ebp,ebp
  417868:	stc    
  417869:	stos   BYTE PTR es:[edi],al
  41786a:	add    ah,BYTE PTR [ebx+0x19930cd1]
  417870:	sahf   
  417871:	cmp    edi,DWORD PTR [eax]
  417873:	xchg   edi,eax
  417874:	mov    DWORD PTR [ebx-0x4a6f38e4],esp
  41787a:	jmp    0xbdf0:0x9948523e
  417881:	fnstcw WORD PTR [ebp-0x52111dfe]
  417887:	fistp  QWORD PTR [esp+esi*1-0x67]
  41788b:	gs pop eax
  41788d:	mov    ebx,0x95a7488b
  417892:	push   esp
  417893:	pop    ss
  417894:	fcomi  st,st(3)
  417896:	pusha  
  417897:	(bad)  
  417898:	int3   
  417899:	cmp    esp,DWORD PTR [eax+0x56d91a8]
  41789f:	bound  esp,QWORD PTR [eax-0x55a93ad6]
  4178a5:	stc    
  4178a6:	xor    eax,0xf1868068
  4178ab:	sar    BYTE PTR [esi-0x64],1
  4178ae:	xlat   BYTE PTR ds:[ebx]
  4178af:	test   DWORD PTR [ebx-0x386ff351],edi
  4178b5:	lahf   
  4178b6:	mov    ds:0xfa566e53,eax
  4178bb:	add    BYTE PTR [ebp-0x1a895ef9],dl
  4178c1:	and    edi,edi
  4178c3:	inc    ecx
  4178c4:	dec    eax
  4178c5:	sahf   
  4178c6:	cmp    bh,al
  4178c8:	(bad)  
  4178c9:	shl    DWORD PTR [ebx-0x4],cl
  4178cc:	nop
  4178cd:	(bad)  [ebx+0x1a]
  4178d0:	xchg   cl,bl
  4178d2:	xchg   edx,eax
  4178d3:	test   ecx,ebx
  4178d5:	dec    ebp
  4178d6:	add    DWORD PTR [eax+0x6d07392c],ebp
  4178dc:	fwait
  4178dd:	xchg   edi,eax
  4178de:	test   BYTE PTR [esi],ch
  4178e0:	(bad)  
  4178e1:	mov    ebx,0x9bb71475
  4178e6:	and    BYTE PTR [esi+esi*2],ch
  4178e9:	xchg   esp,eax
  4178ea:	mov    fs,ebx
  4178ec:	pop    esi
  4178ed:	jle    0x4178f8
  4178ef:	scas   al,BYTE PTR es:[edi]
  4178f0:	xchg   esp,eax
  4178f1:	gs mov ?,edx
  4178f4:	popa   
  4178f5:	imul   ecx,DWORD PTR [ebp+0x14],0x21
  4178f9:	jns    0x417929
  4178fb:	xchg   esp,eax
  4178fc:	cwde   
  4178fd:	popf   
  4178fe:	into   
  4178ff:	es pushf 
  417901:	jb     0x41797d
  417903:	jp     0x4178eb
  417905:	xchg   esi,eax
  417906:	push   esp
  417907:	add    BYTE PTR [edi+0x502d4515],ch
  41790d:	jle    0x41795c
  41790f:	out    0xc6,al
  417911:	xchg   esp,eax
  417912:	ds stc 
  417914:	into   
  417915:	out    dx,eax
  417916:	and    eax,0xbbf24887
  41791b:	in     eax,dx
  41791c:	push   eax
  41791d:	push   ds
  41791e:	inc    esp
  41791f:	je     0x417902
  417921:	sbb    ebp,edi
  417923:	test   DWORD PTR [ebp+0x65],0x537316b7
  41792a:	jb     0x417982
  41792c:	(bad)  
  41792d:	out    0x4c,eax
  41792f:	les    esi,FWORD PTR [edi]
  417931:	int    0x62
  417933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417934:	or     dl,al
  417936:	daa    
  417937:	jmp    0x9026f31a
  41793c:	test   BYTE PTR [esi-0x4f],al
  41793f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417940:	(bad)
  417943:	sti    
  417944:	out    0x0,eax
  417946:	adc    edx,DWORD PTR [edi+0x6a64ea1a]
  41794c:	pop    esi
  41794d:	sbb    al,0xb4
  41794f:	mov    ebx,0xb92081d9
  417954:	cmp    eax,0xb719d411
  417959:	fcom   DWORD PTR [edi+0x7151d0e1]
  41795f:	shl    BYTE PTR [ebx+0x60],0xa9
  417963:	fdivr  QWORD PTR [eax+0x51]
  417966:	push   esp
  417967:	sub    BYTE PTR [ecx],bl
  417969:	enter  0x6cf6,0x6c
  41796d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41796f:	std    
  417970:	push   ebx
  417971:	dec    esp
  417972:	jne    0x4179ef
  417974:	arpl   dx,ax
  417976:	repz ss dec ebx
  417979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797a:	icebp  
  41797b:	mov    ds:0xf634272,eax
  417980:	mov    eax,ds:0x772aaf93
  417985:	jmp    0x43cd:0xaa163f74
  41798c:	dec    eax
  41798d:	add    bl,BYTE PTR [edx+0x57b3aed9]
  417993:	jb     0x417a0d
  417995:	mov    DWORD PTR [ecx-0x34cb529e],0x38b57654
  41799f:	popf   
  4179a0:	fld    QWORD PTR [edi]
  4179a2:	adc    ecx,0x83f2d602
  4179a8:	push   es
  4179a9:	call   0xc81d:0x3c35f3f7
  4179b0:	test   BYTE PTR [ebp+0x42414007],ah
  4179b6:	test   cl,cl
  4179b8:	jns    0x41796e
  4179ba:	inc    edi
  4179bb:	push   eax
  4179bc:	icebp  
  4179bd:	or     al,0xb5
  4179bf:	fdiv   QWORD PTR [edx]
  4179c1:	jae    0x4179cf
  4179c3:	aad    0x6a
  4179c5:	gs pushf 
  4179c7:	mov    ds:0xb56d47da,eax
  4179cc:	xor    BYTE PTR [ebp-0x30],ch
  4179cf:	adc    cl,bl
  4179d1:	das    
  4179d2:	jle    0x417961
  4179d4:	mov    ds:0x30593043,al
  4179d9:	xchg   edx,eax
  4179da:	and    BYTE PTR [esi+0xc3bf3f0],0x50
  4179e1:	push   edi
  4179e2:	push   ecx
  4179e3:	push   0xabc28acf
  4179e8:	out    0x2c,al
  4179ea:	repz inc ebx
  4179ec:	mov    ds:0x9711d19f,eax
  4179f1:	mov    eax,ds:0xa4a126eb
  4179f6:	mov    DWORD PTR [esi+0x7b7a82b8],eax
  4179fc:	mov    cl,0x53
  4179fe:	mov    ds:0x5a005a9a,eax
  417a03:	push   cs
  417a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a05:	mov    esi,DWORD PTR [si-0x28bc]
  417a0a:	retf   0x8bb1
  417a0d:	jge    0x417991
  417a0f:	daa    
  417a10:	imul   edx,DWORD PTR [esi],0xffffffac
  417a13:	pop    eax
  417a14:	sbb    al,0xec
  417a16:	mov    al,0x9e
  417a18:	xchg   ebp,eax
  417a19:	mov    dl,0x3a
  417a1b:	sub    DWORD PTR [edi],ebp
  417a1d:	dec    eax
  417a1e:	bswap  edi
  417a20:	pop    ebx
  417a21:	jmp    0x8d22:0xc47b634b
  417a28:	clc    
  417a29:	sahf   
  417a2a:	imul   eax,esi,0x38
  417a2d:	(bad)  
  417a2e:	dec    esi
  417a2f:	cmp    bl,BYTE PTR [ecx]
  417a31:	icebp  
  417a32:	pop    ecx
  417a33:	sub    DWORD PTR ds:0x92b0d88e,edi
  417a39:	das    
  417a3a:	mov    ebx,0x285fee63
  417a3f:	dec    esp
  417a40:	aam    0xcb
  417a42:	xor    DWORD PTR [edx+0x4d8ba1db],edi
  417a48:	jl     0x417a8f
  417a4a:	and    eax,0xf52851f
  417a4f:	push   0x1d
  417a51:	mov    dl,0x80
  417a53:	call   0xf845:0x4cf429d6
  417a5a:	ins    DWORD PTR es:[edi],dx
  417a5b:	or     al,0xaf
  417a5d:	outs   dx,BYTE PTR ds:[esi]
  417a5e:	pop    esi
  417a5f:	fst    DWORD PTR [esi]
  417a61:	xlat   BYTE PTR ds:[ebx]
  417a62:	and    BYTE PTR [edx+0x255756b6],0xc
  417a69:	pushf  
  417a6a:	out    dx,al
  417a6b:	push   esi
  417a6c:	xchg   edx,eax
  417a6e:	nop
  417a6f:	jecxz  0x417a54
  417a71:	pop    edi
  417a72:	mov    ebp,0x3b87aced
  417a77:	iret   
  417a78:	pop    ecx
  417a79:	mov    ah,0xbb
  417a7b:	xor    edx,edx
  417a7d:	bswap  eax
  417a7f:	jbe    0x417ab9
  417a81:	imul   eax,DWORD PTR [esi],0x6f1e0880
  417a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a88:	adc    DWORD PTR [edi+0x702ac1f7],edi
  417a8e:	imul   ecx,DWORD PTR [edi],0x71d480a1
  417a94:	jo     0x417a96
  417a96:	or     DWORD PTR [ebx+0x76],0xffffffc3
  417a9a:	outs   dx,DWORD PTR ds:[esi]
  417a9b:	imul   esi,DWORD PTR ds:0xac6d9ab4,0x29
  417aa2:	hlt    
  417aa3:	out    dx,al
  417aa4:	push   edi
  417aa5:	call   0x6965:0x86e6eb96
  417aac:	jle    0x417ace
  417aae:	push   esi
  417aaf:	test   DWORD PTR [ebx],ebx
  417ab1:	rol    ah,0xcc
  417ab4:	jl     0x417a80
  417ab6:	adc    ebp,esp
  417ab8:	fcmove st,st(4)
  417aba:	dec    ebp
  417abb:	out    0x9,eax
  417abd:	hlt    
  417abe:	gs stc 
  417ac0:	loopne 0x417ab2
  417ac2:	push   esp
  417ac3:	mov    ch,BYTE PTR [edx+0x4a]
  417ac6:	retf   0xd507
  417ac9:	pop    ecx
  417aca:	lahf   
  417acb:	inc    edi
  417acc:	enter  0xaaf0,0x49
  417ad0:	inc    ebp
  417ad1:	push   ds
  417ad2:	stos   BYTE PTR es:[edi],al
  417ad3:	dec    DWORD PTR [ebx]
  417ad5:	xor    al,0xf3
  417ad7:	pusha  
  417ad8:	ja     0x417adf
  417ada:	fsubr  DWORD PTR [edx+0x595c0eb3]
  417ae0:	outs   dx,BYTE PTR ds:[esi]
  417ae1:	xchg   esi,eax
  417ae2:	mov    al,ds:0xf40c7645
  417ae7:	cmp    ah,dh
  417ae9:	lea    eax,[esi+0x4f]
  417aec:	retf   0x390e
  417aef:	or     al,0x16
  417af1:	inc    ebp
  417af2:	sbb    DWORD PTR [ebx-0x69722c50],ebx
  417af8:	je     0x417b13
  417afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417afb:	arpl   bx,si
  417afd:	push   esi
  417afe:	cli    
  417aff:	inc    ebp
  417b00:	mov    dh,0x31
  417b02:	cmc    
  417b03:	jmp    0x8042:0x889f67f
  417b0a:	mov    dl,BYTE PTR [esi+0x75]
  417b0d:	fwait
  417b0e:	pop    esi
  417b0f:	sub    eax,DWORD PTR [ebx+0x3c]
  417b12:	add    eax,0x46406873
  417b17:	sub    dl,bh
  417b19:	pusha  
  417b1a:	mov    eax,ds:0x152f1f7d
  417b1f:	fisub  WORD PTR [eax+0x3d]
  417b22:	addr16 mov ds:0xeb74,eax
  417b26:	cmp    ebp,ecx
  417b28:	fs push ebx
  417b2a:	add    al,0x5c
  417b2c:	xor    dl,0x59
  417b2f:	dec    edi
  417b30:	out    0xd2,al
  417b32:	sbb    BYTE PTR [ecx],0x99
  417b35:	mov    al,ds:0xe0742ad1
  417b3a:	xchg   ebp,eax
  417b3b:	cli    
  417b3c:	jb     0x417abf
  417b3e:	or     cl,BYTE PTR [edx*1-0x1ce25bda]
  417b45:	sub    eax,0x915109f2
  417b4a:	pop    ds
  417b4b:	stc    
  417b4c:	inc    esp
  417b4d:	sub    DWORD PTR [eax+eiz*2],0xffffffff
  417b51:	in     al,0x1d
  417b53:	inc    ebp
  417b54:	loopne 0x417b23
  417b56:	push   0x66
  417b58:	mov    BYTE PTR [ebx],dh
  417b5a:	push   es
  417b5b:	add    DWORD PTR [edx],esi
  417b5d:	mov    al,ds:0xafe33375
  417b62:	pushf  
  417b63:	imul   DWORD PTR [esi]
  417b65:	cmp    bl,dl
  417b67:	jecxz  0x417ba9
  417b69:	leave  
  417b6a:	cmp    al,0x79
  417b6c:	inc    esi
  417b6d:	jmp    0x417be8
  417b6f:	dec    ebx
  417b70:	pop    edi
  417b71:	cdq    
  417b72:	xor    al,0xe5
  417b74:	jb     0x417b86
  417b76:	scas   eax,DWORD PTR es:[edi]
  417b77:	cs add eax,0xd76f07d6
  417b7d:	xchg   BYTE PTR [ecx-0x624c288f],cl
  417b83:	outs   dx,DWORD PTR ds:[esi]
  417b84:	and    edx,DWORD PTR [edx+eax*2]
  417b87:	cdq    
  417b88:	aaa    
  417b89:	lods   eax,DWORD PTR ds:[esi]
  417b8a:	mov    ch,0xaa
  417b8c:	cmp    esi,DWORD PTR [eax-0x334ae6d0]
  417b92:	xchg   esi,eax
  417b93:	mov    ds:0xc23b1a3c,eax
  417b98:	adc    al,0x9b
  417b9a:	arpl   si,cx
  417b9c:	test   DWORD PTR [ebp+0x13],0xcfaec2d7
  417ba3:	test   DWORD PTR ds:0x5fa4b67d,eax
  417ba9:	xchg   esp,eax
  417baa:	inc    esi
  417bab:	ror    DWORD PTR [eax+0x3ec5b026],1
  417bb1:	push   ss
  417bb2:	mov    bh,0xbd
  417bb4:	push   ds
  417bb5:	xchg   esp,eax
  417bb6:	out    0x4e,al
  417bb8:	jp     0x417bf7
  417bba:	adc    dl,BYTE PTR [ecx]
  417bbc:	pop    ss
  417bbd:	scas   al,BYTE PTR es:[edi]
  417bbe:	mov    edx,0xd2535f7a
  417bc3:	mov    edi,DWORD PTR [ebp-0xadeb0b0]
  417bc9:	fcom   DWORD PTR [eax-0x5516b08a]
  417bcf:	xor    ch,BYTE PTR ds:0x95aaba76
  417bd5:	add    BYTE PTR [edi+0x797a1f51],ah
  417bdb:	push   ebp
  417bdc:	dec    ebx
  417bdd:	jb     0x417c2f
  417bdf:	push   edi
  417be0:	jbe    0x417c53
  417be2:	add    bl,BYTE PTR [esi+0x66b40b9d]
  417be8:	ins    DWORD PTR es:[edi],dx
  417be9:	add    al,0x10
  417bec:	push   cs
  417bed:	adc    cl,BYTE PTR [ebp+0x79c83f38]
  417bf3:	sub    al,ch
  417bf5:	lahf   
  417bf6:	sti    
  417bf7:	sbb    eax,0x8537efb7
  417bfc:	scas   eax,DWORD PTR es:[edi]
  417bfd:	push   ds
  417bfe:	sbb    eax,0x93bbc92d
  417c03:	pop    ss
  417c04:	call   0xa261:0x97e8cea9
  417c0b:	arpl   WORD PTR [ebx+eiz*8+0x41b225b3],cx
  417c12:	add    DWORD PTR [edi-0x6f],0x39b3f53
  417c19:	and    ah,dh
  417c1b:	repnz cmp al,0x48
  417c1e:	dec    ebx
  417c1f:	sub    DWORD PTR [eax],edi
  417c21:	xchg   BYTE PTR ss:[edi+0x3b4d81f9],dl
  417c28:	mov    WORD PTR [ecx],ds
  417c2a:	cmp    ah,BYTE PTR [eax]
  417c2c:	ins    BYTE PTR es:[edi],dx
  417c2d:	fstp   QWORD PTR ds:0x349a3b0f
  417c33:	xlat   BYTE PTR ds:[ebx]
  417c34:	mov    ah,0x39
  417c36:	fdivr  DWORD PTR [ebp+0x4]
  417c39:	adc    al,0xca
  417c3b:	xor    al,0xe0
  417c3d:	fimul  WORD PTR [edi-0x1a1fc736]
  417c43:	lock sub DWORD PTR [eax-0x22],ecx
  417c47:	xor    eax,eax
  417c49:	out    dx,eax
  417c4a:	test   DWORD PTR [ecx-0x7d],ebx
  417c4d:	push   esp
  417c4e:	outs   dx,BYTE PTR ds:[esi]
  417c4f:	sub    esi,DWORD PTR [ecx]
  417c51:	xchg   edx,eax
  417c52:	aam    0xee
  417c54:	and    esi,esp
  417c56:	sub    bl,0x4
  417c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c5a:	mov    ch,0x79
  417c5c:	call   0x49d4:0xfe6a6187
  417c63:	pushf  
  417c64:	mov    edi,0xc10bc59b
  417c69:	pop    ebx
  417c6a:	cmp    esp,0x23ea7fa3
  417c70:	rcl    BYTE PTR [ebp+eax*8-0x49],0x46
  417c75:	pop    eax
  417c76:	lods   eax,DWORD PTR ds:[esi]
  417c77:	xor    ecx,DWORD PTR [edx]
  417c79:	push   esi
  417c7a:	ins    DWORD PTR es:[edi],dx
  417c7b:	ret    0x23bd
  417c7e:	push   edi
  417c7f:	pop    ds
  417c80:	cmp    DWORD PTR [edi+eiz*8-0x120cdb1],edx
  417c87:	stos   DWORD PTR es:[edi],eax
  417c88:	cwde   
  417c89:	ss adc al,0x27
  417c8c:	addr16 test al,0x62
  417c8f:	push   edi
  417c90:	pop    ebx
  417c91:	xchg   BYTE PTR [esp+ecx*1-0xd],ch
  417c95:	aaa    
  417c96:	sub    BYTE PTR [edi+0x191dee39],0x6a
  417c9d:	add    cl,0x83
  417ca0:	ds fwait
  417ca2:	jg     0x417c9d
  417ca4:	xchg   esi,eax
  417ca5:	sub    BYTE PTR ds:0x82bfb6a,al
  417cab:	mov    DWORD PTR [edi],esp
  417cad:	dec    eax
  417cae:	mov    edi,DWORD PTR [edx]
  417cb0:	xchg   BYTE PTR [edx+0x32],bl
  417cb3:	ret    
  417cb4:	retf   
  417cb5:	scas   al,BYTE PTR es:[edi]
  417cb6:	pop    eax
  417cb7:	loopne 0x417d23
  417cb9:	jo     0x417c6a
  417cbb:	inc    ebp
  417cbc:	jl     0x417d32
  417cbe:	xor    bl,BYTE PTR [edi-0x71]
  417cc1:	mov    ebp,0xd117a048
  417cc6:	aas    
  417cc7:	mov    dl,BYTE PTR [ebp+0x63]
  417cca:	inc    ecx
  417ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ccc:	fcomp  DWORD PTR [esi+0x4ff184c1]
  417cd2:	jecxz  0x417d1e
  417cd4:	jbe    0x417c9a
  417cd6:	push   ecx
  417cd7:	pop    esp
  417cd8:	and    esi,DWORD PTR [ecx]
  417cda:	es pop edi
  417cdc:	imul   BYTE PTR [ebp-0x358726c8]
  417ce2:	push   esi
  417ce3:	pop    ebx
  417ce4:	out    dx,eax
  417ce5:	ss gs mov ecx,ss
  417ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cea:	in     eax,dx
  417ceb:	or     DWORD PTR [esi],edi
  417ced:	adc    eax,0xe40be893
  417cf2:	push   ebp
  417cf3:	pop    ss
  417cf4:	adc    BYTE PTR [edx-0x3b],al
  417cf7:	loop   0x417d2d
  417cf9:	std    
  417cfa:	inc    esi
  417cfb:	add    BYTE PTR [ecx+0x3a],bl
  417cfe:	bound  ebx,QWORD PTR [esi]
  417d00:	mov    ebp,0xda6d1b63
  417d05:	inc    ecx
  417d06:	es pop edi
  417d08:	dec    edi
  417d09:	retf   
  417d0a:	xchg   edx,eax
  417d0b:	sbb    eax,0x500190e5
  417d10:	(bad)  [edi-0x3a808a13]
  417d16:	adc    DWORD PTR [edx+0x1f],esi
  417d19:	push   ds
  417d1a:	and    eax,DWORD PTR [eax]
  417d1c:	push   edi
  417d1d:	enter  0xf941,0x5b
  417d21:	sbb    al,0x2f
  417d23:	enter  0x53b,0xc3
  417d27:	adc    esp,0xe9a758f6
  417d2d:	nop
  417d2e:	sub    eax,0x76ae0922
  417d33:	cmp    eax,0x5a03419
  417d38:	imul   ebp,eax,0xffffffa8
  417d3b:	test   esp,0xeb4e3e63
  417d41:	mov    ds:0x91495f18,eax
  417d46:	mov    ecx,0xc2d484d0
  417d4b:	imul   ecx,DWORD PTR [esi],0x477c8c2d
  417d51:	inc    eax
  417d52:	xchg   ebp,eax
  417d53:	mov    ds:0xae8db811,eax
  417d58:	test   DWORD PTR [ecx],0x1f4b4949
  417d5e:	mov    cl,0x2
  417d60:	int3   
  417d61:	add    eax,0xca617e40
  417d66:	jmp    0x1b400244
  417d6b:	retf   0xc62
  417d6e:	mov    esi,gs
  417d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d71:	out    0xdb,al
  417d73:	jmp    0x7d64795b
  417d78:	jns    0x417d0f
  417d7a:	pusha  
  417d7b:	inc    esp
  417d7c:	cs push es
  417d7e:	nop
  417d7f:	into   
  417d80:	cmp    al,0x66
  417d82:	mov    BYTE PTR [esi*4+0x3f24944f],bl
  417d89:	inc    ebp
  417d8a:	adc    eax,ecx
  417d8c:	mov    bh,0x93
  417d8e:	shl    BYTE PTR [edi],1
  417d90:	pop    edx
  417d91:	in     eax,0x16
  417d93:	pop    ds
  417d94:	sbb    al,0xc2
  417d96:	xchg   DWORD PTR [ebp-0x7978981d],edi
  417d9c:	imul   esp,DWORD PTR [ecx+0x304dfe8a],0x87271782
  417da6:	jmp    0x8582:0x9d8ecc8f
  417dad:	iret   
  417dae:	xchg   edi,eax
  417daf:	mov    dl,0x8c
  417db1:	aam    0xcc
  417db3:	and    DWORD PTR [edx-0x1b],ebx
  417db6:	out    dx,al
  417db7:	pushf  
  417db8:	(bad)  
  417db9:	dec    edx
  417dba:	shl    BYTE PTR [edi],cl
  417dbc:	loope  0x417d8e
  417dbe:	dec    edx
  417dbf:	jno    0x417e21
  417dc1:	in     al,0xe4
  417dc3:	push   edx
  417dc4:	push   ecx
  417dc5:	stos   DWORD PTR es:[edi],eax
  417dc6:	out    0xa9,al
  417dc8:	cmc    
  417dc9:	add    eax,0x514c3a22
  417dce:	mov    dh,0x76
  417dd0:	stos   BYTE PTR es:[edi],al
  417dd1:	xchg   edi,eax
  417dd2:	(bad)  
  417dd3:	xor    esp,DWORD PTR [edi+0x37]
  417dd6:	pop    esi
  417dd7:	je     0x417d9f
  417dd9:	mov    ebx,0x5b061153
  417ddf:	test   BYTE PTR [edi],ah
  417de1:	mov    eax,ss
  417de3:	xor    al,0x4
  417de5:	mov    ecx,0xf6dcdefe
  417dea:	jne    0x417de7
  417dec:	iret   
  417ded:	jae    0x417e1d
  417def:	cdq    
  417df0:	(bad)  
  417df1:	pop    ebp
  417df2:	jb     0x417d7a
  417df4:	test   ch,ch
  417df6:	ja     0x417dbb
  417df8:	lods   eax,DWORD PTR ds:[esi]
  417df9:	adc    BYTE PTR [eax+ecx*4-0x11],0x5b
  417dfe:	out    dx,eax
  417dff:	push   es
  417e00:	push   eax
  417e01:	fwait
  417e02:	push   edi
  417e03:	xchg   ah,bl
  417e05:	mov    ebp,0x7c741cba
  417e0a:	inc    eax
  417e0b:	sbb    al,0x5
  417e0d:	ds iret 
  417e0f:	addr16 push ss
  417e11:	push   es
  417e12:	mov    ebp,DWORD PTR [ebx-0x6]
  417e15:	sub    bl,dh
  417e17:	pop    ecx
  417e18:	out    0xec,al
  417e1a:	cld    
  417e1b:	adc    al,0x5e
  417e1d:	and    DWORD PTR [edi+0x67],ecx
  417e20:	cmp    ebp,DWORD PTR [eax]
  417e22:	jb     0x417e5c
  417e24:	repz and ecx,DWORD PTR ds:0x89e72216
  417e2b:	sbb    eax,0x4fe55a49
  417e30:	bound  eax,QWORD PTR [ebx+edx*2-0x4c]
  417e34:	pop    ss
  417e35:	jmp    0x268dbb85
  417e3a:	fdiv   QWORD PTR [edi+0x2041cc1f]
  417e40:	xor    eax,0x3cd63193
  417e45:	or     DWORD PTR [edi+eax*4],0xe87f14ff
  417e4c:	and    eax,0x4330fe2c
  417e51:	stos   DWORD PTR es:[edi],eax
  417e52:	into   
  417e53:	std    
  417e54:	push   eax
  417e55:	mov    dl,0xe4
  417e57:	mov    ds:0xd205b36a,al
  417e5c:	adc    esi,DWORD PTR [ebx+0x23ffae7d]
  417e62:	lods   al,BYTE PTR ds:[esi]
  417e63:	mov    esp,0x4d7ac14e
  417e68:	lods   al,BYTE PTR ds:[esi]
  417e69:	test   DWORD PTR [edx-0x4aa14e63],edi
  417e6f:	mov    bl,0xdb
  417e71:	xchg   esi,eax
  417e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e73:	jmp    0x417edf
  417e75:	js     0x417dfb
  417e77:	sub    BYTE PTR [ecx],bh
  417e79:	xor    edx,DWORD PTR [edi]
  417e7b:	je     0x417e55
  417e7d:	test   DWORD PTR [edi],edx
  417e7f:	inc    ebx
  417e80:	rcr    esi,1
  417e82:	out    dx,eax
  417e83:	add    al,al
  417e85:	pop    esi
  417e86:	mov    ah,0x96
  417e88:	mov    eax,0x64064ca8
  417e8d:	lahf   
  417e8e:	and    DWORD PTR [edi],ecx
  417e90:	pop    ss
  417e91:	out    dx,al
  417e92:	(bad)  
  417e93:	jmp    0xcf41e889
  417e98:	fld1   
  417e9a:	leave  
  417e9b:	cdq    
  417e9c:	mov    eax,0x105b9e83
  417ea1:	repnz fwait
  417ea3:	jmp    0x417eb4
  417ea5:	(bad)  
  417ea6:	(bad)  
  417ea7:	shl    al,1
  417ea9:	outs   dx,DWORD PTR ds:[esi]
  417eaa:	daa    
  417eab:	jmp    0xf7eeb535
  417eb0:	sub    al,0xcc
  417eb2:	in     al,0xbd
  417eb4:	imul   ecx,DWORD PTR [ebp+0x64343392],0xffffffd8
  417ebb:	or     ecx,eax
  417ebd:	push   esp
  417ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ebf:	repz shl edx,1
  417ec2:	mov    WORD PTR [ebx+0x31],?
  417ec5:	gs call FWORD PTR ds:[edi-0x4802b790]
  417ecd:	or     eax,0x29a63066
  417ed2:	not    ah
  417ed4:	or     eax,0x84b68527
  417ed9:	loopne 0x417e8d
  417edb:	loope  0x417edf
  417edd:	adc    DWORD PTR [eax+ebp*8+0x2d],0x6d
  417ee2:	jo     0x417f52
  417ee4:	retf   
  417ee5:	je     0x417f61
  417ee7:	sar    DWORD PTR [edx+0x4ec6cfcd],1
  417eed:	adc    cl,bh
  417eef:	mov    al,0x8c
  417ef1:	test   DWORD PTR [ecx+ebx*8+0x1b],eax
  417ef5:	in     eax,dx
  417ef6:	cmp    al,0x58
  417ef8:	(bad)  
  417ef9:	test   BYTE PTR [ecx],0x47
  417efc:	fisttp QWORD PTR [ecx]
  417efe:	mov    ds:0xb72ab269,eax
  417f03:	inc    esi
  417f04:	dec    esp
  417f05:	pop    ss
  417f06:	lock and BYTE PTR [eax+0x65],0x1a
  417f0b:	fnstsw WORD PTR [edi]
  417f0d:	jno    0x417eca
  417f0f:	and    al,0x8c
  417f11:	mov    ecx,0xa12e7b0f
  417f16:	mov    dl,0xe1
  417f18:	push   ecx
  417f19:	push   es
  417f1a:	in     al,dx
  417f1b:	push   0x3fa10f51
  417f20:	add    BYTE PTR [edi+0x9],0x44
  417f24:	(bad)  
  417f25:	xchg   esi,eax
  417f26:	test   al,0xe8
  417f28:	xor    al,0x12
  417f2a:	mov    bl,0xf8
  417f2c:	dec    esp
  417f2d:	dec    eax
  417f2e:	out    dx,al
  417f2f:	int3   
  417f30:	xor    DWORD PTR [edx-0x76e76e3c],0xffffff9c
  417f37:	add    eax,0xbaaef708
  417f3c:	push   ebx
  417f3d:	mov    edx,0xdf81560e
  417f42:	leave  
  417f43:	adc    eax,DWORD PTR [ebx+0x1c]
  417f46:	out    0x8b,eax
  417f48:	pop    edx
  417f49:	je     0x417f6f
  417f4b:	push   cs
  417f4c:	dec    esp
  417f4d:	xor    edx,ebp
  417f4f:	jmp    0xc9dca538
  417f54:	and    dl,BYTE PTR [edi-0x6a9a1779]
  417f5a:	xor    ecx,DWORD PTR [ebx]
  417f5c:	sbb    al,0x53
  417f5e:	and    ebx,DWORD PTR [esi]
  417f60:	fcom   QWORD PTR ds:0xbc19d6ca
  417f66:	inc    ecx
  417f67:	aas    
  417f68:	and    al,0xa6
  417f6a:	sbb    al,0x3b
  417f6c:	and    eax,0x3f28621a
  417f71:	shl    ecx,cl
  417f73:	jmp    0x207eddda
  417f78:	mov    ecx,0x9ec82cb
  417f7d:	mov    edi,0xfa6c0767
  417f82:	xor    al,0xda
  417f84:	cs jns 0x417f9b
  417f87:	xchg   esi,eax
  417f88:	pop    edx
  417f89:	pop    esp
  417f8a:	sub    al,0x7c
  417f8c:	push   ss
  417f8d:	adc    DWORD PTR [ecx],esi
  417f8f:	out    0x4f,al
  417f91:	jp     0x417f26
  417f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f94:	in     eax,dx
  417f95:	add    edx,ebx
  417f97:	mov    dh,0x97
  417f99:	cmp    eax,0x93f49b3c
  417f9e:	lahf   
  417f9f:	nop    ebx
  417fa2:	js     0x417fd0
  417fa4:	lods   eax,DWORD PTR ds:[esi]
  417fa5:	inc    esi
  417fa6:	(bad)  
  417fa7:	jbe    0x418012
  417fa9:	mov    bl,cl
  417fab:	cld    
  417fac:	stc    
  417fad:	mov    esi,0x5d5f0fc5
  417fb2:	sbb    DWORD PTR [ecx-0x73],edi
  417fb5:	popf   
  417fb6:	inc    ebx
  417fb7:	pop    es
  417fb8:	push   cs
  417fb9:	in     eax,0x25
  417fbb:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  417fbd:	adc    DWORD PTR [ecx],ebx
  417fbf:	push   esi
  417fc0:	bound  esp,QWORD PTR [ebx-0x6d]
  417fc3:	sub    BYTE PTR [ebp+0x3b],0x79
  417fc7:	lds    ebp,FWORD PTR [edx]
  417fc9:	test   eax,0x8d05f410
  417fce:	adc    DWORD PTR [eax+0x73504648],0xf3f18d97
  417fd8:	ins    BYTE PTR es:[edi],dx
  417fd9:	push   edi
  417fda:	outs   dx,DWORD PTR ds:[esi]
  417fdb:	test   ecx,0x87869aaa
  417fe1:	lods   eax,DWORD PTR ds:[esi]
  417fe2:	jbe    0x418045
  417fe4:	into   
  417fe5:	pop    eax
  417fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fe7:	in     eax,0x5f
  417fe9:	imul   esi,DWORD PTR [edi],0xccaa5857
  417fef:	dec    ebp
  417ff0:	pop    edi
  417ff1:	sahf   
  417ff2:	cld    
  417ff3:	mov    ds:0x37d451bc,al
  417ff8:	push   ss
  417ff9:	(bad)  
  417ffa:	das    
  417ffb:	and    ah,BYTE PTR [ecx-0x30de89f7]
  418001:	sahf   
  418002:	add    ecx,edx
  418004:	nop
  418005:	pop    ss
  418006:	push   esi
  418007:	and    esi,DWORD PTR [eax+ebx*2]
  41800a:	cmp    DWORD PTR [ecx+eax*1+0x20],eax
  41800e:	mov    ch,0x30
  418010:	scas   eax,DWORD PTR es:[edi]
  418011:	imul   esp,DWORD PTR [ebp+0x45],0x12
  418015:	xchg   esp,eax
  418016:	jo     0x418045
  418018:	pop    eax
  418019:	mov    al,ds:0x898bba79
  41801e:	add    al,0x55
  418020:	xchg   ebp,eax
  418021:	aaa    
  418022:	sbb    BYTE PTR [edi*8+0x5e8bdaa0],0x7d
  41802a:	jle    0x418085
  41802c:	mov    ecx,0xd53c9318
  418031:	cwde   
  418032:	loop   0x418013
  418034:	push   ds
  418035:	cmp    al,0x1e
  418037:	test   BYTE PTR [ebx+edx*1-0x65417729],al
  41803e:	mov    edi,0xbc7b98bf
  418043:	add    al,0x80
  418045:	call   0x4f7fa5d5
  41804a:	mov    ds:0x87311453,eax
  41804f:	shl    DWORD PTR [ebp+esi*4+0x7],1
  418053:	in     eax,0xc5
  418055:	cli    
  418056:	je     0x4180ca
  418058:	int    0xa
  41805a:	mov    WORD PTR [esi],fs
  41805c:	jge    0x4180b7
  41805e:	aad    0x7a
  418060:	xor    esp,DWORD PTR [edi-0x51]
  418063:	jl     0x4180c8
  418065:	xchg   DWORD PTR [ebx+0x2f8d4486],esp
  41806b:	cmc    
  41806c:	call   0xca1b3c3c
  418071:	pop    esi
  418072:	mov    ds:0xeaa240da,al
  418077:	cmp    DWORD PTR [ebx+ecx*4],edx
  41807a:	(bad)  
  41807b:	imul   eax,DWORD PTR [ebx-0x4a],0xefd4276a
  418082:	into   
  418083:	dec    edi
  418084:	pop    eax
  418085:	dec    esi
  418086:	ja     0x4180e6
  418088:	cmp    ch,al
  41808a:	fldcw  WORD PTR [edx]
  41808c:	mov    dh,0x2c
  41808e:	add    esp,DWORD PTR [edx-0xb]
  418091:	(bad)  
  418092:	pop    edx
  418093:	xchg   DWORD PTR [eax],ebx
  418095:	ror    DWORD PTR [ebx+ebx*2+0x5c],1
  418099:	add    BYTE PTR [ecx],dl
  41809b:	sub    al,0xbc
  41809d:	fbstp  TBYTE PTR [ebp+0x7fdc0807]
  4180a3:	dec    ecx
  4180a4:	xor    BYTE PTR [ebp+0x38d5334b],dh
  4180aa:	scas   al,BYTE PTR es:[edi]
  4180ab:	addr16 push ss
  4180ad:	je     0x41812e
  4180af:	inc    ecx
  4180b0:	inc    esp
  4180b1:	jns    0x4180d1
  4180b3:	das    
  4180b4:	hlt    
  4180b5:	jp     0x4180fe
  4180b7:	pop    ecx
  4180b8:	ret    
  4180b9:	into   
  4180ba:	cmp    DWORD PTR [ebx+ebp*2-0x17dbdda1],ecx
  4180c1:	push   cs
  4180c2:	inc    edi
  4180c3:	je     0x418144
  4180c5:	aad    0x2c
  4180c7:	arpl   cx,di
  4180c9:	js     0x418066
  4180cb:	clc    
  4180cc:	push   cs
  4180cd:	fimul  WORD PTR [edi]
  4180cf:	or     al,0x92
  4180d1:	push   edi
  4180d2:	dec    eax
  4180d3:	fwait
  4180d4:	xchg   ebx,eax
  4180d5:	enter  0x89c0,0x1b
  4180d9:	loope  0x4180af
  4180db:	or     BYTE PTR [ebx+0x41],0xc7
  4180df:	lods   al,BYTE PTR ds:[esi]
  4180e0:	adc    DWORD PTR [ecx],ecx
  4180e2:	cdq    
  4180e3:	stos   BYTE PTR es:[edi],al
  4180e4:	ret    0x2f1f
  4180e7:	div    BYTE PTR [ebx+0x60]
  4180ea:	xor    DWORD PTR [edx],ebp
  4180ec:	mov    ebp,esp
  4180ee:	out    0xf7,al
  4180f0:	push   ebp
  4180f1:	lock icebp 
  4180f3:	sub    DWORD PTR [edx+0x8],0xa191757e
  4180fa:	xor    ah,BYTE PTR [edx]
  4180fc:	inc    ebp
  4180fd:	mov    ds:0x42bb0cf6,al
  418102:	sahf   
  418103:	cld    
  418104:	popa   
  418105:	mov    es,WORD PTR [ecx-0x25d483f6]
  41810b:	jl     0x4180d4
  41810d:	push   esp
  41810e:	mov    ds:0xdd1db9d0,al
  418113:	dec    esp
  418114:	popf   
  418115:	ret    0xa20a
  418118:	mov    esp,0xcdac7bff
  41811d:	pushf  
  41811e:	jl     0x418130
  418120:	dec    edx
  418121:	retf   
  418122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418123:	sbb    ecx,esi
  418125:	jp     0x4180b5
  418127:	psubb  mm7,QWORD PTR [edx-0x2e426c39]
  41812e:	fldenv [ebx]
  418130:	and    dl,bh
  418132:	cli    
  418133:	mov    edi,0xd2f75a68
  418138:	adc    al,0x17
  41813a:	fldln2 
  41813c:	icebp  
  41813d:	pop    ss
  41813e:	mov    cl,0xc8
  418140:	cld    
  418141:	nop
  418142:	pop    ecx
  418143:	xlat   BYTE PTR ds:[ebx]
  418144:	pop    ebx
  418145:	dec    esp
  418146:	xchg   ebp,eax
  418147:	and    eax,0x58918965
  41814c:	cmc    
  41814d:	dec    ecx
  41814e:	arpl   bx,di
  418150:	or     DWORD PTR [eax-0x6d],0x56
  418154:	imul   esi,edi,0x18
  418157:	fdiv   QWORD PTR ds:0x83b4ea92
  41815d:	and    bh,0xaf
  418160:	xlat   BYTE PTR ds:[ebx]
  418161:	out    0x41,eax
  418163:	mov    al,0x38
  418165:	sub    eax,edx
  418167:	adc    al,0xa0
  418169:	xlat   BYTE PTR ds:[ebx]
  41816a:	or     al,BYTE PTR [edi-0x3]
  41816d:	outs   dx,BYTE PTR ds:[esi]
  41816e:	add    DWORD PTR [esi+0x8],ecx
  418171:	call   0x1052:0x17dad904
  418178:	mov    al,ds:0xafa4d46c
  41817d:	mov    ch,0xf8
  41817f:	shr    BYTE PTR cs:[esi],cl
  418182:	sar    DWORD PTR ds:0x1d984cb3,0xfb
  418189:	cmp    esi,DWORD PTR [ecx+0x7604039b]
  41818f:	out    dx,al
  418190:	ret    0x268d
  418193:	idiv   edi
  418195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418196:	jp     0x418140
  418198:	mov    cl,0xff
  41819a:	xchg   esp,eax
  41819b:	adc    eax,esi
  41819d:	xor    ebp,esi
  41819f:	iret   
  4181a0:	pop    ebp
  4181a1:	push   cs
  4181a2:	add    BYTE PTR [ebp+eiz*1+0x785c28cb],ch
  4181a9:	test   BYTE PTR [ebx-0x7ef2706f],ch
  4181af:	adc    al,0xd0
  4181b1:	push   cs
  4181b2:	xor    eax,0xddbdb36e
  4181b7:	sar    DWORD PTR [edi],cl
  4181b9:	rol    DWORD PTR [esi+esi*1+0x12],0x9b
  4181be:	fs jle 0x41820e
  4181c1:	inc    esp
  4181c2:	or     eax,0xab61f9dc
  4181c7:	push   ebx
  4181c8:	mov    al,ds:0x82114dde
  4181cd:	inc    edx
  4181ce:	test   BYTE PTR [edx],bl
  4181d0:	and    esi,DWORD PTR [ebp+ebp*1+0x36]
  4181d4:	sub    ebx,DWORD PTR [eax]
  4181d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181d7:	add    dh,ah
  4181d9:	iret   
  4181da:	mov    edi,0x891ee72a
  4181df:	loopne 0x4181a2
  4181e1:	cmp    al,0xde
  4181e3:	mov    BYTE PTR [edx-0x5b7b9e33],ah
  4181e9:	fidiv  WORD PTR [edi+0x44]
  4181ec:	xor    edx,DWORD PTR [ebx+0xb]
  4181ef:	jle    0x418192
  4181f1:	outs   dx,DWORD PTR ds:[esi]
  4181f2:	iret   
  4181f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181f4:	hlt    
  4181f5:	int3   
  4181f6:	fnstenv [ebp+ecx*2-0x53]
  4181fa:	xlat   BYTE PTR ds:[ebx]
  4181fb:	pop    edx
  4181fc:	std    
  4181fd:	sar    DWORD PTR [edx],1
  4181ff:	push   0x2d
  418201:	lods   eax,DWORD PTR ds:[esi]
  418202:	es adc ebx,ecx
  418205:	pop    ecx
  418206:	xchg   BYTE PTR [esi+0x32],bh
  418209:	adc    BYTE PTR [edx+0x6a],0xde
  41820d:	out    dx,eax
  41820e:	popa   
  41820f:	or     eax,0x21ffadc0
  418214:	or     ch,bl
  418216:	fstp   st(6)
  418218:	out    dx,al
  418219:	sbb    ch,cl
  41821b:	mov    edx,0x8bb27507
  418220:	mov    esi,0x12a17e90
  418225:	fwait
  418226:	inc    esi
  418227:	jmp    0x7ada:0x1493de
  41822e:	imul   edx,DWORD PTR [ecx+0xc3cd348],0x1907136c
  418238:	cmp    esp,DWORD PTR [esi-0x3533c736]
  41823e:	mov    al,ds:0x23cdf0f5
  418243:	ret    
  418244:	iret   
  418245:	lock dec esp
  418247:	inc    esi
  418248:	or     BYTE PTR [ecx],ch
  41824a:	cmc    
  41824b:	ins    BYTE PTR es:[edi],dx
  41824c:	loop   0x418273
  41824e:	inc    ebx
  41824f:	jae    0x418281
  418251:	and    BYTE PTR [edi+0x6d],cl
  418254:	mov    ch,0xf
  418256:	jnp    0x4181d9
  418258:	push   cs
  418259:	clc    
  41825a:	int    0xc2
  41825c:	add    al,cl
  41825e:	cwde   
  41825f:	or     DWORD PTR [ebp+esi*4+0x220e6def],edx
  418266:	adc    al,bl
  418268:	cmp    eax,0x71544a39
  41826d:	or     BYTE PTR [edx-0x28],bl
  418270:	and    eax,0x449aa7e8
  418275:	jmp    0x4182d5
  418277:	hlt    
  418278:	retf   0xc89a
  41827b:	jg     0x4182ed
  41827d:	adc    ecx,DWORD PTR [edi+ebx*8-0xdd71a64]
  418284:	pop    ebx
  418285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418286:	loopne 0x4182c3
  418288:	adc    ebx,esi
  41828a:	jmp    0x8b7f1f49
  41828f:	out    0xb6,eax
  418291:	std    
  418292:	inc    ecx
  418293:	jmp    DWORD PTR [esi]
  418295:	retf   
  418296:	aas    
  418297:	in     al,dx
  418298:	dec    ebp
  418299:	add    BYTE PTR [ebp+0x7b6904b1],ch
  41829f:	jl     0x418288
  4182a1:	xchg   ecx,eax
  4182a2:	or     DWORD PTR [edi+0x4f7a2875],esi
  4182a8:	ror    DWORD PTR [eax+ebx*4-0x40],0x75
  4182ad:	adc    BYTE PTR [edx-0x56],bl
  4182b0:	xchg   BYTE PTR [ecx-0x5820480f],bh
  4182b6:	pop    edi
  4182b7:	sub    eax,DWORD PTR [esi]
  4182b9:	ret    0x72d9
  4182bc:	dec    edx
  4182bd:	push   ecx
  4182be:	loop   0x4182f4
  4182c0:	sbb    esp,DWORD PTR [esi+0x25]
  4182c3:	sbb    DWORD PTR [eax],esi
  4182c5:	inc    edi
  4182c6:	push   eax
  4182c7:	repnz xchg esi,eax
  4182c9:	xchg   esi,eax
  4182ca:	mov    ch,0x99
  4182cc:	js     0x418252
  4182ce:	scas   al,BYTE PTR es:[edi]
  4182cf:	dec    esp
  4182d0:	sub    al,0xd9
  4182d2:	pop    eax
  4182d3:	(bad)  
  4182d5:	sar    DWORD PTR [edx+0x1ebdf8ca],1
  4182db:	mov    BYTE PTR [edi-0x3a377f63],bh
  4182e1:	mov    al,ds:0x4d6fc3f2
  4182e6:	call   0x41e6d2d8
  4182eb:	aas    
  4182ec:	mov    edx,0xbea27e73
  4182f1:	xor    al,0x13
  4182f3:	mov    al,ds:0x7bba40c
  4182f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182f9:	neg    BYTE PTR [edx]
  4182fb:	xor    BYTE PTR [edi-0x32],0xb8
  4182ff:	or     ecx,DWORD PTR [esi]
  418301:	mov    ebp,0x99805a55
  418306:	adc    dh,BYTE PTR [ebp-0x60]
  418309:	sbb    ebp,DWORD PTR [edi+0x56]
  41830c:	pop    ebx
  41830d:	ds sahf 
  41830f:	xlat   BYTE PTR ds:[ebx]
  418310:	das    
  418311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418312:	sub    BYTE PTR [esi-0x1b4df2a5],bl
  418318:	repz fwait
  41831a:	xchg   esp,eax
  41831b:	cmc    
  41831c:	xor    BYTE PTR [edi+0x25b81ec1],bl
  418322:	out    dx,eax
  418323:	jns    0x41832e
  418325:	inc    edx
  418326:	xchg   ecx,eax
  418327:	and    eax,0xfcccf0a5
  41832c:	dec    edx
  41832d:	adc    eax,0x534f2c82
  418332:	test   eax,0xa73091e8
  418337:	(bad)  
  418338:	loope  0x4182d3
  41833a:	repnz (bad) 
  41833d:	jmp    0x918:0x9f0fb948
  418344:	add    ebx,DWORD PTR [ecx+0x62]
  418347:	xchg   ebx,eax
  418348:	aad    0x65
  41834a:	sbb    BYTE PTR [edi+0x4d0472d6],bh
  418350:	call   0xf25b:0x283b0f24
  418357:	xor    edx,DWORD PTR [ecx-0x1dfa5f88]
  41835d:	push   esi
  41835e:	push   esi
  41835f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418360:	or     ecx,0xf6a02dff
  418366:	jg     0x418357
  418368:	mov    ebx,0x660f038c
  41836d:	repnz dec ebx
  41836f:	pop    edx
  418370:	mov    dl,0x14
  418372:	mov    al,0x94
  418374:	xchg   DWORD PTR [ebx+0x29332ec5],esp
  41837a:	jns    0x418357
  41837c:	and    BYTE PTR ds:[eax+ebp*4-0x2b],ch
  418381:	out    dx,al
  418382:	dec    esp
  418383:	pushf  
  418384:	pushf  
  418385:	aas    
  418386:	add    dl,bh
  418388:	mov    bl,0x7f
  41838a:	bound  esp,QWORD PTR [ebx+ecx*4]
  41838d:	mov    cl,0x42
  41838f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418390:	inc    ecx
  418391:	and    DWORD PTR [eax],edi
  418393:	int    0x0
  418395:	adc    ebx,DWORD PTR [edi-0x3f]
  418398:	mov    ebx,0x8a2601de
  41839d:	push   edx
  41839e:	lods   eax,DWORD PTR ds:[esi]
  41839f:	or     DWORD PTR [edi+eiz*1+0x23],0xffffffe1
  4183a4:	xor    BYTE PTR [edi-0x149a024f],0x6
  4183ab:	nop
  4183ac:	stc    
  4183ad:	adc    eax,0x46eb591a
  4183b2:	icebp  
  4183b3:	sub    al,0xce
  4183b5:	lock retf 
  4183b7:	les    edi,FWORD PTR ds:0xd624cb8c
  4183bd:	dec    BYTE PTR [esi]
  4183bf:	mov    ah,0x3e
  4183c1:	ret    
  4183c2:	ja     0x418362
  4183c4:	fild   DWORD PTR [edx+0x64]
  4183c7:	cmp    dl,BYTE PTR [edx-0x68]
  4183ca:	jne    0x4183fb
  4183cc:	scas   eax,DWORD PTR es:[edi]
  4183cd:	daa    
  4183ce:	retf   0x7df2
  4183d1:	lea    esi,[edi]
  4183d3:	xchg   ebp,eax
  4183d4:	sub    DWORD PTR [esi-0x1e],esi
  4183d7:	out    0x93,eax
  4183d9:	lods   eax,DWORD PTR ds:[esi]
  4183da:	rcr    cl,1
  4183dc:	and    edx,ebp
  4183de:	jge    0x418376
  4183e0:	inc    eax
  4183e1:	pop    ebp
  4183e2:	cli    
  4183e3:	in     eax,dx
  4183e4:	or     ah,BYTE PTR [ebp-0x38]
  4183e7:	jb     0x418395
  4183e9:	js     0x418427
  4183eb:	push   ebp
  4183ec:	xchg   esp,eax
  4183ed:	jne    0x418434
  4183ef:	push   ebp
  4183f0:	jle    0x41846d
  4183f2:	push   esi
  4183f3:	mov    WORD PTR [ecx],?
  4183f5:	sahf   
  4183f6:	mov    ebx,0x1c37dc72
  4183fb:	int    0x20
  4183fd:	pop    ebp
  4183fe:	mov    esi,0x1c3ec15b
  418403:	in     al,dx
  418404:	retf   0xa14
  418407:	mov    eax,ds:0x94f274b3
  41840c:	adc    bh,bh
  41840e:	stos   DWORD PTR es:[edi],eax
  41840f:	neg    dl
  418411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418412:	sar    DWORD PTR [edx],1
  418414:	js     0x4183d0
  418416:	adc    BYTE PTR [eax+0xc95832b],bh
  41841c:	aas    
  41841d:	mov    ch,0x11
  41841f:	out    dx,eax
  418420:	retf   0x8e65
  418423:	and    edx,DWORD PTR [ebx]
  418425:	xor    DWORD PTR [ebx+esi*1],edi
  418428:	js     0x418446
  41842a:	pop    esi
  41842b:	(bad)  
  41842c:	xchg   esp,eax
  41842d:	pop    esp
  41842e:	push   ebx
  41842f:	xor    DWORD PTR [ebx+0x4e],edi
  418432:	sahf   
  418433:	int    0x59
  418435:	pop    esi
  418436:	int    0x47
  418438:	xlat   BYTE PTR ds:[ebx]
  418439:	push   edi
  41843a:	cmp    ebp,esp
  41843c:	cli    
  41843d:	add    ecx,DWORD PTR [ecx+0x1]
  418440:	test   eax,0x52c88144
  418445:	add    DWORD PTR fs:[ebx+0x28fafc77],0x75
  41844d:	mov    ah,0xbe
  41844f:	inc    ebx
  418450:	and    BYTE PTR [edi+0x13],bh
  418453:	rcr    DWORD PTR [ebx],1
  418455:	sbb    dh,BYTE PTR [esi+0x3d53904f]
  41845b:	fist   WORD PTR [eax+0x3cee4c7a]
  418461:	call   0x98d2:0x3bef350b
  418468:	xchg   edx,eax
  418469:	outs   dx,DWORD PTR ds:[esi]
  41846a:	int    0x31
  41846c:	add    ecx,DWORD PTR [ebp+0x1efbf7cb]
  418472:	mov    dl,0x8
  418474:	stc    
  418475:	xor    DWORD PTR [esi],edx
  418477:	dec    esi
  418478:	push   edi
  418479:	pop    es
  41847a:	shl    BYTE PTR [eax],1
  41847c:	inc    esp
  41847d:	ror    DWORD PTR [esi],cl
  41847f:	neg    DWORD PTR [eax+0x7]
  418482:	out    dx,eax
  418483:	pop    ds
  418484:	ds jecxz 0x418459
  418487:	and    eax,0x313862a0
  41848c:	repnz mov esi,cs
  41848f:	jno    0x41848e
  418491:	pop    edi
  418492:	iret   
  418493:	les    esp,FWORD PTR [eax]
  418495:	xor    dl,BYTE PTR [ecx+0x64d592a5]
  41849b:	repnz jmp 0x31ef:0x15b49098
  4184a3:	push   ecx
  4184a4:	mov    bh,0xea
  4184a6:	shr    cl,1
  4184a8:	mov    al,ds:0xc59d8e20
  4184ad:	ja     0x4184df
  4184af:	cdq    
  4184b0:	(bad)  
  4184b2:	mov    ebp,0xd1aab0e
  4184b7:	out    dx,eax
  4184b8:	cwde   
  4184b9:	and    eax,0xeb35b96
  4184be:	test   al,0xab
  4184c0:	mov    esp,0xf4a1d987
  4184c5:	xchg   BYTE PTR [eax+0x12],ah
  4184c8:	and    BYTE PTR [ebx-0x69182438],al
  4184ce:	jmp    0xb467:0xeab1426a
  4184d5:	dec    ecx
  4184d6:	add    dh,bl
  4184d8:	cmp    BYTE PTR [eax-0x6ad1878e],bh
  4184de:	hlt    
  4184df:	jo     0x418515
  4184e1:	jae    0x418463
  4184e3:	adc    eax,0x9d9814b4
  4184e8:	mov    ds:0x21cc7fea,al
  4184ed:	ds pusha 
  4184ef:	mov    cl,BYTE PTR [ebx+0x55]
  4184f2:	pop    ds
  4184f3:	leave  
  4184f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184f6:	in     eax,dx
  4184f7:	or     ebp,DWORD PTR [ecx]
  4184f9:	fsubr  st,st(6)
  4184fb:	sar    DWORD PTR ds:0xa62a532b,cl
  418501:	pop    esi
  418502:	mov    WORD PTR [esi-0x3c],es
  418505:	out    0x85,al
  418507:	jl     0x418560
  418509:	fild   WORD PTR [esi+esi*1-0x7c]
  41850d:	dec    eax
  41850e:	jp     0x41853d
  418510:	pop    ds
  418511:	push   ds
  418512:	mov    edx,0x66e8bcf1
  418517:	pop    esi
  418518:	retf   
  418519:	push   ecx
  41851a:	in     al,0xc0
  41851c:	push   ecx
  41851d:	mov    ebp,0xb555dc39
  418522:	cld    
  418523:	fs pop esi
  418525:	das    
  418526:	fdiv   DWORD PTR [ecx+eiz*8-0x58]
  41852a:	dec    edi
  41852b:	cmp    DWORD PTR [eax-0x8],esi
  41852e:	dec    esp
  41852f:	loop   0x418529
  418531:	retf   
  418532:	xlat   BYTE PTR ds:[ebx]
  418533:	inc    ebp
  418534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418535:	jo     0x418531
  418537:	ret    0x4fb
  41853a:	mov    eax,0xc268b41e
  41853f:	fild   QWORD PTR [esi+0x617b96ac]
  418545:	stos   BYTE PTR es:[edi],al
  418546:	test   al,0xaa
  418548:	add    bh,0x2d
  41854b:	addr16 out 0xeb,eax
  41854e:	mov    al,0xd4
  418550:	sbb    BYTE PTR [ebp+eiz*2-0x2e7e3738],al
  418557:	pop    esp
  418558:	ror    BYTE PTR [edi],0xf7
  41855b:	or     BYTE PTR [eax],0xbd
  41855e:	repnz xchg ebx,eax
  418560:	push   esp
  418561:	cmp    edi,edx
  418563:	fdivr  DWORD PTR [ecx]
  418565:	xor    eax,0x64b86933
  41856a:	mov    ebp,0x7181c55a
  41856f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418570:	mov    dh,0x7e
  418572:	pop    es
  418573:	enter  0xc52e,0x6
  418577:	not    BYTE PTR [ebx-0x3c]
  41857a:	push   ss
  41857b:	loopne 0x4185a1
  41857d:	shr    BYTE PTR [edx-0x59],1
  418580:	mov    ebx,0x5c18acb3
  418585:	jmp    0xb6654bb5
  41858a:	dec    ebx
  41858b:	out    dx,eax
  41858c:	mov    dh,0x78
  41858e:	cli    
  41858f:	pop    edx
  418590:	mov    gs,WORD PTR [edx+ebx*4]
  418593:	adc    eax,0xd613ee1a
  418598:	xor    esp,DWORD PTR [esi-0x211715c1]
  41859e:	cmp    cl,BYTE PTR [ecx+eax*8+0x0]
  4185a2:	or     al,0xf1
  4185a4:	mov    BYTE PTR [esi-0x27],ch
  4185a7:	and    DWORD PTR [edi-0x53],ecx
  4185aa:	stc    
  4185ab:	jnp    0x4185c6
  4185ad:	aam    0xb7
  4185af:	pop    ecx
  4185b0:	aad    0xe6
  4185b2:	push   ss
  4185b3:	or     BYTE PTR [edi],bl
  4185b5:	cdq    
  4185b6:	or     eax,0x9233fa5b
  4185bb:	stos   BYTE PTR es:[edi],al
  4185bc:	cmp    esp,DWORD PTR [ecx+0x4c78260f]
  4185c2:	loopne 0x4185f9
  4185c4:	pop    ebp
  4185c5:	pop    ebp
  4185c6:	(bad)  
  4185c7:	data16 mov ds:0xc2475004,al
  4185cd:	jg     0x418561
  4185cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185d0:	out    dx,eax
  4185d1:	mov    WORD PTR [esi],?
  4185d3:	in     eax,0x48
  4185d5:	or     BYTE PTR [edx],dl
  4185d7:	fld    TBYTE PTR [ecx-0x60]
  4185da:	add    DWORD PTR [ecx],ebp
  4185dc:	int    0x6c
  4185de:	dec    ebp
  4185df:	sub    dh,bl
  4185e1:	aas    
  4185e2:	push   0x19
  4185e4:	pop    ebx
  4185e5:	xchg   ebx,eax
  4185e6:	out    dx,al
  4185e7:	(bad)  
  4185e8:	and    eax,0xc870989b
  4185ed:	ss mov ecx,0xbfdec7e6
  4185f3:	push   ebp
  4185f4:	jmp    0x41859d
  4185f6:	stos   DWORD PTR es:[edi],eax
  4185f7:	test   al,0x5a
  4185f9:	lahf   
  4185fa:	gs loop 0x4185ed
  4185fd:	rcr    DWORD PTR [ecx-0x5968aef2],1
  418603:	pop    ss
  418604:	ret    
  418605:	out    dx,eax
  418606:	in     al,dx
  418607:	clc    
  418608:	repnz or BYTE PTR [edx],dl
  41860b:	push   ebp
  41860c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41860d:	outs   dx,DWORD PTR ds:[esi]
  41860e:	lods   eax,DWORD PTR ds:[esi]
  41860f:	sbb    ebx,DWORD PTR [bx+si+0x31b3]
  418614:	sbb    BYTE PTR [eax+0x2ab7e849],0xfe
  41861b:	pop    eax
  41861c:	xchg   ebx,eax
  41861d:	stos   BYTE PTR es:[edi],al
  41861e:	aam    0xf8
  418620:	out    0x4e,eax
  418622:	lahf   
  418623:	sbb    DWORD PTR [ecx],eax
  418625:	jle    0x41863a
  418627:	dec    edi
  418628:	pop    ds
  418629:	js     0x4185f4
  41862b:	sbb    eax,0x1a323b17
  418630:	out    0xe9,al
  418632:	rcr    bh,cl
  418634:	and    ebx,esi
  418636:	jnp    0x4185ec
  418638:	pop    edi
  418639:	test   esi,edx
  41863b:	dec    edx
  41863c:	(bad)  
  41863d:	in     eax,0x78
  41863f:	push   ecx
  418640:	mov    al,ds:0x21439bd4
  418645:	and    dh,dh
  418647:	push   0xf5cca42d
  41864c:	into   
  41864d:	cld    
  41864e:	mov    cl,0x60
  418650:	pop    ss
  418651:	mov    ch,0xf3
  418653:	ja     0x418684
  418655:	retf   0xa7a5
  418658:	inc    eax
  418659:	sbb    dh,cl
  41865b:	inc    esp
  41865c:	push   ecx
  41865d:	icebp  
  41865e:	lea    edx,fs:0xb3b554a4
  418665:	nop
  418666:	leave  
  418667:	or     cl,ch
  418669:	jns    0x4185ff
  41866b:	inc    esp
  41866c:	xor    al,0xa2
  41866e:	outs   dx,DWORD PTR ds:[esi]
  41866f:	and    eax,0xce096e11
  418674:	std    
  418675:	mov    dh,0x1c
  418677:	call   0x385788b5
  41867c:	les    edx,FWORD PTR [edi]
  41867e:	dec    ebp
  41867f:	pop    ecx
  418680:	jecxz  0x4186d6
  418682:	fcom   DWORD PTR [edi-0x70a691bb]
  418688:	inc    esp
  418689:	sbb    cl,bl
  41868b:	jmp    0x418611
  41868d:	test   DWORD PTR [edx-0x54be9b04],esi
  418693:	outs   dx,DWORD PTR ds:[esi]
  418694:	cmp    bh,BYTE PTR [edi-0x23]
  418697:	pop    ss
  418698:	dec    esp
  418699:	push   es
  41869a:	push   esp
  41869b:	int    0xc
  41869d:	popf   
  41869e:	push   es
  41869f:	push   ds
  4186a0:	inc    DWORD PTR [edi+0x49fbda3f]
  4186a6:	idiv   DWORD PTR [ecx+0xf]
  4186a9:	mov    ah,0xfb
  4186ab:	jb     0x418718
  4186ad:	sbb    bl,BYTE PTR [ebx+0x79808119]
  4186b3:	pop    edi
  4186b4:	mov    ebx,0xe0430826
  4186b9:	in     eax,0xae
  4186bb:	dec    ebp
  4186bc:	push   ss
  4186bd:	repnz retf 
  4186bf:	bound  ecx,QWORD PTR [edi-0x79]
  4186c2:	test   al,0xac
  4186c4:	call   0xcc6c:0x1c023fa4
  4186cb:	xor    DWORD PTR ds:0xc257aa24,0x22680af7
  4186d5:	jle    0x4186ac
  4186d7:	sahf   
  4186d8:	xor    DWORD PTR [ebx+0x34],esp
  4186db:	scas   al,BYTE PTR es:[edi]
  4186dc:	ins    DWORD PTR es:[edi],dx
  4186dd:	fisttp WORD PTR [ebp-0x4b07d926]
  4186e3:	(bad)  
  4186e4:	sub    al,0x61
  4186e6:	dec    edx
  4186e7:	xchg   ebx,eax
  4186e8:	popa   
  4186e9:	rcl    BYTE PTR [ecx],1
  4186eb:	inc    edx
  4186ec:	scas   eax,DWORD PTR es:[edi]
  4186ed:	pop    ss
  4186ee:	fiadd  DWORD PTR fs:[ebp-0x34]
  4186f2:	ffree  st(0)
  4186f4:	mov    ebx,0x8b5b9f71
  4186f9:	daa    
  4186fa:	enter  0x8de2,0xb7
  4186fe:	push   cs
  4186ff:	jl     0x4186e8
  418701:	push   esi
  418702:	jo     0x4186d7
  418704:	(bad)  
  418705:	jae    0x418748
  418707:	scas   eax,DWORD PTR es:[edi]
  418708:	xor    edx,eax
  41870a:	lea    edx,[edx+ebx*1+0x3272e0]
  418711:	mov    DWORD PTR [ebp-0xc],edx
  418714:	mov    edx,DWORD PTR [ebp-0x10]
  418717:	xor    edx,eax
  418719:	add    edx,esi
  41871b:	jne    0x40f646
  418721:	jmp    0x41abbe
  418726:	mov    ecx,DWORD PTR [ebp-0x14]
  418729:	mov    DWORD PTR [ebp+0x8],ecx
  41872c:	jmp    0x4187a5
  418731:	mov    ecx,DWORD PTR [ebp+0x8]
  418734:	mov    edx,DWORD PTR [ebp-0x8]
  418737:	xor    ecx,eax
  418739:	xor    edx,eax
  41873b:	sub    ecx,edx
  41873d:	sub    ecx,esi
  41873f:	xor    ecx,eax
  418741:	mov    DWORD PTR [ebp+0x8],ecx
  418744:	mov    ecx,DWORD PTR [ebp+0x8]
  418747:	mov    edx,DWORD PTR [ebp-0x58]
  41874a:	add    ecx,0x5708f8
  418750:	imul   ecx,edx
  418753:	mov    DWORD PTR [ebp-0x58],ecx
  418756:	mov    ecx,DWORD PTR [ebp+0x8]
  418759:	mov    edx,DWORD PTR [ebp-0x54]
  41875c:	add    ecx,0x64f8da
  418762:	or     ecx,edx
  418764:	mov    DWORD PTR [ebp-0x54],ecx
  418767:	mov    ecx,DWORD PTR [ebp+0x8]
  41876a:	mov    edx,DWORD PTR [ebp-0x50]
  41876d:	add    ecx,0x242ebed
  418773:	xor    ecx,edx
  418775:	mov    DWORD PTR [ebp-0x50],ecx
  418778:	mov    ecx,DWORD PTR [ebp+0x8]
  41877b:	mov    edx,DWORD PTR [ebp-0x4c]
  41877e:	add    ecx,edi
  418780:	and    ecx,edx
  418782:	mov    DWORD PTR [ebp-0x4c],ecx
  418785:	mov    ecx,DWORD PTR [ebp+0x8]
  418788:	mov    edx,DWORD PTR [ebp-0x48]
  41878b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  418792:	mov    DWORD PTR [ebp-0x48],ecx
  418795:	mov    ecx,DWORD PTR [ebp+0x8]
  418798:	mov    edx,0xfa5e15e2
  41879d:	sub    edx,ecx
  41879f:	add    edx,DWORD PTR [ebp-0x44]
  4187a2:	mov    DWORD PTR [ebp-0x44],edx
  4187a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4187a8:	xor    ecx,eax
  4187aa:	add    ecx,esi
  4187ac:	jne    0x418731
  4187b2:	jmp    0x41abca
  4187b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4187ba:	mov    edx,DWORD PTR [ebp-0x8]
  4187bd:	xor    ecx,eax
  4187bf:	xor    edx,eax
  4187c1:	sub    ecx,edx
  4187c3:	sub    ecx,esi
  4187c5:	xor    ecx,eax
  4187c7:	mov    DWORD PTR [ebp+0x8],ecx
  4187ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4187cd:	mov    edx,DWORD PTR [ebp-0x58]
  4187d0:	jmp    0x41ab56
  4187d5:	sub    eax,0x97a551eb
  4187da:	fwait
  4187db:	lods   eax,DWORD PTR ds:[esi]
  4187dc:	fistp  DWORD PTR [edx]
  4187de:	pop    ecx
  4187df:	imul   DWORD PTR [ecx]
  4187e1:	add    edx,DWORD PTR [edx]
  4187e3:	mov    dl,BYTE PTR [edi-0x15]
  4187e6:	xor    al,0x79
  4187e8:	jp     0x4187eb
  4187ea:	pop    edi
  4187eb:	jp     0x418867
  4187ed:	int3   
  4187ee:	fnstsw WORD PTR [eax]
  4187f0:	pop    esi
  4187f1:	(bad)  
  4187f2:	xlat   BYTE PTR ds:[ebx]
  4187f3:	jb     0x418868
  4187f5:	xor    ecx,DWORD PTR [esi+0x72]
  4187f8:	popf   
  4187f9:	lods   al,BYTE PTR ds:[esi]
  4187fa:	xor    dl,ah
  4187fc:	xchg   esp,eax
  4187fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187fe:	or     edi,0x4744714a
  418804:	fdiv   st(6),st
  418806:	fucomi st,st(7)
  418808:	push   edx
  418809:	sub    eax,0x8a7de40e
  41880e:	xor    al,0xbd
  418810:	push   ds
  418811:	cmc    
  418812:	pop    edi
  418813:	and    al,0xb
  418815:	int    0x33
  418817:	inc    edi
  418818:	arpl   WORD PTR [esi],cx
  41881a:	sahf   
  41881b:	stos   DWORD PTR es:[edi],eax
  41881c:	fwait
  41881d:	repz jecxz 0x41887d
  418820:	adc    ah,BYTE PTR [esi-0x28]
  418823:	xchg   esp,eax
  418824:	push   esi
  418825:	or     ebx,ebp
  418827:	cld    
  418828:	popf   
  418829:	mov    bl,0x2b
  41882b:	inc    eax
  41882c:	jge    0x4187d6
  41882e:	mov    bl,0x75
  418830:	jge    0x4187ea
  418832:	push   0xfffffff2
  418834:	rol    edx,1
  418836:	addr16 ds cs jp 0x41887f
  41883b:	cmp    BYTE PTR [edi+0x11430727],cl
  418841:	jl     0x418805
  418843:	xor    al,0x98
  418845:	add    bh,al
  418847:	pop    esi
  418848:	pusha  
  418849:	cld    
  41884a:	push   cs
  41884b:	cld    
  41884c:	pop    ss
  41884d:	jns    0x4188ad
  41884f:	fs push ss
  418851:	mov    esp,0x825a5a63
  418856:	mov    WORD PTR [edx-0x17],ss
  418859:	lds    edx,FWORD PTR [eax+eax*4]
  41885c:	push   edx
  41885d:	mov    ch,BYTE PTR [ecx]
  41885f:	loop   0x41885d
  418861:	fwait
  418862:	or     eax,DWORD PTR [ebp+0x11]
  418865:	push   edi
  418866:	sti    
  418867:	mov    ecx,0x2d5bb503
  41886c:	mov    ah,BYTE PTR [eax+0x1822e118]
  418872:	(bad)  
  418873:	pusha  
  418874:	adc    esi,DWORD PTR [ebp-0x6f0a7cdd]
  41887a:	and    eax,0x372b5b75
  41887f:	mov    bl,0xde
  418881:	xchg   ebx,eax
  418882:	retf   0x417c
  418885:	retf   
  418886:	lock cs cld 
  418889:	jo     0x41888a
  41888b:	ins    DWORD PTR es:[edi],dx
  41888c:	out    0x94,al
  41888e:	push   ebx
  41888f:	cmp    eax,0xa9e4adcc
  418894:	dec    eax
  418895:	xor    eax,0xb1d01185
  41889a:	(bad)  
  41889b:	aam    0x81
  41889d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41889e:	mov    cs,WORD PTR [ebp-0x6081ec46]
  4188a4:	daa    
  4188a5:	fwait
  4188a6:	inc    ecx
  4188a7:	mov    ebx,0x9d0ce699
  4188ac:	pusha  
  4188ad:	mov    ch,0x34
  4188af:	mov    dl,0x2b
  4188b1:	cdq    
  4188b2:	into   
  4188b3:	mov    DWORD PTR [edi-0x3c],esi
  4188b6:	clc    
  4188b7:	mov    ah,0x99
  4188b9:	in     al,0x3c
  4188bb:	cmp    DWORD PTR [ebx],ebx
  4188bd:	push   0x6e
  4188bf:	dec    ebx
  4188c0:	xlat   BYTE PTR ds:[ebx]
  4188c1:	ret    
  4188c2:	or     BYTE PTR [eax],0x3b
  4188c5:	mov    esp,0x827849a0
  4188ca:	cmp    ecx,edx
  4188cc:	das    
  4188cd:	sub    eax,0x241404c5
  4188d2:	push   edx
  4188d3:	iret   
  4188d4:	jmp    0xdbea9a33
  4188d9:	dec    esp
  4188da:	cmp    DWORD PTR [edi+0x1b],esi
  4188dd:	iret   
  4188de:	push   es
  4188df:	mov    BYTE PTR [eax-0x6a351e81],ah
  4188e5:	aad    0xf8
  4188e7:	(bad)  
  4188e8:	sbb    eax,0x56b1a469
  4188ed:	fsub   QWORD PTR [ecx-0x1c]
  4188f0:	scas   al,BYTE PTR es:[edi]
  4188f1:	(bad)  
  4188f2:	fcomip st,st(6)
  4188f4:	jge    0x41891e
  4188f6:	lods   eax,DWORD PTR ds:[esi]
  4188f7:	or     al,0x88
  4188f9:	data16 loop 0x4188f1
  4188fc:	ins    DWORD PTR es:[edi],dx
  4188fd:	test   eax,0x3a97d82f
  418902:	push   es
  418903:	jge    0x418896
  418905:	xor    edx,esp
  418907:	sahf   
  418908:	(bad)  
  418909:	sbb    eax,0x57e93417
  41890e:	pop    ecx
  41890f:	das    
  418910:	inc    esi
  418911:	mov    edi,0xd127e45e
  418916:	fcmovb st,st(0)
  418918:	jmp    0x46d0:0x6d035778
  41891f:	shl    DWORD PTR [edx-0xb],cl
  418922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418923:	(bad)  
  418924:	lds    esp,FWORD PTR [esp+esi*1-0x15]
  418928:	jns    0x418994
  41892a:	ins    BYTE PTR es:[edi],dx
  41892b:	leave  
  41892c:	xchg   ebx,eax
  41892d:	stos   DWORD PTR es:[edi],eax
  41892e:	sti    
  41892f:	lock xchg ebx,eax
  418931:	in     al,0x3
  418933:	pop    ebp
  418934:	xchg   edx,eax
  418935:	jne    0x41898d
  418937:	mov    cl,dl
  418939:	xor    BYTE PTR [eax+0x4341ac13],0x1a
  418940:	xchg   ebx,eax
  418941:	imul   edi,DWORD PTR [eax+0x3b12adfc],0x76
  418948:	lods   eax,DWORD PTR ds:[esi]
  418949:	or     cl,BYTE PTR [ecx+eiz*4+0x5a32da41]
  418950:	outs   dx,DWORD PTR ds:[esi]
  418951:	mov    ah,0x7e
  418953:	pop    esp
  418954:	dec    ecx
  418955:	and    bh,dl
  418957:	call   0x71abbbdf
  41895c:	xor    BYTE PTR [ecx],bh
  41895e:	pop    esp
  41895f:	or     dl,bl
  418961:	pop    edi
  418962:	cdq    
  418963:	and    eax,0x44ea9c96
  418968:	aaa    
  418969:	enter  0xe743,0x17
  41896d:	cli    
  41896e:	mov    edx,0x26802880
  418973:	xor    al,0xfa
  418975:	and    DWORD PTR [edi+0x4dba9589],edx
  41897b:	xchg   esi,eax
  41897c:	pop    ss
  41897d:	sub    BYTE PTR ds:0x87ad9213,dl
  418983:	int3   
  418984:	mov    esp,0x606c16ec
  418989:	inc    ebx
  41898a:	jne    0x41891a
  41898c:	fisttp QWORD PTR [eax+0x11bb4258]
  418992:	mov    WORD PTR [esi-0x28],ds
  418995:	jne    0x4189b3
  418997:	cmp    DWORD PTR [esi+0x64],ebp
  41899a:	out    0x9b,al
  41899c:	clc    
  41899d:	dec    ebx
  41899e:	pop    ebx
  41899f:	jnp    0x41893c
  4189a1:	ficom  WORD PTR ds:0xf6eb6be
  4189a7:	pop    edi
  4189a8:	mul    DWORD PTR [ebx]
  4189aa:	stc    
  4189ab:	mov    DWORD PTR [esi+ecx*1-0x4535f9ff],eax
  4189b2:	cld    
  4189b3:	mov    bl,0xa0
  4189b5:	and    BYTE PTR [esi],bl
  4189b7:	cdq    
  4189b8:	or     al,0x63
  4189ba:	sbb    DWORD PTR [ebx+0x397ce814],edx
  4189c0:	mov    bl,bl
  4189c2:	xchg   ecx,eax
  4189c3:	jae    0x41899c
  4189c5:	dec    ecx
  4189c6:	jecxz  0x4189fb
  4189c8:	push   ds
  4189c9:	adc    DWORD PTR [edi],esp
  4189cb:	inc    ecx
  4189cc:	mov    eax,0x5741fbda
  4189d1:	scas   al,BYTE PTR es:[edi]
  4189d2:	xchg   edi,eax
  4189d3:	fbstp  TBYTE PTR [ecx+0x32069211]
  4189d9:	mov    ds:0x1da44dd4,al
  4189de:	not    BYTE PTR [esp+ebx*4-0x5bfe057a]
  4189e5:	mov    ds:0x5dfd1bd3,al
  4189ea:	mov    ?,WORD PTR [ebx+0x35c5bcd2]
  4189f0:	pushf  
  4189f1:	leave  
  4189f2:	sets   BYTE PTR [esi+0x38]
  4189f6:	push   es
  4189f7:	pusha  
  4189f8:	shl    DWORD PTR [edx-0x18],cl
  4189fb:	xchg   edx,eax
  4189fc:	fcomp  DWORD PTR [ecx+0x19]
  4189ff:	ja     0x4189ff
  418a01:	out    dx,eax
  418a02:	pop    ebx
  418a03:	xor    bl,cl
  418a05:	and    DWORD PTR [ebp+0x61],ebx
  418a08:	pop    edx
  418a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a0a:	sti    
  418a0b:	fadd   QWORD PTR [edx]
  418a0d:	rol    BYTE PTR [esi+edx*4+0x28922849],1
  418a14:	cmp    DWORD PTR [esi-0x3e2b708d],edi
  418a1a:	retf   0x4b46
  418a1d:	xchg   esp,eax
  418a1e:	pop    edi
  418a1f:	push   edi
  418a20:	inc    BYTE PTR [ebp+0xf91ad30]
  418a26:	pop    ebx
  418a27:	sbb    DWORD PTR [edx-0x5477d99b],esp
  418a2d:	shl    DWORD PTR ds:0xdae3de19,0xf3
  418a34:	jg     0x418a3b
  418a36:	ror    BYTE PTR [ecx+0x2d3f0df1],cl
  418a3c:	xchg   ebp,eax
  418a3d:	repz jb 0x418a81
  418a40:	cs sbb dh,dl
  418a43:	mov    ebp,0xefa16e7e
  418a48:	sub    al,0xff
  418a4a:	loopne 0x418a7b
  418a4c:	adc    esi,0x22
  418a4f:	or     DWORD PTR [edx],ecx
  418a51:	or     al,0x91
  418a53:	pusha  
  418a54:	loop   0x4189f2
  418a56:	dec    ebp
  418a57:	cli    
  418a58:	or     DWORD PTR [edi+0x3394ca2d],eax
  418a5e:	or     DWORD PTR [esi+0x3e],0xf3b7d342
  418a65:	inc    esi
  418a66:	fcom   QWORD PTR [edi]
  418a68:	xchg   ecx,eax
  418a69:	(bad)  
  418a6a:	repnz add bl,BYTE PTR ds:0xaa7c8922
  418a71:	xchg   BYTE PTR [edi+ebx*1+0x6fc6e11c],al
  418a78:	sar    BYTE PTR [ecx-0x27d7cd6b],1
  418a7e:	in     al,0xae
  418a80:	xchg   DWORD PTR [ecx-0x1b],edx
  418a83:	cli    
  418a84:	leave  
  418a85:	scas   al,BYTE PTR es:[edi]
  418a86:	add    eax,0x830dfac4
  418a8b:	mov    esp,0x1205c5b3
  418a90:	jge    0x418a89
  418a92:	or     BYTE PTR [eax+edx*1+0x4c0d8564],bh
  418a99:	and    ch,0xf9
  418a9c:	add    al,0x7c
  418a9e:	aas    
  418a9f:	xchg   BYTE PTR [edi+0x1c9c3c0d],dl
  418aa5:	jb     0x418a78
  418aa7:	gs or  cl,0xcf
  418aab:	mov    dl,0x2f
  418aad:	mov    ch,0xc3
  418aaf:	jecxz  0x418b1f
  418ab1:	sti    
  418ab2:	fcmove st,st(7)
  418ab4:	aas    
  418ab5:	jns    0x418a42
  418ab7:	mov    dl,0x8d
  418ab9:	test   al,0x99
  418abb:	adc    ch,BYTE PTR ds:[esi+eax*8-0x682d707d]
  418ac3:	sahf   
  418ac4:	mov    al,ds:0x1d82149a
  418ac9:	add    al,0x8d
  418acb:	mov    ebp,0x1fb8c0a4
  418ad0:	dec    ebx
  418ad1:	and    eax,0x9d1c246e
  418ad6:	or     al,0x5f
  418ad8:	arpl   WORD PTR [edx+eax*1+0x34eca7ff],ax
  418adf:	stos   DWORD PTR es:[edi],eax
  418ae0:	push   cs
  418ae1:	lahf   
  418ae2:	cmp    DWORD PTR [ebx+0x48],esp
  418ae5:	clc    
  418ae6:	fsubr  DWORD PTR [ebx+0x59]
  418ae9:	mov    bh,0xf
  418aeb:	mov    BYTE PTR [ecx+0x23],ch
  418aee:	fbstp  TBYTE PTR [edi-0x58]
  418af1:	dec    eax
  418af2:	icebp  
  418af3:	or     eax,0xa199c790
  418af8:	mov    es,edx
  418afa:	scas   al,BYTE PTR es:[edi]
  418afb:	ror    BYTE PTR [eax+0x79c9c6d3],1
  418b01:	(bad)  
  418b02:	icebp  
  418b03:	outs   dx,BYTE PTR ds:[esi]
  418b04:	fild   WORD PTR [ecx]
  418b06:	mov    ah,0x99
  418b08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b09:	aam    0xc8
  418b0b:	in     al,dx
  418b0c:	and    BYTE PTR [eax+ebp*1-0x256b3705],ch
  418b13:	ja     0x418b7d
  418b15:	aas    
  418b16:	jnp    0x418ae8
  418b18:	push   DWORD PTR [ecx]
  418b1a:	mov    ebp,0xe546c11
  418b1f:	xor    DWORD PTR [ebx],0xc37e4094
  418b25:	jbe    0x418b76
  418b27:	dec    ecx
  418b28:	je     0x418b05
  418b2a:	lods   eax,DWORD PTR ds:[esi]
  418b2b:	or     ah,bl
  418b2d:	sbb    eax,0x16bc2c66
  418b32:	shr    DWORD PTR [edi],cl
  418b34:	ds stos BYTE PTR es:[edi],al
  418b36:	jbe    0x418b89
  418b38:	add    ecx,DWORD PTR [edi-0x5d]
  418b3b:	mov    DWORD PTR [ecx+0x3a7dcffd],ecx
  418b41:	in     eax,dx
  418b42:	sbb    DWORD PTR [ecx],0xb5881cde
  418b48:	pop    esi
  418b49:	cmc    
  418b4a:	mov    DWORD PTR [ecx+ecx*4],0x770a05b1
  418b51:	arpl   WORD PTR [edx],ax
  418b53:	arpl   WORD PTR [ebx+0x257bdfe8],dx
  418b59:	(bad)  
  418b5a:	jne    0x418af7
  418b5c:	xlat   BYTE PTR ds:[ebx]
  418b5d:	mov    eax,ds:0x708ade38
  418b62:	jns    0x418b4b
  418b64:	neg    BYTE PTR [ecx+0x2fcb703b]
  418b6a:	and    esi,DWORD PTR [eax+0x21690cc4]
  418b70:	and    eax,0xe66f8f73
  418b75:	sbb    ecx,DWORD PTR [esi]
  418b77:	rcl    DWORD PTR [ebp+0x21],cl
  418b7a:	aad    0x41
  418b7c:	repz jbe 0x418b6c
  418b7f:	fwait
  418b80:	dec    eax
  418b81:	cdq    
  418b82:	jecxz  0x418b64
  418b84:	dec    esi
  418b85:	xchg   ecx,eax
  418b86:	push   ss
  418b87:	out    0xf,eax
  418b89:	jmp    0x418b9e
  418b8b:	dec    ebx
  418b8c:	ret    
  418b8d:	pop    es
  418b8e:	mov    dh,0x1c
  418b90:	fcmovnbe st,st(4)
  418b92:	jle    0x418b65
  418b94:	fnstenv ds:0x9e4bf7df
  418b9a:	loop   0x418c11
  418b9c:	mov    al,ds:0x47ebd7d4
  418ba1:	add    al,0xe
  418ba3:	sar    BYTE PTR ds:0xf105682,1
  418ba9:	inc    ecx
  418baa:	retf   
  418bab:	pxor   mm7,mm1
  418bae:	inc    esp
  418baf:	out    0x20,eax
  418bb1:	inc    esi
  418bb2:	mov    WORD PTR [edx],es
  418bb4:	inc    eax
  418bb5:	ret    0x4c5c
  418bb8:	sbb    BYTE PTR [edi-0x1c19d83d],dl
  418bbe:	cwde   
  418bbf:	mov    bl,0xda
  418bc1:	ss in  eax,0x3a
  418bc4:	jns    0x418b73
  418bc6:	pop    es
  418bc7:	jae    0x418c11
  418bc9:	cld    
  418bca:	sbb    BYTE PTR ds:0x99229dd,cl
  418bd0:	es repnz fs and edx,ebx
  418bd5:	dec    esp
  418bd6:	int    0x1c
  418bd8:	loope  0x418c33
  418bda:	xchg   edi,eax
  418bdb:	sub    al,0x8b
  418bdd:	and    al,0xaf
  418bdf:	hlt    
  418be0:	or     edx,ecx
  418be2:	jnp    0x418c28
  418be4:	call   0xd42f:0xb6cb2855
  418beb:	mov    bh,0x8d
  418bed:	add    esi,ebx
  418bef:	retf   0x26dc
  418bf2:	(bad)  
  418bf3:	lock in eax,0x54
  418bf6:	(bad)  
  418bf7:	sub    DWORD PTR ds:0x94d74517,esp
  418bfd:	pop    edi
  418bfe:	inc    esp
  418bff:	lock inc eax
  418c01:	fwait
  418c02:	or     al,0x14
  418c04:	iret   
  418c05:	or     edx,DWORD PTR [eax+0x40]
  418c08:	push   es
  418c09:	test   eax,0xf43392b5
  418c0e:	outs   dx,BYTE PTR ds:[esi]
  418c0f:	int    0xe3
  418c11:	sub    dl,BYTE PTR [ecx+0x7dbf82e6]
  418c17:	retf   
  418c18:	mov    ecx,0xec1ba0be
  418c1d:	int3   
  418c1e:	gs mov bl,0xa3
  418c21:	cmp    esi,DWORD PTR [ecx+0x2f419661]
  418c27:	push   ebp
  418c28:	cli    
  418c29:	sar    BYTE PTR [eax-0x52],1
  418c2c:	mov    ebp,0x3d004df2
  418c31:	xor    BYTE PTR [ecx-0x15],ch
  418c34:	hlt    
  418c35:	sub    eax,0xe8eeb2e6
  418c3a:	pop    ecx
  418c3b:	sbb    eax,0x9d114780
  418c40:	icebp  
  418c41:	xchg   ebx,eax
  418c42:	and    esi,DWORD PTR [edx-0x19bfb6af]
  418c48:	stos   BYTE PTR es:[edi],al
  418c49:	cdq    
  418c4a:	jbe    0x418c2e
  418c4c:	push   ebp
  418c4d:	sub    ebx,DWORD PTR [edx-0x40]
  418c50:	popa   
  418c51:	dec    ebp
  418c52:	push   eax
  418c53:	fisubr WORD PTR [edi-0x51]
  418c56:	rcl    DWORD PTR [ebp+0x55],0xe1
  418c5a:	out    dx,eax
  418c5b:	leave  
  418c5c:	xor    al,BYTE PTR [edi+0x2db80db5]
  418c62:	jbe    0x418c3c
  418c64:	jge    0x418bec
  418c66:	js     0x418c52
  418c68:	jmp    0x418bee
  418c6a:	in     al,0x2d
  418c6c:	lahf   
  418c6d:	xor    eax,0x3bca4e58
  418c72:	inc    ebp
  418c73:	adc    al,0xc3
  418c75:	es pusha 
  418c77:	mov    bh,0xa5
  418c79:	mov    es,WORD PTR [ebp-0x9]
  418c7c:	ins    DWORD PTR es:[edi],dx
  418c7d:	ds jmp 0x418c67
  418c80:	mov    dh,ah
  418c82:	popf   
  418c83:	mov    ds:0xc61c7d12,eax
  418c88:	inc    edx
  418c89:	add    BYTE PTR [ebp+0x2c],cl
  418c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c8d:	push   ecx
  418c8e:	pop    ecx
  418c8f:	pusha  
  418c90:	(bad)  
  418c91:	leave  
  418c92:	test   al,cl
  418c94:	les    ebp,FWORD PTR [edx]
  418c96:	adc    al,0x7a
  418c98:	mov    eax,ebx
  418c9a:	sti    
  418c9b:	enter  0xdd9c,0xb2
  418c9f:	ins    DWORD PTR es:[edi],dx
  418ca0:	dec    esi
  418ca1:	mov    ebp,0x56043cf0
  418ca6:	sahf   
  418ca7:	jo     0x418cad
  418ca9:	in     eax,0x84
  418cab:	fcmove st,st(0)
  418cad:	push   0xf2537812
  418cb2:	xchg   ebp,eax
  418cb3:	sub    al,0xd2
  418cb5:	adc    al,0x21
  418cb7:	in     al,0x3b
  418cb9:	in     al,dx
  418cba:	imul   esi,DWORD PTR [eax+0x2a32c21b],0xffffffd4
  418cc1:	mov    ds,WORD PTR [edx-0x7e75e74]
  418cc7:	in     al,0x58
  418cc9:	shl    BYTE PTR [eax+0x10],1
  418ccc:	(bad)  
  418ccd:	and    BYTE PTR [eax-0x70],ah
  418cd0:	xor    ecx,edx
  418cd2:	inc    ecx
  418cd3:	xlat   BYTE PTR ds:[ebx]
  418cd4:	mov    ebp,DWORD PTR [eax]
  418cd6:	jecxz  0x418d53
  418cd8:	pop    ebp
  418cd9:	xchg   esi,eax
  418cda:	adc    DWORD PTR [ecx+0x1ee3300c],esp
  418ce0:	dec    ebp
  418ce1:	pop    edx
  418ce2:	shl    DWORD PTR [esi+0x6cf37fe6],0xf
  418ce9:	aam    0x8c
  418ceb:	mov    al,ds:0xb37396c
  418cf0:	push   ds
  418cf1:	mov    cl,0xb5
  418cf3:	push   0xa78a540e
  418cf8:	push   0xffffff9d
  418cfa:	or     al,0x4
  418cfc:	sub    DWORD PTR [ecx],esp
  418cfe:	fucomi st,st(4)
  418d00:	add    BYTE PTR [edx+edi*2],cl
  418d03:	xchg   edi,eax
  418d04:	iret   
  418d05:	sti    
  418d06:	sub    al,0xab
  418d08:	and    al,0x1b
  418d0a:	sbb    eax,0x4114e7de
  418d0f:	sbb    esp,DWORD PTR [ebx+eax*8]
  418d12:	jle    0x418cb9
  418d14:	cdq    
  418d15:	mov    eax,ds:0x910ffe90
  418d1a:	inc    esp
  418d1b:	mov    DWORD PTR [edx],ebp
  418d1d:	bnd call 0xb4ebbe23
  418d23:	out    0x7a,eax
  418d25:	aas    
  418d26:	out    dx,al
  418d27:	int    0xe5
  418d29:	fnstsw WORD PTR [ecx+0x76]
  418d2c:	inc    ecx
  418d2d:	jae    0x418cbe
  418d2f:	int    0x2f
  418d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d32:	lods   eax,DWORD PTR ds:[esi]
  418d33:	cmp    ch,0x44
  418d36:	mov    esp,0x7adef812
  418d3b:	sub    BYTE PTR [eax+0x1e],bl
  418d3e:	xchg   ebp,eax
  418d3f:	js     0x418d6d
  418d41:	cdq    
  418d42:	inc    ecx
  418d43:	aam    0xb
  418d45:	imul   ebx,DWORD PTR [eax+0x7f],0xfffffff3
  418d49:	pop    es
  418d4a:	xor    ebp,DWORD PTR [eax+esi*4-0x5ffa4ca2]
  418d51:	mov    ecx,gs
  418d53:	xchg   ecx,eax
  418d54:	xchg   ebx,eax
  418d55:	ins    DWORD PTR es:[edi],dx
  418d56:	xor    ah,bl
  418d58:	push   esi
  418d59:	stos   BYTE PTR es:[edi],al
  418d5a:	cwde   
  418d5b:	push   eax
  418d5c:	clc    
  418d5d:	fcom   DWORD PTR [ecx-0x24ec14d]
  418d63:	popf   
  418d64:	cmp    ah,0x30
  418d67:	bound  ebx,QWORD PTR [ebx+ebx*2-0x8]
  418d6b:	sub    eax,DWORD PTR [eax]
  418d6d:	shl    BYTE PTR [edx],0xe7
  418d70:	jmp    0x418d20
  418d72:	dec    esi
  418d73:	clc    
  418d74:	pop    ebx
  418d75:	xor    eax,0xacd4f531
  418d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d7b:	mov    ds:0x3680daf1,eax
  418d80:	lea    edx,[ebx-0x1e2f9e17]
  418d86:	hlt    
  418d87:	dec    edi
  418d88:	xchg   ebx,eax
  418d89:	push   edx
  418d8a:	stos   BYTE PTR es:[edi],al
  418d8b:	adc    bh,BYTE PTR [esp+ebx*4+0x458f641a]
  418d92:	dec    esi
  418d93:	dec    edx
  418d94:	test   esi,ecx
  418d96:	fsubr  QWORD PTR [edx-0x5dd1640]
  418d9c:	sbb    eax,0x19e5dec6
  418da1:	test   al,0x91
  418da3:	jno    0x418da7
  418da5:	ja     0x418d8a
  418da7:	icebp  
  418da8:	test   al,0xc0
  418daa:	icebp  
  418dab:	pop    edi
  418dac:	ds cwde 
  418dae:	push   edx
  418daf:	xchg   ecx,eax
  418db0:	bnd jmp 0x418e0e
  418db3:	scas   al,BYTE PTR es:[edi]
  418db4:	inc    edi
  418db5:	fidivr WORD PTR [ecx]
  418db7:	in     eax,0xd9
  418db9:	retf   
  418dba:	leave  
  418dbb:	ss scas eax,DWORD PTR es:[edi]
  418dbd:	push   eax
  418dbe:	les    eax,FWORD PTR [esi-0x2e]
  418dc1:	ins    DWORD PTR es:[edi],dx
  418dc2:	pop    edx
  418dc3:	inc    edx
  418dc4:	stos   BYTE PTR es:[edi],al
  418dc5:	adc    ch,BYTE PTR [eax+0x52]
  418dc8:	addr16 pop edi
  418dca:	xlat   BYTE PTR ds:[ebx]
  418dcb:	mov    ecx,0xe6801c35
  418dd0:	(bad)  
  418dd1:	sar    bh,cl
  418dd3:	and    bh,al
  418dd5:	mov    edx,cs
  418dd7:	jnp    0x418d65
  418dd9:	xchg   BYTE PTR [eax-0x34],cl
  418ddc:	repz push 0x2f
  418ddf:	push   es
  418de0:	xchg   DWORD PTR [eax+eiz*2+0x70],edi
  418de4:	fimul  DWORD PTR [eax+eiz*1]
  418de7:	mov    ebx,0xc186066a
  418dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ded:	xor    bl,BYTE PTR [edi-0x60a76606]
  418df3:	mov    al,0x28
  418df5:	in     al,0xcc
  418df7:	xchg   BYTE PTR [ecx-0x63],cl
  418dfa:	(bad)  
  418dfb:	fstp   QWORD PTR [ebx-0x3f]
  418dfe:	inc    ebp
  418dff:	mov    ah,0x2e
  418e01:	cld    
  418e02:	aaa    
  418e03:	fldenv [esi+0x5da4d96f]
  418e09:	mov    bh,0x6
  418e0b:	call   0xa757e4b0
  418e10:	inc    esp
  418e11:	in     eax,dx
  418e12:	ss mov dh,0x45
  418e15:	xchg   BYTE PTR [esi+0x1ecd20ef],dl
  418e1b:	(bad)  
  418e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e1d:	jns    0x418e30
  418e1f:	loopne 0x418da1
  418e21:	xor    edi,ebx
  418e23:	dec    ebx
  418e24:	addr16 push ebx
  418e26:	je     0x418e85
  418e28:	pop    ds
  418e29:	ss (bad) 
  418e2b:	adc    DWORD PTR [ecx-0x37],edx
  418e2e:	mov    dl,0xf3
  418e30:	mov    ds:0x43f2f186,eax
  418e35:	dec    ecx
  418e36:	bound  edx,QWORD PTR [edi-0x34a2dd6b]
  418e3c:	fisttp WORD PTR [ebp-0x1744e4e2]
  418e42:	stos   BYTE PTR es:[edi],al
  418e43:	(bad)
  418e47:	xor    BYTE PTR ds:0x48512c32,0x1c
  418e4e:	popf   
  418e4f:	or     DWORD PTR [ecx],esp
  418e51:	mov    ecx,0x14affaf2
  418e56:	mov    dh,0x57
  418e58:	scas   eax,DWORD PTR es:[edi]
  418e59:	pop    ebx
  418e5a:	xchg   esi,eax
  418e5b:	add    ebx,ebx
  418e5d:	bound  edx,QWORD PTR [ecx+0x6dbe5a5]
  418e63:	or     BYTE PTR [eax+ebp*4-0x77],al
  418e67:	(bad)  
  418e68:	stc    
  418e69:	cdq    
  418e6a:	xchg   BYTE PTR [edx],ah
  418e6c:	fnsave [edi]
  418e6e:	xchg   ebx,eax
  418e6f:	inc    eax
  418e70:	(bad)  
  418e71:	ja     0x418df7
  418e73:	addr16 mov eax,es:0x2a94
  418e78:	pushf  
  418e79:	xchg   DWORD PTR [ecx-0x66876272],eax
  418e7f:	add    al,BYTE PTR [edi-0x7a]
  418e82:	inc    ebp
  418e83:	sar    BYTE PTR [ebp+0x37db6d96],cl
  418e89:	shl    DWORD PTR [edi-0x7319a95],cl
  418e8f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e91:	fsubr  DWORD PTR [esi]
  418e93:	mov    dl,0x5f
  418e95:	mov    bl,0x6
  418e97:	inc    ecx
  418e98:	pop    ss
  418e99:	pop    ds
  418e9a:	pop    eax
  418e9b:	xlat   BYTE PTR ss:[ebx]
  418e9d:	outs   dx,BYTE PTR ds:[esi]
  418e9e:	xor    ah,BYTE PTR [esi]
  418ea0:	push   0xffffffc6
  418ea2:	mov    ss,WORD PTR [edi]
  418ea4:	(bad)  
  418ea5:	xchg   ebx,eax
  418ea6:	leave  
  418ea7:	or     bl,ah
  418ea9:	(bad)  
  418eaa:	js     0x418e87
  418eac:	enter  0xc555,0x1d
  418eb0:	dec    esi
  418eb1:	mov    esp,esp
  418eb3:	fcomp  DWORD PTR [ebp+ebx*1+0x45]
  418eb7:	or     eax,0xa582c125
  418ebc:	cmc    
  418ebd:	iret   
  418ebe:	ds push ss
  418ec0:	xchg   ecx,eax
  418ec1:	cs jecxz 0x418f0e
  418ec4:	cmp    DWORD PTR [edx+0x35d41133],ebx
  418eca:	stos   DWORD PTR es:[edi],eax
  418ecb:	xor    DWORD PTR [ecx],edi
  418ecd:	mov    dh,0x2c
  418ecf:	add    eax,0x369ff851
  418ed4:	out    dx,al
  418ed5:	dec    edi
  418ed6:	(bad)  
  418ed7:	out    dx,eax
  418ed8:	jle    0x418ee4
  418eda:	sub    BYTE PTR [ecx],bl
  418edc:	mov    bl,0xc2
  418ede:	addr16 or al,0x6d
  418ee1:	xchg   esp,eax
  418ee2:	ja     0x418ed4
  418ee4:	data16 jae 0x418f0d
  418ee7:	in     al,0x40
  418ee9:	adc    BYTE PTR [ecx],dl
  418eeb:	dec    edx
  418eec:	and    al,0xad
  418eee:	lods   eax,DWORD PTR ds:[esi]
  418eef:	rol    ch,cl
  418ef1:	into   
  418ef2:	jmp    0xf941f22f
  418ef7:	push   ds
  418ef8:	mov    edx,0x723bf137
  418efd:	scas   al,BYTE PTR es:[edi]
  418efe:	fild   QWORD PTR [eax+0x5c]
  418f01:	test   BYTE PTR [esi+0x306bda0],0x14
  418f08:	jg     0x418f45
  418f0a:	mov    esp,0x2caee4fc
  418f0f:	inc    eax
  418f10:	test   BYTE PTR [edx],0x85
  418f13:	cs or  dh,BYTE PTR gs:[edx-0x4d]
  418f18:	in     eax,0x28
  418f1a:	aam    0x4f
  418f1c:	jnp    0x418f97
  418f1e:	or     bh,BYTE PTR [ebx-0x35d79f4c]
  418f24:	mov    dh,0x7d
  418f26:	dec    esp
  418f27:	in     al,dx
  418f28:	repnz aam 0x20
  418f2b:	pop    edi
  418f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f2d:	push   cs
  418f2e:	push   edx
  418f2f:	lea    edx,[edi-0x7d496235]
  418f35:	xchg   esp,eax
  418f36:	jl     0x418fa3
  418f38:	dec    ebx
  418f39:	pop    edx
  418f3a:	inc    ecx
  418f3b:	lahf   
  418f3c:	and    esi,DWORD PTR [esi+0x15]
  418f3f:	loope  0x418fa8
  418f41:	ins    DWORD PTR es:[edi],dx
  418f42:	or     al,0x66
  418f44:	mov    eax,0x72d910e5
  418f49:	lahf   
  418f4a:	push   esp
  418f4b:	inc    edx
  418f4c:	add    al,0x8
  418f4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f4f:	cs hlt 
  418f51:	sub    esp,DWORD PTR [esi-0x7d]
  418f54:	cdq    
  418f55:	in     al,dx
  418f56:	cwde   
  418f57:	iret   
  418f58:	pop    esi
  418f59:	mov    ecx,0x23377e9e
  418f5e:	pop    edi
  418f5f:	mov    ebp,0xce228ad5
  418f65:	xchg   ecx,eax
  418f66:	cmp    DWORD PTR [ecx+0x2e],esi
  418f69:	out    0x8f,eax
  418f6b:	cmp    DWORD PTR [esp+ebx*1+0x73],edi
  418f6f:	cmp    ah,BYTE PTR [edx+0x39]
  418f72:	add    al,0xa
  418f74:	jnp    0x418f4b
  418f76:	pusha  
  418f77:	fdiv   QWORD PTR [ebx-0x61]
  418f7a:	jnp    0x418f9a
  418f7c:	scas   eax,DWORD PTR es:[edi]
  418f7d:	mov    ebx,0x5eb60077
  418f82:	xor    DWORD PTR [esp+ebx*2+0x33],ebp
  418f86:	xchg   esp,eax
  418f87:	ins    DWORD PTR es:[edi],dx
  418f88:	neg    BYTE PTR [esi+edx*4+0x373cdba9]
  418f8f:	and    al,0xbd
  418f91:	mov    bl,0xec
  418f93:	adc    al,0x91
  418f95:	jecxz  0x418f1f
  418f97:	xor    al,0x3a
  418f99:	shl    DWORD PTR [ebp+0x0],1
  418f9c:	xor    al,0xe
  418f9e:	pop    ebx
  418f9f:	call   0x4523:0x8ff39a9b
  418fa6:	ret    
  418fa7:	or     edi,DWORD PTR [ecx+eax*2-0x14e3471e]
  418fae:	xchg   ecx,eax
  418faf:	push   ebp
  418fb0:	xchg   esi,eax
  418fb1:	pop    ds
  418fb2:	fwait
  418fb3:	(bad)  
  418fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fb5:	fwait
  418fb6:	pop    ds
  418fb7:	adc    BYTE PTR [ebx+edx*1],bh
  418fba:	popa   
  418fbb:	dec    edi
  418fbc:	test   BYTE PTR [edi+0x1],0x89
  418fc0:	mov    esp,0x41ac2ffc
  418fc5:	loopne 0x418f57
  418fc7:	ror    edx,1
  418fc9:	xchg   ebp,edi
  418fcb:	mov    WORD PTR [edi+0x8bc1c50],?
  418fd1:	sub    DWORD PTR [eax+ebp*2-0x3e],0x71
  418fd6:	loop   0x418ff6
  418fd8:	jle    0x41904c
  418fda:	mov    dl,0x56
  418fdc:	cmp    BYTE PTR [ebp+0x5f53ba97],cl
  418fe2:	mov    bl,0x28
  418fe4:	ret    
  418fe5:	xchg   ecx,eax
  418fe6:	jmp    0xd6b:0x58110890
  418fed:	jno    0x418fd0
  418fef:	mov    eax,0x4696abea
  418ff4:	(bad)  
  418ff5:	pop    ecx
  418ff6:	cld    
  418ff7:	aaa    
  418ff8:	dec    esi
  418ff9:	xor    DWORD PTR [edi+0x71],edi
  418ffc:	ins    DWORD PTR es:[edi],dx
  418ffd:	push   eax
  418ffe:	int3   
  418fff:	cs pusha 
  419001:	adc    esp,DWORD PTR [esi-0x59]
  419004:	je     0x419004
  419006:	rcl    DWORD PTR [eax+ecx*4],cl
  419009:	mov    esi,0x8552d097
  41900e:	mov    bl,0x3c
  419010:	cwde   
  419011:	mov    ds:0xc4b428ad,al
  419016:	rcr    DWORD PTR [edi-0x64b65124],1
  41901c:	mov    ah,0xbc
  41901e:	inc    ebp
  41901f:	xchg   edx,eax
  419020:	cs pop esi
  419022:	repz jp 0x418fc5
  419025:	cwde   
  419026:	call   0x5cfa67b0
  41902b:	ins    BYTE PTR es:[edi],dx
  41902c:	cmp    BYTE PTR [edi-0x175fb543],dl
  419032:	(bad)  fs:[eax-0x5fdb11e1]
  419039:	jp     0x418ff0
  41903b:	pop    ss
  41903c:	mov    bh,0xba
  41903e:	sub    ah,bl
  419040:	cmp    DWORD PTR [ecx+0x2c],ebx
  419043:	pop    ebx
  419044:	push   ebx
  419045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419046:	sbb    ch,bl
  419048:	mov    eax,DWORD PTR [ecx+esi*2+0x76a90d37]
  41904f:	xor    ebp,DWORD PTR [edx-0x14265261]
  419055:	mov    al,ds:0xbe69aa6e
  41905a:	into   
  41905b:	ss push esi
  41905d:	call   FWORD PTR ds:0xf53be060
  419063:	add    bl,BYTE PTR [edx-0x76]
  419066:	clc    
  419067:	test   BYTE PTR [edi],0x4f
  41906a:	imul   eax,DWORD PTR [ebp+ebp*8-0x14],0x418984f
  419072:	ret    0x657d
  419075:	sub    DWORD PTR [ebx],esi
  419077:	and    BYTE PTR [edi+0x6a],dl
  41907a:	xor    ebx,0xfffffff9
  41907d:	(bad)  
  41907e:	sbb    eax,0x6f5ee123
  419083:	data16 sbb al,0xe7
  419086:	pop    edx
  419087:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419089:	mov    ds:0xa3caad2d,eax
  41908e:	or     al,0x37
  419090:	in     eax,dx
  419091:	push   ss
  419092:	ret    0x7c6d
  419095:	adc    DWORD PTR [ebx+ebx*8+0x3f],0xfffffff5
  41909a:	fs (bad) 
  41909c:	sbb    ch,BYTE PTR [edx-0x57c6e943]
  4190a2:	test   ebx,eax
  4190a4:	lds    eax,FWORD PTR [ebp+0x428fb51f]
  4190aa:	push   cs
  4190ab:	mov    al,0x62
  4190ad:	jae    0x4190d0
  4190af:	(bad)  
  4190b0:	mov    cl,0x93
  4190b2:	leave  
  4190b3:	sbb    DWORD PTR [ebp-0x5cb67962],edx
  4190b9:	and    edi,0x58
  4190bc:	pop    ebx
  4190bd:	cmp    esi,DWORD PTR [ebx]
  4190bf:	call   0x75c8:0x48d41989
  4190c6:	sti    
  4190c7:	jb     0x4190c1
  4190c9:	push   ebp
  4190ca:	stc    
  4190cb:	inc    ecx
  4190cc:	inc    edi
  4190cd:	lods   al,BYTE PTR ds:[esi]
  4190ce:	jg     0x41909e
  4190d0:	clc    
  4190d1:	pop    edi
  4190d2:	sahf   
  4190d3:	test   eax,0x1685e8f5
  4190d8:	pop    eax
  4190d9:	sbb    al,0x82
  4190db:	mov    esi,0xc6a35036
  4190e0:	sbb    al,0xbb
  4190e2:	ret    0x3528
  4190e5:	pop    es
  4190e6:	iret   
  4190e7:	lods   al,BYTE PTR ds:[esi]
  4190e8:	rol    DWORD PTR [edi+0x51c96ca5],cl
  4190ee:	and    al,0x1
  4190f0:	(bad)  
  4190f1:	js     0x4190fb
  4190f3:	or     al,0xa2
  4190f5:	rep lods al,BYTE PTR ds:[esi]
  4190f7:	inc    eax
  4190f8:	test   eax,0x50980eba
  4190fd:	sub    ah,ah
  4190ff:	mov    al,0x67
  419101:	nop
  419102:	call   0xe5f96669
  419107:	shl    DWORD PTR [edi-0x53],0x6e
  41910b:	sbb    bh,ah
  41910d:	or     bl,BYTE PTR [ecx]
  41910f:	scas   al,BYTE PTR es:[edi]
  419110:	mov    al,BYTE PTR [ebp+0x1b64c7da]
  419116:	xchg   esp,eax
  419117:	lds    edi,FWORD PTR [ebp+0x38]
  41911a:	cdq    
  41911b:	pushf  
  41911c:	or     al,0x26
  41911e:	fisttp QWORD PTR [eax]
  419120:	and    BYTE PTR [eax-0x62],ah
  419123:	pop    edx
  419124:	jl     0x41917e
  419126:	and    eax,0xa3406a11
  41912b:	jo     0x41910e
  41912d:	push   es
  41912e:	cs dec ebx
  419130:	xor    edi,DWORD PTR [ebp+0x57]
  419133:	pop    ecx
  419134:	cwde   
  419135:	es cdq 
  419137:	sub    dl,BYTE PTR [esi+0x1]
  41913a:	jg     0x4191aa
  41913c:	jb     0x4190c5
  41913e:	mov    ebx,0x81490f20
  419143:	lds    ebx,FWORD PTR [ebx-0x371cde78]
  419149:	ror    BYTE PTR [ebp+0x43],cl
  41914c:	sub    eax,0xddf694b7
  419151:	or     edi,DWORD PTR [edi-0x4d]
  419154:	jg     0x419155
  419156:	jo     0x419169
  419158:	sahf   
  419159:	or     DWORD PTR [eax+0x16fe78d6],edx
  41915f:	xchg   ebx,eax
  419160:	mov    bl,0x67
  419162:	rcr    BYTE PTR [ecx],0x6
  419165:	jecxz  0x419170
  419167:	(bad)  
  419168:	cld    
  419169:	xor    edx,DWORD PTR [edx+0x5d27fec0]
  41916f:	and    BYTE PTR [edi-0x3e],dh
  419172:	inc    edx
  419173:	mov    esp,0xc9678d12
  419178:	(bad)  
  419179:	icebp  
  41917a:	js     0x419129
  41917c:	cmp    bh,ah
  41917e:	stos   DWORD PTR es:[edi],eax
  41917f:	adc    DWORD PTR [edx+eiz*1],ecx
  419182:	sti    
  419183:	(bad)  
  419184:	sub    dl,dl
  419186:	push   ebp
  419187:	outs   dx,BYTE PTR ds:[esi]
  419188:	in     eax,0xe8
  41918a:	mov    bh,dh
  41918c:	mov    eax,ds:0x5723bfe5
  419191:	das    
  419192:	dec    edx
  419193:	clc    
  419194:	or     eax,0xa170d09f
  419199:	inc    edi
  41919a:	xor    cl,BYTE PTR [edx+0x32]
  41919d:	dec    ecx
  41919e:	es mov esp,0x721896ed
  4191a4:	mov    esp,DWORD PTR [ebx-0x69af26fc]
  4191aa:	jno    0x419195
  4191ac:	test   esp,ecx
  4191ae:	repz jg 0x4191d1
  4191b1:	inc    ebx
  4191b2:	mov    esp,0x9e53d97f
  4191b7:	outs   dx,BYTE PTR ds:[esi]
  4191b8:	pop    ds
  4191b9:	ss sub al,0x23
  4191bc:	mov    ebp,0x378b85a8
  4191c1:	test   eax,0xfe9a01ac
  4191c6:	(bad)  
  4191c7:	dec    BYTE PTR [eax-0xbee4462]
  4191cd:	ficomp WORD PTR [edx]
  4191cf:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191d1:	data16 sbb BYTE PTR [edx],bh
  4191d4:	push   0x693faacc
  4191d9:	leave  
  4191da:	je     0x419243
  4191dc:	mov    edi,DWORD PTR [edi+0x557ad9cc]
  4191e2:	call   FWORD PTR [ecx+0x7f78e143]
  4191e8:	sbb    ah,0x13
  4191eb:	retf   
  4191ec:	xchg   edx,eax
  4191ed:	ja     0x419244
  4191ef:	inc    edx
  4191f0:	inc    edx
  4191f1:	adc    eax,0xd9a8468c
  4191f6:	mov    dh,0x76
  4191f8:	adc    bl,BYTE PTR [eax]
  4191fa:	jp     0x419235
  4191fc:	iret   
  4191fd:	and    esi,DWORD PTR [ebx+0x4acf5b9]
  419203:	and    DWORD PTR [ecx+edi*8+0xdc140c8],0x9d8eb9ed
  41920e:	sbb    eax,0x7545cbbd
  419213:	xchg   ebp,eax
  419214:	xchg   ebp,eax
  419215:	add    al,0x90
  419217:	fsub   QWORD PTR [edi+0x47d0c5a1]
  41921d:	inc    eax
  41921e:	jle    0x419293
  419220:	add    esp,DWORD PTR [edx+edx*4]
  419223:	jp     0x4191a8
  419225:	adc    BYTE PTR [ebp+0x26319607],al
  41922b:	dec    ecx
  41922c:	add    esi,esi
  41922e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41922f:	inc    esp
  419230:	test   al,0x34
  419232:	mov    al,ds:0x44658dcb
  419237:	sar    BYTE PTR ds:0x294e097e,cl
  41923d:	mov    eax,ds:0xf078db9a
  419242:	enter  0x420d,0xb2
  419246:	xchg   esp,eax
  419247:	cmc    
  419248:	ds sbb eax,0x4f3d019b
  41924e:	mov    edi,0xe1e8b602
  419253:	js     0x419219
  419255:	add    al,0xf0
  419257:	out    0xd6,eax
  419259:	push   ds
  41925a:	lods   al,BYTE PTR ds:[esi]
  41925b:	jns    0x4192a3
  41925d:	inc    edi
  41925e:	push   cs
  41925f:	pop    ecx
  419260:	push   ss
  419261:	pop    ebp
  419262:	(bad)  
  419263:	scas   eax,DWORD PTR es:[edi]
  419264:	and    edi,DWORD PTR [esp+edi*2]
  419267:	jl     0x4191fc
  419269:	out    0x1,eax
  41926b:	stc    
  41926c:	and    eax,0x459e6427
  419271:	mov    bl,0x6f
  419273:	aam    0x4c
  419275:	sub    cl,BYTE PTR [ebx-0x6a]
  419278:	xor    DWORD PTR [ecx-0x5f7f71f9],edx
  41927e:	adc    al,0xa6
  419280:	push   0xaed1f017
  419285:	jmp    0x41925a
  419287:	sub    BYTE PTR [edi+0xd],0x54
  41928b:	int3   
  41928c:	out    dx,eax
  41928d:	aas    
  41928e:	jb     0x4192df
  419290:	shr    BYTE PTR [eax+edi*2],cl
  419293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419294:	pop    ds
  419295:	mov    ds:0x380f1c9b,eax
  41929a:	(bad)  
  41929b:	mov    edx,0x276a1568
  4192a0:	push   edx
  4192a1:	xor    BYTE PTR [eax],ah
  4192a3:	mov    ecx,0x5032fb20
  4192a8:	jnp    0x4192aa
  4192aa:	ret    0xb038
  4192ad:	sbb    ebp,DWORD PTR [ecx+0x4f]
  4192b0:	call   0xa15909e2
  4192b5:	out    dx,eax
  4192b6:	mov    ds:0xdefa24da,eax
  4192bb:	mov    edx,0x2d822fef
  4192c0:	ret    
  4192c1:	shl    DWORD PTR [ebx],cl
  4192c3:	cwde   
  4192c4:	xor    al,0xd7
  4192c6:	jae    0x41932f
  4192c8:	xchg   esi,eax
  4192c9:	lods   eax,DWORD PTR ds:[esi]
  4192ca:	jg     0x4192fa
  4192cc:	sar    BYTE PTR [ebx+0x27f489f9],cl
  4192d2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192d4:	pop    ss
  4192d5:	inc    DWORD PTR [edx]
  4192d7:	push   ebp
  4192d8:	pop    ecx
  4192d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192da:	data16 xchg BYTE PTR [eax],dh
  4192dd:	pop    esp
  4192de:	cli    
  4192df:	push   esi
  4192e0:	cdq    
  4192e1:	cs adc al,0xb8
  4192e4:	int3   
  4192e5:	sub    DWORD PTR [eax-0x292d636c],ecx
  4192eb:	mul    BYTE PTR [edx+0x73]
  4192ee:	cdq    
  4192ef:	mov    eax,ds:0x214a3a18
  4192f4:	push   es
  4192f5:	jnp    0x4192fe
  4192f7:	or     ebp,DWORD PTR ds:[ebp+ebx*1-0x63]
  4192fc:	xchg   ebx,eax
  4192fd:	js     0x419365
  4192ff:	xchg   edx,eax
  419300:	out    0x58,al
  419302:	ror    BYTE PTR [edx-0x58],0xcd
  419306:	pop    ss
  419307:	pusha  
  419308:	xor    DWORD PTR [esp+ebx*4],esp
  41930b:	mov    ebp,0xba3ccd65
  419310:	add    BYTE PTR [edx+0x3d],dh
  419313:	jge    0x41929c
  419315:	aam    0x58
  419317:	mov    esi,0xd88f0ee9
  41931c:	or     dh,BYTE PTR [ebp+ebp*2-0x3d]
  419320:	sub    al,0xa4
  419322:	mov    DWORD PTR [ebx+0x32f40254],0x701b1aea
  41932c:	mov    DWORD PTR [eax+0x37e4693],esp
  419332:	mov    eax,0xbe7e035c
  419337:	je     0x419368
  419339:	lods   al,BYTE PTR ds:[esi]
  41933a:	loop   0x419377
  41933c:	ja     0x4192f4
  41933e:	sbb    eax,0xea8c566e
  419343:	push   DWORD PTR [edx+0x356ac922]
  419349:	ror    DWORD PTR [eax-0x47],1
  41934c:	aas    
  41934d:	inc    ebx
  41934e:	shl    DWORD PTR ds:0x5e91732b,0x4a
  419355:	mov    BYTE PTR [eax-0x16108612],0x3f
  41935c:	retf   
  41935d:	adc    eax,0x7396d3db
  419362:	mov    al,ds:0xff2166af
  419367:	push   edi
  419368:	rcr    BYTE PTR [esi+0x4],0x11
  41936c:	(bad)  
  41936d:	cwde   
  41936e:	mov    ebp,0xe6378260
  419373:	push   ss
  419374:	fst    QWORD PTR [ecx]
  419376:	ins    DWORD PTR es:[edi],dx
  419377:	lea    esp,cs:[edi+edi*8-0x721c6f61]
  41937f:	add    ch,bl
  419381:	add    al,0x9e
  419383:	and    eax,0xfaeb3b0d
  419388:	adc    DWORD PTR [edx],esp
  41938a:	sub    DWORD PTR [edi-0x4],ecx
  41938d:	rcl    DWORD PTR [esi-0x294b6dae],cl
  419393:	mov    al,ds:0x4017e44
  419398:	adc    DWORD PTR ds:0xa8d6dc92,edi
  41939e:	mov    esp,0x6e28e461
  4193a3:	repnz enter 0x3f37,0xa8
  4193a8:	enter  0xf5e2,0xc7
  4193ac:	adc    bh,bl
  4193ae:	data16 jl 0x419347
  4193b1:	pop    ds
  4193b2:	lahf   
  4193b3:	jl     0x4193b1
  4193b5:	pop    eax
  4193b6:	lods   eax,DWORD PTR ds:[esi]
  4193b7:	push   ebp
  4193b8:	push   ebp
  4193b9:	ins    DWORD PTR es:[edi],dx
  4193ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193bb:	inc    edi
  4193bc:	inc    ch
  4193be:	cmp    eax,0x6265e68a
  4193c3:	xor    dl,BYTE PTR [edi+0x4b6e2cfc]
  4193c9:	jmp    0x6e786046
  4193ce:	mov    al,ds:0xd66acafd
  4193d3:	pop    es
  4193d4:	push   cs
  4193d5:	into   
  4193d6:	dec    edi
  4193d7:	xor    edi,esi
  4193d9:	ins    BYTE PTR es:[edi],dx
  4193da:	mov    ebx,0xa2fcf306
  4193df:	jno    0x419394
  4193e1:	sub    bh,BYTE PTR [eax-0x3b]
  4193e4:	repnz mov esp,0x39922a5f
  4193ea:	pop    ebp
  4193eb:	loope  0x4193ca
  4193ed:	mov    edx,0xc4b89b5e
  4193f2:	inc    esp
  4193f3:	push   ecx
  4193f4:	xchg   ebx,eax
  4193f5:	inc    esp
  4193f6:	xor    BYTE PTR [ebp-0x5c45051a],bl
  4193fc:	inc    ecx
  4193fd:	clc    
  4193fe:	pop    ss
  4193ff:	xor    ch,BYTE PTR [esp+eiz*2]
  419402:	xchg   esi,eax
  419403:	addr16 je 0x4193a9
  419406:	ret    
  419407:	es mov dl,0x69
  41940a:	mov    esp,0x30145ad2
  41940f:	je     0x4193a6
  419411:	and    BYTE PTR [ebx],0xc7
  419414:	fwait
  419415:	clc    
  419416:	inc    esp
  419417:	popa   
  419418:	mov    BYTE PTR [esi+0x522b701b],al
  41941e:	nop
  41941f:	ins    DWORD PTR es:[edi],dx
  419420:	in     al,dx
  419421:	js     0x4193d7
  419423:	xchg   ebp,eax
  419424:	sbb    esi,esp
  419426:	lahf   
  419427:	sbb    al,al
  419429:	in     eax,0x78
  41942b:	jl     0x4193b9
  41942d:	jo     0x41942a
  41942f:	dec    edi
  419430:	ja     0x41941a
  419432:	adc    eax,0xd1800d7f
  419437:	push   ecx
  419438:	adc    DWORD PTR [edx+0xe],edi
  41943b:	sti    
  41943c:	xor    DWORD PTR [esi-0xf],ebp
  41943f:	leave  
  419440:	sar    BYTE PTR [esi+0x9],0xd3
  419444:	iret   
  419445:	jnp    0x4193c9
  419447:	fcom   QWORD PTR [ebx]
  419449:	sbb    ebx,DWORD PTR [esi+0x79]
  41944c:	jo     0x4193e2
  41944e:	pop    edx
  41944f:	sbb    al,0x70
  419451:	push   ecx
  419452:	push   0x66
  419454:	xlat   BYTE PTR ds:[ebx]
  419455:	aam    0x5b
  419457:	daa    
  419458:	cmp    BYTE PTR [edi],dh
  41945a:	sbb    ebp,DWORD PTR [ecx+0x237609b9]
  419460:	loopne 0x419420
  419462:	lods   eax,DWORD PTR ds:[esi]
  419463:	mov    ds:0xa37f0d51,al
  419468:	popa   
  419469:	inc    ebx
  41946a:	sbb    al,0xf7
  41946c:	inc    eax
  41946d:	shl    DWORD PTR [eax],1
  41946f:	les    ebp,FWORD PTR [edx-0x41]
  419472:	daa    
  419473:	fimul  DWORD PTR [eax+0x43]
  419476:	dec    eax
  419477:	push   ecx
  419478:	bound  ebx,QWORD PTR [edx]
  41947a:	mov    fs,edi
  41947c:	mov    ebx,0x57c2d9e8
  419481:	test   DWORD PTR [ebx],edi
  419483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419484:	or     al,0x86
  419486:	xor    eax,0x9d46b1f
  41948b:	inc    eax
  41948c:	add    eax,DWORD PTR [ebx]
  41948e:	inc    esi
  41948f:	mov    bl,0x6c
  419491:	xor    eax,0xa28ea697
  419496:	push   ebx
  419497:	push   esi
  419498:	pop    ecx
  419499:	jle    0x419432
  41949b:	mov    eax,ds:0xafb7978f
  4194a0:	retf   0x4adc
  4194a3:	xor    ecx,edx
  4194a5:	outs   dx,DWORD PTR ds:[esi]
  4194a6:	push   ss
  4194a7:	enter  0x2d45,0x68
  4194ab:	pop    ecx
  4194ac:	sub    eax,0x16da565c
  4194b1:	add    eax,0x8c24fcd3
  4194b6:	mov    al,ds:0x5cc59f21
  4194bb:	aam    0xdd
  4194bd:	jle    0x41949f
  4194bf:	mov    dl,0x5
  4194c1:	mov    dh,0xcb
  4194c3:	or     esp,DWORD PTR [edx-0x5]
  4194c6:	sbb    BYTE PTR [eax-0x15],bl
  4194c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194ca:	jl     0x41954b
  4194cc:	mov    eax,ds:0x9da6c1b8
  4194d1:	xor    al,0x73
  4194d3:	gs test eax,0x3745686d
  4194d9:	das    
  4194da:	push   edx
  4194db:	mov    ebp,0xd442020
  4194e0:	sbb    bl,BYTE PTR [esi+eax*1-0x11]
  4194e4:	ins    BYTE PTR es:[di],dx
  4194e6:	sub    DWORD PTR [esi+0x52dd55b8],eax
  4194ec:	lock std 
  4194ee:	push   ebx
  4194ef:	mov    cl,0xd8
  4194f1:	push   ebp
  4194f2:	mov    cl,0x75
  4194f4:	dec    BYTE PTR [ebp-0x2b]
  4194f7:	test   al,0x98
  4194f9:	sbb    DWORD PTR [esi+esi*4],ebp
  4194fc:	pop    edi
  4194fd:	jp     0x4194a1
  4194ff:	hlt    
  419500:	adc    dh,cl
  419502:	and    BYTE PTR [ebx+0x1f],dh
  419505:	fisubr DWORD PTR [ecx-0x43]
  419508:	push   ss
  419509:	sti    
  41950a:	daa    
  41950b:	fmul   QWORD PTR [esp+ebp*2-0x79]
  41950f:	push   cs
  419510:	xor    ebp,DWORD PTR [edi-0x36b810d3]
  419516:	in     eax,0xf8
  419518:	loopne 0x4194bb
  41951a:	jp     0x419597
  41951c:	(bad)  
  41951d:	into   
  41951e:	mov    esi,0xb24f0e00
  419523:	retf   
  419524:	xor    ah,BYTE PTR [ebx+eiz*4+0x43]
  419528:	out    0x53,al
  41952a:	popf   
  41952b:	int    0x4e
  41952d:	sub    al,0x8c
  41952f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419530:	(bad)  
  419531:	pop    ecx
  419532:	add    edi,esp
  419534:	add    DWORD PTR [edi+0x1dab6126],esp
  41953a:	ret    0xeb74
  41953d:	icebp  
  41953e:	xchg   edx,eax
  41953f:	xchg   esp,eax
  419540:	mov    bh,0x50
  419542:	mov    bl,0xfc
  419544:	sub    eax,0x701b2762
  419549:	pop    ecx
  41954a:	push   esp
  41954b:	dec    edx
  41954c:	xor    DWORD PTR [edi+0x4c],ecx
  41954f:	fwait
  419550:	or     esi,DWORD PTR [ebp-0x4a276afe]
  419556:	pop    edi
  419557:	push   ds
  419558:	mov    esp,esi
  41955a:	call   0x2266:0xaaec5386
  419561:	inc    eax
  419562:	popa   
  419563:	in     al,dx
  419564:	sub    ebp,DWORD PTR [esp+ecx*8+0x27]
  419568:	(bad)  
  419569:	cmc    
  41956a:	fwait
  41956b:	adc    cl,BYTE PTR [ecx+0x70]
  41956e:	mul    BYTE PTR [edi+0x65]
  419571:	fsubrp st(2),st
  419573:	ins    DWORD PTR es:[edi],dx
  419574:	push   esi
  419575:	cs call 0x32762c0c
  41957b:	or     DWORD PTR [eax-0x1c2df551],ecx
  419581:	xchg   edi,eax
  419582:	hlt    
  419583:	popa   
  419584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419585:	mov    dh,0x2a
  419587:	push   0xffffffff
  419589:	adc    BYTE PTR [ebx],0x43
  41958c:	inc    BYTE PTR [ebp-0x4e2df495]
  419592:	fsub   DWORD PTR [ebx+0x27b8a38d]
  419598:	lods   al,BYTE PTR ds:[esi]
  419599:	jmp    0x95e9f0ac
  41959e:	jmp    0x4310:0xdaf5f66b
  4195a5:	shl    DWORD PTR [eax+0x69],1
  4195a8:	mov    dl,0x58
  4195aa:	mov    edx,0x2818fdce
  4195af:	sti    
  4195b0:	inc    ebp
  4195b1:	hlt    
  4195b2:	outs   dx,BYTE PTR ds:[esi]
  4195b3:	xchg   esp,eax
  4195b4:	pop    ebx
  4195b5:	lods   eax,DWORD PTR ds:[esi]
  4195b6:	aam    0xef
  4195b8:	adc    al,0x5c
  4195ba:	dec    ebp
  4195bb:	cs push esp
  4195bd:	stos   BYTE PTR es:[edi],al
  4195be:	mov    ah,0x67
  4195c0:	sar    DWORD PTR [edi+0x1f25499d],1
  4195c6:	es pop ss
  4195c8:	scas   al,BYTE PTR es:[edi]
  4195c9:	and    DWORD PTR [ecx-0x49],0xffffffa5
  4195cd:	cld    
  4195ce:	ins    BYTE PTR es:[edi],dx
  4195cf:	jo     0x419629
  4195d1:	sti    
  4195d2:	ins    DWORD PTR es:[edi],dx
  4195d3:	stos   DWORD PTR es:[edi],eax
  4195d4:	aaa    
  4195d5:	test   BYTE PTR [ecx-0x7a],ch
  4195d8:	outs   dx,DWORD PTR ds:[esi]
  4195d9:	stos   BYTE PTR es:[edi],al
  4195da:	not    DWORD PTR [edi]
  4195dc:	mov    DWORD PTR [ecx-0x6dbd8985],esi
  4195e2:	aaa    
  4195e3:	pop    edx
  4195e4:	xchg   edx,eax
  4195e5:	sbb    ebx,DWORD PTR [esi-0x35]
  4195e8:	mov    al,ds:0x71462c46
  4195ed:	cmp    BYTE PTR [esi-0x80],cl
  4195f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195f1:	sub    ch,dh
  4195f3:	push   edx
  4195f4:	jbe    0x41958c
  4195f6:	(bad)  
  4195f7:	jmp    0x419629
  4195f9:	test   eax,0x800649d8
  4195fe:	jb     0x4195fd
  419600:	fcom   QWORD PTR [esi-0x18]
  419603:	sbb    al,0x4f
  419605:	mov    eax,ds:0xdf003b96
  41960a:	xchg   BYTE PTR [ebx],bl
  41960c:	mov    edi,DWORD PTR [ecx-0x4b]
  41960f:	mov    ecx,0x69a7a512
  419614:	(bad)  
  419615:	and    DWORD PTR [edi-0x4f],ecx
  419618:	int    0xfc
  41961a:	jp     0x41962f
  41961c:	adc    DWORD PTR [ebx+0x7f],0xffffffb5
  419620:	(bad)  
  419621:	pop    ebp
  419622:	repnz add al,0x52
  419625:	mov    eax,0xf620cf1a
  41962a:	push   0xffffff9c
  41962c:	clc    
  41962d:	addr16 (bad) 
  419630:	ss call 0x25f7:0xfc253baa
  419638:	or     DWORD PTR [eax+0x6317ec91],0xf290dfd8
  419642:	stc    
  419643:	sbb    eax,DWORD PTR [edi-0x3b]
  419646:	inc    ebx
  419647:	lods   eax,DWORD PTR ds:[esi]
  419648:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41964a:	and    eax,0x20c0137e
  41964f:	stos   DWORD PTR es:[edi],eax
  419650:	mov    ecx,DWORD PTR [edx-0xf9ba352]
  419656:	pop    ss
  419657:	mov    al,ds:0xcd7ae454
  41965c:	test   al,0xb1
  41965e:	push   ds
  41965f:	cld    
  419660:	sbb    bl,bl
  419662:	mov    ebp,0x129cbc36
  419667:	sbb    eax,0x1d17796f
  41966c:	call   0x8d7bdda8
  419671:	aaa    
  419672:	dec    esi
  419673:	pop    esp
  419674:	jae    0x4196d8
  419676:	jl     0x419669
  419678:	leave  
  419679:	and    DWORD PTR [ecx+esi*4+0x2f956b62],0x62
  419681:	cdq    
  419682:	pop    ebp
  419683:	stc    
  419684:	imul   ebp,DWORD PTR [edi+eax*8],0xffffffdd
  419688:	mov    eax,?
  41968a:	dec    edx
  41968b:	dec    ebp
  41968c:	push   es
  41968d:	cmp    BYTE PTR [ebp+0x4],0x6d
  419691:	xlat   BYTE PTR ds:[ebx]
  419692:	and    eax,0xeeabd8da
  419697:	test   BYTE PTR [ebx+eax*8+0x5],bh
  41969b:	imul   DWORD PTR [esp+esi*8-0x9]
  41969f:	int    0xd2
  4196a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196a2:	pop    esi
  4196a3:	or     DWORD PTR [ebp-0x2186a9ed],ecx
  4196a9:	aas    
  4196aa:	cs std 
  4196ac:	jg     0x419690
  4196ae:	mov    bl,0x3c
  4196b0:	add    bh,BYTE PTR [ebx-0x73ec8713]
  4196b6:	mov    esp,0x11f7d3c5
  4196bb:	test   al,0x8d
  4196bd:	sub    eax,0xec6bd691
  4196c2:	retf   
  4196c3:	jnp    0x419686
  4196c5:	je     0x419725
  4196c7:	mov    ds:0x208d259f,eax
  4196cc:	js     0x41971b
  4196ce:	mov    dl,0xec
  4196d0:	jg     0x419717
  4196d2:	mov    ds:0x3ecb677a,eax
  4196d7:	loop   0x41972b
  4196d9:	inc    ebp
  4196da:	dec    ebx
  4196db:	cmp    DWORD PTR [esi],0xffffff8e
  4196de:	adc    eax,0xefbb3b5f
  4196e3:	sub    dl,cl
  4196e5:	lea    ebx,[ecx]
  4196e7:	sub    eax,0x1edf576c
  4196ec:	imul   ebx,DWORD PTR [edx+0x2716e2f3],0x38c551cf
  4196f6:	out    dx,al
  4196f7:	push   ds
  4196f8:	mov    al,0xc3
  4196fa:	xor    edi,DWORD PTR ds:0x947f9fa
  419700:	es cli 
  419702:	retf   
  419703:	push   esp
  419704:	fst    DWORD PTR [esi-0x1b]
  419707:	cdq    
  419708:	inc    DWORD PTR [ecx-0x1f]
  41970b:	(bad)  
  41970c:	mov    bh,0x9
  41970e:	or     edi,DWORD PTR [ecx+0x6b]
  419711:	ror    dh,cl
  419713:	not    BYTE PTR ss:[ecx+0x6d]
  419717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419718:	inc    esi
  419719:	push   ss
  41971a:	mov    WORD PTR [ebp-0x25f6ef9b],gs
  419720:	ins    DWORD PTR es:[edi],dx
  419721:	push   esp
  419722:	test   BYTE PTR [ecx+esi*2-0x3deb621b],dh
  419729:	sahf   
  41972a:	call   0x1a01aaba
  41972f:	dec    esi
  419730:	pop    esp
  419731:	add    bl,bh
  419733:	and    eax,0x6ef2fd20
  419738:	jns    0x4196f8
  41973a:	and    al,0x25
  41973c:	in     eax,dx
  41973d:	cdq    
  41973e:	sbb    DWORD PTR [edi+0xa],edx
  419741:	inc    eax
  419742:	or     ebp,DWORD PTR [ebx+0x1e]
  419745:	stc    
  419746:	cmp    al,0xcd
  419748:	mov    ds:0xb2a415c8,al
  41974d:	jb     0x419722
  41974f:	retf   
  419750:	push   esi
  419751:	popf   
  419752:	xor    esp,edi
  419754:	and    ah,dh
  419756:	pop    ecx
  419757:	or     al,0x0
  419759:	adc    cl,BYTE PTR [esi+0x75]
  41975c:	mov    dl,0xd2
  41975e:	retf   
  41975f:	mov    WORD PTR [eax],?
  419761:	push   0x7066270
  419766:	aaa    
  419767:	sbb    ah,0x6a
  41976a:	pushf  
  41976b:	cmc    
  41976c:	and    cl,BYTE PTR [esp+ebp*8+0x39]
  419770:	or     al,0x11
  419772:	aam    0xe9
  419774:	xchg   BYTE PTR [eax+0x4f70aaed],ch
  41977a:	jo     0x4197f7
  41977c:	ror    BYTE PTR [edx],0xfa
  41977f:	or     eax,0xc7f5aa66
  419784:	pushf  
  419785:	adc    al,0xa5
  419787:	sbb    al,0x85
  419789:	jp     0x4197c0
  41978b:	mov    DWORD PTR [ebx-0x42c90b0f],edi
  419791:	xchg   ecx,eax
  419792:	fst    DWORD PTR [eax]
  419794:	out    dx,al
  419795:	adc    BYTE PTR [edi+0x2dd3d24a],dl
  41979b:	mov    dl,0x66
  41979d:	add    al,0x9a
  41979f:	mov    ?,esp
  4197a1:	sti    
  4197a2:	xchg   edi,eax
  4197a3:	xchg   ebx,eax
  4197a4:	(bad)  
  4197a5:	lock and BYTE PTR [eax+eiz*1],bl
  4197a9:	int3   
  4197aa:	sbb    dh,BYTE PTR [ebp+0x3ab91ac0]
  4197b0:	adc    BYTE PTR [ebx+0x78],bl
  4197b3:	inc    ebp
  4197b4:	imul   ebx,DWORD PTR [ebp+0x65],0xba3deef9
  4197bb:	mov    ?,WORD PTR [edx+0x52]
  4197be:	ror    DWORD PTR [ecx+ebx*1-0x5c],cl
  4197c2:	cmp    DWORD PTR [edx-0x7cd61de2],ecx
  4197c8:	popf   
  4197c9:	xor    DWORD PTR cs:[ebx-0x3559b2b5],ecx
  4197d0:	push   ds
  4197d1:	mov    ebx,0x93ef7b52
  4197d6:	ja     0x419813
  4197d8:	retf   0xabc1
  4197db:	dec    edi
  4197dc:	nop
  4197dd:	push   ecx
  4197de:	push   0xdc528427
  4197e3:	daa    
  4197e4:	add    edi,DWORD PTR [edi-0x6a]
  4197e7:	(bad)
  4197ea:	mov    eax,ds:0xa5c106e7
  4197ef:	loope  0x41985c
  4197f1:	aas    
  4197f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197f3:	mov    bl,0xdb
  4197f5:	and    DWORD PTR [ebp+0x45],0xffffffde
  4197f9:	leave  
  4197fa:	rcr    esp,1
  4197fc:	sbb    ecx,DWORD PTR [edx]
  4197fe:	mov    ah,BYTE PTR [edi+0x6c]
  419801:	sbb    ah,ch
  419803:	or     BYTE PTR [ebx+esi*8],cl
  419806:	xchg   esi,eax
  419807:	dec    ecx
  419808:	arpl   WORD PTR [ebx],bx
  41980a:	cmp    DWORD PTR [edi-0x787794b9],ebp
  419810:	pop    edx
  419811:	test   eax,0x90e9b9a5
  419816:	out    dx,eax
  419817:	aaa    
  419818:	retf   
  419819:	jae    0x41984d
  41981b:	das    
  41981c:	xor    cl,cl
  41981e:	inc    edx
  41981f:	(bad)  
  419820:	gs add eax,0xd1e577c0
  419826:	mov    al,0xbe
  419828:	jns    0x4197be
  41982a:	aas    
  41982b:	hlt    
  41982c:	iret   
  41982d:	push   ds
  41982e:	stos   DWORD PTR es:[edi],eax
  41982f:	scas   eax,DWORD PTR es:[edi]
  419830:	pop    ss
  419831:	stos   DWORD PTR es:[edi],eax
  419832:	jae    0x4198af
  419834:	mov    WORD PTR [eax-0x47],fs
  419837:	(bad)  
  419838:	out    dx,al
  419839:	stc    
  41983a:	pop    ds
  41983b:	lock adc bl,BYTE PTR [ebp-0x154b9359]
  419842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419843:	push   ebx
  419844:	test   al,0x3e
  419846:	ins    DWORD PTR es:[edi],dx
  419847:	cmp    eax,DWORD PTR [edi+0x5a6f340]
  41984d:	sbb    BYTE PTR [eax+0x55],al
  419850:	cmp    bl,dh
  419852:	mov    eax,DWORD PTR [edi]
  419854:	xchg   esp,eax
  419855:	jno    0x4198c7
  419857:	push   edx
  419858:	sahf   
  419859:	adc    DWORD PTR [esi+0x50],esp
  41985c:	inc    esp
  41985d:	cmc    
  41985e:	xor    eax,0xbd96b82
  419863:	inc    edi
  419864:	and    eax,0x2f2f9051
  419869:	sbb    DWORD PTR [edi],edi
  41986b:	repz push eax
  41986d:	dec    ebx
  41986e:	test   DWORD PTR [eax+0xfe339a6],ebp
  419874:	and    DWORD PTR [eax+0x2b],edi
  419877:	dec    esi
  419878:	lds    edi,FWORD PTR [ecx+edx*2+0x57]
  41987c:	dec    edi
  41987d:	jmp    0x6c42:0xc253213c
  419884:	mov    ah,0x2b
  419886:	cmp    edx,DWORD PTR [esi]
  419888:	out    0xe0,eax
  41988a:	lods   eax,DWORD PTR ds:[esi]
  41988b:	mov    ebp,0x8246667b
  419890:	or     eax,0x9257f283
  419895:	dec    edx
  419896:	jbe    0x4198b0
  419898:	adc    eax,0x5ec17462
  41989d:	frstor [eax+0xe]
  4198a0:	ja     0x4198ec
  4198a2:	sbb    esi,ecx
  4198a4:	fsubr  QWORD PTR [edi+0x3e]
  4198a7:	adc    DWORD PTR [ecx+edi*2],esp
  4198aa:	(bad)  [edi+0x60]
  4198ad:	mov    esp,eax
  4198af:	daa    
  4198b0:	adc    ah,dh
  4198b2:	nop
  4198b3:	pushf  
  4198b4:	nop
  4198b5:	push   0x491bd123
  4198ba:	pop    ss
  4198bb:	mov    bh,0x55
  4198bd:	test   BYTE PTR [esi+0x50],bh
  4198c0:	cwde   
  4198c1:	jle    0x419855
  4198c3:	adc    al,0xd3
  4198c5:	ins    BYTE PTR es:[edi],dx
  4198c6:	rol    BYTE PTR [esi],1
  4198c8:	ins    DWORD PTR es:[edi],dx
  4198c9:	mov    esi,0x380e3ff2
  4198ce:	jbe    0x419935
  4198d0:	cdq    
  4198d1:	int    0x53
  4198d3:	adc    esp,DWORD PTR [esi+0x7448e683]
  4198d9:	pop    es
  4198da:	mov    dh,0x92
  4198dc:	push   ss
  4198dd:	(bad)  
  4198de:	dec    eax
  4198df:	push   es
  4198e0:	lds    ecx,FWORD PTR [ebx+0x15]
  4198e3:	mov    BYTE PTR [edi+esi*2+0x39],al
  4198e7:	add    edx,eax
  4198e9:	jb     0x419906
  4198eb:	xchg   cl,dl
  4198ed:	(bad)  
  4198ee:	xor    ecx,edx
  4198f0:	ret    0x7ab2
  4198f3:	lock mov cl,0x11
  4198f6:	mov    edi,0xd16dbf2c
  4198fb:	pop    edx
  4198fc:	cmp    BYTE PTR [esi],dl
  4198fe:	mov    DWORD PTR [ecx-0x17977cfc],edi
  419904:	cmp    al,0xc6
  419906:	lods   eax,DWORD PTR ss:[esi]
  419908:	scas   eax,DWORD PTR es:[edi]
  419909:	push   cs
  41990a:	lock mov eax,0xecdf4ed0
  419910:	xor    BYTE PTR [edx],0xaf
  419913:	jmp    0x4198b5
  419915:	sbb    esi,DWORD PTR [edx-0xb]
  419918:	xchg   ebp,eax
  419919:	nop
  41991a:	push   esp
  41991b:	and    BYTE PTR [edx-0x7b],al
  41991e:	xchg   DWORD PTR [eax-0x65],esp
  419921:	lods   eax,DWORD PTR ds:[esi]
  419922:	pop    ss
  419923:	ror    BYTE PTR [ebx+0x12],1
  419926:	repz pop es
  419928:	add    eax,DWORD PTR [ebx-0x76]
  41992b:	cmp    esp,DWORD PTR [eax]
  41992d:	push   esp
  41992e:	inc    eax
  41992f:	mov    ah,BYTE PTR [edi+0x1c]
  419932:	xor    al,0xc5
  419934:	jno    0x4198b8
  419936:	mov    eax,0xb67c76cb
  41993b:	(bad)  
  41993c:	call   0xfd0f0fd8
  419941:	sti    
  419942:	cs aad 0x44
  419945:	stos   BYTE PTR es:[edi],al
  419946:	(bad)  
  419948:	xchg   eax,edi
  41994a:	jmp    0xd3b7:0x98605389
  419951:	enter  0xcf8,0xe8
  419955:	mov    ch,BYTE PTR [ebp+edx*2-0x297ce585]
  41995c:	mov    ch,0xdb
  41995e:	std    
  41995f:	js     0x4199c8
  419961:	or     al,0x6a
  419963:	stos   DWORD PTR es:[edi],eax
  419964:	ret    
  419965:	mov    BYTE PTR [esi],bh
  419967:	jecxz  0x41992a
  419969:	aas    
  41996a:	pop    eax
  41996b:	xchg   ecx,eax
  41996c:	jmp    0x41990e
  41996e:	jnp    0x4198f5
  419970:	push   ds
  419971:	rcr    DWORD PTR [edi-0x77],0x8a
  419975:	aas    
  419976:	cmp    ebx,ebp
  419978:	popa   
  419979:	inc    ebx
  41997a:	push   es
  41997b:	ss cdq 
  41997d:	dec    eax
  41997e:	pop    esi
  41997f:	pop    edx
  419980:	add    DWORD PTR [eax-0x16],ebx
  419983:	mov    eax,ds:0xfa34bb65
  419988:	out    0x42,eax
  41998a:	pop    esi
  41998b:	or     eax,0xc3257fbe
  419990:	adc    DWORD PTR [eax+ecx*1+0x1f],ecx
  419994:	or     DWORD PTR [esi+ebx*1],esi
  419997:	cmp    esp,DWORD PTR [ecx+0x7f87eab6]
  41999d:	cs test al,0xd3
  4199a0:	ins    DWORD PTR es:[edi],dx
  4199a1:	mov    al,ds:0x46080564
  4199a6:	add    bl,BYTE PTR [ecx+0x40]
  4199a9:	xchg   esi,eax
  4199aa:	jne    0x41994d
  4199ac:	loop   0x4199c0
  4199ae:	push   esp
  4199af:	push   es
  4199b0:	jle    0x41996b
  4199b2:	pop    edx
  4199b3:	pop    eax
  4199b4:	inc    esp
  4199b5:	leave  
  4199b6:	inc    ebp
  4199b7:	fsubr  DWORD PTR [edi-0x53]
  4199ba:	mov    al,ds:0x8088844
  4199bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199c0:	mov    bh,0xf4
  4199c2:	mov    ch,0xeb
  4199c4:	cmp    ebp,DWORD PTR [esi-0x177f27b8]
  4199ca:	repnz xor eax,0x38c7f647
  4199d0:	clc    
  4199d1:	or     BYTE PTR [eax],bl
  4199d3:	xchg   edi,eax
  4199d4:	imul   BYTE PTR [edx]
  4199d6:	lods   al,BYTE PTR ds:[esi]
  4199d7:	inc    ebx
  4199d8:	xchg   ebp,eax
  4199d9:	jb     0x419992
  4199db:	fcomip st,st(6)
  4199dd:	mov    BYTE PTR [esp+eax*2],bl
  4199e0:	dec    esi
  4199e1:	xchg   esp,eax
  4199e2:	xlat   BYTE PTR ds:[ebx]
  4199e3:	fldlg2 
  4199e5:	daa    
  4199e6:	les    ebx,FWORD PTR [eax+0x4c53645a]
  4199ec:	inc    eax
  4199ed:	hlt    
  4199ee:	sub    DWORD PTR [ebx-0x2e44b15b],esi
  4199f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199f6:	inc    esi
  4199f7:	ficomp DWORD PTR [ebx-0x56]
  4199fa:	scas   al,BYTE PTR es:[edi]
  4199fb:	js     0x419a4a
  4199fd:	mov    dh,0x62
  419a00:	ds out dx,eax
  419a02:	jmp    0x8ec1:0x3e424f55
  419a09:	dec    edi
  419a0a:	stos   DWORD PTR es:[edi],eax
  419a0b:	jne    0x4199a8
  419a0d:	fucom  st(0)
  419a0f:	in     al,dx
  419a10:	(bad)
  419a14:	push   es
  419a15:	lds    esp,FWORD PTR [ecx+0xcf1476e]
  419a1b:	xor    ebp,ebx
  419a1d:	or     al,0x7f
  419a1f:	mov    edi,0x3a9867a9
  419a24:	(bad)  
  419a25:	xor    eax,ebx
  419a27:	int3   
  419a28:	add    ebx,DWORD PTR [edi]
  419a2a:	mov    dh,0x2f
  419a2c:	xchg   DWORD PTR [eax],ebx
  419a2e:	cmp    esp,DWORD PTR [esi+0x7e]
  419a31:	or     edx,0xffffffc6
  419a34:	jno    0x419aa6
  419a36:	push   0x7352ae2c
  419a3b:	mov    ds:0x3b749d05,eax
  419a40:	js     0x419a51
  419a42:	and    BYTE PTR [ebp+0x41],0xaa
  419a46:	enter  0xfd97,0x57
  419a4a:	xchg   ebp,eax
  419a4b:	jbe    0x419a15
  419a4d:	stos   DWORD PTR es:[edi],eax
  419a4e:	nop
  419a4f:	into   
  419a50:	jb     0x419a15
  419a52:	and    ch,ch
  419a54:	sub    DWORD PTR [edx-0x7c253021],ebp
  419a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a5b:	scas   al,BYTE PTR es:[edi]
  419a5c:	pop    ebx
  419a5d:	cmp    DWORD PTR [edi-0x6e],ebp
  419a60:	aas    
  419a61:	ret    
  419a62:	retf   0xb184
  419a65:	stos   DWORD PTR es:[edi],eax
  419a66:	and    eax,0x159ef4d4
  419a6b:	test   DWORD PTR [edx+0x5d],0x973cab7f
  419a72:	ror    BYTE PTR [ecx-0x5cff8752],1
  419a78:	fwait
  419a79:	pop    ss
  419a7a:	into   
  419a7b:	push   esp
  419a7c:	mov    edi,0xf2d265b4
  419a81:	aaa    
  419a82:	adc    al,0xf7
  419a84:	loopne 0x419a9a
  419a86:	rcr    DWORD PTR [esi-0x6254cb1],0xf9
  419a8d:	dec    esp
  419a8e:	push   ecx
  419a8f:	dec    esi
  419a90:	in     al,dx
  419a91:	inc    edi
  419a92:	repz int3 
  419a94:	cld    
  419a95:	or     DWORD PTR [edi-0x6c92b502],0xffffffc0
  419a9c:	push   edx
  419a9d:	dec    ebx
  419a9e:	ret    0x75cb
  419aa1:	mov    ah,0x64
  419aa3:	mov    bh,0x1f
  419aa5:	gs inc edi
  419aa7:	mov    ds:0x2fde7027,eax
  419aac:	jbe    0x419ab0
  419aae:	rol    DWORD PTR [eax],cl
  419ab0:	in     al,0x76
  419ab2:	jnp    0x419b03
  419ab4:	sti    
  419ab5:	bound  eax,QWORD PTR [edi]
  419ab7:	adc    ch,dl
  419ab9:	mov    ah,0x13
  419abb:	dec    ebp
  419abc:	jl     0x419a67
  419abe:	push   edi
  419abf:	jns    0x419b2d
  419ac1:	rcl    BYTE PTR [edx],cl
  419ac3:	xchg   bp,ax
  419ac5:	inc    ebp
  419ac6:	ficom  DWORD PTR [edi-0x6287a18d]
  419acc:	inc    edx
  419acd:	fnstcw WORD PTR [edi-0x4e189887]
  419ad3:	jle    0x419a9a
  419ad5:	in     al,0x85
  419ad7:	fxch   st(1)
  419ad9:	test   al,0xd8
  419adb:	dec    ebx
  419adc:	repnz rcr DWORD PTR [edx-0x1d],0x7c
  419ae1:	jg     0x419b01
  419ae3:	xlat   BYTE PTR ds:[ebx]
  419ae4:	xchg   edx,eax
  419ae5:	mov    eax,0xaa5c65fb
  419aea:	push   0xb4e4ed5d
  419aef:	sub    eax,edx
  419af1:	iret   
  419af2:	add    eax,0xfa743db4
  419af7:	addr16 push ss
  419af9:	xchg   DWORD PTR [ecx],esp
  419afb:	mov    ebp,0xa4257fa0
  419b00:	xchg   BYTE PTR [edi],bh
  419b02:	mov    bh,BYTE PTR [edi+edi*2+0x25]
  419b06:	aam    0xa1
  419b08:	sbb    eax,0x2390e88e
  419b0d:	pop    ecx
  419b0e:	and    eax,DWORD PTR [ebp-0x74]
  419b11:	mov    bh,al
  419b13:	les    esi,FWORD PTR [edx+0x1f3752d]
  419b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b1a:	adc    eax,DWORD PTR [ecx+eiz*1+0x123b557c]
  419b21:	sub    edi,DWORD PTR [edx-0x6904ac38]
  419b27:	adc    eax,0x24ed151
  419b2c:	add    eax,0xbcef60f9
  419b31:	jle    0x419b3f
  419b33:	pop    esp
  419b34:	sub    dh,bl
  419b36:	test   eax,0x932feedf
  419b3b:	mov    edi,0xcae48735
  419b40:	dec    edx
  419b41:	arpl   WORD PTR [eax],bp
  419b43:	mov    bh,0x1e
  419b45:	leave  
  419b46:	mov    dl,ah
  419b48:	ins    DWORD PTR es:[edi],dx
  419b49:	jmp    0x5d1f:0xe1300855
  419b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b51:	movntq QWORD PTR [esp+esi*1+0x60],mm3
  419b56:	fcomp  QWORD PTR [edx-0x61e75ea6]
  419b5c:	arpl   WORD PTR [edx+0x71542ae7],sp
  419b62:	nop
  419b63:	fdivr  st,st(0)
  419b65:	mov    dl,BYTE PTR [esi+0x6c]
  419b68:	or     edi,ecx
  419b6a:	or     al,0x8d
  419b6c:	jns    0x419b3d
  419b6e:	sahf   
  419b6f:	mov    edx,0x5ffb5f8d
  419b74:	les    esp,FWORD PTR [ecx-0x313c1163]
  419b7a:	and    BYTE PTR [edx+eiz*8+0x43],dl
  419b7e:	or     dl,BYTE PTR [ebp+0xd]
  419b81:	mov    ds:0x11f856e3,eax
  419b86:	cli    
  419b87:	pusha  
  419b88:	and    edx,DWORD PTR [ebx]
  419b8a:	cld    
  419b8b:	retf   
  419b8c:	cmp    eax,0xa3d4680f
  419b91:	ja     0x419bb9
  419b93:	inc    edx
  419b94:	je     0x419bc0
  419b96:	sahf   
  419b97:	retf   0xbb32
  419b9a:	mov    al,ds:0x627173a3
  419b9f:	shr    BYTE PTR [edi+0x5123afea],cl
  419ba5:	loopne 0x419b2d
  419ba7:	into   
  419ba8:	mov    esp,0xf232b0e4
  419bad:	mov    bl,0xe4
  419baf:	js     0x419bfb
  419bb1:	mov    edi,0xc558d1e4
  419bb6:	lds    esi,FWORD PTR [ebx+0x2b]
  419bb9:	jecxz  0x419c08
  419bbb:	cmc    
  419bbc:	xchg   DWORD PTR [ecx+edi*1],edx
  419bbf:	jb     0x7670d567
  419bc5:	and    DWORD PTR [esi+0x43],edx
  419bc8:	sub    eax,0x3b10c0d5
  419bcd:	into   
  419bce:	inc    edi
  419bcf:	push   cs
  419bd0:	xchg   edx,eax
  419bd1:	xchg   DWORD PTR [eax+0x5a],esp
  419bd4:	adc    bh,bh
  419bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bd7:	(bad)  
  419bd8:	jbe    0x419bb2
  419bda:	jnp    0x419c58
  419bdc:	jp     0x419bf9
  419bde:	into   
  419bdf:	popf   
  419be0:	test   eax,0x76a6c441
  419be5:	mov    ebp,0x6538ad81
  419bea:	in     eax,dx
  419beb:	ins    DWORD PTR es:[edi],dx
  419bec:	push   eax
  419bed:	mov    edx,0x2f4dcecb
  419bf2:	xchg   esi,eax
  419bf3:	jl     0x419b8d
  419bf5:	adc    eax,0xdc7d3841
  419bfa:	or     esi,DWORD PTR [edx+esi*1-0xb]
  419bfe:	js     0x419c30
  419c00:	sbb    BYTE PTR [ecx-0x2d451cb7],al
  419c06:	mov    ebp,DWORD PTR [edi-0x18da6624]
  419c0c:	sub    eax,DWORD PTR [ecx+0x2f]
  419c0f:	icebp  
  419c10:	aas    
  419c11:	mov    ebx,0xcaaa8bab
  419c16:	xchg   esp,eax
  419c17:	imul   esp,esp,0xfffffff7
  419c1a:	in     al,dx
  419c1b:	inc    edi
  419c1c:	(bad)  
  419c1e:	push   ds
  419c1f:	push   es
  419c20:	xor    eax,0x3b2f078a
  419c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c26:	aad    0x13
  419c28:	sbb    eax,0x9dd5467e
  419c2d:	jne    0x419c97
  419c2f:	dec    edi
  419c30:	add    cl,BYTE PTR [edi-0x65a4a7bc]
  419c36:	in     al,dx
  419c37:	mov    edx,0x8ee0efcf
  419c3c:	ret    0x6124
  419c3f:	or     eax,ecx
  419c41:	cwde   
  419c42:	push   0x35
  419c44:	push   cs
  419c45:	ss mov ecx,0xb809207b
  419c4b:	fmul   st(0),st
  419c4d:	pop    edx
  419c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c4f:	cmp    eax,0x8e883c04
  419c54:	fst    DWORD PTR [edx-0x43]
  419c57:	hlt    
  419c58:	icebp  
  419c59:	cmp    esi,eax
  419c5b:	adc    BYTE PTR [ebp-0xf],ch
  419c5e:	stos   DWORD PTR es:[edi],eax
  419c5f:	adc    eax,0x57ca1d68
  419c64:	jno    0x419c5e
  419c66:	pop    ecx
  419c67:	or     eax,0x215a3af4
  419c6c:	outs   dx,BYTE PTR ds:[esi]
  419c6e:	sub    al,0x2a
  419c70:	es pop edx
  419c72:	mov    bl,0x24
  419c74:	mov    esi,DWORD PTR [esi]
  419c76:	xchg   BYTE PTR [ebx+0xf],ch
  419c79:	into   
  419c7a:	jns    0x419cd6
  419c7c:	das    
  419c7d:	data16 loope 0x419c3c
  419c80:	or     eax,ebp
  419c82:	adc    esp,esi
  419c84:	(bad)  
  419c85:	imul   dl
  419c87:	pop    es
  419c88:	fwait
  419c89:	xlat   BYTE PTR ds:[ebx]
  419c8a:	sub    eax,0xff15d0c8
  419c8f:	out    0x58,al
  419c91:	es out 0x91,al
  419c94:	(bad)  
  419c95:	pop    ss
  419c96:	fild   DWORD PTR [edx+0x5ec530cc]
  419c9c:	pushf  
  419c9d:	dec    ebx
  419c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c9f:	std    
  419ca0:	and    dh,BYTE PTR cs:[ecx-0x4b]
  419ca4:	inc    edx
  419ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ca6:	fisttp WORD PTR [ebx-0x73]
  419ca9:	add    BYTE PTR ds:0xc4fb6f35,cl
  419caf:	lock or al,0xb6
  419cb2:	ins    DWORD PTR es:[edi],dx
  419cb3:	imul   eax,DWORD PTR [esi+0x17],0xffffffb4
  419cb7:	icebp  
  419cb8:	clc    
  419cb9:	test   al,0x3d
  419cbb:	pop    ss
  419cbc:	and    eax,0x542897ff
  419cc1:	fwait
  419cc2:	nop
  419cc3:	inc    eax
  419cc4:	out    0x7e,al
  419cc6:	fsubr  QWORD PTR [edi]
  419cc8:	jmp    0x5af1:0x3b6d8dd1
  419ccf:	mov    edx,0x8b015bf7
  419cd4:	jae    0x419d55
  419cd6:	pushw  0xffaa
  419cd9:	jns    0x419c85
  419cdb:	dec    edi
  419cdc:	sbb    edi,DWORD PTR [ebx]
  419cde:	add    cl,dh
  419ce0:	push   es
  419ce1:	and    dh,BYTE PTR [ebx]
  419ce3:	mov    edi,ebx
  419ce5:	mov    esp,0x5983474b
  419cea:	loope  0x419d0a
  419cec:	pop    eax
  419ced:	(bad)
  419cf1:	jmp    0xfe04da5c
  419cf6:	mov    cl,dh
  419cf8:	mov    dl,0xfc
  419cfa:	and    eax,0xc659e65
  419cff:	pop    ds
  419d00:	int3   
  419d01:	adc    DWORD PTR cs:[edi+esi*8],edi
  419d05:	rcr    BYTE PTR [ecx-0x22],cl
  419d08:	ja     0x419d51
  419d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d0c:	jle    0x419d54
  419d0e:	arpl   WORD PTR [esi-0x26],ax
  419d11:	rcl    BYTE PTR [bx+si-0x120a],0xbf
  419d17:	inc    ebx
  419d18:	mov    al,0x56
  419d1a:	bnd jne 0x419d41
  419d1d:	push   esp
  419d1e:	mov    dx,WORD PTR [ecx-0x71e72268]
  419d25:	inc    ecx
  419d26:	enter  0x83dd,0xee
  419d2a:	jmp    0xf5a13166
  419d2f:	int3   
  419d30:	sbb    DWORD PTR [edx+0x7d],edx
  419d33:	xchg   esp,eax
  419d34:	(bad)  [ebp+0x40]
  419d37:	and    al,0x36
  419d39:	inc    ecx
  419d3a:	std    
  419d3b:	scas   al,BYTE PTR es:[edi]
  419d3c:	nop
  419d3d:	xor    bl,BYTE PTR [ecx+0x2372b035]
  419d43:	mov    eax,ds:0x9570a958
  419d48:	test   bl,0xeb
  419d4b:	cli    
  419d4c:	jmp    0xd07a:0xdf3f6100
  419d53:	push   ds
  419d54:	ret    
  419d55:	arpl   WORD PTR [ebx-0x589af71a],sp
  419d5b:	and    al,0xa4
  419d5d:	adc    al,0xad
  419d5f:	sbb    al,0x25
  419d61:	les    esp,FWORD PTR es:[ebp-0x66]
  419d65:	dec    edx
  419d66:	out    dx,al
  419d67:	es loopne 0x419dac
  419d6a:	xchg   esp,eax
  419d6b:	add    eax,0x6b2b1d28
  419d70:	mov    ecx,DWORD PTR [esi+edi*8]
  419d73:	lods   eax,DWORD PTR ds:[esi]
  419d74:	mov    dh,BYTE PTR [eax-0x4145dac5]
  419d7a:	out    dx,eax
  419d7b:	or     ecx,DWORD PTR [edi-0x35]
  419d7e:	push   esi
  419d7f:	ficom  DWORD PTR [ecx-0x687893a2]
  419d85:	call   0x4e496a3e
  419d8a:	inc    esi
  419d8b:	rcl    BYTE PTR [ebp+0x31bc7523],0xe8
  419d92:	aas    
  419d93:	out    0xc4,al
  419d95:	in     eax,dx
  419d96:	test   DWORD PTR ds:0x86d2125c,esp
  419d9c:	mov    ebp,0x3c72155d
  419da1:	test   BYTE PTR [ebp-0x756ff553],ah
  419da7:	das    
  419da8:	fdiv   DWORD PTR [esi+eax*4-0x10]
  419dac:	pop    es
  419dad:	test   al,0xbd
  419daf:	mov    eax,edx
  419db1:	add    BYTE PTR [edx+0x3f],ah
  419db4:	imul   edx,DWORD PTR [edi+ebx*4+0x28],0x215e6e03
  419dbc:	and    BYTE PTR [ecx+esi*8+0x3b],bl
  419dc0:	test   eax,0x600d8684
  419dc5:	ins    BYTE PTR es:[edi],dx
  419dc6:	jg     0x419e0d
  419dc8:	push   esi
  419dc9:	sbb    ch,BYTE PTR [ebp+0x1]
  419dcc:	xchg   ebp,eax
  419dcd:	mov    cl,0xb8
  419dcf:	pop    edi
  419dd0:	sbb    eax,DWORD PTR [ecx+ebx*4-0x25]
  419dd4:	lea    ebx,[ecx]
  419dd6:	mov    eax,0x49ccdaaa
  419ddb:	inc    ebx
  419ddc:	pop    ebp
  419ddd:	aad    0x95
  419ddf:	push   esi
  419de0:	jne    0x419d6a
  419de2:	jmp    0x419dcf
  419de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419de5:	cwde   
  419de6:	cwde   
  419de7:	fbld   TBYTE PTR [edx+0x6870723]
  419ded:	inc    edx
  419dee:	jns    0x419e5c
  419df0:	je     0x419d76
  419df2:	dec    eax
  419df3:	pop    es
  419df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419df5:	fiadd  WORD PTR [eax+0x3e]
  419df8:	aam    0xd5
  419dfa:	sub    bl,BYTE PTR [ebx*1-0x67320124]
  419e01:	ror    BYTE PTR [edx],0xe8
  419e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e05:	inc    ebx
  419e06:	js     0x419d9f
  419e08:	pop    ss
  419e09:	leave  
  419e0a:	lock push esi
  419e0c:	pop    ds
  419e0d:	shl    BYTE PTR [ebp+ecx*1-0x68580b87],1
  419e14:	stc    
  419e15:	cmp    eax,0x3477e52f
  419e1a:	or     DWORD PTR [ecx],edi
  419e1c:	inc    eax
  419e1d:	push   0xffffffce
  419e1f:	adc    eax,0xce867e3d
  419e24:	sahf   
  419e25:	jmp    0x419dc0
  419e27:	ins    DWORD PTR es:[edi],dx
  419e28:	imul   ebp,DWORD PTR [eax-0x9],0xffffff81
  419e2c:	ss cwde 
  419e2e:	mov    esi,0xfa70c86d
  419e33:	pop    esi
  419e34:	icebp  
  419e35:	cld    
  419e36:	mov    ?,WORD PTR [ecx+0x48]
  419e39:	mov    ds:0x49e63ad9,al
  419e3e:	ss std 
  419e40:	pop    ebp
  419e41:	add    al,0xc6
  419e43:	aam    0xd5
  419e45:	sub    al,0xe6
  419e47:	mov    eax,ds:0xa61c3be8
  419e4c:	mov    edi,0xb6bda6c
  419e51:	enter  0xca03,0x3e
  419e55:	add    ah,BYTE PTR [edx]
  419e57:	aas    
  419e58:	mov    DWORD PTR [eax-0xe],edx
  419e5b:	ja     0x419ed8
  419e5d:	dec    ecx
  419e5e:	or     eax,0xfd2afcfc
  419e63:	pop    ecx
  419e64:	cwde   
  419e65:	loop   0x419ea4
  419e67:	xchg   ebx,eax
  419e68:	test   eax,0xfd0e1132
  419e6d:	mov    dh,0xd2
  419e6f:	cli    
  419e70:	gs pop ebp
  419e72:	push   es
  419e73:	push   ebp
  419e74:	leave  
  419e75:	scas   eax,DWORD PTR es:[edi]
  419e76:	sbb    ah,dh
  419e78:	div    BYTE PTR [eax-0x3d4d393f]
  419e7e:	xor    ecx,DWORD PTR ds:0xd66d59c7
  419e84:	fdivr  st,st(5)
  419e86:	inc    ecx
  419e87:	add    al,0xcb
  419e89:	jecxz  0x419e34
  419e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e8c:	pushf  
  419e8d:	push   ebx
  419e8e:	and    DWORD PTR [esi+0x3b],edi
  419e91:	or     ebx,DWORD PTR [esi-0x2f]
  419e94:	sahf   
  419e95:	inc    ebx
  419e96:	leave  
  419e97:	pop    edx
  419e98:	jne    0x419e65
  419e9a:	and    ebx,DWORD PTR [ecx-0x40e79d6a]
  419ea0:	out    0xf2,eax
  419ea2:	(bad)  
  419ea3:	push   ds
  419ea4:	fstp   QWORD PTR [edx]
  419ea6:	push   edx
  419ea7:	pop    esi
  419ea8:	mov    ecx,0xb8cb4055
  419ead:	xchg   ebp,eax
  419eae:	add    esi,esp
  419eb0:	and    esi,DWORD PTR [ecx-0x7f]
  419eb3:	or     DWORD PTR [edi+eax*1+0x3c],ecx
  419eb7:	pop    esp
  419eb8:	mov    ecx,eax
  419eba:	lods   al,BYTE PTR ds:[esi]
  419ebb:	fist   DWORD PTR [eax-0x486c5ff]
  419ec1:	jp     0x419ecf
  419ec3:	outs   dx,DWORD PTR ds:[esi]
  419ec4:	push   ds
  419ec5:	jne    0x419e9b
  419ec7:	add    ebp,DWORD PTR [esi+ecx*2-0x32]
  419ecb:	mov    dl,0xfb
  419ecd:	jg     0x419ea9
  419ecf:	ss sub esi,esp
  419ed2:	out    0xb2,al
  419ed4:	(bad)  
  419ed5:	sub    DWORD PTR [edx],eax
  419ed7:	les    edx,FWORD PTR [eax]
  419ed9:	and    ecx,DWORD PTR [ebp+0x39f6b8ca]
  419edf:	(bad)  
  419ee1:	outs   dx,BYTE PTR ds:[esi]
  419ee2:	add    BYTE PTR [edx],dl
  419ee4:	sti    
  419ee5:	arpl   WORD PTR [edx],bp
  419ee7:	out    0xbe,al
  419ee9:	rcl    DWORD PTR [edx],0x71
  419eec:	xchg   BYTE PTR [esi+esi*1-0x48],bh
  419ef0:	loope  0x419f03
  419ef2:	hlt    
  419ef3:	xchg   edi,eax
  419ef4:	xchg   edi,eax
  419ef5:	sahf   
  419ef6:	mov    dh,0x7f
  419ef8:	cmc    
  419ef9:	dec    edx
  419efa:	ds dec esp
  419efc:	loopne 0x419f29
  419efe:	js     0x419f3d
  419f00:	aaa    
  419f01:	mov    ds:0x6426a229,eax
  419f06:	sbb    DWORD PTR [eax],eax
  419f08:	fidiv  DWORD PTR [edi]
  419f0a:	pop    es
  419f0b:	dec    edi
  419f0c:	dec    ecx
  419f0d:	pushf  
  419f0e:	cmp    edi,DWORD PTR [eax+eiz*2+0x45e94d7b]
  419f15:	fldcw  WORD PTR ds:0x5583836
  419f1b:	in     eax,dx
  419f1c:	mul    DWORD PTR ds:0xe452ff9b
  419f22:	dec    ecx
  419f23:	sub    eax,0x35182884
  419f28:	shl    BYTE PTR [edx+0x64],1
  419f2b:	sub    al,0x97
  419f2d:	cmp    DWORD PTR [esi-0x5cd52af7],edi
  419f33:	not    BYTE PTR [edi+0x40c9316d]
  419f39:	fiadd  WORD PTR ds:0x987e72f6
  419f3f:	stos   BYTE PTR es:[edi],al
  419f40:	mov    edx,0x6e617adf
  419f45:	(bad)  
  419f46:	sub    BYTE PTR [ebp-0x7de40395],cl
  419f4c:	popa   
  419f4d:	sti    
  419f4e:	out    dx,eax
  419f4f:	lahf   
  419f50:	in     eax,0x2f
  419f52:	inc    esp
  419f53:	cmc    
  419f54:	ins    BYTE PTR es:[edi],dx
  419f55:	mov    edi,0x9c4fbc8a
  419f5a:	push   cs
  419f5b:	xchg   ebx,eax
  419f5c:	sub    eax,0xb56bccdd
  419f61:	neg    BYTE PTR [edx+edi*2]
  419f64:	inc    ebp
  419f65:	fstp   TBYTE PTR [ecx-0x44]
  419f68:	(bad)  
  419f69:	push   ecx
  419f6a:	pop    ds
  419f6b:	mov    dh,0xb0
  419f6d:	(bad)  [ebp+ebx*2+0x5d305784]
  419f74:	shr    DWORD PTR [ebx+0x4d44a64b],1
  419f7a:	pop    es
  419f7b:	cli    
  419f7c:	aas    
  419f7d:	mov    edx,0xdef45c26
  419f82:	shl    BYTE PTR [edi],cl
  419f84:	test   eax,0x4aded56f
  419f89:	add    BYTE PTR [esi],dl
  419f8b:	cmp    eax,0x821c8748
  419f90:	imul   edi,edi,0x602be6cb
  419f96:	sub    ah,BYTE PTR ds:0xe1a39a73
  419f9c:	aad    0x8b
  419f9e:	ds push 0xffffffa5
  419fa1:	retf   0x84f2
  419fa4:	daa    
  419fa5:	or     ebp,DWORD PTR [ecx+0x34]
  419fa8:	cmp    ebp,DWORD PTR [ebx+0x761cab1c]
  419fae:	adc    eax,0xa1f88921
  419fb3:	call   0x76e0:0xe58690cf
  419fba:	or     BYTE PTR [edi-0xac603f1],al
  419fc0:	adc    esi,DWORD PTR [edx]
  419fc2:	add    BYTE PTR [edx],0x81
  419fc5:	test   eax,0xacc566dc
  419fca:	add    ebp,DWORD PTR ds:0x8a853ea3
  419fd0:	xchg   esi,eax
  419fd1:	dec    ebx
  419fd2:	idiv   BYTE PTR [ebx+0x46]
  419fd5:	or     DWORD PTR [esi+0x4a15236d],ebx
  419fdb:	aaa    
  419fdc:	and    DWORD PTR [ebx],esi
  419fde:	lods   al,BYTE PTR ds:[esi]
  419fdf:	mov    esi,0x18f38686
  419fe4:	inc    esi
  419fe5:	scas   al,BYTE PTR es:[edi]
  419fe6:	rol    BYTE PTR [esi-0x2f],0x7c
  419fea:	xor    eax,edi
  419fec:	cmp    al,0x8b
  419fee:	iret   
  419fef:	gs cmp eax,0xf7d2d5ec
  419ff5:	push   ebx
  419ff6:	rcl    esi,0xfa
  419ff9:	lea    ebx,[ebx+0x4bc70e2c]
  419fff:	fs push cx
  41a002:	add    eax,0xb2dec8dc
  41a007:	mov    ds:0x8e2e404b,eax
  41a00c:	aas    
  41a00d:	pop    esp
  41a00e:	inc    edx
  41a00f:	(bad)  
  41a012:	and    eax,0x4b9092b9
  41a017:	je     0x41a042
  41a019:	jnp    0x41a007
  41a01b:	popf   
  41a01c:	lahf   
  41a01d:	retf   
  41a01e:	add    DWORD PTR [esi+eiz*8],edi
  41a021:	div    BYTE PTR ds:0x56ac1614
  41a027:	in     al,0x8b
  41a029:	pop    ebx
  41a02a:	push   ebx
  41a02b:	adc    esp,DWORD PTR [ebp+0x6d]
  41a02e:	(bad)  
  41a02f:	jns    0x419fca
  41a031:	ins    DWORD PTR es:[edi],dx
  41a032:	rcr    bl,cl
  41a034:	in     al,0xf
  41a036:	inc    ecx
  41a037:	mov    ebx,0x85de6e2e
  41a03c:	sqrtps xmm7,XMMWORD PTR [ecx+edi*8+0x773e2e3c]
  41a044:	shl    BYTE PTR [edi+0x46],cl
  41a047:	imul   edx,DWORD PTR [edx-0x6a172f50],0xfffffff9
  41a04e:	fsubr  st,st(6)
  41a050:	mov    ds:0x54b220a0,al
  41a055:	ins    DWORD PTR es:[edi],dx
  41a056:	add    esi,ecx
  41a058:	pop    ss
  41a059:	popa   
  41a05a:	add    BYTE PTR [edi],dh
  41a05c:	mov    ebx,0x12e60e90
  41a061:	add    al,0x43
  41a063:	dec    esi
  41a064:	inc    esp
  41a065:	pop    ds
  41a066:	push   ds
  41a067:	mov    ds:0xbf22c615,al
  41a06c:	sahf   
  41a06d:	fmulp  st(0),st
  41a06f:	xor    al,0xf3
  41a071:	gs cmp al,0xfb
  41a074:	dec    edx
  41a075:	dec    esp
  41a076:	pop    ebx
  41a077:	aam    0x1e
  41a079:	mov    al,ds:0xc765dcda
  41a07e:	sbb    eax,0xdc8926dd
  41a083:	mov    dh,bh
  41a085:	adc    eax,0x7ddc9f7a
  41a08a:	pop    esi
  41a08b:	imul   eax,edi,0x12
  41a08e:	mov    edi,0x90dd154e
  41a093:	mov    dl,0x7c
  41a095:	clc    
  41a096:	fadd   st,st(4)
  41a098:	push   edi
  41a099:	aam    0x64
  41a09b:	dec    ecx
  41a09c:	mov    eax,ds:0x428109fc
  41a0a1:	push   edx
  41a0a2:	xchg   ebp,eax
  41a0a3:	lds    edi,FWORD PTR [eax+0x747e8441]
  41a0a9:	cmp    al,BYTE PTR [edi]
  41a0ab:	pop    ds
  41a0ac:	xchg   esp,eax
  41a0ad:	iret   
  41a0ae:	jne    0x41a035
  41a0b0:	out    0xdc,al
  41a0b2:	sbb    ebp,DWORD PTR [ebx]
  41a0b4:	inc    esp
  41a0b5:	cli    
  41a0b6:	fistp  QWORD PTR [esi+0xd295334]
  41a0bc:	inc    edx
  41a0bd:	fwait
  41a0be:	cmp    ebp,DWORD PTR [edx]
  41a0c0:	jmp    0x8b5e:0xcc4e7f87
  41a0c7:	sub    eax,0x9a6fead2
  41a0cc:	dec    edi
  41a0cd:	add    dl,bh
  41a0cf:	push   ds
  41a0d0:	outs   dx,BYTE PTR ds:[esi]
  41a0d1:	xchg   edx,eax
  41a0d2:	jge    0x41a128
  41a0d4:	into   
  41a0d5:	jmp    0x4a0f:0x94d6eb58
  41a0dc:	repz shl BYTE PTR [esi],cl
  41a0df:	jmp    0x41a077
  41a0e1:	or     DWORD PTR [edx+0x7aa1a247],esp
  41a0e7:	adc    eax,DWORD PTR [ebx-0x59]
  41a0ea:	jge    0x41a06e
  41a0ec:	inc    edi
  41a0ed:	iret   
  41a0ee:	and    BYTE PTR [edi],0x5c
  41a0f1:	sbb    ebx,eax
  41a0f3:	les    edi,FWORD PTR [eax-0x6d98377c]
  41a0f9:	sahf   
  41a0fa:	dec    eax
  41a0fb:	out    0x88,eax
  41a0fd:	fisttp QWORD PTR [eax+edi*4+0x5d962f14]
  41a104:	cwde   
  41a105:	icebp  
  41a106:	daa    
  41a107:	and    edi,DWORD PTR [eax+ebp*4]
  41a10a:	sti    
  41a10b:	add    al,0x52
  41a10d:	mov    al,ds:0xabc9d64b
  41a112:	cdq    
  41a113:	imul   edi,DWORD PTR [eax-0x2],0x41f29767
  41a11a:	imul   ebp,edx,0x9193ad0
  41a120:	gs retf 0x2ed6
  41a124:	jb     0x41a100
  41a126:	sahf   
  41a127:	push   edx
  41a128:	leave  
  41a129:	loopne 0x41a1a2
  41a12b:	xchg   ecx,eax
  41a12c:	out    0xd1,al
  41a12e:	sahf   
  41a12f:	(bad)  
  41a130:	loope  0x41a164
  41a132:	mov    esi,0x2fcba3d2
  41a137:	jo     0x41a145
  41a139:	jns    0x41a0fb
  41a13b:	xlat   BYTE PTR ds:[ebx]
  41a13c:	test   BYTE PTR [ebp+0x7cc5511],bh
  41a142:	push   ebp
  41a143:	or     bh,BYTE PTR [edi-0x49]
  41a146:	xor    BYTE PTR [eax-0x18db9424],bl
  41a14c:	xchg   ebp,eax
  41a14d:	mov    bl,0x82
  41a14f:	mov    eax,ds:0x4cdb8d36
  41a154:	scas   al,BYTE PTR es:[edi]
  41a155:	inc    esi
  41a156:	mov    ds:0x1feb5bf1,eax
  41a15b:	sbb    BYTE PTR [eax+0x41576540],dl
  41a161:	jno    0x41a17e
  41a163:	add    bh,BYTE PTR [edx+0x49bb2d41]
  41a169:	(bad)  
  41a16a:	lock outs dx,DWORD PTR ds:[esi]
  41a16c:	adc    ah,dl
  41a16e:	jns    0x41a16d
  41a170:	hlt    
  41a171:	ret    0x9d69
  41a174:	in     al,dx
  41a175:	push   ebp
  41a176:	fs inc esp
  41a178:	pop    edx
  41a179:	push   ds
  41a17a:	loope  0x41a18f
  41a17c:	jno    0x41a1dd
  41a17e:	sub    DWORD PTR ds:0x7adbd708,esi
  41a184:	lods   eax,DWORD PTR ds:[esi]
  41a185:	mov    ah,0x3b
  41a187:	xchg   edx,eax
  41a188:	hlt    
  41a189:	jo     0x41a1e7
  41a18b:	push   es
  41a18c:	push   edx
  41a18d:	repnz push edx
  41a18f:	inc    ebp
  41a190:	pop    eax
  41a191:	int    0xb2
  41a193:	hlt    
  41a194:	add    eax,0xab43fa4f
  41a199:	out    dx,al
  41a19a:	scas   al,BYTE PTR es:[edi]
  41a19b:	and    eax,0xec60d988
  41a1a0:	pop    eax
  41a1a1:	xor    al,0x36
  41a1a3:	xchg   ecx,eax
  41a1a4:	dec    esp
  41a1a5:	aam    0xdc
  41a1a7:	leave  
  41a1a8:	cs or  eax,0x2517aa84
  41a1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1af:	push   0x2a
  41a1b1:	add    ah,BYTE PTR [esi-0xc]
  41a1b4:	popf   
  41a1b5:	in     eax,dx
  41a1b6:	ja     0x41a1af
  41a1b8:	das    
  41a1b9:	and    ah,BYTE PTR [eax+0x45a3a50f]
  41a1bf:	pop    ss
  41a1c0:	inc    ebp
  41a1c1:	call   0xfef1:0x68e6f13
  41a1c8:	pop    esp
  41a1c9:	jne    0x41a166
  41a1cb:	xor    eax,0x1bd366cd
  41a1d0:	and    DWORD PTR [eax+0x2bf2a6c5],ecx
  41a1d6:	inc    ecx
  41a1d7:	sti    
  41a1d8:	sahf   
  41a1d9:	pop    eax
  41a1da:	sub    ecx,ecx
  41a1dc:	shl    bh,cl
  41a1de:	push   edx
  41a1df:	ins    DWORD PTR es:[edi],dx
  41a1e0:	xchg   edx,eax
  41a1e1:	xchg   esp,eax
  41a1e2:	cmp    eax,0xf0e369fd
  41a1e7:	or     ebx,DWORD PTR [eax-0x12]
  41a1ea:	nop
  41a1eb:	retf   0x8a08
  41a1ee:	mov    ds:0x2765e9,al
  41a1f3:	push   edx
  41a1f4:	or     eax,0x95405d72
  41a1f9:	retf   0x8ca7
  41a1fc:	sub    ecx,DWORD PTR [edi+0x57]
  41a1ff:	xchg   esp,eax
  41a200:	inc    esi
  41a201:	ja     0x41a223
  41a203:	sbb    DWORD PTR [ecx-0x5],edi
  41a206:	dec    ebp
  41a207:	sahf   
  41a208:	ret    
  41a209:	mov    ebp,DWORD PTR [edi+0x7b]
  41a20c:	mov    ebx,0x1a002323
  41a211:	dec    ecx
  41a212:	sub    eax,0xb8052fac
  41a217:	sbb    ch,BYTE PTR [ecx+0x25]
  41a21a:	repnz pop ecx
  41a21c:	adc    eax,0x8b8127f5
  41a221:	bound  ecx,QWORD PTR [edx+eiz*2-0x29a1c68f]
  41a228:	shr    BYTE PTR [ecx+0x2b828704],1
  41a22e:	dec    edx
  41a22f:	mov    edx,DWORD PTR [edi+0x42]
  41a232:	ret    
  41a233:	cli    
  41a234:	sbb    eax,ebx
  41a236:	jmp    0x5a9f:0xaaaa24ae
  41a23d:	pop    edi
  41a23e:	add    DWORD PTR [esp+edi*8],ecx
  41a241:	enter  0x5249,0x5b
  41a245:	fldcw  WORD PTR [esi]
  41a247:	(bad)  [edx-0x61470623]
  41a24d:	hlt    
  41a24e:	dec    esp
  41a24f:	pusha  
  41a250:	mov    al,0xd8
  41a252:	cmp    eax,0xc1808f9a
  41a257:	or     DWORD PTR [ebp+0x1],edi
  41a25a:	adc    bl,BYTE PTR [edx-0x4d]
  41a25d:	in     al,dx
  41a25e:	xchg   dl,ah
  41a260:	sbb    ebx,DWORD PTR [ebx]
  41a262:	sbb    eax,0x13984c4b
  41a267:	and    eax,0xa328024a
  41a26c:	add    edx,DWORD PTR [ecx+ecx*2]
  41a26f:	xchg   BYTE PTR [esi+esi*2-0x78],dl
  41a273:	sub    al,0x1f
  41a275:	pop    edi
  41a276:	dec    ebp
  41a277:	push   ss
  41a278:	and    esi,DWORD PTR [edx-0x18b0fb4b]
  41a27e:	out    dx,eax
  41a27f:	xchg   ecx,eax
  41a280:	mov    al,0x42
  41a282:	(bad)  
  41a283:	fld    QWORD PTR [eax+0x34bfaedf]
  41a289:	cmp    al,0x4b
  41a28b:	cmc    
  41a28c:	mov    ds:0x8ee69748,al
  41a291:	ins    BYTE PTR es:[edi],dx
  41a292:	shl    al,cl
  41a294:	es dec eax
  41a296:	shl    DWORD PTR [eax+eiz*2+0x4bcd9e01],0x55
  41a29e:	stc    
  41a29f:	retf   
  41a2a0:	sbb    al,0x8f
  41a2a2:	jnp    0x41a2da
  41a2a4:	mov    eax,DWORD PTR [esp+ebp*2]
  41a2a7:	pop    esp
  41a2a8:	mov    WORD PTR [eax-0x6c],?
  41a2ab:	jne    0x41a23c
  41a2ad:	mov    ds:0x69977884,al
  41a2b2:	sbb    al,0xcf
  41a2b4:	shl    DWORD PTR [esi-0x1d],cl
  41a2b7:	push   edx
  41a2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2b9:	mov    esi,0x741a9ec1
  41a2be:	adc    al,0x9b
  41a2c0:	lock xor BYTE PTR [ebx-0x734c552],al
  41a2c7:	and    eax,0x70f762b
  41a2cc:	inc    ecx
  41a2cd:	mov    dl,0x3e
  41a2cf:	stos   DWORD PTR es:[edi],eax
  41a2d0:	lahf   
  41a2d1:	(bad)  
  41a2d2:	aam    0x5a
  41a2d4:	arpl   WORD PTR [edx-0x2abbe03f],di
  41a2da:	xchg   ecx,eax
  41a2db:	jecxz  0x41a263
  41a2dd:	xor    bh,bl
  41a2df:	loop   0x41a338
  41a2e1:	fcmovnbe st,st(5)
  41a2e3:	sbb    eax,0x9521c76d
  41a2e8:	or     BYTE PTR [ebp+0x0],bl
  41a2eb:	and    eax,0xb6f49bbc
  41a2f0:	rol    DWORD PTR [ecx+esi*2+0x7d],0x1a
  41a2f5:	xor    eax,0xe2d48cfa
  41a2fa:	lea    esp,[ebx-0x27]
  41a2fd:	and    eax,0x6659dc96
  41a302:	mov    bh,0xe4
  41a304:	pop    edi
  41a305:	fcom   QWORD PTR [ebx-0x29]
  41a308:	mov    ecx,edx
  41a30a:	rol    DWORD PTR [eax],1
  41a30c:	rcr    BYTE PTR [ebp-0x47],1
  41a30f:	or     BYTE PTR [edx+0x10],dh
  41a312:	fld    DWORD PTR [esi+0x26d9057e]
  41a318:	mov    ebp,0xc72f3113
  41a31d:	loope  0x41a2fb
  41a31f:	add    BYTE PTR [eax+0x3fc9f323],bh
  41a325:	out    0xef,al
  41a327:	jmp    0xd9f55cfe
  41a32c:	pushf  
  41a32d:	dec    edi
  41a32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a32f:	outs   dx,BYTE PTR ds:[esi]
  41a330:	jecxz  0x41a367
  41a332:	mov    ebx,0x1de18ee
  41a337:	aaa    
  41a338:	lock fwait
  41a33a:	cmp    ch,BYTE PTR [esi+0x284f3c82]
  41a340:	retf   
  41a341:	mov    ebx,0xe4e0d459
  41a346:	xor    eax,0x239a8247
  41a34b:	int3   
  41a34c:	add    cl,BYTE PTR [ecx-0x4e45398b]
  41a352:	(bad)  
  41a353:	jmp    0xec96:0x96a23afc
  41a35a:	scas   al,BYTE PTR es:[edi]
  41a35b:	mov    BYTE PTR [edi+0x7f],al
  41a35e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a35f:	in     al,0x76
  41a361:	aam    0x98
  41a363:	jne    0x41a396
  41a365:	js     0x41a337
  41a367:	hlt    
  41a368:	jns    0x41a316
  41a36a:	mov    esp,0xe785a8e6
  41a36f:	jae    0x41a344
  41a371:	push   0x2b0946b3
  41a376:	ins    BYTE PTR es:[edi],dx
  41a377:	stos   BYTE PTR es:[edi],al
  41a378:	xchg   edx,eax
  41a379:	mov    cl,0xec
  41a37b:	mov    ebx,eax
  41a37d:	ja     0x41a368
  41a37f:	mov    dl,0x76
  41a381:	or     DWORD PTR [esi-0x22193e3],ebp
  41a387:	inc    eax
  41a388:	pop    edi
  41a389:	sub    ah,BYTE PTR [ebx]
  41a38b:	push   esi
  41a38c:	std    
  41a38d:	and    DWORD PTR [ebp-0x47],0x49
  41a391:	fcmovnu st,st(6)
  41a393:	idiv   BYTE PTR [edx+0xf]
  41a396:	in     al,0x75
  41a398:	imul   edx,DWORD PTR [edi+ecx*1+0x5c],0xc2960035
  41a3a0:	cmp    eax,0xd63c0468
  41a3a5:	xor    DWORD PTR [eax+0x0],0x24
  41a3a9:	imul   esi,DWORD PTR [esi],0xffffffbe
  41a3ac:	jmp    0x8b11:0x8212cef5
  41a3b3:	pop    edi
  41a3b4:	fsub   QWORD PTR [eax+0x48]
  41a3b7:	xor    BYTE PTR [eax-0x19],ah
  41a3ba:	(bad)  
  41a3bb:	pop    ds
  41a3bc:	fnstsw WORD PTR [ebx+0x7135e514]
  41a3c2:	inc    esp
  41a3c3:	mov    bh,0x8a
  41a3c5:	sub    esp,esp
  41a3c7:	mov    esi,0x56b8a613
  41a3cc:	mov    WORD PTR [ebp+0x18faab06],es
  41a3d2:	xor    BYTE PTR [edi-0x420028d],bl
  41a3d8:	jns    0x41a3b7
  41a3da:	dec    ebp
  41a3db:	jmp    0x41a40c
  41a3dd:	mov    dl,0x3f
  41a3df:	in     al,dx
  41a3e0:	push   esp
  41a3e1:	pop    ebp
  41a3e2:	or     BYTE PTR [ebp-0x42],0x5b
  41a3e6:	mov    dl,0xb2
  41a3e8:	(bad)  
  41a3e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3ea:	popa   
  41a3eb:	mov    ds:0x32ac0e51,eax
  41a3f0:	repnz push edi
  41a3f2:	inc    eax
  41a3f3:	cwde   
  41a3f4:	fs repz jb 0x41a3d4
  41a3f8:	out    0x72,al
  41a3fa:	xchg   edi,eax
  41a3fb:	mov    ch,0x84
  41a3fd:	inc    ebx
  41a3fe:	or     al,0x78
  41a400:	push   esp
  41a401:	mov    eax,0xb1fe4861
  41a406:	mov    bl,0x18
  41a408:	stos   DWORD PTR es:[edi],eax
  41a409:	mov    cl,0xa0
  41a40b:	mov    dh,0x76
  41a40d:	jnp    0x41a3ff
  41a40f:	fcom   st(6)
  41a411:	data16 data16 out dx,al
  41a414:	nop
  41a415:	inc    esp
  41a416:	sar    BYTE PTR [ebp+ebp*8+0x7e320ffa],cl
  41a41d:	mov    eax,0x9dab08e8
  41a422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a423:	es xchg edx,eax
  41a425:	jle    0x41a446
  41a427:	fcmovnb st,st(4)
  41a429:	aaa    
  41a42a:	fisub  DWORD PTR [edi-0x3d]
  41a42d:	loope  0x41a42b
  41a42f:	fcmovb st,st(6)
  41a431:	cmc    
  41a432:	push   esi
  41a433:	xchg   esi,eax
  41a434:	pop    esi
  41a435:	mov    eax,ds:0x6e72a967
  41a43a:	cli    
  41a43b:	int3   
  41a43c:	adc    al,0xa1
  41a43e:	scas   eax,DWORD PTR es:[edi]
  41a43f:	call   0xb738c958
  41a444:	call   0x9a04:0xece45217
  41a44b:	clc    
  41a44c:	add    al,0x75
  41a44e:	je     0x41a433
  41a450:	(bad)  
  41a451:	pop    ebx
  41a452:	scas   eax,DWORD PTR es:[edi]
  41a453:	sub    edi,DWORD PTR [edi+ebx*4+0x45]
  41a457:	gs mov dh,0x66
  41a45a:	hlt    
  41a45b:	int3   
  41a45c:	retf   
  41a45d:	out    dx,al
  41a45e:	cwde   
  41a45f:	add    DWORD PTR [edi-0xc31465c],ecx
  41a465:	pop    esp
  41a466:	clc    
  41a467:	pop    esi
  41a468:	xor    eax,0xac5c4b85
  41a46d:	ror    BYTE PTR [esi],1
  41a46f:	mov    cl,0xc4
  41a471:	cli    
  41a472:	jns    0x41a41c
  41a474:	push   ss
  41a475:	fcomp  DWORD PTR [esi+0x3a]
  41a478:	mov    eax,ds:0x65b5d76a
  41a47d:	mov    bl,0xf7
  41a47f:	das    
  41a480:	inc    ebp
  41a481:	add    bl,BYTE PTR [ebp-0x43]
  41a484:	mov    eax,ds:0xa0035d83
  41a489:	cmc    
  41a48a:	ss xchg ebp,eax
  41a48c:	pop    esi
  41a48d:	mov    ds:0x37a2a98a,al
  41a492:	inc    edx
  41a493:	jge    0x41a46b
  41a495:	sti    
  41a496:	les    eax,FWORD PTR [esi+ecx*1+0x5b4f4405]
  41a49d:	jle    0x41a4a1
  41a49f:	lds    edi,FWORD PTR [edi+0x673b6b51]
  41a4a5:	jecxz  0x41a4e0
  41a4a7:	jp     0x41a4ba
  41a4a9:	xchg   edx,eax
  41a4aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4ab:	mov    esp,0x6d2c9b6c
  41a4b0:	les    ebx,FWORD PTR [ecx-0x1]
  41a4b3:	mov    edi,0xb1f52092
  41a4b8:	test   eax,0xff631e53
  41a4bd:	pop    eax
  41a4be:	add    edx,DWORD PTR ds:0x7f7a4763
  41a4c4:	jl     0x41a524
  41a4c6:	(bad)  [eax]
  41a4c8:	loopne 0x41a44d
  41a4ca:	in     al,0x14
  41a4cc:	push   cs
  41a4cd:	in     al,dx
  41a4ce:	ror    DWORD PTR [edi-0x62b00ab9],1
  41a4d4:	leave  
  41a4d5:	out    0x37,eax
  41a4d7:	call   0xf001:0xb93a34a7
  41a4de:	retf   0xa311
  41a4e1:	xor    esi,DWORD PTR [eax]
  41a4e3:	add    BYTE PTR [edi],bl
  41a4e5:	arpl   WORD PTR [esi-0x26],si
  41a4e8:	mov    dl,0xd1
  41a4ea:	addr16 inc ebx
  41a4ec:	cmp    dl,dh
  41a4ee:	pop    ebx
  41a4ef:	dec    edi
  41a4f0:	repnz in al,0xc6
  41a4f3:	out    0x19,eax
  41a4f5:	push   ds
  41a4f6:	cmp    DWORD PTR [ebx-0x65],ebx
  41a4f9:	mov    dl,0x9a
  41a4fb:	push   edi
  41a4fc:	cs pop ebx
  41a4fe:	jns    0x41a568
  41a500:	or     ch,al
  41a502:	sbb    ebp,DWORD PTR [edx]
  41a504:	push   eax
  41a505:	imul   esi,DWORD PTR [ecx],0x83a0da1
  41a50b:	ins    BYTE PTR es:[edi],dx
  41a50c:	or     edx,ecx
  41a50e:	mov    bh,BYTE PTR ds:0xe4f32ec
  41a514:	xor    cl,BYTE PTR [edx+0x9610364]
  41a51a:	stc    
  41a51b:	fwait
  41a51c:	lods   eax,DWORD PTR ds:[esi]
  41a51d:	jae    0x41a588
  41a51f:	mov    dl,0xb4
  41a521:	int3   
  41a522:	cwde   
  41a523:	xlat   BYTE PTR ds:[ebx]
  41a524:	mov    al,ds:0xd6e36df7
  41a529:	(bad)  [ebx]
  41a52b:	jle    0x41a4f2
  41a52d:	je     0x41a5a8
  41a52f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a530:	rcr    dh,cl
  41a532:	nop
  41a533:	pmulhuw mm1,QWORD PTR [edx+0x51]
  41a537:	adc    esi,DWORD PTR [ebx-0x3e]
  41a53a:	or     al,0x3
  41a53c:	push   ebx
  41a53d:	push   ebx
  41a53e:	sar    BYTE PTR [edi+0x12],0x18
  41a542:	mov    al,es:0x4d73555c
  41a548:	out    dx,al
  41a549:	sbb    eax,0x2e823a6a
  41a54e:	in     al,0x28
  41a550:	fdivr  DWORD PTR [ebx-0x21f075bd]
  41a556:	imul   ecx,DWORD PTR [edi+0x4d6148b7],0xa4a38082
  41a560:	mov    cl,0x92
  41a562:	(bad)  
  41a563:	stc    
  41a564:	mov    ds:0x97f3c8f5,eax
  41a569:	sub    cl,cl
  41a56b:	ds fs inc edi
  41a56e:	fdiv   st(4),st
  41a570:	sub    al,BYTE PTR [ebp-0x51]
  41a573:	add    DWORD PTR [eax+0x41],ecx
  41a576:	imul   eax,ecx,0xdc62546e
  41a57c:	enter  0xf7de,0xe1
  41a580:	inc    ecx
  41a581:	out    dx,al
  41a582:	pop    DWORD PTR [esi-0x41]
  41a585:	lods   al,BYTE PTR ds:[esi]
  41a586:	sbb    eax,0x6e01250a
  41a58b:	outs   dx,BYTE PTR ds:[esi]
  41a58c:	and    DWORD PTR [edx],esp
  41a58e:	sbb    bh,al
  41a590:	dec    edi
  41a591:	push   ebx
  41a592:	test   DWORD PTR [edx-0x65959c38],ecx
  41a598:	das    
  41a599:	jp     0x41a52c
  41a59b:	xor    al,0x10
  41a59d:	add    ah,BYTE PTR [ecx+ecx*4]
  41a5a0:	lods   eax,DWORD PTR ds:[esi]
  41a5a1:	sahf   
  41a5a2:	dec    edx
  41a5a3:	mov    ebx,0x2d35d7a7
  41a5a8:	sub    BYTE PTR [ebx-0x80],al
  41a5ab:	push   ds
  41a5ac:	(bad)
  41a5b1:	sub    esp,ebx
  41a5b3:	cdq    
  41a5b4:	cmp    bl,bh
  41a5b6:	mov    ah,0x66
  41a5b8:	jae    0x41a597
  41a5ba:	dec    ecx
  41a5bb:	lahf   
  41a5bc:	or     eax,DWORD PTR [eax]
  41a5be:	cmc    
  41a5bf:	xor    cl,BYTE PTR [eax]
  41a5c1:	inc    eax
  41a5c2:	out    dx,al
  41a5c3:	mov    al,0x22
  41a5c5:	icebp  
  41a5c6:	dec    al
  41a5c8:	xor    ah,al
  41a5ca:	pop    es
  41a5cb:	or     DWORD PTR [ebp+ebx*8-0x65b22318],0xc42687cb
  41a5d6:	mov    dh,0x26
  41a5d8:	add    BYTE PTR [esi],cl
  41a5da:	or     bl,BYTE PTR [ecx+0xe]
  41a5dd:	push   0x17ccaeb4
  41a5e2:	fld    QWORD PTR [edi]
  41a5e4:	into   
  41a5e5:	test   eax,0x265f3ddf
  41a5ea:	dec    eax
  41a5eb:	mov    DWORD PTR [esi+0x1b26866a],ebx
  41a5f1:	add    BYTE PTR ds:0x459e9694,ch
  41a5f7:	jl     0x41a5f9
  41a5f9:	(bad)  
  41a5fa:	inc    esi
  41a5fb:	jp     0x41a63f
  41a5fd:	jg     0x41a635
  41a5ff:	jbe    0x41a615
  41a601:	push   ds
  41a602:	sbb    eax,0x6a4c9a19
  41a607:	cwde   
  41a608:	ins    BYTE PTR es:[di],dx
  41a60a:	push   0xffffff94
  41a60c:	mov    ebx,0x2d5015dd
  41a611:	xor    cl,BYTE PTR [ebp+ecx*8+0x33]
  41a615:	sar    DWORD PTR ds:0x2e2cbae2,1
  41a61b:	pop    ds
  41a61c:	cdq    
  41a61d:	lods   eax,DWORD PTR ds:[esi]
  41a61e:	xchg   edx,eax
  41a61f:	fld    DWORD PTR [ebx-0x1c2d6cc6]
  41a625:	add    ah,BYTE PTR [ebp+0x26956acf]
  41a62b:	add    al,0xf4
  41a62d:	gs sub DWORD PTR cs:[edi],esi
  41a631:	jo     0x41a62b
  41a633:	mov    al,dh
  41a635:	pusha  
  41a636:	jmp    0x1d358c02
  41a63b:	hlt    
  41a63c:	jle    0x41a5ee
  41a63e:	xor    al,0x78
  41a640:	stos   WORD PTR es:[edi],ax
  41a642:	in     al,0x28
  41a644:	inc    esi
  41a645:	dec    edi
  41a646:	pop    ecx
  41a647:	dec    ebp
  41a648:	aas    
  41a649:	sti    
  41a64a:	(bad)  
  41a64b:	sti    
  41a64c:	jb     0x41a62f
  41a64e:	pop    esi
  41a64f:	push   edi
  41a650:	mov    cl,0x6b
  41a652:	add    ch,bh
  41a654:	in     al,0xa0
  41a656:	push   0xc4fd2d9e
  41a65b:	jae    0x41a6ac
  41a65d:	repz pop es
  41a65f:	enter  0x6268,0xef
  41a663:	and    DWORD PTR [esi-0x29],edi
  41a666:	pop    ecx
  41a667:	push   eax
  41a668:	pop    ebx
  41a669:	sahf   
  41a66a:	cli    
  41a66b:	sbb    eax,0xc87cf366
  41a670:	and    eax,0xcb480dc9
  41a675:	hlt    
  41a676:	mov    al,0x95
  41a678:	xor    eax,0x54a129f3
  41a67d:	sbb    eax,0x957dae62
  41a682:	lods   eax,DWORD PTR ds:[esi]
  41a683:	mov    ebp,0xce60cce1
  41a688:	add    DWORD PTR [edi-0x4deaf0a6],esp
  41a68e:	fdiv   st(4),st
  41a690:	sbb    al,0xb1
  41a692:	in     al,0x13
  41a694:	xchg   edx,eax
  41a695:	or     ch,BYTE PTR [eax-0x66625d11]
  41a69b:	or     dl,BYTE PTR [edi-0x5ae0f051]
  41a6a1:	fisub  DWORD PTR [ebp+0x5a]
  41a6a4:	cmp    eax,0x26be33f
  41a6a9:	mov    ds:0xe1b8de73,eax
  41a6ae:	add    al,0xe1
  41a6b0:	call   0x46af787
  41a6b5:	adc    bh,BYTE PTR [ecx-0xf]
  41a6b8:	push   0x17dd42c1
  41a6bd:	xor    ecx,DWORD PTR [esi]
  41a6bf:	popf   
  41a6c0:	add    al,0x59
  41a6c2:	sub    eax,0xa08623e9
  41a6c7:	jg     0x41a699
  41a6c9:	pop    ds
  41a6ca:	ja     0x41a730
  41a6cc:	mov    ch,0x57
  41a6ce:	in     al,0xe2
  41a6d0:	test   al,0xd7
  41a6d2:	xor    DWORD PTR [edx-0x4c],esp
  41a6d5:	mov    dh,0x2e
  41a6d7:	addr16 inc eax
  41a6d9:	dec    ebx
  41a6da:	or     DWORD PTR [esi+0x26],esp
  41a6dd:	xchg   ebp,eax
  41a6de:	sbb    BYTE PTR [esi+ebx*2+0x3b],ah
  41a6e2:	pop    ss
  41a6e3:	out    0x42,eax
  41a6e5:	clc    
  41a6e6:	push   eax
  41a6e7:	das    
  41a6e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6e9:	retf   0x61e8
  41a6ec:	das    
  41a6ed:	ja     0x41a6ca
  41a6ef:	mov    bl,0xfa
  41a6f1:	xor    ebx,eax
  41a6f3:	ret    
  41a6f4:	fist   DWORD PTR [ebx+0x5b388ce6]
  41a6fa:	mov    ds:0xb662eaff,al
  41a6ff:	fnstcw WORD PTR [edi-0x12]
  41a702:	pusha  
  41a703:	shr    DWORD PTR [ecx-0x5b],cl
  41a706:	pop    esi
  41a707:	dec    ecx
  41a709:	pop    ebp
  41a70a:	mov    edi,0x1ff26920
  41a70f:	jnp    0x41a6bf
  41a711:	or     al,0x44
  41a713:	push   0x65
  41a715:	sub    eax,DWORD PTR [ebp+0x4035b810]
  41a71b:	inc    ebp
  41a71c:	je     0x41a72a
  41a71e:	dec    edi
  41a71f:	call   0x172f52ee
  41a724:	(bad)  
  41a726:	mov    dl,0xb
  41a728:	inc    ebp
  41a729:	push   ebp
  41a72a:	out    0x45,eax
  41a72c:	sub    ch,BYTE PTR [ebx-0x3f1b9fd3]
  41a732:	imul   ebp,ebx,0x4e
  41a735:	adc    eax,0xdb9c0bf4
  41a73a:	adc    al,BYTE PTR [esi+ebp*1+0x64]
  41a73e:	jno    0x21319801
  41a744:	out    0xa3,al
  41a746:	add    ch,bl
  41a748:	repz pop ebp
  41a74a:	mov    ds:0xc042bb99,eax
  41a74f:	sbb    al,0x7c
  41a751:	int3   
  41a752:	pop    ecx
  41a753:	mov    dl,0x2f
  41a755:	mov    al,ds:0x50415553
  41a75a:	xchg   esp,eax
  41a75b:	pop    ebp
  41a75c:	data16 jle 0x41a77b
  41a75f:	cld    
  41a760:	and    al,bh
  41a762:	out    0xde,al
  41a764:	jle    0x41a73e
  41a766:	xor    ebp,DWORD PTR [edx+0x606c2ab7]
  41a76c:	aas    
  41a76d:	fs mov eax,es
  41a770:	jl     0x41a72b
  41a772:	ss (bad) 
  41a774:	dec    esi
  41a775:	push   ss
  41a776:	pop    esi
  41a777:	inc    ebx
  41a778:	push   esi
  41a779:	loop   0x41a7e4
  41a77b:	or     eax,0xa9cb6a63
  41a780:	test   BYTE PTR [ebx-0x35311224],dl
  41a786:	mov    al,ds:0x5577e442
  41a78b:	jmp    0xa3b2:0x3928f583
  41a792:	mov    BYTE PTR [eax],dl
  41a794:	addr16 mov eax,0x48cc555f
  41a79a:	xor    eax,0x894f1477
  41a79f:	enter  0xb0df,0x77
  41a7a3:	xor    DWORD PTR [ecx-0x7e],0x83a71f6b
  41a7aa:	jo     0x41a7f1
  41a7ac:	les    edx,FWORD PTR [ebx-0x3079a502]
  41a7b2:	(bad)  
  41a7b3:	repz stc 
  41a7b5:	adc    eax,0x14363f34
  41a7ba:	xor    eax,0x84c827e8
  41a7bf:	mov    cl,0x5d
  41a7c1:	jnp    0x41a753
  41a7c3:	xor    dl,BYTE PTR [edi]
  41a7c5:	jmp    0x41a74e
  41a7c7:	clc    
  41a7c8:	(bad)  
  41a7c9:	xchg   ebp,eax
  41a7ca:	popf   
  41a7cb:	test   al,0xd5
  41a7cd:	inc    ebx
  41a7ce:	popa   
  41a7cf:	jg     0x41a7b3
  41a7d1:	sub    eax,0xc6570b9b
  41a7d6:	push   cs
  41a7d7:	(bad)
  41a7da:	adc    al,0x17
  41a7dc:	xchg   DWORD PTR [edi-0x16],edx
  41a7df:	lods   al,BYTE PTR ds:[esi]
  41a7e0:	push   0x2a
  41a7e2:	cmp    BYTE PTR [ecx+ecx*2],bl
  41a7e5:	(bad)  
  41a7e6:	fcmovne st,st(4)
  41a7e8:	cmp    DWORD PTR [esi],ecx
  41a7ea:	repz mov esi,0x446aa9b6
  41a7f0:	js     0x41a7d3
  41a7f2:	popf   
  41a7f3:	cld    
  41a7f4:	dec    ecx
  41a7f5:	pop    ebp
  41a7f6:	test   DWORD PTR [ebx-0x2f],ebp
  41a7f9:	jnp    0x41a848
  41a7fb:	test   eax,0x5baae7fd
  41a800:	lock jmp 0x41a7b2
  41a803:	push   esp
  41a804:	fldcw  WORD PTR [eax]
  41a806:	mov    WORD PTR [edx+0x2e322e7a],fs
  41a80c:	imul   edi,esi,0xdd537339
  41a812:	mov    dh,0x79
  41a814:	cs mov cl,0x6f
  41a817:	adc    dl,BYTE PTR [ebp-0xd8d21b5]
  41a81d:	mov    al,ds:0x215b9266
  41a822:	fwait
  41a823:	or     edx,DWORD PTR [ebp+0x5f5e6b50]
  41a829:	mov    esp,0x163b19f
  41a82e:	ds je  0x41a863
  41a831:	jnp    0x41a7b4
  41a833:	(bad)  
  41a834:	lahf   
  41a835:	fsub   st(4),st
  41a837:	setne  BYTE PTR ds:0x3dfbbb44
  41a83e:	jmp    0xd2563399
  41a843:	dec    eax
  41a844:	call   0x1e53:0x9372bfed
  41a84b:	jge    0x41a8c3
  41a84d:	sub    DWORD PTR [eax],ebp
  41a84f:	popf   
  41a850:	xchg   DWORD PTR [eax-0x7c],edi
  41a853:	xor    al,0xf2
  41a855:	pop    ss
  41a856:	adc    eax,eax
  41a858:	(bad)  ds:0x3c50a9c5
  41a85e:	stos   DWORD PTR es:[edi],eax
  41a85f:	mov    eax,ds:0x3f8858a0
  41a864:	push   cs
  41a865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a866:	mov    ds:0x50b4e26f,eax
  41a86b:	test   dl,cl
  41a86d:	cmp    BYTE PTR [eax+esi*2],0x66
  41a871:	xchg   BYTE PTR [edx],ch
  41a873:	or     eax,0x802705bc
  41a878:	add    BYTE PTR [eax+edi*4],al
  41a87b:	enter  0x1d60,0x8a
  41a87f:	xchg   BYTE PTR [ecx],bh
  41a881:	xor    eax,DWORD PTR [eax-0x4b]
  41a884:	mov    ch,ch
  41a886:	adc    edx,edx
  41a888:	mov    ebx,0xc38a085a
  41a88d:	inc    BYTE PTR [edx-0x59]
  41a890:	lds    esi,FWORD PTR [ebx-0x46]
  41a893:	dec    eax
  41a894:	xor    al,BYTE PTR [ebp+0x517bef3a]
  41a89a:	and    dh,BYTE PTR [ebx]
  41a89c:	xchg   edx,eax
  41a89d:	and    al,0x1f
  41a89f:	rol    BYTE PTR [ecx+eax*8-0x10],cl
  41a8a3:	out    dx,al
  41a8a4:	mov    cl,0x24
  41a8a6:	cld    
  41a8a7:	and    BYTE PTR ds:0x2ba31fb0,0xc
  41a8ae:	lods   al,BYTE PTR ds:[esi]
  41a8af:	sub    cl,BYTE PTR [ecx-0x134adc02]
  41a8b5:	add    DWORD PTR ds:0xbefd2669,0x5169e031
  41a8bf:	(bad)  
  41a8c0:	in     al,0x5f
  41a8c2:	rol    DWORD PTR [edx-0x1380547c],0x38
  41a8c9:	mov    al,ds:0xaa654cb4
  41a8ce:	xchg   ebx,eax
  41a8cf:	dec    ecx
  41a8d0:	jbe    0x41a944
  41a8d2:	cdq    
  41a8d3:	aas    
  41a8d4:	inc    eax
  41a8d5:	mul    ah
  41a8d7:	mov    ds:0xbf02199c,eax
  41a8dc:	xchg   edx,eax
  41a8dd:	nop
  41a8de:	ja     0x41a958
  41a8e0:	inc    esp
  41a8e1:	add    eax,0xdf83f2fc
  41a8e6:	int3   
  41a8e7:	in     al,0xb3
  41a8e9:	jb     0x41a8d3
  41a8eb:	mov    edi,0x7ecfb1b0
  41a8f0:	sti    
  41a8f1:	call   0x5b5:0xe99705
  41a8f8:	or     dl,bh
  41a8fa:	retf   
  41a8fb:	fcom   QWORD PTR [esi]
  41a8fd:	cmp    BYTE PTR [esi-0x1494df22],bh
  41a903:	mov    eax,0xc4db065f
  41a908:	std    
  41a909:	dec    esi
  41a90a:	rcr    dh,cl
  41a90c:	jl     0x41a98d
  41a90e:	dec    ecx
  41a90f:	push   esp
  41a910:	retf   0xd9e6
  41a913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a914:	out    dx,al
  41a915:	out    0xcc,al
  41a917:	pop    ss
  41a918:	test   BYTE PTR [edi],dl
  41a91a:	dec    edx
  41a91b:	fsub   st,st(7)
  41a91d:	xor    ah,BYTE PTR [ebx]
  41a91f:	out    0xcb,al
  41a921:	or     DWORD PTR [edi+0x9],esi
  41a924:	leave  
  41a925:	aaa    
  41a926:	jae    0x41a912
  41a928:	inc    eax
  41a929:	daa    
  41a92a:	call   0xefc40668
  41a92f:	inc    edi
  41a930:	ss in  eax,dx
  41a932:	add    BYTE PTR [eax+eiz*8],bh
  41a935:	push   es
  41a936:	lods   eax,DWORD PTR ds:[esi]
  41a937:	and    al,al
  41a939:	jmp    0x34d4:0xdff8f1ff
  41a940:	xchg   BYTE PTR [ecx],ch
  41a942:	xor    BYTE PTR [edi+0x6d],ah
  41a945:	mov    ebx,0x40b570f7
  41a94a:	hlt    
  41a94b:	and    al,0x55
  41a94d:	ror    BYTE PTR ds:0x37bafec,1
  41a953:	mov    WORD PTR ds:0x453e77c,cs
  41a959:	mov    edi,0xefd795ce
  41a95e:	mov    esi,0xb87266c2
  41a963:	push   edx
  41a964:	mov    fs,eax
  41a966:	(bad)  
  41a967:	jne    0x41a8f6
  41a969:	push   cs
  41a96a:	popa   
  41a96b:	popf   
  41a96c:	fdiv   QWORD PTR [ecx]
  41a96e:	mov    al,ds:0x386ef1fc
  41a973:	dec    ebx
  41a974:	xchg   ebp,eax
  41a975:	outs   dx,DWORD PTR ds:[esi]
  41a976:	mov    ds:0x3c480896,al
  41a97b:	push   0x95b2bcd
  41a980:	add    edx,DWORD PTR [edx-0x46847a]
  41a986:	aaa    
  41a987:	(bad)  
  41a988:	push   edx
  41a989:	cmp    eax,0x1cbc218e
  41a98e:	adc    BYTE PTR [esi],0x96
  41a991:	push   ecx
  41a992:	dec    ecx
  41a993:	or     al,0x30
  41a995:	pop    ds
  41a996:	mov    DWORD PTR [ebp+ecx*8-0x7f232d25],esi
  41a99d:	or     DWORD PTR [edi+eiz*2+0x5f],esp
  41a9a1:	lock in al,dx
  41a9a3:	dec    edx
  41a9a4:	mov    al,ds:0x9269cdb7
  41a9a9:	cmp    edx,DWORD PTR [eax]
  41a9ab:	adc    DWORD PTR [edi+eax*4-0x2f],edi
  41a9af:	(bad)  
  41a9b0:	fild   DWORD PTR [ebx+0x6d]
  41a9b3:	scas   al,BYTE PTR es:[edi]
  41a9b4:	mov    bl,0x22
  41a9b6:	addr16 mov ebx,0x8422a334
  41a9bc:	sub    al,cl
  41a9be:	xchg   edx,eax
  41a9bf:	stc    
  41a9c0:	hlt    
  41a9c1:	adc    ebp,ebx
  41a9c3:	pop    ebx
  41a9c4:	cwde   
  41a9c5:	jle    0x41a99c
  41a9c7:	dec    esi
  41a9c8:	xor    edi,DWORD PTR [edi-0x15b4cd93]
  41a9ce:	(bad)  
  41a9cf:	and    BYTE PTR [edx+0x25],dl
  41a9d2:	jbe    0x41a9be
  41a9d4:	add    ch,ah
  41a9d6:	lods   al,BYTE PTR ds:[esi]
  41a9d7:	jne    0x41aa4b
  41a9d9:	dec    eax
  41a9da:	je     0x41aa22
  41a9dc:	shr    BYTE PTR ds:0xd6eebc6c,1
  41a9e2:	in     al,dx
  41a9e3:	das    
  41a9e4:	ins    DWORD PTR es:[edi],dx
  41a9e5:	jge    0x41aa5f
  41a9e7:	adc    eax,0xd88864c1
  41a9ec:	shl    DWORD PTR [edi],1
  41a9ee:	push   ebx
  41a9ef:	rol    DWORD PTR [ebx+0x40d3179b],cl
  41a9f5:	rdtsc  
  41a9f7:	es iret 
  41a9f9:	sahf   
  41a9fa:	push   0x5f9351df
  41a9ff:	jmp    0xc94d8650
  41aa04:	cmp    bl,BYTE PTR [ebx+0x4a]
  41aa07:	out    dx,al
  41aa08:	sbb    al,ch
  41aa0a:	xor    BYTE PTR [ecx],cl
  41aa0c:	ins    DWORD PTR es:[edi],dx
  41aa0d:	jb     0x41a9a8
  41aa0f:	jmp    0xed5c:0x74abbc3f
  41aa16:	fs in  al,0xb2
  41aa19:	lahf   
  41aa1a:	mov    ?,WORD PTR [edx+ebp*1]
  41aa1d:	mov    ds:0x6cb6f398,eax
  41aa22:	sbb    BYTE PTR [eax],bl
  41aa24:	scas   al,BYTE PTR es:[edi]
  41aa25:	jl     0x41a9ad
  41aa27:	inc    esp
  41aa28:	mov    ecx,0xf8898949
  41aa2d:	retf   0x6ecc
  41aa30:	dec    ecx
  41aa31:	jmp    0x525a20ae
  41aa36:	mov    bh,0x7e
  41aa38:	push   0x0
  41aa3a:	outs   dx,DWORD PTR ds:[esi]
  41aa3b:	lods   eax,DWORD PTR ds:[esi]
  41aa3c:	shr    BYTE PTR [edi],1
  41aa3e:	mov    ch,0xa
  41aa40:	and    eax,0x8c2170c1
  41aa45:	pop    ebp
  41aa46:	sbb    DWORD PTR ss:[ebp+0x18845566],0x14
  41aa4e:	dec    ebp
  41aa4f:	xor    DWORD PTR [edx+edx*1+0x18],edi
  41aa53:	jg     0x41aa93
  41aa55:	(bad)  
  41aa56:	and    eax,0xefffb529
  41aa5b:	mov    edx,0x8a128634
  41aa60:	dec    edi
  41aa61:	aam    0x1b
  41aa63:	imul   esi,ebx,0xffffffda
  41aa66:	sti    
  41aa67:	mov    eax,ds:0x801ce446
  41aa6c:	repz int 0x38
  41aa6f:	dec    DWORD PTR [ecx+0x32]
  41aa72:	xchg   esi,eax
  41aa73:	or     DWORD PTR [ecx-0x37],eax
  41aa76:	lahf   
  41aa77:	adc    eax,DWORD PTR [edi+0x5c]
  41aa7a:	out    dx,eax
  41aa7b:	cmp    al,0xf3
  41aa7d:	std    
  41aa7e:	and    al,0x71
  41aa80:	inc    al
  41aa82:	outs   dx,DWORD PTR ds:[esi]
  41aa83:	imul   esp,DWORD PTR [ebx],0xf44e1c97
  41aa89:	lds    esi,FWORD PTR [edx+0x7d]
  41aa8c:	and    al,0x4f
  41aa8e:	cwde   
  41aa8f:	gs jmp 0x41aa42
  41aa92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa93:	das    
  41aa94:	add    bh,BYTE PTR [ebx+0x1b]
  41aa97:	imul   BYTE PTR [edi+0x75095bd6]
  41aa9d:	fist   WORD PTR [ebp-0x2]
  41aaa0:	cdq    
  41aaa1:	clc    
  41aaa2:	mov    eax,0xf7942f28
  41aaa7:	das    
  41aaa8:	out    dx,al
  41aaa9:	mov    dh,0x8f
  41aaab:	inc    edx
  41aaac:	xchg   edx,eax
  41aaad:	or     bl,ch
  41aaaf:	mov    cl,0xb
  41aab1:	adc    ecx,DWORD PTR [ecx+0x91b2024]
  41aab7:	ds inc esi
  41aab9:	icebp  
  41aaba:	push   ebp
  41aabb:	into   
  41aabc:	icebp  
  41aabd:	dec    ecx
  41aabe:	push   ss
  41aabf:	and    ecx,DWORD PTR [edx-0x52]
  41aac2:	(bad)  
  41aac3:	ins    DWORD PTR es:[edi],dx
  41aac4:	es inc eax
  41aac6:	addr16 cli 
  41aac8:	in     eax,dx
  41aac9:	cs mov al,0x5f
  41aacc:	inc    edx
  41aacd:	pop    esp
  41aace:	push   ds
  41aacf:	test   al,0xb
  41aad1:	mov    BYTE PTR ds:[edx+eax*4],cl
  41aad5:	clc    
  41aad6:	sahf   
  41aad7:	sub    al,0x59
  41aad9:	nop
  41aada:	pop    ecx
  41aadb:	mov    bl,cl
  41aadd:	sub    al,0xce
  41aadf:	xor    ch,BYTE PTR [esi+esi*4+0x387d78ca]
  41aae6:	fidivr WORD PTR [ebx+0x72]
  41aae9:	xchg   DWORD PTR [ebp-0x1c82f4bd],edx
  41aaef:	inc    esp
  41aaf0:	ja     0x41ab44
  41aaf2:	out    0x4c,eax
  41aaf4:	inc    ebp
  41aaf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaf6:	das    
  41aaf7:	fs (bad) 
  41aaf9:	fcmovnb st,st(2)
  41aafb:	mov    eax,gs
  41aafd:	or     bl,al
  41aaff:	rcr    DWORD PTR [eax+0xec4238],1
  41ab05:	std    
  41ab06:	adc    BYTE PTR [edx+0x3b],al
  41ab09:	out    dx,al
  41ab0a:	call   0x707b3c09
  41ab0f:	out    0x12,eax
  41ab11:	das    
  41ab12:	sbb    eax,0x85dddeb0
  41ab17:	mov    esp,0x8448d455
  41ab1c:	push   0xa3a5ce28
  41ab21:	adc    BYTE PTR [edx-0x27a70905],al
  41ab27:	dec    eax
  41ab28:	inc    esp
  41ab29:	mov    esp,DWORD PTR [ebp-0xe85519d]
  41ab2f:	ins    DWORD PTR es:[edi],dx
  41ab30:	in     al,0x3e
  41ab32:	pusha  
  41ab33:	mov    esp,0xb274934c
  41ab38:	addr16 push cs
  41ab3a:	pusha  
  41ab3b:	xchg   edi,eax
  41ab3c:	stc    
  41ab3d:	and    al,BYTE PTR [edi+0xd]
  41ab40:	fistp  DWORD PTR [edx+ebx*8+0x1a252c6]
  41ab47:	sbb    ch,BYTE PTR [ebx-0x3821d7b8]
  41ab4d:	mov    DWORD PTR [ebp+0x6f],edi
  41ab50:	test   eax,0x71a36447
  41ab55:	pop    edx
  41ab56:	add    ecx,0x5708f8
  41ab5c:	imul   ecx,edx
  41ab5f:	mov    DWORD PTR [ebp-0x58],ecx
  41ab62:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab65:	mov    edx,DWORD PTR [ebp-0x54]
  41ab68:	add    ecx,0x64f8da
  41ab6e:	or     ecx,edx
  41ab70:	mov    DWORD PTR [ebp-0x54],ecx
  41ab73:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab76:	mov    edx,DWORD PTR [ebp-0x50]
  41ab79:	add    ecx,0x242ebed
  41ab7f:	xor    ecx,edx
  41ab81:	mov    DWORD PTR [ebp-0x50],ecx
  41ab84:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab87:	mov    edx,DWORD PTR [ebp-0x4c]
  41ab8a:	add    ecx,edi
  41ab8c:	and    ecx,edx
  41ab8e:	mov    DWORD PTR [ebp-0x4c],ecx
  41ab91:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab94:	mov    edx,DWORD PTR [ebp-0x48]
  41ab97:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ab9e:	mov    DWORD PTR [ebp-0x48],ecx
  41aba1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba4:	mov    edx,0xfa5e15e2
  41aba9:	sub    edx,ecx
  41abab:	add    edx,DWORD PTR [ebp-0x44]
  41abae:	mov    DWORD PTR [ebp-0x44],edx
  41abb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb4:	xor    ecx,eax
  41abb6:	add    ecx,esi
  41abb8:	jne    0x4187b7
  41abbe:	mov    ecx,DWORD PTR [ebp-0x8]
  41abc1:	xor    ecx,eax
  41abc3:	mov    eax,DWORD PTR [ebp+0x10]
  41abc6:	add    ecx,esi
  41abc8:	mov    DWORD PTR [eax],ecx
  41abca:	pop    edi
  41abcb:	pop    esi
  41abcc:	pop    ebx
  41abcd:	leave  
  41abce:	ret    0xc
  41abd1:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41abd7:	inc    edx
  41abd8:	add    BYTE PTR [eax],cl
  41abda:	mov    al,ds:0xa00c0042
  41abdf:	inc    edx
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    al,ds:0xa0140042
  41abe7:	inc    edx
  41abe8:	add    BYTE PTR [eax],bl
  41abea:	mov    al,ds:0xa01c0042
  41abef:	inc    edx
  41abf0:	add    BYTE PTR [eax],al
  41abf2:	rol    BYTE PTR [edx+0x0],1
  41abf5:	add    al,0xd0
  41abf7:	inc    edx
  41abf8:	add    BYTE PTR [eax],cl
  41abfa:	rol    BYTE PTR [edx+0x0],1
  41abfd:	or     al,0xd0
  41abff:	inc    edx
  41ac00:	add    BYTE PTR [eax],dl
  41ac02:	rol    BYTE PTR [edx+0x0],1
  41ac05:	adc    al,0xd0
  41ac07:	inc    edx
  41ac08:	add    BYTE PTR [eax],bl
  41ac0a:	rol    BYTE PTR [edx+0x0],1
  41ac0d:	sbb    al,0xd0
  41ac0f:	inc    edx
	...
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	pop    esp
  41ac26:	nop
  41ac27:	dec    ebp
  41ac28:	add    BYTE PTR [eax],al
  41ac2a:	add    BYTE PTR [eax],al
  41ac2c:	add    al,BYTE PTR [eax]
  41ac2e:	add    BYTE PTR [eax],al
  41ac30:	cmp    eax,0xb0000000
  41ac35:	lods   al,BYTE PTR ds:[esi]
  41ac36:	add    DWORD PTR [eax],eax
  41ac38:	mov    al,0xa0
  41ac3a:	add    DWORD PTR [eax],eax
  41ac3c:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41ac42:	inc    edx
  41ac43:	add    BYTE PTR [eax],cl
  41ac45:	nop
  41ac46:	inc    edx
  41ac47:	add    BYTE PTR [eax+edx*4],cl
  41ac4a:	inc    edx
  41ac4b:	add    BYTE PTR [eax],dl
  41ac4d:	nop
  41ac4e:	inc    edx
  41ac4f:	add    BYTE PTR [eax+edx*4],dl
  41ac52:	inc    edx
  41ac53:	add    BYTE PTR [eax],bl
  41ac55:	nop
  41ac56:	inc    edx
  41ac57:	add    BYTE PTR [eax+edx*4],bl
  41ac5a:	inc    edx
  41ac5b:	add    BYTE PTR [eax],ah
  41ac5d:	nop
  41ac5e:	inc    edx
  41ac5f:	add    BYTE PTR [eax+edx*4],ah
  41ac62:	inc    edx
  41ac63:	add    BYTE PTR [eax],ch
  41ac65:	nop
  41ac66:	inc    edx
  41ac67:	add    BYTE PTR [eax],al
  41ac69:	mov    al,0x42
  41ac6b:	add    BYTE PTR [eax+esi*4],al
  41ac6e:	inc    edx
  41ac6f:	add    BYTE PTR [eax],cl
  41ac71:	mov    al,0x42
  41ac73:	add    BYTE PTR [eax+esi*4],cl
  41ac76:	inc    edx
  41ac77:	add    BYTE PTR [eax],dl
  41ac79:	mov    al,0x42
  41ac7b:	add    BYTE PTR [eax+esi*4],dl
  41ac7e:	inc    edx
  41ac7f:	add    BYTE PTR [eax],bl
  41ac81:	mov    al,0x42
  41ac83:	add    BYTE PTR [eax+esi*4],bl
  41ac86:	inc    edx
  41ac87:	add    BYTE PTR [eax],al
  41ac89:	rol    BYTE PTR [edx+0x0],0x4
  41ac8d:	rol    BYTE PTR [edx+0x0],0x8
  41ac91:	rol    BYTE PTR [edx+0x0],0xc
  41ac95:	rol    BYTE PTR [edx+0x0],0x10
  41ac99:	rol    BYTE PTR [edx+0x0],0x14
  41ac9d:	rol    BYTE PTR [edx+0x0],0x18
  41aca1:	rol    BYTE PTR [edx+0x0],0x1c
  41aca5:	rol    BYTE PTR [edx+0x0],0x0
  41aca9:	add    BYTE PTR [eax],al
  41acab:	add    BYTE PTR [eax],al
  41acad:	add    BYTE PTR [eax],al
  41acaf:	add    BYTE PTR [edx+0x53],dl
  41acb2:	inc    esp
  41acb3:	push   ebx
  41acb4:	lea    esp,[esi+0x44]
  41acb7:	jbe    0x41ac62
  41acb9:	test   DWORD PTR [ecx],ebx
  41acbb:	dec    edx
  41acbc:	mov    edx,DWORD PTR [edi]
  41acbe:	mov    cl,0x7c
  41acc0:	fimul  DWORD PTR [esi]
  41acc2:	xor    bh,BYTE PTR [esi]
  41acc4:	add    DWORD PTR [eax],eax
  41acc6:	add    BYTE PTR [eax],al
  41acc8:	inc    ebx
  41acc9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41accd:	jb     0x41ad41
  41accf:	outs   dx,BYTE PTR gs:[esi]
  41acd1:	je     0x41ad17
  41acd3:	popa   
  41acd4:	je     0x41ad37
  41acd6:	pop    esp
  41acd7:	dec    ebp
  41acd8:	outs   dx,DWORD PTR ds:[esi]
  41acd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ace1:	ins    BYTE PTR es:[edi],dx
  41ace2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ace9:	dec    esi
  41acea:	gs ja  0x41aced
  41aced:	mov    edx,DWORD PTR [ebp-0x14]
  41acf0:	sub    esp,0xe4
  41acf6:	push   ebx
  41acf7:	push   edi
  41acf8:	mov    eax,ebx
  41acfa:	xchg   ecx,eax
  41acfb:	mov    eax,DWORD PTR [ebp+0x8]
  41acfe:	mov    edi,0xf89c85b9
  41ad03:	cmp    eax,edi
  41ad05:	jne    0x41b0a1
  41ad0b:	mov    eax,DWORD PTR [ebp+0xc]
  41ad0e:	cmp    eax,0xf89c85b8
  41ad13:	jne    0x41b0a1
  41ad19:	mov    eax,DWORD PTR [ebp+0x24]
  41ad1c:	mov    DWORD PTR [ebp-0x4],eax
  41ad1f:	mov    BYTE PTR [ebp-0x18],0x3
  41ad23:	mov    BYTE PTR [ebp-0x17],0x1e
  41ad27:	mov    BYTE PTR [ebp-0x16],0x1
  41ad2b:	mov    BYTE PTR [ebp-0x15],0x4f
  41ad2f:	mov    BYTE PTR [ebp-0x14],0x48
  41ad33:	mov    BYTE PTR [ebp-0x13],0x7a
  41ad37:	mov    BYTE PTR [ebp-0x20],0xd
  41ad3b:	mov    BYTE PTR [ebp-0x1f],0xf
  41ad3f:	mov    BYTE PTR [ebp-0x1e],0x1d
  41ad43:	mov    BYTE PTR [ebp-0x1d],0x8
  41ad47:	mov    BYTE PTR [ebp-0x1c],0x4f
  41ad4b:	mov    BYTE PTR [ebp-0x1b],0x48
  41ad4f:	mov    BYTE PTR [ebp-0x1a],0x7a
  41ad53:	mov    BYTE PTR [ebp-0x28],0xf
  41ad57:	mov    BYTE PTR [ebp-0x27],0x2
  41ad5b:	mov    BYTE PTR [ebp-0x26],0x6
  41ad5f:	mov    BYTE PTR [ebp-0x25],0xf3
  41ad63:	mov    BYTE PTR [ebp-0x24],0x19
  41ad67:	mov    BYTE PTR [ebp-0x23],0xa
  41ad6b:	push   esi
  41ad6c:	mov    BYTE PTR [ebp-0x22],0x1
  41ad70:	xor    edx,edx
  41ad72:	mov    BYTE PTR [ebp-0x21],0x7a
  41ad76:	xor    esi,esi
  41ad78:	mov    eax,0xf7
  41ad7d:	lea    ecx,[ebp+esi*1-0x18]
  41ad81:	movzx  ebx,BYTE PTR [ecx]
  41ad84:	xor    ebx,0x73
  41ad87:	add    ebx,eax
  41ad89:	inc    esi
  41ad8a:	mov    BYTE PTR [ecx],bl
  41ad8c:	cmp    esi,0x6
  41ad8f:	jb     0x41ad7d
  41ad91:	xor    esi,esi
  41ad93:	lea    ecx,[ebp+esi*1-0x20]
  41ad97:	movzx  ebx,BYTE PTR [ecx]
  41ad9a:	xor    ebx,0x73
  41ad9d:	add    ebx,eax
  41ad9f:	inc    esi
  41ada0:	mov    BYTE PTR [ecx],bl
  41ada2:	cmp    esi,0x7
  41ada5:	jb     0x41ad93
  41ada7:	xor    esi,esi
  41ada9:	lea    ecx,[ebp+esi*1-0x28]
  41adad:	movzx  ebx,BYTE PTR [ecx]
  41adb0:	xor    ebx,0x73
  41adb3:	add    ebx,eax
  41adb5:	inc    esi
  41adb6:	mov    BYTE PTR [ecx],bl
  41adb8:	cmp    esi,0x8
  41adbb:	jb     0x41ada9
  41adbd:	lea    eax,[ebp-0x2c]
  41adc0:	mov    DWORD PTR [ebp-0x8],eax
  41adc3:	mov    ecx,DWORD PTR [ebp-0x8]
  41adc6:	mov    eax,0x7113fcef
  41adcb:	mov    DWORD PTR [ecx],eax
  41adcd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41add0:	cmp    ecx,eax
  41add2:	jne    0x41adde
  41add4:	mov    DWORD PTR [ebp-0x8],edi
  41add7:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41adde:	mov    eax,DWORD PTR [ebp-0x4]
  41ade1:	mov    eax,DWORD PTR [eax+0x18c]
  41ade7:	mov    ebx,0x7510899
  41adec:	mov    esi,0x3272e0
  41adf1:	cmp    DWORD PTR [eax],edx
  41adf3:	jne    0x41b03d
  41adf9:	mov    eax,DWORD PTR [ebp-0x4]
  41adfc:	mov    eax,DWORD PTR [eax+0x17c]
  41ae02:	mov    DWORD PTR [eax],edx
  41ae04:	mov    eax,DWORD PTR [ebp-0x4]
  41ae07:	mov    eax,DWORD PTR [eax+0x180]
  41ae0d:	mov    DWORD PTR [eax],edx
  41ae0f:	mov    edi,0x4e3c
  41ae14:	mov    eax,0x4f8f
  41ae19:	mov    WORD PTR [ebp-0x78],ax
  41ae1d:	mov    eax,edi
  41ae1f:	mov    WORD PTR [ebp-0x76],ax
  41ae23:	add    eax,0x43
  41ae26:	mov    WORD PTR [ebp-0x74],ax
  41ae2a:	lea    eax,[edi+0x3]
  41ae2d:	mov    WORD PTR [ebp-0x72],ax
  41ae31:	mov    eax,0x4fac
  41ae36:	mov    WORD PTR [ebp-0x70],ax
  41ae3a:	lea    eax,[edi-0x4]
  41ae3d:	mov    WORD PTR [ebp-0x6e],ax
  41ae41:	add    eax,0x45
  41ae44:	mov    WORD PTR [ebp-0x6c],ax
  41ae48:	lea    eax,[edi-0x2]
  41ae4b:	mov    WORD PTR [ebp-0x6a],ax
  41ae4f:	mov    eax,edi
  41ae51:	mov    WORD PTR [ebp-0x68],ax
  41ae55:	dec    eax
  41ae56:	mov    WORD PTR [ebp-0x66],ax
  41ae5a:	mov    eax,0x99ff
  41ae5f:	mov    WORD PTR [ebp-0x64],ax
  41ae63:	mov    eax,0x8288
  41ae68:	mov    WORD PTR [ebp-0x62],ax
  41ae6c:	mov    eax,0xd78d
  41ae71:	mov    WORD PTR [ebp-0x60],ax
  41ae75:	add    eax,0x1c
  41ae78:	mov    WORD PTR [ebp-0x5e],ax
  41ae7c:	mov    eax,0x27aa
  41ae81:	mov    WORD PTR [ebp-0x5c],ax
  41ae85:	mov    eax,0x47aa
  41ae8a:	mov    WORD PTR [ebp-0x5a],ax
  41ae8e:	lea    eax,[edi-0x3]
  41ae91:	push   0x8
  41ae93:	mov    WORD PTR [ebp-0x58],ax
  41ae97:	mov    DWORD PTR [ebp-0x10],0xf306020f
  41ae9e:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41aea5:	lea    eax,[ebp-0x10]
  41aea8:	pop    ecx
  41aea9:	mov    dl,BYTE PTR [eax]
  41aeab:	xor    dl,0x73
  41aeae:	sub    dl,0x9
  41aeb1:	mov    BYTE PTR [eax],dl
  41aeb3:	inc    eax
  41aeb4:	dec    ecx
  41aeb5:	jne    0x41aea9
  41aeb7:	lea    eax,[ebp-0x10]
  41aeba:	mov    DWORD PTR [ebp-0xb8],eax
  41aec0:	lea    eax,[ebp-0xbc]
  41aec6:	push   eax
  41aec7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeca:	xor    eax,ebx
  41aecc:	add    eax,esi
  41aece:	push   eax
  41aecf:	mov    eax,DWORD PTR [ebp-0x4]
  41aed2:	add    eax,0x66
  41aed5:	push   eax
  41aed6:	mov    eax,DWORD PTR [ebp-0x4]
  41aed9:	mov    eax,DWORD PTR [eax+0x198]
  41aedf:	mov    DWORD PTR [ebp-0xbc],0x1
  41aee9:	push   DWORD PTR [eax]
  41aeeb:	mov    eax,DWORD PTR [ebp+0x10]
  41aeee:	call   eax
  41aef0:	mov    ecx,DWORD PTR [ebp+0x8]
  41aef3:	xor    ecx,ebx
  41aef5:	add    ecx,esi
  41aef7:	mov    DWORD PTR [ebp-0x8],eax
  41aefa:	cmp    eax,ecx
  41aefc:	jne    0x41af17
  41aefe:	mov    eax,ds:0x33730bee
  41af03:	or     eax,0x22150bef
  41af08:	mov    ds:0x33730bee,eax
  41af0d:	add    eax,0x3372e90f
  41af12:	mov    ds:0x33730bee,eax
  41af17:	mov    ecx,0x4f84
  41af1c:	mov    eax,ecx
  41af1e:	mov    WORD PTR [ebp-0x40],ax
  41af22:	mov    eax,0x4e71
  41af27:	mov    edx,eax
  41af29:	mov    WORD PTR [ebp-0x3e],dx
  41af2d:	lea    edx,[ecx+0x15]
  41af30:	mov    WORD PTR [ebp-0x3c],dx
  41af34:	add    edx,0xfffffff8
  41af37:	mov    WORD PTR [ebp-0x3a],dx
  41af3b:	lea    edx,[ecx+0xf]
  41af3e:	mov    WORD PTR [ebp-0x38],dx
  41af42:	add    edx,0x1b
  41af45:	mov    WORD PTR [ebp-0x36],dx
  41af49:	lea    edx,[ecx+0x21]
  41af4c:	mov    WORD PTR [ebp-0x34],dx
  41af50:	mov    WORD PTR [ebp-0x32],cx
  41af54:	mov    ecx,edi
  41af56:	mov    WORD PTR [ebp-0x30],cx
  41af5a:	lea    ecx,[edx-0x1]
  41af5d:	mov    edx,ecx
  41af5f:	mov    WORD PTR [ebp-0x54],dx
  41af63:	mov    edx,eax
  41af65:	mov    WORD PTR [ebp-0x52],dx
  41af69:	add    edx,0x8
  41af6c:	mov    WORD PTR [ebp-0x50],dx
  41af70:	mov    WORD PTR [ebp-0x4e],ax
  41af74:	add    eax,0x2
  41af77:	mov    WORD PTR [ebp-0x4c],ax
  41af7b:	lea    eax,[ecx-0x16]
  41af7e:	mov    WORD PTR [ebp-0x4a],ax
  41af82:	add    eax,0xfffffff7
  41af85:	mov    WORD PTR [ebp-0x48],ax
  41af89:	mov    WORD PTR [ebp-0x46],cx
  41af8d:	mov    WORD PTR [ebp-0x44],di
  41af91:	mov    eax,DWORD PTR [ebp+0x8]
  41af94:	movzx  ecx,WORD PTR [ebp-0x54]
  41af98:	xor    eax,ebx
  41af9a:	add    eax,esi
  41af9c:	xor    eax,ecx
  41af9e:	mov    WORD PTR [ebp-0x54],ax
  41afa2:	mov    eax,DWORD PTR [ebp+0x8]
  41afa5:	movzx  ecx,WORD PTR [ebp-0x40]
  41afa9:	xor    eax,ebx
  41afab:	add    eax,esi
  41afad:	xor    eax,ecx
  41afaf:	mov    WORD PTR [ebp-0x40],ax
  41afb3:	xor    eax,eax
  41afb5:	mov    WORD PTR [ebp-0xd0],ax
  41afbc:	mov    WORD PTR [ebp-0xe4],ax
  41afc3:	mov    edi,DWORD PTR [ebp+0x24]
  41afc6:	lea    eax,[ebp-0xd0]
  41afcc:	lea    edx,[ebp-0x54]
  41afcf:	mov    DWORD PTR [ebp-0xbc],0x2
  41afd9:	mov    DWORD PTR [ebp-0xb8],eax
  41afdf:	call   0x41d97e
  41afe4:	mov    DWORD PTR [ebp-0xb4],eax
  41afea:	lea    eax,[ebp-0xbc]
  41aff0:	push   eax
  41aff1:	mov    eax,DWORD PTR [ebp+0xc]
  41aff4:	xor    eax,ebx
  41aff6:	add    eax,esi
  41aff8:	push   eax
  41aff9:	lea    eax,[ebp-0x78]
  41affc:	push   eax
  41affd:	push   DWORD PTR [ebp-0x8]
  41b000:	mov    eax,DWORD PTR [ebp+0x10]
  41b003:	call   eax
  41b005:	mov    edi,DWORD PTR [ebp+0x24]
  41b008:	lea    eax,[ebp-0xe4]
  41b00e:	lea    edx,[ebp-0x40]
  41b011:	mov    DWORD PTR [ebp-0xb8],eax
  41b017:	call   0x41d97e
  41b01c:	mov    DWORD PTR [ebp-0xb4],eax
  41b022:	lea    eax,[ebp-0xbc]
  41b028:	push   eax
  41b029:	mov    eax,DWORD PTR [ebp+0xc]
  41b02c:	xor    eax,ebx
  41b02e:	add    eax,esi
  41b030:	push   eax
  41b031:	lea    eax,[ebp-0x78]
  41b034:	push   eax
  41b035:	push   DWORD PTR [ebp-0x8]
  41b038:	mov    eax,DWORD PTR [ebp+0x10]
  41b03b:	call   eax
  41b03d:	mov    eax,DWORD PTR [ebp+0x14]
  41b040:	push   DWORD PTR [ebp-0x4]
  41b043:	push   DWORD PTR [ebp+0x20]
  41b046:	push   DWORD PTR [ebp+0x1c]
  41b049:	push   DWORD PTR [ebp+0x18]
  41b04c:	push   DWORD PTR [ebp+0x10]
  41b04f:	push   DWORD PTR [ebp+0x8]
  41b052:	push   DWORD PTR [ebp+0xc]
  41b055:	call   0x41c1fa
  41b05a:	test   eax,eax
  41b05c:	je     0x41b0a0
  41b05e:	add    DWORD PTR [ebp-0x4],eax
  41b061:	push   DWORD PTR [ebp-0x4]
  41b064:	lea    edi,[ebp+0x4]
  41b067:	call   0x41b490
  41b06c:	mov    eax,DWORD PTR [ebp-0x4]
  41b06f:	mov    eax,DWORD PTR [eax+0x1c8]
  41b075:	mov    eax,DWORD PTR [eax]
  41b077:	xor    eax,ebx
  41b079:	add    eax,esi
  41b07b:	mov    eax,DWORD PTR [ebp-0x4]
  41b07e:	jne    0x41b096
  41b080:	mov    ecx,DWORD PTR [ebp-0x4]
  41b083:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b089:	push   DWORD PTR [ecx]
  41b08b:	mov    eax,DWORD PTR [eax+0x1d8]
  41b091:	call   DWORD PTR [eax+0x28]
  41b094:	jmp    0x41b0a0
  41b096:	mov    eax,DWORD PTR [eax+0x17c]
  41b09c:	mov    eax,DWORD PTR [eax]
  41b09e:	add    DWORD PTR [edi],eax
  41b0a0:	pop    esi
  41b0a1:	pop    edi
  41b0a2:	pop    ebx
  41b0a3:	leave  
  41b0a4:	ret    0x20
  41b0a7:	push   edi
  41b0a8:	push   esi
  41b0a9:	push   ebx
  41b0aa:	push   ebp
  41b0ab:	mov    ebp,esp
  41b0ad:	mov    eax,DWORD PTR [ebp+0x24]
  41b0b0:	add    DWORD PTR [ebp+0x28],eax
  41b0b3:	push   eax
  41b0b4:	cld    
  41b0b5:	mov    esi,DWORD PTR [ebp+0x18]
  41b0b8:	add    DWORD PTR [ebp+0x1c],esi
  41b0bb:	push   esi
  41b0bc:	mov    esi,DWORD PTR [ebp+0x14]
  41b0bf:	lods   eax,DWORD PTR ds:[esi]
  41b0c0:	xchg   edx,eax
  41b0c1:	push   edx
  41b0c2:	mov    cl,BYTE PTR [esi-0x2]
  41b0c5:	or     eax,0xffffffff
  41b0c8:	shl    eax,cl
  41b0ca:	not    eax
  41b0cc:	push   eax
  41b0cd:	mov    cl,dh
  41b0cf:	or     eax,0xffffffff
  41b0d2:	shl    eax,cl
  41b0d4:	not    eax
  41b0d6:	push   eax
  41b0d7:	add    cl,dl
  41b0d9:	mov    edi,esi
  41b0db:	sub    esp,0xc
  41b0de:	sub    eax,eax
  41b0e0:	inc    eax
  41b0e1:	push   eax
  41b0e2:	push   eax
  41b0e3:	push   eax
  41b0e4:	push   eax
  41b0e5:	push   eax
  41b0e6:	push   edi
  41b0e7:	sub    esi,esi
  41b0e9:	push   esi
  41b0ea:	or     ebx,0xffffffff
  41b0ed:	mov    eax,0x300
  41b0f2:	shl    eax,cl
  41b0f4:	lea    ecx,[eax+0x736]
  41b0fa:	mov    eax,0x4000400
  41b0ff:	shr    ecx,1
  41b101:	rep stos DWORD PTR es:[edi],eax
  41b103:	push   0x5
  41b105:	pop    ecx
  41b106:	call   0x41b3f1
  41b10b:	loop   0x41b106
  41b10d:	lea    esi,[esi]
  41b10f:	lea    edi,[edi]
  41b111:	mov    edi,DWORD PTR [ebp-0x4]
  41b114:	mov    eax,DWORD PTR [ebp-0x10]
  41b117:	sub    edi,DWORD PTR [ebp+0x24]
  41b11a:	and    eax,edi
  41b11c:	mov    DWORD PTR [ebp-0x18],eax
  41b11f:	mov    al,0x0
  41b121:	call   0x41b409
  41b126:	jne    0x41b1c1
  41b12c:	mov    cl,BYTE PTR [ebp-0xc]
  41b12f:	and    edi,DWORD PTR [ebp-0x14]
  41b132:	shl    edi,cl
  41b134:	sub    cl,0x8
  41b137:	neg    cl
  41b139:	shr    esi,cl
  41b13b:	pop    eax
  41b13c:	add    edi,esi
  41b13e:	pop    esi
  41b13f:	lea    edi,[edi+edi*2]
  41b142:	shl    edi,0x8
  41b145:	cmp    al,0x7
  41b147:	pop    edx
  41b148:	lea    ecx,[esi+edi*2+0xe6c]
  41b14f:	push   ecx
  41b150:	push   esi
  41b151:	mov    esi,0x100
  41b156:	push   eax
  41b157:	mov    al,0x1
  41b159:	jb     0x41b18f
  41b15b:	mov    edi,DWORD PTR [ebp-0x4]
  41b15e:	sub    edi,DWORD PTR [ebp-0x24]
  41b161:	movzx  edi,BYTE PTR [edi]
  41b164:	mov    ebp,DWORD PTR [ebp-0x34]
  41b167:	shl    edi,1
  41b169:	mov    ecx,esi
  41b16b:	and    esi,edi
  41b16d:	add    ecx,esi
  41b16f:	lea    ebp,[ebp+ecx*2+0x0]
  41b173:	call   0x41b428
  41b178:	mov    ecx,eax
  41b17a:	shr    esi,0x8
  41b17d:	and    ecx,0x1
  41b180:	cmp    esi,ecx
  41b182:	mov    esi,0x100
  41b187:	jne    0x41b197
  41b189:	cmp    eax,esi
  41b18b:	jb     0x41b164
  41b18d:	jmp    0x41b1a3
  41b18f:	mov    ebp,DWORD PTR [ebp-0x34]
  41b192:	call   0x41b428
  41b197:	inc    eax
  41b198:	inc    esi
  41b199:	sub    eax,0x1
  41b19c:	sub    esi,0x1
  41b19f:	cmp    eax,esi
  41b1a1:	jb     0x41b18f
  41b1a3:	pop    edx
  41b1a4:	inc    edx
  41b1a5:	cmp    edx,0x5
  41b1a8:	dec    edx
  41b1a9:	mov    ecx,edx
  41b1ab:	jb     0x41b1bc
  41b1ad:	inc    edx
  41b1ae:	cmp    edx,0xb
  41b1b1:	dec    edx
  41b1b2:	mov    cl,0x4
  41b1b4:	dec    cl
  41b1b6:	jb     0x41b1bc
  41b1b8:	mov    cl,0x7
  41b1ba:	dec    cl
  41b1bc:	sub    edx,ecx
  41b1be:	push   edx
  41b1bf:	jmp    0x41b210
  41b1c1:	mov    al,0xc1
  41b1c3:	dec    al
  41b1c5:	call   0x41b419
  41b1ca:	jne    0x41b1e0
  41b1cc:	pop    eax
  41b1cd:	pop    edi
  41b1ce:	pop    edx
  41b1cf:	pop    ecx
  41b1d0:	pop    edx
  41b1d1:	pop    ecx
  41b1d2:	push   DWORD PTR [esp]
  41b1d5:	push   ecx
  41b1d6:	push   edx
  41b1d7:	mov    edx,0x664
  41b1dc:	mov    cl,0x0
  41b1de:	jmp    0x41b253
  41b1e0:	mov    al,0xcd
  41b1e2:	dec    al
  41b1e4:	call   0x41b419
  41b1e9:	jne    0x41b219
  41b1eb:	mov    al,0xf1
  41b1ed:	dec    al
  41b1ef:	call   0x41b409
  41b1f4:	jne    0x41b249
  41b1f6:	pop    eax
  41b1f7:	cmp    al,0x7
  41b1f9:	mov    al,0x9
  41b1fb:	jb     0x41b1ff
  41b1fd:	mov    al,0xb
  41b1ff:	push   eax
  41b200:	mov    esi,DWORD PTR [ebp-0x4]
  41b203:	sub    esi,DWORD PTR [ebp-0x24]
  41b206:	cmp    esi,DWORD PTR [ebp+0x24]
  41b209:	jb     0x41b3e0
  41b20f:	lods   al,BYTE PTR ds:[esi]
  41b210:	mov    edi,DWORD PTR [ebp-0x4]
  41b213:	stos   BYTE PTR es:[edi],al
  41b214:	jmp    0x41b3a7
  41b219:	mov    al,0xd8
  41b21b:	call   0x41b419
  41b220:	mov    esi,DWORD PTR [ebp-0x28]
  41b223:	je     0x41b240
  41b225:	mov    al,0xe4
  41b227:	call   0x41b419
  41b22c:	mov    esi,DWORD PTR [ebp-0x2c]
  41b22f:	je     0x41b23a
  41b231:	mov    esi,DWORD PTR [ebp-0x30]
  41b234:	mov    ecx,DWORD PTR [ebp-0x2c]
  41b237:	mov    DWORD PTR [ebp-0x30],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp-0x28]
  41b23d:	mov    DWORD PTR [ebp-0x2c],ecx
  41b240:	mov    ecx,DWORD PTR [ebp-0x24]
  41b243:	mov    DWORD PTR [ebp-0x28],ecx
  41b246:	mov    DWORD PTR [ebp-0x24],esi
  41b249:	pop    eax
  41b24a:	pop    edi
  41b24b:	pop    ecx
  41b24c:	mov    edx,0xa68
  41b251:	mov    cl,0x8
  41b253:	add    edx,edi
  41b255:	push   edx
  41b256:	push   edi
  41b257:	cmp    al,0x7
  41b259:	mov    al,cl
  41b25b:	jb     0x41b25f
  41b25d:	add    al,0x3
  41b25f:	push   eax
  41b260:	mov    ebp,DWORD PTR [ebp-0x34]
  41b263:	call   0x41b426
  41b268:	jne    0x41b27e
  41b26a:	mov    eax,DWORD PTR [ebp-0x18]
  41b26d:	mov    edi,DWORD PTR [ebp-0x34]
  41b270:	shl    eax,0x3
  41b273:	sub    ecx,ecx
  41b275:	push   0x8
  41b277:	pop    esi
  41b278:	lea    edi,[edi+eax*2+0x4]
  41b27c:	jmp    0x41b2b3
  41b27e:	mov    ebp,DWORD PTR [ebp-0x34]
  41b281:	add    ebp,0x2
  41b284:	call   0x41b426
  41b289:	jne    0x41b2a3
  41b28b:	mov    eax,DWORD PTR [ebp-0x18]
  41b28e:	mov    edi,DWORD PTR [ebp-0x34]
  41b291:	shl    eax,0x3
  41b294:	push   0x8
  41b296:	pop    ecx
  41b297:	push   0x8
  41b299:	pop    esi
  41b29a:	lea    edi,[edi+eax*2+0x104]
  41b2a1:	jmp    0x41b2b3
  41b2a3:	mov    edi,0x204
  41b2a8:	add    edi,DWORD PTR [ebp-0x34]
  41b2ab:	push   0x10
  41b2ad:	pop    ecx
  41b2ae:	mov    esi,0x100
  41b2b3:	mov    DWORD PTR [ebp-0x1c],ecx
  41b2b6:	sub    eax,eax
  41b2b8:	inc    eax
  41b2b9:	mov    ebp,edi
  41b2bb:	call   0x41b428
  41b2c0:	mov    ecx,eax
  41b2c2:	sub    ecx,esi
  41b2c4:	jb     0x41b2b9
  41b2c6:	add    DWORD PTR [ebp-0x1c],ecx
  41b2c9:	cmp    DWORD PTR [ebp-0x3c],0x4
  41b2cd:	jae    0x41b383
  41b2d3:	add    DWORD PTR [ebp-0x3c],0x7
  41b2d7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2da:	cmp    ecx,0x4
  41b2dd:	jb     0x41b2e2
  41b2df:	push   0x3
  41b2e1:	pop    ecx
  41b2e2:	mov    edi,DWORD PTR [ebp-0x38]
  41b2e5:	shl    ecx,0x6
  41b2e8:	sub    eax,eax
  41b2ea:	inc    eax
  41b2eb:	push   0x40
  41b2ed:	pop    esi
  41b2ee:	lea    edi,[edi+ecx*2+0x360]
  41b2f5:	mov    ebp,edi
  41b2f7:	call   0x41b428
  41b2fc:	mov    ecx,eax
  41b2fe:	sub    ecx,esi
  41b300:	jb     0x41b2f5
  41b302:	mov    DWORD PTR [ebp-0x18],ecx
  41b305:	mov    DWORD PTR [ebp-0x24],ecx
  41b308:	cmp    ecx,0x4
  41b30b:	jb     0x41b380
  41b30d:	mov    esi,ecx
  41b30f:	and    DWORD PTR [ebp-0x24],0x1
  41b313:	shr    esi,1
  41b315:	or     DWORD PTR [ebp-0x24],0x2
  41b319:	dec    esi
  41b31a:	cmp    ecx,0xe
  41b31d:	jae    0x41b338
  41b31f:	mov    eax,0x2af
  41b324:	sub    eax,ecx
  41b326:	mov    ecx,esi
  41b328:	shl    BYTE PTR [ebp-0x24],cl
  41b32b:	add    eax,DWORD PTR [ebp-0x24]
  41b32e:	shl    eax,1
  41b330:	add    eax,DWORD PTR [ebp-0x38]
  41b333:	mov    DWORD PTR [ebp-0x34],eax
  41b336:	jmp    0x41b365
  41b338:	sub    esi,0x4
  41b33b:	call   0x41b3e5
  41b340:	shr    ebx,1
  41b342:	shl    DWORD PTR [ebp-0x24],1
  41b345:	cmp    DWORD PTR [ebp-0x20],ebx
  41b348:	jb     0x41b350
  41b34a:	inc    DWORD PTR [ebp-0x24]
  41b34d:	sub    DWORD PTR [ebp-0x20],ebx
  41b350:	dec    esi
  41b351:	jne    0x41b33b
  41b353:	mov    eax,0x644
  41b358:	add    eax,DWORD PTR [ebp-0x38]
  41b35b:	mov    DWORD PTR [ebp-0x34],eax
  41b35e:	shl    DWORD PTR [ebp-0x24],0x4
  41b362:	push   0x4
  41b364:	pop    esi
  41b365:	sub    edi,edi
  41b367:	inc    edi
  41b368:	mov    eax,edi
  41b36a:	mov    ebp,DWORD PTR [ebp-0x34]
  41b36d:	call   0x41b428
  41b372:	test   al,0x1
  41b374:	je     0x41b379
  41b376:	or     DWORD PTR [ebp-0x24],edi
  41b379:	shl    edi,1
  41b37b:	dec    esi
  41b37c:	jne    0x41b36a
  41b37e:	jmp    0x41b380
  41b380:	inc    DWORD PTR [ebp-0x24]
  41b383:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b386:	add    ecx,0x2
  41b389:	mov    edi,DWORD PTR [ebp-0x4]
  41b38c:	mov    eax,edi
  41b38e:	sub    eax,DWORD PTR [ebp+0x24]
  41b391:	cmp    DWORD PTR [ebp-0x24],eax
  41b394:	ja     0x41b3e0
  41b396:	mov    esi,edi
  41b398:	sub    esi,DWORD PTR [ebp-0x24]
  41b39b:	mov    edx,DWORD PTR [ebp+0x28]
  41b39e:	lods   al,BYTE PTR ds:[esi]
  41b39f:	stos   BYTE PTR es:[edi],al
  41b3a0:	cmp    edi,edx
  41b3a2:	jae    0x41b3a7
  41b3a4:	dec    ecx
  41b3a5:	jne    0x41b39e
  41b3a7:	mov    DWORD PTR [ebp-0x4],edi
  41b3aa:	movzx  esi,al
  41b3ad:	cmp    edi,DWORD PTR [ebp+0x28]
  41b3b0:	jb     0x41b111
  41b3b6:	call   0x41b3e5
  41b3bb:	sub    eax,eax
  41b3bd:	lea    ebp,[esp+0x3c]
  41b3c1:	mov    edx,DWORD PTR [ebp+0x20]
  41b3c4:	mov    esi,DWORD PTR [ebp-0x8]
  41b3c7:	sub    esi,DWORD PTR [ebp+0x18]
  41b3ca:	mov    DWORD PTR [edx],esi
  41b3cc:	mov    edx,DWORD PTR [ebp+0x2c]
  41b3cf:	mov    edi,DWORD PTR [ebp-0x4]
  41b3d2:	sub    edi,DWORD PTR [ebp+0x24]
  41b3d5:	mov    DWORD PTR [edx],edi
  41b3d7:	leave  
  41b3d8:	pop    ebx
  41b3d9:	pop    esi
  41b3da:	pop    edi
  41b3db:	ret    0x1c
  41b3de:	pop    esi
  41b3df:	pop    eax
  41b3e0:	sub    eax,eax
  41b3e2:	inc    eax
  41b3e3:	jmp    0x41b3bd
  41b3e5:	cmp    ebx,0x1000000
  41b3eb:	jb     0x41b3ee
  41b3ed:	ret    
  41b3ee:	shl    ebx,0x8
  41b3f1:	push   esi
  41b3f2:	mov    esi,DWORD PTR [ebp-0x8]
  41b3f5:	cmp    esi,DWORD PTR [ebp+0x1c]
  41b3f8:	jae    0x41b3de
  41b3fa:	mov    eax,DWORD PTR [ebp-0x20]
  41b3fd:	shl    eax,0x8
  41b400:	lods   al,BYTE PTR ds:[esi]
  41b401:	mov    DWORD PTR [ebp-0x20],eax
  41b404:	mov    DWORD PTR [ebp-0x8],esi
  41b407:	pop    esi
  41b408:	ret    
  41b409:	mov    ecx,DWORD PTR [ebp-0x3c]
  41b40c:	movzx  eax,al
  41b40f:	shl    ecx,0x4
  41b412:	add    eax,DWORD PTR [ebp-0x18]
  41b415:	add    eax,ecx
  41b417:	jmp    0x41b41f
  41b419:	movzx  eax,al
  41b41c:	add    eax,DWORD PTR [ebp-0x3c]
  41b41f:	mov    ebp,DWORD PTR [ebp-0x38]
  41b422:	lea    ebp,[ebp+eax*2+0x0]
  41b426:	sub    eax,eax
  41b428:	lea    ebp,[ebp+eax*2+0x0]
  41b42c:	cmp    ebx,0x1000000
  41b432:	jae    0x41b450
  41b434:	mov    ecx,DWORD PTR [esp+0x38]
  41b438:	shl    DWORD PTR [esp+0x20],0x8
  41b43d:	cmp    ecx,DWORD PTR [esp+0x5c]
  41b441:	jae    0x41b3df
  41b443:	mov    dl,BYTE PTR [ecx]
  41b445:	inc    DWORD PTR [esp+0x38]
  41b449:	shl    ebx,0x8
  41b44c:	mov    BYTE PTR [esp+0x20],dl
  41b450:	mov    ecx,ebx
  41b452:	movzx  edx,WORD PTR [ebp+0x0]
  41b456:	shr    ecx,0xb
  41b459:	imul   ecx,edx
  41b45c:	cmp    DWORD PTR [esp+0x20],ecx
  41b460:	jae    0x41b479
  41b462:	mov    ebx,ecx
  41b464:	mov    ecx,0x800
  41b469:	sub    ecx,edx
  41b46b:	shr    ecx,0x5
  41b46e:	add    WORD PTR [ebp+0x0],cx
  41b472:	add    eax,eax
  41b474:	lea    ebp,[esp+0x40]
  41b478:	ret    
  41b479:	shr    edx,0x5
  41b47c:	sub    DWORD PTR [esp+0x20],ecx
  41b480:	sub    ebx,ecx
  41b482:	sub    WORD PTR [ebp+0x0],dx
  41b486:	add    eax,eax
  41b488:	add    eax,0x1
  41b48b:	lea    ebp,[esp+0x40]
  41b48f:	ret    
  41b490:	push   ebp
  41b491:	mov    ebp,esp
  41b493:	sub    esp,0x104
  41b499:	push   ebx
  41b49a:	push   esi
  41b49b:	push   edi
  41b49c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b4aa:	mov    eax,DWORD PTR [ebp+0x8]
  41b4ad:	mov    DWORD PTR [ebp+0x8],eax
  41b4b0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4b3:	mov    ebx,0x7510899
  41b4b8:	xor    ecx,ebx
  41b4ba:	mov    eax,0x3272e0
  41b4bf:	add    ecx,eax
  41b4c1:	mov    DWORD PTR [ebp-0x28],ecx
  41b4c4:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c7:	xor    ecx,ebx
  41b4c9:	add    ecx,eax
  41b4cb:	mov    DWORD PTR [ebp-0x40],ecx
  41b4ce:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4d1:	xor    ecx,ebx
  41b4d3:	add    ecx,eax
  41b4d5:	mov    DWORD PTR [ebp-0x3c],ecx
  41b4d8:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4db:	xor    ecx,ebx
  41b4dd:	add    ecx,eax
  41b4df:	mov    DWORD PTR [ebp-0xa0],ecx
  41b4e5:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  41b4ec:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  41b4f3:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  41b4fa:	push   0x25
  41b4fc:	pop    ecx
  41b4fd:	mov    DWORD PTR [ebp-0x2c],ecx
  41b500:	mov    DWORD PTR [ebp-0x2c],ecx
  41b503:	push   0x65
  41b505:	pop    ecx
  41b506:	mov    DWORD PTR [ebp-0x2c],ecx
  41b509:	mov    DWORD PTR [ebp-0x2c],ecx
  41b50c:	mov    DWORD PTR [ebp-0x2c],0x4d
  41b513:	mov    DWORD PTR [ebp-0x2c],0x43
  41b51a:	mov    ecx,DWORD PTR [ebp-0x14]
  41b51d:	xor    ecx,ebx
  41b51f:	add    ecx,eax
  41b521:	mov    DWORD PTR [ebp-0x2c],ecx
  41b524:	mov    ecx,DWORD PTR [ebp-0x14]
  41b527:	xor    ecx,ebx
  41b529:	add    ecx,eax
  41b52b:	mov    DWORD PTR [ebp-0x2c],ecx
  41b52e:	mov    DWORD PTR [ebp-0x24],0x257
  41b535:	mov    DWORD PTR [ebp-0x34],0x35
  41b53c:	mov    DWORD PTR [ebp-0x10],0x79
  41b543:	lea    edi,[ebp-0xe4]
  41b549:	lea    esi,[ebp-0x104]
  41b54f:	call   0x41c169
  41b554:	dec    DWORD PTR [ebp-0x10]
  41b557:	jne    0x41b543
  41b559:	dec    DWORD PTR [ebp-0x34]
  41b55c:	jne    0x41b53c
  41b55e:	dec    DWORD PTR [ebp-0x24]
  41b561:	jne    0x41b535
  41b563:	mov    DWORD PTR [ebp-0x24],0x400d
  41b56a:	mov    eax,DWORD PTR [ebp-0x14]
  41b56d:	xor    eax,ebx
  41b56f:	mov    esi,0x3272e0
  41b574:	add    eax,esi
  41b576:	mov    DWORD PTR [ebp-0x8],eax
  41b579:	mov    eax,DWORD PTR [ebp-0x14]
  41b57c:	and    DWORD PTR [ebp-0x94],0x0
  41b583:	xor    eax,ebx
  41b585:	add    eax,esi
  41b587:	mov    DWORD PTR [ebp-0x38],eax
  41b58a:	mov    eax,fs:0x18
  41b590:	mov    DWORD PTR [ebp-0x94],eax
  41b596:	mov    eax,DWORD PTR [eax+0x30]
  41b599:	mov    DWORD PTR [ebp-0x98],eax
  41b59f:	mov    eax,DWORD PTR [eax+0xc]
  41b5a2:	mov    DWORD PTR [ebp-0xc0],eax
  41b5a8:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ab:	lea    ecx,[ebp-0x94]
  41b5b1:	mov    DWORD PTR [eax+0x1a0],ecx
  41b5b7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ba:	lea    ecx,[ebp-0x98]
  41b5c0:	mov    DWORD PTR [eax+0x1a4],ecx
  41b5c6:	mov    eax,DWORD PTR [ebp+0x8]
  41b5c9:	push   DWORD PTR [ebp+0x8]
  41b5cc:	lea    ecx,[ebp-0xc0]
  41b5d2:	mov    DWORD PTR [eax+0x1a8],ecx
  41b5d8:	call   0x41d94f
  41b5dd:	mov    ecx,DWORD PTR [ebp-0x14]
  41b5e0:	xor    ecx,ebx
  41b5e2:	add    ecx,esi
  41b5e4:	cmp    ecx,eax
  41b5e6:	je     0x41b8c3
  41b5ec:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ef:	mov    eax,DWORD PTR [eax+0x194]
  41b5f5:	mov    ecx,DWORD PTR [eax]
  41b5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5fa:	mov    eax,DWORD PTR [eax+0x194]
  41b600:	mov    eax,DWORD PTR [eax]
  41b602:	add    eax,DWORD PTR [ecx+0x3c]
  41b605:	mov    ecx,DWORD PTR [ebp+0x8]
  41b608:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41b60e:	lea    edx,[ebp-0xc4]
  41b614:	push   edx
  41b615:	mov    edx,DWORD PTR [ebp+0x8]
  41b618:	mov    edx,DWORD PTR [edx+0x18c]
  41b61e:	mov    edx,DWORD PTR [edx]
  41b620:	add    edx,DWORD PTR [eax+0x88]
  41b626:	push   0x4
  41b628:	push   DWORD PTR [eax+0x8c]
  41b62e:	push   edx
  41b62f:	call   DWORD PTR [ecx+0x1c]
  41b632:	push   DWORD PTR [ebp+0x8]
  41b635:	mov    edi,DWORD PTR [ebp+0x8]
  41b638:	mov    eax,DWORD PTR [ebp+0x8]
  41b63b:	mov    edx,DWORD PTR [eax+0x1b8]
  41b641:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41b648:	mov    DWORD PTR [ebp-0x64],0x10a051f
  41b64f:	mov    WORD PTR [ebp-0x60],0x7a39
  41b655:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  41b65f:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41b669:	mov    DWORD PTR [ebp-0x88],0x2419020a
  41b673:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41b67d:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  41b684:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41b68b:	mov    DWORD PTR [ebp-0x78],0x6390819
  41b692:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41b699:	mov    DWORD PTR [ebp-0x70],0x81d050d
  41b6a0:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  41b6a7:	call   0x41d97e
  41b6ac:	push   eax
  41b6ad:	mov    eax,DWORD PTR [ebp+0x8]
  41b6b0:	mov    eax,DWORD PTR [eax+0x1a8]
  41b6b6:	push   DWORD PTR [eax]
  41b6b8:	call   0x41d61f
  41b6bd:	test   eax,eax
  41b6bf:	jne    0x41b711
  41b6c1:	mov    eax,DWORD PTR [ebp+0x8]
  41b6c4:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6ca:	mov    edi,DWORD PTR [ebp+0x8]
  41b6cd:	add    eax,0x4
  41b6d0:	mov    DWORD PTR [ebp-0x20],eax
  41b6d3:	mov    eax,DWORD PTR [ebp+0x8]
  41b6d6:	mov    edx,DWORD PTR [eax+0x1b8]
  41b6dc:	call   0x41d97e
  41b6e1:	push   eax
  41b6e2:	mov    eax,DWORD PTR [ebp-0x20]
  41b6e5:	call   DWORD PTR [eax]
  41b6e7:	test   eax,eax
  41b6e9:	jne    0x41b711
  41b6eb:	mov    eax,DWORD PTR [ebp+0x8]
  41b6ee:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6f4:	mov    edi,DWORD PTR [ebp+0x8]
  41b6f7:	add    eax,0x10
  41b6fa:	mov    DWORD PTR [ebp-0x20],eax
  41b6fd:	mov    eax,DWORD PTR [ebp+0x8]
  41b700:	mov    edx,DWORD PTR [eax+0x1b8]
  41b706:	call   0x41d97e
  41b70b:	push   eax
  41b70c:	mov    eax,DWORD PTR [ebp-0x20]
  41b70f:	call   DWORD PTR [eax]
  41b711:	mov    eax,DWORD PTR [ebp-0x14]
  41b714:	mov    ecx,DWORD PTR [ebp-0x24]
  41b717:	xor    eax,ebx
  41b719:	add    eax,esi
  41b71b:	cmp    eax,ecx
  41b71d:	je     0x41b89c
  41b723:	mov    eax,DWORD PTR [ebp-0x18]
  41b726:	xor    eax,ebx
  41b728:	mov    ecx,0xffcd8d20
  41b72d:	sub    ecx,eax
  41b72f:	add    ecx,DWORD PTR [ebp-0x24]
  41b732:	mov    eax,DWORD PTR [ebp-0x8]
  41b735:	cmp    eax,ecx
  41b737:	ja     0x41b89c
  41b73d:	mov    DWORD PTR [ebp-0x34],0x0
  41b744:	push   DWORD PTR [ebp+0x8]
  41b747:	mov    edi,DWORD PTR [ebp+0x8]
  41b74a:	mov    eax,DWORD PTR [ebp+0x8]
  41b74d:	mov    edx,DWORD PTR [eax+0x1b4]
  41b753:	call   0x41d97e
  41b758:	push   eax
  41b759:	mov    eax,DWORD PTR [ebp+0x8]
  41b75c:	mov    eax,DWORD PTR [eax+0x1a8]
  41b762:	push   DWORD PTR [eax]
  41b764:	call   0x41d61f
  41b769:	mov    ecx,DWORD PTR [ebp+0x8]
  41b76c:	mov    ecx,DWORD PTR [ecx+0x19c]
  41b772:	mov    DWORD PTR [ecx],eax
  41b774:	mov    eax,DWORD PTR [ebp+0x8]
  41b777:	mov    edi,DWORD PTR [eax+0x1d8]
  41b77d:	mov    esi,DWORD PTR [ebp+0x8]
  41b780:	xor    eax,eax
  41b782:	lea    edx,[ebp-0x7c]
  41b785:	call   0x41d9b4
  41b78a:	push   eax
  41b78b:	mov    eax,DWORD PTR [ebp+0x8]
  41b78e:	mov    eax,DWORD PTR [eax+0x19c]
  41b794:	push   DWORD PTR [eax]
  41b796:	call   DWORD PTR [edi+0x8]
  41b799:	mov    DWORD PTR [ebp-0x20],eax
  41b79c:	mov    eax,DWORD PTR [ebp+0x8]
  41b79f:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7a5:	mov    esi,DWORD PTR [ebp+0x8]
  41b7a8:	xor    eax,eax
  41b7aa:	lea    edx,[ebp-0x90]
  41b7b0:	call   0x41d9b4
  41b7b5:	push   eax
  41b7b6:	mov    eax,DWORD PTR [ebp+0x8]
  41b7b9:	mov    eax,DWORD PTR [eax+0x19c]
  41b7bf:	push   DWORD PTR [eax]
  41b7c1:	call   DWORD PTR [edi+0x8]
  41b7c4:	and    DWORD PTR [ebp-0x1c],0x0
  41b7c8:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7cb:	and    eax,0x7
  41b7ce:	add    eax,0x31
  41b7d1:	push   eax
  41b7d2:	call   DWORD PTR [ebp-0x20]
  41b7d5:	test   eax,eax
  41b7d7:	jne    0x41b7de
  41b7d9:	and    DWORD PTR [ebp-0x10],eax
  41b7dc:	jmp    0x41b806
  41b7de:	mov    eax,DWORD PTR [ebp+0x8]
  41b7e1:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7e7:	mov    esi,DWORD PTR [ebp+0x8]
  41b7ea:	xor    eax,eax
  41b7ec:	lea    edx,[ebp-0x68]
  41b7ef:	call   0x41d9b4
  41b7f4:	push   eax
  41b7f5:	mov    eax,DWORD PTR [ebp+0x8]
  41b7f8:	mov    eax,DWORD PTR [eax+0x198]
  41b7fe:	push   DWORD PTR [eax]
  41b800:	call   DWORD PTR [edi+0x8]
  41b803:	mov    DWORD PTR [ebp-0x10],eax
  41b806:	inc    DWORD PTR [ebp-0x1c]
  41b809:	cmp    DWORD PTR [ebp-0x1c],0x10
  41b80d:	jb     0x41b7c8
  41b80f:	mov    eax,DWORD PTR [ebp-0x18]
  41b812:	mov    esi,DWORD PTR [ebp+0x8]
  41b815:	xor    eax,ebx
  41b817:	mov    edi,0x3272e0
  41b81c:	add    eax,edi
  41b81e:	lea    edx,[ebp-0xe4]
  41b824:	call   0x41d9b4
  41b829:	push   eax
  41b82a:	mov    eax,DWORD PTR [ebp-0x14]
  41b82d:	mov    esi,DWORD PTR [ebp+0x8]
  41b830:	xor    eax,ebx
  41b832:	add    eax,edi
  41b834:	lea    edx,[ebp-0x104]
  41b83a:	call   0x41d9b4
  41b83f:	push   eax
  41b840:	call   DWORD PTR [ebp-0x10]
  41b843:	mov    ecx,DWORD PTR [ebp-0x14]
  41b846:	xor    ecx,ebx
  41b848:	add    ecx,edi
  41b84a:	cmp    ecx,eax
  41b84c:	jne    0x41b855
  41b84e:	mov    DWORD PTR [ebp-0x34],0x1
  41b855:	mov    eax,DWORD PTR [ebp-0x18]
  41b858:	mov    ecx,DWORD PTR [ebp-0x8]
  41b85b:	xor    eax,ebx
  41b85d:	lea    eax,[eax+ecx*1+0x3272e0]
  41b864:	mov    DWORD PTR [ebp-0x8],eax
  41b867:	mov    eax,DWORD PTR [ebp-0x34]
  41b86a:	test   eax,eax
  41b86c:	je     0x41b880
  41b86e:	mov    eax,DWORD PTR [ebp-0x18]
  41b871:	mov    ecx,DWORD PTR [ebp-0x38]
  41b874:	xor    eax,ebx
  41b876:	lea    eax,[eax+ecx*1+0x3272e0]
  41b87d:	mov    DWORD PTR [ebp-0x38],eax
  41b880:	mov    eax,DWORD PTR [ebp-0x18]
  41b883:	xor    eax,ebx
  41b885:	mov    ecx,0xffcd8d20
  41b88a:	sub    ecx,eax
  41b88c:	add    ecx,DWORD PTR [ebp-0x24]
  41b88f:	mov    eax,DWORD PTR [ebp-0x8]
  41b892:	cmp    eax,ecx
  41b894:	jbe    0x41b73d
  41b89a:	mov    esi,edi
  41b89c:	mov    eax,DWORD PTR [ebp-0x38]
  41b89f:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8a2:	cmp    ecx,eax
  41b8a4:	jne    0x41b8b7
  41b8a6:	push   DWORD PTR [ebp+0x8]
  41b8a9:	lea    eax,[ebp-0x40]
  41b8ac:	push   eax
  41b8ad:	call   0x41e42c
  41b8b2:	mov    DWORD PTR [ebp-0x28],eax
  41b8b5:	jmp    0x41b8c3
  41b8b7:	mov    eax,DWORD PTR [ebp-0x28]
  41b8ba:	mov    ecx,DWORD PTR [ebp-0x18]
  41b8bd:	xor    ecx,ebx
  41b8bf:	add    ecx,esi
  41b8c1:	xor    DWORD PTR [eax],ecx
  41b8c3:	mov    eax,DWORD PTR [ebp-0x14]
  41b8c6:	mov    ecx,DWORD PTR [ebp-0x28]
  41b8c9:	xor    eax,ebx
  41b8cb:	add    eax,esi
  41b8cd:	cmp    eax,ecx
  41b8cf:	je     0x41c047
  41b8d5:	mov    eax,DWORD PTR [ebp-0x14]
  41b8d8:	mov    ecx,DWORD PTR [ebp-0x40]
  41b8db:	xor    eax,ebx
  41b8dd:	add    eax,esi
  41b8df:	cmp    eax,ecx
  41b8e1:	je     0x41c047
  41b8e7:	mov    eax,DWORD PTR [ebp-0x14]
  41b8ea:	xor    eax,ebx
  41b8ec:	add    eax,esi
  41b8ee:	jmp    0x41b90c
  41b8f0:	mov    edi,DWORD PTR [ebp-0x28]
  41b8f3:	mov    cl,al
  41b8f5:	and    cl,0x1f
  41b8f8:	or     dl,0xff
  41b8fb:	sub    dl,cl
  41b8fd:	add    BYTE PTR [edi+eax*1],dl
  41b900:	mov    ecx,DWORD PTR [ebp-0x18]
  41b903:	xor    ecx,ebx
  41b905:	lea    eax,[eax+ecx*1+0x3272e0]
  41b90c:	mov    ecx,DWORD PTR [ebp-0x40]
  41b90f:	cmp    eax,ecx
  41b911:	jb     0x41b8f0
  41b913:	mov    eax,DWORD PTR [ebp-0x40]
  41b916:	mov    DWORD PTR [ebp-0x24],eax
  41b919:	mov    eax,DWORD PTR [ebp-0x28]
  41b91c:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b923:	mov    DWORD PTR [ebp-0xbc],eax
  41b929:	mov    edi,0xf89c85b8
  41b92e:	mov    DWORD PTR [ebp-0x30],edi
  41b931:	mov    eax,DWORD PTR [ebp-0x38]
  41b934:	xor    eax,ebx
  41b936:	add    eax,esi
  41b938:	mov    DWORD PTR [ebp-0xc],eax
  41b93b:	mov    eax,DWORD PTR [ebp-0x38]
  41b93e:	xor    eax,ebx
  41b940:	add    eax,esi
  41b942:	mov    DWORD PTR [ebp-0x8],eax
  41b945:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41b94c:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41b953:	mov    eax,DWORD PTR [ebp-0x38]
  41b956:	mov    ecx,DWORD PTR [ebp-0x24]
  41b959:	xor    eax,ebx
  41b95b:	add    eax,esi
  41b95d:	cmp    ecx,eax
  41b95f:	je     0x41bb5e
  41b965:	jmp    0x41bb3a
  41b96a:	mov    ecx,DWORD PTR [ebp-0xc]
  41b96d:	mov    eax,DWORD PTR [ebp-0x24]
  41b970:	sub    eax,ecx
  41b972:	mov    ecx,DWORD PTR [ebp-0x48]
  41b975:	xor    ecx,ebx
  41b977:	add    ecx,esi
  41b979:	xor    edx,edx
  41b97b:	div    ecx
  41b97d:	mov    DWORD PTR [ebp-0x8],eax
  41b980:	mov    eax,DWORD PTR [ebp-0x54]
  41b983:	mov    ecx,DWORD PTR [ebp-0x8]
  41b986:	xor    eax,ebx
  41b988:	add    eax,esi
  41b98a:	cmp    ecx,eax
  41b98c:	jbe    0x41b998
  41b98e:	mov    eax,DWORD PTR [ebp-0x54]
  41b991:	xor    eax,ebx
  41b993:	add    eax,esi
  41b995:	mov    DWORD PTR [ebp-0x8],eax
  41b998:	mov    eax,DWORD PTR [ebp-0x48]
  41b99b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b99e:	xor    eax,ebx
  41b9a0:	add    eax,esi
  41b9a2:	imul   eax,ecx
  41b9a5:	mov    DWORD PTR [ebp-0x8],eax
  41b9a8:	mov    eax,DWORD PTR [ebp-0x38]
  41b9ab:	mov    ecx,DWORD PTR [ebp-0x8]
  41b9ae:	xor    eax,ebx
  41b9b0:	add    eax,esi
  41b9b2:	cmp    ecx,eax
  41b9b4:	je     0x41bb28
  41b9ba:	mov    eax,DWORD PTR [ebp-0x8]
  41b9bd:	mov    DWORD PTR [ebp-0x10],eax
  41b9c0:	mov    eax,DWORD PTR [ebp-0xc]
  41b9c3:	add    eax,DWORD PTR [ebp-0xbc]
  41b9c9:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  41b9d0:	mov    DWORD PTR [ebp-0x34],edi
  41b9d3:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41b9dd:	mov    DWORD PTR [ebp-0x8],eax
  41b9e0:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41b9e7:	mov    DWORD PTR [ebp-0x1c],edi
  41b9ea:	mov    eax,DWORD PTR [ebp-0x20]
  41b9ed:	xor    eax,ebx
  41b9ef:	add    eax,esi
  41b9f1:	jmp    0x41bae7
  41b9f6:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41ba00:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  41ba0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba0d:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba10:	xor    eax,ebx
  41ba12:	add    eax,esi
  41ba14:	imul   eax,ecx
  41ba17:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba1a:	mov    al,BYTE PTR [eax+ecx*1]
  41ba1d:	mov    BYTE PTR [ebp-0x2],al
  41ba20:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba23:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba26:	xor    eax,ebx
  41ba28:	add    eax,esi
  41ba2a:	imul   eax,ecx
  41ba2d:	mov    ecx,DWORD PTR [ebp-0xa8]
  41ba33:	xor    ecx,ebx
  41ba35:	add    eax,ecx
  41ba37:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba3a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41ba42:	mov    ecx,DWORD PTR [ebp-0xb0]
  41ba48:	xor    ecx,ebx
  41ba4a:	lea    eax,[ecx+eax*1+0x3272e0]
  41ba51:	movzx  ecx,BYTE PTR [ebp-0x2]
  41ba55:	xor    ecx,eax
  41ba57:	mov    BYTE PTR [ebp-0x2],cl
  41ba5a:	mov    al,BYTE PTR [ebp-0x2]
  41ba5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ba60:	mov    edx,DWORD PTR [ebp-0x44]
  41ba63:	xor    ecx,ebx
  41ba65:	add    ecx,esi
  41ba67:	imul   ecx,edx
  41ba6a:	mov    edx,DWORD PTR [ebp-0x8]
  41ba6d:	mov    BYTE PTR [ecx+edx*1],al
  41ba70:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba73:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba76:	xor    eax,ebx
  41ba78:	add    eax,esi
  41ba7a:	imul   eax,ecx
  41ba7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba80:	mov    al,BYTE PTR [eax+ecx*1]
  41ba83:	mov    BYTE PTR [ebp-0x2],al
  41ba86:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba89:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba8c:	xor    eax,ebx
  41ba8e:	add    eax,esi
  41ba90:	imul   eax,ecx
  41ba93:	mov    ecx,DWORD PTR [ebp-0x34]
  41ba96:	xor    ecx,ebx
  41ba98:	add    eax,ecx
  41ba9a:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba9d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41baa5:	mov    ecx,DWORD PTR [ebp-0xb8]
  41baab:	xor    ecx,ebx
  41baad:	lea    eax,[ecx+eax*1+0x3272e0]
  41bab4:	movzx  ecx,BYTE PTR [ebp-0x2]
  41bab8:	xor    ecx,eax
  41baba:	mov    BYTE PTR [ebp-0x2],cl
  41babd:	mov    al,BYTE PTR [ebp-0x2]
  41bac0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bac3:	mov    edx,DWORD PTR [ebp-0x44]
  41bac6:	xor    ecx,ebx
  41bac8:	add    ecx,esi
  41baca:	imul   ecx,edx
  41bacd:	mov    edx,DWORD PTR [ebp-0x8]
  41bad0:	mov    BYTE PTR [ecx+edx*1],al
  41bad3:	mov    eax,DWORD PTR [ebp-0x2c]
  41bad6:	mov    ecx,DWORD PTR [ebp-0x34]
  41bad9:	xor    eax,ebx
  41badb:	xor    ecx,ebx
  41badd:	add    eax,esi
  41badf:	add    ecx,esi
  41bae1:	imul   eax,ecx
  41bae4:	add    eax,DWORD PTR [ebp-0x44]
  41bae7:	mov    DWORD PTR [ebp-0x44],eax
  41baea:	mov    eax,DWORD PTR [ebp-0x44]
  41baed:	mov    ecx,DWORD PTR [ebp-0x10]
  41baf0:	cmp    ecx,eax
  41baf2:	jb     0x41b9f6
  41baf8:	mov    eax,DWORD PTR [ebp-0x34]
  41bafb:	mov    ecx,DWORD PTR [ebp-0x10]
  41bafe:	xor    eax,ebx
  41bb00:	add    eax,esi
  41bb02:	imul   eax,ecx
  41bb05:	mov    ecx,DWORD PTR [ebp-0x20]
  41bb08:	xor    ecx,ebx
  41bb0a:	add    ecx,esi
  41bb0c:	or     eax,ecx
  41bb0e:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb11:	xor    ecx,ebx
  41bb13:	add    eax,ecx
  41bb15:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb18:	xor    ecx,ebx
  41bb1a:	add    eax,ecx
  41bb1c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb1f:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bb26:	jmp    0x41bb37
  41bb28:	mov    eax,DWORD PTR [ebp-0x30]
  41bb2b:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb2e:	xor    eax,ebx
  41bb30:	lea    eax,[eax+ecx*1+0x3272e0]
  41bb37:	mov    DWORD PTR [ebp-0xc],eax
  41bb3a:	mov    eax,DWORD PTR [ebp-0x30]
  41bb3d:	xor    eax,ebx
  41bb3f:	mov    ecx,0xffcd8d20
  41bb44:	sub    ecx,eax
  41bb46:	add    ecx,DWORD PTR [ebp-0x24]
  41bb49:	mov    eax,DWORD PTR [ebp-0x30]
  41bb4c:	mov    edx,DWORD PTR [ebp-0xc]
  41bb4f:	xor    eax,ebx
  41bb51:	add    eax,esi
  41bb53:	imul   eax,edx
  41bb56:	cmp    eax,ecx
  41bb58:	jbe    0x41b96a
  41bb5e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb61:	mov    ecx,DWORD PTR [ebp-0x40]
  41bb64:	mov    eax,DWORD PTR [ebp+0x8]
  41bb67:	mov    edx,DWORD PTR [ebp-0x4c]
  41bb6a:	mov    eax,DWORD PTR [eax+0x1d8]
  41bb70:	xor    edx,ebx
  41bb72:	add    edx,esi
  41bb74:	push   edx
  41bb75:	mov    edx,DWORD PTR [ebp-0x3c]
  41bb78:	xor    edx,ebx
  41bb7a:	add    edx,esi
  41bb7c:	push   edx
  41bb7d:	push   ecx
  41bb7e:	mov    DWORD PTR [ebp-0x2c],ecx
  41bb81:	mov    ecx,DWORD PTR [ebp-0x14]
  41bb84:	xor    ecx,ebx
  41bb86:	add    ecx,esi
  41bb88:	push   ecx
  41bb89:	call   DWORD PTR [eax+0x14]
  41bb8c:	mov    edi,eax
  41bb8e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb91:	xor    eax,ebx
  41bb93:	add    eax,esi
  41bb95:	cmp    eax,edi
  41bb97:	je     0x41bbf2
  41bb99:	mov    eax,DWORD PTR [ebp-0x14]
  41bb9c:	jmp    0x41bbbf
  41bb9e:	mov    ecx,DWORD PTR [ebp-0x28]
  41bba1:	xor    eax,ebx
  41bba3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  41bbaa:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  41bbb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41bbb4:	xor    ecx,ebx
  41bbb6:	lea    eax,[ecx+eax*1+0x3272e0]
  41bbbd:	xor    eax,ebx
  41bbbf:	mov    ecx,DWORD PTR [ebp-0x40]
  41bbc2:	sub    ecx,esi
  41bbc4:	xor    ecx,ebx
  41bbc6:	cmp    eax,ecx
  41bbc8:	jne    0x41bb9e
  41bbca:	mov    eax,DWORD PTR [ebp+0x8]
  41bbcd:	mov    ecx,DWORD PTR [ebp-0x50]
  41bbd0:	mov    eax,DWORD PTR [eax+0x1d8]
  41bbd6:	xor    ecx,ebx
  41bbd8:	add    ecx,esi
  41bbda:	push   ecx
  41bbdb:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbde:	xor    ecx,ebx
  41bbe0:	add    ecx,esi
  41bbe2:	push   ecx
  41bbe3:	push   DWORD PTR [ebp-0x28]
  41bbe6:	call   DWORD PTR [eax+0x18]
  41bbe9:	mov    eax,DWORD PTR [ebp-0x2c]
  41bbec:	mov    DWORD PTR [ebp-0x28],edi
  41bbef:	mov    DWORD PTR [ebp-0x40],eax
  41bbf2:	mov    edi,DWORD PTR [ebp-0x28]
  41bbf5:	mov    eax,DWORD PTR [ebp-0x18]
  41bbf8:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbfb:	xor    eax,ebx
  41bbfd:	mov    DWORD PTR [ebp-0x2c],edi
  41bc00:	add    eax,esi
  41bc02:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  41bc09:	mov    DWORD PTR [ebp-0x58],0x27123f12
  41bc10:	jmp    0x41bc44
  41bc12:	xor    ecx,ebx
  41bc14:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  41bc1b:	xor    dl,0x73
  41bc1e:	sub    dl,0x9
  41bc21:	mov    DWORD PTR [ebp-0x3c],ecx
  41bc24:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  41bc2c:	movzx  edx,dl
  41bc2f:	cmp    ecx,edx
  41bc31:	jne    0x41bc4e
  41bc33:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc36:	mov    edx,DWORD PTR [ebp-0x3c]
  41bc39:	xor    ecx,ebx
  41bc3b:	lea    ecx,[ecx+edx*1+0x3272e0]
  41bc42:	xor    ecx,ebx
  41bc44:	cmp    ecx,0xf89c85b1
  41bc4a:	jne    0x41bc12
  41bc4c:	jmp    0x41bc55
  41bc4e:	mov    eax,DWORD PTR [ebp-0x14]
  41bc51:	xor    eax,ebx
  41bc53:	add    eax,esi
  41bc55:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc58:	xor    ecx,ebx
  41bc5a:	add    ecx,esi
  41bc5c:	cmp    ecx,eax
  41bc5e:	je     0x41bdd1
  41bc64:	mov    eax,DWORD PTR [edi+0x8]
  41bc67:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41bc6e:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  41bc75:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  41bc7c:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41bc83:	mov    DWORD PTR [ebp-0x10],eax
  41bc86:	mov    eax,DWORD PTR [ebp+0x8]
  41bc89:	mov    ecx,DWORD PTR [ebp-0x20]
  41bc8c:	xor    ecx,ebx
  41bc8e:	add    ecx,esi
  41bc90:	push   ecx
  41bc91:	mov    ecx,DWORD PTR [ebp-0x48]
  41bc94:	mov    eax,DWORD PTR [eax+0x1d8]
  41bc9a:	xor    ecx,ebx
  41bc9c:	add    ecx,esi
  41bc9e:	push   ecx
  41bc9f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bca2:	xor    ecx,ebx
  41bca4:	add    ecx,esi
  41bca6:	push   ecx
  41bca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcaa:	xor    ecx,ebx
  41bcac:	add    ecx,esi
  41bcae:	push   ecx
  41bcaf:	call   DWORD PTR [eax+0x14]
  41bcb2:	mov    edi,eax
  41bcb4:	mov    eax,DWORD PTR [ebp+0x8]
  41bcb7:	mov    ecx,DWORD PTR [ebp-0x20]
  41bcba:	mov    eax,DWORD PTR [eax+0x1d8]
  41bcc0:	xor    ecx,ebx
  41bcc2:	add    ecx,esi
  41bcc4:	push   ecx
  41bcc5:	mov    ecx,DWORD PTR [ebp-0x48]
  41bcc8:	xor    ecx,ebx
  41bcca:	add    ecx,esi
  41bccc:	push   ecx
  41bccd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	xor    ecx,ebx
  41bcd5:	add    ecx,esi
  41bcd7:	push   ecx
  41bcd8:	call   DWORD PTR [eax+0x14]
  41bcdb:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcde:	xor    ecx,ebx
  41bce0:	add    ecx,esi
  41bce2:	mov    DWORD PTR [ebp-0x20],eax
  41bce5:	cmp    ecx,edi
  41bce7:	je     0x41c074
  41bced:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcf0:	xor    ecx,ebx
  41bcf2:	add    ecx,esi
  41bcf4:	cmp    ecx,eax
  41bcf6:	je     0x41c074
  41bcfc:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  41bd03:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41bd0a:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bd0d:	xor    cl,0x99
  41bd10:	sub    cl,0x20
  41bd13:	mov    BYTE PTR [edi],cl
  41bd15:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd18:	xor    cl,0x99
  41bd1b:	sub    cl,0x20
  41bd1e:	mov    BYTE PTR [edi+0x1],cl
  41bd21:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bd24:	xor    cl,0x99
  41bd27:	sub    cl,0x20
  41bd2a:	mov    BYTE PTR [edi+0x2],cl
  41bd2d:	and    DWORD PTR [ebp-0xb4],0x0
  41bd34:	and    DWORD PTR [ebp-0xa4],0x0
  41bd3b:	lea    ecx,[ebp-0xa4]
  41bd41:	push   ecx
  41bd42:	push   DWORD PTR [ebp-0x10]
  41bd45:	push   eax
  41bd46:	lea    eax,[ebp-0xb4]
  41bd4c:	push   eax
  41bd4d:	mov    eax,DWORD PTR [ebp-0x2c]
  41bd50:	push   DWORD PTR [eax+0xc]
  41bd53:	mov    eax,DWORD PTR [ebp-0x28]
  41bd56:	add    eax,0x10
  41bd59:	push   eax
  41bd5a:	push   edi
  41bd5b:	call   0x41b0a7
  41bd60:	mov    DWORD PTR [ebp-0x3c],eax
  41bd63:	mov    eax,DWORD PTR [ebp+0x8]
  41bd66:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd69:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd6f:	xor    ecx,ebx
  41bd71:	add    ecx,esi
  41bd73:	push   ecx
  41bd74:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd77:	xor    ecx,ebx
  41bd79:	add    ecx,esi
  41bd7b:	push   ecx
  41bd7c:	push   edi
  41bd7d:	call   DWORD PTR [eax+0x18]
  41bd80:	mov    eax,DWORD PTR [ebp-0x3c]
  41bd83:	add    eax,0xffcd8d20
  41bd88:	xor    eax,ebx
  41bd8a:	cmp    eax,0xf89c85b9
  41bd8f:	mov    eax,DWORD PTR [ebp+0x8]
  41bd92:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd98:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd9b:	jne    0x41bdbe
  41bd9d:	xor    ecx,ebx
  41bd9f:	add    ecx,esi
  41bda1:	push   ecx
  41bda2:	mov    ecx,DWORD PTR [ebp-0xc]
  41bda5:	xor    ecx,ebx
  41bda7:	add    ecx,esi
  41bda9:	push   ecx
  41bdaa:	push   DWORD PTR [ebp-0x28]
  41bdad:	call   DWORD PTR [eax+0x18]
  41bdb0:	mov    eax,DWORD PTR [ebp-0x20]
  41bdb3:	mov    DWORD PTR [ebp-0x28],eax
  41bdb6:	mov    eax,DWORD PTR [ebp-0x10]
  41bdb9:	mov    DWORD PTR [ebp-0x40],eax
  41bdbc:	jmp    0x41bdd1
  41bdbe:	xor    ecx,ebx
  41bdc0:	add    ecx,esi
  41bdc2:	push   ecx
  41bdc3:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdc6:	xor    ecx,ebx
  41bdc8:	add    ecx,esi
  41bdca:	push   ecx
  41bdcb:	push   DWORD PTR [ebp-0x20]
  41bdce:	call   DWORD PTR [eax+0x18]
  41bdd1:	mov    eax,DWORD PTR [ebp-0x40]
  41bdd4:	mov    DWORD PTR [ebp-0x38],eax
  41bdd7:	mov    eax,DWORD PTR [ebp-0x28]
  41bdda:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41bde1:	mov    DWORD PTR [ebp-0x3c],eax
  41bde4:	mov    edi,0xf89c85b8
  41bde9:	mov    DWORD PTR [ebp-0x30],edi
  41bdec:	mov    eax,DWORD PTR [ebp-0x24]
  41bdef:	xor    eax,ebx
  41bdf1:	add    eax,esi
  41bdf3:	mov    DWORD PTR [ebp-0xc],eax
  41bdf6:	mov    eax,DWORD PTR [ebp-0x24]
  41bdf9:	xor    eax,ebx
  41bdfb:	add    eax,esi
  41bdfd:	mov    DWORD PTR [ebp-0x10],eax
  41be00:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41be07:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41be0e:	mov    eax,DWORD PTR [ebp-0x24]
  41be11:	mov    ecx,DWORD PTR [ebp-0x38]
  41be14:	xor    eax,ebx
  41be16:	add    eax,esi
  41be18:	cmp    ecx,eax
  41be1a:	je     0x41c010
  41be20:	jmp    0x41bfec
  41be25:	mov    ecx,DWORD PTR [ebp-0xc]
  41be28:	mov    eax,DWORD PTR [ebp-0x38]
  41be2b:	sub    eax,ecx
  41be2d:	mov    ecx,DWORD PTR [ebp-0x48]
  41be30:	xor    ecx,ebx
  41be32:	add    ecx,esi
  41be34:	xor    edx,edx
  41be36:	div    ecx
  41be38:	mov    DWORD PTR [ebp-0x10],eax
  41be3b:	mov    eax,DWORD PTR [ebp-0x20]
  41be3e:	mov    ecx,DWORD PTR [ebp-0x10]
  41be41:	xor    eax,ebx
  41be43:	add    eax,esi
  41be45:	cmp    ecx,eax
  41be47:	jbe    0x41be53
  41be49:	mov    eax,DWORD PTR [ebp-0x20]
  41be4c:	xor    eax,ebx
  41be4e:	add    eax,esi
  41be50:	mov    DWORD PTR [ebp-0x10],eax
  41be53:	mov    eax,DWORD PTR [ebp-0x48]
  41be56:	mov    ecx,DWORD PTR [ebp-0x10]
  41be59:	xor    eax,ebx
  41be5b:	add    eax,esi
  41be5d:	imul   eax,ecx
  41be60:	mov    DWORD PTR [ebp-0x10],eax
  41be63:	mov    eax,DWORD PTR [ebp-0x24]
  41be66:	mov    ecx,DWORD PTR [ebp-0x10]
  41be69:	xor    eax,ebx
  41be6b:	add    eax,esi
  41be6d:	cmp    ecx,eax
  41be6f:	je     0x41bfda
  41be75:	mov    eax,DWORD PTR [ebp-0x10]
  41be78:	mov    DWORD PTR [ebp-0x34],eax
  41be7b:	mov    eax,DWORD PTR [ebp-0xc]
  41be7e:	add    eax,DWORD PTR [ebp-0x3c]
  41be81:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41be88:	mov    DWORD PTR [ebp-0x10],edi
  41be8b:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41be92:	mov    DWORD PTR [ebp-0x1c],eax
  41be95:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41be9c:	mov    DWORD PTR [ebp-0x8],edi
  41be9f:	mov    eax,DWORD PTR [ebp-0x54]
  41bea2:	xor    eax,ebx
  41bea4:	add    eax,esi
  41bea6:	jmp    0x41bf99
  41beab:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41beb5:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41bebf:	mov    eax,DWORD PTR [ebp-0x8]
  41bec2:	mov    ecx,DWORD PTR [ebp-0x18]
  41bec5:	xor    eax,ebx
  41bec7:	add    eax,esi
  41bec9:	imul   eax,ecx
  41becc:	mov    ecx,DWORD PTR [ebp-0x1c]
  41becf:	mov    al,BYTE PTR [eax+ecx*1]
  41bed2:	mov    BYTE PTR [ebp-0x1],al
  41bed5:	mov    eax,DWORD PTR [ebp-0x8]
  41bed8:	mov    ecx,DWORD PTR [ebp-0x18]
  41bedb:	xor    eax,ebx
  41bedd:	add    eax,esi
  41bedf:	imul   eax,ecx
  41bee2:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bee5:	xor    ecx,ebx
  41bee7:	add    eax,ecx
  41bee9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41beec:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bef4:	mov    ecx,DWORD PTR [ebp-0xac]
  41befa:	xor    ecx,ebx
  41befc:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf03:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf07:	xor    ecx,eax
  41bf09:	mov    BYTE PTR [ebp-0x1],cl
  41bf0c:	mov    al,BYTE PTR [ebp-0x1]
  41bf0f:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf12:	mov    edx,DWORD PTR [ebp-0x18]
  41bf15:	xor    ecx,ebx
  41bf17:	add    ecx,esi
  41bf19:	imul   ecx,edx
  41bf1c:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf1f:	mov    BYTE PTR [ecx+edx*1],al
  41bf22:	mov    eax,DWORD PTR [ebp-0x8]
  41bf25:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf28:	xor    eax,ebx
  41bf2a:	add    eax,esi
  41bf2c:	imul   eax,ecx
  41bf2f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf32:	mov    al,BYTE PTR [eax+ecx*1]
  41bf35:	mov    BYTE PTR [ebp-0x1],al
  41bf38:	mov    eax,DWORD PTR [ebp-0x8]
  41bf3b:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf3e:	xor    eax,ebx
  41bf40:	add    eax,esi
  41bf42:	imul   eax,ecx
  41bf45:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf48:	xor    ecx,ebx
  41bf4a:	add    eax,ecx
  41bf4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf4f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bf57:	mov    ecx,DWORD PTR [ebp-0x9c]
  41bf5d:	xor    ecx,ebx
  41bf5f:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf66:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf6a:	xor    ecx,eax
  41bf6c:	mov    BYTE PTR [ebp-0x1],cl
  41bf6f:	mov    al,BYTE PTR [ebp-0x1]
  41bf72:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf75:	mov    edx,DWORD PTR [ebp-0x18]
  41bf78:	xor    ecx,ebx
  41bf7a:	add    ecx,esi
  41bf7c:	imul   ecx,edx
  41bf7f:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf82:	mov    BYTE PTR [ecx+edx*1],al
  41bf85:	mov    eax,DWORD PTR [ebp-0x2c]
  41bf88:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf8b:	xor    eax,ebx
  41bf8d:	xor    ecx,ebx
  41bf8f:	add    eax,esi
  41bf91:	add    ecx,esi
  41bf93:	imul   eax,ecx
  41bf96:	add    eax,DWORD PTR [ebp-0x18]
  41bf99:	mov    DWORD PTR [ebp-0x18],eax
  41bf9c:	mov    eax,DWORD PTR [ebp-0x18]
  41bf9f:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfa2:	cmp    ecx,eax
  41bfa4:	jb     0x41beab
  41bfaa:	mov    eax,DWORD PTR [ebp-0x10]
  41bfad:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfb0:	xor    eax,ebx
  41bfb2:	add    eax,esi
  41bfb4:	imul   eax,ecx
  41bfb7:	mov    ecx,DWORD PTR [ebp-0x54]
  41bfba:	xor    ecx,ebx
  41bfbc:	add    ecx,esi
  41bfbe:	or     eax,ecx
  41bfc0:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfc3:	xor    ecx,ebx
  41bfc5:	add    eax,ecx
  41bfc7:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfca:	xor    ecx,ebx
  41bfcc:	add    eax,ecx
  41bfce:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfd1:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bfd8:	jmp    0x41bfe9
  41bfda:	mov    eax,DWORD PTR [ebp-0x30]
  41bfdd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfe0:	xor    eax,ebx
  41bfe2:	lea    eax,[eax+ecx*1+0x3272e0]
  41bfe9:	mov    DWORD PTR [ebp-0xc],eax
  41bfec:	mov    eax,DWORD PTR [ebp-0x30]
  41bfef:	xor    eax,ebx
  41bff1:	mov    ecx,0xffcd8d20
  41bff6:	sub    ecx,eax
  41bff8:	add    ecx,DWORD PTR [ebp-0x38]
  41bffb:	mov    eax,DWORD PTR [ebp-0x30]
  41bffe:	mov    edx,DWORD PTR [ebp-0xc]
  41c001:	xor    eax,ebx
  41c003:	add    eax,esi
  41c005:	imul   eax,edx
  41c008:	cmp    eax,ecx
  41c00a:	jbe    0x41be25
  41c010:	push   DWORD PTR [ebp+0x8]
  41c013:	mov    eax,DWORD PTR [ebp+0x8]
  41c016:	push   DWORD PTR [eax+0x1cc]
  41c01c:	lea    eax,[ebp-0xa0]
  41c022:	push   eax
  41c023:	mov    eax,DWORD PTR [ebp+0x8]
  41c026:	mov    eax,DWORD PTR [eax+0x1c4]
  41c02c:	push   DWORD PTR [eax]
  41c02e:	mov    eax,DWORD PTR [ebp+0x8]
  41c031:	mov    eax,DWORD PTR [eax+0x1c0]
  41c037:	push   DWORD PTR [eax]
  41c039:	push   DWORD PTR [ebp-0x40]
  41c03c:	push   DWORD PTR [ebp-0x28]
  41c03f:	call   0x41cad6
  41c044:	mov    DWORD PTR [ebp-0x3c],eax
  41c047:	mov    eax,DWORD PTR [ebp-0x14]
  41c04a:	mov    ecx,DWORD PTR [ebp-0x28]
  41c04d:	xor    eax,ebx
  41c04f:	add    eax,esi
  41c051:	cmp    eax,ecx
  41c053:	je     0x41c074
  41c055:	mov    eax,DWORD PTR [ebp+0x8]
  41c058:	mov    ecx,DWORD PTR [ebp-0x50]
  41c05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41c061:	xor    ecx,ebx
  41c063:	add    ecx,esi
  41c065:	push   ecx
  41c066:	mov    ecx,DWORD PTR [ebp-0x14]
  41c069:	xor    ecx,ebx
  41c06b:	add    ecx,esi
  41c06d:	push   ecx
  41c06e:	push   DWORD PTR [ebp-0x28]
  41c071:	call   DWORD PTR [eax+0x18]
  41c074:	pop    edi
  41c075:	pop    esi
  41c076:	pop    ebx
  41c077:	leave  
  41c078:	ret    0x4
  41c07b:	push   ebp
  41c07c:	mov    ebp,esp
  41c07e:	push   ecx
  41c07f:	push   ecx
  41c080:	lea    eax,[ebp-0x8]
  41c083:	mov    DWORD PTR [ebp-0x4],eax
  41c086:	push   esi
  41c087:	mov    esi,DWORD PTR [ebp-0x4]
  41c08a:	mov    eax,0xf881ba0f
  41c08f:	mov    DWORD PTR [esi],eax
  41c091:	mov    esi,DWORD PTR [ebp-0x8]
  41c094:	cmp    esi,eax
  41c096:	pop    esi
  41c097:	jne    0x41c0a1
  41c099:	mov    BYTE PTR [ecx+0xa],0x7a
  41c09d:	mov    BYTE PTR [edx+0x8],0x2f
  41c0a1:	mov    BYTE PTR [edx+0xa],0x7a
  41c0a5:	mov    BYTE PTR [ecx+0x2],0x4
  41c0a9:	leave  
  41c0aa:	ret    
  41c0ab:	push   ebp
  41c0ac:	mov    ebp,esp
  41c0ae:	push   ecx
  41c0af:	push   ecx
  41c0b0:	lea    eax,[ebp-0x8]
  41c0b3:	mov    DWORD PTR [ebp-0x4],eax
  41c0b6:	mov    edx,DWORD PTR [ebp-0x4]
  41c0b9:	mov    eax,0xf88b0be3
  41c0be:	mov    DWORD PTR [edx],eax
  41c0c0:	mov    edx,DWORD PTR [ebp-0x8]
  41c0c3:	cmp    edx,eax
  41c0c5:	jne    0x41c0d6
  41c0c7:	mov    eax,DWORD PTR [ebp+0x8]
  41c0ca:	mov    BYTE PTR [ecx+0x9],0xe
  41c0ce:	mov    BYTE PTR [eax+0x7],0x47
  41c0d2:	mov    BYTE PTR [ecx+0x6],0xf
  41c0d6:	mov    BYTE PTR [ecx+0x3],0x1e
  41c0da:	leave  
  41c0db:	ret    0x4
  41c0de:	push   ebp
  41c0df:	mov    ebp,esp
  41c0e1:	push   ecx
  41c0e2:	push   ecx
  41c0e3:	lea    eax,[ebp-0x8]
  41c0e6:	mov    DWORD PTR [ebp-0x4],eax
  41c0e9:	mov    edx,DWORD PTR [ebp-0x4]
  41c0ec:	mov    eax,0x7e0da0f
  41c0f1:	mov    DWORD PTR [edx],eax
  41c0f3:	mov    edx,DWORD PTR [ebp-0x8]
  41c0f6:	cmp    edx,eax
  41c0f8:	jne    0x41c0fe
  41c0fa:	mov    BYTE PTR [ecx+0x7],0x47
  41c0fe:	mov    eax,DWORD PTR [ebp+0x8]
  41c101:	mov    BYTE PTR [ecx+0x1],0x1
  41c105:	mov    BYTE PTR [eax+0x9],0x2e
  41c109:	leave  
  41c10a:	ret    0x4
  41c10d:	push   ebp
  41c10e:	mov    ebp,esp
  41c110:	push   ecx
  41c111:	push   ecx
  41c112:	lea    eax,[ebp-0x8]
  41c115:	mov    DWORD PTR [ebp-0x4],eax
  41c118:	push   esi
  41c119:	mov    esi,DWORD PTR [ebp-0x4]
  41c11c:	mov    eax,0x7060e3e
  41c121:	mov    DWORD PTR [esi],eax
  41c123:	mov    esi,DWORD PTR [ebp-0x8]
  41c126:	cmp    esi,eax
  41c128:	pop    esi
  41c129:	jne    0x41c135
  41c12b:	mov    BYTE PTR [edx+0x4],0xb
  41c12f:	mov    WORD PTR [ecx+0x3],0xb1e
  41c135:	mov    BYTE PTR [edx],0x3f
  41c138:	leave  
  41c139:	ret    
  41c13a:	push   ebp
  41c13b:	mov    ebp,esp
  41c13d:	push   ecx
  41c13e:	push   ecx
  41c13f:	lea    eax,[ebp-0x8]
  41c142:	mov    DWORD PTR [ebp-0x4],eax
  41c145:	mov    edx,DWORD PTR [ebp-0x4]
  41c148:	mov    eax,0xf8870b3f
  41c14d:	mov    DWORD PTR [edx],eax
  41c14f:	mov    edx,DWORD PTR [ebp-0x8]
  41c152:	cmp    edx,eax
  41c154:	jne    0x41c161
  41c156:	mov    eax,DWORD PTR [ebp+0x8]
  41c159:	mov    BYTE PTR [ecx+0x8],0xf
  41c15d:	mov    BYTE PTR [eax+0x1],0x1
  41c161:	mov    BYTE PTR [ecx+0x5],0xf3
  41c165:	leave  
  41c166:	ret    0x4
  41c169:	push   esi
  41c16a:	mov    ecx,edi
  41c16c:	call   0x41c13a
  41c171:	mov    edx,edi
  41c173:	mov    ecx,esi
  41c175:	mov    BYTE PTR [esi],0x1f
  41c178:	call   0x41c10d
  41c17d:	push   esi
  41c17e:	mov    ecx,edi
  41c180:	mov    BYTE PTR [esi+0x5],0xf3
  41c184:	call   0x41c0de
  41c189:	push   esi
  41c18a:	mov    BYTE PTR [esi+0x6],0xf
  41c18e:	call   0x41c0ab
  41c193:	mov    BYTE PTR [esi+0x2],0x4
  41c197:	mov    edx,esi
  41c199:	jmp    0x41c07b
  41c19e:	push   ebp
  41c19f:	mov    ebp,esp
  41c1a1:	push   ecx
  41c1a2:	mov    ecx,DWORD PTR [edx+0x194]
  41c1a8:	push   esi
  41c1a9:	mov    esi,DWORD PTR [ebp+0x8]
  41c1ac:	mov    esi,DWORD PTR [esi]
  41c1ae:	mov    DWORD PTR [ecx],esi
  41c1b0:	mov    ecx,DWORD PTR [edx+0x194]
  41c1b6:	mov    ecx,DWORD PTR [ecx]
  41c1b8:	mov    esi,DWORD PTR [edx+0x190]
  41c1be:	mov    DWORD PTR [esi],ecx
  41c1c0:	mov    eax,DWORD PTR [edx+0x194]
  41c1c6:	mov    ecx,DWORD PTR [eax]
  41c1c8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41c1cb:	add    ecx,DWORD PTR [eax]
  41c1cd:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41c1d4:	mov    eax,DWORD PTR [ebp-0x4]
  41c1d7:	movzx  ecx,WORD PTR [ecx+0x16]
  41c1db:	xor    eax,0x7510899
  41c1e0:	add    eax,0x3272e0
  41c1e5:	pop    esi
  41c1e6:	test   ecx,eax
  41c1e8:	je     0x41c1f6
  41c1ea:	mov    eax,DWORD PTR [edx+0x1c8]
  41c1f0:	mov    DWORD PTR [eax],0xf89c85b8
  41c1f6:	leave  
  41c1f7:	ret    0x4
  41c1fa:	push   ebp
  41c1fb:	mov    ebp,esp
  41c1fd:	sub    esp,0x70
  41c200:	and    DWORD PTR [ebp-0x20],0x0
  41c204:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41c20b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41c212:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41c219:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41c220:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41c227:	mov    eax,DWORD PTR [ebp+0x20]
  41c22a:	mov    eax,DWORD PTR [eax+0x194]
  41c230:	mov    DWORD PTR [ebp-0xc],eax
  41c233:	mov    eax,DWORD PTR [ebp+0x20]
  41c236:	push   ebx
  41c237:	push   esi
  41c238:	mov    esi,DWORD PTR [eax+0x190]
  41c23e:	mov    eax,DWORD PTR [ebp+0x20]
  41c241:	mov    eax,DWORD PTR [eax+0x18c]
  41c247:	mov    DWORD PTR [ebp-0x8],eax
  41c24a:	mov    eax,DWORD PTR [eax]
  41c24c:	push   edi
  41c24d:	mov    DWORD PTR [ebp-0x4],esi
  41c250:	test   eax,eax
  41c252:	jne    0x41c25f
  41c254:	push   DWORD PTR [ebp+0x1c]
  41c257:	mov    edx,DWORD PTR [ebp+0x20]
  41c25a:	call   0x41c19e
  41c25f:	mov    eax,DWORD PTR [esi]
  41c261:	mov    ebx,DWORD PTR [esi]
  41c263:	add    ebx,DWORD PTR [eax+0x3c]
  41c266:	mov    eax,DWORD PTR [ebp+0xc]
  41c269:	mov    ecx,DWORD PTR [ebp-0x8]
  41c26c:	mov    ecx,DWORD PTR [ecx]
  41c26e:	mov    esi,0x7510899
  41c273:	xor    eax,esi
  41c275:	mov    edi,0x3272e0
  41c27a:	add    eax,edi
  41c27c:	cmp    eax,ecx
  41c27e:	jne    0x41c4b6
  41c284:	mov    eax,DWORD PTR [ebp-0xc]
  41c287:	mov    eax,DWORD PTR [eax]
  41c289:	mov    DWORD PTR [ebp-0x10],eax
  41c28c:	mov    eax,DWORD PTR [ebx+0x50]
  41c28f:	mov    DWORD PTR [ebp-0x68],eax
  41c292:	mov    eax,DWORD PTR [ebp-0x18]
  41c295:	xor    eax,esi
  41c297:	add    eax,edi
  41c299:	mov    DWORD PTR [ebp-0x64],eax
  41c29c:	mov    eax,DWORD PTR [ebp-0x14]
  41c29f:	and    DWORD PTR [ebp-0x6c],0x0
  41c2a3:	xor    eax,esi
  41c2a5:	add    eax,edi
  41c2a7:	mov    DWORD PTR [ebp-0x60],eax
  41c2aa:	lea    eax,[ebp-0x70]
  41c2ad:	push   eax
  41c2ae:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b1:	xor    eax,esi
  41c2b3:	add    eax,edi
  41c2b5:	push   eax
  41c2b6:	mov    eax,DWORD PTR [ebp+0x20]
  41c2b9:	add    eax,0xaa
  41c2be:	push   eax
  41c2bf:	mov    eax,DWORD PTR [ebp+0x20]
  41c2c2:	mov    eax,DWORD PTR [eax+0x198]
  41c2c8:	mov    DWORD PTR [ebp-0x70],0x4
  41c2cf:	push   DWORD PTR [eax]
  41c2d1:	mov    eax,DWORD PTR [ebp+0x10]
  41c2d4:	call   eax
  41c2d6:	mov    ecx,DWORD PTR [ebp-0xc]
  41c2d9:	mov    ecx,DWORD PTR [ecx]
  41c2db:	mov    edx,DWORD PTR [ebp-0x8]
  41c2de:	mov    DWORD PTR [ebp-0x6c],eax
  41c2e1:	mov    DWORD PTR [ebp+0x1c],eax
  41c2e4:	mov    DWORD PTR [edx],ecx
  41c2e6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c2e9:	mov    DWORD PTR [ecx],eax
  41c2eb:	mov    eax,DWORD PTR [ebx+0x50]
  41c2ee:	mov    DWORD PTR [ebp-0x68],eax
  41c2f1:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2f4:	xor    eax,esi
  41c2f6:	add    eax,edi
  41c2f8:	mov    DWORD PTR [ebp-0x64],eax
  41c2fb:	lea    eax,[ebp-0x20]
  41c2fe:	mov    DWORD PTR [ebp-0x60],eax
  41c301:	lea    eax,[ebp-0x70]
  41c304:	push   eax
  41c305:	mov    eax,DWORD PTR [ebp+0x8]
  41c308:	xor    eax,esi
  41c30a:	add    eax,edi
  41c30c:	push   eax
  41c30d:	mov    eax,DWORD PTR [ebp+0x20]
  41c310:	add    eax,0xee
  41c315:	push   eax
  41c316:	mov    eax,DWORD PTR [ebp+0x20]
  41c319:	mov    eax,DWORD PTR [eax+0x198]
  41c31f:	mov    DWORD PTR [ebp-0x70],0x4
  41c326:	push   DWORD PTR [eax]
  41c328:	mov    eax,DWORD PTR [ebp+0x10]
  41c32b:	call   eax
  41c32d:	test   eax,eax
  41c32f:	je     0x41c354
  41c331:	and    DWORD PTR [ebp+0xc],0x0
  41c335:	cmp    DWORD PTR [ebx+0x50],0x0
  41c339:	jbe    0x41c354
  41c33b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c33e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c341:	sub    ecx,eax
  41c343:	mov    dl,BYTE PTR [ecx+eax*1]
  41c346:	inc    DWORD PTR [ebp+0xc]
  41c349:	mov    BYTE PTR [eax],dl
  41c34b:	mov    edx,DWORD PTR [ebp+0xc]
  41c34e:	inc    eax
  41c34f:	cmp    edx,DWORD PTR [ebx+0x50]
  41c352:	jb     0x41c343
  41c354:	mov    edx,DWORD PTR [ebp+0x1c]
  41c357:	mov    ecx,DWORD PTR [edx+0x3c]
  41c35a:	add    ecx,edx
  41c35c:	mov    eax,DWORD PTR [ecx+0xa0]
  41c362:	mov    ebx,DWORD PTR [ecx+0x28]
  41c365:	add    eax,edx
  41c367:	sub    edx,DWORD PTR [ebp-0x10]
  41c36a:	add    ebx,DWORD PTR [ebp+0x1c]
  41c36d:	mov    DWORD PTR [ebp+0xc],edx
  41c370:	mov    DWORD PTR [ebp-0x2c],ecx
  41c373:	mov    DWORD PTR [ebp-0x14],ebx
  41c376:	mov    DWORD PTR [ebp-0x8],0x0
  41c37d:	jmp    0x41c3f9
  41c37f:	add    edx,0xfffffff8
  41c382:	shr    edx,1
  41c384:	mov    DWORD PTR [ebp-0x18],edx
  41c387:	je     0x41c3e5
  41c389:	lea    edx,[eax+0x8]
  41c38c:	mov    DWORD PTR [ebp-0x4],edx
  41c38f:	mov    edx,DWORD PTR [ebp-0x18]
  41c392:	mov    DWORD PTR [ebp-0x18],edx
  41c395:	mov    edx,DWORD PTR [ebp-0x4]
  41c398:	movzx  edx,WORD PTR [edx]
  41c39b:	mov    DWORD PTR [ebp-0x24],edx
  41c39e:	and    edx,0xfff
  41c3a4:	mov    DWORD PTR [ebp-0x28],edx
  41c3a7:	mov    edx,DWORD PTR [ebp-0x24]
  41c3aa:	shr    edx,0xc
  41c3ad:	add    edx,0xffcd8d20
  41c3b3:	xor    edx,esi
  41c3b5:	cmp    edx,0xf89c85ba
  41c3bb:	jne    0x41c3dc
  41c3bd:	mov    edx,DWORD PTR [ebp-0x28]
  41c3c0:	add    edx,DWORD PTR [ebp+0x1c]
  41c3c3:	mov    ebx,DWORD PTR [eax]
  41c3c5:	cmp    DWORD PTR [ebx+edx*1],0x0
  41c3c9:	je     0x41c3d9
  41c3cb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3ce:	add    ecx,DWORD PTR [ebx+edx*1]
  41c3d1:	mov    ebx,DWORD PTR [eax]
  41c3d3:	mov    DWORD PTR [edx+ebx*1],ecx
  41c3d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c3d9:	mov    ebx,DWORD PTR [ebp-0x14]
  41c3dc:	add    DWORD PTR [ebp-0x4],0x2
  41c3e0:	dec    DWORD PTR [ebp-0x18]
  41c3e3:	jne    0x41c395
  41c3e5:	mov    edx,DWORD PTR [ebp-0xc]
  41c3e8:	add    DWORD PTR [ebp-0x8],edx
  41c3eb:	mov    edx,DWORD PTR [ebp-0x8]
  41c3ee:	cmp    edx,DWORD PTR [ecx+0xa4]
  41c3f4:	jae    0x41c407
  41c3f6:	add    eax,DWORD PTR [ebp-0xc]
  41c3f9:	mov    edx,DWORD PTR [eax+0x4]
  41c3fc:	mov    DWORD PTR [ebp-0xc],edx
  41c3ff:	test   edx,edx
  41c401:	jne    0x41c37f
  41c407:	mov    eax,DWORD PTR [ebp-0x10]
  41c40a:	mov    DWORD PTR [ebp-0x6c],eax
  41c40d:	mov    DWORD PTR [ebp-0x70],0x4
  41c414:	mov    eax,DWORD PTR [ecx+0x50]
  41c417:	mov    DWORD PTR [ebp-0x68],eax
  41c41a:	mov    eax,DWORD PTR [ebp-0x1c]
  41c41d:	xor    eax,esi
  41c41f:	add    eax,edi
  41c421:	mov    DWORD PTR [ebp-0x64],eax
  41c424:	lea    eax,[ebp-0x20]
  41c427:	mov    DWORD PTR [ebp-0x60],eax
  41c42a:	lea    eax,[ebp-0x70]
  41c42d:	push   eax
  41c42e:	mov    eax,DWORD PTR [ebp+0x8]
  41c431:	xor    eax,esi
  41c433:	add    eax,edi
  41c435:	push   eax
  41c436:	mov    eax,DWORD PTR [ebp+0x20]
  41c439:	add    eax,0xee
  41c43e:	push   eax
  41c43f:	mov    eax,DWORD PTR [ebp+0x20]
  41c442:	mov    eax,DWORD PTR [eax+0x198]
  41c448:	push   DWORD PTR [eax]
  41c44a:	mov    eax,DWORD PTR [ebp+0x10]
  41c44d:	call   eax
  41c44f:	mov    eax,DWORD PTR [ebp+0x20]
  41c452:	mov    eax,DWORD PTR [eax+0x180]
  41c458:	add    eax,DWORD PTR [ebp+0xc]
  41c45b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45e:	push   DWORD PTR [ebp+0x18]
  41c461:	mov    DWORD PTR [eax],ecx
  41c463:	push   DWORD PTR [ebp+0x14]
  41c466:	push   DWORD PTR [ebp+0x1c]
  41c469:	call   ebx
  41c46b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c46e:	add    ecx,DWORD PTR [ebp+0x20]
  41c471:	lea    eax,[ebp+0x4]
  41c474:	mov    DWORD PTR [ebp+0x20],ecx
  41c477:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47d:	mov    edx,DWORD PTR [ecx+0x190]
  41c483:	mov    ecx,DWORD PTR [ebp+0x20]
  41c486:	mov    ecx,DWORD PTR [ecx+0x18c]
  41c48c:	mov    esi,DWORD PTR [ecx]
  41c48e:	cmp    DWORD PTR [eax],esi
  41c490:	jb     0x41c4b1
  41c492:	mov    esi,DWORD PTR [edx]
  41c494:	mov    edi,DWORD PTR [edx]
  41c496:	mov    esi,DWORD PTR [esi+0x3c]
  41c499:	lea    esi,[edi+esi*1+0x50]
  41c49d:	mov    edi,DWORD PTR [ecx]
  41c49f:	add    edi,DWORD PTR [esi]
  41c4a1:	cmp    DWORD PTR [eax],edi
  41c4a3:	jae    0x41c4b1
  41c4a5:	mov    esi,DWORD PTR [ecx]
  41c4a7:	mov    ecx,DWORD PTR [eax]
  41c4a9:	mov    edx,DWORD PTR [edx]
  41c4ab:	sub    ecx,esi
  41c4ad:	add    edx,ecx
  41c4af:	mov    DWORD PTR [eax],edx
  41c4b1:	mov    eax,DWORD PTR [ebp+0xc]
  41c4b4:	jmp    0x41c4b8
  41c4b6:	xor    eax,eax
  41c4b8:	pop    edi
  41c4b9:	pop    esi
  41c4ba:	pop    ebx
  41c4bb:	leave  
  41c4bc:	ret    0x1c
  41c4bf:	push   ebp
  41c4c0:	mov    ebp,esp
  41c4c2:	sub    esp,0x1c
  41c4c5:	push   esi
  41c4c6:	mov    esi,eax
  41c4c8:	mov    eax,DWORD PTR [ecx+0x190]
  41c4ce:	cmp    DWORD PTR [eax],0x0
  41c4d1:	je     0x41c5e1
  41c4d7:	test   edx,edx
  41c4d9:	je     0x41c5e1
  41c4df:	test   esi,esi
  41c4e1:	je     0x41c5e1
  41c4e7:	mov    eax,DWORD PTR [esi+0x88]
  41c4ed:	test   eax,eax
  41c4ef:	je     0x41c5dc
  41c4f5:	cmp    DWORD PTR [esi+0x8c],0x10
  41c4fc:	je     0x41c5dc
  41c502:	cmp    DWORD PTR [esi+0x34],edx
  41c505:	je     0x41c5dc
  41c50b:	mov    esi,DWORD PTR [ecx+0x18c]
  41c511:	and    DWORD PTR [ebp-0x10],0x0
  41c515:	mov    ecx,edx
  41c517:	sub    ecx,DWORD PTR [esi]
  41c519:	add    eax,edx
  41c51b:	movzx  edx,WORD PTR [eax+0xc]
  41c51f:	mov    DWORD PTR [ebp-0x1c],ecx
  41c522:	movzx  ecx,WORD PTR [eax+0xe]
  41c526:	add    ecx,edx
  41c528:	je     0x41c5dc
  41c52e:	lea    ecx,[eax+0x14]
  41c531:	push   ebx
  41c532:	mov    DWORD PTR [ebp-0x18],ecx
  41c535:	mov    esi,0x7fffffff
  41c53a:	push   edi
  41c53b:	test   DWORD PTR [ecx],esi
  41c53d:	je     0x41c5be
  41c53f:	mov    edx,DWORD PTR [ecx]
  41c541:	and    DWORD PTR [ebp-0xc],0x0
  41c545:	and    edx,esi
  41c547:	add    edx,eax
  41c549:	movzx  edi,WORD PTR [edx+0xe]
  41c54d:	movzx  ebx,WORD PTR [edx+0xc]
  41c551:	add    edi,ebx
  41c553:	je     0x41c5be
  41c555:	lea    ecx,[edx+0x14]
  41c558:	mov    DWORD PTR [ebp-0x14],ecx
  41c55b:	test   DWORD PTR [ecx],esi
  41c55d:	je     0x41c5a0
  41c55f:	mov    ecx,DWORD PTR [ecx]
  41c561:	and    DWORD PTR [ebp-0x8],0x0
  41c565:	and    ecx,esi
  41c567:	add    ecx,eax
  41c569:	movzx  edi,WORD PTR [ecx+0xe]
  41c56d:	movzx  ebx,WORD PTR [ecx+0xc]
  41c571:	add    edi,ebx
  41c573:	je     0x41c5a0
  41c575:	lea    edi,[ecx+0x14]
  41c578:	mov    DWORD PTR [ebp-0x4],edi
  41c57b:	mov    edi,DWORD PTR [ebp-0x4]
  41c57e:	mov    edi,DWORD PTR [edi]
  41c580:	test   edi,edi
  41c582:	je     0x41c58a
  41c584:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c587:	add    DWORD PTR [edi+eax*1],ebx
  41c58a:	movzx  edi,WORD PTR [ecx+0xe]
  41c58e:	movzx  ebx,WORD PTR [ecx+0xc]
  41c592:	inc    DWORD PTR [ebp-0x8]
  41c595:	add    DWORD PTR [ebp-0x4],0x8
  41c599:	add    edi,ebx
  41c59b:	cmp    DWORD PTR [ebp-0x8],edi
  41c59e:	jb     0x41c57b
  41c5a0:	movzx  edi,WORD PTR [edx+0xe]
  41c5a4:	movzx  ebx,WORD PTR [edx+0xc]
  41c5a8:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ab:	inc    DWORD PTR [ebp-0xc]
  41c5ae:	add    ecx,0x8
  41c5b1:	add    edi,ebx
  41c5b3:	mov    DWORD PTR [ebp-0x14],ecx
  41c5b6:	cmp    DWORD PTR [ebp-0xc],edi
  41c5b9:	jb     0x41c55b
  41c5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  41c5be:	movzx  edx,WORD PTR [eax+0xe]
  41c5c2:	movzx  edi,WORD PTR [eax+0xc]
  41c5c6:	inc    DWORD PTR [ebp-0x10]
  41c5c9:	add    ecx,0x8
  41c5cc:	add    edx,edi
  41c5ce:	mov    DWORD PTR [ebp-0x18],ecx
  41c5d1:	cmp    DWORD PTR [ebp-0x10],edx
  41c5d4:	jb     0x41c53b
  41c5da:	pop    edi
  41c5db:	pop    ebx
  41c5dc:	xor    eax,eax
  41c5de:	inc    eax
  41c5df:	jmp    0x41c5e3
  41c5e1:	xor    eax,eax
  41c5e3:	pop    esi
  41c5e4:	leave  
  41c5e5:	ret    
  41c5e6:	push   ebp
  41c5e7:	mov    ebp,esp
  41c5e9:	mov    ecx,DWORD PTR [ecx+0x190]
  41c5ef:	mov    eax,DWORD PTR [ebp+0xc]
  41c5f2:	sub    esp,0x10
  41c5f5:	push   ebx
  41c5f6:	xor    ebx,ebx
  41c5f8:	push   esi
  41c5f9:	push   edi
  41c5fa:	cmp    DWORD PTR [ecx],ebx
  41c5fc:	je     0x41c684
  41c602:	cmp    eax,ebx
  41c604:	je     0x41c684
  41c606:	cmp    DWORD PTR [eax+0x78],ebx
  41c609:	jne    0x41c610
  41c60b:	xor    eax,eax
  41c60d:	inc    eax
  41c60e:	jmp    0x41c686
  41c610:	mov    eax,DWORD PTR [eax+0x78]
  41c613:	add    eax,DWORD PTR [ebp+0x8]
  41c616:	mov    ecx,DWORD PTR [eax+0x1c]
  41c619:	mov    edx,DWORD PTR [eax+0x24]
  41c61c:	mov    esi,DWORD PTR [eax+0x14]
  41c61f:	mov    edi,DWORD PTR [eax+0x18]
  41c622:	add    ecx,DWORD PTR [ebp+0x8]
  41c625:	add    edx,DWORD PTR [ebp+0x8]
  41c628:	mov    DWORD PTR [ebp-0x4],esi
  41c62b:	cmp    esi,edi
  41c62d:	ja     0x41c632
  41c62f:	mov    DWORD PTR [ebp-0x4],edi
  41c632:	mov    DWORD PTR [ebp-0x8],ebx
  41c635:	cmp    DWORD PTR [ebp-0x4],ebx
  41c638:	jbe    0x41c60b
  41c63a:	cmp    ebx,DWORD PTR [eax+0x14]
  41c63d:	jae    0x41c645
  41c63f:	movzx  esi,WORD PTR [edx+ebx*2]
  41c643:	jmp    0x41c647
  41c645:	mov    esi,ebx
  41c647:	lea    esi,[ecx+esi*4]
  41c64a:	mov    edi,DWORD PTR [esi]
  41c64c:	test   edi,edi
  41c64e:	je     0x41c679
  41c650:	add    edi,DWORD PTR [ebp+0x8]
  41c653:	mov    DWORD PTR [ebp-0x10],edi
  41c656:	cmp    edi,eax
  41c658:	jbe    0x41c66a
  41c65a:	mov    ebx,DWORD PTR [ebp+0xc]
  41c65d:	mov    ebx,DWORD PTR [ebx+0x7c]
  41c660:	add    ebx,eax
  41c662:	cmp    edi,ebx
  41c664:	jae    0x41c66a
  41c666:	mov    esi,DWORD PTR [esi]
  41c668:	jmp    0x41c672
  41c66a:	sub    edi,DWORD PTR [ebp+0x8]
  41c66d:	mov    DWORD PTR [esi],edi
  41c66f:	mov    esi,DWORD PTR [ebp-0x10]
  41c672:	test   esi,esi
  41c674:	je     0x41c684
  41c676:	mov    ebx,DWORD PTR [ebp-0x8]
  41c679:	inc    ebx
  41c67a:	mov    DWORD PTR [ebp-0x8],ebx
  41c67d:	cmp    ebx,DWORD PTR [ebp-0x4]
  41c680:	jb     0x41c63a
  41c682:	jmp    0x41c60b
  41c684:	xor    eax,eax
  41c686:	pop    edi
  41c687:	pop    esi
  41c688:	pop    ebx
  41c689:	leave  
  41c68a:	ret    0x8
  41c68d:	push   ebp
  41c68e:	mov    ebp,esp
  41c690:	sub    esp,0x2c
  41c693:	mov    edx,0xf89c85b9
  41c698:	mov    DWORD PTR [ebp-0x4],edx
  41c69b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41c6a2:	mov    eax,DWORD PTR [ebp-0x4]
  41c6a5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ab:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b4:	push   ebx
  41c6b5:	mov    ebx,DWORD PTR [ebp+0x10]
  41c6b8:	push   esi
  41c6b9:	mov    esi,0x7510899
  41c6be:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41c6c5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6c8:	mov    ebx,DWORD PTR [ebx+0x190]
  41c6ce:	push   edi
  41c6cf:	mov    edi,0x3272e0
  41c6d4:	xor    ecx,esi
  41c6d6:	xor    eax,esi
  41c6d8:	add    eax,edi
  41c6da:	add    ecx,edi
  41c6dc:	mov    DWORD PTR [ebp-0x18],eax
  41c6df:	cmp    ecx,DWORD PTR [ebx]
  41c6e1:	je     0x41c962
  41c6e7:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6ea:	mov    ecx,DWORD PTR [ebp+0xc]
  41c6ed:	xor    ebx,esi
  41c6ef:	add    ebx,edi
  41c6f1:	cmp    ebx,ecx
  41c6f3:	je     0x41c962
  41c6f9:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6fc:	mov    ecx,DWORD PTR [ecx+0x80]
  41c702:	xor    ebx,esi
  41c704:	add    ebx,edi
  41c706:	cmp    ecx,ebx
  41c708:	je     0x41c95d
  41c70e:	add    ecx,DWORD PTR [ebp+0x8]
  41c711:	mov    DWORD PTR [ebp-0x2c],ecx
  41c714:	mov    ebx,edx
  41c716:	xor    ebx,esi
  41c718:	add    ebx,edi
  41c71a:	mov    DWORD PTR [ebp-0x10],ebx
  41c71d:	mov    ebx,DWORD PTR [ebp-0x10]
  41c720:	cmp    ebx,edx
  41c722:	je     0x41c736
  41c724:	mov    edx,DWORD PTR [ebp-0x10]
  41c727:	mov    ebx,DWORD PTR [ebp-0x4]
  41c72a:	imul   edx,edx,0x14
  41c72d:	xor    ebx,esi
  41c72f:	add    ebx,edi
  41c731:	cmp    DWORD PTR [edx+ecx*1],ebx
  41c734:	jne    0x41c74d
  41c736:	mov    edx,DWORD PTR [ebp-0x10]
  41c739:	mov    ebx,DWORD PTR [ebp-0x4]
  41c73c:	imul   edx,edx,0x14
  41c73f:	xor    ebx,esi
  41c741:	add    ebx,edi
  41c743:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41c747:	je     0x41c94f
  41c74d:	mov    eax,DWORD PTR [ebp-0x4]
  41c750:	mov    ebx,DWORD PTR [ebp-0x4]
  41c753:	mov    eax,DWORD PTR [ebp-0x10]
  41c756:	imul   eax,eax,0x14
  41c759:	add    eax,ecx
  41c75b:	mov    ecx,DWORD PTR [eax+0x10]
  41c75e:	add    ecx,DWORD PTR [ebp+0x8]
  41c761:	xor    ebx,esi
  41c763:	mov    DWORD PTR [ebp-0x1c],ecx
  41c766:	mov    ecx,DWORD PTR [ebp-0x4]
  41c769:	mov    edx,DWORD PTR [ebp-0x4]
  41c76c:	xor    ecx,esi
  41c76e:	add    ecx,edi
  41c770:	xor    edx,esi
  41c772:	mov    DWORD PTR [ebp-0x24],ecx
  41c775:	mov    ecx,DWORD PTR [eax]
  41c777:	add    edx,edi
  41c779:	add    ebx,edi
  41c77b:	cmp    ecx,edx
  41c77d:	je     0x41c785
  41c77f:	add    ecx,DWORD PTR [ebp+0x8]
  41c782:	mov    DWORD PTR [ebp-0x24],ecx
  41c785:	mov    ecx,DWORD PTR [ebp-0x4]
  41c788:	xor    ecx,esi
  41c78a:	add    ecx,DWORD PTR [eax+0xc]
  41c78d:	mov    eax,DWORD PTR [ebp+0x8]
  41c790:	lea    eax,[ecx+eax*1+0x3272e0]
  41c797:	mov    DWORD PTR [ebp+0xc],eax
  41c79a:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41c7a1:	mov    eax,DWORD PTR [ebp+0x10]
  41c7a4:	push   DWORD PTR [ebp+0xc]
  41c7a7:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7ad:	call   DWORD PTR [eax]
  41c7af:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7b2:	xor    ecx,esi
  41c7b4:	add    ecx,edi
  41c7b6:	mov    DWORD PTR [ebp-0xc],eax
  41c7b9:	cmp    ecx,eax
  41c7bb:	jne    0x41c7cf
  41c7bd:	mov    eax,DWORD PTR [ebp+0x10]
  41c7c0:	push   DWORD PTR [ebp+0xc]
  41c7c3:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7c9:	call   DWORD PTR [eax+0xc]
  41c7cc:	mov    DWORD PTR [ebp-0xc],eax
  41c7cf:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41c7d6:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41c7dd:	mov    eax,DWORD PTR [ebp-0x4]
  41c7e0:	xor    eax,esi
  41c7e2:	add    eax,edi
  41c7e4:	cmp    eax,DWORD PTR [ebp-0xc]
  41c7e7:	jne    0x41c80c
  41c7e9:	mov    eax,DWORD PTR [ebp-0x8]
  41c7ec:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7ef:	xor    eax,esi
  41c7f1:	xor    ecx,esi
  41c7f3:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c7fa:	mov    eax,DWORD PTR [ebp+0x10]
  41c7fd:	mov    eax,DWORD PTR [eax+0x1d8]
  41c803:	add    ecx,edi
  41c805:	imul   ecx,ebx
  41c808:	push   ecx
  41c809:	call   DWORD PTR [eax+0x24]
  41c80c:	mov    eax,DWORD PTR [ebp-0x4]
  41c80f:	xor    eax,esi
  41c811:	add    eax,edi
  41c813:	cmp    eax,DWORD PTR [ebp-0xc]
  41c816:	jne    0x41c827
  41c818:	mov    eax,DWORD PTR [ebp-0x28]
  41c81b:	xor    eax,esi
  41c81d:	add    eax,edi
  41c81f:	cmp    ebx,eax
  41c821:	jbe    0x41c7a1
  41c827:	mov    eax,DWORD PTR [ebp-0x4]
  41c82a:	xor    eax,esi
  41c82c:	add    eax,edi
  41c82e:	cmp    eax,DWORD PTR [ebp-0xc]
  41c831:	jne    0x41c84a
  41c833:	mov    eax,DWORD PTR [ebp-0x8]
  41c836:	mov    ecx,DWORD PTR [ebp-0x18]
  41c839:	xor    eax,esi
  41c83b:	lea    eax,[ecx+eax*1+0x3272e0]
  41c842:	mov    DWORD PTR [ebp-0x18],eax
  41c845:	jmp    0x41c939
  41c84a:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41c851:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41c858:	mov    ebx,DWORD PTR [ebp-0x4]
  41c85b:	xor    ebx,esi
  41c85d:	add    ebx,edi
  41c85f:	jmp    0x41c926
  41c864:	mov    eax,DWORD PTR [ebp-0x4]
  41c867:	xor    eax,esi
  41c869:	add    eax,edi
  41c86b:	mov    DWORD PTR [ebp-0x14],eax
  41c86e:	mov    eax,DWORD PTR [ebp-0x4]
  41c871:	xor    eax,esi
  41c873:	add    eax,edi
  41c875:	mov    DWORD PTR [ebp+0xc],eax
  41c878:	mov    ecx,DWORD PTR [ebp-0x4]
  41c87b:	mov    eax,DWORD PTR [ebp-0x24]
  41c87e:	xor    ecx,esi
  41c880:	add    ecx,edi
  41c882:	cmp    ecx,eax
  41c884:	je     0x41c88c
  41c886:	mov    eax,DWORD PTR [eax+ebx*4]
  41c889:	mov    DWORD PTR [ebp-0x14],eax
  41c88c:	mov    eax,DWORD PTR [ebp-0x1c]
  41c88f:	mov    eax,DWORD PTR [eax+ebx*4]
  41c892:	mov    DWORD PTR [ebp+0xc],eax
  41c895:	mov    eax,DWORD PTR [ebp-0x4]
  41c898:	mov    ecx,DWORD PTR [ebp-0x14]
  41c89b:	xor    eax,esi
  41c89d:	add    eax,edi
  41c89f:	cmp    eax,ecx
  41c8a1:	je     0x41c8cc
  41c8a3:	mov    eax,DWORD PTR [ebp-0x4]
  41c8a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8a9:	xor    eax,esi
  41c8ab:	add    eax,edi
  41c8ad:	shr    ecx,0x1f
  41c8b0:	cmp    eax,ecx
  41c8b2:	je     0x41c8cc
  41c8b4:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8b7:	mov    eax,DWORD PTR [ebp+0x10]
  41c8ba:	mov    eax,DWORD PTR [eax+0x1d8]
  41c8c0:	movzx  ecx,cx
  41c8c3:	push   ecx
  41c8c4:	push   DWORD PTR [ebp-0xc]
  41c8c7:	call   DWORD PTR [eax+0x8]
  41c8ca:	jmp    0x41c8e5
  41c8cc:	mov    eax,DWORD PTR [ebp+0xc]
  41c8cf:	add    eax,DWORD PTR [ebp+0x8]
  41c8d2:	mov    ecx,DWORD PTR [ebp+0x10]
  41c8d5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c8db:	add    eax,0x2
  41c8de:	push   eax
  41c8df:	push   DWORD PTR [ebp-0xc]
  41c8e2:	call   DWORD PTR [ecx+0x8]
  41c8e5:	mov    DWORD PTR [ebp+0xc],eax
  41c8e8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8eb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8ee:	xor    eax,esi
  41c8f0:	add    eax,edi
  41c8f2:	cmp    eax,ecx
  41c8f4:	mov    eax,DWORD PTR [ebp-0x8]
  41c8f7:	jne    0x41c90a
  41c8f9:	mov    ecx,DWORD PTR [ebp-0x18]
  41c8fc:	xor    eax,esi
  41c8fe:	lea    eax,[ecx+eax*1+0x3272e0]
  41c905:	mov    DWORD PTR [ebp-0x18],eax
  41c908:	jmp    0x41c91a
  41c90a:	mov    ecx,DWORD PTR [ebp+0xc]
  41c90d:	xor    eax,esi
  41c90f:	add    eax,edi
  41c911:	imul   eax,ecx
  41c914:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c917:	mov    DWORD PTR [ecx+ebx*4],eax
  41c91a:	mov    eax,DWORD PTR [ebp-0x8]
  41c91d:	xor    eax,esi
  41c91f:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c926:	mov    eax,DWORD PTR [ebp-0x4]
  41c929:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c92c:	xor    eax,esi
  41c92e:	add    eax,edi
  41c930:	cmp    DWORD PTR [ecx+ebx*4],eax
  41c933:	jne    0x41c864
  41c939:	mov    edx,DWORD PTR [ebp-0x10]
  41c93c:	mov    eax,DWORD PTR [ebp-0x18]
  41c93f:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c942:	sub    edx,0x3272df
  41c948:	xor    edx,esi
  41c94a:	jmp    0x41c714
  41c94f:	mov    ecx,DWORD PTR [ebp-0x4]
  41c952:	xor    ecx,esi
  41c954:	add    ecx,edi
  41c956:	cmp    eax,ecx
  41c958:	mov    eax,DWORD PTR [ebp-0x4]
  41c95b:	jne    0x41c965
  41c95d:	mov    eax,DWORD PTR [ebp-0x8]
  41c960:	jmp    0x41c965
  41c962:	mov    eax,DWORD PTR [ebp-0x4]
  41c965:	xor    eax,esi
  41c967:	add    eax,edi
  41c969:	pop    edi
  41c96a:	pop    esi
  41c96b:	pop    ebx
  41c96c:	leave  
  41c96d:	ret    0xc
  41c970:	push   ebp
  41c971:	mov    ebp,esp
  41c973:	sub    esp,0x28
  41c976:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41c97d:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41c984:	mov    eax,DWORD PTR [ebp+0xc]
  41c987:	mov    DWORD PTR [ebp+0xc],eax
  41c98a:	push   esi
  41c98b:	mov    eax,eax
  41c98d:	mov    eax,DWORD PTR [ebp-0x4]
  41c990:	mov    esi,DWORD PTR [ebp+0x8]
  41c993:	mov    ecx,0x7510899
  41c998:	xor    eax,ecx
  41c99a:	mov    edx,0x3272e0
  41c99f:	add    eax,edx
  41c9a1:	cmp    esi,eax
  41c9a3:	je     0x41caca
  41c9a9:	mov    eax,DWORD PTR [ebp+0x8]
  41c9ac:	mov    esi,DWORD PTR [ebp+0x8]
  41c9af:	add    esi,DWORD PTR [eax+0x3c]
  41c9b2:	push   edi
  41c9b3:	mov    DWORD PTR [ebp+0xc],esi
  41c9b6:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41c9bd:	mov    eax,DWORD PTR [ebp-0x1c]
  41c9c0:	mov    esi,DWORD PTR [ebp-0x4]
  41c9c3:	mov    edi,DWORD PTR [ebp+0xc]
  41c9c6:	xor    esi,ecx
  41c9c8:	xor    eax,ecx
  41c9ca:	add    esi,edx
  41c9cc:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41c9d3:	je     0x41cac4
  41c9d9:	mov    esi,DWORD PTR [ebp+0xc]
  41c9dc:	mov    eax,DWORD PTR [ebp+0x8]
  41c9df:	add    eax,DWORD PTR [esi+0xa0]
  41c9e5:	mov    esi,DWORD PTR [ebp+0x8]
  41c9e8:	mov    edi,DWORD PTR [ebp+0xc]
  41c9eb:	sub    esi,DWORD PTR [edi+0x34]
  41c9ee:	mov    edi,DWORD PTR [ebp-0x4]
  41c9f1:	xor    edi,ecx
  41c9f3:	add    edi,edx
  41c9f5:	mov    DWORD PTR [ebp-0x24],esi
  41c9f8:	cmp    esi,edi
  41c9fa:	je     0x41cac4
  41ca00:	mov    esi,DWORD PTR [ebp-0x4]
  41ca03:	xor    esi,ecx
  41ca05:	add    esi,edx
  41ca07:	mov    DWORD PTR [ebp-0x8],esi
  41ca0a:	push   ebx
  41ca0b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ca12:	jmp    0x41caae
  41ca17:	mov    esi,DWORD PTR [ebp-0x4]
  41ca1a:	xor    esi,ecx
  41ca1c:	lea    edi,[ebx-0x8]
  41ca1f:	add    esi,edx
  41ca21:	shr    edi,1
  41ca23:	cmp    esi,edi
  41ca25:	jae    0x41ca94
  41ca27:	sub    edi,esi
  41ca29:	lea    ebx,[eax+esi*2+0x8]
  41ca2d:	mov    DWORD PTR [ebp-0x18],edi
  41ca30:	movzx  esi,WORD PTR [ebx]
  41ca33:	and    esi,0xfff
  41ca39:	mov    DWORD PTR [ebp-0x14],esi
  41ca3c:	mov    edi,DWORD PTR [ebp-0x14]
  41ca3f:	mov    esi,DWORD PTR [eax]
  41ca41:	sub    esi,edx
  41ca43:	add    edi,esi
  41ca45:	movzx  esi,WORD PTR [ebx]
  41ca48:	shr    esi,0xc
  41ca4b:	xor    edi,ecx
  41ca4d:	mov    DWORD PTR [ebp-0x20],edi
  41ca50:	mov    DWORD PTR [ebp-0x14],esi
  41ca53:	mov    esi,DWORD PTR [ebp-0x20]
  41ca56:	mov    edi,DWORD PTR [ebp+0x8]
  41ca59:	xor    esi,ecx
  41ca5b:	lea    esi,[esi+edi*1+0x3272e0]
  41ca62:	mov    DWORD PTR [ebp-0x20],esi
  41ca65:	mov    esi,DWORD PTR [ebp-0x10]
  41ca68:	mov    edi,DWORD PTR [ebp-0x14]
  41ca6b:	xor    esi,ecx
  41ca6d:	add    esi,edx
  41ca6f:	cmp    edi,esi
  41ca71:	jne    0x41ca89
  41ca73:	mov    esi,DWORD PTR [ebp-0x10]
  41ca76:	mov    edi,DWORD PTR [ebp-0x14]
  41ca79:	xor    esi,ecx
  41ca7b:	add    esi,edx
  41ca7d:	cmp    edi,esi
  41ca7f:	jne    0x41ca89
  41ca81:	mov    esi,DWORD PTR [ebp-0x20]
  41ca84:	mov    edi,DWORD PTR [ebp-0x24]
  41ca87:	add    DWORD PTR [esi],edi
  41ca89:	add    ebx,0x2
  41ca8c:	dec    DWORD PTR [ebp-0x18]
  41ca8f:	jne    0x41ca30
  41ca91:	mov    ebx,DWORD PTR [ebp-0xc]
  41ca94:	add    DWORD PTR [ebp-0x8],ebx
  41ca97:	mov    esi,DWORD PTR [ebp-0x1c]
  41ca9a:	mov    edi,DWORD PTR [ebp-0x8]
  41ca9d:	mov    ebx,DWORD PTR [ebp+0xc]
  41caa0:	xor    esi,ecx
  41caa2:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41caa9:	jae    0x41cac3
  41caab:	add    eax,DWORD PTR [ebp-0xc]
  41caae:	mov    esi,DWORD PTR [ebp-0x4]
  41cab1:	mov    ebx,DWORD PTR [eax+0x4]
  41cab4:	xor    esi,ecx
  41cab6:	add    esi,edx
  41cab8:	mov    DWORD PTR [ebp-0xc],ebx
  41cabb:	cmp    ebx,esi
  41cabd:	jne    0x41ca17
  41cac3:	pop    ebx
  41cac4:	mov    eax,DWORD PTR [ebp-0x28]
  41cac7:	pop    edi
  41cac8:	jmp    0x41cacd
  41caca:	mov    eax,DWORD PTR [ebp-0x4]
  41cacd:	xor    eax,ecx
  41cacf:	add    eax,edx
  41cad1:	pop    esi
  41cad2:	leave  
  41cad3:	ret    0x8
  41cad6:	push   ebp
  41cad7:	mov    ebp,esp
  41cad9:	sub    esp,0xcc
  41cadf:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41cae6:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41caed:	mov    eax,DWORD PTR [ebp-0x4]
  41caf0:	push   ebx
  41caf1:	push   esi
  41caf2:	mov    esi,0x7510899
  41caf7:	xor    eax,esi
  41caf9:	push   edi
  41cafa:	mov    edi,0x3272e0
  41caff:	add    eax,edi
  41cb01:	mov    DWORD PTR [ebp-0x1c],eax
  41cb04:	mov    eax,DWORD PTR [ebp-0x4]
  41cb07:	xor    eax,esi
  41cb09:	add    eax,edi
  41cb0b:	mov    DWORD PTR [ebp-0x8],eax
  41cb0e:	mov    ebx,DWORD PTR [ebp+0x20]
  41cb11:	mov    eax,DWORD PTR [ebp-0x14]
  41cb14:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb17:	xor    eax,ecx
  41cb19:	mov    DWORD PTR [ebp-0x14],eax
  41cb1c:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41cb23:	mov    eax,DWORD PTR [ebp-0xc]
  41cb26:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb29:	xor    eax,ecx
  41cb2b:	mov    DWORD PTR [ebp-0xc],eax
  41cb2e:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41cb35:	mov    eax,DWORD PTR [ebp-0x10]
  41cb38:	mov    ecx,DWORD PTR [ebp-0x10]
  41cb3b:	xor    eax,ecx
  41cb3d:	mov    DWORD PTR [ebp-0x10],eax
  41cb40:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41cb47:	mov    eax,DWORD PTR [ebp-0x20]
  41cb4a:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb4d:	xor    eax,ecx
  41cb4f:	mov    DWORD PTR [ebp-0x20],eax
  41cb52:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41cb59:	mov    eax,0x9471
  41cb5e:	mov    WORD PTR [ebp+0x20],ax
  41cb62:	mov    eax,DWORD PTR [ebp+0x8]
  41cb65:	test   eax,eax
  41cb67:	je     0x41cfc2
  41cb6d:	mov    eax,DWORD PTR [ebp+0xc]
  41cb70:	test   eax,eax
  41cb72:	je     0x41cfc2
  41cb78:	mov    eax,DWORD PTR [ebp+0x18]
  41cb7b:	test   eax,eax
  41cb7d:	je     0x41cfc2
  41cb83:	mov    ax,WORD PTR [ebp+0x20]
  41cb87:	mov    ecx,0x8a8c
  41cb8c:	xor    ax,cx
  41cb8f:	mov    ecx,0x3b50
  41cb94:	add    ax,cx
  41cb97:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb9a:	cmp    WORD PTR [ecx],ax
  41cb9d:	jne    0x41cfc2
  41cba3:	mov    eax,DWORD PTR [ebp-0x4]
  41cba6:	xor    eax,esi
  41cba8:	add    eax,edi
  41cbaa:	mov    DWORD PTR [ebp-0x30],eax
  41cbad:	mov    eax,DWORD PTR [ebp-0x4]
  41cbb0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbb3:	mov    eax,DWORD PTR [ebp+0x8]
  41cbb6:	add    eax,DWORD PTR [ecx+0x3c]
  41cbb9:	mov    DWORD PTR [ebp+0xc],eax
  41cbbc:	mov    eax,DWORD PTR [eax+0x50]
  41cbbf:	test   eax,eax
  41cbc1:	je     0x41cfc2
  41cbc7:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41cbce:	mov    eax,DWORD PTR [ebp-0x2c]
  41cbd1:	xor    eax,esi
  41cbd3:	add    eax,edi
  41cbd5:	mov    DWORD PTR [ebp-0x2c],eax
  41cbd8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbdb:	mov    eax,DWORD PTR [ebx+0x190]
  41cbe1:	mov    ecx,DWORD PTR [eax]
  41cbe3:	mov    ecx,DWORD PTR [ecx+0x3c]
  41cbe6:	add    ecx,DWORD PTR [eax]
  41cbe8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbeb:	mov    eax,DWORD PTR [ebx+0x18c]
  41cbf1:	mov    edx,DWORD PTR [eax]
  41cbf3:	mov    DWORD PTR [ebp-0x18],ecx
  41cbf6:	mov    DWORD PTR [ebp+0x20],edx
  41cbf9:	cmp    edx,edx
  41cbfb:	jne    0x41cc2f
  41cbfd:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cc03:	lea    edx,[ebp-0x1c]
  41cc06:	push   edx
  41cc07:	mov    edx,DWORD PTR [ebp-0xc]
  41cc0a:	xor    edx,esi
  41cc0c:	add    edx,edi
  41cc0e:	push   edx
  41cc0f:	push   DWORD PTR [ecx+0x50]
  41cc12:	push   DWORD PTR [ebp+0x20]
  41cc15:	call   DWORD PTR [eax+0x1c]
  41cc18:	mov    eax,DWORD PTR [ebp-0x18]
  41cc1b:	mov    ecx,DWORD PTR [eax+0x54]
  41cc1e:	mov    eax,DWORD PTR [eax+0x50]
  41cc21:	sub    eax,ecx
  41cc23:	add    ecx,DWORD PTR [ebp+0x20]
  41cc26:	push   ecx
  41cc27:	call   0x41d5ae
  41cc2c:	mov    edx,DWORD PTR [ebp+0x20]
  41cc2f:	mov    eax,DWORD PTR [ebx+0x194]
  41cc35:	mov    DWORD PTR [eax],edx
  41cc37:	mov    eax,DWORD PTR [ebp+0xc]
  41cc3a:	push   DWORD PTR [eax+0x54]
  41cc3d:	push   DWORD PTR [ebp+0x8]
  41cc40:	push   edx
  41cc41:	call   0x41d455
  41cc46:	mov    ecx,DWORD PTR [ebp+0x20]
  41cc49:	mov    eax,DWORD PTR [ecx+0x3c]
  41cc4c:	add    eax,ecx
  41cc4e:	movzx  ecx,WORD PTR [eax+0x14]
  41cc52:	lea    ecx,[ecx+eax*1+0x18]
  41cc56:	mov    DWORD PTR [ebp+0x18],ecx
  41cc59:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc5c:	movzx  edx,WORD PTR [eax+0x6]
  41cc60:	xor    ecx,esi
  41cc62:	add    ecx,edi
  41cc64:	mov    DWORD PTR [ebp+0xc],eax
  41cc67:	cmp    edx,ecx
  41cc69:	je     0x41cd16
  41cc6f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc72:	xor    ecx,esi
  41cc74:	add    ecx,edi
  41cc76:	mov    DWORD PTR [ebp-0x8],ecx
  41cc79:	mov    ecx,DWORD PTR [ebp-0x24]
  41cc7c:	movzx  edx,WORD PTR [eax+0x6]
  41cc80:	xor    ecx,esi
  41cc82:	sub    edx,ecx
  41cc84:	sub    edx,edi
  41cc86:	cmp    DWORD PTR [ebp-0x8],edx
  41cc89:	ja     0x41cd16
  41cc8f:	mov    edx,DWORD PTR [ebp+0x18]
  41cc92:	add    edx,0x8
  41cc95:	mov    DWORD PTR [ebp+0x18],edx
  41cc98:	jmp    0x41cc9d
  41cc9a:	mov    edx,DWORD PTR [ebp+0x18]
  41cc9d:	mov    eax,DWORD PTR [eax+0x38]
  41cca0:	lea    ecx,[eax-0x1]
  41cca3:	mov    DWORD PTR [ebp-0x34],eax
  41cca6:	mov    eax,DWORD PTR [edx]
  41cca8:	test   ecx,eax
  41ccaa:	je     0x41ccb3
  41ccac:	not    ecx
  41ccae:	and    eax,ecx
  41ccb0:	add    eax,DWORD PTR [ebp-0x34]
  41ccb3:	mov    ecx,DWORD PTR [edx+0x4]
  41ccb6:	add    ecx,DWORD PTR [ebp+0x20]
  41ccb9:	push   ecx
  41ccba:	call   0x41d5ae
  41ccbf:	mov    edx,DWORD PTR [ebp-0x4]
  41ccc2:	mov    eax,DWORD PTR [ebp+0x18]
  41ccc5:	mov    ecx,DWORD PTR [eax+0x8]
  41ccc8:	xor    edx,esi
  41ccca:	add    edx,edi
  41cccc:	cmp    ecx,edx
  41ccce:	je     0x41cce7
  41ccd0:	push   ecx
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	add    ecx,DWORD PTR [eax+0xc]
  41ccd7:	mov    eax,DWORD PTR [eax+0x4]
  41ccda:	add    eax,DWORD PTR [ebp+0x20]
  41ccdd:	push   ecx
  41ccde:	push   eax
  41ccdf:	call   0x41d455
  41cce4:	mov    eax,DWORD PTR [ebp+0x18]
  41cce7:	mov    ecx,DWORD PTR [ebp-0x24]
  41ccea:	mov    edx,DWORD PTR [ebp-0x8]
  41cced:	add    eax,0x28
  41ccf0:	xor    ecx,esi
  41ccf2:	lea    ecx,[edx+ecx*1+0x3272e0]
  41ccf9:	mov    edx,DWORD PTR [ebp+0xc]
  41ccfc:	mov    DWORD PTR [ebp+0x18],eax
  41ccff:	mov    eax,DWORD PTR [ebp-0x24]
  41cd02:	movzx  edx,WORD PTR [edx+0x6]
  41cd06:	xor    eax,esi
  41cd08:	sub    edx,eax
  41cd0a:	mov    eax,DWORD PTR [ebp+0xc]
  41cd0d:	sub    edx,edi
  41cd0f:	mov    DWORD PTR [ebp-0x8],ecx
  41cd12:	cmp    ecx,edx
  41cd14:	jbe    0x41cc9a
  41cd16:	mov    edx,DWORD PTR [ebx+0x18c]
  41cd1c:	mov    ecx,DWORD PTR [ebp+0x20]
  41cd1f:	cmp    ecx,DWORD PTR [edx]
  41cd21:	jne    0x41cd4a
  41cd23:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cd29:	lea    edx,[ebp-0x1c]
  41cd2c:	push   edx
  41cd2d:	mov    edx,DWORD PTR [ebp-0x10]
  41cd30:	xor    edx,esi
  41cd32:	add    edx,edi
  41cd34:	push   edx
  41cd35:	mov    edx,DWORD PTR [ebp-0x18]
  41cd38:	push   DWORD PTR [edx+0x54]
  41cd3b:	push   ecx
  41cd3c:	call   DWORD PTR [eax+0x1c]
  41cd3f:	test   eax,eax
  41cd41:	je     0x41cfb3
  41cd47:	mov    eax,DWORD PTR [ebp+0xc]
  41cd4a:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41cd50:	mov    ecx,DWORD PTR [ecx]
  41cd52:	xor    ecx,esi
  41cd54:	add    ecx,edi
  41cd56:	je     0x41cede
  41cd5c:	and    DWORD PTR [ebp-0x28],0x0
  41cd60:	and    DWORD PTR [ebp+0x8],0x0
  41cd64:	mov    eax,0xf89c851d
  41cd69:	lea    ecx,[eax-0x8]
  41cd6c:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41cd73:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41cd7a:	mov    DWORD PTR [ebp-0x44],eax
  41cd7d:	mov    DWORD PTR [ebp-0x40],ecx
  41cd80:	mov    DWORD PTR [ebp-0x3c],ecx
  41cd83:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41cd8a:	mov    edx,DWORD PTR [ebp+0x8]
  41cd8d:	mov    ecx,0x899
  41cd92:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41cd97:	mov    edx,0x72e0
  41cd9c:	add    cx,dx
  41cd9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cda2:	inc    DWORD PTR [ebp+0x8]
  41cda5:	cmp    DWORD PTR [ebp+0x8],0x6
  41cda9:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41cdb1:	jb     0x41cd8a
  41cdb3:	mov    ecx,0xf89c850b
  41cdb8:	mov    DWORD PTR [ebp-0xa4],eax
  41cdbe:	mov    DWORD PTR [ebp-0x90],eax
  41cdc4:	mov    DWORD PTR [ebp-0x68],eax
  41cdc7:	mov    DWORD PTR [ebp-0x64],eax
  41cdca:	lea    eax,[ecx-0x1]
  41cdcd:	mov    edx,0xf89c85ff
  41cdd2:	mov    DWORD PTR [ebp-0x58],eax
  41cdd5:	mov    DWORD PTR [ebp-0x54],eax
  41cdd8:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41cde2:	mov    DWORD PTR [ebp-0xa0],ecx
  41cde8:	mov    DWORD PTR [ebp-0x9c],edx
  41cdee:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41cdf8:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ce02:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41ce0c:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ce16:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41ce20:	mov    DWORD PTR [ebp-0x80],ecx
  41ce23:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41ce2a:	mov    DWORD PTR [ebp-0x78],edx
  41ce2d:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41ce34:	mov    DWORD PTR [ebp-0x70],ecx
  41ce37:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41ce3e:	mov    DWORD PTR [ebp-0x60],ecx
  41ce41:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41ce48:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41ce4f:	xor    eax,eax
  41ce51:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41ce58:	xor    cl,0x99
  41ce5b:	sub    cl,0x20
  41ce5e:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41ce65:	inc    eax
  41ce66:	cmp    eax,0x17
  41ce69:	jb     0x41ce51
  41ce6b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ce71:	lea    ecx,[ebp-0xb4]
  41ce77:	push   ecx
  41ce78:	call   DWORD PTR [eax+0x4]
  41ce7b:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41ce81:	lea    edx,[ebp-0xcc]
  41ce87:	push   edx
  41ce88:	push   eax
  41ce89:	call   DWORD PTR [ecx+0x8]
  41ce8c:	lea    ecx,[ebp-0x28]
  41ce8f:	push   ecx
  41ce90:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ce96:	push   DWORD PTR [ecx]
  41ce98:	call   eax
  41ce9a:	mov    eax,DWORD PTR [ebp-0x28]
  41ce9d:	test   eax,eax
  41ce9f:	je     0x41cedb
  41cea1:	mov    DWORD PTR [ebp+0x8],eax
  41cea4:	jmp    0x41ceb0
  41cea6:	mov    eax,DWORD PTR [eax]
  41cea8:	mov    DWORD PTR [ebp-0x28],eax
  41ceab:	cmp    eax,DWORD PTR [ebp+0x8]
  41ceae:	je     0x41cebd
  41ceb0:	mov    edx,DWORD PTR [eax+0x18]
  41ceb3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ceb9:	cmp    edx,DWORD PTR [ecx]
  41cebb:	jne    0x41cea6
  41cebd:	mov    edx,DWORD PTR [eax+0x18]
  41cec0:	mov    ecx,DWORD PTR [ebx+0x18c]
  41cec6:	cmp    edx,DWORD PTR [ecx]
  41cec8:	jne    0x41cedb
  41ceca:	mov    edx,DWORD PTR [ebp-0x18]
  41cecd:	mov    ecx,DWORD PTR [ebx+0x190]
  41ced3:	mov    edx,DWORD PTR [edx+0x28]
  41ced6:	add    edx,DWORD PTR [ecx]
  41ced8:	mov    DWORD PTR [eax+0x1c],edx
  41cedb:	mov    eax,DWORD PTR [ebp+0xc]
  41cede:	push   ebx
  41cedf:	push   eax
  41cee0:	push   DWORD PTR [ebp+0x20]
  41cee3:	call   0x41c68d
  41cee8:	test   eax,eax
  41ceea:	je     0x41cfb3
  41cef0:	push   DWORD PTR [ebp+0xc]
  41cef3:	mov    ecx,ebx
  41cef5:	push   DWORD PTR [ebp+0x20]
  41cef8:	call   0x41c5e6
  41cefd:	test   eax,eax
  41ceff:	je     0x41cfb3
  41cf05:	mov    eax,DWORD PTR [ebp+0xc]
  41cf08:	mov    edx,DWORD PTR [ebp+0x20]
  41cf0b:	mov    ecx,ebx
  41cf0d:	call   0x41c4bf
  41cf12:	test   eax,eax
  41cf14:	je     0x41cfb3
  41cf1a:	push   ebx
  41cf1b:	push   DWORD PTR [ebp+0x20]
  41cf1e:	call   0x41c970
  41cf23:	test   eax,eax
  41cf25:	je     0x41cfb3
  41cf2b:	mov    eax,DWORD PTR [ebx+0x18c]
  41cf31:	mov    edx,DWORD PTR [ebp+0x20]
  41cf34:	cmp    edx,DWORD PTR [eax]
  41cf36:	jne    0x41cf52
  41cf38:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cf3e:	lea    ecx,[ebp-0x1c]
  41cf41:	push   ecx
  41cf42:	push   DWORD PTR [ebp-0x1c]
  41cf45:	mov    ecx,DWORD PTR [ebp-0x18]
  41cf48:	push   DWORD PTR [ecx+0x54]
  41cf4b:	push   edx
  41cf4c:	call   DWORD PTR [eax+0x1c]
  41cf4f:	mov    edx,DWORD PTR [ebp+0x20]
  41cf52:	mov    eax,DWORD PTR [ebx+0x1c8]
  41cf58:	mov    eax,DWORD PTR [eax]
  41cf5a:	xor    eax,esi
  41cf5c:	add    eax,edi
  41cf5e:	je     0x41cf97
  41cf60:	mov    ecx,DWORD PTR [ebp+0xc]
  41cf63:	mov    eax,DWORD PTR [ecx+0x28]
  41cf66:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41cf6d:	mov    esi,DWORD PTR [ebp+0x8]
  41cf70:	push   DWORD PTR [ebp+0x14]
  41cf73:	xor    esi,0x899
  41cf79:	push   DWORD PTR [ebp+0x10]
  41cf7c:	add    esi,0x72e0
  41cf82:	or     WORD PTR [ecx+0x16],si
  41cf86:	add    eax,edx
  41cf88:	push   edx
  41cf89:	call   eax
  41cf8b:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41cf95:	jmp    0x41cfa1
  41cf97:	mov    eax,DWORD PTR [ebp+0xc]
  41cf9a:	mov    eax,DWORD PTR [eax+0x28]
  41cf9d:	add    eax,edx
  41cf9f:	call   eax
  41cfa1:	mov    DWORD PTR [ebp-0x8],eax
  41cfa4:	mov    eax,DWORD PTR [ebp-0x8]
  41cfa7:	mov    ecx,DWORD PTR [ebp+0x1c]
  41cfaa:	mov    DWORD PTR [ecx],eax
  41cfac:	mov    DWORD PTR [ebp-0x30],0x1
  41cfb3:	cmp    DWORD PTR [ebp-0x30],0x0
  41cfb7:	jne    0x41cfbd
  41cfb9:	and    DWORD PTR [ebp+0x20],0x0
  41cfbd:	mov    eax,DWORD PTR [ebp+0x20]
  41cfc0:	jmp    0x41cfc4
  41cfc2:	xor    eax,eax
  41cfc4:	pop    edi
  41cfc5:	pop    esi
  41cfc6:	pop    ebx
  41cfc7:	leave  
  41cfc8:	ret    0x1c
  41cfcb:	push   ebp
  41cfcc:	mov    ebp,esp
  41cfce:	movzx  edx,WORD PTR [ecx+0x6]
  41cfd2:	movzx  eax,WORD PTR [ecx+0x14]
  41cfd6:	push   ebx
  41cfd7:	push   edi
  41cfd8:	xor    edi,edi
  41cfda:	lea    eax,[eax+ecx*1+0x18]
  41cfde:	test   edx,edx
  41cfe0:	je     0x41d001
  41cfe2:	mov    ecx,DWORD PTR [eax+0xc]
  41cfe5:	lea    ebx,[ecx+esi*1]
  41cfe8:	cmp    DWORD PTR [ebp+0x8],ebx
  41cfeb:	jb     0x41cff9
  41cfed:	mov    ebx,DWORD PTR [eax+0x8]
  41cff0:	add    ebx,ecx
  41cff2:	add    ebx,esi
  41cff4:	cmp    DWORD PTR [ebp+0x8],ebx
  41cff7:	jb     0x41d003
  41cff9:	add    eax,0x28
  41cffc:	inc    edi
  41cffd:	cmp    edi,edx
  41cfff:	jb     0x41cfe2
  41d001:	xor    eax,eax
  41d003:	pop    edi
  41d004:	pop    ebx
  41d005:	pop    ebp
  41d006:	ret    0x4
  41d009:	push   ebp
  41d00a:	mov    ebp,esp
  41d00c:	sub    esp,0x34
  41d00f:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41d016:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d01d:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41d024:	mov    DWORD PTR [ebp-0x8],0xf89c8518
  41d02b:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  41d032:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41d039:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41d040:	mov    DWORD PTR [ebp-0x10],eax
  41d043:	mov    eax,DWORD PTR [ebp+0x8]
  41d046:	mov    DWORD PTR [ebp-0x14],eax
  41d049:	mov    eax,DWORD PTR [ebp-0xc]
  41d04c:	push   ebx
  41d04d:	mov    ecx,0x7510899
  41d052:	xor    eax,ecx
  41d054:	push   esi
  41d055:	mov    esi,DWORD PTR [ebp-0x10]
  41d058:	mov    edx,0x3272e0
  41d05d:	add    eax,edx
  41d05f:	push   edi
  41d060:	cmp    esi,eax
  41d062:	je     0x41d241
  41d068:	mov    eax,DWORD PTR [ebp-0xc]
  41d06b:	mov    esi,DWORD PTR [ebp-0x14]
  41d06e:	xor    eax,ecx
  41d070:	add    eax,edx
  41d072:	cmp    esi,eax
  41d074:	je     0x41d241
  41d07a:	mov    eax,DWORD PTR [ebp-0xc]
  41d07d:	xor    eax,ecx
  41d07f:	add    eax,edx
  41d081:	mov    DWORD PTR [ebp-0x24],eax
  41d084:	mov    eax,DWORD PTR [ebp-0xc]
  41d087:	xor    eax,ecx
  41d089:	add    eax,edx
  41d08b:	mov    DWORD PTR [ebp-0x28],eax
  41d08e:	mov    edi,DWORD PTR [ebp-0x20]
  41d091:	mov    ebx,DWORD PTR [ebp-0x8]
  41d094:	mov    esi,0x899
  41d099:	xor    edi,esi
  41d09b:	mov    eax,0x72e0
  41d0a0:	xor    ebx,esi
  41d0a2:	add    edi,eax
  41d0a4:	add    ebx,eax
  41d0a6:	sub    ebx,edi
  41d0a8:	mov    WORD PTR [ebp-0x8],bx
  41d0ac:	jmp    0x41d171
  41d0b1:	mov    edi,DWORD PTR [ebp-0xc]
  41d0b4:	mov    bx,WORD PTR [ebp-0x4]
  41d0b8:	xor    edi,esi
  41d0ba:	add    edi,eax
  41d0bc:	cmp    bx,di
  41d0bf:	je     0x41d1b3
  41d0c5:	mov    edi,DWORD PTR [ebp-0xc]
  41d0c8:	mov    ebx,DWORD PTR [ebp+0xc]
  41d0cb:	xor    edi,ecx
  41d0cd:	add    edi,edx
  41d0cf:	cmp    ebx,edi
  41d0d1:	mov    di,WORD PTR [ebp-0x4]
  41d0d5:	mov    bx,WORD PTR [ebp+0x8]
  41d0d9:	je     0x41d144
  41d0db:	cmp    bx,di
  41d0de:	je     0x41d14d
  41d0e0:	mov    edi,DWORD PTR [ebp-0x20]
  41d0e3:	mov    bx,WORD PTR [ebp+0x8]
  41d0e7:	xor    edi,esi
  41d0e9:	add    edi,eax
  41d0eb:	cmp    bx,di
  41d0ee:	jb     0x41d10e
  41d0f0:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0f3:	mov    bx,WORD PTR [ebp+0x8]
  41d0f7:	xor    edi,esi
  41d0f9:	add    edi,eax
  41d0fb:	cmp    bx,di
  41d0fe:	ja     0x41d10e
  41d100:	movzx  edi,WORD PTR [ebp+0x8]
  41d104:	movzx  ebx,WORD PTR [ebp-0x8]
  41d108:	add    edi,ebx
  41d10a:	mov    WORD PTR [ebp+0x8],di
  41d10e:	mov    edi,DWORD PTR [ebp-0x20]
  41d111:	mov    bx,WORD PTR [ebp-0x4]
  41d115:	xor    edi,esi
  41d117:	add    edi,eax
  41d119:	cmp    bx,di
  41d11c:	jb     0x41d13c
  41d11e:	mov    edi,DWORD PTR [ebp-0x2c]
  41d121:	mov    bx,WORD PTR [ebp-0x4]
  41d125:	xor    edi,esi
  41d127:	add    edi,eax
  41d129:	cmp    bx,di
  41d12c:	ja     0x41d13c
  41d12e:	movzx  edi,WORD PTR [ebp-0x4]
  41d132:	movzx  ebx,WORD PTR [ebp-0x8]
  41d136:	add    edi,ebx
  41d138:	mov    WORD PTR [ebp-0x4],di
  41d13c:	mov    di,WORD PTR [ebp-0x4]
  41d140:	mov    bx,WORD PTR [ebp+0x8]
  41d144:	cmp    bx,di
  41d147:	jne    0x41d241
  41d14d:	mov    edi,DWORD PTR [ebp-0x1c]
  41d150:	mov    ebx,DWORD PTR [ebp-0x10]
  41d153:	xor    edi,ecx
  41d155:	lea    edi,[edi+ebx*1+0x3272e0]
  41d15c:	mov    DWORD PTR [ebp-0x10],edi
  41d15f:	mov    edi,DWORD PTR [ebp-0x1c]
  41d162:	mov    ebx,DWORD PTR [ebp-0x14]
  41d165:	xor    edi,ecx
  41d167:	lea    edi,[edi+ebx*1+0x3272e0]
  41d16e:	mov    DWORD PTR [ebp-0x14],edi
  41d171:	mov    edi,DWORD PTR [ebp-0x24]
  41d174:	mov    ebx,DWORD PTR [ebp-0x10]
  41d177:	mov    di,WORD PTR [ebx+edi*2]
  41d17b:	mov    WORD PTR [ebp+0x8],di
  41d17f:	mov    edi,DWORD PTR [ebp-0x28]
  41d182:	mov    ebx,DWORD PTR [ebp-0x14]
  41d185:	mov    di,WORD PTR [ebx+edi*2]
  41d189:	mov    WORD PTR [ebp-0x4],di
  41d18d:	mov    edi,DWORD PTR [ebp-0xc]
  41d190:	mov    bx,WORD PTR [ebp+0x8]
  41d194:	xor    edi,esi
  41d196:	add    edi,eax
  41d198:	cmp    bx,di
  41d19b:	jne    0x41d0b1
  41d1a1:	mov    eax,DWORD PTR [ebp-0x18]
  41d1a4:	mov    esi,DWORD PTR [ebp-0xc]
  41d1a7:	xor    eax,ecx
  41d1a9:	add    eax,edx
  41d1ab:	imul   eax,esi
  41d1ae:	mov    DWORD PTR [ebp-0xc],eax
  41d1b1:	jmp    0x41d1c5
  41d1b3:	mov    eax,DWORD PTR [ebp-0xc]
  41d1b6:	mov    esi,DWORD PTR [ebp-0x18]
  41d1b9:	xor    eax,ecx
  41d1bb:	lea    eax,[eax+esi*1+0x3272e0]
  41d1c2:	mov    DWORD PTR [ebp-0x18],eax
  41d1c5:	mov    eax,DWORD PTR [ebp-0x24]
  41d1c8:	sub    eax,edx
  41d1ca:	xor    eax,ecx
  41d1cc:	mov    DWORD PTR [ebp-0x30],eax
  41d1cf:	mov    eax,DWORD PTR [ebp-0x28]
  41d1d2:	sub    eax,edx
  41d1d4:	xor    eax,ecx
  41d1d6:	mov    DWORD PTR [ebp-0x34],eax
  41d1d9:	mov    eax,DWORD PTR [ebp-0x34]
  41d1dc:	mov    esi,DWORD PTR [ebp-0x1c]
  41d1df:	xor    esi,ecx
  41d1e1:	add    esi,edx
  41d1e3:	xor    eax,ecx
  41d1e5:	add    eax,0x3272e0
  41d1ea:	imul   esi,eax
  41d1ed:	mov    eax,DWORD PTR [ebp-0x14]
  41d1f0:	movzx  eax,WORD PTR [esi+eax*1]
  41d1f4:	mov    esi,DWORD PTR [ebp-0x30]
  41d1f7:	mov    edi,DWORD PTR [ebp-0x1c]
  41d1fa:	xor    esi,ecx
  41d1fc:	add    esi,edx
  41d1fe:	xor    edi,ecx
  41d200:	add    edi,edx
  41d202:	imul   edi,esi
  41d205:	mov    esi,DWORD PTR [ebp-0x10]
  41d208:	movzx  esi,WORD PTR [edi+esi*1]
  41d20c:	sub    eax,edx
  41d20e:	sub    esi,edx
  41d210:	xor    eax,ecx
  41d212:	xor    esi,ecx
  41d214:	cmp    esi,eax
  41d216:	jne    0x41d241
  41d218:	mov    eax,DWORD PTR [ebp-0x30]
  41d21b:	mov    esi,DWORD PTR [ebp-0x1c]
  41d21e:	xor    eax,ecx
  41d220:	add    eax,0x3272e0
  41d225:	xor    esi,ecx
  41d227:	add    esi,edx
  41d229:	imul   esi,eax
  41d22c:	mov    eax,DWORD PTR [ebp-0x10]
  41d22f:	movzx  eax,WORD PTR [esi+eax*1]
  41d233:	mov    esi,DWORD PTR [ebp-0xc]
  41d236:	sub    eax,edx
  41d238:	xor    eax,ecx
  41d23a:	cmp    eax,esi
  41d23c:	mov    eax,DWORD PTR [ebp-0xc]
  41d23f:	je     0x41d244
  41d241:	mov    eax,DWORD PTR [ebp-0x18]
  41d244:	pop    edi
  41d245:	xor    eax,ecx
  41d247:	pop    esi
  41d248:	add    eax,edx
  41d24a:	pop    ebx
  41d24b:	leave  
  41d24c:	ret    0x8
  41d24f:	push   ebp
  41d250:	mov    ebp,esp
  41d252:	push   ecx
  41d253:	mov    cx,WORD PTR [eax]
  41d256:	push   esi
  41d257:	mov    esi,0x3b50
  41d25c:	sub    cx,si
  41d25f:	mov    esi,0x8a8c
  41d264:	xor    cx,si
  41d267:	mov    esi,0x4e3c
  41d26c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d273:	mov    edx,0xf89c85b9
  41d278:	cmp    cx,si
  41d27b:	je     0x41d2da
  41d27d:	push   ebx
  41d27e:	push   edi
  41d27f:	movzx  ecx,cx
  41d282:	mov    edi,0xffcd8d20
  41d287:	mov    esi,0x7510899
  41d28c:	mov    ebx,0x4f80
  41d291:	cmp    cx,bx
  41d294:	jne    0x41d299
  41d296:	mov    DWORD PTR [ebp-0x4],edx
  41d299:	lea    edx,[edi+0x1]
  41d29c:	xor    edx,esi
  41d29e:	mov    edi,edx
  41d2a0:	xor    edi,esi
  41d2a2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41d2aa:	mov    ebx,0x3b50
  41d2af:	sub    cx,bx
  41d2b2:	mov    ebx,0x8a8c
  41d2b7:	xor    cx,bx
  41d2ba:	mov    ebx,0x4e3c
  41d2bf:	cmp    cx,bx
  41d2c2:	jne    0x41d28c
  41d2c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41d2c7:	pop    edi
  41d2c8:	pop    ebx
  41d2c9:	cmp    ecx,0xf89c8586
  41d2cf:	je     0x41d2da
  41d2d1:	xor    ecx,esi
  41d2d3:	lea    eax,[eax+ecx*2+0x64e5c2]
  41d2da:	pop    esi
  41d2db:	leave  
  41d2dc:	ret    
  41d2dd:	push   ebp
  41d2de:	mov    ebp,esp
  41d2e0:	push   ecx
  41d2e1:	push   esi
  41d2e2:	push   edi
  41d2e3:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d2ea:	mov    esi,0xf89c85b9
  41d2ef:	call   0x41d24f
  41d2f4:	mov    edi,eax
  41d2f6:	mov    al,BYTE PTR [edi]
  41d2f8:	add    al,0x9
  41d2fa:	xor    al,0x73
  41d2fc:	cmp    al,0x7a
  41d2fe:	je     0x41d361
  41d300:	mov    eax,edi
  41d302:	mov    edx,0xffcd8d20
  41d307:	mov    ecx,0x7510899
  41d30c:	push   ebx
  41d30d:	mov    ax,WORD PTR [eax]
  41d310:	mov    ebx,0x3b50
  41d315:	sub    ax,bx
  41d318:	mov    ebx,0x8a8c
  41d31d:	xor    ax,bx
  41d320:	mov    ebx,0x4e52
  41d325:	cmp    ax,bx
  41d328:	jne    0x41d32d
  41d32a:	mov    DWORD PTR [ebp-0x4],esi
  41d32d:	lea    esi,[edx+0x1]
  41d330:	xor    esi,ecx
  41d332:	mov    edx,esi
  41d334:	xor    edx,ecx
  41d336:	lea    eax,[edi+edx*2+0x64e5c0]
  41d33d:	mov    bl,BYTE PTR [eax]
  41d33f:	add    bl,0x9
  41d342:	xor    bl,0x73
  41d345:	cmp    bl,0x7a
  41d348:	jne    0x41d30d
  41d34a:	mov    eax,DWORD PTR [ebp-0x4]
  41d34d:	pop    ebx
  41d34e:	cmp    eax,0xf89c8586
  41d353:	je     0x41d361
  41d355:	xor    eax,ecx
  41d357:	xor    ecx,ecx
  41d359:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41d361:	mov    eax,edi
  41d363:	pop    edi
  41d364:	pop    esi
  41d365:	leave  
  41d366:	ret    
  41d367:	push   ebp
  41d368:	mov    ebp,esp
  41d36a:	push   ecx
  41d36b:	push   esi
  41d36c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d373:	mov    esi,0xf89c85b9
  41d378:	call   0x41d24f
  41d37d:	mov    cx,WORD PTR [eax]
  41d380:	mov    edx,0x3b50
  41d385:	sub    cx,dx
  41d388:	mov    edx,0x8a8c
  41d38d:	xor    cx,dx
  41d390:	mov    edx,0x4e3c
  41d395:	cmp    cx,dx
  41d398:	je     0x41d3f1
  41d39a:	push   ebx
  41d39b:	push   edi
  41d39c:	movzx  ecx,cx
  41d39f:	mov    edx,0xffcd8d20
  41d3a4:	mov    edi,0x7510899
  41d3a9:	mov    ebx,0x4e52
  41d3ae:	cmp    cx,bx
  41d3b1:	jne    0x41d3b6
  41d3b3:	mov    DWORD PTR [ebp-0x4],esi
  41d3b6:	lea    esi,[edx+0x1]
  41d3b9:	xor    esi,edi
  41d3bb:	mov    edx,esi
  41d3bd:	xor    edx,edi
  41d3bf:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41d3c7:	mov    ebx,0x3b50
  41d3cc:	sub    cx,bx
  41d3cf:	mov    ebx,0x8a8c
  41d3d4:	xor    cx,bx
  41d3d7:	mov    ebx,0x4e3c
  41d3dc:	cmp    cx,bx
  41d3df:	jne    0x41d3a9
  41d3e1:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41d3e8:	pop    edi
  41d3e9:	pop    ebx
  41d3ea:	je     0x41d3f1
  41d3ec:	xor    eax,eax
  41d3ee:	inc    eax
  41d3ef:	jmp    0x41d3f3
  41d3f1:	xor    eax,eax
  41d3f3:	pop    esi
  41d3f4:	leave  
  41d3f5:	ret    
  41d3f6:	push   ebp
  41d3f7:	mov    ebp,esp
  41d3f9:	push   ecx
  41d3fa:	mov    eax,DWORD PTR [ebp+0x8]
  41d3fd:	movzx  ecx,WORD PTR [eax]
  41d400:	push   esi
  41d401:	lea    eax,[ecx-0x3b50]
  41d407:	mov    esi,0x8a8c
  41d40c:	push   edi
  41d40d:	xor    eax,esi
  41d40f:	mov    edi,0x4e3c
  41d414:	mov    DWORD PTR [ebp-0x4],edx
  41d417:	cmp    ax,di
  41d41a:	je     0x41d447
  41d41c:	mov    eax,DWORD PTR [ebp+0x8]
  41d41f:	sub    eax,edx
  41d421:	mov    DWORD PTR [ebp+0x8],eax
  41d424:	jmp    0x41d429
  41d426:	mov    eax,DWORD PTR [ebp+0x8]
  41d429:	mov    WORD PTR [edx],cx
  41d42c:	add    edx,0x2
  41d42f:	movzx  edi,WORD PTR [eax+edx*1]
  41d433:	mov    ecx,edi
  41d435:	add    edi,0xffffc4b0
  41d43b:	xor    edi,esi
  41d43d:	mov    eax,0x4e3c
  41d442:	cmp    di,ax
  41d445:	jne    0x41d426
  41d447:	xor    eax,eax
  41d449:	pop    edi
  41d44a:	mov    WORD PTR [edx],ax
  41d44d:	mov    eax,DWORD PTR [ebp-0x4]
  41d450:	pop    esi
  41d451:	leave  
  41d452:	ret    0x4
  41d455:	push   ebp
  41d456:	mov    ebp,esp
  41d458:	sub    esp,0x18
  41d45b:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41d462:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d469:	mov    eax,DWORD PTR [ebp-0x14]
  41d46c:	xor    eax,0x7510899
  41d471:	add    eax,0x3272e0
  41d476:	mov    DWORD PTR [ebp-0x8],eax
  41d479:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41d480:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41d487:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41d48e:	mov    eax,DWORD PTR [ebp-0x14]
  41d491:	xor    eax,0x7510899
  41d496:	mov    ecx,DWORD PTR [ebp-0x8]
  41d499:	lea    eax,[ecx+eax*1+0x3272e0]
  41d4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4a3:	xor    ecx,0x7510899
  41d4a9:	add    ecx,0x3272e0
  41d4af:	mov    edx,DWORD PTR [ebp+0x10]
  41d4b2:	imul   edx,ecx
  41d4b5:	cmp    eax,edx
  41d4b7:	jae    0x41d5aa
  41d4bd:	mov    eax,DWORD PTR [ebp+0x10]
  41d4c0:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4c3:	sub    eax,ecx
  41d4c5:	mov    ecx,DWORD PTR [ebp-0x10]
  41d4c8:	xor    ecx,0x7510899
  41d4ce:	add    ecx,0x3272e0
  41d4d4:	cmp    eax,ecx
  41d4d6:	jbe    0x41d508
  41d4d8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4db:	add    eax,DWORD PTR [ebp-0x8]
  41d4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41d4e1:	add    ecx,DWORD PTR [ebp-0x8]
  41d4e4:	mov    edx,DWORD PTR [ecx]
  41d4e6:	mov    DWORD PTR [eax],edx
  41d4e8:	mov    ecx,DWORD PTR [ecx+0x4]
  41d4eb:	mov    DWORD PTR [eax+0x4],ecx
  41d4ee:	mov    eax,DWORD PTR [ebp-0x10]
  41d4f1:	xor    eax,0x7510899
  41d4f6:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4f9:	lea    eax,[ecx+eax*1+0x3272e0]
  41d500:	mov    DWORD PTR [ebp-0x8],eax
  41d503:	jmp    0x41d5a5
  41d508:	mov    eax,DWORD PTR [ebp+0x10]
  41d50b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d50e:	sub    eax,ecx
  41d510:	mov    ecx,DWORD PTR [ebp-0xc]
  41d513:	xor    ecx,0x7510899
  41d519:	add    ecx,0x3272e0
  41d51f:	cmp    eax,ecx
  41d521:	jbe    0x41d54a
  41d523:	mov    eax,DWORD PTR [ebp+0x8]
  41d526:	add    eax,DWORD PTR [ebp-0x8]
  41d529:	mov    ecx,DWORD PTR [ebp+0xc]
  41d52c:	add    ecx,DWORD PTR [ebp-0x8]
  41d52f:	mov    ecx,DWORD PTR [ecx]
  41d531:	mov    DWORD PTR [eax],ecx
  41d533:	mov    eax,DWORD PTR [ebp-0xc]
  41d536:	xor    eax,0x7510899
  41d53b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d53e:	lea    eax,[ecx+eax*1+0x3272e0]
  41d545:	mov    DWORD PTR [ebp-0x8],eax
  41d548:	jmp    0x41d5a5
  41d54a:	mov    eax,DWORD PTR [ebp+0x10]
  41d54d:	mov    ecx,DWORD PTR [ebp-0x8]
  41d550:	sub    eax,ecx
  41d552:	mov    ecx,DWORD PTR [ebp-0x4]
  41d555:	xor    ecx,0x7510899
  41d55b:	add    ecx,0x3272e0
  41d561:	cmp    eax,ecx
  41d563:	jbe    0x41d58e
  41d565:	mov    eax,DWORD PTR [ebp+0x8]
  41d568:	add    eax,DWORD PTR [ebp-0x8]
  41d56b:	mov    ecx,DWORD PTR [ebp+0xc]
  41d56e:	add    ecx,DWORD PTR [ebp-0x8]
  41d571:	mov    cx,WORD PTR [ecx]
  41d574:	mov    WORD PTR [eax],cx
  41d577:	mov    eax,DWORD PTR [ebp-0x4]
  41d57a:	xor    eax,0x7510899
  41d57f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d582:	lea    eax,[ecx+eax*1+0x3272e0]
  41d589:	mov    DWORD PTR [ebp-0x8],eax
  41d58c:	jmp    0x41d5a5
  41d58e:	mov    eax,DWORD PTR [ebp+0x8]
  41d591:	add    eax,DWORD PTR [ebp-0x8]
  41d594:	mov    ecx,DWORD PTR [ebp+0xc]
  41d597:	add    ecx,DWORD PTR [ebp-0x8]
  41d59a:	mov    cl,BYTE PTR [ecx]
  41d59c:	mov    BYTE PTR [eax],cl
  41d59e:	mov    eax,DWORD PTR [ebp-0x8]
  41d5a1:	inc    eax
  41d5a2:	mov    DWORD PTR [ebp-0x8],eax
  41d5a5:	jmp    0x41d48e
  41d5aa:	leave  
  41d5ab:	ret    0xc
  41d5ae:	push   ebp
  41d5af:	mov    ebp,esp
  41d5b1:	sub    esp,0xc
  41d5b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d5bb:	push   esi
  41d5bc:	mov    esi,eax
  41d5be:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41d5c5:	mov    edx,DWORD PTR [ebp-0x4]
  41d5c8:	mov    eax,0x7510899
  41d5cd:	xor    edx,eax
  41d5cf:	mov    ecx,0x3272e0
  41d5d4:	add    edx,ecx
  41d5d6:	cmp    esi,edx
  41d5d8:	je     0x41d61a
  41d5da:	push   ebx
  41d5db:	push   edi
  41d5dc:	mov    edx,DWORD PTR [ebp-0x8]
  41d5df:	mov    ebx,DWORD PTR [ebp+0x8]
  41d5e2:	xor    edx,eax
  41d5e4:	mov    edi,0xffcd8d20
  41d5e9:	sub    edi,edx
  41d5eb:	add    esi,edi
  41d5ed:	lea    edx,[esi-0x3272e0]
  41d5f3:	xor    edx,eax
  41d5f5:	mov    DWORD PTR [ebp-0xc],edx
  41d5f8:	mov    edx,DWORD PTR [ebp-0x4]
  41d5fb:	mov    edi,DWORD PTR [ebp-0xc]
  41d5fe:	xor    dl,0x99
  41d601:	sub    dl,0x20
  41d604:	xor    edi,eax
  41d606:	mov    BYTE PTR [edi+ebx*1+0x3272e0],dl
  41d60d:	mov    edx,DWORD PTR [ebp-0x4]
  41d610:	xor    edx,eax
  41d612:	add    edx,ecx
  41d614:	cmp    esi,edx
  41d616:	jne    0x41d5dc
  41d618:	pop    edi
  41d619:	pop    ebx
  41d61a:	pop    esi
  41d61b:	leave  
  41d61c:	ret    0x4
  41d61f:	push   ebp
  41d620:	mov    ebp,esp
  41d622:	sub    esp,0x21c
  41d628:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d62f:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41d636:	mov    eax,DWORD PTR [ebp+0x10]
  41d639:	mov    eax,DWORD PTR [ebp-0x4]
  41d63c:	mov    ecx,DWORD PTR [ebp+0x8]
  41d63f:	push   esi
  41d640:	push   edi
  41d641:	mov    edi,0x7510899
  41d646:	xor    eax,edi
  41d648:	mov    esi,0x3272e0
  41d64d:	add    eax,esi
  41d64f:	cmp    eax,ecx
  41d651:	mov    eax,DWORD PTR [ebp-0x4]
  41d654:	jne    0x41d65f
  41d656:	xor    eax,edi
  41d658:	add    eax,esi
  41d65a:	jmp    0x41d70b
  41d65f:	mov    ecx,DWORD PTR [ebp+0xc]
  41d662:	xor    eax,edi
  41d664:	add    eax,esi
  41d666:	cmp    eax,ecx
  41d668:	jne    0x41d66f
  41d66a:	mov    eax,DWORD PTR [ebp-0x4]
  41d66d:	jmp    0x41d656
  41d66f:	lea    eax,[ebp-0x21c]
  41d675:	mov    DWORD PTR [ebp-0x8],eax
  41d678:	mov    eax,DWORD PTR [ebp+0xc]
  41d67b:	mov    DWORD PTR [ebp-0x10],eax
  41d67e:	mov    eax,DWORD PTR [ebp-0x4]
  41d681:	xor    eax,edi
  41d683:	add    eax,esi
  41d685:	mov    DWORD PTR [ebp+0x10],eax
  41d688:	mov    eax,DWORD PTR [ebp+0xc]
  41d68b:	push   ebx
  41d68c:	call   0x41d367
  41d691:	mov    ebx,eax
  41d693:	mov    eax,DWORD PTR [ebp+0x8]
  41d696:	mov    eax,DWORD PTR [eax+0x14]
  41d699:	jmp    0x41d6f3
  41d69b:	mov    eax,DWORD PTR [ebp+0xc]
  41d69e:	sub    eax,0x8
  41d6a1:	mov    DWORD PTR [ebp-0xc],eax
  41d6a4:	mov    eax,DWORD PTR [ebp-0xc]
  41d6a7:	mov    eax,DWORD PTR [eax+0x28]
  41d6aa:	call   0x41d24f
  41d6af:	mov    DWORD PTR [ebp+0x10],eax
  41d6b2:	push   DWORD PTR [ebp+0x10]
  41d6b5:	mov    edx,DWORD PTR [ebp-0x8]
  41d6b8:	call   0x41d3f6
  41d6bd:	mov    eax,DWORD PTR [ebp-0x4]
  41d6c0:	xor    eax,edi
  41d6c2:	add    eax,esi
  41d6c4:	cmp    eax,ebx
  41d6c6:	jne    0x41d6d0
  41d6c8:	mov    eax,DWORD PTR [ebp-0x8]
  41d6cb:	call   0x41d2dd
  41d6d0:	mov    eax,DWORD PTR [ebp-0x14]
  41d6d3:	xor    eax,edi
  41d6d5:	add    eax,esi
  41d6d7:	push   eax
  41d6d8:	push   DWORD PTR [ebp-0x10]
  41d6db:	mov    eax,DWORD PTR [ebp-0x8]
  41d6de:	call   0x41d009
  41d6e3:	mov    ecx,DWORD PTR [ebp-0x4]
  41d6e6:	xor    ecx,edi
  41d6e8:	add    ecx,esi
  41d6ea:	cmp    eax,ecx
  41d6ec:	je     0x41d711
  41d6ee:	mov    eax,DWORD PTR [ebp+0xc]
  41d6f1:	mov    eax,DWORD PTR [eax]
  41d6f3:	mov    DWORD PTR [ebp+0xc],eax
  41d6f6:	mov    eax,DWORD PTR [ebp+0x8]
  41d6f9:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6fc:	add    eax,0x14
  41d6ff:	cmp    ecx,eax
  41d701:	jne    0x41d69b
  41d703:	mov    eax,DWORD PTR [ebp-0x4]
  41d706:	xor    eax,edi
  41d708:	add    eax,esi
  41d70a:	pop    ebx
  41d70b:	pop    edi
  41d70c:	pop    esi
  41d70d:	leave  
  41d70e:	ret    0xc
  41d711:	mov    eax,DWORD PTR [ebp-0xc]
  41d714:	mov    eax,DWORD PTR [eax+0x18]
  41d717:	jmp    0x41d70a
  41d719:	push   ebp
  41d71a:	mov    ebp,esp
  41d71c:	mov    eax,DWORD PTR [ebp+0xc]
  41d71f:	sub    esp,0x10
  41d722:	cmp    DWORD PTR [ebp+0x8],0x0
  41d726:	push   ebx
  41d727:	push   esi
  41d728:	push   edi
  41d729:	je     0x41d7de
  41d72f:	test   eax,eax
  41d731:	je     0x41d7de
  41d737:	movzx  eax,WORD PTR [eax+0x20]
  41d73b:	mov    ecx,eax
  41d73d:	mov    DWORD PTR [ebp-0x10],eax
  41d740:	xor    edx,edx
  41d742:	and    DWORD PTR [ebp-0x8],edx
  41d745:	mov    eax,0x8a8c
  41d74a:	xor    ecx,eax
  41d74c:	add    ecx,0x3b50
  41d752:	mov    DWORD PTR [ebp-0xc],ecx
  41d755:	and    DWORD PTR [ebp-0x4],0x0
  41d759:	xor    ecx,ecx
  41d75b:	push   0x78
  41d75d:	pop    edi
  41d75e:	cmp    cx,WORD PTR [ebp-0xc]
  41d762:	jae    0x41d7c8
  41d764:	lea    esi,[edx-0x3b50]
  41d76a:	xor    esi,eax
  41d76c:	movzx  ecx,WORD PTR [ebp-0x4]
  41d770:	mov    ebx,DWORD PTR [ebp+0xc]
  41d773:	lea    ecx,[ebx+ecx*4]
  41d776:	cmp    WORD PTR [ecx+0x2],si
  41d77a:	jne    0x41d7b3
  41d77c:	movzx  ecx,WORD PTR [ecx]
  41d77f:	mov    edi,0x4e3c
  41d784:	cmp    cx,di
  41d787:	jne    0x41d795
  41d789:	mov    ebx,DWORD PTR [ebp+0x8]
  41d78c:	movzx  edi,dx
  41d78f:	cmp    BYTE PTR [edi+ebx*1],0x0
  41d793:	je     0x41d7c2
  41d795:	mov    ebx,DWORD PTR [ebp+0x8]
  41d798:	movzx  edi,dx
  41d79b:	movsx  di,BYTE PTR [edi+ebx*1]
  41d7a0:	mov    ebx,0x3b50
  41d7a5:	sub    di,bx
  41d7a8:	xor    di,ax
  41d7ab:	cmp    cx,di
  41d7ae:	je     0x41d7c2
  41d7b0:	push   0x7a
  41d7b2:	pop    edi
  41d7b3:	inc    DWORD PTR [ebp-0x4]
  41d7b6:	mov    cx,WORD PTR [ebp-0xc]
  41d7ba:	cmp    WORD PTR [ebp-0x4],cx
  41d7be:	jb     0x41d76c
  41d7c0:	jmp    0x41d7c8
  41d7c2:	inc    DWORD PTR [ebp-0x8]
  41d7c5:	push   0x79
  41d7c7:	pop    edi
  41d7c8:	mov    esi,DWORD PTR [ebp+0x8]
  41d7cb:	movzx  ecx,dx
  41d7ce:	cmp    BYTE PTR [ecx+esi*1],0x0
  41d7d2:	je     0x41d7e7
  41d7d4:	inc    edx
  41d7d5:	cmp    edi,0x7a
  41d7d8:	jne    0x41d755
  41d7de:	xor    eax,eax
  41d7e0:	pop    edi
  41d7e1:	pop    esi
  41d7e2:	pop    ebx
  41d7e3:	leave  
  41d7e4:	ret    0x8
  41d7e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41d7ea:	add    ecx,0xffffc4b0
  41d7f0:	xor    cx,ax
  41d7f3:	xor    eax,eax
  41d7f5:	cmp    cx,WORD PTR [ebp-0x10]
  41d7f9:	sete   al
  41d7fc:	jmp    0x41d7e0
  41d7fe:	push   ebp
  41d7ff:	mov    ebp,esp
  41d801:	sub    esp,0x50
  41d804:	push   edi
  41d805:	mov    edi,eax
  41d807:	mov    eax,DWORD PTR [edi+0x1a8]
  41d80d:	cmp    DWORD PTR [eax],0x0
  41d810:	jne    0x41d819
  41d812:	xor    eax,eax
  41d814:	jmp    0x41d94a
  41d819:	push   DWORD PTR [ebp+0x8]
  41d81c:	push   0x2c
  41d81e:	pop    eax
  41d81f:	call   0x41d5ae
  41d824:	mov    edx,DWORD PTR [edi+0x1ac]
  41d82a:	lea    eax,[edi+0x22]
  41d82d:	mov    DWORD PTR [ebp-0x4c],eax
  41d830:	lea    eax,[edi+0x44]
  41d833:	mov    DWORD PTR [ebp-0x48],eax
  41d836:	lea    eax,[edi+0x66]
  41d839:	mov    DWORD PTR [ebp-0x44],eax
  41d83c:	lea    eax,[edi+0x88]
  41d842:	mov    DWORD PTR [ebp-0x40],eax
  41d845:	lea    eax,[edi+0xaa]
  41d84b:	mov    DWORD PTR [ebp-0x3c],eax
  41d84e:	lea    eax,[edi+0xcc]
  41d854:	mov    DWORD PTR [ebp-0x38],eax
  41d857:	lea    eax,[edi+0xee]
  41d85d:	mov    DWORD PTR [ebp-0x34],eax
  41d860:	lea    eax,[edi+0x110]
  41d866:	mov    DWORD PTR [ebp-0x30],eax
  41d869:	lea    eax,[edi+0x132]
  41d86f:	mov    DWORD PTR [ebp-0x2c],eax
  41d872:	lea    eax,[edi+0x154]
  41d878:	push   edi
  41d879:	mov    DWORD PTR [ebp-0x50],edi
  41d87c:	mov    DWORD PTR [ebp-0x28],eax
  41d87f:	call   0x41d97e
  41d884:	push   eax
  41d885:	mov    eax,DWORD PTR [edi+0x1a8]
  41d88b:	push   DWORD PTR [eax]
  41d88d:	call   0x41d61f
  41d892:	mov    DWORD PTR [ebp-0x10],eax
  41d895:	test   eax,eax
  41d897:	je     0x41d94a
  41d89d:	mov    ecx,DWORD PTR [eax+0x3c]
  41d8a0:	push   ebx
  41d8a1:	push   esi
  41d8a2:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41d8a6:	add    esi,eax
  41d8a8:	mov    edi,DWORD PTR [esi+0x24]
  41d8ab:	mov    ecx,DWORD PTR [esi+0x1c]
  41d8ae:	mov    edx,DWORD PTR [esi+0x20]
  41d8b1:	mov    ebx,DWORD PTR [esi+0x18]
  41d8b4:	add    edi,eax
  41d8b6:	mov    DWORD PTR [ebp-0x20],edi
  41d8b9:	mov    edi,DWORD PTR [esi+0x14]
  41d8bc:	add    ecx,eax
  41d8be:	add    edx,eax
  41d8c0:	mov    DWORD PTR [ebp-0xc],ecx
  41d8c3:	mov    DWORD PTR [ebp-0x1c],edx
  41d8c6:	mov    DWORD PTR [ebp-0x8],edi
  41d8c9:	cmp    edi,ebx
  41d8cb:	ja     0x41d8d0
  41d8cd:	mov    DWORD PTR [ebp-0x8],ebx
  41d8d0:	xor    ebx,ebx
  41d8d2:	mov    DWORD PTR [ebp-0x18],ebx
  41d8d5:	cmp    DWORD PTR [ebp-0x8],ebx
  41d8d8:	jbe    0x41d948
  41d8da:	jmp    0x41d8df
  41d8dc:	mov    edx,DWORD PTR [ebp-0x1c]
  41d8df:	mov    edi,DWORD PTR [ebp-0x20]
  41d8e2:	movzx  edi,WORD PTR [edi+ebx*2]
  41d8e6:	cmp    ebx,DWORD PTR [esi+0x18]
  41d8e9:	jae    0x41d948
  41d8eb:	cmp    edi,DWORD PTR [esi+0x14]
  41d8ee:	jae    0x41d948
  41d8f0:	mov    ebx,DWORD PTR [edx+ebx*4]
  41d8f3:	mov    edx,DWORD PTR [ebp+0x8]
  41d8f6:	mov    edi,DWORD PTR [ecx+edi*4]
  41d8f9:	mov    DWORD PTR [ebp-0x4],edx
  41d8fc:	lea    edx,[ebp-0x50]
  41d8ff:	add    ebx,eax
  41d901:	add    edi,eax
  41d903:	sub    edx,DWORD PTR [ebp+0x8]
  41d906:	mov    DWORD PTR [ebp-0x14],0xb
  41d90d:	mov    DWORD PTR [ebp-0x24],edx
  41d910:	mov    edx,DWORD PTR [ebp-0x4]
  41d913:	cmp    DWORD PTR [edx],0x0
  41d916:	jne    0x41d933
  41d918:	mov    eax,DWORD PTR [ebp-0x24]
  41d91b:	push   DWORD PTR [eax+edx*1]
  41d91e:	push   ebx
  41d91f:	call   0x41d719
  41d924:	mov    ecx,DWORD PTR [ebp-0xc]
  41d927:	test   eax,eax
  41d929:	je     0x41d930
  41d92b:	mov    eax,DWORD PTR [ebp-0x4]
  41d92e:	mov    DWORD PTR [eax],edi
  41d930:	mov    eax,DWORD PTR [ebp-0x10]
  41d933:	add    DWORD PTR [ebp-0x4],0x4
  41d937:	dec    DWORD PTR [ebp-0x14]
  41d93a:	jne    0x41d910
  41d93c:	mov    ebx,DWORD PTR [ebp-0x18]
  41d93f:	inc    ebx
  41d940:	mov    DWORD PTR [ebp-0x18],ebx
  41d943:	cmp    ebx,DWORD PTR [ebp-0x8]
  41d946:	jb     0x41d8dc
  41d948:	pop    esi
  41d949:	pop    ebx
  41d94a:	pop    edi
  41d94b:	leave  
  41d94c:	ret    0x4
  41d94f:	push   ebp
  41d950:	mov    ebp,esp
  41d952:	mov    eax,DWORD PTR [ebp+0x8]
  41d955:	push   esi
  41d956:	push   DWORD PTR [eax+0x1d8]
  41d95c:	lea    esi,[eax+0x198]
  41d962:	mov    eax,DWORD PTR [ebp+0x8]
  41d965:	call   0x41d7fe
  41d96a:	mov    ecx,DWORD PTR [esi]
  41d96c:	mov    DWORD PTR [ecx],eax
  41d96e:	mov    eax,DWORD PTR [esi]
  41d970:	xor    ecx,ecx
  41d972:	cmp    DWORD PTR [eax],ecx
  41d974:	pop    esi
  41d975:	setne  cl
  41d978:	mov    eax,ecx
  41d97a:	pop    ebp
  41d97b:	ret    0x4
  41d97e:	mov    ecx,DWORD PTR [edi+0x188]
  41d984:	push   ebx
  41d985:	jmp    0x41d99a
  41d987:	xor    eax,0x8a8c
  41d98c:	add    eax,0x3b50
  41d991:	mov    WORD PTR [ecx],ax
  41d994:	add    ecx,0x2
  41d997:	add    edx,0x2
  41d99a:	movzx  eax,WORD PTR [edx]
  41d99d:	mov    ebx,0x4e3c
  41d9a2:	cmp    ax,bx
  41d9a5:	jne    0x41d987
  41d9a7:	xor    eax,eax
  41d9a9:	mov    WORD PTR [ecx],ax
  41d9ac:	mov    eax,DWORD PTR [edi+0x188]
  41d9b2:	pop    ebx
  41d9b3:	ret    
  41d9b4:	push   edi
  41d9b5:	mov    edi,eax
  41d9b7:	mov    eax,DWORD PTR [esi+0x188]
  41d9bd:	shl    edi,0x6
  41d9c0:	add    eax,edi
  41d9c2:	jmp    0x41d9ce
  41d9c4:	xor    cl,0x73
  41d9c7:	sub    cl,0x9
  41d9ca:	mov    BYTE PTR [eax],cl
  41d9cc:	inc    eax
  41d9cd:	inc    edx
  41d9ce:	mov    cl,BYTE PTR [edx]
  41d9d0:	cmp    cl,0x7a
  41d9d3:	jne    0x41d9c4
  41d9d5:	mov    BYTE PTR [eax],0x0
  41d9d8:	mov    eax,DWORD PTR [esi+0x188]
  41d9de:	add    eax,edi
  41d9e0:	pop    edi
  41d9e1:	ret    
  41d9e2:	push   ebp
  41d9e3:	mov    ebp,esp
  41d9e5:	sub    esp,0x38
  41d9e8:	push   ebx
  41d9e9:	mov    ebx,0xf89c85b9
  41d9ee:	mov    DWORD PTR [ebp-0x4],ebx
  41d9f1:	lea    eax,[ebx-0x1]
  41d9f4:	push   esi
  41d9f5:	mov    DWORD PTR [ebp-0x24],eax
  41d9f8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d9fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d9fe:	mov    esi,0x7510899
  41da03:	push   edi
  41da04:	xor    ecx,esi
  41da06:	mov    edi,0x3272e0
  41da0b:	add    ecx,edi
  41da0d:	cmp    edx,ecx
  41da0f:	je     0x41db7d
  41da15:	mov    ecx,DWORD PTR [ebp-0x4]
  41da18:	mov    edx,DWORD PTR [ebp+0xc]
  41da1b:	xor    ecx,esi
  41da1d:	add    ecx,edi
  41da1f:	cmp    edx,ecx
  41da21:	je     0x41db7d
  41da27:	mov    ecx,DWORD PTR [ebp+0x10]
  41da2a:	mov    DWORD PTR [ebp-0x18],ecx
  41da2d:	mov    ecx,DWORD PTR [ebp+0xc]
  41da30:	mov    DWORD PTR [ebp-0x14],ecx
  41da33:	mov    ecx,DWORD PTR [ebp+0x8]
  41da36:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41da3d:	mov    DWORD PTR [ebp-0x20],eax
  41da40:	mov    DWORD PTR [ebp-0x10],ebx
  41da43:	mov    DWORD PTR [ebp+0xc],eax
  41da46:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41da4d:	mov    eax,DWORD PTR [ebp+0xc]
  41da50:	mov    DWORD PTR [ebp-0xc],ecx
  41da53:	xor    eax,esi
  41da55:	mov    ecx,0xffcd8d20
  41da5a:	sub    ecx,eax
  41da5c:	add    ecx,DWORD PTR [ebp-0x14]
  41da5f:	mov    DWORD PTR [ebp+0x8],ecx
  41da62:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41da69:	jmp    0x41db6d
  41da6e:	mov    eax,DWORD PTR [ebp+0xc]
  41da71:	mov    ecx,DWORD PTR [ebp+0xc]
  41da74:	xor    eax,esi
  41da76:	xor    ecx,esi
  41da78:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41da7f:	mov    eax,DWORD PTR [ebp+0x8]
  41da82:	xor    edx,edx
  41da84:	div    ecx
  41da86:	mov    eax,DWORD PTR [ebp+0x10]
  41da89:	mov    ecx,DWORD PTR [ebp+0xc]
  41da8c:	xor    eax,esi
  41da8e:	xor    ecx,esi
  41da90:	sub    eax,ecx
  41da92:	cmp    edx,eax
  41da94:	jne    0x41db29
  41da9a:	mov    eax,DWORD PTR [ebp+0x8]
  41da9d:	add    eax,DWORD PTR [ebp-0xc]
  41daa0:	mov    dl,BYTE PTR [eax]
  41daa2:	mov    eax,DWORD PTR [ebp-0x10]
  41daa5:	mov    ecx,DWORD PTR [ebp-0x8]
  41daa8:	xor    eax,esi
  41daaa:	xor    ecx,esi
  41daac:	add    eax,edi
  41daae:	add    ecx,edi
  41dab0:	cmp    eax,ecx
  41dab2:	jae    0x41dafa
  41dab4:	lea    ecx,[eax-0x3272e0]
  41daba:	mov    DWORD PTR [ebp-0x4],ecx
  41dabd:	mov    ebx,DWORD PTR [ebp-0x4]
  41dac0:	xor    ebx,esi
  41dac2:	add    ebx,0x7f55d8fb
  41dac8:	lea    ecx,[ebp+eax*4-0x38]
  41dacc:	mov    DWORD PTR [ecx],ebx
  41dace:	mov    ebx,DWORD PTR [ecx]
  41dad0:	cmp    ebx,0x244ecbda
  41dad6:	jbe    0x41dae0
  41dad8:	add    DWORD PTR [ecx],0x405fc1d
  41dade:	jmp    0x41dae6
  41dae0:	add    DWORD PTR [ecx],0xfdaf43e3
  41dae6:	mov    ecx,DWORD PTR [ebp-0x8]
  41dae9:	xor    ecx,esi
  41daeb:	inc    eax
  41daec:	inc    DWORD PTR [ebp-0x4]
  41daef:	add    ecx,edi
  41daf1:	cmp    eax,ecx
  41daf3:	jb     0x41dabd
  41daf5:	mov    ebx,0xf89c85b9
  41dafa:	mov    eax,DWORD PTR [ebp-0x18]
  41dafd:	test   eax,eax
  41daff:	jne    0x41db09
  41db01:	xor    dl,0x73
  41db04:	sub    dl,0x9
  41db07:	jmp    0x41db1f
  41db09:	mov    eax,DWORD PTR [ebp-0x1c]
  41db0c:	xor    al,0x99
  41db0e:	mov    cl,0x20
  41db10:	sub    cl,al
  41db12:	add    dl,cl
  41db14:	mov    ecx,DWORD PTR [ebp-0x20]
  41db17:	xor    cl,0x99
  41db1a:	sub    cl,0x20
  41db1d:	ror    dl,cl
  41db1f:	xor    eax,eax
  41db21:	mov    eax,DWORD PTR [ebp+0x8]
  41db24:	add    eax,DWORD PTR [ebp-0xc]
  41db27:	mov    BYTE PTR [eax],dl
  41db29:	mov    eax,DWORD PTR [ebp+0x8]
  41db2c:	mov    ecx,DWORD PTR [ebp-0x10]
  41db2f:	sub    eax,edi
  41db31:	xor    eax,esi
  41db33:	cmp    eax,ecx
  41db35:	jne    0x41db5b
  41db37:	mov    eax,DWORD PTR [ebp+0x10]
  41db3a:	mov    ecx,DWORD PTR [ebp+0xc]
  41db3d:	xor    eax,esi
  41db3f:	xor    ecx,esi
  41db41:	sub    eax,ecx
  41db43:	sub    eax,edi
  41db45:	xor    eax,esi
  41db47:	mov    DWORD PTR [ebp+0x10],eax
  41db4a:	mov    eax,DWORD PTR [ebp+0xc]
  41db4d:	xor    eax,esi
  41db4f:	mov    ecx,0xffcd8d20
  41db54:	sub    ecx,eax
  41db56:	add    ecx,DWORD PTR [ebp-0x14]
  41db59:	jmp    0x41db6a
  41db5b:	mov    eax,DWORD PTR [ebp+0xc]
  41db5e:	xor    eax,esi
  41db60:	mov    ecx,0xffcd8d20
  41db65:	sub    ecx,eax
  41db67:	add    ecx,DWORD PTR [ebp+0x8]
  41db6a:	mov    DWORD PTR [ebp+0x8],ecx
  41db6d:	mov    eax,DWORD PTR [ebp+0x10]
  41db70:	cmp    eax,ebx
  41db72:	jne    0x41da6e
  41db78:	mov    eax,DWORD PTR [ebp-0x24]
  41db7b:	jmp    0x41db80
  41db7d:	mov    eax,DWORD PTR [ebp-0x4]
  41db80:	xor    eax,esi
  41db82:	add    eax,edi
  41db84:	pop    edi
  41db85:	pop    esi
  41db86:	pop    ebx
  41db87:	leave  
  41db88:	ret    0xc
  41db8b:	push   ebp
  41db8c:	mov    ebp,esp
  41db8e:	sub    esp,0x14
  41db91:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41db98:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41db9f:	mov    eax,DWORD PTR [ebx]
  41dba1:	mov    DWORD PTR [ebp-0x8],eax
  41dba4:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41dbab:	push   esi
  41dbac:	push   edi
  41dbad:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41dbb4:	mov    edi,DWORD PTR [ebp-0x4]
  41dbb7:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbba:	mov    eax,0x7510899
  41dbbf:	xor    edi,eax
  41dbc1:	mov    edx,0x3272e0
  41dbc6:	xor    ecx,eax
  41dbc8:	add    edi,edx
  41dbca:	add    ecx,edx
  41dbcc:	imul   edi,ecx
  41dbcf:	jmp    0x41dc17
  41dbd1:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbd4:	mov    esi,DWORD PTR [ebp-0x4]
  41dbd7:	xor    ecx,eax
  41dbd9:	xor    esi,eax
  41dbdb:	add    ecx,edx
  41dbdd:	add    esi,edx
  41dbdf:	test   esi,ecx
  41dbe1:	mov    esi,DWORD PTR [ebp-0x8]
  41dbe4:	mov    ecx,DWORD PTR [ebp-0x4]
  41dbe7:	je     0x41dbfe
  41dbe9:	xor    ecx,eax
  41dbeb:	xor    esi,eax
  41dbed:	add    ecx,edx
  41dbef:	add    esi,edx
  41dbf1:	shr    esi,cl
  41dbf3:	mov    ecx,DWORD PTR [ebp-0x14]
  41dbf6:	xor    ecx,eax
  41dbf8:	add    ecx,edx
  41dbfa:	xor    esi,ecx
  41dbfc:	jmp    0x41dc08
  41dbfe:	xor    esi,eax
  41dc00:	xor    ecx,eax
  41dc02:	add    esi,edx
  41dc04:	add    ecx,edx
  41dc06:	shr    esi,cl
  41dc08:	mov    DWORD PTR [ebp-0x8],esi
  41dc0b:	mov    ecx,DWORD PTR [ebp-0x4]
  41dc0e:	xor    ecx,eax
  41dc10:	lea    edi,[edi+ecx*1+0x3272e0]
  41dc17:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc1a:	mov    esi,DWORD PTR [ebp-0x4]
  41dc1d:	xor    esi,eax
  41dc1f:	xor    ecx,eax
  41dc21:	sub    ecx,esi
  41dc23:	cmp    edi,ecx
  41dc25:	jbe    0x41dbd1
  41dc27:	mov    eax,DWORD PTR [ebp-0x8]
  41dc2a:	pop    edi
  41dc2b:	mov    DWORD PTR [ebx],eax
  41dc2d:	mov    eax,DWORD PTR [ebp-0x8]
  41dc30:	pop    esi
  41dc31:	leave  
  41dc32:	ret    
  41dc33:	push   ebp
  41dc34:	mov    ebp,esp
  41dc36:	sub    esp,0x420
  41dc3c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41dc43:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41dc4a:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41dc51:	push   ebx
  41dc52:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41dc59:	mov    eax,DWORD PTR [ebp-0x14]
  41dc5c:	push   esi
  41dc5d:	mov    esi,0x7510899
  41dc62:	push   edi
  41dc63:	xor    eax,esi
  41dc65:	mov    edi,0x3272e0
  41dc6a:	add    eax,edi
  41dc6c:	mov    DWORD PTR [ebp-0x8],eax
  41dc6f:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41dc76:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41dc7d:	mov    DWORD PTR [ebp-0x10],0x8
  41dc84:	mov    ecx,ecx
  41dc86:	mov    eax,DWORD PTR [ebp-0xc]
  41dc89:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc8c:	xor    eax,esi
  41dc8e:	xor    ecx,esi
  41dc90:	add    eax,edi
  41dc92:	add    ecx,edi
  41dc94:	imul   eax,ecx
  41dc97:	jmp    0x41dcca
  41dc99:	mov    eax,DWORD PTR [ebp-0x4]
  41dc9c:	sub    eax,edi
  41dc9e:	xor    eax,esi
  41dca0:	mov    DWORD PTR [ebp-0x8],eax
  41dca3:	lea    ebx,[ebp-0x8]
  41dca6:	call   0x41db8b
  41dcab:	mov    DWORD PTR [ebp-0x8],eax
  41dcae:	mov    eax,DWORD PTR [ebp-0x8]
  41dcb1:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcb4:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41dcbb:	mov    eax,DWORD PTR [ebp-0xc]
  41dcbe:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcc1:	xor    eax,esi
  41dcc3:	lea    eax,[eax+ecx*1+0x3272e0]
  41dcca:	mov    DWORD PTR [ebp-0x4],eax
  41dccd:	mov    eax,DWORD PTR [ebp-0x18]
  41dcd0:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcd3:	xor    ecx,esi
  41dcd5:	xor    eax,esi
  41dcd7:	sub    eax,ecx
  41dcd9:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcdc:	cmp    ecx,eax
  41dcde:	jbe    0x41dc99
  41dce0:	mov    eax,DWORD PTR [ebp-0x1c]
  41dce3:	xor    eax,esi
  41dce5:	add    eax,edi
  41dce7:	mov    DWORD PTR [ebp-0x8],eax
  41dcea:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41dcf1:	mov    ebx,ebx
  41dcf3:	jmp    0x41dd56
  41dcf5:	mov    ecx,DWORD PTR [ebp-0x20]
  41dcf8:	mov    eax,DWORD PTR [ebp-0x8]
  41dcfb:	xor    ecx,esi
  41dcfd:	add    ecx,edi
  41dcff:	shr    eax,cl
  41dd01:	mov    DWORD PTR [ebp-0x4],eax
  41dd04:	mov    eax,DWORD PTR [ebp+0x8]
  41dd07:	mov    cl,BYTE PTR [eax]
  41dd09:	mov    BYTE PTR [ebp+0xb],cl
  41dd0c:	mov    cl,BYTE PTR [ebp+0xb]
  41dd0f:	mov    edx,DWORD PTR [ebp-0x8]
  41dd12:	movzx  ecx,cl
  41dd15:	xor    ecx,edx
  41dd17:	mov    DWORD PTR [ebp+0x8],ecx
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd1d:	mov    edx,DWORD PTR [ebp+0x8]
  41dd20:	xor    ecx,esi
  41dd22:	add    ecx,edi
  41dd24:	and    ecx,edx
  41dd26:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41dd2d:	mov    edx,DWORD PTR [ebp-0x4]
  41dd30:	xor    ecx,edx
  41dd32:	mov    DWORD PTR [ebp-0x8],ecx
  41dd35:	mov    ecx,DWORD PTR [ebp-0xc]
  41dd38:	xor    ecx,esi
  41dd3a:	lea    eax,[eax+ecx*1+0x3272e0]
  41dd41:	mov    DWORD PTR [ebp+0x8],eax
  41dd44:	mov    eax,DWORD PTR [ebp-0xc]
  41dd47:	xor    eax,esi
  41dd49:	mov    ecx,0xffcd8d20
  41dd4e:	sub    ecx,eax
  41dd50:	add    ecx,DWORD PTR [ebp-0x10]
  41dd53:	mov    DWORD PTR [ebp-0x10],ecx
  41dd56:	mov    eax,DWORD PTR [ebp-0x14]
  41dd59:	mov    ecx,DWORD PTR [ebp-0x10]
  41dd5c:	xor    eax,esi
  41dd5e:	add    eax,edi
  41dd60:	cmp    ecx,eax
  41dd62:	jne    0x41dcf5
  41dd64:	mov    eax,DWORD PTR [ebp-0x1c]
  41dd67:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd6a:	xor    eax,esi
  41dd6c:	add    eax,edi
  41dd6e:	pop    edi
  41dd6f:	pop    esi
  41dd70:	xor    eax,ecx
  41dd72:	pop    ebx
  41dd73:	leave  
  41dd74:	ret    0x4
  41dd77:	push   ebp
  41dd78:	mov    ebp,esp
  41dd7a:	mov    eax,DWORD PTR [ebp+0x1c]
  41dd7d:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd80:	mov    edx,DWORD PTR [ebp+0x10]
  41dd83:	mov    eax,DWORD PTR [eax+0x190]
  41dd89:	mov    eax,DWORD PTR [eax]
  41dd8b:	sub    esp,0x64
  41dd8e:	push   ebx
  41dd8f:	push   esi
  41dd90:	push   edi
  41dd91:	mov    edi,0x7510899
  41dd96:	xor    ecx,edi
  41dd98:	mov    ebx,0x3272e0
  41dd9d:	add    ecx,ebx
  41dd9f:	cmp    ecx,edx
  41dda1:	jne    0x41ddb2
  41dda3:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ddad:	jmp    0x41e2ae
  41ddb2:	mov    ecx,DWORD PTR [ebp+0x8]
  41ddb5:	mov    esi,DWORD PTR [ebp+0x14]
  41ddb8:	mov    edx,DWORD PTR [esi]
  41ddba:	xor    ecx,edi
  41ddbc:	add    ecx,ebx
  41ddbe:	cmp    edx,ecx
  41ddc0:	je     0x41e269
  41ddc6:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddc9:	mov    DWORD PTR [ebp-0x1c],eax
  41ddcc:	mov    DWORD PTR [ebp+0x1c],ecx
  41ddcf:	mov    ecx,DWORD PTR [ebp+0x18]
  41ddd2:	mov    eax,DWORD PTR [esi]
  41ddd4:	mov    DWORD PTR [ebp-0x20],eax
  41ddd7:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41ddde:	mov    edx,0xf89c85b8
  41dde3:	mov    DWORD PTR [ebp-0x8],edx
  41dde6:	mov    eax,DWORD PTR [ebp+0x1c]
  41dde9:	mov    DWORD PTR [ebp+0x1c],eax
  41ddec:	mov    eax,DWORD PTR [ebp+0x1c]
  41ddef:	mov    eax,DWORD PTR [eax+0x190]
  41ddf5:	mov    eax,DWORD PTR [eax]
  41ddf7:	mov    DWORD PTR [ebp-0x24],ecx
  41ddfa:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddfd:	mov    ecx,DWORD PTR [ecx+0x190]
  41de03:	mov    ecx,DWORD PTR [ecx]
  41de05:	add    ecx,DWORD PTR [eax+0x3c]
  41de08:	mov    DWORD PTR [ebp+0x10],ecx
  41de0b:	mov    eax,DWORD PTR [ebp+0x8]
  41de0e:	xor    eax,edi
  41de10:	add    eax,ebx
  41de12:	mov    DWORD PTR [ebp-0x4],eax
  41de15:	mov    eax,DWORD PTR [ebp+0x8]
  41de18:	xor    eax,edi
  41de1a:	add    eax,ebx
  41de1c:	mov    DWORD PTR [ebp+0x18],eax
  41de1f:	mov    eax,DWORD PTR [ebp+0x10]
  41de22:	mov    eax,DWORD PTR [eax+0x50]
  41de25:	sub    eax,0xc
  41de28:	mov    DWORD PTR [ebp-0x28],eax
  41de2b:	mov    eax,DWORD PTR [ebp+0x10]
  41de2e:	mov    eax,DWORD PTR [eax+0x38]
  41de31:	mov    ecx,DWORD PTR [ebp+0x10]
  41de34:	dec    eax
  41de35:	test   DWORD PTR [ecx+0x54],eax
  41de38:	mov    eax,DWORD PTR [ebp+0x10]
  41de3b:	je     0x41de55
  41de3d:	mov    eax,DWORD PTR [eax+0x38]
  41de40:	mov    ecx,DWORD PTR [ebp+0x10]
  41de43:	mov    ecx,DWORD PTR [ecx+0x54]
  41de46:	dec    eax
  41de47:	not    eax
  41de49:	and    ecx,eax
  41de4b:	mov    eax,DWORD PTR [ebp+0x10]
  41de4e:	mov    eax,DWORD PTR [eax+0x38]
  41de51:	add    eax,ecx
  41de53:	jmp    0x41de58
  41de55:	mov    eax,DWORD PTR [eax+0x54]
  41de58:	mov    DWORD PTR [ebp+0x1c],eax
  41de5b:	mov    eax,DWORD PTR [ebp+0x8]
  41de5e:	xor    eax,edi
  41de60:	add    eax,ebx
  41de62:	mov    DWORD PTR [ebp+0x18],eax
  41de65:	mov    eax,DWORD PTR [ebp+0x8]
  41de68:	xor    eax,edi
  41de6a:	add    eax,ebx
  41de6c:	mov    DWORD PTR [ebp+0x18],eax
  41de6f:	mov    eax,DWORD PTR [ebp+0x8]
  41de72:	mov    ecx,DWORD PTR [ebp-0x24]
  41de75:	xor    eax,edi
  41de77:	add    eax,ebx
  41de79:	mov    DWORD PTR [ecx],eax
  41de7b:	mov    DWORD PTR [ebp+0x18],edx
  41de7e:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41de85:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41de8c:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41de93:	mov    eax,DWORD PTR [ebp-0x8]
  41de96:	mov    ecx,DWORD PTR [ebp+0x1c]
  41de99:	xor    eax,edi
  41de9b:	add    eax,ebx
  41de9d:	imul   eax,ecx
  41dea0:	mov    ecx,DWORD PTR [ebp+0x8]
  41dea3:	mov    edx,DWORD PTR [ebp-0x28]
  41dea6:	xor    ecx,edi
  41dea8:	lea    ecx,[ecx+edx*1+0x3272e0]
  41deaf:	cmp    eax,ecx
  41deb1:	jae    0x41e262
  41deb7:	mov    eax,DWORD PTR [ebp+0x8]
  41deba:	xor    eax,edi
  41debc:	add    eax,ebx
  41debe:	mov    DWORD PTR [ebp+0x18],eax
  41dec1:	mov    eax,DWORD PTR [ebp+0x1c]
  41dec4:	add    eax,DWORD PTR [ebp-0x1c]
  41dec7:	mov    DWORD PTR [ebp-0x4],eax
  41deca:	push   DWORD PTR [ebp-0x4]
  41decd:	mov    esi,DWORD PTR [ebp-0x1c]
  41ded0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ded3:	call   0x41cfcb
  41ded8:	mov    DWORD PTR [ebp+0xc],eax
  41dedb:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41dee2:	mov    eax,DWORD PTR [ebp-0x18]
  41dee5:	xor    eax,edi
  41dee7:	lea    ecx,[ebp-0x40]
  41deea:	add    eax,ebx
  41deec:	push   ecx
  41deed:	call   0x41d5ae
  41def2:	mov    eax,DWORD PTR [ebp+0xc]
  41def5:	test   eax,eax
  41def7:	je     0x41df47
  41def9:	mov    eax,DWORD PTR [ebp-0x18]
  41defc:	xor    eax,edi
  41defe:	add    eax,ebx
  41df00:	push   eax
  41df01:	push   DWORD PTR [ebp+0xc]
  41df04:	lea    eax,[ebp-0x40]
  41df07:	push   eax
  41df08:	call   0x41d455
  41df0d:	mov    eax,DWORD PTR [ebp-0x4]
  41df10:	mov    DWORD PTR [ebp-0x18],eax
  41df13:	mov    eax,DWORD PTR [ebp-0x18]
  41df16:	mov    ecx,DWORD PTR [ebp-0x1c]
  41df19:	sub    eax,ecx
  41df1b:	mov    DWORD PTR [ebp-0x18],eax
  41df1e:	mov    eax,DWORD PTR [ebp+0xc]
  41df21:	mov    ecx,DWORD PTR [ebp+0xc]
  41df24:	mov    eax,DWORD PTR [eax+0x10]
  41df27:	add    eax,DWORD PTR [ecx+0xc]
  41df2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41df2d:	cmp    ecx,eax
  41df2f:	jb     0x41df47
  41df31:	mov    eax,DWORD PTR [ebp+0xc]
  41df34:	mov    eax,DWORD PTR [eax+0xc]
  41df37:	mov    ecx,DWORD PTR [ebp+0xc]
  41df3a:	add    eax,DWORD PTR [ecx+0x8]
  41df3d:	mov    ecx,DWORD PTR [ebp-0x18]
  41df40:	sub    eax,ecx
  41df42:	jmp    0x41e235
  41df47:	push   0xc
  41df49:	push   DWORD PTR [ebp-0x4]
  41df4c:	lea    eax,[ebp-0x4c]
  41df4f:	push   eax
  41df50:	call   0x41d455
  41df55:	mov    eax,0xf89c85b9
  41df5a:	mov    DWORD PTR [ebp-0x2c],eax
  41df5d:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41df64:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41df6b:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41df72:	lea    ecx,[ebp-0x2c]
  41df75:	mov    DWORD PTR [ebp-0xc],ecx
  41df78:	lea    ecx,[ebp-0x30]
  41df7b:	mov    DWORD PTR [ebp-0x10],ecx
  41df7e:	lea    ecx,[ebp-0x34]
  41df81:	mov    DWORD PTR [ebp+0xc],ecx
  41df84:	lea    ecx,[ebp-0x38]
  41df87:	mov    DWORD PTR [ebp-0x14],ecx
  41df8a:	mov    ecx,DWORD PTR [ebp+0x8]
  41df8d:	xor    ecx,edi
  41df8f:	add    ecx,ebx
  41df91:	mov    DWORD PTR [ebp-0x18],ecx
  41df94:	jmp    0x41e190
  41df99:	cmp    eax,0xf89c85bb
  41df9e:	je     0x41e1a2
  41dfa4:	mov    ecx,DWORD PTR [ebp-0x8]
  41dfa7:	xor    ecx,edi
  41dfa9:	mov    esi,eax
  41dfab:	add    ecx,ebx
  41dfad:	mov    DWORD PTR [ebp+0x18],ecx
  41dfb0:	mov    eax,DWORD PTR [ebp-0x18]
  41dfb3:	xor    esi,edi
  41dfb5:	lea    eax,[eax+esi*1+0x3272e0]
  41dfbc:	mov    DWORD PTR [ebp-0x18],eax
  41dfbf:	mov    eax,DWORD PTR [ebp-0x8]
  41dfc2:	mov    ecx,DWORD PTR [ebp-0x18]
  41dfc5:	xor    eax,edi
  41dfc7:	add    eax,ebx
  41dfc9:	cmp    ecx,eax
  41dfcb:	jne    0x41dfe0
  41dfcd:	mov    eax,DWORD PTR [ebp+0x8]
  41dfd0:	xor    eax,edi
  41dfd2:	add    eax,ebx
  41dfd4:	push   eax
  41dfd5:	push   0xc
  41dfd7:	lea    eax,[ebp-0x4c]
  41dfda:	push   eax
  41dfdb:	call   0x41d9e2
  41dfe0:	mov    eax,DWORD PTR [ebp-0xc]
  41dfe3:	mov    eax,DWORD PTR [eax]
  41dfe5:	xor    eax,edi
  41dfe7:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41dfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41dff1:	xor    ecx,edi
  41dff3:	movzx  eax,al
  41dff6:	add    ecx,ebx
  41dff8:	cmp    eax,ecx
  41dffa:	je     0x41e178
  41e000:	mov    eax,DWORD PTR [ebp-0x10]
  41e003:	mov    eax,DWORD PTR [eax]
  41e005:	xor    eax,edi
  41e007:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e011:	xor    ecx,edi
  41e013:	movzx  eax,al
  41e016:	add    ecx,ebx
  41e018:	cmp    eax,ecx
  41e01a:	je     0x41e178
  41e020:	mov    eax,DWORD PTR [ebp+0xc]
  41e023:	mov    eax,DWORD PTR [eax]
  41e025:	xor    eax,edi
  41e027:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e031:	xor    ecx,edi
  41e033:	movzx  eax,al
  41e036:	add    ecx,ebx
  41e038:	cmp    eax,ecx
  41e03a:	je     0x41e178
  41e040:	mov    eax,DWORD PTR [ebp-0x14]
  41e043:	mov    eax,DWORD PTR [eax]
  41e045:	xor    eax,edi
  41e047:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e04e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e051:	xor    ecx,edi
  41e053:	movzx  eax,al
  41e056:	add    ecx,ebx
  41e058:	cmp    eax,ecx
  41e05a:	je     0x41e178
  41e060:	mov    eax,DWORD PTR [ebp-0x10]
  41e063:	mov    eax,DWORD PTR [eax]
  41e065:	xor    eax,edi
  41e067:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e06e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e071:	mov    ecx,DWORD PTR [ecx]
  41e073:	xor    ecx,edi
  41e075:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e07c:	xor    al,cl
  41e07e:	mov    ecx,DWORD PTR [ebp+0xc]
  41e081:	mov    ecx,DWORD PTR [ecx]
  41e083:	xor    ecx,edi
  41e085:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e08c:	or     al,cl
  41e08e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e091:	mov    ecx,DWORD PTR [ecx]
  41e093:	xor    ecx,edi
  41e095:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e09c:	cmp    cl,al
  41e09e:	jne    0x41e178
  41e0a4:	mov    eax,DWORD PTR [ebp+0xc]
  41e0a7:	mov    eax,DWORD PTR [eax]
  41e0a9:	xor    eax,edi
  41e0ab:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0b5:	mov    ecx,DWORD PTR [ecx]
  41e0b7:	xor    ecx,edi
  41e0b9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0c0:	xor    al,cl
  41e0c2:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0c5:	mov    ecx,DWORD PTR [ecx]
  41e0c7:	xor    ecx,edi
  41e0c9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0d0:	or     al,cl
  41e0d2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0d5:	mov    ecx,DWORD PTR [ecx]
  41e0d7:	xor    ecx,edi
  41e0d9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e0e0:	cmp    cl,al
  41e0e2:	jne    0x41e178
  41e0e8:	mov    eax,DWORD PTR [ebp-0x14]
  41e0eb:	mov    eax,DWORD PTR [eax]
  41e0ed:	xor    eax,edi
  41e0ef:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0f6:	mov    ecx,DWORD PTR [ebp+0xc]
  41e0f9:	mov    ecx,DWORD PTR [ecx]
  41e0fb:	xor    ecx,edi
  41e0fd:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e104:	xor    al,cl
  41e106:	mov    ecx,DWORD PTR [ebp-0xc]
  41e109:	mov    ecx,DWORD PTR [ecx]
  41e10b:	xor    ecx,edi
  41e10d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e114:	or     al,cl
  41e116:	mov    ecx,DWORD PTR [ebp+0xc]
  41e119:	mov    ecx,DWORD PTR [ecx]
  41e11b:	xor    ecx,edi
  41e11d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e124:	cmp    cl,al
  41e126:	jne    0x41e178
  41e128:	mov    eax,DWORD PTR [ebp-0x14]
  41e12b:	mov    eax,DWORD PTR [eax]
  41e12d:	xor    eax,edi
  41e12f:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e136:	mov    ecx,DWORD PTR [ebp-0xc]
  41e139:	mov    ecx,DWORD PTR [ecx]
  41e13b:	xor    ecx,edi
  41e13d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e144:	xor    al,cl
  41e146:	mov    ecx,DWORD PTR [ebp-0x10]
  41e149:	mov    ecx,DWORD PTR [ecx]
  41e14b:	xor    ecx,edi
  41e14d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e154:	or     al,cl
  41e156:	mov    ecx,DWORD PTR [ebp-0x14]
  41e159:	mov    ecx,DWORD PTR [ecx]
  41e15b:	xor    ecx,edi
  41e15d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e164:	cmp    cl,al
  41e166:	jne    0x41e178
  41e168:	lea    eax,[ebp-0x4c]
  41e16b:	push   eax
  41e16c:	call   0x41dc33
  41e171:	mov    ecx,DWORD PTR [ebp-0x44]
  41e174:	cmp    eax,ecx
  41e176:	je     0x41e182
  41e178:	mov    eax,DWORD PTR [ebp+0x8]
  41e17b:	xor    eax,edi
  41e17d:	add    eax,ebx
  41e17f:	mov    DWORD PTR [ebp+0x18],eax
  41e182:	mov    eax,DWORD PTR [ebp-0x8]
  41e185:	xor    eax,edi
  41e187:	lea    eax,[eax+esi*1+0x3272e0]
  41e18e:	xor    eax,edi
  41e190:	mov    ecx,DWORD PTR [ebp+0x8]
  41e193:	mov    edx,DWORD PTR [ebp+0x18]
  41e196:	xor    ecx,edi
  41e198:	add    ecx,ebx
  41e19a:	cmp    edx,ecx
  41e19c:	je     0x41df99
  41e1a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a5:	mov    ecx,DWORD PTR [ebp+0x18]
  41e1a8:	xor    eax,edi
  41e1aa:	add    eax,ebx
  41e1ac:	cmp    ecx,eax
  41e1ae:	jne    0x41e1c1
  41e1b0:	mov    eax,DWORD PTR [ebp-0x8]
  41e1b3:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e1b6:	xor    eax,edi
  41e1b8:	lea    eax,[eax+ecx*1+0x3272e0]
  41e1bf:	jmp    0x41e238
  41e1c1:	push   0x18
  41e1c3:	push   DWORD PTR [ebp-0x4]
  41e1c6:	lea    eax,[ebp-0x64]
  41e1c9:	push   eax
  41e1ca:	call   0x41d455
  41e1cf:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d2:	mov    ecx,DWORD PTR [ebp-0x18]
  41e1d5:	xor    eax,edi
  41e1d7:	add    eax,ebx
  41e1d9:	cmp    eax,ecx
  41e1db:	je     0x41e1f0
  41e1dd:	mov    eax,DWORD PTR [ebp+0x8]
  41e1e0:	xor    eax,edi
  41e1e2:	add    eax,ebx
  41e1e4:	push   eax
  41e1e5:	push   0x18
  41e1e7:	lea    eax,[ebp-0x64]
  41e1ea:	push   eax
  41e1eb:	call   0x41d9e2
  41e1f0:	mov    eax,DWORD PTR [ebp-0x4]
  41e1f3:	add    eax,0x18
  41e1f6:	mov    DWORD PTR [ebp+0x18],eax
  41e1f9:	push   DWORD PTR [ebp-0x50]
  41e1fc:	push   DWORD PTR [ebp+0x18]
  41e1ff:	mov    eax,DWORD PTR [ebp-0x54]
  41e202:	add    eax,DWORD PTR [ebp-0x20]
  41e205:	push   eax
  41e206:	call   0x41d455
  41e20b:	mov    eax,DWORD PTR [ebp+0x8]
  41e20e:	mov    ecx,DWORD PTR [ebp-0x18]
  41e211:	xor    eax,edi
  41e213:	add    eax,ebx
  41e215:	cmp    eax,ecx
  41e217:	je     0x41e22a
  41e219:	push   0x0
  41e21b:	push   DWORD PTR [ebp-0x50]
  41e21e:	mov    eax,DWORD PTR [ebp-0x54]
  41e221:	add    eax,DWORD PTR [ebp-0x20]
  41e224:	push   eax
  41e225:	call   0x41d9e2
  41e22a:	mov    eax,DWORD PTR [ebp-0x24]
  41e22d:	mov    ecx,DWORD PTR [ebp-0x50]
  41e230:	add    DWORD PTR [eax],ecx
  41e232:	mov    eax,DWORD PTR [ebp-0x50]
  41e235:	add    eax,DWORD PTR [ebp+0x1c]
  41e238:	mov    DWORD PTR [ebp+0x1c],eax
  41e23b:	mov    eax,DWORD PTR [ebp-0x8]
  41e23e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e241:	xor    eax,edi
  41e243:	add    eax,ebx
  41e245:	imul   eax,ecx
  41e248:	mov    ecx,DWORD PTR [ebp+0x8]
  41e24b:	mov    edx,DWORD PTR [ebp-0x28]
  41e24e:	xor    ecx,edi
  41e250:	lea    ecx,[ecx+edx*1+0x3272e0]
  41e257:	cmp    eax,ecx
  41e259:	jb     0x41deb7
  41e25f:	mov    esi,DWORD PTR [ebp+0x14]
  41e262:	mov    eax,DWORD PTR [ebp-0x20]
  41e265:	mov    DWORD PTR [esi],eax
  41e267:	jmp    0x41e2ae
  41e269:	mov    ecx,DWORD PTR [ebp+0x8]
  41e26c:	mov    edx,DWORD PTR [ebp+0xc]
  41e26f:	xor    ecx,edi
  41e271:	xor    edx,edi
  41e273:	add    ecx,ebx
  41e275:	add    edx,ebx
  41e277:	cmp    ecx,edx
  41e279:	jne    0x41e28d
  41e27b:	mov    eax,ds:0x7f642d1e
  41e280:	imul   eax,eax,0x9f15fcef
  41e286:	mov    ds:0x7f642d1e,eax
  41e28b:	jmp    0x41e2ae
  41e28d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e290:	xor    ecx,edi
  41e292:	add    ecx,ebx
  41e294:	cmp    eax,ecx
  41e296:	je     0x41e2a4
  41e298:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41e2a2:	jmp    0x41e2ae
  41e2a4:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41e2ae:	pop    edi
  41e2af:	pop    esi
  41e2b0:	pop    ebx
  41e2b1:	leave  
  41e2b2:	ret    0x18
  41e2b5:	push   ebp
  41e2b6:	mov    ebp,esp
  41e2b8:	and    esp,0xfffffff8
  41e2bb:	mov    eax,DWORD PTR [ebp+0x20]
  41e2be:	sub    esp,0x14
  41e2c1:	push   ebx
  41e2c2:	mov    ebx,DWORD PTR [ebp+0x14]
  41e2c5:	push   esi
  41e2c6:	push   edi
  41e2c7:	cmp    eax,0xf89c85b9
  41e2cc:	jne    0x41e2d8
  41e2ce:	push   0xf89c85b8
  41e2d3:	jmp    0x41e40a
  41e2d8:	mov    eax,DWORD PTR [ebp+0x20]
  41e2db:	cmp    eax,0xf89c85b8
  41e2e0:	jne    0x41e2ec
  41e2e2:	push   0xf89c85bb
  41e2e7:	jmp    0x41e40a
  41e2ec:	mov    eax,DWORD PTR [ebp+0x20]
  41e2ef:	cmp    eax,0xf89c85bb
  41e2f4:	jne    0x41e300
  41e2f6:	push   0xf89c85ba
  41e2fb:	jmp    0x41e40a
  41e300:	mov    eax,DWORD PTR [ebp+0x20]
  41e303:	cmp    eax,0xf89c85ba
  41e308:	jne    0x41e314
  41e30a:	push   0xf89c85bd
  41e30f:	jmp    0x41e40a
  41e314:	mov    ecx,DWORD PTR [ebp+0x20]
  41e317:	mov    eax,0xf89c85be
  41e31c:	cmp    ecx,eax
  41e31e:	jne    0x41e3da
  41e324:	mov    eax,DWORD PTR [ebp+0x10]
  41e327:	mov    DWORD PTR [esp+0xc],eax
  41e32b:	mov    eax,DWORD PTR [ebp+0x18]
  41e32e:	mov    DWORD PTR [esp+0x14],eax
  41e332:	mov    eax,DWORD PTR [ebp+0xc]
  41e335:	mov    DWORD PTR [esp+0x18],eax
  41e339:	mov    eax,DWORD PTR [ebp+0x8]
  41e33c:	mov    DWORD PTR [esp+0x10],eax
  41e340:	mov    eax,DWORD PTR [esp+0x10]
  41e344:	mov    ecx,DWORD PTR [esp+0x14]
  41e348:	mov    edi,0x7510899
  41e34d:	xor    eax,edi
  41e34f:	mov    esi,0x3272e0
  41e354:	add    eax,esi
  41e356:	mov    DWORD PTR [ecx],eax
  41e358:	mov    eax,DWORD PTR [esp+0xc]
  41e35c:	mov    eax,DWORD PTR [eax+0x194]
  41e362:	mov    ecx,DWORD PTR [eax]
  41e364:	mov    eax,DWORD PTR [esp+0xc]
  41e368:	mov    eax,DWORD PTR [eax+0x194]
  41e36e:	mov    eax,DWORD PTR [eax]
  41e370:	add    eax,DWORD PTR [ecx+0x3c]
  41e373:	mov    ecx,DWORD PTR [esp+0xc]
  41e377:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41e37d:	mov    ecx,DWORD PTR [ecx+0x14]
  41e380:	push   0x4
  41e382:	push   0x3000
  41e387:	push   DWORD PTR [eax+0x50]
  41e38a:	push   0x0
  41e38c:	call   ecx
  41e38e:	mov    DWORD PTR [ebx],eax
  41e390:	mov    eax,DWORD PTR [esp+0x10]
  41e394:	push   DWORD PTR [esp+0xc]
  41e398:	xor    eax,edi
  41e39a:	add    eax,esi
  41e39c:	mov    DWORD PTR [esp+0x20],eax
  41e3a0:	lea    eax,[esp+0x20]
  41e3a4:	push   eax
  41e3a5:	push   ebx
  41e3a6:	push   DWORD PTR [esp+0x20]
  41e3aa:	push   DWORD PTR [esp+0x28]
  41e3ae:	push   DWORD PTR [esp+0x24]
  41e3b2:	call   0x41dd77
  41e3b7:	mov    eax,DWORD PTR [esp+0x10]
  41e3bb:	mov    ecx,DWORD PTR [ebx]
  41e3bd:	xor    eax,edi
  41e3bf:	add    eax,esi
  41e3c1:	cmp    ecx,eax
  41e3c3:	je     0x41e421
  41e3c5:	mov    eax,DWORD PTR [esp+0x18]
  41e3c9:	mov    ecx,DWORD PTR [esp+0x14]
  41e3cd:	xor    eax,edi
  41e3cf:	add    eax,esi
  41e3d1:	imul   eax,DWORD PTR [esp+0x1c]
  41e3d6:	mov    DWORD PTR [ecx],eax
  41e3d8:	jmp    0x41e421
  41e3da:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3dd:	cmp    ecx,0xf89c85bd
  41e3e3:	jne    0x41e3ec
  41e3e5:	push   0xf89c85bc
  41e3ea:	jmp    0x41e40a
  41e3ec:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3ef:	cmp    ecx,0xf89c85bc
  41e3f5:	jne    0x41e3fe
  41e3f7:	push   0xf89c85bf
  41e3fc:	jmp    0x41e40a
  41e3fe:	mov    ecx,DWORD PTR [ebp+0x20]
  41e401:	cmp    ecx,0xf89c85bf
  41e407:	jne    0x41e421
  41e409:	push   eax
  41e40a:	push   DWORD PTR [ebp+0x1c]
  41e40d:	push   DWORD PTR [ebp+0x18]
  41e410:	push   ebx
  41e411:	push   DWORD PTR [ebp+0x10]
  41e414:	push   DWORD PTR [ebp+0xc]
  41e417:	push   DWORD PTR [ebp+0x8]
  41e41a:	call   0x41e2b5
  41e41f:	mov    DWORD PTR [ebx],eax
  41e421:	mov    eax,DWORD PTR [ebx]
  41e423:	pop    edi
  41e424:	pop    esi
  41e425:	pop    ebx
  41e426:	mov    esp,ebp
  41e428:	pop    ebp
  41e429:	ret    0x1c
  41e42c:	push   ebp
  41e42d:	mov    ebp,esp
  41e42f:	sub    esp,0xc
  41e432:	mov    eax,0xf89c85b9
  41e437:	mov    DWORD PTR [ebp-0x8],eax
  41e43a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41e441:	mov    ecx,DWORD PTR [ebp-0x8]
  41e444:	xor    ecx,0x7510899
  41e44a:	add    ecx,0x3272e0
  41e450:	mov    DWORD PTR [ebp-0x4],ecx
  41e453:	mov    ecx,DWORD PTR [ebp+0xc]
  41e456:	push   eax
  41e457:	mov    DWORD PTR [ebp+0xc],ecx
  41e45a:	push   DWORD PTR [ebp+0xc]
  41e45d:	lea    eax,[ebp-0x4]
  41e460:	push   DWORD PTR [ebp+0x8]
  41e463:	push   eax
  41e464:	push   DWORD PTR [ebp+0xc]
  41e467:	push   DWORD PTR [ebp-0xc]
  41e46a:	push   DWORD PTR [ebp-0x8]
  41e46d:	call   0x41e2b5
  41e472:	mov    DWORD PTR [ebp-0x4],eax
  41e475:	mov    eax,DWORD PTR [ebp-0x4]
  41e478:	leave  
  41e479:	ret    0x8
  41e47c:	jg     0x41e432
  41e47e:	jge    0xf741a453
  41e484:	xor    BYTE PTR [ebp+0x59b7916e],0x80
  41e48b:	aaa    
  41e48c:	clc    
  41e48d:	popa   
  41e48e:	add    DWORD PTR [eax],eax
  41e490:	xchg   BYTE PTR [edx],al
  41e492:	add    BYTE PTR [eax],al
  41e494:	out    0xcc,al
  41e496:	mov    DWORD PTR [eax+0x75],esp
  41e499:	aad    0xe8
  41e49b:	or     esp,DWORD PTR [eax-0x7d]
  41e49e:	inc    eax
  41e49f:	fadd   QWORD PTR [ebp+edi*2+0x65]
  41e4a3:	jnp    0x41e483
  41e4a5:	jns    0x41e4b4
  41e4a7:	adc    eax,0x91578268
  41e4ac:	ja     0x41e44e
  41e4ae:	outs   dx,DWORD PTR ds:[esi]
  41e4af:	out    dx,eax
  41e4b0:	daa    
  41e4b1:	xchg   ebp,eax
  41e4b2:	mov    WORD PTR [ebx-0x4263c67a],ds
  41e4b8:	push   ebp
  41e4b9:	daa    
  41e4ba:	dec    ebx
  41e4bb:	ja     0x41e4af
  41e4bd:	scas   eax,DWORD PTR es:[edi]
  41e4be:	dec    esp
  41e4bf:	mov    ebp,0xbcfc9693
  41e4c4:	loop   0x41e4b9
  41e4c6:	xor    DWORD PTR [ebp*4+0x52a90b2b],edx
  41e4cd:	repz repz dec ecx
  41e4d0:	xor    DWORD PTR [ebp-0x21],eax
  41e4d3:	dec    eax
  41e4d4:	xchg   esi,eax
  41e4d5:	das    
  41e4d6:	dec    ebp
  41e4d7:	(bad)  
  41e4d8:	leave  
  41e4d9:	clc    
  41e4da:	pushf  
  41e4db:	pop    edx
  41e4dc:	scas   eax,DWORD PTR es:[edi]
  41e4dd:	jo     0x41e465
  41e4df:	fsub   QWORD PTR [ebx]
  41e4e1:	pop    es
  41e4e2:	or     edx,esi
  41e4e4:	sub    DWORD PTR [edx-0xe],ebp
  41e4e7:	mov    esp,0x98da8e44
  41e4ec:	add    dh,ch
  41e4ee:	mov    dh,0xa1
  41e4f0:	jge    0x41e504
  41e4f2:	dec    edx
  41e4f3:	mov    cl,0x92
  41e4f5:	add    eax,0xf8f2701d
  41e4fa:	mov    ecx,0x617fb815
  41e4ff:	dec    esp
  41e500:	inc    edi
  41e501:	adc    eax,0xef86cf48
  41e506:	mov    ebx,eax
  41e508:	call   0xc4befab5
  41e50d:	pop    eax
  41e50e:	ss xchg ecx,eax
  41e510:	xlat   BYTE PTR ds:[ebx]
  41e511:	sub    DWORD PTR [ebx-0x6f70dcdd],eax
  41e517:	sub    BYTE PTR [ecx+edx*2],ah
  41e51a:	jle    0x41e56d
  41e51c:	loop   0x41e4db
  41e51e:	add    al,0x8d
  41e520:	sbb    BYTE PTR [esi-0x7e],al
  41e523:	adc    dh,BYTE PTR [ebp-0x45]
  41e526:	(bad)  
  41e527:	pop    ss
  41e528:	popf   
  41e529:	mov    ch,0x64
  41e52b:	lock mov al,ds:0x55fa6476
  41e531:	lahf   
  41e532:	jp     0x41e584
  41e534:	lahf   
  41e535:	sahf   
  41e536:	add    al,0xbc
  41e538:	std    
  41e539:	jno    0x41e53a
  41e53b:	sub    eax,0x32d6ce34
  41e540:	or     ebp,edi
  41e542:	fisub  DWORD PTR [ebx]
  41e544:	sub    DWORD PTR [edi],ebp
  41e546:	data16 aad 0xef
  41e549:	xor    DWORD PTR [esi],ebx
  41e54b:	hlt    
  41e54c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e54d:	idiv   DWORD PTR [ebx]
  41e54f:	push   esi
  41e550:	les    ecx,FWORD PTR fs:[ebp+0x7de2fa8d]
  41e557:	push   edx
  41e558:	and    al,0x70
  41e55a:	dec    ecx
  41e55b:	popa   
  41e55c:	xchg   ecx,eax
  41e55d:	ss ret 0x309a
  41e561:	or     DWORD PTR [esi+0x76b9f937],ebx
  41e567:	jne    0x41e569
  41e569:	or     BYTE PTR [ebx-0xdf1aa3a],0x80
  41e570:	lea    esi,[esi+0x52]
  41e573:	mov    eax,0xd202d65b
  41e578:	or     esp,ebx
  41e57a:	mov    ecx,0x7cd0cb00
  41e57f:	daa    
  41e580:	imul   eax,DWORD PTR [eax-0x20467ef9],0xf88fff4
  41e58a:	push   ss
  41e58b:	jmp    0x41e52d
  41e58d:	outs   dx,DWORD PTR ds:[esi]
  41e58e:	cmp    DWORD PTR [ebx],ecx
  41e590:	ja     0x41e5ce
  41e592:	gs xchg ecx,eax
  41e594:	in     al,0x20
  41e596:	sub    BYTE PTR [edi],dh
  41e598:	pop    ebp
  41e599:	add    DWORD PTR [edi+0x7b493299],edi
  41e59f:	imul   ecx,DWORD PTR fs:[esi-0x1d],0xffffff8d
  41e5a4:	cs sub esp,esp
  41e5a7:	jb     0x41e612
  41e5a9:	leave  
  41e5aa:	popf   
  41e5ab:	jne    0x41e55e
  41e5ad:	das    
  41e5ae:	push   ebx
  41e5af:	fdiv   st(7),st
  41e5b1:	loope  0x41e609
  41e5b3:	(bad)  
  41e5b4:	icebp  
  41e5b5:	mov    DWORD PTR [eax-0x5e],esp
  41e5b8:	adc    ch,BYTE PTR [edi-0x3f549883]
  41e5be:	jae    0x41e5b3
  41e5c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5c1:	dec    edx
  41e5c2:	sub    BYTE PTR [ecx*1+0x51427b27],ah
  41e5c9:	pop    ss
  41e5ca:	and    al,0xec
  41e5cc:	jmp    0x98a:0x3735aed6
  41e5d3:	dec    ebx
  41e5d4:	loopne 0x41e57f
  41e5d6:	fimul  WORD PTR [edi-0xd]
  41e5d9:	push   ds
  41e5da:	jmp    0xca4a:0x9cb0fb93
  41e5e1:	(bad)  [eax-0x3eef4b87]
  41e5e7:	sbb    DWORD PTR [ebp-0x7f],0x22
  41e5eb:	adc    eax,0xa9964b14
  41e5f0:	sbb    BYTE PTR [eax-0x1806f027],ah
  41e5f6:	ins    DWORD PTR es:[edi],dx
  41e5f7:	ds dec esi
  41e5f9:	push   0xef3c1a50
  41e5fe:	fimul  WORD PTR [edx+0x14]
  41e601:	in     al,0x7f
  41e603:	jle    0x41e671
  41e605:	or     ch,bl
  41e607:	dec    ebx
  41e608:	or     cl,BYTE PTR [esi-0x1c10467d]
  41e60e:	mov    cl,0x98
  41e610:	jmp    0x41e5d4
  41e612:	add    al,0xad
  41e614:	jb     0x41e5d7
  41e616:	jb     0x41e64e
  41e618:	sub    esi,DWORD PTR [edx+0x6f]
  41e61b:	scas   eax,DWORD PTR es:[edi]
  41e61c:	imul   edi,ebp,0x8258303e
  41e622:	scas   eax,DWORD PTR es:[edi]
  41e623:	adc    al,0x28
  41e625:	sub    ch,al
  41e627:	sbb    eax,0xd9a53841
  41e62c:	push   eax
  41e62d:	(bad)  
  41e62e:	icebp  
  41e62f:	(bad)  
  41e630:	cli    
  41e631:	ss scas al,BYTE PTR es:[edi]
  41e633:	popf   
  41e634:	test   BYTE PTR [bx-0x6a13],cl
  41e639:	xor    DWORD PTR [esi-0x3dbd12a3],edi
  41e63f:	mov    dh,0xb4
  41e641:	retf   
  41e642:	inc    ebx
  41e643:	push   ss
  41e644:	mov    esp,0x4fd0c1f
  41e649:	lods   al,BYTE PTR ds:[esi]
  41e64a:	and    ah,dh
  41e64c:	bound  ebx,QWORD PTR [ecx-0x44]
  41e64f:	or     ch,bh
  41e651:	or     ch,BYTE PTR [ebx]
  41e653:	addr16 retf 0x908f
  41e657:	fnstenv [esi+ebp*2+0x40]
  41e65b:	xchg   al,cl
  41e65d:	jo     0x41e650
  41e65f:	clc    
  41e660:	mov    ebx,0xe949ff27
  41e665:	jae    0x41e6d6
  41e667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e668:	dec    ebx
  41e669:	pop    ecx
  41e66a:	imul   eax,esp,0xffffffff
  41e66d:	into   
  41e66e:	loopne 0x41e656
  41e670:	shl    BYTE PTR ds:0x5ec86092,0x4c
  41e677:	jbe    0x41e675
  41e679:	(bad)  
  41e67a:	scas   eax,DWORD PTR es:[edi]
  41e67b:	cmc    
  41e67c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e67d:	sub    esp,DWORD PTR [eax-0x4]
  41e680:	push   ecx
  41e681:	xchg   esi,eax
  41e682:	push   cs
  41e683:	in     eax,dx
  41e684:	jge    0x41e611
  41e686:	cli    
  41e687:	xor    al,0x69
  41e689:	dec    ecx
  41e68a:	cmp    ch,bl
  41e68c:	xchg   esi,eax
  41e68d:	mov    edx,0xe79f4248
  41e692:	je     0x41e635
  41e694:	sti    
  41e695:	push   0x78
  41e697:	lods   al,BYTE PTR ds:[si]
  41e699:	xor    DWORD PTR [ebx+ecx*4],edx
  41e69c:	mov    dh,0x73
  41e69e:	out    0x3a,al
  41e6a0:	xor    DWORD PTR [ebx],esp
  41e6a2:	lock div bh
  41e6a5:	mov    al,ds:0xb4bc954f
  41e6aa:	push   ds
  41e6ab:	jns    0x41e6e4
  41e6ad:	jmp    0xaa2a:0xf164f9a0
  41e6b4:	adc    BYTE PTR [ecx+edx*1+0x1d02fcb1],al
  41e6bb:	pop    ds
  41e6bc:	imul   DWORD PTR [edx+0x3c6f560a]
  41e6c2:	fs xchg esi,eax
  41e6c4:	xchg   ebp,eax
  41e6c5:	and    ah,BYTE PTR [ecx+0x4d948f03]
  41e6cb:	and    esp,DWORD PTR ds:0x565684bb
  41e6d1:	adc    eax,0x21104de1
  41e6d6:	pop    esi
  41e6d7:	test   eax,0x6169dcf1
  41e6dc:	retf   
  41e6dd:	sub    eax,0x87d8f469
  41e6e2:	call   0x28d1:0x35e77f24
  41e6e9:	rcr    DWORD PTR [edx+0x3d],0x52
  41e6ed:	repnz sbb al,0x30
  41e6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6f1:	div    BYTE PTR [ebp+ebx*2+0x12]
  41e6f5:	dec    esp
  41e6f6:	mov    ecx,edx
  41e6f8:	mov    ds:0xef58cb3e,eax
  41e6fd:	aam    0x5b
  41e6ff:	and    ah,ah
  41e701:	xor    BYTE PTR [edi-0x70],ah
  41e704:	in     al,0xa4
  41e706:	ss cmp al,0x59
  41e709:	outs   dx,BYTE PTR ds:[esi]
  41e70a:	fs iret 
  41e70c:	leave  
  41e70d:	xchg   esi,eax
  41e70e:	imul   esp,DWORD PTR cs:[eax-0x1c],0xf314ccac
  41e716:	pop    edi
  41e717:	cmp    BYTE PTR [esi+0x36],0x0
  41e71b:	add    BYTE PTR [edi+0x4c],dh
  41e71e:	idiv   dh
  41e720:	(bad)  
  41e721:	(bad)  
  41e722:	jg     0x41e6f1
  41e724:	mov    ah,0x6b
  41e726:	mov    dh,0x14
  41e728:	loop   0x41e70e
  41e72a:	ss sub al,0x7e
  41e72d:	add    DWORD PTR fs:[eax],eax
  41e730:	xchg   BYTE PTR [edx],al
  41e732:	add    BYTE PTR [eax],al
  41e734:	mov    cl,0xd3
  41e736:	in     eax,0x4a
  41e738:	pop    eax
  41e739:	dec    ebx
  41e73a:	or     DWORD PTR [ebx+0x27],0x5e
  41e73e:	movhps QWORD PTR [ebx],xmm1
  41e741:	inc    ebx
  41e742:	sbb    DWORD PTR [esi-0x5c],ecx
  41e745:	dec    edi
  41e746:	push   dx
  41e748:	xchg   ecx,eax
  41e749:	out    dx,eax
  41e74a:	push   cs
  41e74b:	rcr    DWORD PTR [esi+eiz*1],0x9a
  41e74f:	retf   0xafcd
  41e752:	inc    ecx
  41e753:	xor    al,0x15
  41e755:	shl    bh,1
  41e757:	ds adc esi,esi
  41e75a:	mov    ecx,0x3d4f3878
  41e75f:	xor    ebp,ebx
  41e761:	loope  0x41e778
  41e763:	dec    BYTE PTR [edx-0x45]
  41e766:	push   esi
  41e767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e768:	pusha  
  41e769:	lods   al,BYTE PTR ds:[esi]
  41e76a:	(bad)  
  41e76b:	mov    ebx,0xeea2206b
  41e770:	lea    esp,[ecx]
  41e772:	out    dx,al
  41e773:	xor    BYTE PTR [esi],0x6c
  41e776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e777:	gs mov ch,0x9c
  41e77a:	jbe    0x41e7eb
  41e77c:	xor    ch,BYTE PTR [edi+0x74]
  41e77f:	pop    ds
  41e780:	mov    DWORD PTR [ebp+0x41],ebp
  41e783:	lds    edx,FWORD PTR [edx]
  41e785:	stos   DWORD PTR es:[edi],eax
  41e786:	sbb    BYTE PTR [edi+0x20],dl
  41e789:	fild   DWORD PTR ds:0xf915664a
  41e78f:	dec    ebx
  41e790:	push   0x76a7a97f
  41e795:	mov    ecx,0xcda3d9ba
  41e79a:	sub    DWORD PTR [ebx],0xdb7d5000
  41e7a0:	sub    al,0x88
  41e7a2:	aaa    
  41e7a3:	int3   
  41e7a4:	bound  edi,QWORD PTR [esi+0x71d21560]
  41e7aa:	test   BYTE PTR [edx-0x26],ah
  41e7ad:	cmc    
  41e7ae:	cs push edi
  41e7b0:	and    BYTE PTR [edx+0x77],0xe7
  41e7b4:	jnp    0x41e76a
  41e7b6:	aad    0x2
  41e7b8:	call   ebp
  41e7ba:	mov    BYTE PTR [ebp-0x645875a8],al
  41e7c0:	imul   DWORD PTR [ebx]
  41e7c2:	test   eax,0x15d81e62
  41e7c7:	out    0x8b,eax
  41e7c9:	pop    esi
  41e7ca:	or     al,0xb2
  41e7cc:	mov    al,ds:0xcee8accc
  41e7d1:	lods   al,BYTE PTR ds:[esi]
  41e7d2:	mov    edi,0xa52df71
  41e7d7:	inc    edx
  41e7d8:	pop    ebp
  41e7d9:	inc    ecx
  41e7da:	outs   dx,DWORD PTR ds:[esi]
  41e7db:	rcl    BYTE PTR [eax],1
  41e7dd:	test   eax,0x2a833bd1
  41e7e2:	mov    fs,WORD PTR [ecx+0x3d]
  41e7e5:	jecxz  0x41e7b3
  41e7e7:	pop    ebx
  41e7e8:	daa    
  41e7e9:	cs aad 0x7a
  41e7ec:	mov    ds:0xf6da3143,al
  41e7f1:	or     eax,0xfcf078ca
  41e7f6:	mov    gs,esp
  41e7f8:	ins    BYTE PTR es:[edi],dx
  41e7f9:	imul   edi,DWORD PTR [esi-0x7669bda2],0xffffff96
  41e800:	std    
  41e801:	dec    esi
  41e802:	or     eax,0xc8858c7d
  41e807:	loop   0x41e875
  41e809:	dec    ecx
  41e80a:	dec    edx
  41e80b:	out    0x9c,al
  41e80d:	loope  0x41e795
  41e80f:	xchg   DWORD PTR [eax-0x25cdcb7b],esp
  41e815:	or     al,0xc8
  41e817:	loope  0x41e7af
  41e819:	push   esi
  41e81a:	mov    cl,0x37
  41e81c:	pusha  
  41e81d:	(bad)  
  41e820:	cmp    eax,0xa78d3546
  41e825:	xor    eax,esi
  41e827:	das    
  41e828:	in     eax,0x87
  41e82a:	mov    eax,ds:0x9c0f7219
  41e82f:	jbe    0x41e80d
  41e831:	popf   
  41e832:	add    ch,dh
  41e834:	cmc    
  41e835:	mov    ds:0x182de9dd,al
  41e83a:	addr16 pop ss
  41e83c:	lds    edx,FWORD PTR [ebx]
  41e83e:	into   
  41e83f:	and    al,0xfc
  41e841:	mov    dh,0xe0
  41e843:	dec    edi
  41e844:	ds push esi
  41e846:	fwait
  41e847:	cs es cmp eax,0x74250a3d
  41e84e:	pop    ecx
  41e84f:	in     eax,0xaf
  41e851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e852:	push   edx
  41e853:	stos   DWORD PTR es:[edi],eax
  41e854:	jne    0x41e8b7
  41e856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e857:	iret   
  41e858:	jg     0x41e816
  41e85a:	cmp    DWORD PTR [edx-0x3a15d57c],edx
  41e860:	jae    0x41e8c9
  41e862:	mov    ch,0x3c
  41e864:	xchg   ecx,eax
  41e865:	sub    BYTE PTR [ebx],ch
  41e867:	add    esi,esi
  41e869:	es dec esp
  41e86b:	inc    DWORD PTR [eax+ecx*4+0x72]
  41e86f:	push   esi
  41e870:	mov    BYTE PTR [esi],dh
  41e872:	xchg   DWORD PTR [ebp+0x78],ecx
  41e875:	ret    0xd528
  41e878:	pop    ebx
  41e879:	es into 
  41e87b:	sub    BYTE PTR [edi-0x10],ah
  41e87e:	mov    esp,0x2a8d1778
  41e883:	jne    0x41e846
  41e885:	inc    ebx
  41e886:	aam    0x3
  41e888:	or     DWORD PTR [eax],ecx
  41e88a:	dec    edi
  41e88b:	retf   
  41e88c:	sub    al,al
  41e88e:	add    eax,0xc4ceb5d8
  41e893:	fwait
  41e894:	mov    bl,al
  41e896:	ins    BYTE PTR es:[edi],dx
  41e897:	aad    0xd9
  41e899:	xchg   esp,eax
  41e89a:	lea    ebp,[edi+edx*4-0x1543db52]
  41e8a1:	xchg   ecx,eax
  41e8a2:	push   ebp
  41e8a3:	popf   
  41e8a4:	xor    ebx,ecx
  41e8a6:	stos   DWORD PTR es:[edi],eax
  41e8a7:	leave  
  41e8a8:	mov    ebx,0x41cd6e0f
  41e8ad:	call   0x2915:0x647d79db
  41e8b4:	scas   eax,DWORD PTR es:[edi]
  41e8b5:	in     al,dx
  41e8b6:	fdivr  DWORD PTR [ecx+0x4a6df2ff]
  41e8bc:	sub    edi,esi
  41e8be:	ror    BYTE PTR ss:[edx+0x3d],0x4a
  41e8c3:	and    DWORD PTR [eax-0x29573925],esp
  41e8c9:	outs   dx,DWORD PTR ds:[esi]
  41e8ca:	mov    cl,0x39
  41e8cc:	in     eax,dx
  41e8cd:	test   al,0x7f
  41e8cf:	xchg   DWORD PTR [ecx-0x77],esi
  41e8d2:	sub    BYTE PTR [eax],0x30
  41e8d5:	pop    ebp
  41e8d6:	jmp    0x46d:0x8ca6c2cb
  41e8dd:	fcom   QWORD PTR [edx+0x750eec56]
  41e8e3:	adc    DWORD PTR [edi],esp
  41e8e5:	jl     0x41e91c
  41e8e7:	mov    dh,0xde
  41e8e9:	adc    al,0x8f
  41e8eb:	data16 add al,0x4e
  41e8ee:	lods   al,BYTE PTR ds:[esi]
  41e8ef:	mov    DWORD PTR [esi+0x4c4324ae],eax
  41e8f5:	mov    edx,0x78c6495a
  41e8fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8fb:	ror    DWORD PTR [edx+0x4194f49a],cl
  41e901:	adc    DWORD PTR [esi-0x39e6c91c],0xfc85ff7
  41e90b:	push   cs
  41e90c:	shl    bl,0xb4
  41e90f:	test   DWORD PTR [ebx+0x1a7ccb2],0x52550d5c
  41e919:	push   edx
  41e91a:	sbb    al,bh
  41e91c:	stos   DWORD PTR es:[edi],eax
  41e91d:	or     eax,DWORD PTR [eax-0x80]
  41e920:	fst    QWORD PTR [ebx+eax*1+0x4919b4b5]
  41e927:	sub    ah,BYTE PTR [eax]
  41e929:	inc    esi
  41e92a:	adc    eax,0x1576700d
  41e92f:	aaa    
  41e930:	sub    al,0x20
  41e932:	mov    eax,ds:0x2aaf9499
  41e937:	lds    edi,FWORD PTR [edx+0x66952bf7]
  41e93d:	mov    ds:0x1f464e65,eax
  41e942:	dec    edx
  41e943:	js     0x41e943
  41e945:	and    al,0xfb
  41e947:	jae    0x41e932
  41e949:	pushf  
  41e94a:	bnd jp 0x41e95c
  41e94d:	pop    edx
  41e94e:	aad    0xcd
  41e950:	push   esp
  41e951:	popf   
  41e952:	inc    ebx
  41e953:	dec    edi
  41e954:	arpl   WORD PTR [edi],dx
  41e956:	push   ebp
  41e957:	xor    DWORD PTR [edi+esi*1+0x4b53d56c],ebp
  41e95e:	mov    eax,0xedef2aba
  41e963:	push   ds
  41e964:	lods   al,BYTE PTR ds:[esi]
  41e965:	pop    es
  41e966:	loopne 0x41e940
  41e968:	mov    eax,fs:0x6d1e23b0
  41e96e:	push   ds
  41e96f:	pop    esi
  41e970:	shr    DWORD PTR [edx-0x4f],1
  41e973:	fwait
  41e974:	xor    DWORD PTR [ebx+0x3f798ec9],ebx
  41e97a:	cmp    eax,0xb7f14785
  41e97f:	push   ecx
  41e980:	jb     0x41e969
  41e982:	data16 jno 0x41e9e6
  41e985:	repz dec esp
  41e987:	je     0x41e958
  41e989:	cmp    eax,DWORD PTR [edi+ebx*8-0x6cec6cf3]
  41e990:	aam    0x5f
  41e992:	ja     0x41e9cb
  41e994:	sbb    al,0xdc
  41e996:	sbb    DWORD PTR [ecx+edx*4],eax
  41e999:	inc    ecx
  41e99a:	std    
  41e99b:	add    DWORD PTR [esi-0x7c],esp
  41e99e:	int3   
  41e99f:	sub    BYTE PTR [edx+0x63ddfb8e],dl
  41e9a5:	dec    eax
  41e9a6:	in     eax,0x40
  41e9a8:	js     0x41e9a6
  41e9aa:	test   eax,0xd18037fd
  41e9af:	loop   0x41e9a1
  41e9b1:	test   DWORD PTR [eax-0x2],eax
  41e9b4:	sbb    DWORD PTR [ebp+0x40],edx
  41e9b7:	rcl    BYTE PTR [ebp-0x24],1
  41e9ba:	add    BYTE PTR [eax],al
  41e9bc:	pop    es
  41e9bd:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41e9c3:	pop    ds
  41e9c4:	xchg   BYTE PTR [ebx],bl
  41e9c6:	mov    edx,0x404b01d0
  41e9cb:	das    
  41e9cc:	add    al,0x67
  41e9ce:	add    DWORD PTR [eax],eax
  41e9d0:	xchg   BYTE PTR [edx],al
  41e9d2:	add    BYTE PTR [eax],al
  41e9d4:	mov    esp,0xc030a53e
  41e9d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9da:	scas   al,BYTE PTR es:[edi]
  41e9db:	jnp    0x41e994
  41e9dd:	sbb    al,0x4c
  41e9df:	push   ss
  41e9e0:	xor    al,0x9e
  41e9e2:	dec    esi
  41e9e3:	in     eax,0x41
  41e9e5:	mov    ecx,0xf00a1bb3
  41e9ea:	push   esp
  41e9eb:	add    esp,DWORD PTR [esi-0x5cf032ad]
  41e9f1:	sub    ah,BYTE PTR [ebp+0x70]
  41e9f4:	daa    
  41e9f5:	push   edi
  41e9f6:	push   0x15357ab2
  41e9fb:	jo     0x41e9ba
  41e9fd:	cdq    
  41e9fe:	cmp    al,0x35
  41ea00:	dec    ecx
  41ea01:	out    dx,eax
  41ea02:	jae    0x41ea11
  41ea04:	lea    esp,[edi]
  41ea06:	ret    
  41ea07:	inc    edx
  41ea08:	and    DWORD PTR [eax+0x3c],ecx
  41ea0b:	fstp   DWORD PTR [ecx+0x55c8640d]
  41ea11:	mov    cl,0x5
  41ea13:	pop    ebp
  41ea14:	shl    BYTE PTR [eax-0x5e5c1f3d],cl
  41ea1a:	add    edi,esp
  41ea1c:	stc    
  41ea1d:	sub    esp,DWORD PTR [edx+0x52]
  41ea20:	call   DWORD PTR [edx-0x2641bb5]
  41ea26:	dec    edi
  41ea27:	mov    dh,0x8a
  41ea29:	test   BYTE PTR ds:0xd5f2b09d,cl
  41ea2f:	rcr    BYTE PTR [ebp+0x55fe5ce5],0x75
  41ea36:	cmp    ecx,DWORD PTR [ebp+eax*2+0x45]
  41ea3a:	gs pop ecx
  41ea3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea3d:	outs   dx,BYTE PTR ds:[esi]
  41ea3e:	int3   
  41ea3f:	jb     0x41ea27
  41ea41:	sbb    ah,BYTE PTR [edx-0x1ccc2b98]
  41ea47:	cwde   
  41ea48:	push   esp
  41ea49:	xchg   ebp,eax
  41ea4a:	sbb    ebp,DWORD PTR es:[edx+ebp*1]
  41ea4e:	cmp    eax,0x7cf70437
  41ea53:	push   0x1a
  41ea55:	xchg   edx,eax
  41ea56:	iret   
  41ea57:	sbb    edi,DWORD PTR [ecx+0x416a347c]
  41ea5d:	push   cs
  41ea5e:	lea    ecx,[eax+0x2a306195]
  41ea64:	jle    0x41e9f0
  41ea66:	jmp    0x73c:0x51840255
  41ea6d:	and    dh,BYTE PTR [ebp-0x74]
  41ea70:	pop    esp
  41ea71:	fwait
  41ea72:	cmc    
  41ea73:	std    
  41ea74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea75:	sub    al,0xa3
  41ea77:	and    al,ch
  41ea79:	icebp  
  41ea7a:	fadd   QWORD PTR [edx+eiz*4-0x47]
  41ea7e:	arpl   WORD PTR [esi-0x7d2d7306],sp
  41ea84:	sar    BYTE PTR [edx-0x53af103f],0x84
  41ea8b:	jno    0x41ea22
  41ea8d:	stc    
  41ea8e:	push   ds
  41ea8f:	inc    edx
  41ea90:	jle    0x41ea1d
  41ea92:	loopne 0x41eb00
  41ea94:	cmc    
  41ea95:	ficom  WORD PTR [ecx-0x2a]
  41ea98:	or     ch,BYTE PTR [eax+0x5]
  41ea9b:	cli    
  41ea9c:	or     DWORD PTR [eax+0x73],0xe48025ad
  41eaa3:	enter  0xd8f6,0xd0
  41eaa7:	test   DWORD PTR [edi-0x3309dcdb],esi
  41eaad:	xor    al,0x2d
  41eaaf:	and    DWORD PTR [ebp-0xe],edi
  41eab2:	fldenv [esi-0x74]
  41eab5:	out    dx,al
  41eab6:	push   edx
  41eab7:	retf   0x5f0f
  41eaba:	test   eax,0x49b09c6f
  41eabf:	int3   
  41eac0:	mov    ah,0xe3
  41eac2:	aad    0xbd
  41eac4:	jecxz  0x41eafc
  41eac6:	daa    
  41eac7:	loopne 0x41eac3
  41eac9:	sti    
  41eaca:	push   esi
  41eacb:	fldenv [ecx-0x78cd85c]
  41ead1:	and    bl,0xda
  41ead4:	ror    BYTE PTR [eax],cl
  41ead6:	lods   eax,DWORD PTR ds:[esi]
  41ead7:	jecxz  0x41ead8
  41ead9:	sbb    BYTE PTR [edx-0x1839d4c2],cl
  41eadf:	mov    ch,0xfb
  41eae1:	mov    dl,0x5
  41eae3:	sbb    dl,BYTE PTR [esp+eax*8+0x2b]
  41eae7:	pop    ecx
  41eae8:	dec    ecx
  41eae9:	in     eax,dx
  41eaea:	aas    
  41eaeb:	aas    
  41eaec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaed:	mov    esp,0x3c72fddd
  41eaf2:	mov    ch,0x5e
  41eaf4:	mov    al,ds:0x3450069e
  41eaf9:	in     eax,0x8d
  41eafb:	das    
  41eafc:	aam    0x75
  41eafe:	cmp    edi,esp
  41eb00:	ror    BYTE PTR [ecx+eiz*4],1
  41eb03:	rcr    DWORD PTR [ecx],cl
  41eb05:	xchg   edi,eax
  41eb06:	mov    al,ds:0xfe9682ea
  41eb0b:	int3   
  41eb0c:	into   
  41eb0d:	jecxz  0x41eae7
  41eb0f:	mov    gs,WORD PTR [esi-0x53]
  41eb12:	jle    0x41eb7b
  41eb14:	pop    edx
  41eb15:	out    dx,eax
  41eb16:	push   cs
  41eb17:	leave  
  41eb18:	iret   
  41eb19:	dec    edi
  41eb1a:	push   eax
  41eb1b:	into   
  41eb1c:	mov    ds:0xbb28bfe,eax
  41eb21:	xchg   esp,eax
  41eb22:	jmp    0xcf097747
  41eb27:	push   cs
  41eb28:	add    eax,0xa9d17d6c
  41eb2d:	popa   
  41eb2e:	pop    eax
  41eb2f:	nop
  41eb30:	js     0x41eb00
  41eb32:	push   ds
  41eb33:	pop    DWORD PTR [edx]
  41eb35:	(bad)  
  41eb37:	mov    bh,0xd
  41eb39:	dec    DWORD PTR [ecx-0x438290c3]
  41eb3f:	pusha  
  41eb40:	cdq    
  41eb41:	sahf   
  41eb42:	fist   DWORD PTR [esi]
  41eb44:	adc    al,0xb1
  41eb46:	mov    ecx,0xa7970e8f
  41eb4b:	adc    al,0xb8
  41eb4d:	(bad)  
  41eb4e:	sahf   
  41eb4f:	shr    DWORD PTR [edi+ebp*1-0x45b17de8],0xf
  41eb57:	std    
  41eb58:	pop    edx
  41eb59:	pop    ebx
  41eb5a:	sub    BYTE PTR [esi],bl
  41eb5c:	sbb    al,0xac
  41eb5e:	push   0x64
  41eb60:	push   ebx
  41eb61:	sbb    edi,DWORD PTR [edx+ebp*8-0x46a5bb96]
  41eb68:	loope  0x41eb1c
  41eb6a:	and    eax,0x24f58116
  41eb6f:	sub    eax,eax
  41eb71:	xor    al,0xed
  41eb73:	or     eax,0xb2944ae3
  41eb78:	or     BYTE PTR [esp+ecx*8],bh
  41eb7b:	pop    ebp
  41eb7c:	jne    0x41eb0f
  41eb7e:	stos   BYTE PTR es:[edi],al
  41eb7f:	(bad)  
  41eb80:	loop   0x41ebab
  41eb82:	out    0xcc,eax
  41eb84:	out    dx,eax
  41eb85:	xchg   DWORD PTR [ebp-0x4b330598],edi
  41eb8b:	mov    BYTE PTR [edi],bl
  41eb8d:	jge    0x41eb2b
  41eb8f:	out    0x63,eax
  41eb91:	jl     0x41eb9e
  41eb93:	aaa    
  41eb94:	adc    DWORD PTR [ecx],esi
  41eb96:	add    dl,BYTE PTR [ebx+0x58]
  41eb99:	popa   
  41eb9a:	push   0xffffffc5
  41eb9c:	mov    BYTE PTR [eax],bl
  41eb9e:	rcr    cl,0x20
  41eba1:	and    ecx,eax
  41eba3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eba5:	bound  esp,QWORD PTR [eax]
  41eba7:	inc    esi
  41eba8:	ins    DWORD PTR es:[edi],dx
  41eba9:	je     0x41ebdb
  41ebab:	dec    edi
  41ebac:	jmp    0x5559:0xb9bcf5d3
  41ebb3:	je     0x41eba7
  41ebb5:	imul   esp,DWORD PTR ds:0xaddf9a82,0xe09079fa
  41ebbf:	and    al,0xb0
  41ebc1:	add    BYTE PTR [ecx-0x35],0x10
  41ebc5:	and    eax,0x43a00e17
  41ebca:	sub    esp,eax
  41ebcc:	rcl    BYTE PTR [edx+edi*2+0x6e],0xa0
  41ebd1:	or     BYTE PTR [ebx+ebx*2],ah
  41ebd4:	sub    BYTE PTR [edi+0x47d2c3c5],dl
  41ebda:	inc    ecx
  41ebdb:	mov    esp,esp
  41ebdd:	pushf  
  41ebde:	jnp    0x41ebf9
  41ebe0:	dec    ecx
  41ebe1:	retf   
  41ebe2:	jp     0x41ebb2
  41ebe4:	mov    eax,0xf10b2db9
  41ebe9:	adc    BYTE PTR [edx+0x76],bh
  41ebec:	loop   0x41ec20
  41ebee:	adc    BYTE PTR [edx],dh
  41ebf0:	adc    DWORD PTR [esi+0x1],eax
  41ebf3:	fdiv   st(1),st
  41ebf5:	dec    eax
  41ebf6:	mov    dl,0x61
  41ebf8:	mov    edx,0xc031b1af
  41ebfd:	retf   
  41ebfe:	pop    ecx
  41ebff:	ficom  WORD PTR [esi-0x42]
  41ec02:	call   0xa95d2d2d
  41ec07:	add    eax,eax
  41ec09:	cmp    eax,0xc3675d09
  41ec0e:	fsub   st,st(4)
  41ec10:	imul   ebp,DWORD PTR [eax+0x53],0xed0bd3df
  41ec17:	jnp    0x41ec0a
  41ec19:	les    ecx,FWORD PTR [ebp+0x3451cfef]
  41ec1f:	stc    
  41ec20:	mov    ecx,ebx
  41ec22:	cli    
  41ec23:	aas    
  41ec24:	out    dx,al
  41ec25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec26:	fdivr  DWORD PTR fs:[ecx-0x61]
  41ec2a:	lahf   
  41ec2b:	test   al,0xd0
  41ec2d:	aam    0x1e
  41ec2f:	rcl    DWORD PTR ss:[edx-0x73],1
  41ec33:	sbb    ebp,DWORD PTR [edx]
  41ec35:	mov    al,0x3e
  41ec37:	mov    ds:0xd4c9107f,eax
  41ec3c:	pop    ecx
  41ec3d:	mov    ds:0xc79aa3b4,eax
  41ec42:	jbe    0x41ec5c
  41ec44:	adc    al,0xd7
  41ec46:	and    eax,0x91fe0435
  41ec4b:	pop    esi
  41ec4c:	xchg   dh,bl
  41ec4e:	jmp    0xe0b9b1c
  41ec53:	sahf   
  41ec54:	paddsw mm5,QWORD PTR [edx+0xac3615]
  41ec5b:	add    BYTE PTR [esi],bl
  41ec5d:	add    al,0xa7
  41ec5f:	(bad)  
  41ec60:	mov    edi,0xf6dd7ee7
  41ec65:	jp     0x41ec30
  41ec67:	push   esi
  41ec68:	into   
  41ec69:	jb     0x41ec12
  41ec6b:	call   0x4355fa
  41ec70:	xchg   BYTE PTR [edx],al
  41ec72:	add    BYTE PTR [eax],al
  41ec74:	push   eax
  41ec75:	test   DWORD PTR [edi-0x10],esp
  41ec78:	rcr    DWORD PTR [esi],0x6e
  41ec7b:	mov    bh,0x5a
  41ec7d:	ja     0x41ec1f
  41ec7f:	jmp    eax
  41ec81:	sbb    ch,BYTE PTR [esp+ebx*1-0x50]
  41ec85:	mov    dh,0x93
  41ec87:	daa    
  41ec88:	jmp    FWORD PTR cs:[ebx+0x25d30c57]
  41ec8f:	push   ds
  41ec90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec91:	test   edi,eax
  41ec93:	stc    
  41ec94:	push   ds
  41ec95:	cmp    bh,ah
  41ec97:	pop    edi
  41ec98:	nop
  41ec99:	push   cs
  41ec9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec9b:	mov    ds:0x2eeb0b26,al
  41eca0:	mov    ebp,0x4e01f4cd
  41eca5:	sahf   
  41eca6:	inc    eax
  41eca7:	adc    edx,edi
  41eca9:	sub    esp,DWORD PTR [ebx-0x21cd9b24]
  41ecaf:	pop    ds
  41ecb0:	dec    edi
  41ecb1:	ror    bh,0x89
  41ecb4:	aas    
  41ecb5:	mov    ebp,0x36e7af91
  41ecba:	jae    0x41ecc5
  41ecbc:	ja     0x41eca7
  41ecbe:	sbb    BYTE PTR [ebp-0x57],al
  41ecc1:	into   
  41ecc2:	mov    WORD PTR [edx-0x72],?
  41ecc5:	hlt    
  41ecc6:	or     DWORD PTR ds:0x85f354ad,esp
  41eccc:	aaa    
  41eccd:	neg    BYTE PTR [ecx+0x69f01fd2]
  41ecd3:	neg    BYTE PTR [ecx]
  41ecd5:	sub    eax,0x116e53be
  41ecda:	hlt    
  41ecdb:	add    al,0xf7
  41ecdd:	adc    al,BYTE PTR [ebx-0x7f]
  41ece0:	push   edi
  41ece1:	sub    BYTE PTR [eax+0x61],0x31
  41ece5:	jge    0x41ec9e
  41ece7:	sbb    esi,DWORD PTR [edi+0x7]
  41ecea:	xchg   ebp,eax
  41eceb:	push   ds
  41ecec:	mov    esp,0x73f3df4e
  41ecf1:	lock sbb BYTE PTR [ebp+0x4934fb70],bh
  41ecf8:	adc    cl,BYTE PTR [eax]
  41ecfa:	sbb    al,0x45
  41ecfc:	dec    esp
  41ecfd:	ret    
  41ecfe:	aad    0x87
  41ed00:	mov    ds:0x47869f6d,eax
  41ed05:	pop    ds
  41ed06:	mov    esi,DWORD PTR [ebx-0x7f]
  41ed09:	or     bl,bh
  41ed0b:	inc    edx
  41ed0c:	inc    esp
  41ed0d:	test   al,0xe4
  41ed0f:	xor    BYTE PTR [edi],bl
  41ed11:	mov    edi,0x25c80efc
  41ed16:	pop    esp
  41ed17:	xchg   ecx,eax
  41ed18:	add    ch,cl
  41ed1a:	or     eax,0xc23d52cb
  41ed1f:	test   al,0xe4
  41ed21:	xchg   esp,eax
  41ed22:	sub    eax,0xd9805cf9
  41ed27:	and    esi,DWORD PTR [ebx-0x74]
  41ed2a:	add    al,0x5e
  41ed2c:	mov    al,0x6c
  41ed2e:	div    DWORD PTR [ebx]
  41ed30:	enter  0x2984,0x98
  41ed34:	cmp    cl,cl
  41ed36:	xchg   edx,eax
  41ed37:	into   
  41ed38:	sub    ch,al
  41ed3a:	sub    al,0xae
  41ed3c:	out    0x0,al
  41ed3e:	xlat   BYTE PTR ds:[ebx]
  41ed3f:	sub    al,BYTE PTR [ecx]
  41ed41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed42:	fidiv  WORD PTR [eax]
  41ed44:	out    dx,eax
  41ed45:	sub    ebx,DWORD PTR [edx]
  41ed47:	(bad)  
  41ed48:	jne    0x41edbf
  41ed4a:	loope  0x41ecf0
  41ed4c:	cdq    
  41ed4d:	sbb    DWORD PTR [esp+ecx*8+0x27],eax
  41ed51:	jno    0x41eda6
  41ed53:	cs pushf 
  41ed55:	push   es
  41ed56:	or     DWORD PTR [ebp+0x6f],ebp
  41ed59:	in     al,0x39
  41ed5b:	test   BYTE PTR [edi],ch
  41ed5d:	sub    al,0x83
  41ed5f:	add    BYTE PTR [esi],0x96
  41ed62:	xchg   esp,eax
  41ed63:	test   DWORD PTR [edi],eax
  41ed65:	mov    BYTE PTR [ebx],cl
  41ed67:	mov    dh,0x69
  41ed69:	cld    
  41ed6a:	out    0x75,eax
  41ed6c:	push   ecx
  41ed6d:	pop    edi
  41ed6e:	and    esp,eax
  41ed70:	dec    ebp
  41ed71:	push   esi
  41ed72:	cwde   
  41ed73:	jne    0x41edcb
  41ed75:	jbe    0x41ed9f
  41ed77:	mov    al,ds:0x918bb713
  41ed7c:	dec    esp
  41ed7d:	aas    
  41ed7e:	fadd   DWORD PTR [ecx+eiz*8+0x1e]
  41ed82:	call   0x1092:0x9b8b737c
  41ed89:	pop    esi
  41ed8a:	dec    DWORD PTR [ebx]
  41ed8c:	cmp    edx,DWORD PTR cs:[ecx+0x17]
  41ed90:	test   DWORD PTR [edx+0x1efae962],esp
  41ed96:	dec    eax
  41ed97:	jl     0x41ed74
  41ed99:	dec    edx
  41ed9a:	ret    0x1ad8
  41ed9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed9e:	cmp    BYTE PTR [ebx+0x5d20dc4b],0x32
  41eda5:	enter  0x632b,0xba
  41eda9:	sub    eax,edx
  41edab:	pop    esp
  41edac:	push   edi
  41edad:	lods   eax,DWORD PTR ds:[esi]
  41edae:	push   ss
  41edaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb0:	clc    
  41edb1:	mov    ds:0x979ebdfb,eax
  41edb6:	jmp    0x41ed6b
  41edb8:	sub    al,0xe0
  41edba:	adc    DWORD PTR [ecx-0x496cb91e],edi
  41edc0:	lds    eax,FWORD PTR [ecx]
  41edc2:	jp     0x41edcf
  41edc4:	jl     0x41edd1
  41edc6:	push   edi
  41edc7:	loop   0x41ee29
  41edc9:	int3   
  41edca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edcb:	jae    0x41ee32
  41edcd:	pop    eax
  41edce:	mov    edx,0x993454c7
  41edd3:	xchg   edx,eax
  41edd4:	pop    ebx
  41edd5:	add    BYTE PTR [ebp-0x718ade8b],0x29
  41eddc:	cmp    DWORD PTR [esi],esp
  41edde:	icebp  
  41eddf:	iret   
  41ede0:	xchg   edi,esi
  41ede2:	sar    BYTE PTR [eax+0x2e],cl
  41ede5:	jg     0x41ee21
  41ede7:	xchg   ebx,eax
  41ede8:	outs   dx,BYTE PTR ds:[esi]
  41ede9:	sub    BYTE PTR [edx+ecx*4+0x4a523aa5],ch
  41edf0:	jge    0x41ee23
  41edf2:	or     bh,cl
  41edf4:	rol    BYTE PTR ds:0xfbad915e,1
  41edfa:	test   eax,0x3310188c
  41edff:	mov    ?,edi
  41ee01:	je     0x41ee61
  41ee03:	mov    ebx,0xdd72da1c
  41ee08:	inc    ebx
  41ee09:	stos   BYTE PTR es:[edi],al
  41ee0a:	inc    DWORD PTR [eax+ebp*4+0x5a453eb6]
  41ee11:	idiv   DWORD PTR [ebp+0x42]
  41ee14:	and    DWORD PTR [esi+0x334f29df],edi
  41ee1a:	push   eax
  41ee1b:	add    cl,bl
  41ee1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee1e:	and    eax,0x34156c5d
  41ee23:	mov    WORD PTR [edi-0x77e53311],ds
  41ee29:	ss out 0xf1,eax
  41ee2c:	dec    esi
  41ee2d:	jmp    0x657840a2
  41ee32:	hlt    
  41ee33:	fldenv [ebx+edi*2-0x216a35bb]
  41ee3a:	icebp  
  41ee3b:	sbb    esi,ebp
  41ee3d:	xor    dh,ah
  41ee3f:	mov    ss,WORD PTR [ecx+0x49ae6fc6]
  41ee45:	out    0xa0,al
  41ee47:	and    DWORD PTR [esi-0x1d],ecx
  41ee4a:	jno    0x41ee9f
  41ee4c:	out    0x85,eax
  41ee4e:	add    esp,eax
  41ee50:	or     DWORD PTR [esp+esi*1-0x2404ab28],ebx
  41ee57:	mov    esi,edi
  41ee59:	outs   dx,BYTE PTR ds:[esi]
  41ee5a:	jne    0x41eebe
  41ee5c:	jmp    0x41eeb9
  41ee5e:	ins    DWORD PTR es:[edi],dx
  41ee5f:	push   ds
  41ee60:	mov    ch,0x7c
  41ee62:	pop    eax
  41ee63:	mov    eax,0x95bdf476
  41ee68:	out    0x4c,al
  41ee6a:	(bad)  
  41ee6b:	ins    BYTE PTR es:[edi],dx
  41ee6c:	mov    edx,0xf6478a64
  41ee71:	pop    ecx
  41ee72:	dec    eax
  41ee73:	clc    
  41ee74:	or     DWORD PTR [ecx],esp
  41ee76:	call   0xc5c4e0c9
  41ee7b:	popf   
  41ee7c:	fs cld 
  41ee7e:	or     esp,esi
  41ee80:	sti    
  41ee81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee82:	cdq    
  41ee83:	fst    DWORD PTR [ecx-0x405173fd]
  41ee89:	or     ebx,DWORD PTR [ebx]
  41ee8b:	jno    0x41ee6f
  41ee8d:	push   esi
  41ee8e:	add    esi,ebx
  41ee90:	xchg   edx,eax
  41ee91:	inc    eax
  41ee92:	sbb    eax,0xe7fdd24d
  41ee97:	pop    ss
  41ee98:	loop   0x41eedf
  41ee9a:	sti    
  41ee9b:	loopne 0x41eeeb
  41ee9d:	xor    eax,0xfe581eda
  41eea2:	pop    edx
  41eea3:	mov    cs,WORD PTR [ebx]
  41eea5:	fdiv   QWORD PTR [ecx-0x6c735f7c]
  41eeab:	stos   DWORD PTR es:[edi],eax
  41eeac:	xchg   esp,eax
  41eead:	sub    DWORD PTR [ebx],ebp
  41eeaf:	pop    esi
  41eeb0:	add    BYTE PTR [ecx+0x4f],bh
  41eeb3:	test   eax,0x67ba5d5c
  41eeb8:	mov    DWORD PTR [esi-0xa37f93a],edx
  41eebe:	into   
  41eebf:	imul   ecx,DWORD PTR [edx+0x0],0x68cd6b1a
  41eec6:	add    bl,dl
  41eec8:	leave  
  41eec9:	pop    eax
  41eeca:	adc    al,0x2a
  41eecc:	mov    gs,WORD PTR [edi*4-0x35e9220c]
  41eed3:	mov    BYTE PTR ds:0x941db254,dl
  41eed9:	jae    0x41ef00
  41eedb:	xchg   BYTE PTR [ebx+0x3f],ah
  41eede:	adc    BYTE PTR [ecx+0x16],0xe8
  41eee2:	popf   
  41eee3:	(bad)  [ebx+0x3fc9d179]
  41eee9:	lea    ebx,[esi-0x4b0d4f94]
  41eeef:	retf   0xf883
  41eef2:	adc    eax,0x8106f236
  41eef7:	push   cs
  41eef8:	pop    es
  41eef9:	into   
  41eefa:	add    BYTE PTR [eax],al
  41eefc:	js     0x41ee87
  41eefe:	hlt    
  41eeff:	mov    al,0xf5
  41ef01:	std    
  41ef02:	jl     0x41eecd
  41ef04:	dec    edi
  41ef05:	pop    ds
  41ef06:	cmp    DWORD PTR [ebx+0x7a],ebp
  41ef09:	sbb    eax,0x6c109221
  41ef0e:	add    DWORD PTR [eax],eax
  41ef10:	xchg   BYTE PTR [edx],al
  41ef12:	add    BYTE PTR [eax],al
  41ef14:	sub    bh,BYTE PTR [edi+0x2907eee6]
  41ef1a:	nop
  41ef1b:	jnp    0x41ef0d
  41ef1d:	leave  
  41ef1e:	dec    esi
  41ef1f:	loope  0x41ef2c
  41ef21:	lods   eax,DWORD PTR ds:[esi]
  41ef22:	or     edx,DWORD PTR [edx]
  41ef24:	jp     0x41ef6e
  41ef26:	and    DWORD PTR [ecx-0x79115c27],ebx
  41ef2c:	inc    ebp
  41ef2d:	dec    edx
  41ef2e:	xlat   BYTE PTR ds:[ebx]
  41ef2f:	rol    eax,0xef
  41ef32:	push   edx
  41ef33:	test   eax,0xdfd740ea
  41ef38:	cmp    al,0xe1
  41ef3a:	and    BYTE PTR [edx+0x1a11cb28],ah
  41ef40:	pop    ds
  41ef41:	clc    
  41ef42:	clc    
  41ef43:	les    ecx,FWORD PTR [edi+0x63]
  41ef46:	pop    edx
  41ef47:	cmp    DWORD PTR [edx],ebp
  41ef49:	rcl    BYTE PTR [edi],0xbd
  41ef4c:	aam    0xca
  41ef4e:	mov    ebx,DWORD PTR [edx-0x393e944f]
  41ef54:	mov    cl,0x28
  41ef56:	lods   eax,DWORD PTR ds:[esi]
  41ef57:	or     al,0x3b
  41ef59:	retf   
  41ef5a:	sub    ebx,DWORD PTR [esi-0x7e280490]
  41ef60:	inc    ecx
  41ef61:	mov    bh,0xee
  41ef63:	add    edi,DWORD PTR fs:[edx]
  41ef66:	and    al,0x2c
  41ef68:	pushf  
  41ef69:	gs stos BYTE PTR es:[edi],al
  41ef6b:	inc    edi
  41ef6c:	cld    
  41ef6d:	imul   eax,DWORD PTR [ebp-0x37c0a769],0xffffffe6
  41ef74:	sub    ecx,ebx
  41ef76:	add    edx,ecx
  41ef78:	push   es
  41ef79:	sbb    dh,BYTE PTR [ecx]
  41ef7b:	aam    0x1b
  41ef7d:	js     0x41efc0
  41ef7f:	sti    
  41ef80:	xchg   ecx,eax
  41ef81:	iret   
  41ef82:	push   ecx
  41ef83:	push   0xf943c354
  41ef88:	int    0x59
  41ef8a:	data16 loop 0x41efa9
  41ef8d:	lar    esp,WORD PTR [esi+0x6c]
  41ef91:	daa    
  41ef92:	scas   al,BYTE PTR es:[edi]
  41ef93:	aam    0xb0
  41ef95:	push   edi
  41ef96:	cmp    esp,eax
  41ef98:	pop    eax
  41ef99:	cld    
  41ef9a:	in     al,0x41
  41ef9c:	(bad)  
  41ef9d:	xor    eax,0xef1136d9
  41efa2:	xlat   BYTE PTR ds:[ebx]
  41efa3:	add    ebp,ebx
  41efa5:	or     cl,0xd3
  41efa8:	int    0xcd
  41efaa:	mov    ch,0xb7
  41efac:	cs jnp 0x41ef7a
  41efaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efb0:	clc    
  41efb1:	test   eax,0xda4f2cfb
  41efb6:	or     dl,BYTE PTR [eax-0x67]
  41efb9:	(bad)  
  41efba:	lods   eax,DWORD PTR ds:[esi]
  41efbb:	pop    ds
  41efbc:	ins    BYTE PTR es:[edi],dx
  41efbd:	xor    ah,bl
  41efbf:	ret    0xa44d
  41efc2:	scas   al,BYTE PTR es:[edi]
  41efc3:	pop    eax
  41efc4:	add    ebx,DWORD PTR [edi+0x74]
  41efc7:	nop
  41efc8:	iret   
  41efc9:	arpl   di,di
  41efcb:	call   0xcdb:0xd35725da
  41efd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efd3:	call   DWORD PTR [ecx]
  41efd5:	inc    eax
  41efd6:	dec    ebp
  41efd7:	or     al,0x2c
  41efd9:	sub    eax,ebp
  41efdb:	jmp    0x41efe3
  41efdd:	mov    dl,0xf1
  41efdf:	push   ds
  41efe0:	mov    esp,0x69dbc5af
  41efe5:	mov    DWORD PTR [esp+eax*4+0x50b2063d],eax
  41efec:	or     al,0x37
  41efee:	jmp    0x6269:0x524135ef
  41eff5:	imul   ecx,DWORD PTR [eax+ebp*1],0xffffffa3
  41eff9:	scas   al,BYTE PTR es:[edi]
  41effa:	cmp    al,0x28
  41effc:	pop    edi
  41effd:	fidivr DWORD PTR [edi]
  41efff:	jg     0x41eff1
  41f001:	sbb    ah,dh
  41f003:	popa   
  41f004:	addr16 test al,0x10
  41f007:	(bad)  
  41f008:	pop    ecx
  41f009:	lods   eax,DWORD PTR ds:[esi]
  41f00a:	mov    edx,0xc1f43265
  41f00f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f010:	sahf   
  41f011:	fstp   QWORD PTR [ebx-0x3f]
  41f014:	jmp    0xf2fa:0x56ba0c2f
  41f01b:	sbb    esi,esi
  41f01d:	lea    esi,[ecx+ebp*4+0x39]
  41f021:	call   0x1a96:0x53f4a67c
  41f028:	dec    esp
  41f029:	je     0x41f09f
  41f02b:	ins    DWORD PTR es:[edi],dx
  41f02c:	add    BYTE PTR [edi-0x2c],al
  41f02f:	lods   eax,DWORD PTR ds:[esi]
  41f030:	repz pushf 
  41f032:	scas   eax,DWORD PTR es:[edi]
  41f033:	(bad)  [edx-0x2]
  41f036:	jle    0x41f07e
  41f038:	rcl    BYTE PTR [edx-0x62a46b92],cl
  41f03e:	cmp    dh,ch
  41f040:	test   al,0xb1
  41f042:	inc    ebp
  41f043:	adc    edi,eax
  41f045:	out    dx,eax
  41f046:	aam    0xa8
  41f048:	retf   
  41f049:	or     cl,BYTE PTR [edi+0x3111255]
  41f04f:	mov    cl,0x17
  41f051:	inc    ecx
  41f052:	pop    ds
  41f053:	sbb    ch,BYTE PTR [esi-0x542d929a]
  41f059:	call   0xae2a:0x9f960b4e
  41f060:	jo     0x41f022
  41f062:	mov    eax,ds:0x38171763
  41f067:	jl     0x41f01d
  41f069:	cwde   
  41f06a:	inc    esi
  41f06b:	int    0xee
  41f06d:	xchg   DWORD PTR [ebp-0x59],ecx
  41f070:	or     eax,edi
  41f072:	stc    
  41f073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f074:	out    0xd8,eax
  41f076:	sbb    bh,BYTE PTR [esi-0x10]
  41f079:	mov    al,BYTE PTR [edx-0x6d]
  41f07c:	xor    al,0xb
  41f07e:	rol    DWORD PTR [esi-0x4e0d35b2],cl
  41f084:	mov    dh,0xae
  41f086:	cs mov dl,0x60
  41f089:	hlt    
  41f08a:	int    0x63
  41f08c:	frstor [edx-0x5]
  41f08f:	mov    BYTE PTR [esi+0x75],0x51
  41f093:	inc    esi
  41f094:	xor    ch,cl
  41f096:	sub    DWORD PTR [ebp+0x2e879ee6],edx
  41f09c:	push   ss
  41f09d:	sti    
  41f09e:	inc    esi
  41f09f:	pop    es
  41f0a0:	(bad)  
  41f0a2:	mov    cl,0xe2
  41f0a5:	cmp    eax,0xfac9b3b2
  41f0aa:	mov    bh,0x95
  41f0ac:	pop    ebx
  41f0ad:	mov    cl,0x4
  41f0af:	ds inc edi
  41f0b1:	and    al,0xf2
  41f0b3:	rol    BYTE PTR [eax+0x206bd171],0x79
  41f0ba:	xlat   BYTE PTR ds:[ebx]
  41f0bb:	nop
  41f0bc:	in     al,dx
  41f0bd:	jg     0x41f05c
  41f0bf:	mov    dh,0x90
  41f0c1:	stos   DWORD PTR es:[edi],eax
  41f0c2:	loop   0x41f04d
  41f0c4:	add    eax,DWORD PTR [edi-0x48]
  41f0c7:	iret   
  41f0c8:	pop    ebp
  41f0c9:	dec    eax
  41f0ca:	or     al,0x9c
  41f0cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0cd:	leave  
  41f0ce:	aas    
  41f0cf:	dec    edi
  41f0d0:	mov    es,ebx
  41f0d2:	pop    eax
  41f0d3:	sbb    al,0xf6
  41f0d5:	out    dx,al
  41f0d6:	pusha  
  41f0d7:	aaa    
  41f0d8:	jl     0x41f109
  41f0da:	pop    eax
  41f0db:	xor    ebp,eax
  41f0dd:	and    eax,DWORD PTR [edx-0x24]
  41f0e0:	xor    al,0x46
  41f0e2:	loopne 0x41f104
  41f0e4:	test   DWORD PTR [esi+0x6365446],edx
  41f0ea:	adc    eax,0xe18063ab
  41f0ef:	sub    ch,0x3f
  41f0f2:	push   esi
  41f0f3:	test   BYTE PTR [ebx+0x309fc59],cl
  41f0f9:	add    DWORD PTR [ecx],0xa
  41f0fc:	push   ds
  41f0fd:	int    0x3f
  41f0ff:	inc    ecx
  41f100:	rol    esp,1
  41f102:	mov    ds:0x8c32b9ee,eax
  41f107:	stos   BYTE PTR es:[edi],al
  41f108:	(bad)  
  41f109:	adc    BYTE PTR [ecx+0x11],0x74
  41f10d:	shr    BYTE PTR [ebx-0x4f],cl
  41f110:	outs   dx,DWORD PTR ds:[esi]
  41f111:	pushf  
  41f112:	sbb    BYTE PTR [eax-0x382f26ff],dl
  41f118:	xchg   esi,eax
  41f119:	and    DWORD PTR [esi-0x64eabb4d],eax
  41f11f:	popf   
  41f120:	add    al,0xc
  41f122:	inc    edx
  41f123:	out    dx,al
  41f124:	dec    ecx
  41f125:	pop    esi
  41f126:	jnp    0x41f131
  41f128:	mov    dh,0xfa
  41f12a:	add    ah,BYTE PTR [edi]
  41f12c:	push   ds
  41f12d:	cs add BYTE PTR es:[ebp+ecx*2-0x1e],0xc5
  41f134:	arpl   sp,ax
  41f136:	ins    DWORD PTR es:[edi],dx
  41f137:	adc    ebp,DWORD PTR [ebx-0x3d]
  41f13a:	pop    es
  41f13b:	xlat   BYTE PTR ds:[ebx]
  41f13c:	sbb    BYTE PTR [eax+0x2466d2d7],bh
  41f142:	push   cs
  41f143:	push   ebp
  41f144:	lahf   
  41f145:	fmul   DWORD PTR [esi]
  41f147:	pop    ds
  41f148:	adc    BYTE PTR [ecx],cl
  41f14a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f14b:	sub    eax,DWORD PTR [ebp+0x5c28f2a8]
  41f151:	and    ch,bh
  41f153:	scas   eax,DWORD PTR es:[edi]
  41f154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f155:	aaa    
  41f156:	xor    eax,DWORD PTR [edx-0x37424d3c]
  41f15c:	add    eax,0xaefaf94a
  41f161:	push   ds
  41f162:	or     al,0xf7
  41f164:	ret    0x3930
  41f167:	push   esp
  41f168:	jge    0x41f178
  41f16a:	mov    al,0x82
  41f16c:	mov    DWORD PTR [eax-0x17],ebp
  41f16f:	and    esi,ebx
  41f171:	jnp    0x41f192
  41f173:	leave  
  41f174:	jno    0x41f1c4
  41f176:	jb     0x41f1b3
  41f178:	jnp    0x41f1d3
  41f17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f17b:	fs cld 
  41f17d:	mov    al,0x34
  41f17f:	(bad)  
  41f181:	mov    dl,0xc6
  41f183:	sub    edi,DWORD PTR [esi+0xe]
  41f186:	sbb    esp,DWORD PTR [esi+ecx*2-0x55edf57a]
  41f18d:	and    DWORD PTR [ecx-0x10cce211],0xffffff9c
  41f194:	xor    BYTE PTR [esi],al
  41f196:	add    ch,BYTE PTR [edi+eiz*4+0x5c0000db]
  41f19d:	mov    dh,BYTE PTR [edi-0x23800895]
  41f1a3:	mov    edi,0xd9de0759
  41f1a8:	mov    al,0x3
  41f1aa:	dec    ebp
  41f1ab:	ins    DWORD PTR es:[edi],dx
  41f1ac:	xchg   esi,eax
  41f1ad:	outs   dx,BYTE PTR ds:[esi]
  41f1ae:	add    DWORD PTR [eax],eax
  41f1b0:	xchg   BYTE PTR [edx],al
  41f1b2:	add    BYTE PTR [eax],al
  41f1b4:	add    al,0x2d
  41f1b6:	ins    BYTE PTR es:[edi],dx
  41f1b7:	xlat   BYTE PTR ds:[ebx]
  41f1b8:	test   eax,0xaa34d99e
  41f1bd:	gs push 0xb6ffcaa6
  41f1c3:	pop    es
  41f1c4:	shr    BYTE PTR [ebp-0x7c],1
  41f1c7:	(bad)  
  41f1c8:	fist   WORD PTR [edx+eiz*2-0x5a4c58a7]
  41f1cf:	sub    eax,ecx
  41f1d1:	stc    
  41f1d2:	push   ss
  41f1d3:	sbb    eax,0xa0227937
  41f1d8:	sbb    edx,edi
  41f1da:	aas    
  41f1db:	push   ss
  41f1dc:	xchg   ebx,eax
  41f1dd:	dec    ecx
  41f1de:	dec    ecx
  41f1df:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41f1e1:	sbb    BYTE PTR [esi-0x37],0x2f
  41f1e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1e6:	fsub   QWORD PTR [ebx+eax*1]
  41f1e9:	icebp  
  41f1ea:	mov    al,0xfe
  41f1ec:	fs mov bl,0x0
  41f1ef:	dec    edi
  41f1f0:	jge    0x41f21b
  41f1f2:	(bad)  
  41f1f3:	pop    esi
  41f1f4:	iret   
  41f1f5:	call   0x347b:0xcb8da729
  41f1fc:	or     eax,0xf07693bf
  41f201:	pushf  
  41f202:	stos   DWORD PTR es:[edi],eax
  41f203:	xchg   ebx,eax
  41f204:	xor    al,0x0
  41f206:	and    eax,0x630600eb
  41f20b:	and    bh,0x31
  41f20e:	in     al,dx
  41f20f:	mov    ebx,0x52a6e0e2
  41f214:	xchg   ecx,eax
  41f215:	sub    al,0x7
  41f217:	or     eax,0x423ee40
  41f21c:	cmp    eax,ebp
  41f21e:	or     esp,DWORD PTR [edx]
  41f220:	adc    DWORD PTR [eax],esi
  41f222:	add    DWORD PTR [edi-0x204d39dc],ebx
  41f228:	imul   edx,DWORD PTR [ebp+0x7],0xffffff8a
  41f22c:	jge    0x41f247
  41f22e:	dec    edi
  41f22f:	loopne 0x41f264
  41f231:	cli    
  41f232:	enter  0x3479,0xbf
  41f236:	(bad)  
  41f237:	mov    esi,ebx
  41f239:	xor    BYTE PTR [ebp-0x6],cl
  41f23c:	cld    
  41f23d:	imul   ebx,DWORD PTR [esi],0x237c5d1
  41f243:	dec    ecx
  41f244:	data16 mov dh,0x12
  41f247:	mov    DWORD PTR [esi],ebp
  41f249:	scas   eax,DWORD PTR es:[edi]
  41f24a:	repz fs enter 0x61a2,0x55
  41f250:	aaa    
  41f251:	or     BYTE PTR [ebp+0x7b580a5a],bl
  41f257:	call   FWORD PTR [ebx-0x267acf]
  41f25d:	sbb    dl,BYTE PTR [ebp+0x6c4797c5]
  41f263:	pop    edx
  41f264:	cwde   
  41f265:	fimul  WORD PTR [esi-0x3a422b0f]
  41f26b:	inc    ecx
  41f26c:	dec    esi
  41f26d:	or     al,0x94
  41f26f:	dec    ecx
  41f270:	push   0x20
  41f272:	test   DWORD PTR [edx+0x45f03a04],esi
  41f278:	test   dh,ah
  41f27a:	pop    ss
  41f27b:	inc    ebp
  41f27c:	lods   al,BYTE PTR ds:[esi]
  41f27d:	test   al,ch
  41f27f:	ins    DWORD PTR es:[edi],dx
  41f280:	push   esi
  41f281:	imul   edx,edx,0xd24ee98e
  41f287:	cld    
  41f288:	es nop
  41f28a:	sub    al,0x2d
  41f28c:	jno    0x41f244
  41f28e:	mov    cs,esp
  41f290:	shl    DWORD PTR [eax+0x41],0x47
  41f294:	popa   
  41f295:	or     bh,ah
  41f297:	(bad)  
  41f298:	cli    
  41f299:	inc    ebp
  41f29a:	adc    esp,DWORD PTR [eax+0x264d80a4]
  41f2a0:	or     edi,DWORD PTR [ecx]
  41f2a2:	sub    ebp,DWORD PTR [edx]
  41f2a4:	test   eax,0xd1063848
  41f2a9:	cmp    ebp,esi
  41f2ab:	ret    0x651
  41f2ae:	out    dx,eax
  41f2af:	add    eax,0x445767a9
  41f2b4:	jbe    0x41f311
  41f2b6:	cmc    
  41f2b7:	sub    esi,DWORD PTR [edx-0x48591815]
  41f2bd:	inc    esi
  41f2be:	bound  eax,QWORD PTR [ebx-0x8]
  41f2c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2c2:	popa   
  41f2c3:	push   ebx
  41f2c4:	aas    
  41f2c5:	in     eax,dx
  41f2c6:	popa   
  41f2c7:	dec    eax
  41f2c8:	aas    
  41f2c9:	lahf   
  41f2ca:	mov    dh,0x81
  41f2cc:	(bad)  
  41f2cd:	jecxz  0x41f28b
  41f2cf:	inc    ecx
  41f2d0:	mov    ebx,edi
  41f2d2:	fsub   QWORD PTR [ebx+eiz*8]
  41f2d5:	in     al,0xde
  41f2d7:	push   ecx
  41f2d8:	mov    bh,0x48
  41f2da:	and    BYTE PTR [eax],cl
  41f2dc:	xor    DWORD PTR [ecx],esi
  41f2de:	cmp    DWORD PTR [eax],ebx
  41f2e0:	jns    0x41f26c
  41f2e2:	aad    0x20
  41f2e4:	sbb    BYTE PTR [esi*1-0x2c27bfba],ch
  41f2eb:	mov    esi,0xd769222b
  41f2f0:	and    BYTE PTR [esi+0x3c],0x3b
  41f2f4:	inc    edx
  41f2f5:	add    eax,0x6c4f68a2
  41f2fa:	fldenv [eax+0xb1b603a]
  41f300:	cmp    DWORD PTR [esi+0x65753cd3],edx
  41f306:	sti    
  41f307:	lea    ecx,[edx-0x34]
  41f30a:	xchg   ebx,eax
  41f30b:	icebp  
  41f30c:	add    al,0x92
  41f30e:	out    dx,al
  41f30f:	aad    0x8
  41f311:	jne    0x41f361
  41f313:	fsub   QWORD PTR [edi+0x1d]
  41f316:	aas    
  41f317:	jmp    0xa2f1:0x5b91a089
  41f31e:	out    dx,eax
  41f31f:	les    edx,FWORD PTR [eax-0x1f]
  41f322:	add    BYTE PTR [eax],0xfd
  41f325:	test   eax,0x9966151f
  41f32a:	bound  ebx,QWORD PTR [esi+ebp*2-0xe]
  41f32e:	xchg   ebp,eax
  41f32f:	push   esp
  41f330:	mov    BYTE PTR [ebx],bl
  41f332:	loop   0x41f31a
  41f334:	xchg   edx,eax
  41f335:	aas    
  41f336:	push   0xffffffc0
  41f338:	sub    eax,0xdbd762c3
  41f33d:	sbb    eax,0x49745a56
  41f342:	mov    eax,0xd094ffe1
  41f347:	es mov bh,0x49
  41f34a:	scas   al,BYTE PTR es:[edi]
  41f34b:	inc    esi
  41f34c:	jl     0x41f2f3
  41f34e:	scas   eax,DWORD PTR es:[edi]
  41f34f:	cmp    dh,BYTE PTR [eax+0x31]
  41f352:	push   edi
  41f353:	pushf  
  41f354:	adc    eax,0x7c9d9423
  41f359:	nop
  41f35a:	fsub   QWORD PTR [eax+0x7c]
  41f35d:	cmp    DWORD PTR [edx],ebp
  41f35f:	xchg   edi,eax
  41f360:	test   DWORD PTR [edx],eax
  41f362:	pop    eax
  41f363:	jge    0x41f3e0
  41f365:	ret    
  41f366:	cmp    esp,ebp
  41f368:	inc    ebx
  41f369:	and    DWORD PTR [edx+0x35964cbc],eax
  41f36f:	xor    ecx,DWORD PTR [ebx+0x7d]
  41f372:	mov    ebp,ecx
  41f374:	xor    al,0x6b
  41f376:	fucomi st,st(7)
  41f378:	clc    
  41f379:	lods   eax,DWORD PTR ds:[esi]
  41f37a:	inc    ebp
  41f37b:	push   ecx
  41f37c:	pop    es
  41f37d:	xchg   esp,eax
  41f37e:	and    edi,ebp
  41f380:	mov    al,ds:0x6e399211
  41f385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f386:	cmp    DWORD PTR ss:[eax-0x7e4ea1a9],ecx
  41f38d:	inc    ebp
  41f38e:	inc    eax
  41f38f:	or     al,0xe8
  41f391:	mov    ebp,DWORD PTR [edx+ecx*8]
  41f394:	cmc    
  41f395:	mov    eax,ds:0xa28ba77d
  41f39a:	pop    edx
  41f39b:	pop    ss
  41f39c:	mov    esp,0xa3937bb6
  41f3a1:	inc    edi
  41f3a2:	fwait
  41f3a3:	leave  
  41f3a4:	mov    eax,0x9c615dd
  41f3a9:	adc    BYTE PTR [ebx+0x32],0x11
  41f3ad:	push   eax
  41f3ae:	dec    edx
  41f3af:	scas   al,BYTE PTR es:[edi]
  41f3b0:	sbb    BYTE PTR [esi+0x79],cl
  41f3b3:	xchg   edx,eax
  41f3b4:	rcl    BYTE PTR [ebp-0x66],1
  41f3b7:	jle    0x41f400
  41f3b9:	(bad)  
  41f3bb:	ret    0x767d
  41f3be:	dec    ebp
  41f3bf:	popa   
  41f3c0:	dec    edi
  41f3c1:	iret   
  41f3c2:	pop    edx
  41f3c3:	or     eax,0xaa21fe0c
  41f3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3c9:	xchg   di,ax
  41f3cb:	cmp    eax,0xd0ab3946
  41f3d0:	out    0x9b,al
  41f3d2:	jae    0x41f445
  41f3d4:	mov    al,ds:0x85854bd3
  41f3d9:	mul    ebp
  41f3db:	inc    ebx
  41f3dc:	push   ebp
  41f3dd:	ret    0xe8f0
  41f3e0:	or     DWORD PTR [ebx],ebx
  41f3e2:	(bad)  
  41f3e3:	mov    ds:0x2a117834,eax
  41f3e8:	iret   
  41f3e9:	into   
  41f3ea:	pop    esp
  41f3eb:	xchg   edx,eax
  41f3ec:	cmp    BYTE PTR [eax+0x44],cl
  41f3ef:	sahf   
  41f3f0:	imul   DWORD PTR [edx+0x436360be]
  41f3f6:	es dec esp
  41f3f8:	push   edx
  41f3f9:	bnd jae 0x41f3df
  41f3fc:	mov    edi,0x225d80f6
  41f401:	mov    edi,0x69e4a222
  41f406:	add    DWORD PTR [edi-0x1],edx
  41f409:	inc    ebp
  41f40a:	enter  0xda04,0x92
  41f40e:	xchg   ebp,eax
  41f40f:	aas    
  41f410:	push   edx
  41f411:	(bad)  
  41f413:	adc    al,0x4
  41f415:	lock add al,0x6a
  41f418:	scas   al,BYTE PTR es:[edi]
  41f419:	daa    
  41f41a:	fdivp  st(6),st
  41f41c:	push   es
  41f41d:	test   eax,0x9c9b932c
  41f422:	and    ch,BYTE PTR [edi+edi*1-0x6bc4d2af]
  41f429:	loopne 0x41f49a
  41f42b:	aam    0xe8
  41f42d:	rcl    DWORD PTR [eax],1
  41f42f:	fld    st(1)
  41f431:	scas   al,BYTE PTR es:[edi]
  41f432:	stc    
  41f433:	push   esi
  41f434:	lods   al,BYTE PTR ds:[esi]
  41f435:	sar    cl,cl
  41f437:	xor    DWORD PTR [edx],ebp
  41f439:	rol    DWORD PTR [eax],cl
  41f43b:	add    BYTE PTR [edi-0x402578e6],ah
  41f441:	(bad)  
  41f443:	jg     0x41f3f1
  41f445:	pop    ss
  41f446:	aad    0x14
  41f448:	fild   WORD PTR [ecx+0x711c38b4]
  41f44e:	add    DWORD PTR [eax],eax
  41f450:	xchg   BYTE PTR [edx],al
  41f452:	add    BYTE PTR [eax],al
  41f454:	mov    dh,0xfd
  41f456:	(bad)  
  41f457:	outs   dx,DWORD PTR ds:[si]
  41f459:	cmp    esi,DWORD PTR [eax+ebx*4+0x53]
  41f45d:	lds    ebp,FWORD PTR [ebx]
  41f45f:	mov    bh,0x37
  41f461:	(bad)  
  41f462:	cmp    DWORD PTR [edi+0x2614f0b8],edi
  41f468:	test   esp,eax
  41f46a:	scas   eax,DWORD PTR es:[edi]
  41f46b:	(bad)  
  41f46d:	mov    BYTE PTR [esi+0x6d],cl
  41f470:	cmp    BYTE PTR [esi+edx*1+0x69542949],0xe8
  41f478:	jg     0x41f4b8
  41f47a:	ins    BYTE PTR es:[edi],dx
  41f47b:	das    
  41f47c:	push   eax
  41f47d:	(bad)  
  41f47e:	aaa    
  41f47f:	test   BYTE PTR [ebx+0x4e],dh
  41f482:	cs pop edx
  41f484:	xor    al,0x15
  41f486:	je     0x41f482
  41f488:	xor    BYTE PTR [ebx+ecx*8],dh
  41f48b:	dec    ecx
  41f48c:	rol    edx,1
  41f48e:	aaa    
  41f48f:	sbb    al,0x6a
  41f491:	push   0x7e
  41f493:	out    0x58,eax
  41f495:	mov    dh,dl
  41f497:	test   eax,0x6f34d696
  41f49c:	(bad)  
  41f49d:	pop    edi
  41f49e:	sbb    BYTE PTR [esi-0x36e9d38e],0x4c
  41f4a5:	pop    edi
  41f4a6:	es addr16 das 
  41f4a9:	test   eax,0x5c4eb226
  41f4ae:	jae    0x41f43c
  41f4b0:	jae    0x41f516
  41f4b2:	fstp   TBYTE PTR [ecx-0x31676369]
  41f4b8:	rcl    DWORD PTR [ebp-0x21],cl
  41f4bb:	pop    edi
  41f4bc:	aas    
  41f4bd:	stc    
  41f4be:	push   esp
  41f4bf:	fs repz aas 
  41f4c2:	enter  0x32a9,0xf3
  41f4c6:	lods   al,BYTE PTR ds:[esi]
  41f4c7:	stos   BYTE PTR es:[edi],al
  41f4c8:	xor    DWORD PTR [esi],esi
  41f4ca:	cmp    edi,DWORD PTR [esi-0x21fd0620]
  41f4d0:	into   
  41f4d1:	and    edi,ebx
  41f4d3:	in     al,dx
  41f4d4:	out    0x76,eax
  41f4d6:	cld    
  41f4d7:	xlat   BYTE PTR ds:[ebx]
  41f4d8:	ret    
  41f4d9:	add    cl,bl
  41f4db:	daa    
  41f4dc:	mov    al,0x6b
  41f4de:	test   ebx,esp
  41f4e0:	pop    esp
  41f4e1:	clc    
  41f4e2:	jno    0x41f51c
  41f4e4:	(bad)  
  41f4e5:	sbb    eax,0x5c00edda
  41f4ea:	jbe    0x41f518
  41f4ec:	adc    eax,0x2a550526
  41f4f1:	mov    eax,ds:0x4d34b3ef
  41f4f6:	repz aam 0xf6
  41f4f9:	pop    ebp
  41f4fa:	jb     0x41f548
  41f4fc:	pop    edx
  41f4fd:	push   ss
  41f4fe:	std    
  41f4ff:	(bad)  
  41f501:	pop    esi
  41f502:	ret    0x7696
  41f505:	inc    esp
  41f506:	rcl    bh,cl
  41f508:	mov    ecx,0x85749f73
  41f50d:	dec    edx
  41f50e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f50f:	je     0x41f57d
  41f511:	jmp    0x92f05b3a
  41f516:	inc    edx
  41f517:	add    BYTE PTR [edx+0x3cf4b1b6],dh
  41f51d:	imul   ebx,eax,0x72
  41f520:	mov    dl,BYTE PTR [ebx-0x68a148bc]
  41f526:	xchg   esp,eax
  41f527:	mov    esi,ecx
  41f529:	jns    0x41f57d
  41f52b:	inc    esp
  41f52c:	and    esp,DWORD PTR ds:0xb6676e5c
  41f532:	pop    ss
  41f533:	(bad)  
  41f534:	cli    
  41f535:	inc    ecx
  41f536:	sbb    al,0x24
  41f539:	cmp    DWORD PTR [ebx],ebx
  41f53b:	adc    DWORD PTR [ebp+esi*8+0x54cbdc3b],ecx
  41f542:	dec    edi
  41f543:	add    al,0xc4
  41f545:	pop    edx
  41f546:	mov    edx,0x218f3b63
  41f54b:	push   es
  41f54c:	add    ecx,DWORD PTR [edx-0x29b37f83]
  41f552:	push   ebp
  41f553:	lahf   
  41f554:	xchg   edx,eax
  41f555:	pop    edx
  41f556:	sub    BYTE PTR [ebp+0x71bc4bf6],bh
  41f55c:	pop    esp
  41f55d:	fwait
  41f55e:	xchg   esi,eax
  41f55f:	push   0x5f
  41f561:	popf   
  41f562:	pop    ebp
  41f563:	(bad)  
  41f564:	sbb    dl,al
  41f566:	int    0xcd
  41f568:	ja     0x41f568
  41f56a:	mov    bh,0xfb
  41f56c:	and    dl,al
  41f56e:	jmp    0xac0c:0xfe4c3003
  41f575:	nop
  41f576:	mov    ecx,DWORD PTR [ebp+0x281168a7]
  41f57c:	std    
  41f57d:	xor    DWORD PTR [eax-0x7],ebp
  41f580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f581:	push   ecx
  41f582:	mov    esp,0xd6e76584
  41f587:	cs (bad) 
  41f589:	gs ret 0x1d3e
  41f58d:	nop
  41f58e:	ins    BYTE PTR es:[edi],dx
  41f58f:	jbe    0x41f5e6
  41f591:	das    
  41f592:	xchg   esi,eax
  41f593:	jmp    0xc93f9d6
  41f598:	addr16 jnp 0x41f5f2
  41f59b:	outs   dx,DWORD PTR ds:[esi]
  41f59c:	or     cl,BYTE PTR [esi-0x3a5a1cf]
  41f5a2:	mov    al,0xac
  41f5a4:	stos   DWORD PTR es:[edi],eax
  41f5a5:	sbb    eax,0x39e122b
  41f5aa:	xor    edx,DWORD PTR [edx]
  41f5ac:	shl    dl,1
  41f5ae:	sub    eax,0xee422aeb
  41f5b3:	cmc    
  41f5b4:	mov    eax,ds:0xf67c349d
  41f5ba:	fcmove st,st(1)
  41f5bc:	scas   al,BYTE PTR es:[edi]
  41f5bd:	push   ebx
  41f5be:	or     al,0xc9
  41f5c0:	inc    ecx
  41f5c1:	dec    DWORD PTR [ebx-0x8]
  41f5c4:	cmp    ebx,ebx
  41f5c6:	rol    DWORD PTR [ebx+ebp*2],0x3c
  41f5ca:	jns    0x41f556
  41f5cc:	xor    al,0x1c
  41f5ce:	(bad)  
  41f5cf:	pop    ebp
  41f5d0:	adc    al,0xce
  41f5d2:	push   esp
  41f5d3:	xchg   ch,cl
  41f5d5:	dec    eax
  41f5d6:	jae    0x41f5bc
  41f5d8:	xchg   ebp,eax
  41f5d9:	arpl   WORD PTR [esi-0x5e6bff85],dx
  41f5df:	cmp    esp,DWORD PTR [ebx-0x39]
  41f5e2:	cdq    
  41f5e3:	out    0x1f,eax
  41f5e5:	cmp    eax,0xf9ecfca8
  41f5ea:	xchg   ebp,eax
  41f5eb:	sahf   
  41f5ec:	pushf  
  41f5ed:	inc    edi
  41f5ee:	or     al,0x34
  41f5f0:	arpl   di,si
  41f5f2:	jns    0x41f663
  41f5f4:	and    edi,DWORD PTR [ebx-0x3052be67]
  41f5fa:	stc    
  41f5fb:	daa    
  41f5fc:	jmp    0xae7d74e9
  41f601:	test   eax,0x2034f151
  41f606:	add    DWORD PTR [ebp-0x50e02e14],eax
  41f60c:	push   ebp
  41f60d:	in     eax,dx
  41f60e:	test   BYTE PTR [edx],ah
  41f610:	fld    DWORD PTR [ebp+ebx*2+0x7c22b418]
  41f617:	(bad)  
  41f618:	push   ecx
  41f619:	rcr    esp,0x55
  41f61c:	jnp    0x41f640
  41f61e:	pop    ebp
  41f61f:	cmp    eax,0xf9415237
  41f624:	xchg   ebx,eax
  41f625:	lods   al,BYTE PTR ds:[esi]
  41f626:	imul   ebp,DWORD PTR [edx],0x51
  41f629:	xor    al,0xa2
  41f62b:	or     BYTE PTR [esi-0x54],0xfe
  41f62f:	ret    0x742
  41f632:	dec    esi
  41f633:	add    eax,0xb12bd76
  41f638:	ds out 0x62,al
  41f63b:	push   ecx
  41f63c:	or     ebp,DWORD PTR [esp+ecx*1-0x617a3faa]
  41f643:	jb     0x41f691
  41f645:	and    al,BYTE PTR [edx+0x46]
  41f648:	add    al,0xd0
  41f64a:	out    0xcd,eax
  41f64c:	and    DWORD PTR [eax],esi
  41f64e:	(bad)  
  41f64f:	js     0x41f6ab
  41f651:	push   ebx
  41f652:	jmp    0xe52b:0x5a8293c0
  41f659:	or     edi,DWORD PTR [edx]
  41f65b:	out    0x8a,eax
  41f65d:	adc    edx,DWORD PTR [eax+0x7]
  41f660:	ret    0xfb04
  41f663:	loopne 0x41f682
  41f665:	push   eax
  41f666:	mov    esi,0x34adbbe4
  41f66b:	shr    edx,cl
  41f66d:	xor    DWORD PTR [ebx-0x2b],0x51c16911
  41f674:	xor    al,0x40
  41f676:	mov    ds:0x97497381,eax
  41f67b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f67c:	mov    edi,DWORD PTR [esi]
  41f67e:	pop    ecx
  41f67f:	out    dx,al
  41f680:	jle    0x41f637
  41f682:	imul   esp,ecx,0x3a9f4562
  41f688:	dec    ebp
  41f689:	and    esi,DWORD PTR [ecx+0x45ea7174]
  41f68f:	inc    ebp
  41f690:	mov    dl,0xf1
  41f692:	shr    DWORD PTR [ebx+0x2fdf02c5],0x93
  41f699:	sbb    dl,bl
  41f69b:	or     DWORD PTR [ecx],eax
  41f69d:	pop    esi
  41f69e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41f6a0:	fimul  WORD PTR [edx+0x61]
  41f6a3:	fwait
  41f6a4:	jp     0x41f6d1
  41f6a6:	mov    ah,0x19
  41f6a8:	jp     0x41f6b7
  41f6aa:	dec    edi
  41f6ab:	cmp    ch,BYTE PTR [esi]
  41f6ad:	and    ah,BYTE PTR [esi-0x15188115]
  41f6b3:	cmp    ebx,DWORD PTR [ebp-0x41]
  41f6b6:	xlat   BYTE PTR ds:[ebx]
  41f6b7:	ja     0x41f6d9
  41f6b9:	test   al,0xd0
  41f6bb:	sub    al,0x89
  41f6bd:	test   bl,dh
  41f6bf:	sub    al,0x59
  41f6c1:	fwait
  41f6c2:	xor    ebx,DWORD PTR ss:0xe769d613
  41f6c9:	scas   al,BYTE PTR es:[edi]
  41f6ca:	stc    
  41f6cb:	addr16 push eax
  41f6cd:	mov    al,0xf7
  41f6cf:	and    dh,al
  41f6d1:	sbb    bl,BYTE PTR [edi]
  41f6d3:	or     esp,esi
  41f6d5:	in     al,dx
  41f6d6:	test   eax,0x2c832a
  41f6db:	add    BYTE PTR [ebp-0x15b01f1],bl
  41f6e1:	cmc    
  41f6e2:	fistp  QWORD PTR [edi]
  41f6e4:	stc    
  41f6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e6:	mov    bl,0x6e
  41f6e8:	js     0x41f703
  41f6ea:	push   esp
  41f6eb:	mov    ch,0xa2
  41f6ed:	jae    0x41f6f0
  41f6ef:	add    BYTE PTR [esi-0x56fffffe],al
  41f6f5:	mov    ah,0xda
  41f6f7:	sbb    bl,BYTE PTR [esi]
  41f6f9:	out    0x91,eax
  41f6fb:	retf   
  41f6fc:	cmp    bl,BYTE PTR [ecx+0x4a7b1911]
  41f702:	not    DWORD PTR [edx+ebx*4+0x39]
  41f706:	add    DWORD PTR [edi+0x6a22630a],ebx
  41f70c:	in     al,0xfc
  41f70e:	lds    ebx,FWORD PTR [ebp+ecx*4+0x37956e37]
  41f715:	inc    eax
  41f716:	inc    ebx
  41f717:	int    0x8c
  41f719:	pop    ecx
  41f71a:	push   ecx
  41f71b:	inc    ebp
  41f71c:	xchg   ebx,eax
  41f71d:	cs loop 0x41f74f
  41f720:	lods   eax,DWORD PTR ds:[esi]
  41f721:	xchg   edx,eax
  41f722:	push   ds
  41f723:	popa   
  41f724:	imul   ecx,eax,0x81572933
  41f72a:	je     0x41f75d
  41f72c:	mul    DWORD PTR [eax-0x77]
  41f72f:	push   cs
  41f730:	adc    eax,0xf0a52408
  41f735:	pop    ebp
  41f736:	(bad)  
  41f737:	retf   0xc99c
  41f73a:	adc    eax,0xcf146a33
  41f73f:	jno    0x41f6ff
  41f741:	and    esp,esi
  41f743:	cs pop ecx
  41f745:	repnz in al,dx
  41f747:	fwait
  41f748:	loop   0x41f790
  41f74a:	lods   al,BYTE PTR ds:[esi]
  41f74b:	or     al,0x3a
  41f74d:	and    DWORD PTR [edi-0x61],esp
  41f750:	inc    eax
  41f751:	in     eax,dx
  41f752:	ret    0xfa91
  41f755:	ds pop edi
  41f757:	sti    
  41f758:	add    ch,dl
  41f75a:	xlat   BYTE PTR ds:[ebx]
  41f75b:	xor    al,0xa
  41f75d:	fucomp st(3)
  41f75f:	leave  
  41f760:	or     BYTE PTR [ebx-0x33b0c4f0],ah
  41f766:	call   0xbc458301
  41f76b:	inc    eax
  41f76c:	pop    esp
  41f76d:	ss out dx,al
  41f76f:	setl   dh
  41f772:	push   cs
  41f773:	and    eax,0x8f5e54e9
  41f778:	sub    BYTE PTR [ecx+0x4b],bl
  41f77b:	dec    esp
  41f77c:	mov    esp,0x710bd1a0
  41f781:	xchg   edi,eax
  41f782:	xchg   edx,eax
  41f783:	mov    ch,0xf1
  41f785:	fistp  DWORD PTR [ebx-0x1e1632d9]
  41f78b:	push   ecx
  41f78c:	xchg   ecx,eax
  41f78d:	jl     0x41f71a
  41f78f:	add    DWORD PTR [edi],esi
  41f791:	mov    dl,0x77
  41f793:	mov    BYTE PTR [eax+0x5289d1c5],dh
  41f799:	and    eax,0x1ba18f4a
  41f79e:	pop    ebp
  41f79f:	mov    dh,0x3f
  41f7a1:	sbb    DWORD PTR [esp+eax*1-0xb],0xf89522ce
  41f7a9:	lods   eax,DWORD PTR ds:[esi]
  41f7aa:	cli    
  41f7ab:	fisttp DWORD PTR fs:[esp+eax*1]
  41f7af:	jp     0x41f762
  41f7b1:	or     al,0x91
  41f7b3:	push   eax
  41f7b4:	cmp    bl,cl
  41f7b6:	div    BYTE PTR [ebx+0x6c]
  41f7b9:	adc    BYTE PTR [edx+0x10],dl
  41f7bc:	out    dx,al
  41f7bd:	test   al,0x35
  41f7bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7c0:	gs jp  0x41f7ab
  41f7c3:	xor    al,0xc6
  41f7c5:	xchg   ebx,eax
  41f7c6:	scas   eax,DWORD PTR es:[edi]
  41f7c7:	fldcw  WORD PTR [ebp+0x40]
  41f7ca:	lds    esp,FWORD PTR ds:0xaedd
  41f7cf:	(bad)  
  41f7d1:	inc    esi
  41f7d2:	mov    ecx,0x1bfe7b9b
  41f7d7:	push   ebp
  41f7d8:	cmp    eax,0xa705e736
  41f7dd:	in     al,0x1b
  41f7df:	mov    DWORD PTR es:[edx],esp
  41f7e2:	arpl   dx,bp
  41f7e4:	dec    edx
  41f7e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7e6:	mov    al,0x5
  41f7e8:	mov    bl,0xd
  41f7ea:	jmp    0xc8c19148
  41f7ef:	in     al,0x9b
  41f7f1:	retf   
  41f7f2:	lds    eax,FWORD PTR [edx+0x71873618]
  41f7f8:	cmp    dh,dl
  41f7fa:	jmp    FWORD PTR [ecx+0x74]
  41f7fd:	fsubr  DWORD PTR [edi-0x49513e8b]
  41f803:	mov    ah,0x46
  41f805:	in     eax,dx
  41f806:	sub    al,0xeb
  41f808:	push   esi
  41f809:	call   0x52c9:0xc8ec1552
  41f810:	pop    es
  41f811:	inc    ebp
  41f812:	cwde   
  41f813:	(bad)  
  41f815:	pusha  
  41f816:	mov    dl,0xea
  41f818:	mov    dl,0xa8
  41f81a:	jp     0x41f7ae
  41f81c:	jmp    0x5e62:0xb725a699
  41f823:	in     al,0xfc
  41f825:	shl    BYTE PTR [ebp-0x19],cl
  41f828:	jle    0x41f829
  41f82a:	aad    0xb4
  41f82c:	push   edx
  41f82d:	cmp    al,0x5d
  41f82f:	je     0x41f7e0
  41f831:	mov    edi,0x1ed3cfc5
  41f836:	lods   al,BYTE PTR ds:[esi]
  41f837:	shl    DWORD PTR [eax+ebp*1+0x40d993f0],1
  41f83e:	int    0xa9
  41f840:	fmul   st,st(1)
  41f842:	cli    
  41f843:	mov    cl,0x99
  41f845:	fidiv  WORD PTR [ecx]
  41f847:	aaa    
  41f848:	aam    0xaf
  41f84a:	cwde   
  41f84b:	leave  
  41f84c:	fistp  DWORD PTR [ebx-0x63]
  41f84f:	mov    ebx,0x1e01608f
  41f854:	inc    ebx
  41f855:	xchg   esp,eax
  41f856:	mov    al,ds:0xd7fa8876
  41f85b:	mov    ah,0x1b
  41f85d:	jg     0x41f873
  41f85f:	jbe    0x41f831
  41f861:	sub    al,0x13
  41f863:	repnz mov ebx,0xb3769c23
  41f869:	(bad)  
  41f86a:	rcr    DWORD PTR ds:0xc0225545,1
  41f870:	lds    ebp,FWORD PTR [eax-0x70]
  41f873:	mov    ebx,0x35d8bd3e
  41f878:	pop    DWORD PTR [ebx-0x7a352a2e]
  41f87e:	pusha  
  41f87f:	aas    
  41f880:	push   eax
  41f881:	fsubr  QWORD PTR [ebx+0xe29d8be]
  41f887:	xchg   esp,eax
  41f888:	cmp    BYTE PTR [esi-0x56],ah
  41f88b:	ins    BYTE PTR es:[edi],dx
  41f88c:	(bad)  
  41f88e:	pop    edi
  41f88f:	xor    al,0xa1
  41f891:	mov    BYTE PTR [edi-0xc],al
  41f894:	test   BYTE PTR [edx-0x2b],ah
  41f897:	arpl   WORD PTR [edx],cx
  41f899:	jge    0x41f912
  41f89b:	sub    dl,ch
  41f89d:	shl    DWORD PTR [esi],1
  41f89f:	push   ss
  41f8a0:	rcr    BYTE PTR [esi-0xd0140fc],0xba
  41f8a7:	lock pushf 
  41f8a9:	push   ebp
  41f8aa:	lods   eax,DWORD PTR ds:[esi]
  41f8ab:	das    
  41f8ac:	cmp    eax,0x6e3459bf
  41f8b1:	mov    esp,0x15c8993e
  41f8b6:	iret   
  41f8b7:	call   0x90f3418a
  41f8bc:	mov    bl,0xc9
  41f8be:	pusha  
  41f8bf:	retf   0x3a56
  41f8c2:	mov    eax,ds:0x7984c80d
  41f8c7:	fistp  DWORD PTR [eax]
  41f8c9:	leave  
  41f8ca:	sar    BYTE PTR [ebx*4+0x42cca318],0xb3
  41f8d2:	pop    ecx
  41f8d3:	imul   ebx,ebp,0x729600be
  41f8d9:	data16 je 0x41f90a
  41f8dc:	popf   
  41f8dd:	push   ds
  41f8de:	sbb    eax,0x7a51d655
  41f8e3:	int3   
  41f8e4:	adc    ah,bl
  41f8e6:	dec    esi
  41f8e7:	jmp    0x41f8d4
  41f8e9:	or     bl,dh
  41f8eb:	sub    dl,BYTE PTR [ecx+0x71]
  41f8ee:	pusha  
  41f8ef:	xor    ebp,edx
  41f8f1:	rcl    ch,1
  41f8f3:	(bad)  
  41f8f4:	shr    DWORD PTR [edx-0x39],1
  41f8f7:	call   0x7742:0x5815727e
  41f8fe:	popf   
  41f8ff:	enter  0xe94e,0x17
  41f903:	je     0x41f8f7
  41f905:	jmp    0x8eee:0x29c73853
  41f90c:	or     edx,ebx
  41f90e:	fcomp  st(0)
  41f910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f911:	pop    esi
  41f912:	(bad)  
  41f913:	cmp    esp,DWORD PTR [eax-0x5a5db772]
  41f919:	jae    0x41f980
  41f91b:	je     0x41f91e
  41f91d:	sbb    ecx,DWORD PTR [esi]
  41f91f:	dec    eax
  41f920:	mov    ebp,0xd3ac0d04
  41f925:	push   esp
  41f926:	mov    ecx,0xbbc20a6c
  41f92b:	inc    ebx
  41f92c:	leave  
  41f92d:	sub    al,0xdd
  41f92f:	adc    eax,0x84e6141f
  41f934:	ret    0x2e4b
  41f937:	sbb    al,0x2d
  41f939:	sbb    dh,dl
  41f93b:	in     eax,dx
  41f93c:	adc    al,ch
  41f93e:	shr    DWORD PTR [ebx-0x68],0xa0
  41f942:	pop    edx
  41f943:	mov    edi,0xf3f1e78
  41f948:	adc    esp,ebx
  41f94a:	dec    ecx
  41f94b:	sub    eax,0x41454013
  41f950:	bound  eax,QWORD PTR [esi-0x285958a3]
  41f956:	and    eax,0xe1c514c
  41f95b:	sub    ebp,DWORD PTR [ebp+0x3e]
  41f95e:	(bad)  
  41f95f:	stos   DWORD PTR es:[edi],eax
  41f960:	jmp    0x41f9c6
  41f962:	sar    DWORD PTR [bp+0x3acf],0xf8
  41f968:	inc    edi
  41f969:	and    eax,0x481045c2
  41f96e:	mov    ebx,0xe924a047
  41f973:	add    edi,DWORD PTR [ebx]
  41f975:	dec    esp
  41f976:	jecxz  0x41f9b7
  41f978:	mov    BYTE PTR [ecx],dl
  41f97a:	add    BYTE PTR [eax],al
  41f97c:	and    BYTE PTR [esi],dl
  41f97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97f:	lea    esi,[esi+0x25bf29bf]
  41f985:	lods   eax,DWORD PTR ds:[esi]
  41f986:	and    dl,al
  41f988:	fwait
  41f989:	or     al,0x1c
  41f98b:	lock sub BYTE PTR [esi+0x1],dh
  41f98f:	add    BYTE PTR [esi-0x56fffffe],al
  41f995:	and    bl,cl
  41f997:	iret   
  41f998:	jno    0x41f9e7
  41f99a:	cmp    dh,BYTE PTR [eax]
  41f99c:	xchg   edx,eax
  41f99d:	dec    ebp
  41f99e:	cmp    DWORD PTR [edx],ebx
  41f9a0:	push   ds
  41f9a1:	jns    0x41f998
  41f9a3:	xchg   dh,al
  41f9a5:	out    0xc,al
  41f9a7:	enter  0x5979,0x5
  41f9ab:	mov    WORD PTR [eax+0xb93890f],?
  41f9b1:	inc    eax
  41f9b2:	xor    ecx,esi
  41f9b4:	lds    ecx,FWORD PTR ss:[ebp+0x8]
  41f9b8:	loope  0x41f9ad
  41f9ba:	sar    ebp,1
  41f9bc:	xchg   esi,eax
  41f9bd:	lock fisubr DWORD PTR [ecx-0x28]
  41f9c1:	fadd   DWORD PTR [edi-0x26]
  41f9c4:	dec    esp
  41f9c5:	push   cs
  41f9c6:	stc    
  41f9c7:	sbb    eax,0x5c9a0fec
  41f9cc:	iret   
  41f9cd:	into   
  41f9ce:	xor    DWORD PTR [ecx-0x1d21413e],edi
  41f9d4:	fucomp st(0)
  41f9d6:	lods   eax,DWORD PTR ds:[esi]
  41f9d7:	inc    eax
  41f9d8:	xchg   ebx,eax
  41f9d9:	inc    ecx
  41f9da:	xor    BYTE PTR [edi],0xd1
  41f9dd:	cmp    BYTE PTR [ecx-0x77],0x56
  41f9e1:	mov    edi,DWORD PTR [esi+0x35]
  41f9e4:	test   eax,0xc7543ebf
  41f9e9:	hlt    
  41f9ea:	mov    bh,0x7f
  41f9ec:	fwait
  41f9ed:	pushf  
  41f9ee:	mov    WORD PTR [ecx-0x5],es
  41f9f1:	jmp    0x9faa087f
  41f9f6:	inc    eax
  41f9f7:	or     eax,0x594711db
  41f9fc:	pop    edx
  41f9fd:	adc    eax,0xa5c300cb
  41fa02:	stos   BYTE PTR es:[edi],al
  41fa03:	ds cmc 
  41fa05:	mov    ebp,0xc0244bd5
  41fa0a:	mov    ds:0x50183f68,eax
  41fa0f:	dec    eax
  41fa10:	outs   dx,DWORD PTR ds:[esi]
  41fa11:	add    ebx,DWORD PTR [esi+edx*4+0x1d]
  41fa15:	fs mov bp,0xbcf8
  41fa1a:	retf   0xc8d5
  41fa1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa1e:	inc    esp
  41fa1f:	mov    al,0x54
  41fa21:	push   ebp
  41fa22:	sub    DWORD PTR [ecx],0xf58ea8f3
  41fa28:	cmp    eax,0x3ad374a3
  41fa2d:	clc    
  41fa2e:	add    DWORD PTR [ebx+ebx*2],0x57ce7844
  41fa35:	shl    BYTE PTR [edx],1
  41fa37:	cld    
  41fa38:	dec    ebx
  41fa39:	inc    eax
  41fa3a:	jb     0x41faa4
  41fa3c:	dec    edx
  41fa3d:	in     eax,0x81
  41fa3f:	adc    DWORD PTR [ebp+0x5c1ab691],eax
  41fa45:	(bad)  
  41fa46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa47:	popa   
  41fa48:	inc    esi
  41fa49:	(bad)  
  41fa4a:	aam    0x59
  41fa4c:	jae    0x41f9f6
  41fa4e:	leave  
  41fa4f:	mov    WORD PTR [esi],?
  41fa51:	cmp    al,BYTE PTR [esi-0xd]
  41fa54:	cmp    eax,0xc25358db
  41fa59:	mov    eax,0x8e12f01a
  41fa5e:	add    DWORD PTR [ecx+0x2bdd0768],esp
  41fa64:	pop    edx
  41fa65:	sti    
  41fa66:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41fa68:	jg     0x41fa7b
  41fa6a:	loopne 0x41fa5b
  41fa6c:	inc    eax
  41fa6d:	hlt    
  41fa6e:	lock dec edx
  41fa70:	pop    edx
  41fa71:	jle    0x41fa15
  41fa73:	mov    ebp,0x45b9e946
  41fa78:	test   BYTE PTR [edi+ebx*2-0xcea03e4],bl
  41fa7f:	cdq    
  41fa80:	or     DWORD PTR [esi+0x22],esp
  41fa83:	pop    ss
  41fa84:	inc    ebx
  41fa85:	inc    esi
  41fa86:	fsub   QWORD PTR [edx+0x4f18c775]
  41fa8c:	fidiv  DWORD PTR [edx+0x12af7665]
  41fa92:	daa    
  41fa93:	les    eax,FWORD PTR [edi-0x59d593c1]
  41fa99:	mov    esp,0x1f1f8625
  41fa9e:	ror    BYTE PTR [ebx+0x7b3769c],0x8f
  41faa5:	pop    esi
  41faa6:	mov    BYTE PTR [edx-0x72948e46],bl
  41faac:	xchg   DWORD PTR [ecx-0x18894006],edi
  41fab2:	adc    al,0x71
  41fab4:	lods   al,BYTE PTR ds:[esi]
  41fab5:	adc    al,0x7b
  41fab7:	adc    BYTE PTR [esp+eiz*4+0x5a5e024a],ch
  41fabe:	xchg   ecx,eax
  41fabf:	loope  0x41fa61
  41fac1:	sti    
  41fac2:	fst    DWORD PTR [esi+edx*2]
  41fac5:	aad    0x9f
  41fac7:	inc    ebx
  41fac8:	adc    al,0x7a
  41faca:	push   ebp
  41facb:	cmc    
  41facc:	xor    eax,0x2a2860b1
  41fad1:	mov    edx,0x93f22e45
  41fad6:	test   DWORD PTR ds:0x697cbcd0,eax
  41fadc:	test   cl,bh
  41fade:	pop    ebp
  41fadf:	aas    
  41fae0:	popa   
  41fae1:	ins    BYTE PTR es:[edi],dx
  41fae2:	pop    ebp
  41fae3:	js     0x41fa7f
  41fae5:	inc    ebp
  41fae6:	(bad)  
  41fae7:	fimul  DWORD PTR [edx+0x42]
  41faea:	and    DWORD PTR [eax+0x6651c496],eax
  41faf0:	arpl   WORD PTR [ebp+edx*2+0x229738fd],bp
  41faf7:	adc    DWORD PTR [ecx+0x3e67e1d6],esi
  41fafd:	ins    BYTE PTR es:[edi],dx
  41fafe:	adc    ebp,eax
  41fb00:	aam    0x72
  41fb02:	wrmsr  
  41fb04:	mov    cl,0xab
  41fb06:	int    0x27
  41fb08:	adc    edx,DWORD PTR [edx-0x5a]
  41fb0b:	mov    ds:0xc0c4cc22,al
  41fb10:	jae    0x41fb83
  41fb12:	pop    eax
  41fb13:	lods   eax,DWORD PTR ds:[esi]
  41fb14:	push   esp
  41fb15:	add    DWORD PTR [edx+0x25],esi
  41fb18:	add    bh,BYTE PTR [ebx]
  41fb1a:	mov    WORD PTR [ecx-0x6745599b],fs
  41fb20:	je     0x41fb7e
  41fb22:	frstor [esi+edx*4-0x2f]
  41fb26:	jns    0x41fb24
  41fb28:	test   eax,0x23ceb8a7
  41fb2d:	aaa    
  41fb2e:	pop    ebp
  41fb2f:	mov    esi,0x8bc5a38a
  41fb34:	dec    esp
  41fb35:	mov    eax,ds:0x7dc57efb
  41fb3a:	ret    
  41fb3b:	rcr    DWORD PTR [ebp+eax*1+0x64],cl
  41fb3f:	ret    0x4496
  41fb42:	int3   
  41fb43:	ins    DWORD PTR es:[edi],dx
  41fb44:	imul   ebp,DWORD PTR [esi-0x40dea27],0x792d20c8
  41fb4e:	jl     0x41fb7c
  41fb50:	bound  esi,QWORD PTR [ebx+0x35b07f2e]
  41fb56:	pop    DWORD PTR [esi-0x76]
  41fb59:	cwde   
  41fb5a:	rcr    DWORD PTR [edi],cl
  41fb5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb5d:	dec    ebp
  41fb5e:	scas   al,BYTE PTR es:[edi]
  41fb5f:	dec    ebx
  41fb60:	xchg   DWORD PTR [ecx+eiz*2+0x451ae351],ecx
  41fb67:	xchg   DWORD PTR [edx],edx
  41fb69:	mov    eax,0x433ae2ec
  41fb6e:	xor    BYTE PTR [eax],ch
  41fb70:	arpl   WORD PTR [ebx+0x38],dx
  41fb73:	shl    DWORD PTR [edi],cl
  41fb75:	mov    ax,0x2551
  41fb79:	lock xlat BYTE PTR ds:[ebx]
  41fb7b:	push   ds
  41fb7c:	(bad)  
  41fb7d:	aam    0x46
  41fb7f:	adc    DWORD PTR [ebx-0x7d2cb772],edi
  41fb85:	inc    edi
  41fb86:	(bad)  
  41fb89:	push   ebp
  41fb8a:	scas   eax,DWORD PTR es:[edi]
  41fb8b:	enter  0x2977,0x4f
  41fb8f:	add    ch,bl
  41fb91:	push   0xce580d8d
  41fb96:	xchg   edx,eax
  41fb97:	test   eax,0xbaa14218
  41fb9c:	mov    ecx,0xdb6cc9e0
  41fba1:	pusha  
  41fba2:	jge    0x41fbdd
  41fba4:	in     eax,dx
  41fba5:	loopne 0x41fbeb
  41fba7:	in     eax,0x19
  41fba9:	int    0x1d
  41fbab:	pop    es
  41fbac:	push   0xb8b458d7
  41fbb1:	das    
  41fbb2:	cld    
  41fbb3:	scas   al,BYTE PTR es:[edi]
  41fbb4:	adc    DWORD PTR [ebx+esi*8],ecx
  41fbb7:	sbb    dl,ah
  41fbb9:	cwde   
  41fbba:	repz or DWORD PTR [eax+0x25],edx
  41fbbe:	mov    ds:0xece06f56,al
  41fbc3:	push   ds
  41fbc4:	(bad)  [ebx]
  41fbc6:	(bad)  
  41fbc7:	cmp    ch,dl
  41fbc9:	add    edi,DWORD PTR [eax]
  41fbcb:	out    dx,al
  41fbcc:	cwde   
  41fbcd:	xor    ah,cl
  41fbcf:	retf   0x8612
  41fbd2:	xchg   edx,eax
  41fbd3:	mov    cl,0x6b
  41fbd5:	in     al,0x93
  41fbd7:	mov    al,ds:0x54c6df18
  41fbdc:	sub    bp,WORD PTR [ecx+0x3de75926]
  41fbe3:	imul   eax,DWORD PTR [eax-0x1a64197f],0x7e
  41fbea:	enter  0x31e6,0xf9
  41fbee:	xor    eax,0x35a79599
  41fbf3:	cmp    al,0xd5
  41fbf5:	mov    esi,ebp
  41fbf7:	fcom   DWORD PTR ds:0xb4dfec64
  41fbfd:	leave  
  41fbfe:	mov    WORD PTR ds:0x7ef8a63f,fs
  41fc04:	call   0x93a3ceeb
  41fc09:	imul   esp,DWORD PTR [ecx-0x3cc5860a],0xaaa6d1f7
  41fc13:	cld    
  41fc14:	push   ss
  41fc15:	jns    0x41fc15
  41fc17:	outs   dx,DWORD PTR ds:[esi]
  41fc18:	jge    0x41fbed
  41fc1a:	add    BYTE PTR [eax],al
  41fc1c:	mov    al,0x33
  41fc1e:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  41fc24:	test   DWORD PTR [edi+0x76e60cbe],esi
  41fc2a:	adc    BYTE PTR [eax-0x52],cl
  41fc2d:	js     0x41fc30
  41fc2f:	add    BYTE PTR [esi-0x78fffffe],al
  41fc35:	bound  eax,QWORD PTR [edi]
  41fc37:	jae    0x41fc0a
  41fc39:	dec    esi
  41fc3a:	mov    al,ch
  41fc3c:	lahf   
  41fc3d:	cs je  0x41fc66
  41fc40:	add    al,0xe3
  41fc42:	mov    edx,0xca48d542
  41fc47:	mov    cl,0x19
  41fc49:	and    al,0x84
  41fc4b:	push   0x4
  41fc4d:	sub    esi,DWORD PTR [ebx]
  41fc4f:	add    ecx,ecx
  41fc51:	fist   DWORD PTR [eax-0x6f]
  41fc54:	daa    
  41fc55:	pop    es
  41fc56:	mov    ?,ebp
  41fc58:	cmp    bl,ch
  41fc5a:	xchg   BYTE PTR [ecx],bh
  41fc5c:	rcl    DWORD PTR [edi],0xf2
  41fc5f:	push   0x253dd85f
  41fc64:	pop    edi
  41fc65:	lods   al,BYTE PTR ds:[esi]
  41fc66:	sar    DWORD PTR [ecx-0x34],0x72
  41fc6a:	cmc    
  41fc6b:	fwait
  41fc6c:	sbb    al,0xc5
  41fc6e:	add    al,BYTE PTR [ebp-0x57]
  41fc71:	sbb    al,0xcb
  41fc73:	dec    eax
  41fc74:	cwde   
  41fc75:	mov    ds:0xc8d7e194,eax
  41fc7a:	jnp    0x41fc98
  41fc7c:	loop   0x41fcb1
  41fc7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc7f:	mov    eax,0x812bbe32
  41fc84:	and    eax,0x89de78bd
  41fc89:	jp     0x41fc66
  41fc8b:	shl    BYTE PTR [esi],1
  41fc8d:	pop    es
  41fc8e:	ss jg  0x41fc94
  41fc91:	inc    ecx
  41fc92:	and    BYTE PTR [edi-0x5dfc7a87],dl
  41fc98:	loopne 0x41fd0f
  41fc9a:	jo     0x41fc8e
  41fc9c:	outs   dx,DWORD PTR ds:[esi]
  41fc9d:	(bad)  
  41fc9e:	imul   ebx,DWORD PTR [ebp*8-0x1cc00402],0x1d0554
  41fca9:	je     0x41fc3e
  41fcab:	adc    al,0x91
  41fcad:	sbb    ch,BYTE PTR [ebx+0x7b]
  41fcb0:	lods   eax,DWORD PTR ds:[esi]
  41fcb1:	fcom   QWORD PTR [ebp+0x27]
  41fcb4:	sub    edi,DWORD PTR [bx+di+0x6d60]
  41fcb9:	test   eax,0xb0132ff
  41fcbe:	aas    
  41fcbf:	ds es mov edx,0xb68503d3
  41fcc6:	xchg   edi,eax
  41fcc7:	ins    DWORD PTR es:[edi],dx
  41fcc8:	add    esp,0x4b04b1a8
  41fcce:	dec    ebp
  41fccf:	dec    esp
  41fcd0:	outs   dx,DWORD PTR ds:[esi]
  41fcd1:	adc    al,0xf3
  41fcd3:	icebp  
  41fcd4:	jmp    0x762f:0x917d3076
  41fcdb:	repz xor esi,esp
  41fcde:	push   ecx
  41fcdf:	fs aas 
  41fce1:	mov    eax,ds:0x8849af17
  41fce6:	push   ebp
  41fce7:	fst    DWORD PTR [ecx+0x44]
  41fcea:	aad    0xca
  41fcec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fced:	icebp  
  41fcee:	push   ss
  41fcef:	mov    ds:0xa5d13475,eax
  41fcf4:	or     al,0x2a
  41fcf6:	sub    BYTE PTR [edx],al
  41fcf8:	jnp    0x41fd71
  41fcfa:	mov    eax,ds:0x89ce5d6c
  41fcff:	xchg   ebp,eax
  41fd00:	or     al,0x4
  41fd02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd03:	pusha  
  41fd04:	retf   
  41fd05:	push   ebx
  41fd06:	jmp    0x41fce5
  41fd08:	imul   ebp,edi,0xffffff80
  41fd0b:	jne    0x41fd52
  41fd0d:	das    
  41fd0e:	and    al,0x39
  41fd10:	add    al,0x78
  41fd12:	push   0xffffffd8
  41fd14:	fdivr  st,st(3)
  41fd16:	bound  ebp,QWORD PTR [ecx+edi*4+0x37]
  41fd1a:	push   ebx
  41fd1b:	xor    ecx,ebp
  41fd1d:	mov    edi,ds
  41fd1f:	sub    al,0xb2
  41fd21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd22:	sahf   
  41fd23:	shl    DWORD PTR [edi+0x3b68dfb8],0x9e
  41fd2a:	fwait
  41fd2b:	sbb    cl,BYTE PTR [esi+0x33]
  41fd2e:	arpl   WORD PTR [ecx+0x72],sp
  41fd31:	imul   esi,DWORD PTR [edi+0x1fb105fc],0x5ec31165
  41fd3b:	push   ss
  41fd3c:	fnstenv [esi]
  41fd3e:	fidiv  DWORD PTR [edi+0x22702c10]
  41fd44:	fmul   DWORD PTR [esi]
  41fd46:	jmp    0x41fd0b
  41fd48:	jae    0x41fd8c
  41fd4a:	leave  
  41fd4b:	mov    edi,0x63b1d9a2
  41fd50:	dec    ebx
  41fd51:	pop    eax
  41fd52:	scas   eax,DWORD PTR es:[edi]
  41fd53:	ret    0xb81a
  41fd56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd57:	push   eax
  41fd58:	inc    ebp
  41fd59:	mov    ecx,0xd2ec7ae0
  41fd5e:	fs retf 
  41fd60:	lea    edx,fs:[esi-0xac6f78f]
  41fd67:	jo     0x41fd34
  41fd69:	mov    dh,0x5
  41fd6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd6c:	fldenv [edx]
  41fd6e:	xor    DWORD PTR [ecx],eax
  41fd70:	xchg   bl,bl
  41fd72:	cmp    BYTE PTR [ebx+0x4a],bl
  41fd75:	aas    
  41fd76:	dec    eax
  41fd77:	xor    dl,BYTE PTR [esi+ebx*8]
  41fd7a:	inc    eax
  41fd7b:	icebp  
  41fd7c:	adc    eax,0x9a122112
  41fd81:	ret    0x649f
  41fd84:	inc    edx
  41fd85:	imul   DWORD PTR [ebx-0x70]
  41fd88:	hlt    
  41fd89:	out    dx,eax
  41fd8a:	loopne 0x41fd68
  41fd8c:	sub    BYTE PTR [ebp+0x4b22cc66],0xc8
  41fd93:	mov    edi,ecx
  41fd95:	add    DWORD PTR [ebx+edx*8-0x2d],0xfffffff6
  41fd9a:	xor    eax,0x64eb952
  41fd9f:	cmp    ch,BYTE PTR [edx-0x4a]
  41fda2:	mov    esi,0x20f2f2f2
  41fda7:	(bad)  
  41fda9:	rcl    BYTE PTR ds:0xb1f3108c,0x26
  41fdb0:	adc    edx,0xffffffbb
  41fdb3:	(bad)  
  41fdb4:	sbb    al,0xfc
  41fdb6:	in     al,dx
  41fdb7:	in     eax,0x43
  41fdb9:	stos   BYTE PTR es:[edi],al
  41fdba:	dec    ebx
  41fdbb:	mov    ebx,0xc2365b0b
  41fdc0:	shl    BYTE PTR [esi+0x1b913d94],0x84
  41fdc7:	pop    ds
  41fdc8:	mov    al,ds:0xe00652eb
  41fdcd:	sahf   
  41fdce:	pop    eax
  41fdcf:	lea    esi,[edx-0xcb25246]
  41fdd5:	pop    ebx
  41fdd6:	inc    esp
  41fdd7:	mov    al,0x6c
  41fdd9:	out    0x6c,eax
  41fddb:	stc    
  41fddc:	add    eax,0x4e118347
  41fde1:	mov    dh,bh
  41fde3:	jae    0x41fd8b
  41fde5:	and    DWORD PTR [ecx-0xd],ebx
  41fde8:	add    eax,0x6bbcfaa8
  41fded:	sar    BYTE PTR es:[esi-0x5cbdad8b],0x1f
  41fdf5:	push   ss
  41fdf6:	test   bl,cl
  41fdf8:	sub    al,0x4a
  41fdfa:	mov    esp,0x54b7845c
  41fdff:	in     eax,dx
  41fe00:	jno    0x41fe68
  41fe02:	xor    BYTE PTR [edx+0x7859c874],ch
  41fe08:	out    0x55,al
  41fe0a:	or     eax,0x167f7ebe
  41fe0f:	cmp    BYTE PTR [eax],ch
  41fe11:	pop    esi
  41fe12:	pop    esi
  41fe13:	add    al,0xe9
  41fe15:	int3   
  41fe16:	or     bh,bh
  41fe18:	fimul  WORD PTR [edx-0x37]
  41fe1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe1c:	xor    BYTE PTR [ecx],0x6b
  41fe1f:	fisub  DWORD PTR [ebx-0x21]
  41fe22:	iret   
  41fe23:	sbb    edi,DWORD PTR [edx]
  41fe25:	jl     0x41fdf5
  41fe27:	scas   eax,DWORD PTR es:[edi]
  41fe28:	jo     0x41fe5b
  41fe2a:	sub    ah,BYTE PTR [edi+0x1fa5f785]
  41fe30:	push   0x6cec942c
  41fe35:	stos   BYTE PTR es:[edi],al
  41fe36:	mov    eax,ds:0xbd2c317a
  41fe3b:	enter  0xdcc3,0xab
  41fe3f:	inc    ebp
  41fe40:	sub    al,0x4d
  41fe42:	imul   edx,DWORD PTR [esi],0x4c
  41fe45:	cld    
  41fe46:	push   es
  41fe47:	pop    ebp
  41fe48:	fs aad 0x1
  41fe4b:	ret    
  41fe4c:	dec    ecx
  41fe4d:	fist   DWORD PTR ds:0x5fb84380
  41fe53:	nop
  41fe54:	push   es
  41fe55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe57:	jo     0x41fde4
  41fe59:	inc    edi
  41fe5a:	fimul  WORD PTR [ecx+edi*8+0x38eb76cd]
  41fe61:	push   cs
  41fe62:	cmp    dh,BYTE PTR [edi]
  41fe64:	xor    al,0x90
  41fe66:	sub    DWORD PTR [esi-0x63],edi
  41fe69:	shr    BYTE PTR [ecx],1
  41fe6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe6c:	pop    ecx
  41fe6d:	jle    0x41fe4d
  41fe6f:	in     al,0x8
  41fe71:	jmp    0x56e74df7
  41fe76:	mov    ss,WORD PTR [edx+0x5928d964]
  41fe7c:	retf   
  41fe7d:	adc    al,0xb
  41fe7f:	outs   dx,DWORD PTR ds:[esi]
  41fe80:	sub    DWORD PTR [edx+ecx*2],esi
  41fe83:	loop   0x41fefc
  41fe85:	push   esi
  41fe86:	add    eax,0x94aba6cb
  41fe8b:	stos   BYTE PTR es:[edi],al
  41fe8c:	aam    0x21
  41fe8e:	(bad)  
  41fe90:	fistp  QWORD PTR [ebx+0xb]
  41fe93:	leave  
  41fe94:	gs adc al,0xf0
  41fe97:	js     0x41fe35
  41fe99:	(bad)  
  41fe9a:	pop    ds
  41fe9b:	and    eax,0x4fcf3f9b
  41fea0:	ins    BYTE PTR es:[edi],dx
  41fea1:	mov    ebp,edx
  41fea3:	outs   dx,DWORD PTR ds:[esi]
  41fea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fea5:	dec    ebx
  41fea6:	call   0xbd6fc927
  41feab:	cdq    
  41feac:	inc    ebp
  41fead:	ss push esi
  41feaf:	es test eax,0xfeae8d4
  41feb5:	fsubrp st(4),st
  41feb7:	aad    0x98
  41feb9:	jno    0x41febb
  41febb:	add    BYTE PTR [ecx-0x6b36a2],ch
  41fec1:	xchg   edi,eax
  41fec2:	std    
  41fec3:	jg     0x41fecf
  41fec5:	in     al,0x99
  41fec7:	pop    ecx
  41fec8:	into   
  41fec9:	in     eax,0x5f
  41fecb:	stos   DWORD PTR es:[edi],eax
  41fecc:	xor    al,0x7b
  41fece:	add    DWORD PTR [eax],eax
  41fed0:	xchg   BYTE PTR [edx],al
  41fed2:	add    BYTE PTR [eax],al
  41fed4:	xchg   esp,eax
  41fed5:	ds jge 0x41fed2
  41fed8:	mov    esi,0xbec413a4
  41fedd:	and    DWORD PTR [ecx+0x64],ecx
  41fee0:	stc    
  41fee1:	mov    ds:0xbb02591,eax
  41fee6:	ds pop ss
  41fee8:	dec    edi
  41fee9:	push   DWORD PTR [ecx-0x24]
  41feec:	cmc    
  41feed:	fwait
  41feee:	adc    al,0x32
  41fef0:	nop
  41fef1:	adc    ebx,DWORD PTR [edi+0x5e]
  41fef4:	jnp    0x41ff0d
  41fef6:	lea    ebp,[edi]
  41fef8:	je     0x41feba
  41fefa:	mov    dh,0x7d
  41fefc:	pop    ecx
  41fefd:	push   esp
  41fefe:	xchg   esp,eax
  41feff:	je     0x41feae
  41ff01:	aad    0xba
  41ff03:	out    dx,eax
  41ff04:	popa   
  41ff05:	or     esi,ebp
  41ff07:	mov    esp,0xb610c48b
  41ff0c:	or     BYTE PTR ds:0x9bed8466,dh
  41ff12:	add    DWORD PTR [ebx+ebx*2],ebx
  41ff15:	push   ebp
  41ff16:	push   ebp
  41ff17:	fiadd  DWORD PTR [ebx]
  41ff19:	or     al,0xf5
  41ff1b:	cmp    ebx,esp
  41ff1d:	(bad)  
  41ff1e:	push   ds
  41ff1f:	in     eax,dx
  41ff20:	inc    edi
  41ff21:	and    DWORD PTR [ecx],0xffffffcd
  41ff24:	sti    
  41ff25:	adc    al,0x2f
  41ff27:	js     0x41fee5
  41ff29:	mov    ah,0x3a
  41ff2b:	jp     0x41ff8c
  41ff2d:	je     0x41ffa9
  41ff2f:	push   esp
  41ff30:	push   edx
  41ff31:	xchg   esi,eax
  41ff32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff33:	mov    cs,esi
  41ff35:	shl    BYTE PTR [edi+0x6d],cl
  41ff38:	cmp    edi,eax
  41ff3a:	pop    ds
  41ff3b:	(bad)
  41ff3e:	ror    DWORD PTR [ebx-0x41],cl
  41ff41:	pop    ebx
  41ff42:	pop    edx
  41ff43:	xor    al,0x7c
  41ff45:	xor    DWORD PTR [ecx+0x7e039ac8],eax
  41ff4b:	or     ecx,ecx
  41ff4d:	addr16 inc ecx
  41ff4f:	inc    eax
  41ff50:	inc    ecx
  41ff51:	mov    esp,0x733f73d
  41ff56:	popf   
  41ff57:	dec    edi
  41ff58:	push   ss
  41ff59:	fwait
  41ff5a:	ror    BYTE PTR ds:0x27b047af,0x8d
  41ff61:	lea    esi,[ebp+0x13]
  41ff64:	mov    esp,0xe62c395c
  41ff69:	push   0xffffffa6
  41ff6b:	outs   dx,BYTE PTR ds:[esi]
  41ff6c:	test   DWORD PTR [ebx-0x799d3441],ebp
  41ff72:	dec    ebp
  41ff73:	sbb    eax,0x814ebbf
  41ff78:	jo     0x41ffa8
  41ff7a:	fadd   DWORD PTR [edx]
  41ff7c:	mov    WORD PTR [edi+0x4e],cs
  41ff7f:	cmp    DWORD PTR [ecx-0x17d362c7],0x3b6f0647
  41ff89:	cld    
  41ff8a:	pop    esi
  41ff8b:	ror    BYTE PTR [ebx+0x58],0xe4
  41ff8f:	int    0x30
  41ff91:	stos   DWORD PTR es:[edi],eax
  41ff92:	cmp    cl,cl
  41ff94:	mov    al,BYTE PTR [edx-0x9]
  41ff97:	xor    DWORD PTR [ebp-0x4a],eax
  41ff9a:	setg   BYTE PTR ds:0x14b0c509
  41ffa1:	xor    eax,0xda780e8d
  41ffa6:	sbb    bl,BYTE PTR [esi+0x1c]
  41ffa9:	fisttp QWORD PTR [edx-0xc]
  41ffac:	xchg   DWORD PTR [eax],edi
  41ffae:	les    ecx,FWORD PTR [esi+0x679a844c]
  41ffb4:	ret    0xcb1e
  41ffb7:	test   DWORD PTR [edx+eiz*2],ebp
  41ffba:	jae    0x420032
  41ffbc:	cdq    
  41ffbd:	lahf   
  41ffbe:	in     al,dx
  41ffbf:	leave  
  41ffc0:	pop    esp
  41ffc1:	aam    0x31
  41ffc3:	hlt    
  41ffc4:	cmp    DWORD PTR [ebp+0x14fb646f],ebp
  41ffca:	jg     0x42000c
  41ffcc:	sbb    eax,0x36dbca21
  41ffd1:	pusha  
  41ffd2:	inc    ecx
  41ffd3:	jp     0x41fff5
  41ffd5:	jno    0x41ffdb
  41ffd7:	(bad)  
  41ffd8:	jns    0x420048
  41ffda:	mov    ebx,ss
  41ffdc:	into   
  41ffdd:	and    DWORD PTR [ebx+0xd096ceb],ecx
  41ffe3:	adc    al,0xda
  41ffe5:	bnd jp 0x420029
  41ffe8:	fld    st(0)
  41ffea:	sub    eax,0xa104e388
  41ffef:	into   
  41fff0:	ffree  st(4)
  41fff2:	fs inc ecx
  41fff4:	dec    eax
  41fff5:	rcl    DWORD PTR [edi-0x3ece9988],cl
  41fffb:	mov    BYTE PTR ds:0x260b92de,ah
  420001:	xchg   edi,eax
  420002:	call   0x8a65:0xe945e0b8
  420009:	mov    ds:0xeef40bfd,eax
  42000e:	aad    0x72
  420010:	xchg   esp,eax
  420011:	fucom  st(0)
  420013:	jg     0x420075
  420015:	in     eax,0xe1
  420017:	rcl    BYTE PTR [ebp-0x48],1
  42001a:	xchg   edx,eax
  42001b:	ds pusha 
  42001d:	sub    eax,0xa80f6cdd
  420022:	fisubr DWORD PTR [ecx+0x71]
  420025:	(bad)  
  420026:	fwait
  420027:	cld    
  420028:	add    al,dl
  42002a:	std    
  42002b:	repnz sub DWORD PTR [eax],eax
  42002e:	mov    cl,0x5a
  420030:	lods   al,BYTE PTR ds:[esi]
  420031:	bnd jne 0x41ffc8
  420034:	jp     0x4200b2
  420036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420037:	out    dx,eax
  420038:	or     eax,0x20fce1f4
  42003d:	cmp    DWORD PTR [ebx-0x67],ecx
  420040:	dec    eax
  420041:	mov    edi,0xebeb1096
  420046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420047:	mov    fs:0xc320fcc,eax
  42004d:	xor    BYTE PTR ds:0x235e417,dh
  420053:	mov    es,WORD PTR [ebp+edx*8+0x18]
  420057:	or     edi,DWORD PTR [ebp-0x10a3aeba]
  42005d:	push   esi
  42005e:	out    dx,eax
  42005f:	inc    ebp
  420060:	add    eax,0x1707f28e
  420065:	jecxz  0x4200a4
  420067:	jae    0x4200a0
  420069:	push   ecx
  42006a:	sub    ebx,DWORD PTR [ebx]
  42006c:	into   
  42006d:	rcr    BYTE PTR [eax],1
  42006f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420070:	inc    ebx
  420071:	xchg   ebx,eax
  420072:	and    esi,DWORD PTR [eax+0x31]
  420075:	outs   dx,BYTE PTR ds:[esi]
  420076:	out    dx,al
  420077:	repnz mov ds,ecx
  42007a:	mov    dh,0x26
  42007c:	imul   edi,DWORD PTR [edx+0x21],0x5e215bbc
  420083:	test   ebp,edx
  420085:	mov    DWORD PTR [eax],ebp
  420087:	push   esp
  420088:	std    
  420089:	push   cs
  42008a:	sub    ecx,edx
  42008c:	jbe    0x42010a
  42008e:	xchg   esp,eax
  42008f:	lock or ebp,DWORD PTR [ebx-0x4b]
  420093:	popf   
  420094:	inc    edx
  420095:	pop    edx
  420096:	mov    edi,0xb613caa4
  42009b:	sub    DWORD PTR [ebx-0x26b6ec55],ecx
  4200a1:	mov    bh,0x9
  4200a3:	pop    es
  4200a4:	add    DWORD PTR [eax-0x78],esp
  4200a7:	idiv   DWORD PTR [ebp-0x28da85e7]
  4200ad:	mov    edx,0xcbb0aa60
  4200b2:	test   eax,0x1b9ce094
  4200b7:	in     al,dx
  4200b8:	mov    ebx,0x45411085
  4200bd:	mov    edx,0x608e0ea6
  4200c2:	and    ah,dl
  4200c4:	arpl   WORD PTR [esi+0x6],ax
  4200c7:	fcmovnu st,st(1)
  4200c9:	addr16 push ss
  4200cb:	push   ss
  4200cc:	aam    0xd1
  4200ce:	es jo  0x4200bc
  4200d1:	adc    eax,0xb6c5fe73
  4200d6:	mov    dl,0xed
  4200d8:	and    eax,0xb7d8757a
  4200dd:	add    al,BYTE PTR [edi-0xda5bd70]
  4200e3:	adc    ecx,DWORD PTR [esi+0x5b]
  4200e6:	mov    bh,0xfe
  4200e8:	jo     0x42015c
  4200ea:	outs   dx,DWORD PTR ds:[esi]
  4200eb:	cwde   
  4200ec:	gs jge 0x420105
  4200ef:	dec    ebx
  4200f0:	scas   al,BYTE PTR es:[edi]
  4200f1:	shl    esp,0x15
  4200f4:	dec    eax
  4200f5:	dec    ebx
  4200f6:	push   0xd13e8556
  4200fb:	leave  
  4200fc:	mov    ds:0x550f7a8d,eax
  420101:	loop   0x420125
  420103:	out    0xd1,al
  420105:	call   0xfd0f1947
  42010a:	mov    eax,0xd13988fb
  42010f:	in     eax,0xcd
  420111:	jle    0x420183
  420113:	ret    
  420114:	sub    dl,BYTE PTR [ebp-0x680cf1d9]
  42011a:	rcr    esp,cl
  42011c:	jl     0x42010a
  42011e:	dec    edx
  42011f:	add    esp,ebx
  420121:	xchg   edi,eax
  420122:	cmc    
  420123:	test   al,0x3e
  420125:	dec    ebx
  420126:	xor    al,0x9e
  420128:	or     BYTE PTR [edi+0x49],al
  42012b:	jg     0x420187
  42012d:	push   edx
  42012e:	pusha  
  42012f:	(bad)  
  420130:	es stos DWORD PTR es:[edi],eax
  420132:	jb     0x4200dc
  420134:	inc    eax
  420135:	fs cmc 
  420137:	sub    DWORD PTR [edx+esi*8],esi
  42013a:	nop
  42013b:	rcr    DWORD PTR [edx],0x52
  42013e:	repnz lahf 
  420140:	repz lock cwde 
  420143:	(bad)  
  420144:	popf   
  420145:	rcr    BYTE PTR [eax-0x1b586113],0x18
  42014c:	shl    BYTE PTR [ecx-0x6509b965],1
  420152:	cmc    
  420153:	dec    eax
  420154:	mov    al,ds:0x56a97566
  420159:	jb     0x42015b
  42015b:	add    BYTE PTR [ebx+0x7d7539cf],bh
  420161:	idiv   edi
  420163:	iret   
  420164:	std    
  420165:	mov    ecx,DWORD PTR [esi+0x47f9f20f]
  42016b:	sub    eax,0x17dba
  420170:	xchg   BYTE PTR [edx],al
  420172:	add    BYTE PTR [eax],al
  420174:	in     eax,0x5
  420176:	dec    ebx
  420177:	mov    al,ds:0xcfb66328
  42017c:	mov    ds:0xcf9761e9,eax
  420181:	scas   eax,DWORD PTR es:[edi]
  420182:	jle    0x4201b5
  420184:	pop    ss
  420185:	fwait
  420186:	or     dl,BYTE PTR [ebx]
  420188:	inc    edx
  420189:	xchg   DWORD PTR [ebx+0x69e04948],ebp
  42018f:	mov    ebx,0xacc738a7
  420194:	iret   
  420195:	sub    eax,0x4aaa6f3d
  42019a:	into   
  42019b:	sar    edx,0x32
  42019e:	jns    0x42021b
  4201a0:	lds    edx,FWORD PTR [ebx-0x62]
  4201a3:	iret   
  4201a4:	fimul  WORD PTR [esi-0x5cd68b4]
  4201aa:	add    eax,DWORD PTR [edx-0x5d]
  4201ad:	call   0x2bc8ac3c
  4201b2:	hlt    
  4201b3:	gs push esp
  4201b5:	int    0x49
  4201b7:	mov    es,WORD PTR [edi]
  4201b9:	pop    ds
  4201ba:	xlat   BYTE PTR ds:[ebx]
  4201bb:	mov    ebx,edx
  4201bd:	fcmove st,st(6)
  4201bf:	test   al,0x4d
  4201c1:	mov    DWORD PTR [ebp-0x74],ebp
  4201c4:	pop    ebx
  4201c5:	xchg   ebp,eax
  4201c6:	jle    0x4201b6
  4201c8:	push   eax
  4201c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201ca:	ins    BYTE PTR es:[edi],dx
  4201cb:	imul   esp,DWORD PTR [ecx],0x259c9441
  4201d1:	jae    0x42022e
  4201d3:	popf   
  4201d4:	into   
  4201d5:	jo     0x420252
  4201d7:	or     eax,0x5447b382
  4201dc:	jg     0x42016a
  4201de:	xor    al,0xc5
  4201e0:	jo     0x42022f
  4201e2:	test   DWORD PTR [ebp-0x4f],eax
  4201e5:	dec    esi
  4201e6:	cmc    
  4201e7:	inc    edx
  4201e8:	out    dx,eax
  4201e9:	jbe    0x4201b7
  4201eb:	add    al,0x25
  4201ed:	sbb    al,0x5c
  4201ef:	lock test BYTE PTR ds:0xe73fd0f6,dh
  4201f6:	xlat   BYTE PTR ds:[ebx]
  4201f7:	or     al,0x2b
  4201f9:	sub    cl,ah
  4201fb:	icebp  
  4201fc:	mov    ch,0xec
  4201fe:	xor    eax,0xceea7ed8
  420203:	js     0x42018e
  420205:	rcr    BYTE PTR [edi+0x4c250c0],1
  42020b:	imul   DWORD PTR [eax+eiz*4+0x655e8e73]
  420212:	pop    ss
  420213:	imul   ebx,DWORD PTR [esi+0x47],0xb22ed667
  42021a:	jg     0x42029b
  42021c:	push   eax
  42021d:	dec    eax
  42021e:	pop    ecx
  42021f:	sbb    al,al
  420221:	push   ebx
  420222:	in     eax,0xac
  420224:	push   es
  420225:	jge    0x4201c8
  420227:	xor    BYTE PTR [eax+0x4c],bl
  42022a:	pop    ebp
  42022b:	pop    ss
  42022c:	lahf   
  42022d:	and    BYTE PTR [eax-0x5d],0xe
  420231:	out    0xff,eax
  420233:	addr16 dec ecx
  420235:	xor    eax,DWORD PTR [edi+0x1d]
  420238:	pop    edi
  420239:	iret   
  42023a:	and    esp,DWORD PTR [eax+0x3dd5924]
  420240:	or     al,BYTE PTR fs:0xbfe784c4
  420247:	xor    al,0x8c
  420249:	mov    ah,0x5e
  42024b:	gs mov ah,0x5a
  42024e:	outs   dx,DWORD PTR ds:[esi]
  42024f:	mov    esi,0x174a18a4
  420254:	pop    esp
  420255:	(bad)  
  420256:	mov    DWORD PTR [ebx],ecx
  420258:	in     eax,dx
  420259:	mov    DWORD PTR [eax+0x43],ebx
  42025c:	int3   
  42025d:	fisub  DWORD PTR [edi-0x5b]
  420260:	retf   
  420261:	or     edi,DWORD PTR [eax+edi*8+0x77]
  420265:	shl    esp,0x4d
  420268:	mov    ebp,0x87e7096c
  42026d:	inc    ebx
  42026e:	retf   0x6673
  420271:	test   DWORD PTR [esi+0x71a62498],esp
  420277:	lods   eax,DWORD PTR ds:[esi]
  420278:	jnp    0x42024a
  42027a:	ins    DWORD PTR es:[edi],dx
  42027b:	pop    esi
  42027c:	dec    eax
  42027d:	gs out dx,al
  42027f:	xchg   ebx,eax
  420280:	sbb    eax,DWORD PTR [eax+0x52]
  420283:	add    bl,dh
  420285:	popf   
  420286:	cmp    al,0x45
  420288:	mov    WORD PTR [eax-0x642aec6b],?
  42028e:	int    0x53
  420290:	(bad)  
  420291:	adc    DWORD PTR [ebx-0x6cf602db],0xffffffc2
  420298:	mov    bh,0xbc
  42029a:	mov    cs,edi
  42029c:	xchg   BYTE PTR [ecx],cl
  42029e:	pop    edi
  42029f:	dec    edi
  4202a0:	mov    ah,0x29
  4202a2:	scas   al,BYTE PTR es:[edi]
  4202a3:	push   esp
  4202a4:	lods   al,BYTE PTR ds:[esi]
  4202a5:	enter  0xe124,0x48
  4202a9:	sub    al,BYTE PTR [esi+edx*8]
  4202ac:	xchg   BYTE PTR [eax+0x128ea28],bl
  4202b2:	mov    dh,0x28
  4202b4:	inc    eax
  4202b5:	pop    eax
  4202b6:	cmc    
  4202b7:	inc    esi
  4202b8:	inc    edx
  4202b9:	mov    ecx,eax
  4202bb:	jmp    0xeab3:0x2a2fb41a
  4202c2:	enter  0xf6b3,0x4b
  4202c6:	shl    BYTE PTR [eax],0x94
  4202c9:	popa   
  4202ca:	lods   al,BYTE PTR ds:[esi]
  4202cb:	cmp    BYTE PTR [eax],0x75
  4202ce:	test   DWORD PTR [edi],ecx
  4202d0:	in     eax,dx
  4202d1:	mov    DWORD PTR [ebp-0x2b],eax
  4202d4:	(bad)  
  4202d5:	retf   0x397d
  4202d8:	mov    ch,0x9a
  4202da:	ret    
  4202db:	cwde   
  4202dc:	cdq    
  4202dd:	sbb    DWORD PTR [ecx+0x1cc1f345],0x7d
  4202e4:	adc    eax,0x230bd58e
  4202e9:	xor    bl,BYTE PTR ds:0xfb2026c3
  4202ef:	mov    esp,0xbfbebf80
  4202f4:	fsub   QWORD PTR [edx+0x71]
  4202f7:	adc    edi,ebx
  4202f9:	imul   ebx,DWORD PTR [ebp+0xb],0x2c
  4202fd:	jns    0x420314
  4202ff:	ss pusha 
  420301:	mov    bl,0x8b
  420303:	add    eax,0x1d137642
  420308:	popf   
  420309:	dec    ebx
  42030a:	stos   DWORD PTR es:[edi],eax
  42030b:	mov    al,0xb9
  42030d:	stos   BYTE PTR es:[edi],al
  42030e:	push   edi
  42030f:	pop    esi
  420310:	push   0x10
  420312:	or     cl,BYTE PTR [edi+0x53]
  420315:	shl    cl,cl
  420317:	sub    DWORD PTR [esi+0x3f20cbca],edx
  42031d:	mov    BYTE PTR [edx],al
  42031f:	pushf  
  420320:	cmp    dl,BYTE PTR [esp+esi*8+0x779e6ffe]
  420327:	and    eax,0x600c0be1
  42032c:	mov    ecx,0x29c31b3c
  420331:	aad    0x32
  420333:	adc    eax,0x9798975
  420338:	sbb    BYTE PTR [ebx],0x42
  42033b:	ror    BYTE PTR [eax-0x238d28bd],1
  420341:	jl     0x4202f4
  420343:	jge    0x42033f
  420345:	mov    edi,0x5a807d8e
  42034a:	mov    ebp,DWORD PTR [eax+0x22e17d6f]
  420350:	out    0x61,eax
  420352:	jp     0x420359
  420354:	clc    
  420355:	adc    BYTE PTR [esi+0x225a226],dh
  42035b:	inc    esi
  42035c:	sub    ebx,eax
  42035e:	scas   al,BYTE PTR es:[edi]
  42035f:	es pop ebp
  420361:	ins    DWORD PTR es:[edi],dx
  420362:	push   esp
  420363:	xchg   esp,eax
  420364:	mov    esi,0x73032761
  420369:	sbb    eax,0x83608a87
  42036e:	jbe    0x42035f
  420370:	adc    al,BYTE PTR [ebx+0x7]
  420373:	push   eax
  420374:	jg     0x4203d8
  420376:	test   eax,0x442a06d6
  42037b:	adc    esi,DWORD PTR [esi-0x67ce66b5]
  420381:	adc    eax,0x19f8bce9
  420386:	sar    BYTE PTR [ebp+edx*8+0x75],cl
  42038a:	addr16 inc edx
  42038c:	sub    esp,esi
  42038e:	pop    esp
  42038f:	sti    
  420390:	mov    WORD PTR [esi-0x7860b15b],fs
  420396:	fdivr  DWORD PTR [ebx-0x46cf504b]
  42039c:	or     al,0xd9
  42039e:	js     0x42033d
  4203a0:	inc    ebx
  4203a1:	sbb    edx,DWORD PTR [edx+ebx*2]
  4203a4:	(bad)  
  4203a5:	arpl   WORD PTR [esp+ebp*1-0x509384ba],ax
  4203ac:	sub    al,0xf0
  4203ae:	scas   al,BYTE PTR es:[edi]
  4203af:	retf   0xa2c9
  4203b2:	sahf   
  4203b3:	fs adc eax,0x8b43442b
  4203b9:	mov    ebx,0xd472125f
  4203be:	pop    ebp
  4203bf:	dec    esi
  4203c0:	pop    ebx
  4203c1:	loop   0x42036a
  4203c3:	xchg   esi,eax
  4203c4:	arpl   WORD PTR [edi+0x68e10d39],bx
  4203ca:	cdq    
  4203cb:	lods   eax,DWORD PTR ds:[esi]
  4203cc:	(bad)  
  4203ce:	add    eax,edi
  4203d0:	xor    DWORD PTR [edx],0xed9fe631
  4203d6:	inc    edx
  4203d7:	stos   BYTE PTR es:[edi],al
  4203d8:	sub    DWORD PTR [ebp-0x6d],edx
  4203db:	push   ds
  4203dc:	aas    
  4203dd:	inc    ebx
  4203de:	sub    eax,0x8bd6bf45
  4203e3:	hlt    
  4203e4:	push   ds
  4203e5:	shl    BYTE PTR [eax],cl
  4203e7:	pusha  
  4203e8:	mov    edx,0x53fa09ba
  4203ed:	xlat   BYTE PTR ds:[ebx]
  4203ee:	ret    
  4203ef:	push   ecx
  4203f0:	mov    ebx,0x936130a
  4203f5:	rcl    BYTE PTR [ecx+ebx*8],cl
  4203f8:	in     al,0x72
  4203fa:	add    BYTE PTR [eax],al
  4203fc:	out    dx,al
  4203fd:	ret    0x2d9d
  420400:	mov    ebp,0x3fc3fe7f
  420405:	out    dx,eax
  420406:	mov    edi,0x53fb6037
  42040b:	push   eax
  42040c:	inc    eax
  42040d:	add    BYTE PTR [ecx],0x0
  420410:	xchg   BYTE PTR [edx],al
  420412:	add    BYTE PTR [eax],al
  420414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420415:	add    ch,BYTE PTR [esi-0x5b]
  420418:	pop    ecx
  420419:	push   ds
  42041a:	icebp  
  42041b:	out    dx,al
  42041c:	mov    esi,0x14c22125
  420421:	sahf   
  420422:	add    DWORD PTR [ebp+0x30],edx
  420425:	mov    WORD PTR [ecx+0x41],?
  420428:	cmp    BYTE PTR [eax],dh
  42042a:	pop    ds
  42042b:	lods   eax,DWORD PTR ds:[esi]
  42042c:	in     eax,dx
  42042d:	repz fimul DWORD PTR [ebp+ebp*8+0x615980a2]
  420435:	pop    esp
  420436:	dec    edx
  420437:	or     dl,BYTE PTR [esi+0x6ef2118b]
  42043d:	mov    dh,0x6a
  42043f:	(bad)  
  420440:	dec    edi
  420441:	pushf  
  420442:	adc    bl,0xbc
  420445:	int3   
  420446:	push   es
  420447:	xlat   BYTE PTR ds:[ebx]
  420448:	mov    DWORD PTR [ebp-0x1a],edx
  42044b:	jecxz  0x4203dc
  42044d:	gs or  esi,ebp
  420450:	mov    ecx,0x976443d4
  420455:	dec    eax
  420456:	cmc    
  420457:	(bad)  
  420458:	jnp    0x420426
  42045a:	lock xchg ebx,eax
  42045c:	ret    0x769f
  42045f:	je     0x4204c3
  420461:	pushf  
  420462:	sbb    eax,edi
  420464:	js     0x420419
  420466:	les    esp,FWORD PTR [edi+edi*2-0x22b38f23]
  42046d:	cmc    
  42046e:	fs push esp
  420470:	mov    cl,0x2a
  420472:	cmp    edi,DWORD PTR [esi-0x18]
  420475:	xchg   esi,eax
  420476:	pop    edi
  420477:	mov    esi,0x4b43b30
  42047c:	push   ecx
  42047d:	mov    al,0x1c
  42047f:	sbb    DWORD PTR [ecx+0x35904cd6],ebx
  420485:	pop    eax
  420486:	xlat   BYTE PTR ds:[ebx]
  420487:	dec    ecx
  420488:	cld    
  420489:	mov    ds:0xc06bbd60,eax
  42048e:	cmp    bh,ch
  420490:	mov    ecx,0xed03742d
  420495:	jnp    0x4204c5
  420497:	mov    ds:0x3ca0348,eax
  42049c:	imul   ecx,esi,0xfffffff3
  42049f:	lods   eax,DWORD PTR ds:[esi]
  4204a0:	ds in  al,dx
  4204a2:	sahf   
  4204a3:	das    
  4204a4:	(bad)  
  4204a5:	aaa    
  4204a6:	dec    esi
  4204a7:	clc    
  4204a8:	rcl    ah,cl
  4204aa:	cmp    BYTE PTR [ecx-0x1f],cl
  4204ad:	cwde   
  4204ae:	xchg   edx,eax
  4204af:	lds    esp,FWORD PTR [eax+eiz*2+0x4b]
  4204b3:	sub    DWORD PTR [esi],edi
  4204b5:	retf   
  4204b6:	mov    bh,0x2a
  4204b8:	pop    ecx
  4204b9:	lahf   
  4204ba:	sub    eax,0x29a7a33d
  4204bf:	xchg   esp,eax
  4204c0:	mov    ah,0x2e
  4204c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204c3:	lods   eax,DWORD PTR ds:[esi]
  4204c4:	(bad)  
  4204c5:	xor    DWORD PTR [edx+eiz*2],esp
  4204c8:	mov    cs,WORD PTR [eax-0x3c]
  4204cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204cc:	stos   BYTE PTR es:[edi],al
  4204cd:	loop   0x420519
  4204cf:	mov    ecx,ebx
  4204d1:	ds fs call 0x47d:0xefe4f394
  4204da:	add    ebp,DWORD PTR [ebx+eax*8-0x18d3cca2]
  4204e1:	lods   eax,DWORD PTR ds:[esi]
  4204e2:	lds    eax,FWORD PTR [ecx+0x29]
  4204e5:	fimul  WORD PTR [edi*2-0x6b7ac51a]
  4204ec:	in     al,0x58
  4204ee:	das    
  4204ef:	mov    ebx,0xb2b5e875
  4204f4:	std    
  4204f5:	sbb    cl,BYTE PTR [ecx]
  4204f7:	xchg   BYTE PTR [esi+0x61],dh
  4204fa:	addr16 push cs
  4204fc:	add    ebx,0x93a994ee
  420502:	push   esp
  420503:	outs   dx,BYTE PTR ds:[esi]
  420504:	xchg   esi,eax
  420505:	xchg   esi,eax
  420506:	sbb    edi,DWORD PTR [ebp-0x6f]
  420509:	sbb    eax,0x7b80f1e8
  42050e:	fisttp WORD PTR [edx-0x2190d05f]
  420514:	stos   BYTE PTR es:[edi],al
  420515:	adc    al,0xdc
  420517:	push   esp
  420518:	mov    bl,0xb7
  42051a:	sub    eax,0xce351a8b
  42051f:	jecxz  0x4204f3
  420521:	icebp  
  420522:	jl     0x4204cd
  420524:	adc    ecx,esi
  420526:	jmp    0xbf64973e
  42052b:	ret    0x5fa6
  42052e:	ficomp WORD PTR [esi-0x21c7106c]
  420534:	scas   eax,DWORD PTR es:[edi]
  420535:	add    DWORD PTR [ebp-0x3d],esp
  420538:	dec    edx
  420539:	neg    BYTE PTR [edi-0x17]
  42053c:	repz lds edx,FWORD PTR [ebp-0x1ebeac2c]
  420543:	loope  0x42054c
  420545:	xchg   ebp,eax
  420546:	or     ah,BYTE PTR [esi+ecx*4+0x9]
  42054a:	cmc    
  42054b:	mov    ah,0x62
  42054d:	scas   eax,DWORD PTR es:[edi]
  42054e:	push   0xffffff98
  420550:	in     al,0xc7
  420552:	xchg   esi,eax
  420553:	popa   
  420554:	test   ecx,ecx
  420556:	xchg   esp,eax
  420557:	push   es
  420558:	cmc    
  420559:	pop    esi
  42055a:	fs push 0xbd6b6c6b
  420560:	push   ebp
  420561:	xor    al,0x44
  420563:	cmp    BYTE PTR [ecx-0x41c84a72],cl
  420569:	into   
  42056a:	xor    al,BYTE PTR [edx+edx*2+0x50]
  42056e:	jno    0x4205ef
  420570:	sbb    dl,dh
  420572:	aad    0xe5
  420574:	repnz mov dl,0x6a
  420577:	pop    eax
  420578:	add    DWORD PTR [edi+ecx*1-0x70],ebp
  42057c:	aaa    
  42057d:	not    DWORD PTR [ebx+0x4d92c32c]
  420583:	dec    eax
  420584:	repnz mov DWORD PTR [edi],edi
  420587:	mov    ds,WORD PTR ds:0x5f53c062
  42058d:	(bad)  
  42058e:	retf   
  42058f:	pop    edi
  420590:	ds mov eax,0x66a30d71
  420596:	stos   BYTE PTR es:[edi],al
  420597:	lahf   
  420598:	mov    bh,0x8f
  42059a:	sub    eax,0x3e77fb10
  42059f:	push   esi
  4205a0:	jns    0x4205d8
  4205a2:	cmp    eax,0xc9a9e1ef
  4205a7:	js     0x4205c7
  4205a9:	xchg   BYTE PTR [esi+0x74],ch
  4205ac:	sbb    BYTE PTR [ebx],ah
  4205ae:	ss mov dl,0x6c
  4205b1:	add    DWORD PTR [ebp+esi*1-0x15ec9684],ebp
  4205b8:	or     bl,BYTE PTR [ebp-0x788cf671]
  4205be:	add    DWORD PTR [ecx+0x20e89c0f],edx
  4205c4:	sbb    BYTE PTR [ebx-0x2abd5e24],0x0
  4205cb:	loopne 0x420643
  4205cd:	loopne 0x420580
  4205cf:	sbb    esp,0x25
  4205d2:	fwait
  4205d3:	repnz cwde 
  4205d5:	loope  0x420641
  4205d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205d8:	out    dx,eax
  4205d9:	inc    eax
  4205da:	sub    esi,DWORD PTR [ecx-0x4e53799f]
  4205e0:	inc    esi
  4205e1:	mov    dh,0xda
  4205e3:	test   eax,edi
  4205e5:	(bad)  
  4205e7:	shl    DWORD PTR [edi],cl
  4205e9:	mov    ebp,0x36470d0a
  4205ee:	push   ecx
  4205ef:	into   
  4205f0:	mov    ah,dl
  4205f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205f3:	jge    0x420626
  4205f5:	jns    0x420666
  4205f7:	inc    esp
  4205f8:	leave  
  4205f9:	aam    0x81
  4205fb:	aad    0x27
  4205fd:	nop
  4205fe:	mov    ebp,0xc038eec8
  420603:	daa    
  420604:	dec    esi
  420605:	pop    ebp
  420606:	(bad)  
  420607:	out    0x6f,al
  420609:	aam    0xe1
  42060b:	bound  eax,QWORD PTR [ebx+0x3f65b6c9]
  420611:	pusha  
  420612:	push   ss
  420613:	mov    bh,0x6b
  420615:	hlt    
  420616:	aam    0xe
  420618:	gs stos DWORD PTR es:[edi],eax
  42061a:	push   edx
  42061b:	ficomp WORD PTR [edx+0x392e26b6]
  420621:	mov    ss,WORD PTR [ecx+0x3f]
  420624:	dec    esp
  420625:	mov    al,BYTE PTR [ecx]
  420627:	cwde   
  420628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420629:	jnp    0x420683
  42062b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42062c:	add    al,0x72
  42062e:	add    ecx,DWORD PTR [edi+0x70fbaf2b]
  420634:	lock adc esp,ecx
  420637:	pusha  
  420638:	adc    al,0xe6
  42063a:	jle    0x420699
  42063c:	ds pop ss
  42063e:	ja     0x420617
  420640:	lock (bad) [edi]
  420643:	test   BYTE PTR [ecx-0x4f642121],ah
  420649:	add    eax,0xac36d47a
  42064e:	jnp    0x420693
  420650:	sbb    eax,0x84f0c775
  420655:	xchg   edi,eax
  420657:	cwde   
  420658:	fstp   DWORD PTR [edi-0x52]
  42065b:	pop    edi
  42065c:	cwde   
  42065d:	gs jnp 0x420693
  420660:	(bad)
  420664:	ret    0x9d6c
  420667:	dec    ebp
  420668:	or     bh,ch
  42066a:	shl    BYTE PTR [ebp-0x7fa840df],0xee
  420671:	xor    al,0x1a
  420673:	sub    al,0xa8
  420675:	jmp    0xf12e9e22
  42067a:	and    DWORD PTR [esi],0xc14d1857
  420680:	lods   eax,DWORD PTR ds:[esi]
  420681:	out    0x5b,eax
  420683:	sbb    edi,DWORD PTR [esi]
  420685:	push   eax
  420686:	fwait
  420687:	mov    ch,0x9b
  420689:	fidivr DWORD PTR [edi-0x2b055325]
  42068f:	and    ebx,ecx
  420691:	xor    dh,BYTE PTR [edx-0x1c2d955c]
  420697:	imul   cl
  420699:	xor    BYTE PTR [eax],al
  42069b:	add    BYTE PTR [ebx-0x2a],dl
  42069e:	(bad)  
  42069f:	push   esi
  4206a0:	(bad)  
  4206a1:	jle    0x42069e
  4206a3:	xlat   BYTE PTR ds:[ebx]
  4206a4:	outs   dx,DWORD PTR ds:[esi]
  4206a5:	mov    ah,0x77
  4206a7:	call   0x82c6:0xd00e8b66
  4206ae:	add    DWORD PTR [eax],eax
  4206b0:	xchg   BYTE PTR [edx],al
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	push   edi
  4206b5:	dec    edx
  4206b6:	out    dx,eax
  4206b7:	adc    DWORD PTR [edi-0x385586c6],edi
  4206bd:	sub    esi,0xb03ab83a
  4206c3:	inc    eax
  4206c4:	sti    
  4206c5:	fld    TBYTE PTR [ebx+0x695ba06b]
  4206cb:	mov    esi,0xd71f5bfc
  4206d0:	inc    edx
  4206d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206d2:	icebp  
  4206d3:	cmp    BYTE PTR [ebx+ebp*8],bl
  4206d6:	test   eax,0x5a33b832
  4206db:	shl    BYTE PTR [edi-0x62],0x5d
  4206df:	dec    edx
  4206e0:	call   0xda265d7d
  4206e5:	xor    dl,BYTE PTR [eax+0x3141a86b]
  4206eb:	pusha  
  4206ec:	neg    DWORD PTR [edx]
  4206ee:	hlt    
  4206ef:	daa    
  4206f0:	cmp    BYTE PTR [eax-0x1f349615],0x20
  4206f7:	mov    dh,0xd5
  4206f9:	enter  0xb878,0xf
  4206fd:	jno    0x42068e
  4206ff:	int3   
  420700:	sbb    BYTE PTR [bp+si],ch
  420703:	(bad)  
  420704:	js     0x4206c1
  420706:	jb     0x42076a
  420708:	out    dx,al
  420709:	loopne 0x420708
  42070b:	adc    ch,BYTE PTR [edx+0x63]
  42070e:	and    eax,esp
  420710:	dec    edi
  420711:	add    dh,BYTE PTR [ecx]
  420713:	mov    ebx,0x8085d3ef
  420718:	mov    dh,0x45
  42071a:	add    al,0x6c
  42071c:	adc    al,BYTE PTR [eax-0x71]
  42071f:	cwde   
  420720:	fisubr DWORD PTR [esi]
  420722:	push   ss
  420723:	mov    dh,0xd2
  420725:	out    0xc4,eax
  420727:	lock pop ds
  420729:	pushf  
  42072a:	aad    0xf9
  42072c:	retf   0x3c22
  42072f:	loop   0x42072e
  420731:	fs stos DWORD PTR es:[edi],eax
  420733:	mov    cl,BYTE PTR [esp+eax*8+0x40a9ec4d]
  42073a:	in     al,dx
  42073b:	add    ch,BYTE PTR [ebp-0x42ec1370]
  420741:	add    esp,esi
  420743:	test   BYTE PTR [edx],cl
  420745:	or     BYTE PTR [edi-0x7d],dl
  420748:	and    ecx,0x30
  42074b:	pop    esp
  42074c:	pop    esi
  42074d:	sub    BYTE PTR [esi],bh
  42074f:	mov    eax,ds:0x5afb6a7b
  420754:	jle    0x420704
  420756:	xor    eax,0xc8db3065
  42075b:	sub    BYTE PTR ds:0xbc5ca241,ah
  420761:	in     al,0x50
  420763:	add    DWORD PTR [edx+0x158cc568],ecx
  420769:	inc    edx
  42076a:	mov    dh,0xed
  42076c:	pop    ecx
  42076e:	aas    
  42076f:	push   ebp
  420770:	mov    ebp,0x726e6da4
  420775:	test   DWORD PTR [esi],eax
  420777:	dec    edx
  420778:	stos   DWORD PTR es:[edi],eax
  420779:	leave  
  42077a:	or     BYTE PTR [edi-0x32],bh
  42077d:	mov    dl,0x66
  42077f:	adc    ebx,DWORD PTR [eax-0x9]
  420782:	aad    0xb2
  420784:	sbb    eax,0x42d0b7e0
  420789:	push   edx
  42078a:	mov    dh,0x67
  42078c:	rcl    BYTE PTR [edi+0x2a],cl
  42078f:	xchg   edi,eax
  420790:	shl    BYTE PTR [ebp+0x6e2784c5],cl
  420796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420797:	jp     0x4207a4
  420799:	xchg   edi,eax
  42079a:	or     BYTE PTR [ebx-0xfe9c7e],ch
  4207a0:	iret   
  4207a1:	dec    eax
  4207a2:	cmp    eax,0x53b2c228
  4207a7:	repnz add eax,0x67742d03
  4207ad:	dec    bp
  4207af:	jne    0x42075c
  4207b1:	into   
  4207b2:	sbb    al,0xd1
  4207b4:	leave  
  4207b5:	outs   dx,DWORD PTR ds:[esi]
  4207b6:	into   
  4207b7:	push   cs
  4207b8:	sar    BYTE PTR [edx],cl
  4207ba:	sbb    DWORD PTR [eax],eax
  4207bc:	mov    edx,DWORD PTR [esi-0x26a20c59]
  4207c2:	adc    eax,0xd0868918
  4207c7:	push   eax
  4207c8:	rcr    BYTE PTR [ebx-0x1cb6e908],cl
  4207ce:	adc    eax,0xea91ae98
  4207d3:	rcr    edi,cl
  4207d5:	sbb    DWORD PTR [esi+ebp*8+0x2d2c3e6c],esp
  4207dc:	jg     0x420859
  4207de:	cs mov ebx,0xab59e36d
  4207e4:	lock daa 
  4207e6:	repnz xor ch,bh
  4207e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ea:	mov    eax,0x578e9608
  4207ef:	cmp    edx,DWORD PTR [ecx]
  4207f1:	gs test al,0x71
  4207f4:	push   ss
  4207f5:	push   ds
  4207f6:	and    DWORD PTR [ecx-0x509a007],0xffffffa3
  4207fd:	int3   
  4207fe:	daa    
  4207ff:	(bad)  
  420800:	aad    0xc0
  420802:	fsub   DWORD PTR [ebp-0x7907bced]
  420808:	je     0x4207f0
  42080a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42080b:	dec    esp
  42080c:	aas    
  42080d:	test   BYTE PTR [edi+0x7],cl
  420810:	sub    al,0x7c
  420812:	and    BYTE PTR [edx+0x49],ch
  420815:	(bad)  
  420816:	sbb    al,0x6d
  420818:	lods   eax,DWORD PTR ds:[esi]
  420819:	add    BYTE PTR [ebp+0x31ba60c6],al
  42081f:	mov    ebp,0xac00b22f
  420824:	fidivr WORD PTR [edx]
  420826:	adc    bl,BYTE PTR [ebx]
  420828:	mov    ebx,0x2afcfcb0
  42082d:	shl    esi,0x3c
  420830:	test   al,0x2a
  420832:	ror    DWORD PTR [ebx+ebx*4+0x3b],cl
  420836:	fldenv [ebp-0x44b3272d]
  42083c:	pop    eax
  42083d:	pop    es
  42083e:	shl    BYTE PTR [eax],cl
  420840:	int    0xb4
  420842:	add    BYTE PTR [eax],ah
  420844:	jnp    0x4208b9
  420846:	into   
  420847:	lods   eax,DWORD PTR ds:[esi]
  420848:	xchg   DWORD PTR [edi+eax*4],ecx
  42084b:	inc    edi
  42084c:	das    
  42084d:	neg    DWORD PTR [edx]
  42084f:	call   0xa29e:0x5f81bc3c
  420856:	bnd jg 0x42084b
  420859:	iret   
  42085a:	sub    ecx,DWORD PTR [eax+0x65]
  42085d:	xor    eax,0x7924e40
  420862:	or     edi,DWORD PTR [edi-0x6c]
  420865:	or     BYTE PTR [eax+0x2286cf48],bh
  42086b:	dec    ebp
  42086c:	add    BYTE PTR [ebx],ch
  42086e:	jle    0x42088e
  420870:	dec    edx
  420871:	lea    edi,[edi+eax*2+0x3eebbb02]
  420878:	(bad)  
  420879:	xchg   esi,eax
  42087a:	xchg   BYTE PTR [esi],al
  42087c:	or     al,0xe0
  42087e:	aad    0xa9
  420880:	mov    ds:0x9001de46,eax
  420885:	mov    ecx,esp
  420887:	push   edi
  420888:	xor    al,ah
  42088a:	jl     0x4208ec
  42088c:	pop    es
  42088d:	bound  ebx,QWORD PTR [edi-0x152a1458]
  420893:	inc    ecx
  420894:	loope  0x42083d
  420896:	mov    ebp,0xa6a5d996
  42089b:	out    dx,al
  42089c:	or     esp,DWORD PTR [ecx-0x6b]
  42089f:	in     eax,0x72
  4208a1:	jmp    0xfad40629
  4208a6:	dec    esp
  4208a7:	inc    eax
  4208a8:	addr16 inc ebp
  4208aa:	jb     0x4208ff
  4208ac:	xor    bh,cl
  4208ae:	xchg   ecx,eax
  4208af:	adc    bl,BYTE PTR [esi]
  4208b1:	scas   al,BYTE PTR es:[edi]
  4208b2:	xor    DWORD PTR [edx],ecx
  4208b4:	call   0x9428:0x1ec6cebc
  4208bb:	pusha  
  4208bc:	xor    al,0x7c
  4208be:	shl    BYTE PTR [eax-0x255f041c],cl
  4208c4:	or     al,0xbf
  4208c6:	aam    0xa4
  4208c8:	iret   
  4208c9:	lea    ebp,[edi+0x69]
  4208cc:	push   ds
  4208cd:	data16 jecxz 0x4208de
  4208d0:	out    0xfe,al
  4208d2:	in     eax,0xc7
  4208d4:	push   ebx
  4208d5:	mov    bh,0x7
  4208d7:	xchg   ecx,eax
  4208d8:	push   ebx
  4208d9:	(bad)
  4208dd:	add    al,0x49
  4208df:	into   
  4208e0:	out    dx,al
  4208e1:	or     BYTE PTR [esi-0x37],ah
  4208e4:	daa    
  4208e5:	xchg   esi,eax
  4208e6:	idiv   BYTE PTR [ecx+0x72101420]
  4208ec:	add    BYTE PTR [ebx+0x69],0xdc
  4208f0:	sbb    dl,BYTE PTR [edx-0x7c]
  4208f3:	lahf   
  4208f4:	jge    0x420929
  4208f6:	adc    esi,DWORD PTR [ecx-0x36ecdebc]
  4208fc:	stos   BYTE PTR es:[edi],al
  4208fd:	mov    esp,0x4eb200f1
  420902:	or     BYTE PTR [edx+0x38e707b7],bl
  420908:	in     al,0x3d
  42090a:	dec    ebx
  42090b:	xor    ebx,DWORD PTR [edx]
  42090d:	gs pushf 
  42090f:	icebp  
  420910:	pop    es
  420911:	enter  0x7a21,0x53
  420915:	sub    ch,al
  420917:	call   0xfa76e2c2
  42091c:	nop
  42091d:	nop
  42091e:	mov    ch,al
  420920:	or     ah,BYTE PTR [ecx]
  420922:	add    ch,ah
  420924:	pop    ebp
  420925:	dec    eax
  420926:	ds mov cl,0x5
  420929:	dec    ecx
  42092a:	ins    BYTE PTR es:[edi],dx
  42092b:	repnz (bad) 
  42092d:	sbb    ecx,DWORD PTR [ebx-0x3f7fad23]
  420933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420934:	test   al,0x67
  420936:	popa   
  420937:	jae    0x420919
  420939:	push   es
  42093a:	add    BYTE PTR [eax],al
  42093c:	adc    DWORD PTR [esi],ecx
  42093e:	or     dl,ch
  420940:	pop    ds
  420941:	out    dx,al
  420942:	repz jmp FWORD PTR [edi-0x6730fbda]
  420949:	dec    edx
  42094a:	add    eax,0x1854cb0
  42094f:	add    BYTE PTR [esi-0x1fffffe],al
  420955:	mov    ecx,0xf9243a42
  42095a:	aam    0xb1
  42095c:	mov    ebp,0x73e58fbf
  420961:	adc    DWORD PTR [eax-0x1737aa38],0xabd57c08
  42096b:	sub    ecx,DWORD PTR [esi-0x52ebde7]
  420971:	fmul   DWORD PTR [esi]
  420973:	fstp   st(0)
  420975:	int    0x88
  420977:	inc    ebx
  420978:	mov    eax,0x881df492
  42097d:	sbb    cl,BYTE PTR [ebx]
  42097f:	push   ecx
  420980:	jle    0x42090d
  420982:	add    al,0xab
  420984:	xchg   esi,eax
  420985:	sahf   
  420986:	xchg   ecx,eax
  420987:	jae    0x420986
  420989:	icebp  
  42098a:	pusha  
  42098b:	repz repnz mov cl,0x5b
  42098f:	shr    BYTE PTR [eax+0x7],0x49
  420993:	shl    DWORD PTR [ebx],cl
  420995:	cmp    BYTE PTR [ecx-0x77],bh
  420998:	(bad)  
  420999:	(bad)  
  42099a:	test   al,0xd3
  42099c:	xchg   ecx,eax
  42099d:	mul    BYTE PTR [esi]
  42099f:	mov    WORD PTR [esi+0x4a],ss
  4209a2:	dec    edi
  4209a3:	xchg   ebp,eax
  4209a4:	rcl    BYTE PTR [eax-0xf],0xad
  4209a8:	cmp    eax,0x77814ab1
  4209ad:	cli    
  4209ae:	adc    esp,esi
  4209b0:	std    
  4209b1:	movntq (bad),mm0
  4209b2:	out    0xc0,eax
  4209b4:	(bad)  
  4209b5:	idiv   DWORD PTR [ebp-0x74]
  4209b8:	dec    edi
  4209b9:	ret    0x16eb
  4209bc:	mov    dl,0x24
  4209be:	xchg   ebx,eax
  4209bf:	stos   DWORD PTR es:[edi],eax
  4209c0:	shld   DWORD PTR [esi-0x5fdee185],esi,0x7a
  4209c8:	ins    DWORD PTR es:[edi],dx
  4209c9:	outs   dx,DWORD PTR ds:[esi]
  4209ca:	shl    BYTE PTR cs:[edi-0x3],cl
  4209ce:	repnz inc edi
  4209d0:	fcomp  st(2)
  4209d3:	xchg   DWORD PTR ds:0x606fb5dc,ecx
  4209d9:	test   BYTE PTR [ebx-0x43],bl
  4209dc:	sbb    BYTE PTR [ebx+0x252c0959],ch
  4209e2:	mov    ch,0x4b
  4209e4:	cmc    
  4209e5:	ins    DWORD PTR es:[edi],dx
  4209e6:	pop    edx
  4209e7:	sbb    dh,bh
  4209e9:	dec    edi
  4209ea:	adc    DWORD PTR [esi+eax*2-0x1f],0x1c
  4209ef:	pusha  
  4209f0:	fnstsw WORD PTR [esi-0x5c]
  4209f3:	or     bh,al
  4209f5:	jmp    0x3c3f:0x150a830d
  4209fc:	fs jle 0x420a53
  4209ff:	aas    
  420a00:	jne    0x420a79
  420a02:	mov    ebp,0xe76afff4
  420a07:	paddsw mm5,QWORD PTR [ebx]
  420a0a:	pop    ss
  420a0b:	ins    DWORD PTR es:[edi],dx
  420a0c:	rol    DWORD PTR [ecx-0x1d],1
  420a0f:	retf   
  420a10:	(bad)  
  420a11:	cmp    al,0x16
  420a13:	push   ebx
  420a14:	mov    ah,0x3e
  420a16:	lods   al,BYTE PTR ds:[esi]
  420a17:	aad    0xf1
  420a19:	xor    DWORD PTR [edx+0x12ee984c],esp
  420a1f:	mov    ebp,0x24ac96b3
  420a24:	in     eax,0x7c
  420a26:	in     eax,0xae
  420a28:	int3   
  420a29:	call   0xbfc0c26c
  420a2e:	cmp    edx,DWORD PTR [ebp+0x49]
  420a31:	mov    dh,0x18
  420a33:	add    eax,0xe1d7c908
  420a38:	fucomip st,st(5)
  420a3a:	ret    0x2b51
  420a3d:	cld    
  420a3e:	sbb    esp,DWORD PTR [ebp+0x10283aed]
  420a44:	mov    ds:0xcf5fcd0f,al
  420a49:	call   DWORD PTR ds:0x94400147
  420a4f:	dec    esp
  420a50:	mov    edx,0x9d8f92b3
  420a55:	pop    ebx
  420a56:	data16 xor bl,ch
  420a59:	lock pop esp
  420a5b:	in     al,0xb6
  420a5d:	or     edx,DWORD PTR [ebp+eiz*8+0x26]
  420a61:	ins    DWORD PTR es:[edi],dx
  420a62:	(bad)  
  420a64:	mov    ds:0x91c3a855,eax
  420a69:	xor    al,0x93
  420a6b:	dec    ecx
  420a6c:	shl    BYTE PTR [ebp+0x450c476],1
  420a72:	cmp    BYTE PTR [ebp+0x2b83694f],ah
  420a78:	mov    ch,0x1d
  420a7a:	data16 sahf 
  420a7c:	lods   eax,DWORD PTR ds:[esi]
  420a7d:	pop    es
  420a7e:	ins    BYTE PTR es:[edi],dx
  420a7f:	and    ax,0xee14
  420a83:	loope  0x420ab8
  420a85:	fistp  QWORD PTR [edx+0x58]
  420a88:	shl    DWORD PTR [edx-0x7],0xbb
  420a8c:	sub    cl,dl
  420a8e:	repnz stos BYTE PTR es:[edi],al
  420a90:	add    eax,0xdf6dbaa7
  420a95:	out    dx,al
  420a96:	mov    bl,bl
  420a98:	push   cs
  420a99:	leave  
  420a9a:	pop    esi
  420a9b:	mov    eax,0xebd9d9d6
  420aa0:	pop    eax
  420aa1:	xchg   esi,eax
  420aa2:	jne    0x420a3f
  420aa4:	jl     0x420a74
  420aa6:	xchg   ecx,eax
  420aa7:	jle    0x420b08
  420aa9:	and    ecx,eax
  420aab:	or     eax,0x41f2cc25
  420ab0:	sbb    eax,0x6ba61b9e
  420ab5:	or     DWORD PTR [esp+ebx*4+0xd],esi
  420ab9:	mov    gs,WORD PTR [esi-0x55]
  420abc:	imul   esp,DWORD PTR [edi-0x25541e61],0x4e21fe9
  420ac6:	div    edi
  420ac8:	mov    dh,0x16
  420aca:	cmp    BYTE PTR [eax+0x3ef9eeeb],dh
  420ad0:	mov    eax,ds:0x558a55fe
  420ad5:	xchg   ecx,eax
  420ad6:	pusha  
  420ad7:	add    al,0x98
  420ad9:	pop    esp
  420ada:	jno    0x420adc
  420adc:	test   DWORD PTR [edx+0x5f884d73],esi
  420ae2:	pop    ss
  420ae3:	jo     0x420b09
  420ae5:	push   ebx
  420ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae7:	test   al,0xa5
  420ae9:	rol    DWORD PTR [ecx],1
  420aeb:	jg     0x420aea
  420aed:	das    
  420aee:	ret    
  420aef:	aam    0xdc
  420af1:	sub    eax,0x690d543f
  420af6:	mov    dh,0xf3
  420af8:	or     al,0xaa
  420afa:	daa    
  420afb:	out    dx,al
  420afc:	jge    0x420b04
  420afe:	outs   dx,BYTE PTR ds:[esi]
  420aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b00:	sbb    eax,0xb7590d4a
  420b05:	mov    esi,0xfb24af77
  420b0a:	test   BYTE PTR [eax-0x1c],dh
  420b0d:	lods   al,BYTE PTR ds:[esi]
  420b0e:	(bad)  
  420b10:	mov    cl,0xc7
  420b12:	dec    eax
  420b13:	and    ebp,DWORD PTR [eax-0x4c]
  420b16:	out    dx,al
  420b17:	clc    
  420b18:	je     0x420aa3
  420b1a:	fbstp  TBYTE PTR [eax-0x5dbc4c20]
  420b20:	cmp    eax,0x9f97f050
  420b25:	ins    DWORD PTR es:[edi],dx
  420b26:	cmp    BYTE PTR [eax-0x1967ef40],cl
  420b2c:	cdq    
  420b2d:	rcl    DWORD PTR [esi],1
  420b2f:	and    eax,0x5341eddc
  420b34:	adc    DWORD PTR [edi-0x6652c6fe],eax
  420b3a:	jmp    0x420aea
  420b3c:	sbb    ah,BYTE PTR [edx+0x55]
  420b3f:	mov    WORD PTR [ecx+0x4b],gs
  420b42:	jle    0x420bbc
  420b44:	ins    DWORD PTR es:[edi],dx
  420b45:	int    0xc6
  420b47:	setb   bl
  420b4a:	mov    cl,0xb8
  420b4c:	loop   0x420b60
  420b4e:	push   0x31
  420b50:	sbb    al,0xfe
  420b52:	pushf  
  420b53:	enter  0xede8,0x45
  420b57:	or     eax,0xa4c3fa68
  420b5c:	mov    ecx,0x7f7ff895
  420b61:	jmp    0x2a38:0x9530375b
  420b68:	mov    fs,WORD PTR [ebp+esi*2-0x539901d5]
  420b6f:	dec    DWORD PTR [edi]
  420b71:	cwde   
  420b72:	add    DWORD PTR [edi-0x47],esi
  420b75:	pop    ecx
  420b76:	call   0x279e:0xdb5f086d
  420b7d:	icebp  
  420b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b7f:	inc    edi
  420b80:	(bad)  
  420b81:	ins    BYTE PTR es:[edi],dx
  420b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b83:	inc    ebp
  420b84:	sbb    DWORD PTR [eax-0x30],edi
  420b87:	push   esi
  420b88:	dec    esi
  420b89:	pop    es
  420b8a:	adc    eax,0xd4bc2101
  420b8f:	mov    ebx,0x788a5f9e
  420b94:	cmp    BYTE PTR [edi+0x68d053d3],cl
  420b9a:	nop
  420b9b:	stc    
  420b9c:	loopne 0x420bee
  420b9e:	adc    al,0xef
  420ba0:	rcl    DWORD PTR [eax],cl
  420ba2:	pop    esp
  420ba3:	jmp    0x6e7c9505
  420ba8:	loope  0x420ba2
  420baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bab:	aas    
  420bac:	lods   al,BYTE PTR ds:[esi]
  420bad:	pop    ebp
  420bae:	repz mov al,ds:0x4d14dfd9
  420bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bb5:	lea    ecx,[ecx-0x2828c63]
  420bbb:	xchg   ebx,eax
  420bbc:	mov    bh,0xaa
  420bbe:	mov    edx,0x79e8b548
  420bc3:	(bad)  
  420bc4:	out    0xc8,al
  420bc6:	jnp    0x420bfe
  420bc8:	test   DWORD PTR [edi+0x2d],esi
  420bcb:	ret    0x6f3e
  420bce:	xor    esi,DWORD PTR [eax+0x74]
  420bd1:	push   ecx
  420bd2:	inc    ecx
  420bd3:	sbb    al,0x25
  420bd5:	sub    esp,DWORD PTR [eax]
  420bd7:	xchg   ebx,eax
  420bd8:	sbb    edx,eax
  420bda:	add    BYTE PTR [eax],al
  420bdc:	leave  
  420bdd:	xchg   esi,eax
  420bde:	ins    DWORD PTR es:[edi],dx
  420bdf:	mov    dh,0x7f
  420be1:	(bad)  
  420be2:	(bad)  
  420be4:	aam    0xd9
  420be6:	inc    ebx
  420be7:	fmul   st,st(7)
  420be9:	jnp    0x420c5a
  420beb:	int3   
  420bec:	rol    BYTE PTR [edi+0x2860001],cl
  420bf2:	add    BYTE PTR [eax],al
  420bf4:	adc    ecx,eax
  420bf6:	and    ebp,DWORD PTR [eax-0x40]
  420bf9:	aas    
  420bfa:	rcr    DWORD PTR [eax],cl
  420bfc:	mov    edi,0x3c712999
  420c01:	cs push 0x5696b062
  420c07:	inc    esi
  420c08:	ja     0x420c89
  420c0a:	sbb    dh,0xa8
  420c0d:	ins    BYTE PTR es:[edi],dx
  420c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c0f:	stos   BYTE PTR es:[edi],al
  420c10:	ficom  WORD PTR [edx-0x19d12d6c]
  420c16:	rep stos BYTE PTR es:[edi],al
  420c18:	jbe    0x420c07
  420c1a:	rol    BYTE PTR [edi+0x2f],0x82
  420c1e:	or     eax,0xca2cff34
  420c23:	ret    
  420c24:	out    0x66,eax
  420c26:	jb     0x420bab
  420c28:	cmp    edi,DWORD PTR [edi+0x5a]
  420c2b:	(bad)  
  420c2c:	cs pop ebp
  420c2e:	push   eax
  420c2f:	xchg   ecx,eax
  420c30:	retf   
  420c31:	inc    eax
  420c32:	mov    BYTE PTR [ecx],bl
  420c34:	push   esp
  420c35:	ins    BYTE PTR es:[edi],dx
  420c36:	adc    ecx,ebp
  420c38:	and    eax,0xd206fb57
  420c3d:	in     eax,0xe7
  420c3f:	fimul  DWORD PTR [edi+0x7ce92d8a]
  420c45:	push   ebx
  420c46:	add    eax,0xeffc6a76
  420c4b:	frstor [ebx]
  420c4d:	mov    al,ds:0x6bb56719
  420c52:	(bad)  [ebp+0x7e]
  420c55:	jae    0x420c3f
  420c57:	add    al,0x1f
  420c59:	je     0x420c7b
  420c5b:	outs   dx,BYTE PTR ds:[esi]
  420c5c:	xor    cl,BYTE PTR [edx+0x70]
  420c5f:	xchg   BYTE PTR [edx-0x24],cl
  420c62:	arpl   bp,di
  420c64:	inc    edx
  420c65:	cdq    
  420c66:	aaa    
  420c67:	sar    BYTE PTR [esi],1
  420c69:	arpl   WORD PTR [esi+0x18],dx
  420c6c:	(bad)  
  420c6d:	push   eax
  420c6e:	div    DWORD PTR [edi-0x5b]
  420c71:	les    ebx,FWORD PTR [ebx+0x659245a5]
  420c77:	bound  esi,QWORD PTR [ecx-0x2114265d]
  420c7d:	and    edi,edx
  420c7f:	mul    BYTE PTR [edx]
  420c81:	mov    edi,0x6bf5f1d3
  420c86:	xor    al,0xe
  420c88:	push   cs
  420c89:	jge    0x420c59
  420c8b:	std    
  420c8c:	push   0x6d
  420c8e:	arpl   WORD PTR [edx+0x16],bp
  420c91:	test   edi,ebx
  420c93:	and    DWORD PTR [edi+ebp*2],ebx
  420c96:	sub    ebx,DWORD PTR [esi]
  420c98:	pop    ds
  420c99:	mov    bl,0x59
  420c9b:	or     BYTE PTR [ecx-0x60],dl
  420c9e:	mov    bl,0x59
  420ca0:	rcl    BYTE PTR [ecx],cl
  420ca2:	sub    eax,0x6b106fcb
  420ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ca8:	mov    dh,BYTE PTR [ebx]
  420caa:	xchg   BYTE PTR [ebx-0x159c3b0d],cl
  420cb0:	inc    edx
  420cb1:	sub    DWORD PTR [ebp+0x30],edx
  420cb4:	sti    
  420cb5:	mov    al,ds:0x8de7e8e5
  420cba:	ret    
  420cbb:	call   0xb9a31c3b
  420cc0:	shr    DWORD PTR [eax+esi*8+0x59],cl
  420cc4:	mov    ch,0x44
  420cc6:	pop    esp
  420cc7:	push   es
  420cc8:	call   0x3bce:0x783cebfb
  420ccf:	lods   al,BYTE PTR ds:[esi]
  420cd0:	in     al,dx
  420cd1:	les    esp,FWORD PTR [eax+edx*8-0x12]
  420cd5:	repnz aas 
  420cd7:	rol    BYTE PTR [ecx],cl
  420cd9:	cs push es
  420cdb:	lods   al,BYTE PTR ds:[esi]
  420cdc:	es jbe 0x420d0d
  420cdf:	bnd jb 0x420d36
  420ce2:	pop    ecx
  420ce3:	addr16 cmp al,0x84
  420ce6:	push   ss
  420ce7:	jp     0x420d03
  420ce9:	test   al,0x4d
  420ceb:	loopne 0x420d39
  420ced:	push   esp
  420cee:	(bad)  
  420cf0:	(bad)  
  420cf1:	xchg   ebp,eax
  420cf2:	pop    ds
  420cf3:	stos   BYTE PTR es:[edi],al
  420cf4:	jno    0x420d28
  420cf6:	dec    eax
  420cf7:	(bad)  
  420cf8:	fwait
  420cf9:	push   edi
  420cfa:	jl     0x420c93
  420cfc:	or     BYTE PTR [edi+0x133800d0],0x8e
  420d03:	out    0x9,eax
  420d05:	cld    
  420d06:	xchg   esp,eax
  420d07:	jns    0x420d49
  420d09:	clc    
  420d0a:	aam    0xaf
  420d0c:	ret    
  420d0d:	xchg   esp,eax
  420d0e:	jo     0x420d1e
  420d10:	adc    ah,BYTE PTR [edx]
  420d12:	jg     0x420cb7
  420d14:	xchg   esp,eax
  420d15:	sbb    eax,0xd8bc8e79
  420d1a:	xor    dl,dh
  420d1c:	std    
  420d1d:	pop    edx
  420d1e:	aas    
  420d1f:	sbb    BYTE PTR [esi],ah
  420d21:	xor    BYTE PTR [ecx-0x357a27fc],0x13
  420d28:	mov    cl,0x9f
  420d2a:	jae    0x420d19
  420d2c:	out    dx,al
  420d2d:	dec    ebp
  420d2e:	push   ss
  420d2f:	mov    eax,0x5b3890c9
  420d34:	mov    WORD PTR [edi],ss
  420d36:	int3   
  420d37:	push   DWORD PTR [edx+0x6b63ed57]
  420d3d:	mov    ebx,0xd6418f32
  420d42:	inc    edi
  420d43:	jg     0x420ce8
  420d45:	stos   BYTE PTR es:[edi],al
  420d46:	inc    ecx
  420d47:	push   esp
  420d48:	sahf   
  420d49:	loop   0x420cf5
  420d4b:	jp     0x420dca
  420d4d:	inc    esp
  420d4e:	add    ah,bh
  420d50:	add    DWORD PTR [ebx],edx
  420d52:	xlat   BYTE PTR ds:[ebx]
  420d53:	push   ds
  420d54:	(bad)  
  420d55:	pop    esp
  420d56:	std    
  420d57:	jo     0x420d4e
  420d59:	into   
  420d5a:	add    DWORD PTR [esi-0x30],edi
  420d5d:	das    
  420d5e:	mov    bh,0x69
  420d60:	or     al,0x29
  420d62:	mov    ebp,0xb2f485c5
  420d67:	push   esi
  420d68:	mul    DWORD PTR [esi-0x44cb89ed]
  420d6e:	fwait
  420d6f:	(bad)  
  420d70:	shl    BYTE PTR [edi],1
  420d72:	lods   eax,DWORD PTR ds:[esi]
  420d73:	sbb    ah,dl
  420d75:	shl    ebx,0x8a
  420d78:	imul   edi,DWORD PTR [ecx],0xbb8b91a6
  420d7e:	mov    esp,0x9c74a56a
  420d83:	push   esi
  420d84:	test   al,0xf9
  420d86:	call   0x5f93f042
  420d8b:	imul   ebx,DWORD PTR [ecx+edi*8],0x606094a6
  420d92:	das    
  420d93:	sub    bh,BYTE PTR [edx]
  420d95:	xor    al,0x51
  420d97:	out    dx,eax
  420d98:	push   cs
  420d99:	sahf   
  420d9a:	sbb    eax,0x34a294ee
  420d9f:	imul   ecx,DWORD PTR [eax+0x7a],0x54b6e82c
  420da6:	jp     0x420e0c
  420da8:	push   esp
  420da9:	jns    0x420d5b
  420dab:	sti    
  420dac:	or     DWORD PTR [ebx-0x26],esp
  420daf:	cmp    BYTE PTR [edx+0x74],al
  420db2:	(bad)  
  420db3:	in     eax,dx
  420db4:	mov    al,0x40
  420db6:	and    BYTE PTR [edx+0x3c],dh
  420db9:	inc    edx
  420dba:	test   al,0x82
  420dbc:	cs jg  0x420d79
  420dbf:	clc    
  420dc0:	test   al,0xe8
  420dc2:	xor    eax,edi
  420dc4:	cmp    DWORD PTR [ebx],esp
  420dc6:	loop   0x420de0
  420dc8:	add    edi,DWORD PTR [edi+0x7b443d46]
  420dce:	addr16 mov esi,0x745f8187
  420dd4:	loop   0x420dfb
  420dd6:	jbe    0x420e2e
  420dd8:	mov    ch,0xbf
  420dda:	inc    edx
  420ddb:	int    0x66
  420ddd:	push   eax
  420dde:	xor    edi,DWORD PTR [esi+0x2c69a906]
  420de4:	fdiv   QWORD PTR [ebx]
  420de6:	xor    cl,bl
  420de8:	xchg   ecx,eax
  420de9:	mov    WORD PTR [edi-0xf],ss
  420dec:	nop
  420ded:	cmp    cl,0xca
  420df0:	aas    
  420df1:	in     eax,dx
  420df2:	shr    BYTE PTR [edi-0x72d7a082],cl
  420df8:	scas   al,BYTE PTR es:[edi]
  420df9:	jb     0x420d87
  420dfb:	sub    edi,DWORD PTR [esi+0x6f]
  420dfe:	push   cs
  420dff:	rcr    BYTE PTR ds:0x4769409e,1
  420e05:	pusha  
  420e06:	enter  0x827c,0xaf
  420e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e0b:	adc    BYTE PTR [edx],ch
  420e0d:	adc    DWORD PTR [eax+0x6d],ecx
  420e10:	mov    eax,0x422ee4f0
  420e15:	xchg   ebx,eax
  420e16:	xor    al,0xfa
  420e18:	add    BYTE PTR [edi+0x417019f8],ah
  420e1e:	adc    eax,0xa1723e81
  420e23:	sub    al,0xfd
  420e25:	sahf   
  420e26:	(bad)  
  420e28:	jbe    0x420dd5
  420e2a:	cmp    ebx,DWORD PTR [edx]
  420e2c:	out    0x32,eax
  420e2e:	(bad)  
  420e2f:	mov    ebp,0xbffea1e8
  420e34:	inc    ebx
  420e35:	inc    ecx
  420e36:	int    0x86
  420e38:	xchg   DWORD PTR [ecx-0x44722744],eax
  420e3e:	sub    ah,BYTE PTR [eax-0x5f]
  420e41:	pushf  
  420e42:	sub    DWORD PTR [ebx+0x4f296188],esp
  420e48:	stc    
  420e49:	mov    cl,0x3a
  420e4b:	push   eax
  420e4c:	push   eax
  420e4d:	lahf   
  420e4e:	sti    
  420e4f:	(bad)  
  420e50:	fild   QWORD PTR [ebx-0x10]
  420e53:	sub    edx,DWORD PTR [esi]
  420e55:	sbb    DWORD PTR [ecx-0x2b3f8721],edx
  420e5b:	lea    esi,[edx]
  420e5d:	(bad)
  420e60:	loope  0x420e60
  420e62:	mov    ecx,0x5da61296
  420e67:	nop
  420e68:	mov    esp,?
  420e6a:	mov    ebp,fs
  420e6c:	cld    
  420e6d:	sti    
  420e6e:	mov    WORD PTR [ebp-0x68],?
  420e71:	or     BYTE PTR [edi],cl
  420e73:	mov    esp,0x4f0ee2fe
  420e78:	fld    TBYTE PTR [ecx+0x0]
  420e7b:	add    BYTE PTR [eax-0x11],cl
  420e7e:	ja     0x420eeb
  420e80:	idiv   ebx
  420e82:	pop    esp
  420e83:	out    dx,eax
  420e84:	dec    esp
  420e85:	mul    BYTE PTR [esi-0x7d]
  420e88:	mov    ebx,0x58d5a78a
  420e8d:	mov    al,BYTE PTR [ecx]
  420e8f:	add    BYTE PTR [esi+0x55000002],al
  420e95:	mov    al,ds:0x59adedbf
  420e9a:	mov    edx,DWORD PTR [edx-0x43a555b9]
  420ea0:	cdq    
  420ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ea2:	jb     0x420e6f
  420ea4:	mov    ss:0x9f1aca3,eax
  420eaa:	adc    eax,0xdfc2e23d
  420eaf:	into   
  420eb0:	fucomp st(7)
  420eb2:	sub    eax,0x869c3a20
  420eb7:	jns    0x420ebb
  420eb9:	sub    al,0xc0
  420ebb:	sbb    DWORD PTR [ebp+0x40c4ba03],0xa1661d1d
  420ec5:	xor    BYTE PTR [esi+0x14f9659e],0xeb
  420ecc:	loope  0x420ea4
  420ece:	xor    al,dh
  420ed0:	(bad)  
  420ed1:	rol    DWORD PTR [edx-0x3b3305a1],cl
  420ed7:	push   edx
  420ed8:	data16 add BYTE PTR [ebx],ch
  420edb:	cmp    dh,bh
  420edd:	push   edi
  420ede:	add    al,0xdd
  420ee0:	mov    edi,0x767a4bb2
  420ee5:	xchg   ebx,eax
  420ee6:	cdq    
  420ee7:	cmc    
  420ee8:	test   BYTE PTR [esi-0xeddbdd],dl
  420eee:	mov    ebp,DWORD PTR [ebp+0x627f2b16]
  420ef4:	ret    0x789a
  420ef7:	xchg   edx,eax
  420ef8:	mov    al,0x8
  420efa:	mov    edx,0xf9a4fd96
  420eff:	inc    edx
  420f00:	clc    
  420f01:	mov    bh,0x20
  420f03:	fld    DWORD PTR [esi-0x6f07c37b]
  420f09:	loop   0x420ec1
  420f0b:	sbb    al,0xaa
  420f0d:	in     eax,dx
  420f0e:	jo     0x420ec0
  420f10:	cmp    dh,BYTE PTR [ebp+eax*1-0x25237c82]
  420f17:	jae    0x420ea3
  420f19:	push   es
  420f1a:	push   0x80faf47
  420f1f:	mov    esi,0xe8eeee0a
  420f24:	mov    ecx,0x22d7ae3b
  420f29:	jo     0x420eab
  420f2b:	cmp    al,0xc4
  420f2d:	and    bl,BYTE PTR [esi-0x7f]
  420f30:	loope  0x420efd
  420f32:	xor    BYTE PTR [ecx-0x301cf93e],al
  420f38:	pop    ebp
  420f39:	push   eax
  420f3a:	dec    eax
  420f3b:	xor    bh,0xf8
  420f3e:	imul   eax,DWORD PTR [edi+0x32],0x1f
  420f42:	adc    DWORD PTR [eax-0x4d],eax
  420f45:	xor    esp,DWORD PTR [ebp+0x67d176f2]
  420f4b:	mov    WORD PTR ds:0x9a671db1,cs
  420f51:	adc    eax,0x9ce14ad0
  420f56:	mov    edi,0x47ab8c43
  420f5b:	pop    edi
  420f5c:	dec    edi
  420f5d:	ja     0x420f27
  420f5f:	mov    WORD PTR [esi+0xc],?
  420f62:	mov    esi,0x7250b1e1
  420f67:	xchg   ebx,eax
  420f68:	enter  0xdeca,0x7
  420f6c:	pop    esi
  420f6d:	repz jnp 0x420f2f
  420f70:	sub    eax,0xb6856e5c
  420f75:	or     eax,0xa8469ca6
  420f7a:	and    ebp,esp
  420f7c:	sub    BYTE PTR [edx+0x63877c50],ah
  420f82:	fnstsw WORD PTR [ebx+0xc23fde2]
  420f88:	sbb    DWORD PTR [eiz*4+0x115a0ead],0x42d53f56
  420f93:	mov    WORD PTR [eax+ebp*1],ss
  420f96:	lds    eax,FWORD PTR [edx]
  420f98:	push   0xffffffb1
  420f9a:	push   0x29
  420f9c:	fisubr DWORD PTR [edi-0x3990d8de]
  420fa2:	add    al,0xc8
  420fa4:	sub    BYTE PTR ds:0x2cf71b5c,cl
  420faa:	icebp  
  420fab:	add    cl,dh
  420fad:	xchg   esp,eax
  420fae:	lods   al,BYTE PTR ds:[esi]
  420faf:	and    eax,0xcdf98394
  420fb4:	sub    edx,esp
  420fb6:	jbe    0x420f8f
  420fb8:	add    al,BYTE PTR [eax]
  420fba:	arpl   WORD PTR [ecx-0x46],cx
  420fbd:	(bad)  
  420fbe:	lods   al,BYTE PTR ds:[esi]
  420fbf:	or     dh,BYTE PTR [edx-0x74]
  420fc2:	push   ebp
  420fc3:	jmp    0x420fd4
  420fc5:	add    al,0x48
  420fc7:	sbb    BYTE PTR [esi+edx*1],0xc1
  420fcb:	lahf   
  420fcc:	dec    edx
  420fcd:	shr    DWORD PTR [eax],0x3f
  420fd0:	or     DWORD PTR [eax+0x5e],0x6b7e8091
  420fd7:	fdiv   QWORD PTR [ecx-0x6f8b1bb]
  420fdd:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fdf:	xor    al,0x6f
  420fe1:	fnstcw WORD PTR [ebp-0x6c1cb408]
  420fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fe8:	aad    0x5f
  420fea:	xor    DWORD PTR [ebp-0x15b32e3c],edi
  420ff0:	(bad)  
  420ff1:	rol    BYTE PTR [esi+0x6ac1bc7f],1
  420ff7:	push   ebx
  420ff8:	mov    edi,0x4655e0fe
  420ffd:	jmp    0x3465e67
  421002:	pop    edx
  421003:	dec    esp
  421004:	mov    ds:0xe8d709ef,eax
  421009:	mov    ah,0x60
  42100b:	ins    BYTE PTR es:[edi],dx
  42100c:	dec    ebx
  42100d:	mov    edi,0xf99c5a38
  421012:	pusha  
  421013:	lods   eax,DWORD PTR ds:[esi]
  421014:	pusha  
  421015:	daa    
  421016:	mov    ds:0xc76058d2,al
  42101b:	mov    esi,0x2e7a127a
  421020:	mov    dl,0x38
  421022:	inc    esp
  421023:	cmp    DWORD PTR [edi],esi
  421025:	rcr    bh,cl
  421027:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  421029:	xor    edx,0x5d
  42102c:	fisub  DWORD PTR [ebp-0x6c]
  42102f:	push   0xa831b205
  421034:	rcl    BYTE PTR [edi+0xd52ffe5],1
  42103a:	lea    ecx,[ecx+0x56207df9]
  421040:	sub    cl,BYTE PTR [ebp+ecx*4-0x38]
  421044:	das    
  421045:	add    al,0xbd
  421047:	inc    eax
  421048:	cmp    esi,esp
  42104a:	jbe    0x42105d
  42104c:	imul   edi,DWORD PTR [edi+0x1599c0dd],0x48fa1456
  421056:	int3   
  421057:	rcl    DWORD PTR [esi+0x14ab8fc1],0x62
  42105e:	mov    edi,0xd72edccc
  421063:	loopne 0x42104e
  421065:	sbb    eax,0x3c295e98
  42106a:	sub    al,0xe4
  42106c:	dec    ecx
  42106d:	arpl   WORD PTR [edx-0x3b],cx
  421070:	mov    WORD PTR [eax+edx*8+0x35],?
  421074:	dec    edi
  421075:	int    0x75
  421077:	out    dx,eax
  421078:	pushf  
  421079:	sub    BYTE PTR [ebp-0x65d3b7b],0x71
  421080:	push   esi
  421081:	sbb    dl,ah
  421083:	mov    cs,WORD PTR [ecx+0x28]
  421086:	xor    DWORD PTR [edi],edx
  421088:	dec    edx
  421089:	dec    edx
  42108a:	xor    eax,0x8ab4f9a5
  42108f:	mov    al,0x1
  421091:	addr16 push edx
  421093:	fst    QWORD PTR [esi-0x13ced69]
  421099:	cmp    esp,0xa01b013d
  42109f:	sbb    ah,BYTE PTR [esp+esi*2]
  4210a2:	pop    ecx
  4210a3:	add    al,0xb
  4210a5:	in     eax,dx
  4210a6:	jl     0x421088
  4210a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210a9:	or     BYTE PTR [ecx+0x3132f03d],ch
  4210af:	scas   eax,DWORD PTR es:[edi]
  4210b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210b1:	jl     0x4210cf
  4210b3:	daa    
  4210b4:	inc    esp
  4210b5:	(bad)  
  4210b6:	mov    dl,0x6a
  4210b8:	add    BYTE PTR [edx],cl
  4210ba:	leave  
  4210bb:	imul   edi,ebp,0xa
  4210be:	or     ch,dh
  4210c0:	fwait
  4210c1:	int3   
  4210c2:	fsub   DWORD PTR [ecx-0x7d]
  4210c5:	jnp    0x42105e
  4210c7:	mov    al,0x4a
  4210c9:	inc    ecx
  4210ca:	jecxz  0x421116
  4210cc:	cmc    
  4210cd:	cld    
  4210ce:	sub    DWORD PTR [eax-0x7c4058f9],esp
  4210d4:	(bad)  
  4210d5:	fidivr WORD PTR [ebx]
  4210d7:	test   al,bl
  4210d9:	aaa    
  4210da:	fisubr DWORD PTR [ecx-0x20]
  4210dd:	and    eax,0x65e1dbb3
  4210e2:	ror    BYTE PTR [eax+0x5da83d6e],0x20
  4210e9:	xchg   ecx,eax
  4210ea:	xor    al,0x13
  4210ec:	stc    
  4210ed:	jno    0x4210b8
  4210ef:	cs repz dec ecx
  4210f2:	sar    DWORD PTR [ebp-0x6b],cl
  4210f5:	imul   esp,ebx,0x0
  4210f8:	das    
  4210f9:	outs   dx,BYTE PTR ds:[esi]
  4210fa:	jb     0x42111e
  4210fc:	mov    bh,0xb3
  4210fe:	repnz leave 
  421100:	fistp  QWORD PTR [edx+0x5e]
  421103:	call   0xc1242e62
  421108:	leave  
  421109:	and    al,0x4a
  42110b:	in     eax,dx
  42110c:	es cmp al,0xac
  42110f:	mov    ch,BYTE PTR ds:0x7d32770d
  421115:	xchg   edi,eax
  421116:	dec    ebp
  421117:	mov    bh,0x84
  421119:	out    dx,eax
  42111a:	add    BYTE PTR [eax],al
  42111c:	mov    al,0xe3
  42111e:	pop    edx
  42111f:	jecxz  0x42117c
  421121:	sti    
  421122:	mov    ecx,0x72415ff3
  421127:	test   DWORD PTR [edi-0x210f5792],edi
  42112d:	mov    WORD PTR [ecx],es
  42112f:	add    BYTE PTR [esi+0x73000002],al
  421135:	or     al,0xdc
  421137:	push   ecx
  421138:	fnsave [edi+0x859cd7a]
  42113e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42113f:	dec    eax
  421140:	xchg   edi,eax
  421141:	xchg   esp,eax
  421142:	cmc    
  421143:	bound  eax,QWORD PTR [ebp-0x39]
  421146:	and    dh,BYTE PTR [eax+0x2153487a]
  42114c:	mov    eax,ds:0xc74ef9f1
  421151:	cli    
  421152:	pusha  
  421153:	inc    edx
  421154:	jmp    0x42111c
  421156:	adc    al,0x3d
  421158:	icebp  
  421159:	mov    cl,0x16
  42115b:	popa   
  42115c:	adc    al,0x23
  42115e:	das    
  42115f:	mov    eax,ds:0x70008d52
  421164:	test   eax,0x8f125ee2
  421169:	or     al,0xc6
  42116b:	repz inc esp
  42116d:	inc    esp
  42116e:	push   0x7c
  421170:	ins    BYTE PTR es:[edi],dx
  421171:	pop    ecx
  421172:	sub    al,0xff
  421174:	(bad)  
  421175:	idiv   BYTE PTR [ebx+0x5f89467f]
  42117b:	call   0x3b9c62c0
  421180:	adc    eax,ecx
  421182:	fabs   
  421184:	stos   DWORD PTR es:[edi],eax
  421185:	push   esp
  421186:	jae    0x42116e
  421188:	pop    ecx
  421189:	enter  0x8395,0x6
  42118d:	pop    ds
  42118e:	pop    DWORD PTR ds:0xaf025a13
  421194:	ins    DWORD PTR es:[edi],dx
  421195:	dec    edx
  421196:	mov    ebx,0x77239a8b
  42119b:	test   BYTE PTR [eax],0x19
  42119e:	fstp   QWORD PTR [ebp-0x50]
  4211a1:	sub    ebp,DWORD PTR [esi-0x76]
  4211a4:	push   ds
  4211a5:	dec    ecx
  4211a6:	add    esp,DWORD PTR [esi+0x9]
  4211a9:	repnz lahf 
  4211ab:	push   edx
  4211ac:	stos   DWORD PTR es:[edi],eax
  4211ad:	pop    eax
  4211ae:	jp     0x4211a7
  4211b0:	out    dx,eax
  4211b1:	mov    dl,0x11
  4211b3:	xchg   edx,eax
  4211b4:	sar    cl,0x5b
  4211b7:	or     BYTE PTR [ecx],ch
  4211b9:	lahf   
  4211ba:	stc    
  4211bb:	jg     0x4211fb
  4211bd:	and    esi,ebx
  4211bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211c0:	push   ds
  4211c1:	pushf  
  4211c2:	mov    ch,0xdd
  4211c4:	mov    bl,0x46
  4211c6:	sub    BYTE PTR [esi-0x442a4a89],dl
  4211cc:	hlt    
  4211cd:	mov    bh,0x88
  4211cf:	les    ecx,FWORD PTR [ebx]
  4211d1:	inc    ebx
  4211d2:	pop    ebx
  4211d3:	lahf   
  4211d4:	jge    0x421199
  4211d6:	adc    bl,0xca
  4211d9:	and    ebp,DWORD PTR [ecx-0x12]
  4211dc:	scas   eax,DWORD PTR es:[edi]
  4211dd:	aam    0xd5
  4211df:	cmp    eax,edi
  4211e1:	icebp  
  4211e2:	push   ds
  4211e3:	sbb    ecx,esp
  4211e5:	loop   0x4211ab
  4211e7:	jb     0x421197
  4211e9:	mov    DWORD PTR [esi-0x1a],0x138546dc
  4211f0:	(bad)  [edx-0x37]
  4211f3:	leave  
  4211f4:	ins    DWORD PTR es:[edi],dx
  4211f5:	add    dh,ch
  4211f7:	and    BYTE PTR [edi+0x115dfb4f],bl
  4211fd:	jns    0x4211b9
  4211ff:	lods   eax,DWORD PTR ds:[esi]
  421200:	jmp    0x421240
  421202:	cmp    BYTE PTR [edx+0x3b],0x18
  421206:	(bad)  
  421207:	test   eax,0x9a1876e5
  42120c:	rcr    DWORD PTR [ecx-0x40],1
  42120f:	in     al,0x1f
  421211:	dec    ebx
  421212:	cmp    BYTE PTR [edx-0x2cd027d6],bl
  421218:	dec    ebp
  421219:	sar    DWORD PTR [ecx],1
  42121b:	shl    edi,0xb
  42121e:	enter  0xd925,0x1d
  421222:	out    0xc5,eax
  421224:	inc    esp
  421225:	in     eax,dx
  421226:	and    eax,0x505a8efe
  42122b:	aas    
  42122c:	xchg   ebx,ebx
  42122e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42122f:	idiv   BYTE PTR [ebx]
  421231:	daa    
  421232:	pop    ds
  421233:	fistp  WORD PTR [esi-0x6b]
  421236:	cmc    
  421237:	jns    0x421292
  421239:	jle    0x4211db
  42123b:	mov    eax,0xc1411256
  421240:	hlt    
  421241:	fist   WORD PTR [ebp+0x3e5cf066]
  421247:	nop
  421248:	pop    ecx
  421249:	retf   
  42124a:	mov    eax,DWORD PTR [edx]
  42124c:	test   eax,0x3c619e2b
  421251:	cmp    dh,cl
  421253:	jl     0x421274
  421255:	or     DWORD PTR [ecx+0x5f],ebx
  421258:	lds    ebp,FWORD PTR [eax*8+0x53cf2b69]
  42125f:	arpl   ax,di
  421261:	repz pop es
  421263:	ret    0x9969
  421266:	inc    edi
  421267:	cmc    
  421268:	sub    ah,BYTE PTR [edi-0x94d7336]
  42126e:	dec    edx
  42126f:	out    0xb,eax
  421271:	out    dx,eax
  421272:	push   edi
  421273:	dec    ecx
  421274:	in     eax,0x54
  421276:	arpl   bp,cx
  421278:	push   0xffffffc4
  42127a:	xchg   ebx,eax
  42127b:	rcl    ah,cl
  42127d:	cmp    eax,0x2225abbc
  421282:	ins    BYTE PTR es:[edi],dx
  421283:	push   eax
  421284:	sar    BYTE PTR [edi+0x1c],0x51
  421288:	add    eax,0x351a6924
  42128d:	addr16 sub cl,dh
  421290:	rcl    DWORD PTR [esi],cl
  421292:	pop    edi
  421293:	(bad)  [edx-0x74]
  421296:	in     eax,dx
  421297:	mov    ebp,0xec5c1ac3
  42129c:	dec    ecx
  42129d:	data16 sbb BYTE PTR [ecx-0xd27809c],al
  4212a4:	call   0x6354:0x9b70cfaf
  4212ab:	(bad)  
  4212ac:	call   0xe7279d7
  4212b1:	retf   0x6a8c
  4212b4:	lock xchg ebp,edx
  4212b7:	fiadd  WORD PTR [edx+0x6d5b3418]
  4212bd:	ins    DWORD PTR es:[edi],dx
  4212be:	into   
  4212bf:	ficom  WORD PTR [eax]
  4212c1:	addr16 add eax,0xc14601a3
  4212c7:	pop    es
  4212c8:	out    dx,al
  4212c9:	ficomp DWORD PTR [edx]
  4212cb:	sbb    al,BYTE PTR [ecx+0x29]
  4212ce:	sbb    BYTE PTR [esi+0xc],cl
  4212d1:	sti    
  4212d2:	mov    ebp,fs
  4212d4:	lahf   
  4212d5:	jbe    0x4212c8
  4212d7:	jmp    0x4b9:0x2027be72
  4212de:	rol    BYTE PTR [esi],1
  4212e0:	sub    eax,DWORD PTR [ebx]
  4212e2:	mov    BYTE PTR [ebp+edi*2-0x5],cl
  4212e6:	pop    ss
  4212e7:	sar    dl,0xb1
  4212ea:	inc    esi
  4212eb:	loop   0x4212e5
  4212ed:	test   DWORD PTR [edx+0x35ec5750],esi
  4212f3:	ds pop eax
  4212f5:	sub    DWORD PTR [eax],eax
  4212f7:	lock out 0xd,eax
  4212fa:	mov    bh,0xbe
  4212fc:	mov    BYTE PTR [edi-0x6c68bccd],cl
  421302:	outs   dx,DWORD PTR ds:[esi]
  421303:	fnstcw WORD PTR [esi+eiz*4-0x13]
  421307:	push   eax
  421308:	loopne 0x4212f3
  42130a:	add    eax,0x3b1923a3
  42130f:	scas   al,BYTE PTR es:[edi]
  421310:	fwait
  421311:	sub    eax,0xe1f72662
  421316:	adc    dh,BYTE PTR cs:[esi+eax*8-0x6914b7f4]
  42131e:	test   al,0xd5
  421320:	cmp    eax,0xc01d2971
  421325:	or     al,0x4d
  421327:	enter  0xb9c0,0xb2
  42132b:	fs pop ds
  42132d:	sti    
  42132e:	into   
  42132f:	out    0x87,al
  421331:	mov    edi,0x4c913be3
  421336:	jp     0x4212f5
  421338:	add    edi,DWORD PTR [ecx-0x34]
  42133b:	inc    ebp
  42133c:	jae    0x42136e
  42133e:	(bad)  
  42133f:	call   0x6245:0xf6ca778e
  421346:	call   0x879:0xcdee9990
  42134d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42134e:	jb     0x42135b
  421350:	leave  
  421351:	in     al,dx
  421352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421353:	adc    cl,cl
  421355:	fldcw  WORD PTR [esi]
  421357:	js     0x42134f
  421359:	test   DWORD PTR [eax],edx
  42135b:	sub    BYTE PTR [edx+0x16d8dbfa],dh
  421361:	xor    DWORD PTR [ebp+0x79e91617],esp
  421367:	mov    BYTE PTR [eax-0x591f7d65],ch
  42136d:	icebp  
  42136e:	adc    eax,0x94ced013
  421373:	adc    al,0x13
  421375:	mov    al,ds:0x878d532e
  42137a:	or     esi,DWORD PTR [edx-0xb016542]
  421380:	fwait
  421381:	mov    eax,ebx
  421383:	sbb    al,cl
  421385:	cs enter 0x9625,0x87
  42138a:	xor    eax,0xe653a75e
  42138f:	pop    esp
  421390:	imul   edx,DWORD PTR [ebx],0x39
  421393:	pop    es
  421394:	int3   
  421395:	je     0x4213c1
  421397:	lahf   
  421398:	mov    esi,DWORD PTR [ebp-0xe]
  42139b:	hlt    
  42139c:	jl     0x421397
  42139e:	(bad)  
  42139f:	xor    esp,DWORD PTR [ebp-0x7]
  4213a2:	cld    
  4213a3:	sub    eax,esp
  4213a5:	leave  
  4213a6:	push   edi
  4213a7:	mov    DWORD PTR [ecx],ecx
  4213a9:	arpl   di,bx
  4213ab:	xchg   BYTE PTR [esi+edx*8],bl
  4213ae:	push   eax
  4213af:	idiv   al
  4213b1:	or     ch,BYTE PTR ds:0x8e56b531
  4213b7:	test   DWORD PTR [edi-0x51],ebp
  4213ba:	add    BYTE PTR [eax],al
  4213bc:	xor    eax,0xbf06168e
  4213c1:	sahf   
  4213c2:	xor    eax,0xa0e807bf
  4213c7:	mov    edx,0x229043fe
  4213cc:	pop    DWORD PTR fs:[ecx]
  4213cf:	add    BYTE PTR [esi-0x18fffffe],al
  4213d5:	cmovs  ebx,DWORD PTR [esp+ebp*8+0x37f96ae7]
  4213dd:	cmp    al,0xb2
  4213df:	cmp    ecx,eax
  4213e1:	adc    BYTE PTR [edi+0xd],ah
  4213e4:	std    
  4213e5:	xchg   ecx,eax
  4213e6:	pop    ebx
  4213e7:	cmp    ecx,DWORD PTR [edi-0x2b69d233]
  4213ed:	ins    DWORD PTR es:[edi],dx
  4213ee:	cld    
  4213ef:	out    0x80,al
  4213f1:	ja     0x42144d
  4213f3:	adc    eax,0x23002506
  4213f8:	mov    ah,0x8a
  4213fa:	xor    al,0x56
  4213fc:	adc    eax,0xfc7e8088
  421401:	cmp    DWORD PTR [eax+0x21b0328f],ebp
  421407:	pushf  
  421408:	dec    edx
  421409:	mov    edx,0xe0463796
  42140e:	jge    0x4213e1
  421410:	mov    ebx,0x6c1dc34c
  421415:	pusha  
  421416:	dec    edi
  421417:	jno    0x421440
  421419:	cmp    edi,DWORD PTR [esi-0x7e]
  42141c:	arpl   WORD PTR [esi+0x15],di
  42141f:	jmp    DWORD PTR [edi+eiz*2-0x5e]
  421423:	loop   0x4213fc
  421425:	xor    DWORD PTR [eax-0x48281bc],ebx
  42142b:	pop    ss
  42142c:	mov    ds:0x42688db0,al
  421431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421432:	enter  0x597,0xd8
  421436:	lahf   
  421437:	jp     0x421466
  421439:	sub    ebx,DWORD PTR [ecx+0x1afc9c0d]
  42143f:	scas   eax,DWORD PTR es:[edi]
  421440:	mov    ebp,0xc5e11ab5
  421445:	imul   ebx,esp,0x6
  421448:	data16 aas 
  42144a:	mov    al,0x49
  42144c:	mov    dh,0x7b
  42144e:	or     al,0x6f
  421450:	jbe    0x42142e
  421452:	inc    ecx
  421453:	push   esi
  421454:	out    dx,al
  421455:	xchg   edi,eax
  421456:	vpand  xmm7,xmm4,XMMWORD PTR [eax]
  42145a:	div    DWORD PTR [eax+0x2cc0f249]
  421460:	jbe    0x4214cc
  421462:	push   ss
  421463:	add    eax,0x5b3e4ab8
  421468:	arpl   sp,bx
  42146a:	push   ecx
  42146b:	sub    dh,0x3c
  42146e:	ds sar ebp,1
  421471:	or     ah,bl
  421473:	push   esp
  421474:	loopne 0x4214d3
  421476:	adc    esi,DWORD PTR [edi+0x5]
  421479:	lahf   
  42147a:	and    DWORD PTR [eax],0xfffffffc
  42147d:	mov    ecx,0x1a0ca1c9
  421482:	sahf   
  421483:	dec    esp
  421484:	(bad)  
  421485:	into   
  421486:	out    0x62,al
  421488:	cmc    
  421489:	xor    BYTE PTR [eax+0x25],al
  42148c:	inc    edi
  42148d:	cmp    DWORD PTR [ebx-0x3f],0xa
  421491:	add    eax,0x9766c54c
  421496:	jb     0x4214f7
  421498:	and    al,0x3f
  42149a:	imul   esi,ecx,0xfd6a34bd
  4214a0:	push   ebp
  4214a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a2:	imul   ebp,DWORD PTR [edi],0xe66ecb5
  4214a8:	sahf   
  4214a9:	stos   DWORD PTR es:[edi],eax
  4214aa:	xlat   BYTE PTR ds:[ebx]
  4214ab:	adc    DWORD PTR [esi],ebx
  4214ad:	cmp    ah,dl
  4214af:	dec    ebx
  4214b0:	outs   dx,BYTE PTR ds:[esi]
  4214b1:	loope  0x4214f8
  4214b3:	jmp    edx
  4214b5:	mov    eax,DWORD PTR [ebx-0x67]
  4214b8:	mov    eax,ds:0x97c61ae9
  4214bd:	mov    esp,esi
  4214bf:	jns    0x421456
  4214c1:	ins    BYTE PTR es:[edi],dx
  4214c2:	xchg   ebp,eax
  4214c3:	mov    ecx,0x3cb0418
  4214c8:	enter  0xfff,0x2a
  4214cc:	xchg   ebx,eax
  4214cd:	adc    eax,edx
  4214cf:	les    edi,FWORD PTR [esi+0x3a3cfff3]
  4214d5:	xlat   BYTE PTR ds:[ebx]
  4214d6:	adc    al,0x3
  4214d8:	and    esp,DWORD PTR [eax]
  4214da:	xchg   BYTE PTR [edx+0x3014376e],ah
  4214e0:	and    dh,BYTE PTR [edx]
  4214e2:	jl     0x4214af
  4214e4:	cmc    
  4214e5:	imul   esi,ebp,0x3140fcd1
  4214eb:	add    DWORD PTR [edx],esi
  4214ed:	mov    edi,0xdbc13d1a
  4214f2:	jns    0x421489
  4214f4:	rcr    BYTE PTR [esp+ebx*1],cl
  4214f7:	mov    al,ds:0xa261e765
  4214fc:	xchg   edx,eax
  4214fd:	lds    edi,FWORD PTR [esi-0x19]
  421500:	stos   BYTE PTR es:[edi],al
  421501:	or     BYTE PTR [edx+0xae59b57],dh
  421507:	imul   eax,ebx,0x38bc9f8a
  42150d:	pop    esi
  42150e:	test   al,0x1b
  421510:	in     eax,0xa3
  421512:	cmp    al,0x30
  421515:	sti    
  421516:	addr16 addr16 (bad) 
  421519:	push   ecx
  42151a:	mov    ds:0x27308902,eax
  42151f:	into   
  421520:	add    al,0x8e
  421522:	push   ecx
  421523:	sti    
  421524:	xchg   ecx,eax
  421525:	mov    ebp,0x594d7533
  42152a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42152c:	inc    edx
  42152d:	mov    edx,0x30c2458c
  421532:	mov    WORD PTR [ecx+0x52],cs
  421535:	lahf   
  421536:	mov    BYTE PTR [edi-0x7617e05c],ch
  42153c:	mov    dh,0x27
  42153e:	push   esp
  42153f:	sbb    eax,0x7644a44c
  421544:	add    BYTE PTR ss:[ecx+0x57d8f2b4],bl
  42154b:	adc    eax,0xfe9d5a85
  421550:	add    BYTE PTR [eax-0x707a07b5],bl
  421556:	mov    ebp,0x2ee84e96
  42155b:	bound  edi,QWORD PTR [ebx]
  42155d:	and    cl,cl
  42155f:	loop   0x42150d
  421561:	add    al,0xd9
  421563:	fwait
  421564:	sbb    eax,0xeca4cd18
  421569:	jecxz  0x421518
  42156b:	lea    ebp,[edi]
  42156d:	jl     0x42159f
  42156f:	dec    ebp
  421570:	imul   eax,DWORD PTR [ebx-0x63],0xffffffb4
  421574:	jns    0x421510
  421576:	repz add edx,DWORD PTR [edi+0x2e3e7877]
  42157d:	xchg   ebp,eax
  42157e:	cld    
  42157f:	pop    ebp
  421580:	fsub   QWORD PTR [esi-0x51]
  421583:	iret   
  421584:	jge    0x4215e0
  421586:	rcr    ecx,0xf5
  421589:	pusha  
  42158a:	in     al,dx
  42158b:	and    al,0xe1
  42158d:	dec    esi
  42158e:	jl     0x421600
  421590:	retf   
  421591:	adc    edi,0x147b2719
  421597:	xor    eax,0x785e643e
  42159c:	push   ebx
  42159d:	fstp   TBYTE PTR [eax+0x1af571e2]
  4215a3:	mov    ebx,0x5ca9e7f3
  4215a8:	gs ret 
  4215aa:	ins    BYTE PTR es:[edi],dx
  4215ab:	lock pop esp
  4215ad:	xor    eax,DWORD PTR [edi-0x5e]
  4215b0:	jb     0x421558
  4215b2:	addr16 das 
  4215b4:	in     eax,dx
  4215b5:	cli    
  4215b6:	add    eax,0xacd22212
  4215bb:	daa    
  4215bc:	or     ecx,ebp
  4215be:	sbb    BYTE PTR [ecx+0x59],bl
  4215c1:	sbb    bl,BYTE PTR ss:[eax+eiz*4-0x6ada00f4]
  4215c9:	push   ebx
  4215ca:	push   ecx
  4215cb:	ins    BYTE PTR es:[edi],dx
  4215cc:	jnp    0x42163a
  4215ce:	inc    ebx
  4215cf:	outs   dx,BYTE PTR ds:[esi]
  4215d0:	jo     0x4215ad
  4215d2:	rol    DWORD PTR [eax],0x8f
  4215d5:	push   edi
  4215d6:	pop    edx
  4215d7:	xchg   ebx,eax
  4215d8:	ret    0x6fc1
  4215db:	inc    ecx
  4215dc:	aas    
  4215dd:	daa    
  4215de:	adc    eax,0x363d8afe
  4215e3:	fs inc esp
  4215e5:	mov    cl,0x5c
  4215e7:	jp     0x421625
  4215e9:	mov    dh,0xff
  4215eb:	aaa    
  4215ec:	push   0x4c
  4215ee:	mov    DWORD PTR ss:[esi-0x8],0xc6d12df3
  4215f6:	sub    al,0xa1
  4215f8:	and    al,0x4a
  4215fa:	xor    DWORD PTR [edx],0x3ed33e54
  421600:	cs push esi
  421602:	cmp    BYTE PTR [ecx],dh
  421604:	pop    esp
  421605:	test   BYTE PTR [edx+0x2c],0x4c
  421609:	xchg   eax,ebp
  42160b:	and    DWORD PTR [eax-0x448abbca],ecx
  421611:	xchg   ecx,eax
  421612:	iret   
  421613:	clc    
  421614:	ror    DWORD PTR [eax],0xda
  421617:	mov    ds:0x4107a439,al
  42161c:	add    BYTE PTR [ebp+0x56e8fbb0],ah
  421622:	sbb    al,BYTE PTR [ebx]
  421624:	aad    0xcf
  421626:	sbb    al,0x7a
  421628:	inc    ebp
  421629:	mov    al,BYTE PTR [ebx-0x7b]
  42162c:	push   ebx
  42162d:	popa   
  42162e:	int3   
  42162f:	jno    0x42164a
  421631:	or     BYTE PTR [ebp+0x3f7e7e2a],ah
  421637:	test   eax,0xed3ce2ef
  42163c:	add    eax,0xaf67f922
  421641:	xor    al,0xa
  421643:	pop    edi
  421644:	fstp   QWORD PTR [ecx-0x5fb6e3c6]
  42164a:	jmp    0x15c5faaf
  42164f:	push   esp
  421650:	jne    0x42166e
  421652:	ficom  WORD PTR [ebx+0x7c]
  421655:	sub    cl,0x12
  421658:	xor    eax,0xf90000fc
  42165d:	std    
  42165e:	in     eax,dx
  42165f:	mov    cl,0xed
  421661:	mov    cl,0xfd
  421663:	std    
  421664:	pop    ds
  421665:	xor    dl,0xed
  421668:	aas    
  421669:	mov    ecx,0x91eaf80a
  42166e:	add    DWORD PTR [eax],eax
  421670:	xchg   BYTE PTR [edx],al
  421672:	add    BYTE PTR [eax],al
  421674:	sub    DWORD PTR [edi],0x5a3407df
  42167a:	test   ecx,0xcb92dc6c
  421680:	(bad)  
  421681:	xchg   edx,eax
  421682:	sub    dh,BYTE PTR [eax-0x18f754f9]
  421688:	and    eax,0xe615476
  42168d:	fdiv   QWORD PTR [eax+0x4a19e359]
  421693:	je     0x4216f5
  421695:	in     eax,dx
  421696:	push   esp
  421697:	dec    ecx
  421698:	pop    esp
  421699:	add    ah,dl
  42169b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42169c:	or     eax,0x164469ae
  4216a1:	push   es
  4216a2:	push   edi
  4216a3:	adc    ah,BYTE PTR [ebx]
  4216a5:	call   0xd499:0x4190d9dd
  4216ac:	(bad)  
  4216ad:	dec    ecx
  4216ae:	fisubr DWORD PTR [eax]
  4216b0:	push   ds
  4216b1:	or     al,0xdb
  4216b3:	push   ecx
  4216b4:	retf   
  4216b5:	in     eax,0x7a
  4216b7:	jb     0x4216d7
  4216b9:	and    esi,DWORD PTR [ebp-0x5c]
  4216bc:	(bad)  
  4216bd:	shl    DWORD PTR [edx-0x623fee66],1
  4216c3:	cmp    dx,WORD PTR [ebx]
  4216c6:	mov    ecx,0x459571c1
  4216cb:	sbb    bl,BYTE PTR [ebp+ebx*1+0x46efc8c3]
  4216d2:	inc    esi
  4216d3:	lea    edx,[eax+0x1f]
  4216d6:	xchg   edx,esi
  4216d8:	ficom  WORD PTR [edi]
  4216da:	and    eax,0xd051ed17
  4216df:	loop   0x4216f8
  4216e1:	out    dx,al
  4216e2:	into   
  4216e3:	inc    eax
  4216e4:	data16 cmp BYTE PTR [eax+0x2c3441d5],bh
  4216eb:	jae    0x4216d4
  4216ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216ee:	popf   
  4216ef:	aam    0xdc
  4216f1:	sub    cl,bl
  4216f3:	cmp    ch,BYTE PTR [esi+0x1add90d6]
  4216f9:	arpl   WORD PTR ds:0xe0fdc5b5,cx
  4216ff:	ds scas eax,DWORD PTR es:[edi]
  421701:	push   cs
  421702:	cmp    al,0x41
  421704:	xor    DWORD PTR [ecx],eax
  421706:	adc    eax,0x5af34365
  42170b:	pop    ecx
  42170c:	fisttp QWORD PTR [ebx+0x2b]
  42170f:	sbb    eax,0xd7f8eb42
  421714:	call   0xeac6e338
  421719:	add    esp,DWORD PTR [ebp-0x6c9d57f8]
  42171f:	ror    BYTE PTR [edi-0x77],0xb1
  421723:	jecxz  0x4216b0
  421725:	adc    DWORD PTR ds:0xc8047139,edi
  42172b:	je     0x42177d
  42172d:	sbb    dh,BYTE PTR [ebx+0x5f0f1feb]
  421733:	mov    ch,0xf6
  421735:	xor    esi,DWORD PTR [ecx-0x25]
  421738:	pop    esp
  421739:	in     eax,dx
  42173a:	imul   edx,DWORD PTR [ebp-0x55],0x10
  42173e:	mov    al,ds:0x9919fe30
  421743:	int    0x5
  421745:	js     0x421739
  421747:	pop    eax
  421748:	mov    BYTE PTR [edx+edi*4],ch
  42174b:	pop    ds
  42174c:	xchg   esi,eax
  42174d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42174e:	data16 (bad) 
  421750:	pop    esi
  421751:	fs cmp eax,0xdcdf811
  421757:	ins    BYTE PTR es:[edi],dx
  421758:	sub    DWORD PTR [eax-0x3f04471c],0xffffff8f
  42175f:	or     DWORD PTR [eax],edi
  421761:	push   0x7055421
  421766:	in     al,0x34
  421768:	jnp    0x421772
  42176a:	inc    edx
  42176b:	mov    ah,0x28
  42176d:	aad    0x2b
  42176f:	inc    edx
  421770:	(bad)  
  421771:	in     eax,dx
  421772:	pusha  
  421773:	lahf   
  421774:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  421776:	xor    eax,0x92908767
  42177b:	test   al,0x57
  42177e:	test   DWORD PTR fs:0x7536d8ae,esi
  421785:	mov    cl,0xd9
  421787:	call   0xe74a:0x8d8cadca
  42178e:	mov    esi,0xf4f68c3c
  421793:	nop
  421794:	or     ecx,ebx
  421796:	(bad)  
  421797:	sar    BYTE PTR [ebx+0x72],1
  42179a:	mov    ds:0xf6f4e4db,al
  42179f:	push   esp
  4217a0:	cdq    
  4217a1:	leave  
  4217a2:	jmp    0x421745
  4217a4:	inc    eax
  4217a5:	out    dx,eax
  4217a6:	mov    ch,BYTE PTR [ebx-0x79]
  4217a9:	sbb    al,0xb2
  4217ab:	push   edi
  4217ac:	int    0xc8
  4217ae:	ret    
  4217af:	fs push ds
  4217b1:	push   ebp
  4217b2:	loope  0x4217ba
  4217b4:	pop    ecx
  4217b5:	leave  
  4217b6:	cmp    ch,BYTE PTR [ebp-0x283e1612]
  4217bc:	out    0xdc,al
  4217be:	rol    BYTE PTR [ebp+0x244a0487],1
  4217c4:	out    0x62,al
  4217c6:	in     al,dx
  4217c7:	lahf   
  4217c8:	sbb    ecx,DWORD PTR [esi-0xd]
  4217cb:	sub    DWORD PTR [edx],0x28928842
  4217d1:	loop   0x4217bd
  4217d3:	xor    edx,esp
  4217d5:	test   BYTE PTR [ecx-0x78],al
  4217d8:	pop    esp
  4217d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217da:	rol    eax,cl
  4217dc:	popaw  
  4217de:	dec    esp
  4217df:	std    
  4217e0:	xor    edi,eax
  4217e2:	push   0xffffffc2
  4217e4:	fld    QWORD PTR [esp]
  4217e7:	xlat   BYTE PTR ds:[ebx]
  4217e8:	scas   al,BYTE PTR es:[edi]
  4217e9:	sahf   
  4217ea:	xor    ebp,DWORD PTR [eax]
  4217ec:	or     BYTE PTR [edi+eax*8-0x5513238e],al
  4217f3:	inc    eax
  4217f4:	jbe    0x4217de
  4217f6:	mov    ebp,0xe285ab5
  4217fc:	shr    DWORD PTR [ecx+0x368680cf],0x41
  421803:	add    DWORD PTR [eax],esp
  421805:	fbld   TBYTE PTR [eax+edi*8+0xbad1deb]
  42180c:	rcl    DWORD PTR [ebx-0x4e11c36e],0x84
  421813:	add    DWORD PTR [ebx-0x65],0x77
  421817:	imul   edx,DWORD PTR [ecx],0xaae4b34c
  42181d:	test   BYTE PTR [esi-0x244ea988],0xe9
  421824:	jns    0x421881
  421826:	ja     0x4217cc
  421828:	inc    esi
  421829:	mov    dl,0xae
  42182b:	out    0x6,eax
  42182d:	lods   al,BYTE PTR ds:[esi]
  42182e:	outs   dx,DWORD PTR ds:[esi]
  42182f:	add    esi,DWORD PTR [esi+edi*2+0x7f3d69c5]
  421836:	push   0x9177ba38
  42183b:	mov    ds:0x9553d87b,eax
  421840:	inc    edi
  421841:	cld    
  421842:	and    DWORD PTR [edi],esp
  421844:	jge    0x4217db
  421846:	mov    DWORD PTR ds:0x793ef298,eax
  42184c:	push   ebp
  42184d:	add    al,BYTE PTR [ecx-0x3a94804d]
  421853:	cmp    dh,BYTE PTR [edi+0x53]
  421856:	mov    ebp,0xce11854b
  42185b:	lahf   
  42185c:	cmp    BYTE PTR cs:[ecx+edi*2+0x52],0x4f
  421862:	and    al,0xa1
  421864:	and    DWORD PTR ds:0x7b6b8457,eax
  42186a:	inc    edx
  42186b:	mov    dh,0x4d
  42186d:	jae    0x4218d9
  42186f:	xlat   BYTE PTR ds:[ebx]
  421870:	aad    0x53
  421872:	cmp    ecx,DWORD PTR [edx]
  421874:	or     al,0x52
  421876:	mov    ds:0x7a7df1b1,al
  42187b:	jmp    ebx
  42187d:	icebp  
  42187e:	lahf   
  42187f:	rol    cl,0x79
  421882:	xchg   BYTE PTR [edx-0x2a],dl
  421885:	enter  0x6771,0x64
  421889:	cmc    
  42188a:	bound  edi,QWORD PTR [ebx]
  42188c:	sub    eax,0x7df42a01
  421891:	loopne 0x421858
  421893:	das    
  421894:	test   DWORD PTR [ebx-0x22],edi
  421897:	sbb    BYTE PTR [ebx+ecx*4],bh
  42189a:	cdq    
  42189b:	ja     0x421825
  42189d:	wrmsr  
  42189f:	retf   0xeba2
  4218a2:	bound  ecx,QWORD PTR [edi+edx*2]
  4218a5:	adc    DWORD PTR [ebp-0xbccae47],ecx
  4218ab:	jmp    0xa1964408
  4218b0:	sar    DWORD PTR gs:[eax-0x7365ab05],1
  4218b7:	xor    eax,0x76867920
  4218bc:	inc    esi
  4218bd:	out    dx,al
  4218be:	add    BYTE PTR [ebx-0x50],dl
  4218c1:	fnstsw WORD PTR [ecx+0x3592dc4c]
  4218c7:	loop   0x421947
  4218c9:	mov    ds:0x87b9360c,eax
  4218ce:	(bad)  
  4218cf:	cmp    BYTE PTR [edi-0x48bab8a6],bl
  4218d5:	aaa    
  4218d6:	not    ebp
  4218d8:	lds    eax,FWORD PTR [eax+0x4d226346]
  4218de:	xor    ah,BYTE PTR [eax+0x30]
  4218e1:	std    
  4218e2:	xchg   ecx,eax
  4218e3:	push   edi
  4218e4:	xchg   ebp,eax
  4218e5:	fldenv ds:0x1e456501
  4218eb:	xchg   ecx,eax
  4218ec:	fld    QWORD PTR [eax+0x7af91323]
  4218f2:	lods   eax,DWORD PTR ds:[esi]
  4218f3:	xor    BYTE PTR [esi-0x65],0xdc
  4218f7:	sahf   
  4218f8:	aam    0xa2
  4218fa:	add    BYTE PTR [eax],al
  4218fc:	repnz rol BYTE PTR ds:0xf6d53751,0xe3
  421904:	out    dx,al
  421905:	sub    ebp,esp
  421907:	(bad)  
  421909:	sub    esp,DWORD PTR [esi+0x7b]
  42190c:	jo     0x4218a2
  42190e:	add    DWORD PTR [eax],eax
  421910:	xchg   BYTE PTR [edx],al
  421912:	add    BYTE PTR [eax],al
  421914:	test   DWORD PTR ds:0x41a60b34,esi
  42191a:	shl    BYTE PTR [esi+0x57],cl
  42191d:	adc    al,0xd0
  42191f:	pop    esi
  421920:	cmp    BYTE PTR [edx],cl
  421922:	mov    BYTE PTR [eax],bh
  421924:	gs jno 0x4218ca
  421927:	lock outs dx,DWORD PTR ds:[esi]
  421929:	sub    BYTE PTR [ecx+0x90cb7b6],0xfc
  421930:	jmp    0x42198d
  421932:	sub    bl,BYTE PTR [edi+ecx*4]
  421935:	fist   WORD PTR [ecx-0x38]
  421938:	arpl   sp,di
  42193a:	fwait
  42193b:	dec    ecx
  42193c:	pop    ss
  42193d:	pusha  
  42193e:	inc    edx
  42193f:	jecxz  0x4219bb
  421941:	pop    ds
  421942:	sbb    eax,0x2ca19a58
  421947:	bound  esp,QWORD PTR [eax]
  421949:	mov    ds:0x6ee75d62,al
  42194e:	xchg   ecx,eax
  42194f:	sbb    al,0xa5
  421951:	and    BYTE PTR [edi],al
  421953:	ja     0x4219bb
  421955:	(bad)  
  421956:	fld    TBYTE PTR [ebp-0x67]
  421959:	stos   BYTE PTR es:[edi],al
  42195a:	cdq    
  42195b:	test   eax,0xefd7d4f9
  421960:	xor    ah,ch
  421962:	mov    bl,dl
  421964:	pop    ebp
  421965:	dec    edi
  421966:	dec    edx
  421967:	xchg   edx,eax
  421968:	mul    BYTE PTR [ebp+0x2e]
  42196b:	ss clc 
  42196d:	push   esp
  42196e:	ret    
  42196f:	ror    al,0x8d
  421972:	add    esp,DWORD PTR ds:0xbf456527
  421978:	scas   al,BYTE PTR es:[edi]
  421979:	push   ebx
  42197a:	jne    0x42198f
  42197c:	cs mov esi,0x2dd7a61c
  421982:	mov    eax,?
  421984:	and    cl,BYTE PTR [eax-0x65dc8b61]
  42198a:	mov    esi,0x7396a287
  42198f:	repz or DWORD PTR [ebx+0x16],ebp
  421993:	test   DWORD PTR [edx+edi*1],edx
  421996:	add    ah,BYTE PTR [ecx]
  421998:	pop    ebp
  421999:	xor    al,0x95
  42199b:	inc    edx
  42199c:	jg     0x42193f
  42199e:	push   ss
  42199f:	test   DWORD PTR [ebx+0x7d34d2b8],esi
  4219a5:	popf   
  4219a6:	pop    edi
  4219a7:	lea    ebx,[eax+0x4452249c]
  4219ad:	or     ebx,DWORD PTR [edx-0x18bf1438]
  4219b3:	jb     0x42195d
  4219b5:	out    dx,eax
  4219b6:	popf   
  4219b7:	and    al,0x3f
  4219b9:	inc    edx
  4219ba:	call   0xc278:0xbd8990a3
  4219c1:	ss inc esp
  4219c3:	loop   0x4219a6
  4219c5:	int3   
  4219c6:	pop    ecx
  4219c7:	cmp    al,0x6f
  4219c9:	push   esi
  4219ca:	pusha  
  4219cb:	ins    DWORD PTR es:[edi],dx
  4219cc:	add    al,0x72
  4219ce:	pop    edx
  4219cf:	mov    esi,0x3a9b0bf6
  4219d4:	jmp    0xc1f7bea5
  4219d9:	jecxz  0x4219db
  4219db:	inc    edx
  4219dc:	jl     0x4219b6
  4219de:	or     ch,BYTE PTR [esi]
  4219e0:	jp     0x421a48
  4219e2:	mov    eax,0x1f38a3e8
  4219e7:	and    bl,BYTE PTR [ecx+0x28331ea5]
  4219ed:	aas    
  4219ee:	mov    ebp,0x207dfe7a
  4219f3:	push   es
  4219f4:	mov    edx,0xa4c04cd0
  4219f9:	adc    eax,0xdc71a792
  4219fe:	sti    
  4219ff:	pop    esp
  421a00:	cmp    al,0x99
  421a02:	cmp    eax,0x40525dda
  421a07:	aad    0x76
  421a09:	jnp    0x421a76
  421a0b:	or     ah,BYTE PTR [ecx+0x3cc97af3]
  421a11:	out    dx,eax
  421a12:	xor    BYTE PTR [esi+0x5909ddbe],dh
  421a18:	out    0xed,al
  421a1a:	jns    0x421a98
  421a1c:	fcomp  DWORD PTR [edx-0x63ddef52]
  421a22:	pop    esi
  421a23:	mul    DWORD PTR [eax-0x700b778f]
  421a29:	xor    BYTE PTR [edx],cl
  421a2b:	sub    DWORD PTR [ecx+0x12],ebx
  421a2e:	cld    
  421a2f:	add    DWORD PTR [ebp-0x6f00d492],esi
  421a35:	aad    0xf8
  421a37:	stc    
  421a38:	fdivr  QWORD PTR [edx-0x35]
  421a3b:	and    ebp,edi
  421a3d:	mov    edx,0xaf81f1ed
  421a42:	cmp    eax,edi
  421a44:	mov    edi,0x731df303
  421a49:	jecxz  0x421a57
  421a4b:	jns    0x4219cf
  421a4d:	jge    0x4219df
  421a4f:	sbb    al,0x28
  421a51:	out    dx,eax
  421a52:	jecxz  0x421a8a
  421a54:	ret    
  421a55:	dec    esp
  421a56:	inc    BYTE PTR [edx+eax*8+0x53]
  421a5a:	mov    ebp,0x328417c8
  421a5f:	add    DWORD PTR [esi],0xffffffa4
  421a62:	dec    ecx
  421a63:	ret    
  421a64:	fs xchg edx,eax
  421a66:	sub    BYTE PTR [eax+edx*8+0x1b],bl
  421a6a:	jbe    0x421a31
  421a6c:	lods   eax,DWORD PTR ds:[esi]
  421a6d:	jp     0x421a0e
  421a6f:	stc    
  421a70:	jb     0x421a9d
  421a72:	xchg   edi,eax
  421a73:	push   edi
  421a74:	jp     0x421aa6
  421a76:	cmp    DWORD PTR [ecx+0x58],eax
  421a79:	mov    edx,0x3af74d12
  421a7e:	lock lods eax,DWORD PTR ds:[esi]
  421a80:	sbb    BYTE PTR [ecx-0x6e],ch
  421a83:	jle    0x421a91
  421a85:	stc    
  421a86:	push   0xffffff82
  421a88:	jg     0x421a12
  421a8a:	and    BYTE PTR [ebx+0x1c],0xf
  421a8e:	int3   
  421a8f:	(bad)  
  421a91:	or     bl,BYTE PTR [ebp-0x45]
  421a94:	sbb    edx,DWORD PTR [edx+0x0]
  421a97:	mov    esp,0xcc282624
  421a9c:	jecxz  0x421b01
  421a9e:	push   DWORD PTR [edx+0x2fcc9bab]
  421aa4:	cld    
  421aa5:	imul   ecx,ebp,0xfffffff1
  421aa8:	ret    0x9f22
  421aab:	lods   al,BYTE PTR ds:[esi]
  421aac:	call   0x5031:0xac2ea4d2
  421ab3:	in     al,dx
  421ab4:	mov    ah,0x8f
  421ab6:	mov    esp,0xa91abb54
  421abb:	or     ecx,eax
  421abd:	stos   BYTE PTR es:[edi],al
  421abe:	and    eax,0xd449acdf
  421ac3:	adc    al,0x94
  421ac5:	xchg   edi,eax
  421ac6:	xchg   DWORD PTR [ecx-0xc],edi
  421ac9:	or     dh,cl
  421acb:	mov    DWORD PTR [edi-0x65],esi
  421ace:	enter  0x9c73,0xca
  421ad2:	sub    al,0xfc
  421ad4:	enter  0x2ed4,0xec
  421ad8:	int3   
  421ad9:	jnp    0x421ac5
  421adb:	call   0x7d77:0x9c4f79b
  421ae2:	inc    esi
  421ae3:	pop    esi
  421ae4:	jno    0x421b5d
  421ae6:	retf   
  421ae7:	cmp    ecx,DWORD PTR [esi+ebx*1-0x285d7717]
  421aee:	stc    
  421aef:	or     edx,ecx
  421af1:	stc    
  421af2:	sub    DWORD PTR [ebp-0x4d],esi
  421af5:	clc    
  421af6:	sbb    BYTE PTR [eax-0x9],dl
  421af9:	out    dx,eax
  421afa:	jns    0x421a9f
  421afc:	sbb    cl,dh
  421afe:	xor    al,0x0
  421b00:	out    0x42,eax
  421b02:	adc    edi,DWORD PTR [edi]
  421b04:	(bad)  
  421b06:	imul   ecx,ebp,0x62
  421b09:	popf   
  421b0a:	push   ecx
  421b0b:	mov    edx,0x57a3a1fe
  421b10:	or     eax,0x3a48ef6c
  421b15:	(bad)  
  421b16:	lea    esi,[ecx]
  421b18:	imul   esi,DWORD PTR [ecx],0x73
  421b1b:	xchg   BYTE PTR [edx+0x6186fd41],bl
  421b21:	sahf   
  421b22:	daa    
  421b23:	enter  0xb2f0,0x34
  421b27:	into   
  421b28:	sbb    eax,0x8d5ae9cd
  421b2d:	fiadd  WORD PTR ds:0x8fc64212
  421b33:	sbb    eax,0xfe3ccde3
  421b38:	sbb    BYTE PTR [edi-0x3eadf6c9],0xac
  421b3f:	mov    bl,0x71
  421b41:	lock out dx,eax
  421b43:	je     0x421ac8
  421b45:	pusha  
  421b46:	push   cs
  421b47:	in     al,dx
  421b48:	test   eax,0xd39ead47
  421b4d:	jmp    DWORD PTR [edi-0x37dfb234]
  421b53:	jns    0x421b6e
  421b55:	out    0xd7,eax
  421b57:	cmp    al,0x5e
  421b59:	sbb    al,0xcf
  421b5b:	dec    ecx
  421b5c:	mov    eax,0xb9339d8
  421b61:	mov    ch,0x20
  421b63:	and    DWORD PTR [esi],0xfffffff8
  421b66:	jp     0x421bca
  421b68:	mov    ah,0x89
  421b6a:	push   0x8781e6a6
  421b6f:	lds    edi,FWORD PTR [edi+eiz*8]
  421b72:	jge    0x421bd7
  421b74:	mov    edi,0x8cc6f2f6
  421b79:	loopne 0x421bcf
  421b7b:	sub    eax,0xb874389e
  421b80:	cli    
  421b81:	xchg   edx,eax
  421b82:	jns    0x421bbe
  421b84:	push   ss
  421b85:	jns    0x421b18
  421b87:	sti    
  421b88:	jmp    0xfa9b636c
  421b8d:	enter  0x86df,0x21
  421b91:	push   cs
  421b92:	xchg   BYTE PTR [eax-0x1c1037f0],cl
  421b98:	pop    esp
  421b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b9a:	add    BYTE PTR [eax],al
  421b9c:	inc    ebx
  421b9d:	inc    ecx
  421b9e:	popa   
  421b9f:	data16 arpl WORD PTR [esi+0x47],sp
  421ba3:	rcr    DWORD PTR gs:[edi+0x16],cl
  421ba7:	xor    BYTE PTR ds:0xf6049090,dh
  421bad:	xchg   esi,eax
  421bae:	add    DWORD PTR [eax],eax
  421bb0:	xchg   BYTE PTR [edx],al
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	outs   dx,BYTE PTR ds:[esi]
  421bb5:	add    BYTE PTR [ecx+ecx*4+0x3e],0x2b
  421bba:	addr16 jnp 0x421bf8
  421bbd:	xor    esi,DWORD PTR [ebx-0x4a37b311]
  421bc3:	outs   dx,BYTE PTR ds:[esi]
  421bc4:	xchg   ebx,eax
  421bc5:	push   edi
  421bc6:	sub    ecx,ebp
  421bc8:	mul    DWORD PTR ds:0xb997bf2c
  421bce:	adc    DWORD PTR [ebx+0x5d0f642b],esp
  421bd4:	(bad)  
  421bd5:	mov    edx,esi
  421bd7:	mov    bh,0x55
  421bd9:	jbe    0x421bb8
  421bdb:	jno    0x421b8c
  421bdd:	mov    DWORD PTR [eax-0x1c2380b5],esi
  421be3:	adc    dl,BYTE PTR [ecx]
  421be5:	add    dh,BYTE PTR [esi+0x3f]
  421be8:	int    0xf3
  421bea:	xchg   edx,eax
  421beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bec:	dec    edx
  421bed:	add    eax,0x230a377e
  421bf2:	stos   BYTE PTR es:[edi],al
  421bf3:	sti    
  421bf4:	mov    edx,0x63e7b18c
  421bf9:	mov    ebp,ss
  421bfb:	sub    eax,DWORD PTR [ebp+0x7c2bf9f9]
  421c01:	xor    BYTE PTR [ebx-0x137f167d],0x7a
  421c08:	(bad)  [edx-0x1dd97b22]
  421c0e:	sub    ch,0x3e
  421c11:	fbld   TBYTE PTR [esi+0x2839485d]
  421c17:	lea    eax,[edi]
  421c19:	or     DWORD PTR [esi+eax*4+0xd],ecx
  421c1d:	dec    esi
  421c1e:	cdq    
  421c1f:	aas    
  421c20:	push   edx
  421c21:	or     al,0xe2
  421c23:	pushf  
  421c24:	test   ch,0xab
  421c27:	mov    dh,0xa8
  421c29:	aas    
  421c2a:	pop    es
  421c2b:	mov    bl,0x17
  421c2d:	repnz mov ebp,0x1c896e08
  421c33:	xchg   edx,eax
  421c34:	out    dx,eax
  421c35:	in     eax,0x39
  421c37:	test   al,0x34
  421c39:	in     eax,0xe9
  421c3b:	outs   dx,DWORD PTR ds:[esi]
  421c3c:	lods   eax,DWORD PTR ds:[esi]
  421c3d:	pop    esp
  421c3e:	xor    ch,BYTE PTR [edx+0x3b]
  421c41:	cmp    dl,bh
  421c43:	adc    eax,0x8d18cdad
  421c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c49:	mov    DWORD PTR [edx],edx
  421c4b:	xchg   ecx,eax
  421c4c:	jecxz  0x421c2c
  421c4e:	push   ebp
  421c4f:	test   al,0xc8
  421c51:	ret    0x71ab
  421c54:	outs   dx,DWORD PTR ss:[esi]
  421c56:	dec    ebp
  421c57:	mov    bl,0xb8
  421c59:	and    al,0x3c
  421c5b:	(bad)  
  421c5c:	pop    eax
  421c5d:	pop    ds
  421c5e:	xor    dl,ch
  421c60:	pop    ebp
  421c61:	vmread eax,ebx
  421c64:	int3   
  421c65:	adc    al,BYTE PTR [esi-0x24]
  421c68:	add    bl,BYTE PTR [eax]
  421c6a:	in     eax,dx
  421c6b:	xchg   edx,eax
  421c6c:	leave  
  421c6d:	sub    BYTE PTR [ecx+0x28b954c],dh
  421c73:	push   esi
  421c74:	dec    esi
  421c75:	ja     0x421c10
  421c77:	adc    esi,DWORD PTR [ebx-0x60f5643]
  421c7d:	dec    BYTE PTR ds:0x5df6176d
  421c83:	inc    edx
  421c84:	inc    ecx
  421c85:	imul   eax,DWORD PTR [edi-0x56],0x1c06c149
  421c8c:	adc    cl,BYTE PTR ds:0xa64163f6
  421c92:	lods   al,BYTE PTR ds:[esi]
  421c93:	push   edx
  421c94:	rcl    DWORD PTR ds:0x363f59cc,1
  421c9a:	and    dh,BYTE PTR [edx]
  421c9c:	dec    edx
  421c9d:	retf   
  421c9e:	(bad)  
  421c9f:	jb     0x421c2d
  421ca1:	mov    ds:0x7f952dff,eax
  421ca6:	xchg   ebx,eax
  421ca7:	neg    cl
  421ca9:	es loopne 0x421cf9
  421cac:	add    BYTE PTR [eax+0x5dcc03f6],dh
  421cb2:	cmc    
  421cb3:	in     al,dx
  421cb4:	sbb    eax,0xde0c5662
  421cb9:	(bad)  
  421cbb:	sbb    eax,0x594254cb
  421cc0:	sub    DWORD PTR [ebx+0x5f336230],esp
  421cc6:	je     0x421cd9
  421cc8:	adc    DWORD PTR [eax],eax
  421cca:	ret    
  421ccb:	outs   dx,DWORD PTR ds:[esi]
  421ccc:	xor    eax,DWORD PTR [ecx]
  421cce:	xor    al,0x10
  421cd0:	repnz sbb al,0xd9
  421cd3:	mov    dh,0xbb
  421cd5:	dec    esi
  421cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cd7:	inc    ebx
  421cd8:	(bad)  
  421cd9:	mov    ecx,0x1b87eebd
  421cde:	cmp    eax,0x2733a2b1
  421ce3:	mov    ch,0xc9
  421ce5:	pushf  
  421ce6:	mov    ds:0x94c050c0,eax
  421ceb:	mov    ebx,0xdc3738af
  421cf0:	mov    ebp,0xfd9fc5f4
  421cf5:	imul   esi,DWORD PTR [ebp+0x6387b366],0xf47e03fd
  421cff:	dec    ebx
  421d00:	hlt    
  421d01:	int3   
  421d02:	pusha  
  421d03:	jecxz  0x421cda
  421d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d06:	addr16 sbb al,0xbf
  421d09:	dec    ebp
  421d0a:	adc    ecx,esi
  421d0c:	add    esi,DWORD PTR [ecx-0x2fab4e5f]
  421d12:	dec    edx
  421d13:	sbb    ch,ah
  421d15:	int3   
  421d16:	vorps  xmm4,xmm7,XMMWORD PTR [ecx]
  421d1a:	jecxz  0x421cea
  421d1c:	jb     0x421ca4
  421d1e:	loope  0x421d01
  421d20:	test   BYTE PTR [edi],bl
  421d22:	(bad)  
  421d23:	mov    ebx,0x990f8aa2
  421d28:	and    edi,DWORD PTR [ecx-0xa]
  421d2b:	or     edi,0xffffff93
  421d2e:	into   
  421d2f:	mov    ebp,0x4e20f41
  421d34:	sub    DWORD PTR [ebp-0x183f0557],edx
  421d3a:	mov    dl,0x42
  421d3c:	dec    ecx
  421d3d:	dec    edi
  421d3e:	and    BYTE PTR [ebp+edx*4+0x44],bh
  421d42:	idiv   BYTE PTR [edx+0x15e3788f]
  421d48:	and    eax,0x96f661d7
  421d4d:	jmp    0xfd3b69b1
  421d52:	pop    ecx
  421d53:	sar    DWORD PTR [edi-0x23],cl
  421d56:	icebp  
  421d57:	cld    
  421d58:	lock adc DWORD PTR [edi],ebp
  421d5b:	mov    ch,0x4d
  421d5d:	rcr    DWORD PTR [esi+edx*4+0x40],1
  421d61:	mov    edi,0x7dd6d283
  421d66:	cwde   
  421d67:	or     esp,DWORD PTR [edx]
  421d69:	ret    
  421d6a:	pop    ebp
  421d6b:	daa    
  421d6c:	jge    0x421dd8
  421d6e:	loope  0x421d13
  421d70:	pop    edx
  421d71:	fucomp st(3)
  421d73:	data16 ja 0x421d8a
  421d76:	xchg   esp,eax
  421d77:	xor    BYTE PTR [edi-0x506358ac],ah
  421d7d:	idiv   DWORD PTR [edx+0x76bce088]
  421d83:	(bad)  
  421d84:	adc    ah,dh
  421d86:	ficom  DWORD PTR [ebx-0x1]
  421d89:	sbb    esi,DWORD PTR [edx-0x3ac282f6]
  421d8f:	int    0x5c
  421d91:	ins    BYTE PTR es:[edi],dx
  421d92:	or     DWORD PTR [esi+0x2ae1d22f],esp
  421d98:	mov    al,0x6b
  421d9a:	push   ds
  421d9b:	adc    dl,BYTE PTR [ebx]
  421d9d:	cmp    BYTE PTR [esi],ch
  421d9f:	add    al,BYTE PTR [eax]
  421da1:	fild   DWORD PTR [edi]
  421da3:	lock xchg DWORD PTR [ebx+0x27],esi
  421da7:	lods   eax,DWORD PTR ds:[esi]
  421da8:	jmp    0x421e1c
  421daa:	inc    esp
  421dab:	xor    DWORD PTR ds:0x4e37309c,ebx
  421db1:	pop    es
  421db2:	and    bh,BYTE PTR [ecx-0x2cdb7259]
  421db8:	jl     0x421dcc
  421dba:	loope  0x421de7
  421dbc:	mov    ah,0xa2
  421dbe:	pushf  
  421dbf:	call   0x58987b71
  421dc4:	mov    al,dl
  421dc6:	repz or BYTE PTR ss:[eax-0xf8055a0],al
  421dce:	dec    ebp
  421dcf:	rcr    BYTE PTR [edx-0x6e8332c7],0x9
  421dd6:	fdivr  DWORD PTR [edx-0x143294d4]
  421ddc:	mov    dh,0x22
  421dde:	call   0x10ea:0xb97b8249
  421de5:	fist   DWORD PTR [ebp+0x5f66beb]
  421deb:	xchg   esi,eax
  421dec:	xchg   DWORD PTR [esi],ebp
  421dee:	pusha  
  421def:	and    al,0xd5
  421df1:	xor    bl,BYTE PTR [ecx+0x1a360381]
  421df7:	stc    
  421df8:	sbb    dl,BYTE PTR [edi-0x40]
  421dfb:	sbb    eax,0xb87acb70
  421e00:	mov    cl,0x74
  421e02:	xor    dh,bh
  421e04:	dec    eax
  421e05:	pop    eax
  421e06:	xor    eax,0x94a52ea8
  421e0b:	push   0x2149ecd0
  421e10:	xor    cl,BYTE PTR [edi]
  421e12:	outs   dx,DWORD PTR ds:[esi]
  421e13:	pushf  
  421e14:	inc    ebp
  421e15:	mov    edi,0x557b358c
  421e1a:	mov    ebp,edi
  421e1c:	sub    eax,0x9e41b8eb
  421e21:	not    BYTE PTR [ebp+0x5]
  421e24:	rcl    BYTE PTR [esi],1
  421e26:	call   0x1b5960eb
  421e2b:	les    edx,FWORD PTR [edx]
  421e2d:	dec    eax
  421e2e:	loope  0x421de4
  421e30:	adc    edi,DWORD PTR [edx-0x41]
  421e33:	mov    WORD PTR [eax-0x5bebf471],?
  421e39:	leave  
  421e3a:	add    BYTE PTR [eax],al
  421e3c:	mov    ebp,edx
  421e3e:	rcr    DWORD PTR [ebx],cl
  421e40:	repz cmp ecx,ebx
  421e43:	cli    
  421e44:	in     al,dx
  421e45:	jg     0x421e7e
  421e47:	loopne 0x421eaa
  421e49:	xor    esp,DWORD PTR [edx+0x1997c47]
  421e4f:	add    BYTE PTR [esi-0x37fffffe],al
  421e55:	mov    fs,edx
  421e57:	xor    al,0xb
  421e59:	aad    0x52
  421e5b:	sub    DWORD PTR [eax-0x7d],edx
  421e5e:	cdq    
  421e5f:	fnsave [ecx]
  421e61:	ins    DWORD PTR es:[edi],dx
  421e62:	int    0x31
  421e64:	push   ss
  421e65:	(bad)
  421e69:	ret    0xf955
  421e6c:	fcom   st(4)
  421e6e:	dec    edx
  421e6f:	cwde   
  421e70:	mul    BYTE PTR [edi-0x15]
  421e73:	stc    
  421e74:	mov    dl,0xd1
  421e76:	cmp    al,0x21
  421e78:	mov    esp,0x30667fc2
  421e7d:	cmp    BYTE PTR [ecx+0x230ed2f],dh
  421e83:	(bad)  
  421e84:	ds push ebx
  421e86:	inc    esi
  421e87:	and    DWORD PTR [ecx],esi
  421e89:	push   edx
  421e8a:	fisttp WORD PTR [edi]
  421e8c:	pop    ds
  421e8d:	push   0xffffffeb
  421e8f:	outs   dx,DWORD PTR ds:[esi]
  421e90:	mov    esp,0xbdcbe4e1
  421e95:	dec    eax
  421e96:	int    0x3
  421e98:	adc    ebp,DWORD PTR [ebp+0x28f23618]
  421e9e:	jbe    0x421f0c
  421ea0:	xor    DWORD PTR [edi+0x13af4718],0xd408cef2
  421eaa:	fild   DWORD PTR [edx+0x13adcdaf]
  421eb0:	mov    edi,0x96caaa34
  421eb5:	mul    DWORD PTR [esi]
  421eb7:	mov    ah,0x7
  421eb9:	and    al,0xf4
  421ebb:	into   
  421ebc:	or     DWORD PTR [ecx-0x51],0xffffff9e
  421ec0:	pop    esi
  421ec1:	adc    bl,BYTE PTR [ebp-0x78]
  421ec4:	mov    eax,ds:0x870137af
  421ec9:	fidiv  WORD PTR [edi-0x37b7bf0e]
  421ecf:	test   BYTE PTR [edi-0x4a],bl
  421ed2:	cld    
  421ed3:	jnp    0x421f1c
  421ed5:	pop    edi
  421ed6:	mov    esi,0x935e9e28
  421edb:	or     edx,0x2f283cfc
  421ee1:	je     0x421eb7
  421ee3:	xor    DWORD PTR [ecx-0x4db82bc6],ebp
  421ee9:	shl    BYTE PTR [eax-0x1b],0x6e
  421eed:	mov    ecx,0x8fbf438
  421ef2:	scas   al,BYTE PTR es:[edi]
  421ef3:	rcl    BYTE PTR [ebx+0x2b],1
  421ef6:	inc    esp
  421ef7:	mov    dh,0x1c
  421ef9:	rcr    DWORD PTR [ebp-0x61],1
  421efc:	rol    BYTE PTR [edi-0x16],cl
  421eff:	xor    cl,dh
  421f01:	add    esi,edi
  421f03:	sub    dl,0xa3
  421f06:	add    DWORD PTR [ebp-0x2e],esi
  421f09:	out    0x63,al
  421f0b:	adc    eax,0x8e5f9d4a
  421f10:	call   0x98ed:0xab0d45e9
  421f17:	push   eax
  421f18:	mov    dl,0xeb
  421f1a:	mov    bh,0x5c
  421f1c:	adc    BYTE PTR [ecx+0x25],ch
  421f1f:	outs   dx,DWORD PTR ds:[esi]
  421f20:	adc    ch,al
  421f22:	xchg   BYTE PTR [ecx],ch
  421f24:	push   cs
  421f25:	sub    al,0x32
  421f27:	sub    BYTE PTR [ecx+0x1f],0x6c
  421f2b:	imul   edi,DWORD PTR [edi+ebx*4+0x48],0x6203b474
  421f33:	ret    
  421f34:	add    al,0x45
  421f36:	and    dl,bl
  421f38:	sar    al,cl
  421f3a:	retf   
  421f3b:	lock or bh,bl
  421f3e:	jecxz  0x421ee6
  421f40:	inc    edx
  421f41:	pop    esi
  421f42:	mov    ebp,0xa4f400f1
  421f47:	stos   BYTE PTR es:[edi],al
  421f48:	mov    cl,0xb7
  421f4a:	fadd   DWORD PTR [eax-0x27]
  421f4d:	push   edx
  421f4e:	and    eax,0x24482dac
  421f53:	xchg   ebp,eax
  421f54:	xor    eax,0x8b7e7a2
  421f59:	xchg   BYTE PTR [edx+0x51],bh
  421f5c:	add    ecx,DWORD PTR ss:[edx-0x2bcbf4cd]
  421f63:	cwde   
  421f64:	je     0x421f92
  421f66:	jbe    0x421f37
  421f68:	sub    DWORD PTR [edx+0x39],0xfffffffe
  421f6c:	enter  0x25f,0xb2
  421f70:	sbb    DWORD PTR [edi-0x38f0155f],ecx
  421f76:	rep movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  421f79:	imul   edi,DWORD PTR [edi-0x5d0998f8],0xc436f7d9
  421f83:	sub    BYTE PTR ss:[esi+0x3b2dc05],dl
  421f8a:	sbb    edx,esi
  421f8c:	mov    al,0xb1
  421f8e:	aad    0xd4
  421f90:	or     dh,bl
  421f92:	adc    dl,BYTE PTR [ebp-0x217fea4a]
  421f98:	sub    BYTE PTR [eax],al
  421f9a:	xchg   ecx,eax
  421f9b:	popa   
  421f9c:	(bad)  
  421f9d:	lahf   
  421f9e:	mov    esp,DWORD PTR [ecx]
  421fa0:	mov    eax,0x7c297889
  421fa5:	jns    0x421ff3
  421fa7:	pop    es
  421fa8:	(bad)  
  421fa9:	hlt    
  421faa:	fcom   st(5)
  421fac:	mov    bh,0x10
  421fae:	pop    ds
  421faf:	fs pusha 
  421fb1:	and    eax,0x507ef087
  421fb6:	lods   al,BYTE PTR ds:[esi]
  421fb7:	pop    edi
  421fb8:	ret    0xc562
  421fbb:	cmp    al,0xf
  421fbd:	rcr    bl,0xb6
  421fc0:	mov    edx,DWORD PTR [eax+ecx*4]
  421fc3:	sbb    ebp,DWORD PTR [ecx+0x34]
  421fc6:	jmp    0xd489:0xe57eac3b
  421fcd:	adc    DWORD PTR [edi+0x21],edx
  421fd0:	xor    BYTE PTR [ecx+edi*2],dl
  421fd3:	or     ebp,DWORD PTR [edi-0x22]
  421fd6:	xor    al,0xe6
  421fd8:	push   0x3e2ff611
  421fdd:	(bad)  
  421fde:	(bad)  
  421fdf:	mul    BYTE PTR ds:0xf005e4cd
  421fe5:	lods   al,BYTE PTR ds:[esi]
  421fe6:	mov    ebx,0xa4ce41b9
  421feb:	das    
  421fec:	adc    BYTE PTR ds:0x9c71641a,dl
  421ff2:	or     al,0xc0
  421ff4:	dec    edi
  421ff5:	stc    
  421ff6:	sbb    BYTE PTR [eax+0x6f1b517c],cl
  421ffc:	ss jns 0x422063
  421fff:	(bad)  
  422001:	mov    ebp,0xe5a2a397
  422006:	loop   0x421f99
  422008:	mov    ch,0x76
  42200a:	jmp    0x422027
  42200c:	out    0xf7,al
  42200e:	into   
  42200f:	mov    esi,0x38f7a952
  422014:	mov    ebp,DWORD PTR [eax+eax*2+0x79d6badc]
  42201b:	jnp    0x421fe2
  42201d:	idiv   edi
  42201f:	fs aad 0x9c
  422022:	int    0xfc
  422024:	fdivr  st,st(5)
  422026:	mov    fs,ebp
  422028:	cmp    eax,0x2328d93b
  42202d:	adc    esi,DWORD PTR [ecx-0x48]
  422030:	push   ds
  422031:	cli    
  422032:	xchg   esp,eax
  422033:	push   eax
  422034:	sub    eax,0xf5a4e9a9
  422039:	lods   al,BYTE PTR ds:[esi]
  42203a:	xor    DWORD PTR [edx+0x566cac4],edx
  422040:	mov    edx,0x4e2275a8
  422045:	sub    BYTE PTR [edx-0x3bb08bae],dh
  42204b:	cld    
  42204c:	div    ebp
  42204e:	inc    esi
  42204f:	inc    esi
  422050:	inc    edi
  422051:	cli    
  422052:	push   edi
  422053:	sub    al,0xe0
  422055:	scas   eax,DWORD PTR es:[edi]
  422056:	push   esi
  422057:	mov    ds:0x54afd684,al
  42205c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42205d:	js     0x422046
  42205f:	clc    
  422060:	and    bl,BYTE PTR [ecx-0x7c]
  422063:	add    al,0x54
  422065:	cmpxchg BYTE PTR [eax-0x61],bl
  422069:	xor    BYTE PTR [edx-0xd],0x71
  42206d:	neg    BYTE PTR gs:[esi+0x13]
  422071:	xchg   edx,eax
  422072:	inc    esi
  422074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422075:	loopne 0x422001
  422077:	mov    esp,0x18cc33b4
  42207c:	js     0x422005
  42207e:	add    BYTE PTR [ebx+0x40],dl
  422081:	push   0x24b1fd9b
  422086:	dec    edx
  422087:	mov    BYTE PTR [eax+0x2c9a3cb8],dl
  42208d:	xchg   DWORD PTR [eax],ebx
  42208f:	pop    es
  422090:	inc    edi
  422091:	fs popf 
  422093:	ds sub eax,0x7af12d87
  422099:	(bad)  
  42209a:	loopne 0x422113
  42209c:	(bad)  
  42209d:	pop    esp
  42209e:	imul   eax,edx,0xffffffb8
  4220a1:	(bad)  
  4220a2:	cmc    
  4220a3:	fist   WORD PTR [ebp+0x274ac154]
  4220a9:	adc    ch,ch
  4220ab:	push   0xffffff99
  4220ad:	or     BYTE PTR ds:0xe18f1f6e,0xea
  4220b4:	dec    esp
  4220b5:	inc    edi
  4220b6:	retf   
  4220b7:	retf   
  4220b8:	adc    dl,bl
  4220ba:	mov    bh,BYTE PTR [edx-0x233112b8]
  4220c0:	in     eax,0x77
  4220c2:	mov    al,bl
  4220c4:	inc    esi
  4220c5:	int    0x40
  4220c7:	push   ebp
  4220c8:	push   cs
  4220c9:	mov    dh,0xc3
  4220cb:	jno    0x4220a4
  4220cd:	mov    ecx,0x7da4cbb6
  4220d2:	sbb    edx,DWORD PTR ds:0x2889d5ad
  4220d8:	(bad)
  4220dc:	shl    BYTE PTR [edx],cl
  4220de:	xchg   esi,eax
  4220df:	call   0x1e52:0x6adebef6
  4220e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e7:	and    dh,BYTE PTR [ebx]
  4220e9:	push   esi
  4220ea:	out    0x9e,eax
  4220ec:	add    bl,BYTE PTR [ecx+eax*1+0x28600]
  4220f3:	add    BYTE PTR [eax-0x4a],dl
  4220f6:	fisubr DWORD PTR [edi]
  4220f8:	push   0x2b
  4220fa:	sbb    ebx,DWORD PTR [esi+edx*4-0x55]
  4220fe:	(bad)  
  4220ff:	aad    0xff
  422101:	jbe    0x4220da
  422103:	mov    dh,0x4f
  422105:	in     al,0x42
  422107:	mov    ah,0x26
  422109:	loop   0x4220c1
  42210b:	xchg   esi,eax
  42210c:	(bad)  
  42210d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42210e:	inc    ecx
  42210f:	ins    DWORD PTR es:[edi],dx
  422110:	imul   DWORD PTR [edx]
  422112:	and    eax,0x8bb419a6
  422117:	dec    ecx
  422118:	inc    edx
  422119:	xchg   ebx,eax
  42211a:	js     0x422134
  42211c:	sbb    al,0xf2
  42211e:	xor    DWORD PTR [eax+esi*2-0x6c],ebx
  422122:	mov    dh,0x88
  422124:	xor    eax,0x9797c1ea
  422129:	iret   
  42212a:	loope  0x422187
  42212c:	ret    
  42212d:	jg     0x4221ac
  42212f:	sar    DWORD PTR [esi],0xa8
  422132:	cmp    al,0x9
  422134:	mov    ah,0xae
  422136:	jae    0x422123
  422138:	jno    0x4220db
  42213a:	std    
  42213b:	adc    DWORD PTR [eax-0x1b077661],eax
  422141:	xlat   BYTE PTR ds:[ebx]
  422142:	dec    ecx
  422143:	out    dx,al
  422144:	cmp    edi,ebx
  422146:	popa   
  422147:	push   esi
  422148:	xchg   esi,eax
  422149:	shr    BYTE PTR ds:0x1ab529d0,1
  42214f:	jae    0x4221cf
  422151:	bound  ebp,QWORD PTR [edi+0x74]
  422154:	(bad)  
  422156:	out    0xb8,eax
  422158:	bound  eax,QWORD PTR [edi-0x7779e516]
  42215e:	bound  ebp,QWORD PTR [ebp+ebp*1+0x71]
  422162:	sbb    DWORD PTR [edx+0x2c],ecx
  422165:	jo     0x422142
  422167:	aas    
  422168:	retf   
  422169:	les    ebx,FWORD PTR [eax+0x1f]
  42216c:	out    dx,eax
  42216d:	sar    BYTE PTR [eax+0xd],1
  422170:	ror    DWORD PTR [eax],cl
  422172:	pop    ebx
  422173:	push   eax
  422174:	jecxz  0x4221db
  422176:	sbb    esi,edi
  422178:	jns    0x422176
  42217a:	xchg   ebx,eax
  42217b:	std    
  42217c:	cld    
  42217d:	cmp    DWORD PTR [ebx-0x41c368d3],esp
  422183:	inc    ecx
  422184:	sub    esi,esi
  422186:	aad    0x15
  422188:	clc    
  422189:	pop    ds
  42218a:	or     BYTE PTR [eax+ebx*1+0x60322446],dl
  422191:	cmp    cl,bl
  422193:	lds    esi,FWORD PTR ds:0x25eac708
  422199:	(bad)  
  42219a:	jae    0x42212d
  42219c:	push   esi
  42219d:	push   esp
  42219e:	mov    DWORD PTR [esi+0x9],edx
  4221a1:	xchg   ecx,eax
  4221a2:	neg    BYTE PTR [eax-0x39]
  4221a5:	call   0x22a9c99a
  4221aa:	jmp    0x19a88f14
  4221af:	loopne 0x4221e4
  4221b1:	cmp    esi,0xffffffdc
  4221b4:	jbe    0x42218e
  4221b6:	push   edx
  4221b7:	mov    edx,0xa350e511
  4221bc:	mov    ebp,0x6c67ad05
  4221c1:	xchg   ebp,eax
  4221c2:	retf   0x91f2
  4221c5:	and    ch,BYTE PTR [esi-0x1025b126]
  4221cb:	rcr    BYTE PTR [eax-0x6b],0xf4
  4221cf:	sub    dh,al
  4221d1:	iret   
  4221d2:	jbe    0x42222e
  4221d4:	daa    
  4221d5:	add    DWORD PTR [esi+0x3b459a98],esp
  4221db:	sub    eax,0x89e0fd81
  4221e0:	jbe    0x42222e
  4221e2:	xchg   esp,eax
  4221e3:	jge    0x422206
  4221e5:	dec    edx
  4221e6:	jae    0x4221ed
  4221e8:	mov    dl,0xa1
  4221ea:	mov    al,0xe7
  4221ec:	jecxz  0x422210
  4221ee:	xchg   ebp,eax
  4221ef:	int    0xfb
  4221f1:	jmp    0xb3f1a023
  4221f6:	cs scas al,BYTE PTR es:[edi]
  4221f8:	into   
  4221f9:	nop
  4221fa:	mov    bh,0x42
  4221fc:	lock scas al,BYTE PTR es:[edi]
  4221fe:	jno    0x422264
  422200:	sub    dh,BYTE PTR [ecx]
  422202:	out    0xa2,eax
  422204:	sub    al,0x95
  422206:	daa    
  422207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422208:	popa   
  422209:	sbb    DWORD PTR ds:0xffc19ecb,edx
  42220f:	dec    edx
  422210:	jne    0x4221ce
  422212:	bound  eax,QWORD PTR [esi]
  422214:	jecxz  0x4221af
  422216:	cmp    eax,0xabefa4fa
  42221b:	jecxz  0x422243
  42221d:	(bad)  
  42221e:	int    0xb4
  422220:	mov    bl,0xf1
  422222:	push   esp
  422223:	sar    al,0x1e
  422226:	(bad)  
  422227:	dec    ebx
  422228:	mov    ds:0x6243badb,al
  42222d:	add    al,0xce
  42222f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422230:	xchg   ebp,eax
  422231:	add    al,BYTE PTR [ecx]
  422233:	in     al,0x87
  422235:	xchg   edi,eax
  422236:	jmp    0x1cf42158
  42223b:	adc    dl,BYTE PTR [esi]
  42223d:	enter  0xd34f,0x21
  422241:	out    dx,eax
  422242:	push   eax
  422243:	(bad)  
  422245:	sbb    bl,BYTE PTR [edi+0x2740f32c]
  42224b:	ins    BYTE PTR es:[edi],dx
  42224c:	push   es
  42224d:	xlat   BYTE PTR ds:[ebx]
  42224e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42224f:	inc    esi
  422250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422251:	inc    ecx
  422252:	cmp    DWORD PTR [eax+0x6e7a5bdf],ebp
  422258:	xchg   ebx,eax
  422259:	mov    ah,0xeb
  42225b:	out    0xe8,eax
  42225d:	call   0x1401:0x1b4dfcaf
  422264:	icebp  
  422265:	in     al,dx
  422266:	mov    BYTE PTR [esi+0x14e9483],ch
  42226c:	ret    0xb8c5
  42226f:	aaa    
  422270:	jge    0x422215
  422272:	hlt    
  422273:	test   DWORD PTR [ecx*4-0x4b0559f],ecx
  42227a:	jbe    0x42223d
  42227c:	jne    0x4222d6
  42227e:	js     0x4222ec
  422280:	pop    es
  422281:	pushf  
  422282:	cli    
  422283:	or     edi,DWORD PTR [edi+0x18]
  422286:	out    dx,eax
  422287:	mov    bh,0x72
  422289:	dec    esp
  42228a:	adc    eax,0x30ca7cba
  42228f:	jmp    0x397e:0xb13114bb
  422296:	stc    
  422297:	out    dx,eax
  422298:	addr16 fs or al,0x8c
  42229c:	ss nop
  42229e:	cmc    
  42229f:	das    
  4222a0:	sbb    eax,DWORD PTR [edi-0x6826125c]
  4222a6:	push   0xf780598e
  4222ab:	push   esi
  4222ac:	ss inc eax
  4222ae:	sti    
  4222af:	fadd   QWORD PTR [ebp-0x2df9fdb1]
  4222b5:	xchg   DWORD PTR [edx],esi
  4222b7:	jecxz  0x4222b9
  4222b9:	sbb    al,0x11
  4222bb:	inc    edi
  4222bc:	(bad)  
  4222bd:	(bad)  
  4222be:	mov    esi,0xa29b741
  4222c3:	mov    esi,DWORD PTR [ecx+edi*1]
  4222c6:	cli    
  4222c7:	shl    esp,cl
  4222c9:	mov    al,0x45
  4222cb:	mov    ch,0xc8
  4222cd:	aas    
  4222ce:	leave  
  4222cf:	data16 loopne 0x42231c
  4222d2:	adc    eax,0xad16ef8b
  4222d7:	stos   BYTE PTR es:[edi],al
  4222d8:	inc    esi
  4222d9:	jbe    0x422272
  4222db:	dec    eax
  4222dc:	sub    al,0x27
  4222de:	loope  0x4222b3
  4222e0:	jecxz  0x422288
  4222e2:	aam    0x6c
  4222e4:	into   
  4222e5:	or     DWORD PTR [ebp-0x62],esi
  4222e8:	xchg   BYTE PTR [edi+0x14bacac4],dh
  4222ee:	mov    ecx,0x55d274bd
  4222f3:	lock loop 0x422277
  4222f6:	and    dh,BYTE PTR [esp-0x597f8947]
  4222fd:	add    BYTE PTR [ecx+0x5],bl
  422300:	or     edx,DWORD PTR [ecx]
  422302:	enter  0xc67f,0xd5
  422306:	mov    eax,ds:0x9cfcf6a9
  42230b:	out    0xda,al
  42230d:	push   ebp
  42230e:	iret   
  42230f:	iret   
  422310:	call   0x3306f4c7
  422315:	sti    
  422316:	rcl    DWORD PTR [edi-0x16f2f34e],1
  42231c:	div    DWORD PTR [ebp+0x2b945a53]
  422322:	jo     0x422387
  422324:	mov    esi,0x8773468
  422329:	or     bh,BYTE PTR [eax+0x33f5cb93]
  42232f:	jg     0x4222c4
  422331:	inc    ebx
  422332:	nop
  422333:	and    ch,cl
  422335:	jmp    FWORD PTR [edi-0x5b7e676f]
  42233b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233c:	mov    esp,0x5cf93b4b
  422341:	sub    eax,0x3714ba91
  422346:	(bad)  
  422347:	ds (bad) 
  42234a:	cmc    
  42234b:	xchg   edi,eax
  42234c:	mov    ds:0x36447630,eax
  422351:	(bad)  
  422352:	jl     0x4222da
  422354:	or     edi,DWORD PTR [esi]
  422356:	rol    BYTE PTR [ebp+0x10c681f8],1
  42235c:	sahf   
  42235d:	outs   dx,BYTE PTR ds:[esi]
  42235e:	cmp    BYTE PTR [edi-0x5c6be7c9],cl
  422364:	and    edx,ebp
  422366:	sbb    eax,0x29d376d7
  42236b:	pop    eax
  42236c:	data16 or BYTE PTR [esi+0x30],ah
  422370:	aad    0x19
  422372:	(bad)  
  422373:	jmp    0x6073:0xcaafefa3
  42237a:	add    BYTE PTR [eax],al
  42237c:	fnstsw WORD PTR [edi+ecx*4]
  42237f:	mov    esp,0x7dffbfef
  422384:	add    al,BYTE PTR [ebp-0x26d5723f]
  42238a:	add    cl,BYTE PTR [edi]
  42238c:	mov    BYTE PTR [esi+0x2860001],bl
  422392:	add    BYTE PTR [eax],al
  422394:	inc    ebx
  422395:	xor    al,0x9c
  422397:	imul   edx,DWORD PTR [ebx],0xffffffb9
  42239a:	(bad)  
  42239b:	ficomp WORD PTR [ecx]
  42239d:	lods   eax,DWORD PTR ds:[esi]
  42239e:	push   es
  42239f:	ror    BYTE PTR [esi],cl
  4223a1:	pop    edx
  4223a2:	adc    DWORD PTR [ebx+0x77],esi
  4223a5:	jbe    0x42233f
  4223a7:	(bad)  
  4223a8:	ficom  DWORD PTR [eax+0x79]
  4223ab:	popf   
  4223ac:	jge    0x422415
  4223ae:	mov    bh,0xf9
  4223b0:	scas   eax,DWORD PTR es:[edi]
  4223b1:	cmp    DWORD PTR [eax+0x7ceff0c8],0xffffffed
  4223b8:	fwait
  4223b9:	mov    ebp,0xa31c6816
  4223be:	repnz pop esp
  4223c0:	dec    ecx
  4223c1:	adc    ch,BYTE PTR [ecx-0x28]
  4223c4:	pushf  
  4223c5:	xor    edi,esp
  4223c7:	(bad)  
  4223c8:	cld    
  4223c9:	xor    esi,DWORD PTR [edx]
  4223cb:	call   0xae6e:0x7450aa57
  4223d2:	rol    BYTE PTR [ebx],cl
  4223d4:	dec    esi
  4223d5:	dec    esp
  4223d6:	imul   edi,DWORD PTR [eax-0x5e],0xa3f918f7
  4223dd:	rol    DWORD PTR [ebx],1
  4223df:	pop    edi
  4223e0:	push   di
  4223e2:	out    dx,eax
  4223e3:	xor    al,0x8
  4223e5:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e7:	out    dx,al
  4223e8:	aas    
  4223e9:	int3   
  4223ea:	aad    0x83
  4223ec:	push   ebp
  4223ed:	jae    0x422424
  4223ef:	cmp    DWORD PTR [esi+0x166bd87d],ebx
  4223f5:	xor    eax,0x68f1053f
  4223fa:	test   al,0x97
  4223fc:	in     eax,dx
  4223fd:	xor    ecx,DWORD PTR [edx+0x46]
  422400:	lahf   
  422401:	and    DWORD PTR [ebx-0x1757157a],0xffffffae
  422408:	enter  0x30e1,0x6a
  42240c:	jl     0x422487
  42240e:	or     al,0x83
  422410:	cmp    dh,dl
  422412:	sub    eax,0xa3eb5036
  422417:	sahf   
  422418:	int    0x7e
  42241a:	cwde   
  42241b:	pop    ebx
  42241c:	pushf  
  42241d:	sar    DWORD PTR [ebx-0x782e0ad7],cl
  422423:	sbb    dl,BYTE PTR [esi+0x1850af85]
  422429:	arpl   cx,bp
  42242b:	pop    esp
  42242c:	popa   
  42242d:	ret    0x98ee
  422430:	jns    0x4223f7
  422432:	jg     0x4223bc
  422434:	int    0x9f
  422436:	or     eax,0xc94868fd
  42243b:	xchg   edi,eax
  42243c:	popf   
  42243d:	call   0xaeef026d
  422442:	stos   DWORD PTR es:[edi],eax
  422443:	sub    DWORD PTR gs:[eax-0x45],ecx
  422447:	neg    DWORD PTR [esi+0x24739638]
  42244d:	lahf   
  42244e:	ss adc eax,0x8bfca393
  422454:	fld    DWORD PTR [eax+0x3b]
  422457:	pop    ecx
  422458:	mov    al,ds:0x8fd9cc2b
  42245d:	adc    eax,0x6ebab270
  422462:	jecxz  0x42248b
  422464:	outs   dx,DWORD PTR ds:[esi]
  422465:	and    ah,cl
  422467:	pop    eax
  422468:	les    edx,FWORD PTR [eiz*8+0x6395a261]
  42246f:	jge    0x4224c3
  422471:	jge    0x42241b
  422473:	stos   DWORD PTR es:[edi],eax
  422474:	jno    0x422439
  422476:	sub    eax,0x45532557
  42247b:	dec    edx
  42247c:	and    edi,eax
  42247e:	jno    0x42242a
  422480:	test   eax,0x3423797a
  422485:	or     cl,0x46
  422488:	lea    esi,[ebx+esi*2]
  42248b:	xor    ecx,DWORD PTR [edi-0x5c]
  42248e:	aas    
  42248f:	pop    esi
  422490:	mov    eax,ds:0x1b5bf06b
  422495:	mov    ah,BYTE PTR [edi]
  422497:	add    BYTE PTR [esi],0xe6
  42249a:	jmp    0x422436
  42249c:	lods   al,BYTE PTR ds:[esi]
  42249d:	stc    
  42249e:	xor    DWORD PTR [ebx-0x2a7447af],esi
  4224a4:	inc    ecx
  4224a5:	push   ds
  4224a6:	aaa    
  4224a7:	push   esi
  4224a8:	jo     0x4224d7
  4224aa:	mul    DWORD PTR ds:0x17bf02dc
  4224b0:	push   ecx
  4224b1:	add    DWORD PTR [eax+eax*4+0x65],eax
  4224b5:	adc    eax,0x8476fd85
  4224ba:	xchg   BYTE PTR [edi-0x5f074a13],cl
  4224c0:	call   0xfa7d:0x6dba4ee1
  4224c7:	mov    BYTE PTR [ecx+edi*8],bl
  4224ca:	popf   
  4224cb:	xchg   ebp,eax
  4224cc:	gs push ebp
  4224ce:	rol    bl,0x5d
  4224d1:	mov    dh,dl
  4224d3:	iret   
  4224d4:	mov    edx,0xaaec2051
  4224d9:	test   DWORD PTR [edi+0xf],0xd9f6874c
  4224e0:	jl     0x4224af
  4224e2:	inc    eax
  4224e3:	lea    edx,[esi]
  4224e5:	xchg   esp,eax
  4224e6:	and    al,BYTE PTR [eax+ebx*1]
  4224e9:	lds    eax,FWORD PTR [eax-0x5e3be4f0]
  4224ef:	into   
  4224f0:	ins    BYTE PTR es:[edi],dx
  4224f1:	pushf  
  4224f2:	sbb    DWORD PTR [ecx],ebx
  4224f4:	jmp    0xf9b66a86
  4224f9:	pop    es
  4224fa:	jne    0x4224b4
  4224fc:	jo     0x42251c
  4224fe:	lea    edx,[edi+0x68de5d1b]
  422504:	mov    ebx,0x5ea98140
  422509:	add    eax,0x398f6fa9
  42250e:	aaa    
  42250f:	jo     0x42253c
  422511:	ds or  al,0xb3
  422514:	pop    ebp
  422515:	mov    bh,0xf1
  422517:	fisubr WORD PTR [edi+0x19]
  42251a:	cld    
  42251b:	stos   DWORD PTR es:[edi],eax
  42251c:	sbb    ebx,esi
  42251e:	pop    ss
  42251f:	out    dx,eax
  422520:	int3   
  422521:	dec    edx
  422522:	int    0xeb
  422524:	ins    BYTE PTR es:[edi],dx
  422525:	cdq    
  422526:	adc    ecx,DWORD PTR [ecx+0x4b]
  422529:	ins    BYTE PTR es:[edi],dx
  42252a:	repnz popf 
  42252c:	in     eax,0x49
  42252e:	or     esp,DWORD PTR [edx]
  422530:	xchg   ebp,eax
  422531:	mov    ecx,0xaacd51c9
  422536:	xrstors [eax+0x5917048e]
  42253d:	ss enter 0x52ed,0x68
  422542:	in     al,0x7
  422544:	outs   dx,BYTE PTR ds:[esi]
  422545:	data16 adc BYTE PTR ds:0xfbecdc51,ah
  42254c:	mov    ah,0x2
  42254e:	sti    
  42254f:	scas   eax,DWORD PTR es:[edi]
  422550:	(bad)  
  422551:	ja     0x422570
  422553:	or     al,BYTE PTR [ebx+edi*2+0x463317ad]
  42255a:	retf   0x208b
  42255d:	mov    edx,DWORD PTR [eax+0x4f]
  422560:	dec    DWORD PTR [eax+edx*8-0x50]
  422564:	sahf   
  422565:	pop    ecx
  422566:	das    
  422567:	xor    edi,DWORD PTR [ecx-0x54]
  42256a:	push   ss
  42256b:	les    ebx,FWORD PTR [edx-0x4fc12279]
  422571:	lahf   
  422572:	cmp    DWORD PTR [ebp+0x7a],0x5d
  422576:	mov    bh,0x90
  422578:	fisttp DWORD PTR [edi-0x25]
  42257b:	add    DWORD PTR [ebx],edi
  42257d:	aad    0xea
  42257f:	cmp    al,0x50
  422581:	fcom   QWORD PTR [edx]
  422583:	inc    edi
  422584:	shl    DWORD PTR [ebp+0x1c61ecb4],1
  42258a:	nop
  42258b:	push   ds
  42258c:	cs dec esi
  42258e:	inc    ecx
  42258f:	add    DWORD PTR cs:[edi+0x318ac3e3],ebx
  422596:	mov    edx,0xbbe735de
  42259b:	sbb    ch,bh
  42259d:	test   eax,0x62e417a5
  4225a2:	(bad)  
  4225a3:	arpl   WORD PTR [ecx],cx
  4225a5:	push   ebp
  4225a6:	mov    ds:0xd16ac77d,eax
  4225ab:	imul   ebx,DWORD PTR [eax+0x16],0xffffffc6
  4225af:	push   0x185e265d
  4225b4:	int    0x78
  4225b6:	push   ds
  4225b7:	inc    eax
  4225b8:	arpl   WORD PTR [ebx],cx
  4225ba:	add    BYTE PTR [ebp+0x270a6558],dl
  4225c0:	mov    eax,ds:0x9a6abbbb
  4225c5:	loop   0x422569
  4225c7:	pop    es
  4225c8:	jo     0x422570
  4225ca:	in     al,dx
  4225cb:	inc    esi
  4225cc:	xchg   ebp,eax
  4225cd:	sbb    BYTE PTR [ebx],0xb2
  4225d0:	push   0xffffffab
  4225d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d3:	test   al,0x3b
  4225d5:	bound  esp,QWORD PTR [ecx-0x5da002b]
  4225db:	int3   
  4225dc:	or     eax,0x295e8028
  4225e1:	push   eax
  4225e2:	ss inc ebx
  4225e4:	ins    BYTE PTR es:[edi],dx
  4225e5:	push   esp
  4225e6:	les    ebx,FWORD PTR [eax]
  4225e8:	scas   eax,DWORD PTR es:[edi]
  4225e9:	addr16 dec ebx
  4225eb:	not    BYTE PTR [ecx+0x38]
  4225ee:	fisubr DWORD PTR [ecx-0x556f56cd]
  4225f4:	sbb    al,0x16
  4225f6:	test   al,0xbc
  4225f8:	je     0x42266f
  4225fa:	adc    cl,dl
  4225fc:	int3   
  4225fd:	mov    ch,0xed
  4225ff:	dec    edx
  422600:	mov    eax,ds:0x38f45aef
  422605:	add    BYTE PTR [esi+0x53],cl
  422608:	cwde   
  422609:	shl    BYTE PTR [ecx-0x4b041be9],cl
  42260f:	sbb    eax,0x4003bfa0
  422614:	xchg   DWORD PTR [edx-0x17],edi
  422617:	bound  edi,QWORD PTR [ebp-0x49ffff7c]
  42261d:	fistp  WORD PTR [ebx-0x40b904fe]
  422623:	push   eax
  422625:	and    eax,0x2715255e
  42262a:	dec    eax
  42262b:	jge    0x42263b
  42262d:	mov    eax,ds:0x2860001
  422632:	add    BYTE PTR [eax],al
  422634:	fst    st(5)
  422636:	inc    ebp
  422637:	in     eax,dx
  422638:	sbb    eax,0xa198add4
  42263d:	mov    bl,0xbf
  42263f:	call   0x77f9469b
  422644:	push   ebx
  422645:	fsubr  DWORD PTR [eax+0x18]
  422648:	inc    ebx
  422649:	mov    ebx,0xec2054ff
  42264e:	push   ds
  42264f:	(bad)  
  422651:	xchg   edx,eax
  422652:	pop    ebp
  422653:	adc    bh,BYTE PTR [eax-0x3a]
  422656:	imul   ebx,DWORD PTR [edi+0x60d45e9c],0xffffff94
  42265d:	shl    DWORD PTR [eax],cl
  42265f:	mov    ebx,0x4fb58ace
  422664:	into   
  422665:	xchg   ebp,eax
  422666:	push   ss
  422667:	in     al,0x51
  422669:	jae    0x4225eb
  42266b:	dec    ecx
  42266c:	ja     0x42266f
  42266e:	test   al,0x9e
  422670:	(bad)  
  422671:	sbb    bl,BYTE PTR ds:0xe7f4ee8d
  422677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422678:	rcr    BYTE PTR [ebx],cl
  42267a:	rol    BYTE PTR [edi-0x43a5838f],0x2c
  422681:	stos   BYTE PTR es:[edi],al
  422682:	int3   
  422683:	out    dx,al
  422684:	lds    esi,FWORD PTR [ebp+0x2b14cce6]
  42268a:	enter  0xcf61,0x97
  42268e:	add    dl,BYTE PTR [ebx+eax*4-0x23]
  422692:	inc    esp
  422693:	push   eax
  422694:	inc    ebx
  422695:	int    0x5d
  422697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422698:	jno    0x42265e
  42269a:	or     eax,edi
  42269c:	add    eax,DWORD PTR [ecx+esi*8]
  42269f:	or     eax,0xedc446fc
  4226a4:	aas    
  4226a5:	adc    al,0x41
  4226a7:	jmp    0x2394:0x8e33e473
  4226ae:	fcom   DWORD PTR [ebp+0xa]
  4226b1:	mov    ss,ebp
  4226b3:	test   eax,0xe33d27e8
  4226b8:	cmc    
  4226b9:	cli    
  4226ba:	or     ebx,DWORD PTR [edx]
  4226bc:	mov    ch,0x68
  4226be:	adc    DWORD PTR [edi],esp
  4226c0:	mov    ah,0x93
  4226c2:	push   edx
  4226c3:	sahf   
  4226c4:	das    
  4226c5:	loop   0x422661
  4226c7:	sbb    edx,DWORD PTR [ebp+ecx*1-0x66c6c73]
  4226ce:	neg    DWORD PTR [ebp+0x5b3823ee]
  4226d4:	into   
  4226d5:	in     al,0x1c
  4226d7:	xchg   ebp,eax
  4226d8:	jl     0x4226ed
  4226da:	sbb    al,0x1c
  4226dc:	lea    edx,[esi]
  4226de:	add    al,0xab
  4226e0:	mov    dh,0x86
  4226e2:	and    dh,dl
  4226e4:	mov    ebp,0x69469e0c
  4226e9:	jl     0x4226ff
  4226eb:	cmp    BYTE PTR [edx-0x15],al
  4226ee:	call   0x6a97018f
  4226f3:	leave  
  4226f4:	dec    ebp
  4226f5:	and    ch,al
  4226f7:	ss jp  0x4226ea
  4226fa:	jl     0x4226a5
  4226fc:	jmp    0x422742
  4226fe:	sbb    eax,DWORD PTR [eax]
  422700:	and    BYTE PTR [ebx],bl
  422702:	sbb    BYTE PTR gs:[edi-0xec2bff1],0xc3
  42270a:	cdq    
  42270b:	pop    eax
  42270c:	stc    
  42270d:	loopne 0x422747
  42270f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422710:	ret    0xe3e0
  422713:	or     al,0x7b
  422715:	scas   eax,DWORD PTR es:[edi]
  422716:	out    0xdf,eax
  422718:	lods   eax,DWORD PTR ds:[esi]
  422719:	xor    DWORD PTR [edx+ebp*2+0x4b],0xc20f6e3
  422721:	mov    esi,0xd47a27a4
  422726:	rol    BYTE PTR [esi+0x5f24a35c],0xf2
  42272d:	(bad)  
  42272e:	and    eax,0xe577478d
  422733:	and    BYTE PTR [edi+0x223f1117],al
  422739:	push   eax
  42273a:	data16 or BYTE PTR [edx+0x5a1176d3],al
  422741:	add    cl,BYTE PTR [edi-0x4ccf199d]
  422747:	pop    ds
  422748:	(bad)  
  422749:	ficom  DWORD PTR [eax+0x77cdbe75]
  42274f:	fcom   QWORD PTR [ecx-0x3f]
  422752:	fdivr  QWORD PTR [edx]
  422754:	out    dx,al
  422755:	retf   
  422756:	xor    eax,0x83eaddaa
  42275b:	rcr    DWORD PTR [ecx],0xbc
  42275e:	stos   BYTE PTR es:[edi],al
  42275f:	je     0x422764
  422761:	test   al,0x43
  422763:	add    esi,edx
  422765:	xchg   ah,ch
  422767:	xor    eax,0xcd2a33b7
  42276c:	or     DWORD PTR ds:0x16226ed3,edi
  422772:	adc    esp,DWORD PTR [eax]
  422774:	fisub  DWORD PTR [ecx+0x6cc653dc]
  42277a:	push   edi
  42277b:	adc    BYTE PTR ds:0x4a22f142,bl
  422781:	add    cl,BYTE PTR [edi-0x65]
  422784:	sbb    al,0xf7
  422786:	scas   eax,DWORD PTR es:[edi]
  422787:	(bad)  
  422788:	mov    ch,cl
  42278a:	sbb    DWORD PTR [edx+0x20e73790],esp
  422790:	mov    ds:0x1e90aa0b,al
  422795:	xchg   edi,eax
  422796:	add    ecx,DWORD PTR [edx-0x76]
  422799:	call   0x3cb20266
  42279e:	jp     0x4227cc
  4227a0:	xchg   ebp,eax
  4227a1:	cmc    
  4227a2:	xor    ah,BYTE PTR [ecx+0x21908885]
  4227a8:	pop    ecx
  4227a9:	xchg   ecx,eax
  4227aa:	sahf   
  4227ab:	imul   BYTE PTR [edi]
  4227ad:	jo     0x422810
  4227af:	mov    esi,0x871df2fd
  4227b4:	aad    0x49
  4227b6:	or     BYTE PTR [edi+0xa],0x4b
  4227ba:	xchg   esp,eax
  4227bb:	push   0xffffffb2
  4227bd:	pop    ds
  4227be:	jl     0x422816
  4227c0:	jge    0x42275a
  4227c2:	sar    BYTE PTR [ecx-0x66cae7b3],cl
  4227c8:	(bad)  
  4227c9:	shr    BYTE PTR [esi-0x6c],1
  4227cc:	ret    0xdfcd
  4227cf:	dec    BYTE PTR [esi]
  4227d1:	add    dh,BYTE PTR [esi]
  4227d3:	cmc    
  4227d4:	clc    
  4227d5:	and    ebp,DWORD PTR [ebp+0x1c]
  4227d8:	mov    edi,0x23c5530f
  4227dd:	jnp    0x42276e
  4227df:	loop   0x4227e6
  4227e1:	jg     0x422803
  4227e3:	ret    0x492a
  4227e6:	jbe    0x42279e
  4227e8:	pop    ecx
  4227e9:	xor    cl,BYTE PTR [esi-0x6f7122bb]
  4227ef:	(bad)  
  4227f0:	mov    dh,0xd7
  4227f2:	or     al,0x8f
  4227f4:	mov    fs,WORD PTR [ecx+0x3834f205]
  4227fa:	xchg   esp,eax
  4227fb:	dec    edi
  4227fc:	lea    esp,[esp+ebx*2]
  4227ff:	or     dl,BYTE PTR [edi*4-0x19e7fc91]
  422806:	into   
  422807:	inc    ecx
  422808:	dec    ebx
  422809:	inc    esi
  42280a:	adc    DWORD PTR [ebx-0x3cb8bf59],esi
  422810:	es out dx,al
  422812:	popa   
  422813:	cdq    
  422814:	jae    0x4227bd
  422816:	sti    
  422817:	mov    dh,0xab
  422819:	sub    ebx,0x9b864d1a
  42281f:	enter  0xb092,0x3c
  422823:	test   DWORD PTR [edi],eax
  422825:	add    al,ah
  422827:	dec    ebx
  422828:	test   eax,0xd9441466
  42282d:	call   0xe2a2:0x9b189fd9
  422834:	mov    esi,0x3d3fcc95
  422839:	xchg   edx,eax
  42283a:	xchg   edx,eax
  42283b:	popf   
  42283c:	xor    esi,ebx
  42283e:	mov    eax,0xf4cee29f
  422843:	(bad)  
  422845:	xchg   edx,eax
  422846:	cmp    ecx,DWORD PTR [edi]
  422848:	xor    eax,0xcb63f234
  42284d:	sbb    eax,0xd1bddd1d
  422852:	dec    edx
  422853:	push   edi
  422854:	mov    dl,0x1a
  422856:	mov    dh,0xfc
  422858:	(bad)  
  42285a:	fs jmp 0xb869:0xf83e789e
  422862:	gs push eax
  422864:	jge    0x42289d
  422866:	and    eax,esi
  422868:	pop    ds
  422869:	mov    dh,0x6d
  42286b:	add    DWORD PTR [ebx],edx
  42286d:	mov    ds:0x7491c26,eax
  422872:	(bad)  
  422873:	jo     0x422829
  422875:	jno    0x422817
  422877:	pop    es
  422878:	ja     0x422897
  42287a:	cmc    
  42287b:	out    dx,eax
  42287c:	call   0x265f:0xa33fcb98
  422883:	jge    0x422812
  422885:	mov    ecx,0x2c38b45e
  42288a:	push   0xffffffbf
  42288c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42288d:	dec    ebx
  42288e:	pop    esi
  42288f:	adc    eax,0xa1d9002c
  422894:	push   0xffffff8a
  422896:	call   0x5775:0xed813288
  42289d:	push   ds
  42289e:	fild   WORD PTR [eax]
  4228a0:	outs   dx,BYTE PTR ds:[esi]
  4228a1:	xor    eax,0xb6b4869e
  4228a6:	adc    ebx,DWORD PTR [ebx]
  4228a8:	loop   0x422884
  4228aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228ab:	popf   
  4228ac:	jl     0x42287f
  4228ae:	or     DWORD PTR [ebp+0x6ed32f43],ebx
  4228b4:	call   0xaf1e66d5
  4228b9:	xchg   ebx,eax
  4228ba:	add    BYTE PTR [eax],al
  4228bc:	clc    
  4228bd:	mov    ah,0x7f
  4228bf:	cmp    eax,0xf5faff7f
  4228c4:	jle    0x4228c8
  4228c6:	xor    eax,DWORD PTR [esi+0x2c]
  4228c9:	inc    esp
  4228ca:	xchg   ebp,eax
  4228cb:	pusha  
  4228cc:	xchg   esp,eax
  4228cd:	mov    ds:0x2860001,eax
  4228d2:	add    BYTE PTR [eax],al
  4228d4:	stos   BYTE PTR es:[edi],al
  4228d5:	sub    eax,0x937ec202
  4228da:	shr    BYTE PTR [ecx+ebp*8+0x75],cl
  4228de:	inc    ebx
  4228df:	push   ebp
  4228e0:	scas   al,BYTE PTR es:[edi]
  4228e1:	out    dx,al
  4228e2:	mov    al,0xb3
  4228e4:	jnp    0x422965
  4228e6:	in     eax,0x5e
  4228e8:	pop    esp
  4228e9:	cmp    DWORD PTR [ecx+0x3d3f9168],ebx
  4228ef:	fs ja  0x422912
  4228f2:	test   edi,0x4cc02155
  4228f8:	mov    fs,WORD PTR ds:0xfdc4ce2a
  4228fe:	idiv   BYTE PTR [ecx]
  422900:	sbb    DWORD PTR [ebx+0x6f],esi
  422903:	shr    bl,cl
  422905:	in     eax,dx
  422906:	sti    
  422907:	stc    
  422908:	push   cs
  422909:	cwde   
  42290a:	rcl    DWORD PTR [edx],1
  42290c:	int3   
  42290d:	(bad)  
  42290e:	push   ebp
  42290f:	push   0xffffffc2
  422911:	push   0xe4059edc
  422916:	mov    ah,0x7e
  422918:	jl     0x4228ac
  42291a:	adc    BYTE PTR [edx+edx*4-0x2a],cl
  42291e:	push   edx
  42291f:	inc    edi
  422920:	shr    DWORD PTR [esi+0x5427b6e1],cl
  422926:	sub    eax,0x333c9d66
  42292b:	and    eax,0x9edd589d
  422930:	add    ebp,DWORD PTR [eax-0x5417394b]
  422936:	mov    esp,0x40d3142c
  42293b:	inc    eax
  42293c:	cmp    al,0x9d
  42293e:	test   BYTE PTR [esi],0xc5
  422941:	xor    esp,DWORD PTR [ebp-0x56]
  422944:	jecxz  0x4229b3
  422946:	xchg   ebx,eax
  422947:	mov    dl,0x28
  422949:	fst    DWORD PTR [ecx+edi*1+0x46]
  42294d:	das    
  42294e:	ret    0x1e4f
  422951:	lea    ebp,ds:0xda759079
  422957:	push   es
  422958:	push   ebp
  422959:	lock cmp BYTE PTR ds:0x3563c63e,bh
  422960:	cs ins BYTE PTR es:[edi],dx
  422962:	sar    dh,0x6b
  422965:	and    eax,0x815c6489
  42296a:	dec    esi
  42296b:	cs pop eax
  42296d:	mov    BYTE PTR [ecx-0x4a],0x1e
  422971:	and    eax,0x82ddd60f
  422976:	mov    edx,0xf422503
  42297b:	fild   WORD PTR [ebx]
  42297d:	add    al,0xad
  42297f:	sbb    ecx,edi
  422981:	stos   DWORD PTR es:[edi],eax
  422982:	pop    edx
  422983:	cmp    dl,BYTE PTR [edx+0x6582b13]
  422989:	clc    
  42298a:	fsubr  st(7),st
  42298c:	fucom  st(4)
  42298e:	test   BYTE PTR [edi+0x6f],cl
  422991:	les    ecx,FWORD PTR [esi-0x1f2b4c5f]
  422997:	ficom  DWORD PTR [eax+0x7cb46f4a]
  42299d:	mov    bl,0xea
  42299f:	fidiv  WORD PTR [ecx]
  4229a1:	ret    
  4229a2:	outs   dx,BYTE PTR ds:[esi]
  4229a3:	into   
  4229a4:	repnz cmp BYTE PTR es:[ecx-0x65482e03],cl
  4229ac:	std    
  4229ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229ae:	pop    DWORD PTR cs:[eax+0x4b3df1ae]
  4229b5:	jle    0x422a0b
  4229b7:	adc    eax,0xee3f25b6
  4229bc:	fsub   DWORD PTR [ebx-0x39]
  4229bf:	cdq    
  4229c0:	jmp    0x422a36
  4229c2:	xor    BYTE PTR [esi],bl
  4229c4:	and    al,ah
  4229c6:	sti    
  4229c7:	cld    
  4229c8:	mov    esi,0x87eb9e71
  4229cd:	dec    esp
  4229ce:	bound  ebx,QWORD PTR [esi+0x77]
  4229d1:	ds mov ecx,0x38749bba
  4229d7:	jl     0x422a31
  4229d9:	cmp    dl,BYTE PTR [esi]
  4229db:	jge    0x422a34
  4229dd:	mov    DWORD PTR [ebx],edx
  4229df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229e0:	bnd je 0x422a58
  4229e3:	jl     0x4229a1
  4229e5:	pop    ss
  4229e6:	(bad)  
  4229e7:	jge    0x422a12
  4229e9:	add    BYTE PTR [ebx],cl
  4229eb:	push   ss
  4229ec:	pushf  
  4229ed:	aad    0x19
  4229ef:	scas   al,BYTE PTR es:[edi]
  4229f0:	imul   ebp,edi,0xffffffee
  4229f3:	arpl   WORD PTR [edi],cx
  4229f5:	jg     0x42299c
  4229f7:	cmp    DWORD PTR [esi-0xf839314],esp
  4229fd:	sub    al,bh
  4229ff:	pop    edi
  422a00:	ret    0x5355
  422a03:	(bad)  
  422a04:	xchg   ebx,eax
  422a05:	fsubr  st(2),st
  422a07:	xchg   esi,eax
  422a08:	push   0xffffffaf
  422a0a:	jmp    0x422a0f
  422a0c:	dec    ebp
  422a0d:	pushf  
  422a0e:	push   ebp
  422a0f:	jl     0x422a0d
  422a11:	stc    
  422a12:	shl    DWORD PTR [ecx-0x5f635b6],0xf2
  422a19:	add    bl,bh
  422a1b:	pop    ds
  422a1c:	enter  0xa632,0x6
  422a20:	iret   
  422a21:	loopne 0x4229e3
  422a23:	cmc    
  422a24:	je     0x422a64
  422a26:	pop    edi
  422a27:	(bad)  
  422a28:	jo     0x422a12
  422a2a:	(bad)  
  422a2b:	jmp    0x6347a2ad
  422a30:	hlt    
  422a31:	sbb    DWORD PTR [ebp+0x434bd61f],ebx
  422a37:	outs   dx,BYTE PTR ds:[esi]
  422a38:	inc    ebp
  422a39:	aam    0xb
  422a3b:	inc    edi
  422a3c:	xchg   edi,eax
  422a3d:	jge    0x7fe2843a
  422a43:	or     al,0x34
  422a45:	and    al,0x3a
  422a47:	dec    esp
  422a48:	(bad)
  422a4b:	enter  0xfffb,0xb1
  422a4f:	(bad)  
  422a50:	inc    edi
  422a51:	inc    ecx
  422a52:	repnz mov ecx,0x6485c0ac
  422a58:	xchg   BYTE PTR [ecx],bh
  422a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a5b:	mov    bh,0xcc
  422a5d:	add    al,0xce
  422a5f:	mov    ebp,0x1e93d42b
  422a64:	lods   eax,DWORD PTR ds:[esi]
  422a65:	lods   al,BYTE PTR ds:[esi]
  422a66:	fwait
  422a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a68:	mov    al,ds:0x830fa034
  422a6d:	test   al,0x9d
  422a6f:	nop    DWORD PTR [edx-0x33]
  422a73:	(bad)  
  422a74:	into   
  422a75:	pop    ecx
  422a76:	stc    
  422a77:	mov    gs,WORD PTR [esi+0x7b]
  422a7a:	fwait
  422a7b:	xchg   ecx,eax
  422a7c:	into   
  422a7d:	sbb    eax,0xc58fc1bb
  422a82:	cmp    eax,0x6b274939
  422a87:	and    ch,BYTE PTR [ebx+0x3a15dc3]
  422a8d:	ja     0x422afd
  422a8f:	lahf   
  422a90:	rcl    DWORD PTR [ecx],1
  422a92:	push   ecx
  422a93:	jo     0x422ada
  422a95:	add    cl,ch
  422a97:	jle    0x422a95
  422a99:	stos   BYTE PTR es:[edi],al
  422a9a:	in     eax,0x84
  422a9c:	cmp    DWORD PTR [esi-0x63],eax
  422a9f:	push   0xffffffd5
  422aa1:	mov    eax,0x4efea579
  422aa6:	daa    
  422aa7:	dec    ecx
  422aa8:	pop    edx
  422aa9:	fs mov ch,0xa4
  422aac:	mov    BYTE PTR [edx-0x52ad3117],al
  422ab2:	pop    ebx
  422ab3:	call   0x60ad0a38
  422ab8:	jp     0x422ac3
  422aba:	(bad)  [ebx]
  422abc:	rcl    BYTE PTR [ebx],0xa2
  422abf:	or     BYTE PTR [edi],0xa3
  422ac2:	pshufw mm6,mm3,0xd3
  422ac6:	and    bl,bh
  422ac8:	call   0x71244f5f
  422acd:	sbb    eax,0x2bad4b0e
  422ad2:	mov    ds:0x5cc6b082,al
  422ad7:	mov    ah,0x56
  422ad9:	add    BYTE PTR [edi],bl
  422adb:	dec    DWORD PTR [edi]
  422add:	aad    0x4b
  422adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae0:	sub    al,0x85
  422ae2:	sahf   
  422ae3:	lds    ecx,FWORD PTR [eax+edx*1]
  422ae6:	push   esp
  422ae7:	jb     0x422acf
  422ae9:	dec    ebp
  422aea:	push   es
  422aeb:	jl     0x422abb
  422aed:	call   0xcb75f3aa
  422af2:	sbb    BYTE PTR [edx+0x13],0xbf
  422af6:	xor    BYTE PTR [ebp+0x4],0xc0
  422afa:	in     eax,dx
  422afb:	ins    BYTE PTR es:[edi],dx
  422afc:	leave  
  422afd:	fbld   TBYTE PTR [esi-0x26]
  422b00:	repz mov edx,0xc314c731
  422b06:	shl    BYTE PTR [ecx-0x53],0xe8
  422b0a:	xor    al,0x8a
  422b0c:	fisttp QWORD PTR [edi+0x35]
  422b0f:	mov    eax,0x3d5643eb
  422b14:	sub    BYTE PTR [edi+0x43b8d8f3],ch
  422b1a:	hlt    
  422b1b:	jb     0x422b80
  422b1d:	xchg   DWORD PTR [ebp-0x4663f081],ebx
  422b23:	cmp    ecx,DWORD PTR [ecx+0x62]
  422b26:	xchg   esp,eax
  422b27:	call   0xfd62baed
  422b2c:	mov    eax,DWORD PTR [ebx]
  422b2e:	inc    edx
  422b2f:	popa   
  422b30:	pop    ds
  422b31:	in     eax,0x5a
  422b33:	test   DWORD PTR [edx+0x80a2e42],ebx
  422b39:	push   DWORD PTR [edx]
  422b3b:	shl    BYTE PTR ds:0x563bef07,1
  422b41:	pop    edi
  422b42:	call   0xff6a84f3
  422b47:	mov    edi,0x1a2e43a
  422b4c:	ror    DWORD PTR [eax-0x42],0x72
  422b50:	cdq    
  422b51:	dec    edi
  422b52:	cmp    eax,0x15eb6aa9
  422b57:	sbb    al,0x30
  422b59:	js     0x422b5b
  422b5b:	add    BYTE PTR [ecx],bh
  422b5d:	sbb    al,0x89
  422b5f:	out    0xad,eax
  422b61:	idiv   DWORD PTR [edi-0x22]
  422b64:	mov    DWORD PTR [edx+0x79],ebp
  422b67:	cmp    DWORD PTR [esi+edi*1-0x59e588d2],0x2860001
  422b72:	add    BYTE PTR [eax],al
  422b74:	nop
  422b75:	add    eax,0x23f8036e
  422b7a:	scas   eax,DWORD PTR es:[edi]
  422b7b:	and    al,dh
  422b7d:	fwait
  422b7e:	xchg   ecx,eax
  422b7f:	push   edi
  422b80:	mov    WORD PTR ss:[ebx+0x58],?
  422b84:	fild   WORD PTR [edx-0x17]
  422b87:	push   0x6bc6d589
  422b8c:	gs fs add ah,cl
  422b90:	in     al,dx
  422b91:	jecxz  0x422b22
  422b93:	popa   
  422b94:	cmc    
  422b95:	xchg   ebp,eax
  422b96:	enter  0xd0a1,0xd3
  422b9a:	div    cl
  422b9c:	cmp    eax,0xb928b02b
  422ba1:	fld    TBYTE PTR [ebx]
  422ba3:	xchg   edx,eax
  422ba4:	inc    esi
  422ba5:	mov    ah,0x80
  422ba7:	gs ins DWORD PTR es:[edi],dx
  422ba9:	sahf   
  422baa:	pop    ecx
  422bab:	lods   al,BYTE PTR ds:[esi]
  422bac:	loopne 0x422bc3
  422bae:	xor    BYTE PTR [ebp+0x7b1f71f8],dh
  422bb4:	fmul   st(0),st
  422bb6:	jmp    0x422bdb
  422bb8:	loopne 0x422c34
  422bba:	ja     0x422b93
  422bbc:	xor    DWORD PTR [ebp+0x76],eax
  422bbf:	xor    cl,BYTE PTR [ecx]
  422bc1:	and    bh,BYTE PTR [ebp+0x789a46c1]
  422bc7:	inc    esp
  422bc8:	mov    ebp,0x30a3e399
  422bcd:	enter  0x37f4,0x2
  422bd1:	frstor [esi-0x1bdecdc4]
  422bd7:	jno    0x422c40
  422bd9:	mov    ds:0x53372173,al
  422bde:	(bad)  
  422bdf:	sar    DWORD PTR [ecx],1
  422be1:	push   ecx
  422be2:	add    BYTE PTR [esi+0x79c29435],ah
  422be8:	xchg   ebp,eax
  422be9:	je     0x422c33
  422beb:	shl    esp,cl
  422bed:	aas    
  422bee:	sbb    ch,BYTE PTR [esi+0x49]
  422bf1:	mov    bl,0x16
  422bf3:	xlat   BYTE PTR ds:[ebx]
  422bf4:	(bad)  
  422bf5:	dec    esp
  422bf6:	mov    al,ds:0x48e61228
  422bfb:	cmp    ch,al
  422bfd:	adc    BYTE PTR [esi-0x6f],al
  422c00:	repnz rcl DWORD PTR [eax+esi*2+0x38],1
  422c05:	cs inc esi
  422c07:	inc    edx
  422c08:	add    eax,0x505d2e22
  422c0d:	retf   0xaf10
  422c10:	cwde   
  422c11:	enter  0x879,0x52
  422c15:	inc    ebp
  422c16:	sbb    DWORD PTR [eax+0x25],ebp
  422c19:	mov    eax,ds:0x305b0607
  422c1e:	pop    ecx
  422c1f:	sub    cl,BYTE PTR [edx]
  422c21:	push   es
  422c22:	mov    ebp,0x2d43ad53
  422c27:	dec    ebx
  422c28:	out    dx,al
  422c29:	loop   0x422c26
  422c2b:	arpl   WORD PTR [ecx+edi*8+0x2c],cx
  422c2f:	test   al,0x4e
  422c31:	add    ecx,DWORD PTR ds:0xdd01c11d
  422c37:	test   DWORD PTR [edi+0x67],ebx
  422c3a:	loop   0x422c10
  422c3c:	(bad)  
  422c3e:	jl     0x422cb4
  422c40:	mov    ecx,0x33ef2bb7
  422c45:	xchg   BYTE PTR [ebx+edx*4-0x40],dh
  422c49:	adc    eax,0xccb2e905
  422c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4f:	jmp    0x422cd0
  422c51:	sbb    dh,BYTE PTR [ebp-0x26]
  422c54:	push   ebx
  422c55:	sub    dl,BYTE PTR [ebx-0x5bd4ea29]
  422c5b:	std    
  422c5c:	add    ebp,DWORD PTR [ecx-0x11dda428]
  422c62:	push   ds
  422c63:	push   es
  422c64:	enter  0x3fb,0xf9
  422c68:	dec    BYTE PTR [edi+0x4028a2e2]
  422c6e:	push   es
  422c6f:	pop    es
  422c70:	dec    ebx
  422c71:	bnd jge 0x422ce8
  422c74:	add    BYTE PTR [esi+0x3c],dl
  422c77:	push   ebx
  422c78:	aas    
  422c79:	jmp    DWORD PTR [edi+ebx*2]
  422c7c:	lods   al,BYTE PTR ds:[esi]
  422c7d:	ins    DWORD PTR es:[edi],dx
  422c7e:	push   0xffffffc4
  422c80:	aaa    
  422c81:	xchg   ecx,eax
  422c82:	in     al,0xea
  422c84:	cmp    esi,esi
  422c86:	ret    0xec15
  422c89:	bound  ecx,QWORD PTR ss:[edi-0x7f]
  422c8d:	sbb    BYTE PTR [eax+edx*8-0x30],ch
  422c91:	clc    
  422c92:	mov    ebp,0x385486b5
  422c97:	fwait
  422c98:	test   eax,0x5bce06c9
  422c9d:	xlat   BYTE PTR ds:[ebx]
  422c9e:	pop    eax
  422c9f:	ret    
  422ca0:	pop    edi
  422ca1:	int    0xf9
  422ca3:	cmp    eax,0x2d884914
  422ca8:	mov    al,ds:0xe24c9024
  422cad:	pop    eax
  422cae:	(bad)  
  422caf:	frstor [eax]
  422cb1:	jg     0x422c68
  422cb3:	fsub   QWORD PTR [ebp-0x1f7de07b]
  422cb9:	in     al,dx
  422cba:	lods   al,BYTE PTR ds:[esi]
  422cbb:	lahf   
  422cbc:	or     esp,0xfffffff1
  422cbf:	test   al,0xb2
  422cc1:	in     eax,0x28
  422cc3:	jmp    0x36aef844
  422cc8:	out    0xd6,eax
  422cca:	adc    al,0x4a
  422ccc:	punpcklbw mm4,DWORD PTR [eax+eax*8+0x10e8e0e6]
  422cd4:	imul   edx,DWORD PTR [ecx+ecx*2],0xffffff81
  422cd8:	mov    bl,0x46
  422cda:	pop    ds
  422cdb:	out    0x47,eax
  422cdd:	lea    ecx,fs:0x626e5bb5
  422ce4:	in     al,0x8d
  422ce6:	stc    
  422ce7:	mov    edi,0xc5b2b5f7
  422cec:	clc    
  422ced:	and    bh,BYTE PTR [ebp+0x7b06180f]
  422cf3:	mov    bh,0x7f
  422cf5:	push   ebx
  422cf6:	pushf  
  422cf7:	sub    eax,0x226fab81
  422cfc:	dec    ecx
  422cfd:	and    edx,DWORD PTR [edx-0x51a47f38]
  422d03:	mov    ecx,0xbc02cf63
  422d08:	lock sbb eax,0xe263e488
  422d0e:	mov    eax,ds:0x5298a6b3
  422d13:	mov    ch,0x41
  422d15:	icebp  
  422d16:	jmp    0x422cc4
  422d18:	sti    
  422d19:	sub    BYTE PTR [ecx-0x715628ec],bl
  422d1f:	neg    cl
  422d21:	jb     0x422cff
  422d23:	xchg   ecx,eax
  422d24:	push   esi
  422d25:	mov    edx,0x8342136e
  422d2a:	iret   
  422d2b:	sbb    ebx,DWORD PTR [edx]
  422d2d:	pop    ebx
  422d2e:	lods   eax,DWORD PTR ds:[esi]
  422d2f:	pop    ds
  422d30:	popf   
  422d31:	outs   dx,DWORD PTR ds:[esi]
  422d32:	xor    DWORD PTR [ebp+0x6c319c1f],edi
  422d38:	test   al,0xb2
  422d3a:	outs   dx,BYTE PTR ds:[esi]
  422d3b:	xchg   esi,eax
  422d3c:	lods   eax,DWORD PTR ds:[esi]
  422d3d:	dec    ecx
  422d3e:	add    BYTE PTR [eax],ch
  422d40:	pop    ds
  422d41:	sbb    DWORD PTR [esi+ecx*1],eax
  422d44:	jb     0x422d30
  422d46:	cli    
  422d47:	adc    al,0xbb
  422d49:	xor    ebp,DWORD PTR [ebp-0x267bf0c7]
  422d4f:	int3   
  422d50:	scas   al,BYTE PTR es:[edi]
  422d51:	icebp  
  422d52:	mov    edi,0x819f313b
  422d57:	inc    ecx
  422d58:	stc    
  422d59:	inc    edx
  422d5a:	or     DWORD PTR [ecx-0x161f0e49],esp
  422d60:	into   
  422d61:	lods   eax,DWORD PTR ds:[esi]
  422d62:	xor    BYTE PTR [edx-0x1c],dh
  422d65:	mov    ah,0xd7
  422d67:	daa    
  422d68:	jae    0x422cee
  422d6a:	inc    edi
  422d6b:	lahf   
  422d6c:	retf   
  422d6d:	ds sbb al,0x9a
  422d70:	jmp    0xd7881e1c
  422d75:	js     0x422d1b
  422d77:	xor    ecx,DWORD PTR [esi+0x352852c8]
  422d7d:	sub    al,0x7b
  422d7f:	shl    DWORD PTR [edx+0x2195eadf],cl
  422d85:	sbb    cl,BYTE PTR [ecx]
  422d87:	or     al,0xb2
  422d89:	mov    al,0x11
  422d8b:	test   al,0x76
  422d8d:	mov    eax,ds:0xcafa366a
  422d92:	ficom  DWORD PTR [edx]
  422d94:	out    0x46,eax
  422d96:	in     eax,0xd0
  422d98:	jbe    0x422dde
  422d9a:	xchg   esp,eax
  422d9b:	outs   dx,DWORD PTR ds:[esi]
  422d9c:	pop    es
  422d9d:	cmp    al,0x28
  422d9f:	test   DWORD PTR [edi],ebp
  422da1:	add    al,0x75
  422da3:	ds cwde 
  422da5:	jo     0x422d9c
  422da7:	out    dx,eax
  422da8:	arpl   WORD PTR [esp+eiz*8-0x6c],dx
  422dac:	adc    DWORD PTR [ebx+0x61760536],edx
  422db2:	add    eax,0x86e3c102
  422db7:	sub    eax,0xb07f6b7a
  422dbc:	scas   al,BYTE PTR es:[edi]
  422dbd:	xchg   BYTE PTR [edx-0x2c937d10],cl
  422dc3:	sti    
  422dc4:	jl     0x422dd5
  422dc6:	xchg   esi,eax
  422dc7:	shr    DWORD PTR [esi+0x54f6d387],1
  422dcd:	pop    eax
  422dce:	mov    eax,ds:0xc0722cc7
  422dd3:	ss cli 
  422dd5:	and    DWORD PTR [esi],ecx
  422dd7:	and    edi,ecx
  422dd9:	es mov edi,0x4fd2fa32
  422ddf:	push   eax
  422de0:	ja     0x422e51
  422de2:	(bad)  [ebx-0x3fcfb090]
  422de8:	lods   al,BYTE PTR ds:[esi]
  422de9:	pop    ecx
  422dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422deb:	push   ss
  422dec:	pop    ecx
  422ded:	adc    BYTE PTR [ebp-0x51],al
  422df0:	inc    esi
  422df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422df2:	retw   0xbc8d
  422df6:	cmp    DWORD PTR [esi+0x54e4],0xde18b465
  422e00:	fsin   
  422e02:	out    0xbf,eax
  422e04:	gs mov ah,0x46
  422e07:	idiv   dl
  422e09:	hlt    
  422e0a:	fs jae 0x422dad
  422e0d:	test   al,0x1
  422e0f:	add    BYTE PTR [esi+0x34000002],al
  422e15:	fdiv   DWORD PTR [edx+0x0]
  422e18:	fs mov bh,dl
  422e1b:	das    
  422e1c:	in     eax,0x59
  422e1e:	adc    esp,edx
  422e20:	sbb    edx,ebp
  422e22:	push   esp
  422e23:	or     DWORD PTR [ebx-0x448924c7],esp
  422e29:	in     al,0xb3
  422e2b:	dec    ebx
  422e2c:	or     al,0x97
  422e2e:	adc    ebx,esi
  422e30:	jle    0x422e3c
  422e32:	cmc    
  422e33:	out    0x7f,al
  422e35:	out    dx,eax
  422e36:	test   eax,0x8b007ef
  422e3b:	and    eax,DWORD PTR [edx]
  422e3d:	xor    dl,BYTE PTR [eax-0x6c]
  422e40:	ficomp WORD PTR [eax+eax*2+0x53b94b82]
  422e47:	es or  eax,0x9c90e013
  422e4d:	rcr    DWORD PTR [edi+0xd515eaa],1
  422e53:	jmp    0x422e92
  422e55:	pop    eax
  422e56:	push   0x67
  422e58:	or     cl,BYTE PTR [esi-0x19]
  422e5b:	push   edx
  422e5c:	mov    ah,0xfb
  422e5e:	loope  0x422e70
  422e60:	leave  
  422e61:	ins    DWORD PTR es:[edi],dx
  422e62:	bound  edi,QWORD PTR [eax-0x73]
  422e65:	xor    BYTE PTR [ebx-0x21],ch
  422e68:	xor    BYTE PTR [edi-0x72b9f3c7],0xf4
  422e6f:	into   
  422e70:	std    
  422e71:	stc    
  422e72:	xor    eax,0x65e843c4
  422e77:	jl     0x422e2d
  422e79:	repnz retf 
  422e7b:	or     al,ah
  422e7d:	dec    esi
  422e7e:	sub    al,0x1a
  422e80:	dec    esp
  422e81:	mov    edi,0xe09e641b
  422e86:	pop    edi
  422e87:	iret   
  422e88:	or     DWORD PTR [esi+0x30],edi
  422e8b:	bound  eax,QWORD PTR [ecx]
  422e8d:	int    0x9
  422e8f:	jbe    0x422e1b
  422e91:	out    dx,al
  422e92:	add    eax,0xb1729f8
  422e97:	or     cl,BYTE PTR [edx-0x567d5857]
  422e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e9e:	lods   eax,DWORD PTR ds:[esi]
  422e9f:	lods   eax,DWORD PTR ds:[si]
  422ea1:	into   
  422ea2:	daa    
  422ea3:	test   dh,0x44
  422ea6:	sbb    al,0x18
  422ea8:	cdq    
  422ea9:	mov    dl,0xdb
  422eab:	jp     0x422ecc
  422ead:	js     0x422e8e
  422eaf:	push   ecx
  422eb0:	(bad)  
  422eb2:	lds    ebx,FWORD PTR [edi+0x12]
  422eb5:	and    DWORD PTR [edi-0x1de3d3ff],edx
  422ebb:	pop    ebp
  422ebc:	frstor [edx+ecx*2+0x74c7e304]
  422ec3:	sti    
  422ec4:	call   0x60f91a6f
  422ec9:	pushf  
  422eca:	fld    TBYTE PTR [esi+0x6f9e68c1]
  422ed0:	stc    
  422ed1:	mov    eax,ds:0x5d1d7694
  422ed6:	loopne 0x422f53
  422ed8:	dec    ebp
  422ed9:	push   edi
  422eda:	aas    
  422edb:	mov    cl,BYTE PTR [edi]
  422edd:	inc    edx
  422ede:	xchg   esi,eax
  422ee0:	rcr    al,0x8f
  422ee3:	xor    eax,DWORD PTR [ebx]
  422ee5:	scas   al,BYTE PTR es:[edi]
  422ee6:	mov    ah,0x5c
  422ee8:	add    edi,DWORD PTR ds:0x8303516d
  422eee:	call   0xcfda:0xd39e902a
  422ef5:	sub    BYTE PTR [ecx+0x60],ah
  422ef8:	and    eax,0xd0f52814
  422efd:	bound  edx,QWORD PTR [ebp+0x47]
  422f00:	xchg   ecx,eax
  422f01:	sub    dl,BYTE PTR [ebx-0x2ac60257]
  422f07:	pop    ebx
  422f08:	mov    ?,WORD PTR [edx-0x23]
  422f0b:	loopne 0x422f59
  422f0d:	sub    dh,bl
  422f0f:	jmp    FWORD PTR [edi+esi*1]
  422f12:	sub    eax,0x90ebae0f
  422f17:	aaa    
  422f18:	jmp    0x80d83e54
  422f1d:	cs mov al,0x9a
  422f20:	faddp  st(5),st
  422f22:	out    dx,eax
  422f23:	test   BYTE PTR [esi+0x171fb627],bh
  422f29:	fadd   QWORD PTR [eax]
  422f2b:	(bad)  
  422f2c:	pop    edi
  422f2d:	int3   
  422f2e:	mov    bl,0xd6
  422f30:	adc    ch,dh
  422f32:	push   esp
  422f33:	sub    eax,0xd60fbdfa
  422f38:	mov    edx,0xab6b4e36
  422f3d:	mov    ebx,DWORD PTR [ebx-0x61]
  422f40:	(bad)  
  422f42:	push   es
  422f43:	jecxz  0x422f89
  422f45:	in     eax,dx
  422f46:	test   DWORD PTR [ecx-0x42],ebx
  422f49:	xchg   edx,eax
  422f4a:	jge    0x422f21
  422f4c:	cdq    
  422f4d:	sbb    BYTE PTR [edi+0x22],al
  422f50:	xor    esp,DWORD PTR [ecx+0x79d55b0e]
  422f56:	adc    ecx,DWORD PTR [edx]
  422f58:	in     eax,dx
  422f59:	sbb    DWORD PTR [esi-0x77b2808b],ebp
  422f5f:	arpl   WORD PTR [edx+0x46],bx
  422f62:	cmp    ecx,0xffffffdd
  422f65:	hlt    
  422f66:	(bad)  
  422f67:	repz xor al,0x24
  422f6a:	lods   al,BYTE PTR ds:[esi]
  422f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f6c:	enter  0xb91a,0xf3
  422f70:	stos   BYTE PTR es:[edi],al
  422f71:	mov    esi,0x1232c087
  422f76:	mov    esp,0xf8501636
  422f7b:	pusha  
  422f7c:	das    
  422f7d:	test   BYTE PTR [eax],dh
  422f7f:	test   eax,0x97417295
  422f84:	adc    cl,BYTE PTR [eax+0x2dd5eb47]
  422f8a:	or     eax,0xd7e0273e
  422f8f:	das    
  422f90:	xchg   esp,eax
  422f91:	outs   dx,BYTE PTR ds:[esi]
  422f92:	jne    0x422ff6
  422f94:	and    al,dl
  422f96:	fs and eax,0xe1a2075
  422f9c:	cli    
  422f9d:	jo     0x422fa3
  422f9f:	aaa    
  422fa0:	imul   esp,DWORD PTR [edi+0x565e1cb9],0x2
  422fa7:	and    ecx,DWORD PTR [eax+0x2649e75a]
  422fad:	call   0x73585b05
  422fb2:	enter  0xc2b2,0x6b
  422fb6:	mov    al,BYTE PTR [ebp-0x37579368]
  422fbc:	xor    edi,DWORD PTR [eax+0x12]
  422fbf:	(bad)  [ebp+0x1d3ca713]
  422fc5:	mov    esi,0xbaf3706f
  422fca:	int3   
  422fcb:	add    edi,DWORD PTR [ebx]
  422fcd:	push   esi
  422fce:	jne    0x422f6e
  422fd0:	xchg   esi,eax
  422fd1:	(bad)  
  422fd2:	aaa    
  422fd3:	fisubr DWORD PTR [eax-0x13eccb8a]
  422fd9:	gs ss test eax,0x6c98456d
  422fe0:	fimul  WORD PTR [ebp+esi*8-0x6b]
  422fe4:	xor    BYTE PTR [esi+0x25871fa0],0xd4
  422feb:	cli    
  422fec:	test   eax,0x37891339
  422ff1:	push   edi
  422ff2:	lods   al,BYTE PTR ds:[esi]
  422ff3:	mov    BYTE PTR [edi],al
  422ff5:	repz mov ecx,0xc57608f6
  422ffb:	(bad)  
  422ffc:	std    
  422ffd:	lds    edx,FWORD PTR [eax+0x9]
  423000:	xchg   BYTE PTR [edx+0x3b],bl
  423003:	dec    ebp
  423004:	sbb    eax,0xd6d6fd03
  423009:	call   0x967b2fa9
  42300e:	sbb    al,0xb4
  423010:	int    0x7e
  423012:	mov    ebx,0xa029ba11
  423017:	aad    0x8c
  423019:	mov    ebp,0xb80234f4
  42301e:	xchg   esp,eax
  42301f:	and    DWORD PTR [edi],0x5ebba851
  423025:	and    DWORD PTR [ebx-0x2e],ebx
  423028:	mov    ch,0xad
  42302a:	dec    edx
  42302b:	leave  
  42302c:	inc    edi
  42302d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42302e:	mov    cl,0x9f
  423030:	int3   
  423031:	push   0x33
  423033:	pushf  
  423034:	aad    0xe8
  423036:	xchg   edi,eax
  423037:	mov    ebx,0x7b53b6e7
  42303c:	dec    edi
  42303d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42303e:	repz imul ecx,DWORD PTR [eax-0x12],0xbad3e19f
  423046:	mov    ds:0x6b5641a0,al
  42304b:	mov    ds:0x2d148c1f,eax
  423050:	inc    edx
  423051:	inc    ebx
  423052:	or     eax,DWORD PTR [ebx+0x4d]
  423055:	add    bl,BYTE PTR [esi]
  423057:	lods   eax,DWORD PTR ds:[esi]
  423058:	ficomp WORD PTR [ebx+0x30fbbf3a]
  42305e:	je     0x423017
  423060:	jmp    0x7ea9fed
  423065:	adc    ah,cl
  423067:	xchg   dl,cl
  423069:	xchg   ebx,eax
  42306a:	sub    BYTE PTR [edx+0x4e7ce7db],ch
  423070:	hlt    
  423071:	int    0x41
  423073:	int    0xe3
  423075:	repz push esp
  423077:	and    al,0x89
  423079:	inc    ebp
  42307a:	fimul  DWORD PTR [eax+ebp*8]
  42307d:	adc    bl,BYTE PTR ds:0x8bd92ad9
  423083:	push   esi
  423084:	call   0x956a746
  423089:	mov    al,0xc0
  42308b:	adc    al,0x8e
  42308d:	fdiv   QWORD PTR [ebx+0x23]
  423090:	pop    es
  423091:	ds inc ebp
  423093:	lods   al,BYTE PTR ds:[esi]
  423094:	loop   0x423035
  423096:	pop    es
  423097:	jb     0x42309b
  423099:	pop    ebx
  42309a:	add    BYTE PTR [eax],al
  42309c:	adc    bl,al
  42309e:	arpl   WORD PTR [edx-0x15],si
  4230a1:	sti    
  4230a2:	adc    edi,eax
  4230a4:	sub    edi,DWORD PTR [ebx-0x56687709]
  4230aa:	(bad)  
  4230ab:	popf   
  4230ac:	es stos DWORD PTR es:[edi],eax
  4230ae:	add    DWORD PTR [eax],eax
  4230b0:	xchg   BYTE PTR [edx],al
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	(bad)  [eax]
  4230b6:	xchg   BYTE PTR [ebp+0x34],ah
  4230b9:	outs   dx,BYTE PTR ds:[esi]
  4230ba:	outs   dx,DWORD PTR ds:[esi]
  4230bb:	adc    BYTE PTR [ebx+0x6974ab71],cl
  4230c1:	or     ecx,0xa9b6c686
  4230c7:	scas   eax,DWORD PTR es:[edi]
  4230c8:	out    0xf2,eax
  4230ca:	mov    esp,0xcfa34358
  4230cf:	loopne 0x423098
  4230d1:	cmp    bh,bl
  4230d3:	outs   dx,BYTE PTR ds:[esi]
  4230d4:	(bad)  
  4230d5:	mov    ebx,0xf8e03745
  4230da:	add    ch,bl
  4230dc:	add    edx,DWORD PTR [eax-0x48]
  4230df:	dec    ecx
  4230e0:	loop   0x4230a8
  4230e2:	pop    ebp
  4230e3:	dec    eax
  4230e4:	sbb    esi,eax
  4230e6:	add    ch,cl
  4230e8:	repnz push eax
  4230ea:	xchg   ebx,ebx
  4230ec:	test   eax,0xf0203c84
  4230f1:	dec    esi
  4230f2:	outs   dx,DWORD PTR ds:[esi]
  4230f3:	add    eax,0x7f5213
  4230f8:	fist   WORD PTR [ebp-0x71]
  4230fb:	arpl   WORD PTR [ebp-0x45],cx
  4230fe:	cwde   
  4230ff:	push   ss
  423100:	push   es
  423101:	jg     0x423124
  423103:	pop    esp
  423104:	mov    bl,0x6c
  423106:	mov    cs,edx
  423108:	push   ebx
  423109:	jne    0x423101
  42310b:	in     eax,dx
  42310c:	jmp    0x1f6:0x34f3db69
  423113:	pop    esp
  423114:	cdq    
  423115:	outs   dx,BYTE PTR ds:[esi]
  423116:	or     dl,BYTE PTR [eax+0x7d]
  423119:	daa    
  42311a:	test   DWORD PTR [esi+eiz*8-0x14c93ce0],ebp
  423121:	jle    0x423178
  423123:	mov    ch,0x8
  423125:	cmp    esp,edx
  423127:	je     0x423100
  423129:	or     al,0x9d
  42312b:	in     al,0x63
  42312d:	xchg   ebx,eax
  42312e:	cmp    edx,esi
  423130:	dec    ecx
  423131:	sbb    DWORD PTR [ebx],0xd74240f3
  423137:	dec    esp
  423138:	sbb    BYTE PTR [ebx+0x2ffd7ae2],ch
  42313e:	out    0x1f,al
  423140:	(bad)  
  423141:	cmp    BYTE PTR [edx-0x2f],ch
  423144:	cmp    al,0x7e
  423146:	xor    BYTE PTR [ebx],bh
  423148:	pop    edi
  423149:	mov    eax,0x1de81baa
  42314e:	xchg   dh,bl
  423150:	les    ebp,FWORD PTR [esi-0x49]
  423153:	out    dx,al
  423154:	arpl   WORD PTR [edi+0x71c1c25b],si
  42315a:	or     al,BYTE PTR [ebx-0x5187d534]
  423160:	cmp    bl,cl
  423162:	jae    0x423120
  423164:	pop    ebx
  423165:	fsub   DWORD PTR [edx+0x54]
  423168:	fidivr DWORD PTR [esi]
  42316a:	cmp    ch,ah
  42316c:	push   es
  42316d:	inc    ebx
  42316e:	shl    DWORD PTR [ebx+0xeda80ee],cl
  423174:	dec    ebx
  423175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423176:	dec    edx
  423177:	xchg   edx,eax
  423178:	fnsave [ebp-0xd034708]
  42317e:	adc    ah,BYTE PTR [ebx+0x0]
  423181:	cdq    
  423182:	jecxz  0x423133
  423184:	xchg   ebx,eax
  423185:	jp     0x4231f2
  423187:	ins    BYTE PTR es:[edi],dx
  423188:	sbb    DWORD PTR [ebx-0x79],ebp
  42318b:	in     al,dx
  42318c:	pusha  
  42318d:	jae    0x423173
  42318f:	mov    dh,0xd6
  423192:	fiadd  WORD PTR [edx+0x7f6a678f]
  423198:	cwde   
  423199:	jle    0x42318c
  42319b:	jmp    0x9382:0x85fd9212
  4231a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231a3:	mov    ebp,0xd8cf11b3
  4231a8:	push   ds
  4231a9:	outs   dx,BYTE PTR cs:[esi]
  4231ab:	inc    ebx
  4231ac:	aaa    
  4231ad:	push   edx
  4231ae:	ror    BYTE PTR [ecx+0x237ec199],0x5
  4231b5:	mov    ah,0xc
  4231b7:	mov    bh,0x92
  4231b9:	jne    0x423228
  4231bb:	push   esp
  4231bc:	sbb    dl,BYTE PTR [edi]
  4231be:	data16 sbb cl,BYTE PTR [edi+0x13]
  4231c2:	cmp    al,0xed
  4231c4:	scas   eax,DWORD PTR es:[edi]
  4231c5:	xchg   esp,eax
  4231c6:	test   ebp,esp
  4231c8:	xchg   ecx,eax
  4231c9:	hlt    
  4231ca:	(bad)  
  4231cb:	jl     0x423185
  4231cd:	xor    ah,BYTE PTR [edx+0x4f]
  4231d0:	mov    ebp,0x373da959
  4231d5:	loopne 0x423227
  4231d7:	fcom   st(0)
  4231d9:	push   es
  4231da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231db:	jp     0x423244
  4231dd:	xor    al,0xde
  4231df:	dec    ebx
  4231e0:	fsub   DWORD PTR [esp+ebp*2-0x8]
  4231e4:	adc    eax,0x440a0da1
  4231e9:	test   DWORD PTR [ecx+0xa4fc92a],0x8b8d3104
  4231f3:	adc    al,0x88
  4231f5:	lea    esi,[ebp+esi*2-0x57]
  4231f9:	test   DWORD PTR [eax-0x1eebf63f],edx
  4231ff:	rcr    DWORD PTR [edi-0x43],cl
  423202:	adc    DWORD PTR [ecx+edx*1+0x37],esi
  423206:	inc    edi
  423207:	hlt    
  423208:	cmp    al,0xfe
  42320a:	push   cs
  42320b:	cwde   
  42320c:	sub    eax,0x613c4795
  423211:	aas    
  423212:	or     ebx,edi
  423214:	icebp  
  423215:	jge    0x4231b1
  423217:	mov    BYTE PTR [eax+0x4510c98b],dh
  42321d:	scas   eax,DWORD PTR es:[edi]
  42321e:	add    DWORD PTR [esi-0xc],0x3
  423222:	sti    
  423223:	dec    ebx
  423224:	mov    al,0xae
  423226:	sub    DWORD PTR [eax+0x53],0xffffffd9
  42322a:	mov    dl,0xe7
  42322c:	mov    ecx,DWORD PTR ds:[eax]
  42322f:	(bad)  
  423230:	jl     0x4231e4
  423232:	sbb    BYTE PTR [eax+0x7aa3244d],dl
  423238:	shl    DWORD PTR [eax+0xd3b2fbf],0xe
  42323f:	pop    edx
  423240:	mov    BYTE PTR [ecx],bh
  423242:	(bad)  
  423243:	repz adc al,0xae
  423246:	cld    
  423247:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  423249:	pop    edx
  42324a:	adc    eax,0x893077e9
  42324f:	out    dx,eax
  423250:	dec    edx
  423251:	jmp    FWORD PTR [esi+0x43]
  423254:	(bad)  
  423255:	mov    edx,0x11353d19
  42325a:	aaa    
  42325b:	or     edi,0xfffffff9
  42325e:	mov    ch,0x17
  423260:	out    dx,al
  423261:	arpl   WORD PTR ds:0x5ab3606f,si
  423267:	pop    ecx
  423268:	cmp    al,0xed
  42326a:	ins    DWORD PTR es:[edi],dx
  42326b:	jns    0x423244
  42326d:	mov    ebx,0xac1e670f
  423272:	ret    0x207a
  423275:	cmp    dl,BYTE PTR [ebp-0x51]
  423278:	sbb    eax,0x9e42276f
  42327d:	push   0x4a2495b7
  423282:	sbb    ecx,esi
  423284:	inc    eax
  423285:	jns    0x423276
  423287:	mov    edi,ebx
  423289:	lods   eax,DWORD PTR ds:[esi]
  42328a:	dec    edi
  42328b:	outs   dx,BYTE PTR ds:[esi]
  42328c:	adc    bl,bl
  42328e:	adc    ah,BYTE PTR [edx]
  423290:	sbb    BYTE PTR [ebx-0x6f346378],dl
  423296:	jbe    0x423301
  423298:	xor    DWORD PTR [edi+0x4419f484],ebp
  42329e:	and    DWORD PTR [ebp+0x1e3ca606],0x53
  4232a5:	mov    al,ds:0x880d5d41
  4232aa:	ret    
  4232ab:	mov    dh,0x9b
  4232ad:	pop    esi
  4232ae:	sahf   
  4232af:	int3   
  4232b0:	pop    es
  4232b1:	xchg   edi,eax
  4232b2:	xchg   ebp,eax
  4232b3:	test   BYTE PTR [ecx-0x7b],0xa4
  4232b7:	mov    dl,0x6f
  4232b9:	pusha  
  4232ba:	stos   BYTE PTR es:[edi],al
  4232bb:	push   0x7a103589
  4232c0:	mov    dl,0xf6
  4232c2:	push   esp
  4232c3:	lods   eax,DWORD PTR ds:[esi]
  4232c4:	ja     0x423330
  4232c6:	adc    eax,0x24716cfb
  4232cb:	push   ds
  4232cc:	xor    dh,BYTE PTR [esi+0x5f]
  4232cf:	clc    
  4232d0:	leave  
  4232d1:	cmp    al,cl
  4232d3:	pop    ds
  4232d4:	pop    ds
  4232d5:	mov    es,WORD PTR [edi-0x4b90ec36]
  4232db:	adc    al,0x63
  4232dd:	ja     0x4232d2
  4232df:	push   edx
  4232e0:	pop    esi
  4232e1:	cdq    
  4232e2:	sbb    ebp,DWORD PTR [edi]
  4232e4:	sti    
  4232e5:	mov    ebx,0x20e81960
  4232ea:	addr16 out dx,al
  4232ec:	retf   
  4232ed:	xor    al,0xcb
  4232ef:	(bad)  
  4232f0:	imul   ebp,DWORD PTR [eax],0x88c81b28
  4232f6:	(bad)  
  4232f7:	pushf  
  4232f8:	push   cs
  4232f9:	xlat   BYTE PTR ds:[ebx]
  4232fa:	push   ebp
  4232fb:	and    dl,BYTE PTR [ecx-0x30406733]
  423301:	cmp    ch,BYTE PTR [ebp+0x36252a37]
  423307:	in     al,dx
  423308:	int3   
  423309:	jecxz  0x423384
  42330b:	psadbw mm7,QWORD PTR [edi+ecx*2-0x4f5f4697]
  423313:	sub    al,0x7d
  423315:	sti    
  423316:	dec    ebp
  423317:	test   al,0x30
  423319:	gs mov ebx,0xb08b8730
  42331f:	push   ebp
  423320:	xor    eax,0x3265bd8
  423325:	push   ds
  423326:	push   ebx
  423327:	add    DWORD PTR [edx+0x12],esi
  42332a:	dec    ecx
  42332b:	(bad)  
  42332c:	xchg   esp,eax
  42332d:	jns    0x4232b2
  42332f:	mov    ecx,0xb5743c55
  423334:	xor    BYTE PTR [edx-0x49d655d0],ah
  42333a:	add    BYTE PTR [eax],al
  42333c:	push   cs
  42333d:	and    BYTE PTR [eax-0x404051c1],cl
  423343:	xor    DWORD PTR [ebx-0x2f6d7643],edx
  423349:	push   eax
  42334a:	iret   
  42334b:	(bad)  
  42334c:	lods   al,BYTE PTR ds:[esi]
  42334d:	lods   eax,DWORD PTR ds:[esi]
  42334e:	add    DWORD PTR [eax],eax
  423350:	xchg   BYTE PTR [edx],al
  423352:	add    BYTE PTR [eax],al
  423354:	es scas al,BYTE PTR es:[edi]
  423356:	cli    
  423357:	jb     0x423357
  423359:	and    al,0x98
  42335b:	mov    ecx,0x2c5c96ab
  423360:	sub    BYTE PTR [ecx-0x1],cl
  423363:	stc    
  423364:	mov    DWORD PTR [ecx],0xb219a5fb
  42336a:	aas    
  42336b:	pop    ebx
  42336c:	or     ecx,DWORD PTR [edi-0x1e]
  42336f:	xchg   esi,eax
  423370:	and    DWORD PTR [ebp-0x43],ecx
  423373:	add    al,0xc3
  423375:	mov    esi,0x10ea516a
  42337a:	cs fwait
  42337c:	sub    dl,BYTE PTR cs:[ebx+0x48f30547]
  423383:	jp     0x42335b
  423385:	and    eax,0x1d5c0772
  42338a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42338b:	jbe    0x42335d
  42338d:	cmc    
  42338e:	or     BYTE PTR [ebx-0x2c7b5e3a],0xb7
  423395:	pop    eax
  423396:	push   0x9b03cf09
  42339b:	mov    esi,0xde593cb1
  4233a0:	fnsave [edx]
  4233a2:	neg    DWORD PTR [ecx+0x43]
  4233a5:	ins    BYTE PTR es:[edi],dx
  4233a6:	inc    ecx
  4233a7:	jle    0x42340c
  4233a9:	add    esp,ebx
  4233ab:	mov    esi,0xe28c22f2
  4233b0:	aam    0xe5
  4233b2:	(bad)  
  4233b3:	in     eax,0x51
  4233b5:	sahf   
  4233b6:	jmp    0x4233a1
  4233b8:	inc    esp
  4233b9:	mov    edi,0x8a176a48
  4233be:	mov    edi,0xd5adc5b6
  4233c3:	mov    esp,0x42c8d1fd
  4233c8:	in     eax,0xc
  4233ca:	bts    DWORD PTR [ebx+0x2],0x4f
  4233cf:	fcom   DWORD PTR [ebx+0x43]
  4233d2:	cmp    BYTE PTR [eax],cl
  4233d4:	rol    BYTE PTR [edx],0x31
  4233d7:	imul   ecx,ebp,0xffffffdb
  4233da:	and    al,0x42
  4233dc:	push   ecx
  4233dd:	pop    ds
  4233de:	xor    ah,bh
  4233e0:	test   BYTE PTR ds:0xedb0a70,dl
  4233e6:	sub    DWORD PTR [ecx+0x48],0x2e
  4233ea:	xchg   ebx,eax
  4233eb:	cmp    ah,BYTE PTR [ecx]
  4233ed:	cli    
  4233ee:	xchg   edx,eax
  4233ef:	or     edx,DWORD PTR [ecx+edi*8]
  4233f2:	mov    ds:0xff1f3d7f,al
  4233f7:	xor    ah,0x89
  4233fa:	iret   
  4233fb:	enter  0xf0fa,0x22
  4233ff:	fucomip st,st(0)
  423401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423402:	cld    
  423403:	jno    0x4233db
  423405:	jae    0x423400
  423407:	add    ah,BYTE PTR [esi+0x5fde5e77]
  42340d:	push   esi
  42340e:	push   edx
  42340f:	push   ss
  423410:	test   DWORD PTR [eax+0x16],ecx
  423413:	sub    esi,DWORD PTR [eax+0x73]
  423416:	stc    
  423417:	cmc    
  423418:	sub    dl,ah
  42341a:	mov    al,0x2b
  42341c:	add    edi,esp
  42341e:	mov    al,0x33
  423420:	movntps XMMWORD PTR [ecx],xmm0
  423423:	test   BYTE PTR [eax-0xa],ah
  423426:	(bad)  
  423428:	fldcw  WORD PTR [ebp+0x76]
  42342b:	push   ss
  42342c:	add    ecx,ecx
  42342e:	cmp    edi,DWORD PTR [edx+0x3ff343b1]
  423434:	pop    edi
  423435:	sar    BYTE PTR [edi+0x2c],0x87
  423439:	iret   
  42343a:	sbb    BYTE PTR [eax],ch
  42343c:	daa    
  42343d:	js     0x423415
  42343f:	inc    eax
  423440:	cmp    eax,0x6a42836f
  423445:	iret   
  423446:	adc    al,0x54
  423448:	jnp    0x4234a2
  42344a:	jle    0x423437
  42344c:	xchg   ebx,eax
  42344d:	mov    edi,0xb4feaa1e
  423452:	mov    ds:0xbcbf4996,al
  423457:	cdq    
  423458:	dec    eax
  423459:	and    eax,DWORD PTR [ecx]
  42345b:	fistp  QWORD PTR [ecx-0x2dafe6ae]
  423461:	inc    edi
  423462:	mov    eax,ds:0x25142e5b
  423467:	nop
  423468:	icebp  
  423469:	push   cs
  42346a:	test   DWORD PTR [eax-0x27ff3d3],eax
  423470:	outs   dx,BYTE PTR ds:[esi]
  423471:	nop
  423472:	sbb    bh,BYTE PTR [ecx]
  423474:	test   eax,0xec87667e
  423479:	xchg   ebp,eax
  42347a:	xchg   edi,eax
  42347b:	loop   0x423469
  42347d:	out    0x57,eax
  42347f:	jb     0x423436
  423481:	push   ecx
  423482:	pushf  
  423483:	xchg   bl,dh
  423485:	push   edi
  423486:	inc    eax
  423487:	mov    eax,ds:0x70edf2c1
  42348c:	mov    bh,cl
  42348e:	sub    eax,DWORD PTR [ecx+esi*8+0xa]
  423492:	(bad)  
  423493:	mov    bl,0xd
  423495:	jns    0x42347d
  423497:	mov    edi,0x1b045d4f
  42349c:	xchg   esp,eax
  42349d:	adc    dh,cl
  42349f:	xor    dl,BYTE PTR [eax-0x28cc9225]
  4234a5:	and    BYTE PTR [edx-0xb],bl
  4234a8:	cmp    DWORD PTR [ebx-0x2ec5505b],edi
  4234ae:	xchg   edi,eax
  4234af:	test   BYTE PTR [edx],dl
  4234b1:	adc    ah,BYTE PTR [ecx+0x16d213cf]
  4234b7:	into   
  4234b8:	sub    eax,0xe1c45b94
  4234bd:	lahf   
  4234be:	push   ebp
  4234bf:	out    0x6c,al
  4234c1:	stc    
  4234c2:	aad    0x26
  4234c4:	sub    BYTE PTR [esi-0x13],dl
  4234c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234c8:	es mov edx,0xd9318862
  4234ce:	loopne 0x423504
  4234d0:	add    al,0x1e
  4234d2:	je     0x4234fe
  4234d4:	aam    0x72
  4234d6:	ss inc ebx
  4234d8:	mov    eax,0xd6aa42dc
  4234dd:	into   
  4234de:	push   0xffffffc2
  4234e0:	in     al,0xf7
  4234e2:	mov    bp,0xed47
  4234e6:	ret    
  4234e7:	mov    eax,ds:0x1e3e2d2c
  4234ec:	test   al,0x65
  4234ee:	outs   dx,BYTE PTR ds:[esi]
  4234ef:	push   ds
  4234f0:	ins    DWORD PTR es:[edi],dx
  4234f1:	jge    0x423572
  4234f3:	and    edx,ecx
  4234f5:	xchg   edi,eax
  4234f6:	loope  0x4234b7
  4234f8:	stos   DWORD PTR es:[edi],eax
  4234f9:	cmp    ah,BYTE PTR [ebp-0x74ed4758]
  4234ff:	or     dl,0x92
  423502:	neg    ebx
  423504:	pop    esp
  423505:	test   BYTE PTR [ebp-0x12],bl
  423508:	xchg   esp,eax
  423509:	sub    eax,0xcc9c9d5f
  42350e:	fistp  DWORD PTR [ebx+eax*2-0x7d]
  423512:	sbb    ebp,eax
  423514:	bound  ebx,QWORD PTR [ebx-0x70]
  423517:	aad    0x7e
  423519:	xchg   ebx,eax
  42351a:	sbb    al,0xb0
  42351c:	clc    
  42351d:	ds into 
  42351f:	aas    
  423520:	hlt    
  423521:	mov    ch,0xd5
  423523:	scas   al,BYTE PTR es:[edi]
  423524:	mov    ch,0x9e
  423526:	mov    dl,0x47
  423528:	loopne 0x423579
  42352a:	push   cs
  42352b:	sahf   
  42352c:	loopne 0x423560
  42352e:	xor    eax,0xcb622d06
  423533:	retf   
  423534:	out    dx,eax
  423535:	pusha  
  423536:	xchg   edx,edx
  423538:	adc    DWORD PTR [ebp+0x18],0x2e
  42353c:	xchg   ecx,eax
  42353d:	and    ecx,DWORD PTR [edi+ecx*4+0x549d1f98]
  423544:	jmp    0xa27e:0xccf75dfd
  42354b:	push   0xb1e7d94b
  423550:	rol    DWORD PTR [esi+0x4f],0x8
  423554:	cmp    ecx,DWORD PTR [ecx]
  423556:	lods   al,BYTE PTR ds:[esi]
  423557:	sbb    eax,0x12f570a4
  42355c:	pop    edx
  42355d:	lock jns 0x4234f3
  423560:	(bad)  
  423561:	fscale 
  423563:	add    eax,0x6d11bdce
  423568:	popa   
  423569:	gs addr16 jmp 0xb7eb:0xc6efdc4a
  423572:	enter  0x138c,0xda
  423576:	jp     0x4235b5
  423578:	ror    dl,0xdf
  42357b:	(bad)  
  42357c:	pop    ecx
  42357d:	imul   edx,DWORD PTR [esi-0x7d],0xffffffce
  423581:	int3   
  423582:	xor    DWORD PTR [ebp-0x4b1ba7eb],edi
  423588:	mov    DWORD PTR [edi],ecx
  42358a:	adc    DWORD PTR [esi-0x1b5bbd93],edx
  423590:	fcomi  st,st(2)
  423592:	sar    BYTE PTR [edx+0x49656f7b],0x4b
  423599:	sub    cl,BYTE PTR [esp+ebp*4-0x75aabf2e]
  4235a0:	cmp    ch,bl
  4235a2:	inc    eax
  4235a3:	test   BYTE PTR [edi+0x64],bl
  4235a6:	dec    esi
  4235a7:	popf   
  4235a8:	pop    ds
  4235a9:	pop    ds
  4235aa:	jne    0x42361e
  4235ac:	dec    esi
  4235ad:	cmp    eax,DWORD PTR [edi-0x22e9edc9]
  4235b3:	dec    esp
  4235b4:	pop    ebp
  4235b5:	jo     0x423564
  4235b7:	cwde   
  4235b8:	bound  esp,QWORD PTR [esi-0x1d]
  4235bb:	xchg   esp,eax
  4235bc:	(bad)  
  4235bd:	clc    
  4235be:	loop   0x4235c7
  4235c0:	jmp    0x5b44:0x40c01f00
  4235c7:	push   edi
  4235c8:	mov    edi,0x8a05a688
  4235cd:	adc    DWORD PTR [eax+edx*1+0x784f4e6e],ebp
  4235d4:	adc    eax,0x71c96e76
  4235d9:	push   es
  4235da:	add    BYTE PTR [eax],al
  4235dc:	pop    esp
  4235dd:	mov    edi,0xdce35063
  4235e2:	jg     0x4235a3
  4235e4:	popa   
  4235e5:	hlt    
  4235e6:	mov    esi,0xf09a491d
  4235eb:	add    BYTE PTR [edx],dh
  4235ed:	mov    al,0x1
  4235ef:	add    BYTE PTR [esi-0x35fffffe],al
  4235f5:	inc    esi
  4235f6:	scas   eax,DWORD PTR es:[edi]
  4235f7:	mov    esi,0x3e05f97a
  4235fc:	cmp    eax,0x996628f5
  423601:	mov    WORD PTR [edx],ss
  423603:	xor    DWORD PTR [esi-0x8fca6c0],edi
  423609:	mov    eax,ds:0xbc52b237
  42360e:	mov    al,0xb
  423610:	mov    DWORD PTR [ebx-0x6],ebx
  423613:	push   es
  423614:	jne    0x423668
  423616:	imul   edi,DWORD PTR [ecx+edx*4],0x39bfff41
  42361d:	cs adc eax,0xfa5ff39c
  423623:	xor    ebp,esi
  423625:	adc    edi,DWORD PTR [esi+0x353c41d2]
  42362b:	shr    bl,0x4
  42362e:	stos   BYTE PTR es:[edi],al
  42362f:	cmp    BYTE PTR [edi+esi*8],dl
  423632:	mov    edx,0x1c0241a3
  423637:	adc    al,0x84
  423639:	enter  0x107d,0x13
  42363d:	push   0x63a1d2f6
  423642:	add    eax,edx
  423644:	jg     0x423660
  423646:	out    0xc,eax
  423648:	aas    
  423649:	jae    0x4235d9
  42364b:	mov    ah,0x58
  42364d:	cs jns 0x423696
  423650:	inc    esi
  423651:	inc    ebx
  423652:	mov    ?,WORD PTR [eax*4+0x154ca99f]
  423659:	cmp    DWORD PTR [edx+0x150b0e86],esp
  42365f:	mov    eax,0x1b177c7e
  423664:	(bad)  
  423665:	sbb    eax,DWORD PTR [eax]
  423667:	rcl    DWORD PTR [edx],1
  423669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42366a:	(bad)  
  42366b:	jns    0x423612
  42366d:	and    BYTE PTR [edi+0x4c77053e],dl
  423673:	or     BYTE PTR [ebp+0x10baba8b],0x48
  42367a:	jecxz  0x4236e2
  42367c:	pop    edx
  42367d:	or     esp,eax
  42367f:	inc    esp
  423680:	nop
  423681:	push   0x35
  423683:	cli    
  423684:	xlat   BYTE PTR ds:[ebx]
  423685:	add    DWORD PTR [ebp+0x7d34c7f7],0x99d9c5e7
  42368f:	pop    es
  423690:	dec    edi
  423691:	addr16 cld 
  423693:	dec    edi
  423694:	mov    dl,0xc4
  423696:	dec    edx
  423697:	imul   ecx,DWORD PTR [edx+0x263ffd8f],0xffffffb5
  42369e:	pop    ebx
  42369f:	sub    dl,dl
  4236a1:	pop    esi
  4236a2:	mov    cl,0x90
  4236a4:	aas    
  4236a5:	cmp    edx,DWORD PTR cs:[esp+0x6d]
  4236aa:	inc    esi
  4236ac:	jge    0x42365b
  4236ae:	or     eax,0x982e99a2
  4236b3:	cwde   
  4236b4:	mov    ebx,0x51d5e67d
  4236b9:	xor    BYTE PTR [ebx+0x4f376c53],bh
  4236bf:	mov    bl,0x1d
  4236c1:	xchg   esp,eax
  4236c2:	bound  edi,QWORD PTR [edx+0x527bcd75]
  4236c8:	repnz adc edi,DWORD PTR [ecx]
  4236cb:	inc    esp
  4236cc:	inc    ebx
  4236cd:	leave  
  4236ce:	jle    0x42368b
  4236d0:	fmul   st(6),st
  4236d2:	mov    al,ds:0x6951af4a
  4236d7:	xchg   esp,eax
  4236d8:	and    BYTE PTR [edi],bh
  4236da:	push   edx
  4236db:	test   ah,ch
  4236dd:	pushf  
  4236de:	xlat   BYTE PTR ds:[ebx]
  4236df:	fld    QWORD PTR [ebp-0x15]
  4236e2:	dec    edx
  4236e3:	int3   
  4236e4:	push   cs
  4236e5:	add    dh,BYTE PTR [ebp-0x4]
  4236e8:	std    
  4236e9:	test   DWORD PTR [eax],eax
  4236eb:	dec    ecx
  4236ec:	retf   
  4236ed:	push   ebx
  4236ee:	xchg   DWORD PTR [ebx+0x799eac00],ebp
  4236f4:	add    BYTE PTR [eax+0x1e],bh
  4236f7:	iret   
  4236f8:	leave  
  4236f9:	jmp    0xf8b1:0xf925743d
  423700:	lods   al,BYTE PTR ds:[esi]
  423701:	push   ecx
  423702:	dec    esp
  423703:	nop
  423704:	into   
  423705:	sbb    DWORD PTR [esi+0x55],esp
  423708:	lods   eax,DWORD PTR ds:[esi]
  423709:	mov    bl,BYTE PTR [eax+0x100355d3]
  42370f:	mov    ebx,0xd67f401c
  423714:	lds    ebx,FWORD PTR [edx-0x3e]
  423717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423718:	push   0xb94d9b2a
  42371d:	hlt    
  42371e:	inc    edi
  42371f:	lods   al,BYTE PTR ds:[esi]
  423720:	xor    dl,BYTE PTR [esi]
  423722:	or     al,0x19
  423724:	std    
  423725:	mov    dl,BYTE PTR [eax-0x7c9e2c5e]
  42372b:	adc    BYTE PTR [edi-0x33],dh
  42372e:	cmp    DWORD PTR [eax],0xb2a338ad
  423734:	ret    0x9060
  423737:	mov    al,0xcf
  423739:	mov    ds:0xb30aea34,eax
  42373e:	call   0x839df1b1
  423743:	mov    WORD PTR [edi+edi*8],?
  423746:	adc    ah,BYTE PTR [edi]
  423748:	ins    BYTE PTR es:[edi],dx
  423749:	fwait
  42374a:	test   eax,0x64ec3070
  42374f:	or     BYTE PTR [eax],ch
  423751:	imul   esp,DWORD PTR [ebp+0x6a15a2a9],0xcc160bb0
  42375b:	gs sub bh,dh
  42375e:	push   0xdee29e0b
  423763:	jge    0x4236f6
  423765:	stos   BYTE PTR es:[edi],al
  423766:	mov    ch,0x6c
  423768:	popa   
  423769:	dec    esi
  42376a:	mov    bh,0xf
  42376c:	push   ebp
  42376d:	ins    BYTE PTR es:[edi],dx
  42376e:	jmp    0xc4af5e04
  423773:	(bad)  
  423774:	sbb    eax,0xfbe87e9a
  423779:	ins    BYTE PTR es:[edi],dx
  42377a:	lock icebp 
  42377c:	aad    0xe1
  42377e:	pop    ecx
  42377f:	adc    al,0xd3
  423781:	push   esp
  423782:	xchg   esp,eax
  423783:	ins    DWORD PTR es:[edi],dx
  423784:	push   esp
  423785:	cmp    ecx,ebp
  423787:	int    0xdf
  423789:	shl    BYTE PTR [ebp+0x2],cl
  42378c:	pop    eax
  42378d:	and    ah,BYTE PTR [ebx]
  42378f:	mov    eax,ds:0x337aa180
  423794:	mov    ah,0xd0
  423796:	ja     0x423745
  423798:	sahf   
  423799:	adc    al,0xc9
  42379b:	fidivr DWORD PTR [edi+eiz*2-0x3934693c]
  4237a2:	in     al,0xd9
  4237a4:	aas    
  4237a5:	and    eax,0x912a8c3a
  4237aa:	sbb    eax,0xaa33a642
  4237af:	loopne 0x423792
  4237b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237b2:	outs   dx,DWORD PTR ds:[esi]
  4237b3:	iret   
  4237b4:	lods   al,BYTE PTR fs:[esi]
  4237b6:	in     al,0x74
  4237b8:	out    0x50,al
  4237ba:	leave  
  4237bb:	mov    esp,0x995d6ace
  4237c0:	pop    esp
  4237c1:	add    BYTE PTR [ebp+ebp*4-0x22],0xb5
  4237c6:	out    0x17,eax
  4237c8:	xchg   esi,eax
  4237c9:	mov    esp,0x45eea3f3
  4237ce:	sub    DWORD PTR [ebx],ecx
  4237d0:	pop    ebx
  4237d1:	ins    DWORD PTR es:[edi],dx
  4237d2:	ds out dx,eax
  4237d4:	inc    edx
  4237d5:	in     eax,dx
  4237d6:	sar    BYTE PTR [ebx+esi*4],cl
  4237d9:	imul   eax,DWORD PTR [edi+eiz*8-0x6f],0xb6c7bdfb
  4237e1:	jecxz  0x4237c3
  4237e3:	add    al,0x7
  4237e5:	sbb    BYTE PTR [edx+eiz*8-0x1f],dh
  4237e9:	xchg   DWORD PTR [esi-0x22],eax
  4237ec:	jp     0x4237ba
  4237ee:	dec    ebx
  4237ef:	mov    ds:0xeace472b,eax
  4237f4:	int3   
  4237f5:	push   esi
  4237f6:	ror    DWORD PTR [ecx],0xdd
  4237f9:	mov    ecx,0xc61b9f7a
  4237fe:	mov    ah,0x94
  423800:	sub    edi,DWORD PTR [edi-0x4e82eb82]
  423806:	jbe    0x42386f
  423808:	(bad)  
  423809:	sbb    DWORD PTR [esi-0x7bc44046],ecx
  42380f:	xchg   edx,eax
  423810:	ret    0xa075
  423813:	cmc    
  423814:	(bad)  
  423815:	sahf   
  423816:	sbb    al,0x33
  423818:	test   BYTE PTR [esi+0x1a],bl
  42381b:	or     DWORD PTR [edi-0x7ca2d6fd],edi
  423821:	mov    ecx,0x4cd0f7a1
  423826:	mov    eax,ds:0x7a9e5449
  42382b:	mov    dl,0x4
  42382d:	jb     0x4237d0
  42382f:	xlat   BYTE PTR ds:[ebx]
  423830:	jmp    0x423840
  423832:	jp     0x4237fa
  423834:	push   ebp
  423835:	test   BYTE PTR [esi],al
  423837:	popa   
  423838:	es sbb ebp,ecx
  42383b:	call   0x89e5bd5d
  423840:	ins    BYTE PTR es:[edi],dx
  423841:	icebp  
  423842:	mov    ch,0x2c
  423844:	imul   BYTE PTR [ebp+0x2ccd3a42]
  42384a:	sub    edi,edi
  42384c:	inc    edx
  42384d:	or     BYTE PTR [eax],cl
  42384f:	cdq    
  423850:	lahf   
  423851:	in     eax,0x4b
  423853:	adc    eax,0x6ab1f565
  423858:	mov    al,0xa8
  42385b:	fsub   DWORD PTR [edi]
  42385d:	mov    ah,0x60
  42385f:	pop    esi
  423860:	sub    DWORD PTR [edx+eax*4+0x2f],edx
  423864:	pop    ds
  423865:	in     al,dx
  423866:	js     0x423876
  423868:	jbe    0x42384e
  42386a:	fs add bl,ah
  42386d:	cmp    eax,0x8661f1b2
  423872:	xor    ebp,eax
  423874:	sbb    ebp,DWORD PTR [ecx]
  423876:	js     0x4237fa
  423878:	pusha  
  423879:	inc    esp
  42387a:	add    BYTE PTR [eax],al
  42387c:	inc    ebx
  42387d:	push   ebp
  42387e:	pusha  
  42387f:	(bad)  
  423880:	jbe    0x423841
  423882:	out    dx,eax
  423883:	fnstsw WORD PTR [edx-0x18bca93d]
  423889:	pusha  
  42388a:	sub    BYTE PTR [edi+0x1b2b8],dh
  423890:	xchg   BYTE PTR [edx],al
  423892:	add    BYTE PTR [eax],al
  423894:	ins    BYTE PTR es:[edi],dx
  423895:	jle    0x4238f2
  423897:	(bad)  
  423898:	and    ebp,DWORD PTR [ecx+0x18]
  42389b:	cwde   
  42389c:	fnstsw WORD PTR [edi]
  42389e:	jl     0x4238ff
  4238a0:	jo     0x423840
  4238a2:	mov    ds:0x2c0e43a9,eax
  4238a7:	rcl    BYTE PTR [ecx+0x5b],0x7e
  4238ab:	jno    0x423919
  4238ad:	fadd   st(3),st
  4238af:	dec    edx
  4238b0:	in     al,0x28
  4238b2:	or     edx,DWORD PTR [edx]
  4238b4:	scas   eax,DWORD PTR es:[edi]
  4238b5:	push   edx
  4238b6:	out    dx,eax
  4238b7:	mov    edi,0xaeaec5d9
  4238bc:	imul   ebx,DWORD PTR [edi+0x3c9ae94c],0xffffff88
  4238c3:	retf   0x965d
  4238c6:	icebp  
  4238c7:	mov    esp,eax
  4238c9:	sbb    eax,0xa56a2421
  4238cf:	cmp    al,0x5b
  4238d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238d2:	nop
  4238d3:	scas   al,BYTE PTR es:[edi]
  4238d4:	lds    ebp,FWORD PTR [ebp+0x47]
  4238d7:	xor    al,BYTE PTR [esi+eiz*4-0x4aca0870]
  4238de:	loope  0x423911
  4238e0:	mov    edi,DWORD PTR [eax]
  4238e2:	and    eax,0xa4f953af
  4238e7:	dec    edx
  4238e8:	sbb    eax,0xa9456d8b
  4238ed:	cmp    BYTE PTR [ebx+0x2586ba34],bl
  4238f3:	adc    dl,BYTE PTR [esi-0x2c]
  4238f6:	xor    BYTE PTR [edi+edx*2+0x57c57211],cl
  4238fd:	pop    eax
  4238fe:	lea    ebp,[edi+0x6]
  423901:	jmp    0x3aa2:0x17e8202e
  423908:	xor    eax,0x8c863a7f
  42390d:	icebp  
  42390e:	xchg   edi,eax
  42390f:	xor    eax,0x78e899dd
  423914:	leave  
  423915:	pop    eax
  423916:	lds    ebp,FWORD PTR [ebx]
  423918:	jmp    0xda57:0x87e10da1
  42391f:	mov    esp,0x75a6d929
  423924:	cmp    al,ch
  423926:	dec    esp
  423927:	mov    WORD PTR [ebx+ebx*1+0x60],gs
  42392b:	push   ebp
  42392c:	xchg   edi,eax
  42392d:	mov    ebp,0x8a202181
  423932:	add    esp,DWORD PTR [ebx+0x46]
  423935:	or     bh,ch
  423937:	imul   esi,DWORD PTR [esi],0xfd706e75
  42393d:	stos   DWORD PTR es:[edi],eax
  42393e:	es adc eax,0x536a9330
  423944:	ss xchg ebx,eax
  423946:	xchg   DWORD PTR [eax-0x74],ecx
  423949:	aam    0x9
  42394b:	xchg   esp,eax
  42394c:	test   al,0x51
  42394e:	mov    eax,0xee2cf564
  423953:	inc    eax
  423954:	pop    ss
  423955:	rol    esi,1
  423957:	jo     0x4239b5
  423959:	(bad)  
  42395a:	retf   
  42395b:	push   0x2f
  42395d:	and    dl,BYTE PTR cs:[ecx-0x79a26684]
  423964:	xlat   BYTE PTR ds:[ebx]
  423965:	adc    eax,0x8c1cd52a
  42396a:	(bad)  
  42396b:	xlat   BYTE PTR ds:[ebx]
  42396c:	lock mul BYTE PTR [edx]
  42396f:	aas    
  423970:	dec    edi
  423971:	mov    ds:0xff2383a9,al
  423976:	cwde   
  423977:	mov    ds:0xcd7c398b,eax
  42397c:	int3   
  42397d:	sbb    BYTE PTR [esi],0x66
  423980:	mov    esp,0xd9d7c636
  423985:	lds    edi,FWORD PTR [eax+0x3e3604f6]
  42398b:	hlt    
  42398c:	pop    eax
  42398d:	mov    ch,0x59
  42398f:	out    0x62,eax
  423991:	xchg   ecx,eax
  423992:	mov    ebp,0x1b8f9229
  423997:	dec    eax
  423998:	ds pop ebx
  42399a:	aam    0xd6
  42399c:	or     DWORD PTR [edi-0x7cd1b7f3],ecx
  4239a2:	push   eax
  4239a3:	pop    ss
  4239a4:	lods   al,BYTE PTR ds:[esi]
  4239a5:	push   ss
  4239a6:	xchg   edi,eax
  4239a7:	sar    DWORD PTR [ecx+edi*4],cl
  4239aa:	mov    bh,0x25
  4239ac:	outs   dx,BYTE PTR ds:[esi]
  4239ad:	push   ecx
  4239ae:	sahf   
  4239af:	fsub   DWORD PTR [esp+ecx*8+0x15]
  4239b3:	inc    esi
  4239b4:	xor    al,0xc
  4239b6:	dec    ebx
  4239b7:	mov    ds:0x64fe1ddb,al
  4239bc:	cmp    ah,BYTE PTR [edi+0x17]
  4239bf:	pop    ecx
  4239c0:	and    BYTE PTR cs:[ecx-0xd],cl
  4239c4:	jg     0x423a43
  4239c6:	aas    
  4239c7:	xlat   BYTE PTR ds:[ebx]
  4239c8:	into   
  4239c9:	inc    ebp
  4239ca:	add    edi,ecx
  4239cc:	test   al,dl
  4239ce:	cld    
  4239cf:	and    eax,0xa64e53fb
  4239d4:	mov    bh,0xc2
  4239d6:	and    cl,BYTE PTR [ecx-0x5f97d291]
  4239dc:	ret    0x83b
  4239df:	cld    
  4239e0:	jbe    0x423a06
  4239e2:	shl    al,1
  4239e4:	nop
  4239e5:	shl    BYTE PTR [ecx+esi*1+0x7c3d87f3],1
  4239ec:	iret   
  4239ed:	jecxz  0x423a2e
  4239ef:	fbld   TBYTE PTR [ecx+0x62c2aa45]
  4239f5:	int    0xfa
  4239f7:	lahf   
  4239f8:	fs mov ecx,0x3525b50e
  4239fe:	mov    ebp,0xac4b55aa
  423a03:	test   ch,ah
  423a05:	outs   dx,BYTE PTR ds:[esi]
  423a06:	in     al,dx
  423a07:	xchg   BYTE PTR [ecx+0x177017b1],bh
  423a0d:	aam    0x39
  423a0f:	xor    eax,0xecb2ea12
  423a14:	add    eax,ecx
  423a16:	neg    DWORD PTR [edi+ebp*4]
  423a19:	push   esi
  423a1a:	jmp    0x11f2:0xf4cba753
  423a21:	dec    edi
  423a22:	imul   ecx,DWORD PTR [edi],0xbcf2622c
  423a28:	cld    
  423a29:	jl     0x423a8c
  423a2b:	mov    ds:0x74582060,al
  423a30:	fdivr  DWORD PTR [ebp+ebp*8-0x19cf85b6]
  423a37:	out    dx,eax
  423a38:	jl     0x423a5d
  423a3a:	cmp    ebp,DWORD PTR [ebp+0x29]
  423a3d:	jmp    0x99e5:0xb369966
  423a44:	ins    BYTE PTR es:[edi],dx
  423a45:	je     0x423a25
  423a47:	add    BYTE PTR [ecx],dh
  423a49:	repz mov edi,0xe2f1ef19
  423a4f:	dec    ebp
  423a50:	shl    cl,cl
  423a52:	jmp    0x423ac4
  423a54:	mov    BYTE PTR [esi-0x67],al
  423a57:	add    bh,BYTE PTR [ecx-0x16]
  423a5a:	dec    edi
  423a5b:	inc    dx
  423a5d:	in     al,0xd8
  423a5f:	mov    al,0xab
  423a61:	sti    
  423a62:	inc    ecx
  423a63:	jl     0x423a5a
  423a65:	add    cl,BYTE PTR [eax+0x11]
  423a68:	cmp    DWORD PTR [bx+di],eax
  423a6b:	in     eax,0xfa
  423a6d:	lahf   
  423a6e:	xchg   esi,eax
  423a6f:	fisttp WORD PTR [eax+ebx*2]
  423a72:	stos   DWORD PTR es:[edi],eax
  423a73:	add    eax,0xa6e87063
  423a78:	jmp    0xcf3d30d3
  423a7d:	dec    esp
  423a7e:	mov    bh,0xf7
  423a80:	mov    ch,0x1b
  423a82:	dec    ebp
  423a83:	loope  0x423ae7
  423a85:	inc    edx
  423a86:	push   cs
  423a87:	and    al,BYTE PTR [ebx]
  423a89:	fsub   DWORD PTR [ebp+0x20]
  423a8c:	inc    esi
  423a8d:	xor    bl,cl
  423a8f:	mov    bh,0xb3
  423a91:	rol    BYTE PTR [edi],0xde
  423a94:	jmp    0x72f9:0xcd24fe6
  423a9b:	(bad)  
  423a9c:	and    bh,BYTE PTR [esi-0x3]
  423a9f:	push   eax
  423aa0:	mov    ch,0x32
  423aa2:	pop    ss
  423aa3:	scas   al,BYTE PTR es:[edi]
  423aa4:	into   
  423aa5:	add    ch,ah
  423aa7:	(bad)  
  423aa8:	adc    al,0xcd
  423aaa:	adc    DWORD PTR [eax],ecx
  423aac:	pop    edx
  423aad:	mov    esp,0x219a0bd6
  423ab2:	fmul   QWORD PTR [edx+0x4e85bf52]
  423ab8:	imul   ecx,DWORD PTR ds:0x656558d6,0xffffffe8
  423abf:	ficomp WORD PTR [di]
  423ac2:	pop    esi
  423ac3:	jg     0x423a68
  423ac5:	mov    al,0xe1
  423ac7:	push   esp
  423ac8:	imul   esp,DWORD PTR [esi+0x5c7efa24],0x470fbd0f
  423ad2:	das    
  423ad3:	fisttp DWORD PTR [ebx-0x3cac9135]
  423ad9:	mov    dl,0xac
  423adb:	je     0x423b1f
  423add:	cld    
  423ade:	lahf   
  423adf:	xor    al,0x17
  423ae1:	push   cs
  423ae2:	daa    
  423ae3:	sbb    eax,DWORD PTR [esi-0x52f35621]
  423ae9:	ffree  st(7)
  423aeb:	outs   dx,BYTE PTR ds:[esi]
  423aec:	xchg   edx,eax
  423aed:	sub    al,0xae
  423aef:	mov    al,ds:0xf0cfa12
  423af4:	and    DWORD PTR [ecx-0x59],ecx
  423af7:	dec    ebp
  423af8:	mov    ecx,0xda681429
  423afd:	pop    edx
  423afe:	xchg   dh,dh
  423b00:	cmc    
  423b01:	stos   BYTE PTR es:[edi],al
  423b02:	cmp    cl,BYTE PTR [edi+0x71]
  423b05:	jae    0x423b5a
  423b07:	adc    BYTE PTR [edi+0x5e],0xa
  423b0b:	push   edx
  423b0c:	xchg   BYTE PTR [ecx+0x4a],al
  423b0f:	cwde   
  423b10:	mov    cl,0xc5
  423b12:	adc    al,0x1c
  423b14:	inc    ebp
  423b15:	stos   DWORD PTR es:[edi],eax
  423b16:	out    dx,al
  423b17:	mov    ds,ebx
  423b19:	adc    al,BYTE PTR [eax]
  423b1b:	add    BYTE PTR [edi+0x2d],dl
  423b1e:	pop    es
  423b1f:	call   0x55de:0xeddfba7f
  423b26:	inc    ecx
  423b27:	adc    al,0xd0
  423b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b2a:	dec    esi
  423b2b:	mov    al,ds:0x1b53e
  423b30:	xchg   BYTE PTR [edx],al
  423b32:	add    BYTE PTR [eax],al
  423b34:	call   0xed2b:0x8abcd13b
  423b3b:	into   
  423b3c:	xor    BYTE PTR [edi-0x5393acfe],bl
  423b42:	xor    al,0x7c
  423b44:	xlat   BYTE PTR gs:[ebx]
  423b46:	std    
  423b47:	dec    ebx
  423b48:	sub    DWORD PTR [edi],0x1ed103fb
  423b4e:	ret    0x8f0f
  423b51:	sbb    DWORD PTR [edx+0x2aa8ccb4],0x2
  423b58:	(bad)  
  423b59:	pop    ebx
  423b5a:	jmp    0x423b0e
  423b5c:	mov    edx,DWORD PTR [ecx]
  423b5e:	aad    0xac
  423b60:	push   ebx
  423b61:	and    al,BYTE PTR [esi+0x57d7bb70]
  423b67:	aam    0xde
  423b69:	xchg   ebx,eax
  423b6a:	add    eax,0x747a74e8
  423b6f:	shl    DWORD PTR [ebx+edi*2],cl
  423b72:	cwde   
  423b73:	dec    edx
  423b74:	pop    ecx
  423b75:	rol    DWORD PTR [esi+0x237ab425],0x62
  423b7c:	mov    bl,0x7a
  423b7e:	mov    dh,BYTE PTR [esi]
  423b80:	inc    ebx
  423b81:	xchg   edx,eax
  423b82:	das    
  423b83:	les    esi,FWORD PTR [ebx]
  423b85:	fwait
  423b86:	les    ebx,FWORD PTR [eax+edi*1]
  423b89:	or     bl,dh
  423b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b8c:	stos   DWORD PTR es:[edi],eax
  423b8d:	mov    BYTE PTR [eax],al
  423b8f:	add    eax,0xc149886a
  423b94:	fwait
  423b95:	add    esi,DWORD PTR ds:0xfc6ee0b2
  423b9b:	cwde   
  423b9c:	or     edx,DWORD PTR ss:[edi+0x19]
  423ba0:	loopne 0x423b6f
  423ba2:	inc    esp
  423ba3:	dec    eax
  423ba4:	inc    edi
  423ba5:	sbb    eax,0xd8e2b183
  423baa:	push   ds
  423bab:	lock xchg DWORD PTR [ecx],eax
  423bae:	ret    
  423baf:	pusha  
  423bb0:	or     dh,BYTE PTR [esi+0x430f37fc]
  423bb6:	ins    BYTE PTR es:[edi],dx
  423bb7:	mov    ds:0x885ab252,al
  423bbc:	outs   dx,DWORD PTR ds:[esi]
  423bbd:	add    ebx,0xb
  423bc0:	add    eax,0x56068c44
  423bc5:	or     ecx,DWORD PTR [edi-0x6177725f]
  423bcb:	in     al,dx
  423bcc:	mov    eax,0x47346019
  423bd1:	arpl   WORD PTR [edi],bp
  423bd3:	add    dh,BYTE PTR ds:0xdd87b6b5
  423bd9:	xchg   al,dl
  423bdb:	push   eax
  423bdc:	jp     0x423c5c
  423bde:	aad    0xb9
  423be0:	outs   dx,DWORD PTR ds:[esi]
  423be1:	jae    0x423bbd
  423be3:	add    ch,0x94
  423be6:	inc    esp
  423be7:	adc    bl,BYTE PTR [edx]
  423be9:	and    bh,BYTE PTR [esi-0x43]
  423bec:	pop    eax
  423bed:	dec    edi
  423bee:	and    eax,0xcd6a966
  423bf3:	dec    edi
  423bf4:	(bad)  
  423bf5:	(bad)  
  423bf6:	adc    bh,BYTE PTR [eax+ecx*8+0x1091b986]
  423bfd:	inc    edx
  423bfe:	pop    edi
  423bff:	cmp    DWORD PTR [edx],ebp
  423c01:	imul   cl
  423c03:	add    dh,BYTE PTR [edx+edi*2+0xc]
  423c07:	pushf  
  423c08:	add    BYTE PTR [edx-0x1b],0xd
  423c0c:	call   0x3ddebd68
  423c11:	ror    ebx,1
  423c13:	pop    ss
  423c14:	mov    BYTE PTR [ecx-0x10],cl
  423c17:	call   0xe1e8744e
  423c1c:	clc    
  423c1d:	(bad)  
  423c1e:	stos   DWORD PTR es:[edi],eax
  423c1f:	xchg   ecx,eax
  423c20:	inc    ebx
  423c21:	cmp    ch,dl
  423c23:	shl    DWORD PTR [ecx+0x61],0x27
  423c27:	mov    al,ds:0x59f95bc0
  423c2c:	push   edi
  423c2d:	mov    ch,0xcd
  423c2f:	cmp    al,0x4e
  423c31:	(bad)  
  423c32:	sub    BYTE PTR [edi+0x7b],dh
  423c35:	sbb    dl,BYTE PTR [ebx]
  423c37:	add    cl,cl
  423c39:	ds pop es
  423c3b:	enter  0xc592,0x17
  423c3f:	in     eax,dx
  423c40:	in     al,0x4e
  423c42:	xchg   ebp,eax
  423c43:	cmp    BYTE PTR [ecx+0x40],0x3b
  423c47:	mov    esp,0x5e58ae49
  423c4c:	lahf   
  423c4d:	imul   ecx,DWORD PTR [eax+edi*8-0x7b],0xfffffff5
  423c52:	sub    bl,0x28
  423c55:	sub    DWORD PTR [edi+0x5d689b07],0x26422ae0
  423c5f:	cmp    DWORD PTR [esi-0x16fa75a8],esp
  423c65:	add    al,0x42
  423c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c68:	inc    edx
  423c69:	rcr    BYTE PTR [edi-0x2c],0x47
  423c6d:	icebp  
  423c6e:	out    dx,al
  423c6f:	cmp    eax,0x3ca5e031
  423c74:	aas    
  423c75:	sti    
  423c76:	mov    edx,0xcf127607
  423c7b:	cmp    ebx,DWORD PTR [edi+0x39b583b1]
  423c81:	or     al,0x7b
  423c83:	ret    0x42aa
  423c86:	inc    ecx
  423c87:	or     edx,DWORD PTR [ebx-0x6e]
  423c8a:	or     BYTE PTR [edi],bh
  423c8c:	fs popa 
  423c8e:	aam    0xa2
  423c90:	mov    esp,0x1abf526d
  423c95:	out    0x46,al
  423c97:	push   cs
  423c98:	sbb    eax,0x57f8d34a
  423c9d:	mov    bl,0x8e
  423c9f:	popf   
  423ca0:	mov    ecx,0x6f794005
  423ca5:	push   ecx
  423ca6:	jnp    0x423ce8
  423ca8:	cmp    ah,BYTE PTR [eax-0x1c356520]
  423cae:	xchg   ebx,eax
  423caf:	jmp    0x423d16
  423cb1:	mov    ?,WORD PTR [edx+0x1120a4a8]
  423cb7:	add    al,BYTE PTR [ecx+0x2b]
  423cba:	add    eax,0xe0f70a39
  423cbf:	bsf    esp,DWORD PTR [ebp+0x49]
  423cc3:	test   eax,0x2d0d1e30
  423cc8:	jno    0x423cee
  423cca:	ret    
  423ccb:	pop    ebp
  423ccc:	sahf   
  423ccd:	vpmaxsw xmm5,xmm1,XMMWORD PTR ds:0x56124710
  423cd5:	lods   eax,DWORD PTR ds:[esi]
  423cd6:	xor    ah,0x65
  423cd9:	cwde   
  423cda:	repz add BYTE PTR [edx],ah
  423cdd:	aas    
  423cde:	cwde   
  423cdf:	pop    ds
  423ce0:	fcomp  QWORD PTR [eax+eiz*4]
  423ce3:	dec    esi
  423ce4:	xchg   esi,eax
  423ce5:	adc    edx,DWORD PTR [ecx]
  423ce7:	rol    DWORD PTR ds:0xf4e4d44e,0x8f
  423cee:	fcom   QWORD PTR [eax]
  423cf0:	mov    al,ds:0x643f8b71
  423cf5:	jle    0x423d59
  423cf7:	stos   DWORD PTR es:[edi],eax
  423cf8:	adc    eax,0xc1c6803d
  423cfd:	cmp    DWORD PTR [ebx+ecx*8-0xd70c920],ebp
  423d04:	xor    cl,dh
  423d06:	adc    eax,0xee760ab2
  423d0b:	jnp    0x423d36
  423d0d:	test   al,0x4a
  423d0f:	jecxz  0x423d0e
  423d11:	bound  edx,QWORD PTR [esi-0x511a3a43]
  423d17:	jg     0x423d3a
  423d19:	push   edi
  423d1a:	xor    eax,0x5df7040c
  423d1f:	and    al,0xce
  423d21:	pop    eax
  423d22:	pop    edi
  423d23:	test   DWORD PTR [ebx+ebp*1+0x4d],edi
  423d27:	cmp    eax,0x182fc54e
  423d2c:	inc    esi
  423d2d:	jnp    0x423cd8
  423d2f:	jmp    0x867e:0x752db0b8
  423d36:	cmp    eax,0x8971d6ab
  423d3b:	cmp    WORD PTR [ebx+0x3ad04b0d],ax
  423d42:	cld    
  423d43:	mov    dl,BYTE PTR [edx+0x19a95139]
  423d49:	outs   dx,DWORD PTR ds:[esi]
  423d4a:	mov    ds:0xf27768e,eax
  423d4f:	xchg   edi,eax
  423d50:	out    dx,eax
  423d51:	into   
  423d52:	aad    0xef
  423d54:	xor    al,0x8b
  423d56:	cdq    
  423d57:	pop    ebp
  423d58:	and    BYTE PTR [ecx-0x1c],bl
  423d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d5c:	ja     0x423d79
  423d5e:	ins    BYTE PTR es:[edi],dx
  423d5f:	sbb    al,0x78
  423d61:	rol    DWORD PTR [ecx+0x2da8e6d],1
  423d67:	aas    
  423d68:	mov    ecx,0xe63b687e
  423d6d:	lock call 0x9ecd4865
  423d73:	push   ebx
  423d74:	cmp    bl,0x1a
  423d77:	jo     0x423cfd
  423d79:	fwait
  423d7a:	pop    edi
  423d7b:	popf   
  423d7c:	mov    cl,0x4f
  423d7e:	cmp    DWORD PTR [ecx],esp
  423d80:	in     al,dx
  423d81:	aad    0x65
  423d83:	mov    ah,BYTE PTR [ebx-0x81316a4]
  423d89:	stc    
  423d8a:	in     eax,0x3a
  423d8c:	add    DWORD PTR [eax-0x58],edi
  423d8f:	sbb    esi,DWORD PTR ds:0xab4627d5
  423d95:	lock call 0x311a:0x3ea08f5b
  423d9d:	xchg   edx,eax
  423d9e:	mov    ah,0x29
  423da0:	(bad)  
  423da1:	push   0x6c6e7d3d
  423da6:	or     DWORD PTR [esi],ecx
  423da8:	fdiv   QWORD PTR [ebp-0x3f582bd7]
  423dae:	cmp    bl,bh
  423db0:	retf   0xf7f5
  423db3:	and    BYTE PTR [ebx-0x6b10385e],0x59
  423dba:	add    BYTE PTR [eax],al
  423dbc:	ins    BYTE PTR es:[edi],dx
  423dbd:	sub    ch,BYTE PTR [ebx]
  423dbf:	outs   dx,DWORD PTR es:[esi]
  423dc1:	daa    
  423dc2:	ins    DWORD PTR es:[edi],dx
  423dc3:	push   0xfffffff2
  423dc5:	push   esp
  423dc6:	stos   DWORD PTR es:[edi],eax
  423dc7:	adc    esi,esi
  423dc9:	daa    
  423dca:	adc    eax,0x1b7c4f6
  423dcf:	add    BYTE PTR [esi-0xcfffffe],al
  423dd5:	jmp    0x377a5da
  423dda:	mov    ebx,0xc2f7137b
  423ddf:	jg     0x423dd5
  423de1:	pop    eax
  423de2:	popf   
  423de3:	lea    ecx,[esi+0x15]
  423de6:	outs   dx,DWORD PTR ds:[esi]
  423de7:	dec    ebp
  423de8:	adc    BYTE PTR [ecx+0x25],0xcf
  423dec:	pop    esi
  423ded:	test   eax,0xc0ab4fbe
  423df2:	call   0x8abc:0xd54c0d94
  423df9:	icebp  
  423dfa:	or     edi,DWORD PTR [eax+eax*4]
  423dfd:	mov    ebx,0xbe84fe85
  423e02:	pop    ebx
  423e03:	cli    
  423e04:	jnp    0x423dba
  423e06:	jnp    0x423d8f
  423e08:	addr16 sub eax,0x895ab392
  423e0e:	sti    
  423e0f:	cwde   
  423e10:	xchg   bl,al
  423e12:	int    0xfa
  423e14:	adc    esp,esp
  423e16:	mov    ebx,0x74ccf8e3
  423e1b:	shl    BYTE PTR [ecx],cl
  423e1d:	les    esi,FWORD PTR [ecx+edi*2]
  423e20:	pop    es
  423e21:	push   ecx
  423e22:	nop
  423e23:	popf   
  423e24:	leave  
  423e25:	push   0x22f04b29
  423e2a:	xchg   esp,eax
  423e2b:	(bad)  
  423e2c:	dec    esi
  423e2d:	xor    eax,0x2555e4c5
  423e32:	xchg   ebp,eax
  423e33:	cmc    
  423e34:	push   esp
  423e35:	push   es
  423e36:	adc    al,0xd6
  423e38:	les    esp,FWORD PTR [eax-0x3c3fc16e]
  423e3e:	mov    esi,0x950deaa
  423e43:	cdq    
  423e44:	mov    esp,0xcfbe74fb
  423e49:	je     0x423e83
  423e4b:	out    0x6c,eax
  423e4d:	test   al,0x3e
  423e4f:	arpl   WORD PTR [ebp+0x5d24a317],dx
  423e55:	mov    ebp,DWORD PTR [edi]
  423e57:	bound  ecx,QWORD PTR [eax+0x6f]
  423e5a:	xchg   ebp,eax
  423e5b:	cmp    dh,ah
  423e5d:	push   esp
  423e5e:	mov    bl,0x51
  423e60:	push   eax
  423e61:	ja     0x423e52
  423e63:	dec    esp
  423e64:	push   edi
  423e65:	fisubr DWORD PTR [edx+0x3fcd16ed]
  423e6b:	push   cs
  423e6c:	aad    0xc6
  423e6e:	jecxz  0x423e30
  423e70:	sub    edi,eax
  423e72:	fst    DWORD PTR ds:[ebx]
  423e75:	out    dx,eax
  423e76:	retf   
  423e77:	(bad)  
  423e78:	in     al,dx
  423e79:	addr16 pop ebp
  423e7b:	xor    BYTE PTR [esi+eax*8-0x4e8b21ea],0x53
  423e83:	jl     0x423e36
  423e85:	adc    edx,ebp
  423e87:	dec    edx
  423e88:	in     eax,dx
  423e89:	repnz dec ecx
  423e8b:	pop    esp
  423e8c:	pushf  
  423e8d:	fdiv   QWORD PTR [edx+0x58037b5a]
  423e93:	mov    bl,0x21
  423e95:	and    BYTE PTR [ebx+0x8],ah
  423e98:	(bad)  
  423e99:	mov    edx,0xf56c21e8
  423e9e:	or     bl,BYTE PTR [ebp-0xb]
  423ea1:	out    dx,eax
  423ea2:	inc    eax
  423ea3:	sub    DWORD PTR [edi+0x29],0xffffffc5
  423ea7:	ret    
  423ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ea9:	adc    al,0x5f
  423eab:	sbb    ch,dh
  423ead:	xor    ch,BYTE PTR [ebx+0x16]
  423eb0:	ins    BYTE PTR es:[edi],dx
  423eb1:	fiadd  DWORD PTR [esi+0x4a]
  423eb4:	not    eax
  423eb6:	retf   0xe363
  423eb9:	xchg   edi,eax
  423eba:	loope  0x423eb0
  423ebc:	inc    edi
  423ebd:	outs   dx,DWORD PTR ds:[esi]
  423ebe:	in     al,0xd2
  423ec0:	dec    esi
  423ec1:	xor    edx,DWORD PTR [ebp+eax*8+0x4b8c6249]
  423ec8:	repnz mov ch,0x50
  423ecb:	dec    esi
  423ecc:	outs   dx,DWORD PTR ds:[esi]
  423ecd:	(bad)  ds:0x25154b41
  423ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ed4:	and    dl,dh
  423ed6:	push   edx
  423ed7:	lods   eax,DWORD PTR ds:[esi]
  423ed8:	sbb    BYTE PTR [esi+ecx*8+0x1f9d1255],ch
  423edf:	or     BYTE PTR [edi-0x5e318133],dh
  423ee5:	pop    DWORD PTR [edx+0x6858f039]
  423eeb:	dec    ecx
  423eec:	fs mov ebx,0xc2a7834d
  423ef2:	xchg   ebx,eax
  423ef3:	push   ds
  423ef4:	fwait
  423ef5:	mov    ch,0xa0
  423ef7:	shl    ah,1
  423ef9:	sub    bh,ch
  423efb:	jl     0x423ec9
  423efd:	dec    eax
  423efe:	in     al,dx
  423eff:	sub    bl,0x8d
  423f02:	out    0x94,al
  423f04:	mov    cl,dh
  423f06:	cmp    eax,0x236558c7
  423f0b:	xor    BYTE PTR [ecx-0x23],al
  423f0e:	mov    ds:0x68f72b19,eax
  423f13:	jl     0x423f4a
  423f15:	inc    edx
  423f16:	push   ss
  423f17:	repz ss pop edx
  423f1a:	jl     0x423f1d
  423f1c:	sub    bl,BYTE PTR [eax+0x1e88ccd7]
  423f22:	scas   eax,DWORD PTR es:[edi]
  423f23:	xchg   edi,eax
  423f24:	fwait
  423f25:	out    dx,eax
  423f26:	or     esi,DWORD PTR [edi-0x184296bf]
  423f2c:	mov    bl,0xee
  423f2e:	push   ss
  423f2f:	xor    edi,DWORD PTR [ebx]
  423f31:	inc    esi
  423f32:	jle    0x423f18
  423f34:	jp     0x423ecd
  423f36:	add    eax,0x2b95a514
  423f3b:	fwait
  423f3c:	scas   eax,DWORD PTR es:[edi]
  423f3d:	test   BYTE PTR [edx],ch
  423f3f:	imul   ebx,DWORD PTR [ebx],0xffffff9a
  423f42:	push   cs
  423f43:	pop    DWORD PTR [ebp+0x0]
  423f46:	mov    al,0x4f
  423f48:	push   esp
  423f49:	retf   0xbe52
  423f4c:	adc    bl,dl
  423f4e:	push   ebx
  423f4f:	or     ch,bh
  423f51:	in     al,dx
  423f52:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f54:	dec    ecx
  423f55:	lea    ebx,[ebp+edx*4-0x64fa3e33]
  423f5c:	pushf  
  423f5d:	mov    al,0x42
  423f5f:	pop    ss
  423f60:	sbb    al,0xcb
  423f62:	cld    
  423f63:	aaa    
  423f64:	mov    ds:0xbb1edb4,al
  423f69:	add    al,0xcd
  423f6b:	stos   DWORD PTR es:[edi],eax
  423f6c:	mov    ecx,0xae3bd50c
  423f71:	inc    ecx
  423f72:	pop    ecx
  423f73:	imul   DWORD PTR [edx-0x7c706178]
  423f79:	repz dec edi
  423f7b:	inc    esp
  423f7c:	ss jne 0x423f36
  423f7f:	xchg   edx,eax
  423f80:	or     BYTE PTR [edx-0x7f],al
  423f83:	cmp    eax,0x2215ae98
  423f88:	fsubrp st(5),st
  423f8a:	fneni(8087 only) 
  423f8c:	inc    edx
  423f8d:	int    0xed
  423f8f:	mov    ecx,0x493a61be
  423f95:	test   al,0x7f
  423f97:	clc    
  423f98:	jnp    0x423f71
  423f9a:	xor    DWORD PTR [esi+ecx*1+0x24],ebx
  423f9e:	repz mov al,0xee
  423fa1:	sub    DWORD PTR [esi],0x12
  423fa4:	sbb    edi,eax
  423fa6:	push   esi
  423fa7:	outs   dx,BYTE PTR ds:[esi]
  423fa8:	pop    edi
  423fa9:	adc    DWORD PTR [ebx+0x3ebd7fb6],0xa0ead31f
  423fb3:	rol    BYTE PTR [ebx+edx*1],1
  423fb6:	in     al,dx
  423fb7:	adc    eax,0xf5d9b03e
  423fbc:	les    esp,FWORD PTR [edi+0x4b]
  423fbf:	mov    cs,eax
  423fc1:	in     eax,dx
  423fc2:	jp     0x423ffa
  423fc4:	push   edx
  423fc5:	cmp    BYTE PTR [ecx-0x7fd97752],bh
  423fcb:	lahf   
  423fcc:	and    eax,0x6a4e9665
  423fd1:	aas    
  423fd2:	push   0xffffffd1
  423fd4:	les    esp,FWORD PTR [esi+0x6cabfda3]
  423fda:	cli    
  423fdb:	fmulp  st(0),st
  423fdd:	mov    ah,0x2a
  423fdf:	mov    ds:0x342a2a99,eax
  423fe4:	and    DWORD PTR [edx+0x2d650654],edx
  423fea:	cmp    al,0xa9
  423fed:	fild   WORD PTR [esi+ecx*2-0x2a]
  423ff1:	push   0x76
  423ff3:	test   al,0x91
  423ff5:	push   eax
  423ff6:	rol    BYTE PTR [ebx],cl
  423ff8:	xor    DWORD PTR [si],ebx
  423ffb:	add    al,0x6e
  423ffd:	mov    DWORD PTR es:[edx+eiz*1],ebp
  424001:	pop    esi
  424002:	push   ebx
  424003:	enter  0xd8a0,0x66
  424007:	mov    ch,0x9c
  424009:	pushf  
  42400a:	aaa    
  42400b:	adc    BYTE PTR [edi+0x12d3ffd6],bh
  424011:	aad    0xa8
  424013:	(bad)  
  424014:	ss int 0x87
  424017:	fdiv   QWORD PTR [ebx-0x39]
  42401a:	and    eax,DWORD PTR [ebx+0x7b389cbd]
  424020:	in     al,0xd8
  424022:	lods   eax,DWORD PTR ds:[esi]
  424023:	mov    ebx,0x788c7f4e
  424028:	and    eax,0x50e0b6b0
  42402d:	mov    ecx,0xa5e69779
  424032:	cs pop ebx
  424034:	ret    0xbb99
  424037:	fild   WORD PTR [ebx+0x13b212a2]
  42403d:	push   ds
  42403e:	inc    ebx
  42403f:	jmp    0x423fe3
  424041:	pop    ebx
  424042:	enter  0x2b73,0xf8
  424046:	stos   BYTE PTR es:[edi],al
  424047:	sbb    al,0x68
  424049:	dec    ebp
  42404a:	inc    ebp
  42404b:	fbstp  TBYTE PTR [edx-0x52]
  42404e:	gs push ebx
  424050:	mov    ch,0x86
  424052:	lock cmp bl,BYTE PTR [eax-0x38]
  424056:	pop    eax
  424057:	xor    al,0x3c
  424059:	rol    BYTE PTR [eax],cl
  42405b:	add    BYTE PTR [ebx-0x73],al
  42405e:	pop    ds
  42405f:	and    bh,bl
  424061:	mov    dl,0x7f
  424063:	out    dx,eax
  424064:	add    BYTE PTR [ebx-0x6b33d8f0],dl
  42406a:	push   cs
  42406b:	jns    0x4240b7
  42406d:	mov    edx,0x2860001
  424072:	add    BYTE PTR [eax],al
  424074:	jp     0x4240a9
  424076:	cmp    edx,ecx
  424078:	aam    0xd4
  42407a:	push   0x67edc3e
  42407f:	(bad)  
  424080:	sbb    eax,0xc1a6fd97
  424085:	and    al,0x36
  424087:	js     0x4240d6
  424089:	inc    DWORD PTR [eax]
  42408b:	pop    ss
  42408c:	shl    ecx,cl
  42408e:	popa   
  42408f:	sbb    esp,DWORD PTR [edx+0x2de043ae]
  424095:	scas   al,BYTE PTR es:[edi]
  424096:	(bad)  
  424097:	leave  
  424098:	mov    bh,0x9b
  42409a:	push   ebx
  42409b:	ror    BYTE PTR [eax+edi*2+0x778cc1b1],cl
  4240a2:	retf   
  4240a3:	mov    dl,0xb1
  4240a5:	popf   
  4240a6:	fidivr WORD PTR [eax]
  4240a8:	fdiv   DWORD PTR [eax+ecx*1+0x79]
  4240ac:	push   edi
  4240ad:	imul   edx,edx,0x2dd90973
  4240b3:	sub    cl,BYTE PTR [edx+0x2a4a0837]
  4240b9:	jp     0x424043
  4240bb:	adc    al,0x18
  4240bd:	push   eax
  4240be:	xchg   ebx,eax
  4240bf:	test   bh,dh
  4240c1:	push   0xdac64afb
  4240c6:	jge    0x42411a
  4240c8:	mov    ch,0x6e
  4240ca:	xor    al,0x18
  4240cc:	test   BYTE PTR [esi-0x5a],dl
  4240cf:	xlat   BYTE PTR ds:[ebx]
  4240d0:	sbb    al,BYTE PTR [esi+0x36]
  4240d3:	adc    BYTE PTR fs:[eax+0x36d6c5b6],0x71
  4240db:	scas   al,BYTE PTR es:[edi]
  4240dc:	mov    al,0x19
  4240de:	out    dx,eax
  4240df:	jnp    0x42412e
  4240e1:	loope  0x424076
  4240e3:	inc    ebx
  4240e4:	mov    dh,0x46
  4240e6:	xchg   ecx,eax
  4240e7:	xor    al,0x7b
  4240e9:	(bad)  
  4240ea:	mov    edx,0x6125370
  4240ef:	xchg   esi,eax
  4240f0:	mov    DWORD PTR [ebp-0x45],ecx
  4240f3:	jl     0x4240ba
  4240f5:	or     al,0x1b
  4240f7:	or     al,0x32
  4240f9:	into   
  4240fa:	mov    ecx,0xdd1ce649
  4240ff:	pop    esi
  424100:	add    esi,ecx
  424102:	sbb    esp,DWORD PTR [ebx]
  424104:	jecxz  0x424136
  424106:	cmp    eax,0xe6c90248
  42410b:	dec    edi
  42410c:	dec    edx
  42410d:	lock push ss
  42410f:	or     bh,ch
  424111:	inc    ecx
  424112:	stos   BYTE PTR es:[edi],al
  424113:	dec    ebp
  424114:	sub    edi,DWORD PTR [edi+ebx*1+0x6f]
  424118:	dec    edx
  424119:	xchg   esp,eax
  42411a:	dec    ebx
  42411b:	fistp  WORD PTR [ecx]
  42411d:	sar    BYTE PTR [edi],0x45
  424120:	or     al,0x69
  424122:	jnp    0x424116
  424124:	mov    ebp,0xd2781feb
  424129:	xchg   esp,eax
  42412a:	xchg   ebp,eax
  42412b:	leave  
  42412c:	fld    DWORD PTR [ebp+0x665a9c18]
  424132:	sbb    eax,0x6b83a31c
  424137:	jb     0x424148
  424139:	enter  0xfaa,0xef
  42413d:	pop    ecx
  42413e:	cdq    
  42413f:	inc    esi
  424140:	mov    BYTE PTR [eax-0x6eb99894],bl
  424146:	add    DWORD PTR [ebx+0x2b1ebe3d],ebp
  42414c:	mov    cs,WORD PTR [edi]
  42414e:	adc    al,0x7f
  424150:	mov    ah,bh
  424152:	daa    
  424153:	pusha  
  424154:	sub    DWORD PTR [edx],ecx
  424156:	fwait
  424157:	mov    DWORD PTR ds:0x18340f90,edi
  42415d:	inc    eax
  42415e:	pop    edi
  42415f:	sub    al,0x28
  424161:	cs call 0xe500:0xa7378ca1
  424169:	ret    
  42416a:	call   0xa01a062b
  42416f:	and    dl,BYTE PTR [ebx-0x58]
  424172:	mov    ecx,0x7af67446
  424177:	push   ecx
  424178:	cmc    
  424179:	and    edi,DWORD PTR [eax]
  42417b:	adc    DWORD PTR ds:0x4682ff37,ebx
  424181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424182:	xchg   ebx,esp
  424184:	cwde   
  424185:	adc    BYTE PTR ds:0x85ce7371,bl
  42418b:	mov    eax,ds:0xb171b906
  424190:	or     BYTE PTR [ecx-0x37d4b943],ah
  424196:	xor    eax,0xf3a3aac3
  42419b:	mov    ebx,0xd6eb1968
  4241a0:	push   0xf096ec94
  4241a5:	xchg   ecx,eax
  4241a6:	sbb    bh,cl
  4241a8:	pop    ss
  4241a9:	pusha  
  4241aa:	ror    DWORD PTR cs:[eax],1
  4241ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241ae:	call   0x4b0f:0x93cd8f10
  4241b5:	fdiv   st(4),st
  4241b7:	in     eax,dx
  4241b8:	outs   dx,DWORD PTR ds:[esi]
  4241b9:	scas   eax,DWORD PTR es:[edi]
  4241ba:	adc    al,0xb9
  4241bc:	nop
  4241bd:	cdq    
  4241be:	add    bl,al
  4241c0:	loopne 0x42414e
  4241c2:	add    eax,0x22d55c65
  4241c7:	fnstenv [ebx-0x166f9dd6]
  4241cd:	sahf   
  4241ce:	leave  
  4241cf:	mov    cl,0x63
  4241d1:	loopne 0x424199
  4241d3:	(bad)  [eax+0x4c]
  4241d6:	dec    esp
  4241d7:	(bad)  
  4241d8:	adc    edi,DWORD PTR [edx+0x79a83c46]
  4241de:	adc    DWORD PTR [esi+0x35],edi
  4241e1:	add    BYTE PTR [ebx-0x78304c9b],0xb5
  4241e8:	mov    esi,0x79c9c32a
  4241ed:	popf   
  4241ee:	dec    esi
  4241ef:	cmp    edx,DWORD PTR [ecx]
  4241f1:	test   eax,0xe5ad4eeb
  4241f6:	dec    ebx
  4241f7:	adc    eax,0x310e09b6
  4241fc:	loope  0x4241c6
  4241fe:	sub    al,0xa7
  424200:	adc    al,BYTE PTR [eax-0x42]
  424203:	nop
  424204:	push   ss
  424205:	fisubr DWORD PTR ds:0x58303938
  42420b:	loopne 0x42426c
  42420d:	xor    BYTE PTR [esi],al
  42420f:	push   edx
  424210:	cmp    esp,DWORD PTR [edi-0x7b5fc03f]
  424216:	adc    al,0x2
  424218:	cdq    
  424219:	mov    ecx,0xe7317a5b
  42421e:	cmc    
  42421f:	inc    esp
  424220:	test   al,0x1b
  424222:	les    edx,FWORD PTR [esp+edx*8+0x791fbb6d]
  424229:	fisub  WORD PTR ds:[ebx+0x7f6bf934]
  424230:	sub    al,ah
  424232:	and    BYTE PTR [ebx+0x71],cl
  424235:	in     al,0x27
  424237:	or     edx,0x6f
  42423a:	retf   
  42423b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42423c:	ds jecxz 0x4242a3
  42423f:	into   
  424240:	xor    BYTE PTR [ecx+ecx*8],al
  424243:	dec    ebx
  424244:	push   0xcc93a98e
  424249:	out    0x78,al
  42424b:	jnp    0x424215
  42424d:	dec    ebp
  42424e:	out    0xef,al
  424250:	mov    ds:0x153acc37,al
  424255:	mov    dh,cl
  424257:	inc    edi
  424258:	xor    dl,BYTE PTR [eax+0x4f]
  42425b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42425c:	cmp    eax,eax
  42425e:	out    dx,al
  42425f:	cmp    BYTE PTR [ebp+0x98607f3],bl
  424265:	test   BYTE PTR [ebp+0x68],dh
  424268:	fwait
  424269:	js     0x424248
  42426b:	jb     0x424234
  42426d:	dec    esp
  42426e:	lods   eax,DWORD PTR ds:[esi]
  42426f:	add    BYTE PTR [esi-0x1edf642d],dl
  424275:	xlat   BYTE PTR ds:[ebx]
  424276:	sbb    ebx,DWORD PTR [eax-0x1c]
  424279:	adc    ebx,DWORD PTR [edi]
  42427b:	arpl   bp,bx
  42427d:	sub    ebx,DWORD PTR [esi+0x55ec0ae]
  424283:	jmp    0x424236
  424285:	xchg   edi,eax
  424286:	bound  edi,QWORD PTR [ebp+0x1bc2c691]
  42428c:	pop    edx
  42428d:	loopne 0x4242f0
  42428f:	xchg   edi,eax
  424290:	and    DWORD PTR [edx+0x5964ca93],edx
  424296:	xor    DWORD PTR [esi],ebp
  424298:	pop    ebp
  424299:	repnz dec eax
  42429b:	outs   dx,BYTE PTR ds:[esi]
  42429c:	(bad)  
  42429e:	xlat   BYTE PTR ds:[ebx]
  42429f:	arpl   WORD PTR [edi],bx
  4242a1:	push   eax
  4242a2:	xchg   ecx,eax
  4242a3:	jmp    0x64040411
  4242a8:	test   BYTE PTR [ecx],dh
  4242aa:	sbb    al,0xbf
  4242ac:	pop    edi
  4242ad:	outs   dx,DWORD PTR ds:[esi]
  4242ae:	stos   DWORD PTR es:[edi],eax
  4242af:	fsub   st,st(7)
  4242b1:	mov    ebp,0x19850a12
  4242b6:	inc    esp
  4242b7:	sbb    ch,BYTE PTR [ecx-0x15]
  4242ba:	dec    ecx
  4242bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242bc:	(bad)  
  4242bd:	sbb    bl,BYTE PTR [eax+0x4031ac2b]
  4242c3:	add    eax,0x54bfc86f
  4242c8:	xchg   ecx,eax
  4242c9:	mov    al,ds:0x1a8c749a
  4242ce:	popf   
  4242cf:	adc    eax,0x5aa6941a
  4242d4:	sti    
  4242d5:	repnz sbb ch,al
  4242d8:	ret    0xa286
  4242db:	jmp    0x41c4:0x11e346cd
  4242e2:	mov    ecx,0x6d87d6e2
  4242e7:	mov    eax,ds:0x7b8766a4
  4242ec:	cdq    
  4242ed:	inc    esi
  4242ee:	stos   DWORD PTR es:[edi],eax
  4242ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242f0:	shl    BYTE PTR [edi],cl
  4242f2:	test   DWORD PTR [esi],esi
  4242f4:	cmc    
  4242f5:	mov    ebx,0xa260e885
  4242fa:	add    BYTE PTR [eax],al
  4242fc:	hlt    
  4242fd:	cmp    DWORD PTR [edx-0x2002081],edx
  424303:	mov    ebx,0xc0721507
  424308:	out    0xde,al
  42430a:	icebp  
  42430b:	xor    al,0xd0
  42430d:	mov    esp,0x2860001
  424312:	add    BYTE PTR [eax],al
  424314:	add    BYTE PTR [esi+0x5],dh
  424317:	ffree  st(2)
  424319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42431a:	dec    ebp
  42431b:	inc    ebx
  42431c:	mov    BYTE PTR [edi-0x34],0x9c
  424320:	gs xchg edx,eax
  424322:	adc    esp,DWORD PTR [edx-0x52]
  424325:	mov    eax,0x2b3941c2
  42432a:	sub    dl,ah
  42432c:	or     eax,0x3ef51197
  424331:	add    bl,BYTE PTR [eax+0x27b582b]
  424337:	loope  0x4242dd
  424339:	stos   BYTE PTR es:[edi],al
  42433a:	aad    0xf8
  42433c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42433d:	adc    dh,BYTE PTR [ecx+0x62]
  424340:	repnz xor ebx,ecx
  424343:	or     BYTE PTR [eax+0x43],bl
  424346:	jl     0x424349
  424348:	in     al,0x72
  42434a:	push   ebp
  42434b:	adc    BYTE PTR [esi-0x534ac0fa],bh
  424351:	mov    al,0xb2
  424353:	pop    esi
  424354:	xchg   DWORD PTR [esi+0x10],esp
  424357:	icebp  
  424358:	mov    cs,WORD PTR [ecx]
  42435a:	mov    esi,0xf2170392
  42435f:	sub    BYTE PTR [edi-0x10],0xba
  424363:	sbb    ecx,DWORD PTR [ebx]
  424365:	xchg   DWORD PTR [ecx-0x7d9a4504],edi
  42436b:	icebp  
  42436c:	iret   
  42436d:	and    BYTE PTR [eax+0x30df67d9],al
  424373:	in     eax,dx
  424374:	jge    0x42438c
  424376:	adc    eax,0xfd8b23b8
  42437b:	outs   dx,BYTE PTR ds:[esi]
  42437c:	or     DWORD PTR [ecx+0x2067664a],esi
  424382:	mov    dl,0x14
  424384:	dec    eax
  424385:	jb     0x4243cb
  424387:	mov    edx,0xb71947a2
  42438c:	adc    bl,BYTE PTR [ebp-0x52]
  42438f:	(bad)  
  424391:	popa   
  424392:	inc    esi
  424393:	stos   BYTE PTR es:[edi],al
  424394:	retf   
  424395:	or     eax,0xac97281b
  42439a:	xchg   edx,eax
  42439b:	dec    esi
  42439c:	push   edi
  42439d:	sti    
  42439e:	dec    esi
  42439f:	ror    ebx,0xda
  4243a2:	cwde   
  4243a3:	retf   
  4243a4:	mov    ah,0x77
  4243a6:	xchg   edi,eax
  4243a7:	addr16 jnp 0x424340
  4243aa:	and    eax,0x1ab89e1d
  4243af:	stos   DWORD PTR es:[edi],eax
  4243b0:	ja     0x424394
  4243b2:	cdq    
  4243b3:	mov    ds,eax
  4243b5:	aad    0x26
  4243b7:	mov    esi,0xa8932b8f
  4243bc:	test   al,0x62
  4243be:	jb     0x4243d5
  4243c0:	mov    ebx,0x1d500459
  4243c5:	dec    ecx
  4243c6:	mov    ch,0x7d
  4243c8:	jo     0x42434c
  4243ca:	mov    ah,0x8
  4243cc:	push   0xffffff99
  4243ce:	mov    ecx,0x9a8e77c4
  4243d3:	jb     0x4243f0
  4243d5:	mov    ah,BYTE PTR ds:0x6c5274ac
  4243db:	arpl   di,bp
  4243dd:	retf   0x59ee
  4243e0:	cmc    
  4243e1:	pushf  
  4243e2:	in     eax,0x4
  4243e4:	push   es
  4243e5:	sub    al,BYTE PTR [eax+0x50980e0e]
  4243eb:	fld    QWORD PTR [edi+0x7885418b]
  4243f1:	out    0x72,al
  4243f3:	es jg  0x4243ce
  4243f6:	mov    ebp,0x4c10498
  4243fb:	and    dh,BYTE PTR [edx]
  4243fd:	je     0x424420
  4243ff:	repz sbb bl,0x63
  424403:	out    0x1,eax
  424405:	fwait
  424406:	inc    eax
  424407:	mov    bh,0x47
  424409:	inc    edi
  42440a:	js     0x424488
  42440c:	test   eax,0xd04a20a8
  424411:	mov    dl,0xc7
  424413:	adc    al,0x2d
  424415:	stos   BYTE PTR es:[edi],al
  424416:	add    al,0x56
  424418:	inc    eax
  424419:	adc    al,0x26
  42441b:	js     0x42445a
  42441d:	out    dx,eax
  42441e:	sub    BYTE PTR [edi+0x6ef5c35c],ah
  424424:	sub    al,bh
  424426:	leave  
  424427:	mov    esp,0x8ed6d53b
  42442c:	scas   eax,DWORD PTR es:[edi]
  42442d:	fincstp 
  42442f:	addr16 popfw 
  424432:	sub    BYTE PTR [ebx],ah
  424434:	lods   eax,DWORD PTR ds:[esi]
  424435:	aaa    
  424436:	sub    eax,0xc16e7f97
  42443b:	mov    ebp,0xf769d412
  424440:	ror    ch,1
  424442:	xor    BYTE PTR [edx],bh
  424444:	shl    BYTE PTR [eax],1
  424446:	in     eax,dx
  424447:	sti    
  424448:	and    eax,0x8549813e
  42444d:	xlat   BYTE PTR ds:[ebx]
  42444e:	push   esp
  42444f:	aaa    
  424450:	pop    ecx
  424451:	lds    ecx,FWORD PTR [esi-0x478971e6]
  424457:	lods   eax,DWORD PTR ds:[esi]
  424458:	jo     0x4244b2
  42445a:	or     DWORD PTR [ebx+0x15af12ee],ecx
  424460:	aas    
  424461:	lea    edi,[edx-0x20]
  424464:	call   0x887c:0xf7d7014b
  42446b:	sahf   
  42446c:	aad    0x9b
  42446e:	mov    dh,0x68
  424470:	icebp  
  424471:	and    eax,esi
  424473:	adc    cl,BYTE PTR [edx-0x46]
  424476:	test   al,0x74
  424478:	mov    ebp,0x2e9e359c
  42447d:	rcl    DWORD PTR [esi+0x270c7139],0xa0
  424484:	fild   WORD PTR [ebx+esi*2+0x4676d854]
  42448b:	sub    edx,DWORD PTR [ebx]
  42448d:	jmp    0xec746bac
  424492:	or     eax,DWORD PTR [ebp+0x7d]
  424495:	lods   al,BYTE PTR ds:[esi]
  424496:	jae    0x424467
  424498:	inc    eax
  424499:	mov    bl,cl
  42449b:	dec    edx
  42449c:	std    
  42449d:	(bad)  
  42449e:	adc    al,0xc3
  4244a0:	xor    al,0xb3
  4244a2:	pop    ebp
  4244a3:	aas    
  4244a4:	and    esi,DWORD PTR [ebx-0x4cfd8e13]
  4244aa:	std    
  4244ab:	jp     0x4244e8
  4244ad:	je     0x4244f7
  4244af:	retf   
  4244b0:	jl     0x4244ed
  4244b2:	out    0x8a,al
  4244b4:	cmp    BYTE PTR [ebp-0x76fde726],bh
  4244ba:	scas   al,BYTE PTR es:[edi]
  4244bb:	lds    esi,FWORD PTR [eax+0x2c]
  4244be:	xor    eax,0xbe41b6d2
  4244c3:	jmp    ebx
  4244c5:	dec    edx
  4244c6:	outs   dx,BYTE PTR ds:[esi]
  4244c7:	xchg   edx,eax
  4244c8:	cmp    esi,esi
  4244ca:	mov    edi,es
  4244cc:	sbb    edx,DWORD PTR [ecx-0x19]
  4244cf:	push   ebx
  4244d0:	in     eax,dx
  4244d1:	jbe    0x424484
  4244d3:	imul   ecx,ecx,0xa9483bab
  4244d9:	test   al,0xd7
  4244db:	sti    
  4244dc:	cmp    DWORD PTR [esi-0x70a990dc],edi
  4244e2:	mov    bh,0x6b
  4244e4:	out    0xa2,al
  4244e6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4244e8:	jge    0x4244cf
  4244ea:	loop   0x4244fd
  4244ec:	fldenv [ebx+0x6]
  4244ef:	test   BYTE PTR [edi+0x58],cl
  4244f2:	pop    esi
  4244f3:	aam    0x85
  4244f5:	jbe    0x4244c1
  4244f7:	sbb    dh,BYTE PTR [ebp-0x4]
  4244fa:	cli    
  4244fb:	mov    ch,0x1e
  4244fd:	(bad)  
  4244fe:	pop    eax
  4244ff:	jmp    0x424575
  424501:	test   edi,eax
  424503:	xor    eax,0x324e5aab
  424508:	xchg   BYTE PTR [ebp-0x22],ch
  42450b:	push   ecx
  42450c:	add    al,0x52
  42450e:	(bad)  
  42450f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424510:	sbb    eax,0x47308f10
  424515:	mov    BYTE PTR [eax+0xeaf0c4d],al
  42451b:	push   0x30
  42451d:	pop    edi
  42451e:	(bad)  
  42451f:	cmp    al,0x9f
  424521:	test   DWORD PTR [eax+0x18beb3f1],edx
  424527:	shl    bh,cl
  424529:	not    BYTE PTR [eax+edi*4-0x22b94071]
  424530:	jns    0x42458c
  424532:	sahf   
  424533:	shl    BYTE PTR [edx],cl
  424535:	leave  
  424536:	retf   
  424537:	call   0xb719:0xf755ec0
  42453e:	leave  
  42453f:	fs and al,0x26
  424542:	mov    ch,0xde
  424544:	add    DWORD PTR [ecx+0x42],0x8bf81cf0
  42454b:	xchg   edi,eax
  42454c:	sub    ebx,DWORD PTR [eax-0x30b85476]
  424552:	icebp  
  424553:	pop    esp
  424554:	nop
  424555:	(bad)  
  424557:	inc    ecx
  424558:	test   DWORD PTR gs:[esi-0x1655dcbc],ebp
  42455f:	ret    0x4b91
  424562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424563:	pop    esp
  424564:	mov    eax,0xc1f3b594
  424569:	inc    ebx
  42456a:	loope  0x424586
  42456c:	push   edx
  42456d:	jge    0x4245e6
  42456f:	mov    esp,0xa6dc65ff
  424574:	cmp    ch,BYTE PTR [ebx+0x32]
  424577:	xor    edi,DWORD PTR [eax+0x31a318f2]
  42457d:	test   DWORD PTR [ebx],edx
  42457f:	xor    ah,al
  424581:	pop    es
  424582:	aam    0xd4
  424584:	ret    
  424585:	inc    ecx
  424586:	or     DWORD PTR [edi],ebp
  424588:	jne    0x4245dd
  42458a:	or     ebp,DWORD PTR [ebx]
  42458c:	out    0x6,eax
  42458e:	ins    BYTE PTR es:[edi],dx
  42458f:	retf   
  424590:	retf   0xcafc
  424593:	loopne 0x424588
  424595:	retf   
  424596:	xchg   edx,eax
  424597:	dec    ebx
  424598:	adc    al,0xb0
  42459a:	add    BYTE PTR [eax],al
  42459c:	push   esp
  42459d:	ds and al,0x19
  4245a0:	outs   dx,BYTE PTR ds:[esi]
  4245a1:	sbb    edi,DWORD PTR [ebp+0x7f]
  4245a4:	(bad)  
  4245a5:	mov    eax,0x3b9ccfc0
  4245aa:	mov    bl,0xb0
  4245ac:	push   esi
  4245ad:	mov    edi,0x2860001
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	jbe    0x424550
  4245b6:	xchg   ebp,eax
  4245b7:	sub    DWORD PTR [ecx-0x58],ebx
  4245ba:	arpl   cx,ax
  4245bc:	xchg   esi,eax
  4245bd:	jne    0x42459b
  4245bf:	rcr    bl,1
  4245c1:	jp     0x4245fb
  4245c3:	les    edi,FWORD PTR [eax+0x60]
  4245c6:	int    0xdf
  4245c8:	jne    0x4245f4
  4245ca:	lds    edx,FWORD PTR [edx+0xc4821f2]
  4245d0:	push   ss
  4245d1:	xor    edx,DWORD PTR [ebx+0x692f9200]
  4245d7:	mov    bh,0x57
  4245d9:	call   0xb0eb2bd
  4245de:	dec    ebp
  4245df:	bound  ebp,QWORD PTR [ebp+esi*8-0x202eb068]
  4245e6:	inc    ebx
  4245e7:	dec    ebx
  4245e8:	push   ss
  4245e9:	popa   
  4245ea:	inc    edi
  4245eb:	ficomp WORD PTR [esi]
  4245ed:	icebp  
  4245ee:	sub    ebx,esi
  4245f0:	mov    dl,0x5f
  4245f2:	shr    DWORD PTR ds:[edi-0x66],cl
  4245f6:	iret   
  4245f7:	xlat   BYTE PTR ds:[ebx]
  4245f8:	addr16 push edx
  4245fa:	imul   ebp,DWORD PTR [edx],0x4d
  4245fd:	(bad)  
  4245fe:	jmp    0xfe3c:0x54479eca
  424605:	stos   BYTE PTR es:[edi],al
  424606:	test   DWORD PTR [edi-0x45],0xe08c5fd3
  42460d:	mov    bl,0xfe
  42460f:	cmp    DWORD PTR [ebx+0x7d155d9e],ecx
  424615:	jp     0x42464e
  424617:	shr    BYTE PTR [eax+eax*4],cl
  42461a:	or     al,BYTE PTR [edi+0x9]
  42461d:	or     al,0x83
  42461f:	out    0x58,eax
  424621:	ret    0xb814
  424624:	push   esp
  424625:	jmp    0x4246a4
  424627:	shl    DWORD PTR [ebp-0x64a0fd4e],cl
  42462d:	retf   
  42462e:	shr    eax,0xf7
  424631:	push   esi
  424632:	jp     0x424651
  424634:	and    al,0xe8
  424636:	push   cs
  424637:	jmp    0x59c3:0xf1395172
  42463e:	xchg   esi,eax
  42463f:	inc    ebx
  424640:	mov    dh,0xb
  424642:	imul   esp,esp,0xfc4749d9
  424648:	xchg   ebp,eax
  424649:	hlt    
  42464a:	punpckhwd mm6,QWORD PTR [edx-0x50]
  42464e:	push   0xcfcc2a7d
  424653:	xor    esp,DWORD PTR [edi+0x5689da9c]
  424659:	aaa    
  42465a:	or     bh,BYTE PTR [ecx-0x23]
  42465d:	jb     0x4245e3
  42465f:	into   
  424660:	ins    DWORD PTR es:[edi],dx
  424661:	push   edx
  424662:	xor    BYTE PTR [eax+eax*1],bh
  424665:	pop    esi
  424666:	mov    ch,0xc4
  424668:	jecxz  0x42465a
  42466a:	push   es
  42466b:	pushf  
  42466c:	and    DWORD PTR [esi-0x23bf7fb9],esp
  424672:	lods   eax,DWORD PTR ds:[esi]
  424673:	out    0x76,al
  424675:	inc    eax
  424676:	icebp  
  424677:	mov    cl,0xc8
  424679:	mov    dh,0x8b
  42467b:	fs inc ecx
  42467d:	jmp    0xdec1:0x5d17adf6
  424684:	xchg   esi,eax
  424685:	sbb    eax,0xaf4cf825
  42468a:	push   eax
  42468b:	xchg   DWORD PTR [esi+0x2d],edx
  42468e:	dec    esp
  42468f:	mov    ds:0x341b8cc5,eax
  424694:	inc    ecx
  424695:	inc    ecx
  424696:	out    dx,eax
  424697:	setnp  dl
  42469a:	cs loope 0x42469c
  42469d:	sbb    DWORD PTR [ebx-0x475c4930],ebp
  4246a3:	and    esp,DWORD PTR [edi-0x7a1a22ce]
  4246a9:	test   al,0x6b
  4246ab:	(bad)  
  4246ac:	call   DWORD PTR [ebp+0x537baf2f]
  4246b2:	mov    dh,0xbd
  4246b4:	adc    BYTE PTR [eax+ebp*2],ah
  4246b7:	jl     0x424727
  4246b9:	loope  0x424735
  4246bb:	xor    eax,0xf5ccc12d
  4246c0:	pop    esp
  4246c1:	neg    BYTE PTR [eax+0x32c2e10b]
  4246c7:	jae    0x424693
  4246c9:	pop    edi
  4246ca:	jb     0x4246e6
  4246cc:	in     eax,0xb4
  4246ce:	or     bl,BYTE PTR [esi-0x1bfde3a3]
  4246d4:	popa   
  4246d5:	test   eax,0x468b5748
  4246da:	jnp    0x424681
  4246dc:	int3   
  4246dd:	push   esi
  4246de:	mov    al,fs:0x490dc217
  4246e4:	pop    edi
  4246e5:	aaa    
  4246e6:	xor    ebp,DWORD PTR [edx+0x6de457b4]
  4246ec:	loopne 0x42468d
  4246ee:	mov    edi,0xf2b6bf3
  4246f3:	in     eax,0x83
  4246f5:	gs xchg ebp,eax
  4246f7:	ds push ebp
  4246f9:	mov    eax,ds:0xd2a00895
  4246fe:	test   DWORD PTR [ebx+0x24],ebx
  424701:	cs in  al,0x28
  424704:	inc    ebp
  424705:	xor    eax,0xd1978db5
  42470a:	int3   
  42470b:	in     eax,0x1a
  42470d:	jp     0x42470a
  42470f:	nop
  424710:	es adc ecx,esp
  424713:	jno    0x424765
  424715:	imul   ebx,DWORD PTR [esi],0x214b51c4
  42471b:	mov    ds:0x265f6582,al
  424720:	jno    0x424700
  424722:	push   edx
  424723:	jp     0x424727
  424725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424726:	dec    ebp
  424727:	sbb    ecx,DWORD PTR [ebx-0x3c]
  42472a:	out    0x32,eax
  42472c:	xor    bh,0xf0
  42472f:	jbe    0x424713
  424731:	jmp    0x696110a3
  424736:	add    al,0x19
  424738:	leave  
  424739:	das    
  42473a:	adc    al,0xb6
  42473c:	je     0x4247bb
  42473e:	dec    ebx
  42473f:	in     eax,0xdd
  424741:	jle    0x4246c5
  424743:	out    0x96,eax
  424745:	es push edx
  424747:	(bad)  
  424748:	mov    esi,0xa786febb
  42474d:	jb     0x4246e3
  42474f:	imul   ecx,ecx,0x40c3c3ba
  424755:	mov    dh,0x4f
  424757:	rol    BYTE PTR [edx+0x40aa989c],1
  42475d:	fstp   DWORD PTR [eax]
  42475f:	cmp    cl,BYTE PTR [edi]
  424761:	jp     0x42478c
  424763:	sub    DWORD PTR [esi-0x10],0x6217516b
  42476a:	sbb    eax,0x40c5c683
  42476f:	push   esi
  424770:	and    edx,DWORD PTR [eax-0x30]
  424773:	ds mov ch,0xe6
  424776:	xchg   edi,eax
  424777:	dec    eax
  424779:	jl     0x4247bb
  42477b:	adc    edi,DWORD PTR [ecx+0x15]
  42477e:	pop    edi
  42477f:	xchg   esi,eax
  424780:	stos   BYTE PTR es:[edi],al
  424781:	jbe    0x4247aa
  424783:	inc    esp
  424784:	in     al,0x1d
  424786:	pushf  
  424787:	or     eax,0xd0829a8
  42478c:	sbb    dl,BYTE PTR [eax]
  42478e:	cmp    al,al
  424790:	cmp    BYTE PTR [ecx+ebp*2],dh
  424793:	iret   
  424794:	icebp  
  424795:	sbb    edi,ecx
  424797:	arpl   WORD PTR ds:0x60092c30,di
  42479d:	pop    es
  42479e:	test   DWORD PTR [ebp-0x45],eax
  4247a1:	add    cl,cl
  4247a3:	out    0x4f,al
  4247a5:	dec    DWORD PTR [esi-0x1c1b639f]
  4247ab:	in     al,0x3c
  4247ad:	add    eax,ecx
  4247af:	arpl   WORD PTR [ebx],bp
  4247b1:	push   ebx
  4247b2:	jno    0x424813
  4247b4:	jle    0x424788
  4247b6:	jmp    0x8498a266
  4247bb:	xor    cl,0xa8
  4247be:	xor    BYTE PTR es:[edi-0x1f],dh
  4247c2:	pop    edx
  4247c3:	xor    ebp,DWORD PTR [edx-0x54]
  4247c6:	das    
  4247c7:	lds    eax,FWORD PTR [edx-0x72695124]
  4247cd:	sub    bh,bh
  4247cf:	aad    0x3d
  4247d1:	mov    ds:0xb2e8ae43,al
  4247d6:	or     eax,0xc3c205d3
  4247db:	or     DWORD PTR [ebp-0x3ec63dcf],ebp
  4247e1:	setns  BYTE PTR [esi-0x2c21b8c1]
  4247e8:	es in  al,0xf3
  4247eb:	fdivr  DWORD PTR [esp+eax*1+0x0]
  4247ef:	push   ss
  4247f0:	pop    ecx
  4247f1:	dec    ebp
  4247f2:	mov    dh,0xfd
  4247f4:	inc    eax
  4247f5:	sub    edi,eax
  4247f7:	xchg   ebp,eax
  4247f8:	push   cs
  4247f9:	inc    ebx
  4247fa:	shl    al,cl
  4247fc:	les    ecx,FWORD PTR [edx-0xaf6e8dd]
  424802:	test   al,0xb4
  424804:	lods   al,BYTE PTR ds:[esi]
  424805:	xor    ah,ch
  424807:	aam    0xd9
  424809:	mov    dl,BYTE PTR [ebp+0x3a939eb0]
  42480f:	pop    ebp
  424810:	xor    bh,ah
  424812:	xchg   ecx,eax
  424813:	ret    0xdce4
  424816:	ins    BYTE PTR es:[edi],dx
  424817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424818:	std    
  424819:	bound  ebp,QWORD PTR [ecx+0x2a2705a9]
  42481f:	xchg   ecx,eax
  424820:	mov    eax,ds:0x4f1b48fa
  424825:	jbe    0x424816
  424827:	cmp    ah,BYTE PTR [esi+ebp*8]
  42482a:	push   edx
  42482b:	push   0x5
  42482d:	and    eax,0x8543a129
  424832:	mov    eax,ds:0xb5c96a0f
  424837:	dec    esp
  424838:	(bad)  
  424839:	jb     0x42483b
  42483b:	add    BYTE PTR [esi+0x74ef74ea],bh
  424841:	(bad)  
  424842:	mov    edi,0x98b349fb
  424847:	xor    dl,BYTE PTR [eax]
  424849:	dec    edi
  42484a:	leave  
  42484b:	jg     0x424829
  42484d:	rol    DWORD PTR [ecx],0x0
  424850:	xchg   BYTE PTR [edx],al
  424852:	add    BYTE PTR [eax],al
  424854:	pop    ebx
  424855:	bound  eax,QWORD PTR [esi]
  424857:	cwde   
  424858:	jl     0x424809
  42485a:	lea    ebp,[edx+ecx*2+0x36]
  42485e:	out    dx,al
  42485f:	add    al,0x6a
  424861:	fimul  DWORD PTR [ebx-0x6c1d9a2]
  424867:	jl     0x4248a7
  424869:	push   edi
  42486a:	jle    0x4248a4
  42486c:	adc    eax,0x6a905a87
  424871:	adc    BYTE PTR [edi+0x55],bl
  424874:	arpl   WORD PTR [esi],ax
  424876:	jno    0x4248e8
  424878:	loop   0x42483e
  42487a:	pop    esp
  42487b:	inc    esp
  42487c:	stc    
  42487d:	ins    BYTE PTR es:[edi],dx
  42487e:	shl    dh,1
  424880:	popa   
  424881:	mov    edi,0x59c36e8b
  424886:	outs   dx,BYTE PTR cs:[esi]
  424888:	outs   dx,BYTE PTR ds:[esi]
  424889:	inc    esi
  42488a:	stc    
  42488b:	inc    esp
  42488c:	and    eax,0x32c04395
  424891:	jecxz  0x42482a
  424893:	mov    ecx,0xda534cde
  424898:	push   eax
  424899:	sbb    al,0x8b
  42489b:	gs mov ecx,0xf72654bb
  4248a1:	xlat   BYTE PTR ds:[ebx]
  4248a2:	xchg   ecx,eax
  4248a3:	mov    edx,DWORD PTR [edi]
  4248a5:	popf   
  4248a6:	aam    0x70
  4248a8:	imul   edx,DWORD PTR [ebx-0x78],0xffffffdb
  4248ac:	(bad)
  4248af:	ds inc edi
  4248b1:	pop    ss
  4248b2:	push   edi
  4248b3:	push   esi
  4248b4:	push   ebp
  4248b5:	adc    dl,bh
  4248b7:	cmp    al,dl
  4248b9:	in     eax,0x9e
  4248bb:	(bad)  
  4248bc:	sub    DWORD PTR [edx+0x42e307d2],ecx
  4248c2:	fcom   QWORD PTR [ecx]
  4248c4:	ret    0x5faf
  4248c7:	call   0xef8d:0x4c3e0bcf
  4248ce:	push   edi
  4248cf:	mov    bl,0x87
  4248d1:	fwait
  4248d2:	xchg   ebp,eax
  4248d3:	mov    dh,0xd5
  4248d5:	out    dx,al
  4248d6:	sbb    BYTE PTR [ebx],ah
  4248d8:	sbb    esi,DWORD PTR [ecx-0x7e]
  4248db:	jp     0x42491c
  4248dd:	xor    dl,ah
  4248df:	(bad)  
  4248e1:	in     eax,0x59
  4248e3:	jo     0x4248c7
  4248e5:	iret   
  4248e6:	lods   eax,DWORD PTR ds:[esi]
  4248e7:	pop    ss
  4248e8:	xchg   edi,eax
  4248e9:	cmp    ch,dh
  4248eb:	add    dl,ah
  4248ed:	mov    dl,0x59
  4248ef:	lods   al,BYTE PTR ds:[esi]
  4248f0:	hlt    
  4248f1:	mov    dh,0x2a
  4248f3:	xor    BYTE PTR [edi-0x6b],ah
  4248f6:	mov    al,ds:0xace289b7
  4248fb:	jae    0x42487f
  4248fd:	cs js  0x424882
  424900:	xor    esi,ecx
  424902:	ds cwde 
  424904:	ja     0x4248ad
  424906:	jnp    0x424945
  424908:	cmp    esi,edx
  42490a:	lods   eax,DWORD PTR ds:[esi]
  42490b:	repnz inc edx
  42490d:	outs   dx,BYTE PTR ds:[esi]
  42490e:	ficom  DWORD PTR [ecx+esi*8]
  424911:	pop    ebp
  424912:	inc    edx
  424913:	mov    ebp,0x427a3105
  424918:	dec    edx
  424919:	out    0x13,al
  42491b:	lds    esi,FWORD PTR [ebx+0x27]
  42491e:	add    DWORD PTR [eax-0x172df8b0],edi
  424924:	push   edx
  424925:	ret    
  424926:	inc    edi
  424927:	arpl   WORD PTR [ebx+0x16],cx
  42492a:	clc    
  42492b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42492c:	nop
  42492d:	fadd   DWORD PTR [esi]
  42492f:	mov    bh,0xec
  424931:	popf   
  424932:	dec    esi
  424933:	in     al,0xa2
  424935:	rcr    BYTE PTR [ebp+0x38fa0091],1
  42493b:	fnstcw WORD PTR [ebx]
  42493d:	sar    DWORD PTR [edi+0x2d86066e],cl
  424943:	adc    DWORD PTR [ebx+eax*1],0xf90cfaed
  42494a:	loop   0x42493b
  42494c:	aam    0xe8
  42494e:	mov    edi,DWORD PTR [ecx+0x66]
  424951:	adc    DWORD PTR [eax-0x6bd8fc4a],0xffffffd9
  424958:	and    eax,0x14c4ff47
  42495d:	jecxz  0x42494f
  42495f:	hlt    
  424960:	mov    bh,0xcc
  424962:	lock inc eax
  424964:	mov    edi,0x7cbc4682
  424969:	(bad)  
  42496a:	mov    DWORD PTR [ebx+0x4f],eax
  42496d:	lods   eax,DWORD PTR ds:[esi]
  42496e:	sub    ecx,DWORD PTR [edx+0x2182636e]
  424974:	pop    edi
  424975:	sub    BYTE PTR [ebx-0x7664df6],0xc4
  42497c:	cs add eax,0x15efc971
  424982:	data16 cmp BYTE PTR [esi+0x3a],ah
  424986:	dec    ebx
  424987:	imul   BYTE PTR [ecx-0x75cab404]
  42498d:	sub    esi,ecx
  42498f:	dec    esi
  424990:	sbb    bh,ah
  424992:	xor    eax,0xa0749797
  424997:	ror    BYTE PTR [edx-0x13670956],cl
  42499d:	outs   dx,DWORD PTR ds:[esi]
  42499e:	test   BYTE PTR [ebx],bl
  4249a0:	inc    eax
  4249a1:	into   
  4249a2:	fadd   QWORD PTR [ebp+edi*8+0x5ff70b7a]
  4249a9:	inc    eax
  4249aa:	and    al,0x9f
  4249ac:	repz fsub QWORD PTR [edi-0x1f]
  4249b0:	out    0xea,al
  4249b2:	mov    bl,0xdb
  4249b4:	jmp    0x4249fd
  4249b6:	(bad)  
  4249b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249b8:	iret   
  4249b9:	mov    esi,0xed047a31
  4249be:	jmp    0x12a7cb1
  4249c3:	mov    ebp,0x1827b140
  4249c8:	test   BYTE PTR [ebx-0x58c29c4],0xd2
  4249cf:	cld    
  4249d0:	sar    BYTE PTR [ebx+0x70f3e5e8],cl
  4249d6:	inc    edi
  4249d7:	shl    dl,1
  4249d9:	adc    BYTE PTR [edx],cl
  4249db:	mov    eax,ds:0x511fd04f
  4249e0:	or     ebp,DWORD PTR [edx]
  4249e2:	xor    al,0xee
  4249e4:	sbb    eax,0xc4f78411
  4249e9:	sbb    al,0xb4
  4249eb:	dec    esp
  4249ec:	sbb    eax,0x57d713f0
  4249f1:	mov    eax,ds:0xfb729009
  4249f6:	xchg   BYTE PTR [ebx],bh
  4249f8:	sub    edi,DWORD PTR [edx]
  4249fa:	(bad)  
  4249fb:	cmc    
  4249fc:	mov    ds:0x894cc815,eax
  424a01:	test   bl,cl
  424a03:	data16 and BYTE PTR [eax+0x665a7832],bh
  424a0a:	loop   0x4249b9
  424a0c:	mov    al,ds:0x68c7b09d
  424a11:	repz scas al,BYTE PTR es:[edi]
  424a13:	inc    edi
  424a14:	xchg   ebx,eax
  424a15:	mov    cl,0x7c
  424a17:	fwait
  424a18:	sub    al,cl
  424a1a:	dec    edi
  424a1b:	pop    esi
  424a1c:	sub    eax,0x31063395
  424a21:	jo     0x424a44
  424a23:	sbb    al,0xf1
  424a25:	and    BYTE PTR [edx+eax*8],cl
  424a28:	mov    BYTE PTR [esi],ah
  424a2a:	pusha  
  424a2b:	push   ebx
  424a2c:	das    
  424a2d:	lods   al,BYTE PTR ds:[esi]
  424a2e:	loopne 0x424a98
  424a30:	lahf   
  424a31:	jge    0x424ab2
  424a33:	jge    0x424a00
  424a35:	test   al,al
  424a37:	xchg   ecx,eax
  424a38:	retf   0x36ce
  424a3b:	push   ebx
  424a3c:	ja     0x424ab3
  424a3e:	or     eax,0x2ad1766c
  424a43:	repz call 0xbf400030
  424a49:	or     cl,0x83
  424a4c:	mov    bl,0x10
  424a4e:	das    
  424a4f:	push   ss
  424a50:	nop
  424a51:	fisttp QWORD PTR [eax]
  424a53:	sbb    BYTE PTR ds:0xfa23be81,dl
  424a59:	rol    DWORD PTR [edi],1
  424a5b:	inc    ecx
  424a5c:	mov    dl,0x97
  424a5e:	jp     0x424a2c
  424a60:	jl     0x424a2d
  424a62:	fwait
  424a63:	push   ecx
  424a64:	fs and edi,ebp
  424a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a68:	jp     0x424ab7
  424a6a:	lock jnp 0x424aad
  424a6d:	enter  0x5452,0xd8
  424a71:	pop    es
  424a72:	push   es
  424a73:	xchg   ebp,eax
  424a74:	inc    ebp
  424a75:	test   al,0x90
  424a77:	fs retf 0x7855
  424a7b:	cld    
  424a7c:	fcmovnu st,st(1)
  424a7e:	adc    esp,DWORD PTR [ecx+0x1]
  424a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a82:	mov    bh,0x24
  424a84:	jmp    0x1007:0xcbf59ef9
  424a8b:	nop
  424a8c:	cmp    BYTE PTR [edx+0x6d],ah
  424a8f:	fnstenv [ecx-0x71]
  424a92:	mov    edi,0xcc659411
  424a97:	test   al,0x32
  424a99:	sbb    DWORD PTR [ecx-0x1641b73],edx
  424a9f:	dec    ebx
  424aa0:	jnp    0x424a51
  424aa2:	int3   
  424aa3:	jne    0x424b0b
  424aa5:	lds    ebx,FWORD PTR [eax+0x62]
  424aa8:	retf   
  424aa9:	pop    ebp
  424aaa:	es xchg edi,eax
  424aac:	in     eax,0x34
  424aae:	mov    edi,0x537b7bb2
  424ab3:	sti    
  424ab4:	lock pushf 
  424ab6:	popa   
  424ab7:	pop    es
  424ab8:	push   ebx
  424ab9:	push   cs
  424aba:	xor    BYTE PTR [esp+ebp*2],ah
  424abd:	cmp    BYTE PTR [esp+0x41],ah
  424ac1:	jle    0x424aaa
  424ac3:	fdivr  QWORD PTR [ebp-0x20]
  424ac6:	jns    0x424b2d
  424ac8:	dec    edx
  424ac9:	mov    bl,0x2c
  424acb:	mov    es,esp
  424acd:	std    
  424ace:	push   ss
  424acf:	out    dx,eax
  424ad0:	mov    WORD PTR [esi-0x7d],?
  424ad3:	aad    0x27
  424ad5:	fdivr  st(5),st
  424ad7:	pop    eax
  424ad8:	ds mov ah,0x0
  424adb:	add    BYTE PTR [ebx+0x45],cl
  424ade:	mov    edx,0x5fffbeee
  424ae3:	in     eax,0x54
  424ae5:	stos   BYTE PTR es:[edi],al
  424ae6:	clc    
  424ae7:	adc    ebx,esi
  424ae9:	leave  
  424aea:	popa   
  424aeb:	dec    edi
  424aec:	(bad)  
  424aed:	les    eax,FWORD PTR [ecx]
  424aef:	add    BYTE PTR [esi+0x2],al
  424af5:	aad    0xe
  424af7:	sub    bh,bl
  424af9:	mov    cl,0xbb
  424afb:	gs inc ecx
  424afd:	jl     0x424ac3
  424aff:	mov    ebx,0x2097d2ce
  424b04:	stos   BYTE PTR es:[edi],al
  424b05:	xor    bh,BYTE PTR [edx]
  424b07:	cs test ah,dl
  424b0a:	(bad)  
  424b0b:	cmc    
  424b0c:	les    ebp,FWORD PTR [esi+0x71]
  424b0f:	mov    eax,0x798705af
  424b14:	or     esi,0xfef7edad
  424b1a:	inc    esi
  424b1b:	daa    
  424b1c:	test   eax,0x47877651
  424b21:	lahf   
  424b22:	imul   edx,DWORD PTR [eax+0xd1cb964],0x15
  424b29:	xchg   DWORD PTR [ebp+0x2eec49d9],ebx
  424b2f:	and    BYTE PTR [esi+0x34],cl
  424b32:	sbb    BYTE PTR [ecx+0x16],dl
  424b35:	jmp    0x424b5a
  424b37:	int3   
  424b38:	push   es
  424b39:	mov    ecx,0xb0a56015
  424b3e:	retf   0x1037
  424b41:	clc    
  424b42:	rcr    DWORD PTR [esi],1
  424b44:	pushf  
  424b45:	mov    dl,0x77
  424b47:	sahf   
  424b48:	jmp    0x22bd:0x176d9cbb
  424b4f:	mov    cl,bh
  424b51:	ins    BYTE PTR es:[edi],dx
  424b52:	mov    ah,0x29
  424b54:	test   DWORD PTR [esp+eiz*2+0x7d],ecx
  424b58:	dec    edx
  424b59:	dec    eax
  424b5a:	xchg   esp,eax
  424b5b:	sbb    eax,0x654043b3
  424b60:	inc    esi
  424b61:	add    al,0x57
  424b63:	inc    edi
  424b64:	jg     0x424b66
  424b66:	call   0xc55f9013
  424b6b:	mov    ds:0xa7833d99,al
  424b70:	fcom   QWORD PTR [ebp+0x5d172ffe]
  424b76:	mov    ebx,0xd0040e35
  424b7b:	popf   
  424b7c:	sub    eax,0x99b38d3a
  424b81:	leave  
  424b82:	mov    BYTE PTR [ebx+0x3a],0xc0
  424b86:	push   cs
  424b87:	jg     0x424b5b
  424b89:	fadd   QWORD PTR [esi-0x7812a241]
  424b8f:	bound  ebp,QWORD PTR [edi+0x3b]
  424b92:	inc    ebp
  424b93:	clc    
  424b94:	pop    es
  424b95:	inc    ebx
  424b96:	rol    BYTE PTR [eax+edi*2-0x50],cl
  424b9a:	clc    
  424b9b:	das    
  424b9c:	push   edi
  424b9d:	stos   DWORD PTR es:[edi],eax
  424b9e:	sbb    cl,cl
  424ba0:	es inc ebp
  424ba2:	and    DWORD PTR [edx],ecx
  424ba4:	jmp    FWORD PTR [edx+0x32119d02]
  424baa:	rcr    DWORD PTR [ebx],0x26
  424bad:	or     DWORD PTR [ecx+0x5a],ebp
  424bb0:	sbb    al,0x92
  424bb2:	ffree  st(2)
  424bb4:	retf   0x9533
  424bb7:	test   al,0x67
  424bb9:	sahf   
  424bba:	push   es
  424bbb:	test   eax,0x4c8c70f2
  424bc0:	aad    0x2f
  424bc2:	sub    DWORD PTR [eax+0x3b6861f5],edi
  424bc8:	jmp    0x6a5cad00
  424bcd:	lds    esp,FWORD PTR [ebx]
  424bcf:	mov    ah,0x61
  424bd1:	das    
  424bd2:	icebp  
  424bd3:	jecxz  0x424b6d
  424bd5:	fsubr  QWORD PTR [ebp+eax*2+0x406c173c]
  424bdc:	inc    edi
  424bdd:	js     0x424c38
  424bdf:	lahf   
  424be0:	lods   al,BYTE PTR ds:[esi]
  424be1:	gs lahf 
  424be3:	mov    cs,WORD PTR [edi]
  424be5:	ret    0xe825
  424be8:	sub    BYTE PTR [ebx-0x34],cl
  424beb:	daa    
  424bec:	loopne 0x424b96
  424bee:	ins    DWORD PTR es:[edi],dx
  424bef:	mov    eax,0xc6515963
  424bf4:	xchg   esp,eax
  424bf5:	push   edx
  424bf6:	cli    
  424bf7:	retf   0xbe64
  424bfa:	ds stos DWORD PTR es:[edi],eax
  424bfc:	jnp    0x424be4
  424bfe:	test   BYTE PTR [esi+0x5847a13e],0x92
  424c05:	aad    0x34
  424c07:	pusha  
  424c08:	nop    ebx
  424c0b:	loope  0x424bec
  424c0d:	ja     0x424c06
  424c0f:	gs pop ecx
  424c11:	int    0xd8
  424c13:	mov    eax,0xeb7354c8
  424c18:	sub    al,BYTE PTR [edi+0x16]
  424c1b:	inc    esi
  424c1c:	bound  esp,QWORD PTR [edi]
  424c1e:	fisub  DWORD PTR [edi]
  424c20:	inc    ebx
  424c21:	out    0x32,eax
  424c23:	xchg   ebp,ebx
  424c25:	fnsave [edi+0x251fcfc6]
  424c2b:	sub    eax,0x7e5aaa7a
  424c30:	or     cx,WORD PTR [edx+ebx*4+0x74]
  424c35:	pop    esp
  424c36:	push   ecx
  424c37:	or     ah,bh
  424c39:	sahf   
  424c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c3b:	sub    ax,0xce3b
  424c3f:	lock xor DWORD PTR [bx+di],ebx
  424c43:	or     esp,DWORD PTR [ebp-0x19]
  424c46:	or     eax,0xfafc721c
  424c4b:	out    0x86,eax
  424c4d:	repz and eax,0x6c285fff
  424c53:	es jmp 0x424cc6
  424c56:	gs gs js 0x424c39
  424c5a:	cmp    DWORD PTR [ecx-0x4f0ba4de],edi
  424c60:	arpl   WORD PTR [ecx+0x5cb8a60c],di
  424c66:	sub    eax,0xf647a1b5
  424c6b:	cmp    eax,0x2a63dcfc
  424c70:	fcomp  QWORD PTR [edi-0x2c]
  424c73:	mov    bh,cl
  424c75:	sahf   
  424c76:	adc    BYTE PTR [ebx],bh
  424c78:	push   cs
  424c79:	adc    BYTE PTR [edx],cl
  424c7b:	pusha  
  424c7c:	rcpps  xmm0,XMMWORD PTR cs:[ebp+0x664fdd51]
  424c84:	int    0xe5
  424c86:	xor    ecx,ecx
  424c88:	das    
  424c89:	sbb    al,0xff
  424c8b:	aam    0x6d
  424c8d:	psubsb mm2,QWORD PTR [ecx]
  424c90:	pop    esi
  424c91:	cs mov al,0x18
  424c94:	push   0x1f3095ef
  424c99:	adc    DWORD PTR ds:0xc1a07506,ecx
  424c9f:	cmp    BYTE PTR [ebx-0x62c4f251],bh
  424ca5:	mov    bh,0x16
  424ca7:	int    0xf3
  424ca9:	mov    bl,0x6a
  424cab:	test   ax,0xa684
  424caf:	inc    esp
  424cb0:	aad    0xb2
  424cb2:	or     al,0x9f
  424cb4:	push   ds
  424cb5:	mov    ebx,0x37edd1bf
  424cba:	addr16 ja 0x424c6a
  424cbd:	cdq    
  424cbe:	pop    esp
  424cbf:	outs   dx,BYTE PTR ds:[esi]
  424cc0:	ja     0x424ccc
  424cc2:	and    bh,ah
  424cc4:	pop    edi
  424cc5:	mov    al,BYTE PTR [edi]
  424cc7:	ins    DWORD PTR es:[edi],dx
  424cc8:	stc    
  424cc9:	call   0x32d4:0x7aa6ad72
  424cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cd1:	push   edx
  424cd2:	fdiv   st,st(1)
  424cd4:	imul   edi,ebx,0x15
  424cd7:	call   0x2b0e:0x96ced25c
  424cde:	push   ss
  424cdf:	cwde   
  424ce0:	add    ch,BYTE PTR [edi+0x307c87b7]
  424ce6:	pop    edi
  424ce7:	mov    ebx,0xe0b68253
  424cec:	push   edi
  424ced:	push   esp
  424cee:	pop    DWORD PTR [ebp-0x7e]
  424cf1:	lahf   
  424cf2:	pop    edx
  424cf3:	retf   
  424cf4:	jnp    0x424d71
  424cf6:	xchg   BYTE PTR [eax+edx*4-0x4ca595ab],ah
  424cfd:	sub    BYTE PTR [edx-0x2b39e3b],bl
  424d03:	jo     0x424cf3
  424d05:	mov    bl,BYTE PTR [esi]
  424d07:	jnp    0x424c9b
  424d09:	imul   edx,eax,0x86a82c71
  424d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d10:	shl    al,cl
  424d12:	mov    ch,0x24
  424d14:	mov    bh,0x7
  424d16:	scas   al,BYTE PTR es:[edi]
  424d17:	enter  0xac3c,0xce
  424d1b:	ror    BYTE PTR [eax+0x65],0xfb
  424d1f:	push   esp
  424d20:	mov    edx,?
  424d22:	or     dl,cl
  424d24:	test   eax,0xfbf8d1b0
  424d29:	adc    eax,0x747a3dac
  424d2e:	pop    esp
  424d2f:	cli    
  424d30:	adc    DWORD PTR [eax-0x46f5b99e],esp
  424d36:	and    ah,BYTE PTR [ebp+0x62]
  424d39:	add    al,0xf9
  424d3b:	in     al,dx
  424d3c:	nop
  424d3d:	(bad)  
  424d3e:	fcom   DWORD PTR ds:0x23b1d041
  424d44:	mov    esp,0xa5a6575e
  424d49:	scas   al,BYTE PTR es:[edi]
  424d4a:	loop   0x424d8f
  424d4c:	mov    dl,0xb
  424d4e:	mov    edx,0x5c662b6c
  424d53:	push   ss
  424d54:	ret    0xebde
  424d57:	fsub   QWORD PTR [esi]
  424d59:	int    0xf6
  424d5b:	add    al,0x87
  424d5d:	sbb    eax,0x673af415
  424d62:	dec    ebp
  424d63:	ins    BYTE PTR es:[edi],dx
  424d64:	fwait
  424d65:	(bad)  
  424d66:	push   cs
  424d67:	ret    
  424d68:	scas   eax,DWORD PTR es:[edi]
  424d69:	pusha  
  424d6a:	aam    0xf0
  424d6c:	(bad)  
  424d6e:	sbb    al,0xf4
  424d70:	pop    ebx
  424d71:	mov    al,ds:0xa4a87b28
  424d76:	in     eax,dx
  424d77:	add    bl,bh
  424d79:	fld    DWORD PTR [eax]
  424d7b:	add    BYTE PTR [edx-0x5b61f90],ch
  424d81:	fldcw  WORD PTR [ebx-0x35bf70d]
  424d87:	loopne 0x424d58
  424d89:	xor    al,0x43
  424d8b:	shr    al,cl
  424d8d:	mov    BYTE PTR [ecx],0x0
  424d90:	xchg   BYTE PTR [edx],al
  424d92:	add    BYTE PTR [eax],al
  424d94:	or     DWORD PTR [esi+eiz*4-0x1dab926e],esp
  424d9b:	jmp    0xcd0f:0x6c348e19
  424da2:	mov    dl,0x2a
  424da4:	xor    edx,DWORD PTR [ebp-0x2dd6a39e]
  424daa:	inc    edx
  424dab:	push   edi
  424dac:	jns    0x424d59
  424dae:	lahf   
  424daf:	push   ds
  424db0:	push   ds
  424db1:	(bad)  
  424db2:	outs   dx,BYTE PTR ds:[esi]
  424db3:	test   al,0x2d
  424db5:	cmp    BYTE PTR [edx-0x28],dh
  424db8:	stc    
  424db9:	je     0x424e1a
  424dbb:	stos   DWORD PTR es:[edi],eax
  424dbc:	mov    ?,ebx
  424dbe:	idiv   BYTE PTR [edx+0xb]
  424dc1:	inc    eax
  424dc2:	gs enter 0xdf0c,0xde
  424dc7:	mov    bh,0x23
  424dc9:	popa   
  424dca:	int3   
  424dcb:	ds ja  0x424d73
  424dce:	mov    dh,0x23
  424dd0:	sbb    edi,ecx
  424dd2:	dec    edx
  424dd3:	jecxz  0x424dd0
  424dd5:	out    dx,al
  424dd6:	xchg   edx,eax
  424dd7:	pop    eax
  424dd8:	scas   al,BYTE PTR es:[edi]
  424dd9:	shr    BYTE PTR [ecx+0x43],0x68
  424ddd:	and    eax,0xc2e4d0a
  424de2:	repnz xor BYTE PTR [eax+0x79],dh
  424de6:	mov    BYTE PTR [edi-0x41],al
  424de9:	or     edi,DWORD PTR [esi+edx*1-0x2c]
  424ded:	in     al,dx
  424dee:	mov    al,0xb
  424df0:	and    al,BYTE PTR [ecx+0x19]
  424df3:	pop    edi
  424df4:	inc    ebp
  424df5:	out    0x21,al
  424df7:	cmp    DWORD PTR [ebx+0x31bcabd6],ebp
  424dfd:	gs and eax,0x4a551358
  424e03:	dec    edx
  424e04:	dec    eax
  424e05:	cld    
  424e06:	mov    al,0xbf
  424e08:	pop    esp
  424e09:	add    esp,DWORD PTR [ecx+eiz*4+0x439aeca2]
  424e10:	out    dx,eax
  424e11:	lods   eax,DWORD PTR ds:[esi]
  424e12:	and    DWORD PTR [ecx-0x27f94afb],ecx
  424e18:	xchg   ebx,eax
  424e19:	shl    DWORD PTR [ecx-0x4342d585],0x4d
  424e20:	mov    ch,0xfc
  424e22:	hlt    
  424e23:	mov    dh,0x52
  424e25:	cli    
  424e26:	xlat   BYTE PTR ds:[ebx]
  424e27:	push   cs
  424e28:	dec    esi
  424e29:	jae    0x424dab
  424e2b:	stc    
  424e2c:	pop    edi
  424e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e2e:	lock and eax,0xa461d2b2
  424e34:	jl     0x424e92
  424e36:	xchg   ecx,eax
  424e37:	xchg   esp,eax
  424e38:	xlat   BYTE PTR ds:[ebx]
  424e39:	adc    ecx,edi
  424e3b:	mov    ecx,0xfcdfc5c8
  424e40:	mov    dl,0x96
  424e42:	sub    dl,0xa9
  424e45:	outs   dx,DWORD PTR ds:[esi]
  424e46:	ja     0x424e8e
  424e48:	sbb    al,0xe5
  424e4a:	or     al,0x15
  424e4c:	add    al,0xba
  424e4e:	sub    DWORD PTR [ebp-0x1b6385a3],0xe04f6429
  424e58:	jmp    0x424e08
  424e5a:	arpl   WORD PTR [ecx+0x6e341c07],bx
  424e60:	int3   
  424e61:	repz ds jb 0x424e18
  424e65:	jo     0x424e8c
  424e67:	sub    BYTE PTR [edx],cl
  424e69:	call   0x2b0b:0x7dd99ca6
  424e70:	clc    
  424e71:	outs   dx,BYTE PTR ds:[esi]
  424e72:	imul   esi,DWORD PTR [eax+0x69],0xf45a772e
  424e79:	ja     0x424ef8
  424e7b:	jnp    0x424e23
  424e7d:	pop    esi
  424e7e:	(bad)  
  424e80:	sbb    cl,BYTE PTR [eax+0x1fa9e2d4]
  424e86:	pop    ebp
  424e87:	ret    
  424e88:	scas   eax,DWORD PTR es:[edi]
  424e89:	dec    eax
  424e8a:	jge    0x424ef4
  424e8c:	jbe    0x424ed5
  424e8e:	stos   BYTE PTR es:[edi],al
  424e8f:	aad    0xb
  424e91:	jnp    0x424ef2
  424e93:	ret    0xb68
  424e96:	aam    0x45
  424e98:	dec    eax
  424e99:	fisubr WORD PTR [ecx]
  424e9b:	xchg   ebx,eax
  424e9c:	xor    al,0x6a
  424e9e:	aam    0xb7
  424ea0:	sbb    BYTE PTR [edi+0x3fd419d4],bh
  424ea6:	jb     0x424e63
  424ea8:	hlt    
  424ea9:	sub    BYTE PTR [ebx+0x5e],dh
  424eac:	pop    es
  424ead:	lods   al,BYTE PTR ds:[esi]
  424eae:	pop    ds
  424eaf:	dec    edx
  424eb0:	push   edx
  424eb1:	in     al,0xe1
  424eb3:	push   0x42bf0436
  424eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424eb9:	hlt    
  424eba:	lahf   
  424ebb:	dec    edi
  424ebc:	inc    edi
  424ebd:	mov    cl,0xd6
  424ebf:	or     edx,eax
  424ec1:	mov    al,ds:0x35791e4a
  424ec6:	xchg   ecx,eax
  424ec7:	adc    esi,DWORD PTR [eax]
  424ec9:	inc    edi
  424eca:	cld    
  424ecb:	fldcw  WORD PTR [eax-0x23]
  424ece:	div    BYTE PTR [edi+ebx*2+0x143296f8]
  424ed5:	sub    DWORD PTR [esi-0x2af994e],edx
  424edb:	fst    DWORD PTR [edx+edx*2+0x4cf4f029]
  424ee2:	jg     0x424ebf
  424ee4:	mov    dl,dh
  424ee6:	(bad)
  424eea:	cs adc al,0xb9
  424eed:	ror    BYTE PTR [edx+0x2174c083],1
  424ef3:	cdq    
  424ef4:	in     al,0xda
  424ef6:	adc    ah,BYTE PTR [eax]
  424ef8:	sti    
  424ef9:	into   
  424efa:	pop    edi
  424efb:	inc    eax
  424efc:	inc    ebx
  424efd:	mov    al,0xd5
  424eff:	pop    esp
  424f00:	push   cs
  424f01:	(bad)  
  424f02:	js     0x424e92
  424f04:	fldcw  WORD PTR [ecx]
  424f06:	and    eax,0x4143ec31
  424f0b:	xor    DWORD PTR [edi+0x4a81fd7c],edi
  424f11:	popf   
  424f12:	jnp    0x424e9a
  424f14:	push   es
  424f15:	loopne 0x424ee3
  424f17:	dec    eax
  424f18:	sti    
  424f19:	push   ss
  424f1a:	aaa    
  424f1b:	push   ebx
  424f1c:	test   esp,edi
  424f1e:	sub    al,0x47
  424f20:	mov    dh,0x4b
  424f22:	retf   0x2640
  424f25:	pop    esp
  424f26:	mov    ch,0xdf
  424f28:	jp     0x424ebf
  424f2a:	jmp    0xf5f00654
  424f2f:	lods   al,BYTE PTR ds:[esi]
  424f30:	clc    
  424f31:	aad    0x5e
  424f33:	adc    DWORD PTR [edi],edi
  424f35:	and    al,0x31
  424f37:	mov    BYTE PTR [esi+0x31],dl
  424f3a:	adc    cl,BYTE PTR [ebx]
  424f3c:	jo     0x424f1c
  424f3e:	or     DWORD PTR [eax+0x3b],esi
  424f41:	or     ebx,DWORD PTR [esi-0x6d]
  424f44:	nop
  424f45:	bound  edx,QWORD PTR [eax-0x42ea6a2f]
  424f4b:	inc    ebx
  424f4c:	xor    esi,esi
  424f4e:	and    BYTE PTR [eax+0x455cebf4],al
  424f54:	jl     0x424f2b
  424f56:	pop    ecx
  424f57:	out    dx,eax
  424f58:	xor    bh,BYTE PTR [ebx-0x5808a2b2]
  424f5e:	add    DWORD PTR [eax+0x481a9ab6],edx
  424f64:	aad    0xdc
  424f66:	stc    
  424f67:	xchg   edi,eax
  424f68:	dec    edi
  424f69:	nop
  424f6a:	mov    ah,0x17
  424f6c:	popa   
  424f6d:	div    DWORD PTR [ebx+ebp*1-0x56]
  424f71:	test   ah,ah
  424f73:	add    eax,0x2287be7f
  424f78:	daa    
  424f79:	dec    ecx
  424f7a:	jmp    0x424fba
  424f7c:	shr    BYTE PTR [eax+0x67],1
  424f7f:	sbb    eax,DWORD PTR [esi-0x15]
  424f82:	push   ebx
  424f83:	xor    al,BYTE PTR [edx]
  424f85:	popa   
  424f86:	ds mov edx,eax
  424f89:	push   cs
  424f8a:	mov    edi,DWORD PTR [esi+0x21]
  424f8d:	fnstcw WORD PTR [eax-0x33]
  424f90:	sti    
  424f91:	push   ebx
  424f93:	inc    edi
  424f94:	rcr    edx,1
  424f96:	cmp    DWORD PTR [edi+0x1f499702],ecx
  424f9c:	jecxz  0x424fc0
  424f9e:	rcr    BYTE PTR ds:0xb35a6f3b,1
  424fa4:	mov    WORD PTR [ebx],ss
  424fa6:	mov    ebx,0xcd6a9f58
  424fab:	pop    edx
  424fac:	jecxz  0x424f52
  424fae:	fisubr DWORD PTR [eax+0x51606896]
  424fb4:	fadd   QWORD PTR [eax+0x1b]
  424fb7:	push   ss
  424fb8:	xchg   ebx,eax
  424fb9:	jae    0x425026
  424fbb:	pushf  
  424fbc:	or     ecx,DWORD PTR [edi-0x41807a45]
  424fc2:	out    0x5e,al
  424fc4:	dec    esp
  424fc5:	dec    esp
  424fc6:	sbb    eax,0xfa1d8e07
  424fcb:	cmp    al,0x9f
  424fcd:	pop    es
  424fce:	rcl    BYTE PTR [esi*8-0x41110ea9],cl
  424fd5:	adc    ah,BYTE PTR [esi]
  424fd7:	add    BYTE PTR [ebp-0x11],dh
  424fda:	mov    WORD PTR ds:0xfe1ac033,ss
  424fe0:	sub    BYTE PTR [ecx-0x7f788c94],0xaf
  424fe7:	fisub  WORD PTR ds:0x786cb1ac
  424fed:	sbb    cl,cl
  424fef:	das    
  424ff0:	jl     0x424feb
  424ff2:	es mov bh,0x74
  424ff5:	outs   dx,BYTE PTR ds:[esi]
  424ff6:	call   0x2083:0xc08147ec
  424ffd:	(bad)  
  424ffe:	jge    0x424f97
  425000:	inc    ebx
  425001:	rcl    BYTE PTR [edi],0xf2
  425004:	fwait
  425005:	into   
  425006:	inc    ebx
  425007:	(bad)  
  425008:	sub    al,0x64
  42500a:	jg     0x424fa7
  42500c:	pop    ebx
  42500d:	pop    ecx
  42500e:	mov    ds:0x8fa4860a,al
  425013:	das    
  425014:	sar    esp,1
  425016:	sar    DWORD PTR [eax+0x64],0x66
  42501a:	add    BYTE PTR [eax],al
  42501c:	dec    edx
  42501d:	xchg   DWORD PTR [edx+0x4c],edx
  425020:	(bad)  
  425022:	pop    esi
  425023:	xchg   eax,esp
  425025:	js     0x424fa8
  425027:	mov    ebx,0xa56b8a5a
  42502c:	outs   dx,BYTE PTR ds:[esi]
  42502d:	leave  
  42502e:	add    DWORD PTR [eax],eax
  425030:	xchg   BYTE PTR [edx],al
  425032:	add    BYTE PTR [eax],al
  425034:	bnd jmp 0x8903fba1
  42503a:	add    dl,BYTE PTR [esp+esi*1-0x73]
  42503e:	pfmax  mm4,mm7
  425042:	adc    edi,DWORD PTR [esi]
  425044:	jnp    0x425074
  425046:	out    dx,eax
  425047:	das    
  425048:	xchg   DWORD PTR [edx+0x3c],ebp
  42504b:	mov    DWORD PTR [eax],ecx
  42504d:	pop    eax
  42504e:	cs aas 
  425050:	push   edx
  425051:	clc    
  425052:	test   eax,0x757911e3
  425057:	retf   0x50da
  42505a:	push   0xfffffff2
  42505c:	aaa    
  42505d:	shl    esp,1
  42505f:	dec    ebp
  425061:	aas    
  425062:	(bad)  
  425063:	fcom   QWORD PTR [edx+0x24de0e2e]
  425069:	inc    edx
  42506a:	cmp    DWORD PTR [edi-0x4424d32e],esi
  425070:	lea    eax,[edi]
  425072:	add    cl,BYTE PTR [esi]
  425074:	jnp    0x425041
  425076:	aas    
  425077:	aas    
  425078:	out    dx,al
  425079:	xchg   esi,eax
  42507a:	adc    al,0x42
  42507c:	sbb    eax,0x60a323cd
  425081:	das    
  425082:	ja     0x4250c0
  425084:	mov    ebx,0x243e7e1a
  425089:	mov    ds:0x28138bfa,al
  42508e:	pushf  
  42508f:	jecxz  0x425103
  425091:	loope  0x425058
  425093:	add    esp,DWORD PTR [edx-0x5a]
  425096:	jnp    0x4250e8
  425098:	scas   eax,DWORD PTR es:[edi]
  425099:	mov    ebx,0xb766185a
  42509e:	scas   eax,DWORD PTR es:[edi]
  42509f:	dec    eax
  4250a0:	inc    edx
  4250a1:	rol    DWORD PTR [ebx+0x6b135975],cl
  4250a7:	sbb    BYTE PTR [ecx],ah
  4250a9:	scas   eax,DWORD PTR es:[edi]
  4250aa:	inc    ebx
  4250ab:	xor    al,0xb7
  4250ad:	jmp    FWORD PTR [eax-0x5c87cdc7]
  4250b3:	mov    bh,0x13
  4250b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250b6:	sub    dl,cl
  4250b8:	xchg   edx,eax
  4250b9:	push   ss
  4250ba:	imul   esi,DWORD PTR [eax+ebx*2],0xd8574271
  4250c1:	pop    ebx
  4250c2:	pop    esp
  4250c3:	sbb    eax,0xb9930563
  4250c8:	push   0xd7b76400
  4250cd:	add    eax,0x141bcf71
  4250d2:	xchg   DWORD PTR [esi+edi*4],ebx
  4250d5:	dec    ebx
  4250d6:	add    al,0x5
  4250d8:	aaa    
  4250d9:	and    DWORD PTR gs:[ebp+0x3d],ebx
  4250dd:	dec    edi
  4250de:	pop    ecx
  4250df:	lods   al,BYTE PTR ds:[esi]
  4250e0:	jmp    0x42514e
  4250e2:	inc    ebp
  4250e3:	das    
  4250e4:	adc    al,0xf7
  4250e6:	sbb    BYTE PTR [edi],dh
  4250e8:	push   esi
  4250e9:	popf   
  4250ea:	icebp  
  4250eb:	int    0x94
  4250ed:	retf   
  4250ee:	mov    ds:0x74e1b1e4,eax
  4250f3:	mov    esi,0xccdc5003
  4250f8:	or     eax,DWORD PTR [ebp-0x2c1856c9]
  4250fe:	cmp    eax,0x3e76eaff
  425103:	adc    cl,BYTE PTR [esi-0x5f]
  425106:	adc    ecx,eax
  425108:	(bad)  
  42510a:	push   ebp
  42510b:	ret    0xd8f
  42510e:	xchg   edi,eax
  42510f:	(bad)  
  425111:	push   ds
  425112:	xor    eax,0x670dc0b7
  425117:	add    bl,0xb7
  42511a:	sbb    bh,cl
  42511c:	aas    
  42511d:	and    al,0x2f
  42511f:	mov    ds:0x4a518528,eax
  425124:	or     esp,eax
  425126:	jmp    0x42518d
  425128:	push   edi
  425129:	xchg   BYTE PTR [ecx-0x301de18f],dl
  42512f:	lock hlt 
  425131:	hlt    
  425132:	dec    edx
  425133:	pop    ss
  425134:	or     eax,DWORD PTR [ebx+0x5211eb44]
  42513a:	pop    edx
  42513b:	mov    ah,0x6e
  42513d:	add    DWORD PTR [ebx-0x10],edi
  425140:	sbb    al,0x4b
  425142:	cmc    
  425143:	rcl    DWORD PTR [esi],cl
  425145:	push   cs
  425146:	inc    edi
  425148:	sub    DWORD PTR [ebp-0x66],esi
  42514b:	and    dh,bl
  42514d:	adc    BYTE PTR [eax-0x69e9113a],ch
  425153:	cmc    
  425154:	jecxz  0x4250e0
  425156:	inc    ebx
  425157:	add    DWORD PTR [edi-0x7],eax
  42515a:	rol    DWORD PTR [ebp+0x6069c15],cl
  425160:	cmp    eax,0x67772d39
  425165:	cwde   
  425166:	or     al,BYTE PTR [eax]
  425168:	cmc    
  425169:	aas    
  42516a:	lods   al,BYTE PTR ds:[esi]
  42516b:	mov    edx,0xae00c947
  425170:	les    ebx,FWORD PTR [ebx]
  425172:	bnd jl 0x42513f
  425175:	or     ebp,DWORD PTR [ebx]
  425177:	dec    esi
  425178:	bound  eax,QWORD PTR [eax-0x52]
  42517b:	cmp    dh,BYTE PTR [ebp+ebx*2+0x58]
  42517f:	and    dh,BYTE PTR [eax-0x38]
  425182:	data16 mov bh,0x3b
  425185:	(bad)  
  425186:	and    al,BYTE PTR [ecx]
  425188:	aam    0x44
  42518a:	sub    cl,BYTE PTR [esi+esi*2-0xf]
  42518e:	push   cs
  42518f:	jb     0x4251e1
  425191:	outs   dx,BYTE PTR ds:[esi]
  425192:	mov    ds:0xeff6dc4,eax
  425197:	pop    eax
  425198:	push   0x6d60eb37
  42519d:	pop    ebp
  42519e:	outs   dx,DWORD PTR ds:[esi]
  42519f:	dec    ebp
  4251a0:	sbb    eax,0x72202322
  4251a5:	into   
  4251a6:	mov    cl,0x6d
  4251a8:	fmul   DWORD PTR [bp-0x19]
  4251ac:	sub    ebx,DWORD PTR [ebp-0x2479d4d0]
  4251b2:	ds lahf 
  4251b4:	repz aad 0x7b
  4251b7:	bound  edi,QWORD PTR [esi-0x4ce9f9ce]
  4251bd:	adc    eax,0xb24bda64
  4251c2:	pop    ebx
  4251c3:	in     eax,dx
  4251c4:	sbb    eax,0x22a5d7d0
  4251c9:	int    0x72
  4251cb:	adc    al,ah
  4251cd:	xchg   ebx,eax
  4251ce:	jmp    0x42523c
  4251d0:	jo     0x42516d
  4251d2:	pop    esi
  4251d3:	jbe    0x425231
  4251d5:	das    
  4251d6:	add    eax,0xc673612b
  4251db:	sub    al,0x7e
  4251dd:	cmp    edx,DWORD PTR [edx-0xf]
  4251e0:	rol    BYTE PTR [eax-0x3aaba21a],1
  4251e6:	loope  0x425259
  4251e8:	les    esp,FWORD PTR [edi+edx*4+0x6b]
  4251ec:	jns    0x4251f8
  4251ee:	into   
  4251ef:	call   0xcb68:0x37084b1c
  4251f6:	xchg   esi,esp
  4251f8:	jle    0x4251a6
  4251fa:	inc    DWORD PTR [ecx]
  4251fc:	and    DWORD PTR [edi-0x166aeedb],esi
  425202:	stos   DWORD PTR es:[edi],eax
  425203:	scas   eax,DWORD PTR es:[edi]
  425204:	or     DWORD PTR [edx+0x24],edi
  425207:	sub    ebp,edx
  425209:	mov    DWORD PTR [edi],esp
  42520b:	adc    edx,esp
  42520d:	xor    dh,ah
  42520f:	pop    edx
  425210:	(bad)  
  425211:	shl    cl,1
  425213:	cmp    al,0x7
  425215:	in     eax,0xfd
  425217:	or     al,0x8c
  425219:	mov    ebx,0x62736936
  42521e:	lea    esi,[ebx-0x12]
  425221:	mov    ebx,0x730a4304
  425226:	push   0x27
  425228:	sahf   
  425229:	mov    ebx,?
  42522b:	mov    eax,ds:0x3ab1903f
  425230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425231:	xchg   esi,eax
  425232:	inc    edx
  425233:	scas   eax,DWORD PTR es:[edi]
  425234:	int3   
  425235:	(bad)  
  425236:	repz ficomp WORD PTR [ecx-0x7b]
  42523a:	ret    
  42523b:	cmp    DWORD PTR [eax+0x39f4d1b],esp
  425241:	pop    eax
  425242:	dec    edx
  425243:	cmp    al,0x10
  425245:	ins    DWORD PTR es:[di],dx
  425247:	dec    edx
  425248:	xchg   esp,eax
  425249:	stos   DWORD PTR es:[edi],eax
  42524a:	xor    al,0xe3
  42524c:	xor    ch,dl
  42524e:	xchg   DWORD PTR [eax-0x72f1d7d],esi
  425254:	rol    dl,0x99
  425257:	lock mov ch,0x48
  42525a:	int    0xa2
  42525c:	sub    al,BYTE PTR [eax-0x71d46d84]
  425262:	push   ebx
  425263:	mov    bl,0x99
  425265:	test   ecx,edx
  425267:	fwait
  425268:	inc    edx
  425269:	cld    
  42526a:	add    eax,0xc8e13708
  42526f:	push   esp
  425270:	in     eax,0xca
  425272:	outs   dx,BYTE PTR ds:[esi]
  425273:	jp     0x425278
  425275:	xor    al,0x84
  425277:	sbb    al,0x9b
  425279:	scas   eax,DWORD PTR es:[edi]
  42527a:	push   esp
  42527b:	movlhps xmm3,xmm6
  42527e:	stc    
  42527f:	jno    0x425217
  425281:	fcmovu st,st(6)
  425283:	sar    edi,cl
  425285:	loope  0x4252b3
  425287:	mov    eax,0x51b64504
  42528c:	mov    cl,BYTE PTR [esp+edi*8]
  42528f:	js     0x4252ba
  425291:	mov    ch,dl
  425293:	out    0xd0,al
  425295:	ins    DWORD PTR es:[edi],dx
  425296:	inc    esp
  425297:	and    ah,ch
  425299:	xor    ebp,DWORD PTR [eax+0x7abe5f10]
  42529f:	(bad)  [edi-0xc]
  4252a2:	mov    dh,BYTE PTR [ecx+0xa3b1b44]
  4252a8:	(bad)  
  4252a9:	out    dx,eax
  4252aa:	mov    ebx,0x6e70b22d
  4252af:	fs dec ebx
  4252b1:	iret   
  4252b2:	imul   edi,DWORD PTR [eax],0x1
  4252b5:	fcmovnu st,st(3)
  4252b7:	jnp    0x425283
  4252b9:	add    BYTE PTR cs:[eax],al
  4252bc:	or     dl,BYTE PTR [edx-0x3c684]
  4252c2:	dec    edi
  4252c3:	mov    bl,0xec
  4252c5:	jo     0x42527e
  4252c7:	(bad)  
  4252c8:	(bad)  
  4252ca:	jp     0x4252a2
  4252cc:	hlt    
  4252cd:	retf   
  4252ce:	add    DWORD PTR [eax],eax
  4252d0:	xchg   BYTE PTR [edx],al
  4252d2:	add    BYTE PTR [eax],al
  4252d4:	xor    BYTE PTR [eax],dl
  4252d6:	push   edx
  4252d7:	jmp    DWORD PTR [ecx+edx*4+0x7a73a1a2]
  4252de:	test   bh,dl
  4252e0:	sub    DWORD PTR [ecx-0x80],0x94723b59
  4252e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252e8:	(bad)  
  4252e9:	push   ecx
  4252ea:	xor    eax,0x63238e9b
  4252ef:	adc    BYTE PTR [eax-0x5d],bl
  4252f2:	mov    al,0xb2
  4252f4:	in     eax,dx
  4252f5:	xchg   ebp,eax
  4252f6:	add    al,0x8d
  4252f8:	sub    dh,BYTE PTR [eax]
  4252fa:	dec    esi
  4252fb:	and    edx,DWORD PTR [edi-0xa62285e]
  425301:	inc    ebp
  425302:	pop    es
  425303:	mov    ?,WORD PTR [ecx-0xa90c47f]
  425309:	add    cl,ah
  42530b:	test   al,0x4
  42530d:	jnp    0x425332
  42530f:	or     eax,0x9d0c26f2
  425314:	mov    ds:0x13a24ccd,eax
  425319:	push   0xffffffcc
  42531b:	inc    edx
  42531c:	sbb    BYTE PTR [esi+0x1a],al
  42531f:	push   edi
  425320:	sbb    DWORD PTR [esi],esi
  425322:	dec    edi
  425323:	shr    dl,1
  425325:	in     al,dx
  425326:	push   ebp
  425327:	loope  0x425347
  425329:	jecxz  0x425324
  42532b:	(bad)  
  42532c:	repnz mov dl,0xc4
  42532f:	aam    0x7c
  425331:	mov    edi,DWORD PTR [esi]
  425333:	xchg   esp,eax
  425334:	push   ecx
  425335:	ins    DWORD PTR es:[edi],dx
  425336:	mov    cl,0x92
  425338:	iret   
  425339:	xor    DWORD PTR [esp+eax*1],esp
  42533c:	fwait
  42533d:	cmp    cl,0x1a
  425340:	lea    ecx,[eax+0x48]
  425343:	fisttp QWORD PTR [edx+0x4b]
  425346:	(bad)  [ecx]
  425348:	inc    ecx
  425349:	and    eax,0x6a710843
  42534e:	sbb    ebx,edx
  425350:	xor    bl,BYTE PTR ds:0x24c8500b
  425356:	xor    BYTE PTR [edx],bh
  425358:	jb     0x425394
  42535a:	mov    bh,0x9e
  42535c:	and    DWORD PTR [esi+0x62],ecx
  42535f:	in     eax,0xd0
  425361:	lock sbb al,0x18
  425364:	data16 ss (bad) 
  425367:	and    eax,0x8a0b3c48
  42536c:	retf   
  42536d:	mov    ebp,0xc394445d
  425372:	stos   DWORD PTR es:[edi],eax
  425373:	loop   0x425345
  425375:	mov    ah,0xcf
  425377:	mov    bh,0x3
  425379:	neg    DWORD PTR [ebx-0x5d22d6de]
  42537f:	or     BYTE PTR [edi+eiz*4],0x7f
  425383:	mov    WORD PTR [esp+ebp*2+0x7348ea47],?
  42538a:	add    dh,bh
  42538c:	repnz es test cl,ch
  425390:	(bad)  
  425391:	and    edx,edi
  425393:	adc    ebp,edi
  425395:	and    BYTE PTR [bp+si-0x5de3],cl
  42539a:	add    BYTE PTR [ebp+edi*2+0x46],ah
  42539e:	iret   
  42539f:	inc    cl
  4253a1:	jp     0x4253e1
  4253a3:	stos   BYTE PTR es:[edi],al
  4253a4:	dec    eax
  4253a5:	dec    esp
  4253a6:	ret    0x6cf8
  4253a9:	mov    esi,0x57eb2e58
  4253ae:	sbb    al,al
  4253b0:	mov    ebp,0xa36db8ca
  4253b5:	dec    edi
  4253b6:	out    dx,al
  4253b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253b8:	jecxz  0x4253e7
  4253ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253bb:	ja     0x4253c8
  4253bd:	push   ss
  4253be:	push   ecx
  4253bf:	pop    esi
  4253c0:	mov    al,0x8d
  4253c2:	ficom  DWORD PTR [ebp+0x4b]
  4253c5:	loope  0x425422
  4253c7:	add    BYTE PTR [ecx+0x343d3973],0xee
  4253ce:	idiv   BYTE PTR [ebx+0x1111212b]
  4253d4:	scas   al,BYTE PTR es:[edi]
  4253d5:	pusha  
  4253d6:	push   edx
  4253d7:	sub    eax,0x88d8e90a
  4253dc:	es or  al,0x6e
  4253df:	and    eax,0xe4a10609
  4253e4:	stos   DWORD PTR es:[edi],eax
  4253e5:	xor    bh,0x37
  4253e8:	xor    DWORD PTR [edi+edx*2-0x1f],ecx
  4253ec:	lock sub dh,ch
  4253ef:	xor    al,0x51
  4253f1:	outs   dx,DWORD PTR ds:[esi]
  4253f2:	xor    al,0x88
  4253f4:	xchg   ebx,eax
  4253f5:	push   edx
  4253f6:	call   0x900d:0x7705115a
  4253fd:	cmp    BYTE PTR [eax+0x6e],bl
  425400:	push   es
  425401:	in     eax,0xfc
  425403:	mov    cl,0xed
  425405:	inc    esp
  425406:	mov    dh,0x2d
  425408:	cdq    
  425409:	in     eax,dx
  42540a:	inc    ah
  42540c:	mov    ah,0x26
  42540e:	sub    DWORD PTR [esi+0x8c49fac],esi
  425414:	sbb    al,0x40
  425416:	mov    ch,0x91
  425418:	shr    DWORD PTR [ecx-0x4c71264],0xbb
  42541f:	cdq    
  425420:	bound  eax,QWORD PTR [ebx-0x78]
  425423:	scas   al,BYTE PTR es:[edi]
  425424:	mov    ds:0x77baa394,eax
  425429:	(bad)  
  42542b:	push   ss
  42542c:	aam    0x7a
  42542e:	jbe    0x4253ec
  425430:	cmp    dh,0x81
  425433:	jl     0x425485
  425435:	popa   
  425436:	call   0x809d4627
  42543b:	daa    
  42543c:	test   DWORD PTR [ebp+0x31],ebx
  42543f:	(bad)  
  425440:	xchg   ebp,eax
  425441:	popa   
  425442:	hlt    
  425443:	(bad)  
  425444:	ja     0x4254ab
  425446:	call   0xa1ba:0x44281a26
  42544d:	data16 sbb dh,bl
  425450:	inc    eax
  425451:	mov    edi,0xb465a468
  425456:	pop    ebp
  425457:	adc    ah,bl
  425459:	shr    BYTE PTR [ebx-0xa],cl
  42545c:	into   
  42545d:	xchg   edi,eax
  42545e:	test   al,0x9c
  425460:	sbb    eax,0x2448e4ce
  425465:	mov    bh,0xd7
  425467:	push   ds
  425468:	jmp    0x41b7:0x9bacffd6
  42546f:	mov    ebx,0x91738b0e
  425474:	(bad)  
  425475:	push   eax
  425476:	mov    ds:0x38245cc4,eax
  42547b:	jbe    0x425456
  42547d:	outs   dx,BYTE PTR ds:[esi]
  42547e:	cmp    eax,0xc69ea504
  425483:	or     DWORD PTR [esi],0xffffffab
  425486:	(bad)  
  425489:	gs dec ecx
  42548b:	jge    0x425436
  42548d:	aam    0x4c
  42548f:	dec    ebx
  425490:	fs jo  0x425430
  425493:	mov    edi,0x4a81f306
  425498:	mov    cl,0x71
  42549a:	pop    esi
  42549b:	inc    ebx
  42549c:	ret    0xa96
  42549f:	xor    eax,0x112e5332
  4254a4:	inc    ecx
  4254a5:	popf   
  4254a6:	lea    esi,[esp+esi*1]
  4254a9:	inc    esp
  4254aa:	pop    edi
  4254ab:	arpl   cx,cx
  4254ad:	loope  0x425464
  4254af:	pop    esp
  4254b0:	ja     0x425472
  4254b2:	ja     0x4254cd
  4254b4:	push   ebx
  4254b5:	arpl   WORD PTR [ebx+0x51],cx
  4254b8:	retf   0x5fda
  4254bb:	pop    ebp
  4254bc:	push   ebp
  4254bd:	test   al,0x12
  4254bf:	outs   dx,BYTE PTR ds:[esi]
  4254c0:	(bad)
  4254c3:	movups xmm0,xmm1
  4254c6:	aas    
  4254c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254c8:	jns    0x42549a
  4254ca:	jno    0x425455
  4254cc:	mov    al,ds:0xb0dcb1f5
  4254d1:	jle    0x425506
  4254d3:	xchg   ebp,eax
  4254d4:	lock jbe 0x425470
  4254d7:	mov    edx,0x1520dbf1
  4254dc:	mov    dh,BYTE PTR [edx-0x3081ab06]
  4254e2:	ss leave 
  4254e4:	loopne 0x42548c
  4254e6:	xor    eax,0xa89d7273
  4254eb:	lods   eax,DWORD PTR ds:[esi]
  4254ec:	jne    0x425518
  4254ee:	and    eax,0x785b2349
  4254f3:	scas   al,BYTE PTR es:[edi]
  4254f4:	sub    eax,0x325ac8b9
  4254f9:	loop   0x425490
  4254fb:	jle    0x42548e
  4254fd:	fcmovnbe st,st(2)
  4254ff:	sub    DWORD PTR [ebx],ebp
  425501:	rep ins DWORD PTR es:[edi],dx
  425503:	cdq    
  425504:	(bad)  
  425505:	fcom   DWORD PTR [ecx+ecx*4-0x6f4d53c0]
  42550c:	fdiv   st(0),st
  42550e:	pop    es
  42550f:	mov    ebx,0xcad109d2
  425514:	aam    0x87
  425516:	push   ss
  425517:	(bad)  
  425518:	mov    BYTE PTR [ebx+ebp*2+0x6],bl
  42551c:	xor    eax,0x392c4623
  425521:	push   ds
  425522:	push   ds
  425523:	xchg   esi,eax
  425524:	pop    esp
  425525:	test   BYTE PTR [edi+0x3d4cbba],ah
  42552b:	adc    edx,0x46
  42552e:	lahf   
  42552f:	(bad)  
  425530:	dec    esp
  425531:	or     ebx,esp
  425533:	push   esp
  425534:	adc    ah,BYTE PTR [esp+edi*2]
  425537:	push   edx
  425538:	mov    esp,0x4b4f6f8e
  42553d:	inc    ebx
  42553e:	mov    al,0xe
  425540:	or     esp,DWORD PTR [edi-0x45994774]
  425546:	mov    edi,0xf2c9fec7
  42554b:	or     eax,DWORD PTR [edx+0x36]
  42554e:	push   ebx
  42554f:	xchg   esp,eax
  425550:	push   ebx
  425551:	(bad)  
  425552:	shl    BYTE PTR [ecx+0x7b],1
  425555:	int3   
  425556:	(bad)  
  425557:	or     edi,edx
  425559:	dec    ebp
  42555a:	add    BYTE PTR [eax],al
  42555c:	ret    
  42555d:	and    ecx,edx
  42555f:	dec    eax
  425560:	repz clc 
  425562:	fld    TBYTE PTR [ebx+0x202892a0]
  425568:	hlt    
  425569:	cmc    
  42556a:	sub    eax,0x1ce7afb
  42556f:	add    BYTE PTR [esi-0x53fffffe],al
  425575:	push   es
  425576:	push   ss
  425577:	loopne 0x42554c
  425579:	cmp    eax,0xb992c6b9
  42557e:	mov    BYTE PTR [edi-0x23],bh
  425581:	mov    ds:0x85b314e8,eax
  425586:	int3   
  425587:	xchg   edx,eax
  425588:	mov    ds:0x62844fbe,eax
  42558d:	ins    BYTE PTR es:[edi],dx
  42558e:	mov    esp,edx
  425590:	sbb    BYTE PTR [ebx],bh
  425592:	mov    eax,ds:0xebcf26a3
  425597:	sub    dl,dh
  425599:	adc    DWORD PTR [edx-0x2f],0x954c2b39
  4255a0:	imul   ecx,DWORD PTR [eax-0x6e48545b],0xf319322b
  4255aa:	dec    esi
  4255ab:	and    BYTE PTR [ebx+0x27ca0b4c],dh
  4255b1:	stos   DWORD PTR es:[edi],eax
  4255b2:	lock ins DWORD PTR es:[edi],dx
  4255b4:	cwde   
  4255b5:	inc    edi
  4255b6:	in     al,dx
  4255b7:	outs   dx,BYTE PTR ds:[esi]
  4255b8:	out    dx,al
  4255b9:	scas   eax,DWORD PTR es:[edi]
  4255ba:	ins    DWORD PTR es:[edi],dx
  4255bb:	es xchg esp,eax
  4255bd:	sbb    bl,BYTE PTR [edi]
  4255bf:	push   edi
  4255c0:	xchg   edx,eax
  4255c1:	pop    ecx
  4255c2:	push   ecx
  4255c3:	mov    eax,0x8db07a1c
  4255c8:	mov    ah,0x7
  4255ca:	test   al,0x7f
  4255cc:	retf   0x9e01
  4255cf:	xchg   ebx,eax
  4255d0:	fist   WORD PTR [ebp-0x58]
  4255d3:	add    BYTE PTR [eax-0x6c],bh
  4255d6:	ja     0x4255d3
  4255d8:	adc    bh,ch
  4255da:	or     ah,BYTE PTR [edi-0x7ff4d541]
  4255e0:	xchg   ebx,eax
  4255e1:	test   DWORD PTR [ecx],esp
  4255e3:	sbb    eax,0x3180f170
  4255e8:	inc    esi
  4255e9:	fwait
  4255ea:	pop    ecx
  4255eb:	shr    DWORD PTR ds:[ebx],cl
  4255ee:	mov    WORD PTR [ebx],gs
  4255f0:	bound  ebx,QWORD PTR [eax+0x61]
  4255f3:	ins    DWORD PTR es:[edi],dx
  4255f4:	sbb    al,0x70
  4255f6:	mov    BYTE PTR [edx-0x1a97565b],dh
  4255fc:	xor    DWORD PTR [ebx+esi*2],ebp
  4255ff:	mov    eax,0x85febed2
  425604:	sub    ah,BYTE PTR [edx+0x4d]
  425607:	ins    BYTE PTR es:[edi],dx
  425608:	in     al,0x7f
  42560a:	and    DWORD PTR ds:0x1b27b084,ecx
  425610:	pushf  
  425611:	hlt    
  425612:	inc    eax
  425613:	test   al,0x7c
  425615:	cmp    esp,esp
  425617:	xchg   ecx,eax
  425618:	fwait
  425619:	int    0x84
  42561b:	mov    WORD PTR [ebp+0x2a3ecd45],?
  425621:	add    edi,DWORD PTR [edi-0xd]
  425624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425625:	sub    eax,DWORD PTR [ebx+0x2c]
  425628:	push   ebx
  425629:	sub    DWORD PTR [ebx-0x62cbe642],ecx
  42562f:	in     al,0x84
  425631:	xchg   esp,eax
  425632:	mov    ds,WORD PTR [esi+0x40]
  425635:	cmp    al,0x80
  425637:	rcr    BYTE PTR [edi],1
  425639:	int    0x14
  42563b:	jb     0x4255df
  42563d:	fldcw  WORD PTR [edi]
  42563f:	ss jo  0x425632
  425642:	push   edi
  425643:	inc    esp
  425644:	inc    edx
  425645:	sbb    esi,0xd380cb7c
  42564b:	daa    
  42564c:	mov    ebx,0x92a7d38
  425651:	mov    ds:0x45c5f1e3,al
  425656:	cmovb  edx,DWORD PTR [edi-0x78]
  42565a:	jecxz  0x425671
  42565c:	mov    bl,0x1e
  42565e:	cmp    eax,0xd164c091
  425663:	enter  0xa3b0,0x49
  425667:	cmc    
  425668:	dec    edi
  425669:	dec    edx
  42566a:	fist   DWORD PTR [eax+0x5e]
  42566d:	jae    0x4256c9
  42566f:	popa   
  425670:	mov    esp,0xb9f6177f
  425675:	sti    
  425676:	dec    edx
  425677:	lods   eax,DWORD PTR ds:[esi]
  425678:	pop    ecx
  425679:	lds    esi,FWORD PTR [eax-0x55addb32]
  42567f:	sbb    dh,BYTE PTR [edi]
  425681:	xchg   DWORD PTR [edx+0x7b],esi
  425684:	mov    DWORD PTR [ebx+ebx*1+0x2d041d4f],edx
  42568b:	sbb    BYTE PTR [esi],al
  42568d:	(bad)  
  42568e:	jne    0x425632
  425690:	adc    ecx,edx
  425692:	mov    bh,0x88
  425694:	xchg   ebx,eax
  425695:	adc    eax,esi
  425697:	icebp  
  425698:	mov    bl,ch
  42569a:	into   
  42569b:	inc    edx
  42569c:	loopne 0x4256d8
  42569e:	sbb    edx,edi
  4256a0:	scas   al,BYTE PTR es:[edi]
  4256a1:	xchg   esi,eax
  4256a2:	addr16 jge 0x425712
  4256a5:	push   cs
  4256a6:	adc    esp,DWORD PTR [esp+eax*4-0x61]
  4256aa:	movd   edx,mm7
  4256ad:	jnp    0x42568f
  4256af:	or     al,0xed
  4256b1:	les    esp,FWORD PTR [ebx]
  4256b3:	(bad)  
  4256b4:	cli    
  4256b5:	gs xchg edi,eax
  4256b7:	jge    0x425659
  4256b9:	je     0x425699
  4256bb:	ins    DWORD PTR es:[edi],dx
  4256bc:	(bad)  
  4256bd:	and    al,0x1c
  4256bf:	(bad)  
  4256c0:	cld    
  4256c1:	add    DWORD PTR [edx],0xffffffa6
  4256c4:	je     0x425743
  4256c6:	in     al,dx
  4256c7:	sub    esp,ebx
  4256c9:	dec    edx
  4256ca:	loopne 0x4256fe
  4256cc:	sbb    esi,edi
  4256ce:	jp     0x42574b
  4256d0:	mov    bl,0x93
  4256d2:	jmp    0x98c166b8
  4256d7:	(bad)  
  4256d8:	call   0x3da8045f
  4256dd:	mov    ecx,0xd9867e00
  4256e2:	lock rol esi,cl
  4256e5:	add    BYTE PTR [edx+0x160bf89f],0x62
  4256ec:	inc    ebp
  4256ed:	sub    dl,BYTE PTR [esi+ebp*4+0x72929e12]
  4256f4:	or     esp,edx
  4256f6:	mov    ds:0xe5061ac4,al
  4256fb:	out    dx,eax
  4256fc:	jnp    0x42571c
  4256fe:	sub    DWORD PTR [ebp+0x4ed30bf4],edx
  425704:	xchg   ecx,eax
  425705:	(bad)  [edx]
  425707:	push   0xffffffb1
  425709:	jne    0x42576c
  42570b:	leave  
  42570c:	int3   
  42570d:	out    dx,al
  42570e:	adc    al,0x4d
  425710:	dec    ecx
  425711:	std    
  425712:	lock test eax,0x6f374561
  425718:	xchg   esp,eax
  425719:	sub    al,0x18
  42571b:	xchg   edx,eax
  42571c:	cmp    al,0xf1
  42571e:	add    DWORD PTR [esi+eiz*2-0x3c],0x68
  425723:	scas   eax,DWORD PTR es:[edi]
  425724:	fcmovb st,st(7)
  425726:	xchg   ecx,eax
  425727:	popa   
  425728:	(bad)  
  425729:	mov    eax,esi
  42572b:	jmp    0xef48:0xb3c73de9
  425732:	das    
  425733:	xchg   BYTE PTR cs:[esi-0x8],bl
  425737:	mov    cl,0xed
  425739:	fwait
  42573a:	jecxz  0x425718
  42573c:	cli    
  42573d:	add    DWORD PTR [edx+0x62],esi
  425740:	ins    BYTE PTR es:[edi],dx
  425741:	and    ecx,edi
  425743:	xlat   BYTE PTR ds:[ebx]
  425744:	dec    ecx
  425745:	fs cli 
  425747:	arpl   cx,dx
  425749:	mov    ebp,0x3fbaacef
  42574e:	add    al,0x49
  425750:	push   esi
  425751:	push   ebp
  425752:	adc    ch,BYTE PTR [eax+0x37]
  425755:	sub    dl,dh
  425757:	xchg   esp,eax
  425758:	call   0xea10:0x53a37e33
  42575f:	add    eax,0x1cdeda62
  425764:	mov    ds:0x1def73c3,al
  425769:	enter  0x9e6d,0x81
  42576d:	das    
  42576e:	fnstenv [edx+0x6]
  425771:	jg     0x425760
  425773:	gs inc edx
  425775:	inc    ebp
  425776:	mov    bl,0x3b
  425778:	sbb    eax,0x93c122e5
  42577d:	in     eax,0xb8
  42577f:	push   edi
  425780:	pop    edx
  425781:	and    dh,BYTE PTR [esi+esi*2+0x3e]
  425785:	mov    al,BYTE PTR [ebx-0x6fe320d1]
  42578b:	cmp    BYTE PTR [edi],ah
  42578d:	data16 jle 0x425719
  425790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425791:	pop    edi
  425792:	jmp    0x425787
  425794:	jmp    0xbeca409e
  425799:	pop    ss
  42579a:	fcmovbe st,st(7)
  42579c:	jl     0x425818
  42579e:	mov    cl,0x4a
  4257a0:	jp     0x4257e7
  4257a2:	sbb    eax,0x5ca62615
  4257a7:	cmp    ebx,esp
  4257a9:	add    eax,0x8a131cd3
  4257ae:	and    DWORD PTR ds:0xabdbaf32,ebp
  4257b4:	imul   esp,DWORD PTR [ebx-0x3f],0xccf17ed9
  4257bb:	and    al,0xc0
  4257bd:	or     eax,0xa719d943
  4257c2:	arpl   cx,di
  4257c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257c5:	stc    
  4257c6:	loope  0x4257a2
  4257c8:	std    
  4257c9:	lock dec ebp
  4257cb:	or     BYTE PTR [ebx-0x32],0xa9
  4257cf:	daa    
  4257d0:	push   ebp
  4257d1:	fcomi  st,st(3)
  4257d3:	aaa    
  4257d4:	inc    edx
  4257d5:	mov    al,0x65
  4257d7:	push   ecx
  4257d8:	mov    ecx,0x2d9671cd
  4257dd:	inc    edx
  4257de:	push   0x79
  4257e0:	dec    esi
  4257e1:	lahf   
  4257e2:	or     ah,0xe1
  4257e5:	test   eax,0xc7267c48
  4257ea:	mov    bl,0xf7
  4257ec:	jno    0x425811
  4257ee:	and    eax,0xcebe0abc
  4257f3:	jb     0x425860
  4257f5:	sbb    al,0xfb
  4257f7:	test   DWORD PTR [ecx+0x7],ebp
  4257fa:	add    BYTE PTR [eax],al
  4257fc:	call   0x9eff:0xefe9ef59
  425803:	jnp    0x425848
  425805:	pop    ebp
  425806:	pop    esp
  425807:	mov    cl,0x15
  425809:	and    dl,ah
  42580b:	jge    0x42580d
  42580d:	rol    DWORD PTR [ecx],1
  42580f:	add    BYTE PTR [esi-0x71fffffe],al
  425815:	push   0x7798aeee
  42581a:	sub    al,dh
  42581c:	xlat   BYTE PTR ds:[ebx]
  42581d:	mov    DWORD PTR [eax-0x63],esp
  425820:	jmp    0xab1d1524
  425825:	xor    BYTE PTR [ecx-0x59],bl
  425828:	adc    DWORD PTR [edi],0xc500b483
  42582e:	mov    eax,ds:0xb5d0b752
  425833:	push   esp
  425834:	inc    eax
  425835:	mov    al,0x73
  425837:	icebp  
  425838:	cdq    
  425839:	pop    ecx
  42583a:	mov    ebx,DWORD PTR [esi+0x617704b5]
  425840:	div    BYTE PTR [eax+0x6defaabe]
  425846:	cmp    al,0x71
  425848:	jns    0x42585b
  42584a:	inc    esi
  42584b:	loope  0x4257f9
  42584d:	jle    0x42588e
  42584f:	sub    bh,al
  425851:	jp     0x4257d4
  425853:	sub    dl,BYTE PTR [ebx-0x64990cb6]
  425859:	sub    esi,ebx
  42585b:	test   BYTE PTR [esi-0x19f8251d],bl
  425861:	(bad)
  425864:	into   
  425865:	jb     0x42588b
  425867:	icebp  
  425868:	aam    0x97
  42586a:	dec    ecx
  42586b:	gs xchg ecx,eax
  42586d:	hlt    
  42586e:	jl     0x4258ba
  425870:	mov    esi,0xf62a0b30
  425875:	dec    esi
  425876:	push   eax
  425877:	ins    DWORD PTR es:[edi],dx
  425878:	xchg   esi,eax
  425879:	fbstp  TBYTE PTR [ecx+0x7]
  42587c:	sbb    esp,DWORD PTR [ecx]
  42587e:	test   al,0xf9
  425880:	test   al,0x73
  425882:	leave  
  425883:	add    BYTE PTR [edx-0x7290498e],0xf5
  42588a:	aaa    
  42588b:	push   ds
  42588c:	retf   0x1d45
  42588f:	push   edx
  425890:	daa    
  425891:	int3   
  425892:	arpl   WORD PTR [edx-0x459905fc],bp
  425898:	xchg   edx,eax
  425899:	xchg   ecx,eax
  42589a:	and    eax,0x6f73e20
  42589f:	cmp    al,0x90
  4258a1:	loope  0x425824
  4258a3:	rol    BYTE PTR [edx],0xb7
  4258a6:	pop    ds
  4258a7:	addr16 cmc 
  4258a9:	mov    ecx,0xda811bef
  4258ae:	adc    BYTE PTR [edi-0x41728935],ah
  4258b4:	dec    edx
  4258b5:	adc    ebx,DWORD PTR gs:[edx]
  4258b8:	sbb    al,BYTE PTR [ecx]
  4258ba:	(bad)
  4258bf:	hlt    
  4258c0:	hlt    
  4258c1:	pop    ebp
  4258c2:	addr16 daa 
  4258c4:	call   0x8858:0xec6277a
  4258cb:	lods   al,BYTE PTR ds:[esi]
  4258cc:	es repnz push 0xd355e399
  4258d3:	mov    dh,BYTE PTR [edx-0x4c427adf]
  4258d9:	push   0x43fa4604
  4258de:	out    0x82,al
  4258e0:	or     eax,esp
  4258e2:	retf   
  4258e3:	jno    0x4258b4
  4258e5:	and    al,0x33
  4258e7:	mov    esp,0x138e45be
  4258ec:	(bad)  
  4258ed:	lock add al,0x75
  4258f0:	fild   WORD PTR [eax]
  4258f2:	jns    0x425912
  4258f4:	outs   dx,BYTE PTR ds:[esi]
  4258f5:	je     0x425907
  4258f7:	leave  
  4258f8:	add    ch,bh
  4258fa:	xor    al,0x37
  4258fc:	xor    al,0x4
  4258fe:	adc    ecx,DWORD PTR [ebx]
  425900:	addr16 pop ss
  425902:	dec    ebx
  425903:	outs   dx,BYTE PTR ds:[esi]
  425904:	mov    edx,0x4e0e7d66
  425909:	mov    BYTE PTR [ecx],ah
  42590b:	mov    al,BYTE PTR [ebp-0x1b]
  42590e:	inc    ebp
  42590f:	pop    ebp
  425910:	mov    eax,ds:0x921b3b9a
  425915:	stos   DWORD PTR es:[edi],eax
  425916:	call   0x9785:0x568878d6
  42591d:	cmp    eax,0x9b6c53e
  425922:	popa   
  425923:	shl    BYTE PTR [ebx],1
  425925:	test   eax,0xe90d9d9a
  42592a:	jmp    0x4258b1
  42592c:	mov    cl,0x56
  42592e:	sbb    eax,0x3fa5f61a
  425933:	js     0x425922
  425935:	stos   DWORD PTR es:[edi],eax
  425936:	jle    0x425977
  425938:	and    eax,0x13b6642
  42593d:	aaa    
  42593e:	cmp    esi,DWORD PTR [ecx+0x4]
  425941:	jnp    0x425901
  425943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425944:	xchg   edx,eax
  425945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425946:	mov    dl,0x76
  425948:	sti    
  425949:	je     0x425902
  42594b:	mov    DWORD PTR [ebx],eax
  42594d:	fst    DWORD PTR ds:0x7abea213
  425953:	loopne 0x425963
  425955:	xchg   DWORD PTR [ecx-0x67],edx
  425958:	add    DWORD PTR [eax+0x4a722ab],ecx
  42595e:	pop    edx
  42595f:	xor    BYTE PTR [ecx],ch
  425961:	dec    edi
  425962:	or     eax,0xf3161e47
  425967:	loop   0x425990
  425969:	sar    ch,0xfb
  42596c:	test   DWORD PTR [edx+0x3],ebp
  42596f:	in     al,0xca
  425971:	mov    ds:0x6ceae572,eax
  425976:	loopne 0x4259a7
  425978:	bound  esp,QWORD PTR [ecx+edx*2+0x3a]
  42597c:	and    edi,edx
  42597e:	xor    bl,bh
  425980:	mov    ebp,0xf7a2c3b6
  425985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425986:	pop    esi
  425987:	test   BYTE PTR [esi+0x10ecb2c0],0x63
  42598e:	add    edx,0xffffffc1
  425991:	ss pop ss
  425993:	fadd   QWORD PTR [edi+0x62719b81]
  425999:	adc    ch,BYTE PTR [eax-0x7080e46f]
  42599f:	push   es
  4259a0:	sub    ah,BYTE PTR [edx]
  4259a2:	jbe    0x425968
  4259a4:	mov    edi,0xf289f3e8
  4259a9:	dec    ecx
  4259aa:	pusha  
  4259ab:	adc    eax,0xc28eaee0
  4259b0:	dec    ecx
  4259b1:	cmp    ebp,DWORD PTR [ebx-0x6277c8fe]
  4259b7:	add    eax,0x1eda222e
  4259bc:	sar    edi,cl
  4259be:	pop    ebx
  4259bf:	cmc    
  4259c0:	clc    
  4259c1:	dec    edx
  4259c2:	xchg   ebx,eax
  4259c3:	mov    cl,0x86
  4259c5:	rcr    DWORD PTR ds:0xca6e4cc5,0x53
  4259cc:	or     cl,BYTE PTR [eax+ebp*2]
  4259cf:	mov    al,0x20
  4259d1:	pop    es
  4259d2:	cmp    eax,0xd35f218e
  4259d7:	popf   
  4259d8:	add    DWORD PTR [esi+ecx*2-0x40],edi
  4259dc:	ficom  WORD PTR [eax]
  4259de:	cdq    
  4259df:	adc    DWORD PTR [eax],ecx
  4259e1:	inc    ecx
  4259e2:	dec    edi
  4259e3:	mov    esp,0xf7cc1ce
  4259e8:	mov    ebx,0xcecf6da9
  4259ed:	cmc    
  4259ee:	rol    DWORD PTR [edx+eiz*1],1
  4259f1:	leave  
  4259f2:	pushf  
  4259f3:	sub    DWORD PTR [ebp+0x5e069c4c],ecx
  4259f9:	adc    BYTE PTR [edi-0x4e],dl
  4259fc:	sub    eax,0x675663e2
  425a01:	jmp    0x4259a9
  425a03:	out    dx,eax
  425a04:	retf   0xa930
  425a07:	fs repnz aaa 
  425a0a:	imul   edi,DWORD PTR [ebp+0x6d67f3fd],0xffffffa1
  425a11:	mov    al,BYTE PTR [ecx]
  425a13:	and    eax,0xd2dae629
  425a18:	cwde   
  425a19:	std    
  425a1a:	mov    al,ds:0x6b6d4c49
  425a1f:	stc    
  425a20:	inc    esi
  425a21:	and    bh,BYTE PTR gs:[eax+0x65]
  425a25:	in     eax,0xb4
  425a27:	pop    ebp
  425a28:	mov    al,ds:0x395172de
  425a2d:	inc    ebp
  425a2e:	lock cmp DWORD PTR [edx],esi
  425a31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a32:	mov    bh,0x75
  425a34:	jns    0x4259f3
  425a36:	mov    ?,esp
  425a38:	sbb    ah,bl
  425a3a:	push   ds
  425a3b:	dec    esi
  425a3c:	gs inc edi
  425a3e:	div    BYTE PTR ds:0x4015068a
  425a44:	sub    ebx,DWORD PTR [ebx]
  425a46:	adc    BYTE PTR [esi-0x31],bh
  425a49:	cli    
  425a4a:	pop    ebp
  425a4b:	cmp    BYTE PTR [ecx+esi*1-0x33df5962],0xc
  425a53:	mov    eax,ds:0x2f035b2d
  425a58:	adc    DWORD PTR [esp+ecx*8-0xb],esi
  425a5c:	ret    0x38b0
  425a5f:	repz cmp DWORD PTR [ecx+eax*1+0x1b],edx
  425a64:	or     BYTE PTR [ebx-0x17],0x7
  425a68:	sbb    esp,0x27c024e1
  425a6e:	add    DWORD PTR [eax+edi*4-0x8],ebp
  425a72:	dec    esp
  425a73:	(bad)  
  425a74:	int    0x37
  425a76:	pop    esp
  425a77:	or     DWORD PTR [eax-0x26],0xffffffd7
  425a7b:	das    
  425a7c:	int3   
  425a7d:	(bad)  
  425a7e:	sysret 
  425a80:	int    0xc1
  425a82:	fldcw  WORD PTR [ebx+ebx*8+0x2a]
  425a86:	imul   edi,DWORD PTR [edi-0x54],0x2e
  425a8a:	and    eax,DWORD PTR [ebx-0x615b16f4]
  425a90:	loopne 0x425a14
  425a92:	inc    ebx
  425a93:	ds pop ss
  425a95:	sbb    ebx,DWORD PTR [eax+0xd0f98a]
  425a9b:	add    BYTE PTR [ebp+0x4f3707c0],cl
  425aa1:	idiv   DWORD PTR [ebp+0x532a00fa]
  425aa7:	fnstsw WORD PTR [ebp-0x79f06d12]
  425aad:	rol    DWORD PTR [ecx],cl
  425aaf:	add    BYTE PTR [esi+0x27000002],al
  425ab5:	adc    bh,BYTE PTR [ecx-0x1708e2d7]
  425abb:	xor    DWORD PTR [ebx-0x3a],edx
  425abe:	sbb    ah,dh
  425ac0:	or     dl,BYTE PTR [edi]
  425ac2:	call   0x92b38c04
  425ac7:	lods   eax,DWORD PTR ds:[esi]
  425ac8:	xchg   ebx,eax
  425ac9:	xchg   BYTE PTR [esi-0x65b1cb15],cl
  425acf:	lea    eax,[ebx+ecx*8]
  425ad2:	cmp    DWORD PTR [ecx+eiz*8+0x10],edx
  425ad6:	xchg   BYTE PTR ds:0xfce1f1c3,ch
  425adc:	cmp    DWORD PTR [ecx],0x3
  425adf:	je     0x425afd
  425ae1:	stos   DWORD PTR es:[edi],eax
  425ae2:	enter  0xe09d,0x55
  425ae6:	add    DWORD PTR [ecx+0x406bc06e],ebx
  425aec:	xchg   ecx,eax
  425aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425aee:	fs ja  0x425abb
  425af1:	loopne 0x425b0d
  425af3:	inc    ebp
  425af4:	int3   
  425af5:	iret   
  425af6:	push   es
  425af7:	iret   
  425af8:	mov    bl,0xe8
  425afa:	int    0x79
  425afc:	addr16 rcl dh,0x55
  425b00:	jp     0x425ad7
  425b02:	fxch   st(3)
  425b04:	pusha  
  425b05:	(bad)  
  425b06:	shr    BYTE PTR [ebx-0x20e65eb0],1
  425b0c:	pop    eax
  425b0d:	mov    ds:0x841f6d25,eax
  425b12:	sbb    eax,0x42f89915
  425b17:	scas   al,BYTE PTR es:[edi]
  425b18:	loopne 0x425ae7
  425b1a:	mov    es,edx
  425b1c:	call   0xab091d7c
  425b21:	sub    esi,eax
  425b23:	and    ebp,DWORD PTR [esi-0x7697041f]
  425b29:	mov    edi,0xa8b3e4f1
  425b2e:	out    dx,eax
  425b2f:	aad    0xae
  425b31:	lahf   
  425b32:	sbb    ch,BYTE PTR [ebp-0x4]
  425b35:	xor    esp,DWORD PTR [esi]
  425b37:	daa    
  425b38:	mov    ebx,DWORD PTR [edx-0x7440e343]
  425b3e:	repnz pushfw 
  425b41:	(bad)  
  425b43:	hlt    
  425b44:	xor    esp,DWORD PTR [edx]
  425b46:	xchg   edi,eax
  425b47:	out    dx,al
  425b48:	push   ds
  425b49:	mov    al,gs:0x7eb79d5a
  425b4f:	pop    ds
  425b50:	and    dh,dh
  425b52:	dec    ebp
  425b53:	and    DWORD PTR [esi+eax*2],ebp
  425b56:	push   ebp
  425b57:	(bad)  
  425b58:	mul    BYTE PTR [eax+0x1f71123c]
  425b5e:	lds    esi,FWORD PTR [ebx+0x23]
  425b61:	cmp    al,0x77
  425b63:	in     al,dx
  425b64:	inc    ecx
  425b65:	stos   BYTE PTR es:[edi],al
  425b66:	or     DWORD PTR [esi+0xe1e948d],edx
  425b6c:	xchg   BYTE PTR [ecx-0x446c7415],cl
  425b72:	or     DWORD PTR ds:0x4afce08e,edx
  425b78:	push   ss
  425b79:	sbb    eax,0xa214c4ce
  425b7e:	hlt    
  425b7f:	lock lock repnz xchg esi,eax
  425b83:	dec    al
  425b85:	and    al,BYTE PTR [eax-0x7]
  425b88:	sub    ch,BYTE PTR [ebx+0x4f]
  425b8b:	pop    esp
  425b8c:	sub    cl,al
  425b8e:	and    cl,BYTE PTR [eax]
  425b90:	arpl   cx,cx
  425b92:	lgs    ebx,FWORD PTR [ebp+0x1f]
  425b96:	retf   0xd151
  425b99:	fistp  QWORD PTR [ebx-0x172d32f4]
  425b9f:	shl    DWORD PTR [edi+0x5bc266f0],0x5
  425ba6:	sub    al,0x31
  425ba8:	xchg   edx,eax
  425ba9:	mov    esp,0xd4b5b717
  425bae:	or     dl,dh
  425bb0:	stc    
  425bb1:	jge    0x425b37
  425bb3:	pushf  
  425bb4:	xchg   DWORD PTR [edx],eax
  425bb6:	fidiv  WORD PTR [edi]
  425bb8:	mov    ah,0x20
  425bba:	sub    eax,ecx
  425bbc:	add    DWORD PTR es:[ebx+0x69],ebx
  425bc0:	enter  0x4f6a,0x3
  425bc4:	mov    ah,0xf1
  425bc6:	shr    DWORD PTR [edi+0x67],1
  425bc9:	ret    0xbc33
  425bcc:	cdq    
  425bcd:	(bad)  
  425bce:	call   0xae60:0x181327b3
  425bd5:	in     eax,dx
  425bd6:	call   FWORD PTR [edi+edi*4]
  425bd9:	lock push 0x1daa888a
  425bdf:	push   0x64ff5324
  425be4:	adc    esp,ebx
  425be6:	jmp    0xebdc3b4a
  425beb:	inc    cl
  425bed:	or     al,0x5a
  425bef:	call   0x941f5346
  425bf4:	cmp    DWORD PTR [edx],esp
  425bf6:	repnz les ebx,FWORD PTR [edx-0xc]
  425bfa:	add    edx,ebx
  425bfc:	mov    edx,edi
  425bfe:	sub    al,0x24
  425c00:	sar    dh,0x36
  425c03:	pop    esp
  425c04:	xchg   ch,bl
  425c06:	xchg   ebx,eax
  425c07:	fwait
  425c08:	add    eax,0xface4c46
  425c0d:	cmp    DWORD PTR [edi],ebx
  425c0f:	addr16 mov al,ds:0xedf
  425c13:	(bad)  
  425c14:	and    eax,DWORD PTR [ebx-0x72]
  425c17:	xchg   edi,eax
  425c18:	cmc    
  425c19:	iret   
  425c1a:	ins    BYTE PTR es:[edi],dx
  425c1b:	push   es
  425c1c:	mov    ebx,0xce4f8a4c
  425c21:	dec    ebp
  425c22:	(bad)  
  425c23:	data16 scas al,BYTE PTR es:[edi]
  425c25:	jb     0x425c18
  425c27:	mov    eax,0xa8b8c615
  425c2c:	and    bh,BYTE PTR [esi+0x3ce0785e]
  425c32:	add    esi,DWORD PTR [ecx]
  425c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c35:	sub    eax,0x7378bdfb
  425c3a:	or     ecx,esp
  425c3c:	mov    ds:0x390bda74,al
  425c41:	push   0x562e8430
  425c46:	cmp    BYTE PTR [eax-0x45],cl
  425c49:	mov    eax,0x9d84b2f9
  425c4e:	aad    0x5a
  425c50:	out    dx,eax
  425c51:	mov    edx,0xa55a2491
  425c56:	inc    BYTE PTR [ebx+0x63afd272]
  425c5c:	retf   
  425c5d:	inc    esi
  425c5e:	adc    BYTE PTR [eax],bh
  425c60:	sbb    DWORD PTR [eax+0x40],0xd1ff1e61
  425c67:	in     eax,dx
  425c68:	fild   DWORD PTR [ecx-0x28]
  425c6b:	jbe    0x425ce5
  425c6d:	js     0x425ca6
  425c6f:	mov    ?,WORD PTR [eax-0x3737604a]
  425c75:	add    BYTE PTR [ecx+0x5b],bl
  425c78:	sbb    al,0xaf
  425c7a:	out    0x7b,al
  425c7c:	and    dh,BYTE PTR [eax]
  425c7e:	dec    edx
  425c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c80:	fdiv   QWORD PTR [esi]
  425c82:	inc    esp
  425c83:	add    BYTE PTR [edi+0xb4eec93],0x36
  425c8a:	hlt    
  425c8b:	gs mov bl,0xb
  425c8f:	out    0x61,eax
  425c91:	ss test al,0x51
  425c94:	push   0x4db2b09f
  425c99:	rol    BYTE PTR ds:0x4d7dd437,cl
  425ca0:	pushf  
  425ca1:	mov    ecx,0x746882f4
  425ca6:	ins    BYTE PTR es:[edi],dx
  425ca7:	pop    edx
  425ca8:	ret    0x8a98
  425cab:	arpl   cx,bx
  425cad:	lea    eax,ds:0x354ce90b
  425cb3:	jp     0x425d18
  425cb5:	cmp    BYTE PTR [eax+esi*4-0x2c],ah
  425cb9:	mov    al,ds:0x1c52e8df
  425cbe:	in     al,0x4f
  425cc0:	fnsave [eax-0x1e]
  425cc3:	in     eax,0xbb
  425cc5:	xchg   BYTE PTR [esi],ah
  425cc7:	xchg   esp,eax
  425cc8:	xchg   ecx,eax
  425cc9:	push   ecx
  425cca:	rcl    BYTE PTR [eax-0x3d692e57],1
  425cd0:	std    
  425cd1:	adc    BYTE PTR [ecx],ch
  425cd3:	addr16 (bad) 
  425cd6:	test   eax,0xe366dd85
  425cdb:	call   0x5b972e71
  425ce0:	cli    
  425ce1:	lods   eax,DWORD PTR ds:[esi]
  425ce2:	xor    eax,0xb60cdf94
  425ce7:	jae    0x425cd8
  425ce9:	repnz addr16 in eax,0x61
  425ced:	sub    BYTE PTR [ebx-0x60cf3c1f],0x3b
  425cf4:	test   al,0xd
  425cf6:	xlat   BYTE PTR ds:[ebx]
  425cf7:	outs   dx,DWORD PTR ds:[esi]
  425cf8:	mov    esp,0xf05c6ee1
  425cfd:	(bad)  
  425cfe:	aad    0x21
  425d00:	addr16 out dx,eax
  425d02:	stc    
  425d03:	xchg   ecx,eax
  425d04:	jl     0x425d13
  425d06:	aam    0xec
  425d08:	xor    ah,ch
  425d0a:	adc    BYTE PTR [ebx],cl
  425d0c:	sbb    edi,DWORD PTR [esi+0x7f]
  425d0f:	ror    DWORD PTR [edi+0x19],cl
  425d12:	jnp    0x425cb5
  425d14:	and    al,0xe8
  425d16:	call   0x9bbf:0x25bdf4a
  425d1d:	aaa    
  425d1e:	frstor [eax+0x45a425ea]
  425d24:	aad    0x21
  425d26:	mov    eax,0xddf339a9
  425d2b:	pop    ss
  425d2c:	pop    esp
  425d2d:	sar    DWORD PTR [eax+esi*4-0x5b],cl
  425d31:	in     al,dx
  425d32:	xor    eax,DWORD PTR [edi+0x6dc6be28]
  425d38:	in     eax,dx
  425d39:	in     eax,dx
  425d3a:	add    BYTE PTR [eax],al
  425d3c:	mov    al,0x8a
  425d3e:	call   0xfa2657c4
  425d43:	mov    ebx,0x99242062
  425d48:	mov    edi,0xceaa2d4
  425d4d:	(bad)  
  425d4e:	add    DWORD PTR [eax],eax
  425d50:	xchg   BYTE PTR [edx],al
  425d52:	add    BYTE PTR [eax],al
  425d54:	(bad)  
  425d56:	add    eax,0x86851d8a
  425d5b:	btc    ecx,0xc8
  425d5f:	cmp    edi,DWORD PTR [ecx]
  425d61:	mov    cl,BYTE PTR [ebx+0x292431b1]
  425d67:	push   es
  425d68:	dec    ebx
  425d69:	stos   BYTE PTR es:[edi],al
  425d6a:	shr    DWORD PTR [ecx+ecx*8+0x14332123],cl
  425d71:	mov    edi,0x449f6278
  425d76:	(bad)  
  425d78:	loopne 0x425dc4
  425d7a:	nop
  425d7b:	ret    
  425d7c:	adc    bl,BYTE PTR [ecx+0x69]
  425d7f:	je     0x425d2e
  425d81:	dec    eax
  425d82:	in     eax,dx
  425d83:	test   DWORD PTR [ebx+0x63],eax
  425d86:	retf   0x75e0
  425d89:	clc    
  425d8a:	bound  edi,QWORD PTR [edi-0x4d5cbe]
  425d90:	ins    BYTE PTR es:[edi],dx
  425d91:	mov    dl,0x8c
  425d93:	jp     0x425dcd
  425d95:	cmp    ah,BYTE PTR [ebx+edx*2]
  425d98:	jp     0x425d1c
  425d9a:	jecxz  0x425e17
  425d9c:	push   ebp
  425d9d:	pop    ds
  425d9e:	dec    DWORD PTR [eax]
  425da0:	leave  
  425da1:	(bad)  
  425da2:	lock pop es
  425da4:	mov    esp,0xb1bde3fc
  425da9:	in     eax,0x21
  425dab:	leave  
  425dac:	mov    edx,0x6627941a
  425db1:	fstp   DWORD PTR [ebp-0x71fef1c1]
  425db7:	or     DWORD PTR [ecx+ebp*8+0x63d5cd97],edx
  425dbe:	sub    BYTE PTR [edx-0x164b72b],dl
  425dc4:	sub    al,0x4e
  425dc6:	jp     0x425d62
  425dc8:	outs   dx,DWORD PTR ds:[esi]
  425dc9:	sub    DWORD PTR [ebp-0x5ba4ab],ecx
  425dcf:	adc    BYTE PTR [edx+0x6739d7eb],dl
  425dd5:	pop    ebp
  425dd6:	dec    ebp
  425dd7:	stc    
  425dd8:	call   0xf594:0x16ee7020
  425ddf:	push   ecx
  425de0:	jl     0x425e4e
  425de2:	loopne 0x425de2
  425de4:	iret   
  425de5:	mov    eax,ds:0xf9cdc373
  425dea:	jo     0x425e2c
  425dec:	call   0x4e34:0x1458c348
  425df3:	fcomp  DWORD PTR [ecx-0x705134fe]
  425df9:	addr16 aad 0x5c
  425dfc:	sbb    eax,0x6215b9d9
  425e01:	xor    ebx,DWORD PTR [ebx+0x38e85587]
  425e07:	jg     0x425d93
  425e09:	pop    ss
  425e0a:	imul   edi,DWORD PTR [eax],0xde33e732
  425e10:	sub    eax,0x95a1dcd4
  425e15:	jmp    0xa311f4bb
  425e1a:	add    al,0xa5
  425e1c:	inc    bh
  425e1e:	fisubr WORD PTR [ebp+ebp*8-0x37]
  425e22:	inc    esi
  425e23:	jmp    0x425e06
  425e25:	retf   
  425e26:	sub    eax,esp
  425e28:	icebp  
  425e29:	and    eax,0x8a331148
  425e2e:	xlat   BYTE PTR ds:[ebx]
  425e2f:	in     eax,dx
  425e30:	adc    DWORD PTR [edx+ebx*2],edi
  425e33:	jbe    0x425e24
  425e35:	xchg   bl,bl
  425e37:	push   ds
  425e38:	cld    
  425e39:	fnsave ds:0x9fb0e2de
  425e3f:	ds jge 0x425dd5
  425e42:	xlat   BYTE PTR ds:[ebx]
  425e43:	fadd   DWORD PTR [esi+0xf]
  425e46:	inc    esp
  425e47:	cli    
  425e48:	cmp    edi,ebx
  425e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e4b:	or     BYTE PTR [ecx+0x47],ah
  425e4e:	data16 mov cl,0xab
  425e51:	and    eax,0xa711eed1
  425e56:	cmp    al,0x86
  425e58:	xchg   ecx,eax
  425e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e5a:	pop    edx
  425e5b:	push   ebp
  425e5c:	adc    ebp,DWORD PTR [eax+0x11]
  425e5f:	dec    eax
  425e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e61:	jb     0x425eda
  425e63:	push   esp
  425e64:	adc    cl,BYTE PTR [esi-0x3aa8c34]
  425e6a:	mov    bh,0xc6
  425e6c:	inc    edi
  425e6d:	pop    ecx
  425e6e:	clc    
  425e6f:	out    dx,al
  425e70:	sbb    DWORD PTR [ebx-0x1b64379e],esi
  425e76:	cdq    
  425e77:	nop
  425e78:	cld    
  425e79:	imul   ecx,DWORD PTR [edi+edi*4-0xc3ebca4],0xd
  425e81:	ss (bad) 
  425e83:	repnz stc 
  425e85:	out    0x4e,eax
  425e87:	pusha  
  425e88:	int    0xc6
  425e8a:	out    dx,al
  425e8b:	repnz (bad) 
  425e8d:	in     al,0xfe
  425e8f:	enter  0x2bd,0x25
  425e93:	pop    ebx
  425e94:	test   BYTE PTR [esi-0x6a],al
  425e97:	call   0x3472:0x2096dfac
  425e9e:	dec    edi
  425e9f:	lock dec eax
  425ea1:	shr    DWORD PTR [esi+ebx*8-0x50],1
  425ea5:	sbb    DWORD PTR [edi],esp
  425ea7:	outs   dx,BYTE PTR ds:[esi]
  425ea8:	in     eax,dx
  425ea9:	xchg   ecx,eax
  425eaa:	lea    eax,[ebp-0x4840a16f]
  425eb0:	rcr    BYTE PTR [esi+edx*2],cl
  425eb3:	or     eax,ebx
  425eb5:	retf   0xa391
  425eb8:	jbe    0x425ee6
  425eba:	in     eax,dx
  425ebb:	sbb    ch,BYTE PTR [edx+0x9ca5766]
  425ec1:	cmp    DWORD PTR [eax+ebx*8-0x2b7d54e6],ebx
  425ec8:	dec    ecx
  425ec9:	pop    ebx
  425eca:	pushf  
  425ecb:	data16 daa 
  425ecd:	sub    eax,0xfc60c334
  425ed2:	sub    ecx,DWORD PTR [esi-0x6b]
  425ed5:	fnstenv ds:0x4496d298
  425edb:	retf   
  425edc:	outs   dx,DWORD PTR ds:[esi]
  425edd:	or     eax,0x6fdb066b
  425ee2:	and    esi,DWORD PTR [edi]
  425ee4:	mov    ds:0xe24c921a,al
  425ee9:	mul    DWORD PTR [eax]
  425eeb:	ss std 
  425eed:	sub    ah,dh
  425eef:	dec    ebp
  425ef0:	(bad)  
  425ef2:	ja     0x425e79
  425ef4:	mov    ebx,0x257bc7a3
  425ef9:	xchg   ecx,eax
  425efa:	xchg   BYTE PTR [ebp+0x1190388c],bh
  425f00:	nop
  425f01:	jne    0x425eb7
  425f03:	outs   dx,BYTE PTR ds:[si]
  425f06:	mov    ebp,0x36014bd9
  425f0b:	push   ebx
  425f0c:	mov    dh,0x5d
  425f0e:	scas   al,BYTE PTR es:[edi]
  425f0f:	inc    edx
  425f10:	loop   0x425f1e
  425f12:	ds inc edx
  425f14:	and    al,0x42
  425f16:	hlt    
  425f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f18:	jecxz  0x425f0a
  425f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f1b:	fisubr WORD PTR [ebx+eax*1-0x45]
  425f1f:	or     edx,DWORD PTR ds:0x4ae6a731
  425f25:	sbb    al,0x20
  425f27:	into   
  425f28:	xchg   esp,eax
  425f29:	xchg   esp,eax
  425f2a:	xchg   esi,ebp
  425f2c:	cs scas eax,DWORD PTR es:[di]
  425f2f:	idiv   ebx
  425f31:	test   al,0x5e
  425f33:	mov    dh,0x0
  425f35:	in     eax,0x5b
  425f37:	add    al,0x27
  425f39:	xchg   esi,eax
  425f3a:	dec    ebx
  425f3b:	(bad)  
  425f3c:	fsub   QWORD PTR ds:0xc271540
  425f42:	jo     0x425f00
  425f44:	ss jno 0x425f98
  425f47:	add    BYTE PTR [edi],ch
  425f49:	aas    
  425f4a:	sub    edx,DWORD PTR [eax-0x7f9c464c]
  425f50:	inc    edx
  425f51:	out    0xbc,al
  425f53:	daa    
  425f54:	pusha  
  425f55:	dec    ebx
  425f56:	dec    edi
  425f57:	dec    esi
  425f58:	in     eax,0xa5
  425f5a:	mov    ch,0xa2
  425f5c:	mov    DWORD PTR [edx-0x2a],edi
  425f5f:	shl    DWORD PTR [esi+0x4b3377a8],1
  425f65:	cmc    
  425f66:	cld    
  425f67:	call   0x1e44:0x5423c217
  425f6e:	fldcw  WORD PTR [ebp+0x61]
  425f71:	inc    ebp
  425f72:	lea    ebp,[ebx-0x1f]
  425f75:	std    
  425f76:	cmp    al,0x8b
  425f78:	hlt    
  425f79:	fisttp WORD PTR [ebx-0x3c3ffc90]
  425f7f:	ficomp WORD PTR [ebx+0x38]
  425f82:	xchg   edx,eax
  425f83:	scas   eax,DWORD PTR es:[edi]
  425f84:	sub    ebp,esp
  425f86:	fs into 
  425f88:	icebp  
  425f89:	mov    dl,0x49
  425f8b:	fisub  WORD PTR [edx+eiz*8]
  425f8e:	sar    edi,1
  425f90:	daa    
  425f91:	adc    al,0x71
  425f93:	inc    ebx
  425f94:	loopne 0x425fee
  425f96:	scas   al,BYTE PTR es:[edi]
  425f97:	ffree  st(4)
  425f99:	in     eax,0xcd
  425f9b:	push   esp
  425f9c:	fisttp QWORD PTR [ecx-0x2f7ec606]
  425fa2:	stos   DWORD PTR es:[edi],eax
  425fa3:	mov    dl,0x53
  425fa5:	imul   ecx,DWORD PTR [esp+eiz*8],0x11
  425fa9:	pop    eax
  425faa:	jbe    0x425fb7
  425fac:	or     al,BYTE PTR [eax-0x1e]
  425faf:	(bad)  
  425fb0:	dec    esi
  425fb1:	add    al,0xc1
  425fb3:	ja     0x425f70
  425fb5:	je     0x425f47
  425fb7:	dec    ecx
  425fb8:	(bad)  
  425fba:	in     al,dx
  425fbb:	popf   
  425fbc:	xor    eax,DWORD PTR [edi+0x3bd4e844]
  425fc2:	adc    BYTE PTR [esi+0x19],0x1
  425fc6:	hlt    
  425fc7:	fidivr WORD PTR [esi-0x2c]
  425fcb:	and    DWORD PTR ds:0x37b66fbe,0xa1959a28
  425fd5:	in     eax,dx
  425fd6:	push   ds
  425fd7:	inc    ecx
  425fd8:	retf   0xe8
  425fdb:	add    BYTE PTR [edx-0x39253b74],cl
  425fe1:	ficomp DWORD PTR [esi+0x2983e7dc]
  425fe7:	mov    WORD PTR [ebp+0x4f],ss
  425fea:	retf   0x927b
  425fed:	fadd   DWORD PTR [ecx]
  425fef:	add    BYTE PTR [esi-0x16fffffe],al
  425ff5:	(bad)  
  425ff6:	fistp  WORD PTR [edx+0xe]
  425ff9:	push   ecx
  425ffa:	in     eax,0x0
  425ffc:	retf   
  425ffd:	lods   eax,DWORD PTR ds:[esi]
  425ffe:	or     ah,BYTE PTR [ecx-0x67]
  426001:	pop    eax
  426002:	sub    ah,BYTE PTR [esi]
  426004:	dec    esi
  426005:	push   eax
  426006:	mov    edi,0x49e79713
  42600b:	inc    esi
  42600c:	lea    ebp,[ebx-0x4b497ed1]
  426012:	mov    ecx,0xf2b84a55
  426017:	jecxz  0x425fc6
  426019:	fidiv  DWORD PTR [edi-0x62]
  42601c:	(bad)  
  42601e:	add    al,0xce
  426020:	xchg   edi,eax
  426021:	adc    eax,DWORD PTR [ebp+0x47284c63]
  426027:	mov    ebx,0xbf7be23f
  42602c:	mov    dl,dl
  42602e:	jae    0x426019
  426030:	or     al,0xe9
  426032:	xor    DWORD PTR [ebx-0x6cb7d6e0],ebp
  426038:	(bad)  
  426039:	dec    ecx
  42603a:	xchg   esi,eax
  42603b:	jo     0x426030
  42603d:	test   eax,0xbb614f46
  426042:	mov    al,ds:0xfe8e5411
  426047:	cmp    BYTE PTR [edi+0x22],cl
  42604a:	fldcw  WORD PTR [ecx]
  42604c:	adc    bh,BYTE PTR [edx-0xbe483c1]
  426052:	dec    ebp
  426053:	push   esp
  426054:	es inc ebp
  426056:	pop    ds
  426057:	test   eax,0x56f0902c
  42605c:	jne    0x4260c3
  42605e:	inc    esi
  42605f:	cmp    eax,0x82cdcffa
  426064:	not    DWORD PTR [edx+edx*1-0x6]
  426068:	inc    ebp
  426069:	jno    0x426004
  42606b:	mov    dl,0xc
  42606d:	jbe    0x426014
  42606f:	mov    ebp,0xce9304d8
  426074:	pop    eax
  426075:	stc    
  426076:	popf   
  426077:	test   DWORD PTR [eax+0x8],0x827a2054
  42607e:	xor    eax,0xda86d1db
  426083:	xchg   ebx,eax
  426084:	mov    ds:0x63c89d23,eax
  426089:	sbb    eax,0xedbbb366
  42608e:	jecxz  0x4260e9
  426090:	es or  eax,0xd8166a
  426096:	push   cs
  426097:	mov    cl,0xf9
  426099:	or     eax,0x173180f7
  42609e:	call   0x3404:0x21d00211
  4260a5:	rol    BYTE PTR [esp+edi*2],0xdc
  4260a9:	std    
  4260aa:	dec    ebx
  4260ab:	mov    ebx,0x7c5a7e73
  4260b0:	cdq    
  4260b1:	ins    BYTE PTR es:[edi],dx
  4260b2:	or     eax,0x60cfd4e2
  4260b7:	jns    0x4260b8
  4260b9:	xchg   esi,eax
  4260ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260bb:	lock das 
  4260bd:	out    0x47,al
  4260bf:	xor    DWORD PTR [edx-0x5e],esi
  4260c2:	xchg   edi,eax
  4260c3:	icebp  
  4260c4:	(bad)  
  4260c5:	int    0x2e
  4260c7:	cmp    dh,ch
  4260c9:	adc    al,0xe4
  4260cb:	pop    es
  4260cc:	add    al,BYTE PTR [ebp+ebp*8-0x6d2b6df9]
  4260d3:	jmp    0xc5e14f99
  4260d8:	ret    0x2879
  4260db:	loope  0x426108
  4260dd:	jmp    0x426089
  4260df:	rcr    DWORD PTR [edi+0x37e5eba3],cl
  4260e5:	sub    edi,edi
  4260e7:	outs   dx,DWORD PTR ds:[esi]
  4260e8:	fucom  st(4)
  4260ea:	adc    al,0xbe
  4260ec:	or     BYTE PTR [ebx-0x58f44772],ah
  4260f2:	mov    edx,0x28191837
  4260f7:	nop
  4260f8:	jns    0x426144
  4260fa:	sbb    DWORD PTR [edx],ebx
  4260fc:	(bad)
  426100:	cmp    esp,DWORD PTR [ebx+0x2a]
  426103:	add    BYTE PTR [edx-0x5310eb2d],cl
  426109:	test   al,0x84
  42610b:	mov    ebp,0x9849ed52
  426110:	lahf   
  426111:	sbb    esp,DWORD PTR [eax+0x28]
  426114:	scas   eax,DWORD PTR es:[edi]
  426115:	jnp    0x426194
  426117:	(bad)
  42611d:	sub    DWORD PTR [esi],edi
  42611f:	xchg   esi,eax
  426120:	and    DWORD PTR [esi+0x3aa0d0f],ecx
  426126:	mov    ah,dl
  426128:	jecxz  0x426175
  42612a:	ins    DWORD PTR es:[edi],dx
  42612b:	int3   
  42612c:	dec    esp
  42612d:	clc    
  42612e:	scas   eax,DWORD PTR es:[edi]
  42612f:	pop    ebx
  426130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426131:	not    BYTE PTR [eax-0x7d6a2eef]
  426137:	pushf  
  426138:	or     eax,0xe4576765
  42613d:	cld    
  42613e:	or     eax,0xf3e4ea82
  426143:	fs add al,0x55
  426146:	aaa    
  426147:	add    BYTE PTR [edx],bh
  426149:	sbb    DWORD PTR [eax],eax
  42614b:	ins    BYTE PTR es:[edi],dx
  42614c:	jl     0x426101
  42614e:	sbb    eax,0x4b09bfee
  426153:	pusha  
  426154:	pop    ss
  426155:	add    bl,BYTE PTR [ebx-0x4f]
  426158:	loope  0x4261b6
  42615a:	sbb    DWORD PTR ds:0xb60af584,eax
  426160:	jb     0x42618a
  426162:	repz or bh,BYTE PTR ds:[ebp+0x74]
  426167:	inc    esi
  426168:	sub    DWORD PTR [ebx-0x28848b3f],esp
  42616e:	outs   dx,DWORD PTR ds:[esi]
  42616f:	cmc    
  426170:	retf   0x3e06
  426173:	int3   
  426174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426175:	and    BYTE PTR ds:[ebx],al
  426178:	add    BYTE PTR [edx+edx*1+0x4cc61b90],al
  42617f:	push   0x69
  426181:	inc    edx
  426182:	fdiv   QWORD PTR [ebx]
  426184:	mov    ch,0x8f
  426186:	lods   eax,DWORD PTR ds:[esi]
  426187:	hlt    
  426188:	popa   
  426189:	out    dx,eax
  42618a:	sub    BYTE PTR [edi-0x46aaf0e0],bh
  426190:	imul   edx,DWORD PTR [esi],0x3d
  426193:	lea    esi,[ecx+0x1589bb6e]
  426199:	out    dx,eax
  42619a:	cli    
  42619b:	out    0xe0,eax
  42619d:	dec    ebx
  42619e:	dec    esp
  42619f:	jne    0x426124
  4261a1:	jecxz  0x426195
  4261a3:	inc    ebx
  4261a4:	pop    ds
  4261a5:	aas    
  4261a6:	(bad)  [ecx+0xa]
  4261a9:	mov    esi,0x7c9ffd18
  4261ae:	in     al,0x7c
  4261b0:	inc    eax
  4261b1:	in     al,0x67
  4261b3:	cmp    ah,bl
  4261b5:	neg    BYTE PTR [ecx+0x2a]
  4261b8:	add    DWORD PTR [edi-0x7a529ffe],edx
  4261be:	nop
  4261bf:	mov    esp,es
  4261c1:	mov    edi,0x439be646
  4261c6:	(bad)  
  4261c7:	mov    ah,0x9e
  4261c9:	call   0x27e69e8e
  4261ce:	pop    ebp
  4261cf:	sub    eax,0x878b2553
  4261d4:	or     cl,BYTE PTR [esi+0x1f80dbcd]
  4261da:	test   BYTE PTR ds:0xb37dbe32,0x1e
  4261e1:	xor    eax,0x45b3aa21
  4261e6:	pop    ebx
  4261e7:	or     al,0x8f
  4261e9:	mov    bl,0xa6
  4261eb:	mov    edi,0x9fd2eb67
  4261f0:	adc    eax,0x72a30fe4
  4261f5:	pusha  
  4261f6:	fnsave [ebx]
  4261f8:	jne    0x4261cc
  4261fa:	xchg   ecx,eax
  4261fb:	mov    eax,ds:0x4906b2aa
  426200:	lods   eax,DWORD PTR ds:[esi]
  426201:	jle    0x42620a
  426203:	rcl    BYTE PTR [esi+0x39],0xd2
  426207:	(bad)  
  426208:	dec    ebp
  426209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42620a:	push   esi
  42620b:	clc    
  42620c:	je     0x4261df
  42620e:	or     eax,0x6d807349
  426213:	outs   dx,BYTE PTR ds:[esi]
  426214:	das    
  426215:	push   edx
  426216:	shl    BYTE PTR [eax-0x5e98d785],0xc2
  42621d:	and    DWORD PTR [ebp-0x1d81aa89],0x4a0caf74
  426227:	lds    ebx,FWORD PTR [esi]
  426229:	inc    esi
  42622a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42622b:	inc    esi
  42622c:	jle    0x426282
  42622e:	jns    0x426291
  426230:	(bad)  
  426231:	in     eax,dx
  426232:	push   ss
  426233:	and    al,0x91
  426235:	push   ecx
  426236:	(bad)  
  426237:	rcl    DWORD PTR [edi+eax*8+0x6190fe7d],1
  42623e:	push   ecx
  42623f:	dec    edi
  426240:	fwait
  426241:	jmp    0x42627a
  426243:	(bad)  
  426244:	fcmovnu st,st(7)
  426246:	out    0x99,al
  426248:	ja     0x42624f
  42624a:	jp     0x42625d
  42624c:	test   BYTE PTR ds:0xb0d792bd,bh
  426252:	dec    ebp
  426253:	popf   
  426254:	aaa    
  426255:	and    eax,0x7441b342
  42625a:	or     ah,BYTE PTR [edi-0x6df082b3]
  426260:	push   cs
  426261:	retf   0x334a
  426264:	es in  al,0x7
  426267:	out    dx,eax
  426268:	out    dx,al
  426269:	mov    bh,0x5b
  42626b:	test   DWORD PTR [edx+0x25a5062a],edi
  426271:	pop    edi
  426272:	or     DWORD PTR [eax+eax*4+0x4d],esi
  426276:	xchg   esi,ebp
  426278:	jno    0x4262da
  42627a:	add    BYTE PTR [eax],al
  42627c:	inc    eax
  42627d:	stos   BYTE PTR es:[edi],al
  42627e:	pop    edx
  42627f:	sbb    bh,dl
  426281:	cli    
  426282:	inc    eax
  426283:	cli    
  426284:	outs   dx,BYTE PTR ds:[esi]
  426285:	jmp    0xe612:0xa92fe400
  42628c:	sbb    bl,bl
  42628e:	add    DWORD PTR [eax],eax
  426290:	xchg   BYTE PTR [edx],al
  426292:	add    BYTE PTR [eax],al
  426294:	add    eax,DWORD PTR [eax-0x31aa3250]
  42629a:	pop    ds
  42629b:	pop    esi
  42629c:	mov    ebx,0x85e4cd91
  4262a1:	jl     0x4262a5
  4262a3:	bound  ebx,QWORD PTR ds:0x63d546af
  4262a9:	lods   al,BYTE PTR ds:[esi]
  4262aa:	mov    edx,0xa4451162
  4262af:	js     0x426321
  4262b1:	or     bh,BYTE PTR [eax+0x2b]
  4262b4:	clc    
  4262b5:	push   edi
  4262b6:	and    esp,esi
  4262b8:	mov    al,ds:0xeaf108df
  4262bd:	mov    edx,0x30346b85
  4262c2:	mov    DWORD PTR [ebp-0x3],ebp
  4262c5:	popf   
  4262c6:	jne    0x426288
  4262c8:	xor    DWORD PTR [ebp+0xe],ebx
  4262cb:	pop    edi
  4262cc:	or     bl,dl
  4262ce:	dec    esp
  4262cf:	arpl   WORD PTR [eax],cx
  4262d1:	test   BYTE PTR ds:0x6f34fd0f,ch
  4262d7:	ret    0xca9a
  4262da:	mov    bl,ch
  4262dc:	and    dh,ch
  4262de:	sti    
  4262df:	and    ebp,DWORD PTR [edx-0x151a52de]
  4262e5:	push   edx
  4262e6:	xchg   ebx,eax
  4262e7:	or     cl,BYTE PTR [edx+0x37cdface]
  4262ed:	mov    dl,0xf4
  4262ef:	adc    ebx,DWORD PTR [edx+0x58]
  4262f2:	int3   
  4262f3:	ins    BYTE PTR es:[edi],dx
  4262f4:	sti    
  4262f5:	inc    edx
  4262f6:	sbb    esi,DWORD PTR [esp+ebp*1-0x5230ba63]
  4262fd:	frstor [ecx]
  4262ff:	add    edi,DWORD PTR [ebp-0x2a9e772d]
  426305:	push   ebx
  426306:	stc    
  426307:	xor    BYTE PTR [eax],cl
  426309:	scas   al,BYTE PTR es:[edi]
  42630a:	xchg   ecx,eax
  42630b:	xor    BYTE PTR [esi-0x2062beb3],dl
  426311:	aaa    
  426312:	inc    esi
  426313:	in     al,dx
  426314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426315:	pop    esp
  426316:	add    cl,BYTE PTR ds:0x871a6f34
  42631c:	adc    BYTE PTR [ecx],ch
  42631e:	hlt    
  42631f:	mov    dl,0xa
  426321:	in     al,0x31
  426323:	mov    bh,0x2f
  426325:	hlt    
  426326:	shl    ecx,1
  426328:	jo     0x426335
  42632a:	mov    dl,0x54
  42632c:	fisubr WORD PTR [ecx+edi*1]
  42632f:	add    dh,BYTE PTR [esi-0x60]
  426332:	test   BYTE PTR [eax-0x16],bh
  426335:	adc    eax,DWORD PTR [edx-0x4b926777]
  42633b:	add    DWORD PTR [eax+ebx*4-0x80],edx
  42633f:	sar    BYTE PTR [ebx-0x64],1
  426342:	sti    
  426343:	jl     0x42639c
  426345:	push   esp
  426346:	mov    dl,0x55
  426348:	sbb    DWORD PTR [ecx-0x5a],edx
  42634b:	out    dx,eax
  42634c:	xchg   DWORD PTR [esi-0x6c],esi
  42634f:	(bad)  
  426350:	lea    eax,[edi-0x31]
  426353:	push   ds
  426354:	imul   BYTE PTR [edi]
  426356:	cmp    eax,0xe7814ddd
  42635b:	dec    ebx
  42635c:	(bad)  
  42635d:	mul    BYTE PTR [edi-0x7a9d434e]
  426363:	mov    bh,0x39
  426365:	jecxz  0x426308
  426367:	pop    ebx
  426368:	js     0x426330
  42636a:	xor    eax,0xf3307705
  42636f:	je     0x4263b9
  426371:	mov    esi,0x4d685dbe
  426376:	and    eax,0x4ba871d6
  42637b:	test   dh,al
  42637d:	lock cmp DWORD PTR [ecx-0x3d],edx
  426381:	fs xchg esp,eax
  426383:	retf   0xe616
  426386:	xor    eax,0x76776f13
  42638b:	and    al,0xbf
  42638d:	imul   ebp,edx,0x4f
  426390:	out    dx,eax
  426391:	in     al,0x44
  426393:	lock inc esp
  426395:	push   0xffffff95
  426397:	add    BYTE PTR [edi+0x1d],0x4e
  42639b:	call   0x7b37:0x2f1343d1
  4263a2:	retf   
  4263a3:	shr    BYTE PTR [ebx],0x5e
  4263a6:	and    ah,al
  4263a8:	pusha  
  4263a9:	(bad)  
  4263ab:	push   esp
  4263ac:	shl    DWORD PTR [edx+0x72b18269],cl
  4263b2:	in     al,dx
  4263b3:	ds mov ch,0xbc
  4263b6:	mov    ?,WORD PTR [edx-0x66a0ee79]
  4263bc:	mov    gs,WORD PTR [ebp+0x3503ce7a]
  4263c2:	jmp    0x42640b
  4263c4:	or     bl,cl
  4263c6:	xor    bl,ah
  4263c8:	sub    eax,0x5da8782f
  4263cd:	pop    esp
  4263ce:	fsubr  QWORD PTR [esi-0xe0745be]
  4263d4:	xor    al,0x30
  4263d6:	pop    edx
  4263d7:	add    BYTE PTR gs:[ebx*4+0x50daaf79],ch
  4263df:	and    eax,0x59bbc83a
  4263e4:	lods   eax,DWORD PTR ds:[esi]
  4263e5:	sub    al,BYTE PTR [edx+esi*4]
  4263e8:	push   0x12
  4263ea:	and    eax,0xc8d8a539
  4263ef:	shl    BYTE PTR [edi+0x12bdcd9],cl
  4263f5:	mov    ch,0xce
  4263f7:	jno    0x426459
  4263f9:	(bad)  
  4263fa:	in     al,0x3f
  4263fc:	icebp  
  4263fd:	pop    ebp
  4263fe:	cmp    DWORD PTR [edi+0x56ebbc19],ebx
  426404:	outs   dx,BYTE PTR ds:[esi]
  426405:	inc    esp
  426406:	ficom  WORD PTR [ebx+0x1b3145a4]
  42640c:	or     esp,DWORD PTR [eax*2-0x26be60d9]
  426413:	inc    ecx
  426414:	dec    DWORD PTR [ebp-0x6a]
  426417:	push   ecx
  426418:	xchg   BYTE PTR [eax],dl
  42641a:	out    dx,eax
  42641b:	pop    eax
  42641c:	pop    esp
  42641d:	test   DWORD PTR [edx],ebx
  42641f:	hlt    
  426420:	retf   
  426421:	es repnz xchg ecx,eax
  426424:	and    BYTE PTR [edx],dl
  426426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426427:	cs xchg ebx,eax
  426429:	std    
  42642a:	retf   
  42642b:	mov    ecx,0x57b1e8b8
  426430:	sbb    edi,DWORD PTR [edx+0x146afa4]
  426436:	mov    dh,0xb9
  426438:	and    BYTE PTR [edx+0x21],cl
  42643b:	sub    al,0xc7
  42643d:	int3   
  42643e:	loope  0x4264a4
  426440:	mov    BYTE PTR [ebp+0x6e74e218],cl
  426446:	mov    ecx,0xf2b6f66e
  42644b:	jmp    0x42644b
  42644d:	(bad)  
  42644e:	mov    fs,WORD PTR [ebp+0x8]
  426451:	pop    es
  426452:	cwde   
  426453:	pop    ecx
  426454:	dec    esp
  426455:	or     al,dl
  426457:	lahf   
  426458:	push   ds
  426459:	pop    edi
  42645a:	in     eax,0xc5
  42645c:	inc    ecx
  42645d:	dec    esp
  42645e:	fcom   DWORD PTR [esi]
  426460:	sbb    ecx,DWORD PTR [esi+0x223fcf0f]
  426466:	mov    ebp,0xd4656765
  42646b:	adc    edi,DWORD PTR [ebp+0x24]
  42646e:	dec    ebx
  42646f:	sahf   
  426470:	xchg   ecx,eax
  426471:	shl    BYTE PTR [ebx],0xe9
  426474:	jecxz  0x4264c5
  426476:	push   es
  426477:	sbb    al,0x37
  426479:	or     BYTE PTR [edx-0x5e7d1f7],cl
  42647f:	test   BYTE PTR [edx+0x407adb61],bh
  426485:	lock mov bl,0xb2
  426488:	xor    dh,ah
  42648a:	cmp    BYTE PTR [eax+eax*2+0x60],bh
  42648e:	add    al,0x46
  426490:	cmc    
  426491:	pop    edi
  426492:	(bad)  
  426494:	mov    ebp,0xb3c2694e
  426499:	and    BYTE PTR [ecx],dl
  42649b:	sbb    edx,DWORD PTR [esp+ebp*2+0x3b]
  42649f:	ja     0x4264b8
  4264a1:	enter  0x442,0x7f
  4264a5:	pop    edx
  4264a6:	mov    dl,0xe8
  4264a8:	imul   esi,DWORD PTR [eax],0xfffffffb
  4264ab:	sbb    dh,dh
  4264ad:	fxch   st(4)
  4264af:	sti    
  4264b0:	dec    ebx
  4264b1:	aas    
  4264b2:	les    esi,FWORD PTR [eax+0x2f2ba69c]
  4264b8:	add    eax,0x2291bfd6
  4264bd:	sbb    BYTE PTR [ecx+0x4e],cl
  4264c0:	(bad)  
  4264c1:	adc    ebx,DWORD PTR [eax-0x6b]
  4264c4:	neg    eax
  4264c6:	inc    esi
  4264c7:	jge    0x4264ea
  4264c9:	dec    ebx
  4264ca:	xchg   esp,eax
  4264cb:	lods   al,BYTE PTR ds:[esi]
  4264cc:	jne    0x42648b
  4264ce:	mov    al,0x64
  4264d0:	jno    0x42654d
  4264d2:	ja     0x42650f
  4264d4:	test   BYTE PTR [ebx+0x3c31b7df],al
  4264da:	test   edi,ebx
  4264dc:	xchg   ebp,eax
  4264dd:	xor    dl,BYTE PTR [edi+0x1e]
  4264e0:	outs   dx,DWORD PTR ds:[esi]
  4264e1:	and    eax,0x2707217
  4264e6:	lds    edi,FWORD PTR [eax]
  4264e8:	jle    0x4264fb
  4264ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264eb:	jg     0x4264d8
  4264ed:	aad    0xa4
  4264ef:	fwait
  4264f0:	ins    BYTE PTR es:[edi],dx
  4264f1:	mov    ecx,ecx
  4264f3:	xor    BYTE PTR [ecx-0x7e9c3c8d],0x81
  4264fa:	mov    esi,edx
  4264fc:	or     DWORD PTR [edi-0x70],0xfc534195
  426503:	mov    ecx,0xdadb74a3
  426508:	(bad)  
  426509:	mov    ebx,0xde4f9160
  42650e:	fwait
  42650f:	pop    esi
  426510:	or     ecx,DWORD PTR [edx+0xb6ee342]
  426516:	xchg   esp,eax
  426517:	jae    0x42651f
  426519:	cli    
  42651a:	add    BYTE PTR [eax],al
  42651c:	mov    dh,0xe4
  42651e:	xlat   BYTE PTR ds:[ebx]
  42651f:	push   esp
  426520:	xlat   BYTE PTR ds:[ebx]
  426521:	ja     0x4264da
  426523:	out    0xf3,al
  426525:	ss icebp 
  426527:	mov    esp,0x25dda727
  42652c:	sahf   
  42652d:	fld    QWORD PTR [ecx]
  42652f:	add    BYTE PTR [esi-0x2afffffe],al
  426535:	fadd   DWORD PTR [esi+0x32]
  426538:	and    al,0xa1
  42653a:	sbb    eax,0xef011039
  42653f:	leave  
  426540:	mov    edx,0x17820ac4
  426545:	jecxz  0x4265a5
  426547:	sub    ecx,DWORD PTR [eax]
  426549:	push   edi
  42654a:	test   ebp,edi
  42654c:	mov    ch,0xd3
  42654e:	push   edx
  42654f:	xchg   ecx,eax
  426550:	jo     0x4265a9
  426552:	test   DWORD PTR [edx-0x2],0xd48869e0
  426559:	lahf   
  42655a:	mov    cl,al
  42655c:	mov    BYTE PTR [ecx+0x24690e8d],bl
  426562:	push   0xffffff9d
  426564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426565:	inc    esi
  426566:	mov    ecx,0x5c547ec8
  42656b:	or     eax,esp
  42656d:	and    BYTE PTR [edx+0x45fc08b5],0xb9
  426574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426575:	add    DWORD PTR [ebp-0x69c006d5],eax
  42657b:	sub    al,BYTE PTR [ebp+0x40]
  42657e:	adc    al,0xa2
  426580:	sub    al,0x29
  426582:	mov    ah,0x26
  426584:	cmp    eax,0x3f
  426587:	sbb    BYTE PTR [ebp+0x58],dl
  42658a:	add    DWORD PTR [edx-0x5ab1a792],ebp
  426590:	jae    0x426587
  426592:	pop    ecx
  426593:	cli    
  426594:	pushf  
  426595:	jecxz  0x4265af
  426597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426598:	push   ebp
  426599:	inc    esi
  42659a:	jp     0x426554
  42659c:	std    
  42659d:	xor    esi,DWORD PTR gs:[ebx+0x76]
  4265a1:	cmp    eax,0xf6823c37
  4265a6:	lods   eax,DWORD PTR ds:[esi]
  4265a7:	cli    
  4265a8:	leave  
  4265a9:	pushf  
  4265aa:	and    eax,0x2dcc294b
  4265af:	lahf   
  4265b0:	add    BYTE PTR [edx],dl
  4265b2:	or     al,BYTE PTR [ecx]
  4265b4:	retf   
  4265b5:	sbb    eax,DWORD PTR [edi-0x170a634c]
  4265bb:	leave  
  4265bc:	dec    edi
  4265bd:	fsubr  QWORD PTR [edx]
  4265bf:	int3   
  4265c0:	jmp    0xfc7a:0x441abc4a
  4265c7:	lahf   
  4265c8:	mov    cl,0xbe
  4265ca:	push   edx
  4265cb:	jno    0x42662a
  4265cd:	sbb    bl,BYTE PTR [ebx]
  4265cf:	pop    ds
  4265d0:	sbb    edx,ebx
  4265d2:	inc    DWORD PTR [ecx+0x5]
  4265d5:	push   0xd6f16a87
  4265da:	ins    DWORD PTR es:[edi],dx
  4265db:	sahf   
  4265dc:	dec    ebx
  4265dd:	fdiv   QWORD PTR es:[ebx+0x190a8c26]
  4265e4:	sub    al,al
  4265e6:	mov    ebp,0x819b2242
  4265eb:	sbb    ebx,DWORD PTR [ebx+0x727e42ca]
  4265f1:	sub    al,0xb3
  4265f3:	xor    eax,DWORD PTR [edx-0x1b9499e6]
  4265f9:	cs inc ebx
  4265fb:	push   edi
  4265fc:	nop
  4265fd:	xchg   esp,eax
  4265fe:	adc    BYTE PTR [ebx-0x2f],0x79
  426602:	loope  0x4265eb
  426604:	unpcklps xmm3,xmm5
  426607:	mov    eax,DWORD PTR [esi*1+0x6c911f18]
  42660e:	sub    eax,0x3144e320
  426613:	dec    esp
  426614:	mov    al,ds:0xe436931e
  426619:	sbb    dl,BYTE PTR [esi+ecx*2-0x8b0979f]
  426620:	jb     0x426689
  426622:	lea    ecx,[edx]
  426624:	ret    
  426625:	or     eax,0x7516291
  42662a:	jb     0x426618
  42662c:	mov    bh,BYTE PTR [ebp-0x50aaf7db]
  426632:	cmp    bh,BYTE PTR [ebp-0x4d5926a9]
  426638:	push   edx
  426639:	rol    bl,1
  42663b:	cs inc ecx
  42663d:	out    dx,eax
  42663e:	in     eax,0x17
  426640:	adc    ch,al
  426642:	add    DWORD PTR [esi],ecx
  426644:	vmwrite edx,DWORD PTR [esi-0x4963ae23]
  42664b:	mov    ah,0x96
  42664d:	jecxz  0x42664c
  42664f:	add    ebx,DWORD PTR [esp+ecx*4-0x1f77200a]
  426656:	adc    al,0xc5
  426658:	and    al,BYTE PTR [esi-0x29]
  42665b:	pop    ecx
  42665c:	fidiv  WORD PTR [ecx+eax*4]
  42665f:	xchg   esp,eax
  426660:	mov    edx,0x8d1c89b7
  426665:	xchg   ecx,eax
  426666:	sbb    cl,BYTE PTR [eax-0x3751eef5]
  42666c:	dec    edx
  42666d:	sbb    BYTE PTR [edx+0x6a],0xd1
  426671:	xchg   esi,eax
  426672:	lds    esp,FWORD PTR [ebp+0x5e51ec3b]
  426678:	xchg   esp,eax
  426679:	mov    BYTE PTR [eax+ecx*4],bl
  42667c:	jge    0x4266d2
  42667e:	nop
  42667f:	arpl   WORD PTR [edi],si
  426681:	dec    ebx
  426682:	iret   
  426683:	hlt    
  426684:	xchg   ecx,eax
  426685:	xchg   ebp,eax
  426686:	xor    cl,0x5b
  426689:	test   al,0x15
  42668b:	dec    eax
  42668c:	jo     0x426642
  42668e:	test   DWORD PTR [ecx+0x7103ea79],ecx
  426694:	fwait
  426695:	dec    esp
  426696:	inc    ebp
  426697:	xor    BYTE PTR [ecx+0x64968726],dh
  42669d:	add    DWORD PTR [eax],edx
  42669f:	mov    ecx,DWORD PTR [eax-0x77]
  4266a2:	mov    edi,0x56af5b94
  4266a7:	jg     0x4266b2
  4266a9:	outs   dx,BYTE PTR ds:[esi]
  4266aa:	xchg   eax,ecx
  4266ac:	and    eax,0x942782d2
  4266b1:	ins    DWORD PTR es:[edi],dx
  4266b2:	outs   dx,DWORD PTR ds:[esi]
  4266b3:	pop    ebp
  4266b4:	pop    ebp
  4266b5:	sbb    al,0xaf
  4266b7:	imul   ebp,DWORD PTR ds:0x5c20627f,0x5e4b5244
  4266c1:	push   cs
  4266c2:	gs pop es
  4266c4:	int3   
  4266c5:	aam    0x45
  4266c7:	in     al,dx
  4266c8:	mov    cl,0xf2
  4266ca:	shl    DWORD PTR [ebp+0x68fefb],1
  4266d0:	enter  0xe1d6,0x9a
  4266d4:	lods   al,BYTE PTR ds:[esi]
  4266d5:	dec    ebp
  4266d6:	mov    dh,0xbb
  4266d8:	add    al,0xf5
  4266da:	sbb    DWORD PTR es:[ecx-0x33ee1fd1],esi
  4266e1:	mov    ?,WORD PTR [ecx-0x15bfddd1]
  4266e7:	mov    esi,0x12328e41
  4266ec:	(bad)  
  4266ed:	mov    eax,0xe965f2fd
  4266f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266f3:	popf   
  4266f4:	adc    eax,0x6bb168cf
  4266f9:	mul    DWORD PTR [ebp+0x29]
  4266fc:	ja     0x42672d
  4266fe:	adc    al,0x43
  426700:	add    al,0xe6
  426702:	ret    0x8876
  426705:	and    BYTE PTR [edi+0x5c523845],dl
  42670b:	add    ebx,DWORD PTR [esi-0x710a8e8d]
  426711:	sub    DWORD PTR [esi+edx*4],edi
  426714:	pop    edx
  426715:	pop    ss
  426716:	mov    edi,0x17f41525
  42671b:	mov    cl,0xe3
  42671d:	cmp    BYTE PTR [eax+0x9],al
  426720:	inc    edi
  426721:	pop    ecx
  426722:	loop   0x426791
  426724:	cmp    DWORD PTR [ecx-0x77],ebp
  426727:	ss xchg bl,cl
  42672a:	shr    ah,0x25
  42672d:	fstp   QWORD PTR [ebp+0x5ca612aa]
  426733:	xchg   esp,eax
  426734:	sar    BYTE PTR [edi],cl
  426736:	pop    edi
  426737:	xchg   edx,eax
  426738:	enter  0xd23e,0x86
  42673c:	pop    ds
  42673d:	test   BYTE PTR [esi+0x6cdf155d],ch
  426743:	adc    al,0x39
  426745:	push   ss
  426746:	sub    ebp,DWORD PTR [ebx]
  426748:	pushf  
  426749:	scas   eax,DWORD PTR es:[edi]
  42674a:	clc    
  42674b:	addr16 cs iret 
  42674e:	cmp    al,0xdc
  426750:	pop    esp
  426751:	xchg   ebx,ebp
  426753:	sub    eax,0x1c0df10d
  426758:	out    0x90,eax
  42675a:	adc    esi,DWORD PTR [ecx]
  42675c:	sub    ch,ch
  42675e:	icebp  
  42675f:	xchg   esi,eax
  426760:	les    eax,FWORD PTR [esi-0x3b559f4e]
  426766:	add    DWORD PTR [esi+0x11472e41],ecx
  42676c:	xchg   DWORD PTR [ebp+0x6e],esp
  42676f:	sbb    al,0x4d
  426771:	mov    DWORD PTR [esi+0x56],esp
  426774:	cs ins WORD PTR es:[edi],dx
  426777:	xchg   ebp,eax
  426778:	jbe    0x4267c7
  42677a:	inc    eax
  42677b:	pop    edx
  42677c:	clc    
  42677d:	cmp    al,0xd4
  42677f:	add    edi,ebp
  426781:	rol    ebp,1
  426783:	(bad)  
  426784:	mov    al,0x2
  426786:	in     eax,0xa0
  426788:	add    eax,0x579dda82
  42678d:	add    BYTE PTR [ecx-0x6d9b5ed],dl
  426793:	or     DWORD PTR [ebx+0x50db8979],edi
  426799:	xor    cl,ah
  42679b:	sub    BYTE PTR [eax+0x4a88a92b],bh
  4267a1:	retf   0x7155
  4267a4:	jmp    0x42681c
  4267a6:	ret    0x4465
  4267a9:	loop   0x426798
  4267ab:	push   edx
  4267ac:	in     eax,0x9f
  4267ae:	in     eax,0x87
  4267b0:	sbb    DWORD PTR [ebx],esi
  4267b2:	enter  0xed66,0x99
  4267b6:	mov    dh,0x3d
  4267b8:	loopne 0x42682c
  4267ba:	add    BYTE PTR [eax],al
  4267bc:	cli    
  4267bd:	rcl    DWORD PTR ds:0xfac73d07,cl
  4267c3:	push   DWORD PTR ds:0x3f1c7bfe
  4267c9:	sbb    al,0x7
  4267cb:	dec    ecx
  4267cc:	and    al,0xe0
  4267ce:	add    DWORD PTR [eax],eax
  4267d0:	xchg   BYTE PTR [edx],al
  4267d2:	add    BYTE PTR [eax],al
  4267d4:	minps  xmm5,xmm0
  4267d7:	lods   eax,DWORD PTR ds:[esi]
  4267d8:	jno    0x4267eb
  4267da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267db:	mov    BYTE PTR [ebx-0x1d],dh
  4267de:	xchg   DWORD PTR [edi],esp
  4267e0:	jmp    0x155e82a9
  4267e5:	jbe    0x426772
  4267e7:	jo     0x42682d
  4267e9:	outs   dx,BYTE PTR ds:[esi]
  4267ea:	pop    esp
  4267eb:	and    ch,BYTE PTR [eax-0x4115820]
  4267f1:	loope  0x4267fd
  4267f3:	scas   al,BYTE PTR es:[edi]
  4267f4:	xchg   BYTE PTR [edx],ch
  4267f6:	ss or  al,0xf5
  4267f9:	(bad)  
  4267fa:	out    dx,eax
  4267fb:	adc    eax,0x5f2e8f47
  426800:	xor    bh,dl
  426802:	add    DWORD PTR [esp+edx*1],edx
  426805:	sub    edx,DWORD PTR [eax]
  426807:	sbb    bh,dh
  426809:	or     al,0xa8
  42680c:	(bad)  
  42680d:	repnz int 0xfa
  426810:	push   ss
  426811:	fst    QWORD PTR [edx]
  426813:	bound  edi,QWORD PTR [ecx+ecx*8-0x78]
  426817:	retf   0x607b
  42681a:	mov    bh,0x69
  42681c:	inc    esp
  42681d:	and    bh,BYTE PTR [ebp-0x1d4ffe10]
  426823:	mov    dl,0x17
  426825:	xor    ah,BYTE PTR [ebp+0x20]
  426828:	(bad)  
  426829:	aad    0x74
  42682b:	inc    edx
  42682c:	dec    edx
  42682d:	add    eax,0x728d97a3
  426832:	stos   DWORD PTR es:[edi],eax
  426833:	fwait
  426834:	inc    edi
  426835:	mov    ebx,DWORD PTR [ecx+edx*4]
  426838:	in     al,0xb4
  42683a:	dec    eax
  42683b:	icebp  
  42683c:	jp     0x426859
  42683e:	jecxz  0x426809
  426840:	lock lock pop ebp
  426843:	dec    ebp
  426844:	push   edx
  426845:	mov    ch,0x26
  426847:	or     DWORD PTR [ebx+0x5],0x65ea5d51
  42684e:	cmp    esi,edi
  426850:	repnz lods al,BYTE PTR ds:[esi]
  426852:	mov    bl,0x9a
  426854:	dec    eax
  426855:	jno    0x4267e7
  426857:	loop   0x4268b9
  426859:	sahf   
  42685a:	fiadd  WORD PTR [ecx-0x4c]
  42685d:	mov    al,0xd8
  42685f:	cli    
  426860:	cwde   
  426861:	inc    edi
  426862:	xor    al,0xc0
  426864:	inc    edx
  426865:	sbb    cl,BYTE PTR [edi+0x6e]
  426868:	cmp    al,0xdb
  42686a:	xor    BYTE PTR [ebp+0x1cb56a1],al
  426870:	push   ebx
  426871:	hlt    
  426872:	lock push edi
  426874:	or     dh,BYTE PTR ds:0xa1d3da9c
  42687a:	das    
  42687b:	jno    0x4268f9
  42687d:	sbb    edi,DWORD PTR [eax+0x29733f9f]
  426883:	inc    ecx
  426884:	sub    ebp,DWORD PTR [edx+ebx*2-0x47]
  426888:	xor    BYTE PTR [eax-0x427a5e29],0xa0
  42688f:	dec    edx
  426890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426891:	rcr    BYTE PTR [edi],cl
  426893:	aad    0xd3
  426895:	push   ebp
  426896:	jns    0x42687c
  426898:	xchg   edi,eax
  426899:	fwait
  42689a:	add    eax,0x90d074df
  42689f:	popa   
  4268a0:	cmp    al,BYTE PTR [edi+0x50]
  4268a3:	cld    
  4268a4:	fs in  eax,dx
  4268a6:	cdq    
  4268a7:	jmp    0xef60a009
  4268ac:	and    al,0x80
  4268ae:	jb     0x426831
  4268b0:	(bad)  
  4268b1:	repnz (bad) 
  4268b4:	pop    edi
  4268b5:	stos   DWORD PTR es:[edi],eax
  4268b6:	out    0x13,al
  4268b8:	outs   dx,BYTE PTR ds:[esi]
  4268b9:	sar    DWORD PTR es:[edi-0x29d8fc07],1
  4268c0:	cmc    
  4268c1:	js     0x42689b
  4268c3:	dec    BYTE PTR [edi+0x740d2b3a]
  4268c9:	cmp    esi,0x533cb39f
  4268cf:	mov    esp,0xe72bd095
  4268d4:	sbb    BYTE PTR [edx],ah
  4268d6:	(bad)  
  4268d7:	fdivr  QWORD PTR [edi]
  4268d9:	cli    
  4268da:	jg     0x4268a4
  4268dc:	aas    
  4268dd:	mov    cl,0x95
  4268df:	mov    ds:0x2f9acf31,al
  4268e4:	(bad)  
  4268e6:	mov    dl,0x90
  4268e8:	ret    
  4268e9:	mov    DWORD PTR [esi],edx
  4268eb:	ror    DWORD PTR [ebx+0x1e],0xa2
  4268ef:	adc    dl,BYTE PTR [edi+eax*8]
  4268f2:	mov    edx,0xcafa83a9
  4268f7:	mov    eax,0x6b774b24
  4268fc:	lds    edx,FWORD PTR ds:0x2976e874
  426902:	nop
  426903:	cmp    DWORD PTR [edx],edi
  426905:	(bad)  [eax-0x41]
  426908:	mov    ebx,0x35ca0e94
  42690d:	mov    edx,0xc865da5e
  426912:	mov    eax,0x32e329a3
  426917:	out    0xbc,al
  426919:	mov    BYTE PTR [ecx-0x24ccf4b9],0x57
  426920:	adc    cl,bl
  426922:	sbb    dh,BYTE PTR [ebp+ebp*2-0x42ad4bc2]
  426929:	in     eax,0xd5
  42692b:	adc    BYTE PTR [ecx],al
  42692d:	(bad)  
  42692e:	loop   0x42690a
  426930:	ins    DWORD PTR es:[edi],dx
  426931:	sbb    eax,0x91bc9331
  426936:	mov    edi,0x3aff25b6
  42693b:	fistp  WORD PTR ss:[ebx]
  42693e:	in     eax,0x2f
  426940:	mov    edx,0x92ea90bc
  426945:	xor    al,BYTE PTR [esp+ebx*4]
  426948:	jnp    0x4269b0
  42694a:	push   esp
  42694b:	add    eax,DWORD PTR [esi-0x2a931e4]
  426951:	xchg   ebx,eax
  426952:	or     eax,0x52bb6922
  426957:	cmp    BYTE PTR [edx+0x7059cf8f],dh
  42695d:	jo     0x4268ff
  42695f:	shr    BYTE PTR [ebx+0x26],cl
  426962:	in     al,0x58
  426964:	cwde   
  426965:	cdq    
  426966:	xchg   ecx,eax
  426967:	pusha  
  426968:	dec    esi
  426969:	mov    esi,0x191f9c0f
  42696e:	pop    edx
  42696f:	pushf  
  426970:	cmc    
  426971:	or     ch,BYTE PTR [edi+0x1c1249a2]
  426977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426978:	out    0x5a,eax
  42697a:	jo     0x426986
  42697c:	neg    DWORD PTR [edi]
  42697e:	xchg   BYTE PTR [edx+0x1a79c73f],al
  426984:	daa    
  426985:	pop    eax
  426986:	push   esi
  426987:	stos   BYTE PTR es:[edi],al
  426988:	jg     0x4269d3
  42698a:	retf   0xc823
  42698d:	call   0x1f44:0x2706e6da
  426994:	add    al,0xf8
  426996:	ret    
  426997:	xchg   BYTE PTR [edx],ah
  426999:	xchg   ebx,eax
  42699a:	xchg   edx,eax
  42699b:	jne    0x426946
  42699d:	loop   0x426a02
  42699f:	fwait
  4269a0:	sub    bl,BYTE PTR [ecx+ebx*2-0x1]
  4269a4:	stos   DWORD PTR es:[edi],eax
  4269a5:	xor    DWORD PTR [ebp-0x31013a71],esp
  4269ab:	retf   0x81f2
  4269ae:	fldenv [ecx]
  4269b0:	or     eax,0xb0b6c5d5
  4269b5:	imul   edi,DWORD PTR [edx+ecx*4],0xffffffcd
  4269b9:	lods   al,BYTE PTR ds:[esi]
  4269ba:	xor    al,0x47
  4269bc:	cdq    
  4269bd:	cmp    al,0x28
  4269bf:	jb     0x42695a
  4269c1:	test   BYTE PTR [edi],0x2
  4269c4:	cmp    BYTE PTR ds:0xcb0553ef,al
  4269ca:	mov    edi,0xeea3d98f
  4269cf:	xor    ch,BYTE PTR [edi]
  4269d1:	stos   BYTE PTR es:[edi],al
  4269d2:	mov    ch,0xd7
  4269d4:	leave  
  4269d5:	into   
  4269d6:	repz sti 
  4269d8:	adc    bh,BYTE PTR [ebx-0x12]
  4269db:	mov    al,0x82
  4269dd:	ss xchg ebx,eax
  4269df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269e0:	xor    al,0xdd
  4269e2:	das    
  4269e3:	icebp  
  4269e4:	adc    BYTE PTR [ebx-0x19ba35e9],0x3e
  4269eb:	int3   
  4269ec:	sbb    eax,0x49b957e
  4269f1:	sub    esp,edx
  4269f3:	retf   
  4269f4:	xor    al,0xa
  4269f6:	xchg   BYTE PTR [edx+0x72846223],ah
  4269fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269fd:	call   0x24b0:0x6f522ca7
  426a04:	lods   eax,DWORD PTR ds:[esi]
  426a05:	mov    bl,0x73
  426a07:	push   cs
  426a08:	cdq    
  426a09:	dec    eax
  426a0a:	push   edi
  426a0b:	test   BYTE PTR [ebp+0x54ce7f8],dh
  426a11:	xchg   esi,eax
  426a12:	mov    ds:0xc52064f8,al
  426a17:	adc    al,0x52
  426a19:	lahf   
  426a1a:	or     cl,BYTE PTR [ebx+0x4877d765]
  426a20:	sahf   
  426a21:	jno    0x426a40
  426a23:	or     BYTE PTR [ebx],0x3d
  426a26:	fst    DWORD PTR [esi]
  426a28:	aas    
  426a29:	shl    BYTE PTR [ecx],cl
  426a2b:	in     eax,0x8e
  426a2d:	push   esi
  426a2e:	mov    ah,0x4d
  426a30:	xor    al,0xe3
  426a32:	push   0x8f050dea
  426a37:	shl    BYTE PTR [esi-0x434f2d29],cl
  426a3d:	cmc    
  426a3e:	imul   edx,DWORD PTR [ebx-0x7a3fed35],0xffffff9c
  426a45:	mov    ebp,0x9144fc17
  426a4a:	in     eax,0xa8
  426a4c:	mov    ds:0xf56232a2,eax
  426a51:	xchg   edi,eax
  426a52:	iret   
  426a53:	cs sub dh,ch
  426a56:	test   eax,0x386698
  426a5b:	add    bh,cl
  426a5d:	neg    BYTE PTR [ebp-0x308442b0]
  426a63:	(bad)  
  426a64:	out    dx,eax
  426a65:	lods   al,BYTE PTR ds:[esi]
  426a66:	(bad)  
  426a67:	push   ss
  426a68:	or     al,0x74
  426a6a:	pop    esp
  426a6b:	call   0x286:0x1e2aa
  426a72:	add    BYTE PTR [eax],al
  426a74:	adc    al,0x17
  426a76:	or     BYTE PTR [eax*4-0x348730f4],cl
  426a7d:	es xchg dh,cl
  426a80:	stos   BYTE PTR es:[edi],al
  426a81:	out    dx,eax
  426a82:	(bad)  
  426a83:	xchg   ecx,eax
  426a84:	push   0x74
  426a86:	jne    0x426a8a
  426a88:	imul   DWORD PTR [edx]
  426a8a:	push   cx
  426a8c:	mov    bh,0x96
  426a8e:	jbe    0x426aa6
  426a90:	xlat   BYTE PTR ds:[ebx]
  426a91:	xor    BYTE PTR [ebx-0x34],dh
  426a94:	repz bnd jmp 0x2a478386
  426a9b:	dec    esp
  426a9c:	shl    BYTE PTR [ebp+0x60],1
  426a9f:	rol    BYTE PTR [edi-0x361509e6],cl
  426aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa6:	into   
  426aa7:	inc    ebx
  426aa8:	cmc    
  426aa9:	push   esp
  426aaa:	in     al,dx
  426aab:	mov    ebp,0xf3de1ba2
  426ab0:	(bad)  
  426ab1:	mov    ah,BYTE PTR [ecx]
  426ab3:	adc    BYTE PTR [edi+esi*4],ch
  426ab6:	not    DWORD PTR [ebx]
  426ab8:	or     al,0x44
  426aba:	enter  0x230d,0x40
  426abe:	fistp  DWORD PTR [ebx]
  426ac0:	inc    edi
  426ac1:	add    DWORD PTR [edx-0x56675363],eax
  426ac7:	dec    ebx
  426ac8:	cmp    eax,0x6386bc65
  426acd:	ret    0xedff
  426ad0:	pop    esi
  426ad1:	(bad)  
  426ad2:	pop    ss
  426ad3:	add    edi,DWORD PTR [eax]
  426ad5:	dec    ebx
  426ad6:	inc    ecx
  426ad7:	test   al,0x85
  426ad9:	rcr    BYTE PTR [esi+0x2d47446b],cl
  426adf:	pop    edx
  426ae0:	mov    edi,0xdce2e1c4
  426ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ae6:	mov    ds:0xa0047db2,eax
  426aeb:	xor    ch,BYTE PTR [esi-0x9d0341c]
  426af1:	sub    DWORD PTR [edx-0x11],esp
  426af4:	sub    eax,0x3b030a9a
  426af9:	pop    ebx
  426afa:	aas    
  426afb:	sbb    al,0xcf
  426afd:	js     0x426aac
  426aff:	fsub   st,st(0)
  426b01:	repz loope 0x426a92
  426b04:	mov    esi,0x62e14c55
  426b09:	imul   edi,DWORD PTR [ecx-0x278df808],0xa97a9281
  426b13:	sub    al,0x60
  426b15:	ret    
  426b16:	aas    
  426b17:	repnz nop
  426b19:	clc    
  426b1a:	dec    esi
  426b1b:	xchg   ebp,eax
  426b1c:	fwait
  426b1d:	iret   
  426b1e:	mov    dh,0x25
  426b20:	in     eax,dx
  426b21:	test   eax,0x728c31cf
  426b26:	cs push 0x7c447d99
  426b2c:	dec    eax
  426b2d:	xchg   ebp,eax
  426b2e:	add    ebx,ebp
  426b30:	scas   al,BYTE PTR es:[edi]
  426b31:	mov    ds:0xda308cdd,eax
  426b36:	inc    ecx
  426b37:	jae    0x426b98
  426b39:	inc    ebp
  426b3a:	cmc    
  426b3b:	cmp    ebp,edi
  426b3d:	push   edi
  426b3e:	dec    esi
  426b3f:	(bad)
  426b43:	ins    BYTE PTR es:[edi],dx
  426b44:	xchg   ebx,eax
  426b45:	popf   
  426b46:	cmp    ecx,DWORD PTR [ebx+0x33321ed6]
  426b4c:	or     esi,ecx
  426b4e:	mov    esp,0xf44af9c7
  426b53:	ror    DWORD PTR [edx],0xb3
  426b56:	je     0x3bf0a6d8
  426b5c:	mov    ecx,0xc33b2c24
  426b61:	aad    0xde
  426b63:	fwait
  426b64:	in     al,dx
  426b65:	data16 mov ah,0x71
  426b68:	adc    bl,BYTE PTR [edx+0x1405f020]
  426b6e:	xchg   edi,esi
  426b70:	test   DWORD PTR [ebx],esi
  426b72:	or     eax,0x4b250750
  426b77:	scas   eax,DWORD PTR es:[edi]
  426b78:	xchg   edx,eax
  426b79:	and    esp,DWORD PTR [ebx-0x6d]
  426b7c:	leave  
  426b7d:	sub    al,0x7d
  426b7f:	clc    
  426b80:	push   eax
  426b81:	pop    esp
  426b82:	adc    al,0xfc
  426b84:	cmp    ebx,DWORD PTR [eax+0x62]
  426b87:	cmp    DWORD PTR [edi+ebp*2-0x4b],edx
  426b8b:	repz xchg ebp,eax
  426b8d:	js     0x426bec
  426b8f:	fs mov al,0xf7
  426b92:	push   cs
  426b93:	and    esp,ebx
  426b95:	std    
  426b96:	daa    
  426b97:	jb     0x426b25
  426b99:	xor    eax,0x630e2154
  426b9e:	and    ebp,ebp
  426ba0:	jne    0x426bb1
  426ba2:	add    ebp,DWORD PTR ds:0x4948e96a
  426ba8:	lea    edx,[edx]
  426baa:	xchg   esp,eax
  426bab:	mov    ebp,0xd200bf48
  426bb0:	push   edx
  426bb1:	lods   al,BYTE PTR ds:[esi]
  426bb2:	xor    bh,BYTE PTR [esi+ebx*1]
  426bb5:	fisub  DWORD PTR [esi+0x66]
  426bb8:	fwait
  426bb9:	cmp    DWORD PTR [esi+eiz*1+0x1cad139e],ecx
  426bc0:	les    edx,FWORD PTR ss:[ebp+0x4e]
  426bc4:	push   cs
  426bc5:	shrd   DWORD PTR [eax-0x7cb57c71],edi,cl
  426bcc:	mov    ds:0x6e22e29e,eax
  426bd1:	clc    
  426bd2:	lea    ecx,[edx+0xf]
  426bd5:	mov    eax,ds:0xf58e6dc8
  426bda:	imul   edx,DWORD PTR [ecx-0x7a0128c3],0xffffffc4
  426be1:	pop    eax
  426be2:	push   edi
  426be3:	sbb    BYTE PTR [ebx-0x10],al
  426be6:	sbb    esi,DWORD PTR [edx-0x19]
  426be9:	ret    
  426bea:	push   es
  426beb:	push   ss
  426bec:	test   al,0x94
  426bee:	jne    0x426bbe
  426bf0:	stos   BYTE PTR es:[edi],al
  426bf1:	mov    ecx,0x829d5c01
  426bf6:	sbb    DWORD PTR [ecx],edx
  426bf8:	in     al,dx
  426bf9:	add    BYTE PTR ds:0xc1a81e14,bh
  426bff:	pop    edx
  426c00:	stos   DWORD PTR es:[edi],eax
  426c01:	inc    eax
  426c02:	daa    
  426c03:	cs adc bl,al
  426c06:	aas    
  426c07:	mov    ch,0xd9
  426c09:	std    
  426c0a:	push   edi
  426c0b:	add    bl,dh
  426c0d:	adc    esp,0xad8f2ad6
  426c13:	(bad)  
  426c14:	test   al,0x1
  426c16:	mov    al,ds:0xc3cb865a
  426c1b:	mov    eax,ds:0xba35bbb3
  426c20:	pop    edi
  426c21:	lods   eax,DWORD PTR ds:[esi]
  426c22:	lds    ebx,FWORD PTR [ebx-0x33]
  426c25:	xor    dl,ch
  426c27:	jl     0x426c40
  426c29:	adc    eax,0xfb3bdd86
  426c2e:	inc    ecx
  426c2f:	or     edi,DWORD PTR [ecx-0x6a6c861b]
  426c35:	in     eax,dx
  426c36:	ja     0x426c67
  426c38:	pop    ebx
  426c39:	stos   BYTE PTR es:[edi],al
  426c3a:	mov    ecx,DWORD PTR [edi-0x5e0d40aa]
  426c40:	jae    0x426bc6
  426c42:	xchg   ebx,eax
  426c43:	jp     0x426cae
  426c45:	jmp    0xb2eb:0x8b462eeb
  426c4c:	pop    esp
  426c4d:	sbb    al,0x96
  426c4f:	cmp    eax,DWORD PTR [ebx+edx*4+0x213424e]
  426c56:	dec    ebp
  426c57:	and    ebp,DWORD PTR [edx]
  426c59:	jg     0x426c22
  426c5b:	ret    0x8c9a
  426c5e:	into   
  426c5f:	into   
  426c60:	push   cs
  426c61:	jp     0x426c76
  426c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c64:	lea    ecx,[esi+0x6d48b1d1]
  426c6a:	jmp    0xcad7:0xa2fad763
  426c71:	lods   eax,DWORD PTR ds:[esi]
  426c72:	or     ebx,ebp
  426c74:	arpl   bx,cx
  426c76:	in     al,dx
  426c77:	retf   0xdf5b
  426c7a:	push   esp
  426c7b:	icebp  
  426c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c7d:	(bad)  [esi-0xf]
  426c80:	add    al,0x1b
  426c82:	and    edi,ecx
  426c84:	arpl   WORD PTR [edx],sp
  426c86:	push   edi
  426c87:	ds hlt 
  426c89:	nop
  426c8a:	push   edx
  426c8b:	test   eax,0xfac8fd74
  426c90:	and    DWORD PTR [ebp-0x49],ecx
  426c93:	mov    al,ss:0xf6ffc3
  426c99:	and    eax,DWORD PTR [ecx-0x2a48ddb]
  426c9f:	jns    0x426c49
  426ca1:	loop   0x426c7e
  426ca3:	xlat   BYTE PTR ds:[ebx]
  426ca4:	lea    ebp,[ebp+0x61]
  426ca7:	fstp   QWORD PTR [esi-0x69133266]
  426cad:	pusha  
  426cae:	jo     0x426d2e
  426cb0:	inc    eax
  426cb1:	repz lds eax,FWORD PTR [ebx]
  426cb4:	adc    cl,bh
  426cb6:	ins    BYTE PTR es:[edi],dx
  426cb7:	mov    ch,0xe9
  426cb9:	mov    ecx,0x2d06a46
  426cbe:	pop    ebx
  426cbf:	out    0xb8,eax
  426cc1:	mov    ecx,0x78313261
  426cc6:	mov    ah,BYTE PTR [ecx+0x59]
  426cc9:	(bad)  
  426cca:	dec    ecx
  426ccb:	dec    ebx
  426ccc:	and    eax,0xf2251b21
  426cd1:	fild   WORD PTR [ebp+0x26]
  426cd4:	xchg   ebx,eax
  426cd6:	daa    
  426cd7:	data16 lods al,BYTE PTR ds:[esi]
  426cd9:	mov    dl,0x4d
  426cdb:	dec    esi
  426cdc:	inc    esp
  426cdd:	jns    0x426c89
  426cdf:	and    esi,DWORD PTR [eax+0x354f0317]
  426ce5:	loope  0x426c79
  426ce7:	fld    TBYTE PTR [ecx+eiz*4]
  426cea:	pushf  
  426ceb:	jne    0x426ca3
  426ced:	fsub   DWORD PTR ss:[edi-0x5a6bc39]
  426cf4:	xchg   DWORD PTR [ecx],ebp
  426cf6:	mov    bh,0xeb
  426cf8:	mov    cl,0x9
  426cfa:	add    BYTE PTR [eax],al
  426cfc:	push   0x6f1e2d23
  426d01:	push   ds
  426d02:	jnp    0x426d7b
  426d04:	fisub  WORD PTR [ebp+0x6f6eb036]
  426d0a:	sahf   
  426d0b:	shl    BYTE PTR [eax],cl
  426d0d:	in     eax,0x1
  426d0f:	add    BYTE PTR [esi+0x24000002],al
  426d15:	mov    ebx,DWORD PTR [esi-0x42]
  426d18:	xor    BYTE PTR [edi-0x68],0xeb
  426d1c:	and    bl,BYTE PTR [edi]
  426d1e:	dec    esp
  426d1f:	cmp    ecx,DWORD PTR [ecx*8+0x365c95f7]
  426d26:	adc    ah,cl
  426d28:	xor    al,0x5c
  426d2a:	pop    ss
  426d2b:	push   ds
  426d2c:	inc    eax
  426d2d:	adc    ch,BYTE PTR [esp+ebx*2]
  426d30:	into   
  426d31:	mov    bh,0x50
  426d33:	(bad)  
  426d34:	mov    esi,0x82801f5
  426d39:	lahf   
  426d3a:	and    eax,0xc5c2bd31
  426d3f:	push   ebp
  426d40:	bound  ecx,QWORD PTR [edx+0x5e2f8f5f]
  426d46:	test   DWORD PTR [edx+eax*8-0x5b],edx
  426d4a:	(bad)  
  426d4b:	sar    BYTE PTR [esi],cl
  426d4d:	inc    edi
  426d4e:	mov    esi,0x46a9741e
  426d53:	jg     0x426dc4
  426d55:	sub    dh,BYTE PTR [eax+esi*4+0x6a]
  426d59:	and    al,BYTE PTR [ebp+0x70]
  426d5c:	push   edi
  426d5d:	pop    edi
  426d5f:	in     eax,dx
  426d60:	out    0xb7,al
  426d62:	xor    eax,0xe29155d9
  426d67:	push   esi
  426d68:	push   ss
  426d69:	xchg   ebx,eax
  426d6a:	and    cl,BYTE PTR [edx+0x75]
  426d6d:	js     0x426cf8
  426d6f:	xchg   edx,eax
  426d70:	mov    WORD PTR [ebx+eiz*1],es
  426d73:	imul   edi,DWORD PTR [edi-0x34],0x64a81b19
  426d7a:	call   0xf3cf:0x74dfabb2
  426d81:	loopne 0x426d1e
  426d83:	push   ds
  426d84:	aad    0xce
  426d86:	in     al,0x34
  426d88:	int    0x2
  426d8a:	mov    BYTE PTR ds:0x606977dd,cl
  426d90:	je     0x426dec
  426d92:	sbb    edx,DWORD PTR [eax-0xe]
  426d95:	aaa    
  426d96:	xchg   DWORD PTR ds:0x478f28da,edi
  426d9c:	inc    esi
  426d9d:	out    dx,al
  426d9e:	pmaddwd mm3,mm1
  426da1:	(bad)  
  426da3:	or     al,ah
  426da5:	and    al,0xe0
  426da7:	sbb    al,0xe4
  426da9:	add    ch,BYTE PTR [ecx]
  426dab:	(bad)  
  426dad:	or     bh,bh
  426daf:	stos   DWORD PTR es:[edi],eax
  426db0:	imul   ebx,DWORD PTR [edx+0x1d23478c],0x33
  426db7:	push   ebx
  426db8:	inc    edx
  426db9:	iret   
  426dba:	sub    bl,BYTE PTR [ecx-0x73533e9f]
  426dc0:	aad    0x3d
  426dc2:	mov    ebp,0x7a65cceb
  426dc7:	out    0x3c,eax
  426dc9:	dec    edi
  426dca:	mov    al,ds:0x5cccd1f3
  426dcf:	add    cl,BYTE PTR [edi+0x5e]
  426dd2:	enter  0x5e57,0x70
  426dd6:	mov    ah,0x9a
  426dd8:	popf   
  426dd9:	xchg   ebp,eax
  426dda:	inc    DWORD PTR [ebp+0x71c403d9]
  426de0:	cmp    dl,dh
  426de2:	cli    
  426de3:	xchg   DWORD PTR [ecx+ecx*1],ebx
  426de6:	retf   
  426de7:	(bad)  
  426de8:	xchg   esi,eax
  426de9:	xchg   esi,eax
  426dea:	adc    eax,0x9fc0826c
  426def:	mov    al,0x1a
  426df1:	cmc    
  426df2:	enter  0xff3d,0x8a
  426df6:	jnp    0x426dbf
  426df8:	loopne 0x426e63
  426dfa:	mov    bl,0xe4
  426dfc:	fldenv [esi]
  426dfe:	aad    0xd3
  426e00:	shr    BYTE PTR [edx+0x7e],1
  426e03:	or     edi,DWORD PTR [eax]
  426e05:	xchg   BYTE PTR [ebp-0x27],cl
  426e08:	jno    0x426de4
  426e0a:	inc    esp
  426e0b:	mov    ds:0x664c3731,al
  426e10:	push   ebx
  426e11:	push   cs
  426e12:	dec    edi
  426e13:	push   ebx
  426e14:	dec    ebx
  426e15:	lahf   
  426e16:	pop    ecx
  426e17:	aam    0x60
  426e19:	mov    edx,0x368734ea
  426e1e:	out    0x5d,eax
  426e20:	xchg   ebx,eax
  426e21:	sub    cl,cl
  426e23:	and    BYTE PTR [ebx+0x2972ab38],ch
  426e29:	int3   
  426e2a:	fsubr  DWORD PTR [edx-0x1d]
  426e2d:	es pop ds
  426e2f:	inc    ecx
  426e30:	push   cs
  426e31:	xor    BYTE PTR [esi],cl
  426e33:	lock mov ds:0x7967085a,al
  426e39:	and    DWORD PTR [eax+0xc],0x63
  426e3d:	ret    
  426e3e:	dec    edx
  426e3f:	cli    
  426e40:	push   0x317fc208
  426e45:	ins    DWORD PTR es:[edi],dx
  426e46:	jg     0x426ec7
  426e48:	arpl   WORD PTR [ebx+0x579c54aa],sp
  426e4e:	inc    edx
  426e4f:	in     eax,dx
  426e50:	std    
  426e51:	mov    dh,BYTE PTR [ecx+ebx*1]
  426e54:	fadd   QWORD PTR [ebp-0x1b416766]
  426e5a:	mov    edx,0xb831f75c
  426e5f:	add    BYTE PTR [edi+0xbcb0383],dh
  426e65:	adc    al,0x5
  426e67:	mov    edx,0xef40e940
  426e6c:	xchg   esi,eax
  426e6d:	inc    ebp
  426e6e:	stc    
  426e6f:	scas   al,BYTE PTR es:[edi]
  426e70:	popf   
  426e71:	retf   0xd54b
  426e74:	aaa    
  426e75:	jne    0x426e50
  426e77:	or     al,0x6d
  426e79:	mov    edx,0xa233e938
  426e7e:	mov    al,ds:0x74efbca1
  426e83:	cmp    DWORD PTR [edi+0x7a0771e0],edx
  426e89:	ins    BYTE PTR es:[edi],dx
  426e8a:	or     cl,ch
  426e8c:	inc    BYTE PTR [ebx-0xb]
  426e8f:	popf   
  426e90:	xchg   ebp,eax
  426e91:	or     BYTE PTR ds:0x16abbafd,dl
  426e97:	ins    DWORD PTR es:[edi],dx
  426e98:	pop    ds
  426e99:	xchg   ebp,eax
  426e9a:	sbb    bl,dl
  426e9c:	xchg   BYTE PTR [esi-0x54ebee1e],bh
  426ea2:	fld    DWORD PTR [ebx+0x45]
  426ea5:	test   al,0xcd
  426ea7:	fsubp  st(6),st
  426ea9:	aaa    
  426eaa:	lea    ebx,[ecx+0x55cc04b4]
  426eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426eb1:	mov    WORD PTR ds:0x45d0d37b,gs
  426eb7:	sti    
  426eb8:	jne    0x426f09
  426eba:	pushaw 
  426ebc:	dec    ecx
  426ebd:	jmp    0x21b0:0xa9541993
  426ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ec5:	fisubr WORD PTR ds:0x440115e
  426ecb:	jecxz  0x426f45
  426ecd:	mov    esi,0x7a0a8462
  426ed2:	aas    
  426ed3:	mov    ch,0xdc
  426ed5:	xor    edx,DWORD PTR [ecx+0x6c]
  426ed8:	leave  
  426ed9:	rcr    DWORD PTR cs:[ebx+0x5ca5f338],1
  426ee0:	lsl    ebp,WORD PTR [edi-0x4]
  426ee4:	sbb    eax,DWORD PTR [esi]
  426ee6:	out    dx,eax
  426ee7:	mov    ebp,0xa54cf55f
  426eec:	test   DWORD PTR [ecx],esp
  426eee:	pushf  
  426eef:	retf   
  426ef0:	pop    ds
  426ef1:	jbe    0x426e7c
  426ef3:	sub    al,0x20
  426ef5:	pushf  
  426ef6:	mov    bh,0xab
  426ef8:	jg     0x426e83
  426efa:	ret    0xab11
  426efd:	cld    
  426efe:	bound  esi,QWORD PTR [esi-0x2aa5a715]
  426f04:	(bad)  [edi-0x500f5c0]
  426f0a:	sub    esp,DWORD PTR [eax+0x4c]
  426f0d:	clc    
  426f0e:	mov    edi,0x97380ce4
  426f13:	inc    eax
  426f14:	mov    ds:0x62237f33,eax
  426f19:	dec    ebx
  426f1a:	xchg   edx,eax
  426f1b:	and    DWORD PTR [ebx-0x2b293f31],0x157f1905
  426f25:	scas   al,BYTE PTR es:[edi]
  426f26:	mov    bh,0x71
  426f28:	mov    ebx,0x98e5f17f
  426f2d:	lds    ebp,FWORD PTR [ebp-0x7097cf1b]
  426f33:	outs   dx,DWORD PTR ds:[esi]
  426f34:	dec    edi
  426f35:	dec    eax
  426f36:	(bad)  [ebp-0x66]
  426f39:	lods   al,BYTE PTR ds:[esi]
  426f3a:	cs jp  0x426f30
  426f3d:	sub    edi,esp
  426f3f:	shl    dl,1
  426f41:	std    
  426f42:	push   es
  426f43:	inc    esp
  426f44:	sub    al,ah
  426f46:	jb     0x426f11
  426f48:	sbb    eax,0x6d1dd157
  426f4d:	sahf   
  426f4e:	jmp    0x554a78b7
  426f53:	js     0x426ede
  426f55:	in     eax,dx
  426f56:	mov    cl,0xa7
  426f58:	mov    bl,0xb2
  426f5a:	mov    ecx,0xbb3fa242
  426f5f:	shl    BYTE PTR ds:0xdda4b52b,0xae
  426f66:	sti    
  426f67:	jmp    0x426f5a
  426f69:	jmp    0xac910a0f
  426f6e:	fdiv   st,st(7)
  426f70:	popa   
  426f71:	and    dl,al
  426f73:	loopne 0x426f22
  426f75:	add    BYTE PTR ds:0x8b3526a,0xda
  426f7c:	fistp  QWORD PTR [edx]
  426f7e:	(bad)  
  426f7f:	(bad)  
  426f80:	ins    DWORD PTR es:[edi],dx
  426f81:	pop    edi
  426f82:	add    eax,0xde03ad58
  426f87:	loope  0x426f47
  426f89:	mov    esi,0xb9157f04
  426f8e:	ds int3 
  426f90:	ret    
  426f91:	jg     0x426fc8
  426f93:	call   FWORD PTR fs:[eax-0x45]
  426f97:	(bad)  
  426f98:	adc    ecx,eax
  426f9a:	add    BYTE PTR [eax],al
  426f9c:	cdq    
  426f9d:	enter  0x9ff8,0xf9
  426fa1:	mov    edi,0xdf92ceff
  426fa6:	push   ds
  426fa7:	outs   dx,BYTE PTR ds:[esi]
  426fa8:	xchg   edi,eax
  426fa9:	push   0xfffffffe
  426fab:	sbb    esi,DWORD PTR [esi-0x79fffe19]
  426fb1:	add    al,BYTE PTR [eax]
  426fb3:	add    bh,bl
  426fb5:	or     esi,DWORD PTR [eax+0x73]
  426fb8:	mov    ch,dl
  426fba:	(bad)  
  426fbc:	pop    ebp
  426fbd:	leave  
  426fbe:	mov    cl,0xe2
  426fc0:	jnp    0x42700f
  426fc2:	jecxz  0x426f81
  426fc4:	inc    esp
  426fc5:	cmp    ebx,0x1f
  426fc8:	jb     0x426f63
  426fca:	jae    0x426f78
  426fcc:	pop    ds
  426fcd:	push   edi
  426fce:	mov    gs,edx
  426fd0:	repz xchg esp,eax
  426fd2:	into   
  426fd3:	push   0xc4e5d3f4
  426fd8:	mov    eax,ds:0xf4c7df13
  426fdd:	dec    ebx
  426fde:	push   edx
  426fdf:	test   al,0xcd
  426fe1:	mov    BYTE PTR [edi+ebp*4+0x334d59fb],bl
  426fe8:	cwde   
  426fe9:	daa    
  426fea:	dec    eax
  426feb:	jae    0x426fee
  426fed:	adc    esp,ebx
  426fef:	mov    esi,0xfa46c4a2
  426ff4:	push   esi
  426ff5:	adc    edx,eax
  426ff7:	les    esp,FWORD PTR [eax-0x51]
  426ffa:	mov    ?,WORD PTR [edx-0x58]
  426ffd:	icebp  
  426ffe:	mov    ds:0x78ac14e4,al
  427003:	sbb    al,0x9c
  427005:	dec    esi
  427006:	add    cl,bh
  427008:	jg     0x426fba
  42700a:	xchg   ebx,eax
  42700b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42700d:	pop    edx
  42700e:	ds ret 
  427010:	imul   edx,DWORD PTR [edi-0x33],0xb553e3c3
  427017:	push   esi
  427018:	push   ebx
  427019:	jb     0x427015
  42701b:	pop    esp
  42701c:	xchg   esp,eax
  42701d:	popf   
  42701e:	add    edx,DWORD PTR [edi-0x49]
  427021:	nop
  427022:	aam    0xa5
  427024:	sbb    eax,eax
  427026:	fadd   DWORD PTR [esp+eax*4]
  427029:	enter  0xe3c8,0x24
  42702d:	pop    ebp
  42702e:	xor    eax,0xbbd53d02
  427033:	xor    al,0xb8
  427035:	lea    esp,[ebx+0x7b167e10]
  42703b:	mov    dh,0x8b
  42703d:	call   FWORD PTR [ebp-0x13]
  427040:	xchg   DWORD PTR [edx],ebx
  427042:	imul   eax,DWORD PTR [esi+0x72],0xfffffff1
  427046:	push   0xffffff96
  427048:	mov    ebx,0x9472edb9
  42704d:	in     eax,dx
  42704e:	repz mov esi,0x405920fa
  427054:	mov    eax,ds:0x8d5196e8
  427059:	dec    esp
  42705a:	dec    esp
  42705b:	inc    ecx
  42705c:	sub    al,0x6
  42705e:	pop    esp
  42705f:	dec    eax
  427060:	add    dh,BYTE PTR [ecx+ebx*8]
  427063:	mov    dh,0x6b
  427065:	add    cl,BYTE PTR [ecx+0x4ad5beef]
  42706b:	and    al,BYTE PTR ds:0x30df0697
  427071:	xor    cl,cl
  427073:	in     eax,dx
  427074:	mov    esi,0x57614547
  427079:	aaa    
  42707a:	xor    eax,0xf176df4b
  42707f:	pop    ecx
  427080:	jns    0x427063
  427082:	pusha  
  427083:	int    0xdf
  427085:	loop   0x4270f4
  427087:	mov    dl,0x19
  427089:	dec    esp
  42708a:	mov    eax,0x4572a6f5
  42708f:	xor    al,0xeb
  427091:	mov    ds:0xc76ab8e,eax
  427096:	loopne 0x427056
  427098:	jae    0x427076
  42709a:	scas   al,BYTE PTR es:[edi]
  42709b:	xchg   ebp,eax
  42709c:	test   eax,0x530aca91
  4270a1:	pop    es
  4270a2:	and    al,cl
  4270a4:	iret   
  4270a5:	fisub  DWORD PTR [edx+0x36c1d88e]
  4270ab:	jmp    0xc2a88949
  4270b0:	dec    edx
  4270b1:	nop
  4270b2:	mov    edx,0xc0af7b8e
  4270b7:	int    0x9f
  4270b9:	rep lods al,BYTE PTR ds:[esi]
  4270bb:	inc    ecx
  4270bc:	mov    eax,ds:0xc2cba096
  4270c1:	retf   0x17cb
  4270c4:	mov    ebp,0xa0f985b
  4270c9:	addr16 cdq 
  4270cb:	out    0x76,eax
  4270cd:	mov    ebp,0x981bef90
  4270d2:	pusha  
  4270d3:	sub    eax,0xc5bcaf01
  4270d8:	add    BYTE PTR [ecx+ebx*2-0x2665654c],0xdc
  4270e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270e1:	push   edx
  4270e2:	ja     0x4270ea
  4270e4:	fiadd  DWORD PTR [esi]
  4270e6:	pop    ebp
  4270e7:	jp     0x4270fc
  4270e9:	mov    dh,0xd9
  4270eb:	cld    
  4270ec:	cdq    
  4270ed:	jns    0x42710d
  4270ef:	push   ss
  4270f0:	fcmovnu st,st(0)
  4270f2:	ins    DWORD PTR es:[edi],dx
  4270f3:	cmp    bh,BYTE PTR [eax+0x4c]
  4270f6:	leave  
  4270f7:	stc    
  4270f8:	out    dx,al
  4270f9:	sub    eax,0x94ffc7d
  4270fe:	sets   BYTE PTR [edi-0x4e]
  427102:	mov    edx,0x6448f507
  427107:	pushf  
  427108:	jmp    0x4270d6
  42710a:	push   cs
  42710b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42710c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42710d:	fisubr WORD PTR [ecx-0x18]
  427110:	cwde   
  427111:	jnp    0x42713b
  427113:	or     ebx,DWORD PTR [esi-0x36bf0cb5]
  427119:	add    dh,BYTE PTR [eax-0x4a7b895c]
  42711f:	pop    esi
  427120:	or     DWORD PTR [ebx],edi
  427122:	sub    BYTE PTR [edx+esi*4-0x13068fdf],bh
  427129:	add    bh,BYTE PTR [ecx-0x3886a397]
  42712f:	inc    edx
  427130:	jb     0x4270f9
  427132:	add    DWORD PTR ds:0xb8054e7d,esi
  427138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427139:	mov    esi,0xdfac2d3c
  42713e:	pusha  
  42713f:	ins    DWORD PTR es:[edi],dx
  427140:	xor    ah,ch
  427142:	fwait
  427143:	cmp    DWORD PTR [ebp+0xb],ebx
  427146:	adc    al,0xac
  427148:	and    DWORD PTR [edx],ebp
  42714a:	lods   eax,DWORD PTR ds:[esi]
  42714b:	cmp    eax,0x89a4dcde
  427150:	jmp    0x482d129e
  427155:	loope  0x42713d
  427157:	xor    DWORD PTR [esi+0x55],0x48e87d6f
  42715e:	cmp    esi,DWORD PTR [eax+0x4a6a9608]
  427164:	cli    
  427165:	popf   
  427166:	shl    DWORD PTR ds:0xb9334efe,1
  42716c:	nop
  42716d:	cmp    bl,ch
  42716f:	and    bh,BYTE PTR [ecx-0x683f4541]
  427175:	scas   al,BYTE PTR es:[edi]
  427176:	push   edx
  427177:	retf   
  427178:	in     eax,0x81
  42717a:	jae    0x4271f9
  42717c:	cmp    dl,BYTE PTR [edi+0x67]
  42717f:	sbb    al,0xb3
  427181:	mov    esi,0x7aeb5281
  427186:	ret    
  427187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427188:	inc    esp
  427189:	push   ebp
  42718a:	rcl    DWORD PTR [esp+edx*8-0x22],0x4
  42718f:	out    0xa5,al
  427191:	cmp    eax,0x7d4dc8bf
  427196:	hlt    
  427197:	not    DWORD PTR [edi+ecx*8-0x271b90ee]
  42719e:	and    bh,ch
  4271a0:	popf   
  4271a1:	sbb    DWORD PTR [esp+esi*4-0x21],esi
  4271a5:	cmp    eax,eax
  4271a7:	push   ebx
  4271a8:	mov    bh,dh
  4271aa:	push   eax
  4271ab:	ds xchg ch,al
  4271ae:	xlat   BYTE PTR ds:[ebx]
  4271af:	fs xchg ecx,eax
  4271b1:	mov    ebp,0x40e225fc
  4271b6:	mov    edx,0x185fbd34
  4271bb:	cli    
  4271bc:	aam    0x65
  4271be:	repnz lods al,BYTE PTR ds:[esi]
  4271c0:	push   ebp
  4271c1:	loope  0x427156
  4271c3:	mov    WORD PTR [ecx+0x564e80b1],ds
  4271c9:	mov    edi,0x61441621
  4271ce:	leave  
  4271cf:	jno    0x42717e
  4271d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271d3:	xchg   esp,eax
  4271d4:	push   ds
  4271d5:	sub    al,0x93
  4271d7:	(bad)  
  4271d8:	in     al,dx
  4271d9:	scas   eax,DWORD PTR es:[edi]
  4271da:	stos   BYTE PTR es:[edi],al
  4271db:	test   DWORD PTR [ebp+0x6411c222],edi
  4271e1:	mov    ?,WORD PTR [ebx-0x68]
  4271e4:	fld    DWORD PTR [ebp-0x5c212408]
  4271ea:	add    al,0xd7
  4271ec:	push   ss
  4271ed:	and    esi,DWORD PTR [edx+0x78]
  4271f0:	lds    ebp,FWORD PTR [eax]
  4271f2:	xor    BYTE PTR [eax-0x690e9186],cl
  4271f8:	imul   ecx,DWORD PTR [esp+edx*1+0x5b],0xfe01c606
  427200:	sbb    ecx,ebp
  427202:	mov    ecx,edx
  427204:	push   0xffffffcb
  427206:	cmp    DWORD PTR [ebp+0x7c],ebp
  427209:	adc    esp,DWORD PTR [esi]
  42720b:	mov    eax,ds:0x401b7116
  427210:	shr    bl,1
  427212:	test   eax,0x8b0b10f4
  427217:	cmp    ah,BYTE PTR [eax]
  427219:	jl     0x427270
  42721b:	(bad)  
  42721c:	add    al,0xcf
  42721e:	cmp    eax,0x18a06af
  427223:	out    0x8e,al
  427225:	xchg   esp,eax
  427226:	push   esp
  427227:	fild   WORD PTR [esi+0x3bc6921a]
  42722d:	call   0xb8af:0x8d8f2967
  427234:	loope  0x42728f
  427236:	xor    bl,bl
  427238:	cmp    DWORD PTR [eax+eax*1+0x0],esp
  42723c:	jns    0x427248
  42723e:	sbb    BYTE PTR gs:[edi+0x7f],dh
  427242:	jge    0x4272af
  427244:	int3   
  427245:	outs   dx,BYTE PTR ds:[esi]
  427246:	xchg   esi,esi
  427248:	jg     0x4271de
  42724a:	loop   0x427212
  42724c:	cmp    al,0xea
  42724e:	add    DWORD PTR [eax],eax
  427250:	xchg   BYTE PTR [edx],al
  427252:	add    BYTE PTR [eax],al
  427254:	mov    ds:0x5d2a847a,eax
  427259:	into   
  42725a:	pop    eax
  42725b:	ret    
  42725c:	bound  ecx,QWORD PTR [ebp+0x41]
  42725f:	jg     0x4272b1
  427261:	add    DWORD PTR [ebx-0x1ba5a347],ecx
  427267:	xor    eax,0x4aa1f2ab
  42726c:	in     al,0x17
  42726e:	jecxz  0x427299
  427270:	icebp  
  427271:	repz dec ebp
  427273:	inc    esp
  427274:	dec    ebx
  427275:	stc    
  427276:	jge    0x4272c9
  427278:	add    DWORD PTR [eax],esp
  42727a:	xor    BYTE PTR [edx],dl
  42727c:	pop    ebp
  42727d:	in     al,0x9f
  42727f:	(bad)  
  427280:	std    
  427281:	sbb    al,0x65
  427283:	out    0x13,al
  427285:	shr    dl,0x5
  427288:	popf   
  427289:	jno    0x427270
  42728b:	adc    eax,0x56cdc1cf
  427290:	(bad)
  427294:	ret    0x4679
  427297:	fmul   st,st(3)
  427299:	push   0xffffff93
  42729b:	mov    WORD PTR [ebx],fs
  42729d:	xchg   ebp,eax
  42729e:	inc    edx
  42729f:	aas    
  4272a0:	aas    
  4272a1:	imul   esi,DWORD PTR [edi-0x63625d13],0x3f
  4272a8:	lock jns 0x427272
  4272ab:	sub    DWORD PTR [ebp-0x4],eax
  4272ae:	das    
  4272af:	jecxz  0x427317
  4272b1:	lods   al,BYTE PTR ds:[esi]
  4272b2:	mov    edi,0x842c0f95
  4272b7:	addr16 add eax,0xc9d49d6
  4272bd:	or     BYTE PTR [esi-0x4d],bh
  4272c0:	fucom  st(3)
  4272c2:	cs jne 0x4272d1
  4272c5:	add    esp,DWORD PTR [edx+0x26c994ea]
  4272cb:	pushf  
  4272cc:	pop    ss
  4272cd:	jae    0x427311
  4272cf:	add    edx,ecx
  4272d1:	push   ebp
  4272d2:	sbb    al,0x62
  4272d4:	sub    DWORD PTR [ecx+0x59],edx
  4272d7:	and    ah,BYTE PTR [edi-0x71]
  4272da:	sub    dh,BYTE PTR [eax-0x6aebc887]
  4272e0:	arpl   WORD PTR [esi-0x73],cx
  4272e3:	imul   ecx,DWORD PTR [ecx],0x9830bb25
  4272e9:	out    0x98,eax
  4272eb:	mov    al,ds:0x8e8f125a
  4272f0:	add    al,0xfc
  4272f2:	add    ch,0x6c
  4272f5:	sub    DWORD PTR [ebx-0x34e858a8],esp
  4272fb:	pusha  
  4272fc:	scas   eax,DWORD PTR es:[edi]
  4272fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272fe:	stos   DWORD PTR es:[edi],eax
  4272ff:	xlat   BYTE PTR ds:[ebx]
  427300:	pop    edx
  427301:	int3   
  427302:	inc    esp
  427303:	ja     0x427320
  427305:	loope  0x427333
  427307:	sbb    eax,0xa7f559ac
  42730c:	jge    0x42734b
  42730e:	cwde   
  42730f:	nop
  427310:	cwde   
  427311:	bnd js 0x427306
  427314:	mov    BYTE PTR [ecx-0x12b792ab],cl
  42731a:	sub    eax,0xcbf08ea2
  42731f:	mov    WORD PTR [ebx+0x6c1df4bc],?
  427325:	xchg   edi,eax
  427326:	call   0xe59b:0x6b351616
  42732d:	scas   al,BYTE PTR es:[edi]
  42732e:	or     edx,DWORD PTR [esi+0x48]
  427331:	retf   
  427332:	shr    DWORD PTR [ecx+0x1fdc6813],1
  427338:	cmc    
  427339:	sti    
  42733a:	push   0x268c7905
  42733f:	xor    al,0xc7
  427341:	jno    0x4273b3
  427343:	stos   DWORD PTR es:[edi],eax
  427344:	adc    DWORD PTR [edx+0x74],ecx
  427347:	add    bl,ch
  427349:	test   eax,0xa056d2ce
  42734e:	int3   
  42734f:	mov    bl,0xbe
  427351:	add    eax,0xa746d3c
  427356:	fsub   QWORD PTR [edx+0x47]
  427359:	stos   DWORD PTR es:[edi],eax
  42735a:	shl    edi,1
  42735c:	aaa    
  42735d:	shr    DWORD PTR [esi],0x3
  427360:	fs es (bad) 
  427363:	(bad)  
  427364:	jns    0x42730c
  427366:	arpl   WORD PTR [ebx],bx
  427368:	inc    esp
  427369:	jno    0x4272f3
  42736b:	adc    esp,edx
  42736d:	outs   dx,DWORD PTR ds:[esi]
  42736e:	lea    esp,[edx+0xf]
  427371:	inc    eax
  427372:	fbld   TBYTE PTR [ecx-0x14]
  427375:	lods   eax,DWORD PTR ds:[esi]
  427376:	aas    
  427377:	xchg   esp,eax
  427378:	push   cs
  427379:	lahf   
  42737a:	sbb    DWORD PTR ds:0x853c509d,0xb95df00d
  427384:	sub    BYTE PTR [esi],al
  427386:	jl     0x4273e9
  427388:	and    esp,DWORD PTR [ecx+esi*1]
  42738b:	jecxz  0x42732e
  42738d:	ins    DWORD PTR es:[edi],dx
  42738e:	push   esi
  42738f:	outs   dx,BYTE PTR ds:[esi]
  427390:	xchg   ecx,eax
  427391:	dec    ebp
  427392:	cwde   
  427393:	bnd jno 0x427338
  427396:	je     0x4273ca
  427398:	out    dx,eax
  427399:	dec    edi
  42739a:	dec    edi
  42739b:	out    0x2f,eax
  42739d:	push   0x8bee2cf9
  4273a2:	pop    edx
  4273a3:	xor    al,0xb8
  4273a5:	push   0xc41fc831
  4273aa:	scas   eax,DWORD PTR es:[edi]
  4273ab:	mov    bl,0xc4
  4273ad:	sbb    al,0xe1
  4273af:	cli    
  4273b0:	ror    esi,0xce
  4273b3:	sbb    edx,DWORD PTR [esi]
  4273b5:	sbb    al,0xd6
  4273b7:	sub    eax,0x8140189e
  4273bc:	es (bad) 
  4273be:	pop    ebx
  4273bf:	sbb    eax,0x3474d6bd
  4273c4:	dec    esp
  4273c5:	imul   ebp,DWORD PTR [ebx-0x6],0xffffffcb
  4273c9:	int    0x7c
  4273cb:	test   eax,0xe76e2752
  4273d0:	out    dx,eax
  4273d1:	in     eax,dx
  4273d2:	pop    edx
  4273d3:	call   0x604b93db
  4273d8:	xlat   BYTE PTR ds:[ebx]
  4273d9:	imul   edx,DWORD PTR [ebx-0x36],0xa0e3129e
  4273e0:	add    dl,cl
  4273e2:	scas   eax,DWORD PTR es:[edi]
  4273e3:	je     0x4273ef
  4273e5:	out    dx,al
  4273e6:	xor    bl,ch
  4273e8:	repnz push es
  4273ea:	inc    eax
  4273eb:	mov    ch,0x62
  4273ed:	and    BYTE PTR [eax-0x60],bh
  4273f0:	in     al,0x9b
  4273f2:	mov    esi,0x9696d6fd
  4273f7:	inc    esi
  4273f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273f9:	repz push ebp
  4273fb:	(bad)  
  4273fc:	test   DWORD PTR ds:0x4e21521f,0x47b3e7e6
  427406:	iret   
  427407:	push   0x13f37244
  42740c:	inc    esi
  42740d:	sti    
  42740e:	xor    eax,0x9799ef2c
  427413:	ins    BYTE PTR es:[edi],dx
  427414:	sub    ch,BYTE PTR [esi+0x51a5191a]
  42741a:	mov    bl,0x13
  42741c:	(bad)  [ebp+ebx*1+0x5e]
  427420:	cmp    eax,DWORD PTR [esi+0x5e]
  427423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427424:	jno    0x42749d
  427426:	sti    
  427427:	mov    ah,0x91
  427429:	leave  
  42742a:	and    ah,BYTE PTR [eax+0x75]
  42742d:	fistp  DWORD PTR [edi+0x5d]
  427430:	add    DWORD PTR [esp+ecx*2],esp
  427433:	push   ss
  427434:	mul    eax
  427436:	dec    edx
  427437:	mov    ch,0x89
  427439:	jmp    0x5bac5997
  42743e:	pop    ecx
  42743f:	je     0x4273f7
  427441:	sub    al,0x46
  427443:	sar    dl,0x5a
  427446:	xchg   edi,eax
  427447:	cwde   
  427448:	mov    ch,0xac
  42744a:	rcr    DWORD PTR [esi+0x1ac3afb3],1
  427450:	dec    eax
  427451:	imul   ebx,edi,0x4d
  427454:	mov    dh,0x18
  427456:	div    DWORD PTR [esi]
  427458:	repz imul edi,DWORD PTR [edx-0x68],0x15
  42745d:	lahf   
  42745e:	pusha  
  42745f:	ret    0xe965
  427462:	and    dh,BYTE PTR es:[edx+ebx*1]
  427466:	cmp    ecx,DWORD PTR [esi]
  427468:	arpl   dx,si
  42746a:	stos   BYTE PTR es:[edi],al
  42746b:	push   ebx
  42746c:	pop    eax
  42746d:	push   eax
  42746f:	mov    esi,0x8875e0db
  427474:	fs jmp edi
  427477:	fs pop eax
  427479:	fwait
  42747a:	(bad)  
  42747b:	popa   
  42747c:	lds    edx,FWORD PTR [eax]
  42747e:	pop    ebx
  42747f:	jb     0x4274b3
  427481:	or     esi,DWORD PTR [ebx-0x35]
  427484:	imul   DWORD PTR [eax]
  427486:	push   edx
  427487:	and    bl,BYTE PTR [eax+0x5e108508]
  42748d:	push   esi
  42748e:	xchg   ecx,eax
  42748f:	xor    bl,BYTE PTR [ebx+eiz*8-0x5a094df8]
  427496:	fild   WORD PTR [edx-0x2a35e9c9]
  42749c:	adc    DWORD PTR [ebx],ecx
  42749e:	adc    DWORD PTR [edx+0x21d859c],ebp
  4274a4:	ror    DWORD PTR [eax+0x38],1
  4274a7:	(bad)  
  4274a8:	push   DWORD PTR [eax+0x4ad50111]
  4274ae:	dec    ebp
  4274af:	sub    DWORD PTR [ecx],esi
  4274b1:	sbb    esi,DWORD PTR [esi+0x592a181e]
  4274b7:	out    dx,al
  4274b8:	stc    
  4274b9:	mov    ds:0x50738b49,eax
  4274be:	das    
  4274bf:	pop    ecx
  4274c0:	lock sbb al,0xb
  4274c3:	cmp    BYTE PTR [edi-0x1266eed9],cl
  4274c9:	outs   dx,BYTE PTR ds:[esi]
  4274ca:	int3   
  4274cb:	mov    ch,0xf1
  4274cd:	ret    
  4274ce:	sahf   
  4274cf:	dec    eax
  4274d0:	fisttp DWORD PTR [ebx-0xef88c10]
  4274d6:	dec    ebx
  4274d7:	cmp    eax,0x6f08
  4274dc:	pop    ecx
  4274dd:	add    eax,ecx
  4274df:	inc    esp
  4274e0:	fcmovnb st,st(6)
  4274e2:	fstp   QWORD PTR [edi]
  4274e4:	sub    ebp,DWORD PTR [esi+0x12353eba]
  4274ea:	adc    ebp,0xffffffc2
  4274ed:	in     al,dx
  4274ee:	add    DWORD PTR [eax],eax
  4274f0:	xchg   BYTE PTR [edx],al
  4274f2:	add    BYTE PTR [eax],al
  4274f4:	inc    BYTE PTR [edx+esi*8]
  4274f7:	or     eax,0xc033b89e
  4274fc:	mov    ebx,0x8de58017
  427501:	dec    ebp
  427502:	aas    
  427503:	sbb    ebx,DWORD PTR [esi-0x409c40c]
  427509:	std    
  42750a:	outs   dx,DWORD PTR ss:[esi]
  42750c:	adc    eax,0x1df8a3f
  427511:	dec    ecx
  427512:	ror    DWORD PTR [esi-0x7d55aafb],1
  427518:	and    BYTE PTR [edi-0x7fe119f],ch
  42751e:	shl    BYTE PTR [esi],0x66
  427521:	mov    eax,0x7ed9be67
  427526:	das    
  427527:	mov    eax,ds:0x42e940b9
  42752c:	ror    bh,1
  42752e:	fisttp DWORD PTR [ebx]
  427530:	shl    bh,1
  427532:	repz loopne 0x4274ce
  427535:	inc    esp
  427536:	in     eax,dx
  427537:	loopne 0x4274cd
  427539:	imul   edx,DWORD PTR [esi-0x57],0x5cef00d8
  427540:	lahf   
  427541:	fidiv  DWORD PTR [eax+0x718dbe55]
  427547:	cmp    eax,0x5713009f
  42754c:	sahf   
  42754d:	popf   
  42754e:	repnz and ch,BYTE PTR [esi-0x79]
  427552:	and    eax,0x82345f68
  427557:	cmp    al,0x74
  427559:	push   0xffffffc1
  42755b:	mov    ds:0xada1fa13,al
  427561:	cmp    dh,BYTE PTR [esi+0x55]
  427564:	ret    
  427565:	or     eax,0x75f71dd9
  42756a:	add    ch,BYTE PTR [edi+0x67]
  42756d:	out    dx,eax
  42756e:	mov    esp,0x7ff21289
  427573:	or     DWORD PTR [edi],ecx
  427575:	iret   
  427576:	retf   0x80ca
  427579:	push   edi
  42757a:	xchg   ebp,eax
  42757b:	ins    DWORD PTR es:[edi],dx
  42757c:	push   ebx
  42757d:	mov    esi,0x16ee3983
  427582:	add    eax,0x9b1c1a5e
  427587:	jl     0x4275ed
  427589:	sbb    BYTE PTR [esp+edi*8-0x12b8a826],0x75
  427591:	jnp    0x42751f
  427593:	xlat   BYTE PTR ds:[ebx]
  427594:	cmp    eax,0xdc603170
  427599:	ins    DWORD PTR es:[edi],dx
  42759a:	sbb    ebx,0x813f2ece
  4275a0:	js     0x427536
  4275a2:	add    esi,DWORD PTR ds:0x1a28451d
  4275a8:	rcl    BYTE PTR [eax+0x43],cl
  4275ab:	adc    BYTE PTR [ecx+0x53],0x4a
  4275af:	inc    edx
  4275b0:	in     al,dx
  4275b1:	std    
  4275b2:	ret    0x4284
  4275b5:	fcom   DWORD PTR [edx]
  4275b7:	push   ebp
  4275b8:	mov    ds:0x9cb20248,al
  4275bd:	mov    DWORD PTR [ebx],ebx
  4275bf:	push   ebp
  4275c0:	out    dx,al
  4275c1:	out    0x47,eax
  4275c3:	cmc    
  4275c4:	enter  0x3c56,0x4b
  4275c8:	es loop 0x42756b
  4275cb:	ds dec ebx
  4275cd:	push   ecx
  4275ce:	add    ecx,DWORD PTR [ecx-0x5d]
  4275d1:	lods   al,BYTE PTR ds:[esi]
  4275d2:	sub    DWORD PTR ds:0x43250abd,eax
  4275d8:	jne    0x4275e8
  4275da:	mov    ebx,0x4007931c
  4275df:	outs   dx,BYTE PTR ds:[esi]
  4275e0:	std    
  4275e1:	mov    ah,0xd0
  4275e3:	or     eax,0xd617b2eb
  4275e8:	or     dh,al
  4275ea:	sbb    dl,dh
  4275ec:	lods   al,BYTE PTR ds:[esi]
  4275ed:	(bad)
  4275f1:	mov    fs,WORD PTR [ebp-0x2e8aff20]
  4275f7:	sub    al,0x52
  4275f9:	mov    ebx,0xbb2824e3
  4275fe:	and    edx,eax
  427600:	in     eax,0x68
  427602:	(bad)  
  427603:	lds    esi,FWORD PTR ds:0x51706349
  427609:	sub    edx,DWORD PTR [edx+0x3d]
  42760c:	test   eax,0xb94ae0d7
  427611:	out    0x68,eax
  427613:	push   ss
  427614:	mov    dl,0x4a
  427616:	and    ch,BYTE PTR [ebx]
  427618:	add    ecx,edi
  42761a:	gs gs inc esi
  42761d:	and    BYTE PTR [edx+0x49],ah
  427620:	pusha  
  427621:	rcr    BYTE PTR [eax+0x4c228301],0xbc
  427628:	jno    0x4275aa
  42762a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42762b:	push   eax
  42762c:	lock mov dh,0x42
  42762f:	in     al,0xe7
  427631:	and    dh,BYTE PTR [eax-0x763fe5b0]
  427637:	cli    
  427638:	js     0x427664
  42763a:	push   ecx
  42763b:	add    dh,BYTE PTR [ebx+0x6fb9a853]
  427641:	call   0xaeb059b2
  427646:	popa   
  427647:	or     BYTE PTR [edx+ebx*2+0x7d43ca81],ch
  42764e:	call   0xd8d8:0x76cfde71
  427655:	xor    DWORD PTR gs:[edi+0x5f504898],ebp
  42765c:	sub    eax,0x44da39bb
  427661:	jmp    0x427640
  427663:	adc    ebp,ebp
  427665:	cmp    ah,BYTE PTR [edi-0x3d093cb3]
  42766b:	adc    BYTE PTR [edi+0x25f27a28],ah
  427671:	add    DWORD PTR [eax-0xe],0xffffffc0
  427675:	cmp    dl,BYTE PTR [esi]
  427677:	fisttp DWORD PTR [edx-0x38e726b6]
  42767d:	adc    ecx,eax
  42767f:	adc    DWORD PTR [edi+0x65834d61],ebp
  427685:	mov    bh,0xd3
  427687:	mov    al,0xe3
  427689:	sbb    al,0x9a
  42768b:	add    ecx,DWORD PTR [eiz*4+0x5b70e1b1]
  427692:	aad    0xd1
  427694:	pop    es
  427695:	into   
  427696:	mov    esi,0x7415e620
  42769b:	outs   dx,BYTE PTR ds:[esi]
  42769c:	cmp    DWORD PTR [eax-0x76588759],ebx
  4276a2:	js     0x4276a1
  4276a4:	lock mov es,WORD PTR [ebx-0x675574e8]
  4276ab:	ins    DWORD PTR es:[edi],dx
  4276ac:	cdq    
  4276ad:	shr    dh,1
  4276af:	pop    esp
  4276b0:	sar    DWORD PTR [esi+0x72],0xa
  4276b4:	pop    ds
  4276b5:	and    DWORD PTR ds:0x9ab28541,eax
  4276bb:	imul   edi,DWORD PTR [ebp+0x9],0xfffffff7
  4276bf:	push   edi
  4276c0:	pusha  
  4276c1:	jl     0x427701
  4276c3:	ud1    edx,DWORD PTR [ebx+0x22]
  4276c7:	ja     0x4276de
  4276c9:	sahf   
  4276ca:	mov    al,ds:0x6e999e5f
  4276cf:	mov    al,ds:0xc1276e4
  4276d4:	xor    DWORD PTR [edx],edi
  4276d6:	cdq    
  4276d7:	sub    BYTE PTR [ebp-0x5a],dl
  4276da:	push   ebx
  4276db:	jecxz  0x427699
  4276dd:	data16 or BYTE PTR [esi],0x3a
  4276e1:	stc    
  4276e2:	dec    eax
  4276e3:	gs cmp eax,0x981e49a6
  4276e9:	test   bh,dh
  4276eb:	dec    ebp
  4276ec:	xchg   esi,eax
  4276ed:	push   ebx
  4276ee:	fwait
  4276ef:	in     al,0x8b
  4276f1:	xchg   esp,eax
  4276f2:	add    dh,al
  4276f4:	or     BYTE PTR [esi],bl
  4276f6:	mov    bh,0x6d
  4276f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276f9:	xchg   edi,eax
  4276fa:	jmp    0x427737
  4276fc:	mov    esi,0xf92f09a0
  427701:	mov    BYTE PTR [edi+0x546f409b],ch
  427707:	fimul  WORD PTR ds:0x903ec35c
  42770d:	scas   al,BYTE PTR es:[edi]
  42770e:	adc    eax,0x9d6d061d
  427713:	cmp    bl,dh
  427715:	pop    eax
  427716:	push   ds
  427717:	sub    DWORD PTR [esi-0x2ee55616],edx
  42771d:	jnp    0x42777e
  42771f:	ins    DWORD PTR es:[edi],dx
  427720:	fs call 0x55680d4a
  427726:	lock push ecx
  427728:	mov    ecx,0x5828c2fb
  42772d:	mov    bh,0xe0
  42772f:	mov    ecx,0x223e8b76
  427734:	jge    0x4276b7
  427736:	out    dx,eax
  427737:	sub    eax,0xde47c6e
  42773c:	mov    ch,ch
  42773e:	leave  
  42773f:	ja     0x427797
  427741:	xor    bl,BYTE PTR [ecx-0x2d89d7a8]
  427747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427748:	xchg   esi,eax
  427749:	jnp    0x4277b0
  42774b:	add    cl,dl
  42774d:	test   eax,0x9e2fcb10
  427752:	iretw  
  427754:	fistp  QWORD PTR [ebx-0x71]
  427757:	iret   
  427758:	xor    al,0x63
  42775a:	sub    DWORD PTR [edx+ecx*4-0x2522aef0],esp
  427761:	mov    ecx,0x295b94ff
  427766:	out    dx,eax
  427767:	push   ecx
  427768:	cmc    
  427769:	inc    edx
  42776a:	adc    al,0x3d
  42776c:	inc    eax
  42776d:	sub    ecx,0x11
  427770:	out    0x7,eax
  427772:	lea    edi,[ebx]
  427774:	xor    ecx,DWORD PTR [esi-0x3d]
  427777:	in     al,dx
  427778:	sbb    al,0xd9
  42777a:	add    BYTE PTR [eax],al
  42777c:	sbb    esp,DWORD PTR [edi]
  42777e:	pushf  
  42777f:	cli    
  427780:	mov    esp,0x2ae77ffb
  427785:	scas   al,BYTE PTR es:[edi]
  427786:	aad    0xf
  427788:	cmp    bl,dh
  42778a:	dec    ebx
  42778b:	ror    BYTE PTR [eax-0x11],cl
  42778e:	add    DWORD PTR [eax],eax
  427790:	xchg   BYTE PTR [edx],al
  427792:	add    BYTE PTR [eax],al
  427794:	push   0x6ec35931
  427799:	sbb    bl,ch
  42779b:	adc    al,0x17
  42779d:	add    BYTE PTR [edx+ebp*4-0x77],ah
  4277a1:	inc    eax
  4277a2:	xchg   BYTE PTR [edi+edi*2-0x11ba2015],dh
  4277a9:	imul   edx,DWORD PTR [edi+ebx*2],0x10b53868
  4277b0:	fwait
  4277b1:	jmp    0x97c1503e
  4277b6:	xchg   esi,eax
  4277b7:	popa   
  4277b8:	add    eax,0xda39e67d
  4277bd:	fld    DWORD PTR [ecx+0x5d8fafe9]
  4277c3:	repz rcr BYTE PTR ds:0xa0098da2,cl
  4277ca:	sbb    si,WORD PTR [esi+0x20a62e8]
  4277d1:	inc    edx
  4277d2:	xor    BYTE PTR [ecx],0x38
  4277d5:	adc    DWORD PTR [ecx-0x4a],ebp
  4277d8:	outs   dx,BYTE PTR ds:[esi]
  4277d9:	ud0    edx,edi
  4277dc:	repz sub eax,0xb80104da
  4277e2:	cmp    dl,BYTE PTR [ebx+0x714a4edd]
  4277e8:	lock retf 
  4277ea:	in     al,dx
  4277eb:	iret   
  4277ec:	call   0xc7fe:0x4ec07691
  4277f3:	pop    ds
  4277f4:	fld    DWORD PTR [ebp+0x5e]
  4277f7:	mov    eax,0x8cab6c88
  4277fc:	jnp    0x4277fa
  4277fe:	push   0x4815116e
  427803:	mov    ecx,ebp
  427805:	dec    DWORD PTR [edi+0x7a]
  427808:	mov    ah,0xcc
  42780a:	fwait
  42780b:	mov    ds:0xfd53070a,al
  427810:	retf   
  427811:	dec    ebx
  427812:	iret   
  427813:	mov    edi,0x7d01dc0a
  427818:	mov    bh,0x5d
  42781a:	bnd jo 0x427837
  42781d:	in     al,0x8b
  42781f:	pop    ds
  427820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427821:	cmp    edx,DWORD PTR [edx]
  427823:	int    0x79
  427825:	aaa    
  427826:	sub    eax,0xb2b2a792
  42782b:	clc    
  42782c:	ins    DWORD PTR es:[edi],dx
  42782d:	daa    
  42782e:	push   ebp
  42782f:	mov    dh,0xd0
  427831:	and    eax,0x5b2e54b8
  427836:	fcomp  QWORD PTR [ebp-0x18]
  427839:	fstp   DWORD PTR [edi+0x3c]
  42783c:	imul   ecx,ecx,0x63
  42783f:	(bad)  
  427841:	rcr    BYTE PTR [eax-0x40],cl
  427844:	ror    eax,cl
  427846:	fbstp  TBYTE PTR [eax+0x520c51c]
  42784c:	loopne 0x427845
  42784e:	int3   
  42784f:	leave  
  427850:	outs   dx,DWORD PTR ds:[esi]
  427851:	ficom  DWORD PTR [ecx-0x66a0688e]
  427857:	push   ebx
  427858:	fwait
  427859:	inc    esp
  42785a:	or     BYTE PTR [edi-0x7],ch
  42785d:	and    dh,al
  42785f:	retf   0x51b5
  427862:	jle    0x42785a
  427864:	(bad)  
  427865:	aaa    
  427866:	iret   
  427867:	jmp    0x517:0x670deacb
  42786e:	cmp    dl,dh
  427870:	mov    ebx,0xf025c4ea
  427875:	adc    ch,dh
  427877:	pop    ebp
  427878:	ror    BYTE PTR [edx],0x8e
  42787b:	inc    esp
  42787c:	and    al,0x95
  42787e:	std    
  42787f:	rol    BYTE PTR [edi],cl
  427881:	and    BYTE PTR [edx],ah
  427883:	repnz ins BYTE PTR es:[edi],dx
  427885:	dec    edi
  427886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427887:	or     esp,edx
  427889:	shl    BYTE PTR [ecx-0x19],cl
  42788c:	sbb    al,0x3a
  42788e:	sub    eax,0x19d56e0
  427893:	mov    bh,BYTE PTR [ebx]
  427895:	adc    dl,dl
  427897:	push   ebp
  427898:	mov    al,ds:0x2a2664f0
  42789d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42789e:	mov    dh,0x3a
  4278a0:	push   ds
  4278a1:	lea    edx,[ecx-0x2d]
  4278a4:	pop    esp
  4278a5:	sub    BYTE PTR [ebx+0x31],0xf8
  4278a9:	pusha  
  4278aa:	or     BYTE PTR [eax],dh
  4278ac:	xchg   edi,eax
  4278ad:	aam    0x28
  4278af:	adc    DWORD PTR [eax-0x6899d1ed],0xb
  4278b6:	jo     0x4278f9
  4278b8:	xchg   edx,eax
  4278b9:	inc    edi
  4278ba:	div    esi
  4278bc:	sbb    eax,0x72313db6
  4278c1:	into   
  4278c2:	adc    BYTE PTR [ecx+eax*2],ch
  4278c5:	adc    ch,BYTE PTR [edi]
  4278c7:	enter  0x563,0xf8
  4278cb:	or     eax,0x3708a724
  4278d0:	aas    
  4278d1:	mov    al,0x56
  4278d3:	jmp    0x427855
  4278d5:	jnp    0x4278e8
  4278d7:	fst    DWORD PTR [edx-0xa]
  4278da:	pop    ebx
  4278db:	stos   BYTE PTR es:[edi],al
  4278dc:	pop    es
  4278dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278de:	out    0x7f,al
  4278e0:	pop    edx
  4278e1:	das    
  4278e2:	jb     0x4278f5
  4278e4:	fwait
  4278e5:	je     0x427889
  4278e7:	les    ecx,FWORD PTR [ecx]
  4278e9:	push   es
  4278ea:	xlat   BYTE PTR ds:[ebx]
  4278eb:	mov    esp,DWORD PTR [ebx-0x72fb2225]
  4278f1:	dec    edi
  4278f2:	push   0x84c74820
  4278f7:	into   
  4278f8:	jg     0x427900
  4278fa:	and    al,0x5e
  4278fc:	cmp    BYTE PTR [edi+0x641d9278],dh
  427902:	lods   eax,DWORD PTR ds:[esi]
  427903:	ss xor al,0xb2
  427906:	in     al,dx
  427907:	push   ss
  427908:	mov    bl,dl
  42790a:	in     al,dx
  42790b:	cmp    esp,DWORD PTR [edi]
  42790d:	retf   
  42790e:	pop    esp
  42790f:	sub    BYTE PTR [eax-0x34d81675],dl
  427915:	mov    edx,0x440db911
  42791a:	jecxz  0x427979
  42791c:	dec    edx
  42791d:	out    dx,al
  42791e:	into   
  42791f:	adc    edi,DWORD PTR [ecx]
  427921:	loope  0x427940
  427923:	or     al,0xb0
  427925:	aad    0x45
  427927:	fsubr  QWORD PTR [esi]
  427929:	mov    WORD PTR [edx+edi*4+0x700161e3],gs
  427930:	out    dx,eax
  427931:	aas    
  427932:	or     al,0x86
  427934:	mov    ?,WORD PTR [edi+0xd09e06c]
  42793a:	mov    WORD PTR [edx+0x56b5399a],ss
  427940:	mov    cl,0xd4
  427942:	outs   dx,DWORD PTR ds:[esi]
  427943:	ss pop ss
  427945:	push   es
  427946:	repnz dec DWORD PTR [ecx-0x48ef1f3f]
  42794d:	sbb    eax,DWORD PTR [esi+0x5b878ecb]
  427953:	nop
  427954:	lods   al,BYTE PTR ds:[esi]
  427955:	outs   dx,DWORD PTR ds:[esi]
  427956:	sub    BYTE PTR [ebx],dl
  427958:	leave  
  427959:	hlt    
  42795a:	xor    ecx,edx
  42795c:	xchg   DWORD PTR [ecx],esp
  42795e:	mov    dh,0x98
  427960:	(bad)  
  427961:	mov    esp,0x2d26246c
  427966:	and    cl,dh
  427968:	sub    eax,0x870cffe8
  42796d:	add    eax,esi
  42796f:	call   FWORD PTR [eax+0x17]
  427972:	imul   esp,DWORD PTR [esi-0x76],0xffffff90
  427976:	aam    0x2f
  427978:	add    al,0x64
  42797a:	mov    ch,0x9
  42797c:	arpl   ax,dx
  42797e:	sbb    al,0x0
  427980:	int    0xd0
  427982:	call   0xa281fc92
  427987:	sbb    eax,0x7ee65ce8
  42798c:	sub    eax,0xb786fab3
  427991:	fs fsubr st(4),st
  427994:	cmc    
  427995:	neg    DWORD PTR [eax]
  427997:	inc    eax
  427998:	aad    0x6e
  42799a:	lock sub al,0x1e
  42799d:	mov    DWORD PTR [ebx-0x7580a0e9],ebx
  4279a3:	cmp    DWORD PTR [edi+0x6a9359e2],esp
  4279a9:	aad    0x68
  4279ab:	sub    al,0x9d
  4279ad:	fiadd  DWORD PTR ds:0x3f7b6d14
  4279b3:	mov    ch,0x52
  4279b5:	inc    ecx
  4279b6:	and    DWORD PTR [edx+0x23742f33],eax
  4279bc:	nop
  4279bd:	xlat   BYTE PTR ds:[ebx]
  4279be:	in     al,dx
  4279bf:	fdivr  st(4),st
  4279c1:	add    al,BYTE PTR [eax+edi*8-0x1d]
  4279c5:	jle    0x427962
  4279c7:	push   0xb
  4279c9:	jnp    0x4279d5
  4279cb:	ret    
  4279cc:	jo     0x427a48
  4279ce:	xchg   ecx,eax
  4279cf:	add    cl,al
  4279d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279d2:	retf   0x1195
  4279d5:	xchg   edx,eax
  4279d6:	mov    eax,0xd160b18a
  4279db:	outs   dx,BYTE PTR ds:[esi]
  4279dc:	or     al,bl
  4279de:	retf   
  4279df:	arpl   si,dx
  4279e1:	mov    esi,0x4d1009d
  4279e6:	sbb    al,0xe7
  4279e8:	xor    eax,edi
  4279ea:	jle    0x427a2d
  4279ec:	mov    WORD PTR [ecx-0x19e8aec3],cs
  4279f2:	add    al,0x72
  4279f4:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4279f6:	jecxz  0x427a5e
  4279f8:	sub    esp,edx
  4279fa:	xchg   esi,eax
  4279fb:	xchg   ecx,eax
  4279fc:	mov    ch,0x3
  4279fe:	test   eax,0xa6278b9d
  427a03:	popa   
  427a04:	pop    eax
  427a05:	fwait
  427a06:	retf   
  427a07:	retf   0xfff3
  427a0a:	fdivr  DWORD PTR [ebp+0x5679ee6a]
  427a10:	xchg   ebp,ecx
  427a12:	fs imul edx,DWORD PTR cs:[edi+0x7a208b14],0x449a0000
  427a1e:	and    bh,al
  427a20:	(bad)  
  427a21:	(bad)  
  427a22:	fisub  DWORD PTR [esi+0x62]
  427a25:	mov    eax,0x71257475
  427a2a:	mov    esp,0x1f1ce72
  427a2f:	add    BYTE PTR [esi+0x33000002],al
  427a35:	pop    ebp
  427a36:	inc    edx
  427a37:	cli    
  427a38:	inc    esi
  427a39:	aaa    
  427a3a:	jge    0x427a65
  427a3c:	leave  
  427a3d:	xchg   ecx,eax
  427a3e:	repnz dec esi
  427a40:	xchg   ebx,eax
  427a41:	das    
  427a42:	mov    ch,0x92
  427a44:	jno    0x427abb
  427a46:	retf   0x57fb
  427a49:	pushf  
  427a4a:	sahf   
  427a4b:	sbb    DWORD PTR [edi+ebx*1+0x6f],ecx
  427a4f:	jbe    0x4279ec
  427a51:	int3   
  427a52:	int3   
  427a53:	jo     0x4279eb
  427a55:	pop    edi
  427a56:	pop    edi
  427a57:	loope  0x427aac
  427a59:	daa    
  427a5a:	data16 sbb bl,ah
  427a5d:	popf   
  427a5e:	cmp    eax,0xcef3f445
  427a63:	iret   
  427a64:	mov    ch,BYTE PTR [edx-0x51]
  427a67:	ja     0x427a22
  427a69:	int    0x2c
  427a6b:	(bad)  
  427a6c:	aaa    
  427a6d:	mov    ah,0xce
  427a6f:	loopne 0x427ac0
  427a71:	aaa    
  427a72:	and    edi,DWORD PTR [ebx]
  427a74:	rcr    BYTE PTR [ebp+ecx*2-0xa6773f9],0x72
  427a7c:	clc    
  427a7d:	mov    esi,0x1b007c5e
  427a82:	pusha  
  427a83:	(bad)  
  427a84:	and    ah,al
  427a86:	fdiv   st,st(4)
  427a88:	leave  
  427a89:	test   DWORD PTR [edx-0x6f43dc44],ebp
  427a8f:	shr    DWORD PTR [eax],cl
  427a91:	imul   ecx,DWORD PTR [edi-0x31],0x11
  427a95:	or     ebp,DWORD PTR [eax]
  427a97:	or     dh,BYTE PTR [ebx-0x27d9304a]
  427a9d:	fisttp DWORD PTR [edx-0x794b5fbd]
  427aa3:	sbb    cl,BYTE PTR [ebp+0x49]
  427aa6:	jo     0x427a7b
  427aa8:	fistp  QWORD PTR [ecx+edi*4-0x3a5cdb36]
  427aaf:	mov    esp,0xd1e081e6
  427ab4:	mov    DWORD PTR [ebx+0x1d],esi
  427ab7:	mov    ds:0x3956087c,al
  427abc:	add    eax,0x962fd2da
  427ac1:	cmc    
  427ac2:	sar    DWORD PTR [ebp-0x1d],1
  427ac5:	mov    cs,WORD PTR [ebp+0x7cc9bc28]
  427acb:	cmp    ebx,DWORD PTR [edx+edi*4+0x1f]
  427acf:	lea    eax,[ecx-0x1]
  427ad2:	fucom  st(7)
  427ad4:	call   0x3b65:0xaab4bba0
  427adb:	and    cl,BYTE PTR [ebx-0x3c]
  427ade:	mov    al,ds:0x67d64675
  427ae3:	test   DWORD PTR [ecx-0x4c],ebx
  427ae6:	cmp    DWORD PTR [ecx+eax*8+0x36],ebx
  427aea:	jo     0x427a73
  427aec:	or     DWORD PTR [ebx],esi
  427aee:	xlat   BYTE PTR ds:[ebx]
  427aef:	dec    esi
  427af0:	or     eax,DWORD PTR [esi]
  427af2:	xchg   esp,ebx
  427af4:	adc    BYTE PTR [edi+0x7],0x72
  427af8:	push   eax
  427af9:	shr    al,1
  427afb:	leave  
  427afc:	aam    0xbc
  427afe:	add    DWORD PTR [ebp-0x151e64fd],0xffffffe1
  427b05:	mov    bl,0x73
  427b07:	mov    eax,ds:0x303244b1
  427b0c:	popf   
  427b0d:	pushfw 
  427b0f:	mov    eax,ds:0xc6fdddd5
  427b14:	mov    ah,BYTE PTR [eax]
  427b16:	loop   0x427b18
  427b18:	push   ebx
  427b19:	jno    0x427ac5
  427b1b:	mov    ebx,0x4464faeb
  427b20:	adc    BYTE PTR [ebx+0x6a],0x36
  427b24:	dec    esi
  427b25:	in     al,0x37
  427b27:	jle    0x427af8
  427b29:	xlat   BYTE PTR ss:[ebx]
  427b2b:	jno    0x427b48
  427b2d:	out    dx,eax
  427b2e:	lods   al,BYTE PTR ds:[esi]
  427b2f:	mov    dl,0x9b
  427b31:	add    bh,0x3e
  427b34:	sub    edi,DWORD PTR [ecx+0x52]
  427b37:	jmp    0x7e84591e
  427b3c:	dec    edi
  427b3d:	cmc    
  427b3e:	ss pusha 
  427b40:	mov    ebp,0x968c9835
  427b45:	test   eax,0x630e0dd7
  427b4a:	repnz popa 
  427b4c:	sbb    ebp,DWORD PTR [ebx-0x6a5afec]
  427b52:	or     eax,0xd53d951e
  427b57:	push   ss
  427b58:	jl     0x427b93
  427b5a:	bound  ebp,QWORD PTR [eax]
  427b5c:	cmp    cl,BYTE PTR [ebp+0x44ac718d]
  427b62:	lods   al,BYTE PTR ds:[esi]
  427b63:	mov    ah,0x5d
  427b65:	push   0xe
  427b67:	sub    BYTE PTR [edx],ch
  427b69:	ret    0xf8e6
  427b6c:	pop    edx
  427b6d:	mov    esi,0xb1f9c927
  427b72:	pop    es
  427b73:	sbb    ch,BYTE PTR [edi+eax*2+0x7bc768eb]
  427b7a:	push   edi
  427b7b:	mov    ch,0x1e
  427b7d:	pop    edx
  427b7e:	sbb    eax,0x6703580e
  427b83:	jg     0x427ba5
  427b85:	ins    BYTE PTR es:[edi],dx
  427b86:	push   ebp
  427b87:	add    al,cl
  427b89:	and    DWORD PTR [edx],esp
  427b8b:	imul   ebx,ecx,0x38
  427b8e:	mov    ds:0xc3e1f619,al
  427b93:	repz sub eax,0x4f680dfb
  427b99:	mov    dh,0xc6
  427b9b:	jg     0x427b47
  427b9d:	jo     0x427ba0
  427b9f:	fsubr  DWORD PTR [ecx+0x7e]
  427ba2:	inc    ebp
  427ba3:	std    
  427ba4:	int3   
  427ba5:	je     0x427b34
  427ba7:	popa   
  427ba8:	jmp    0xea2d:0x5b366a46
  427baf:	ins    BYTE PTR es:[edi],dx
  427bb0:	leave  
  427bb1:	sub    eax,0x34f2730b
  427bb6:	loop   0x427b7c
  427bb8:	or     DWORD PTR [edi],ebp
  427bba:	stos   DWORD PTR es:[edi],eax
  427bbb:	add    ecx,DWORD PTR [ebx+0x5f]
  427bbe:	outs   dx,DWORD PTR ds:[esi]
  427bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bc0:	cmc    
  427bc1:	jo     0x427ba3
  427bc3:	and    al,dh
  427bc5:	std    
  427bc6:	jbe    0x427c3e
  427bc8:	mov    edi,0x3737c3a
  427bcd:	ins    DWORD PTR es:[edi],dx
  427bce:	adc    DWORD PTR [ebp+0x7a45e439],ebp
  427bd4:	ret    
  427bd5:	push   ebp
  427bd6:	add    BYTE PTR [edx+0x4cadf846],0xb
  427bdd:	mov    esp,0x42310df5
  427be2:	xor    edx,DWORD PTR [edx+ebp*2]
  427be5:	mov    dl,0xb2
  427be7:	inc    esp
  427be8:	test   cl,dh
  427bea:	aad    0x7c
  427bec:	(bad)  
  427bee:	je     0x427bf9
  427bf0:	inc    eax
  427bf1:	xchg   edx,eax
  427bf2:	adc    DWORD PTR [edx],edi
  427bf4:	sbb    eax,eax
  427bf6:	mov    edi,0xc878bf69
  427bfb:	hlt    
  427bfc:	pusha  
  427bfd:	or     eax,ebx
  427bff:	xlat   BYTE PTR ds:[ebx]
  427c00:	sbb    DWORD PTR [ecx-0x49e12616],0xffffffeb
  427c07:	in     eax,0xc6
  427c09:	shr    BYTE PTR ds:0x1e16903a,cl
  427c0f:	or     BYTE PTR [edi+0x58],ch
  427c12:	mov    eax,0x8bf604d
  427c17:	mov    esi,0x11618e9f
  427c1c:	cmp    BYTE PTR [esp+edi*4+0x7c],dl
  427c20:	ja     0x427c08
  427c22:	mov    edx,0x59bd5f50
  427c27:	cwde   
  427c28:	mov    ebx,0x3229b55a
  427c2d:	mov    eax,ds:0x49337c2e
  427c32:	outs   dx,DWORD PTR ds:[esi]
  427c33:	add    DWORD PTR [eax+0x5f],0xf2bf09ea
  427c3a:	xlat   BYTE PTR ds:[ebx]
  427c3b:	jecxz  0x427c35
  427c3d:	retf   
  427c3e:	mov    eax,0xb85c5efa
  427c43:	and    BYTE PTR [ecx-0x39635073],bl
  427c49:	ficom  WORD PTR [ecx+ebp*8-0x66df7d28]
  427c50:	xor    DWORD PTR [esp+ebx*1+0x55],0xc7f377f9
  427c58:	in     al,0x85
  427c5a:	in     eax,dx
  427c5b:	cmp    ebp,DWORD PTR [edx-0x16]
  427c5e:	data16 xlat BYTE PTR ds:[ebx]
  427c60:	push   edi
  427c61:	icebp  
  427c62:	mov    esi,0x651bf582
  427c67:	push   edi
  427c68:	test   BYTE PTR [ecx+ecx*8+0x69],ah
  427c6c:	int3   
  427c6d:	les    ebx,FWORD PTR [edi+0x56]
  427c70:	fst    DWORD PTR [eax]
  427c72:	xor    al,0xac
  427c74:	push   0xffffff90
  427c76:	repz ja 0x427c1d
  427c79:	rcl    DWORD PTR [ebp-0x3e5aaa08],1
  427c7f:	bound  edx,QWORD PTR [eax-0x34ab2e84]
  427c85:	push   ecx
  427c86:	pop    eax
  427c87:	cmp    ecx,DWORD PTR [edi-0x4b1a5947]
  427c8d:	mov    ds,WORD PTR [edx-0x65]
  427c90:	and    dl,bh
  427c92:	imul   ecx,DWORD PTR ss:[esi],0x4caeb386
  427c99:	push   edx
  427c9a:	push   es
  427c9b:	shl    DWORD PTR [ebp-0x3a],1
  427c9e:	sbb    BYTE PTR [ecx],ah
  427ca0:	mov    esi,0x4e85e1aa
  427ca5:	push   edi
  427ca6:	jo     0x427c6a
  427ca8:	test   al,0x1b
  427caa:	fdivrp st(2),st
  427cac:	xchg   DWORD PTR [ebx+0x87322be],esp
  427cb2:	ror    DWORD PTR [ebx+0x4614963a],cl
  427cb8:	ds (bad) 
  427cba:	add    BYTE PTR [eax],al
  427cbc:	nop
  427cbd:	stos   DWORD PTR es:[edi],eax
  427cbe:	es ret 
  427cc0:	aas    
  427cc1:	iret   
  427cc2:	cmc    
  427cc3:	sti    
  427cc4:	pushf  
  427cc5:	ds loop 0x427cb4
  427cc8:	pop    edx
  427cc9:	ss mov cl,dh
  427ccc:	push   esp
  427ccd:	hlt    
  427cce:	add    DWORD PTR [eax],eax
  427cd0:	xchg   BYTE PTR [edx],al
  427cd2:	add    BYTE PTR [eax],al
  427cd4:	pop    ds
  427cd5:	jle    0x427cf7
  427cd7:	sbb    al,0x7f
  427cd9:	lock cmp BYTE PTR [esi],dh
  427cdc:	shl    esp,0x7b
  427cdf:	jp     0x427ce3
  427ce1:	out    dx,al
  427ce2:	aaa    
  427ce3:	push   ebp
  427ce4:	mov    ch,0x4a
  427ce6:	mov    ch,0xe0
  427ce8:	xchg   edi,eax
  427ce9:	retf   0x20e0
  427cec:	or     bh,dh
  427cee:	retfw  
  427cf0:	jmp    0x427c8f
  427cf2:	inc    ebx
  427cf3:	lahf   
  427cf4:	imul   ecx,DWORD PTR [eax+0x6145fa79],0xffffffc9
  427cfb:	xchg   BYTE PTR [eax],dl
  427cfd:	das    
  427cfe:	pop    ss
  427cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d00:	mov    bl,0x1
  427d02:	lahf   
  427d03:	push   cs
  427d04:	sbb    DWORD PTR [edx],edi
  427d06:	push   ecx
  427d07:	out    0x87,eax
  427d09:	cmp    eax,0xdf0b7634
  427d0e:	or     edx,DWORD PTR [edi+0x6e7a06dd]
  427d14:	cdq    
  427d15:	inc    edi
  427d16:	jbe    0x427cf7
  427d18:	das    
  427d19:	mov    bh,0xa
  427d1b:	xor    cl,BYTE PTR [edx-0x32]
  427d1e:	dec    ecx
  427d1f:	mov    edi,0xa980a187
  427d24:	xchg   ebp,eax
  427d25:	dec    ecx
  427d26:	in     eax,0x16
  427d28:	cmp    ebp,DWORD PTR [ebx-0x80]
  427d2b:	ins    DWORD PTR es:[edi],dx
  427d2c:	lds    edi,FWORD PTR [ebp-0x74]
  427d2f:	popa   
  427d30:	mov    ss,WORD PTR [edi+0x5d5d0883]
  427d36:	arpl   WORD PTR [ebx],si
  427d38:	add    al,0xe0
  427d3a:	xchg   BYTE PTR [eax+0x45967121],bh
  427d40:	add    al,BYTE PTR [eax-0xa23db55]
  427d46:	xor    BYTE PTR [edi-0x3c6b0ba3],bl
  427d4c:	scas   eax,DWORD PTR es:[edi]
  427d4d:	mov    cl,0xeb
  427d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d50:	into   
  427d51:	ror    edi,cl
  427d53:	and    DWORD PTR [esi-0x69],edx
  427d56:	mov    dh,0x77
  427d58:	dec    eax
  427d59:	jge    0x427d15
  427d5b:	jle    0x427d76
  427d5d:	syscall 
  427d5f:	les    ecx,FWORD PTR [esi+0x4f250057]
  427d65:	pop    edx
  427d66:	inc    edx
  427d67:	cmp    DWORD PTR [eax-0x5662874f],esi
  427d6d:	sub    al,0xab
  427d6f:	arpl   WORD PTR gs:[edx],di
  427d72:	fucomip st,st(7)
  427d74:	cmp    al,0x1
  427d76:	pop    ecx
  427d77:	outs   dx,BYTE PTR ds:[esi]
  427d78:	jne    0x427d5c
  427d7a:	in     al,0x2a
  427d7c:	popf   
  427d7d:	jmp    0x69d389b2
  427d82:	(bad)  
  427d83:	ja     0x427d4d
  427d85:	mov    esi,0xd4ec39ba
  427d8a:	push   edi
  427d8b:	into   
  427d8c:	imul   edx,DWORD PTR [ecx+0x65],0xffffffdd
  427d90:	inc    ebx
  427d91:	ss mov dl,0x4b
  427d94:	iret   
  427d95:	xchg   edx,eax
  427d96:	jecxz  0x427da4
  427d98:	mov    ecx,0x94d2c18
  427d9d:	lock mov edx,0xfe212d04
  427da3:	in     eax,dx
  427da4:	fisub  DWORD PTR [edx+0x71]
  427da7:	jmp    0xd4d1:0x4bfdc62c
  427dae:	dec    ecx
  427daf:	xlat   BYTE PTR ds:[ebx]
  427db0:	adc    esp,DWORD PTR [edx+eax*2+0x6d0658a6]
  427db7:	jbe    0x427dc6
  427db9:	add    BYTE PTR [ecx],dl
  427dbb:	call   0xa081983a
  427dc0:	aad    0xb
  427dc2:	cs fdivrp st(1),st
  427dc5:	bndldx bnd0,[eax+0x2aada662]
  427dcc:	xchg   ebp,eax
  427dcd:	test   BYTE PTR [edi+0x34],dh
  427dd0:	xchg   ebx,eax
  427dd1:	add    bh,BYTE PTR [edi+0x2c]
  427dd4:	cwde   
  427dd5:	popa   
  427dd6:	xor    eax,0x6b5673c7
  427ddb:	das    
  427ddc:	sbb    edi,DWORD PTR [ebx+0x4c362c16]
  427de2:	popf   
  427de3:	imul   ecx,DWORD PTR [edi+0x5bc26cea],0xfdcbee9
  427ded:	mov    edi,0x60341e26
  427df2:	ds and al,0x59
  427df5:	ret    0x848e
  427df8:	fcmovbe st,st(1)
  427dfa:	pop    eax
  427dfb:	ss out 0xea,al
  427dfe:	dec    esi
  427dff:	sbb    eax,0x26993fde
  427e04:	js     0x427db0
  427e06:	mov    edx,0x73cdf3f0
  427e0b:	xchg   ebp,eax
  427e0c:	add    al,0x45
  427e0e:	test   DWORD PTR [ebx+ebx*1],esp
  427e11:	xchg   edi,eax
  427e12:	ins    BYTE PTR es:[edi],dx
  427e13:	scas   al,BYTE PTR es:[edi]
  427e14:	push   es
  427e15:	fwait
  427e16:	sbb    BYTE PTR [eax-0x68be414f],0x65
  427e1d:	or     DWORD PTR [eax+0x4e],eax
  427e20:	mov    edx,0xa574f185
  427e25:	fmulp  st(6),st
  427e27:	mov    eax,ds:0xdbff2553
  427e2c:	jbe    0x427e92
  427e2e:	jge    0x427de1
  427e30:	pop    eax
  427e31:	fild   QWORD PTR [ecx]
  427e33:	aaa    
  427e34:	jns    0x427e82
  427e36:	add    esi,DWORD PTR [ecx+0x2d65d30b]
  427e3c:	jmp    0x427e93
  427e3e:	sub    eax,0x19c29204
  427e43:	jmp    0xcf1f42f3
  427e48:	sbb    eax,0xab7a97f0
  427e4d:	jns    0x427df2
  427e4f:	les    esi,FWORD PTR [ecx+0x47387291]
  427e55:	add    ah,BYTE PTR [esi-0x34922eea]
  427e5b:	jbe    0x427e22
  427e5d:	adc    al,0xf7
  427e5f:	pop    es
  427e60:	push   eax
  427e61:	xor    al,0x79
  427e63:	fwait
  427e64:	mov    fs,esi
  427e66:	fcom   QWORD PTR [eax+0x40]
  427e69:	call   FWORD PTR [edx+0x7]
  427e6c:	out    dx,al
  427e6d:	cmp    al,0x1d
  427e6f:	mov    ds:0xacad13d5,al
  427e74:	push   edx
  427e75:	iret   
  427e76:	cmp    DWORD PTR [ecx-0x4722ae9e],eax
  427e7c:	xchg   ebp,eax
  427e7d:	lea    edi,[edx+0x3801383d]
  427e83:	mov    ah,0x7c
  427e85:	out    0xa4,al
  427e87:	mov    edi,DWORD PTR [esi+edi*8]
  427e8a:	mov    ah,al
  427e8c:	ffreep st(3)
  427e8e:	les    ecx,FWORD PTR [edi+0x736c1826]
  427e94:	add    al,0xc0
  427e96:	adc    eax,0xebab0d96
  427e9b:	xchg   ecx,eax
  427e9c:	imul   esi,DWORD PTR [ebx+0x2bfd5681],0xffffffab
  427ea3:	add    esp,ebp
  427ea5:	test   al,0x67
  427ea7:	sti    
  427ea8:	mov    ch,0xbd
  427eaa:	sahf   
  427eab:	in     eax,dx
  427eac:	loop   0x427ec7
  427eae:	dec    ecx
  427eaf:	mov    DWORD PTR [esi-0x62c2f82],edi
  427eb5:	fdiv   st,st(6)
  427eb7:	xor    BYTE PTR [ecx],bh
  427eb9:	ror    BYTE PTR [esi+0x4],0xa2
  427ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ebe:	test   DWORD PTR [esp-0x7f],ebp
  427ec2:	mov    eax,ds:0x386f5778
  427ec7:	mov    edi,0x75dfbb72
  427ecc:	xor    eax,DWORD PTR [eax-0x6e8972af]
  427ed2:	sub    al,0xde
  427ed4:	shr    edi,0x9f
  427ed7:	es adc bh,bl
  427eda:	cwde   
  427edb:	cmp    al,0x3d
  427edd:	jp     0x427f5a
  427edf:	or     al,0xb7
  427ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ee2:	int3   
  427ee3:	rcl    edi,0x99
  427ee6:	stos   BYTE PTR es:[edi],al
  427ee7:	loop   0x427ec5
  427ee9:	aaa    
  427eea:	inc    esi
  427eeb:	retf   0x9533
  427eee:	dec    edi
  427eef:	adc    ebp,edi
  427ef1:	pushf  
  427ef2:	mov    ah,0x81
  427ef4:	cld    
  427ef5:	or     al,0xdc
  427ef7:	stos   BYTE PTR es:[edi],al
  427ef8:	or     DWORD PTR [esi+eiz*8+0x684920fc],0x67
  427f00:	fsub   st,st(2)
  427f02:	test   cl,bl
  427f04:	mov    edx,0x64be4470
  427f09:	pop    esp
  427f0a:	jbe    0x427f0f
  427f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f0d:	pop    ss
  427f0e:	mov    esp,?
  427f10:	enter  0x5da4,0xbb
  427f14:	icebp  
  427f15:	dec    esi
  427f16:	mov    al,ds:0xc8c6e7c6
  427f1b:	and    BYTE PTR [eax],ch
  427f1d:	enter  0xa53c,0xfc
  427f21:	mov    edi,esp
  427f23:	pop    ebx
  427f24:	stos   DWORD PTR es:[edi],eax
  427f25:	and    al,BYTE PTR [ecx+0x2c382aec]
  427f2b:	inc    edi
  427f2c:	inc    esp
  427f2d:	popf   
  427f2e:	xor    al,0x6e
  427f30:	out    0x0,al
  427f32:	jmp    0xf3b6:0xe8000f77
  427f39:	mov    eax,ds:0x91cf492c
  427f3e:	xchg   esi,eax
  427f3f:	jb     0x427f9b
  427f41:	rcr    DWORD PTR [edi*8-0x4d282ec5],cl
  427f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f49:	dec    ebx
  427f4a:	xor    eax,0xad5dac3c
  427f4f:	frstor [eax+0x3de7c1e2]
  427f55:	mov    esp,0x775c8026
  427f5a:	add    BYTE PTR [eax],al
  427f5c:	std    
  427f5d:	cmp    DWORD PTR ds:0xfd1cf514,esi
  427f63:	stc    
  427f64:	int    0xea
  427f66:	xor    al,al
  427f68:	cwde   
  427f69:	and    edx,DWORD PTR [edi+0x1f6da8a]
  427f6f:	add    BYTE PTR [edi+0x2],dh
  427f72:	add    BYTE PTR [eax],al
  427f74:	xchg   BYTE PTR [ebp-0x2e],cl
  427f77:	xlat   BYTE PTR ds:[ebx]
  427f78:	and    BYTE PTR [eax+0x5115d160],cl
  427f7e:	jp     0x427f3b
  427f80:	add    BYTE PTR [ecx+0x26],cl
  427f83:	xchg   edx,eax
  427f84:	or     cl,BYTE PTR [ebx-0xc157587]
  427f8a:	lock loopne 0x427f62
  427f8d:	cmp    edi,ebx
  427f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f90:	mov    ecx,0xb5014721
  427f95:	cmp    eax,0x55441303
  427f9a:	fdiv   DWORD PTR [ebx+0x25]
  427f9d:	test   eax,0x2550ad09
  427fa2:	pop    ds
  427fa3:	rol    BYTE PTR [edi+0x6090c1a],0x92
  427faa:	aaa    
  427fab:	add    eax,0x4ac64802
  427fb0:	mov    dh,BYTE PTR [edx]
  427fb2:	jbe    0x427f3a
  427fb4:	adc    DWORD PTR [ebx],edx
  427fb6:	int    0x41
  427fb8:	inc    ebp
  427fb9:	fwait
  427fba:	push   edx
  427fbb:	sbb    ebp,DWORD PTR [edx]
  427fbd:	inc    ebx
  427fbe:	push   esi
  427fbf:	xchg   esp,eax
  427fc0:	outs   dx,BYTE PTR ds:[esi]
  427fc1:	icebp  
  427fc2:	xor    DWORD PTR [ebx+0x693d00e5],0xfffffffa
  427fc9:	test   BYTE PTR [edx-0x22da19ee],cl
  427fcf:	sbb    BYTE PTR [ecx-0x6f],dh
  427fd2:	in     al,0xf5
  427fd4:	mov    ecx,0x4f7922a3
  427fd9:	loop   0x427f8d
  427fdb:	and    ebp,DWORD PTR [ecx+eiz*8]
  427fde:	call   0x4ad9c922
  427fe3:	inc    ebx
  427fe4:	sub    ebp,DWORD PTR [ebp-0x38]
  427fe7:	ss inc edi
  427fe9:	mov    bl,ah
  427feb:	iret   
  427fec:	push   esp
  427fed:	pop    ecx
  427fee:	sti    
  427fef:	clc    
  427ff0:	jbe    0x427fa4
  427ff2:	add    dl,BYTE PTR [ecx-0x37255434]
  427ff8:	(bad)  
  427ff9:	jle    0x42805b
  427ffb:	ret    0x3496
  427ffe:	dec    eax
  427fff:	outs   dx,DWORD PTR ds:[esi]
  428000:	(bad)  
  428001:	jmp    0x427fec
  428003:	mov    BYTE PTR [ebp+0x4cbb2e85],dh
  428009:	(bad)  
  42800a:	and    ch,BYTE PTR [edi]
  42800c:	(bad)  
  42800d:	mov    bh,0x8e
  42800f:	pop    es
  428010:	push   edi
  428011:	add    edi,edi
  428013:	mov    ah,0xbd
  428015:	ds mov bl,0xc9
  428018:	fs push esi
  42801a:	cmp    DWORD PTR [eax+0x7],0x54
  42801e:	mov    ds:0x6420bf5f,eax
  428023:	pop    ds
  428024:	pop    esp
  428025:	and    BYTE PTR [esi+0x636655d7],0x13
  42802c:	xchg   esp,eax
  42802d:	test   eax,0x3032cb05
  428032:	sub    al,0x5b
  428034:	mov    BYTE PTR [ecx-0x7d],ah
  428037:	push   ebx
  428038:	repnz cli 
  42803a:	cwde   
  42803b:	inc    esi
  42803c:	or     DWORD PTR [ecx+0x31],ebx
  42803f:	mov    ds:0x7ae873a8,eax
  428044:	add    DWORD PTR [esi],0xffffff8d
  428047:	fld    TBYTE PTR [esi+0x7aee40ed]
  42804d:	outs   dx,BYTE PTR ds:[esi]
  42804e:	xor    BYTE PTR [ebx+edi*2],cl
  428051:	xor    ecx,DWORD PTR [edi+ecx*2]
  428054:	ins    BYTE PTR es:[edi],dx
  428055:	(bad)  
  428056:	mov    bl,0xbf
  428058:	mov    dh,cl
  42805a:	mov    eax,ds:0x5c0a9421
  42805f:	lea    ebx,[edx-0x2e]
  428062:	cmp    eax,0xd2851a07
  428067:	aaa    
  428068:	div    ebp
  42806a:	xchg   esp,eax
  42806b:	xchg   esp,eax
  42806c:	aaa    
  42806d:	pusha  
  42806e:	popa   
  42806f:	shl    BYTE PTR [ebx+eax*2+0x6],0x5
  428074:	jl     0x428025
  428076:	rcr    ecx,0xea
  428079:	adc    ebx,DWORD PTR [edx+0x2268df8b]
  42807f:	add    al,0xb1
  428081:	mov    eax,ds:0x69eb91d
  428086:	jbe    0x428078
  428088:	push   edi
  428089:	jmp    0xa9b7:0x468fc209
  428090:	sahf   
  428091:	push   cs
  428092:	xchg   edx,eax
  428093:	inc    edx
  428094:	mov    ds,WORD PTR [edx-0x5e]
  428097:	cmp    DWORD PTR [ebx+0xc],0x42
  42809b:	pushf  
  42809c:	pop    edi
  42809d:	adc    dh,BYTE PTR ds:0xb3a8b660
  4280a3:	sbb    edx,ecx
  4280a5:	lock sbb ebp,eax
  4280a8:	cs stos BYTE PTR es:[edi],al
  4280aa:	xlat   BYTE PTR ds:[ebx]
  4280ab:	fs in  eax,0xa7
  4280ae:	mov    al,ds:0x5a88bd7d
  4280b3:	jnp    0x4280d6
  4280b5:	lods   eax,DWORD PTR ds:[esi]
  4280b6:	int    0x96
  4280b8:	add    al,0x93
  4280ba:	push   cs
  4280bb:	js     0x4280a3
  4280bd:	mov    ?,ebp
  4280bf:	mov    eax,ds:0x6a849a71
  4280c4:	jmp    0x2988:0x688e5a69
  4280cb:	cmp    ebx,DWORD PTR [edx+0x8cb57dd]
  4280d1:	mov    al,0x8a
  4280d3:	loopne 0x42805c
  4280d5:	xchg   edx,eax
  4280d6:	aaa    
  4280d7:	adc    al,0x39
  4280d9:	sub    BYTE PTR [eax],ah
  4280db:	retf   
  4280dc:	stos   BYTE PTR es:[edi],al
  4280dd:	out    0x64,eax
  4280df:	mov    edi,0x92ce24bf
  4280e4:	fstp   TBYTE PTR [edi+0x7824b4cd]
  4280ea:	hlt    
  4280eb:	jecxz  0x428070
  4280ed:	data16 loopne 0x42811f
  4280f0:	(bad)  
  4280f1:	push   edi
  4280f2:	dec    edx
  4280f3:	or     BYTE PTR [edx+ebp*4],dh
  4280f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280f7:	cmp    al,0x9f
  4280f9:	push   ss
  4280fa:	fdiv   QWORD PTR [esi+0x55]
  4280fd:	retf   
  4280fe:	les    esi,FWORD PTR [esi+0x6ef4e0eb]
  428104:	jmp    0x94813806
  428109:	inc    ebx
  42810a:	int3   
  42810b:	lea    eax,[eax+ebx*8-0x2b]
  42810f:	int3   
  428110:	retf   
  428111:	sub    BYTE PTR [eax],bh
  428113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428114:	sbb    BYTE PTR [esi-0x22faa4c1],bl
  42811a:	cdq    
  42811b:	dec    edi
  42811c:	aad    0x95
  42811e:	mov    esp,0xca3ca28e
  428123:	outs   dx,BYTE PTR fs:[esi]
  428125:	fild   DWORD PTR [ebx-0x5a4ca3e3]
  42812b:	sub    DWORD PTR [ecx+0x22706814],ebx
  428131:	push   ss
  428132:	stc    
  428133:	inc    ecx
  428134:	cmp    bp,0xff94
  428138:	mov    ds:0xde566d78,al
  42813d:	outs   dx,BYTE PTR ds:[esi]
  42813e:	in     al,dx
  42813f:	pusha  
  428140:	xrelease mov BYTE PTR [eax-0x35],bl
  428144:	inc    edx
  428145:	dec    eax
  428146:	repz push edi
  428148:	nop
  428149:	mov    eax,0x5f92342a
  42814e:	dec    esi
  42814f:	mov    ecx,DWORD PTR [edx+0x56]
  428152:	(bad)  
  428153:	fsubr  DWORD PTR [eax-0x41]
  428156:	jnp    0x428156
  428158:	and    bl,bh
  42815a:	cmp    esi,0x1c992e33
  428160:	test   DWORD PTR [esi+0x2da7d5c4],0x1358779b
  42816a:	xor    al,BYTE PTR [ebx+0x7db6c5bd]
  428170:	fiadd  DWORD PTR [ecx-0x3c]
  428173:	test   eax,0xec6fed25
  428178:	mov    ebp,0x584a6425
  42817d:	mov    dl,0x9c
  42817f:	(bad)  
  428181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428182:	sub    BYTE PTR [esp+edi*2-0x1e17f229],bh
  428189:	jnp    0x428146
  42818b:	or     eax,0x7314af43
  428190:	push   0x72
  428192:	gs mov ecx,0x5e222b1a
  428198:	stos   BYTE PTR es:[edi],al
  428199:	dec    edx
  42819a:	stos   DWORD PTR es:[edi],eax
  42819b:	sbb    BYTE PTR [ecx],cl
  42819d:	xchg   BYTE PTR [esi],ah
  42819f:	cmp    BYTE PTR [ecx-0x5a],bl
  4281a2:	in     al,dx
  4281a3:	int    0x15
  4281a5:	xor    DWORD PTR [edx+0x6f822987],0x92a2a4a0
  4281af:	stc    
  4281b0:	cwde   
  4281b1:	jae    0x428197
  4281b3:	repnz arpl WORD PTR [ebx-0x17],sp
  4281b7:	scas   eax,DWORD PTR es:[edi]
  4281b8:	pop    esi
  4281b9:	push   cs
  4281ba:	ds ret 0xed06
  4281be:	test   cl,dh
  4281c0:	cmp    al,0x38
  4281c2:	into   
  4281c3:	and    DWORD PTR [eax-0x68f87746],edi
  4281c9:	push   0x9ad9c860
  4281ce:	mov    ebx,0x9b433df
  4281d3:	cli    
  4281d4:	push   0x6
  4281d6:	ss cdq 
  4281d8:	enter  0xba0d,0x77
  4281dc:	ficom  DWORD PTR [esi]
  4281de:	xchg   ecx,eax
  4281df:	jno    0x42820f
  4281e1:	jns    0x4281d8
  4281e3:	cmp    dl,BYTE PTR [esi-0x2f]
  4281e6:	cmp    eax,0x113cc656
	...
