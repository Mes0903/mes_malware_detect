
e3b1ca5d0989ff4b5038d3c229d0d2335dcf5a393a0808e17a87bfe658d104a1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xc
  401006:	mov    eax,DWORD PTR [ebp+0x8]
  401009:	mov    DWORD PTR [ebp-0x8],eax
  40100c:	mov    ecx,DWORD PTR [ebp+0xc]
  40100f:	mov    DWORD PTR [ebp-0xc],ecx
  401012:	mov    DWORD PTR [ebp-0x4],0x22b
  401019:	mov    edx,DWORD PTR [ebp-0x8]
  40101c:	cmp    edx,DWORD PTR [ebp-0xc]
  40101f:	jae    0x40102f
  401021:	mov    DWORD PTR [ebp-0x4],0x22b
  401028:	mov    eax,DWORD PTR [ebp-0x8]
  40102b:	jmp    0x401039
  40102d:	jmp    0x401039
  40102f:	mov    DWORD PTR [ebp-0x4],0x22b
  401036:	mov    eax,DWORD PTR [ebp-0xc]
  401039:	mov    esp,ebp
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	sub    esp,0xc
  401046:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  40104d:	mov    DWORD PTR [ebp-0xc],0x3000
  401054:	mov    DWORD PTR [ebp-0x4],0x40
  40105b:	mov    eax,DWORD PTR [ebp-0x4]
  40105e:	push   eax
  40105f:	mov    ecx,DWORD PTR [ebp-0xc]
  401062:	push   ecx
  401063:	mov    edx,DWORD PTR [ebp+0x8]
  401066:	push   edx
  401067:	push   0x0
  401069:	push   0xffffffff
  40106b:	call   DWORD PTR ds:0x4222ec
  401071:	mov    esp,ebp
  401073:	pop    ebp
  401074:	ret    
  401075:	int3   
  401076:	int3   
  401077:	int3   
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	pop    ebp
  401084:	ret    
  401085:	int3   
  401086:	int3   
  401087:	int3   
  401088:	int3   
  401089:	int3   
  40108a:	int3   
  40108b:	int3   
  40108c:	int3   
  40108d:	int3   
  40108e:	int3   
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	push   ecx
  401094:	mov    DWORD PTR [ebp-0x4],0x4
  40109b:	mov    eax,DWORD PTR [ebp-0x4]
  40109e:	add    eax,0x401aa0
  4010a3:	mov    ds:0x422b5c,eax
  4010a8:	mov    esp,ebp
  4010aa:	pop    ebp
  4010ab:	ret    
  4010ac:	int3   
  4010ad:	int3   
  4010ae:	int3   
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	push   ecx
  4010b4:	mov    DWORD PTR [ebp-0x4],0x4
  4010bb:	mov    eax,DWORD PTR [ebp-0x4]
  4010be:	add    eax,0x4219f4
  4010c3:	mov    ds:0x422b5c,eax
  4010c8:	mov    esp,ebp
  4010ca:	pop    ebp
  4010cb:	ret    
  4010cc:	int3   
  4010cd:	int3   
  4010ce:	int3   
  4010cf:	int3   
  4010d0:	push   ebp
  4010d1:	mov    ebp,esp
  4010d3:	mov    eax,DWORD PTR [ebp+0x8]
  4010d6:	mov    eax,DWORD PTR [eax-0x4]
  4010d9:	pop    ebp
  4010da:	ret    
  4010db:	int3   
  4010dc:	int3   
  4010dd:	int3   
  4010de:	int3   
  4010df:	int3   
  4010e0:	push   ebp
  4010e1:	mov    ebp,esp
  4010e3:	mov    eax,DWORD PTR [ebp+0xc]
  4010e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4010e9:	movzx  eax,WORD PTR [ecx+eax*2]
  4010ed:	pop    ebp
  4010ee:	ret    
  4010ef:	int3   
  4010f0:	push   ebp
  4010f1:	mov    ebp,esp
  4010f3:	mov    esp,ecx
  4010f5:	pop    ecx
  4010f6:	jmp    eax
  4010f8:	pop    ebp
  4010f9:	ret    
  4010fa:	int3   
  4010fb:	int3   
  4010fc:	int3   
  4010fd:	int3   
  4010fe:	int3   
  4010ff:	int3   
  401100:	push   ebp
  401101:	mov    ebp,esp
  401103:	sub    esp,0x30
  401106:	mov    DWORD PTR [ebp-0x8],0x11cb
  40110d:	mov    DWORD PTR [ebp-0x10],0x0
  401114:	jmp    0x40111f
  401116:	mov    eax,DWORD PTR [ebp-0x10]
  401119:	add    eax,0x4
  40111c:	mov    DWORD PTR [ebp-0x10],eax
  40111f:	mov    ecx,DWORD PTR [ebp-0x10]
  401122:	cmp    ecx,DWORD PTR [ebp+0xc]
  401125:	jae    0x4011e6
  40112b:	mov    DWORD PTR [ebp-0x8],0x4189
  401132:	mov    edx,DWORD PTR [ebp-0x10]
  401135:	add    edx,0x563
  40113b:	mov    DWORD PTR [ebp-0x28],edx
  40113e:	mov    eax,DWORD PTR [ebp-0x28]
  401141:	mov    DWORD PTR [ebp-0x24],eax
  401144:	mov    ecx,DWORD PTR [ebp-0x24]
  401147:	mov    DWORD PTR [ebp-0x20],ecx
  40114a:	mov    edx,DWORD PTR [ebp-0x20]
  40114d:	mov    DWORD PTR [ebp-0x1c],edx
  401150:	cmp    DWORD PTR [ebp-0x10],0x0
  401154:	jne    0x4011a6
  401156:	push   0x104
  40115b:	push   0x422b60
  401160:	call   DWORD PTR ds:0x4222f0
  401166:	push   0x422000
  40116b:	push   0x422b60
  401170:	call   DWORD PTR ds:0x4222f4
  401176:	push   0x0
  401178:	push   0x80
  40117d:	push   0x3
  40117f:	push   0x0
  401181:	push   0x3
  401183:	push   0x1
  401185:	push   0x422b60
  40118a:	call   DWORD PTR ds:0x4222f8
  401190:	mov    DWORD PTR [ebp-0x4],eax
  401193:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401197:	je     0x40119f
  401199:	cmp    DWORD PTR [ebp-0x4],0x0
  40119d:	jne    0x4011a6
  40119f:	mov    eax,0x42
  4011a4:	jmp    0x4011e6
  4011a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4011a9:	mov    DWORD PTR [ebp-0x30],eax
  4011ac:	mov    ecx,DWORD PTR [ebp-0x30]
  4011af:	mov    DWORD PTR [ebp-0x14],ecx
  4011b2:	mov    edx,DWORD PTR [ebp-0x10]
  4011b5:	mov    DWORD PTR [ebp-0x18],edx
  4011b8:	mov    eax,DWORD PTR [ebp+0x8]
  4011bb:	add    eax,DWORD PTR [ebp-0x10]
  4011be:	mov    DWORD PTR [ebp-0x2c],eax
  4011c1:	mov    ecx,DWORD PTR [ebp-0x2c]
  4011c4:	mov    edx,DWORD PTR [ecx]
  4011c6:	add    edx,DWORD PTR [ebp-0x18]
  4011c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4011cc:	mov    DWORD PTR [eax],edx
  4011ce:	mov    ecx,DWORD PTR [ebp+0x8]
  4011d1:	add    ecx,DWORD PTR [ebp-0x10]
  4011d4:	mov    edx,DWORD PTR [ecx]
  4011d6:	xor    edx,DWORD PTR [ebp-0x14]
  4011d9:	mov    eax,DWORD PTR [ebp+0x8]
  4011dc:	add    eax,DWORD PTR [ebp-0x10]
  4011df:	mov    DWORD PTR [eax],edx
  4011e1:	jmp    0x401116
  4011e6:	mov    esp,ebp
  4011e8:	pop    ebp
  4011e9:	ret    
  4011ea:	int3   
  4011eb:	int3   
  4011ec:	int3   
  4011ed:	int3   
  4011ee:	int3   
  4011ef:	int3   
  4011f0:	push   ebp
  4011f1:	mov    ebp,esp
  4011f3:	sub    esp,0x14
  4011f6:	mov    eax,DWORD PTR [ebp+0x8]
  4011f9:	cmp    DWORD PTR [eax+0x4],0x0
  4011fd:	je     0x401247
  4011ff:	mov    DWORD PTR [ebp-0x14],0x2a1
  401206:	mov    ecx,DWORD PTR [ebp+0x8]
  401209:	mov    edx,DWORD PTR [ecx+0x4]
  40120c:	sub    edx,0x8
  40120f:	shr    edx,1
  401211:	mov    DWORD PTR [ebp-0xc],edx
  401214:	mov    eax,DWORD PTR [ebp+0x8]
  401217:	add    eax,0x8
  40121a:	mov    DWORD PTR [ebp-0x10],eax
  40121d:	mov    ecx,DWORD PTR [ebp+0x8]
  401220:	push   ecx
  401221:	mov    edx,DWORD PTR [ebp+0x10]
  401224:	push   edx
  401225:	mov    eax,DWORD PTR [ebp+0xc]
  401228:	push   eax
  401229:	mov    ecx,DWORD PTR [ebp-0x10]
  40122c:	push   ecx
  40122d:	mov    edx,DWORD PTR [ebp-0xc]
  401230:	push   edx
  401231:	call   0x401250
  401236:	add    esp,0x14
  401239:	mov    eax,DWORD PTR [ebp+0x8]
  40123c:	mov    ecx,DWORD PTR [ebp+0x8]
  40123f:	add    ecx,DWORD PTR [eax+0x4]
  401242:	mov    DWORD PTR [ebp+0x8],ecx
  401245:	jmp    0x4011f6
  401247:	mov    esp,ebp
  401249:	pop    ebp
  40124a:	ret    
  40124b:	int3   
  40124c:	int3   
  40124d:	int3   
  40124e:	int3   
  40124f:	int3   
  401250:	push   ebp
  401251:	mov    ebp,esp
  401253:	sub    esp,0x10
  401256:	mov    DWORD PTR [ebp-0x4],0x0
  40125d:	jmp    0x401268
  40125f:	mov    eax,DWORD PTR [ebp-0x4]
  401262:	add    eax,0x1
  401265:	mov    DWORD PTR [ebp-0x4],eax
  401268:	mov    ecx,DWORD PTR [ebp-0x4]
  40126b:	cmp    ecx,DWORD PTR [ebp+0x8]
  40126e:	jae    0x4012eb
  401270:	mov    edx,DWORD PTR [ebp-0x4]
  401273:	push   edx
  401274:	mov    eax,DWORD PTR [ebp+0xc]
  401277:	push   eax
  401278:	call   0x4010e0
  40127d:	add    esp,0x8
  401280:	sar    eax,0xc
  401283:	cmp    eax,0x3
  401286:	jne    0x4012e6
  401288:	mov    DWORD PTR [ebp-0x10],0xfff
  40128f:	mov    DWORD PTR [ebp-0xc],0x37
  401296:	mov    DWORD PTR [ebp-0xc],0x37
  40129d:	mov    ecx,DWORD PTR [ebp-0x4]
  4012a0:	push   ecx
  4012a1:	mov    edx,DWORD PTR [ebp+0xc]
  4012a4:	push   edx
  4012a5:	call   0x4010e0
  4012aa:	add    esp,0x8
  4012ad:	and    eax,DWORD PTR [ebp-0x10]
  4012b0:	add    eax,0x2d23
  4012b5:	mov    DWORD PTR [ebp-0x8],eax
  4012b8:	mov    DWORD PTR [ebp-0xc],0x37
  4012bf:	mov    eax,DWORD PTR [ebp+0x18]
  4012c2:	mov    ecx,DWORD PTR [ebp+0x10]
  4012c5:	add    ecx,DWORD PTR [eax]
  4012c7:	mov    edx,DWORD PTR [ebp-0x8]
  4012ca:	mov    eax,DWORD PTR [ecx+edx*1-0x2d23]
  4012d1:	add    eax,DWORD PTR [ebp+0x14]
  4012d4:	mov    ecx,DWORD PTR [ebp+0x18]
  4012d7:	mov    edx,DWORD PTR [ebp+0x10]
  4012da:	add    edx,DWORD PTR [ecx]
  4012dc:	mov    ecx,DWORD PTR [ebp-0x8]
  4012df:	mov    DWORD PTR [edx+ecx*1-0x2d23],eax
  4012e6:	jmp    0x40125f
  4012eb:	mov    esp,ebp
  4012ed:	pop    ebp
  4012ee:	ret    
  4012ef:	int3   
  4012f0:	push   ebp
  4012f1:	mov    ebp,esp
  4012f3:	sub    esp,0x22c
  4012f9:	mov    DWORD PTR [ebp-0x220],0x7c
  401303:	mov    DWORD PTR [ebp-0x214],0x0
  40130d:	mov    eax,ds:0x4222f0
  401312:	mov    DWORD PTR [ebp-0x4],eax
  401315:	push   0x104
  40131a:	lea    ecx,[ebp-0x210]
  401320:	push   ecx
  401321:	call   DWORD PTR [ebp-0x4]
  401324:	mov    edx,DWORD PTR ds:0x4222f4
  40132a:	mov    DWORD PTR [ebp-0x224],edx
  401330:	mov    eax,ds:0x4222f8
  401335:	mov    DWORD PTR [ebp-0x218],eax
  40133b:	mov    DWORD PTR [ebp-0x228],0x0
  401345:	jmp    0x401356
  401347:	mov    ecx,DWORD PTR [ebp-0x228]
  40134d:	add    ecx,0x1
  401350:	mov    DWORD PTR [ebp-0x228],ecx
  401356:	mov    edx,DWORD PTR [ebp-0x228]
  40135c:	cmp    edx,DWORD PTR [ebp+0x10]
  40135f:	jge    0x40139a
  401361:	mov    eax,DWORD PTR [ebp+0xc]
  401364:	add    eax,DWORD PTR [ebp-0x228]
  40136a:	movzx  ecx,BYTE PTR [eax]
  40136d:	mov    DWORD PTR [ebp-0x22c],ecx
  401373:	mov    DWORD PTR [ebp-0x220],0x7c
  40137d:	mov    edx,DWORD PTR [ebp+0x8]
  401380:	add    edx,DWORD PTR [ebp-0x228]
  401386:	mov    al,BYTE PTR [ebp-0x22c]
  40138c:	mov    BYTE PTR [edx],al
  40138e:	mov    DWORD PTR [ebp-0x220],0x33
  401398:	jmp    0x401347
  40139a:	mov    esp,ebp
  40139c:	pop    ebp
  40139d:	ret    
  40139e:	int3   
  40139f:	int3   
  4013a0:	push   ebp
  4013a1:	mov    ebp,esp
  4013a3:	sub    esp,0x50
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR [ebp-0x50],eax
  4013ac:	cmp    DWORD PTR [ebp-0x50],0x200
  4013b3:	ja     0x4013dd
  4013b5:	cmp    DWORD PTR [ebp-0x50],0x200
  4013bc:	je     0x401421
  4013be:	cmp    DWORD PTR [ebp-0x50],0x1
  4013c2:	je     0x4013f8
  4013c4:	cmp    DWORD PTR [ebp-0x50],0x2
  4013c8:	je     0x40159b
  4013ce:	cmp    DWORD PTR [ebp-0x50],0xf
  4013d2:	je     0x4014dd
  4013d8:	jmp    0x4015a7
  4013dd:	cmp    DWORD PTR [ebp-0x50],0x201
  4013e4:	je     0x401402
  4013e6:	cmp    DWORD PTR [ebp-0x50],0x202
  4013ed:	je     0x4014c8
  4013f3:	jmp    0x4015a7
  4013f8:	mov    eax,0x1
  4013fd:	jmp    0x4015bd
  401402:	mov    DWORD PTR ds:0x422b50,0x0
  40140c:	push   0x1
  40140e:	push   0x0
  401410:	mov    ecx,DWORD PTR [ebp+0x8]
  401413:	push   ecx
  401414:	call   DWORD PTR ds:0x422330
  40141a:	xor    eax,eax
  40141c:	jmp    0x4015bd
  401421:	mov    edx,DWORD PTR [ebp+0x10]
  401424:	and    edx,0x1
  401427:	je     0x4014c1
  40142d:	cmp    DWORD PTR ds:0x422b50,0x3e8
  401437:	jge    0x4014c1
  40143d:	mov    eax,DWORD PTR [ebp+0x14]
  401440:	and    eax,0xffff
  401445:	movzx  ecx,ax
  401448:	mov    edx,DWORD PTR ds:0x422b50
  40144e:	mov    DWORD PTR [edx*8+0x422b54],ecx
  401455:	mov    eax,DWORD PTR [ebp+0x14]
  401458:	shr    eax,0x10
  40145b:	and    eax,0xffff
  401460:	movzx  ecx,ax
  401463:	mov    edx,DWORD PTR ds:0x422b50
  401469:	mov    DWORD PTR [edx*8+0x422b58],ecx
  401470:	mov    eax,ds:0x422b50
  401475:	add    eax,0x1
  401478:	mov    ds:0x422b50,eax
  40147d:	mov    ecx,DWORD PTR [ebp+0x8]
  401480:	push   ecx
  401481:	call   DWORD PTR ds:0x422334
  401487:	mov    DWORD PTR [ebp-0x4c],eax
  40148a:	push   0x0
  40148c:	mov    edx,DWORD PTR [ebp+0x14]
  40148f:	shr    edx,0x10
  401492:	and    edx,0xffff
  401498:	movzx  eax,dx
  40149b:	push   eax
  40149c:	mov    ecx,DWORD PTR [ebp+0x14]
  40149f:	and    ecx,0xffff
  4014a5:	movzx  edx,cx
  4014a8:	push   edx
  4014a9:	mov    eax,DWORD PTR [ebp-0x4c]
  4014ac:	push   eax
  4014ad:	call   DWORD PTR ds:0x422424
  4014b3:	mov    ecx,DWORD PTR [ebp-0x4c]
  4014b6:	push   ecx
  4014b7:	mov    edx,DWORD PTR [ebp+0x8]
  4014ba:	push   edx
  4014bb:	call   DWORD PTR ds:0x422338
  4014c1:	xor    eax,eax
  4014c3:	jmp    0x4015bd
  4014c8:	push   0x0
  4014ca:	push   0x0
  4014cc:	mov    eax,DWORD PTR [ebp+0x8]
  4014cf:	push   eax
  4014d0:	call   DWORD PTR ds:0x422330
  4014d6:	xor    eax,eax
  4014d8:	jmp    0x4015bd
  4014dd:	lea    ecx,[ebp-0x40]
  4014e0:	push   ecx
  4014e1:	mov    edx,DWORD PTR [ebp+0x8]
  4014e4:	push   edx
  4014e5:	call   DWORD PTR ds:0x42233c
  4014eb:	mov    DWORD PTR [ebp-0x4c],eax
  4014ee:	push   0x7f02
  4014f3:	push   0x0
  4014f5:	call   DWORD PTR ds:0x422340
  4014fb:	push   eax
  4014fc:	call   DWORD PTR ds:0x422344
  401502:	push   0x1
  401504:	call   DWORD PTR ds:0x422348
  40150a:	mov    DWORD PTR [ebp-0x44],0x0
  401511:	jmp    0x40151c
  401513:	mov    eax,DWORD PTR [ebp-0x44]
  401516:	add    eax,0x1
  401519:	mov    DWORD PTR [ebp-0x44],eax
  40151c:	mov    ecx,DWORD PTR ds:0x422b50
  401522:	sub    ecx,0x1
  401525:	cmp    DWORD PTR [ebp-0x44],ecx
  401528:	jge    0x40156d
  40152a:	mov    edx,DWORD PTR [ebp-0x44]
  40152d:	add    edx,0x1
  401530:	mov    DWORD PTR [ebp-0x48],edx
  401533:	jmp    0x40153e
  401535:	mov    eax,DWORD PTR [ebp-0x48]
  401538:	add    eax,0x1
  40153b:	mov    DWORD PTR [ebp-0x48],eax
  40153e:	mov    ecx,DWORD PTR [ebp-0x48]
  401541:	cmp    ecx,DWORD PTR ds:0x422b50
  401547:	jge    0x40156b
  401549:	mov    edx,DWORD PTR [ebp-0x48]
  40154c:	mov    eax,DWORD PTR [edx*8+0x422b58]
  401553:	push   eax
  401554:	mov    ecx,DWORD PTR [ebp-0x48]
  401557:	mov    edx,DWORD PTR [ecx*8+0x422b54]
  40155e:	push   edx
  40155f:	mov    eax,DWORD PTR [ebp-0x4c]
  401562:	push   eax
  401563:	call   DWORD PTR ds:0x422428
  401569:	jmp    0x401535
  40156b:	jmp    0x401513
  40156d:	push   0x0
  40156f:	call   DWORD PTR ds:0x422348
  401575:	push   0x7f00
  40157a:	push   0x0
  40157c:	call   DWORD PTR ds:0x422340
  401582:	push   eax
  401583:	call   DWORD PTR ds:0x422344
  401589:	lea    ecx,[ebp-0x40]
  40158c:	push   ecx
  40158d:	mov    edx,DWORD PTR [ebp+0x8]
  401590:	push   edx
  401591:	call   DWORD PTR ds:0x42234c
  401597:	xor    eax,eax
  401599:	jmp    0x4015bd
  40159b:	push   0x0
  40159d:	call   DWORD PTR ds:0x422350
  4015a3:	xor    eax,eax
  4015a5:	jmp    0x4015bd
  4015a7:	mov    eax,DWORD PTR [ebp+0x14]
  4015aa:	push   eax
  4015ab:	mov    ecx,DWORD PTR [ebp+0x10]
  4015ae:	push   ecx
  4015af:	mov    edx,DWORD PTR [ebp+0xc]
  4015b2:	push   edx
  4015b3:	mov    eax,DWORD PTR [ebp+0x8]
  4015b6:	push   eax
  4015b7:	call   DWORD PTR ds:0x422354
  4015bd:	mov    esp,ebp
  4015bf:	pop    ebp
  4015c0:	ret    0x10
  4015c3:	int3   
  4015c4:	int3   
  4015c5:	int3   
  4015c6:	int3   
  4015c7:	int3   
  4015c8:	int3   
  4015c9:	int3   
  4015ca:	int3   
  4015cb:	int3   
  4015cc:	int3   
  4015cd:	int3   
  4015ce:	int3   
  4015cf:	int3   
  4015d0:	push   ebp
  4015d1:	mov    ebp,esp
  4015d3:	sub    esp,0xcc
  4015d9:	push   ebx
  4015da:	push   esi
  4015db:	push   edi
  4015dc:	mov    DWORD PTR ds:0x422c64,ebp
  4015e2:	pusha  
  4015e3:	mov    DWORD PTR [ebp-0x8c],0x0
  4015ed:	mov    DWORD PTR [ebp-0xa0],0x80000002
  4015f7:	mov    eax,ds:0x422488
  4015fc:	mov    DWORD PTR [ebp-0xb8],eax
  401602:	mov    DWORD PTR [ebp-0xb0],0x422030
  40160c:	mov    ecx,0x43
  401611:	mov    edx,DWORD PTR [ebp-0xb0]
  401617:	mov    WORD PTR [edx],cx
  40161a:	mov    eax,0x4c
  40161f:	mov    ecx,DWORD PTR [ebp-0xb0]
  401625:	mov    WORD PTR [ecx+0x2],ax
  401629:	lea    edx,[ebp-0xb4]
  40162f:	push   edx
  401630:	mov    eax,DWORD PTR [ebp-0xb0]
  401636:	push   eax
  401637:	push   0x80000000
  40163c:	call   DWORD PTR [ebp-0xb8]
  401642:	test   eax,eax
  401644:	je     0x40164d
  401646:	xor    eax,eax
  401648:	jmp    0x401916
  40164d:	call   0x401090
  401652:	mov    DWORD PTR [ebp-0x80],0x64
  401659:	mov    DWORD PTR [ebp-0x1c],0x32
  401660:	mov    DWORD PTR [ebp-0x8c],0x0
  40166a:	mov    DWORD PTR [ebp-0x54],0x0
  401671:	mov    DWORD PTR [ebp-0x7c],0x1
  401678:	mov    DWORD PTR [ebp-0x14],0x0
  40167f:	mov    DWORD PTR [ebp-0x80],0x64
  401686:	mov    DWORD PTR [ebp-0x1c],0x32
  40168d:	mov    DWORD PTR [ebp-0x8c],0x0
  401697:	mov    DWORD PTR [ebp-0x54],0x0
  40169e:	mov    DWORD PTR [ebp-0x7c],0x1
  4016a5:	mov    DWORD PTR [ebp-0x18],0x3
  4016ac:	mov    DWORD PTR [ebp-0x14],0x0
  4016b3:	mov    DWORD PTR [ebp-0x80],0x64
  4016ba:	mov    DWORD PTR [ebp-0x1c],0x32
  4016c1:	mov    DWORD PTR [ebp-0x8c],0x0
  4016cb:	mov    DWORD PTR [ebp-0x54],0x0
  4016d2:	mov    DWORD PTR [ebp-0x7c],0x1
  4016d9:	mov    DWORD PTR [ebp-0x18],0x3
  4016e0:	mov    ecx,DWORD PTR ds:0x422b5c
  4016e6:	push   ecx
  4016e7:	call   0x4010d0
  4016ec:	add    esp,0x4
  4016ef:	mov    DWORD PTR [ebp-0x90],eax
  4016f5:	mov    edx,DWORD PTR [ebp-0x90]
  4016fb:	push   edx
  4016fc:	call   0x401040
  401701:	add    esp,0x4
  401704:	mov    DWORD PTR [ebp-0x88],eax
  40170a:	mov    eax,DWORD PTR [ebp-0x90]
  401710:	push   eax
  401711:	push   0x0
  401713:	mov    ecx,DWORD PTR [ebp-0x88]
  401719:	push   ecx
  40171a:	call   0x401080
  40171f:	add    esp,0xc
  401722:	mov    edx,DWORD PTR [ebp-0x90]
  401728:	mov    DWORD PTR [ebp-0x98],edx
  40172e:	mov    eax,DWORD PTR [ebp-0x8c]
  401734:	cmp    eax,DWORD PTR [ebp-0x90]
  40173a:	jae    0x4017aa
  40173c:	mov    ecx,DWORD PTR [ebp-0x98]
  401742:	push   ecx
  401743:	mov    edx,DWORD PTR [ebp-0x80]
  401746:	push   edx
  401747:	call   0x401000
  40174c:	add    esp,0x8
  40174f:	mov    DWORD PTR [ebp-0x9c],eax
  401755:	mov    eax,DWORD PTR [ebp-0x9c]
  40175b:	push   eax
  40175c:	mov    ecx,DWORD PTR ds:0x422b5c
  401762:	add    ecx,DWORD PTR [ebp-0x54]
  401765:	push   ecx
  401766:	mov    edx,DWORD PTR [ebp-0x88]
  40176c:	add    edx,DWORD PTR [ebp-0x8c]
  401772:	push   edx
  401773:	call   0x4012f0
  401778:	add    esp,0xc
  40177b:	mov    eax,DWORD PTR [ebp-0x1c]
  40177e:	add    eax,DWORD PTR [ebp-0x80]
  401781:	add    eax,DWORD PTR [ebp-0x54]
  401784:	mov    DWORD PTR [ebp-0x54],eax
  401787:	mov    ecx,DWORD PTR [ebp-0x8c]
  40178d:	add    ecx,DWORD PTR [ebp-0x80]
  401790:	mov    DWORD PTR [ebp-0x8c],ecx
  401796:	mov    edx,DWORD PTR [ebp-0x98]
  40179c:	sub    edx,DWORD PTR [ebp-0x9c]
  4017a2:	mov    DWORD PTR [ebp-0x98],edx
  4017a8:	jmp    0x40172e
  4017aa:	mov    eax,DWORD PTR [ebp-0x90]
  4017b0:	push   eax
  4017b1:	mov    ecx,DWORD PTR [ebp-0x88]
  4017b7:	push   ecx
  4017b8:	call   0x401100
  4017bd:	add    esp,0x8
  4017c0:	mov    DWORD PTR [ebp-0x54],0x0
  4017c7:	mov    DWORD PTR [ebp-0xbc],0x0
  4017d1:	call   0x4010b0
  4017d6:	mov    edx,DWORD PTR ds:0x422b5c
  4017dc:	push   edx
  4017dd:	call   0x4010d0
  4017e2:	add    esp,0x4
  4017e5:	mov    DWORD PTR [ebp-0xc0],eax
  4017eb:	mov    eax,DWORD PTR [ebp-0xc0]
  4017f1:	push   eax
  4017f2:	call   0x401040
  4017f7:	add    esp,0x4
  4017fa:	mov    DWORD PTR [ebp-0x50],eax
  4017fd:	mov    ecx,DWORD PTR [ebp-0xc0]
  401803:	push   ecx
  401804:	push   0x0
  401806:	mov    edx,DWORD PTR [ebp-0x50]
  401809:	push   edx
  40180a:	call   0x401080
  40180f:	add    esp,0xc
  401812:	mov    eax,DWORD PTR [ebp-0xc0]
  401818:	mov    DWORD PTR [ebp-0xc8],eax
  40181e:	mov    ecx,DWORD PTR [ebp-0xbc]
  401824:	cmp    ecx,DWORD PTR [ebp-0xc0]
  40182a:	jae    0x401897
  40182c:	mov    edx,DWORD PTR [ebp-0xc8]
  401832:	push   edx
  401833:	mov    eax,DWORD PTR [ebp-0x80]
  401836:	push   eax
  401837:	call   0x401000
  40183c:	add    esp,0x8
  40183f:	mov    DWORD PTR [ebp-0xcc],eax
  401845:	mov    ecx,DWORD PTR [ebp-0xcc]
  40184b:	push   ecx
  40184c:	mov    edx,DWORD PTR ds:0x422b5c
  401852:	add    edx,DWORD PTR [ebp-0x54]
  401855:	push   edx
  401856:	mov    eax,DWORD PTR [ebp-0x50]
  401859:	add    eax,DWORD PTR [ebp-0xbc]
  40185f:	push   eax
  401860:	call   0x4012f0
  401865:	add    esp,0xc
  401868:	mov    ecx,DWORD PTR [ebp-0x1c]
  40186b:	add    ecx,DWORD PTR [ebp-0x80]
  40186e:	add    ecx,DWORD PTR [ebp-0x54]
  401871:	mov    DWORD PTR [ebp-0x54],ecx
  401874:	mov    edx,DWORD PTR [ebp-0xbc]
  40187a:	add    edx,DWORD PTR [ebp-0x80]
  40187d:	mov    DWORD PTR [ebp-0xbc],edx
  401883:	mov    eax,DWORD PTR [ebp-0xc8]
  401889:	sub    eax,DWORD PTR [ebp-0xcc]
  40188f:	mov    DWORD PTR [ebp-0xc8],eax
  401895:	jmp    0x40181e
  401897:	mov    ecx,DWORD PTR [ebp-0xc0]
  40189d:	push   ecx
  40189e:	mov    edx,DWORD PTR [ebp-0x50]
  4018a1:	push   edx
  4018a2:	call   0x401100
  4018a7:	add    esp,0x8
  4018aa:	mov    eax,DWORD PTR [ebp-0x88]
  4018b0:	mov    ecx,DWORD PTR [ebp-0x50]
  4018b3:	mov    DWORD PTR [eax],ecx
  4018b5:	push   0x17000
  4018ba:	call   0x401040
  4018bf:	add    esp,0x4
  4018c2:	mov    DWORD PTR [ebp-0xc],eax
  4018c5:	push   0x15500
  4018ca:	mov    edx,DWORD PTR [ebp-0x88]
  4018d0:	push   edx
  4018d1:	mov    eax,DWORD PTR [ebp-0xc]
  4018d4:	add    eax,0x200
  4018d9:	push   eax
  4018da:	call   0x4012f0
  4018df:	add    esp,0xc
  4018e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4018e5:	sub    ecx,0x400000
  4018eb:	push   ecx
  4018ec:	mov    edx,DWORD PTR [ebp-0xc]
  4018ef:	push   edx
  4018f0:	mov    eax,DWORD PTR [ebp-0x50]
  4018f3:	push   eax
  4018f4:	call   0x4011f0
  4018f9:	add    esp,0xc
  4018fc:	popa   
  4018fd:	mov    eax,ds:0x422c64
  401902:	mov    ecx,eax
  401904:	xor    eax,eax
  401906:	je     0x401909
  401908:	ret    
  401909:	mov    eax,DWORD PTR [ebp-0xc]
  40190c:	add    eax,0x15350
  401911:	jmp    0x4010f0
  401916:	pop    edi
  401917:	pop    esi
  401918:	pop    ebx
  401919:	mov    esp,ebp
  40191b:	pop    ebp
  40191c:	ret    
  40191d:	int3   
  40191e:	int3   
  40191f:	int3   
  401920:	pop    eax
  401921:	and    eax,DWORD PTR [edx+0x0]
  401924:	pop    esp
  401925:	and    eax,DWORD PTR [edx+0x0]
  401928:	xor    BYTE PTR [ebx],ah
  40192a:	inc    edx
  40192b:	add    BYTE PTR [eax+0x23],dl
  40192e:	inc    edx
  40192f:	add    BYTE PTR [eax+0x23],ah
  401932:	inc    edx
  401933:	add    BYTE PTR [ebx+eiz*1+0x42],ah
  401937:	add    BYTE PTR [eax+0x23],ch
  40193a:	inc    edx
  40193b:	add    BYTE PTR [ebx+eiz*1+0x42],ch
  40193f:	add    BYTE PTR [eax+0x23],dh
  401942:	inc    edx
  401943:	add    BYTE PTR [ebx+eiz*1+0x42],dh
  401947:	add    BYTE PTR [eax+0x23],bh
  40194a:	inc    edx
  40194b:	add    BYTE PTR [ebx+eiz*1+0x42],bh
  40194f:	add    BYTE PTR [eax+0x34004223],al
  401955:	and    eax,DWORD PTR [edx+0x0]
  401958:	cmp    BYTE PTR [ebx],ah
  40195a:	inc    edx
  40195b:	add    BYTE PTR [ebx+eiz*1+0x23880042],al
  401962:	inc    edx
  401963:	add    BYTE PTR [ebx+eiz*1+0x23900042],cl
  40196a:	inc    edx
  40196b:	add    BYTE PTR [ebx+eiz*1+0x23980042],dl
  401972:	inc    edx
  401973:	add    BYTE PTR [eax+0x23],cl
  401976:	inc    edx
  401977:	add    BYTE PTR [ebx+eiz*1+0x23a00042],bl
  40197e:	inc    edx
  40197f:	add    BYTE PTR [ebx+eiz*1+0x23a80042],ah
  401986:	inc    edx
  401987:	add    BYTE PTR [ebx+eiz*1+0x23b00042],ch
  40198e:	inc    edx
  40198f:	add    BYTE PTR [ebx+eiz*1+0x23b80042],dh
  401996:	inc    edx
  401997:	add    BYTE PTR [ebx+eiz*1+0x23c00042],bh
  40199e:	inc    edx
  40199f:	add    ah,al
  4019a1:	and    eax,DWORD PTR [edx+0x0]
  4019a4:	enter  0x4223,0x0
  4019a8:	int3   
  4019a9:	and    eax,DWORD PTR [edx+0x0]
  4019ac:	shl    BYTE PTR [ebx],1
  4019ae:	inc    edx
  4019af:	add    ah,dl
  4019b1:	and    eax,DWORD PTR [edx+0x0]
  4019b4:	cmp    al,0x23
  4019b6:	inc    edx
  4019b7:	add    al,bl
  4019b9:	and    eax,DWORD PTR [edx+0x0]
  4019bc:	fsub   QWORD PTR [ebx]
  4019be:	inc    edx
  4019bf:	add    al,ah
  4019c1:	and    eax,DWORD PTR [edx+0x0]
  4019c4:	in     al,0x23
  4019c6:	inc    edx
  4019c7:	add    al,ch
  4019c9:	and    eax,DWORD PTR [edx+0x0]
  4019cc:	in     al,dx
  4019cd:	and    eax,DWORD PTR [edx+0x0]
  4019d0:	lock and eax,DWORD PTR [edx+0x0]
  4019d4:	hlt    
  4019d5:	and    eax,DWORD PTR [edx+0x0]
  4019d8:	clc    
  4019d9:	and    eax,DWORD PTR [edx+0x0]
  4019dc:	cld    
  4019dd:	and    eax,DWORD PTR [edx+0x0]
  4019e0:	add    BYTE PTR [edx+eax*2],ah
  4019e3:	add    BYTE PTR [esp],al
  4019e6:	inc    edx
  4019e7:	add    BYTE PTR [eax],cl
  4019e9:	and    al,0x42
  4019eb:	add    BYTE PTR [esp],cl
  4019ee:	inc    edx
  4019ef:	add    BYTE PTR [eax],dl
  4019f1:	and    al,0x42
  4019f3:	add    BYTE PTR [esp],dl
  4019f6:	inc    edx
  4019f7:	add    BYTE PTR [ebx+eiz*1+0x42],cl
  4019fb:	add    BYTE PTR [eax],bl
  4019fd:	and    al,0x42
  4019ff:	add    BYTE PTR [esp],bl
  401a02:	inc    edx
  401a03:	add    BYTE PTR [esp],ch
  401a06:	inc    edx
  401a07:	add    BYTE PTR [eax],dh
  401a09:	and    al,0x42
  401a0b:	add    BYTE PTR [esp],dh
  401a0e:	inc    edx
  401a0f:	add    BYTE PTR [eax],bh
  401a11:	and    al,0x42
  401a13:	add    BYTE PTR [esp],bh
  401a16:	inc    edx
  401a17:	add    BYTE PTR [eax+0x24],al
  401a1a:	inc    edx
  401a1b:	add    BYTE PTR [esp+0x42],al
  401a1f:	add    BYTE PTR [eax+0x24],cl
  401a22:	inc    edx
  401a23:	add    BYTE PTR [esp],ah
  401a26:	inc    edx
  401a27:	add    BYTE PTR [esp+0x42],cl
  401a2b:	add    BYTE PTR [eax+0x24],dl
  401a2e:	inc    edx
  401a2f:	add    BYTE PTR [esp+0x42],dl
  401a33:	add    BYTE PTR [eax+0x24],bl
  401a36:	inc    edx
  401a37:	add    BYTE PTR [esp+0x42],bl
  401a3b:	add    BYTE PTR [eax+0x24],ah
  401a3e:	inc    edx
  401a3f:	add    BYTE PTR [esp+0x42],ah
  401a43:	add    BYTE PTR [eax+0x24],ch
  401a46:	inc    edx
  401a47:	add    BYTE PTR [esp+0x42],ch
  401a4b:	add    BYTE PTR [eax],ch
  401a4d:	and    al,0x42
  401a4f:	add    BYTE PTR [eax+0x24],dh
  401a52:	inc    edx
  401a53:	add    BYTE PTR [esp+0x42],dh
  401a57:	add    BYTE PTR [esp+0x247c0042],bl
  401a5e:	inc    edx
  401a5f:	add    BYTE PTR [eax-0x73ffbddc],al
  401a65:	and    al,0x42
  401a67:	add    BYTE PTR [eax-0x6bffbddc],dl
  401a6d:	and    al,0x42
  401a6f:	add    ah,bh
  401a71:	and    al,BYTE PTR [edx+0x0]
  401a74:	add    BYTE PTR [ebx],ah
  401a76:	inc    edx
  401a77:	add    BYTE PTR [ebx+eiz*1],al
  401a7a:	inc    edx
  401a7b:	add    BYTE PTR [eax],cl
  401a7d:	and    eax,DWORD PTR [edx+0x0]
  401a80:	or     al,0x23
  401a82:	inc    edx
  401a83:	add    BYTE PTR [eax],dl
  401a85:	and    eax,DWORD PTR [edx+0x0]
  401a88:	adc    al,0x23
  401a8a:	inc    edx
  401a8b:	add    BYTE PTR [eax],bl
  401a8d:	and    eax,DWORD PTR [edx+0x0]
  401a90:	sbb    al,0x23
  401a92:	inc    edx
  401a93:	add    BYTE PTR [eax],ah
  401a95:	and    eax,DWORD PTR [edx+0x0]
  401a98:	and    al,0x23
  401a9a:	inc    edx
  401a9b:	add    BYTE PTR [eax],ch
  401a9d:	and    eax,DWORD PTR [edx+0x0]
  401aa0:	add    BYTE PTR [ebp+0x1],dl
  401aa3:	add    BYTE PTR [ebx+0x52],ah
  401aa6:	inc    ecx
  401aa7:	add    BYTE PTR [eax+eiz*2],bl
  401aaa:	je     0x401afc
  401aac:	adc    DWORD PTR [edx+0x63],ebp
  401aaf:	inc    ecx
  401ab0:	jmp    DWORD PTR [eax+0x72]
  401ab3:	gs lock jne 0x401ab7
  401ab7:	add    BYTE PTR [edi],ah
  401ab9:	push   0x61
  401abb:	fs pop ds
  401abd:	ins    BYTE PTR es:[edi],dx
  401abe:	bound  esi,QWORD PTR [edx+0x2]
  401ac1:	ja     0x401b3c
  401ac3:	inc    ebp
  401ac4:	fild   DWORD PTR [eax+eax*1+0x0]
  401ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ac9:	push   0x61
  401acb:	fs lahf 
  401acd:	ins    BYTE PTR es:[edi],dx
  401ace:	bound  esi,QWORD PTR [edx-0x3e]
  401ad1:	ja     0x401b4c
  401ad3:	inc    ebp
  401ad4:	mov    ebx,0x9c000052
  401ad9:	pusha  
  401ada:	je     0x401b29
  401adc:	mov    esp,0xbe6c7561
  401ae1:	dec    ebp
  401ae2:	popa   
  401ae3:	outs   dx,BYTE PTR ds:[esi]
  401ae4:	xchg   DWORD PTR [ecx+0x65],ebp
  401ae7:	inc    ecx
  401ae8:	arpl   WORD PTR ds:0x77a00000,ax
  401aee:	gs popa 
  401af0:	(bad)  
  401af1:	pusha  
  401af2:	inc    esi
  401af3:	imul   ecx,DWORD PTR [edi-0x78ffbea0],0x80727476
  401afd:	fs je  0x401b41
  401b00:	arpl   WORD PTR ds:0x60240000,ax
  401b06:	je     0x401b5f
	...
  401b38:	add    BYTE PTR [eax],al
  401b3a:	dec    edx
  401b3b:	imul   esp,DWORD PTR [edi+ebp*2+0x54],0x76
  401b40:	inc    esp
  401b41:	imul   edx,DWORD PTR [ecx+0x60],0x774c7463
  401b48:	jns    0x401b8b
  401b4a:	arpl   WORD PTR ds:0x60240000,ax
  401b50:	je     0x401b9f
  401b52:	xor    al,0x61
  401b54:	jne    0x401bc2
  401b56:	push   es
  401b57:	dec    ebp
  401b58:	popa   
  401b59:	outs   dx,BYTE PTR ds:[esi]
  401b5a:	jmp    FWORD PTR [eax+0x65]
  401b5d:	push   edi
  401b5e:	arpl   WORD PTR ds:0x75f0000,ax
  401b64:	inc    eax
  401b65:	add    BYTE PTR [edi+0x7],dl
  401b68:	inc    eax
  401b69:	add    BYTE PTR [edi],bh
  401b6b:	pop    es
  401b6c:	inc    eax
  401b6d:	add    BYTE PTR [edi],dh
  401b6f:	pop    es
  401b70:	inc    eax
  401b71:	add    BYTE PTR [ebx],bl
  401b73:	pop    es
  401b74:	inc    eax
  401b75:	add    BYTE PTR [edi-0x3cffbffd],dh
  401b7b:	add    eax,DWORD PTR [eax+0x0]
  401b7e:	retf   
  401b7f:	add    eax,DWORD PTR [eax+0x0]
  401b82:	pushf  
  401b83:	bound  esi,QWORD PTR [eax+edx*2-0x4f]
  401b87:	push   0x61bf4163
  401b8c:	jb     0x401bf3
  401b8e:	mov    al,0x74
  401b90:	add    BYTE PTR [eax],al
  401b92:	xchg   edi,eax
  401b93:	push   0x6eaf6461
  401b98:	bound  esi,QWORD PTR [edx-0x7e]
  401b9b:	jae    0x401c16
  401b9d:	inc    ebp
	...
  401bce:	add    BYTE PTR [eax],al
  401bd0:	mov    eax,DWORD PTR [esi+0x0]
  401bd3:	add    BYTE PTR [eax+0x62],bh
  401bd6:	jb     0x401c46
  401bd8:	xchg   BYTE PTR [ecx+0x33],ch
  401bdb:	xor    al,BYTE PTR [ebp+0x61]
  401bde:	ins    BYTE PTR es:[edi],dx
  401bdf:	ins    BYTE PTR es:[edi],dx
  401be0:	arpl   WORD PTR ds:0x74760000,ax
  401be6:	jbe    0x401c4b
  401be8:	push   ecx
  401be9:	jno    0x401c19
  401beb:	fs inc edi
  401bed:	imul   eax,DWORD PTR [eax],0x6d623e00
  401bf3:	jae    0x401c33
  401bf5:	jno    0x401bf7
  401bf7:	add    BYTE PTR [esi+0x74],cl
  401bfa:	jbe    0x401c5f
  401bfc:	xor    DWORD PTR [ecx+0x2e],esi
  401bff:	fs aas 
  401c01:	imul   eax,DWORD PTR [eax],0x6d623600
  401c07:	arpl   WORD PTR [ebx],dx
  401c09:	jle    0x401c0b
  401c0b:	add    BYTE PTR ds:0x1674726e,ch
  401c11:	data16 ins BYTE PTR es:[edi],dx
  401c13:	inc    ecx
  401c14:	imul   DWORD PTR [eax+0x6f]
  401c17:	arpl   WORD PTR [ebx+0x5],sp
  401c1a:	add    BYTE PTR [eax],al
  401c1c:	or     eax,0xf674726e
  401c21:	gs ins BYTE PTR es:[edi],dx
  401c23:	inc    ecx
  401c24:	imul   DWORD PTR [eax+0x6f]
  401c27:	arpl   WORD PTR [ebx+0x5],sp
  401c2a:	add    BYTE PTR [eax],al
  401c2c:	scas   al,BYTE PTR es:[edi]
  401c2d:	ins    DWORD PTR es:[di],dx
  401c2f:	popa   
  401c30:	ror    DWORD PTR [edi+0x69],cl
  401c33:	add    BYTE PTR gs:[eax],al
	...
  401c66:	int3   
  401c67:	dec    eax
  401c68:	inc    si
  401c6a:	retf   0x6569
  401c6d:	add    BYTE PTR [ebp-0x498b8d92],cl
  401c73:	data16 ins BYTE PTR es:[edi],dx
  401c75:	push   eax
  401c76:	mov    cl,0x68
  401c78:	je     0x401cdf
  401c7a:	xor    BYTE PTR [ecx+0x0],0x0
  401c7e:	stos   DWORD PTR es:[edi],eax
  401c7f:	bound  esp,QWORD PTR [ecx+0x70]
  401c82:	mov    ds:0x806f6c69,al
  401c87:	add    eax,0x62880000
  401c8c:	jb     0x401cfc
  401c8e:	jle    0x401cf9
  401c90:	xor    esi,DWORD PTR [edx]
  401c92:	cmp    eax,0x636c6c61
  401c97:	add    eax,0x62240000
  401c9c:	je     0x401cee
  401c9e:	push   ecx
  401c9f:	push   0x74506563
  401ca4:	dec    eax
  401ca5:	gs inc edx
  401ca7:	jne    0x401ca9
  401ca9:	add    BYTE PTR [ebx+0x5],ah
  401cac:	inc    esp
  401cad:	add    DWORD PTR [ebx-0x5f],esp
  401cb0:	pop    ecx
  401cb1:	nop
  401cb2:	arpl   bx,bp
  401cb4:	add    eax,DWORD PTR [eax]
  401cb6:	arpl   dx,bp
  401cb8:	add    eax,DWORD PTR [eax]
  401cba:	arpl   di,si
  401cbc:	sti    
  401cbd:	add    BYTE PTR [ebx+0x36],ah
  401cc0:	add    eax,DWORD PTR [eax]
  401cc2:	arpl   si,bp
  401cc4:	add    eax,DWORD PTR [eax]
  401cc6:	arpl   WORD PTR [esi],bp
  401cc8:	add    al,0x0
	...
  401cfa:	add    BYTE PTR [eax],al
  401cfc:	arpl   si,bp
  401cfe:	add    eax,DWORD PTR [eax]
  401d00:	arpl   si,bp
  401d02:	add    eax,DWORD PTR [eax]
  401d04:	arpl   si,bp
  401d06:	add    eax,DWORD PTR [eax]
  401d08:	arpl   si,bp
  401d0a:	add    eax,DWORD PTR [eax]
  401d0c:	arpl   sp,bp
  401d0e:	add    eax,DWORD PTR [eax]
  401d10:	arpl   sp,bp
  401d12:	add    eax,DWORD PTR [eax]
  401d14:	arpl   sp,bp
  401d16:	add    eax,DWORD PTR [eax]
  401d18:	arpl   sp,bp
  401d1a:	add    eax,DWORD PTR [eax]
  401d1c:	arpl   WORD PTR [esp+eax*1+0x0],bp
  401d20:	arpl   si,bx
  401d22:	sbb    bh,BYTE PTR [edx+0x9afec5d]
  401d28:	push   ss
  401d29:	into   
  401d2a:	mov    ebx,0x25a9af01
  401d2f:	push   esp
  401d30:	mov    eax,DWORD PTR ds:0xfa932077
  401d36:	push   0x67
  401d38:	xchg   ecx,eax
  401d39:	int    0x68
  401d3b:	and    BYTE PTR [eax-0x7b919633],al
  401d41:	fsub   DWORD PTR [ebx]
  401d43:	bound  eax,QWORD PTR [esi+0x7575760c]
  401d49:	or     al,0x6d
  401d4b:	outs   dx,BYTE PTR ds:[esi]
  401d4c:	and    DWORD PTR [eax-0x3e7cacb6],0x6a
  401d53:	fs inc esi
  401d55:	test   BYTE PTR [eax],0xd
  401d58:	pop    ecx
  401d59:	add    eax,0x56303cd
  401d5e:	jmp    0x401d66
	...
  401d8f:	add    BYTE PTR [eax],al
  401d91:	add    BYTE PTR [ebx+0x5],ah
  401d94:	mov    ecx,0x9d056340
  401d99:	add    al,0x60
  401d9b:	add    eax,0x46c1ec4a
  401da0:	jmp    0xe94580a8
  401da5:	add    esp,DWORD PTR [ebx+0x5]
  401da8:	or     DWORD PTR [esp+edx*2],eax
  401dab:	add    al,0xf2
  401dad:	add    al,0x61
  401daf:	xor    ebp,ecx
  401db1:	stc    
  401db2:	arpl   WORD PTR ds:0x5634de9,ax
  401db8:	jmp    0x554580c0
  401dbd:	in     eax,dx
  401dbe:	arpl   WORD PTR ds:0x56313e9,ax
  401dc4:	jmp    0xe9457fdc
  401dc9:	add    esp,DWORD PTR [ebx+0x6313e905]
  401dcf:	add    eax,0x56305e9
  401dd4:	in     eax,dx
  401dd5:	add    esp,DWORD PTR [ebx+0x5]
  401dd8:	jmp    0xed4580e0
  401ddd:	add    esp,DWORD PTR [ebx+0x5]
  401de0:	jmp    0xe94580e8
  401de5:	jae    0x401e49
  401de7:	add    eax,0x56305e9
  401dec:	neg    BYTE PTR ds:0x3eb0561
  401df2:	arpl   WORD PTR ds:0x3e9,ax
	...
  401e28:	push   ebx
  401e29:	add    eax,0x56313e9
  401e2e:	jmp    0xe9459136
  401e33:	adc    esp,DWORD PTR [ebx+0x5]
  401e36:	add    cl,ch
  401e38:	pusha  
  401e39:	add    eax,0x560d900
  401e3e:	add    cl,ch
  401e40:	pusha  
  401e41:	add    eax,0x560e900
  401e46:	add    cl,cl
  401e48:	adc    DWORD PTR [eax+eax*1],eax
  401e4b:	and    DWORD PTR [eax+0x5],esp
  401e4e:	add    cl,ch
  401e50:	pusha  
  401e51:	add    eax,0x560e900
  401e56:	add    cl,ch
  401e58:	pusha  
  401e59:	add    eax,0x560e900
  401e5e:	add    cl,ch
  401e60:	pusha  
  401e61:	add    eax,0x560e900
  401e66:	add    cl,ch
  401e68:	pusha  
  401e69:	add    eax,0x560e900
  401e6e:	add    cl,ch
  401e70:	pusha  
  401e71:	add    eax,0x560e900
  401e76:	add    cl,ch
  401e78:	pusha  
  401e79:	add    eax,0x560e900
  401e7e:	add    cl,ch
  401e80:	pusha  
  401e81:	add    eax,0x560e900
  401e86:	add    cl,ch
  401e88:	pusha  
  401e89:	add    eax,0xe900
	...
  401ebe:	pusha  
  401ebf:	add    eax,0x560e900
  401ec4:	add    cl,ch
  401ec6:	pusha  
  401ec7:	add    eax,0x560e900
  401ecc:	add    cl,ch
  401ece:	pusha  
  401ecf:	add    eax,0x699dd00
  401ed4:	add    BYTE PTR [ebp+0x60],ch
  401ed7:	add    eax,0x560e900
  401edc:	add    cl,ch
  401ede:	pusha  
  401edf:	add    eax,0x8ca0000
  401ee4:	add    BYTE PTR [eax],al
  401ee6:	retf   0x8
  401ee9:	add    BYTE PTR [edx-0x45fffff8],bh
  401eef:	or     BYTE PTR [eax],al
  401ef1:	add    BYTE PTR [esp+eiz*2+0x8ce7865],dl
  401ef8:	add    BYTE PTR [eax],al
  401efa:	inc    ecx
  401efb:	cld    
  401efc:	add    BYTE PTR [eax],al
  401efe:	mov    edx,0x8a000018
  401f03:	out    dx,al
  401f04:	add    BYTE PTR [eax],al
  401f06:	mov    cl,BYTE PTR [edx]
  401f08:	add    BYTE PTR [eax],al
  401f0a:	jp     0x401f14
  401f0c:	add    BYTE PTR [eax],al
  401f0e:	jp     0x401f18
  401f10:	add    BYTE PTR [eax],al
  401f12:	mov    cl,BYTE PTR [eax]
  401f14:	add    BYTE PTR [eax],al
  401f16:	push   0x9
  401f18:	add    BYTE PTR [eax+0x64],ah
  401f1b:	jnp    0x401f81
  401f1d:	popa   
  401f1e:	push   cs
  401f1f:	push   0x0
	...
  401f54:	dec    edx
  401f55:	pop    es
  401f56:	add    BYTE PTR [eax],al
  401f58:	dec    edx
  401f59:	sbb    BYTE PTR [ecx],al
  401f5b:	add    BYTE PTR [edx],bh
  401f5d:	or     al,BYTE PTR [eax]
  401f5f:	add    BYTE PTR [edx],bh
  401f61:	or     BYTE PTR [ecx],al
  401f63:	add    BYTE PTR [edx+0x8],cl
  401f66:	add    BYTE PTR [eax],al
  401f68:	dec    edx
  401f69:	or     BYTE PTR [eax],al
  401f6b:	add    BYTE PTR [edx],bh
  401f6d:	or     BYTE PTR [eax],al
  401f6f:	add    BYTE PTR [edx+0x9],bh
  401f72:	add    BYTE PTR [eax+0x34],al
  401f75:	push   esp
  401f76:	popa   
  401f77:	je     0x401fe4
  401f79:	or     DWORD PTR [eax],eax
  401f7b:	add    BYTE PTR [edx+0x46],dl
  401f7e:	add    BYTE PTR [eax],al
  401f80:	cli    
  401f81:	daa    
  401f82:	add    DWORD PTR [eax],eax
  401f84:	or     cl,BYTE PTR [edx+0x0]
  401f87:	add    BYTE PTR [edx],cl
  401f89:	or     al,BYTE PTR [ecx]
  401f8b:	add    BYTE PTR [ebx-0x22],ah
  401f8e:	add    eax,DWORD PTR [eax]
  401f90:	arpl   si,bx
  401f92:	add    eax,DWORD PTR [eax]
  401f94:	arpl   si,bx
  401f96:	add    eax,DWORD PTR [eax]
  401f98:	arpl   WORD PTR [esi-0x225cfffd],bx
  401f9e:	add    eax,DWORD PTR [eax]
  401fa0:	arpl   si,bx
  401fa2:	add    eax,DWORD PTR [eax]
  401fa4:	arpl   si,bx
  401fa6:	add    eax,DWORD PTR [eax]
  401fa8:	arpl   si,bx
  401faa:	add    eax,DWORD PTR [eax]
  401fac:	arpl   WORD PTR [ecx-0x2ec41374],si
  401fb2:	adc    eax,DWORD PTR [eax+0x63]
  401fb5:	push   es
  401fb6:	jne    0x401fb9
	...
  401fe8:	add    BYTE PTR [eax],al
  401fea:	mov    al,ds:0x5b75f7f2
  401fef:	mov    BYTE PTR [edx],al
  401ff1:	push   0x63
  401ff3:	push   es
  401ff4:	mov    esp,0xccde63da
  401ff9:	ret    0xde5f
  401ffc:	push   eax
  401ffd:	mov    edi,DWORD PTR [edi+0x45]
  402000:	sub    dl,BYTE PTR [eax]
  402002:	and    ebx,esi
  402004:	sti    
  402005:	jb     0x402069
  402007:	lahf   
  402008:	test   DWORD PTR [ebx+0x7403f4d6],0x8516758
  402012:	fmul   st,st(6)
  402014:	div    BYTE PTR [ebp+0x6b]
  402017:	stos   DWORD PTR es:[edi],eax
  402018:	push   edx
  402019:	or     BYTE PTR [edx],ch
  40201b:	lahf   
  40201c:	add    BYTE PTR [eax],al
  40201e:	xchg   esi,eax
  40201f:	addr16 call 0x6cd53fa8
  402025:	dec    edi
  402026:	jae    0x402044
  402028:	add    al,0xf8
  40202a:	xchg   ecx,eax
  40202b:	ffree  st(2)
  40202d:	dec    DWORD PTR [edx+esi*8]
  402030:	pop    es
  402031:	(bad)  
  402032:	sahf   
  402033:	je     0x401ff4
  402035:	inc    ebp
  402036:	inc    DWORD PTR ds:0x56303e9
  40203c:	jb     0x40208f
  40203e:	pop    ebx
  40203f:	jle    0x40203c
  402041:	imul   esp,DWORD PTR [ebx-0xe],0x78dc13d4
  402048:	inc    ebp
  402049:	test   DWORD PTR [esi-0x13],0x713e
	...
  402080:	pop    ebx
  402081:	repnz fwait
  402083:	setp   bh
  402086:	fld    QWORD PTR [ebx]
  402088:	push   ss
  402089:	jle    0x4020a0
  40208b:	sbb    DWORD PTR [edi+0x537d91ed],0x45
  402092:	jmp    0x2a445292
  402097:	mul    DWORD PTR [eax+ecx*2+0x5630401]
  40209e:	jmp    0xea314761
  4020a3:	add    esp,DWORD PTR [ebx+0x5]
  4020a6:	bound  edx,QWORD PTR [ecx+0x6b]
  4020a9:	jle    0x4020a6
  4020ab:	mov    BYTE PTR [esi],bl
  4020ad:	in     eax,dx
  4020ae:	cmp    DWORD PTR [edx+0x61],ebp
  4020b1:	repnz pop esp
  4020b3:	clc    
  4020b4:	fs js  0x402088
  4020b7:	not    dh
  4020b9:	std    
  4020ba:	lds    edx,FWORD PTR [ecx+0x6f]
  4020bd:	jle    0x4020e3
  4020bf:	cld    
  4020c0:	sbb    al,bh
  4020c2:	in     eax,dx
  4020c3:	add    ebp,DWORD PTR [esi+0x2782bd7e]
  4020c9:	in     eax,dx
  4020ca:	adc    edx,eax
  4020cc:	push   ebx
  4020cd:	inc    ebp
  4020ce:	jmp    0xaa44d2ce
  4020d3:	neg    BYTE PTR [eax+ecx*2]
  4020d6:	xchg   ecx,eax
  4020d7:	add    esp,DWORD PTR [ebx+0x5]
  4020da:	jmp    0xea31bf9d
  4020df:	add    esp,DWORD PTR [ebx+0x5]
  4020e2:	add    BYTE PTR [edx+0x0],ah
	...
  402115:	add    BYTE PTR [ebx-0x14247503],dh
  40211b:	inc    edi
  40211c:	clc    
  40211d:	mov    ecx,0xd4ff048a
  402122:	hlt    
  402123:	icebp  
  402124:	jne    0x402177
  402126:	in     eax,dx
  402127:	ja     0x402131
  402129:	dec    esi
  40212a:	xor    bl,BYTE PTR [ecx]
  40212c:	(bad)  
  40212d:	mov    esp,0x3e87dd68
  402132:	aad    0xf1
  402134:	push   eax
  402135:	bound  esi,QWORD PTR [ebx]
  402137:	std    
  402138:	mov    bl,bl
  40213a:	dec    edx
  40213b:	add    eax,0x77ade96a
  402140:	cld    
  402141:	push   ds
  402142:	xor    ebp,ebp
  402144:	call   FWORD PTR [eax+ebx*2+0x38f552f2]
  40214b:	jle    0x4021a2
  40214d:	add    DWORD PTR [ecx+0x58],esp
  402150:	or     al,0xc2
  402152:	mov    al,0x7a
  402154:	push   es
  402155:	ret    0xbba0
  402158:	ret    0x60e1
  40215b:	lods   eax,DWORD PTR ds:[esi]
  40215c:	add    ecx,ebp
  40215e:	pusha  
  40215f:	add    eax,0x55fabc9
  402164:	push   ebp
  402165:	bound  edi,QWORD PTR [ebx-0x7b]
  402168:	(bad)  
  402169:	int    0xcf
  40216b:	and    BYTE PTR [ecx],dl
  40216d:	sub    DWORD PTR [edi-0x13],ebx
  402170:	jb     0x40215a
  402172:	and    esi,ecx
  402174:	(bad)  
  402175:	cmp    al,0x6f
  402177:	lock jne 0x40215b
	...
  4021aa:	add    BYTE PTR [eax],al
  4021ac:	dec    eax
  4021ad:	outs   dx,BYTE PTR ds:[esi]
  4021ae:	jmp    DWORD PTR [esi+0x14bffd2e]
  4021b4:	arpl   WORD PTR [esi+0x7c60e5c2],di
  4021ba:	push   ebp
  4021bb:	loope  0x4021a8
  4021bd:	adc    ecx,DWORD PTR [ebp+0x50ed4700]
  4021c3:	call   DWORD PTR [edi]
  4021c5:	adc    eax,0xf9fe75ff
  4021ca:	jne    0x4021d4
  4021cc:	lea    edx,[ebx+0xc]
  4021cf:	test   DWORD PTR [edx+0x71],ecx
  4021d2:	adc    ecx,DWORD PTR [ebx+0x453bf8c7]
  4021d8:	jmp    0x4:0xcbb8075f
  4021df:	add    BYTE PTR [ecx],dh
  4021e1:	out    dx,eax
  4021e2:	sub    al,al
  4021e4:	xor    DWORD PTR [ebx],eax
  4021e6:	sub    eax,eax
  4021e8:	add    ebx,0xc
  4021eb:	add    bh,dl
  4021ed:	jge    0x4021db
  4021ef:	add    DWORD PTR [esi+0x476856ed],0x14
  4021f6:	inc    eax
  4021f7:	add    BYTE PTR [edx+0x73],dl
  4021fa:	add    ebx,eax
  4021fc:	ins    DWORD PTR es:[edi],dx
  4021fd:	xchg   BYTE PTR [ebp+0xc],bh
  402200:	mov    ah,BYTE PTR [eax+0x6]
  402203:	or     DWORD PTR [edi],0xfffffffc
  402206:	push   DWORD PTR [ebp+esi*2+0x1d]
  40220a:	rcr    BYTE PTR [esi+0x43],0xc3
  40220e:	or     al,0x0
	...
  402240:	add    BYTE PTR [eax],al
  402242:	or     DWORD PTR [edi+0x10],esi
  402245:	add    BYTE PTR [edi],dl
  402247:	sti    
  402248:	mov    bh,0x1
  40224a:	jp     0x402250
  40224c:	add    BYTE PTR [esi+0x3],bl
  40224f:	(bad)  
  402250:	or     al,0x0
  402252:	rcr    DWORD PTR [edi+0xc],1
  402255:	mov    DWORD PTR [edi+0x3a0000ed],0x42558b04
  40225f:	jge    0x402273
  402261:	lea    eax,[edi+0x57ff50ed]
  402267:	sbb    DWORD PTR [esi-0x1],edx
  40226a:	arpl   WORD PTR [ecx],dx
  40226c:	or     al,0xff
  40226e:	mov    cl,0xee
  402270:	jle    0x402232
  402272:	call   0xc1b5:0xadc028df
  402279:	or     al,0x63
  40227b:	pop    ebx
  40227c:	jbe    0x40227a
  40227e:	arpl   cx,di
  402280:	cld    
  402281:	sub    ah,BYTE PTR [ebx]
  402283:	enter  0xc2ca,0x5f
  402287:	fimul  WORD PTR [eax-0xc2518bb]
  40228d:	sub    DWORD PTR [esi],esp
  40228f:	out    dx,al
  402290:	outs   dx,BYTE PTR ds:[esi]
  402291:	les    ebx,FWORD PTR [ebx]
  402293:	fld    QWORD PTR [ebx]
  402295:	add    BYTE PTR [ebx-0x70],ah
  402298:	retf   0x57c2
  40229b:	fimul  WORD PTR [esi-0x75]
  40229e:	iret   
  40229f:	pop    esp
  4022a0:	mov    edi,0xf426c4f8
  4022a5:	push   0x0
	...
  4022d6:	add    BYTE PTR [eax],al
  4022d8:	addr16 in al,dx
  4022da:	inc    ebx
  4022db:	add    BYTE PTR [ebx-0x633cfd75],ch
  4022e1:	add    DWORD PTR [ebx],0x6a
  4022e4:	arpl   WORD PTR [eax+eax*1+0x94636a],dx
  4022eb:	push   0x8003de63
  4022f0:	jl     0x40236a
  4022f2:	or     ebp,eax
  4022f4:	loop   0x4022a4
  4022f6:	add    al,0x0
  4022f8:	fisubr DWORD PTR [eax]
  4022fa:	lock inc eax
  4022fc:	out    dx,al
  4022fd:	loope  0x4022bb
  4022ff:	ret    0xdc6b
  402302:	pop    ebp
  402303:	add    dh,ah
  402305:	and    esp,ebp
  402307:	push   eax
  402308:	mov    ebx,0x630013dc
  40230d:	imul   ecx,DWORD PTR [ecx-0xc5fb308],0x1c063450
  402317:	lock cmp esp,DWORD PTR [ebx-0x4a]
  40231b:	add    al,0x63
  40231d:	cli    
  40231e:	test   al,0x79
  402320:	ins    DWORD PTR es:[edi],dx
  402321:	out    dx,al
  402322:	adc    al,0xf0
  402324:	or     edx,DWORD PTR [ecx-0x62]
  402327:	add    al,0x63
  402329:	sbb    ch,BYTE PTR [ecx-0x1701de43]
  40232f:	bnd jbe 0x40231f
  402332:	pop    esp
  402333:	mov    ebx,edi
  402335:	fisub  WORD PTR [esi-0xd]
  402338:	xchg   ebx,eax
  402339:	out    dx,al
  40233a:	aam    0xff
	...
  40236c:	add    BYTE PTR [eax],al
  40236e:	cld    
  40236f:	adc    al,0x56
  402371:	repz fadd QWORD PTR [edx+0x7863ebcc]
  402378:	test   ebx,esi
  40237a:	push   esi
  40237b:	icebp  
  40237c:	push   ecx
  40237d:	cmp    ebp,DWORD PTR [ebp+eax*1+0x562abe9]
  402384:	jmp    0xf203cd8c
  402389:	add    edx,DWORD PTR [esi]
  40238b:	jp     0x40239a
  40238d:	pop    esp
  40238e:	fcom   QWORD PTR [ebx]
  402390:	test   eax,0xe8739b03
  402395:	(bad)  
  402396:	xchg   esp,eax
  402397:	pop    ebx
  402398:	jmp    0x4023f7
  40239a:	arpl   si,bp
  40239c:	je     0x402399
  40239e:	jl     0x402341
  4023a0:	hlt    
  4023a1:	bnd jl 0x402360
  4023a4:	sub    ecx,DWORD PTR [eax]
  4023a6:	arpl   WORD PTR [eax+0x72],bx
  4023a9:	(bad)  
  4023ab:	test   al,0xfb
  4023ad:	inc    ebx
  4023ae:	arpl   bp,bp
  4023b0:	pop    ebx
  4023b1:	add    eax,0x443ee20
  4023b6:	leave  
  4023b7:	add    eax,0xdd5b78c6
  4023bc:	outs   dx,BYTE PTR ds:[esi]
  4023bd:	lock inc esp
  4023bf:	out    dx,al
  4023c0:	add    BYTE PTR [eax+0x14000926],ah
  4023c6:	mov    ah,0xe1
  4023c8:	sub    DWORD PTR [ebp-0x43ba2c8],0xffffffa0
  4023cf:	add    eax,0x1bf8
	...
  402404:	retw   0x8eff
  402408:	fwait
  402409:	add    DWORD PTR [edi+0x45c5ff2c],ecx
  40240f:	jge    0x402471
  402411:	add    eax,0x59ee900
  402416:	push   esp
  402418:	hlt    
  402419:	out    dx,al
  40241a:	jne    0x40240d
  40241c:	or     BYTE PTR [ebp+edi*8+0x5e],ah
  402420:	icebp  
  402421:	jns    0x402478
  402423:	loope  0x402482
  402425:	adc    edi,edi
  402427:	aam    0xc4
  402429:	in     eax,dx
  40242a:	jne    0x40246d
  40242c:	shl    DWORD PTR [edi+0x8],1
  40242f:	ds cs or eax,0xedb82bc9
  402436:	push   esp
  402437:	bound  edx,QWORD PTR [esp+ebx*2+0x520fa00]
  40243e:	clc    
  40243f:	fwait
  402440:	pop    edi
  402441:	ret    0x83ff
  402444:	pusha  
  402445:	out    dx,al
  402446:	jne    0x402429
  402448:	mov    eax,0x9106ff9a
  40244d:	mov    ebx,0x5860e5c2
  402452:	mov    eax,DWORD PTR ds:0x6a1457fd
  402458:	inc    esi
  402459:	add    eax,0xc2a9ed75
  40245e:	adc    cl,ch
  402460:	jae    0x4024d9
  402462:	adc    dh,dl
  402464:	aam    0xf9
  402466:	(bad)  
  402467:	push   esp
	...
  402498:	add    BYTE PTR [eax],al
  40249a:	push   edi
  40249b:	in     eax,0xf4
  40249d:	add    BYTE PTR [edi],ah
  40249f:	idiv   edi
  4024a1:	mov    ebp,DWORD PTR [edi+0xd]
  4024a4:	and    DWORD PTR [edx],eax
  4024a6:	add    eax,esp
  4024a8:	adc    BYTE PTR [eax],al
  4024aa:	dec    edi
  4024ab:	push   0xffffffec
  4024ad:	cmp    esi,0xfffffff5
  4024b0:	push   DWORD PTR [ebp+0x36]
  4024b3:	dec    ebx
  4024b4:	add    al,0x8d
  4024b6:	dec    edi
  4024b7:	cmc    
  4024b8:	push   eax
  4024b9:	jmp    FWORD PTR [edi-0x17]
  4024bc:	out    0xc3,eax
  4024be:	in     eax,0xf6
  4024c0:	dec    DWORD PTR [ebx+0x3883053f]
  4024c6:	or     dh,BYTE PTR [ebp+0x7]
  4024c9:	mov    edi,DWORD PTR [edi]
  4024cb:	cmc    
  4024cc:	bswap  eax
  4024ce:	xchg   ecx,eax
  4024cf:	add    ebp,DWORD PTR [ebx]
  4024d1:	shl    BYTE PTR [ebx],0xc3
  4024d4:	or     BYTE PTR [eax],al
  4024d6:	pop    ds
  4024d7:	push   0xffffffec
  4024d9:	cmp    DWORD PTR [esi-0xb],0xffffffff
  4024dd:	jne    0x4024b5
  4024df:	dec    edx
  4024e0:	add    cl,BYTE PTR [ebp-0xaf0901]
  4024e6:	push   eax
  4024e8:	out    0x97,eax
  4024ea:	test   esi,esi
  4024ec:	dec    DWORD PTR [ebx+0x3882ecff]
  4024f2:	mov    edx,0x3d0f0874
  4024f7:	inc    esp
  4024f8:	inc    BYTE PTR [esi+0x2b02ca3e]
	...
  40252e:	add    BYTE PTR [eax],al
  402530:	cmp    dh,BYTE PTR [eax+0x537a08c2]
  402536:	mov    ebp,esp
  402538:	or     DWORD PTR [ebp-0x14100004],edi
  40253e:	imul   eax,DWORD PTR [ecx],0x50ff42f7
  402544:	test   DWORD PTR [ebx+0x8],esi
  402547:	call   0x316daf
  40254c:	push   esp
  40254d:	addr16 inc esi
  40254f:	or     al,0xe0
  402551:	add    eax,0xdb5d7404
  402556:	mov    ecx,0x5c73c45
  40255b:	sub    esp,DWORD PTR [ebx]
  40255d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40255e:	lds    ecx,FWORD PTR [eax]
  402560:	arpl   WORD PTR [ecx],bp
  402562:	jge    0x402550
  402564:	fdiv   DWORD PTR [eax]
  402566:	adc    al,0x83
  402568:	pop    ecx
  402569:	fidiv  WORD PTR [esi+0x4]
  40256c:	sub    ah,BYTE PTR [eax-0x16f20001]
  402572:	(bad)  
  402573:	dec    BYTE PTR [esi-0x1f240a]
  402579:	jb     0x40256b
  40257b:	or     esp,DWORD PTR [ebx]
  40257d:	icebp  
  40257e:	cld    
  40257f:	mov    dl,BYTE PTR [esi+0x6302c8ee]
  402585:	fiadd  WORD PTR [ebx]
  402587:	add    al,cl
  402589:	loopne 0x4025e8
  40258b:	add    esp,edx
  40258d:	sar    bh,1
  40258f:	(bad)  
  402590:	push   esi
  402591:	neg    bl
  402593:	push   ecx
	...
  4025c4:	add    BYTE PTR [eax],al
  4025c6:	(bad)  
  4025c7:	sub    dh,al
  4025c9:	leave  
  4025ca:	mov    eax,ds:0xe85503e1
  4025cf:	sub    DWORD PTR [esp+eax*8+0x757cabaf],eax
  4025d6:	push   edi
  4025d7:	cwde   
  4025d8:	add    ecx,DWORD PTR [ebp-0xacedda]
  4025de:	push   cs
  4025df:	out    dx,al
  4025e0:	pop    ecx
  4025e1:	call   DWORD PTR [esi]
  4025e3:	neg    bl
  4025e5:	mov    al,ds:0xb03ddae
  4025ea:	mov    ds:0xf6830969,eax
  4025ef:	fld    DWORD PTR [edx]
  4025f1:	jne    0x402657
  4025f3:	add    eax,0xbe05c412
  4025f8:	stos   DWORD PTR es:[edi],eax
  4025f9:	add    BYTE PTR [ebx+0x7e],ah
  4025fc:	sub    al,0xf0
  4025fe:	pusha  
  4025ff:	cmc    
  402600:	add    BYTE PTR [ecx+0x73],cl
  402603:	jo     0x40259f
  402605:	lods   al,BYTE PTR ds:[esi]
  402606:	bound  eax,QWORD PTR ds:0xbc9d03e9
  40260c:	stos   DWORD PTR es:[edi],eax
  40260d:	add    BYTE PTR [ebx+0x50],ah
  402610:	(bad)  
  402611:	loopne 0x4025f5
  402613:	shl    DWORD PTR [ecx],0xef
  402616:	and    al,0xeb
  402618:	cmp    bl,BYTE PTR [ebx]
  40261a:	cmp    BYTE PTR [eax-0x17],ah
  40261d:	pop    ecx
  40261e:	arpl   WORD PTR [edi-0x15],bx
  402621:	pop    ecx
  402622:	arpl   WORD PTR [edi-0x16],bx
  402625:	pop    ebx
  402626:	arpl   WORD PTR ds:0xc3e9,ax
	...
  40265c:	cld    
  40265d:	jo     0x402644
  40265f:	fistp  DWORD PTR [ebp-0x25fc1630]
  402665:	inc    eax
  402666:	gs inc esp
  402668:	outs   dx,DWORD PTR ds:[esi]
  402669:	push   esi
  40266a:	pop    esi
  40266b:	jns    0x4026d8
  40266d:	fstp   QWORD PTR [edx]
  40266f:	out    dx,al
  402670:	aam    0xea
  402672:	es dec ecx
  402674:	retf   
  402675:	add    eax,0x7e6303e9
  40267a:	xchg   esp,eax
  40267b:	sti    
  40267c:	jmp    0xbb898a98
  402681:	push   ebp
  402682:	rol    DWORD PTR [ebx-0x7f16fa9d],0xde
  402689:	ins    DWORD PTR es:[edi],dx
  40268a:	push   ds
  40268b:	out    dx,eax
  40268c:	pushf  
  40268d:	push   ebp
  40268e:	push   ss
  40268f:	jns    0x4026fc
  402691:	jmp    0x401:0x68e1ffbb
  402698:	push   cs
  402699:	push   es
  40269a:	stos   BYTE PTR es:[edi],al
  40269b:	ficomp DWORD PTR [ebx-0x16]
  40269e:	add    BYTE PTR [eax+ecx*4+0x78],bh
  4026a2:	test   DWORD PTR [ecx+0x7d],esi
  4026a5:	jmp    0xd1fc:0x707439ff
  4026ac:	mov    bh,0xea
  4026ae:	call   esi
  4026b0:	pop    ecx
  4026b1:	stos   BYTE PTR es:[edi],al
  4026b2:	je     0x40269f
  4026b4:	sub    DWORD PTR [eax-0x22acc301],ebp
  4026ba:	stc    
  4026bb:	xchg   ebp,eax
  4026bc:	pusha  
  4026bd:	add    eax,0xaa8b
	...
  4026f2:	test   eax,0x60e1c2bc
  4026f7:	push   eax
  4026f8:	mov    edx,DWORD PTR [ebp-0x61073f1f]
  4026fe:	fwait
  4026ff:	stc    
  402700:	out    0x5b,eax
  402702:	or     edx,ebp
  402704:	jmp    DWORD PTR [eax-0x65]
  402707:	in     eax,dx
  402708:	(bad)  
  402709:	sub    al,0x13
  40270b:	add    eax,0xea60e900
  402710:	jne    0x4026f7
  402712:	sbb    ah,al
  402714:	std    
  402715:	outs   dx,BYTE PTR ds:[esi]
  402716:	std    
  402717:	jge    0x40276e
  402719:	cmc    
  40271a:	imul   edx,DWORD PTR [edi],0x53ae96a
  402720:	(bad)  
  402721:	fadd   st(4),st
  402723:	jmp    0x6ffd789d
  402728:	or     BYTE PTR [esi+0x4b],al
  40272b:	stc    
  40272c:	(bad)  
  40272d:	fwait
  40272e:	ins    BYTE PTR es:[edi],dx
  40272f:	mov    esp,0x5060e1c2
  402734:	mov    edi,DWORD PTR ds:0x2ef8c0e1
  40273a:	sbb    ebp,ebp
  40273c:	add    cl,ch
  40273e:	pusha  
  40273f:	add    eax,0x484acc7
  402744:	add    cl,ch
  402746:	pusha  
  402747:	jle    0x40279e
  402749:	add    BYTE PTR [edx-0x3872ed92],dl
  40274f:	fst    QWORD PTR [eax+0x6a]
  402752:	mov    ebx,edx
  402754:	jne    0x402752
	...
  402786:	add    BYTE PTR [eax],al
  402788:	jge    0x4027fb
  40278a:	clc    
  40278b:	inc    DWORD PTR [edi]
  40278d:	jmp    0x6e967a90
  402792:	inc    ebp
  402793:	clc    
  402794:	add    eax,esp
  402796:	add    al,0x0
  402798:	xchg   edi,eax
  402799:	outs   dx,BYTE PTR ds:[esi]
  40279a:	in     al,dx
  40279b:	push   0x3b
  40279d:	push   0xda5a0c45
  4027a2:	jne    0x4027ac
  4027a4:	and    bl,BYTE PTR [ebx]
  4027a6:	cld    
  4027a7:	(bad)  
  4027a8:	std    
  4027a9:	lods   al,BYTE PTR ds:[esi]
  4027aa:	ret    0x3a08
  4027ad:	push   eax
  4027ae:	mov    ebp,esp
  4027b0:	jo     0x4027af
  4027b2:	mov    WORD PTR [ebp-0x2],es
  4027b5:	push   esp
  4027b6:	push   DWORD PTR [ebp+0x2]
  4027b9:	int    0x2a
  4027bb:	cld    
  4027bc:	fstp   st(2)
  4027be:	leave  
  4027bf:	ret    0x4f2
  4027c2:	push   ebp
  4027c3:	mov    ebx,esi
  4027c5:	xchg   BYTE PTR [ebp+0xc],bh
  4027c8:	cli    
  4027c9:	jo     0x4027df
  4027cb:	cmp    edi,0x14
  4027ce:	add    BYTE PTR [esp+ecx*8-0x27],dh
  4027d2:	jne    0x4027e4
  4027d4:	sub    eax,0xb7ff0c70
  4027d9:	in     al,dx
  4027da:	out    0x9,eax
  4027dc:	push   ds
  4027dd:	(bad)  
  4027df:	leave  
  4027e0:	mov    BYTE PTR ds:0xe5415500,al
  4027e6:	push   DWORD PTR [ebp-0x76]
  4027e9:	fnstenv [ebp+0x8]
	...
  40281c:	add    BYTE PTR [eax],al
  40281e:	push   edx
  40281f:	mov    ch,0xff
  402821:	(bad)  
  402822:	jge    0x4027aa
  402824:	jge    0x402836
  402826:	arpl   si,bx
  402828:	ja     0x40283e
  40282a:	loopne 0x4028a5
  40282c:	(bad)  
  40282d:	call   DWORD PTR [eax]
  40282f:	lock in al,dx
  402831:	jne    0x402886
  402833:	out    0x76,eax
  402835:	or     al,0x74
  402837:	imul   edi,ebx,0xecd7b4e7
  40283d:	call   FWORD PTR [edx-0x48000064]
  402843:	jae    0x402824
  402845:	adc    esi,0xffffffe2
  402848:	add    esi,DWORD PTR [ecx+ebx*2-0x49]
  40284c:	jbe    0x40285a
  40284e:	cmp    esi,esi
  402850:	xlat   BYTE PTR ds:[ebx]
  402851:	add    BYTE PTR [ebx-0x2d],ah
  402854:	add    DWORD PTR [ebx],ebp
  402856:	and    ecx,DWORD PTR [esi]
  402858:	in     eax,dx
  402859:	jne    0x4028ba
  40285b:	xchg   edi,eax
  40285c:	jbe    0x402866
  40285e:	cmp    ecx,DWORD PTR [ebx-0x14]
  402861:	call   FWORD PTR [esi*4+0x296308c1]
  402868:	jns    0x402856
  40286a:	loopne 0x402864
  40286c:	adc    edi,edi
  40286e:	mov    ?,ecx
  402870:	in     al,dx
  402871:	jne    0x4028e2
  402873:	addr16 jbe 0x40287e
  402876:	or     edx,DWORD PTR [edi-0x7d130014]
  40287c:	std    
  40287d:	(bad)  
  40287e:	outs   dx,BYTE PTR ds:[esi]
  40287f:	out    dx,al
  402880:	in     al,dx
  402881:	jne    0x402883
	...
  4028b3:	add    BYTE PTR [edi+0x47],ch
  4028b6:	jbe    0x4028c0
  4028b8:	retf   
  4028b9:	(bad)  
  4028ba:	in     al,dx
  4028bb:	dec    esp
  4028bd:	and    al,0xc1
  4028bf:	or     al,0x63
  4028c1:	mov    DWORD PTR [eax-0x14],edi
  4028c4:	mov    esp,0xb4e7fbb0
  4028c9:	das    
  4028ca:	in     al,dx
  4028cb:	call   DWORD PTR [ebx]
  4028cd:	(bad)  
  4028ce:	sti    
  4028cf:	addr16 cmp al,0x5
  4028d2:	rol    DWORD PTR [edx+0x63],1
  4028d5:	call   0x3bbd246e
  4028da:	push   ss
  4028db:	in     al,dx
  4028dc:	mov    WORD PTR [edx-0x17],ds
  4028df:	in     al,dx
  4028e0:	push   cs
  4028e1:	std    
  4028e2:	adc    BYTE PTR [edi],bl
  4028e4:	jl     0x4028cd
  4028e6:	(bad)  
  4028e7:	pop    eax
  4028e8:	popa   
  4028e9:	jp     0x402897
  4028eb:	call   FWORD PTR [eax+ebp*8]
  4028ee:	je     0x4028eb
  4028f0:	jl     0x402925
  4028f2:	out    0xeb,al
  4028f4:	pop    esp
  4028f5:	pop    esp
  4028f6:	jmp    0x402970
  4028f8:	sahf   
  4028f9:	adc    eax,0xfdd6eb39
  4028fe:	shl    BYTE PTR [ecx],0x44
  402901:	out    0xc6,eax
  402903:	dec    esp
  402904:	sub    al,ah
  402906:	in     eax,dx
  402907:	add    ecx,DWORD PTR [esi+0x2787c57a]
  40290d:	jmp    0xede3:0xdd5b71ae
  402914:	sbb    al,0xe7
  402916:	rol    BYTE PTR [eax+0x0],cl
	...
  402949:	add    BYTE PTR [edi+0x7c],ah
  40294c:	sub    al,0xe8
  40294e:	loopne 0x402990
  402950:	(bad)  
  402952:	jp     0x402959
  402954:	xchg   BYTE PTR [ecx+0x6f],dh
  402957:	out    0xf4,al
  402959:	sti    
  40295a:	cld    
  40295b:	fnstenv [eax-0x15]
  40295e:	in     al,dx
  40295f:	out    0xf4,al
  402961:	out    0xe4,eax
  402963:	jo     0x402956
  402965:	fstp   TBYTE PTR [eax-0x2b14a119]
  40296b:	jo     0x40294e
  40296d:	(bad)  [edi-0x17]
  402970:	dec    esi
  402971:	jmp    0x40294b
  402973:	inc    eax
  402974:	inc    ebp
  402975:	mov    ebp,0x50e8fda1
  40297a:	call   0xa3aa2a58
  40297f:	icebp  
  402980:	(bad)  
  402981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402982:	mov    ah,0x5
  402984:	add    cl,ch
  402986:	pusha  
  402987:	js     0x4029ce
  402989:	sbb    eax,0xe175e62f
  40298e:	test   al,0x51
  402990:	aam    0xe9
  402992:	pusha  
  402993:	add    al,0x81
  402996:	pop    ebx
  402997:	out    0x75,al
  402999:	icebp  
  40299a:	cwde   
  40299b:	loope  0x402996
  40299d:	idiv   BYTE PTR [ecx+0x7c]
  4029a0:	inc    ebp
  4029a1:	icebp  
  4029a2:	jns    0x402a14
  4029a4:	cld    
  4029a5:	shr    DWORD PTR [ebx-0x2e],1
  4029a8:	add    cl,ch
  4029aa:	push   ebp
  4029ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029ac:	je     0x4029ad
	...
  4029de:	add    BYTE PTR [eax],al
  4029e0:	cmp    DWORD PTR [eax-0x8],esi
  4029e3:	cmp    DWORD PTR [ebp+0x6238e805],esp
  4029e9:	add    eax,0xf1a37000
  4029ee:	(bad)  
  4029ef:	cmp    al,0x3b
  4029f1:	fisttp QWORD PTR [ecx]
  4029f3:	call   0xde1f:0x1cff0560
  4029fa:	mov    ebx,0x8be609a2
  4029ff:	sub    al,0x13
  402a01:	test   bh,0x96
  402a04:	xor    BYTE PTR [ebp-0x1],dl
  402a07:	cld    
  402a08:	clc    
  402a09:	(bad)  [edx+0x7f]
  402a0c:	or     esi,esp
  402a0e:	leave  
  402a0f:	stos   DWORD PTR es:[edi],eax
  402a10:	in     al,dx
  402a11:	in     eax,0x54
  402a13:	bound  ecx,QWORD PTR [edx+eax*4]
  402a16:	les    ebx,FWORD PTR [ecx-0x5f]
  402a19:	aas    
  402a1a:	hlt    
  402a1b:	jmp    0x64402f80
  402a20:	and    ebp,ecx
  402a22:	push   eax
  402a23:	dec    esi
  402a24:	push   ebx
  402a25:	std    
  402a26:	out    0x0,eax
  402a28:	adc    al,0xcf
  402a2a:	add    BYTE PTR [eax],al
  402a2c:	aas    
  402a2d:	ret    0x4d78
  402a30:	jne    0x402aa7
  402a32:	or     al,ch
  402a34:	hlt    
  402a35:	fdivr  st,st(7)
  402a37:	call   DWORD PTR [ebx]
  402a39:	inc    ebp
  402a3a:	clc    
  402a3b:	xor    edi,0xffffffd9
  402a3e:	add    al,0x72
  402a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a41:	jle    0x402ab0
  402a43:	clc    
	...
  402a74:	add    BYTE PTR [eax],al
  402a76:	jle    0x402a52
  402a78:	jne    0x402a76
  402a7a:	push   edx
  402a7b:	(bad)  
  402a7c:	rol    BYTE PTR [eax],cl
  402a7e:	mov    ah,dh
  402a80:	mov    edi,0x75daa874
  402a85:	clc    
  402a86:	retf   0x47
  402a89:	call   0x400ed9
  402a8e:	inc    ebp
  402a8f:	mov    eax,ds:0x24c3d0f7
  402a94:	hlt    
  402a95:	jmp    FWORD PTR [edi-0x276a1713]
  402a9b:	or     DWORD PTR [eax],eax
  402a9d:	jmp    0x402aab
  402a9f:	out    dx,al
  402aa0:	jne    0x402aaa
  402aa2:	and    ah,BYTE PTR ds:0x2f5fffb
  402aa8:	ror    cl,0xc8
  402aab:	add    eax,0x1fceb00
  402ab0:	ror    cl,0xb8
  402ab3:	add    eax,0x42f86a00
  402ab8:	cld    
  402ab9:	(bad)  
  402aba:	jmp    eax
  402abc:	out    0xf0,eax
  402abe:	loop   0x402aae
  402ac0:	inc    edi
  402ac2:	aas    
  402ac3:	fld    DWORD PTR [ecx]
  402ac5:	add    dl,bh
  402ac7:	or     BYTE PTR [ebp-0xc6c5bb],cl
  402acd:	jne    0x402aa1
  402acf:	rcl    dl,0xfb
  402ad2:	arpl   WORD PTR [ebx],di
  402ad4:	jmp    0x47e715c
  402ad9:	je     0x402adb
	...
  402b0b:	add    BYTE PTR [ecx-0x25],dl
  402b0e:	mov    ebx,0x6f1a1e3b
  402b13:	pop    es
  402b14:	jmp    0x402b03
  402b16:	add    eax,DWORD PTR [eax]
  402b18:	arpl   WORD PTR [edi+0x2],ax
  402b1b:	sub    esp,DWORD PTR [ebx-0x5cd4fa09]
  402b21:	adc    eax,0xa16304c6
  402b26:	jl     0x402b14
  402b28:	loopne 0x402b54
  402b2a:	in     al,dx
  402b2b:	lea    esp,[esi]
  402b2d:	or     dl,BYTE PTR [edi+edi*8-0x12]
  402b31:	aad    0xdb
  402b33:	dec    eax
  402b34:	nop
  402b35:	out    dx,al
  402b36:	add    eax,DWORD PTR [ebp-0xe3a95d]
  402b3c:	(bad)  
  402b3d:	(bad)  
  402b3e:	fcmovnu st,st(0)
  402b40:	pop    ebx
  402b41:	ret    
  402b42:	call   0xe8f6d1d0
  402b47:	jne    0x402b90
  402b49:	(bad)  
  402b4a:	adc    dl,dl
  402b4c:	arpl   si,bp
  402b4e:	cld    
  402b4f:	mov    edi,0x75e8baaf
  402b54:	pop    edi
  402b55:	fwait
  402b56:	outs   dx,BYTE PTR ds:[esi]
  402b57:	clc    
  402b58:	xchg   ebx,eax
  402b59:	(bad)  
  402b5a:	pop    ss
  402b5b:	or     esp,DWORD PTR [ebx-0x12]
  402b5e:	call   0xe8b642d8
  402b63:	shl    DWORD PTR [ebx-0x12],1
  402b66:	call   0xb2c686e0
  402b6b:	cli    
  402b6c:	cld    
  402b6d:	mov    bh,BYTE PTR [edx+0xc2]
	...
  402b9f:	add    BYTE PTR [eax],al
  402ba1:	add    BYTE PTR [ebx-0x12],ch
  402ba4:	dec    esi
  402ba5:	mov    edi,edi
  402ba7:	outs   dx,BYTE PTR ds:[esi]
  402ba8:	mov    edi,0xccc790e8
  402bad:	lea    esp,[esi]
  402baf:	add    eax,0x59d45365
  402bb4:	icebp  
  402bb5:	fcmovne st,st(3)
  402bb7:	mov    dh,0xe9
  402bb9:	add    ebx,esi
  402bbb:	(bad)  
  402bbc:	fidivr WORD PTR [ebx-0xc]
  402bbf:	add    al,0xe9
  402bc1:	add    esi,DWORD PTR [ecx+ebx*2-0x2318240f]
  402bc8:	ss call 0xe87575a8
  402bce:	push   ss
  402bcf:	loope  0x402be2
  402bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bd2:	mov    dl,0x4
  402bd4:	jmp    0x6d53f8d5
  402bd9:	xchg   DWORD PTR [ebx+0x5],esp
  402bdc:	jmp    0x715525b
  402be1:	outs   dx,BYTE PTR ds:[esi]
  402be2:	outs   dx,DWORD PTR ds:[esi]
  402be3:	in     al,dx
  402be4:	sub    ebx,edx
  402be6:	arpl   WORD PTR ds:0xa5fbf6a,ax
  402bec:	jmp    0x3945def4
  402bf1:	fmul   QWORD PTR [edx]
  402bf3:	push   es
  402bf4:	jmp    0xc58905fc
  402bf9:	out    0xce,eax
  402bfb:	fld    st(1)
  402bfd:	xchg   edi,eax
  402bfe:	dec    edx
  402bff:	push   es
  402c00:	jmp    0xe44a4b87
  402c05:	add    eax,DWORD PTR [eax]
	...
  402c37:	add    BYTE PTR [ebx-0xb],ah
  402c3a:	call   0xe9b66792
  402c3f:	add    esp,DWORD PTR [ebx-0x74]
  402c42:	sub    al,0xdc
  402c44:	mov    DWORD PTR ds:0xe2ff719e,eax
  402c4a:	sbb    al,0xf0
  402c4c:	add    al,0x59
  402c4e:	and    edi,0x8d91d576
  402c54:	or     al,BYTE PTR [esi]
  402c56:	jmp    0x3a53dd
  402c5b:	pop    edi
  402c5c:	mov    ds:0xc4f4ffdd,al
  402c61:	in     eax,dx
  402c62:	cmp    BYTE PTR gs:[edi+0x5],bl
  402c66:	call   esp
  402c68:	enter  0x90ea,0x53
  402c6c:	mov    esp,0x18e16ae2
  402c71:	dec    esp
  402c72:	sub    BYTE PTR [eax-0xe8a1da0],ch
  402c78:	mov    cl,al
  402c7a:	cld    
  402c7b:	ss mov esp,0x122ed80e
  402c81:	fcos   
  402c83:	pushf  
  402c84:	cwde   
  402c85:	jmp    0x3123:0xe2841dba
  402c8c:	jl     0x402ce6
  402c8e:	clc    
  402c8f:	push   cs
  402c90:	repnz in al,dx
  402c92:	(bad)  
  402c93:	jl     0x402d0d
  402c95:	jmp    0x1123:0xe285fde0
	...
  402ccc:	add    BYTE PTR [eax],al
  402cce:	jl     0x402d28
  402cd0:	in     al,dx
  402cd1:	add    DWORD PTR [ebp+eax*1+0x0],ebp
  402cd5:	jmp    0xd2288517
  402cda:	push   ebp
  402cdb:	loop   0x402cdc
  402cdd:	jmp    0xc148851f
  402ce2:	pop    ss
  402ce3:	fdiv   st(7),st
  402ce5:	(bad)  
  402ce6:	mov    ecx,0x22b05bc6
  402ceb:	or     DWORD PTR [eax],eax
  402ced:	sbb    al,0xa8
  402cef:	icebp  
  402cf0:	sub    DWORD PTR [edi+ebx*1],0xffffffe2
  402cf4:	jae    0x402ce7
  402cf6:	std    
  402cf7:	push   edi
  402cf8:	or     BYTE PTR [ecx-0x16ff4b9d],dl
  402cfe:	imul   eax,ebp,0xe1fcabc9
  402d04:	push   esp
  402d05:	add    BYTE PTR [ecx-0x46],dh
  402d08:	mov    eax,DWORD PTR [ebp-0xe]
  402d0b:	add    al,0x80
  402d0d:	add    dl,bh
  402d0f:	add    eax,0xc18a6a50
  402d14:	repnz ror dl,1
  402d17:	add    eax,0x5c6c2c9
  402d1c:	push   ebp
  402d1d:	mov    ebx,DWORD PTR [esi]
  402d1f:	push   ebx
  402d20:	cld    
  402d21:	mov    ebp,DWORD PTR [edi-0x51b27523]
  402d27:	out    0xe,al
  402d29:	push   ecx
  402d2a:	jnp    0x402ced
  402d2c:	add    ch,BYTE PTR [ebx]
  402d2e:	jp     0x402d07
  402d30:	stos   DWORD PTR es:[edi],eax
  402d31:	pop    ecx
	...
  402d62:	add    BYTE PTR [eax],al
  402d64:	or     ecx,ebp
  402d66:	add    esi,ebx
  402d68:	xor    BYTE PTR [ebx-0x37],cl
  402d6b:	ret    0x592
  402d6e:	push   ebp
  402d6f:	mov    ebx,DWORD PTR [esi+0x50]
  402d72:	push   edi
  402d73:	mov    ebp,edi
  402d75:	fsincos 
  402d77:	mov    esi,edi
  402d79:	fisttp QWORD PTR [edx+0x2e68a4d]
  402d7f:	repz push ss
  402d81:	dec    ebx
  402d82:	pop    esi
  402d83:	leave  
  402d84:	mov    al,bl
  402d86:	call   DWORD PTR [ecx+edx*8-0x43]
  402d8a:	push   esi
  402d8b:	push   edi
  402d8c:	shl    DWORD PTR [eax+0x8],1
  402d8f:	cld    
  402d90:	rcr    DWORD PTR [eax],0x10
  402d93:	sub    ecx,DWORD PTR [edx]
  402d95:	pop    edi
  402d96:	jge    0x402da4
  402d98:	sub    DWORD PTR [ebx+esi*8],eax
  402d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d9c:	xor    DWORD PTR [ebp+esi*2+0x5e4a7a01],ebx
  402da3:	leave  
  402da4:	enter  0xffdd,0x54
  402da8:	xchg   ecx,eax
  402da9:	mov    ebp,0x4feec483
  402dae:	push   edi
  402daf:	push   ebx
  402db0:	arpl   WORD PTR [esi],ax
  402db2:	add    al,BYTE PTR [ecx]
  402db4:	arpl   si,bp
  402db6:	in     al,0x75
  402db8:	imul   esi,DWORD PTR [esi-0x6d],0xffffffff
  402dbc:	in     al,dx
  402dbd:	pop    edi
  402dbe:	jns    0x402e3d
  402dc0:	pop    ebx
  402dc1:	das    
  402dc2:	cmp    eax,0x415b12b
  402dc7:	add    DWORD PTR [eax],eax
	...
  402df9:	add    BYTE PTR [ebx-0x12],ah
  402dfc:	jnp    0x402e12
  402dfe:	mov    DWORD PTR [eax-0x3e],eax
  402e01:	loop   0x402dcd
  402e03:	arpl   WORD PTR [edi+0x8],sp
  402e06:	and    al,0xa7
  402e08:	js     0x402e7f
  402e0a:	xor    BYTE PTR [bx],bh
  402e0d:	(bad)  
  402e0e:	arpl   bx,si
  402e10:	mov    edx,0x64882b
  402e15:	cmp    ebp,ebx
  402e17:	test   eax,0x281e00e4
  402e1c:	jp     0x402e22
  402e1e:	push   edx
  402e1f:	out    dx,al
  402e20:	ds (bad) 
  402e22:	push   esp
  402e23:	inc    eax
  402e24:	dec    edi
  402e25:	(bad)  
  402e26:	jmp    0x5fc85815
  402e2b:	ret    
  402e2c:	jns    0x402e73
  402e2e:	ins    BYTE PTR es:[edi],dx
  402e2f:	push   esi
  402e30:	add    BYTE PTR [edx],bh
  402e32:	and    dl,BYTE PTR [ebx-0x132eefca]
  402e38:	sbb    cl,cl
  402e3a:	push   ebp
  402e3b:	stos   DWORD PTR es:[edi],eax
  402e3c:	outs   dx,BYTE PTR ds:[esi]
  402e3d:	aad    0xa8
  402e3f:	pop    ds
  402e40:	inc    esi
  402e41:	leave  
  402e42:	and    edx,ebp
  402e44:	add    edx,DWORD PTR [ebp-0x18]
  402e47:	mov    eax,ds:0xfb3bc480
  402e4c:	dec    ebp
  402e4d:	push   edi
  402e4e:	sub    al,0x19
  402e50:	cld    
  402e51:	pop    edx
  402e52:	fldl2e 
  402e54:	jnp    0x402e9b
  402e56:	push   ds
  402e57:	fs inc eax
  402e59:	add    ebx,ebp
  402e5b:	add    al,0x2c
  402e5d:	call   0x402e62
	...
  402e8e:	add    BYTE PTR [eax],al
  402e90:	fcomp  st(3)
  402e92:	es cmp eax,0xbce559d8
  402e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e99:	fucomp st(1)
  402e9b:	add    esp,DWORD PTR [ebx+0x5]
  402e9e:	jb     0x402ed6
  402ea0:	push   ebx
  402ea1:	in     al,0x29
  402ea3:	out    0x9e,al
  402ea5:	loop   0x402e8d
  402ea7:	lods   eax,DWORD PTR ds:[esi]
  402ea8:	es loop 0x402e89
  402eab:	lods   eax,DWORD PTR ds:[esi]
  402eac:	outs   dx,DWORD PTR ds:[esi]
  402ead:	sbb    eax,0x4cc4e71
  402eb2:	mov    ah,0xe7
  402eb4:	push   esp
  402eb5:	xchg   edi,eax
  402eb6:	lods   al,BYTE PTR ds:[esi]
  402eb7:	out    0xe9,eax
  402eb9:	clc    
  402eba:	adc    BYTE PTR [esi+ecx*1-0x21],bh
  402ebe:	imul   BYTE PTR [ebp+0xf71e226]
  402ec4:	imul   edx,DWORD PTR [eax],0x7f
  402ec7:	ds lahf 
  402ec9:	mov    dl,BYTE PTR [esp+eiz*8+0x79e0f8eb]
  402ed0:	ss loopne 0x402ebe
  402ed3:	dec    esi
  402ed4:	test   DWORD PTR [edx+0x49e829fd],ecx
  402eda:	adc    DWORD PTR [ebx],esi
  402edc:	dec    edi
  402edd:	adc    eax,0xe26b3e06
  402ee2:	sub    DWORD PTR [ecx+0x1e],edi
  402ee5:	loop   0x402f48
  402ee7:	add    cl,ch
  402ee9:	dec    eax
  402eea:	in     eax,dx
  402eeb:	jp     0x402e8d
  402eed:	add    al,0x46
  402eef:	inc    edx
  402ef0:	test   al,0xcc
  402ef2:	stos   DWORD PTR es:[edi],eax
  402ef3:	adc    BYTE PTR [eax],al
	...
  402f25:	add    BYTE PTR [ebx+0x38],ah
  402f28:	(bad)  
  402f29:	lock loop 0x402ef5
  402f2c:	mov    ebp,0x1adf34e2
  402f31:	das    
  402f32:	or     BYTE PTR [ecx-0x216c1fdc],dl
  402f38:	add    BYTE PTR [edi+ebp*2],bh
  402f3b:	in     eax,dx
  402f3c:	mov    ds:0x85055f99,eax
  402f41:	test   eax,0xe9968d70
  402f46:	pusha  
  402f47:	add    eax,0xed6f1cff
  402f4c:	das    
  402f4d:	xchg   edi,eax
  402f4e:	add    bh,bl
  402f50:	mov    DWORD PTR [ebx+ecx*1],ebp
  402f53:	fbstp  TBYTE PTR [ebp+0x7d]
  402f56:	imul   DWORD PTR [ebp-0x31]
  402f59:	jmp    0xf60039be
  402f5e:	inc    ecx
  402f5f:	mov    WORD PTR [ebp+0x59],es
  402f62:	rcr    BYTE PTR [eax-0xc],0x51
  402f66:	cmp    edi,ebx
  402f68:	call   DWORD PTR [esi-0x12]
  402f6b:	dec    eax
  402f6c:	clc    
  402f6d:	dec    esi
  402f6e:	sbb    bl,cl
  402f70:	(bad)  
  402f71:	mov    esp,0x3975de88
  402f76:	mov    bh,0x91
  402f78:	(bad)  
  402f79:	ss sbb dh,0x75
  402f7d:	sub    eax,0xe9cf4787
  402f82:	pusha  
  402f83:	fidiv  WORD PTR [ebp-0x13]
  402f86:	js     0x402f9b
  402f88:	iret   
  402f89:	jmp    0x402f8e
	...
  402fba:	add    BYTE PTR [eax],al
  402fbc:	pusha  
  402fbd:	xor    eax,0x906494ff
  402fc2:	test   DWORD PTR [edi],edx
  402fc4:	sbb    esi,0xa87899ff
  402fca:	(bad)  
  402fcb:	test   BYTE PTR [ecx-0x22],0x75
  402fcf:	cmc    
  402fd0:	inc    ecx
  402fd1:	pop    eax
  402fd2:	clc    
  402fd3:	je     0x402fb0
  402fd5:	out    dx,al
  402fd6:	(bad)  
  402fd7:	fiadd  WORD PTR [ecx+0x35]
  402fda:	call   0x1e72b6
  402fdf:	into   
  402fe0:	fwait
  402fe1:	or     eax,0xc17d00e8
  402fe6:	(bad)  
  402fe7:	call   DWORD PTR [eax+0x62546811]
  402fed:	dec    eax
  402fee:	add    bh,bh
  402ff0:	dec    edi
  402ff1:	adc    eax,ebp
  402ff3:	xchg   ebx,eax
  402ff4:	shl    dl,0xff
  402ff7:	or     esp,DWORD PTR [edx]
  402ff9:	jecxz  0x403070
  402ffb:	hlt    
  402ffc:	aad    0x3c
  402ffe:	clc    
  402fff:	dec    DWORD PTR [edi+0x11]
  403002:	call   0x23108a
  403007:	and    eax,edx
  403009:	loop   0x403080
  40300b:	clc    
  40300c:	loop   0x402fac
  40300e:	std    
  40300f:	inc    DWORD PTR [ebp-0x1d]
  403012:	jne    0x40301c
  403014:	xor    al,BYTE PTR [ebp-0x70da0009]
  40301a:	ret    
  40301b:	pop    ebx
  40301c:	or     eax,0x8
	...
  40304f:	add    BYTE PTR [eax],al
  403051:	add    bh,ch
  403053:	mov    gs,esp
  403055:	cmp    DWORD PTR [esi-0x4a],0x57
  403059:	mov    edi,edi
  40305b:	aad    0xa
  40305d:	rcr    dh,0xb
  403060:	mov    DWORD PTR [eax],0x18a
  403066:	mov    cl,0xe2
  403068:	cmp    DWORD PTR [ebp+0x62],0x8
  40306c:	jne    0x403075
  40306e:	adc    BYTE PTR [edx],al
  403070:	add    al,BYTE PTR [eax]
  403072:	mov    ch,dh
  403074:	jae    0x75420a61
  40307a:	jge    0x4030fb
  40307c:	add    BYTE PTR [ecx],al
  40307e:	dec    edx
  40307f:	or     ebx,ebp
  403081:	add    ah,BYTE PTR [ecx]
  403083:	xchg   ebx,eax
  403084:	or     edx,0x20163
  40308a:	mov    bh,0x44
  40308c:	cld    
  40308d:	push   eax
  40308e:	arpl   WORD PTR [eax],sp
  403090:	outs   dx,BYTE PTR ds:[esi]
  403091:	add    BYTE PTR [edx+esi*1],dh
  403094:	adc    bh,bh
  403096:	mov    dh,0xd6
  403098:	jmp    0x40306a
  40309a:	adc    al,0xef
  40309c:	add    ecx,DWORD PTR [ebx]
  40309e:	and    ebx,DWORD PTR [edx]
  4030a0:	jno    0x40302f
  4030a2:	sahf   
  4030a3:	xchg   esi,eax
  4030a4:	xor    al,0x6a
  4030a6:	arpl   WORD PTR [ecx+0x47],dx
  4030a9:	hlt    
  4030aa:	mov    bl,0xf8
  4030ac:	add    edi,edi
  4030ae:	jbe    0x40308e
  4030b0:	loopne 0x403127
  4030b2:	test   DWORD PTR [esi+0xcf9d],0x0
	...
  4030e8:	arpl   si,bp
  4030ea:	or     al,0xc0
  4030ec:	outs   dx,BYTE PTR ds:[esi]
  4030ed:	sub    al,BYTE PTR [ebp+0x57eedb7d]
  4030f3:	inc    esi
  4030f4:	loopne 0x4030df
  4030f6:	xlat   BYTE PTR ds:[ebx]
  4030f7:	add    DWORD PTR [esi-0x14],edx
  4030fa:	test   BYTE PTR [ebp-0x35],bh
  4030fd:	in     eax,dx
  4030fe:	push   edi
  4030ff:	cmp    ch,al
  403101:	test   eax,0x461340db
  403106:	inc    edx
  403107:	std    
  403108:	lods   al,BYTE PTR ds:[esi]
  403109:	inc    ebx
  40310a:	(bad)  
  40310b:	clc    
  40310c:	(bad)  
  40310d:	mov    eax,ds:0xc83450db
  403112:	add    ebp,DWORD PTR [edx+0x63]
  403115:	sub    edx,DWORD PTR [edi+0x10]
  403118:	mov    WORD PTR [ecx-0x21],?
  40311b:	call   0x445cfe
  403120:	push   0xc0a582e
  403125:	push   es
  403126:	sub    ebp,edi
  403128:	ins    BYTE PTR es:[edi],dx
  403129:	add    ebp,DWORD PTR ds:0x8cea78ff
  40312f:	inc    ebp
  403130:	ja     0x403119
  403132:	ret    
  403133:	je     0x403193
  403135:	jmp    0x40318d
  403137:	clc    
  403138:	fadd   QWORD PTR [ecx+ebp*8]
  40313b:	loopne 0x40310b
  40313d:	(bad)  
  40313f:	push   0x2c
  403141:	add    eax,0x101c8ce9
  403146:	test   eax,0x44884f56
  40314b:	cld    
	...
  40317c:	add    BYTE PTR [eax],al
  40317e:	bound  ebx,QWORD PTR [eax-0x29]
  403181:	mov    WORD PTR [esi+0x143428fd],fs
  403187:	push   edx
  403188:	aad    0xe0
  40318a:	xchg   esi,eax
  40318b:	cmc    
  40318c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40318d:	push   esi
  40318e:	push   edi
  40318f:	fcom   QWORD PTR [esp+ecx*1]
  403192:	or     esp,DWORD PTR [esi]
  403194:	xchg   esi,eax
  403195:	loopne 0x40318b
  403197:	cmp    esp,DWORD PTR [eax+0x1c0557c5]
  40319d:	(bad)  
  40319e:	test   DWORD PTR [ebp+0x5620bfc],0xe4e83e9
  4031a8:	outs   dx,BYTE PTR ds:[esi]
  4031a9:	push   ss
  4031aa:	xor    eax,0xd403a82e
  4031af:	inc    ecx
  4031b0:	icebp  
  4031b1:	ins    DWORD PTR es:[edi],dx
  4031b2:	arpl   sp,bx
  4031b4:	fdivr  st(7),st
  4031b6:	mov    ch,0x51
  4031b8:	stc    
  4031b9:	loopne 0x4031f1
  4031bb:	or     DWORD PTR [esi+0x56],eax
  4031be:	pop    ebx
  4031bf:	in     eax,dx
  4031c0:	xor    eax,0x20db9ce1
  4031c5:	lds    esi,FWORD PTR [ebx+0x5]
  4031c8:	add    al,ah
  4031ca:	fdiv   DWORD PTR [eax+edi*1-0x16f2351b]
  4031d1:	add    esp,DWORD PTR [ebx-0x4a]
  4031d4:	add    edx,DWORD PTR [edi+eiz*2-0x7a]
  4031d8:	sbb    edx,DWORD PTR [edx]
  4031da:	shr    DWORD PTR [ebp-0xa8e7dfb],1
  4031e0:	xlat   BYTE PTR ds:[ebx]
  4031e1:	repnz add BYTE PTR [eax],al
	...
  403214:	jae    0x4031fd
  403216:	add    BYTE PTR [edi],al
  403218:	jmp    0xc1d9b70e
  40321d:	inc    esp
  40321e:	add    bh,ah
  403220:	pop    ds
  403221:	push   ecx
  403222:	fisubr DWORD PTR [edx+0x3eec8e7a]
  403228:	call   0xf8163a6d
  40322d:	mov    ?,WORD PTR [ebp-0xb]
  403230:	(bad)  [eax+0x10]
  403233:	repnz das 
  403235:	push   edx
  403236:	sbb    BYTE PTR [edx-0x31],ah
  403239:	(bad)  
  40323a:	jmp    0x5fa6:0x250272e1
  403241:	add    eax,0x806b7200
  403246:	push   eax
  403247:	or     BYTE PTR [esi-0x5b54ccfb],bl
  40324d:	out    0xe8,eax
  40324f:	jle    0x403200
  403251:	cmp    cl,cl
  403253:	stos   DWORD PTR es:[edi],eax
  403254:	jae    0x40325b
  403256:	push   ebp
  403257:	(bad)
  40325c:	pop    eax
  40325d:	add    eax,0x409dee75
  403262:	or     BYTE PTR [eax],dh
  403264:	pop    DWORD PTR [eax+eax*1+0x6a]
  403268:	inc    edx
  403269:	or     DWORD PTR [eax],eax
  40326b:	aam    0x65
  40326d:	ret    0xf545
  403270:	xchg   edi,eax
  403271:	sub    eax,0x50bde941
  403276:	or     BYTE PTR [ecx+0x0],al
	...
  4032a9:	add    BYTE PTR [eax+ecx*8+0x0],dh
  4032ad:	jmp    0x9d3ff08b
  4032b2:	push   esp
  4032b3:	in     eax,dx
  4032b4:	xor    eax,0x305672c
  4032b9:	xor    DWORD PTR [eax],esp
  4032bb:	ss call 0x1abf8f
  4032c1:	add    cl,dh
  4032c3:	cwde   
  4032c4:	push   DWORD PTR [ebp+0x52]
  4032c7:	pop    ss
  4032c8:	call   0x41b20c
  4032cd:	call   edi
  4032cf:	or     dl,BYTE PTR [ebx-0x18]
  4032d2:	jle    0x403288
  4032d4:	add    BYTE PTR [eax],al
  4032d6:	mov    cl,0xc7
  4032d8:	pop    ebx
  4032d9:	leave  
  4032da:	or     BYTE PTR [esi],cl
  4032dc:	add    BYTE PTR [ebp-0x3f],dl
  4032df:	jmp    0x7500:0x99f8353
  4032e6:	add    eax,0xc30845c3
  4032eb:	sub    eax,0x65790041
  4032f0:	or     al,0x0
  4032f2:	addr16 add al,bh
  4032f5:	inc    ebp
  4032f6:	push   cs
  4032f7:	leave  
  4032f8:	sub    BYTE PTR [ecx+0xa],al
  4032fb:	mov    ebx,0xeee20875
  403300:	int3   
  403301:	add    dl,bh
  403303:	mov    ds,eax
  403305:	call   edi
  403307:	or     eax,ebp
  403309:	loope  0x403309
  40330b:	add    eax,0x300
	...
  403340:	repnz inc esi
  403342:	push   ebx
  403343:	call   0x3ff279
  403348:	xor    DWORD PTR [esi+0x16c275ff],ebx
  40334e:	call   0x46823e
  403353:	jmp    edi
  403355:	or     DWORD PTR [ebx-0x18],edx
  403358:	xor    cl,dl
  40335a:	add    BYTE PTR [eax],al
  40335c:	dec    ebp
  40335d:	cmp    eax,0xbf12e808
  403362:	(bad)  
  403363:	call   DWORD PTR [ecx]
  403365:	(bad)  
  403366:	pop    ebx
  403367:	leave  
  403368:	dec    eax
  403369:	push   cs
  40336a:	add    BYTE PTR [ebp+0x63],dl
  40336d:	addr16 out dx,eax
  40336f:	and    DWORD PTR [edi+0x5e683607],0xffffffed
  403376:	add    eax,DWORD PTR [eax]
  403378:	dec    ebx
  403379:	adc    dl,bl
  40337b:	call   DWORD PTR [esi+eiz*2+0x48]
  40337f:	cld    
  403380:	loopne 0x40332b
  403382:	pop    ebx
  403383:	sub    DWORD PTR [edx+0x617503ee],esp
  403389:	mov    bl,0xf6
  40338b:	(bad)  
  40338c:	scas   al,BYTE PTR es:[edi]
  40338d:	mov    dl,0x6a
  40338f:	add    BYTE PTR [ecx+0x5b75dcee],bh
  403395:	xor    al,0x4
  403397:	push   DWORD PTR [esi+0x46]
  40339a:	sub    eax,DWORD PTR [ecx+0x63]
  40339d:	imul   eax,esp,0x57a79b79
  4033a3:	cld    
	...
  4033d4:	add    BYTE PTR [eax],al
  4033d6:	sti    
  4033d7:	cli    
  4033d8:	fdivr  st,st(7)
  4033da:	cld    
  4033db:	lahf   
  4033dc:	inc    edi
  4033dd:	cld    
  4033de:	arpl   si,bp
  4033e0:	add    eax,DWORD PTR [eax]
  4033e2:	lods   al,BYTE PTR ds:[esi]
  4033e3:	or     ch,BYTE PTR [ebx]
  4033e5:	inc    ecx
  4033e6:	arpl   WORD PTR [ebx+0x2f],si
  4033e9:	mov    esi,DWORD PTR [ebx+edx*2+0x47]
  4033ed:	or     BYTE PTR [esi+0x4f],bh
  4033f0:	pop    ebp
  4033f1:	dec    esp
  4033f3:	xchg   ebp,eax
  4033f4:	inc    ecx
  4033f5:	add    al,0x4e
  4033f7:	add    ebp,DWORD PTR [edx+0x0]
  4033fa:	out    dx,al
  4033fb:	lods   al,BYTE PTR ds:[esi]
  4033fc:	or     edx,DWORD PTR [eax+0x4b]
  4033ff:	sub    al,BYTE PTR es:[ecx+0x63]
  403403:	inc    edi
  403404:	adc    ch,al
  403406:	push   es
  403407:	inc    eax
  403408:	(bad)  
  40340a:	push   0xea05582e
  40340f:	test   eax,0x6b5bebdf
  403414:	lds    eax,FWORD PTR [eax+eiz*8]
  403417:	add    eax,0xc6f603e6
  40341c:	jb     0x403465
  40341e:	ja     0x403458
  403420:	and    dl,al
  403422:	addr16 add eax,0x347788b4
  403428:	jb     0x403471
  40342a:	imul   ecx,DWORD PTR [ecx+ebp*1],0x58
  40342e:	pop    esi
  40342f:	test   DWORD PTR [ecx+0x310bd603],esi
  403435:	add    al,0x63
  403437:	add    eax,0x38e9
	...
  40346c:	sub    al,bl
  40346e:	in     eax,0x3
  403470:	leave  
  403471:	add    eax,0x4b90443
  403476:	inc    ebx
  403477:	add    al,0xb9
  403479:	add    eax,0x5638451
  40347e:	jmp    0xc14dc35f
  403483:	in     al,0x18
  403485:	add    eax,0x2c2b88e9
  40348a:	test   eax,0x3a0c7740
  40348f:	in     al,dx
  403490:	std    
  403491:	retf   
  403492:	jmp    0xe945df9a
  403497:	add    esp,DWORD PTR [ebx+0x3c]
  40349a:	mov    al,0xc1
  40349c:	addr16 add eax,0x8bc78914
  4034a2:	sub    al,0xc
  4034a4:	pop    eax
  4034a5:	(bad)
  4034a8:	jecxz  0x4034c6
  4034aa:	jmp    0xe9dd9f05
  4034af:	add    esp,DWORD PTR [ebx+0x5]
  4034b2:	and    cl,al
  4034b4:	addr16 add eax,0xed5b564e
  4034ba:	cmp    ecx,eax
  4034bc:	arpl   WORD PTR ds:0x5094db6a,ax
  4034c2:	add    ah,ah
  4034c4:	mov    ecx,0x60e8fff4
  4034c9:	or     BYTE PTR [ebp-0x3f7090d7],dl
  4034cf:	adc    al,BYTE PTR [eax]
	...
  403501:	add    BYTE PTR [ebp-0x63],bl
  403504:	add    cl,ch
  403506:	pusha  
  403507:	add    eax,0x55c2bc9
  40350c:	push   ebp
  40350d:	jb     0x40355b
  40350f:	add    esp,0xfffffffd
  403512:	retf   
  403513:	add    eax,0x512fe96a
  403518:	or     BYTE PTR [ecx],al
  40351a:	sbb    ecx,ebx
  40351c:	add    cl,ch
  40351e:	ins    DWORD PTR es:[edi],dx
  40351f:	lds    esi,FWORD PTR [ebx+edx*1+0x6f]
  403523:	xor    eax,0xd70d8ae8
  403528:	jmp    DWORD PTR [eax-0x5e]
  40352b:	fstp   DWORD PTR [eax+0x19]
  40352e:	cmp    BYTE PTR [ecx-0x4],dl
  403531:	mov    esi,0x79e80db2
  403536:	sbb    al,0x6
  403538:	add    dl,ah
  40353a:	and    BYTE PTR [ecx+0xc],dl
  40353d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40353e:	xchg   edx,eax
  40353f:	fld1   
  403541:	sbb    DWORD PTR ds:0x20c2ffd7,edx
  403547:	jmp    0x40354c
  403549:	bound  esp,QWORD PTR [edx+0x63abc9d9]
  40354f:	add    eax,0x32cb7255
  403554:	mov    edx,DWORD PTR [ebx+ebx*2]
  403557:	imul   edx,DWORD PTR [eax],0x1a
  40355a:	mov    bh,0x81
  40355c:	cli    
  40355d:	cbw    
  40355f:	imul   eax,DWORD PTR [eax],0xffffffd3
  403562:	pusha  
  403563:	imul   eax,DWORD PTR [ebx],0xffffffc3
	...
  403596:	add    BYTE PTR [eax],al
  403598:	pusha  
  403599:	imul   eax,DWORD PTR [ebx],0xffffffc1
  40359c:	pusha  
  40359d:	add    eax,0xba0a0000
  4035a2:	jne    0x4035ac
  4035a4:	xor    ah,BYTE PTR [esi]
  4035a6:	retf   
  4035a7:	add    BYTE PTR [edx-0x77],bh
  4035aa:	add    eax,DWORD PTR [eax-0x32]
  4035ad:	push   cs
  4035ae:	push   0x0
  4035b0:	mov    edx,0x8acb6cea
  4035b5:	add    cl,BYTE PTR [ecx+0x688643]
  4035bb:	push   0x7a
  4035bd:	push   0x68486a00
  4035c2:	add    bh,bh
  4035c4:	sbb    edx,ebp
  4035c6:	pop    esi
  4035c7:	retf   
  4035c8:	cmp    al,BYTE PTR [edx]
  4035ca:	or     eax,eax
  4035cc:	into   
  4035cd:	sub    ecx,DWORD PTR [ecx+0x684e43]
  4035d3:	push   0x4a
  4035d5:	push   0x123e6a00
  4035da:	call   0x42372e
  4035df:	mov    DWORD PTR [ecx+0x9],ecx
  4035e2:	or     eax,eax
  4035e4:	dec    edi
  4035e5:	and    eax,0xe9fe73ff
  4035ea:	repnz retf 0x1fa
  4035ee:	push   DWORD PTR [ebx]
  4035f0:	shl    dh,cl
  4035f2:	retf   0xa00
  4035f5:	ret    
  4035f6:	add    edi,edi
  4035f8:	aad    0xba
  4035fa:	(bad)  
  4035fb:	jmp    0x4035fd
	...
  40362d:	add    BYTE PTR [edi],al
  40362f:	mov    ebx,0xc806e833
  403634:	add    BYTE PTR [eax],al
  403636:	std    
  403637:	(bad)  
  403638:	(bad)  
  403639:	call   DWORD PTR [ebp-0x45]
  40363c:	sub    eax,eax
  40363e:	adc    edi,DWORD PTR [edi]
  403640:	or     BYTE PTR [edi],cl
  403642:	aas    
  403643:	ret    0xc95b
  403646:	mov    BYTE PTR [edx],cl
  403648:	add    BYTE PTR [ebp+0x63],dl
  40364b:	arpl   di,sp
  40364d:	push   ebx
  40364e:	fsubr  DWORD PTR [eax+0x3f58830b]
  403654:	dec    edi
  403655:	pop    ss
  403656:	xchg   esp,eax
  403657:	call   0x3:0x235ae80b
  40365e:	test   BYTE PTR [edx+0x11cee7ff],bl
  403664:	add    eax,DWORD PTR [eax]
  403666:	je     0x403622
  403668:	jmp    0x403610
  40366a:	cdq    
  40366b:	jmp    0x403670
  40366d:	pop    ebx
  40366e:	call   0xe757:0xb7ffff29
  403675:	sbb    DWORD PTR [edi],0x4cffe9ff
  40367b:	jne    0x4036af
  40367d:	add    DWORD PTR [esi+0x63412b53],0xffffffde
  403684:	dec    edi
  403685:	adc    eax,0x2868fa34
  40368a:	mov    ds:0x2a8aebde,al
  40368f:	(bad)  
  403690:	fld    st(7)
	...
  4036c2:	add    BYTE PTR [eax],al
  4036c4:	cmp    bp,WORD PTR [ecx+eax*2]
  4036c8:	arpl   si,bx
  4036ca:	add    eax,DWORD PTR [eax]
  4036cc:	arpl   WORD PTR [edi+0x17],bx
  4036cf:	jae    0x40370c
  4036d1:	sbb    eax,0xd1770004
  4036d6:	fdiv   DWORD PTR ds:0x42b670
  4036dc:	sti    
  4036dd:	or     bl,bl
  4036df:	jmp    esp
  4036e1:	stos   DWORD PTR es:[edi],eax
  4036e2:	push   DWORD PTR [edx-0x75]
  4036e5:	sbb    eax,0xde630004
  4036ea:	add    ecx,DWORD PTR [ebp-0x16b11a]
  4036f0:	(bad)  
  4036f1:	out    dx,al
  4036f2:	jmp    0x40369a
  4036f4:	mov    bl,0x5
  4036f6:	data16 (bad) 
  4036f9:	mov    cl,BYTE PTR [ebp-0x17]
  4036fc:	lods   al,BYTE PTR ds:[esi]
  4036fd:	aam    0xb9
  4036ff:	jmp    0x4036ca
  403701:	aad    0x4e
  403703:	fldz   
  403705:	dec    edx
  403706:	inc    ebp
  403707:	xor    al,0xb
  403709:	pop    esp
  40370a:	adc    DWORD PTR [ebx+0x63],eax
  40370d:	pop    ebp
  40370e:	jmp    0x403713
  403710:	arpl   WORD PTR [ebp+0x5a87141],ax
  403716:	jmp    0x6444da27
  40371b:	cmp    eax,0xc0e90562
  403720:	fcompp 
  403722:	(bad)  
  403723:	fcomp  DWORD PTR [ebp+eax*1-0x17]
  403727:	add    eax,DWORD PTR [eax]
	...
  403759:	add    BYTE PTR [ebx-0x34],ah
  40375c:	fdivr  QWORD PTR fs:[esp+edx*8]
  403760:	neg    al
  403762:	push   esp
  403763:	add    eax,0x5f636de9
  403768:	jmp    0xe99f9ada
  40376d:	xchg   dh,ah
  40376f:	int3   
  403770:	(bad)  
  403771:	fsub   DWORD PTR [esi*1-0x1be081a4]
  403778:	(bad)  
  403779:	fdiv   DWORD PTR [ebx-0x3308b2c]
  40377f:	shl    DWORD PTR [esi-0x3e2e7128],cl
  403785:	sub    BYTE PTR ss:0x4230ce9,al
  40378c:	fs hlt 
  40378e:	arpl   WORD PTR ds:0x1d1c6be9,ax
  403794:	sub    BYTE PTR [ebx+ecx*2],al
  403797:	pop    esp
  403798:	rol    DWORD PTR [edx+0x63],1
  40379b:	(bad)  
  40379d:	xlat   BYTE PTR ds:[ebx]
  40379e:	int3   
  40379f:	rol    DWORD PTR [eax],cl
  4037a1:	loop   0x403743
  4037a3:	add    eax,DWORD PTR [eax+edi*2+0x72000560]
  4037aa:	lock add DWORD PTR [ebp-0x2c44a3],0xbcdd6eb9
  4037b5:	dec    ebp
  4037b6:	mov    ebx,0x6b290bd3
  4037bb:	mov    edx,ebx
  4037bd:	jmp    0x4037c2
	...
  4037ee:	add    BYTE PTR [eax],al
  4037f0:	pusha  
  4037f1:	add    eax,0xe3806c89
  4037f6:	jmp    FWORD PTR [esi]
  4037f8:	in     eax,0x89
  4037fa:	call   0x5113d315
  4037ff:	xchg   ecx,eax
  403800:	mov    edi,0x8be9411c
  403805:	cdq    
  403806:	loopne 0x403806
  403808:	xor    al,0xd3
  40380a:	push   0x800560eb
  40380f:	adc    ebx,esi
  403811:	into   
  403812:	push   esi
  403814:	pop    eax
  403815:	lds    ecx,FWORD PTR [edi]
  403817:	fld    QWORD PTR gs:0xcde1e900
  40381e:	add    esi,ebp
  403820:	scas   al,BYTE PTR es:[edi]
  403821:	jno    0x403823
  403823:	jmp    0x953f6d88
  403828:	pavgw  mm7,mm7
  40382b:	(bad)  
  40382c:	dec    edi
  40382d:	shl    BYTE PTR [ebp-0x2cfb47],cl
  403833:	rol    DWORD PTR [esi],0xda
  403836:	jmp    FWORD PTR [esi-0x69177716]
  40383c:	or     al,0xd3
  40383e:	push   eax
  40383f:	adc    eax,ecx
  403841:	sbb    eax,0x990de941
  403846:	loopne 0x4038c6
  403848:	mov    ah,0xd2
  40384a:	push   0x6c800
  40384f:	xor    dl,0x42
  403852:	sti    
  403853:	inc    DWORD PTR [eax]
	...
  403885:	add    BYTE PTR [ebp-0x2],cl
  403888:	mov    edi,0xbd868674
  40388d:	call   0x23ff29f
  403892:	xchg   esp,eax
  403893:	out    dx,eax
  403894:	dec    edi
  403895:	push   eax
  403896:	aas    
  403897:	test   ah,bh
  403899:	out    dx,eax
  40389a:	sub    eax,0xd2e850ba
  40389f:	rol    DWORD PTR [eax],0x0
  4038a2:	jmp    0xffba:0x1dfc857d
  4038a9:	push   eax
  4038aa:	dec    ebp
  4038ab:	je     0x403899
  4038ad:	out    dx,eax
  4038ae:	cmp    eax,0x56cfe8ba
  4038b3:	mov    edx,0x744d58ff
  4038b8:	call   0x50faa6ac
  4038bd:	call   DWORD PTR [edi+0x4dffefdd]
  4038c3:	fidivr WORD PTR [esp+esi*8+0x19e8bb4d]
  4038ca:	xor    bh,BYTE PTR [ebx+0x7c6aebff]
  4038d0:	test   esp,edi
  4038d2:	sbb    eax,0x2250ffbb
  4038d7:	or     ecx,ecx
  4038d9:	add    BYTE PTR [edx],cl
  4038db:	inc    esi
  4038dc:	push   eax
  4038dd:	lea    eax,[edi-0x32001046]
  4038e3:	adc    eax,0xeb1eb5ff
  4038e8:	(bad)  
  4038e9:	inc    DWORD PTR [eax]
	...
  40391b:	add    BYTE PTR [edx],ah
  40391d:	push   ebp
  40391e:	hlt    
  40391f:	(bad)  
  403920:	mov    ebp,0xcdf7f2dd
  403925:	mov    edx,0x7c63b5ff
  40392a:	out    0xff,al
  40392c:	fadd   QWORD PTR [ebx-0x752b0822]
  403932:	(bad)  
  403933:	test   edi,edx
  403935:	adc    dh,0xff
  403938:	mov    edx,0xbcffd512
  40393d:	bound  edx,QWORD PTR [eax-0x4]
  403940:	retf   
  403941:	stc    
  403942:	leave  
  403943:	add    BYTE PTR [ebx-0x4a],ah
  403946:	add    edi,edi
  403948:	out    dx,al
  403949:	sub    esp,esi
  40394b:	call   FWORD PTR [ebx+eax*2+0x4a94f433]
  403952:	imul   eax,DWORD PTR [eax],0xefe7588c
  403958:	test   BYTE PTR [edx],bl
  40395a:	jmp    0x40399f
  40395c:	ja     0x403980
  40395e:	(bad)  
  40395f:	(bad)  
  403960:	fdivp  st(7),st
  403962:	in     eax,0xff
  403964:	ins    BYTE PTR es:[edi],dx
  403965:	mov    edx,esi
  403967:	mov    ch,0x73
  403969:	or     dl,dh
  40396b:	dec    DWORD PTR [ebx+0xd]
  40396e:	int3   
  40396f:	add    BYTE PTR [ebx+0x61],ah
  403972:	ret    
  403973:	js     0x40390d
  403975:	iret   
  403976:	(bad)  
  403977:	lock xor al,0xd8
  40397a:	aad    0xe8
  40397c:	pushf  
  40397d:	iret   
  40397e:	aad    0xff
	...
  4039b0:	add    BYTE PTR [eax],al
  4039b2:	jmp    0xd5b0:0x2cefec61
  4039b9:	mov    ch,0x3b
  4039bb:	enter  0xffd5,0xb
  4039bf:	pusha  
  4039c0:	int    0xff
  4039c2:	adc    al,0x7c
  4039c4:	sub    BYTE PTR gs:[edx-0x4a2b22],ah
  4039cb:	(bad)  
  4039cc:	aad    0xff
  4039ce:	or     ebx,DWORD PTR [ebp-0x34]
  4039d1:	add    BYTE PTR [ebx+0x5],ah
  4039d4:	bnd ret 
  4039d6:	ja     0x4039c4
  4039d8:	jno    0x403961
  4039da:	sti    
  4039db:	loopne 0x403973
  4039dd:	aad    0xe8
  4039df:	aad    0x62
  4039e1:	pop    ss
  4039e2:	inc    esp
  4039e3:	sbb    eax,0xa9d00428
  4039e8:	jle    0x403979
  4039ea:	mov    edi,0xcbd576e0
  4039ef:	pop    esi
  4039f0:	mov    eax,ds:0x6c826304
  4039f5:	loopne 0x4039b3
  4039f7:	rcr    BYTE PTR [esi+0x34],1
  4039fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039fb:	call   0x5341:0xd09ce545
  403a02:	stos   BYTE PTR es:[edi],al
  403a03:	add    eax,0x4da37ee9
  403a08:	mov    dl,0xd4
  403a0a:	into   
  403a0b:	loope  0x403a53
  403a0d:	aad    0x7c
  403a0f:	(bad)  [edi]
  403a11:	out    0x74,al
  403a13:	shl    BYTE PTR [eax+0x7f],1
	...
  403a46:	add    BYTE PTR [eax],al
  403a48:	jnp    0x403a2a
  403a4a:	push   ds
  403a4b:	aad    0x64
  403a4d:	call   0x1601:0xd05ce501
  403a54:	dec    esp
  403a55:	rol    BYTE PTR [esi],1
  403a57:	mov    eax,ds:0x3a81dd0
  403a5c:	inc    esp
  403a5d:	call   0x2301:0xd03ce50d
  403a64:	sub    eax,DWORD PTR ds:0x592308e9
  403a6a:	add    cl,BYTE PTR [ecx-0x2b39232a]
  403a70:	sbb    al,0x7c
  403a72:	(bad)  [eax+0x43115456]
  403a78:	arpl   sp,dx
  403a7a:	test   esp,edx
  403a7c:	into   
  403a7d:	call   0xd0580082
  403a82:	call   0x456368
  403a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a88:	fst    st(4)
  403a8a:	out    dx,eax
  403a8b:	sahf   
  403a8c:	paddusw mm3,QWORD PTR [edx-0x79]
  403a90:	mov    bh,0xcf
  403a92:	call   DWORD PTR [esp+edi*4-0x21]
  403a96:	inc    DWORD PTR [esi+0x7eee3fb8]
  403a9c:	scas   eax,DWORD PTR es:[edi]
  403a9d:	das    
  403a9e:	pop    esi
  403a9f:	mov    al,ds:0x7d8b39a3
  403aa4:	dec    edx
  403aa5:	std    
  403aa6:	out    0x52,eax
  403aa8:	sahf   
  403aa9:	iret   
  403aaa:	push   DWORD PTR [edx+0x0]
	...
  403add:	add    al,dh
  403adf:	iret   
  403ae0:	xor    eax,0x464824
  403ae5:	pop    esi
  403ae6:	(bad)  
  403ae7:	shl    BYTE PTR [ebp-0xf],1
  403aea:	out    0x42,eax
  403aec:	add    al,0x70
  403aee:	jne    0x403ab0
  403af0:	sub    BYTE PTR [eax-0x1a3d41a0],ch
  403af6:	pusha  
  403af7:	cmp    cl,BYTE PTR [ebx-0x7371ceb]
  403afd:	mov    dh,0xa7
  403aff:	dec    ecx
  403b00:	clc    
  403b01:	jmp    0x6a404066
  403b06:	lods   eax,DWORD PTR ds:[esi]
  403b07:	std    
  403b08:	(bad)  
  403b09:	jl     0x403b5d
  403b0b:	shl    BYTE PTR [ebp-0x13],1
  403b0e:	das    
  403b0f:	pop    ecx
  403b10:	or     BYTE PTR [ebx-0xcf922a0],al
  403b16:	adc    bh,cl
  403b18:	mov    DWORD PTR [ebx+edx*1],ebp
  403b1b:	fild   DWORD PTR [edi]
  403b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b1e:	call   0x8b05:0x60e900d1
  403b25:	or     al,0x22
  403b27:	push   ds
  403b28:	inc    ecx
  403b29:	add    dl,bh
  403b2b:	scas   eax,DWORD PTR es:[edi]
  403b2c:	adc    ecx,DWORD PTR [ebx+0x473bb53f]
  403b32:	push   cs
  403b33:	cs or  edi,eax
  403b36:	aas    
  403b37:	rol    DWORD PTR [ecx],0x0
  403b3a:	cli    
  403b3b:	add    ch,bl
  403b3d:	push   es
  403b3e:	jno    0x403b32
  403b40:	or     bh,bh
	...
  403b72:	add    BYTE PTR [eax],al
  403b74:	jg     0x403b26
  403b76:	cmp    DWORD PTR [ebp-0xe],0x9
  403b7a:	jne    0x403b84
  403b7c:	in     eax,0x2c
  403b7e:	cld    
  403b7f:	call   0x3fedbc
  403b84:	inc    ecx
  403b85:	cmp    al,0xf8
  403b87:	pop    edi
  403b88:	add    ecx,eax
  403b8a:	or     BYTE PTR [eax],al
  403b8c:	in     eax,dx
  403b8d:	dec    edi
  403b8e:	cmp    eax,0x4852cd
  403b93:	jmp    0x403b17
  403b95:	or     ecx,DWORD PTR [ebx-0x9c5ddc1]
  403b9b:	jmp    DWORD PTR ds:0x4e75fece
  403ba1:	mov    edx,0x4862cd05
  403ba6:	add    BYTE PTR [eax],al
  403ba8:	mov    al,BYTE PTR [edx]
  403baa:	add    BYTE PTR [edi+0x39],bl
  403bad:	or     al,0x8b
  403baf:	in     al,dx
  403bb0:	lods   eax,DWORD PTR ds:[esi]
  403bb1:	or     al,0x6a
  403bb3:	add    BYTE PTR [ebp+0x2c],dh
  403bb6:	or     al,ch
  403bb8:	jge    0x403b7a
  403bba:	(bad)  
  403bbb:	call   ecx
  403bbd:	sar    edi,0x75
  403bc0:	push   edx
  403bc1:	stos   BYTE PTR es:[edi],al
  403bc2:	and    al,bh
  403bc4:	dec    edx
  403bc5:	add    al,BYTE PTR [ebx+0xf2c4bf8]
  403bcb:	push   edi
  403bcc:	mov    edx,0x327521f3
  403bd1:	mov    esi,0xdd63778d
  403bd6:	jle    0x403ba0
	...
  403c08:	add    BYTE PTR [eax],al
  403c0a:	adc    BYTE PTR [eax-0xab097ce],cl
  403c10:	inc    esp
  403c11:	add    BYTE PTR [esp+esi*4-0x239c3792],ch
  403c18:	(bad)  
  403c19:	mov    edi,0x40c9e86f
  403c1e:	fcomp  QWORD PTR [di+0x5c]
  403c22:	jns    0x403c00
  403c24:	cmp    ch,al
  403c26:	in     al,dx
  403c27:	mov    ds:0x9c680003,eax
  403c2c:	push   edi
  403c2d:	add    eax,0xeb03dba5
  403c32:	pusha  
  403c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c34:	or     al,BYTE PTR [eax]
  403c36:	adc    al,0x84
  403c38:	mov    dl,0xc6
  403c3a:	arpl   sp,bx
  403c3c:	xchg   al,bh
  403c3e:	pusha  
  403c3f:	scas   eax,DWORD PTR es:[edi]
  403c40:	push   es
  403c41:	(bad)  
  403c42:	pop    esp
  403c43:	fdivr  QWORD PTR [esi-0x39]
  403c46:	cmp    eax,0x5fc2bc97
  403c4b:	fdivr  QWORD PTR [eax]
  403c4d:	mov    edi,DWORD PTR [edi+0x5a]
  403c50:	(bad)  
  403c51:	cld    
  403c52:	fsubr  DWORD PTR [eax-0x539cfb01]
  403c58:	add    eax,DWORD PTR [eax]
  403c5a:	adc    eax,DWORD PTR [ecx+eax*8-0xb]
  403c5e:	ins    BYTE PTR es:[edi],dx
  403c5f:	es jl  0x403ca7
  403c62:	addr16 out dx,al
  403c64:	push   edi
  403c65:	or     al,0x5c
  403c67:	push   0xffffffcf
  403c69:	dec    esi
  403c6b:	out    0xdb,al
  403c6d:	hlt    
	...
  403c9e:	add    BYTE PTR [eax],al
  403ca0:	push   esi
  403ca1:	add    al,0xd2
  403ca3:	dec    esi
  403ca5:	scas   al,BYTE PTR es:[edi]
  403ca6:	shl    BYTE PTR [ebp+0x6f],cl
  403ca9:	rcl    DWORD PTR [edi-0x4],cl
  403cac:	dec    ebx
  403cad:	or     BYTE PTR [bx+si],al
  403cb0:	arpl   WORD PTR ds:0xde2757e6,ax
  403cb6:	jns    0x403c8f
  403cb8:	sbb    al,0xcd
  403cba:	mov    al,ds:0x3a0567c6
  403cbf:	pop    esp
  403cc0:	push   0x1e
  403cc2:	sub    BYTE PTR [ebx+edi*8],al
  403cc5:	mov    eax,0x6304a7
  403cca:	test   eax,0x91805158
  403ccf:	pop    esp
  403cd0:	inc    esi
  403cd1:	push   ds
  403cd2:	sub    BYTE PTR [eax+edx*4],al
  403cd5:	fnsave [ecx+0x4a0563ca]
  403cdb:	or     al,0x8a
  403cdd:	inc    esi
  403cde:	jmp    0x7272dd0f
  403ce3:	loopne 0x403d12
  403ce5:	cmp    BYTE PTR [esi],dl
  403ce7:	shl    DWORD PTR [esi],1
  403ce9:	std    
  403cea:	sbb    BYTE PTR [edi+0x73e9059d],0x58
  403cf1:	(bad)
  403cf4:	add    al,0x30
  403cf6:	mov    edi,0xe8fda1ba
  403cfb:	jl     0x403d13
  403cfd:	std    
  403cfe:	js     0x403d7d
  403d00:	stos   DWORD PTR es:[edi],eax
  403d01:	jne    0x403d75
  403d03:	push   edi
	...
  403d34:	add    BYTE PTR [eax],al
  403d36:	push   edi
  403d37:	and    BYTE PTR [ecx],ch
  403d39:	sar    BYTE PTR [edx+0x74d136cc],1
  403d3f:	jne    0x403d7c
  403d41:	mov    ds:0x3e685d3,al
  403d46:	out    dx,eax
  403d47:	in     eax,dx
  403d48:	mov    ch,0x34
  403d4a:	dec    ebx
  403d4b:	sub    BYTE PTR [edi],0x4
  403d4e:	arpl   WORD PTR [eax],ax
  403d50:	sub    DWORD PTR [edi+0x64],edx
  403d53:	sub    al,0xa2
  403d55:	xor    DWORD PTR [edx],ebx
  403d57:	(bad)  
  403d58:	icebp  
  403d59:	add    ebp,edx
  403d5b:	add    al,BYTE PTR [eax]
  403d5d:	push   0x29
  403d5f:	add    ebx,ebp
  403d61:	pop    ss
  403d62:	fild   WORD PTR ds:0x2c60e900
  403d68:	pop    ebx
  403d69:	aas    
  403d6a:	fadd   st,st(6)
  403d6c:	or     cl,ch
  403d6e:	dec    ebp
  403d6f:	sub    ah,0x62
  403d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d73:	std    
  403d74:	or     ch,BYTE PTR [ecx+0x18002ac]
  403d7a:	addr16 push edx
  403d7c:	or     DWORD PTR [ecx+0x60],esi
  403d7f:	add    eax,0xc6a9e900
  403d84:	add    al,0xe9
  403d86:	inc    edi
  403d87:	mov    bh,0xeb
  403d89:	mul    al
  403d8b:	or     al,0x5c
  403d8d:	sbb    eax,0xbe38855c
  403d92:	xor    eax,0x60e8ba04
  403d97:	add    eax,0x9200
	...
  403dcc:	pop    DWORD PTR gs:[eax]
  403dcf:	jmp    0x69804334
  403dd4:	pop    eax
  403dd5:	add    eax,0xc7274d75
  403dda:	leave  
  403ddb:	sub    esp,DWORD PTR [ebp+eax*1+0x55]
  403ddf:	bound  esi,QWORD PTR [ebx+esi*1+0x420fba56]
  403de6:	or     al,0xec
  403de8:	pusha  
  403de9:	add    DWORD PTR [eax],eax
  403deb:	jmp    0x419122a1
  403df0:	scas   al,BYTE PTR es:[edi]
  403df1:	sar    bh,1
  403df3:	cs out dx,eax
  403df5:	int3   
  403df6:	mov    eax,DWORD PTR [ecx-0x19]
  403df9:	push   ecx
  403dfa:	or     BYTE PTR [edx-0x63],dh
  403dfd:	stc    
  403dfe:	jmp    0xb420:0xb3cfceb
  403e05:	add    BYTE PTR [eax+0x74c91c00],al
  403e0b:	cmc    
  403e0c:	xor    DWORD PTR [eax+0xfa60274],edx
  403e12:	sub    eax,eax
  403e14:	mov    al,ds:0x1475c983
  403e19:	dec    edi
  403e1a:	ret    
  403e1b:	pop    ebx
  403e1c:	pop    esp
  403e1d:	sbb    cl,cl
  403e1f:	ret    0x702
  403e22:	push   ebx
  403e23:	push   esi
  403e24:	repz std 
  403e26:	(bad)  
  403e27:	(bad)  
  403e28:	cli    
  403e29:	push   esi
  403e2a:	xor    edx,edx
  403e2c:	call   0x0:0x90daf6
	...
  403e5f:	add    BYTE PTR [eax],al
  403e61:	add    dh,bl
  403e63:	push   ecx
  403e64:	movzx  edi,BYTE PTR [edx+0x6a2b3c51]
  403e6b:	sub    al,0x6
  403e6d:	nop
  403e6e:	dec    ecx
  403e6f:	(bad)  
  403e70:	ds nop
  403e72:	mov    ebp,esi
  403e74:	cs nop
  403e76:	ja     0x403e7b
  403e78:	nop
  403e79:	cmp    eax,0xfffffffa
  403e7c:	pop    DWORD PTR [ebx-0x2]
  403e7f:	test   BYTE PTR [edi+0x38fac07c],0x90
  403e86:	mov    ebp,0xb90403fd
  403e8b:	xchg   esi,eax
  403e8c:	inc    ebx
  403e8d:	cmp    al,0xcb
  403e8f:	push   esi
  403e90:	jl     0x403e9d
  403e92:	outs   dx,BYTE PTR ds:[esi]
  403e93:	pop    ds
  403e94:	nop
  403e95:	jg     0x403e1b
  403e97:	jmp    0x3c43:0x96799040
  403e9e:	stos   DWORD PTR es:[edi],eax
  403e9f:	push   esi
  403ea0:	jl     0x403eac
  403ea2:	outs   dx,BYTE PTR ds:[esi]
  403ea3:	cmp    al,0x90
  403ea5:	jg     0x403e2e
  403ea7:	jmp    0xc2c1:0x462a0346
  403eae:	inc    esp
  403eaf:	in     al,0xb1
  403eb1:	shl    DWORD PTR [ebx+0x26],0x6
  403eb5:	mov    esp,DWORD PTR [ecx]
  403eb7:	stos   DWORD PTR es:[edi],eax
  403eb8:	mov    ebx,0x3ad43bc1
  403ebd:	nop
  403ebe:	call   0x989eb2d9
  403ec3:	pop    ds
  403ec4:	cmp    DWORD PTR [ebx+0x0],ecx
	...
  403ef6:	add    BYTE PTR [eax],al
  403ef8:	aas    
  403ef9:	outs   dx,DWORD PTR ds:[esi]
  403efa:	ss push esi
  403efc:	daa    
  403efd:	push   edi
  403efe:	pop    eax
  403eff:	or     bl,dh
  403f01:	push   esi
  403f02:	push   eax
  403f03:	adc    bl,dh
  403f05:	inc    ax
  403f07:	or     al,0xf3
  403f09:	out    dx,al
  403f0a:	stos   BYTE PTR es:[edi],al
  403f0b:	jecxz  0x403f4e
  403f0d:	sub    al,0x34
  403f0f:	nop
  403f10:	or     ecx,DWORD PTR [esi]
  403f12:	iret   
  403f13:	push   esp
  403f15:	sub    ecx,DWORD PTR [eax-0x661b9237]
  403f1b:	sar    ebx,0xd3
  403f1e:	jae    0x403f63
  403f20:	shl    DWORD PTR [ebx+0x5ef35973],0xc5
  403f27:	add    al,0xf3
  403f29:	pop    esi
  403f2a:	fadd   QWORD PTR [ebx+esi*8]
  403f2d:	add    ch,BYTE PTR [esi+0x739ee890]
  403f33:	pop    esi
  403f34:	adc    al,0xf7
  403f36:	mov    esp,0x38dc5fc2
  403f3b:	mov    esi,DWORD PTR [edi-0x621338a4]
  403f41:	sub    cl,dh
  403f43:	push   ebx
  403f44:	dec    eax
  403f45:	pop    ss
  403f46:	add    BYTE PTR [ebp-0x71],0x8b
  403f4a:	pop    ebx
  403f4b:	inc    ecx
  403f4c:	cmp    bl,BYTE PTR [ebp+0x7236ff03]
  403f52:	sbb    al,0x41
  403f54:	arpl   WORD PTR [esi+eiz*1-0x3a],ax
  403f58:	arpl   sp,bx
  403f5a:	cli    
  403f5b:	mov    edi,0x0
	...
  403f8c:	add    BYTE PTR [eax],al
  403f8e:	out    dx,al
  403f8f:	add    al,0xcb
  403f91:	into   
  403f92:	(bad)  
  403f93:	cmc    
  403f94:	sbb    eax,0xea5b6758
  403f99:	pop    ecx
  403f9a:	arpl   ax,cx
  403f9c:	xchg   esp,eax
  403f9d:	sti    
  403f9e:	inc    ebp
  403f9f:	push   ebx
  403fa0:	add    eax,0xe9bf57db
  403fa5:	add    ebp,DWORD PTR [eax-0x3b]
  403fa8:	jl     0x403fae
  403faa:	mov    al,ds:0x3bcf74c8
  403faf:	fldcw  WORD PTR [esp+eax*1-0x23e039d]
  403fb6:	ffreep st(2)
  403fb8:	jmp    0x64baa2c0
  403fbd:	rol    DWORD PTR ds:0x8b34c6c9,1
  403fc3:	add    eax,ebp
  403fc5:	add    esp,DWORD PTR [ebx-0x23]
  403fc8:	xchg   ebx,eax
  403fc9:	enter  0x563,0xe2
  403fcd:	ret    
  403fce:	push   esp
  403fcf:	adc    DWORD PTR [ebp+0x4],0x7dc0563
  403fd6:	bound  eax,QWORD PTR ds:0xa6e5fce9
  403fdc:	jmp    0xe99ba2e4
  403fe1:	jle    0x403fc9
  403fe3:	aam    0x7f
  403fe5:	int    0xb4
  403fe7:	xor    eax,0x5a78d81
  403fec:	jmp    0x68151e6f
  403ff1:	int    0x0
	...
  404023:	add    BYTE PTR [ebp+esi*1-0x376abbaf],bl
  40402a:	push   esi
  40402b:	stc    
  40402c:	int3   
  40402d:	push   edx
  40402e:	in     eax,dx
  40402f:	pop    ebx
  404030:	pushf  
  404031:	sbb    eax,0x82ee03a8
  404036:	cmp    cl,dh
  404038:	je     0x404002
  40403a:	add    BYTE PTR [ecx+0x2ef6ae88],bl
  404040:	xchg   esi,eax
  404041:	enter  0xf175,0x90
  404045:	frstor [esi+edx*1]
  404048:	es enter 0xe6eb,0x1f
  40404d:	push   edx
  40404e:	or     BYTE PTR [esp+ebx*8-0x2d],bl
  404052:	inc    BYTE PTR [esi]
  404054:	cs xor eax,0xc80d3ee8
  40405a:	jmp    DWORD PTR [eax-0x1c]
  40405d:	fdivr  st,st(6)
  40405f:	out    dx,al
  404060:	pop    ss
  404061:	pop    ebx
  404062:	add    BYTE PTR [ebx+0x67],dl
  404065:	pop    ebx
  404066:	add    dl,BYTE PTR [ebx+0x5f]
  404069:	pop    ebx
  40406a:	add    eax,DWORD PTR [ecx+0x67]
  40406d:	add    eax,0x9217a900
  404072:	in     al,dx
  404073:	(bad)  
  404074:	das    
  404075:	enter  0xcde8,0x23
  404079:	add    eax,0xcda56000
  40407e:	inc    eax
  40407f:	xor    eax,0xf975c6f7
  404084:	scas   eax,DWORD PTR es:[edi]
  404085:	push   ecx
  404086:	or     al,0x9e
	...
  4040b8:	add    BYTE PTR [eax],al
  4040ba:	sub    eax,0xaec7e8cd
  4040bf:	(bad)  
  4040c0:	jmp    DWORD PTR [edx-0x8]
  4040c3:	(bad)  
  4040c4:	jne    0x404047
  4040c6:	cwde   
  4040c7:	stos   BYTE PTR es:[edi],al
  4040c8:	ret    
  4040c9:	jmp    0xfd1b3d2e
  4040ce:	stos   DWORD PTR es:[edi],eax
  4040cf:	(bad)  
  4040d0:	mov    ch,0x7d
  4040d2:	xchg   esi,eax
  4040d3:	(bad)  
  4040d4:	call   DWORD PTR [ecx+0x6d]
  4040d7:	rol    DWORD PTR [eax],0xe9
  4040da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040db:	xchg   ecx,eax
  4040dc:	in     al,dx
  4040dd:	push   edi
  4040de:	lahf   
  4040df:	(bad)  
  4040e0:	call   0x7f306
  4040e5:	add    cl,dh
  4040e7:	les    ebx,FWORD PTR [ebx-0x37]
  4040ea:	dec    eax
  4040eb:	enter  0x54ff,0x1
  4040ef:	test   al,0x81
  4040f1:	les    esp,FWORD PTR [esi]
  4040f3:	mov    edx,0xba19ffff
  4040f8:	jne    0x404106
  4040fa:	jne    0x40412b
  4040fc:	or     BYTE PTR [eax-0x5],ch
  4040ff:	jmp    0x404141
  404101:	add    BYTE PTR [ebp-0x11],dl
  404104:	push   ebp
  404105:	sub    DWORD PTR [ebx],ecx
  404107:	add    ebp,eax
  404109:	mov    ecx,0xbffbb2f
  40410e:	jp     0x4040d9
  404110:	test   dl,bl
  404112:	cmp    al,BYTE PTR [ebx]
  404114:	add    BYTE PTR [ebx],ch
  404116:	and    DWORD PTR [ebp-0x7b],ecx
  404119:	out    dx,eax
  40411a:	xor    al,0xbb
  40411c:	call   DWORD PTR [eax+0x0]
	...
  40414f:	add    BYTE PTR [edx-0x5fffefb],ah
  404155:	stos   BYTE PTR es:[edi],al
  404156:	in     al,0xc3
  404158:	or     al,BYTE PTR [ebx]
  40415a:	or     eax,eax
  40415c:	add    eax,0xfa00bd47
  404161:	add    bh,BYTE PTR ds:0x2fb04
  404167:	cmovge ebp,DWORD PTR [edi+0x0]
  40416b:	add    dl,cl
  40416d:	dec    ebp
  40416e:	inc    ebp
  40416f:	cld    
  404170:	mov    ch,BYTE PTR [ecx-0x452a1646]
  404176:	lea    eax,[ebp-0x442b]
  40417c:	pop    edx
  40417d:	test   eax,0xba35fd4f
  404182:	or     eax,eax
  404184:	scas   eax,DWORD PTR es:[edi]
  404185:	fisub  WORD PTR [edi-0x39]
  404188:	jb     0x4041ca
  40418a:	add    BYTE PTR [ebp-0x15601],cl
  404190:	arpl   WORD PTR [edi],bp
  404192:	xor    al,0xe8
  404194:	jnp    0x4041c7
  404196:	retf   
  404197:	(bad)  
  404198:	jl     0x404123
  40419a:	sti    
  40419b:	dec    edi
  40419c:	mov    ecx,ebx
  40419e:	sar    edi,1
  4041a0:	ins    BYTE PTR es:[edi],dx
  4041a1:	inc    ebx
  4041a2:	sti    
  4041a3:	(bad)  
  4041a4:	out    dx,al
  4041a5:	jecxz  0x40421f
  4041a7:	test   DWORD PTR [esi+ebx*1-0x35],ecx
  4041ab:	push   DWORD PTR [ebx+0x4cf5b9f4]
  4041b1:	out    dx,eax
  4041b2:	xor    edi,edi
	...
  4041e4:	add    BYTE PTR [eax],al
  4041e6:	into   
  4041e7:	clc    
  4041e8:	xor    ebp,eax
  4041ea:	(bad)
  4041ed:	jmp    FWORD PTR [eax+0x1c]
  4041f0:	push   eax
  4041f1:	push   ebx
  4041f2:	sub    al,0x49
  4041f4:	(bad)  
  4041f5:	call   0xb46fe
  4041fa:	jmp    0x3e4:0x9683cc18
  404201:	je     0x4041a4
  404203:	popa   
  404204:	inc    eax
  404205:	hlt    
  404206:	mov    bl,0xb7
  404208:	push   eax
  404209:	cld    
  40420a:	or     ebp,esi
  40420c:	mov    edi,0xc3616300
  404211:	js     0x404244
  404213:	(bad)  
  404214:	push   eax
  404215:	hlt    
  404216:	sti    
  404217:	fld    st(6)
  404219:	add    BYTE PTR [ebx-0x2d],ah
  40421c:	ret    
  40421d:	je     0x40429c
  40421f:	or     al,0xcb
  404221:	jne    0x4041ee
  404223:	add    DWORD PTR ds:0x7e76c4f2,0xffffffd8
  40422a:	sbb    edi,DWORD PTR [edi+0x50]
  40422d:	clc    
  40422e:	adc    ah,ch
  404230:	fld    TBYTE PTR [ecx+esi*4]
  404233:	dec    esi
  404234:	retf   0x2eff
  404237:	push   eax
  404238:	(bad)  
  40423a:	mov    eax,ds:0xe803e904
  40423f:	aas    
  404240:	in     eax,dx
  404241:	retf   0xcd16
  404244:	add    di,WORD PTR [ebx-0x45]
  404248:	pop    eax
  404249:	retf   0x0
	...
  40427c:	jl     0x404243
  40427e:	mov    esp,0x50168bc7
  404283:	retf   0x796c
  404286:	sub    ch,BYTE PTR [esi]
  404288:	call   0x1590:0xb603e1c2
  40428f:	xor    ch,al
  404291:	inc    edx
  404292:	icebp  
  404293:	fidiv  WORD PTR [edx+0x5c]
  404296:	add    al,BYTE PTR [ecx]
  404298:	(bad)  [eax+ebp*8+0x7b]
  40429c:	fs dec esp
  40429e:	imul   ecx,DWORD PTR [edx],0x29f43a63
  4042a4:	pushf  
  4042a5:	dec    esp
  4042a6:	imul   ecx,DWORD PTR [edx],0x83033983
  4042ac:	pop    esp
  4042ad:	adc    bl,BYTE PTR [ebp-0x21]
  4042b0:	jecxz  0x4042b6
  4042b2:	repz dec edi
  4042b4:	add    eax,DWORD PTR [esi-0x1f6f04ea]
  4042ba:	bound  eax,QWORD PTR [edi+0x6b]
  4042bd:	les    edi,FWORD PTR [esp+edi*8]
  4042c0:	cld    
  4042c1:	mov    ch,BYTE PTR [ebx-0x4e779cfc]
  4042c7:	add    al,0x6d
  4042c9:	in     al,dx
  4042ca:	push   0xc9c49b48
  4042cf:	dec    edi
  4042d0:	outs   dx,BYTE PTR ds:[esi]
  4042d1:	test   DWORD PTR ds:0x1d12cc0c,ebx
  4042d7:	cli    
  4042d8:	inc    esp
  4042d9:	inc    ecx
  4042da:	ror    eax,1
  4042dc:	imul   edi,DWORD PTR [ecx],0x83ee
	...
  404312:	aaa    
  404313:	std    
  404314:	jge    0x404311
  404316:	aaa    
  404317:	or     al,0x0
  404319:	scas   eax,DWORD PTR es:[edi]
  40431a:	and    edi,ebp
  40431c:	(bad)  
  40431d:	jmp    0xec2b4ae1
  404322:	mov    bh,0xd1
  404324:	pop    edi
  404325:	xor    BYTE PTR [ebp+0x7bc0009],ah
  40432b:	mov    cl,0x83
  40432d:	and    eax,0x4835883
  404332:	xchg   ebx,eax
  404333:	repz inc eax
  404335:	jmp    0x6a527c9a
  40433a:	pop    esp
  40433b:	mov    ebp,0x560a82e
  404340:	je     0x404332
  404342:	fild   WORD PTR [ecx]
  404344:	loopne 0x404315
  404346:	mov    eax,ds:0x639c0005
  40434b:	lock mov edi,0x8c6f9b2
  404351:	jmp    0xa50823ad
  404356:	sbb    al,0x5
  404358:	add    cl,ch
  40435a:	pusha  
  40435b:	xchg   edx,eax
  40435c:	inc    ebp
  40435d:	icebp  
  40435e:	push   eax
  40435f:	les    esi,FWORD PTR [ebp-0xf]
  404362:	mov    dh,0x5
  404364:	push   esp
  404366:	sbb    al,0xf3
  404368:	inc    eax
  404369:	jmp    0x32b4c775
  40436e:	pop    ds
  40436f:	cmp    eax,edx
  404371:	jmp    0x6d10d3d6
	...
  4043a6:	add    BYTE PTR [eax],al
  4043a8:	sub    eax,0x3f4350b9
  4043ad:	push   edi
  4043ae:	call   esp
  4043b0:	shl    dl,0x40
  4043b3:	jmp    0xd0b4c78f
  4043b8:	mov    ds:0x60e8e449,eax
  4043bd:	add    eax,0xbd2d8e00
  4043c2:	pop    DWORD PTR [eax]
  4043c4:	xchg   ecx,esp
  4043c6:	push   DWORD PTR [ebp+0x2e]
  4043c9:	cmp    eax,0x4b39ec45
  4043ce:	or     al,0x0
  4043d0:	xchg   esi,eax
  4043d1:	mov    esi,0xa3a45c6
  4043d6:	add    BYTE PTR [eax],al
  4043d8:	jp     0x4043ba
  4043da:	pop    es
  4043db:	(bad)  
  4043dc:	mov    bh,0xd7
  4043de:	add    BYTE PTR [eax],al
  4043e0:	mov    al,BYTE PTR [edi]
  4043e2:	push   0x0
  4043e4:	nop
  4043e5:	pop    es
  4043e6:	push   0x10
  4043e8:	inc    DWORD PTR [edx]
  4043ea:	in     al,0x50
  4043ec:	mov    al,ds:0x9675ff07
  4043f1:	int    0x15
  4043f3:	clc    
  4043f4:	sub    al,0x48
  4043f6:	add    BYTE PTR [ebx],cl
  4043f8:	jp     0x40444c
  4043fa:	add    DWORD PTR [ebx-0x47],eax
  4043fd:	dec    ebx
  4043fe:	hlt    
  4043ff:	add    dh,dl
  404401:	mov    esi,0xe03675fe
  404406:	call   0xc3:0x8b073ac1
	...
  40443d:	add    cl,dl
  40443f:	jg     0x404403
  404441:	or     BYTE PTR [edx],cl
  404443:	hlt    
  404444:	mov    ch,ah
  404446:	std    
  404447:	push   esp
  404448:	or     al,ch
  40444a:	xchg   esi,eax
  40444b:	enter  0x0,0x3a
  40444f:	stc    
  404450:	out    0xa0,eax
  404452:	sbb    cl,bl
  404454:	call   DWORD PTR [eax+0x1d]
  404457:	push   ebp
  404458:	or     BYTE PTR [eax+0x12],dl
  40445b:	imul   eax,ecx,0xc8eefa00
  404461:	ret    0x6c6
  404464:	push   ebp
  404465:	mov    ebp,esi
  404467:	xchg   ah,al
  404469:	cld    
  40446a:	mov    DWORD PTR [esi-0x539cf783],eax
  404470:	push   eax
  404471:	pop    es
  404472:	mov    BYTE PTR [ebx+ebp*1-0x37],ch
  404476:	mov    eax,ds:0x882b03b0
  40447b:	push   ss
  40447c:	add    al,0x6a
  40447e:	arpl   WORD PTR [esi],ax
  404480:	add    al,0x6a
  404482:	arpl   WORD PTR [esi],ax
  404484:	(bad)  
  404485:	dec    DWORD PTR [esi]
  404487:	mov    ah,0x59
  404489:	add    cl,bh
  40448b:	stos   DWORD PTR es:[edi],eax
  40448c:	fcmovnb st,st(4)
  40448e:	mov    ds:0xa30b03ac,al
  404493:	fcom   DWORD PTR [edx]
  404495:	mov    DWORD PTR [esi],ebx
  404497:	dec    eax
  404498:	(bad)  
  404499:	jne    0x40450a
  40449b:	push   esp
  40449c:	cs lock fs sti 
  4044a0:	cli    
  4044a1:	mov    edi,0x0
	...
  4044d2:	add    BYTE PTR [eax],al
  4044d4:	xlat   BYTE PTR ds:[ebx]
  4044d5:	or     BYTE PTR [ebx-0x28],bh
  4044d8:	leave  
  4044d9:	lods   al,BYTE PTR ds:[esi]
  4044da:	pop    ecx
  4044db:	add    BYTE PTR [ecx+ebx*4-0x39],cl
  4044df:	push   ebx
  4044e0:	mov    ecx,0x6b75c71b
  4044e5:	xchg   BYTE PTR [ebx],al
  4044e7:	push   0x63
  4044e9:	adc    al,0x6d
  4044eb:	shl    DWORD PTR [ebx-0x54],0xfa
  4044ef:	mov    edi,0xe832a4ae
  4044f4:	jp     0x4044b2
  4044f6:	(bad)  
  4044f7:	dec    DWORD PTR [eax-0x39]
  4044fa:	jp     0x4044bf
  4044fc:	test   al,0x75
  4044fe:	rol    DWORD PTR [ebx+eiz*2],0x1
  404502:	jnp    0x4044f0
  404504:	loopne 0x40456d
  404506:	xlat   BYTE PTR ds:[ebx]
  404507:	push   eax
  404508:	nop
  404509:	sbb    eax,0x37955732
  40450e:	inc    eax
  40450f:	or     al,0xd6
  404511:	and    eax,DWORD PTR [ebx+0x78ac6300]
  404517:	adc    al,0x9e
  404519:	add    al,0xe9
  40451b:	add    esp,DWORD PTR [ebx+0x5]
  40451e:	jb     0x4044cb
  404520:	fmul   st,st(4)
  404522:	test   al,0xdb
  404524:	mov    WORD PTR gs:[eax+ebx*8],fs
  404528:	call   0xaa43366c
  40452d:	retf   0x83e6
  404530:	loopne 0x4044d7
  404532:	mov    dh,0x1a
  404534:	cwde   
  404535:	test   DWORD PTR [edx+0xb],esi
	...
  404568:	add    BYTE PTR [eax],al
  40456a:	adc    DWORD PTR [ebx],edx
  40456c:	jmp    0x6303:0xe944cbca
  404573:	out    dx,al
  404574:	sub    DWORD PTR [edx],eax
  404576:	jnp    0x404539
  404578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404579:	xlat   BYTE PTR ds:[ebx]
  40457a:	jmp    0x26b4:0xf6790159
  404581:	std    
  404582:	arpl   si,sp
  404584:	stos   DWORD PTR es:[edi],eax
  404585:	pop    esi
  404586:	and    al,0x48
  404588:	in     eax,0x7c
  40458a:	or     bl,dl
  40458c:	push   ss
  40458d:	mov    esi,0xa71f0da5
  404592:	or     DWORD PTR [esi+0x376f3d2e],ebx
  404598:	mov    ch,0x11
  40459a:	push   ebx
  40459b:	sar    BYTE PTR [edi+edx*8+0x2c],0x3b
  4045a0:	icebp  
  4045a1:	js     0x404541
  4045a3:	mov    ch,0x99
  4045a5:	(bad)  [esi+0x5]
  4045a8:	jmp    0xedbf5cb0
  4045ad:	add    esp,DWORD PTR [ebx+0x5]
  4045b0:	jb     0x4045f9
  4045b2:	jae    0x404568
  4045b4:	mov    WORD PTR [esi],fs
  4045b6:	pushf  
  4045b7:	pop    ebx
  4045b8:	xor    BYTE PTR [ecx],ch
  4045ba:	fwait
  4045bb:	into   
  4045bc:	stos   DWORD PTR es:[edi],eax
  4045bd:	clc    
  4045be:	in     al,dx
  4045bf:	pop    ecx
  4045c0:	jb     0x40459a
  4045c2:	loopne 0x40458d
  4045c4:	add    BYTE PTR [ebp+0x1a50588d],dh
  4045ca:	nop
  4045cb:	push   ebx
  4045cc:	mov    ebx,DWORD PTR [eax+eax*1]
	...
  4045ff:	add    bl,cl
  404601:	mov    edi,DWORD PTR [ebp-0xf]
  404604:	dec    ebx
  404605:	dec    edx
  404606:	adc    BYTE PTR [eax+0x7c],ah
  404609:	ror    DWORD PTR [ebx+0x4603be6],0x72
  404610:	jbe    0x40461f
  404612:	mov    edx,DWORD PTR [esi]
  404614:	stos   DWORD PTR es:[edi],eax
  404615:	mov    edi,ecx
  404617:	mov    edx,0xbafae4aa
  40461c:	stos   BYTE PTR es:[edi],al
  40461d:	xchg   edx,eax
  40461e:	test   dh,ch
  404620:	sbb    BYTE PTR [ecx+0x6a],ch
  404623:	bound  eax,QWORD PTR ss:[edi]
  404626:	shr    DWORD PTR [ecx],0x7e
  404629:	add    eax,ebx
  40462b:	bound  ebp,QWORD PTR [edx-0x60f5070c]
  404631:	hlt    
  404632:	clc    
  404633:	ins    BYTE PTR es:[edi],dx
  404634:	repz pop ss
  404636:	push   esi
  404637:	jle    0x404657
  404639:	lods   eax,DWORD PTR ds:[esi]
  40463a:	add    edx,DWORD PTR [edi-0xa3d3aac]
  404640:	arpl   bp,dx
  404642:	mov    esp,DWORD PTR [ecx]
  404644:	jb     0x404602
  404646:	and    edx,DWORD PTR [ebx]
  404648:	push   edx
  404649:	mov    esp,0xdb2e5d8d
  40464e:	jo     0x404619
  404650:	dec    esp
  404651:	add    al,0x4e
  404653:	icebp  
  404654:	and    esi,eax
  404656:	adc    edx,ebp
  404658:	fimul  DWORD PTR [ebx-0x1bd74506]
  40465e:	clc    
  40465f:	sbb    bl,BYTE PTR [edi]
  404661:	xchg   edx,eax
  404662:	pushf  
  404663:	inc    BYTE PTR [eax]
	...
  404695:	add    BYTE PTR [esi],ch
  404697:	iret   
  404698:	mov    ebp,0xc5f63a8
  40469d:	test   al,0x23
  40469f:	pop    ss
  4046a0:	add    eax,DWORD PTR [eax]
  4046a2:	ret    
  4046a3:	cmp    al,0xf9
  4046a5:	xor    esp,DWORD PTR [eax]
  4046a7:	in     eax,0xfa
  4046a9:	xor    edx,DWORD PTR [eax]
  4046ab:	aaa    
  4046ac:	test   BYTE PTR [edi],al
  4046ae:	push   ebp
  4046af:	mov    ecx,0x1b9f57b
  4046b4:	adc    cl,al
  4046b6:	cli    
  4046b7:	rol    BYTE PTR [edx],0xc3
  4046ba:	inc    ecx
  4046bb:	int    0x33
  4046bd:	stc    
  4046be:	test   eax,0x37f933cb
  4046c3:	xor    BYTE PTR [edi],dl
  4046c5:	sub    bh,ah
  4046c7:	inc    eax
  4046c8:	inc    edi
  4046c9:	add    edi,DWORD PTR [ebp+esi*4-0x40]
  4046cd:	ret    0x4b6
  4046d0:	ror    BYTE PTR [ebx+0x23fb1502],1
  4046d6:	add    BYTE PTR ds:0xb9068dfb,dl
  4046dc:	adc    al,BYTE PTR [esi+0x5a]
  4046df:	mov    eax,ds:0xc2824e03
  4046e4:	rcl    DWORD PTR [ecx],0x79
  4046e7:	jge    0x404674
  4046e9:	cli    
  4046ea:	pop    ecx
  4046eb:	retf   
  4046ec:	and    edi,ecx
  4046ee:	pop    ecx
  4046ef:	retf   
  4046f0:	lea    ebx,[ebp+eiz*2+0x67469502]
  4046f7:	add    eax,0x1c5e
	...
  40472c:	mov    eax,ebp
  40472e:	push   ss
  40472f:	add    esi,DWORD PTR [ebx+0x3d]
  404732:	stc    
  404733:	xor    esp,DWORD PTR [eax-0x1b]
  404736:	cli    
  404737:	xor    esp,DWORD PTR [eax+0x37]
  40473a:	test   BYTE PTR [edi],al
  40473c:	jb     0x404768
  40473e:	sub    BYTE PTR [ecx+0x9],0x1
  404742:	and    cl,al
  404744:	mov    edx,0x91c3030a
  404749:	jle    0x40477e
  40474b:	stc    
  40474c:	arpl   WORD PTR [ebx],cx
  40474e:	mov    esp,0x9861fa33
  404753:	pop    ss
  404754:	mov    esp,0x608b487f
  404759:	push   ss
  40475a:	call   0x6e8e91f
  40475f:	shr    al,1
  404761:	je     0x40475a
  404763:	cli    
  404764:	and    BYTE PTR [edx-0x9],0xfa
  404768:	(bad)  
  404769:	xor    BYTE PTR [ebx],dl
  40476b:	mov    cl,0x18
  40476d:	xchg   edi,eax
  40476e:	ret    
  40476f:	add    esp,DWORD PTR ds:0x52c1c4c4
  404775:	stos   DWORD PTR es:[edi],eax
  404776:	int    0x8b
  404778:	test   eax,0x9a23bb7b
  40477d:	jnp    0x40473a
  40477f:	(bad)  
  404780:	test   edi,0x352fd781
  404786:	pop    es
  404787:	pop    esi
  404788:	aaa    
  404789:	in     eax,dx
  40478a:	(bad)  
  40478b:	push   ss
  40478c:	pusha  
  40478d:	cmc    
  40478e:	mov    ?,ecx
	...
  4047c0:	add    BYTE PTR [eax],al
  4047c2:	xor    BYTE PTR [edx-0x19],dl
  4047c5:	cli    
  4047c6:	xor    BYTE PTR [edx-0x6f],al
  4047c9:	test   BYTE PTR [edx+ecx*1+0x15],bl
  4047cd:	nop
  4047ce:	enter  0x49ab,0x30
  4047d2:	and    ch,ah
  4047d4:	or     al,BYTE PTR [ebx]
  4047d6:	and    BYTE PTR [ebx],dh
  4047d8:	mov    edi,0xbbcb4a33
  4047dd:	xor    edi,DWORD PTR [edx]
  4047df:	sub    DWORD PTR [eax-0x64632fe9],ebx
  4047e5:	std    
  4047e6:	pusha  
  4047e7:	sahf   
  4047e8:	test   eax,0xd006b021
  4047ee:	call   0x413b3ea6
  4047f3:	mov    dl,0xf6
  4047f5:	cli    
  4047f6:	fiadd  WORD PTR [esi*2+0x6041d512]
  4047fd:	push   0x60
  4047ff:	dec    edi
  404800:	adc    ebp,eax
  404802:	and    dl,BYTE PTR [edx+ebp*8]
  404805:	int    0xd8
  404807:	mov    edx,0xbc40bbfa
  40480c:	cli    
  40480d:	mov    ebx,0xe4d6a0ee
  404812:	pop    esp
  404813:	jns    0x404835
  404815:	pop    es
  404816:	sub    eax,0x6dc6a801
  40481b:	add    al,al
  40481d:	mov    ?,WORD PTR [edx-0x45196e0f]
  404823:	icebp  
  404824:	(bad)  
  404825:	nop
	...
  404856:	add    BYTE PTR [eax],al
  404858:	out    0x5,eax
  40485a:	or     ebp,ecx
  40485c:	inc    esi
  40485d:	mov    bh,0xea
  40485f:	dec    ecx
  404860:	les    ebp,FWORD PTR [bx+di+0x6008]
  404865:	ret    0xbe62
  404868:	push   eax
  404869:	mov    ebp,0xba50bd0a
  40486e:	ins    BYTE PTR es:[edi],dx
  40486f:	xchg   edi,eax
  404870:	push   esp
  404871:	inc    ebp
  404872:	call   0xa21b:0xb701a343
  404879:	ret    0x6f0
  40487c:	xchg   ebx,eax
  40487d:	mov    DWORD PTR [ecx-0xa],eax
  404880:	pop    edx
  404881:	jmp    0x8b8d3eb7
  404886:	pop    ebp
  404887:	adc    dh,BYTE PTR [edx+0x61e9c75f]
  40488d:	dec    ebx
  40488e:	int    0xc4
  404890:	and    cl,BYTE PTR [edx+ebp*8]
  404893:	int    0xe8
  404895:	mov    edi,0xbd80bcda
  40489a:	mov    edx,0xde99d6bd
  40489f:	ins    DWORD PTR es:[edi],dx
  4048a0:	and    al,0x74
  4048a2:	add    BYTE PTR [eax],al
  4048a4:	pop    ebp
  4048a5:	sbb    eax,ecx
  4048a7:	sub    dh,BYTE PTR [eax+ecx*1-0x27]
  4048ab:	jb     0x404875
  4048ad:	clc    
  4048ae:	cli    
  4048af:	or     bh,BYTE PTR [ebp-0x149b0708]
  4048b5:	add    al,0x5d
  4048b7:	stc    
  4048b8:	repz rol BYTE PTR [ebx],cl
  4048bb:	das    
	...
  4048ec:	add    BYTE PTR [eax],al
  4048ee:	dec    ebx
  4048ef:	mov    al,0xe4
  4048f2:	addr16 enter 0xb28b,0xce
  4048f7:	mov    ah,0x23
  4048f9:	mov    al,0xd6
  4048fb:	mov    edi,0x586a7d8d
  404900:	adc    al,0x25
  404902:	or     BYTE PTR gs:[esi-0x3f],dl
  404906:	mov    eax,ds:0x90ea09c7
  40490b:	nop
  40490c:	clc    
  40490d:	mov    edx,0xbafae8e6
  404912:	fmul   DWORD PTR [edx-0x5c1e1974]
  404918:	mov    eax,ds:0x3c4b6691
  40491d:	sub    BYTE PTR [eax-0x11ccfcf5],ah
  404923:	mov    edi,0xb47e5033
  404928:	xor    edx,DWORD PTR [ebx-0x24]
  40492b:	cdq    
  40492c:	pop    ds
  40492d:	xor    DWORD PTR [esi-0x3d151828],esp
  404933:	adc    eax,0x87b2ac1
  404938:	fldenv [edx+0x8]
  40493b:	clc    
  40493c:	cli    
  40493d:	retf   0xf806
  404940:	clc    
  404941:	ins    BYTE PTR es:[edi],dx
  404942:	jmp    0x404947
  404944:	out    0x24,al
  404946:	add    dh,ah
  404948:	add    ah,BYTE PTR [edi+0xc0c544]
  40494e:	aaa    
  40494f:	add    ebx,eax
  404951:	mov    eax,DWORD PTR [eax]
	...
  404983:	add    BYTE PTR [ecx-0x4e],ah
  404986:	mul    DWORD PTR [ebx]
  404988:	adc    esi,DWORD PTR [ecx+0x1eb68dfa]
  40498e:	(bad)  
  40498f:	pop    es
  404990:	gs ret 0x5603
  404994:	inc    edx
  404995:	enter  0x9c2,0x9
  404999:	fmul   DWORD PTR [ebx+0x237b49f8]
  40499f:	sti    
  4049a0:	jmp    0xcdccd724
  4049a5:	mov    WORD PTR ds:0x4e0116d5,cs
  4049ab:	or     al,0xfb
  4049ad:	(bad)  
  4049ae:	push   cs
  4049af:	add    edx,DWORD PTR [eax]
  4049b1:	mov    edx,edi
  4049b3:	xor    eax,DWORD PTR [ebx]
  4049b5:	mov    eax,ds:0x8ad033f7
  4049ba:	pushf  
  4049bb:	pop    ds
  4049bc:	das    
  4049bd:	adc    al,0x5a
  4049bf:	inc    ebp
  4049c0:	mov    ecx,0xc9c12025
  4049c5:	adc    eax,DWORD PTR [ebx]
  4049c7:	fld    DWORD PTR [ecx]
  4049c9:	jg     0x4049fe
  4049cb:	sti    
  4049cc:	cdq    
  4049cd:	jns    0x404a02
  4049cf:	stc    
  4049d0:	je     0x61534edd
  4049d6:	test   eax,0xc0b3c403
  4049db:	rol    BYTE PTR [edi+0x218bc300],0xb1
  4049e2:	mul    DWORD PTR [ebx]
  4049e4:	mov    ds:0x8dfab1,eax
	...
  404a19:	add    BYTE PTR [esi-0x725c07e3],dh
  404a1f:	jp     0x404a24
  404a21:	push   esi
  404a22:	push   edx
  404a23:	enter  0x9c2,0x49
  404a27:	xlat   BYTE PTR ds:[ebx]
  404a28:	mov    edi,eax
  404a2a:	arpl   di,bx
  404a2c:	mov    ebp,0xbbe02823
  404a31:	(bad)  
  404a32:	xlat   BYTE PTR ds:[ebx]
  404a33:	mov    bl,0xda
  404a35:	add    cl,BYTE PTR [ebx+eax*4-0x1288b1fc]
  404a3c:	ror    DWORD PTR [esi],0x60
  404a3f:	out    0x8b,al
  404a41:	cli    
  404a42:	push   eax
  404a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a44:	jecxz  0x404a3d
  404a46:	xor    BYTE PTR [esi+0x26549c91],ah
  404a4c:	push   eax
  404a4d:	sub    bl,dh
  404a4f:	scas   eax,DWORD PTR es:[edi]
  404a50:	pop    ebp
  404a51:	xor    BYTE PTR [edx],ah
  404a53:	jo     0x404a6d
  404a55:	add    edi,DWORD PTR [edx-0x26cc42c9]
  404a5b:	mov    edi,0xa3e78dba
  404a60:	inc    ecx
  404a61:	cmp    ecx,ecx
  404a63:	arpl   WORD PTR [ebx],ax
  404a65:	inc    esi
  404a66:	push   edi
  404a67:	ins    DWORD PTR es:[edi],dx
  404a68:	les    eax,FWORD PTR [eax+eiz*2]
  404a6b:	outs   dx,DWORD PTR ds:[esi]
  404a6c:	mov    edi,ebx
  404a6e:	jo     0x404a05
  404a70:	repz not esi
  404a73:	pop    eax
  404a74:	pop    ss
  404a75:	adc    DWORD PTR [ebp+0x2d0386bd],0xc2c4cc
	...
  404aaf:	add    BYTE PTR [eax-0x51],bl
  404ab2:	ror    DWORD PTR [ebx+0x33bb1f8b],cl
  404ab8:	jns    0x404ae3
  404aba:	nop
  404abb:	cmovno ecx,ebp
  404abe:	mov    al,ds:0xef9a606d
  404ac3:	shl    BYTE PTR [edx-0x1735fd24],0x45
  404aca:	repz not DWORD PTR [eax+0x6c9c90f5]
  404ad1:	fdivr  st,st(3)
  404ad3:	in     al,0x46
  404ad5:	add    eax,0xc47b5dea
  404ada:	sub    dl,BYTE PTR [edi]
  404adc:	pusha  
  404add:	fsub   QWORD PTR [edx-0x43]
  404ae0:	jo     0x404aa1
  404ae2:	fidivr DWORD PTR [edx+0x47ee80d6]
  404ae8:	or     DWORD PTR [ebx+0x45],edi
  404aeb:	add    ebx,DWORD PTR [ebp+0x67c42801]
  404af1:	push   es
  404af2:	sub    cl,BYTE PTR [ebx-0xd2009f8]
  404af8:	hlt    
  404af9:	xchg   DWORD PTR [ebp+0x16],esi
  404afc:	retf   0xb7c9
  404aff:	dec    edx
  404b00:	pusha  
  404b01:	push   ebx
  404b02:	stc    
  404b03:	les    esp,FWORD PTR [ecx]
  404b05:	push   cs
  404b06:	jmp    0x90ba:0xfabce8d3
  404b0d:	mov    edi,0x255c8f64
  404b12:	and    bh,BYTE PTR [ebx+0x0]
	...
  404b45:	add    ch,cl
  404b47:	add    eax,0xc3a22037
  404b4c:	stc    
  404b4d:	add    ch,BYTE PTR [ecx-0x4b0d6c73]
  404b53:	cmc    
  404b54:	(bad)  
  404b55:	nop
  404b56:	(bad)  
  404b57:	sbb    ecx,edi
  404b59:	jg     0x404b37
  404b5b:	jp     0x404b47
  404b5d:	pop    ebp
  404b5e:	dec    ebx
  404b5f:	les    ebp,FWORD PTR [edx+0x62dc6016]
  404b65:	mov    esp,0xbb1abf50
  404b6a:	out    dx,al
  404b6b:	and    dh,0xc5
  404b6e:	cmc    
  404b6f:	popf   
  404b70:	add    DWORD PTR [ebx],eax
  404b72:	and    eax,0x5fc327f1
  404b77:	push   es
  404b78:	sub    cl,BYTE PTR [edx-0xdc00aa8]
  404b7e:	dec    esp
  404b7f:	mov    eax,DWORD PTR [eax]
  404b81:	pop    ebp
  404b82:	jne    0x404b3f
  404b84:	daa    
  404b85:	mov    dl,bh
  404b87:	add    al,0x16
  404b89:	sub    BYTE PTR [edx],ah
  404b8b:	or     eax,0xbde93903
  404b90:	xor    edx,DWORD PTR [edx]
  404b92:	xor    DWORD PTR [edi-0x7daaa273],edi
  404b98:	xor    BYTE PTR [esi],dl
  404b9a:	xor    al,0x5
  404b9c:	dec    esi
  404b9d:	in     eax,dx
  404b9e:	pop    ds
  404b9f:	(bad)  
  404ba0:	adc    dl,ch
  404ba2:	sbb    cl,BYTE PTR [ebp-0xb374506]
  404ba8:	clc    
  404ba9:	je     0x404bab
	...
  404bdb:	add    bl,al
  404bdd:	sbb    BYTE PTR ds:0x301e8fc,al
  404be3:	aaa    
  404be4:	dec    edi
  404be5:	mov    bl,0xf6
  404be8:	arpl   si,bx
  404bea:	mov    eax,eax
  404bec:	sar    BYTE PTR [esi-0x7e1b3dcd],cl
  404bf2:	pop    es
  404bf3:	lock mov al,0xd1
  404bf6:	fldl2e 
  404bf8:	push   ds
  404bf9:	loope  0x404bbb
  404bfb:	test   eax,0x72c3046b
  404c00:	cli    
  404c01:	hlt    
  404c02:	clc    
  404c03:	(bad)  
  404c05:	mov    dl,BYTE PTR [esi+esi*8-0x70246103]
  404c0c:	bound  ecx,QWORD PTR [edi+0x30]
  404c0f:	test   al,0xa1
  404c11:	or     al,0x3
  404c13:	cdq    
  404c14:	fidivr DWORD PTR [ebp-0x416d8dcd]
  404c1a:	lea    esi,[ebp+0x6e]
  404c1d:	mov    ebp,0x4568b7c
  404c22:	dec    esi
  404c23:	adc    eax,0xea10c6a0
  404c28:	call   0x337c:0x5900fa8c
  404c2f:	stc    
  404c30:	(bad)  
  404c31:	gs pop ds
  404c33:	gs in  al,dx
  404c35:	daa    
  404c36:	les    eax,FWORD PTR [ebx]
  404c38:	aam    0xb
  404c3a:	rol    ebx,0x3d
  404c3d:	add    eax,0xbfd9
	...
  404c72:	push   ebp
  404c73:	jp     0x404c74
  404c75:	dec    DWORD PTR [ecx]
  404c77:	jle    0x404c84
  404c79:	sti    
  404c7a:	or     DWORD PTR [ebx-0x73],edi
  404c7d:	test   BYTE PTR ds:0xe292240,cl
  404c83:	add    eax,0xff3ac106
  404c88:	add    al,bl
  404c8a:	xor    eax,0x5ffff7a
  404c8f:	mov    ch,0xf8
  404c91:	or     eax,DWORD PTR [edx]
  404c93:	mov    ch,0xfa
  404c95:	lea    ebp,[esi+0x11]
  404c98:	xchg   edi,eax
  404c99:	jmp    DWORD PTR [eax+0x46]
  404c9c:	add    edx,DWORD PTR [esi-0x3a]
  404c9f:	ret    0xac2
  404ca2:	leave  
  404ca3:	sar    DWORD PTR [edi-0x86ea01],cl
  404ca9:	xor    edx,DWORD PTR [ecx]
  404cab:	or     eax,0x870233fa
  404cb0:	mov    WORD PTR [edi],cs
  404cb2:	sbb    eax,0xb9ab93a5
  404cb7:	dec    ecx
  404cb8:	cmp    cl,al
  404cba:	sti    
  404cbb:	or     BYTE PTR [ebx],al
  404cbd:	retf   0x7925
  404cc0:	(bad)  
  404cc1:	call   DWORD PTR ds:0x130bf7b5
  404cc7:	mov    ch,0xf9
  404cc9:	lea    edx,[esi]
  404ccb:	sbb    DWORD PTR [ecx],edi
  404ccd:	mov    al,ds:0x5e0377f9
  404cd2:	outs   dx,BYTE PTR ds:[esi]
  404cd3:	ret    0x15c3
	...
  404d06:	add    BYTE PTR [eax],al
  404d08:	arpl   WORD PTR [ebx+0x4664bfda],bp
  404d0e:	mov    esp,0x84290ff
  404d13:	sti    
  404d14:	nop
  404d15:	inc    ebp
  404d16:	mov    es,WORD PTR [esp+eiz*2-0x41a4a615]
  404d1d:	stos   DWORD PTR es:[edi],eax
  404d1e:	inc    ebp
  404d1f:	xor    BYTE PTR [edx],ah
  404d21:	in     eax,dx
  404d22:	add    al,0x3
  404d24:	and    BYTE PTR [eax-0x44],bl
  404d27:	jmp    FWORD PTR [eax+edx*1]
  404d2a:	lock clc 
  404d2c:	pop    eax
  404d2d:	adc    al,0xf0
  404d2f:	cli    
  404d30:	out    dx,al
  404d31:	pop    eax
  404d32:	adc    al,0x92
  404d34:	daa    
  404d35:	test   eax,0xa0b5038c
  404d3a:	ret    0x59c2
  404d3d:	stos   DWORD PTR es:[edi],eax
  404d3e:	sar    DWORD PTR [edi-0x446004],cl
  404d44:	xor    BYTE PTR [ebx-0x2bcf05f1],ah
  404d4a:	mov    DWORD PTR [esp+edx*2-0x23104fb7],ecx
  404d51:	stos   DWORD PTR es:[edi],eax
  404d52:	dec    ecx
  404d53:	sub    BYTE PTR [edx-0x66fcf493],ah
  404d59:	das    
  404d5a:	mov    ebx,0xf767c4ff
  404d5f:	imul   DWORD PTR [eax+0x65]
  404d62:	idiv   ecx
  404d64:	out    0x38,al
  404d66:	sbb    edx,ecx
  404d68:	push   cs
  404d69:	sub    BYTE PTR [ecx+0x3],al
	...
  404d9b:	add    BYTE PTR [eax],al
  404d9d:	add    BYTE PTR ds:0x76c3c4a0,al
  404da3:	stos   DWORD PTR es:[edi],eax
  404da4:	fdivr  QWORD PTR [edi-0x44c86c]
  404daa:	push   eax
  404dab:	xor    cl,BYTE PTR [edi]
  404dad:	sti    
  404dae:	push   eax
  404daf:	xor    eax,0x5648489
  404db4:	mov    dh,0x39
  404db6:	retf   
  404db7:	es jmp 0x6002:0x29c44341
  404dbf:	ret    0xbb8e
  404dc2:	pop    esp
  404dc3:	mov    dh,0x46
  404dc5:	neg    DWORD PTR [ebx+0xa]
  404dc8:	inc    ecx
  404dc9:	test   DWORD PTR [ecx-0x78],0x9f43135d
  404dd0:	std    
  404dd1:	mov    ecx,0xc4e54f60
  404dd6:	and    DWORD PTR [ebx],ecx
  404dd8:	jmp    0x24bb:0x16b5ecd3
  404ddf:	repnz adc DWORD PTR [edi],ecx
  404de2:	sbb    edx,esi
  404de4:	add    BYTE PTR [ecx+0x46d505e7],cl
  404dea:	bound  esp,QWORD PTR [edx-0x16]
  404ded:	dec    ecx
  404dee:	imul   eax,esp,0x28
  404df1:	or     esp,DWORD PTR [eax-0x35]
  404df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404df5:	mov    edx,0xf6deb5f4
  404dfa:	hlt    
  404dfb:	or     eax,edx
  404dfd:	imul   dl
  404dff:	xchg   DWORD PTR [ebp+0x1a],ebp
	...
  404e32:	add    BYTE PTR [eax],al
  404e34:	add    dl,BYTE PTR [ecx+esi*8]
  404e37:	dec    ecx
  404e38:	pusha  
  404e39:	push   edi
  404e3a:	cmc    
  404e3b:	les    esp,FWORD PTR [eax+0x4dcea0f]
  404e41:	mov    dh,0xae
  404e43:	mov    edx,0xea2f1bc
  404e48:	mov    eax,0xe7889ff1
  404e4d:	std    
  404e4e:	push   0x39
  404e50:	adc    BYTE PTR [esi-0x3b8cbe16],ch
  404e56:	test   eax,0x3ec26001
  404e5b:	mov    edx,0x7600b58c
  404e60:	lea    edi,[ebx+ecx*1-0x72458a8f]
  404e67:	jge    0x404eba
  404e69:	lock icebp 
  404e6b:	and    ebp,edx
  404e6d:	add    DWORD PTR [esi+0x5],edx
  404e70:	sahf   
  404e71:	ret    0xea0a
  404e74:	xor    BYTE PTR [ebp-0x1],dh
  404e77:	inc    esi
  404e78:	sbb    DWORD PTR [ebp-0x50a2bdcd],esi
  404e7e:	xor    esi,DWORD PTR [ecx]
  404e80:	fild   DWORD PTR [ecx-0x22e98df1]
  404e86:	sub    ch,dl
  404e88:	stos   BYTE PTR es:[edi],al
  404e89:	std    
  404e8a:	shr    BYTE PTR [eax],0x59
  404e8d:	or     dl,cl
  404e8f:	push   esi
  404e90:	jmp    0x154f4e49
  404e95:	mov    ebp,0xb
	...
  404eca:	or     eax,0x695d8daf
  404ecf:	xchg   esi,eax
  404ed0:	shr    DWORD PTR [edi-0x4b],cl
  404ed3:	or     BYTE PTR [esi-0x3b],bl
  404ed6:	daa    
  404ed7:	leave  
  404ed8:	adc    eax,0x7d8119ea
  404edd:	icebp  
  404ede:	popa   
  404edf:	or     al,0x1
  404ee1:	arpl   WORD PTR ss:[esi],ax
  404ee4:	dec    edi
  404ee5:	loope  0x404f48
  404ee7:	pop    esp
  404ee8:	or     al,0xc6
  404eea:	sbb    al,0xb1
  404eec:	lea    esi,[edi]
  404eee:	daa    
  404eef:	add    al,0x89
  404ef1:	out    0x6,al
  404ef3:	mov    ch,0xff
  404ef5:	adc    ebx,DWORD PTR [eax]
  404ef7:	push   eax
  404ef8:	pop    eax
  404ef9:	inc    esi
  404efa:	sbb    DWORD PTR [esi+0x5a60edc2],edi
  404f00:	mov    eax,DWORD PTR [ebp+0x36f8c9de]
  404f06:	xor    DWORD PTR [eax-0x39],ebx
  404f09:	add    BYTE PTR [edi+0x6d],al
  404f0c:	add    BYTE PTR [eax],al
  404f0e:	jp     0x404f18
  404f10:	push   DWORD PTR [ebp+0x7e]
  404f13:	jge    0x404f5a
  404f15:	clc    
  404f16:	lds    esi,FWORD PTR [edi+ecx*2+0x108cb65]
  404f1d:	and    eax,edi
  404f1f:	in     eax,0xc6
  404f21:	add    eax,0x4113a6
  404f26:	ret    
  404f27:	and    cl,ch
  404f29:	out    dx,eax
  404f2a:	test   DWORD PTR [edi+edx*2+0x65],esi
	...
  404f5d:	add    BYTE PTR [eax],al
  404f5f:	add    bl,bh
  404f61:	pop    es
  404f62:	(bad)  
  404f63:	(bad)  
  404f65:	xchg   ecx,eax
  404f66:	mov    DWORD PTR ds:0x4112ee,0x103243d4
  404f70:	test   DWORD PTR [edi+ebx*2-0xff8049b],esi
  404f77:	loope  0x404fd1
  404f79:	retf   0x1ceb
  404f7c:	xchg   ecx,eax
  404f7d:	hlt    
  404f7e:	pop    es
  404f7f:	add    eax,edi
  404f81:	jnp    0x404fed
  404f83:	inc    eax
  404f84:	loop   0x404f99
  404f86:	gs inc ecx
  404f88:	or     bl,BYTE PTR [eax-0x18]
  404f8b:	arpl   WORD PTR [ebx],dx
  404f8d:	ins    DWORD PTR es:[edi],dx
  404f8e:	inc    DWORD PTR [ebx-0x17bf92b9]
  404f94:	mov    esi,0x49000007
  404f99:	jmp    0x404f92
  404f9b:	inc    eax
  404f9c:	cdq    
  404f9d:	iret   
  404f9e:	mov    ebx,DWORD PTR [ebp-0x5e]
  404fa1:	mov    bl,al
  404fa3:	inc    eax
  404fa4:	inc    ecx
  404fa5:	repz pop es
  404fa7:	add    eax,DWORD PTR [edi+0x6668536d]
  404fad:	adc    al,0x41
  404faf:	add    BYTE PTR [edx+0x61],ch
  404fb2:	cmp    al,0xe9
  404fb4:	arpl   WORD PTR [ebx-0x7dc1fe48],bx
  404fba:	rol    DWORD PTR [ebx+0x4300ff],0xe3
  404fc1:	push   ds
  404fc2:	lods   al,BYTE PTR ds:[esi]
  404fc3:	aaa    
	...
  404ff4:	add    BYTE PTR [eax],al
  404ff6:	or     eax,0x6beb84d7
  404ffb:	mov    edx,0x81c0800d
  405000:	push   ds
  405001:	inc    ecx
  405002:	arpl   WORD PTR [esi+0x456d7844],bx
  405008:	mov    WORD PTR [eax],es
  40500a:	arpl   WORD PTR [esp+edi*2-0x47b3ab38],bx
  405011:	jmp    0x405074
  405013:	js     0x405022
  405015:	add    BYTE PTR [eax],0x59
  405018:	push   ds
  405019:	inc    ecx
  40501a:	arpl   WORD PTR [esp+eax*2+0x3e382d78],bx
  405021:	or     al,0xea
  405023:	mov    ah,0x3
  405025:	add    BYTE PTR [ebx-0x31],ah
  405028:	aad    0xf7
  40502a:	add    dl,ah
  40502c:	retf   
  40502d:	movaps XMMWORD PTR [eax+0x63],xmm0
  405031:	mov    gs:0xe7158a9c,al
  405037:	add    DWORD PTR [edx+0x0],0x3950b
  40503e:	arpl   WORD PTR [ebp+0x54],di
  405041:	mov    gs:0x8f158a9c,al
  405047:	inc    ecx
  405048:	inc    ebp
  405049:	add    al,ch
  40504b:	rcr    DWORD PTR [ebx+0x65],1
  40504e:	and    bl,BYTE PTR [esi+eax*1+0x7765cc8]
  405055:	leave  
  405056:	add    BYTE PTR ds:0x4121,cl
	...
  40508c:	arpl   WORD PTR ds:0x53e5411,sp
  405092:	sub    BYTE PTR [edx+ebx*8],al
  405095:	add    BYTE PTR [ecx+0x21],al
  405098:	and    al,BYTE PTR ds:0x44065848
  40509e:	jmp    0xc65bf2d
  4050a3:	inc    ebp
  4050a4:	arpl   WORD PTR [edx],ax
  4050a6:	mov    cl,0x7
  4050a8:	cdq    
  4050a9:	adc    ax,0x2221
  4050ad:	add    eax,0x28031160
  4050b2:	test   al,0x3
  4050b4:	stc    
  4050b5:	sbb    BYTE PTR [esi+0x31],bl
  4050b8:	push   ebx
  4050b9:	sbb    eax,0x5a220b9
  4050be:	inc    ecx
  4050bf:	xchg   ecx,eax
  4050c0:	dec    ebx
  4050c1:	mov    dl,0x46
  4050c3:	pop    ebx
  4050c4:	lods   eax,DWORD PTR ds:[esi]
  4050c5:	push   edx
  4050c6:	xor    dl,al
  4050c8:	push   edi
  4050c9:	add    eax,0x864f8a9c
  4050ce:	and    eax,0x26acfabc
  4050d3:	mov    bh,0x2c
  4050d5:	jle    0x4050bc
  4050d7:	enter  0x27ff,0xa8
  4050db:	add    ebp,eax
  4050dd:	sbb    BYTE PTR [esp+ebp*2],bl
  4050e0:	jle    0x405126
  4050e2:	jmp    0x33426bed
  4050e7:	lea    ebx,[edi-0x40]
  4050ea:	dec    ebp
  4050eb:	and    DWORD PTR [edx+0x106005],esp
	...
  405121:	add    BYTE PTR [esi],ah
  405123:	pop    ebp
  405124:	dec    esp
  405125:	inc    ebp
  405126:	arpl   WORD PTR [esp+edx*2-0x27],ax
  40512a:	stos   BYTE PTR es:[edi],al
  40512b:	(bad)  
  40512c:	(bad)  
  40512d:	mov    dh,0xdc
  40512f:	jge    0x405116
  405131:	mov    bl,bh
  405133:	sub    ch,BYTE PTR [eax]
  405135:	add    al,0xd8
  405137:	sbb    BYTE PTR [edi+edi*2+0x3d],ch
  40513b:	inc    esp
  40513c:	add    cl,ch
  40513e:	mov    cl,0x5
  405140:	lea    edi,ds:0xda004455
  405146:	pop    esp
  405147:	and    BYTE PTR [edi+eax*1+0x1e],0x5
  40514c:	xor    ebp,DWORD PTR [ebx-0x1a763b49]
  405152:	jmp    0x4051bc
  405154:	data16 sub BYTE PTR [edi+0x44],ah
  405158:	jne    0x4050f1
  40515a:	(bad)  [edi]
  40515c:	push   eax
  40515d:	or     al,0x26
  40515f:	add    eax,0x2824b48b
  405164:	inc    ecx
  405165:	jmp    0xc4984143
  40516a:	pop    ds
  40516b:	add    eax,0x2abb1cff
  405170:	inc    ecx
  405171:	jmp    0x473c9c53
  405176:	push   ebx
  405177:	push   ecx
  405178:	gs test al,0x60
  40517b:	add    BYTE PTR [ebp+0x31],0xbf
  40517f:	mov    eax,ds:0x7ced2eff
  405184:	(bad)  
  405185:	jb     0x405187
	...
  4051b7:	add    ch,ch
  4051b9:	mov    eax,0xe4e6cad2
  4051be:	push   esp
  4051bf:	adc    eax,0xe503c369
  4051c4:	jmp    0x40523f
  4051c6:	gs test al,0x60
  4051c9:	add    al,0x45
  4051cb:	add    DWORD PTR [ebx-0x72],esp
  4051ce:	jns    0x40523b
  4051d0:	call   0xf84a:0xdeed75b0
  4051d7:	jo     0x40520d
  4051d9:	mov    cl,0xc1
  4051db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051dc:	dec    ebp
  4051dd:	jl     0x4051dd
  4051df:	bound  edx,QWORD PTR [edx]
  4051e1:	mov    ebx,0x41cd63e4
  4051e7:	add    BYTE PTR [edi+0x5ecb9bd],cl
  4051ed:	jnp    0x4051ee
  4051ef:	mov    ecx,DWORD PTR [edi+edi*2]
  4051f2:	xlat   BYTE PTR ds:[ebx]
  4051f3:	xor    edi,DWORD PTR [edi+0x6d]
  4051f6:	xor    eax,edx
  4051f8:	mov    ecx,0x5c048cb0
  4051fd:	inc    esp
  4051fe:	add    BYTE PTR [ebx],al
  405200:	dec    edi
  405201:	jno    0x405208
  405203:	mov    eax,ds:0xff6ecce1
  405208:	(bad)  
  405209:	js     0x40519a
  40520b:	inc    ebp
  40520c:	loop   0x40528a
  40520e:	jge    0x40520c
  405210:	retf   
  405211:	outs   dx,DWORD PTR ds:[esi]
  405212:	push   ds
  405213:	mov    eax,DWORD PTR [esi+edi*2]
  405216:	repz sar DWORD PTR [ecx],0xb0
  40521a:	add    bl,al
	...
  40524c:	add    BYTE PTR [eax],al
  40524e:	mov    ebx,0xa6b9cfdf
  405253:	jp     0x405254
  405255:	inc    ecx
  405257:	jb     0x4051e4
  405259:	push   ebp
  40525a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40525b:	inc    BYTE PTR [esp+edi*8+0x59]
  40525f:	ret    0xc623
  405262:	inc    ecx
  405263:	mov    BYTE PTR [ebx],0x4
  405266:	xchg   edi,eax
  405267:	push   ebp
  405268:	inc    cx
  40526a:	cmp    al,BYTE PTR ds:0xd83ff845
  405270:	mov    esp,0x757a851b
  405275:	cld    
  405276:	mov    ch,0xf0
  405278:	test   DWORD PTR [ecx-0x393e8819],0x8bfe7d24
  405282:	stc    
  405283:	ret    0x5c3
  405286:	or     esp,ecx
  405288:	inc    ecx
  405289:	jne    0x40523c
  40528b:	sub    ch,ah
  40528d:	inc    DWORD PTR ds:0x63c68b79
  405293:	and    ecx,esp
  405295:	xor    ebx,DWORD PTR [esi]
  405297:	ret    0xc1f0
  40529a:	pusha  
  40529b:	mov    ds:0xdd3da486,al
  4052a0:	add    eax,DWORD PTR [ebx]
  4052a2:	es jbe 0x4052a3
  4052a5:	aad    0xa2
  4052a7:	cmp    ecx,edx
  4052a9:	push   DWORD PTR [esi]
  4052ab:	push   0xffffff84
  4052ad:	inc    ebp
  4052ae:	stos   DWORD PTR es:[edi],eax
  4052af:	xor    al,0x36
  4052b1:	cld    
	...
  4052e2:	add    BYTE PTR [eax],al
  4052e4:	mov    ds:0x958b155f,al
  4052e9:	and    dh,BYTE PTR [eax+0xa0a0c1]
  4052ef:	fsub   DWORD PTR [edx]
  4052f1:	mov    ecx,0xe5e01d3
  4052f6:	pop    ds
  4052f7:	inc    ecx
  4052f8:	arpl   WORD PTR [ebp+0x5d0653ee],bx
  4052fe:	add    eax,DWORD PTR [ecx]
  405300:	es (bad) 
  405302:	push   ds
  405303:	inc    ecx
  405304:	arpl   WORD PTR [ebx],sp
  405306:	ds cld 
  405308:	bound  ebp,QWORD PTR [ecx-0x635d9aa9]
  40530e:	mov    BYTE PTR [ebp+0x4b],al
  405311:	sahf   
  405312:	(bad)  
  405313:	pop    edi
  405314:	(bad)  
  405315:	pop    ebp
  405316:	add    ecx,ecx
  405318:	and    BYTE PTR [edx-0x6dd31378],bl
  40531e:	or     ebp,eax
  405320:	mov    dl,0x25
  405322:	add    eax,DWORD PTR [eax]
  405324:	loopne 0x40533a
  405326:	mov    ah,0x75
  405328:	cmp    eax,0xfb082dff
  40532d:	xchg   edx,eax
  40532e:	jp     0x405330
  405330:	arpl   WORD PTR [ebx-0xb9b8a3d],si
  405336:	mov    bl,0xff
  405338:	hlt    
  405339:	lahf   
  40533a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40533b:	adc    ebx,eax
  40533d:	add    eax,0xfad30029
  405342:	test   al,0x39
  405344:	fs ins DWORD PTR es:[edi],dx
  405346:	(bad)  
  405347:	mov    bl,0x0
	...
  405379:	add    ah,dl
  40537b:	scas   al,BYTE PTR es:[edi]
  40537c:	ret    0xd808
  40537f:	add    eax,0xc39a0472
  405384:	in     eax,0x3
  405386:	push   ss
  405387:	jp     0x40534e
  405389:	xchg   DWORD PTR [edi-0x7608e54b],ebx
  40538f:	sbb    ebp,edi
  405391:	sbb    eax,0x9beb1b62
  405396:	pop    ecx
  405397:	ins    BYTE PTR es:[edi],dx
  405398:	jmp    0x8eee33a0
  40539d:	cmp    DWORD PTR [ecx-0x66],esp
  4053a0:	or     edi,DWORD PTR [edi-0x55]
  4053a3:	sbb    ebx,ecx
  4053a5:	and    BYTE PTR [esi],0xb5
  4053a8:	sbb    DWORD PTR [ebx+ebp*8+0x5b36ea7],ebx
  4053af:	(bad)  
  4053b0:	lods   al,BYTE PTR ds:[esi]
  4053b1:	mov    bl,0x61
  4053b3:	add    eax,0x87734172
  4053b8:	and    al,0x2a
  4053ba:	jmp    0xe901:0xce875b3f
  4053c1:	aaa    
  4053c2:	pop    esi
  4053c3:	jp     0x405369
  4053c5:	dec    DWORD PTR [ecx+0xe]
  4053c8:	push   0x31
  4053ca:	addr16 add eax,0x2fe1fdb4
  4053d0:	icebp  
  4053d1:	add    ebp,DWORD PTR [esi+0x9e91209]
  4053d7:	(bad)  
  4053d8:	adc    eax,0x7d9d6b39
  4053dd:	mov    dl,0x0
	...
  40540f:	add    BYTE PTR [esi+ebp*4],cl
  405412:	push   0xffffffac
  405414:	add    al,0x38
  405416:	jmp    0x4053b6
  405418:	push   edi
  405419:	jl     0x40541b
  40541b:	lods   al,BYTE PTR ds:[esi]
  40541c:	lods   al,BYTE PTR ds:[esi]
  40541d:	sbb    dl,BYTE PTR [eax]
  40541f:	pop    esp
  405420:	call   0xb8a8:0xc73a50b5
  405427:	jmp    0xd738d68c
  40542c:	fwait
  40542d:	std    
  40542e:	push   edx
  40542f:	shl    DWORD PTR [ecx-0x3216ff94],0xca
  405436:	mov    ebp,DWORD PTR [edx-0x1a3d43d3]
  40543c:	pusha  
  40543d:	pop    eax
  40543e:	mov    edi,DWORD PTR [ebp+0x24835615]
  405444:	dec    edi
  405445:	add    eax,0x408f275
  40544a:	add    cl,ch
  40544c:	pusha  
  40544d:	dec    esi
  40544e:	pop    ebx
  40544f:	mov    al,ds:0x720000a6
  405454:	push   ebx
  405455:	add    DWORD PTR [ebx+0x560e9],edi
  40545b:	add    ebx,DWORD PTR [edi-0x52]
  40545e:	jne    0x405439
  405460:	or     DWORD PTR [esi+0x74c8f175],ebp
  405466:	mov    eax,0xc08260e9
  40546b:	xlat   BYTE PTR ds:[ebx]
  40546c:	ins    BYTE PTR es:[edi],dx
  40546d:	or     al,bh
  40546f:	add    BYTE PTR [edx+0xc48315],bl
	...
  4054a5:	add    BYTE PTR [eax+0x5],dh
  4054a8:	jne    0x405490
  4054aa:	int    0x6
  4054ac:	add    cl,ch
  4054ae:	pusha  
  4054af:	mov    al,ds:0x811e4202
  4054b4:	ret    
  4054b5:	(bad)  
  4054b6:	xchg   ebp,eax
  4054b7:	mov    esi,0x5260edc2
  4054bc:	mov    eax,DWORD PTR ds:0xff4c1df
  4054c2:	shr    DWORD PTR [edi+edi*8-0x71537900],1
  4054c9:	test   esi,esi
  4054cb:	jne    0x4054cc
  4054cd:	inc    DWORD PTR [ebp+0x7d]
  4054d0:	clc    
  4054d1:	(bad)  
  4054d2:	std    
  4054d3:	jbe    0x4054d5
  4054d5:	add    dl,bh
  4054d7:	or     bh,al
  4054d9:	test   DWORD PTR [esi-0x34000089],edi
  4054df:	or     BYTE PTR [eax],al
  4054e1:	add    BYTE PTR [edi],ch
  4054e3:	test   BYTE PTR [eax],al
  4054e5:	call   FWORD PTR [ebp-0x4d8a008a]
  4054eb:	test   DWORD PTR [eax],eax
  4054ed:	lea    eax,[edi+0x6d]
  4054f0:	(bad)  
  4054f1:	(bad)  
  4054f2:	std    
  4054f3:	push   ecx
  4054f4:	push   0x0
  4054f6:	push   eax
  4054f7:	add    DWORD PTR [ebp-0x88017b],ecx
  4054fd:	call   FWORD PTR [edx+0xb]
  405500:	add    al,ch
  405502:	outs   dx,BYTE PTR ds:[esi]
  405503:	sbb    DWORD PTR [eax],eax
  405505:	add    cl,bh
  405507:	pop    eax
  405508:	push   DWORD PTR [eax+eax*1+0x0]
	...
  40553c:	xchg   BYTE PTR [ecx-0x4e798a41],ch
  405542:	mov    edi,0x12087eb
  405547:	add    BYTE PTR [edx+0x8],bh
  40554a:	leave  
  40554b:	ret    0x852
  40554e:	push   ebp
  40554f:	mov    ebx,DWORD PTR [esi+0x9fcc482]
  405555:	leave  
  405556:	fisubr DWORD PTR [edx+0x0]
  405559:	jne    0x4055d0
  40555b:	or     BYTE PTR [edx+0x6dffff2c],dl
  405561:	stos   BYTE PTR es:[edi],al
  405562:	mov    edi,0x5a09d674
  405567:	inc    edi
  405569:	scas   eax,DWORD PTR es:[edi]
  40556a:	out    0x7f,eax
  40556c:	jge    0x4055e4
  40556e:	dec    DWORD PTR [ebx]
  405570:	arpl   si,bx
  405572:	ss add bh,al
  405575:	popa   
  405576:	sbb    eax,0x7e9d7900
  40557b:	inc    ebp
  40557c:	cld    
  40557d:	lea    esi,[eax+0x7066b75]
  405583:	mov    eax,0xc0869e63
  405588:	gs push cs
  40558a:	jge    0x4055d1
  40558c:	ja     0x405574
  40558e:	inc    esi
  40558f:	dec    DWORD PTR [esi-0x60]
  405592:	je     0x405595
  405594:	fdiv   st,st(0)
  405596:	dec    DWORD PTR [edx+0x6a045871]
  40559c:	bound  ebx,QWORD PTR [ecx]
  40559e:	inc    esi
  40559f:	inc    DWORD PTR [eax]
	...
  4055d1:	add    BYTE PTR [ebx],dl
  4055d3:	jae    0x40560b
  4055d5:	or     al,0xac
  4055d7:	unpcklps xmm7,xmm7
  4055da:	cs mov dl,0x9b
  4055dd:	mov    eax,0x3bb08abf
  4055e2:	push   ds
  4055e3:	scas   al,BYTE PTR es:[edi]
  4055e4:	xor    eax,0x86a17802
  4055e9:	fisttp DWORD PTR [edi]
  4055eb:	push   edx
  4055ec:	jl     0x4055b1
  4055ee:	sbb    BYTE PTR [ebp-0x3b],dh
  4055f1:	adc    al,0x63
  4055f3:	or     DWORD PTR [ebp-0x14],edi
  4055f6:	loop   0x405659
  4055f8:	add    edi,eax
  4055fa:	and    dl,BYTE PTR fs:[ebx+ebp*1+0x38]
  4055ff:	xlat   BYTE PTR ds:[ebx]
  405600:	dec    ebp
  405601:	dec    esi
  405603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405604:	fwait
  405605:	sbb    BYTE PTR [esp+edi*1-0x50],cl
  405609:	or     esp,DWORD PTR [ebx]
  40560b:	imul   ebp,DWORD PTR [eax],0x35eb996a
  405611:	or     BYTE PTR [ebx-0x59],cl
  405614:	mov    al,0xff
  405616:	sub    al,0xa8
  405618:	ret    
  405619:	jne    0x40567c
  40561b:	add    eax,0x28e25812
  405620:	stc    
  405621:	add    ebp,DWORD PTR [ebx+0x5]
  405624:	jmp    0xe9adba62
  405629:	sti    
  40562a:	add    al,0xab
  40562c:	adc    al,BYTE PTR [eax+ebp*8]
  40562f:	inc    eax
  405630:	fstp   DWORD PTR ds:0x86645563
	...
  405666:	add    BYTE PTR [eax],al
  405668:	arpl   WORD PTR [ebp-0x556c5012],bp
  40566e:	pop    esp
  40566f:	cld    
  405670:	les    ebp,FWORD PTR [esi]
  405672:	xchg   esi,eax
  405673:	add    al,0x63
  405675:	sub    BYTE PTR [ecx-0x2619ed3],0x38
  40567c:	pusha  
  40567d:	inc    esi
  40567e:	shl    bh,cl
  405680:	sub    al,0x7e
  405682:	adc    al,0x0
  405684:	call   0x134499a0
  405689:	js     0x4056ef
  40568b:	add    al,0xab
  40568d:	stos   BYTE PTR es:[edi],al
  40568e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40568f:	push   esp
  405690:	pushf  
  405691:	xor    ch,ch
  405693:	scas   al,BYTE PTR es:[edi]
  405694:	xor    DWORD PTR ds:0x1527dd31,edx
  40569a:	push   0x31
  40569c:	jae    0x4056a3
  40569e:	cld    
  40569f:	add    ah,BYTE PTR [eax]
  4056a1:	sahf   
  4056a2:	in     eax,0x88
  4056a4:	cwde   
  4056a5:	xor    DWORD PTR [eax+0x7b],edx
  4056a8:	mov    al,ds:0x57c2a04e
  4056ad:	add    eax,0x864f7abc
  4056b2:	and    eax,0x55f6acac
  4056b7:	sbb    ah,BYTE PTR [ebx+0x52]
  4056ba:	dec    esi
  4056bb:	cmp    DWORD PTR [ebx-0x63],ebx
  4056be:	sbb    cl,bl
  4056c0:	cmp    al,0xaa
  4056c2:	es dec ecx
  4056c4:	aaa    
  4056c5:	add    eax,0x560e900
  4056ca:	mov    edx,DWORD PTR [eax+eax*1+0x0]
	...
  4056fd:	add    BYTE PTR [eax],ch
  4056ff:	jg     0x405713
  405701:	je     0x4056ad
  405703:	lods   eax,DWORD PTR ds:[esi]
  405704:	push   eax
  405705:	xchg   ebx,eax
  405706:	pop    esp
  405707:	js     0x40574e
  405709:	adc    eax,0xe175aab7
  40570e:	mov    ch,0x56
  405710:	or     al,0xae
  405712:	out    0x27,eax
  405714:	cld    
  405715:	in     al,dx
  405716:	cli    
  405717:	clc    
  405718:	or     DWORD PTR [ebp-0x16],edi
  40571b:	xchg   BYTE PTR [ebp-0xf],bh
  40571e:	pusha  
  40571f:	xor    cl,cl
  405721:	sbb    ah,BYTE PTR [edi-0x628dfa63]
  405727:	test   eax,eax
  405729:	jmp    0x5060:0xe5c2bc1d
  405730:	mov    edx,ebp
  405732:	loope  0x4056f4
  405734:	hlt    
  405735:	sbb    cl,BYTE PTR [ebx*1+0x560f398]
  40573c:	call   0xffea541f
  405741:	jo     0x40576e
  405743:	test   eax,0x54db248d
  405748:	call   0xffe9f122
  40574d:	ficomp DWORD PTR [ecx+0x79131e1e]
  405753:	and    DWORD PTR [eax],eax
  405755:	and    DWORD PTR [eax+0x5],0xffffffff
  405759:	cld    
  40575a:	mov    ah,0xa9
  40575c:	jne    0x40573f
  40575e:	enter  0xfe80,0x66
	...
  405792:	add    BYTE PTR [eax],al
  405794:	or     eax,0xdceec083
  405799:	cmc    
  40579a:	add    cl,ch
  40579c:	pusha  
  40579d:	test   al,0x75
  40579f:	push   ebp
  4057a0:	call   0xa541331e
  4057a5:	push   edi
  4057a6:	cmp    eax,0x4a000
  4057ab:	jbe    0x4057ec
  4057ad:	mov    bl,BYTE PTR [ecx+eax*1]
  4057b0:	cmp    al,BYTE PTR ds:0x8c7e75ff
  4057b6:	pop    edx
  4057b7:	push   DWORD PTR [ebp+0x57]
  4057ba:	test   eax,eax
  4057bc:	out    dx,al
  4057bd:	sar    bh,0x75
  4057c0:	outs   dx,BYTE PTR ds:[esi]
  4057c1:	mov    WORD PTR [ebp-0x74a89a23],cs
  4057c7:	push   ebp
  4057c8:	out    dx,al
  4057c9:	adc    ch,BYTE PTR cs:[edx-0x6]
  4057cd:	or     al,0x34
  4057cf:	and    edx,edi
  4057d1:	add    al,0xff
  4057d3:	jne    0x40579b
  4057d5:	pop    edx
  4057d6:	jne    0x4057cc
  4057d8:	mov    ch,0x53
  4057da:	or     al,0xc7
  4057dc:	jg     0x405837
  4057de:	add    BYTE PTR [eax],al
  4057e0:	mov    edx,0x51fd6804
  4057e5:	inc    esp
  4057e6:	add    bh,bh
  4057e8:	outs   dx,DWORD PTR ds:[esi]
  4057e9:	jne    0x4057d3
  4057eb:	sbb    DWORD PTR [ecx+eax*1],ebp
  4057ee:	add    BYTE PTR [ebx-0x3f],dl
  4057f1:	les    esi,FWORD PTR [esi+esi*1+0x11]
  4057f5:	pop    ecx
  4057f6:	push   0xfd
	...
  405827:	add    BYTE PTR [eax],al
  405829:	add    BYTE PTR [ecx+0x6ae80043],dh
  40582f:	sub    eax,0x5c790000
  405834:	push   edi
  405835:	inc    edi
  405836:	icebp  
  405837:	mov    ecx,0x49b94b9
  40583c:	add    BYTE PTR [eax-0x47518979],dh
  405842:	push   cs
  405843:	adc    al,0x0
  405845:	add    BYTE PTR [ecx-0x3c],dh
  405848:	mov    BYTE PTR [edi-0x4b],0x1
  40584c:	push   edi
  40584d:	push   ebx
  40584e:	arpl   WORD PTR [esi-0x4f],ax
  405851:	mov    ch,0x63
  405853:	sahf   
  405854:	jp     0x40589b
  405856:	cmp    ebx,DWORD PTR [edi-0x3b]
  405859:	inc    edi
  40585a:	xor    al,0x99
  40585c:	dec    esp
  40585d:	pop    ebx
  40585e:	mov    ebx,0x6340dfa1
  405863:	xlat   BYTE PTR ds:[ebx]
  405864:	ss cld 
  405866:	or     ebp,esi
  405868:	jbe    0x40586a
  40586a:	arpl   WORD PTR [ebx-0x8],bp
  40586d:	mov    edi,0xf8785a97
  405872:	jnp    0x40583d
  405874:	fild   WORD PTR [eax+0x63]
  405877:	push   ss
  405878:	in     eax,0xb3
  40587a:	arpl   WORD PTR [esi+0x5794f800],bx
  405880:	js     0x405861
  405882:	stos   BYTE PTR es:[edi],al
  405883:	push   ecx
  405884:	adc    eax,DWORD PTR [eax]
  405886:	arpl   WORD PTR [esi+0x6605f1fe],cx
  40588c:	xchg   edi,eax
  40588d:	adc    DWORD PTR [eax],eax
	...
  4058bf:	add    BYTE PTR [ebx-0x62],ah
  4058c2:	fadd   st,st(0)
  4058c4:	popf   
  4058c5:	fisubr WORD PTR [eax+eax*1+0x679c0b14]
  4058cc:	mov    cl,0x66
  4058ce:	lods   al,BYTE PTR ds:[esi]
  4058cf:	mov    edx,DWORD PTR [esi]
  4058d1:	into   
  4058d2:	clc    
  4058d3:	shr    DWORD PTR [edi],1
  4058d5:	mov    ds:0x9788027a,al
  4058da:	push   ebx
  4058db:	call   0xffecd472
  4058e0:	sub    al,0x58
  4058e2:	inc    esp
  4058e3:	call   DWORD PTR [esi-0x29]
  4058e6:	dec    eax
  4058e7:	push   esi
  4058e9:	sub    DWORD PTR [ebx-0x53d969db],ebx
  4058ef:	sub    esi,0x35
  4058f2:	add    esi,DWORD PTR [edi+0x5c]
  4058f5:	pop    edi
  4058f6:	inc    esi
  4058f7:	clc    
  4058f8:	arpl   WORD PTR ds:0xa66363e9,ax
  4058fe:	aam    0xab
  405900:	dec    esp
  405901:	xor    DWORD PTR [ebp-0x54],ebx
  405904:	into   
  405905:	std    
  405906:	inc    eax
  405907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40590a:	inc    esi
  40590b:	lods   al,BYTE PTR ds:[esi]
  40590c:	scas   al,BYTE PTR es:[edi]
  40590d:	mov    cl,0x51
  40590f:	xchg   BYTE PTR [ecx],cl
  405911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405912:	ss clc 
  405914:	in     al,0x30
  405916:	jmp    0x4058b0
  405918:	js     0x405914
  40591a:	sub    BYTE PTR [edi],dh
  40591c:	ins    BYTE PTR es:[edi],dx
  40591d:	jp     0x4058d3
  40591f:	mov    bh,0xd8
  405921:	adc    edx,DWORD PTR [esi]
  405923:	add    BYTE PTR ss:[eax],al
	...
  405956:	push   edi
  405957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405958:	xchg   esp,eax
  405959:	mov    bh,0xfc
  40595b:	push   ebx
  40595c:	mov    ebp,0xe42e2386
  405961:	push   0x3e90562
  405966:	fcom   DWORD PTR [eax-0xb]
  405969:	ja     0x4059dc
  40596b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40596c:	pop    esp
  40596d:	mov    al,0xd4
  40596f:	push   ebx
  405970:	icebp  
  405971:	stos   BYTE PTR es:[edi],al
  405972:	push   esi
  405973:	test   eax,0xa6c17fc1
  405978:	into   
  405979:	jg     0x40591b
  40597b:	inc    esi
  40597c:	and    bh,BYTE PTR [ebp+0x50e8f9a1]
  405982:	fcomp  DWORD PTR [ecx+0x4ef3c06a]
  405988:	sbb    bl,bh
  40598a:	mov    ecx,0x94e3e91d
  40598f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405990:	xchg   ecx,eax
  405991:	add    BYTE PTR [ecx+0x1e7d96a6],0xa9
  405998:	add    DWORD PTR [ebx+eax*2],eax
  40599b:	add    eax,0xa2fa9be9
  4059a0:	jle    0x40594d
  4059a2:	fiadd  DWORD PTR [eax+0x0]
  4059a5:	cmp    eax,0xe9200547
  4059aa:	pusha  
  4059ab:	popf   
  4059ac:	ins    BYTE PTR es:[edi],dx
  4059ad:	dec    ebx
  4059ae:	or     BYTE PTR [esi+0x78c4a489],ah
  4059b4:	jge    0x4059df
  4059b6:	mov    dh,0xe9
  4059b8:	(bad)  
  4059b9:	call   0x4059be
	...
  4059ea:	add    BYTE PTR [eax],al
  4059ec:	pusha  
  4059ed:	repnz mov edi,0x45be953a
  4059f3:	sub    DWORD PTR [ebx],edi
  4059f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f6:	(bad)  
  4059f7:	jmp    0x2f149a1d
  4059fc:	push   0xa22e0005
  405a01:	mov    ch,0xff
  405a03:	(bad)  
  405a04:	pusha  
  405a05:	add    eax,0x75bc9cff
  405a0a:	inc    ebp
  405a0b:	cmp    eax,ecx
  405a0d:	das    
  405a0e:	mov    ah,0x76
  405a10:	mov    ds:0x20a48d99,al
  405a15:	push   ebp
  405a16:	push   0x800560e9
  405a1b:	and    DWORD PTR [eax-0x5a],0x75
  405a1f:	icebp  
  405a20:	clc    
  405a21:	bound  esi,QWORD PTR [ecx+ebp*8+0x5dbffa60]
  405a28:	popa   
  405a29:	cmp    BYTE PTR [ebp-0x47],0x60
  405a2d:	xor    BYTE PTR ds:0x4fad0,al
  405a33:	jmp    0xb6f099d9
  405a38:	pop    ecx
  405a39:	add    eax,0x75235c00
  405a3e:	push   eax
  405a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a40:	push   ebx
  405a41:	imul   ebp,DWORD PTR [eax-0x17],0x64800560
  405a48:	and    eax,ebp
  405a4a:	push   eax
  405a4b:	or     DWORD PTR [ebx+0x71],0x0
	...
  405a82:	mov    ah,BYTE PTR [esi-0x77788a41]
  405a88:	test   eax,0x8b017a00
  405a8d:	inc    ebp
  405a8e:	xchg   esi,eax
  405a8f:	mov    BYTE PTR [eax],0x0
  405a92:	iret   
  405a93:	in     eax,dx
  405a94:	mov    edi,0x96eb9
  405a99:	add    BYTE PTR [ecx-0x37],ch
  405a9c:	rep stos BYTE PTR es:[edi],al
  405a9e:	test   DWORD PTR [ebp-0x40],eax
  405aa1:	cmp    al,0x4a
  405aa3:	or     DWORD PTR [eax],eax
  405aa5:	push   edi
  405aa7:	xor    al,0x8f
  405aa9:	inc    ebp
  405aaa:	sahf   
  405aab:	mov    DWORD PTR [ebp-0x2c],0xf4d
  405ab2:	inc    ebp
  405ab3:	inc    ebp
  405ab4:	lock dec DWORD PTR ds:0xb78d0009
  405abb:	enter  0x6a50,0xa
  405abf:	add    eax,DWORD PTR [eax]
  405ac1:	push   DWORD PTR [edi+0x2c]
  405ac4:	call   0x4890fa
  405ac9:	or     edi,DWORD PTR [edx]
  405acb:	hlt    
  405acc:	add    eax,0xb84f83
  405ad1:	jne    0x405a9b
  405ad3:	and    DWORD PTR [eax-0x1],0x75ff6d37
  405ada:	out    0x1,al
  405adc:	pop    ss
  405add:	sub    al,0x8b
  405adf:	or     edi,edi
  405ae1:	jne    0x405ac1
  405ae3:	or     edx,0xb3
	...
  405b15:	add    BYTE PTR [eax],al
  405b17:	add    BYTE PTR [edx-0x753b7cf8],bh
  405b1d:	popf   
  405b1e:	mov    dh,0x45
  405b20:	repnz cmp DWORD PTR [edx+0x0],ebp
  405b24:	mov    ebp,0xdce8fbf4
  405b29:	jae    0x405b2a
  405b2b:	jmp    DWORD PTR [ebx-0x59]
  405b2e:	ret    
  405b2f:	jne    0x405b92
  405b31:	xchg   edi,ebp
  405b33:	mov    BYTE PTR [esi],bl
  405b35:	inc    esi
  405b36:	test   eax,0x2576af75
  405b3b:	mov    dl,0x63
  405b3d:	scas   al,BYTE PTR es:[edi]
  405b3e:	push   ebx
  405b3f:	call   esi
  405b41:	repnz test al,0x75
  405b44:	sbb    esi,DWORD PTR [esi]
  405b46:	dec    edi
  405b47:	sti    
  405b48:	dec    esp
  405b49:	inc    ebx
  405b4a:	std    
  405b4b:	mov    edi,0x109cb0ce
  405b50:	cmp    al,0xb9
  405b52:	adc    edi,edi
  405b54:	scas   al,BYTE PTR es:[edi]
  405b55:	call   0xfcef:0x35eb75a8
  405b5c:	and    al,0xdb
  405b5e:	jl     0x405b38
  405b60:	sbb    al,0x59
  405b62:	imul   ebp,eax,0x66
  405b65:	inc    edx
  405b66:	add    al,0x0
  405b68:	or     al,0x79
  405b6a:	outs   dx,DWORD PTR ds:[esi]
  405b6b:	call   0xffe968a6
  405b70:	cld    
  405b71:	js     0x405bda
  405b73:	call   0xffe968b6
  405b78:	in     al,dx
  405b79:	sbb    BYTE PTR [edi+0xe8],ah
	...
  405bab:	add    BYTE PTR [eax],al
  405bad:	add    BYTE PTR [esi+0xd],al
  405bb0:	test   eax,0x4ceee8ff
  405bb5:	pop    edi
  405bb6:	stos   BYTE PTR es:[edi],al
  405bb7:	outs   dx,DWORD PTR ds:[esi]
  405bb8:	idiv   edi
  405bba:	aaa    
  405bbb:	pop    ss
  405bbc:	xchg   edi,eax
  405bbd:	sbb    DWORD PTR [edi+0x6f457cb9],0xffffffa7
  405bc4:	ret    
  405bc5:	je     0x405c24
  405bc7:	jae    0x405bcc
  405bc9:	add    BYTE PTR [ebx-0x52],ah
  405bcc:	add    eax,edi
  405bce:	push   ds
  405bcf:	pop    edx
  405bd0:	add    eax,DWORD PTR [eax]
  405bd2:	arpl   WORD PTR [esi+0x4974576],bp
  405bd8:	cmp    DWORD PTR [ecx+0x2e9e1116],ebp
  405bde:	pop    ebx
  405bdf:	lods   eax,DWORD PTR ds:[esi]
  405be0:	add    BYTE PTR [edx+0x266aa37c],ch
  405be6:	ja     0x405bec
  405be8:	std    
  405be9:	adc    cl,bh
  405beb:	add    al,0x7e
  405bed:	cs push edi
  405bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bf0:	cld    
  405bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bf2:	dec    ebx
  405bf3:	cmp    al,0x6f
  405bf5:	test   al,0x54
  405bf7:	ss cs dec di
  405bfb:	scas   al,BYTE PTR es:[edi]
  405bfc:	cmp    DWORD PTR [ebx-0x454e5cbc],esp
  405c02:	and    DWORD PTR [esi],ecx
  405c04:	jmp    0x6af24457
  405c09:	mov    edi,0x3e262c2f
  405c0e:	daa    
  405c0f:	add    eax,0x21e9
	...
  405c44:	and    al,0x49
  405c46:	das    
  405c47:	or     DWORD PTR [ebx+0x2f],esp
  405c4a:	in     eax,dx
  405c4b:	jbe    0x405bf3
  405c4d:	mov    eax,ds:0x5e31bb9
  405c52:	jmp    0xee2e75a
  405c57:	add    esp,DWORD PTR [ebx-0x5e]
  405c5a:	jl     0x405c57
  405c5c:	add    al,0x75
  405c5e:	cmp    al,BYTE PTR [ebx]
  405c60:	arpl   sp,cx
  405c62:	sub    edi,edi
  405c64:	fdivr  QWORD PTR [ecx]
  405c66:	bound  edx,QWORD PTR [edi+0x4f95c9e0]
  405c6c:	xor    dl,cl
  405c6e:	and    al,0x58
  405c70:	arpl   WORD PTR ds:0xbe7003e9,ax
  405c76:	inc    ecx
  405c77:	add    al,0x53
  405c79:	add    eax,0xa5ca9be9
  405c7e:	mov    esi,0x48daa7
  405c83:	test   eax,0xe910057f
  405c88:	pusha  
  405c89:	lods   eax,DWORD PTR ds:[esi]
  405c8a:	mov    WORD PTR [ecx+0x2489a2c4],cs
  405c90:	imul   DWORD PTR [eax+eax*1]
  405c93:	stc    
  405c94:	pusha  
  405c95:	add    eax,0xa2bf0ee8
  405c9a:	push   DWORD PTR [eax+0x22]
  405c9d:	popa   
  405c9e:	(bad)  
  405c9f:	cld    
  405ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ca1:	pop    esp
  405ca2:	cmp    al,0xe9
  405ca4:	pusha  
  405ca5:	add    eax,0xa933
	...
  405cda:	adc    BYTE PTR [edi-0x39],ch
  405cdd:	lods   al,BYTE PTR ds:[esi]
  405cde:	or     al,0xe1
  405ce0:	(bad)  
  405ce1:	call   0x29b5ff46
  405ce6:	mov    ah,0x48
  405ce8:	aam    0x4e
  405cea:	jb     0x405d49
  405cec:	(bad)  
  405ced:	lods   al,BYTE PTR ds:[esi]
  405cee:	lock leave 
  405cf0:	inc    ebp
  405cf1:	and    esp,edi
  405cf3:	adc    DWORD PTR [eax],eax
  405cf5:	jmp    0x2f34a4d7
  405cfa:	or     al,0xa2
  405cfc:	push   DWORD PTR [edx+eiz*4-0x37]
  405d00:	push   eax
  405d01:	xchg   ecx,eax
  405d02:	pusha  
  405d03:	add    eax,0x5596900
  405d08:	call   DWORD PTR [eax+edi*8+0x673bb5a9]
  405d0f:	add    eax,0xb33290b
  405d14:	xor    DWORD PTR [esp+ebp*4+0x4],0x75
  405d19:	in     al,0xf7
  405d1b:	lahf   
  405d1c:	add    cl,ch
  405d1e:	pusha  
  405d1f:	retf   0x9945
  405d22:	std    
  405d23:	adc    DWORD PTR [eax],eax
  405d25:	jmp    0x39f0a565
  405d2a:	cld    
  405d2b:	pop    ss
  405d2c:	mov    esp,0x91200
  405d31:	add    BYTE PTR [edx],bh
  405d33:	sbb    eax,0x817ac445
  405d38:	nop
  405d39:	mov    dl,0x8a
  405d3b:	add    eax,0xc00b
	...
  405d70:	outs   dx,DWORD PTR ds:[esi]
  405d71:	add    al,0xe9
  405d73:	fdivr  DWORD PTR [edx+0x5]
  405d76:	add    BYTE PTR [ebx+0xc6314f],cl
  405d7c:	mov    bl,BYTE PTR [edi*2-0x55dc3c]
  405d83:	(bad)  
  405d84:	jp     0x405d1c
  405d86:	mov    edi,0x455fa0f3
  405d8b:	les    eax,FWORD PTR [esi]
  405d8d:	add    eax,0xd5c50000
  405d92:	mov    bh,0x8f
  405d94:	call   DWORD PTR [edi+eax*8+0x45]
  405d98:	jb     0x405e01
  405d9a:	str    WORD PTR [edx+0x60]
  405d9e:	inc    ebp
  405d9f:	hlt    
  405da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405da1:	xchg   edi,eax
  405da2:	(bad)  
  405da3:	push   DWORD PTR [edi+0x2050c445]
  405da9:	add    eax,0xd545006a
  405dae:	mov    ebx,0x16bee8
  405db3:	add    BYTE PTR [ecx],dl
  405db5:	lds    esi,FWORD PTR [esi+eax*1-0x77]
  405db9:	in     eax,dx
  405dba:	rol    DWORD PTR [eax],cl
  405dbc:	iret   
  405dbd:	add    eax,0x4fa8ce9
  405dc2:	add    bh,bh
  405dc4:	outs   dx,DWORD PTR ds:[esi]
  405dc5:	hlt    
  405dc6:	(bad)  
  405dc7:	jne    0x405d53
  405dc9:	addr16 jne 0x405d84
  405dcc:	loop   0x405d6f
  405dce:	sub    al,BYTE PTR [ecx-0x46]
  405dd1:	imul   esi,DWORD PTR [ebp-0x44],0x0
	...
  405e04:	add    BYTE PTR [eax],al
  405e06:	mov    dl,0xd2
  405e08:	mov    cl,0x0
  405e0a:	arpl   WORD PTR [esi-0x40b03b80],bp
  405e10:	ins    BYTE PTR es:[edi],dx
  405e11:	inc    ebp
  405e12:	(bad)  
  405e13:	(bad)  
  405e14:	sbb    DWORD PTR [eax],eax
  405e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e17:	fld    st(3)
  405e19:	call   0xffe5b4b6
  405e1e:	push   0x78022f6e
  405e23:	dec    eax
  405e24:	jnp    0x405e6b
  405e26:	iret   
  405e27:	jg     0x405e58
  405e29:	mov    ah,0x8b
  405e2b:	dec    ebp
  405e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e2d:	push   DWORD PTR [edi+ecx*4+0x2f]
  405e31:	mov    esp,0x73f67b
  405e36:	arpl   si,di
  405e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e39:	jne    0x405e5a
  405e3b:	pop    ss
  405e3c:	das    
  405e3d:	mov    ah,0x4b
  405e3f:	hlt    
  405e40:	stos   BYTE PTR es:[edi],al
  405e41:	dec    DWORD PTR [ebx+edx*4-0x3d]
  405e45:	jne    0x405ea8
  405e47:	xor    esi,ebx
  405e49:	cmp    BYTE PTR [esi+0x4f74039e],0x4f
  405e50:	das    
  405e51:	adc    BYTE PTR [ecx+eiz*2],ch
  405e54:	idiv   esi
  405e56:	scas   al,BYTE PTR es:[edi]
  405e57:	sbb    bl,BYTE PTR [eax+eax*2+0xba4d71a]
  405e5e:	and    ebx,DWORD PTR [ecx+0x1]
  405e61:	jmp    0x405ed7
  405e63:	adc    ecx,esp
  405e65:	or     ebp,DWORD PTR [eax]
  405e67:	jp     0x405e7b
  405e69:	lea    eax,[eax]
	...
  405e9b:	add    BYTE PTR [esi+0x6eff544a],ah
  405ea1:	call   0xfb0a:0xf5b775a4
  405ea8:	in     al,0x9e
  405eaa:	js     0x405e84
  405eac:	fsub   QWORD PTR [eax]
  405eae:	outs   dx,DWORD PTR ds:[esi]
  405eaf:	call   0x443b86
  405eb4:	int3   
  405eb5:	add    al,0x5c
  405eb7:	les    edi,FWORD PTR [ebx-0x435b420b]
  405ebd:	lahf   
  405ebe:	pop    esp
  405ebf:	push   0xa4ae0dcb
  405ec4:	lods   al,BYTE PTR ds:[esi]
  405ec5:	lahf   
  405ec6:	cmp    al,0x6c
  405ec8:	mov    ebx,0x9ca49e05
  405ecd:	xor    DWORD PTR [eax+ebx*2],0x63
  405ed1:	sbb    ecx,esp
  405ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ed4:	push   ss
  405ed5:	jno    0x405e68
  405ed7:	mov    al,0xa5
  405ed9:	lahf   
  405eda:	sahf   
  405edb:	js     0x405e7d
  405edd:	cmp    esi,DWORD PTR [esi]
  405edf:	mov    ebx,0x4ee8f4a1
  405ee4:	fdiv   DWORD PTR [eax+0x336bbf6a]
  405eea:	ror    al,cl
  405eec:	loopne 0x405f0e
  405eee:	in     eax,0x3
  405ef0:	iret   
  405ef1:	dec    edi
  405ef2:	push   0x26
  405ef4:	jae    0x405efb
  405ef6:	fnstsw WORD PTR [ebx]
  405ef8:	(bad)  
  405ef9:	dec    eax
  405efa:	pop    ebp
  405efb:	push   ebx
  405efc:	cmp    al,0x19
  405efe:	in     eax,0x9b
	...
  405f30:	add    BYTE PTR [eax],al
  405f32:	das    
  405f33:	push   esi
  405f34:	jmp    0xc206453c
  405f39:	repz and eax,0xe79bed19
  405f3f:	mov    bh,0x36
  405f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f42:	jmp    0x11a1:0x96a43148
  405f49:	data16 mov ah,0x5
  405f4c:	jmp    0xf05a1c49
  405f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f52:	outs   dx,BYTE PTR ds:[esi]
  405f53:	cmc    
  405f54:	or     eax,0x635eb2e
  405f59:	cs pop ebx
  405f5b:	lods   eax,DWORD PTR ds:[esi]
  405f5c:	jmp    0xa862:0x9edca5
  405f63:	sahf   
  405f64:	jne    0x405f53
  405f66:	jmp    0x612a0ed2
  405f6b:	sahf   
  405f6c:	jne    0x405f5b
  405f6e:	or     BYTE PTR [esi],bh
  405f70:	fcom   st(6)
  405f72:	add    BYTE PTR [ebx-0x3c61cd3d],cl
  405f78:	or     al,0xe9
  405f7a:	imul   ecx,DWORD PTR [edx+0x15ab68ec],0xfffffffe
  405f81:	mov    dh,0xc0
  405f83:	nop
  405f84:	test   DWORD PTR [ebx],edi
  405f86:	rcr    DWORD PTR [esi+0x43739ff],0x1
  405f8d:	jmp    0x58a40cf2
  405f92:	pop    edi
  405f93:	add    eax,0xaac9
	...
  405fc8:	sub    cl,BYTE PTR [edx+0xd426aec]
  405fce:	add    ch,dh
  405fd0:	popa   
  405fd1:	cmp    BYTE PTR [ebp-0x27],0x60
  405fd5:	sbb    DWORD PTR [ecx],ebx
  405fd7:	outs   dx,BYTE PTR ds:[esi]
  405fd8:	push   0xfffffff9
  405fda:	(bad)  
  405fdb:	fcomp  QWORD PTR [eax-0x53]
  405fde:	fiadd  DWORD PTR [ebx+0x0]
  405fe1:	sahf   
  405fe2:	(bad)  
  405fe3:	fdiv   QWORD PTR [eax]
  405fe5:	lahf   
  405fe6:	jne    0x405fc5
  405fe8:	add    DWORD PTR [eax],ebx
  405fea:	or     BYTE PTR [ecx+0x5d],dl
  405fed:	mov    edx,0xc32e3eff
  405ff2:	adc    cl,ch
  405ff4:	pop    ebx
  405ff5:	mov    ch,ah
  405ff7:	push   0x42
  405ff9:	or     eax,0x83049d00
  405ffe:	jge    0x405fed
  406000:	pusha  
  406001:	sbb    DWORD PTR [esi],edx
  406003:	push   ss
  406004:	pop    edx
  406005:	cmc    
  406006:	(bad)  
  406007:	xchg   esp,eax
  406008:	pop    eax
  406009:	lods   eax,DWORD PTR ds:[esi]
  40600a:	scas   al,BYTE PTR es:[edi]
  40600b:	add    BYTE PTR [eax+0x62],al
  40600e:	(bad)  
  40600f:	call   DWORD PTR [edi+0xe]
  406012:	push   DWORD PTR [ebp-0x3e]
  406015:	imul   eax,DWORD PTR ds:0xc962bddb,0x5501cec2
  40601f:	mov    ebp,DWORD PTR [esi-0x720f3b7a]
  406025:	cld    
  406026:	or     ebp,eax
  406028:	jge    0x406090
  40602a:	(bad)  
  40602b:	inc    DWORD PTR [eax]
	...
  40605d:	add    BYTE PTR [ebx],dh
  40605f:	dec    ebp
  406060:	or     al,0x83
  406062:	pop    edi
  406063:	cmc    
  406064:	push   DWORD PTR [ebx+0x74]
  406067:	bound  esi,QWORD PTR [ebp+0xc]
  40606a:	mov    ds:0xbdffe2ce,al
  40606f:	push   cs
  406070:	shl    BYTE PTR [eax+ecx*2+0x74],0x45
  406075:	lock cmp ah,BYTE PTR [edx+0x75]
  406079:	or     al,0xe2
  40607b:	xchg   ebx,esp
  40607d:	(bad)  
  40607e:	fisttp QWORD PTR [esi]
  406080:	shl    BYTE PTR [eax+ebx*1-0x7e],0x7d
  406085:	cld    
  406086:	dec    edx
  406087:	or     DWORD PTR [eax],edx
  406089:	add    BYTE PTR [ecx-0x57],cl
  40608c:	(bad)  
  40608d:	jne    0x40604d
  40608f:	addr16 jne 0x40608a
  406092:	xchg   edx,eax
  406093:	popf   
  406094:	out    0xff,al
  406096:	lea    ecx,[ebx]
  406098:	shl    BYTE PTR [ebp+0x2b],0x68
  40609c:	jne    0x4060ae
  40609e:	popf   
  40609f:	std    
  4060a0:	sti    
  4060a1:	call   edi
  4060a3:	cmp    bh,0x75
  4060a6:	add    dh,BYTE PTR [ecx+0x4f]
  4060a9:	(bad)  
  4060aa:	cmp    eax,0x6a458d67
  4060af:	fsub   st,st(7)
  4060b1:	loopne 0x40611c
  4060b3:	addr16 (bad) 
  4060b5:	jmp    DWORD PTR [ebx+0x79]
  4060b8:	psubsb mm7,QWORD PTR [edx+0x1affa1e9]
  4060bf:	icebp  
  4060c0:	push   cs
	...
  4060f1:	add    BYTE PTR [eax],al
  4060f3:	add    BYTE PTR [esi],dh
  4060f5:	pop    ss
  4060f6:	scas   eax,DWORD PTR es:[edi]
  4060f7:	sbb    DWORD PTR [edi+0x5f75a19e],0x6
  4060fe:	mov    cl,0xe2
  406100:	les    esp,FWORD PTR [ebx+0x2f6f458b]
  406106:	pop    ds
  406107:	or     al,0x63
  406109:	cmp    cl,BYTE PTR [ecx-0x1]
  40610c:	ss mov edx,0xc3c15aab
  406112:	mov    eax,ds:0xd4d2a30b
  406117:	mov    WORD PTR [esi],ds
  406119:	pop    esi
  40611a:	xor    al,0xff
  40611c:	push   ss
  40611d:	mov    edx,0x638011ab
  406122:	mov    eax,ds:0xe4f2a30b
  406127:	xor    dh,0x71
  40612a:	add    al,0x0
  40612c:	push   ebx
  40612d:	scas   al,BYTE PTR es:[edi]
  40612e:	adc    al,0x11
  406130:	fs cdq 
  406132:	repz (bad) 
  406134:	(bad)  
  406135:	sbb    ah,BYTE PTR [ecx+0x17135b75]
  40613b:	or     BYTE PTR [ebx],bh
  40613d:	sbb    DWORD PTR [edx+0x471144ff],esp
  406143:	lock xchg ebx,eax
  406145:	ss and ah,bl
  406148:	xor    al,0x33
  40614a:	mov    eax,ds:0x49465f75
  40614f:	frstor [ebx+eax*2]
  406152:	retf   
  406153:	ret    0xae6f
  406156:	mov    eax,DWORD PTR ss:[eax]
	...
  406189:	add    BYTE PTR [edi],al
  40618b:	das    
  40618c:	enter  0xb0f0,0x7
  406190:	mov    ebp,0xf1058eff
  406195:	stos   DWORD PTR es:[edi],eax
  406196:	jmp    0xe141:0xeaa11ea6
  40619d:	test   BYTE PTR [esi+0xd],ch
  4061a0:	jmp    0x7cdcfebc
  4061a5:	or     ecx,ebx
  4061a7:	xchg   ecx,eax
  4061a8:	or     BYTE PTR [ecx+0x18290fd4],ah
  4061ae:	xchg   ecx,eax
  4061af:	mov    ah,BYTE PTR [ebx+edx*4+0xc5c9c33]
  4061b6:	retf   
  4061b7:	push   0xfb4a0cb
  4061bc:	test   eax,0x4c868117
  4061c1:	mov    al,ds:0x3d90563
  4061c6:	adc    ch,dh
  4061c8:	mov    ebp,0x3c9b9716
  4061cd:	pushf  
  4061ce:	jnp    0x4061ab
  4061d0:	(bad)  
  4061d1:	mov    al,ds:0x17a90f84
  4061d6:	bound  ecx,QWORD PTR [eax+0x6c]
  4061d9:	inc    esi
  4061da:	jae    0x406210
  4061dc:	cmp    ebp,0xa08e9b81
  4061e2:	out    dx,al
  4061e3:	or     al,0x91
  4061e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061e6:	aas    
  4061e7:	fwait
  4061e8:	jle    0x406176
  4061ea:	and    BYTE PTR [edi],bh
  4061ec:	mov    al,ds:0xc5
	...
  40621d:	add    BYTE PTR [eax],al
  40621f:	add    BYTE PTR [edi+0x5],ah
  406222:	adc    al,0x8d
  406224:	aaa    
  406225:	test   DWORD PTR ds:0x5e9b3d57,ebp
  40622b:	enter  0x5dde,0x57
  40622f:	mov    al,ds:0x3e9062c
  406234:	arpl   WORD PTR [esi-0x3a97f054],cx
  40623a:	mov    ch,0x6
  40623c:	jecxz  0x40621b
  40623e:	(bad)  
  40623f:	call   0xb22962b9
  406244:	popa   
  406245:	add    eax,0x9552600
  40624a:	call   0xffdb2d97
  40624f:	loop   0x406271
  406251:	adc    DWORD PTR [edi],ecx
  406253:	or     DWORD PTR [eax+0x3e940e9],0xc2110c11
  40625d:	mov    edx,0x8f8f6ff
  406262:	push   0x45b42c
  406267:	out    0x5a,al
  406269:	or     eax,ebp
  40626b:	push   cs
  40626c:	call   FWORD PTR [edx+0x5dda60ff]
  406272:	dec    dh
  406274:	les    ebp,FWORD PTR ds:0x560e83e
  40627a:	lea    esp,[ecx+eiz*4-0x65]
  40627e:	push   DWORD PTR [esi-0x725852a9]
	...
  4062b4:	add    BYTE PTR [eax],al
  4062b6:	in     al,0x9a
  4062b8:	lea    ebp,[ecx+eiz*4-0x65]
  4062bc:	call   FWORD PTR [esi+0x51b59a2f]
  4062c2:	int    0x9a
  4062c4:	inc    DWORD PTR [ecx-0x16ff9740]
  4062ca:	out    dx,eax
  4062cb:	jg     0x406289
  4062cd:	jg     0x4062c3
  4062cf:	cdq    
  4062d0:	inc    eax
  4062d1:	out    0xe4,al
  4062d3:	inc    BYTE PTR [eax]
  4062d5:	jmp    0x2bd5eb3a
  4062da:	fstp   QWORD PTR [ecx-0xa9ea901]
  4062e0:	(bad)  
  4062e1:	call   0x6ac46d46
  4062e6:	pop    edi
  4062e7:	add    eax,0x47970000
  4062ec:	sub    al,0x50
  4062ee:	xor    dh,BYTE PTR [edi]
  4062f0:	sub    al,0x41
  4062f2:	cli    
  4062f3:	ins    DWORD PTR es:[edi],dx
  4062f4:	mov    esp,0xb05faad
  4062f9:	rcr    bh,0xc
  4062fc:	jmp    0x466dcd
  406301:	lea    ebp,[edi-0x39]
  406304:	(bad)  
  406305:	call   DWORD PTR [ebp+0x74]
  406308:	inc    edx
  406309:	sub    al,0xfa
  40630b:	in     eax,dx
  40630c:	mov    ah,0x2c
  40630e:	or     eax,DWORD PTR [esi]
  406310:	call   0x418ab4
  406315:	or     edi,DWORD PTR [edx-0x4]
  406318:	add    al,0xe9
	...
  40634a:	add    BYTE PTR [eax],al
  40634c:	aad    0x5
  40634e:	add    BYTE PTR [eax],al
  406350:	xchg   ebp,eax
  406351:	cld    
  406352:	or     ebp,eax
  406354:	xchg   edi,eax
  406355:	pop    edi
  406356:	(bad)  
  406357:	inc    ecx
  406359:	lds    esi,FWORD PTR [ebp+0xf]
  40635c:	xor    al,dl
  40635e:	sub    BYTE PTR [ecx-0x76],al
  406361:	jp     0x4063d8
  406363:	or     al,0xa2
  406365:	sbb    ebx,edi
  406367:	push   DWORD PTR [ebp-0x7595f592]
  40636d:	jp     0x4063e4
  40636f:	or     al,0xd2
  406371:	xchg   edi,ebx
  406373:	call   ebp
  406375:	je     0x40630c
  406377:	ret    0x7ad4
  40637a:	dec    DWORD PTR [ebp+0x50519578]
  406380:	repnz push esi
  406382:	(bad)  
  406384:	aad    0xd4
  406386:	(bad)  
  406387:	jne    0x4063bb
  406389:	js     0x406400
  40638b:	adc    al,0xc5
  40638d:	std    
  40638e:	(bad)  
  406390:	xchg   ebp,eax
  406391:	std    
  406392:	pop    es
  406393:	call   0xffdda1fb
  406398:	and    al,0x47
  40639a:	(bad)  
  40639b:	fistp  DWORD PTR [eax+eax*2]
  40639e:	stos   BYTE PTR es:[edi],al
  40639f:	pusha  
  4063a0:	out    0x6c,al
  4063a2:	out    dx,eax
  4063a3:	mov    dh,ah
  4063a5:	sbb    bl,BYTE PTR [ebp+0x202c04ff]
  4063ab:	adc    BYTE PTR [ebx+0x79],ah
  4063ae:	add    ebx,ebp
	...
  4063e0:	add    BYTE PTR [eax],al
  4063e2:	push   ecx
  4063e3:	not    DWORD PTR [edi]
  4063e5:	adc    ah,ch
  4063e7:	cmp    DWORD PTR [edi-0x2],edx
  4063ea:	in     al,0x7
  4063ec:	stos   DWORD PTR es:[edi],eax
  4063ed:	inc    edx
  4063ee:	or     eax,0xa30b03af
  4063f3:	adc    ah,al
  4063f5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4063f7:	mov    BYTE PTR [eax+eax*1-0x3c],0x11
  4063fc:	psubsb mm6,QWORD PTR [edi-0x41]
  406400:	popf   
  406401:	push   DWORD PTR [ecx+esi*2-0x505301a8]
  406408:	xor    al,0xe8
  40640a:	daa    
  40640b:	addr16 popf 
  40640d:	push   DWORD PTR [ebx]
  40640f:	sub    ebx,DWORD PTR [edi]
  406411:	sbb    BYTE PTR [ebx-0x2e],ah
  406414:	ud0    edx,DWORD PTR [esi]
  406417:	mov    edx,0xa60eff33
  40641c:	pushf  
  40641d:	push   ebp
  40641e:	pop    ebx
  40641f:	jae    0x406431
  406421:	(bad)  
  406422:	out    dx,al
  406423:	xchg   ecx,eax
  406424:	xor    edi,edi
  406426:	mul    BYTE PTR [ebp-0x7899ab55]
  40642c:	popf   
  40642d:	call   0xffddc7f8
  406432:	out    0x20,al
  406434:	ret    0x4cfe
  406437:	sysenter 
  406439:	dec    DWORD PTR [esi]
  40643b:	jmp    0xb951:0x53cff9d
  406442:	pop    es
  406443:	add    eax,0x86e9
	...
  406478:	and    ecx,DWORD PTR [eax]
  40647a:	ins    BYTE PTR es:[edi],dx
  40647b:	xchg   ebx,eax
  40647c:	and    eax,0xd69d4e98
  406481:	pop    eax
  406482:	inc    edi
  406483:	popf   
  406484:	adc    al,0xad
  406486:	das    
  406487:	jo     0x4064ec
  406489:	add    eax,0x96cb5736
  40648e:	cs popf 
  406490:	or     edx,edx
  406492:	inc    ecx
  406493:	popf   
  406494:	hlt    
  406495:	int    0x2b
  406497:	clc    
  406498:	in     al,dx
  406499:	xor    BYTE PTR [edx-0x50],ah
  40649c:	jns    0x4064a3
  40649e:	push   cs
  40649f:	pop    ss
  4064a0:	ja     0x40643a
  4064a2:	jl     0x406497
  4064a4:	aad    0x11
  4064a6:	in     eax,dx
  4064a7:	pushf  
  4064a8:	push   esi
  4064a9:	or     eax,0x97c6dd01
  4064ae:	out    dx,al
  4064af:	retf   0xf4a1
  4064b2:	call   0xdee94ced
  4064b7:	push   ss
  4064b8:	pop    edi
  4064b9:	lods   eax,DWORD PTR ds:[esi]
  4064ba:	xor    bh,BYTE PTR [ebp-0x3c1d685c]
  4064c0:	pop    ss
  4064c1:	test   ebp,0xd1357316
  4064c7:	xchg   ecx,eax
  4064c8:	lods   eax,DWORD PTR ds:[esi]
  4064c9:	xchg   edi,eax
  4064ca:	mov    dh,0x33
  4064cc:	test   BYTE PTR [ecx],dl
  4064ce:	rcr    DWORD PTR [esi+esi*8-0x1162c710],1
  4064d5:	or     al,0x91
  4064d7:	pop    ebp
  4064d8:	ins    BYTE PTR es:[edi],dx
  4064d9:	xchg   edi,eax
  4064da:	xchg   esi,eax
  4064db:	stos   DWORD PTR es:[edi],eax
	...
  40650c:	add    BYTE PTR [eax],al
  40650e:	jns    0x4064ca
  406510:	mov    ds,WORD PTR [edx+ebp*1-0x51fc223c]
  406517:	mov    cl,BYTE PTR [ebp-0xe2964]
  40651d:	jne    0x40658c
  40651f:	cmc    
  406520:	(bad)  
  406521:	hlt    
  406522:	ins    BYTE PTR es:[edi],dx
  406523:	sub    ebx,DWORD PTR [edx]
  406525:	dec    bp
  406527:	or     eax,0x96cfa0e8
  40652c:	call   DWORD PTR [esi+0x4d]
  40652f:	icebp  
  406530:	(bad)  
  406531:	aam    0x10
  406533:	cwde   
  406534:	jne    0x40652b
  406536:	dec    edx
  406537:	loop   0x406537
  406539:	mov    ah,0x58
  40653b:	lods   eax,DWORD PTR ds:[esi]
  40653c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40653d:	ss out 0x96,eax
  406540:	push   DWORD PTR [esp+esi*8-0x28068a69]
  406547:	adc    BYTE PTR [ebx+edx*4],cl
  40654a:	in     al,dx
  40654b:	xchg   edi,eax
  40654c:	jne    0x40652f
  40654e:	mov    eax,0xff0eff72
  406553:	int3   
  406554:	ret    0x60d9
  406557:	xor    BYTE PTR [ebx-0xf3e1cf3],cl
  40655d:	call   0x40eb:0x122b2e8e
  406564:	or     al,0xe6
  406566:	pop    DWORD PTR [edi+0x10c8e145]
  40656c:	or     BYTE PTR [esi+0x22],ah
  40656f:	cdq    
  406570:	(bad)  
  406571:	and    al,0x0
	...
  4065a3:	add    bl,dh
  4065a5:	add    eax,0x8260e900
  4065aa:	cmp    eax,0x457e01
  4065af:	jmp    0x2cc39f08
  4065b4:	outs   dx,DWORD PTR ds:[esi]
  4065b5:	add    eax,0x40ea3f74
  4065ba:	lock cmp DWORD PTR ds:0x36e96a04,edi
  4065c1:	add    eax,0x96570c83
  4065c6:	jae    0x4065c8
  4065c8:	inc    edi
  4065c9:	jnp    0x406640
  4065cb:	adc    cl,dh
  4065cd:	(bad)  
  4065ce:	imul   eax,DWORD PTR [eax],0x458d0160
  4065d4:	mov    dl,0xd1
  4065d6:	(bad)  
  4065d7:	adc    eax,0x40a882
  4065dc:	xor    edx,eax
  4065de:	je     0x40660f
  4065e0:	mov    ecx,0x3600f3fc
  4065e5:	test   eax,0x870e458a
  4065ea:	dec    ebp
  4065eb:	lock popa 
  4065ed:	or     DWORD PTR [edi+0x17],esi
  4065f0:	mov    ecx,0x36758b6d
  4065f5:	xchg   BYTE PTR [ebp+0x8],bh
  4065f8:	jno    0x406646
  4065fa:	lock jecxz 0x4065f5
  4065fd:	outs   dx,BYTE PTR ds:[esi]
  4065fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065ff:	mov    esi,DWORD PTR [edi+0x7a75fefd]
  406605:	mov    al,BYTE PTR [eax]
  406607:	inc    DWORD PTR [eax]
	...
  406639:	add    BYTE PTR [edi-0x7a],dl
  40663c:	call   0x419778
  406641:	mov    edi,DWORD PTR [ecx-0x26]
  406644:	pop    ebp
  406645:	pop    ebx
  406646:	cmp    DWORD PTR [edi-0x7988fff4],0xffffffec
  40664d:	add    DWORD PTR [esi],0x6e
  406650:	push   ebx
  406651:	push   esi
  406652:	gs jmp 0x18b95af
  406658:	call   0x4257f6
  40665d:	mov    eax,edx
  40665f:	ret    0xfc45
  406662:	jp     0x406665
  406664:	add    BYTE PTR [eax],al
  406666:	add    ecx,0x45523e74
  40666c:	das    
  40666d:	inc    ecx
  40666e:	jp     0x40663e
  406670:	out    0x45,eax
  406672:	arpl   WORD PTR [ebx+0x3],ax
  406675:	add    BYTE PTR [eax+0x5e],ch
  406678:	comiss xmm5,xmm0
  40667b:	push   cs
  40667c:	sub    esp,DWORD PTR [ebp+0x7c]
  40667f:	fld    QWORD PTR [ebx]
  406681:	push   ebx
  406682:	cmp    edx,DWORD PTR [ebx+0x6e]
  406685:	add    BYTE PTR [ebx-0x59],ah
  406688:	ret    
  406689:	je     0x4066e0
  40668b:	pop    ss
  40668c:	fwait
  40668d:	lea    esp,[esi+0x66e83332]
  406693:	xchg   DWORD PTR [ebx],eax
  406695:	add    BYTE PTR [ebx-0x697c4dbd],dh
  40669b:	dec    edx
  40669c:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  4066d0:	pop    ecx
  4066d1:	xchg   BYTE PTR [eax+eax*1],al
  4066d4:	arpl   WORD PTR [esi-0x1a67a1c6],bx
  4066da:	lds    edi,FWORD PTR [eax+0x39e63]
  4066e0:	mov    WORD PTR [esi+edi*1-0x37],ss
  4066e4:	and    BYTE PTR [edx-0x72],dl
  4066e7:	in     al,dx
  4066e8:	loopne 0x4066d4
  4066ea:	xchg   edx,eax
  4066eb:	adc    DWORD PTR [esi+0x6340e946],0xffffff9e
  4066f2:	movhlps xmm4,xmm0
  4066f5:	pop    ecx
  4066f6:	push   edi
  4066f7:	and    bl,BYTE PTR cs:[esi+0x1f6a7403]
  4066fe:	xlat   BYTE PTR ds:[ebx]
  4066ff:	mov    edi,0x3dd7d
  406704:	mov    cs:0x9e63015b,eax
  40670a:	add    ecx,ecx
  40670c:	mov    al,ds:0xa5fa3f19
  406711:	sahf   
  406712:	add    eax,esi
  406714:	and    ebx,DWORD PTR [ebp-0x5fdc39fd]
  40671a:	add    eax,esi
  40671c:	and    eax,DWORD PTR ds:0x45a503ea
  406722:	in     eax,0x3
  406724:	popf   
  406725:	inc    ebp
  406726:	in     al,dx
  406727:	(bad)  
  406728:	out    dx,eax
  406729:	dec    ecx
  40672a:	xchg   ebp,eax
  40672b:	xor    al,0xc9
  40672d:	add    eax,0x5b90413
  406732:	adc    eax,DWORD PTR [eax+eax*1]
	...
  406765:	add    BYTE PTR [ecx-0x34fbfcfb],bh
  40676b:	in     eax,0xea
  40676d:	add    esp,DWORD PTR [ebx+0x1f]
  406770:	or     DWORD PTR [esi],ebp
  406772:	popa   
  406773:	and    BYTE PTR [ebp+ebx*4+0x5bfc9493],0x4d
  40677b:	inc    esi
  40677c:	jmp    0xeb5a8a8d
  406781:	retf   0xcc20
  406784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406785:	xchg   ebx,eax
  406786:	arpl   WORD PTR ds:0x49ee03e9,ax
  40678c:	cmp    DWORD PTR [esp+esi*8],esi
  40678f:	sbb    DWORD PTR ds:0xf494632e,ebx
  406795:	push   edi
  406796:	xor    eax,0xa30ce946
  40679b:	sbb    esi,esp
  40679d:	rcr    BYTE PTR [esi],0x95
  4067a0:	jmp    0xfe45caa8
  4067a5:	push   cs
  4067a6:	iret   
  4067a7:	xchg   ebx,eax
  4067a8:	fadd   st(3),st
  4067aa:	lea    eax,[esi-0x17]
  4067ad:	mov    WORD PTR [esi],ds
  4067af:	xchg   ebp,eax
  4067b0:	mov    al,0xc4
  4067b2:	push   ss
  4067b3:	or     ch,0x84
  4067b6:	lahf   
  4067b7:	jl     0x40681d
  4067b9:	ds jmp 0x4067f0
  4067bc:	inc    ecx
  4067bd:	or     BYTE PTR [esi+eax*2-0x17],al
  4067c1:	stos   DWORD PTR es:[edi],eax
  4067c2:	and    ch,BYTE PTR [ebx+0x3398be]
  4067c8:	add    BYTE PTR [ecx+0x0],ch
	...
  4067fa:	add    BYTE PTR [eax],al
  4067fc:	ins    BYTE PTR es:[edi],dx
  4067fd:	or     eax,DWORD PTR [ebx+0x76f8e72c]
  406803:	adc    ah,ah
  406805:	dec    ecx
  406806:	lock cmp DWORD PTR [edi+0x60e9aaf2],esi
  40680d:	mov    al,al
  40680f:	adc    DWORD PTR [ecx-0x15d349fe],ebx
  406815:	xor    eax,0x9385370f
  40681a:	push   eax
  40681b:	out    0x92,al
  40681d:	dec    eax
  40681e:	std    
  40681f:	sbb    DWORD PTR [edx+0x5b],ebp
  406822:	inc    ebp
  406823:	gs jo  0x406828
  406826:	mov    dh,0xa4
  406828:	(bad)  
  406829:	xor    eax,0x8f5d9f0f
  40682e:	push   eax
  40682f:	fidiv  WORD PTR [edx+0x5b99f948]
  406835:	pop    ebx
  406836:	inc    ebp
  406837:	inc    ecx
  406838:	push   eax
  406839:	add    dh,BYTE PTR [edi+0xf35d2ac]
  40683f:	jbe    0x406876
  406841:	cdq    
  406842:	push   eax
  406843:	es pop ebp
  406845:	xchg   ebp,eax
  406846:	push   0x45fbf8
  40684b:	fs popf 
  40684d:	adc    DWORD PTR [eax+0x1],0xe900600b
  406854:	out    0xc9,eax
  406856:	xor    al,0x6c
  406858:	test   DWORD PTR [ecx+0x5c3b0150],eax
  40685e:	add    cl,ch
	...
  406890:	add    BYTE PTR [eax],al
  406892:	jo     0x406814
  406894:	inc    ebp
  406895:	jne    0x40690e
  406897:	sbb    eax,0x51e0e0c
  40689c:	call   0xffd32c39
  4068a1:	rcl    DWORD PTR [ebp*4-0x3f5aff01],0xc3
  4068a9:	push   ebp
  4068aa:	adc    DWORD PTR [ebp-0x7f],ebx
  4068ad:	les    esp,FWORD PTR [esi+0x7a]
  4068b0:	(bad)  
  4068b1:	call   FWORD PTR [ecx-0x1e]
  4068b4:	imul   eax,DWORD PTR [eax],0x75ff0950
  4068ba:	jb     0x40691a
  4068bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068bd:	aad    0xf5
  4068bf:	jns    0x40684a
  4068c1:	inc    ebp
  4068c2:	out    0xe0,al
  4068c4:	add    BYTE PTR [eax],al
  4068c6:	cmc    
  4068c7:	cmp    bh,bh
  4068c9:	jne    0x40691d
  4068cb:	pop    esi
  4068cc:	out    0xd4,eax
  4068ce:	mov    ch,0x7a
  4068d0:	push   0x64a9c
  4068d5:	lea    edi,[edi-0x7a000117]
  4068db:	(bad)  
  4068dd:	jnp    0x406931
  4068df:	jp     0x4068e0
  4068e1:	(bad)  
  4068e2:	jg     0x4068cd
  4068e4:	(bad)  
  4068e5:	jmp    DWORD PTR [ebp-0x5fffff3]
  4068eb:	jl     0x406872
  4068ed:	pusha  
  4068ee:	xor    eax,0xa250ff7a
  4068f3:	pop    eax
  4068f4:	test   eax,0x0
	...
  406925:	add    BYTE PTR [eax],al
  406927:	add    dl,bh
  406929:	sahf   
  40692a:	enter  0x282b,0x7c
  40692e:	mov    ebp,0xff7a7574
  406933:	jmp    0x40690e
  406935:	test   DWORD PTR [edi],edi
  406937:	add    BYTE PTR [edi+0x5],cl
  40693a:	mov    edx,0x5ba01
  40693f:	or     ebx,DWORD PTR [eax-0xb]
  406942:	add    al,dh
  406944:	mov    ebp,0x3b414705
  406949:	jno    0x4068cb
  40694b:	add    BYTE PTR [edx+0x63e57205],bh
  406951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406952:	ret    
  406953:	je     0x4069c2
  406955:	inc    esp
  406956:	js     0x406958
  406958:	arpl   WORD PTR [eax+ecx*4-0x69acfc7b],bx
  40695f:	call   DWORD PTR [ebx]
  406961:	pop    ebx
  406962:	adc    BYTE PTR [eax],cl
  406964:	mov    ebx,DWORD PTR [edx]
  406966:	scas   eax,DWORD PTR es:[edi]
  406967:	jmp    FWORD PTR [esi+esi*2+0x7]
  40696b:	push   0x63
  40696d:	test   BYTE PTR [ebx],0xff
  406970:	(bad)  
  406971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406972:	stos   DWORD PTR es:[edi],eax
  406973:	test   eax,0xe896802f
  406978:	push   ds
  406979:	mov    dl,BYTE PTR [esi+0x100fb3ff]
  40697f:	or     BYTE PTR [ebx+0x2],cl
  406982:	mov    al,0xff
  406984:	xor    al,0x7
  406986:	add    al,0x4
  406988:	arpl   WORD PTR [esi+0xe9ab],bx
	...
  4069be:	or     al,0x30
  4069c0:	xchg   esi,eax
  4069c1:	mov    esi,esp
  4069c3:	pop    edx
  4069c4:	xchg   esi,eax
  4069c5:	call   DWORD PTR [edi+eax*8]
  4069c8:	xchg   esi,eax
  4069c9:	add    esp,DWORD PTR [ebx-0x62]
  4069cc:	xchg   esi,eax
  4069cd:	mov    ch,0xa7
  4069cf:	iret   
  4069d0:	xchg   ebp,eax
  4069d1:	dec    DWORD PTR [ebx-0xb000c64]
  4069d7:	mov    BYTE PTR [ebx],0x4
  4069da:	arpl   WORD PTR [esi-0x6145ad55],bx
  4069e0:	add    edx,DWORD PTR [eax-0x24]
  4069e3:	xor    DWORD PTR [edi],esi
  4069e5:	call   esp
  4069e7:	call   DWORD PTR [ebp+0x20f65b75]
  4069ed:	aam    0xc4
  4069ef:	(bad)  
  4069f3:	sahf   
  4069f4:	add    edi,edi
  4069f6:	out    dx,al
  4069f7:	adc    BYTE PTR [esi+0x5105acff],0x3
  4069fe:	push   ebx
  4069ff:	add    eax,0x9632be9
  406a04:	jmp    0x801ef50c
  406a09:	add    al,0x63
  406a0b:	xor    eax,0x90274fc6
  406a10:	mov    esi,0xe11a7c95
  406a15:	stos   DWORD PTR es:[edi],eax
  406a16:	cmp    bh,BYTE PTR [ecx-0x35846a52]
  406a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a1d:	xchg   ebp,eax
  406a1e:	fs xor eax,0xf9e
	...
  406a54:	imul   ebx,DWORD PTR [ebp-0x6fab4e64],0xffffff81
  406a5b:	xor    ecx,DWORD PTR [ebp-0x70]
  406a5e:	xchg   BYTE PTR [edi-0x6a81d322],al
  406a64:	cmp    al,0x35
  406a66:	add    DWORD PTR [eax],ecx
  406a68:	test   BYTE PTR [esi-0x17],al
  406a6b:	stos   DWORD PTR es:[edi],eax
  406a6c:	(bad)  
  406a6d:	test   al,0x66
  406a6f:	xchg   ebp,eax
  406a70:	fimul  DWORD PTR [ecx-0x6fe36b4b]
  406a76:	push   0x57
  406a78:	scas   eax,DWORD PTR es:[edi]
  406a79:	nop
  406a7a:	dec    esi
  406a7b:	xchg   ebp,eax
  406a7c:	arpl   WORD PTR [ecx],bx
  406a7e:	lods   al,BYTE PTR ds:[esi]
  406a7f:	add    dh,0x2c
  406a82:	ds xchg ebp,eax
  406a84:	cld    
  406a85:	clc    
  406a86:	mov    edx,0x9189e1d7
  406a8b:	xchg   esp,eax
  406a8c:	in     al,dx
  406a8d:	(bad)  
  406a8e:	in     eax,dx
  406a8f:	xchg   esp,eax
  406a90:	scas   al,BYTE PTR es:[edi]
  406a91:	sub    al,0x1e
  406a93:	xchg   ebp,eax
  406a94:	fmul   QWORD PTR [edi+0x52cb0b9c]
  406a9a:	cmp    dl,BYTE PTR [ebp+0x3c5483cc]
  406aa0:	les    ecx,FWORD PTR [edi-0x6fb50002]
  406aa6:	add    dh,dh
  406aa8:	gs std 
  406aaa:	out    0x48,eax
  406aac:	repnz (bad) 
  406aae:	jmp    esi
  406ab0:	adc    eax,0xf7deff2d
  406ab5:	(bad)  
  406ab6:	mov    ch,0x3d
	...
  406ae8:	add    BYTE PTR [eax],al
  406aea:	out    dx,al
  406aeb:	(bad)  
  406aec:	dec    esi
  406aee:	pop    ebp
  406aef:	std    
  406af0:	out    0x8b,eax
  406af2:	ror    DWORD PTR [edi+0x1b64d2ff],cl
  406af8:	add    BYTE PTR [ebx+0x5f],al
  406afb:	nop
  406afc:	jne    0x406adf
  406afe:	mov    eax,0xcfa6d359
  406b03:	(bad)  
  406b04:	mov    ch,0x35
  406b06:	test   BYTE PTR [esi-0x47f47e01],0xff
  406b0d:	mov    ?,edi
  406b0f:	pop    eax
  406b10:	pop    esp
  406b11:	xchg   bh,ch
  406b13:	mov    gs,eax
  406b15:	mov    DWORD PTR [esi],ecx
  406b17:	(bad)  
  406b18:	inc    edx
  406b1a:	sti    
  406b1b:	sbb    eax,0x5a1be58
  406b20:	call   0x4623f6
  406b25:	jo     0x406ac4
  406b27:	loope  0x406b27
  406b29:	push   esi
  406b2a:	out    dx,eax
  406b2b:	cmp    BYTE PTR [ebp-0x710803],0xe9
  406b32:	push   esp
  406b33:	out    dx,eax
  406b34:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  406b36:	pop    es
  406b37:	inc    esi
  406b38:	add    BYTE PTR [esi],dh
  406b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b3b:	loope  0x406b3b
  406b3d:	xlat   BYTE PTR cs:[ebx]
  406b3f:	popf   
  406b40:	or     eax,0xb056051
  406b45:	sub    DWORD PTR [ebx+edi*8-0x74],ebp
  406b49:	jl     0x406afb
  406b4b:	(bad)  
  406b4c:	dec    DWORD PTR [esi]
	...
  406b7e:	add    BYTE PTR [eax],al
  406b80:	xchg   edx,eax
  406b81:	mov    ss,eax
  406b83:	add    cl,bh
  406b85:	std    
  406b86:	fidiv  DWORD PTR [ebp-0x32]
  406b89:	xchg   DWORD PTR [ebp-0x8d52d0],eax
  406b8f:	push   eax
  406b90:	bound  esi,QWORD PTR [edi-0xf45ff59]
  406b96:	and    ecx,DWORD PTR [ebp-0x146f9]
  406b9c:	lods   eax,DWORD PTR ds:[esi]
  406b9d:	fsin   
  406b9f:	jne    0x406b23
  406ba1:	push   0x45
  406ba3:	rcr    DWORD PTR [ebp-0x418a008e],cl
  406ba9:	jb     0x406c20
  406bab:	or     BYTE PTR [edx-0x42002c80],ah
  406bb1:	rcr    BYTE PTR [edx-0x37],cl
  406bb4:	mov    eax,0xd154fffd
  406bb9:	gs add esp,0xffff69e2
  406bc0:	scas   eax,DWORD PTR es:[edi]
  406bc1:	cmp    al,0xfc
  406bc3:	push   eax
  406bc4:	fucomp st(3)
  406bc6:	or     edi,edi
  406bc8:	test   ebx,0x6a4a4128
  406bce:	mov    edx,0xb023aa8
  406bd3:	shr    BYTE PTR ds:0xa00e77d,0x2
  406bda:	mov    DWORD PTR [ebp-0x4e],0xfa000009
  406be1:	mov    edx,0xf445
	...
  406c16:	popf   
  406c17:	cli    
  406c18:	(bad)  
  406c19:	call   DWORD PTR [eax]
  406c1b:	add    ch,BYTE PTR [edx+0x0]
  406c1e:	jg     0x406c9c
  406c20:	in     al,dx
  406c21:	idiv   DWORD PTR ds:0xfa6a5072
  406c27:	test   BYTE PTR [ebp-0xc],al
  406c2a:	sbb    al,BYTE PTR [ebp-0x109c0b7b]
  406c30:	xchg   edx,eax
  406c31:	push   DWORD PTR [ebx]
  406c33:	call   FWORD PTR [eax]
  406c35:	clc    
  406c36:	les    edx,FWORD PTR [eax]
  406c38:	(bad)
  406c3c:	add    al,0x0
  406c3e:	push   0xba0517dc
  406c43:	dec    eax
  406c44:	add    al,0x0
  406c46:	arpl   WORD PTR [ebx],bx
  406c48:	push   eax
  406c49:	in     al,dx
  406c4a:	xchg   esp,eax
  406c4b:	scas   al,BYTE PTR es:[edi]
  406c4c:	xchg   edx,eax
  406c4d:	add    DWORD PTR [edi],ecx
  406c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c50:	xchg   BYTE PTR [ebp-0x6d4981],bh
  406c56:	pop    esp
  406c57:	ror    BYTE PTR [eax],1
  406c59:	jmp    DWORD PTR [esi]
  406c5b:	les    ebx,FWORD PTR [esi-0x2c4cf44a]
  406c61:	inc    eax
  406c62:	arpl   WORD PTR [ecx],si
  406c64:	mov    ah,dh
  406c66:	ins    BYTE PTR es:[edi],dx
  406c67:	xchg   dx,ax
  406c69:	push   eax
  406c6a:	dec    ebx
  406c6b:	sbb    ebx,DWORD PTR [ebx+0x0]
  406c6e:	arpl   WORD PTR [edi+0x29d274c3],sp
  406c74:	mov    al,ch
  406c76:	dec    esp
  406c77:	test   BYTE PTR [edx+0x50],dl
	...
  406ca9:	add    BYTE PTR [eax],al
  406cab:	add    dh,ch
  406cad:	and    DWORD PTR [edi+0x331434f7],edx
  406cb3:	push   DWORD PTR [esi-0x72ca6d56]
  406cb9:	cmc    
  406cba:	inc    esp
  406cbb:	add    BYTE PTR [ebx],cl
  406cbd:	aaa    
  406cbe:	stos   DWORD PTR es:[edi],eax
  406cbf:	call   DWORD PTR [eax+ebp*4]
  406cc2:	ret    
  406cc3:	je     0x406c77
  406cc5:	and    eax,0x440cf088
  406cca:	xchg   edx,eax
  406ccb:	push   0xbea29e62
  406cd0:	hlt    
  406cd1:	dec    ecx
  406cd2:	sti    
  406cd3:	out    0xa1,eax
  406cd5:	lock xchg ecx,eax
  406cd7:	jmp    eax
  406cd9:	add    eax,0x8cd49f64
  406cde:	push   ds
  406cdf:	add    al,0x4e
  406ce1:	stc    
  406ce2:	add    BYTE PTR [ebx],0xcc
  406ce5:	adc    ah,cl
  406ce7:	fwait
  406ce8:	je     0x406ca1
  406cea:	push   es
  406ceb:	xchg   edx,eax
  406cec:	enter  0x92ff,0x4
  406cf0:	mov    ah,0x12
  406cf2:	loope  0x406c8f
  406cf4:	xor    BYTE PTR [edi+0x52a491ee],0xd1
  406cfb:	cdq    
  406cfc:	pushf  
  406cfd:	mov    esi,ds
  406cff:	push   edi
  406d00:	xchg   ebx,eax
  406d01:	xchg   esp,eax
  406d02:	(bad)  
  406d03:	xchg   ecx,eax
  406d04:	mov    WORD PTR [edx],ss
  406d06:	loope  0x406ca3
  406d08:	push   ds
  406d09:	mov    bh,0xc6
  406d0b:	xchg   ecx,eax
  406d0c:	jl     0x406d60
  406d0e:	mov    ecx,0x99
	...
  406d3f:	add    BYTE PTR [eax],al
  406d41:	add    BYTE PTR [esp+ecx*4-0x3f],dh
  406d45:	or     eax,0x91ae8c96
  406d4a:	push   ds
  406d4b:	lea    edx,[eax-0x6173a224]
  406d51:	xchg   ecx,eax
  406d52:	into   
  406d53:	mov    DWORD PTR [ecx-0x16fafb39],eax
  406d59:	mov    edx,0x36e8fd21
  406d5e:	call   0x4008d5fb
  406d63:	xchg   esp,eax
  406d64:	jbe    0x406cf7
  406d66:	fiadd  WORD PTR [ecx+0x6d]
  406d69:	xor    al,0x24
  406d6b:	adc    dh,ch
  406d6d:	nop
  406d6e:	push   esi
  406d6f:	xor    edx,DWORD PTR [eax]
  406d71:	inc    ebx
  406d72:	arpl   WORD PTR [ebp+0x5636985],bx
  406d78:	loop   0x406d3d
  406d7a:	push   esp
  406d7b:	sbb    BYTE PTR [edx+0x26056302],0x47
  406d82:	sti    
  406d83:	add    al,0x0
  406d85:	jmp    0xa50772ea
  406d8a:	int3   
  406d8b:	mov    eax,DWORD PTR [edi]
  406d8d:	jmp    0x93408cf2
  406d92:	pusha  
  406d93:	pop    ds
  406d94:	add    BYTE PTR [ebx+0x15457a60],al
  406d9a:	(bad)  
  406d9b:	jp     0x406d22
  406d9d:	std    
  406d9e:	fisttp DWORD PTR [ebx+0x11d399ff]
  406da4:	clc    
  406da5:	test   BYTE PTR [eax],0x0
	...
  406dd8:	push   ebp
  406dd9:	mov    eax,ebp
  406ddb:	outs   dx,DWORD PTR ds:[esi]
  406ddc:	cmp    eax,DWORD PTR ds:0x10a0f200
  406de2:	add    eax,0x49ad0
  406de7:	jmp    0x28693254
  406dec:	pop    edi
  406ded:	mov    WORD PTR [ebp-0xb],?
  406df0:	fsub   DWORD PTR [ebp-0x28]
  406df3:	mov    esi,0x998b34d3
  406df8:	in     eax,dx
  406df9:	xor    esp,0x508bd3b6
  406dff:	cmp    edi,edi
  406e01:	je     0x406ddb
  406e03:	sahf   
  406e04:	repz jl 0x406d8c
  406e07:	cdq    
  406e08:	jmp    0x406d94
  406e0a:	inc    DWORD PTR [ecx-0x79004e05]
  406e10:	pop    esi
  406e11:	add    eax,0x4610e568
  406e16:	add    BYTE PTR [esi-0x6b],dh
  406e19:	xchg   ebp,eax
  406e1a:	imul   DWORD PTR [esi-0x2d]
  406e1d:	mov    dh,BYTE PTR ds:0x4639bf
  406e23:	push   ecx
  406e24:	retf   
  406e25:	mov    dl,0xff
  406e27:	push   esi
  406e28:	mov    DWORD PTR [eax-0x750ca91c],eax
  406e2e:	push   0x0
  406e30:	or     ch,bh
  406e32:	or     al,0x30
  406e34:	retf   
  406e35:	push   es
  406e36:	push   DWORD PTR [ebp-0x92d6]
	...
  406e6c:	add    BYTE PTR [eax],al
  406e6e:	xor    eax,0xb2955b3
  406e73:	pop    es
  406e74:	call   0xffb5fc42
  406e79:	mov    DWORD PTR [edi],edi
  406e7b:	push   0xfffffff7
  406e7d:	call   DWORD PTR [ebp-0x18]
  406e80:	jmp    DWORD PTR [edi-0x64]
  406e83:	mov    dh,0x40
  406e85:	add    BYTE PTR [ebp-0x4a080fd0],dh
  406e8b:	jp     0x406e8c
  406e8d:	xor    eax,0x40afcc
  406e92:	mov    dl,0x2e
  406e94:	xlat   BYTE PTR ds:[ebx]
  406e95:	push   DWORD PTR [ebp-0x52177af8]
  406e9b:	jp     0x406e9c
  406e9d:	adc    edi,0x5d
  406ea0:	idiv   edi
  406ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ea3:	add    DWORD PTR [ecx+ecx*2+0x9],esi
  406ea7:	xor    al,0xec
  406ea9:	div    DWORD PTR [ebp+0x3a74007a]
  406eaf:	xchg   BYTE PTR [ebp-0x860218],bh
  406eb5:	add    BYTE PTR [esi-0x4e],ch
  406eb8:	add    BYTE PTR [bp+si],bh
  406ebb:	imul   edi,DWORD PTR [esi-0x18769001],0xffffffee
  406ec2:	fidivr DWORD PTR [ecx-0x1]
  406ec5:	jmp    FWORD PTR [edi+0x65]
  406ec8:	idiv   edi
  406eca:	mov    ch,0x7a
  406ecc:	jne    0x406ed6
  406ece:	loop   0x406f16
  406ed0:	sar    edi,1
	...
  406f02:	add    BYTE PTR [eax],al
  406f04:	test   DWORD PTR [edx-0x4b],edi
  406f07:	call   0x3fe9b9
  406f0c:	arpl   WORD PTR [ecx-0x32b01805],bp
  406f12:	mov    ?,edi
  406f14:	cld    
  406f15:	or     BYTE PTR [eax-0x71350b09],ch
  406f1b:	jne    0x406f78
  406f1d:	inc    esp
  406f1e:	out    0xd0,al
  406f20:	in     al,0xda
  406f22:	mov    ?,WORD PTR [ebp-0x711539]
  406f28:	retf   
  406f29:	stos   DWORD PTR es:[edi],eax
  406f2a:	mov    bh,0xff
  406f2c:	int3   
  406f2d:	repnz pop eax
  406f2f:	in     al,dx
  406f30:	int3   
  406f31:	cli    
  406f32:	mov    gs,eax
  406f34:	xchg   al,ch
  406f36:	mov    ?,edi
  406f38:	mov    ah,0xd0
  406f3a:	fwait
  406f3b:	imul   DWORD PTR [edx+edx*4-0x6570e565]
  406f42:	mov    ?,edi
  406f44:	(bad)  
  406f45:	stos   DWORD PTR es:[edi],eax
  406f46:	xchg   esi,eax
  406f47:	call   DWORD PTR [edx+ebp*4+0x787b0818]
  406f4e:	(bad)  
  406f4f:	inc    DWORD PTR [edx+edi*4-0x3d8b0fa8]
  406f56:	mov    gs,eax
  406f58:	bound  esi,QWORD PTR [eax-0x72]
  406f5b:	jmp    FWORD PTR [eax+ebx*8-0x75]
  406f5f:	jmp    0xffcec90b
  406f64:	pop    esp
  406f65:	jmp    0x0:0xe88f
	...
  406f98:	add    BYTE PTR [eax],al
  406f9a:	test   al,0x40
  406f9c:	add    eax,DWORD PTR [eax]
  406f9e:	sbb    bl,BYTE PTR [ebp-0x5]
  406fa1:	jmp    FWORD PTR [edi+0x27839f23]
  406fa7:	sbb    DWORD PTR [ecx],0x0
  406faa:	leave  
  406fab:	popf   
  406fac:	mov    ?,WORD PTR [ebp+0x5b]
  406faf:	xchg   dl,dh
  406fb1:	shl    BYTE PTR [eax+ebx*1],1
  406fb4:	jl     0x406ffb
  406fb6:	pop    ds
  406fb7:	push   es
  406fb8:	rcl    DWORD PTR [edi],1
  406fba:	inc    esp
  406fbb:	inc    esi
  406fbc:	jmp    0x413e064f
  406fc1:	daa    
  406fc2:	add    eax,0xd01b4e89
  406fc7:	fsub   DWORD PTR [edi-0xeed0bfd]
  406fcd:	fwait
  406fce:	xchg   esp,eax
  406fcf:	xchg   DWORD PTR [esi],esi
  406fd1:	mov    ?,WORD PTR [ebx+0x54]
  406fd4:	inc    BYTE PTR [ebx+eiz*2-0x78]
  406fd8:	pushf  
  406fd9:	sti    
  406fda:	mov    esp,0xcc8e1bc9
  406fdf:	sbb    eax,0x523de32
  406fe4:	push   cs
  406fe5:	sbb    BYTE PTR [ebx-0x63],ch
  406fe8:	(bad)  
  406fe9:	nop
  406fea:	mov    ah,0x88
  406fec:	(bad)  
  406fed:	pop    ss
  406fee:	scas   eax,DWORD PTR es:[edi]
  406fef:	mov    BYTE PTR [ebx+edi*8-0x44],bh
  406ff3:	lock pop ss
  406ff5:	mov    ds,WORD PTR [esi+edi*4+0x326308ab]
  406ffc:	jb     0x406f9e
	...
  40702e:	add    BYTE PTR [eax],al
  407030:	sti    
  407031:	add    al,0xe9
  407033:	pushf  
  407034:	lds    ecx,FWORD PTR [eax+0x127c0054]
  40703a:	icebp  
  40703b:	fwait
  40703c:	pop    es
  40703d:	xchg   edx,eax
  40703e:	mov    esi,0xe1c39a8d
  407043:	add    ecx,DWORD PTR [esi]
  407045:	jl     0x407004
  407047:	sbb    esi,0xe0fce8f9
  40704d:	loop   0x407036
  40704f:	add    esp,DWORD PTR [ebx-0x78]
  407052:	sbb    al,0x0
  407054:	cmp    ebp,DWORD PTR [ebx]
  407056:	scas   eax,DWORD PTR es:[edi]
  407057:	lea    edi,[esp+edi*8]
  40705a:	test   al,0x17
  40705c:	push   ebx
  40705d:	sbb    eax,0x5a3dca6
  407062:	add    BYTE PTR [esi+0x4c],dh
  407065:	stc    
  407066:	out    0x22,eax
  407068:	(bad)  
  407069:	xchg   edi,edi
  40706b:	jo     0x407009
  40706d:	stc    
  40706e:	imul   ebp,ecx,0xa8304568
  407074:	pusha  
  407075:	sbb    eax,0x5a0194b
  40707a:	(bad)  
  40707b:	cld    
  40707c:	fiadd  WORD PTR cs:[eax-0x17]
  407080:	enter  0xd62e,0x36
  407084:	(bad)  
  407085:	sti    
  407086:	mov    edi,0x5037ceb5
  40708b:	es ins BYTE PTR es:[edi],dx
  40708d:	stc    
  40708e:	out    0x2e,eax
  407090:	adc    eax,0xb9ff88
	...
  4070c5:	add    BYTE PTR [eax-0x271e8a78],dl
  4070cb:	jne    0x4070cc
  4070cd:	push   es
  4070ce:	out    0x9c,al
  4070d0:	and    DWORD PTR [edx],ebx
  4070d2:	fiadd  WORD PTR [edi-0x780c2a18]
  4070d8:	inc    DWORD PTR [ebx+0x19401d60]
  4070de:	and    BYTE PTR ds:0x44b73268,al
  4070e4:	add    BYTE PTR [ecx+0x61],al
  4070e7:	add    eax,0xe6d86900
  4070ec:	aad    0xc6
  4070ee:	out    0xfb,eax
  4070f0:	mov    edi,0x50377d35
  4070f5:	mov    dh,0x4d
  4070f7:	stc    
  4070f8:	out    0x56,eax
  4070fa:	push   ss
  4070fb:	xchg   edi,edi
  4070fd:	cmp    DWORD PTR [edi-0x170e8a7a],ecx
  407103:	sub    al,0xff
  407105:	xchg   esi,eax
  407106:	xlat   BYTE PTR ds:[ebx]
  407107:	popf   
  407108:	jmp    0xe8c760c8
  40710d:	add    dh,ah
  40710f:	push   esp
  407110:	(bad)  
  407111:	call   DWORD PTR [eax+0x1]
  407114:	push   0x43ea40
  407119:	push   0x40b31c
  40711e:	jge    0x4070cf
  407120:	push   ebp
  407121:	sub    DWORD PTR [ebx+0x47e5e802],edi
  407127:	jns    0x407128
  407129:	or     eax,DWORD PTR [eax]
	...
  40715b:	add    BYTE PTR [edx-0x12],cl
  40715e:	sbb    eax,0x7579da50
  407163:	or     al,0x92
  407165:	fcom   st(5)
  407167:	jmp    FWORD PTR ds:0x17ff4fd2
  40716d:	mov    esp,edi
  40716f:	and    BYTE PTR [ebp+0x79],bh
  407172:	(bad)  
  407173:	call   0x3fc5a2
  407178:	bound  ebp,QWORD PTR ds:0xec6dffd2
  40717e:	jmp    DWORD PTR [edi+0xa]
  407181:	mov    bl,0x40
  407183:	add    dl,dl
  407185:	call   0xeafab2b9
  40718a:	add    DWORD PTR [eax],eax
  40718c:	mov    al,BYTE PTR [edx+0x7ad7ade8]
  407192:	dec    DWORD PTR [ebx]
  407194:	mov    edx,0x4a501df5
  407199:	jp     0x407210
  40719b:	or     al,0xa2
  40719d:	mov    ds:0xd19dffd5,eax
  4071a2:	dec    edi
  4071a3:	push   DWORD PTR [edi]
  4071a5:	mov    edi,esp
  4071a7:	call   0xe93fec58
  4071ac:	xchg   edx,eax
  4071ad:	dec    edi
  4071ae:	(bad)  
  4071af:	push   edx
  4071b1:	in     eax,dx
  4071b2:	sar    edi,1
  4071b4:	in     eax,dx
  4071b5:	call   0xdda3a1d9
  4071ba:	add    edi,edi
  4071bc:	mov    dh,0xa8
  4071be:	fwait
  4071bf:	add    eax,0x0
	...
  4071f0:	add    BYTE PTR [eax],al
  4071f2:	or     eax,0x93508b7f
  4071f7:	pop    es
  4071f8:	adc    DWORD PTR [eax],ecx
  4071fa:	cmp    edx,DWORD PTR [edi-0x76]
  4071fd:	call   FWORD PTR [esp+eax*4]
  407200:	xor    edx,edx
  407202:	adc    al,0x1f
  407204:	mov    esi,DWORD PTR [ebp+0x5f]
  407207:	xor    al,0x3b
  407209:	rol    BYTE PTR [edi+ebp*1],cl
  40720c:	mov    ebp,0x309c6bc2
  407211:	mov    eax,DWORD PTR [edi]
  407213:	sbb    eax,eax
  407215:	hlt    
  407216:	jns    0x4071b4
  407218:	sbb    eax,0xfb48e402
  40721d:	out    0x52,eax
  40721f:	out    0x8a,eax
  407221:	(bad)  
  407222:	jmp    0x39d:0x66688758
  407229:	add    BYTE PTR [ebx-0x43004aa6],bh
  40722f:	and    al,0x41
  407231:	clc    
  407232:	dec    ebx
  407233:	cwde   
  407234:	add    al,0x0
  407236:	arpl   WORD PTR [edi-0x1c4407f0],ax
  40723c:	data16 add BYTE PTR [ebx-0x5d],ah
  407240:	ret    
  407241:	je     0x4072b2
  407243:	loope  0x407244
  407245:	add    BYTE PTR [ebx-0x64],ah
  407248:	adc    cl,BYTE PTR ds:0xff8c2884
  40724e:	mul    BYTE PTR [ebx-0x418a7765]
  407254:	mov    ch,bl
	...
  407286:	add    BYTE PTR [eax],al
  407288:	pop    ebx
  407289:	inc    edi
  40728a:	adc    al,bh
  40728c:	jnp    0x4072dd
  40728e:	mov    ah,0xff
  407290:	pop    esp
  407291:	leave  
  407292:	(bad)  
  407294:	lahf   
  407295:	add    eax,0xd64c8abf
  40729a:	popf   
  40729b:	adc    BYTE PTR [ebx+0x6d],bl
  40729e:	pop    es
  40729f:	mov    bh,BYTE PTR [eax*4+0x3a3cee03]
  4072a6:	lahf   
  4072a7:	mov    ch,BYTE PTR [ecx+edx*1]
  4072aa:	test   eax,0xc4ed4f0f
  4072af:	shl    DWORD PTR [ebx+0x2a9c1905],cl
  4072b5:	pop    ebx
  4072b6:	data16 mov dh,BYTE PTR [ebx-0x3042b7c]
  4072bd:	aam    0x56
  4072bf:	mov    bh,ah
  4072c1:	out    dx,eax
  4072c2:	or     DWORD PTR [esi+ecx*2+0x588a465b],ebx
  4072c9:	inc    ebp
  4072ca:	mov    ch,0xef
  4072cc:	jl     0x4072ff
  4072ce:	stc    
  4072cf:	inc    esp
  4072d0:	arpl   bp,dx
  4072d2:	inc    eax
  4072d3:	pop    ebp
  4072d4:	scas   al,BYTE PTR es:[edi]
  4072d5:	test   BYTE PTR [esi],ah
  4072d7:	xor    ecx,esp
  4072d9:	cli    
  4072da:	lock fwait
  4072dc:	xchg   ebx,eax
  4072dd:	adc    DWORD PTR [esi],0xffffff8a
  4072e0:	dec    ecx
  4072e1:	and    DWORD PTR [ecx],eax
  4072e3:	xchg   ecx,eax
  4072e4:	mov    es,WORD PTR [esi+eax*1-0x2b061302]
  4072eb:	sbb    eax,DWORD PTR [eax]
	...
  40731d:	add    BYTE PTR [edi+0x35],dh
  407320:	test   al,0x3
  407322:	xor    ebp,DWORD PTR [ebp+0x62]
  407325:	mov    al,0x94
  407327:	test   BYTE PTR [ecx],bh
  407329:	mov    DWORD PTR [esi],edx
  40732b:	or     eax,0x8486f3d1
  407330:	(bad)  
  407331:	push   ds
  407332:	arpl   bp,bp
  407334:	adc    edx,esp
  407336:	and    eax,DWORD PTR ds:0xc6333d51
  40733c:	call   0x1ba1c9
  407341:	jmp    DWORD PTR [eax+0x1359e805]
  407347:	test   bh,bh
  407349:	cmp    edx,ebx
  40734b:	stc    
  40734c:	pop    es
  40734d:	xchg   ecx,eax
  40734e:	lock cmp edi,0x68055d96
  407355:	sub    DWORD PTR [edi],ecx
  407357:	vmovsd xmm5,QWORD PTR [esi+0x35]
  40735c:	inc    ecx
  40735d:	jmp    0xc096ad3d
  407362:	mov    eax,ds:0xc4f9e805
  407367:	cmp    edi,0xfffffff2
  40736a:	and    cl,bh
  40736c:	adc    eax,0xff794470
  407371:	fsub   st(4),st
  407373:	xor    DWORD PTR [ebp-0x1f],0xffffffd8
  407377:	mov    ch,0xfd
  407379:	inc    esi
  40737a:	fiadd  DWORD PTR [ebx+0x42c73575]
  407380:	shl    DWORD PTR [esi],1
	...
  4073b2:	add    BYTE PTR [eax],al
  4073b4:	jmp    0x4133:0xa5c0ffee
  4073bb:	jmp    0xa8706728
  4073c0:	pusha  
  4073c1:	test   BYTE PTR ds:0xffc499bf,dh
  4073c7:	add    BYTE PTR [edx+0x7706ff57],ch
  4073cd:	test   BYTE PTR [ebp-0xf],dh
  4073d0:	enter  0xfda4,0xf6
  4073d4:	jmp    0x4073c4
  4073d6:	inc    DWORD PTR [eax-0x16becae0]
  4073dc:	push   0x5f282ff3
  4073e1:	test   BYTE PTR ds:0xffc4983f,dh
  4073e7:	ror    BYTE PTR [ebx-0x5aff00a9],0x80
  4073ee:	mov    edi,0x44fe8c74
  4073f3:	hlt    
  4073f4:	adc    eax,0x8ffff414
  4073f9:	and    edi,0xff8e0760
  4073ff:	jmp    FWORD PTR [edi-0x6b]
  407402:	call   0xffce6ef4
  407407:	push   0x4a
  407409:	pop    ds
  40740a:	xor    eax,0x68097b30
  40740f:	dec    ebx
  407410:	jmp    0x7:0x867ffc7
  407417:	add    BYTE PTR [eax],0x0
	...
  40744a:	loop   0x4073e9
  40744c:	sar    edi,cl
  40744e:	test   DWORD PTR [esi],esi
  407450:	push   DWORD PTR [ebp+0x12]
  407453:	lahf   
  407454:	push   eax
  407455:	std    
  407456:	xchg   ebp,eax
  407457:	lea    ebp,[edx+0x0]
  40745a:	and    al,bh
  40745c:	das    
  40745d:	inc    ecx
  40745e:	cli    
  40745f:	push   ds
  407460:	dec    ebx
  407461:	xor    BYTE PTR [ebx-0x35fd97fa],bh
  407467:	push   es
  407468:	sub    al,0x7a
  40746b:	mov    ecx,0x46d1ffff
  407470:	je     0x407488
  407472:	push   ebx
  407473:	inc    ebx
  407474:	hlt    
  407475:	(bad)  
  407476:	fist   WORD PTR [edx-0x613d8a01]
  40747c:	adc    ebp,edi
  40747e:	gs (bad) 
  407480:	push   DWORD PTR [ebp-0x52]
  407483:	lahf   
  407484:	sahf   
  407485:	rcl    BYTE PTR [ebp-0x1dff9576],1
  40748b:	push   ebx
  40748c:	das    
  40748d:	inc    ecx
  40748e:	jp     0x4074ae
  407490:	outs   dx,BYTE PTR ds:[esi]
  407491:	xor    BYTE PTR [ebx],bh
  407493:	or     DWORD PTR [eax+0x2],ebp
  407496:	arpl   WORD PTR [ebx+eax*1-0x80],bp
  40749a:	mov    ecx,DWORD PTR [ebx+esi*4-0x78e39301]
  4074a1:	jne    0x4074fe
  4074a3:	push   esp
  4074a4:	add    eax,0x1abb5cfd
  4074a9:	add    bl,cl
  4074ab:	sub    al,0xd4
  4074ad:	inc    eax
	...
  4074de:	add    BYTE PTR [eax],al
  4074e0:	arpl   WORD PTR [esi+edx*1],dx
  4074e3:	xor    BYTE PTR [edx+0x63021b6c],ah
  4074e9:	ins    BYTE PTR es:[edi],dx
  4074ea:	sub    eax,0xffffffe2
  4074ed:	mov    esi,0xac58ff87
  4074f2:	adc    BYTE PTR [esi],dl
  4074f4:	fisubr DWORD PTR [eax]
  4074f6:	nop
  4074f7:	call   DWORD PTR [esi+0x6b758700]
  4074fd:	test   dl,al
  4074ff:	cld    
  407500:	or     al,0xeb
  407502:	xchg   BYTE PTR [ebp+0xf],dh
  407505:	aam    0x36
  407507:	sar    ah,1
  407509:	fiadd  DWORD PTR [esi+0x10d2f775]
  40750f:	or     bl,bh
  407511:	sub    eax,0x34e4ffb9
  407516:	ret    0x6304
  407519:	mov    eax,ds:0x6c4bec7a
  40751e:	add    ebp,edi
  407520:	or     eax,0xc40c112b
  407525:	cwde   
  407526:	sti    
  407527:	out    0x54,eax
  407529:	push   ds
  40752a:	xchg   edi,edi
  40752c:	stos   BYTE PTR es:[edi],al
  40752d:	sub    eax,0xf717fffc
  407532:	xchg   edi,eax
  407533:	sbb    DWORD PTR [edi-0x630079c9],0x95b88132
  40753d:	jb     0x4074c5
  40753f:	add    BYTE PTR [ebx+0x5],ah
  407542:	jmp    0x40754a
	...
  407573:	add    BYTE PTR [eax],al
  407575:	add    al,bl
  407577:	(bad)  
  407578:	in     al,dx
  407579:	cli    
  40757a:	mov    esp,0x3b83ebf8
  40757f:	add    eax,0xdb7a0154
  407584:	out    0x3,eax
  407586:	arpl   WORD PTR [edx+0x7044f834],ax
  40758c:	xchg   ebx,eax
  40758d:	xchg   BYTE PTR [ebp+ecx*1-0x57],dl
  407591:	adc    BYTE PTR [ebp+ebp*8+0x60],bl
  407595:	xlat   BYTE PTR ds:[ebx]
  407596:	mov    ds:0x6f109e05,eax
  40759b:	ins    DWORD PTR es:[edi],dx
  40759c:	bound  esi,QWORD PTR [edx-0x77d7ecc]
  4075a2:	(bad)
  4075a6:	arpl   WORD PTR [eax+0x204f7f4],ax
  4075ac:	call   0xd4b:0x648f1486
  4075b3:	and    DWORD PTR [esi+0x1b],0x3e90645
  4075ba:	out    dx,al
  4075bb:	mov    ch,BYTE PTR [ebx]
  4075bd:	test   esp,esi
  4075bf:	cmp    BYTE PTR [ecx+0x4650f79b],0x86
  4075c6:	(bad)  
  4075c7:	mov    ch,BYTE PTR [ebx]
  4075c9:	test   esp,ebx
  4075cb:	sbb    BYTE PTR [ecx+0x2fbe0e86],0x86
  4075d2:	int3   
  4075d3:	ins    DWORD PTR es:[edi],dx
  4075d4:	fldenv [ebx+eiz*2+0x5]
  4075d8:	jo     0x40755a
	...
  40760a:	add    BYTE PTR [eax],al
  40760c:	(bad)  
  40760d:	jg     0x407625
  40760f:	xchg   BYTE PTR [ebx],ah
  407611:	adc    BYTE PTR [ebp-0x76],ah
  407614:	arpl   WORD PTR ds:0x43ce78e9,ax
  40761a:	inc    DWORD PTR [ebp-0x14ff8764]
  407620:	nop
  407621:	cmp    bh,0xe9
  407624:	pop    esp
  407625:	jmp    0x9a67:0xd0ab2b8c
  40762c:	fwait
  40762d:	(bad)  
  407630:	ins    BYTE PTR es:[edi],dx
  407631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407632:	add    cl,ch
  407634:	imul   eax,eax,0x75
  407637:	in     al,dx
  407638:	leave  
  407639:	mov    dh,0x0
  40763b:	jmp    0xabd608a0
  407640:	fnstsw WORD PTR [edi-0x1]
  407643:	pop    esp
  407644:	mov    eax,ds:0x94115031
  407649:	xor    DWORD PTR [ecx-0x17],eax
  40764c:	fdiv   DWORD PTR [eax+eiz*4-0x17]
  407650:	pusha  
  407651:	or     al,0xc0
  407653:	adc    al,0x2c
  407655:	ins    DWORD PTR es:[edi],dx
  407656:	xchg   esp,eax
  407657:	jmp    0xa6a87bbc
  40765c:	aas    
  40765d:	(bad)  
  407660:	fs adc eax,ebp
  407663:	jbe    0x407636
  407665:	jg     0x407666
  407667:	je     0x4076dd
  407669:	inc    ebx
  40766a:	(bad)  
  40766b:	pop    esi
  40766c:	out    0x91,al
  40766e:	push   edx
  40766f:	add    eax,0x0
	...
  4076a0:	add    BYTE PTR [eax],al
  4076a2:	xor    ebp,edx
  4076a4:	out    0x12,eax
  4076a6:	mov    dl,0x7f
  4076a8:	call   FWORD PTR [ecx-0x66f00621]
  4076ae:	out    0xf9,eax
  4076b0:	pop    es
  4076b1:	inc    ecx
  4076b2:	sar    DWORD PTR [esi-0x1],1
  4076b5:	cs out dx,eax
  4076b7:	ss iret 
  4076b9:	fisubr WORD PTR es:[ebx+0x63]
  4076bd:	ins    BYTE PTR es:[edi],dx
  4076be:	and    DWORD PTR [ecx],esi
  4076c0:	mov    DWORD PTR [ebx+edx*1+0x7f],ebp
  4076c4:	dec    DWORD PTR [esi]
  4076c6:	dec    edi
  4076c7:	mov    ebx,0x3fb0030
  4076cc:	push   DWORD PTR [ebp-0x78aa]
  4076d2:	(bad)  
  4076d4:	mov    al,ds:0xbf7c7a00
  4076d9:	je     0x40770f
  4076db:	and    edi,eax
  4076dd:	sub    BYTE PTR [ebx+0x9],cl
  4076e0:	push   DWORD PTR [ebp+0x7e]
  4076e3:	fwait
  4076e4:	test   eax,0xff889dd2
  4076e9:	mov    ch,0xe6
  4076eb:	mov    edi,edi
  4076ed:	(bad)  
  4076ee:	jp     0x407691
  4076f0:	icebp  
  4076f1:	ror    BYTE PTR ds:0xb950508a,cl
  4076f7:	pop    es
  4076f8:	adc    BYTE PTR [eax],al
  4076fa:	data16 jbe 0x407764
  4076fd:	cdq    
  4076fe:	sbb    al,ah
  407700:	dec    DWORD PTR [edi-0x1e]
  407703:	add    DWORD PTR [ecx+0x0],esp
	...
  407735:	add    BYTE PTR [eax],al
  407737:	add    BYTE PTR [edx],bh
  407739:	sahf   
  40773a:	add    eax,0x33bb8
  40773f:	add    BYTE PTR [eax+0x7c],al
  407742:	mov    edi,0xff350374
  407747:	jne    0x40774b
  407749:	fwait
  40774a:	xchg   esi,eax
  40774b:	(bad)  
  40774c:	jge    0x4076d7
  40774e:	call   0xffc9c424
  407753:	lea    eax,[edi-0x620001bc]
  407759:	xor    bh,bh
  40775b:	mov    ch,0xde
  40775d:	mov    bh,bh
  40775f:	push   DWORD PTR [edx]
  407761:	inc    ecx
  407762:	mov    al,ds:0xbfffca00
  407767:	cmova  esi,DWORD PTR [edx-0x2]
  40776b:	(bad)  
  40776c:	jge    0x4076f7
  40776e:	mov    ch,0xbc
  407770:	pop    esp
  407771:	mov    edi,edi
  407773:	call   0xa3c9db
  407778:	arpl   WORD PTR [edi],cx
  40777a:	dec    esi
  40777b:	mov    eax,0xe88407a5
  407780:	ret    0x842e
  407783:	jmp    FWORD PTR [edx+0x37fff72a]
  407789:	jecxz  0x407721
  40778b:	sbb    DWORD PTR [edi+0x7f454b68],0x6c
  407792:	add    eax,DWORD PTR [eax]
  407794:	arpl   WORD PTR [edi-0x7],dx
  407797:	or     edi,DWORD PTR [ebx-0x49]
  40779a:	push   esi
  40779b:	inc    DWORD PTR [eax]
	...
  4077cd:	add    BYTE PTR [ebx+esi*2+0x43],ah
  4077d1:	je     0x40784c
  4077d3:	cmc    
  4077d4:	enter  0x54fb,0x41
  4077d8:	adc    al,0xff
  4077da:	(bad)  
  4077db:	mov    al,0x6c
  4077dd:	adc    eax,0x5083a731
  4077e2:	cmp    al,0x19
  4077e4:	sub    al,0xc6
  4077e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077e8:	cmp    edi,0xffffffdc
  4077eb:	sub    BYTE PTR [eax-0x6789d96],al
  4077f1:	sti    
  4077f2:	sbb    al,0x79
  4077f4:	or     ebp,eax
  4077f6:	dec    edi
  4077f7:	test   BYTE PTR [edx+0x7f790cff],0xe8
  4077fe:	scas   al,BYTE PTR es:[edi]
  4077ff:	ss cmp edi,0x2a
  407803:	sub    dl,BYTE PTR [eax]
  407805:	add    BYTE PTR [esi+0x27816fe3],cl
  40780b:	fadd   QWORD PTR [ecx+0x351e4ff]
  407811:	push   0x60
  407813:	aas    
  407814:	stc    
  407815:	pop    es
  407816:	retf   
  407817:	mov    edi,0xe4ccff4e
  40781c:	enter  0x3bfb,0x5
  407820:	in     eax,dx
  407821:	add    al,0x63
  407823:	add    eax,0x7eac896c
  407828:	push   ss
  407829:	adc    DWORD PTR [ebx],0x6d
  40782c:	xor    eax,0xf20563a3
  407831:	inc    ebx
	...
  407862:	add    BYTE PTR [eax],al
  407864:	ins    BYTE PTR es:[edi],dx
  407865:	mov    DWORD PTR [edx+0x4],ecx
  407868:	arpl   WORD PTR ds:0x56207b4,ax
  40786e:	jmp    0xe9dd5485
  407873:	add    esp,DWORD PTR [ebx-0x13]
  407876:	xchg   edi,eax
  407877:	xor    esp,DWORD PTR [edx]
  407879:	add    eax,0x7e748864
  40787e:	into   
  40787f:	adc    BYTE PTR [ebx],0x6d
  407882:	mov    dl,BYTE PTR [esp+ebx*2+0x7d]
  407886:	jo     0x407810
  407888:	push   ebx
  407889:	jl     0x407841
  40788b:	or     BYTE PTR [ebx+esi*4-0x47],0x81
  407890:	inc    esp
  407891:	jge    0x4078a4
  407893:	or     BYTE PTR [edx+0x5],ah
  407896:	jmp    0x97b5572b
  40789b:	sub    BYTE PTR [esi+edx*8],0x0
  40789f:	dec    ebp
  4078a0:	jnp    0x407868
  4078a2:	call   0x28769f92
  4078a7:	add    al,0x8b
  4078a9:	mov    esp,0x650cc4b9
  4078ae:	arpl   WORD PTR [edx+0x43f20563],sp
  4078b4:	ja     0x4078cc
  4078b6:	rol    DWORD PTR [ebx],cl
  4078b8:	out    0x82,al
  4078ba:	pop    esi
  4078bb:	sub    esp,0x6e82b97c
  4078c1:	or     eax,0x7cde9d51
  4078c6:	add    BYTE PTR ds:[eax],0x0
	...
  4078fa:	push   cs
  4078fb:	jbe    0x4078fd
  4078fd:	aaa    
  4078fe:	loope  0x40797c
  407900:	push   0x55fe5
  407905:	je     0x4078f2
  407907:	je     0x407907
  407909:	push   ds
  40790a:	loope  0x4078e1
  40790c:	and    BYTE PTR [bx+si-0x3a],bh
  407910:	inc    DWORD PTR [eax-0x16becaea]
  407916:	mov    BYTE PTR [ebx+0x6d60a830],bh
  40791c:	dec    edi
  40791d:	push   esi
  40791e:	pusha  
  40791f:	add    eax,0x158c290b
  407924:	push   0xffffffe9
  407926:	in     eax,dx
  407927:	xor    bh,0xdf
  40792a:	loop   0x4079a8
  40792c:	push   eax
  40792d:	(bad)  
  40792e:	je     0x407934
  407930:	call   0xffbc5d63
  407935:	(bad)  
  407936:	adc    al,0x75
  407938:	(bad)  
  407939:	mov    esi,0xa47d6ce2
  40793e:	loop   0x4079bb
  407940:	push   0x2
  407942:	mov    bh,0x42
  407944:	shl    DWORD PTR [esi+0x15c00fe2],1
  40794a:	sub    ebp,0xffffff9f
  40794d:	fldenv [ecx]
  40794f:	jl     0x4079a0
  407951:	add    DWORD PTR ds:0x3786ff55,0xe218ffee
  40795b:	icebp  
  40795c:	pop    es
  40795d:	add    DWORD PTR [eax],0x0
	...
  40798f:	add    BYTE PTR [ebp+0x7a],dl
  407992:	jmp    FWORD PTR [esi+0x77]
  407995:	ror    esp,cl
  407997:	data16 loop 0x407986
  40799a:	mov    ds,WORD PTR [ecx]
  40799c:	and    BYTE PTR [ecx+ebp*2-0xd],bh
  4079a0:	jecxz  0x407993
  4079a2:	pop    es
  4079a3:	inc    ecx
  4079a4:	mov    ch,0x7a
  4079a6:	inc    DWORD PTR [eax]
  4079a8:	and    eax,0xb308e69
  4079ad:	or     BYTE PTR [edx+0x23],ch
  4079b0:	xchg   ebp,eax
  4079b1:	je     0x4079ba
  4079b3:	call   0x4000e9
  4079b8:	rcl    BYTE PTR [eax+esi*1+0x1b69ca41],cl
  4079bf:	dec    edi
  4079c1:	psubsb mm1,QWORD PTR [esp+edx*2+0x1fffff86]
  4079c9:	cld    
  4079ca:	(bad)  
  4079cb:	jne    0x40795f
  4079cd:	out    dx,eax
  4079ce:	fwait
  4079cf:	retf   0x8495
  4079d2:	leave  
  4079d3:	ret    0x77e
  4079d6:	push   ebp
  4079d7:	mov    edx,DWORD PTR [esi-0x5a000091]
  4079dd:	inc    ebp
  4079de:	push   DWORD PTR [ebp-0x7a]
  4079e1:	test   BYTE PTR [ebp+0x8],dh
  4079e4:	mov    ds:0x25ffedf6,al
  4079e9:	rol    cl,1
  4079eb:	or     BYTE PTR [edx+0x54],cl
  4079ee:	mov    ch,ah
  4079f0:	mov    ecx,0xc7f7c2
	...
  407a25:	add    BYTE PTR [edi-0x7b],bh
  407a28:	add    BYTE PTR [eax],al
  407a2a:	dec    edx
  407a2b:	pop    es
  407a2c:	lea    eax,[ebp-0x2a]
  407a2f:	push   esi
  407a30:	(bad)  [bp+si]
  407a33:	dec    eax
  407a34:	(bad)  
  407a35:	dec    BYTE PTR [edi+0x15]
  407a38:	push   DWORD PTR ds:0x412e7c
  407a3e:	repnz std 
  407a40:	into   
  407a41:	call   DWORD PTR [ebp+0x1474c009]
  407a47:	nop
  407a48:	inc    ebp
  407a49:	clc    
  407a4a:	adc    cl,BYTE PTR [eax]
  407a4c:	add    bh,ch
  407a4e:	aam    0x85
  407a50:	jne    0x407a4e
  407a52:	arpl   bx,dx
  407a54:	cmc    
  407a55:	mul    esp
  407a57:	push   ecx
  407a58:	or     ebp,eax
  407a5a:	cmp    edx,edx
  407a5c:	jg     0x407a5d
  407a5e:	aam    0xb1
  407a60:	jnp    0x407a4a
  407a62:	push   cs
  407a63:	and    DWORD PTR [eax+0xb2e9aff],eax
  407a69:	add    BYTE PTR [esi],dl
  407a6b:	imul   DWORD PTR [esi-0x7f]
  407a6e:	lahf   
  407a6f:	rol    BYTE PTR [eax-0x79d45301],1
  407a75:	mov    eax,0x800ba5
  407a7a:	arpl   WORD PTR [ebx+eax*1-0x75],bp
  407a7e:	push   ds
  407a7f:	push   0x6917c00c
  407a84:	cmp    DWORD PTR [eax],0x63
  407a87:	icebp  
  407a88:	add    eax,0xe9
	...
  407ab9:	add    BYTE PTR [eax],al
  407abb:	add    BYTE PTR [edi+0x6d],ah
  407abe:	add    eax,DWORD PTR [eax]
  407ac0:	je     0x407a93
  407ac2:	adc    edi,edi
  407ac4:	neg    BYTE PTR [edi+0x6b]
  407ac7:	sub    DWORD PTR [ebx-0x4caf80b5],edx
  407acd:	inc    ebx
  407ace:	stc    
  407acf:	pop    es
  407ad0:	dec    ebx
  407ad1:	ret    0xff7e
  407ad4:	dec    esp
  407ad5:	inc    esp
  407ad6:	sti    
  407ad7:	retf   
  407ad8:	inc    esp
  407ad9:	stos   DWORD PTR es:[edi],eax
  407ada:	in     al,dx
  407adb:	mov    bh,0x8f
  407add:	sub    eax,0x68aeff04
  407ae2:	imul   ecx,DWORD PTR ds:0x897f9313,0xffffffde
  407ae9:	sar    DWORD PTR [ebp-0x1],cl
  407aec:	sbb    al,0x14
  407aee:	add    DWORD PTR ds:[ebx+0x6c],esp
  407af2:	nop
  407af3:	test   DWORD PTR [ecx],esp
  407af5:	bnd jle 0x407af7
  407af8:	mov    bl,0x84
  407afa:	mov    esp,ecx
  407afc:	cld    
  407afd:	add    al,0x66
  407aff:	xchg   ecx,eax
  407b00:	fiadd  WORD PTR [esi+0x5f]
  407b03:	jg     0x407af1
  407b05:	aam    0x55
  407b07:	mov    ecx,0x7f4e7aab
  407b0c:	retf   
  407b0d:	inc    ebx
  407b0e:	fs add al,0x63
  407b11:	mov    WORD PTR [eax+eax*8-0x33],fs
  407b15:	jns    0x407b4d
  407b17:	les    edx,FWORD PTR [ebp-0x7f]
  407b1a:	xchg   BYTE PTR [ebx+eiz*2],al
  407b1d:	add    eax,0x9974
	...
  407b52:	mov    eax,ds:0xb47f1e7a
  407b57:	push   es
  407b58:	stc    
  407b59:	add    esp,DWORD PTR [ebx+0x5]
  407b5c:	xchg   ebp,eax
  407b5d:	imul   edi
  407b5f:	(bad)  
  407b60:	sub    edi,DWORD PTR [esi-0x6c]
  407b63:	jns    0x407bd1
  407b65:	ret    0xd538
  407b68:	xor    BYTE PTR [edx+0x6be8c437],0xdb
  407b6f:	xchg   edi,eax
  407b70:	jmp    0x5485e378
  407b75:	add    bh,BYTE PTR [eax-0x22]
  407b78:	arpl   WORD PTR [eax+0x7ece7aa1],bx
  407b7e:	out    dx,al
  407b7f:	ret    
  407b80:	adc    al,0xd4
  407b82:	mov    esp,0x4cc50db2
  407b87:	popa   
  407b88:	aaa    
  407b89:	mov    eax,ds:0x43e20563
  407b8e:	mov    dh,0x3
  407b90:	xchg   edx,eax
  407b91:	ret    
  407b92:	out    0x92,eax
  407b94:	stos   DWORD PTR es:[edi],eax
  407b95:	jge    0x407bc3
  407b97:	jns    0x407bfd
  407b99:	sar    DWORD PTR [eax-0x72],0x64
  407b9d:	mov    bh,0x1d
  407b9f:	jns    0x407b27
  407ba1:	jmp    0x407bc0
  407ba3:	sub    BYTE PTR cs:[esp+ecx*1],al
  407ba7:	repz jmp esp
  407baa:	js     0x407baa
  407bac:	into   
  407bad:	outs   dx,BYTE PTR ds:[esi]
  407bae:	jge    0x407c28
  407bb0:	mov    ch,0x9d
  407bb2:	jbe    0x407c2c
  407bb4:	(bad)  
  407bb5:	mov    ecx,0x0
	...
  407be6:	add    BYTE PTR [eax],al
  407be8:	js     0x407c30
  407bea:	iret   
  407beb:	push   esi
  407bec:	gs js  0x407c64
  407bef:	stc    
  407bf0:	mov    al,0x60
  407bf2:	mov    eax,0x50785536
  407bf7:	cdq    
  407bf8:	dec    ebp
  407bf9:	repnz pop es
  407bfb:	inc    ecx
  407bfc:	push   DWORD PTR [edi-0x1]
  407bff:	cs dec eax
  407c01:	scas   eax,DWORD PTR es:[edi]
  407c02:	retf   
  407c03:	es xor eax,0x2e2b858a
  407c09:	js     0x407c0a
  407c0b:	mov    ecx,0xfbcb225
  407c10:	sbb    eax,0xc3d5e878
  407c15:	add    eax,0x8206400
  407c1a:	test   DWORD PTR [ebp-0x110087fb],ecx
  407c20:	mov    ah,0xb9
  407c22:	(bad)  
  407c23:	out    0xf6,al
  407c25:	ins    BYTE PTR es:[edi],dx
  407c26:	pop    ds
  407c27:	jl     0x407c90
  407c29:	add    eax,0x77a79cff
  407c2e:	dec    esi
  407c30:	iret   
  407c31:	jg     0x407bfe
  407c33:	(bad)  
  407c34:	(bad)  
  407c35:	dec    esi
  407c36:	ret    0x60ed
  407c39:	ror    BYTE PTR [edx-0x3bf1d3b],cl
  407c3f:	scas   al,BYTE PTR es:[edi]
  407c40:	xor    al,0xc
  407c42:	call   0xffb922f1
  407c47:	jo     0x407c6d
  407c49:	jl     0x407c56
  407c4b:	test   eax,0x0
	...
  407c7c:	add    BYTE PTR [eax],al
  407c7e:	push   esi
  407c7f:	or     DWORD PTR [ecx+ebp*8+0x680560],0x41360d
  407c8a:	lea    esi,[eax-0x5]
  407c8d:	call   0x3f4423
  407c92:	pop    edx
  407c93:	imul   ebx,DWORD PTR [edi+0x32],0xff5003cb
  407c9a:	pop    ss
  407c9b:	or     al,0xe8
  407c9d:	xchg   esp,eax
  407c9e:	mov    edx,?
  407ca0:	(bad)  
  407ca1:	call   0x3f49a8
  407ca6:	mov    dl,0x1f
  407ca8:	xor    al,BYTE PTR [ecx-0x46]
  407cab:	clc    
  407cac:	je     0x407caa
  407cae:	and    bl,bl
  407cb0:	int    0xff
  407cb2:	lea    edx,[ecx+0x67]
  407cb5:	pusha  
  407cb6:	cwde   
  407cb7:	inc    edx
  407cb8:	dec    DWORD PTR [edi+0x4d]
  407cbb:	jo     0x407cc4
  407cbd:	call   0x3f768b
  407cc2:	bound  esp,QWORD PTR [edx]
  407cc4:	retf   
  407cc5:	call   FWORD PTR [ebp+0x69]
  407cc8:	cmp    al,0x32
  407cca:	mov    ebx,0x8e75ff03
  407ccf:	jmp    0x407c89
  407cd1:	into   
  407cd2:	(bad)  
  407cd3:	clc    
  407cd4:	dec    edi
  407cd5:	push   0x41332a
  407cda:	sub    bh,dl
  407cdc:	je     0x407ce6
  407cde:	mov    ds:0xfffd55,al
	...
  407d13:	add    BYTE PTR ds:0x1dcb05eb,ch
  407d19:	cli    
  407d1a:	addr16 push edi
  407d1c:	dec    eax
  407d1d:	inc    esp
  407d1e:	(bad)  
  407d1f:	inc    BYTE PTR [edi-0x2367177b]
  407d25:	stc    
  407d26:	(bad)  
  407d27:	push   eax
  407d28:	push   edx
  407d29:	popa   
  407d2a:	xor    DWORD PTR [ecx+0x3a],eax
  407d2d:	push   ebx
  407d2e:	(bad)  
  407d2f:	jne    0x407d94
  407d31:	imul   esi,DWORD PTR fs:[ecx],0x1d
  407d35:	mov    BYTE PTR [eax+ebp*8-0x2],bh
  407d39:	mov    dl,0x7c
  407d3b:	dec    DWORD PTR [edx+esi*2]
  407d3e:	jg     0x407d28
  407d40:	mov    es:0xab2aff7c,eax
  407d46:	or     eax,DWORD PTR [eax]
  407d48:	mov    ?,ebx
  407d4a:	outs   dx,BYTE PTR ds:[esi]
  407d4b:	and    DWORD PTR [edi],0xffffffd9
  407d4e:	shr    DWORD PTR [ecx+0x63],cl
  407d51:	inc    edx
  407d52:	pop    es
  407d53:	call   DWORD PTR [esi+0x64]
  407d56:	imul   edi,esi,0xffffff9c
  407d59:	mov    edi,0x3826897b
  407d5e:	mov    BYTE PTR ds:0xffc30434,bh
  407d64:	cmp    al,0x67
  407d66:	add    esi,DWORD PTR [eax+edi*2-0x6c]
  407d6a:	push   edx
  407d6b:	xor    BYTE PTR [edx],ah
  407d6d:	ins    BYTE PTR es:[edi],dx
  407d6e:	aam    0xe7
  407d70:	sbb    dh,cl
  407d72:	add    al,BYTE PTR [eax]
  407d74:	push   0x1df72c
	...
  407da9:	add    BYTE PTR [esp+edx*1],ch
  407dac:	out    dx,eax
  407dad:	ror    DWORD PTR [edi+esi*2+0x580fc007],cl
  407db4:	shl    DWORD PTR [edi+0x3],cl
  407db7:	mov    edx,0x5f24ffc2
  407dbc:	icebp  
  407dbd:	pop    es
  407dbe:	jnp    0x407d6f
  407dc0:	jns    0x407dc1
  407dc2:	fs inc esp
  407dc4:	(bad)
  407dc8:	js     0x407dfd
  407dca:	and    eax,DWORD PTR [ebp-0x48b30085]
  407dd0:	jbe    0x407d80
  407dd2:	mov    esp,DWORD PTR [edi-0x10]
  407dd5:	(bad)  
  407dd6:	leave  
  407dd7:	push   edx
  407dd8:	jp     0x407e4f
  407dda:	imul   eax,DWORD PTR ds:0x762d7591,0xffffff9e
  407de1:	out    dx,al
  407de2:	xor    DWORD PTR [esi+0x1c],0x8f5e0b0c
  407de9:	jnp    0x407dff
  407deb:	jmp    0x407dd1
  407ded:	jp     0x407d85
  407def:	or     eax,0x76055991
  407df4:	jbe    0x407de4
  407df6:	inc    esi
  407df7:	jbe    0x407ded
  407df9:	or     ecx,DWORD PTR [ebx]
  407dfb:	push   edx
  407dfc:	addr16 jnp 0x407deb
  407dff:	in     al,dx
  407e00:	dec    ecx
  407e01:	xor    al,0xa2
  407e03:	add    eax,0x6d64f156
  407e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e09:	js     0x407ddf
  407e0b:	jne    0x407dde
  407e0d:	adc    al,0x0
	...
  407e3f:	add    BYTE PTR [edx+0x4e7ae8c4],dl
  407e45:	or     eax,0x75be3c41
  407e4a:	cs in  al,dx
  407e4c:	sbb    eax,0xac03a834
  407e51:	out    dx,eax
  407e52:	lock imul edi,DWORD PTR [eax+0x78],0x16
  407e57:	jnp    0x407e64
  407e59:	lock xlat BYTE PTR ds:[ebx]
  407e5b:	les    edx,FWORD PTR [esi+esi*2+0x167b0b7c]
  407e62:	cld    
  407e63:	jp     0x407de9
  407e65:	in     al,dx
  407e66:	inc    ecx
  407e67:	xor    eax,0xf0ee0522
  407e6c:	pop    esp
  407e6d:	ins    DWORD PTR es:[edi],dx
  407e6e:	clc    
  407e6f:	js     0x407edd
  407e71:	jne    0x407ec4
  407e73:	pop    ebp
  407e74:	xor    al,ah
  407e76:	call   0xc13e54f5
  407e7b:	call   DWORD PTR [edi+0x75]
  407e7e:	(bad)  
  407e7f:	jp     0x407e57
  407e81:	jno    0x407e41
  407e83:	lock pop esp
  407e85:	pop    ebp
  407e86:	add    BYTE PTR [ebx],dh
  407e88:	mov    al,ds:0xa60eff74
  407e8d:	inc    edi
  407e8e:	add    al,0xe9
  407e90:	adc    eax,DWORD PTR [eax+0x12b6aec]
  407e96:	add    BYTE PTR ds:0xf9757471,bl
  407e9c:	cdq    
  407e9d:	cli    
  407e9e:	or     eax,DWORD PTR [esi-0x4c17f2ed]
	...
  407ed4:	add    BYTE PTR [eax],al
  407ed6:	jne    0x407f4c
  407ed8:	push   DWORD PTR [esi-0xd]
  407edb:	add    al,ch
  407edd:	xchg   ecx,eax
  407ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407edf:	je     0x407ee0
  407ee1:	xor    BYTE PTR [esi-0x2a4bffff],ah
  407ee7:	popa   
  407ee8:	sub    DWORD PTR ds:0x4dffdf54,0xffffffd3
  407eef:	sbb    bh,bh
  407ef1:	mov    esp,0xed757470
  407ef6:	cmp    BYTE PTR [ebx-0x34],bl
  407ef9:	cmp    DWORD PTR ss:[eax],eax
  407efc:	shl    BYTE PTR [ebp+0x25457d8c],0xb8
  407f03:	push   ebp
  407f04:	xor    ch,BYTE PTR [eax+0x15757460]
  407f0a:	or     BYTE PTR [esi-0x22e6f134],bh
  407f10:	(bad)  
  407f11:	call   0xfe91320f
  407f16:	je     0x407f24
  407f18:	call   0xffb47869
  407f1d:	or     DWORD PTR [edi+esi*1],0xf9ebe941
  407f24:	sti    
  407f25:	sar    DWORD PTR [ecx],1
  407f27:	inc    edx
  407f28:	call   esi
  407f2a:	dec    edi
  407f2b:	add    eax,0xd519be00
  407f30:	inc    BYTE PTR [eax]
  407f32:	pop    DWORD PTR [ecx]
  407f34:	call   0xff2e84c3
  407f39:	push   0x0
	...
  407f6a:	add    BYTE PTR [eax],al
  407f6c:	sub    eax,0x500413b
  407f71:	fs sti 
  407f73:	call   0x3f4aa1
  407f78:	push   edx
  407f79:	or     eax,DWORD PTR [eax]
  407f7b:	out    dx,eax
  407f7c:	mov    ah,0x59
  407f7e:	(bad)  
  407f7f:	jne    0x407f83
  407f81:	loopne 0x407ff1
  407f83:	jmp    ebp
  407f85:	in     eax,dx
  407f86:	(bad)  
  407f87:	jne    0x407f0f
  407f89:	loope  0x407fe8
  407f8b:	leave  
  407f8c:	jne    0x407f7c
  407f8e:	enter  0x1ac2,0x8
  407f92:	push   ebp
  407f93:	mov    edx,DWORD PTR [esi-0x44cd0c9f]
  407f99:	pop    es
  407f9a:	push   DWORD PTR [ebp-0x3a]
  407f9d:	fucomip st,st(0)
  407f9f:	int3   
  407fa0:	and    eax,0xaa75feee
  407fa5:	push   edi
  407fa6:	out    0x34,eax
  407fa8:	ja     0x407f98
  407faa:	(bad)  
  407fab:	(bad)  
  407fac:	inc    DWORD PTR [ebx]
  407fae:	push   eax
  407faf:	(bad)  
  407fb0:	out    dx,eax
  407fb1:	jmp    edi
  407fb3:	ds test esi,ebp
  407fb6:	(bad)  
  407fb7:	push   0x4138ba
  407fbc:	jne    0x408022
  407fbe:	or     ebp,eax
  407fc0:	cmp    eax,0x65fffebd
  407fc5:	fs (bad) 
  407fc8:	jb     0x407fe5
  407fca:	int    0xff
  407fcc:	jne    0x407fba
  407fce:	je     0x407fe4
	...
  408000:	add    BYTE PTR [eax],al
  408002:	(bad)  
  408004:	je     0x40800e
  408006:	xchg   edx,eax
  408007:	sbb    edi,edi
  408009:	inc    DWORD PTR [ebp+0x6310c1be]
  40800f:	pop    esp
  408010:	into   
  408011:	mov    al,BYTE PTR [edi-0x20]
  408014:	ds cld 
  408016:	dec    esp
  408017:	xor    cl,BYTE PTR [eax]
  408019:	call   0xffb921d1
  40801e:	push   0xea49ef9c
  408023:	sub    DWORD PTR [eax+0x68],edi
  408026:	arpl   WORD PTR [eax+ebp*2-0x42],bx
  40802a:	mov    ebx,0x634135ad
  40802f:	fwait
  408030:	out    dx,al
  408031:	sti    
  408032:	adc    al,0x1a
  408034:	or     al,0xe8
  408036:	fmul   DWORD PTR [ebx+0x5d7bff78]
  40803c:	add    ebp,edi
  40803e:	mov    ebp,0xa2325804
  408043:	pop    esp
  408044:	js     0x4080bb
  408046:	out    dx,eax
  408047:	jmp    0x408036
  408049:	pop    es
  40804a:	sti    
  40804b:	pop    edx
  40804c:	js     0x40804d
  40804e:	fadd   QWORD PTR [ebp+eax*1+0x0]
  408052:	les    eax,FWORD PTR [edx-0x626e1915]
  408058:	add    edi,edi
  40805a:	dec    esi
  40805b:	xor    BYTE PTR [eax+0x75],bh
  40805e:	imul   eax,esp,0xffffffe1
  408061:	(bad)  
  408062:	mov    ah,0x23
  408064:	js     0x4080db
	...
  408096:	add    BYTE PTR [eax],al
  408098:	scas   eax,DWORD PTR es:[edi]
  408099:	adc    al,0xb4
  40809b:	enter  0x13a4,0x4a
  40809f:	ret    0x5c6b
  4080a2:	into   
  4080a3:	mov    al,BYTE PTR [edi-0x603c121]
  4080a9:	pop    ebx
  4080aa:	in     eax,dx
  4080ab:	add    al,0x84
  4080ad:	stc    
  4080ae:	or     ch,al
  4080b0:	xchg   esi,eax
  4080b1:	and    DWORD PTR [eax-0x1],edi
  4080b4:	jmp    0x1b05:0xc16877a9
  4080bb:	lds    esp,FWORD PTR [edx+ebp*8+0x50]
  4080bf:	xor    ah,BYTE PTR [edx-0x52ce29fb]
  4080c5:	sbb    al,0x28
  4080c7:	add    al,0x4c
  4080c9:	clc    
  4080ca:	lock imul esi,ebp,0x72
  4080ce:	mov    esi,0xfbb9cb77
  4080d3:	les    esi,FWORD PTR [edx+ebp*8]
  4080d6:	sub    al,0x32
  4080d8:	mov    ds:0x8d31a605,al
  4080dd:	sbb    al,0x28
  4080df:	add    al,0x1c
  4080e1:	clc    
  4080e2:	loopne 0x40814f
  4080e4:	in     eax,dx
  4080e5:	jb     0x408075
  4080e7:	ja     0x408164
  4080e9:	lods   al,BYTE PTR ds:[esi]
  4080ea:	mov    ebx,0x10ea04c4
  4080ef:	xor    ah,BYTE PTR [edx-0x72ce89fb]
  4080f5:	sbb    al,0x28
  4080f7:	add    al,0xec
  4080f9:	div    eax
  4080fb:	imul   eax,DWORD PTR [eax],0x0
	...
  40812e:	gs jae 0x40818f
  408131:	ja     0x40817e
  408133:	dec    ebx
  408134:	sbb    eax,ebp
  408136:	aam    0xe9
  408138:	shl    BYTE PTR [ecx],0x22
  40813b:	add    eax,0x1c2d3146
  408140:	test   al,0x3
  408142:	mov    esp,0x3d6be0f7
  408147:	jae    0x408177
  408149:	ja     0x408186
  40814b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40814c:	fcmovnb st,st(4)
  40814e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40814f:	jmp    0x562b3c2
  408154:	push   ss
  408155:	xor    DWORD PTR ds:0x8c03a81c,ebp
  40815b:	div    eax
  40815d:	imul   edx,DWORD PTR ds:0xb76fe73,0xffffffb9
  408164:	add    BYTE PTR [ebx+0x5f67719f],bh
  40816a:	xor    esp,eax
  40816c:	jmp    ebp
  40816e:	xor    ebx,ebx
  408170:	sub    BYTE PTR [eax],ch
  408172:	addr16 jo 0x4081ea
  408175:	loope  0x40813f
  408177:	aaa    
  408178:	dec    dh
  40817a:	aad    0xdd
  40817c:	mov    eax,0x67711ffb
  408181:	outs   dx,DWORD PTR ds:[esi]
  408182:	jb     0x40814a
  408184:	push   DWORD PTR [ebp+0x2828d773]
  40818a:	addr16 jo 0x408202
  40818d:	icebp  
  40818e:	mov    eax,0x9efe0f
	...
  4081c3:	add    BYTE PTR [ebp+0x1fdbc5dd],dl
  4081c9:	jno    0x408232
  4081cb:	pop    edi
  4081cc:	push   edx
  4081cd:	(bad)  
  4081ce:	inc    DWORD PTR [ebp+0x2828d753]
  4081d4:	addr16 jo 0x40824c
  4081d7:	loope  0x408161
  4081d9:	pop    es
  4081da:	(bad)  
  4081db:	outs   dx,BYTE PTR ds:[esi]
  4081dc:	jne    0x4081bb
  4081de:	mov    eax,ds:0x67711e1b
  4081e3:	rcl    DWORD PTR [edx+0x62c0ffc6],1
  4081e9:	add    eax,0xfa556900
  4081ee:	pop    es
  4081ef:	push   ecx
  4081f0:	cmp    eax,0xc83eff72
  4081f5:	mov    ah,0x32
  4081f7:	test   al,0x60
  4081f9:	fnstsw WORD PTR [ebx-0x5]
  4081fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081fd:	jo     0x408266
  4081ff:	jmp    0x408261
  408201:	add    eax,0x8931e80
  408206:	call   0xffb09d3c
  40820b:	or     edi,0x7a004133
  408211:	pop    esp
  408212:	addr16 xor cl,bl
  408215:	add    al,0x68
  408217:	add    cl,BYTE PTR [edx-0x8007ffc]
  40821d:	sti    
  40821e:	out    0xc1,eax
  408220:	jg     0x40821c
  408222:	(bad)  
  408223:	push   0x413304
	...
  408258:	add    BYTE PTR [eax],al
  40825a:	mov    ds:0x3a413161,al
  40825f:	pop    esp
  408260:	add    DWORD PTR [eax],eax
  408262:	cmp    al,BYTE PTR [edi+edi*8-0x5623cd8b]
  408269:	std    
  40826a:	in     eax,dx
  40826b:	stc    
  40826c:	addr16 mov ds:0x4328,al
  408270:	jmp    DWORD PTR [edi-0x54]
  408273:	xor    eax,DWORD PTR [ecx+0x0]
  408276:	jb     0x40827b
  408278:	add    BYTE PTR [eax],al
  40827a:	mov    bh,dl
  40827c:	je     0x408286
  40827e:	loop   0x408215
  408280:	std    
  408281:	(bad)  
  408282:	frstor [eax-0x4d]
  408285:	xor    cl,BYTE PTR [ebx+0x9]
  408288:	push   0xff42b88e
  40828d:	addr16 clc 
  40828f:	add    eax,DWORD PTR [eax]
  408291:	cmp    BYTE PTR [ebp+0x60],0x7
  408295:	call   0x3f7958
  40829a:	mov    ds:0xba4132aa,al
  40829f:	pop    ebx
  4082a0:	lea    esi,[edx]
  4082a2:	sti    
  4082a3:	add    ebp,DWORD PTR [eax+0x2]
  4082a6:	retf   0x8003
  4082a9:	push   edi
  4082ab:	sti    
  4082ac:	out    0x65,eax
  4082ae:	jg     0x4082aa
  4082b0:	(bad)  
  4082b1:	push   0x413374
  4082b6:	repnz mov DWORD PTR [edx],esi
  4082b9:	inc    ecx
  4082ba:	arpl   WORD PTR [esi-0x15],bx
  4082bd:	add    DWORD PTR [eax],eax
	...
  4082ef:	add    BYTE PTR [ebx+0x5e],ah
  4082f2:	cmp    edi,0xe
  4082f5:	jbe    0x408362
  4082f7:	dec    esi
  4082f8:	jle    0x408368
  4082fa:	je     0x408366
  4082fc:	pop    ecx
  4082fd:	ja     0x4082ed
  4082ff:	pop    es
  408300:	jnp    0x408366
  408302:	jne    0x408303
  408304:	shl    DWORD PTR fs:[eax],cl
  408307:	call   esi
  408309:	je     0x408376
  40830b:	call   DWORD PTR [esi+0x58]
  40830e:	je     0x40837a
  408310:	outs   dx,DWORD PTR ds:[esi]
  408311:	aas    
  408312:	out    dx,al
  408313:	pop    es
  408314:	cmp    esi,DWORD PTR [edx-0x4fc3008a]
  40831a:	out    dx,al
  40831b:	sti    
  40831c:	xor    al,0x32
  40831e:	or     al,0xe8
  408320:	mov    ah,0xa8
  408322:	je     0x408323
  408324:	sbb    bl,BYTE PTR [ebx-0xc480001]
  40832a:	adc    WORD PTR [esi-0x7f8bfc98],0x4
  408332:	or     eax,0x745ca233
  408337:	jne    0x4083a8
  408339:	xchg   esp,eax
  40833a:	cmc    
  40833b:	leave  
  40833c:	hlt    
  40833d:	not    edx
  40833f:	arpl   WORD PTR [si+0x64],bx
  408343:	mov    esi,0x7ede793
  408348:	retf   
  408349:	mov    ds:0xc4d4ff6b,al
  40834e:	inc    edi
  40834f:	(bad)  
  408350:	int3   
  408351:	mov    edi,0x27ea
	...
  408386:	nop
  408387:	popf   
  408388:	add    edi,edi
  40838a:	ss pusha 
  40838c:	imul   ebx,DWORD PTR [ebp-0x57],0x37
  408390:	je     0x4083e2
  408392:	cmp    ebx,DWORD PTR [ebp+0x3]
  408395:	out    dx,eax
  408396:	in     eax,0x5
  408398:	mov    ecx,0x10fd1674
  40839d:	call   0x47b9:0x6b166e8b
  4083a4:	push   cs
  4083a5:	je     0x4083a2
  4083a7:	sub    DWORD PTR [edx+0x746f7cc2],edi
  4083ad:	pop    es
  4083ae:	mov    esi,DWORD PTR [ecx]
  4083b0:	and    esi,DWORD PTR [esp+ebp*2-0x2b]
  4083b4:	add    BYTE PTR [ecx],0x63
  4083b7:	pop    esi
  4083b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083b9:	aam    0x5d
  4083bb:	clc    
  4083bc:	lock pop ebx
  4083be:	fistp  DWORD PTR [ebp-0x2a]
  4083c1:	jae    0x4083fe
  4083c3:	jl     0x40836c
  4083c5:	jae    0x40840b
  4083c7:	cmp    al,0xab
  4083c9:	cld    
  4083ca:	cmp    al,0xd9
  4083cc:	jno    0x40842e
  4083ce:	xor    al,0xf8
  4083d0:	in     al,0x5b
  4083d2:	sbb    bh,BYTE PTR [ebx]
  4083d4:	scas   al,BYTE PTR es:[edi]
  4083d5:	jae    0x40842f
  4083d7:	inc    ebp
  4083d8:	sbb    eax,0xda018b0e
  4083dd:	les    edx,FWORD PTR [esi+edi*4]
  4083e0:	adc    dl,0x1a
  4083e3:	outs   dx,BYTE PTR ds:[esi]
  4083e4:	mov    ss,esp
  4083e6:	xchg   esp,eax
  4083e7:	outs   dx,BYTE PTR ds:[esi]
  4083e8:	cld    
  4083e9:	sti    
	...
  40841a:	add    BYTE PTR [eax],al
  40841c:	add    al,0xe1
  40841e:	jge    0x408493
  408420:	hlt    
  408421:	pop    esp
  408422:	adc    eax,0xa06dec4a
  408427:	inc    esi
  408428:	pop    ebx
  408429:	add    eax,0x81cf7ebc
  40842e:	and    eax,0x56054964
  408433:	stc    
  408434:	pop    esp
  408435:	outs   dx,BYTE PTR ds:[esi]
  408436:	aam    0xff
  408438:	lds    esi,FWORD PTR [edi]
  40843a:	lahf   
  40843b:	sbb    al,0x22
  40843d:	add    eax,0x6dabdb51
  408442:	add    BYTE PTR [esi],dh
  408444:	cs enter 0xc3f3,0x60
  408449:	outs   dx,BYTE PTR ds:[esi]
  40844a:	jne    0x408449
  40844c:	adc    eax,edi
  40844e:	or     ebx,DWORD PTR [esi]
  408450:	pop    edx
  408451:	xlat   BYTE PTR ds:[ebx]
  408452:	sub    BYTE PTR [eax+0x20415d60],ch
  408458:	adc    BYTE PTR [esi-0x77],ch
  40845b:	lods   al,BYTE PTR ds:[esi]
  40845c:	or     al,0xdb
  40845e:	(bad)  
  40845f:	std    
  408460:	jnp    0x408477
  408462:	(bad)  
  408463:	jl     0x4084d1
  408465:	outs   dx,BYTE PTR ds:[esi]
  408466:	xor    eax,0xffc44797
  40846b:	sar    BYTE PTR [ebp+0x3e],1
  40846e:	(bad)  
  40846f:	(bad)  
  408471:	ret    0x64f7
  408474:	sbb    esp,DWORD PTR [ebp+0x50]
  408477:	into   
  408478:	dec    ebx
  408479:	adc    edi,edi
  40847b:	cmp    al,0x63
  40847d:	ins    BYTE PTR es:[edi],dx
  40847e:	xor    eax,0x17
	...
  4084af:	add    BYTE PTR [eax],al
  4084b1:	add    BYTE PTR [esi-0x3a],dl
  4084b4:	inc    eax
  4084b6:	push   ebp
  4084b7:	jmp    FWORD PTR ds:[esi+0x13efc2a7]
  4084be:	ins    BYTE PTR es:[di],dx
  4084c0:	jne    0x40848b
  4084c2:	xchg   ecx,eax
  4084c3:	repnz or edx,DWORD PTR [esi+0x2828d34b]
  4084ca:	pop    edi
  4084cb:	pop    ebp
  4084cc:	std    
  4084cd:	mov    cl,0x71
  4084cf:	ins    BYTE PTR es:[edi],dx
  4084d0:	mov    DWORD PTR [ebx+eax*4],esp
  4084d3:	jp     0x40851a
  4084d5:	mov    DWORD PTR [eax],edx
  4084d7:	ins    BYTE PTR es:[edi],dx
  4084d8:	jne    0x40849f
  4084da:	jno    0x4084ce
  4084dc:	or     esp,DWORD PTR [esi-0x65]
  4084df:	shr    DWORD PTR [eax],cl
  4084e1:	test   al,0x60
  4084e3:	pop    ebp
  4084e4:	in     eax,0x21
  4084e6:	push   ecx
  4084e7:	ins    BYTE PTR es:[edi],dx
  4084e8:	mov    DWORD PTR [esp+edi*1+0x26007d88],esp
  4084ef:	or     BYTE PTR [edi],cl
  4084f1:	test   BYTE PTR [esi],cl
  4084f3:	or     BYTE PTR [eax],al
  4084f5:	add    BYTE PTR [ecx],bh
  4084f7:	jne    0x4084f0
  4084f9:	add    BYTE PTR [ebp-0x75ff757c],al
  4084ff:	or     BYTE PTR [ebx+0xf086e7d],al
  408505:	test   dl,bh
  408507:	pop    es
  408508:	add    BYTE PTR [eax],al
  40850a:	push   ebp
  40850b:	ins    DWORD PTR es:[edi],dx
  40850c:	daa    
  40850d:	(bad)  
  40850e:	jmp    FWORD PTR [edi-0x19]
  408511:	sub    cl,BYTE PTR [eax-0x9]
  408514:	(bad)  
  408515:	inc    DWORD PTR [eax]
	...
  408547:	add    bh,ch
  408549:	(bad)  
  40854b:	jne    0x4084cf
  40854d:	rol    BYTE PTR [eax-0x109ba3e],1
  408553:	jne    0x408597
  408555:	div    BYTE PTR [eax+ecx*1+0x22]
  408559:	outs   dx,DWORD PTR ds:[esi]
  40855a:	sar    edi,0x15
  40855d:	div    BYTE PTR [esp+esi*8+0x25]
  408561:	je     0x40856a
  408563:	call   0x3f48f9
  408568:	mov    ebx,0x3a13275c
  40856d:	in     eax,0xbd
  40856f:	jne    0x408588
  408571:	cmc    
  408572:	je     0x408564
  408574:	cmc    
  408575:	jae    0x40857e
  408577:	call   0x3f48c9
  40857c:	loope  0x408584
  40857e:	push   DWORD PTR [ebp-0x2e]
  408581:	cmc    
  408582:	je     0x408574
  408584:	jne    0x4085fa
  408586:	pop    es
  408587:	call   0x3f479d
  40858c:	jne    0x408602
  40858e:	jmp    0x40858f
  408590:	mov    edi,0x883ce76f
  408595:	idiv   dh
  408597:	and    DWORD PTR [ebx+0x51],0x67
  40859b:	add    BYTE PTR [edi+0x71],cl
  40859e:	test   BYTE PTR [ebp-0x3d],bh
  4085a1:	pop    ecx
  4085a2:	test   BYTE PTR [esi],0xe8
  4085a5:	mov    al,ds:0x3373ff67
  4085aa:	test   DWORD PTR [edi],0x0
	...
  4085dc:	add    BYTE PTR [eax],al
  4085de:	mov    ebx,0x9cff431c
  4085e3:	push   ss
  4085e4:	(bad)  
  4085e5:	imul   esp,DWORD PTR [ebx+0xb],0xc87b07f7
  4085ec:	inc    edx
  4085ed:	inc    DWORD PTR [edx+edi*8+0x398bf3f6]
  4085f4:	inc    esi
  4085f5:	push   DWORD PTR [edx+ebp*2-0xa]
  4085f9:	sti    
  4085fa:	jnp    0x40864d
  4085fc:	inc    esi
  4085fd:	jmp    DWORD PTR [edx+ebx*2-0xa]
  408601:	test   DWORD PTR [ebx+0x69],0x4c54ff46
  408608:	imul   bh
  40860a:	cmp    esp,DWORD PTR [ecx+0x46]
  40860d:	inc    DWORD PTR [esp+edi*1-0xa]
  408611:	jmp    0x40865e
  408613:	pop    ecx
  408614:	inc    esi
  408615:	push   DWORD PTR [esp+ebp*4]
  408618:	mul    bl
  40861a:	cmp    esi,DWORD PTR [ecx-0x59db00b9]
  408620:	inc    ebp
  408621:	and    al,0x63
  408623:	sub    DWORD PTR [ebp-0x14],edi
  408626:	loop   0x4085c8
  408628:	jae    0x408621
  40862a:	or     al,0x94
  40862c:	fist   DWORD PTR [edx]
  40862e:	arpl   bx,bp
  408630:	mov    al,0x68
  408632:	shr    DWORD PTR [edi-0x2c83003e],0x33
  408639:	inc    ecx
  40863a:	arpl   WORD PTR [esi+edx*4],ax
  40863d:	xor    esp,DWORD PTR [edx+0x87db5c]
	...
  408673:	add    BYTE PTR [eax+0x4b03a805],dl
  408679:	xchg   BYTE PTR [edx],bl
  40867b:	ret    
  40867c:	int3   
  40867d:	loop   0x4086e2
  40867f:	xor    al,0x22
  408681:	add    eax,0x6a68f64e
  408686:	mov    esp,0x3edcbcfb
  40868b:	jo     0x408639
  40868d:	fstp   st(1)
  40868f:	add    esi,DWORD PTR [ebx+ebp*4-0x3baf9b3f]
  408696:	call   0xa8773d76
  40869b:	add    edi,ebx
  40869d:	push   esi
  40869e:	fcmovb st,st(2)
  4086a0:	test   dl,ah
  4086a2:	push   edx
  4086a3:	xor    al,0x22
  4086a5:	add    eax,0xc430a191
  4086aa:	call   0xa8772d8a
  4086af:	add    esp,DWORD PTR [eax+esi*8-0x24]
  4086b3:	jo     0x40868b
  4086b5:	std    
  4086b6:	shr    BYTE PTR [ebx],1
  4086b8:	push   ebp
  4086b9:	push   0xffffffde
  4086bb:	fdiv   QWORD PTR [eax+0x5]
  4086be:	(bad)  
  4086bf:	scas   al,BYTE PTR es:[edi]
  4086c0:	mov    ebx,0x3cc514c6
  4086c5:	loop   0x4086c1
  4086c7:	aaa    
  4086c8:	mov    ds:0x77255105,al
  4086cd:	(bad)  
  4086ce:	call   0x2876acae
  4086d3:	add    al,0x8b
  4086d5:	pop    ebx
  4086d6:	fcmovb st,st(4)
	...
  408708:	add    BYTE PTR [eax],al
  40870a:	adc    al,0xe2
  40870c:	clc    
  40870d:	aaa    
  40870e:	mov    ds:0x58f99605,al
  408713:	push   0x14
  408715:	cld    
  408716:	add    al,0xf8
  408718:	xchg   BYTE PTR [edi-0xc],ch
  40871b:	ja     0x408741
  40871d:	jo     0x4086b2
  40871f:	push   0x0
  408721:	cld    
  408722:	in     al,0x6a
  408724:	xor    eax,0xffc47e17
  408729:	push   eax
  40872a:	adc    BYTE PTR [ebx-0x56361700],dl
  408730:	jne    0x408705
  408732:	sbb    eax,0x60e9f7c0
  408737:	add    eax,0x75aa2e00
  40873c:	jmp    esi
  40873e:	pusha  
  40873f:	add    eax,0x698ae96a
  408744:	imul   ebp,ecx,0xac8c69ba
  40874a:	or     al,0xd5
  40874c:	mov    WORD PTR [ebx+ecx*1+0x72],fs
  408750:	call   DWORD PTR [esi]
  408752:	scas   eax,DWORD PTR es:[edi]
  408753:	push   0x75
  408755:	adc    DWORD PTR [eax+esi*8],ecx
  408758:	sti    
  408759:	adc    esi,esi
  40875b:	xchg   edx,eax
  40875c:	add    cl,ch
  40875e:	imul   ebp,DWORD PTR [ecx-0x3af6148c],0xc67f2667
  408768:	jmp    ebp
  40876a:	pop    ebx
  40876b:	std    
  40876c:	out    0x8e,eax
	...
  40879e:	add    BYTE PTR [eax],al
  4087a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087a1:	push   0x7ab062ff
  4087a6:	test   ebp,edx
  4087a8:	mov    ch,0x68
  4087aa:	call   FWORD PTR [ecx]
  4087ac:	adc    DWORD PTR [ecx-0xc],esp
  4087af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087b0:	mov    ebp,0xb06c8968
  4087b5:	jo     0x4087b6
  4087b7:	scas   al,BYTE PTR es:[edi]
  4087b8:	lea    esi,[edx+0x68859ef0]
  4087be:	call   DWORD PTR [edi+ecx*1]
  4087c1:	popa   
  4087c2:	cmc    
  4087c3:	xchg   edi,eax
  4087c4:	jne    0x40882e
  4087c6:	call   DWORD PTR [eax+esi*2+0x70]
  4087ca:	inc    DWORD PTR [eax]
  4087cc:	(bad)  
  4087ce:	loope  0x408793
  4087d0:	ins    DWORD PTR es:[edi],dx
  4087d1:	xlat   BYTE PTR ds:[ebx]
  4087d2:	inc    BYTE PTR [ebp+0x72]
  4087d5:	retf   
  4087d6:	xchg   esp,eax
  4087d7:	call   edi
  4087d9:	fsub   st,st(7)
  4087db:	das    
  4087dc:	push   esp
  4087dd:	add    al,0x0
  4087df:	leave  
  4087e0:	js     0x40884e
  4087e2:	call   DWORD PTR [ecx+eax*2-0x38]
  4087e6:	add    ah,0x2e
  4087e9:	dec    esi
  4087ea:	jmp    FWORD PTR [ecx-0x3c]
  4087ed:	xlat   BYTE PTR ds:[ebx]
  4087ee:	je     0x4087f8
  4087f0:	adc    ch,bh
  4087f2:	mov    edi,0x44e96dff
  4087f7:	cld    
  4087f8:	mov    ds:0x8a4132ae,al
  4087fd:	xlat   BYTE PTR ds:[ebx]
  4087fe:	je     0x408808
  408800:	jb     0x4087b1
  408802:	(bad)  
  408803:	inc    DWORD PTR [eax]
	...
  408835:	add    BYTE PTR [ebp+0x4e],ch
  408838:	jmp    DWORD PTR [edi-0x2b]
  40883b:	xor    eax,DWORD PTR [ecx+0x0]
  40883e:	shr    BYTE PTR [esi-0x2885bece],cl
  408844:	xor    al,0x56
  408846:	mov    ds:0x9ae7ff41,eax
  40884b:	ret    0xfffe
  40884e:	push   ecx
  40884f:	les    esi,FWORD PTR [ebx+0xf]
  408852:	mov    dl,BYTE PTR [ecx-0x2]
  408855:	jne    0x408899
  408857:	int3   
  408858:	xchg   esp,eax
  408859:	cld    
  40885a:	sub    eax,0x985e7da
  40885f:	(bad)  
  408861:	push   0x3a
  408863:	dec    esp
  408864:	enter  0x7b28,0x1
  408868:	push   0xff43195d
  40886d:	(bad)  
  40886e:	aaa    
  40886f:	push   edx
  408870:	sub    BYTE PTR [ecx-0x6],al
  408873:	retf   
  408874:	test   esi,eax
  408876:	arpl   WORD PTR [edi+0x12230b6d],cx
  40887c:	std    
  40887d:	dec    edi
  40887e:	xchg   ebx,eax
  40887f:	jg     0x408878
  408881:	pop    es
  408882:	sti    
  408883:	adc    dh,BYTE PTR [eax-0x1]
  408886:	in     al,0x85
  408888:	leave  
  408889:	ret    0xd6dc
  40888c:	fcos   
  40888e:	cmp    al,0x47
  408890:	xor    BYTE PTR [ecx+0x63],al
  408893:	push   esi
  408894:	mov    ecx,0xdb5e2232
  408899:	add    DWORD PTR [eax],eax
	...
  4088cb:	add    BYTE PTR [ebx+0x5e],ah
  4088ce:	sub    eax,0x16
  4088d1:	sbb    BYTE PTR [ebp-0x1],ch
  4088d4:	pop    eax
  4088d5:	push   ds
  4088d6:	clc    
  4088d7:	push   cs
  4088d8:	adc    ecx,DWORD PTR [esi-0x39948a94]
  4088de:	sar    ebx,0x94
  4088e1:	push   ds
  4088e2:	pop    esp
  4088e3:	xor    ah,BYTE PTR [eax+0x636a6d06]
  4088e9:	xchg   BYTE PTR [edx],bh
  4088eb:	sub    BYTE PTR [edx],ah
  4088ed:	pop    esi
  4088ee:	fistp  DWORD PTR [eax+esi*1-0x63]
  4088f2:	add    ebp,DWORD PTR [eax+0x61]
  4088f5:	pop    esi
  4088f6:	add    eax,DWORD PTR [eax-0xba5685]
  4088fc:	pop    esp
  4088fd:	fs inc ebx
  4088ff:	je     0x408965
  408901:	sub    al,0xd4
  408903:	(bad)  
  408904:	(bad)  
  408905:	je     0x408962
  408907:	sbb    DWORD PTR [edi+0x50],eax
  40890a:	ins    BYTE PTR es:[edi],dx
  40890b:	call   0xffad247a
  408910:	leave  
  408911:	bound  ebp,QWORD PTR [ebp+esi*2+0x5b]
  408915:	push   esp
  408916:	jmp    0xd9f0ae16
  40891b:	and    bl,BYTE PTR [edx+esi*1]
  40891e:	cld    
  40891f:	out    0x93,eax
  408921:	add    eax,0xdc0c6ca5
  408926:	cld    
  408927:	ins    BYTE PTR es:[edi],dx
  408928:	mov    ?,ebp
  40892a:	and    ch,0xf8
  40892d:	data16 mov gs,WORD PTR [eax+eax*1+0x0]
	...
  408962:	outs   dx,BYTE PTR ds:[esi]
  408963:	imul   eax,DWORD PTR [esi+0x1f5d64f6],0xa066e444
  40896d:	inc    ecx
  40896e:	addr16 add eax,0x82c77914
  408974:	sub    eax,0xd2ce356f
  408979:	add    edi,DWORD PTR [ecx]
  40897b:	(bad)  
  40897c:	push   ebp
  40897d:	mul    BYTE PTR [ebp+ebx*2-0x17]
  408981:	inc    ebx
  408982:	mov    ah,0x66
  408984:	jo     0x40894c
  408986:	test   al,0x7a
  408988:	hlt    
  408989:	fdivr  QWORD PTR [esp+eax*8-0x18]
  40898d:	js     0x4089ed
  40898f:	repnz add bl,al
  408992:	xchg   esp,eax
  408993:	out    0xe5,al
  408995:	add    edx,DWORD PTR [edi]
  408997:	repnz nop
  408999:	xlat   BYTE PTR ds:[ebx]
  40899a:	push   eax
  40899b:	(bad)  
  40899c:	call   0x74010e75
  4089a1:	add    esp,DWORD PTR [ebx-0x6]
  4089a4:	sub    bh,dh
  4089a6:	dec    ebp
  4089a7:	iret   
  4089a8:	adc    bl,bl
  4089aa:	cwde   
  4089ab:	data16 not dl
  4089ae:	les    eax,FWORD PTR ds:0xdd155ce9
  4089b4:	pop    eax
  4089b5:	xor    BYTE PTR [edx-0x3194c6fb],ah
  4089bb:	std    
  4089bc:	ror    dh,0x45
  4089bf:	data16 into 
  4089c1:	pop    esp
  4089c2:	fld    QWORD PTR [edx-0x3a]
  4089c5:	imul   eax,DWORD PTR [eax],0x0
	...
  4089f8:	mov    ebx,0x24c4f4e3
  4089fd:	iret   
  4089fe:	inc    eax
  408a00:	jo     0x408992
  408a02:	add    cl,ch
  408a04:	adc    eax,0x310674a6
  408a09:	pop    esi
  408a0a:	cmp    ch,BYTE PTR [ebp+0x1506678]
  408a10:	addr16 add eax,0xd6174fef
  408a16:	xor    ebp,DWORD PTR [eax]
  408a18:	addr16 aad 0xfe
  408a1b:	hlt    
  408a1c:	call   0x48ceb67e
  408a21:	callw  0xa736
  408a25:	call   WORD PTR [edx+0x66]
  408a29:	mov    edi,0xf05f1f7f
  408a2e:	stc    
  408a2f:	scas   eax,DWORD PTR es:[edi]
  408a30:	inc    esp
  408a31:	xor    al,al
  408a33:	nop
  408a34:	dec    eax
  408a35:	inc    WORD PTR [esi+0x35]
  408a39:	xchg   edi,eax
  408a3a:	cmp    dh,ah
  408a3c:	mov    bl,0x78
  408a3e:	(bad)  
  408a3f:	mov    esp,0xe1756604
  408a44:	cmp    BYTE PTR [ecx-0x3a07d941],dh
  408a4a:	pop    ebp
  408a4b:	xor    BYTE PTR ds:0xfdbc0001,bl
  408a51:	pop    eax
  408a52:	push   0xbe5660e9
  408a57:	xchg   ecx,eax
  408a58:	(bad)  
  408a59:	xor    BYTE PTR [ecx-0x17],al
	...
  408a8c:	add    BYTE PTR [eax],al
  408a8e:	stc    
  408a8f:	out    dx,eax
  408a90:	or     esi,esi
  408a92:	push   ebx
  408a93:	or     eax,0x64c106e8
  408a98:	call   DWORD PTR [ecx+0x66]
  408a9b:	add    eax,0x7c289fef
  408aa0:	xor    al,0x28
  408aa2:	addr16 fs jne 0x408a83
  408aa6:	leave  
  408aa7:	fiadd  DWORD PTR [edi]
  408aa9:	add    BYTE PTR [edx],dl
  408aab:	mov    ebx,0x21e5ffe5
  408ab0:	ret    0xa08
  408ab3:	ss mov ch,ah
  408ab6:	lds    edx,FWORD PTR [ebp+0xb]
  408ab9:	call   0x3f51f7
  408abe:	adc    ecx,ecx
  408ac0:	jae    0x408adc
  408ac2:	bound  ebp,QWORD PTR [ebp+0x33]
  408ac5:	inc    ecx
  408ac6:	or     bh,BYTE PTR [ecx]
  408ac8:	out    0xd8,eax
  408aca:	mov    edi,0x4a50feef
  408acf:	lock je 0x408ada
  408ad2:	loop   0x408a57
  408ad4:	(bad)  
  408ad5:	inc    DWORD PTR [ebp-0x40]
  408ad8:	aad    0xc1
  408ada:	inc    ebp
  408adb:	out    dx,eax
  408adc:	enter  0xd2c2,0x8
  408ae0:	push   ebp
  408ae1:	mov    esp,DWORD PTR [esi]
  408ae3:	mov    eax,esp
  408ae5:	cld    
  408ae6:	mov    al,ds:0x25086a08
  408aeb:	push   ebp
  408aec:	pop    es
  408aed:	call   0x403914
	...
  408b22:	add    BYTE PTR [eax],al
  408b24:	add    eax,DWORD PTR [ebp-0x5]
  408b27:	push   0xffffff8a
  408b29:	inc    eax
  408b2a:	outs   dx,BYTE PTR ds:[esi]
  408b2b:	xor    eax,0x9c6808bb
  408b30:	scas   al,BYTE PTR es:[edi]
  408b31:	dec    ecx
  408b32:	(bad)  
  408b33:	(bad)  
  408b34:	lahf   
  408b35:	sub    BYTE PTR ss:[ecx-0x76],al
  408b39:	sar    BYTE PTR [ebp+0xaef65c4],0xc0
  408b40:	out    dx,al
  408b41:	adc    edx,DWORD PTR [eax+0x68]
  408b44:	dec    ebx
  408b45:	or     bh,ch
  408b47:	mov    esi,0x874eefa
  408b4c:	xor    ch,BYTE PTR [edx+eiz*8-0x1]
  408b50:	and    eax,0x63c18dc1
  408b55:	cmp    ebp,DWORD PTR [ecx+0x6a]
  408b58:	arpl   si,ax
  408b5a:	fdiv   DWORD PTR [edx+eiz*4]
  408b5d:	outs   dx,BYTE PTR ds:[esi]
  408b5e:	fcmovnb st,st(0)
  408b60:	outs   dx,DWORD PTR ds:[esi]
  408b61:	sub    eax,0x456ff04
  408b66:	sbb    eax,DWORD PTR [ecx+0x63]
  408b69:	inc    esi
  408b6a:	jns    0x408b30
  408b6c:	or     al,0xab
  408b6e:	std    
  408b6f:	mov    edi,0x67d35a8f
  408b74:	bound  ebp,QWORD PTR [esi+0x58]
  408b77:	mov    esi,0x7ef9393
  408b7c:	sti    
  408b7d:	sbb    esp,DWORD PTR [ebp-0x1]
  408b80:	in     al,0x75
  408b82:	leave  
  408b83:	rcr    ah,0xda
  408b86:	(bad)  
	...
  408bb8:	add    BYTE PTR [eax],al
  408bba:	cmp    al,0x73
  408bbc:	cs inc ecx
  408bbe:	arpl   WORD PTR [esi],si
  408bc0:	ins    BYTE PTR es:[edi],dx
  408bc1:	xor    al,0x22
  408bc3:	outs   dx,BYTE PTR ds:[esi]
  408bc4:	push   0xc3051535
  408bc9:	(bad)  
  408bca:	mov    esp,0xacff3f4d
  408bcf:	push   esi
  408bd0:	inc    ebx
  408bd1:	je     0x408c27
  408bd3:	jle    0x408ba8
  408bd5:	(bad)  
  408bd6:	push   ss
  408bd7:	pop    bx
  408bd9:	or     dl,BYTE PTR [edx+esi*1+0x2d56e869]
  408be0:	imul   edi,edi,0x7edb6df9
  408be6:	lods   eax,DWORD PTR ss:[esi]
  408be8:	add    ebp,DWORD PTR [eax+0x40]
  408beb:	cmp    edx,eax
  408bed:	jmp    FWORD PTR [ebp-0x60]
  408bf0:	shr    DWORD PTR [eax],1
  408bf2:	and    ch,BYTE PTR [esi+0x5b]
  408bf5:	ss daa 
  408bf7:	pop    esp
  408bf8:	push   0xf7d9230b
  408bfd:	dec    edi
  408bfe:	mov    bl,0x5
  408c00:	out    0xee,al
  408c02:	pop    esp
  408c03:	ins    DWORD PTR es:[edi],dx
  408c04:	leave  
  408c05:	imul   edi,DWORD PTR [ebx+eiz*2],0x6323fcc1
  408c0c:	into   
  408c0d:	(bad)  [ebx+ebp*8]
  408c10:	jo     0x408c40
  408c12:	mov    ds:0x57e45105,al
  408c17:	(bad)  
  408c18:	call   0xfffbda85
  408c1d:	ret    0x0
	...
  408c50:	or     al,0x6b
  408c52:	cmc    
  408c53:	aas    
  408c54:	add    al,0x63
  408c56:	repnz inc ebx
  408c58:	ja     0x408c6c
  408c5a:	cmp    esp,edx
  408c5c:	cmc    
  408c5d:	fsub   st,st(0)
  408c5f:	pop    ebx
  408c60:	mov    ch,0x63
  408c62:	xchg   BYTE PTR [eax-0x5],ch
  408c65:	fs test eax,0xd4efdc68
  408c6b:	push   0x4b810d4e
  408c70:	int    0x62
  408c72:	data16 (bad) [edx+0x62]
  408c76:	aam    0xfb
  408c78:	les    edx,FWORD PTR [ebx+0x57]
  408c7b:	push   0x6909efb4
  408c80:	ss or  eax,0x62a53f51
  408c86:	ds push 0xee366116
  408c8c:	pop    esp
  408c8d:	ins    DWORD PTR es:[edi],dx
  408c8e:	imul   DWORD PTR [ecx+0x4530628c]
  408c94:	pop    edi
  408c95:	add    eax,0x628f7cb4
  408c9a:	pushf  
  408c9b:	idiv   DWORD PTR [ebp+ebx*2+0x25]
  408c9f:	push   0xef290e6c
  408ca4:	push   ss
  408ca5:	in     eax,dx
  408ca6:	pop    edi
  408ca7:	mov    cs:0xb8990005,al
  408cad:	nop
  408cae:	(bad)  
  408caf:	out    dx,al
  408cb0:	les    esi,FWORD PTR [ebp+0x394f]
	...
  408ce6:	daa    
  408ce7:	(bad)  
  408ce8:	dec    esi
  408cea:	add    eax,0x1e1c93ed
  408cef:	bound  ecx,QWORD PTR [edi-0x32]
  408cf2:	xor    cl,BYTE PTR [edx]
  408cf4:	call   0xffa34f13
  408cf9:	and    DWORD PTR [edi],edi
  408cfb:	add    eax,0xecbdc600
  408d00:	mov    ds:0x4f6227f4,al
  408d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d06:	adc    cl,BYTE PTR [edx]
  408d08:	call   0xffa310eb
  408d0d:	xor    DWORD PTR [edi],edx
  408d0f:	add    al,0x0
  408d11:	jle    0x408cd8
  408d13:	in     al,dx
  408d14:	mov    al,0xbc
  408d16:	pop    ds
  408d17:	bound  ecx,QWORD PTR [edi+0x7e]
  408d1a:	ror    BYTE PTR [ecx],cl
  408d1c:	call   0xffa2d0e3
  408d21:	sbb    DWORD PTR [ecx+eiz*4+0x478666ff],0x8e93e908
  408d2c:	in     al,dx
  408d2d:	push   0x23
  408d2f:	popa   
  408d30:	push   0xffffffe9
  408d32:	mov    cl,BYTE PTR [edi+edi*8]
  408d35:	mov    esp,0x7c7969a8
  408d3a:	add    al,0x62
  408d3c:	mov    DWORD PTR [esp+edi*8-0x6dd1e612],ebp
  408d43:	or     eax,ebp
  408d45:	imul   edi,esp,0x93ff61
	...
  408d7b:	add    BYTE PTR [ecx+0x62],al
  408d7e:	jne    0x408d61
  408d80:	sbb    bl,bl
  408d82:	dec    BYTE PTR [esi]
  408d84:	add    al,0xef
  408d86:	sbb    eax,DWORD PTR [eax]
  408d88:	pop    ebp
  408d89:	push   esp
  408d8a:	pop    es
  408d8b:	call   0x3f757e
  408d90:	dec    ebp
  408d91:	push   esi
  408d92:	sti    
  408d93:	call   edi
  408d95:	pop    esp
  408d96:	out    0x93,eax
  408d98:	jmp    edi
  408d9a:	dec    cl
  408d9c:	or     BYTE PTR [ecx-0x1],ah
  408d9f:	push   esp
  408da0:	sar    DWORD PTR [eax-0x485dff97],0x34
  408da7:	inc    ecx
  408da8:	cmp    bh,BYTE PTR ds:0x94b35db
  408dae:	push   DWORD PTR ds:0x410274
  408db4:	and    bl,BYTE PTR [eax-0x3e]
  408db7:	(bad)  
  408db8:	mov    ebp,0xf774bf5b
  408dbd:	xor    al,0xfe
  408dbf:	jne    0x408dbb
  408dc1:	out    0x74,eax
  408dc3:	or     al,0x2a
  408dc5:	call   0x9712963e
  408dca:	in     al,0xff
  408dcc:	pop    ebp
  408dcd:	mov    esp,0xe74dbfdd
  408dd2:	imul   eax,DWORD PTR [eax],0x4134b762
  408dd8:	mov    edx,0xb35db3c
  408ddd:	add    eax,0x268
	...
  408e12:	retf   0x8004
  408e15:	call   0x3f5434
  408e1a:	mov    cl,0xc4
  408e1c:	jae    0x408e33
  408e1e:	cli    
  408e1f:	out    0x74,eax
  408e21:	adc    BYTE PTR [ebp+0x55],cl
  408e24:	or     edx,DWORD PTR [eax+0x3d]
  408e27:	push   ebp
  408e28:	pop    es
  408e29:	call   0x3f4e27
  408e2e:	push   edx
  408e2f:	ja     0x408df0
  408e31:	jmp    DWORD PTR [ebx-0x9]
  408e34:	gs jne 0x408e8a
  408e37:	(bad)  
  408e39:	or     edi,ebx
  408e3b:	sti    
  408e3c:	das    
  408e3d:	inc    ecx
  408e3e:	arpl   WORD PTR [edi-0x11],bx
  408e41:	pop    es
  408e42:	dec    ebx
  408e43:	and    BYTE PTR [edi-0x1],bl
  408e46:	dec    esp
  408e47:	and    eax,0x21630c41
  408e4c:	jns    0x408e3a
  408e4e:	loopne 0x408df9
  408e50:	push   0xf9c4636a
  408e55:	(bad)  
  408e56:	mov    dh,0x66
  408e58:	pop    ebx
  408e59:	mov    esi,0x896546e7
  408e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e5f:	mov    ds:0x4714ffdc,al
  408e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e65:	push   0xffc258ce
  408e6a:	add    eax,0x83e7fc01
  408e6f:	jg     0x408ed6
  408e71:	dec    DWORD PTR [ebx+0xef036d]
	...
  408ea7:	add    BYTE PTR [ebp-0x5dcac3fb],ch
  408ead:	outs   dx,BYTE PTR ds:[esi]
  408eae:	fs jne 0x408f1c
  408eb1:	jbe    0x408e69
  408eb3:	(bad)  
  408eb4:	aam    0xd6
  408eb6:	fs jne 0x408e88
  408eb9:	out    dx,al
  408eba:	out    dx,al
  408ebb:	pop    es
  408ebc:	mov    ebx,0xbcffa81b
  408ec1:	adc    al,0x42
  408ec3:	add    al,0x63
  408ec5:	mov    eax,ds:0x29e2ec78
  408eca:	dec    esp
  408ecb:	mul    DWORD PTR [esi+eax*8+0x7d9f4576]
  408ed2:	fs jne 0x408f3c
  408ed5:	pop    ss
  408ed6:	das    
  408ed7:	push   esi
  408ed8:	cmp    ch,BYTE PTR [ebp+0x4eee803]
  408ede:	js     0x408ee4
  408ee0:	arpl   WORD PTR [ecx+ebp*1],cx
  408ee3:	cmc    
  408ee4:	fistp  QWORD PTR [eax+ebp*8]
  408ee7:	add    esp,DWORD PTR [ebx+0x48]
  408eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eeb:	imul   esp,DWORD PTR [ebx+0x5],0xffffffe9
  408eef:	add    esp,DWORD PTR [ecx+ecx*8]
  408ef2:	hlt    
  408ef3:	fs pop esp
  408ef5:	add    eax,0xed4cd9e9
  408efa:	call   0xe92dd3d8
  408eff:	jbe    0x408ea7
  408f01:	pop    ecx
  408f02:	cmp    DWORD PTR [edi-0x22],esi
  408f05:	pop    ecx
  408f06:	fisub  WORD PTR [esp+ebp*1-0x4a]
  408f0a:	int    0xee
	...
  408f3c:	add    BYTE PTR [eax],al
  408f3e:	sub    al,0x5f
  408f40:	cmp    al,0x68
  408f42:	or     esp,edi
  408f44:	push   edi
  408f45:	add    esp,DWORD PTR [ebx+0xa]
  408f48:	test   eax,0x526c67ef
  408f4d:	add    ah,BYTE PTR [ebx+0x5]
  408f50:	adc    DWORD PTR ds:0x64e8c44b,edi
  408f56:	outs   dx,BYTE PTR ds:[esi]
  408f57:	adc    DWORD PTR [ecx-0x71a0de87],eax
  408f5d:	rcr    ecx,cl
  408f5f:	xor    eax,0x56d77e74
  408f64:	jle    0x408fca
  408f66:	xor    esi,DWORD PTR [ebx+0x5ea2e980]
  408f6c:	outs   dx,BYTE PTR ds:[esi]
  408f6d:	jp     0x408f4d
  408f6f:	push   ebp
  408f70:	pop    esi
  408f71:	fs mov esp,0xb4a5396d
  408f77:	pop    esi
  408f78:	ret    
  408f79:	add    edi,DWORD PTR [ebx]
  408f7b:	int3   
  408f7c:	push   ss
  408f7d:	ret    
  408f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f7f:	pop    edi
  408f80:	jl     0x408ff5
  408f82:	xchg   esp,eax
  408f83:	pop    esi
  408f84:	ds fs dec esi
  408f87:	mov    bh,0xff
  408f89:	jmp    DWORD PTR [eax+0x2119e75e]
  408f8f:	pop    esi
  408f90:	push   DWORD PTR [eax-0x3]
  408f93:	push   0xeaff1ef7
  408f98:	inc    DWORD PTR [eax-0x16bee765]
  408f9e:	call   DWORD PTR [edi+0xfef0]
	...
  408fd4:	rcr    BYTE PTR [esi-0x1],0xb4
  408fd8:	es sub eax,0x93a8e941
  408fde:	shr    esi,0xc0
  408fe1:	mov    WORD PTR [ebp-0xa1672b],es
  408fe7:	push   ebx
  408fe8:	pop    edi
  408fe9:	in     eax,dx
  408fea:	push   ecx
  408feb:	pop    ds
  408fec:	es pop esi
  408fee:	(bad)  
  408fef:	xchg   esp,eax
  408ff0:	(bad)  
  408ff1:	push   esi
  408ff2:	inc    esi
  408ff4:	sbb    BYTE PTR [eax],0x56
  408ff7:	adc    BYTE PTR [esi],bl
  408ff9:	pop    esi
  408ffa:	out    0x5d,eax
  408ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ffd:	pop    esi
  408ffe:	jmp    DWORD PTR [eax-0x26]
  409001:	ins    BYTE PTR es:[edi],dx
  409002:	mul    DWORD PTR [esi+0x10ffeb80]
  409008:	or     ebx,DWORD PTR [eax]
  40900a:	inc    ecx
  40900b:	jmp    0x97312891
  409010:	sbb    BYTE PTR [esi-0x1],0xbc
  409014:	sbb    ch,BYTE PTR ds:0xd748e941
  40901a:	shl    BYTE PTR [esi+0x40],0x8c
  40901e:	test   DWORD PTR [ecx+0x74ff5e28],ecx
  409024:	jmp    0x67b5:0x405ef73c
  40902b:	(bad)  
  40902c:	dec    edx
  40902d:	(bad)  
  40902e:	dec    DWORD PTR [ebp-0x36]
  409031:	push   esp
  409032:	test   DWORD PTR [eax],0x35fee225
	...
  409068:	add    BYTE PTR [eax],al
  40906a:	in     al,dx
  40906b:	xor    BYTE PTR [ecx+0x0],al
  40906e:	and    dl,BYTE PTR [esi+0xe35ffc0]
  409074:	shl    BYTE PTR [ebx+eiz*2-0x7a],0xbd
  409079:	fmul   DWORD PTR [ebp-0x1e]
  40907c:	inc    BYTE PTR [edi+ecx*8]
  40907f:	push   ecx
  409080:	(bad)  
  409081:	xor    BYTE PTR ds:0x65f7dc8c,al
  409087:	call   0xa76b78db
  40908c:	(bad)  
  40908d:	jmp    DWORD PTR [ecx+0x5d]
  409090:	or     al,al
  409092:	into   
  409093:	push   cs
  409094:	push   eax
  409095:	call   0x4037d8
  40909a:	std    
  40909b:	(bad)  
  40909c:	fdivr  st(7),st
  40909e:	adc    eax,0x3a0014e8
  4090a3:	or     DWORD PTR [ebx-0x13fd143],eax
  4090a9:	dec    DWORD PTR [edx]
  4090ab:	xor    eax,0xec978364
  4090b0:	idiv   bh
  4090b2:	mov    ch,0x8
  4090b4:	je     0x409112
  4090b6:	mov    DWORD PTR [ebp-0x182a0818],esp
  4090bc:	push   DWORD PTR [ebx+0x29]
  4090bf:	imul   edi,edi,0xffa665ff
  4090c5:	jne    0x409099
  4090c7:	lock push 0xffffffba
  4090ca:	push   ebp
  4090cb:	out    0xfe,eax
  4090cd:	mov    ch,0x0
	...
  4090ff:	add    dh,ah
  409101:	mov    edi,0x3d35fffe
  409106:	pop    es
  409107:	call   0x400c11
  40910c:	adc    eax,0x63f7e87d
  409111:	mov    bl,0x61
  409113:	jmp    FWORD PTR [esi]
  409115:	imul   si,WORD PTR [ecx-0x9e3c27],0xffce
  40911d:	ret    0xff59
  409120:	mov    WORD PTR [ebx],ss
  409122:	fadd   DWORD PTR [edi]
  409124:	jnp    0x4090b5
  409126:	popf   
  409127:	(bad)  
  409128:	jl     0x40914d
  40912a:	cwde   
  40912b:	loopne 0x409199
  40912d:	sti    
  40912e:	popa   
  40912f:	push   esi
  409131:	imul   edx,DWORD PTR gs:[ebp-0x9df457],0x16
  409139:	and    bl,BYTE PTR [edx-0x1]
  40913c:	push   esp
  40913d:	pop    ebx
  40913e:	xlat   BYTE PTR ds:[ebx]
  40913f:	pop    es
  409140:	cmp    ecx,DWORD PTR [ecx-0x63]
  409143:	inc    DWORD PTR [ebx+ebp*2-0x69]
  409147:	in     al,0x34
  409149:	arpl   WORD PTR [ecx-0x18],sp
  40914c:	sar    BYTE PTR [eax+0x61],cl
  40914f:	jmp    FWORD PTR [ecx+edi*2]
  409152:	jo     0x40914b
  409154:	and    al,0x4b
  409156:	ins    BYTE PTR es:[edi],dx
  409157:	xchg   dh,bl
  409159:	inc    edx
  40915a:	popa   
  40915b:	dec    esi
  40915d:	xor    eax,0x460cff59
  409162:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  409195:	add    BYTE PTR [ebx+ebp*4],al
  409198:	popa   
  409199:	mov    ch,0x3
  40919b:	jnp    0x4091fe
  40919d:	dec    DWORD PTR [ebx]
  40919f:	(bad)  
  4091a0:	sahf   
  4091a1:	(bad)  
  4091a2:	in     al,dx
  4091a3:	jb     0x40913c
  4091a5:	lock in al,dx
  4091a7:	mov    ah,BYTE PTR [ecx-0x18]
  4091aa:	inc    esi
  4091ab:	shl    DWORD PTR [eax-0x1],0xd4
  4091af:	and    BYTE PTR [ecx+ebp*8-0x6c],bl
  4091b3:	aam    0x60
  4091b5:	inc    esp
  4091b7:	push   eax
  4091b8:	pop    edi
  4091b9:	call   0x4b696ca
  4091be:	arpl   WORD PTR [esi+0x2b],cx
  4091c1:	or     al,0x63
  4091c3:	mov    dl,0x61
  4091c5:	jo     0x4091a7
  4091c7:	inc    eax
  4091c8:	push   ecx
  4091c9:	out    dx,al
  4091ca:	pushf  
  4091cb:	in     eax,dx
  4091cc:	icebp  
  4091cd:	pusha  
  4091ce:	push   cs
  4091cf:	or     eax,0x5bcad951
  4091d4:	mov    ebx,DWORD PTR ss:[esi]
  4091d7:	pop    ecx
  4091d8:	pop    esp
  4091d9:	(bad)  
  4091da:	je     0x409190
  4091dc:	nop
  4091dd:	adc    DWORD PTR ds:0x6aebe8c6,ebp
  4091e3:	adc    DWORD PTR [eax-0x48ee9bfd],ebp
  4091e9:	sub    ah,BYTE PTR [edx+0x231d1105]
  4091ef:	pop    ebx
  4091f0:	dec    BYTE PTR [ebx+eiz*1]
  4091f3:	rcr    ch,cl
  4091f5:	mov    bl,0xbc
  4091f7:	add    al,0xe9
  4091f9:	jo     0x4091fb
	...
  40922b:	add    ch,bh
  40922d:	pop    edx
  40922e:	pop    esp
  40922f:	pop    esp
  409230:	xchg   ebx,eax
  409231:	pop    edx
  409232:	push   esp
  409233:	or     al,0x3b
  409235:	test   al,0xb7
  409237:	pusha  
  409238:	and    al,0x6e
  40923a:	loope  0x4091da
  40923c:	sbb    al,0x5b
  40923e:	je     0x409206
  409240:	or     al,0xb6
  409242:	push   eax
  409243:	call   DWORD PTR [esi-0x3c]
  409246:	call   0x28519d36
  40924b:	add    al,0xfc
  40924d:	adc    BYTE PTR [edi],bh
  40924f:	sub    esp,DWORD PTR [edx+0x23089105]
  409255:	pop    ebx
  409256:	xchg   esi,eax
  409257:	or     al,0x23
  409259:	shl    ch,cl
  40925b:	mov    bl,0x44
  40925d:	pop    es
  40925e:	jmp    0xf49ba7d3
  409263:	pop    ebx
  409264:	xor    ebx,DWORD PTR [edx+0x0]
  409267:	cld    
  409268:	pop    eax
  409269:	ins    DWORD PTR es:[edi],dx
  40926a:	outs   dx,BYTE PTR ds:[esi]
  40926b:	pop    DWORD PTR [ebx+0x5a]
  40926e:	call   0xff9b66b0
  409273:	sar    DWORD PTR [ebp+0x13],1
  409276:	inc    ecx
  409277:	jmp    0x414862bf
  40927c:	mov    ebx,0x346ff59
  409281:	sar    bl,1
  409283:	ds mov ch,0x2
  409286:	call   0xff9b797e
  40928b:	and    BYTE PTR [esi],ah
  40928d:	add    DWORD PTR [eax],eax
  40928f:	mov    esp,0x0
	...
  4092c0:	add    BYTE PTR [eax],al
  4092c2:	out    0x69,eax
  4092c4:	and    DWORD PTR ds:0x16ff522c,0xb9fbc0d5
  4092ce:	ret    
  4092cf:	ror    BYTE PTR [ebx],1
  4092d1:	push   es
  4092d2:	ins    DWORD PTR es:[edi],dx
  4092d3:	mov    bl,0x28
  4092d5:	test   al,0x60
  4092d7:	ins    DWORD PTR es:[edi],dx
  4092d8:	std    
  4092d9:	addr16 pusha 
  4092db:	add    eax,0x8053290b
  4092e0:	shr    eax,0x60
  4092e3:	add    eax,0x58f24c7
  4092e8:	add    cl,ch
  4092ea:	pusha  
  4092eb:	inc    edx
  4092ec:	inc    ebp
  4092ed:	aad    0xbc
  4092ef:	add    al,BYTE PTR [eax]
  4092f1:	jmp    0xe9a9ed00
  4092f6:	cli    
  4092f7:	pop    ecx
  4092f8:	imul   ebp,ecx,0x19f3bff3
  4092fe:	sar    BYTE PTR [edi-0xc],cl
  409301:	sahf   
  409302:	xchg   esp,eax
  409303:	pop    edx
  409304:	push   eax
  409305:	sahf   
  409306:	or     dl,BYTE PTR [edx-0x1]
  409309:	sbb    al,0x83
  40930b:	ins    DWORD PTR es:[edi],dx
  40930c:	iret   
  40930d:	pop    edi
  40930e:	addr16 add eax,0x3d0a000b
  409314:	add    al,0xe9
  409316:	inc    esi
  409317:	add    BYTE PTR [eax],al
  409319:	add    BYTE PTR [edx-0x3e],ah
  40931c:	daa    
  40931d:	inc    ecx
  40931e:	retf   0x74ba
  409321:	or     al,0x12
  409323:	mov    bh,0xbe
  409325:	inc    DWORD PTR [eax]
	...
  409357:	add    BYTE PTR ds:0x3fd08a91,cl
  40935d:	mov    esp,?
  40935f:	imul   DWORD PTR ds:0x32524fba
  409365:	out    0xbe,eax
  409367:	dec    DWORD PTR [ebp-0x78]
  40936a:	test   eax,esi
  40936c:	inc    ebp
  40936d:	mov    edx,0x7972e8fe
  409372:	(bad)  
  409373:	call   eax
  409375:	add    eax,0x40948a68
  40937a:	(bad)  
  40937b:	inc    BYTE PTR [edi]
  40937d:	mov    cl,0xf6
  40937f:	jmp    FWORD PTR [ebp-0x48]
  409382:	xor    al,0x56
  409384:	xor    eax,DWORD PTR [edx-0x1]
  409387:	out    0x22,eax
  409389:	js     0x40938a
  40938b:	inc    ebx
  40938d:	mov    fs,esp
  40938f:	test   DWORD PTR [ebp-0x48],0x34920069
  409396:	xor    eax,0xb4b83a41
  40939b:	lock add eax,0x77fffeb8
  4093a1:	(bad)
  4093a5:	in     eax,dx
  4093a6:	sbb    DWORD PTR [edi-0x7a774833],edi
  4093ac:	push   ds
  4093ad:	mov    al,0xfe
  4093af:	jmp    DWORD PTR [eax+0x147c6801]
  4093b5:	inc    edx
  4093b6:	(bad)  
  4093b7:	(bad)  
  4093b8:	xchg   edi,eax
  4093b9:	mov    ah,0xf6
  4093bb:	inc    DWORD PTR [eax]
	...
  4093ed:	add    BYTE PTR [ebx+0x6f],ah
  4093f0:	pop    esi
  4093f1:	xor    eax,0xffc44535
  4093f6:	mov    esp,0xccff9d82
  4093fb:	aad    0x87
  4093fd:	loopne 0x4093cb
  4093ff:	iret   
  409400:	pop    ebp
  409401:	push   0x63
  409403:	push   es
  409404:	test   DWORD PTR [esi],esi
  409406:	and    ch,BYTE PTR [esi+0x5e]
  409409:	mov    ch,0xb3
  40940b:	scas   eax,DWORD PTR es:[edi]
  40940c:	pop    ebp
  40940d:	jmp    DWORD PTR [ecx+edi*8+0x6e2228b5]
  409414:	imul   ebx,esi,0xffffffd5
  409417:	mov    edi,0xb6e6895d
  40941c:	push   ebp
  40941d:	inc    DWORD PTR [esp+eax*2+0x50d06803]
  409424:	(bad)  
  409425:	push   DWORD PTR [ebp-0x47]
  409428:	push   edx
  409429:	imul   DWORD PTR [edi+esi*8+0x5d]
  40942d:	xor    eax,0xffc4450d
  409432:	inc    esp
  409433:	cs popf 
  409435:	call   DWORD PTR [ebp+edx*8-0x79]
  409439:	fcom   QWORD PTR [edi+edx*2+0x5d]
  40943d:	add    DWORD PTR [esi],0xa
  409440:	push   esi
  409441:	(bad)  
  409442:	cmp    al,0x6e
  409444:	xlat   BYTE PTR ds:[ebx]
  409445:	fs loopne 0x4093e8
  409448:	jo     0x409441
  40944a:	sub    al,0x37
  40944c:	add    al,0x74
  40944e:	xchg   ebx,ebp
  409450:	sahf   
  409451:	call   0x409456
	...
  409482:	add    BYTE PTR [eax],al
  409484:	adc    al,0x47
  409486:	pop    ebp
  409487:	add    BYTE PTR [edi+0xcffebfb],cl
  40948d:	inc    edi
  40948e:	sahf   
  40948f:	dec    DWORD PTR [esi-0x44fc949a]
  409495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409496:	pop    ebp
  409497:	jmp    FWORD PTR [esi-0x13aa6afc]
  40949d:	push   edi
  40949e:	sahf   
  40949f:	xlat   BYTE PTR ds:[ebx]
  4094a0:	pop    esp
  4094a1:	ins    DWORD PTR es:[edi],dx
  4094a2:	ds pushf 
  4094a4:	fcom   QWORD PTR [edi-0x72]
  4094a7:	xchg   edi,eax
  4094a8:	retf   
  4094a9:	dec    edi
  4094aa:	xchg   BYTE PTR [ebp-0x34],bl
  4094ad:	shl    eax,1
  4094af:	imul   ebx,DWORD PTR [edx],0xffffff9d
  4094b2:	jbe    0x409511
  4094b4:	mov    esp,0xb4558591
  4094b9:	push   edi
  4094ba:	data16 xlat BYTE PTR ds:[ebx]
  4094bc:	fs ins DWORD PTR es:[edi],dx
  4094be:	and    bl,BYTE PTR [esp+eiz*4-0x7c68a9a9]
  4094c5:	dec    edi
  4094c6:	dec    esi
  4094c7:	pop    ebp
  4094c8:	xchg   esp,eax
  4094c9:	shl    eax,1
  4094cb:	imul   edi,DWORD PTR [esi],0xffffff9d
  4094ce:	ds pop ebp
  4094d0:	test   BYTE PTR [ecx+0x577c5515],dl
  4094d6:	xlat   BYTE PTR cs:[ebx]
  4094d8:	pop    esp
  4094d9:	ins    DWORD PTR es:[edi],dx
  4094da:	push   es
  4094db:	pushf  
  4094dc:	ins    BYTE PTR es:[edi],dx
  4094dd:	push   edi
  4094de:	push   ds
  4094df:	xchg   edi,eax
  4094e0:	jg     0x409531
  4094e2:	push   ss
  4094e3:	pop    ebp
  4094e4:	dec    ebx
  4094e5:	sub    eax,0x5d52
	...
  40951a:	push   esp
  40951b:	push   edi
  40951c:	cmp    al,0x70
  40951e:	push   esp
  40951f:	push   edi
  409520:	(bad)  
  409521:	imul   esp,DWORD PTR [ebp-0x66],0xfffffff6
  409525:	pop    esp
  409526:	cmp    al,0x91
  409528:	add    DWORD PTR [ebp+0x34],edx
  40952b:	push   edi
  40952c:	shl    eax,1
  40952e:	jmp    0xee9d7389
  409533:	ficomp WORD PTR gs:[esp+ebx*1+0x6e]
  409538:	loope  0x4094d2
  40953a:	adc    al,0x57
  40953c:	(bad)  
  40953d:	xchg   esi,eax
  40953e:	das    
  40953f:	dec    edi
  409540:	mov    esi,0x58fb5c
  409545:	jae    0x4094e6
  409547:	push   esi
  409548:	push   DWORD PTR [eax+edx*4+0x4e]
  40954c:	jmp    DWORD PTR [esi-0x6ef82f71]
  409552:	dec    edi
  409553:	push   edi
  409554:	call   DWORD PTR [esi-0x690f6fc1]
  40955a:	aaa    
  40955b:	push   esi
  40955c:	call   0xff977fee
  409561:	jle    0x409500
  409563:	dec    esi
  409564:	jmp    0xff96b290
  409569:	outs   dx,BYTE PTR ds:[esi]
  40956a:	lea    ebx,[edx-0x18]
  40956d:	pop    ss
  40956e:	fadd   QWORD PTR ds:0xd223000
  409574:	add    BYTE PTR [ebx+ebp*8+0x34258369],bh
  40957b:	jmp    0x40957c
  40957d:	rol    BYTE PTR [eax],cl
	...
  4095af:	add    BYTE PTR [esi+edx*2+0x75],bl
  4095b3:	icebp  
  4095b4:	clc    
  4095b5:	dec    esi
  4095b6:	mov    bh,0x36
  4095b8:	pop    ds
  4095b9:	mov    WORD PTR [ebp+0x2d],es
  4095bc:	mov    BYTE PTR [edi+0x36],dh
  4095bf:	test   al,0x60
  4095c1:	push   esi
  4095c2:	jne    0x4095b5
  4095c4:	clc    
  4095c5:	dec    esi
  4095c6:	std    
  4095c7:	push   ss
  4095c8:	mov    edi,0xb70d7556
  4095cd:	rol    BYTE PTR [edi],1
  4095cf:	adc    DWORD PTR [ecx-0x65010063],eax
  4095d5:	inc    ebx
  4095d6:	add    al,0xe9
  4095d8:	cmc    
  4095d9:	mov    ch,ah
  4095db:	push   0xe6f7359c
  4095e0:	mov    BYTE PTR [eax+0x56efdd45],cl
  4095e6:	jne    0x4095cd
  4095e8:	mov    ecx,0x1e005610
  4095ed:	push   esi
  4095ee:	out    0x0,eax
  4095f0:	push   ds
  4095f1:	lea    eax,[eax]
  4095f3:	add    BYTE PTR [ecx],dl
  4095f5:	ret    0x850e
  4095f8:	lock (bad) 
  4095fa:	(bad)  
  4095fb:	(bad)  
  4095fc:	mov    ebp,0xfa00f743
  409601:	add    DWORD PTR [eax],eax
  409603:	(bad)  
  409604:	aas    
  409605:	mov    ch,0xfe
  409607:	pop    es
  409608:	retf   0x6a01
  40960b:	add    BYTE PTR [eax+0x1],ah
  40960e:	push   0x0
  409610:	jo     0x409613
  409612:	lea    eax,[ebp+0x0]
	...
  409645:	add    BYTE PTR [esi-0x6f],cl
  409648:	mov    WORD PTR [ebp-0x14dc2],es
  40964e:	pop    edx
  40964f:	mov    edx,0x3445f874
  409654:	sti    
  409655:	call   0x412326
  40965a:	add    ecx,0xbc230573
  409660:	add    BYTE PTR [eax],al
  409662:	jp     0x4096cd
  409664:	(bad)  
  409665:	sub    BYTE PTR [ebx-0x798a00ff],bh
  40966b:	jmp    0xba865448
  409670:	mov    dl,al
  409672:	test   DWORD PTR [ebx-0x45ba080c],0x4f62524f
  40967c:	mov    ebp,0x858265ff
  409681:	lock dec ebp
  409683:	mov    al,0xfe
  409685:	push   0x3a
  409687:	popa   
  409688:	cli    
  409689:	or     ecx,DWORD PTR ss:[ecx]
  40968c:	push   DWORD PTR [ebp-0x147c6]
  409692:	inc    ebp
  409693:	not    BYTE PTR [ebp+0x29]
  409696:	jnp    0x4096a1
  409698:	call   0x5ab9f9c2
  40969d:	(bad)  
  40969e:	jmp    0xed4c:0xcf75ee9
  4096a5:	(bad)  
  4096a6:	jl     0x4096ea
  4096a8:	adc    DWORD PTR [ecx+0x0],eax
	...
  4096db:	add    BYTE PTR [ebx-0x65],ah
  4096de:	nop
  4096df:	lock in al,dx
  4096e1:	mov    ds:0x1436ff5a,eax
  4096e6:	sub    eax,0x2766341
  4096eb:	mov    ebp,0x858c7bdc
  4096f0:	(bad)  
  4096f1:	jnp    0x40974d
  4096f3:	(bad)  
  4096f4:	cmp    DWORD PTR [esi-0x15],ebx
  4096f7:	lock lea ebx,ds:0xcef6ff04
  4096fe:	push   ecx
  4096ff:	push   DWORD PTR [ebx+eiz*8-0x6285a9f1]
  409706:	add    ebp,eax
  409708:	mov    edx,0xeaff5a72
  40970d:	loope  0x409779
  40970f:	not    DWORD PTR [ebx+eax*8-0x33fb0014]
  409716:	adc    BYTE PTR [ecx+0x63],al
  409719:	adc    edx,DWORD PTR [eax+0x5a1b74f0]
  40971f:	jmp    FWORD PTR [esi]
  409721:	jl     0x40974f
  409723:	inc    ecx
  409724:	arpl   si,si
  409726:	dec    ebp
  409727:	mov    esp,0x858bf364
  40972c:	inc    ebx
  40972d:	repz pop ecx
  40972f:	jmp    esi
  409731:	call   0xb8d8e64
  409736:	mov    bl,0x67
  409738:	dec    ebp
  409739:	pushf  
  40973a:	(bad)  
  40973b:	(bad)  
  40973c:	cmp    eax,0xf75311
	...
  409771:	add    BYTE PTR [ebx+eiz*2],dh
  409774:	pop    ecx
  409775:	xor    eax,0xc3100595
  40977a:	and    al,0x6c
  40977c:	xchg   ecx,eax
  40977d:	cwde   
  40977e:	sbb    al,0x54
  409780:	loop   0x4097c5
  409782:	(bad)  
  409783:	out    dx,al
  409784:	imul   edx,DWORD PTR [edi+0x59c65c37],0x58d8da5f
  40978e:	xor    eax,DWORD PTR [esp+ebp*2-0x51ac13c8]
  409795:	mov    ah,0x4
  409797:	ficomp DWORD PTR [edi+0x59]
  40979a:	in     al,0x5f
  40979c:	cmc    
  40979d:	or     al,0xa3
  40979f:	fsubr  st,st(6)
  4097a1:	mov    bl,0xbc
  4097a3:	fisttp QWORD PTR [edi+0x59]
  4097a6:	int3   
  4097a7:	dec    ebx
  4097a8:	ins    BYTE PTR es:[edi],dx
  4097a9:	cmp    ah,cl
  4097ab:	push   ebx
  4097ac:	jle    0x40979d
  4097ae:	mov    esp,0xde86e953
  4097b3:	xor    al,0x76
  4097b5:	pop    ecx
  4097b6:	lods   al,BYTE PTR ds:[esi]
  4097b7:	mov    ah,0xd0
  4097b9:	add    al,0x6c
  4097bb:	(bad)  
  4097bc:	call   0x5e956e19
  4097c1:	pop    ecx
  4097c2:	xchg   esp,eax
  4097c3:	push   ebx
  4097c4:	adc    al,0xb2
  4097c6:	cmp    eax,esi
  4097c8:	call   0x3ed1c138
  4097cd:	pop    ecx
  4097ce:	jmp    0x6a53:0x74511189
  4097d5:	xchg   edi,eax
	...
  409806:	add    BYTE PTR [eax],al
  409808:	xchg   DWORD PTR [ebx+0x26],ebx
  40980b:	pop    ecx
  40980c:	arpl   WORD PTR [eiz*2-0x16fa9c83],ax
  409813:	test   BYTE PTR [esi],dl
  409815:	bound  edx,QWORD PTR [esi]
  409817:	pop    ecx
  409818:	dec    esp
  409819:	push   es
  40981a:	idiv   BYTE PTR [edi-0x2b]
  40981d:	add    eax,0x90e003e9
  409822:	add    BYTE PTR [ecx],al
  409824:	xchg   edx,eax
  409825:	push   edx
  409826:	(bad)  
  409827:	jmp    0xe9c22187
  40982c:	pusha  
  40982d:	add    eax,0x6260f968
  409832:	mov    esi,0xe80b25d6
  409837:	js     0x409816
  409839:	push   edx
  40983a:	inc    esi
  40983c:	aad    0x61
  40983e:	idiv   DWORD PTR [esi-0x1e8aad65]
  409844:	mov    BYTE PTR [eax-0x4b],ch
  409847:	scas   al,BYTE PTR es:[edi]
  409848:	mov    edx,DWORD PTR [edx-0x4b]
  40984b:	xchg   ecx,eax
  40984c:	xchg   ebx,eax
  40984d:	push   edx
  40984e:	call   FWORD PTR [esi-0x4117f553]
  409854:	in     eax,0x52
  409856:	dec    DWORD PTR [esi-0x79089623]
  40985c:	sub    edx,DWORD PTR [edx+0x75]
  40985f:	icebp  
  409860:	dec    eax
  409861:	cmp    al,0xb5
  409863:	jbe    0x409880
  409865:	push   edx
  409866:	mov    ch,0x8d
  409868:	adc    edx,DWORD PTR [edx-0x1]
  40986b:	data16 add BYTE PTR [eax],al
	...
  40989e:	xchg   ebp,eax
  40989f:	or     ch,al
  4098a1:	shr    ch,0x52
  4098a4:	call   DWORD PTR [esi-0x1b]
  4098a7:	test   DWORD PTR gs:[esi+0x2b],0xf8f17552
  4098af:	lahf   
  4098b0:	mov    ch,0x3e
  4098b2:	sbb    eax,DWORD PTR [esi+0x521311bd]
  4098b8:	(bad)  
  4098b9:	jmp    0x64c3885a
  4098be:	xor    BYTE PTR [edx-0x1],bl
  4098c1:	push   ds
  4098c2:	pop    esp
  4098c3:	fst    DWORD PTR [ecx]
  4098c5:	(bad)  
  4098c6:	aad    0x2d
  4098c8:	test   DWORD PTR [esi],0x3052ab
  4098ce:	pop    ebp
  4098cf:	inc    ebx
  4098d0:	pop    es
  4098d1:	call   0x401be9
  4098d6:	popa   
  4098d7:	add    BYTE PTR [edx+0x0],ch
  4098da:	cmp    eax,0x5fe80740
  4098df:	je     0x4098e0
  4098e1:	(bad)  
  4098e2:	cmp    eax,0x2df7e474
  4098e7:	mov    edx,0xb9f289e7
  4098ec:	(bad)  
  4098ed:	inc    DWORD PTR [edi-0x42000923]
  4098f3:	loopne 0x409972
  4098f5:	mov    eax,0xb5feb9ad
  4098fa:	and    al,dl
  4098fc:	(bad)  
  4098fd:	call   edx
  4098ff:	xor    eax,0xffb7
	...
  409934:	std    
  409935:	mov    ecx,0xb9f5e0b4
  40993a:	(bad)  
  40993b:	call   0x400aa2
  409940:	fnsave [ebx-0x28]
  409943:	idiv   DWORD PTR ds:0x725de7ba
  409949:	mov    edx,0xb977fffe
  40994e:	idiv   bh
  409950:	cmp    eax,0x3db851e1
  409955:	mov    edx,0xe03245fe
  40995a:	aam    0xfd
  40995c:	sbb    eax,0x1e75feba
  409961:	loope  0x4098fe
  409963:	mov    cl,BYTE PTR [edx-0x7d3d36fb]
  409969:	add    eax,0x862e8b55
  40996e:	(bad)  
  40996f:	cld    
  409970:	rol    BYTE PTR ds:0x367d0d6a,1
  409976:	pop    es
  409977:	call   0xffd11bdf
  40997c:	dec    esp
  40997d:	out    0xc0,al
  40997f:	sti    
  409980:	mov    ebx,0x63410e19
  409985:	dec    edi
  409986:	rol    BYTE PTR [edi],1
  409988:	dec    ebx
  409989:	ficom  DWORD PTR [edi-0x1]
  40998c:	sub    al,0x60
  40998e:	sar    bl,1
  409990:	and    al,0xb2
  409992:	or     ebp,eax
  409994:	in     al,dx
  409995:	jns    0x4099ed
  409997:	inc    DWORD PTR [eax]
	...
  4099c9:	add    BYTE PTR [edx],ch
  4099cb:	popf   
  4099cc:	(bad)  
  4099cd:	push   DWORD PTR [edi+0x1f8166e3]
  4099d3:	fwait
  4099d4:	dec    esi
  4099d5:	(bad)  
  4099d6:	cld    
  4099d7:	loope  0x409998
  4099d9:	sti    
  4099da:	xchg   ebx,eax
  4099db:	xchg   edi,eax
  4099dc:	ror    BYTE PTR [ebx],1
  4099de:	in     al,dx
  4099df:	pop    ecx
  4099e0:	lods   eax,DWORD PTR ds:[esi]
  4099e1:	sub    BYTE PTR [edx-0x16ad94a2],ah
  4099e7:	pop    esi
  4099e8:	add    ecx,DWORD PTR [ebx]
  4099ea:	mov    ds:0x615f8067,eax
  4099ef:	pop    esi
  4099f0:	add    eax,edi
  4099f2:	push   ds
  4099f3:	xchg   BYTE PTR [ebx],al
  4099f5:	add    BYTE PTR [ebx+0x5e],ah
  4099f8:	ds inc ebp
  4099fa:	scas   eax,DWORD PTR es:[edi]
  4099fb:	xlat   BYTE PTR ds:[ebx]
  4099fc:	std    
  4099fd:	jmp    FWORD PTR [esp+eax*1+0x34636a04]
  409a04:	add    ebp,DWORD PTR [edx+0x63]
  409a07:	loope  0x4099c8
  409a09:	repz xor ebp,ecx
  409a0c:	jg     0x409a02
  409a0e:	xchg   esp,eax
  409a0f:	mov    edi,0x91845055
  409a14:	pop    ebx
  409a15:	push   esi
  409a17:	adc    DWORD PTR [ebx+0x24],ebp
  409a1a:	jmp    0xa34b9d7d
  409a1f:	call   0x3eb:0x541e900
  409a26:	arpl   bp,bx
  409a28:	and    eax,0x1605a22b
  409a2d:	rol    BYTE PTR [eax],1
	...
  409a5f:	add    BYTE PTR [eax+0x5d],bl
  409a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a63:	call   0x89ee:0x33725044
  409a6a:	cmc    
  409a6b:	dec    ebp
  409a6c:	xor    al,0x50
  409a6e:	cdq    
  409a6f:	mov    cl,0x44
  409a71:	xor    DWORD PTR [edx],0x6c7e2456
  409a77:	push   esp
  409a78:	adc    al,0x50
  409a7a:	fiadd  WORD PTR [edi+0x55de40de]
  409a80:	or     al,0xb5
  409a82:	inc    eax
  409a83:	jg     0x409ad1
  409a85:	(bad)  
  409a86:	call   0xb69550df
  409a8b:	push   ebp
  409a8c:	hlt    
  409a8d:	dec    edi
  409a8e:	cld    
  409a8f:	lods   eax,DWORD PTR ds:[esi]
  409a90:	cmp    eax,esi
  409a92:	call   0xa6cb7002
  409a97:	push   ebp
  409a98:	jmp    0x34f:0xd44d8589
  409a9f:	add    al,0x3b
  409aa1:	ins    BYTE PTR es:[edi],dx
  409aa2:	(bad)  
  409aa3:	ret    0x4ec4
  409aa6:	cmp    al,0x54
  409aa8:	mov    ah,0x4f
  409aaa:	jle    0x409b01
  409aac:	outs   dx,BYTE PTR ds:[esi]
  409aad:	mov    bh,0xbf
  409aaf:	ret    0x67ac
  409ab2:	stc    
  409ab3:	cdq    
  409ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ab5:	dec    edi
  409ab6:	jo     0x409b37
  409ab8:	(bad)  
  409ab9:	push   edi
  409aba:	pop    esi
  409abb:	push   ebp
  409abc:	or     DWORD PTR ds:0xc654a3c1,eax
  409ac2:	call   0x409b1b
	...
  409af3:	add    BYTE PTR [eax],al
  409af5:	add    dh,cl
  409af7:	push   esp
  409af8:	ds push ebp
  409afa:	jl     0x409b4b
  409afc:	hlt    
  409afd:	lods   eax,DWORD PTR ds:[esi]
  409afe:	dec    ebx
  409aff:	(bad)  
  409b00:	(bad)  
  409b01:	call   0x2efa4dfe
  409b06:	push   cs
  409b07:	jle    0x409a8e
  409b09:	adc    DWORD PTR [esi+0x6093ff4e],ebp
  409b0f:	(bad)  [edx-0x1b0de22]
  409b15:	push   esp
  409b16:	scas   eax,DWORD PTR es:[edi]
  409b17:	push   esi
  409b18:	inc    DWORD PTR [esi]
  409b1a:	xchg   esi,eax
  409b1b:	sbb    BYTE PTR [esi-0x30],dl
  409b1e:	and    DWORD PTR [edi-0x19],ecx
  409b21:	mov    ebp,0x60ff4eca
  409b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b27:	gs mul esi
  409b2a:	mov    bh,0x80
  409b2c:	test   ecx,eax
  409b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b2f:	dec    esi
  409b30:	(bad)  
  409b31:	cmp    edi,edi
  409b33:	test   al,0x37
  409b35:	sub    BYTE PTR [edi+0x4e],bl
  409b38:	mov    ch,0xb9
  409b3a:	scas   eax,DWORD PTR es:[edi]
  409b3b:	dec    esi
  409b3c:	(bad)  
  409b3d:	mov    esi,0x2828b765
  409b42:	addr16 pop ebp
  409b44:	adc    DWORD PTR [ebx-0x71],esi
  409b47:	dec    esi
  409b48:	or     ebp,DWORD PTR [ecx+0x5c82f3ac]
  409b4e:	cwde   
  409b4f:	push   esi
  409b50:	call   DWORD PTR [esi-0x71f62634]
  409b56:	jo     0x409bd6
  409b58:	test   DWORD PTR [ebp+0x0],esp
	...
  409b8a:	add    BYTE PTR [eax],al
  409b8c:	das    
  409b8d:	dec    esi
  409b8e:	call   DWORD PTR [edx-0x6a7ab996]
  409b94:	pop    ds
  409b95:	dec    esi
  409b96:	call   esp
  409b98:	pusha  
  409b99:	add    eax,0x3308b900
  409b9e:	mov    dh,0x5e
  409ba0:	das    
  409ba1:	add    BYTE PTR [ebp-0xb1e0c7],0xb9
  409ba8:	js     0x409b2a
  409baa:	aaa    
  409bab:	add    bl,cl
  409bad:	add    bh,bh
  409baf:	mov    ch,0x3a
  409bb1:	sar    esi,0xff
  409bb4:	xor    eax,0xbb2955ff
  409bb9:	add    ch,al
  409bbb:	int    0xc3
  409bbd:	mov    ecx,0x3e8a0bfe
  409bc2:	adc    al,BYTE PTR [ebx-0x8ed49]
  409bc8:	push   ebp
  409bc9:	dec    esi
  409bca:	je     0x409bd6
  409bcc:	repnz mov es,WORD PTR gs:[ebp-0x13eb2]
  409bd4:	popa   
  409bd5:	cld    
  409bd6:	mov    BYTE PTR [ebp-0x13eb2],0xa
  409bdd:	add    al,BYTE PTR [eax]
  409bdf:	add    BYTE PTR [edx-0x4f],bl
  409be2:	lea    esi,[esi-0x427d4dcb]
  409be8:	push   ds
  409be9:	stos   BYTE PTR es:[edi],al
  409bea:	(bad)  
  409beb:	dec    DWORD PTR [edx]
  409bed:	ss add DWORD PTR ds:[eax],0x0
	...
  409c22:	ja     0x409c31
  409c24:	idiv   edi
  409c26:	mov    ch,0x6
  409c28:	jne    0x409c60
  409c2a:	mov    al,ds:0x16858d09
  409c2f:	stos   BYTE PTR es:[edi],al
  409c30:	(bad)  
  409c31:	call   FWORD PTR [edx-0x121b4b4e]
  409c37:	mov    cl,0xfe
  409c39:	call   0x3fba36
  409c3e:	mov    cl,0xc1
  409c40:	jae    0x409c4b
  409c42:	dec    ecx
  409c43:	je     0x409c11
  409c45:	div    DWORD PTR ds:0x8f74ffb2
  409c4b:	mov    dl,0xb4
  409c4d:	in     al,0x3d
  409c4f:	mov    dl,0xfe
  409c51:	call   0x400830
  409c56:	arpl   WORD PTR [edi],bx
  409c58:	mov    esp,esp
  409c5a:	mov    WORD PTR [esi+0x5c630052],?
  409c60:	add    eax,DWORD PTR [ebx-0xa5384a]
  409c66:	ins    BYTE PTR es:[edi],dx
  409c67:	pop    ebx
  409c68:	xlat   BYTE PTR ds:[ebx]
  409c69:	push   0xffffffe0
  409c6b:	loopne 0x409ccc
  409c6d:	neg    DWORD PTR [esp+0x4]
  409c71:	je     0x409c34
  409c73:	fist   WORD PTR [eax+0x52f454e8]
  409c79:	add    bh,cl
  409c7b:	xchg   ebp,eax
  409c7c:	fild   DWORD PTR [ecx]
  409c7e:	arpl   bx,si
  409c80:	xchg   ecx,eax
  409c81:	jmp    FWORD PTR [esi+0xa75b56]
	...
  409cb7:	add    cl,dh
  409cb9:	push   ebx
  409cba:	push   edx
  409cbb:	(bad)  
  409cbc:	out    dx,al
  409cbd:	dec    edx
  409cbe:	pop    edx
  409cbf:	call   FWORD PTR [esp+eiz*2]
  409cc2:	fadd   DWORD PTR [edi]
  409cc4:	or     ebp,DWORD PTR [eax-0x6b]
  409cc7:	dec    DWORD PTR [esp+esi*1]
  409cca:	cwde   
  409ccb:	call   0xff92d8dc
  409cd0:	jbe    0x409d28
  409cd2:	pop    ebx
  409cd3:	in     eax,dx
  409cd4:	mov    cl,0x8b
  409cd6:	push   edx
  409cd7:	push   DWORD PTR [esi-0x1b00a55e]
  409cdd:	fwait
  409cde:	cwde   
  409cdf:	in     al,0xd4
  409ce1:	mov    ds:0x564eff52,eax
  409ce6:	pop    ebx
  409ce7:	lods   eax,DWORD PTR ds:[esi]
  409ce8:	adc    DWORD PTR [edx+edx*2-0x1],esi
  409cec:	push   cs
  409ced:	fwait
  409cee:	pop    edx
  409cef:	(bad)  
  409cf0:	mov    esp,0xcb07d883
  409cf5:	cmc    
  409cf6:	xchg   ebp,eax
  409cf7:	jmp    FWORD PTR [ebx+edx*8-0x24531f69]
  409cfe:	push   ecx
  409cff:	call   DWORD PTR [esi]
  409d01:	add    eax,0x97d65bf1
  409d06:	pop    esi
  409d07:	push   edx
  409d08:	mov    WORD PTR [edx+0x4c845a4d],ss
  409d0e:	inc    ecx
  409d0f:	dec    edx
  409d10:	mov    dh,0x4c
  409d12:	inc    esi
  409d13:	push   edx
  409d14:	scas   al,BYTE PTR es:[edi]
  409d15:	pop    ecx
  409d16:	ss push edx
  409d18:	ins    BYTE PTR es:[edi],dx
  409d19:	pop    ebp
  409d1a:	jne    0x409cb4
	...
  409d4c:	add    BYTE PTR [eax],al
  409d4e:	fs dec esp
  409d50:	cs cwde 
  409d52:	dec    ebx
  409d53:	push   esp
  409d54:	es push edx
  409d56:	dec    ebx
  409d57:	xchg   esi,eax
  409d58:	push   esp
  409d59:	push   edx
  409d5a:	dec    esp
  409d5b:	dec    esp
  409d5c:	pop    esp
  409d5d:	arpl   WORD PTR [esp+ecx*2+0xe],cx
  409d61:	pop    ebx
  409d62:	add    eax,0x34520692
  409d67:	xchg   edx,eax
  409d68:	stc    
  409d69:	pop    ecx
  409d6a:	sub    al,0x4c
  409d6c:	add    DWORD PTR [esi-0x12],ebp
  409d6f:	dec    ebx
  409d70:	out    dx,al
  409d71:	push   ecx
  409d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d73:	dec    ebp
  409d74:	rcl    BYTE PTR [esi+edx*1-0x69ae21b4],1
  409d7b:	dec    ecx
  409d7c:	shl    DWORD PTR [edi-0x24],0x4
  409d80:	jmp    0xe93dbebf
  409d85:	mov    dh,0xe9
  409d87:	pop    eax
  409d88:	push   0x48
  409d8a:	neg    esi
  409d8c:	call   0x348cf46e
  409d91:	cld    
  409d92:	les    ebx,FWORD PTR [ecx+0x7dd4515b]
  409d98:	and    al,0x50
  409d9a:	cmp    eax,DWORD PTR ds:0xdd0560e9
  409da0:	in     eax,0x18
  409da2:	and    al,BYTE PTR ds:0xc66df811
  409da8:	call   0x3dd3fd
  409dad:	or     BYTE PTR [ebp+ebp*1+0x6eff],0x0
	...
  409de1:	add    BYTE PTR [eax],al
  409de3:	add    BYTE PTR [edx+eax*8],bl
  409de6:	idiv   DWORD PTR [ecx-0x57c95648]
  409dec:	pusha  
  409ded:	frstor [ecx]
  409def:	push   ds
  409df0:	mov    al,ds:0xb914fe4b
  409df5:	sbb    al,0x41
  409df7:	jmp    0x3ef84d14
  409dfc:	adc    al,BYTE PTR [eax]
  409dfe:	sar    BYTE PTR [ebp+0x35457e3a],0x3f
  409e05:	push   es
  409e06:	add    BYTE PTR [esi],dl
  409e08:	icebp  
  409e09:	dec    edx
  409e0a:	jne    0x409dfd
  409e0c:	test   al,0x92
  409e0e:	mov    cl,0x16
  409e10:	mov    dl,0x4a
  409e12:	jne    0x409e25
  409e14:	xchg   edx,eax
  409e15:	shl    bl,1
  409e17:	push   es
  409e18:	or     al,0x3
  409e1a:	call   0xff8b6e3d
  409e1f:	test   BYTE PTR ds:0xf5d1e857,0x4a
  409e26:	call   DWORD PTR [ecx+0x9]
  409e29:	adc    al,0x41
  409e2b:	jmp    0xc1486ee3
  409e30:	mov    dl,0x49
  409e32:	dec    esi
  409e34:	xchg   ebx,eax
  409e35:	sar    bl,1
  409e37:	(bad)  
  409e38:	or     eax,0xd53fe803
  409e3d:	dec    edx
  409e3e:	jmp    DWORD PTR [eax+0x1400019e]
  409e44:	pop    esi
  409e45:	pop    ecx
  409e46:	sub    DWORD PTR [ebp+0x0],0x0
	...
  409e79:	add    BYTE PTR [edi+ebx*8],ah
  409e7c:	call   DWORD PTR [edx]
  409e7e:	bound  ecx,QWORD PTR [edx+0x75]
  409e81:	loope  0x409eab
  409e83:	daa    
  409e84:	mov    dl,0x8e
  409e86:	adc    edi,DWORD PTR [ebp+eax*2+0x0]
  409e8a:	fisubr WORD PTR [esi]
  409e8c:	(bad)  
  409e8d:	(bad)  
  409e8e:	fnsave [eax+ebp*2-0x49]
  409e92:	in     eax,0x47
  409e94:	jmp    DWORD PTR [edi-0x37]
  409e97:	in     eax,dx
  409e98:	inc    eax
  409e99:	add    ch,bh
  409e9b:	xor    al,BYTE PTR [edi]
  409e9d:	call   0x3fbdd2
  409ea2:	sub    eax,0x97fffb33
  409ea7:	dec    esi
  409ea8:	out    0x43,eax
  409eaa:	clc    
  409eab:	mov    ah,0xfe
  409ead:	leave  
  409eae:	cmp    BYTE PTR [edx],al
  409eb0:	add    BYTE PTR [ebp+0x1],dl
  409eb3:	stos   BYTE PTR es:[edi],al
  409eb4:	add    ah,0x8e
  409eb7:	sub    bh,bh
  409eb9:	imul   ebx,DWORD PTR [edx-0x4b],0xdd720874
  409ec0:	mov    al,0xff
  409ec2:	ins    DWORD PTR es:[edi],dx
  409ec3:	iret   
  409ec4:	inc    esp
  409ec5:	cld    
  409ec6:	loop   0x409ecd
  409ec8:	add    bh,ch
  409eca:	pushf  
  409ecb:	cs int3 
  409ecd:	aaa    
  409ece:	sti    
  409ecf:	add    eax,0x46e5d268
  409ed4:	(bad)  
  409ed5:	(bad)  
  409ed6:	xchg   edi,eax
  409ed7:	dec    esi
  409ed8:	out    0xaf,eax
  409eda:	and    edi,DWORD PTR [edx+0x6afe]
	...
  409f10:	cli    
  409f11:	sub    eax,0x13b380e
  409f16:	push   0xff4055f5
  409f1b:	(bad)  
  409f1c:	test   DWORD PTR [edi-0x5205bed8],0xb9adb795
  409f26:	or     al,al
  409f28:	xchg   esi,eax
  409f29:	sbb    eax,0x40b5eb68
  409f2e:	dec    DWORD PTR [edi-0xe]
  409f31:	data16 mov bh,0xff
  409f34:	arpl   WORD PTR [ebx-0x4c],si
  409f37:	arpl   WORD PTR [si+0x5e],bx
  409f3b:	mov    esi,0x4117914b
  409f40:	arpl   sp,bp
  409f42:	dec    esi
  409f43:	jne    0x409fa0
  409f45:	test   BYTE PTR [edx],bl
  409f47:	fstp   DWORD PTR [edx+ebx*8-0x1d30a9a5]
  409f4e:	dec    esi
  409f4f:	call   DWORD PTR [esi]
  409f51:	test   al,0x4e
  409f53:	jne    0x409fb0
  409f55:	les    edi,FWORD PTR [ecx+esi*4]
  409f58:	jl     0x409f14
  409f5a:	cmp    al,0xc2
  409f5c:	pop    edi
  409f5d:	pop    esp
  409f5e:	mov    eax,0x47de7f8a
  409f63:	cld    
  409f64:	or     eax,0xcaffd96b
  409f69:	sub    eax,0xf66b754e
  409f6e:	fidiv  DWORD PTR [eax+0x457ce84c]
	...
  409fa4:	add    BYTE PTR [eax],al
  409fa6:	inc    edi
  409fa7:	in     al,0x18
  409fa9:	outs   dx,DWORD PTR ds:[esi]
  409faa:	mov    ebx,DWORD PTR [ebp-0x348974fd]
  409fb0:	sbb    al,BYTE PTR [ecx+0x63]
  409fb3:	fimul  WORD PTR [esi]
  409fb5:	add    BYTE PTR [edi+0x5b1adba3],ch
  409fbb:	popf   
  409fbc:	add    edx,DWORD PTR [edi+0xb]
  409fbf:	outs   dx,DWORD PTR ds:[esi]
  409fc0:	test   DWORD PTR [eax],eax
  409fc2:	arpl   WORD PTR [ebx+0x43],dx
  409fc5:	je     0x40a005
  409fc7:	or     BYTE PTR [ebx+edx*8-0x42],bl
  409fcb:	aaa    
  409fcc:	dec    esi
  409fcd:	push   0xffc5063f
  409fd2:	pushf  
  409fd3:	ss push ecx
  409fd5:	mov    bh,0xe4
  409fd7:	(bad)  
  409fd8:	mov    bl,0x67
  409fda:	arpl   WORD PTR [esi+0x5e],bx
  409fdd:	mov    esi,0xd8a60533
  409fe2:	fs pop ebp
  409fe4:	ret    
  409fe5:	cmp    ah,al
  409fe7:	dec    eax
  409fe8:	sbb    DWORD PTR [edx-0x10],0x625a8e48
  409fef:	mov    edi,0xd2630d68
  409ff4:	add    ch,0xa8
  409ff7:	adc    al,0xa9
  409ff9:	mov    WORD PTR [eax+ecx*2-0x686eb192],ds
  40a000:	and    DWORD PTR [edi],eax
  40a002:	push   ss
  40a003:	xchg   edx,eax
  40a004:	pop    esi
  40a005:	fmul   DWORD PTR [eax+0xfbdc48]
	...
  40a03b:	add    BYTE PTR [eax+eax*8-0x578bb169],al
  40a042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a043:	cmp    al,0xa1
  40a045:	add    ecx,ebp
  40a047:	mov    eax,0x476a59d9
  40a04c:	pop    edi
  40a04d:	fucomi st,st(0)
  40a04f:	fnstenv [edx+0x48]
  40a052:	pushf  
  40a053:	sti    
  40a054:	inc    esp
  40a055:	pop    esi
  40a056:	pop    ecx
  40a057:	dec    esi
  40a058:	inc    esp
  40a059:	jle    0x40a007
  40a05b:	dec    edi
  40a05c:	retf   
  40a05d:	add    eax,0xdcf55ee9
  40a062:	ror    BYTE PTR [ebx],0xa2
  40a065:	add    eax,0xc66b1e91
  40a06a:	call   0x13e36bd
  40a06f:	xchg   esp,eax
  40a070:	cmp    ecx,DWORD PTR [eax-0x1a]
  40a073:	dec    ebp
  40a074:	xchg   esi,eax
  40a075:	dec    ecx
  40a076:	(bad)  
  40a078:	pop    esp
  40a079:	pop    ebp
  40a07a:	jecxz  0x40a00e
  40a07c:	cld    
  40a07d:	inc    edi
  40a07e:	mov    al,ds:0x1c055f42
  40a083:	jns    0x40a084
  40a085:	test   DWORD PTR [ebp+0x47ec30],esp
  40a08b:	mov    dh,0x5c
  40a08d:	ret    0x19fb
  40a090:	ror    BYTE PTR es:[ebx],cl
  40a093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a094:	je     0x40a045
  40a096:	sub    BYTE PTR [eax],ch
  40a098:	pop    edi
  40a099:	pop    ebp
  40a09a:	int    0x6c
  40a09c:	addr16 add eax,0xa90b
	...
  40a0d2:	mov    dh,0x80
  40a0d4:	mov    eax,ds:0xc70560e8
  40a0d9:	and    al,0x17
  40a0db:	add    eax,0x4060e900
  40a0e0:	inc    ebp
  40a0e1:	jne    0x40a109
  40a0e3:	add    BYTE PTR [eax],al
  40a0e5:	jmp    0xe9a9e894
  40a0ea:	stos   BYTE PTR es:[edi],al
  40a0eb:	inc    edi
  40a0ec:	imul   ebp,ecx,0xb9f3c1fd
  40a0f2:	cmc    
  40a0f3:	xor    esp,0x50481e3e
  40a0f9:	mov    WORD PTR ds:[edi-0x1],cs
  40a0fd:	mov    esp,0x649f5dac
  40a102:	pop    edi
  40a103:	add    eax,0x22b290b
  40a108:	jmp    0x460292
  40a10d:	and    DWORD PTR [edi-0x5816bee3],0xa1110bd0
  40a117:	(bad)  
  40a118:	(bad)  
  40a119:	(bad)  
  40a11a:	lock jnp 0x40a0ed
  40a11d:	fs in  al,0x51
  40a120:	imul   esi
  40a122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a123:	mov    ch,0x51
  40a125:	shl    edx,1
  40a127:	(bad)  
  40a128:	(bad)  
  40a129:	fimul  WORD PTR [ecx-0x50210f80]
  40a12f:	inc    esi
  40a130:	call   0xff877516
	...
  40a165:	add    BYTE PTR [eax],al
  40a167:	add    BYTE PTR [eax+0x62556801],dl
  40a16d:	inc    edx
  40a16e:	(bad)  
  40a16f:	(bad)  
  40a170:	pop    edi
  40a171:	mov    dl,0xf6
  40a173:	inc    DWORD PTR ds:0xb35634ba
  40a179:	inc    ebx
  40a17a:	jmp    edi
  40a17c:	shl    BYTE PTR [eax-0x1],cl
  40a17f:	inc    DWORD PTR [ebx+0x7f]
  40a182:	in     al,0xf7
  40a184:	in     eax,0xb9
  40a186:	imul   eax,DWORD PTR [eax],0x41373e52
  40a18c:	mov    edx,0x1df0b4b9
  40a191:	mov    ecx,0x90cffffe
  40a196:	sub    BYTE PTR [ecx+0x7a],al
  40a199:	stos   BYTE PTR es:[edi],al
  40a19a:	jmp    0x88f9c754
  40a19f:	test   DWORD PTR [esi],esp
  40a1a1:	mov    cl,0xfe
  40a1a3:	jmp    DWORD PTR [eax+0x624c6802]
  40a1a9:	inc    edx
  40a1aa:	(bad)  
  40a1ab:	(bad)  
  40a1ac:	out    dx,eax
  40a1ad:	mov    cl,0xf6
  40a1af:	call   DWORD PTR [ebp+0x635634b9]
  40a1b5:	inc    edx
  40a1b6:	jmp    edi
  40a1b8:	xchg   esi,eax
  40a1b9:	outs   dx,DWORD PTR ds:[esi]
  40a1ba:	(bad)  
  40a1bb:	call   ebx
  40a1bd:	jg     0x40a1a7
  40a1bf:	not    DWORD PTR [ebp-0x47]
  40a1c2:	mov    WORD PTR [ebp-0x14e7a],es
  40a1c8:	retf   0x5d29
  40a1cb:	cmp    BYTE PTR [eax],al
	...
  40a1fd:	add    bl,bh
  40a1ff:	add    edi,edi
  40a201:	mov    ch,0x1a
  40a203:	mov    dl,0xfe
  40a205:	inc    DWORD PTR ds:0x3b2955f0
  40a20b:	add    eax,ebp
  40a20d:	test   eax,0xbfeb9ef
  40a212:	arpl   WORD PTR [eax+edx*8+0x2878e018],bx
  40a219:	imul   esp
  40a21b:	add    BYTE PTR ds:[ebp+0x53],dh
  40a21f:	xchg   DWORD PTR [edi+ecx*4],edx
  40a222:	out    0x3b,al
  40a224:	push   ebx
  40a225:	call   esp
  40a227:	jmp    0x40a284
  40a229:	jbe    0x40a23c
  40a22b:	lahf   
  40a22c:	dec    ebx
  40a22d:	jmp    0x40a29e
  40a22f:	push   ebx
  40a230:	inc    ebx
  40a231:	je     0x40a298
  40a233:	or     al,0x5c
  40a235:	push   0xfffffff1
  40a237:	jbe    0x40a284
  40a239:	(bad)  
  40a23a:	out    0x7b,al
  40a23c:	push   ebx
  40a23d:	jmp    DWORD PTR [eax+esi*1-0x249cfffd]
  40a244:	mov    ah,ah
  40a246:	mov    esi,ss
  40a248:	dec    edx
  40a249:	add    BYTE PTR [edi],dl
  40a24b:	xchg   DWORD PTR [esi+0x4aae77bd],eax
  40a251:	jmp    DWORD PTR [ebx+0x28]
  40a254:	mov    ecx,0x52c3b682
  40a259:	jmp    FWORD PTR [ebx+ebx*2-0x31]
  40a25d:	inc    esp
  40a25e:	sti    
  40a25f:	pop    ebx
  40a260:	add    ebp,edi
	...
  40a292:	add    BYTE PTR [eax],al
  40a294:	sbb    eax,0x4b07d0fc
  40a299:	out    dx,al
  40a29a:	cdq    
  40a29b:	dec    DWORD PTR [esp+ebp*8-0x70]
  40a29f:	in     al,dx
  40a2a0:	dec    esp
  40a2a1:	and    al,0x4b
  40a2a3:	push   DWORD PTR [esi+0x4155b26]
  40a2a9:	adc    al,0x4b
  40a2ab:	push   esi
  40a2ad:	push   ss
  40a2ae:	push   ebx
  40a2af:	jmp    DWORD PTR [esp+eax*2]
  40a2b2:	rol    BYTE PTR [edi],1
  40a2b4:	or     esi,DWORD PTR [edx+ebx*4]
  40a2b7:	call   DWORD PTR [esp+esi*1]
  40a2ba:	nop
  40a2bb:	in     al,0x14
  40a2bd:	push   es
  40a2be:	out    0x4a,al
  40a2c0:	add    al,0xbb
  40a2c2:	lock pop ebx
  40a2c4:	cli    
  40a2c5:	jae    0x40a29d
  40a2c7:	dec    edx
  40a2c8:	hlt    
  40a2c9:	jp     0x40a294
  40a2cb:	push   edx
  40a2cc:	in     al,dx
  40a2cd:	inc    esp
  40a2ce:	(bad)  
  40a2cf:	rcr    BYTE PTR [ebp+ebp*1+0x70],1
  40a2d3:	cdq    
  40a2d4:	fadd   QWORD PTR [esi+esi*4-0x70]
  40a2d8:	mov    edi,0xbb4aae3c
  40a2dd:	cmp    bl,BYTE PTR [eax+0x4a]
  40a2e0:	les    eax,FWORD PTR [esp+edx*2+0x57]
  40a2e4:	mov    ah,0x44
  40a2e6:	xchg   esi,eax
  40a2e7:	pop    ebx
  40a2e8:	leave  
  40a2e9:	jbe    0x40a279
  40a2eb:	dec    edx
  40a2ec:	lods   al,BYTE PTR ds:[esi]
  40a2ed:	jp     0x40a280
  40a2ef:	push   edx
  40a2f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2f1:	inc    esp
  40a2f2:	xchg   ecx,eax
  40a2f3:	sub    dl,dl
  40a2f5:	inc    esp
  40a2f6:	jbe    0x40a342
	...
  40a328:	add    BYTE PTR [eax],al
  40a32a:	into   
  40a32b:	xor    eax,0x2d8c4a76
  40a330:	cmp    eax,0x5e448494
  40a335:	shl    BYTE PTR [esi+ebp*1-0x39],0x49
  40a33a:	je     0x40a380
  40a33c:	dec    esi
  40a33d:	shr    BYTE PTR [eax+0x2d],1
  40a340:	out    0x7f,eax
  40a342:	arpl   WORD PTR ds:0x56b4530,ax
  40a348:	pushf  
  40a349:	jle    0x40a392
  40a34b:	mov    BYTE PTR ds:0x9305b947,ah
  40a351:	test   BYTE PTR [ebp-0x46],0xf0
  40a355:	pop    ebx
  40a356:	inc    ebp
  40a357:	jae    0x40a36f
  40a359:	dec    edx
  40a35a:	jmp    0xa7fd:0xc6db0cc9
  40a361:	add    esp,DWORD PTR [edx+edi*4]
  40a364:	lock pop ebx
  40a366:	jne    0x40a3ab
  40a368:	add    dh,dh
  40a36a:	stos   BYTE PTR es:[edi],al
  40a36b:	inc    esp
  40a36c:	jne    0x40a35b
  40a36e:	call   0xff73:0x10d107ba
  40a375:	fidivr WORD PTR [eax]
  40a377:	inc    edi
  40a378:	add    al,0xe9
  40a37a:	lds    ecx,FWORD PTR [esi+0x41a36aec]
  40a380:	push   0xffffffe9
  40a382:	push   es
  40a383:	sbb    bh,bh
  40a385:	xor    al,0xdf
  40a387:	sub    esi,DWORD PTR [ebp-0x76bbd579]
  40a38d:	and    al,0x0
	...
  40a3bf:	add    BYTE PTR [ebx],bl
  40a3c1:	lods   eax,DWORD PTR ds:[esi]
  40a3c2:	(bad)  
  40a3c3:	call   0x79a926f3
  40a3c8:	outs   dx,DWORD PTR ds:[esi]
  40a3c9:	(bad)  
  40a3ca:	inc    DWORD PTR [eax]
  40a3cc:	loope  0x40a3ca
  40a3ce:	inc    eax
  40a3cf:	jmp    0x91485def
  40a3d4:	pushf  
  40a3d5:	pop    ecx
  40a3d6:	(bad)  
  40a3d7:	jle    0x40a403
  40a3d9:	mov    edx,0xba476fb
  40a3de:	call   0xff848d7a
  40a3e3:	xor    BYTE PTR ds:0xffb40009,bl
  40a3e9:	xor    BYTE PTR [ecx-0xc3b8d3],al
  40a3ef:	dec    esi
  40a3f0:	hlt    
  40a3f1:	leave  
  40a3f2:	sti    
  40a3f3:	cdq    
  40a3f4:	sbb    edi,DWORD PTR [edx-0x2493c1f5]
  40a3fa:	sub    BYTE PTR [eax+0x6a992d60],ch
  40a400:	addr16 add eax,0x8a4a290b
  40a406:	int    0xe8
  40a408:	pusha  
  40a409:	add    eax,0x5a8acc7
  40a40e:	add    cl,ch
  40a410:	pusha  
  40a411:	dec    edx
  40a412:	inc    ebp
  40a413:	add    BYTE PTR [esi],ah
  40a415:	into   
  40a416:	push   es
  40a417:	add    BYTE PTR [edx],cl
  40a419:	popa   
  40a41a:	jmp    FWORD PTR [ecx+0xa]
  40a41d:	popa   
  40a41e:	jmp    FWORD PTR [ecx-0x6]
  40a421:	mov    ebx,0xf444
	...
  40a456:	dec    edx
  40a457:	mov    edx,0xce15f484
  40a45c:	(bad)  
  40a45d:	push   eax
  40a45e:	or     eax,0x97fff754
  40a463:	int    0xe7
  40a465:	imul   edi,DWORD PTR [ecx+0x6],0x0
  40a469:	or     ecx,DWORD PTR [edx]
  40a46b:	push   ebx
  40a46c:	add    al,0xe9
  40a46e:	cmp    al,BYTE PTR [edi]
  40a470:	add    BYTE PTR [eax],al
  40a472:	and    al,ah
  40a474:	daa    
  40a475:	inc    ecx
  40a476:	mov    edx,0xd20c74cd
  40a47b:	mov    esp,0x76cdffb3
  40a480:	mov    dl,al
  40a482:	(bad)  
  40a484:	repz neg ebp
  40a487:	int    0x4f
  40a489:	push   edx
  40a48a:	repnz dec esp
  40a48c:	mov    bl,0xff
  40a48e:	or     eax,0x15f084bf
  40a493:	int    0xfe
  40a495:	call   0x403ae0
  40a49a:	(bad)  
  40a49c:	xlat   BYTE PTR ds:[ebx]
  40a49d:	test   DWORD PTR ds:0xec684fcd,0x1d00410d
  40a4a7:	xchg   ebx,eax
  40a4a8:	lock neg DWORD PTR [ebp-0xbca0133]
  40a4af:	push   ds
  40a4b0:	inc    ecx
  40a4b1:	add    BYTE PTR [edx+0x7dffb2fd],ah
  40a4b7:	mov    edi,0xe484
	...
  40a4ec:	push   ebp
  40a4ed:	int    0xfe
  40a4ef:	push   0x63
  40a4f1:	sub    al,0xdb
  40a4f3:	fwait
  40a4f4:	imul   ebp,DWORD PTR [ebp+0x3],0xffffffff
  40a4f8:	out    dx,al
  40a4f9:	cmp    ecx,DWORD PTR [edi-0x1]
  40a4fc:	sbb    al,0x43
  40a4fe:	or     eax,0x36d4a56
  40a503:	call   0xff88a3da
  40a508:	fidiv  DWORD PTR [eax+0x62fcf757]
  40a50e:	(bad)  
  40a510:	jl     0x40a4a3
  40a512:	or     al,0x41
  40a514:	arpl   WORD PTR [ebx-0x6f],dx
  40a517:	lock in al,dx
  40a519:	dec    edx
  40a51a:	inc    edi
  40a51b:	call   DWORD PTR [esi+0x63411d1a]
  40a521:	inc    esp
  40a522:	jae    0x40a4d7
  40a524:	int3   
  40a525:	jb     0x40a5a4
  40a527:	test   DWORD PTR [ebx-0x1100b85e],edi
  40a52d:	test   al,0x27
  40a52f:	div    DWORD PTR [edx+ebx*4+0x53f467b4]
  40a536:	(bad)  
  40a537:	jmp    DWORD PTR [ebp-0x6308ac00]
  40a53d:	ret    0x3546
  40a540:	sub    eax,0x84ffc445
  40a545:	cmp    edx,DWORD PTR [edx+0x433684ff]
  40a54b:	je     0x40a5a7
  40a54d:	scas   eax,DWORD PTR es:[edi]
  40a54e:	mov    ah,bl
	...
  40a580:	add    BYTE PTR [eax],al
  40a582:	ins    BYTE PTR es:[edi],dx
  40a583:	fiadd  DWORD PTR [esi+0x4]
  40a586:	idiv   BYTE PTR [ebx]
  40a588:	inc    esi
  40a589:	xor    ah,dl
  40a58b:	mov    al,0x63
  40a58d:	neg    DWORD PTR [eax+eax*1-0x4c]
  40a591:	out    0x96,eax
  40a593:	mov    esi,0x5b38ff46
  40a598:	cli    
  40a599:	mov    edi,0xb3ef05cf
  40a59e:	inc    esp
  40a59f:	neg    DWORD PTR [eax+0x47]
  40a5a2:	xor    al,0x49
  40a5a4:	ins    BYTE PTR es:[edi],dx
  40a5a5:	fs xor al,0x41
  40a5a8:	push   cs
  40a5a9:	icebp  
  40a5aa:	and    al,0x41
  40a5ac:	jmp    0xf66a8433
  40a5b1:	inc    esi
  40a5b2:	adc    al,0x6
  40a5b4:	jge    0x40a57b
  40a5b6:	loope  0x40a53a
  40a5b8:	std    
  40a5b9:	dec    esi
  40a5ba:	add    al,0x41
  40a5bc:	jmp    0x9cc51d90
  40a5c1:	pop    ebx
  40a5c2:	in     al,dx
  40a5c3:	inc    eax
  40a5c4:	(bad)  
  40a5c5:	add    esi,DWORD PTR [edi-0x4f]
  40a5c8:	inc    edx
  40a5c9:	add    al,0xd6
  40a5cb:	mov    ah,BYTE PTR [ecx+0x1940dc4e]
  40a5d1:	inc    edi
  40a5d2:	push   cs
  40a5d3:	sub    bh,BYTE PTR [esi+0x1b2dcc46]
  40a5d9:	xor    esp,eax
  40a5db:	inc    eax
  40a5dc:	repnz inc ebx
  40a5de:	aaa    
  40a5df:	fldcw  WORD PTR [ecx-0x78]
  40a5e2:	fwait
  40a5e3:	cmp    BYTE PTR [esi+0x46],dl
	...
  40a615:	add    BYTE PTR [eax],al
  40a617:	add    BYTE PTR [ebx-0x47],ah
  40a61a:	and    esp,ebx
  40a61c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a61d:	inc    eax
  40a61e:	xchg   esi,eax
  40a61f:	test   DWORD PTR [edx+edi*4+0x70fc5bf0],ebx
  40a626:	jbe    0x40a66e
  40a628:	mov    WORD PTR [edx+0x7d],?
  40a62b:	dec    esi
  40a62c:	test   BYTE PTR [eax+0x66],al
  40a62f:	shl    BYTE PTR [ebp+ebp*1-0x5e],1
  40a633:	xchg   edi,eax
  40a634:	je     0x40a676
  40a636:	push   esi
  40a637:	nop
  40a638:	jnp    0x40a672
  40a63a:	dec    esi
  40a63b:	inc    esi
  40a63c:	fs mov edx,0x710e5bf0
  40a642:	ds inc esi
  40a644:	push   esp
  40a645:	jp     0x40a647
  40a647:	adc    DWORD PTR [ebp-0xcd100c0],ebx
  40a64d:	sub    bh,dh
  40a64f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40a651:	inc    eax
  40a652:	jne    0x40a645
  40a654:	cwde   
  40a655:	mov    dl,0xab
  40a657:	push   ss
  40a658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a659:	inc    eax
  40a65a:	mov    ch,0x9
  40a65c:	xchg   ebp,eax
  40a65d:	inc    eax
  40a65e:	inc    DWORD PTR [esi]
  40a660:	xor    ecx,DWORD PTR [eax]
  40a662:	call   0xff809337
  40a667:	neg    ah
  40a669:	sub    bh,dh
  40a66b:	out    dx,al
  40a66c:	sahf   
  40a66d:	sub    eax,0x40a69695
  40a672:	call   DWORD PTR [ebx+ebx*4-0x702900c8]
  40a679:	mov    ebp,DWORD PTR [edi+0xce]
	...
  40a6ab:	add    BYTE PTR [eax],al
  40a6ad:	add    BYTE PTR [esi+0x2ed1b540],bl
  40a6b3:	inc    eax
  40a6b4:	call   ecx
  40a6b6:	sahf   
  40a6b7:	outs   dx,BYTE PTR ds:[esi]
  40a6b8:	push   DWORD PTR [esi-0x490f85da]
  40a6be:	push   ds
  40a6bf:	inc    eax
  40a6c0:	call   0xff807ce2
  40a6c5:	sahf   
  40a6c6:	hlt    
  40a6c7:	aaa    
  40a6c8:	jmp    0xff80cbf8
  40a6cd:	mov    ss,WORD PTR [ebx+edi*1+0x4e047e8]
  40a6d4:	add    BYTE PTR [eax+0x1c000d21],dh
  40a6da:	or     dh,BYTE PTR [ecx]
  40a6dc:	and    DWORD PTR [ebp-0xa8abfcd],0x18
  40a6e3:	xlat   BYTE PTR ds:[ebx]
  40a6e4:	jg     0x40a6cf
  40a6e6:	pusha  
  40a6e7:	mov    es,WORD PTR [ebp+0x51]
  40a6ea:	es mov edx,0x6ebd41f7
  40a6f0:	inc    DWORD PTR [eax]
  40a6f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6f3:	mov    edx,0x4e95fc44
  40a6f8:	sti    
  40a6f9:	dec    DWORD PTR [edi]
  40a6fb:	retf   
  40a6fc:	(bad)  
  40a6fd:	jne    0x40a725
  40a6ff:	fist   DWORD PTR [esi]
  40a701:	mov    ebx,0xc00ac885
  40a706:	into   
  40a707:	or     BYTE PTR [ecx-0xa4b1bb],cl
  40a70d:	mov    edi,?
  40a70f:	into   
  40a710:	dec    edi
  40a711:	inc    DWORD PTR [eax]
	...
  40a743:	add    BYTE PTR [edi+0x6e7be7c6],bl
  40a749:	enter  0xbfe,0x3a
  40a74d:	push   ebp
  40a74e:	sub    BYTE PTR [eax-0x6],ch
  40a751:	xor    ch,dh
  40a753:	mov    esi,0xe8075005
  40a758:	jecxz  0x40a6f7
  40a75a:	(bad)  
  40a75b:	call   DWORD PTR ds:0x8ffff750
  40a761:	cmp    eax,0xdad275fe
  40a766:	shr    BYTE PTR [ebx+0x75feca15],0xe
  40a76d:	retf   0xfc74
  40a770:	cmc    
  40a771:	dec    edi
  40a772:	pop    es
  40a773:	call   0x404491
  40a778:	aad    0x4f
  40a77a:	sti    
  40a77b:	call   0x404066
  40a780:	add    eax,ebp
  40a782:	pop    es
  40a783:	add    BYTE PTR [edi-0x44],bh
  40a786:	jmp    0x40a70b
  40a788:	mov    esi,0x8fff55da
  40a78d:	ss out 0xad,eax
  40a790:	dec    ecx
  40a791:	leave  
  40a792:	dec    BYTE PTR [ebx]
  40a794:	dec    edx
  40a795:	dec    edi
  40a796:	add    al,0x5e
  40a798:	xor    eax,esp
  40a79a:	pop    es
  40a79b:	add    BYTE PTR [ebx-0x57],ah
  40a79e:	mov    ebp,0xcdcf13ef
  40a7a3:	or     ecx,DWORD PTR [ebx+0x67]
  40a7a6:	(bad)  
  40a7a7:	inc    DWORD PTR [eax]
	...
  40a7d9:	add    BYTE PTR [ebx+esi*1+0x43],dl
  40a7dd:	movntq (bad),mm2
  40a7de:	out    0xd1,eax
  40a7e0:	add    al,BYTE PTR [eax]
  40a7e2:	arpl   di,bp
  40a7e4:	int    0xfb
  40a7e6:	dec    ebx
  40a7e7:	repz xchg esp,eax
  40a7e9:	push   DWORD PTR [esi*4-0x5ed31443]
  40a7f0:	inc    edi
  40a7f1:	jmp    FWORD PTR [esi+0x1b754340]
  40a7f7:	adc    al,0x52
  40a7f9:	scas   al,BYTE PTR es:[edi]
  40a7fa:	adc    al,0x3f
  40a7fc:	ja     0x40a873
  40a7fe:	inc    DWORD PTR [edx]
  40a800:	mov    edx,0xc2741367
  40a805:	call   DWORD PTR [esi+0x6380c554]
  40a80b:	sub    al,0xe
  40a80d:	shl    BYTE PTR [esi+0x2a],0x2e
  40a811:	cmp    eax,0xefac5bd8
  40a816:	fwait
  40a817:	in     eax,dx
  40a818:	add    ebp,eax
  40a81a:	fdivp  st(6),st
  40a81c:	add    eax,DWORD PTR [eax]
  40a81e:	pusha  
  40a81f:	jl     0x40a7ae
  40a821:	jne    0x40a7de
  40a823:	ret    
  40a824:	inc    edx
  40a825:	cmp    BYTE PTR [edx],ah
  40a827:	sub    al,0xd9
  40a829:	out    0x54,eax
  40a82b:	lods   eax,DWORD PTR ds:[esi]
  40a82c:	add    eax,DWORD PTR [eax]
  40a82e:	pop    eax
  40a82f:	ins    BYTE PTR es:[edi],dx
  40a830:	mov    ecx,0x8d32b801
  40a835:	adc    BYTE PTR [ebp+0x3150032b],ah
  40a83b:	mov    edi,0xe7b8
	...
  40a870:	mov    WORD PTR [eax+0xb],es
  40a873:	call   0xff835602
  40a878:	sbb    DWORD PTR ds:0x85538bc1,eax
  40a87e:	pop    ds
  40a87f:	add    al,0xf6
  40a881:	jb     0x40a844
  40a883:	add    al,0x53
  40a885:	pop    DWORD PTR cs:[ebx-0x2a]
  40a889:	or     eax,0x3d095051
  40a88e:	ds inc ebx
  40a890:	(bad)  
  40a891:	cmp    DWORD PTR [esi],esi
  40a893:	mov    ecx,0xbb43d38
  40a898:	dec    ebx
  40a899:	xor    dl,BYTE PTR [ebx+0x43]
  40a89c:	xor    al,0x3d
  40a89e:	xchg   esp,eax
  40a89f:	das    
  40a8a0:	cmp    ebp,ebx
  40a8a2:	inc    esi
  40a8a3:	inc    ebx
  40a8a4:	and    al,0x8b
  40a8a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8a7:	xor    esi,DWORD PTR [ebx+0x14779a2d]
  40a8ad:	cmp    eax,0x4ead0412
  40a8b2:	sub    ecx,DWORD PTR [ebx+eiz*2]
  40a8b5:	shl    BYTE PTR [ecx+0x30],cl
  40a8b8:	loopne 0x40a8fb
  40a8ba:	in     eax,0xad
  40a8bc:	hlt    
  40a8bd:	scas   al,BYTE PTR es:[edi]
  40a8be:	repz inc edx
  40a8c0:	jbe    0x40a8cf
  40a8c2:	rol    esi,0xb9
  40a8c5:	cmp    al,0xce
  40a8c7:	mov    WORD PTR [esi],fs
  40a8c9:	cmp    DWORD PTR [ecx-0x80],edx
  40a8cc:	fwait
  40a8cd:	(bad)  
  40a8ce:	call   0xc14dff15
  40a8d3:	push   0x0
	...
  40a905:	add    bh,al
  40a907:	cmp    al,0xae
  40a909:	lods   eax,DWORD PTR ds:[esi]
  40a90a:	mov    esp,0x23fcfea4
  40a90f:	add    eax,0xc66a0611
  40a914:	call   0xc014175b
  40a919:	les    ebx,FWORD PTR [esp+0x3c947385]
  40a920:	repnz inc ebx
  40a922:	pop    ss
  40a923:	pop    ds
  40a924:	add    BYTE PTR [ecx],al
  40a926:	cmp    bh,ch
  40a928:	inc    eax
  40a929:	jmp    0x9908cdbe
  40a92e:	and    DWORD PTR [eax+edx*2],edi
  40a931:	mov    ecx,0x4107b221
  40a936:	cmp    eax,0x884eff3b
  40a93b:	inc    ebx
  40a93c:	lods   eax,DWORD PTR ds:[esi]
  40a93d:	inc    esi
  40a93e:	mov    eax,ds:0x725119af
  40a943:	ja     0x40a944
  40a945:	ss push ebp
  40a947:	inc    ebp
  40a948:	je     0x40a94e
  40a94a:	minps  xmm7,XMMWORD PTR [eax]
  40a94d:	test   al,0x60
  40a94f:	aad    0xe7
  40a951:	dec    edx
  40a952:	mov    bh,0x3c
  40a954:	inc    DWORD PTR [ecx-0x16bf0285]
  40a95a:	xor    BYTE PTR [eax+ebx*4],ah
  40a95d:	cmp    BYTE PTR [ecx-0x5e66afc4],ah
  40a963:	mov    dl,0x7
  40a965:	add    DWORD PTR [ebp+0xeeff3b],ecx
	...
  40a99b:	add    BYTE PTR [ecx-0x6d],cl
  40a99e:	lods   eax,DWORD PTR ds:[esi]
  40a99f:	out    0xa2,al
  40a9a1:	scas   eax,DWORD PTR es:[edi]
  40a9a2:	sbb    edx,ecx
  40a9a4:	xor    DWORD PTR [esi-0x1],0x744556d6
  40a9ab:	add    al,0xf
  40a9ad:	pop    ebp
  40a9ae:	cmp    BYTE PTR [eax],ch
  40a9b0:	pop    edi
  40a9b1:	aad    0xe7
  40a9b3:	cmp    dl,BYTE PTR [eax+0x3c]
  40a9b6:	inc    DWORD PTR [ecx+0x7c]
  40a9b9:	std    
  40a9ba:	inc    eax
  40a9bb:	jmp    0x58a8cd50
  40a9c0:	and    bh,BYTE PTR [eax+edx*2]
  40a9c3:	cmp    DWORD PTR [edx],esp
  40a9c5:	mov    dl,0x7
  40a9c7:	sbb    esi,0x4f8eff3a
  40a9cd:	mov    ds:0xc5dd00ac,eax
  40a9d2:	imul   esp,DWORD PTR [ebx],0xffb0b6f2
  40a9d8:	or     eax,0xa774c00a
  40a9dd:	outs   dx,DWORD PTR ds:[esi]
  40a9de:	fdivr  DWORD PTR [eax]
  40a9e0:	retf   
  40a9e1:	pop    es
  40a9e2:	push   eax
  40a9e3:	call   0x3f60a1
  40a9e8:	mov    ds:0x4a4137e2,al
  40a9ed:	push   edi
  40a9ee:	out    0x38,eax
  40a9f0:	fcmovnb st,st(4)
  40a9f2:	(bad)  
  40a9f3:	push   eax
  40a9f4:	jmp    0xfd50:0xa20874c5
  40a9fb:	dec    DWORD PTR [ebp+0xad35e9]
	...
  40aa31:	add    BYTE PTR [ebp-0x3c],bh
  40aa34:	(bad)  
  40aa35:	jne    0x40aa85
  40aa37:	les    esi,FWORD PTR [eax+ecx*1+0x62]
  40aa3b:	scas   al,BYTE PTR es:[edi]
  40aa3c:	test   eax,0xc1ce6dff
  40aa41:	add    al,0xa
  40aa43:	push   esp
  40aa44:	mov    ch,ah
  40aa46:	jnp    0x40aa15
  40aa48:	fcomi  st,st(7)
  40aa4a:	or     eax,0xe458cc6
  40aa4f:	push   edi
  40aa50:	(bad)  
  40aa51:	jne    0x40aa4d
  40aa53:	lds    esi,FWORD PTR [esp+ecx*1+0x12]
  40aa57:	jbe    0x40aad7
  40aa59:	add    dl,bh
  40aa5b:	or     eax,eax
  40aa5d:	cmova  eax,DWORD PTR [ecx+eax*1+0x44cdca00]
  40aa65:	clc    
  40aa66:	mov    edx,0xf5000006
  40aa6b:	inc    ebx
  40aa6c:	repz inc ebp
  40aa6f:	push   es
  40aa70:	add    BYTE PTR [edx-0x36],ch
  40aa73:	push   0x68ba69ff
  40aa78:	dec    DWORD PTR [ebx+eiz*2-0x11afc817]
  40aa7f:	mov    eax,ds:0x8394f736
  40aa84:	sar    esi,cl
  40aa86:	push   ss
  40aa87:	test   BYTE PTR [eax+0x75],al
  40aa8a:	xchg   DWORD PTR [edx+eax*8+0xc2c637e],eax
  40aa91:	shr    bh,0x28
  40aa94:	sub    al,BYTE PTR [ecx+0x0]
	...
  40aac6:	add    BYTE PTR [eax],al
  40aac8:	bound  ebp,QWORD PTR [ebx+eax*1]
  40aacb:	push   0xffc3049c
  40aad0:	pop    ebp
  40aad1:	push   ecx
  40aad2:	adc    ebp,eax
  40aad4:	mov    edi,0xb3ff3fbc
  40aad9:	mov    bh,0x52
  40aadb:	(bad)  
  40aadc:	fdivrp st(7),st
  40aade:	aaa    
  40aadf:	(bad)  
  40aae0:	cmp    al,0x9c
  40aae2:	aad    0xe7
  40aae4:	(bad)  
  40aae5:	fdivr  QWORD PTR [edi]
  40aae7:	(bad)  
  40aae8:	fisub  DWORD PTR [eax+0x1324f732]
  40aaee:	sub    ebp,DWORD PTR [edx+0x6a400acf]
  40aaf4:	arpl   WORD PTR [ecx+edi*8+0x402ca238],dx
  40aafb:	mov    ch,0x13
  40aafd:	cmp    edi,DWORD PTR [edi]
  40aaff:	(bad)  
  40ab00:	cld    
  40ab01:	mov    al,0xe
  40ab03:	call   0xff803dce
  40ab08:	fisub  DWORD PTR [eax+0x52e4f727]
  40ab0e:	stos   BYTE PTR es:[edi],al
  40ab0f:	inc    DWORD PTR [ebx+ecx*1-0x3]
  40ab13:	inc    eax
  40ab14:	arpl   WORD PTR [ebx+0x79],ax
  40ab17:	lock aam 0x7a
  40ab1a:	aas    
  40ab1b:	dec    DWORD PTR [esi+0x20]
  40ab1e:	sub    edx,DWORD PTR [edx-0x76c094f4]
  40ab24:	fiadd  WORD PTR [ecx+ecx*4]
  40ab27:	aaa    
  40ab28:	lods   al,BYTE PTR ds:[esi]
  40ab29:	cmp    DWORD PTR [ebx],edx
  40ab2b:	add    al,0x0
	...
  40ab5d:	add    BYTE PTR [ebx],bh
  40ab5f:	jecxz  0x40ab30
  40ab61:	les    ebx,FWORD PTR [edx+edi*1+0x398c3454]
  40ab68:	xchg   BYTE PTR [edi],bh
  40ab6a:	push   ss
  40ab6b:	or     DWORD PTR [ecx+0x7639b5b7],edx
  40ab71:	(bad)  
  40ab72:	out    0x28,al
  40ab74:	jbe    0x40abb5
  40ab76:	je     0x40ab26
  40ab78:	call   0xa83ceb28
  40ab7d:	add    esp,DWORD PTR [edi+ebp*2+0x59]
  40ab81:	aaa    
  40ab82:	pop    esp
  40ab83:	cmp    DWORD PTR [esi-0x47],ecx
  40ab86:	push   0x4c6ea52d
  40ab8b:	cmp    DWORD PTR [eax-0x77],esi
  40ab8e:	cmp    esi,DWORD PTR [ecx]
  40ab90:	ss aas 
  40ab92:	leave  
  40ab93:	add    eax,0xc67bccc1
  40ab98:	call   0x1676a1db
  40ab9d:	aas    
  40ab9e:	and    al,0x39
  40aba0:	pushf  
  40aba1:	ud2    
  40aba3:	(bad)  
  40aba4:	cmp    eax,0x6c8f143f
  40aba9:	pusha  
  40abaa:	adc    al,0x39
  40abac:	inc    BYTE PTR [edx+0x3efe21c6]
  40abb2:	cld    
  40abb3:	add    eax,0x7ae00c74
  40abb8:	leave  
  40abb9:	ss in  al,dx
  40abbb:	cmp    cl,ch
  40abbd:	mov    bh,0x7f
  40abbf:	test   BYTE PTR [edi+ebp*1+0x0],dl
	...
  40abf2:	add    BYTE PTR [eax],al
  40abf4:	aam    0x38
  40abf6:	into   
  40abf7:	add    ecx,DWORD PTR [edi-0x27]
  40abfa:	imul   eax,DWORD PTR [eax+0x3ebe30bb],0x19ffb163
  40ac04:	(bad)  
  40ac06:	(bad)  
  40ac07:	mov    esi,0xf1753836
  40ac0c:	js     0x40abca
  40ac0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac0f:	sahf   
  40ac10:	cmp    BYTE PTR gs:[ebp-0xc7aa7b],dh
  40ac17:	mov    ds,ebx
  40ac19:	add    al,ch
  40ac1b:	mov    dh,0xf8
  40ac1d:	aaa    
  40ac1e:	(bad)  
  40ac1f:	jle    0x40ac2c
  40ac21:	sub    eax,0x383d76f7
  40ac26:	jne    0x40ac09
  40ac28:	dec    eax
  40ac29:	inc    esi
  40ac2a:	test   al,0x66
  40ac2c:	sub    eax,0x2d45b538
  40ac31:	cmp    bh,bh
  40ac33:	push   esi
  40ac34:	sbb    eax,DWORD PTR [eax]
  40ac36:	call   0xff7974d5
  40ac3b:	inc    esi
  40ac3c:	retf   
  40ac3d:	and    eax,0x38853ef7
  40ac42:	jne    0x40ac25
  40ac44:	mov    BYTE PTR [edx-0x58],ah
  40ac47:	cs jne 0x40ac82
  40ac4a:	mov    ch,0x45
  40ac4c:	jne    0x40ac86
  40ac4e:	call   FWORD PTR [esi]
  40ac50:	jmp    0x40ac51
  40ac52:	out    0x7e,eax
  40ac54:	mov    BYTE PTR [eax],bh
  40ac56:	dec    DWORD PTR [esi]
	...
  40ac88:	add    BYTE PTR [eax],al
  40ac8a:	fwait
  40ac8b:	and    edi,esi
  40ac8d:	push   es
  40ac8e:	dec    ebp
  40ac8f:	sub    eax,0x384552a1
  40ac94:	(bad)  
  40ac95:	cmp    al,0x40
  40ac97:	xor    bh,bh
  40ac99:	out    dx,al
  40ac9a:	dec    ecx
  40ac9b:	(bad)  
  40ac9c:	stos   DWORD PTR es:[edi],eax
  40ac9d:	out    0x2e,al
  40ac9f:	cmp    BYTE PTR [ebp-0xc7d133],dh
  40aca5:	shr    edx,0x6b
  40aca8:	dec    esi
  40acaa:	xchg   esi,eax
  40acab:	jb     0x40ac95
  40acad:	add    BYTE PTR ds:0x3ae8fefa,cl
  40acb3:	scas   al,BYTE PTR es:[edi]
  40acb4:	(bad)  
  40acb5:	push   ebp
  40acb7:	scas   eax,DWORD PTR es:[edi]
  40acb8:	fcomi  st,st(7)
  40acba:	add    eax,0x1175e7fa
  40acbf:	cli    
  40acc0:	(bad)  
  40acc1:	dec    DWORD PTR [edi]
  40acc3:	icebp  
  40acc4:	idiv   bh
  40acc6:	cmc    
  40acc7:	stc    
  40acc8:	je     0x40acd6
  40acca:	in     eax,0x6f
  40accc:	pop    es
  40accd:	call   0x3fa679
  40acd2:	add    eax,0xf5f7efb0
  40acd7:	stc    
  40acd8:	out    0x59,eax
  40acda:	and    edx,edi
  40acdc:	(bad)  
  40acdd:	(bad)  
  40acde:	mov    edi,0x451e8fb
  40ace3:	cli    
  40ace4:	(bad)  
  40ace5:	(bad)  
  40ace6:	aas    
  40ace7:	mul    edi
  40ace9:	mov    ds:0xc9000327,eax
	...
  40ad1e:	add    BYTE PTR [eax],al
  40ad20:	js     0x40ad37
  40ad22:	add    BYTE PTR [ebp-0x2f],dl
  40ad25:	cmc    
  40ad26:	add    ah,0x76
  40ad29:	imul   edi,edi,0x69
  40ad2c:	or     al,0xfa
  40ad2e:	je     0x40ad38
  40ad30:	push   edx
  40ad31:	ins    BYTE PTR es:[edi],dx
  40ad32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad33:	inc    DWORD PTR [ebp-0x76]
  40ad36:	inc    ebp
  40ad37:	cld    
  40ad38:	loop   0x40ad8f
  40ad3a:	cmp    BYTE PTR [ecx+0xa],al
  40ad3d:	imul   eax,DWORD PTR [ecx],0x0
  40ad40:	cli    
  40ad41:	cmp    bh,0x75
  40ad44:	adc    ch,bl
  40ad46:	idiv   ch
  40ad48:	cmc    
  40ad49:	stc    
  40ad4a:	addr16 push ebx
  40ad4c:	mov    bl,0x43
  40ad4e:	(bad)  
  40ad4f:	dec    BYTE PTR [edi+0x4f]
  40ad52:	sub    BYTE PTR [ecx-0x6],al
  40ad55:	stc    
  40ad56:	je     0x40ad60
  40ad58:	arpl   WORD PTR [edi+eiz*1-0x3],ax
  40ad5c:	aam    0x47
  40ad5e:	cmp    al,0x75
  40ad60:	iret   
  40ad61:	aas    
  40ad62:	mov    dh,0x7
  40ad64:	mov    ebx,0xbcff6bf6
  40ad69:	gs inc ecx
  40ad6b:	add    al,0x63
  40ad6d:	adc    DWORD PTR [ecx+0x5f68e2ec],ecx
  40ad73:	mul    DWORD PTR [edi+edx*4-0x360ba72]
  40ad7a:	cmp    al,0x75
  40ad7c:	jae    0x40ad05
  40ad7e:	mov    dh,0xb
  40ad80:	jnp    0x40ad6a
  40ad82:	mov    esi,0xff
	...
  40adb3:	add    BYTE PTR [eax],al
  40adb5:	add    BYTE PTR [ebx+esi*1-0x1119f0bd],al
  40adbc:	add    DWORD PTR [eax],eax
  40adbe:	arpl   WORD PTR [edi-0x3a],bx
  40adc1:	mul    DWORD PTR [ebx+0x2c]
  40adc4:	add    eax,DWORD PTR [eax]
  40adc6:	pushf  
  40adc7:	popa   
  40adc8:	aaa    
  40adc9:	jmp    DWORD PTR [esp+ebp*1+0x3]
  40adcd:	push   0x63
  40adcf:	inc    edx
  40add0:	add    ebp,DWORD PTR [edx+0x63]
  40add3:	push   edx
  40add4:	add    ecx,DWORD PTR [ebp-0x732d0f62]
  40adda:	out    0xf7,al
  40addc:	xor    edi,edi
  40adde:	xor    al,0x9c
  40ade0:	cmp    al,0x75
  40ade2:	sub    ebx,edi
  40ade4:	mov    ch,0xfb
  40ade6:	cmp    ebp,DWORD PTR [esi]
  40ade8:	mov    esi,0x43231cff
  40aded:	je     0x40ae4d
  40adef:	add    eax,0x2c630182
  40adf4:	stos   DWORD PTR es:[edi],eax
  40adf5:	(bad)  
  40adf6:	cmp    ebp,DWORD PTR [ebp+0x3]
  40adf9:	push   DWORD PTR [esi+0x5c]
  40adfc:	sub    edi,DWORD PTR [ecx]
  40adfe:	lds    esp,FWORD PTR [esi]
  40ae00:	cmp    edx,DWORD PTR [eax-0x28]
  40ae03:	add    al,0xb9
  40ae05:	mov    esi,ebx
  40ae07:	xor    dh,dl
  40ae09:	cmp    ebx,esp
  40ae0b:	aam    0x3a
  40ae0d:	sub    al,0x8a
  40ae0f:	addr16 into 
  40ae11:	cmp    ebx,edx
  40ae13:	jg     0x40adce
  40ae15:	xor    eax,esp
  40ae17:	xor    eax,0xbbd1
	...
  40ae4c:	or     dh,BYTE PTR [esi]
  40ae4e:	mov    dh,0xae
  40ae50:	mov    ah,0x9d
  40ae52:	push   esi
  40ae53:	std    
  40ae54:	and    eax,DWORD PTR ds:0x2db371a6
  40ae5a:	sahf   
  40ae5b:	cmp    ebx,DWORD PTR [edi+ebp*4+0x67e12be4]
  40ae62:	mov    ?,WORD PTR [ebx]
  40ae64:	fidivr DWORD PTR [edi-0x73]
  40ae67:	xor    eax,DWORD PTR [ebp+esi*1+0x630b0413]
  40ae6e:	mov    al,0xc4
  40ae70:	je     0x40aea8
  40ae72:	xor    al,0x34
  40ae74:	je     0x40aeab
  40ae76:	cmp    bp,si
  40ae79:	or     BYTE PTR [ecx-0x5d],dl
  40ae7c:	sysexit 
  40ae7e:	push   esi
  40ae7f:	(bad)  
  40ae80:	fisub  WORD PTR ds:0xa04c3b56
  40ae86:	call   0xa82f7336
  40ae8b:	add    edi,DWORD PTR [ebx+edi*2]
  40ae8e:	cmp    DWORD PTR [ebx],esi
  40ae90:	xor    al,0x35
  40ae92:	cs mov cl,0x58
  40ae95:	sbb    eax,0x352468b5
  40ae9a:	jo     0x40ae1d
  40ae9c:	(bad)  
  40ae9e:	push   ss
  40ae9f:	cmp    ecx,DWORD PTR [ecx+0x4a8d8105]
  40aea5:	(bad)  
  40aea6:	call   0xf6767ce5
  40aeab:	cmp    bh,ah
  40aead:	xor    al,0x0
  40aeaf:	jl     0x40aeb1
	...
  40aee1:	add    BYTE PTR [ebp+ebx*1+0x31],bl
  40aee5:	cmp    al,0x28
  40aee7:	xor    al,0x89
  40aee9:	ins    BYTE PTR es:[edi],dx
  40aeea:	cmp    BYTE PTR [edi+edi*8],bh
  40aeed:	fimul  WORD PTR [esi]
  40aeef:	xor    eax,0xc5d78667
  40aef4:	dec    ebp
  40aef6:	push   ebx
  40aef7:	xor    eax,0x3489c6f7
  40aefc:	jne    0x40aeeb
  40aefe:	mov    BYTE PTR [ebx],bl
  40af00:	lods   eax,DWORD PTR ds:[esi]
  40af01:	mov    dh,0x79
  40af03:	jle    0x40ae8a
  40af05:	lea    esi,[ecx+0x34]
  40af08:	jmp    FWORD PTR [edx+0x2b]
  40af0b:	sub    edi,esi
  40af0d:	sahf   
  40af0e:	pop    ecx
  40af0f:	add    eax,0x72dde075
  40af14:	loopne 0x40aeac
  40af16:	dec    ecx
  40af17:	xor    al,0x0
  40af19:	std    
  40af1a:	ret    
  40af1b:	xchg   DWORD PTR [ebp-0xcbce73],edi
  40af21:	jmp    0x2cc37fea
  40af26:	cmp    BYTE PTR [edi+edi*8],bh
  40af29:	pushaw 
  40af2b:	mov    ecx,0x560d152
  40af30:	out    dx,eax
  40af31:	xchg   edi,eax
  40af32:	cdq    
  40af33:	mov    edx,0x6a304107
  40af38:	inc    DWORD PTR [esi-0x77]
  40af3b:	jp     0x40af29
  40af3d:	ss jns 0x40af74
  40af40:	(bad)  
  40af41:	mov    esp,0x87a41d68
	...
  40af76:	add    BYTE PTR [eax],al
  40af78:	imul   esi,DWORD PTR [edi+edi*8],0xff3c785c
  40af7f:	push   ds
  40af80:	pop    ecx
  40af81:	mov    edx,0x6af20107
  40af86:	dec    DWORD PTR [esi]
  40af88:	dec    ecx
  40af89:	jp     0x40af6f
  40af8b:	add    BYTE PTR ds:0x77fffeee,al
  40af91:	add    al,ch
  40af93:	mov    BYTE PTR [edi+ebp*8-0x17c80002],ah
  40af9a:	idiv   bh
  40af9c:	std    
  40af9d:	in     eax,dx
  40af9e:	je     0x40afa8
  40afa0:	mov    dl,0x72
  40afa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afa3:	jmp    FWORD PTR [ebp-0x4a234b13]
  40afa9:	in     eax,dx
  40afaa:	(bad)  
  40afab:	inc    DWORD PTR [edi-0x1b9317ff]
  40afb1:	in     eax,dx
  40afb2:	(bad)  
  40afb3:	push   DWORD PTR [edi]
  40afb5:	in     eax,0xf6
  40afb7:	(bad)  
  40afb8:	std    
  40afb9:	loopne 0x40b030
  40afbb:	test   eax,0xb5feedfd
  40afc0:	jmp    0xa861:0xe2fffef5
  40afc7:	(bad)  
  40afc8:	fucomp st(5)
  40afca:	mov    ah,0xec
  40afcc:	add    eax,0x6ae8feee
  40afd1:	mov    al,ds:0xa3edfffe
  40afd6:	out    0xf7,eax
  40afd8:	std    
  40afd9:	in     eax,dx
  40afda:	out    0x55,eax
	...
  40b00c:	add    BYTE PTR [eax],al
  40b00e:	shr    ebp,cl
  40b010:	(bad)  
  40b011:	push   edi
  40b013:	int    0xf6
  40b015:	jmp    FWORD PTR [ebp-0x6256b61f]
  40b01b:	in     al,dx
  40b01c:	(bad)  
  40b01d:	mov    ch,0x8a
  40b01f:	hlt    
  40b020:	(bad)  
  40b021:	(bad)  
  40b022:	jge    0x40b086
  40b024:	or     edi,edi
  40b026:	idiv   esi
  40b028:	out    0x3d,eax
  40b02a:	jl     0x40b018
  40b02c:	(bad)  
  40b02d:	inc    DWORD PTR [edi+0x7dfff6f9]
  40b033:	loope  0x40b062
  40b035:	test   eax,0xff391b63
  40b03a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b03b:	adc    al,0x2b
  40b03d:	push   ecx
  40b03e:	add    eax,0x76ff390c
  40b043:	xor    BYTE PTR [ebx],ch
  40b045:	js     0x40b0bf
  40b047:	sbb    al,0x3
  40b049:	leave  
  40b04a:	and    DWORD PTR [ecx+0x3],edx
  40b04d:	push   ebp
  40b04e:	fcomp  DWORD PTR [eax-0x7c]
  40b051:	(bad)  
  40b052:	(bad)  
  40b054:	add    ebp,DWORD PTR [edx+0x6c]
  40b057:	pop    ebx
  40b058:	scas   al,BYTE PTR es:[edi]
  40b059:	pop    es
  40b05a:	mov    ebx,0xc4ff61dc
  40b05f:	mov    ch,0xbd
  40b061:	sti    
  40b062:	dec    ebx
  40b063:	mov    al,0xf9
  40b065:	inc    eax
  40b066:	arpl   WORD PTR [ebx-0x12],di
  40b069:	push   ebp
  40b06a:	jp     0x40b049
  40b06c:	add    edi,edi
  40b06e:	cs xor al,0x2b
  40b071:	test   BYTE PTR [eax],0x0
	...
  40b0a4:	sahf   
  40b0a5:	xchg   ebx,eax
  40b0a6:	cmp    BYTE PTR [eax-0x29],ch
  40b0a9:	push   ebp
  40b0aa:	ret    0x4ff
  40b0ad:	push   ds
  40b0ae:	add    eax,DWORD PTR [eax]
  40b0b0:	jecxz  0x40b03d
  40b0b2:	scas   al,BYTE PTR es:[edi]
  40b0b3:	pop    es
  40b0b4:	mov    ecx,DWORD PTR [eax-0x448b00ca]
  40b0ba:	lods   eax,DWORD PTR ds:[esi]
  40b0bb:	sti    
  40b0bc:	ins    BYTE PTR es:[edi],dx
  40b0bd:	cmp    DWORD PTR [ebx],ecx
  40b0bf:	call   0xff7932d4
  40b0c4:	sub    bl,dh
  40b0c6:	(bad)  
  40b0c7:	jmp    FWORD PTR [edi+0x278126a7]
  40b0cd:	lock das 
  40b0cf:	inc    DWORD PTR [ecx+edi*4-0x43]
  40b0d3:	sti    
  40b0d4:	xchg   ebx,eax
  40b0d5:	rep lods eax,DWORD PTR ds:[esi]
  40b0d7:	sysenter 
  40b0d9:	jno    0x40b0e2
  40b0db:	call   0x44282a
  40b0e0:	pop    eax
  40b0e1:	add    eax,0x81e60829
  40b0e6:	jmp    0xac8b13ee
  40b0eb:	cmp    esp,DWORD PTR [ebx+0x5]
  40b0ee:	jmp    0xfd08ccf6
  40b0f3:	aaa    
  40b0f4:	fs add eax,0x9bf4ade9
  40b0fa:	call   0xe8dc9dac
  40b0ff:	xchg   BYTE PTR [esi-0x1976c6c7],bl
  40b105:	cmp    dh,dl
  40b107:	aaa    
	...
  40b138:	add    BYTE PTR [eax],al
  40b13a:	aam    0xd4
  40b13c:	aad    0xb1
  40b13e:	aam    0x31
  40b140:	push   esp
  40b141:	cmp    BYTE PTR [ebx+0x6304432f],bh
  40b147:	(bad)  
  40b148:	test   al,0xb0
  40b14a:	bound  ebx,QWORD PTR [esi]
  40b14c:	sbb    al,0x89
  40b14e:	out    0x20,al
  40b150:	mov    dh,0x37
  40b152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b153:	aam    0x73
  40b155:	adc    DWORD PTR [edi+0x33379e39],0x8c141c32
  40b15f:	mov    bh,0xdc
  40b161:	sub    eax,DWORD PTR ds:0xea37865e
  40b167:	xchg   DWORD PTR [ecx+0x2f],edi
  40b16a:	je     0x40b19d
  40b16c:	loop   0x40b1b1
  40b16e:	mul    esi
  40b170:	imul   edi,DWORD PTR [ecx+0x77],0x63376639
  40b177:	mov    ecx,0x3154abff
  40b17c:	inc    esi
  40b17d:	jbe    0x40b1cb
  40b17f:	jnp    0x40b1be
  40b181:	das    
  40b182:	inc    esp
  40b183:	xor    DWORD PTR [esi+0x71],eax
  40b186:	xor    edi,DWORD PTR [ecx]
  40b188:	ds aaa 
  40b18a:	xor    al,0xbb
  40b18c:	jmp    eax
  40b18e:	js     0x40b1d0
  40b190:	leave  
  40b191:	cs ins BYTE PTR es:[edi],dx
  40b193:	xor    BYTE PTR [ebp-0xcfb3e7],dh
  40b199:	adc    esp,edi
  40b19b:	push   0x16ff
	...
  40b1d0:	push   esp
  40b1d1:	retf   0x2f7
  40b1d4:	fbstp  TBYTE PTR [eax]
  40b1d6:	jne    0x40b1dd
  40b1d8:	dec    edi
  40b1d9:	mov    cl,0x79
  40b1db:	jmp    0xe602f040
  40b1e0:	pusha  
  40b1e1:	fimul  DWORD PTR [edx-0x3b61e03]
  40b1e7:	push   ebx
  40b1e8:	addr16 fwait
  40b1ea:	pop    ss
  40b1eb:	ficom  WORD PTR [ebx]
  40b1ed:	or     eax,ebp
  40b1ef:	sub    eax,0x60ff3042
  40b1f4:	mov    ds:0xbfc8682c,eax
  40b1f9:	(bad)  
  40b1fc:	mov    bl,0xda
  40b1fe:	sub    BYTE PTR [eax],ch
  40b200:	xor    BYTE PTR [di-0x1f],dh
  40b204:	js     0x40b1f0
  40b206:	(bad)  
  40b207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b208:	push   ebp
  40b209:	popf   
  40b20a:	loopne 0x40b1ec
  40b20c:	lahf   
  40b20d:	xor    BYTE PTR [edi-0x15],ah
  40b210:	pusha  
  40b211:	add    eax,0x8d38e80
  40b216:	call   0xff70e7f5
  40b21b:	adc    DWORD PTR [ecx],edi
  40b21d:	out    dx,al
  40b21e:	inc    eax
  40b21f:	jmp    0xc096ac59
  40b224:	lahf   
  40b225:	xor    dh,bh
  40b227:	fsubr  QWORD PTR [eax+0x1d]
  40b22a:	add    BYTE PTR [esi-0x73],bl
  40b22d:	xor    BYTE PTR [eax+0x53],ch
  40b230:	dec    edi
  40b231:	(bad)  
	...
  40b264:	add    BYTE PTR [eax],al
  40b266:	bound  eax,QWORD PTR ds:0xf7ca0000
  40b26c:	je     0x40b276
  40b26e:	xchg   edx,eax
  40b26f:	jmp    0xfc74:0xf775fffd
  40b276:	jne    0x40b2ed
  40b278:	pop    es
  40b279:	call   0x3f57b6
  40b27e:	push   ebx
  40b27f:	mov    BYTE PTR [ebx],0x0
  40b282:	iret   
  40b283:	jp     0x40b271
  40b285:	(bad)  
  40b286:	out    dx,eax
  40b287:	pop    es
  40b288:	call   0xff384481
  40b28d:	or     ecx,DWORD PTR [edx+0x60]
  40b290:	cmp    BYTE PTR [eax+0x1d],ch
  40b293:	cs inc eax
  40b295:	add    dl,cl
  40b297:	fisttp DWORD PTR [eax+0x4ff9c5ab]
  40b29d:	push   eax
  40b29e:	xor    cl,BYTE PTR [ecx]
  40b2a0:	add    bh,ch
  40b2a2:	hlt    
  40b2a3:	pusha  
  40b2a4:	sbb    al,0x3a
  40b2a6:	jnp    0x40b2b1
  40b2a8:	push   eax
  40b2a9:	(bad)  
  40b2aa:	jg     0x40b2ad
  40b2ac:	call   0xff3ab901
  40b2b1:	pop    eax
  40b2b2:	and    al,BYTE PTR [eax+eax*1]
  40b2b5:	out    dx,eax
  40b2b6:	xor    al,0x61
  40b2b8:	and    DWORD PTR [edx],edi
  40b2ba:	dec    ebx
  40b2bb:	or     DWORD PTR [eax-0x1],edx
  40b2be:	outs   dx,DWORD PTR ds:[esi]
  40b2bf:	add    eax,ebp
  40b2c1:	cmp    al,0xc6
  40b2c3:	stc    
  40b2c4:	(bad)  
  40b2c5:	call   0x3f852c
	...
  40b2fa:	add    BYTE PTR [eax],al
  40b2fc:	mov    bl,0xc2
  40b2fe:	pop    es
  40b2ff:	add    BYTE PTR [edi+0x7e],cl
  40b302:	in     al,dx
  40b303:	cmp    DWORD PTR [esi+0x600069ec],0xc
  40b30a:	push   DWORD PTR [ebp+0x52]
  40b30d:	fisttp DWORD PTR [ecx-0x77074a5c]
  40b313:	inc    ebp
  40b314:	arpl   ax,bx
  40b316:	test   eax,0xb5a4419
  40b31b:	call   0xff757af6
  40b320:	leave  
  40b321:	sti    
  40b322:	xor    al,0x75
  40b324:	pop    ebx
  40b325:	les    ecx,FWORD PTR [eax-0x561fdb01]
  40b32b:	sbb    ebx,DWORD PTR [edx+edx*4]
  40b32e:	or     ebp,eax
  40b330:	loop   0x40b341
  40b332:	xor    eax,0x37920cff
  40b337:	dec    DWORD PTR [esi-0x385bd4dc]
  40b33d:	pop    es
  40b33e:	xor    eax,0x32921c9
  40b343:	push   ebp
  40b344:	fmul   DWORD PTR [eax]
  40b346:	add    esp,0xbae1fe7
  40b34c:	retf   
  40b34d:	mov    ebx,0x33d4ff68
  40b352:	inc    ebx
  40b353:	movntq QWORD PTR [ebx+0x3],mm7
  40b357:	add    BYTE PTR [ebx-0x5b],ah
  40b35a:	mov    ebp,0x13c9e0fb
	...
  40b38f:	add    BYTE PTR [eax],al
  40b391:	add    BYTE PTR [edi],ch
  40b393:	push   ds
  40b394:	xor    al,0x75
  40b396:	push   ebx
  40b397:	ja     0x40b347
  40b399:	sti    
  40b39a:	mov    ebx,0x9cff6943
  40b39f:	mov    ch,0xbd
  40b3a1:	sti    
  40b3a2:	or     ebx,edx
  40b3a4:	stc    
  40b3a5:	inc    eax
  40b3a6:	arpl   WORD PTR [edi-0x58840452],dx
  40b3ac:	push   0xac0c7cff
  40b3b1:	push   DWORD PTR [edi+edi*2+0x75]
  40b3b5:	push   eax
  40b3b6:	ins    BYTE PTR es:[edi],dx
  40b3b7:	xor    DWORD PTR [ebx],ecx
  40b3b9:	call   0xff75185e
  40b3be:	dec    ebx
  40b3bf:	add    eax,0x2e545d3d
  40b3c4:	shl    DWORD PTR [ebx+0x34e8c48a],1
  40b3ca:	into   
  40b3cb:	xor    DWORD PTR [ecx-0x63],eax
  40b3ce:	or     ch,BYTE PTR [esi]
  40b3d0:	inc    esi
  40b3d1:	sar    DWORD PTR [esp+eax*1-0x2b12db17],cl
  40b3d8:	xor    eax,0x8b1d5cae
  40b3dd:	dec    ebx
  40b3de:	sbb    al,0x2e
  40b3e0:	adc    DWORD PTR [eax-0x43],esi
  40b3e3:	sub    eax,0xebb6ab1e
  40b3e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3e9:	add    eax,DWORD PTR [eax+edi*4]
  40b3ec:	or     al,0x2b
  40b3ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ef:	pop    ebx
  40b3f0:	push   es
  40b3f1:	xor    al,0x93
  40b3f3:	popf   
  40b3f4:	call   0x40b3fc
	...
  40b425:	add    BYTE PTR [eax],al
  40b427:	add    ah,bh
  40b429:	outs   dx,BYTE PTR ds:[esi]
  40b42a:	cdq    
  40b42b:	xor    al,0x6e
  40b42d:	std    
  40b42e:	add    BYTE PTR [edx+0x1ce62dab],al
  40b434:	icebp  
  40b435:	data16 fidiv WORD PTR [ebx]
  40b438:	cmp    eax,DWORD PTR [esi+0x2ec4c513]
  40b43e:	push   esp
  40b43f:	xor    bl,cl
  40b441:	call   0xd4f4e7d8
  40b446:	push   eax
  40b447:	add    eax,0xd4771e63
  40b44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b44d:	mov    bh,0xe0
  40b44f:	sbb    eax,DWORD PTR [ebx]
  40b451:	cmp    eax,0xb38b33a6
  40b456:	inc    esi
  40b457:	xor    ecx,DWORD PTR [ebp+ebp*1-0x6484cfe4]
  40b45e:	inc    esi
  40b45f:	xor    edi,DWORD PTR [ebx+edi*1-0x55]
  40b463:	add    BYTE PTR [ebx-0x28],ah
  40b466:	jno    0x40b488
  40b468:	loopne 0x40b4b2
  40b46a:	add    BYTE PTR [ebp-0x3b],dh
  40b46d:	sub    eax,0xb291d369
  40b472:	pop    es
  40b473:	push   ecx
  40b474:	aam    0x68
  40b476:	call   FWORD PTR [esi-0x32]
  40b479:	ret    0xc3fb
  40b47c:	pusha  
  40b47d:	lahf   
  40b47e:	sbb    DWORD PTR [esi-0x6],ecx
  40b481:	add    al,0xe8
  40b483:	or     esi,DWORD PTR [eax+0x2c]
  40b486:	call   ebx
  40b488:	pusha  
  40b489:	lahf   
  40b48a:	and    dh,BYTE PTR [esi]
	...
  40b4bc:	add    BYTE PTR [eax],al
  40b4be:	jmp    0xff2c:0x51d7e804
  40b4c5:	xchg   ebx,eax
  40b4c6:	pusha  
  40b4c7:	lahf   
  40b4c8:	sbb    ebx,DWORD PTR [esi]
  40b4ca:	retf   0xe804
  40b4cd:	jecxz  0x40b520
  40b4cf:	sub    al,0xff
  40b4d1:	add    DWORD PTR [edi+ebp*8+0xed6e940],0x24e874ff
  40b4dc:	sti    
  40b4dd:	div    DWORD PTR [ecx]
  40b4df:	sub    al,0x68
  40b4e1:	inc    ebp
  40b4e2:	int    0xc5
  40b4e4:	call   DWORD PTR [edx-0x44]
  40b4e7:	sub    esi,DWORD PTR [ebp-0xf]
  40b4ea:	push   0x91d6fe19
  40b4ef:	popf   
  40b4f0:	mov    ds:0x692ca613,eax
  40b4f5:	in     eax,0x71
  40b4f7:	mov    dl,0x7
  40b4f9:	rcl    DWORD PTR [ebx],1
  40b4fb:	sub    edi,edi
  40b4fd:	mov    dh,0x71
  40b4ff:	mov    dl,0xfb
  40b501:	scas   al,BYTE PTR es:[edi]
  40b502:	fild   DWORD PTR [eax+ebp*8]
  40b505:	sbb    edi,esp
  40b507:	sub    edi,edi
  40b509:	mov    al,0x26
  40b50b:	add    DWORD PTR [eax],eax
  40b50d:	cmp    al,0x4
  40b50f:	sbb    DWORD PTR [ecx-0xcba75b],eax
  40b515:	add    ch,bl
  40b517:	test   DWORD PTR [ebp-0x4],eax
  40b51a:	dec    edx
  40b51b:	clc    
  40b51c:	je     0x40b52e
  40b51e:	in     eax,dx
  40b51f:	ins    BYTE PTR es:[edi],dx
  40b520:	or     ebp,eax
	...
  40b552:	add    BYTE PTR [eax],al
  40b554:	adc    ah,BYTE PTR [eax-0x1]
  40b557:	call   DWORD PTR [ecx-0x38]
  40b55a:	push   cs
  40b55b:	test   DWORD PTR ds:0x75000001,eax
  40b561:	cmp    eax,0x84a00f7
  40b566:	add    bh,al
  40b568:	pop    es
  40b569:	hlt    
  40b56a:	inc    BYTE PTR [edi]
  40b56c:	cmp    cl,BYTE PTR [eax]
  40b56e:	push   0x0
  40b570:	and    BYTE PTR [eax],cl
  40b572:	push   0x0
  40b574:	and    BYTE PTR [eax],cl
  40b576:	lea    eax,[ebp+0x76]
  40b579:	pop    eax
  40b57a:	mov    WORD PTR [ebp-0x1108a],es
  40b580:	retf   0x74f6
  40b583:	clc    
  40b584:	ins    DWORD PTR es:[edi],dx
  40b585:	ins    DWORD PTR es:[edi],dx
  40b586:	sti    
  40b587:	call   0x40157c
  40b58c:	icebp  
  40b58d:	(bad)  
  40b58e:	jae    0x40b595
  40b590:	arpl   WORD PTR [edx],bp
  40b592:	add    BYTE PTR [eax],al
  40b594:	retf   0xc68f
  40b597:	sub    BYTE PTR [ebx-0x358a00ff],cl
  40b59d:	cvtps2pi mm5,QWORD PTR [ecx-0x74b00a53]
  40b5a4:	cli    
  40b5a5:	stos   DWORD PTR es:[edi],eax
  40b5a6:	test   ah,dh
  40b5a8:	cmc    
  40b5a9:	cmc    
  40b5aa:	(bad)  
  40b5ab:	push   eax
  40b5ac:	dec    eax
  40b5ad:	or     DWORD PTR ds:0x88f5eda9,ebx
  40b5b3:	test   edx,ebx
  40b5b5:	in     eax,dx
  40b5b6:	(bad)  
  40b5b7:	inc    DWORD PTR [eax]
	...
  40b5e9:	add    dl,dh
  40b5eb:	jno    0x40b591
  40b5ed:	(bad)  
  40b5ee:	in     eax,dx
  40b5ef:	mov    bh,bh
  40b5f1:	arpl   WORD PTR [bx],bx
  40b5f4:	in     al,dx
  40b5f5:	inc    eax
  40b5f6:	arpl   WORD PTR [ebx+0x77],di
  40b5f9:	lock ins BYTE PTR es:[edi],dx
  40b5fb:	xor    BYTE PTR [ecx],0xff
  40b5fe:	neg    BYTE PTR [ecx]
  40b600:	sbb    esi,DWORD PTR [esi-0x45]
  40b603:	mov    dl,0x30
  40b605:	mov    esi,esp
  40b607:	test   al,0x38
  40b609:	call   DWORD PTR [edi+edx*2+0x3]
  40b60d:	push   0xffc2e75c
  40b612:	inc    ebp
  40b613:	mov    dh,BYTE PTR [edi+esi*8]
  40b616:	cmp    al,0xbc
  40b618:	xor    BYTE PTR [ebp+0x67],dh
  40b61b:	aam    0xcc
  40b61d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b61e:	sub    al,0xec
  40b620:	jp     0x40b5a7
  40b622:	cmp    ebp,esp
  40b624:	xor    bh,bh
  40b626:	loopne 0x40b5c1
  40b628:	pop    ds
  40b629:	not    DWORD PTR [esp+eiz*8]
  40b62c:	add    esi,DWORD PTR [ebx+edx*2-0x6c]
  40b630:	add    eax,DWORD PTR [eax]
  40b632:	hlt    
  40b633:	rcr    BYTE PTR [ebx+0x35d39ca],cl
  40b639:	jmp    FWORD PTR [esi-0x1300c6f0]
  40b63f:	sub    esi,DWORD PTR [esi+0x3b07fb07]
  40b645:	(bad)  
  40b646:	fadd   QWORD PTR [edx+eax*1-0x649d3c00]
  40b64d:	aam    0x0
	...
  40b67f:	add    BYTE PTR [ecx+0xeff03dd],cl
  40b685:	inc    ecx
  40b686:	cmp    bh,bh
  40b688:	mov    esp,0xcb07b63b
  40b68d:	(bad)  
  40b68e:	cmp    bh,bh
  40b690:	lods   al,BYTE PTR ds:[esi]
  40b691:	lahf   
  40b692:	ins    DWORD PTR es:[edi],dx
  40b693:	call   0x712a44
  40b698:	pop    ss
  40b699:	sub    al,0x9b
  40b69b:	call   DWORD PTR [ebp+eax*1+0x3dfb7196]
  40b6a2:	jecxz  0x40b666
  40b6a4:	test   BYTE PTR [ebx],ch
  40b6a6:	pop    esp
  40b6a7:	sbb    esi,DWORD PTR [edx+ebp*1-0x72]
  40b6ab:	xor    dh,ch
  40b6ad:	cld    
  40b6ae:	nop
  40b6af:	jne    0x40b64b
  40b6b1:	sub    bh,BYTE PTR [esi-0x65]
  40b6b4:	arpl   WORD PTR ds:0x50cb7186,ax
  40b6ba:	mov    bl,0xc2
  40b6bc:	push   esp
  40b6bd:	sub    ebx,DWORD PTR [ebx+ebx*1+0x305e2a54]
  40b6c4:	into   
  40b6c5:	std    
  40b6c6:	inc    eax
  40b6c7:	lea    ebp,[edx]
  40b6c9:	sub    cl,BYTE PTR [esi+0x30]
  40b6cc:	out    dx,al
  40b6cd:	sbb    BYTE PTR [esi],bh
  40b6cf:	xor    BYTE PTR [ebx*1+0x2a246729],ch
  40b6d6:	ss jbe 0x40b6e4
  40b6d9:	xor    ch,BYTE PTR [esi]
  40b6db:	xor    BYTE PTR [ebx],cl
  40b6dd:	jo     0x40b72c
  40b6df:	xor    BYTE PTR [edx+ebp*1],cl
  40b6e2:	push   esp
  40b6e3:	xor    eax,DWORD PTR [eax]
	...
  40b715:	add    BYTE PTR [edx+ebp*1],cl
  40b718:	push   ss
  40b719:	xor    BYTE PTR [esi-0x7],dh
  40b71c:	or     eax,0x3d1d5cb6
  40b721:	xor    esp,ebp
  40b723:	sub    esi,edi
  40b725:	jne    0x40b71a
  40b727:	xor    esi,esi
  40b729:	das    
  40b72a:	retf   
  40b72b:	mov    eax,DWORD PTR [ebp+0x30]
  40b72e:	aam    0x29
  40b730:	sub    al,0x2c
  40b732:	mov    edx,0xc42fdf3c
  40b737:	sub    DWORD PTR [eax+esi*1-0x35],ebx
  40b73b:	and    eax,0x3c630457
  40b740:	stos   DWORD PTR es:[edi],eax
  40b741:	add    BYTE PTR [ebx-0x30],ah
  40b744:	jno    0x40b766
  40b746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b747:	scas   eax,DWORD PTR es:[edi]
  40b748:	jmp    esp
  40b74a:	js     0x40b788
  40b74c:	test   al,0xae
  40b74e:	inc    esp
  40b74f:	(bad)  
  40b750:	mov    edi,0xdea17e1d
  40b755:	jecxz  0x40b6f6
  40b757:	sub    DWORD PTR [edi-0x7f],ecx
  40b75a:	lods   eax,DWORD PTR ds:[esi]
  40b75b:	popa   
  40b75c:	dec    DWORD PTR [esi-0x16984671]
  40b762:	pusha  
  40b763:	sbb    bh,BYTE PTR [esi+0x40ef2811]
  40b769:	jmp    0xe1b5df9e
  40b76e:	js     0x40b752
  40b770:	enter  0x7c66,0xcd
  40b774:	addr16 call 0xc1fecfda
	...
  40b7aa:	add    BYTE PTR [eax],al
  40b7ac:	fwait
  40b7ad:	jmp    0x40b7ef
  40b7af:	jmp    0xf1b5dfc4
  40b7b4:	dec    eax
  40b7b5:	push   ss
  40b7b6:	leave  
  40b7b7:	ds je  0x40b7d7
  40b7ba:	cmp    eax,0xc9284c8d
  40b7bf:	sub    edx,DWORD PTR [edi]
  40b7c1:	sub    DWORD PTR [edx+esi*2+0x43],edx
  40b7c5:	test   ah,al
  40b7c7:	sbb    eax,0xe969d02d
  40b7cc:	fimul  DWORD PTR [ebx]
  40b7ce:	call   DWORD PTR [eax+edi*8+0x3c485d20]
  40b7d5:	sub    BYTE PTR [ecx+0x357c34a4],cl
  40b7db:	xchg   BYTE PTR [eax-0x2d9e003b],bh
  40b7e1:	mov    bl,0x27
  40b7e3:	sub    BYTE PTR [edi-0x7b],ah
  40b7e6:	aas    
  40b7e7:	jmp    0xe9fc3cb1
  40b7ec:	pusha  
  40b7ed:	add    eax,0xc5caa968
  40b7f2:	(bad)  
  40b7f3:	dec    DWORD PTR [ecx+ecx*1-0x50]
  40b7f7:	jbe    0x40b7b3
  40b7f9:	add    al,0xb
  40b7fb:	rcr    BYTE PTR [esi+0x67],0x3f
  40b7ff:	adc    BYTE PTR [edx-0x27bf0fc],0x3
  40b806:	add    BYTE PTR [eax],al
  40b808:	dec    edx
  40b809:	mov    DWORD PTR [edi-0x17feb4c6],edi
  40b80f:	in     eax,dx
	...
  40b840:	add    BYTE PTR [eax],al
  40b842:	dec    esi
  40b843:	add    DWORD PTR [eax],eax
  40b845:	pop    edx
  40b846:	jns    0x40b80e
  40b848:	dec    edi
  40b849:	call   0x3f5d61
  40b84e:	jp     0x40b8a1
  40b850:	add    BYTE PTR [bp+si+0x7],cl
  40b854:	mov    esi,0x401e9168
  40b859:	add    BYTE PTR [edx],cl
  40b85b:	xlat   BYTE PTR ds:[ebx]
  40b85c:	je     0x40b866
  40b85e:	mov    ds:0xa5ffc87e,al
  40b863:	cmp    al,0x67
  40b865:	add    DWORD PTR [edx],edi
  40b867:	pop    es
  40b868:	mov    esi,0x401e4f68
  40b86d:	add    dl,bh
  40b86f:	(bad)  
  40b870:	je     0x40b87a
  40b872:	mov    ds:0x45ffc882,al
  40b877:	or     al,0xb2
  40b879:	mov    ds:0x43ead765,eax
  40b87e:	loop   0x40b81b
  40b880:	cmp    DWORD PTR [ecx+0xa],eax
  40b883:	dec    edi
  40b884:	out    0x41,eax
  40b886:	ins    BYTE PTR es:[edi],dx
  40b887:	add    al,0x0
  40b889:	or     edi,DWORD PTR [edx]
  40b88b:	jo     0x40b8c0
  40b88d:	push   esi
  40b88e:	bound  esp,QWORD PTR [eax-0x54]
  40b891:	inc    ebp
  40b893:	push   edx
  40b894:	dec    edi
  40b895:	push   0xbeef03ba
  40b89a:	xor    ch,dh
  40b89c:	cmp    DWORD PTR [ecx+0x63],eax
  40b89f:	push   ds
  40b8a0:	sar    esi,cl
  40b8a2:	cs sbb edx,DWORD PTR es:[ebp+0x0]
	...
  40b8d7:	add    BYTE PTR [ebx+0x3b582d3e],bl
  40b8dd:	sbb    eax,0xc5ddef03
  40b8e2:	push   esi
  40b8e3:	cmp    ah,BYTE PTR [edx]
  40b8e5:	push   ds
  40b8e6:	sar    esi,cl
  40b8e8:	push   ss
  40b8e9:	sbb    eax,DWORD PTR ss:[ecx-0x65]
  40b8ed:	xchg   BYTE PTR ds:0x2cbb0ee8,ch
  40b8f3:	dec    DWORD PTR [eax+0x2d7fc51c]
  40b8f9:	push   ds
  40b8fa:	mov    dh,0xf9
  40b8fc:	sbb    eax,0x1abff0aa
  40b901:	mov    al,0x2c
  40b903:	call   DWORD PTR [ebx+ebp*4+0x5d]
  40b907:	cmp    BYTE PTR [edi+ebp*1-0x7a],ah
  40b90b:	inc    ebp
  40b90c:	inc    esp
  40b90d:	enter  0x6a2c,0x59
  40b911:	iret   
  40b912:	mov    dh,0x7
  40b914:	dec    ebx
  40b915:	fsubr  QWORD PTR ds:0xe0532cff
  40b91b:	(bad)  
  40b91c:	scas   al,BYTE PTR es:[edi]
  40b91d:	xor    al,0x1b
  40b91f:	mov    ecx,0x6a2cf01d
  40b924:	ja     0x40b8fd
  40b926:	mov    dh,0x7
  40b928:	sti    
  40b929:	iret   
  40b92a:	sub    eax,0x329504ff
  40b92f:	cmp    ah,BYTE PTR [edx-0x72cad3e4]
  40b935:	inc    ebp
  40b936:	ret    0xedff
  40b939:	test   eax,0xe7fa
	...
  40b96e:	xor    ch,BYTE PTR [ecx]
  40b970:	sub    al,0xff
  40b972:	dec    ebx
  40b973:	sub    eax,0x846340e9
  40b978:	add    DWORD PTR [eax],eax
  40b97a:	arpl   WORD PTR ds:0xfd4e2c69,ax
  40b980:	ror    BYTE PTR [esi+edi*4],1
  40b983:	es (bad) 
  40b985:	sub    al,0x2e
  40b987:	sub    esi,ecx
  40b989:	mov    dh,0x64
  40b98b:	sbb    eax,0x26a4636b
  40b990:	push   ds
  40b991:	into   
  40b992:	stos   DWORD PTR es:[edi],eax
  40b993:	inc    ebx
  40b994:	in     eax,dx
  40b995:	add    ebp,DWORD PTR [esi]
  40b997:	jp     0x40b956
  40b999:	and    BYTE PTR [edi-0x7bd361ab],0x78
  40b9a0:	and    al,0x30
  40b9a2:	adc    esp,DWORD PTR [esi]
  40b9a4:	sbb    al,0x14
  40b9a6:	je     0x40b958
  40b9a8:	fcomp  QWORD PTR [ebx]
  40b9aa:	and    eax,0x5803e8b0
  40b9af:	inc    ebp
  40b9b0:	out    dx,al
  40b9b1:	xchg   BYTE PTR [ecx+0x1c03e903],ah
  40b9b7:	shl    BYTE PTR [eax+0x3],0x63
  40b9bb:	add    eax,0x319e44e9
  40b9c0:	pop    esi
  40b9c1:	add    al,0x63
  40b9c3:	add    eax,0x5c903c3
  40b9c8:	ret    
  40b9c9:	add    edi,DWORD PTR [ecx+0x30c67405]
  40b9cf:	aad    0x6b
  40b9d1:	xchg   BYTE PTR [eax],al
	...
  40ba03:	add    BYTE PTR [edi],dl
  40ba05:	cs ss sub al,0xb3
  40ba09:	es mov ah,0x2b
  40ba0c:	or     al,0xb0
  40ba0e:	and    al,0x1b
  40ba10:	imul   esi,DWORD PTR [eax+0x456803e8],0xffffff9d
  40ba17:	push   es
  40ba18:	or     al,BYTE PTR [eax]
  40ba1a:	jmp    0x40ba1f
  40ba1c:	arpl   WORD PTR [ebp+0x5a3db2d],bx
  40ba22:	(bad)  
  40ba23:	mov    ch,0x6c
  40ba25:	sbb    eax,0x263eb200
  40ba2a:	call   FWORD PTR [ecx+0x6c8d554b]
  40ba30:	xchg   ebx,eax
  40ba31:	cs (bad) 
  40ba33:	ficom  WORD PTR [edi+0x4102e7d3]
  40ba39:	jmp    DWORD PTR es:[eax-0x1e]
  40ba3d:	xor    al,0xf7
  40ba3f:	(bad)  
  40ba40:	js     0x40ba5f
  40ba42:	or     DWORD PTR [ebx-0x1695d9b8],0x283b0ef8
  40ba4c:	addr16 es mov ch,0x99
  40ba50:	push   eax
  40ba51:	call   FWORD PTR es:[esi+0x6de7f9b2]
  40ba58:	add    ah,BYTE PTR [esi]
  40ba5a:	jmp    DWORD PTR [eax-0x1e]
  40ba5d:	and    bh,dh
  40ba5f:	xchg   BYTE PTR [eax],bh
  40ba61:	fwait
  40ba62:	call   DWORD PTR [eax]
  40ba64:	inc    edi
  40ba65:	loopne 0x40baa7
  40ba67:	jmp    0x40ba6c
	...
  40ba98:	add    BYTE PTR [eax],al
  40ba9a:	mov    DWORD PTR [edx-0x10],ebx
  40ba9d:	jbe    0x40bb17
  40ba9f:	and    al,0xff
  40baa1:	fmul   QWORD PTR [ebp+ebp*1+0x69]
  40baa5:	test   BYTE PTR [eax+0x5b6c8924],cl
  40baab:	sbb    al,0xff
  40baad:	dec    esi
  40baae:	int    0x24
  40bab0:	adc    BYTE PTR [si],dh
  40bab3:	(bad)  
  40bab4:	(bad)  
  40bab5:	cmp    eax,0x36f71592
  40baba:	dec    eax
  40babb:	and    al,0x75
  40babd:	(bad)  [eax-0x2d]
  40bac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bac1:	cmp    BYTE PTR es:[esi+0x24301185],cl
  40bac8:	inc    DWORD PTR [ebx-0x2dce52a0]
  40bace:	daa    
  40bacf:	and    eax,0xd92700fe
  40bad4:	idiv   bh
  40bad6:	fucomp st(7)
  40bad8:	je     0x40bae6
  40bada:	bound  ebx,QWORD PTR [esp+eiz*4]
  40badd:	(bad)  
  40bade:	mov    ebp,0xa5dc84a1
  40bae3:	out    dx,eax
  40bae4:	dec    BYTE PTR [ebp-0x917b9]
  40baea:	lea    edi,[eax]
  40baec:	addr16 inc edx
  40baee:	push   ecx
  40baef:	dec    edx
  40baf0:	(bad)  
  40baf1:	(bad)  
  40baf2:	daa    
  40baf3:	fdiv   st,st(6)
  40baf5:	(bad)  
  40baf6:	fucomp st(7)
  40baf8:	xor    al,0x56
  40bafa:	arpl   WORD PTR [edx-0x1],cx
  40bafd:	out    0x0,eax
	...
  40bb2f:	add    BYTE PTR [edx-0x6e00015b],ch
  40bb35:	enter  0x1973,0x9
  40bb39:	lods   eax,DWORD PTR ds:[esi]
  40bb3a:	fcomip st,st(7)
  40bb3c:	int    0xef
  40bb3e:	add    esi,DWORD PTR [ebp+0x6a]
  40bb41:	out    dx,eax
  40bb42:	das    
  40bb43:	(bad)  
  40bb44:	test   edi,0x38ddfff6
  40bb4a:	out    0xdd,eax
  40bb4c:	stos   DWORD PTR es:[edi],eax
  40bb4d:	out    dx,eax
  40bb4e:	(bad)  
  40bb4f:	jmp    0x40bb87
  40bb51:	and    edi,DWORD PTR [edi-0x18c7cb8c]
  40bb57:	shr    ebx,1
  40bb59:	out    dx,al
  40bb5a:	inc    bh
  40bb5c:	(bad)  
  40bb5d:	shl    dh,1
  40bb5f:	call   FWORD PTR [ebp+0x3afffff5]
  40bb65:	popf   
  40bb66:	test   al,dl
  40bb68:	push   ebp
  40bb69:	out    dx,eax
  40bb6a:	(bad)  
  40bb6b:	push   eax
  40bb6c:	and    bl,BYTE PTR [ebp+0x3a]
  40bb6f:	inc    ecx
  40bb70:	cli    
  40bb71:	out    dx,al
  40bb72:	mov    ah,0xf0
  40bb74:	gs out dx,eax
  40bb76:	(bad)  
  40bb77:	call   edi
  40bb79:	sbb    esp,edi
  40bb7b:	lds    esp,FWORD PTR [ebx-0x2e]
  40bb7e:	sub    edi,edi
  40bb80:	fisubr DWORD PTR [eax+0xae4f74e]
  40bb86:	xchg   BYTE PTR [ebp-0xd6e539],bh
  40bb8c:	arpl   WORD PTR [ebx],bp
  40bb8e:	jg     0x40bb2b
  40bb90:	arpl   WORD PTR [esi],bp
  40bb92:	add    eax,DWORD PTR [ebx+0x0]
	...
  40bbc4:	add    BYTE PTR [eax],al
  40bbc6:	push   es
  40bbc7:	cmp    dh,BYTE PTR [ecx]
  40bbc9:	(bad)  
  40bbca:	mov    esp,0xe583f82d
  40bbcf:	sub    eax,0x90e00003
  40bbd4:	sbb    al,0xf7
  40bbd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbd7:	dec    edx
  40bbd8:	add    al,0xf
  40bbda:	out    0xac,eax
  40bbdc:	add    eax,DWORD PTR [eax]
  40bbde:	arpl   si,ax
  40bbe0:	adc    eax,DWORD PTR [eax]
  40bbe2:	jl     0x40bb97
  40bbe4:	sub    BYTE PTR [ebp+0x5b],dh
  40bbe7:	jbe    0x40bc11
  40bbe9:	popf   
  40bbea:	jl     0x40bb6e
  40bbec:	sub    DWORD PTR [ebp-0xd67d79],esi
  40bbf2:	ins    BYTE PTR es:[edi],dx
  40bbf3:	clc    
  40bbf4:	sti    
  40bbf5:	out    0x13,eax
  40bbf7:	lods   al,BYTE PTR ds:[esi]
  40bbf8:	sub    bh,bh
  40bbfa:	pop    esp
  40bbfb:	ficomp DWORD PTR [ebx]
  40bbfd:	not    DWORD PTR [esp+ebx*4+0x28]
  40bc01:	jne    0x40bc5e
  40bc03:	test   dh,al
  40bc05:	popf   
  40bc06:	inc    esp
  40bc07:	lods   al,BYTE PTR ds:[esi]
  40bc08:	sub    BYTE PTR [ebp-0xd743b9],dh
  40bc0e:	xor    al,0x42
  40bc10:	sti    
  40bc11:	out    0x77,eax
  40bc13:	mov    dl,0x28
  40bc15:	jmp    DWORD PTR [edx+eiz*4]
  40bc18:	dec    ebx
  40bc19:	neg    DWORD PTR [esp+eiz*8]
  40bc1c:	sub    BYTE PTR [ebp+0x6b],dh
  40bc1f:	les    edi,FWORD PTR [edi]
  40bc21:	popf   
  40bc22:	or     al,0xf4
  40bc24:	sub    BYTE PTR [ebp+0x291e0627],dh
	...
  40bc5a:	add    BYTE PTR [eax],al
  40bc5c:	cld    
  40bc5d:	and    dl,BYTE PTR [ebx+edi*8+0x2976fdfc]
  40bc64:	in     al,dx
  40bc65:	xchg   BYTE PTR [eax+edx*2-0x14],cl
  40bc69:	and    al,BYTE PTR [esi]
  40bc6b:	add    al,0x57
  40bc6d:	(bad)  
  40bc6e:	imul   esp,DWORD PTR [edi-0x4d],0x6728f61a
  40bc75:	cwde   
  40bc76:	fidivr DWORD PTR [esi+ebx*8+0x39]
  40bc7a:	fisubr WORD PTR [eax]
  40bc7c:	mov    esp,0x2e291922
  40bc81:	or     eax,0x22ce8fc1
  40bc86:	into   
  40bc87:	sbb    al,0x59
  40bc89:	scas   eax,DWORD PTR es:[edi]
  40bc8a:	call   0xd14dd2b7
  40bc8f:	jnp    0x40bc87
  40bc91:	and    dh,BYTE PTR [esi-0x49d629d8]
  40bc97:	sub    BYTE PTR [ebp+ebp*1+0x227c639d],al
  40bc9e:	sahf   
  40bc9f:	outs   dx,BYTE PTR ds:[esi]
  40bca0:	xchg   DWORD PTR [edx],ebx
  40bca2:	xchg   esi,eax
  40bca3:	sub    BYTE PTR [ebx+0x2c],bh
  40bca6:	dec    ecx
  40bca7:	sub    BYTE PTR [edx+eiz*1+0x3c],ah
  40bcab:	sbb    edx,DWORD PTR [edx+eiz*1+0x7e]
  40bcaf:	sbb    esi,DWORD PTR ds:0x4c287665
  40bcb5:	pop    eax
  40bcb6:	lea    esi,[eax]
  40bcb8:	inc    esp
  40bcb9:	and    dl,BYTE PTR [ecx+0x54]
  40bcbc:	add    esp,DWORD PTR [edx]
  40bcbe:	pop    esi
  40bcbf:	sub    BYTE PTR [eax],al
	...
  40bcf1:	add    dh,ch
  40bcf3:	cmp    BYTE PTR [esi+0x28],bl
  40bcf6:	sub    al,0x2d
  40bcf8:	and    DWORD PTR [ebx+0x24],esp
  40bcfb:	and    al,BYTE PTR [esi+0x6e]
  40bcfe:	adc    ebx,DWORD PTR [edx]
  40bd00:	sub    BYTE PTR ds:[eax+ebx*4],dl
  40bd04:	jmp    esp
  40bd06:	cmp    ebx,DWORD PTR [eax+0x20794107]
  40bd0c:	jmp    DWORD PTR [esi]
  40bd0e:	dec    ebx
  40bd0f:	pop    eax
  40bd10:	lock push ss
  40bd12:	dec    ebx
  40bd13:	and    ch,al
  40bd15:	inc    ebp
  40bd16:	and    BYTE PTR [edx],0xff
  40bd19:	push   cs
  40bd1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd1b:	sbb    ecx,ebp
  40bd1d:	xor    al,0x85
  40bd1f:	and    bh,bh
  40bd21:	inc    BYTE PTR [esi]
  40bd23:	push   ds
  40bd24:	call   0xff62d528
  40bd29:	and    BYTE PTR [esi],bl
  40bd2b:	adc    DWORD PTR [eax],eax
  40bd2d:	cmp    al,0x38
  40bd2f:	xor    DWORD PTR [ebx-0x50745b],eax
  40bd35:	inc    edx
  40bd36:	pop    ebx
  40bd37:	and    dh,BYTE PTR [ebp-0x1f]
  40bd3a:	dec    eax
  40bd3b:	arpl   WORD PTR [ebp+0x458c44c6],bx
  40bd41:	mov    ebp,0x283ab9f7
  40bd46:	and    dh,BYTE PTR [di]
  40bd49:	pop    ss
  40bd4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd4b:	(bad)  
  40bd4c:	jmp    DWORD PTR [ebp+0x1be809b2]
  40bd52:	dec    edx
  40bd53:	and    bh,bh
  40bd55:	add    DWORD PTR [eax],eax
	...
  40bd87:	add    BYTE PTR [edi-0x3716bf22],bl
  40bd8d:	add    eax,DWORD PTR [eax]
  40bd8f:	jmp    0xf1b5de74
  40bd94:	js     0x40bd3b
  40bd96:	cld    
  40bd97:	jbe    0x40bd1d
  40bd99:	and    BYTE PTR [ebp+0x6d],dh
  40bd9c:	jl     0x40bd38
  40bd9e:	pop    es
  40bd9f:	push   ecx
  40bda0:	xchg   esi,eax
  40bda1:	cmp    bh,0x5e
  40bda4:	jbe    0x40bde9
  40bda6:	add    al,0xe9
  40bda8:	adc    ecx,DWORD PTR [esp+ebp*8-0x1e65c98]
  40bdaf:	add    BYTE PTR [ebp+0x300069e8],ah
  40bdb5:	push   cs
  40bdb6:	push   DWORD PTR [ebp+0x2]
  40bdb9:	std    
  40bdba:	jno    0x40bd59
  40bdbc:	xor    eax,0x464588e8
  40bdc1:	add    DWORD PTR [ebx],0x8d050a01
  40bdc7:	test   DWORD PTR [ebp-0x19],ecx
  40bdca:	(bad)  
  40bdcb:	jmp    FWORD PTR [edx-0x358e2e04]
  40bdd1:	add    al,0xb
  40bdd3:	ror    BYTE PTR [esi+0x38],0x3c
  40bdd7:	add    al,0xbb
  40bdd9:	add    al,0x0
  40bddb:	ja     0x40bd7c
  40bddd:	jl     0x40be4e
  40bddf:	cmp    ecx,DWORD PTR [ebx-0x727a72f7]
  40bde5:	jmp    0xa3a9:0x16afffe
	...
  40be1c:	add    BYTE PTR [eax],al
  40be1e:	xchg   ebp,eax
  40be1f:	out    0x4f,eax
  40be21:	push   0xbeef048a
  40be26:	jp     0x40be10
  40be28:	je     0x40be32
  40be2a:	mov    ds:0xb5ffc0e5,al
  40be2f:	cld    
  40be30:	cmc    
  40be31:	lahf   
  40be32:	(bad)
  40be35:	jne    0x40be0d
  40be37:	out    0x74,eax
  40be39:	or     dl,ah
  40be3b:	sbb    DWORD PTR [edi+edi*8+0x4c1e1d5],0xec8a354a
  40be46:	leave  
  40be47:	loopne 0x40be44
  40be49:	push   0x3a
  40be4b:	jle    0x40be6a
  40be4d:	dec    DWORD PTR [edi+0x1c]
  40be50:	out    0xd,eax
  40be52:	out    0xe6,eax
  40be54:	dec    BYTE PTR [ecx+0x67e7ff]
  40be5a:	arpl   WORD PTR [esi],bp
  40be5c:	push   ss
  40be5d:	mov    esi,0x40ea50bb
  40be62:	arpl   WORD PTR [esi],si
  40be64:	jns    0x40bea1
  40be66:	mov    ds:0x5b75262e,al
  40be6b:	(bad)  
  40be6c:	dec    edi
  40be6d:	les    eax,FWORD PTR [edi+ebp*8]
  40be70:	and    eax,0xafe6ff75
  40be75:	pop    es
  40be76:	or     edx,DWORD PTR [eax-0x78]
  40be79:	(bad)  
  40be7a:	in     al,dx
  40be7b:	in     al,0x40
  40be7d:	add    al,0x63
  40be7f:	pop    ecx
  40be80:	jp     0x40be6e
	...
  40beb2:	add    BYTE PTR [eax],al
  40beb4:	loop   0x40bea7
  40beb6:	dec    esi
  40beb7:	not    esp
  40beb9:	push   ds
  40beba:	ja     0x40bf01
  40bebc:	iret   
  40bebd:	jge    0x40bee5
  40bebf:	jne    0x40bf34
  40bec1:	das    
  40bec2:	scas   eax,DWORD PTR es:[edi]
  40bec3:	or     ecx,ebx
  40bec5:	inc    ecx
  40bec6:	mov    bl,0xff
  40bec8:	mov    ah,0x12
  40beca:	inc    ebx
  40becb:	(bad)  
  40becd:	inc    ecx
  40bece:	add    eax,DWORD PTR [eax]
  40bed0:	arpl   WORD PTR [edi-0x41],sp
  40bed3:	mul    DWORD PTR [ebx+0x2e]
  40bed6:	add    eax,DWORD PTR [eax]
  40bed8:	pushf  
  40bed9:	call   0x2ea5be0d
  40bede:	add    ebp,DWORD PTR [edx+0x63]
  40bee1:	les    eax,FWORD PTR [ebx]
  40bee3:	push   0x63
  40bee5:	hlt    
  40bee6:	add    ecx,DWORD PTR [ebp-0x732b85e2]
  40beec:	out    0x81,al
  40beee:	sub    eax,0x24dd64ff
  40bef3:	jne    0x40bf50
  40bef5:	mov    BYTE PTR [edi-0x4c98b405],ch
  40befb:	dec    DWORD PTR [esp+0x43]
  40beff:	je     0x40bf5f
  40bf01:	test   DWORD PTR [ebp+0x1],ebp
  40bf04:	arpl   WORD PTR ds:0xee1d9be9,ax
  40bf0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf0b:	add    ebp,DWORD PTR [ecx+ebx*4]
  40bf0e:	clc    
  40bf0f:	sbb    edi,DWORD PTR [edx]
  40bf11:	fs dec esi
  40bf13:	and    eax,0x77198ab3
	...
  40bf48:	add    BYTE PTR [eax],al
  40bf4a:	ficomp WORD PTR [ecx]
  40bf4c:	ss and eax,0x1b9ab60c
  40bf52:	sub    ah,BYTE PTR [esi+ebp*1+0x25]
  40bf56:	jmp    0x111e:0xf42d1988
  40bf5d:	aad    0xcd
  40bf5f:	push   ds
  40bf60:	push   ss
  40bf61:	ja     0x40bf41
  40bf63:	and    eax,0xb5dc2516
  40bf68:	nop
  40bf69:	(bad)  
  40bf6a:	cwde   
  40bf6b:	(bad)  
  40bf6c:	call   0xfe56d595
  40bf71:	and    al,0xc4
  40bf73:	push   ds
  40bf74:	je     0x40bf6d
  40bf76:	(bad)  
  40bf77:	lock mov ah,BYTE PTR [esp+esi*4]
  40bf7b:	mov    WORD PTR [edi+ebx*1-0x4c],fs
  40bf7f:	push   ds
  40bf80:	(bad)  
  40bf81:	cdq    
  40bf82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf84:	imul   ebp,eax,0x23
  40bf87:	add    eax,0x16936ec6
  40bf8c:	mov    esi,0xe4988c24
  40bf91:	sbb    esi,DWORD PTR [ecx+0x63]
  40bf94:	scas   al,BYTE PTR es:[edi]
  40bf95:	and    al,0xea
  40bf97:	mov    BYTE PTR [ebp+0x131e742c],dl
  40bf9d:	add    al,0xfb
  40bf9f:	arpl   dx,dx
  40bfa1:	ret    0x1f64
  40bfa4:	push   esp
  40bfa5:	xor    edx,DWORD PTR [esi+ebx*1-0x7a]
  40bfa9:	and    al,0xce
  40bfab:	adc    DWORD PTR [ecx+0x2c],edx
	...
  40bfdd:	add    BYTE PTR [eax],al
  40bfdf:	add    BYTE PTR [edx],al
  40bfe1:	push   ds
  40bfe2:	add    BYTE PTR [esi-0x37],dh
  40bfe5:	mov    al,ch
  40bfe7:	jbe    0x40bf70
  40bfe9:	push   ds
  40bfea:	push   0xffffffe9
  40bfec:	fsubr  DWORD PTR [ebx+0x3b]
  40bfef:	test   al,0x60
  40bff1:	push   ds
  40bff2:	mov    ch,0x59
  40bff4:	ja     0x40c014
  40bff6:	dec    DWORD PTR [esi-0x33]
  40bff9:	or     eax,ebp
  40bffb:	and    eax,0x70ff1e81
  40c000:	lea    eax,[ecx-0x9]
  40c003:	ss aas 
  40c005:	stos   DWORD PTR es:[edi],eax
  40c006:	inc    eax
  40c008:	mov    dl,bl
  40c00a:	inc    eax
  40c00b:	jmp    0x1731184f
  40c010:	inc    edi
  40c011:	push   ds
  40c012:	call   FWORD PTR [esp+ebp*8-0x78b73edb]
  40c019:	push   ds
  40c01a:	mov    DWORD PTR [eax+ebp*1+0x16],ebp
  40c01e:	(bad)  
  40c01f:	(bad)  
  40c020:	jmp    0x40c03f
  40c022:	addr16 std 
  40c024:	mov    esp,0x4eedffc4
  40c029:	adc    eax,0x1e80e6f7
  40c02e:	jne    0x40c01d
  40c030:	js     0x40c099
  40c032:	mov    eax,ds:0x858c80d6
  40c037:	mov    ch,0x78
  40c039:	push   ds
  40c03a:	jmp    FWORD PTR [edx+0x2]
  40c03d:	sub    edi,esi
  40c03f:	mov    esi,0x30740540
	...
  40c074:	add    BYTE PTR [eax],al
  40c076:	fcomp  QWORD PTR [edi-0x14]
  40c079:	mov    dh,0x40
  40c07b:	push   ds
  40c07c:	add    BYTE PTR ds:0x91bd82cf,bl
  40c082:	dec    eax
  40c083:	push   ds
  40c084:	(bad)  
  40c085:	jmp    0xf9a86756
  40c08a:	pusha  
  40c08b:	sub    al,0xbe
  40c08d:	add    ch,bl
  40c08f:	jle    0x40c098
  40c091:	call   0x3f5c89
  40c096:	int    0xbe
  40c098:	jmp    0x40c091
  40c09a:	int    0xe8
  40c09c:	(bad)  
  40c09d:	jne    0x40c0d1
  40c09f:	icebp  
  40c0a0:	cmp    al,0x9b
  40c0a2:	(bad)  
  40c0a3:	call   0xe376a6
  40c0a8:	(bad)  
  40c0a9:	jmp    FWORD PTR [ebp+0x6de8077e]
  40c0af:	pushf  
  40c0b0:	(bad)  
  40c0b1:	dec    DWORD PTR [ebp-0x42]
  40c0b4:	fcomip st,st(7)
  40c0b6:	dec    ebp
  40c0b7:	call   0xe776ba
  40c0bc:	(bad)  
  40c0bd:	(bad)  
  40c0be:	cmp    eax,0x5de8077e
  40c0c3:	fwait
  40c0c4:	(bad)  
  40c0c5:	dec    DWORD PTR [ebp-0x42]
  40c0c8:	xlat   BYTE PTR ds:[ebx]
  40c0c9:	imul   DWORD PTR [ebp-0x18]
  40c0cc:	(bad)  
  40c0cd:	jne    0x40c0a1
  40c0cf:	lock or al,0x9b
  40c0d2:	int    0xe7
  40c0d4:	(bad)  
  40c0d5:	mov    ch,0x6e
  40c0d7:	add    bh,bh
  40c0d9:	inc    DWORD PTR [eax]
	...
  40c10b:	add    ch,cl
  40c10d:	jge    0x40c116
  40c10f:	call   0x3f5bd1
  40c114:	lea    edi,[ebp-0x1872082d]
  40c11a:	(bad)  
  40c11b:	jne    0x40c09f
  40c11d:	lock lock call 0xffa6:0xb5fee79d
  40c126:	(bad)  
  40c127:	jmp    DWORD PTR [edx-0x32006305]
  40c12d:	out    0xb4,eax
  40c12f:	in     al,dx
  40c130:	aad    0xe7
  40c132:	(bad)  
  40c133:	call   0x404702
  40c138:	arpl   WORD PTR [ebx+0x58],si
  40c13b:	call   0xe8634c94
  40c140:	mov    eax,ds:0xd14cff21
  40c146:	test   DWORD PTR ds:[ebx+edx*4+0x2a],0x21aadeda
  40c14f:	(bad)  
  40c150:	out    dx,al
  40c151:	lds    ebx,FWORD PTR [ecx]
  40c153:	jmp    FWORD PTR [esi+esi*4]
  40c156:	push   ecx
  40c157:	popf   
  40c158:	and    al,0xb3
  40c15a:	and    DWORD PTR [ebp-0xde4cc9],esi
  40c160:	or     ebp,edx
  40c162:	jg     0x40c163
  40c164:	or     al,0xdb
  40c166:	push   edi
  40c167:	lock or al,0xd3
  40c16a:	and    edi,edi
  40c16c:	jbe    0x40c1a8
  40c16e:	and    dh,BYTE PTR [ebp+0x0]
	...
  40c1a1:	add    BYTE PTR [ebx-0xa],ch
  40c1a4:	or     esi,edi
  40c1a6:	in     al,dx
  40c1a7:	cli    
  40c1a8:	and    DWORD PTR [ebp-0xde050d],esi
  40c1ae:	retf   
  40c1af:	lds    edi,FWORD PTR [edi-0x1]
  40c1b2:	aam    0x2
  40c1b4:	enter  0xbaf7,0x26
  40c1b8:	and    edi,edi
  40c1ba:	les    edx,FWORD PTR [edx]
  40c1bc:	xchg   edi,eax
  40c1bd:	sti    
  40c1be:	retf   
  40c1bf:	pop    ds
  40c1c0:	mov    cl,0xff
  40c1c2:	mov    ah,0x54
  40c1c4:	inc    esi
  40c1c5:	or     al,0x63
  40c1c7:	ror    DWORD PTR [esp+ebp*8+0x6a2069e0],1
  40c1ce:	arpl   ax,cx
  40c1d0:	add    bh,bh
  40c1d2:	push   cs
  40c1d3:	push   ss
  40c1d4:	sub    edi,DWORD PTR [edx-0x76dea517]
  40c1da:	push   ds
  40c1db:	push   edx
  40c1dc:	lods   al,BYTE PTR ds:[esi]
  40c1dd:	mov    esp,0xff03ed38
  40c1e2:	cs add eax,0x523eb3f
  40c1e8:	sahf   
  40c1e9:	xchg   edi,eax
  40c1ea:	pop    esp
  40c1eb:	sub    eax,0x1b5c1fa9
  40c1f0:	add    DWORD PTR [edi-0x68],ebx
  40c1f3:	(bad)  
  40c1f4:	call   0xe94624a4
  40c1f9:	add    DWORD PTR [ecx+edx*4-0x20],0x2b
  40c1fe:	or     eax,0x34216e19
  40c203:	xchg   ecx,eax
  40c204:	and    DWORD PTR fs:[eax],eax
	...
  40c237:	add    BYTE PTR [esi-0x36b0aef3],dh
  40c23d:	sbb    dl,BYTE PTR [esi+0x4b]
  40c240:	and    DWORD PTR [edx],eax
  40c242:	jmp    0x6a6aabfd
  40c247:	dec    eax
  40c248:	lfs    edx,FWORD PTR [ebp+0x8ad04ad]
  40c24f:	and    DWORD PTR [esi+0xd],esi
  40c252:	inc    ecx
  40c253:	mov    cl,0xda
  40c255:	sbb    ah,BYTE PTR [esi]
  40c257:	mov    esp,DWORD PTR [esi+0x75d77219]
  40c25d:	in     eax,dx
  40c25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c25f:	add    ebp,eax
  40c261:	fcomp  DWORD PTR [ecx+0x690523eb]
  40c267:	loope  0x40c235
  40c269:	xchg   esi,eax
  40c26a:	xchg   DWORD PTR [ebx+0x3a7d959],ebp
  40c270:	adc    eax,0xb4b1352d
  40c275:	sbb    bh,BYTE PTR [ecx]
  40c277:	lods   al,BYTE PTR ds:[esi]
  40c278:	lods   eax,DWORD PTR ds:[esi]
  40c279:	fisub  WORD PTR [edi]
  40c27b:	add    al,0xc
  40c27d:	sub    eax,0x1a9cb081
  40c282:	xor    ecx,DWORD PTR ds:0xcec90a3
  40c288:	mov    cl,0x91
  40c28a:	adc    bh,BYTE PTR [edx-0x70ffbc84]
  40c290:	inc    ebx
  40c291:	sbb    ch,BYTE PTR [eax-0x2a]
  40c294:	xchg   esp,eax
  40c295:	(bad)  
  40c298:	aas    
  40c299:	and    BYTE PTR [eax+0x9e],ah
	...
  40c2cb:	add    BYTE PTR [eax],al
  40c2cd:	add    BYTE PTR [ebx-0x4b],al
  40c2d0:	addr16 jmp 0x1feed36
  40c2d6:	dec    ebp
  40c2d7:	fiadd  WORD PTR [eax-0x17]
  40c2da:	adc    BYTE PTR [ebx],bl
  40c2dc:	jne    0x40c2cf
  40c2de:	js     0x40c348
  40c2e0:	shl    DWORD PTR [esi-0x7d],0x2d
  40c2e4:	(bad)  [ebp-0x7d]
  40c2e7:	sbb    ch,bl
  40c2e9:	call   0xe97e5d08
  40c2ee:	int    0x1b
  40c2f0:	inc    esi
  40c2f1:	push   ebp
  40c2f2:	aaa    
  40c2f3:	pop    edx
  40c2f4:	mov    ecx,0xff1a434e
  40c2f9:	cmp    edx,DWORD PTR [edx-0x1c4bf923]
  40c2ff:	sbb    DWORD PTR [ebp+0x35],esi
  40c302:	inc    ebx
  40c303:	nop
  40c304:	pop    es
  40c305:	inc    ecx
  40c306:	or     eax,0x2326ff7c
  40c30b:	mov    eax,0x55c2bc8
  40c310:	push   ebp
  40c311:	bound  ecx,QWORD PTR [esi+eax*4-0x6f7cf23c]
  40c318:	or     eax,DWORD PTR [esi]
  40c31a:	cmc    
  40c31b:	add    eax,ebp
  40c31d:	lds    ecx,FWORD PTR [ebx+0x1a]
  40c320:	jmp    DWORD PTR [eax-0x5b]
  40c323:	sbb    eax,0x1a5474ff
  40c328:	jne    0x40c31b
  40c32a:	js     0x40c39d
  40c32c:	xchg   esp,eax
  40c32d:	fiadd  WORD PTR [esi+ecx*4+0x4d]
  40c331:	in     eax,0x0
	...
  40c363:	add    BYTE PTR [ecx+0x45],ch
  40c366:	je     0x40c393
  40c368:	loopne 0x40c345
  40c36a:	(bad)  
  40c36b:	dec    DWORD PTR [esi+0x24]
  40c36e:	(bad)  
  40c36f:	jne    0x40c337
  40c371:	call   0xf9f6600a
  40c376:	dec    edi
  40c377:	jmp    FWORD PTR [edi]
  40c379:	cmc    
  40c37a:	(bad)  
  40c37b:	jne    0x40c343
  40c37d:	push   eax
  40c37e:	(bad)  
  40c37f:	jne    0x40c3f3
  40c381:	in     eax,dx
  40c382:	retf   
  40c383:	xchg   esi,eax
  40c384:	cmc    
  40c385:	clc    
  40c386:	pop    ecx
  40c387:	mov    esi,DWORD PTR [edi-0xb]
  40c38a:	cmp    BYTE PTR [ecx],0x3a
  40c38d:	jle    0x40c398
  40c38f:	push   edx
  40c390:	repnz pop eax
  40c392:	fwait
  40c393:	push   DWORD PTR [ebp+0xeebbf2c]
  40c399:	test   BYTE PTR [ebp+0x10],bh
  40c39c:	cmp    dh,BYTE PTR [ecx+0x7]
  40c39f:	mov    edi,edi
  40c3a1:	adc    al,0xfe
  40c3a3:	jne    0x40c35b
  40c3a5:	mov    BYTE PTR [eax],al
  40c3a7:	mov    ecx,DWORD PTR [eax-0x14]
  40c3aa:	add    DWORD PTR [ebx],ebp
  40c3ac:	cmp    cl,dl
  40c3ae:	ror    DWORD PTR [edx+edi*8],0x5d
  40c3b2:	mov    ch,ah
  40c3b4:	xor    eax,0xafff0b7e
  40c3b9:	or     al,0xe8
  40c3bb:	mov    ecx,0xfffef86c
  40c3c0:	iret   
  40c3c1:	or     BYTE PTR [eax-0x1],dl
  40c3c4:	dec    DWORD PTR [eax+ebp*8]
  40c3c7:	xor    DWORD PTR [eax],eax
	...
  40c3f9:	add    BYTE PTR [ebp-0x8],cl
  40c3fc:	dec    cl
  40c3fe:	js     0x40c409
  40c400:	add    BYTE PTR [ebp+0x51],dl
  40c403:	aad    0x82
  40c405:	les    ecx,FWORD PTR [edx+0x4953564f]
  40c40b:	popw   es
  40c40d:	add    BYTE PTR [esi],cl
  40c40f:	adc    eax,DWORD PTR [edx+0x7404b67d]
  40c415:	or     al,0x63
  40c417:	stos   DWORD PTR es:[edi],eax
  40c418:	lahf   
  40c419:	packsswb mm6,QWORD PTR [edx+0x3a0e8305]
  40c420:	add    esi,DWORD PTR [ebp+0x5a]
  40c423:	repz inc ebx
  40c425:	pop    ebx
  40c426:	sbb    al,0xf0
  40c428:	dec    esp
  40c429:	ret    0x2e53
  40c42c:	mov    al,BYTE PTR [ebp+0x5f]
  40c42f:	stos   DWORD PTR es:[edi],eax
  40c430:	and    al,BYTE PTR [edi]
  40c432:	loopne 0x40c42d
  40c434:	lldt   di
  40c437:	sub    cl,BYTE PTR [edx]
  40c439:	ror    bh,0x25
  40c43c:	jmp    0x21c8:0xbddfa8bf
  40c443:	add    ecx,DWORD PTR ds:[ebx-0x1f7dc55a]
  40c44a:	pop    esp
  40c44b:	stos   DWORD PTR es:[edi],eax
  40c44c:	lahf   
  40c44d:	adc    esp,DWORD PTR [ebx+0x3a]
  40c450:	pop    es
  40c451:	or     esp,DWORD PTR [ebx]
  40c453:	xor    cl,BYTE PTR [ebx+ebp*1]
  40c456:	and    edx,DWORD PTR [ebx-0x42]
  40c459:	pop    ebp
  40c45a:	sub    ch,ah
  40c45c:	repnz inc DWORD PTR [eax]
	...
  40c48f:	add    BYTE PTR [ecx],bh
  40c491:	jecxz  0x40c4b0
  40c493:	jne    0x40c4ec
  40c495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c496:	(bad)  
  40c497:	mov    edi,0xb4368e0
  40c49c:	hlt    
  40c49d:	push   eax
  40c49e:	inc    ebx
  40c49f:	call   0xff5f47c3
  40c4a4:	out    0x94,eax
  40c4a6:	mov    ebx,0xbe4770e8
  40c4ac:	or     BYTE PTR [edx-0x3c],0xff
  40c4b0:	or     edx,DWORD PTR [ebx]
  40c4b2:	add    eax,DWORD PTR [eax]
  40c4b4:	arpl   WORD PTR [ebx],bx
  40c4b6:	mov    si,WORD PTR [esi]
  40c4b9:	mov    cl,BYTE PTR es:[ebp+0x67]
  40c4bd:	sbb    esp,DWORD PTR [esi-0x73]
  40c4c0:	es add eax,0x91a5b4d9
  40c4c6:	test   al,0x1d
  40c4c8:	push   ss
  40c4c9:	inc    ecx
  40c4ca:	rol    DWORD PTR [esi+edi*4+0x17],0xce
  40c4cf:	sbb    eax,0x81d14116
  40c4d4:	call   0xf65e82f0
  40c4d9:	or     BYTE PTR [esi-0x39],ah
  40c4dc:	mov    ah,0x83
  40c4de:	and    al,0x44
  40c4e0:	dec    eax
  40c4e1:	sbb    BYTE PTR [esp+eax*2],bl
  40c4e4:	jnp    0x40c472
  40c4e6:	sbb    BYTE PTR ds:0x482c8d5c,0x57
  40c4ed:	lea    esp,[eax+ecx*2]
  40c4f0:	ficom  WORD PTR [eax+0x8978]
	...
  40c526:	mov    BYTE PTR [ecx+0x40],0xf4
  40c52a:	cmp    al,0x17
  40c52c:	jmp    0xc898c441
  40c531:	fbld   TBYTE PTR [ebx+0x6309a005]
  40c537:	add    eax,0x8ac710e9
  40c53c:	fmul   QWORD PTR [ebx]
  40c53e:	call   0xc751a20b
  40c543:	mov    BYTE PTR [ebx+eiz*1+0x43b416b3],ch
  40c54a:	cld    
  40c54b:	nop
  40c54c:	sub    al,0x2c
  40c54e:	test   BYTE PTR [eax+0x2e],ah
  40c551:	sbb    eax,0x2c2c90ec
  40c556:	xor    DWORD PTR [edx+0x1e],edi
  40c559:	sbb    eax,0x139c88df
  40c55e:	out    0x98,al
  40c560:	and    BYTE PTR [ebx+0x73],bl
  40c563:	add    eax,0x61d003e9
  40c568:	ins    BYTE PTR es:[edi],dx
  40c569:	xchg   edi,eax
  40c56a:	pushf  
  40c56b:	pop    esp
  40c56c:	add    cl,ah
  40c56e:	pusha  
  40c56f:	add    eax,0xab44fa00
  40c574:	add    BYTE PTR [ebp+ebx*4+0x3e],dh
  40c578:	push   eax
  40c579:	ror    DWORD PTR [edx-0x77],1
  40c57c:	add    cl,ch
  40c57e:	jmp    0x40c510
  40c580:	punpckldq mm5,mm5
  40c583:	repnz rcl dh,0x63
  40c587:	or     bh,bh
  40c589:	xor    eax,0x0
	...
  40c5ba:	add    BYTE PTR [eax],al
  40c5bc:	(bad)  
  40c5bd:	sub    ecx,DWORD PTR [edi]
  40c5bf:	fs popf 
  40c5c1:	push   ds
  40c5c2:	push   eax
  40c5c3:	pop    ss
  40c5c4:	mov    ch,0x1e
  40c5c6:	jnp    0x40c63e
  40c5c8:	pusha  
  40c5c9:	add    eax,0xc668a783
  40c5ce:	or     dl,BYTE PTR [esi+0x570f28ed]
  40c5d4:	es pop ss
  40c5d6:	add    DWORD PTR [ecx-0x2dfe71a8],0x50
  40c5dd:	jmp    0xe96a:0x2771d974
  40c5e4:	cli    
  40c5e5:	adc    eax,0x15fae969
  40c5ea:	push   ebp
  40c5eb:	pop    esi
  40c5ec:	cmc    
  40c5ed:	add    eax,0x15cae96a
  40c5f2:	out    0xf,eax
  40c5f4:	rcl    DWORD PTR ds:0x91a0f2ff,cl
  40c5fa:	sub    BYTE PTR [ecx+0x53d41db0],bl
  40c600:	push   edi
  40c601:	push   ss
  40c602:	mov    edx,DWORD PTR [ecx]
  40c604:	test   eax,0x6092ffab
  40c609:	mov    ah,0x52
  40c60b:	mov    bh,0x7f
  40c60d:	nop
  40c60e:	jae    0x1407174
  40c614:	int    0xa9
  40c616:	(bad)  
  40c617:	(bad)  
  40c618:	mov    edx,0xb275c00c
  40c61d:	push   esp
  40c61e:	out    0x9d,eax
	...
  40c650:	add    BYTE PTR [eax],al
  40c652:	adc    cl,bh
  40c654:	(bad)  
  40c655:	sub    edx,DWORD PTR [ecx-0x73]
  40c658:	ret    
  40c659:	pop    ebx
  40c65a:	sbb    eax,0x9ac2c85b
  40c65f:	add    DWORD PTR [ebp-0x75],edx
  40c662:	sahf   
  40c663:	jge    0x40c629
  40c665:	lock push ebp
  40c667:	dec    esi
  40c668:	sub    bl,bl
  40c66a:	popf   
  40c66b:	jae    0x40c678
  40c66d:	push   DWORD PTR [edi]
  40c66f:	or     eax,ebp
  40c671:	add    DWORD PTR [edi],edx
  40c673:	cli    
  40c674:	(bad)  
  40c675:	push   eax
  40c676:	mov    ebp,0x4e80773
  40c67b:	xchg   ebx,eax
  40c67c:	(bad)  
  40c67d:	call   ecx
  40c67f:	icebp  
  40c680:	push   edi
  40c681:	add    esi,edx
  40c683:	add    al,0xc0
  40c685:	je     0x40c60c
  40c687:	jle    0x40c6ce
  40c689:	hlt    
  40c68a:	push   0xfffffff0
  40c68c:	je     0x40c69a
  40c68e:	mov    ebp,0xa1e80776
  40c693:	out    dx,al
  40c694:	(bad)  
  40c695:	inc    ebx
  40c697:	inc    esi
  40c698:	sti    
  40c699:	(bad)  
  40c69a:	idiv   eax
  40c69c:	dec    edi
  40c69d:	push   DWORD PTR [edi]
  40c69f:	or     eax,0xe10275ff
  40c6a4:	cwde   
  40c6a5:	std    
  40c6a6:	popf   
  40c6a7:	lock mov BYTE PTR [ebp-0x5e],al
  40c6ab:	lock je 0x40c69e
  40c6ae:	cmp    eax,0xb7fff776
  40c6b3:	add    al,0xff
  40c6b5:	jne    0x40c6b7
	...
  40c6e7:	add    BYTE PTR [esi],bh
  40c6e9:	loope  0x40c6fb
  40c6eb:	(bad)  
  40c6ec:	cmp    eax,0x7dd88af0
  40c6f1:	jbe    0x40c6ee
  40c6f3:	call   0xffbe115b
  40c6f8:	int3   
  40c6f9:	add    edx,DWORD PTR [ecx+0x7d42bbf7]
  40c6ff:	(bad)  
  40c700:	mov    esp,0xb4570378
  40c705:	xchg   ecx,eax
  40c706:	or     ch,al
  40c708:	sti    
  40c709:	lods   eax,DWORD PTR ds:[esi]
  40c70a:	sbb    bh,bh
  40c70c:	fcomp  DWORD PTR [edi-0x42]
  40c70f:	pop    esi
  40c710:	stos   BYTE PTR es:[edi],al
  40c711:	pusha  
  40c712:	or     eax,DWORD PTR [eax]
  40c714:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40c716:	or     DWORD PTR es:[esi],0x32
  40c71a:	add    DWORD PTR [edx+0x42],esi
  40c71d:	dec    ebx
  40c71e:	nop
  40c71f:	(bad)  
  40c721:	(bad)  [ebx]
  40c723:	call   0xff5a7a0a
  40c728:	ins    BYTE PTR es:[edi],dx
  40c729:	fpatan 
  40c72b:	(bad)  
  40c72c:	out    dx,al
  40c72d:	adc    eax,0x735eaf2b
  40c732:	sbb    bh,bh
  40c734:	into   
  40c735:	push   cs
  40c736:	sbb    dh,BYTE PTR [ebp+0x5b]
  40c739:	xchg   BYTE PTR [edi-0x3],bl
  40c73c:	inc    esp
  40c73d:	mov    ebx,DWORD PTR [edx]
  40c73f:	jne    0x40c794
  40c741:	xchg   ebx,eax
  40c742:	pop    DWORD PTR [edi]
  40c744:	dec    ebx
  40c745:	call   0xa76dc664
  40c74a:	scas   eax,DWORD PTR es:[edi]
  40c74b:	adc    eax,DWORD PTR [eax]
	...
  40c77d:	add    dl,bl
  40c77f:	pop    ds
  40c780:	sbb    dh,BYTE PTR [ebp+0x73]
  40c783:	mov    bl,0x8f
  40c785:	pop    es
  40c786:	or     esp,DWORD PTR [ebp-0x60f300e9]
  40c78c:	xchg   edi,eax
  40c78d:	or     esp,DWORD PTR [eax+0x54]
  40c790:	icebp  
  40c791:	(bad)  
  40c792:	jbe    0x40c7c2
  40c794:	sbb    dh,BYTE PTR [ebp+0x6b]
  40c797:	(bad)  
  40c798:	call   0x5375:0x19e2ecfc
  40c79f:	add    eax,0x1d649026
  40c7a4:	mov    WORD PTR [eax],ds
  40c7a6:	aam    0x13
  40c7a8:	push   ss
  40c7a9:	nop
  40c7aa:	pop    esp
  40c7ab:	lahf   
  40c7ac:	lock sbb cl,BYTE PTR [esi-0x3]
  40c7b0:	adc    BYTE PTR [esi-0x29],ch
  40c7b3:	adc    edi,esi
  40c7b5:	sbb    DWORD PTR [esi],ebp
  40c7b7:	cmc    
  40c7b8:	cmc    
  40c7b9:	(bad)  
  40c7ba:	fs sbb eax,0x13a46fcd
  40c7c0:	mov    al,0x46
  40c7c2:	jae    0x40c7c9
  40c7c4:	xor    al,0x8d
  40c7c6:	xchg   DWORD PTR [ebx],edx
  40c7c8:	pop    esp
  40c7c9:	or     cl,bh
  40c7cb:	add    eax,0x1d5c8fce
  40c7d0:	jne    0x40c842
  40c7d2:	jl     0x40c7e7
  40c7d4:	mov    esi,0x3c14688f
  40c7d9:	or     al,0x7b
  40c7db:	sub    ebp,DWORD PTR [edi+0x3c7f6419]
  40c7e1:	hlt    
	...
  40c812:	add    BYTE PTR [eax],al
  40c814:	jmp    0x40c81d
  40c816:	sahf   
  40c817:	(bad)
  40c81b:	or     al,0x3b
  40c81d:	cmp    ecx,DWORD PTR [edi+0x1c7f4419]
  40c823:	lock jmp 0x40c82d
  40c826:	jle    0x40c7b7
  40c828:	push   0x3b0bfc12
  40c82d:	dec    ebx
  40c82e:	outs   dx,DWORD PTR ds:[esi]
  40c82f:	sbb    DWORD PTR [edi+edi*2],esp
  40c832:	mov    esp,0x3007ebfb
  40c837:	inc    esi
  40c838:	outs   dx,DWORD PTR ds:[esi]
  40c839:	add    eax,0x86ff8cbc
  40c83e:	and    eax,0x45baad28
  40c843:	(bad)  
  40c844:	push   eax
  40c845:	lahf   
  40c846:	out    0x18,eax
  40c848:	outs   dx,BYTE PTR ds:[esi]
  40c849:	std    
  40c84a:	inc    DWORD PTR [eax+0x26]
  40c84d:	ja     0x40c84e
  40c84f:	cs dec edx
  40c851:	cwde   
  40c852:	adc    esp,DWORD PTR [esi]
  40c854:	in     al,dx
  40c855:	or     ch,al
  40c857:	push   ebp
  40c858:	dec    esi
  40c859:	adc    bh,bh
  40c85b:	bound  esi,QWORD PTR [edi+0x1c]
  40c85e:	cmp    ebp,eax
  40c860:	pusha  
  40c861:	add    eax,0x87ccac8b
  40c866:	cmp    cl,ch
  40c868:	in     eax,0x9
  40c86a:	jmp    0x462a2e
  40c86f:	es in  al,0xe
  40c872:	add    cl,ch
  40c874:	pusha  
  40c875:	add    eax,0x248d
	...
  40c8aa:	jnp    0x40c861
  40c8ac:	(bad)  
  40c8ad:	pop    esp
  40c8ae:	xchg   ebx,eax
  40c8af:	adc    esi,DWORD PTR [ebp-0x7]
  40c8b2:	imul   ebx,DWORD PTR [eax+0x1356d107],0xffffffff
  40c8b9:	mov    esi,0x34830de7
  40c8be:	dec    ebx
  40c8bf:	add    eax,0xdeb70a74
  40c8c4:	cmp    ebp,DWORD PTR [eax]
  40c8c6:	adc    dh,BYTE PTR [di-0x63]
  40c8ca:	mov    BYTE PTR [edi+0x6b],bh
  40c8cd:	jmp    0x1500c732
  40c8d2:	pop    esp
  40c8d3:	popf   
  40c8d4:	xor    eax,ebp
  40c8d6:	and    DWORD PTR [edx],edx
  40c8d8:	(bad)  
  40c8d9:	hlt    
  40c8da:	dec    esp
  40c8db:	sbb    eax,0x5670279
  40c8e0:	mov    DWORD PTR [ebx+edi*2],esp
  40c8e3:	push   ds
  40c8e4:	pop    es
  40c8e5:	fstp   QWORD PTR cs:0x560e900
  40c8ec:	adc    esp,0x44
  40c8ef:	add    eax,0x4b8f174
  40c8f4:	add    BYTE PTR [eax],al
  40c8f6:	xchg   ebp,eax
  40c8f7:	lods   al,BYTE PTR ds:[esi]
  40c8f8:	(bad)  
  40c8f9:	jne    0x40c901
  40c8fb:	fiadd  WORD PTR [esi-0x6b]
  40c8fe:	xor    eax,0x3675feed
  40c903:	in     eax,dx
  40c904:	je     0x40c912
  40c906:	jb     0x40c894
  40c908:	xchg   esp,eax
  40c909:	push   DWORD PTR [ebp-0x21]
  40c90c:	mov    al,BYTE PTR [eax]
	...
  40c93e:	add    BYTE PTR [eax],al
  40c940:	mov    edx,0xce458b05
  40c945:	mov    BYTE PTR [eax],bh
  40c947:	add    BYTE PTR [edi],bh
  40c949:	adc    ebp,eax
  40c94b:	xchg   dl,cl
  40c94d:	add    eax,0xedffc700
  40c952:	(bad)  
  40c953:	(bad)  
  40c954:	mov    edx,0xbe45c705
  40c959:	or     BYTE PTR [eax],al
  40c95b:	add    BYTE PTR [edx+0x7af044d2],cl
  40c961:	add    eax,0x44270000
  40c966:	out    dx,eax
  40c967:	push   eax
  40c968:	test   DWORD PTR [ebx-0xd],0xf7440750
  40c96f:	push   eax
  40c970:	mov    ch,0x73
  40c972:	adc    edi,edi
  40c974:	das    
  40c975:	add    eax,ebp
  40c977:	loope  0x40c97d
  40c979:	stc    
  40c97a:	inc    BYTE PTR [ebx+0x73ffdd77]
  40c980:	sub    DWORD PTR [ebp+edi*2+0x2c813af8],eax
  40c987:	and    DWORD PTR [edi-0xb],0xffffffff
  40c98b:	je     0x40c9c9
  40c98d:	test   BYTE PTR [ebp-0x10],bh
  40c990:	cmp    al,BYTE PTR [ecx-0x12d000e0]
  40c996:	(bad)  
  40c997:	jne    0x40c9af
  40c999:	fnstsw WORD PTR [edx*4+0x75fef8b5]
  40c9a0:	arpl   WORD PTR [edx+0x7516],si
	...
  40c9d6:	push   edi
  40c9d7:	(bad)  
  40c9d8:	rcl    DWORD PTR [esp+edi*8-0xc8ae939],1
  40c9df:	iret   
  40c9e0:	nop
  40c9e1:	or     edi,ebx
  40c9e3:	push   DWORD PTR [eax-0x1]
  40c9e6:	in     al,0xdf
  40c9e8:	nop
  40c9e9:	test   ebx,0xd4ff7b32
  40c9ef:	out    dx,eax
  40c9f0:	nop
  40c9f1:	repz mov ebx,0xc4ff7b4a
  40c9f7:	call   DWORD PTR [eax+0x7b42cbef]
  40c9fd:	push   DWORD PTR [edi+ebx*2-0x5ea300f6]
  40ca04:	test   al,0xfe
  40ca06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca07:	pop    ds
  40ca08:	cmp    BYTE PTR [ebp-0x71],0x1e
  40ca0c:	(bad)  
  40ca0d:	sbb    eax,0x75161e09
  40ca12:	pop    edi
  40ca13:	inc    esi
  40ca14:	outs   dx,DWORD PTR ds:[esi]
  40ca15:	xchg   esp,eax
  40ca16:	test   BYTE PTR [edi],bh
  40ca18:	test   eax,0x7d17dff
  40ca1d:	call   0xff56850b
  40ca22:	stc    
  40ca23:	sbb    eax,0x46577516
  40ca28:	adc    DWORD PTR [esp+ebx*2+0x57751667],0x76
  40ca30:	es xchg edi,eax
  40ca32:	dec    esp
  40ca33:	ja     0x40c9fa
  40ca35:	or     cl,BYTE PTR [ebp+0x2f]
  40ca38:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  40ca6b:	add    BYTE PTR ds:0x955f1687,bh
  40ca71:	push   ebp
  40ca72:	inc    ecx
  40ca73:	adc    BYTE PTR [ebx-0xf],ah
  40ca76:	mov    ch,ah
  40ca78:	loopne 0x40cae3
  40ca7a:	pop    ds
  40ca7b:	push   esi
  40ca7c:	sbb    al,0x5
  40ca7e:	fmul   QWORD PTR [ebx]
  40ca80:	or     edi,DWORD PTR [eax+0x6e]
  40ca83:	push   ss
  40ca84:	or     al,0x7e
  40ca86:	lods   al,BYTE PTR ds:[esi]
  40ca87:	pavgb  mm2,QWORD PTR [ecx-0x48e0cac]
  40ca8e:	add    BYTE PTR [ebx+eiz*2],0x5
  40ca92:	jmp    0xe183e64c
  40ca97:	add    esp,esp
  40ca99:	cdq    
  40ca9a:	loopne 0x40cac7
  40ca9c:	(bad)  
  40ca9d:	jne    0x40cac5
  40ca9f:	push   ss
  40caa0:	pushf  
  40caa1:	leave  
  40caa2:	and    BYTE PTR [ebx+eiz*2],al
  40caa5:	add    eax,0xd1e88e9
  40caaa:	mov    ecx,0x10fd3616
  40caaf:	(bad)  
  40cab1:	paddd  mm1,QWORD PTR [ebx-0x6795eeda]
  40cab8:	lods   al,BYTE PTR ds:[esi]
  40cab9:	add    al,0x75
  40cabb:	pop    es
  40cabc:	loopne 0x40ca4f
  40cabe:	in     al,0x2
  40cac0:	adc    DWORD PTR [edi],eax
  40cac2:	push   0xffffff97
  40cac4:	mov    BYTE PTR [esi],al
  40cac6:	pop    edi
  40cac7:	or     cl,bl
  40cac9:	add    eax,0xaf6303e9
  40cace:	scas   eax,DWORD PTR es:[edi]
  40cacf:	inc    edx
	...
  40cb00:	add    BYTE PTR [eax],al
  40cb02:	imul   eax,DWORD PTR ds:0xb474bf6c,0xffffffb5
  40cb09:	(bad)  
  40cb0a:	pop    esp
  40cb0b:	sbb    eax,0xf5c73ad
  40cb10:	push   0xffffff97
  40cb12:	dec    esp
  40cb13:	push   es
  40cb14:	adc    eax,0x1d455800
  40cb19:	or     cl,BYTE PTR [ebx]
  40cb1b:	add    eax,0xaf6303e9
  40cb20:	scas   eax,DWORD PTR es:[edi]
  40cb21:	inc    edx
  40cb22:	imul   eax,DWORD PTR ds:0x928976a,0x0
  40cb29:	sti    
  40cb2a:	das    
  40cb2b:	add    BYTE PTR [ebp+0x71],0xd7
  40cb2f:	pushf  
  40cb30:	pop    ss
  40cb31:	data16 in al,0x6
  40cb34:	call   0xff4f5dfa
  40cb39:	les    edx,FWORD PTR fs:[esi]
  40cb3c:	push   eax
  40cb3d:	dec    esi
  40cb3e:	in     al,dx
  40cb3f:	push   es
  40cb40:	call   0xff4f3b76
  40cb45:	jo     0x40caf3
  40cb47:	and    ch,bl
  40cb49:	aam    0xdd
  40cb4b:	enter  0x99f7,0x77
  40cb4f:	cwde   
  40cb50:	pop    es
  40cb51:	adc    DWORD PTR [esi],esp
  40cb53:	je     0x40cb54
  40cb55:	push   ds
  40cb56:	fmul   st,st(0)
  40cb58:	jecxz  0x40cbbe
  40cb5a:	add    al,0x17
  40cb5c:	push   eax
  40cb5d:	cmp    DWORD PTR [edi+ecx*1-0x24770e8b],0xffffff91
  40cb65:	inc    BYTE PTR [eax]
	...
  40cb97:	add    BYTE PTR [edi-0x80],dl
  40cb9a:	inc    ebp
  40cb9b:	icebp  
  40cb9c:	lock pcmpeqw mm4,mm1
  40cba0:	dec    eax
  40cba1:	xor    bh,dl
  40cba3:	out    0x6f,al
  40cba5:	cmp    BYTE PTR [ebp-0x3b],0x61
  40cba9:	cwde   
  40cbaa:	sbb    eax,0x5016c564
  40cbaf:	into   
  40cbb0:	in     eax,dx
  40cbb1:	or     bh,bh
  40cbb3:	cmp    al,0x6b
  40cbb5:	push   cs
  40cbb6:	jne    0x40cba9
  40cbb8:	cmp    BYTE PTR [edi-0x3],bl
  40cbbb:	mov    dh,0x4f
  40cbbd:	add    BYTE PTR [ebp-0x4f],0x10
  40cbc1:	pcmpeqw mm6,mm1
  40cbc4:	mov    BYTE PTR [esi-0x6],bl
  40cbc7:	sahf   
  40cbc8:	ja     0x40cb4c
  40cbca:	jge    0x40cb5d
  40cbcc:	pusha  
  40cbcd:	cwde   
  40cbce:	or     DWORD PTR [ecx+0x60],edx
  40cbd1:	add    eax,0x584a0000
  40cbd6:	enter  0x32c2,0x2
  40cbda:	lea    eax,[ebp-0x4e]
  40cbdd:	push   edx
  40cbde:	(bad)  
  40cbdf:	jne    0x40cb6f
  40cbe1:	stc    
  40cbe2:	je     0x40cbf0
  40cbe4:	jge    0x40cc65
  40cbe6:	pop    es
  40cbe7:	call   0x3fc366
  40cbec:	jns    0x40cc65
  40cbee:	test   DWORD PTR [eax],0xb7fc17
  40cbf4:	or     al,BYTE PTR [edx]
  40cbf6:	add    BYTE PTR [esi+0x33],bl
  40cbf9:	les    eax,FWORD PTR [edi]
	...
  40cc2b:	add    BYTE PTR [eax],al
  40cc2d:	add    BYTE PTR [edi+0x4f],bh
  40cc30:	not    DWORD PTR [eax-0x73]
  40cc33:	jg     0x40cc3c
  40cc35:	call   0x3f5efc
  40cc3a:	push   ecx
  40cc3b:	bnd call 0x42873c
  40cc41:	call   edi
  40cc43:	stc    
  40cc44:	out    0xe7,eax
  40cc46:	sbb    cl,bh
  40cc48:	(bad)  
  40cc49:	cmp    eax,DWORD PTR [edi]
  40cc4b:	(bad)  
  40cc4c:	je     0x40cc53
  40cc4e:	arpl   WORD PTR [ecx],ax
  40cc50:	add    BYTE PTR [eax],al
  40cc52:	mov    al,BYTE PTR [ebp+edi*2+0x237784fc]
  40cc59:	lea    eax,[edi+0x1]
  40cc5c:	push   eax
  40cc5d:	jmp    DWORD PTR [edi]
  40cc5f:	adc    edi,esp
  40cc61:	or     eax,0x8dfef1fb
  40cc66:	inc    edi
  40cc67:	add    DWORD PTR [eax-0x1],edx
  40cc6a:	aaa    
  40cc6b:	adc    edi,esp
  40cc6d:	cmp    dh,BYTE PTR [eax-0x7872010f]
  40cc73:	stc    
  40cc74:	dec    edi
  40cc75:	push   DWORD PTR [edi+0x9]
  40cc78:	out    0x2e,eax
  40cc7a:	add    cl,bh
  40cc7c:	dec    BYTE PTR [ebp+0x500bd963]
  40cc82:	cmp    al,0xf2
  40cc84:	sti    
  40cc85:	out    0x10,eax
  40cc87:	mov    BYTE PTR [ebx],dl
  40cc89:	(bad)  
  40cc8a:	(bad)  
  40cc8c:	adc    ecx,DWORD PTR [ebp-0x14c6962]
	...
  40ccc2:	add    BYTE PTR [eax],al
  40ccc4:	xchg   esi,eax
  40ccc5:	es sbb eax,esp
  40ccc8:	sbb    BYTE PTR [edx+edx*1-0x7f455977],ah
  40cccf:	inc    ebp
  40ccd0:	or     ecx,DWORD PTR [edi+0x12]
  40ccd3:	jne    0x40cd40
  40ccd5:	(bad)  
  40ccd6:	pop    eax
  40ccd7:	sti    
  40ccd8:	hlt    
  40ccd9:	ret    
  40ccda:	jl     0x40cd21
  40ccdc:	sti    
  40ccdd:	lahf   
  40ccde:	nop
  40ccdf:	out    dx,eax
  40cce0:	arpl   WORD PTR [edx-0x6a],cx
  40cce3:	sbb    BYTE PTR [esi-0x36],0x3
  40cce7:	je     0x40cd2f
  40cce9:	lahf   
  40ccea:	nop
  40cceb:	out    0x63,eax
  40cced:	jb     0x40cc99
  40ccef:	add    BYTE PTR [esi-0xa],0x3
  40ccf3:	je     0x40cd37
  40ccf5:	xchg   al,dl
  40ccf7:	cmp    esp,DWORD PTR [edx]
  40ccf9:	push   ds
  40ccfa:	adc    dh,BYTE PTR [ebp-0x4d]
  40ccfd:	test   BYTE PTR [esi+0x68],0x63
  40cd01:	push   ds
  40cd02:	(bad)  
  40cd03:	mov    edi,0x2b9b3c16
  40cd08:	push   edi
  40cd09:	fld    QWORD PTR [ebx]
  40cd0b:	call   DWORD PTR [esi]
  40cd0d:	sbb    ebp,DWORD PTR cs:[edx+0xb031dfb]
  40cd14:	mov    ds:0x2f6800b1,eax
  40cd19:	add    al,ch
  40cd1b:	jmp    FWORD PTR [ebp-0x2f]
  40cd1e:	adc    ebp,eax
  40cd20:	retf   0x3c6
  40cd23:	add    BYTE PTR [eax+0x5e],ch
  40cd26:	xchg   edi,eax
  40cd27:	sub    eax,0x0
	...
  40cd58:	add    BYTE PTR [eax],al
  40cd5a:	retf   
  40cd5b:	add    eax,0x4b3c03e9
  40cd60:	sahf   
  40cd61:	cwde   
  40cd62:	pop    eax
  40cd63:	sbb    eax,0xc3c761c
  40cd68:	mov    ds,WORD PTR [eax-0x3f3bc]
  40cd6e:	inc    esp
  40cd6f:	cmp    DWORD PTR [ebx+0x12],ebx
  40cd72:	and    al,0xc
  40cd74:	cld    
  40cd75:	pop    ds
  40cd76:	sbb    al,0x92
  40cd78:	fcomp  QWORD PTR [ebx]
  40cd7a:	and    dh,BYTE PTR [edi+0x66]
  40cd7d:	adc    cl,BYTE PTR [edx+edx*4]
  40cd80:	push   eax
  40cd81:	adc    cl,BYTE PTR [esi-0x2ea6bf07]
  40cd87:	or     ecx,DWORD PTR [esi+0x12]
  40cd8a:	outs   dx,BYTE PTR ds:[esi]
  40cd8b:	adc    eax,0xbd64651
  40cd90:	adc    ch,BYTE PTR ds:[esi+0x19]
  40cd94:	inc    ecx
  40cd95:	dec    esi
  40cd96:	test   BYTE PTR [ebx],0x2e
  40cd99:	adc    cl,BYTE PTR [esi+0x1d]
  40cd9c:	adc    DWORD PTR [esi-0xa],edx
  40cd9f:	or     ebx,DWORD PTR [esi]
  40cda1:	shl    ecx,0x89
  40cda4:	adc    BYTE PTR [ebx],al
  40cda6:	aaa    
  40cda7:	std    
  40cda8:	loope  0x40cdc3
  40cdaa:	fs cmp dh,0x10
  40cdae:	lods   al,BYTE PTR ds:[esi]
  40cdaf:	or     esi,DWORD PTR [edx-0x38]
  40cdb2:	lods   al,BYTE PTR ds:[esi]
  40cdb3:	stos   BYTE PTR es:[edi],al
  40cdb4:	pop    ds
  40cdb5:	inc    ebp
  40cdb6:	imul   eax,DWORD PTR ds:0x87877e94,0xffffffad
  40cdbd:	adc    BYTE PTR [eax],al
	...
  40cdef:	add    BYTE PTR [ecx+edx*4+0x4d181bec],cl
  40cdf6:	(bad)  
  40cdf7:	adc    DWORD PTR [eax+0x45],ebp
  40cdfa:	push   esp
  40cdfb:	shl    edi,1
  40cdfd:	rol    esp,0xb4
  40ce00:	test   BYTE PTR ds:0xb64116d,dh
  40ce06:	add    BYTE PTR [ebx+esi*2],bh
  40ce09:	or     dh,BYTE PTR [ebp-0x23]
  40ce0c:	js     0x40ce60
  40ce0e:	mov    fs,WORD PTR [esi+0x15bffe72]
  40ce14:	push   edx
  40ce15:	or     al,0x75
  40ce17:	loope  0x40ce6c
  40ce19:	nop
  40ce1a:	sti    
  40ce1b:	sub    edx,0x2e86ff08
  40ce21:	dec    ebx
  40ce22:	jne    0x40cdfd
  40ce24:	enter  0xf0a,0x86
  40ce28:	mov    cl,0xa
  40ce2a:	jne    0x40ce09
  40ce2c:	jae    0x40cdbe
  40ce2e:	pop    es
  40ce2f:	push   ecx
  40ce30:	adc    DWORD PTR [edx-0x1],0xfb90725e
  40ce37:	inc    ecx
  40ce38:	scas   eax,DWORD PTR es:[edi]
  40ce39:	jns    0x40ce3a
  40ce3b:	dec    esi
  40ce3c:	cmp    BYTE PTR [edi+0x8],al
  40ce3f:	jmp    0x692d4df9
  40ce44:	fwait
  40ce45:	push   ecx
  40ce46:	(bad)  
  40ce47:	ss jb  0x40ce8c
  40ce4a:	test   DWORD PTR [ecx+0x71],esi
  40ce4d:	or     bh,bh
  40ce4f:	jmp    0x7240d3b4
	...
  40ce84:	add    BYTE PTR [eax],al
  40ce86:	pushf  
  40ce87:	dec    BYTE PTR [edx]
  40ce89:	sub    ebx,ebx
  40ce8b:	add    DWORD PTR [eax+0x49060d1],eax
  40ce91:	adc    al,dh
  40ce93:	add    eax,0x9053e900
  40ce98:	or     eax,DWORD PTR [ecx]
  40ce9a:	arpl   WORD PTR [ebp-0x1],sp
  40ce9d:	out    dx,al
  40ce9e:	xchg   edi,eax
  40ce9f:	dec    edx
  40cea0:	jne    0x40ce98
  40cea2:	call   0x5f68faf9
  40cea7:	or     dh,BYTE PTR [ebp-0x1b]
  40ceaa:	pop    eax
  40ceab:	pop    esp
  40ceac:	cwde   
  40cead:	into   
  40ceae:	push   ebx
  40ceaf:	push   ds
  40ceb0:	or     eax,0x2bba1200
  40ceb5:	inc    ecx
  40ceb6:	jp     0x40cead
  40ceb8:	je     0x40cec6
  40ceba:	and    bl,BYTE PTR [eax-0x70fa0069]
  40cec0:	test   BYTE PTR [eax+0x68fef504],bh
  40cec6:	and    al,0x7
  40cec8:	add    BYTE PTR [eax],al
  40ceca:	mov    DWORD PTR [ebx-0xb1a013e],0x9308e84f
  40ced4:	(bad)  
  40ced5:	push   DWORD PTR [edi-0x6a013d7d]
  40cedb:	cmc    
  40cedc:	dec    edi
  40cedd:	dec    DWORD PTR [edi-0x42]
  40cee0:	std    
  40cee1:	inc    DWORD PTR [ebp-0x599b212]
  40cee7:	add    eax,0x8589
	...
  40cf1c:	(bad)  
  40cf1d:	repz (bad) 
  40cf1f:	dec    edx
  40cf21:	add    al,0x84
  40cf23:	repz cli 
  40cf25:	add    eax,0xc08f8d00
  40cf2a:	std    
  40cf2b:	call   DWORD PTR [ebp-0x35effe13]
  40cf31:	add    eax,0x8b077400
  40cf36:	inc    ecx
  40cf37:	sub    al,0xa
  40cf39:	outs   dx,BYTE PTR ds:[esi]
  40cf3a:	mov    dl,0x2c
  40cf3c:	or     eax,DWORD PTR [esi]
  40cf3e:	call   0x46ab6e
  40cf43:	or     edi,DWORD PTR [edx+0x73]
  40cf46:	add    al,0xe9
  40cf48:	adc    eax,DWORD PTR [esi]
  40cf4a:	add    BYTE PTR [eax],al
  40cf4c:	pop    es
  40cf4d:	xchg   ebx,eax
  40cf4e:	sar    esi,0x85
  40cf51:	stc    
  40cf52:	mov    WORD PTR [edx+0x76],es
  40cf55:	push   ecx
  40cf56:	addr16 mov ch,0x56
  40cf59:	inc    eax
  40cf5a:	jmp    edi
  40cf5c:	arpl   WORD PTR [edx],sp
  40cf5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf5f:	push   DWORD PTR [esi+eiz*1+0x43]
  40cf63:	jne    0x40cfcb
  40cf65:	xor    eax,0x1c630080
  40cf6a:	push   cs
  40cf6b:	jne    0x40cfdc
  40cf6d:	inc    esi
  40cf6e:	mov    al,ds:0xfb58549e
  40cf73:	mov    edi,0xc69b0fd6
  40cf78:	jnp    0x40cf57
  40cf7a:	add    edi,edi
  40cf7c:	mov    dh,0x22
  40cf7e:	sbb    ecx,DWORD PTR [ecx]
	...
  40cfb0:	add    BYTE PTR [eax],al
  40cfb2:	(bad)  [edi+0xf]
  40cfb5:	jmp    0x40d010
  40cfb7:	hlt    
  40cfb8:	add    edi,edi
  40cfba:	scas   al,BYTE PTR es:[edi]
  40cfbb:	sbb    bl,BYTE PTR [ebx]
  40cfbd:	std    
  40cfbe:	hlt    
  40cfbf:	(bad)  
  40cfc0:	push   cs
  40cfc1:	(bad)  
  40cfc2:	out    dx,al
  40cfc3:	pop    esp
  40cfc4:	push   cs
  40cfc5:	dec    DWORD PTR [edx+edx*4]
  40cfc8:	mov    cl,0x2b
  40cfca:	mov    cl,0x4e
  40cfcc:	sbb    eax,DWORD PTR [ecx-0x25]
  40cfcf:	scas   eax,DWORD PTR es:[edi]
  40cfd0:	push   cs
  40cfd1:	push   eax
  40cfd2:	hlt    
  40cfd3:	xor    ebx,esi
  40cfd5:	dec    edi
  40cfd6:	in     al,dx
  40cfd7:	dec    ecx
  40cfd8:	sti    
  40cfd9:	out    0xe9,eax
  40cfdb:	enter  0xff0e,0xcb
  40cfdf:	adc    dh,BYTE PTR [edi-0x1]
  40cfe2:	aam    0xc3
  40cfe4:	ret    0x218c
  40cfe7:	xor    bh,BYTE PTR [ebp+eax*4+0xf]
  40cfeb:	jmp    0x69fdcefe
  40cff0:	repz (bad) 
  40cff2:	out    dx,al
  40cff3:	mov    dl,0xd
  40cff5:	jmp    FWORD PTR [esi+esi*8+0x1e63664e]
  40cffc:	cli    
  40cffd:	mov    edi,0xc69b4617
  40d002:	dec    ebx
  40d003:	pop    ebp
  40d004:	add    edi,edi
  40d006:	push   ss
  40d007:	add    eax,0x70d21bf5
  40d00c:	fimul  WORD PTR [esi]
  40d00e:	jl     0x40d062
  40d010:	popf   
  40d011:	or     eax,0x1c390874
	...
  40d046:	add    BYTE PTR [eax],al
  40d048:	push   0x70
  40d04a:	(bad)  
  40d04b:	push   cs
  40d04c:	adc    esi,DWORD PTR [ebp+0x1d6498bd]
  40d052:	dec    ecx
  40d053:	push   cs
  40d054:	push   esp
  40d055:	or     cl,al
  40d057:	push   ss
  40d058:	lock pop es
  40d05a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d05b:	sbb    dh,0x42
  40d05e:	lahf   
  40d05f:	push   cs
  40d060:	cmp    al,0xb5
  40d062:	xchg   ebp,eax
  40d063:	pop    eax
  40d064:	test   DWORD PTR [esi],0x9a3b0e8e
  40d06a:	or     eax,DWORD PTR [ebx+eiz*2]
  40d06d:	sub    BYTE PTR [ecx+0x75ece7fe],0xe
  40d074:	adc    al,0x8
  40d076:	xor    al,0x4f
  40d078:	or     eax,0x831b6608
  40d07d:	mov    ds:0x51fc03e8,al
  40d082:	xchg   ecx,eax
  40d083:	or     eax,0x464107f4
  40d088:	rol    BYTE PTR [edi],1
  40d08a:	inc    esi
  40d08b:	cmp    al,0x21
  40d08d:	stc    
  40d08e:	call   0x6859ba4b
  40d093:	inc    edi
  40d094:	adc    eax,DWORD PTR [edi]
  40d096:	cs push cs
  40d098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d099:	and    DWORD PTR [ecx+0xd],0x3e907c4
  40d0a0:	arpl   WORD PTR ds:0xfc68c862,ax
  40d0a6:	sub    BYTE PTR [edi+0x3c18567],dl
	...
  40d0dc:	add    BYTE PTR [eax],al
  40d0de:	add    dl,BYTE PTR cs:[eax]
  40d0e1:	cld    
  40d0e2:	arpl   WORD PTR ds:0x4ff8e900,ax
  40d0e8:	sub    al,0xa8
  40d0ea:	pusha  
  40d0eb:	or     BYTE PTR [ebp-0xb],dh
  40d0ee:	push   0x6ede96d6
  40d0f3:	jle    0x40d07a
  40d0f5:	xchg   ecx,eax
  40d0f6:	gs or  bh,bh
  40d0f9:	inc    ecx
  40d0fa:	popf   
  40d0fb:	add    al,0x0
  40d0fd:	jmp    0xc00352e7
  40d102:	outs   dx,BYTE PTR ds:[esi]
  40d103:	push   es
  40d104:	push   eax
  40d105:	sar    DWORD PTR [eax-0x3351008e],0x80
  40d10c:	ret    0x56a7
  40d10f:	push   es
  40d110:	push   eax
  40d111:	sahf   
  40d112:	xchg   esp,eax
  40d113:	dec    ebp
  40d114:	(bad)  
  40d115:	xchg   esi,eax
  40d116:	sbb    ax,0x5e5
  40d11a:	addr16 add eax,0x7936c89
  40d120:	(bad)  
  40d121:	jle    0x40d14a
  40d123:	clc    
  40d124:	sub    DWORD PTR [edi+0x5c00055f],0xffffff94
  40d12b:	inc    ebx
  40d12c:	(bad)  
  40d12d:	push   si
  40d12f:	push   cs
  40d130:	add    bh,cl
  40d132:	pusha  
  40d133:	add    eax,0x76dce600
  40d138:	add    cl,ch
  40d13a:	pusha  
  40d13b:	js     0x40d0d2
  40d13d:	sub    edx,DWORD PTR [ebp+0x6]
  40d140:	jmp    FWORD PTR [eax+eax*1+0x0]
	...
  40d174:	mov    eax,ds:0x33c14fda
  40d179:	fld    DWORD PTR [eax-0x17]
  40d17c:	push   0x60e9644d
  40d181:	cli    
  40d182:	mov    edi,0x751a6294
  40d187:	fs sub al,0x43
  40d18a:	dec    BYTE PTR [esi]
  40d18c:	pop    esi
  40d18d:	js     0x40d1d1
  40d18f:	add    BYTE PTR [esi-0x514a98ae],cl
  40d195:	inc    ebx
  40d196:	jmp    edi
  40d198:	sub    al,0x5d
  40d19a:	(bad)  
  40d19b:	inc    DWORD PTR [ecx-0x4efd8b3e]
  40d1a1:	pop    ebp
  40d1a2:	mov    WORD PTR [ebp-0x10738],ss
  40d1a8:	inc    DWORD PTR [ebx+0x2b]
  40d1ab:	mov    DWORD PTR [edi],eax
  40d1ad:	scas   al,BYTE PTR es:[edi]
  40d1ae:	std    
  40d1af:	call   FWORD PTR [ebp-0x74d73996]
  40d1b5:	add    edi,edi
  40d1b7:	jne    0x40d1f7
  40d1b9:	jmp    0xb5fe:0xf8fd9698
  40d1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1c1:	clc    
  40d1c2:	(bad)  
  40d1c3:	(bad)  
  40d1c4:	jp     0x40d1af
  40d1c6:	loopne 0x40d15e
  40d1c8:	int    0xf8
  40d1ca:	mov    BYTE PTR [ebp-0x10776],al
  40d1d0:	dec    edx
  40d1d1:	imul   eax,DWORD PTR [ebx+0x3c],0xb5ff014b
	...
  40d208:	add    BYTE PTR [eax],al
  40d20a:	pop    edx
  40d20b:	clc    
  40d20c:	(bad)  
  40d20d:	jmp    edx
  40d20f:	je     0x40d275
  40d211:	add    dl,bh
  40d213:	or     al,0xbf
  40d215:	je     0x40d210
  40d217:	imul   ecx,DWORD PTR [ecx+0x3c],0xb5ff01cb
  40d21e:	retf   0xfef7
  40d221:	call   FWORD PTR [ebp-0x5c17f891]
  40d227:	idiv   dh
  40d229:	jmp    DWORD PTR [edx]
  40d22b:	mov    ebp,0x877dff91
  40d230:	test   dl,al
  40d232:	jl     0x40d22d
  40d234:	(bad)  
  40d235:	push   eax
  40d236:	pop    ebp
  40d237:	scas   eax,DWORD PTR es:[edi]
  40d238:	mov    ebx,0xbef63fe
  40d23d:	call   0x4452b4
  40d242:	(bad)  
  40d244:	sti    
  40d245:	test   BYTE PTR [esi],ah
  40d247:	pop    es
  40d248:	or     edi,edi
  40d24a:	xchg   esp,eax
  40d24b:	enter  0xfe4e,0x8c
  40d24f:	push   ss
  40d250:	sbb    ah,BYTE PTR [edi+edi*8]
  40d253:	sbb    eax,DWORD PTR [ebx]
  40d255:	push   DWORD PTR [esi+0x74ff0a63]
  40d25b:	inc    ebx
  40d25c:	jg     0x40d1f0
  40d25e:	ins    BYTE PTR es:[edi],dx
  40d25f:	ss cmp eax,0xb01c5bc2
  40d265:	mov    cl,BYTE PTR [edi-0x3c]
  40d268:	nop
  40d269:	or     ecx,DWORD PTR [ebx-0x58]
  40d26c:	jno    0x40d26d
	...
  40d29e:	add    BYTE PTR [eax],al
  40d2a0:	dec    esp
  40d2a1:	call   0x3e9546e8
  40d2a6:	mov    ah,0xfe
  40d2a8:	mov    dh,0xf6
  40d2aa:	sbb    ch,BYTE PTR [ebx-0x17f563cb]
  40d2b0:	mov    edx,0x1aff0b80
  40d2b5:	mov    cl,0xfb
  40d2b7:	push   DWORD PTR [edi+0x1f831877]
  40d2bd:	jnp    0x40d25d
  40d2bf:	(bad)  
  40d2c0:	jp     0x40d28f
  40d2c2:	or     DWORD PTR [ebp+0x5b],esi
  40d2c5:	push   esi
  40d2c6:	jg     0x40d257
  40d2c8:	cld    
  40d2c9:	arpl   WORD PTR [ebp+0x45],di
  40d2cc:	test   eax,0xe676feec
  40d2d2:	sbb    bh,BYTE PTR [edi+0x6a0b4be4]
  40d2d8:	add    BYTE PTR [ebx-0x6f],0x7
  40d2dc:	retf   
  40d2dd:	or     DWORD PTR [ebx],0xe6c8ccff
  40d2e3:	dec    BYTE PTR [esi+0x5]
  40d2e6:	icebp  
  40d2e7:	sbb    ecx,DWORD PTR [eax]
  40d2e9:	add    eax,0x5490b1e
  40d2ee:	adc    DWORD PTR [edi-0x6416b998],0x3a84110
  40d2f8:	pushf  
  40d2f9:	cmp    dl,BYTE PTR [edi+0x10523dc]
  40d2ff:	xlat   BYTE PTR ds:[ebx]
  40d300:	test   DWORD PTR [esi+ebp*8],0xfe
	...
  40d333:	add    BYTE PTR [eax],al
  40d335:	add    ah,al
  40d337:	jns    0x40d336
  40d339:	mov    bl,0x4
  40d33b:	dec    edi
  40d33c:	sbb    eax,0xd65474c5
  40d341:	nop
  40d342:	fs in  eax,dx
  40d344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d345:	pop    es
  40d346:	fs add al,0xd1
  40d349:	push   es
  40d34a:	icebp  
  40d34b:	add    edi,DWORD PTR [esi+0x356c549d]
  40d351:	enter  0x5a3,0x41
  40d355:	mov    al,0x88
  40d357:	inc    esi
  40d358:	jmp    0xd09c4967
  40d35d:	les    esi,FWORD PTR [esp+ebp*8]
  40d360:	in     al,dx
  40d361:	jo     0x40d38f
  40d363:	add    al,0xe2
  40d365:	inc    ebx
  40d366:	scas   eax,DWORD PTR es:[edi]
  40d367:	sbb    DWORD PTR [ecx],ebx
  40d369:	pushf  
  40d36a:	stos   BYTE PTR es:[edi],al
  40d36b:	inc    ecx
  40d36c:	sub    BYTE PTR [ebx+esi*4],al
  40d36f:	add    al,0xfc
  40d371:	sti    
  40d372:	add    al,0x97
  40d374:	ins    BYTE PTR es:[edi],dx
  40d375:	or     al,BYTE PTR [ebp*8+0x3fc743c]
  40d37c:	rol    DWORD PTR [ebx],cl
  40d37e:	mov    DWORD PTR ds:0x462f79c1,eax
  40d384:	jmp    0xe944b824
  40d389:	or     ebx,0xffffffdd
  40d38c:	push   esp
  40d38d:	or     dl,ah
  40d38f:	verw   WORD PTR [ecx]
  40d392:	fsub   QWORD PTR [edi]
  40d394:	push   eax
  40d395:	cdq    
  40d396:	push   0x269b84
	...
  40d3cb:	add    BYTE PTR [ecx+0x10],ch
  40d3ce:	rcl    BYTE PTR [ebp-0x5c97ac3c],0xa4
  40d3d5:	inc    esp
  40d3d6:	add    BYTE PTR [ecx+0x11087a59],bh
  40d3dc:	(bad)  
  40d3dd:	(bad)  
  40d3de:	(bad)  
  40d3df:	(bad)  
  40d3e0:	jns    0x40d385
  40d3e2:	nop
  40d3e3:	neg    BYTE PTR [edx-0x13]
  40d3e6:	cwde   
  40d3e7:	pop    eax
  40d3e8:	pop    ecx
  40d3e9:	add    al,0xff
  40d3eb:	pop    esp
  40d3ec:	imul   eax,DWORD PTR [esi*2-0x70eea70f],0xffffffd6
  40d3f4:	pop    edx
  40d3f5:	into   
  40d3f6:	shl    ebp,0x60
  40d3f9:	pop    edx
  40d3fa:	mov    edx,ebp
  40d3fc:	loopne 0x40d3c7
  40d3fe:	jmp    0x40d3b6
  40d400:	push   0x2
  40d402:	lea    ebp,[ebx+ebx*2]
  40d405:	push   ebp
  40d406:	push   DWORD PTR [edi+ecx*2]
  40d409:	add    al,0x75
  40d40b:	cmc    
  40d40c:	pop    eax
  40d40d:	xlat   BYTE PTR ds:[ebx]
  40d40e:	(bad)  
  40d40f:	jmp    0xe700e274
  40d414:	lods   eax,DWORD PTR ds:[esi]
  40d415:	into   
  40d416:	(bad)  
  40d417:	call   0x81859e7c
  40d41c:	addr16 add eax,0x48a3e900
  40d422:	hlt    
  40d423:	jbe    0x40d487
  40d425:	add    eax,0x6f5f0300
  40d42a:	add    bl,dl
  40d42c:	pusha  
  40d42d:	outs   dx,DWORD PTR ds:[esi]
  40d42e:	add    BYTE PTR [eax+eax*1+0x0],ch
	...
  40d462:	mov    ah,0xf6
  40d464:	dec    edi
  40d465:	fs ins BYTE PTR es:[edi],dx
  40d467:	stc    
  40d468:	test   BYTE PTR [esi+0x5a],0x55
  40d46c:	inc    DWORD PTR [eax]
  40d46e:	pop    ds
  40d46f:	ud0    esi,DWORD PTR [ebp-0x6a]
  40d473:	and    DWORD PTR [ebx+eiz*2-0x3ff4f946],esp
  40d47a:	push   cs
  40d47b:	add    al,0xe8
  40d47d:	mov    cs,edx
  40d47f:	push   es
  40d480:	add    BYTE PTR [eax+0x7d],ch
  40d483:	loope  0x40d4c4
  40d485:	add    BYTE PTR [ebp-0x6e],dl
  40d488:	push   cs
  40d489:	call   0x404a0b
  40d48e:	cli    
  40d48f:	adc    eax,0xf714ff8d
  40d495:	call   DWORD PTR [ebp+0x4de850b6]
  40d49b:	jne    0x40d49c
  40d49d:	push   ebx
  40d49f:	xor    al,0xf7
  40d4a2:	xchg   ebp,eax
  40d4a3:	or     eax,0xceb0de8
  40d4a8:	jmp    FWORD PTR [edx+0x7a]
  40d4ab:	sahf   
  40d4ac:	sar    BYTE PTR [ebx+ecx*4],cl
  40d4af:	or     edi,edi
  40d4b1:	mov    ch,0x1a
  40d4b3:	adc    eax,0x9315ffff
  40d4b8:	or     ch,al
  40d4ba:	sub    dh,BYTE PTR [edx-0x1]
  40d4bd:	push   DWORD PTR [ebx-0x2a08137d]
  40d4c3:	or     al,0x83
  40d4c5:	mov    ebp,0x0
	...
  40d4f6:	add    BYTE PTR [eax],al
  40d4f8:	out    0x14,al
  40d4fa:	(bad)  
  40d4fb:	(bad)  
  40d4fc:	cmp    dl,BYTE PTR [edx+0x60b6811]
  40d502:	out    dx,eax
  40d503:	mov    esi,0xf7ec5395
  40d508:	xchg   ebp,eax
  40d509:	or     eax,0x1e0275ff
  40d50e:	xchg   edi,eax
  40d50f:	mov    dl,0x85
  40d511:	or     eax,0x15a6b5ff
  40d516:	(bad)  
  40d517:	jmp    DWORD PTR [ebx+0x44]
  40d51a:	cmp    al,0x90
  40d51c:	in     al,0x52
  40d51e:	or     BYTE PTR [ebp-0xf7bd2d],dh
  40d524:	aam    0xb8
  40d526:	idiv   dh
  40d528:	push   esi
  40d529:	in     al,0x1a
  40d52b:	xor    ah,al
  40d52d:	xor    cl,BYTE PTR [eax]
  40d52f:	push   esi
  40d531:	sbb    edx,DWORD PTR [eax]
  40d533:	push   DWORD PTR [ebx+edx*1+0x1aac9058]
  40d53a:	or     BYTE PTR [ebp-0x55],al
  40d53d:	add    al,0xbf
  40d53f:	(bad)  
  40d540:	pushf  
  40d541:	or     cl,BYTE PTR [eax]
  40d543:	jne    0x40d4dc
  40d545:	adc    ecx,DWORD PTR [edx]
  40d547:	bound  esp,QWORD PTR [ebx-0x14]
  40d54a:	cmp    edx,eax
  40d54c:	push   edi
  40d54d:	in     al,dx
  40d54e:	lods   eax,DWORD PTR ds:[esi]
  40d54f:	mov    cl,BYTE PTR [edi+0x6ce8406c]
  40d555:	loop   0x40d55d
  40d557:	lea    esp,[esi]
  40d559:	fdiv   DWORD PTR [ebx+0xfe]
	...
  40d58b:	add    BYTE PTR [eax],al
  40d58d:	add    dh,ch
  40d58f:	sti    
  40d590:	add    eax,0x22d66f75
  40d595:	bound  esp,QWORD PTR [ebx-0x12]
  40d598:	stc    
  40d599:	mov    edi,0xe6715c
  40d59e:	arpl   si,bp
  40d5a0:	cmp    eax,0x2ef3b45
  40d5a5:	add    BYTE PTR [ebx-0x59],ah
  40d5a8:	shl    bl,0x2c
  40d5ab:	lock add al,BYTE PTR [eax]
  40d5ae:	mov    ecx,0x8aff98ee
  40d5b3:	out    dx,al
  40d5b4:	cwde   
  40d5b5:	jmp    edi
  40d5b7:	sub    DWORD PTR [eax],edx
  40d5b9:	push   eax
  40d5ba:	fidiv  WORD PTR [ecx+0x10]
  40d5bd:	test   DWORD PTR [eax+esi*2],0x576feb4
  40d5c4:	popa   
  40d5c5:	pop    es
  40d5c6:	outs   dx,BYTE PTR ds:[esi]
  40d5c7:	add    DWORD PTR [ecx+0x51],edx
  40d5ca:	add    DWORD PTR ds:0x79a4fae9,0x5c21ce4
  40d5d4:	jmp    0x110920dc
  40d5d9:	(bad)
  40d5dc:	mov    ebx,0x59ddbcf3
  40d5e1:	pop    es
  40d5e2:	mov    esp,0xe6347255
  40d5e7:	mov    dl,BYTE PTR [edi+ecx*1]
  40d5ea:	lods   al,BYTE PTR ds:[esi]
  40d5eb:	add    BYTE PTR [ecx+0x79cdbcb1],bh
  40d5f1:	pop    es
	...
  40d622:	add    BYTE PTR [eax],al
  40d624:	pushf  
  40d625:	mov    gs,WORD PTR [ebx+0x14]
  40d628:	mov    WORD PTR [eax],es
  40d62a:	(bad)  
  40d62b:	sbb    ebp,DWORD PTR [ebp-0x6b]
  40d62e:	cmc    
  40d62f:	push   es
  40d630:	stc    
  40d631:	add    al,0x83
  40d633:	add    edi,DWORD PTR [edx+edi*4-0x28]
  40d637:	push   cs
  40d638:	je     0x40d63a
  40d63a:	ficom  WORD PTR [eax+0x730ced58]
  40d640:	add    BYTE PTR fs:[eax-0x80],ah
  40d644:	dec    edi
  40d645:	clc    
  40d646:	lds    eax,FWORD PTR [esi]
  40d648:	push   esp
  40d649:	mov    edx,0x4c0ecc
  40d64e:	sar    DWORD PTR [edi],0xea
  40d651:	jmp    FWORD PTR [ebp+0xa78fcfa]
  40d657:	mov    ah,0xeb
  40d659:	mov    DWORD PTR [eax-0x69ffd3f2],edx
  40d65f:	push   eax
  40d660:	cmp    edi,eax
  40d662:	lea    eax,[esi]
  40d664:	or     eax,DWORD PTR [esi]
  40d666:	pop    esp
  40d667:	push   es
  40d668:	adc    al,0xc
  40d66a:	test   eax,0x6da48f
  40d66f:	jmp    0x40d6d1
  40d671:	lock mov ebp,0x4140cf01
  40d677:	jmp    0x572890d9
  40d67c:	gs add bh,bh
  40d67f:	fsub   st(0),st
  40d681:	out    0x97,eax
  40d683:	xchg   ebp,eax
  40d684:	add    BYTE PTR gs:[eax-0x15],ch
	...
  40d6b8:	add    BYTE PTR [eax],al
  40d6ba:	pusha  
  40d6bb:	lock mov ebp,0x4140e8d1
  40d6c1:	jmp    0x37289123
  40d6c6:	gs add bh,bh
  40d6c9:	pushf  
  40d6ca:	mov    eax,0x65557fe7
  40d6cf:	add    BYTE PTR [eax-0x17],ch
  40d6d2:	pusha  
  40d6d3:	lock mov ebp,0x41413481
  40d6d9:	jmp    0xf728913b
  40d6de:	data16 add bh,bh
  40d6e1:	jl     0x40d66b
  40d6e3:	out    0x67,eax
  40d6e5:	xor    eax,0x7de80065
  40d6ea:	out    dx,al
  40d6eb:	(bad)  
  40d6ec:	(bad)  
  40d6ed:	ficomp WORD PTR [ecx+esi*8]
  40d6f0:	not    dh
  40d6f2:	pop    esi
  40d6f3:	in     eax,dx
  40d6f4:	mov    BYTE PTR [esi+0x66],bl
  40d6f7:	(bad)  
  40d6f8:	(bad)  
  40d6f9:	jl     0x40d76a
  40d6fb:	idiv   dh
  40d6fd:	mov    esi,0xb60c7866
  40d702:	aam    0x6
  40d704:	call   0xff3f3c95
  40d709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d70a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d70b:	cmc    
  40d70c:	neg    BYTE PTR [esi+0x666ced66]
  40d712:	pop    esi
  40d713:	(bad)  
  40d714:	(bad)  
  40d715:	and    al,0x6f
  40d717:	in     al,dx
  40d718:	lock add ah,bl
  40d71b:	or     bh,bh
  40d71d:	inc    DWORD PTR [eax]
	...
  40d74f:	add    BYTE PTR [edi],dl
  40d751:	pop    es
  40d752:	call   0x4a330e
  40d757:	leave  
  40d758:	enter  0xfefd,0x54
  40d75c:	jno    0x40d77b
  40d75e:	add    esp,0xffffff8e
  40d761:	fwait
  40d762:	(bad)  
  40d763:	imul   ebx,DWORD PTR [eax+0x8],0x88220875
  40d76a:	mov    bh,bh
  40d76c:	sbb    eax,0xb2fc457a
  40d771:	add    al,BYTE PTR [eax]
  40d773:	out    dx,eax
  40d774:	dec    esp
  40d775:	mov    eax,ds:0x30b3caa
  40d77a:	push   0xfec3bebc
  40d77f:	(bad)  
  40d780:	xlat   BYTE PTR ds:[ebx]
  40d781:	cli    
  40d782:	out    0x47,al
  40d784:	push   es
  40d785:	or     bh,bh
  40d787:	push   0x3fcd46
  40d78c:	pop    ebp
  40d78d:	into   
  40d78e:	push   esp
  40d78f:	sub    DWORD PTR [ebx-0x7d8a00fe],edi
  40d795:	sbb    dl,BYTE PTR [eax+0x68098dfd]
  40d79b:	les    edi,FWORD PTR [esi]
  40d79d:	ret    0x67fe
  40d7a0:	js     0x40d7a4
  40d7a2:	add    BYTE PTR [eax-0x17f97073],al
  40d7a8:	lods   al,BYTE PTR ds:[esi]
  40d7a9:	push   es
  40d7aa:	(bad)  
  40d7ab:	push   DWORD PTR [edx+0x3a413c31]
  40d7b1:	call   0x0:0x0
	...
  40d7e4:	add    BYTE PTR [eax],al
  40d7e6:	cmp    al,BYTE PTR [edx+0x1a4275fe]
  40d7ec:	pop    ebx
  40d7ed:	(bad)  
  40d7ee:	std    
  40d7ef:	or     BYTE PTR [eax+0x18],ch
  40d7f2:	(bad)  
  40d7f4:	(bad)  
  40d7f5:	addr16 arpl dx,bp
  40d7f8:	add    al,BYTE PTR [eax]
  40d7fa:	jecxz  0x40d78a
  40d7fc:	lea    eax,[edi]
  40d7fe:	or     esi,DWORD PTR ds:0x7f0cff06
  40d804:	mov    ?,ebx
  40d806:	add    al,0x1
  40d808:	sti    
  40d809:	out    0x94,eax
  40d80b:	pusha  
  40d80c:	add    al,0xff
  40d80e:	sub    ch,BYTE PTR [edx]
  40d810:	(bad)  
  40d811:	call   DWORD PTR [edi+0x6eff1773]
  40d817:	call   0x4f30f136
  40d81c:	add    al,0xb
  40d81e:	mov    ds:0xf267c9bf,eax
  40d823:	add    dl,al
  40d825:	call   DWORD PTR [esp+eax*2]
  40d828:	push   ebp
  40d829:	xchg   edx,eax
  40d82a:	mov    esp,0x4b4fb32e
  40d82f:	in     al,dx
  40d830:	add    ch,bh
  40d832:	in     eax,dx
  40d833:	xchg   ebx,eax
  40d834:	mov    ?,WORD PTR [edx+eiz*1]
  40d837:	in     al,dx
  40d838:	mov    dl,0xfe
  40d83a:	push   ss
  40d83b:	in     al,0x1a
  40d83d:	jne    0x40d80f
  40d83f:	push   es
  40d840:	add    al,0x58
  40d842:	sti    
  40d843:	in     al,dx
  40d844:	add    ch,bh
  40d846:	lds    eax,FWORD PTR [ebx+0x3d7f]
	...
  40d87c:	and    ch,ah
  40d87e:	mov    dl,0xfe
  40d880:	out    dx,al
  40d881:	repz jmp 0xd6e8:0x2deb060
  40d889:	gs add edi,edi
  40d88c:	sub    dh,BYTE PTR [ecx+0x77ae000b]
  40d892:	lock and BYTE PTR [edi],0xbb
  40d896:	ins    DWORD PTR es:[edi],dx
  40d897:	add    BYTE PTR [ecx+0x6b75030f],bh
  40d89d:	(bad)  
  40d89e:	mov    dl,0x8a
  40d8a0:	xor    al,0x6
  40d8a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8a3:	lea    esp,[edi+0x241e12f9]
  40d8a9:	jae    0x40d88c
  40d8ab:	jmp    0x40d8a4
  40d8ad:	cld    
  40d8ae:	lea    eax,[ebx]
  40d8b0:	mov    DWORD PTR [eax],ebp
  40d8b2:	xchg   BYTE PTR [ecx+0x5b],bh
  40d8b5:	in     eax,dx
  40d8b6:	jno    0x40d8bb
  40d8b8:	add    al,0xfd
  40d8ba:	add    ah,BYTE PTR [eax]
  40d8bc:	cld    
  40d8bd:	jb     0x40d8a0
  40d8bf:	jmp    0x40d8a4
  40d8c1:	cld    
  40d8c2:	gs add ebp,esp
  40d8c5:	jb     0x40d924
  40d8c7:	add    ebp,DWORD PTR [esi+0xd]
  40d8ca:	inc    ecx
  40d8cb:	int    0xe9
  40d8cd:	cld    
  40d8ce:	dec    ebp
  40d8cf:	int    0xa2
  40d8d1:	add    ecx,ebp
  40d8d3:	pop    eax
  40d8d4:	fsubr  st,st(1)
  40d8d6:	cdq    
  40d8d7:	retf   0x505f
  40d8da:	test   BYTE PTR [ebx+eiz*2+0x5],0xe9
  40d8df:	add    eax,DWORD PTR [eax]
	...
  40d911:	add    BYTE PTR [ebx+0x30],ah
  40d914:	inc    edx
  40d915:	add    esi,DWORD PTR [esi]
  40d917:	or     eax,0x5043711
  40d91c:	jmp    0x6a4e10af
  40d921:	cld    
  40d922:	bound  esi,QWORD PTR [ebx-0x28]
  40d925:	push   es
  40d926:	mov    bl,0x88
  40d928:	adc    al,BYTE PTR [esi]
  40d92a:	std    
  40d92b:	test   DWORD PTR [edx-0x1b8de0a1],esi
  40d931:	imul   ebx,DWORD PTR [edi+eax*1+0x726c0445],0x5c9eebed
  40d93c:	jmp    0xf76a444
  40d941:	inc    ebp
  40d942:	arpl   WORD PTR [ebp-0x77],bp
  40d945:	inc    eax
  40d946:	mov    ds:0xec99d105,al
  40d94b:	sti    
  40d94c:	push   DWORD PTR [ebp+0x4473c56d]
  40d952:	pusha  
  40d953:	jb     0x40d95d
  40d955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d956:	dec    ebx
  40d957:	xor    eax,0x885f283e
  40d95c:	ret    
  40d95d:	in     eax,dx
  40d95e:	ins    DWORD PTR es:[edi],dx
  40d95f:	lds    esi,FWORD PTR [esp+esi*1+0x60]
  40d963:	adc    al,BYTE PTR [eax-0x39]
  40d966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d967:	add    eax,0x46a032a3
  40d96c:	add    BYTE PTR [edx-0x5d],ch
  40d96f:	push   eax
  40d970:	aas    
  40d971:	sub    BYTE PTR [edi+0x5],bl
  40d974:	jne    0x40d967
	...
  40d9a6:	add    BYTE PTR [eax],al
  40d9a8:	popa   
  40d9a9:	adc    dh,BYTE PTR [edi+ebx*1]
  40d9ac:	sahf   
  40d9ad:	add    eax,0x54d10eb
  40d9b2:	push   0xffffffe8
  40d9b4:	popa   
  40d9b5:	xor    cl,BYTE PTR [ebx+0x6]
  40d9b8:	es add eax,0x3b1cd4ff
  40d9be:	inc    ecx
  40d9bf:	jmp    0xe24ca1a9
  40d9c4:	mov    al,ds:0x6b262177
  40d9c9:	push   eax
  40d9ca:	aas    
  40d9cb:	test   al,0x60
  40d9cd:	cld    
  40d9ce:	adc    al,0xa5
  40d9d0:	and    al,BYTE PTR [esi+0x0]
  40d9d3:	push   0xffffff9c
  40d9d5:	pop    es
  40d9d6:	(bad)  
  40d9d7:	fcom   QWORD PTR [ebx+edi*1+0x41]
  40d9db:	jmp    0xb68bda79
  40d9e0:	daa    
  40d9e1:	add    eax,0x560e900
  40d9e6:	jmp    0x40d9d0
  40d9e8:	daa    
  40d9e9:	nop
  40d9ea:	ret    0x9842
  40d9ed:	lds    eax,FWORD PTR [edi]
  40d9ef:	jmp    0xe8c13db
  40d9f4:	mov    al,ds:0x8e000005
  40d9f9:	and    al,0xff
  40d9fb:	xor    eax,0x414491
  40da00:	cmc    
  40da01:	adc    cl,BYTE PTR [esi+edi*1-0x75]
  40da05:	add    DWORD PTR [ebx+0x15063ec4],eax
  40da0b:	xor    al,0x0
	...
  40da3d:	add    BYTE PTR [eax+ecx*2],al
  40da40:	add    bh,al
  40da42:	cmovp  edi,DWORD PTR [edi]
  40da45:	inc    ecx
  40da46:	or     al,BYTE PTR [edi]
  40da48:	add    BYTE PTR [eax],al
  40da4a:	cli    
  40da4b:	rcl    DWORD PTR [ebx-0x75],0xd6
  40da4f:	add    dl,0xf0
  40da52:	pop    ecx
  40da53:	mov    BYTE PTR [ebx+0x8],al
  40da56:	add    edi,eax
  40da58:	jb     0x40da65
  40da5a:	jns    0x40dad6
  40da5c:	or     al,0x0
  40da5e:	push   cs
  40da5f:	add    al,0x80
  40da61:	cmp    dl,cl
  40da63:	jae    0x40da6c
  40da65:	sub    ecx,DWORD PTR [edx-0x2d3d36a8]
  40da6b:	push   es
  40da6c:	cmp    BYTE PTR [eax],0x4
  40da6f:	jae    0x40da81
  40da71:	xor    DWORD PTR [edi-0x35bec0b7],0x6
  40da78:	jne    0x40da81
  40da7a:	xchg   ecx,eax
  40da7b:	(bad)  
  40da7c:	pop    ecx
  40da7d:	leave  
  40da7e:	js     0x40da89
  40da80:	add    BYTE PTR [eax+0x3e7484b2],al
  40da86:	add    DWORD PTR [edx+0xc],edx
  40da89:	dec    edx
  40da8a:	stc    
  40da8b:	loop   0x40da8e
  40da8d:	or     ebp,DWORD PTR [eax+0x72]
  40da90:	push   es
  40da91:	xor    edi,0x9
  40da94:	add    DWORD PTR [ebp+0x7e],esi
  40da97:	sub    eax,eax
  40da99:	jmp    0x40daf9
  40da9b:	add    al,0x4d
  40da9d:	or     al,0xf1
  40da9f:	inc    edx
  40daa0:	or     al,0x5
	...
  40dad2:	add    BYTE PTR [eax],al
  40dad4:	arpl   sp,bp
  40dad6:	push   es
  40dad7:	add    BYTE PTR [ebx-0x53],ah
  40dada:	loop   0x40dadd
  40dadc:	mov    bl,0xd4
  40dade:	sbb    al,0x8d
  40dae0:	inc    esp
  40dae1:	mov    ebx,0xe4968b52
  40dae6:	inc    esp
  40dae7:	push   eax
  40dae8:	xor    al,0x31
  40daea:	adc    BYTE PTR [edx+0x3b],dl
  40daed:	mov    ecx,0x4424fe9a
  40daf2:	pop    ebp
  40daf3:	leave  
  40daf4:	and    esp,esp
  40daf6:	add    ch,BYTE PTR [ebx]
  40daf8:	cmp    BYTE PTR [ebx-0x6f3f38b],cl
  40dafe:	or     ch,BYTE PTR [edx+0x63]
  40db01:	push   ss
  40db02:	add    al,0xff
  40db04:	push   esi
  40db05:	mov    ah,0x40
  40db07:	inc    ecx
  40db08:	arpl   WORD PTR [edi-0x39],bp
  40db0b:	addps  xmm5,XMMWORD PTR [edi+esi*2]
  40db0f:	fisub  DWORD PTR gs:[eax+0x616f69fe]
  40db16:	inc    esi
  40db17:	lock xor eax,DWORD PTR [esi+esi*8-0x75]
  40db1c:	int3   
  40db1d:	inc    edx
  40db1e:	ins    DWORD PTR es:[edi],dx
  40db1f:	add    dh,dl
  40db21:	mov    al,ds:0xb8bc4ff2
  40db26:	(bad)  
  40db27:	dec    BYTE PTR [esi-0x5c]
  40db2a:	inc    eax
  40db2b:	inc    ecx
  40db2c:	arpl   WORD PTR [edi-0x39],bp
  40db2f:	or     ebx,DWORD PTR [eax+0x2c]
  40db32:	jbe    0x40db67
  40db34:	out    dx,al
  40db35:	test   al,0xf2
  40db37:	add    BYTE PTR [eax],0x0
	...
  40db6a:	sbb    esp,eax
  40db6c:	add    dh,BYTE PTR [eax+ebp*2+0x77]
  40db70:	inc    ebx
  40db71:	or     BYTE PTR [ebx],ah
  40db73:	pushf  
  40db74:	jmp    0x9b8a:0xfef2efb4
  40db7b:	pop    eax
  40db7c:	inc    esi
  40db7d:	lock ins BYTE PTR es:[edi],dx
  40db7f:	add    al,0x59
  40db81:	or     al,0x10
  40db83:	cli    
  40db84:	pop    eax
  40db85:	or     BYTE PTR [ebx-0x23],cl
  40db88:	call   DWORD PTR fs:[ebp+0x6c]
  40db8c:	jmp    0x19368321
  40db91:	jmp    FWORD PTR [edi+0x39]
  40db94:	inc    DWORD PTR [ebx+eiz*2-0x7c]
  40db98:	lods   al,BYTE PTR ds:[esi]
  40db99:	or     al,0xc9
  40db9b:	push   es
  40db9c:	scas   al,BYTE PTR es:[edi]
  40db9d:	jns    0x40dbce
  40db9f:	stc    
  40dba0:	sti    
  40dba1:	aas    
  40dba2:	gs inc esi
  40dba4:	jmp    0x624efc2b
  40dba9:	ret    
  40dbaa:	mov    ecx,0x630caace
  40dbaf:	push   edx
  40dbb0:	jb     0x40dba2
  40dbb2:	add    eax,0x77feed73
  40dbb7:	or     eax,0x38a01976
  40dbbc:	sub    BYTE PTR [eax+eiz*8],al
  40dbbf:	shl    eax,0x53
  40dbc2:	in     al,0x72
  40dbc4:	in     eax,dx
  40dbc5:	(bad)  
  40dbc6:	push   edi
  40dbc7:	or     eax,0x38941956
  40dbcc:	test   al,0x3
	...
  40dbfe:	add    BYTE PTR [eax],al
  40dc00:	loopne 0x40dbc3
  40dc02:	lock mov ch,BYTE PTR [edi]
  40dc05:	adc    eax,0xce1b0270
  40dc0a:	sub    dl,BYTE PTR [eax]
  40dc0c:	arpl   WORD PTR [edx+0x62],dx
  40dc0f:	lock loope 0x40dbd3
  40dc12:	adc    bh,bh
  40dc14:	das    
  40dc15:	or     DWORD PTR [ecx],edx
  40dc17:	add    esi,edx
  40dc19:	clc    
  40dc1a:	adc    eax,0xe572a30b
  40dc1f:	int3   
  40dc20:	mov    ds:0xffee915,al
  40dc25:	or     DWORD PTR [ecx],edx
  40dc27:	loopne 0x40dbf7
  40dc29:	clc    
  40dc2a:	push   ebp
  40dc2c:	imul   eax,ebp,0xc69fe573
  40dc32:	psubsw mm4,QWORD PTR [ebp+0x71]
  40dc36:	adc    al,0xde
  40dc38:	fist   DWORD PTR ds:0xf863ace8
  40dc3e:	(bad)  
  40dc3f:	loop   0x40dc61
  40dc41:	jno    0x40dc47
  40dc43:	mov    al,0x22
  40dc45:	or     BYTE PTR [eax],al
  40dc47:	push   ecx
  40dc48:	mov    WORD PTR [eax],?
  40dc4a:	inc    ecx
  40dc4b:	jmp    0x287e9418
  40dc50:	addr16 in eax,dx
  40dc52:	mov    edi,DWORD PTR [edi+0x25]
  40dc55:	test   DWORD PTR [edx],0x68089ba9
  40dc5b:	(bad)  
  40dc5c:	push   ebp
  40dc5d:	inc    esi
  40dc5e:	add    BYTE PTR [ecx],al
  40dc60:	mov    bh,0x37
  40dc62:	inc    ecx
  40dc63:	jmp    0x40dc68
	...
  40dc94:	add    BYTE PTR [eax],al
  40dc96:	clc    
  40dc97:	jl     0x40dc2f
  40dc99:	jle    0x40dc98
  40dc9b:	or     al,al
  40dc9d:	out    0xdc,al
  40dc9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dca0:	add    cl,ch
  40dca2:	pusha  
  40dca3:	mov    al,BYTE PTR [ebp+eiz*2-0x70]
  40dca7:	clc    
  40dca8:	je     0x40dc97
  40dcaa:	fst    QWORD PTR [eax]
  40dcac:	das    
  40dcad:	push   ss
  40dcae:	push   ds
  40dcaf:	add    eax,0xc582583
  40dcb4:	shl    dh,0xdb
  40dcb7:	mov    es,WORD PTR [eax]
  40dcb9:	jmp    0x6441481e
  40dcbe:	sub    edi,ebp
  40dcc0:	dec    edi
  40dcc1:	ret    
  40dcc2:	lods   eax,DWORD PTR ds:[esi]
  40dcc3:	pop    edi
  40dcc4:	mov    edi,0xff051fe6
  40dcc9:	xchg   esp,eax
  40dcca:	pushf  
  40dccb:	not    BYTE PTR [esi+ebx*8]
  40dcce:	push   ebp
  40dccf:	inc    esi
  40dcd0:	add    BYTE PTR [edx-0x5c],ch
  40dcd3:	adc    ecx,DWORD PTR [ebx]
  40dcd5:	add    BYTE PTR [edx],bh
  40dcd7:	pop    es
  40dcd8:	test   DWORD PTR [edx-0x75],ebp
  40dcdb:	add    eax,DWORD PTR [eax]
  40dcdd:	push   edi
  40dcdf:	sti    
  40dce0:	std    
  40dce1:	adc    eax,0x4136b1
  40dce6:	stc    
  40dce7:	int3   
  40dce8:	add    al,BYTE PTR [ebx+0x5746e42]
  40dcee:	and    ebx,DWORD PTR [esi+0x1]
  40dcf1:	add    BYTE PTR [edx],bh
  40dcf3:	mov    BYTE PTR [ebx-0xc],al
  40dcf6:	push   0x6b
  40dcf8:	add    bh,bh
	...
  40dd2a:	add    BYTE PTR [eax],al
  40dd2c:	ja     0x40dd27
  40dd2e:	out    0x14,al
  40dd30:	in     eax,dx
  40dd31:	clc    
  40dd32:	std    
  40dd33:	or     edi,edx
  40dd35:	or     BYTE PTR [ecx+edi*1-0x7cfffcc5],al
  40dd3c:	jg     0x40dd3b
  40dd3e:	dec    BYTE PTR [esi]
  40dd40:	xchg   BYTE PTR [eax],ch
  40dd42:	add    DWORD PTR [eax],eax
  40dd44:	cli    
  40dd45:	xor    BYTE PTR [esi],0x0
  40dd48:	or     eax,0xa01247f
  40dd4d:	add    edx,DWORD PTR [eax-0x75]
  40dd50:	push   edi
  40dd51:	std    
  40dd52:	inc    eax
  40dd53:	push   edx
  40dd54:	loop   0x40ddbd
  40dd56:	mov    edi,edi
  40dd58:	jge    0x40ddb5
  40dd5a:	mov    DWORD PTR [ebp+0x32],eax
  40dd5d:	clc    
  40dd5e:	jae    0x40dd54
  40dd60:	sub    eax,0x2252e86e
  40dd65:	mov    cs,WORD PTR [ecx+0x43c01dff]
  40dd6b:	lock retf 0x2
  40dd6f:	add    BYTE PTR [ebp-0x45ff13c2],al
  40dd75:	add    al,BYTE PTR [eax]
  40dd77:	cmp    DWORD PTR [edi-0x75bec0bf],0x2
  40dd7e:	jne    0x40ddd2
  40dd80:	arpl   WORD PTR [esi+esi*1-0x1513ddc0],ax
  40dd87:	sub    DWORD PTR [edi],esp
  40dd89:	in     al,dx
  40dd8a:	add    dl,BYTE PTR [eax+0xb]
  40dd8d:	mov    al,0x42
  40dd8f:	inc    ecx
	...
  40ddc0:	add    BYTE PTR [eax],al
  40ddc2:	arpl   di,bp
  40ddc4:	jne    0x40ddae
  40ddc6:	jnp    0x40dde0
  40ddc8:	pop    edi
  40ddc9:	add    BYTE PTR [ebx-0xd],ah
  40ddcc:	ret    0x7b73
  40ddcf:	push   esp
  40ddd0:	cmp    DWORD PTR [eax-0x5e],eax
  40ddd3:	in     al,dx
  40ddd4:	jmp    0xbb50:0x2ecaf0d
  40dddb:	add    eax,DWORD PTR [ecx+eax*2+0x63]
  40dddf:	mov    bh,0x75
  40dde1:	call   0x9f5a31
  40dde6:	arpl   bx,sp
  40dde8:	ret    0x7173
  40ddeb:	adc    al,0x41
  40dded:	inc    eax
  40ddee:	mov    ds:0xb8f1eaec,al
  40ddf3:	in     al,dx
  40ddf4:	add    dl,BYTE PTR [eax+0x7b]
  40ddf7:	sub    eax,DWORD PTR [ecx+eax*2+0x63]
  40ddfb:	jg     0x40de72
  40ddfd:	call   0x9f2e0d
  40de02:	arpl   WORD PTR [ebx+0x2c9f681a],ax
  40de08:	inc    ebx
  40de09:	add    bl,bh
  40de0b:	inc    ebx
  40de0c:	pop    eax
  40de0d:	add    BYTE PTR [ebx-0x44],ah
  40de10:	push   0x4c
  40de12:	and    ebp,DWORD PTR [ebp+0x4456ff02]
  40de18:	jmp    0x40de93
  40de1a:	es in  al,dx
  40de1c:	add    cl,BYTE PTR [ebx]
  40de1e:	mov    ds:0x1e8d6cb0,eax
  40de23:	cmp    BYTE PTR [ebx+0x6a],dl
	...
  40de56:	add    BYTE PTR [eax],al
  40de58:	bound  esp,QWORD PTR [edi]
  40de5a:	jbe    0x40de54
  40de5c:	mov    ebx,0x9dfdb204
  40de61:	cmc    
  40de62:	sbb    eax,0x1548f76
  40de67:	inc    esi
  40de68:	mov    ?,ebp
  40de6a:	or     eax,0x73f51f8a
  40de6f:	inc    esi
  40de70:	ja     0x40dec6
  40de72:	xchg   ebx,eax
  40de73:	add    DWORD PTR [edi+ebp*2-0xf],esi
  40de77:	jmp    0x6f65:0xfbedf733
  40de7e:	fst    QWORD PTR [ebx+ecx*2+0x21]
  40de82:	fdiv   st(3),st
  40de84:	push   ebp
  40de85:	jg     0x40deb2
  40de87:	call   0x502516d
  40de8c:	iret   
  40de8d:	cmp    DWORD PTR [edx+0x79],ebp
  40de90:	dec    edi
  40de91:	push   es
  40de92:	xor    eax,0xe905cb2a
  40de97:	jmp    0xf43b:0xc33f4ee
  40de9e:	outs   dx,BYTE PTR ds:[esi]
  40de9f:	sti    
  40dea0:	sbb    eax,0x15ec13f5
  40dea5:	jnp    0x40de88
  40dea7:	jmp    0x40de60
  40dea9:	mov    WORD PTR [ebp+0x797b05fb],cs
  40deaf:	sti    
  40deb0:	ja     0x40deaf
  40deb2:	nop
  40deb3:	dec    esi
  40deb4:	fdivr  st(4),st
  40deb6:	jne    0x40deb3
  40deb8:	ja     0x40de9b
  40deba:	ins    DWORD PTR es:[edi],dx
  40debb:	jno    0x40debd
	...
  40deed:	add    BYTE PTR [ebx-0x23],bl
  40def0:	and    eax,0x5df4dd83
  40def5:	jno    0x40deca
  40def7:	frstor [ebp+ecx*4+0x714df4cd]
  40defe:	mov    bh,0xdd
  40df00:	lods   al,BYTE PTR ds:[esi]
  40df01:	lea    edi,[ebp-0x348ec20c]
  40df07:	(bad)  
  40df09:	hlt    
  40df0a:	fdivrp st(3),st
  40df0c:	inc    BYTE PTR [eax-0x2f]
  40df0f:	repnz (bad) 
  40df11:	es cwde 
  40df13:	jns    0x40df11
  40df15:	push   ds
  40df16:	jb     0x40df50
  40df18:	aas    
  40df19:	test   al,0x60
  40df1b:	mov    bl,al
  40df1d:	in     eax,0x78
  40df1f:	fwait
  40df20:	sti    
  40df21:	push   es
  40df22:	js     0x40dee1
  40df24:	rcr    ecx,0x60
  40df27:	pop    edx
  40df28:	mov    eax,DWORD PTR ds:0xee005f14
  40df2e:	repz cld 
  40df30:	out    0x9a,eax
  40df32:	jmp    0x40df26
  40df34:	(bad)  
  40df35:	jb     0x40df6f
  40df37:	push   edi
  40df38:	call   0x468d36
  40df3d:	loop   0x40df5f
  40df3f:	js     0x40df5c
  40df41:	jmp    0x3be0:0xdbeb4c25
  40df48:	or     eax,0x3785623d
  40df4d:	jecxz  0x40df02
  40df4f:	or     al,dh
  40df51:	jmp    0x40df56
	...
  40df82:	add    BYTE PTR [eax],al
  40df84:	pusha  
  40df85:	loopne 0x40df88
  40df87:	xchg   edx,eax
  40df88:	arpl   WORD PTR ds:0xdf95aa3b,di
  40df8e:	mov    ch,BYTE PTR [edx-0x123e415b]
  40df94:	pusha  
  40df95:	pop    edx
  40df96:	mov    ecx,DWORD PTR [ebp+0x1eb3c7dd]
  40df9c:	call   0xb5c1ec19
  40dfa1:	cmp    esi,0x74c56d66
  40dfa7:	in     al,0x39
  40dfa9:	mov    esi,0xf460f9c1
  40dfae:	je     0x40df8d
  40dfb0:	mov    eax,0x2500ab86
  40dfb5:	out    dx,eax
  40dfb6:	or     eax,eax
  40dfb8:	out    dx,al
  40dfb9:	add    al,0x5f
  40dfbb:	leave  
  40dfbc:	js     0x40dfd6
  40dfbe:	add    bh,bh
  40dfc0:	out    dx,eax
  40dfc1:	add    edi,edi
  40dfc3:	jne    0x40df5f
  40dfc5:	fild   QWORD PTR [ecx-0x5]
  40dfc8:	jne    0x40dfb9
  40dfca:	mov    eax,DWORD PTR [ebp+0x6a]
  40dfcd:	pop    eax
  40dfce:	push   DWORD PTR [ebp-0x5a]
  40dfd1:	fistp  QWORD PTR [edi]
  40dfd3:	(bad)  
  40dfd4:	gs out dx,eax
  40dfd6:	or     eax,eax
  40dfd8:	test   DWORD PTR [ebx-0x6],esi
  40dfdb:	add    bh,BYTE PTR [edx+0x7]
  40dfde:	push   DWORD PTR [ebp+0x76]
  40dfe1:	in     eax,dx
  40dfe2:	jae    0x40dfdc
  40dfe4:	xor    cl,ah
  40dfe6:	xchg   edx,eax
  40dfe7:	inc    DWORD PTR [eax]
	...
  40e019:	add    BYTE PTR ds:0xbe0fc001,dh
  40e01f:	int3   
  40e020:	add    BYTE PTR [eax],al
  40e022:	cmp    al,BYTE PTR [eax-0xe4e13bd]
  40e028:	jle    0x40e069
  40e02a:	dec    edx
  40e02b:	inc    BYTE PTR [ebx+0x738c9]
  40e031:	push   edi
  40e032:	and    al,BYTE PTR [ebx-0x1]
  40e035:	inc    ebp
  40e037:	jle    0x40e07c
  40e039:	shl    ch,1
  40e03b:	(bad)  
  40e03c:	shr    BYTE PTR [eax-0x57],1
  40e03f:	sub    al,0x41
  40e041:	add    dl,ah
  40e043:	adc    bl,BYTE PTR [ebx+0x0]
  40e046:	or     dl,BYTE PTR [edi-0x1]
  40e049:	jne    0x40e025
  40e04b:	popa   
  40e04c:	mov    bh,0x3f
  40e04e:	cmp    ecx,DWORD PTR [ecx]
  40e050:	call   0x4a316c
  40e055:	push   eax
  40e056:	inc    ebp
  40e057:	(bad)  
  40e058:	shr    BYTE PTR [eax+0x1],1
  40e05b:	sub    eax,0x44630041
  40e060:	or     ebx,DWORD PTR [ebx+0x63]
  40e063:	fcomp  QWORD PTR [ecx+ebx*2+0x68]
  40e067:	sbb    al,0x70
  40e069:	or     al,0x68
  40e06b:	push   cs
  40e06c:	jo     0x40e076
  40e06e:	pop    eax
  40e06f:	and    eax,0xde268509
  40e074:	add    al,BYTE PTR [eax]
  40e076:	push   0x9c096f35
  40e07b:	test   eax,0xae
	...
  40e0b0:	arpl   sp,bx
  40e0b2:	add    ch,bl
  40e0b4:	pop    esp
  40e0b5:	sub    edi,DWORD PTR [edi]
  40e0b7:	mov    ah,0x63
  40e0b9:	fadd   QWORD PTR [edx]
  40e0bb:	add    BYTE PTR [edi-0x51],dh
  40e0be:	ret    0x6cb8
  40e0c1:	sti    
  40e0c2:	idiv   esi
  40e0c4:	jno    0x40e0f8
  40e0c6:	cmp    al,0x7
  40e0c8:	(bad)  
  40e0c9:	fdivr  QWORD PTR [edi+0x2dc4b44]
  40e0cf:	add    BYTE PTR [ebx+0x5c],ah
  40e0d2:	cmp    BYTE PTR [eax],al
  40e0d4:	push   esp
  40e0d5:	push   0xdc63024c
  40e0da:	dec    edi
  40e0db:	call   0xff3892f4
  40e0e0:	fisub  DWORD PTR [eax]
  40e0e2:	enter  0xa682,0xc4
  40e0e6:	add    dh,BYTE PTR [ebp+0x42]
  40e0e9:	adc    al,0xb5
  40e0eb:	sub    esp,DWORD PTR [edx+0x1f74f7dc]
  40e0f1:	test   BYTE PTR [ecx+0xbdc6359],ch
  40e0f7:	shr    BYTE PTR [ecx+eiz*2+0x6],0x2
  40e0fc:	arpl   sp,bx
  40e0fe:	mov    edi,0x2dcfb44
  40e103:	add    BYTE PTR [ebx-0x7b],ah
  40e106:	add    DWORD PTR [edx],eax
  40e108:	arpl   WORD PTR ds:0xdd5784e9,ax
  40e10e:	out    0x6e,eax
  40e110:	pop    esp
  40e111:	jl     0x40e0e6
  40e113:	fild   WORD PTR [eax]
	...
  40e145:	add    BYTE PTR [ebp+0x63054147],bl
  40e14b:	add    eax,0x3eeeae9
  40e150:	jmp    0x41b0c158
  40e155:	add    eax,0x7660022e
  40e15a:	or     ecx,0xffffffab
  40e15d:	jmp    0x40e1c0
  40e15f:	add    eax,0xa37a03e9
  40e164:	out    0x3,eax
  40e166:	arpl   WORD PTR [esi+0x7861eb8b],ax
  40e16c:	test   BYTE PTR [edx+0x3e25d0f7],0x7b
  40e173:	or     cl,ch
  40e175:	add    esp,DWORD PTR [ebx-0x24]
  40e178:	pop    esp
  40e179:	add    ah,BYTE PTR [ebx+0x5]
  40e17c:	push   0x79
  40e17e:	dec    ebx
  40e17f:	or     dl,BYTE PTR [edi+eax*1-0x26]
  40e183:	jb     0x40e136
  40e185:	mov    edi,0x3e3dd9f
  40e18a:	arpl   WORD PTR ds:0x5626fd0,ax
  40e190:	jmp    0xec1e9117
  40e195:	push   es
  40e196:	fisub  WORD PTR [ebp-0x18]
  40e199:	add    esp,DWORD PTR [ebx+0x7e]
  40e19c:	and    edx,eax
  40e19e:	loope  0x40e212
  40e1a0:	push   ebp
  40e1a1:	add    al,0x97
  40e1a3:	(bad)  
  40e1a4:	lods   eax,DWORD PTR ds:[esi]
  40e1a5:	inc    ecx
  40e1a6:	sti    
  40e1a7:	add    ebp,ecx
  40e1a9:	add    eax,DWORD PTR [eax]
	...
  40e1db:	add    BYTE PTR [ebx-0x24],ah
  40e1de:	in     eax,dx
  40e1df:	mov    esi,0x3e6dd9f
  40e1e4:	arpl   WORD PTR ds:0xc5a2ae00,ax
  40e1ea:	(bad)  
  40e1eb:	call   0xad07e750
  40e1f0:	test   al,0xf0
  40e1f2:	(bad)  
  40e1f3:	jmp    0x2d85aa58
  40e1f8:	pop    edi
  40e1f9:	add    eax,0x49fde900
  40e1fe:	mov    esp,0x560e9
  40e203:	and    ch,BYTE PTR es:[ebp+0x560e8ff]
  40e20a:	push   DWORD PTR [esp+edi*4-0x73d8ed18]
  40e211:	out    dx,eax
  40e212:	mov    BYTE PTR [eax+eiz*4+0x773574ef],ah
  40e219:	or     dh,bh
  40e21b:	push   cs
  40e21c:	je     0x40e29b
  40e21e:	inc    esp
  40e21f:	xor    DWORD PTR [ecx+edi*2-0x2c],ebp
  40e223:	adc    DWORD PTR [edx-0xf],ebp
  40e226:	(bad)  
  40e227:	not    bh
  40e229:	dec    ecx
  40e22a:	les    ebp,FWORD PTR [edx-0x66]
  40e22d:	dec    eax
  40e22e:	aas    
  40e22f:	sub    BYTE PTR [edi+0x5],bl
  40e232:	jne    0x40e26f
  40e234:	mov    edi,0x5f284039
  40e239:	fisttp QWORD PTR [eax+esi*1]
  40e23c:	addr16 add eax,0x5150
	...
  40e272:	jae    0x40e2b9
  40e274:	inc    ecx
  40e275:	jmp    0xc2015baf
  40e27a:	std    
  40e27b:	dec    ebp
  40e27c:	add    cl,ch
  40e27e:	imul   eax,ebp,0x2c870173
  40e284:	inc    eax
  40e285:	sub    BYTE PTR [edi-0x23],ah
  40e288:	lock xor DWORD PTR [edi+0x5],ebx
  40e28c:	push   eax
  40e28d:	add    DWORD PTR [eax],edi
  40e28f:	inc    ebp
  40e290:	inc    ecx
  40e291:	add    BYTE PTR [edx],cl
  40e293:	div    DWORD PTR [ebx-0x40]
  40e296:	rcl    BYTE PTR [edx-0x505ffa8],cl
  40e29c:	mov    edi,0x435c1874
  40e2a1:	inc    eax
  40e2a2:	or     eax,DWORD PTR [eax+ebp*8]
  40e2a5:	aad    0xa2
  40e2a7:	add    eax,DWORD PTR [eax]
  40e2a9:	push   eax
  40e2aa:	mov    ds:0xca414042,al
  40e2af:	div    BYTE PTR [ebx-0x40]
  40e2b2:	adc    bl,BYTE PTR [edi+0x5a]
  40e2b5:	add    BYTE PTR [edx-0x197e926],bh
  40e2bb:	inc    ebx
  40e2bc:	inc    ecx
  40e2bd:	add    BYTE PTR [edx],ah
  40e2bf:	stos   DWORD PTR es:[edi],eax
  40e2c0:	push   esi
  40e2c1:	add    BYTE PTR [edx-0x45b397ad],cl
  40e2c7:	dec    eax
  40e2c8:	add    bh,bh
  40e2ca:	out    0xc3,eax
  40e2cc:	out    0x5d,al
  40e2ce:	mov    al,0x3
  40e2d0:	add    BYTE PTR [ebx],cl
  40e2d2:	dec    edx
  40e2d3:	jne    0x40e337
  40e2d5:	inc    DWORD PTR [eax]
	...
  40e307:	add    bh,dh
  40e309:	mov    ebx,0x3d2a1e6
  40e30e:	add    BYTE PTR [eax+0x4d],dl
  40e311:	pop    edi
  40e312:	enter  0x6ce8,0xeb
  40e316:	std    
  40e317:	call   ebx
  40e319:	cs mov esp,0xe6c5a7ff
  40e31f:	lea    esi,[edx+0x9]
  40e322:	add    BYTE PTR [eax+0x1d],dl
  40e325:	pop    edi
  40e326:	(bad)  
  40e327:	call   0x3ed06c
  40e32c:	ret    
  40e32d:	cs mov eax,0xfec94f83
  40e333:	jae    0x40e36b
  40e335:	xchg   BYTE PTR [ebx-0x48],bh
  40e338:	cli    
  40e339:	pop    esi
  40e33a:	cs push 0xef02dc63
  40e340:	mov    ebp,0xb086e7f
  40e345:	call   0xc06f:0x6fecfe80
  40e34c:	in     al,0xf1
  40e34e:	or     ch,al
  40e350:	daa    
  40e351:	push   0xd1d4fef5
  40e356:	mov    dh,0xfe
  40e358:	push   esi
  40e359:	hlt    
  40e35a:	jmp    0x36fe:0xf557df38
  40e361:	xchg   esp,eax
  40e362:	hlt    
  40e363:	je     0x40e3d0
  40e365:	push   esp
  40e366:	test   BYTE PTR es:[edi+ebp*1+0x74f5],ch
	...
  40e39e:	mov    ds:0x9c873944,eax
  40e3a3:	pop    ds
  40e3a4:	cmc    
  40e3a5:	je     0x40e352
  40e3a7:	adc    al,0x31
  40e3a9:	xchg   DWORD PTR [edi+ecx*1+0x49f74f5],ecx
  40e3b0:	sub    DWORD PTR [edi+0x74f4ff7c],eax
  40e3b6:	mov    bh,0x14
  40e3b8:	and    DWORD PTR [edi+0x74f3ef6c],eax
  40e3be:	stos   DWORD PTR es:[edi],eax
  40e3bf:	add    al,0x19
  40e3c1:	xchg   DWORD PTR [edi+ebx*8-0x19],ebx
  40e3c5:	or     al,0xe0
  40e3c7:	push   0xe7d605ec
  40e3cc:	mov    ebx,0x2da3b44
  40e3d1:	add    BYTE PTR [ebx+0x5b],ah
  40e3d4:	jbe    0x40e3be
  40e3d6:	arpl   WORD PTR [eax],si
  40e3d8:	xor    al,0x68
  40e3da:	lock inc DWORD PTR [edx+0x0]
  40e3de:	and    al,0x31
  40e3e0:	enter  0xd4e7,0x13
  40e3e4:	add    al,0x0
  40e3e6:	push   0x646ea905
  40e3eb:	(bad)  
  40e3ec:	and    ebp,esp
  40e3ee:	arpl   WORD PTR ds:0x358b03e9,ax
  40e3f4:	sub    DWORD PTR [ebx+0x63],eax
  40e3f7:	out    dx,al
  40e3f8:	sti    
  40e3f9:	mov    DWORD PTR [esi+ecx*4],0xfa630420
  40e400:	test   al,0x6e
	...
  40e432:	add    BYTE PTR [eax],al
  40e434:	fs (bad) 
  40e436:	and    ebp,esp
  40e438:	bound  eax,QWORD PTR ds:0x77cc03e9
  40e43e:	sub    eax,0x558696eb
  40e443:	hlt    
  40e444:	mov    eax,0xb5ba2931
  40e449:	in     eax,dx
  40e44a:	inc    ebp
  40e44b:	hlt    
  40e44c:	mov    dl,0x9e
  40e44e:	add    ch,bh
  40e450:	push   ebp
  40e451:	mov    BYTE PTR [esi+esi*8+0x6e2ded9d],al
  40e458:	mov    bl,0xdc
  40e45a:	pop    esp
  40e45b:	jge    0x40e3ea
  40e45d:	in     eax,dx
  40e45e:	sbb    eax,0x44dc776e
  40e463:	jge    0x40e4e2
  40e465:	in     eax,dx
  40e466:	pop    ebx
  40e467:	ds jae 0x40e4be
  40e46a:	adc    ecx,edx
  40e46c:	fsubr  st,st(5)
  40e46e:	std    
  40e46f:	jmp    0xbebd:0xf3f5ec55
  40e476:	sub    dl,BYTE PTR [ebx]
  40e478:	arpl   WORD PTR [edx+0x72],dx
  40e47b:	loopne 0x40e460
  40e47d:	rcl    DWORD PTR [edx+esi*8-0x765212bb],0xf4
  40e485:	jmp    0x40e454
  40e487:	repz xor al,0xed
  40e48a:	call   0xd583bc92
  40e48f:	(bad)  
  40e490:	in     al,0x71
  40e492:	add    ah,ch
  40e494:	loopne 0x40e4ca
  40e496:	add    BYTE PTR [eax+eax*1],dh
	...
  40e4c9:	add    BYTE PTR [edx-0x22],ch
  40e4cc:	hlt    
  40e4cd:	call   0x153fea32
  40e4d2:	imul   ebx,ebp,0x5d
  40e4d5:	js     0x40e4c7
  40e4d7:	jmp    0x40e4e3
  40e4d9:	test   eax,0x4167fc7a
  40e4de:	inc    ebx
  40e4df:	inc    esi
  40e4e0:	add    BYTE PTR [esi+0x6a],bh
  40e4e3:	adc    eax,ebp
  40e4e5:	jb     0x40e545
  40e4e7:	jmp    0x40e4e7
  40e4e9:	and    BYTE PTR [edx+0x5d],0xbd
  40e4ed:	adc    eax,0xd4ff0526
  40e4f2:	ins    BYTE PTR es:[edi],dx
  40e4f3:	fucomp st(3)
  40e4f5:	pusha  
  40e4f6:	mov    al,0xeb
  40e4f8:	mov    BYTE PTR [edi+eax*1-0x15],ah
  40e4fc:	inc    BYTE PTR [esi+0xf]
  40e4ff:	sub    eax,DWORD PTR [ecx]
  40e501:	jmp    0x2bc55f66
  40e506:	xchg   ecx,eax
  40e507:	jmp    0x40e507
  40e509:	cdq    
  40e50a:	mov    eax,0x90268668
  40e50f:	jns    0x40e495
  40e511:	sub    edx,DWORD PTR [ecx+0x71b9feeb]
  40e517:	mov    cl,0xb7
  40e519:	pshufw mm5,mm3,0xe7
  40e51d:	dec    ecx
  40e51e:	or     BYTE PTR ds:0xb0da7000,al
  40e524:	std    
  40e525:	not    BYTE PTR [ecx+0x2c]
  40e528:	pcmpgtw mm7,mm0
  40e52b:	add    al,0x0
  40e52d:	jmp    0x40e532
	...
  40e55e:	add    BYTE PTR [eax],al
  40e560:	jecxz  0x40e4f2
  40e562:	rcr    edi,0x51
  40e565:	jmp    0x40e55d
  40e567:	jmp    0x40e5b9
  40e569:	add    eax,0x8161e900
  40e56e:	add    BYTE PTR [eax],0x3a
  40e571:	or     BYTE PTR [eax],al
  40e573:	lea    edi,[eax+0x25]
  40e576:	push   eax
  40e577:	push   0x410c99
  40e57c:	and    bl,BYTE PTR [ecx+0x57]
  40e57f:	add    dl,bh
  40e581:	jmp    0x147:0xc8ff75be
  40e588:	or     cl,BYTE PTR [eax]
  40e58a:	lea    edx,[ebp-0x20a38]
  40e590:	ja     0x40e5d4
  40e592:	sub    al,0x50
  40e594:	push   edx
  40e595:	scas   al,BYTE PTR es:[edi]
  40e596:	sub    al,BYTE PTR [ecx-0x36]
  40e599:	iret   
  40e59a:	pop    edx
  40e59b:	push   edi
  40e59c:	retf   0xb07
  40e59f:	shr    BYTE PTR [edi-0x44d31704],0x7
  40e5a6:	add    bh,bh
  40e5a8:	lahf   
  40e5a9:	adc    ebp,eax
  40e5ab:	mov    edx,0xbfdf73a
  40e5b0:	jp     0x40e61f
  40e5b2:	punpckhbw mm7,QWORD PTR [ebp+0x10]
  40e5b6:	inc    ecx
  40e5b7:	add    BYTE PTR [ebp+0x6d],dl
  40e5ba:	adc    al,0xe8
  40e5bc:	in     eax,dx
  40e5bd:	push   0xea71fffe
  40e5c2:	push   0x0
	...
  40e5f3:	add    BYTE PTR [eax],al
  40e5f5:	add    BYTE PTR [ebp+0x6d],ah
  40e5f8:	adc    al,0xe8
  40e5fa:	shr    DWORD PTR [eax-0x2],0xff
  40e5fe:	pop    ss
  40e5ff:	(bad)  
  40e600:	sar    dh,0x65
  40e603:	test   DWORD PTR [ebx+0x50519652],0xfe69c5e8
  40e60d:	(bad)  
  40e60e:	cli    
  40e60f:	push   esi
  40e610:	push   DWORD PTR [ebp+0x4a]
  40e613:	div    BYTE PTR [ebx+0xc]
  40e616:	and    eax,0x63e80873
  40e61b:	iret   
  40e61c:	icebp  
  40e61d:	(bad)  
  40e61e:	xor    al,0xc5
  40e620:	mov    BYTE PTR [esp+ebp*1+0x63dcdac4],al
  40e627:	fadd   QWORD PTR [edx]
  40e629:	lea    esp,[ecx-0x307b8500]
  40e62f:	call   0x4131:0x227bfef0
  40e636:	arpl   WORD PTR [ebx-0x6c024c4a],cx
  40e63c:	lock out 0x5e,eax
  40e63f:	xor    al,0x4
  40e641:	add    BYTE PTR [eax-0x64],bl
  40e644:	ja     0x40e674
  40e646:	jnp    0x40e5eb
  40e648:	sbb    eax,DWORD PTR [ecx+0x63]
  40e64b:	jae    0x40e6c4
  40e64d:	adc    al,0xcb
  40e64f:	jae    0x40e6cd
  40e651:	dec    ah
  40e653:	arpl   WORD PTR [edi-0xeb43a4d],si
  40e659:	dec    edi
	...
  40e68a:	add    BYTE PTR [eax],al
  40e68c:	retf   
  40e68d:	adc    edi,DWORD PTR [ebx-0x2]
  40e690:	mov    ah,0xac
  40e692:	out    dx,eax
  40e693:	je     0x40e6e8
  40e695:	inc    ebx
  40e696:	ja     0x40e6a4
  40e698:	adc    ebp,DWORD PTR [ebx]
  40e69a:	ja     0x40e6a4
  40e69c:	mov    esi,DWORD PTR [ebx]
  40e69e:	in     al,dx
  40e69f:	(bad)  
  40e6a0:	xchg   esp,eax
  40e6a1:	inc    esp
  40e6a2:	cmp    DWORD PTR [ebp-0x4b0edc74],eax
  40e6a8:	iret   
  40e6a9:	or     dh,cl
  40e6ab:	dec    BYTE PTR [ebx+0x630058cc]
  40e6b1:	pop    edi
  40e6b2:	in     al,dx
  40e6b3:	add    ecx,esi
  40e6b5:	(bad)  
  40e6b6:	jnp    0x40e64c
  40e6b8:	scas   eax,DWORD PTR es:[edi]
  40e6b9:	jmp    0xe985:0xc60feef
  40e6c0:	popa   
  40e6c1:	add    BYTE PTR [ecx+0x5a057d39],0x77
  40e6c8:	popa   
  40e6c9:	fisubr WORD PTR [eax]
  40e6cb:	pop    esp
  40e6cc:	out    dx,al
  40e6cd:	sub    DWORD PTR [eax],ebp
  40e6cf:	add    al,0x34
  40e6d1:	mov    al,0x94
  40e6d3:	icebp  
  40e6d4:	sub    eax,0x8d90d0ea
  40e6d9:	add    eax,0x8c8b53e9
  40e6de:	cmc    
  40e6df:	inc    edx
  40e6e0:	arpl   dx,bp
  40e6e2:	jae    0x40e69b
  40e6e4:	push   cs
  40e6e5:	jmp    0x3e9:0x51d6dba5
  40e6ec:	xchg   ebx,eax
  40e6ed:	pop    ebp
  40e6ee:	dec    edi
  40e6ef:	xor    BYTE PTR [eax],al
	...
  40e721:	add    BYTE PTR [edx-0x4f4971fb],ah
  40e727:	jmp    0x416:0x67fcf085
  40e72e:	arpl   WORD PTR [edi+0x10],cx
  40e731:	std    
  40e732:	adc    al,0x70
  40e734:	loope  0x40e732
  40e736:	mov    dl,0x6f
  40e738:	in     eax,dx
  40e739:	cld    
  40e73a:	fwait
  40e73b:	jo     0x40e74c
  40e73d:	pop    esp
  40e73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e73f:	sbb    al,0xa8
  40e741:	add    esi,DWORD PTR [edi+ebp*2+0x7d47dbf5]
  40e748:	inc    ebp
  40e749:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e74b:	scas   eax,DWORD PTR es:[edi]
  40e74c:	je     0x40e73f
  40e74e:	popf   
  40e74f:	jmp    0x7d08c2ec
  40e754:	sub    eax,0x9bea1cf0
  40e759:	adc    eax,DWORD PTR [edi+ebp*2+0x6f7c53ed]
  40e760:	loope  0x40e73d
  40e762:	mov    al,ds:0x84f00dee
  40e767:	lahf   
  40e768:	ins    BYTE PTR es:[edi],dx
  40e769:	lock gs ja 0x40e7d0
  40e76d:	lds    ebx,FWORD PTR [esi-0x17]
  40e770:	push   ebp
  40e772:	mov    cl,0xe8
  40e774:	mov    ah,0x2d
  40e776:	push   edx
  40e777:	call   0x4f99b97a
  40e77c:	add    cl,ch
  40e77e:	jmp    0x40e728
  40e780:	push   cs
  40e781:	ins    BYTE PTR es:[edi],dx
  40e782:	mov    ebx,0xcefee7
	...
  40e7b7:	add    BYTE PTR [edx+esi*4],bh
  40e7ba:	mov    ebx,0xe7e834c7
  40e7bf:	out    dx,eax
  40e7c0:	mov    dh,0x5
  40e7c2:	add    BYTE PTR [esi-0x51024f26],dh
  40e7c8:	cld    
  40e7c9:	loopne 0x40e83f
  40e7cb:	ins    DWORD PTR es:[edi],dx
  40e7cc:	hlt    
  40e7cd:	out    0xc8,eax
  40e7cf:	stos   DWORD PTR es:[edi],eax
  40e7d0:	push   edi
  40e7d1:	add    eax,0xe8036255
  40e7d6:	je     0x40e7b5
  40e7d8:	std    
  40e7d9:	jno    0x40e7eb
  40e7db:	xchg   BYTE PTR [edx-0x7],ch
  40e7de:	(bad)  
  40e7df:	hlt    
  40e7e0:	fsub   st,st(0)
  40e7e2:	ret    
  40e7e3:	je     0x40e7a9
  40e7e5:	out    0xc8,eax
  40e7e7:	stos   DWORD PTR es:[edi],eax
  40e7e8:	arpl   WORD PTR ds:0x83c37255,ax
  40e7ee:	ret    
  40e7ef:	pop    ecx
  40e7f0:	adc    al,0xe8
  40e7f2:	je     0x40e7d9
  40e7f4:	cwde   
  40e7f5:	bound  ecx,QWORD PTR [ecx-0x400443b2]
  40e7fb:	mov    esp,0x2bc9485b
  40e800:	arpl   WORD PTR ds:0xdd70bcff,ax
  40e806:	push   esp
  40e807:	pusha  
  40e808:	jl     0x40e7f1
  40e80a:	or     ch,BYTE PTR [ecx]
  40e80c:	or     al,BYTE PTR [edx]
  40e80e:	pop    edi
  40e80f:	xor    BYTE PTR [ecx-0x5ea0004],ah
  40e815:	clc    
  40e816:	out    0xf0,eax
  40e818:	in     eax,dx
  40e819:	out    0xfe,al
	...
  40e84b:	add    BYTE PTR [eax],al
  40e84d:	add    BYTE PTR [ecx-0x3c],dh
  40e850:	jae    0x40e861
  40e852:	repnz mov esi,0xd74a4126
  40e858:	jae    0x40e866
  40e85a:	bound  ebp,QWORD PTR [edi-0x34c2007b]
  40e860:	or     BYTE PTR [edx+0x4a],ch
  40e863:	xlat   BYTE PTR ds:[ebx]
  40e864:	jae    0x40e872
  40e866:	and    cl,BYTE PTR [esi+0x691dff85]
  40e86c:	inc    esp
  40e86d:	hlt    
  40e86e:	xchg   edx,eax
  40e86f:	sub    BYTE PTR [edi],bh
  40e871:	inc    ecx
  40e872:	or     dl,bh
  40e874:	jae    0x40e86a
  40e876:	and    bh,BYTE PTR [esi-0x7b]
  40e879:	(bad)  
  40e87a:	mov    ebp,0x72f84468
  40e87f:	retf   
  40e880:	sti    
  40e881:	add    BYTE PTR [edx],cl
  40e883:	int3   
  40e884:	add    eax,DWORD PTR [ebp+ecx*8-0x21ba782a]
  40e88b:	dec    ebx
  40e88c:	add    BYTE PTR [eax],dl
  40e88e:	cli    
  40e88f:	add    ebp,eax
  40e891:	clc    
  40e892:	dec    ecx
  40e893:	xlat   BYTE PTR ds:[ebx]
  40e894:	std    
  40e895:	mov    DWORD PTR [edi+0x5275fdf1],eax
  40e89b:	int3   
  40e89c:	test   al,0x88
  40e89e:	cmp    eax,0xcdc009d7
  40e8a3:	jg     0x40e860
  40e8a5:	add    dl,cl
  40e8a7:	add    edi,edi
  40e8a9:	jne    0x40e8bd
  40e8ab:	dec    esp
  40e8ac:	call   0xff44a3ae
  40e8b1:	jne    0x40e8b3
	...
  40e8e3:	add    BYTE PTR [esi-0x34],bl
  40e8e6:	adc    BYTE PTR [ebp-0x76],0x3
  40e8ea:	cmp    eax,0x78
  40e8ed:	out    0x84,al
  40e8ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8f0:	jp     0x40e8f5
  40e8f2:	add    BYTE PTR [ebx+0x3f7ed7df],cl
  40e8f8:	arpl   si,bx
  40e8fa:	std    
  40e8fb:	or     ebx,0xffffffdd
  40e8fe:	add    al,BYTE PTR [eax]
  40e900:	sti    
  40e901:	mov    eax,ds:0x8f63412d
  40e906:	fidivr DWORD PTR [ecx]
  40e908:	lods   eax,DWORD PTR ds:[esi]
  40e909:	fadd   QWORD PTR [edx]
  40e90b:	or     esp,DWORD PTR [ebx]
  40e90d:	jno    0x40e985
  40e90f:	dec    esi
  40e911:	in     al,0x5b
  40e913:	jmp    FWORD PTR [esp+ebx*8+0x2]
  40e917:	jmp    FWORD PTR [esi+0x7bc95bcc]
  40e91d:	sbb    eax,0xffb46804
  40e922:	inc    edx
  40e923:	add    BYTE PTR [esp+edx*8-0x239caace],dh
  40e92a:	idiv   DWORD PTR [edi+0x74ed1497]
  40e930:	or     edx,DWORD PTR [ebx]
  40e932:	add    ebp,DWORD PTR [eax-0x79]
  40e935:	mov    DWORD PTR [ecx+0x0],0x5536848c
  40e93c:	arpl   sp,bx
  40e93e:	jg     0x40e937
  40e940:	(bad)  
  40e941:	jmp    0x6c97e87b
  40e946:	in     eax,dx
  40e947:	je     0x40e949
	...
  40e979:	add    bh,cl
  40e97b:	test   cl,ch
  40e97d:	test   esp,ecx
  40e97f:	push   edi
  40e980:	push   esp
  40e981:	mov    esi,DWORD PTR [ebx+0x797ffb53]
  40e987:	div    DWORD PTR [esi+0x3]
  40e98a:	popf   
  40e98b:	fimul  DWORD PTR [esi+0x42]
  40e98e:	pop    eax
  40e98f:	sub    bh,BYTE PTR [eax+0x5]
  40e992:	jecxz  0x40e996
  40e994:	add    al,0x75
  40e996:	lea    esp,[edi]
  40e998:	ja     0x40e9aa
  40e99a:	xor    ebp,DWORD PTR [edi]
  40e99c:	ja     0x40e9a6
  40e99e:	jnp    0x40e9bf
  40e9a0:	out    dx,al
  40e9a1:	inc    BYTE PTR [ebp+eax*1-0x191fceef]
  40e9a8:	sbb    eax,0x9be666d9
  40e9ad:	adc    ebp,DWORD PTR [eax+esi*2+0x19]
  40e9b1:	in     eax,dx
  40e9b2:	out    dx,eax
  40e9b3:	cld    
  40e9b4:	adc    BYTE PTR [edx-0x100219a2],dh
  40e9ba:	xchg   ecx,eax
  40e9bb:	lds    ebp,FWORD PTR [edi]
  40e9bd:	in     eax,dx
  40e9be:	dec    ebp
  40e9bf:	out    0xed,al
  40e9c1:	icebp  
  40e9c2:	imul   BYTE PTR [esi+ebp*8]
  40e9c5:	cld    
  40e9c6:	out    0x5c,eax
  40e9c8:	fsubp  st(4),st
  40e9ca:	xor    eax,0x44f85be6
  40e9cf:	cld    
  40e9d0:	imul   ebp,esp,0xf43be625
  40e9d6:	add    al,0x4
  40e9d8:	push   0xffffffec
  40e9da:	adc    eax,0xec3be6
	...
  40ea0f:	add    BYTE PTR [esp+ebp*8],al
  40ea12:	push   0xffffffec
  40ea14:	add    eax,0x4f01be6
  40ea19:	hlt    
  40ea1a:	push   0xffffffec
  40ea1c:	cmc    
  40ea1d:	in     eax,0x1b
  40ea1f:	adc    al,0xec
  40ea21:	outs   dx,DWORD PTR ds:[esi]
  40ea22:	fucomp st(4)
  40ea24:	outs   dx,DWORD PTR ds:[esi]
  40ea25:	std    
  40ea26:	nop
  40ea27:	jno    0x40ea06
  40ea29:	in     eax,0x7d
  40ea2b:	dec    esp
  40ea2c:	stos   BYTE PTR es:[edi],al
  40ea2d:	ret    0x3e4
  40ea30:	ss jp  0x40eaaf
  40ea33:	and    BYTE PTR [eax+0x577665dc],0xe6
  40ea3a:	rcl    DWORD PTR [ebx],cl
  40ea3c:	retf   
  40ea3d:	pop    ebx
  40ea3e:	mov    esp,0x28fa6303
  40ea43:	ja     0x40ea51
  40ea45:	pop    ebx
  40ea46:	jmp    0xa86701a6
  40ea4b:	add    edx,DWORD PTR [edi+ebp*2+0x707fd900]
  40ea52:	or     al,0x41
  40ea54:	mov    DWORD PTR [eax-0x5a84d902],0x5510a873
  40ea5e:	call   0xff27d6ff
  40ea63:	loop   0x40ea05
  40ea65:	jno    0x40ea98
  40ea67:	jo     0x40ea0e
  40ea69:	in     eax,dx
  40ea6a:	imul   esp,ebx,0xf685f238
  40ea70:	cmp    BYTE PTR [eax],dl
  40ea72:	shl    BYTE PTR [ebp+0x0],0x0
	...
  40eaa6:	pop    ebx
  40eaa7:	in     al,0x74
  40eaa9:	add    DWORD PTR [edi+0x486783ed],edx
  40eaaf:	in     al,0x4f
  40eab1:	(bad)  
  40eab2:	mov    dl,0xed
  40eab4:	dec    edi
  40eab5:	into   
  40eab6:	mov    dl,0xd
  40eab8:	call   0xff24f3cf
  40eabd:	ror    DWORD PTR [eax-0x7490179],1
  40eac3:	pop    ecx
  40eac4:	call   0xfec87b8a
  40eac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaca:	pop    ds
  40eacb:	push   edi
  40eacc:	sbb    BYTE PTR [esi-0x1eff92f8],0x60
  40ead3:	add    eax,0xe3dd0ee8
  40ead8:	(bad)  
  40ead9:	jo     0x40eafd
  40eadb:	fisttp QWORD PTR [esp-0x300ab35]
  40eae2:	jo     0x40eac8
  40eae4:	je     0x40eac3
  40eae6:	test   al,0x9a
  40eae8:	push   ebx
  40eae9:	jmp    0xd500fb4e
  40eaee:	xor    ah,cl
  40eaf0:	inc    esp
  40eaf1:	pop    ecx
  40eaf2:	addr16 add eax,0x49a1e900
  40eaf8:	hlt    
  40eaf9:	add    BYTE PTR ds:0xb0000008,ah
  40eaff:	or     BYTE PTR [edx+0x0],ch
  40eb02:	mov    al,ds:0x27006a08
  40eb07:	inc    esi
  40eb08:	hlt    
  40eb09:	push   eax
	...
  40eb3a:	add    BYTE PTR [eax],al
  40eb3c:	inc    ebp
  40eb3d:	push   esi
  40eb3e:	clc    
  40eb3f:	dec    edi
  40eb41:	fdivr  st,st(5)
  40eb43:	jne    0x40eb9b
  40eb45:	ror    DWORD PTR [esi+0xb087a54],0xc0
  40eb4c:	fimul  WORD PTR [edx]
  40eb4e:	jmp    0x40eb8a
  40eb50:	repnz (bad) 
  40eb52:	es inc ecx
  40eb54:	cmp    ch,bh
  40eb56:	jae    0x40eb68
  40eb58:	bound  edx,QWORD PTR [edi-0x10ba007d]
  40eb5e:	jae    0x40eb58
  40eb60:	jp     0x40eb23
  40eb62:	inc    DWORD PTR [ebp+0x4587ef15]
  40eb68:	out    0xee,al
  40eb6a:	jae    0x40eb84
  40eb6c:	and    eax,0x4fff1455
  40eb71:	mov    ebp,0xef0675fd
  40eb76:	jae    0x40eb80
  40eb78:	and    dl,BYTE PTR [ecx]
  40eb7a:	(bad)  
  40eb7b:	inc    ebp
  40eb7d:	out    dx,al
  40eb7e:	jae    0x40eb6c
  40eb80:	sar    BYTE PTR [esi-0x112a0081],cl
  40eb86:	inc    ebx
  40eb87:	lock loope 0x40eb18
  40eb8a:	std    
  40eb8b:	jne    0x40eb73
  40eb8d:	mov    edi,0x7ca543a
  40eb92:	push   DWORD PTR [ebp+0x52]
  40eb95:	rcr    al,0x81
  40eb98:	xor    eax,0xbec2c7ef
  40eb9d:	pop    es
  40eb9e:	push   ebp
  40eb9f:	mov    eax,DWORD PTR [eax]
	...
  40ebd1:	add    BYTE PTR [esi],ah
  40ebd3:	mov    edx,eax
  40ebd5:	hlt    
  40ebd6:	arpl   WORD PTR [edx+ebp*8],di
  40ebd9:	(bad)  
  40ebda:	cmp    esi,ebp
  40ebdc:	pop    esp
  40ebdd:	and    al,0x9c
  40ebdf:	mov    al,ds:0xa39ae7fa
  40ebe4:	jmp    0xe6f1c6e7
  40ebe9:	(bad)  
  40ebea:	pop    esi
  40ebeb:	stos   DWORD PTR es:[edi],eax
  40ebec:	sub    DWORD PTR [ecx+0x63],eax
  40ebef:	out    dx,al
  40ebf0:	add    al,BYTE PTR [eax]
  40ebf2:	arpl   WORD PTR [ecx-0x80],si
  40ebf5:	imul   BYTE PTR [ebp-0x6]
  40ebf8:	jmp    0x42ae74c
  40ebfd:	add    BYTE PTR [ebx-0xc],ah
  40ec00:	jne    0x40ec55
  40ec02:	arpl   sp,bp
  40ec04:	pop    edx
  40ec05:	or     eax,0x6802ada3
  40ec0a:	pop    esi
  40ec0b:	lods   al,BYTE PTR ds:[esi]
  40ec0c:	inc    ebx
  40ec0d:	add    bl,cl
  40ec0f:	or     eax,DWORD PTR [ecx+eax*2+0x63]
  40ec13:	ret    
  40ec14:	cs push esi
  40ec16:	jp     0x40ec45
  40ec18:	add    al,0xff
  40ec1a:	scas   al,BYTE PTR es:[edi]
  40ec1b:	in     al,0xda
  40ec1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec1e:	sbb    eax,0x6667e8cc
  40ec23:	sub    al,0x43
  40ec25:	add    BYTE PTR [ebx-0xf],bh
  40ec28:	inc    edx
  40ec29:	inc    ecx
  40ec2a:	arpl   WORD PTR [ecx+ecx*1+0x40],ax
  40ec2e:	mov    ds:0x63025aec,al
  40ec33:	in     al,dx
  40ec34:	cmp    dh,0x0
	...
  40ec67:	add    BYTE PTR [esi-0x1c],dh
  40ec6a:	fimul  DWORD PTR [ebx-0x73176c1b]
  40ec70:	out    0x63,al
  40ec72:	jmp    0x3015:0xdbfcd4fe
  40ec79:	in     al,dx
  40ec7a:	add    bh,bh
  40ec7c:	dec    esi
  40ec7d:	jo     0x40ec68
  40ec7f:	je     0x40ecec
  40ec81:	add    eax,0xe236d351
  40ec86:	pop    ebp
  40ec87:	mov    ebx,0x4ee909a2
  40ec8c:	fdiv   st,st(1)
  40ec8e:	rcl    BYTE PTR [bx+si+0x45e3],0xe9
  40ec94:	or     al,BYTE PTR ds:0x588c1ed3
  40ec9a:	loope  0x40ec77
  40ec9c:	adc    ah,BYTE PTR [ebx+0x2e]
  40ec9f:	jmp    0x5e66358f
  40eca4:	pop    ecx
  40eca5:	in     eax,dx
  40eca6:	popf   
  40eca7:	jle    0x40ed16
  40eca9:	loop   0x40ec8c
  40ecab:	ret    
  40ecac:	lock sub BYTE PTR [ecx-0x16bb630a],al
  40ecb3:	push   ebx
  40ecb4:	dec    ebx
  40ecb5:	stc    
  40ecb6:	arpl   cx,bp
  40ecb8:	dec    ebp
  40ecb9:	xor    eax,0xf2730381
  40ecbe:	cs pop esp
  40ecc0:	xchg   edx,eax
  40ecc1:	inc    ebp
  40ecc2:	sub    BYTE PTR [ebx+edx*4],al
  40ecc5:	loop   0x40ed1a
  40ecc7:	cld    
  40ecc8:	inc    esp
  40ecc9:	ror    DWORD PTR [ebx+0xe8],0x0
	...
  40ecfc:	add    BYTE PTR [eax],al
  40ecfe:	and    eax,0x1d82e0ed
  40ed03:	loop   0x40ecb2
  40ed05:	(bad)  
  40ed06:	popf   
  40ed07:	and    ch,BYTE PTR [eax]
  40ed09:	add    al,0x62
  40ed0b:	add    eax,0x87d603e9
  40ed10:	mov    ch,0xe9
  40ed12:	std    
  40ed13:	loope  0x40ed4d
  40ed15:	pop    esp
  40ed16:	pop    edi
  40ed17:	add    al,0xe9
  40ed19:	add    edi,ebx
  40ed1b:	lahf   
  40ed1c:	cmp    al,BYTE PTR [ebx+eiz*2]
  40ed1f:	ins    DWORD PTR es:[edi],dx
  40ed20:	fadd   QWORD PTR [ebx+0x22]
  40ed23:	add    eax,0x4494ff11
  40ed28:	jmp    0x865988
  40ed2d:	sub    BYTE PTR [edi-0x1e],bl
  40ed30:	xor    al,0x17
  40ed32:	pop    eax
  40ed33:	inc    esp
  40ed34:	add    BYTE PTR [esi+0x45],ah
  40ed37:	or     eax,0xe2c55be8
  40ed3c:	inc    cl
  40ed3e:	lods   eax,DWORD PTR ds:[esi]
  40ed3f:	and    DWORD PTR [ecx-0x17],eax
  40ed42:	cmp    BYTE PTR [eax],cl
  40ed44:	inc    eax
  40ed45:	test   al,0x60
  40ed47:	ins    DWORD PTR es:[edi],dx
  40ed48:	pop    ds
  40ed49:	test   eax,0xeb680521
  40ed4e:	pusha  
  40ed4f:	add    eax,0xd0d2e80
  40ed54:	call   0xff236a98
  40ed59:	ins    BYTE PTR es:[edi],dx
  40ed5a:	in     eax,dx
  40ed5b:	(bad)  
  40ed5d:	push   ss
  40ed5e:	jnp    0x40edb1
  40ed60:	call   0x40edee
	...
  40ed91:	add    BYTE PTR [eax],al
  40ed93:	add    BYTE PTR [esi-0x3af9fffb],dh
  40ed99:	loope  0x40ed99
  40ed9b:	je     0x40ede5
  40ed9d:	jmp    0xe07c64bc
  40eda2:	enter  0x3c2b,0xe1
  40eda6:	push   ebx
  40eda7:	jb     0x40edc4
  40eda9:	xchg   bl,al
  40edab:	aad    0x45
  40edad:	loopne 0x40edad
  40edaf:	inc    ebx
  40edb0:	pop    edi
  40edb1:	imul   esp,DWORD PTR [esi],0xffffffce
  40edb4:	xchg   edx,eax
  40edb5:	or     eax,0xe08a85e8
  40edba:	(bad)  
  40edbb:	jo     0x40ed5f
  40edbd:	loope  0x40ed85
  40edbf:	in     al,dx
  40edc0:	inc    ebp
  40edc1:	and    BYTE PTR [ecx-0x17],al
  40edc4:	pusha  
  40edc5:	add    eax,0x897be900
  40edca:	neg    BYTE PTR [edi+0x14fe004]
  40edd0:	arpl   WORD PTR [esi],ax
  40edd2:	add    cl,ch
  40edd4:	mov    eax,0xca00521a
  40edd9:	add    al,0x68
  40eddb:	ins    BYTE PTR es:[edi],dx
  40eddc:	jp     0x40ee28
  40edde:	add    BYTE PTR [eax+0x58],ch
  40ede1:	dec    ecx
  40ede2:	inc    ecx
  40ede3:	add    BYTE PTR [edx+0x8],ah
  40ede6:	inc    eax
  40ede7:	inc    ecx
  40ede8:	retf   0x33e7
  40edeb:	push   esi
  40edec:	push   ebx
  40eded:	dec    edx
  40edee:	add    bh,bh
  40edf0:	xchg   esp,ebx
  40edf2:	out    0x6b,al
  40edf4:	das    
  40edf5:	call   0x4156f7
	...
  40ee2a:	scas   al,BYTE PTR es:[edi]
  40ee2b:	inc    esp
  40ee2c:	inc    ecx
  40ee2d:	add    BYTE PTR [edx+0x7a414066],dh
  40ee33:	cmp    al,0x1f
  40ee35:	inc    eax
  40ee36:	retf   
  40ee37:	add    al,0x68
  40ee39:	add    cl,BYTE PTR [edx-0x28007ffc]
  40ee3f:	fsubr  st(6),st
  40ee41:	dec    edi
  40ee42:	dec    edi
  40ee43:	call   0xf1087c45
  40ee48:	cld    
  40ee49:	call   FWORD PTR [ebp+0x39]
  40ee4c:	call   0x44da2a
  40ee51:	inc    edi
  40ee53:	call   0xbc836455
  40ee58:	xchg   edx,eax
  40ee59:	jge    0x40ee98
  40ee5b:	out    0xc7,eax
  40ee5d:	ret    0x446
  40ee60:	push   ebp
  40ee61:	mov    ebx,DWORD PTR [esi]
  40ee63:	mov    edx,eax
  40ee65:	hlt    
  40ee66:	sub    al,0xe7
  40ee68:	std    
  40ee69:	push   0xa
  40ee6b:	ds daa 
  40ee6d:	call   DWORD PTR [edi-0x1f]
  40ee70:	out    0x35,al
  40ee72:	dec    edi
  40ee73:	call   0xed887875
  40ee78:	lds    eax,FWORD PTR ds:0x412845
  40ee7e:	cli    
  40ee7f:	add    eax,DWORD PTR [eax]
  40ee81:	add    BYTE PTR [ebx+0x69],ah
  40ee84:	xor    dh,0xdd
  40ee87:	mov    fs,ebp
  40ee89:	dec    edi
  40ee8a:	dec    ebx
  40ee8b:	repnz add eax,DWORD PTR [eax]
	...
  40eebe:	add    BYTE PTR [eax],al
  40eec0:	arpl   WORD PTR [esi-0x6b],si
  40eec3:	push   eax
  40eec4:	arpl   si,bp
  40eec6:	pop    edx
  40eec7:	xchg   BYTE PTR [ebx],ah
  40eec9:	sub    eax,0xade36804
  40eece:	inc    ebx
  40eecf:	add    BYTE PTR [ebx],bh
  40eed1:	fild   WORD PTR [edx+0x41]
  40eed4:	arpl   WORD PTR [edi],si
  40eed6:	xor    BYTE PTR [esi+0x4a],dl
  40eed9:	lods   eax,DWORD PTR ds:[esi]
  40eeda:	add    bh,bh
  40eedc:	push   cs
  40eedd:	(bad)  
  40eede:	(bad)  
  40eee0:	(bad)  
  40eee1:	push   ds
  40eee2:	out    0x67,al
  40eee4:	(bad)  [ebp+0x6e0b0043]
  40eeea:	inc    ebx
  40eeeb:	inc    ecx
  40eeec:	arpl   WORD PTR [esi+0x5],si
  40eeef:	inc    eax
  40eef0:	and    ch,dh
  40eef2:	pop    edx
  40eef3:	add    ah,BYTE PTR [ebx-0x12]
  40eef6:	cmp    dh,0xd6
  40eef9:	in     al,0xda
  40eefb:	(bad)  
  40eefc:	push   edi
  40eefd:	or     dh,ah
  40eeff:	mov    esi,fs
  40ef01:	xlat   BYTE PTR ds:[ebx]
  40ef02:	jecxz  0x40ef02
  40ef04:	inc    esp
  40ef05:	jge    0x40eee1
  40ef07:	push   ecx
  40ef08:	xchg   edx,eax
  40ef09:	in     al,dx
  40ef0a:	add    bh,bh
  40ef0c:	scas   al,BYTE PTR es:[edi]
  40ef0d:	call   0xb49c63f6
  40ef12:	idiv   BYTE PTR [esp-0x48]
  40ef16:	mov    edx,0x4dec67c1
  40ef1b:	mov    eax,DWORD PTR [edi]
  40ef1d:	outs   dx,BYTE PTR ds:[esi]
  40ef1e:	shl    bl,0xd
  40ef21:	mov    al,ds:0x69e4
	...
  40ef56:	arpl   WORD PTR [edx+0x1c],ax
  40ef59:	push   DWORD PTR [esi-0x1c]
  40ef5c:	fisubr DWORD PTR [ebp-0x1a59fa89]
  40ef62:	fisttp DWORD PTR [eax-0x63]
  40ef65:	mov    ebp,0x42d6465f
  40ef6a:	arpl   WORD PTR ds:0x906303e9,ax
  40ef70:	imul   ebp,ebp,0xffffffce
  40ef73:	fidivr WORD PTR [ebp+0x54]
  40ef76:	cmp    ecx,DWORD PTR [ecx]
  40ef78:	call   0xc12e5280
  40ef7d:	push   edx
  40ef7e:	arpl   WORD PTR ds:0x446c85d1,ax
  40ef84:	jmp    0xa886bce4
  40ef89:	add    ecx,DWORD PTR [ebx]
  40ef8b:	(bad)  
  40ef8c:	test   al,0x42
  40ef8e:	arpl   si,bx
  40ef90:	sti    
  40ef91:	dec    ebp
  40ef92:	cmp    al,BYTE PTR [ecx+ebp*8-0x1c]
  40ef96:	prefetch BYTE PTR [ecx+0x47]
  40ef9a:	jg     0x40ef7a
  40ef9c:	sub    eax,0xa845d55c
  40efa1:	add    edi,ebx
  40efa3:	jbe    0x40ef4d
  40efa5:	inc    edx
  40efa6:	arpl   WORD PTR [ebp-0xa],bp
  40efa9:	inc    ebx
  40efaa:	mov    ds:0x63018105,al
  40efaf:	add    eax,0xdd7e569
  40efb4:	adc    DWORD PTR [ebx+0x47],eax
  40efb7:	fdivrp st(5),st
  40efb9:	jbe    0x40efbb
	...
  40efeb:	add    bh,ah
  40efed:	aad    0xee
  40efef:	in     al,0x35
  40eff1:	xor    eax,0x59cb8d1
  40eff6:	jmp    0xd6229fdf
  40effb:	outs   dx,BYTE PTR ds:[esi]
  40effc:	imul   ebp,ebp,0x66
  40efff:	addr16 adc al,0xde
  40f002:	scas   eax,DWORD PTR es:[edi]
  40f003:	shl    DWORD PTR [eax+0x5],0x14
  40f007:	jns    0x40f001
  40f009:	cmp    edi,0x6c04ac
  40f00f:	inc    ebx
  40f010:	pop    eax
  40f011:	fidiv  WORD PTR [ecx+esi*8+0x8]
  40f015:	sub    al,0x7c
  40f017:	sahf   
  40f018:	dec    DWORD PTR [esp+eax*2+0x68053a95]
  40f01f:	stos   BYTE PTR es:[edi],al
  40f020:	and    BYTE PTR [eax+eax*1+0x11],al
  40f024:	adc    BYTE PTR [esi],bl
  40f026:	inc    ecx
  40f027:	jmp    0xc09708eb
  40f02c:	and    DWORD PTR ds:0xdee179e8,eax
  40f032:	(bad)  
  40f033:	repnz mov al,ds:0x8b91951
  40f039:	add    eax,0x65c64600
  40f03e:	shr    DWORD PTR [ecx+0x46500521],cl
  40f044:	std    
  40f045:	or     al,0xe8
  40f047:	outs   dx,BYTE PTR ds:[esi]
  40f048:	ret    
  40f049:	fdivp  st(6),st
  40f04b:	inc    ecx
  40f04c:	retf   
  40f04d:	pop    edi
  40f04e:	jmp    FWORD PTR [esi]
	...
  40f080:	add    BYTE PTR [eax],al
  40f082:	sbb    al,BYTE PTR ds:0x44203368
  40f088:	add    BYTE PTR [ecx-0x16bee24f],dl
  40f08e:	inc    edi
  40f08f:	adc    dl,BYTE PTR [esi-0x40]
  40f092:	mov    eax,ds:0xe145e805
  40f097:	(bad)  
  40f099:	repnz and BYTE PTR [ecx+0x19],bl
  40f09d:	cdq    
  40f09e:	cwde   
  40f09f:	add    eax,0x64fffe00
  40f0a4:	shr    DWORD PTR [ecx],cl
  40f0a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0a7:	add    eax,0xd8ade50
  40f0ac:	call   0xff1cb4e3
  40f0b1:	shr    eax,0x5a
  40f0b4:	inc    DWORD PTR [eax]
  40f0b6:	and    eax,0xc5fc73e9
  40f0bb:	ds or  al,ch
  40f0be:	mov    al,0x3c
  40f0c0:	(bad)  
  40f0c1:	inc    ebx
  40f0c3:	ret    
  40f0c4:	add    al,BYTE PTR [eax]
  40f0c6:	das    
  40f0c7:	mov    edx,gs
  40f0c9:	cmp    DWORD PTR [esi+0x605754e5],0x1
  40f0d0:	push   0x2a
  40f0d2:	in     eax,0x3e
  40f0d4:	or     al,ch
  40f0d6:	inc    esi
  40f0d7:	cmp    al,0xff
  40f0d9:	call   DWORD PTR [ebx+0x4e]
  40f0dc:	cld    
  40f0dd:	push   0xffffffca
  40f0df:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0e1:	add    BYTE PTR [ebp-0x18],0x9
  40f0e5:	rol    BYTE PTR [eax],0x0
	...
  40f118:	mov    ds,ecx
  40f11a:	dec    esi
  40f11b:	push   0xbeef08ba
  40f120:	mov    ds:0x8a413ee8,al
  40f125:	sbb    bh,bh
  40f127:	jne    0x40f0bb
  40f129:	lock bt DWORD PTR [ebp-0x18],eax
  40f12e:	out    0x3d,al
  40f130:	mov    ah,0xe7
  40f132:	std    
  40f133:	mov    ebp,DWORD PTR [edi+0x57]
  40f136:	sub    BYTE PTR [ecx+0x7a],al
  40f139:	mov    edi,DWORD PTR [ebx]
  40f13b:	jae    0x40f0cf
  40f13d:	inc    ecx
  40f13e:	add    BYTE PTR [eax+0x45740835],al
  40f144:	loop   0x40f11a
  40f146:	ds inc ecx
  40f148:	cmp    bl,BYTE PTR [edi]
  40f14a:	call   0x48dc0c
  40f14f:	or     ecx,DWORD PTR [edx+0x62561f3d]
  40f155:	loope  0x40f0dc
  40f157:	inc    DWORD PTR [ebp+0x18]
  40f15a:	push   0xbcd73a00
  40f15f:	push   0x4142ce63
  40f164:	arpl   WORD PTR [esi],bx
  40f166:	jecxz  0x40f1dc
  40f168:	pop    ebx
  40f169:	mov    dh,0xb4
  40f16b:	mov    eax,ds:0xfdea9b04
  40f170:	jle    0x40f105
  40f172:	loope  0x40f15e
  40f174:	bound  esp,QWORD PTR [esp+eax*4]
  40f177:	cmp    eax,0x45ddf963
	...
  40f1ac:	add    BYTE PTR [eax],al
  40f1ae:	out    0xbe,eax
  40f1b0:	ret    0xdcb8
  40f1b3:	jb     0x40f196
  40f1b5:	(bad)  
  40f1b6:	rcr    DWORD PTR [ebx],1
  40f1b8:	sbb    eax,DWORD PTR [edi]
  40f1ba:	push   esi
  40f1bb:	inc    edi
  40f1bc:	loop   0x40f232
  40f1be:	(bad)  
  40f1bf:	pop    edx
  40f1c0:	pop    eax
  40f1c1:	or     bl,cl
  40f1c3:	neg    DWORD PTR [esi-0x1]
  40f1c6:	mov    ah,0xa
  40f1c8:	inc    edx
  40f1c9:	leave  
  40f1ca:	mov    eax,ds:0xd85502e9
  40f1cf:	dec    ecx
  40f1d0:	xchg   bl,al
  40f1d2:	lahf   
  40f1d3:	fwait
  40f1d4:	cmp    DWORD PTR [edx+0x63],ebp
  40f1d7:	enter  0xff2d,0x16
  40f1db:	(bad)  
  40f1dc:	jmp    0x2688:0xe21b09f9
  40f1e3:	adc    cl,BYTE PTR [esi+0x45060434]
  40f1e9:	add    al,bl
  40f1eb:	loopne 0x40f242
  40f1ed:	sub    BYTE PTR [edx],ah
  40f1ef:	out    dx,al
  40f1f0:	cmp    BYTE PTR [esi],0x63
  40f1f3:	js     0x40f23c
  40f1f5:	push   0x43ad63
  40f1fa:	mov    ah,0xf4
  40f1fc:	and    DWORD PTR [eax+0x63],edx
  40f1ff:	in     al,dx
  40f200:	or     eax,0x38b3b7c0
  40f205:	call   0xff2355cb
  40f20a:	xchg   ebx,eax
  40f20b:	add    eax,0xea630451
  40f210:	sahf   
  40f211:	ins    BYTE PTR es:[edi],dx
	...
  40f242:	add    BYTE PTR [eax],al
  40f244:	adc    DWORD PTR [esi+0x28],eax
  40f247:	add    al,0xb3
  40f249:	ficom  DWORD PTR [ebx+0xc]
  40f24c:	sti    
  40f24d:	xor    DWORD PTR [ebx+0x68ee05e1],ecx
  40f253:	pop    edi
  40f254:	cld    
  40f255:	fcmovb st,st(1)
  40f257:	add    ebx,DWORD PTR [ebp+0x7603ee85]
  40f25d:	fild   QWORD PTR [esi]
  40f25f:	loopne 0x40f292
  40f261:	lds    ebx,FWORD PTR [edi-0x1f]
  40f264:	fstp   st(2)
  40f266:	xchg   ebp,eax
  40f267:	(bad)  
  40f268:	push   es
  40f269:	push   ds
  40f26a:	out    0x56,al
  40f26c:	or     bl,bl
  40f26e:	sti    
  40f26f:	ffreep st(5)
  40f271:	push   eax
  40f272:	icebp  
  40f273:	jmp    0x40f20d
  40f275:	pop    edi
  40f276:	jbe    0x40f259
  40f278:	adc    eax,0x60c6a03b
  40f27d:	add    eax,0x86b88cbc
  40f282:	and    al,0xe0
  40f284:	or     al,BYTE PTR ds:0x50942fc3
  40f28a:	loope  0x40f277
  40f28c:	push   cs
  40f28d:	pop    edi
  40f28e:	inc    esi
  40f28f:	loope  0x40f26c
  40f291:	inc    eax
  40f292:	cmp    eax,0xe96f636e
  40f297:	imul   edx,DWORD PTR [ebx+0x44],0xffffffa8
  40f29b:	add    edi,ebx
  40f29d:	add    al,0xe9
  40f29f:	add    esp,ebx
  40f2a1:	in     eax,dx
  40f2a2:	mov    al,0x83
  40f2a4:	pop    ebp
  40f2a5:	(bad)  
  40f2a7:	ret    
	...
  40f2d8:	add    BYTE PTR [eax],al
  40f2da:	sar    dl,1
  40f2dc:	mov    eax,0x5833deb
  40f2e1:	loope  0x40f277
  40f2e3:	ins    DWORD PTR es:[edi],dx
  40f2e4:	jmp    0xffdc3eec
  40f2e9:	sub    BYTE PTR [ebx+0x44],0x41
  40f2ed:	jmp    0xf1b5cd62
  40f2f2:	cmp    ch,ah
  40f2f4:	mov    al,ds:0xce203de
  40f2f9:	push   esp
  40f2fa:	add    bl,bl
  40f2fc:	(bad)  
  40f2fd:	push   esp
  40f2fe:	add    ebx,ebx
  40f300:	je     0x40f2f3
  40f302:	clc    
  40f303:	pop    ecx
  40f304:	jp     0x40f2c4
  40f306:	add    ecx,ebp
  40f308:	shr    ebp,0x60
  40f30b:	xor    BYTE PTR [ebx-0x43a1843],cl
  40f311:	adc    ebx,DWORD PTR [edi+0x6f]
  40f314:	sub    eax,0xe80d359e
  40f319:	int    0x36
  40f31b:	(bad)  
  40f31d:	pusha  
  40f31e:	and    eax,0x60e967d9
  40f323:	jmp    0xe941:0x441311bd
  40f32a:	dec    eax
  40f32b:	cmp    eax,0xda672841
  40f330:	je     0x40f323
  40f332:	mov    eax,0x835ea0ed
  40f337:	fidiv  DWORD PTR [ebp+edx*2-0x7d]
  40f33b:	push   eax
  40f33c:	or     BYTE PTR [ecx+0x0],al
	...
  40f36f:	add    BYTE PTR ds:0x9946ff5f,ah
  40f375:	ret    
  40f376:	add    ebp,ecx
  40f378:	xor    eax,0x9c6aeb8e
  40f37d:	(bad)  [ecx-0x17]
  40f380:	(bad)  
  40f381:	sub    bh,bh
  40f383:	pushf  
  40f384:	pop    eax
  40f385:	in     eax,dx
  40f386:	call   0x8919372b
  40f38b:	lods   al,BYTE PTR ds:[esi]
  40f38c:	xor    al,0x61
  40f38e:	add    cl,ch
  40f390:	push   ebx
  40f391:	fwait
  40f392:	addr16 add cl,bl
  40f395:	inc    ebx
  40f396:	inc    ecx
  40f397:	add    dl,dl
  40f399:	cmp    al,0x41
  40f39b:	inc    ecx
  40f39c:	dec    edx
  40f39d:	out    0x73,al
  40f39f:	or     BYTE PTR [edx+0x73],ah
  40f3a2:	lahf   
  40f3a3:	(bad)  
  40f3a4:	cmp    eax,0x2d00006a
  40f3a9:	js     0x40f411
  40f3ab:	outs   dx,BYTE PTR ds:[esi]
  40f3ac:	dec    ebx
  40f3ad:	inc    edx
  40f3ae:	add    BYTE PTR [eax-0x4e],ch
  40f3b1:	inc    edx
  40f3b2:	inc    ecx
  40f3b3:	add    BYTE PTR ds:0x80e8083f,bl
  40f3b9:	mov    ds:0x3eadfffd,al
  40f3be:	cld    
  40f3bf:	push   DWORD PTR [edi]
  40f3c1:	or     eax,ebp
  40f3c3:	repz inc ebx
  40f3c5:	mov    eax,0xe08c9fd
  40f3ca:	add    BYTE PTR [ebp+0x41],dl
  40f3cd:	aad    0x81
  40f3cf:	(bad)  
  40f3d0:	fimul  WORD PTR [ebx+edx*2+0x10]
	...
  40f403:	add    BYTE PTR [eax],al
  40f405:	add    BYTE PTR [ecx-0x2d],dl
  40f408:	push   0xfc4e4f00
  40f40d:	push   eax
  40f40e:	sub    eax,0xba6a083e
  40f413:	mov    bh,0x73
  40f415:	adc    BYTE PTR ds:0x4a851c13,bh
  40f41b:	ds daa 
  40f41d:	mov    edx,edi
  40f41f:	mov    eax,0x6e7a6a8e
  40f424:	add    BYTE PTR [eax+0x1d],ch
  40f427:	add    al,0x0
  40f429:	add    BYTE PTR ds:0x2d6a0c3e,bh
  40f42f:	mov    eax,0x4a00470
  40f434:	push   0x0
  40f436:	push   edx
  40f437:	stos   BYTE PTR es:[edi],al
  40f438:	dec    ebx
  40f439:	add    BYTE PTR [edx+0x54],cl
  40f43c:	(bad)  
  40f43d:	jne    0x40f4a2
  40f43f:	bnd jmp 0x40f4a1
  40f442:	popf   
  40f443:	out    dx,al
  40f444:	add    cl,cl
  40f446:	and    edx,edx
  40f448:	add    dl,BYTE PTR [ebp-0x18]
  40f44b:	or     DWORD PTR [ebx+0x396337c3],eax
  40f451:	adc    al,0xd8
  40f453:	mov    ebx,0x28d60068
  40f458:	loopne 0x40f4a9
  40f45a:	sbb    al,0x31
  40f45c:	adc    bh,bh
  40f45e:	mov    fs,esi
  40f460:	push   0xf8310c00
  40f465:	(bad)  
  40f466:	mov    cl,0xf6
  40f468:	mov    BYTE PTR [edi+0x0],bh
	...
  40f49a:	add    BYTE PTR [eax],al
  40f49c:	jbe    0x40f49d
  40f49e:	mov    dl,BYTE PTR [edi+esi*8+0x3d]
  40f4a2:	imul   eax,DWORD PTR [eax],0xff6aee79
  40f4a8:	pusha  
  40f4a9:	out    dx,al
  40f4aa:	add    bh,bh
  40f4ac:	push   esi
  40f4ad:	fisubr WORD PTR [eax-0x1]
  40f4b0:	aam    0xfb
  40f4b2:	pop    es
  40f4b3:	push   0x63
  40f4b5:	add    al,0x4
  40f4b7:	call   0x4505e4
  40f4bc:	rcl    DWORD PTR [esi+0x58],cl
  40f4bf:	cld    
  40f4c0:	retf   
  40f4c1:	mov    ebx,0xa563004c
  40f4c6:	ror    BYTE PTR [edi],0x63
  40f4c9:	cdq    
  40f4ca:	mov    ebx,ebp
  40f4cc:	pushf  
  40f4cd:	mov    al,0xa
  40f4cf:	dec    DWORD PTR [esi]
  40f4d1:	(bad)  
  40f4d2:	jmp    0xefe:0xde470b52
  40f4d9:	shr    dl,cl
  40f4db:	xchg   edi,eax
  40f4dc:	cs out dx,al
  40f4de:	add    dl,cl
  40f4e0:	sub    DWORD PTR [edx-0x3d],0x1
  40f4e4:	adc    esp,DWORD PTR [edi]
  40f4e6:	pop    eax
  40f4e7:	or     al,0x64
  40f4e9:	add    al,0x9c
  40f4eb:	sti    
  40f4ec:	inc    esp
  40f4ed:	push   esi
  40f4ee:	mov    eax,ds:0x9bd755de
  40f4f3:	test   DWORD PTR [ebp+0x51],0xfdcfdef9
  40f4fa:	adc    BYTE PTR [ecx-0x45],ah
  40f4fd:	(bad)  
  40f4fe:	std    
  40f4ff:	retf   
	...
  40f530:	add    BYTE PTR [eax],al
  40f532:	and    dh,dl
  40f534:	call   0xee2acd71
  40f539:	push   edi
  40f53a:	pop    ebx
  40f53b:	(bad)  
  40f53c:	pop    ebx
  40f53d:	cld    
  40f53e:	add    al,0xfc
  40f540:	pusha  
  40f541:	fst    QWORD PTR ds:0xfb105bd7
  40f547:	mov    BYTE PTR [esp+eax*1],bl
  40f54a:	arpl   WORD PTR [ebp+0x19],ax
  40f54d:	fnsave [edi+0x9]
  40f550:	mov    esi,0xf1ed5b57
  40f555:	pop    ebx
  40f556:	in     al,dx
  40f557:	(bad)  
  40f558:	lods   eax,DWORD PTR ds:[esi]
  40f559:	push   edi
  40f55a:	dec    edi
  40f55b:	(bad)  
  40f55c:	sbb    esi,esp
  40f55e:	fst    QWORD PTR [eax+0x1]
  40f561:	in     al,dx
  40f562:	xchg   DWORD PTR [ebp-0x6a],ebx
  40f565:	fstp   QWORD PTR [ebx+0x2e03f4c3]
  40f56b:	mov    dl,BYTE PTR [ebx+eax*4-0x22864e60]
  40f572:	mov    ch,0xd6
  40f574:	sti    
  40f575:	sti    
  40f576:	fild   WORD PTR [eax-0x295a2018]
  40f57c:	mov    eax,0x510d17dc
  40f581:	mov    esi,0xdd55d696
  40f586:	pop    ss
  40f587:	std    
  40f588:	pop    ebx
  40f589:	xchg   DWORD PTR [esi+ecx*8-0x29d322bb],eax
  40f590:	mov    bl,0xf
  40f592:	je     0x40f5e4
  40f594:	add    cl,ah
	...
  40f5c6:	add    BYTE PTR [eax],al
  40f5c8:	js     0x40f5bc
  40f5ca:	(bad)  
  40f5cb:	xchg   BYTE PTR cs:[eax+eax*1-0x6d],ch
  40f5d0:	pusha  
  40f5d1:	ins    DWORD PTR es:[edi],dx
  40f5d2:	(bad)  
  40f5d3:	jmp    0xd167:0x6c8d0560
  40f5da:	dec    BYTE PTR [esi]
  40f5dc:	(bad)  
  40f5dd:	imul   edi,edi,0x6
  40f5e0:	xchg   esp,eax
  40f5e1:	cmc    
  40f5e2:	imul   ebp,ecx,0x5be805ca
  40f5e8:	xchg   ebx,eax
  40f5e9:	add    eax,0xe5dc2600
  40f5ee:	repnz out 0x3f,al
  40f5f1:	push   es
  40f5f2:	add    cl,ch
  40f5f4:	pusha  
  40f5f5:	mov    esi,0xd733dd84
  40f5fa:	(bad)  
  40f5fb:	jmp    0x40f65d
  40f5fd:	add    eax,0xcde5ae00
  40f602:	repnz mov esi,0xe9fed617
  40f608:	pusha  
  40f609:	mov    esi,0xd713ad84
  40f60e:	(bad)  
  40f60f:	jmp    0x7240fb74
  40f614:	(bad)  
  40f615:	std    
  40f616:	mov    bh,bl
  40f618:	cmp    al,BYTE PTR ds:0xd2b0648d
  40f61e:	inc    BYTE PTR [esi-0x727b7790]
  40f624:	xchg   ebx,eax
  40f625:	(bad)  
  40f626:	(bad)  
  40f627:	sbb    esp,ebx
  40f629:	and    bh,0x7a
	...
  40f65c:	add    BYTE PTR [eax],al
  40f65e:	xchg   esi,edx
  40f660:	dec    edi
  40f661:	xor    ax,0xfef5
  40f665:	aam    0x64
  40f667:	(bad)  
  40f668:	je     0x40f64b
  40f66a:	cli    
  40f66b:	add    al,0xff
  40f66d:	aam    0x88
  40f66f:	(bad)  
  40f670:	push   ecx
  40f671:	add    dh,cl
  40f673:	test   BYTE PTR [ebx-0x246c618],bh
  40f679:	add    BYTE PTR [ebp+0x7a011a7d],al
  40f67f:	add    DWORD PTR [ebx-0x24a8943],eax
  40f685:	dec    DWORD PTR [edx+0x2]
  40f688:	test   BYTE PTR [edi],cl
  40f68a:	cmp    ecx,DWORD PTR [ecx]
  40f68c:	add    bh,al
  40f68e:	mov    edi,0x65fff19c
  40f693:	or     BYTE PTR [eax],al
  40f695:	out    dx,eax
  40f696:	je     0x40f6f8
  40f698:	xchg   DWORD PTR [ecx-0x5],eax
  40f69b:	or     BYTE PTR [ebp-0x24ac57b],cl
  40f6a1:	call   FWORD PTR [edx-0x1f]
  40f6a4:	adc    cl,BYTE PTR [edx+ecx*1+0x9]
  40f6a8:	test   eax,eax
  40f6aa:	scas   al,BYTE PTR es:[edi]
  40f6ab:	dec    ebx
  40f6ac:	mov    DWORD PTR [ebp-0x24332],0xbeef090b
  40f6b6:	xchg   edx,eax
  40f6b7:	push   edx
  40f6b8:	inc    eax
  40f6b9:	inc    ecx
  40f6ba:	cli    
  40f6bb:	jge    0x40f640
  40f6bd:	add    BYTE PTR [esi+0x50fdb0],dh
	...
  40f6f3:	add    dl,dh
  40f6f5:	mov    dh,0x49
  40f6f7:	add    dl,cl
  40f6f9:	test   DWORD PTR [esi-0x7c38668c],edi
  40f6ff:	aam    0xe9
  40f701:	mov    al,0xfd
  40f703:	add    cl,dl
  40f705:	fistp  QWORD PTR [eax+ebp*2+0x414a7b]
  40f70c:	inc    edi
  40f70d:	xchg   dh,bh
  40f70f:	sti    
  40f710:	xor    eax,0x5ce84eb0
  40f715:	inc    esp
  40f716:	add    BYTE PTR [eax],al
  40f718:	dec    eax
  40f71a:	or     eax,0x37f6385
  40f71f:	add    BYTE PTR [ebx-0x3a],ah
  40f722:	mov    edi,0x87de2240
  40f727:	test   BYTE PTR [ebx+0x1a],ah
  40f72a:	(bad)  
  40f72c:	adc    eax,DWORD PTR [esi-0x4d]
  40f72f:	dec    ebx
  40f730:	arpl   si,bx
  40f732:	or     eax,0x856dd7c0
  40f737:	cmp    al,0x73
  40f739:	mov    al,ds:0xeb630043
  40f73e:	jle    0x40f6c0
  40f740:	arpl   si,bx
  40f742:	add    bh,bh
  40f744:	div    ch
  40f746:	(bad)  
  40f747:	(bad)  
  40f748:	xor    al,0x63
  40f74a:	sbb    edi,0xfed9db30
  40f750:	out    dx,al
  40f751:	rcl    ebp,1
  40f753:	(bad)  
  40f754:	sbb    al,0x5b
  40f756:	and    bl,0x0
	...
  40f789:	add    BYTE PTR [eax],dl
  40f78b:	mov    bl,0xd9
  40f78d:	mov    esi,fs
  40f78f:	xchg   ebp,eax
  40f790:	aad    0xfe
  40f792:	add    al,0xe
  40f794:	outs   dx,BYTE PTR ds:[esi]
  40f795:	add    DWORD PTR [ecx-0x76ff9322],ecx
  40f79b:	fisubr WORD PTR [eax+eax*1-0x22]
  40f79f:	pusha  
  40f7a0:	jecxz  0x40f794
  40f7a2:	in     al,0xa2
  40f7a4:	xor    bh,bh
  40f7a6:	jbe    0x40f776
  40f7a8:	inc    esp
  40f7a9:	inc    ecx
  40f7aa:	arpl   di,dx
  40f7ac:	ret    0x2473
  40f7af:	jnp    0x40f800
  40f7b1:	adc    al,0xc4
  40f7b3:	cmp    BYTE PTR [ebx-0x2675430e],bh
  40f7b9:	mov    ah,0x97
  40f7bb:	dec    esi
  40f7bc:	(bad)  
  40f7be:	lods   al,BYTE PTR ds:[esi]
  40f7bf:	shl    dl,1
  40f7c1:	(bad)  
  40f7c2:	out    dx,al
  40f7c3:	jns    0x40f79a
  40f7c5:	(bad)  
  40f7c6:	pushf  
  40f7c7:	add    al,0x51
  40f7c9:	ficom  WORD PTR [edi-0x2825a22d]
  40f7cf:	mov    al,0x59
  40f7d1:	fiadd  DWORD PTR [ebp+0x634d2edc]
  40f7d7:	add    eax,0x5975f852
  40f7dc:	aad    0xda
  40f7de:	mov    bh,0xdc
  40f7e0:	cmp    edx,ebx
  40f7e2:	shl    DWORD PTR gs:[ebx-0x19],cl
  40f7e6:	push   ecx
  40f7e7:	shl    DWORD PTR ds:0x1df5cfda,cl
  40f7ed:	nop
	...
  40f81e:	add    BYTE PTR [eax],al
  40f820:	xor    bh,dl
  40f822:	adc    eax,0xbb53cda
  40f827:	fidivr DWORD PTR ds:0x31e73bd3
  40f82d:	sar    ebp,cl
  40f82f:	jmp    0xc81a:0x3e93f10
  40f836:	aam    0x3
  40f838:	mov    dh,0x7e
  40f83a:	aam    0x85
  40f83c:	and    BYTE PTR [esi-0x64872cb],cl
  40f842:	popa   
  40f843:	not    bh
  40f845:	dec    eax
  40f846:	xchg   ecx,eax
  40f847:	xor    al,0x89
  40f849:	add    eax,0xd2674fc6
  40f84e:	xor    ecx,DWORD PTR [ecx+edi*2]
  40f851:	add    eax,0xd24f4fb6
  40f856:	sbb    dh,BYTE PTR [eax]
  40f858:	out    0xc5,al
  40f85a:	sbb    esi,DWORD PTR [eax]
  40f85c:	pushf  
  40f85d:	dec    eax
  40f85e:	pop    ebp
  40f85f:	add    al,0x63
  40f861:	add    eax,0x8d2f8ce9
  40f866:	popa   
  40f867:	imul   bh
  40f869:	dec    eax
  40f86a:	inc    ebp
  40f86b:	xor    al,0xe6
  40f86d:	dec    eax
  40f86e:	test   eax,0xfff53934
  40f873:	jne    0x40f889
  40f875:	(bad)  
  40f876:	(bad)  
  40f877:	sbb    ebp,DWORD PTR [ebx-0x7a]
  40f87a:	jl     0x40f821
  40f87c:	pop    edi
  40f87d:	pop    ecx
  40f87e:	daa    
  40f87f:	ins    BYTE PTR es:[edi],dx
  40f880:	xor    al,0xc5
  40f882:	(bad)  
  40f883:	fadd   QWORD PTR [eax]
	...
  40f8b5:	add    BYTE PTR [ebx+edx*8+0x74],dh
  40f8b9:	stc    
  40f8ba:	fwait
  40f8bb:	sbb    edi,edi
  40f8bd:	mov    esp,0xf174d25c
  40f8c2:	js     0x40f87a
  40f8c4:	cld    
  40f8c5:	ss mov dl,bl
  40f8c8:	ss inc ecx
  40f8ca:	les    edi,FWORD PTR [esi]
  40f8cc:	add    cl,ch
  40f8ce:	(bad)  
  40f8d0:	add    ebx,DWORD PTR [esi]
  40f8d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8d3:	xchg   ecx,eax
  40f8d4:	je     0x40f90d
  40f8d6:	ss fwait
  40f8d8:	mov    dh,BYTE PTR [eax+ebx*8-0x5bf9ee82]
  40f8df:	(bad)  
  40f8e0:	(bad)  
  40f8e1:	fwait
  40f8e2:	pop    eax
  40f8e3:	xor    cl,cl
  40f8e5:	sub    ebp,DWORD PTR [edi]
  40f8e7:	rcl    BYTE PTR [ebx+0x62],cl
  40f8ea:	or     eax,DWORD PTR [ebp-0x2cc51e3d]
  40f8f0:	(bad)  
  40f8f1:	fidivr WORD PTR ss:[eax]
  40f8f4:	adc    BYTE PTR [edx+0xe],ah
  40f8f7:	add    DWORD PTR [ecx+edx*8+0x19fed31a],0x34ff0585
  40f902:	pop    edi
  40f903:	pop    edi
  40f904:	add    BYTE PTR [esi+0x1bfef595],dh
  40f90a:	jnp    0x40f894
  40f90c:	mov    edi,0x84ca421c
  40f911:	popf   
  40f912:	stos   BYTE PTR es:[edi],al
  40f913:	sar    dh,cl
  40f915:	jmp    0x6240fe7a
	...
  40f94a:	add    BYTE PTR [eax],al
  40f94c:	dec    ebp
  40f94d:	(bad)  
  40f94f:	add    ch,bl
  40f951:	lods   al,BYTE PTR ds:[esi]
  40f952:	mov    DWORD PTR [edx],edx
  40f954:	aas    
  40f955:	push   ebx
  40f956:	sti    
  40f957:	(bad)  
  40f958:	sub    eax,0x78d4ead
  40f95d:	push   es
  40f95e:	(bad)  
  40f95f:	(bad)  
  40f960:	std    
  40f961:	adc    eax,0x832d106a
  40f966:	idiv   dh
  40f968:	sub    eax,0x9e52fdad
  40f96d:	mov    BYTE PTR [ebx-0x252e304],bh
  40f973:	add    BYTE PTR [esi+0x7abd8d27],dh
  40f979:	lods   al,BYTE PTR ds:[esi]
  40f97a:	std    
  40f97b:	dec    DWORD PTR [ebp-0x800efc1]
  40f981:	or     BYTE PTR [edi-0x1],dl
  40f984:	idiv   esp
  40f986:	out    0x13,eax
  40f988:	ins    DWORD PTR es:[edi],dx
  40f989:	lods   eax,DWORD PTR ds:[esi]
  40f98a:	std    
  40f98b:	add    DWORD PTR [ebp+0x5e8dfdd4],0xffffffae
  40f992:	std    
  40f993:	push   DWORD PTR [edi-0x3e55161a]
  40f999:	pop    edi
  40f99a:	idiv   esi
  40f99c:	or     eax,0xfd1289b9
  40f9a1:	jbe    0x40f999
  40f9a3:	(bad)  
  40f9a4:	sub    eax,0x252fdb9
  40f9a9:	sbb    cl,cl
  40f9ab:	ret    0x51e
  40f9ae:	push   ebp
  40f9af:	mov    eax,DWORD PTR [eax]
	...
  40f9e1:	add    BYTE PTR [esi],cl
  40f9e3:	mov    eax,edx
  40f9e5:	clc    
  40f9e6:	lods   al,BYTE PTR ds:[esi]
  40f9e7:	mov    eax,0x168157fd
  40f9ec:	or     al,0x8b
  40f9ee:	mov    eax,0xfcf8837d
  40f9f3:	mov    eax,0x97050fd
  40f9f8:	push   0x0
  40f9fa:	arpl   WORD PTR [edi+0x50],si
  40f9fd:	or     al,0xbc
  40f9ff:	or     al,0x1c
  40fa01:	test   DWORD PTR [ebx+0x26c735d1],esp
  40fa07:	push   edx
  40fa08:	add    al,0x0
  40fa0a:	arpl   si,bx
  40fa0c:	jb     0x40f998
  40fa0e:	not    BYTE PTR [esi-0x2a]
  40fa11:	(bad)  
  40fa12:	xchg   esp,eax
  40fa13:	push   ebx
  40fa14:	repnz mov WORD PTR [esi],fs
  40fa17:	xor    dh,BYTE PTR [ecx*4-0x129c522]
  40fa1e:	jl     0x40f9ae
  40fa20:	push   0xdc517410
  40fa25:	std    
  40fa26:	ins    BYTE PTR es:[edi],dx
  40fa27:	(bad)  
  40fa29:	push   ecx
  40fa2a:	push   edi
  40fa2b:	cmp    DWORD PTR cs:[edi+ebx*2-0x22],0x72
  40fa31:	jae    0x40f9b6
  40fa33:	pop    ecx
  40fa34:	cdq    
  40fa35:	sti    
  40fa36:	dec    ebp
  40fa37:	out    dx,eax
  40fa38:	(bad)  
  40fa39:	pop    DWORD PTR [ecx+esi*2+0x6]
  40fa3d:	push   DWORD PTR [esi+0x6be82de6]
  40fa43:	pop    es
  40fa44:	xlat   BYTE PTR ds:[ebx]
  40fa45:	inc    BYTE PTR [eax]
	...
  40fa77:	add    al,ah
  40fa79:	es hlt 
  40fa7b:	(bad)  
  40fa7c:	and    al,0xa9
  40fa7e:	(bad)  
  40fa7f:	(bad)  
  40fa80:	xchg   esi,eax
  40fa81:	add    eax,0x52d1ea74
  40fa86:	jo     0x40fa7f
  40fa88:	or     eax,0x718ad5af
  40fa8d:	mov    bh,0x8f
  40fa8f:	idiv   ebp
  40fa91:	mov    esi,0xd691fed5
  40fa96:	xor    eax,0x2d621c9
  40fa9b:	push   ebp
  40fa9c:	fmul   st,st(1)
  40fa9e:	add    ebx,0x74d6f813
  40faa4:	addr16 add eax,0x51bcc91
  40faaa:	jmp    0xec9a9db9
  40faaf:	xor    eax,0x3dcc2aa
  40fab4:	xchg   edx,eax
  40fab5:	in     al,0x69
  40fab7:	ret    
  40fab8:	bound  edi,QWORD PTR [eax+ebx*4-0x78]
  40fabc:	pop    ds
  40fabd:	loope  0x40fad7
  40fabf:	xor    bl,BYTE PTR [ecx+ebx*2+0x7f00ebdd]
  40fac6:	gs (bad) 
  40fac8:	cmp    DWORD PTR [esi-0x2450b791],edi
  40face:	loop   0x40fadd
  40fad0:	ins    BYTE PTR es:[edi],dx
  40fad1:	xchg   edi,eax
  40fad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fad3:	sub    al,0x87
  40fad5:	add    eax,0x8423afac
  40fada:	aas    
  40fadb:	out    dx,eax
	...
  40fb0c:	add    BYTE PTR [eax],al
  40fb0e:	repnz aad 0x1
  40fb11:	into   
  40fb12:	jmp    0x40fb6c
  40fb14:	sbb    edx,ebp
  40fb16:	jl     0x40fb2f
  40fb18:	test   BYTE PTR [ebp+0x330d1fa0],0xbb
  40fb1f:	inc    ecx
  40fb20:	stos   DWORD PTR es:[edi],eax
  40fb21:	inc    esp
  40fb22:	arpl   WORD PTR [eax-0x225b445d],ax
  40fb28:	adc    al,0x4c
  40fb2a:	arpl   WORD PTR ds:0x8058bf6a,ax
  40fb30:	stos   DWORD PTR es:[edi],eax
  40fb31:	mov    ebx,0xb373ceac
  40fb36:	cld    
  40fb37:	jge    0x40fb9a
  40fb39:	aad    0xd
  40fb3b:	jge    0x40fb60
  40fb3d:	mov    ah,0x9e
  40fb3f:	adc    dh,0xf0
  40fb42:	jb     0x40faf6
  40fb44:	addr16 pop edi
  40fb46:	bswap  edi
  40fb48:	call   0x340f5e50
  40fb4d:	mov    al,0x7c
  40fb4f:	inc    ecx
  40fb50:	add    BYTE PTR [ebx],ch
  40fb52:	and    BYTE PTR ds:0x3f17248d,al
  40fb58:	call   0x4613c2
  40fb5d:	push   0xffffffa3
  40fb5f:	cli    
  40fb60:	mov    WORD PTR [edi+edi*8],gs
  40fb63:	notrack call DWORD PTR [edi+ebp*8]
  40fb67:	out    0x57,al
  40fb69:	add    dl,BYTE PTR [esi-0x10db7731]
  40fb6f:	add    DWORD PTR [ebp+eiz*4+0x0],0x0
	...
  40fba3:	add    BYTE PTR [edi-0x32],dl
  40fba6:	je     0x40fb41
  40fba8:	pop    es
  40fba9:	xor    al,0x42
  40fbab:	test   al,0x60
  40fbad:	into   
  40fbae:	xor    al,0xb7
  40fbb0:	cmp    DWORD PTR [eax+eax*1+0x41],eax
  40fbb4:	add    cl,BYTE PTR [ebx-0x1]
  40fbb7:	dec    esi
  40fbb8:	push   0xffffffc5
  40fbba:	push   cs
  40fbbb:	ins    DWORD PTR es:[edi],dx
  40fbbc:	dec    ch
  40fbbe:	(bad)  
  40fbbf:	jmp    0x6b09459d
  40fbc4:	mov    ah,0xc1
  40fbc6:	(bad)  
  40fbc7:	fst    st(4)
  40fbc9:	test   bh,bh
  40fbcb:	call   0xedb5ca30
  40fbd0:	cmp    BYTE PTR [edx],al
  40fbd2:	dec    ecx
  40fbd3:	jmp    0x6b20b038
  40fbd8:	pop    ds
  40fbd9:	add    al,0x89
  40fbdb:	lods   al,BYTE PTR ds:[esi]
  40fbdc:	ror    dh,1
  40fbde:	je     0x40fbcd
  40fbe0:	fisttp WORD PTR [eax-0x4c]
  40fbe3:	imul   BYTE PTR [ebp+0x20a48ec1]
  40fbe9:	iret   
  40fbea:	je     0x40fb9d
  40fbec:	out    0x48,eax
  40fbee:	les    esp,FWORD PTR [esi-0x17006ebb]
  40fbf4:	pusha  
  40fbf5:	add    eax,0x1c570c83
  40fbfa:	inc    ecx
  40fbfb:	add    dl,bh
  40fbfd:	add    DWORD PTR [eax+edx*2+0x77],esi
  40fc01:	(bad)  
  40fc03:	push   eax
  40fc04:	and    BYTE PTR [edx],al
  40fc06:	push   0x0
	...
  40fc38:	add    BYTE PTR [eax],al
  40fc3a:	and    BYTE PTR [ecx],cl
  40fc3c:	lea    eax,[ebp+0x2a]
  40fc3f:	adc    ch,BYTE PTR [edx+0x0]
  40fc42:	aaa    
  40fc43:	xadd   BYTE PTR [eax-0x2b],dl
  40fc47:	fidiv  WORD PTR [esi]
  40fc49:	sub    DWORD PTR [ebx-0x513ff4f7],ecx
  40fc4f:	repz cmp BYTE PTR [ebp+0x66],0x2
  40fc54:	je     0x40fc82
  40fc56:	or     DWORD PTR [edi],esi
  40fc58:	adc    BYTE PTR [eax],al
  40fc5a:	mov    ?,ecx
  40fc5c:	mov    dl,BYTE PTR [ebp-0x76]
  40fc5f:	das    
  40fc60:	mov    DWORD PTR [edx],0x75ff0965
  40fc66:	cmp    BYTE PTR [eax+0x3f25b873],0xbc
  40fc6d:	jmp    FWORD PTR [edi+0x7a036805]
  40fc73:	call   0xaeefe534
  40fc78:	std    
  40fc79:	inc    DWORD PTR [ebp-0x6f1743c5]
  40fc7f:	or     DWORD PTR [eax],eax
  40fc81:	add    BYTE PTR [ebp+0x3b],ah
  40fc84:	enter  0xa6e8,0x3a
  40fc88:	(bad)  
  40fc89:	jmp    DWORD PTR [ebp+0x3b]
  40fc8c:	shr    al,1
  40fc8e:	sahf   
  40fc8f:	cmp    bh,bh
  40fc91:	inc    esp
  40fc93:	mov    edi,0x1c0a0cc0
  40fc98:	mov    ebp,esp
  40fc9a:	mov    DWORD PTR [esi+eax*8+0x8d],ecx
	...
  40fccd:	add    BYTE PTR [eax],al
  40fccf:	add    BYTE PTR [edi],bh
  40fcd1:	mov    ch,0x4e
  40fcd3:	push   0x414372
  40fcd8:	arpl   WORD PTR [eax+0x9],cx
  40fcdb:	push   0x63
  40fcdd:	inc    esi
  40fcde:	in     al,dx
  40fcdf:	inc    ecx
  40fce0:	mov    ds:0x9bbddade,al
  40fce5:	fiadd  WORD PTR [edx]
  40fce7:	test   DWORD PTR [ebx+0x63bf7ae3],esp
  40fced:	fiadd  WORD PTR [edx]
  40fcef:	mov    esi,DWORD PTR [esi]
  40fcf1:	mov    ds:0x21d6117e,al
  40fcf6:	int3   
  40fcf7:	dec    edi
  40fcf8:	mov    esp,0x11fecfe9
  40fcfd:	fiadd  DWORD PTR [edi+0x72565cbf]
  40fd03:	jmp    DWORD PTR [esi+ebx*8-0x2164837b]
  40fd0a:	add    DWORD PTR [edi+ebp*8-0x5bfffd22],eax
  40fd11:	cdq    
  40fd12:	mov    dh,0xff
  40fd14:	test   dh,bl
  40fd16:	add    al,bh
  40fd18:	es push ss
  40fd1a:	add    al,0x0
  40fd1c:	arpl   si,bx
  40fd1e:	leave  
  40fd1f:	inc    esp
  40fd20:	xchg   ebx,eax
  40fd21:	test   BYTE PTR [ebx],0x0
  40fd24:	arpl   WORD PTR [ebx],sp
  40fd26:	dec    ecx
  40fd27:	int3   
  40fd28:	arpl   si,bx
  40fd2a:	add    al,BYTE PTR [eax]
  40fd2c:	call   0x71cbc7a1
  40fd31:	push   ecx
  40fd32:	dec    ecx
  40fd33:	int3   
	...
  40fd64:	add    BYTE PTR [eax],al
  40fd66:	mov    bl,0x59
  40fd68:	dec    ecx
  40fd69:	rcl    BYTE PTR [ebx-0x5100fc78],1
  40fd6f:	not    dl
  40fd71:	push   ecx
  40fd72:	pop    edi
  40fd73:	xlat   BYTE PTR ds:[ebx]
  40fd74:	ret    0x8f74
  40fd77:	pop    edi
  40fd78:	push   ecx
  40fd79:	int3   
  40fd7a:	bound  ecx,QWORD PTR [ecx+0x41]
  40fd7d:	adc    DWORD PTR [esi-0x5a8bfc0e],0x5
  40fd84:	push   ecx
  40fd85:	cmp    al,0xa1
  40fd87:	inc    esi
  40fd88:	jmp    0xc0f2755f
  40fd8d:	enter  0x59c,0xe9
  40fd91:	(bad)  
  40fd92:	lods   al,BYTE PTR ds:[esi]
  40fd93:	push   eax
  40fd94:	repz imul ebx,DWORD PTR [eax*1+0x41ea03e9],0xc45ddea1
  40fda0:	and    edi,DWORD PTR [esp+ecx*8-0x3bfc1735]
  40fda7:	push   ecx
  40fda8:	mov    cl,0xd2
  40fdaa:	aaa    
  40fdab:	mov    cl,0x95
  40fdad:	pop    eax
  40fdae:	imul   ebx,ebp,0xffffff86
  40fdb1:	shr    BYTE PTR [ebp-0x70a77a35],1
  40fdb7:	(bad)  
  40fdb9:	cmp    esp,DWORD PTR [ebx+0x5]
  40fdbc:	push   0x50
  40fdbe:	mov    ebx,0x8dfbf504
  40fdc3:	push   ecx
  40fdc4:	inc    ecx
  40fdc5:	fistp  DWORD PTR [ebp+edi*1-0x17]
  40fdc9:	add    eax,DWORD PTR [eax]
	...
  40fdfb:	add    BYTE PTR [eax+0x7b386178],cl
  40fe01:	jg     0x40fdfd
  40fe03:	shl    bh,cl
  40fe05:	int3   
  40fe06:	inc    ebp
  40fe07:	xor    eax,0xcf93805b
  40fe0c:	jmp    0x57993408
  40fe11:	retf   
  40fe12:	call   0xae03:0xecc81bfb
  40fe19:	jle    0x40fe27
  40fe1b:	xchg   BYTE PTR [eax],ah
  40fe1d:	out    0xbe,al
  40fe1f:	xchg   BYTE PTR [edi+0x79],dh
  40fe22:	stos   BYTE PTR es:[edi],al
  40fe23:	inc    esp
  40fe24:	arpl   WORD PTR ds:0x11df17c,ax
  40fe2a:	ins    DWORD PTR es:[edi],dx
  40fe2b:	inc    ebp
  40fe2c:	mov    ds:0x60e80005,al
  40fe31:	add    eax,0x44902f00
  40fe36:	inc    ecx
  40fe37:	jmp    0xa8a70263
  40fe3c:	dec    ecx
  40fe3d:	pop    es
  40fe3e:	sub    DWORD PTR [edi+0xf83635d],0x67
  40fe45:	push   eax
  40fe46:	repz push 0x54
  40fe49:	mov    ebp,0x567282d
  40fe4e:	(bad)  
  40fe50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe51:	retf   0xe9fe
  40fe54:	out    0x9,eax
  40fe56:	(bad)  
  40fe57:	xlat   BYTE PTR ds:[ebx]
  40fe58:	and    DWORD PTR ds:0xd8e4ee00,eax
  40fe5e:	(bad)  
  40fe5f:	call   0x40fe64
	...
  40fe90:	add    BYTE PTR [eax],al
  40fe92:	pusha  
  40fe93:	xchg   BYTE PTR [ecx+edx*8],bh
  40fe96:	dec    ecx
  40fe97:	inc    esp
  40fe98:	add    cl,ch
  40fe9a:	arpl   WORD PTR [ecx+0x560e9e0],ax
  40fea0:	(bad)  
  40fea1:	sub    al,0xb3
  40fea3:	retf   0xe9fe
  40fea6:	pusha  
  40fea7:	ret    0x6144
  40feaa:	pop    edi
  40feab:	add    eax,0x40fde900
  40feb0:	cld    
  40feb1:	mov    ecx,0xb9f840f5
  40feb6:	push   cs
  40feb7:	add    eax,0x441d2368
  40febc:	add    BYTE PTR [esi],bh
  40febe:	push   esp
  40febf:	(bad)  
  40fec0:	sub    eax,0xbffe60a8
  40fec5:	fsubrp st(4),st
  40fec7:	(bad)  
  40fec8:	(bad)  
  40fec9:	call   0x21bd852e
  40fece:	addr16 cli 
  40fed0:	add    DWORD PTR [ebp+0x5f],0x5
  40fed4:	add    BYTE PTR [edx-0x64],ch
  40fed7:	leave  
  40fed8:	(bad)  
  40fed9:	jmp    FWORD PTR ds:0xa00a082
  40fedf:	push   es
  40fee0:	mov    esi,DWORD PTR [ebp+0xe]
  40fee3:	scas   eax,DWORD PTR es:[edi]
  40fee4:	add    BYTE PTR [eax],0xfa
  40fee7:	add    eax,0xb4648b56
  40feec:	je     0x40ff06
  40feee:	lea    eax,[ebx-0x10]
  40fef1:	call   DWORD PTR [ebp+edx*8+0x458d]
	...
  40ff28:	push   ss
  40ff29:	cs nop
  40ff2b:	inc    edx
  40ff2c:	cmp    eax,DWORD PTR [ecx]
  40ff2e:	call   0x42840a
  40ff33:	shr    DWORD PTR [edx+0x4302be80],1
  40ff39:	inc    ebx
  40ff3a:	loopne 0x40ffa4
  40ff3c:	dec    edx
  40ff3d:	inc    eax
  40ff3e:	inc    ecx
  40ff3f:	add    BYTE PTR [ebp+0x43],cl
  40ff42:	in     al,0xc7
  40ff44:	xchg   ebp,esp
  40ff46:	(bad)  
  40ff47:	(bad)  
  40ff48:	mov    edx,0xd2458d05
  40ff4d:	adc    eax,0x170016a
  40ff52:	push   0x0
  40ff54:	inc    DWORD PTR [edx-0x20]
  40ff57:	push   eax
  40ff58:	pusha  
  40ff59:	add    DWORD PTR [ebp-0xe9d5bb],ecx
  40ff5f:	adc    eax,0x40ee42
  40ff64:	add    ebp,0x3af92d72
  40ff6a:	in     al,dx
  40ff6b:	add    BYTE PTR [esi+0x4a01b81c],ah
  40ff71:	add    eax,0x308a0b00
  40ff76:	push   ss
  40ff77:	call   DWORD PTR [edi]
  40ff79:	int    0xfd
  40ff7b:	jne    0x40ffef
  40ff7d:	mov    ch,0x73
  40ff7f:	in     al,dx
  40ff80:	pop    ebp
  40ff81:	or     BYTE PTR cs:[eax+0x63],ch
  40ff85:	fiadd  DWORD PTR [edx]
  40ff87:	out    dx,eax
  40ff88:	in     eax,dx
  40ff89:	push   es
  40ff8a:	sti    
  40ff8b:	clc    
	...
  40ffbc:	add    BYTE PTR [eax],al
  40ffbe:	and    al,0x0
  40ffc0:	shl    BYTE PTR [edi+ecx*1-0x9],1
  40ffc4:	xchg   ebp,eax
  40ffc5:	inc    esp
  40ffc6:	arpl   si,bx
  40ffc8:	xor    bh,bh
  40ffca:	sahf   
  40ffcb:	(bad)  
  40ffcc:	add    ch,0x5f
  40ffcf:	pop    ebx
  40ffd0:	push   ecx
  40ffd1:	clc    
  40ffd2:	arpl   WORD PTR [edx],si
  40ffd4:	std    
  40ffd5:	xor    BYTE PTR ds:0x7c84fdde,0xb7
  40ffdc:	into   
  40ffdd:	(bad)  
  40ffde:	in     al,0x9
  40ffe0:	sar    dh,1
  40ffe2:	jbe    0x40ff7a
  40ffe4:	sbb    eax,0xbcf06341
  40ffe9:	shl    DWORD PTR [edi-0x22],0x37
  40ffed:	mov    esi,DWORD PTR [edi+0x49f7c85b]
  40fff3:	ficomp WORD PTR [eax+0x2f]
  40fff6:	mov    ah,0xe9
  40fff8:	sti    
  40fff9:	out    0x2,eax
  40fffb:	out    dx,al
  40fffc:	into   
  40fffd:	(bad)  
  40fffe:	ficomp DWORD PTR [ecx]
  410000:	sar    BYTE PTR [edi+0x5e],1
  410003:	xlat   BYTE PTR ds:[ebx]
  410004:	inc    eax
  410005:	inc    ecx
  410006:	arpl   si,bx
  410008:	push   edi
  410009:	sub    ebx,edi
  41000b:	mov    cl,0x40
  41000d:	inc    ecx
  41000e:	arpl   WORD PTR [esi-0x21ddbf41],si
  410014:	(bad)  
  410016:	cmc    
  410017:	cs iret 
  410019:	test   BYTE PTR [ebx+0x53682bb2],ah
  41001f:	pushf  
  410020:	inc    ebx
	...
  410051:	add    BYTE PTR [eax],al
  410053:	add    bl,cl
  410055:	aaa    
  410056:	inc    ebp
  410057:	inc    ecx
  410058:	arpl   WORD PTR [esi-0x4e],ax
  41005b:	jge    0x4100a9
  41005d:	pop    ss
  41005e:	mov    BYTE PTR [esp+edx*2],0x5
  410062:	stos   DWORD PTR es:[edi],eax
  410063:	inc    esp
  410064:	arpl   WORD PTR [esi],ax
  410066:	push   0x11
  410068:	dec    edi
  410069:	inc    ebx
  41006a:	test   al,0x3
  41006c:	arpl   WORD PTR [ecx-0x2d],dx
  41006f:	(bad)  
  410070:	lahf   
  410071:	int    0xe8
  410073:	add    esp,DWORD PTR [ebx+0x5]
  410076:	rol    bl,cl
  410078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410079:	xor    eax,0xcdb78099
  41007e:	call   0x6345:0x2af16fce
  410085:	sub    BYTE PTR [eax-0x9239eb4],0x82
  41008c:	outs   dx,DWORD PTR ds:[esi]
  41008d:	int    0xe8
  41008f:	pop    eax
  410090:	popa   
  410091:	(bad)  
  410093:	into   
  410094:	push   edi
  410095:	int    0xbd
  410097:	pop    eax
  410098:	imul   ebx,ebp,0x3a
  41009b:	retf   
  41009c:	int    0xc7
  41009e:	popa   
  41009f:	cmp    bl,cl
  4100a1:	jnp    0x41009d
  4100a3:	into   
  4100a4:	aaa    
  4100a5:	int    0x9d
  4100a7:	xor    DWORD PTR [ebx-0x38],ebp
  4100aa:	sbb    edi,esp
  4100ac:	les    edi,FWORD PTR [edx]
  4100ae:	mov    esi,cs
  4100b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100b1:	(bad)  
  4100b2:	sti    
  4100b3:	sti    
  4100b4:	test   BYTE PTR [ebx],bl
  4100b6:	jg     0x410086
	...
  4100e8:	add    BYTE PTR [eax],al
  4100ea:	xchg   ebp,eax
  4100eb:	(bad)  
  4100ec:	sti    
  4100ed:	iret   
  4100ee:	lea    edx,[ecx-0x1f]
  4100f1:	(bad)  [eax]
  4100f3:	push   esi
  4100f4:	data16 into 
  4100f6:	stos   DWORD PTR es:[edi],eax
  4100f7:	ret    0x3e4
  4100fa:	push   cs
  4100fb:	jl     0x410141
  4100fd:	and    BYTE PTR [eax+0x1036b6d4],0x7c
  410104:	fwait
  410105:	jmp    DWORD PTR ds:0x6303e904
  41010b:	add    eax,0xfdab3600
  410110:	out    0x6d,eax
  410112:	pushf  
  410113:	add    eax,0x6286a00
  410118:	ja     0x41010a
  41011a:	pop    ecx
  41011b:	lds    ebx,FWORD PTR [edx-0x4a]
  41011e:	jle    0x4100dc
  410120:	shl    ecx,0x60
  410123:	mov    ah,0xe7
  410125:	jb     0x410182
  410127:	stc    
  410128:	mov    bl,ch
  41012a:	cdq    
  41012b:	scas   al,BYTE PTR es:[edi]
  41012c:	push   cs
  41012d:	imul   edi,DWORD PTR [edx-0x7616013a],0x51
  410134:	or     BYTE PTR [edx-0x54],dh
  410137:	std    
  410138:	jmp    0x1369:0x57a7d43
  41013f:	pop    ss
  410140:	jb     0x410125
  410142:	loopne 0x41010e
  410144:	cmp    BYTE PTR [esi],bh
  410146:	fs test ebx,ebp
  410149:	stc    
  41014a:	mov    ebx,0xb57feb
	...
  41017f:	add    BYTE PTR [eax],ah
  410181:	push   ebx
  410182:	or     eax,0x7740b369
  410187:	icebp  
  410188:	loopne 0x410164
  41018a:	inc    eax
  41018b:	imul   ebp,DWORD PTR [ebx+0x4be0eafc],0x752e5ac5
  410195:	mov    esp,0x960f1c1
  41019a:	xor    bl,bh
  41019c:	cwde   
  41019d:	or     bh,BYTE PTR [ecx]
  41019f:	(bad)  
  4101a0:	sbb    DWORD PTR fs:[eax],esi
  4101a3:	or     BYTE PTR [esi+0x7adb410a],0xa
  4101aa:	inc    esi
  4101ab:	(bad)  
  4101ac:	pop    esi
  4101ad:	sbb    DWORD PTR [ecx-0x13],eax
  4101b0:	push   0xffffffdb
  4101b2:	or     BYTE PTR [edx],al
  4101b4:	lahf   
  4101b5:	sub    ebx,DWORD PTR [edi+0x0]
  4101b8:	add    al,0x8b
  4101ba:	ror    BYTE PTR [eax],0x4a
  4101bd:	ret    0x4de
  4101c0:	inc    eax
  4101c1:	mov    esi,0xbfb94ba8
  4101c6:	add    BYTE PTR [ebx],cl
  4101c8:	mov    eax,ds:0xff8ba22e
  4101cd:	(bad)  
  4101d0:	lds    edi,FWORD PTR [esi]
  4101d2:	clc    
  4101d3:	dec    edi
  4101d5:	leave  
  4101d6:	lea    eax,[ebp+0x66]
  4101d9:	rol    BYTE PTR [ebx-0xc],0xa
  4101dd:	add    al,BYTE PTR [eax]
  4101df:	add    BYTE PTR [ecx-0xa],bh
  4101e2:	aaa    
  4101e3:	sub    DWORD PTR [eax],eax
	...
  410215:	add    BYTE PTR [ebx+0x3c740001],bh
  41021b:	inc    esi
  41021c:	inc    esp
  41021d:	lock cmp ch,BYTE PTR [ebx]
  410220:	add    DWORD PTR [edx-0x6],ebp
  410223:	sub    eax,DWORD PTR [eax]
  410225:	push   0xfffffffa
  410227:	sub    eax,DWORD PTR [eax]
  410229:	lea    ecx,[edi-0x5000b147]
  41022f:	stc    
  410230:	sub    BYTE PTR [ecx-0x46],al
  410233:	int3   
  410234:	mov    esi,0x7b84d074
  410239:	hlt    
  41023a:	retf   0x342d
  41023d:	mov    edi,DWORD PTR [edi+0x5]
  410240:	mov    ecx,DWORD PTR [ebp-0x36]
  410243:	cld    
  410244:	pop    es
  410245:	ja     0x4101e7
  410247:	mov    ch,0x89
  410249:	jne    0x410269
  41024b:	dec    ebp
  41024c:	jl     0x410256
  41024e:	adc    DWORD PTR [edi],eax
  410250:	lock jecxz 0x4102cb
  410253:	mov    ah,0xa2
  410255:	mov    edi,DWORD PTR [edi]
  410257:	add    eax,0x491a75ff
  41025c:	(bad)  
  41025d:	dec    BYTE PTR [edi+0x63e3e6ad]
  410263:	fwait
  410264:	add    al,BYTE PTR [eax]
  410266:	stos   DWORD PTR es:[edi],eax
  410267:	fadd   QWORD PTR [edx]
  410269:	add    BYTE PTR [ebx+0x67],ah
  41026c:	sub    ebx,DWORD PTR [esi+0x2a]
  41026f:	icebp  
  410270:	cli    
  410271:	(bad)  
  410272:	jns    0x410262
  410274:	daa    
  410275:	pop    edi
  410276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410277:	in     eax,0xc0
  410279:	pop    es
	...
  4102aa:	add    BYTE PTR [eax],al
  4102ac:	arpl   WORD PTR [ecx-0x151f1489],ax
  4102b2:	ret    0x6367
  4102b5:	into   
  4102b6:	add    al,BYTE PTR [eax]
  4102b8:	cmp    edx,DWORD PTR [ecx+edx*2-0x1]
  4102bc:	sbb    al,0x36
  4102be:	inc    esi
  4102bf:	cld    
  4102c0:	mov    ebp,DWORD PTR [esi+0x6630022]
  4102c6:	xchg   ecx,eax
  4102c7:	jno    0x4102cd
  4102c9:	mov    ah,0x78
  4102cb:	inc    esp
  4102cc:	sti    
  4102cd:	push   esi
  4102ce:	add    al,0x20
  4102d0:	arpl   WORD PTR [esi-0x248e5b26],bp
  4102d6:	retf   0x9e88
  4102d9:	ficomp DWORD PTR [ebx+0x0]
  4102dc:	sub    DWORD PTR [esi+0xfbe802],0xffffffcb
  4102e3:	(bad)  
  4102e4:	(bad)  
  4102e6:	shl    DWORD PTR [edi+0x63],cl
  4102e9:	push   cs
  4102ea:	add    al,0x0
  4102ec:	retf   
  4102ed:	aaa    
  4102ee:	push   esi
  4102ef:	push   DWORD PTR [ebp+esi*1-0x51c413bf]
  4102f6:	and    al,BYTE PTR [eax]
  4102f8:	arpl   WORD PTR [esi-0x74638db7],ax
  4102fe:	jl     0x410344
  410300:	mov    edx,DWORD PTR [esi]
  410302:	add    al,0x20
  410304:	arpl   WORD PTR [esi+0x331170da],bp
  41030a:	retf   
  41030b:	mov    BYTE PTR [esi],ah
  41030d:	add    eax,0xcb4d
	...
  410342:	out    dx,eax
  410343:	adc    al,0xd1
  410345:	repnz and DWORD PTR [esi-0x17],eax
  410349:	retf   0xc0ef
  41034c:	inc    eax
  41034d:	jnp    0x4102ef
  41034f:	add    eax,0x112086e9
  410354:	ds push ecx
  410356:	jae    0x410385
  410358:	add    eax,DWORD PTR [edi-0x5e]
  41035b:	add    eax,0xad3b512e
  410360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410361:	aas    
  410362:	arpl   WORD PTR ds:0xc458c06a,ax
  410368:	fwait
  410369:	repz mov esp,0x6344aa04
  41036f:	les    edi,FWORD PTR [ebx-0x31]
  410372:	cld    
  410373:	sub    eax,0x886303a5
  410378:	sub    al,0xf8
  41037a:	add    eax,0x9d5bd93a
  41037f:	dec    eax
  410380:	sub    BYTE PTR [esp+esi*8],al
  410383:	cmp    ecx,ebx
  410385:	fist   DWORD PTR [esi-0x1ffc16b7]
  41038b:	enter  0xcadc,0x57
  41038f:	adc    eax,0x46205551
  410394:	jmp    0xc0f25b63
  410399:	inc    esi
  41039a:	pop    ds
  41039b:	add    eax,0x10a086e9
  4103a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103a1:	push   eax
  4103a2:	addr16 sub eax,0x4666
	...
  4103d8:	and    al,BYTE PTR ds:0xacbb5096
  4103de:	fdivr  DWORD PTR [edi]
  4103e0:	arpl   WORD PTR ds:0xc468bf6a,ax
  4103e6:	repz repz add al,0x98
  4103ea:	jmp    FWORD PTR [ecx]
  4103ec:	push   ds
  4103ed:	add    eax,0xab9cf4ff
  4103f2:	sbb    al,0xad
  4103f4:	pusha  
  4103f5:	add    eax,0x2d742583
  4103fa:	add    BYTE PTR [esi+0x13],dl
  4103fd:	sar    esi,0xd4
  410400:	push   esp
  410401:	les    esi,FWORD PTR [edi+ebx*4]
  410404:	ja     0x41044a
  410406:	add    BYTE PTR [ecx+0x11],dl
  410409:	aaa    
  41040a:	push   DWORD PTR [esi]
  41040c:	(bad)  
  41040d:	dec    ecx
  41040e:	loopne 0x4103d3
  410410:	pusha  
  410411:	ret    0x2174
  410414:	sub    DWORD PTR [edx],edi
  410416:	or     al,0x1e
  410418:	push   ebx
  410419:	pop    ebx
  41041a:	sub    DWORD PTR [eax-0x6a3f52a0],ebp
  410420:	sub    esp,eax
  410422:	mov    BYTE PTR [esp+edi*4-0x6301ffd4],ch
  410429:	mov    ecx,0xc40c7cfe
  41042e:	xor    al,0x97
  410430:	pop    edi
  410431:	inc    esp
  410432:	add    cl,dl
  410434:	(bad)  
  410435:	ss (bad) 
  410437:	fisubr WORD PTR [eax+0x49]
  41043a:	fadd   DWORD PTR [ebx+0x0]
	...
  41046d:	add    BYTE PTR [edi-0x3e],bl
  410470:	je     0x41044b
  410472:	stos   BYTE PTR es:[edi],al
  410473:	cmp    eax,ebp
  410475:	(bad)  
  410476:	fs pop ebx
  410478:	sub    DWORD PTR [eax],ebp
  41047a:	lods   eax,DWORD PTR ds:[si]
  41047c:	xchg   esp,eax
  41047d:	cmp    eax,0x2488c39a
  410482:	repz sub al,0x0
  410485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410486:	and    al,0xb1
  410488:	(bad)  
  410489:	adc    al,0x8f
  41048b:	ret    
  41048c:	xor    al,0x3f
  41048e:	dec    eax
  41048f:	inc    esp
  410490:	add    BYTE PTR [ecx+0xff392a],al
  410496:	fnstsw WORD PTR [esi]
  410498:	inc    esp
  410499:	sar    bh,1
  41049b:	add    eax,eax
  41049d:	push   eax
  41049e:	or     eax,0x77ffe452
  4104a3:	mov    edx,0x1fb435fd
  4104a8:	inc    ecx
  4104a9:	add    BYTE PTR [edx],dl
  4104ab:	and    al,0x74
  4104ad:	dec    DWORD PTR ds:0xc9cc443e
  4104b3:	dec    edx
  4104b4:	loopne 0x4104b6
  4104b6:	dec    ebp
  4104b7:	inc    edx
  4104b8:	mov    dh,0x0
  4104ba:	cmp    al,BYTE PTR [esi]
  4104bc:	cmp    DWORD PTR [ebp+0x66],0x9
  4104c0:	je     0x410e85
  4104c6:	leave  
  4104c7:	dec    edx
  4104c8:	rol    BYTE PTR [eax],1
  4104ca:	cmp    eax,0x3a00a242
  4104cf:	push   es
  4104d0:	lea    eax,[ebp+0x0]
	...
  410503:	add    BYTE PTR [esi-0x7],al
  410506:	(bad)  
  410507:	jne    0x41057f
  410509:	loope  0x410559
  41050b:	std    
  41050c:	or     eax,0xfdc009cd
  410511:	inc    ecx
  410512:	mov    es,WORD PTR [eax]
  410514:	or     al,BYTE PTR [esi]
  410516:	cmp    DWORD PTR [ebp-0x3a],0x5
  41051a:	je     0x410ba7
  410520:	jg     0x410525
  410522:	enter  0xad50,0x52
  410526:	shr    al,1
  410528:	fmul   st,st(2)
  41052a:	std    
  41052b:	call   ecx
  41052d:	lds    esi,FWORD PTR [edx+0x75]
  410530:	cmp    DWORD PTR [ebx-0x38],ecx
  410533:	add    BYTE PTR [esi+0x5c],dh
  410536:	push   0xbcdcca10
  41053b:	call   DWORD PTR [edi-0x3f]
  41053e:	out    0x76,al
  410540:	arpl   WORD PTR [ecx],cx
  410542:	leave  
  410543:	(bad)  
  410544:	pushf  
  410545:	sbb    ah,ah
  410547:	dec    BYTE PTR [esi]
  410549:	mov    ah,0xda
  41054b:	int3   
  41054c:	inc    BYTE PTR [edx-0x38]
  41054f:	dec    BYTE PTR [esi]
  410551:	cwde   
  410552:	(bad)  
  410553:	je     0x4105c0
  410555:	test   ah,al
  410557:	ins    BYTE PTR es:[edi],dx
  410558:	je     0x410584
  41055a:	enter  0x8b74,0x62
  41055e:	dec    esi
  41055f:	or     BYTE PTR [ebx-0x5e],bh
  410562:	push   ebp
  410563:	call   FWORD PTR [eax+edx*2+0x4e]
  410567:	les    eax,FWORD PTR [eax]
	...
  410599:	add    BYTE PTR [edx+eax*4-0x52],dl
  41059d:	(bad)  
  41059e:	(bad)  
  41059f:	mov    dh,0xda
  4105a1:	jl     0x410559
  4105a3:	test   edi,0xc7e6b6fe
  4105a9:	je     0x4105be
  4105ab:	call   0x907c0dfd
  4105b0:	push   ebp
  4105b1:	jmp    DWORD PTR [esp+ebp*1]
  4105b4:	inc    esi
  4105b5:	int3   
  4105b6:	arpl   WORD PTR [edx-0x11697d13],bx
  4105bc:	(bad)  
  4105bd:	je     0x41061b
  4105bf:	xor    edi,DWORD PTR [esi]
  4105c1:	int3   
  4105c2:	add    al,0x7f
  4105c4:	(bad)  
  4105c5:	je     0x410632
  4105c7:	push   es
  4105c8:	and    ebp,DWORD PTR [ebp-0xc]
  4105cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105cc:	fimul  DWORD PTR [ecx]
  4105ce:	jns    0x41057e
  4105d0:	lds    esi,FWORD PTR [ebx+ebx*2-0x3a]
  4105d4:	out    dx,eax
  4105d5:	ins    BYTE PTR es:[edi],dx
  4105d6:	fmul   st(7),st
  4105d8:	(bad)  
  4105d9:	je     0x4105b2
  4105db:	(bad)  
  4105dc:	sub    BYTE PTR [edi-0x34],0x7f
  4105e0:	(bad)  
  4105e1:	je     0x4105ae
  4105e3:	(bad)  
  4105e4:	dec    edx
  4105e5:	jo     0x4105a3
  4105e7:	outs   dx,DWORD PTR ds:[esi]
  4105e8:	(bad)  
  4105e9:	je     0x41059a
  4105eb:	add    eax,0xc0335391
  4105f0:	popf   
  4105f1:	(bad)  
  4105f2:	das    
  4105f3:	mov    ch,0x80
  4105f5:	pop    ebx
  4105f6:	adc    eax,eax
  4105f8:	(bad)  
  4105f9:	(bad)  
  4105fa:	cmpxchg DWORD PTR [eax+0x63],edx
	...
  41062d:	add    BYTE PTR [eax],al
  41062f:	add    BYTE PTR [ebx],dl
  410631:	sar    BYTE PTR [ebp-0x39],0xf
  410635:	lods   eax,DWORD PTR ds:[esi]
  410636:	sub    BYTE PTR [ebx],0xf3
  410639:	mov    edi,0xa8efc76d
  41063e:	push   eax
  41063f:	xor    esi,ebx
  410641:	mov    edi,0xa4efc75d
  410646:	inc    eax
  410647:	cmp    edx,ebx
  410649:	ror    BYTE PTR [ebp-0x39],0xcf
  41064d:	loope  0x41069f
  41064f:	inc    ebx
  410650:	rol    eax,cl
  410652:	cmp    eax,0x40ddcfc7
  410657:	or     esi,DWORD PTR [ebx-0x5038d240]
  41065d:	fst    DWORD PTR [eax]
  41065f:	adc    esi,DWORD PTR [ebx-0x5038e240]
  410665:	aad    0x0
  410667:	sbb    edx,DWORD PTR [ebx-0x7038f240]
  41066d:	rcl    DWORD PTR [eax],1
  41066f:	and    edx,DWORD PTR [ebx+0x22bcfdc0]
  410675:	adc    ecx,ebp
  410677:	xor    al,ch
  410679:	mov    al,0x67
  41067b:	sar    ah,0xb7
  41067e:	in     eax,0xc6
  410680:	fisttp WORD PTR [ecx-0x23]
  410683:	xor    esp,esp
  410685:	cmp    ebp,esp
  410687:	(bad)  
  410688:	xchg   edi,eax
  410689:	push   edi
  41068a:	add    BYTE PTR [ebp+0x63],al
  41068d:	lods   eax,DWORD PTR ds:[esi]
  41068e:	dec    esp
  41068f:	inc    edx
  410690:	arpl   WORD PTR ds:0xc3f2,ax
	...
  4106c6:	push   ebp
  4106c7:	mov    bh,bh
  4106c9:	fsub   QWORD PTR [edi+0x5]
  4106cc:	add    BYTE PTR [esi-0x170042dd],ah
  4106d2:	pusha  
  4106d3:	add    eax,0xbe9324c7
  4106d8:	push   es
  4106d9:	jmp    0x341323e
  4106de:	pop    edi
  4106df:	sub    eax,DWORD PTR [eax]
  4106e1:	adc    esp,DWORD PTR [edi-0x6e]
  4106e4:	inc    esp
  4106e5:	jne    0x410737
  4106e7:	xchg   edx,eax
  4106e8:	test   BYTE PTR [ecx-0x53],bh
  4106eb:	mov    esi,0x389c19fe
  4106f0:	clc    
  4106f1:	adc    ax,cx
  4106f4:	out    0x17,eax
  4106f6:	and    DWORD PTR ds:0x3320e200,eax
  4106fc:	add    eax,0xfebf0540
  410701:	jmp    0xa868cdae
  410706:	pusha  
  410707:	mov    esi,0x5e18e574
  41070c:	jae    0x41073c
  41070e:	sbb    eax,0xab398b4f
  410713:	mov    edi,ebp
  410715:	push   ss
  410716:	sbb    eax,0x38bb4fc0
  41071b:	dec    esi
  41071c:	jae    0x41072c
  41071e:	sbb    eax,0x1d11848e
  410723:	sar    dh,0x11
  410726:	jge    0x410757
  410728:	push   esi
	...
  41075a:	add    BYTE PTR [eax],al
  41075c:	je     0x4107a7
  41075e:	lock cdq 
  410760:	cwde   
  410761:	or     al,BYTE PTR [ebx+0x28]
  410764:	addr16 mov esi,0xc016d1b4
  41076a:	(bad)  
  41076b:	(bad)  
  41076c:	ins    BYTE PTR es:[edi],dx
  41076d:	push   edi
  41076e:	sub    DWORD PTR [eax],ebp
  410770:	pop    edi
  410771:	lods   eax,DWORD PTR ds:[esi]
  410772:	pushf  
  410773:	add    BYTE PTR [eax+0x3f89fdc8],cl
  410779:	(bad)  
  41077b:	push   ebp
  41077d:	test   BYTE PTR [ebx-0x2371214],bh
  410783:	add    BYTE PTR [esi-0x15],cl
  410786:	cmp    BYTE PTR [ebp-0x36],0x5
  41078a:	jne    0x4107d5
  41078c:	add    DWORD PTR [esi],edi
  41078e:	jmp    0x410787
  410790:	in     eax,0xc8
  410792:	std    
  410793:	xor    BYTE PTR ds:0x5f7eb3e,dl
  410799:	enter  0xbd7f,0xe6
  41079d:	sar    ch,1
  41079f:	jmp    edx
  4107a1:	add    al,0x0
  4107a3:	add    BYTE PTR [esp+edi*4-0x2fe97a3b],cl
  4107aa:	std    
  4107ab:	jmp    DWORD PTR [edx-0x5efffffc]
  4107b1:	stos   DWORD PTR es:[edi],eax
  4107b2:	std    
  4107b3:	lea    esi,[esi-0x7a000230]
  4107b9:	mov    gs,edx
  4107bb:	div    DWORD PTR [ebp-0x38]
  4107be:	std    
  4107bf:	mov    ch,0x0
	...
  4107f1:	add    BYTE PTR [edx-0x7a000230],ah
  4107f7:	dec    esi
  4107f8:	or     al,ch
  4107fa:	add    al,dh
  4107fc:	std    
  4107fd:	dec    DWORD PTR [ecx+0x65f7ea86]
  410803:	enter  0x74fe,0x47
  410807:	enter  0xecb3,0xd
  41080b:	leave  
  41080c:	std    
  41080d:	call   0x406128
  410812:	add    eax,0x5f7ea8f
  410817:	leave  
  410818:	out    0x11,al
  41081a:	xchg   ebp,eax
  41081b:	enter  0xfffd,0x63
  41081f:	mov    eax,ds:0xced4f6da
  410824:	ret    
  410825:	je     0x410882
  410827:	aam    0xde
  410829:	std    
  41082a:	les    edi,FWORD PTR [esi-0x3d]
  41082d:	mov    ah,0xcb
  41082f:	jle    0x4107f4
  410831:	dec    bl
  410833:	jae    0x410889
  410835:	jmp    FWORD PTR [esi+eiz*2+0x62baf83d]
  41083c:	(bad)  
  41083d:	(bad)  
  41083e:	pushf  
  41083f:	xchg   esi,eax
  410840:	dec    ebp
  410841:	cld    
  410842:	mov    ebp,ecx
  410844:	inc    edx
  410845:	add    BYTE PTR [ebx+0x75],ah
  410848:	rol    BYTE PTR [edi],0x63
  41084b:	sbb    DWORD PTR [ecx-0x15],edi
  41084e:	loopne 0x4108bf
  410850:	(bad)  
  410851:	imul   esp,DWORD PTR [ebx+0x2],0xff14
	...
  410888:	div    BYTE PTR [ebx+0x5ef709da]
  41088e:	les    ecx,FWORD PTR [eax-0xaa4ad5a]
  410894:	mov    eax,ds:0xd6ff026d
  410899:	mov    dh,0xda
  41089b:	mov    ds:0xfec3fc45,al
  4108a0:	mov    dh,0xf2
  4108a2:	ret    
  4108a3:	je     0x410910
  4108a5:	inc    esi
  4108a6:	push   cs
  4108a7:	ins    BYTE PTR es:[edi],dx
  4108a8:	sub    al,0xe4
  4108aa:	mov    ecx,0x2dae5fc1
  4108af:	mov    ecx,DWORD PTR [edi]
  4108b1:	xor    BYTE PTR [edi+0x5873adfb],bh
  4108b7:	add    BYTE PTR [ecx+0x7d],bh
  4108ba:	ret    
  4108bb:	je     0x410918
  4108bd:	push   ss
  4108be:	lods   al,BYTE PTR ds:[esi]
  4108bf:	push   0xfffffffc
  4108c1:	mov    bl,0x78
  4108c3:	inc    esp
  4108c4:	mul    DWORD PTR [edi]
  4108c6:	push   cs
  4108c7:	outs   dx,DWORD PTR ds:[esi]
  4108c8:	cmp    eax,DWORD PTR ds:0xfad80428
  4108ce:	pop    ecx
  4108cf:	in     al,dx
  4108d0:	and    eax,DWORD PTR ds:0x31630369
  4108d6:	and    al,0x2c
  4108d8:	add    eax,0x2c042849
  4108dd:	lods   eax,DWORD PTR ds:[esi]
  4108de:	fadd   QWORD PTR [ebx+eiz*2+0x5]
  4108e2:	loop   0x4108a7
  4108e4:	xor    BYTE PTR [edi+edx*1],bl
  4108e7:	lods   al,BYTE PTR ds:[esi]
  4108e8:	ins    DWORD PTR es:[edi],dx
  4108e9:	cmp    eax,0xc3a6
	...
  41091e:	adc    al,0x2d
  410920:	jmp    0xbc9528
  410925:	je     0x410948
  410927:	inc    esi
  410928:	jmp    0xf1739580
  41092d:	stos   DWORD PTR es:[edi],eax
  41092e:	push   ebx
  41092f:	cwde   
  410930:	jge    0x4108f5
  410932:	test   BYTE PTR [edx+0x7],bl
  410935:	ret    
  410936:	jne    0x4108e8
  410938:	out    0x49,eax
  41093a:	jecxz  0x410937
  41093c:	call   0x5d847279
  410941:	neg    DWORD PTR [esi+edi*2]
  410944:	push   ebp
  410945:	ret    
  410946:	push   ebp
  410947:	mov    esp,0x494725a
  41094c:	mov    esp,0x3d32457e
  410951:	ret    
  410952:	mov    bh,0xd
  410954:	inc    ecx
  410955:	jge    0x410920
  410957:	mov    esp,0xce8d632d
  41095c:	sub    cl,BYTE PTR [eax]
  41095e:	arpl   WORD PTR [edx+0x72],dx
  410961:	mov    al,0xe1
  410963:	rcl    BYTE PTR [eax],0x57
  410966:	sbb    al,0x42
  410968:	adc    DWORD PTR [ebx+eiz*2],eax
  41096b:	add    eax,0xb99fcae9
  410970:	call   0x466c78
  410975:	bound  ebp,QWORD PTR [edx+0x60b18309]
  41097b:	xor    cl,BYTE PTR [ecx]
  41097d:	adc    bl,BYTE PTR [edi]
  41097f:	out    dx,eax
  410980:	rol    DWORD PTR [edx+0x0],1
	...
  4109b3:	add    BYTE PTR [esi+0x55e90bc5],ch
  4109b9:	add    eax,0xb060e900
  4109be:	pusha  
  4109bf:	push   0x23
  4109c1:	adc    eax,0x906a3500
  4109c6:	inc    esp
  4109c7:	(bad)  
  4109c9:	adc    edi,edi
  4109cb:	xor    al,0x53
  4109cd:	mov    esp,0xcaf8f174
  4109d2:	addr16 sahf 
  4109d4:	mov    eax,ds:0x5be0fa86
  4109d9:	add    cl,BYTE PTR [ecx]
  4109db:	and    al,0xcf
  4109dd:	scas   al,BYTE PTR es:[edi]
  4109de:	inc    ebp
  4109df:	sbb    DWORD PTR [edx+0x3a],edi
  4109e2:	(bad)  
  4109e3:	jle    0x410986
  4109e5:	or     al,0x45
  4109e7:	jno    0x410a01
  4109e9:	outs   dx,BYTE PTR ds:[esi]
  4109ea:	jg     0x4109d5
  4109ec:	pusha  
  4109ed:	add    eax,0xf6b5eb75
  4109f2:	and    BYTE PTR [edx+0x68],0x30
  4109f6:	adc    eax,0x8abdab62
  4109fb:	mov    ah,0xc
  4109fd:	or     al,0xa4
  4109ff:	sub    ebx,DWORD PTR [eax-0x3c]
  410a02:	fcomip st,st(1)
  410a04:	out    dx,eax
  410a05:	inc    ecx
  410a06:	clc    
  410a07:	pusha  
  410a08:	fwait
  410a09:	mov    ecx,0x41dddaea
  410a0e:	clc    
  410a0f:	jb     0x41099c
  410a11:	mov    ecx,0x426450e
  410a16:	ror    DWORD PTR [ecx],0x0
	...
  410a49:	add    BYTE PTR [ecx-0x74],ch
  410a4c:	inc    esp
  410a4d:	adc    edi,ebx
  410a4f:	push   ecx
  410a50:	cld    
  410a51:	add    BYTE PTR [ecx+0x7409f983],bh
  410a57:	cwde   
  410a58:	mov    DWORD PTR [ebp-0x2],eax
  410a5b:	xor    DWORD PTR [esi],0x0
  410a5e:	ja     0x410a6c
  410a60:	sub    eax,eax
  410a62:	push   ecx
  410a63:	shr    ecx,cl
  410a65:	push   es
  410a66:	push   ecx
  410a67:	inc    edx
  410a68:	clc    
  410a69:	mov    edx,DWORD PTR [edi-0x736a63b]
  410a6f:	adc    eax,0x75515500
  410a74:	add    esp,0x66a326f6
  410a7a:	mov    eax,DWORD PTR [ecx]
  410a7c:	cmp    DWORD PTR [ebp-0x72],eax
  410a7f:	cld    
  410a80:	add    eax,0xc0cefa2b
  410a85:	adc    BYTE PTR [edx+0x64a433c5],cl
  410a8b:	inc    esi
  410a8c:	add    al,ch
  410a8e:	pop    ebp
  410a8f:	jmp    0x8df8:0x4213fffe
  410a96:	inc    edi
  410a97:	lds    ecx,FWORD PTR [esi-0x18]
  410a9a:	push   ds
  410a9b:	in     eax,dx
  410a9c:	(bad)  
  410a9d:	(bad)  
  410a9e:	std    
  410a9f:	icebp  
  410aa0:	adc    edi,edi
  410aa2:	xchg   DWORD PTR [edx],ecx
  410aa4:	push   DWORD PTR [ebp-0x3e]
  410aa7:	les    esi,FWORD PTR [ebx+0x8]
  410aaa:	mov    ds:0xff662e,al
	...
  410adf:	add    BYTE PTR [ebp-0x49f03ff8],bl
  410ae5:	das    
  410ae6:	(bad)  
  410ae7:	dec    DWORD PTR [edx-0x3b]
  410aea:	jae    0x410af8
  410aec:	ins    DWORD PTR es:[edi],dx
  410aed:	repnz idiv edi
  410af0:	idiv   DWORD PTR [ecx-0x1a]
  410af3:	stc    
  410af4:	xlat   BYTE PTR ds:[ebx]
  410af5:	(bad)  
  410af6:	std    
  410af7:	mov    eax,edi
  410af9:	or     DWORD PTR [ebx],edi
  410afb:	inc    ebp
  410afc:	arpl   WORD PTR [edi+ecx*1+0x2abc783],di
  410b03:	add    BYTE PTR [ecx+edi*1],al
  410b06:	pop    ss
  410b07:	push   DWORD PTR [esi-0x4c]
  410b0a:	stos   BYTE PTR es:[edi],al
  410b0b:	mov    eax,ds:0x88bfb37c
  410b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b11:	mov    al,0xab
  410b13:	jae    0x410af9
  410b15:	lock mov bh,0x2a
  410b18:	mov    cl,0x36
  410b1a:	inc    esi
  410b1b:	hlt    
  410b1c:	int3   
  410b1d:	or     BYTE PTR [eax+0x65],ch
  410b20:	and    ch,BYTE PTR [ebx+ecx*1-0x5451b02e]
  410b27:	addr16 dec ecx
  410b29:	lods   al,BYTE PTR ds:[esi]
  410b2a:	push   edx
  410b2b:	jmp    FWORD PTR [esi]
  410b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b2e:	stos   BYTE PTR es:[edi],al
  410b2f:	mov    BYTE PTR [edi+0x6b],al
  410b32:	mov    edi,0xbfb82efe
  410b37:	je     0x410ba4
  410b39:	xchg   esp,eax
  410b3a:	xor    esp,DWORD PTR [edi-0x6c]
  410b3d:	xchg   edx,eax
  410b3e:	mov    edx,DWORD PTR [edi+esi*2+0x2f]
  410b42:	std    
  410b43:	inc    DWORD PTR [eax]
	...
  410b75:	add    BYTE PTR [edi],cl
  410b77:	scas   al,BYTE PTR es:[edi]
  410b78:	stos   DWORD PTR es:[edi],eax
  410b79:	inc    edi
  410b7a:	jmp    0x2948:0x668ab7e0
  410b81:	inc    ecx
  410b82:	arpl   WORD PTR [edi],bp
  410b84:	stos   BYTE PTR es:[edi],al
  410b85:	add    edx,DWORD PTR [edx]
  410b87:	and    esi,DWORD PTR [esi]
  410b89:	adc    al,0xb2
  410b8b:	push   edi
  410b8c:	ss clc 
  410b8e:	push   esp
  410b8f:	fimul  DWORD PTR [edx]
  410b91:	call   0xff00cb1a
  410b96:	stos   BYTE PTR es:[edi],al
  410b97:	mov    bl,0xc2
  410b99:	je     0x410bfc
  410b9b:	push   ebx
  410b9c:	out    0x50,al
  410b9e:	xor    al,0x7a
  410ba0:	mov    edx,0xaaeab6fe
  410ba5:	jns    0x410b65
  410ba7:	add    eax,0x331dc026
  410bac:	sbb    eax,0x162190ab
  410bb1:	ror    BYTE PTR [edi+0x5],0xe9
  410bb5:	inc    ebx
  410bb6:	pop    ebp
  410bb7:	das    
  410bb8:	jmp    0x410b66
  410bba:	test   BYTE PTR fs:[ebx-0x49],bh
  410bbe:	hlt    
  410bbf:	xor    DWORD PTR [edi-0x54],ebp
  410bc2:	push   esp
  410bc3:	mov    eax,0x3fcbf73
  410bc8:	dec    ebp
  410bc9:	mov    edi,0xc023c0dd
  410bce:	aam    0xb8
  410bd0:	call   0xf583e3d8
  410bd5:	mov    ah,0xb8
  410bd8:	call   0x410be0
	...
  410c09:	add    BYTE PTR [eax],al
  410c0b:	add    BYTE PTR [ebx-0x48],ah
  410c0e:	xor    edi,DWORD PTR [esp+edi*4-0x5240bac6]
  410c15:	mov    WORD PTR [ebx],fs
  410c17:	rcr    BYTE PTR [ebx+0x3603f8c3],0x8c
  410c1e:	mov    WORD PTR [edi-0x18],ss
  410c21:	inc    edx
  410c22:	in     eax,0x82
  410c24:	int3   
  410c25:	or     eax,0x2907ac39
  410c2a:	xchg   BYTE PTR [edi+0x397dbde9],bh
  410c30:	addr16 mov ch,ch
  410c33:	mov    esi,0x475e14f7
  410c38:	pop    edi
  410c39:	test   bl,ah
  410c3b:	packsswb mm6,QWORD PTR [ecx]
  410c3e:	out    dx,al
  410c3f:	mov    esi,0x476409cf
  410c44:	pop    ebx
  410c45:	push   ebp
  410c46:	dec    esi
  410c47:	cmp    DWORD PTR [ebx-0x53],ebx
  410c4a:	pop    edx
  410c4b:	xor    BYTE PTR [eax+edi*4],bh
  410c4e:	jno    0x410c99
  410c50:	dec    edi
  410c51:	mov    ?,edi
  410c53:	lock test al,0x5
  410c56:	add    cl,ch
  410c58:	pusha  
  410c59:	pop    eax
  410c5a:	leave  
  410c5b:	sub    esi,DWORD PTR [edi+0x5]
  410c5e:	push   ebp
  410c5f:	jb     0x410c34
  410c61:	add    bl,0x1d
  410c64:	fcom   DWORD PTR [eax+0x14]
  410c67:	es popa 
  410c69:	add    eax,0xec60e900
  410c6e:	shl    esi,1
	...
  410ca0:	add    BYTE PTR [eax],al
  410ca2:	stos   DWORD PTR es:[edi],eax
  410ca3:	or     DWORD PTR [ecx],eax
  410ca5:	jmp    0x5550120a
  410caa:	and    DWORD PTR [ebx+0x3260f57c],eax
  410cb0:	adc    ebx,esi
  410cb2:	fwait
  410cb3:	adc    DWORD PTR [edx-0x16],ebp
  410cb6:	jp     0x410cbd
  410cb8:	push   0xffffffe9
  410cba:	clc    
  410cbb:	xchg   esi,edi
  410cbd:	(bad)  
  410cbe:	std    
  410cbf:	lods   al,BYTE PTR ds:[esi]
  410cc0:	sub    bl,ch
  410cc2:	pusha  
  410cc3:	add    eax,0x6533483
  410cc8:	jne    0x410cd4
  410cca:	in     al,0x30
  410ccc:	adc    BYTE PTR [esi-0x5317f2a5],ah
  410cd2:	ds mov eax,0xb91b60fe
  410cd8:	(bad)  
  410cd9:	adc    al,0x6b
  410cdb:	sub    eax,DWORD PTR [eax]
  410cdd:	adc    ebp,DWORD PTR [ebx-0x76]
  410ce0:	inc    esp
  410ce1:	jge    0x410cf3
  410ce3:	lods   eax,DWORD PTR ds:[esi]
  410ce4:	data16 jbe 0x410c94
  410ce7:	mov    dh,0xe8
  410ce9:	jmp    0x6a411250
  410cee:	mov    ds:0x41d40209,eax
  410cf3:	mov    eax,0x320df974
  410cf8:	or     BYTE PTR [ecx-0x73],al
  410cfb:	pop    ds
  410cfc:	inc    DWORD PTR [eax]
  410cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cff:	mov    DWORD PTR [ebx-0x4],eax
  410d02:	jne    0x410d01
  410d04:	adc    ebp,DWORD PTR [edx+0x0]
	...
  410d37:	add    BYTE PTR [edx],bh
  410d39:	in     eax,dx
  410d3a:	add    ecx,DWORD PTR [ebp-0x17b18901]
  410d40:	add    al,0x78
  410d42:	std    
  410d43:	push   DWORD PTR [ebx-0x31]
  410d46:	(bad)  
  410d47:	(bad)  
  410d48:	cli    
  410d49:	cmp    DWORD PTR [ebx+0xc],0xfffffff9
  410d4d:	std    
  410d4e:	pop    ds
  410d4f:	(bad)  
  410d50:	jg     0x410d64
  410d52:	push   0x3
  410d54:	cmc    
  410d55:	out    dx,al
  410d56:	pop    es
  410d57:	call   0x3fedfa
  410d5c:	cmc    
  410d5d:	out    dx,al
  410d5e:	adc    ebp,DWORD PTR [edx-0x37]
  410d61:	in     al,dx
  410d62:	jmp    FWORD PTR [ecx-0x36]
  410d65:	push   0x16
  410d67:	push   DWORD PTR [ebp-0x444e1888]
  410d6d:	add    al,BYTE PTR [eax]
  410d6f:	and    DWORD PTR [edi],0x15
  410d72:	add    al,0x75
  410d74:	imul   edi,DWORD PTR [eax+0x73],0x7eef510
  410d7b:	call   0x3fec76
  410d80:	adc    edi,DWORD PTR [esi]
  410d82:	cld    
  410d83:	jmp    FWORD PTR [edi+0x1d]
  410d86:	push   0x0
  410d88:	pusha  
  410d89:	or     eax,0x51d6458d
  410d8e:	call   0xfdb9f282
  410d93:	jmp    0x410f8a
  410d98:	stc    
  410d99:	cmc    
  410d9a:	or     eax,DWORD PTR ds:0x0
	...
  410dcc:	add    BYTE PTR [eax],al
  410dce:	outs   dx,DWORD PTR ds:[esi]
  410dcf:	adc    edi,edi
  410dd1:	jne    0x410e2d
  410dd3:	in     al,dx
  410dd4:	add    eax,0xe80a2fff
  410dd9:	push   ebp
  410dda:	arpl   si,ax
  410ddc:	mov    ebx,0x2ad0bfe
  410de1:	add    BYTE PTR [ebx+0x55],ah
  410de4:	sub    DWORD PTR [ecx],eax
  410de6:	arpl   WORD PTR [edi+edi*2+0x35a65f7c],bp
  410ded:	and    BYTE PTR [ecx+esi*2],ah
  410df0:	adc    ch,BYTE PTR [edx+0x6b]
  410df3:	fbstp  TBYTE PTR [esi]
  410df5:	or     BYTE PTR [ebx],cl
  410df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df8:	and    al,0xff
  410dfa:	or     al,0xf
  410dfc:	aaa    
  410dfd:	adc    al,0x79
  410dff:	stos   DWORD PTR es:[edi],eax
  410e00:	sub    BYTE PTR [eax],al
  410e02:	mov    DWORD PTR [edx+ebp*4-0x44490a55],ebp
  410e09:	call   0x43bbb4
  410e0e:	loopne 0x410e38
  410e10:	sysret 
  410e12:	push   esi
  410e13:	or     al,0xbd
  410e15:	je     0x410e8a
  410e17:	push   edx
  410e18:	or     al,0xff
  410e1a:	push   esi
  410e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e1c:	stos   BYTE PTR es:[edi],al
  410e1d:	adc    DWORD PTR ds:0x36febbc7,edi
  410e23:	fsubr  DWORD PTR [eax]
  410e25:	add    ecx,DWORD PTR [ecx-0x54]
  410e28:	sub    BYTE PTR [eax],al
  410e2a:	mov    ebx,0xa4febd25
  410e2f:	les    ebx,FWORD PTR [ebx]
  410e31:	add    DWORD PTR [eax],eax
	...
  410e63:	add    BYTE PTR [ebx-0x54],ah
  410e66:	jg     0x410ee4
  410e68:	addr16 mov ah,0x35
  410e6b:	sbb    al,0xa4
  410e6d:	call   0xabc60e31
  410e72:	add    bh,bh
  410e74:	not    bh
  410e76:	sub    BYTE PTR [eax],al
  410e78:	or     DWORD PTR [eax+0x1b6f448d],esp
  410e7e:	lods   al,BYTE PTR ds:[esi]
  410e7f:	arpl   WORD PTR [ebp+0x26],sp
  410e82:	mov    esp,0xe9065ee8
  410e87:	add    esp,DWORD PTR [ebx-0x78]
  410e8a:	fisttp DWORD PTR [edi]
  410e8c:	pop    edx
  410e8d:	cmp    dh,ch
  410e8f:	les    ebx,FWORD PTR [edi+0x6303e7b1]
  410e95:	add    eax,0x1f4f3646
  410e9a:	jmp    0xabc375c8
  410e9f:	mov    edi,0xbdaa9d94
  410ea4:	sbb    eax,0x14d80fb5
  410ea9:	mov    ch,0xe8
  410eab:	or     BYTE PTR [edi+0x5936e301],0x6d
  410eb2:	call   0x104671ba
  410eb7:	enter  0xb4f4,0xe8
  410ebb:	sub    BYTE PTR [edi+0x1],0xe2
  410ebf:	ss pop ecx
  410ec1:	ins    DWORD PTR es:[edi],dx
  410ec2:	call   0xd04671ca
  410ec7:	jg     0x410ec9
	...
  410ef9:	add    ah,dl
  410efb:	mov    ah,0xe8
  410efd:	xchg   BYTE PTR [edi+0x1],cl
  410f00:	in     eax,0x35
  410f02:	add    BYTE PTR cs:[ebx+0x43861230],bh
  410f09:	or     BYTE PTR [ebx+0x5],ah
  410f0c:	sub    DWORD PTR [edx],eax
  410f0e:	xor    BYTE PTR ds:0x845731b6,bh
  410f14:	and    esi,DWORD PTR [eax+0x89d22e1]
  410f1a:	mov    dl,0x22
  410f1c:	xchg   ebp,eax
  410f1d:	mov    ebx,0x8680b917
  410f22:	cli    
  410f23:	mov    bl,0x8d
  410f25:	lea    esp,[edi]
  410f27:	lods   eax,DWORD PTR ds:[esi]
  410f28:	test   DWORD PTR [ecx],esi
  410f2a:	push   ebx
  410f2b:	mov    ah,0xf3
  410f2d:	scas   eax,DWORD PTR es:[edi]
  410f2e:	ins    DWORD PTR es:[edi],dx
  410f2f:	cmp    al,BYTE PTR [eax]
  410f31:	jno    0x410edb
  410f33:	cmp    DWORD PTR [eax],ecx
  410f35:	adc    edx,0x1866ff28
  410f3b:	cmp    DWORD PTR [ebx+edx*8],edx
  410f3e:	data16 mov ah,0x74
  410f41:	pop    ebp
  410f42:	or     BYTE PTR [ecx],bh
  410f44:	clc    
  410f45:	inc    ecx
  410f46:	push   ss
  410f47:	mov    cl,0xfe
  410f49:	inc    esi
  410f4a:	clc    
  410f4b:	cmp    al,bh
  410f4d:	push   ecx
  410f4e:	sub    BYTE PTR [esi],bl
  410f50:	push   DWORD PTR [esi]
  410f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f53:	add    eax,0xa060e900
  410f58:	pop    edi
  410f59:	push   0x5a
  410f5b:	add    DWORD PTR ds:0x9b,ecx
	...
  410f8d:	add    BYTE PTR [eax],al
  410f8f:	add    BYTE PTR [ebx-0x50632e00],dh
  410f95:	xchg   BYTE PTR [ebp+ebx*8+0x60],bh
  410f99:	add    eax,0x3d2def40
  410f9e:	push   DWORD PTR [esp+eiz*2-0x7c]
  410fa2:	inc    esp
  410fa3:	std    
  410fa4:	frstor [eax]
  410fa6:	hlt    
  410fa7:	fdiv   QWORD PTR [edi-0x6c190be0]
  410fad:	mov    ecx,0xb47d06e7
  410fb2:	(bad)  
  410fb3:	pusha  
  410fb4:	and    ebp,DWORD PTR [ebp-0x4ba8ab02]
  410fba:	je     0x410f79
  410fbc:	stc    
  410fbd:	cmp    al,bh
  410fbf:	mov    esi,0x13e7fd73
  410fc4:	xor    DWORD PTR [esi+edi*8+0x6a1953ae],0xffffffe8
  410fcc:	fnstcw WORD PTR [eax]
  410fce:	hlt    
  410fcf:	sahf   
  410fd0:	push   ebx
  410fd1:	lods   eax,DWORD PTR ds:[esi]
  410fd2:	out    0x1f,eax
  410fd4:	retf   0xfeb2
  410fd7:	mov    ?,WORD PTR [ebx]
  410fd9:	lods   eax,DWORD PTR ds:[esi]
  410fda:	out    0x0,eax
  410fdc:	out    0xe0,al
  410fde:	(bad)  
  410fdf:	jmp    DWORD PTR [edx]
  410fe1:	or     DWORD PTR [eax],eax
  410fe3:	add    BYTE PTR [edx+0x62],bh
  410fe6:	add    edi,DWORD PTR [eax+0x74a]
  410fec:	xchg   ebx,eax
  410fed:	enter  0xe,0x17
  410ff1:	test   dl,ch
  410ff3:	push   esi
	...
  411024:	add    BYTE PTR [eax],al
  411026:	mov    ecx,0x170007ed
  41102b:	push   es
  41102c:	pop    esi
  41102d:	leave  
  41102e:	mov    BYTE PTR [edx-0x1087502],dh
  411034:	jmp    0x23b9:0xe6b46d0a
  41103b:	jo     0x41103a
  41103d:	add    DWORD PTR [edx+esi*4-0x7f],0x3e
  411042:	cli    
  411043:	cmc    
  411044:	lock jmp edi
  411047:	(bad)  
  411048:	out    0xa9,eax
  41104a:	jecxz  0x4110bb
  41104c:	std    
  41104d:	pop    esi
  41104e:	xor    ecx,eax
  411050:	add    al,BYTE PTR [eax]
  411052:	xlat   BYTE PTR ds:[ebx]
  411053:	sub    edx,0xffffff8b
  411056:	mov    bh,0xfe
  411058:	mov    dl,BYTE PTR [ebp-0x42]
  41105b:	add    DWORD PTR [edx],0xffffff90
  41105e:	dec    ecx
  41105f:	cli    
  411060:	(bad)  
  411062:	ss add al,0x8b
  411065:	push   ebp
  411066:	retf   0x2e6d
  411069:	(bad)
  41106d:	adc    al,0xca
  41106f:	loop   0x411078
  411071:	mov    edx,DWORD PTR [edi+0x15]
  411074:	push   DWORD PTR [eax-0x4a]
  411077:	jge    0x411079
  411079:	or     DWORD PTR [edi+0x11],0x0
  41107d:	je     0x411012
  41107f:	adc    DWORD PTR [ebx+0x18],0x83007c4a
  411086:	arpl   WORD PTR [esi+0xc90a],bx
	...
  4110bc:	mov    eax,ds:0xe85502b8
  4110c1:	cwde   
  4110c2:	test   bl,al
  4110c4:	(bad)  
  4110c5:	sbb    edx,DWORD PTR [edx-0x75]
  4110c8:	push   ds
  4110c9:	int3   
  4110ca:	mov    edi,0x29c5cff
  4110cf:	add    al,ch
  4110d1:	pusha  
  4110d2:	push   es
  4110d3:	(bad)  
  4110d4:	arpl   WORD PTR [edx+eax*1+0x371f6300],bx
  4110db:	or     BYTE PTR [ebx-0x27],ah
  4110de:	or     ch,BYTE PTR [ebx]
  4110e0:	and    ebp,DWORD PTR [edx+0x57]
  4110e3:	leave  
  4110e4:	and    DWORD PTR [eax-0x5b5100fe],esp
  4110ea:	stos   BYTE PTR es:[edi],al
  4110eb:	inc    DWORD PTR [ebx+0x230ab8e3]
  4110f1:	xchg   ecx,eax
  4110f2:	or     ch,BYTE PTR [ebx]
  4110f4:	and    esi,DWORD PTR [edx+0x57]
  4110f7:	leave  
  4110f8:	and    DWORD PTR [eax+0x14a68902],ebp
  4110fe:	mov    ecx,0xe146b74
  411103:	arpl   sp,bp
  411105:	mov    dl,0xbf
  411107:	inc    esp
  411108:	out    dx,eax
  411109:	pushf  
  41110a:	add    al,BYTE PTR [eax]
  41110c:	arpl   WORD PTR [ecx+0x3f],dx
  41110f:	in     al,dx
  411110:	xor    edi,DWORD PTR [ecx]
  411112:	ds hlt 
  411114:	xor    edx,ebx
  411116:	sub    eax,0xbc72bb08
  41111b:	(bad)  
  41111c:	mov    esp,0xec3f14
	...
  411151:	add    BYTE PTR [esi+esi*4],ch
  411154:	cmp    DWORD PTR [edi+esi*4-0x65],0x2e
  411159:	add    al,0x58
  41115b:	mov    gs,WORD PTR [esi]
  41115d:	or     BYTE PTR [eax+0x5c],cl
  411160:	pop    eax
  411161:	pop    edi
  411162:	stos   BYTE PTR es:[edi],al
  411163:	add    al,0xab
  411165:	pop    es
  411166:	arpl   si,bx
  411168:	and    ebp,DWORD PTR [eax-0x7d7eb825]
  41116e:	call   FWORD PTR [eax+ebp*8-0xfb3cfd]
  411175:	or     edi,DWORD PTR [eax]
  411177:	lds    ebx,FWORD PTR [esi]
  411179:	pop    ecx
  41117a:	call   0x814a:0xe803e4c6
  411181:	ret    0x434
  411184:	mov    ecx,0x5e1e3bab
  411189:	mov    eax,0x8c554adb
  41118e:	xor    al,0xc9
  411190:	mov    ds:0xe8b1349f,eax
  411195:	add    edi,DWORD PTR [eax]
  411197:	cmc    
  411198:	imul   edi,DWORD PTR [esi],0x33
  41119b:	push   esi
  41119c:	fs ds pop ss
  41119f:	push   esi
  4111a0:	cs imul ebx,DWORD PTR cs:[ebp-0x4ef2425b],0x71
  4111a9:	inc    esi
  4111aa:	adc    ebp,ebp
  4111ac:	mov    ds:0xe20975ab,eax
  4111b1:	aad    0x70
  4111b3:	adc    eax,0x2e06
	...
  4111e8:	out    dx,eax
  4111e9:	popf   
  4111ea:	dec    eax
  4111eb:	sub    esp,esp
  4111ed:	mov    al,0xc1
  4111ef:	ret    
  4111f0:	ds push eax
  4111f2:	and    ch,al
  4111f4:	push   0xbb491005
  4111f9:	mov    al,0x23
  4111fb:	mov    al,ds:0xac5384f9
  411200:	mov    esp,0x3782e73a
  411205:	mov    ecx,0x84a230e8
  41120a:	cmp    ebp,DWORD PTR [esp+eiz*4-0x1e10ffc7]
  411211:	xor    esp,esi
  411213:	jmp    0x1d40276b
  411218:	retf   
  411219:	test   al,0x70
  41121b:	adc    esp,ecx
  41121d:	scas   eax,DWORD PTR es:[edi]
  41121e:	sub    ch,BYTE PTR [ecx-0x5436afeb]
  411224:	imul   eax,DWORD PTR ds:0xb0c30483,0x73
  41122b:	in     al,0xb7
  41122d:	jnp    0x41122e
  41122f:	call   0xd9858e94
  411234:	or     eax,0x6776e439
  411239:	jl     0x41127f
  41123b:	inc    ebp
  41123c:	push   ds
  41123d:	rol    BYTE PTR [ecx],1
  41123f:	mov    ecx,0x4e682508
  411244:	in     al,dx
  411245:	jl     0x41128b
  411247:	and    eax,0x72dc30d8
	...
  41127c:	add    BYTE PTR [eax],al
  41127e:	jb     0x411231
  411280:	jmp    0xa226:0xcf7b8b91
  411287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411288:	(bad)  
  411289:	call   0xa4ce17ee
  41128e:	sar    BYTE PTR [edi],0x8d
  411291:	lods   al,BYTE PTR ds:[esi]
  411292:	int3   
  411293:	aas    
  411294:	push   edx
  411295:	push   cs
  411296:	xor    bh,ch
  411298:	out    0x16,eax
  41129a:	test   al,0xae
  41129c:	(bad)  
  41129d:	repnz and BYTE PTR [esp+ecx*1],dh
  4112a1:	push   0xffffff9a
  4112a3:	mov    ecx,0x82d674ff
  4112a8:	jl     0x411273
  4112aa:	pusha  
  4112ab:	cmp    ah,BYTE PTR [esi]
  4112ad:	push   0xffffff8b
  4112af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112b0:	call   FWORD PTR [edi+ebp*2-0x50]
  4112b4:	je     0x41127f
  4112b6:	or     BYTE PTR [edx],cl
  4112b8:	push   0xfd76a500
  4112bd:	jne    0x411285
  4112bf:	pop    ebx
  4112c0:	sub    dh,bh
  4112c2:	aad    0x76
  4112c4:	std    
  4112c5:	jne    0x41128d
  4112c7:	pop    ebx
  4112c8:	hlt    
  4112c9:	lds    esi,FWORD PTR [bp+0x29]
  4112cd:	rol    BYTE PTR [eax+ebx*2-0x37],0xc2
  4112d2:	xchg   BYTE PTR [ebx],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x16]
  4112d7:	sbb    bh,dh
  4112d9:	dec    ebp
  4112da:	fiadd  WORD PTR [edx-0x20851b85]
  4112e0:	add    eax,0x83
	...
  411311:	add    BYTE PTR [eax],al
  411313:	add    BYTE PTR [edi+0x5f],dl
  411316:	(bad)  
  411317:	je     0x4112bf
  411319:	jnp    0x41135e
  41131b:	or     al,0xc5
  41131d:	cmc    
  41131e:	fisttp DWORD PTR [edi-0x38c87c6]
  411324:	mov    ds:0xa5ff65bb,al
  411329:	sub    al,BYTE PTR [eax]
  41132b:	add    BYTE PTR [edx],bh
  41132d:	add    ebx,DWORD PTR [esi+0x5f]
  411330:	jae    0x4112f6
  411332:	or     al,BYTE PTR [eax]
  411334:	(bad)  
  411335:	jnp    0x411321
  411337:	cmp    DWORD PTR [esi],0xffffffba
  41133a:	push   ebp
  41133b:	add    edi,0x12
  41133e:	add    BYTE PTR [ebp+0x10],dh
  411341:	sub    eax,DWORD PTR [eax]
  411343:	add    BYTE PTR [edx],cl
  411345:	add    ebx,DWORD PTR [edi-0x37]
  411348:	dec    eax
  411349:	(bad)  
  41134a:	(bad)  
  41134b:	(bad)  
  41134c:	mov    bh,0x12
  41134e:	sub    edx,edx
  411350:	jno    0x411397
  411352:	adc    bh,dh
  411354:	scas   eax,DWORD PTR es:[edi]
  411355:	dec    esi
  411356:	gs inc ecx
  411358:	retf   0x4381
  41135b:	lock xor BYTE PTR [ecx],cl
  41135e:	push   DWORD PTR [ebp-0x56]
  411361:	js     0x4113d6
  411363:	or     BYTE PTR [ebx-0x3c],ah
  411366:	sbb    DWORD PTR [edi-0x4c],ebx
  411369:	mov    edi,0x9c537c80
  41136e:	sub    eax,0x289d390c
  411373:	fs pushf 
  411375:	icebp  
  411376:	or     ebp,eax
	...
  4113a8:	add    BYTE PTR [eax],al
  4113aa:	imul   edi,edi,0xffffffb4
  4113ad:	dec    BYTE PTR [ecx+edx*1-0x4bf100f0]
  4113b4:	stos   BYTE PTR es:[edi],al
  4113b5:	dec    edx
  4113b6:	add    DWORD PTR [edi-0x7fe1774c],edx
  4113bc:	mov    ah,0x74
  4113be:	push   edi
  4113bf:	xchg   DWORD PTR [esi],ebp
  4113c1:	or     BYTE PTR [ebx-0x34],bh
  4113c4:	and    bh,bh
  4113c6:	pop    esp
  4113c7:	aaa    
  4113c8:	das    
  4113c9:	adc    al,0x54
  4113cb:	mov    ecx,0xba66e80a
  4113d0:	mov    bl,0xfe
  4113d2:	fisubr DWORD PTR [eax-0x46]
  4113d5:	(bad)  
  4113d6:	mov    dh,0xb0
  4113d8:	mov    bl,0x74
  4113da:	imul   eax,DWORD PTR [ebp+ebp*4+0x60],0x2c
  4113df:	inc    edi
  4113e0:	mov    ch,0x74
  4113e2:	dec    edi
  4113e3:	out    dx,eax
  4113e4:	or     BYTE PTR cs:[ebx],cl
  4113e7:	aad    0x20
  4113e9:	call   DWORD PTR [ebx+eiz*1]
  4113ec:	aas    
  4113ed:	adc    al,0xe0
  4113ef:	mov    ds:0x1b577402,eax
  4113f4:	aaa    
  4113f5:	cld    
  4113f6:	outs   dx,BYTE PTR ds:[esi]
  4113f7:	nop
  4113f8:	add    eax,0xff007683
  4113fd:	jae    0x411463
  4113ff:	rol    edx,cl
  411401:	pop    esi
  411402:	sbb    bl,dl
  411404:	sldt   WORD PTR [edx]
  411407:	inc    eax
  411408:	push   ds
  411409:	inc    ecx
  41140a:	arpl   WORD PTR ds:0x38ac,cx
	...
  411440:	es add eax,0xda5c2de1
  411446:	test   al,0x54
  411448:	stos   BYTE PTR es:[edi],al
  411449:	ret    0x3fc
  41144c:	loopne 0x41147d
  41144e:	int    0xfe
  411450:	aaa    
  411451:	inc    ebp
  411453:	cs dec edi
  411455:	scas   al,BYTE PTR es:[edi]
  411456:	xor    ecx,DWORD PTR [ebx+ecx*4]
  411459:	add    DWORD PTR [edi-0x4b],0xffffff95
  41145d:	jnp    0x411482
  41145f:	int3   
  411460:	add    al,0x5
  411462:	jmp    0xe5de7769
  411467:	sbb    al,0x7c
  411469:	lods   eax,DWORD PTR ds:[esi]
  41146a:	pop    edi
  41146b:	outs   dx,DWORD PTR ds:[esi]
  41146d:	(bad)  [ebp-0x451ad58]
  411473:	pcmpgtb mm6,QWORD PTR [edi]
  411476:	icebp  
  411477:	stos   DWORD PTR es:[edi],eax
  411478:	out    dx,al
  411479:	es jbe 0x411430
  41147c:	jmp    0x60cb89d3
  411481:	outs   dx,DWORD PTR ds:[esi]
  411482:	lods   eax,DWORD PTR ds:[esi]
  411483:	clc    
  411484:	(bad)  
  411485:	lods   eax,DWORD PTR ds:[esi]
  411486:	fisubr DWORD PTR [edx-0x7f02bd17]
  41148c:	ins    BYTE PTR es:[edi],dx
  41148d:	add    eax,0x332c04d4
  411492:	cmp    eax,0x3e2422ab
  411497:	mov    ah,0x49
  411499:	lds    edx,FWORD PTR [ebp-0x16eddd36]
  41149f:	or     BYTE PTR [edi+0x4eba9],0x0
	...
  4114d6:	fisub  WORD PTR [eax+ebp*8+0x3]
  4114da:	arpl   ax,sp
  4114dc:	adc    eax,0xb38086a8
  4114e1:	scas   eax,DWORD PTR es:[edi]
  4114e2:	fld    DWORD PTR [ecx]
  4114e4:	inc    ebx
  4114e5:	add    BYTE PTR [esi+0x330392b5],bl
  4114eb:	lods   al,BYTE PTR ds:[esi]
  4114ec:	(bad)  
  4114ed:	jnp    0x411557
  4114ef:	popf   
  4114f0:	daa    
  4114f1:	(bad)  
  4114f2:	pop    ss
  4114f3:	lods   al,BYTE PTR ds:[esi]
  4114f4:	(bad)  
  4114f5:	pop    esp
  4114f6:	imul   ebp,DWORD PTR [esp+esi*2+0x6116d8f1],0xffffffd6
  4114fe:	lock jge 0x411545
  411501:	popf   
  411502:	dec    ebp
  411503:	add    eax,0xac4b3cff
  411508:	je     0x4114fb
  41150a:	clc    
  41150b:	cmp    eax,0x7fd0b6f8
  411510:	dec    esp
  411511:	aad    0xe5
  411513:	in     eax,dx
  411514:	call   FWORD PTR [ebx]
  411516:	pusha  
  411517:	lods   al,BYTE PTR ds:[esi]
  411518:	je     0x4114af
  41151a:	fistp  WORD PTR [edx]
  41151c:	xchg   si,ax
  41151e:	mov    al,0xdf
  411520:	mov    edi,0x13c6ae2e
  411525:	jmp    0x7e5946db
  41152a:	call   0x74ab:0x14fcff11
  411531:	fst    QWORD PTR [ecx]
  411533:	xor    DWORD PTR [eax],ecx
  411535:	push   ecx
  411536:	in     al,dx
  411537:	test   eax,0x5efe
	...
  41156c:	cmp    al,0x6c
  41156e:	je     0x411556
  411570:	icebp  
  411571:	xor    ah,dh
  411573:	inc    ecx
  411574:	cwde   
  411575:	and    edi,edi
  411577:	inc    esi
  411578:	add    al,0x6c
  41157a:	pop    esi
  41157b:	xor    BYTE PTR ds:0x5ae0018,ah
  411581:	sub    eax,edi
  411583:	mov    ebx,0x174aae3
  411588:	shl    BYTE PTR [eax],1
  41158a:	adc    al,0x1e
  41158c:	cmp    bh,BYTE PTR [ebp-0x550b6302]
  411592:	je     0x411575
  411594:	enter  0xfe21,0x0
  411598:	pop    ebp
  411599:	js     0x4115a4
  41159b:	ror    ch,0x7c
  41159e:	push   eax
  41159f:	add    edx,ecx
  4115a1:	pop    es
  4115a2:	push   DWORD PTR [ebp-0x2a]
  4115a5:	(bad)  
  4115a6:	adc    al,0x66
  4115a8:	mov    ebp,0x7dc02976
  4115ad:	push   0xffffffc0
  4115af:	adc    al,0xca
  4115b1:	mov    BYTE PTR [ecx+eax*1],bh
  4115b4:	mov    edx,0x9e7d8307
  4115b9:	add    al,0xf
  4115bb:	test   DWORD PTR [esi+0x61000000],edx
  4115c1:	js     0x4115aa
  4115c3:	and    al,0x7b
  4115c5:	pop    es
  4115c6:	add    BYTE PTR [ebx+0x4896d47],cl
  4115cc:	add    BYTE PTR [ebx],al
  4115ce:	inc    ebp
  4115cf:	lock add BYTE PTR [eax],al
	...
  411602:	pusha  
  411603:	add    DWORD PTR [eax-0x1],edx
  411606:	push   edi
  411607:	test   eax,0x783f74e6
  41160c:	std    
  41160d:	push   0x4a
  41160f:	js     0x411684
  411611:	adc    al,0xcd
  411613:	in     eax,dx
  411614:	pop    es
  411615:	call   0x3e85b3
  41161a:	rol    DWORD PTR [ebp+0x14],1
  41161d:	add    DWORD PTR [ebx-0x72f08aff],0xffffffed
  411624:	repz call 0x3ff3ac
  41162a:	push   ecx
  41162b:	rcr    DWORD PTR [ebp-0x37],0x48
  41162f:	adc    al,BYTE PTR [eax]
  411631:	or     edi,DWORD PTR [eax-0xe]
  411634:	add    al,0xe9
  411636:	dec    esi
  411637:	push   es
  411638:	add    BYTE PTR [eax],al
  41163a:	xchg   ebx,eax
  41163b:	cmp    eax,0x780a6aec
  411640:	jae    0x411656
  411642:	arpl   WORD PTR [ebx],dx
  411644:	cmp    BYTE PTR [eax],cl
  411646:	sti    
  411647:	(bad)  
  411648:	mov    ecx,0x4037e4fe
  41164d:	adc    al,0xe0
  41164f:	lds    eax,FWORD PTR [edx]
  411651:	jne    0x4116b7
  411653:	mov    bl,0x36
  411655:	hlt    
  411656:	mov    ebx,0xc4ff2854
  41165b:	pop    ss
  41165c:	les    ebx,FWORD PTR [esi-0x56]
  41165f:	pop    esi
  411660:	pop    ss
  411661:	add    BYTE PTR [ecx+ecx*1+0x6568],dh
	...
  411698:	and    bl,BYTE PTR [edi+edi*2+0x4737bb44]
  41169f:	call   0xc140eb84
  4116a4:	sbb    DWORD PTR [ecx+0x5bcad1db],0x3
  4116ab:	add    BYTE PTR [ebx-0x75],ah
  4116ae:	mov    dl,0x82
  4116b0:	mov    esi,DWORD PTR [ebx+0x1f834479]
  4116b6:	pop    ds
  4116b7:	call   0xec883dfc
  4116bc:	sub    cl,bl
  4116be:	fwait
  4116bf:	jbe    0x411722
  4116c1:	xchg   edi,eax
  4116c2:	fisubr DWORD PTR [edx]
  4116c4:	xor    DWORD PTR [edi],esp
  4116c6:	inc    edi
  4116c7:	in     al,dx
  4116c8:	js     0x4116ab
  4116ca:	mov    ds:0x8554968a,eax
  4116cf:	rol    BYTE PTR [eax+0x2c039b1f],0x4d
  4116d6:	add    eax,0x57254355
  4116db:	in     al,0xd8
  4116dd:	pop    eax
  4116de:	call   0xe805:0x3540a63a
  4116e5:	pop    eax
  4116e6:	mov    ds:0x472760ea,al
  4116eb:	in     al,0x4
  4116ed:	add    eax,0x2ffc179c
  4116f2:	or     eax,0xe12ff454
  4116f7:	fwait
  4116f8:	ret    
  4116f9:	mov    cl,0xd
  4116fb:	mov    cl,0x0
	...
  41172d:	add    BYTE PTR [ecx-0x3b],bl
  411730:	jnp    0x411732
  411732:	fsubr  QWORD PTR [edi]
  411734:	cmc    
  411735:	fwait
  411736:	jbe    0x411758
  411738:	div    BYTE PTR [eax-0x45723a87]
  41173e:	mov    ds:0x277ae910,al
  411743:	leave  
  411744:	jno    0x411719
  411746:	out    0x3f,eax
  411748:	mov    ebp,0xb13fde53
  41174d:	push   ebx
  41174e:	adc    DWORD PTR [ebp-0x5662539e],ebx
  411754:	outs   dx,DWORD PTR ds:[esi]
  411755:	inc    esi
  411756:	mov    bl,0xa9
  411758:	cmp    edx,eax
  41175a:	test   BYTE PTR [edx],ah
  41175c:	or     eax,0x238585b1
  411761:	aam    0x7c
  411763:	xor    eax,0xccf784fc
  411768:	call   0x13eb6ba4
  41176d:	fsub   DWORD PTR [ebp+0x2f]
  411770:	mov    eax,ds:0x7df9d7b0
  411775:	imul   ebp,DWORD PTR ss:[eax+0x334c0c1b],0xffffff91
  41177d:	fwait
  41177e:	bound  ebp,QWORD PTR [ebp+eiz*2-0x24135a50]
  411785:	stos   DWORD PTR es:[edi],eax
  411786:	cmp    DWORD PTR gs:[ecx],0xffffffb1
  41178a:	sub    eax,0x2f364da9
  41178f:	sahf   
  411790:	sub    al,0x27
	...
  4117c2:	add    BYTE PTR [eax],al
  4117c4:	sbb    al,0xa9
  4117c6:	add    BYTE PTR [edx],0x63
  4117c9:	add    eax,0xbeb3e900
  4117ce:	rcl    ebp,0x60
  4117d1:	push   edx
  4117d2:	mov    edx,DWORD PTR ds:0xf174a89b
  4117d8:	fdiv   DWORD PTR [ecx+esi*2-0x17df4cea]
  4117df:	stos   BYTE PTR es:[edi],al
  4117e0:	mov    eax,ds:0xd87cff05
  4117e5:	mov    al,ds:0x560b63c
  4117ea:	or     ebp,DWORD PTR [ecx]
  4117ec:	xchg   ebp,eax
  4117ed:	add    bl,BYTE PTR [edi+0x20]
  4117f0:	sahf   
  4117f1:	add    BYTE PTR [eax],al
  4117f3:	scas   eax,DWORD PTR es:[edi]
  4117f4:	addr16 add eax,0xa0b754ff
  4117fa:	rcr    BYTE PTR [ebx-0x4],cl
  4117fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117fe:	mov    esi,0x4620c3
  411803:	(bad)  
  411804:	pop    edx
  411805:	std    
  411806:	push   esi
  411807:	rcr    DWORD PTR [esi-0x11],1
  41180a:	(bad)  
  41180b:	call   0xe4b58099
  411810:	adc    eax,0x60f1c1be
  411815:	test   eax,0xa706a932
  41181a:	(bad)  
  41181b:	xchg   esi,eax
  41181c:	mov    esp,0x5dd1adb6
  411821:	xor    ah,al
  411823:	xchg   BYTE PTR [edx+0x5e7fd],bl
	...
  411859:	add    BYTE PTR [edx-0x58],bl
  41185c:	(bad)  
  41185d:	loop   0x41187f
  41185f:	xor    DWORD PTR ds:0x7c6060e,eax
  411865:	jmp    0xa88523c2
  41186a:	pusha  
  41186b:	test   al,0x74
  41186d:	loope  0x411837
  41186f:	mov    ebx,0xfc60e934
  411874:	mov    edi,0xfda8df00
  411879:	jne    0x411881
  41187b:	daa    
  41187c:	add    al,0xac
  41187e:	sbb    al,0x41
  411880:	add    BYTE PTR [eax+0x5f],ch
  411883:	cmp    eax,0xee450041
  411888:	pop    es
  411889:	call   0x3fc726
  41188e:	add    esp,eax
  411890:	jae    0x41189b
  411892:	push   ebp
  411893:	out    dx,al
  411894:	or     ecx,DWORD PTR [edi+0x416533cf]
  41189a:	retf   0x340b
  41189d:	inc    esp
  41189e:	sti    
  41189f:	add    edi,edi
  4118a1:	jne    0x411865
  4118a3:	mov    edx,DWORD PTR [esi+0xb03ca35]
  4118a9:	ror    BYTE PTR [edi],0xaa
  4118ac:	std    
  4118ad:	jne    0x411875
  4118af:	es add al,0xb4
  4118b2:	sbb    al,0x42
  4118b4:	add    BYTE PTR [eax+0x38b],bh
  4118ba:	jne    0x411926
  4118bc:	ror    BYTE PTR [eax],0x0
	...
  4118ef:	add    BYTE PTR [edx+0x4c],bh
  4118f2:	mov    ebp,esp
  4118f4:	stc    
  4118f5:	mov    edi,0x93d56f2
  4118fa:	in     al,0x43
  4118fc:	dec    ebx
  4118fd:	add    edi,edi
  4118ff:	jne    0x411883
  411901:	mov    eax,DWORD PTR [esi+esi*1-0x3ff4fc86]
  411908:	pop    edi
  411909:	add    DWORD PTR [edi+0x5e],ebx
  41190c:	adc    eax,ebp
  41190e:	add    al,BYTE PTR [eax]
  411910:	jp     0x41193c
  411912:	out    dx,eax
  411913:	mov    esi,DWORD PTR [edi]
  411915:	stos   DWORD PTR es:[edi],eax
  411916:	jmp    0x3cc4071c
  41191b:	add    BYTE PTR [edi],cl
  41191d:	pop    ebp
  41191e:	mov    ds:0x42366368,al
  411923:	inc    ecx
  411924:	arpl   WORD PTR [edi],si
  411926:	cmp    BYTE PTR [eax],cl
  411928:	or     edi,DWORD PTR [ebp-0x4beb000c]
  41192e:	ret    0x6574
  411931:	(bad)  
  411932:	dec    esp
  411933:	leave  
  411934:	and    DWORD PTR [ecx-0x4b8174fe],esp
  41193a:	cdq    
  41193b:	and    ebx,esp
  41193d:	(bad)  
  41193e:	sti    
  41193f:	jae    0x41198b
  411941:	sbb    al,0xee
  411943:	or     al,0x6f
  411945:	mov    al,0x82
  411947:	imul   ebp,DWORD PTR ds:[eax],0x63947ffe
  41194e:	ss or  ah,bl
  411951:	outs   dx,DWORD PTR ds:[esi]
  411952:	dec    edi
  411953:	je     0x411955
	...
  411985:	add    BYTE PTR [esi+0x1c],bl
  411988:	out    dx,al
  411989:	pop    edi
  41198a:	ss fwait
  41198c:	les    eax,FWORD PTR [esi]
  41198e:	sbb    edi,0xffffff83
  411991:	arpl   WORD PTR ds:[ecx-0x35],cx
  411995:	(bad)  
  411996:	push   ds
  411997:	mov    eax,0x9c630003
  41199c:	ret    
  41199d:	inc    esp
  41199e:	fwait
  41199f:	pushf  
  4119a0:	add    al,BYTE PTR [eax]
  4119a2:	arpl   WORD PTR [ebx],sp
  4119a4:	das    
  4119a5:	or     BYTE PTR [eax-0x1d],bh
  4119a8:	cmp    DWORD PTR [esi],0x44
  4119ab:	or     ecx,ebx
  4119ad:	xor    dh,0x87
  4119b0:	add    esi,DWORD PTR [ebp+0x51]
  4119b3:	xchg   DWORD PTR [esi-0x8],eax
  4119b6:	bound  ebx,QWORD PTR [edx+eax*1-0x3c5f2a00]
  4119bd:	inc    esp
  4119be:	push   edi
  4119bf:	popf   
  4119c0:	add    al,BYTE PTR [eax]
  4119c2:	arpl   WORD PTR [ebx+0x349ef710],ax
  4119c8:	add    eax,DWORD PTR [eax]
  4119ca:	arpl   WORD PTR ds:0xbf6936e9,ax
  4119d0:	in     eax,0xe3
  4119d2:	and    eax,0x63045540
  4119d7:	add    eax,0x495d83e9
  4119dc:	mov    esp,0x41401406
  4119e1:	cdq    
  4119e2:	gs mov esi,0xa604abab
  4119e8:	call   0x4119f0
	...
  411a19:	add    BYTE PTR [eax],al
  411a1b:	add    al,ah
  411a1d:	daa    
  411a1e:	and    eax,0x27026e03
  411a23:	add    eax,0xed693e43
  411a28:	in     al,0x30
  411a2a:	pop    ecx
  411a2b:	jns    0x411a8c
  411a2d:	std    
  411a2e:	adc    DWORD PTR [eax],edx
  411a30:	jecxz  0x411a17
  411a32:	enter  0x7536,0x85
  411a36:	jne    0x411a3a
  411a38:	xor    DWORD PTR [eax],0xffffffd9
  411a3b:	push   esp
  411a3c:	enter  0x72fe,0x44
  411a40:	bound  edi,QWORD PTR [ebp-0x1b]
  411a43:	inc    esp
  411a44:	jecxz  0x411a2b
  411a46:	call   0x1e86c881
  411a4b:	inc    ebp
  411a4c:	jecxz  0x411a33
  411a4e:	call   0x23fece89
  411a53:	mov    eax,0x3e8a58c
  411a58:	fsubr  DWORD PTR [edi]
  411a5a:	loope  0x411ad4
  411a5c:	(bad)  
  411a5d:	cld    
  411a5e:	xchg   ecx,eax
  411a5f:	loope  0x411a55
  411a61:	in     eax,0xcc
  411a63:	ss dec edi
  411a65:	mov    edi,0x2f6403ed
  411a6a:	xchg   ebp,eax
  411a6b:	push   ebp
  411a6c:	dec    ebx
  411a6d:	icebp  
  411a6e:	xchg   BYTE PTR [ebp+edx*2+0x6536a911],ch
  411a75:	inc    esp
  411a76:	add    BYTE PTR [edi],dl
  411a78:	or     bh,al
  411a7a:	add    ebp,ecx
  411a7c:	mov    ebx,0x66459b
	...
  411ab1:	add    BYTE PTR [ebp+0x3f694699],bl
  411ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ab8:	jae    0x411aea
  411aba:	neg    DWORD PTR [ecx]
  411abc:	hlt    
  411abd:	mov    bh,0xf8
  411abf:	adc    dh,bh
  411ac1:	inc    esi
  411ac2:	mov    DWORD PTR [ebx+0x5e],0x92230
  411ac9:	pushf  
  411aca:	mov    esi,DWORD PTR [eax+0x3ab82582]
  411ad0:	push   edi
  411ad1:	push   0x45
  411ad3:	stc    
  411ad4:	call   DWORD PTR [ecx+ebp*8+0x9d13c87]
  411adb:	inc    esi
  411adc:	add    cl,ch
  411ade:	xchg   ebp,eax
  411adf:	or     ebx,DWORD PTR [edi-0x59]
  411ae2:	sbb    edi,eax
  411ae4:	psubsw mm1,QWORD PTR [ebx+0x49]
  411ae8:	adc    al,0xb0
  411aea:	pop    ebp
  411aeb:	jno    0x411b52
  411aed:	test   al,0x60
  411aef:	adc    al,0x83
  411af1:	mov    bl,BYTE PTR [esi+0x5]
  411af4:	add    BYTE PTR [eax],ah
  411af6:	bound  edx,QWORD PTR [ebp+0x65]
  411af9:	sub    BYTE PTR [edi+0x14],bl
  411afc:	xor    DWORD PTR [esi+0x66],0x5
  411b00:	add    BYTE PTR [eax],al
  411b02:	bound  ebx,QWORD PTR [ecx+0x65]
  411b05:	sub    BYTE PTR [edi+0x14],ah
  411b08:	and    DWORD PTR [edx+0x5e],0x5
  411b0c:	add    BYTE PTR [edx+eiz*1-0x67],bl
  411b10:	dec    edi
  411b11:	je     0x411b35
  411b13:	popf   
  411b14:	dec    edi
  411b15:	ins    BYTE PTR es:[edi],dx
	...
  411b46:	add    BYTE PTR [eax],al
  411b48:	and    ah,BYTE PTR [ecx+0x7072964f]
  411b4e:	sub    BYTE PTR gs:[edi-0x5c],ah
  411b52:	je     0x411b54
  411b54:	cmp    al,BYTE PTR [eax+0x70cdf8bc]
  411b5a:	mov    eax,DWORD PTR [ebp-0x1e]
  411b5d:	cmp    BYTE PTR [ebp-0x72c641bb],cl
  411b63:	inc    ebp
  411b64:	call   0x40e6:0xd635ff39
  411b6b:	add    BYTE PTR [ebp-0x1917f02a],cl
  411b71:	jo     0x411b70
  411b73:	dec    DWORD PTR [edi+0x7f50dc46]
  411b79:	inc    esi
  411b7a:	loopne 0x411bcc
  411b7c:	jg     0x411bc4
  411b7e:	in     al,0x50
  411b80:	dec    ebp
  411b81:	xchg   esi,eax
  411b82:	scas   al,BYTE PTR es:[edi]
  411b83:	retfw  
  411b85:	pop    es
  411b86:	push   DWORD PTR [ebp-0x16]
  411b89:	jg     0x411b13
  411b8b:	clc    
  411b8c:	dec    ebp
  411b8d:	jo     0x411b8c
  411b8f:	jne    0x411bf7
  411b91:	and    BYTE PTR [esp+edx*8+0x5d],al
  411b95:	(bad)  
  411b96:	fisttp DWORD PTR [edi+0x45c5d007]
  411b9c:	push   0x9
  411b9e:	add    BYTE PTR [eax],al
  411ba0:	retf   0x441c
  411ba3:	int3   
  411ba4:	jp     0x411ba9
  411ba6:	add    DWORD PTR [edx-0x46],ebp
  411ba9:	add    DWORD PTR [eax],eax
  411bab:	push   0x0
	...
  411bdd:	add    BYTE PTR [edx+0x478d0001],bh
  411be3:	mov    ch,0x4e
  411be5:	push   DWORD PTR [edi+0x7a4127af]
  411beb:	mov    ds:0xa1f60fbe,al
  411bf0:	(bad)  
  411bf1:	dec    DWORD PTR [edx-0x752f8476]
  411bf7:	sahf   
  411bf8:	add    BYTE PTR [eax],0x7b
  411bfb:	pop    es
  411bfc:	add    BYTE PTR [ebx+0x3ab7e963],cl
  411c02:	scas   al,BYTE PTR es:[edi]
  411c03:	mov    cl,bh
  411c05:	xchg   BYTE PTR [edi-0x53],cl
  411c08:	add    al,BYTE PTR [eax]
  411c0a:	dec    edi
  411c0b:	sbb    BYTE PTR [eax],dh
  411c0d:	rcr    al,1
  411c0f:	cdq    
  411c10:	(bad)  
  411c11:	mov    ch,BYTE PTR [esi+0x3001a580]
  411c17:	xchg   ecx,eax
  411c18:	test   eax,0x40341f74
  411c1d:	in     al,0x24
  411c1f:	ret    0xe7d2
  411c22:	cmp    al,0xff
  411c24:	add    eax,DWORD PTR [eax]
  411c26:	loopne 0x411bf1
  411c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c29:	call   FWORD PTR [ebp+0x28]
  411c2c:	mov    ecx,0x85ad04ff
  411c31:	jl     0x411c26
  411c33:	lods   al,BYTE PTR ds:[esi]
  411c34:	stc    
  411c35:	sbb    DWORD PTR [edi],0xffffffad
  411c38:	add    al,BYTE PTR [eax]
  411c3a:	loopne 0x411bbd
  411c3c:	sahf   
  411c3d:	call   DWORD PTR [ebp+0x30]
  411c40:	ins    DWORD PTR es:[edi],dx
  411c41:	inc    DWORD PTR [eax]
	...
  411c73:	add    ah,bl
  411c75:	lods   al,BYTE PTR ds:[esi]
  411c76:	test   eax,0x6cf4d774
  411c7b:	pusha  
  411c7c:	int3   
  411c7d:	mov    ds:0x9b9b447a,eax
  411c82:	cs cld 
  411c84:	mov    esp,0x2efebb19
  411c89:	rcr    BYTE PTR [ebx-0x573cbd21],0x67
  411c90:	and    al,dh
  411c92:	inc    edx
  411c93:	add    BYTE PTR [ebx-0x6b0009c0],cl
  411c99:	cld    
  411c9a:	sbb    eax,DWORD PTR [ebx+0x27]
  411c9d:	in     eax,dx
  411c9e:	add    edi,edi
  411ca0:	push   cs
  411ca1:	fs fwait
  411ca3:	sub    eax,0xb02ac37
  411ca8:	mov    ds:0xfb0c1d05,eax
  411cad:	dec    esi
  411cae:	and    eax,0x18ad6343
  411cb3:	neg    BYTE PTR [edx+eiz*4+0x38]
  411cb7:	sbb    al,0xa9
  411cb9:	dec    ecx
  411cba:	sub    BYTE PTR [esp+ecx*2],al
  411cbd:	sbb    BYTE PTR [ecx-0x17268d64],dh
  411cc3:	add    ebp,DWORD PTR [eax-0x3b]
  411cc6:	hlt    
  411cc7:	or     ecx,ebx
  411cc9:	aaa    
  411cca:	lods   eax,DWORD PTR ds:[esi]
  411ccb:	inc    edx
  411ccc:	arpl   WORD PTR [ebp-0x5ddb0a4c],bp
  411cd2:	mov    eax,0xa849b11b
  411cd7:	add    eax,DWORD PTR [eax]
	...
  411d09:	add    BYTE PTR [eax+ebx*1],dl
  411d0c:	xor    DWORD PTR [esi+edx*1+0x5803e8d6],ebx
  411d13:	lds    edi,FWORD PTR [ebx-0x16fa74c2]
  411d19:	cwde   
  411d1a:	mov    dh,0xa1
  411d1c:	fwait
  411d1d:	test   DWORD PTR [edi+ebx*2],0xa1e5a8bb
  411d24:	fistp  DWORD PTR [ebx+0x46]
  411d27:	inc    esp
  411d28:	jmp    0x11526cd5
  411d2d:	pop    eax
  411d2e:	das    
  411d2f:	mov    ds:0xa14fa8fd,al
  411d34:	cmc    
  411d35:	cs mov bh,0xa1
  411d38:	jae    0x411d31
  411d3a:	mov    esp,0xada943b8
  411d3f:	mov    eax,ds:0x17a5b453
  411d44:	shr    DWORD PTR [eax-0x3e3eeee9],0x37
  411d4b:	mov    ds:0xa917a8c5,al
  411d50:	mov    ebp,0xffa1a72e
  411d55:	cmp    edi,DWORD PTR [ebx-0x57]
  411d58:	mov    bh,0xc
  411d5a:	retf   0xfea2
  411d5d:	sbb    al,0xaf
  411d5f:	test   eax,0xa2ba09f0
  411d64:	pop    esi
  411d65:	aaa    
  411d66:	sbb    bh,al
  411d68:	psubsw mm4,QWORD PTR [ebp+0x6aeb8c]
	...
  411d9f:	add    BYTE PTR [ecx+ebp*4],cl
  411da2:	cmp    ah,0x54
  411da5:	or     cl,BYTE PTR [edi]
  411da7:	ins    BYTE PTR es:[edi],dx
  411da8:	push   edi
  411da9:	push   es
  411daa:	add    cl,ch
  411dac:	lods   eax,DWORD PTR ds:[esi]
  411dad:	dec    ecx
  411dae:	hlt    
  411daf:	mov    ecx,0xb9f849b5
  411db4:	lods   eax,DWORD PTR ds:[esi]
  411db5:	dec    ecx
  411db6:	cld    
  411db7:	mov    ecx,0xd4ff037e
  411dbc:	jo     0x411d6b
  411dbe:	and    BYTE PTR [esi],bh
  411dc0:	mov    ebx,0xb8bc829f
  411dc5:	add    eax,0xa0b76c0f
  411dca:	(bad)  
  411dcb:	jmp    0x7735379b
  411dd0:	sub    eax,0x24fa6795
  411dd5:	inc    esi
  411dd6:	add    BYTE PTR [esi],dl
  411dd8:	lea    edx,[ebp-0x5f313c19]
  411dde:	(bad)  
  411ddf:	repnz mov al,ds:0x6021850f
  411de5:	add    eax,0x997d6400
  411dea:	dec    edi
  411deb:	pop    esp
  411dec:	jne    0x411d8b
  411dee:	dec    edi
  411def:	je     0x411e13
  411df1:	mov    eax,ds:0xa05f534f
  411df6:	je     0x411df1
  411df8:	clc    
  411df9:	stos   BYTE PTR es:[edi],al
  411dfa:	cmc    
  411dfb:	into   
  411dfc:	mov    esp,0xa2007c83
  411e01:	or     cl,BYTE PTR [edi]
  411e03:	test   DWORD PTR [eax],eax
	...
  411e35:	add    dl,ah
  411e37:	or     DWORD PTR [eax],eax
  411e39:	add    BYTE PTR [ebp-0x1b970c2a],dh
  411e3f:	inc    esp
  411e40:	inc    ecx
  411e41:	add    dl,dl
  411e43:	call   0xfbe:0x9b7a0030
  411e4a:	iret   
  411e4b:	and    al,0xff
  411e4d:	dec    DWORD PTR [edx+0x1d]
  411e50:	inc    esp
  411e51:	hlt    
  411e52:	push   0x1e
  411e54:	inc    esp
  411e55:	clc    
  411e56:	push   0x1e
  411e58:	inc    esp
  411e59:	cld    
  411e5a:	pop    edx
  411e5b:	sti    
  411e5c:	add    bh,bh
  411e5e:	das    
  411e5f:	hlt    
  411e60:	out    0xb1,eax
  411e62:	mov    WORD PTR [eax-0x3],gs
  411e65:	add    DWORD PTR [edi],0x6c
  411e68:	dec    BYTE PTR [esi]
  411e6a:	pop    DWORD PTR [esi+edi*8+0x441b0aff]
  411e71:	hlt    
  411e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e73:	cdq    
  411e74:	lea    eax,[ebp-0x6a]
  411e77:	push   ds
  411e78:	inc    esp
  411e79:	hlt    
  411e7a:	ficomp DWORD PTR [esp+eax*2]
  411e7d:	clc    
  411e7e:	ficomp DWORD PTR [esp+eax*2]
  411e81:	cld    
  411e82:	stos   BYTE PTR es:[edi],al
  411e83:	std    
  411e84:	add    edi,edi
  411e86:	iret   
  411e87:	repz out 0x89,eax
  411e8a:	jl     0x411ef4
  411e8c:	std    
  411e8d:	and    edi,0x6b
  411e90:	push   DWORD PTR [ebp+eax*1+0x5f]
  411e94:	add    ebp,DWORD PTR [esp+ebx*8+0xff0048]
	...
  411ecb:	add    BYTE PTR [ebp-0x4038029a],dh
  411ed1:	adc    esp,DWORD PTR [ebp+0x41]
  411ed4:	mov    edx,0x85fffd66
  411ed9:	pop    esi
  411eda:	add    esi,DWORD PTR [ebx+eiz*2-0x6bffbab0]
  411ee1:	into   
  411ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ee3:	dec    BYTE PTR [eax+eiz*8+0x6261e7af]
  411eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eeb:	(bad)  
  411eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eed:	lock fwait
  411eef:	add    BYTE PTR [ebx-0x52],ah
  411ef2:	add    al,BYTE PTR [ebx+0x411d3a2e]
  411ef8:	arpl   WORD PTR [edi+0x2e],di
  411efb:	sub    eax,esp
  411efd:	mov    ecx,0xaca26572
  411f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f03:	jae    0x411e88
  411f05:	sub    ebp,eax
  411f07:	mov    bl,0xbd
  411f09:	in     eax,dx
  411f0a:	add    edi,edi
  411f0c:	mov    bh,0xbf
  411f0e:	sbb    dh,al
  411f10:	out    dx,al
  411f11:	in     al,dx
  411f12:	add    ecx,DWORD PTR [ebp-0xaccb5a]
  411f18:	scas   al,BYTE PTR es:[edi]
  411f19:	push   eax
  411f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f1b:	je     0x411f8c
  411f1d:	aaa    
  411f1e:	xor    BYTE PTR [eax],cl
  411f20:	or     esp,DWORD PTR [ebp-0x29f30156]
  411f26:	ror    BYTE PTR [edi],0x63
  411f29:	jns    0x411fa4
  411f2b:	jmp    0x411f0d
  411f2d:	lock xchg esi,eax
  411f2f:	inc    BYTE PTR [eax]
	...
  411f61:	add    BYTE PTR [esi-0x5c],ch
  411f64:	call   0x5369:0xa5e78a9c
  411f6b:	xor    DWORD PTR [eax-0x10],eax
  411f6e:	xor    esi,edi
  411f70:	das    
  411f71:	or     bl,cl
  411f73:	xchg   edi,eax
  411f74:	dec    edx
  411f75:	dec    esp
  411f77:	xchg   ebx,eax
  411f78:	ret    0x5f74
  411f7b:	aad    0xc0
  411f7d:	pop    es
  411f7e:	arpl   WORD PTR [edx+0x6ba56812],ax
  411f84:	inc    ebx
  411f85:	add    dh,bl
  411f87:	add    eax,0xad14b42c
  411f8c:	aad    0x45
  411f8e:	pushf  
  411f8f:	sahf   
  411f90:	loope  0x411f55
  411f92:	wbinvd 
  411f94:	mov    al,ds:0xae0564c2
  411f99:	aas    
  411f9a:	ja     0x411fa0
  411f9c:	jmp    0x2bd182a4
  411fa1:	cwde   
  411fa2:	and    al,0x9e
  411fa4:	xor    edi,esp
  411fa6:	test   al,ch
  411fa8:	inc    edx
  411fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411faa:	or     ch,BYTE PTR gs:[ecx+0x13826530]
  411fb1:	cwde   
  411fb2:	push   esp
  411fb3:	sbb    edi,esp
  411fb5:	fmul   DWORD PTR [esp+ecx*8]
  411fb8:	stos   BYTE PTR es:[edi],al
  411fb9:	cld    
  411fba:	inc    esp
  411fbb:	dec    esi
  411fbc:	sar    BYTE PTR [edx-0x6367f7b7],cl
  411fc2:	mov    cl,0x4
  411fc4:	sub    cl,bh
	...
  411ff6:	add    BYTE PTR [eax],al
  411ff8:	in     al,dx
  411ff9:	pop    ss
  411ffa:	pop    esi
  411ffb:	dec    esp
  411ffc:	loopne 0x411f9a
  411ffe:	out    0x2e,eax
  412000:	pop    bp
  412002:	call   0x6a46820a
  412007:	stos   DWORD PTR es:[edi],eax
  412008:	arpl   WORD PTR [ecx],bx
  41200a:	out    dx,eax
  41200b:	fadd   st,st(4)
  41200d:	retf   
  41200e:	sub    bh,ah
  412010:	cld    
  412011:	bound  ecx,QWORD PTR [esi+ebx*1+0x3f5c05a2]
  412018:	push   DWORD PTR [esi+eiz*1]
  41201b:	das    
  41201c:	pop    ebx
  41201d:	lods   eax,DWORD PTR ds:[esi]
  41201e:	jmp    0x412069
  412020:	fcomp  QWORD PTR [ebp+0x1963ac69]
  412026:	in     al,0x80
  412028:	aam    0x2
  41202a:	jl     0x412029
  41202c:	loope  0x41204d
  41202e:	or     eax,0x73604
  412033:	ret    0xcca0
  412036:	shl    ecx,0x60
  412039:	nop
  41203a:	inc    esp
  41203b:	aad    0x10
  41203d:	sahf   
  41203e:	je     0x412031
  412040:	clc    
  412041:	stos   BYTE PTR es:[edi],al
  412042:	pop    eax
  412043:	(bad)  
  412044:	mov    edi,0x3ce8f782
  412049:	or     BYTE PTR [ebx+0x61862c1],al
  41204f:	push   0x45
  412051:	mov    cl,0xff
  412053:	cmp    esi,DWORD PTR [ebp-0x16]
  412056:	mov    edi,0x5a2a0
  41205b:	je     0x41205d
	...
  41208d:	add    BYTE PTR ds:0x8d9e4fb1,ah
  412093:	or     eax,0x9ca9a0e8
  412098:	(bad)  
  412099:	loop   0x4120bb
  41209b:	adc    al,BYTE PTR [esi]
  41209d:	push   0x7d
  41209f:	test   eax,0xf03ef3ff
  4120a4:	mov    edi,0x522a0
  4120a9:	pop    esp
  4120aa:	ins    DWORD PTR es:[edi],dx
  4120ab:	test   eax,0xd75664f
  4120b0:	call   0xfeddca41
  4120b5:	push   0xffffffc8
  4120b7:	fdiv   QWORD PTR [edi+eiz*8-0x1d]
  4120bb:	sbb    esp,ebp
  4120bd:	jmp    0x296c23f7
  4120c2:	mov    ecx,0x6de907c6
  4120c7:	inc    ecx
  4120c8:	in     al,dx
  4120c9:	cdq    
  4120ca:	(bad)  
  4120cb:	adc    DWORD PTR [eax],ecx
  4120cd:	adc    eax,edx
  4120cf:	cmp    eax,0x94e31eff
  4120d4:	pop    ds
  4120d5:	pushf  
  4120d6:	(bad)  
  4120d7:	xchg   DWORD PTR [ebp+edi*8+0x61],edi
  4120db:	adc    al,BYTE PTR [esi]
  4120dd:	add    BYTE PTR [ecx-0x4d3d3838],dh
  4120e3:	or     BYTE PTR [ebp-0xc7a1bb],cl
  4120e9:	jne    0x4120ad
  4120eb:	xor    BYTE PTR [ecx+0x59],0xbd
  4120ef:	push   0xf881
	...
  412124:	push   0xfffffffe
  412126:	add    eax,0xfe552f83
  41212b:	je     0x4120b1
  41212d:	stos   DWORD PTR es:[edi],eax
  41212e:	mov    esi,0x9b8c9
  412133:	lea    eax,[edi+0x55]
  412136:	dec    esi
  412137:	push   0x6a
  412139:	push   0xe8a20873
  41213e:	pop    eax
  41213f:	(bad)  
  412140:	mov    ebp,0x9aec4376
  412145:	push   0x57e20873
  41214a:	push   esi
  41214b:	(bad)  
  41214c:	fld    QWORD PTR [ebx+0xb4801f6]
  412152:	cmp    eax,0x49
  412155:	inc    DWORD PTR ds:0xfe6c2f83
  41215b:	je     0x4121a1
  41215d:	stos   DWORD PTR es:[edi],eax
  41215e:	mov    esi,0x978c9
  412163:	mov    ds:0x40eef2,eax
  412168:	jg     0x4121b8
  41216a:	in     al,dx
  41216b:	push   eax
  41216c:	and    BYTE PTR [eax+0x701275fd],dh
  412172:	dec    eax
  412173:	pop    ecx
  412174:	cmp    eax,0x75c56668
  412179:	inc    ecx
  41217a:	add    BYTE PTR [ebp+0x6a4e6bc7],cl
  412180:	sti    
  412181:	data16 jae 0x412190
  412184:	jge    0x412184
  412186:	pop    es
  412187:	call   0x41218c
	...
  4121b8:	add    BYTE PTR [eax],al
  4121ba:	arpl   WORD PTR [edx-0x1b330168],ax
  4121c0:	lds    eax,FWORD PTR [edi]
  4121c2:	arpl   WORD PTR [ecx-0x73],di
  4121c5:	jmp    0x4121a7
  4121c7:	loope  0x412168
  4121c9:	mov    WORD PTR [esi],ds
  4121cb:	xchg   edx,eax
  4121cc:	xor    ch,al
  4121ce:	cmp    dh,BYTE PTR [ecx-0x5f]
  4121d1:	(bad)  
  4121d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121d3:	cmp    BYTE PTR [eax-0x5555e902],ah
  4121d9:	dec    esi
  4121da:	sub    al,0xb3
  4121dc:	mov    eax,ds:0x1331a30a
  4121e1:	dec    DWORD PTR [esi]
  4121e3:	xchg   esi,eax
  4121e4:	mov    eax,ds:0xddb57f74
  4121e9:	std    
  4121ea:	je     0x41223e
  4121ec:	or     eax,0xa1adf6c0
  4121f1:	je     0x41225a
  4121f3:	jne    0x412217
  4121f5:	push   ebp
  4121f6:	pop    esp
  4121f7:	jl     0x4121c4
  4121f9:	shl    DWORD PTR [edi-0x54],0x37
  4121fd:	mov    edi,DWORD PTR [edi]
  4121ff:	mov    WORD PTR [edi],ss
  412201:	or     al,0x3b
  412203:	pusha  
  412204:	and    al,0xff
  412206:	cmp    al,0x98
  412208:	ret    0x8073
  41220b:	adc    ebx,DWORD PTR [eax]
  41220d:	adc    BYTE PTR [ebx+0x2460cc84],dl
  412213:	and    al,0x33
  412215:	push   0x4266eb
  41221a:	adc    al,0xba
  41221c:	cli    
  41221d:	inc    BYTE PTR [eax]
	...
  41224f:	add    BYTE PTR [esi-0x7100cd70],dl
  412255:	xchg   esp,eax
  412256:	stos   BYTE PTR es:[edi],al
  412257:	in     eax,0xe3
  412259:	(bad)  [ecx-0x5e8e4919]
  41225f:	(bad)  
  412260:	sbb    ch,bh
  412262:	idiv   bh
  412264:	pop    DWORD PTR ds:0x544af72
  41226a:	jmp    0x536f3921
  41226f:	inc    esi
  412270:	and    al,BYTE PTR ds:0x2f57180e
  412276:	jecxz  0x41221a
  412278:	aaa    
  412279:	or     eax,0x9ab55311
  41227e:	cmc    
  41227f:	sub    ah,BYTE PTR [ebx+0x5]
  412282:	(bad)  
  412283:	pusha  
  412284:	cmp    al,0xc6
  412286:	sub    DWORD PTR [ebx+0x63],eax
  412289:	call   0x17d5:0xff091053
  412290:	pop    ebx
  412291:	lods   eax,DWORD PTR ds:[esi]
  412292:	outs   dx,DWORD PTR ds:[esi]
  412293:	mov    eax,ds:0x4509a85
  412298:	arpl   WORD PTR [edx+0x46b92c7e],bp
  41229e:	sub    BYTE PTR [esp+ebp*2],al
  4122a1:	adc    ch,bl
  4122a3:	sub    eax,0xc1b9a47
  4122a8:	dec    ebx
  4122a9:	xchg   DWORD PTR [ebp-0x16d2aa5f],ebx
  4122af:	add    edi,DWORD PTR [ebx+ebx*2]
  4122b2:	add    ch,al
	...
  4122e4:	add    BYTE PTR [eax],al
  4122e6:	mov    eax,ds:0xb7a0e944
  4122eb:	or     DWORD PTR [ebx],edx
  4122ed:	add    BYTE PTR [eax+edx*1],dh
  4122f0:	loope  0x41229d
  4122f2:	mov    ecx,0xbca16d9a
  4122f7:	add    eax,0x2cdeb0e9
  4122fc:	mov    ds:0x5605a245,eax
  412301:	pop    ss
  412302:	pop    edi
  412303:	das    
  412304:	or     ah,BYTE PTR [ecx+0x38510d8f]
  41230a:	cld    
  41230b:	cdq    
  41230c:	cmp    eax,0x5632c
  412311:	inc    esi
  412312:	and    DWORD PTR [edx],0x5a1aac3
  412318:	call   FWORD PTR [esp+ebp*2+0x6c1e232f]
  41231f:	or     eax,0x9b03d4e8
  412324:	(bad)  
  412325:	and    BYTE PTR [ebp-0x1063ffff],bl
  41232b:	lods   eax,DWORD PTR ds:[esi]
  41232c:	and    BYTE PTR ds:0x83002c03,0x96
  412333:	call   0xe65a:0x47f8e174
  41233a:	ret    
  41233b:	mov    WORD PTR [ebp+ebx*8+0x48],es
  41233f:	ds inc esp
  412341:	sub    BYTE PTR [edi-0x66],ah
  412344:	je     0x412327
  412346:	mov    eax,0xc6ff48
	...
  41237b:	add    bl,al
  41237d:	call   0xc108:0x10c3bd74
  412384:	dec    ecx
  412385:	aas    
  412386:	jmp    FWORD PTR [esi-0x16fc3c67]
  41238c:	xchg   ebp,eax
  41238d:	mov    ebx,gs
  41238f:	push   0x1c
  412391:	popf   
  412392:	imul   ebp,ecx,0x14fed47e
  412398:	push   edi
  412399:	lods   eax,DWORD PTR ds:[esi]
  41239a:	sbb    al,0x23
  41239c:	add    bl,BYTE PTR [eax+0x21032488]
  4123a2:	push   0x2d
  4123a4:	mov    al,ds:0x58f4ff05
  4123a9:	lods   eax,DWORD PTR ds:[esi]
  4123aa:	sbb    esp,DWORD PTR [esi-0x3d]
  4123ad:	xchg   edi,eax
  4123ae:	(bad)  
  4123af:	aam    0xf4
  4123b1:	xchg   edi,eax
  4123b2:	je     0x412395
  4123b4:	mov    eax,0xc34e5a40
  4123b9:	int    0xc1
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	add    eax,0x81a68b55
  4123c2:	ret    0x20f8
  4123c5:	add    eax,0xef35346a
  4123ca:	pop    es
  4123cb:	call   0x3fff46
  4123d0:	push   ebx
  4123d1:	aas    
  4123d2:	cld    
  4123d3:	push   0x4140ee
  4123d8:	push   ebp
  4123d9:	out    dx,eax
  4123da:	pop    es
  4123db:	call   0x3e8a31
	...
  412410:	add    BYTE PTR [eax],al
  412412:	rol    BYTE PTR [eax+ebp*2],1
  412415:	xchg   esp,eax
  412416:	inc    BYTE PTR [ebx+0x0]
  412419:	push   0x41403a
  41241e:	test   DWORD PTR [esi+0x14b2954],edi
  412424:	call   0xfdb979ce
  412429:	or     edi,DWORD PTR [edx+0x4f893efd]
  41242f:	jns    0x412497
  412431:	mov    al,ah
  412433:	inc    ecx
  412434:	add    BYTE PTR [eax+0x7a],ch
  412437:	add    al,0xef
  412439:	mov    esi,0x41423b22
  41243e:	dec    edx
  41243f:	ja     0x4124b4
  412441:	clc    
  412442:	cmc    
  412443:	std    
  412444:	pop    es
  412445:	call   0x401d14
  41244a:	bound  ecx,QWORD PTR [ecx-0x13b5bf48]
  412450:	(bad)  
  412451:	jmp    ebp
  412453:	ss addr16 ret 
  412456:	jns    0x41249a
  412458:	add    bh,bh
  41245a:	das    
  41245b:	jl     0x41245a
  41245d:	jne    0x412471
  41245f:	ins    BYTE PTR es:[edi],dx
  412460:	je     0x4124e1
  412462:	mov    ch,0x78
  412464:	std    
  412465:	jne    0x4124ca
  412467:	lods   al,BYTE PTR ss:[esi]
  412469:	dec    ecx
  41246a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41246b:	inc    edi
  41246c:	lahf   
  41246d:	(bad)  
  41246e:	jbe    0x4124b2
  412470:	lahf   
  412471:	je     0x4124de
  412473:	ss popa 
  412475:	pop    eax
	...
  4124a6:	add    BYTE PTR [eax],al
  4124a8:	in     al,dx
  4124a9:	into   
  4124aa:	int3   
  4124ab:	rcr    DWORD PTR [edi-0x52],0x37
  4124af:	mov    ecx,edi
  4124b1:	sub    cl,al
  4124b3:	sti    
  4124b4:	dec    ecx
  4124b5:	scas   al,BYTE PTR es:[edi]
  4124b6:	sub    BYTE PTR ds:0xe80a78cc,dh
  4124bc:	inc    edx
  4124bd:	push   ebp
  4124be:	popf   
  4124bf:	(bad)  
  4124c0:	jmp    0x4362:0x3679e68
  4124c7:	add    BYTE PTR [eax+ebx*1-0x57bc17f5],ch
  4124ce:	popf   
  4124cf:	(bad)  
  4124d0:	pushf  
  4124d1:	cmp    BYTE PTR [eax-0x5569f102],ah
  4124d7:	mov    ebp,DWORD PTR [edx]
  4124d9:	scas   eax,DWORD PTR es:[edi]
  4124da:	popf   
  4124db:	enter  0xa1a1,0x2
  4124df:	push   ebp
  4124e0:	call   0x7804a696
  4124e5:	xor    eax,DWORD PTR [edx+ebp*2]
  4124e8:	xor    eax,0x7b08174f
  4124ed:	popf   
  4124ee:	cmp    edi,edi
  4124f0:	pop    esp
  4124f1:	push   ss
  4124f2:	dec    eax
  4124f3:	cld    
  4124f4:	retf   
  4124f5:	xor    eax,0x6f634147
  4124fa:	pop    ss
  4124fb:	or     BYTE PTR [ebx],bh
  4124fd:	pop    eax
  4124fe:	pushf  
  4124ff:	(bad)  
  412500:	cmp    al,0x80
  412502:	pop    ss
  412503:	cld    
  412504:	xor    al,0x92
  412506:	or     ch,al
  412508:	mov    ch,dh
  41250a:	sahf   
  41250b:	inc    BYTE PTR [eax]
	...
  41253d:	add    BYTE PTR [edx],bl
  41253f:	imul   eax,DWORD PTR [esi],0x0
  412542:	mov    dh,0x5
  412544:	jb     0x4124f5
  412546:	loope  0x412509
  412548:	pop    esp
  412549:	sub    DWORD PTR [ebx+0x2b],esp
  41254c:	push   ds
  41254d:	lahf   
  41254e:	(bad)  
  41254f:	or     eax,0x96949e41
  412554:	inc    ebp
  412555:	mov    WORD PTR [edi-0x5fad2f67],ds
  41255b:	inc    esp
  41255c:	jmp    0x414e94ff
  412561:	popf   
  412562:	fist   WORD PTR [esi-0x66b061db]
  412568:	sbb    eax,0xc2ad5b18
  41256d:	cmp    al,0xc4
  41256f:	xchg   esi,eax
  412570:	pop    ds
  412571:	shl    DWORD PTR [eax+0x5],0x9c
  412575:	mov    cl,al
  412577:	and    BYTE PTR [edi+ebx*4],0x3a
  41257b:	add    eax,0x10a5db83
  412580:	loope  0x41252d
  412582:	scas   al,BYTE PTR es:[edi]
  412583:	cmp    eax,0x40eb9de6
  412588:	(bad)  [eax+ecx*8]
  41258b:	inc    ecx
  41258c:	sub    BYTE PTR [esp+eax*4],al
  41258f:	adc    cl,ah
  412591:	stos   DWORD PTR es:[edi],eax
  412592:	scas   eax,DWORD PTR es:[edi]
  412593:	cwde   
  412594:	lds    ebx,FWORD PTR [ebp-0x6242ef8b]
  41259a:	test   DWORD PTR [ecx+eax*8],0xad960c9b
  4125a1:	retf   
	...
  4125d2:	add    BYTE PTR [eax],al
  4125d4:	and    al,BYTE PTR [ecx]
  4125d6:	jmp    0x9dea0e11
  4125db:	pop    ss
  4125dc:	pop    edi
  4125dd:	lods   eax,DWORD PTR ds:[esi]
  4125de:	push   ecx
  4125df:	cmp    eax,0xc3e19644
  4125e4:	mov    al,0xf8
  4125e6:	adc    dh,cl
  4125e8:	mov    al,ds:0x3b33e944
  4125ed:	xor    eax,0x96c61600
  4125f2:	dec    edi
  4125f3:	outs   dx,BYTE PTR ds:[esi]
  4125f4:	je     0x4125eb
  4125f6:	dec    edi
  4125f7:	data16 ins BYTE PTR es:[edi],dx
  4125f9:	or     eax,0x96d556e8
  4125fe:	inc    BYTE PTR [ecx-0x66]
  412601:	cmp    bh,bh
  412603:	dec    esi
  412604:	sub    ah,al
  412606:	or     ebp,ecx
  412608:	sub    eax,0x1b6aeb8a
  41260d:	mov    ss,WORD PTR [esi-0x3d]
  412610:	pusha  
  412611:	sub    edi,DWORD PTR [ecx]
  412613:	cs je  0x412623
  412616:	call   0xfed7beb0
  41261b:	jo     0x412641
  41261d:	cdq    
  41261e:	mov    dl,ah
  412620:	ja     0x41260f
  412622:	inc    eax
  412623:	jmp    0x7d40fd08
  412628:	push   esp
  412629:	sub    eax,0x521a5c5
  41262e:	push   edi
  41262f:	add    DWORD PTR [esi],ecx
  412631:	jmp    0xc5ad0f35
  412636:	jae    0x41267e
	...
  412668:	add    BYTE PTR [eax],al
  41266a:	dec    esi
  41266b:	lods   eax,DWORD PTR ds:[esi]
  41266c:	fld    DWORD PTR [ebp-0x12]
  41266f:	xchg   esi,eax
  412670:	or     ch,BYTE PTR [ecx+0x2489306c]
  412676:	fist   WORD PTR [esi-0x4b53e8c]
  41267c:	(bad)  
  41267d:	xor    al,0x5f
  41267f:	lods   eax,DWORD PTR ds:[esi]
  412680:	test   DWORD PTR [esi+0x34fe96c7],esi
  412686:	call   FWORD PTR [esi]
  412688:	sbb    al,0xa6
  41268a:	ins    DWORD PTR es:[edi],dx
  41268b:	std    
  41268c:	out    0x20,eax
  41268e:	out    dx,al
  41268f:	xchg   ebx,eax
  412690:	(bad)  
  412691:	xchg   esi,eax
  412692:	ins    DWORD PTR es:[edi],dx
  412693:	lea    ebp,[ecx-0x36]
  412696:	fistp  WORD PTR [ecx]
  412698:	or     BYTE PTR [eax],al
  41269a:	shl    ah,cl
  41269c:	(bad)  
  41269d:	jmp    FWORD PTR [ebp+0x7b44d7e0]
  4126a3:	or     edi,edi
  4126a5:	jne    0x412639
  4126a7:	pusha  
  4126a8:	jae    0x412708
  4126aa:	jge    0x41271d
  4126ac:	or     eax,eax
  4126ae:	ss xchg edi,eax
  4126b0:	dec    esi
  4126b1:	jmp    DWORD PTR [edi]
  4126b3:	jno    0x412703
  4126b5:	call   DWORD PTR [edi]
  4126b7:	add    eax,ebp
  4126b9:	ins    BYTE PTR es:[edi],dx
  4126ba:	push   esp
  4126bb:	jno    0x4126ba
  4126bd:	call   0x3ff4fc
  4126c2:	sub    eax,0x52e8f7fb
  4126c7:	into   
  4126c8:	(bad)  
  4126c9:	(bad)  
  4126ca:	jle    0x412681
  4126cc:	mov    esi,0xb9
	...
  4126fd:	add    BYTE PTR [eax],al
  4126ff:	add    BYTE PTR [ebp+0x71],ch
  412702:	std    
  412703:	jmp    FWORD PTR [eax+0x22]
  412706:	aaa    
  412707:	pop    es
  412708:	xlat   BYTE PTR ds:[ebx]
  412709:	mov    ebp,?
  41270b:	jne    0x41276b
  41270d:	jno    0x412782
  41270f:	or     BYTE PTR [edx-0x6d],dl
  412712:	push   esi
  412713:	jmp    FWORD PTR [ebp-0x793d3730]
  412719:	or     BYTE PTR [ebp-0x75],dl
  41271c:	scas   al,BYTE PTR es:[edi]
  41271d:	jo     0x412792
  41271f:	or     al,0xb2
  412721:	dec    edi
  412722:	pop    esp
  412723:	jmp    FWORD PTR [ebp-0x708b3ffc]
  412729:	loopne 0x412711
  41272b:	inc    esp
  41272c:	dec    ebx
  41272d:	or     DWORD PTR [eax-0x18],edx
  412730:	sub    edi,ecx
  412732:	(bad)  
  412733:	dec    DWORD PTR [edx+0x70]
  412736:	jae    0x412748
  412738:	jp     0x4127aa
  41273a:	jae    0x412744
  41273c:	repnz xchg edx,eax
  41273e:	aam    0xff
  412740:	in     eax,dx
  412741:	pusha  
  412742:	ins    BYTE PTR es:[edi],dx
  412743:	pop    edx
  412744:	arpl   WORD PTR [ebx-0x66],di
  412747:	enter  0xb221,0x2
  41274b:	push   ebp
  41274c:	call   0x2c04adca
  412751:	sti    
  412752:	sub    eax,0x9958b900
  412757:	je     0x4127c4
  412759:	xchg   BYTE PTR [edx-0x72d4ebaa],cl
  41275f:	inc    esp
  412760:	(bad)  
  412762:	fldcw  WORD PTR [esi+0x0]
	...
  412795:	add    BYTE PTR [ebx],bh
  412797:	pop    ebp
  412798:	add    al,BYTE PTR [eax+0x590e9e3c]
  41279e:	mov    eax,DWORD PTR [eax+0x40]
  4127a1:	inc    ecx
  4127a2:	arpl   WORD PTR [ebx-0x56],di
  4127a5:	fnstenv [edi]
  4127a7:	sahf   
  4127a8:	add    cl,BYTE PTR [ebx]
  4127aa:	mov    ds:0xcb56d659,eax
  4127af:	call   0x970e26da
  4127b4:	ret    0x9173
  4127b7:	and    eax,0x78bcf841
  4127bc:	call   0xbb08:0x110b5969
  4127c3:	sub    ebx,DWORD PTR [ebx+0xf9aa4fe]
  4127c9:	clc    
  4127ca:	or     edx,eax
  4127cc:	cdq    
  4127cd:	je     0x41283a
  4127cf:	mov    dh,0x1b
  4127d1:	dec    DWORD PTR [edx+esi*4+0x478b7499]
  4127d8:	out    0xfe,eax
  4127da:	mul    BYTE PTR [ebp-0x358b9456]
  4127e0:	cdq    
  4127e1:	(bad)  
  4127e2:	test   ch,0xaa
  4127e5:	std    
  4127e6:	or     bl,BYTE PTR [ebx-0x67]
  4127e9:	sti    
  4127ea:	nop
  4127eb:	pop    esp
  4127ec:	pop    ebx
  4127ed:	(bad)  
  4127ee:	push   esp
  4127ef:	push   es
  4127f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127f1:	call   0x6ace:0x2e06452
  4127f8:	xchg   ebp,eax
  4127f9:	adc    BYTE PTR [eax],al
	...
  41282b:	add    BYTE PTR [edi],bh
  41282d:	xchg   ebx,eax
  41282e:	adc    ecx,DWORD PTR [ebx+ecx*2]
  412831:	daa    
  412832:	push   ds
  412833:	fwait
  412834:	sub    eax,0x60c5b033
  412839:	add    eax,0x87088f1c
  41283e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41283f:	xchg   edi,eax
  412840:	lods   eax,DWORD PTR ds:[esi]
  412841:	pop    ds
  412842:	jmp    0xd3d37074
  412847:	or     edi,ebx
  412849:	or     BYTE PTR [esi-0x5c830266],bh
  41284f:	xchg   edi,eax
  412850:	jmp    0xa42cfe25
  412855:	add    eax,0x16e4da69
  41285a:	test   eax,0xa849d12b
  41285f:	add    ebp,DWORD PTR [ebx*4-0x6d331848]
  412866:	icebp  
  412867:	ret    
  412868:	push   eax
  412869:	out    0xbd,al
  41286b:	stos   DWORD PTR es:[edi],eax
  41286c:	xor    DWORD PTR [esi],esp
  41286e:	push   cs
  41286f:	call   0x1d1c:0xfc7cc569
  412876:	jmp    0x8094dc7e
  41287b:	xchg   edi,eax
  41287c:	and    BYTE PTR [ecx+ebp*8+0x33],al
  412880:	xchg   esp,eax
  412881:	sbb    cl,dh
  412883:	stos   DWORD PTR es:[edi],eax
  412884:	add    edx,DWORD PTR [ebx]
  412886:	ficomp WORD PTR [ecx-0x66d07f84]
  41288c:	jge    0x41281f
  41288e:	sbb    esp,eax
	...
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	mov    ebx,0x6d99c592
  4128c7:	xchg   edi,eax
  4128c8:	mov    ds,esp
  4128ca:	pop    ebp
  4128cb:	sbb    BYTE PTR [eax],al
  4128cd:	test   eax,0xaefc18fa
  4128d2:	fs std 
  4128d4:	out    0x9b,eax
  4128d6:	xchg   ecx,eax
  4128d7:	xchg   edx,eax
  4128d8:	(bad)  
  4128d9:	ds sbb ah,al
  4128dc:	add    ebp,ecx
  4128de:	lea    edi,[esi-0x15]
  4128e1:	push   0x23
  4128e3:	stos   BYTE PTR es:[edi],al
  4128e4:	add    ah,0x9c
  4128e7:	loopne 0x412929
  4128e9:	jmp    0xa045414e
  4128ee:	and    eax,0x5f02fffe
  4128f3:	pop    ds
  4128f4:	add    bl,dl
  4128f6:	jmp    0x41288a
  4128f8:	je     0x4128e7
  4128fa:	ss add eax,0xe7c8e96a
  412900:	sub    ch,cl
  412902:	pusha  
  412903:	jl     0x412949
  412905:	inc    ecx
  412906:	retf   0xf818
  412909:	push   ecx
  41290a:	xor    DWORD PTR [edi+edi*8],ebp
  41290d:	ss call 0x6470255b
  412913:	(bad)  
  412914:	(bad)  
  412915:	pushf  
  412916:	hlt    
  412917:	sbb    edi,edi
  412919:	push   ds
  41291a:	push   esp
  41291b:	add    DWORD PTR [edx-0x17],ebp
  41291e:	mov    es,WORD PTR ds:0x91c7e5e8
  412924:	(bad)  
  412925:	je     0x412927
	...
  412957:	add    BYTE PTR [ecx+ebx*4+0x4f],ch
  41295b:	xchg   ebx,eax
  41295c:	pusha  
  41295d:	pop    ds
  41295e:	add    BYTE PTR [ebx-0x11ffe46a],al
  412964:	gs xchg ecx,eax
  412966:	(bad)  
  412967:	cld    
  412968:	sbb    al,0xe0
  41296a:	inc    eax
  41296b:	jmp    0x614f7b75
  412970:	call   0xe82b2806
  412975:	cmp    ah,dh
  412977:	add    cl,dh
  412979:	xchg   edi,eax
  41297a:	mov    eax,DWORD PTR [ebp-0x56]
  41297d:	aad    0x69
  41297f:	add    BYTE PTR [eax-0x5dff9769],ah
  412985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412986:	inc    ebx
  412987:	inc    ecx
  412988:	cmp    ch,BYTE PTR [esi+0x73]
  41298b:	hlt    
  41298c:	in     eax,0xda
  41298e:	jne    0xffa0169e
  412994:	dec    edi
  412995:	jns    0x41297d
  412997:	stos   DWORD PTR es:[edi],eax
  412998:	dec    edx
  412999:	outs   dx,BYTE PTR ds:[esi]
  41299a:	std    
  41299b:	mov    DWORD PTR [edi+0x61],edi
  41299e:	or     eax,eax
  4129a0:	push   ds
  4129a1:	cmp    eax,0x5ce275ff
  4129a6:	jmp    0x412a00
  4129a8:	test   DWORD PTR [ebp-0x79],ebp
  4129ab:	inc    ebp
  4129ac:	xchg   esi,eax
  4129ad:	ins    DWORD PTR es:[edi],dx
  4129ae:	jae    0x4129a0
  4129b0:	mov    ds:0xa5ff513a,al
  4129b5:	ins    DWORD PTR es:[edi],dx
  4129b6:	jae    0x4129a0
  4129b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129b9:	(bad)  
  4129ba:	jmp    0x4129bb
	...
  4129ec:	add    BYTE PTR [eax],al
  4129ee:	scas   eax,DWORD PTR es:[edi]
  4129ef:	je     0x4129d7
  4129f1:	sub    al,0xfb
  4129f3:	ins    DWORD PTR es:[edi],dx
  4129f4:	std    
  4129f5:	or     ecx,DWORD PTR [edx-0x4597e500]
  4129fb:	add    al,0xef
  4129fd:	mov    esi,0xe807ff65
  412a02:	lahf   
  412a03:	(bad)  
  412a05:	jmp    DWORD PTR [ebp-0x1]
  412a08:	out    0xff,eax
  412a0a:	das    
  412a0b:	push   0x5cb275fd
  412a10:	pop    ebx
  412a11:	push   ebp
  412a12:	xchg   ebp,eax
  412a13:	js     0x412a12
  412a15:	jne    0x4129ad
  412a17:	pop    ebx
  412a18:	xchg   esp,eax
  412a19:	pop    eax
  412a1a:	test   DWORD PTR [eax-0x3],edi
  412a1d:	jne    0x4129c9
  412a1f:	popa   
  412a20:	stc    
  412a21:	dec    edi
  412a22:	arpl   WORD PTR [edi-0x45f1756a],si
  412a28:	mov    dl,BYTE PTR [ecx]
  412a2a:	ins    BYTE PTR es:[edi],dx
  412a2b:	ror    DWORD PTR [edi-0x6a69ee02],1
  412a31:	je     0x412a92
  412a33:	(bad)  
  412a34:	sbb    bl,BYTE PTR [eax+0x54]
  412a37:	pop    edi
  412a38:	int3   
  412a39:	rcr    DWORD PTR [edi-0x62],0x2f
  412a3d:	mov    esi,DWORD PTR [edi]
  412a3f:	outs   dx,DWORD PTR ds:[esi]
  412a40:	adc    BYTE PTR [ebx+ecx*2],cl
  412a43:	xor    edi,DWORD PTR [eax]
  412a45:	push   DWORD PTR [ebx+eiz*4]
  412a48:	ret    0x7a73
  412a4b:	idiv   ch
  412a4d:	inc    esp
  412a4e:	mov    ds:0xe8329e,al
	...
  412a83:	add    BYTE PTR [ebx-0x4c016906],dh
  412a89:	push   es
  412a8a:	inc    ebp
  412a8b:	mov    edi,0x2a9ea3
  412a90:	arpl   WORD PTR [edi],di
  412a92:	push   esi
  412a93:	addr16 pop edi
  412a95:	popa   
  412a96:	inc    ebx
  412a97:	add    BYTE PTR [ebx-0x4f7eec1],dl
  412a9d:	mov    ch,0x19
  412a9f:	jmp    esp
  412aa1:	xor    eax,0xd6dc57d7
  412aa6:	xchg   esi,eax
  412aa7:	je     0x412b10
  412aa9:	inc    esi
  412aaa:	jle    0x412b07
  412aac:	int3   
  412aad:	out    0xa,al
  412aaf:	ror    BYTE PTR [edi-0x4b],0x2a
  412ab3:	or     eax,0x50025d26
  412ab8:	retf   
  412ab9:	xchg   edx,eax
  412aba:	jmp    FWORD PTR ss:[ebp+ebp*2+0x5de4412a]
  412ac2:	add    ch,BYTE PTR [eax+0x63]
  412ac5:	sahf   
  412ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ac7:	mov    ebp,0x413fc20b
  412acc:	arpl   WORD PTR ds:0xfd0f9739,ax
  412ad2:	rcl    dl,1
  412ad4:	stc    
  412ad5:	(bad)  
  412ad6:	aad    0xab
  412ad8:	push   0x2d
  412ada:	into   
  412adb:	xchg   esi,eax
  412adc:	fwait
  412add:	ret    0x3f0
  412ae0:	push   cs
  412ae1:	jl     0x412aaf
  412ae3:	and    BYTE PTR [eax],0x92
  412ae6:	inc    edx
  412ae7:	add    al,0x0
	...
  412b19:	add    cl,cl
  412b1b:	shr    DWORD PTR [ebp-0x2b62a4f0],1
  412b21:	xor    BYTE PTR [edi+ecx*4+0x6f],al
  412b25:	inc    eax
  412b26:	aas    
  412b27:	sbb    al,0xf3
  412b29:	xchg   esi,eax
  412b2a:	scas   eax,DWORD PTR es:[edi]
  412b2b:	std    
  412b2c:	adc    BYTE PTR [ebx],0x2c
  412b2f:	pop    DWORD PTR [ebp-0xc717fd7]
  412b35:	or     ecx,DWORD PTR [ebx]
  412b37:	sub    BYTE PTR [esi-0x6a],dh
  412b3a:	adc    eax,0x9796cd1c
  412b3f:	std    
  412b40:	push   eax
  412b41:	aaa    
  412b42:	add    al,0x8f
  412b44:	pop    ebp
  412b45:	xchg   esi,eax
  412b46:	ja     0x412ad9
  412b48:	push   ebp
  412b49:	adc    BYTE PTR [ebx-0x63],ch
  412b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b4d:	xor    ah,ch
  412b4f:	mov    gs,WORD PTR [edi]
  412b51:	shl    DWORD PTR [eax+0x5],0x94
  412b55:	mov    cl,al
  412b57:	mov    ?,WORD PTR [ebx-0x730234f9]
  412b5d:	xchg   esi,eax
  412b5e:	int    0xfa
  412b60:	sub    BYTE PTR [edi],cl
  412b62:	jg     0x412b81
  412b64:	fiadd  DWORD PTR [eax+0x22]
  412b67:	add    eax,0x2ad7abb9
  412b6c:	push   cs
  412b6d:	xchg   esi,eax
  412b6e:	sbb    al,0x1d
  412b70:	jmp    0x9090df78
  412b75:	cmp    eax,0xe9004426
  412b7a:	push   eax
  412b7b:	mov    ?,WORD PTR [ecx+eiz*8+0x0]
	...
  412baf:	add    BYTE PTR [eax-0x111983d7],bh
  412bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bb6:	nop
  412bb7:	ss (bad) 
  412bb9:	(bad)
  412bbd:	add    eax,0x83bb6255
  412bc2:	ret    
  412bc3:	lds    edi,FWORD PTR [ecx]
  412bc5:	add    eax,0x18f7fc6a
  412bca:	or     cl,al
  412bcc:	mov    dl,0x32
  412bce:	jmp    FWORD PTR [esi+0x13fc48d8]
  412bd4:	dec    ecx
  412bd5:	(bad)  
  412bd6:	je     0x412bc9
  412bd8:	or     BYTE PTR [esi+edi*8-0x6a],bl
  412bdc:	into   
  412bdd:	sbb    esp,DWORD PTR [ebx]
  412bdf:	mov    ds,WORD PTR [ebp+edi*8-0x19]
  412be3:	dec    ecx
  412be4:	into   
  412be5:	mov    ?,esi
  412be7:	adc    ebx,DWORD PTR [ebx]
  412be9:	(bad)  
  412bea:	je     0x412bcd
  412bec:	enter  0xfe77,0x6e
  412bf0:	test   BYTE PTR [esi+0x18ee6574],0x8
  412bf7:	push   ecx
  412bf8:	and    al,0x32
  412bfa:	call   DWORD PTR [esi+0x28]
  412bfd:	les    eax,FWORD PTR [ebx]
  412bff:	jmp    0x6b2ca641
  412c04:	and    edx,DWORD PTR [esi+0x1b60d356]
  412c0a:	ds ss fs std 
  412c0e:	out    0xb9,eax
  412c10:	jl     0x412ba0
  412c12:	(bad)  
  412c13:	jo     0x412c15
	...
  412c45:	add    BYTE PTR [ecx+edx*4-0x22782376],al
  412c4c:	inc    eax
  412c4d:	jmp    0x9540fb32
  412c52:	outs   dx,DWORD PTR ds:[esi]
  412c53:	sbb    eax,0x42f7004e
  412c58:	add    BYTE PTR [edi+0x72],dl
  412c5b:	sub    al,0x28
  412c5d:	add    BYTE PTR [edx-0x5f8b4004],cl
  412c63:	loopne 0x412c4c
  412c65:	ficomp WORD PTR [edx]
  412c67:	js     0x412c66
  412c69:	or     ecx,edx
  412c6b:	std    
  412c6c:	pop    ds
  412c6d:	mov    DWORD PTR [edi+0x71],eax
  412c70:	data16 add BYTE PTR [edx+0x68],bh
  412c74:	mov    esp,0x40ce4568
  412c79:	add    BYTE PTR ds:0x97fff7fc,bl
  412c7f:	stc    
  412c80:	out    0xc8,eax
  412c82:	xchg   ecx,eax
  412c83:	jb     0x412c82
  412c85:	jmp    DWORD PTR [edi+0x69]
  412c88:	out    0xf1,al
  412c8a:	je     0x412cfe
  412c8c:	std    
  412c8d:	cld    
  412c8e:	sbb    ecx,ecx
  412c90:	mov    bh,0xff
  412c92:	fnsave [ecx-0x3]
  412c95:	repnz mov WORD PTR [eax+0x71a37505],?
  412c9c:	jae    0x412c9a
  412c9e:	(bad)  
  412c9f:	sti    
  412ca0:	pop    es
  412ca1:	call   0x40021a
  412ca6:	sbb    eax,0x4c0c0
	...
  412cdb:	add    BYTE PTR [edx],cl
  412cdd:	fmul   QWORD PTR [edx-0x1db37614]
  412ce3:	push   edi
  412ce4:	and    BYTE PTR [ecx],cl
  412ce6:	push   0x3f
  412ce8:	popf   
  412ce9:	sti    
  412cea:	pop    es
  412ceb:	call   0x400212
  412cf0:	inc    ebx
  412cf1:	retf   
  412cf2:	sti    
  412cf3:	mov    edi,DWORD PTR [edi-0x45bed81f]
  412cf9:	mov    BYTE PTR ds:0x67c9d600,bh
  412cff:	pop    esp
  412d00:	arpl   WORD PTR [ecx+0x41],bx
  412d03:	add    BYTE PTR [esi+eax*1],dl
  412d06:	inc    eax
  412d07:	sub    DWORD PTR [ebx-0x62],esp
  412d0a:	pop    es
  412d0b:	rcl    BYTE PTR [edi],0xb8
  412d0e:	sub    ebp,eax
  412d10:	std    
  412d11:	jge    0x412ca6
  412d13:	(bad)  
  412d14:	pop    eax
  412d15:	fimul  WORD PTR [esi]
  412d17:	and    dl,bl
  412d19:	(bad)  [ebx-0x5e619c99]
  412d1f:	mov    ebp,0x4149390b
  412d24:	arpl   WORD PTR [ebx-0x369b07e8],di
  412d2a:	sti    
  412d2b:	out    0xb3,eax
  412d2d:	inc    edi
  412d2e:	xchg   ebx,eax
  412d2f:	(bad)  
  412d30:	push   esp
  412d31:	leave  
  412d32:	mov    esp,edi
  412d34:	retf   0x92f4
  412d37:	inc    BYTE PTR [edi-0x51]
  412d3a:	ret    0x3cb8
  412d3d:	imul   edx,DWORD PTR [edx+0xfe],0x0
	...
  412d70:	add    BYTE PTR [eax],al
  412d72:	xor    DWORD PTR [esp+ecx*8+0x6],eax
  412d76:	mov    dh,0x35
  412d78:	sbb    al,0x0
  412d7a:	arpl   WORD PTR [ebx+0x51],si
  412d7d:	addr16 xchg cl,ah
  412d80:	inc    esp
  412d81:	add    BYTE PTR [ebx+0x634148d4],cl
  412d87:	sbb    ebx,DWORD PTR [ecx]
  412d89:	or     bl,bh
  412d8b:	mov    bl,0xd
  412d8d:	(bad)  
  412d8e:	cld    
  412d8f:	mov    bh,0x2
  412d91:	push   0x435985
  412d96:	jnp    0x412dad
  412d98:	dec    ecx
  412d99:	inc    ecx
  412d9a:	arpl   WORD PTR [ebx-0x27],ax
  412d9d:	push   ebp
  412d9e:	mov    bl,BYTE PTR [ebp+0x2]
  412da1:	call   0xfed2a2d4
  412da6:	fisub  DWORD PTR [eax-0x62]
  412da9:	imul   esp,DWORD PTR [ebx+0x5],0x46260e91
  412db0:	jmp    0xa88307d0
  412db5:	add    ebp,DWORD PTR [ecx+edx*8+0x523dcb6]
  412dbc:	adc    edi,ecx
  412dbe:	cmp    ecx,DWORD PTR [ebp+edi*8-0x7d6ee084]
  412dc5:	add    edi,ebx
  412dc7:	and    DWORD PTR [ebx-0x7fe29cbc],0x48
  412dce:	and    al,BYTE PTR ds:0xde0ed8de
  412dd4:	daa    
  412dd5:	add    al,0x0
	...
  412e07:	add    BYTE PTR [ebx-0x1b],bh
  412e0a:	das    
  412e0b:	xchg   ebx,eax
  412e0c:	gs jge 0x412e3a
  412e0f:	xchg   esp,eax
  412e10:	out    dx,eax
  412e11:	inc    eax
  412e12:	lds    esi,FWORD PTR [ebx]
  412e14:	retf   
  412e15:	jne    0x412e42
  412e17:	inc    ebp
  412e18:	arpl   WORD PTR ds:0x5a24850,bx
  412e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e1f:	fcom   DWORD PTR [esi+0x4b0427dc]
  412e25:	add    DWORD PTR [eax],esi
  412e27:	xchg   ebx,eax
  412e28:	sub    eax,0xe19c237d
  412e2d:	or     BYTE PTR [ebp+0x3],bh
  412e30:	xchg   edi,eax
  412e31:	cmp    eax,0x613106a
  412e36:	std    
  412e37:	inc    ebp
  412e38:	loopne 0x412e42
  412e3a:	jge    0x412e3f
  412e3c:	(bad)
  412e40:	arpl   WORD PTR [edx-0x2906d62],bx
  412e46:	inc    eax
  412e47:	aaa    
  412e48:	xchg   ecx,eax
  412e49:	mov    cl,BYTE PTR [ebp-0x6e]
  412e4c:	outs   dx,DWORD PTR ds:[esi]
  412e4d:	xchg   ecx,eax
  412e4e:	inc    ebp
  412e4f:	sbb    BYTE PTR [ebx-0x63],ch
  412e52:	xchg   ecx,eax
  412e53:	xor    eax,0x35ff8ad4
  412e58:	imul   edx,DWORD PTR [ebp-0x5d374b02],0xffffff9f
  412e5f:	mov    ebx,0x94fe8bd1
  412e64:	aam    0x8b
  412e66:	je     0x412e49
  412e68:	enter  0x5171,0xe
	...
  412e9c:	add    BYTE PTR [eax],al
  412e9e:	ror    DWORD PTR [ebx+0x11f10d74],1
  412ea4:	call   0xe83e9ba7
  412ea9:	xchg   edx,eax
  412eaa:	push   esi
  412eab:	mov    bh,dh
  412ead:	out    dx,al
  412eae:	ins    BYTE PTR es:[edi],dx
  412eaf:	cdq    
  412eb0:	out    0x7d,eax
  412eb2:	xor    al,0x8a
  412eb4:	(bad)  
  412eb5:	fimul  WORD PTR [ecx+edx*4-0x19]
  412eb9:	gs xor al,0x8a
  412ebc:	dec    dh
  412ebe:	dec    esp
  412ebf:	xchg   ebp,eax
  412ec0:	out    0x6d,eax
  412ec2:	xchg   esp,eax
  412ec3:	mov    bh,dh
  412ec5:	mov    esi,0x35e79d6c
  412eca:	xchg   esp,eax
  412ecb:	mov    bh,dh
  412ecd:	scas   al,BYTE PTR es:[edi]
  412ece:	ins    BYTE PTR es:[edi],dx
  412ecf:	mov    esi,edi
  412ed1:	sbb    al,0x3f
  412ed3:	mov    ds:0x8ad23bee,al
  412ed8:	pop    esi
  412ed9:	mov    al,ds:0x34000625
  412ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412edf:	sahf   
  412ee0:	sub    BYTE PTR [ebp+0x13001bf3],0x9f
  412ee7:	mov    dh,BYTE PTR [ecx+eiz*8-0x18]
  412eeb:	jae    0x412f3e
  412eed:	outs   dx,BYTE PTR ds:[esi]
  412eee:	bnd jl 0x412f35
  412ef1:	gs pop ebp
  412ef3:	add    eax,0xb858e96a
  412ef8:	inc    esp
  412ef9:	test   al,0x60
  412efb:	sbb    eax,0x8560e900
  412f00:	out    0x0,eax
	...
  412f32:	add    BYTE PTR [eax],al
  412f34:	push   es
  412f35:	fdivp  st(6),st
  412f37:	call   ecx
  412f39:	lds    esi,FWORD PTR [edx+0x23]
  412f3c:	jmp    0x974:0x755f016d
  412f43:	rcr    dh,0x9e
  412f46:	dec    esi
  412f47:	push   0xbeef05ca
  412f4c:	loop   0x412f9b
  412f4e:	inc    ebx
  412f4f:	inc    ecx
  412f50:	mov    edx,0x9275fed5
  412f55:	ins    DWORD PTR es:[edi],dx
  412f56:	out    dx,eax
  412f57:	jns    0x412eee
  412f59:	je     0x412f41
  412f5b:	sbb    eax,0xfffd74ef
  412f60:	(bad)  
  412f62:	std    
  412f63:	jne    0x412fd7
  412f65:	ins    DWORD PTR es:[edi],dx
  412f66:	mov    ss,WORD PTR [edx-0x6b]
  412f69:	je     0x412f32
  412f6b:	ret    0x57e
  412f6e:	push   ebp
  412f6f:	mov    esp,DWORD PTR [esi+0x7dfcc280]
  412f75:	out    0xff,eax
  412f77:	imul   ecx,DWORD PTR [ebx+0x22087376],0xf5ff50b2
  412f81:	or     eax,DWORD PTR [esp+edi*8-0x4f]
  412f85:	mov    bh,0x6d
  412f87:	sub    BYTE PTR [ebx+0x3a3f8001],cl
  412f8d:	icebp  
  412f8e:	aas    
  412f8f:	push   0x413fe1
  412f94:	jge    0x412fff
  412f96:	jl     0x412fbf
	...
  412fc8:	add    BYTE PTR [eax],al
  412fca:	or     al,BYTE PTR ds:0xa20ec00b
  412fd0:	push   ebp
  412fd1:	call   0x400671
  412fd6:	icebp  
  412fd7:	les    esi,FWORD PTR [edx+0x19]
  412fda:	mov    edx,0x63ffffec
  412fdf:	aas    
  412fe0:	push   ecx
  412fe1:	addr16 repnz popa 
  412fe4:	inc    ecx
  412fe5:	add    BYTE PTR [ebx],dh
  412fe7:	aas    
  412fe8:	push   ss
  412fe9:	or     bl,cl
  412feb:	pop    ss
  412fec:	or     bh,bh
  412fee:	int3   
  412fef:	inc    esi
  412ff0:	dec    esp
  412ff1:	push   ebx
  412ff2:	(bad)  
  412ff3:	xlat   BYTE PTR ds:[ebx]
  412ff4:	mov    ?,WORD PTR [edx]
  412ff6:	mov    ds:0xb4fe9025,eax
  412ffb:	out    0x94,eax
  412ffd:	lods   eax,DWORD PTR ds:[esi]
  412ffe:	imul   edx,DWORD PTR [edi+0x71a4c015],0xffffff8e
  413005:	(bad)  
  413006:	push   ss
  413007:	xchg   esi,eax
  413008:	call   0x9a5e:0x8e87311f
  41300f:	fadd   QWORD PTR [esi]
  413011:	add    BYTE PTR [esi],ch
  413013:	and    ebx,DWORD PTR [edi+0x36a2a782]
  413019:	push   0x63
  41301b:	xor    al,0x42
  41301d:	push   esi
  41301f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413020:	call   0xa688:0x8eb712c1
  413027:	ret    0x3c7a
  41302a:	(bad)  
  41302b:	test   BYTE PTR [eax+eax*1+0x0],0x0
	...
  413060:	jecxz  0x412ff0
  413062:	add    dh,BYTE PTR [ebx+eiz*4+0x46]
  413066:	add    eax,0x359ea246
  41306b:	call   0x43efd6
  413070:	pop    eax
  413071:	pop    esi
  413072:	pop    ss
  413073:	and    ecx,DWORD PTR [esi+eax*4+0x7f1c5dd3]
  41307a:	cli    
  41307b:	mov    edi,0x6832a58f
  413080:	arpl   WORD PTR [esi-0x59844263],bx
  413086:	inc    esp
  413087:	inc    ecx
  413088:	arpl   WORD PTR ds:0xfd6f8eb9,ax
  41308e:	push   eax
  41308f:	out    dx,al
  413090:	imul   ecx,DWORD PTR [eax+0x319a9c55],0x4e
  413097:	(bad)  
  413098:	fcom   st(3)
  41309a:	sub    BYTE PTR [ebp-0x2b],cl
  41309d:	xchg   DWORD PTR ds:0xf056d28f,edi
  4130a3:	push   es
  4130a4:	dec    esi
  4130a5:	(bad)
  4130a8:	les    eax,FWORD PTR [eax-0x44a7140]
  4130ae:	sub    BYTE PTR [eax],bl
  4130b0:	xchg   DWORD PTR ds:0x52245fb,ebx
  4130b6:	mov    ecx,0x62d7b9b
  4130bb:	(bad)  
  4130bc:	and    al,0x1d
  4130be:	jmp    0x8087acc6
  4130c3:	sti    
	...
  4130f4:	add    BYTE PTR [eax],al
  4130f6:	push   ds
  4130f7:	inc    esi
  4130f8:	jmp    0xf152ad30
  4130fd:	fwait
  4130fe:	or     DWORD PTR [esi+ebx*8],0xffffff8e
  413102:	test   cl,bh
  413104:	cmp    al,0x8f
  413106:	sbb    cl,BYTE PTR gs:[edx]
  413109:	pushf  
  41310a:	mov    bh,0x2d
  41310c:	(bad)  
  41310d:	mov    gs,WORD PTR [ecx-0x3b]
  413110:	xor    al,0xe8
  413112:	(bad)  
  413113:	jmp    0x413143
  413115:	inc    ebp
  413116:	arpl   WORD PTR ds:0x869599c1,si
  41311c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41311d:	xor    ecx,ebx
  41311f:	add    eax,0x1dee9ee9
  413124:	loope  0x41316b
  413126:	mov    ds:0x978f3905,al
  41312b:	std    
  41312c:	nop
  41312d:	push   ecx
  41312e:	mov    WORD PTR [esi+0x332e9b7d],es
  413134:	add    BYTE PTR [esi-0x2b],dh
  413137:	xchg   DWORD PTR [ebp+ebp*2-0x13],esi
  41313b:	adc    DWORD PTR [eax],ecx
  41313d:	push   ecx
  41313e:	das    
  41313f:	xor    al,0xff
  413141:	pop    esi
  413142:	cmp    eax,0x60edc1bc
  413147:	xor    BYTE PTR [ebx-0x103d1ec3],cl
  41314d:	je     0x41317a
  41314f:	xchg   ebp,eax
  413150:	dec    edi
  413151:	ds imul edi,ecx,0xffffffe7
  413155:	sahf   
  413156:	ja     0x4130de
  413158:	(bad)  
  413159:	loop   0x41315b
	...
  41318b:	add    BYTE PTR [eax+0x536a3212],ah
  413191:	mov    DWORD PTR [ecx],eax
  413193:	xchg   edi,eax
  413194:	sar    DWORD PTR [ebx+0x44],0x11
  413198:	jle    0x41311e
  41319a:	aaa    
  41319b:	mov    ebp,0x6191182
  4131a0:	jnp    0x413197
  4131a2:	(bad)  
  4131a3:	je     0x41312d
  4131a5:	sahf   
  4131a6:	and    eax,0xfe87d599
  4131ab:	je     0x413199
  4131ad:	xchg   DWORD PTR [ecx+eiz*8-0x1a],esi
  4131b1:	adc    DWORD PTR [eax],ecx
  4131b3:	shr    DWORD PTR ds:0xe4d6ff35,1
  4131b9:	inc    eax
  4131ba:	lock cmp edi,edi
  4131bd:	push   eax
  4131be:	pop    eax
  4131bf:	(bad)  
  4131c0:	out    0xbc,al
  4131c2:	shr    ebp,0x60
  4131c5:	xor    BYTE PTR [ebx-0x83e1d3b],cl
  4131cb:	inc    ebx
  4131cc:	sbb    eax,DWORD PTR [bp+di-0x5a]
  4131d0:	dec    esp
  4131d1:	std    
  4131d2:	out    0x51,eax
  4131d4:	ja     0x41315c
  4131d6:	(bad)  
  4131d7:	pusha  
  4131d8:	pushf  
  4131d9:	mov    DWORD PTR [ecx-0x17],ebp
  4131dc:	jp     0x4131e3
  4131de:	push   0x41403200
  4131e3:	add    BYTE PTR [edx+0x3],dh
  4131e6:	add    BYTE PTR [eax],al
  4131e8:	jp     0x413253
  4131ea:	jo     0x413242
  4131ec:	lea    edi,[eax+0x9]
  4131ef:	rol    BYTE PTR [eax],0x0
	...
  413222:	push   ss
  413223:	mov    ecx,0xe9824587
  413228:	jae    0x413270
  41322a:	mov    ebx,0x3275ff01
  41322f:	imul   esp,eax,0xb01ca25
  413235:	rcl    BYTE PTR [esi],0xa5
  413238:	std    
  413239:	jne    0x4131cd
  41323b:	imul   eax,DWORD PTR [ecx],0x4e788d5d
  413241:	push   0x3ebd68
  413246:	rol    BYTE PTR [ecx],cl
  413248:	add    bh,ch
  41324a:	or     al,0xeb
  41324c:	dec    DWORD PTR [edi+0x6d]
  41324f:	out    dx,al
  413250:	pop    es
  413251:	call   0x402228
  413256:	jb     0x4131f0
  413258:	push   ecx
  413259:	dec    DWORD PTR [ebp+0x62f87378]
  41325f:	nop
  413260:	push   ecx
  413261:	(bad)  
  413262:	jge    0x4132dc
  413264:	jae    0x413262
  413266:	(bad)  
  413267:	out    dx,al
  413268:	pop    es
  413269:	call   0x40046e
  41326e:	add    eax,DWORD PTR [edi+0x2]
  413271:	add    BYTE PTR [edi-0x2],dh
  413274:	jmp    0xa000:0x68950683
  41327b:	int    0xfe
  41327d:	jne    0x4132c1
  41327f:	mov    eax,ds:0x91fd502c
  413284:	xchg   DWORD PTR [ebp+0x0],eax
	...
  4132b7:	add    dh,cl
  4132b9:	and    BYTE PTR [eax],al
  4132bb:	add    BYTE PTR [ebx-0x75],ah
  4132be:	dec    esp
  4132bf:	addr16 in al,0x2c
  4132c2:	inc    ebx
  4132c3:	add    BYTE PTR [ebx+0x6341460a],cl
  4132c9:	add    edx,DWORD PTR [esi]
  4132cb:	or     bl,bh
  4132cd:	add    al,0x14
  4132cf:	(bad)  
  4132d0:	cld    
  4132d1:	repz adc eax,0xfa61f4fc
  4132d7:	out    0x9c,eax
  4132d9:	mov    esi,0x311afe8b
  4132de:	pop    es
  4132df:	add    BYTE PTR [esi],dh
  4132e1:	out    0x9e,eax
  4132e3:	sbb    BYTE PTR [edi+0x63001ac6],0xd3
  4132ea:	dec    esp
  4132eb:	dec    BYTE PTR [esi+0x66]
  4132ee:	call   0x2efe:0x8c332c42
  4132f5:	jp     0x413282
  4132f7:	je     0x413354
  4132f9:	push   ss
  4132fa:	imul   ecx,DWORD PTR [esi-0x5c],0x73748c1b
  413301:	adc    edx,DWORD PTR [esi]
  413303:	or     BYTE PTR [ebx-0x7300c405],cl
  413309:	adc    DWORD PTR [eax+ebx*1],0xffffff84
  41330d:	add    edi,esi
  41330f:	(bad)  
  413310:	mul    BYTE PTR [ebp-0x66]
  413313:	push   esp
  413314:	and    al,0x6b
  413316:	mov    ah,BYTE PTR [edi-0x5b]
  413319:	sub    al,0x45
	...
  41334b:	add    BYTE PTR [eax],al
  41334d:	add    BYTE PTR [ecx+eiz*8-0xd],ah
  413351:	out    0x86,eax
  413353:	or     DWORD PTR [eax+eax*1],eax
  413356:	push   0xbb6510ae
  41335b:	mov    dh,0x41
  41335d:	inc    ecx
  41335e:	arpl   WORD PTR [esi+0xa],ax
  413361:	and    esp,DWORD PTR [ebx+0x6e]
  413364:	jnp    0x4133aa
  413366:	cmp    eax,DWORD PTR ds:0xc6a6bc11
  41336c:	call   0x8156e2fb
  413371:	add    eax,DWORD PTR [esi+0x5]
  413374:	jmp    0xef3a0877
  413379:	push   es
  41337a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41337b:	jge    0x4133ec
  41337d:	inc    ecx
  41337e:	jae    0x413304
  413380:	sti    
  413381:	repz add al,0xa2
  413384:	add    DWORD PTR [ebx-0x749f780b],ecx
  41338a:	jo     0x4133c5
  41338c:	jo     0x4133cf
  41338e:	out    0xec,eax
  413390:	out    0x3,eax
  413392:	int3   
  413393:	ret    0x114d
  413396:	imul   ebp,DWORD PTR [ebp+0x33],0x3a
  41339a:	int3   
  41339b:	cmp    DWORD PTR ds:0xbb845711,0xfffffffb
  4133a2:	les    ebp,FWORD PTR [eax]
  4133a4:	sahf   
  4133a5:	mov    dh,BYTE PTR [ebp-0x5278647d]
  4133ab:	stc    
  4133ac:	lock fwait
  4133ae:	in     eax,dx
  4133af:	rcl    BYTE PTR ds:0x8b,cl
	...
  4133e1:	add    BYTE PTR [eax],al
  4133e3:	add    BYTE PTR [ebp+0xf8af0f9],bl
  4133e9:	sbb    DWORD PTR [esi],eax
  4133eb:	adc    DWORD PTR [ebx+0x6d],ebx
  4133ee:	sbb    eax,0x1f83843a
  4133f3:	(bad)  
  4133f4:	push   eax
  4133f5:	add    eax,0x87887e94
  4133fa:	lods   al,BYTE PTR ds:[esi]
  4133fb:	mov    edx,DWORD PTR [esi]
  4133fd:	mov    BYTE PTR [ebx],bl
  4133ff:	mov    esp,0x3e8c636
  413404:	xlat   BYTE PTR ds:[ebx]
  413405:	add    DWORD PTR [edx-0x38],ebp
  413408:	and    BYTE PTR [eax+ebp*1],dh
  41340b:	add    al,0x63
  41340d:	stc    
  41340e:	cmp    DWORD PTR [edi+0x3d87],eax
  413414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413415:	add    eax,0x4a553500
  41341a:	inc    esp
  41341b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41341c:	pusha  
  41341d:	add    eax,0xca21e900
  413422:	imul   ecx
  413424:	pusha  
  413425:	add    eax,0x81a35c00
  41342a:	dec    edi
  41342b:	je     0x4133d0
  41342d:	jge    0x41347e
  41342f:	adc    ebx,DWORD PTR [edi-0x13]
  413432:	nop
  413433:	das    
  413434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413435:	add    eax,0x30b4d4ff
  41343a:	inc    ecx
  41343b:	jmp    0xaab4f72d
  413440:	fld    QWORD PTR [ecx]
  413442:	clc    
  413443:	jmp    0xccc474b4
	...
  413478:	add    BYTE PTR [eax],al
  41347a:	fadd   QWORD PTR [edx-0x6b2018e]
  413480:	sti    
  413481:	push   edx
  413482:	mov    edx,0xe9ff8ad8
  413487:	clc    
  413488:	pop    ss
  413489:	cs push edx
  41348b:	and    edi,edi
  41348d:	lahf   
  41348e:	test   al,0x83
  413490:	jne    0x41346b
  413492:	fyl2xp1 
  413494:	pop    es
  413495:	add    edx,ecx
  413497:	cmp    dh,0xe
  41349a:	dec    edx
  41349b:	or     BYTE PTR [ecx+eax*1-0x1b],0x48
  4134a0:	add    ebp,DWORD PTR [edx+0x5b]
  4134a3:	jge    0x4134a4
  4134a5:	jl     0x41350a
  4134a7:	xchg   BYTE PTR ds:0xfe5a53e9,bh
  4134ad:	pop    esp
  4134ae:	fild   DWORD PTR [ebx-0x3a764eec]
  4134b4:	push   DWORD PTR [esi]
  4134b6:	sbb    BYTE PTR [ebx+eax*1-0x17],al
  4134ba:	test   DWORD PTR [esi+0x45b900eb],ecx
  4134c0:	repnz push ebx
  4134c2:	std    
  4134c3:	inc    ecx
  4134c4:	clc    
  4134c5:	add    BYTE PTR [edx+0x6],cl
  4134c8:	add    bh,al
  4134ca:	jg     0x413461
  4134cc:	(bad)  
  4134cd:	(bad)  
  4134ce:	cmp    al,BYTE PTR [esi]
  4134d0:	push   DWORD PTR [ebp+0x2a]
  4134d3:	std    
  4134d4:	inc    ebx
  4134d5:	cld    
  4134d6:	fistp  DWORD PTR [ecx]
  4134d8:	cld    
  4134d9:	push   0xa
  4134db:	and    BYTE PTR [eax],al
  4134dd:	push   0x0
	...
  41350f:	add    dl,bh
  413511:	pop    ds
  413512:	add    bh,bh
  413514:	jp     0x2047ab17
  41351a:	add    BYTE PTR [edx+0xa],ch
  41351d:	sahf   
  41351e:	retf   0xfa22
  413521:	add    eax,0x530ec00b
  413526:	dec    esi
  413527:	push   eax
  413528:	and    ch,BYTE PTR [ebx]
  41352a:	push   ecx
  41352b:	jmp    DWORD PTR ds:0x3f843fe
  413531:	and    BYTE PTR [eax],al
  413533:	push   0xffffffba
  413535:	push   DWORD PTR ss:[ebp+0x72]
  413539:	mov    WORD PTR [ebx-0x4],?
  41353c:	test   DWORD PTR [edx],edx
  41353e:	or     al,0x6a
  413540:	mov    edx,0x1ce8001f
  413545:	imul   edi,esi,0xffffffff
  413548:	add    DWORD PTR [ebp+0x73],0xf812650f
  41354f:	call   0x406bf2
  413554:	cmp    eax,0x8a00f842
  413559:	add    eax,0x8e078300
  41355e:	(bad)  
  41355f:	jae    0x413595
  413561:	mov    WORD PTR [ebx+0x8],?
  413564:	test   DWORD PTR [edx],edx
  413566:	clc    
  413567:	call   0x24bbcf
  41356c:	push   esp
  41356d:	fs ret 0x8c73
  413571:	push   ds
  413572:	mov    DWORD PTR [eax+eax*1+0x0],esi
	...
  4135a6:	pop    ebx
  4135a7:	push   esi
  4135a8:	add    esp,DWORD PTR [edx]
  4135aa:	arpl   WORD PTR [esi+0x29],bp
  4135ad:	add    esp,DWORD PTR [edx]
  4135af:	in     al,0xaa
  4135b1:	jmp    0x4aae:0xccaee79
  4135b8:	sar    bh,0x1c
  4135bb:	cmp    al,0x9c
  4135bd:	in     eax,dx
  4135be:	inc    edx
  4135bf:	outs   dx,BYTE PTR ds:[esi]
  4135c0:	add    cl,BYTE PTR [ebx]
  4135c2:	and    eax,DWORD PTR [ebx-0x694cb013]
  4135c8:	nop
  4135c9:	dec    edi
  4135ca:	cld    
  4135cb:	idiv   DWORD PTR [ecx+0x44]
  4135ce:	out    dx,eax
  4135cf:	adc    eax,0xe276ff33
  4135d4:	xor    ebp,eax
  4135d6:	inc    esp
  4135d7:	mov    ebp,0x70c8fe87
  4135dc:	inc    edx
  4135dd:	sbb    BYTE PTR [ebx-0x332ef292],0xc1
  4135e4:	mov    ah,bh
  4135e6:	mov    ds:0xe8fe879e,al
  4135eb:	mov    cl,0x8e
  4135ed:	pop    edx
  4135ee:	stos   BYTE PTR es:[edi],al
  4135ef:	sub    al,0xf7
  4135f1:	call   DWORD PTR [edi]
  4135f3:	repz xchg esi,eax
  4135f5:	sbb    BYTE PTR [edi-0x1fa8cec6],0x59
  4135fc:	retf   0x2228
  4135ff:	outs   dx,BYTE PTR ds:[esi]
  413600:	add    dh,BYTE PTR [ebp+0x65]
  413603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413604:	sub    cl,cl
  413606:	mov    eax,ds:0x8d0272
	...
  41363b:	add    BYTE PTR [esi],ah
  41363d:	jle    0x413670
  41363f:	(bad)  
  413640:	out    dx,al
  413641:	popa   
  413642:	call   0x5987:0xe6051530
  413649:	inc    ebp
  41364a:	in     eax,dx
  41364b:	jg     0x4135dc
  41364d:	push   es
  41364e:	jmp    0xcd431856
  413653:	add    al,0x63
  413655:	adc    eax,0x17e1f6e9
  41365a:	call   0x3bc19962
  41365f:	mov    BYTE PTR ds:0xe89cb0fa,dh
  413665:	frstor [ebp-0x12baa679]
  41366b:	and    BYTE PTR [eax+0x6],0xe9
  41366f:	add    edx,DWORD PTR [edx+edi*8]
  413672:	mov    WORD PTR [edi+0x5a107d97],es
  413678:	sahf   
  413679:	(bad)  
  41367a:	call   0x75c0481a
  41367f:	xchg   ebx,ebp
  413681:	leave  
  413682:	jl     0x41360b
  413684:	ja     0x413607
  413686:	gs adc ebx,ebp
  413689:	in     al,dx
  41368a:	cmp    DWORD PTR [esi],0xc4410522
  413690:	(bad)  
  413691:	jg     0x4136e0
  413693:	jge    0x4136bc
  413695:	ins    DWORD PTR es:[edi],dx
  413696:	inc    ebp
  413697:	adc    edi,eax
  413699:	jg     0x41364e
  41369b:	mov    eax,DWORD PTR [edi+esi*4-0x52]
  41369f:	inc    esp
	...
  4136d0:	add    BYTE PTR [eax],al
  4136d2:	arpl   WORD PTR [ebp+0x7b],bp
  4136d5:	xchg   BYTE PTR [ebp-0x40be9081],ch
  4136db:	sbb    DWORD PTR [ebx+0x6d0e9c97],0x5d
  4136e2:	xchg   esp,eax
  4136e3:	jg     0x4136cd
  4136e5:	or     BYTE PTR [edi],0x6d
  4136e8:	call   0xe8e117e3
  4136ed:	add    esp,DWORD PTR [ebx-0x7c]
  4136f0:	push   DWORD PTR [ebx-0x2c]
  4136f3:	jg     0x413702
  4136f5:	gs bnd jg 0x4136f7
  4136f9:	jmp    0xd2292fdb
  4136fe:	push   ecx
  4136ff:	es add cl,ch
  413702:	fyl2xp1 
  413704:	out    0x62,eax
  413706:	out    0x8b,al
  413708:	(bad)  
  413709:	cwde   
  41370a:	out    0xd5,eax
  41370c:	jmp    0x52f9:0x3bb05d0f
  413713:	or     eax,0x95df03c
  413718:	sub    al,0xd9
  41371a:	leave  
  41371b:	add    ch,BYTE PTR [eax+ebp*1]
  41371e:	arpl   WORD PTR [ebx],cx
  413720:	adc    BYTE PTR [ebp+0x6909f530],0xe4
  413727:	cmp    eax,0x6ae0ec77
  41372c:	das    
  41372d:	xchg   edx,eax
  41372e:	(bad)  
  41372f:	(bad)  
  413730:	jmp    0x41375a
  413732:	fild   WORD PTR [edx+0x9]
  413735:	test   eax,0x0
	...
  413766:	add    BYTE PTR [eax],al
  413768:	rol    BYTE PTR [edx],0xa
  41376b:	sub    eax,0x300acd8a
  413770:	jae    0x4137c1
  413772:	pop    eax
  413773:	pusha  
  413774:	fwait
  413775:	popa   
  413776:	(bad)  
  413777:	aam    0xe8
  413779:	pop    DWORD PTR [ecx+ecx*2+0x5]
  41377d:	retf   0xe9d7
  413780:	pusha  
  413781:	add    eax,0x59236400
  413786:	dec    edi
  413787:	ret    
  413788:	addr16 jmp 0x41378a
  41378b:	xchg   edx,eax
  41378c:	pusha  
  41378d:	jmp    0x41378e
  41378f:	xchg   edx,eax
  413790:	pusha  
  413791:	nop
  413792:	inc    esp
  413793:	xor    eax,0xd1147e50
  413798:	scas   eax,DWORD PTR es:[edi]
  413799:	(bad)  
  41379c:	xchg   ecx,eax
  41379d:	inc    edx
  41379e:	jb     0x4137c2
  4137a0:	or     DWORD PTR ds:0x65f600d8,ecx
  4137a6:	std    
  4137a7:	jne    0x4137ff
  4137a9:	xchg   DWORD PTR [ebx-0x28],esi
  4137ac:	jge    0x4137bc
  4137ae:	in     al,0xff
  4137b0:	mov    bh,0x9d
  4137b2:	std    
  4137b3:	jne    0x4137f7
  4137b5:	call   0x75fd:0x881dfcbb
  4137bc:	add    ah,BYTE PTR [ecx+0x24a2096]
  4137c2:	push   DWORD PTR [ebp+0x1e]
  4137c5:	mov    eax,ds:0x87fd4f78
  4137ca:	std    
  4137cb:	jne    0x4137cd
	...
  4137fd:	add    dl,dl
  4137ff:	mov    al,ds:0x87fd4f70
  413804:	std    
  413805:	jne    0x4137ed
  413807:	mov    al,ds:0x87dd4f68
  41380c:	mov    eax,DWORD PTR [ebp-0x76]
  41380f:	cmp    eax,ebp
  413811:	nop
  413812:	push   edi
  413813:	mov    ch,bh
  413815:	pop    edi
  413816:	dec    esp
  413817:	mov    edx,0x2efa0cc0
  41381c:	mov    ebp,esp
  41381e:	jns    0x413865
  413820:	cli    
  413821:	push   0xffffffca
  413823:	sbb    eax,DWORD PTR [ebp-0x1]
  413826:	mov    bh,0x79
  413828:	out    0x81,al
  41382a:	out    dx,al
  41382b:	mov    ch,bh
  41382d:	mov    edi,esi
  41382f:	test   ebp,edi
  413831:	jne    0x4137e5
  413833:	cdq    
  413834:	and    ch,bh
  413836:	ins    DWORD PTR es:[edi],dx
  413837:	mov    BYTE PTR [eax+0x5],ch
  41383a:	and    bh,bh
  41383c:	push   ecx
  41383d:	(bad)  
  41383e:	jge    0x4138bc
  413840:	mov    esi,0x68319c74
  413845:	mul    DWORD PTR [ebx+0x2f]
  413848:	inc    esp
  413849:	add    bl,bh
  41384b:	imul   eax,DWORD PTR [edx],0xffffffef
  41384e:	lds    edx,FWORD PTR [ebx+0x6c224576]
  413854:	xor    bh,bh
  413856:	out    dx,al
  413857:	arpl   WORD PTR [edx-0x7c910ec3],bx
  41385d:	out    0x4e,eax
  41385f:	aaa    
  413860:	test   esi,edi
	...
  413892:	add    BYTE PTR [eax],al
  413894:	pop    esp
  413895:	rol    BYTE PTR [edi-0x65993102],cl
  41389b:	xchg   DWORD PTR [edi+0x21c8834b],ebx
  4138a1:	imul   eax,DWORD PTR [edx],0x55
  4138a4:	call   0x3804b7f3
  4138a9:	sbb    al,0x1a
  4138ab:	add    BYTE PTR [ecx+0x5b748524],bh
  4138b1:	xchg   esi,eax
  4138b2:	xlat   BYTE PTR ds:[ebx]
  4138b3:	dec    ebx
  4138b4:	sbb    al,0x9c
  4138b6:	jns    0x4138fc
  4138b8:	pop    ss
  4138b9:	call   0x2d7ca783
  4138be:	add    al,0x80
  4138c0:	inc    esp
  4138c1:	outs   dx,BYTE PTR ds:[esi]
  4138c2:	push   cs
  4138c3:	push   ecx
  4138c4:	mov    esp,DWORD PTR [ebp+0x1b63413c]
  4138ca:	pushf  
  4138cb:	jne    0x41390f
  4138cd:	outs   dx,BYTE PTR ds:[esi]
  4138ce:	add    cl,BYTE PTR [ebx]
  4138d0:	and    ebx,DWORD PTR [ebx+0x0]
  4138d3:	jmp    0x413941
  4138d5:	push   esi
  4138d6:	mov    cl,0x45
  4138d8:	and    ch,BYTE PTR [esi+0x2b]
  4138db:	call   0x454626
  4138e0:	pop    eax
  4138e1:	cs mov db2,esp
  4138e5:	(bad)  
  4138e6:	jp     0x41393f
  4138e8:	mov    ah,0x33
  4138ea:	clc    
  4138eb:	mov    edi,0x68325537
  4138f0:	arpl   WORD PTR ds:0xedde94e9,ax
  4138f6:	or     BYTE PTR ds:0x0,bh
	...
  413928:	add    BYTE PTR [eax],al
  41392a:	and    al,BYTE PTR ds:0xd1784b9
  413930:	add    DWORD PTR ds:0x9b057c10,ecx
  413936:	ret    0xfdcb
  413939:	cmp    DWORD PTR [eax+0x38],0x29
  41393d:	dec    edx
  41393e:	ins    DWORD PTR es:[edi],dx
  41393f:	jl     0x41392e
  413941:	xor    DWORD PTR [edx-0x55],0x20
  413945:	or     edx,esi
  413947:	lods   al,BYTE PTR ds:[esi]
  413948:	(bad)  
  41394a:	pop    eax
  41394b:	jl     0x4139a8
  41394d:	or     al,0x3b
  41394f:	add    al,0x1d
  413951:	add    DWORD PTR [ebp-0x24],0xffffffaf
  413955:	inc    esi
  413956:	pusha  
  413957:	add    eax,0x86488f14
  41395c:	lods   al,BYTE PTR ds:[esi]
  41395d:	push   esp
  41395e:	xor    eax,0x9f91ad7c
  413963:	jns    0x41399d
  413965:	adc    DWORD PTR [edi+0x68f99e15],0x6d
  41396c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41396d:	and    al,0x63
  41396f:	add    eax,0x825543e2
  413974:	mov    ebx,0xa6056305
  413979:	leave  
  41397a:	in     al,dx
  41397b:	add    al,0xe9
  41397d:	add    esp,DWORD PTR [ebx+0x44]
  413980:	and    esi,DWORD PTR [ebp+eiz*8+0x3]
  413984:	jmp    0xd346828c
  413989:	add    ecx,DWORD PTR [ecx+0x5]
  41398c:	ret    
  41398d:	add    eax,DWORD PTR [eax]
	...
  4139bf:	add    dh,bl
  4139c1:	rcr    DWORD PTR [eax-0x2c],0xd7
  4139c5:	cmp    DWORD PTR [eax],0x987bbd7b
  4139cb:	sub    BYTE PTR [edi],0x7d
  4139ce:	push   DWORD PTR ds:0x4fe77faa
  4139d4:	jg     0x4139db
  4139d6:	add    dl,dh
  4139d8:	and    al,bh
  4139da:	add    al,0x10
  4139dc:	pop    ss
  4139dd:	add    eax,0x4278e900
  4139e2:	daa    
  4139e3:	test   al,0x60
  4139e5:	jl     0x413a5b
  4139e7:	(bad)  [eax]
  4139e9:	inc    ebp
  4139ea:	push   eax
  4139eb:	(bad)  
  4139ec:	loope  0x4139b9
  4139ee:	mov    bl,BYTE PTR [ecx]
  4139f0:	rol    BYTE PTR [eax+0x7ae1f6ef],cl
  4139f6:	dec    edi
  4139f7:	cmp    ecx,edi
  4139f9:	mov    ch,0x50
  4139fb:	fsubrp st(1),st
  4139fd:	lea    eax,[ebp+eax*8-0x3e018437]
  413a04:	pop    ecx
  413a05:	retf   
  413a06:	inc    dh
  413a08:	rol    ecx,cl
  413a0a:	repz sbb DWORD PTR [edi+0x39],eax
  413a0e:	inc    edi
  413a0f:	sub    BYTE PTR [edi+0x7a],ah
  413a12:	mov    ah,0xbd
  413a14:	test   eax,0x1ba6fe7b
  413a19:	psubsb mm6,mm1
  413a1c:	das    
  413a1d:	jl     0x413a1d
  413a1f:	pusha  
  413a20:	fist   DWORD PTR [edx-0xa]
  413a23:	mov    es,WORD PTR [eax]
	...
  413a55:	add    cl,ah
  413a57:	in     al,dx
  413a58:	call   DWORD PTR [eax]
  413a5a:	sub    ah,al
  413a5c:	inc    eax
  413a5d:	jmp    0x7f2cec43
  413a62:	loope  0x413adf
  413a64:	(bad)  
  413a65:	hlt    
  413a66:	push   esp
  413a67:	ins    DWORD PTR es:[edi],dx
  413a68:	in     al,dx
  413a69:	mov    ecx,0x64887be1
  413a6e:	dec    eax
  413a6f:	jae    0x413a6f
  413a71:	push   esi
  413a72:	mov    esi,0x99bb667a
  413a77:	(bad)  
  413a7a:	and    eax,0x75f7eabd
  413a7f:	xchg   ebp,edi
  413a81:	jne    0x413a49
  413a83:	out    dx,al
  413a84:	rcl    BYTE PTR [eax+0x75],1
  413a87:	xchg   DWORD PTR [edi-0x200917b],eax
  413a8d:	inc    DWORD PTR [edi]
  413a8f:	(bad)  
  413a90:	shl    bh,cl
  413a92:	jne    0x413a1b
  413a94:	dec    esi
  413a95:	push   0x3f4fe0
  413a9a:	gs mov ebp,0x8475f7ea
  413aa0:	std    
  413aa1:	jne    0x413a29
  413aa3:	out    dx,al
  413aa4:	mov    al,0x50
  413aa6:	jne    0x413a2c
  413aa8:	or     eax,eax
  413aaa:	mov    esi,0xebd831e
  413aaf:	cld    
  413ab0:	std    
  413ab1:	(bad)  
  413ab2:	ds jae 0x413ac3
  413ab5:	jmp    FWORD PTR [edx-0x6c]
  413ab8:	and    eax,0x0
	...
  413aeb:	add    ch,bh
  413aed:	cmp    ebp,0x50
  413af0:	adc    al,BYTE PTR [ecx*2+0x12e7f5ff]
  413af7:	or     edi,edx
  413af9:	jl     0x413aff
  413afb:	push   eax
  413afc:	repnz outs dx,DWORD PTR ds:[esi]
  413afe:	dec    ebx
  413aff:	push   ebp
  413b01:	retf   
  413b02:	and    eax,0xffffffed
  413b05:	cmp    ebp,0x15
  413b08:	cli    
  413b09:	add    eax,0x6e0a6a00
  413b0e:	push   edi
  413b0f:	inc    edi
  413b10:	dec    ebx
  413b11:	add    edi,edi
  413b13:	mov    ch,0xe6
  413b15:	sti    
  413b16:	std    
  413b17:	push   DWORD PTR [ebp+0x72]
  413b1a:	or     ch,al
  413b1c:	mov    dh,0x55
  413b1e:	std    
  413b1f:	call   DWORD PTR [ebx-0x7e]
  413b22:	(bad)  
  413b24:	arpl   bx,dx
  413b26:	sub    BYTE PTR [ecx+0x63],0x44
  413b2a:	cmc    
  413b2b:	inc    esi
  413b2c:	and    ch,BYTE PTR [edi+edi*2-0x4c]
  413b30:	(bad)  
  413b31:	xor    al,BYTE PTR [ecx+0xeb8acfe]
  413b37:	call   0xfec0d74e
  413b3c:	jmp    0x851a:0x94f653e8
  413b43:	mov    esp,0xfe811aab
  413b48:	arpl   WORD PTR [ebx-0x7a],bx
  413b4b:	xchg   ebx,eax
  413b4c:	arpl   WORD PTR [edx+eax*1+0x68],bp
	...
  413b80:	add    BYTE PTR [eax],al
  413b82:	jecxz  0x413b26
  413b84:	sar    edi,0xdf
  413b87:	test   al,0x76
  413b89:	dec    edi
  413b8a:	xor    BYTE PTR fs:[esi+esi*8+0x5c],bl
  413b8f:	pusha  
  413b90:	push   0x6b
  413b92:	rcl    DWORD PTR [edi+0x7f],1
  413b95:	or     ah,BYTE PTR [ebx]
  413b97:	(bad)  
  413b99:	add    dh,0x52
  413b9c:	add    dh,BYTE PTR [ebp+esi*4-0x15]
  413ba0:	mov    ebp,0x7fb82ce3
  413ba5:	push   DWORD PTR [eax+0x3bbc84c1]
  413bab:	mov    al,0x7f
  413bad:	(bad)  
  413bae:	arpl   WORD PTR [edx],bx
  413bb0:	call   0x6fafaf1c
  413bb5:	mov    ebp,0xe80c1a0c
  413bba:	xchg   ecx,eax
  413bbb:	and    eax,0x39fcfe81
  413bc0:	imul   esi,esi,0xfffffff4
  413bc3:	idiv   DWORD PTR [edi+0x74]
  413bc6:	pop    ebx
  413bc7:	xchg   BYTE PTR [eax+0x48],cl
  413bca:	in     al,0xe7
  413bcc:	jg     0x413b82
  413bce:	mov    DWORD PTR ds:0x78d5805e,0xbdbb0bd3
  413bd8:	lahf   
  413bd9:	add    ch,0x78
  413bdc:	shl    DWORD PTR [edi-0x43],cl
  413bdf:	mov    dl,0x20
  413be1:	js     0x413b98
  413be3:	js     0x413c22
  413be5:	test   BYTE PTR [eax],0x0
	...
  413c18:	fs ins DWORD PTR es:[edi],dx
  413c1a:	mov    cl,0xca
  413c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c1d:	js     0x413c4c
  413c1f:	mov    dh,0xbc
  413c21:	jo     0x413c48
  413c23:	adc    BYTE PTR [ebp+0x556bf0f2],0xce
  413c2a:	adc    eax,0x2cb28580
  413c2f:	js     0x413cae
  413c31:	js     0x413c38
  413c33:	neg    BYTE PTR [ebp+ebp*2+0x71]
  413c37:	retf   0x786d
  413c3a:	cmc    
  413c3b:	mov    ch,0x94
  413c3d:	jo     0x413c2c
  413c3f:	jg     0x413c9e
  413c41:	repnz lock imul edx,edi,0xffffffce
  413c46:	fnstsw WORD PTR [edi+0x4d]
  413c49:	mov    dl,0xb0
  413c4b:	ja     0x413c92
  413c4d:	js     0x413c0f
  413c4f:	xchg   DWORD PTR [eax-0x10803a88],ebp
  413c55:	ins    BYTE PTR es:[edi],dx
  413c56:	mov    ch,0x7f
  413c58:	sub    eax,0x25d0346d
  413c5d:	js     0x413c0c
  413c5f:	mov    ecx,0x7fa57038
  413c64:	cld    
  413c65:	cmc    
  413c66:	sub    al,0x7f
  413c68:	or     eax,0xd685b78
  413c6d:	js     0x413bfc
  413c6f:	ins    BYTE PTR es:[edi],dx
  413c70:	xchg   cl,cl
  413c72:	test   DWORD PTR [edi-0xb],edi
  413c75:	mov    cl,0x98
  413c77:	ja     0x413c66
  413c79:	ja     0x413c7a
  413c7b:	add    BYTE PTR [eax],0x0
	...
  413cae:	or     ah,cl
  413cb0:	(bad)  
  413cb1:	outs   dx,BYTE PTR ds:[esi]
  413cb2:	pop    esp
  413cb3:	mov    cl,0xeb
  413cb5:	pop    esi
  413cb6:	push   esp
  413cb7:	ja     0x413cb7
  413cb9:	aam    0x5c
  413cbb:	js     0x413d31
  413cbd:	loope  0x413cf7
  413cbf:	inc    edx
  413cc0:	cld    
  413cc1:	dec    esi
  413cc2:	cmp    al,0x77
  413cc4:	mov    ah,0x55
  413cc6:	sub    al,0x77
  413cc8:	(bad)  
  413cc9:	push   ecx
  413cca:	ins    BYTE PTR es:[edi],dx
  413ccb:	leave  
  413ccc:	(bad)  
  413ccd:	ss and al,0xc1
  413cd0:	test   DWORD PTR [eax+0x39],0x1426fe79
  413cd7:	icebp  
  413cd8:	sti    
  413cd9:	adc    esi,ebx
  413cdb:	sbb    DWORD PTR [eax],eax
  413cdd:	jmp    0xe94c82f9
  413ce2:	fwait
  413ce3:	mov    ch,bl
  413ce5:	push   0x2b
  413ce7:	mov    WORD PTR fs:[esp+ebp*8-0x623f9839],fs
  413cef:	(bad)  
  413cf0:	inc    DWORD PTR [eax-0x16bf3f36]
  413cf6:	aad    0xf1
  413cf8:	or     edx,ecx
  413cfa:	test   esi,eax
  413cfc:	(bad)  
  413cfd:	(bad)  
  413cfe:	pop    ecx
  413cff:	inc    ebp
  413d00:	jae    0x413d44
  413d02:	pop    ss
  413d03:	test   BYTE PTR [ebp+eax*8+0x5c],bh
  413d07:	lock pop esi
  413d09:	mov    esi,0xb1448670
  413d0e:	(bad)  
  413d10:	div    DWORD PTR [ebp+0x0]
	...
  413d42:	add    BYTE PTR [eax],al
  413d44:	addr16 add eax,0x3e5c1f00
  413d4a:	inc    esp
  413d4b:	mov    eax,ds:0xe9000594
  413d50:	jns    0x413d16
  413d52:	(bad)  
  413d53:	adc    al,0x7f
  413d55:	fidiv  WORD PTR [edx]
  413d57:	add    BYTE PTR [ebp+0x40],al
  413d5a:	dec    BYTE PTR [edi+eax*2+0x16e84eed]
  413d61:	sbb    DWORD PTR [eax],eax
  413d63:	add    BYTE PTR [ecx-0x42],cl
  413d66:	or     ch,BYTE PTR [edx-0x36]
  413d69:	xchg   ebp,eax
  413d6a:	inc    ebx
  413d6b:	in     al,0xa
  413d6d:	imul   ebp,eax,0x46
  413d70:	sti    
  413d71:	add    bh,bh
  413d73:	jne    0x413d13
  413d75:	jmp    0xc009:0xf71d4edc
  413d7c:	test   BYTE PTR [esi],0x50
  413d7f:	push   0xbeef02bb
  413d84:	cli    
  413d85:	div    DWORD PTR [ebx+0x8]
  413d88:	jb     0x413d2f
  413d8a:	imul   edi,edi,0x6d
  413d8d:	jmp    0x4dfd:0xf76d4bac
  413d94:	push   edx
  413d95:	cmp    DWORD PTR [ebx-0x8],0xffffff8a
  413d99:	jge    0x413d51
  413d9b:	call   0x3e88ba
  413da0:	inc    ebx
  413da1:	les    eax,FWORD PTR [esi]
  413da3:	add    bh,dh
  413da5:	mov    ch,dl
  413da7:	add    DWORD PTR [eax],0x0
	...
  413dda:	push   es
  413ddb:	test   DWORD PTR [eax+0x0],ebp
  413dde:	mov    al,0x40
  413de0:	std    
  413de1:	jne    0x413e25
  413de3:	jmp    0x4587:0xf82d48c0
  413dea:	push   ds
  413deb:	imul   eax,DWORD PTR [esi],0xff017b47
  413df1:	xor    eax,0x412a44
  413df6:	int    0x6d
  413df8:	push   es
  413df9:	call   0x3ec2f8
  413dfe:	jb     0x413e09
  413e00:	inc    edi
  413e01:	inc    ecx
  413e02:	arpl   WORD PTR [edx+ebp*8+0x1],bp
  413e06:	arpl   WORD PTR [edx+eax*4-0x2],bp
  413e0a:	outs   dx,BYTE PTR ds:[esi]
  413e0b:	je     0x413e77
  413e0d:	fucomp st(7)
  413e0f:	idiv   BYTE PTR [esi+edi*8+0x2e]
  413e13:	push   ss
  413e14:	sub    eax,DWORD PTR [ecx+0x63]
  413e17:	out    0xf6,eax
  413e19:	pop    es
  413e1a:	retf   
  413e1b:	adc    al,0x7d
  413e1d:	dec    ah
  413e1f:	push   ebx
  413e20:	add    BYTE PTR [eax],al
  413e22:	arpl   sp,bp
  413e24:	jl     0x413e9a
  413e26:	imul   eax,esp,0x1f
  413e29:	push   DWORD PTR [esi+edi*4+0x36af747c]
  413e30:	test   DWORD PTR [edi],0xfecbf1bb
  413e36:	pushf  
  413e37:	and    al,0x42
  413e39:	add    esp,DWORD PTR [ebx-0x47]
  413e3c:	xchg   ebx,ebp
	...
  413e6e:	add    BYTE PTR [eax],al
  413e70:	loopne 0x413e91
  413e72:	pusha  
  413e73:	push   ebp
  413e74:	sub    al,0x82
  413e76:	add    ch,BYTE PTR [edx+0x2b]
  413e79:	pop    es
  413e7a:	test   DWORD PTR [edi],0xfeca9f8b
  413e80:	ins    BYTE PTR es:[edi],dx
  413e81:	hlt    
  413e82:	(bad)  
  413e83:	sti    
  413e84:	loopne 0x413e36
  413e86:	jle    0x413eb5
  413e88:	mov    ds:0xdf0f025e,al
  413e8d:	mov    ecx,0xdf630001
  413e92:	cmp    eax,0x41d7400
  413e97:	add    BYTE PTR [edx+ebp*8+0x42],ch
  413e9b:	add    BYTE PTR [ebx+0x5e],ah
  413e9e:	jg     0x413edc
  413ea0:	pop    ebx
  413ea1:	add    eax,ebx
  413ea3:	jmp    DWORD PTR [esp+ebp*2]
  413ea6:	xchg   BYTE PTR [edx-0x7cfda19e],dh
  413eac:	push   esi
  413ead:	add    eax,0x5a22db5
  413eb2:	jmp    0xe7ed1dc3
  413eb7:	add    esp,DWORD PTR [ebx-0x78]
  413eba:	retf   
  413ebb:	push   ebx
  413ebc:	inc    esi
  413ebd:	(bad)  
  413ebe:	call   0x5fca9ac6
  413ec3:	add    ah,BYTE PTR [ebx+0x5]
  413ec6:	push   0x3e
  413ec8:	mov    bh,0x23
  413eca:	sub    BYTE PTR [ebx+eiz*2],al
  413ecd:	add    al,0x6d
  413ecf:	(bad)  
  413ed0:	arpl   WORD PTR ds:0x80e9,ax
	...
  413f06:	xchg   DWORD PTR [ebp+0x6],ecx
  413f09:	ret    
  413f0a:	mov    esp,0x3587dd74
  413f0f:	push   es
  413f10:	jmp    0xe5741f18
  413f15:	sub    al,0x22
  413f17:	add    eax,0xf7e70ce9
  413f1c:	out    0x3,eax
  413f1e:	arpl   bp,bx
  413f20:	add    ah,0x23
  413f23:	add    eax,0x1a840393
  413f28:	adc    eax,0x6005222d
  413f2d:	(bad)  
  413f2e:	ins    BYTE PTR es:[edi],dx
  413f2f:	mov    BYTE PTR [ebx+0x65036c7b],al
  413f35:	(bad)  [ebx+0x5]
  413f38:	jmp    0xee1c9465
  413f3d:	cmc    
  413f3e:	dec    esp
  413f3f:	je     0x413f3c
  413f41:	add    edi,DWORD PTR [esi+eax*8-0x18]
  413f45:	mov    ?,WORD PTR [eax+eax*1]
  413f48:	fcomip st,st(1)
  413f4a:	addr16 pop esi
  413f4c:	push   ss
  413f4d:	add    eax,0xd2720563
  413f52:	pop    eax
  413f53:	xor    BYTE PTR [edx],0xec
  413f56:	fldz   
  413f58:	inc    DWORD PTR [esi+ebp*8-0x40]
  413f5c:	repz loop 0x413ef8
  413f5f:	add    eax,DWORD PTR [esp+eax*1-0x6ffffa9a]
  413f66:	pop    ecx
  413f67:	push   es
  413f68:	add    cl,ch
	...
  413f9a:	add    BYTE PTR [eax],al
  413f9c:	or     BYTE PTR [edi+0x745f2846],cl
  413fa2:	ss xchg ecx,eax
  413fa4:	inc    esi
  413fa5:	adc    DWORD PTR [eax],eax
  413fa7:	jmp    0x6c4f8501
  413fac:	push   ebx
  413fad:	je     0x413fad
  413faf:	jmp    0xe9493291
  413fb4:	pop    ecx
  413fb5:	mov    ecx,ebp
  413fb7:	jmp    0xdf40451c
  413fbc:	push   0x39a35f5d
  413fc1:	jae    0x413f4b
  413fc3:	lods   al,BYTE PTR ds:[esi]
  413fc4:	xor    BYTE PTR [ebx+0x76],dh
  413fc7:	icebp  
  413fc8:	sub    ecx,edi
  413fca:	out    dx,eax
  413fcb:	ss nop
  413fcd:	jmp    edi
  413fcf:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  413fd1:	jb     0x413fd1
  413fd3:	xchg   ecx,eax
  413fd4:	ret    
  413fd5:	retf   0xe940
  413fd8:	or     ecx,edi
  413fda:	out    dx,eax
  413fdb:	add    DWORD PTR [esi],ecx
  413fdd:	verw   cx
  413fe0:	gs inc ebp
  413fe2:	push   cs
  413fe3:	ins    BYTE PTR es:[edi],dx
  413fe4:	mov    bl,0x73
  413fe6:	(bad)  
  413fe7:	jmp    0xacccb362
  413fec:	enter  0x8cc2,0xa4
  413ff0:	mov    esp,0x3ee969c2
  413ff5:	jae    0x41404b
  413ff7:	fidiv  WORD PTR [ebx-0x3]
  413ffa:	sub    BYTE PTR cs:[edi-0x2],ah
  413ffe:	mov    edi,0xde
	...
  41402f:	add    BYTE PTR [eax],al
  414031:	add    BYTE PTR [ebx+ebx*4+0x73affff],dh
  414038:	lea    eax,[ebp+0x1e]
  41403b:	push   edi
  41403c:	std    
  41403d:	jne    0x414061
  41403f:	lock jae 0x41402e
  414042:	lds    edx,FWORD PTR ds:0x93b2ecc
  414048:	or     eax,eax
  41404a:	outs   dx,BYTE PTR ds:[esi]
  41404b:	jno    0x413fd8
  41404d:	inc    ebp
  41404e:	jmp    0x6a09:0x60006856
  414055:	pop    es
  414056:	push   eax
  414057:	or     edi,edi
  414059:	jne    0x414039
  41405b:	out    dx,eax
  41405c:	adc    edx,eax
  41405e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41405f:	dec    ecx
  414060:	dec    BYTE PTR [edx]
  414062:	or     ah,BYTE PTR [ebx+0x54]
  414065:	jmp    FWORD PTR [edi+0x13e8e6e6]
  41406b:	lock std 
  41406d:	mov    DWORD PTR [edi],ecx
  41406f:	fisttp DWORD PTR [ebx-0x2a9d5bb]
  414075:	jne    0x413ffd
  414077:	pusha  
  414078:	(bad)  
  414079:	imul   edi,DWORD PTR [ebp-0x200101a0],0x7a15fdd2
  414083:	sbb    al,0x41
  414085:	add    BYTE PTR [ecx-0xdd68d3a],dl
  41408b:	push   es
  41408c:	add    bh,ch
  41408e:	adc    al,0xef
  414090:	jae    0x41409a
  414092:	bound  esi,QWORD PTR [esi]
  414094:	inc    esi
  414095:	inc    DWORD PTR [eax]
	...
  4140c7:	add    BYTE PTR [ebp-0x11],ah
  4140ca:	je     0x4140d4
  4140cc:	gs jne 0x4140d1
  4140cf:	(bad)  
  4140d0:	(bad)  
  4140d2:	out    0x58,eax
  4140d4:	cld    
  4140d5:	out    dx,al
  4140d6:	std    
  4140d7:	jmp    FWORD PTR [edi+0x675fde9]
  4140dd:	in     al,dx
  4140de:	jae    0x4140e8
  4140e0:	arpl   WORD PTR [ebp+ecx*8+0x45],ax
  4140e4:	xor    al,0x43
  4140e6:	js     0x41415c
  4140e8:	andps  xmm0,XMMWORD PTR [eax+ecx*2+0x7478b324]
  4140f0:	pop    es
  4140f1:	mov    ebx,0x1d45d40e
  4140f6:	add    al,0x6a
  4140f8:	arpl   WORD PTR [ebx+0x7904ebee],bp
  4140fe:	pop    edx
  4140ff:	sub    eax,0x74775ca2
  414104:	repz and eax,0x48
  414108:	in     al,dx
  414109:	mov    al,BYTE PTR [esi+eax*8-0xc390cad]
  414110:	loopne 0x41418a
  414112:	outs   dx,BYTE PTR ds:[esi]
  414113:	jmp    DWORD PTR [ebp-0x17]
  414116:	imul   edi,ebp,0xffffffcc
  414119:	jmp    0x6978:0xd2c5b46a
  414120:	arpl   bx,bx
  414122:	out    dx,al
  414123:	div    DWORD PTR [eax+edi*2+0x5c222efe]
  41412a:	ja     0x4141a0
	...
  41415c:	add    BYTE PTR [eax],al
  41415e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41415f:	xor    ch,bh
  414161:	pop    es
  414162:	mov    esi,ebp
  414164:	sar    esi,0x94
  414167:	sbb    al,0xc8
  41416a:	mov    eax,ds:0xd855025f
  41416f:	inc    DWORD PTR [edx+0x79129fc3]
  414175:	(bad)  
  414176:	out    0xa8,al
  414178:	jbe    0x4141c9
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	lock push es
  41417d:	jmp    FWORD PTR [esi]
  41417f:	call   0x1afd:0x6634129
  414186:	arpl   WORD PTR [esi+0xb],bx
  414189:	rcr    BYTE PTR [ebp+eax*1+0x6c],0xa8
  41418e:	arpl   WORD PTR ds:0x6da740e9,ax
  414194:	call   0xa646a49c
  414199:	mov    esi,0x3ed7130
  41419e:	arpl   bx,bx
  4141a0:	call   0xe9205e92
  4141a5:	in     eax,dx
  4141a6:	adc    al,0x82
  4141a8:	and    esi,DWORD PTR [eax-0x64]
  4141ab:	sub    BYTE PTR [ebx+0x6f],0xd
  4141af:	jno    0x41414e
  4141b1:	sar    ebp,cl
  4141b3:	cli    
  4141b4:	nop
  4141b5:	js     0x414226
  4141b7:	jno    0x414139
  4141b9:	(bad)  
  4141ba:	dec    ecx
  4141bb:	add    eax,0xfa230ce9
  4141c0:	jecxz  0x41422c
	...
  4141f2:	add    BYTE PTR [eax],al
  4141f4:	push   edx
  4141f5:	push   es
  4141f6:	jmp    0xc0898cfe
  4141fb:	ret    0x6fcc
  4141fe:	fild   DWORD PTR [edi]
  414200:	mov    ebx,0xbd78acf5
  414205:	aad    0x61
  414207:	push   ebx
  414208:	out    0x8a,eax
  41420a:	push   esp
  41420b:	jo     0x4141ba
  41420d:	jo     0x4141a7
  41420f:	aad    0xbc
  414211:	in     eax,0xac
  414213:	js     0x4141b2
  414215:	jle    0x414282
  414217:	push   edi
  414218:	lea    esi,[eax+0x2d]
  41421b:	imul   edx,esi,0xffffffbd
  41421e:	and    eax,0x9104fa78
  414223:	push   edx
  414224:	and    eax,0xaf78e8c6
  414229:	push   ecx
  41422a:	adc    eax,0xbb706d78
  41422f:	sar    DWORD PTR [ebx],1
  414231:	(bad)  
  414232:	call   0xfffd58a2
  414237:	cmc    
  414238:	int3   
  414239:	jge    0x4141bf
  41423b:	stc    
  41423c:	mov    esp,0x5f53fe6f
  414241:	fst    st(5)
  414243:	es es jo 0x414244
  414247:	pushf  
  414248:	fwait
  414249:	ja     0x414249
  41424b:	into   
  41424c:	mov    ah,0x39
  41424e:	push   esi
  41424f:	adc    BYTE PTR [esi],bl
  414251:	jo     0x414239
  414253:	popa   
  414254:	sub    BYTE PTR [edi-0x2],ch
  414257:	pusha  
	...
  414288:	add    BYTE PTR [eax],al
  41428a:	loop   0x4142e7
  41428c:	imul   BYTE PTR [esi+0x10ffde94]
  414292:	test   al,0xc7
  414294:	inc    eax
  414295:	jmp    0x9f1cfc0f
  41429a:	ins    BYTE PTR es:[edi],dx
  41429b:	outs   dx,DWORD PTR ds:[esi]
  41429c:	(bad)  
  41429d:	aam    0x1e
  41429f:	sbb    eax,0xee78e941
  4142a4:	dec    edx
  4142a5:	jle    0x4142fb
  4142a7:	jge    0x41422d
  4142a9:	add    DWORD PTR [edi+ebp*2-0x2],0xdfdd6703
  4142b1:	scas   al,BYTE PTR es:[edi]
  4142b2:	lahf   
  4142b3:	outs   dx,DWORD PTR ds:[esi]
  4142b4:	std    
  4142b5:	xchg   esp,eax
  4142b6:	sbb    esi,DWORD PTR [edi-0x2]
  4142b9:	push   esi
  4142ba:	sub    al,0x39
  4142bc:	push   esi
  4142bd:	add    BYTE PTR [esi-0x665a1991],ah
  4142c3:	outs   dx,BYTE PTR ds:[esi]
  4142c4:	(bad)  
  4142c5:	jo     0x4142a9
  4142c7:	arpl   si,si
  4142c9:	ss or  al,0xde
  4142cc:	inc    eax
  4142ce:	add    eax,edi
  4142d0:	inc    eax
  4142d1:	jmp    0x171cfbe3
  4142d6:	hlt    
  4142d7:	outs   dx,BYTE PTR ds:[esi]
  4142d8:	(bad)  
  4142d9:	fsub   QWORD PTR [esi-0x716bee4]
  4142df:	xor    DWORD PTR [ebx+0x0],ecx
  4142e2:	pop    ebp
  4142e3:	clc    
  4142e4:	xchg   DWORD PTR [ebp-0x22196],eax
  4142ea:	leave  
  4142eb:	lods   al,BYTE PTR ds:[esi]
  4142ec:	jmp    0x0:0xf7
	...
  41431f:	add    BYTE PTR ds:0x8973fef8,bh
  414325:	popa   
  414326:	(bad)  
  414327:	jmp    FWORD PTR ds:0x4275fdb9
  41432d:	fist   DWORD PTR [ecx-0x207e2bc]
  414333:	mov    ch,0xea
  414335:	(bad)  
  414337:	(bad)  
  414338:	fnsave [ebp+0x6]
  41433b:	call   0x3ef265
  414340:	mov    ebp,0xbdf7eab5
  414345:	idiv   ebp
  414347:	jne    0x41433b
  414349:	fcmovbe st,st(7)
  41434b:	inc    esp
  41434c:	int    0xf7
  41434e:	std    
  41434f:	mov    ch,0xe2
  414351:	(bad)  
  414353:	(bad)  
  414354:	fnsave [ebp+0x6]
  414357:	call   0x3ef26d
  41435c:	dec    ebp
  41435d:	mov    ch,0xe2
  41435f:	idiv   DWORD PTR ds:0xd275fdf7
  414365:	fidivr DWORD PTR [ebx-0x208e2bc]
  41436b:	mov    ch,0x2a
  41436d:	(bad)  
  41436f:	call   FWORD PTR ds:0xcde80675
  414375:	scas   al,BYTE PTR es:[edi]
  414376:	std    
  414377:	call   FWORD PTR [ebp-0x4b]
  41437a:	(bad)  
  41437c:	dec    ebp
  41437d:	idiv   ebp
  41437f:	jne    0x414303
  414381:	fidivr DWORD PTR [esi-0x2]
	...
  4143b4:	add    BYTE PTR [eax],al
  4143b6:	cmp    eax,0x3eb5fdf7
  4143bb:	(bad)  
  4143bd:	jmp    DWORD PTR [ebx+0x4]
  4143c0:	stos   BYTE PTR es:[edi],al
  4143c1:	inc    esi
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	push   DWORD PTR [ebp-0x4c]
  4143c6:	jae    0x414437
  4143c8:	je     0x4143c8
  4143ca:	dec    ebx
  4143cb:	mov    esp,0x7754febd
  4143d0:	scas   al,BYTE PTR es:[edi]
  4143d1:	jmp    0x414427
  4143d3:	pop    edi
  4143d4:	je     0x4143bd
  4143d6:	out    dx,al
  4143d7:	push   ds
  4143d8:	jne    0x4143d8
  4143da:	cmp    al,0x99
  4143dc:	imul   esi,esi,0x34
  4143df:	push   edi
  4143e0:	imul   ecx,DWORD PTR [ecx-0x18bc05c],0xffffffee
  4143e7:	aas    
  4143e8:	ins    BYTE PTR es:[edi],dx
  4143e9:	(bad)  
  4143ea:	sbb    al,0x54
  4143ec:	hlt    
  4143ed:	inc    esi
  4143ee:	adc    al,0xb7
  4143f0:	je     0x4143a6
  4143f2:	add    esi,DWORD PTR [edi+0xffbfe74]
  4143f8:	mov    ebp,0xbe8efcfe
  4143fd:	test   DWORD PTR [edx],0xecfe75fc
  414403:	jle    0x4143f3
  414405:	sti    
  414406:	sti    
  414407:	lds    ebx,FWORD PTR [edx]
  414409:	add    BYTE PTR [ebx-0x4b],ah
  41440c:	inc    ecx
  41440d:	pop    es
  41440e:	arpl   WORD PTR [ecx],dx
  414410:	mov    ebx,ebp
  414412:	loopne 0x4143bb
  414414:	ja     0x41447f
  414416:	arpl   WORD PTR [edx-0x37],dx
  414419:	inc    BYTE PTR [eax]
	...
  41444b:	add    BYTE PTR [esi],dh
  41444d:	je     0x4144b9
  41444f:	test   DWORD PTR [edi],ebx
  414451:	xlat   BYTE PTR ds:[ebx]
  414452:	je     0x4143dc
  414454:	es shr bl,0xb1
  414458:	sbb    al,0x9d
  41445a:	add    bh,bh
  41445c:	push   ss
  41445d:	je     0x4144c9
  41445f:	pop    es
  414460:	xchg   ebp,eax
  414461:	ss jne 0x414462
  414464:	push   ss
  414465:	and    BYTE PTR [ebp+0x74],dh
  414468:	pop    ebx
  414469:	add    eax,0x6e20b311
  41446e:	sbb    eax,0xe908a24b
  414473:	into   
  414474:	fldenv [eax+0x69]
  414477:	inc    eax
  414478:	jo     0x4144e7
  41447a:	jnp    0x414483
  41447c:	dec    ebx
  41447d:	and    esp,ecx
  41447f:	add    esp,DWORD PTR [ebx+0x0]
  414482:	sub    edi,ebp
  414484:	pusha  
  414485:	sub    cl,BYTE PTR ds:[eax]
  414488:	arpl   WORD PTR [ebx+ebx*2+0x14],bp
  41448c:	dec    ebx
  41448d:	adc    eax,DWORD PTR [ecx]
  41448f:	add    al,0x63
  414491:	add    BYTE PTR [ecx-0x55c19f12],ch
  414497:	pop    es
  414498:	arpl   WORD PTR [esi+0x2b],di
  41449b:	jl     0x4144ba
  41449d:	repz shr BYTE PTR [ebx+0x6f],0xc4
  4144a2:	mov    ch,0x74
  4144a4:	fcmovnb st,st(2)
  4144a6:	lods   al,BYTE PTR ds:[esi]
  4144a7:	je     0x414438
  4144a9:	imul   esp,DWORD PTR [ebp+0x136cf4ee],0x14
	...
  4144df:	add    BYTE PTR [eax],al
  4144e1:	add    BYTE PTR [ebx],cl
  4144e3:	cmp    al,0x3a
  4144e5:	jne    0x4144d4
  4144e7:	add    BYTE PTR [ecx+0x2b7e29ef],ch
  4144ed:	jo     0x414539
  4144ef:	add    eax,0xd5d0be6c
  4144f4:	jne    0x4144e4
  4144f6:	enter  0xba5d,0xe7
  4144fa:	lds    ebp,FWORD PTR [ecx+esi*8+0x43]
  4144fe:	xor    BYTE PTR [ebx],ah
  414500:	rol    DWORD PTR [ebx],1
  414502:	push   ebx
  414503:	pop    esp
  414504:	xchg   esi,eax
  414505:	je     0x41453e
  414507:	std    
  414508:	inc    eax
  414509:	shl    DWORD PTR [ecx],cl
  41450b:	ins    BYTE PTR es:[edi],dx
  41450c:	inc    ebp
  41450d:	je     0x414526
  41450f:	stc    
  414510:	cmp    eax,0xff5d5cee
  414515:	lea    esp,[ebx+0x752efe6b]
  41451b:	js     0x41451b
  41451d:	pushf  
  41451e:	hlt    
  41451f:	push   0x74
  414521:	icebp  
  414522:	or     cl,bl
  414524:	inc    edx
  414525:	push   ss
  414526:	imul   DWORD PTR [edx+0x74]
  414529:	or     eax,0x645a1f8
  41452e:	xlat   BYTE PTR ds:[ebx]
  41452f:	cmp    eax,0xd260edc1
  414534:	mov    al,BYTE PTR ds:0x97d347e3
  41453a:	iret   
  41453b:	icebp  
  41453c:	or     edx,ecx
  41453e:	dec    eax
  41453f:	mov    edi,0xac34defe
  414544:	je     0x414532
	...
  414576:	add    BYTE PTR [eax],al
  414578:	adc    bh,BYTE PTR ds:0x7a60ddc1
  41457e:	inc    esp
  41457f:	mov    ecx,0xed746b37
  414584:	mov    eax,0x90b64c0d
  414589:	(bad)  
  41458a:	mov    edi,0xff4bdcde
  41458f:	call   0x9db5b1f4
  414594:	xchg   edi,eax
  414595:	add    DWORD PTR [ebp-0x6a],0x7d447d70
  41459c:	jo     0x41458f
  41459e:	sti    
  41459f:	xchg   dl,bl
  4145a1:	pop    edi
  4145a2:	(bad)  
  4145a3:	hlt    
  4145a4:	dec    eax
  4145a5:	fs stos BYTE PTR es:[edi],al
  4145a7:	das    
  4145a8:	push   eax
  4145a9:	imul   ecx,DWORD PTR [edx-0x5da2db0c],0xffffffe9
  4145b0:	pusha  
  4145b1:	add    eax,0xc4f8ec68
  4145b6:	(bad)  
  4145b7:	mov    esi,0xe9177408
  4145bc:	pusha  
  4145bd:	add    al,al
  4145bf:	add    bh,bl
  4145c1:	cld    
  4145c2:	call   0x48d05f
  4145c7:	mov    ecx,DWORD PTR [edx+0x49]
  4145ca:	or     ecx,DWORD PTR [eax-0x45]
  4145cd:	pop    es
  4145ce:	call   0x48c30c
  4145d3:	add    ebx,DWORD PTR [edx-0x16]
  4145d6:	jae    0x4145c0
  4145d8:	loop   0x4145ee
  4145da:	dec    eax
  4145db:	inc    ecx
	...
  41460c:	add    BYTE PTR [eax],al
  41460e:	jp     0x41465d
  414610:	out    0xd3,al
  414612:	inc    edx
  414613:	pop    es
  414614:	add    BYTE PTR [ebx],cl
  414616:	mov    ch,BYTE PTR [eax+eax*1-0x15]
  41461a:	int3   
  41461b:	call   0xe430ce2e
  414620:	xchg   DWORD PTR [ebp+0x2e],eax
  414623:	dec    edi
  414624:	sbb    eax,0x56018b48
  414629:	call   0x4144fe
  41462e:	inc    ecx
  41462f:	(bad)  
  414630:	jae    0x414634
  414632:	xor    DWORD PTR [esi-0x77],edx
  414635:	lock mov dl,0x16
  414638:	dec    eax
  414639:	inc    ecx
  41463a:	cli    
  41463b:	into   
  41463c:	cld    
  41463d:	push   ss
  41463e:	cli    
  41463f:	push   es
  414640:	add    esi,eax
  414642:	jae    0x4146b1
  414644:	fisubr DWORD PTR [eax-0x9]
  414647:	scas   al,BYTE PTR es:[edi]
  414648:	aas    
  414649:	add    BYTE PTR [ecx+ecx*8],ch
  41464c:	xchg   esi,eax
  41464d:	sbb    dl,bh
  41464f:	push   es
  414650:	or     eax,eax
  414652:	fild   WORD PTR [eax]
  414654:	jmp    0x414691
  414656:	push   eax
  414657:	push   ss
  414658:	mov    BYTE PTR [ebp-0x13],dl
  41465b:	jmp    0x3d831ea3
  414660:	loop   0x414628
  414662:	retf   0x8b06
  414665:	inc    ebp
  414666:	and    bh,BYTE PTR [esi+edi*8-0x82c9c01]
  41466d:	(bad)  [ecx+edx*2+0xfe5a]
	...
  4146a4:	push   ss
  4146a5:	je     0x414701
  4146a7:	xchg   edx,eax
  4146a8:	xchg   ebp,eax
  4146a9:	sub    esi,DWORD PTR [edx-0x77]
  4146ac:	ss mov edi,0xe47f447d
  4146b2:	adc    cl,BYTE PTR [edx+0x447e2b16]
  4146b8:	fwait
  4146b9:	hlt    
  4146ba:	adc    al,BYTE PTR [eax-0x7afea3d3]
  4146c0:	psubq  mm6,QWORD PTR [ecx-0x2]
  4146c4:	pop    esp
  4146c5:	jmp    0xa1442e28
  4146ca:	jno    0x4146ca
  4146cc:	ficomp WORD PTR [eax+0x233b4f72]
  4146d2:	mov    esi,0x3573cfe
  4146d7:	pop    esi
  4146d8:	sub    bl,BYTE PTR [esi-0x18690001]
  4146de:	pop    edi
  4146df:	(bad)  
  4146e0:	scas   al,BYTE PTR es:[edi]
  4146e1:	dec    eax
  4146e2:	pop    edx
  4146e3:	aam    0xaa
  4146e5:	inc    ebx
  4146e6:	jo     0x4146f2
  4146e8:	and    esi,DWORD PTR [eax]
  4146ea:	sbb    ebp,DWORD PTR [eax+0x13]
  4146ed:	sbb    eax,ebx
  4146ef:	call   DWORD PTR [esp+eax*2-0x5d03b723]
  4146f6:	shl    DWORD PTR [edi+0x65],cl
  4146f9:	scas   al,BYTE PTR es:[edi]
  4146fa:	ret    
  4146fb:	inc    DWORD PTR [esp+ebx*2+0x3a5ef02]
  414702:	add    ecx,DWORD PTR [eax+0x22]
  414705:	pop    esp
  414706:	sar    dh,cl
	...
  414738:	add    BYTE PTR [eax],al
  41473a:	dec    esi
  41473b:	je     0x414797
  41473d:	cmp    DWORD PTR [ebx],0x2ae770f3
  414743:	and    DWORD PTR [ecx-0x2],esi
  414746:	stos   BYTE PTR es:[edi],al
  414747:	add    al,0x2b
  414749:	cld    
  41474a:	mov    ah,0xd0
  41474c:	jno    0x4147ae
  41474e:	loope  0x414790
  414750:	push   esp
  414751:	fisub  WORD PTR [ebx+ebx*8-0x2e88f5e]
  414758:	push   eax
  414759:	in     eax,dx
  41475a:	and    ch,BYTE PTR [edx+0x3d]
  41475d:	jnp    0x414786
  41475f:	imul   eax,edx,0xe0ef840d
  414765:	pop    ebx
  414766:	(bad)  
  414767:	imul   esp,DWORD PTR ds:0x1e260a71,0x715d64f7
  414771:	jno    0x4147d8
  414773:	imul   eax,DWORD PTR [edx-0xf0ca3f1],0xfd68f35b
  41477d:	jo     0x414743
  41477f:	add    eax,0xde0660e9
  414784:	icebp  
  414785:	enter  0x5a3,0x51
  414789:	je     0x414728
  41478b:	(bad)  
  41478c:	call   0xc13eff01
  414791:	es mov ecx,0x9770cd68
  414797:	imul   eax,ebp,0x3e5d5cf6
  41479d:	mov    BYTE PTR [eax],0x0
	...
  4147d0:	or     eax,0x60459f69
  4147d5:	add    eax,0x87087d14
  4147da:	lods   al,BYTE PTR ds:[esi]
  4147db:	dec    ebx
  4147dc:	in     eax,dx
  4147dd:	push   0x69a77e9d
  4147e2:	cmp    BYTE PTR [ecx+0x6f],dh
  4147e5:	stc    
  4147e6:	(bad)  
  4147e7:	mul    BYTE PTR [ebp+ebx*2+0x2c]
  4147eb:	sbb    DWORD PTR [ebx+0x5],esp
  4147ee:	repnz inc ebx
  4147f0:	pop    ebp
  4147f1:	cmp    bh,0xa8
  4147f4:	popa   
  4147f5:	add    eax,0x70a5a600
  4147fa:	(bad)  
  4147fb:	call   0xa5084d60
  414800:	xor    al,0x67
  414802:	push   es
  414803:	jmp    0xc3412368
  414808:	pusha  
  414809:	(bad)  
  41480b:	shl    BYTE PTR [eax+0x7a],cl
  41480e:	inc    esp
  41480f:	xor    eax,0x3d8479b0
  414814:	or     esp,DWORD PTR [edi-0x2]
  414817:	cdq    
  414818:	repz lock mul DWORD PTR [esi]
  41481c:	ins    DWORD PTR es:[edi],dx
  41481d:	ins    BYTE PTR es:[edi],dx
  41481e:	out    0xf7,eax
  414820:	dec    ebx
  414821:	add    eax,0xf420e200
  414826:	add    al,0x0
  414828:	out    0x4,eax
  41482a:	add    cl,ch
  41482c:	cmp    BYTE PTR [edi],bh
  41482e:	daa    
  41482f:	test   al,0x60
  414831:	push   0xe574
	...
  414866:	test   al,0x2d
  414868:	dec    eax
  414869:	out    dx,al
  41486a:	int3   
  41486b:	mov    eax,0x80e2b98a
  414870:	repz (bad) 
  414872:	mov    esp,0x873b4f67
  414877:	sbb    eax,0x7d8cce48
  41487c:	test   BYTE PTR [ecx-0x2e019874],ah
  414882:	cld    
  414883:	ret    
  414884:	(bad)  
  414885:	mov    dh,0x29
  414887:	push   0xc4bf2266
  41488c:	jmp    DWORD PTR [ebp-0x6109b046]
  414892:	jl     0x4148fb
  414894:	je     0x414877
  414896:	mov    BYTE PTR [esi+0x7d4c8e46],al
  41489c:	test   BYTE PTR [eax],al
  41489e:	pop    edx
  41489f:	lock std 
  4148a1:	push   DWORD PTR [eax+0x1]
  4148a4:	push   0xfe428254
  4148a9:	(bad)  
  4148aa:	ja     0x414865
  4148ac:	cmc    
  4148ad:	(bad)  
  4148ae:	cmp    eax,0x120873d8
  4148b3:	pusha  
  4148b4:	inc    ebp
  4148b5:	dec    DWORD PTR ds:0x35ec83ea
  4148bb:	fdivr  st,st(5)
  4148bd:	push   0xffffff8a
  4148bf:	dec    ebx
  4148c0:	pop    ebx
  4148c1:	dec    eax
  4148c2:	mov    ebx,0x72b5ff03
  4148c7:	lock std 
  4148c9:	inc    DWORD PTR [eax]
	...
  4148fb:	add    BYTE PTR [ebp+0x6e],cl
  4148fe:	push   es
  4148ff:	call   0x3e87b2
  414904:	repz jge 0x4148ed
  414907:	test   DWORD PTR [ebp-0x28],0xee8e858b
  41490e:	std    
  41490f:	(bad)  
  414910:	cli    
  414911:	dec    edx
  414912:	fs dec eax
  414914:	sti    
  414915:	add    bh,bh
  414917:	mov    ch,0x72
  414919:	out    dx,al
  41491a:	std    
  41491b:	dec    DWORD PTR [ebp+0x6e]
  41491e:	push   es
  41491f:	call   0x3e8772
  414924:	mov    bl,0x7d
  414926:	loop   0x41491f
  414928:	or     eax,0xa20068d8
  41492d:	jo     0x414975
  41492f:	inc    ecx
  414930:	or     bl,al
  414932:	mov    bl,0xd8
  414934:	aad    0xd7
  414936:	std    
  414937:	inc    DWORD PTR [edi+0x69]
  41493a:	out    0x11,al
  41493c:	inc    ebp
  41493d:	(bad)  
  41493e:	std    
  41493f:	mov    DWORD PTR [edi-0x32000a1e],eax
  414945:	cmp    DWORD PTR [ebx+0x6d8763f0],0xfffffffe
  41494c:	arpl   WORD PTR [eax],dx
  41494e:	fild   DWORD PTR [edx-0x18a6eea]
  414954:	int3   
  414955:	pop    esp
  414956:	mul    BYTE PTR [ecx-0x20]
  414959:	xor    DWORD PTR [ebx-0xa],ebx
  41495c:	mov    esp,0x7402d7
	...
  414991:	add    BYTE PTR [edx],bl
  414993:	push   esp
  414994:	add    al,BYTE PTR [eax]
  414996:	mov    esp,0x53746d86
  41499b:	(bad)  
  41499c:	(bad)  
  41499d:	aas    
  41499e:	pushf  
  41499f:	mov    bh,0x6d
  4149a1:	mov    ah,0x93
  4149a3:	daa    
  4149a4:	outs   dx,BYTE PTR ds:[esi]
  4149a5:	dec    BYTE PTR [ecx+esi*4-0x634417ee]
  4149ac:	ins    DWORD PTR es:[edi],dx
  4149ad:	(bad)  
  4149ae:	jl     0x4149a1
  4149b0:	pop    esi
  4149b1:	div    BYTE PTR [edi+ebx*1+0x6e]
  4149b5:	je     0x414a0a
  4149b7:	adc    al,0x89
  4149b9:	aas    
  4149ba:	movd   mm6,DWORD PTR fs:[ebx+ecx*2+0x54fe6e0f]
  4149c3:	jmp    0x9c2131da
  4149c8:	ins    DWORD PTR es:[edi],dx
  4149c9:	inc    BYTE PTR [ecx+ebp*1+0x4f]
  4149cd:	idiv   BYTE PTR [edi+edx*2]
  4149d0:	ins    BYTE PTR es:[edi],dx
  4149d1:	mov    ah,0x3f
  4149d3:	inc    edi
  4149d4:	ins    BYTE PTR es:[edi],dx
  4149d5:	(bad)  
  4149d6:	sub    al,0xd1
  4149d8:	adc    ebp,eax
  4149da:	xchg   edi,eax
  4149db:	sbb    al,0x6d
  4149dd:	(bad)  
  4149de:	sbb    al,0x91
  4149e0:	arpl   si,si
  4149e2:	adc    al,0x3f
  4149e4:	ins    BYTE PTR es:[edi],dx
  4149e5:	je     0x414a5a
  4149e7:	push   esp
  4149e8:	fnstcw WORD PTR [edi]
  4149ea:	add    al,0xaf
  4149ec:	ins    BYTE PTR es:[edi],dx
  4149ed:	je     0x414a42
  4149ef:	xchg   edi,eax
  4149f0:	mov    dh,0xd7
  4149f2:	in     al,dx
  4149f3:	add    al,0xa6
  4149f5:	ins    DWORD PTR es:[edi],dx
	...
  414a26:	add    BYTE PTR [eax],al
  414a28:	in     eax,dx
  414a29:	out    dx,eax
  414a2a:	lock pop ebx
  414a2c:	jb     0x414a95
  414a2e:	xchg   ebp,eax
  414a2f:	ins    DWORD PTR es:[edi],dx
  414a30:	(bad)  [edi+0x65d575b0]
  414a36:	nop
  414a37:	loope  0x414a5a
  414a39:	data16 jge 0x414aa9
  414a3c:	pcmpeqw mm7,QWORD PTR [ebp+0x6d]
  414a40:	mov    ebp,0xb5c1105c
  414a45:	gs gs mov bh,0xb8
  414a49:	ins    DWORD PTR es:[edi],dx
  414a4a:	pop    ebp
  414a4b:	ins    DWORD PTR es:[edi],dx
  414a4c:	mov    esp,0x9d6ca9b7
  414a51:	gs xchg ebx,eax
  414a53:	pop    esp
  414a54:	lea    esp,[ebp+0x45]
  414a57:	pop    esp
  414a58:	and    al,dl
  414a5a:	cmp    eax,0x4caf856d
  414a5f:	jne    0x414ade
  414a61:	gs inc eax
  414a63:	xor    eax,0x6d256620
  414a68:	mov    bh,0x64
  414a6a:	adc    eax,0xc45c656d
  414a6f:	rcr    BYTE PTR [ebp+0x65],0xd
  414a73:	(bad)  
  414a74:	dec    esp
  414a75:	outs   dx,DWORD PTR ds:[esi]
  414a76:	mov    ch,0x6d
  414a78:	dec    ebp
  414a79:	gs std 
  414a7b:	test   BYTE PTR [eax+0x6e],0x7e
  414a7f:	push   ss
  414a80:	arpl   WORD PTR ds:0x5684220,ax
  414a86:	cmp    al,0x79
  414a88:	cmp    BYTE PTR [ecx+0x6fa4],cl
	...
  414abe:	mov    edx,0x1db94305
  414ac3:	fneni(8087 only) 
  414ac5:	pop    ebx
  414ac6:	push   esi
  414ac7:	vpunpcklqdq ymm3,ymm7,ymm3
  414acb:	retf   0x6cbc
  414ace:	(bad)  
  414acf:	or     eax,0xcd464100
  414ad4:	inc    eax
  414ad5:	jmp    0xd0976461
  414ada:	and    DWORD PTR [ebp-0x1a],esp
  414add:	xchg   ebp,eax
  414ade:	jne    0x414b43
  414ae0:	(bad)  
  414ae1:	xchg   esi,eax
  414ae2:	aad    0xc
  414ae4:	push   0xffc618c6
  414ae9:	adc    BYTE PTR [ecx+0x5],ah
  414aec:	add    BYTE PTR [ecx+0x28],ch
  414aef:	data16 cld 
  414af1:	jbe    0x414b42
  414af3:	arpl   WORD PTR [ebp+ebp*2+0x47],si
  414af7:	fld    DWORD PTR [edi]
  414af9:	push   ecx
  414afa:	xchg   ecx,eax
  414afb:	and    al,0xff
  414afd:	pop    esi
  414afe:	imul   eax,DWORD PTR [esi+0x3],0xeb8fb5e9
  414b05:	push   0x1c
  414b07:	pusha  
  414b08:	imul   ebp,ecx,0xb4fed0aa
  414b0e:	mov    BYTE PTR [esp+esi*8-0xa],ch
  414b12:	packsswb mm1,QWORD PTR [eax-0x13fb5c]
  414b19:	call   0x9fa8ed2d
  414b1e:	test   al,0xc5
  414b20:	inc    DWORD PTR [eax+0x0]
	...
  414b52:	add    BYTE PTR [eax],al
  414b54:	fxch   st(4)
  414b56:	inc    eax
  414b57:	jmp    0x11492523
  414b5c:	std    
  414b5d:	jmp    0xf6fb:0xd9b8fefe
  414b64:	ss or  al,0xe8
  414b67:	xlat   BYTE PTR ds:[ebx]
  414b68:	and    BYTE PTR [ebx-0x2],ah
  414b6b:	mov    al,0xa5
  414b6d:	or     BYTE PTR [eax],al
  414b6f:	xor    al,0xa4
  414b71:	jo     0x414af3
  414b73:	lods   eax,DWORD PTR ds:[esi]
  414b74:	mov    bh,0x5b
  414b76:	dec    dh
  414b78:	call   0x73f0:0x6a00fbc9
  414b7f:	or     al,0xc5
  414b81:	push   ebp
  414b82:	push   es
  414b83:	call   0x41405e
  414b88:	add    eax,ecx
  414b8a:	or     eax,0x9ef85
  414b8f:	add    BYTE PTR [ebp-0x35ff09bb],bh
  414b95:	pop    es
  414b96:	add    bh,al
  414b98:	jg     0x414b6f
  414b9a:	std    
  414b9b:	pop    es
  414b9c:	mov    edx,0x70006a07
  414ba1:	or     DWORD PTR [edx+0x0],ebp
  414ba4:	pusha  
  414ba5:	or     DWORD PTR [ebp-0x74c6d1bb],ecx
  414bab:	test   DWORD PTR [esi],ecx
  414bad:	fdivr  st,st(5)
  414baf:	(bad)  
  414bb0:	jmp    0xfa56:0x35f873ee
  414bb7:	call   0x414bbc
	...
  414be8:	add    BYTE PTR [eax],al
  414bea:	adc    al,0xf5
  414bec:	(bad)  
  414bed:	call   DWORD PTR [ecx+0x330572c7]
  414bf3:	sar    edi,1
  414bf5:	dec    DWORD PTR [edx-0x34d73ac1]
  414bfb:	pop    es
  414bfc:	push   DWORD PTR [ebp+0x76]
  414bff:	mov    edi,0xf04545cf
  414c04:	dec    esi
  414c05:	mov    ebx,DWORD PTR [edx+0x6df483dc]
  414c0b:	out    dx,al
  414c0c:	std    
  414c0d:	push   eax
  414c0e:	call   0x45870bd1
  414c13:	lock xchg DWORD PTR [ebp-0x229ae],eax
  414c1a:	(bad)  
  414c1b:	test   BYTE PTR [ecx-0x1],0x45
  414c1f:	inc    ecx
  414c20:	(bad)  
  414c21:	addr16 retf 0x3f9e
  414c25:	add    BYTE PTR [ebx+0x3b],ah
  414c28:	scas   eax,DWORD PTR es:[edi]
  414c29:	xlat   BYTE PTR ds:[ebx]
  414c2a:	or     al,0x54
  414c2c:	imul   edi,esi,0x195a5496
  414c32:	sahf   
  414c33:	mov    ds:0x9ce68869,eax
  414c38:	jno    0x414c38
  414c3a:	hlt    
  414c3b:	mov    BYTE PTR [ebx],0x68
  414c3e:	and    al,0x15
  414c40:	(bad)  
  414c43:	mov    ecx,0x7bdcf64a
  414c48:	imul   esi,DWORD PTR [ebx+ebp*2-0x7c],0x4369
	...
  414c80:	int3   
  414c81:	mov    edi,DWORD PTR [ebx-0x7c]
  414c84:	mov    bh,0xdb
  414c86:	imul   edi,esi,0xdbda6c49
  414c8c:	sub    ebp,DWORD PTR ds:0xc4f6ff04
  414c92:	jno    0x414c92
  414c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c95:	ret    
  414c96:	out    dx,eax
  414c97:	pop    es
  414c98:	mov    edx,eax
  414c9a:	mov    esi,0x7fe594fe
  414c9f:	out    0x94,eax
  414ca1:	retf   
  414ca2:	imul   ecx,DWORD PTR [esi+ebx*8+0x7cfe7200],0x2bf4da7c
  414cad:	lods   eax,DWORD PTR ds:[esi]
  414cae:	add    bh,bh
  414cb0:	mov    dh,0xc4
  414cb2:	jno    0x414cb2
  414cb4:	fs add esi,eax
  414cb7:	pop    es
  414cb8:	dec    ebx
  414cb9:	xor    BYTE PTR [edi+0x7fe554fe],bh
  414cbf:	jecxz  0x414d15
  414cc1:	or     ebp,DWORD PTR [edx+0x69]
  414cc4:	arpl   WORD PTR [esp+edi*8+0x48],si
  414cc8:	mov    ds:0x1bb4696c,al
  414ccd:	pop    ebx
  414cce:	push   0x5c052cfe
  414cd3:	cld    
  414cd4:	cmp    al,0xac
  414cd6:	and    al,0x69
  414cd8:	sbb    eax,0xd646b8c
  414cdd:	(bad)  
  414cde:	int    0x77
  414ce0:	out    0x34,eax
  414ce2:	mov    ebp,0x69
	...
  414d13:	add    BYTE PTR [eax],al
  414d15:	add    BYTE PTR ds:0xaa2650b5,al
  414d1b:	(bad)  
  414d1c:	call   0xb57dfc89
  414d21:	imul   ebp,ebp,0xfcfc1b61
  414d27:	mov    esp,DWORD PTR [ecx+ebp*2]
  414d2a:	fisttp QWORD PTR [ebx+0x61cd506b]
  414d30:	lea    eax,[ebp+0x697d550f]
  414d36:	lds    eax,FWORD PTR [esi*8-0x7b601e24]
  414d3d:	jno    0x414cf4
  414d3f:	popa   
  414d40:	call   0xa3c79034
  414d45:	pop    esp
  414d46:	lods   eax,DWORD PTR ds:[esi]
  414d47:	popa   
  414d48:	pop    ebp
  414d49:	add    al,0x17
  414d4b:	mov    esp,0x726303c0
  414d50:	mov    gs,WORD PTR [ecx+0x17]
  414d53:	cmc    
  414d54:	push   eax
  414d55:	cmp    BYTE PTR [edi+0x62],al
  414d58:	cmp    eax,0x3d54b769
  414d5d:	imul   esi,DWORD PTR [ebp+0x61],0x247b13b3
  414d64:	out    0x68,eax
  414d66:	gs popa 
  414d68:	push   ebx
  414d69:	pop    eax
  414d6a:	push   ebp
  414d6b:	popa   
  414d6c:	adc    eax,0xf5cf69
  414d71:	push   ss
  414d72:	lea    esp,[eax+0x5]
  414d75:	imul   ecx,DWORD PTR [edi],0x68f56e
	...
  414dab:	add    BYTE PTR ds:0x507bff61,bh
  414db1:	ins    DWORD PTR es:[edi],dx
  414db2:	add    ebp,DWORD PTR [edi-0x6301a045]
  414db8:	pushf  
  414db9:	push   edi
  414dba:	(bad)  
  414dbb:	fimul  WORD PTR [ebx-0x74211c67]
  414dc1:	pop    edi
  414dc2:	(bad)  
  414dc3:	push   esp
  414dc4:	ja     0x414e33
  414dc6:	ret    
  414dc7:	add    al,0x7a
  414dc9:	pop    edi
  414dca:	(bad)  
  414dcb:	je     0x414d4d
  414dcd:	push   edi
  414dce:	(bad)  
  414dcf:	mov    dh,0x8b
  414dd1:	(bad)  [edi]
  414dd3:	rol    DWORD PTR [esi-0x205900df],0xa1
  414dda:	iret   
  414ddb:	xchg   esi,eax
  414ddc:	dec    ebx
  414ddd:	pop    edi
  414dde:	call   FWORD PTR [eax+eax*4]
  414de1:	in     eax,dx
  414de2:	add    cl,ch
  414de4:	sub    esp,DWORD PTR [edx+0x6d70fcfe]
  414dea:	imul   edi,DWORD PTR [ebx+ecx*2+0x103cfe5f],0x3b6efe57
  414df5:	cdq    
  414df6:	rcr    DWORD PTR [esi+0x3b],cl
  414df9:	pop    edi
  414dfa:	(bad)  
  414dfb:	aam    0x70
  414dfd:	ins    DWORD PTR es:[edi],dx
  414dfe:	mov    edx,DWORD PTR [edx+ecx*1]
  414e01:	pop    edi
  414e02:	(bad)  
  414e03:	aam    0x70
  414e05:	pusha  
  414e06:	mov    ah,0x21
  414e08:	adc    ebx,DWORD PTR [edi-0x2]
  414e0b:	lea    ecx,ds:[eax]
  414e0e:	call   0x414e14
	...
  414e3f:	add    BYTE PTR [eax],al
  414e41:	add    BYTE PTR [ecx],cl
  414e43:	pop    edi
  414e44:	(bad)  
  414e45:	cs mov ebp,0xfb26f638
  414e4b:	addr16 mov al,0xa9
  414e4e:	retf   
  414e4f:	pop    edi
  414e50:	(bad)  
  414e51:	pop    esp
  414e52:	rcl    BYTE PTR [edi-0x2],1
  414e55:	push   cs
  414e56:	test   al,0xaa
  414e58:	aas    
  414e59:	add    BYTE PTR [ebp-0x13],bl
  414e5c:	std    
  414e5d:	mov    ch,0x6e
  414e5f:	aad    0xfd
  414e61:	jmp    DWORD PTR [edx-0x6f]
  414e64:	ds (bad) 
  414e66:	cmp    eax,0x5e8b3e8
  414e6b:	call   0x49dc376d
  414e70:	std    
  414e71:	jmp    FWORD PTR ds:0x1df7e296
  414e77:	call   0xe87bd462
  414e7c:	std    
  414e7d:	push   DWORD PTR [edi-0x17]
  414e80:	cmc    
  414e81:	jmp    FWORD PTR [ebp-0x42bf8740]
  414e87:	out    0xfd,eax
  414e89:	mov    ch,0xa6
  414e8b:	out    dx,eax
  414e8c:	std    
  414e8d:	push   edx
  414e8f:	aaa    
  414e90:	ds (bad) 
  414e92:	in     eax,dx
  414e93:	out    0x43,eax
  414e95:	clc    
  414e96:	jecxz  0x414e82
  414e98:	sti    
  414e99:	(bad)  
  414e9a:	fucom  st(7)
  414e9c:	jae    0x414e9a
  414e9e:	shl    BYTE PTR [ecx+0x20ca0010],cl
  414ea4:	ror    DWORD PTR [eax+eax*1],0x0
	...
  414ed8:	mov    edx,0x39ec8934
  414edd:	(bad)  
  414ee0:	mov    bh,BYTE PTR ds:0x5bb7ff4b
  414ee6:	out    0x81,al
  414ee8:	pop    edi
  414ee9:	call   0xe7f8d8eb
  414eee:	std    
  414eef:	jne    0x414f63
  414ef1:	cmp    edx,DWORD PTR [edx-0xfc34b8]
  414ef7:	xor    eax,0x4100d4
  414efc:	push   edx
  414efd:	mov    bl,bh
  414eff:	(bad)  
  414f00:	jge    0x414ee8
  414f02:	jae    0x414f0c
  414f04:	arpl   WORD PTR [esi+ecx*4-0x25935db9],ax
  414f0b:	add    DWORD PTR [ebx+0x6c],esp
  414f0e:	and    bh,0xee
  414f11:	popa   
  414f12:	gs (bad) 
  414f14:	xor    al,0xe2
  414f16:	data16 (bad) 
  414f18:	mov    dh,0x64
  414f1a:	pop    edx
  414f1b:	xchg   ebx,eax
  414f1c:	addr16 gs enterw 0x6921,0x2
  414f23:	push   ebp
  414f24:	call   0x1004d071
  414f29:	pop    ss
  414f2a:	iret   
  414f2b:	imul   esp,DWORD PTR [ebx-0x4e],0x5476feb5
  414f32:	pop    edx
  414f33:	xor    eax,0x88659736
  414f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f39:	mov    al,0x79
  414f3b:	xor    al,0x0
	...
  414f6d:	add    BYTE PTR [esp+esi*1-0x3d],dh
  414f71:	(bad)  
  414f72:	jmp    0x226940b8
  414f77:	ins    BYTE PTR es:[edi],dx
  414f78:	cmp    BYTE PTR [esi],0x63
  414f7b:	clc    
  414f7c:	shl    BYTE PTR [edi+0x74],0x15
  414f80:	vunpckhps ymm6,ymm0,YMMWORD PTR [ecx+ebp*8+0x11]
  414f86:	arpl   WORD PTR [ecx+edi*8-0x41],bp
  414f8a:	aaa    
  414f8b:	dec    edi
  414f8c:	int3   
  414f8d:	out    0xc5,eax
  414f8f:	xchg   ebp,eax
  414f90:	gs (bad) 
  414f92:	xor    esi,DWORD PTR [edx+eax*1]
  414f95:	add    BYTE PTR [esi+esi*2-0x52e5c826],al
  414f9c:	add    dl,BYTE PTR [eax-0x7c]
  414f9f:	mov    eax,ds:0x48d3e7fa
  414fa4:	dec    BYTE PTR gs:[ebx+0x6cff25d8]
  414fab:	ret    
  414fac:	add    eax,DWORD PTR [esi-0x1d]
  414faf:	add    eax,0x5bd603e7
  414fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb5:	addr16 xchg ecx,eax
  414fb7:	inc    ebp
  414fb8:	dec    edi
  414fb9:	dec    bp
  414fbb:	pop    esi
  414fbc:	or     eax,0xee1cf671
  414fc1:	lock stc 
  414fc3:	pop    ebp
  414fc4:	jae    0x41502d
  414fc6:	xor    eax,0x545be0d8
  414fcb:	and    dh,ch
  414fcd:	test   DWORD PTR gs:[edi+0x42af],edi
	...
  415004:	pusha  
  415005:	add    eax,0x82087934
  41500a:	lods   al,BYTE PTR ds:[esi]
  41500b:	push   0xb543057a
  415010:	add    eax,0xba5bf0d8
  415015:	and    BYTE PTR [esi-0x4b38149b],bh
  41501b:	(bad)  
  41501d:	in     eax,0x43
  41501f:	mov    ebx,0xbf1105a3
  415024:	sub    eax,esp
  415026:	call   0xbff8df8f
  41502b:	ret    0x65cc
  41502e:	push   0xf15dc5c2
  415033:	inc    ebx
  415034:	xor    ah,bh
  415036:	sbb    ah,bl
  415038:	mov    ah,0x5d
  41503a:	test   DWORD PTR [esi-0x3ce028bc],esp
  415040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415041:	int    0x65
  415043:	out    dx,eax
  415044:	fs ins DWORD PTR es:[edi],dx
  415046:	std    
  415047:	fist   WORD PTR [ebp+0x4db9405d]
  41504d:	pop    esi
  41504e:	dec    ebp
  41504f:	fadd   QWORD PTR [ebp+ebx*2-0x28fb59ab]
  415056:	scas   eax,DWORD PTR es:[edi]
  415057:	ret    0xe574
  41505a:	inc    ebx
  41505c:	test   eax,0x742dffc4
  415061:	add    eax,0x5c3cb7e8
  415066:	(bad)  
  415067:	push   ds
	...
  415098:	add    BYTE PTR [eax],al
  41509a:	inc    esp
  41509b:	popa   
  41509c:	(bad)  
  41509d:	pushf  
  41509e:	dec    eax
  41509f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4150a1:	int    0xbf
  4150a3:	pop    ebx
  4150a4:	enter  0x632b,0x5
  4150a8:	push   ebp
  4150a9:	jb     0x415046
  4150ab:	xchg   ebx,eax
  4150ad:	cmc    
  4150ae:	push   ds
  4150af:	mov    ah,0x69
  4150b1:	jmp    0x5d401dc0
  4150b6:	pop    ds
  4150b7:	gs dec eax
  4150b9:	sbb    eax,0x2c885b7e
  4150be:	jnp    0x41504f
  4150c0:	xor    al,0x3e
  4150c2:	addr16 (bad) 
  4150c4:	push   DWORD PTR [ecx+0x45]
  4150c7:	fsub   DWORD PTR [edi]
  4150c9:	sub    BYTE PTR [edi-0x7b],bl
  4150cc:	ds jmp 0x64a912ce
  4150d2:	test   eax,0x3f3dffc5
  4150d7:	mov    dl,BYTE PTR [eax]
  4150d9:	jmp    0x1e01613e
  4150de:	data16 mov bl,0xe7
  4150e1:	pop    eax
  4150e2:	or     BYTE PTR [esi+edi*8+0x19],bl
  4150e6:	lahf   
  4150e7:	pop    esp
  4150e8:	dec    BYTE PTR [esi+0x208ee4fe]
  4150ee:	mov    al,ds:0xb56e4e5c
  4150f3:	add    al,0xe8
  4150f5:	mov    al,BYTE PTR [ebx+0x4f51fe5b]
  4150fb:	sbb    bh,bh
  4150fd:	push   esi
	...
  41512e:	add    BYTE PTR [eax],al
  415130:	sub    eax,DWORD PTR ds:0x53e6946
  415136:	jne    0x415138
  415138:	and    BYTE PTR [edx-0x50b5cc06],bl
  41513e:	std    
  41513f:	push   DWORD PTR ds:0x72aef0e1
  415145:	pop    ecx
  415146:	jae    0x415103
  415148:	test   DWORD PTR [ebx-0x6],ebp
  41514b:	(bad)  
  41514c:	out    dx,eax
  41514d:	pop    edi
  41514e:	out    0x2b,al
  415150:	ss loope 0x415150
  415153:	pop    edi
  415154:	hlt    
  415155:	push   ds
  415156:	rol    DWORD PTR [edx+ecx*2],0x4b
  41515a:	mov    esp,ebp
  41515c:	leave  
  41515d:	sbb    al,0xfb
  41515f:	push   esi
  415160:	int    0x3d
  415162:	(bad)  
  415163:	imul   ecx,ebx,0x320873e0
  415169:	int3   
  41516a:	cmp    edi,edi
  41516c:	xor    eax,0x81fc438a
  415171:	(bad)  
  415172:	outs   dx,BYTE PTR ds:[esi]
  415173:	sub    BYTE PTR [ebx],bh
  415175:	add    DWORD PTR [ebx+0x4129393d],ecx
  41517b:	add    BYTE PTR [edx+0x3f740028],cl
  415181:	imul   ebx,DWORD PTR [ecx+0x57013b49],0xfe50dae8
  41518b:	call   ecx
  41518d:	(bad)  
  41518e:	jb     0x4151af
  415190:	mov    ecx,gs
  415192:	xor    DWORD PTR [eax+0x0],ecx
	...
  4151c5:	add    ch,dl
  4151c7:	out    0x4e,eax
  4151c9:	push   0xbeef07ca
  4151ce:	push   edx
  4151cf:	xchg   esi,eax
  4151d0:	inc    edi
  4151d1:	inc    ecx
  4151d2:	mov    edx,0xc275fd97
  4151d7:	out    dx,eax
  4151d8:	and    esp,DWORD PTR [ebx+0x5]
  4151db:	call   0xe8b5a3c6
  4151e0:	std    
  4151e1:	jmp    0x415246
  4151e3:	ins    DWORD PTR es:[edi],dx
  4151e4:	enter  0x457f,0x6e
  4151e8:	xlat   BYTE PTR ds:[ebx]
  4151e9:	stc    
  4151ea:	and    eax,0xbac016c2
  4151ef:	sbb    ah,BYTE PTR [ebx-0x2]
  4151f2:	ins    BYTE PTR es:[edi],dx
  4151f3:	pop    ds
  4151f4:	mov    dl,0x37
  4151f6:	pop    esp
  4151f7:	xchg   ecx,eax
  4151f8:	popf   
  4151f9:	(bad)  
  4151fa:	(bad)  
  4151fb:	and    BYTE PTR [ebx+0x74],ah
  4151fe:	imul   esi,esp,0xffffffb0
  415201:	cmp    cl,BYTE PTR [esp+esi*8-0x3e]
  415205:	pop    ebp
  415206:	sbb    ch,BYTE PTR [edi]
  415208:	or     BYTE PTR [eax],al
  41520a:	xchg   esi,eax
  41520b:	xlat   BYTE PTR ds:[ebx]
  41520c:	outs   dx,DWORD PTR ds:[esi]
  41520d:	sbb    BYTE PTR [edi],0x59
  415210:	in     al,dx
  415211:	(bad)  
  415212:	mov    edx,0x5b74617e
  415217:	add    al,0xd3
  415219:	cmp    bl,BYTE PTR [esp+eiz*2]
  41521c:	mov    eax,DWORD PTR [edi+edx*1-0x4b]
  415220:	fwait
  415221:	dec    eax
  415222:	mov    ds:0x5b74616c,al
  415227:	inc    esp
  415228:	rcr    bh,1
	...
  41525a:	add    BYTE PTR [eax],al
  41525c:	cld    
  41525d:	inc    ebx
  41525e:	popa   
  41525f:	je     0x415258
  415261:	fwait
  415262:	xlat   BYTE PTR ds:[ebx]
  415263:	pop    es
  415264:	sti    
  415265:	push   ss
  415266:	pop    ds
  415267:	jmp    esp
  415269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41526a:	inc    esp
  41526b:	add    esp,DWORD PTR [ebx+0x19]
  41526e:	(bad)  
  41526f:	jmp    0x415251
  415271:	mov    al,ds:0xa53b565e
  415276:	cmp    al,0x3f
  415278:	arpl   WORD PTR [esp+edx*8+0x0],si
  41527c:	mov    al,ds:0xb7444983
  415281:	ins    BYTE PTR es:[edi],dx
  415282:	add    al,BYTE PTR [eax]
  415284:	arpl   WORD PTR [ebx],dx
  415286:	xor    ecx,DWORD PTR [eax+0x22]
  415289:	ins    BYTE PTR es:[edi],dx
  41528a:	popa   
  41528b:	je     0x4152f8
  41528d:	add    eax,0xce3f0876
  415292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415293:	add    eax,DWORD PTR [edi]
  415295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415296:	sbb    BYTE PTR [ebx+eiz*2],al
  415299:	add    eax,0x562db69
  41529e:	mov    ebp,0xf0d0740b
  4152a3:	imul   edi,DWORD PTR [ecx],0x10
  4152a6:	bound  edi,QWORD PTR ss:[ebx-0x63]
  4152aa:	call   0xc4aeb5b2
  4152af:	retf   0x5a55
  4152b2:	sbb    eax,0x66d64d8
  4152b7:	sbb    al,0x44
  4152b9:	pop    edx
  4152ba:	dec    ecx
  4152bb:	and    ebp,DWORD PTR [eax+0xe7e8c4]
	...
  4152f1:	add    BYTE PTR ds:0x6303e910,dh
  4152f7:	add    eax,0x5ac04762
  4152fc:	mov    bl,0x3
  4152fe:	arpl   WORD PTR ds:0xeda4b6e9,ax
  415304:	cmp    DWORD PTR ds:0xc241054c,0x29
  41530b:	(bad)
  41530e:	or     BYTE PTR [ebx+ecx*1-0x16fa9cfc],0x60
  415316:	ja     0x415325
  415318:	mov    dh,0xf9
  41531a:	jecxz  0x415335
  41531c:	add    al,ah
  41531e:	pushf  
  41531f:	add    eax,0x5ce0011d
  415324:	clc    
  415325:	xlat   BYTE PTR ds:[ebx]
  415326:	pop    ebx
  415327:	inc    edx
  415328:	sub    esp,DWORD PTR [eax+0x63]
  41532b:	add    eax,0xf3c803e9
  415330:	test   DWORD PTR [edi],edx
  415332:	or     esi,0x27
  415335:	add    al,0xac
  415337:	str    ebp
  41533a:	xchg   edi,eax
  41533b:	(bad)  
  41533c:	inc    DWORD PTR [eax+0x66ff12de]
  415342:	fiadd  WORD PTR [ebp+0x17]
  415345:	push   edx
  415346:	call   0xbb0:0xd6458ab0
  41534d:	bound  esp,QWORD PTR [ecx+ecx*1-0x75974401]
  415354:	jg     0x4152d7
	...
  415386:	add    BYTE PTR [eax],al
  415388:	addr16 add eax,0xd8d3600
  41538e:	(bad)
  415392:	(bad)  
  415393:	jmp    0x6e512a5b
  415398:	out    0x94,eax
  41539a:	(bad)  
  41539b:	call   0xc57dd800
  4153a0:	das    
  4153a1:	(bad)  
  4153a2:	(bad)  
  4153a3:	call   0xb54049b4
  4153a8:	or     ah,0x40
  4153ab:	jmp    0xa2656573
  4153b0:	and    DWORD PTR [ecx-0x1a],ebx
  4153b3:	add    DWORD PTR [edx+0x58],edi
  4153b6:	(bad)  
  4153b7:	mov    eax,ds:0xe9000560
  4153bc:	lds    eax,FWORD PTR [esi+0x23]
  4153bf:	jmp    0xe945dbc8
  4153c4:	pusha  
  4153c5:	add    eax,0x49b6a00
  4153ca:	xor    esi,0x60
  4153cd:	or     BYTE PTR [ebp-0x1a8bc12],al
  4153d3:	jb     0x415372
  4153d5:	pop    esp
  4153d6:	pop    esi
  4153d7:	mov    al,0x26
  4153d9:	add    al,0x0
  4153db:	aas    
  4153dc:	mov    bh,0x4b
  4153de:	fisubr DWORD PTR [ecx]
  4153e0:	addr16 pop ebp
  4153e2:	jno    0x4153e4
  4153e4:	retf   
  4153e5:	sar    ebp,0x8b
  4153e8:	repz sub esi,esi
  4153eb:	mov    eax,DWORD PTR [eax]
	...
  41541d:	add    BYTE PTR [ebx],al
  41541f:	ins    DWORD PTR es:[edi],dx
  415420:	jle    0x4153ca
  415422:	mov    eax,0x9cc98b03
  415427:	mov    edi,eax
  415429:	jmp    0x41548d
  41542b:	mov    al,bh
  41542d:	add    esi,DWORD PTR [ecx+ecx*4]
  415430:	(bad)  
  415431:	push   eax
  415432:	add    ebx,ecx
  415434:	out    0xa7,al
  415436:	ins    BYTE PTR es:[edi],dx
  415437:	add    al,0x0
  415439:	mov    esi,DWORD PTR [ebx]
  41543b:	pushf  
  41543c:	mov    ecx,ecx
  41543e:	jns    0x415402
  415440:	mov    ecx,ecx
  415442:	cld    
  415443:	or     dh,dh
  415445:	jne    0x4154ad
  415447:	inc    esi
  415448:	rcl    DWORD PTR [ebp-0x2f],0xe8
  41544c:	data16 or BYTE PTR [esi-0x270801bc],cl
  415453:	add    al,bl
  415455:	push   DWORD PTR [ecx+0x7a0b063f]
  41545b:	xor    BYTE PTR [edx],cl
  41545d:	jmp    0x415496
  41545f:	out    0x6,al
  415461:	inc    BYTE PTR [edx]
  415463:	inc    esp
  415464:	jle    0x41549e
  415466:	or     bh,BYTE PTR ds:0xcb8c9f4
  41546c:	add    BYTE PTR [ebp-0x7f],dl
  41546f:	aad    0x81
  415471:	les    edx,FWORD PTR [esi]
  415473:	xchg   esp,eax
  415474:	data16 xor BYTE PTR [esi+0x28f7fe40],bh
  41547b:	add    al,bl
  41547d:	push   DWORD PTR [ebp+0xf24d]
	...
  4154b3:	add    dl,cl
  4154b5:	add    eax,DWORD PTR [eax]
  4154b7:	sub    esp,DWORD PTR [ecx-0x7503bc8b]
  4154bd:	mov    eax,0x86630873
  4154c2:	js     0x4154d1
  4154c4:	arpl   WORD PTR [esi-0x79],bp
  4154c7:	mov    edi,0x745d993b
  4154cc:	pop    ebx
  4154cd:	jbe    0x4154f7
  4154cf:	xor    al,0xa4
  4154d1:	into   
  4154d2:	mov    WORD PTR [ebx+ebx*4+0x2d],es
  4154d6:	mov    ah,0xe7
  4154d8:	pop    es
  4154d9:	and    bl,BYTE PTR [edi-0x2]
  4154dc:	fisub  DWORD PTR [eax-0x4df101aa]
  4154e2:	imul   edx,DWORD PTR [ebx+0x6e],0x6e
  4154e6:	add    cl,BYTE PTR [ebx]
  4154e8:	mov    ds:0xf6fef699,eax
  4154ed:	lds    ebx,FWORD PTR [esi+0x74]
  4154f0:	outs   dx,DWORD PTR ds:[esi]
  4154f1:	jge    0x41555d
  4154f3:	xchg   DWORD PTR [edi-0x3101a0d9],ebx
  4154f9:	and    BYTE PTR [ecx+eax*2+0x5e],ch
  4154fd:	ins    BYTE PTR es:[edi],dx
  4154fe:	add    bh,bh
  415500:	into   
  415501:	fs push 0xfffffff3
  415504:	jbe    0x41550d
  415506:	pop    edi
  415507:	xor    BYTE PTR [esi+0x4d740258],0x74
  41550e:	push   ds
  41550f:	dec    ebx
  415510:	mov    ds:0x17745d6c,al
  415515:	add    eax,0xd93
	...
  41554a:	arpl   WORD PTR [ecx+ecx*1-0x40],bp
  41554e:	xchg   edi,eax
  41554f:	popa   
  415550:	cdq    
  415551:	add    BYTE PTR [ebx+0x6c],ah
  415554:	add    bh,bh
  415556:	jbe    0x415588
  415558:	push   0x5
  41555a:	aaa    
  41555b:	aas    
  41555c:	pop    ebp
  41555d:	mov    ah,BYTE PTR [eax]
  41555f:	and    al,0x4d
  415561:	rcr    DWORD PTR [edi+0x6c],0xb7
  415565:	mov    cl,bh
  415567:	les    ebx,FWORD PTR [ebp-0x16fadc25]
  41556d:	pop    ebx
  41556e:	push   edx
  41556f:	add    al,0xaa
  415571:	pop    esi
  415572:	(bad)
  415575:	imul   ecx,DWORD PTR [edi+0x4a5e8e0f],0xd
  41557c:	adc    DWORD PTR [esi],ebx
  41557e:	jnp    0x415544
  415580:	call   0x814e84e3
  415585:	fcom   QWORD PTR [esi+edx*2+0x6d]
  415589:	jmp    0x2c0742ea
  41558e:	and    al,BYTE PTR ds:0x6d5cd85e
  415594:	ret    0x7c1b
  415597:	push   esi
  415598:	dec    ebp
  415599:	fcomp  DWORD PTR [ebp+ebp*2+0x34]
  41559d:	pusha  
  41559e:	ins    DWORD PTR es:[edi],dx
  41559f:	push   esi
  4155a0:	add    BYTE PTR [ebx+eiz*2],0x5
  4155a4:	jmp    0xe94277f5
  4155a9:	mov    eax,0x476968e9
	...
  4155de:	add    BYTE PTR [eax],al
  4155e0:	push   esp
  4155e1:	in     eax,dx
  4155e2:	jecxz  0x415624
  4155e4:	test   BYTE PTR ds:0x4263d111,al
  4155ea:	or     eax,0x609af5e
  4155ef:	fsub   DWORD PTR [ebp+ebp*2+0x78]
  4155f3:	sbb    DWORD PTR [esi+edx*2],esp
  4155f6:	sub    eax,0xe90418c8
  4155fb:	add    esp,DWORD PTR [ebx-0x78]
  4155fe:	sub    ebx,DWORD PTR [esp+ebx*4-0x13]
  415602:	sbb    cl,cl
  415604:	mov    ds:0xa44ac105,eax
  415609:	push   esi
  41560a:	int    0x9
  41560c:	and    edx,ecx
  41560e:	or     dh,BYTE PTR [ecx+eiz*8+0x6ff4c0d7]
  415615:	out    dx,eax
  415616:	inc    DWORD PTR [edx-0x29]
  415619:	(bad)  
  41561c:	jae    0x41568b
  41561e:	fnclex 
  415620:	das    
  415621:	push   edi
  415622:	or     ch,BYTE PTR [ecx+0x2cc6feab]
  415628:	inc    ebx
  415629:	push   esi
  41562a:	(bad)  
  41562b:	jmp    0xc2a5c390
  415630:	xorps  xmm1,XMMWORD PTR [edx-0x3eb2bcdc]
  415637:	loope  0x415699
  415639:	mov    al,0x8a
  41563b:	jge    0x41560f
  41563d:	fstp   QWORD PTR [edi+0x44]
  415640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415641:	push   ebp
  415642:	neg    bl
	...
  415674:	add    BYTE PTR [eax],al
  415676:	popa   
  415677:	inc    edx
  415678:	inc    BYTE PTR [edx]
  41567a:	cmp    dl,BYTE PTR [edi+0x74]
  41567d:	loope  0x415687
  41567f:	mov    edi,0xb0e46fe
  415684:	shr    dh,0xdc
  415687:	outs   dx,DWORD PTR ds:[esi]
  415688:	(bad)  
  415689:	call   0xe1b5aaee
  41568e:	enter  0x3150,0x26
  415692:	scas   al,BYTE PTR es:[edi]
  415693:	(bad)  
  415694:	mov    edi,0x895e5d94
  415699:	jmp    0x95405bfe
  41569e:	fs push esp
  4156a0:	je     0x415693
  4156a2:	mov    eax,0x87fefeeb
  4156a7:	push   ebx
  4156a8:	je     0x41568b
  4156aa:	mov    BYTE PTR [ebx],bl
  4156ac:	cmp    ch,dh
  4156ae:	mov    bh,0xff
  4156b0:	mov    edi,0x7060615c
  4156b5:	fisubr WORD PTR ds:0x58a0e80d
  4156bb:	push   esp
  4156bc:	(bad)  
  4156bd:	loop   0x41565f
  4156bf:	fld    DWORD PTR [ecx]
  4156c1:	add    BYTE PTR [ecx],dl
  4156c3:	data16 std 
  4156c5:	jne    0x4156b9
  4156c7:	loopne 0x4156e8
  4156c9:	cmp    DWORD PTR ds:0x8fc009b2,edx
  4156cf:	pop    es
  4156d0:	jmp    0x415727
  4156d2:	jb     0x41566f
  4156d4:	and    eax,0x73b1ba41
  4156d9:	or     BYTE PTR [eax],al
	...
  41570b:	add    dl,ah
  41570d:	mov    ?,WORD PTR [edx]
  41570f:	jmp    ebp
  415711:	std    
  415712:	mov    edi,0x40ddb875
  415717:	jmp    FWORD PTR [edi-0x2d651800]
  41571d:	mov    cl,0xfd
  41571f:	or     ecx,edx
  415721:	cmp    eax,DWORD PTR [eax]
  415723:	jmp    0x415793
  415725:	mov    dl,0x73
  415727:	or     BYTE PTR [edx],dh
  415729:	mov    dh,0x36
  41572b:	call   DWORD PTR ds:0x8875bffd
  415731:	frstor [edi+edi*8]
  415734:	scas   eax,DWORD PTR es:[edi]
  415735:	add    al,ch
  415737:	xchg   DWORD PTR [eax-0x4f],ebp
  41573a:	std    
  41573b:	adc    DWORD PTR [edx+0x61027728],0xffffffc9
  415742:	or     eax,eax
  415744:	out    dx,al
  415745:	push   esp
  415746:	cmp    eax,DWORD PTR [eax]
  415748:	cmp    bl,BYTE PTR [eax-0x2]
  41574b:	jb     0x415793
  41574d:	ins    DWORD PTR es:[edi],dx
  41574e:	(bad)  
  41574f:	dec    DWORD PTR [edx+0x8]
  415752:	jmp    0x415759
  415754:	mov    eax,ds:0x3a000005
  415759:	jge    0x41571c
  41575b:	pop    ebx
  41575c:	inc    ebx
  41575d:	mov    BYTE PTR [esi],0x0
  415760:	out    dx,eax
  415761:	jl     0x41574d
  415763:	push   0x3f0f5b
  415768:	add    bh,BYTE PTR [ebx]
  41576a:	inc    edx
  41576c:	arpl   WORD PTR [ebx],di
  41576e:	pop    edx
  41576f:	je     0x415771
	...
  4157a1:	add    BYTE PTR [edi+0x43],ah
  4157a4:	rol    BYTE PTR [edi],1
  4157a6:	sti    
  4157a7:	add    ebx,DWORD PTR [ebx-0x2]
  4157aa:	in     al,0x56
  4157ac:	inc    edx
  4157ad:	je     0x415828
  4157af:	fwait
  4157b0:	ror    BYTE PTR [ebx],1
  4157b2:	aam    0x18
  4157b4:	or     al,0xe8
  4157b6:	je     0x415763
  4157b8:	pop    edx
  4157b9:	(bad)  
  4157ba:	pop    eax
  4157bb:	sahf   
  4157bc:	ror    BYTE PTR [edx],1
  4157be:	mov    esp,0x2eff07f0
  4157c3:	pushw  0x7
  4157c6:	lods   al,BYTE PTR ds:[esi]
  4157c7:	mov    bl,BYTE PTR [edx-0x38]
  4157ca:	mov    eax,ds:0xe8550255
  4157cf:	mov    DWORD PTR [esi-0x4d11803d],eax
  4157d5:	addr16 add ecx,esp
  4157d8:	ret    
  4157d9:	dec    DWORD PTR [edi+ebp*1+0x67cc303]
  4157e0:	aas    
  4157e1:	out    0xa1,eax
  4157e3:	xchg   esi,eax
  4157e4:	pop    ecx
  4157e5:	(bad)  
  4157e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157e7:	mov    al,ds:0x5d64ff66
  4157ec:	add    cl,BYTE PTR [ebp-0x184c375a]
  4157f2:	jmp    0x66a9:0xe0fe594d
  4157f9:	dec    edi
  4157fb:	add    al,0x89
  4157fd:	inc    esp
  4157fe:	dec    edi
  4157ff:	lea    ebp,[edx+0x79]
  415802:	jb     0x415807
  415804:	pop    ebx
  415805:	add    BYTE PTR [eax],0x0
	...
  415838:	scas   al,BYTE PTR es:[edi]
  415839:	clc    
  41583a:	add    esi,DWORD PTR [ebp+0x5a]
  41583d:	loope  0x4157ff
  41583f:	jmp    0x4157f4
  415841:	add    al,0xef
  415843:	xor    BYTE PTR [esp+eiz*2],dl
  415846:	test   DWORD PTR [edi+edi*8+0x5],edi
  41584a:	jmp    0xe8c53759
  41584f:	add    esp,DWORD PTR [ebx-0x80]
  415852:	sub    edx,DWORD PTR [esp+eiz*4+0x52]
  415856:	push   ebx
  415857:	push   0x5ac5dd04
  41585c:	in     eax,0x86
  41585e:	rol    BYTE PTR [esi+edx*2],0xd0
  415862:	jne    0x415849
  415864:	jge    0x41582a
  415866:	call   0x2b8b83d9
  41586b:	pusha  
  41586c:	pop    edx
  41586d:	add    eax,0xc8a403e9
  415872:	add    BYTE PTR [ebx],0x63
  415875:	add    eax,0x5d2788e9
  41587a:	sbb    BYTE PTR [ebx+0x2f],bl
  41587d:	popa   
  41587e:	adc    eax,0x75af916c
  415883:	pop    edx
  415884:	imul   eax,DWORD PTR [ebp-0xc],0x50d0e1f3
  41588b:	add    ecx,DWORD PTR [edi]
  41588d:	call   FWORD PTR [ebp-0x30]
  415890:	test   BYTE PTR [ebp+0x11],bl
  415893:	pop    ecx
  415894:	jne    0x4158e8
  415896:	popa   
  415897:	cmp    ebp,DWORD PTR [ebp-0x28]
  41589a:	push   eax
  41589b:	imul   eax,DWORD PTR [eax],0x0
	...
  4158ce:	xor    eax,0x695a3e14
  4158d3:	cs mov ebx,0x44cfe1f0
  4158d9:	add    edx,edi
  4158db:	add    ah,BYTE PTR [esi]
  4158dd:	enter  0xdd40,0x70
  4158e1:	idiv   BYTE PTR [edx+edx*2]
  4158e4:	add    BYTE PTR [esi+0x69],dh
  4158e7:	add    eax,0x5df56ee9
  4158ec:	out    0xc2,eax
  4158ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ef:	adc    ch,cl
  4158f1:	rcr    BYTE PTR [edx],1
  4158f3:	retf   0x68ff
  4158f6:	jns    0x4158fd
  4158f8:	je     0x4158df
  4158fa:	pop    ebp
  4158fb:	cs jae 0x415885
  4158fe:	push   esi
  4158ff:	cs jae 0x4158fb
  415902:	push   cs
  415903:	add    cl,BYTE PTR [ebp+0x67c28f2c]
  415909:	sbb    DWORD PTR [esi],ebx
  41590b:	vaddsubps ymm6,ymm0,YMMWORD PTR [edi+0x3abefec8]
  415913:	fldpi  
  415915:	rol    DWORD PTR [edi+0x22],0xff
  415919:	scas   al,BYTE PTR es:[edi]
  41591a:	fiadd  WORD PTR [esi+0x5e]
  41591d:	inc    edx
  41591e:	sbb    BYTE PTR [edi+0x54],al
  415921:	jb     0x41596e
  415923:	test   ebx,eax
  415925:	dec    ecx
  415926:	sbb    DWORD PTR [ebx-0x2],edx
  415929:	ss icebp 
  41592b:	jmp    0x51e0ff7f
  415930:	idiv   bl
	...
  415962:	add    BYTE PTR [eax],al
  415964:	popa   
  415965:	inc    esi
  415966:	(bad)  
  415967:	ss in  al,0x2a
  41596a:	inc    ecx
  41596b:	jmp    0xf6416c50
  415970:	add    al,0x3f
  415972:	add    cl,ch
  415974:	pusha  
  415975:	add    BYTE PTR [ebp+ebx*2-0x4601ace7],0xb3
  41597d:	imul   ebp,DWORD PTR [edi],0xa530ba1
  415983:	sub    DWORD PTR [edx-0x77],ebp
  415986:	mov    ds:0x830560e8,eax
  41598b:	ins    BYTE PTR es:[edi],dx
  41598c:	mov    bl,0x52
  41598e:	(bad)  
  41598f:	es pop edi
  415991:	add    BYTE PTR [esi+esi*2+0x64000560],al
  415998:	mov    ah,0xa8
  41599a:	std    
  41599b:	push   cs
  41599c:	mov    al,al
  41599e:	inc    BYTE PTR [eax]
  4159a0:	addr16 mov ch,0xfc
  4159a3:	call   FWORD PTR ds:0xd37ecdd
  4159a9:	scas   al,BYTE PTR es:[edi]
  4159aa:	sub    esi,esi
  4159ac:	add    DWORD PTR [eax-0x5202015e],0xffffffe9
  4159b3:	aaa    
  4159b4:	push   esp
  4159b5:	(bad)  
  4159b6:	mov    ch,0x84
  4159b8:	pop    esp
  4159b9:	mov    eax,ds:0x951dfffc
  4159be:	push   sp
  4159c0:	xor    DWORD PTR [esi+edi*8-0x74],eax
  4159c4:	inc    edi
  4159c5:	retf   0xfffc
	...
  4159f8:	add    BYTE PTR [eax],al
  4159fa:	or     eax,0xc141e695
  4159ff:	add    al,0x0
  415a01:	xor    esi,0x8
  415a04:	lea    eax,[ebp-0x250f8]
  415a0a:	jp     0x4159ba
  415a0c:	mov    bl,0xa4
  415a0e:	fsubr  QWORD PTR [ebp-0x73a1703]
  415a14:	(bad)  
  415a15:	call   DWORD PTR [ebx]
  415a17:	iret   
  415a18:	mov    ds:0x44ad0dfe,al
  415a1d:	cmp    esp,0x53
  415a20:	jo     0x4159e6
  415a22:	std    
  415a23:	jle    0x415a17
  415a25:	(bad)  
  415a26:	sbb    eax,0x58b4e6ad
  415a2b:	scas   al,BYTE PTR es:[edi]
  415a2c:	std    
  415a2d:	mov    DWORD PTR [edi],0x1dfffc6c
  415a33:	add    al,0x0
  415a35:	add    BYTE PTR [edx+0x62],cl
  415a38:	add    BYTE PTR [ebp-0x39339],cl
  415a3e:	jge    0x4159d4
  415a40:	std    
  415a41:	mov    ch,0x66
  415a43:	scas   al,BYTE PTR es:[edi]
  415a44:	std    
  415a45:	call   DWORD PTR [edx+0x4e]
  415a48:	das    
  415a49:	jmp    DWORD PTR [ebx-0x9]
  415a4c:	or     eax,eax
  415a4e:	pop    esp
  415a4f:	jmp    0xbc81:0x5e24ff5a
  415a56:	fisttp DWORD PTR [edi+0x56]
  415a59:	(bad)  
  415a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a5b:	je     0x415a5f
	...
  415a8d:	add    BYTE PTR [eax],al
  415a8f:	add    BYTE PTR [ecx+ebp*8+0x6a],bl
  415a93:	inc    DWORD PTR [esi+ebx*2]
  415a96:	xchg   DWORD PTR [eax+edi*8-0x6c01a9d1],eax
  415a9d:	(bad)  
  415a9e:	inc    DWORD PTR [eax]
  415aa0:	arpl   WORD PTR [esi+0x6a],bx
  415aa3:	jecxz  0x415aff
  415aa5:	pop    esi
  415aa6:	add    cl,BYTE PTR [ebx]
  415aa8:	mov    ds:0x63ce7e5e,eax
  415aad:	pop    esi
  415aae:	add    bh,BYTE PTR ds:0x25d67
  415ab4:	push   esp
  415ab5:	fistp  QWORD PTR [edi]
  415ab7:	(bad)  
  415ab8:	mov    esp,0x694f6a5d
  415abd:	pop    esi
  415abe:	add    dl,BYTE PTR [eax+0x3b]
  415ac1:	icebp  
  415ac2:	retf   0x6340
  415ac5:	fld    DWORD PTR [eax+0x56ce9dc1]
  415acb:	dec    edi
  415acc:	mov    eax,ecx
  415ace:	or     DWORD PTR [eax],eax
  415ad0:	arpl   bx,bx
  415ad2:	aas    
  415ad3:	or     edi,ecx
  415ad5:	pop    ebp
  415ad6:	xchg   DWORD PTR [eax+edi*2+0x13fe56af],eax
  415add:	(bad)  
  415ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415adf:	or     BYTE PTR [ebx+0x5e],ah
  415ae2:	xchg   DWORD PTR [eax+ebp*2-0x4c01a939],eax
  415ae9:	mov    ah,0x13
  415aeb:	inc    ebx
  415aec:	push   esp
  415aed:	sbb    BYTE PTR [ebx],cl
  415aef:	rcl    dh,0xfc
  415af2:	jmp    0x415aba
	...
  415b24:	add    BYTE PTR [eax],al
  415b26:	jnp    0x415b2d
  415b28:	test   al,0x3
  415b2a:	out    dx,al
  415b2b:	mov    BYTE PTR [ecx],ah
  415b2d:	push   esi
  415b2e:	xor    eax,0x1b6bb84f
  415b33:	or     ecx,DWORD PTR [esi]
  415b35:	push   edi
  415b36:	xlat   BYTE PTR ds:[ebx]
  415b37:	js     0x415b63
  415b39:	push   esi
  415b3a:	sbb    eax,0xfcb39a4f
  415b3f:	cmc    
  415b40:	mov    ah,0x56
  415b42:	or     eax,0xdf88d95b
  415b47:	inc    ebx
  415b48:	out    0x56,al
  415b4a:	std    
  415b4b:	mov    ch,0x6b
  415b4d:	cmp    cl,0x4f
  415b50:	aad    0x56
  415b52:	pushf  
  415b53:	pop    ebp
  415b54:	test   DWORD PTR [edx],ebx
  415b56:	in     al,0x4e
  415b58:	outs   dx,DWORD PTR ds:[esi]
  415b59:	sbb    BYTE PTR [eax],0x50
  415b5c:	mov    ebp,0x7498d556
  415b61:	push   ebp
  415b62:	int    0x4e
  415b64:	lods   eax,DWORD PTR ds:[esi]
  415b65:	nop
  415b66:	ror    BYTE PTR [edi-0x5b],1
  415b69:	push   esi
  415b6a:	(bad)  
  415b6b:	(bad)  
  415b6d:	push   esi
  415b6e:	mov    ch,0xfa
  415b70:	test   al,0xcf
  415b72:	jno    0x415b51
  415b74:	das    
  415b75:	retf   
  415b76:	and    eax,DWORD PTR ds:0x5645e91
  415b7c:	jmp    0x21ed5834
  415b81:	lds    ecx,FWORD PTR [edi+ecx*2+0x4e869f33]
  415b88:	imul   eax,DWORD PTR gs:[eax],0x0
	...
  415bbc:	jne    0x415b80
  415bbe:	pop    ebp
  415bbf:	push   esi
  415bc0:	or     al,BYTE PTR [ebx+eax*8]
  415bc3:	add    edi,ecx
  415bc5:	add    al,0x4e
  415bc7:	nop
  415bc8:	test   al,0x4f
  415bca:	inc    ebp
  415bcb:	push   esi
  415bcc:	les    esi,FWORD PTR [edi+ecx*1-0x23ab3b]
  415bd3:	call   0xe94b1e90
  415bd8:	pusha  
  415bd9:	dec    esi
  415bda:	mov    ah,0x65
  415bdc:	xchg   esi,eax
  415bdd:	dec    edi
  415bde:	(bad)  
  415bdf:	adc    ebp,edi
  415be1:	push   ss
  415be2:	call   DWORD PTR [esi]
  415be4:	xchg   ebp,eax
  415be5:	cdq    
  415be6:	mov    ds:0xe74f8d0f,eax
  415beb:	dec    ebp
  415bec:	ins    DWORD PTR es:[edi],dx
  415bed:	dec    esi
  415bee:	(bad)  
  415bef:	(bad)  
  415bf0:	in     al,0x51
  415bf2:	std    
  415bf3:	div    BYTE PTR [esi-0x5241fa9a]
  415bf9:	dec    edi
  415bfa:	sti    
  415bfb:	sbb    ah,BYTE PTR [edi-0x71210173]
  415c01:	dec    edi
  415c02:	icebp  
  415c03:	xchg   DWORD PTR [edi+0x6],ecx
  415c06:	pcmpgtb mm2,QWORD PTR [edi+ecx*2-0x2]
  415c0b:	(bad)  
  415c0c:	adc    eax,0x4aac8af
  415c11:	jnp    0x415bfe
  415c13:	push   0x23
  415c15:	pop    esi
  415c16:	addr16 in al,dx
  415c18:	inc    ecx
  415c19:	push   cs
  415c1a:	add    BYTE PTR [ecx-0x613cfb6f],ah
	...
  415c50:	add    BYTE PTR [eax],al
  415c52:	jmp    0x5:0x61ec6733
  415c59:	or     DWORD PTR [ebp-0x157900ea],0x3b248833
  415c63:	jnp    0x415c36
  415c65:	add    DWORD PTR [esp+eax*1-0x1f071700],ecx
  415c6c:	ss pushw ss
  415c6f:	jnp    0x415c42
  415c71:	jo     0x415c27
  415c73:	pop    ebp
  415c74:	addr16 in al,dx
  415c76:	popa   
  415c77:	add    eax,0x16ad4100
  415c7c:	inc    DWORD PTR [eax]
  415c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c7f:	jle    0x415c51
  415c81:	mov    edi,DWORD PTR [eax-0x80]
  415c84:	inc    ebx
  415c85:	clc    
  415c86:	rcl    DWORD PTR [edi],0x8a
  415c89:	shl    BYTE PTR [edx],cl
  415c8b:	dec    ebp
  415c8c:	(bad)  
  415c8d:	dec    DWORD PTR [edx-0x4e]
  415c90:	jae    0x415c8e
  415c92:	ror    BYTE PTR [eax],1
  415c94:	call   0x4a9fb4
  415c99:	mov    ebp,DWORD PTR [eax+0x7e]
  415c9c:	sar    bh,1
  415c9e:	lahf   
  415c9f:	mov    eax,0x90b0466
  415ca4:	add    al,ch
  415ca6:	nop
  415ca7:	add    BYTE PTR [eax],al
  415ca9:	add    BYTE PTR [ecx],al
  415cab:	leave  
  415cac:	jb     0x415cbd
  415cae:	jno    0x415cc6
  415cb0:	addr16 pop esi
  415cb2:	xor    DWORD PTR [eax-0x2],ecx
  415cb5:	inc    BYTE PTR [eax]
	...
  415ce7:	add    BYTE PTR [edi+0x231e6b1],cl
  415ced:	or     DWORD PTR [eax],eax
  415cef:	mov    edi,eax
  415cf1:	pop    esi
  415cf2:	(bad)  
  415cf3:	imul   ecx,edx,0xba6a005e
  415cf9:	pop    esi
  415cfa:	add    DWORD PTR [eax-0x46],ebp
  415cfd:	or     BYTE PTR [eax],al
  415cff:	rol    BYTE PTR ds:0xf6e8ee3c,0x49
  415d06:	(bad)  
  415d07:	inc    DWORD PTR [ebx-0x75]
  415d0a:	repnz inc eax
  415d0c:	ror    eax,0x73
  415d0f:	inc    esp
  415d10:	in     eax,0x3b
  415d12:	cli    
  415d13:	dec    DWORD PTR [edi+0x7dffe6b8]
  415d19:	or     BYTE PTR [eax],al
  415d1b:	push   0x56
  415d1d:	pop    edi
  415d1e:	(bad)  
  415d1f:	(bad)  
  415d20:	lahf   
  415d21:	mov    eax,0x87373e6
  415d26:	add    BYTE PTR [ebx],cl
  415d28:	arpl   WORD PTR [esi],bx
  415d2a:	iret   
  415d2b:	or     esp,DWORD PTR [ebx]
  415d2d:	inc    esi
  415d2e:	mov    ah,0x4a
  415d30:	mov    ds:0x40e7b25e,al
  415d35:	arpl   WORD PTR [edx],ax
  415d37:	add    BYTE PTR [ecx-0x450017a2],bh
  415d3d:	pusha  
  415d3e:	call   0xeaa12842
  415d43:	push   DWORD PTR [esi+ebx*2]
  415d46:	inc    edx
  415d47:	(bad)  
  415d48:	mov    dh,0xee
  415d4a:	push   0xffffff95
	...
  415d7c:	add    BYTE PTR [eax],al
  415d7e:	pop    esp
  415d7f:	pop    esi
  415d80:	add    cl,BYTE PTR [ecx+0x73c14aa6]
  415d86:	mov    BYTE PTR [esi-0x24],dh
  415d89:	dec    edx
  415d8a:	mov    ds:0x5c9d6a5e,al
  415d8f:	pop    esi
  415d90:	add    dl,BYTE PTR [eax-0x75]
  415d93:	mov    esp,0x2b6340be
  415d98:	fdiv   st,st(3)
  415d9a:	sti    
  415d9b:	mov    ds:0xde4ff14,eax
  415da0:	push   ebx
  415da1:	je     0x415d7a
  415da3:	xor    eax,0x5e6306ce
  415da8:	stos   BYTE PTR es:[edi],al
  415da9:	or     ah,BYTE PTR [ebx+0x20eb0608]
  415daf:	fdivr  st,st(3)
  415db2:	dec    ebx
  415db3:	mov    ah,0xbe
  415db5:	inc    eax
  415db6:	arpl   WORD PTR [ebx-0x28],bp
  415db9:	idiv   DWORD PTR [ebx-0x5b000457]
  415dbf:	fiadd  WORD PTR [edi+0xb]
  415dc2:	or     edx,DWORD PTR [esi+0x766340be]
  415dc8:	xchg   esp,eax
  415dc9:	push   es
  415dca:	arpl   WORD PTR [esi-0x3],bx
  415dcd:	mov    edi,0xb9da400f
  415dd2:	sub    BYTE PTR ds:0x5d1303a8,al
  415dd8:	nop
  415dd9:	or     esp,DWORD PTR [ebx+0x5]
  415ddc:	loop   0x415e21
  415dde:	lock test edx,0x3
	...
  415e11:	add    BYTE PTR [eax],al
  415e13:	add    cl,cl
  415e15:	add    eax,0x4b4cd946
  415e1a:	mov    bl,0x53
  415e1c:	les    esi,FWORD PTR [edi+edi*8-0x1722bb3c]
  415e23:	push   edx
  415e24:	sub    al,0x4b
  415e26:	fwait
  415e27:	dec    edi
  415e28:	cmp    al,0x15
  415e2a:	xlat   BYTE PTR ds:[ebx]
  415e2b:	push   edx
  415e2c:	sub    eax,0x3c539b4b
  415e31:	sbb    eax,0x4b1d52d7
  415e36:	jnp    0x415e83
  415e38:	cld    
  415e39:	and    al,0xb7
  415e3b:	push   edx
  415e3c:	or     eax,0xb1bb293d
  415e41:	fisttp QWORD PTR [ebx+0x66]
  415e44:	cmp    al,0x5
  415e46:	loope  0x415e1d
  415e48:	arpl   WORD PTR [esi-0x23],ax
  415e4b:	mov    fs,WORD PTR [ebx+0x5]
  415e4e:	jmp    0x219d0256
  415e53:	(bad)
  415e56:	out    0xba,eax
  415e58:	mov    esp,0xcd532494
  415e5d:	es xchg ecx,eax
  415e5f:	dec    edi
  415e60:	xchg   ecx,eax
  415e61:	inc    ebp
  415e62:	outs   dx,DWORD PTR ds:[esi]
  415e63:	push   edx
  415e64:	mov    ebp,0x655a54a
  415e69:	push   cs
  415e6a:	out    0xd8,al
  415e6c:	les    edi,FWORD PTR [esi-0x57]
  415e6f:	scas   al,BYTE PTR es:[edi]
  415e70:	add    eax,0x887f3346
  415e75:	xchg   BYTE PTR [ebx+edx*2+0x0],ch
	...
  415ea8:	add    BYTE PTR [eax],al
  415eaa:	xor    ebp,ebx
  415eac:	xchg   ebx,eax
  415ead:	gs dec esp
  415eaf:	add    eax,0x5ae7100
  415eb4:	ret    
  415eb5:	outs   dx,BYTE PTR ds:[esi]
  415eb6:	in     eax,0x9
  415eb8:	loopne 0x415ed1
  415eba:	sahf   
  415ebb:	dec    edx
  415ebc:	(bad)  
  415ebd:	aad    0x76
  415ebf:	xchg   DWORD PTR [ecx+eax*2],edi
  415ec2:	inc    edx
  415ec3:	(bad)  
  415ec4:	(bad)  
  415ec5:	call   0x4c45bfe
  415eca:	ret    
  415ecb:	sbb    BYTE PTR [ecx-0x17],al
  415ece:	pusha  
  415ecf:	rol    BYTE PTR [edx+eax*1],1
  415ed2:	lahf   
  415ed3:	scas   eax,DWORD PTR es:[edi]
  415ed4:	enter  0x5d2a,0x2e
  415ed8:	out    0xcd,eax
  415eda:	imul   eax,DWORD PTR ds:0x4deb6c00,0xba288351
  415ee4:	(bad)  
  415ee5:	hlt    
  415ee6:	sbb    BYTE PTR [eax],0x41
  415ee9:	jmp    0x654fe903
  415eee:	nop
  415eef:	dec    edx
  415ef0:	(bad)  
  415ef1:	jmp    0xea39208f
  415ef6:	pusha  
  415ef7:	add    eax,0x521c7400
  415efc:	dec    edi
  415efd:	push   ebx
  415efe:	addr16 (bad) 
  415f01:	inc    edx
  415f02:	pusha  
  415f03:	dec    edx
  415f04:	je     0x415ed3
  415f06:	xor    dh,cl
  415f08:	out    0x17,eax
  415f0a:	mov    al,ds:0xa90949
	...
  415f3f:	add    BYTE PTR [ebx+ebx*8+0x55a39e7],dh
  415f46:	add    BYTE PTR [edx+0x2f],ch
  415f49:	int3   
  415f4a:	je     0x415f55
  415f4c:	fmulp  st(0),st
  415f4e:	imul   ecx
  415f50:	xchg   esp,eax
  415f51:	stos   DWORD PTR es:[edi],eax
  415f52:	(bad)  
  415f53:	sbb    al,0x17
  415f55:	bound  edi,QWORD PTR [edi-0x2c]
  415f58:	xor    ecx,DWORD PTR [ebx-0x78]
  415f5b:	add    BYTE PTR [edi-0x53],al
  415f5e:	mov    eax,DWORD PTR [ebp-0x1e]
  415f61:	nop
  415f62:	std    
  415f63:	jne    0x415f77
  415f65:	mov    ah,0x73
  415f67:	hlt    
  415f68:	pusha  
  415f69:	push   es
  415f6a:	push   DWORD PTR [ebp-0x2]
  415f6d:	mov    bl,0x13
  415f6f:	call   0xb3fa5d0
  415f74:	cmp    ch,BYTE PTR ds:0xb1078b2c
  415f7a:	mov    DWORD PTR [eax],edx
  415f7c:	iret   
  415f7d:	inc    eax
  415f7e:	out    dx,al
  415f7f:	push   eax
  415f80:	call   0x5d2d733a
  415f85:	inc    esp
  415f86:	dec    BYTE PTR [edx]
  415f88:	mov    ch,BYTE PTR ds:0x8a6b6818
  415f8e:	aas    
  415f8f:	add    BYTE PTR [ebp+0x30],cl
  415f92:	out    dx,al
  415f93:	call   0x415af8
  415f98:	add    ebp,eax
  415f9a:	jae    0x415f9d
  415f9c:	leave  
  415f9d:	mov    ch,0x73
  415f9f:	lock jb 0x415f92
  415fa2:	add    eax,0x0
	...
  415fd3:	add    BYTE PTR [eax],al
  415fd5:	add    dl,bh
  415fd7:	mov    ch,0x73
  415fd9:	hlt    
  415fda:	bound  ecx,QWORD PTR [esi+0x33]
  415fdd:	(bad)  
  415fde:	std    
  415fdf:	mov    ch,0x73
  415fe1:	cld    
  415fe2:	adc    bh,dh
  415fe4:	add    eax,0xc1c9fa00
  415fe9:	pop    ebx
  415fea:	add    eax,edx
  415fec:	push   ebx
  415fed:	mov    ebp,DWORD PTR [esi+0xcc0c283]
  415ff3:	mov    dh,0xfd
  415ff5:	push   ebx
  415ff6:	and    dh,BYTE PTR [edi-0x1f]
  415ff9:	inc    eax
  415ffa:	retf   0x70bc
  415ffd:	add    DWORD PTR [ecx],ecx
  415fff:	mov    dh,0x81
  416001:	cmp    eax,0x40ebab
  416006:	arpl   WORD PTR [esi-0x2a],bx
  416009:	sbb    ah,al
  41600b:	cmp    ebp,esi
  41600d:	sub    BYTE PTR [edx],ah
  41600f:	pop    esi
  416010:	add    dh,BYTE PTR [ecx+esi*2-0x25]
  416014:	or     eax,0x41d35e0
  416019:	add    bh,dh
  41601b:	cmp    DWORD PTR fs:[edi+edi*2],0xfffffff0
  416020:	ret    0x6cff
  416023:	xor    DWORD PTR ds:0x3993a32b,eax
  416029:	ret    0x1388
  41602c:	push   eax
  41602d:	adc    al,0x72
  41602f:	cmc    
  416030:	ret    0xdbff
  416033:	mov    al,ds:0x21dec656
  416038:	push   ecx
  416039:	inc    BYTE PTR [eax]
	...
  41606b:	add    BYTE PTR [esi+eax*1],bh
  41606e:	add    eax,DWORD PTR [eax]
  416070:	arpl   WORD PTR [edx+eax*1+0x6a],si
  416074:	popa   
  416075:	neg    BYTE PTR [ecx-0x7ca19cfb]
  41607b:	neg    DWORD PTR [edi+eiz*1]
  41607e:	xchg   BYTE PTR ds:0x89025e62,bl
  416084:	out    0x15,al
  416086:	push   ecx
  416087:	inc    BYTE PTR [ecx+eiz*8]
  41608a:	test   ebx,ecx
  41608c:	std    
  41608d:	push   esi
  41608e:	dec    esi
  41608f:	dec    edi
  416090:	hlt    
  416091:	push   0x26ecfd3b
  416096:	pop    ebx
  416097:	lea    ebx,[ebp+0x5e]
  41609a:	add    cl,BYTE PTR [ebx]
  41609c:	mov    ds:0x63f28626,eax
  4160a1:	pop    esi
  4160a2:	add    ch,BYTE PTR [eax-0x49]
  4160a5:	adc    al,ch
  4160a7:	call   edi
  4160a9:	fcom   DWORD PTR [ebx-0x3]
  4160ac:	mov    esp,0x52e7b396
  4160b1:	add    eax,0xfc6303ee
  4160b6:	test   al,0xff
  4160b8:	loopne 0x4160fd
  4160ba:	call   0x6381c3c2
  4160bf:	dec    eax
  4160c0:	xchg   esi,eax
  4160c1:	inc    edi
  4160c2:	test   DWORD PTR [ebx+eiz*2],eax
  4160c5:	add    eax,0x40df80e9
  4160ca:	jbe    0x41611b
  4160cc:	jge    0x416082
  4160ce:	ins    DWORD PTR es:[edi],dx
  4160cf:	cdq    
	...
  416100:	add    BYTE PTR [eax],al
  416102:	nop
  416103:	inc    esi
  416104:	gs dec edi
  416106:	ins    DWORD PTR es:[edi],dx
  416107:	icebp  
  416108:	repz sbb al,0x22
  41610b:	add    eax,0x48207962
  416110:	dec    ebp
  416111:	dec    edi
  416112:	imul   eax,DWORD PTR [ebp-0xb],0xe905f487
  416119:	add    ecx,DWORD PTR [eax-0x1800c350]
  41611f:	jbe    0x416109
  416121:	add    esp,DWORD PTR [ebx+0x46]
  416124:	pop    ebx
  416125:	cmp    BYTE PTR [esi],ch
  416127:	inc    edi
  416128:	sbb    eax,0xe8df24da
  41612d:	add    esp,DWORD PTR [ebx+0x3]
  416130:	add    DWORD PTR [ecx],esp
  416132:	pop    ebp
  416133:	add    eax,0xd1ccfae9
  416138:	jg     0x4161b6
  41613a:	lahf   
  41613b:	dec    ebp
  41613c:	arpl   cx,cx
  41613e:	clc    
  41613f:	mov    ch,0x80
  416141:	pop    edx
  416142:	arpl   WORD PTR [ebx],ax
  416144:	jmp    0xdd8ed897
  416149:	clc    
  41614a:	add    al,0x18
  41614c:	sub    BYTE PTR [eax+ebp*2],al
  41614f:	inc    ebp
  416150:	push   esp
  416151:	lods   al,BYTE PTR ds:[esi]
  416152:	aad    0xd0
  416154:	les    ecx,FWORD PTR [esi+0x77]
  416157:	popa   
  416158:	push   cs
  416159:	(bad)
  41615c:	jmp    FWORD PTR [eax-0x59bcf26c]
  416162:	jmp    0x4160ea
  416164:	std    
  416165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  416196:	add    BYTE PTR [eax],al
  416198:	sbb    eax,0x60e9fe46
  41619d:	js     0x416123
  41619f:	test   eax,0x39fe472e
  4161a4:	mov    bh,0x7
  4161a6:	add    dh,dh
  4161a8:	pusha  
  4161a9:	pop    ebp
  4161aa:	pop    esi
  4161ab:	out    0x60,eax
  4161ad:	add    eax,0xf19ba90b
  4161b2:	sub    BYTE PTR [eax+eiz*1],0x48
  4161b6:	(bad)  
  4161b7:	pushaw 
  4161b9:	ror    DWORD PTR [ebx],1
  4161bb:	pop    esi
  4161bc:	retf   
  4161bd:	xchg   ch,bh
  4161bf:	push   esi
  4161c0:	lods   eax,DWORD PTR ds:[esi]
  4161c1:	ja     0x4161c7
  4161c3:	mov    bh,0x77
  4161c5:	(bad)  
  4161c6:	call   DWORD PTR [ecx+0x71]
  4161c9:	pop    edx
  4161ca:	sbb    DWORD PTR [esi],edi
  4161cc:	sub    ecx,DWORD PTR [edx-0x19]
  4161cf:	jge    0x416235
  4161d1:	add    eax,0x4e1b2e00
  4161d6:	out    0x55,eax
  4161d8:	fs add eax,0x47281200
  4161de:	je     0x4161f1
  4161e0:	mov    eax,0x60e903a4
  4161e5:	js     0x41616b
  4161e7:	xor    eax,0x99fe479e
  4161ec:	xchg   ebp,eax
  4161ed:	xchg   ecx,eax
  4161ee:	(bad)  
  4161ef:	imul   DWORD PTR [esi+0x6b45e747]
  4161f5:	add    eax,0x4664d000
  4161fa:	(bad)  
  4161fb:	fiadd  WORD PTR [eax]
	...
  41622d:	add    BYTE PTR [esi+0x2ed7c791],dl
  416233:	inc    edi
  416234:	out    0x69,eax
  416236:	imul   eax,DWORD PTR ds:0xc4510000,0x59
  41623d:	leave  
  41623e:	stc    
  41623f:	lea    ecx,[ecx-0x2142b614]
  416245:	push   ebx
  416246:	and    dh,bh
  416248:	in     al,0x40
  41624a:	mov    edx,0xf90170b9
  41624f:	mov    bh,0x81
  416251:	cmp    eax,0x40e73a
  416256:	mov    ch,BYTE PTR ds:0x65a78307
  41625c:	sub    al,0x41
  41625e:	jp     0x416261
  416260:	jne    0x416267
  416262:	mov    eax,ds:0xc9c959c1
  416267:	mov    edi,0x17afc43
  41626c:	add    BYTE PTR [eax],al
  41626e:	cmp    eax,0x4a00f63e
  416273:	or     DWORD PTR [eax],eax
  416275:	(bad)  
  416276:	jmp    esp
  416278:	(bad)  
  416279:	(bad)  
  41627a:	cmp    cl,BYTE PTR [ecx]
  41627c:	mov    DWORD PTR [ebp-0x72],0x4a000009
  416283:	retf   0xf043
  416286:	dec    edx
  416287:	or     DWORD PTR [eax],eax
  416289:	add    BYTE PTR [edi-0x48af11b4],dh
  41628f:	dec    esp
  416290:	repnz push eax
	...
  4162c2:	add    BYTE PTR [eax],al
  4162c4:	xchg   DWORD PTR [edx+ebp*8+0x50],ecx
  4162c8:	loopne 0x41629b
  4162ca:	mov    eax,DWORD PTR [ebp+0x66]
  4162cd:	jns    0x416337
  4162cf:	add    dh,al
  4162d1:	add    eax,0x3bf5006a
  4162d6:	scas   al,BYTE PTR es:[edi]
  4162d7:	cs retf 
  4162d9:	or     BYTE PTR [ecx+0x7b861245],cl
  4162df:	call   0x8148bfde
  4162e4:	arpl   cx,bx
  4162e6:	pop    ebx
  4162e7:	jmp    0x7543914f
  4162ec:	push   edi
  4162ed:	dec    ebx
  4162ee:	aad    0xfb
  4162f0:	aam    0xe9
  4162f2:	dec    ebx
  4162f3:	cmp    BYTE PTR [esi],0x76
  4162f6:	add    dh,BYTE PTR [ecx+ebx*1-0x59]
  4162fa:	lods   eax,DWORD PTR ds:[esi]
  4162fb:	idiv   DWORD PTR [eax+0x3b724b2b]
  416301:	xchg   esi,eax
  416302:	aad    0x41
  416304:	pushf  
  416305:	fwait
  416306:	jns    0x41634c
  416308:	adc    DWORD PTR [ebx-0x100717f1],0x4c
  41630f:	(bad)  
  416310:	pop    eax
  416311:	outs   dx,BYTE PTR ds:[esi]
  416312:	(bad)  
  416313:	and    ch,dl
  416315:	icebp  
  416316:	imul   esp,DWORD PTR [bx-0x7a],0xab6c315c
  41631e:	dec    ebx
  41631f:	je     0x4162a4
  416321:	mov    bl,0xc2
  416323:	pop    es
  416324:	pop    esp
  416325:	popa   
  416326:	data16 mov es,WORD PTR [eax]
	...
  416359:	add    BYTE PTR [ebx+0x7b344b2a],ah
  41635f:	ja     0x416322
  416361:	call   ebp
  416363:	sub    eax,0x6da8279f
  416368:	add    al,BYTE PTR [ebx+0x4c4b7a20]
  41636e:	aas    
  41636f:	scas   eax,DWORD PTR es:[edi]
  416370:	int    0xeb
  416372:	arpl   WORD PTR [ecx+0x1a96fe87],bx
  416378:	dec    esp
  416379:	adc    al,0xc7
  41637b:	add    ecx,0xffffffff
  41637e:	and    eax,0x4ff4e71
  416383:	add    al,BYTE PTR cs:[ecx-0xa6f982]
  41638a:	hlt    
  41638b:	sub    eax,0x4fa04d5
  416390:	inc    ebp
  416391:	dec    ebx
  416392:	in     eax,0x43
  416394:	imul   ecx,ecx,0xfd5d04d8
  41639a:	aad    0xb9
  41639c:	int3   
  41639d:	dec    ebx
  41639e:	ja     0x416411
  4163a0:	push   ss
  4163a1:	(bad)
  4163a4:	out    0x3,eax
  4163a6:	arpl   WORD PTR ds:0xd9a13d12,ax
  4163ac:	popa   
  4163ad:	pop    eax
  4163ae:	loope  0x4163f8
  4163b0:	mov    esp,0x23ad0db7
  4163b5:	bound  ebx,QWORD PTR [ebp+eax*1-0x6f]
  4163b9:	(bad)  
  4163ba:	arpl   WORD PTR [eax-0x73],cx
  4163bd:	xchg   DWORD PTR [eax],eax
	...
  4163ef:	add    BYTE PTR [edi+0x29],cl
  4163f2:	(bad)  
  4163f3:	les    eax,FWORD PTR [ebx+eax*2+0x1e1fcf4]
  4163fa:	jns    0x416416
  4163fc:	and    al,BYTE PTR ds:0xf066d0e9
  416402:	sub    BYTE PTR [ebx+0x7f294e09],ch
  416408:	jg     0x4163f7
  41640a:	mov    eax,ds:0x772e54c4
  41640f:	add    eax,0x20510563
  416414:	inc    edi
  416415:	inc    ebx
  416416:	cmp    eax,0xa1f17f87
  41641b:	les    esi,FWORD PTR [ebx+eax*2]
  41641e:	mov    ah,0xf2
  416420:	sub    eax,0x6f4aecb7
  416425:	icebp  
  416426:	mov    cl,0xc4
  416428:	sbb    al,0x2b
  41642a:	inc    esi
  41642b:	pop    es
  41642c:	arpl   WORD PTR ds:0x89743e2,ax
  416432:	adc    dh,bl
  416434:	arpl   WORD PTR ds:0x41a742e9,ax
  41643a:	(bad)  
  41643b:	call   0x5c4169a0
  416440:	and    bh,BYTE PTR [edi]
  416442:	dec    edi
  416443:	push   ebx
  416444:	pop    edi
  416445:	scas   eax,DWORD PTR es:[edi]
  416446:	add    esi,ebx
  416448:	mov    ch,0x6
  41644a:	push   0xffffffe9
  41644c:	sub    DWORD PTR [edi+0x32d3ce03],esi
  416452:	sub    eax,0x28
	...
  416483:	add    BYTE PTR [eax],al
  416485:	add    BYTE PTR [edi+0xe],bl
  416488:	shl    BYTE PTR ds:0xe9882c62,0x60
  41648f:	add    eax,0x2d633aff
  416494:	pop    ecx
  416495:	sub    BYTE PTR [eax],bl
  416497:	inc    ebx
  416498:	mov    BYTE PTR [edi+ebp*1],ah
  41649b:	inc    ebx
  41649c:	jb     0x41648b
  41649e:	cmp    BYTE PTR [eax],dh
  4164a0:	add    ecx,ebp
  4164a2:	pusha  
  4164a3:	aad    0xfe
  4164a5:	cld    
  4164a6:	sbb    dl,dl
  4164a8:	(bad)  
  4164a9:	cli    
  4164aa:	jl     0x416456
  4164ac:	jmp    edi
  4164ae:	pusha  
  4164af:	add    eax,0x426ce968
  4164b4:	(bad)  
  4164b5:	push   ecx
  4164b6:	add    eax,DWORD PTR [edi]
  4164b8:	add    cl,ch
  4164ba:	pop    ebp
  4164bb:	xor    BYTE PTR [ebx+0x2],0xa0
  4164bf:	leave  
  4164c0:	sti    
  4164c1:	jmp    0x74416a26
  4164c6:	and    edi,DWORD PTR [esi]
  4164c8:	dec    edi
  4164c9:	shl    DWORD PTR [eax-0x51],cl
  4164cc:	add    DWORD PTR [esi],esi
  4164ce:	adc    edi,DWORD PTR [edx]
  4164d0:	imul   ebp,ecx,0x2603b799
  4164d6:	xor    esi,DWORD PTR [edx]
  4164d8:	sub    eax,0xc00e60a8
  4164dd:	popf   
  4164de:	push   ss
  4164df:	inc    ebx
  4164e0:	je     0x4164f3
  4164e2:	test   al,0x68
  4164e4:	xor    BYTE PTR [eax],al
  4164e6:	pop    ebp
  4164e7:	iret   
  4164e8:	jmp    0x41651d
	...
  416519:	add    BYTE PTR [eax],al
  41651b:	add    ch,bh
  41651d:	push   ecx
  41651e:	imul   al
  416520:	mov    ds,WORD PTR [ecx]
  416522:	(bad)  
  416523:	(bad)  
  416524:	cmp    eax,0xfa412006
  416529:	les    eax,FWORD PTR [ebx-0x4]
  41652c:	retf   0x5
  41652f:	add    BYTE PTR [edi],bh
  416531:	cmp    dl,0x50
  416534:	and    BYTE PTR [ecx],cl
  416536:	push   0x2
  416538:	gs arpl si,di
  41653b:	(bad)  
  41653c:	jns    0x416543
  41653e:	call   DWORD PTR ds:0x411efa
  416544:	rol    ebp,0xd
  416547:	test   BYTE PTR [ebx],dl
  416549:	or     DWORD PTR [eax],eax
  41654b:	add    ch,al
  41654d:	adc    esi,0x58a20
  416553:	mov    DWORD PTR [edi-0x13],0x57affff
  41655a:	push   DWORD PTR [ebx-0x7a]
  41655d:	mov    esp,0x57ede043
  416562:	push   es
  416563:	pop    DWORD PTR [edi-0x5b]
  416566:	lds    eax,FWORD PTR [ebp+0x12]
  416569:	or     DWORD PTR [eax],eax
  41656b:	add    BYTE PTR [edx-0x3a],cl
  41656e:	inc    ebx
  41656f:	in     al,dx
  416570:	dec    edx
  416571:	add    eax,0x80850000
  416576:	out    dx,al
  416577:	add    BYTE PTR [edx],bh
  416579:	add    eax,0xd107c700
  41657e:	(bad)  
  41657f:	inc    DWORD PTR [eax]
	...
  4165b1:	add    BYTE PTR [edx+0x5],cl
  4165b4:	lea    eax,[ebp+0x52]
  4165b7:	jns    0x4165b6
  4165b9:	jne    0x416639
  4165bb:	loope  0x4165e9
  4165bd:	add    al,0xa
  4165bf:	add    eax,0xa263c00b
  4165c4:	jmp    0x5a74:0x41a8e82
  4165cb:	pop    es
  4165cc:	iret   
  4165cd:	repz in al,dx
  4165cf:	sub    DWORD PTR [eax+0x3f2ea228],esi
  4165d5:	inc    esp
  4165d6:	pop    ss
  4165d7:	add    al,BYTE PTR cs:[eax]
  4165da:	arpl   WORD PTR [ebx-0x1],dx
  4165dd:	(bad)  
  4165de:	es jp  0x4165e3
  4165e1:	add    BYTE PTR [ebx+0x2e],ah
  4165e4:	inc    edi
  4165e5:	je     0x4165b6
  4165e7:	dec    edi
  4165e8:	in     eax,dx
  4165e9:	jecxz  0x416660
  4165eb:	in     eax,dx
  4165ec:	add    ecx,DWORD PTR [ebx]
  4165ee:	mov    ds:0xd8e7e9fa,eax
  4165f3:	add    BYTE PTR [edi-0x2],0xe0
  4165f7:	xor    DWORD PTR [esi],esp
  4165f9:	sub    eax,0x74022e22
  4165fe:	gs lahf 
  416600:	in     eax,dx
  416601:	fild   DWORD PTR [ebp-0x13]
  416604:	add    eax,edi
  416606:	data16 clc 
  416608:	sbb    al,BYTE PTR [ecx+0x63]
  41660b:	sub    eax,0xabe30002
  416610:	(bad)
  416613:	inc    edx
  416614:	sti    
  416615:	inc    BYTE PTR [eax]
	...
  416647:	add    dh,dh
  416649:	mov    ecx,0xd6677447
  41664e:	sub    eax,0x472e6302
  416653:	je     0x4166ac
  416655:	mov    BYTE PTR [ebx+0x0],0x63
  416659:	cs inc esi
  41665b:	xor    ah,BYTE PTR [ebx]
  41665d:	test   DWORD PTR [edi-0x2],eax
  416660:	cmp    al,0xff
  416662:	push   esp
  416663:	lods   eax,DWORD PTR ds:[esi]
  416664:	jnp    0x416695
  416666:	test   DWORD PTR [ecx+eax*4-0x2701b811],0x39fd0204
  416671:	adc    BYTE PTR [eax+eiz*8+0x16],ah
  416675:	inc    eax
  416676:	adc    eax,0xe905638b
  41667b:	add    esp,DWORD PTR [esp+ebx*8-0x7368bbd1]
  416682:	or     al,0x84
  416684:	and    BYTE PTR [ecx-0x80],al
  416687:	in     eax,dx
  416688:	add    al,0xc5
  41668a:	call   0xaa47d8da
  41668f:	inc    edi
  416690:	dec    edx
  416691:	add    eax,0x56235d1
  416696:	jmp    0xce3c34f6
  41669b:	inc    edi
  41669c:	mov    esp,0xbd47b999
  4166a1:	lods   al,BYTE PTR ds:[esi]
  4166a2:	je     0x4166ba
  4166a4:	and    al,BYTE PTR ds:0xc6785841
  4166aa:	call   0x41670a
	...
  4166db:	add    BYTE PTR [eax],al
  4166dd:	add    BYTE PTR [edi-0x4],dl
  4166e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166e1:	inc    edi
  4166e2:	add    al,0x41
  4166e4:	into   
  4166e5:	les    edx,FWORD PTR [edi+eiz*4+0x52215d3]
  4166ec:	add    DWORD PTR [esi+0x4a],0xb4dc8540
  4166f3:	out    dx,al
  4166f4:	daa    
  4166f5:	add    al,0xb
  4166f7:	pop    es
  4166f8:	(bad)  
  4166f9:	les    ebp,FWORD PTR [edi+eiz*1+0x7d]
  4166fd:	or     ah,BYTE PTR [edi+edi*1-0x30]
  416701:	retf   
  416702:	mov    eax,esp
  416704:	call   0xa82e21e4
  416709:	add    edi,DWORD PTR [ebx]
  41670b:	adc    al,BYTE PTR es:[edi+0x45]
  41670f:	scas   al,BYTE PTR es:[edi]
  416710:	xchg   esp,eax
  416711:	push   ss
  416712:	mov    ds:0x8844d105,al
  416717:	(bad)  
  416718:	(bad)  
  416719:	call   0x2e7abca6
  41671e:	pushf  
  41671f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416720:	adc    al,dl
  416722:	daa    
  416723:	aas    
  416724:	data16 cmp BYTE PTR [edi-0x3c],dh
  416728:	inc    DWORD PTR [eax]
  41672a:	mov    eax,ds:0xa70efefc
  41672f:	pop    es
  416730:	cli    
  416731:	push   es
  416732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416733:	es xor al,0x3
  416736:	pushf  
  416737:	aas    
  416738:	or     ch,BYTE PTR [ecx]
  41673a:	adc    edx,DWORD PTR [eax+ebp*8]
  41673d:	fistp  WORD PTR [ecx+0xf2fe3f]
	...
  416773:	add    BYTE PTR [eax],ah
  416775:	mov    dl,0x9
  416777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416778:	arpl   WORD PTR [ebx],bp
  41677a:	dec    edx
  41677b:	sub    BYTE PTR [edi+0x4],ah
  41677e:	add    cl,ch
  416780:	pusha  
  416781:	lods   eax,DWORD PTR ds:[esi]
  416782:	add    al,ch
  416784:	pusha  
  416785:	add    eax,0x3e50d6e8
  41678a:	dec    BYTE PTR [edx-0x16bf35ac]
  416790:	gs leave 
  416792:	sti    
  416793:	call   0x6c416cff
  416798:	mov    ds:0x73964f3a,eax
  41679d:	icebp  
  41679e:	dec    edx
  41679f:	sub    BYTE PTR [edi+0x2d],bl
  4167a2:	push   0xb0560eb
  4167a7:	test   eax,0xbcff1993
  4167ac:	push   esp
  4167ad:	retf   0xe940
  4167b0:	or     BYTE PTR [eax+0x2e],bl
  4167b3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4167b5:	inc    edi
  4167b6:	add    al,0xd
  4167b8:	sbb    ch,al
  4167ba:	(bad)  
  4167bb:	call   0x41416d20
  4167c0:	ds clc 
  4167c2:	inc    BYTE PTR [eax]
  4167c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c5:	fiadd  DWORD PTR [ebx+esi*1]
  4167c8:	jne    0x416791
  4167ca:	push   si
  4167cc:	pop    ebp
  4167cd:	dec    eax
  4167ce:	(bad)  
  4167cf:	out    0x39,eax
  4167d1:	sar    ebp,cl
  4167d3:	call   DWORD PTR [ebx-0x3d]
  4167d6:	push   ebx
  4167d7:	mov    eax,DWORD PTR [eax]
	...
  416809:	add    BYTE PTR [esi+0x5a],ah
  41680c:	add    eax,0xf801bae9
  416811:	jb     0x41680e
  416813:	ret    0x6afd
  416816:	or     bl,dl
  416818:	mov    eax,0xb8020a01
  41681d:	add    dl,bh
  41681f:	add    DWORD PTR [eax],eax
  416821:	leave  
  416822:	cmp    BYTE PTR [esi],bh
  416824:	(bad)  
  416825:	addr16 imul ebx,edx,0x3e
  416829:	add    dl,al
  41682b:	push   edx
  41682c:	inc    edx
  41682e:	mov    ch,0x60
  416830:	clc    
  416831:	call   0xa42971b0
  416836:	retf   
  416837:	add    DWORD PTR [eax],eax
  416839:	call   0x3f2f3e
  41683e:	mov    ds:0xf5fff0bb,al
  416843:	loopne 0x416857
  416845:	cmc    
  416846:	(bad)
  416849:	cld    
  41684a:	out    dx,eax
  41684b:	(bad)  
  41684c:	std    
  41684d:	xor    DWORD PTR [edi+0x7a4149db],0x1
  416854:	je     0x41686f
  416856:	or     DWORD PTR [esi],eax
  416858:	fsubr  QWORD PTR [esi]
  41685a:	dec    ebx
  41685b:	or     DWORD PTR [eax],eax
  41685d:	je     0x4168db
  41685f:	enter  0xdc13,0xa4
  416863:	inc    edx
  416864:	inc    dh
  416866:	dec    edi
  416867:	imul   esp,DWORD PTR [edi],0x41
  41686a:	dec    edx
  41686b:	or     BYTE PTR [eax],al
	...
  41689d:	add    BYTE PTR [eax],al
  41689f:	add    BYTE PTR [ebx-0x52],ah
  4168a2:	pop    ebx
  4168a3:	(bad)  
  4168a4:	dec    eax
  4168a5:	int3   
  4168a6:	inc    esp
  4168a7:	out    0x2b,eax
  4168a9:	ret    
  4168aa:	inc    esp
  4168ab:	(bad)  
  4168ac:	and    BYTE PTR [edi-0x34],dl
  4168af:	call   0x718b9757
  4168b4:	(bad)  
  4168b5:	out    dx,eax
  4168b6:	inc    esp
  4168b7:	out    0x74,eax
  4168b9:	sub    eax,0x21890002
  4168be:	test   eax,0x531c312a
  4168c3:	or     BYTE PTR [ecx],0x23
  4168c6:	int    0x1
  4168c8:	or     BYTE PTR [ecx],dh
  4168ca:	push   edi
  4168cb:	jmp    0x6ec:0xfe44a40b
  4168d2:	ins    BYTE PTR es:[edi],dx
  4168d3:	mul    ah
  4168d5:	sub    ebx,eax
  4168d7:	inc    esp
  4168d9:	adc    al,BYTE PTR [ebx]
  4168db:	add    BYTE PTR [ebx+0x5b],ah
  4168de:	sbb    eax,0x3ed2a74
  4168e3:	(bad)  
  4168e4:	jle    0x4168bc
  4168e6:	stos   BYTE PTR es:[edi],al
  4168e7:	inc    eax
  4168e8:	arpl   WORD PTR [ebx+0x1d],ax
  4168eb:	jl     0x416907
  4168ed:	in     eax,dx
  4168ee:	add    edi,edi
  4168f0:	xchg   BYTE PTR [esi+0x6b6340a9],ch
  4168f6:	sbb    eax,0x3ed3a84
  4168fb:	(bad)  
  4168fc:	ds mov dh,0xa9
  4168ff:	inc    eax
  416900:	arpl   WORD PTR [ebx+0x8c1d],dx
	...
  416936:	sub    ch,ch
  416938:	add    edi,edi
  41693a:	inc    esi
  41693b:	fisubr WORD PTR [ecx+0x1dbb6340]
  416941:	xchg   esp,eax
  416942:	or     ch,ch
  416944:	add    edi,edi
  416946:	ds (bad) 
  416948:	test   eax,0x66056340
  41694d:	push   ds
  41694e:	neg    ebp
  416950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416951:	add    ecx,DWORD PTR [edx+eiz*8-0x78]
  416955:	stos   BYTE PTR es:[edi],al
  416956:	mov    ds:0x71e4e05,eax
  41695b:	fisub  WORD PTR [edi-0x6f1dcbfd]
  416961:	stos   BYTE PTR es:[edi],al
  416962:	mov    ds:0xf71e3605,eax
  416967:	frstor [edi+0x58e21c03]
  41696d:	stos   BYTE PTR es:[edi],al
  41696e:	mov    ds:0xd71e1e05,eax
  416973:	frstor [edi+0x50e20403]
  416979:	stos   BYTE PTR es:[edi],al
  41697a:	mov    ds:0xb71e0605,eax
  41697f:	frstor [edi+0x28e1ec03]
  416985:	stos   BYTE PTR es:[edi],al
  416986:	mov    ds:0xa71dee05,eax
  41698b:	frstor [edi]
  41698d:	add    al,0xd4
  41698f:	loope  0x416941
  416991:	frstor [ebx]
  416993:	add    eax,0xdd98e9d6
  416998:	daa    
  416999:	add    al,0x0
	...
  4169cb:	add    BYTE PTR [ecx+eiz*8+0x523dd98],bh
  4169d2:	mov    esi,0x27dd90e9
  4169d7:	add    al,0xa4
  4169d9:	loope  0x41696b
  4169db:	frstor [ebx]
  4169dd:	add    eax,0xddb8e9a6
  4169e2:	daa    
  4169e3:	add    al,0x8c
  4169e5:	loope  0x41696f
  4169e7:	frstor [ebx]
  4169e9:	add    eax,0xdd80e98e
  4169ee:	daa    
  4169ef:	add    al,0x74
  4169f1:	loope  0x416983
  4169f3:	frstor [ebx]
  4169f5:	add    eax,0x2f7a7600
  4169fa:	pop    eax
  4169fb:	sub    BYTE PTR [edi+0x3a],ah
  4169fe:	and    al,0x59
  416a00:	ss (bad) 
  416a02:	call   FWORD PTR [ebp+0x3a]
  416a05:	aaa    
  416a06:	pop    eax
  416a07:	test   al,0x60
  416a09:	cmp    ah,BYTE PTR [ecx+edx*2]
  416a0c:	push   ds
  416a0d:	(bad)  
  416a0e:	inc    DWORD PTR [ebp+0x4a]
  416a11:	aas    
  416a12:	pop    eax
  416a13:	test   al,0x60
  416a15:	cmp    ah,BYTE PTR [ecx+ebp*8]
  416a18:	push   es
  416a19:	(bad)  
  416a1a:	jmp    FWORD PTR ds:0xa85a070a
  416a20:	pusha  
  416a21:	cmp    ah,BYTE PTR [ecx+esi*8]
  416a24:	cs (bad) 
  416a26:	call   DWORD PTR ds:0xa85a0efa
  416a2c:	pusha  
  416a2d:	cmp    ah,BYTE PTR [ecx+ebx*8]
	...
  416a60:	add    BYTE PTR [eax],al
  416a62:	push   ss
  416a63:	(bad)  
  416a64:	(bad)  
  416a65:	std    
  416a66:	sti    
  416a67:	push   ss
  416a68:	pop    edx
  416a69:	test   al,0x60
  416a6b:	cmp    ah,BYTE PTR [ecx+edx*8]
  416a6e:	mov    esi,0xcbe5ffc5
  416a73:	push   ds
  416a74:	pop    edx
  416a75:	sub    BYTE PTR [edi+0x3a],ah
  416a78:	and    al,0x9
  416a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a7b:	(bad)  
  416a7e:	retf   
  416a7f:	out    0x59,al
  416a81:	sub    BYTE PTR [edi+0x3a],bl
  416a84:	and    al,0x11
  416a86:	(bad)  
  416a87:	(bad)  
  416a8a:	mov    ebx,0x672859ee
  416a8f:	cmp    ah,BYTE PTR [ecx+ebx*8]
  416a92:	mov    dh,0xc5
  416a94:	call   FWORD PTR [ebp+0x2859f67b]
  416a9a:	pop    edi
  416a9b:	cmp    ah,BYTE PTR [ecx+edx*8]
  416a9e:	sahf   
  416a9f:	(bad)  
  416aa2:	(bad)  ds:0x13b5a3a
  416aa8:	jmp    DWORD PTR ds:0x3f5b3a
  416aae:	int    0x2d
  416ab0:	inc    esi
  416ab1:	pop    edx
  416ab2:	or     eax,DWORD PTR [esi]
  416ab4:	jmp    DWORD PTR ds:0x3f57fe
  416aba:	lods   eax,DWORD PTR ds:[esi]
  416abb:	sub    eax,0x60b5a4e
  416ac0:	jmp    DWORD PTR ds:0x3f57d6
	...
  416af6:	add    BYTE PTR [eax],al
  416af8:	ins    DWORD PTR es:[edi],dx
  416af9:	sub    eax,0x5fb5a56
  416afe:	jmp    DWORD PTR ds:0x3f57ee
  416b04:	cmp    eax,0xbb5a622d
  416b09:	add    eax,0x57de25ff
  416b0e:	aas    
  416b0f:	add    BYTE PTR [ebp+0x2d],ch
  416b12:	outs   dx,BYTE PTR ds:[esi]
  416b13:	pop    edx
  416b14:	retf   
  416b15:	add    eax,0x587625ff
  416b1a:	aas    
  416b1b:	add    ch,ch
  416b1d:	and    DWORD PTR [esi+0x5a],esi
  416b20:	or     eax,DWORD PTR [esi]
  416b22:	jmp    DWORD PTR ds:0x3f5b3e
  416b28:	lods   eax,DWORD PTR ds:[esi]
  416b29:	and    DWORD PTR [esi+0x5a],edi
  416b2c:	jnp    0x416b2f
  416b2e:	jmp    DWORD PTR ds:0x3f5b46
  416b34:	popf   
  416b35:	and    DWORD PTR [esi-0xfe84a6],eax
  416b3b:	and    eax,0x3f5b3e
  416b40:	int    0x21
  416b42:	mov    ds,WORD PTR [edx+0x4b]
  416b45:	add    edi,edi
  416b47:	and    eax,0x3f5ae2
  416b4c:	arpl   WORD PTR [ebx-0x12e6601a],dx
  416b52:	add    edi,edi
  416b54:	ds enter 0x40dd,0x63
  416b59:	mov    ebx,0xabe6
	...
  416b8e:	or     ebp,ebp
  416b90:	add    edi,edi
  416b92:	xchg   dh,bh
  416b94:	fld    QWORD PTR [eax+0x63]
  416b97:	lahf   
  416b98:	out    0xb3,al
  416b9a:	test   eax,0x7eff026d
  416b9f:	xchg   esi,eax
  416ba0:	fld    QWORD PTR [eax+0x63]
  416ba3:	(bad)  
  416ba4:	out    0xbb,al
  416ba6:	cdq    
  416ba7:	ins    DWORD PTR es:[edi],dx
  416ba8:	add    bh,bh
  416baa:	xchg   dh,ch
  416bac:	fld    QWORD PTR [eax+0x63]
  416baf:	out    dx,eax
  416bb0:	out    0xc7,al
  416bb2:	mov    ecx,0x3eff026d
  416bb7:	repnz fld QWORD PTR [eax+0x63]
  416bbb:	pop    ss
  416bbc:	out    0xcf,eax
  416bbe:	test   eax,0x46ff026d
  416bc3:	repnz fld QWORD PTR [eax+0x63]
  416bc7:	jmp    esi
  416bc9:	xlat   BYTE PTR ds:[ebx]
  416bca:	mov    DWORD PTR [ebp+0x2],ebp
  416bcd:	(bad)  
  416bce:	ds adc bl,dh
  416bd1:	inc    eax
  416bd2:	arpl   WORD PTR [edi],sp
  416bd4:	in     eax,0xdf
  416bd6:	cmp    ebp,ebp
  416bd8:	add    edi,edi
  416bda:	xchg   BYTE PTR [edx-0x24],al
  416bdd:	inc    eax
  416bde:	arpl   WORD PTR [edi-0x1b],cx
  416be1:	out    0x19,eax
  416be3:	in     eax,dx
  416be4:	add    edi,edi
  416be6:	jle    0x416c3a
  416be8:	fadd   QWORD PTR [eax+0x63]
  416beb:	ja     0x416bd2
  416bed:	repz or ebp,ebp
  416bf0:	add    edi,edi
	...
  416c22:	add    BYTE PTR [eax],al
  416c24:	inc    esi
  416c25:	jbe    0x416c03
  416c27:	inc    eax
  416c28:	arpl   WORD PTR ds:0x49984fb5,ax
  416c2e:	lods   al,BYTE PTR ds:[esi]
  416c2f:	dec    edi
  416c30:	cwde   
  416c31:	dec    ecx
  416c32:	popa   
  416c33:	mov    DWORD PTR [eax+0x1],0xba623b6a
  416c3a:	lock jnp 0x416c3d
  416c3d:	add    eax,0x1a103e9
  416c42:	jmp    0xec42c0cb
  416c47:	or     ebx,DWORD PTR [ebx]
  416c49:	add    ebp,ecx
  416c4b:	add    esp,DWORD PTR [ebx+0x43]
  416c4e:	in     al,0x3
  416c50:	loopne 0x416c8e
  416c52:	loopne 0x416c12
  416c54:	fs jge 0x416c3b
  416c57:	add    esp,DWORD PTR [ebx+0x5]
  416c5a:	sub    eax,DWORD PTR [edi]
  416c5c:	arpl   WORD PTR [eax+eax*2+0x710da613],ax
  416c63:	or     DWORD PTR [ebx+0x5],esp
  416c66:	jmp    0x6a46ccb0
  416c6b:	cmp    ebp,DWORD PTR [edx+edi*4-0x10]
  416c6f:	jnp    0x416ccd
  416c71:	add    eax,0x12103e9
  416c76:	jmp    0x840658ff
  416c7b:	or     ebp,DWORD PTR [ebx+0x6303e90a]
  416c81:	inc    ebx
  416c82:	in     al,dx
  416c83:	add    ebx,DWORD PTR [esi+0x3e885]
	...
  416cb9:	add    BYTE PTR [ebx-0x46],ah
  416cbc:	lock jnp 0x416d17
  416cbf:	add    eax,0xa103e9
  416cc4:	jmp    0xe947cfc9
  416cc9:	add    esi,DWORD PTR [esi]
  416ccb:	or     eax,0x5630e81
  416cd0:	jmp    0x46cd16
  416cd5:	hlt    
  416cd6:	pusha  
  416cd7:	add    eax,DWORD PTR [eax]
  416cd9:	jmp    0xf9f96c81
  416cde:	pusha  
  416cdf:	add    eax,0x55bab00
  416ce4:	cmp    eax,0x564e9
  416ce9:	or     al,0x67
  416ceb:	jge    0x416cfe
  416ced:	jmp    0xe6037252
  416cf2:	pusha  
  416cf3:	cli    
  416cf4:	jmp    eax
  416cf6:	pusha  
  416cf7:	add    eax,0x12d8e17d
  416cfc:	add    cl,ch
  416cfe:	pusha  
  416cff:	inc    ebx
  416d00:	add    ebp,ecx
  416d02:	arpl   WORD PTR ds:0xb860e910,ax
  416d08:	pop    es
  416d09:	xchg   ecx,eax
  416d0a:	dec    ebp
  416d0b:	add    eax,0x2a2e900
  416d10:	add    ah,bh
  416d12:	pusha  
  416d13:	in     eax,0xff
  416d15:	call   0xd1f96c3d
  416d1a:	pusha  
  416d1b:	add    eax,0x2b00
	...
  416d50:	pop    ebx
  416d51:	add    eax,0x3720e93d
  416d56:	(bad)  
  416d57:	xchg   esp,eax
  416d58:	push   0x60e9197d
  416d5d:	add    eax,0xf860edc2
  416d62:	jmp    FWORD PTR [eax+0x5f]
  416d65:	add    eax,0x1a58e17d
  416d6a:	add    cl,ch
  416d6c:	pusha  
  416d6d:	inc    ebx
  416d6e:	add    ebp,ecx
  416d70:	ror    DWORD PTR [ebp+0x3c],1
  416d73:	jmp    0xe64171d8
  416d78:	add    eax,DWORD PTR [esi-0x74]
  416d7b:	sbb    eax,0x8b1766
  416d80:	sti    
  416d81:	les    eax,FWORD PTR [edx]
  416d83:	add    BYTE PTR [ecx],bh
  416d85:	sbb    DWORD PTR [edx],0xff028a04
  416d8b:	jne    0x416d34
  416d8d:	mov    edi,DWORD PTR [edi+0x10]
  416d90:	jle    0x416d94
  416d92:	add    BYTE PTR [ecx+0x419fb],cl
  416d98:	mov    al,BYTE PTR [edx-0x3b]
  416d9b:	add    DWORD PTR [esi+0x72fffffe],0xf3000002
  416da5:	or     BYTE PTR [esi],0x4
  416da8:	dec    edx
  416da9:	add    al,BYTE PTR [ebx-0x1e184]
  416daf:	mov    dl,bl
  416db1:	sbb    al,BYTE PTR [eax+eax*1]
	...
  416de4:	add    BYTE PTR [eax],al
  416de6:	cmp    ch,BYTE PTR [esi+0x9]
  416de9:	mov    cl,BYTE PTR [ebx+0x4]
  416dec:	sar    dh,0x8a
  416def:	mov    bh,bh
  416df1:	sar    DWORD PTR [esi],0x2
  416df4:	shl    BYTE PTR [ecx],1
  416df6:	js     0x416df6
  416df8:	inc    DWORD PTR [edx+0x4168b]
  416dfe:	or     dh,bh
  416e00:	jae    0x416e1f
  416e02:	xchg   ecx,eax
  416e03:	or     DWORD PTR [esi],0x8901fa04
  416e09:	xor    edx,0xcafffffd
  416e0f:	mov    esi,0x1fe1c7f
  416e14:	add    BYTE PTR [eax],cl
  416e16:	cli    
  416e17:	add    DWORD PTR [eax],eax
  416e19:	mov    DWORD PTR [ebx+0x12],ecx
  416e1c:	add    al,0x0
  416e1e:	retf   0x878a
  416e21:	sbb    BYTE PTR [esi+0x5bd00001],bh
  416e27:	les    eax,FWORD PTR [ecx+0x6306381]
  416e2d:	add    BYTE PTR [ebx+0x47],ah
  416e30:	mov    dh,0x1c
  416e32:	fsubr  DWORD PTR [ebx+edx*1-0x76d39cfc]
  416e39:	cmp    BYTE PTR [ebx+0x28],0x2
  416e3d:	add    BYTE PTR [ebx],ah
  416e3f:	pop    edi
  416e40:	sbb    BYTE PTR [ebx],0x67
  416e43:	sub    al,0x2
  416e45:	or     BYTE PTR [ebx+0x2c],ah
  416e48:	add    cl,BYTE PTR [ecx+0x0]
	...
  416e7a:	add    BYTE PTR [eax],al
  416e7c:	loop   0x416eb9
  416e7e:	push   es
  416e7f:	add    BYTE PTR [ebx-0x5d],ah
  416e82:	mov    dl,BYTE PTR [edi]
  416e84:	addr16 sub al,0x2
  416e87:	mov    ah,BYTE PTR [edx+0x2a]
  416e8a:	inc    edx
  416e8b:	std    
  416e8c:	and    esp,DWORD PTR [edi-0x15173cfe]
  416e92:	out    0x3,eax
  416e94:	fdiv   DWORD PTR [edx-0x1a]
  416e97:	add    ebp,DWORD PTR [esi+0x3532d37c]
  416e9d:	stos   BYTE PTR es:[edi],al
  416e9e:	retf   0xe9ff
  416ea1:	(bad)  
  416ea2:	and    dh,0x62
  416ea5:	or     eax,0x5ad6452c
  416eaa:	rol    DWORD PTR [edx-0x104ce1e5],cl
  416eb0:	loopne 0x416ea6
  416eb2:	add    bh,BYTE PTR [ebp-0x1c313f4]
  416eb8:	(bad)  
  416eb9:	xchg   ecx,eax
  416eba:	or     DWORD PTR [ecx+esi*2+0x6f],esi
  416ebe:	xchg   esi,edi
  416ec0:	(bad)  
  416ec1:	lds    ebx,FWORD PTR [edi]
  416ec3:	add    al,0x63
  416ec5:	push   ds
  416ec6:	mov    ch,0x18
  416ec8:	fcomp  DWORD PTR [ebp+0x1e630413]
  416ece:	mov    DWORD PTR [eax+0x22a7b],eax
  416ed4:	and    eax,DWORD PTR ds:0x9687a70
  416eda:	jmp    0xf8c858e2
  416edf:	pop    es
	...
  416f10:	add    BYTE PTR [eax],al
  416f12:	arpl   WORD PTR ds:0x9548262,ax
  416f18:	jmp    0xe7891c20
  416f1d:	mov    bh,0x6a
  416f1f:	jg     0x416ef1
  416f21:	add    DWORD PTR [eax+0x748ba933],edi
  416f27:	and    dl,ch
  416f29:	push   ebx
  416f2a:	fs push es
  416f2c:	push   eax
  416f2d:	pop    ds
  416f2e:	addr16 add eax,0x805bb6e9
  416f34:	adc    esp,DWORD PTR [bx+0x5]
  416f38:	jmp    0xe54f52c7
  416f3d:	add    esp,DWORD PTR [ebx-0x3b]
  416f40:	pop    edi
  416f41:	jp     0x416fbb
  416f43:	or     ecx,ebp
  416f45:	add    ebx,edx
  416f47:	test   eax,edi
  416f49:	pop    es
  416f4a:	arpl   WORD PTR ds:0x9548272,ax
  416f50:	jmp    0xeb4e5858
  416f55:	pop    eax
  416f56:	cs dec eax
  416f58:	pop    ss
  416f59:	sub    ecx,esp
  416f5b:	and    ah,bh
  416f5d:	mov    esi,DWORD PTR [edx+edi*4+0x5a]
  416f61:	fsub   DWORD PTR [ebx+0x5e]
  416f64:	int3   
  416f65:	pop    es
  416f66:	arpl   WORD PTR ds:0x85d81a9c,ax
  416f6c:	clc    
  416f6d:	pop    es
  416f6e:	arpl   WORD PTR ds:0x94c8260,ax
  416f74:	jmp    0x416f7c
	...
  416fa5:	add    BYTE PTR [eax],al
  416fa7:	add    BYTE PTR [ebx+0x5f1f3f7e],ah
  416fad:	add    eax,0x14e38ae9
  416fb2:	add    ch,ch
  416fb4:	pusha  
  416fb5:	add    eax,0x968688b
  416fba:	add    cl,ch
  416fbc:	xchg   edx,eax
  416fbd:	inc    esi
  416fbe:	add    BYTE PTR [ebp+0x6d],dl
  416fc1:	jg     0x416fd2
  416fc3:	jmp    0x416fd3
  416fc5:	xor    al,cl
  416fc7:	popa   
  416fc8:	push   edi
  416fc9:	and    BYTE PTR [ecx],al
  416fcb:	cdq    
  416fcc:	mov    edi,0x9cdda904
  416fd1:	xor    edi,esi
  416fd3:	cmp    al,0x76
  416fd5:	add    BYTE PTR [eax-0x1cc7327],0x70
  416fdc:	ficomp WORD PTR [ebx]
  416fde:	add    al,0xe9
  416fe0:	pusha  
  416fe1:	lds    ecx,FWORD PTR [eax+0x95b50]
  416fe7:	jmp    0xed50f4cb
  416fec:	pusha  
  416fed:	add    eax,0x97f708b
  416ff2:	add    cl,ch
  416ff4:	mov    al,0xe5
  416ff6:	pop    esi
  416ff7:	cvtpi2ps xmm0,QWORD PTR [ebp+0x3]
  416ffb:	jmp    0xcdcc4a2d
  417000:	sbb    al,0x3
  417002:	push   esi
  417003:	sbb    bl,BYTE PTR [edi+0x584c82db]
  417009:	mov    ebx,0x8404
	...
  41703e:	pop    eax
  41703f:	add    eax,0xaeede900
  417044:	and    ebx,ebp
  417046:	in     eax,0x3b
  417048:	sub    dh,BYTE PTR [edx+ebx*8]
  41704b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41704c:	and    ebp,ecx
  41704e:	(bad)  
  41704f:	adc    eax,DWORD PTR [edx+eax*2+0x248b12b3]
  417056:	in     al,0x58
  417058:	mov    WORD PTR [edx+0x67],?
  41705b:	add    eax,0x30fa0000
  417060:	sbb    BYTE PTR [esp+eax*8+0x41],dh
  417064:	inc    eax
  417065:	test   DWORD PTR [ebx+0x7a83f474],eax
  41706b:	push   es
  41706c:	test   ecx,ecx
  41706e:	daa    
  41706f:	add    DWORD PTR [ebx+0x1e3c8c0],eax
  417075:	or     DWORD PTR [edx],0x8
  417078:	inc    edi
  417079:	inc    esi
  41707a:	cmp    DWORD PTR [edx+0x22],ebp
  41707d:	sbb    al,0xbb
  41707f:	jne    0x41704d
  417081:	pop    edi
  417082:	jl     0x4170d0
  417084:	pop    ecx
  417085:	ret    0x67e
  417088:	mov    edx,DWORD PTR [esi+eiz*2+0x5]
  41708c:	push   ebp
  41708d:	push   esi
  41708e:	adc    ecx,edi
  417090:	lds    eax,FWORD PTR [esi-0x1cd6e]
  417096:	mov    al,BYTE PTR [esi]
  417098:	add    BYTE PTR [eax],al
  41709a:	add    BYTE PTR [eax],al
  41709c:	test   cl,cl
  41709e:	ins    DWORD PTR es:[edi],dx
  41709f:	mov    dl,0x2e
  4170a1:	add    DWORD PTR [eax],eax
	...
  4170d3:	add    BYTE PTR [edx+0x6],cl
  4170d6:	push   edi
  4170d7:	mov    ecx,DWORD PTR [esi+0x52]
  4170da:	adc    al,BYTE PTR [ebx+0x575ffbd]
  4170e0:	std    
  4170e1:	(bad)  
  4170e2:	(bad)  
  4170e3:	dec    DWORD PTR [edx-0x7d]
  4170e6:	shr    BYTE PTR [ebx],0x85
  4170e9:	xchg   esi,eax
  4170ea:	cmp    BYTE PTR [eax],cl
  4170ec:	push   ss
  4170ed:	inc    eax
  4170ee:	dec    ebp
  4170ef:	inc    eax
  4170f0:	mov    bh,0xef
  4170f2:	jae    0x4170ea
  4170f4:	mov    DWORD PTR [edx+ebx*1-0xf9f5fc],eax
  4170fb:	jne    0x41711c
  4170fd:	add    DWORD PTR [eax+edx*1-0x76fffa0a],0xffffff84
  417105:	push   cs
  417106:	add    al,0x0
  417108:	arpl   WORD PTR [edx+eax*8],bx
  41710b:	(bad)  
  41710c:	in     eax,0x1f
  41710e:	(bad)  
  41710f:	jmp    esp
  417111:	xor    eax,DWORD PTR [edx]
  417113:	add    BYTE PTR [ebx-0x4b],ah
  417116:	or     BYTE PTR [edi],0x5f
  417119:	sbb    al,0x2
  41711b:	mov    esp,ebp
  41711d:	push   ebx
  41711e:	(bad)  
  41711f:	inc    esp
  417121:	imul   esp,ebx,0xffffff8a
  417124:	in     eax,0x2b
  417126:	(bad)  
  417127:	push   DWORD PTR [ebp+eiz*4+0x23db5f0d]
  41712e:	aaa    
  41712f:	test   DWORD PTR [ebx+0x20],edx
  417132:	add    al,BYTE PTR [eax]
  417134:	cmp    eax,0x74611
	...
  417169:	add    BYTE PTR [ebx-0x5f],ah
  41716c:	cmp    BYTE PTR [ebx-0x35],dh
  41716f:	sahf   
  417170:	dec    edx
  417171:	(bad)  
  417172:	bound  edi,QWORD PTR [edx+0x1c630417]
  417178:	test   DWORD PTR [eax+0x6a],ebp
  41717b:	adc    DWORD PTR [ebx],ebx
  41717d:	mov    esp,ebp
  41717f:	sub    edi,esi
  417181:	jmp    DWORD PTR [esp+esi*4-0x7f]
  417185:	pop    ss
  417186:	addr16 push ds
  417188:	add    al,BYTE PTR [eax-0x16]
  41718b:	enter  0x417,0x63
  41718f:	push   ds
  417190:	mov    DWORD PTR [ebp+0x22273],eax
  417196:	call   0x63458d43
  41719b:	push   ds
  41719c:	mov    WORD PTR [edi],cs
  41719e:	popa   
  41719f:	in     al,dx
  4171a0:	cmp    ecx,eax
  4171a2:	fisttp DWORD PTR [esi+0x1]
  4171a5:	mov    ?,WORD PTR [edi+0x2a]
  4171a8:	add    al,BYTE PTR [eax]
  4171aa:	mov    ss,WORD PTR [ebp-0x75]
  4171ad:	test   DWORD PTR [ebx+0x2a],esi
  4171b0:	add    al,BYTE PTR [eax]
  4171b2:	fiadd  DWORD PTR ds:0x5671c6f
  4171b8:	jmp    0xf4a15d80
  4171bd:	(bad)  
  4171be:	in     al,dx
  4171bf:	xor    BYTE PTR [edi-0x7e],bl
  4171c2:	push   esp
  4171c3:	or     ecx,ebp
  4171c5:	add    ebp,eax
  4171c7:	xchg   eax,esp
  4171c9:	call   esp
  4171cb:	xor    BYTE PTR [edx+0x14],ah
	...
  4171fe:	add    BYTE PTR [eax],al
  417200:	popa   
  417201:	push   ebx
  417202:	out    dx,al
  417203:	inc    ebp
  417204:	fcom   QWORD PTR ds:0x95889e8
  41720a:	jmp    0x624fa012
  41720f:	sbb    DWORD PTR [ecx+ecx*1-0x17],0xe087da03
  417217:	call   FWORD PTR [eax+esi*1+0x11c68b28]
  41721e:	in     eax,dx
  41721f:	add    esp,DWORD PTR [ebx+0x7e]
  417222:	adc    bx,WORD PTR [edi+0x5]
  417226:	jmp    0xe54f58b7
  41722b:	add    esp,DWORD PTR [ebx+0x7b]
  41722e:	loopne 0x417235
  417230:	call   0x9be4:0x8d8ca72f
  417237:	mov    esp,DWORD PTR [ebx+edx*8+0x71]
  41723b:	dec    ecx
  41723c:	cmp    al,0x4e
  41723e:	je     0x417278
  417240:	dec    ebp
  417241:	jl     0x4171e8
  417243:	test   BYTE PTR [ecx+ecx*1],ah
  417246:	mov    ecx,0x2c1d2e8c
  41724b:	aaa    
  41724c:	xor    eax,0xe1486130
  417251:	and    eax,0x3ed9d2ea
  417256:	push   eax
  417257:	js     0x417271
  417259:	xor    BYTE PTR ds:0x5fd84,bh
  41725f:	sahf   
  417260:	fild   WORD PTR [ecx-0x19]
  417263:	jne    0x417265
	...
  417295:	add    BYTE PTR [edi+ebp*1-0x2],cl
  417299:	(bad)  
  41729a:	sbb    dl,cl
  41729c:	shl    ecx,0x60
  41729f:	test   al,cl
  4172a1:	push   ss
  4172a2:	popa   
  4172a3:	jg     0x4172c0
  4172a5:	in     eax,0x60
  4172a7:	add    eax,0xba69908d
  4172ac:	sbb    BYTE PTR [edx-0x1e],dh
  4172af:	inc    DWORD PTR [ebx]
  4172b1:	jmp    0xd1c6f116
  4172b6:	les    ebp,FWORD PTR [edi]
  4172b8:	(bad)  
  4172b9:	sub    esi,ebp
  4172bb:	popa   
  4172bc:	sbb    esp,ebp
  4172be:	pusha  
  4172bf:	add    eax,0x9576f89
  4172c4:	add    cl,ch
  4172c6:	(bad)  [ecx+0x560ed17]
  4172cc:	mov    bl,cl
  4172ce:	bound  edx,QWORD PTR [ebx-0x3]
  4172d1:	stos   DWORD PTR es:[edi],eax
  4172d2:	(bad)  
  4172d4:	add    BYTE PTR [edi+0x6b],bl
  4172d7:	or     DWORD PTR [eax],eax
  4172d9:	jmp    0x67cc7f91
  4172de:	dec    edi
  4172df:	or     DWORD PTR [eax],eax
  4172e1:	jmp    0xe558fcc5
  4172e6:	pusha  
  4172e7:	add    eax,0xac57040
  4172ec:	add    al,0xe9
  4172ee:	pusha  
  4172ef:	jl     0x417276
  4172f1:	(bad)  [edi+ebp*1-0x2]
  4172f5:	(bad)  
  4172f6:	lds    edx,FWORD PTR [esi]
  4172f8:	add    al,0xe9
	...
  41732a:	add    BYTE PTR [eax],al
  41732c:	pusha  
  41732d:	jnp    0x41733e
  41732f:	jmp    0x4172c3
  417331:	xor    cl,al
  417333:	popa   
  417334:	push   edi
  417335:	add    al,0x8e
  417337:	in     eax,dx
  417338:	and    al,0x2f
  41733a:	inc    BYTE PTR [eax]
  41733c:	fist   WORD PTR [ecx]
  41733e:	mov    eax,DWORD PTR [esi-0x1d0c6]
  417344:	sub    DWORD PTR [edi+0x2fa0416],0x40
  41734b:	mov    DWORD PTR [ebp+ecx*1-0x7df5fffc],edx
  417352:	test   BYTE PTR [eax],dl
  417354:	inc    BYTE PTR [edx]
  417356:	add    BYTE PTR [ebx+0x4117c],cl
  41735c:	retf   0xe7c
  41735f:	add    bh,BYTE PTR [eax-0x9]
  417362:	ror    BYTE PTR [eax+0x1c8e09aa],0xbe
  417369:	add    al,BYTE PTR [eax]
  41736b:	jne    0x4173d0
  41736d:	jp     0x4172f3
  41736f:	adc    BYTE PTR [esi+0x3c890002],bh
  417375:	or     al,BYTE PTR [eax+eax*1]
  417378:	mov    edx,0x86ae8742
  41737d:	cs (bad) 
  41737f:	call   DWORD PTR [ebx]
  417381:	mov    al,0xe
  417383:	add    al,0x7a
  417385:	add    cl,BYTE PTR [ebx-0x1d14d7a]
  41738b:	(bad)  
  41738c:	mov    edx,0x8dff22
	...
  4173c1:	add    BYTE PTR [esi+0x2e],dh
  4173c4:	(bad)  
  4173c5:	dec    DWORD PTR [edi+0x10]
  4173c8:	mov    eax,DWORD PTR [esi-0x1d196]
  4173ce:	shl    DWORD PTR [eax+0x24a0416],cl
  4173d4:	inc    eax
  4173d5:	mov    DWORD PTR [esi+edx*1-0x7ec5fffc],esp
  4173dc:	test   BYTE PTR [eax],dl
  4173de:	dec    esi
  4173df:	add    al,BYTE PTR [eax]
  4173e1:	mov    edi,DWORD PTR [edx+ecx*1+0x1c630004]
  4173e8:	push   edx
  4173e9:	pop    ds
  4173ea:	(bad)  
  4173eb:	into   
  4173ec:	push   ss
  4173ed:	add    al,0x63
  4173ef:	sbb    al,0xaf
  4173f1:	sbb    al,ch
  4173f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173f4:	adc    al,BYTE PTR [ebx+eiz*2]
  4173f7:	sbb    al,0x8b
  4173f9:	test   DWORD PTR [ebx+0x28],ebp
  4173fc:	add    al,BYTE PTR [eax]
  4173fe:	mov    ds:0x5f1b64b5,eax
  417403:	sbb    al,0x2
  417405:	mov    ebp,esp
  417407:	sub    edi,esi
  417409:	jmp    esp
  41740b:	mov    ds:0x1c67177c,al
  417410:	add    dl,al
  417412:	sbb    DWORD PTR ds:0x1c671b84,0x2
  417419:	jne    0x417485
  41741b:	mov    ds:0x1c670f7c,eax
  417420:	add    cl,BYTE PTR [ecx+0x3dd]
	...
  417456:	add    BYTE PTR [eax],al
  417458:	arpl   sp,bx
  41745a:	mov    ch,BYTE PTR [ebp+0x22847]
  417460:	jmp    0x871c:0x6304139d
  417467:	mov    ch,0x6b
  417469:	and    BYTE PTR [edx],al
  41746b:	add    BYTE PTR [ebx-0x5ea329fb],dh
  417471:	xor    eax,DWORD PTR [edx]
  417473:	mov    ebx,DWORD PTR [edi]
  417475:	dec    eax
  417476:	(bad)  
  417477:	push   ebp
  417478:	adc    al,0xa3
  41747a:	mov    bh,0x23
  41747c:	push   ebx
  41747d:	mov    ds:0x1ee33c32,eax
  417482:	add    al,BYTE PTR [eax]
  417484:	ror    BYTE PTR [edx+0x7f],1
  417487:	(bad)  
  417488:	addr16 das 
  41748a:	or     edi,DWORD PTR [ebx]
  41748c:	fld    QWORD PTR [edx-0x2]
  41748f:	(bad)  
  417490:	cmp    al,0x6
  417492:	(bad)  
  417494:	sub    eax,0xe144014e
  417499:	and    eax,0x45e1d4ee
  41749e:	jecxz  0x417475
  4174a0:	and    bh,dh
  4174a2:	call   0xe523539f
  4174a7:	add    esp,DWORD PTR [ebx-0x4f]
  4174aa:	repz test BYTE PTR [ebp+eax*1+0x27003e9],0x6a
  4174b3:	and    eax,0xf6f82062
  4174b8:	in     al,dx
  4174b9:	add    ecx,ebp
  4174bb:	add    eax,DWORD PTR [eax]
	...
  4174ed:	add    BYTE PTR [ecx+0x6],dh
  4174f0:	sahf   
  4174f1:	neg    ah
  4174f3:	test   eax,0x65103e8
  4174f8:	scas   al,BYTE PTR es:[edi]
  4174f9:	inc    edx
  4174fa:	(bad)  
  4174fb:	std    
  4174fc:	cdq    
  4174fd:	add    BYTE PTR [ecx+ecx*1],0x99
  417501:	sub    eax,DWORD PTR [esi+0xd34e52f]
  417507:	sub    BYTE PTR [esi-0xbe26b78],0x39
  41750e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41750f:	sub    al,0x5b
  417511:	mov    edi,0xd521ff74
  417516:	ss inc edi
  417518:	lock add esi,DWORD PTR [ebx*1+0x2c8539e4]
  417520:	or     eax,0x4701bc81
  417525:	inc    edx
  417526:	pop    esp
  417527:	add    eax,0xe108893a
  41752c:	loopne 0x4174fc
  41752e:	push   cs
  41752f:	adc    BYTE PTR [edi-0x1322e180],0x3
  417536:	arpl   WORD PTR ds:0xfe70516,ax
  41753c:	add    al,ch
  41753e:	pusha  
  41753f:	add    eax,0x2be07281
  417544:	(bad)  
  417545:	jmp    0xddc43a3d
  41754a:	or     al,0x14
  41754c:	add    al,0xda
  41754e:	sub    ah,BYTE PTR [esi+esi*1]
  417551:	push   edx
	...
  417582:	add    BYTE PTR [eax],al
  417584:	push   edi
  417585:	sub    ecx,DWORD PTR [edx-0x523b7c9]
  41758b:	ds push edi
  41758d:	jg     0x41755c
  41758f:	inc    ecx
  417590:	dec    edx
  417591:	cs (bad) 
  417593:	cs jmp 0xf91:0xea0123c7
  41759b:	in     eax,0x60
  41759d:	add    eax,0x504228a
  4175a2:	add    ah,BYTE PTR [eax]
  4175a4:	bound  eax,QWORD PTR [esi+0x5e]
  4175a7:	jno    0x41760b
  4175a9:	sub    al,0x85
  4175ab:	fxch   st(4)
  4175ad:	sub    edi,esi
  4175af:	pusha  
  4175b0:	out    dx,al
  4175b1:	out    0x3,eax
  4175b3:	jmp    0x429e4118
  4175b8:	sbb    eax,0x206a0004
  4175bd:	sub    eax,DWORD PTR [eax]
  4175bf:	xchg   edi,eax
  4175c0:	push   ebx
  4175c1:	add    DWORD PTR [eax],eax
  4175c3:	jmp    0x3c4a10ab
  4175c8:	data16 add BYTE PTR [ebp+0x564d9],0x60
  4175d0:	fst    DWORD PTR [ebx]
  4175d2:	add    al,0xe9
  4175d4:	pusha  
  4175d5:	lds    ecx,FWORD PTR [eax+0x15357]
  4175db:	jmp    0xed50f7cf
  4175e0:	pusha  
  4175e1:	add    eax,0x16f678b
	...
  41761a:	dec    edx
  41761b:	test   eax,0xf8130206
  417620:	mov    edi,0xbe024288
  417625:	sbb    al,0x46
  417627:	pop    es
  417628:	add    BYTE PTR [ebp+0x63],dh
  41762b:	stos   BYTE PTR es:[edi],al
  41762c:	test   BYTE PTR [eax],dl
  41762e:	inc    esi
  41762f:	pop    es
  417630:	add    BYTE PTR [ecx+0x3f9b4],cl
  417636:	or     al,BYTE PTR [edi-0x79]
  417639:	scas   al,BYTE PTR es:[edi]
  41763a:	inc    BYTE PTR [edx]
  41763c:	add    BYTE PTR [eax],al
  41763e:	xchg   ebx,eax
  41763f:	jg     0x41764f
  417641:	add    al,0xfa
  417643:	push   es
  417644:	mov    eax,DWORD PTR [esi+0x312]
  41764a:	cmp    ah,BYTE PTR [ecx]
  41764c:	mov    ebx,edx
  41764e:	cmp    ecx,DWORD PTR [ebx]
  417650:	pop    es
  417651:	cmp    DWORD PTR [eax],0x3
  417654:	push   edx
  417655:	mov    edi,DWORD PTR [ecx+ecx*1-0x38]
  417659:	cli    
  41765a:	pop    ebp
  41765b:	test   BYTE PTR [ecx+0x2aa86],0x0
  417662:	inc    edx
  417663:	stc    
  417664:	mov    bh,0x1
  417666:	retf   0x6
  417669:	add    DWORD PTR [esi+edx*1+0x4],eax
  41766d:	add    BYTE PTR [edx-0x49db6357],bh
  417673:	push   es
  417674:	add    BYTE PTR [ecx-0x1794f],al
  41767a:	mov    dh,BYTE PTR [ebx+0x16]
  41767d:	add    DWORD PTR [eax],0x0
	...
  4176b0:	push   ds
  4176b1:	sbb    eax,0x6a010216
  4176b6:	and    bl,BYTE PTR [eax]
  4176b8:	pop    ebx
  4176b9:	stos   BYTE PTR es:[edi],al
  4176ba:	int3   
  4176bb:	call   0x3f4eb5
  4176c0:	sub    eax,0x635b5b57
  4176c5:	pop    esi
  4176c6:	cli    
  4176c7:	jmp    ebx
  4176c9:	xchg   esi,eax
  4176ca:	add    al,BYTE PTR ds:0x3b41c63
  4176d0:	jp     0x4176b2
  4176d2:	out    0x17,eax
  4176d4:	loop   0x41768c
  4176d6:	add    bh,BYTE PTR [ebp+0x63]
  4176d9:	sbb    al,0xb4
  4176db:	add    ecx,DWORD PTR [edx-0x27e819a8]
  4176e1:	push   edi
  4176e2:	out    0x17,al
  4176e4:	xchg   edx,eax
  4176e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176e6:	inc    eax
  4176e7:	out    0x8f,eax
  4176e9:	(bad)  
  4176ea:	xor    esi,edi
  4176ec:	mov    ah,0x62
  4176ee:	iret   
  4176ef:	pop    edx
  4176f0:	and    DWORD PTR [edx+eax*1],esi
  4176f3:	(bad)  
  4176f4:	fld    QWORD PTR [ebx]
  4176f6:	or     BYTE PTR [eax],al
  4176f8:	arpl   WORD PTR ds:0x9d630002,bx
  4176fe:	sub    eax,0x21c637f
  417703:	jae    0x41769f
  417705:	lahf   
  417706:	scas   al,BYTE PTR es:[edi]
  417707:	and    edi,DWORD PTR [ebx+0x20]
  41770a:	mov    ch,0x41
  41770c:	cwde   
  41770d:	mov    ds:0x1c6303e6,al
  417712:	mov    dh,0x39
	...
  417744:	add    BYTE PTR [eax],al
  417746:	mov    ebx,0xbcfe2c25
  41774b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41774c:	inc    eax
  41774d:	out    0x60,eax
  41774f:	es xor dh,bh
  417752:	fcomp  DWORD PTR [ecx+0x1b]
  417755:	int3   
  417756:	stos   BYTE PTR es:[edi],al
  417757:	push   edx
  417758:	xor    BYTE PTR [ecx-0x74f3ffd9],cl
  41775e:	in     eax,0x4b
  417760:	push   es
  417761:	add    BYTE PTR [ebx-0x4a],ah
  417764:	push   esp
  417765:	and    esp,DWORD PTR [edx+0x1e]
  417768:	push   esp
  417769:	add    DWORD PTR [ecx+0x74007bfa],esp
  41776f:	add    al,0x6f
  417771:	adc    al,0x67
  417773:	add    eax,0xe0c67ae9
  417778:	in     al,dx
  417779:	add    esp,DWORD PTR [ebx-0x39]
  41777c:	sub    ecx,ebp
  41777e:	and    bh,dh
  417780:	call   0xe76a9509
  417785:	jno    0x4177ef
  417787:	add    ecx,ebp
  417789:	add    ebp,esi
  41778b:	cwde   
  41778c:	fbstp  TBYTE PTR [esi+0x146e7c5b]
  417792:	addr16 add eax,0xdde7ae9
  417798:	in     eax,dx
  417799:	add    esp,DWORD PTR [ebx-0x3b]
  41779c:	pop    edi
  41779d:	bound  edi,QWORD PTR [eax+0x1]
  4177a0:	jmp    0xd8c151a8
  4177a5:	pop    es
  4177a6:	arpl   WORD PTR ds:0x8a62,ax
	...
  4177dc:	push   esp
  4177dd:	add    ecx,ebp
  4177df:	add    ebp,ecx
  4177e1:	adc    eax,0x43ee55eb
  4177e6:	jo     0x4177fc
  4177e8:	bound  esp,QWORD PTR [edi-0xc]
  4177eb:	pop    es
  4177ec:	arpl   WORD PTR ds:0x7fe80a94,ax
  4177f2:	fadd   DWORD PTR [edi]
  4177f4:	arpl   WORD PTR ds:0x16c8a70,ax
  4177fa:	jmp    0x3ebf9b02
  4177ff:	adc    BYTE PTR [edi+0x5],bl
  417802:	jmp    0xe5575e81
  417807:	add    esp,DWORD PTR [ebx+0x7c]
  41780a:	outs   dx,BYTE PTR ds:[esi]
  41780b:	or     esp,DWORD PTR [edi+0x5]
  41780e:	jmp    0x672dec66
  417813:	out    0x60,eax
  417815:	add    eax,0x7c12b7e9
  41781a:	jmp    FWORD PTR [ecx+0x6a072021]
  417820:	and    BYTE PTR [ebx],al
  417822:	push   eax
  417823:	xchg   ecx,eax
  417824:	retf   0xfe2d
  417827:	sahf   
  417828:	out    0x79,eax
  41782a:	paddsw mm4,QWORD PTR [eax+0x5]
  41782e:	mov    al,dh
  417830:	enter  0x5,0xe9
  417834:	pusha  
  417835:	push   es
  417836:	xchg   cl,bl
  417838:	pop    esp
  417839:	add    eax,0xe3d26000
  41783e:	add    ebp,ecx
	...
  417870:	add    BYTE PTR [eax],al
  417872:	pusha  
  417873:	xchg   dl,bh
  417875:	imul   esp,DWORD PTR [eax+0x5],0x8458da00
  41787c:	imul   ecx,DWORD PTR ds:0xb58b036f,0xfffffffc
  417883:	rsqrtps xmm6,XMMWORD PTR [edx-0x5e]
  417887:	and    BYTE PTR [ebx+0x40],ah
  41788a:	push   ebx
  41788b:	daa    
  41788c:	pop    esi
  41788d:	xchg   edi,eax
  41788e:	sub    eax,0x60e1c1cb
  417893:	xchg   dl,bh
  417895:	jmp    0x9b417dff
  41789a:	pop    esp
  41789b:	fiadd  WORD PTR [ebx-0x33]
  41789e:	push   0x5e9fa86
  4178a3:	sub    dh,bh
  4178a5:	jnp    0x417890
  4178a7:	fadd   QWORD PTR [ebx-0x3b]
  4178aa:	pop    eax
  4178ab:	jl     0x417900
  4178ad:	int    0x68
  4178af:	ror    DWORD PTR [edx-0x712a7e1],cl
  4178b5:	out    0x7c,al
  4178b7:	(bad)  
  4178b8:	pop    ebp
  4178b9:	cmp    al,0x98
  4178bb:	inc    ebp
  4178bc:	pop    es
  4178bd:	jmp    0xe55ce029
  4178c2:	pusha  
  4178c3:	add    eax,0xaa830075
  4178c8:	test   BYTE PTR [eax],dl
  4178ca:	jle    0x4178cf
  4178cc:	add    BYTE PTR [ecx+0x3f90c],cl
  4178d2:	mov    al,BYTE PTR [ebx-0x79]
  4178d5:	scas   al,BYTE PTR es:[edi]
	...
  417906:	add    BYTE PTR [eax],al
  417908:	data16 std 
  41790a:	(bad)  
  41790b:	push   ebx
  41790d:	jle    0x41791d
  41790f:	add    al,0x4a
  417911:	add    ecx,DWORD PTR [ebx-0xad7a]
  417917:	(bad)  
  417918:	jmp    0xffff:0x26bdff21
  41791f:	(bad)  
  417920:	aas    
  417921:	cli    
  417922:	mov    al,BYTE PTR [esi-0xe6]
  417928:	mov    bl,0x7f
  41792a:	push   ss
  41792b:	add    al,0x3a
  41792d:	add    eax,DWORD PTR [eax-0x77]
  417930:	in     al,0x15
  417932:	add    al,0x0
  417934:	or     ch,BYTE PTR [edx+0x2fe1084]
  41793a:	add    BYTE PTR [ebx+0x3f97c],cl
  417940:	or     dl,bl
  417942:	push   ds
  417943:	mov    ecx,esi
  417945:	push   ds
  417946:	push   ss
  417947:	push   edx
  417948:	jno    0x417931
  41794a:	out    0xd4,al
  41794c:	inc    edx
  41794d:	(bad)  
  41794e:	std    
  41794f:	pop    edi
  417950:	adc    al,0x56
  417952:	pop    ecx
  417953:	ret    0x2c2
  417956:	mov    eax,DWORD PTR [esi+ebx*4-0x2]
  41795a:	mov    WORD PTR [eax-0x7546],ss
  417960:	icebp  
  417961:	xchg   ecx,eax
  417962:	add    al,BYTE PTR [edx+ecx*8]
  417965:	add    dh,BYTE PTR [esi+0x19]
  417968:	xor    DWORD PTR [ecx+0x40a],ebp
	...
  41799e:	mov    edx,0x63c13b02
  4179a3:	(bad)  
  4179a4:	or     BYTE PTR [ebx],ch
  4179a6:	mov    ds:0x3800065a,al
  4179ab:	pop    ebp
  4179ac:	pop    es
  4179ad:	add    bl,bh
  4179af:	sbb    al,0x2
  4179b1:	ret    0x1c67
  4179b4:	icebp  
  4179b5:	mov    edi,0x830220a1
  4179ba:	jg     0x4179e8
  4179bc:	rcl    DWORD PTR [eax+ebx*8-0x8],1
  4179c0:	out    0x1f,eax
  4179c2:	mov    ch,0x4b
  4179c4:	dec    ecx
  4179c5:	mov    dl,BYTE PTR [edx-0x11]
  4179c8:	jl     0x417a25
  4179ca:	xchg   DWORD PTR [ebx+edi*2+0x5b],ecx
  4179ce:	jg     0x4179f4
  4179d0:	jmp    0x41797f
  4179d2:	imul   ebx,DWORD PTR [eax],0x2
  4179d5:	add    BYTE PTR [ebx+ebx*4+0x61],ah
  4179d9:	jmp    FWORD PTR [esp+ebx*1]
  4179dc:	sbb    DWORD PTR [edx],ecx
  4179de:	(bad)  
  4179df:	jg     0x4179c7
  4179e1:	call   FWORD PTR [esp+ebx*1]
  4179e4:	add    cl,BYTE PTR [ebp-0x74fbff81]
  4179ea:	in     eax,0x17
  4179ec:	push   es
  4179ed:	add    BYTE PTR [ebx-0x67],ah
  4179f0:	jp     0x4179f1
  4179f2:	test   BYTE PTR ds:0x6e2b3b02,bl
  4179f8:	adc    eax,0x62fdd8b
  4179fd:	add    BYTE PTR [ebx+0x23],ah
  417a00:	inc    ebx
  417a01:	jne    0x417a03
	...
  417a33:	add    BYTE PTR [edi+0x43],ah
  417a36:	inc    ebx
  417a37:	jmp    0x9463:0x4434368
  417a3e:	add    eax,DWORD PTR [eax]
  417a40:	mov    eax,0xe8bff119
  417a45:	popf   
  417a46:	cli    
  417a47:	add    esp,DWORD PTR [ebx+0x1c]
  417a4a:	std    
  417a4b:	mov    ch,0x52
  417a4d:	add    eax,0x41b75f6
  417a52:	jb     0x417a2c
  417a54:	test   BYTE PTR [eax],0x62
  417a57:	add    cl,ch
  417a59:	jns    0x417a69
  417a5b:	jnp    0x417ab5
  417a5d:	jle    0x417ad0
  417a5f:	xchg   BYTE PTR [ecx+eax*1-0x17],bl
  417a63:	add    ebp,DWORD PTR [edi+ebp*2-0x28]
  417a67:	cld    
  417a68:	scas   al,BYTE PTR es:[edi]
  417a69:	(bad)  
  417a6a:	out    0x78,eax
  417a6c:	sbb    BYTE PTR [edi+0xce78ec],cl
  417a72:	in     eax,0x3
  417a74:	arpl   WORD PTR [esi+0x71b82fc],cx
  417a7a:	jmp    0x7747dd82
  417a7f:	or     BYTE PTR [edi+0x5],bl
  417a82:	jmp    0xed4f6789
  417a87:	add    esp,DWORD PTR [ebx-0x70]
  417a8a:	data16 or BYTE PTR [edi+0x5],ah
  417a8e:	jmp    0x6f32970b
  417a93:	add    BYTE PTR [edi+0x5],ah
  417a96:	jmp    0x417b1d
	...
  417ac7:	add    BYTE PTR [eax],al
  417ac9:	add    BYTE PTR [ebx],bl
  417acb:	push   es
  417acc:	rol    DWORD PTR [edx],0x63
  417acf:	fwait
  417ad0:	in     eax,dx
  417ad1:	mov    ebx,0x7ec8bdb
  417ad6:	arpl   WORD PTR ds:0x95c5df0,ax
  417adc:	jmp    0x92c8d6e4
  417ae1:	sub    al,0xe5
  417ae3:	and    al,0x71
  417ae5:	enter  0xd580,0x52
  417ae9:	add    al,0x3c
  417aeb:	push   es
  417aec:	jmp    0xeedd1dd9
  417af1:	jp     0x417b23
  417af3:	jmp    0x88ac93b0
  417af8:	push   eax
  417afa:	popa   
  417afb:	adc    al,0x86
  417afd:	and    esp,DWORD PTR [eax+0x5]
  417b00:	add    dh,dh
  417b02:	cs leave 
  417b04:	(bad)  
  417b05:	in     eax,dx
  417b06:	push   ss
  417b07:	rol    DWORD PTR [eax],1
  417b09:	bound  ebx,QWORD PTR [edx+ecx*4-0x73839dfd]
  417b10:	cmp    al,dl
  417b12:	xchg   DWORD PTR [eax+0x560e8b2],ecx
  417b18:	mov    esp,DWORD PTR [edi-0x80]
  417b1b:	or     BYTE PTR [eax],al
  417b1d:	jmp    0xae50830f
  417b22:	pushf  
  417b23:	call   0x249a6443
  417b28:	(bad)  
  417b29:	rcr    BYTE PTR [ebp+0x623996],cl
	...
  417b5f:	add    BYTE PTR [edi-0x21],bh
  417b62:	cli    
  417b63:	std    
  417b64:	dec    esp
  417b65:	xchg   ecx,eax
  417b66:	xchg   cl,ch
  417b68:	fadd   DWORD PTR [eax+eax*1]
  417b6b:	mov    dl,0xde
  417b6d:	pop    es
  417b6e:	add    al,0xe9
  417b70:	pusha  
  417b71:	fwait
  417b72:	pop    ss
  417b73:	jb     0x417b53
  417b75:	(bad)  
  417b77:	jmp    0xe0395bdc
  417b7c:	pop    esp
  417b7d:	lock test DWORD PTR [edx+0xc],0x9f68f7ef
  417b85:	and    al,0x66
  417b87:	call   0xfa42abec
  417b8c:	inc    edi
  417b8d:	pop    DWORD PTR ds:0x8c5bfc62
  417b93:	in     eax,dx
  417b94:	out    0xde,eax
  417b96:	les    ebx,FWORD PTR [edx-0x32ac2268]
  417b9c:	mov    ah,0x99
  417b9e:	add    esp,DWORD PTR [eax-0x4c]
  417ba1:	out    0x2b,eax
  417ba3:	add    BYTE PTR [ecx-0x277bf214],ah
  417ba9:	push   es
  417baa:	add    BYTE PTR [eax],al
  417bac:	aas    
  417bad:	(bad)  
  417bae:	(bad)  
  417baf:	(bad)  
  417bb0:	mov    edx,0x51cd8b07
  417bb5:	loope  0x417b3e
  417bb7:	dec    esp
  417bb8:	data16 cmc 
  417bba:	cmp    cl,BYTE PTR [esi+eiz*2+0x3d]
  417bbe:	or     eax,0xa7087
	...
  417bf3:	add    BYTE PTR [eax],al
  417bf5:	add    BYTE PTR [ecx],dl
  417bf7:	pop    ebp
  417bf8:	and    dl,BYTE PTR [eax]
  417bfa:	lock hlt 
  417bfc:	add    BYTE PTR [edx],bh
  417bfe:	push   esi
  417bff:	push   ds
  417c00:	dec    BYTE PTR [edx-0x44eddab2]
  417c06:	js     0x417c0f
  417c08:	add    BYTE PTR [eax],al
  417c0a:	jbe    0x417c29
  417c0c:	cmp    DWORD PTR [esi-0x1dcda],ecx
  417c12:	sub    eax,0x3a00c886
  417c17:	pop    es
  417c18:	mov    edx,DWORD PTR [esi+eiz*1+0x17]
  417c1c:	cmp    edx,ebx
  417c1e:	cmp    DWORD PTR [edx],ebp
  417c20:	mov    ecx,DWORD PTR [ebp+0x38]
  417c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c24:	out    0x2b,al
  417c26:	push   cs
  417c27:	inc    ebx
  417c28:	es mov al,dh
  417c2b:	sbb    eax,0x560b39fe
  417c30:	add    al,0x43
  417c32:	mov    ebx,0x4872d833
  417c37:	mov    ds:0xa416244a,al
  417c3c:	push   0x24
  417c3e:	bound  esi,QWORD PTR [edx]
  417c40:	fmul   DWORD PTR [edi]
  417c42:	xchg   al,ch
  417c44:	(bad)  
  417c45:	(bad)  
  417c46:	cli    
  417c47:	xor    ebx,DWORD PTR [edx+0x24]
  417c4a:	ficom  DWORD PTR [ebp+eax*2+0x53]
  417c4e:	arpl   WORD PTR [ebp+0x7d],bx
  417c51:	int    0xbb
  417c53:	mov    esi,0x97c4fe2d
  417c58:	mov    bh,0x23
	...
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	push   ebx
  417c8d:	xchg   edi,eax
  417c8e:	iret   
  417c8f:	and    ebx,DWORD PTR [ebx+0x7d]
  417c92:	aam    0x8a
  417c94:	popf   
  417c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c96:	sbb    esp,edi
  417c98:	les    esp,FWORD PTR [esi]
  417c9a:	sub    esi,edi
  417c9c:	dec    eax
  417c9d:	xor    al,0x7d
  417c9f:	dec    ebx
  417ca0:	aas    
  417ca1:	and    BYTE PTR ds:0x1803cbed,al
  417ca7:	ret    
  417ca8:	adc    eax,0xf8a1763
  417cad:	or     ah,bl
  417caf:	sar    BYTE PTR [ecx+0x2e],0x7d
  417cb3:	shl    DWORD PTR [edx-0x5efcf6bc],0x2f
  417cba:	mov    esi,0x4a277323
  417cbf:	jne    0x417d1e
  417cc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cc2:	mov    dh,0x23
  417cc4:	imul   eax,DWORD PTR [edi+0x4fd53abc],0xfffffffe
  417ccb:	(bad)  
  417ccc:	cmp    al,0x19
  417cce:	rcl    BYTE PTR [edx-0x6e],0xa7
  417cd2:	cmp    bh,ah
  417cd4:	rcl    BYTE PTR [esi+0x5fd8fe29],0xde
  417cdb:	psubsb mm6,QWORD PTR [ebx+0x143f437d]
  417ce2:	aam    0x4f
  417ce4:	fadd   DWORD PTR [ecx]
  417ce6:	sbb    ecx,DWORD PTR [edi+0x9]
  417ce9:	retf   
  417cea:	sub    DWORD PTR [edx-0x75c708d5],ecx
	...
  417d20:	add    BYTE PTR [eax],al
  417d22:	xchg   DWORD PTR [eax],edx
  417d24:	fdiv   QWORD PTR [edi+0x295c85b8]
  417d2a:	in     al,dx
  417d2b:	add    al,0x10
  417d2d:	jle    0x417cd9
  417d2f:	inc    ebx
  417d30:	(bad)  
  417d32:	pusha  
  417d33:	dec    edi
  417d34:	jmp    0xc5130677
  417d39:	adc    edx,DWORD PTR [ecx+0x11]
  417d3c:	jb     0x417d0d
  417d3e:	cmp    cl,0x6f
  417d41:	iret   
  417d42:	cmp    ch,0x5f
  417d45:	mov    DWORD PTR [eax-0x5b7da40b],0x5803e7a9
  417d4f:	mov    esp,esp
  417d51:	call   DWORD PTR [ecx+eiz*1-0x7527f3a2]
  417d58:	fdiv   st(7),st
  417d5a:	test   BYTE PTR [ecx],ah
  417d5c:	add    DWORD PTR [esi+esi*8],ebp
  417d5f:	or     BYTE PTR [edx],dl
  417d61:	sub    al,0x89
  417d63:	adc    BYTE PTR [edx],al
  417d65:	sub    al,0xe3
  417d67:	dec    ecx
  417d68:	call   0x9246e108
  417d6d:	push   es
  417d6e:	nop
  417d6f:	and    BYTE PTR [ecx-0x6],dh
  417d72:	jmp    0xe6becd58
  417d77:	in     eax,0xe4
  417d79:	add    esp,DWORD PTR [ebx+0x4]
  417d7c:	scas   al,BYTE PTR es:[edi]
  417d7d:	test   eax,ecx
  417d7f:	jmp    0xf3f08060
  417d84:	imul   ebp,DWORD PTR [ecx],0x0
	...
  417db7:	add    BYTE PTR [ebp-0x76],bl
  417dba:	sub    ah,BYTE PTR cs:0xebfc5121
  417dc1:	rol    DWORD PTR [esp+ecx*1],1
  417dc4:	jmp    0x4c9:0xd8140cc1
  417dcb:	loopne 0x417da6
  417dcd:	mov    ecx,0xd1e8140c
  417dd2:	add    al,0xc
  417dd4:	xchg   esp,eax
  417dd5:	mov    edi,0xd06993ff
  417dda:	add    esp,DWORD PTR [eax-0x19]
  417ddd:	mov    ebx,0x43772d82
  417de2:	psubsw mm3,mm7
  417de5:	sub    al,0x37
  417de7:	push   0xfffffffb
  417de9:	in     al,0x43
  417deb:	jmp    0x7d3209a2
  417df0:	mov    ecx,0xdf9fbfd3
  417df5:	inc    esp
  417df6:	aaa    
  417df7:	sub    ebx,DWORD PTR [edi+0x5]
  417dfa:	mov    esp,DWORD PTR [ebp-0x567b1f7c]
  417e00:	int    0xe
  417e02:	xor    DWORD PTR [ecx-0x527d3db5],0x78
  417e09:	inc    esi
  417e0a:	pop    ss
  417e0b:	jmp    0x2d654a17
  417e10:	cld    
  417e11:	dec    esp
  417e12:	jae    0x417de3
  417e14:	div    DWORD PTR [ebx+0x35ec2523]
  417e1a:	jae    0x417de3
	...
  417e4c:	add    BYTE PTR [eax],al
  417e4e:	jmp    0x612e91dc
  417e53:	add    eax,0xffe27048
  417e58:	add    ebp,ecx
  417e5a:	pusha  
  417e5b:	mov    cs,WORD PTR [ebp-0x1dfbb07]
  417e61:	inc    ecx
  417e62:	pop    edx
  417e63:	sbb    ebp,ebp
  417e65:	push   edx
  417e66:	das    
  417e67:	dec    ebp
  417e68:	push   esi
  417e69:	out    0xb2,al
  417e6b:	pop    ebp
  417e6c:	(bad)  
  417e6d:	fsub   DWORD PTR [ecx]
  417e6f:	and    bh,cl
  417e71:	sub    DWORD PTR [edi],edx
  417e73:	inc    edi
  417e74:	push   cs
  417e75:	xchg   edi,eax
  417e76:	mov    DWORD PTR ds:0x3660a810,eax
  417e7c:	mov    edi,0xb60fa21a
  417e81:	add    bl,ah
  417e83:	or     DWORD PTR [eax],edx
  417e85:	inc    ecx
  417e86:	or     dh,BYTE PTR [ebx+0x1d3d33be]
  417e8c:	mov    ah,0xb9
  417e8e:	stc    
  417e8f:	repz inc eax
  417e91:	add    BYTE PTR [ebx-0x413e7e3c],bl
  417e97:	sbb    ch,al
  417e99:	xor    DWORD PTR [ebx+0x4],0x59ba0001
  417ea0:	mov    DWORD PTR [ebp-0x447ce276],0x530003b3
  417eaa:	inc    ebx
  417eab:	test   BYTE PTR [esi+ecx*2+0x18c082be],0x0
	...
  417ee3:	add    dl,ch
  417ee5:	add    eax,0x88abf00
  417eea:	add    BYTE PTR [eax],al
  417eec:	pop    es
  417eed:	push   ecx
  417eee:	call   DWORD PTR [ebx+eax*1-0x6]
  417ef2:	xor    al,al
  417ef4:	pop    DWORD PTR [ebx]
  417ef6:	add    BYTE PTR [eax],al
  417ef8:	mov    bl,BYTE PTR [edx+0x63ec727]
  417efe:	add    BYTE PTR [eax],al
  417f00:	jp     0x417f05
  417f02:	add    BYTE PTR [ebx+0x3d060a],al
  417f08:	add    eax,DWORD PTR ds:[eax]
  417f0b:	jb     0x417ef3
  417f0d:	mov    al,al
  417f0f:	add    BYTE PTR [esi],bh
  417f11:	add    eax,DWORD PTR [eax]
  417f13:	or     DWORD PTR [ebx],0x6
  417f16:	sub    edi,ebx
  417f18:	das    
  417f19:	ror    DWORD PTR [ecx-0x1e0f172],1
  417f1f:	inc    ecx
  417f21:	jae    0x84e204ef
  417f27:	and    al,0xfe
  417f29:	add    al,BYTE PTR [eax]
  417f2b:	mov    DWORD PTR [ebx-0x5a],esp
  417f2e:	sti    
  417f2f:	add    esp,DWORD PTR [ebx+0x2c]
  417f32:	jnp    0x417ed1
  417f34:	xor    BYTE PTR [bp+si],al
  417f37:	add    dl,ch
  417f39:	sahf   
  417f3a:	test   DWORD PTR [ebx],0x397b2c63
  417f40:	fdivr  DWORD PTR [esi+0x2c63040f]
  417f46:	jns    0x417edd
	...
  417f78:	add    BYTE PTR [eax],al
  417f7a:	jae    0x417fa4
  417f7c:	add    al,BYTE PTR [eax]
  417f7e:	fidiv  DWORD PTR [esi+0x2c6303db]
  417f84:	js     0x417f8e
  417f86:	jmp    0xde68:0xe81bde70
  417f8d:	push   ebx
  417f8e:	(bad)  [edx]
  417f90:	add    ebx,DWORD PTR [esi+0x2284f]
  417f96:	bound  eax,QWORD PTR [esi+0x2c630412]
  417f9c:	mov    edx,0x14100f88
  417fa1:	mov    DWORD PTR [edi],eax
  417fa3:	or     BYTE PTR [ecx+ecx*4],cl
  417fa6:	(bad)  [eax]
  417fa8:	(bad)  
  417fa9:	push   DWORD PTR [ebp+edx*4-0x3a]
  417fad:	and    ecx,DWORD PTR [ebx]
  417faf:	adc    eax,DWORD PTR [ecx+0xe]
  417fb2:	fstp   QWORD PTR [ebx-0x3]
  417fb5:	call   FWORD PTR [ecx+ebx*4-0x77]
  417fb9:	call   DWORD PTR [esp+ebp*1+0x2]
  417fbd:	mov    esp,DWORD PTR [edi+0x2384c650]
  417fc3:	clc    
  417fc4:	jmp    0xa922f53
  417fc9:	inc    ecx
  417fca:	jmp    0xaf64:0xe717dfef
  417fd1:	sub    al,0xd8
  417fd3:	neg    edi
  417fd5:	pop    edi
  417fd6:	call   0x5f54f6df
  417fdb:	add    eax,0xdae9
	...
  418010:	cwde   
  418011:	jmp    0x771b51ce
  418016:	hlt    
  418017:	(bad)  
  418018:	cld    
  418019:	sbb    eax,0xb540d011
  41801e:	xchg   edi,eax
  41801f:	jp     0x417fb9
  418021:	jmp    0x1ed551ba
  418026:	sbb    BYTE PTR [edx+0x436bf4a0],al
  41802c:	mov    DWORD PTR gs:[ebx-0x2ee23302],edx
  418033:	mov    DWORD PTR [eax-0x17ee6bff],0xe9bfccb0
  41803d:	mov    eax,0xb0dbc3c4
  418042:	int3   
  418043:	xlat   BYTE PTR ds:[ebx]
  418044:	fstp   TBYTE PTR [eax-0x276243c]
  41804a:	jno    0x41800c
  41804c:	inc    eax
  41804d:	mov    ecx,0x9707671
  418052:	jmp    0x3883b85a
  418057:	rcl    DWORD PTR [ebx],1
  418059:	nop
  41805a:	sbb    al,0xe0
  41805c:	xor    BYTE PTR [ebx-0x7e7bc98f],dh
  418062:	mov    cl,0x25
  418064:	mov    DWORD PTR gs:[eax+eiz*8],edi
  418068:	mov    BYTE PTR [eax-0x769bfd5d],cl
  41806e:	inc    esi
  41806f:	dec    DWORD PTR [ebp+ebx*1+0x61]
  418073:	jle    0x418075
	...
  4180a5:	add    BYTE PTR [eax+0x2403e901],al
  4180ab:	ret    0xfcc
  4180ae:	arpl   WORD PTR ds:0xc16a03e9,ax
  4180b4:	dec    esp
  4180b6:	or     BYTE PTR [edx+0x5466a61],dl
  4180bc:	movq   mm6,QWORD PTR [ecx]
  4180bf:	or     BYTE PTR [eax],al
  4180c1:	jmp    0x116549bf
  4180c6:	push   cs
  4180c7:	mov    DWORD PTR [edi-0x16],eax
  4180ca:	pusha  
  4180cb:	add    eax,0xd14ad8b
  4180d0:	push   edi
  4180d1:	adc    ah,BYTE PTR [esi+0x2d624fb7]
  4180d7:	and    al,0xe1
  4180d9:	xor    eax,0xb58a1b86
  4180de:	mov    ah,0xd4
  4180e0:	push   esi
  4180e1:	mov    eax,0x318a4a4b
  4180e6:	addr16 pop eax
  4180e8:	test   BYTE PTR [esi],0x86
  4180eb:	ffreep st(2)
  4180ed:	imul   BYTE PTR ds:0x60e902f9
  4180f3:	nop
  4180f4:	inc    ebx
  4180f5:	int    0xb8
  4180f7:	fcos   
  4180f9:	jecxz  0x41815b
  4180fb:	add    eax,0x1be3f07c
  418100:	add    esi,ebp
  418102:	or     al,0xd
  418104:	add    ebp,ecx
  418106:	pusha  
  418107:	(bad)  
  418109:	dec    ebx
	...
  41813a:	add    BYTE PTR [eax],al
  41813c:	addr16 add eax,0x1be3f07c
  418142:	add    ch,dh
  418144:	in     al,dx
  418145:	sbb    al,0x1
  418147:	jmp    0x59d11ac
  41814c:	das    
  41814d:	pop    DWORD PTR [ebx-0x33]
  418150:	and    al,0x8f
  418152:	xchg   ebp,eax
  418153:	cmc    
  418154:	dec    esp
  418155:	sbb    al,0xfe
  418157:	ret    0x8da3
  41815a:	inc    ebx
  41815b:	lds    eax,FWORD PTR [eax-0x3c]
  41815e:	dec    edi
  41815f:	add    BYTE PTR [edi+0x7850ff5d],ch
  418165:	aaa    
  418166:	mov    eax,DWORD PTR [esi+edx*1+0x54]
  41816a:	dec    esi
  41816b:	mov    edi,esp
  41816d:	(bad)  
  41816e:	(bad)  
  418170:	jge    0x418153
  418172:	mov    DWORD PTR [esi+eiz*2+0x39],ecx
  418176:	aaa    
  418177:	dec    esp
  418178:	push   esi
  418179:	inc    ecx
  41817a:	mov    eax,DWORD PTR [ebx+0xb]
  41817d:	lahf   
  41817e:	inc    edx
  41817f:	and    al,0xfe
  418181:	dec    edx
  418182:	jp     0x4181bd
  418184:	jno    0x41813d
  418186:	push   eax
  418187:	mov    edi,DWORD PTR [eax+eax*1]
  41818a:	inc    ebx
  41818b:	test   DWORD PTR [ebp-0x59b3761f],0xa6448747
  418195:	cmp    ecx,DWORD PTR [ecx+0x4e5b9644]
  41819b:	push   ecx
  41819c:	inc    ecx
  41819d:	shl    dh,cl
  41819f:	das    
	...
  4181d0:	add    BYTE PTR [eax],al
  4181d2:	mov    ch,0xe7
  4181d4:	std    
  4181d5:	mov    edi,esi
  4181d7:	cmp    esp,DWORD PTR [edx]
  4181d9:	sub    eax,DWORD PTR [edx-0x2c4736fb]
  4181df:	xchg   ecx,eax
  4181e0:	loope  0x41821a
  4181e2:	mov    ch,0xe9
  4181e4:	iret   
  4181e5:	cli    
  4181e6:	adc    ebx,eax
  4181e8:	mov    edi,0xc2028de8
  4181ed:	jmp    0x418249
  4181ef:	mov    WORD PTR [edx+0x24],cs
  4181f2:	dec    esi
  4181f3:	push   edx
  4181f4:	mov    esi,ecx
  4181f6:	xchg   edx,eax
  4181f7:	or     edi,esi
  4181f9:	jmp    FWORD PTR [ebp-0x79dbad75]
  4181ff:	mov    dl,dh
  418201:	mov    eax,DWORD PTR [esi-0x75adc1d3]
  418207:	mov    cl,ah
  418209:	call   0xfe5afc71
  41820e:	cmp    al,0x48
  418210:	cmp    cl,BYTE PTR [edx+0x23bf9820]
  418216:	mov    esp,DWORD PTR [ebp+0x2f60e186]
  41821c:	inc    esp
  41821d:	rcr    BYTE PTR [ebx],0x2f
  418220:	add    eax,0xdd683f44
  418225:	out    0x8e,eax
  418227:	adc    al,0x49
  418229:	inc    ebx
  41822a:	aas    
  41822b:	sbb    BYTE PTR [ebx],al
  41822d:	add    BYTE PTR [ebx+0x2c],ah
  418230:	xchg   esi,edi
  418232:	ins    DWORD PTR es:[edi],dx
  418233:	add    al,0xdd
  418235:	imul   eax,DWORD PTR [eax],0x0
	...
  418268:	inc    edi
  418269:	pusha  
  41826a:	sahf   
  41826b:	das    
  41826c:	fsub   DWORD PTR [eax-0x1a]
  41826f:	daa    
  418270:	ss jge 0x418200
  418273:	int    0xcb
  418275:	mov    ds:0x97ccfe19,al
  41827a:	mov    bh,0x23
  41827c:	pop    ds
  41827d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41827e:	cmp    ecx,DWORD PTR [edx+0x51c24027]
  418284:	adc    edx,DWORD PTR [edi+0x12f8e751]
  41828a:	and    esi,edi
  41828c:	push   0x475b8eef
  418291:	je     0x418232
  418293:	pop    es
  418294:	pushf  
  418295:	call   0x2ca39681
  41829a:	add    al,BYTE PTR [eax]
  41829c:	fidiv  WORD PTR [ebx]
  41829e:	xchg   edi,eax
  41829f:	dec    esp
  4182a0:	cmp    bl,al
  4182a2:	out    0x43,eax
  4182a4:	imul   dl
  4182a6:	mov    cs,WORD PTR [ebp+0x22057]
  4182ac:	stc    
  4182ad:	sub    al,0xb5
  4182af:	push   eax
  4182b0:	call   0x50dfad2e
  4182b5:	add    eax,0xb0d922a6
  4182ba:	(bad)  
  4182bb:	(bad)  
  4182bc:	fnstcw WORD PTR [ecx+eiz*2]
  4182bf:	mov    DWORD PTR [eax-0x164bc53b],0x36b0904a
  4182c9:	sbb    bh,BYTE PTR [ebp-0x72]
	...
  4182fc:	add    BYTE PTR [eax],al
  4182fe:	cwde   
  4182ff:	loope  0x4182c1
  418301:	mov    eax,0x909e8eb3
  418306:	mov    eax,0xa82be7fd
  41830b:	adc    ebx,DWORD PTR [ebp+0x22]
  41830e:	dec    ecx
  41830f:	cmp    eax,0xbd40bf61
  418314:	into   
  418315:	or     eax,0xf80cc11c
  41831a:	in     al,dx
  41831b:	sbb    eax,ebp
  41831d:	add    edi,eax
  41831f:	or     eax,0xf1809f6a
  418324:	call   0xe98c613b
  418329:	add    esp,DWORD PTR [ebx-0x7a]
  41832c:	sbb    eax,DWORD PTR ds:0x4418b54
  418332:	arpl   WORD PTR ds:0xe580b762,ax
  418338:	jno    0x4182c3
  41833a:	push   eax
  41833b:	add    ecx,ebp
  41833d:	add    esp,eax
  41833f:	inc    esi
  418340:	div    BYTE PTR [ecx+eiz*8-0x1e4915bb]
  418347:	inc    esp
  418348:	jmp    0x33e0:0x4c8dfb3
  41834f:	mov    fs,WORD PTR [esi-0x32e413d4]
  418355:	and    ecx,ebp
  418357:	ror    BYTE PTR [esp+edx*8],0x29
  41835b:	rol    DWORD PTR [esp+ebp*8],0xd9
  41835f:	mov    al,0xff
  418361:	or     al,0x0
	...
  418393:	add    BYTE PTR [ebx],bh
  418395:	mov    bh,0x8a
  418397:	lahf   
  418398:	setge  BYTE PTR [edx]
  41839b:	xchg   ecx,eax
  41839c:	ins    BYTE PTR es:[edi],dx
  41839d:	adc    esi,edi
  41839f:	sahf   
  4183a0:	(bad)  
  4183a1:	xor    BYTE PTR [edx+0x54e14b2d],cl
  4183a7:	cmp    esi,esp
  4183a9:	dec    edx
  4183aa:	out    0x97,eax
  4183ac:	push   esp
  4183ad:	pop    ss
  4183ae:	(bad)  
  4183af:	rcr    BYTE PTR [edi+0x668b827d],cl
  4183b5:	add    al,0xc2
  4183b7:	bound  esp,QWORD PTR [edi+0x3febf845]
  4183bd:	out    dx,al
  4183be:	out    0x43,eax
  4183c0:	ins    BYTE PTR es:[edi],dx
  4183c1:	pop    ss
  4183c2:	(bad)  
  4183c3:	bound  edi,QWORD PTR [edi]
  4183c5:	mov    eax,DWORD PTR [ebx+0x5]
  4183c8:	pop    es
  4183c9:	mov    dl,0x4f
  4183cb:	jb     0x41835e
  4183cd:	and    dl,cl
  4183cf:	xor    al,0x42
  4183d1:	pop    ss
  4183d2:	mov    ah,BYTE PTR [ecx]
  4183d4:	into   
  4183d5:	dec    ebx
  4183d6:	add    ah,BYTE PTR [eax]
  4183d8:	aaa    
  4183d9:	sub    eax,0xfd172a1
  4183de:	call   0xc9cce91b
  4183e3:	sub    BYTE PTR [eax-0x19dcfd09],cl
  4183e9:	les    esp,FWORD PTR [ebx]
  4183eb:	mov    ebp,0x103a4d67
  4183f0:	les    eax,FWORD PTR [eax]
  4183f2:	(bad)  
  4183f3:	lods   eax,DWORD PTR ds:[esi]
  4183f4:	test   ah,dh
  4183f6:	add    cl,ch
	...
  418428:	add    BYTE PTR [eax],al
  41842a:	pusha  
  41842b:	add    eax,0xe0eae685
  418430:	cmp    ah,BYTE PTR [esp+eiz*8-0x74c2751c]
  418437:	call   0x4b27bf8b
  41843c:	out    0x0,eax
  41843e:	hlt    
  41843f:	out    dx,al
  418440:	std    
  418441:	push   ecx
  418443:	fisttp DWORD PTR [ecx+0x53296e44]
  418449:	push   eax
  41844a:	shl    DWORD PTR [esi-0x1b10801a],0xfd
  418451:	cmp    esp,DWORD PTR [edx]
  418453:	cmc    
  418454:	mov    eax,DWORD PTR [edx]
  418456:	dec    ecx
  418457:	add    al,0x0
  418459:	and    DWORD PTR [esi+0x2d],0x12
  41845d:	add    BYTE PTR ds:0x3a02f57f,dh
  418463:	add    al,0x83
  418465:	std    
  418466:	or     ebp,esi
  418468:	(bad)  
  418469:	aam    0xa
  41846b:	add    al,0x0
  41846d:	mov    edx,esi
  41846f:	pop    ds
  418470:	push   ds
  418471:	mov    ecx,esi
  418473:	pop    ds
  418474:	push   esi
  418475:	mov    ecx,DWORD PTR [eax+edx*1-0x7ef5fffe]
  41847c:	mov    edi,0xc080cbfd
  418481:	add    ecx,eax
  418483:	cmp    BYTE PTR [esi+0x4a86fa03],0x24
  41848a:	(bad)  
  41848b:	push   edx
  41848c:	mov    esi,ecx
	...
  4184be:	add    BYTE PTR [eax],al
  4184c0:	jb     0x41847d
  4184c2:	idiv   bh
  4184c4:	mov    DWORD PTR gs:[edx+0x24],eax
  4184c8:	call   0x5a88:0x8e245288
  4184cf:	and    al,0x92
  4184d1:	cmp    cl,al
  4184d3:	push   edx
  4184d4:	xor    DWORD PTR [esi-0x145083b2],esi
  4184da:	and    dh,ch
  4184dc:	test   edi,esi
  4184de:	push   ebx
  4184df:	push   ebx
  4184e0:	adc    edi,eax
  4184e2:	xchg   DWORD PTR [esi+ebx*2+0x15],eax
  4184e6:	out    0x17,al
  4184e8:	arpl   WORD PTR [ecx],di
  4184ea:	push   ds
  4184eb:	(bad)  
  4184ec:	call   0x38656cea
  4184f1:	ins    DWORD PTR es:[edi],dx
  4184f2:	jl     0x418476
  4184f4:	sub    DWORD PTR [edx],0x64e8c201
  4184fa:	inc    esp
  4184fb:	clc    
  4184fc:	popa   
  4184fd:	inc    ebx
  4184fe:	out    dx,eax
  4184ff:	out    0x4c,eax
  418501:	jns    0x418521
  418503:	(bad)  
  418504:	scas   al,BYTE PTR es:[edi]
  418505:	fisttp DWORD PTR [edx-0x18171533]
  41850b:	sub    ecx,DWORD PTR [ebx+0x7b]
  41850e:	pop    ss
  41850f:	(bad)  
  418510:	sub    al,0x94
  418512:	dec    ebx
  418513:	mov    bl,BYTE PTR [edi+0x2b2ae640]
  418519:	sub    al,0x4b
  41851b:	mov    bh,0xa
  41851d:	retf   
  41851e:	mov    ch,BYTE PTR ds:0xf934b614
	...
  418554:	add    BYTE PTR [eax],al
  418556:	fcom   st(2)
  418558:	inc    esp
  418559:	call   0x8a89b0ba
  41855e:	lahf   
  41855f:	add    al,bl
  418561:	add    bl,BYTE PTR [ebx]
  418563:	add    al,0x2d
  418565:	jl     0x4185c2
  418567:	ffreep st(7)
  418569:	and    esi,DWORD PTR [edi+0x2d]
  41856c:	add    al,BYTE PTR [eax]
  41856e:	arpl   WORD PTR [ecx+0x237b751e],sp
  418574:	inc    edi
  418575:	jnp    0x4185f6
  418577:	xchg   ebx,eax
  418578:	mov    bh,0x23
  41857a:	jae    0x4185d8
  41857c:	mov    al,0x8a
  41857e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41857f:	add    al,0x55
  418581:	rep lods al,BYTE PTR ds:[esi]
  418583:	dec    DWORD PTR [edx-0x199f2729]
  418589:	daa    
  41858a:	ss jl  0x418516
  41858d:	int    0x8b
  41858f:	retf   0xfe17
  418592:	mov    WORD PTR ds:0x89553c22,es
  418598:	add    eax,DWORD PTR [edx]
  41859a:	arpl   WORD PTR ds:0xf1409f6a,ax
  4185a0:	call   0xeb3d6bb3
  4185a5:	add    esp,DWORD PTR [ebx-0x76]
  4185a8:	sbb    al,0xe8
  4185aa:	mov    ah,0x80
  4185ac:	mov    ch,0xe
  4185ae:	fild   QWORD PTR [ecx-0x7d9cfc19]
  4185b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185b5:	add    al,0x54
  4185b7:	jg     0x4185f1
  4185b9:	add    eax,0x0
	...
  4185ea:	add    BYTE PTR [eax],al
  4185ec:	arpl   WORD PTR ds:0xb180b762,ax
  4185f2:	popa   
  4185f3:	dec    esi
  4185f4:	jns    0x418640
  4185f6:	jae    0x4185ff
  4185f8:	pop    ecx
  4185f9:	fisub  DWORD PTR [ebp-0x52759d6b]
  4185ff:	mov    bl,0xe9
  418601:	rol    ah,0xf7
  418604:	cmp    DWORD PTR [esi],esi
  418606:	mov    ecx,0x4c8d7b3
  41860b:	loopne 0x4185a0
  41860d:	mov    ah,BYTE PTR [esi]
  41860f:	mov    WORD PTR [eax+0x182c04e1],ds
  418615:	push   cs
  418616:	inc    ebp
  418617:	push   ds
  418618:	sub    ebx,DWORD PTR [ecx-0x2ead27fc]
  41861e:	popa   
  41861f:	mov    bh,0x80
  418621:	aad    0x95
  418623:	mov    cl,0xd9
  418625:	inc    esi
  418626:	adc    al,ah
  418628:	rcl    BYTE PTR ds:0x89948a1d,1
  41862e:	lods   al,BYTE PTR ds:[esi]
  41862f:	out    0x6c,eax
  418631:	scas   al,BYTE PTR es:[edi]
  418632:	mov    eax,0xd62c9e8a
  418637:	pop    ss
  418638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418639:	adc    eax,0xb8e942c1
  41863e:	dec    esp
  418640:	mov    WORD PTR [edi-0x1e639df1],ss
  418646:	das    
  418647:	jb     0x418614
  418649:	loope  0x41867e
  41864b:	jo     0x4185e0
  41864d:	loope  0x418686
  41864f:	pusha  
	...
  418680:	add    BYTE PTR [eax],al
  418682:	mov    ebx,0x9b623be1
  418687:	loope  0x418698
  418689:	push   ds
  41868a:	mov    dl,0xc5
  41868c:	mov    ch,BYTE PTR [edi-0x490f1471]
  418692:	jbe    0x418713
  418694:	dec    ebx
  418695:	add    eax,0x7250bc2f
  41869a:	xchg   ebp,eax
  41869b:	jg     0x418674
  41869d:	xchg   ecx,eax
  41869e:	pop    eax
  41869f:	pop    ss
  4186a0:	(bad)  
  4186a1:	xchg   esi,eax
  4186a2:	sbb    cl,BYTE PTR [eax+0xe]
  4186a5:	pop    esp
  4186a6:	(bad)  
  4186a7:	adc    al,0xfe
  4186a9:	jmp    0xd1653789
  4186ae:	cmp    esi,DWORD PTR [ebx+0x23]
  4186b1:	in     eax,dx
  4186b2:	pusha  
  4186b3:	add    eax,0xb8da1175
  4186b8:	and    edi,ebp
  4186ba:	fcmovne st,st(0)
  4186bc:	and    edi,ecx
  4186be:	mov    bh,0xb6
  4186c0:	dec    edi
  4186c1:	bound  esp,QWORD PTR [ebp+0x4e59f12c]
  4186c7:	adc    edx,DWORD PTR [edx+ebx*4-0x25]
  4186cb:	inc    edx
  4186cc:	mov    BYTE PTR [ebp+0x2fe7e0c4],ah
  4186d2:	jb     0x4186e7
  4186d4:	(bad)  
  4186d5:	bound  esi,QWORD PTR [ebx+0x18ea23e8]
  4186db:	jg     0x4186af
  4186dd:	mov    ah,0xa2
  4186df:	jge    0x41872c
  4186e1:	int    0xc8
  4186e3:	mov    dh,0x8a
  4186e5:	pop    ds
	...
  418716:	add    BYTE PTR [eax],al
  418718:	jg     0x41877e
  41871a:	repnz add BYTE PTR [ebp-0xe],bl
  41871e:	mov    eax,ebx
  418720:	adc    DWORD PTR ds:0x58f53822,edi
  418726:	mov    esi,ecx
  418728:	bound  ebp,QWORD PTR [eax+0x7d7dfff1]
  41872e:	push   0x24
  418730:	outs   dx,BYTE PTR ds:[esi]
  418731:	push   es
  418732:	fmul   DWORD PTR [ebx+0x3b221d46]
  418738:	mov    ecx,0x42245a7d
  41873d:	jae    0x418786
  41873f:	jmp    0x418787
  418741:	jge    0x41879d
  418743:	and    al,0x72
  418745:	jle    0x418789
  418747:	and    al,0x52
  418749:	sub    eax,0x8362484
  41874e:	add    BYTE PTR [ebp+0x33],dh
  418751:	test   DWORD PTR [eax+ebp*1+0x846],edi
  418758:	push   esi
  418759:	push   cs
  41875a:	cmp    eax,DWORD PTR [eax]
  41875c:	aaa    
  41875d:	or     BYTE PTR [eax],al
  41875f:	jl     0x418768
  418761:	test   ebp,edi
  418763:	add    dl,BYTE PTR [esi]
  418765:	es jg  0x4187e4
  418768:	es xor dh,bh
  41876b:	jl     0x418767
  41876d:	pop    es
  41876e:	jl     0x418775
  418770:	mov    ecx,esi
  418772:	add    DWORD PTR [ecx+edi*8+0x7c],esi
  418776:	dec    edx
  418777:	and    al,0x52
  418779:	pop    edx
  41877a:	dec    edi
  41877b:	mov    eax,DWORD PTR [eax]
	...
  4187ad:	add    BYTE PTR [eax+eiz*8],ch
  4187b0:	int3   
  4187b1:	repz popf 
  4187b3:	icebp  
  4187b4:	jmp    0x2295c8e9
  4187b9:	pop    eax
  4187ba:	inc    ecx
  4187bb:	dec    esp
  4187bc:	and    dl,BYTE PTR [eax]
  4187be:	push   ecx
  4187bf:	aad    0x29
  4187c1:	xlat   BYTE PTR ds:[ebx]
  4187c2:	clc    
  4187c3:	push   edi
  4187c4:	mov    esi,ecx
  4187c6:	arpl   WORD PTR [esi],ax
  4187c8:	outs   dx,BYTE PTR ds:[esi]
  4187c9:	out    dx,eax
  4187ca:	lods   al,BYTE PTR ds:[esi]
  4187cb:	add    bl,BYTE PTR [ebx+eax*2]
  4187ce:	jg     0x4187fe
  4187d0:	jg     0x4187c0
  4187d2:	bound  ebx,QWORD PTR [ecx-0x588e15dc]
  4187d8:	mov    dh,0x23
  4187da:	jae    0x41878d
  4187dc:	(bad)  
  4187dd:	(bad)  
  4187de:	xor    dl,al
  4187e0:	mov    cs,ebp
  4187e2:	mov    ecx,DWORD PTR [edi-0x118b01ed]
  4187e8:	sbb    al,BYTE PTR [edx-0x70f6e192]
  4187ee:	loop   0x41880d
  4187f0:	add    al,BYTE PTR [eax]
  4187f2:	call   0x634577a1
  4187f7:	sbb    al,0xaf
  4187f9:	push   edx
  4187fa:	mov    bl,0xa7
  4187fc:	dec    ecx
  4187fd:	out    0x65,eax
  4187ff:	ins    BYTE PTR es:[edi],dx
  418800:	sbb    bh,dh
  418802:	call   0x8e6967e7
  418807:	int    0x8e
  418809:	int    0xd8
  41880b:	push   esp
  41880c:	sub    ebp,edi
  41880e:	xor    DWORD PTR [edx+ebx*1+0x3a],ecx
	...
  418841:	add    BYTE PTR [eax],al
  418843:	add    BYTE PTR [eax],ah
  418845:	adc    al,0xea
  418847:	mov    bl,BYTE PTR [edi-0x1ac515c0]
  41884d:	dec    eax
  41884e:	(bad)  
  41884f:	inc    DWORD PTR [edx+esi*1]
  418852:	or     eax,DWORD PTR [ebx-0xb43]
  418858:	arpl   WORD PTR [esi+ecx*4],bx
  41885b:	inc    esp
  41885c:	cs sbb al,0xff
  41885f:	jmp    DWORD PTR [ebx+0x48]
  418862:	inc    DWORD PTR [edx+0x68e1ede]
  418868:	xchg   esi,eax
  418869:	sbb    al,0x97
  41886b:	dec    esp
  41886d:	pusha  
  41886e:	aam    0x8a
  418870:	daa    
  418871:	add    eax,0xa1ebbbcd
  418876:	(bad)  
  418877:	out    dx,eax
  418878:	fbld   TBYTE PTR [eax]
  41887a:	pushf  
  41887b:	jecxz  0x418856
  41887d:	jnp    0x418873
  41887f:	jmp    DWORD PTR [edx+edx*1+0x43e9b599]
  418886:	adc    ch,ah
  418888:	test   BYTE PTR [edx],dl
  41888a:	cmc    
  41888b:	pop    ebx
  41888c:	arpl   WORD PTR ds:0x8b6203e9,ax
  418892:	cld    
  418893:	(bad)  
  418894:	jl     0x4188a8
  418896:	xadd   BYTE PTR [eax-0x7],al
  41889a:	pop    ebx
  41889b:	and    al,0xdf
  41889d:	mov    cl,0xeb
  41889f:	sbb    bh,BYTE PTR [ecx-0x51]
  4188a2:	jno    0x41885b
  4188a4:	sub    BYTE PTR [ebp+0xbf71],0x0
	...
  4188d7:	add    BYTE PTR [eax],al
  4188d9:	add    BYTE PTR [eax-0x264be423],al
  4188df:	inc    edx
  4188e0:	rol    BYTE PTR [esi],0x50
  4188e3:	adc    ah,BYTE PTR [ebp-0x1b06f2fc]
  4188e9:	add    esp,DWORD PTR [ebx-0x80]
  4188ec:	xor    al,0xf9
  4188ee:	sub    eax,0x888ecb1e
  4188f3:	jmp    0x985f0a18
  4188f8:	(bad)  
  4188f9:	mov    gs,WORD PTR [eax-0x9713f17]
  4188ff:	clc    
  418900:	in     al,0x3
  418902:	arpl   WORD PTR [esp+edx*8-0x21],di
  418906:	cmp    BYTE PTR [esp+ebp*4-0x21],bh
  41890a:	sub    al,0x7c
  41890c:	mov    esp,0x41ca5cdf
  418911:	icebp  
  418912:	fist   WORD PTR [ecx]
  418914:	mov    esp,0xed1e2406
  418919:	mov    ds,esi
  41891b:	clc    
  41891c:	(bad)  
  41891d:	in     al,dx
  41891e:	pusha  
  41891f:	add    eax,0x3fd59953
  418924:	out    0x5f,eax
  418926:	mov    DWORD PTR [ebx],edx
  418928:	(bad)  
  418929:	push   ds
  41892a:	loop   0x418921
  41892c:	add    ebp,ecx
  41892e:	pusha  
  41892f:	mov    dh,bh
  418931:	fisub  WORD PTR [edi+ebx*1]
  418934:	(bad)  
  418935:	call   0xc5bd579a
  41893a:	lods   al,BYTE PTR ds:[esi]
  41893b:	add    al,BYTE PTR [ebp+0x8]
	...
  41896d:	add    BYTE PTR [eax],al
  41896f:	add    BYTE PTR [eax+0x5],ah
  418972:	add    BYTE PTR [edx-0x4c],ah
  418975:	in     eax,0x53
  418977:	jb     0x4189a3
  418979:	(bad)  
  41897b:	ins    BYTE PTR es:[edi],dx
  41897c:	arpl   di,di
  41897e:	cmp    ch,BYTE PTR [esi-0x5974fc2f]
  418984:	scas   eax,DWORD PTR es:[edi]
  418985:	jle    0x4189ca
  418987:	or     eax,0x12ea7c53
  41898c:	mov    bh,BYTE PTR [ecx-0x1ae49bb1]
  418992:	cmp    ebx,DWORD PTR [eax]
  418994:	(bad)  
  418995:	inc    edx
  418996:	mov    BYTE PTR ds:0x17e7e543,dl
  41899c:	fs paddd mm2,mm0
  4189a0:	aam    0xe4
  4189a2:	xor    ebx,DWORD PTR [ebx]
  4189a4:	adc    edi,DWORD PTR [ebx+edx*2-0x33]
  4189a8:	xor    BYTE PTR [eax+0x28a97251],bh
  4189ae:	out    0x78,al
  4189b0:	push   0xf
  4189b2:	mov    al,BYTE PTR [ecx+0x2123c4d6]
  4189b8:	mov    dl,0xc0
  4189ba:	mov    ch,BYTE PTR [edi]
  4189bc:	inc    edi
  4189bd:	cmp    al,dh
  4189bf:	push   esi
  4189c0:	dec    edx
  4189c1:	retf   
  4189c2:	les    esp,FWORD PTR [edx-0x45]
  4189c5:	in     al,0x13
  4189c7:	add    BYTE PTR [esp+edx*1+0x395e4c89],ah
  4189ce:	mov    DWORD PTR [esi+ebx*2+0x35],edx
  4189d2:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
	...
  418a06:	pop    esi
  418a07:	xor    DWORD PTR [edi-0x76c751ac],eax
  418a0d:	inc    esp
  418a0e:	sahf   
  418a0f:	adc    al,0x55
  418a11:	push   ebp
  418a12:	jmp    0xfddb:0x6be8cc81
  418a19:	call   DWORD PTR [ecx]
  418a1b:	cmp    eax,0x53ed3822
  418a20:	mov    esi,ecx
  418a22:	add    ecx,esp
  418a24:	out    0xa3,al
  418a26:	mov    ebp,ebp
  418a28:	std    
  418a29:	cmp    ecx,edi
  418a2b:	ja     0x418a65
  418a2d:	mov    edi,DWORD PTR [esi]
  418a2f:	and    eax,0x2ffc3b36
  418a34:	add    al,BYTE PTR [eax]
  418a36:	jp     0x418ab7
  418a38:	pop    es
  418a39:	and    esp,0x1b
  418a3c:	add    al,BYTE PTR [eax]
  418a3e:	dec    edx
  418a3f:	add    al,0x74
  418a41:	sbb    BYTE PTR [edi+0x4],dl
  418a44:	add    eax,0x3783a00
  418a49:	add    DWORD PTR ds:0x1719740a,0x4
  418a50:	jge    0x418a52
  418a52:	cmp    bh,BYTE PTR [eax+0x3]
  418a55:	adc    ebp,0x8
  418a58:	je     0x418a67
  418a5a:	jge    0x418ab5
  418a5c:	mov    esi,ecx
  418a5e:	repnz loopne 0x418a50
  418a61:	call   DWORD PTR [ebp+0x1aebfd39]
  418a67:	sub    DWORD PTR [edx+0x24],0x0
	...
  418a9a:	add    BYTE PTR [eax],al
  418a9c:	cli    
  418a9d:	push   cs
  418a9e:	(bad)  
  418a9f:	dec    DWORD PTR [edx]
  418aa1:	add    al,0x8b
  418aa3:	shl    DWORD PTR [ebx+0x3],cl
  418aa6:	xor    DWORD PTR [ecx-0x72],edx
  418aa9:	mov    ds:0xb7a4e748,eax
  418aae:	pop    ss
  418aaf:	(bad)  
  418ab0:	push   ds
  418ab1:	fwait
  418ab2:	daa    
  418ab3:	add    BYTE PTR [esi-0x37],dl
  418ab6:	mov    DWORD PTR [ebx+0x7f],ebp
  418ab9:	mov    eax,DWORD PTR cs:[ebx-0x79]
  418abd:	push   edx
  418abe:	ret    
  418abf:	inc    edi
  418ac0:	jmp    0x7d6:0x6857de51
  418ac7:	sub    ah,0xf5
  418aca:	pop    ss
  418acb:	(bad)  
  418acc:	out    0x6,al
  418ace:	or     BYTE PTR [edi+esi*8-0x1ffffde3],al
  418ad5:	push   ss
  418ad6:	add    BYTE PTR [edi],cl
  418ad8:	fstp   QWORD PTR [edx-0x6c9cfffe]
  418ade:	(bad)  
  418adf:	and    edx,DWORD PTR [ebx-0x29]
  418ae2:	mov    al,dl
  418ae4:	cmp    BYTE PTR [edi-0x4d],bl
  418ae7:	push   eax
  418ae8:	fsubr  DWORD PTR [edi+0x2b]
  418aeb:	cs dec ebp
  418aed:	dec    eax
  418aee:	push   ss
  418aef:	mov    ch,BYTE PTR [edi-0x4ea923f8]
  418af5:	mov    ds:0x453b8a45,eax
  418afa:	add    al,0xf1
  418afc:	cmp    al,0x68
  418afe:	fcmovb st,st(4)
	...
  418b30:	add    BYTE PTR [eax],al
  418b32:	mov    ah,0xe9
  418b34:	mov    al,BYTE PTR [ebx-0x79]
  418b37:	xor    al,0xd9
  418b39:	test   DWORD PTR [edi+0x28],edi
  418b3c:	add    al,BYTE PTR [eax]
  418b3e:	xchg   esi,eax
  418b3f:	adc    eax,0x284bbd81
  418b44:	add    al,BYTE PTR [eax]
  418b46:	arpl   WORD PTR [eax],dx
  418b48:	cli    
  418b49:	cmp    al,0x63
  418b4b:	sub    DWORD PTR [edx],eax
  418b4d:	add    BYTE PTR [edi+0x5],bh
  418b50:	in     al,dx
  418b51:	xor    ch,0x3
  418b54:	aad    0xdf
  418b56:	das    
  418b57:	add    eax,0x916303d4
  418b5c:	jecxz  0x418ae0
  418b5e:	fld    QWORD PTR [edx]
  418b60:	mov    ebp,0x71b52dfb
  418b65:	inc    esi
  418b66:	les    edi,FWORD PTR [edi+esi*1-0x9e53ae9]
  418b6d:	mov    eax,0x4c69ae19
  418b72:	mov    ch,0xaf
  418b74:	imul   eax,DWORD PTR [eax+0x74],0xd803f043
  418b7b:	mov    eax,ds:0x42e9f3c4
  418b80:	sar    DWORD PTR [esi],1
  418b82:	and    al,0xb8
  418b84:	jno    0x418bcc
  418b86:	test   dh,ch
  418b88:	push   es
  418b89:	pop    ss
  418b8a:	test   eax,ecx
  418b8c:	imul   esp,DWORD PTR [edi],0x2ad39863
  418b92:	fs jp  0x418bc9
  418b95:	loopne 0x418b97
	...
  418bc7:	add    BYTE PTR [eax+eax*4+0x21],bl
  418bcb:	pop    ss
  418bcc:	adc    esi,DWORD PTR [ebx+0x6444561]
  418bd2:	xlat   BYTE PTR ds:[ebx]
  418bd3:	push   ss
  418bd4:	push   ebp
  418bd5:	jp     0x418c13
  418bd7:	loopne 0x418b89
  418bd9:	push   eax
  418bda:	out    0x3,eax
  418bdc:	arpl   WORD PTR ds:0xe4b136f2,ax
  418be2:	jae    0x418c5e
  418be4:	xor    al,0xe
  418be6:	call   0xfcc863ee
  418beb:	jmp    DWORD PTR [esi+ecx*1]
  418bee:	cmp    DWORD PTR [ecx+ebp*8+0x720903e],esi
  418bf5:	push   cs
  418bf6:	jge    0x418bfc
  418bf8:	mov    ebp,0x60ecfff8
  418bfd:	add    eax,0x2f198c03
  418c02:	jno    0x418c50
  418c04:	loope  0x418c40
  418c06:	(bad)  
  418c07:	call   0xe9457682
  418c0c:	pusha  
  418c0d:	or     BYTE PTR [edx-0x20],0xf3
  418c11:	in     al,dx
  418c12:	mov    ch,BYTE PTR [edi-0x30]
  418c15:	add    DWORD PTR [eax],eax
  418c17:	jmp    0xed5913fb
  418c1c:	pusha  
  418c1d:	add    eax,0xe9e66040
  418c22:	add    ebp,ecx
  418c24:	pusha  
  418c25:	jl     0x418bac
  418c27:	stc    
  418c28:	lods   al,BYTE PTR ds:[esi]
  418c29:	or     eax,0x62fe
	...
  418c5e:	test   BYTE PTR es:[ebx],0xe9
  418c62:	pusha  
  418c63:	jnp    0x418c74
  418c65:	jmp    0x418cb9
  418c67:	adc    cl,al
  418c69:	jno    0x418bfb
  418c6b:	add    al,0x9e
  418c6d:	aad    0x84
  418c6f:	or     eax,0x7a7f74fe
  418c74:	test   ecx,edi
  418c76:	je     0x418c85
  418c78:	(bad)  
  418c79:	jo     0x418c68
  418c7b:	cmc    
  418c7c:	add    ebp,ecx
  418c7e:	pusha  
  418c7f:	lds    ecx,FWORD PTR [eax+0x95b5f]
  418c85:	jmp    0xe5510f73
  418c8a:	pusha  
  418c8b:	add    eax,0x9476f8b
  418c90:	add    cl,ch
  418c92:	jmp    0x8746:0x4dbb01fc
  418c99:	stc    
  418c9a:	popa   
  418c9b:	imul   ebx,DWORD PTR [ebx],0xffffffed
  418c9e:	pusha  
  418c9f:	add    eax,0x82ebf075
  418ca4:	sldt   WORD PTR [esi]
  418ca7:	or     DWORD PTR [eax],eax
  418ca9:	mov    DWORD PTR [ecx+ecx*1+0x48fa0002],eax
  418cb0:	xchg   DWORD PTR [esi-0x1f2d2],ecx
  418cb6:	jae    0x418c43
  418cb8:	push   cs
  418cb9:	add    al,0xfa
  418cbb:	or     BYTE PTR [ebx-0x1f30d7a],cl
  418cc1:	inc    DWORD PTR [eax]
	...
  418cf3:	add    BYTE PTR [edx-0x457976df],bl
  418cf9:	or     al,0xfe
  418cfb:	inc    DWORD PTR [ecx+eax*1+0xd3c8b00]
  418d02:	add    al,BYTE PTR [eax]
  418d04:	retf   0x847d
  418d07:	sbb    dh,al
  418d09:	or     BYTE PTR [eax],al
  418d0b:	add    DWORD PTR [ecx+edx*1],ebx
  418d0e:	add    al,BYTE PTR [eax]
  418d10:	mov    edx,0xaad2cb1d
  418d15:	jge    0x418d59
  418d17:	and    al,0xbe
  418d19:	mov    edi,DWORD PTR [esi+0x4a7dcb74]
  418d1f:	and    al,0xda
  418d21:	jge    0x418cb7
  418d23:	adc    BYTE PTR [esi+0x362b0008],al
  418d29:	and    eax,0x81f1514e
  418d2e:	adc    al,BYTE PTR [edx+edi*2]
  418d31:	or     BYTE PTR [ebx],ch
  418d33:	dec    esp
  418d34:	push   cx
  418d36:	push   eax
  418d37:	push   ecx
  418d38:	jne    0x418d2c
  418d3a:	into   
  418d3b:	add    DWORD PTR [esi],0x18
  418d3e:	add    eax,0xffffff87
  418d41:	std    
  418d42:	pop    esp
  418d43:	mov    ecx,DWORD PTR [ecx]
  418d45:	dec    ebp
  418d46:	pop    ebp
  418d47:	pop    esi
  418d48:	leave  
  418d49:	int3   
  418d4a:	ss ret 0x162
  418d4e:	mov    eax,DWORD PTR [esi-0x1f19d]
  418d54:	sbb    al,0x47
  418d56:	mov    esi,0x23
	...
  418d87:	add    BYTE PTR [eax],al
  418d89:	add    BYTE PTR [ebx-0x52a1471f],dh
  418d8f:	lahf   
  418d90:	ds aaa 
  418d92:	and    DWORD PTR [esi],esi
  418d94:	add    bh,BYTE PTR [eax+0x81e63]
  418d9a:	and    BYTE PTR [edi-0x6898dc42],dl
  418da0:	dec    edx
  418da1:	sar    dl,0x1e
  418da4:	test   DWORD PTR [ebx+0x6b],eax
  418da7:	pop    esi
  418da8:	aas    
  418da9:	mov    bl,BYTE PTR [edi]
  418dab:	cli    
  418dac:	pop    es
  418dad:	cmp    DWORD PTR [edi+0x63fffff9],0x64744299
  418db7:	popf   
  418db8:	sub    ebx,DWORD PTR ds:[edi+0x1e]
  418dbc:	add    al,bl
  418dbe:	fcomp  DWORD PTR [ecx+0x1e5f43de]
  418dc4:	add    cl,BYTE PTR [ebx+0x3c241f7]
  418dca:	arpl   WORD PTR [esi],bx
  418dcc:	mov    cl,0x8a
  418dce:	fild   WORD PTR [ecx-0x3e]
  418dd1:	add    esp,DWORD PTR [ebx+0x1e]
  418dd4:	mov    al,0x8a
  418dd6:	xlat   BYTE PTR ds:[ebx]
  418dd7:	inc    ecx
  418dd8:	(bad)  
  418dd9:	add    esp,DWORD PTR [ebx+0x1e]
  418ddc:	mov    bl,0x4f
  418dde:	fsub   DWORD PTR [ecx+0x1e5f3fe7]
  418de4:	add    dl,BYTE PTR [edx-0x4d]
  418de7:	test   eax,0x347b23bf
  418dec:	mov    bl,0xf4
	...
  418e1e:	add    BYTE PTR [eax],al
  418e20:	dec    esp
  418e21:	dec    esp
  418e22:	test   bl,al
  418e24:	ja     0x418e3e
  418e26:	add    al,BYTE PTR [eax]
  418e28:	and    BYTE PTR [ecx+0x3f],ch
  418e2b:	retf   
  418e2c:	daa    
  418e2d:	push   es
  418e2e:	mov    ch,0x40
  418e30:	sbb    BYTE PTR [edx],bh
  418e32:	lods   al,BYTE PTR ds:[esi]
  418e33:	inc    eax
  418e34:	sbb    BYTE PTR [edx],bh
  418e36:	cmp    edi,DWORD PTR [ebp+0x7]
  418e39:	test   DWORD PTR [esp+edx*1+0x14],edi
  418e3d:	or     ebp,eax
  418e3f:	mov    dh,0xb6
  418e41:	mov    dl,0x71
  418e43:	mov    ecx,0x391d45c
  418e48:	mov    ch,0x56
  418e4a:	inc    eax
  418e4b:	ret    0x5a3
  418e4e:	jo     0x418e64
  418e50:	and    ecx,DWORD PTR [esi]
  418e52:	jmp    0xf9433b59
  418e57:	jl     0x418e2c
  418e59:	xchg   BYTE PTR [edi+0xb],al
  418e5c:	fs push edx
  418e5e:	je     0x418e5d
  418e60:	xchg   esp,eax
  418e61:	mov    ebx,0x3dde03a7
  418e66:	in     eax,0x78
  418e68:	xchg   ebx,eax
  418e69:	cli    
  418e6a:	jbe    0x418eb1
  418e6c:	fadd   st(1),st
  418e6e:	add    edi,DWORD PTR [ecx+eiz*1]
  418e71:	xchg   BYTE PTR [ecx],ah
  418e73:	int3   
  418e74:	sub    BYTE PTR [edi+edx*8],dh
  418e77:	xor    eax,0xff8b8606
  418e7c:	arpl   WORD PTR [eax+0x129c7cf2],dx
  418e82:	and    BYTE PTR [ecx+0x0],al
	...
  418eb4:	add    BYTE PTR [eax],al
  418eb6:	sbb    BYTE PTR ds:0x78611ed7,al
  418ebc:	fdivr  st(5),st
  418ebe:	out    0x8c,eax
  418ec0:	out    0x86,eax
  418ec2:	ror    BYTE PTR [eax-0x8],0x12
  418ec6:	gs or  ch,al
  418ec9:	xchg   BYTE PTR [eax],al
  418ecb:	js     0x418ec5
  418ecd:	adc    dl,BYTE PTR [ebp+0xa]
  418ed0:	call   0x773bb8a9
  418ed5:	test   DWORD PTR [ebx+edi*4],esp
  418ed8:	jmp    DWORD PTR [edi]
  418eda:	addr16 js 0x418f10
  418edd:	rcr    ebp,1
  418edf:	pop    es
  418ee0:	sbb    esp,DWORD PTR [ebp*1+0x68d4437c]
  418ee7:	add    BYTE PTR [ebx-0xc],0x90
  418eeb:	pop    ds
  418eec:	pop    es
  418eed:	arpl   WORD PTR [ecx+edx*8],bx
  418ef0:	stos   DWORD PTR es:[edi],eax
  418ef1:	jno    0x418f17
  418ef3:	jmp    0xf1db987
  418ef8:	sbb    esi,ebp
  418efa:	dec    edi
  418efb:	dec    edi
  418efc:	sbb    ebp,ecx
  418efe:	pusha  
  418eff:	add    eax,0x29e69f0f
  418f04:	dec    ebp
  418f05:	test   al,0x60
  418f07:	js     0x418f3c
  418f09:	icebp  
  418f0a:	in     eax,0x7
  418f0c:	aaa    
  418f0d:	int3   
  418f0e:	(bad)  
  418f0f:	jnp    0x418f54
  418f11:	cld    
  418f12:	mov    BYTE PTR [edx+0x1f50dc43],al
  418f18:	pop    es
  418f19:	arpl   WORD PTR [eax],ax
	...
  418f4b:	add    BYTE PTR [eax+edx*8-0x17639e55],ah
  418f52:	(bad)
  418f56:	aaa    
  418f57:	popf   
  418f58:	ja     0x418f2f
  418f5a:	(bad)  
  418f5c:	cmp    al,BYTE PTR [edi+0x99f9fef]
  418f62:	jle    0x418ee9
  418f64:	pop    ebx
  418f65:	jne    0x418f66
  418f67:	je     0x418fcb
  418f69:	jle    0x418f6e
  418f6b:	push   esp
  418f6c:	mov    eax,0x77e940b7
  418f71:	test   DWORD PTR [ecx+edi*8-0x1101f4ad],ecx
  418f78:	or     al,BYTE PTR [edi+0x9202607]
  418f7e:	jle    0x418fcd
  418f80:	pop    esp
  418f81:	jne    0x418f82
  418f83:	dec    DWORD PTR [esi-0x58fb74fd]
  418f89:	dec    ecx
  418f8a:	dec    esp
  418f8b:	inc    ecx
  418f8c:	dec    edx
  418f8d:	or     al,0x82
  418f8f:	mov    ebp,0xfffdf61a
  418f94:	jns    0x418f18
  418f96:	stc    
  418f97:	sbb    BYTE PTR [esi-0x41],al
  418f9a:	inc    eax
  418f9b:	xor    eax,0x11
  418f9e:	or     eax,0xfdf6308c
  418fa3:	call   DWORD PTR [edi-0x7a00f180]
  418fa9:	test   BYTE PTR [esi-0x18],0x3
  418fad:	add    eax,0x0
	...
  418fe2:	gs push ebx
  418fe4:	pop    ecx
  418fe5:	mov    DWORD PTR [esi-0x5f73fa8],edx
  418feb:	dec    edi
  418fec:	xchg   ebp,esp
  418fee:	dec    ebx
  418fef:	in     eax,0x7e
  418ff1:	add    dl,cl
  418ff3:	add    al,0x53
  418ff5:	push   esi
  418ff6:	in     eax,dx
  418ff7:	mov    DWORD PTR [ebx+0x8],eax
  418ffa:	aaa    
  418ffb:	push   eax
  418ffc:	jle    0x418fb7
  418ffe:	call   0x81c2:0x43000004
  419005:	sar    BYTE PTR [esi+0x5c813189],0x1
  41900c:	add    ah,bh
  41900e:	mov    al,bl
  419010:	in     al,0x6
  419012:	add    DWORD PTR [edx],edi
  419014:	jg     0x418ffd
  419016:	cmp    al,BYTE PTR [esi]
  419018:	add    BYTE PTR [eax],al
  41901a:	cmp    ebx,esi
  41901c:	or     BYTE PTR [ecx],cl
  41901e:	je     0x418fa9
  419020:	sbb    DWORD PTR ss:[ebp+0x1],0xc37afc00
  419028:	in     eax,dx
  419029:	or     dh,BYTE PTR [ebx-0xa]
  41902c:	xchg   DWORD PTR [edx],esi
  41902e:	arpl   WORD PTR [ebp+0x22218238],sp
  419034:	jnp    0x41906d
  419036:	loop   0x41906e
  419038:	inc    edx
  419039:	push   cs
  41903a:	arpl   WORD PTR [esi],bx
  41903c:	inc    ecx
  41903d:	out    dx,al
  41903e:	gs and edx,eax
  419041:	mov    BYTE PTR [ebp-0x5d],dh
  419044:	rol    DWORD PTR [eax+0x0],cl
	...
  419076:	add    BYTE PTR [eax],al
  419078:	inc    ebp
  419079:	push   ds
  41907a:	adc    al,BYTE PTR [edx]
  41907c:	arpl   WORD PTR [ebp+0x28],bx
  41907f:	or     ebp,eax
  419081:	adc    al,BYTE PTR [ebx+0x235d54e2]
  419087:	cvtps2pd xmm4,QWORD PTR [eax+0x7b]
  41908b:	pop    ss
  41908c:	loop   0x419108
  41908e:	add    dh,al
  419090:	pusha  
  419091:	push   ds
  419092:	inc    ecx
  419093:	jmp    0x9531:0x8830255f
  41909a:	xor    eax,DWORD PTR [edx+0x2f7b2221]
  4190a0:	loopne 0x419059
  4190a2:	iret   
  4190a3:	or     dl,BYTE PTR [eax-0x1fb72c5b]
  4190a9:	fld    QWORD PTR [esi]
  4190ab:	test   DWORD PTR [edx+0x268c8850],ebx
  4190b1:	sahf   
  4190b2:	mov    dl,0xe7
  4190b4:	jl     0x4190d4
  4190b6:	add    al,BYTE PTR [eax]
  4190b8:	or     al,0x40
  4190ba:	stos   DWORD PTR es:[edi],eax
  4190bb:	mov    BYTE PTR [edi+0x63034448],dh
  4190c1:	mov    ds:0xb45f23c6,eax
  4190c6:	bound  ecx,QWORD PTR [ebx+0x22]
  4190c9:	push   ds
  4190ca:	jnp    0x4190d5
  4190cc:	ficom  DWORD PTR ds:0x9b67c183
  4190d2:	inc    edx
  4190d3:	add    esp,edx
  4190d5:	adc    esp,ecx
  4190d7:	dec    esp
  4190d8:	and    al,BYTE PTR ds:0x91e9
	...
  41910e:	jbe    0x419152
  419110:	in     al,0x3
  419112:	call   0x19499dd8
  419117:	data16 sbb al,0xc5
  41911a:	dec    esp
  41911b:	jl     0x41910d
  41911d:	jl     0x419179
  41911f:	sub    BYTE PTR [eax-0x13bc1ff8],0x84
  419126:	cmp    ah,dh
  419128:	sbb    eax,ebp
  41912a:	sub    al,0x95
  41912c:	xchg   esi,eax
  41912d:	inc    edx
  41912e:	pusha  
  41912f:	add    eax,0xb6077d34
  419134:	cmp    BYTE PTR [ebx+0x7ae0c0e9],dh
  41913a:	scas   eax,DWORD PTR es:[edi]
  41913b:	stc    
  41913c:	jae    0x4190f7
  41913e:	or     al,0xb4
  419140:	sbb    BYTE PTR [ebx*2-0x74fc16fb],bl
  419147:	gs sbb al,0xc5
  41914a:	in     al,dx
  41914b:	jns    0x4190f8
  41914d:	or     edx,DWORD PTR [ebp+ebx*1+0x563042f]
  419154:	mov    edx,0xb80d1f80
  419159:	sbb    edi,DWORD PTR [eax*1+0x7c2803e9]
  419160:	dec    esp
  419161:	mov    cl,0xa2
  419163:	std    
  419164:	call   0x5037b1b
  419169:	cld    
  41916a:	fnstenv [ecx+0x44dbffcc]
  419170:	test   al,0xfe
	...
  4191a2:	add    BYTE PTR [eax],al
  4191a4:	(bad)  
  4191a5:	cld    
  4191a6:	daa    
  4191a7:	and    eax,0x7ce27c6c
  4191ac:	mov    ds:0x5b55f5c5,eax
  4191b1:	inc    esp
  4191b2:	pop    es
  4191b3:	hlt    
  4191b4:	imul   edi,ebx,0x7d795fff
  4191ba:	shr    BYTE PTR [ecx-0x57f7af93],0x3f
  4191c1:	dec    BYTE PTR [edx]
  4191c3:	repz (bad) 
  4191c6:	mov    BYTE PTR [eax+0x600343e1],bh
  4191cc:	mov    eax,ds:0x397f0ec6
  4191d1:	std    
  4191d2:	sbb    BYTE PTR [eax-0x59],dh
  4191d5:	(bad)  
  4191d6:	push   cs
  4191d7:	jg     0x419210
  4191d9:	inc    ebp
  4191da:	loopne 0x4191ad
  4191dc:	scas   eax,DWORD PTR es:[edi]
  4191dd:	cld    
  4191de:	mov    BYTE PTR [eax-0xf4a08e0],ch
  4191e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191e5:	and    eax,0x7d1ae20f
  4191ea:	or     DWORD PTR [eax-0x59],esp
  4191ed:	(bad)  
  4191ee:	push   cs
  4191ef:	aas    
  4191f0:	pop    es
  4191f1:	inc    ebp
  4191f2:	loopne 0x4191e5
  4191f4:	stc    
  4191f5:	sti    
  4191f6:	push   cs
  4191f7:	aas    
  4191f8:	pusha  
  4191f9:	cld    
  4191fa:	shl    BYTE PTR [eax-0x16],0xaa
  4191fe:	shl    ecx,0x60
  419201:	mov    dl,0x8a
  419203:	mov    ch,0xc4
  419205:	std    
  419206:	mov    ah,BYTE PTR [ebp+0x0]
	...
  419238:	add    BYTE PTR [eax],al
  41923a:	mov    esp,0x27eb8af9
  41923f:	push   ds
  419240:	pop    ss
  419241:	jno    0x4192a2
  419243:	les    ecx,FWORD PTR [edx+0xf1e27eb]
  419249:	popa   
  41924a:	pop    edi
  41924b:	les    ecx,FWORD PTR [edx+0x71e27eb]
  419251:	jno    0x4192b2
  419253:	les    ecx,FWORD PTR [eax-0x308358ce]
  419259:	push   0x22
  41925b:	add    cl,BYTE PTR [ebx-0x74fcf717]
  419261:	add    BYTE PTR [eax-0x40],bh
  419264:	out    0x18,al
  419266:	repnz add BYTE PTR [ecx-0x75],al
  41926a:	mov    al,al
  41926c:	out    0x10,al
  41926e:	add    al,BYTE PTR [ecx]
  419270:	inc    ecx
  419271:	mov    edi,DWORD PTR [eax-0x3e]
  419274:	out    0x8,al
  419276:	ror    BYTE PTR [eax],cl
  419278:	aas    
  419279:	mov    ebx,DWORD PTR [eax-0x7f]
  41927c:	int    0x88
  41927e:	cmp    ebp,DWORD PTR [esi-0x43c5f741]
  419284:	mov    ch,ah
  419286:	leave  
  419287:	and    eax,0xba545309
  41928c:	mov    al,BYTE PTR [ebp+0xe]
  41928f:	jle    0x4192e5
  419291:	or     BYTE PTR [ecx+0x124d8af7],dh
  419297:	jle    0x4192e1
  419299:	add    al,0x83
  41929b:	ss shr bl,0x0
	...
  4192cf:	add    BYTE PTR [esi],al
  4192d1:	fmul   st,st(2)
  4192d3:	sbb    ecx,0xd0f0f02
  4192d9:	fcomp  st(0)
  4192db:	mov    esp,ecx
  4192dd:	dec    eax
  4192de:	jecxz  0x4192e4
  4192e0:	stos   DWORD PTR es:[edi],eax
  4192e1:	push   ss
  4192e2:	mov    dh,dl
  4192e4:	cmp    esp,DWORD PTR [ebx]
  4192e6:	or     eax,0xf2808c31
  4192eb:	sub    DWORD PTR [ecx],0xba00fe12
  4192f1:	xlat   BYTE PTR ds:[ebx]
  4192f2:	fmul   DWORD PTR [ecx+0x10e3487c]
  4192f8:	mov    ebx,0x8bce8816
  4192fd:	and    edi,edi
  4192ff:	xor    BYTE PTR [eax+eax*4-0xe],dl
  419303:	sbb    DWORD PTR [ecx-0x2a],0xd7b93332
  41930a:	xlat   BYTE PTR ds:[ebx]
  41930b:	mov    DWORD PTR [ebx+0x3c],esp
  41930e:	inc    ecx
  41930f:	in     eax,0x61
  419311:	fst    QWORD PTR [edx]
  419313:	mov    BYTE PTR [ebp+0x32071e2d],dl
  419319:	sbb    al,0x79
  41931b:	repnz loop 0x41932d
  41931e:	or     edi,edi
  419320:	ins    DWORD PTR es:[edi],dx
  419321:	out    dx,al
  419322:	rcr    cl,cl
  419324:	fcmove st,st(4)
  419326:	inc    edx
  419327:	in     eax,0x6b
  419329:	sbb    eax,0xdace883e
  41932e:	add    dh,dh
  419330:	fcom   DWORD PTR [eax+0x10]
  419333:	rol    BYTE PTR [eax],0x0
	...
  419366:	xor    al,0xeb
  419368:	and    dh,0x62
  41936b:	jne    0x41937f
  41936d:	or     BYTE PTR [edx],bh
  41936f:	xor    esi,DWORD PTR gs:[eax]
  419372:	sbb    eax,0x40801065
  419377:	pop    eax
  419378:	push   edi
  419379:	test   eax,0x3027dcc9
  41937e:	cmp    ch,BYTE PTR [ecx-0x2b]
  419381:	adc    edx,ebx
  419383:	mov    edx,0x6f64ee42
  419388:	and    al,0x0
  41938a:	jmp    0xc31:0x1cf9fa7f
  419391:	pop    es
  419392:	arpl   si,bp
  419394:	add    DWORD PTR [ecx+0x1b232d15],ecx
  41939a:	jmp    0x1065:0x5fee4232
  4193a1:	or     al,cl
  4193a3:	fs inc ebx
  4193a5:	and    BYTE PTR [ebx-0x15e22f0f],0x23
  4193ac:	and    ch,0x74
  4193af:	addr16 aad 0xb4
  4193b2:	sbb    DWORD PTR [ecx+0x4dbffc2],0x46
  4193b9:	inc    edx
  4193ba:	lea    ecx,[edx]
  4193bc:	push   0xe7049824
  4193c1:	add    ebx,DWORD PTR [eax-0x44]
  4193c4:	(bad)  
  4193c5:	mov    al,0x23
  4193c7:	add    eax,0x2c70
	...
  4193fc:	mov    ds:0x7d82edf3,eax
  419401:	add    al,ch
  419403:	add    esp,DWORD PTR [ebx+0x10]
  419406:	ss jecxz 0x41941c
  419409:	inc    esi
  41940a:	out    0x7c,eax
  41940c:	cmp    eax,0xe3f2cec5
  419411:	jmp    0x52e2:0x56304d3
  419418:	fs push edx
  41941a:	sub    BYTE PTR [edx+ebp*8],al
  41941d:	js     0x4193d2
  41941f:	jge    0x41943f
  419421:	xchg   DWORD PTR [edi-0x5312600],esp
  419427:	jmp    0x22ac7807
  41942c:	pop    ebp
  41942d:	mov    ss,ebx
  41942f:	push   eax
  419430:	je     0x41948d
  419432:	sub    BYTE PTR [eax+ebx*2],al
  419435:	js     0x4193ca
  419437:	jge    0x41945e
  419439:	lds    edx,FWORD PTR [esi+0x7beae202]
  41943f:	add    al,0x63
  419441:	add    eax,0x594c52e2
  419446:	sub    BYTE PTR [edx+ebx*8],al
  419449:	loop   0x419473
  41944b:	sbb    ebp,DWORD PTR [esi-0x7c]
  41944e:	inc    esi
  41944f:	or     ah,dl
  419451:	add    ch,al
  419453:	(bad)  
  419454:	adc    eax,0xc4c4b926
  419459:	lea    esp,[esi]
  41945b:	inc    ebp
  41945c:	int    0x1b
  41945e:	push   0x23
	...
  41948f:	add    BYTE PTR [eax],al
  419491:	add    BYTE PTR [eax+0x60e90005],bh
  419497:	push   cs
  419498:	mov    ch,0x9
  41949a:	out    dx,eax
  41949b:	inc    ebp
  41949c:	add    al,bl
  41949e:	jbe    0x41942d
  4194a0:	(bad)  
  4194a1:	sub    BYTE PTR [ecx+0x1e],al
  4194a4:	xchg   DWORD PTR [esi],edi
  4194a6:	es repz add al,0x60
  4194aa:	ins    BYTE PTR es:[edi],dx
  4194ab:	or     eax,0x872170f9
  4194b0:	shl    ch,0x8d
  4194b3:	and    BYTE PTR [edi+0x3de8e417],al
  4194b9:	bound  edx,QWORD PTR [ebx+0x263c20b9]
  4194bf:	add    cl,BYTE PTR [ecx+0x6f39fbe]
  4194c5:	push   0xe900fe81
  4194ca:	pusha  
  4194cb:	push   cs
  4194cc:	mov    ch,0x9
  4194ce:	hlt    
  4194cf:	inc    esp
  4194d0:	add    BYTE PTR [eax-0x77],dh
  4194d3:	(bad)
  4194d6:	out    0xea,eax
  4194d8:	cld    
  4194d9:	jmp    0x5e4a9a3e
  4194de:	add    BYTE PTR [ebp+0x3f],dl
  4194e1:	jmp    0x8701787d
  4194e6:	adc    al,BYTE PTR [ebp+0x5608de5]
  4194ec:	add    dl,dh
  4194ee:	xchg   ecx,eax
  4194ef:	and    cl,BYTE PTR [ebp+0x28]
  4194f2:	pop    edi
  4194f3:	mov    WORD PTR [ebx+0x7d],?
	...
  419526:	add    BYTE PTR [eax],al
  419528:	outs   dx,DWORD PTR ds:[esi]
  419529:	enter  0xa981,0xe4
  41952d:	mov    ecx,ss
  41952f:	sbb    cl,cl
  419531:	mov    esi,ds
  419533:	push   0xffffff82
  419535:	inc    ebx
  419536:	mov    DWORD PTR ds:0xa8562232,ebx
  41953c:	pusha  
  41953d:	push   cs
  41953e:	jae    0x419540
  419540:	jle    0x4194c3
  419542:	faddp  st(1),st
  419544:	and    eax,0x76e77f04
  419549:	push   es
  41954a:	add    BYTE PTR [eax],al
  41954c:	rcl    DWORD PTR [esi+0x1d],0x54
  419550:	retf   
  419551:	add    eax,0x1f4bdf87
  419556:	or     eax,DWORD PTR [ecx-0x2f5a3]
  41955c:	jp     0x419560
  41955e:	mov    bh,0x20
  419560:	fmul   st,st(0)
  419562:	std    
  419563:	mov    BYTE PTR [ebp+0x49],dl
  419566:	out    dx,al
  419567:	push   ss
  419568:	sti    
  419569:	es stc 
  41956b:	add    BYTE PTR [edx+0x5],bh
  41956e:	or     DWORD PTR [edi+0x40b96a],esi
  419574:	jnp    0x41958a
  419576:	dec    BYTE PTR [ebp+0x32]
  419579:	mov    edi,DWORD PTR [eax+edi*8+0x3a]
  41957d:	inc    BYTE PTR [ebx+ebp*4-0x7601f0dc]
  419584:	repnz inc esp
  419586:	fstp   QWORD PTR [edi]
  419588:	ret    
  419589:	cmp    edx,eax
  41958b:	out    dx,al
	...
  4195bc:	add    BYTE PTR [eax],al
  4195be:	ret    
  4195bf:	inc    esp
  4195c0:	or     cl,dh
  4195c2:	xchg   ebx,eax
  4195c3:	cmp    DWORD PTR [eax],esi
  4195c5:	enter  0x4a93,0x80
  4195c9:	jecxz  0x41956b
  4195cb:	pop    edi
  4195cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195cd:	stos   BYTE PTR es:[edi],al
  4195ce:	sub    esi,DWORD PTR [ebx]
  4195d0:	xor    cl,bl
  4195d2:	jae    0x41960d
  4195d4:	shl    al,0x15
  4195d7:	jl     0x4195ac
  4195d9:	shl    esp,1
  4195db:	jl     0x41959c
  4195dd:	or     DWORD PTR [eax+0x7c],ebp
  4195e0:	int    0xc1
  4195e2:	xor    al,BYTE PTR [ecx]
  4195e4:	xor    eax,ecx
  4195e6:	push   ebx
  4195e7:	dec    edx
  4195e8:	and    bl,0x63
  4195eb:	push   edi
  4195ec:	add    al,0xff
  4195ee:	arpl   WORD PTR ds:0x2d9b8829,bx
  4195f4:	and    al,0x7
  4195f6:	jb     0x419624
  4195f8:	jns    0x4195c9
  4195fa:	mov    ds:0x9b310646,al
  4195ff:	gs inc ebx
  419601:	add    BYTE PTR [eax+0x5032d4db],0xdd
  419608:	sub    cl,BYTE PTR [eax+0x1242dab]
  41960e:	push   edx
  41960f:	sub    al,0x79
  419611:	(bad)  
  419612:	mov    ds:0x9330f416,al
  419617:	jne    0x41965c
  419619:	add    BYTE PTR [eax+0x64ff08f7],0xbd
  419620:	sub    ecx,DWORD PTR [eax+0x0]
	...
  419652:	add    BYTE PTR [eax],al
  419654:	cmp    ebp,DWORD PTR [ebp-0x526df0df]
  41965a:	jp     0x419623
  41965c:	and    al,dh
  41965e:	std    
  41965f:	xor    BYTE PTR [ebx],dh
  419661:	gs inc esp
  419663:	add    BYTE PTR [eax-0x9],0xf8
  419667:	push   cs
  419668:	fs std 
  41966a:	sub    ecx,DWORD PTR [edx-0x1dbd195a]
  419670:	pop    edi
  419671:	std    
  419672:	cmp    al,0x88
  419674:	jnp    0x4196e1
  419676:	mov    esi,0xbe735f07
  41967b:	pop    es
  41967c:	(bad)  
  41967e:	test   al,0x5d
  419680:	test   al,0x65
  419682:	adc    eax,0x1f6215c
  419687:	push   ebx
  419688:	lea    esi,[ebx-0x5b]
  41968b:	and    ebx,DWORD PTR [edi+0x10]
  41968e:	jnp    0x419703
  419690:	aas    
  419691:	ficomp WORD PTR [edi-0x9fb2a7c]
  419697:	outs   dx,DWORD PTR ds:[esi]
  419698:	mov    bl,0xf
  41969a:	xchg   ebp,eax
  41969b:	inc    edx
  41969c:	pop    ebp
  41969d:	mov    eax,0x43d7b327
  4196a2:	fbstp  TBYTE PTR [ebx+0x84159c4]
  4196a8:	mov    ch,0x6c
  4196aa:	pop    es
  4196ab:	mov    bh,0x23
  4196ad:	add    eax,0xffa8fc3f
  4196b2:	cs clc 
  4196b4:	aad    0xf6
  4196b6:	mov    ebp,0xb4
	...
  4196e7:	add    BYTE PTR [eax],al
  4196e9:	add    BYTE PTR [ebp+eax*2+0x21],bh
  4196ed:	or     BYTE PTR [ebp+0x23b6476c],cl
  4196f3:	add    eax,0xff790fff
  4196f8:	push   es
  4196f9:	test   eax,0x3efc319
  4196fe:	push   ss
  4196ff:	mov    cs,WORD PTR [ebx+esi*4]
  419702:	adc    al,0x54
  419704:	bound  edi,QWORD PTR [esi-0x7bb759c]
  41970a:	out    0x58,eax
  41970c:	fbstp  TBYTE PTR [edx+0x824ed9c]
  419712:	inc    ebp
  419713:	(bad)  
  419714:	aas    
  419715:	fs test al,0x44
  419718:	out    0x78,eax
  41971a:	lahf   
  41971b:	std    
  41971c:	pop    ss
  41971d:	sbb    al,0x35
  41971f:	add    dh,BYTE PTR [edi+0x1c25bc07]
  419725:	lds    ebx,FWORD PTR [edx+edx*4]
  419728:	sub    al,0xc
  41972a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41972b:	in     eax,dx
  41972c:	nop
  41972d:	or     BYTE PTR ds:0x9763ffff,cl
  419733:	inc    esp
  419734:	out    0x78,eax
  419736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419737:	std    
  419738:	pop    ss
  419739:	sbb    al,0x19
  41973b:	add    bh,BYTE PTR [edi+0x7]
  41973e:	xchg   ecx,eax
  41973f:	nop
  419740:	add    BYTE PTR [edi+edx*2],ch
  419743:	dec    esi
  419744:	call   0xfe4102b4
  419749:	ret    0xea57
  41974c:	pop    ebx
  41974d:	sub    eax,DWORD PTR [eax]
	...
  41977f:	add    bh,cl
  419781:	(bad)  
  419782:	push   esp
  419783:	pusha  
  419784:	add    BYTE PTR [ebx+0x58f1f9ec],0x89
  41978b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41978c:	mov    eax,0x2bed738b
  419791:	dec    ecx
  419792:	clc    
  419793:	cdq    
  419794:	icebp  
  419795:	out    0xfa,al
  419797:	xor    ah,BYTE PTR [edi+edi*8-0x75]
  41979b:	lods   al,BYTE PTR ds:[esi]
  41979c:	jo     0x4197ec
  41979e:	sub    DWORD PTR [edx],0x4e8538f
  4197a4:	pop    eax
  4197a5:	(bad)  
  4197a6:	std    
  4197a7:	add    DWORD PTR [eax],0xfbe93f4a
  4197ad:	dec    eax
  4197ae:	clc    
  4197af:	cdq    
  4197b0:	dec    eax
  4197b1:	xchg   edi,eax
  4197b2:	cld    
  4197b3:	neg    BYTE PTR [ebp+0x66]
  4197b6:	mov    al,ds:0x8cfe279d
  4197bb:	sub    al,0x6f
  4197bd:	dec    esi
  4197be:	call   0xfe40fc33
  4197c3:	(bad)  
  4197c4:	sti    
  4197c5:	stc    
  4197c6:	mov    DWORD PTR [edi+edx*2],esp
  4197c9:	lea    eax,[ebx-0x3b]
  4197cc:	mov    bh,0x61
  4197ce:	lock push ecx
  4197d0:	inc    edi
  4197d1:	push   ecx
  4197d2:	aas    
  4197d3:	jmp    0x1a39e183
  4197d8:	jg     0x419849
  4197da:	cld    
  4197db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197dc:	pop    ebp
  4197dd:	data16 and BYTE PTR [esi+eiz*1],ch
  4197e1:	dec    BYTE PTR [esp+ebp*1+0x0]
	...
  419814:	add    BYTE PTR [eax],al
  419816:	outs   dx,DWORD PTR ds:[esi]
  419817:	dec    esi
  419818:	call   0xfe410325
  41981d:	add    BYTE PTR [ecx-0x53],dh
  419820:	stc    
  419821:	mov    eax,DWORD PTR [edi+0x19]
  419824:	mov    BYTE PTR [ebp+0x6e],al
  419827:	sbb    DWORD PTR [eax+esi*8+0x62],0xca414c69
  41982f:	jl     0x419875
  419831:	clc    
  419832:	or     bl,BYTE PTR [edx]
  419834:	inc    esi
  419835:	cld    
  419836:	sub    eax,0xdfa06507
  41983b:	enter  0x8cfd,0x7
  41983f:	adc    cl,BYTE PTR [ebp-0x18]
  419842:	arpl   WORD PTR ds:0x7cc4fffe,cx
  419848:	inc    esp
  419849:	clc    
  41984a:	cli    
  41984b:	sbb    ebp,ebx
  41984d:	sti    
  41984e:	cmp    eax,0x92c68207
  419853:	scas   eax,DWORD PTR es:[edi]
  419854:	mov    WORD PTR [ebp+0x6a],es
  419857:	mov    dl,0xe5
  419859:	rcl    DWORD PTR [ecx+0x7],cl
  41985c:	(bad)  
  41985d:	pop    esi
  41985e:	rol    DWORD PTR [eax-0x5c7a217],0xfd
  419865:	push   esp
  419866:	add    esp,DWORD PTR ds:0x1beec80
  41986c:	add    BYTE PTR [eax],al
  41986e:	cdq    
  41986f:	stos   DWORD PTR es:[edi],eax
  419870:	push   esi
  419871:	mov    ecx,DWORD PTR [edi+0x3e758af9]
  419877:	je     0x4197fd
  419879:	add    BYTE PTR [eax],0x0
	...
  4198ac:	sub    al,0x3
  4198ae:	(bad)  
  4198af:	push   eax
  4198b0:	adc    al,BYTE PTR [ebp+0x0]
  4198b3:	add    BYTE PTR [edx],bh
  4198b5:	lahf   
  4198b6:	std    
  4198b7:	addr16 pop edx
  4198b9:	mov    bl,0x40
  4198bb:	add    BYTE PTR [edx],ah
  4198bd:	jns    0x4198ba
  4198bf:	(bad)  
  4198c0:	mov    ebp,0x788acfd8
  4198c5:	loope  0x419912
  4198c7:	inc    ecx
  4198c8:	arpl   si,bp
  4198ca:	jns    0x4198cf
  4198cc:	xor    DWORD PTR [eax],esi
  4198ce:	jg     0x4198c9
  4198d0:	imul   eax,DWORD PTR [edx],0x11
  4198d3:	(bad)  
  4198d4:	out    0x6,al
  4198d6:	push   es
  4198d7:	(bad)  
  4198d8:	in     al,0xed
  4198da:	add    DWORD PTR [eax],eax
  4198dc:	arpl   WORD PTR [edi+0x75d388b0],ax
  4198e2:	jge    0x419957
  4198e4:	int    0x5b
  4198e6:	add    esi,DWORD PTR [eax]
  4198e8:	mov    cl,0x47
  4198ea:	aam    0x8a
  4198ec:	out    0xd2,al
  4198ee:	add    edi,esi
  4198f0:	mov    ah,0x75
  4198f2:	jge    0x41996f
  4198f4:	lods   eax,DWORD PTR ds:[esi]
  4198f5:	cmp    eax,DWORD PTR [ebx]
  4198f7:	(bad)  
  4198f8:	fidivr WORD PTR [edx+0x679cfe03]
  4198fe:	jne    0x41997b
  419900:	xchg   ebp,eax
  419901:	and    eax,DWORD PTR [ebx]
  419903:	push   cs
  419904:	int    0xef
  419906:	sbb    bh,0x4
  419909:	addr16 inc ebp
  41990b:	jnp    0x41998a
  41990d:	or     eax,DWORD PTR [ebx]
  41990f:	push   cs
	...
  419940:	add    BYTE PTR [eax],al
  419942:	lods   eax,DWORD PTR ds:[esi]
  419943:	ret    
  419944:	shl    bh,cl
  419946:	fucomi st,st(5)
  419948:	cmp    eax,DWORD PTR [edx]
  41994a:	arpl   WORD PTR [edi-0x19a67d41],bp
  419950:	xchg   BYTE PTR [ebx+eiz*8],al
  419953:	es add al,0x75
  419956:	and    eax,0xb8e7ae34
  41995b:	aam    0x4
  41995d:	(bad)  
  41995e:	loopne 0x4198e0
  419960:	mov    ebp,edi
  419962:	xor    al,0xc3
  419964:	add    DWORD PTR [eax-0x59711198],eax
  41996a:	loopne 0x4199dc
  41996c:	mov    ebp,edi
  41996e:	sbb    al,0xab
  419970:	add    DWORD PTR [ebp-0xb],esi
  419973:	add    al,0x74
  419975:	jle    0x419903
  419977:	sti    
  419978:	sahf   
  419979:	add    al,0x94
  41997b:	in     eax,dx
  41997c:	push   cs
  41997d:	add    esp,DWORD PTR [ebx+0x5]
  419980:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  419982:	cdq    
  419983:	mov    ss,WORD PTR [ebx-0x18f2dd5a]
  419989:	scas   al,BYTE PTR es:[edi]
  41998a:	fndisi(8087 only) 
  41998c:	push   0xe705e817
  419991:	add    esi,DWORD PTR [eax]
  419993:	push   ebx
  419994:	mov    esi,0x720d2f78
  419999:	mov    ds,WORD PTR [eax-0x76]
  41999c:	ins    BYTE PTR es:[edi],dx
  41999d:	cmp    DWORD PTR [esi-0x434cb105],0xfffffffb
  4199a4:	out    0x3,eax
	...
  4199d6:	add    BYTE PTR [eax],al
  4199d8:	arpl   WORD PTR [edi-0x19],bp
  4199db:	fwait
  4199dc:	inc    esp
  4199dd:	dec    ebx
  4199de:	test   al,0x3
  4199e0:	mov    edx,edi
  4199e2:	sub    al,0x4
  4199e4:	xchg   ebp,eax
  4199e5:	xor    eax,0x24e27939
  4199ea:	lods   eax,DWORD PTR ds:[esi]
  4199eb:	ret    0x8384
  4199ee:	jmp    0x4199c1
  4199f0:	and    cl,BYTE PTR [eax-0xa070cef]
  4199f6:	cs jle 0x4199ed
  4199f9:	cli    
  4199fa:	inc    BYTE PTR [ebx]
  4199fc:	arpl   WORD PTR ds:0x524803e7,ax
  419a02:	pusha  
  419a03:	adc    ebp,ebx
  419a05:	sbb    BYTE PTR [ebx+0x2],0x4d
  419a09:	sti    
  419a0a:	sbb    dh,dl
  419a0c:	cmp    dh,BYTE PTR [esi]
  419a0e:	bound  ecx,QWORD PTR [ecx+0x3cefbb7]
  419a14:	jmp    0x419996
  419a16:	inc    ebx
  419a17:	add    ch,BYTE PTR ds:0xaf89befb
  419a1d:	sti    
  419a1e:	add    BYTE PTR [esi+0x2d8b8f60],dh
  419a24:	popa   
  419a25:	sti    
  419a26:	std    
  419a27:	mul    BYTE PTR [edx]
  419a29:	add    eax,0x8ce08981
  419a2e:	mov    ebx,0xfdfb6115
  419a33:	fidivr WORD PTR [edx-0x207ed0c8]
  419a39:	cli    
  419a3a:	ret    
  419a3b:	jmp    0x0:0x0
	...
  419a6e:	pusha  
  419a6f:	inc    esp
  419a70:	inc    edx
  419a71:	push   0xffffffdd
  419a73:	adc    eax,0x3ce0e47b
  419a78:	add    ah,bl
  419a7a:	call   0xfdf9:0x61515653
  419a81:	push   esi
  419a82:	in     al,0xa6
  419a84:	js     0x419ad5
  419a86:	pusha  
  419a87:	sti    
  419a88:	add    BYTE PTR [ecx+0x6c],ch
  419a8b:	add    eax,0xbedc8673
  419a90:	js     0x419ac9
  419a92:	pusha  
  419a93:	sti    
  419a94:	add    BYTE PTR [edx+eax*8+0x6169838e],dh
  419a9b:	sti    
  419a9c:	std    
  419a9d:	mov    ecx,0xe900a278
  419aa2:	pusha  
  419aa3:	pop    eax
  419aa4:	pop    esi
  419aa5:	mov    dl,0xe7
  419aa7:	jmp    0x5a0c607
  419aac:	push   ecx
  419aad:	xchg   edi,eax
  419aae:	or     DWORD PTR [esp+eax*2-0x769c8f33],ecx
  419ab5:	lea    edi,[ecx+edx*1+0x66]
  419ab9:	ins    BYTE PTR es:[edi],dx
  419aba:	sub    eax,0x1a700976
  419abf:	mov    ?,WORD PTR [eax-0x7]
  419ac2:	retf   0xffbf
  419ac5:	call   0xcca80f
  419aca:	push   0x11
  419acc:	test   edi,eax
  419ace:	pushf  
  419acf:	xor    dl,dl
  419ad1:	sldt   WORD PTR [eax]
	...
  419b04:	popf   
  419b05:	rcl    BYTE PTR [edx-0x7d],1
  419b08:	retf   0x500d
  419b0b:	call   0x3d9a8e
  419b10:	jb     0x419b33
  419b12:	dec    ecx
  419b13:	inc    ecx
  419b14:	or     ch,dh
  419b16:	cmp    bh,cl
  419b18:	in     eax,0x6
  419b1a:	push   cs
  419b1b:	mov    bh,0xc1
  419b1d:	push   edx
  419b1e:	push   ebx
  419b1f:	call   0x3d9a0e
  419b24:	bound  esp,QWORD PTR [ecx-0x1235beb7]
  419b2a:	es stc 
  419b2c:	inc    ebp
  419b2d:	pop    es
  419b2e:	push   cs
  419b2f:	mov    bh,0x21
  419b31:	push   ebx
  419b32:	push   esi
  419b33:	call   0x3d9a2e
  419b38:	add    eax,0xb2c25764
  419b3d:	add    eax,0x21c68b4f
  419b42:	or     BYTE PTR [ebx+0x22],dl
  419b45:	or     esi,ebp
  419b47:	inc    DWORD PTR [ebp-0x7f]
  419b4a:	mov    edi,0x57a80
  419b4f:	mov    eax,0x3d549a
  419b54:	add    DWORD PTR [esi],edx
  419b56:	test   DWORD PTR [ebx],edx
  419b58:	or     esi,eax
  419b5a:	add    al,0x83
  419b5c:	cmp    DWORD PTR [edx],eax
  419b5e:	cmp    DWORD PTR [eax+0x720040b7],esp
  419b64:	gs mov esp,0x4da0
	...
  419b9a:	or     eax,DWORD PTR ds:0x12d31087
  419ba0:	jg     0x419b62
  419ba2:	cmp    BYTE PTR ds:[edi+0x24116304],0x4e
  419baa:	mov    ds:0x88ed73ee,al
  419baf:	lods   al,BYTE PTR ds:[esi]
  419bb0:	or     BYTE PTR [eax],al
  419bb2:	nop
  419bb3:	jae    0x419c15
  419bb5:	and    al,0x6b
  419bb7:	sbb    ebp,esp
  419bb9:	call   0x804143d9
  419bbe:	and    BYTE PTR [edi+0x4],ch
  419bc1:	add    BYTE PTR [ebx+0x66],ah
  419bc4:	and    al,0x4b
  419bc6:	mov    ds:0xea118cee,al
  419bcb:	inc    BYTE PTR [ecx+eax*8+0x4c46b67]
  419bd2:	es dec esi
  419bd4:	dec    ebp
  419bd5:	aas    
  419bd6:	arpl   sp,di
  419bd8:	lock mov eax,0x411a03
  419bde:	fdivr  st,st(3)
  419be0:	mov    dl,BYTE PTR [eax]
  419be2:	loopne 0x419c0f
  419be4:	or     BYTE PTR [ecx+0x203eeaa3],al
  419bea:	and    eax,0xbc7201ad
  419bef:	mov    ds:0x916304c3,eax
  419bf4:	mov    ah,bl
  419bf6:	loopne 0x419c3a
  419bf8:	sbb    al,0x51
  419bfa:	sub    eax,0x85d63
	...
  419c2f:	add    al,bl
  419c31:	cdq    
  419c32:	or     eax,0x54261e8b
  419c37:	push   ecx
  419c38:	mov    eax,DWORD PTR [ecx]
  419c3a:	cld    
  419c3b:	std    
  419c3c:	je     0x419c97
  419c3e:	inc    ebp
  419c3f:	lock adc esi,DWORD PTR [ecx+0x43]
  419c43:	or     BYTE PTR [ebx],dl
  419c45:	push   ss
  419c46:	in     al,0xf8
  419c48:	pop    esp
  419c49:	out    dx,eax
  419c4a:	mov    es,WORD PTR [ebx+0x4b]
  419c4d:	sahf   
  419c4e:	test   cl,al
  419c50:	jae    0x419c57
  419c52:	cmp    ch,ah
  419c54:	xor    bh,ch
  419c56:	fiadd  WORD PTR [eax]
  419c58:	retf   0x23a5
  419c5b:	inc    ebx
  419c5c:	arpl   WORD PTR [edx-0x126c03dc],cx
  419c62:	inc    esp
  419c63:	sti    
  419c64:	es clc 
  419c66:	dec    edi
  419c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c68:	scas   eax,DWORD PTR es:[edi]
  419c69:	inc    esi
  419c6a:	out    0x8e,eax
  419c6c:	mov    al,ds:0x7eec17f5
  419c71:	(bad)  
  419c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c73:	add    BYTE PTR [edx-0x5b],bh
  419c76:	sub    eax,DWORD PTR [ebx+0x63]
  419c79:	mov    ch,BYTE PTR [esp+ebp*8]
  419c7c:	xchg   ebx,eax
  419c7d:	in     eax,dx
  419c7e:	or     bl,bh
  419c80:	out    dx,al
  419c81:	div    DWORD PTR [edx+0x5e]
  419c84:	out    0x8b,eax
  419c86:	and    al,0xf4
  419c88:	in     al,0x41
  419c8a:	jae    0x419c16
  419c8c:	cmp    ch,dh
  419c8e:	bound  ebx,QWORD PTR [esi-0x29]
  419c91:	mov    ebp,DWORD PTR [ebx+ebp*8+0x0]
	...
  419cc4:	add    BYTE PTR [eax],al
  419cc6:	fadd   QWORD PTR [ecx+0x53]
  419cc9:	mov    bl,BYTE PTR [eax]
  419ccb:	in     eax,dx
  419ccc:	mov    edi,0xe7462823
  419cd1:	mov    fs,WORD PTR [eax]
  419cd3:	std    
  419cd4:	xchg   edi,eax
  419cd5:	jmp    0x419d41
  419cd7:	(bad)  
  419cd8:	add    BYTE PTR ds:[edx],cl
  419cdb:	and    eax,0x8a6342a4
  419ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ce1:	repz xor ebp,ebp
  419ce4:	aam    0xfa
  419ce6:	xchg   bh,dh
  419ce8:	(bad)  
  419ce9:	and    ebp,DWORD PTR [eax]
  419ceb:	inc    esi
  419cec:	out    0x8e,eax
  419cee:	and    ch,ch
  419cf0:	mov    bh,0xeb
  419cf2:	dec    esi
  419cf3:	inc    BYTE PTR [esi]
  419cf5:	add    cl,bl
  419cf7:	pop    ecx
  419cf8:	sti    
  419cf9:	mov    esp,DWORD PTR [eax-0x629fff0b]
  419cff:	stc    
  419d00:	xchg   DWORD PTR [eax+edx*2-0x2722a473],ecx
  419d07:	inc    edx
  419d08:	call   0x8833477d
  419d0d:	xor    al,0x47
  419d0f:	outs   dx,BYTE PTR ds:[esi]
  419d10:	mov    al,ds:0x8b05a61c
  419d15:	sub    al,0x27
  419d17:	push   esi
  419d18:	call   0xfe3abcdd
  419d1d:	inc    ecx
  419d1e:	mov    edi,0xf3e93f4a
  419d23:	inc    edx
  419d24:	lock cmp edi,esi
  419d27:	in     al,dx
  419d28:	clc    
  419d29:	sahf   
	...
  419d5a:	add    BYTE PTR [eax],al
  419d5c:	cld    
  419d5d:	ins    DWORD PTR es:[edi],dx
  419d5e:	mov    al,ds:0x8b059e24
  419d63:	and    al,0xff
  419d65:	push   ebp
  419d66:	call   0xfe3a850f
  419d6b:	pop    ss
  419d6c:	repnz inc edx
  419d6e:	clc    
  419d6f:	sbb    edi,eax
  419d71:	cmp    eax,0x468acc6e
  419d77:	icebp  
  419d78:	xor    BYTE PTR [edx-0x12e8a6bd],cl
  419d7e:	jne    0x419dd1
  419d80:	mov    ah,0xf8
  419d82:	and    DWORD PTR [edi],0xac8b4f57
  419d88:	mov    eax,0x98d3e855
  419d8d:	clc    
  419d8e:	std    
  419d8f:	xchg   edi,eax
  419d90:	cmp    DWORD PTR [esi-0x14],edi
  419d93:	mov    WORD PTR [edx-0x2843fff3],fs
  419d99:	loop   0x419e1a
  419d9b:	or     eax,0xe9fdf6d3
  419da0:	adc    DWORD PTR [edi+0x55],ecx
  419da3:	bound  eax,QWORD PTR [edx]
  419da5:	or     eax,0x5e70089
  419daa:	mov    DWORD PTR [ebp-0x40836],eax
  419db0:	cli    
  419db1:	jmp    0xf77f9c0a
  419db6:	push   0x0
  419db8:	mov    dl,0x21
  419dba:	dec    esi
  419dbb:	inc    ecx
  419dbc:	dec    edx
  419dbd:	jmp    0x0:0xfde5
	...
  419df0:	add    BYTE PTR [eax],al
  419df2:	or     eax,0xc0d22df7
  419df7:	test   BYTE PTR [eax],ah
  419df9:	dec    esi
  419dfa:	jnp    0x419dfd
  419dfc:	mov    BYTE PTR [eax+ebx*1],al
  419dff:	inc    esp
  419e00:	jg     0x419dfc
  419e02:	xor    dh,BYTE PTR [esi-0x13]
  419e05:	mov    DWORD PTR [edi-0x42000186],0xa000000
  419e0f:	jmp    0x419e65
  419e11:	mov    edx,ebx
  419e13:	mov    BYTE PTR [ecx-0x409238c],al
  419e19:	xor    eax,ecx
  419e1b:	jmp    0xfffe:0x6e478b30
  419e22:	dec    ebp
  419e23:	mov    DWORD PTR [ecx-0x408c384],eax
  419e29:	push   DWORD PTR [edi]
  419e2b:	outs   dx,BYTE PTR ds:[esi]
  419e2c:	(bad)  
  419e2d:	call   FWORD PTR ds:0xc7c898b
  419e33:	idiv   ebx
  419e35:	paddusb mm0,QWORD PTR [edx]
  419e38:	jg     0x419e1a
  419e3a:	popf   
  419e3b:	mov    bh,BYTE PTR [ecx-0x408a384]
  419e41:	unpcklps xmm6,XMMWORD PTR [edi]
  419e44:	sub    eax,0xc60102f8
  419e49:	add    edi,DWORD PTR [edx+0x42]
  419e4c:	inc    edx
  419e4d:	add    DWORD PTR [eax+0x1a],0x79
  419e51:	add    eax,0x3a6c63
	...
  419e86:	add    BYTE PTR [eax],al
  419e88:	neg    BYTE PTR ds:0x8b7b5653
  419e8e:	sti    
  419e8f:	std    
  419e90:	pop    esp
  419e91:	pusha  
  419e92:	test   al,0x78
  419e94:	push   ebp
  419e95:	cld    
  419e96:	sti    
  419e97:	add    bl,ah
  419e99:	mov    bh,0x1
  419e9b:	jae    0x419e99
  419e9d:	pop    edi
  419e9e:	mov    ebp,0xfbd43d78
  419ea3:	add    BYTE PTR [esi-0x1c7c7284],ch
  419ea9:	(bad)  
  419eaa:	sti    
  419eab:	std    
  419eac:	xchg   ebx,eax
  419ead:	(bad)  
  419eae:	(bad)  
  419eaf:	sti    
  419eb0:	sbb    al,0xb4
  419eb2:	pop    ebx
  419eb3:	pop    esi
  419eb4:	mov    eax,0x215bf065
  419eb9:	out    0x1,eax
  419ebb:	push   ebx
  419ebc:	fiadd  DWORD PTR [ecx+0x3c905054]
  419ec2:	xchg   DWORD PTR [ebx+0x6b],edx
  419ec5:	addr16 pop ebp
  419ec7:	or     al,0xd8
  419ec9:	sbb    DWORD PTR [edi+ebp*1],edx
  419ecc:	sbb    bh,BYTE PTR [ecx+0x8]
  419ecf:	por    mm5,QWORD PTR [edx]
  419ed2:	or     eax,0x12e2e9f8
  419ed7:	mov    BYTE PTR [edi-0x2b],ah
  419eda:	inc    edx
  419edb:	or     edx,0x10eb7df6
  419ee1:	mov    al,0xe9
  419ee3:	lods   al,BYTE PTR ds:[esi]
  419ee4:	mov    ecx,0x912ffb5b
  419ee9:	push   ecx
  419eea:	adc    BYTE PTR [edx],bl
	...
  419f1c:	add    BYTE PTR [eax],al
  419f1e:	(bad)  
  419f20:	das    
  419f21:	xor    ah,BYTE PTR [edx+0x76]
  419f24:	add    DWORD PTR [edx-0x20],eax
  419f27:	cmp    BYTE PTR [esp+edi*2],cl
  419f2a:	xchg   ebx,eax
  419f2b:	in     eax,dx
  419f2c:	iret   
  419f2d:	mov    bl,BYTE PTR [edi]
  419f2f:	add    eax,0x9ebfbfc
  419f34:	fld    DWORD PTR [ecx-0x1e]
  419f37:	out    dx,eax
  419f38:	fistp  QWORD PTR [edi+0x72]
  419f3b:	push   ebx
  419f3c:	mov    dl,0x8a
  419f3e:	ja     0x419f92
  419f40:	sub    DWORD PTR [eax],edx
  419f42:	arpl   WORD PTR ds:0x56303e7,ax
  419f48:	out    0x3,eax
  419f4a:	arpl   WORD PTR ds:0x56303e7,ax
  419f50:	out    0x3,eax
  419f52:	arpl   WORD PTR ds:0x56303e7,ax
  419f58:	out    0x3,eax
  419f5a:	arpl   WORD PTR ds:0x56303e7,ax
  419f60:	out    0x3,eax
  419f62:	arpl   WORD PTR ds:0x56303e7,ax
  419f68:	out    0x3,eax
  419f6a:	arpl   WORD PTR ds:0x56303e7,ax
  419f70:	out    0x3,eax
  419f72:	arpl   WORD PTR ds:0x56303e7,ax
  419f78:	out    0x3,eax
  419f7a:	arpl   WORD PTR ds:0x56303e7,ax
  419f80:	out    0x3,eax
	...
  419fb2:	add    BYTE PTR [eax],al
  419fb4:	arpl   WORD PTR ds:0x56303e7,ax
  419fba:	out    0x3,eax
  419fbc:	arpl   WORD PTR ds:0x56303e7,ax
  419fc2:	out    0x3,eax
  419fc4:	arpl   WORD PTR ds:0x56303e7,ax
  419fca:	out    0x3,eax
  419fcc:	arpl   WORD PTR ds:0x56303e7,ax
  419fd2:	out    0x3,eax
  419fd4:	arpl   WORD PTR ds:0x56303e7,ax
  419fda:	add    cl,ch
  419fdc:	pusha  
  419fdd:	add    eax,0x560e900
  419fe2:	add    cl,ch
  419fe4:	pusha  
  419fe5:	add    eax,0x560e900
  419fea:	add    ah,ah
  419fec:	pop    edx
  419fed:	add    BYTE PTR [edx],cl
  419fef:	mov    BYTE PTR [eax],dl
  419ff1:	inc    ecx
  419ff2:	mov    eax,DWORD PTR [bx+si+0x2f7b]
  419ff7:	iret   
  419ff8:	nop
  419ff9:	and    ah,BYTE PTR [eax]
  419ffb:	leave  
  419ffc:	jge    0x41a023
  419ffe:	and    BYTE PTR [ebp-0x48],dh
  41a001:	data16 and BYTE PTR [edx-0x36],bl
  41a005:	push   edx
  41a006:	ins    BYTE PTR es:[edi],dx
  41a007:	dec    ebp
  41a008:	ret    0x2077
  41a00b:	pop    ebp
  41a00c:	mov    edi,0xc24b2066
  41a011:	jns    0x41a087
  41a013:	dec    esp
  41a014:	xchg   ebp,eax
  41a015:	and    eax,0x103a
	...
  41a04a:	push   0xffffffff
  41a04c:	inc    eax
  41a04d:	inc    esi
  41a04e:	xchg   edi,eax
  41a04f:	jp     0x41a0c3
  41a051:	inc    eax
  41a052:	sbb    BYTE PTR [ebp+0x74],0xc9
  41a056:	dec    eax
  41a057:	fs daa 
  41a059:	leave  
  41a05a:	das    
  41a05b:	cmp    dh,BYTE PTR [edi]
  41a05d:	sar    DWORD PTR [ebx],1
  41a05f:	aaa    
  41a060:	xor    cl,bl
  41a062:	daa    
  41a063:	and    eax,0x3f870062
  41a068:	ins    DWORD PTR es:[edi],dx
  41a069:	add    al,0x4d
  41a06b:	push   0x4a870763
  41a070:	(bad)  
  41a071:	cli    
  41a072:	inc    ebx
  41a073:	arpl   WORD PTR [ecx+ecx*1],bp
  41a076:	es popa 
  41a078:	ins    BYTE PTR es:[edi],dx
  41a079:	or     DWORD PTR ds:0x3cc1656a,ecx
  41a07f:	je     0x41a0a1
  41a081:	mov    ebx,0x637443
  41a086:	fdiv   DWORD PTR [ecx+eiz*2+0x64]
  41a08a:	fs cld 
  41a08c:	or     DWORD PTR ds:0x726b3d80,ecx
  41a092:	lahf   
  41a093:	es outs dx,BYTE PTR gs:[esi]
  41a096:	in     al,dx
  41a097:	pop    edi
  41a098:	jb     0x41a107
  41a09a:	jmp    0x41a0fe
  41a09c:	outs   dx,DWORD PTR gs:[esi]
  41a09e:	in     al,0x30
  41a0a0:	and    BYTE PTR [eax-0x32],ch
  41a0a3:	bound  esi,QWORD PTR [eax+0x3a]
  41a0a6:	xor    eax,0xcd77731f
  41a0ab:	sbb    al,0x65
  41a0ad:	bound  eax,QWORD PTR [eax]
	...
  41a0df:	add    cl,cl
  41a0e1:	outs   dx,BYTE PTR gs:[esi]
  41a0e3:	jae    0x41a0aa
  41a0e5:	fs je  0x41a15f
  41a0e8:	stos   DWORD PTR es:[edi],eax
  41a0e9:	jnp    0x41a14c
  41a0eb:	cs test eax,0x472f695e
  41a0f1:	add    BYTE PTR [ecx],cl
  41a0f3:	or     bh,BYTE PTR [edx]
  41a0f5:	push   es
  41a0f6:	add    BYTE PTR [eax],al
  41a0f8:	or     al,BYTE PTR [esi]
  41a0fa:	add    BYTE PTR [eax],al
  41a0fc:	or     al,BYTE PTR [esi]
  41a0fe:	add    BYTE PTR [eax],al
  41a100:	cli    
  41a101:	add    eax,0x5fa0000
  41a106:	add    BYTE PTR [eax],al
  41a108:	or     al,BYTE PTR [esi]
  41a10a:	add    BYTE PTR [eax],al
  41a10c:	or     al,BYTE PTR [esi]
  41a10e:	add    BYTE PTR [eax],al
  41a110:	cli    
  41a111:	add    eax,0x5fa0000
  41a116:	add    BYTE PTR [eax],al
  41a118:	retf   0x5
  41a11b:	add    dl,cl
  41a11d:	add    eax,0x5ba0000
  41a122:	add    BYTE PTR [eax],al
  41a124:	mov    edx,0xca000005
  41a129:	add    eax,0x5ca0000
  41a12e:	add    BYTE PTR [eax],al
  41a130:	arpl   WORD PTR [ecx+0x1d384eb2],bx
  41a136:	and    BYTE PTR [ebx],ch
  41a138:	addr16 xor cl,bh
  41a13b:	push   esp
  41a13c:	xchg   DWORD PTR [eax],edx
  41a13e:	mov    ds:0x80cb3e62,eax
  41a143:	or     DWORD PTR [eax],eax
	...
  41a175:	add    BYTE PTR [ecx+esi*8],ch
  41a178:	or     ecx,DWORD PTR [eax]
  41a17a:	push   edx
  41a17b:	mov    al,ds:0xb37f680a
  41a180:	jnp    0x41a1d3
  41a182:	fstp   st(3)
  41a184:	add    DWORD PTR [eax],eax
  41a186:	arpl   sp,bx
  41a188:	add    DWORD PTR [eax],eax
  41a18a:	arpl   si,bx
  41a18c:	add    DWORD PTR [eax],eax
  41a18e:	arpl   si,bx
  41a190:	add    DWORD PTR [eax],eax
  41a192:	arpl   si,bx
  41a194:	add    DWORD PTR [eax],eax
  41a196:	arpl   si,bx
  41a198:	add    DWORD PTR [eax],eax
  41a19a:	arpl   si,bx
  41a19c:	add    DWORD PTR [eax],eax
  41a19e:	arpl   si,bx
  41a1a0:	add    DWORD PTR [eax],eax
  41a1a2:	arpl   si,bx
  41a1a4:	add    DWORD PTR [eax],eax
  41a1a6:	arpl   si,bx
  41a1a8:	add    DWORD PTR [eax],eax
  41a1aa:	arpl   si,bx
  41a1ac:	add    DWORD PTR [eax],eax
  41a1ae:	arpl   si,bx
  41a1b0:	add    DWORD PTR [eax],eax
  41a1b2:	arpl   si,bx
  41a1b4:	add    DWORD PTR [eax],eax
  41a1b6:	arpl   si,bx
  41a1b8:	add    DWORD PTR [eax],eax
  41a1ba:	arpl   si,bx
  41a1bc:	add    DWORD PTR [eax],eax
  41a1be:	arpl   si,bx
  41a1c0:	add    DWORD PTR [eax],eax
  41a1c2:	arpl   si,bx
  41a1c4:	add    DWORD PTR [eax],eax
  41a1c6:	arpl   si,bx
  41a1c8:	add    DWORD PTR [eax],eax
  41a1ca:	arpl   si,bx
  41a1cc:	add    DWORD PTR [eax],eax
  41a1ce:	arpl   si,bx
  41a1d0:	add    DWORD PTR [eax],eax
  41a1d2:	arpl   si,bx
  41a1d4:	add    DWORD PTR [eax],eax
  41a1d6:	arpl   si,bx
  41a1d8:	add    DWORD PTR [eax],eax
	...
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	arpl   WORD PTR ds:0x56303e7,ax
  41a212:	out    0x3,eax
  41a214:	arpl   WORD PTR ds:0x56303e7,ax
  41a21a:	out    0x3,eax
  41a21c:	arpl   WORD PTR ds:0x56303e7,ax
  41a222:	out    0x3,eax
  41a224:	arpl   WORD PTR ds:0x56303e7,ax
  41a22a:	out    0x3,eax
  41a22c:	arpl   WORD PTR ds:0x56303e7,ax
  41a232:	out    0x3,eax
  41a234:	arpl   WORD PTR ds:0x56303e7,ax
  41a23a:	out    0x3,eax
  41a23c:	arpl   WORD PTR ds:0x56303e7,ax
  41a242:	out    0x3,eax
  41a244:	arpl   WORD PTR ds:0x56303e7,ax
  41a24a:	out    0x3,eax
  41a24c:	arpl   WORD PTR ds:0x56303e7,ax
  41a252:	out    0x3,eax
  41a254:	arpl   WORD PTR ds:0x56303e7,ax
  41a25a:	out    0x3,eax
  41a25c:	arpl   WORD PTR ds:0x56303e7,ax
  41a262:	out    0x3,eax
  41a264:	arpl   WORD PTR ds:0x56303e7,ax
  41a26a:	out    0x3,eax
  41a26c:	arpl   WORD PTR ds:0x3e7,ax
	...
  41a2a2:	arpl   WORD PTR ds:0x56303e7,ax
  41a2a8:	out    0x3,eax
  41a2aa:	arpl   WORD PTR ds:0x56303e7,ax
  41a2b0:	out    0x3,eax
  41a2b2:	arpl   WORD PTR ds:0x56303e7,ax
  41a2b8:	add    cl,ch
  41a2ba:	pusha  
  41a2bb:	add    eax,0x560e900
  41a2c0:	add    cl,ch
  41a2c2:	pusha  
  41a2c3:	add    eax,0x560e900
  41a2c8:	add    cl,ch
  41a2ca:	pusha  
  41a2cb:	add    eax,0x560e900
  41a2d0:	add    cl,ch
  41a2d2:	pusha  
  41a2d3:	add    eax,0x560e900
  41a2d8:	add    cl,ch
  41a2da:	pusha  
  41a2db:	add    eax,0x560e900
  41a2e0:	add    cl,ch
  41a2e2:	pusha  
  41a2e3:	add    eax,0x560e900
  41a2e8:	add    al,bl
  41a2ea:	cs ss xor al,0xd4
  41a2ee:	xchg   edx,eax
  41a2ef:	add    eax,0x74cf8870
  41a2f4:	jne    0x41a284
  41a2f6:	(bad)  
  41a2f7:	imul   eax,DWORD PTR [eax],0x6275b879
  41a2fd:	mov    esp,DWORD PTR [eax+0x5e]
  41a300:	jne    0x41a34e
  41a302:	mov    cl,0x79
  41a304:	ja     0x41a2ef
	...
  41a336:	add    BYTE PTR [eax],al
  41a338:	ja     0x41a36d
  41a33a:	xor    DWORD PTR ds:0x446a0572,ebx
  41a340:	nop
  41a341:	jb     0x41a3b4
  41a343:	jmp    0xf572d697
  41a348:	push   ebx
  41a349:	aaa    
  41a34a:	xor    eax,0x321e60f1
  41a34f:	cli    
  41a350:	dec    esp
  41a351:	add    eax,0x1e800b5f
  41a356:	xor    bl,dl
  41a358:	pusha  
  41a359:	popa   
  41a35a:	arpl   WORD PTR ds:0xff67627a,bx
  41a360:	pusha  
  41a361:	jns    0x41a3c6
  41a363:	add    cl,bl
  41a365:	pop    esi
  41a366:	add    BYTE PTR [ebp+ebx*2+0x5f],ch
  41a36a:	popa   
  41a36b:	add    BYTE PTR [ebx],cl
  41a36d:	xor    eax,0x69ba002f
  41a372:	outs   dx,DWORD PTR ds:[esi]
  41a373:	jae    0x41a30a
  41a375:	addr16 jb 0x41a3dc
  41a378:	dec    ebx
  41a379:	or     DWORD PTR [eax+0x65],ebp
  41a37c:	sahf   
  41a37d:	imul   ax,WORD PTR [eax],0xffdf
  41a381:	outs   dx,BYTE PTR ds:[si]
  41a383:	imul   esp,DWORD PTR [edi-0x379bff8f],0x69
  41a38a:	arpl   WORD PTR [edi-0x64],bp
  41a38d:	add    dh,BYTE PTR [edx+esi*2-0x49]
  41a391:	jae    0x41a407
  41a393:	outs   dx,BYTE PTR ds:[esi]
  41a394:	int    0x39
  41a396:	add    BYTE PTR [ecx],dh
  41a398:	mov    edi,DWORD PTR [ecx]
  41a39a:	sub    eax,0x31
	...
  41a3cb:	add    BYTE PTR [eax],al
  41a3cd:	add    BYTE PTR [ebx-0x22939afe],cl
  41a3d3:	pusha  
  41a3d4:	popa   
  41a3d5:	jns    0x41a3c4
  41a3d7:	je     0x41a3d9
  41a3d9:	xor    DWORD PTR [eax],ecx
  41a3db:	xor    esi,DWORD PTR [esi*1+0x73001f04]
  41a3e2:	loop   0x41a44c
  41a3e4:	outs   dx,DWORD PTR fs:[esi]
  41a3e6:	xchg   ebp,eax
  41a3e7:	or     DWORD PTR ds:0x31354932,ebp
  41a3ed:	ss inc ebp
  41a3ef:	xor    DWORD PTR ds:0x7261a900,esi
  41a3f5:	imul   ebx,DWORD PTR [ecx+0x75],0x67577300
  41a3fc:	outs   dx,DWORD PTR ds:[esi]
  41a3fd:	push   0x6167a3
  41a402:	aas    
  41a403:	push   0x7367746f
  41a408:	add    BYTE PTR [ebx+0x5d],ah
  41a40b:	pop    esp
  41a40c:	jo     0x41a483
  41a40e:	arpl   WORD PTR [eax],dx
  41a410:	pop    edi
  41a411:	jb     0x41a476
  41a413:	or     al,0x72
  41a415:	addr16 inc ebp
  41a417:	sti    
  41a418:	pop    esi
  41a419:	jno    0x41a46b
  41a41b:	fsubr  QWORD PTR [ebp+0x67]
  41a41e:	cmp    al,0xff
  41a420:	pop    esi
  41a421:	jb     0x41a486
  41a423:	push   es
  41a424:	gs ins DWORD PTR es:[edi],dx
  41a426:	das    
  41a427:	mov    edx,0xdc3f6c64
  41a42c:	outs   dx,BYTE PTR fs:[esi]
  41a42e:	cmp    al,0xc1
  41a430:	add    BYTE PTR gs:[eax],al
	...
  41a463:	add    BYTE PTR [ecx],cl
  41a465:	leave  
  41a466:	jb     0x41a4db
  41a468:	adc    ch,ch
  41a46a:	add    DWORD PTR [edi],ebp
  41a46c:	push   ecx
  41a46d:	jmp    0x41a4a3
  41a46f:	xor    dl,BYTE PTR [eax-0x24]
  41a472:	outs   dx,BYTE PTR ds:[esi]
  41a473:	push   0x7660b802
  41a478:	dec    BYTE PTR [ecx-0x770e99ff]
  41a47e:	pusha  
  41a47f:	fs hlt 
  41a481:	mov    BYTE PTR [ecx],al
  41a483:	imul   ecx,edx,0xd163656a
  41a489:	fisub  WORD PTR [ecx+esi*2-0x39]
  41a48d:	test   BYTE PTR [ecx],al
  41a48f:	jno    0x41a445
  41a491:	jg     0x41a4f5
  41a493:	arpl   WORD PTR [ecx-0x4c8c8d22],si
  41a499:	cmp    DWORD PTR [edx+0x6b],esi
  41a49c:	ret    0x43c
  41a49f:	imul   edi,DWORD PTR [edx-0x79a093c1],0x2a
  41a4a6:	add    al,0x61
  41a4a8:	mov    edi,DWORD PTR [ecx]
  41a4aa:	pop    ebp
  41a4ab:	jno    0x41a433
  41a4ad:	fisubr WORD PTR [edx+0x6e]
  41a4b0:	(bad)  
  41a4b1:	cmp    DWORD PTR [edx+0x6e],esi
  41a4b4:	xchg   BYTE PTR [edx],dh
  41a4b6:	add    al,0x6a
  41a4b8:	test   BYTE PTR ds:0x66706c1a,al
  41a4be:	out    0x5d,eax
  41a4c0:	jo     0x41a52a
  41a4c2:	add    bh,BYTE PTR [ebx+0x4e]
  41a4c5:	jb     0x41a4ae
  41a4c7:	popa   
	...
  41a4f8:	add    BYTE PTR [eax],al
  41a4fa:	inc    edi
  41a4fb:	(bad)  
  41a4fc:	cli    
  41a4fd:	jo     0x41a53f
  41a4ff:	popa   
  41a500:	out    0x61,eax
  41a502:	and    al,0x78
  41a504:	or     al,0x62
  41a506:	sbb    al,0x59
  41a508:	sti    
  41a509:	add    esi,DWORD PTR [edx]
  41a50b:	jno    0x41a4d5
  41a50d:	jno    0x41a545
  41a50f:	fnstenvw [eax+0x63]
  41a513:	xor    eax,0x35533417
  41a518:	pop    ss
  41a519:	add    al,0x13
  41a51b:	jb     0x41a4d6
  41a51d:	jae    0x41a51e
  41a51f:	popa   
  41a520:	out    0x69,eax
  41a522:	div    BYTE PTR [esi-0x35]
  41a525:	bound  ecx,QWORD PTR ds:0xfc62c505
  41a52b:	jo     0x41a4bc
  41a52d:	add    esi,edx
  41a52f:	jno    0x41a4bd
  41a531:	data16 add BYTE PTR [edi-0x19],dh
  41a535:	(bad)
  41a53a:	int3   
  41a53b:	add    eax,0x71d26e89
  41a540:	test   BYTE PTR [ecx+0x63],dh
  41a543:	pop    ebp
  41a544:	mov    WORD PTR [edx-0x4b],fs
  41a547:	bound  edi,QWORD PTR [ebp+0x3]
  41a54a:	mov    bl,0x62
  41a54c:	push   edi
  41a54d:	je     0x41a50f
  41a54f:	ja     0x41a538
  41a551:	sub    al,0x6e
  41a553:	xor    al,0x1e
  41a555:	sub    eax,0x6be73456
  41a55a:	nop
  41a55b:	pop    ebx
  41a55c:	cmp    ebx,DWORD PTR [edi+0x0]
	...
  41a58f:	add    BYTE PTR [ecx-0x729ab4fb],dl
  41a595:	bound  eax,QWORD PTR [eax]
  41a597:	inc    ebp
  41a598:	js     0x41a59f
  41a59a:	pop    edi
  41a59b:	aas    
  41a59c:	xor    DWORD PTR [edi+0x63],0x1e
  41a5a0:	addr16 jno 0x41a60b
  41a5a3:	push   cs
  41a5a4:	jl     0x41a5f2
  41a5a6:	jno    0x41a591
  41a5a8:	inc    ecx
  41a5a9:	pop    ebx
  41a5aa:	gs add al,0x4b
  41a5ad:	jbe    0x41a5af
  41a5af:	or     bh,BYTE PTR [edi]
  41a5b1:	dec    esp
  41a5b2:	jb     0x41a5c1
  41a5b4:	cmp    BYTE PTR [eax+0x0],ch
  41a5b7:	or     eax,0x4675b40
  41a5bc:	dec    ebx
  41a5bd:	add    eax,0x1c70182f
  41a5c2:	add    bl,dl
  41a5c4:	add    eax,0x3ec06e5b
  41a5c9:	push   0x6413e972
  41a5ce:	outs   dx,BYTE PTR ds:[esi]
  41a5cf:	into   
  41a5d0:	add    al,0x68
  41a5d2:	add    cl,dl
  41a5d4:	add    DWORD PTR [ebx+0x6e],ebx
  41a5d7:	enter  0x508,0x6f
  41a5db:	enter  0x71fa,0x71
  41a5df:	mov    eax,ds:0x995f5d60
  41a5e4:	lock jae 0x41a5e7
  41a5e7:	test   cl,al
  41a5e9:	jno    0x41a65d
  41a5eb:	sbb    al,0x5
  41a5ee:	jo     0x41a578
  41a5f0:	shl    DWORD PTR [eax+eax*1-0x78],cl
	...
  41a624:	add    BYTE PTR [eax],al
  41a626:	ror    DWORD PTR [edx+0x5f],0x88
  41a62a:	rol    DWORD PTR ds:0x3484b436,0x32
  41a631:	sbb    BYTE PTR [edi+0x4a],ah
  41a634:	imul   ecx,DWORD PTR [eax-0x3f],0x61
  41a638:	pop    edi
  41a639:	jmp    0x41b5fec0
  41a63e:	mov    dh,0x5b
  41a640:	gs add dl,bh
  41a643:	pop    edi
  41a644:	outs   dx,BYTE PTR gs:[esi]
  41a646:	popf   
  41a647:	pop    esp
  41a648:	jb     0x41a64a
  41a64a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a64b:	data16 je 0x41a6b6
  41a64e:	lahf   
  41a64f:	jae    0x41a651
  41a651:	jae    0x41a6a7
  41a653:	imul   si,WORD PTR [eax+0x43],0x1
  41a658:	push   0x65
  41a65a:	jns    0x41a6ce
  41a65c:	arpl   WORD PTR gs:[ebx+0x1],bp
  41a660:	jae    0x41a6c7
  41a662:	jbe    0x41a6c6
  41a664:	imul   ebp,DWORD PTR [ebp+0x5f],0x1
  41a668:	jo     0x41a6d9
  41a66a:	popa   
  41a66b:	pop    esp
  41a66c:	imul   ebp,DWORD PTR [edi-0x4c],0x956c6506
  41a673:	ins    BYTE PTR es:[edi],dx
  41a674:	popa   
  41a675:	jns    0x41a60c
  41a677:	ins    DWORD PTR es:[edi],dx
  41a678:	sub    eax,0x2d307b00
  41a67d:	xor    DWORD PTR [ebx+0x1],edi
  41a680:	imul   esi,DWORD PTR [ebp-0x37],0x9d6e5d72
  41a687:	push   es
  41a688:	push   0x65
	...
  41a6b9:	add    BYTE PTR [eax],al
  41a6bb:	add    BYTE PTR [esi-0x759a968a],ah
  41a6c1:	dec    eax
  41a6c2:	jno    0x41a737
  41a6c4:	into   
  41a6c5:	dec    ecx
  41a6c6:	outs   dx,BYTE PTR ds:[esi]
  41a6c7:	add    al,dl
  41a6c9:	popa   
  41a6ca:	outs   dx,DWORD PTR ds:[esi]
  41a6cb:	ins    DWORD PTR es:[edi],dx
  41a6cc:	jecxz  0x41a731
  41a6ce:	popa   
  41a6cf:	add    ch,dl
  41a6d1:	jo     0x41a730
  41a6d3:	outs   dx,BYTE PTR ds:[esi]
  41a6d4:	fstp   QWORD PTR [eax+eax*1+0x74]
  41a6d8:	fbstp  TBYTE PTR [edx+0x74]
  41a6db:	imul   esp,esp,0xba61005e
  41a6e1:	jbe    0x41a74f
  41a6e3:	cmp    ah,BYTE PTR gs:[ebp+0x65]
  41a6e7:	arpl   WORD PTR [edx+0x636c6c5c],dx
  41a6ed:	cmp    DWORD PTR [eax+esi*2],eax
  41a6f0:	jle    0x41a72f
  41a6f2:	arpl   WORD PTR gs:[ebx+0x2f],sp
  41a6f6:	addr16 popa 
  41a6f8:	xchg   ecx,eax
  41a6f9:	inc    ecx
  41a6fa:	js     0x41a6fc
  41a6fc:	xor    bl,ah
  41a6fe:	push   0x72
  41a700:	cmp    BYTE PTR [edi],0x67
  41a703:	add    BYTE PTR [ebp+edx*1+0x60],dh
  41a707:	ins    BYTE PTR es:[edi],dx
  41a708:	jp     0x41a707
  41a70a:	pop    esi
  41a70b:	add    BYTE PTR [edx+0x0],cl
  41a70e:	popa   
  41a70f:	jbe    0x41a74f
  41a711:	adc    eax,0xdc917361
  41a716:	pop    edi
  41a717:	addr16 inc eax
  41a719:	sti    
  41a71a:	pop    edi
  41a71b:	arpl   WORD PTR [ebx-0x56],sp
  41a71e:	aaa    
  41a71f:	add    BYTE PTR ss:[eax],al
	...
  41a752:	ins    DWORD PTR es:[edi],dx
  41a753:	mov    dl,0x37
  41a755:	add    BYTE PTR [esi],bh
  41a757:	leave  
  41a758:	data16 cmp bh,BYTE PTR [bp+si+0x6501]
  41a75e:	add    cl,al
  41a760:	push   0x1d50275
  41a765:	pushw  ss
  41a767:	mov    edi,0xb0f4775e
  41a76c:	xor    al,0x0
  41a76e:	add    ch,BYTE PTR [edi-0x57fb978a]
  41a774:	push   0x597cfb00
  41a779:	pop    edi
  41a77a:	sti    
  41a77b:	jl     0x41a77e
  41a77d:	jo     0x41a74b
  41a77f:	jg     0x41a7f2
  41a781:	add    cl,al
  41a783:	push   0x68
  41a785:	jno    0x41a757
  41a787:	xchg   ebp,eax
  41a788:	pop    edi
  41a789:	arpl   WORD PTR gs:[ebp+ebx*2+0x5f],di
  41a78e:	retf   
  41a78f:	jl     0x41a7ee
  41a791:	pop    edi
  41a792:	retf   
  41a793:	fisub  WORD PTR [eax+0x77]
  41a796:	mov    al,0x5
  41a798:	push   edi
  41a799:	arpl   dx,ax
  41a79b:	bound  ebx,QWORD PTR [eax]
  41a79d:	add    al,0x88
  41a79f:	pop    bx
  41a7a1:	js     0x41a72e
  41a7a3:	bound  edx,QWORD PTR [esi+0x4]
  41a7a6:	and    BYTE PTR [esi+0x55],0x63
  41a7aa:	jg     0x41a812
  41a7ac:	out    0x74,eax
  41a7ae:	test   BYTE PTR [ecx+0x3d],bl
  41a7b1:	addr16 jno 0x41a7b9
  41a7b4:	cmp    DWORD PTR [ecx+0x0],esp
	...
  41a7e7:	add    BYTE PTR [ecx+0x63781962],al
  41a7ed:	pop    edi
  41a7ee:	push   cs
  41a7ef:	jbe    0x41a831
  41a7f1:	outs   dx,DWORD PTR ds:[esi]
  41a7f2:	or     al,0x76
  41a7f4:	arpl   WORD PTR [esi+0x1a],sp
  41a7f7:	push   0x40f6045
  41a7fc:	push   ecx
  41a7fd:	data16 or bl,BYTE PTR [eax+eax*2+0x59]
  41a802:	out    0x75,eax
  41a804:	adc    al,0x5e
  41a806:	std    
  41a807:	gs ds jo 0x41a7f2
  41a80b:	push   0x62d35e30
  41a810:	adc    DWORD PTR ds:0x573466d7,eax
  41a816:	aam    0x77
  41a818:	arpl   WORD PTR [ebx-0x38],sp
  41a81b:	ja     0x41a815
  41a81d:	gs int 0x3
  41a820:	add    bl,BYTE PTR [eax-0x3a]
  41a823:	pop    esp
  41a824:	cld    
  41a825:	popa   
  41a826:	out    0x65,eax
  41a828:	or     al,0x5e
  41a82a:	xchg   ebx,eax
  41a82b:	data16 in al,dx
  41a82d:	add    al,0x9a
  41a82f:	pusha  
  41a830:	ret    0x8c64
  41a833:	jne    0x41a7b9
  41a835:	add    eax,0x5cc25a7c
  41a83a:	mov    WORD PTR [edx+0x63],gs
  41a83d:	arpl   WORD PTR [eax+0x5ac077],dx
  41a843:	mov    WORD PTR [eax+0x5d],fs
  41a846:	arpl   WORD PTR [ebp-0x74],di
  41a849:	pop    edx
  41a84a:	das    
  41a84b:	jmp    0x41a850
	...
  41a87c:	add    BYTE PTR [eax],al
  41a87e:	mov    ebp,0x844f675c
  41a883:	pop    esp
  41a884:	add    BYTE PTR [ebp-0x80],cl
  41a887:	pop    esi
  41a888:	ins    DWORD PTR es:[edi],dx
  41a889:	push   ebp
  41a88a:	add    BYTE PTR ds:0x48a44871,0x6e
  41a891:	xor    eax,0x4a00489f
  41a896:	sbb    BYTE PTR [eax+esi*2+0x48],0x70
  41a89b:	add    eax,0x5c801064
  41a8a0:	ins    DWORD PTR es:[edi],dx
  41a8a1:	cmovnp eax,DWORD PTR ds:0x59480874
  41a8a8:	ins    DWORD PTR es:[edi],dx
  41a8a9:	sbb    esp,DWORD PTR [edi+0x5f]
  41a8ac:	ins    DWORD PTR es:[edi],dx
  41a8ad:	sti    
  41a8ae:	dec    ebp
  41a8af:	pop    esp
  41a8b0:	add    BYTE PTR [ebx],dl
  41a8b2:	inc    edx
  41a8b3:	pop    ebp
  41a8b4:	outs   dx,BYTE PTR ds:[esi]
  41a8b5:	mov    edx,0xfb002f71
  41a8ba:	or     DWORD PTR [esi+0x68],esp
  41a8bd:	enter  0x612e,0x0
  41a8c1:	retf   
  41a8c2:	cmp    al,0x60
  41a8c4:	outs   dx,BYTE PTR ds:[esi]
  41a8c5:	ret    0x2d51
  41a8c8:	xor    ch,cl
  41a8ca:	adc    BYTE PTR [edi+ebx*2-0x36],ah
  41a8ce:	sub    BYTE PTR [ecx+esi*2-0x17],ah
  41a8d2:	pop    es
  41a8d3:	pop    edx
  41a8d4:	ins    DWORD PTR es:[edi],dx
  41a8d5:	lds    esp,FWORD PTR [eax+0x5f]
  41a8d8:	ins    BYTE PTR es:[edi],dx
  41a8d9:	mov    esi,0xe97263eb
  41a8de:	out    dx,eax
  41a8df:	gs ins DWORD PTR es:[edi],dx
  41a8e1:	mov    es,WORD PTR [eax]
	...
  41a913:	add    ah,dl
  41a915:	bound  esi,QWORD PTR [edx-0x17]
  41a918:	mov    esi,0xc2886e46
  41a91d:	inc    esi
  41a91e:	add    BYTE PTR [eax],al
  41a920:	lock arpl WORD PTR [ecx+0x65],bp
  41a924:	mov    ecx,0xe6735d02
  41a929:	pop    esp
  41a92a:	pop    ebp
  41a92b:	jae    0x41a913
  41a92d:	pop    esp
  41a92e:	add    BYTE PTR [esi-0x6d],dh
  41a931:	bound  esi,QWORD PTR [edi+ebp*2-0x48]
  41a935:	pop    eax
  41a936:	add    BYTE PTR [ebp+ebx*4+0x47],ch
  41a93a:	outs   dx,DWORD PTR fs:[esi]
  41a93c:	dec    esp
  41a93d:	add    DWORD PTR ds:0x73720932,ebp
  41a943:	or     dh,BYTE PTR gs:[edx]
  41a946:	xor    dh,BYTE PTR [ebx]
  41a948:	stc    
  41a949:	xor    al,0x2d
  41a94b:	add    BYTE PTR [ecx],ch
  41a94d:	ins    DWORD PTR es:[edi],dx
  41a94e:	pop    ebp
  41a94f:	jb     0x41a997
  41a951:	jae    0x41a9b4
  41a953:	imul   ecx,edx,0x5f
  41a956:	popa   
  41a957:	outs   dx,DWORD PTR ds:[esi]
  41a958:	js     0x41a9b8
  41a95a:	popa   
  41a95b:	add    BYTE PTR [ebp+0x48],dh
  41a95e:	outs   dx,BYTE PTR ds:[esi]
  41a95f:	outs   dx,BYTE PTR ds:[esi]
  41a960:	push   edi
  41a961:	jae    0x41a963
  41a963:	ins    DWORD PTR es:[edi],dx
  41a964:	imul   ebx,DWORD PTR [esi+0x63],0x69
  41a968:	add    DWORD PTR [si+0x72],esi
  41a96c:	arpl   WORD PTR [edi+0x65],ax
  41a96f:	je     0x41a934
  41a971:	add    ch,BYTE PTR [ebx+0x6e]
  41a974:	scas   al,BYTE PTR es:[edi]
  41a975:	dec    ecx
  41a976:	outs   dx,BYTE PTR ds:[esi]
  41a977:	add    BYTE PTR gs:[eax],al
	...
  41a9aa:	mov    dh,BYTE PTR [ecx]
  41a9ac:	xor    dh,BYTE PTR [ebx]
  41a9ae:	fwait
  41a9af:	fs pop edi
  41a9b1:	add    BYTE PTR [ecx-0x6e9c9ab6],bl
  41a9b7:	pop    ebp
  41a9b8:	outs   dx,BYTE PTR ds:[esi]
  41a9b9:	add    BYTE PTR [eax-0x52969193],ah
  41a9bf:	je     0x41a9c1
  41a9c1:	arpl   dx,dx
  41a9c3:	je     0x41aa2a
  41a9c5:	jae    0x41aa11
  41a9c7:	jb     0x41aa26
  41a9c9:	jae    0x41aa2e
  41a9cb:	mov    esi,DWORD PTR [esi+0x30]
  41a9ce:	rol    DWORD PTR [eax+0x6bce5f01],1
  41a9d4:	jne    0x41aa3d
  41a9d6:	int    0xdc
  41a9d8:	jb     0x41aa4a
  41a9da:	ret    0x5a6a
  41a9dd:	ja     0x41aa42
  41a9df:	jge    0x41aa46
  41a9e1:	imul   edi,DWORD PTR [edx-0x7994fbb2],0x4a
  41a9e8:	pusha  
  41a9e9:	addr16 test esp,ebx
  41a9ec:	ins    WORD PTR es:[edi],dx
  41a9ee:	jl     0x41aa2f
  41a9f0:	pusha  
  41a9f1:	arpl   WORD PTR [ebx+0x36],sp
  41a9f4:	jb     0x41aa5d
  41a9f6:	xchg   BYTE PTR [esi],dh
  41a9f8:	push   0x5d446371
  41a9fd:	jo     0x41a985
  41a9ff:	fdiv   QWORD PTR [edx+0x68]
  41aa02:	adc    BYTE PTR [eax],0x5d
  41aa05:	imul   esp,DWORD PTR [ebx-0xa],0x5a
  41aa09:	outs   dx,BYTE PTR ds:[esi]
  41aa0a:	dec    edi
  41aa0b:	stc    
  41aa0c:	pop    ebp
  41aa0d:	add    BYTE PTR fs:[eax],al
	...
  41aa40:	cmp    al,0xdc
  41aa42:	pop    ebp
  41aa43:	ins    DWORD PTR es:[edi],dx
  41aa44:	xor    al,0x13
  41aa46:	pop    ebx
  41aa47:	outs   dx,BYTE PTR ds:[esi]
  41aa48:	inc    esp
  41aa49:	fcomp  QWORD PTR [ecx+0x5f]
  41aa4c:	xor    DWORD PTR [eax],eax
  41aa4e:	addr16 ja 0x41aab4
  41aa51:	jmp    0x41aab3
  41aa53:	ins    DWORD PTR es:[edi],dx
  41aa54:	cmp    BYTE PTR [ecx+0xf54006c],bh
  41aa5a:	xor    eax,0x5ec26335
  41aa5f:	jno    0x41aa67
  41aa61:	int3   
  41aa62:	pop    ecx
  41aa63:	add    bh,dh
  41aa65:	test   al,0x62
  41aa67:	imul   edi,edx,0xfc6765db
  41aa6d:	les    esi,FWORD PTR [ebp+0x5f]
  41aa70:	(bad)  
  41aa71:	(bad)  [eax+eax*1-0x11]
  41aa75:	add    al,0x8f
  41aa77:	js     0x41aa46
  41aa79:	imul   eax,DWORD PTR [ecx+esi*2+0x5c975863],0x3936ed1
  41aa84:	shl    DWORD PTR [esi-0x6b],0x67
  41aa88:	les    ebx,FWORD PTR [ecx-0x19]
  41aa8b:	push   0x718c59c5
  41aa90:	arpl   WORD PTR [esi+0x7d],sp
  41aa93:	ja     0x41aa50
  41aa95:	je     0x41aaec
  41aa97:	imul   esp,DWORD PTR [ebx+0x68],0x4e
  41aa9b:	jb     0x41aa2a
  41aa9d:	push   0x5b
  41aa9f:	js     0x41aa21
  41aaa1:	add    eax,0x5d3f
	...
  41aad6:	xor    BYTE PTR [eax+0x4c],0x6b
  41aada:	arpl   WORD PTR [ebp+0x4e],dx
  41aadd:	jne    0x41aa5f
  41aadf:	push   edi
  41aae0:	out    0x61,eax
  41aae2:	xor    BYTE PTR [ebx+0x41],0x63
  41aae6:	js     0x41ab56
  41aae8:	adc    eax,0xe714404
  41aaed:	jbe    0x41ab2f
  41aaef:	pop    esi
  41aaf0:	push   es
  41aaf1:	ja     0x41ab5f
  41aaf3:	add    eax,0x5c9172d8
  41aaf8:	mov    edx,0x105b6366
  41aafd:	je     0x41ab3f
  41aaff:	push   edi
  41ab00:	out    0x64,eax
  41ab02:	inc    eax
  41ab03:	jae    0x41ab09
  41ab05:	jno    0x41ab43
  41ab07:	pop    eax
  41ab08:	out    0x58,eax
  41ab0a:	or     eax,0xf5bc66e
  41ab0f:	add    eax,0x570074d8
  41ab14:	shr    DWORD PTR [edx+0x34],cl
  41ab17:	add    eax,0x660071ca
  41ab1c:	mov    bl,0x5a
  41ab1e:	in     eax,dx
  41ab1f:	imul   eax,DWORD PTR [eax],0x6d7206e9
  41ab25:	retf   
  41ab26:	add    DWORD PTR [edi+0x0],edx
  41ab29:	mov    ah,al
  41ab2b:	ins    BYTE PTR es:[edi],dx
  41ab2c:	fs mov bl,dl
  41ab2f:	add    eax,0x6cd48672
  41ab34:	imul   eax,DWORD PTR [eax-0x7793a9a0],0x0
	...
  41ab6b:	add    cl,cl
  41ab6d:	push   0x6cafe972
  41ab72:	jno    0x41ab01
  41ab74:	(bad)  
  41ab75:	jo     0x41ab77
  41ab77:	jns    0x41ab2b
  41ab79:	inc    esp
  41ab7a:	addr16 pop edx
  41ab7c:	test   BYTE PTR ds:0x5b82617a,al
  41ab82:	bound  eax,QWORD PTR [edi-0x54]
  41ab85:	add    eax,0x58a44871
  41ab8a:	arpl   WORD PTR [ebp+0x67],dx
  41ab8d:	jo     0x41abf6
  41ab8f:	push   edx
  41ab90:	jl     0x41ab97
  41ab92:	fs dec eax
  41ab94:	xor    DWORD PTR [ecx+0x5f],0x3a
  41ab98:	pop    edi
  41ab99:	push   0x72
  41ab9b:	or     al,0x44
  41ab9d:	jae    0x41ab9f
  41ab9f:	adc    eax,0x1d74563c
  41aba4:	inc    esp
  41aba5:	push   esi
  41aba6:	je     0x41ab91
  41aba8:	and    eax,0x310c7644
  41abad:	ins    BYTE PTR es:[edi],dx
  41abae:	popa   
  41abaf:	adc    bl,BYTE PTR [edi+0x72]
  41abb2:	outs   dx,BYTE PTR ds:[esi]
  41abb3:	or     al,0x43
  41abb5:	jb     0x41ac2d
  41abb7:	add    al,0x5f
  41abb9:	imul   ebx,DWORD PTR [edi-0x21],0xcc006939
  41abc0:	or     DWORD PTR [ecx+0x6d],esi
  41abc3:	fild   WORD PTR ds:0xdc16105
  41abc9:	push   edi
  41abca:	popa   
  41abcb:	add    BYTE PTR [edx+0x726607],dl
	...
  41ac01:	add    BYTE PTR [ebx+0x7a646e6a],dl
  41ac07:	push   0x6b7a646b
  41ac0c:	popa   
  41ac0d:	jae    0x41ac0d
  41ac0f:	aas    
  41ac10:	outs   dx,BYTE PTR ds:[esi]
  41ac11:	jns    0x41ac5d
  41ac13:	inc    ecx
  41ac14:	imul   ebp,DWORD PTR [esi-0x21],0x6
  41ac18:	imul   ebp,DWORD PTR [ecx-0x27],0xd5736b54
  41ac1f:	push   0x14f80074
  41ac24:	xor    dh,BYTE PTR [edx]
  41ac26:	call   0xafa3ac3f
  41ac2b:	bound  ebp,QWORD PTR fs:[edi+ebp*4+0x5a]
  41ac30:	add    BYTE PTR [ecx],dh
  41ac32:	jnp    0x41ac4c
  41ac34:	sub    eax,0x2d186b31
  41ac39:	add    BYTE PTR [ecx-0x569ea0c2],bl
  41ac3f:	ds ins BYTE PTR es:[edi],dx
  41ac41:	popa   
  41ac42:	or     al,BYTE PTR [ecx+0x6b]
  41ac45:	jb     0x41abe5
  41ac47:	push   0x6e9326e
  41ac4c:	gs ins BYTE PTR es:[edi],dx
  41ac4e:	jne    0x41aca7
  41ac50:	popa   
  41ac51:	gs add BYTE PTR gs:[bp+0x65],ah
  41ac57:	ds je  0x41acbc
  41ac5a:	pop    ebx
  41ac5b:	cmp    eax,0x3aca316c
  41ac60:	imul   esi,DWORD PTR [esi+0x53],0x3f
  41ac64:	arpl   WORD PTR [eax],ax
	...
  41ac96:	add    BYTE PTR [eax],al
  41ac98:	fs push 0x3f5b6874
  41ac9e:	add    BYTE PTR [ebp-0x49],ah
  41aca1:	cmp    eax,0x65af6e5d
  41aca6:	ins    BYTE PTR es:[edi],dx
  41aca7:	add    BYTE PTR [ebx-0x41],ah
  41acaa:	ins    WORD PTR es:[edi],dx
  41acac:	hlt    
  41acad:	int    0x6c
  41acaf:	add    BYTE PTR ds:0x46966a1,al
  41acb5:	retf   0x5f
  41acb8:	lock int3 
  41acba:	pop    eax
  41acbb:	imul   ebp,edx,0xffffffeb
  41acbe:	pop    eax
  41acbf:	pop    edi
  41acc0:	fild   DWORD PTR [ebx-0x133893a0]
  41acc6:	pop    ebx
  41acc7:	pop    edi
  41acc8:	ror    BYTE PTR [ebx+0x63b90057],1
  41acce:	pop    ecx
  41accf:	outs   dx,BYTE PTR ds:[esi]
  41acd0:	arpl   WORD PTR [ebp-0x6053cd8c],bx
  41acd6:	pusha  
  41acd7:	xor    al,0xb1
  41acd9:	in     al,dx
  41acda:	arpl   WORD PTR [edi-0x3f],bx
  41acdd:	push   ebp
  41acde:	add    DWORD PTR [edx-0x7a],esi
  41ace1:	push   eax
  41ace2:	xor    esi,DWORD PTR [edx]
  41ace4:	push   eax
  41ace5:	in     al,dx
  41ace6:	arpl   WORD PTR [edx+eax*4+0x4e],bp
  41acea:	pop    eax
  41aceb:	pop    edi
  41acec:	arpl   WORD PTR [esi+esi*2],di
  41acef:	lea    ecx,[bx+0x5f]
  41acf3:	add    BYTE PTR [edx+0x1b],dh
  41acf6:	pop    edi
  41acf7:	jb     0x41ad70
  41acf9:	in     al,dx
  41acfa:	pushw  0x0
	...
  41ad2e:	jle    0x41ad50
  41ad30:	jne    0x41ad95
  41ad32:	inc    edx
  41ad33:	in     al,dx
  41ad34:	xor    BYTE PTR [ebx],dh
  41ad36:	mov    ?,WORD PTR [ecx+0xa420030]
  41ad3c:	popa   
  41ad3d:	arpl   WORD PTR [edi],si
  41ad3f:	mov    ebp,0xde426801
  41ad44:	pop    ebp
  41ad45:	popa   
  41ad46:	inc    esp
  41ad47:	fisub  WORD PTR [eax+0x0]
  41ad4a:	inc    edi
  41ad4b:	adc    DWORD PTR [esp+esi*2+0x3e],ebp
  41ad4f:	fiadd  WORD PTR [ecx]
  41ad51:	jno    0x41ad55
  41ad53:	add    eax,0x4ff60dd
  41ad58:	sbb    BYTE PTR ds:0x371a1751,dh
  41ad5e:	arpl   WORD PTR [ebp-0x38],bp
  41ad61:	push   edi
  41ad62:	psrad  mm7,0x5d
  41ad66:	adc    al,0x56
  41ad68:	mov    bh,0x60
  41ad6a:	icebp  
  41ad6b:	add    al,0xcb
  41ad6d:	fs cmc 
  41ad6f:	imul   eax,esp,0x57
  41ad72:	iret   
  41ad73:	push   0xffffffe7
  41ad75:	pop    esi
  41ad76:	mov    esp,0xbd609359
  41ad7b:	add    eax,0x54d2648a
  41ad80:	and    BYTE PTR [eax+0x63],0x54
  41ad84:	jnp    0x41ade6
  41ad86:	(bad)  
  41ad87:	jno    0x41ad11
  41ad89:	add    esi,DWORD PTR [ebx-0x3f9377ad]
  41ad8f:	push   ebx
  41ad90:	out    0x5b,eax
	...
  41adc2:	add    BYTE PTR [eax],al
  41adc4:	mov    ds,WORD PTR [ecx+0x4b]
  41adc7:	pop    ecx
  41adc8:	jle    0x41adcf
  41adca:	push   esi
  41adcb:	pop    ebx
  41adcc:	jge    0x41ae37
  41adce:	inc    esi
  41adcf:	jno    0x41ad63
  41add1:	add    eax,0x59726f3c
  41add6:	dec    ebx
  41add7:	pop    ebx
  41add8:	add    BYTE PTR ds:0x6a776346,0x3a
  41addf:	add    al,0x81
  41ade1:	outs   dx,BYTE PTR ds:[esi]
  41ade2:	cmp    ebx,DWORD PTR [eax+0x46]
  41ade5:	sbb    bx,WORD PTR [edi+0x52]
  41ade9:	add    eax,0x69415c06
  41adee:	sbb    ebx,DWORD PTR [edx+0x63]
  41adf1:	push   0x6c495c05
  41adf6:	adc    al,0x4
  41adf8:	test   BYTE PTR [ebx],dl
  41adfa:	mov    edx,0x17702f
  41adff:	mov    esi,0xe9301878
  41ae04:	pusha  
  41ae05:	fs je  0x41adea
  41ae08:	push   cs
  41ae09:	push   edi
  41ae0a:	imul   ecx,esi,0xdc756f16
  41ae10:	pusha  
  41ae11:	ins    DWORD PTR es:[edi],dx
  41ae12:	je     0x41ade9
  41ae14:	lock sbb ch,BYTE PTR ds:0x2e304816
  41ae1b:	clc    
  41ae1c:	xor    BYTE PTR ss:[esi],ch
  41ae1f:	lock das 
  41ae21:	das    
  41ae22:	das    
  41ae23:	test   BYTE PTR [eax+0xd9381b],0x0
	...
  41ae5a:	mov    BYTE PTR ds:0x6fab992d,dl
  41ae60:	ja     0x41ae28
  41ae62:	ret    
  41ae63:	inc    eax
  41ae64:	je     0x41adea
  41ae66:	pop    edx
  41ae67:	push   ebp
  41ae68:	push   0x746d6079
  41ae6d:	jne    0x41ae1f
  41ae6f:	sbb    ebp,DWORD PTR ds:0x7254c1c6
  41ae75:	add    BYTE PTR [ecx-0x7fb29c91],0x6c
  41ae7c:	arpl   WORD PTR [ebx+0x69],sp
  41ae7f:	addr16 jb 0x41ae95
  41ae82:	aaa    
  41ae83:	adc    eax,0x555a1938
  41ae88:	ins    DWORD PTR es:[edi],dx
  41ae89:	push   edi
  41ae8a:	mov    BYTE PTR [edx],dh
  41ae8c:	gs dec eax
  41ae8e:	jae    0x41aef4
  41ae90:	cmp    DWORD PTR cs:[edi+0x38e90055],eax
  41ae97:	pop    ecx
  41ae98:	je     0x41aeb3
  41ae9a:	test   DWORD PTR [edx],esi
  41ae9c:	sub    eax,0x2e5a5216
  41aea1:	or     ebp,DWORD PTR [ebx]
  41aea3:	inc    eax
  41aea4:	popa   
  41aea5:	add    bl,BYTE PTR [edi]
  41aea7:	jb     0x41af1d
  41aea9:	add    BYTE PTR [edi+0x3d],ah
  41aeac:	imul   esi,DWORD PTR cs:[esi-0x559d9a04],0x7358326b
  41aeb7:	push   ecx
  41aeb8:	sub    esp,DWORD PTR [ecx+0x76]
  41aebb:	inc    edx
  41aebc:	jp     0x41af02
	...
  41aeee:	add    BYTE PTR [eax],al
  41aef0:	pop    esp
  41aef1:	inc    eax
  41aef2:	js     0x41af59
  41aef4:	jp     0x41af31
  41aef6:	je     0x41af6c
  41aef8:	call   0x7354:0xb52f2b31
  41aeff:	cs cwde 
  41af01:	cmp    al,0x5d
  41af03:	je     0x41af64
  41af05:	cmp    BYTE PTR [ebp+0x6e],bl
  41af08:	pop    esp
  41af09:	cmp    al,0x74
  41af0b:	das    
  41af0c:	jmp    0x41af40
  41af0e:	dec    ecx
  41af0f:	xor    eax,DWORD PTR [edx]
  41af11:	sub    al,0x4a
  41af13:	push   0x7051221d
  41af18:	fcomp  QWORD PTR [edx]
  41af1a:	xor    ebp,DWORD PTR [esi-0x29]
  41af1d:	cld    
  41af1e:	pusha  
  41af1f:	js     0x41af08
  41af21:	add    ch,BYTE PTR [eax+0x74]
  41af24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af25:	push   edx
  41af26:	cmp    ch,BYTE PTR [edi]
  41af28:	fstp   QWORD PTR [ecx+0x61]
  41af2b:	imul   esp,DWORD PTR [esi-0x6498d6ca],0x9c65713a
  41af35:	imul   DWORD PTR [ebp+0x65]
  41af38:	xchg   esi,eax
  41af39:	div    BYTE PTR [ebx+0x30]
  41af3c:	xchg   edx,eax
  41af3d:	adc    al,0x69
  41af3f:	push   0x582b18f7
  41af44:	cwde   
  41af45:	inc    eax
  41af46:	push   esi
  41af47:	jne    0x41af24
  41af49:	clc    
  41af4a:	pusha  
  41af4b:	js     0x41afb4
  41af4d:	or     DWORD PTR [eax],eax
  41af4f:	pop    ecx
  41af50:	xchg   edi,eax
  41af51:	and    BYTE PTR [eax+0x57],dl
	...
  41af84:	add    BYTE PTR [eax],al
  41af86:	arpl   WORD PTR [eax],si
  41af88:	ds inc edi
  41af8a:	das    
  41af8b:	sub    DWORD PTR [edi+edx*2],esi
  41af8e:	push   cs
  41af8f:	adc    eax,0x26274954
  41af94:	cmp    ecx,DWORD PTR [esi+ebx*1-0x64]
  41af98:	dec    esp
  41af99:	push   ebx
  41af9a:	sub    ch,BYTE PTR [ebx]
  41af9c:	push   edx
  41af9d:	push   edi
  41af9e:	xor    esp,DWORD PTR [eax-0x3aacbbc0]
  41afa4:	push   eax
  41afa5:	inc    edi
  41afa6:	push   edx
  41afa7:	push   es
  41afa8:	xor    al,0x0
  41afaa:	arpl   sp,bp
  41afac:	add    DWORD PTR [eax],eax
  41afae:	popa   
  41afaf:	in     al,dx
  41afb0:	cmp    BYTE PTR [ebp+0x27],cl
  41afb3:	jns    0x41afb9
  41afb5:	jmp    DWORD PTR [esp+ebp*8+0x1]
  41afb9:	add    BYTE PTR [ebx-0x14],ah
  41afbc:	add    DWORD PTR [eax],eax
  41afbe:	mov    al,0x97
  41afc0:	cmp    edx,DWORD PTR [esp+esi*4-0x53]
  41afc4:	dec    edi
  41afc5:	inc    ebx
  41afc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afc7:	test   eax,0x5fb1615c
  41afcc:	jb     0x41b03b
  41afce:	mov    ebp,0xba554560
  41afd3:	mov    ds,WORD PTR [ebp+0x6d]
  41afd6:	lods   al,BYTE PTR ds:[esi]
  41afd7:	pop    ebx
  41afd8:	inc    ebp
  41afd9:	inc    ecx
  41afda:	xchg   esi,eax
  41afdb:	pop    edx
  41afdc:	outs   dx,DWORD PTR ds:[esi]
  41afdd:	arpl   WORD PTR [ebp-0x6e9cb1c0],ax
  41afe3:	cmp    ebx,DWORD PTR [ebx+0x6d]
  41afe6:	jne    0x41b000
  41afe8:	dec    edi
  41afe9:	outs   dx,BYTE PTR ds:[esi]
	...
  41b01a:	add    BYTE PTR [eax],al
  41b01c:	mov    bl,BYTE PTR [esi]
  41b01e:	jno    0x41b094
  41b020:	cmp    BYTE PTR [eax],0x58
  41b023:	add    BYTE PTR [esi+0x706e5b4e],dl
  41b029:	and    BYTE PTR [ebx+0x6c],ah
  41b02c:	dec    edi
  41b02d:	sti    
  41b02e:	outs   dx,DWORD PTR ds:[esi]
  41b02f:	jb     0x41b07b
  41b031:	add    eax,0x49635f15
  41b036:	adc    BYTE PTR [ebx+0x53],dh
  41b039:	jno    0x41b043
  41b03b:	ins    DWORD PTR es:[edi],dx
  41b03c:	sub    eax,0x6360fc64
  41b041:	inc    ecx
  41b042:	out    0x3,eax
  41b044:	arpl   WORD PTR ds:0x56303e7,ax
  41b04a:	out    0x5a,eax
  41b04c:	add    BYTE PTR [ebx-0x3],dl
  41b04f:	pusha  
  41b050:	pop    es
  41b051:	adc    bl,BYTE PTR [ecx]
  41b053:	push   ss
  41b054:	pop    es
  41b055:	jno    0x41b022
  41b057:	add    ebp,DWORD PTR [esi]
  41b059:	cmp    DWORD PTR [edx-0x57a6ffc2],edi
  41b05f:	(bad)  
  41b060:	out    dx,eax
  41b061:	imul   edi,DWORD PTR [ebp-0x3291dda0],0x72
  41b068:	div    BYTE PTR [eax-0x34]
  41b06b:	push   edx
  41b06c:	rcr    BYTE PTR [eax-0x46],0x5c
  41b070:	(bad)  
  41b071:	imul   esi,DWORD PTR [eax-0x66ca9ca1],0x56
  41b078:	ret    0x9a62
  41b07b:	jb     0x41b021
  41b07d:	popa   
  41b07e:	mov    bl,0x56
	...
  41b0b0:	add    BYTE PTR [eax],al
  41b0b2:	xchg   edx,eax
  41b0b3:	bound  edi,QWORD PTR [edx+0x72]
  41b0b6:	les    ebp,FWORD PTR [ebp+ecx*4+0x3c]
  41b0ba:	mov    edi,0x6303e705
  41b0bf:	add    eax,0x56303e7
  41b0c4:	out    0x60,eax
  41b0c6:	xchg   ecx,eax
  41b0c7:	pop    esi
  41b0c8:	push   edi
  41b0c9:	jo     0x41b11d
  41b0cb:	pop    ss
  41b0cc:	add    eax,0xe7698f60
  41b0d1:	inc    eax
  41b0d2:	jno    0x41b132
  41b0d4:	aaa    
  41b0d5:	jo     0x41b067
  41b0d7:	imul   esi,DWORD PTR [edi],0x72
  41b0da:	jbe    0x41b12d
  41b0dc:	add    BYTE PTR [edx+eax*2+0x51],cl
  41b0e0:	inc    esp
  41b0e1:	dec    eax
  41b0e2:	push   ebx
  41b0e3:	cmp    al,0x0
  41b0e5:	jmp    0xcf41b64a
  41b0ea:	and    eax,0x13e9635d
  41b0ef:	push   0x66
  41b0f1:	adc    eax,0xc723c46
  41b0f6:	sbb    esi,DWORD PTR [edx]
  41b0f8:	movups XMMWORD PTR [si],xmm3
  41b0fc:	push   edx
  41b0fd:	jmp    0xffa50639
  41b102:	pusha  
  41b103:	fdiv   st(5),st
  41b105:	jmp    0xc4aa07ea
  41b10a:	sub    al,0x69
  41b10c:	xor    DWORD PTR [ebx],ebx
  41b10e:	push   ebp
  41b10f:	popa   
  41b110:	ins    BYTE PTR es:[edi],dx
  41b111:	mov    ebp,0xae483660
	...
  41b146:	add    BYTE PTR [eax],al
  41b148:	or     eax,0xcce4651
  41b14d:	popa   
  41b14e:	arpl   WORD PTR [ebx-0x3e8bc350],di
  41b154:	mov    eax,ds:0x60e90005
  41b159:	add    eax,0x1c685500
  41b15e:	add    BYTE PTR [eax],ah
  41b160:	pop    eax
  41b161:	sbb    al,0x0
  41b163:	xor    BYTE PTR [eax+0x1c],bl
  41b166:	add    BYTE PTR [esi],dl
  41b168:	dec    eax
  41b169:	sbb    al,0x0
  41b16b:	cld    
  41b16c:	dec    ecx
  41b16d:	sbb    al,0x0
  41b16f:	in     al,0x7a
  41b171:	sbb    al,0x0
  41b173:	int3   
  41b174:	jp     0x41b192
  41b176:	add    BYTE PTR [ebx],bl
  41b178:	imul   ebx,DWORD PTR [eax+eax*1],0x1c6930
  41b17f:	xor    al,0x59
  41b181:	sbb    al,0x0
  41b183:	push   edi
  41b184:	pop    ecx
  41b185:	sbb    al,0x0
  41b187:	add    BYTE PTR [eax+0x6d003cfe],al
  41b18d:	(bad)  
  41b18e:	cmp    al,0x0
  41b190:	retf   0x7
  41b193:	add    bl,cl
  41b195:	pop    es
  41b196:	add    BYTE PTR [eax+0x7bf],al
  41b19c:	ja     0x41b20e
  41b19e:	and    BYTE PTR [ebp+eiz*2+0x66],al
  41b1a2:	jno    0x41b211
  41b1a4:	pop    edi
  41b1a5:	xor    esi,DWORD PTR [ebx+esi*2-0x46]
  41b1a9:	push   es
	...
  41b1de:	cmp    cl,BYTE PTR [esi]
  41b1e0:	add    BYTE PTR [eax],al
  41b1e2:	mov    al,BYTE PTR [esi+0x70]
  41b1e5:	jo     0x41b225
  41b1e7:	push   0x67a6174
  41b1ec:	add    BYTE PTR [eax],al
  41b1ee:	cli    
  41b1ef:	add    eax,DWORD PTR [eax]
  41b1f1:	add    BYTE PTR [edx-0x549c94ed],cl
  41b1f7:	xor    esp,DWORD PTR [eax]
  41b1f9:	inc    ecx
  41b1fa:	stos   BYTE PTR es:[edi],al
  41b1fb:	push   edi
  41b1fc:	inc    esp
  41b1fd:	popa   
  41b1fe:	scas   al,BYTE PTR es:[edi]
  41b1ff:	data16 add BYTE PTR [ecx],al
  41b202:	dec    edx
  41b203:	pop    es
  41b204:	and    BYTE PTR [eax],0x4a
  41b207:	pop    es
  41b208:	add    BYTE PTR [ebx-0x25],al
  41b20b:	gs push 0x83a65
  41b211:	add    dl,cl
  41b213:	daa    
  41b214:	add    BYTE PTR [eax],al
  41b216:	dec    edx
  41b217:	inc    esi
  41b218:	imul   ebp,DWORD PTR [edi-0x2f],0x3f
  41b21c:	popa   
  41b21d:	jae    0x41b259
  41b21f:	or     BYTE PTR [eax],al
  41b221:	add    BYTE PTR [edx+0xa000024],cl
  41b227:	pop    ds
  41b228:	gs jae 0x41b1d9
  41b22b:	push   esi
  41b22c:	jb     0x41b2a7
  41b22e:	cli    
  41b22f:	add    BYTE PTR [eax],al
  41b231:	add    BYTE PTR [ebx+0x6c],ah
  41b234:	pop    es
  41b235:	add    BYTE PTR [ebx-0x14],ah
  41b238:	push   eax
  41b239:	ja     0x41b27e
  41b23b:	sub    BYTE PTR [ecx+0x61],dh
  41b23e:	outs   dx,BYTE PTR ds:[esi]
  41b23f:	dec    ecx
  41b240:	outs   dx,BYTE PTR ds:[si]
	...
  41b272:	add    BYTE PTR [eax],al
  41b274:	push   edi
  41b275:	pop    ds
  41b276:	add    al,0x2
  41b278:	arpl   sp,bp
  41b27a:	and    DWORD PTR [ecx],0x4101ec63
  41b280:	xor    al,0x9
  41b282:	outs   dx,DWORD PTR ds:[esi]
  41b283:	ins    DWORD PTR es:[edi],dx
  41b284:	dec    ebp
  41b285:	int3   
  41b286:	inc    esp
  41b287:	jo     0x41b2bc
  41b289:	and    BYTE PTR [ebx+0x74],ah
  41b28c:	inc    edx
  41b28d:	in     al,dx
  41b28e:	add    al,0x0
  41b290:	arpl   WORD PTR [ecx+ebp*1+0x0],bp
  41b294:	arpl   sp,bp
  41b296:	push   eax
  41b297:	ja     0x41b2dc
  41b299:	cld    
  41b29a:	push   0x61
  41b29c:	pop    ss
  41b29d:	mov    ecx,0xec106353
  41b2a2:	add    eax,DWORD PTR [eax]
  41b2a4:	arpl   WORD PTR [edx+esi*1+0x0],bp
  41b2a8:	arpl   sp,bp
  41b2aa:	inc    esi
  41b2ab:	ins    DWORD PTR es:[edi],dx
  41b2ac:	(bad)  
  41b2ad:	mov    al,0x72
  41b2af:	outs   dx,BYTE PTR ds:[esi]
  41b2b0:	inc    ebx
  41b2b1:	mov    al,ds:0xc1d66172
  41b2b6:	push   0x19fcf6e
  41b2bb:	add    ah,BYTE PTR [ebx-0x14]
  41b2be:	sub    DWORD PTR ds:0x4101ec63,0x6d7081cc
  41b2c8:	(bad)
  41b2cb:	fs mov esi,0xb0676f75
  41b2d1:	push   eax
  41b2d2:	push   ebx
  41b2d3:	pop    edi
  41b2d4:	xchg   edi,eax
  41b2d5:	test   DWORD PTR [edi+0x63],edx
	...
  41b308:	add    BYTE PTR [eax],al
  41b30a:	inc    ebx
  41b30b:	jo     0x41b37f
  41b30d:	ins    DWORD PTR es:[edi],dx
  41b30e:	jg     0x41b315
  41b310:	pop    edx
  41b311:	add    al,0x4
  41b313:	(bad)  
  41b315:	xor    DWORD PTR [ebx],0x5
  41b318:	out    0x3,eax
  41b31a:	xor    al,0x61
  41b31c:	cmp    al,0x6d
  41b31e:	jge    0x41b38c
  41b320:	cmp    bl,BYTE PTR [eax+0x71]
  41b323:	xor    ebp,DWORD PTR fs:[ebp+0x55]
  41b327:	pusha  
  41b328:	pop    es
  41b329:	cmp    BYTE PTR [esi+0x6a],al
  41b32c:	cmp    edx,DWORD PTR [edi+0x63]
  41b32f:	add    al,0xe7
  41b331:	add    esp,ebx
  41b333:	jmp    esi
  41b335:	add    esp,DWORD PTR [ebx+0x35]
  41b338:	or     al,0x56
  41b33a:	xor    ch,BYTE PTR [edx-0x3]
  41b33d:	fs aas 
  41b33f:	add    eax,0x513d731a
  41b344:	mul    BYTE PTR [ecx+edx*1+0x60]
  41b348:	adc    edx,DWORD PTR [ecx-0x4]
  41b34b:	gs stc 
  41b34d:	jb     0x41b361
  41b34f:	push   0xffffffcd
  41b351:	push   edi
  41b352:	daa    
  41b353:	xor    dl,al
  41b355:	jno    0x41b35e
  41b357:	push   0xffffffde
  41b359:	push   esi
  41b35a:	pop    ss
  41b35b:	inc    esi
  41b35c:	aam    0x55
  41b35e:	icebp  
  41b35f:	pop    edi
  41b360:	aad    0x57
  41b362:	or     eax,0xc456b960
  41b367:	push   0x5da03fc5
  41b36c:	mov    bh,0x6f
	...
  41b39e:	add    BYTE PTR [eax],al
  41b3a0:	mov    esi,0xa7558c53
  41b3a5:	xor    al,0x8f
  41b3a7:	push   0x49c769cf
  41b3ac:	(bad)  
  41b3ad:	imul   eax,DWORD PTR [ebx-0x18ab4e98],0x93349633
  41b3b7:	and    eax,DWORD PTR [eax+0x54]
  41b3ba:	add    cl,cl
  41b3bc:	test   al,0x31
  41b3be:	push   esp
  41b3bf:	cdq    
  41b3c0:	push   ecx
  41b3c1:	sub    BYTE PTR [esi],ch
  41b3c3:	sbb    DWORD PTR [ebx+ecx*1+0x48],edx
  41b3c7:	dec    esi
  41b3c8:	xchg   esi,eax
  41b3c9:	push   ecx
  41b3ca:	cmp    cl,BYTE PTR [ecx]
  41b3cc:	cmp    al,0x56
  41b3ce:	or     esp,ebx
  41b3d0:	mov    eax,ds:0x8f4c6166
  41b3d5:	push   ecx
  41b3d6:	cmp    cl,BYTE PTR [ecx]
  41b3d8:	lea    ebp,[edx]
  41b3da:	sub    ah,ah
  41b3dc:	data16 sbb BYTE PTR [ecx+0x4a],ah
  41b3e0:	inc    esp
  41b3e1:	push   ebp
  41b3e2:	je     0x41b3b8
  41b3e4:	sbb    eax,0x4b0e6167
  41b3e9:	pusha  
  41b3ea:	outs   dx,BYTE PTR ds:[esi]
  41b3eb:	push   cs
  41b3ec:	push   ebp
  41b3ed:	and    eax,0x67440567
  41b3f2:	je     0x41b404
  41b3f4:	or     edx,DWORD PTR [eax+0x2c]
  41b3f7:	leave  
  41b3f8:	dec    esi
  41b3f9:	push   ds
  41b3fa:	outs   dx,DWORD PTR ds:[esi]
  41b3fb:	mov    ah,0x70
  41b3fd:	or     al,0xa
  41b3ff:	sub    dl,BYTE PTR [edx]
  41b401:	addr16 je 0x41b3d0
	...
  41b434:	add    BYTE PTR [eax],al
  41b436:	adc    dl,BYTE PTR [ecx+0x2b]
  41b439:	lods   eax,DWORD PTR ds:[esi]
  41b43a:	add    eax,0x8dd6567
  41b43f:	sbb    esp,DWORD PTR [eax]
  41b441:	add    al,0xf3
  41b443:	push   ebx
  41b444:	or     esi,ebx
  41b446:	pop    ds
  41b447:	push   0x6e
  41b449:	iret   
  41b44a:	lds    esp,FWORD PTR [esi+0x74]
  41b44d:	rcl    bl,0x67
  41b450:	cmp    cl,BYTE PTR [ecx]
  41b452:	(bad)  
  41b453:	imul   ebp,DWORD PTR [ebp-0x66],0xaa0a0cbd
  41b45a:	mov    bl,0x67
  41b45c:	je     0x41b3ea
  41b45e:	mov    dl,0x51
  41b460:	sub    esi,DWORD PTR [ebp+0x635589]
  41b466:	and    BYTE PTR [ebx*2+0x65689a70],ah
  41b46d:	arpl   bx,bp
  41b46f:	das    
  41b470:	outs   dx,DWORD PTR gs:[esi]
  41b472:	mov    WORD PTR ds:0x60a6636b,ss
  41b478:	je     0x41b4a7
  41b47a:	cdq    
  41b47b:	cmp    eax,0x68ab6572
  41b480:	or     DWORD PTR [edx],ecx
  41b482:	cmp    DWORD PTR [esi+0x6e],edx
  41b485:	je     0x41b41e
  41b487:	push   ebx
  41b488:	je     0x41b4b7
  41b48a:	xchg   DWORD PTR [ebx+0x5f],edx
  41b48d:	outs   dx,DWORD PTR ds:[esi]
  41b48e:	es ins BYTE PTR es:[edi],dx
  41b490:	outs   dx,BYTE PTR ds:[esi]
  41b491:	shl    BYTE PTR [bp+di],1
  41b494:	bound  ebp,QWORD PTR [ecx+0x6c]
  41b497:	fs jb  0x41b513
	...
  41b4ca:	add    BYTE PTR [eax],al
  41b4cc:	iret   
  41b4cd:	or     DWORD PTR [ecx+0x73],edx
  41b4d0:	addr16 das 
  41b4d2:	sub    DWORD PTR [ecx+0x65],eax
  41b4d5:	pusha  
  41b4d6:	outs   dx,BYTE PTR ds:[esi]
  41b4d7:	je     0x41b479
  41b4d9:	and    ecx,DWORD PTR [ecx+0x6f]
  41b4dc:	pusha  
  41b4dd:	ins    BYTE PTR es:[edi],dx
  41b4de:	ins    BYTE PTR es:[edi],dx
  41b4df:	ins    BYTE PTR es:[edi],dx
  41b4e0:	imul   edx,DWORD PTR [esi],0x34
  41b4e3:	cs retf 0x2823
  41b4e7:	arpl   WORD PTR [ebp-0x699e8f9a],bp
  41b4ed:	push   0x62
  41b4ef:	ins    BYTE PTR es:[edi],dx
  41b4f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4f1:	clc    
  41b4f2:	pop    ds
  41b4f3:	dec    ebp
  41b4f4:	test   eax,0x6720414a
  41b4f9:	adc    eax,0x1c6a3b30
  41b4fe:	outs   dx,BYTE PTR gs:[esi]
  41b500:	es push esi
  41b502:	jae    0x41b577
  41b504:	pop    edx
  41b505:	cli    
  41b506:	aaa    
  41b507:	sub    DWORD PTR [edi+0x9],ecx
  41b50a:	or     DWORD PTR [edx],ecx
  41b50c:	dec    edx
  41b50d:	inc    edx
  41b50e:	imul   ebp,DWORD PTR [esi+0x63],0x78
  41b512:	data16 outs dx,BYTE PTR ds:[esi]
  41b514:	mov    bh,0x99
  41b516:	dec    ebp
  41b517:	arpl   WORD PTR [ebp+0x59685587],si
  41b51d:	in     al,dx
  41b51e:	dec    ebp
  41b51f:	ins    DWORD PTR es:[edi],dx
  41b520:	or     BYTE PTR [ebp+0x567c6755],0x1b
  41b527:	add    BYTE PTR [ecx+ebp*1+0x3b462038],bl
  41b52e:	and    al,0x48
	...
  41b560:	add    BYTE PTR [eax],al
  41b562:	(bad)  
  41b563:	sbb    BYTE PTR [ebp*1+0xb11d632],dh
  41b56a:	pop    ecx
  41b56b:	adc    al,0x6d
  41b56d:	jno    0x41b5c6
  41b56f:	add    ah,BYTE PTR [ebx+eiz*1]
  41b572:	push   eax
  41b573:	loope  0x41b57c
  41b575:	aas    
  41b576:	inc    eax
  41b577:	dec    ebx
  41b578:	addr16 jo 0x41b5ca
  41b57b:	loop   0x41b59e
  41b57d:	sub    cl,BYTE PTR [edx+esi*4+0xb220a10]
  41b584:	popa   
  41b585:	arpl   WORD PTR [ebx],si
  41b587:	lock cs inc ebx
  41b58a:	xor    eax,0xa646d0b
  41b58f:	push   es
  41b590:	cmp    al,BYTE PTR gs:[ebx+0x5]
  41b594:	push   0x6ccffd63
  41b599:	je     0x41b5a5
  41b59b:	lock and ebp,DWORD PTR [edx]
  41b59e:	cmp    BYTE PTR [ebp-0x1d99cfe0],bh
  41b5a4:	inc    edx
  41b5a5:	ins    DWORD PTR es:[edi],dx
  41b5a6:	std    
  41b5a7:	xchg   ebp,eax
  41b5a8:	push   0x6eb4ef61
  41b5ad:	outs   dx,BYTE PTR ds:[esi]
  41b5ae:	cdq    
  41b5af:	or     al,0x61
  41b5b1:	ins    BYTE PTR es:[edi],dx
  41b5b2:	les    ebx,FWORD PTR [ebx+0x71590b68]
  41b5b8:	push   edx
  41b5b9:	arpl   cx,dx
  41b5bb:	add    eax,0x60c644d4
  41b5c0:	lea    edx,[edi+0x79]
  41b5c3:	and    eax,0x6ea4
	...
  41b5f8:	test   eax,0x846f7b6c
  41b5fd:	es mov ebx,0xcf25532d
  41b603:	bound  eax,QWORD PTR [esi-0x689b8898]
  41b609:	ins    BYTE PTR es:[edi],dx
  41b60a:	mov    DWORD PTR [edi-0x80],ebp
  41b60d:	sbb    al,BYTE PTR [edi]
  41b60f:	push   ecx
  41b610:	xchg   edx,eax
  41b611:	dec    esp
  41b612:	and    al,0x24
  41b614:	xor    BYTE PTR [edi],ah
  41b616:	pop    ss
  41b617:	sbb    eax,DWORD PTR [ebx+0x2e]
  41b61a:	inc    eax
  41b61b:	outs   dx,BYTE PTR ds:[esi]
  41b61c:	jg     0x41b684
  41b61e:	ds push ebx
  41b620:	sbb    DWORD PTR [edi+edi*8],0x2c
  41b624:	push   0x6309e40b
  41b629:	daa    
  41b62a:	out    0x2d,eax
  41b62c:	jne    0x41b633
  41b62e:	inc    ebx
  41b62f:	sub    cl,BYTE PTR [ebp-0x7ad618d5]
  41b635:	sub    esp,edi
  41b637:	ins    DWORD PTR es:[edi],dx
  41b638:	inc    eax
  41b639:	push   ecx
  41b63a:	or     BYTE PTR [esp+edi*1+0x12],dl
  41b63e:	mov    ecx,0xb69072d
  41b643:	add    al,0x25
  41b645:	pusha  
  41b646:	sti    
  41b647:	inc    esp
  41b648:	adc    ebp,DWORD PTR [ecx+ebp*1+0x59]
  41b64c:	std    
  41b64d:	pop    esi
  41b64e:	int3   
  41b64f:	push   ecx
  41b650:	and    eax,0x6368c453
  41b655:	inc    edi
  41b656:	int3   
  41b657:	push   edi
  41b658:	adc    BYTE PTR [edx-0x3c],dl
  41b65b:	push   ecx
	...
  41b68c:	add    BYTE PTR [eax],al
  41b68e:	and    BYTE PTR [edi-0x44],ah
  41b691:	jo     0x41b6f6
  41b693:	add    eax,0x18c06fce
  41b698:	add    bl,bh
  41b69a:	jle    0x41b705
  41b69c:	ins    BYTE PTR es:[edi],dx
  41b69d:	mov    ebp,0x8e743660
  41b6a2:	lods   eax,DWORD PTR ds:[esi]
  41b6a3:	push   ebp
  41b6a4:	arpl   WORD PTR [edi-0x6492a68f],cx
  41b6aa:	(bad)  
  41b6ab:	push   0x63
  41b6ad:	jmp    0x7fa5eb12
  41b6b2:	xchg   DWORD PTR [ebp+0x67],edx
  41b6b5:	mov    edx,0x85642372
  41b6ba:	jl     0x41b6c1
  41b6bc:	aas    
  41b6bd:	jge    0x41b733
  41b6bf:	bound  esp,QWORD PTR [ecx+0x48]
  41b6c2:	fwait
  41b6c3:	push   0x4c8b4f3f
  41b6c8:	outs   dx,BYTE PTR ds:[esi]
  41b6c9:	inc    eax
  41b6ca:	mov    ebp,DWORD PTR [edi+ebx*2+0x3d]
  41b6ce:	js     0x41b71f
  41b6d0:	arpl   WORD PTR [edx],bx
  41b6d2:	dec    eax
  41b6d3:	imul   eax,DWORD PTR [eax],0x6168472a
  41b6d9:	inc    edx
  41b6da:	mov    esp,DWORD PTR [edx+0x69]
  41b6dd:	inc    esp
  41b6de:	xor    eax,0x41146340
  41b6e3:	push   0x6c471a72
  41b6e8:	jo     0x41b6d3
  41b6ea:	es push edi
  41b6ec:	arpl   WORD PTR [edx+esi*2],ax
  41b6ef:	ins    BYTE PTR es:[edi],dx
  41b6f0:	fs jmp 0x41b6f6
	...
  41b722:	add    BYTE PTR [eax],al
  41b724:	and    edx,DWORD PTR [edi+0x63]
  41b727:	add    eax,0x473631c
  41b72c:	add    al,0x57
  41b72e:	pop    edi
  41b72f:	cmc    
  41b730:	std    
  41b731:	adc    eax,DWORD PTR [eax]
  41b733:	stos   BYTE PTR es:[edi],al
  41b734:	adc    ch,BYTE PTR [eax+0x64]
  41b737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b738:	adc    ch,BYTE PTR [eax+0x63]
  41b73b:	jmp    0xd9b90e63
  41b740:	or     al,0x4a
  41b742:	arpl   WORD PTR [eax],ax
  41b744:	push   ds
  41b745:	sbb    ebp,DWORD PTR [edi+0x65]
  41b748:	sbb    BYTE PTR ds:0x453a7961,bh
  41b74e:	jb     0x41b7c9
  41b750:	or     bh,BYTE PTR [ecx+eax*2]
  41b753:	js     0x41b72f
  41b755:	pusha  
  41b756:	jb     0x41b7cc
  41b758:	icebp  
  41b759:	push   0x75
  41b75b:	add    cl,bh
  41b75d:	xor    eax,0x4bce7075
  41b762:	popa   
  41b763:	jae    0x41b703
  41b765:	imul   edi,DWORD PTR ss:[ecx-0x2f],0x6a
  41b76a:	jne    0x41b76c
  41b76c:	mov    ecx,0x8e707535
  41b771:	push   ss
  41b772:	popa   
  41b773:	ins    BYTE PTR es:[edi],dx
  41b774:	scas   eax,DWORD PTR es:[edi]
  41b775:	push   0x6249656f
  41b77a:	outs   dx,BYTE PTR ds:[esi]
  41b77b:	je     0x41b71c
  41b77d:	xor    DWORD PTR [eax+eax*1+0x28],esi
  41b781:	ins    BYTE PTR es:[edi],dx
  41b782:	jbe    0x41b7e9
  41b784:	cwde   
  41b785:	sub    eax,0x6f54
	...
  41b7ba:	jns    0x41b828
  41b7bc:	ins    BYTE PTR es:[edi],dx
  41b7bd:	mov    dx,0x7040
  41b7c1:	test   BYTE PTR gs:[ecx],bl
  41b7c4:	jb     0x41b835
  41b7c6:	imul   ebp,DWORD PTR [edi+ebp*2+0x73],0x6567626e
  41b7ce:	or     DWORD PTR fs:[ebp+0x6d],eax
  41b7d2:	dec    edx
  41b7d3:	ins    BYTE PTR es:[edi],dx
  41b7d4:	jb     0x41b849
  41b7d6:	jne    0x41b83b
  41b7d8:	pop    ebp
  41b7d9:	je     0x41b83a
  41b7db:	xor    eax,0x6c5d676b
  41b7e0:	fs dec edi
  41b7e2:	test   BYTE PTR [edx],bl
  41b7e4:	outs   dx,DWORD PTR ds:[esi]
  41b7e5:	gs cwde 
  41b7e7:	pop    es
  41b7e8:	inc    ebx
  41b7e9:	mov    ds,WORD PTR gs:[ebx]
  41b7ec:	imul   ebp,DWORD PTR [ebx+0x63],0xffffffc1
  41b7f0:	imul   eax,DWORD PTR [edi-0xb],0xffffffcb
  41b7f4:	ins    BYTE PTR es:[edi],dx
  41b7f5:	jb     0x41b7c5
  41b7f7:	mov    ebp,0xc2c46755
  41b7fc:	add    DWORD PTR [ecx-0x44],eax
  41b7ff:	retf   0x6353
  41b802:	rcr    DWORD PTR [eax-0x6f3898d0],1
  41b808:	ins    BYTE PTR es:[edi],dx
  41b809:	push   ecx
  41b80a:	scas   eax,DWORD PTR es:[edi]
  41b80b:	outs   dx,BYTE PTR ds:[esi]
  41b80c:	push   0x6e
  41b80e:	les    ecx,FWORD PTR [edi-0x235d9b96]
  41b814:	dec    ebp
  41b815:	ins    DWORD PTR es:[edi],dx
  41b816:	test   BYTE PTR [ebx+0x6b],bh
  41b819:	push   ebx
  41b81a:	nop
  41b81b:	mov    DWORD PTR [edi+0x3f],ecx
	...
  41b84e:	add    BYTE PTR [eax],al
  41b850:	arpl   WORD PTR [eax+0x59786d6c],bp
  41b856:	push   ecx
  41b857:	push   eax
  41b858:	jno    0x41b88f
  41b85a:	push   edx
  41b85b:	xchg   DWORD PTR [bx+di+0x61],ecx
  41b85f:	arpl   WORD PTR [ebp+0x7e73683d],dx
  41b865:	sbb    eax,0x36473f04
  41b86a:	dec    edi
  41b86b:	jno    0x41b8bc
  41b86d:	clc    
  41b86e:	push   0x344a4669
  41b873:	jb     0x41b8af
  41b875:	sbb    ch,BYTE PTR [ebx+0x6c]
  41b878:	inc    esi
  41b879:	add    ebx,DWORD PTR [edi+0x71]
  41b87c:	arpl   sp,bx
  41b87e:	data16 jb 0x41b8ab
  41b881:	in     al,dx
  41b882:	dec    edi
  41b883:	xor    DWORD PTR [ecx-0x6e],esi
  41b886:	pop    ebp
  41b887:	ins    BYTE PTR es:[edi],dx
  41b888:	paddusb mm0,QWORD PTR [esi+0x63]
  41b88c:	adc    eax,ebx
  41b88e:	dec    edx
  41b88f:	jo     0x41b897
  41b891:	or     dh,BYTE PTR ds:0x60d81077
  41b897:	imul   edx,DWORD PTR [eax],0x5
  41b89a:	fld    TBYTE PTR [edx-0xf]
  41b89d:	addr16 test al,0x3
  41b8a0:	and    ch,BYTE PTR [eax-0x27]
  41b8a3:	dec    edi
  41b8a4:	and    BYTE PTR [ebx-0x2c],ah
  41b8a7:	push   0x4fb968a2
  41b8ac:	mov    esp,0xac66d06b
  41b8b1:	pop    ecx
  41b8b2:	int3   
  41b8b3:	push   esi
	...
  41b8e4:	add    BYTE PTR [eax],al
  41b8e6:	pushf  
  41b8e7:	arpl   WORD PTR [edx-0x73a831b1],bx
  41b8ed:	add    esp,DWORD PTR [edx-0x5db06698]
  41b8f3:	popa   
  41b8f4:	xchg   BYTE PTR [esi-0x40],dl
  41b8f7:	ss xchg ebx,eax
  41b8f9:	push   0xffffff91
  41b8fb:	push   0x4c9146e7
  41b900:	ja     0x41b951
  41b902:	dec    esp
  41b903:	data16 js 0x41b956
  41b906:	jl     0x41b95f
  41b908:	test   BYTE PTR [esi-0x80],al
  41b90b:	push   edi
  41b90c:	pop    ebx
  41b90d:	ins    DWORD PTR es:[edi],dx
  41b90e:	jge    0x41b96c
  41b910:	dec    edx
  41b911:	gs ja  0x41b97c
  41b914:	aaa    
  41b915:	push   esi
  41b916:	jl     0x41b973
  41b918:	dec    eax
  41b919:	push   eax
  41b91a:	inc    eax
  41b91b:	ds dec esp
  41b91d:	pop    ebp
  41b91e:	arpl   WORD PTR ds:0x56303e7,ax
  41b924:	out    0x3,eax
  41b926:	arpl   WORD PTR ds:0x56303e7,ax
  41b92c:	out    0x3,eax
  41b92e:	arpl   WORD PTR ds:0x56303e7,ax
  41b934:	out    0x3,eax
  41b936:	arpl   WORD PTR ds:0x56303e7,ax
  41b93c:	out    0x3,eax
  41b93e:	arpl   WORD PTR ds:0x56303e7,ax
  41b944:	add    cl,ch
  41b946:	pusha  
  41b947:	add    eax,0xe900
	...
  41b97c:	pusha  
  41b97d:	add    eax,0x560e900
  41b982:	add    cl,ch
  41b984:	pusha  
  41b985:	add    eax,0x560e900
  41b98a:	add    cl,ch
  41b98c:	pusha  
  41b98d:	add    eax,0x560e900
  41b992:	add    cl,ch
  41b994:	pusha  
  41b995:	add    eax,0x560e900
  41b99a:	add    cl,ch
  41b99c:	pusha  
  41b99d:	add    eax,0x560e900
  41b9a2:	add    cl,ch
  41b9a4:	pusha  
  41b9a5:	add    eax,0x560e900
  41b9aa:	add    cl,ch
  41b9ac:	pusha  
  41b9ad:	add    eax,0x560e900
  41b9b2:	add    BYTE PTR [ecx-0x16bbb7af],dh
  41b9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9b9:	and    al,0x30
  41b9bb:	mov    cl,0x38
  41b9bd:	sbb    al,0x23
  41b9bf:	sbb    DWORD PTR [ebx+0x2d],edx
  41b9c2:	sub    eax,DWORD PTR [edi+edx*2]
  41b9c5:	sbb    DWORD PTR [eax+0x4],ebx
  41b9c8:	inc    esp
  41b9c9:	adc    eax,0x157c3132
  41b9ce:	xor    ah,BYTE PTR [ecx]
  41b9d0:	jl     0x41b9f6
  41b9d2:	xor    bl,bh
  41b9d4:	mov    BYTE PTR [eax+esi*1],ah
  41b9d7:	sti    
  41b9d8:	mov    BYTE PTR [eax+esi*1],ah
  41b9db:	sti    
  41b9dc:	js     0x41ba02
  41b9de:	xor    bl,bl
	...
  41ba10:	add    BYTE PTR [eax],al
  41ba12:	js     0x41ba38
  41ba14:	xor    bl,bl
  41ba16:	push   0x68db3024
  41ba1b:	dec    esp
  41ba1c:	add    BYTE PTR [esi],ah
  41ba1e:	cmp    al,0x59
  41ba20:	dec    esi
  41ba21:	add    BYTE PTR [ebx+0x35],ch
  41ba24:	gs jbe 0x41ba8e
  41ba27:	sbb    dh,BYTE PTR [ebp+0x73]
  41ba2a:	xchg   BYTE PTR [edi],ch
  41ba2c:	imul   ecx,DWORD PTR [ecx+0x7c],0x91006b66
  41ba33:	das    
  41ba34:	jb     0x41baa4
  41ba36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba37:	push   0x655c322f
  41ba3c:	ins    BYTE PTR es:[edi],dx
  41ba3d:	ins    BYTE PTR es:[edi],dx
  41ba3e:	dec    edx
  41ba3f:	cmp    ebp,DWORD PTR [edi+0x57]
  41ba42:	sub    eax,0xea343635
  41ba47:	cmp    DWORD PTR [ebx+0x63],ebp
  41ba4a:	pop    ss
  41ba4b:	cmp    DWORD PTR [edi+0x0],ebp
  41ba4e:	fstp   DWORD PTR [esi+eiz*2+0x74]
  41ba52:	aad    0x62
  41ba54:	jb     0x41babb
  41ba56:	out    dx,al
  41ba57:	inc    ebp
  41ba58:	pop    ebp
  41ba59:	jb     0x41ba49
  41ba5b:	adc    ebp,DWORD PTR [ebp+esi*2-0x1b]
  41ba5f:	pop    edx
  41ba60:	outs   dx,BYTE PTR ds:[esi]
  41ba61:	jae    0x41ba21
  41ba63:	inc    ebp
  41ba64:	push   esp
  41ba65:	push   eax
  41ba66:	out    dx,al
  41ba67:	cmp    ebp,DWORD PTR [ebx+0x73]
  41ba6a:	xchg   BYTE PTR [ecx],bh
  41ba6c:	add    BYTE PTR [ebx+0x7d],dl
  41ba6f:	data16 je 0x41bae9
  41ba72:	stos   DWORD PTR es:[edi],eax
  41ba73:	aaa    
  41ba74:	popa   
  41ba75:	pop    esp
	...
  41baa6:	add    BYTE PTR [eax],al
  41baa8:	inc    esp
  41baa9:	fs jb  0x41bade
  41baac:	sbb    DWORD PTR cs:[ebp+esi*2+0x25],ebp
  41bab1:	pop    esp
  41bab2:	outs   dx,BYTE PTR ds:[esi]
  41bab3:	jae    0x41bb33
  41bab5:	inc    ebx
  41bab6:	push   esp
  41bab7:	push   eax
  41bab8:	outs   dx,BYTE PTR ds:[esi]
  41bab9:	inc    ecx
  41baba:	imul   esi,DWORD PTR [ebx-0x7a],0x3a
  41babe:	add    BYTE PTR [ebx+0x7d],dl
  41bac1:	arpl   WORD PTR [edi+esi*2+0x6b],si
  41bac5:	aaa    
  41bac6:	popa   
  41bac7:	pop    esp
  41bac8:	test   BYTE PTR [edx+esi*2+0x5c],ah
  41bacc:	arpl   WORD PTR [ebx],cx
  41bace:	popa   
  41bacf:	jbe    0x41bad7
  41bad1:	or     al,BYTE PTR [eax+0x67]
  41bad4:	add    bh,dl
  41bad6:	gs sbb si,bp
  41bada:	push   edx
  41badb:	je     0x41bad1
  41badd:	retf   
  41bade:	pop    edx
  41badf:	pop    esp
  41bae0:	and    eax,0x44833fa
  41bae5:	stos   DWORD PTR es:[edi],eax
  41bae6:	dec    ebp
  41bae7:	add    BYTE PTR [eax],dl
  41bae9:	mov    edi,0xbcec745f
  41baee:	push   ebx
  41baef:	arpl   WORD PTR [edi-0x6e8d9d5a],di
  41baf5:	test   al,0x34
  41baf7:	pop    edi
  41baf8:	aad    0xc9
  41bafa:	pop    ebp
  41bafb:	inc    esp
  41bafc:	mov    edx,0xc46d65bd
  41bb01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb02:	push   0x71
  41bb04:	scas   eax,DWORD PTR es:[edi]
  41bb05:	ja     0x41bb5a
  41bb07:	ja     0x41ba98
  41bb09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb0a:	sub    eax,0x50
	...
  41bb3b:	add    BYTE PTR [eax],al
  41bb3d:	add    BYTE PTR [ebx+0x63745487],bl
  41bb43:	mov    WORD PTR [edx+0x71],fs
  41bb46:	nop
  41bb47:	dec    edi
  41bb48:	push   0x49dc8772
  41bb4d:	ins    DWORD PTR es:[edi],dx
  41bb4e:	nop
  41bb4f:	push   eax
  41bb50:	inc    edi
  41bb51:	pop    edi
  41bb52:	mov    cs,WORD PTR [ecx+0x41705301]
  41bb58:	push   edx
  41bb59:	add    BYTE PTR [edi+0x63636635],bl
  41bb5f:	das    
  41bb60:	popa   
  41bb61:	js     0x41bb9f
  41bb63:	inc    esi
  41bb64:	push   eax
  41bb65:	jo     0x41baec
  41bb67:	xor    eax,0xf0636766
  41bb6c:	cmp    al,0x48
  41bb6e:	sbb    ch,bl
  41bb70:	inc    edi
  41bb71:	inc    ebx
  41bb72:	adc    esp,ebx
  41bb74:	dec    esp
  41bb75:	outs   dx,BYTE PTR ds:[esi]
  41bb76:	xor    BYTE PTR ds:0x613f651b,al
  41bb7c:	and    ebp,DWORD PTR [ebp+0x31]
  41bb7f:	add    eax,0x3c13502d
  41bb84:	std    
  41bb85:	ins    BYTE PTR es:[edi],dx
  41bb86:	and    eax,0x63611464
  41bb8b:	xor    cl,BYTE PTR [esi]
  41bb8d:	pop    esi
  41bb8e:	orps   xmm1,XMMWORD PTR [eax]
  41bb91:	push   edx
  41bb92:	add    BYTE PTR [ecx],dh
  41bb94:	es ins BYTE PTR es:[edi],dx
  41bb96:	cld    
  41bb97:	push   ecx
  41bb98:	shl    DWORD PTR [eax-0xf],cl
  41bb9b:	xor    BYTE PTR [esi-0x39970a94],dh
  41bba1:	dec    esi
	...
  41bbd2:	add    BYTE PTR [eax],al
  41bbd4:	shl    BYTE PTR ds:0x60c866aa,cl
  41bbda:	enter  0xc765,0x68
  41bbde:	mov    ecx,0xcd5eb203
  41bbe3:	dec    edi
  41bbe4:	mov    dh,0x64
  41bbe6:	mov    ecx,0x8f469760
  41bbeb:	ins    BYTE PTR es:[edi],dx
  41bbec:	mov    dl,0x61
  41bbee:	test   BYTE PTR [ecx-0x79],dl
  41bbf1:	cmp    DWORD PTR [esi-0x389e43b1],eax
  41bbf7:	inc    edx
  41bbf8:	xchg   BYTE PTR [eax-0x6c],ah
  41bbfb:	fs jge 0x41bc67
  41bbfe:	test   BYTE PTR [ecx+0x63],dl
  41bc01:	xor    DWORD PTR [eax-0x7fa98dad],esp
  41bc07:	dec    edi
  41bc08:	sbb    BYTE PTR [ebp-0x19],0x32
  41bc0c:	test   BYTE PTR [ecx+0x44],bl
  41bc0f:	push   ebx
  41bc10:	xchg   DWORD PTR ds:0x52534d33,eax
  41bc16:	push   esi
  41bc17:	ins    DWORD PTR es:[edi],dx
  41bc18:	dec    edi
  41bc19:	bound  ecx,QWORD PTR [edi+0x38]
  41bc1c:	xor    bl,BYTE PTR ss:[esi]
  41bc1f:	ds das 
  41bc21:	xor    eax,0x5874e900
  41bc26:	addr16 aas 
  41bc28:	jge    0x41bc90
  41bc2a:	outs   dx,BYTE PTR ds:[esi]
  41bc2b:	adc    BYTE PTR [edi+0x1f],ah
  41bc2e:	addr16 (bad) 
  41bc31:	add    eax,0x47543a55
  41bc36:	push   esp
  41bc37:	cmp    DWORD PTR [eax],eax
	...
  41bc69:	add    BYTE PTR [edi+0x49],bl
  41bc6c:	inc    edi
  41bc6d:	sbb    esp,DWORD PTR [edi+0x49]
  41bc70:	inc    ebx
  41bc71:	daa    
  41bc72:	and    eax,DWORD PTR [esi+0x52]
  41bc75:	jmp    0x2495ee9b
  41bc7a:	xor    eax,0x37e95039
  41bc7f:	inc    esp
  41bc80:	dec    eax
  41bc81:	rcl    BYTE PTR [ecx],1
  41bc83:	pop    ecx
  41bc84:	ins    DWORD PTR es:[edi],dx
  41bc85:	fstp   TBYTE PTR [edi-0x4941aefb]
  41bc8b:	push   ecx
  41bc8c:	jne    0x41bc56
  41bc8e:	mov    dl,0x68
  41bc90:	pop    esp
  41bc91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc92:	mov    esp,0xc4c8625a
  41bc97:	ss inc ecx
  41bc99:	test   al,0x70
  41bc9b:	dec    eax
  41bc9c:	pop    esp
  41bc9d:	stos   BYTE PTR es:[edi],al
  41bc9e:	xchg   ebx,eax
  41bc9f:	push   ecx
  41bca0:	arpl   WORD PTR [edi-0x20dfca8c],sp
  41bca6:	inc    eax
  41bca7:	cmp    eax,0x29837c6d
  41bcac:	dec    edi
  41bcad:	stos   BYTE PTR es:[edi],al
  41bcae:	cmp    al,0x5a
  41bcb0:	ins    DWORD PTR es:[edi],dx
  41bcb1:	lea    eax,[edx+0x31e9722c]
  41bcb7:	pop    edx
  41bcb8:	data16 jne 0x41bc60
  41bcbb:	sub    al,0x72
  41bcbd:	dec    esp
  41bcbe:	sub    eax,DWORD PTR [edx+0x6c]
  41bcc1:	dec    esi
  41bcc2:	sub    DWORD PTR [esp+ebp*2],0x500c223a
  41bcc9:	and    al,0x9b
  41bccb:	inc    esi
  41bccc:	jae    0x41bcce
	...
  41bcfe:	add    BYTE PTR [eax],al
  41bd00:	mov    gs,WORD PTR [esi+eax*2]
  41bd03:	push   esp
  41bd04:	push   0x21
  41bd06:	and    BYTE PTR ss:[edx+0x37],bl
  41bd0a:	imul   esp,DWORD PTR [esi+0x1f],0x36
  41bd0e:	outs   dx,DWORD PTR ds:[esi]
  41bd0f:	imul   edx,DWORD PTR [ebp+0x63],0x18666c5d
  41bd16:	aas    
  41bd17:	push   esp
  41bd18:	bound  ebp,QWORD PTR gs:[edx+eiz*2+0x6b]
  41bd1d:	aaa    
  41bd1e:	add    BYTE PTR [ebx+0x75],dl
  41bd21:	sub    esi,DWORD PTR [edi+esi*2+0x5b]
  41bd25:	aaa    
  41bd26:	popa   
  41bd27:	pop    esp
  41bd28:	dec    ebp
  41bd29:	pop    ebp
  41bd2a:	imul   esp,DWORD PTR [edx+0x6b],0x5d
  41bd2e:	dec    edi
  41bd2f:	inc    ebx
  41bd30:	mov    ebx,0xb95c4118
  41bd35:	cmp    esi,DWORD PTR [ebp+eiz*2+0xc]
  41bd39:	sbb    al,0x50
  41bd3b:	and    BYTE PTR [ebp+0x21],ch
  41bd3e:	dec    eax
  41bd3f:	outs   dx,DWORD PTR ds:[esi]
  41bd40:	aaa    
  41bd41:	sub    ebx,DWORD PTR [ecx+edx*2-0x7]
  41bd45:	sbb    ebp,DWORD PTR [ebx+0x6f]
  41bd48:	es pop bp
  41bd4b:	jb     0x41bd97
  41bd4d:	adc    eax,0x38ce666b
  41bd52:	pop    ebp
  41bd53:	jb     0x41bd34
  41bd55:	adc    eax,DWORD PTR [ebx+0x6c]
  41bd58:	in     eax,0x65
  41bd5a:	pop    ebp
  41bd5b:	ins    BYTE PTR es:[edi],dx
  41bd5c:	fld    DWORD PTR [ebp+edi*1+0x50]
  41bd60:	mov    edi,0x753f13
	...
  41bd95:	add    BYTE PTR [esi-0x25abb9d5],cl
  41bd9b:	daa    
  41bd9c:	xor    esp,DWORD PTR [eax]
  41bd9e:	fidiv  DWORD PTR ds:0x369f666b
  41bda4:	outs   dx,DWORD PTR ds:[esi]
  41bda5:	imul   edx,DWORD PTR [ebp+0x636c5d63],0x2f413112
  41bdaf:	or     esp,DWORD PTR [ebx+0x6c]
  41bdb2:	inc    ecx
  41bdb3:	cmp    eax,0x3b300052
  41bdb8:	pop    esi
  41bdb9:	je     0x41bdef
  41bdbb:	cmp    eax,0x23176352
  41bdc0:	push   0x67fd416d
  41bdc5:	push   ecx
  41bdc6:	and    BYTE PTR ds:0x1f3f4334,bl
  41bdcc:	dec    ebp
  41bdcd:	je     0x41bdcd
  41bdcf:	and    esi,DWORD PTR [eax]
  41bdd1:	push   eax
  41bdd2:	inc    ebx
  41bdd3:	(bad)  
  41bdd4:	and    DWORD PTR [eax-0xc],ecx
  41bdd7:	clc    
  41bdd8:	pop    esp
  41bdd9:	pop    esp
  41bdda:	adc    bl,BYTE PTR [edi]
  41bddc:	xor    BYTE PTR [ebp+0x4],ch
  41bddf:	retf   0x5f5f
  41bde2:	icebp  
  41bde3:	fnsave [eax]
  41bde5:	ins    DWORD PTR es:[edi],dx
  41bde6:	std    
  41bde7:	mov    cl,0x4c
  41bde9:	pop    edi
  41bdea:	sar    DWORD PTR [ecx-0x7438bacb],1
  41bdf0:	pop    edi
  41bdf1:	pop    edi
  41bdf2:	mov    edi,0xb33f406f
  41bdf7:	mov    eax,ds:0x4135
	...
  41be2c:	mov    dh,0x88
  41be2e:	pop    esi
  41be2f:	inc    esi
  41be30:	(bad)  
  41be31:	ins    BYTE PTR es:[edi],dx
  41be32:	and    DWORD PTR [eax],edi
  41be34:	or     DWORD PTR [edi+ecx*2+0x5081bd6d],0x71
  41be3c:	mov    al,BYTE PTR [ebx-0x6778a09d]
  41be42:	xor    al,BYTE PTR [ecx-0x49]
  41be45:	jae    0x41beab
  41be47:	ins    BYTE PTR es:[edi],dx
  41be48:	cmp    DWORD PTR [ebp+0x4f],0x659b9f00
  41be4f:	ins    DWORD PTR es:[edi],dx
  41be50:	cmp    DWORD PTR [ebp+0x65],0x2805a051
  41be57:	xor    al,0xa0
  41be59:	sub    DWORD PTR [edx],ebp
  41be5b:	pop    ecx
  41be5c:	push   edi
  41be5d:	pusha  
  41be5e:	sub    eax,0x2b053338
  41be63:	dec    ebx
  41be64:	aas    
  41be65:	pop    edx
  41be66:	dec    ecx
  41be67:	gs aaa 
  41be69:	sub    al,BYTE PTR ss:[ebp+0x13]
  41be6d:	inc    eax
  41be6e:	adc    eax,DWORD PTR [edi+0x30]
  41be71:	push   ecx
  41be72:	inc    esp
  41be73:	dec    edx
  41be74:	pop    ss
  41be75:	xor    eax,0x5a3133c7
  41be7a:	out    0x2f,eax
  41be7c:	es pop ecx
  41be7e:	push   es
  41be7f:	data16 xor al,0x59
  41be82:	cmp    al,BYTE PTR [edi+0x4c]
  41be85:	xor    eax,0x5022302c
  41be8a:	repz push 0x24173125
	...
  41bec0:	add    BYTE PTR [eax],al
  41bec2:	daa    
  41bec3:	pop    esp
  41bec4:	repz push 0x58aa2963
  41beca:	out    dx,eax
  41becb:	pop    edi
  41becc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41becd:	aaa    
  41bece:	mov    bl,0x5
  41bed0:	mov    bl,0x56
  41bed2:	enter  0xc31b,0x64
  41bed6:	xlat   BYTE PTR ds:[ebx]
  41bed7:	add    eax,0x51bd629a
  41bedc:	mov    dh,0x64
  41bede:	mov    cl,0x60
  41bee0:	xchg   ebx,eax
  41bee1:	dec    ecx
  41bee2:	(bad)  
  41bee3:	fs mov edx,0xb72da55b
  41bee9:	das    
  41beea:	jb     0x41bef1
  41beec:	mov    edx,0x9e518562
  41bef1:	fs xchg ecx,eax
  41bef3:	pusha  
  41bef4:	stos   DWORD PTR es:[edi],eax
  41bef5:	dec    ecx
  41bef6:	jg     0x41bf5c
  41bef8:	jp     0x41bf55
  41befa:	popf   
  41befb:	sub    eax,0x5a920397
  41bf00:	add    BYTE PTR [edi+0x7b5f508c],cl
  41bf06:	jnp    0x41bf31
  41bf08:	inc    esi
  41bf09:	push   ebp
  41bf0a:	jle    0x41bf60
  41bf0c:	push   0x5c358f27
  41bf11:	sbb    eax,0x5a6e425f
  41bf16:	sub    ebp,DWORD PTR [edx]
  41bf18:	ins    BYTE PTR es:[edi],dx
  41bf19:	push   ebp
  41bf1a:	cmp    dl,BYTE PTR [edi+0x44]
  41bf1d:	dec    eax
  41bf1e:	sbb    ebx,DWORD PTR [ebp+0x50]
  41bf21:	dec    eax
  41bf22:	sbb    ebx,DWORD PTR [ebp+0x0]
  41bf25:	cmp    DWORD PTR [eax],eax
	...
  41bf57:	add    BYTE PTR [esi+0x51],al
  41bf5a:	push   0x715b67e9
  41bf5f:	adc    eax,0xc96c5906
  41bf64:	push   eax
  41bf65:	sub    dh,BYTE PTR [ecx+eax*1+0x67]
  41bf69:	inc    ecx
  41bf6a:	pop    edi
  41bf6b:	std    
  41bf6c:	inc    DWORD PTR [edx+0x6d]
  41bf6f:	or     eax,0xe972660b
  41bf74:	inc    esp
  41bf75:	xor    al,0x67
  41bf77:	cmc    
  41bf78:	sti    
  41bf79:	push   ebx
  41bf7a:	cs int 0xff
  41bf7d:	push   eax
  41bf7e:	add    BYTE PTR [ebp-0x3598ab69],bh
  41bf84:	mov    ch,0x17
  41bf86:	fs enter 0x5b4,0x5c
  41bf8b:	mov    cl,0xa7
  41bf8d:	push   esi
  41bf8e:	je     0x41bf5e
  41bf90:	xchg   esi,eax
  41bf91:	push   eax
  41bf92:	cs int 0xbf
  41bf95:	push   ecx
  41bf96:	add    BYTE PTR [ebp-0x65a0a666],cl
  41bf9c:	mov    BYTE PTR [edi],bh
  41bf9e:	pop    eax
  41bf9f:	mov    ecx,0xb500164c
  41bfa4:	stos   BYTE PTR es:[edi],al
  41bfa5:	pop    ecx
  41bfa6:	pop    edi
  41bfa7:	call   0x18ea:0x583fa8
  41bfae:	xor    al,0x0
  41bfb0:	fidivr WORD PTR [esi]
  41bfb2:	gs ins BYTE PTR es:[edi],dx
  41bfb4:	out    0x1a,eax
  41bfb6:	gs ins BYTE PTR es:[edi],dx
  41bfb8:	outs   dx,BYTE PTR ds:[esi]
  41bfb9:	popa   
  41bfba:	add    BYTE PTR [eax+eax*1+0x0],bl
	...
  41bfee:	mov    DWORD PTR [esp+esi*2],ebp
  41bff1:	gs das 
  41bff3:	outs   dx,BYTE PTR fs:[esi]
  41bff5:	popa   
  41bff6:	and    eax,0x322e7260
  41bffb:	sub    BYTE PTR [eax+eax*1+0x7e],ch
  41bfff:	das    
  41c000:	popa   
  41c001:	arpl   WORD PTR [edi],sp
  41c003:	arpl   WORD PTR [ebx+esi*2+0x27],si
  41c007:	das    
  41c008:	jbe    0x41c06f
  41c00a:	push   0x4f782e32
  41c00f:	add    BYTE PTR gs:[esp+eiz*2+0x2c],bl
  41c014:	ins    BYTE PTR es:[edi],dx
  41c015:	gs jo  0x41c044
  41c018:	ins    BYTE PTR es:[edi],dx
  41c019:	ins    BYTE PTR es:[edi],dx
  41c01a:	pop    ebx
  41c01b:	and    edi,DWORD PTR [eax+0x6d]
  41c01e:	outs   dx,BYTE PTR ds:[esi]
  41c01f:	add    DWORD PTR [edi+0x6f],ecx
  41c022:	fs sub eax,0x5f786173
  41c028:	pop    esp
  41c029:	inc    esi
  41c02a:	arpl   WORD PTR [ebp+0x61],sp
  41c02d:	pop    edx
  41c02e:	xchg   ebx,eax
  41c02f:	sub    BYTE PTR [ecx+eiz*2+0x4a],ch
  41c033:	adc    DWORD PTR [ebx+0x66],ebp
  41c036:	ss sub eax,0x1827725d
  41c03c:	inc    esi
  41c03d:	imul   ebp,DWORD PTR [esi],0x2e695a5f
  41c043:	sub    BYTE PTR [ebp+0x20],bl
  41c046:	or     DWORD PTR [eax],ebp
  41c048:	gs gs in al,dx
  41c04b:	das    
  41c04c:	add    BYTE PTR [ecx-0x34],cl
  41c04f:	xor    BYTE PTR [ecx+eiz*2+0x0],dh
	...
  41c083:	add    dh,ch
  41c085:	daa    
  41c086:	pop    ebx
  41c087:	inc    esp
  41c088:	arpl   WORD PTR [ebp+0x479b0053],ax
  41c08e:	push   esp
  41c08f:	je     0x41c0f4
  41c091:	imul   edx,DWORD PTR [ebx+eiz*2+0x71],0x705f31de
  41c099:	dec    ebx
  41c09a:	add    DWORD PTR [eax+0x7c],edx
  41c09d:	dec    esp
  41c09e:	push   ebp
  41c09f:	add    BYTE PTR [ecx+0x576d5d39],dl
  41c0a5:	inc    ecx
  41c0a6:	and    al,0x44
  41c0a8:	dec    edx
  41c0a9:	sub    al,0x4
  41c0ab:	push   ecx
  41c0ac:	inc    esi
  41c0ad:	sub    al,0x5a
  41c0af:	arpl   WORD PTR [ecx-0x2],dx
  41c0b2:	aaa    
  41c0b3:	ja     0x41c0e8
  41c0b5:	inc    ecx
  41c0b6:	add    al,0x51
  41c0b8:	ds or  al,0x5a
  41c0bb:	arpl   WORD PTR [ecx],si
  41c0bd:	enter  0x6d39,0x30
  41c0c1:	jmp    0x6359:0xec065103
  41c0c8:	adc    eax,eax
  41c0ca:	ss jno 0x41c0d3
  41c0cd:	in     al,dx
  41c0ce:	add    edx,DWORD PTR [ecx-0x2]
  41c0d1:	retf   
  41c0d2:	push   edi
  41c0d3:	arpl   cx,si
  41c0d5:	mov    bh,0x31
  41c0d7:	pop    edi
  41c0d8:	lock retf 0x5101
  41c0dc:	push   es
  41c0dd:	int3   
  41c0de:	push   edi
  41c0df:	arpl   cx,si
  41c0e1:	out    dx,eax
  41c0e2:	xor    ebp,DWORD PTR [ebp-0x2f]
  41c0e5:	mov    al,0x1
  41c0e7:	push   eax
	...
  41c118:	add    BYTE PTR [eax],al
  41c11a:	ret    0x59a8
  41c11d:	add    BYTE PTR [eax-0x4189ac3f],dh
  41c123:	mov    dh,BYTE PTR ds:0x1c1b377
  41c129:	dec    esp
  41c12a:	ret    0x558b
  41c12d:	and    BYTE PTR [eax-0x4189ac3f],dl
  41c133:	add    eax,0x56ab2399
  41c138:	call   0x9754:0x88396357
  41c13f:	and    eax,0x4f9166ba
  41c144:	mov    WORD PTR [ebp+0x43],ss
  41c147:	xor    BYTE PTR [edx+0x66],bh
  41c14a:	jno    0x41c151
  41c14c:	mov    ds:0xc7517262,eax
  41c151:	xor    al,0x80
  41c153:	push   ebx
  41c154:	pop    ebp
  41c155:	imul   edx,DWORD PTR [ecx+0x25],0x52526537
  41c15c:	out    0x3f,eax
  41c15e:	sub    al,0x52
  41c160:	push   ebx
  41c161:	and    al,0x32
  41c163:	pusha  
  41c164:	cmp    DWORD PTR [esi+0x40],edx
  41c167:	push   ebx
  41c168:	pop    es
  41c169:	xor    al,0x46
  41c16b:	push   ebx
  41c16c:	cmp    eax,DWORD PTR [edi+ebx*1]
  41c16f:	cmp    bl,BYTE PTR fs:[eax-0x7d]
  41c173:	xor    cl,BYTE PTR [edx+edx*2]
  41c176:	adc    eax,0x33241960
  41c17b:	sbb    ebx,DWORD PTR fs:[eax+eax*1+0x0]
	...
  41c1b0:	arpl   WORD PTR [ecx],di
  41c1b2:	or     BYTE PTR [ebx+0xf],dl
  41c1b5:	and    eax,0x4ef1691a
  41c1ba:	add    al,0x52
  41c1bc:	inc    ebx
  41c1bd:	xor    eax,esi
  41c1bf:	push   ebx
  41c1c0:	add    BYTE PTR ds:0x25133825,al
  41c1c6:	mov    ch,0x64
  41c1c8:	aad    0x5c
  41c1ca:	(bad)  
  41c1cb:	fs iret 
  41c1cd:	push   esi
  41c1ce:	fld    DWORD PTR [ebx]
  41c1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1d1:	xor    DWORD PTR [edi-0x2ba95ddd],esi
  41c1d7:	pusha  
  41c1d8:	pushf  
  41c1d9:	push   edi
  41c1da:	ret    
  41c1db:	push   0xcf0005b1
  41c1e0:	xchg   esp,eax
  41c1e1:	push   ebp
  41c1e2:	ins    BYTE PTR es:[edi],dx
  41c1e3:	rcl    BYTE PTR [ecx-0x5762d1af],0x51
  41c1ea:	add    BYTE PTR [ebp-0x7a93ad5e],bh
  41c1f0:	jnp    0x41c243
  41c1f2:	push   eax
  41c1f3:	fwait
  41c1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1f5:	pop    eax
  41c1f6:	leavew 
  41c1f8:	xor    DWORD PTR [eax+0x66],ebx
  41c1fb:	jne    0x41c18a
  41c1fd:	es jb  0x41c18c
  41c200:	pusha  
  41c201:	pop    ss
  41c202:	mov    BYTE PTR fs:[ebp+eax*1+0x54374b2e],cl
  41c20a:	add    BYTE PTR [edx],bh
  41c20c:	xor    al,0x5f
  41c20e:	je     0x41c26e
  41c210:	inc    esi
  41c211:	push   ebx
  41c212:	arpl   WORD PTR ds:0x0,bp
	...
  41c244:	add    BYTE PTR [eax],al
  41c246:	and    DWORD PTR ds:0x29771d46,esi
  41c24c:	inc    edx
  41c24d:	xor    al,0x43
  41c24f:	pop    ecx
  41c250:	arpl   WORD PTR ds:0x3e723587,di
  41c256:	add    al,0x5f
  41c258:	and    BYTE PTR [edi],ch
  41c25a:	pop    ebx
  41c25b:	xor    eax,0x5dfe2c5c
  41c260:	outs   dx,BYTE PTR ds:[esi]
  41c261:	jmp    0x15a81ab7
  41c266:	sub    al,0x26
  41c268:	jb     0x41c276
  41c26a:	xor    eax,DWORD PTR [ebx+0x73]
  41c26d:	or     eax,0x19746203
  41c272:	adc    DWORD PTR [eax+0x6d],ebx
  41c275:	pop    es
  41c276:	aas    
  41c277:	xor    al,0x6d
  41c279:	iret   
  41c27a:	mov    ah,0x3a
  41c27c:	pop    edi
  41c27d:	fcmovne st,st(3)
  41c27f:	popa   
  41c280:	inc    edx
  41c281:	fsubr  QWORD PTR [ecx+esi*1+0x3790d563]
  41c288:	ins    DWORD PTR es:[edi],dx
  41c289:	add    BYTE PTR ds:0xce46202b,dl
  41c28f:	clc    
  41c290:	pop    ds
  41c291:	inc    ebx
  41c292:	bound  esp,QWORD PTR es:[ecx+0x6e]
  41c296:	out    dx,al
  41c297:	hlt    
  41c298:	dec    eax
  41c299:	popa   
  41c29a:	repz bound eax,QWORD PTR [eax]
  41c29d:	push   ebx
  41c29e:	in     eax,0x2a
  41c2a0:	je     0x41c319
  41c2a2:	fist   DWORD PTR [esi+0x61]
  41c2a5:	pop    esp
  41c2a6:	mov    eax,0x5445f8
	...
  41c2db:	add    dl,bl
  41c2dd:	hlt    
  41c2de:	inc    ecx
  41c2df:	jne    0x41c2c7
  41c2e1:	fs popa 
  41c2e3:	je     0x41c2ff
  41c2e5:	stc    
  41c2e6:	jno    0x41c357
  41c2e8:	sub    ah,BYTE PTR gs:[eax]
  41c2eb:	inc    esi
  41c2ec:	sahf   
  41c2ed:	stc    
  41c2ee:	pop    ebx
  41c2ef:	dec    edi
  41c2f0:	cmp    bl,BYTE PTR [ebp+0x65]
  41c2f3:	outs   dx,DWORD PTR ds:[esi]
  41c2f4:	and    al,0x56
  41c2f6:	add    BYTE PTR [ebx-0x7b],dl
  41c2f9:	sub    esi,DWORD PTR [edi+esi*2+0x2b]
  41c2fd:	push   edi
  41c2fe:	popa   
  41c2ff:	pop    esp
  41c300:	mov    BYTE PTR [esp+ebp*2+0x6c],bl
  41c304:	pop    ds
  41c305:	pop    ebp
  41c306:	push   eax
  41c307:	jb     0x41c36e
  41c309:	bound  esp,QWORD PTR [esi+0x20]
  41c30c:	pop    ecx
  41c30d:	bound  esp,QWORD PTR [esi+0x74]
  41c310:	ins    DWORD PTR es:[edi],dx
  41c311:	sub    BYTE PTR [edx+0x65],dh
  41c314:	push   esi
  41c315:	inc    edi
  41c316:	jno    0x41c384
  41c318:	xchg   BYTE PTR [ebx],ch
  41c31a:	je     0x41c36c
  41c31c:	js     0x41c37f
  41c31e:	imul   esp,DWORD PTR [esi-0x56],0x4a
  41c322:	push   esp
  41c323:	push   eax
  41c324:	call   0x7463:0x5f696c45
  41c32b:	pop    esp
  41c32c:	adc    eax,0x25697458
  41c331:	bound  ebp,QWORD PTR [edi+0x0]
  41c334:	arpl   WORD PTR [edi+0x5c],di
  41c337:	iretw  
  41c339:	(bad)  [edx+0x72]
  41c33c:	(bad)  
  41c33d:	push   0x3f
  41c33f:	push   eax
	...
  41c370:	add    BYTE PTR [eax],al
  41c372:	popf   
  41c373:	call   0x7450:0xcd9f0031
  41c37a:	nop
  41c37b:	leave  
  41c37c:	push   eax
  41c37d:	jno    0x41c309
  41c37f:	fwait
  41c380:	pop    ebx
  41c381:	inc    esi
  41c382:	mov    dl,BYTE PTR [edx-0x7a4fff9a]
  41c388:	push   ebp
  41c389:	arpl   WORD PTR [eax+0x63725a6a],dx
  41c38f:	jne    0x41c3ec
  41c391:	jno    0x41c402
  41c393:	lea    ebx,[ebp+0x6c]
  41c396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c397:	test   DWORD PTR [edi+0x2f],ecx
  41c39a:	arpl   WORD PTR [ecx+ecx*2+0x2dae4f6b],ax
  41c3a1:	push   ecx
  41c3a2:	inc    esi
  41c3a3:	dec    ebp
  41c3a4:	push   edx
  41c3a5:	je     0x41c3cc
  41c3a7:	add    dh,BYTE PTR [eax+eax*1]
  41c3aa:	sbb    eax,0x316d564d
  41c3af:	push   ebp
  41c3b0:	pop    eax
  41c3b1:	arpl   WORD PTR [eax],si
  41c3b3:	adc    al,0x68
  41c3b5:	pop    edi
  41c3b6:	aaa    
  41c3b7:	scas   al,BYTE PTR es:[edi]
  41c3b8:	cmp    DWORD PTR [edi+0x30],esp
  41c3bb:	cli    
  41c3bc:	pop    edx
  41c3bd:	jb     0x41c3d9
  41c3bf:	fsub   QWORD PTR [ebp+0x5f]
  41c3c2:	xsave  [edx+0x64]
  41c3c6:	pop    es
  41c3c7:	and    BYTE PTR [edx+0x69],ah
  41c3ca:	xor    eax,0x6374610a
  41c3cf:	mov    ebp,0x17006756
  41c3d4:	push   ds
  41c3d5:	add    BYTE PTR fs:[eax],al
	...
  41c408:	add    al,dl
  41c40a:	add    DWORD PTR [edi+ecx*1-0x47],ebx
  41c40e:	dec    edi
  41c40f:	(bad)  
  41c410:	int3   
  41c411:	add    eax,0x5b337ad
  41c416:	mov    edx,0xde39c55c
  41c41b:	(bad)  
  41c41d:	sub    BYTE PTR [ebx-0x36c84fc9],ch
  41c423:	pop    esp
  41c424:	popf   
  41c425:	pop    ecx
  41c426:	xchg   edi,eax
  41c427:	add    eax,esp
  41c429:	xor    edi,DWORD PTR [edx-0x44ce7ba9]
  41c42f:	push   ebx
  41c430:	mov    esp,0xb2038f39
  41c435:	xor    al,BYTE PTR [ebp-0x66db69a9]
  41c43b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41c43d:	push   esi
  41c43e:	jle    0x41c497
  41c440:	pushf  
  41c441:	popa   
  41c442:	lods   eax,DWORD PTR ds:[esi]
  41c443:	inc    ebp
  41c444:	popf   
  41c445:	pop    ecx
  41c446:	xchg   edi,eax
  41c447:	add    esp,DWORD PTR [edx-0x7f9873c9]
  41c44d:	xor    esi,DWORD PTR [ebx+0x5a]
  41c450:	cmp    al,0x31
  41c452:	cmp    ah,BYTE PTR [ebp+0x47]
  41c455:	cmp    edi,esp
  41c457:	inc    esi
  41c458:	push   ecx
  41c459:	sub    BYTE PTR [ebx+0x61],cl
  41c45c:	xor    eax,0x4f654039
  41c461:	inc    esi
  41c462:	dec    edi
  41c463:	popa   
  41c464:	inc    edx
  41c465:	cs out 0x36,eax
  41c468:	sub    edi,DWORD PTR ds:[ebx]
  41c46b:	push   ebx
	...
  41c49c:	add    BYTE PTR [eax],al
  41c49e:	add    al,0x37
  41c4a0:	inc    esp
  41c4a1:	sub    BYTE PTR [edx],dh
  41c4a3:	xor    bl,BYTE PTR [ebx]
  41c4a5:	gs aaa 
  41c4a7:	dec    ebx
  41c4a8:	and    eax,0x33553742
  41c4ad:	cmp    edx,DWORD PTR [ebx]
  41c4af:	cmp    DWORD PTR [eax],eax
  41c4b1:	pop    ebx
  41c4b2:	or     eax,0x1433e736
  41c4b7:	ss cli 
  41c4b9:	push   edx
  41c4ba:	(bad)  
  41c4bb:	add    BYTE PTR ss:0x471565f,cl
  41c4c2:	mov    ch,0x53
  41c4c4:	pop    edi
  41c4c5:	aam    0xc3
  41c4c7:	add    eax,0x39b5ce48
  41c4cc:	aas    
  41c4cd:	int    0xae
  41c4cf:	xor    al,0x0
  41c4d1:	mov    ebx,0xbd6d2ec3
  41c4d6:	ret    
  41c4d7:	dec    ecx
  41c4d8:	addr16 mov ebx,0xbb6d5560
  41c4de:	xchg   esp,eax
  41c4df:	add    eax,0x39b5be48
  41c4e4:	dec    esi
  41c4e5:	mov    BYTE PTR [ebx-0x5646ffda],bh
  41c4eb:	aaa    
  41c4ec:	je     0x41c4d7
  41c4ee:	push   ebx
  41c4ef:	xor    al,0x63
  41c4f1:	fwait
  41c4f2:	call   0x5f55:0x608c6b62
  41c4f9:	jp     0x41c490
  41c4fb:	cmp    BYTE PTR [ebp+0x7b],ch
  41c4fe:	test   BYTE PTR ds:0x7e48,al
	...
  41c534:	xor    eax,0x2d504439
  41c539:	push   ebx
  41c53a:	pop    edi
  41c53b:	dec    esp
  41c53c:	inc    edx
  41c53d:	add    eax,0x39414651
  41c542:	jne    0x41c58c
  41c544:	adc    eax,0x182a5c26
  41c549:	sub    esp,DWORD PTR [esi+0x44]
  41c54c:	inc    edx
  41c54d:	inc    esp
  41c54e:	jae    0x41c589
  41c550:	jg     0x41c5a6
  41c552:	ins    DWORD PTR es:[edi],dx
  41c553:	inc    edi
  41c554:	xor    edi,DWORD PTR [eax]
  41c556:	pop    edi
  41c557:	sbb    eax,DWORD PTR [edx]
  41c559:	popa   
  41c55a:	inc    edi
  41c55b:	rdpmc  
  41c55d:	es jb  0x41c567
  41c560:	add    bh,BYTE PTR [ecx]
  41c562:	pop    esp
  41c563:	cmp    DWORD PTR ds:0x53006630,edx
  41c569:	pop    ebp
  41c56a:	popa   
  41c56b:	jae    0x41c5e7
  41c56d:	cli    
  41c56e:	push   0x66
  41c570:	push   si
  41c572:	pop    ebp
  41c573:	jb     0x41c5dc
  41c575:	in     eax,dx
  41c576:	inc    ebp
  41c577:	push   esp
  41c578:	sbb    dh,ah
  41c57a:	pop    esp
  41c57b:	jb     0x41c5a4
  41c57d:	jmp    0x464a14c0
  41c582:	inc    esi
  41c583:	push   esp
  41c584:	cli    
  41c585:	call   0x26382ed8
  41c58a:	outs   dx,DWORD PTR ds:[esi]
  41c58b:	add    dl,dh
  41c58d:	pop    ebx
  41c58e:	outs   dx,DWORD PTR ds:[esi]
  41c58f:	je     0x41c5cb
  41c591:	imul   BYTE PTR [esi+0x65]
  41c594:	fadd   DWORD PTR [eax+edx*2]
  41c597:	outs   dx,DWORD PTR ds:[esi]
	...
  41c5c8:	add    BYTE PTR [eax],al
  41c5ca:	clc    
  41c5cb:	push   eax
  41c5cc:	add    BYTE PTR [eax-0x2b],dl
  41c5cf:	add    al,0x50
  41c5d1:	je     0x41c5b5
  41c5d3:	cli    
  41c5d4:	call   DWORD PTR [edx-0x47]
  41c5d7:	cld    
  41c5d8:	jmp    FWORD PTR [edi+0x78]
  41c5db:	pop    ebx
  41c5dc:	imul   bx,si,0x6f25
  41c5e1:	cs jb  0x41c641
  41c5e4:	ins    BYTE PTR es:[edi],dx
  41c5e5:	add    dh,ch
  41c5e7:	inc    esi
  41c5e8:	push   esp
  41c5e9:	push   eax
  41c5ea:	push   0x0
  41c5ec:	js     0x41c65e
  41c5ee:	push   ds
  41c5ef:	pop    esi
  41c5f0:	jb     0x41c657
  41c5f2:	sub    BYTE PTR [ecx],cl
  41c5f4:	dec    edi
  41c5f5:	outs   dx,DWORD PTR ds:[esi]
  41c5f6:	and    al,0x55
  41c5f8:	jae    0x41c65b
  41c5fa:	js     0x41c65c
  41c5fc:	pop    esp
  41c5fd:	inc    esi
  41c5fe:	push   esi
  41c5ff:	stc    
  41c600:	pop    ds
  41c601:	inc    ebp
  41c602:	jb     0x41c65d
  41c604:	ins    BYTE PTR es:[edi],dx
  41c605:	outs   dx,DWORD PTR ds:[esi]
  41c606:	pop    eax
  41c607:	pusha  
  41c608:	jb     0x41c666
  41c60a:	inc    esp
  41c60b:	cmc    
  41c60c:	dec    edi
  41c60d:	and    BYTE PTR [edi+0x51],al
  41c610:	jo     0x41c67e
  41c612:	arpl   WORD PTR [edi],ax
  41c614:	push   esi
  41c615:	arpl   cx,si
  41c617:	icebp  
  41c618:	cs ins DWORD PTR es:[edi],dx
  41c61a:	icebp  
  41c61b:	adc    dl,BYTE PTR [ebx+0x70]
  41c61e:	add    cl,BYTE PTR [ebx]
  41c620:	pop    ebp
  41c621:	pop    esp
  41c622:	push   ss
  41c623:	lock inc edx
  41c625:	push   esp
  41c626:	int3   
  41c627:	mov    edi,0xdcc24255
  41c62c:	push   ss
  41c62d:	xor    al,BYTE PTR [eax]
	...
  41c65f:	add    BYTE PTR [ecx-0x31bdfbe6],dl
  41c665:	loop   0x41c6b4
  41c667:	ins    DWORD PTR es:[edi],dx
  41c668:	int    0xdb
  41c66a:	add    DWORD PTR [ecx-0x3c],edx
  41c66d:	ror    BYTE PTR [ebp+0x75],1
  41c670:	ret    0x5e7c
  41c673:	pop    esp
  41c674:	popf   
  41c675:	mov    ds:0x76a62031,al
  41c67a:	push   ecx
  41c67b:	ins    BYTE PTR es:[edi],dx
  41c67c:	test   BYTE PTR [esi+ebx*2+0x537eaf72],bl
  41c683:	ins    DWORD PTR es:[edi],dx
  41c684:	jge    0x41c60b
  41c686:	push   ebp
  41c687:	arpl   WORD PTR [eax-0x52],si
  41c68a:	xor    DWORD PTR [edi+0x70],ebx
  41c68d:	cmp    edx,DWORD PTR [eax+0x6d]
  41c690:	jno    0x41c61c
  41c692:	add    DWORD PTR [eax-0x7e],edx
  41c695:	cmp    edx,DWORD PTR [ebp+esi*2+0x4c]
  41c699:	cmp    al,0x5d
  41c69b:	push   esp
  41c69c:	pop    edx
  41c69d:	pop    esi
  41c69e:	pop    ebp
  41c69f:	add    BYTE PTR [ebx],bl
  41c6a1:	dec    edi
  41c6a2:	push   ebx
  41c6a3:	je     0x41c708
  41c6a5:	jmp    0x5004:0x4a6556
  41c6ac:	inc    esp
  41c6ad:	cld    
  41c6ae:	dec    edi
  41c6af:	add    BYTE PTR [edx],bl
  41c6b1:	push   eax
  41c6b2:	pop    ecx
  41c6b3:	je     0x41c6ef
  41c6b5:	dec    ebp
  41c6b6:	pop    eax
  41c6b7:	push   eax
  41c6b8:	add    bh,dl
  41c6ba:	pop    ebx
  41c6bb:	add    BYTE PTR ds:0x32541b05,bl
  41c6c1:	adc    ebx,DWORD PTR cs:[edi+0x0]
	...
  41c6f5:	add    BYTE PTR ds:0x6358043d,dh
  41c6fb:	popa   
  41c6fc:	and    eax,0x827fc56
  41c701:	push   eax
  41c702:	add    ah,dh
  41c704:	out    0x19,al
  41c706:	cld    
  41c707:	add    BYTE PTR cs:[edi+edi*4],al
  41c70b:	push   edi
  41c70c:	or     BYTE PTR [edx-0x61],bl
  41c70f:	cmp    al,0xd2
  41c711:	pop    esi
  41c712:	scas   eax,DWORD PTR es:[edi]
  41c713:	inc    edx
  41c714:	into   
  41c715:	pop    ecx
  41c716:	mov    ebp,0x9227ce2c
  41c71b:	sub    dl,bl
  41c71d:	push   esp
  41c71e:	mov    esp,0x6354d52e
  41c723:	popa   
  41c724:	call   0x8d58:0xc032b25e
  41c72b:	xor    ah,bh
  41c72d:	xor    al,0x86
  41c72f:	daa    
  41c730:	fwait
  41c731:	push   eax
  41c732:	lods   al,BYTE PTR ds:[esi]
  41c733:	xor    eax,DWORD PTR [edi+eiz*1+0x3f8524ad]
  41c73a:	je     0x41c766
  41c73c:	test   BYTE PTR [edi],ah
  41c73e:	xchg   edx,eax
  41c73f:	sub    BYTE PTR [edx-0x5ad78eb2],cl
  41c745:	sub    esp,DWORD PTR [ebx+0x42]
  41c748:	xchg   BYTE PTR [ecx+0x45],bl
  41c74b:	sub    al,0x86
  41c74d:	and    esi,DWORD PTR [ebx]
  41c74f:	and    al,0x5b
  41c751:	pop    esp
  41c752:	arpl   WORD PTR [eax+0x4b],bx
  41c755:	push   eax
  41c756:	push   ecx
  41c757:	and    al,0x2d
  41c759:	sub    al,0x0
	...
  41c78b:	add    BYTE PTR [ebx],dl
  41c78d:	add    eax,0x393c532b
  41c792:	dec    esp
  41c793:	push   ebx
  41c794:	jge    0x41c7d3
  41c796:	dec    esp
  41c797:	pop    eax
  41c798:	arpl   WORD PTR [ecx+0x0],sp
  41c79b:	das    
  41c79c:	push   ebx
  41c79d:	push   ebp
  41c79e:	push   edx
  41c79f:	xor    al,0x30
  41c7a1:	sub    eax,0x34323b00
  41c7a6:	push   0x6339263a
  41c7ab:	(bad)  
  41c7ac:	sub    BYTE PTR [edx],ch
  41c7ae:	ins    BYTE PTR es:[edi],dx
  41c7af:	jmp    0xffb3e9e5
  41c7b4:	add    esi,DWORD PTR [ebx]
  41c7b6:	add    BYTE PTR [eax+edx*1],dl
  41c7b9:	and    dh,BYTE PTR [edx+0x7]
  41c7bc:	(bad)  
  41c7bd:	sub    ah,BYTE PTR [ebx-0x17]
  41c7c0:	nop
  41c7c1:	pop    esi
  41c7c2:	jno    0x41c79e
  41c7c4:	popf   
  41c7c5:	xor    BYTE PTR [edx-0x3b],dh
  41c7c8:	pusha  
  41c7c9:	inc    edi
  41c7ca:	je     0x41c7a5
  41c7cc:	jo     0x41c7fe
  41c7ce:	jb     0x41c7a5
  41c7d0:	pusha  
  41c7d1:	push   esp
  41c7d2:	ins    DWORD PTR es:[edi],dx
  41c7d3:	iret   
  41c7d4:	pushf  
  41c7d5:	cmp    BYTE PTR [edi-0x45],bl
  41c7d8:	ret    
  41c7d9:	popa   
  41c7da:	inc    ecx
  41c7db:	mov    ebx,0x8d7222af
  41c7e0:	inc    ebp
  41c7e1:	and    ah,BYTE PTR [edx-0x46]
  41c7e4:	scas   eax,DWORD PTR es:[edi]
  41c7e5:	cmp    DWORD PTR [ebx-0x47],esp
  41c7e8:	mov    bl,0x23
  41c7ea:	ins    BYTE PTR es:[edi],dx
  41c7eb:	adc    BYTE PTR [ecx+0x9b632d],0x0
	...
  41c822:	pusha  
  41c823:	popa   
  41c824:	inc    edx
  41c825:	nop
  41c826:	pushf  
  41c827:	dec    esp
  41c828:	pop    DWORD PTR [bp+di+0x3d]
  41c82d:	mov    edi,DWORD PTR [edi]
  41c82f:	cmp    DWORD PTR [ecx-0x80],ebp
  41c832:	and    bh,BYTE PTR cs:[eax+0x17]
  41c836:	inc    ebx
  41c837:	xor    al,0x0
  41c839:	xor    DWORD PTR [esp+esi*1],ebp
  41c83c:	je     0x41c885
  41c83e:	inc    esi
  41c83f:	sub    ah,BYTE PTR [ebx-0x17]
  41c842:	jae    0x41c878
  41c844:	arpl   WORD PTR [eax],ax
  41c846:	push   0x1f6d5d57
  41c84b:	or     DWORD PTR [eax+0x61],edx
  41c84e:	pop    ecx
  41c84f:	push   edx
  41c850:	jae    0x41c8c1
  41c852:	pop    eax
  41c853:	and    eax,0x53755000
  41c858:	je     0x41c85a
  41c85a:	dec    ecx
  41c85b:	push   esi
  41c85c:	data16 je 0x41c8bc
  41c85f:	sub    BYTE PTR [edx+0x65],dh
  41c862:	inc    esi
  41c863:	inc    esp
  41c864:	js     0x41c8d6
  41c866:	pop    ebx
  41c867:	push   edi
  41c868:	inc    esp
  41c869:	jb     0x41c8be
  41c86b:	dec    edi
  41c86c:	popa   
  41c86d:	pop    esp
  41c86e:	jns    0x41c896
  41c870:	outs   dx,DWORD PTR ds:[esi]
  41c871:	jae    0x41c8d6
  41c873:	push   esp
  41c874:	outs   dx,BYTE PTR ds:[esi]
  41c875:	jae    0x41c8b1
  41c877:	in     eax,0x40
  41c879:	js     0x41c8a5
  41c87b:	and    ch,BYTE PTR [esi+0x44]
  41c87e:	sbb    BYTE PTR [edx+0x76],bl
  41c881:	gs dec edx
  41c883:	in     eax,0x63
  41c885:	jb     0x41c887
	...
  41c8b7:	add    BYTE PTR [ebx],dl
  41c8b9:	dec    ebx
  41c8ba:	popa   
  41c8bb:	jae    0x41c911
  41c8bd:	pop    edi
  41c8be:	outs   dx,DWORD PTR ds:[esi]
  41c8bf:	add    BYTE PTR [eax+0x51],ch
  41c8c2:	pop    ebp
  41c8c3:	jae    0x41c89e
  41c8c5:	dec    ebx
  41c8c6:	imul   esi,DWORD PTR [edx-0x22],0xffffffe6
  41c8ca:	pop    ds
  41c8cb:	cmp    bl,BYTE PTR [edx]
  41c8cd:	out    0xff,eax
  41c8cf:	and    DWORD PTR [esi],esp
  41c8d1:	or     DWORD PTR [edi+0x6f],ecx
  41c8d4:	fmul   QWORD PTR [ebx+esi*2+0x61]
  41c8d8:	push   0xe2455c25
  41c8dd:	pop    eax
  41c8de:	pop    ebp
  41c8df:	outs   dx,BYTE PTR ds:[esi]
  41c8e0:	push   cs
  41c8e1:	push   edi
  41c8e2:	gs jbe 0x41c8c4
  41c8e5:	or     BYTE PTR [ecx+0x78],al
  41c8e8:	sub    ch,BYTE PTR [eax]
  41c8ea:	outs   dx,BYTE PTR ds:[esi]
  41c8eb:	inc    esp
  41c8ec:	sub    BYTE PTR [eax+0x76],ah
  41c8ef:	gs arpl bx,si
  41c8f2:	cmp    ebp,DWORD PTR [ebp+0x46]
  41c8f5:	inc    ecx
  41c8f6:	add    al,0x51
  41c8f8:	inc    esi
  41c8f9:	add    BYTE PTR [esi+0x63],cl
  41c8fc:	xor    DWORD PTR [esi+0x6712e],ebp
  41c902:	ss pop edi
  41c904:	push   es
  41c905:	inc    ecx
  41c906:	add    al,0x50
  41c908:	add    bl,BYTE PTR [edi]
  41c90a:	dec    edi
  41c90b:	jne    0x41c901
  41c90d:	pop    ds
  41c90e:	pusha  
  41c90f:	add    BYTE PTR [esi+edi*8],bl
  41c912:	pusha  
  41c913:	jno    0x41c905
  41c915:	adc    dl,BYTE PTR [ebx+0x72]
  41c918:	pop    es
  41c919:	scas   al,BYTE PTR es:[edi]
  41c91a:	cmp    eax,0x67
	...
  41c94b:	add    BYTE PTR [eax],al
  41c94d:	add    cl,dh
  41c94f:	add    BYTE PTR [edi+0x74],bl
  41c952:	int3   
  41c953:	ror    BYTE PTR [edx+0x0],0xb0
  41c957:	mov    ebx,0xcdd4745b
  41c95c:	dec    edi
  41c95d:	arpl   WORD PTR [edi-0x7cb7bf94],sp
  41c963:	jg     0x41c9b9
  41c965:	scas   ax,WORD PTR es:[edi]
  41c967:	shl    DWORD PTR [edx+0x72],cl
  41c96a:	(bad)  
  41c96b:	bound  eax,QWORD PTR [eax+0x6c]
  41c96e:	ret    0x507f
  41c971:	sub    BYTE PTR [si+0x2d],0x50
  41c976:	mov    bh,0x64
  41c978:	sub    eax,0x608fa250
  41c97d:	ins    DWORD PTR es:[edi],dx
  41c97e:	mov    cs,WORD PTR [ebp+ecx*2+0x4d6c6371]
  41c985:	jo     0x41c917
  41c987:	or     DWORD PTR [edi+0x76],0x46014086
  41c98e:	outs   dx,DWORD PTR ds:[esi]
  41c98f:	ds cs jno 0x41c9d9
  41c993:	inc    eax
  41c994:	xor    ebx,DWORD PTR [edi+0x46]
  41c997:	add    DWORD PTR [ecx],0x57055746
  41c99d:	xor    al,0x24
  41c99f:	cmp    BYTE PTR [edx+0x4d],bl
  41c9a2:	dec    esi
  41c9a3:	aaa    
  41c9a4:	dec    ebx
  41c9a5:	add    al,0x16
  41c9a7:	inc    ebx
  41c9a8:	push   ebx
  41c9a9:	push   esp
  41c9aa:	adc    esp,DWORD PTR [esi]
  41c9ac:	cmp    dl,BYTE PTR [ecx+0x2e]
  41c9af:	sub    al,0x39
  41c9b1:	pusha  
	...
  41c9e2:	add    BYTE PTR [eax],al
  41c9e4:	arpl   WORD PTR [ebx+0x3b],ax
  41c9e7:	push   esp
  41c9e8:	pop    ds
  41c9e9:	cmp    DWORD PTR cs:[edi+0x2],ebx
  41c9ed:	xor    DWORD PTR [esi],edx
  41c9ef:	push   edx
  41c9f0:	or     al,0x5
  41c9f2:	cmp    dh,BYTE PTR ds:0x433e5125
  41c9f8:	adc    DWORD PTR [edx+0x2b],eax
  41c9fb:	and    cl,BYTE PTR ss:[ebp-0x39]
  41c9ff:	xor    dh,dh
  41ca01:	and    dh,bl
  41ca03:	dec    esp
  41ca04:	mov    esp,0x9d280c37
  41ca09:	sub    DWORD PTR [eax],eax
  41ca0b:	push   esi
  41ca0c:	(bad)  
  41ca0d:	pop    ecx
  41ca0e:	test   al,0x60
  41ca10:	ret    0xd42a
  41ca13:	push   ebp
  41ca14:	mov    bh,0x36
  41ca16:	out    0x30,eax
  41ca18:	(bad)  
  41ca19:	and    edx,ebx
  41ca1b:	dec    esp
  41ca1c:	mov    WORD PTR [edi],?
  41ca1e:	int3   
  41ca1f:	daa    
  41ca20:	popf   
  41ca21:	push   ecx
  41ca22:	xchg   edi,eax
  41ca23:	inc    eax
  41ca24:	(bad)  
  41ca25:	sub    al,0xcc
  41ca27:	push   ebp
  41ca28:	(bad)  
  41ca29:	pop    ecx
  41ca2a:	call   0xb203:0x9a20975a
  41ca31:	sub    al,BYTE PTR [ebp-0x66db89b1]
  41ca37:	pop    esi
  41ca38:	xchg   edi,eax
  41ca39:	push   esi
  41ca3a:	jle    0x41ca99
  41ca3c:	ja     0x41ca9b
  41ca3e:	aad    0x54
  41ca40:	jno    0x41ca64
  41ca42:	fwait
  41ca43:	cmp    eax,0xaa005537
	...
  41ca78:	add    BYTE PTR [eax],al
  41ca7a:	sub    al,0x22
  41ca7c:	arpl   WORD PTR [edi+0x1c],di
  41ca7f:	pop    ecx
  41ca80:	push   ecx
  41ca81:	push   eax
  41ca82:	mov    esp,DWORD PTR [esi]
  41ca84:	jno    0x41ca6f
  41ca86:	mov    dl,0x29
  41ca88:	js     0x41cad4
  41ca8a:	pop    edi
  41ca8b:	jmp    0x41caf9
  41ca8d:	cmp    eax,0x2e5c0573
  41ca92:	andps  xmm5,XMMWORD PTR [ebp+0x47]
  41ca96:	pop    ebx
  41ca97:	xor    BYTE PTR [edi+0x3b],bl
  41ca9a:	dec    edx
  41ca9b:	pop    ecx
  41ca9c:	inc    esp
  41ca9d:	inc    eax
  41ca9e:	push   ebp
  41ca9f:	es popa 
  41caa1:	sbb    eax,0xc9773750
  41caa6:	adc    DWORD PTR ds:0x595f1a73,esi
  41caac:	push   ecx
  41caad:	add    DWORD PTR [esi+0x37],eax
  41cab0:	arpl   WORD PTR ds:0xf574260c,cx
  41cab6:	(bad)  
  41cab7:	sub    esp,DWORD PTR [ebp-0x6]
  41caba:	push   edx
  41cabb:	and    eax,0x5960fa61
  41cac0:	push   ecx
  41cac1:	sar    DWORD PTR [edi+0x37],1
  41cac4:	arpl   bp,ax
  41cac6:	xchg   ebp,eax
  41cac7:	es je  0x41caa7
  41caca:	xchg   DWORD PTR [ebx],ebp
  41cacc:	gs fcmovb st,st(1)
  41cacf:	jmp    0xca2d:0xf6c1f95c
  41cad6:	inc    ebp
  41cad7:	xor    al,0x0
  41cad9:	xchg   ebp,eax
  41cada:	lods   eax,DWORD PTR ds:[esi]
  41cadb:	sub    eax,0xbb5f
	...
  41cb10:	cmp    esp,DWORD PTR [ecx]
  41cb12:	push   ecx
  41cb13:	mov    WORD PTR [ecx+esi*1+0x67],cs
  41cb17:	(bad)
  41cb1b:	call   0x53b:0x9567292f
  41cb22:	pop    esp
  41cb23:	add    cl,cl
  41cb25:	in     eax,dx
  41cb26:	pop    esp
  41cb27:	jb     0x41cb10
  41cb29:	loope  0x41cb79
  41cb2b:	gs push esi
  41cb2d:	repnz outs dx,BYTE PTR fs:[esi]
  41cb30:	in     eax,0xf2
  41cb32:	pop    edx
  41cb33:	xor    DWORD PTR ds:0x6c355cb1,ebx
  41cb39:	repnz ins BYTE PTR es:[edi],dx
  41cb3b:	ins    BYTE PTR es:[edi],dx
  41cb3c:	and    edi,ebp
  41cb3e:	pusha  
  41cb3f:	add    BYTE PTR [esi+0x42],bh
  41cb42:	imul   esp,DWORD PTR [esi+0x14],0xffffffec
  41cb46:	pusha  
  41cb47:	inc    ebx
  41cb48:	push   edi
  41cb49:	icebp  
  41cb4a:	pop    ds
  41cb4b:	push   ebx
  41cb4c:	sbb    eax,0x1b7773ef
  41cb51:	repz pusha 
  41cb53:	add    BYTE PTR [esi-0x14],ch
  41cb56:	pop    esp
  41cb57:	jo     0x41cbbd
  41cb59:	std    
  41cb5a:	outs   dx,DWORD PTR ds:[esi]
  41cb5b:	add    BYTE PTR [edi-0x9],dl
  41cb5e:	imul   esp,DWORD PTR [ebp+0x5b],0xfffffff1
  41cb62:	sub    eax,0xffec6265
  41cb67:	jb     0x41cbdc
  41cb69:	std    
  41cb6a:	pusha  
  41cb6b:	jae    0x41cb89
  41cb6d:	loope  0x41cbcb
  41cb6f:	je     0x41cbab
  41cb71:	lock fs je 0x41cb75
	...
  41cba5:	add    BYTE PTR [edi],dl
  41cba7:	lock sub eax,0xffea2c69
  41cbad:	pop    ebx
  41cbae:	(bad)  
  41cbaf:	in     eax,dx
  41cbb0:	pop    esp
  41cbb1:	jo     0x41cba8
  41cbb3:	loope  0x41cc26
  41cbb5:	dec    BYTE PTR gs:[eax+0x61]
  41cbb9:	popa   
  41cbba:	fimul  DWORD PTR [esi+0x54]
  41cbbd:	push   eax
  41cbbe:	or     dl,BYTE PTR [eax+0x4b]
  41cbc1:	inc    esi
  41cbc2:	neg    BYTE PTR [ebx+0x3d]
  41cbc5:	push   edx
  41cbc6:	mov    bh,0x58
  41cbc8:	dec    esp
  41cbc9:	gs jmp 0x41cbc0
  41cbcc:	push   edx
  41cbcd:	popa   
  41cbce:	arpl   WORD PTR [eax+ebp*1+0x36389a00],bx
  41cbd5:	je     0x41cb59
  41cbd7:	xchg   edx,eax
  41cbd8:	sub    eax,0x29324250
  41cbdd:	add    BYTE PTR [edi],bl
  41cbdf:	lea    esi,ds:0x3385275f
  41cbe5:	add    BYTE PTR [ebx],dh
  41cbe7:	dec    ebp
  41cbe8:	xor    esi,DWORD PTR [ecx+0x34]
  41cbeb:	inc    edi
  41cbec:	ss fs arpl si,sp
  41cbf0:	cs jno 0x41cc2a
  41cbf3:	sbb    BYTE PTR [ecx],ah
  41cbf5:	imul   edi,DWORD PTR [esi],0xffffffae
  41cbf8:	push   esi
  41cbf9:	jno    0x41cc01
  41cbfb:	cld    
  41cbfc:	push   ecx
  41cbfd:	pop    edi
  41cbfe:	push   es
  41cbff:	dec    ecx
  41cc00:	add    al,0x52
  41cc02:	push   es
  41cc03:	stc    
  41cc04:	cs je  0x41cc05
  41cc07:	jmp    0x423e34
	...
  41cc3c:	push   es
  41cc3d:	or     edi,DWORD PTR [eax]
  41cc3f:	ins    DWORD PTR es:[edi],dx
  41cc40:	icebp  
  41cc41:	adc    al,0x4
  41cc43:	push   eax
  41cc44:	cld    
  41cc45:	sbb    edi,DWORD PTR [eax]
  41cc47:	dec    esi
  41cc48:	out    dx,al
  41cc49:	adc    BYTE PTR [esi],ah
  41cc4b:	arpl   cx,dx
  41cc4d:	scas   al,BYTE PTR es:[edi]
  41cc4e:	inc    edi
  41cc4f:	push   ecx
  41cc50:	mov    bl,0xbc
  41cc52:	xor    BYTE PTR [esp+edi*4+0xb],dh
  41cc56:	das    
  41cc57:	ins    BYTE PTR es:[edi],dx
  41cc58:	arpl   WORD PTR [ebx+0x30],di
  41cc5b:	data16 mov bh,0xcf
  41cc5e:	and    dh,BYTE PTR [edx-0x42]
  41cc61:	jb     0x41ccb1
  41cc63:	pop    edi
  41cc64:	mov    cl,0xd2
  41cc66:	sub    ch,BYTE PTR [esi-0x7d]
  41cc69:	sahf   
  41cc6a:	xor    esp,DWORD PTR [edi-0x78]
  41cc6d:	jl     0x41cca9
  41cc6f:	ins    BYTE PTR es:[edi],dx
  41cc70:	arpl   WORD PTR [edx-0x3a5ece0c],dx
  41cc76:	xor    eax,0x97058f46
  41cc7b:	icebp  
  41cc7c:	test   DWORD PTR [edi],esp
  41cc7e:	nop
  41cc7f:	add    esp,DWORD PTR [ebp+0x772aba41]
  41cc85:	and    bl,BYTE PTR [edx-0x6fd8820f]
  41cc8b:	add    edi,DWORD PTR [edi]
  41cc8d:	inc    edi
  41cc8e:	test   BYTE PTR [edi],dh
  41cc90:	pop    ds
  41cc91:	xor    eax,DWORD PTR [eax-0x68fabfc7]
  41cc97:	and    dl,BYTE PTR [edx+0x34]
  41cc9a:	xor    DWORD PTR ds:[ecx],esi
  41cc9d:	and    edi,esp
  41cc9f:	push   esi
	...
  41ccd0:	add    BYTE PTR [eax],al
  41ccd2:	xor    DWORD PTR [ecx],ebp
  41ccd4:	out    0x56,eax
  41ccd6:	xor    ah,BYTE PTR [edx]
  41ccd8:	pop    ecx
  41ccd9:	push   edx
  41ccda:	add    al,0x2a
  41ccdc:	dec    esp
  41ccdd:	add    al,0x31
  41ccdf:	sub    BYTE PTR [esi+0x38],cl
  41cce2:	pop    ds
  41cce3:	cmp    DWORD PTR cs:[edi],esp
  41cce6:	add    dh,BYTE PTR [ecx]
  41cce8:	ds ss or al,0x5
  41ccec:	aaa    
  41cced:	xor    ecx,esi
  41ccef:	xor    bh,ah
  41ccf1:	push   esp
  41ccf2:	push   es
  41ccf3:	pop    ds
  41ccf4:	sbb    edi,DWORD PTR [ecx]
  41ccf6:	or     al,0x33
  41ccf8:	add    al,0x60
  41ccfa:	adc    ch,BYTE PTR [eax]
  41ccfc:	cld    
  41ccfd:	aaa    
  41ccfe:	retf   
  41ccff:	in     eax,0x18
  41cd01:	sub    ecx,ebp
  41cd03:	and    cl,bh
  41cd05:	jecxz  0x41ccb7
  41cd07:	and    BYTE PTR [edx],cl
  41cd09:	sub    al,0xb5
  41cd0b:	shl    DWORD PTR es:[eax],cl
  41cd0e:	(bad)  
  41cd0f:	sub    al,0xc4
  41cd11:	xor    al,0x97
  41cd13:	dec    esi
  41cd14:	int3   
  41cd15:	and    eax,0x39c033a7
  41cd1a:	rcr    BYTE PTR [ecx-0x56],0x30
  41cd1e:	lea    esp,[edi]
  41cd20:	les    esp,FWORD PTR [edi+ecx*4]
  41cd23:	sub    al,0x0
  41cd25:	(bad)  
  41cd26:	push   edx
  41cd27:	xor    al,0x0
  41cd29:	call   0x5136:0x8c76333d
  41cd30:	ja     0x41cccb
  41cd32:	cmp    eax,0xbd4605
	...
  41cd67:	add    BYTE PTR [eax-0x6d61bf1b],dl
  41cd6d:	push   ecx
  41cd6e:	push   edx
  41cd6f:	mov    dh,0x2c
  41cd71:	add    eax,0x44309546
  41cd76:	dec    ebp
  41cd77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd78:	pusha  
  41cd79:	out    0x6f,eax
  41cd7b:	jnp    0x41cdf7
  41cd7d:	add    eax,0x2871395c
  41cd82:	push   ax
  41cd84:	jae    0x41cda8
  41cd86:	jno    0x41cd71
  41cd88:	loope  0x41cdc4
  41cd8a:	cld    
  41cd8b:	(bad)  
  41cd8d:	je     0x41cd77
  41cd8f:	push   eax
  41cd90:	push   eax
  41cd91:	push   0x315b51fd
  41cd96:	jo     0x41cd8b
  41cd98:	jge    0x41cd83
  41cd9a:	inc    DWORD PTR [eax+0x4b]
  41cd9d:	xor    DWORD PTR [eax+0x1a],esi
  41cda0:	jns    0x41cd8b
  41cda2:	sub    al,0xe9
  41cda4:	xor    DWORD PTR ds:[eax-0x2d],esi
  41cda8:	jge    0x41cd93
  41cdaa:	(bad)  
  41cdab:	std    
  41cdac:	xor    BYTE PTR [edx],ah
  41cdae:	jb     0x41cdb8
  41cdb0:	xor    BYTE PTR [bx+0xf],bl
  41cdb4:	mov    esp,edi
  41cdb6:	arpl   WORD PTR [eax],cx
  41cdb8:	mov    eax,DWORD PTR ds:0x1f741a5d
  41cdbe:	je     0x41cd9e
  41cdc0:	xchg   DWORD PTR [ebx],esi
  41cdc2:	arpl   WORD PTR [ebp-0x249cca5b],di
  41cdc8:	xchg   ebp,esp
  41cdca:	push   eax
  41cdcb:	mov    esi,0x0
	...
  41cdfc:	add    BYTE PTR [eax],al
  41cdfe:	jle    0x41ce31
  41ce00:	jne    0x41ce02
  41ce02:	sub    esi,esp
  41ce04:	pusha  
  41ce05:	add    dh,al
  41ce07:	loopne 0x41ce77
  41ce09:	je     0x41ce65
  41ce0b:	dec    ebp
  41ce0c:	gs jb  0x41ce2e
  41ce0f:	jecxz  0x41ce84
  41ce11:	outs   dx,DWORD PTR ds:[esi]
  41ce12:	fdivr  st,st(0)
  41ce14:	cs add dh,al
  41ce17:	loopne 0x41ce87
  41ce19:	je     0x41ce35
  41ce1b:	dec    ecx
  41ce1c:	outs   dx,BYTE PTR ds:[esi]
  41ce1d:	jae    0x41cded
  41ce1f:	loopne 0x41ce8c
  41ce21:	ins    BYTE PTR es:[edi],dx
  41ce22:	stos   BYTE PTR es:[edi],al
  41ce23:	push   ecx
  41ce24:	pop    ebp
  41ce25:	je     0x41ce19
  41ce27:	add    DWORD PTR [ebx+0x70],ecx
  41ce2a:	fcomip st,st(3)
  41ce2c:	pop    esp
  41ce2d:	add    cl,BYTE PTR cs:[esi+0x49]
  41ce31:	dec    esp
  41ce32:	es repnz addr16 gs es cmc 
  41ce38:	pop    ebx
  41ce39:	outs   dx,DWORD PTR ds:[esi]
  41ce3a:	or     ch,ah
  41ce3c:	ins    DWORD PTR es:[edi],dx
  41ce3d:	pop    esp
  41ce3e:	sbb    esi,esp
  41ce40:	push   0x63e72b6d
  41ce45:	add    BYTE PTR [ebp-0x18],cl
  41ce48:	outs   dx,BYTE PTR ds:[esi]
  41ce49:	gs sbb al,0xfd
  41ce4c:	outs   dx,DWORD PTR ds:[esi]
  41ce4d:	jae    0x41ce97
  41ce4f:	out    dx,eax
  41ce50:	outs   dx,BYTE PTR ds:[esi]
  41ce51:	cs push 0x36006de8
  41ce57:	inc    eax
  41ce58:	pop    edi
  41ce59:	cmp    BYTE PTR gs:[eax+0x54],cl
  41ce5d:	add    BYTE PTR [ecx],ch
  41ce5f:	out    0x65,al
  41ce61:	je     0x41ce63
	...
  41ce93:	add    BYTE PTR [ebp-0x16],bl
  41ce96:	jno    0x41cefd
  41ce98:	jbe    0x41cee4
  41ce9a:	pop    edi
  41ce9b:	gs js  0x41cee0
  41ce9e:	push   esp
  41ce9f:	add    BYTE PTR [edi+0x57],ah
  41cea2:	push   ecx
  41cea3:	add    cl,bh
  41cea5:	inc    ebx
  41cea6:	inc    esi
  41cea7:	push   esp
  41cea8:	in     eax,dx
  41cea9:	dec    ecx
  41ceaa:	push   edx
  41ceab:	inc    ebp
  41ceac:	arpl   WORD PTR [edx+0x42],di
  41ceaf:	ins    BYTE PTR es:[edi],dx
  41ceb0:	ret    0x32cf
  41ceb3:	arpl   WORD PTR [eax-0x6c88aa96],dx
  41ceb9:	leave  
  41ceba:	dec    ebp
  41cebb:	sbb    DWORD PTR [bp+si+0x413a],0x3243ada1
  41cec4:	mov    al,ds:0x3b2b43ce
  41cec9:	into   
  41ceca:	cld    
  41cecb:	xor    edi,DWORD PTR [esi]
  41cecd:	rol    BYTE PTR [edi+edi*1-0x60],cl
  41ced1:	jno    0x41cf12
  41ced3:	inc    ecx
  41ced4:	and    eax,0x9233f071
  41ced9:	pop    ebp
  41ceda:	repz xor esp,DWORD PTR [esi]
  41cedd:	jo     0x41ced5
  41cedf:	inc    ebp
  41cee0:	mov    WORD PTR [ebx-0xa],?
  41cee3:	jp     0x41cf48
  41cee5:	out    dx,eax
  41cee6:	dec    edx
  41cee7:	inc    esi
  41cee8:	psubq  mm0,QWORD PTR [eax+0x52]
  41ceec:	es cli 
  41ceee:	ds ins BYTE PTR es:[edi],dx
  41cef0:	inc    edx
  41cef1:	dec    edi
  41cef2:	das    
  41cef3:	arpl   WORD PTR [eax],dx
  41cef5:	jmp    0x0:0x7757
	...
  41cf28:	add    BYTE PTR [eax],al
  41cf2a:	adc    ecx,DWORD PTR [ecx+0x50]
  41cf2d:	add    DWORD PTR [bp+si],ebx
  41cf30:	aaa    
  41cf31:	aaa    
  41cf32:	push   ds
  41cf33:	(bad)  
  41cf35:	xor    dh,BYTE PTR [esi]
  41cf37:	sar    dl,1
  41cf39:	sub    bl,BYTE PTR [esi]
  41cf3b:	int    0xef
  41cf3d:	xor    DWORD PTR [esi],edi
  41cf3f:	shl    ah,cl
  41cf41:	xor    ch,BYTE PTR [ecx+esi*2]
  41cf44:	aas    
  41cf45:	inc    ecx
  41cf46:	xchg   esp,eax
  41cf47:	(bad)
  41cf4a:	pop    esi
  41cf4c:	out    dx,eax
  41cf4d:	xor    ah,BYTE PTR [ebp-0x6fcb0e8a]
  41cf53:	jo     0x41cf95
  41cf55:	jnp    0x41cfba
  41cf57:	add    eax,0x2ab22ade
  41cf5c:	lds    esi,FWORD PTR [edi]
  41cf5e:	mov    bl,0x38
  41cf60:	fnstenv ds:0x2dbfe3b2
  41cf66:	test   BYTE PTR ds:0x2a922abe,al
  41cf6c:	lds    esi,FWORD PTR [edi]
  41cf6e:	xchg   ebx,eax
  41cf6f:	jecxz  0x41cf30
  41cf71:	sub    eax,0x57a5057c
  41cf76:	xchg   ebx,eax
  41cf77:	pop    ebx
  41cf78:	xchg   esi,eax
  41cf79:	cmp    dl,BYTE PTR [esp+ebp*1+0x2b3d3184]
  41cf80:	fwait
  41cf81:	xor    esp,DWORD PTR [ebx+0x4b]
  41cf84:	mov    bl,0x53
  41cf86:	xor    eax,0x3e228024
  41cf8b:	sub    bh,BYTE PTR [ecx-0x13]
	...
  41cfbe:	add    BYTE PTR [eax],al
  41cfc0:	cmp    eax,0x315fe728
  41cfc5:	sbb    eax,0x584e2d80
  41cfca:	push   esi
  41cfcb:	es das 
  41cfcd:	jecxz  0x41d018
  41cfcf:	sub    eax,0x31450538
  41cfd4:	xor    bh,al
  41cfd6:	cld    
  41cfd7:	daa    
  41cfd8:	mov    edi,db4
  41cfdb:	dec    ebp
  41cfdc:	xor    bl,BYTE PTR [eax+0x1e]
  41cfdf:	dec    ebx
  41cfe0:	std    
  41cfe1:	sbb    eax,0x5815043b
  41cfe6:	sbb    bl,BYTE PTR [ebp+0x12]
  41cfe9:	sbb    eax,0x23ff381c
  41cfee:	push   ss
  41cfef:	arpl   WORD PTR cs:[ebx+0x3a],ax
  41cff3:	push   ecx
  41cff4:	and    DWORD PTR [esi],esp
  41cff6:	sbb    ah,BYTE PTR [edi]
  41cff8:	xchg   ebp,eax
  41cff9:	stc    
  41cffa:	and    eax,0xe26c048
  41cfff:	sub    al,al
  41d001:	inc    edi
  41d002:	add    ah,bh
  41d004:	jle    0x41d031
  41d006:	arpl   bx,di
  41d008:	pusha  
  41d009:	push   esp
  41d00a:	inc    ebx
  41d00b:	stos   BYTE PTR es:[edi],al
  41d00c:	test   eax,0x8fac4359
  41d011:	dec    ebx
  41d012:	jb     0x41cfe0
  41d014:	jge    0x41d060
  41d016:	je     0x41cfdc
  41d018:	dec    ebp
  41d019:	add    eax,0xe411b250
  41d01e:	pop    esp
  41d01f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d020:	inc    ebp
  41d021:	cmp    DWORD PTR [edi-0x39],eax
	...
  41d054:	add    BYTE PTR [eax],al
  41d056:	dec    esp
  41d057:	es jb  0x41d019
  41d05a:	inc    ecx
  41d05b:	and    DWORD PTR [ecx-0x74],ecx
  41d05e:	cmp    DWORD PTR [esp+ebp*2-0x72],edx
  41d062:	xor    al,0x5
  41d064:	push   eax
  41d065:	mov    ds:0xa85ce3f1,al
  41d06a:	xchg   ebp,eax
  41d06b:	cmp    DWORD PTR [eax-0x74],ebp
  41d06e:	xchg   BYTE PTR [ecx],bh
  41d070:	mov    al,BYTE PTR [bx+di+0x6339]
  41d075:	jmp    0xb8710caa
  41d07a:	adc    ecx,DWORD PTR [ecx+0x52]
  41d07d:	inc    esi
  41d07e:	and    esp,DWORD PTR [esi]
  41d080:	popa   
  41d081:	pop    ebx
  41d082:	outs   dx,BYTE PTR ds:[esi]
  41d083:	xor    eax,0x3c10e974
  41d088:	das    
  41d089:	sbb    BYTE PTR [eax],bh
  41d08b:	dec    ebx
  41d08c:	jb     0x41d0da
  41d08e:	inc    edx
  41d08f:	push   esp
  41d090:	ins    BYTE PTR es:[edi],dx
  41d091:	dec    esi
  41d092:	push   ebx
  41d093:	add    eax,0x560e900
  41d098:	add    cl,ch
  41d09a:	pusha  
  41d09b:	add    eax,0x560e900
  41d0a0:	add    cl,ch
  41d0a2:	pusha  
  41d0a3:	add    eax,0x560e900
  41d0a8:	add    cl,ch
  41d0aa:	pusha  
  41d0ab:	add    eax,0x64a0000
  41d0b0:	add    BYTE PTR [eax],al
  41d0b2:	cmp    al,BYTE PTR [esi]
  41d0b4:	add    BYTE PTR [eax],al
  41d0b6:	dec    ecx
  41d0b7:	stc    
  41d0b8:	imul   ebp,DWORD PTR [ecx+0x0],0x0
	...
  41d0ec:	ss in  eax,0x2e
  41d0ef:	cs es jmp 0x696b:0xf909006b
  41d0f8:	push   es
  41d0f9:	in     eax,0x2e
  41d0fb:	pop    edi
  41d0fc:	(bad)  
  41d0fe:	pusha  
  41d0ff:	outs   dx,BYTE PTR ds:[esi]
  41d100:	or     bh,bl
  41d102:	ins    BYTE PTR es:[edi],dx
  41d103:	ins    BYTE PTR es:[edi],dx
  41d104:	xor    esp,edx
  41d106:	pusha  
  41d107:	xor    ebp,ebp
  41d109:	jmp    0x72ff:0xe4b96f6b
  41d110:	fucomi st,st(1)
  41d112:	fs je  0x41d0fc
  41d115:	mov    edx,0xe4c8705c
  41d11a:	outs   dx,DWORD PTR ds:[esi]
  41d11b:	popa   
  41d11c:	clc    
  41d11d:	in     al,0xff
  41d11f:	jb     0x41d17c
  41d121:	jmp    0x735c:0xbae77464
  41d128:	inc    esi
  41d129:	in     eax,0x6f
  41d12b:	add    BYTE PTR [ecx],bh
  41d12d:	stc    
  41d12e:	imul   ebp,DWORD PTR [ecx+0x16],0xffffffe4
  41d132:	cs pop edi
  41d134:	sbb    esi,ebx
  41d136:	imul   esi,DWORD PTR [ebp+0x1f],0xffffffdf
  41d13a:	pop    edx
  41d13b:	bound  esi,QWORD PTR [ebx]
  41d13d:	cmc    
  41d13e:	pusha  
  41d13f:	jae    0x41d0cb
  41d141:	cli    
  41d142:	ins    BYTE PTR es:[edi],dx
  41d143:	ins    BYTE PTR es:[edi],dx
  41d144:	xor    esi,ebp
  41d146:	pusha  
  41d147:	xor    ebp,DWORD PTR [ebp-0x16]
  41d14a:	push   0x6c
  41d14c:	aaa    
  41d14d:	fsubr  QWORD PTR [ebp+0x5f]
	...
  41d180:	add    BYTE PTR [eax],al
  41d182:	push   0x7a626add
  41d187:	add    eax,0x16636f69
  41d18c:	xor    eax,0x3005cf6f
  41d191:	arpl   WORD PTR [eax-0x4093e228],dx
  41d197:	sahf   
  41d198:	outs   dx,DWORD PTR ss:[esi]
  41d19a:	mov    bh,0x5
  41d19c:	xor    BYTE PTR [ebx+0x70],ah
  41d19f:	jmp    FWORD PTR [eax]
  41d1a1:	jo     0x41d161
  41d1a3:	fadd   DWORD PTR [ecx]
  41d1a5:	jno    0x41d159
  41d1a7:	ret    0x742c
  41d1aa:	mov    esi,0x8f61590b
  41d1af:	outs   dx,DWORD PTR ds:[esi]
  41d1b0:	arpl   WORD PTR ss:[ebx+0x6b],sp
  41d1b4:	xor    al,0x6c
  41d1b6:	jp     0x41d232
  41d1b8:	and    BYTE PTR [ecx],dh
  41d1ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1bb:	outs   dx,BYTE PTR ds:[esi]
  41d1bc:	xor    esp,DWORD PTR [ebx+0x73]
  41d1bf:	mov    ebp,0x8b636333
  41d1c4:	xor    al,0x6c
  41d1c6:	jp     0x41d162
  41d1c8:	and    BYTE PTR [ecx],dh
  41d1ca:	test   BYTE PTR [ebx-0x61ac9cd3],cl
  41d1d0:	outs   dx,DWORD PTR ss:[esi]
  41d1d2:	inc    edi
  41d1d3:	xchg   ebp,eax
  41d1d4:	sub    eax,0x268f9063
  41d1d9:	ins    DWORD PTR es:[edi],dx
  41d1da:	aaa    
  41d1db:	xor    DWORD PTR [eax],ebp
  41d1dd:	outs   dx,BYTE PTR ds:[esi]
  41d1de:	sbb    al,0x7c
  41d1e0:	cmp    al,0x74
  41d1e2:	ds dec ebx
  41d1e4:	add    al,0x71
	...
  41d216:	add    BYTE PTR [eax],al
  41d218:	xor    al,BYTE PTR [edx+0x29]
  41d21b:	je     0x41d25b
  41d21d:	or     edx,DWORD PTR [edi+0x61]
  41d220:	or     al,0xf2
  41d222:	sub    al,0x6b
  41d224:	add    eax,0xfc6c25e7
  41d229:	cmp    eax,DWORD PTR [eax+eax*1]
  41d22c:	arpl   WORD PTR [esi-0x619cffff],bx
  41d232:	add    DWORD PTR [eax],eax
  41d234:	arpl   WORD PTR ds:0x56303e7,ax
  41d23a:	out    0x3,eax
  41d23c:	arpl   WORD PTR ds:0x56303e7,ax
  41d242:	out    0x3,eax
  41d244:	arpl   WORD PTR ds:0x56303e7,ax
  41d24a:	out    0x3,eax
  41d24c:	arpl   WORD PTR ds:0x1ec528f9,si
  41d252:	sti    
  41d253:	push   ds
  41d254:	mov    dl,0xdf
  41d256:	iret   
  41d257:	sub    esp,eax
  41d259:	add    eax,0x27b635b7
  41d25e:	shl    BYTE PTR [edi],0x80
  41d261:	add    eax,0x2ab134a0
  41d266:	shl    DWORD PTR [edx],cl
  41d268:	xchg   edi,eax
  41d269:	push   ds
  41d26a:	mov    ch,0x1e
  41d26c:	arpl   WORD PTR [ebp-0x38],dx
  41d26f:	das    
  41d270:	mov    eax,DWORD PTR ds:0x1d6f2297
  41d276:	mov    ebx,0x842da028
  41d27b:	add    eax,DWORD PTR [eax]
	...
  41d2ad:	add    BYTE PTR [edx+0x1e],dh
  41d2b0:	mov    gs,WORD PTR [ecx]
  41d2b2:	dec    esi
  41d2b3:	pop    ds
  41d2b4:	call   0x572a:0x933653e9
  41d2bb:	sub    ah,bh
  41d2bd:	xor    al,0x3c
  41d2bf:	sub    BYTE PTR [ebp-0x42cbb2d8],al
  41d2c5:	das    
  41d2c6:	cmp    edi,DWORD PTR [ecx]
  41d2c8:	out    0x34,eax
  41d2ca:	inc    esp
  41d2cb:	sub    BYTE PTR [ebp+0x29],cl
  41d2ce:	xor    eax,0x10ea1934
  41d2d3:	sub    eax,0x1e120453
  41d2d8:	dec    esi
  41d2d9:	sub    bh,dh
  41d2db:	push   ds
  41d2dc:	cmp    dh,ch
  41d2de:	cmp    DWORD PTR ss:[eax],eax
  41d2e1:	xor    DWORD PTR [ebx],esi
  41d2e3:	add    eax,0x53ffb21
  41d2e8:	and    ebx,ebx
  41d2ea:	dec    esp
  41d2eb:	add    eax,0x545db21
  41d2f0:	push   ecx
  41d2f1:	sub    al,0xab
  41d2f3:	inc    edx
  41d2f4:	inc    ecx
  41d2f5:	xor    eax,0xfa6d273f
  41d2fa:	jl     0x41d31b
  41d2fc:	pop    edi
  41d2fd:	or     al,0x64
  41d2ff:	loope  0x41d320
  41d301:	or     al,0x89
  41d303:	and    al,0x72
  41d305:	lock jo 0x41d341
  41d308:	arpl   bp,cx
  41d30a:	popf   
  41d30b:	xor    al,0x63
  41d30d:	fstp   TBYTE PTR [edx+0x4e]
  41d310:	imul   ecx,esp,0x0
	...
  41d343:	add    BYTE PTR [edi+ecx*1],al
  41d346:	arpl   WORD PTR [edi-0x4688ccc1],di
  41d34c:	cmp    al,0x22
  41d34e:	fs cdq 
  41d350:	inc    ecx
  41d351:	xor    al,0x71
  41d353:	mov    esi,0x964334b
  41d358:	mov    eax,ds:0xb44d53
  41d35d:	sbb    al,0x6d
  41d35f:	mov    ds:0x8e6d218b,eax
  41d364:	mov    DWORD PTR [edi],ebx
  41d366:	jno    0x41d351
  41d368:	and    ah,BYTE PTR [esi]
  41d36a:	jb     0x41d2f8
  41d36c:	and    BYTE PTR [eax],0x78
  41d36f:	jmp    0x73af0da0
  41d374:	mov    DWORD PTR [ecx],esp
  41d376:	ins    BYTE PTR es:[edi],dx
  41d377:	mov    BYTE PTR [edi+eax*2],cl
  41d37a:	addr16 pop ebx
  41d37c:	and    BYTE PTR [edi],0x6d
  41d37f:	popa   
  41d380:	or     eax,DWORD PTR ds:0x397d4651
  41d386:	jne    0x41d3d0
  41d388:	push   ecx
  41d389:	and    bl,BYTE PTR [eax+eax*1+0x57]
  41d38d:	out    0x79,al
  41d38f:	imul   edx,DWORD PTR [esi],0x67005cdd
  41d395:	pushf  
  41d396:	sub    al,BYTE PTR [eax]
  41d398:	sbb    al,0xf5
  41d39a:	outs   dx,DWORD PTR ds:[esi]
  41d39b:	cmp    dl,BYTE PTR [ebp+0x4e67fda7]
  41d3a1:	cmc    
  41d3a2:	outs   dx,DWORD PTR ds:[esi]
  41d3a3:	cmp    ah,BYTE PTR ds:0x67fda7
	...
  41d3d9:	add    BYTE PTR [esi-0xb],ch
  41d3dc:	outs   dx,DWORD PTR ds:[esi]
  41d3dd:	jae    0x41d3ff
  41d3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3e0:	sub    al,0x0
  41d3e2:	pop    esp
  41d3e3:	cmc    
  41d3e4:	outs   dx,DWORD PTR ds:[esi]
  41d3e5:	cs dec edx
  41d3e7:	adc    BYTE PTR [ebp+0x72],ah
  41d3ea:	pop    edi
  41d3eb:	out    dx,eax
  41d3ec:	push   ebx
  41d3ed:	push   eax
  41d3ee:	or     ecx,esp
  41d3f0:	jae    0x41d457
  41d3f2:	or     DWORD PTR [eax+0x23e6161],ebp
  41d3f8:	dec    edi
  41d3f9:	sub    edi,DWORD PTR gs:0xe5316e6b
  41d400:	je     0x41d402
  41d402:	out    0x3c,al
  41d404:	imul   edi,DWORD PTR [edx+0x23],0xffffffe6
  41d408:	imul   esp,DWORD PTR [ecx-0x1a],0x52
  41d40c:	popa   
  41d40d:	popa   
  41d40e:	mov    bh,0xe6
  41d410:	ins    DWORD PTR es:[edi],dx
  41d411:	imul   ebx,edi,0xfffffff0
  41d414:	pop    ebx
  41d415:	add    BYTE PTR [esi+eiz*8],cl
  41d418:	push   0x63
  41d41a:	loope  0x41d41d
  41d41c:	pop    esp
  41d41d:	inc    esi
  41d41e:	mul    dh
  41d420:	pop    esi
  41d421:	imul   esp,esi,0x43
  41d424:	jb     0x41d495
  41d426:	cmp    eax,0xe67260f3
  41d42b:	add    DWORD PTR [ecx+0x6f],ecx
  41d42e:	inc    eax
  41d42f:	loopne 0x41d49c
  41d431:	ins    BYTE PTR es:[edi],dx
  41d432:	sbb    ecx,DWORD PTR [ecx]
  41d434:	pop    esp
  41d435:	dec    ebp
  41d436:	arpl   WORD PTR [edi+0x3a],ax
  41d439:	addr16 pop es
  41d43b:	lock and bl,BYTE PTR [eax+eax*1+0x0]
	...
  41d470:	xor    ebp,edx
  41d472:	and    al,0x66
  41d474:	cli    
  41d475:	aas    
  41d476:	pop    ds
  41d477:	jno    0x41d498
  41d479:	pushf  
  41d47a:	push   edx
  41d47b:	ins    DWORD PTR es:[edi],dx
  41d47c:	std    
  41d47d:	imul   DWORD PTR [edi+ebx*2]
  41d480:	icebp  
  41d481:	add    BYTE PTR [eax+0x4c],bl
  41d484:	dec    BYTE PTR [eax]
  41d486:	and    DWORD PTR [eax-0x5b],ebp
  41d489:	jmp    0x4434:0xea20053
  41d490:	mov    edx,0xb44c01b0
  41d495:	jmp    DWORD PTR [edx]
  41d497:	ins    BYTE PTR es:[edi],dx
  41d498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d499:	add    eax,0xabc10032
  41d49e:	imul   edi,DWORD PTR es:[esi+0x75692fbd],0x637424c2
  41d4a9:	outs   dx,DWORD PTR ds:[esi]
  41d4aa:	sub    al,0x74
  41d4ac:	jle    0x41d513
  41d4ae:	and    esp,DWORD PTR [esi+0x7c]
  41d4b1:	adc    al,0x53
  41d4b3:	inc    esi
  41d4b4:	mov    bl,0x9e
  41d4b6:	inc    esi
  41d4b7:	fs mov al,ah
  41d4ba:	add    DWORD PTR [esi-0x7e],eax
  41d4bd:	je     0x41d4e5
  41d4bf:	jb     0x41d53b
  41d4c1:	mov    ah,BYTE PTR [eax]
  41d4c3:	jno    0x41d4fa
  41d4c5:	and    BYTE PTR [esp+esi*2],0x63
  41d4c9:	imul   ebp,DWORD PTR [esi+ebp*2],0x1d
  41d4cd:	jb     0x41d520
  41d4cf:	add    BYTE PTR [eax-0x6b],dl
  41d4d2:	sub    eax,0x63
	...
  41d503:	add    BYTE PTR [eax],al
  41d505:	add    BYTE PTR [eax-0x44],dl
  41d508:	sbb    eax,0x455f6362
  41d50d:	push   ecx
  41d50e:	sub    ah,BYTE PTR [edx+0x55]
  41d511:	jns    0x41d585
  41d513:	add    eax,0x41744118
  41d518:	push   ss
  41d519:	lock dec ebp
  41d51b:	fisub  DWORD PTR [edi]
  41d51d:	sti    
  41d51e:	push   ecx
  41d51f:	inc    edi
  41d520:	cld    
  41d521:	repnz cmp eax,0x4ce6f921
  41d527:	inc    esi
  41d528:	push   ebx
  41d52a:	dec    ecx
  41d52b:	cmc    
  41d52c:	idiv   bl
  41d52e:	inc    esp
  41d52f:	inc    esi
  41d530:	and    eax,DWORD PTR [edx+0x32]
  41d533:	imul   DWORD PTR [esi+edi*1]
  41d536:	das    
  41d537:	sub    bh,BYTE PTR [ebx]
  41d539:	dec    ebx
  41d53a:	int    0x55
  41d53c:	sbb    DWORD PTR ds:0x320458c2,esp
  41d542:	aad    0x22
  41d544:	stc    
  41d545:	lock xchg edx,eax
  41d547:	add    eax,0x33b11efa
  41d54c:	or     al,0x32
  41d54e:	mov    dl,0xdb
  41d550:	out    dx,al
  41d551:	es mov edi,0x8f3dc305
  41d557:	push   ebp
  41d558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d559:	push   ds
  41d55a:	xchg   edi,eax
  41d55b:	xor    esp,ecx
  41d55d:	xor    DWORD PTR [ebx+0x42],esp
  41d560:	mov    edx,0xf927874f
  41d565:	in     eax,0x80
  41d567:	es mov bl,0x3
	...
  41d59a:	add    BYTE PTR [eax],al
  41d59c:	lods   al,BYTE PTR ds:[esi]
  41d59d:	inc    ecx
  41d59e:	enter  0x942f,0xdb
  41d5a2:	ret    0x7722
  41d5a5:	add    eax,0x31723ec3
  41d5aa:	call   0x2742:0xb3314524
  41d5b1:	inc    ebx
  41d5b2:	mov    bl,0x53
  41d5b4:	arpl   WORD PTR [esi],di
  41d5b6:	xchg   ebp,eax
  41d5b7:	das    
  41d5b8:	inc    eax
  41d5b9:	aaa    
  41d5ba:	lea    ebx,[esi]
  41d5bc:	aaa    
  41d5bd:	in     eax,0xff
  41d5bf:	stos   DWORD PTR es:[edi],eax
  41d5c0:	js     0x41d5f7
  41d5c2:	ins    BYTE PTR es:[edi],dx
  41d5c3:	jle    0x41d637
  41d5c5:	sub    BYTE PTR [edx-0x17],dh
  41d5c8:	pop    ss
  41d5c9:	and    al,0x6e
  41d5cb:	push   eax
  41d5cc:	inc    ebp
  41d5cd:	sub    BYTE PTR [edx+ebp*1+0x40],dh
  41d5d1:	es push 0x63372244
  41d5d7:	dec    ebp
  41d5d8:	sbb    esi,DWORD PTR fs:[eax+edx*2+0x40]
  41d5dd:	sbb    DWORD PTR [ecx-0x17],esi
  41d5e0:	sbb    eax,0x2c202056
  41d5e5:	in     eax,0x45
  41d5e7:	cmp    eax,0x84fe50f
  41d5ec:	xchg   edx,eax
  41d5ed:	xor    al,0x75
  41d5ef:	push   es
  41d5f0:	xchg   ecx,eax
  41d5f1:	and    DWORD PTR [ecx-0x17],esi
  41d5f4:	mov    WORD PTR [ebp+0x3f],ss
  41d5f7:	sbb    DWORD PTR [eax+0x70e91fef],ebx
  41d5fd:	xor    al,0x74
  41d5ff:	push   es
	...
  41d630:	add    BYTE PTR [eax],al
  41d632:	jno    0x41d65a
  41d634:	popa   
  41d635:	mov    edi,0xe96c194c
  41d63a:	nop
  41d63b:	push   esp
  41d63c:	je     0x41d60c
  41d63e:	push   edx
  41d63f:	es inc ecx
  41d641:	(bad)  [ebp+0x4a]
  41d644:	je     0x41d60a
  41d646:	cdq    
  41d647:	sbb    esi,DWORD PTR [ecx-0x43]
  41d64a:	inc    ecx
  41d64b:	sbb    esp,DWORD PTR [ecx-0x3c]
  41d64e:	pusha  
  41d64f:	add    eax,0x3539bb61
  41d654:	je     0x41d650
  41d656:	repnz fsub DWORD PTR [ebx-0x6b]
  41d65a:	cmp    al,0x5
  41d65c:	inc    ecx
  41d65d:	fwait
  41d65e:	cdq    
  41d65f:	xor    eax,0x357ebc74
  41d664:	jb     0x41d6e4
  41d666:	jl     0x41d68e
  41d668:	popa   
  41d669:	add    BYTE PTR [esi-0x16],al
  41d66c:	pop    esp
  41d66d:	je     0x41d65a
  41d66f:	push   es
  41d670:	add    BYTE PTR [eax],al
  41d672:	retf   0x6
  41d675:	add    BYTE PTR [edx+0x7a000006],bh
  41d67b:	jmp    0x41d6af
  41d67d:	cmp    al,0xa6
  41d67f:	sbb    ecx,ebx
  41d681:	adc    ebp,ebp
  41d683:	hlt    
  41d684:	jmp    FWORD PTR [ecx-0x11b9f686]
  41d68a:	cmp    ebp,ebx
  41d68c:	xor    bh,BYTE PTR [esi+eiz*4]
  41d68f:	sbb    ecx,ebx
  41d691:	adc    ebp,ebp
  41d693:	repz jmp FWORD PTR [ecx+0x0]
	...
  41d6c6:	add    BYTE PTR [eax],al
  41d6c8:	jp     0x41d6d3
  41d6ca:	inc    esi
  41d6cb:	out    dx,al
  41d6cc:	cmp    bl,ch
  41d6ce:	xor    bh,BYTE PTR [esi+eiz*8]
  41d6d1:	sbb    cl,bl
  41d6d3:	adc    DWORD PTR [ebp+0x3aa9fff4],ebp
  41d6d9:	or     DWORD PTR [esi-0x12],eax
  41d6dc:	sbb    eax,0x27000006
  41d6e1:	mov    dh,0x2f
  41d6e3:	pop    eax
  41d6e4:	dec    edx
  41d6e5:	push   ebx
  41d6e6:	imul   esp,DWORD PTR [esi+0x36],0xffffffef
  41d6ea:	pop    esp
  41d6eb:	jb     0x41d704
  41d6ed:	cmp    cl,BYTE PTR [ecx+0x69]
  41d6f0:	sub    eax,esi
  41d6f2:	push   0x73
  41d6f4:	sbb    eax,0xc35c73dc
  41d6f9:	jecxz  0x41d76e
  41d6fb:	gs enter 0x60e3,0x74
  41d700:	push   0x3c
  41d702:	js     0x41d774
  41d704:	push   ds
  41d705:	out    0x71,eax
  41d707:	gs test al,0x39
  41d70a:	inc    ebp
  41d70b:	outs   dx,BYTE PTR ds:[esi]
  41d70c:	(bad)  
  41d70d:	fsubr  QWORD PTR [ebx+0x6c]
  41d710:	repz cmp ebp,DWORD PTR [ebx+0x72]
  41d714:	arpl   WORD PTR [ecx-0x6fcfa3ca],ax
  41d71a:	and    dh,BYTE PTR [edx+0x42]
  41d71d:	jnp    0x41d747
  41d71f:	xor    ah,BYTE PTR [ebx-0x64]
  41d722:	add    DWORD PTR [eax],eax
  41d724:	arpl   WORD PTR [ebp+0x1],di
  41d727:	bound  esp,QWORD PTR [ebx-0x7f]
  41d72a:	add    DWORD PTR [edx],esi
	...
  41d75c:	add    BYTE PTR [eax],al
  41d75e:	arpl   sp,sp
  41d760:	add    esi,DWORD PTR [esi]
  41d762:	arpl   bp,sp
  41d764:	add    esp,DWORD PTR [esi+0x63]
  41d767:	add    DWORD PTR [edi+esi*1],eax
  41d76a:	arpl   WORD PTR [esi],di
  41d76c:	add    al,0x34
  41d76e:	arpl   WORD PTR [ebx-0x4f9cd4ff],bp
  41d774:	add    DWORD PTR [ecx+0x63],esp
  41d777:	cmp    BYTE PTR [edi+esi*1],al
  41d77a:	arpl   WORD PTR [ecx-0x309ca0ff],bp
  41d780:	add    DWORD PTR [ebx],esi
  41d782:	arpl   WORD PTR [esi-0x49cd4ff],sp
  41d788:	add    esi,DWORD PTR [edx]
  41d78a:	arpl   sp,cx
  41d78c:	add    DWORD PTR [edi],esi
  41d78e:	arpl   WORD PTR [esi+0x1],bp
  41d791:	xor    al,0x63
  41d793:	add    al,BYTE PTR [edx+eiz*2]
  41d796:	arpl   bp,di
  41d798:	add    esi,DWORD PTR ds:0x35040063
  41d79e:	arpl   WORD PTR [esi-0x4475b4ff],bx
  41d7a4:	xor    ebp,DWORD PTR [ebp-0x70]
  41d7a7:	mov    edi,0x6fac7427
  41d7ac:	sbb    al,0x6e
  41d7ae:	call   0x414:0x9c7428d0
  41d7b5:	outs   dx,WORD PTR ds:[esi]
  41d7b7:	outs   dx,BYTE PTR ds:[esi]
  41d7b8:	jmp    0x41d7e6
  41d7ba:	cmp    al,0x9e
  41d7bc:	push   esi
  41d7bd:	ins    DWORD PTR es:[edi],dx
  41d7be:	jge    0x41d7c5
  41d7c0:	fwait
  41d7c1:	cmp    al,BYTE PTR [eax]
	...
  41d7f3:	add    BYTE PTR [ebx+esi*1],bh
  41d7f6:	test   BYTE PTR [edi-0x6c],cl
  41d7f9:	and    DWORD PTR [esi-0x55b6bfdb],eax
  41d7ff:	and    bh,BYTE PTR [eax]
  41d801:	sbb    dl,BYTE PTR [esi-0x6fab9cdf]
  41d807:	aaa    
  41d808:	inc    eax
  41d809:	push   esp
  41d80a:	mov    WORD PTR ds:0x36792235,?
  41d810:	arpl   WORD PTR [eax+edx*2+0x38],dx
  41d814:	add    BYTE PTR [esp+eax*2+0x36],dl
  41d818:	or     eax,0x41e45922
  41d81d:	and    DWORD PTR [ebx],ebp
  41d81f:	cmp    al,0xf6
  41d821:	xor    edi,DWORD PTR [ebx]
  41d823:	add    al,0x12
  41d825:	push   ds
  41d826:	xor    esp,DWORD PTR [edi]
  41d828:	adc    ah,BYTE PTR [edx]
  41d82a:	cmp    DWORD PTR [edx],edi
  41d82c:	add    BYTE PTR [ebx],dh
  41d82e:	pop    es
  41d82f:	out    0x0,eax
  41d831:	dec    ecx
  41d832:	ds daa 
  41d834:	rcl    DWORD PTR [edx+0x19],0x20
  41d838:	arpl   WORD PTR [eax+eax*1+0x38],dx
  41d83c:	rcl    BYTE PTR [esp+eax*1+0x36],0xcd
  41d841:	and    bh,cl
  41d843:	jecxz  0x41d7c6
  41d845:	and    DWORD PTR [ebx],ebx
  41d847:	push   esi
  41d848:	rcr    BYTE PTR [edx],0x6
  41d84b:	cmp    al,al
  41d84d:	in     eax,0x22
  41d84f:	sbb    esi,DWORD PTR [ecx-0x71c835de]
  41d855:	xor    esp,eax
  41d857:	add    eax,DWORD PTR [eax]
	...
  41d889:	add    BYTE PTR [edx-0x4dd924e2],dh
  41d88f:	and    bl,cl
  41d891:	cmp    DWORD PTR [eax-0x7f18f8cd],eax
  41d897:	ficom  DWORD PTR [ebx+0x338034]
  41d89d:	jmp    0xc4b5f939
  41d8a2:	(bad)  
  41d8a3:	and    al,0x72
  41d8a5:	lahf   
  41d8a6:	test   DWORD PTR [ebx],esi
  41d8a8:	and    ah,al
  41d8aa:	jl     0x41d888
  41d8ac:	push   edx
  41d8ad:	call   0x52b:0xb9203385
  41d8b4:	and    edi,DWORD PTR [edx+0x2c]
  41d8b7:	arpl   WORD PTR ds:[eax-0x7fa0e281],ax
  41d8be:	add    BYTE PTR ds:0x246c8051,0x51
  41d8c5:	dec    esp
  41d8c6:	push   ebp
  41d8c7:	das    
  41d8c8:	arpl   WORD PTR [ebx+0x7f],bx
  41d8cb:	loop   0x41d930
  41d8cd:	xor    eax,0x39543f36
  41d8d2:	pop    edi
  41d8d3:	inc    ecx
  41d8d4:	arpl   WORD PTR [ebp+0x34],dx
  41d8d7:	sub    eax,0x551b2763
  41d8dc:	add    BYTE PTR [edx],bh
  41d8de:	dec    eax
  41d8df:	xor    DWORD PTR [ebx+0x3a],esp
  41d8e2:	sub    DWORD PTR [edi],0x5067156b
  41d8e8:	arpl   WORD PTR [ebx],cx
  41d8ea:	aas    
  41d8eb:	inc    ebx
  41d8ec:	pop    edi
  41d8ed:	sbb    eax,0x0
	...
  41d91e:	add    BYTE PTR [eax],al
  41d920:	add    BYTE PTR ds:0x1e7bfe4c,0x6e
  41d927:	leave  
  41d928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d929:	inc    esi
  41d92a:	je     0x41d934
  41d92c:	pop    edi
  41d92d:	push   esp
  41d92e:	dec    edi
  41d92f:	and    eax,0xc9633148
  41d934:	jp     0x41d94e
  41d936:	jb     0x41d90c
  41d938:	inc    ecx
  41d939:	xor    DWORD PTR [eax],esp
  41d93b:	sbb    bl,BYTE PTR [edi+0x31]
  41d93e:	pop    edi
  41d93f:	retf   
  41d940:	ins    BYTE PTR es:[edi],dx
  41d941:	and    al,BYTE PTR [eax]
  41d943:	add    DWORD PTR [edi-0x22],ebx
  41d946:	(bad)  
  41d947:	jmp    FWORD PTR [edx+0x1]
  41d94a:	aas    
  41d94b:	dec    edi
  41d94c:	les    edx,FWORD PTR [ecx+0x54]
  41d94f:	push   edx
  41d950:	mov    ebx,0xfa544deb
  41d955:	push   edx
  41d956:	push   edx
  41d957:	dec    ecx
  41d958:	pop    ss
  41d959:	inc    esp
  41d95a:	push   edx
  41d95b:	pop    ecx
  41d95c:	retf   0x4e4f
  41d95f:	dec    ecx
  41d960:	or     edx,DWORD PTR [eax+0x41]
  41d963:	add    cl,bh
  41d965:	jmp    0x4f46:0x2f14340
  41d96c:	fdivr  DWORD PTR [edi]
  41d96e:	inc    ebp
  41d96f:	inc    edi
  41d970:	add    al,0x3
  41d972:	add    BYTE PTR [ebp+eiz*1-0x23],ch
  41d976:	outs   dx,BYTE PTR fs:[esi]
  41d978:	cmp    DWORD PTR [ecx],eax
  41d97a:	imul   esi,DWORD PTR [edx+0x33],0xffffffde
  41d97e:	outs   dx,BYTE PTR fs:[esi]
  41d980:	push   ebp
  41d981:	in     al,dx
  41d982:	jno    0x41d9f0
	...
  41d9b4:	add    BYTE PTR [eax],al
  41d9b6:	jp     0x41d9aa
  41d9b8:	pop    esp
  41d9b9:	jae    0x41d9f4
  41d9bb:	out    dx,al
  41d9bc:	push   0x72
  41d9be:	push   ds
  41d9bf:	ss jbe 0x41da23
  41d9c2:	es in  al,dx
  41d9c4:	pusha  
  41d9c5:	add    BYTE PTR [edi],ch
  41d9c7:	repnz pusha 
  41d9c9:	jb     0x41da3f
  41d9cb:	loopne 0x41da35
  41d9cd:	gs xchg ebp,eax
  41d9cf:	out    dx,eax
  41d9d0:	pop    esp
  41d9d1:	ins    BYTE PTR es:[edi],dx
  41d9d2:	outs   dx,DWORD PTR ds:[esi]
  41d9d3:	fdiv   st(7),st
  41d9d5:	outs   dx,BYTE PTR gs:[esi]
  41d9d7:	icebp  
  41d9d8:	cmp    DWORD PTR [edi],ebp
  41d9da:	adc    eax,0x2e746802
  41d9df:	repnz cmp DWORD PTR [edi],ebp
  41d9e2:	and    eax,0x2e746802
  41d9e7:	repnz outs dx,BYTE PTR ds:[esi]
  41d9e9:	cmp    dh,BYTE PTR [ebp-0x3a]
  41d9ec:	std    
  41d9ed:	pop    ebx
  41d9ee:	mov    ebp,0x63676b06
  41d9f3:	shr    BYTE PTR [eax],0x5c
  41d9f6:	mov    al,ds:0x8e6d2fc4
  41d9fb:	mov    ecx,0xd4a05c01
  41da00:	das    
  41da01:	ins    DWORD PTR es:[edi],dx
  41da02:	jle    0x41d9c9
  41da04:	cmp    BYTE PTR [ebx+0x63],ch
  41da07:	js     0x41da4b
  41da09:	push   0x63208f51
  41da0e:	xor    edi,DWORD PTR [eax+0x38]
  41da11:	jno    0x41da76
  41da13:	imul   ebx,DWORD PTR [esi],0x66
  41da16:	dec    edi
  41da17:	(bad)  
  41da18:	and    al,0x72
	...
  41da4a:	add    BYTE PTR [eax],al
  41da4c:	inc    esi
  41da4d:	pusha  
  41da4e:	inc    edx
  41da4f:	push   0x63207731
  41da54:	adc    eax,DWORD PTR [eax+0x65637138]
  41da5a:	sbb    esi,DWORD PTR [ecx+0x17]
  41da5d:	cmp    eax,0xe0346c20
  41da62:	sbb    dh,BYTE PTR [edx+0x63]
  41da65:	lock inc ecx
  41da67:	jb     0x41da5d
  41da69:	call   0x9c504d88
  41da6e:	dec    ebp
  41da6f:	dec    esi
  41da70:	or     bh,BYTE PTR [ebx]
  41da72:	sbb    al,0x72
  41da74:	cld    
  41da75:	inc    eax
  41da76:	daa    
  41da77:	add    BYTE PTR [edi],al
  41da79:	fistp  DWORD PTR [ebx+ebp*2]
  41da7c:	int3   
  41da7d:	adc    bl,BYTE PTR ds:0x1ce0b700
  41da83:	popa   
  41da84:	mov    eax,0xcf6c26e9
  41da89:	scas   al,BYTE PTR es:[edi]
  41da8a:	cmp    ch,BYTE PTR [ebx]
  41da8c:	scas   al,BYTE PTR es:[edi]
  41da8d:	adc    DWORD PTR [eax],esp
  41da8f:	arpl   sp,ax
  41da91:	adc    al,0x4
  41da93:	pop    esp
  41da94:	cwde   
  41da95:	leave  
  41da96:	inc    eax
  41da97:	arpl   WORD PTR [edi+0x636e1d09],si
  41da9d:	add    eax,0x349153c3
  41daa2:	lds    ebx,FWORD PTR [edi+edi*2]
  41daa5:	sub    bl,dl
  41daa7:	add    esp,DWORD PTR [eax+0x6322c015]
  41daad:	inc    ecx
  41daae:	lods   al,BYTE PTR ds:[esi]
  41daaf:	xor    eax,DWORD PTR [eax]
	...
  41dae1:	add    BYTE PTR [eax+ebp*1-0x65],bh
  41dae5:	dec    eax
  41dae6:	jae    0x41db16
  41dae8:	retf   0x9203
  41daeb:	sbb    eax,ecx
  41daed:	and    eax,0x57acf245
  41daf2:	xor    eax,DWORD PTR ds:0x2a571c9a
  41daf8:	call   0x1f03:0x80333ddd
  41daff:	cmp    BYTE PTR [eax-0x18e7bfc9],dl
  41db05:	dec    edi
  41db06:	adc    eax,0x421c7a2e
  41db0b:	xor    al,0x7c
  41db0d:	jecxz  0x41db38
  41db0f:	sub    cl,BYTE PTR [ebx+0x1b]
  41db12:	xor    al,0x5
  41db14:	or     eax,0xe7151726
  41db19:	push   eax
  41db1a:	arpl   WORD PTR [edx],bp
  41db1c:	out    0x37,eax
  41db1e:	arpl   WORD PTR [ecx],bx
  41db20:	out    0x1a,eax
  41db22:	arpl   WORD PTR [ebx],si
  41db24:	out    0x24,eax
  41db26:	arpl   WORD PTR [eax],bx
  41db28:	out    0x3,eax
  41db2a:	arpl   WORD PTR [ecx+0x26],ax
  41db2d:	and    dh,cl
  41db2f:	daa    
  41db30:	or     BYTE PTR [eax],ah
  41db32:	or     DWORD PTR [ecx+0xe],0x35
  41db36:	mov    ebp,0xbf230631
  41db3b:	sub    bl,BYTE PTR [ecx]
  41db3d:	add    al,0x92
  41db3f:	push   edx
  41db40:	aad    0x22
  41db42:	mov    cl,0x28
  41db44:	(bad)  
	...
  41db76:	add    BYTE PTR [eax],al
  41db78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db79:	pop    ss
  41db7a:	add    BYTE PTR [edx+esi*2],cl
  41db7d:	sub    eax,0x5b71546
  41db82:	cs mov edx,0xab004b55
  41db88:	ins    BYTE PTR es:[edi],dx
  41db89:	inc    esp
  41db8a:	jp     0x41db58
  41db8c:	sahf   
  41db8d:	sbb    DWORD PTR [eax-0x17],esi
  41db90:	xor    ebp,DWORD PTR [esp+esi*2]
  41db93:	int3   
  41db94:	push   ss
  41db95:	sub    BYTE PTR [edi-0x4b],bl
  41db98:	pusha  
  41db99:	push   ecx
  41db9a:	pop    edi
  41db9b:	mov    edx,0xba5f352c
  41dba0:	xchg   ebx,eax
  41dba1:	sbb    ch,BYTE PTR [ebp-0x65]
  41dba4:	jl     0x41dbab
  41dba6:	dec    esp
  41dba7:	mov    BYTE PTR [ebx+0x7c8d3f19],dl
  41dbad:	pop    ss
  41dbae:	arpl   WORD PTR [edx-0x77b3fa8d],bx
  41dbb4:	jae    0x41dbcf
  41dbb6:	push   ebx
  41dbb7:	jp     0x41db3e
  41dbb9:	pop    ss
  41dbba:	add    BYTE PTR [ebp-0x668be97f],ah
  41dbc0:	jg     0x41dbd9
  41dbc2:	je     0x41dbad
  41dbc4:	xor    esi,DWORD PTR [edx]
  41dbc6:	push   bp
  41dbc8:	push   esi
  41dbc9:	inc    esp
  41dbca:	jb     0x41dc18
  41dbcc:	xor    ecx,DWORD PTR [ebx+0x6c]
  41dbcf:	dec    eax
  41dbd0:	xor    ch,BYTE PTR ds:0x2e404c50
  41dbd6:	pop    esp
  41dbd7:	sub    eax,DWORD PTR [ebx+0x44]
  41dbda:	jp     0x41dc28
	...
  41dc0c:	add    BYTE PTR [eax],al
  41dc0e:	sbb    eax,0xb20d7019
  41dc13:	es je  0x41dc33
  41dc16:	js     0x41dc4b
  41dc18:	sbb    ah,BYTE PTR gs:[edi+0x41]
  41dc1c:	inc    edx
  41dc1d:	add    eax,0x27631f80
  41dc22:	jnp    0x41dc39
  41dc24:	add    BYTE PTR [eax],al
  41dc26:	or     al,0xe9
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	ins    BYTE PTR es:[edi],dx
  41dc2a:	cmp    cl,BYTE PTR [ecx+0x54]
  41dc2d:	push   eax
  41dc2e:	and    DWORD PTR [esi+0x3634c2b],edi
  41dc34:	addr16 pop esp
  41dc36:	cmp    edi,edi
  41dc38:	pusha  
  41dc39:	ins    BYTE PTR es:[edi],dx
  41dc3a:	push   ds
  41dc3b:	push   ebx
  41dc3c:	imul   esi,DWORD PTR [eax+0x17],0x1
  41dc40:	pop    esp
  41dc41:	arpl   WORD PTR [ebp+0xc616903],di
  41dc47:	jmp    0x41dc48
  41dc49:	inc    esi
  41dc4a:	sbb    eax,0xfa505449
  41dc4f:	inc    ebp
  41dc50:	imul   ebp,DWORD PTR [esi+0x1c],0xffffffec
  41dc54:	pop    esi
  41dc55:	je     0x41dc4a
  41dc57:	add    DWORD PTR [esi+0x73],ebp
  41dc5a:	pushf  
  41dc5b:	fidiv  DWORD PTR [edi+0x74]
  41dc5e:	mov    edx,0x42d4195
  41dc63:	cmp    edx,DWORD PTR [eax+0x0]
  41dc66:	cmp    edi,edi
  41dc68:	jae    0x41dccf
  41dc6a:	sub    eax,eax
  41dc6c:	data16 outs dx,BYTE PTR ds:[esi]
  41dc6e:	jecxz  0x41dc76
  41dc70:	pop    esp
  41dc71:	xor    eax,DWORD PTR [eax]
	...
  41dca3:	add    dh,al
  41dca5:	ret    
  41dca6:	inc    ebx
  41dca7:	push   esp
  41dca8:	pop    edx
  41dca9:	or     DWORD PTR [ebx+edx*2+0x33],ebx
  41dcad:	aad    0x60
  41dcaf:	inc    esp
  41dcb0:	pop    ss
  41dcb1:	fisub  DWORD PTR [edi+eiz*2+0x3c]
  41dcb5:	in     al,0x71
  41dcb7:	add    BYTE PTR [ecx-0x22],bl
  41dcba:	inc    ebp
  41dcbb:	push   esp
  41dcbc:	push   ebp
  41dcbd:	dec    eax
  41dcbe:	push   edx
  41dcbf:	inc    ebp
  41dcc0:	dec    esi
  41dcc1:	dec    edx
  41dcc2:	ins    BYTE PTR es:[edi],dx
  41dcc3:	popa   
  41dcc4:	cdq    
  41dcc5:	fisub  DWORD PTR [eax+0x73]
  41dcc8:	sahf   
  41dcc9:	xor    eax,0xdd677075
  41dcce:	bound  esp,QWORD PTR fs:[ebx-0x28]
  41dcd2:	sub    al,0x46
  41dcd4:	jp     0x41dc92
  41dcd6:	in     eax,dx
  41dcd7:	xor    BYTE PTR [eax-0x5ad5163c],ah
  41dcdd:	pop    edx
  41dcde:	aas    
  41dcdf:	xor    dh,BYTE PTR [esi+0x5d]
  41dce2:	icebp  
  41dce3:	mov    cs:0xa0314461,al
  41dce9:	in     eax,0xd6
  41dceb:	das    
  41dcec:	dec    ebx
  41dced:	cld    
  41dcee:	repz xor DWORD PTR [ecx+0x3a3441fe],esp
  41dcf5:	push   0x43
  41dcf7:	jnp    0x41dc90
  41dcf9:	popf   
  41dcfa:	xlat   BYTE PTR ds:[ebx]
  41dcfb:	xor    DWORD PTR [edi+0x7a75459c],ecx
  41dd01:	retf   0x31f6
  41dd04:	arpl   WORD PTR [ecx+0x24],bp
  41dd07:	jno    0x41dd09
	...
  41dd39:	add    BYTE PTR [edx+0x72],bl
  41dd3c:	dec    ebp
  41dd3d:	push   eax
  41dd3e:	arpl   WORD PTR [eax+0x37],sp
  41dd41:	arpl   WORD PTR [edi+0x5f],cx
  41dd44:	and    al,0x72
  41dd46:	inc    edx
  41dd47:	and    ah,BYTE PTR [edx]
  41dd49:	add    BYTE PTR [ebp+0x63701f84],al
  41dd4f:	shl    BYTE PTR [ebx],cl
  41dd51:	xor    ebp,DWORD PTR fs:[ebp+ecx*2+0x56813143]
  41dd59:	push   edx
  41dd5a:	sub    eax,0xfcffddfb
  41dd5f:	dec    esp
  41dd60:	xor    eax,0x364b0c71
  41dd65:	fs inc ebx
  41dd67:	stc    
  41dd68:	repnz cmp DWORD PTR [ecx],eax
  41dd6b:	push   es
  41dd6c:	add    al,0x73
  41dd6e:	lock dec eax
  41dd70:	outs   dx,BYTE PTR ss:[esi]
  41dd72:	add    cl,BYTE PTR [ecx+0x1f]
  41dd75:	cmp    dl,al
  41dd77:	xchg   esp,eax
  41dd78:	add    DWORD PTR [esi-0x32],esp
  41dd7b:	add    eax,0x26831813
  41dd80:	add    esp,DWORD PTR [eax]
  41dd82:	shr    DWORD PTR [edx],1
  41dd84:	sbb    dh,BYTE PTR [edi]
  41dd86:	jns    0x41dd9c
  41dd88:	rol    DWORD PTR [ebx],1
  41dd8a:	test   DWORD PTR ds:0x5291411b,eax
  41dd90:	sbb    dl,BYTE PTR [esi-0x73]
  41dd93:	lock out 0x41,al
  41dd96:	mov    bh,0x35
  41dd98:	(bad)  
  41dd99:	cmp    DWORD PTR [esi+0x41e718],eax
	...
  41ddcf:	add    BYTE PTR [edi-0x71e552cb],dh
  41ddd5:	add    eax,0x2a771cda
  41ddda:	fcmovu st,st(1)
  41dddc:	ins    BYTE PTR es:[edi],dx
  41dddd:	xor    dl,bl
  41dddf:	add    edx,DWORD PTR [edx-0x71b05ab0]
  41dde5:	inc    esi
  41dde6:	cdq    
  41dde7:	inc    eax
  41dde8:	aas    
  41dde9:	xor    edi,DWORD PTR [esi-0x530db9db]
  41ddef:	dec    edi
  41ddf0:	xor    esp,ebp
  41ddf2:	(bad)  
  41ddf4:	pop    DWORD PTR [ecx-0x46]
  41ddf7:	xor    DWORD PTR es:[esi],ebp
  41ddfa:	xchg   edi,eax
  41ddfb:	das    
  41ddfc:	xor    al,BYTE PTR ds:0x39253a9a
  41de02:	xchg   esi,eax
  41de03:	inc    esp
  41de04:	adc    DWORD PTR [edx-0x6d],ecx
  41de07:	push   ebp
  41de08:	push   cs
  41de09:	and    edi,DWORD PTR [esi-0x28]
  41de0c:	push   ds
  41de0d:	cmp    DWORD PTR [edi],esi
  41de0f:	in     al,0x53
  41de11:	out    dx,eax
  41de12:	adc    eax,0x37391d48
  41de17:	push   ebp
  41de18:	add    BYTE PTR [ebx],dl
  41de1a:	push   ebp
  41de1b:	pop    ds
  41de1c:	icebp  
  41de1d:	adc    esp,edi
  41de1f:	inc    ecx
  41de20:	pop    ss
  41de21:	xor    eax,0x19f64507
  41de26:	add    BYTE PTR [edi-0x6d],al
  41de29:	add    eax,0xe5af1546
  41de2e:	inc    ebp
  41de2f:	adc    BYTE PTR [ebx+0x24],ch
  41de32:	and    eax,DWORD PTR ds:0x0
	...
  41de64:	add    BYTE PTR [eax],al
  41de66:	pop    edi
  41de67:	xor    eax,0x1a761a5f
  41de6c:	ins    DWORD PTR es:[edi],dx
  41de6d:	sbb    eax,DWORD PTR [ebx+0x750c5105]
  41de73:	pop    ss
  41de74:	arpl   bx,di
  41de76:	push   0x40
  41de78:	imul   ecx,DWORD PTR [edi+eiz*2],0x34
  41de7c:	jno    0x41de82
  41de7e:	dec    ebp
  41de7f:	dec    eax
  41de80:	inc    esp
  41de81:	jmp    0xd5a90dcf
  41de86:	imul   eax,DWORD PTR [eax+0x6c],0x631359ad
  41de8d:	retf   0x3244
  41de90:	jb     0x41de52
  41de92:	pusha  
  41de93:	xor    eax,0x4f34bb6d
  41de98:	jae    0x41de5e
  41de9a:	xchg   BYTE PTR [edx+esi*2],ah
  41de9d:	jmp    0x9fb402d1
  41dea2:	ins    DWORD PTR es:[edi],dx
  41dea3:	adc    edx,DWORD PTR [eax+eiz*4-0x70]
  41dea7:	and    al,0x0
  41dea9:	stc    
  41deaa:	pusha  
  41deab:	add    eax,0xe0226100
  41deb0:	call   DWORD PTR [edx+0x687b904d]
  41deb6:	and    dl,BYTE PTR [ecx+0x2d]
  41deb9:	aas    
  41deba:	test   al,0x9
  41debc:	mov    al,ds:0x66b5f5f1
  41dec1:	xor    al,0x18
  41dec3:	add    eax,0xf1740f32
  41dec8:	xor    DWORD PTR [eax],edx
	...
  41defa:	add    BYTE PTR [eax],al
  41defc:	cdq    
  41defd:	aam    0x34
  41deff:	jmp    0x47ec74
  41df04:	jb     0x41dec6
  41df06:	add    eax,DWORD PTR [ecx]
  41df08:	jg     0x41dea8
  41df0a:	add    al,0x3
  41df0c:	dec    ecx
  41df0d:	add    ecx,DWORD PTR [edi+0x6f]
  41df10:	pushf  
  41df11:	aad    0x72
  41df13:	popa   
  41df14:	push   0x734c5bfe
  41df19:	sti    
  41df1a:	pop    esp
  41df1b:	jae    0x41dea9
  41df1d:	xor    eax,0xfa795c50
  41df22:	jae    0x41df89
  41df24:	sbb    bl,al
  41df26:	pop    esp
  41df27:	outs   dx,BYTE PTR ds:[esi]
  41df28:	pop    ebx
  41df29:	in     al,0x60
  41df2b:	jb     0x41df37
  41df2d:	fld    TBYTE PTR [edx+0x73]
  41df30:	push   cs
  41df31:	add    edx,DWORD PTR [ecx+0x73]
  41df34:	pop    ds
  41df35:	fcos   
  41df37:	dec    edi
  41df38:	sbb    ebx,edx
  41df3a:	outs   dx,BYTE PTR ds:[esi]
  41df3b:	add    BYTE PTR [edx+0xa7471fd],bh
  41df41:	cmp    DWORD PTR [ecx+0x6d],esp
  41df44:	adc    eax,0xbe2060ef
  41df49:	sti    
  41df4a:	jno    0x41df4c
  41df4c:	test   BYTE PTR [ecx+0x75],0x62
  41df50:	lahf   
  41df51:	fsub   DWORD PTR [ebx+0x75]
  41df54:	fld    DWORD PTR [ecx]
  41df56:	add    BYTE PTR [esi],ch
  41df58:	fsubp  st(7),st
  41df5a:	pop    esi
  41df5b:	imul   ecx,edx,0xffffffef
  41df5e:	outs   dx,BYTE PTR ds:[esi]
  41df5f:	add    BYTE PTR gs:[eax],al
	...
  41df92:	fdivr  DWORD PTR [eax+eiz*2+0x64e4d46f]
  41df99:	addr16 mov edx,0x1e6570a6
  41df9f:	out    dx,al
  41dfa0:	outs   dx,BYTE PTR fs:[esi]
  41dfa2:	frstor [edx-0x1bc89e95]
  41dfa8:	cmp    BYTE PTR [edx],ah
  41dfaa:	jp     0x41df50
  41dfac:	std    
  41dfad:	jne    0x41e012
  41dfaf:	dec    ebp
  41dfb0:	sbb    BYTE PTR [ebx-0x2],dh
  41dfb3:	adc    dl,ah
  41dfb5:	call   DWORD PTR [ecx]
  41dfb7:	aaa    
  41dfb8:	push   ds
  41dfb9:	je     0x41dfa7
  41dfbb:	dec    esp
  41dfbc:	xor    ah,BYTE PTR [ebx-0x41]
  41dfbf:	sti    
  41dfc0:	sbb    ch,BYTE PTR [ebx-0x3c]
  41dfc3:	fimul  WORD PTR [edi+0x5f]
  41dfc6:	xlat   BYTE PTR ds:[ebx]
  41dfc7:	hlt    
  41dfc8:	and    ch,BYTE PTR [ebx-0x59]
  41dfcb:	fsubr  QWORD PTR [esi]
  41dfcd:	push   esp
  41dfce:	xchg   edi,eax
  41dfcf:	aad    0x47
  41dfd1:	push   ecx
  41dfd2:	mov    esi,0xbc6730fb
  41dfd7:	div    BYTE PTR [eax]
  41dfd9:	add    BYTE PTR [ebx-0x528bcef1],bl
  41dfdf:	or     eax,0xf9636317
  41dfe4:	xor    BYTE PTR [ebx-0x6f],ah
  41dfe7:	push   esi
  41dfe8:	and    al,0x6b
  41dfea:	jle    0x41df98
  41dfec:	push   ecx
  41dfed:	pop    edi
  41dfee:	jo     0x41dfab
  41dff0:	cs ins DWORD PTR es:[edi],dx
  41dff2:	jno    0x41dfbc
  41dff4:	add    DWORD PTR [eax+0x0],edx
	...
  41e027:	add    BYTE PTR [edx+ebx*2+0x2d],bh
  41e02b:	dec    esi
  41e02c:	outs   dx,BYTE PTR ds:[esi]
  41e02d:	rcr    DWORD PTR [edi],1
  41e02f:	arpl   WORD PTR [ecx-0x54],dx
  41e032:	dec    ebp
  41e033:	arpl   WORD PTR [ecx+0x61],dx
  41e036:	sbb    al,0x6e
  41e038:	inc    edx
  41e039:	js     0x41e088
  41e03b:	ja     0x41e090
  41e03d:	mov    DWORD PTR [ecx],eax
  41e03f:	dec    esi
  41e040:	xor    edi,DWORD PTR [ebx+edi*1+0x54]
  41e044:	adc    ebx,DWORD PTR [esi+0x29]
  41e047:	imul   edi,DWORD PTR [edi],0xffffffac
  41e04a:	inc    ebp
  41e04b:	dec    esi
  41e04c:	xor    al,0x18
  41e04e:	and    BYTE PTR [eax+0x2],dh
  41e051:	nop
  41e052:	fisubr DWORD PTR [eax]
  41e054:	arpl   WORD PTR [ebx+0x16],di
  41e057:	popw   ss
  41e059:	add    eax,0x2811255e
  41e05e:	cmp    eax,DWORD PTR [ebx+0xe]
  41e061:	daa    
  41e062:	dec    ebp
  41e063:	and    DWORD PTR [eax],eax
  41e065:	inc    edx
  41e066:	push   esp
  41e067:	xor    al,0x43
  41e069:	xor    dl,BYTE PTR [esi+0x1e]
  41e06c:	out    dx,eax
  41e06d:	adc    eax,0x5c03248
  41e072:	sub    eax,0x42e5b350
  41e077:	and    edx,edx
  41e079:	adc    DWORD PTR [eax],edx
  41e07b:	push   ss
  41e07c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e07d:	adc    DWORD PTR [eax],edx
  41e07f:	pop    ss
  41e080:	int    0xe5
  41e082:	sbb    DWORD PTR [ecx],esp
  41e084:	mov    cl,0x13
  41e086:	add    al,0x32
  41e088:	arpl   WORD PTR [ebx+0x1b],ax
  41e08b:	push   esp
	...
  41e0bc:	add    BYTE PTR [eax],al
  41e0be:	and    DWORD PTR [ecx],0x4
  41e0c1:	xor    edx,DWORD PTR [edi-0x70dafad2]
  41e0c7:	cs (bad) 
  41e0c9:	adc    eax,0x20da1243
  41e0ce:	xchg   ecx,eax
  41e0cf:	add    eax,0xe5934fa5
  41e0d4:	retf   0x7220
  41e0d7:	adc    eax,eax
  41e0d9:	adc    eax,0x16d0118c
  41e0de:	jne    0x41e0c5
  41e0e0:	mov    dh,0x24
  41e0e2:	push   edx
  41e0e3:	sbb    BYTE PTR [esi-0x18deaeea],bh
  41e0e9:	cmp    eax,0x1fc73537
  41e0ee:	inc    eax
  41e0ef:	sbb    BYTE PTR [ebx-0x64d9b2e4],dl
  41e0f5:	sbb    al,0x46
  41e0f7:	sub    eax,edi
  41e0f9:	xor    edi,DWORD PTR [esi]
  41e0fb:	pop    ss
  41e0fc:	jnp    0x41e101
  41e0fe:	sbb    eax,0xe39731
  41e103:	and    al,BYTE PTR [eax]
  41e105:	jp     0x41e14b
  41e107:	and    al,0x6e
  41e109:	mov    BYTE PTR [esp],bh
  41e10c:	ins    DWORD PTR es:[edi],dx
  41e10d:	push   edi
  41e10e:	jg     0x41e135
  41e110:	pop    edi
  41e111:	push   ebp
  41e112:	inc    eax
  41e113:	sub    DWORD PTR [ebp+0x4e],ebp
  41e116:	pop    edi
  41e117:	inc    ebx
  41e118:	push   esp
  41e119:	cmp    DWORD PTR [edi+0x4556722c],eax
  41e11f:	and    al,0x6c
  41e121:	inc    esp
	...
  41e152:	add    BYTE PTR [eax],al
  41e154:	xchg   edx,eax
  41e155:	add    eax,0x36af1d46
  41e15a:	push   0x296b44
  41e15f:	setae  BYTE PTR ds:0x295c1171
  41e166:	ins    BYTE PTR es:[edi],dx
  41e167:	(bad)  
  41e168:	push   esi
  41e169:	push   ss
  41e16a:	addr16 jmp 0xfda80c03
  41e170:	ja     0x41e1ae
  41e172:	jb     0x41e178
  41e174:	stos   DWORD PTR es:[edi],eax
  41e175:	push   eax
  41e176:	aas    
  41e177:	sbb    ch,BYTE PTR [esi*1+0x3953076d]
  41e17e:	inc    esi
  41e17f:	mov    ebp,0xc76e44b0
  41e184:	push   edi
  41e185:	cmp    DWORD PTR [ecx-0x34],edx
  41e188:	inc    esp
  41e189:	sbb    BYTE PTR [eax-0x17],dh
  41e18c:	sub    al,0x3c
  41e18e:	je     0x41e158
  41e190:	and    al,0x24
  41e192:	jb     0x41e17d
  41e194:	and    al,0x43
  41e196:	push   esp
  41e197:	cdq    
  41e198:	cdq    
  41e199:	sub    esp,DWORD PTR [esi-0x42]
  41e19c:	pusha  
  41e19d:	arpl   WORD PTR ss:[ebx-0x528dd78a],bx
  41e1a4:	pop    ecx
  41e1a5:	push   ss
  41e1a6:	je     0x41e16f
  41e1a8:	mov    BYTE PTR [eax],dh
  41e1aa:	ins    BYTE PTR es:[edi],dx
  41e1ab:	jmp    0xba0a26
  41e1b0:	daa    
  41e1b1:	aad    0x45
  41e1b3:	imul   ebp,esi,0x65fffa
	...
  41e1e9:	add    BYTE PTR [esi],dl
  41e1eb:	fsubr  DWORD PTR [esi+0x69]
  41e1ee:	push   ss
  41e1ef:	sti    
  41e1f0:	sub    eax,0x2c69
  41e1f5:	inc    esi
  41e1f6:	sub    edx,esi
  41e1f8:	jae    0x41e24d
  41e1fa:	push   ss
  41e1fb:	repnz ins DWORD PTR es:[edi],dx
  41e1fd:	gs pop edx
  41e1ff:	inc    edi
  41e200:	jb     0x41e271
  41e202:	and    eax,0x4a7260d6
  41e207:	fst    DWORD PTR [ebx+0x50]
  41e20a:	jle    0x41e20a
  41e20c:	outs   dx,BYTE PTR ds:[esi]
  41e20d:	je     0x41e25b
  41e20f:	sti    
  41e210:	popa   
  41e211:	add    BYTE PTR [esi+0x6e705cd2],bl
  41e217:	cli    
  41e218:	dec    esi
  41e219:	je     0x41e272
  41e21b:	in     eax,0x64
  41e21d:	outs   dx,DWORD PTR ds:[esi]
  41e21e:	jle    0x41e264
  41e220:	push   0x60f24d72
  41e225:	push   eax
  41e226:	outs   dx,BYTE PTR ds:[esi]
  41e227:	jmp    0x40:0x4721006e
  41e22e:	mov    ecx,0x17003fda
  41e233:	fnstcw WORD PTR [edi]
  41e235:	add    BYTE PTR [ebp+0x35003fdc],bh
  41e23b:	sar    DWORD PTR [edi],cl
  41e23d:	add    bl,bh
  41e23f:	ss inc eax
  41e241:	add    BYTE PTR ds:0x7600404a,bh
  41e247:	dec    ebx
  41e248:	inc    eax
  41e249:	add    BYTE PTR [eax+ecx*2+0x40],ch
	...
  41e27d:	add    BYTE PTR [eax],al
  41e27f:	add    bh,bl
  41e281:	dec    esi
  41e282:	inc    eax
  41e283:	add    BYTE PTR [edx+0x4e],ah
  41e286:	inc    eax
  41e287:	add    ch,bh
  41e289:	dec    ebp
  41e28a:	inc    eax
  41e28b:	add    BYTE PTR [ebx+0xc],ah
  41e28e:	inc    esi
  41e28f:	inc    eax
  41e290:	arpl   WORD PTR [esi+0x21],di
  41e293:	inc    eax
  41e294:	arpl   WORD PTR [ebp-0x2f9cbfe0],si
  41e29a:	pop    ds
  41e29b:	inc    eax
  41e29c:	arpl   WORD PTR [ebx],ax
  41e29e:	and    BYTE PTR [eax+0x63],al
  41e2a1:	test   DWORD PTR ds:0x28b16340,ebx
  41e2a7:	inc    eax
  41e2a8:	arpl   WORD PTR [edx+ebp*1+0x290d6340],di
  41e2af:	inc    eax
  41e2b0:	arpl   WORD PTR [edi],bx
  41e2b2:	cs inc eax
  41e2b4:	arpl   WORD PTR [edi],si
  41e2b6:	das    
  41e2b7:	inc    eax
  41e2b8:	arpl   WORD PTR [edx],si
  41e2ba:	xor    DWORD PTR [eax+0x63],eax
  41e2bd:	ds adc al,0x40
  41e2c0:	arpl   ax,di
  41e2c2:	adc    al,BYTE PTR [eax+0x63]
  41e2c5:	xlat   BYTE PTR ds:[ebx]
  41e2c6:	adc    eax,0x17f36340
  41e2cb:	inc    eax
  41e2cc:	arpl   WORD PTR [ecx+ebx*1+0x1c0d6340],dx
  41e2d3:	inc    eax
  41e2d4:	arpl   WORD PTR [ebp+0x1c],dx
  41e2d7:	inc    eax
  41e2d8:	arpl   WORD PTR [eax+0x963401e],di
  41e2de:	sbb    eax,0x89e76340
  41e2e3:	inc    eax
	...
  41e314:	add    BYTE PTR [eax],al
  41e316:	arpl   WORD PTR [ebx-0x74],bx
  41e319:	inc    eax
  41e31a:	arpl   WORD PTR [ebx],ax
  41e31c:	mov    es,WORD PTR [eax+0x63]
  41e31f:	(bad)  
  41e320:	jns    0x41e362
  41e322:	arpl   bp,cx
  41e324:	jp     0x41e366
  41e326:	arpl   WORD PTR [ebx+0x3a634079],di
  41e32c:	jl     0x41e36e
  41e32e:	arpl   WORD PTR [ecx],cx
  41e330:	jnp    0x41e372
  41e332:	arpl   WORD PTR [eax],bx
  41e334:	jnp    0x41e376
  41e336:	arpl   WORD PTR ds:0x5237ddf,ax
  41e33c:	inc    ecx
  41e33d:	jle    0x41e362
  41e33f:	add    eax,0x5237eaf
  41e344:	pop    ecx
  41e345:	jg     0x41e36a
  41e347:	add    eax,0x5237f14
  41e34c:	mov    ah,0x67
  41e34e:	and    eax,DWORD PTR ds:0x5236d23
  41e354:	in     al,dx
  41e355:	ins    BYTE PTR es:[edi],dx
  41e356:	and    eax,DWORD PTR ds:0x5235e6f
  41e35c:	mov    al,ds:0xc105235e
  41e361:	pop    esi
  41e362:	and    eax,DWORD PTR ds:0x5236054
  41e368:	lea    ebx,[edi-0x5d]
  41e36b:	add    eax,0x5a35f96
  41e370:	fbld   TBYTE PTR [eax-0x5d]
  41e373:	add    eax,0x5a36140
  41e378:	sub    eax,0x62
	...
  41e3a9:	add    BYTE PTR [eax],al
  41e3ab:	add    BYTE PTR [ebx-0x5c9e48fb],ah
  41e3b1:	add    eax,0x5a3c341
  41e3b6:	retf   0xa3c4
  41e3b9:	add    eax,0x5a3c50c
  41e3be:	pushf  
  41e3bf:	les    esp,FWORD PTR [ebx-0x5c38d4fb]
  41e3c5:	add    eax,0x5a3c649
  41e3ca:	cli    
  41e3cb:	(bad)  
  41e3cc:	mov    ds:0xa3c90d05,eax
  41e3d1:	add    eax,0x5a3c87f
  41e3d6:	mov    ah,0xcc
  41e3d8:	mov    ds:0x23cc9105,eax
  41e3dd:	add    eax,0x523d0d3
  41e3e2:	add    BYTE PTR [ecx-0x66ffba4d],dh
  41e3e8:	cmovbe eax,DWORD PTR [eax]
  41e3eb:	ret    0x45f5
  41e3ee:	add    BYTE PTR [ecx+0x80045fb],al
  41e3f4:	jmp    0x41e43b
  41e3f6:	add    BYTE PTR [eax+ebp*8-0x2798ffbb],dh
  41e3fd:	inc    ebp
  41e3fe:	add    ch,bl
  41e400:	xlat   BYTE PTR ds:[ebx]
  41e401:	inc    ebp
  41e402:	add    BYTE PTR [edx-0x31],ah
  41e405:	inc    ebp
  41e406:	add    al,ah
  41e408:	mov    BYTE PTR [ebp+0x0],0x6e
  41e40c:	mov    ebp,0xe90045
	...
  41e441:	add    BYTE PTR [eax+0x5],ah
  41e444:	add    cl,ch
  41e446:	pusha  
  41e447:	add    eax,0x560e900
  41e44c:	add    cl,ch
  41e44e:	pusha  
  41e44f:	add    eax,0x560e900
  41e454:	add    BYTE PTR [edx],ch
  41e456:	xchg   ebx,eax
  41e457:	and    BYTE PTR [ebx+0x3f],ah
  41e45a:	imul   esp,ebp,0x47
  41e45d:	or     BYTE PTR [esi+0x2d],dl
  41e460:	add    BYTE PTR [edx],bh
  41e462:	jnp    0x41e43c
  41e464:	push   ebx
  41e465:	cmp    al,0x76
  41e467:	in     al,dx
  41e468:	inc    esi
  41e469:	sbb    al,0x6f
  41e46b:	dec    edx
  41e46c:	push   edx
  41e46d:	sbb    eax,0xe949490c
  41e472:	std    
  41e473:	and    ebp,DWORD PTR [esi]
  41e475:	or     al,0x6f
  41e477:	and    al,0x0
  41e479:	les    esi,FWORD PTR [eax]
  41e47b:	(bad)  
  41e47c:	push   edi
  41e47d:	jmp    0xc4b4f7d6
  41e482:	pusha  
  41e483:	sub    ah,BYTE PTR [edi-0x33]
  41e486:	repnz and eax,0x60d55f
  41e48c:	pop    es
  41e48d:	add    bh,dl
  41e48f:	or     DWORD PTR [ecx],ecx
  41e491:	or     dl,bl
  41e493:	mov    ds:0xf30f6f37,eax
  41e498:	pop    ds
  41e499:	or     eax,0x6561a3c0
  41e49e:	(bad)  
  41e49f:	mov    ds:0xa39b2506,eax
  41e4a4:	sbb    eax,0xd
	...
  41e4d5:	add    BYTE PTR [eax],al
  41e4d7:	add    al,al
  41e4d9:	or     ah,BYTE PTR [ebp+0x66]
  41e4dc:	call   0x6eea:0xe265200a
  41e4e3:	je     0x41e48f
  41e4e5:	or     ah,BYTE PTR [eax]
  41e4e7:	and    BYTE PTR [edi-0x65f6e24e],bl
  41e4ed:	mov    ds:0xd61e6f64,eax
  41e4f2:	pop    ds
  41e4f3:	or     DWORD PTR [edx-0x2a],ebp
  41e4f6:	jo     0x41e569
  41e4f8:	add    DWORD PTR [esi],0xa
  41e4fb:	and    BYTE PTR [esi],bl
  41e4fd:	loopne 0x41e56a
  41e4ff:	and    BYTE PTR [ebx-0x5d],dl
  41e502:	and    dh,BYTE PTR [eax]
  41e504:	push   0x1
  41e506:	and    BYTE PTR [eax],ah
  41e508:	pop    eax
  41e509:	sahf   
  41e50a:	jo     0x41e52e
  41e50c:	pop    edx
  41e50d:	mov    eax,ds:0x32a201d
  41e512:	dec    edi
  41e513:	push   0x456bd55f
  41e518:	push   edx
  41e519:	ficomp WORD PTR [esi+0x75]
  41e51c:	dec    esi
  41e51d:	fidivr WORD PTR [eax+eax*1]
  41e520:	sbb    ebx,ebp
  41e522:	pusha  
  41e523:	ins    BYTE PTR es:[edi],dx
  41e524:	data16 mov al,0x2f
  41e527:	cs pop esi
  41e529:	aad    0x6b
  41e52b:	add    BYTE PTR [edi-0x7],bl
  41e52e:	outs   dx,DWORD PTR ds:[esi]
  41e52f:	ins    BYTE PTR es:[edi],dx
  41e530:	adc    eax,0x647260f1
  41e535:	fidiv  WORD PTR [edi+0x65]
  41e538:	arpl   WORD PTR [esp+esi*1+0x2b],bp
	...
  41e56b:	add    BYTE PTR [eax],al
  41e56d:	add    BYTE PTR [edx],dh
  41e56f:	cdq    
  41e570:	(bad)  
  41e571:	sub    dl,BYTE PTR [edx+0x63000404]
  41e577:	lods   al,BYTE PTR ds:[esi]
  41e578:	add    DWORD PTR [ecx+0x46],edx
  41e57b:	gs cs jo 0x41e5bd
  41e57f:	pop    edx
  41e580:	adc    al,0x6d
  41e582:	dec    ebp
  41e583:	lea    edx,ds:0x2a7a1363
  41e589:	jbe    0x41e5c5
  41e58b:	and    BYTE PTR [esi],0x65
  41e58e:	lods   al,BYTE PTR ds:[esi]
  41e590:	xor    al,0x63
  41e592:	aaa    
  41e593:	mov    esp,DWORD PTR [ebx]
  41e595:	push   eax
  41e596:	adc    DWORD PTR [ebp+0x17],esi
  41e599:	dec    DWORD PTR [bx+si+0x6328]
  41e59e:	arpl   WORD PTR [ebx+0x26],di
  41e5a1:	inc    ecx
  41e5a2:	or     ecx,DWORD PTR [ebp+0x2e]
  41e5a5:	gs (bad) 
  41e5a7:	in     eax,0x2c
  41e5a9:	je     0x41e5a5
  41e5ab:	inc    ebp
  41e5ac:	sbb    edx,DWORD PTR [eax-0xf]
  41e5af:	inc    esp
  41e5b0:	push   ss
  41e5b1:	addr16 iret 
  41e5b3:	dec    ecx
  41e5b4:	and    eax,0x26fb6363
  41e5b9:	inc    ecx
  41e5ba:	ror    DWORD PTR [ecx+0x23],1
  41e5bd:	je     0x41e57d
  41e5bf:	lock sub al,0x69
  41e5c2:	(bad)  
  41e5c3:	out    dx,al
  41e5c4:	xor    esi,DWORD PTR [edx-0x36]
  41e5c7:	out    dx,al
  41e5c8:	sub    ch,BYTE PTR [esi+eax*8+0x7]
  41e5cc:	daa    
  41e5cd:	add    BYTE PTR [eax+0x5f4201],dl
	...
  41e603:	add    BYTE PTR [eax-0x4c8fe90d],al
  41e609:	call   0x6527:0x7a762c
  41e610:	jle    0x41e5be
  41e612:	xor    ah,BYTE PTR [ebx-0x6f]
  41e615:	add    eax,0x266f12cc
  41e61a:	fldcw  WORD PTR [eax]
  41e61c:	xchg   ebx,eax
  41e61d:	adc    eax,eax
  41e61f:	adc    eax,0x26c4297c
  41e624:	inc    eax
  41e625:	add    eax,0x271c289a
  41e62a:	retf   0x4011
  41e62d:	and    al,0xba
  41e62f:	sub    BYTE PTR [eax+edx*1],dl
  41e632:	mov    esi,0x99351c17
  41e637:	sub    al,0x2d
  41e639:	sub    al,0x8b
  41e63b:	sub    BYTE PTR [esi+0x20],al
  41e63e:	out    0x32,eax
  41e640:	inc    eax
  41e641:	inc    esp
  41e642:	call   0x1133:0x951e0412
  41e649:	sub    al,0x8c
  41e64b:	and    al,0x11
  41e64d:	sbb    al,0x9b
  41e64f:	cs cli 
  41e651:	pop    ds
  41e652:	jge    0x41e687
  41e654:	icebp  
  41e655:	sub    ebx,DWORD PTR [ebp+0x2d]
  41e658:	pop    es
  41e659:	and    BYTE PTR [esi+0x29],al
  41e65c:	arpl   WORD PTR ds:0x56303e7,ax
  41e662:	out    0x3,eax
  41e664:	arpl   WORD PTR ds:0x3e7,ax
	...
  41e69a:	arpl   WORD PTR ds:0x56303e7,ax
  41e6a0:	out    0x3,eax
  41e6a2:	arpl   WORD PTR ds:0x56303e7,ax
  41e6a8:	out    0x3,eax
  41e6aa:	arpl   WORD PTR ds:0x56303e7,ax
  41e6b0:	out    0x3,eax
  41e6b2:	arpl   WORD PTR ds:0x56303e7,ax
  41e6b8:	out    0x3,eax
  41e6ba:	arpl   WORD PTR ds:0x56303e7,ax
  41e6c0:	add    cl,ch
  41e6c2:	pusha  
  41e6c3:	add    eax,0x560e900
  41e6c8:	add    cl,ch
  41e6ca:	pusha  
  41e6cb:	add    eax,0x560e900
  41e6d0:	add    cl,ch
  41e6d2:	pusha  
  41e6d3:	add    eax,0x560e900
  41e6d8:	add    cl,ch
  41e6da:	pusha  
  41e6db:	add    eax,0x560e900
  41e6e0:	add    cl,ch
  41e6e2:	pusha  
  41e6e3:	add    eax,0x560e900
  41e6e8:	add    cl,ch
  41e6ea:	pusha  
  41e6eb:	add    eax,0x560e900
  41e6f0:	add    cl,ch
  41e6f2:	pusha  
  41e6f3:	add    eax,0x560e900
  41e6f8:	add    cl,ch
  41e6fa:	pusha  
  41e6fb:	add    eax,0xe900
	...
  41e730:	pusha  
  41e731:	add    eax,0x560e900
  41e736:	add    cl,ch
  41e738:	pusha  
  41e739:	add    eax,0x560e900
  41e73e:	add    cl,ch
  41e740:	pusha  
  41e741:	add    eax,0x560e900
  41e746:	add    cl,ch
  41e748:	pusha  
  41e749:	add    eax,0x560e900
  41e74e:	add    cl,ch
  41e750:	pusha  
  41e751:	add    eax,0x560e900
  41e756:	add    cl,ch
  41e758:	pusha  
  41e759:	add    eax,0x560e900
  41e75e:	add    cl,ch
  41e760:	pusha  
  41e761:	add    eax,0x560e900
  41e766:	add    cl,ch
  41e768:	pusha  
  41e769:	add    eax,0x80a0000
  41e76e:	add    BYTE PTR [eax],al
  41e770:	cli    
  41e771:	pop    es
  41e772:	add    BYTE PTR [eax],al
  41e774:	cli    
  41e775:	pop    es
  41e776:	add    BYTE PTR [eax],al
  41e778:	or     cl,BYTE PTR [eax]
  41e77a:	add    BYTE PTR [eax],al
  41e77c:	or     cl,BYTE PTR [eax]
  41e77e:	add    BYTE PTR [eax],al
  41e780:	cli    
  41e781:	pop    es
  41e782:	add    BYTE PTR [eax],al
  41e784:	cli    
  41e785:	pop    es
  41e786:	add    BYTE PTR [eax],al
  41e788:	retf   0x7
  41e78b:	add    dl,cl
  41e78d:	pop    es
  41e78e:	add    BYTE PTR [eax],al
  41e790:	mov    edx,0x7
	...
  41e7c5:	add    BYTE PTR [edx-0x35fffff9],bh
  41e7cb:	pop    es
  41e7cc:	add    BYTE PTR [eax],al
  41e7ce:	retf   0x7
  41e7d1:	add    BYTE PTR [edx-0x45fffff9],bh
  41e7d7:	pop    es
  41e7d8:	add    BYTE PTR [eax],al
  41e7da:	mov    al,BYTE PTR [edi]
  41e7dc:	add    BYTE PTR [eax],al
  41e7de:	mov    al,BYTE PTR [edi]
  41e7e0:	add    BYTE PTR [eax],al
  41e7e2:	jp     0x41e7eb
  41e7e4:	add    BYTE PTR [eax],al
  41e7e6:	jp     0x41e7ef
  41e7e8:	add    BYTE PTR [eax],al
  41e7ea:	mov    al,BYTE PTR [edi]
  41e7ec:	add    BYTE PTR [eax],al
  41e7ee:	mov    al,BYTE PTR [edi]
  41e7f0:	add    BYTE PTR [eax],al
  41e7f2:	jp     0x41e7fb
  41e7f4:	add    BYTE PTR [eax],al
  41e7f6:	jp     0x41e7ff
  41e7f8:	add    BYTE PTR [eax],al
  41e7fa:	dec    edx
  41e7fb:	pop    es
  41e7fc:	add    BYTE PTR [eax],al
  41e7fe:	dec    edx
  41e7ff:	pop    es
  41e800:	add    BYTE PTR [eax],al
  41e802:	cmp    al,BYTE PTR [edi]
  41e804:	add    BYTE PTR [eax],al
  41e806:	cmp    al,BYTE PTR [edi]
  41e808:	add    BYTE PTR [eax],al
  41e80a:	dec    edx
  41e80b:	pop    es
  41e80c:	add    BYTE PTR [eax],al
  41e80e:	dec    edx
  41e80f:	pop    es
  41e810:	add    BYTE PTR [eax],al
  41e812:	cmp    al,BYTE PTR [edi]
  41e814:	add    BYTE PTR [eax],al
  41e816:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41e81d:	add    BYTE PTR [ebx-0x64],ah
  41e820:	add    DWORD PTR [eax],eax
  41e822:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
	...
  41e859:	add    BYTE PTR [eax],al
  41e85b:	add    BYTE PTR [ebx-0x64],ah
  41e85e:	add    DWORD PTR [eax],eax
  41e860:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41e867:	add    BYTE PTR [ebx-0x64],ah
  41e86a:	add    DWORD PTR [eax],eax
  41e86c:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41e873:	add    BYTE PTR [ebx-0x64],ah
  41e876:	add    DWORD PTR [eax],eax
  41e878:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41e87f:	add    BYTE PTR [ebx-0x64],ah
  41e882:	add    DWORD PTR [eax],eax
  41e884:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41e88b:	add    BYTE PTR [ebx-0x64],ah
  41e88e:	add    DWORD PTR [eax],eax
  41e890:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41e897:	add    BYTE PTR [ebx-0x64],ah
  41e89a:	add    DWORD PTR [eax],eax
  41e89c:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41e8a3:	add    BYTE PTR [ebx-0x64],ah
  41e8a6:	add    DWORD PTR [eax],eax
  41e8a8:	arpl   WORD PTR [ebp+0x25c442e6],bx
  41e8ae:	ins    DWORD PTR es:[edi],dx
  41e8af:	retf   
  41e8b0:	inc    esp
  41e8b1:	retf   0xbab8
  41e8b4:	jmp    0x41e88f
  41e8b6:	das    
  41e8b7:	xor    dh,BYTE PTR [ebx+0x25]
  41e8ba:	ins    DWORD PTR es:[edi],dx
  41e8bb:	retf   
  41e8bc:	dec    esp
  41e8bd:	popf   
  41e8be:	out    0x42,al
	...
  41e8f0:	add    BYTE PTR [eax],al
  41e8f2:	mov    esp,0xa3046705
  41e8f7:	add    eax,0x55303c7
  41e8fc:	fild   WORD PTR [ebx]
  41e8fe:	addr16 add eax,0x921403e9
  41e904:	out    0x3,eax
  41e906:	jecxz  0x41e90c
  41e908:	out    0x3,eax
  41e90a:	mov    ds:0x4303e705,eax
  41e90f:	add    eax,0x55303e7
  41e914:	out    0x3,eax
  41e916:	pop    ebx
  41e917:	add    eax,0x55f03e7
  41e91c:	out    0x3,eax
  41e91e:	popa   
  41e91f:	add    eax,0x91d403e7
  41e924:	out    0x83,eax
  41e926:	arpl   WORD PTR ds:0x56343e7,ax
  41e92c:	out    0xe3,eax
  41e92e:	mov    esp,0xb4f3e791
  41e933:	xchg   ecx,eax
  41e934:	out    0xb,eax
  41e936:	arpl   WORD PTR ds:0x91a4ffe7,ax
  41e93c:	out    0x5,eax
  41e93e:	arpl   WORD PTR ds:0x56304e7,ax
  41e944:	addr16 add al,0x63
  41e947:	add    eax,0x56303a7
  41e94c:	mov    DWORD PTR [ebx],0x3d70563
  41e952:	arpl   WORD PTR ds:0x3ef,ax
	...
  41e988:	arpl   WORD PTR ds:0x56303e3,ax
  41e98e:	jmp    0xe8474c96
  41e993:	add    esp,DWORD PTR [ebx+0x5]
  41e996:	call   ebx
  41e998:	test   ch,ah
  41e99a:	fdivrp st(3),st
  41e99c:	pop    esp
  41e99d:	add    eax,0xe817f000
  41e9a2:	push   ds
  41e9a3:	shr    BYTE PTR [edi],1
  41e9a5:	or     bh,bh
  41e9a7:	loop   0x41e9bf
  41e9a9:	fbld   TBYTE PTR [ecx]
  41e9ab:	add    ebp,DWORD PTR ds:0x35d201ff
  41e9b1:	fisub  WORD PTR [eax]
  41e9b3:	iret   
  41e9b4:	xor    ah,bl
  41e9b6:	and    eax,0x60312e7
  41e9bb:	mov    esp,0xd422dc33
  41e9c0:	repz sti 
  41e9c2:	add    ch,BYTE PTR [ebp+0x523dd24]
  41e9c8:	repz cld 
  41e9ca:	add    eax,DWORD PTR [edx]
  41e9cc:	in     al,dx
  41e9cd:	std    
  41e9ce:	add    al,ch
  41e9d0:	or     WORD PTR [esi],ax
  41e9d3:	loope  0x41ea3b
  41e9d5:	add    DWORD PTR [esi],ecx
  41e9d7:	not    bh
  41e9d9:	cmc    
  41e9da:	adc    dl,dh
  41e9dc:	(bad)  
  41e9dd:	in     eax,dx
  41e9de:	sbb    esp,esp
  41e9e0:	mov    al,0xfe
  41e9e2:	adc    al,0xe9
  41e9e4:	mov    ah,0x6
  41e9e6:	sbb    edi,esi
  41e9e8:	arpl   cx,di
  41e9ea:	push   es
  41e9eb:	test   DWORD PTR [eax],0x0
	...
  41ea1d:	add    BYTE PTR [esi+0x61f000fd],ch
  41ea23:	add    al,BYTE PTR [esi]
  41ea25:	repz (bad) 
  41ea27:	cld    
  41ea28:	(bad)  
  41ea29:	shl    BYTE PTR [ebp-0x4d30dc0e],1
  41ea2f:	jmp    0x41ea55
  41ea31:	mov    ebx,0xc22cf084
  41ea36:	nop
  41ea37:	jmp    0x1826:0xdb930834
  41ea3e:	jle    0x41ea2c
  41ea40:	sbb    al,0xe9
  41ea42:	pop    esp
  41ea43:	pop    DWORD PTR [eax]
  41ea45:	jmp    0x41efaa
  41ea4a:	cmp    al,BYTE PTR [edi*8-0x16fc101]
  41ea51:	add    BYTE PTR [esi+0x4],cl
  41ea54:	std    
  41ea55:	add    BYTE PTR [esi],bh
  41ea57:	nop
  41ea58:	(bad)  
  41ea59:	(bad)  
  41ea5a:	ds add al,0x0
  41ea5d:	add    BYTE PTR [edx],bh
  41ea5f:	add    al,0xfd
  41ea61:	dec    DWORD PTR [edx]
  41ea63:	nop
  41ea64:	std    
  41ea65:	dec    DWORD PTR [edx]
  41ea67:	nop
  41ea68:	inc    BYTE PTR [eax]
  41ea6a:	dec    BYTE PTR [edi-0x7005ff02]
  41ea70:	std    
  41ea71:	dec    DWORD PTR [esi]
  41ea73:	nop
  41ea74:	std    
  41ea75:	add    dh,bh
  41ea77:	add    edi,ebp
  41ea79:	add    dl,bh
  41ea7b:	add    eax,DWORD PTR [eax]
  41ea7d:	add    esi,edi
  41ea7f:	add    eax,DWORD PTR [eax]
	...
  41eab1:	add    BYTE PTR [eax],al
  41eab3:	add    dh,cl
  41eab5:	(bad)  
  41eab6:	std    
  41eab7:	dec    edx
  41eab9:	(bad)  
  41eaba:	std    
  41eabb:	add    BYTE PTR [edx-0x45ff0271],bh
  41eac1:	(bad)  
  41eac2:	(bad)  
  41eac3:	dec    edx
  41eac5:	(bad)  
  41eac6:	(bad)  
  41eac7:	dec    edx
  41eac9:	add    edi,ebp
  41eacb:	add    BYTE PTR [edx-0x41ff02fd],bh
  41ead1:	(bad)  
  41ead2:	std    
  41ead3:	add    BYTE PTR [esi+0x7efffd03],cl
  41ead9:	add    eax,DWORD PTR [eax]
  41eadb:	add    DWORD PTR [esi+0x3],edi
  41eade:	add    BYTE PTR [ecx],al
  41eae0:	jle    0x41eae5
  41eae2:	std    
  41eae3:	dec    DWORD PTR [edx+0x7e000003]
  41eae9:	(bad)  
  41eaea:	std    
  41eaeb:	(bad)  
  41eaec:	jle    0x41ea7d
  41eaee:	(bad)  
  41eaef:	(bad)  
  41eaf0:	jp     0x41eaf5
  41eaf2:	add    BYTE PTR [ecx],al
  41eaf4:	arpl   WORD PTR [ecx+eax*1-0x256ab01],bx
  41eafb:	(bad)  
  41eafc:	arpl   WORD PTR [eax-0x639cffff],sp
  41eb02:	add    edi,edi
  41eb04:	arpl   WORD PTR [ebp+edi*8+0x19c63fe],bx
  41eb0b:	add    BYTE PTR [edx-0x64],ah
  41eb0e:	add    DWORD PTR [eax],eax
  41eb10:	bound  ebx,QWORD PTR [ebp+edi*8+0x1a11cff]
  41eb17:	inc    DWORD PTR [eax]
	...
  41eb49:	add    BYTE PTR [ebx-0x64],ah
  41eb4c:	add    edi,edi
  41eb4e:	or     al,0x9d
  41eb50:	std    
  41eb51:	inc    BYTE PTR [ecx+ebp*4]
  41eb54:	add    DWORD PTR [eax],eax
  41eb56:	bound  ebx,QWORD PTR [ebp+edi*8+0x1a8f4ff]
  41eb5d:	add    BYTE PTR [ebx-0x60],ah
  41eb60:	std    
  41eb61:	jmp    DWORD PTR [ebx-0x58]
  41eb64:	std    
  41eb65:	(bad)  
  41eb66:	fsub   QWORD PTR [eax-0x579c0103]
  41eb6c:	add    edi,edi
  41eb6e:	int3   
  41eb6f:	pushf  
  41eb70:	add    edi,edi
  41eb72:	arpl   WORD PTR [eax-0x5f9c0003],bp
  41eb78:	add    DWORD PTR [eax],eax
  41eb7a:	bound  ebp,QWORD PTR [eax-0x5f530003]
  41eb80:	std    
  41eb81:	(bad)  
  41eb82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb83:	pushf  
  41eb84:	std    
  41eb85:	(bad)  
  41eb86:	arpl   WORD PTR [eax-0x636b0003],sp
  41eb8c:	std    
  41eb8d:	jmp    DWORD PTR [ebx-0x64]
  41eb90:	std    
  41eb91:	jmp    DWORD PTR [ebx-0x64]
  41eb94:	add    DWORD PTR [eax],eax
  41eb96:	arpl   WORD PTR [eax-0x638b00ff],sp
  41eb9c:	std    
  41eb9d:	(bad)  
  41eb9e:	ins    BYTE PTR es:[edi],dx
  41eb9f:	add    eax,0x56303e7
  41eba4:	jecxz  0x41eba9
  41eba6:	pop    esp
  41eba7:	add    eax,0x85738407
  41ebac:	out    0x83,eax
	...
  41ebde:	add    BYTE PTR [eax],al
  41ebe0:	arpl   WORD PTR [ebp+0x56383e7],ax
  41ebe6:	pop    es
  41ebe7:	test   BYTE PTR [ebx+0x5],dl
  41ebea:	out    0x3,eax
  41ebec:	push   ebx
  41ebed:	add    eax,0x5630407
  41ebf2:	mov    DWORD PTR [ebx],0x83c78553
  41ebf8:	arpl   WORD PTR [ebp-0x7a9cfc39],ax
  41ebfe:	mov    DWORD PTR [ebx-0x7c187a8d],0x3e78573
  41ec08:	arpl   WORD PTR [ebp-0x7a9c7c19],ax
  41ec0e:	out    0x3,eax
  41ec10:	push   ebx
  41ec11:	add    eax,0x5630407
  41ec16:	pop    es
  41ec17:	add    al,0x73
  41ec19:	test   edi,esp
  41ec1b:	xor    DWORD PTR [ebx+0x5],0x7
  41ec1f:	add    al,0x73
  41ec21:	add    eax,0x85638407
  41ec26:	out    0x3,eax
  41ec28:	arpl   WORD PTR ds:0x856303e7,ax
  41ec2e:	out    0x83,eax
  41ec30:	arpl   WORD PTR ds:0x55383c7,ax
  41ec36:	out    0x3,eax
  41ec38:	jae    0x41ebbf
  41ec3a:	mov    DWORD PTR [ebx],0x3c70573
  41ec40:	arpl   WORD PTR [ebp+0x3e7],ax
	...
  41ec76:	arpl   WORD PTR ds:0x55383e7,ax
  41ec7c:	add    cl,cl
  41ec7e:	loopne 0x41ec84
  41ec80:	add    cl,ch
  41ec82:	loopne 0x41ec78
  41ec84:	jg     0x41ec6f
  41ec86:	pusha  
  41ec87:	cmc    
  41ec88:	jg     0x41ec93
  41ec8a:	out    0x5,eax
  41ec8c:	add    cl,ch
  41ec8e:	pusha  
  41ec8f:	add    eax,0xf5e70900
  41ec94:	dec    DWORD PTR [eax]
  41ec96:	pop    edi
  41ec97:	cmc    
  41ec98:	jg     0x41ec83
  41ec9a:	pusha  
  41ec9b:	cmc    
  41ec9c:	dec    DWORD PTR [eax]
  41ec9e:	fild   WORD PTR ds:0xf560e980
  41eca4:	jg     0x41ec8f
  41eca6:	loopne 0x41ec9d
  41eca8:	jg     0x41ec93
  41ecaa:	loopne 0x41ecb1
  41ecac:	add    cl,ch
  41ecae:	pusha  
  41ecaf:	cmc    
  41ecb0:	jg     0x41ec9b
  41ecb2:	loopne 0x41ecb9
  41ecb4:	or     cl,0x60
  41ecb7:	add    eax,0xf5e0c900
  41ecbc:	jg     0x41ec87
  41ecbe:	loopne 0x41ecb5
  41ecc0:	dec    eax
  41ecc2:	pusha  
  41ecc3:	add    eax,0x5e0e900
  41ecc8:	add    cl,ch
  41ecca:	pusha  
  41eccb:	add    eax,0x5df0980
  41ecd0:	add    cl,ch
  41ecd2:	loopne 0x41ecc9
  41ecd4:	jg     0x41ecbf
  41ecd6:	pusha  
  41ecd7:	cmc    
  41ecd8:	dec    DWORD PTR [eax]
	...
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	addr16 add eax,0xf55f0980
  41ed12:	dec    DWORD PTR [eax]
  41ed14:	out    0x5,eax
  41ed16:	or     cl,0x60
  41ed19:	add    eax,0xf560c980
  41ed1e:	(bad)  
  41ed1f:	call   0xe941e304
  41ed24:	pusha  
  41ed25:	add    eax,0x887a0000
  41ed2a:	add    BYTE PTR [eax+0x88aa],al
  41ed30:	mov    cl,BYTE PTR [eax]
  41ed32:	add    BYTE PTR [eax-0x7feff766],al
  41ed38:	pop    edx
  41ed39:	adc    DWORD PTR [eax],0x10884a80
  41ed3f:	add    BYTE PTR [edx+0x6],al
  41ed42:	add    BYTE PTR [eax],al
  41ed44:	cmp    al,BYTE PTR [esi]
  41ed46:	add    cl,BYTE PTR [eax]
  41ed48:	cmp    cl,BYTE PTR [eax]
  41ed4a:	add    BYTE PTR [eax],al
  41ed4c:	xor    cl,BYTE PTR [eax]
  41ed4e:	add    cl,BYTE PTR [eax]
  41ed50:	dec    edx
  41ed51:	push   es
  41ed52:	add    BYTE PTR [eax],cl
  41ed54:	cmp    cl,BYTE PTR [eax]
  41ed56:	add    BYTE PTR [eax],al
  41ed58:	xor    al,BYTE PTR [esi]
  41ed5a:	add    al,BYTE PTR [eax]
  41ed5c:	or     al,BYTE PTR [esi]
  41ed5e:	add    BYTE PTR [eax],cl
  41ed60:	add    cl,BYTE PTR [eax]
  41ed62:	add    al,BYTE PTR [eax]
  41ed64:	add    cl,BYTE PTR [eax]
  41ed66:	add    BYTE PTR [eax],cl
  41ed68:	adc    cl,BYTE PTR [eax]
  41ed6a:	add    BYTE PTR [eax],cl
  41ed6c:	or     cl,BYTE PTR [eax]
  41ed6e:	add    al,BYTE PTR [eax]
	...
  41eda0:	add    BYTE PTR [eax],al
  41eda2:	add    al,BYTE PTR [esi]
  41eda4:	add    cl,BYTE PTR [eax]
  41eda6:	add    cl,BYTE PTR [eax]
  41eda8:	add    al,BYTE PTR [eax]
  41edaa:	cli    
  41edab:	pop    es
  41edac:	add    cl,BYTE PTR [eax]
  41edae:	rol    BYTE PTR ds:0x7ca0000,cl
  41edb4:	add    BYTE PTR [eax],cl
  41edb6:	ret    0x7
  41edb9:	add    BYTE PTR [edx-0x35f7fdfb],bh
  41edbf:	add    eax,0x5ca0000
  41edc4:	add    al,BYTE PTR [eax]
  41edc6:	mov    edx,0xb2080207
  41edcb:	pop    es
  41edcc:	add    cl,BYTE PTR [eax]
  41edce:	xchg   edx,eax
  41edcf:	add    eax,0xa6630002
  41edd4:	(bad)  
  41edd5:	call   FWORD PTR [ebx-0x62]
  41edd8:	inc    DWORD PTR [ecx]
  41edda:	arpl   WORD PTR [esi-0x699cfdff],bx
  41ede0:	(bad)  
  41ede1:	jmp    FWORD PTR [ebx-0x5a]
  41ede4:	add    DWORD PTR [eax],eax
  41ede6:	arpl   WORD PTR [esi-0x61a4fe01],sp
  41edec:	(bad)  
  41eded:	jmp    DWORD PTR [ebx-0x64]
  41edf0:	add    DWORD PTR [eax],eax
  41edf2:	imul   ebx,DWORD PTR [edi+edi*8+0x19c5b01],0x0
  41edfa:	pop    ebx
  41edfb:	xchg   esp,eax
  41edfc:	add    DWORD PTR [edx],eax
  41edfe:	arpl   WORD PTR [edi+edi*8+0x19c63ff],dx
  41ee05:	add    al,BYTE PTR [eax]
	...
  41ee37:	add    BYTE PTR [ebx-0x64],ah
  41ee3a:	inc    DWORD PTR [ecx]
  41ee3c:	pop    ebx
  41ee3d:	pushf  
  41ee3e:	(bad)  
  41ee3f:	jmp    FWORD PTR [ebx-0x64]
  41ee42:	add    DWORD PTR [eax],eax
  41ee44:	arpl   WORD PTR [edi+edi*8+0x1a463ff],bx
  41ee4b:	add    ah,BYTE PTR [ebx-0x6c]
  41ee4e:	inc    DWORD PTR [ecx]
  41ee50:	imul   ebx,DWORD PTR [edi+edi*8+0x1a46bff],0x0
  41ee58:	pop    ebx
  41ee59:	pushf  
  41ee5a:	(bad)  
  41ee5b:	jmp    DWORD PTR [ebx-0x64]
  41ee5e:	add    DWORD PTR [eax],eax
  41ee60:	arpl   WORD PTR [ecx+eax*1-0x5b94fe],dx
  41ee67:	call   FWORD PTR [ebx-0x64]
  41ee6a:	add    DWORD PTR [edx],eax
  41ee6c:	arpl   WORD PTR [ecx+eax*1-0x6b9500],bx
  41ee73:	add    DWORD PTR [ebx-0x5c],ebp
  41ee76:	add    DWORD PTR [eax],eax
  41ee78:	arpl   WORD PTR [edi+edi*8-0x18fa9cff],sp
  41ee7f:	add    DWORD PTR [ecx+0x5],esp
  41ee82:	out    dx,eax
  41ee83:	add    esp,DWORD PTR [ebx-0x3]
  41ee86:	out    0x3,al
  41ee88:	popa   
  41ee89:	std    
  41ee8a:	fiadd  WORD PTR [ecx]
  41ee8c:	arpl   bp,di
  41ee8e:	out    dx,al
  41ee8f:	add    DWORD PTR [ebx+0x5],esp
  41ee92:	out    0x3,eax
  41ee94:	popa   
  41ee95:	std    
  41ee96:	fiadd  WORD PTR [ecx]
  41ee98:	popa   
  41ee99:	add    eax,0x3df
	...
  41eece:	arpl   WORD PTR ds:0xfd6103ef,ax
  41eed4:	out    0x5,al
  41eed6:	popa   
  41eed7:	add    eax,0x5cce3e8
  41eedc:	push   0x688a44e4
  41eee1:	in     al,0x3c
  41eee3:	mov    ah,BYTE PTR [edi+0x4]
  41eee6:	arpl   WORD PTR ds:0x5ace467,ax
  41eeec:	push   0xe804e304
  41eef1:	add    esp,ebx
  41eef3:	add    al,0xe8
  41eef5:	jecxz  0x41ef0b
  41eef7:	mov    ah,bh
  41eef9:	add    esp,DWORD PTR [ebx+0x5]
  41eefc:	out    0xe3,eax
  41eefe:	test   BYTE PTR ds:0x57ce3e7,al
  41ef04:	push   0x680574e4
  41ef09:	add    al,0x63
  41ef0b:	add    eax,0x56303e7
  41ef10:	addr16 add al,0xe3
  41ef13:	add    al,0xe8
  41ef15:	add    esp,ebx
  41ef17:	add    al,0xe8
  41ef19:	add    esp,DWORD PTR [ebx+0x5]
  41ef1c:	out    0xe3,eax
  41ef1e:	les    ecx,FWORD PTR [ecx+0x4e303e7]
  41ef24:	call   0x47240c
  41ef29:	imul   esp,DWORD PTR [edi+0x5],0x8560e900
  41ef30:	add    al,ch
	...
  41ef62:	add    BYTE PTR [eax],al
  41ef64:	or     BYTE PTR [ecx-0x76809603],0xfd
  41ef6b:	push   0xe8008567
  41ef70:	pusha  
  41ef71:	add    eax,0x89876900
  41ef76:	std    
  41ef77:	imul   ebx,DWORD PTR [edi-0x7b],0x8980e900
  41ef7e:	std    
  41ef7f:	imul   edi,DWORD PTR [edi+0x9],0x9406800
  41ef86:	add    BYTE PTR [eax+0x60],ch
  41ef89:	add    eax,0x85606900
  41ef8e:	add    al,ch
  41ef90:	pusha  
  41ef91:	test   DWORD PTR [eax],eax
  41ef93:	jmp    0x6841f8d8
  41ef98:	inc    eax
  41ef99:	or     DWORD PTR [eax],eax
  41ef9b:	push   0xe9000560
  41efa0:	pusha  
  41efa1:	add    eax,0x560e900
  41efa6:	add    cl,ch
  41efa8:	add    BYTE PTR [ecx],cl
  41efaa:	add    BYTE PTR [ecx+0x0],ch
  41efad:	mov    ebp,edi
  41efaf:	imul   esp,DWORD PTR [eax-0x7b],0x85606800
  41efb6:	add    al,ch
  41efb8:	pusha  
  41efb9:	add    eax,0x900e800
  41efbe:	add    BYTE PTR [eax+0x0],ch
  41efc1:	mov    ebp,edi
  41efc3:	push   0x69fd88c0
	...
  41eff8:	add    BYTE PTR [eax],al
  41effa:	pusha  
  41effb:	add    eax,0x8c06800
  41f000:	add    BYTE PTR [eax+0x60],ch
  41f003:	add    eax,0x4cb0000
  41f008:	add    BYTE PTR [eax],al
  41f00a:	retf   0xfda4
  41f00d:	(bad)  
  41f00e:	mov    ebx,0xbb008004
  41f013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f014:	std    
  41f015:	dec    DWORD PTR [edx]
  41f017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f018:	jge    0x41f01a
  41f01a:	or     eax,DWORD PTR [eax+eax*4]
  41f01d:	add    BYTE PTR [ebx-0x5c],bh
  41f020:	std    
  41f021:	(bad)  
  41f022:	cli    
  41f023:	mov    ds:0x48afffd,eax
  41f028:	add    BYTE PTR [eax],0x8b
  41f02b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f02c:	jge    0x41f02e
  41f02e:	cli    
  41f02f:	add    eax,DWORD PTR [eax]
  41f031:	add    BYTE PTR [edx+0x4],bh
  41f034:	add    BYTE PTR [eax],0x4a
  41f037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f038:	std    
  41f039:	dec    edx
  41f03b:	mov    eax,ds:0x33a007d
  41f040:	add    BYTE PTR [eax],al
  41f042:	cmp    al,BYTE PTR [ebx]
  41f044:	or     BYTE PTR [edx],al
  41f046:	dec    edx
  41f047:	add    al,0x8
  41f049:	add    cl,BYTE PTR [edx+0x3]
  41f04c:	add    BYTE PTR [edx+0x3a],al
  41f04f:	add    al,0x8
  41f051:	add    BYTE PTR [edx],bh
  41f053:	add    eax,DWORD PTR [eax]
  41f055:	add    BYTE PTR [edx],cl
  41f057:	add    al,0x0
  41f059:	inc    eax
  41f05a:	or     al,BYTE PTR [eax+ecx*1]
  41f05d:	add    al,BYTE PTR [eax]
	...
  41f08f:	add    dl,bh
  41f091:	add    cl,BYTE PTR [eax]
  41f093:	inc    eax
  41f094:	cli    
  41f095:	add    ecx,DWORD PTR [eax]
  41f097:	add    BYTE PTR [edx],cl
  41f099:	add    eax,DWORD PTR [eax]
  41f09b:	add    cl,BYTE PTR [edx]
  41f09d:	add    ecx,DWORD PTR [eax]
  41f09f:	inc    eax
  41f0a0:	cli    
  41f0a1:	add    al,BYTE PTR [eax]
  41f0a3:	inc    edx
  41f0a4:	cli    
  41f0a5:	add    ecx,DWORD PTR [eax]
  41f0a7:	inc    edx
  41f0a8:	retf   0x802
  41f0ab:	add    dl,cl
  41f0ad:	add    eax,DWORD PTR [eax]
  41f0af:	inc    eax
  41f0b0:	arpl   WORD PTR [esi-0x619effff],bx
  41f0b6:	add    DWORD PTR [eax],ecx
  41f0b8:	and    ebx,DWORD PTR [esi-0x61dcf7ff]
  41f0be:	add    DWORD PTR [eax],eax
  41f0c0:	arpl   WORD PTR [esi-0x61dcfffe],bx
  41f0c6:	add    cl,BYTE PTR [eax]
  41f0c8:	and    DWORD PTR [esi-0x61def7fe],ebx
  41f0ce:	add    al,BYTE PTR [eax]
  41f0d0:	popa   
  41f0d1:	sahf   
  41f0d2:	add    DWORD PTR [eax],ecx
  41f0d4:	and    DWORD PTR [esi-0x61dcfffe],ebx
  41f0da:	add    DWORD PTR [eax],eax
  41f0dc:	arpl   WORD PTR [esi-0x61deffff],bx
  41f0e2:	add    cl,BYTE PTR [eax]
  41f0e4:	popa   
  41f0e5:	sahf   
  41f0e6:	add    DWORD PTR [eax],eax
  41f0e8:	popa   
  41f0e9:	pushf  
  41f0ea:	add    DWORD PTR [eax],eax
  41f0ec:	mov    eax,ds:0x6308029c
  41f0f1:	pushf  
  41f0f2:	add    DWORD PTR [eax],ecx
	...
  41f124:	add    BYTE PTR [eax],al
  41f126:	arpl   WORD PTR [edx+eax*1+0x29ca100],bx
  41f12d:	add    BYTE PTR [ebx-0x64],ah
  41f130:	add    DWORD PTR [eax],eax
  41f132:	popa   
  41f133:	pushf  
  41f134:	add    DWORD PTR [eax],eax
  41f136:	mov    ds:0x6108019c,eax
  41f13b:	pushf  
  41f13c:	add    al,BYTE PTR [eax]
  41f13e:	mov    eax,ds:0xa308029c
  41f143:	pushf  
  41f144:	add    al,BYTE PTR [eax]
  41f146:	popa   
  41f147:	pushf  
  41f148:	add    DWORD PTR [eax],eax
  41f14a:	mov    ds:0xa108019c,eax
  41f14f:	pushf  
  41f150:	add    cl,BYTE PTR [eax]
  41f152:	popa   
  41f153:	pushf  
  41f154:	add    cl,BYTE PTR [eax]
  41f156:	mov    ds:0x6300029c,eax
  41f15b:	add    eax,0x36303e7
  41f160:	out    0x3,eax
  41f162:	pop    ebx
  41f163:	inc    ebx
  41f164:	out    0x2,eax
  41f166:	pop    ebx
  41f167:	inc    ebx
  41f168:	out    0x2,eax
  41f16a:	imul   eax,DWORD PTR ds:0x436303e7,0xffffffe7
  41f171:	add    bl,BYTE PTR [ebx+0x43]
  41f174:	out    0x3,eax
  41f176:	pop    ebx
  41f177:	add    esp,edi
  41f179:	add    esp,DWORD PTR [ebx+0x5]
  41f17c:	out    0x3,eax
  41f17e:	imul   eax,DWORD PTR [ebp-0x19],0x3
  41f182:	arpl   WORD PTR [ebx-0x19],ax
  41f185:	add    bl,BYTE PTR [ebx+0x5]
  41f188:	out    0x2,eax
	...
  41f1ba:	add    BYTE PTR [eax],al
  41f1bc:	arpl   WORD PTR [ebx],ax
  41f1be:	out    0x2,eax
  41f1c0:	arpl   WORD PTR [ebp-0x19],ax
  41f1c3:	add    ebx,DWORD PTR [ebx+0x5]
  41f1c6:	out    0x3,eax
  41f1c8:	arpl   WORD PTR ds:0x456b03e7,ax
  41f1ce:	out    0x4,eax
  41f1d0:	imul   eax,DWORD PTR [ebx],0xffffffe7
  41f1d3:	add    al,0x63
  41f1d5:	inc    ebp
  41f1d6:	test   DWORD PTR [ebx],0x3e6e563
  41f1dc:	mov    ds:0x6343e6e5,eax
  41f1e1:	add    eax,0xe5a343d7
  41f1e6:	out    0x3,al
  41f1e8:	mov    ds:0x6303d6e5,eax
  41f1ed:	add    eax,0xe5a343f7
  41f1f2:	out    0x3,al
  41f1f4:	mov    ds:0x6343e705,eax
  41f1f9:	in     eax,0xf6
  41f1fb:	inc    ebx
  41f1fc:	mov    ds:0xa303e705,eax
  41f201:	add    eax,0xe56303d7
  41f206:	(bad)  
  41f207:	fsub   DWORD PTR [eax+0x45]
  41f20a:	add    cl,ch
  41f20c:	and    BYTE PTR ds:0x560e920,al
  41f212:	and    cl,bh
  41f214:	and    BYTE PTR ds:0x560e900,al
  41f21a:	add    cl,bh
  41f21c:	pusha  
  41f21d:	inc    ebp
  41f21e:	add    cl,bl
	...
  41f250:	add    BYTE PTR [eax],al
  41f252:	and    BYTE PTR ds:0x520e920,al
  41f258:	add    cl,ch
  41f25a:	and    BYTE PTR [ebp+0x0],al
  41f25d:	fldenv [eax]
  41f25f:	add    eax,0x560f920
  41f264:	add    cl,bh
  41f266:	pusha  
  41f267:	inc    ebp
  41f268:	and    cl,bh
  41f26a:	pusha  
  41f26b:	inc    ebp
  41f26c:	and    cl,ch
  41f26e:	pusha  
  41f26f:	add    eax,0x4520d900
  41f274:	add    cl,ch
  41f276:	and    BYTE PTR [ebp+0x20],al
  41f279:	fldenv [eax]
  41f27b:	add    eax,0xc5a0e900
  41f280:	(bad)  
  41f281:	call   0xe961b826
  41f286:	pusha  
  41f287:	add    eax,0x5a0e920
  41f28c:	and    cl,bh
  41f28e:	pusha  
  41f28f:	add    eax,0xc560d900
  41f294:	pop    ds
  41f295:	jmp    0xd941b83a
  41f29a:	mov    al,ds:0x60e91fc5
  41f29f:	(bad)  
  41f2a2:	mov    al,ds:0x60f90005
  41f2a7:	add    eax,0xc560e920
  41f2ac:	(bad)  
  41f2ad:	call   0x61f852
  41f2b2:	or     cl,BYTE PTR [ecx]
  41f2b4:	add    BYTE PTR [eax],ah
	...
  41f2e6:	add    BYTE PTR [eax],al
  41f2e8:	or     cl,cl
  41f2ea:	(bad)  
  41f2eb:	dec    DWORD PTR [edx]
  41f2ed:	or     DWORD PTR [eax],eax
  41f2ef:	and    BYTE PTR [edx-0x35dfc038],bh
  41f2f5:	enter  0x3f,0xba
  41f2f9:	or     BYTE PTR [eax+0x20],al
  41f2fc:	retf   0x3fc8
  41f2ff:	add    dl,cl
  41f301:	enter  0x203f,0xca
  41f305:	or     BYTE PTR [eax],al
  41f307:	add    BYTE PTR [edx-0x75dfbff8],cl
  41f30d:	or     BYTE PTR [eax],al
  41f30f:	add    BYTE PTR [edx-0x75000038],cl
  41f315:	or     BYTE PTR [eax+0x20],al
  41f318:	mov    cl,al
  41f31a:	aas    
  41f31b:	add    BYTE PTR [edx-0x38],bh
  41f31e:	(bad)  
  41f31f:	(bad)  
  41f320:	jp     0x41f32a
  41f322:	inc    eax
  41f323:	add    BYTE PTR [edx+0x7a1fffc8],bl
  41f329:	or     BYTE PTR [eax],al
  41f32b:	add    BYTE PTR [edx-0x38],bh
  41f32e:	aas    
  41f32f:	and    BYTE PTR [edx+0x8],cl
  41f332:	add    BYTE PTR [eax],ah
  41f334:	pop    edx
  41f335:	or     BYTE PTR [eax+0x0],al
  41f338:	dec    edx
  41f339:	enter  0x1fff,0x3a
  41f33d:	or     BYTE PTR [eax],ah
  41f33f:	add    BYTE PTR [eax+0x8],cl
  41f342:	and    BYTE PTR [eax+ecx*2],al
  41f345:	cmp    ch,0x3
  41f348:	cmp    cl,BYTE PTR [eax]
	...
  41f37e:	cmp    al,BYTE PTR [eax-0x7ff70003]
  41f384:	std    
  41f385:	add    ecx,DWORD PTR [eax]
  41f387:	sbb    BYTE PTR ds:0x1d7ffa00,0x4
  41f38e:	arpl   WORD PTR [eax-0x7],si
  41f391:	pop    ds
  41f392:	outs   dx,BYTE PTR ds:[si]
  41f394:	add    DWORD PTR [eax],esp
  41f396:	arpl   WORD PTR [esi+0x1],bp
  41f399:	add    BYTE PTR [ebx+0x70],ah
  41f39c:	add    DWORD PTR [eax],eax
  41f39e:	pop    edi
  41f39f:	jo     0x41f3a2
  41f3a1:	add    BYTE PTR [ebx+0x6e],ah
  41f3a4:	add    DWORD PTR [eax],eax
  41f3a6:	pop    edi
  41f3a7:	jo     0x41f3aa
  41f3a9:	and    BYTE PTR [edi+0x70],ah
  41f3ac:	stc    
  41f3ad:	inc    esp
  41f3af:	ins    DWORD PTR es:[edi],dx
  41f3b0:	stc    
  41f3b1:	jmp    DWORD PTR [eax+0x70]
  41f3b4:	stc    
  41f3b5:	pop    ds
  41f3b6:	arpl   WORD PTR [eax+0x1],si
  41f3b9:	and    BYTE PTR [ebx+0x6e],ah
  41f3bc:	stc    
  41f3bd:	jmp    DWORD PTR [eax+0x70]
  41f3c0:	add    DWORD PTR [eax],eax
  41f3c2:	outs   dx,BYTE PTR ds:[si]
  41f3c4:	add    DWORD PTR [eax],esp
  41f3c6:	pop    edi
  41f3c7:	outs   dx,BYTE PTR ds:[esi]
  41f3c8:	stc    
  41f3c9:	pop    ds
  41f3ca:	addr16 jo 0x41f3ce
  41f3cd:	and    BYTE PTR [ebx+0x6e],ah
  41f3d0:	add    DWORD PTR [eax],esp
  41f3d2:	outs   dx,BYTE PTR ds:[si]
  41f3d4:	stc    
  41f3d5:	push   DWORD PTR [edi+ebp*2-0x7]
  41f3d9:	jmp    FWORD PTR [edi+ebp*2-0x7]
  41f3dd:	pop    ds
  41f3de:	pop    edi
  41f3df:	outs   dx,BYTE PTR ds:[esi]
  41f3e0:	stc    
  41f3e1:	pop    ds
	...
  41f412:	add    BYTE PTR [eax],al
  41f414:	arpl   WORD PTR [esi+0x1],bp
  41f417:	add    BYTE PTR [ebx+0x6c],ah
  41f41a:	add    DWORD PTR [eax],eax
  41f41c:	ins    BYTE PTR es:[di],dx
  41f41e:	stc    
  41f41f:	pop    ds
  41f420:	arpl   WORD PTR [ecx+eax*1+0x0],bp
  41f424:	ins    BYTE PTR es:[di],dx
  41f426:	stc    
  41f427:	pop    ds
  41f428:	arpl   WORD PTR [ecx+eax*1+0x20],bp
  41f42c:	arpl   WORD PTR [esi-0x7],bp
  41f42f:	jmp    DWORD PTR [eax+0x6e]
  41f432:	stc    
  41f433:	jmp    DWORD PTR [eax+0x6e]
  41f436:	add    DWORD PTR [eax],esp
  41f438:	pop    edi
  41f439:	add    eax,0x94303e9
  41f43e:	jmp    0xe9475746
  41f443:	add    eax,DWORD PTR [ebx+0x5]
  41f446:	out    0x3,eax
  41f448:	arpl   WORD PTR [ecx],cx
  41f44a:	out    0xfb,eax
  41f44c:	in     al,dx
  41f44d:	push   es
  41f44e:	out    0x3,eax
  41f450:	inc    ebx
  41f451:	add    eax,0x97cfbe7
  41f456:	jmp    0xe9c4c956
  41f45b:	sti    
  41f45c:	ins    BYTE PTR es:[edi],dx
  41f45d:	add    eax,0x964fbe7
  41f462:	jmp    0xe9c4b162
  41f467:	add    esp,DWORD PTR [ebx+0x9]
  41f46a:	jmp    0xe74b416a
  41f46f:	add    eax,DWORD PTR [ebx+0x7cfbe709]
  41f475:	add    eax,0x3e7
	...
  41f4aa:	arpl   WORD PTR ds:0x56303e9,ax
  41f4b0:	jmp    0xe74b59b0
  41f4b5:	add    esp,DWORD PTR [ebx+0x5]
  41f4b8:	jmp    0xe74749b8
  41f4bd:	add    eax,DWORD PTR [ebx+0x9]
  41f4c0:	out    0xfb,eax
  41f4c2:	fs sub cl,0x3
  41f4c6:	arpl   WORD PTR [ecx],cx
  41f4c8:	out    0xfb,eax
  41f4ca:	push   esp
  41f4cb:	push   es
  41f4cc:	out    0xfb,eax
  41f4ce:	dec    esp
  41f4cf:	sub    cl,0x3
  41f4d2:	add    DWORD PTR ds:0x123cf427,0xffffffe7
  41f4d9:	repz xor al,0x82
  41f4dc:	out    0x3,eax
  41f4de:	addr16 add eax,0x1560f427
  41f4e4:	add    cl,ch
  41f4e6:	pusha  
  41f4e7:	add    eax,0x820f2910
  41f4ec:	or     eax,0x56729
  41f4f1:	jmp    0x2951fa56
  41f4f6:	or     DWORD PTR [bx+si],eax
  41f4f9:	jmp    0x2951fe5e
  41f4fe:	test   DWORD PTR ds:0x5f0e910,0x5d0e900
  41f508:	adc    BYTE PTR [ecx],ch
  41f50a:	iret   
  41f50b:	add    eax,0xe900
	...
  41f540:	rol    BYTE PTR [ecx+0x560a9fd],1
  41f546:	add    cl,ch
  41f548:	pusha  
  41f549:	or     DWORD PTR [eax],edx
  41f54b:	test   eax,0xe9100560
  41f550:	mov    al,0x81
  41f552:	or     eax,0xfd81b0a9
  41f557:	jmp    0xa941faec
  41f55c:	pusha  
  41f55d:	or     DWORD PTR [eax],eax
  41f55f:	test   eax,0xe9100960
  41f564:	nop
  41f565:	add    eax,0x8170a910
  41f56a:	std    
  41f56b:	jmp    0xe941fad0
  41f570:	pusha  
  41f571:	add    eax,0x960a900
  41f576:	adc    BYTE PTR [ecx-0x16effaa0],ch
  41f57c:	push   eax
  41f57d:	or     DWORD PTR ds:0x55729,0x960e9
  41f587:	sub    DWORD PTR [edi],esi
  41f589:	add    eax,0x960e900
  41f58e:	add    BYTE PTR [eax],al
  41f590:	cmp    dh,BYTE PTR [ebp+0x1]
  41f593:	adc    BYTE PTR [edx],bh
  41f595:	jne    0x41f594
  41f597:	dec    DWORD PTR [edx+0x9]
  41f59a:	add    BYTE PTR [eax],al
  41f59c:	dec    edx
  41f59d:	or     DWORD PTR [eax+edx*1],eax
  41f5a0:	cli    
  41f5a1:	je     0x41f5a0
  41f5a3:	inc    DWORD PTR [eax]
	...
  41f5d5:	add    BYTE PTR [edx],bh
  41f5d7:	jns    0x41f5da
  41f5d9:	add    BYTE PTR [edx],cl
  41f5db:	jne    0x41f5da
  41f5dd:	cmovp  ecx,DWORD PTR [ecx]
  41f5e0:	add    BYTE PTR [eax],al
  41f5e2:	cmp    cl,BYTE PTR [ecx]
  41f5e4:	add    BYTE PTR [eax],dl
  41f5e6:	cli    
  41f5e7:	add    al,0x4
  41f5e9:	adc    BYTE PTR [edx-0x35effbf7],cl
  41f5ef:	add    al,0x0
  41f5f1:	adc    BYTE PTR [edx-0x5fffbfc],bh
  41f5f7:	je     0x41f5f6
  41f5f9:	bswap  edx
  41f5fb:	add    al,0x0
  41f5fd:	add    BYTE PTR [edx],cl
  41f5ff:	jne    0x41f602
  41f601:	adc    dl,bh
  41f603:	add    al,0x4
  41f605:	add    dl,bh
  41f607:	add    al,0x0
  41f609:	adc    BYTE PTR [edx-0x75effbfc],cl
  41f60f:	je     0x41f60e
  41f611:	btr    DWORD PTR [ebp+edi*8+0xf],0x7a
  41f617:	add    al,0x0
  41f619:	add    dl,cl
  41f61b:	je     0x41f61e
  41f61d:	adc    BYTE PTR [edx+0x7a000174],cl
  41f623:	je     0x41f626
  41f625:	add    BYTE PTR [edx+0xafffd74],bh
  41f62b:	je     0x41f62a
  41f62d:	dec    DWORD PTR [edx]
  41f62f:	add    al,0x4
  41f631:	add    BYTE PTR [edx],bh
  41f633:	add    al,0x0
  41f635:	adc    BYTE PTR [edx],bh
  41f637:	je     0x41f63a
  41f639:	adc    BYTE PTR [eax],al
	...
  41f66b:	add    BYTE PTR [ebx+0x46],ah
  41f66e:	das    
  41f66f:	push   DWORD PTR [esi+ebp*2]
  41f672:	add    DWORD PTR [eax],eax
  41f674:	arpl   WORD PTR [esi+0x1],bp
  41f677:	add    BYTE PTR [ebx-0x1a],ah
  41f67a:	sub    edi,edi
  41f67c:	sbb    al,0x42
  41f67e:	sub    edi,edi
  41f680:	adc    al,0xf2
  41f682:	sub    edi,edi
  41f684:	or     al,0x6e
  41f686:	add    DWORD PTR [eax],eax
  41f688:	arpl   WORD PTR [esi+0x1],bp
  41f68b:	add    BYTE PTR [ebx+0x74],ah
  41f68e:	sub    bh,bh
  41f690:	hlt    
  41f691:	and    eax,0xa5ecff2e
  41f696:	sub    al,0xff
  41f698:	in     al,0x6d
  41f69a:	add    DWORD PTR [eax],eax
  41f69c:	arpl   WORD PTR [esi+0x1],bp
  41f69f:	add    BYTE PTR [ebx-0x42],ah
  41f6a2:	sub    bh,bh
  41f6a4:	int3   
  41f6a5:	push   ecx
  41f6a6:	sub    edi,edi
  41f6a8:	(bad)  
  41f6a9:	int    0x2b
  41f6ab:	(bad)  
  41f6ac:	mov    esp,0x6300016d
  41f6b1:	outs   dx,BYTE PTR ds:[esi]
  41f6b2:	add    DWORD PTR [eax],eax
  41f6b4:	arpl   dx,dx
  41f6b6:	jmp    DWORD PTR es:[ecx+edx*2+0x699cff2b]
  41f6be:	sub    bh,bh
  41f6c0:	xchg   esp,eax
  41f6c1:	ins    DWORD PTR es:[edi],dx
  41f6c2:	add    DWORD PTR [eax],eax
  41f6c4:	arpl   WORD PTR [esi+0x1],bp
  41f6c7:	add    BYTE PTR [ebx+0x6c],ah
  41f6ca:	and    edi,edi
  41f6cc:	jl     0x41f6c3
  41f6ce:	sub    eax,0xff
	...
  41f6ff:	add    BYTE PTR [eax],al
  41f701:	add    BYTE PTR [ecx+edi*2+0x2a],dh
  41f705:	jmp    FWORD PTR [ebp+ebp*2+0x1]
  41f709:	add    BYTE PTR [ebx+0x6e],ah
  41f70c:	add    DWORD PTR [eax],eax
  41f70e:	arpl   WORD PTR [ecx+eiz*1+0x2dcd54ff],si
  41f715:	dec    DWORD PTR [esi+eax*1+0x7]
  41f719:	sub    eax,DWORD PTR [edi+edi*2-0x19]
  41f71d:	add    esp,DWORD PTR [ebx+0x5]
  41f720:	out    0x3,eax
  41f722:	arpl   WORD PTR ds:0x7f2c2361,ax
  41f728:	xchg   ebx,eax
  41f729:	sub    eax,0x2afb7f24
  41f72e:	sbb    al,0x7f
  41f730:	out    0x3,eax
  41f732:	arpl   WORD PTR ds:0x56303e7,ax
  41f738:	icebp  
  41f739:	and    al,BYTE PTR [edi+edi*2]
  41f73c:	scas   eax,DWORD PTR es:[edi]
  41f73d:	sub    eax,0x2aff7efc
  41f742:	hlt    
  41f743:	jle    0x41f72c
  41f745:	add    esp,DWORD PTR [ebx+0x5]
  41f748:	out    0x3,eax
  41f74a:	arpl   WORD PTR ds:0x7edc22bd,ax
  41f750:	jnp    0x41f77f
  41f752:	aam    0x7e
  41f754:	out    0x3,eax
  41f756:	arpl   WORD PTR ds:0x56303e7,ax
  41f75c:	out    0x3,eax
  41f75e:	arpl   WORD PTR ds:0x56303e7,ax
  41f764:	out    0x3,eax
	...
  41f796:	add    BYTE PTR [eax],al
  41f798:	arpl   WORD PTR ds:0x7ea42ce7,ax
  41f79e:	in     eax,dx
  41f79f:	sub    al,0x9c
  41f7a1:	jle    0x41f774
  41f7a3:	sub    al,0x94
  41f7a5:	jle    0x41f7a6
  41f7a7:	sub    al,0x8c
  41f7a9:	jle    0x41f786
  41f7ab:	sub    al,0x84
  41f7ad:	jle    0x41f756
  41f7af:	sub    al,0x7c
  41f7b1:	jle    0x41f758
  41f7b3:	sub    al,0x74
  41f7b5:	jle    0x41f764
  41f7b7:	sub    al,0x6c
  41f7b9:	jle    0x41f74c
  41f7bb:	sub    al,0x64
  41f7bd:	jle    0x41f83e
  41f7bf:	sub    al,0x5c
  41f7c1:	jle    0x41f7c3
  41f7c3:	ins    DWORD PTR es:[edi],dx
  41f7c4:	xchg   DWORD PTR [esi-0x3],edi
  41f7c7:	pop    ecx
  41f7c8:	jg     0x41f848
  41f7ca:	std    
  41f7cb:	(bad)  
  41f7cc:	js     0x41f84c
  41f7ce:	std    
  41f7cf:	stos   DWORD PTR es:[edi],eax
  41f7d0:	mov    BYTE PTR [esi-0x3],bh
  41f7d3:	mov    ecx,0xc7fd7e88
  41f7d8:	js     0x41f858
  41f7da:	std    
  41f7db:	mov    edi,0xf1fd7e78
  41f7e0:	inc    esp
  41f7e1:	jle    0x41f7e0
  41f7e3:	sar    DWORD PTR [esi+edi*2],1
  41f7e6:	std    
  41f7e7:	add    edi,DWORD PTR [ebx]
  41f7e9:	jle    0x41f7e8
  41f7eb:	jecxz  0x41f829
  41f7ed:	jle    0x41f7ec
  41f7ef:	das    
  41f7f0:	dec    ebx
  41f7f1:	jle    0x41f7f0
  41f7f3:	xor    eax,0x19fd7e4b
  41f7f8:	cmp    edi,DWORD PTR [esi-0x3]
  41f7fb:	outs   dx,DWORD PTR ds:[esi]
	...
  41f82c:	add    BYTE PTR [eax],al
  41f82e:	cmp    edi,DWORD PTR [esi-0x3]
  41f831:	popa   
  41f832:	mov    edi,DWORD PTR [esi-0x3]
  41f835:	dec    ebp
  41f836:	mov    edi,DWORD PTR [esi-0x3]
  41f839:	xor    eax,0x29fd7e7b
  41f83e:	jnp    0x41f8be
  41f840:	std    
  41f841:	xor    eax,0x4dfd7e8b
  41f846:	mov    edi,DWORD PTR [esi-0x3]
  41f849:	push   edi
  41f84a:	jnp    0x41f8ca
  41f84c:	std    
  41f84d:	out    dx,eax
  41f84e:	jnp    0x41f8ce
  41f850:	std    
  41f851:	fisttp WORD PTR [ebx+0x7e]
  41f854:	std    
  41f855:	repz dec ebx
  41f857:	jle    0x41f856
  41f859:	fwait
  41f85a:	cmp    edi,DWORD PTR [esi-0x3]
  41f85d:	(bad)  
  41f85e:	cmp    edi,DWORD PTR [esi-0x3]
  41f861:	imul   ecx,DWORD PTR [edx+0x7e],0x7e4a71fd
  41f868:	std    
  41f869:	pop    ecx
  41f86a:	cmp    bh,BYTE PTR [esi-0x3]
  41f86d:	add    BYTE PTR [esi],bl
  41f86f:	sub    al,0xfd
  41f871:	(bad)  
  41f872:	js     0x41f8a2
  41f874:	std    
  41f875:	jmp    FWORD PTR [eax+0x2e]
  41f878:	std    
  41f879:	jmp    DWORD PTR [eax+0x2e]
  41f87c:	std    
  41f87d:	(bad)  
  41f87e:	cmp    ah,BYTE PTR [ebx]
  41f880:	std    
  41f881:	(bad)  
  41f882:	cmp    ah,BYTE PTR [ebx]
  41f884:	std    
  41f885:	call   FWORD PTR [esi+0x23]
  41f888:	std    
  41f889:	call   FWORD PTR [ebx+eiz*1-0x3]
  41f88d:	jmp    FWORD PTR [esi+0x23]
  41f890:	std    
  41f891:	inc    DWORD PTR [eax]
	...
  41f8c3:	add    BYTE PTR [esi+0x23],bh
  41f8c6:	std    
  41f8c7:	call   FWORD PTR [esi+0x50fffd23]
  41f8cd:	and    edi,ebp
  41f8cf:	(bad)  
  41f8d0:	cli    
  41f8d1:	or     BYTE PTR [eax],al
  41f8d3:	add    BYTE PTR [edx+eiz*1+0x228cfffd],ah
  41f8da:	std    
  41f8db:	push   DWORD PTR [edx+eiz*1+0x22d4fffd]
  41f8e2:	std    
  41f8e3:	call   DWORD PTR [edx+eiz*1-0x3]
  41f8e7:	inc    eax
  41f8e9:	and    edi,ebp
  41f8eb:	(bad)  
  41f8ec:	mov    edx,0x56000008
  41f8f1:	and    al,0xfd
  41f8f3:	dec    edx
  41f8f5:	or     BYTE PTR [eax],al
  41f8f7:	add    BYTE PTR [esi+0x24],cl
  41f8fa:	std    
  41f8fb:	dec    esi
  41f8fd:	and    edi,ebp
  41f8ff:	call   FWORD PTR [edx-0x530002dd]
  41f905:	and    edi,ebp
  41f907:	dec    esi
  41f909:	and    edi,ebp
  41f90b:	jmp    FWORD PTR [esi]
  41f90d:	and    edi,ebp
  41f90f:	(bad)  
  41f910:	fisub  WORD PTR [ebx]
  41f912:	std    
  41f913:	jmp    FWORD PTR [ebx+eiz*1]
  41f916:	std    
  41f917:	jmp    DWORD PTR [ebx-0x2c]
  41f91a:	and    eax,0x26326cff
  41f91f:	jmp    DWORD PTR [esi+ebp*2+0x1]
  41f923:	add    BYTE PTR [ebx-0x80],ah
  41f926:	and    edi,edi
	...
  41f958:	add    BYTE PTR [eax],al
  41f95a:	push   esp
  41f95b:	outs   dx,BYTE PTR ds:[esi]
  41f95c:	add    DWORD PTR [eax],eax
  41f95e:	arpl   WORD PTR [ecx+eiz*1-0x1],bx
  41f962:	inc    esp
  41f963:	adc    BYTE PTR [edi+edi*8],ah
  41f966:	cmp    al,0x6e
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	arpl   WORD PTR [edx],bp
  41f96c:	and    al,0xff
  41f96e:	sub    al,0x3e
  41f970:	and    al,0xff
  41f972:	and    al,0x22
  41f974:	and    al,0xff
  41f976:	sbb    al,0xd6
  41f978:	and    edi,edi
  41f97a:	adc    al,0x40
  41f97c:	and    al,0xff
  41f97e:	or     al,0x2c
  41f980:	and    al,0xff
  41f982:	add    al,0x6e
  41f984:	add    DWORD PTR [eax],eax
  41f986:	arpl   sp,si
  41f988:	and    edi,edi
  41f98a:	hlt    
  41f98b:	iret   
  41f98c:	and    edi,edi
  41f98e:	in     al,dx
  41f98f:	fbld   TBYTE PTR [ebx]
  41f991:	jmp    esp
  41f993:	shl    DWORD PTR [ebx],0xff
  41f996:	fsub   QWORD PTR [ebx-0x662b00dc]
  41f99c:	and    al,0xff
  41f99e:	int3   
  41f99f:	mov    DWORD PTR [edi+edi*8],esp
  41f9a2:	(bad)  
  41f9a3:	retf   
  41f9a4:	and    edi,edi
  41f9a6:	mov    esp,0xb4ff23cb
  41f9ab:	shl    DWORD PTR [ebx],1
  41f9ad:	jmp    FWORD PTR [ebp+ebp*2+0x5c630001]
  41f9b4:	and    bh,bh
  41f9b6:	pushf  
  41f9b7:	pop    ss
  41f9b8:	and    edi,edi
  41f9ba:	xchg   esp,eax
  41f9bb:	ins    DWORD PTR es:[edi],dx
  41f9bc:	add    DWORD PTR [eax],eax
	...
  41f9ee:	add    BYTE PTR [eax],al
  41f9f0:	arpl   WORD PTR [esi+0x28],bp
  41f9f3:	inc    DWORD PTR [esp+eax*1+0x7b7c28f5]
  41f9fa:	add    DWORD PTR [ecx],ebp
  41f9fc:	je     0x41fa79
  41f9fe:	mov    edi,0xd37b6c28
  41fa03:	sub    BYTE PTR [ebx+edi*2-0x59],ah
  41fa07:	sub    BYTE PTR [ebx+edi*2-0x53],bl
  41fa0b:	sub    BYTE PTR [ebx+edi*2-0x6b],dl
  41fa0f:	sub    BYTE PTR [ebx+edi*2-0x7f],cl
  41fa13:	sub    BYTE PTR [ebx+edi*2+0x5f],al
  41fa17:	sub    DWORD PTR [ebx+edi*2],edi
  41fa1a:	arpl   WORD PTR [eax],bp
  41fa1c:	xor    al,0x7b
  41fa1e:	ja     0x41fa48
  41fa20:	sub    al,0x7b
  41fa22:	test   DWORD PTR [eax],ebp
  41fa24:	and    al,0x7b
  41fa26:	test   eax,0x977b1c28
  41fa2b:	sub    BYTE PTR [ebx+edi*2],dl
  41fa2e:	int    0x28
  41fa30:	or     al,0x7b
  41fa32:	mov    ch,0x28
  41fa34:	add    al,0x7b
  41fa36:	out    dx,eax
  41fa37:	daa    
  41fa38:	cld    
  41fa39:	jp     0x41fa3a
  41fa3b:	daa    
  41fa3c:	hlt    
  41fa3d:	jp     0x41fa00
  41fa3f:	daa    
  41fa40:	in     al,dx
  41fa41:	jp     0x41fa14
  41fa43:	daa    
  41fa44:	in     al,0x7a
  41fa46:	xor    eax,0x1b7adc28
  41fa4b:	sub    ah,dl
  41fa4d:	jp     0x41fa46
  41fa4f:	daa    
  41fa50:	int3   
  41fa51:	jp     0x41fab8
  41fa53:	daa    
	...
  41fa84:	add    BYTE PTR [eax],al
  41fa86:	les    edi,FWORD PTR [edx+0x7f]
  41fa89:	daa    
  41fa8a:	mov    esp,0xb427837a
  41fa8f:	jp     0x41fa2c
  41fa91:	daa    
  41fa92:	lods   al,BYTE PTR ds:[esi]
  41fa93:	jp     0x41fabc
  41fa95:	daa    
  41fa96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa97:	jp     0x41fab4
  41fa99:	daa    
  41fa9a:	pushf  
  41fa9b:	jp     0x41fae0
  41fa9d:	daa    
  41fa9e:	xchg   esp,eax
  41fa9f:	jp     0x41faa1
  41faa1:	aas    
  41faa2:	inc    esp
  41faa3:	jp     0x41faa2
  41faa5:	out    0x3d,eax
  41faa7:	jp     0x41faa6
  41faa9:	pop    es
  41faaa:	inc    esp
  41faab:	jp     0x41faaa
  41faad:	jecxz  0x41faec
  41faaf:	jp     0x41faae
  41fab1:	mov    ebx,0xaffd7a45
  41fab6:	cmp    eax,0x8569fd7a
  41fabb:	jp     0x41faba
  41fabd:	popa   
  41fabe:	jge    0x41fb3a
  41fac0:	std    
  41fac1:	cmp    DWORD PTR [ebp+0x7d2dfd7a],eax
  41fac7:	jp     0x41fac6
  41fac9:	mov    ebx,0xcbfd7b42
  41face:	inc    edx
  41facf:	jnp    0x41face
  41fad1:	ret    
  41fad2:	inc    edx
  41fad3:	jnp    0x41fad2
  41fad5:	jmp    0xda3f761c
  41fada:	add    bh,BYTE PTR [ebx-0x3]
  41fadd:	or     eax,0xf7fd7b01
  41fae2:	add    bh,BYTE PTR [ebx-0x3]
  41fae5:	sbb    eax,0x45fd7b01
	...
  41fb1a:	add    BYTE PTR [eax],al
  41fb1c:	add    DWORD PTR [ebx-0x3],edi
  41fb1f:	or     eax,0x13fd7b01
  41fb24:	add    DWORD PTR [ebx-0x3],edi
  41fb27:	jmp    0x4f42008c
  41fb2c:	sar    DWORD PTR [edx-0x3],0x3f
  41fb30:	sar    DWORD PTR [edx-0x3],0x9f
  41fb34:	sar    DWORD PTR [edx-0x3],0x87
  41fb38:	sar    DWORD PTR [edx-0x3],0x5f
  41fb3c:	sar    DWORD PTR [edx-0x3],0xf3
  41fb40:	sar    DWORD PTR [edx-0x3],0xe9
  41fb44:	pusha  
  41fb45:	add    eax,0x7ac00500
  41fb4a:	std    
  41fb4b:	add    BYTE PTR [edx-0x69fffffb],cl
  41fb51:	data16 (bad) 
  41fb53:	inc    esi
  41fb55:	data16 (bad) 
  41fb57:	call   FWORD PTR [edx-0x2b00019a]
  41fb5d:	data16 (bad) 
  41fb5f:	call   esi
  41fb61:	data16 (bad) 
  41fb63:	inc    DWORD PTR [esi]
  41fb65:	data16 (bad) 
  41fb67:	push   esi
  41fb69:	gs (bad) 
  41fb6b:	push   DWORD PTR [esp+eiz*2+0x6494fffe]
  41fb72:	(bad)  
  41fb73:	jmp    FWORD PTR [esi+0x64]
  41fb76:	(bad)  
  41fb77:	(bad)  
  41fb78:	cmp    al,BYTE PTR ds:0x64180000
  41fb7e:	(bad)  
  41fb7f:	inc    DWORD PTR [eax]
	...
  41fbb1:	add    BYTE PTR [edx+0x5],cl
  41fbb4:	add    BYTE PTR [eax],al
  41fbb6:	inc    esp
  41fbb7:	gs (bad) 
  41fbb9:	call   FWORD PTR [eax+0x61]
  41fbbc:	(bad)  
  41fbbd:	dec    DWORD PTR [edx]
  41fbbf:	add    eax,0x613e0000
  41fbc4:	(bad)  
  41fbc5:	jmp    FWORD PTR [edx+0x61]
  41fbc8:	(bad)  
  41fbc9:	call   DWORD PTR [esi+0x61]
  41fbcc:	(bad)  
  41fbcd:	call   DWORD PTR [edx+0x61]
  41fbd0:	(bad)  
  41fbd1:	call   FWORD PTR [eax+0x61]
  41fbd4:	(bad)  
  41fbd5:	call   DWORD PTR [ecx+eiz*2-0x2]
  41fbd9:	(bad)  
  41fbda:	cli    
  41fbdb:	add    al,0x0
  41fbdd:	add    BYTE PTR [esp+eiz*2],bh
  41fbe0:	(bad)  
  41fbe1:	jmp    FWORD PTR [eax]
  41fbe3:	fs (bad) 
  41fbe5:	dec    DWORD PTR [eax+0x76fffe64]
  41fbeb:	fs (bad) 
  41fbed:	dec    DWORD PTR [esp+eiz*2+0x646efffe]
  41fbf4:	(bad)  
  41fbf5:	jmp    DWORD PTR [ebx+0x32]
  41fbf8:	loope  0x41fbf8
  41fbfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbfb:	shl    al,0xfe
  41fbfe:	pushf  
  41fbff:	shl    al,1
  41fc01:	(bad)  
  41fc02:	xchg   esp,eax
  41fc03:	cmp    ah,cl
  41fc05:	dec    BYTE PTR [esi+ebp*2+0x50630001]
  41fc0c:	in     al,0xfe
  41fc0e:	jl     0x41fc64
  41fc10:	in     al,0xfe
  41fc12:	je     0x41fc82
  41fc14:	add    DWORD PTR [eax],eax
	...
  41fc46:	add    BYTE PTR [eax],al
  41fc48:	arpl   WORD PTR [ecx+0x1],dx
  41fc4b:	inc    ecx
  41fc4c:	icebp  
  41fc4d:	and    ah,0x73
  41fc50:	(bad)  
  41fc51:	test   al,0xec
  41fc53:	imul   edi,DWORD PTR [esi+0x613f01ad],0xffffff9c
  41fc5a:	call   0xece2bbbd
  41fc5f:	imul   eax,esi,0x6e
  41fc62:	add    DWORD PTR [ecx],esp
  41fc64:	arpl   WORD PTR [ebx],bp
  41fc66:	lock ins BYTE PTR es:[edi],dx
  41fc68:	mov    al,0xc9
  41fc6a:	retf   
  41fc6b:	pop    esi
  41fc6c:	mov    ch,0xc2
  41fc6e:	out    dx,eax
  41fc6f:	bound  esp,QWORD PTR [ebx+0x43]
  41fc72:	push   es
  41fc73:	push   ebp
  41fc74:	xchg   ecx,eax
  41fc75:	aad    0xf7
  41fc77:	bound  esp,QWORD PTR [ebp+0x6362efc5]
  41fc7d:	dec    ecx
  41fc7e:	add    al,0x6c
  41fc80:	jo     0x41fc9c
  41fc82:	imul   BYTE PTR [ebx+0x7e]
  41fc85:	or     cl,al
  41fc87:	(bad)  
  41fc88:	in     al,dx
  41fc89:	fld    QWORD PTR [eax]
  41fc8b:	inc    ebp
  41fc8c:	ja     0x41fd05
  41fc8e:	jecxz  0x41fcee
  41fc90:	dec    edi
  41fc91:	xor    ch,bh
  41fc93:	pusha  
  41fc94:	dec    eax
  41fc95:	outs   dx,BYTE PTR ds:[esi]
  41fc96:	add    DWORD PTR [ebp+0x6cf02762],esi
  41fc9c:	inc    ecx
  41fc9d:	or     eax,0x54d52f0
  41fca2:	shl    eax,cl
  41fca4:	inc    ebx
  41fca5:	in     al,dx
  41fca6:	out    0x3,al
  41fca8:	mov    bh,0x5
  41fcaa:	mov    ds:0xf0,eax
	...
  41fcdb:	add    BYTE PTR [eax],al
  41fcdd:	add    BYTE PTR [ebx-0x1a],al
  41fce0:	mov    edx,0xcbe212c9
  41fce5:	add    edx,DWORD PTR [ebx+0x3f0ab05]
  41fceb:	out    0xc2,al
  41fced:	ret    0xe8f8
  41fcf0:	mov    ebp,0x777ce4
  41fcf5:	add    eax,0xf592f407
  41fcfa:	add    esi,ebp
  41fcfc:	pop    edx
  41fcfe:	fs ja  0x41fcfb
  41fd01:	add    al,0xcf
  41fd03:	bnd jp 0x41fcfb
  41fd06:	ret    
  41fd07:	in     al,0x72
  41fd09:	ret    0x774c
  41fd0c:	fiadd  WORD PTR [edx]
  41fd0e:	sahf   
  41fd0f:	loopne 0x41fd83
  41fd11:	leave  
  41fd12:	(bad)
  41fd15:	ret    
  41fd16:	mov    al,0xf1
  41fd18:	pop    eax
  41fd19:	jmp    0x41fcdd
  41fd1b:	lock pop edx
  41fd1d:	out    0xb3,eax
  41fd1f:	(bad)  
  41fd20:	out    0x3,al
  41fd22:	clc    
  41fd23:	add    eax,0xe484fc2c
  41fd28:	dec    esp
  41fd29:	call   0xeb7ee4cf
  41fd2e:	xchg   edx,eax
  41fd2f:	out    0x3c,al
  41fd31:	out    dx,eax
  41fd32:	and    edi,0xf370d51a
  41fd38:	pslld  mm0,QWORD PTR [edi+0x470427f2]
  41fd3f:	add    al,0x26
  41fd41:	out    0x0,eax
	...
  41fd73:	add    BYTE PTR [eax-0x41],dl
  41fd76:	(bad)  
  41fd78:	inc    ecx
  41fd79:	ror    BYTE PTR [edi],cl
  41fd7b:	inc    BYTE PTR [ecx+0x5]
  41fd7e:	add    BYTE PTR [edi+0x471c460],dh
  41fd84:	shl    dl,0x62
  41fd87:	scas   eax,DWORD PTR es:[edi]
  41fd88:	leave  
  41fd89:	jmp    0xc06f:0xe6c1ac62
  41fd90:	mov    dl,0xe1
  41fd92:	ds jmp 0xb44402f8
  41fd98:	and    esi,0xf185d055
  41fd9e:	dec    esp
  41fd9f:	iret   
  41fda0:	call   0x254:0x60c46bdf
  41fda7:	mov    esp,0x995eeb72
  41fdac:	mov    bl,bh
  41fdae:	bound  ebx,QWORD PTR [esi-0x7fba1f6d]
  41fdb4:	dec    esp
  41fdb5:	jecxz  0x41fdb6
  41fdb7:	adc    ah,BYTE PTR [ecx-0x37]
  41fdba:	ins    BYTE PTR es:[edi],dx
  41fdbb:	mov    BYTE PTR [edx+ecx*8+0x66],al
  41fdbf:	mov    ecx,DWORD PTR [esi-0x29]
  41fdc2:	jno    0x41fe34
  41fdc4:	and    DWORD PTR [esi-0x3],esi
  41fdc7:	cmp    bl,BYTE PTR [esi-0x40]
  41fdca:	bound  edx,QWORD PTR [ebp+0x17]
  41fdcd:	hlt    
  41fdce:	ins    BYTE PTR es:[edi],dx
  41fdcf:	dec    edx
  41fdd0:	push   ds
  41fdd1:	loop   0x41fe36
  41fdd3:	pop    ebx
  41fdd4:	or     dh,ch
  41fdd6:	jo     0x41fdc1
	...
  41fe08:	add    BYTE PTR [eax],al
  41fe0a:	pusha  
  41fe0b:	cmp    edi,0x53f1fa25
  41fe11:	dec    esp
  41fe12:	adc    ah,dh
  41fe14:	dec    edi
  41fe15:	dec    eax
  41fe16:	sti    
  41fe17:	fnstsw WORD PTR [esi]
  41fe19:	jmp    0x2a42307e
  41fe1e:	icebp  
  41fe1f:	loop   0x41fe7f
  41fe21:	sbb    eax,0x1b66c1fa
  41fe26:	retf   0x73e4
  41fe29:	add    BYTE PTR [ebp+0x73],ch
  41fe2c:	jbe    0x41fe6f
  41fe2e:	mov    edx,0x76006501
  41fe33:	ins    BYTE PTR es:[edi],dx
  41fe34:	imul   esp,DWORD PTR [ebp-0x4a],0x8e69436c
  41fe3b:	ins    BYTE PTR es:[edi],dx
  41fe3c:	add    BYTE PTR ds:[edx-0x799abd00],bh
  41fe43:	inc    edx
  41fe44:	jb     0x41feb8
  41fe46:	mov    eax,0xfa746b6c
  41fe4b:	jae    0x41feb9
  41fe4d:	arpl   WORD PTR [edi+0x4a007072],sp
  41fe53:	add    edx,DWORD PTR [ebx+0x69]
  41fe56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe57:	ins    BYTE PTR es:[edi],dx
  41fe58:	inc    eax
  41fe59:	push   0x6f5173eb
  41fe5e:	mov    edi,0xe374697c
  41fe63:	inc    ebx
  41fe64:	jbe    0x41feda
  41fe66:	out    0x8,eax
  41fe68:	lods   eax,DWORD PTR ds:[esi]
  41fe69:	add    BYTE PTR [edx+eiz*2],al
  41fe6c:	imul   esp,DWORD PTR [eax+eax*1+0x0],0x0
	...
  41fe9d:	add    BYTE PTR [eax],al
  41fe9f:	add    BYTE PTR [edx+eiz*2],al
  41fea2:	outs   dx,DWORD PTR ds:[esi]
  41fea3:	jae    0x41fe6b
  41fea5:	dec    edx
  41fea6:	data16 ins BYTE PTR es:[edi],dx
  41fea8:	out    0x49,eax
  41feaa:	std    
  41feab:	push   DWORD PTR ds:0x96736c08
  41feb1:	ja     0x41ff13
  41feb3:	ins    DWORD PTR es:[edi],dx
  41feb4:	mov    ah,BYTE PTR [edx+0x3e]
  41feb7:	add    al,dh
  41feb9:	or     BYTE PTR [esi+0x69],al
  41febc:	lods   al,BYTE PTR ds:[esi]
  41febd:	pop    ebp
  41febe:	dec    ebx
  41febf:	mov    gs:0x9e69436d,al
  41fec5:	pop    esi
  41fec6:	add    BYTE PTR ds:[edi+0x8],bh
  41feca:	inc    esi
  41fecb:	imul   ecx,DWORD PTR [ebp+ebx*2+0x40],0x62785d6c
  41fed3:	add    BYTE PTR [ebx+0x52],ah
  41fed6:	add    al,0x45
  41fed8:	inc    esi
  41fed9:	sbb    cl,bh
  41fedb:	ins    BYTE PTR es:[edi],dx
  41fedc:	aas    
  41fedd:	jno    0x41fecc
  41fedf:	bound  ebx,QWORD PTR [ebx]
  41fee1:	std    
  41fee2:	in     eax,dx
  41fee3:	arpl   WORD PTR [edi],si
  41fee5:	add    ebx,eax
  41fee7:	(bad)  
  41fee8:	mov    esp,0x3e4503dc
  41feed:	push   edx
  41feee:	shl    DWORD PTR [edx+0x31],cl
  41fef1:	dec    edi
  41fef2:	in     al,dx
  41fef3:	ins    BYTE PTR es:[edi],dx
  41fef4:	xor    eax,0x633ef9a1
  41fef9:	or     BYTE PTR [ebx],al
  41fefb:	inc    ebp
  41fefc:	(bad)  
  41fefd:	mov    cl,0xcd
  41feff:	ins    BYTE PTR es:[edi],dx
  41ff00:	add    BYTE PTR ds:0x62ed,bh
	...
  41ff36:	sbb    cl,BYTE PTR [ebx+eiz*8+0x6c]
  41ff3a:	and    bl,BYTE PTR [esi+0x1]
  41ff3d:	je     0x41ffa1
  41ff3f:	mov    ds:0xa51073e8,eax
  41ff44:	bnd jae 0x41ff45
  41ff47:	mov    ah,cl
  41ff49:	ins    DWORD PTR es:[edi],dx
  41ff4a:	(bad)
  41ff4d:	mov    al,ds:0x73e8a362
  41ff52:	mov    ah,0x95
  41ff54:	jmp    0x41ffb9
  41ff56:	mov    ah,0xf3
  41ff58:	icebp  
  41ff59:	inc    ebx
  41ff5a:	retf   0xe7f0
  41ff5d:	pusha  
  41ff5e:	scas   eax,DWORD PTR es:[edi]
  41ff5f:	fcomi  st,st(1)
  41ff61:	jbe    0x41ff05
  41ff63:	pop    esi
  41ff64:	add    DWORD PTR [ebp+0x62],ecx
  41ff67:	and    esp,ebp
  41ff69:	jae    0x41ff1e
  41ff6b:	shr    al,1
  41ff6d:	jne    0x41fef1
  41ff6f:	xor    ah,ch
  41ff71:	dec    edi
  41ff72:	xchg   ecx,eax
  41ff73:	ret    
  41ff74:	in     eax,0x66
  41ff76:	ja     0x41ff39
  41ff78:	into   
  41ff79:	jae    0x41ffec
  41ff7b:	vpcmpgtb ymm4,ymm2,YMMWORD PTR [edx+0x6903e705]
  41ff83:	pop    es
  41ff84:	cmp    ah,bh
  41ff86:	jo     0x41ff50
  41ff88:	sbb    esi,edx
  41ff8a:	push   edx
  41ff8b:	jmp    0xe6f8:0xde20f7fc
  41ff92:	inc    ebx
  41ff93:	stc    
  41ff94:	or     eax,0xe6c64df2
  41ff99:	add    eax,DWORD PTR [eax]
	...
  41ffcb:	add    BYTE PTR [eax+0x8],dl
  41ffce:	sti    
  41ffcf:	lock xor bh,dh
  41ffd2:	leave  
  41ffd3:	out    dx,al
  41ffd4:	cmp    al,0xc6
  41ffd6:	out    0x3,al
  41ffd8:	pop    ss
  41ffd9:	push   es
  41ffda:	scas   al,BYTE PTR es:[edi]
  41ffdb:	out    0x10,al
  41ffdd:	aad    0xd8
  41ffdf:	jmp    0xf71c:0xe6bae60e
  41ffe6:	int    0xe5
  41ffe8:	std    
  41ffe9:	loopne 0x41ffb6
  41ffeb:	rol    BYTE PTR [ecx],1
  41ffed:	call   0xe349eaa4
  41fff2:	mov    ah,0xe2
  41fff4:	stc    
  41fff5:	jmp    0x73a6c293
  41fffa:	mov    al,ds:0x92e8a602
  41ffff:	rcl    edx,cl
  420001:	fdivr  QWORD PTR [edx+eiz*8-0x30]
  420005:	call   0xebf9f1a0
  42000a:	jg     0x41fffb
  42000c:	sar    DWORD PTR [esp+edi*2-0x1afa8a09],0x3
  420014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420015:	call   0xf7f3c16c
  42001a:	pop    eax
  42001b:	out    0x8e,eax
  42001d:	stc    
  42001e:	and    ch,bl
  420020:	xchg   edx,eax
  420021:	call   0xf7c1f86f
  420026:	aas    
  420027:	ret    
  420028:	add    al,0x73
  42002a:	add    bh,dl
  42002c:	arpl   cx,sp
  42002e:	jo     0x420065
	...
  420060:	add    BYTE PTR [eax],al
  420062:	icebp  
  420063:	fisub  WORD PTR [edx+0x17]
  420066:	push   ss
  420067:	jae    0x420066
  420069:	in     al,dx
  42006a:	bound  edi,QWORD PTR [esi-0x1424fa8e]
  420070:	inc    ecx
  420071:	adc    bl,bl
  420073:	out    0x53,eax
  420075:	push   ss
  420076:	mov    dh,0xeb
  420078:	arpl   WORD PTR [edx+eiz*4],ax
  42007b:	jmp    0x25ff:0x7e60fb5e
  420082:	mov    esp,0xc3d053f6
  420087:	fld    QWORD PTR [eax-0x32]
  42008a:	lods   eax,DWORD PTR ds:[esi]
  42008b:	loopne 0x420100
  42008d:	jmp    0xba44acf2
  420092:	test   bh,ah
  420094:	bound  edi,QWORD PTR [ecx-0x5a00c8a0]
  42009a:	jge    0x420092
  42009c:	dec    edx
  42009d:	mov    BYTE PTR [edi+esi*8-0x14613b95],0x6b
  4200a5:	mov    WORD PTR [esi-0x5e7b952d],ds
  4200ab:	jb     0x4200aa
  4200ad:	shl    DWORD PTR [ecx-0x38],0x62
  4200b1:	xchg   ebp,eax
  4200b2:	and    al,0xd3
  4200b4:	jo     0x420133
  4200b6:	and    eax,0x528e71f4
  4200bb:	jb     0x4200ba
  4200bd:	nop
  4200be:	pusha  
  4200bf:	les    esi,FWORD PTR [ecx-0x7c]
  4200c2:	inc    ecx
  4200c3:	mul    BYTE PTR [edx+0x3d]
	...
  4200f6:	add    BYTE PTR [eax],al
  4200f8:	cmp    cl,ah
  4200fa:	imul   edx,DWORD PTR [ecx+0x42],0xffffffde
  4200fe:	outs   dx,DWORD PTR ds:[esi]
  4200ff:	sbb    dl,BYTE PTR [ebp-0x2c]
  420102:	ins    DWORD PTR es:[edi],dx
  420103:	dec    eax
  420104:	pmaddwd mm4,QWORD PTR [edi+0x0]
  420108:	mov    ch,0x75
  42010a:	std    
  42010b:	call   FWORD PTR [edi+0xb]
  42010e:	push   eax
  42010f:	jb     0x4200b6
  420111:	push   0x62
  420113:	jae    0x42014e
  420115:	cmp    dh,BYTE PTR [edx]
  420117:	inc    esi
  420118:	push   ebx
  420119:	jnp    0x42018b
  42011b:	je     0x420117
  42011d:	add    eax,0x79850218
  420122:	bound  ebp,QWORD PTR [esi-0x66]
  420125:	jnp    0x420193
  420127:	arpl   WORD PTR [edi+0x7a],bx
  42012a:	jo     0x42012c
  42012c:	popf   
  42012d:	pop    es
  42012e:	push   eax
  42012f:	jb     0x420196
  420131:	push   0x62
  420133:	jae    0x4200ee
  420135:	cmp    dh,BYTE PTR [edx]
  420137:	dec    esi
  420138:	lahf   
  420139:	ins    DWORD PTR es:[edi],dx
  42013a:	jno    0x42013c
  42013c:	sbb    eax,0xc7434c08
  420141:	push   0x77ae536d
  420146:	data16 outs dx,BYTE PTR ds:[esi]
  420148:	popf   
  420149:	dec    eax
  42014a:	std    
  42014b:	inc    DWORD PTR [ecx]
  42014d:	or     DWORD PTR [ecx+0x78],eax
  420150:	mov    ds:0xb5724d61,eax
  420155:	push   0x62
  420157:	jae    0x420122
  420159:	add    eax,0x2ad
	...
  42018e:	test   eax,0xe4557164
  420193:	pop    esp
  420194:	pop    esi
  420195:	outs   dx,BYTE PTR ds:[esi]
  420196:	fisubr WORD PTR [eax+0x62]
  420199:	jmp    FWORD PTR fs:[eax+eiz*2+0x65]
  42019e:	retf   0x6660
  4201a1:	outs   dx,DWORD PTR ds:[esi]
  4201a2:	in     al,0x46
  4201a4:	data16 ins BYTE PTR es:[edi],dx
  4201a6:	scas   al,BYTE PTR es:[edi]
  4201a7:	outs   dx,DWORD PTR gs:[esi]
  4201a9:	add    BYTE PTR [ecx-0x6091909a],dl
  4201af:	pop    ebp
  4201b0:	xor    BYTE PTR [edx],dh
  4201b2:	arpl   WORD PTR [eax],cx
  4201b4:	loopne 0x420221
  4201b6:	xchg   DWORD PTR [esi+0x1],ebx
  4201b9:	mov    DWORD PTR [ebx+0x1b],esp
  4201bc:	mul    BYTE PTR [edx-0x7e]
  4201bf:	cmp    bl,bh
  4201c1:	push   eax
  4201c2:	ja     0x4201f0
  4201c4:	fistp  WORD PTR [esi-0x7a]
  4201c7:	pminsw mm0,QWORD PTR [edi-0x5c]
  4201cb:	sbb    ch,cl
  4201cd:	popa   
  4201ce:	add    BYTE PTR [edx],0x4
  4201d1:	xchg   ebp,eax
  4201d2:	arpl   WORD PTR [edi],bx
  4201d4:	fbstp  TBYTE PTR [ebx+0x2b]
  4201d7:	daa    
  4201d8:	call   0xe83f4349
  4201dd:	inc    ebp
  4201de:	push   ecx
  4201df:	jmp    esi
  4201e1:	push   eax
  4201e2:	aaa    
  4201e3:	ins    BYTE PTR es:[edi],dx
  4201e4:	loopne 0x420244
  4201e6:	inc    esi
  4201e7:	pop    esi
  4201e8:	add    DWORD PTR [esi],ecx
  4201ea:	arpl   WORD PTR [ebx+0x493140ea],bx
  4201f0:	in     al,0x73
	...
  420222:	add    BYTE PTR [eax],al
  420224:	push   es
  420225:	lahf   
  420226:	lock call DWORD PTR [ebp+0x1]
  42022b:	pusha  
  42022c:	arpl   WORD PTR [ebx-0x54fdac16],bx
  420232:	out    dx,al
  420233:	dec    edx
  420234:	push   es
  420235:	dec    ecx
  420236:	mov    edi,0x148fe71
  42023b:	or     eax,0x40ea9b63
  420240:	icebp  
  420241:	mov    ah,ah
  420243:	jae    0x42020b
  420245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420246:	out    0x70,eax
  420248:	iret   
  420249:	jge    0x420232
  42024b:	pusha  
  42024c:	(bad)  
  42024d:	pop    esi
  42024e:	add    ecx,esi
  420250:	arpl   WORD PTR [edi-0x77559d1b],bx
  420256:	in     al,dx
  420257:	jae    0x420223
  420259:	jge    0x420240
  42025b:	test   ax,0x4c05
  42025f:	add    al,0xb6
  420261:	loope  0x4202a6
  420263:	xor    eax,0xe84b1f51
  420268:	mov    BYTE PTR ds:0xf496064c,al
  42026e:	idiv   BYTE PTR ss:[ebp-0x21]
  420272:	xor    ah,dl
  420274:	cmp    eax,0x81f53c05
  420279:	repz stc 
  42027b:	xor    eax,0xe812e93d
  420280:	in     al,0x6f
  420282:	mov    bh,0x3
  420284:	xor    edx,ebp
  420286:	or     eax,0xc9
	...
  4202b7:	add    BYTE PTR [eax],al
  4202b9:	add    BYTE PTR [edx+ebp*8-0x4],al
  4202bd:	int3   
  4202be:	inc    ecx
  4202bf:	out    dx,al
  4202c0:	sub    edi,esp
  4202c2:	test   DWORD PTR ds:0xea1103a1,eax
  4202c8:	or     eax,0xf8ea31d3
  4202cd:	cli    
  4202ce:	push   ss
  4202cf:	out    0xd2,al
  4202d1:	out    dx,al
  4202d2:	inc    ecx
  4202d3:	retf   0xc2de
  4202d6:	pushf  
  4202d7:	outs   dx,DWORD PTR ds:[esi]
  4202d8:	sahf   
  4202d9:	add    esi,DWORD PTR [ecx]
  4202db:	jmp    0xdeb9:0xdff8c4c5
  4202e2:	sbb    ebp,edx
  4202e4:	mov    edi,0x9905ae03
  4202e9:	fdivp  st(7),st
  4202eb:	mov    edi,0xbbfedeb6
  4202f0:	mov    edi,edx
  4202f2:	and    eax,0xb1032305
  4202f7:	call   0xf908c189
  4202fc:	jnp    0x4202ca
  4202fe:	shr    esp,0xab
  420301:	sti    
  420302:	test   DWORD PTR ds:0xe8910341,eax
  420308:	dec    DWORD PTR [ebp-0x779d0ae1]
  42030e:	cmp    al,0xe4
  420310:	dec    eax
  420311:	dec    esp
  420312:	sub    BYTE PTR [eax],dh
  420314:	add    dh,al
  420316:	popa   
  420317:	shl    DWORD PTR [edx+0x4e],cl
  42031a:	cs in  al,0x73
  42031d:	aaa    
	...
  42034e:	add    BYTE PTR [eax],al
  420350:	add    bl,bl
  420352:	jb     0x4203a0
  420354:	(bad)  
  420355:	idiv   BYTE PTR [esi]
  420357:	jmp    0x1b414bbc
  42035c:	adc    al,0xea
  42035e:	inc    edx
  42035f:	aas    
  420360:	cld    
  420361:	fist   DWORD PTR [ebp+0x8]
  420364:	sti    
  420365:	repz bound ebp,QWORD PTR [eax]
  420368:	addr16 aas 
  42036a:	(bad)  
  42036b:	cmp    dh,BYTE PTR [ecx+ebp*8-0x1f53e6b4]
  420372:	inc    eax
  420373:	cld    
  420374:	into   
  420375:	hlt    
  420376:	bound  ecx,QWORD PTR [edi]
  420378:	mov    bl,0xd3
  42037a:	jo     0x420388
  42037c:	lods   eax,DWORD PTR ds:[esi]
  42037d:	outs   dx,BYTE PTR ds:[esi]
  42037e:	std    
  42037f:	shl    BYTE PTR [ecx-0x38],cl
  420382:	(bad)  
  420383:	fst    QWORD PTR [ebp-0x55249d0b]
  420389:	iret   
  42038a:	push   0xffffffcc
  42038c:	mov    eax,ds:0xacc8fd6e
  420391:	clc    
  420392:	pop    esi
  420393:	mov    ecx,0xf323579
  420398:	sbb    edx,0x6b
  42039b:	jmp    0x9a425a00
  4203a0:	js     0x420385
  4203a2:	imul   edx,DWORD PTR [ebp-0x759d095b],0x4d
  4203a9:	repnz bound ebp,QWORD PTR [eax-0x7b980ba0]
  4203b0:	inc    esp
  4203b1:	fidiv  DWORD PTR [eax]
	...
  4203e3:	add    BYTE PTR [eax],al
  4203e5:	add    BYTE PTR [eax],cl
  4203e7:	sbb    al,0x64
  4203e9:	ins    BYTE PTR es:[edi],dx
  4203ea:	out    dx,al
  4203eb:	add    DWORD PTR [ebp+0x0],esi
  4203ee:	add    ebx,DWORD PTR [ecx+esi*2+0x65]
  4203f2:	test   al,0x5c
  4203f4:	bound  esi,QWORD PTR [ecx+edi*2+0x73]
  4203f8:	pop    esi
  4203f9:	arpl   WORD PTR [ecx+0x4b6c6f54],si
  4203ff:	or     DWORD PTR [edi+0x0],esi
  420402:	inc    ebx
  420403:	addr16 jno 0x42046b
  420406:	dec    eax
  420407:	bound  esi,QWORD PTR [si+0x49]
  42040b:	jae    0x42046f
  42040d:	popa   
  42040e:	ss fs push edx
  420411:	jb     0x420441
  420413:	dec    eax
  420414:	std    
  420415:	inc    DWORD PTR [ebp+0x60]
  420418:	imul   ebp,DWORD PTR [ecx+0x6c],0x64
  42041c:	jno    0x42044c
  42041e:	pop    bp
  420420:	imul   eax,DWORD PTR [eax],0x744f08af
  420426:	enter  0x7152,0x72
  42042a:	jae    0x420474
  42042c:	std    
  42042d:	dec    edx
  42042f:	or     BYTE PTR [edi+0x74],cl
  420432:	test   al,0x53
  420434:	inc    eax
  420435:	push   0x3e4088
  42043a:	xchg   esi,eax
  42043b:	or     BYTE PTR [edi+0x74],cl
  42043e:	mov    eax,0xcc496c3d
  420443:	pop    ebp
  420444:	add    BYTE PTR ds:[esi+0x744f08],cl
	...
  42047b:	add    BYTE PTR [eax-0x348d8eae],bh
  420481:	add    edx,ebp
  420483:	add    cl,cl
  420485:	pop    ebp
  420486:	outs   dx,DWORD PTR ds:[esi]
  420487:	inc    ebx
  420488:	iret   
  420489:	jno    0x4204d6
  42048b:	dec    ecx
  42048c:	or     ecx,DWORD PTR [ecx]
  42048e:	push   cs
  42048f:	add    DWORD PTR [ebx-0x51],esp
  420492:	in     eax,dx
  420493:	jno    0x420445
  420495:	xchg   edx,eax
  420496:	out    dx,eax
  420497:	inc    esi
  420498:	lods   al,BYTE PTR ds:[esi]
  420499:	pop    esi
  42049a:	add    DWORD PTR [ecx-0x35],esi
  42049d:	jp     0x42048d
  42049f:	pop    esi
  4204a0:	mov    bl,0x85
  4204a2:	and    esp,DWORD PTR [edi+edi*4-0x16]
  4204a6:	add    BYTE PTR [esi],dh
  4204a8:	arpl   bp,dx
  4204aa:	in     eax,0x62
  4204ac:	xchg   edi,eax
  4204ad:	sub    esp,ebx
  4204af:	arpl   WORD PTR [edi-0x30],di
  4204b2:	add    ebp,DWORD PTR [edx]
  4204b4:	arpl   bx,ax
  4204b6:	fidiv  WORD PTR [ebx+0x7b]
  4204b9:	shl    eax,cl
  4204bb:	jae    0x42043e
  4204bd:	vdivpd ymm0,ymm3,YMMWORD PTR [esi+0x634703b9]
  4204c5:	das    
  4204c6:	in     eax,0x60
  4204c8:	js     0x4204c3
  4204ca:	out    dx,eax
  4204cb:	(bad)  
  4204cc:	fadd   QWORD PTR [ebx+0x1]
  4204cf:	popa   
  4204d0:	inc    esp
  4204d1:	add    al,0xe6
  4204d3:	bound  eax,QWORD PTR [eax+0x12]
  4204d6:	add    al,0x26
  4204d8:	arpl   di,di
  4204da:	out    0x6c,eax
  4204dc:	xor    BYTE PTR [ecx],al
  4204de:	icebp  
  4204df:	ins    BYTE PTR es:[edi],dx
	...
  420510:	add    BYTE PTR [eax],al
  420512:	inc    eax
  420513:	pop    es
  420514:	fbstp  TBYTE PTR [ebx+0x63]
  420517:	and    al,BYTE PTR [ecx+esi*2]
  42051a:	ds push esp
  42051c:	(bad)  
  42051e:	pushf  
  42051f:	lahf   
  420520:	add    DWORD PTR [ecx-0x2],esi
  420523:	inc    ecx
  420524:	loopne 0x420586
  420526:	pop    ss
  420527:	pop    esi
  420528:	add    DWORD PTR [esi],edi
  42052a:	arpl   WORD PTR [eax+0x5df560e0],si
  420530:	add    DWORD PTR [ebp+0x63],eax
  420533:	scas   eax,DWORD PTR es:[edi]
  420534:	loopne 0x4205a9
  420536:	lock stos BYTE PTR es:[edi],al
  420538:	loop   0x4205a2
  42053a:	hlt    
  42053b:	add    al,0x97
  42053d:	out    dx,eax
  42053e:	pop    esp
  42053f:	ins    BYTE PTR es:[edi],dx
  420540:	enter  0xae03,0xd8
  420544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420545:	rcl    al,cl
  420547:	out    0x98,al
  420549:	out    dx,eax
  42054a:	shl    ebp,1
  42054c:	out    0x3,al
  42054e:	mov    dh,0xf8
  420550:	(bad)  
  420551:	loop   0x42051e
  420553:	cmp    BYTE PTR [ecx+0x7ad9c725],bh
  420559:	add    ebx,DWORD PTR [eax-0x421accfb]
  42055f:	loope  0x420594
  420561:	icebp  
  420562:	xor    edi,0xe37ff236
  420568:	aas    
  420569:	call   0x428cbef
  42056e:	pushf  
  42056f:	add    eax,0xdc88e614
  420574:	inc    edi
  420575:	loopne 0x420577
	...
  4205a7:	add    BYTE PTR [ecx-0x6b0dbc08],dl
  4205ad:	not    DWORD PTR ds:0x3d945de
  4205b3:	add    al,0x50
  4205b5:	clc    
  4205b6:	or     esi,edx
  4205b8:	inc    ecx
  4205b9:	fist   DWORD PTR [esi+eiz*1]
  4205bc:	aas    
  4205bd:	fst    DWORD PTR [edx]
  4205bf:	add    al,0x63
  4205c1:	add    eax,0x56303e7
  4205c6:	out    0x3,eax
  4205c8:	arpl   WORD PTR ds:0x56303e7,ax
  4205ce:	out    0x3,eax
  4205d0:	arpl   WORD PTR ds:0x56303e7,ax
  4205d6:	out    0x3,eax
  4205d8:	arpl   WORD PTR ds:0x56303e7,ax
  4205de:	out    0x3,eax
  4205e0:	arpl   WORD PTR ds:0x56303e7,ax
  4205e6:	add    cl,ch
  4205e8:	pusha  
  4205e9:	add    eax,0x560e900
  4205ee:	add    cl,ch
  4205f0:	pusha  
  4205f1:	add    eax,0x560e900
  4205f6:	add    cl,ch
  4205f8:	pusha  
  4205f9:	add    eax,0x560e900
  4205fe:	add    cl,ch
  420600:	pusha  
  420601:	add    eax,0x560e900
  420606:	add    cl,ch
  420608:	pusha  
  420609:	add    eax,0xe900
	...
  42063e:	pusha  
  42063f:	add    eax,0x560e900
  420644:	add    cl,ch
  420646:	pusha  
  420647:	add    eax,0x560e900
  42064c:	add    cl,ch
  42064e:	pusha  
  42064f:	add    eax,0x560e900
  420654:	add    cl,ch
  420656:	pusha  
  420657:	add    eax,0x560e900
  42065c:	add    cl,ch
  42065e:	pusha  
  42065f:	add    eax,0x560e900
  420664:	add    cl,ch
  420666:	pusha  
  420667:	add    eax,0x560e900
  42066c:	add    cl,ch
  42066e:	pusha  
  42066f:	add    eax,0x560e900
  420674:	add    cl,ch
  420676:	pusha  
  420677:	add    eax,0x560e900
  42067c:	add    cl,ch
  42067e:	pusha  
  42067f:	add    eax,0x560e900
  420684:	add    cl,ch
  420686:	pusha  
  420687:	add    eax,0x560e900
  42068c:	add    cl,ch
  42068e:	pusha  
  42068f:	add    eax,0x68a0000
  420694:	add    BYTE PTR [eax],al
  420696:	mov    al,BYTE PTR [esi]
  420698:	add    BYTE PTR [eax],al
  42069a:	jp     0x4206a2
  42069c:	add    BYTE PTR [eax],al
  42069e:	jp     0x4206a6
	...
  4206d4:	dec    edx
  4206d5:	push   es
  4206d6:	add    BYTE PTR [eax],al
  4206d8:	dec    edx
  4206d9:	push   es
  4206da:	add    BYTE PTR [eax],al
  4206dc:	pop    ds
  4206dd:	cmp    esp,ecx
  4206df:	int3   
  4206e0:	pop    ss
  4206e1:	cmp    esp,ecx
  4206e3:	int3   
  4206e4:	xchg   esi,eax
  4206e5:	jle    0x4206d3
  4206e7:	push   ecx
  4206e8:	call   0x5bcc0eac
  4206ed:	jge    0x42073a
  4206ef:	(bad)  
  4206f0:	fcomp  DWORD PTR [edi+0x5b]
  4206f3:	ret    
  4206f4:	mov    dh,0x7e
  4206f6:	in     al,dx
  4206f7:	push   ecx
  4206f8:	lods   eax,DWORD PTR ds:[esi]
  4206f9:	shl    BYTE PTR [eax],cl
  4206fb:	leave  
  4206fc:	xchg   DWORD PTR [esi+0x6f],edi
  4206ff:	xor    al,bl
  420701:	repnz or ecx,DWORD PTR [ebx+0x46890975]
  420708:	imul   edi,DWORD PTR [ebx+eax*2-0x4],0xffffffd8
  42070d:	jmp    0x6b3d:0x852d8b1f
  420714:	push   edi
  420715:	add    al,BYTE PTR [eax+0x1f1283f]
  42071b:	jmp    0x4206d7
  42071d:	leave  
  42071e:	pop    ebp
  42071f:	mov    edi,DWORD PTR [esi+0x16ccc0c7]
  420725:	jle    0x420713
  420727:	add    edi,0x20
  42072a:	mov    DWORD PTR [ebp+0x5b],eax
  42072d:	jl     0x420772
  42072f:	loopne 0x420709
  420731:	mov    bh,0xdf
  420733:	mov    esi,DWORD PTR [esi]
  420735:	add    DWORD PTR gs:[ecx+0x0],edx
	...
  420769:	add    BYTE PTR [edi+0x7c],dl
  42076c:	push   ebx
  42076d:	in     al,0xd8
  42076f:	mov    edi,0xed1b8be3
  420774:	add    BYTE PTR [ebp+0x6b],cl
  420777:	jl     0x4207c4
  420779:	clc    
  42077a:	call   0x21cdff4e
  42077f:	and    DWORD PTR [ecx],eax
  420781:	inc    ebp
  420782:	pop    ebx
  420783:	jl     0x4207c8
  420785:	call   0x8c39c272
  42078a:	mov    dl,0x25
  42078c:	add    DWORD PTR [ebp+0x5b],edx
  42078f:	jle    0x4207e4
  420791:	lock fadd st,st(2)
  420794:	test   DWORD PTR [ebx+0x4d0109ab],0xfc4b7e6b
  42079e:	and    al,0xc3
  4207a0:	repz add BYTE PTR [ebx+0x5],ah
  4207a4:	add    bl,ch
  4207a6:	push   0x7c
  4207a8:	push   ebx
  4207a9:	hlt    
  4207aa:	loopne 0x4207ef
  4207ac:	dec    DWORD PTR [eax+0x458971b6]
  4207b2:	or     edi,DWORD PTR [ebp+0x4b]
  4207b5:	hlt    
  4207b6:	cmp    BYTE PTR [ebp+0x7cab7317],bh
  4207bc:	push   ebx
  4207bd:	lock fadd DWORD PTR [ebx]
  4207c0:	add    DWORD PTR [ebp+0x5b],eax
  4207c3:	jle    0x420808
  4207c5:	fmul   QWORD PTR [ecx-0x9]
  4207c8:	lods   al,BYTE PTR ds:[si]
  4207ca:	popa   
  4207cb:	(bad)  
	...
  4207fe:	add    BYTE PTR [eax],al
  420800:	push   ds
  420801:	dec    ecx
  420802:	dec    edi
  420803:	call   0x420e3b
  420808:	loopne 0x42084b
  42080a:	or     al,0x85
  42080c:	mov    ds:0x168b18f2,eax
  420811:	jno    0x42079c
  420813:	inc    ebp
  420814:	mov    ebx,0x330cb4f8
  420819:	jle    0x420866
  42081b:	in     al,dx
  42081c:	call   0x26cdf3f3
  420821:	imul   ecx,DWORD PTR [ecx+0x4304f304],0x88fa8808
  42082b:	dec    ebp
  42082c:	jae    0x4207b2
  42082e:	mov    edi,0xefbada04
  420833:	jmp    0x4207f4
  420835:	xor    al,0xc0
  420837:	mov    eax,DWORD PTR [esi-0x36]
  42083a:	ror    ah,0x27
  42083d:	cmp    esp,ecx
  42083f:	int3   
  420840:	pop    ds
  420841:	cmp    esp,ecx
  420843:	int3   
  420844:	pop    ss
  420845:	cmp    esp,ecx
  420847:	int3   
  420848:	xchg   esi,eax
  420849:	jl     0x420837
  42084b:	add    DWORD PTR [edi+0xd],0xffffffe8
  42084f:	add    eax,0x89fd682c
  420854:	sahf   
  420855:	pop    ebp
  420856:	mov    DWORD PTR [ebp+0xb],eax
  420859:	aad    0xe7
  42085b:	sub    DWORD PTR [eax+ebp*2],edx
  42085e:	std    
  42085f:	and    DWORD PTR [edi],0x1
  420862:	mov    eax,ds:0xb4
	...
  420893:	add    BYTE PTR [eax],al
  420895:	add    BYTE PTR [esi-0x4098003a],ch
  42089b:	add    al,BYTE PTR [eax+0x0]
  42089e:	call   0xec93f05c
  4208a3:	adc    DWORD PTR [ebp+edx*2-0x475efa5e],esi
  4208aa:	ss (bad) 
  4208ac:	jmp    FWORD PTR [ecx+0x63]
  4208af:	(bad)  
  4208b1:	addr16 lahf 
  4208b3:	add    al,BYTE PTR [eax+0x0]
  4208b6:	les    edx,FWORD PTR [ecx]
  4208b8:	mov    eax,0x87052255
  4208bd:	inc    ebp
  4208be:	retf   
  4208bf:	aas    
  4208c0:	inc    ebx
  4208c1:	cld    
  4208c2:	arpl   WORD PTR ds:0xfdb80000,ax
  4208c8:	mov    BYTE PTR [ebp-0x61],dl
  4208cb:	add    edx,0x1
  4208ce:	jmp    0x869:0xe83fbd1
  4208d5:	jae    0x420919
  4208d7:	jl     0x42091c
  4208d9:	cld    
  4208da:	call   0x61ce8bd7
  4208df:	vmovmskps ebx,ymm0
  4208e3:	shl    edi,1
  4208e5:	push   edx
  4208e6:	adc    DWORD PTR fs:[ebp+edx*2+0x4d8905a2],esi
  4208ee:	push   edi
  4208ef:	jge    0x4208f5
  4208f1:	lea    edx,[edi]
  4208f3:	sar    DWORD PTR [esi],1
  4208f5:	add    BYTE PTR [eax],bh
  4208f7:	push   esi
  4208f8:	mov    ebp,esp
	...
  42092a:	add    BYTE PTR [eax],al
  42092c:	sahf   
  42092d:	inc    edx
  42092e:	int3   
  42092f:	int3   
  420930:	daa    
  420931:	cmp    cl,ah
  420933:	int3   
  420934:	pop    ds
  420935:	cmp    cl,ah
  420937:	int3   
  420938:	pop    ss
  420939:	cmp    cl,ah
  42093b:	int3   
  42093c:	mov    dh,0x7a
  42093e:	in     al,dx
  42093f:	mov    eax,ds:0x3ecf73
  420944:	dec    ebp
  420945:	jp     0x420987
  420947:	xor    al,bl
  420949:	mov    eax,0xbdea3e07
  42094e:	pop    es
  42094f:	pop    ebp
  420950:	and    BYTE PTR [edx],bh
  420952:	int3   
  420953:	int3   
  420954:	pop    ds
  420955:	cmp    cl,ah
  420957:	int3   
  420958:	pop    ss
  420959:	cmp    cl,ah
  42095b:	int3   
  42095c:	ss jp  0x42094b
  42095f:	mov    ebx,DWORD PTR [esi]
  420961:	stc    
  420962:	dec    edi
  420963:	mov    ebx,DWORD PTR [esi]
  420965:	std    
  420966:	dec    esi
  420967:	jmp    FWORD PTR [esi-0x4f]
  42096a:	push   ebx
  42096b:	inc    ecx
  42096c:	arpl   ax,cx
  42096e:	ror    ah,0xa7
  420971:	cmp    esp,ecx
  420973:	int3   
  420974:	lahf   
  420975:	cmp    esp,ecx
  420977:	int3   
  420978:	xchg   edi,eax
  420979:	cmp    esp,ecx
  42097b:	int3   
  42097c:	ss jp  0x42096b
  42097f:	add    DWORD PTR [edi-0x6ff9603],0x4
  420986:	push   0xffc561dc
  42098b:	(bad)  
  42098c:	push   esi
  42098d:	lods   eax,DWORD PTR ds:[esi]
  42098e:	push   ebx
  42098f:	inc    ecx
	...
  4209c0:	add    BYTE PTR [eax],al
  4209c2:	arpl   WORD PTR [ebx+eax*2-0x8],di
  4209c6:	sti    
  4209c7:	pop    esp
  4209c8:	add    al,BYTE PTR [eax+0x63]
  4209cb:	jp     0x420a10
  4209cd:	clc    
  4209ce:	mov    bl,0x5d
  4209d0:	mov    edx,0x816654ff
  4209d5:	les    ebx,FWORD PTR [ebx+0x7c]
  4209d8:	inc    ebx
  4209d9:	cld    
  4209da:	fdiv   DWORD PTR [edi-0x3017aef1]
  4209e0:	or     edx,DWORD PTR [edx-0x18]
  4209e3:	mov    edi,0xd02c5007
  4209e8:	sti    
  4209e9:	mov    edi,DWORD PTR [esi]
  4209eb:	enter  0xccc0,0xb6
  4209ef:	jp     0x4209dd
  4209f1:	push   ecx
  4209f2:	sbb    al,0xc0
  4209f4:	sti    
  4209f5:	add    BYTE PTR [ebx+0x5],ah
  4209f8:	add    bl,ch
  4209fa:	pop    edx
  4209fb:	jp     0x420a40
  4209fd:	cld    
  4209fe:	loopne 0x420a44
  420a00:	dec    DWORD PTR [eax+0x4d89699e]
  420a06:	out    dx,eax
  420a07:	sub    DWORD PTR [ebx+0x10],ecx
  420a0a:	jo     0x420a12
  420a0c:	mov    DWORD PTR [ebp+0x6b],edx
  420a0f:	add    dl,BYTE PTR [ebx-0x4]
  420a12:	fs scas eax,DWORD PTR es:[edi]
  420a14:	add    cl,BYTE PTR [ebx+0x4d00f91e]
  420a1a:	(bad)  
  420a1b:	cmc    
  420a1c:	mov    ch,0x11
  420a1e:	js     0x420a63
  420a20:	je     0x420a29
  420a22:	sti    
  420a23:	add    eax,DWORD PTR [eax]
	...
  420a55:	add    BYTE PTR [eax],al
  420a57:	add    BYTE PTR [ebx+0x5a],ah
  420a5a:	add    al,0xeb
  420a5c:	xchg   ebx,eax
  420a5d:	xor    eax,eax
  420a5f:	mov    eax,DWORD PTR [esi-0x58333f39]
  420a65:	cmp    ah,cl
  420a67:	int3   
  420a68:	lahf   
  420a69:	cmp    ah,cl
  420a6b:	int3   
  420a6c:	xchg   edi,eax
  420a6d:	cmp    ah,cl
  420a6f:	int3   
  420a70:	push   ss
  420a71:	jp     0x420a5f
  420a73:	mov    ecx,0x55b
  420a78:	pop    es
  420a79:	jp     0x420a82
  420a7b:	mov    DWORD PTR [esi+0x15],edx
  420a7e:	push   esi
  420a7f:	inc    ecx
  420a80:	arpl   dx,ax
  420a82:	ror    ah,0x27
  420a85:	push   edx
  420a86:	int3   
  420a87:	int3   
  420a88:	pop    ds
  420a89:	push   edx
  420a8a:	int3   
  420a8b:	int3   
  420a8c:	pop    ss
  420a8d:	push   edx
  420a8e:	int3   
  420a8f:	int3   
  420a90:	xchg   esi,eax
  420a91:	nop
  420a92:	in     al,dx
  420a93:	add    DWORD PTR [edi-0xa],0xffffff88
  420a97:	inc    ebp
  420a98:	pop    ebx
  420a99:	mov    BYTE PTR [eax+0x4],bh
  420a9c:	arpl   WORD PTR [esp+eax*4],dx
  420a9f:	mov    BYTE PTR [ebx+0x5],ah
  420aa2:	add    BYTE PTR [ebx+0x51890da6],cl
  420aa8:	addr16 mov dl,ch
  420aab:	or     BYTE PTR [edx],dh
  420aad:	jo     0x420a36
  420aaf:	push   ebp
  420ab0:	not    DWORD PTR [eax+0x45e00843]
  420ab6:	or     BYTE PTR [ecx+0x45c555a6],cl
	...
  420aec:	add    BYTE PTR [eax],al
  420aee:	out    0x5,eax
  420af0:	add    BYTE PTR [eax],al
  420af2:	arpl   WORD PTR [eax+0x7],si
  420af5:	mov    esp,DWORD PTR [esi]
  420af7:	popa   
  420af8:	add    ecx,0xfc4b8e62
  420afe:	fdivr  DWORD PTR [edx+0x59163bfb]
  420b04:	jno    0x420b4c
  420b06:	call   0x1ece06d5
  420b0b:	push   ebp
  420b0c:	or     eax,0xbec64fb7
  420b11:	cli    
  420b12:	outs   dx,DWORD PTR ds:[esi]
  420b13:	mov    dl,bh
  420b15:	add    ecx,DWORD PTR [esi]
  420b17:	pop    ss
  420b18:	mov    DWORD PTR [ebp-0x71],eax
  420b1b:	nop
  420b1c:	dec    ebx
  420b1d:	lock push esp
  420b1f:	pushf  
  420b20:	adc    al,0x41
  420b22:	loop   0x420b8b
  420b24:	std    
  420b25:	packsswb mm0,QWORD PTR ds:0x906b5587
  420b2c:	inc    ebx
  420b2d:	or     al,bl
  420b2f:	ror    BYTE PTR [ebx],cl
  420b31:	add    ebp,DWORD PTR [ebx-0x70]
  420b34:	push   ebx
  420b35:	clc    
  420b36:	call   0xa6451a43
  420b3b:	cmc    
  420b3c:	mov    BYTE PTR [ebp+0x5b],cl
  420b3f:	nop
  420b40:	push   ebx
  420b41:	or     al,0x60
  420b43:	test   BYTE PTR [eax+0x48e3b4d],0xa
  420b4a:	cmp    BYTE PTR [esi-0x6fa4aa77],ch
  420b50:	inc    ebx
  420b51:	or     BYTE PTR [eax],al
	...
  420b83:	add    BYTE PTR [eax-0x39],ah
  420b86:	add    ecx,DWORD PTR [ecx+0x6be70d9e]
  420b8c:	or     al,0x64
  420b8e:	std    
  420b8f:	mov    edi,esi
  420b91:	rol    eax,0xcc
  420b94:	xchg   esi,eax
  420b95:	nop
  420b96:	in     al,dx
  420b97:	add    DWORD PTR [edi],0x29
  420b9a:	mov    DWORD PTR [ebp+0x5b],eax
  420b9d:	mov    es,WORD PTR [ebx-0x1c]
  420ba0:	fcom   st(1)
  420ba2:	jecxz  0x420b2f
  420ba4:	imul   eax,DWORD PTR ss:[ecx],0x538e9751
  420bab:	call   0x8c29d588
  420bb0:	fild   DWORD PTR [eax+eax*1+0x4b8e6300]
  420bb7:	lock loopne 0x420b9b
  420bba:	out    dx,eax
  420bbb:	add    BYTE PTR [ecx+ecx*4-0x7],bl
  420bbf:	add    BYTE PTR [ebx+0x5],ah
  420bc2:	mov    DWORD PTR [ebp+0x6b],edx
  420bc5:	or     BYTE PTR [ebx-0x10],dl
  420bc8:	jmp    0x8165:0x268bdfb9
  420bcf:	js     0x420c44
  420bd1:	add    eax,0x486840d
  420bd6:	add    BYTE PTR [eax],al
  420bd8:	or     DWORD PTR ds:0xd1d8006a,eax
  420bde:	fisttp WORD PTR [ebx+0x51010d0e]
  420be4:	outs   dx,DWORD PTR ds:[esi]
  420be5:	mov    bh,0xfc
  420be7:	adc    eax,0x0
	...
  420c18:	add    BYTE PTR [eax],al
  420c1a:	sbb    edi,DWORD PTR [ecx-0x3725ffc2]
  420c20:	sti    
  420c21:	mov    ebx,DWORD PTR [esi+0x63388165]
  420c27:	fst    DWORD PTR [esi]
  420c29:	mov    esp,DWORD PTR [esi+0x5b558965]
  420c2f:	push   es
  420c30:	jns    0x45cb7dc4
  420c36:	add    ecx,DWORD PTR [edi-0x329ff7b5]
  420c3c:	jns    0x182b65e0
  420c42:	fdivr  DWORD PTR [eax+0xda68bdf]
  420c48:	add    DWORD PTR [edx+0x53],eax
  420c4b:	mov    WORD PTR [ebx-0xc],es
  420c4e:	fcom   st(0)
  420c50:	fisttp WORD PTR [ebx+0x11010d8e]
  420c56:	jmp    0x5d:0x1ec7ebb8
  420c5d:	add    BYTE PTR [ebx+0x5],ah
  420c60:	mov    DWORD PTR [ebp-0x3d],eax
  420c63:	xchg   BYTE PTR [eax+0x10],bh
  420c66:	arpl   cx,bx
  420c68:	or     al,0x8b
  420c6a:	es cmp DWORD PTR gs:[ecx],0xc704d963
  420c72:	push   ds
  420c73:	pop    ebp
  420c74:	(bad)  
  420c75:	jmp    DWORD PTR [ebx+0x5]
  420c78:	mov    DWORD PTR [ebp-0x71],edx
  420c7b:	xchg   BYTE PTR [edx],bh
	...
  420cad:	add    BYTE PTR [eax],al
  420caf:	add    BYTE PTR [edi],dl
  420cb1:	in     al,0x88
  420cb3:	inc    ebp
  420cb4:	(bad)  
  420cb5:	mov    cs,WORD PTR [eax]
  420cb7:	add    DWORD PTR [edx-0x1cfffffb],0x168b1bd9
  420cc1:	pop    ecx
  420cc2:	mov    DWORD PTR [edx],eax
  420cc4:	ds (bad) 
  420cc6:	std    
  420cc7:	(bad)  
  420cc8:	fdiv   QWORD PTR [ebp-0x4ba8b278]
  420cce:	out    0xb5,eax
  420cd0:	dec    esi
  420cd1:	(bad)  
  420cd2:	std    
  420cd3:	sbb    DWORD PTR [edi],0xd
  420cd6:	xchg   DWORD PTR [ebp+0x1f],eax
  420cd9:	outs   dx,BYTE PTR ds:[esi]
  420cda:	sbb    al,0x8b
  420cdc:	mov    ds,WORD PTR [ecx-0x77]
  420cdf:	add    bl,al
  420ce1:	iret   
  420ce2:	pop    es
  420ce3:	lea    ecx,[edi-0x17adfdf3]
  420ce9:	(bad)  
  420cea:	sti    
  420ceb:	push   eax
  420cec:	or     edi,DWORD PTR [edx-0x5]
  420cef:	dec    DWORD PTR [esi+eax*4]
  420cf2:	les    ecx,FWORD PTR [eax]
  420cf4:	fcmovb st,st(7)
  420cf6:	fisttp DWORD PTR [ebx+0x558959ae]
  420cfc:	pop    ss
  420cfd:	mov    WORD PTR [edi],cs
  420cff:	mov    esp,DWORD PTR [esi+0x5fc08159]
  420d05:	mov    WORD PTR [ebx-0xc],es
  420d08:	call   0xa2c5f8dc
  420d0d:	or     BYTE PTR [edi-0x6a9240b3],al
  420d13:	mov    eax,DWORD PTR [eax]
	...
  420d45:	add    BYTE PTR [esi],ch
  420d47:	gs add edx,0xe0538c57
  420d4e:	retf   0xfd12
  420d51:	jmp    FWORD PTR [ebp+ecx*4+0x50a05de3]
  420d58:	int3   
  420d59:	int3   
  420d5a:	ss mov gs,esp
  420d5d:	add    DWORD PTR [edi+0x61f0680c],0xffffffc5
  420d64:	(bad)  
  420d65:	(bad)  
  420d66:	outs   dx,BYTE PTR ds:[esi]
  420d67:	inc    ebp
  420d68:	push   ebx
  420d69:	inc    ecx
  420d6a:	arpl   WORD PTR [ebx+eax*2+0x2610bf8],cx
  420d71:	inc    eax
  420d72:	arpl   WORD PTR [esi+0x6d13f843],cx
  420d78:	ds std 
  420d7a:	pop    esp
  420d7b:	popa   
  420d7c:	add    esp,0xfc438e6b
  420d82:	fcom   st(2)
  420d84:	sqrtps xmm3,xmm0
  420d87:	mov    edx,0xcae8520b
  420d8c:	pop    es
  420d8d:	push   eax
  420d8e:	xor    al,0xbb
  420d90:	sti    
  420d91:	mov    eax,DWORD PTR [esi-0x3d]
  420d94:	ror    ah,0x17
  420d97:	push   edx
  420d98:	int3   
  420d99:	int3   
  420d9a:	mov    dh,0x8c
  420d9c:	in     al,dx
  420d9d:	mov    eax,ds:0x3eb777
  420da2:	and    eax,0x6e8b6806
  420da7:	stc    
  420da8:	push   ebp
  420da9:	inc    ecx
	...
  420dda:	add    BYTE PTR [eax],al
  420ddc:	arpl   WORD PTR [esi+0x44b10150],cx
  420de2:	mov    BYTE PTR [eax+0x66],dl
  420de5:	ret    0xccc0
  420de8:	pop    ss
  420de9:	push   edx
  420dea:	int3   
  420deb:	int3   
  420dec:	ss mov esp,gs
  420def:	add    edi,0x11
  420df2:	lahf   
  420df3:	adc    BYTE PTR ds:0xb18affc6,dh
  420df9:	adc    al,0xc7
  420dfb:	ds call 0x91cd3dc6
  420e01:	mov    edx,ss
  420e03:	ds fmul st,st(5)
  420e06:	or     ecx,DWORD PTR [ebx-0xbb4716f]
  420e0c:	call   0x2bce01db
  420e11:	adc    DWORD PTR [edi+0x538c8b4d],eax
  420e17:	clc    
  420e18:	fidivr DWORD PTR [edx+0x562b8fb]
  420e1e:	add    BYTE PTR [eax],al
  420e20:	fiadd  WORD PTR [ebp+0x74]
  420e23:	inc    esp
  420e24:	loopne 0x420e08
  420e26:	test   DWORD PTR [eax],0xc03108ee
  420e2c:	dec    eax
  420e2d:	and    DWORD PTR [ecx+0x4f8c5b4d],ecx
  420e33:	sbb    BYTE PTR [eax+0x6a7507ba],cl
  420e39:	mov    WORD PTR [ebx-0x8],es
  420e3c:	call   0xcb1a12
	...
  420e71:	add    BYTE PTR [ebx+0x2b558901],ch
  420e77:	mov    WORD PTR [ebx+0x10],es
  420e7a:	fcmovb st,st(2)
  420e7c:	pop    ss
  420e7d:	mov    eax,0x562
  420e82:	or     ch,bh
  420e84:	mov    BYTE PTR [ebp+0xb],cl
  420e87:	mov    WORD PTR [edi],cs
  420e89:	mov    DWORD PTR [esi-0x4ba76a3],ebp
  420e8f:	sbb    eax,DWORD PTR [ebx-0x4]
  420e92:	outs   dx,BYTE PTR ds:[esi]
  420e93:	or     DWORD PTR [ecx],esi
  420e95:	sar    al,0x8
  420e98:	jmp    0x89873f50
  420e9d:	in     eax,0x3e
  420e9f:	inc    esp
  420ea0:	int3   
  420ea1:	int3   
  420ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ea3:	push   eax
  420ea4:	int3   
  420ea5:	int3   
  420ea6:	lahf   
  420ea7:	push   eax
  420ea8:	int3   
  420ea9:	int3   
  420eaa:	xchg   edi,eax
  420eab:	push   eax
  420eac:	int3   
  420ead:	int3   
  420eae:	push   ss
  420eaf:	mov    esp,gs
  420eb1:	add    edi,0xfffffffc
  420eb4:	les    eax,FWORD PTR [ebp-0x55]
  420eb7:	add    al,0x30
  420eb9:	add    BYTE PTR [ebx-0x13],ah
  420ebc:	add    eax,DWORD PTR [ebx]
  420ebe:	and    eax,DWORD PTR ds:0xc62efc9f
  420ec4:	dec    DWORD PTR [edi+0x7b]
  420ec7:	mov    bl,0xfb
  420ec9:	inc    DWORD PTR [ebx+eax*4-0x3615f73c]
  420ed0:	repz push 0x23
  420ed3:	mov    WORD PTR [ebx-0x8],cs
	...
  420f06:	add    BYTE PTR [eax],al
  420f08:	adc    cl,BYTE PTR [ebx+edx*1-0x39f124]
  420f0f:	mov    ah,BYTE PTR [ecx+0x636a4fb5]
  420f15:	pop    esi
  420f16:	push   ebx
  420f17:	hlt    
  420f18:	add    BYTE PTR [edx],bh
  420f1a:	push   ebx
  420f1b:	inc    ecx
  420f1c:	arpl   WORD PTR [edx-0x3b692bc5],ax
  420f22:	(bad)  
  420f23:	jmp    FWORD PTR [esi+0x6302b806]
  420f29:	add    eax,0x8ab9eb00
  420f2e:	or     eax,DWORD PTR [eax]
  420f30:	popa   
  420f31:	(bad)  
  420f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f35:	push   ebp
  420f36:	push   0x4b600
  420f3b:	push   0x400363
  420f40:	call   0xa297e33d
  420f45:	add    eax,0x363c27f
  420f4a:	add    BYTE PTR [eax],al
  420f4c:	xchg   ecx,eax
  420f4d:	ins    DWORD PTR es:[edi],dx
  420f4e:	sahf   
  420f4f:	(bad)  
  420f50:	fcomp  QWORD PTR [esi-0x7f]
  420f53:	les    esp,FWORD PTR [edi-0x63]
  420f56:	add    BYTE PTR [edx],al
  420f58:	and    eax,DWORD PTR ds:0x561002b
  420f5e:	add    BYTE PTR [ebx+0x4153396e],cl
  420f64:	arpl   WORD PTR [edx],bp
  420f66:	enter  0x5e89,0x9
  420f6a:	push   esi
  420f6b:	inc    ecx
	...
  420f9c:	add    BYTE PTR [eax],al
  420f9e:	arpl   WORD PTR [edx-0x3bcafbed],cx
  420fa4:	call   DWORD PTR [ecx-0x3e]
  420fa7:	cmp    DWORD PTR [ebx+0x41],edx
  420faa:	arpl   WORD PTR [ebp-0x4b6cb278],si
  420fb0:	out    0x9d,eax
  420fb2:	jg     0x421012
  420fb4:	std    
  420fb5:	sbb    DWORD PTR [edi-0x68ea76ef],0xffffffb8
  420fbc:	add    BYTE PTR ds:[eax-0x48],ah
  420fc0:	pop    es
  420fc1:	mov    DWORD PTR [esi+0x4b55896d],esi
  420fc7:	pop    esi
  420fc8:	loop   0x420f55
  420fca:	inc    esi
  420fcb:	rol    al,0xcc
  420fce:	pop    ss
  420fcf:	push   ecx
  420fd0:	int3   
  420fd1:	int3   
  420fd2:	xchg   esi,eax
  420fd3:	mov    ch,ah
  420fd5:	mov    ebx,DWORD PTR [esi+0x5f45390d]
  420fdb:	rol    BYTE PTR [ebx+ecx*4],cl
  420fde:	sahf   
  420fdf:	or     eax,0x20805e9
  420fe4:	mov    DWORD PTR [ebp+0x67],eax
  420fe7:	rol    al,0xcc
  420fea:	pop    ds
  420feb:	push   ecx
  420fec:	int3   
  420fed:	int3   
  420fee:	pop    ss
  420fef:	push   ecx
  420ff0:	int3   
  420ff1:	int3   
  420ff2:	xchg   esi,eax
  420ff3:	mov    ch,ah
  420ff5:	add    DWORD PTR [edi],0x31
  420ff8:	lds    eax,FWORD PTR [ebp-0x11]
  420ffb:	add    al,0x70
  420ffd:	add    DWORD PTR [ebx-0x76],esp
  421000:	inc    ebx
  421001:	or     BYTE PTR [eax],al
	...
  421033:	add    dl,ch
  421035:	(bad)  
  421036:	xlat   BYTE PTR ds:[ebx]
  421037:	mov    esp,DWORD PTR [esi]
  421039:	cmp    eax,0x25b5589
  42103e:	dec    edi
  42103f:	cmp    al,0xda
  421041:	mov    bh,0xdf
  421043:	mov    esp,DWORD PTR [esi]
  421045:	gs or  eax,0x88f92bb7
  42104b:	push   ebp
  42104c:	ret    
  42104d:	pop    DWORD PTR [edx+ecx*1+0x4b]
  421051:	mov    WORD PTR [ebx-0x18],es
  421054:	or     edi,ecx
  421056:	add    BYTE PTR [eax+0x63],al
  421059:	mov    cl,BYTE PTR [ebx]
  42105b:	cld    
  42105c:	ss (bad) 
  42105e:	call   DWORD PTR [eax+0x7b]
  421061:	int    0xf8
  421063:	(bad)  
  421064:	jl     0x420fe7
  421066:	les    ecx,FWORD PTR [eax]
  421068:	jmp    0xffed:0x236aefc7
  42106f:	das    
  421070:	arpl   WORD PTR ds:0x6d30068,ax
  421076:	add    BYTE PTR [edx+0x63],ch
  421079:	pop    esp
  42107a:	push   ebx
  42107b:	lock fcmovb st,st(2)
  42107e:	jecxz  0x42100b
  421080:	scas   al,BYTE PTR es:[edi]
  421081:	mov    DWORD PTR gs:[edx-0x69],eax
  421085:	mov    ch,0x88
  421087:	dec    ebp
  421088:	imul   esi,DWORD PTR [esi-0x47b8aa78],0xffffffe7
  42108f:	shl    DWORD PTR [esi],0x5d
  421092:	std    
  421093:	and    DWORD PTR [edi],0xa
  421096:	lds    eax,FWORD PTR [ebp+0x0]
	...
  4210c9:	add    BYTE PTR [edi],cl
  4210cb:	push   es
  4210cc:	add    BYTE PTR [eax],al
  4210ce:	arpl   WORD PTR [eax+0x7],si
  4210d1:	mov    ebx,DWORD PTR [esi+0x62c08151]
  4210d7:	mov    es,WORD PTR [ebx-0xc]
  4210da:	call   0xb451f0a9
  4210df:	mov    dh,0x5
  4210e1:	cmp    DWORD PTR [esi-0x17a68eaf],ecx
  4210e7:	ret    0x83e7
  4210ea:	pop    ebx
  4210eb:	icebp  
  4210ec:	push   DWORD PTR [ebx+0x26]
  4210ef:	nop
  4210f0:	dec    ebx
  4210f1:	call   0x51efd6
  4210f6:	aaa    
  4210f7:	sbb    DWORD PTR [ecx+0x4290cb55],ecx
  4210fd:	adc    al,bl
  4210ff:	retf   0x8bdf
  421102:	adc    bl,BYTE PTR [ecx]
  421104:	mov    eax,DWORD PTR [ebx+esi*2+0x5c]
  421108:	mov    DWORD PTR [ebp-0x7d],ecx
  42110b:	sbb    dl,dl
  42110d:	not    DWORD PTR [edx]
  42110f:	sbb    DWORD PTR [ecx-0x52f37cab],ecx
  421115:	inc    edx
  421116:	aas    
  421117:	mov    ch,0x88
  421119:	inc    ebp
  42111a:	mov    edx,DWORD PTR [eax-0x329ff7b5]
  421120:	adc    edx,DWORD PTR [ecx-0x28]
  421123:	mov    dl,0xe7
  421125:	mov    esp,DWORD PTR [esi+0x67420161]
  42112b:	mov    ch,0xe7
  42112d:	push   ebp
	...
  42115e:	add    BYTE PTR [eax],al
  421160:	dec    esi
  421161:	pop    esp
  421162:	std    
  421163:	sbb    DWORD PTR [edi],0x9
  421166:	mov    DWORD PTR [ebp+0x4b],ecx
  421169:	mov    BYTE PTR [edi-0x183615d8],bh
  42116f:	jmp    0x421142
  421171:	(bad)  
  421172:	push   ebx
  421173:	in     al,0x91
  421175:	ins    DWORD PTR es:[edi],dx
  421176:	push   cs
  421177:	cld    
  421178:	sbb    al,0x5c
  42117a:	add    esp,0x323ed5f
  421180:	mov    ds:0xaefc9f05,eax
  421185:	(bad)  
  421186:	dec    DWORD PTR [edi+0xb]
  421189:	nop
  42118a:	cli    
  42118b:	push   esp
  42118d:	xchg   esp,eax
  42118f:	or     dl,bl
  421191:	rcr    ebx,0x83
  421194:	es pop ebp
  421196:	push   ebx
  421197:	inc    ecx
  421198:	arpl   WORD PTR ds:0x9e80a73,ax
  42119e:	lock push ebp
  4211a0:	and    al,BYTE PTR ds:0x392eff4f
  4211a6:	cmp    DWORD PTR ds:0x3eb1bb,0x6a1bd263
  4211b0:	and    ebp,ebp
  4211b2:	jmp    FWORD PTR [edi]
  4211b4:	arpl   WORD PTR ds:0xb69f5589,ax
  4211ba:	mov    BYTE PTR [ebp-0x7d],al
  4211bd:	(bad)
  4211c1:	pop    esp
  4211c2:	push   ebx
  4211c3:	lock add BYTE PTR [eax],al
	...
  4211f6:	shl    BYTE PTR [eax],0x53
  4211f9:	inc    ecx
  4211fa:	arpl   WORD PTR [eax+0x13],si
  4211fd:	push   0x23
  4211ff:	in     eax,dx
  421200:	jmp    FWORD PTR [edi]
  421202:	arpl   WORD PTR ds:0xb6675589,ax
  421208:	imul   eax,DWORD PTR [eax],0xa3efb15c
  42120e:	das    
  42120f:	mov    cl,0x3e
  421211:	add    al,ah
  421213:	sbb    ah,dl
  421215:	push   ebp
  421216:	mov    ds:0x56750005,al
  42121b:	out    dx,eax
  42121c:	aas    
  42121d:	push   0x1563
  421222:	fadd   st,st(0)
  421224:	sti    
  421225:	push   eax
  421226:	mov    ecx,0x1355fd05
  42122b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42122c:	aam    0x55
  42122e:	mov    ds:0x74d8905,al
  421233:	lea    ecx,[ebx-0x28]
  421236:	fdiv   DWORD PTR [eax+0x3da68bd7]
  42123c:	add    DWORD PTR [edx+0x37],eax
  42123f:	mov    WORD PTR [ebx-0x20],es
  421242:	fmul   st,st(0)
  421244:	sti    
  421245:	push   ecx
  421246:	fdiv   DWORD PTR [eax+0x320252e3]
  42124c:	push   ebx
  42124d:	inc    ecx
  42124e:	arpl   WORD PTR [ebp+0x5acf95e7],si
  421254:	std    
  421255:	sbb    DWORD PTR [edi+0x4d8909],0x0
	...
  42128c:	ret    
  42128d:	xchg   BYTE PTR [edi+0x563a4],dh
  421293:	add    BYTE PTR [edi],dh
  421295:	pop    ds
  421296:	mov    DWORD PTR [ebp-0x3d],edx
  421299:	mov    es,WORD PTR [ebx-0x28]
  42129c:	pusha  
  42129d:	xchg   DWORD PTR [eax-0x78fa9d00],esp
  4212a3:	inc    ebp
  4212a4:	jg     0x421234
  4212a6:	dec    ebx
  4212a7:	loopne 0x421281
  4212a9:	lock rcl DWORD PTR [ebp+0x22],cl
  4212ad:	add    eax,0x8c2f5129
  4212b2:	adc    eax,DWORD PTR [edx*1+0x5fa0ffc4]
  4212b9:	mov    bl,0x3e
  4212bb:	add    BYTE PTR [ebx-0x512bf472],dh
  4212c1:	(bad)  
  4212c2:	call   DWORD PTR [eax-0x28]
  4212c5:	scas   eax,DWORD PTR es:[edi]
  4212c6:	jmp    0x42131a
  4212c8:	cmp    ebx,edx
  4212ca:	stc    
  4212cb:	(bad)  
  4212cc:	cmp    al,0x86
  4212ce:	les    ecx,FWORD PTR [eax+ebp*8]
  4212d1:	mov    edi,0x315e8bdf
  4212d6:	push   ebx
  4212d7:	inc    ecx
  4212d8:	arpl   WORD PTR [esi],ax
  4212da:	dec    eax
  4212db:	sub    dl,ch
  4212dd:	pop    es
  4212de:	adc    al,0x56
  4212e0:	mov    ds:0xb3d8105,al
  4212e5:	mov    al,0x3e
  4212e7:	add    BYTE PTR [ebx-0x30],ah
  4212ea:	sub    cl,BYTE PTR [ebx+0x41533156]
	...
  421320:	add    BYTE PTR [eax],al
  421322:	arpl   WORD PTR [edi-0x3b6aeb62],si
  421328:	dec    DWORD PTR [edi-0x28]
  42132b:	pop    es
  42132c:	lock push ebp
  42132e:	and    al,BYTE PTR ds:0x595be84f
  421334:	std    
  421335:	jmp    eax
  421337:	inc    eax
  421338:	or     al,0x8b
  42133a:	outs   dx,BYTE PTR ds:[esi]
  42133b:	xor    DWORD PTR [ebx+0x41],edx
  42133e:	arpl   WORD PTR [edi+0x59ba49e7],si
  421344:	std    
  421345:	and    DWORD PTR [edi+0x3b61e900],0x11
  42134c:	add    DWORD PTR [eax+0x63],eax
  42134f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421350:	cld    
  421351:	push   ebp
  421352:	and    al,BYTE PTR ds:0x5c37e850
  421358:	std    
  421359:	jmp    eax
  42135b:	inc    eax
  42135c:	or     BYTE PTR [ecx+0xd893126],cl
  421362:	(bad)  
  421363:	scas   eax,DWORD PTR es:[edi]
  421364:	add    BYTE PTR ds:[edx],dl
  421367:	mov    ss,WORD PTR [ebx-0x20]
  42136a:	ret    0x5330
  42136d:	inc    ecx
  42136e:	arpl   WORD PTR [edx+eax*2],ax
  421371:	sub    BYTE PTR [ebx-0x490ff474],dh
  421377:	(bad)  
  421378:	call   DWORD PTR [eax+0x3b]
  42137b:	sub    esp,edi
  42137d:	(bad)  
  42137e:	cmp    al,0x85
  421380:	les    ecx,FWORD PTR [eax+ebp*8]
  421383:	repnz out dx,eax
  421385:	push   ebp
	...
  4213b6:	add    BYTE PTR [eax],al
  4213b8:	mov    ds:0x93c27f05,al
  4213bd:	mov    ah,0xfe
  4213bf:	(bad)  
  4213c0:	jmp    0x8b05:0xa2561bf2
  4213c7:	inc    ebp
  4213c8:	or     esi,DWORD PTR [esi-0x86bf97]
  4213ce:	mov    BYTE PTR ds:0x3eaf5f,cl
  4213d4:	xchg   edx,eax
  4213d5:	pop    eax
  4213d6:	push   ebx
  4213d7:	aam    0xfb
  4213d9:	fs stc 
  4213db:	jmp    esp
  4213dd:	popf   
  4213de:	(bad)  
  4213df:	jmp    DWORD PTR [ebx+0x5]
  4213e2:	mov    ebp,esp
  4213e4:	ss inc ebx
  4213e6:	add    al,0x0
  4213e8:	lahf   
  4213e9:	dec    ecx
  4213ea:	int3   
  4213eb:	int3   
  4213ec:	xchg   edi,eax
  4213ed:	dec    ecx
  4213ee:	int3   
  4213ef:	int3   
  4213f0:	push   ss
  4213f1:	mov    esp,gs
  4213f3:	mov    ebx,DWORD PTR [esi]
  4213f5:	or     eax,0xbaaf4089
  4213fa:	ror    ah,0x97
  4213fd:	dec    ecx
  4213fe:	int3   
  4213ff:	int3   
  421400:	ss mov esp,gs
  421403:	push   ebx
  421404:	sub    eax,0x833d88b0
  421409:	mov    dl,0x3e
  42140b:	add    al,bl
  42140d:	cli    
  42140e:	jmp    0x421465
  421410:	and    al,BYTE PTR ds:0xb29b3589
  421416:	add    BYTE PTR ds:[edi+esi*4],cl
  42141a:	pop    eax
  42141b:	pop    ebp
	...
  42144c:	add    BYTE PTR [eax],al
  42144e:	mov    al,ds:0xb6cccc49
  421453:	mov    esp,gs
  421455:	push   ecx
  421456:	retf   
  421457:	rol    DWORD PTR [eax],0x40
  42145a:	arpl   WORD PTR [esi+0x5a255fc],sp
  421460:	push   eax
  421461:	call   0x3f7175
  421466:	loopne 0x4214a8
  421468:	or     BYTE PTR [ecx+0x4d8959a6],cl
  42146e:	pop    ebx
  42146f:	mov    dh,0x69
  421471:	add    al,ch
  421473:	icebp  
  421474:	pop    ss
  421475:	push   esi
  421476:	mov    ds:0xb6ff5205,al
  42147b:	pop    ecx
  42147c:	mov    ebp,esp
  42147e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42147f:	inc    esp
  421480:	int3   
  421481:	int3   
  421482:	xchg   esi,eax
  421483:	mov    esp,gs
  421485:	add    DWORD PTR [edi],0x21
  421488:	lds    eax,FWORD PTR [ebp-0x15]
  42148b:	add    al,0x0
  42148d:	add    BYTE PTR [ebx+0x40],ah
  421490:	inc    ebx
  421491:	fcomp  QWORD PTR [ebx+0x5]
  421494:	add    BYTE PTR [eax],al
  421496:	pushf  
  421497:	shl    ebx,0x1
  42149a:	arpl   WORD PTR ds:0x591ec700,ax
  4214a0:	add    BYTE PTR [eax],al
  4214a2:	arpl   WORD PTR ds:0x4bf45c5,ax
  4214a8:	add    BYTE PTR [eax],al
  4214aa:	arpl   WORD PTR [ebx+ecx*2-0xff625f8],cx
  4214b1:	push   ebp
	...
  4214e2:	add    BYTE PTR [eax],al
  4214e4:	and    al,BYTE PTR ds:0x578ca9e8
  4214ea:	std    
  4214eb:	mov    eax,ds:0x3eb193
  4214f0:	ds pop eax
  4214f2:	std    
  4214f3:	add    BYTE PTR [ebx-0x2f],ah
  4214f6:	or     eax,edi
  4214f8:	pop    esi
  4214f9:	pop    ebp
  4214fa:	push   ebx
  4214fb:	inc    ecx
  4214fc:	arpl   WORD PTR ds:0x6c630000,ax
  421502:	or     al,bh
  421504:	pop    bp
  421506:	push   ebx
  421507:	inc    ecx
  421508:	arpl   WORD PTR [eax+eax*1],ax
  42150b:	add    BYTE PTR [ebx-0x7e],ah
  42150e:	cmp    esi,eax
  421510:	scas   al,BYTE PTR es:[edi]
  421511:	(bad)  
  421512:	(bad)  
  421513:	push   DWORD PTR [esi+0x3b05c50b]
  421519:	mov    cl,0x3e
  42151b:	add    BYTE PTR [ebx+0x5],ah
  42151e:	add    BYTE PTR [eax],al
  421520:	loopne 0x42153a
  421522:	clc    
  421523:	push   ebp
  421524:	mov    ds:0x66750005,al
  421529:	jmp    0x42152a
  42152b:	(bad)  
  42152c:	jbe    0x421573
  42152e:	push   ebx
  42152f:	inc    ecx
  421530:	arpl   WORD PTR [edx+0x5a255f0],sp
  421536:	mov    DWORD PTR ds:0x3eb0f3,ecx
  42153c:	fcmove st,st(0)
  42153e:	out    0x8b,eax
  421540:	dec    esi
  421541:	push   ebp
  421542:	push   ebx
  421543:	inc    ecx
  421544:	arpl   WORD PTR [edx+0xe843],cx
	...
  42157a:	pusha  
  42157b:	ret    
  42157c:	cmp    ecx,DWORD PTR [ecx+0x4d896d26]
  421582:	mov    ebx,0x16dc0b8c
  421587:	(bad)  
  421588:	jmp    DWORD PTR [edi+0x13]
  42158b:	add    al,BYTE PTR [eax+0x0]
  42158e:	lods   al,BYTE PTR ds:[esi]
  42158f:	lock mov edi,0xa1052255
  421595:	cld    
  421596:	ss (bad) 
  421598:	inc    esi
  42159a:	pop    esi
  42159b:	or     DWORD PTR [esi+0x41],edx
  42159e:	arpl   ax,dx
  4215a0:	add    BYTE PTR [eax+0x63],al
  4215a3:	in     eax,dx
  4215a4:	pop    edi
  4215a5:	add    esp,DWORD PTR [ebx]
  4215a7:	add    eax,0xb0771589
  4215ac:	add    BYTE PTR ds:[ecx],dl
  4215af:	ins    DWORD PTR es:[edi],dx
  4215b0:	ret    0x64f7
  4215b3:	push   esi
  4215b4:	add    esp,0x5608a26b
  4215ba:	mov    ds:0x5b15fd05,al
  4215bf:	scas   eax,DWORD PTR es:[edi]
  4215c0:	add    BYTE PTR ds:[eax],al
  4215c3:	std    
  4215c4:	push   ebp
  4215c5:	inc    ecx
  4215c6:	arpl   WORD PTR [esp+ecx*1+0x5005a256],sp
  4215cd:	call   0x3f6cc9
  4215d2:	loopne 0x421614
  4215d4:	add    al,0x89
  4215d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215d7:	push   ebp
  4215d8:	mov    DWORD PTR [ebp+0x13],ecx
  4215db:	mov    ah,0xe7
  4215dd:	aad    0x0
	...
  42160f:	add    BYTE PTR ds:0x1f83fd56,cl
  421615:	add    DWORD PTR [ecx-0x3b690c],esp
  42161b:	mov    cl,BYTE PTR [esi+0x636a5255]
  421621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421622:	hlt    
  421623:	push   ebp
  421624:	mov    ds:0xffe85005,al
  421629:	dec    ebp
  42162a:	std    
  42162b:	jmp    eax
  42162d:	inc    eax
  42162e:	or     al,0x8b
  421630:	push   ds
  421631:	push   ebp
  421632:	xchg   DWORD PTR [ebp-0x3d],ecx
  421635:	mov    DWORD PTR [ebx-0x4],edx
  421638:	js     0x4215ea
  42163a:	out    dx,eax
  42163b:	jae    0x421656
  42163d:	mov    al,BYTE PTR [ebx-0x20]
  421640:	adc    ecx,DWORD PTR [edx+0x6d12dc4b]
  421646:	scas   al,BYTE PTR es:[edi]
  421647:	sti    
  421648:	pushf  
  421649:	push   ebp
  42164a:	add    esp,0x5600a26b
  421650:	and    al,BYTE PTR ds:0xaf631589
  421656:	add    BYTE PTR ds:[ecx],dl
  421659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42165a:	or     al,0x56
  42165c:	and    al,BYTE PTR ds:0xb4874501
  421662:	mov    BYTE PTR ds:0x3eaf6f,cl
  421668:	pusha  
  421669:	ret    0x51fb
  42166c:	dec    ebx
  42166d:	cmp    eax,0x894cfff7
  421672:	les    ecx,FWORD PTR [eax+eax*1]
	...
  4216a5:	add    al,bl
  4216a7:	mov    edx,0x319603f3
  4216ac:	add    DWORD PTR [ebp+0x3f],edx
  4216af:	jg     0x421704
  4216b1:	in     al,0xd8
  4216b3:	retf   0x3fb
  4216b6:	sahf   
  4216b7:	xor    DWORD PTR [edi+0x4b811f45],eax
  4216bd:	loopne 0x421707
  4216bf:	add    al,BYTE PTR [eax]
  4216c1:	push   esi
  4216c2:	mov    ds:0x34d8705,al
  4216c7:	popa   
  4216c8:	sahf   
  4216c9:	(bad)  
  4216ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216cb:	dec    ebp
  4216cc:	add    BYTE PTR [eax],al
  4216ce:	arpl   WORD PTR ds:0xbad809e9,ax
  4216d4:	test   DWORD PTR [ebx+0x55870a21],0xf84380db
  4216de:	cwde   
  4216df:	retf   0x73ef
  4216e2:	mov    eax,DWORD PTR [eax-0x39d10bf5]
  4216e8:	inc    DWORD PTR [edx]
  4216ea:	cs dec ebp
  4216ec:	mov    DWORD PTR [ecx],edx
  4216ee:	pusha  
  4216ef:	mov    edx,0xbab7a1f7
  4216f4:	add    BYTE PTR ds:[eax-0x36],ah
  4216f8:	test   DWORD PTR [ecx-0x7b47f8d],0x3e746e2
  421702:	arpl   WORD PTR ds:0xba8f1589,ax
  421708:	add    BYTE PTR ds:[eax],al
	...
  42173b:	add    BYTE PTR [eax-0x46],ah
  42173e:	div    DWORD PTR [ebx]
  421740:	imul   esp,DWORD PTR [esi+0x52255f4],0x7e6b4501
  42174a:	or     bl,ch
  42174c:	adc    al,0x7e
  42174e:	sub    esp,esp
  421750:	scas   al,BYTE PTR es:[edi]
  421751:	(bad)  
  421752:	dec    DWORD PTR [eax+0x4153658e]
  421758:	arpl   WORD PTR [eax],bx
  42175a:	(bad)  
  42175b:	mov    DWORD PTR [esi+0x2d],esi
  42175e:	push   ebx
  42175f:	inc    ecx
  421760:	arpl   WORD PTR [eax],bx
  421762:	(bad)  
  421763:	mov    DWORD PTR [esi+0x61],ecx
  421766:	push   ebx
  421767:	inc    ecx
  421768:	arpl   WORD PTR [ebp+0x4e],bx
  42176b:	neg    DWORD PTR [esp+edx*2]
  42176e:	mov    ecx,DWORD PTR ds:0x3eba84
  421774:	fcmovb st,st(1)
  421776:	idiv   DWORD PTR [ecx+0x400763]
  42177c:	loop   0x4217db
  42177e:	add    BYTE PTR [edx],al
  421780:	arpl   WORD PTR ds:0x1feb5589,ax
  421786:	iret   
  421787:	mov    DWORD PTR [esi+0x5d],ecx
  42178a:	push   ebx
  42178b:	inc    ecx
  42178c:	arpl   WORD PTR [esi+0x52255e8],sp
  421792:	push   eax
  421793:	call   0x3f66ff
  421798:	loopne 0x4217e2
  42179a:	add    al,0x8b
  42179c:	outs   dx,BYTE PTR ds:[esi]
  42179d:	pop    ecx
  42179e:	push   ebx
  42179f:	inc    ecx
	...
  4217d0:	add    BYTE PTR [eax],al
  4217d2:	arpl   WORD PTR [esi+0x53a9d5e7],si
  4217d8:	std    
  4217d9:	test   DWORD PTR [ebx-0x5cccfc27],esp
  4217df:	pop    edi
  4217e0:	sub    cl,BYTE PTR [ebx+0x4153693e]
  4217e6:	arpl   WORD PTR [eax+0x11e004c4],cx
  4217ec:	clc    
  4217ed:	push   ebp
  4217ee:	and    al,BYTE PTR ds:0xa66a7400
  4217f4:	aam    0x55
  4217f6:	and    al,BYTE PTR ds:0x93f4487
  4217fc:	call   0xfd95765e
  421801:	mov    ebp,DWORD PTR [esi-0x7]
  421804:	push   ebp
  421805:	inc    ecx
  421806:	arpl   WORD PTR [edi+0x7f2333c0],si
  42180c:	jecxz  0x42186b
  42180e:	and    BYTE PTR [edx-0x34],al
  421811:	int3   
  421812:	arpl   WORD PTR ds:0x5630000,ax
  421818:	add    BYTE PTR [eax],al
  42181a:	arpl   WORD PTR ds:0x5630000,ax
  421820:	add    BYTE PTR [eax],al
  421822:	arpl   WORD PTR ds:0x5630000,ax
  421828:	add    BYTE PTR [eax],al
  42182a:	arpl   WORD PTR ds:0x5630000,ax
  421830:	add    BYTE PTR [eax],al
  421832:	arpl   WORD PTR ds:0x0,ax
	...
  421868:	arpl   WORD PTR ds:0x5630000,ax
  42186e:	add    BYTE PTR [eax],al
  421870:	arpl   WORD PTR ds:0x5630000,ax
  421876:	add    BYTE PTR [eax],al
  421878:	arpl   WORD PTR ds:0x5630000,ax
  42187e:	add    BYTE PTR [eax],al
  421880:	arpl   WORD PTR ds:0x5630000,ax
  421886:	add    BYTE PTR [eax],al
  421888:	arpl   WORD PTR ds:0x5630000,ax
  42188e:	add    BYTE PTR [eax],al
  421890:	arpl   WORD PTR ds:0x5630000,ax
  421896:	add    BYTE PTR [eax],al
  421898:	arpl   WORD PTR ds:0x5630000,ax
  42189e:	add    BYTE PTR [eax],al
  4218a0:	arpl   WORD PTR ds:0x5630000,ax
  4218a6:	add    BYTE PTR [eax],al
  4218a8:	arpl   WORD PTR ds:0x5630000,ax
  4218ae:	add    BYTE PTR [eax],al
  4218b0:	arpl   WORD PTR ds:0x5630000,ax
  4218b6:	add    BYTE PTR [eax],al
  4218b8:	arpl   WORD PTR ds:0x5630000,ax
  4218be:	add    BYTE PTR [eax],al
  4218c0:	arpl   WORD PTR ds:0x5630000,ax
  4218c6:	add    BYTE PTR [eax],al
  4218c8:	arpl   WORD PTR ds:0x0,ax
	...
  4218fe:	arpl   WORD PTR ds:0x5630000,ax
  421904:	add    BYTE PTR [eax],al
  421906:	arpl   WORD PTR ds:0x5630000,ax
  42190c:	add    BYTE PTR [eax],al
  42190e:	arpl   WORD PTR ds:0x5630000,ax
  421914:	add    BYTE PTR [eax],al
  421916:	arpl   WORD PTR ds:0x5630000,ax
  42191c:	add    BYTE PTR [eax],al
  42191e:	arpl   WORD PTR ds:0x5630000,ax
  421924:	add    BYTE PTR [eax],al
  421926:	arpl   WORD PTR ds:0x5630000,ax
  42192c:	add    BYTE PTR [eax],al
  42192e:	arpl   WORD PTR ds:0x5630000,ax
  421934:	add    BYTE PTR [eax],al
  421936:	arpl   WORD PTR ds:0x5630000,ax
  42193c:	add    BYTE PTR [eax],al
  42193e:	arpl   WORD PTR ds:0x5630000,ax
  421944:	add    BYTE PTR [eax],al
  421946:	arpl   WORD PTR ds:0x5630000,ax
  42194c:	add    BYTE PTR [eax],al
  42194e:	arpl   WORD PTR ds:0x5630000,ax
  421954:	add    BYTE PTR [eax],al
  421956:	arpl   WORD PTR ds:0x5630000,ax
  42195c:	add    BYTE PTR [eax],al
  42195e:	arpl   WORD PTR ds:0x0,ax
	...
  421994:	arpl   WORD PTR ds:0x5630000,ax
  42199a:	add    BYTE PTR [eax],al
  42199c:	arpl   WORD PTR ds:0x5630000,ax
  4219a2:	add    BYTE PTR [eax],al
  4219a4:	arpl   WORD PTR ds:0x5630000,ax
  4219aa:	add    BYTE PTR [eax],al
  4219ac:	arpl   WORD PTR ds:0x5630000,ax
  4219b2:	add    BYTE PTR [eax],al
  4219b4:	arpl   WORD PTR ds:0x5630000,ax
  4219ba:	add    BYTE PTR [eax],al
  4219bc:	arpl   WORD PTR ds:0x5630000,ax
  4219c2:	add    BYTE PTR [eax],al
  4219c4:	arpl   WORD PTR ds:0x5630000,ax
  4219ca:	add    BYTE PTR [eax],al
  4219cc:	arpl   WORD PTR ds:0x5630000,ax
  4219d2:	add    BYTE PTR [eax],al
  4219d4:	arpl   WORD PTR ds:0x5630000,ax
  4219da:	add    BYTE PTR [eax],al
  4219dc:	arpl   WORD PTR ds:0x5630000,ax
  4219e2:	add    BYTE PTR [eax],al
  4219e4:	arpl   WORD PTR ds:0x5630000,ax
  4219ea:	add    BYTE PTR [eax],al
  4219ec:	arpl   WORD PTR ds:0x5630000,ax
  4219f2:	add    BYTE PTR [eax],al
  4219f4:	add    BYTE PTR [edx],al
  4219f6:	add    BYTE PTR [eax],al
  4219f8:	arpl   WORD PTR ds:0x57b0000,ax
  4219fe:	add    BYTE PTR [eax],al
  421a00:	fbstp  TBYTE PTR [edi]
  421a02:	nop
  421a03:	xor    ch,bh
  421a05:	aaa    
  421a06:	cwde   
  421a07:	xor    bl,bh
  421a09:	aaa    
  421a0a:	mov    al,ds:0xa837bf32
  421a0f:	xor    ah,BYTE PTR [ebx+0x45]
  421a12:	add    DWORD PTR [eax],eax
  421a14:	adc    eax,DWORD PTR ds:0x3f400000
  421a1a:	dec    ebx
  421a1b:	cmp    esi,DWORD PTR [ebx-0x53c4a5c2]
  421a21:	ds push 0x933eb53b
  421a27:	cmp    ebx,ebp
  421a29:	cmp    eax,0x3e1f3ba8
  421a2e:	in     eax,dx
  421a2f:	cmp    ebx,DWORD PTR [eax+0x39]
  421a32:	adc    DWORD PTR [edx+ecx*2],edi
  421a35:	cmp    DWORD PTR [ebp-0x78c838c4],ebx
  421a3b:	ds out 0x3a,al
  421a3e:	xchg   ebp,eax
  421a3f:	ds daa 
  421a41:	cmp    ecx,ebp
  421a43:	ds cld 
  421a45:	cmp    bh,BYTE PTR [esi+0x3f]
  421a48:	loopne 0x421a83
  421a4a:	fwait
  421a4b:	aas    
  421a4c:	retf   0xaf39
  421a4f:	aas    
  421a50:	lods   al,BYTE PTR ds:[esi]
  421a51:	cmp    esp,ecx
  421a53:	aas    
  421a54:	adc    DWORD PTR [edx],edi
  421a56:	out    0x3f,al
  421a58:	sar    BYTE PTR [ecx],cl
  421a5a:	stc    
  421a5b:	aas    
	...
  421a8c:	add    BYTE PTR [eax],al
  421a8e:	aam    0x39
  421a90:	add    BYTE PTR [eax],al
  421a92:	arpl   WORD PTR [ebp+0x1],dx
  421a95:	add    BYTE PTR [edi],cl
  421a97:	add    eax,0x35660000
  421a9c:	sbb    BYTE PTR [eax],dh
  421a9e:	loop   0x421ad4
  421aa0:	xchg   DWORD PTR [eax],esi
  421aa2:	and    eax,0x6314b34
  421aa7:	xor    al,0x66
  421aa9:	xor    DWORD PTR [ebx],edx
  421aab:	xor    al,0x8d
  421aad:	xor    DWORD PTR [edi-0x5ece55cd],edi
  421ab3:	xor    esp,ecx
  421ab5:	xor    DWORD PTR [ebp+0x37],edx
  421ab8:	pop    ss
  421ab9:	xor    bl,BYTE PTR [edi+0x37]
  421abc:	and    esi,DWORD PTR [edx]
  421abe:	cmp    dh,BYTE PTR [edi]
  421ac0:	inc    edx
  421ac1:	xor    bl,BYTE PTR [ebx]
  421ac3:	aaa    
  421ac4:	push   ecx
  421ac5:	xor    cl,BYTE PTR [edi+esi*1]
  421ac8:	pop    esi
  421ac9:	xor    cl,dh
  421acb:	xor    edi,DWORD PTR [ebp+0x32]
  421ace:	loope  0x421b03
  421ad0:	xchg   esp,eax
  421ad1:	xor    ch,dh
  421ad3:	xor    esp,DWORD PTR [edi-0x3dcbf2ce]
  421ad9:	xor    dl,BYTE PTR [ebx]
  421adb:	xor    al,0x8
  421add:	xor    esp,DWORD PTR [ebp+0x34]
  421ae0:	adc    al,0x33
  421ae2:	xchg   BYTE PTR [edx+ebp*1],dh
  421ae5:	xor    esp,DWORD PTR [ecx-0x14cc81cc]
  421aeb:	xor    al,0x95
  421aed:	xor    eax,edx
  421aef:	xor    al,0xab
  421af1:	xor    eax,DWORD PTR [eax]
	...
  421b23:	add    bh,dl
  421b25:	xor    al,0xbe
  421b27:	xor    ebx,DWORD PTR [edx]
  421b29:	xor    eax,0x351733ce
  421b2e:	fnsave [ebx]
  421b30:	add    al,0x35
  421b32:	hlt    
  421b33:	xor    ebp,ecx
  421b35:	xor    al,0xff
  421b37:	xor    ebx,DWORD PTR [esi+0x31]
  421b3a:	or     DWORD PTR [ebp*2-0x7ecbebcf],esi
  421b41:	xor    DWORD PTR [eax],ebp
  421b43:	xor    al,0x7e
  421b45:	xor    DWORD PTR [edx],esi
  421b47:	xor    al,0x14
  421b49:	xor    DWORD PTR [edx+0x34],ebx
  421b4c:	in     eax,0x31
  421b4e:	mov    WORD PTR [ecx+edx*8],?
  421b51:	xor    DWORD PTR [esp+esi*1+0x34eb31a5],ebx
  421b58:	stos   DWORD PTR es:[edi],eax
  421b59:	xor    DWORD PTR [esi*1+0x35233275],ecx
  421b60:	dec    edx
  421b61:	xor    dh,BYTE PTR [ecx]
  421b63:	xor    eax,0x3544324a
  421b68:	pop    ss
  421b69:	xor    bl,BYTE PTR [ebp+0x35]
  421b6c:	add    DWORD PTR [edx],esi
  421b6e:	jno    0x421ba5
  421b70:	fidiv  WORD PTR [edx]
  421b72:	mov    ?,WORD PTR ds:0x35a532d5
  421b78:	arpl   WORD PTR ds:0x5630000,ax
  421b7e:	add    BYTE PTR [eax],al
  421b80:	arpl   WORD PTR ds:0x5630000,ax
	...
  421bba:	arpl   WORD PTR ds:0x5630000,ax
  421bc0:	add    BYTE PTR [eax],al
  421bc2:	arpl   WORD PTR ds:0x5630000,ax
  421bc8:	add    BYTE PTR [eax],al
  421bca:	arpl   WORD PTR ds:0x5630000,ax
  421bd0:	add    BYTE PTR [eax],al
  421bd2:	arpl   WORD PTR ds:0x5630000,ax
  421bd8:	add    BYTE PTR [eax],al
  421bda:	arpl   WORD PTR ds:0x5630000,ax
  421be0:	add    BYTE PTR [eax],al
  421be2:	arpl   WORD PTR ds:0x5630000,ax
  421be8:	add    BYTE PTR [eax],al
  421bea:	arpl   WORD PTR ds:0x5630000,ax
  421bf0:	add    BYTE PTR [eax],al
  421bf2:	arpl   WORD PTR ds:0x5630000,ax
  421bf8:	add    BYTE PTR [eax],al
  421bfa:	arpl   WORD PTR ds:0x5630000,ax
  421c00:	add    BYTE PTR [eax],al
  421c02:	arpl   WORD PTR ds:0x5630000,ax
  421c08:	add    BYTE PTR [eax],al
  421c0a:	arpl   WORD PTR ds:0x5630000,ax
  421c10:	add    BYTE PTR [eax],al
  421c12:	arpl   WORD PTR ds:0x5630000,ax
  421c18:	add    BYTE PTR [eax],al
  421c1a:	arpl   WORD PTR ds:0x0,ax
	...
  421c50:	arpl   WORD PTR ds:0x5630000,ax
  421c56:	add    BYTE PTR [eax],al
  421c58:	arpl   WORD PTR ds:0x5630000,ax
  421c5e:	add    BYTE PTR [eax],al
  421c60:	arpl   WORD PTR ds:0x5630000,ax
  421c66:	add    BYTE PTR [eax],al
  421c68:	arpl   WORD PTR ds:0x5630000,ax
  421c6e:	add    BYTE PTR [eax],al
  421c70:	arpl   WORD PTR ds:0x5630000,ax
  421c76:	add    BYTE PTR [eax],al
  421c78:	arpl   WORD PTR ds:0x5630000,ax
  421c7e:	add    BYTE PTR [eax],al
  421c80:	arpl   WORD PTR ds:0x5630000,ax
  421c86:	add    BYTE PTR [eax],al
  421c88:	arpl   WORD PTR ds:0x5630000,ax
  421c8e:	add    BYTE PTR [eax],al
  421c90:	arpl   WORD PTR ds:0x5630000,ax
  421c96:	add    BYTE PTR [eax],al
  421c98:	arpl   WORD PTR ds:0x5630000,ax
  421c9e:	add    BYTE PTR [eax],al
  421ca0:	arpl   WORD PTR ds:0x5630000,ax
  421ca6:	add    BYTE PTR [eax],al
  421ca8:	arpl   WORD PTR ds:0x5630000,ax
  421cae:	add    BYTE PTR [eax],al
  421cb0:	arpl   WORD PTR ds:0x0,ax
	...
  421ce6:	arpl   WORD PTR ds:0x5630000,ax
  421cec:	add    BYTE PTR [eax],al
  421cee:	arpl   WORD PTR ds:0x25ff0000,ax
  421cf4:	in     al,dx
  421cf5:	and    al,BYTE PTR [edx+0x0]
  421cf8:	jmp    DWORD PTR ds:0x4222f0
  421cfe:	jmp    DWORD PTR ds:0x4222f4
  421d04:	jmp    DWORD PTR ds:0x4222f8
  421d0a:	jmp    DWORD PTR ds:0x4222fc
  421d10:	jmp    DWORD PTR ds:0x422300
  421d16:	jmp    DWORD PTR ds:0x422304
  421d1c:	jmp    DWORD PTR ds:0x422308
  421d22:	jmp    DWORD PTR ds:0x42230c
  421d28:	jmp    DWORD PTR ds:0x422310
  421d2e:	jmp    DWORD PTR ds:0x422314
  421d34:	jmp    DWORD PTR ds:0x422318
  421d3a:	jmp    DWORD PTR ds:0x42231c
  421d40:	jmp    DWORD PTR ds:0x422320
  421d46:	jmp    DWORD PTR ds:0x422324
  421d4c:	jmp    DWORD PTR ds:0x422328
  421d52:	jmp    DWORD PTR ds:0x422330
  421d58:	jmp    DWORD PTR ds:0x422334
  421d5e:	jmp    DWORD PTR ds:0x422338
  421d64:	jmp    DWORD PTR ds:0x42233c
  421d6a:	jmp    DWORD PTR ds:0x422340
  421d70:	jmp    DWORD PTR ds:0x422344
  421d76:	jmp    DWORD PTR ds:0x422348
  421d7c:	jmp    DWORD PTR ds:0x42234c
  421d82:	jmp    DWORD PTR ds:0x422350
  421d88:	jmp    DWORD PTR ds:0x422354
  421d8e:	jmp    DWORD PTR ds:0x422358
  421d94:	jmp    DWORD PTR ds:0x42235c
  421d9a:	jmp    DWORD PTR ds:0x422360
  421da0:	jmp    DWORD PTR ds:0x422364
  421da6:	jmp    DWORD PTR ds:0x422368
  421dac:	jmp    DWORD PTR ds:0x42236c
  421db2:	jmp    DWORD PTR ds:0x422370
  421db8:	jmp    DWORD PTR ds:0x422374
  421dbe:	jmp    DWORD PTR ds:0x422378
  421dc4:	jmp    DWORD PTR ds:0x42237c
  421dca:	jmp    DWORD PTR ds:0x422380
  421dd0:	jmp    DWORD PTR ds:0x422384
  421dd6:	jmp    DWORD PTR ds:0x422388
  421ddc:	jmp    DWORD PTR ds:0x42238c
  421de2:	jmp    DWORD PTR ds:0x422390
  421de8:	jmp    DWORD PTR ds:0x422394
  421dee:	jmp    DWORD PTR ds:0x422398
  421df4:	jmp    DWORD PTR ds:0x42239c
  421dfa:	jmp    DWORD PTR ds:0x4223a0
  421e00:	jmp    DWORD PTR ds:0x4223a4
  421e06:	jmp    DWORD PTR ds:0x4223a8
  421e0c:	jmp    DWORD PTR ds:0x4223ac
  421e12:	jmp    DWORD PTR ds:0x4223b0
  421e18:	jmp    DWORD PTR ds:0x4223b4
  421e1e:	jmp    DWORD PTR ds:0x4223b8
  421e24:	jmp    DWORD PTR ds:0x4223bc
  421e2a:	jmp    DWORD PTR ds:0x4223c0
  421e30:	jmp    DWORD PTR ds:0x4223c4
  421e36:	jmp    DWORD PTR ds:0x4223c8
  421e3c:	jmp    DWORD PTR ds:0x4223cc
  421e42:	jmp    DWORD PTR ds:0x4223d0
  421e48:	jmp    DWORD PTR ds:0x4223d4
  421e4e:	jmp    DWORD PTR ds:0x4223d8
  421e54:	jmp    DWORD PTR ds:0x4223dc
  421e5a:	jmp    DWORD PTR ds:0x4223e0
  421e60:	jmp    DWORD PTR ds:0x4223e4
  421e66:	jmp    DWORD PTR ds:0x4223e8
  421e6c:	jmp    DWORD PTR ds:0x4223ec
  421e72:	jmp    DWORD PTR ds:0x4223f0
  421e78:	jmp    DWORD PTR ds:0x4223f4
  421e7e:	jmp    DWORD PTR ds:0x4223f8
  421e84:	jmp    DWORD PTR ds:0x4223fc
  421e8a:	jmp    DWORD PTR ds:0x422400
  421e90:	jmp    DWORD PTR ds:0x422404
  421e96:	jmp    DWORD PTR ds:0x422408
  421e9c:	jmp    DWORD PTR ds:0x42240c
  421ea2:	jmp    DWORD PTR ds:0x422410
  421ea8:	jmp    DWORD PTR ds:0x422414
  421eae:	jmp    DWORD PTR ds:0x422418
  421eb4:	jmp    DWORD PTR ds:0x42241c
  421eba:	jmp    DWORD PTR ds:0x422424
  421ec0:	jmp    DWORD PTR ds:0x422428
  421ec6:	jmp    DWORD PTR ds:0x42242c
  421ecc:	jmp    DWORD PTR ds:0x422430
  421ed2:	jmp    DWORD PTR ds:0x422434
  421ed8:	jmp    DWORD PTR ds:0x422438
  421ede:	jmp    DWORD PTR ds:0x42243c
  421ee4:	jmp    DWORD PTR ds:0x422440
  421eea:	jmp    DWORD PTR ds:0x422444
  421ef0:	jmp    DWORD PTR ds:0x422448
  421ef6:	jmp    DWORD PTR ds:0x42244c
  421efc:	jmp    DWORD PTR ds:0x422450
  421f02:	jmp    DWORD PTR ds:0x422454
  421f08:	jmp    DWORD PTR ds:0x422458
  421f0e:	jmp    DWORD PTR ds:0x42245c
  421f14:	jmp    DWORD PTR ds:0x422460
  421f1a:	jmp    DWORD PTR ds:0x422464
  421f20:	jmp    DWORD PTR ds:0x422468
  421f26:	jmp    DWORD PTR ds:0x42246c
  421f2c:	jmp    DWORD PTR ds:0x422470
  421f32:	jmp    DWORD PTR ds:0x422474
  421f38:	jmp    DWORD PTR ds:0x42247c
  421f3e:	jmp    DWORD PTR ds:0x422480
  421f44:	jmp    DWORD PTR ds:0x422488
  421f4a:	jmp    DWORD PTR ds:0x42248c
  421f50:	jmp    DWORD PTR ds:0x422490
  421f56:	jmp    DWORD PTR ds:0x422494
  421f5c:	jmp    DWORD PTR ds:0x42249c

Disassembly of section .d:

00423000 <.d>:
	...

Disassembly of section .d2:

00424000 <.d2>:
	...
